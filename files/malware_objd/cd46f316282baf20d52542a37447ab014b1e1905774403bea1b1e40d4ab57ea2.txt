
cd46f316282baf20d52542a37447ab014b1e1905774403bea1b1e40d4ab57ea2.exe:     file format pei-i386


Disassembly of section UPX1:

0042a000 <UPX1>:
  42a000:	sbb    al,BYTE PTR [ebx]
  42a002:	add    BYTE PTR [ecx+0x33],al
  42a005:	mov    ah,bh
  42a007:	xchg   edi,eax
  42a008:	loope  0x42a01a
  42a00a:	out    dx,eax
  42a00b:	pushf  
  42a00c:	adc    DWORD PTR [ebp+0x7d],edx
  42a00f:	ins    BYTE PTR es:[edi],dx
  42a010:	cmc    
  42a011:	cdq    
  42a012:	rep outs dx,BYTE PTR fs:[esi]
  42a015:	in     al,0x4b
  42a017:	adc    edi,edi
  42a019:	pop    esp
  42a01a:	clc    
  42a01b:	dec    edx
  42a01c:	pop    ecx
  42a01d:	test   BYTE PTR [esi+edx*4+0x35],ch
  42a021:	in     al,0x49
  42a023:	pushf  
  42a024:	sbb    esp,DWORD PTR [esi]
  42a026:	and    esp,DWORD PTR [eax*8+0x9454a14]
  42a02d:	mov    DWORD PTR [esi],ebp
  42a02f:	push   ebx
  42a030:	mov    ecx,0x59fc4c86
  42a035:	xchg   edi,eax
  42a036:	push   ss
  42a037:	popf   
  42a038:	sbb    esp,esi
  42a03a:	or     al,ah
  42a03c:	add    DWORD PTR [edi+0x7e8a4a11],esp
  42a042:	mov    bh,0x68
  42a044:	popa   
  42a045:	inc    edi
  42a047:	shl    BYTE PTR [esi+eiz*4-0x36ef45a9],1
  42a04e:	xlat   BYTE PTR ds:[ebx]
  42a04f:	imul   edx,DWORD PTR [eax+0x5f],0x14
  42a053:	and    cl,dh
  42a055:	sahf   
  42a056:	dec    esp
  42a057:	inc    ecx
  42a058:	jns    0x42a030
  42a05a:	repnz add BYTE PTR [edx-0x741f1112],al
  42a061:	sub    ah,BYTE PTR [esi-0x449171d3]
  42a067:	jg     0x42a051
  42a069:	push   edx
  42a06a:	jmp    FWORD PTR [eax-0x27]
  42a06d:	(bad)  
  42a06e:	and    DWORD PTR [edi+edi*8-0x2a],edi
  42a072:	stos   BYTE PTR es:[edi],al
  42a073:	pop    WORD PTR ds:0x2626c9fd
  42a07a:	mov    edi,0xe443f738
  42a07f:	sub    eax,0x85f19dd6
  42a084:	jge    0x42a007
  42a086:	test   BYTE PTR [esi+0x19],ah
  42a089:	sbb    DWORD PTR [ebp+0x33],ebp
  42a08c:	xor    eax,0x87ef8af4
  42a091:	or     edi,DWORD PTR [esp+edi*1]
  42a094:	imul   ecx,DWORD PTR [edi+0x6c],0x10
  42a098:	sub    al,0x92
  42a09a:	data16 loop 0x42a033
  42a09d:	jg     0x42a067
  42a09f:	pop    esi
  42a0a0:	mov    dl,0xa3
  42a0a2:	in     eax,0x27
  42a0a4:	or     BYTE PTR [esi-0x7f7d7980],bl
  42a0aa:	test   eax,0x2280b5b4
  42a0af:	pusha  
  42a0b0:	mov    WORD PTR [eax],ds
  42a0b2:	repnz in al,dx
  42a0b4:	push   esp
  42a0b5:	mov    DWORD PTR [ebx],0x133552db
  42a0bb:	xor    dl,cl
  42a0bd:	adc    al,0x44
  42a0bf:	arpl   WORD PTR [esi-0x38f7ee47],sp
  42a0c5:	push   0x532737fa
  42a0ca:	pusha  
  42a0cb:	inc    eax
  42a0cc:	mov    dl,0x30
  42a0ce:	inc    edx
  42a0cf:	jmp    0x1ad0:0xe5bc1dde
  42a0d6:	je     0x42a137
  42a0d8:	xchg   ebx,eax
  42a0d9:	sahf   
  42a0da:	cmp    ebp,edx
  42a0dc:	loope  0x42a0e5
  42a0de:	pop    ds
  42a0df:	fst    st(5)
  42a0e1:	mov    bh,0x68
  42a0e3:	jmp    0x151c133b
  42a0e8:	fldcw  WORD PTR ds:0xb427d183
  42a0ee:	jecxz  0x42a0a5
  42a0f0:	inc    edx
  42a0f1:	mul    DWORD PTR [ebp+0x3c964037]
  42a0f7:	rol    DWORD PTR [edx],cl
  42a0f9:	jae    0x42a124
  42a0fb:	sbb    cl,0xa9
  42a0fe:	ss mov ah,0xa9
  42a101:	mov    ds:0x228911aa,eax
  42a106:	fadd   DWORD PTR [ebx+0x6bbe4a79]
  42a10c:	xor    DWORD PTR [ecx],edi
  42a10e:	dec    esi
  42a10f:	or     bl,ah
  42a111:	sti    
  42a112:	idiv   DWORD PTR es:[ebx-0x50cc03a3]
  42a119:	imul   edx,DWORD PTR [ebp+0x25],0x1b159fd6
  42a120:	das    
  42a121:	push   0x59
  42a123:	loop   0x42a16b
  42a125:	dec    ebp
  42a126:	adc    ch,al
  42a128:	jo     0x42a110
  42a12a:	data16 ins BYTE PTR es:[edi],dx
  42a12c:	paddsb mm2,QWORD PTR [edx]
  42a12f:	adc    eax,0xef76486d
  42a134:	mov    ds:0xd8d9dc46,al
  42a139:	inc    esp
  42a13a:	xchg   edx,eax
  42a13b:	xchg   ecx,eax
  42a13c:	fild   DWORD PTR [edx-0x2e]
  42a13f:	sbb    al,0xa3
  42a141:	cmp    ebp,DWORD PTR [ebp+0x704e8b01]
  42a147:	adc    BYTE PTR [esp+eiz*8-0x58ae7bad],bl
  42a14e:	sbb    cl,bl
  42a150:	sti    
  42a151:	pop    ds
  42a152:	gs ror BYTE PTR gs:[esi-0x405aea],1
  42a15a:	mov    ah,0x7c
  42a15c:	mov    WORD PTR [edi-0x4929137f],ss
  42a162:	inc    ebx
  42a163:	inc    esi
  42a164:	ficomp WORD PTR [esi-0x13014fac]
  42a16a:	and    BYTE PTR [ecx-0x4a],dl
  42a16d:	das    
  42a16e:	mov    bl,0xcf
  42a170:	mov    ds:0x59c96cee,al
  42a175:	stos   BYTE PTR es:[edi],al
  42a176:	xchg   ebp,eax
  42a177:	mov    bh,0xb1
  42a179:	lods   eax,DWORD PTR ds:[esi]
  42a17a:	xor    ah,BYTE PTR [eax]
  42a17c:	enter  0x6881,0xe8
  42a180:	xchg   ebp,eax
  42a181:	int3   
  42a182:	inc    esi
  42a183:	aad    0x3f
  42a185:	sub    al,0x7c
  42a187:	popf   
  42a188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a189:	jmp    0x8100b0bc
  42a18e:	adc    BYTE PTR [eax-0x65],dl
  42a191:	cld    
  42a192:	jmp    0x42a171
  42a194:	xor    al,0xb9
  42a196:	fnstenv [ecx-0xb]
  42a199:	jnp    0x42a19a
  42a19b:	call   0x5c29:0xe7bb673b
  42a1a2:	loope  0x42a130
  42a1a4:	mov    WORD PTR [ebp+eax*2-0x61],gs
  42a1a8:	cld    
  42a1a9:	adc    bl,bl
  42a1ab:	sub    cl,BYTE PTR [esi+0x10067fa9]
  42a1b1:	ds out dx,al
  42a1b3:	cmp    al,0x48
  42a1b5:	fsub   DWORD PTR [ebx]
  42a1b7:	ret    0xf550
  42a1ba:	fisubr WORD PTR [eax-0x4c]
  42a1bd:	xchg   DWORD PTR [ebx],ebp
  42a1bf:	sub    DWORD PTR [edi-0x4d],0xd5571705
  42a1c6:	or     DWORD PTR [edx],eax
  42a1c8:	ret    0x4cb
  42a1cb:	in     eax,0x5d
  42a1cd:	(bad)  
  42a1ce:	sub    al,BYTE PTR [esi-0x25]
  42a1d1:	ss cwde 
  42a1d3:	mov    edx,0xf07aa78
  42a1d8:	xchg   BYTE PTR [esi+0x52],bl
  42a1db:	test   dh,dh
  42a1dd:	call   FWORD PTR [edi-0x19]
  42a1e0:	push   0x326f27e0
  42a1e5:	dec    ebx
  42a1e6:	fwait
  42a1e7:	pusha  
  42a1e8:	and    DWORD PTR [eax+edx*1],ebp
  42a1eb:	push   esi
  42a1ec:	mov    DWORD PTR [edi-0x5c],esi
  42a1ef:	sub    bl,cl
  42a1f1:	sbb    eax,0x9d878b39
  42a1f6:	inc    ebx
  42a1f7:	cli    
  42a1f8:	in     eax,dx
  42a1f9:	addr16 inc esi
  42a1fb:	jg     0x42a237
  42a1fd:	jbe    0x42a193
  42a1ff:	je     0x42a1b4
  42a201:	and    ch,dl
  42a203:	mov    dh,0x10
  42a205:	gs push eax
  42a207:	cvtpi2ps xmm6,QWORD PTR [edx-0x25afb3da]
  42a20e:	mov    ah,0xdf
  42a210:	jecxz  0x42a1f4
  42a212:	mov    edx,0x91da46f
  42a217:	cmp    eax,0x564b98a7
  42a21c:	aad    0x3
  42a21e:	(bad)  ds:0x501d16f0
  42a224:	sub    BYTE PTR ds:0x814b72c3,bl
  42a22a:	fst    QWORD PTR [edx]
  42a22c:	mov    dl,0x20
  42a22e:	xlat   BYTE PTR ds:[ebx]
  42a22f:	push   edx
  42a230:	cld    
  42a231:	inc    ecx
  42a232:	fsub   QWORD PTR [edi+edx*8+0x61]
  42a236:	mov    cl,0xb5
  42a238:	dec    edi
  42a239:	repz inc esp
  42a23b:	cmc    
  42a23c:	xchg   BYTE PTR [eax-0x21],ah
  42a23f:	das    
  42a240:	mov    esp,0x15d2e71a
  42a245:	xchg   DWORD PTR [ebp+0x49],ecx
  42a248:	mov    cl,0x95
  42a24a:	inc    edx
  42a24c:	cmp    eax,0x8a32233f
  42a251:	sub    bh,BYTE PTR [esi+0x264eea4f]
  42a257:	call   0xa4828314
  42a25c:	and    al,BYTE PTR [ebp-0x3960ed65]
  42a262:	mov    ebp,0xea6389c9
  42a267:	push   ss
  42a268:	cmp    eax,0xdaf59bb
  42a26d:	pop    ecx
  42a26e:	(bad)  
  42a26f:	xchg   ebp,eax
  42a270:	pop    ebp
  42a271:	add    BYTE PTR [ebx+0x35a78ed3],0x1d
  42a278:	imul   edi,DWORD PTR [ebx+edx*1],0x30
  42a27c:	dec    ebx
  42a27d:	sub    BYTE PTR [edx],dh
  42a27f:	int    0x82
  42a281:	in     eax,dx
  42a282:	mov    ch,0x4
  42a284:	cdq    
  42a285:	pushf  
  42a286:	xor    al,0x83
  42a288:	jmp    0xd4475ca7
  42a28d:	add    BYTE PTR [edi-0x9],bl
  42a290:	mov    ecx,0x677915c
  42a295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a296:	not    DWORD PTR [ecx]
  42a298:	(bad)  
  42a299:	cdq    
  42a29a:	push   ss
  42a29b:	imul   edi,eax,0x39eb6b84
  42a2a1:	push   esi
  42a2a2:	fsub   QWORD PTR [ebx-0x602b2367]
  42a2a8:	fidivr DWORD PTR [ebp+0x77]
  42a2ab:	fwait
  42a2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2ad:	int3   
  42a2ae:	lahf   
  42a2af:	jno    0x42a302
  42a2b1:	mov    eax,ds:0xe797ee55
  42a2b6:	mov    esi,0x29bd3a21
  42a2bb:	shr    BYTE PTR [ecx-0xb3b1024],cl
  42a2c1:	xchg   esp,eax
  42a2c2:	mov    eax,0x4b9036db
  42a2c7:	daa    
  42a2c8:	jno    0x42a321
  42a2ca:	dec    BYTE PTR [ebx-0x5ba7a376]
  42a2d0:	sahf   
  42a2d1:	adc    al,0xa5
  42a2d3:	fbstp  TBYTE PTR [edi-0x75]
  42a2d6:	xchg   BYTE PTR [eax+0x14],ch
  42a2d9:	sub    dl,ah
  42a2db:	pusha  
  42a2dc:	push   0xb4357ab0
  42a2e1:	jge    0x42a34c
  42a2e3:	mov    WORD PTR [ecx-0x27],?
  42a2e6:	sbb    dl,bh
  42a2e8:	pop    esp
  42a2e9:	dec    esi
  42a2ea:	add    eax,0x871e53cd
  42a2ef:	stc    
  42a2f0:	inc    ebp
  42a2f1:	js     0x42a311
  42a2f3:	add    ecx,DWORD PTR [edi-0x34]
  42a2f6:	jne    0x42a36a
  42a2f8:	xor    al,0x3e
  42a2fa:	mov    al,0x2e
  42a2fc:	loope  0x42a2a6
  42a2fe:	imul   ebx,DWORD PTR [ebx],0xffffff81
  42a301:	dec    esp
  42a302:	loopne 0x42a293
  42a304:	xchg   ecx,eax
  42a305:	(bad)
  42a308:	fidiv  WORD PTR [eax-0x134e93bc]
  42a30e:	jns    0x42a293
  42a310:	xchg   ebp,eax
  42a311:	xor    dl,BYTE PTR [edx-0x11d052ab]
  42a317:	addr16 inc esp
  42a319:	inc    ebx
  42a31a:	leave  
  42a31b:	xor    al,BYTE PTR ds:0xfd64aaf0
  42a321:	add    bl,BYTE PTR [eax-0x73]
  42a324:	lock aam 0xd7
  42a327:	sub    BYTE PTR [edx+0x49a7a679],bl
  42a32d:	mov    ds:0xd341b448,al
  42a332:	cmp    ch,BYTE PTR [eax+0x3c]
  42a335:	fisub  WORD PTR [edx]
  42a337:	mov    ebp,0xd63491a9
  42a33c:	xor    DWORD PTR [edx],edi
  42a33e:	jle    0x42a3b5
  42a340:	add    al,0x9f
  42a342:	pop    ds
  42a343:	jecxz  0x42a2ff
  42a345:	xchg   ecx,eax
  42a346:	and    DWORD PTR [esi],ebp
  42a348:	fs dec edi
  42a34a:	mov    ds:0x69f40d59,eax
  42a34f:	and    BYTE PTR [edx],dh
  42a351:	bound  ebx,QWORD PTR [edi]
  42a353:	popf   
  42a354:	(bad)  [eax-0x26622e59]
  42a35a:	push   es
  42a35b:	pop    eax
  42a35c:	pop    ecx
  42a35d:	retf   0xf661
  42a360:	push   edx
  42a361:	sbb    eax,0xe7dad041
  42a366:	stos   DWORD PTR es:[edi],eax
  42a367:	test   al,0xc4
  42a369:	daa    
  42a36a:	inc    ebp
  42a36b:	mov    ecx,edx
  42a36d:	outs   dx,DWORD PTR ds:[esi]
  42a36e:	test   eax,0x84d7de80
  42a373:	or     BYTE PTR [esi-0x4846805d],ah
  42a379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a37b:	xchg   ecx,eax
  42a37c:	sbb    dh,ah
  42a37e:	push   ss
  42a37f:	outs   dx,BYTE PTR ds:[esi]
  42a380:	xor    al,bl
  42a382:	int3   
  42a383:	push   ebp
  42a384:	jbe    0x42a37f
  42a386:	mov    bh,0x19
  42a388:	(bad)  
  42a389:	mov    al,ds:0xcf5c590f
  42a38e:	or     eax,0x4438dc28
  42a393:	cmc    
  42a394:	imul   esi
  42a396:	fdivr  QWORD PTR [edx]
  42a398:	mov    esi,ebp
  42a39a:	shr    DWORD PTR [ecx-0x1cd6e19],cl
  42a3a0:	cmc    
  42a3a1:	mov    esi,0xc37515f7
  42a3a6:	ss clc 
  42a3a8:	outs   dx,DWORD PTR ds:[esi]
  42a3a9:	inc    eax
  42a3aa:	lea    esp,[ebx-0x693c01eb]
  42a3b0:	pusha  
  42a3b1:	cmp    al,0x3e
  42a3b3:	fnstenv [ebx+edx*1]
  42a3b6:	in     al,0x6e
  42a3b8:	adc    BYTE PTR [ebx-0x23],0xd2
  42a3bc:	shl    BYTE PTR [edi-0x57],cl
  42a3bf:	or     bh,0x79
  42a3c2:	sbb    DWORD PTR [ecx-0x53],esi
  42a3c5:	push   ebp
  42a3c6:	sub    eax,0x1fdac628
  42a3cb:	dec    esp
  42a3cc:	mov    bl,0x7f
  42a3ce:	not    DWORD PTR [edx]
  42a3d0:	outs   dx,BYTE PTR ds:[esi]
  42a3d1:	sbb    cl,dh
  42a3d3:	jne    0x42a3db
  42a3d5:	xchg   edi,eax
  42a3d6:	add    al,0xb6
  42a3d8:	push   0xffffffd3
  42a3da:	mov    eax,ds:0x310634f7
  42a3df:	dec    esp
  42a3e0:	jmp    FWORD PTR ds:0xad31f00b
  42a3e6:	pop    esp
  42a3e7:	jle    0x42a3cb
  42a3e9:	pop    esp
  42a3ea:	mov    esi,ecx
  42a3ec:	cwde   
  42a3ed:	adc    bl,BYTE PTR [ecx-0x11]
  42a3f0:	call   0x4910:0xca59ef47
  42a3f7:	(bad)  
  42a3f8:	adc    edi,DWORD PTR [edx+0x7e0ac98]
  42a3fe:	or     DWORD PTR [bx+di-0x1d],esp
  42a402:	pop    ebp
  42a403:	pop    ebp
  42a404:	jo     0x42a3e2
  42a406:	push   DWORD PTR [edi+ebp*4]
  42a409:	cmp    eax,0x617871a8
  42a40e:	add    eax,0x7c309696
  42a413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a414:	outs   dx,DWORD PTR ds:[esi]
  42a415:	xlat   BYTE PTR ds:[ebx]
  42a416:	xchg   ebp,eax
  42a417:	hlt    
  42a418:	xchg   esp,eax
  42a419:	fwait
  42a41a:	js     0x42a40b
  42a41c:	cmp    DWORD PTR ds:0x46f673a3,0xffffffab
  42a423:	mov    edx,DWORD PTR [ebp-0x3b]
  42a426:	pusha  
  42a427:	push   esp
  42a428:	iret   
  42a429:	loop   0x42a463
  42a42b:	dec    ebp
  42a42c:	cdq    
  42a42d:	mov    es,WORD PTR [edx-0x68]
  42a430:	ret    
  42a431:	test   DWORD PTR [eax],esp
  42a433:	mov    al,0xf6
  42a435:	in     al,0xf
  42a437:	lea    ebp,[edx]
  42a439:	cmp    eax,0x9ec6e265
  42a43e:	jne    0x42a3ce
  42a440:	mov    al,0xbb
  42a442:	aaa    
  42a443:	(bad)  
  42a444:	and    DWORD PTR [edx],esp
  42a446:	test   DWORD PTR [edi],esp
  42a448:	les    ebp,FWORD PTR [eax+esi*4]
  42a44b:	loop   0x42a3dd
  42a44d:	cmp    al,0xa1
  42a44f:	cmp    BYTE PTR [esi+ecx*2],0x3f
  42a453:	push   edx
  42a454:	cmp    DWORD PTR [edi],ebx
  42a456:	and    ebx,DWORD PTR [esi+0x27]
  42a459:	data16 jecxz 0x42a4d4
  42a45c:	pushf  
  42a45d:	mov    esp,0xce0c0893
  42a462:	jnp    0x42a4c2
  42a464:	cmp    BYTE PTR [edx+0x1f9faa57],ah
  42a46a:	jbe    0x42a4e8
  42a46c:	mov    eax,0xfa64885
  42a471:	mov    ch,0x78
  42a473:	mov    esp,0x710fb68c
  42a478:	jne    0x42a493
  42a47a:	std    
  42a47b:	mov    eax,0x2df35f2d
  42a480:	mov    esp,DWORD PTR [edx-0x50bac247]
  42a486:	ds inc ecx
  42a488:	sbb    eax,0xba75dbf3
  42a48d:	sub    al,BYTE PTR [esi-0x359b943e]
  42a493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a494:	dec    esp
  42a495:	or     ebp,DWORD PTR [ebx-0x23]
  42a498:	stc    
  42a499:	cld    
  42a49a:	and    DWORD PTR cs:[eax+0x2085a209],ebp
  42a4a1:	mov    ecx,0x4b975cd0
  42a4a6:	sub    DWORD PTR [ecx+0x53],ebx
  42a4a9:	jmp    FWORD PTR [esi+0x2e00e85c]
  42a4af:	push   esi
  42a4b0:	jmp    0x417b:0x8107271f
  42a4b7:	popa   
  42a4b8:	jle    0x42a4b7
  42a4ba:	test   BYTE PTR [ebp+0x122d7173],0xe6
  42a4c1:	xchg   esp,eax
  42a4c2:	fwait
  42a4c3:	aad    0x9
  42a4c5:	jb     0x42a485
  42a4c7:	push   ecx
  42a4c8:	pop    ss
  42a4c9:	gs dec esi
  42a4cb:	fsubr  QWORD PTR [ecx+0x2b]
  42a4ce:	out    dx,al
  42a4cf:	fcom   QWORD PTR [esi+ecx*8]
  42a4d2:	lods   eax,DWORD PTR ds:[esi]
  42a4d3:	sbb    bl,bh
  42a4d5:	fisub  WORD PTR [esi+esi*8-0x646bb43c]
  42a4dc:	dec    ebx
  42a4dd:	push   esi
  42a4de:	pop    ecx
  42a4df:	mov    ebp,0xaa753603
  42a4e4:	fwait
  42a4e5:	call   FWORD PTR [ecx]
  42a4e7:	pop    ecx
  42a4e8:	inc    esp
  42a4e9:	jb     0x42a50c
  42a4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4ec:	into   
  42a4ed:	cmp    DWORD PTR [esi+0x75],ecx
  42a4f0:	in     eax,dx
  42a4f1:	leave  
  42a4f2:	out    0xa,eax
  42a4f4:	sub    dh,dh
  42a4f6:	cld    
  42a4f7:	scas   al,BYTE PTR es:[edi]
  42a4f8:	idiv   ah
  42a4fa:	out    0x79,al
  42a4fc:	dec    edi
  42a4fd:	push   edi
  42a4fe:	js     0x42a564
  42a500:	(bad)  
  42a501:	cmp    edi,edx
  42a503:	shl    ah,0x5d
  42a506:	addr16 adc ebp,edx
  42a509:	jmp    0x42a573
  42a50b:	sub    DWORD PTR [edi],0xffffff94
  42a50e:	dec    ebx
  42a50f:	(bad)  
  42a512:	retf   0x8fea
  42a515:	dec    ebp
  42a516:	mov    edi,0xcee2a1a
  42a51b:	add    al,0x4
  42a51d:	adc    ebx,esp
  42a51f:	aam    0xc9
  42a521:	add    al,0xa3
  42a523:	push   0x16
  42a525:	pop    edx
  42a526:	shl    DWORD PTR [esi-0x782ff4dd],cl
  42a52c:	push   edx
  42a52d:	sahf   
  42a52e:	adc    BYTE PTR [esi-0x7ec6672e],ah
  42a534:	pusha  
  42a535:	jp     0x42a501
  42a537:	ja     0x42a5b5
  42a539:	dec    ebx
  42a53a:	(bad)  
  42a53d:	int3   
  42a53e:	or     eax,0x3463168c
  42a543:	cmp    al,0xf9
  42a545:	loop   0x42a599
  42a547:	hlt    
  42a548:	add    al,0x87
  42a54a:	ret    
  42a54b:	dec    edi
  42a54c:	pop    esi
  42a54d:	mov    ecx,0x4c474ba2
  42a552:	mov    DWORD PTR [ebx+0xb47a016],ebx
  42a558:	scas   eax,DWORD PTR es:[edi]
  42a559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a55a:	repz cmc 
  42a55c:	sub    DWORD PTR [eax],ecx
  42a55e:	cmp    BYTE PTR [ebx],dl
  42a560:	sti    
  42a561:	jns    0x42a591
  42a563:	mov    ds:0x99d07316,eax
  42a568:	push   esp
  42a569:	cwde   
  42a56a:	push   0x73345da0
  42a56f:	ins    BYTE PTR es:[edi],dx
  42a570:	dec    edx
  42a571:	xlat   BYTE PTR ss:[ebx]
  42a573:	push   ss
  42a574:	pop    ecx
  42a575:	adc    eax,0xa5525f76
  42a57a:	mov    ecx,0x9f9fc209
  42a57f:	xor    eax,0x7026ba5e
  42a584:	pop    edi
  42a585:	nop
  42a586:	mov    al,ds:0x267e96a8
  42a58b:	mov    dh,BYTE PTR [ebx]
  42a58d:	mov    ebx,0x786f84cb
  42a592:	push   ebp
  42a593:	push   edi
  42a594:	jl     0x42a56d
  42a596:	push   0x19402881
  42a59b:	gs jmp 0x42a567
  42a59e:	cmc    
  42a59f:	or     esi,DWORD PTR [ebp+edx*4+0x7c7de225]
  42a5a6:	(bad)  
  42a5a7:	mov    ds:0x61623a6f,eax
  42a5ac:	mov    WORD PTR [esi+ebp*4-0x65],fs
  42a5b0:	mov    edx,0x2bd6bfbe
  42a5b5:	push   0xb1fdcb6e
  42a5ba:	sub    BYTE PTR [edi-0x58],dl
  42a5bd:	push   ebp
  42a5be:	xor    ebp,ecx
  42a5c0:	adc    al,BYTE PTR [esi-0x47]
  42a5c3:	and    eax,0xb13abf6b
  42a5c8:	xor    al,BYTE PTR [edx+0x2fe40361]
  42a5ce:	jecxz  0x42a5a7
  42a5d0:	mov    cs,WORD PTR [edx+0x2c029a28]
  42a5d6:	mov    esp,0xf2742aef
  42a5db:	add    DWORD PTR [edx+0x51],0x8735e402
  42a5e2:	mov    bl,0xba
  42a5e4:	cmp    eax,0x6e5fa6a5
  42a5e9:	pop    esi
  42a5ea:	popa   
  42a5eb:	dec    ebp
  42a5ec:	repz jmp 0x42a5c1
  42a5ef:	add    DWORD PTR [edi-0x36fb096d],esp
  42a5f5:	mov    dh,0xab
  42a5f7:	pop    ds
  42a5f8:	mov    ds:0x3c3110e4,eax
  42a5fd:	cli    
  42a5fe:	rcl    DWORD PTR [esi+ebp*2],cl
  42a601:	mov    cl,BYTE PTR [ebx]
  42a603:	clc    
  42a604:	xchg   esi,eax
  42a605:	pop    esp
  42a606:	cmp    esp,DWORD PTR [ebx]
  42a608:	neg    BYTE PTR [ebx+0x55af6918]
  42a60e:	iret   
  42a60f:	cmp    BYTE PTR [ebx+0x7d],0x5a
  42a613:	outs   dx,BYTE PTR ds:[esi]
  42a614:	cmp    al,0x3b
  42a616:	ja     0x42a61c
  42a618:	mov    al,ds:0x3cfe501d
  42a61d:	push   esp
  42a61e:	sbb    al,0x1b
  42a620:	(bad)
  42a624:	jle    0x42a5c9
  42a626:	shr    BYTE PTR [ecx+0x6b780a3d],cl
  42a62c:	aas    
  42a62d:	mov    bl,0x57
  42a62f:	push   eax
  42a630:	xchg   ecx,eax
  42a631:	test   ah,ch
  42a633:	int    0x8f
  42a635:	mov    al,ds:0x3fd927da
  42a63a:	and    DWORD PTR [edx*1+0x764e3328],ebx
  42a641:	test   al,0xa8
  42a643:	ins    DWORD PTR es:[edi],dx
  42a644:	clc    
  42a645:	xor    eax,0x87e8693a
  42a64a:	xchg   edi,eax
  42a64b:	in     eax,0x7c
  42a64d:	xor    ah,cl
  42a64f:	or     DWORD PTR [esi-0x66d8bf1d],eax
  42a655:	repnz mov dh,0xb4
  42a658:	outs   dx,BYTE PTR ds:[esi]
  42a659:	jl     0x42a6cc
  42a65b:	mov    BYTE PTR [ebp-0x1bda5b99],ah
  42a661:	aas    
  42a662:	mov    eax,0xd03b576
  42a667:	mov    ah,0x86
  42a669:	push   ecx
  42a66a:	stc    
  42a66b:	xchg   ecx,eax
  42a66c:	sub    bh,BYTE PTR [ecx]
  42a66e:	or     ebp,esp
  42a670:	fdiv   QWORD PTR [ebx+ecx*1-0x77]
  42a674:	inc    ebx
  42a675:	mov    dl,0x92
  42a677:	stos   BYTE PTR es:[edi],al
  42a678:	popf   
  42a679:	mov    al,0xa8
  42a67b:	xchg   edx,eax
  42a67c:	stc    
  42a67d:	cdq    
  42a67e:	ja     0x42a69a
  42a680:	jo     0x42a6d9
  42a682:	icebp  
  42a683:	sbb    BYTE PTR [eax],dh
  42a685:	outs   dx,DWORD PTR ds:[esi]
  42a686:	push   0xffffffa8
  42a688:	adc    esi,esi
  42a68a:	push   esi
  42a68b:	pushf  
  42a68c:	adc    DWORD PTR [edi+ebx*1-0x59],ebp
  42a690:	jb     0x42a680
  42a692:	popa   
  42a693:	jae    0x42a712
  42a695:	lahf   
  42a696:	mov    esp,DWORD PTR [esi-0x1cd8a633]
  42a69c:	push   eax
  42a69d:	adc    ah,dh
  42a69f:	pop    ebx
  42a6a0:	jecxz  0x42a645
  42a6a2:	daa    
  42a6a3:	or     al,0x58
  42a6a5:	loop   0x42a6ae
  42a6a7:	test   DWORD PTR [ebx+0x4c],0x13c1797d
  42a6ae:	add    BYTE PTR [edi],0x9f
  42a6b1:	out    0x54,eax
  42a6b3:	dec    edx
  42a6b4:	xchg   esi,eax
  42a6b5:	ret    0x3d2f
  42a6b8:	aad    0x66
  42a6ba:	sub    al,0x87
  42a6bc:	mov    esp,0x56c3671e
  42a6c1:	sbb    eax,0x2016d2e5
  42a6c6:	ss pop edi
  42a6c8:	shr    ch,0xf9
  42a6cb:	hlt    
  42a6cc:	sbb    ah,BYTE PTR [esp+esi*1-0x33]
  42a6d0:	bound  edi,QWORD PTR [ecx]
  42a6d2:	popa   
  42a6d3:	mov    eax,0x1b7c287c
  42a6d8:	and    al,0x25
  42a6da:	xchg   DWORD PTR [ebp-0x49],esi
  42a6dd:	lods   al,BYTE PTR ds:[esi]
  42a6de:	lods   al,BYTE PTR ds:[esi]
  42a6df:	xchg   esp,esi
  42a6e1:	dec    edi
  42a6e2:	mov    WORD PTR [edi],fs
  42a6e4:	rcl    BYTE PTR [ecx+0x6df4c1ab],0x78
  42a6eb:	retf   
  42a6ec:	mov    ah,0xaa
  42a6ee:	dec    eax
  42a6ef:	(bad)  
  42a6f0:	push   ecx
  42a6f1:	outs   dx,DWORD PTR ds:[esi]
  42a6f2:	les    esp,FWORD PTR [ebx]
  42a6f4:	push   edi
  42a6f5:	div    bl
  42a6f7:	mov    cl,0x28
  42a6f9:	mov    bl,0x1c
  42a6fb:	pop    ebp
  42a6fc:	cld    
  42a6fd:	(bad)  
  42a6fe:	dec    ebx
  42a6ff:	push   ss
  42a700:	or     al,0xed
  42a702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a703:	jns    0x42a76f
  42a705:	stos   BYTE PTR es:[edi],al
  42a706:	mov    al,0x1f
  42a708:	inc    esp
  42a709:	iret   
  42a70a:	xor    eax,0x34fc5170
  42a70f:	int    0x5b
  42a711:	dec    ecx
  42a712:	pushf  
  42a713:	and    al,0xf4
  42a715:	pop    eax
  42a716:	cli    
  42a717:	aam    0x2d
  42a719:	push   esp
  42a71a:	outs   dx,BYTE PTR ds:[esi]
  42a71b:	xchg   edi,eax
  42a71c:	push   0xffffffde
  42a71e:	ins    BYTE PTR es:[edi],dx
  42a71f:	cmp    bl,BYTE PTR [eax]
  42a721:	lahf   
  42a722:	push   cs
  42a723:	add    al,0xdc
  42a725:	mul    esi
  42a727:	inc    esi
  42a728:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a729:	or     BYTE PTR [eax+0x789cf69b],ah
  42a72f:	xchg   ebx,eax
  42a730:	add    ecx,DWORD PTR [esi]
  42a732:	adc    al,0x7b
  42a734:	add    esi,ebp
  42a736:	ret    0xbab2
  42a739:	mov    dl,BYTE PTR [ecx+0x7f]
  42a73c:	inc    eax
  42a73d:	into   
  42a73e:	push   edi
  42a73f:	mov    eax,ds:0xb06ffef3
  42a744:	enter  0x8d6f,0xb3
  42a748:	sub    DWORD PTR [ebp+0x2e9f94b0],esp
  42a74e:	in     al,0x12
  42a750:	daa    
  42a751:	cwde   
  42a752:	shr    BYTE PTR [edx-0x41],1
  42a755:	loopne 0x42a7aa
  42a757:	mov    dh,0x6
  42a759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a75a:	rol    DWORD PTR [eax+0x5d78b69b],0x87
  42a761:	sbb    al,dl
  42a763:	sbb    edi,ebp
  42a765:	pop    esi
  42a766:	test   eax,0x6b192c99
  42a76b:	push   eax
  42a76c:	pop    ebp
  42a76d:	scas   al,BYTE PTR es:[edi]
  42a76e:	cld    
  42a76f:	jne    0x42a716
  42a771:	fidiv  WORD PTR ds:0x8232bdb1
  42a777:	cmc    
  42a778:	jle    0x42a782
  42a77a:	mov    ds:0x5c967ceb,eax
  42a77f:	add    esp,ebp
  42a781:	xchg   BYTE PTR [edi-0x47836061],cl
  42a787:	add    al,0xeb
  42a789:	xor    dl,al
  42a78b:	jb     0x42a723
  42a78d:	outs   dx,BYTE PTR ds:[esi]
  42a78e:	cs rcr edx,cl
  42a791:	mov    esi,0x4c66b676
  42a796:	jb     0x42a7d5
  42a798:	or     esp,ebx
  42a79a:	push   cs
  42a79b:	dec    ebp
  42a79c:	shl    BYTE PTR [esi-0x66],0x82
  42a7a0:	ror    DWORD PTR [ebx-0x42],1
  42a7a3:	adc    edx,eax
  42a7a5:	es iret 
  42a7a7:	in     al,dx
  42a7a8:	adc    DWORD PTR [edx],0x1b
  42a7ab:	jmp    0x21cf:0x5488a8ef
  42a7b2:	int    0x51
  42a7b4:	add    BYTE PTR [edx],dl
  42a7b6:	into   
  42a7b7:	push   bp
  42a7b9:	inc    edx
  42a7ba:	lock add eax,0xb5d2856c
  42a7c0:	dec    ebx
  42a7c1:	outs   dx,BYTE PTR ds:[esi]
  42a7c2:	stos   BYTE PTR es:[edi],al
  42a7c3:	cli    
  42a7c4:	loop   0x42a78f
  42a7c6:	ds jb  0x42a825
  42a7c9:	xor    BYTE PTR [esi+0x12257652],0xac
  42a7d0:	pushf  
  42a7d1:	das    
  42a7d2:	mov    ah,bh
  42a7d4:	mov    cl,0x3e
  42a7d6:	in     eax,0xc0
  42a7d8:	and    eax,0xb5d3ce7e
  42a7dd:	mov    bl,0x54
  42a7df:	in     al,0x88
  42a7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7e2:	mov    esp,ebx
  42a7e4:	rol    DWORD PTR [esi],1
  42a7e6:	mov    ch,bl
  42a7e8:	dec    edi
  42a7e9:	sbb    esi,DWORD PTR [esi+0x66]
  42a7ec:	jg     0x42a7a2
  42a7ee:	popf   
  42a7ef:	test   al,0x7e
  42a7f1:	or     eax,DWORD PTR [eax]
  42a7f3:	push   esi
  42a7f4:	retf   
  42a7f5:	push   ds
  42a7f6:	xchg   esi,eax
  42a7f7:	pop    esi
  42a7f8:	iret   
  42a7f9:	add    eax,0x6694c181
  42a7fe:	add    eax,0xd6efa07f
  42a803:	into   
  42a804:	pop    ss
  42a805:	jmp    0x42a7c3
  42a807:	adc    eax,0x6ac02c82
  42a80c:	fcomp  st(0)
  42a80e:	inc    eax
  42a80f:	jmp    0xe8:0x12f777a6
  42a816:	ffreep st(7)
  42a818:	jb     0x42a79a
  42a81a:	out    dx,al
  42a81b:	dec    esp
  42a81c:	(bad)  
  42a81d:	dec    esi
  42a81e:	inc    esp
  42a81f:	xchg   ebp,eax
  42a820:	repnz ins BYTE PTR es:[edi],dx
  42a822:	xor    BYTE PTR [esi-0x23e3b14],ah
  42a828:	cmp    ebp,DWORD PTR [esi]
  42a82a:	mov    ebp,0xfab4cfcf
  42a82f:	sub    al,0x1
  42a831:	mov    esi,0xd86c273d
  42a836:	add    al,0x11
  42a838:	xlat   BYTE PTR ds:[ebx]
  42a839:	xor    esp,DWORD PTR [esi-0x7c8f8b96]
  42a83f:	and    eax,0xd88b0e5f
  42a844:	push   ds
  42a845:	jmp    0x32a94c4c
  42a84a:	xor    eax,ebp
  42a84c:	jne    0x42a85c
  42a84e:	jmp    0x42a80a
  42a850:	clc    
  42a851:	imul   edi,esi,0x1731630
  42a857:	jmp    0x42a8d6
  42a859:	push   cs
  42a85a:	push   edx
  42a85b:	mov    ebp,0x45fb90f1
  42a860:	out    0xdb,al
  42a862:	push   ecx
  42a863:	test   eax,0x20935aa2
  42a868:	xchg   ebp,eax
  42a869:	(bad)  
  42a86a:	xlat   BYTE PTR ds:[ebx]
  42a86b:	(bad)  
  42a86c:	jecxz  0x42a832
  42a86e:	xchg   ebp,eax
  42a86f:	outs   dx,BYTE PTR ds:[esi]
  42a870:	push   ds
  42a871:	sub    BYTE PTR [ecx+0x63],dh
  42a874:	sub    BYTE PTR [esi+0x15d99916],ah
  42a87a:	stos   DWORD PTR es:[edi],eax
  42a87b:	ret    0xcf84
  42a87e:	dec    edx
  42a87f:	ds mov ebx,0x5181cd2c
  42a885:	dec    edx
  42a886:	es pop edi
  42a888:	icebp  
  42a889:	and    DWORD PTR [edi+0xa47ee50],edi
  42a88f:	mov    ebx,DWORD PTR [esp+edx*2]
  42a892:	cmp    BYTE PTR [edx],ch
  42a894:	cmp    eax,0x5318b218
  42a899:	fdivrp st(0),st
  42a89b:	push   0xffffff87
  42a89d:	xlat   BYTE PTR ds:[ebx]
  42a89e:	in     eax,0xb2
  42a8a0:	lods   al,BYTE PTR ds:[esi]
  42a8a1:	aas    
  42a8a2:	nop
  42a8a3:	xchg   ebp,eax
  42a8a4:	(bad)  
  42a8a5:	pop    ecx
  42a8a6:	ret    0x3563
  42a8a9:	push   es
  42a8aa:	repz xlat BYTE PTR ds:[ebx]
  42a8ac:	inc    esp
  42a8ad:	mov    ds:0x6170118a,eax
  42a8b2:	test   al,0xd2
  42a8b4:	inc    ecx
  42a8b5:	pop    eax
  42a8b6:	pop    ebx
  42a8b7:	loope  0x42a8d5
  42a8b9:	pop    ecx
  42a8ba:	xchg   BYTE PTR [esi+0x27],dl
  42a8bd:	xor    edi,ecx
  42a8bf:	sub    al,0x1e
  42a8c1:	jecxz  0x42a8d8
  42a8c3:	inc    ebp
  42a8c4:	repz sub DWORD PTR [ecx-0x2d],edi
  42a8c8:	stos   BYTE PTR es:[edi],al
  42a8c9:	hlt    
  42a8ca:	mov    ebx,0xcc14a808
  42a8cf:	xchg   ecx,eax
  42a8d0:	add    BYTE PTR [esi+0x22],0xe5
  42a8d4:	dec    ebp
  42a8d5:	ja     0x42a933
  42a8d7:	aas    
  42a8d8:	or     DWORD PTR [esi-0x63],esp
  42a8db:	cmp    DWORD PTR [edi+ebp*1-0x3c],ebx
  42a8df:	clc    
  42a8e0:	jno    0x42a954
  42a8e2:	cwde   
  42a8e3:	cmp    edi,DWORD PTR [ecx]
  42a8e5:	sub    edi,DWORD PTR [esi]
  42a8e7:	ins    BYTE PTR es:[edi],dx
  42a8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8e9:	pop    ss
  42a8ea:	outs   dx,DWORD PTR ds:[esi]
  42a8eb:	push   ds
  42a8ec:	ds jno 0x42a8ee
  42a8ef:	dec    edi
  42a8f0:	mov    al,0x70
  42a8f2:	add    al,BYTE PTR [ecx]
  42a8f4:	pop    ss
  42a8f5:	pop    esp
  42a8f6:	push   esp
  42a8f7:	sub    DWORD PTR [edi-0x548d5e3b],edi
  42a8fd:	bound  ebx,QWORD PTR [edx]
  42a8ff:	lds    ebp,FWORD PTR [edi+0x1c]
  42a902:	dec    edi
  42a903:	pop    ecx
  42a904:	pcmpgtb mm5,QWORD PTR [ecx+0x7b]
  42a908:	add    DWORD PTR [ebp+0x3],ecx
  42a90b:	nop
  42a90c:	ins    BYTE PTR es:[edi],dx
  42a90d:	xchg   edi,eax
  42a90e:	ins    BYTE PTR es:[edi],dx
  42a90f:	fs (bad) 
  42a911:	jae    0x42a927
  42a913:	loop   0x42a8d7
  42a915:	xlat   BYTE PTR ds:[ebx]
  42a916:	xor    DWORD PTR [esi+0x6c085366],edx
  42a91c:	hlt    
  42a91d:	jecxz  0x42a913
  42a91f:	dec    edi
  42a920:	jp     0x42a8e8
  42a922:	xchg   ebp,eax
  42a923:	jnp    0x42a8ee
  42a925:	mov    edi,0x5b74471d
  42a92a:	not    DWORD PTR [ebp+0x3d13492e]
  42a930:	out    dx,eax
  42a931:	jmp    0x7c2b:0x6f5bb170
  42a938:	pop    es
  42a939:	imul   ecx,DWORD PTR [esi],0x57
  42a93c:	jbe    0x42a8bf
  42a93e:	in     al,dx
  42a93f:	mov    cs:0x9f34de0c,al
  42a945:	sub    BYTE PTR [esi-0x772e5bdf],ah
  42a94b:	retf   0xc06c
  42a94e:	xor    edi,DWORD PTR [edi]
  42a950:	in     eax,dx
  42a951:	es jecxz 0x42a91d
  42a954:	outs   dx,BYTE PTR ds:[esi]
  42a955:	push   ebx
  42a956:	clc    
  42a957:	inc    edx
  42a958:	nop
  42a959:	mov    al,BYTE PTR [ecx+0x2e6f6f84]
  42a95f:	pushf  
  42a960:	add    al,0xe9
  42a962:	inc    esp
  42a963:	cmp    bl,BYTE PTR [esi-0x69]
  42a966:	or     DWORD PTR [edi+esi*1],esi
  42a969:	int    0xc9
  42a96b:	and    cl,BYTE PTR ds:0x53f0cfdc
  42a971:	(bad)  
  42a972:	jecxz  0x42a996
  42a974:	out    0xa0,al
  42a976:	rol    DWORD PTR [ebp+eiz*4+0x76cef599],cl
  42a97d:	dec    esp
  42a97e:	add    edi,DWORD PTR [edi]
  42a980:	mov    bh,BYTE PTR [ebp-0x4c89e6ea]
  42a986:	xor    esi,DWORD PTR [edx+0xd788aa3]
  42a98c:	pop    esi
  42a98d:	mov    DWORD PTR [edx],0x9ba97fcc
  42a993:	pop    ds
  42a994:	out    dx,eax
  42a995:	jle    0x42a91e
  42a997:	add    ax,0x3b8a
  42a99b:	jnp    0x42a94e
  42a99d:	pop    ebp
  42a99e:	pop    ds
  42a99f:	das    
  42a9a0:	fbstp  TBYTE PTR [edx]
  42a9a2:	fcomp  QWORD PTR [ebx-0x602beb39]
  42a9a8:	push   cs
  42a9a9:	dec    edx
  42a9aa:	xor    BYTE PTR [ebp-0x3d],al
  42a9ad:	jle    0x42a9e5
  42a9af:	xchg   ecx,eax
  42a9b0:	pop    ecx
  42a9b1:	pop    edi
  42a9b2:	xchg   esp,eax
  42a9b3:	(bad)  
  42a9b4:	out    dx,al
  42a9b5:	mov    esi,0xe2a43fe6
  42a9ba:	pop    edi
  42a9bb:	cmp    BYTE PTR [edi+0x4],0xfb
  42a9bf:	add    dh,BYTE PTR [ecx+eax*1]
  42a9c2:	rcr    DWORD PTR [ebx],1
  42a9c4:	or     al,0xe9
  42a9c6:	mov    al,0xb0
  42a9c8:	jnp    0x42a9bf
  42a9ca:	js     0x42aa17
  42a9cc:	inc    ebp
  42a9cd:	or     esp,DWORD PTR gs:[ecx-0x4e]
  42a9d1:	add    DWORD PTR [ebp-0x4a],edx
  42a9d4:	test   DWORD PTR [ebp+0x4e],0xcbf35503
  42a9db:	mov    dl,ah
  42a9dd:	sbb    esi,ebx
  42a9df:	aaa    
  42a9e0:	cdq    
  42a9e1:	stos   BYTE PTR es:[edi],al
  42a9e2:	cmp    eax,0xa3efebf3
  42a9e7:	jae    0x42aa3a
  42a9e9:	fidiv  DWORD PTR [ecx]
  42a9eb:	sbb    ebp,esi
  42a9ed:	sub    al,0xf2
  42a9ef:	aad    0xcd
  42a9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9f2:	dec    edi
  42a9f3:	das    
  42a9f4:	mov    BYTE PTR ds:0x22dcf439,bl
  42a9fa:	add    eax,DWORD PTR [esi-0x54]
  42a9fd:	adc    DWORD PTR [ebp+0x17],ecx
  42aa00:	stos   BYTE PTR es:[edi],al
  42aa01:	mov    ah,0xf4
  42aa03:	mov    ch,0x6a
  42aa05:	retf   0x6b83
  42aa08:	cdq    
  42aa09:	adc    al,0xc
  42aa0b:	in     al,0x18
  42aa0d:	retf   0x19ec
  42aa10:	push   eax
  42aa11:	push   0xffffffce
  42aa13:	icebp  
  42aa14:	ret    
  42aa15:	test   DWORD PTR [esi-0xac98f5a],edi
  42aa1b:	test   eax,0x42565207
  42aa20:	mov    dh,0x2a
  42aa22:	fbld   TBYTE PTR [ebx]
  42aa24:	dec    ecx
  42aa25:	xor    BYTE PTR ds:0x3ff62fc6,bl
  42aa2b:	shl    edi,cl
  42aa2d:	addr16 pop es
  42aa2f:	data16 shr BYTE PTR [ebp+esi*2+0x5b3454a8],1
  42aa37:	mov    bh,0x25
  42aa39:	arpl   WORD PTR [edx-0x41],bx
  42aa3c:	ret    
  42aa3d:	jl     0x42a9df
  42aa3f:	push   esi
  42aa40:	fbld   TBYTE PTR [esi+0x2b]
  42aa43:	cmp    DWORD PTR [ebp-0xc],esp
  42aa46:	and    eax,0xba4e4497
  42aa4b:	add    dh,cl
  42aa4d:	les    edi,FWORD PTR [edx]
  42aa4f:	cmp    DWORD PTR [edx-0x7f],0xffffff90
  42aa53:	or     ah,BYTE PTR [eax+esi*8-0x10db1338]
  42aa5a:	test   BYTE PTR [ecx-0x49],bh
  42aa5d:	pop    es
  42aa5e:	daa    
  42aa5f:	addr16 fs aas 
  42aa62:	add    al,0x9c
  42aa64:	fdiv   st(2),st
  42aa66:	adc    eax,0x138ef6ff
  42aa6b:	(bad)  
  42aa6d:	sub    eax,0x6f2fa2d3
  42aa72:	cmp    al,0xa5
  42aa75:	add    DWORD PTR [ebx+0x3b],esp
  42aa78:	(bad)  
  42aa79:	jnp    0x42aa34
  42aa7b:	ins    BYTE PTR es:[edi],dx
  42aa7c:	jge    0x42aad2
  42aa7e:	mov    ebp,0xdd406c4d
  42aa83:	jge    0x42aaaa
  42aa85:	fsubr  QWORD PTR [esi+0x16]
  42aa88:	daa    
  42aa89:	mov    DWORD PTR [esi-0x5a9dd7ae],edi
  42aa8f:	pop    edx
  42aa90:	dec    esp
  42aa91:	xlat   BYTE PTR ds:[ebx]
  42aa92:	push   ds
  42aa93:	shl    DWORD PTR [edi-0xbf8b8a0],1
  42aa99:	outs   dx,BYTE PTR ds:[esi]
  42aa9a:	inc    esp
  42aa9b:	popf   
  42aa9c:	dec    ecx
  42aa9d:	dec    esi
  42aa9e:	lahf   
  42aa9f:	sbb    BYTE PTR [ebp+0x48],bh
  42aaa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aaa3:	out    dx,eax
  42aaa4:	(bad)  
  42aaa5:	push   eax
  42aaa6:	and    ah,dl
  42aaa8:	inc    ecx
  42aaa9:	sub    al,dh
  42aaab:	sbb    ebx,DWORD PTR [esi]
  42aaad:	or     DWORD PTR [eax-0x51],ebx
  42aab0:	or     DWORD PTR [ecx+eax*1],esp
  42aab3:	cdq    
  42aab4:	mov    bh,0x9f
  42aab6:	enter  0x6d7d,0x13
  42aaba:	xor    eax,0x66abfd70
  42aabf:	inc    edi
  42aac0:	xor    bl,ch
  42aac2:	test   al,0xf1
  42aac4:	sub    ebx,ecx
  42aac6:	lahf   
  42aac7:	mov    bl,0xec
  42aac9:	mov    cl,0xb4
  42aacb:	and    DWORD PTR [edi],ebp
  42aacd:	cmp    eax,0x4b54f1e4
  42aad2:	xchg   ah,cl
  42aad4:	and    BYTE PTR [ebx+ebp*4+0x54],bl
  42aad8:	in     al,dx
  42aad9:	loope  0x42aa7c
  42aadb:	xchg   DWORD PTR [ebp-0x1f],esi
  42aade:	aaa    
  42aadf:	aas    
  42aae0:	push   0xffffff98
  42aae2:	mov    eax,eax
  42aae4:	mov    al,0xec
  42aae6:	sbb    al,0xe8
  42aae8:	pusha  
  42aae9:	fdivr  st(2),st
  42aaeb:	jnp    0x42aad6
  42aaed:	sub    DWORD PTR [esi],ebp
  42aaef:	pushf  
  42aaf0:	stc    
  42aaf1:	inc    ebp
  42aaf2:	(bad)  
  42aaf4:	pop    edi
  42aaf5:	and    DWORD PTR [eax],edx
  42aaf7:	fist   DWORD PTR [ebx+ecx*8-0xd11cd61]
  42aafe:	jbe    0x42aa83
  42ab00:	lods   eax,DWORD PTR ds:[esi]
  42ab01:	es out dx,al
  42ab03:	mul    DWORD PTR [ebx+0x2f6ddf79]
  42ab09:	in     eax,dx
  42ab0a:	stc    
  42ab0b:	inc    ebp
  42ab0c:	and    eax,0xa058b97
  42ab11:	xor    al,0x42
  42ab13:	sbb    BYTE PTR [ebx-0x267b0db0],cl
  42ab19:	aaa    
  42ab1a:	jns    0x42ab4d
  42ab1c:	jp     0x42ab0f
  42ab1e:	xor    ch,BYTE PTR [edi-0x4f204bfe]
  42ab24:	nop
  42ab25:	test   DWORD PTR [eax+eiz*1-0x3b2a45b7],esi
  42ab2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab2d:	sbb    esi,DWORD PTR [edi-0x7d1900df]
  42ab33:	popf   
  42ab34:	mov    ecx,DWORD PTR [ecx+0x53af1a2e]
  42ab3a:	cmp    esp,DWORD PTR [esi-0x42]
  42ab3d:	and    al,BYTE PTR [esp+eiz*8+0x4822445c]
  42ab44:	leave  
  42ab45:	loope  0x42ab13
  42ab47:	jmp    0x9a81cca1
  42ab4c:	imul   ecx,DWORD PTR [esi],0xffffffd5
  42ab4f:	xchg   ebp,ebp
  42ab51:	jae    0x42ab49
  42ab53:	xchg   ebp,eax
  42ab54:	pop    ds
  42ab55:	adc    bl,BYTE PTR [edx]
  42ab57:	bound  ebp,QWORD PTR [ecx-0x78]
  42ab5a:	popf   
  42ab5b:	inc    ebp
  42ab5c:	pop    ds
  42ab5d:	out    0xb9,al
  42ab5f:	jmp    0x7f7c6be4
  42ab64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab65:	ret    0x8fc8
  42ab68:	jl     0x42ab01
  42ab6a:	ret    
  42ab6b:	push   esi
  42ab6c:	test   eax,0xa1061e11
  42ab71:	(bad)  
  42ab72:	dec    edi
  42ab73:	inc    esi
  42ab74:	ret    0xf9b9
  42ab77:	pop    eax
  42ab78:	and    bh,dh
  42ab7a:	loope  0x42abd1
  42ab7c:	jmp    0x86778320
  42ab81:	inc    ebp
  42ab82:	and    eax,0x9d607b0
  42ab87:	mov    cl,BYTE PTR [eax]
  42ab89:	push   edi
  42ab8a:	sub    al,0x3a
  42ab8c:	mov    ds:0x705aba25,al
  42ab91:	pop    esi
  42ab92:	pusha  
  42ab93:	xor    eax,0x8eaf2967
  42ab98:	dec    ebx
  42ab99:	hlt    
  42ab9a:	imul   esi,DWORD PTR [ecx],0x53b5f641
  42aba0:	aam    0xe1
  42aba2:	(bad)  
  42aba4:	mov    eax,ds:0xb72dd45
  42aba9:	(bad)  [eax+0x401f6c4]
  42abaf:	aas    
  42abb0:	fwait
  42abb1:	repnz shr DWORD PTR [edi],0x6
  42abb5:	cmp    ah,BYTE PTR [edi+0x19]
  42abb8:	sub    eax,0x5cc9adc1
  42abbd:	stos   BYTE PTR es:[edi],al
  42abbe:	icebp  
  42abbf:	add    eax,0xac60973b
  42abc4:	sbb    al,0x30
  42abc6:	inc    ebx
  42abc7:	int    0xdd
  42abc9:	xor    al,0xef
  42abcb:	mov    edx,0x4db279fc
  42abd0:	std    
  42abd1:	les    ecx,FWORD PTR [ebx+0x1b]
  42abd4:	push   ebp
  42abd5:	stc    
  42abd6:	jle    0x42ab79
  42abd8:	jnp    0x42abda
  42abda:	lds    ebx,FWORD PTR [edx]
  42abdc:	call   0xc3a8d543
  42abe1:	hlt    
  42abe2:	test   BYTE PTR [edi-0x7e],cl
  42abe5:	pusha  
  42abe6:	sbb    eax,0xb9fcc50d
  42abeb:	mov    esp,DWORD PTR [ecx+0x189cf81e]
  42abf1:	test   BYTE PTR [eax+edx*8],cl
  42abf4:	push   DWORD PTR [ecx*2-0x75a470d0]
  42abfb:	sub    al,BYTE PTR [ecx]
  42abfd:	es add eax,0x3963aef1
  42ac03:	test   BYTE PTR [esp+ebp*4],al
  42ac06:	fucomip st,st(5)
  42ac08:	iret   
  42ac09:	jno    0x42abb9
  42ac0b:	js     0x42abbb
  42ac0d:	xor    edi,DWORD PTR [edi+0x68728a2b]
  42ac13:	cmp    eax,0x39ecf082
  42ac18:	jmp    0xa5974865
  42ac1d:	mov    WORD PTR [edx-0x2228cd99],fs
  42ac23:	popa   
  42ac24:	shl    DWORD PTR [ecx+ebp*1+0x5a7203a2],1
  42ac2b:	lea    eax,[edx-0x214c0c5]
  42ac31:	push   eax
  42ac32:	cli    
  42ac33:	adc    al,0x7b
  42ac35:	lahf   
  42ac36:	ds ins BYTE PTR es:[edi],dx
  42ac38:	adc    BYTE PTR [ebx],0x1a
  42ac3b:	and    BYTE PTR [eax],0x9f
  42ac3e:	icebp  
  42ac3f:	dec    esp
  42ac40:	cmp    ah,BYTE PTR [edx]
  42ac42:	in     eax,dx
  42ac43:	mov    eax,0xfe15551b
  42ac48:	retf   
  42ac49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac4a:	adc    al,0xd1
  42ac4c:	fdiv   st,st(6)
  42ac4e:	jns    0x42aca8
  42ac50:	xor    bh,BYTE PTR [eax]
  42ac52:	sbb    dh,BYTE PTR [edi+0x42c39b3]
  42ac58:	xchg   ebx,eax
  42ac59:	and    DWORD PTR [ecx-0x5951d56b],0x6e
  42ac60:	fcomi  st,st(3)
  42ac62:	push   esp
  42ac63:	inc    esi
  42ac64:	mov    bl,0x41
  42ac66:	pop    esp
  42ac67:	iret   
  42ac68:	mov    fs,WORD PTR [esi+0x38]
  42ac6b:	xchg   DWORD PTR [ecx+0xa],ebp
  42ac6e:	std    
  42ac6f:	add    BYTE PTR [edx+0xf],dh
  42ac72:	(bad)
  42ac75:	mov    ecx,0x5f37bbff
  42ac7a:	mov    bl,0x68
  42ac7c:	outs   dx,BYTE PTR ds:[esi]
  42ac7d:	xchg   ebp,eax
  42ac7e:	bound  edx,QWORD PTR [ecx+edx*8+0x2a]
  42ac82:	xlat   BYTE PTR ds:[ebx]
  42ac83:	rcl    DWORD PTR [eax-0x4e],1
  42ac86:	(bad)  
  42ac87:	cld    
  42ac88:	fidiv  WORD PTR [ebp+0x1a]
  42ac8b:	and    al,0x40
  42ac8d:	test   DWORD PTR [edx-0x599b8859],edi
  42ac93:	inc    edx
  42ac94:	call   0x7151cd07
  42ac99:	imul   esi,DWORD PTR [ecx-0x27c0b05d],0x81241d96
  42aca3:	test   eax,0x3ad169d5
  42aca8:	push   es
  42aca9:	inc    ecx
  42acaa:	rol    BYTE PTR [esi+0x7b],1
  42acad:	pop    ss
  42acae:	xor    edi,edi
  42acb0:	push   edi
  42acb1:	and    eax,0x37705baa
  42acb6:	stc    
  42acb7:	and    ebp,DWORD PTR [ebx]
  42acb9:	(bad)  
  42acba:	loopne 0x42ad3a
  42acbc:	or     DWORD PTR [edx+0x246d1180],0xffffff90
  42acc3:	push   ebx
  42acc4:	ins    DWORD PTR es:[edi],dx
  42acc5:	sbb    al,0xa
  42acc7:	je     0x42ad02
  42acc9:	lods   eax,DWORD PTR ds:[esi]
  42acca:	sete   BYTE PTR [edi]
  42accd:	jmpw   0x5162
  42acd1:	in     eax,0x44
  42acd3:	out    0xbf,al
  42acd5:	ins    BYTE PTR es:[edi],dx
  42acd6:	repnz cwde 
  42acd8:	aas    
  42acd9:	mov    ds:0x73e40a52,eax
  42acde:	push   ecx
  42acdf:	addr16 mov ebx,0xd5a0cd53
  42ace5:	adc    al,0x6d
  42ace7:	lds    ebx,FWORD PTR [ebp-0x7b]
  42acea:	repz rol DWORD PTR [eax],0x7e
  42acee:	pop    ecx
  42acef:	push   esi
  42acf0:	cmp    bl,BYTE PTR [edi-0x7d719715]
  42acf6:	adc    eax,0x5fb0d9b2
  42acfb:	adc    DWORD PTR [ecx+0x22f20c3a],ecx
  42ad01:	pusha  
  42ad02:	test   eax,0x857cc199
  42ad07:	in     eax,0xc8
  42ad09:	cmp    al,0x86
  42ad0b:	jp     0x42ad01
  42ad0d:	or     bl,al
  42ad0f:	xchg   esi,eax
  42ad10:	in     eax,dx
  42ad11:	test   DWORD PTR [ebp+0x2f],ebp
  42ad14:	sahf   
  42ad15:	loope  0x42acbe
  42ad17:	daa    
  42ad18:	aaa    
  42ad19:	out    0x57,eax
  42ad1b:	mov    bh,0xc1
  42ad1d:	pop    eax
  42ad1e:	or     al,0x62
  42ad20:	cli    
  42ad21:	ins    BYTE PTR es:[edi],dx
  42ad22:	sahf   
  42ad23:	stos   DWORD PTR es:[edi],eax
  42ad24:	cld    
  42ad25:	mov    eax,0x881c95b2
  42ad2a:	scas   al,BYTE PTR es:[edi]
  42ad2b:	enter  0x461a,0x83
  42ad2f:	shr    DWORD PTR [esi],cl
  42ad31:	adc    al,0x9b
  42ad33:	loopne 0x42acfc
  42ad35:	ret    
  42ad36:	mov    eax,0x38c438b4
  42ad3b:	call   0xbe4f:0xe29cee44
  42ad42:	inc    ebp
  42ad43:	pop    ebp
  42ad44:	fsubr  QWORD PTR [esi]
  42ad46:	iret   
  42ad47:	std    
  42ad48:	mov    ds:0xadef7247,al
  42ad4d:	fisub  DWORD PTR ds:0x3c95d255
  42ad53:	int    0xcd
  42ad55:	fadd   QWORD PTR [ecx-0x80]
  42ad58:	cld    
  42ad59:	push   esi
  42ad5a:	dec    ebx
  42ad5b:	fwait
  42ad5c:	(bad)  
  42ad5d:	scas   eax,DWORD PTR es:[edi]
  42ad5e:	adc    DWORD PTR [eax+0x46eff913],ecx
  42ad64:	mov    dl,0x23
  42ad66:	scas   al,BYTE PTR es:[edi]
  42ad67:	(bad)  
  42ad68:	(bad)
  42ad6b:	sub    ebx,DWORD PTR [ecx+0x4b010b28]
  42ad71:	in     al,0xc2
  42ad73:	fs dec edx
  42ad75:	jp     0x42ade0
  42ad77:	jnp    0x42ad49
  42ad79:	fidivr WORD PTR [edx]
  42ad7b:	fs and eax,0x921d114a
  42ad81:	dec    edx
  42ad82:	dec    edi
  42ad83:	mov    ch,0xed
  42ad85:	ja     0x42ad3f
  42ad87:	sbb    ch,BYTE PTR [ebx+esi*2]
  42ad8a:	ja     0x42adab
  42ad8c:	out    0xf9,al
  42ad8e:	aam    0x9f
  42ad90:	loop   0x42adc4
  42ad92:	je     0x42ad5f
  42ad94:	test   BYTE PTR [ebx],cl
  42ad96:	or     BYTE PTR [eax+esi*8+0xc],dl
  42ad9a:	mov    dl,BYTE PTR [ecx-0x7c]
  42ad9d:	xor    al,0xb
  42ad9f:	pushf  
  42ada0:	inc    ebx
  42ada1:	cli    
  42ada2:	iret   
  42ada3:	inc    esi
  42ada4:	shl    BYTE PTR [edi-0x6a],1
  42ada7:	mov    bh,BYTE PTR [ebx]
  42ada9:	add    cl,0xe
  42adac:	(bad)  
  42adad:	aad    0x79
  42adaf:	sub    BYTE PTR [ecx+0x658116a1],dh
  42adb5:	pop    edi
  42adb6:	mov    ?,WORD PTR [ebx-0x2f0e91e7]
  42adbc:	imul   BYTE PTR [ebp+0x6744993a]
  42adc2:	mov    eax,ds:0x65dc041f
  42adc7:	sub    DWORD PTR ds:0x79fdd87c,edi
  42adcd:	mov    ah,0xc2
  42adcf:	jmp    0x7ba332b6
  42add4:	ins    BYTE PTR es:[edi],dx
  42add5:	mov    WORD PTR [ebx-0x486ba895],ds
  42addb:	dec    eax
  42addc:	nop
  42addd:	nop
  42adde:	mov    dl,0xb1
  42ade0:	mov    ?,WORD PTR [ecx+0x46adce6f]
  42ade6:	and    al,BYTE PTR [eax+ecx*8-0x28]
  42adea:	dec    edi
  42adeb:	fwait
  42adec:	repnz sub BYTE PTR [eax+0x2e9844cf],cl
  42adf3:	(bad)  
  42adf4:	xchg   esp,eax
  42adf5:	js     0x42adaa
  42adf7:	push   ebp
  42adf8:	addr16 ret 0xa254
  42adfc:	test   eax,0xf2b722f0
  42ae01:	rcr    BYTE PTR [edx-0x6e2d58d8],1
  42ae07:	mov    DWORD PTR [ebp-0x3],ebx
  42ae0a:	lods   eax,DWORD PTR ds:[esi]
  42ae0b:	popa   
  42ae0c:	xlat   BYTE PTR ds:[ebx]
  42ae0d:	jmp    0x42adc0
  42ae0f:	pop    ecx
  42ae10:	xchg   ecx,eax
  42ae11:	std    
  42ae12:	les    edi,FWORD PTR [ecx]
  42ae14:	popa   
  42ae15:	stc    
  42ae16:	outs   dx,BYTE PTR ds:[esi]
  42ae17:	loop   0x42ae50
  42ae19:	int    0x7f
  42ae1b:	ins    DWORD PTR es:[edi],dx
  42ae1c:	call   0x38fd:0x1dbcff8f
  42ae23:	es loop 0x42adc9
  42ae26:	and    BYTE PTR [esi],dl
  42ae28:	iret   
  42ae29:	aam    0xc9
  42ae2b:	in     al,dx
  42ae2c:	push   ebp
  42ae2d:	mov    eax,0x46613990
  42ae32:	(bad)  
  42ae33:	call   0x49d9581
  42ae38:	test   DWORD PTR [ecx+ebx*2+0x6c],esi
  42ae3c:	push   esp
  42ae3d:	jbe    0x42ae56
  42ae3f:	mov    DWORD PTR [esp+ebp*2+0x25532e11],esp
  42ae46:	test   eax,0x5961ee14
  42ae4b:	inc    esi
  42ae4c:	cs ret 0x4466
  42ae50:	sti    
  42ae51:	adc    eax,0x8f996463
  42ae56:	enter  0xe44d,0x70
  42ae5a:	ja     0x42aeab
  42ae5c:	jno    0x42aecc
  42ae5e:	dec    ebp
  42ae5f:	jo     0x42aea3
  42ae61:	sub    dh,BYTE PTR [ebx+0x32]
  42ae64:	and    esi,DWORD PTR [ecx-0x6be7a581]
  42ae6a:	jno    0x42ae6a
  42ae6c:	or     edi,DWORD PTR [ecx]
  42ae6e:	xor    edi,ebp
  42ae70:	aad    0x29
  42ae72:	dec    esp
  42ae73:	jmp    0x3652cca
  42ae78:	je     0x42ae97
  42ae7a:	hlt    
  42ae7b:	cmp    al,0xe1
  42ae7d:	cld    
  42ae7e:	aas    
  42ae7f:	and    DWORD PTR [ecx-0x66],eax
  42ae82:	xor    eax,0x72c9debb
  42ae87:	mov    esp,edi
  42ae89:	pop    ebx
  42ae8a:	ret    
  42ae8b:	shl    edi,0x16
  42ae8e:	loope  0x42ae55
  42ae90:	call   0x9ebd:0x52a56c01
  42ae97:	in     eax,0x1a
  42ae99:	fist   DWORD PTR [ecx-0x67]
  42ae9c:	in     al,0xe
  42ae9e:	call   0x1b8fd99a
  42aea3:	xor    cl,dl
  42aea5:	jl     0x42ae9f
  42aea7:	or     cl,bh
  42aea9:	int    0xb8
  42aeab:	ja     0x42aeb2
  42aead:	jmp    0xee0e348a
  42aeb2:	mov    ah,0x18
  42aeb4:	lahf   
  42aeb5:	jmp    0xd4e9eeb2
  42aeba:	adc    DWORD PTR [eax],esp
  42aebc:	cli    
  42aebd:	mov    eax,0xeb0eac7d
  42aec2:	cmp    BYTE PTR [edx+0x23c1058b],ah
  42aec8:	outs   dx,BYTE PTR ds:[si]
  42aeca:	mov    DWORD PTR [esi+0x66],0xad3efb7e
  42aed1:	adc    BYTE PTR [eax-0x34566593],bl
  42aed7:	out    0x63,al
  42aed9:	and    eax,0xbdc93356
  42aede:	add    eax,0xa5f4a688
  42aee3:	aaa    
  42aee4:	mov    eax,DWORD PTR [ecx-0x48]
  42aee7:	ins    BYTE PTR es:[edi],dx
  42aee8:	stc    
  42aee9:	rcr    DWORD PTR [edx-0x76],1
  42aeec:	out    0x3f,eax
  42aeee:	or     eax,0x7ffa49c1
  42aef3:	leave  
  42aef4:	je     0x42aeec
  42aef6:	daa    
  42aef7:	fs xor edi,ecx
  42aefa:	jo     0x42aed7
  42aefc:	sbb    edi,DWORD PTR ss:[eax]
  42aeff:	sub    eax,0xbe2a762c
  42af04:	inc    esp
  42af05:	(bad)  
  42af06:	inc    BYTE PTR [ebp-0x5e]
  42af09:	rcl    DWORD PTR [edi+0x4],cl
  42af0c:	jle    0x42af5e
  42af0e:	mov    DWORD PTR [eax-0x12],edi
  42af11:	xor    ch,BYTE PTR [di-0x1773]
  42af16:	cmp    DWORD PTR [esi+0x7e856d6f],esi
  42af1c:	add    ebx,esp
  42af1e:	sti    
  42af1f:	cmp    cl,BYTE PTR [ebx-0xf2f5096]
  42af25:	ret    
  42af26:	and    BYTE PTR [esi-0x6],0x2
  42af2a:	out    0x59,eax
  42af2c:	push   eax
  42af2d:	jmp    0x42af50
  42af2f:	cmp    bl,BYTE PTR [ebx]
  42af31:	xor    BYTE PTR [ecx+0xa],dh
  42af34:	shr    BYTE PTR [edi],0x92
  42af37:	ss test al,0x1
  42af3a:	lods   eax,DWORD PTR ds:[esi]
  42af3b:	(bad)  
  42af3c:	ins    DWORD PTR es:[edi],dx
  42af3d:	inc    esi
  42af3e:	sub    DWORD PTR [edx+0x774d8cb3],0x94919bb7
  42af48:	or     DWORD PTR [eax+ecx*4+0x1b],eax
  42af4c:	clc    
  42af4d:	inc    esp
  42af4e:	adc    DWORD PTR [eax+0x4d4be94e],ecx
  42af54:	mov    ah,0x5a
  42af56:	jecxz  0x42af54
  42af58:	leave  
  42af59:	inc    ebx
  42af5a:	bnd jns 0x42af7d
  42af5d:	mov    ebp,0xd14037d2
  42af62:	fdivr  DWORD PTR [ecx+eax*8+0x78283795]
  42af69:	ret    0x51ee
  42af6c:	outs   dx,DWORD PTR ds:[esi]
  42af6d:	or     eax,0x7e46c9ae
  42af72:	and    ebp,edi
  42af74:	pop    ecx
  42af75:	retf   
  42af76:	rol    DWORD PTR [eax+ebx*4],0xac
  42af7a:	or     al,0x72
  42af7c:	in     eax,0x67
  42af7e:	xchg   ecx,eax
  42af7f:	mov    cl,0xa1
  42af81:	mov    al,cs:0xd5571690
  42af87:	fidivr WORD PTR ds:0xa32bd591
  42af8d:	jb     0x42af19
  42af8f:	mov    eax,0xd1978ee9
  42af94:	mov    BYTE PTR [ebp-0x7c7e2ce5],cl
  42af9a:	and    BYTE PTR [ecx+eax*4+0x27],al
  42af9e:	jns    0x42afb2
  42afa0:	sbb    dh,BYTE PTR [ecx+0x7ba1cff4]
  42afa6:	add    esp,DWORD PTR [esi]
  42afa8:	int3   
  42afa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afaa:	adc    BYTE PTR [ebp+0x3e202c9d],ch
  42afb0:	mov    edi,0xfabf6339
  42afb5:	inc    ecx
  42afb6:	push   edx
  42afb7:	mov    ebx,0x465e71b3
  42afbc:	test   eax,0x9960541c
  42afc2:	push   esp
  42afc3:	inc    ebp
  42afc4:	in     eax,0x9b
  42afc6:	repnz in eax,0xfa
  42afc9:	xor    edi,DWORD PTR cs:[esi]
  42afcc:	popaw  
  42afce:	addr16 test esp,ebp
  42afd1:	aas    
  42afd2:	pushf  
  42afd3:	test   BYTE PTR [edi+ebp*8-0x4e],0x11
  42afd8:	cwde   
  42afd9:	loop   0x42afe2
  42afdb:	aad    0x3d
  42afdd:	ja     0x42af70
  42afdf:	jnp    0x42afde
  42afe1:	ss hlt 
  42afe3:	sub    ch,ch
  42afe5:	push   cs
  42afe6:	push   eax
  42afe7:	fadd   DWORD PTR [edx-0x186fd073]
  42afed:	pop    esi
  42afee:	mov    eax,0xab609e70
  42aff3:	jg     0x42afe0
  42aff5:	mov    ah,0x50
  42aff7:	pop    ecx
  42aff8:	inc    esp
  42aff9:	out    0xac,al
  42affb:	mov    esp,0x7a21e8f3
  42b000:	jmp    0x42b05b
  42b002:	pop    es
  42b003:	and    BYTE PTR [ebx-0x67],ah
  42b006:	cs adc al,0x16
  42b009:	rcr    ecx,0x8
  42b00c:	push   0xffffffc3
  42b00e:	push   es
  42b00f:	push   es
  42b010:	xor    al,0x49
  42b012:	arpl   WORD PTR [ecx-0x65aa41bd],sp
  42b018:	inc    edi
  42b019:	stos   BYTE PTR es:[edi],al
  42b01a:	and    DWORD PTR [ebp+0x74],esp
  42b01d:	cwde   
  42b01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b01f:	mov    ds:0xcc4c3ec8,eax
  42b024:	or     eax,0xbb743f18
  42b029:	(bad)  
  42b02a:	call   0xaab2e561
  42b02f:	sbb    eax,0xdcfe872f
  42b034:	sub    al,0x1d
  42b036:	fisubr DWORD PTR [ebp+ebp*8+0x4e]
  42b03a:	xor    al,0x20
  42b03c:	daa    
  42b03d:	repnz dec esi
  42b03f:	bound  edi,QWORD PTR [ecx+0x25e32a8e]
  42b045:	rcr    DWORD PTR [ecx],cl
  42b047:	pop    es
  42b048:	push   0xbafe2483
  42b04d:	pop    esp
  42b04e:	mov    BYTE PTR [eax-0x58fac2dd],dl
  42b054:	in     eax,0x90
  42b056:	out    dx,eax
  42b057:	xchg   ebx,eax
  42b058:	push   ecx
  42b059:	pushf  
  42b05a:	push   ss
  42b05b:	push   ss
  42b05c:	icebp  
  42b05d:	inc    esi
  42b05e:	outs   dx,BYTE PTR ds:[esi]
  42b05f:	pop    ebp
  42b060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b061:	jecxz  0x42afed
  42b063:	pop    ebx
  42b064:	imul   edx,DWORD PTR [edx+edi*4],0xf10240d
  42b06b:	retf   0x4f51
  42b06e:	push   esp
  42b06f:	push   ebx
  42b070:	and    esp,DWORD PTR [ebp-0x7]
  42b073:	sbb    eax,0x74123280
  42b078:	adc    BYTE PTR [ebx+0xb],0xbc
  42b07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b07d:	aas    
  42b07e:	dec    ebx
  42b07f:	add    al,0xf5
  42b081:	cmp    al,0xda
  42b083:	add    esi,DWORD PTR [esi-0x507195e4]
  42b089:	stos   DWORD PTR es:[edi],eax
  42b08a:	inc    eax
  42b08b:	jl     0x42b0ad
  42b08d:	jae    0x42b100
  42b08f:	push   esp
  42b090:	jo     0x42b08c
  42b092:	adc    esi,ecx
  42b094:	(bad)  
  42b096:	repnz cli 
  42b098:	pop    edi
  42b099:	out    dx,al
  42b09a:	lods   eax,DWORD PTR ds:[esi]
  42b09b:	xor    bh,ah
  42b09d:	jo     0x42b09d
  42b09f:	sub    ebx,DWORD PTR [esi-0x22]
  42b0a2:	stos   BYTE PTR es:[edi],al
  42b0a3:	dec    edx
  42b0a4:	add    esp,DWORD PTR ds:0xb36c8d6c
  42b0aa:	aad    0xe3
  42b0ac:	sbb    BYTE PTR [esi+0x15d8d829],dh
  42b0b2:	cmp    eax,0x797914ed
  42b0b7:	adc    ecx,DWORD PTR [esp+edx*1-0x3035baf]
  42b0be:	sti    
  42b0bf:	sbb    esp,eax
  42b0c1:	into   
  42b0c2:	cmp    al,0x2d
  42b0c4:	int3   
  42b0c5:	and    al,0x9d
  42b0c7:	jne    0x42b0a8
  42b0c9:	jmp    0x695fba37
  42b0ce:	outs   dx,BYTE PTR ds:[esi]
  42b0cf:	sbb    cl,BYTE PTR [ebx]
  42b0d1:	mov    ch,0xc2
  42b0d3:	and    dh,0x1a
  42b0d6:	adc    DWORD PTR [esi],eax
  42b0d8:	int3   
  42b0d9:	jmp    0x14835935
  42b0de:	cdq    
  42b0df:	jp     0x42b113
  42b0e1:	push   es
  42b0e2:	jmp    0x1db8053f
  42b0e7:	iret   
  42b0e8:	pcmpeqw mm5,QWORD PTR ds:0xefa1ffb4
  42b0ef:	add    BYTE PTR [edx],0xcf
  42b0f2:	call   0x8e9e:0xa73a4246
  42b0f9:	dec    edi
  42b0fa:	push   edi
  42b0fb:	sar    BYTE PTR ds:0x6cca7ce3,1
  42b101:	ins    DWORD PTR es:[edi],dx
  42b102:	adc    DWORD PTR ds:0x19638ee9,0x22ccc850
  42b10c:	adc    DWORD PTR [ebx+ebp*1],ecx
  42b10f:	adc    dh,al
  42b111:	and    dh,BYTE PTR ss:[edx]
  42b114:	loop   0x42b136
  42b116:	sar    DWORD PTR [esi-0x64],cl
  42b119:	stc    
  42b11a:	mov    al,0x1c
  42b11c:	sbb    dl,ch
  42b11e:	pop    ecx
  42b11f:	outs   dx,BYTE PTR ds:[esi]
  42b120:	sbb    BYTE PTR [edx+esi*2-0x13c3af65],bh
  42b127:	and    al,0x39
  42b129:	adc    eax,0x360f0e41
  42b12e:	push   0x4de4f568
  42b133:	loopne 0x42b17b
  42b135:	mov    WORD PTR [edi+0x2f048e58],gs
  42b13b:	leave  
  42b13c:	xchg   ecx,eax
  42b13d:	lahf   
  42b13e:	loope  0x42b173
  42b140:	jnp    0x42b151
  42b142:	clc    
  42b143:	inc    eax
  42b144:	add    esi,esi
  42b146:	mov    ds:0x62bf4ea1,al
  42b14b:	cmp    BYTE PTR [edi],ah
  42b14d:	jle    0x42b1c2
  42b14f:	fbld   TBYTE PTR [ebx+0x1c3cad6d]
  42b155:	addr16 pushf 
  42b157:	push   ss
  42b158:	int    0x37
  42b15a:	scas   al,BYTE PTR es:[di]
  42b15c:	(bad)  
  42b15e:	inc    ecx
  42b15f:	adc    al,0xe6
  42b161:	les    eax,FWORD PTR [ebx]
  42b163:	inc    edi
  42b164:	aad    0x3a
  42b166:	(bad)  
  42b168:	pmulhuw mm4,QWORD PTR [edi]
  42b16b:	cmp    DWORD PTR [edi-0x39],esi
  42b16e:	mov    al,ds:0x52d5ca12
  42b173:	call   ebx
  42b175:	out    dx,eax
  42b176:	ins    DWORD PTR es:[edi],dx
  42b177:	mov    ecx,0xd865c3f2
  42b17c:	loopne 0x42b146
  42b17e:	es out dx,eax
  42b180:	in     eax,0x22
  42b182:	stos   DWORD PTR es:[edi],eax
  42b183:	add    bl,cl
  42b185:	pop    ebp
  42b186:	or     ch,bl
  42b188:	push   ebx
  42b189:	xchg   ebx,eax
  42b18a:	jg     0x42b12e
  42b18c:	dec    edx
  42b18d:	mov    esp,0x531d98e1
  42b192:	pop    ds
  42b193:	push   es
  42b194:	aaa    
  42b195:	lea    ebx,[ebp-0xc8748b7]
  42b19b:	inc    esp
  42b19c:	into   
  42b19d:	and    al,0xa9
  42b19f:	loop   0x42b1fa
  42b1a1:	xchg   edx,eax
  42b1a2:	cli    
  42b1a3:	pop    edx
  42b1a4:	icebp  
  42b1a5:	push   0x14511463
  42b1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1ab:	pushf  
  42b1ac:	retf   0x8c80
  42b1af:	pushf  
  42b1b0:	icebp  
  42b1b1:	add    al,0xb1
  42b1b3:	ja     0x42b189
  42b1b5:	push   cs
  42b1b6:	mov    esi,0x31f085d
  42b1bb:	pop    DWORD PTR [ebx+0x3b]
  42b1be:	dec    edi
  42b1bf:	dec    edx
  42b1c0:	add    BYTE PTR [edi],dh
  42b1c2:	cwde   
  42b1c3:	mov    bh,0x56
  42b1c5:	pop    eax
  42b1c6:	enter  0x1702,0xd8
  42b1ca:	sub    bl,BYTE PTR [ebp+0x7be217e]
  42b1d0:	not    BYTE PTR [ebp+0x38]
  42b1d3:	dec    esi
  42b1d4:	test   dh,dl
  42b1d6:	jns    0x42b178
  42b1d8:	pop    edx
  42b1d9:	jg     0x42b21b
  42b1db:	sbb    al,0x83
  42b1dd:	sub    bl,BYTE PTR [ecx]
  42b1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1e0:	sbb    al,BYTE PTR [edx+ebp*1]
  42b1e3:	cwde   
  42b1e4:	ror    DWORD PTR [ecx+0x1a],0x80
  42b1e8:	lods   eax,DWORD PTR ds:[esi]
  42b1e9:	aas    
  42b1ea:	sbb    al,0x9
  42b1ec:	jb     0x13f8568c
  42b1f2:	jg     0x42b177
  42b1f4:	mov    ebp,0xf1d8ac36
  42b1f9:	mov    ch,0x4f
  42b1fb:	inc    eax
  42b1fc:	call   0x5aae:0x9de2a6fc
  42b203:	ror    BYTE PTR [ebx+edx*4-0x40],0x62
  42b208:	xor    DWORD PTR [esi],eax
  42b20a:	enter  0xa970,0x54
  42b20e:	jle    0x42b279
  42b210:	call   0x72d50ad3
  42b215:	sar    DWORD PTR [eax+ebp*1+0x26a6dff3],cl
  42b21c:	loop   0x42b1ca
  42b21e:	sbb    edx,edx
  42b220:	inc    esp
  42b221:	mov    bh,0x3d
  42b223:	fimul  WORD PTR [ecx+0x2aa0cecc]
  42b229:	(bad)  
  42b22a:	xchg   ecx,eax
  42b22b:	mov    ss,eax
  42b22d:	sbb    ebp,DWORD PTR [edi-0x257b6be4]
  42b233:	sub    al,0x9
  42b235:	inc    edx
  42b236:	adc    bh,ch
  42b238:	int3   
  42b239:	mov    eax,0x931ce5ee
  42b23e:	fcmovb st,st(2)
  42b240:	inc    ebx
  42b241:	arpl   WORD PTR [ebp+0x1547258e],bp
  42b247:	mov    ds:0xa6d8748b,eax
  42b24c:	outs   dx,BYTE PTR ds:[esi]
  42b24d:	xchg   DWORD PTR [ebx],ebx
  42b24f:	xor    bl,BYTE PTR [ecx-0x42]
  42b252:	ret    0x1ec7
  42b255:	dec    esi
  42b256:	sahf   
  42b257:	repz data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b25a:	imul   esp,DWORD PTR [edi+0x3c],0xffffffa2
  42b25e:	xor    eax,0x710ec360
  42b263:	and    BYTE PTR [ebx-0x4dd3b163],bl
  42b269:	fcmovb st,st(7)
  42b26b:	pusha  
  42b26c:	fld    st(6)
  42b26e:	fsub   QWORD PTR [ebx+0x3a]
  42b271:	push   ebx
  42b272:	mov    ds,eax
  42b274:	jbe    0x42b1f9
  42b276:	adc    eax,0xeb5fbe57
  42b27b:	imul   eax,esi,0xffffff80
  42b27e:	ins    DWORD PTR es:[edi],dx
  42b27f:	mov    ah,0x7b
  42b281:	push   eax
  42b282:	daa    
  42b283:	neg    DWORD PTR ds:0x867fc974
  42b289:	sub    edi,DWORD PTR [ebp+0x54]
  42b28c:	call   0xbcd4:0x66cff0f1
  42b293:	cmp    al,0x86
  42b295:	dec    ebx
  42b296:	mov    bl,0xd9
  42b298:	xor    BYTE PTR [eax],dl
  42b29a:	inc    eax
  42b29b:	add    cl,BYTE PTR ds:0x1ba5bf1a
  42b2a1:	or     BYTE PTR [esi+0x74],ch
  42b2a4:	push   ds
  42b2a5:	mov    al,ds:0xb42e1d8a
  42b2aa:	push   ds
  42b2ab:	xor    ecx,DWORD PTR [ebx-0x4e]
  42b2ae:	xchg   ebp,eax
  42b2af:	pop    ecx
  42b2b0:	push   cs
  42b2b1:	push   ecx
  42b2b2:	outs   dx,DWORD PTR ds:[esi]
  42b2b3:	shr    BYTE PTR [eax],1
  42b2b5:	int    0xd1
  42b2b7:	aad    0x8
  42b2b9:	or     BYTE PTR [edi+0x27],0xe9
  42b2bd:	xor    ch,0x26
  42b2c0:	das    
  42b2c1:	or     esi,0xffffffdd
  42b2c4:	or     esp,ecx
  42b2c6:	jno    0x42b266
  42b2c8:	aad    0xeb
  42b2ca:	push   ds
  42b2cb:	and    al,0x5c
  42b2cd:	sub    dl,BYTE PTR [eax+0x4bc7d60c]
  42b2d3:	in     al,0xfa
  42b2d5:	lods   eax,DWORD PTR ds:[esi]
  42b2d6:	imul   edi,DWORD PTR [edi+0x1666716c],0xffffffab
  42b2dd:	sbb    eax,0x91c774ff
  42b2e2:	xor    BYTE PTR [edx],dh
  42b2e4:	mov    al,0xa0
  42b2e6:	loop   0x42b356
  42b2e8:	push   edi
  42b2e9:	scas   al,BYTE PTR es:[edi]
  42b2ea:	in     eax,0x7b
  42b2ec:	popa   
  42b2ed:	add    esp,DWORD PTR [ebp-0x33]
  42b2f0:	push   ecx
  42b2f1:	stos   BYTE PTR es:[edi],al
  42b2f2:	push   cs
  42b2f3:	pusha  
  42b2f4:	sahf   
  42b2f5:	and    dh,BYTE PTR ds:0xd50cf45f
  42b2fb:	inc    ecx
  42b2fc:	push   edi
  42b2fd:	or     eax,DWORD PTR [ebx]
  42b2ff:	mov    al,0x4
  42b301:	fldenv ds:0xb99d5dab
  42b307:	repnz push es
  42b309:	cmp    esp,eax
  42b30b:	arpl   WORD PTR [ebp-0xc],si
  42b30e:	inc    edx
  42b30f:	sbb    ch,BYTE PTR [edi-0x2865ddf9]
  42b315:	dec    esp
  42b316:	retf   0x623b
  42b319:	add    bl,BYTE PTR [ebx]
  42b31b:	sbb    dl,BYTE PTR [ebp-0x41906991]
  42b321:	aas    
  42b322:	mov    eax,0x6a5abc0c
  42b327:	adc    dl,cl
  42b329:	stc    
  42b32a:	inc    edi
  42b32b:	xchg   esp,eax
  42b32c:	aam    0xd3
  42b32e:	xchg   edi,eax
  42b32f:	xor    BYTE PTR [esi-0x68f67ace],dl
  42b335:	push   ebx
  42b336:	mov    ah,0x45
  42b338:	shl    esp,0x6d
  42b33b:	mov    dh,0x96
  42b33d:	hlt    
  42b33e:	add    bh,BYTE PTR [edx-0x5bae0c1a]
  42b344:	or     dl,BYTE PTR [edi-0xfdd0832]
  42b34a:	mov    cl,0x74
  42b34c:	cmp    DWORD PTR [ecx-0x4fd1f5ad],eax
  42b352:	fucomip st,st(0)
  42b354:	aam    0xbf
  42b356:	pop    esi
  42b357:	add    BYTE PTR ds:0x9495a2b4,al
  42b35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b35e:	fadd   DWORD PTR [ecx-0x7d]
  42b361:	mov    esi,0x512069eb
  42b366:	rol    BYTE PTR [edi+0x4c2dafe1],0x9c
  42b36d:	jbe    0x42b320
  42b36f:	and    eax,0x17a758f9
  42b374:	pop    ds
  42b375:	xor    edi,DWORD PTR [ebp+0x2bea3a5e]
  42b37b:	das    
  42b37c:	push   0xffffffc4
  42b37e:	popf   
  42b37f:	add    bl,BYTE PTR [ebp+0x6f478b2e]
  42b385:	xor    DWORD PTR ds:0xc3245dc3,esp
  42b38b:	and    eax,0x3b2ea49b
  42b390:	xchg   ecx,eax
  42b391:	push   esp
  42b392:	jp     0x42b3f7
  42b394:	stos   DWORD PTR es:[edi],eax
  42b395:	int    0x73
  42b397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b398:	sub    ecx,DWORD PTR [ecx]
  42b39a:	push   ds
  42b39b:	lea    esp,[ecx-0x34d15a03]
  42b3a1:	inc    edi
  42b3a2:	mov    al,ds:0xbbee56a4
  42b3a7:	imul   esp,DWORD PTR [eax-0x2eda98da],0xffffff84
  42b3ae:	mov    ch,0xa7
  42b3b0:	pusha  
  42b3b1:	mov    edx,0x14bba51
  42b3b6:	(bad)  
  42b3b7:	out    0x6e,eax
  42b3b9:	push   ss
  42b3ba:	adc    BYTE PTR [esi+ebp*8],ch
  42b3bd:	inc    eax
  42b3be:	add    ebx,ebp
  42b3c0:	and    al,BYTE PTR [ebp+0x6410471d]
  42b3c6:	call   0xdc2b:0x37cf9fbc
  42b3cd:	adc    bh,dl
  42b3cf:	loope  0x42b42b
  42b3d1:	pop    edi
  42b3d2:	mov    eax,ds:0x892cf1c2
  42b3d7:	sbb    BYTE PTR [esi-0x51a0f64d],ah
  42b3dd:	mov    edx,0x1f5ed6c1
  42b3e2:	enter  0x7829,0xe4
  42b3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3e7:	and    BYTE PTR [ebx],cl
  42b3e9:	xchg   ebx,eax
  42b3ea:	mov    BYTE PTR [edi-0x39622331],bh
  42b3f0:	cmp    BYTE PTR [ecx],bl
  42b3f2:	js     0x42b3b0
  42b3f4:	add    ebx,0xffffffb4
  42b3f7:	adc    eax,0x9718716a
  42b3fc:	call   0x1bbb:0x21112699
  42b403:	xchg   esi,eax
  42b404:	add    eax,0xb332900e
  42b409:	jmp    0xaccf:0xe78ce26c
  42b410:	sbb    al,dh
  42b412:	std    
  42b413:	sbb    BYTE PTR [ecx],ch
  42b415:	adc    dl,bl
  42b417:	xchg   edx,eax
  42b418:	or     al,0x56
  42b41a:	mov    ah,0x5c
  42b41c:	adc    cl,BYTE PTR [ebp+0x41]
  42b41f:	pop    esp
  42b420:	rcr    DWORD PTR [edx],cl
  42b422:	jp     0x42b3b3
  42b424:	pop    edx
  42b425:	and    eax,0x48002772
  42b42a:	mov    al,ds:0x50ce4f6f
  42b42f:	dec    eax
  42b430:	add    DWORD PTR [ebp-0x5cf421aa],0x9a993dad
  42b43a:	pop    DWORD PTR [ebx+0x3e]
  42b43d:	push   ebx
  42b43e:	fstp   TBYTE PTR [edi+0x223adce9]
  42b444:	push   cs
  42b445:	enter  0xc894,0x91
  42b449:	ja     0x42b4ca
  42b44b:	pop    ebx
  42b44c:	cmc    
  42b44d:	add    dl,BYTE PTR [esi+0x6fbeb07f]
  42b453:	pop    ecx
  42b454:	mov    ch,0x42
  42b456:	push   esp
  42b457:	popa   
  42b458:	outs   dx,BYTE PTR ds:[esi]
  42b459:	(bad)  
  42b45a:	mov    bh,BYTE PTR [ebx-0x31]
  42b45d:	xlat   BYTE PTR ds:[ebx]
  42b45e:	adc    dh,bl
  42b460:	repnz stc 
  42b462:	or     dh,BYTE PTR [eax]
  42b464:	jne    0x42b3fc
  42b466:	jecxz  0x42b45b
  42b468:	sbb    DWORD PTR [ebp+0x1758c083],ecx
  42b46e:	mov    ch,0xfe
  42b470:	loop   0x42b41b
  42b472:	fwait
  42b473:	push   ecx
  42b474:	add    DWORD PTR [ecx+edi*2],esp
  42b477:	lds    edx,FWORD PTR [ebp-0x2ee54238]
  42b47d:	rcr    bl,cl
  42b47f:	adc    esi,eax
  42b481:	dec    esp
  42b482:	(bad)  
  42b484:	pop    ecx
  42b485:	in     al,dx
  42b486:	in     al,0x97
  42b488:	push   ss
  42b489:	dec    ebp
  42b48a:	scas   eax,DWORD PTR es:[edi]
  42b48b:	adc    eax,0x4392ea38
  42b490:	jp     0x42b43c
  42b492:	xchg   BYTE PTR [ecx],bh
  42b494:	mov    ah,BYTE PTR [edx-0x532f1339]
  42b49a:	push   ds
  42b49b:	xchg   esi,eax
  42b49c:	pop    ecx
  42b49d:	mov    DWORD PTR ds:0x6175e697,esi
  42b4a3:	(bad)  
  42b4a4:	test   ebx,0x99359730
  42b4aa:	or     BYTE PTR [ebx],dl
  42b4ac:	mov    ecx,0x18073afc
  42b4b1:	scas   al,BYTE PTR es:[edi]
  42b4b2:	xor    al,0x80
  42b4b4:	out    0xad,eax
  42b4b6:	inc    ebx
  42b4b7:	adc    edi,DWORD PTR [eax-0x61495d82]
  42b4bd:	sub    al,0xbf
  42b4bf:	fst    QWORD PTR [esi+edi*2-0x13561ec7]
  42b4c6:	stos   DWORD PTR es:[edi],eax
  42b4c7:	sub    ch,BYTE PTR [esp+ebx*8-0x63]
  42b4cb:	test   al,0x5d
  42b4cd:	push   ecx
  42b4ce:	mov    dh,BYTE PTR [ebx+0x79915410]
  42b4d4:	xor    eax,0xaa45ca6d
  42b4d9:	fwait
  42b4da:	jne    0x42b4f6
  42b4dc:	stos   DWORD PTR es:[edi],eax
  42b4dd:	cdq    
  42b4de:	adc    eax,0xa39d3b17
  42b4e3:	outs   dx,BYTE PTR ds:[esi]
  42b4e4:	xor    al,0xb4
  42b4e6:	sub    eax,0x1985f42d
  42b4eb:	rol    DWORD PTR [ebp+0x4c],0x93
  42b4ef:	dec    ebp
  42b4f0:	test   DWORD PTR [esi+eax*4+0x72622bb0],ebx
  42b4f7:	scas   al,BYTE PTR es:[edi]
  42b4f8:	mov    al,0x8f
  42b4fa:	jmp    0x42b4ef
  42b4fc:	(bad)  
  42b4fd:	pushf  
  42b4fe:	sub    DWORD PTR [edi+0x1f],0xffffff9f
  42b502:	into   
  42b503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b504:	or     eax,ebx
  42b506:	psrlq  mm6,mm7
  42b509:	sbb    DWORD PTR [ebx-0x5434fa4],ecx
  42b50f:	cmp    eax,0xed30b357
  42b514:	mov    cl,0x37
  42b516:	mov    ah,0xa4
  42b518:	call   0xd66467d9
  42b51d:	jmp    0x64b3:0x363dbfbc
  42b524:	or     bl,BYTE PTR [ebx+0x6c321611]
  42b52a:	and    DWORD PTR [edx+edx*2+0x41],0x7f83d754
  42b532:	stos   DWORD PTR es:[edi],eax
  42b533:	and    al,0x75
  42b535:	ins    DWORD PTR es:[edi],dx
  42b536:	jns    0x42b4e0
  42b538:	pop    edx
  42b539:	or     eax,0x8709c3d3
  42b53e:	inc    ecx
  42b53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b540:	mov    esp,edi
  42b542:	mov    ds:0x2b446e8a,al
  42b547:	bnd jl 0x42b521
  42b54a:	dec    esi
  42b54b:	push   edi
  42b54c:	das    
  42b54d:	cmp    esi,edx
  42b54f:	add    bl,ch
  42b551:	cmc    
  42b552:	aaa    
  42b553:	add    dh,BYTE PTR [edi-0x8]
  42b556:	xchg   BYTE PTR [ebp+0x620911d9],al
  42b55c:	mov    dh,0xb6
  42b55e:	repz dec esi
  42b560:	xchg   al,ah
  42b562:	inc    esi
  42b563:	es push esp
  42b565:	xchg   esi,eax
  42b566:	mov    eax,0xe8759528
  42b56b:	lock push eax
  42b56d:	sub    al,0x2b
  42b56f:	dec    esi
  42b570:	mov    bl,0x36
  42b572:	xchg   esp,eax
  42b573:	or     al,0x61
  42b575:	and    BYTE PTR [esi+0x7bac92b2],dl
  42b57b:	test   BYTE PTR [ebx+0x39],bh
  42b57e:	push   eax
  42b57f:	add    eax,0x1009f3c8
  42b584:	sar    BYTE PTR [eax],0x22
  42b587:	outs   dx,DWORD PTR ds:[esi]
  42b588:	data16 mov al,ds:0xb6a4d6e4
  42b58e:	fcmovnu st,st(4)
  42b590:	pop    edx
  42b591:	sub    al,0xa
  42b593:	dec    edx
  42b594:	adc    esp,eax
  42b596:	mov    ds,WORD PTR [edx-0xb]
  42b599:	dec    ecx
  42b59a:	fmul   DWORD PTR [ecx]
  42b59c:	pop    ebp
  42b59d:	ja     0x42b569
  42b59f:	pop    esi
  42b5a0:	mov    cl,0xed
  42b5a2:	(bad)  
  42b5a3:	sar    DWORD PTR [ebp-0x6ac7b545],0xc7
  42b5aa:	pop    ds
  42b5ab:	mov    ds:0x6c18a52b,eax
  42b5b0:	lahf   
  42b5b1:	adc    edx,DWORD PTR [eax]
  42b5b3:	mov    ebx,0x92ea1f84
  42b5b8:	jg     0x42b5a4
  42b5ba:	sub    BYTE PTR [edi+0x5d099a49],ah
  42b5c0:	push   edx
  42b5c1:	sbb    BYTE PTR ds:0x5f027462,dl
  42b5c7:	inc    ebp
  42b5c8:	ds mov dl,0xb7
  42b5cb:	and    edx,esp
  42b5cd:	(bad)  
  42b5ce:	fiadd  WORD PTR [esi+0x48]
  42b5d1:	mov    dl,BYTE PTR [edi+0x7b198f]
  42b5d7:	neg    BYTE PTR [edx+0x7]
  42b5da:	test   DWORD PTR [ebp-0x6e3f83b4],ebp
  42b5e0:	add    ebx,DWORD PTR [edx]
  42b5e2:	add    ebp,DWORD PTR [esi+0x1049cd60]
  42b5e8:	imul   ebx,DWORD PTR [ebp+0x57],0x98d08ab3
  42b5ef:	mov    edi,0xf0da05c1
  42b5f4:	jb     0x42b636
  42b5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5f7:	push   ebx
  42b5f8:	mov    ecx,0xe3073304
  42b5fd:	add    BYTE PTR [edi],al
  42b5ff:	int3   
  42b600:	jns    0x42b608
  42b602:	cs inc eax
  42b604:	dec    edi
  42b605:	enter  0x39ee,0xa3
  42b609:	ss (bad) 
  42b60b:	clc    
  42b60c:	enter  0xd9ea,0x40
  42b610:	ins    BYTE PTR es:[edi],dx
  42b611:	popf   
  42b612:	push   cs
  42b613:	or     al,0xfa
  42b615:	cmp    eax,0xd328cbef
  42b61a:	aas    
  42b61b:	scas   eax,DWORD PTR es:[edi]
  42b61c:	mov    ecx,0x7b9b8327
  42b621:	jnp    0x42b632
  42b623:	test   BYTE PTR [ebp-0x6],cl
  42b626:	stc    
  42b627:	xchg   edx,eax
  42b628:	fld    st(1)
  42b62a:	push   edx
  42b62b:	mov    ch,0xb5
  42b62d:	xlat   BYTE PTR ds:[ebx]
  42b62e:	xor    BYTE PTR [ebp-0x6747168f],ch
  42b634:	mov    dh,0x15
  42b636:	inc    esi
  42b637:	clc    
  42b638:	push   eax
  42b639:	jnp    0x42b5f3
  42b63b:	fst    DWORD PTR [ebx-0x7]
  42b63e:	push   0x6d
  42b640:	mov    al,0xdb
  42b642:	shl    ebx,cl
  42b644:	js     0x42b620
  42b646:	fld    DWORD PTR [ebp+0x13]
  42b649:	xchg   ebp,eax
  42b64a:	and    ch,BYTE PTR [edx-0x59]
  42b64d:	add    esp,DWORD PTR [ecx+0xc]
  42b650:	ins    DWORD PTR es:[edi],dx
  42b651:	or     DWORD PTR [ebp-0x10deba38],edi
  42b657:	push   ds
  42b658:	stc    
  42b659:	xchg   ecx,eax
  42b65a:	mov    ds:0x1c694711,al
  42b65f:	jno    0x42b69d
  42b661:	leave  
  42b662:	xor    eax,edi
  42b664:	jo     0x42b687
  42b666:	loope  0x42b627
  42b668:	mov    BYTE PTR es:[eax-0x1f07de75],bh
  42b66f:	sub    BYTE PTR [edx],bl
  42b671:	dec    ebp
  42b672:	dec    ebp
  42b673:	popf   
  42b674:	jo     0x42b673
  42b676:	pop    edi
  42b677:	sahf   
  42b678:	repz push ecx
  42b67a:	lock fldenv [edx]
  42b67d:	sbb    BYTE PTR [ebx+esi*2-0x19],dh
  42b681:	xor    eax,DWORD PTR [esi]
  42b683:	cmp    al,0x4c
  42b685:	pop    eax
  42b686:	ins    BYTE PTR es:[edi],dx
  42b687:	loop   0x42b68e
  42b689:	stc    
  42b68a:	lea    ebp,[edi-0x4445619]
  42b690:	test   eax,0xd9b208dd
  42b695:	stc    
  42b696:	(bad)  
  42b697:	sar    BYTE PTR [edi],1
  42b699:	ja     0x42b63c
  42b69b:	mov    ds:0x40b66625,eax
  42b6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6a1:	mov    al,ds:0xd220225d
  42b6a6:	sub    DWORD PTR [eax],ebx
  42b6a8:	scas   eax,DWORD PTR es:[edi]
  42b6a9:	int3   
  42b6aa:	arpl   di,cx
  42b6ac:	or     al,BYTE PTR [esp+ebp*1+0x7]
  42b6b0:	xor    BYTE PTR [edx-0x6e8971fb],ch
  42b6b6:	shl    ch,0x10
  42b6b9:	push   cs
  42b6ba:	dec    ebx
  42b6bb:	mov    esp,0xe5141644
  42b6c0:	scas   al,BYTE PTR es:[edi]
  42b6c1:	stos   BYTE PTR es:[edi],al
  42b6c2:	mov    al,0x17
  42b6c4:	outs   dx,DWORD PTR ds:[esi]
  42b6c5:	xor    BYTE PTR [edi],bl
  42b6c7:	inc    eax
  42b6c8:	inc    esp
  42b6c9:	mov    DWORD PTR [ebx+0x5bbd2941],eax
  42b6cf:	pop    eax
  42b6d0:	cmp    edx,DWORD PTR [eax+0x33]
  42b6d3:	sbb    BYTE PTR [edi-0x3a],bl
  42b6d6:	xchg   ebx,eax
  42b6d7:	pop    ebp
  42b6d8:	dec    eax
  42b6d9:	mov    ebp,0xdecec42d
  42b6de:	jge    0x42b751
  42b6e0:	jb     0x42b6d8
  42b6e2:	and    dh,BYTE PTR [edx-0x25612948]
  42b6e8:	push   0x6ec7e34d
  42b6ed:	repnz iret 
  42b6ef:	test   eax,0xf32a9eea
  42b6f4:	pop    ebx
  42b6f5:	mov    cl,0xba
  42b6f7:	mov    BYTE PTR [ebp+0x2dc4e381],bh
  42b6fd:	jb     0x42b718
  42b6ff:	push   ebp
  42b700:	outs   dx,BYTE PTR ds:[esi]
  42b701:	adc    dh,BYTE PTR [edi+0x11]
  42b704:	push   ss
  42b705:	xor    eax,0x14987215
  42b70a:	clc    
  42b70b:	add    edi,DWORD PTR [esi-0x16]
  42b70e:	sahf   
  42b70f:	or     eax,DWORD PTR [edx]
  42b711:	xchg   ebx,eax
  42b712:	adc    ebp,DWORD PTR ds:0xc7666412
  42b718:	shr    BYTE PTR [ebx-0x3c],1
  42b71b:	lahf   
  42b71c:	stos   DWORD PTR es:[edi],eax
  42b71d:	inc    eax
  42b71e:	repnz pop ebp
  42b720:	add    al,0xfb
  42b722:	cmp    ah,BYTE PTR [eax-0x75b04f02]
  42b728:	mov    ch,0x15
  42b72a:	cli    
  42b72b:	fdivr  DWORD PTR [edi+eiz*2-0x71faa88c]
  42b732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b733:	mov    ds:0xf28531d5,eax
  42b738:	fistp  WORD PTR [eax]
  42b73a:	jp     0x42b741
  42b73c:	xchg   esp,eax
  42b73d:	pop    edi
  42b73e:	icebp  
  42b73f:	adc    DWORD PTR [ebx+0x4399eaec],ecx
  42b745:	shr    BYTE PTR [edx+0x12],1
  42b748:	jbe    0x42b6d1
  42b74a:	pop    ecx
  42b74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b74c:	jo     0x42b7c8
  42b74e:	icebp  
  42b74f:	add    eax,0x867cf9c4
  42b754:	iret   
  42b755:	ffree  st(4)
  42b757:	mov    eax,ds:0x21b43e30
  42b75c:	ins    BYTE PTR es:[edi],dx
  42b75d:	jmp    0x1324:0x524e7e75
  42b764:	in     eax,dx
  42b765:	xor    BYTE PTR [eax+0x1e12ce28],ah
  42b76b:	or     DWORD PTR [ebp-0x1143e90f],eax
  42b771:	(bad)  
  42b772:	loope  0x42b769
  42b774:	xor    DWORD PTR [edi-0x43],eax
  42b777:	cli    
  42b778:	or     BYTE PTR [edx+0x3],bl
  42b77b:	out    dx,al
  42b77c:	addr16 jne 0x42b78a
  42b77f:	dec    ebx
  42b780:	lds    ecx,FWORD PTR [edx+0x426a0f91]
  42b786:	out    0xcf,al
  42b788:	xchg   ebx,eax
  42b789:	retf   
  42b78a:	dec    edx
  42b78b:	les    edx,FWORD PTR [ebp-0x4d]
  42b78e:	out    0x18,eax
  42b790:	aam    0xc5
  42b792:	fnstcw WORD PTR [eax-0x6b7d63ee]
  42b798:	xchg   esi,eax
  42b799:	shl    cl,0x68
  42b79c:	icebp  
  42b79d:	xchg   ebp,eax
  42b79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b79f:	mov    dh,0x17
  42b7a1:	je     0x42b7ed
  42b7a3:	in     al,0xb7
  42b7a5:	jg     0x42b770
  42b7a7:	in     al,dx
  42b7a8:	pop    es
  42b7a9:	or     eax,0xb55760e7
  42b7ae:	cli    
  42b7af:	sub    esi,DWORD PTR [ebx-0x78]
  42b7b2:	cmp    BYTE PTR [ecx-0x4134af11],cl
  42b7b8:	cs adc al,0x50
  42b7bb:	pop    eax
  42b7bc:	pop    ds
  42b7bd:	les    ebx,FWORD PTR [edi]
  42b7bf:	jmp    0xf5a5:0x2a3ee78b
  42b7c6:	fsub   st,st(1)
  42b7c8:	(bad)  
  42b7c9:	aam    0x98
  42b7cb:	popf   
  42b7cc:	pop    ebx
  42b7cd:	cmp    eax,0x4e1b7f83
  42b7d2:	adc    eax,0x95b0a0be
  42b7d7:	lea    ebp,[ecx-0x23b98309]
  42b7dd:	xlat   BYTE PTR ds:[ebx]
  42b7de:	mov    ecx,0x6ac92991
  42b7e3:	sub    cl,BYTE PTR [edi+0x600e9ed2]
  42b7e9:	mov    dh,0xc
  42b7eb:	or     BYTE PTR [ebx],0x2a
  42b7ee:	stos   BYTE PTR es:[edi],al
  42b7ef:	adc    al,0x90
  42b7f1:	pop    ebp
  42b7f2:	pop    ecx
  42b7f3:	push   esp
  42b7f4:	in     eax,0x7
  42b7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7f7:	jb     0x42b840
  42b7f9:	ret    
  42b7fa:	js     0x42b81c
  42b7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7fd:	sahf   
  42b7fe:	loop   0x42b858
  42b800:	mov    ah,ch
  42b802:	nop
  42b803:	ja     0x42b837
  42b805:	sar    edx,0x53
  42b808:	mov    eax,ds:0x1812b1da
  42b80d:	pop    ds
  42b80e:	push   ebx
  42b80f:	or     BYTE PTR [esi+0x214bb61a],dl
  42b815:	jno    0x42b7e3
  42b817:	and    DWORD PTR [esi+0x168ad023],edx
  42b81d:	clc    
  42b81e:	mov    eax,ds:0x5cc67c01
  42b823:	jno    0x42b823
  42b825:	arpl   WORD PTR [eax],bx
  42b827:	hlt    
  42b828:	jle    0x42b807
  42b82a:	cmp    eax,0xf2e6f19c
  42b82f:	inc    ecx
  42b830:	mov    ds:0x7943577a,al
  42b835:	rcr    ah,0x97
  42b838:	inc    esi
  42b839:	in     al,dx
  42b83a:	aaa    
  42b83b:	test   al,0x42
  42b83d:	xchg   BYTE PTR [ebp-0x3b3285e2],cl
  42b843:	out    dx,al
  42b844:	ins    BYTE PTR es:[edi],dx
  42b845:	inc    ebp
  42b846:	jecxz  0x42b876
  42b848:	enter  0x6102,0x10
  42b84c:	mov    DWORD PTR [edx+edx*2+0x6da09189],edi
  42b853:	scas   eax,DWORD PTR es:[edi]
  42b854:	ret    
  42b855:	adc    esi,DWORD PTR [esi]
  42b857:	pusha  
  42b858:	test   eax,0x5b26419c
  42b85d:	cli    
  42b85e:	test   eax,0x293e520b
  42b863:	shl    al,cl
  42b865:	pop    esi
  42b866:	test   BYTE PTR [ecx+eax*2+0x2f19efa0],bh
  42b86d:	ja     0x42b884
  42b86f:	aam    0xd4
  42b871:	add    DWORD PTR [edi],0x985a1416
  42b877:	mov    ch,0xcd
  42b879:	pop    edx
  42b87a:	sti    
  42b87b:	mov    esi,0x86fa3cf2
  42b880:	inc    ecx
  42b881:	ja     0x42b80a
  42b883:	mov    gs,ecx
  42b885:	lea    ecx,[ebp-0x21]
  42b888:	adc    BYTE PTR [ecx+0x3ecd2ef1],bh
  42b88e:	mov    ch,0x40
  42b890:	inc    eax
  42b891:	sub    DWORD PTR [ecx],ecx
  42b893:	push   esp
  42b894:	ret    
  42b895:	idiv   DWORD PTR [ebx+0x36]
  42b898:	idiv   BYTE PTR [edx]
  42b89a:	les    ecx,FWORD PTR [edx+0x5]
  42b89d:	and    bh,BYTE PTR [edx+0x2547948e]
  42b8a3:	out    0xbd,al
  42b8a5:	pop    ecx
  42b8a6:	xchg   ebp,eax
  42b8a7:	sbb    ch,cl
  42b8a9:	inc    ebp
  42b8aa:	mov    bh,0xc5
  42b8ac:	mov    dh,0xd7
  42b8ae:	inc    edi
  42b8af:	out    dx,al
  42b8b0:	int    0xfa
  42b8b2:	push   ebp
  42b8b3:	jg     0x42b924
  42b8b5:	cmp    eax,0x9d284e0
  42b8ba:	or     al,0xe5
  42b8bc:	mov    ds:0xbc289a99,eax
  42b8c1:	test   BYTE PTR [edx-0xd3a3870],dh
  42b8c7:	add    al,0x53
  42b8c9:	das    
  42b8ca:	add    ch,dh
  42b8cc:	sub    al,dl
  42b8ce:	sbb    BYTE PTR [esi-0x45fc66a6],dl
  42b8d4:	idiv   DWORD PTR [esi]
  42b8d6:	or     eax,0x910d130e
  42b8db:	cmp    ch,BYTE PTR [eax+0x6706e9ae]
  42b8e1:	xor    DWORD PTR [ebp+0x7c77a733],0xffdb6a5d
  42b8eb:	jmp    0x42b8a7
  42b8ed:	idiv   DWORD PTR [edx-0x64]
  42b8f0:	inc    esi
  42b8f1:	(bad)  
  42b8f2:	cmp    BYTE PTR [edx+0x2eb6cc66],0xed
  42b8f9:	leave  
  42b8fa:	sbb    dl,BYTE PTR [ecx+0x62]
  42b8fd:	inc    ecx
  42b8fe:	jb     0x42b88c
  42b900:	loopne 0x42b972
  42b902:	lods   al,BYTE PTR ds:[esi]
  42b903:	dec    edi
  42b904:	dec    ebp
  42b905:	dec    edx
  42b906:	outs   dx,DWORD PTR ds:[esi]
  42b907:	enter  0x4713,0x85
  42b90b:	xor    cl,BYTE PTR cs:[edx+ebp*4+0x41e94f5f]
  42b913:	add    ebp,DWORD PTR [ebx+0x1b]
  42b916:	adc    DWORD PTR [ecx+0x3744fd0b],ecx
  42b91c:	outs   dx,BYTE PTR ds:[esi]
  42b91d:	icebp  
  42b91e:	sahf   
  42b91f:	sar    cl,0x50
  42b922:	mov    edi,0xf111c145
  42b927:	aaa    
  42b928:	or     eax,0xaa32a956
  42b92d:	mov    WORD PTR [ebx],es
  42b92f:	sbb    BYTE PTR [eax],al
  42b931:	outs   dx,DWORD PTR ds:[esi]
  42b932:	xor    ah,BYTE PTR [eax]
  42b934:	adc    al,0x85
  42b936:	cmp    al,0x49
  42b938:	ds stos BYTE PTR es:[edi],al
  42b93a:	test   eax,0xce7c121f
  42b93f:	ficom  WORD PTR [edi-0x66f5f06f]
  42b945:	iret   
  42b946:	inc    ebp
  42b947:	imul   eax,DWORD PTR [ecx+0x69],0x57815538
  42b94e:	mov    bl,0xe2
  42b950:	or     eax,0x1f2bc4e6
  42b955:	sahf   
  42b956:	cs and bh,cl
  42b959:	mov    ecx,0x9b09c6a2
  42b95f:	daa    
  42b960:	arpl   WORD PTR [esi+0x2f],dx
  42b963:	adc    bl,BYTE PTR [ecx-0x78]
  42b966:	ss dec esp
  42b968:	and    eax,DWORD PTR [edx]
  42b96a:	stos   DWORD PTR es:[edi],eax
  42b96b:	daa    
  42b96c:	or     al,0x9e
  42b96e:	call   0x6031:0xa238d38a
  42b975:	inc    ecx
  42b976:	pop    edi
  42b977:	call   0x2e681318
  42b97c:	inc    ecx
  42b97d:	cmp    eax,0x53e4bd9a
  42b982:	rcr    bh,1
  42b984:	jmp    DWORD PTR [eax]
  42b986:	repnz cmp DWORD PTR [ebp-0x4f],0xffffffb9
  42b98b:	jl     0x42b9b8
  42b98d:	push   esi
  42b98e:	dec    edi
  42b98f:	repz pop edx
  42b991:	inc    eax
  42b992:	cdq    
  42b993:	xchg   ebx,edi
  42b995:	(bad)  
  42b996:	fiadd  WORD PTR [edi-0x37]
  42b999:	jle    0x42b932
  42b99b:	add    al,BYTE PTR ds:[ecx+eiz*2-0x2e]
  42b9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9a1:	leave  
  42b9a2:	clc    
  42b9a3:	out    0xaa,al
  42b9a5:	into   
  42b9a6:	push   ecx
  42b9a7:	scas   al,BYTE PTR es:[edi]
  42b9a8:	(bad)  
  42b9a9:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9ab:	cmp    al,0xc5
  42b9ad:	mov    al,ds:0xa3c92b66
  42b9b2:	popf   
  42b9b3:	test   eax,0x95a2ccaa
  42b9b8:	mov    es,ebx
  42b9ba:	sub    DWORD PTR [ebp-0x156f0148],edx
  42b9c0:	data16 dec BYTE PTR [ebx-0x17fac59]
  42b9c7:	test   ecx,edi
  42b9c9:	mov    es,esp
  42b9cb:	fst    QWORD PTR [ecx]
  42b9cd:	ficomp WORD PTR cs:[esi]
  42b9d0:	xor    ah,BYTE PTR [edi-0x3b18d5d6]
  42b9d6:	fadd   DWORD PTR [ebx+0xdbec9fe]
  42b9dc:	jle    0x42b9af
  42b9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9df:	mov    ch,0x2e
  42b9e1:	fcmovnu st,st(2)
  42b9e3:	mov    esp,DWORD PTR [edi-0x32]
  42b9e6:	and    al,0x1e
  42b9e8:	add    BYTE PTR [ebx],ah
  42b9ea:	ret    0x44de
  42b9ed:	out    dx,eax
  42b9ee:	cmp    eax,0xe38c1844
  42b9f3:	push   ebx
  42b9f4:	pop    ecx
  42b9f5:	sub    al,0xe
  42b9f7:	push   edi
  42b9f8:	pusha  
  42b9f9:	inc    ebx
  42b9fa:	cld    
  42b9fb:	adc    al,0x8
  42b9fd:	mov    dh,al
  42b9ff:	sbb    ebp,esi
  42ba01:	lock add ecx,DWORD PTR [edx]
  42ba04:	cwde   
  42ba05:	and    eax,0xce8ad760
  42ba0a:	add    eax,0xdf7b1892
  42ba0f:	jp     0x42b994
  42ba11:	sub    edx,ebp
  42ba13:	xchg   ecx,eax
  42ba14:	push   cs
  42ba15:	cmc    
  42ba16:	pop    ebx
  42ba17:	(bad)  [edx+0x57]
  42ba1a:	jmp    0xafbe8a87
  42ba1f:	sbb    dl,BYTE PTR [edi*1+0x7e5f70e5]
  42ba26:	adc    DWORD PTR [ecx-0x29a81a7d],edi
  42ba2c:	rcr    dl,1
  42ba2e:	(bad)  
  42ba2f:	sbb    dh,BYTE PTR [esi]
  42ba31:	push   0x1114e976
  42ba36:	add    al,0x18
  42ba38:	pop    edi
  42ba39:	fst    QWORD PTR ss:[ecx-0x4]
  42ba3d:	mov    edx,eax
  42ba3f:	or     dh,BYTE PTR [ebx-0x78]
  42ba42:	cli    
  42ba43:	adc    DWORD PTR [edx+0x6093cc77],edx
  42ba49:	test   al,0x17
  42ba4b:	repnz dec edx
  42ba4d:	xchg   ebp,eax
  42ba4e:	pop    ebx
  42ba4f:	cmp    eax,DWORD PTR [ebx-0x86655e1]
  42ba55:	in     al,dx
  42ba56:	shl    ah,0xf4
  42ba59:	pushf  
  42ba5a:	adc    dh,BYTE PTR [edi+0x5c]
  42ba5d:	cwde   
  42ba5e:	xor    esi,DWORD PTR [esi-0x3f0eaf91]
  42ba64:	ret    
  42ba65:	sbb    ebx,DWORD PTR [eax-0x73]
  42ba68:	or     BYTE PTR [ebx],dl
  42ba6a:	scas   al,BYTE PTR es:[edi]
  42ba6b:	cdq    
  42ba6c:	mov    bh,0x3b
  42ba6e:	hlt    
  42ba6f:	fnsave [ebx+0x677472e]
  42ba75:	mov    fs,WORD PTR [eax-0x36a11e8b]
  42ba7b:	inc    eax
  42ba7c:	pop    ebx
  42ba7d:	sub    al,0xee
  42ba7f:	sub    BYTE PTR [ebx-0x1561159],ah
  42ba85:	in     al,0x46
  42ba87:	lods   eax,DWORD PTR ds:[esi]
  42ba88:	gs in  al,0x4e
  42ba8b:	ss ss xchg ecx,eax
  42ba8e:	outs   dx,DWORD PTR ds:[esi]
  42ba8f:	fimul  WORD PTR [edi]
  42ba91:	push   ds
  42ba92:	xchg   ebx,eax
  42ba93:	jge    0x42bae8
  42ba95:	jnp    0x42bad5
  42ba97:	ficom  DWORD PTR [ecx+0x4b]
  42ba9a:	fnstcw WORD PTR [eax]
  42ba9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba9d:	cmp    edx,edi
  42ba9f:	call   0x9a446d72
  42baa4:	sub    ebx,DWORD PTR [esi+0x70f49985]
  42baaa:	popa   
  42baab:	aad    0x62
  42baad:	mov    eax,0xbb8716fc
  42bab2:	outs   dx,BYTE PTR ds:[esi]
  42bab3:	(bad)  
  42bab4:	lock cmp eax,0x31fe1e17
  42baba:	cwde   
  42babb:	adc    BYTE PTR [eax],bl
  42babd:	jo     0x42ba77
  42babf:	sbb    BYTE PTR [eax*1-0x53612aba],dl
  42bac6:	inc    eax
  42bac7:	pusha  
  42bac8:	out    0x1b,eax
  42baca:	xor    BYTE PTR ds:0xf434bf07,cl
  42bad0:	pusha  
  42bad1:	mov    eax,ds:0x8ecf1243
  42bad6:	dec    edx
  42bad7:	lods   eax,DWORD PTR ds:[esi]
  42bad8:	xchg   ebx,eax
  42bad9:	dec    eax
  42bada:	adc    eax,DWORD PTR [edi+0x376a6965]
  42bae0:	popa   
  42bae1:	mov    bl,ch
  42bae3:	adc    al,0x88
  42bae5:	inc    edi
  42bae6:	cmp    DWORD PTR [edi],ebx
  42bae8:	(bad)  
  42baea:	xor    BYTE PTR [edx],dh
  42baec:	mov    esi,0x6e6f18ef
  42baf1:	or     BYTE PTR [ebx+edx*1-0x76],0xbd
  42baf6:	and    edx,DWORD PTR [ebp+0x587a36c5]
  42bafc:	or     BYTE PTR [ecx+0x60027d42],dh
  42bb02:	in     eax,0xc3
  42bb04:	xor    eax,0xcec7e9a
  42bb09:	mov    bh,0x70
  42bb0b:	or     al,0xa8
  42bb0d:	and    BYTE PTR gs:[edx-0x22325bd5],0xeb
  42bb15:	cli    
  42bb16:	sub    ecx,edi
  42bb18:	xchg   ecx,eax
  42bb19:	call   0x7b6f:0xb6257a01
  42bb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb21:	or     BYTE PTR [edx-0x6c],ch
  42bb24:	(bad)  
  42bb25:	mov    dl,0x7c
  42bb27:	fwait
  42bb28:	pushf  
  42bb29:	mov    ss,WORD PTR [ecx]
  42bb2b:	cwde   
  42bb2c:	test   eax,0x95f49d96
  42bb31:	xchg   ebp,eax
  42bb32:	mov    edx,0x8a7d9c01
  42bb37:	mov    fs,edi
  42bb39:	lea    eax,[ebp+0x69]
  42bb3c:	lds    ecx,FWORD PTR [eax+0x2d22f4f0]
  42bb42:	pop    eax
  42bb43:	xlat   BYTE PTR ds:[ebx]
  42bb44:	stos   BYTE PTR es:[edi],al
  42bb45:	lahf   
  42bb46:	or     al,0xb9
  42bb48:	gs dec edx
  42bb4a:	sbb    DWORD PTR [edx-0x42],esp
  42bb4d:	dec    DWORD PTR [esi+0x38]
  42bb50:	xor    esp,DWORD PTR [ebp+0x23]
  42bb53:	adc    eax,0x93c9e845
  42bb58:	shl    DWORD PTR [esp+ecx*1+0x48],1
  42bb5c:	and    al,0x8e
  42bb5e:	(bad)  
  42bb5f:	lahf   
  42bb60:	and    al,BYTE PTR [esi+0x22]
  42bb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb64:	mov    al,0x87
  42bb66:	cld    
  42bb67:	nop
  42bb68:	hlt    
  42bb69:	fst    DWORD PTR [esi+edi*1]
  42bb6c:	mov    dl,0x1a
  42bb6e:	xor    ebx,DWORD PTR [esp+ebp*8]
  42bb71:	push   ebp
  42bb72:	or     ebx,0xfffffff0
  42bb75:	mov    dl,0xfe
  42bb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb78:	(bad)  
  42bb7a:	test   al,0xeb
  42bb7c:	imul   ecx,DWORD PTR [edi-0x27],0x48e14fc3
  42bb83:	cmp    DWORD PTR [ebx-0x69],0x6d129c22
  42bb8a:	cld    
  42bb8b:	cmp    al,0xce
  42bb8d:	pushf  
  42bb8e:	mov    cl,0x1a
  42bb90:	das    
  42bb91:	in     al,dx
  42bb92:	mov    BYTE PTR [ebx],bl
  42bb94:	xor    al,0x52
  42bb96:	aas    
  42bb97:	adc    esp,esp
  42bb99:	adc    bl,bl
  42bb9b:	mov    edi,eax
  42bb9d:	out    dx,al
  42bb9e:	test   ah,ch
  42bba0:	sub    DWORD PTR [eax+0x4cce575f],edx
  42bba6:	push   esp
  42bba7:	jnp    0x42bbb8
  42bba9:	pop    eax
  42bbaa:	pusha  
  42bbab:	or     bh,cl
  42bbad:	jo     0x42bbbe
  42bbaf:	push   ebx
  42bbb0:	sub    bh,BYTE PTR [ebx+0x5f]
  42bbb3:	sub    bl,BYTE PTR [ebp+ebx*8+0x39]
  42bbb7:	sub    al,0x3d
  42bbb9:	cmp    DWORD PTR [edx-0xa401337],ecx
  42bbbf:	mov    ebx,0x97a95ce9
  42bbc4:	push   es
  42bbc5:	push   ebp
  42bbc6:	and    al,0xa4
  42bbc8:	mov    ebp,0x3a3037f3
  42bbcd:	pop    edx
  42bbce:	aad    0x3a
  42bbd0:	(bad)  
  42bbd1:	stos   DWORD PTR es:[edi],eax
  42bbd2:	push   ss
  42bbd3:	inc    ebx
  42bbd4:	pusha  
  42bbd5:	mov    dh,0x14
  42bbd7:	pop    ebx
  42bbd8:	mov    al,ds:0x12a922b0
  42bbdd:	xchg   ebp,eax
  42bbde:	xor    ah,BYTE PTR [edi]
  42bbe0:	dec    eax
  42bbe2:	sub    DWORD PTR [ebx-0x4190fe6e],ebx
  42bbe8:	(bad)  
  42bbe9:	jbe    0x42bc0b
  42bbeb:	jae    0x42bc03
  42bbed:	sub    al,al
  42bbef:	push   esi
  42bbf0:	push   eax
  42bbf1:	or     al,0xca
  42bbf3:	sub    edx,esp
  42bbf5:	xor    BYTE PTR [eax+0x65],0x60
  42bbf9:	je     0x42bbb9
  42bbfb:	enter  0x3828,0x12
  42bbff:	add    DWORD PTR [ecx],esi
  42bc01:	or     BYTE PTR [esp+edi*2],dl
  42bc04:	(bad)  
  42bc06:	or     ah,bl
  42bc08:	lods   al,BYTE PTR ds:[esi]
  42bc09:	cmp    BYTE PTR [eax],cl
  42bc0b:	xchg   edx,eax
  42bc0c:	xchg   esi,eax
  42bc0d:	and    eax,esi
  42bc0f:	inc    ebx
  42bc10:	jbe    0x42bc5b
  42bc12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc13:	imul   edi,DWORD PTR [edx-0x3b],0xe9ab3126
  42bc1a:	sbb    eax,DWORD PTR [edx]
  42bc1c:	outs   dx,DWORD PTR ds:[esi]
  42bc1d:	push   DWORD PTR [eax-0x789118f5]
  42bc23:	sub    DWORD PTR [ebp+edx*2+0x6f60e83d],esi
  42bc2a:	setg   BYTE PTR [edi+0x75]
  42bc2e:	pop    ebx
  42bc2f:	jmp    ebx
  42bc31:	and    bl,ch
  42bc33:	cmp    al,0x6
  42bc35:	inc    esp
  42bc36:	xor    DWORD PTR [eax+0x2d],0x2
  42bc3a:	rep ins DWORD PTR es:[edi],dx
  42bc3c:	loope  0x42bc44
  42bc3e:	push   esp
  42bc3f:	xchg   esi,eax
  42bc40:	cmp    DWORD PTR [ecx],edx
  42bc42:	xchg   ebx,eax
  42bc43:	es mov cl,0x22
  42bc46:	ins    DWORD PTR es:[edi],dx
  42bc47:	jg     0x42bcc1
  42bc49:	movaps XMMWORD PTR [edx+ebx*8-0xab63ce7],xmm6
  42bc51:	ror    ah,0xee
  42bc54:	mov    eax,0x8749b522
  42bc59:	in     al,0x93
  42bc5b:	into   
  42bc5c:	mov    al,0x85
  42bc5e:	mov    eax,0x251c284b
  42bc63:	mov    ds:0x2792a374,eax
  42bc68:	or     eax,0x856592d8
  42bc6d:	popf   
  42bc6e:	int3   
  42bc6f:	sbb    eax,0xa61a00b4
  42bc74:	add    ebx,DWORD PTR [ebp+0x7ce28a2d]
  42bc7a:	jne    0x42bc47
  42bc7c:	jle    0x42bcea
  42bc7e:	jecxz  0x42bcea
  42bc80:	mov    ecx,0xeff4f9ac
  42bc85:	sub    al,0x52
  42bc87:	mov    esi,cs
  42bc89:	ja     0x42bc9e
  42bc8b:	fcomp  DWORD PTR [ebx+0x7d12cc61]
  42bc91:	sub    cl,0x76
  42bc94:	adc    esi,DWORD PTR [eax+ebx*8]
  42bc97:	neg    DWORD PTR [ebx-0x1059448b]
  42bc9d:	icebp  
  42bc9e:	xor    eax,0xfb5ca92
  42bca3:	push   es
  42bca4:	mov    edx,0xf5ceb581
  42bca9:	xchg   ecx,eax
  42bcaa:	jl     0x42bc33
  42bcac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcae:	lods   eax,DWORD PTR ds:[esi]
  42bcaf:	sbb    ch,BYTE PTR [ecx+0x4d]
  42bcb2:	sub    bh,BYTE PTR [edi+0x54]
  42bcb5:	push   esi
  42bcb6:	push   ecx
  42bcb7:	sub    al,0xd6
  42bcb9:	popf   
  42bcba:	daa    
  42bcbb:	jo     0x42bcf4
  42bcbd:	test   BYTE PTR [esi+ecx*8],dh
  42bcc0:	lock popf 
  42bcc2:	push   ebx
  42bcc3:	cmp    DWORD PTR [ebp-0x4a],0xd99353d0
  42bcca:	cdq    
  42bccb:	popa   
  42bccc:	pushf  
  42bccd:	lea    esp,[ecx-0x3c]
  42bcd0:	push   edx
  42bcd1:	enter  0x18cb,0x55
  42bcd5:	rcl    DWORD PTR [edi-0x14],1
  42bcd8:	pop    ebp
  42bcd9:	ins    WORD PTR es:[edi],dx
  42bcdb:	add    al,BYTE PTR [edi+0x76f03fa]
  42bce1:	out    0x39,eax
  42bce3:	cmp    ecx,0x31
  42bce6:	icebp  
  42bce7:	lods   al,BYTE PTR ds:[esi]
  42bce8:	ja     0x42bd30
  42bcea:	mov    edi,DWORD PTR [edx-0x1b6e4b2f]
  42bcf0:	and    DWORD PTR [ebx],edx
  42bcf2:	and    bh,cl
  42bcf4:	sbb    eax,0xd97ddd0
  42bcf9:	popf   
  42bcfa:	mov    edi,0xd77b9a3e
  42bcff:	loope  0x42bcc4
  42bd01:	xchg   edx,eax
  42bd02:	enter  0x419,0x27
  42bd06:	nop
  42bd07:	ret    
  42bd08:	adc    al,0x4
  42bd0a:	enter  0x7e12,0xf5
  42bd0e:	cmp    eax,DWORD PTR [edx+esi*2-0x53]
  42bd12:	dec    ebx
  42bd13:	jns    0x42bd4b
  42bd15:	popa   
  42bd16:	dec    ebx
  42bd17:	jl     0x42bd23
  42bd19:	jp     0x42bd11
  42bd1b:	iret   
  42bd1c:	(bad)  
  42bd1d:	repz xchg ebx,eax
  42bd1f:	cmp    dh,ch
  42bd21:	xchg   ecx,eax
  42bd22:	cmp    cl,cl
  42bd24:	(bad)  
  42bd25:	or     ebx,DWORD PTR [ebx+0x2a63f45c]
  42bd2b:	retf   0x38bd
  42bd2e:	inc    ecx
  42bd2f:	(bad)  
  42bd30:	push   esi
  42bd31:	jecxz  0x42bd0c
  42bd33:	xor    ecx,ebx
  42bd35:	cdq    
  42bd36:	xchg   esi,edi
  42bd38:	ds xor eax,0xfd1afd2
  42bd3e:	adc    dl,BYTE PTR [edi+0x23be9003]
  42bd44:	fwait
  42bd45:	les    ebp,FWORD PTR [ebp+0x79]
  42bd48:	loop   0x42bccc
  42bd4a:	cli    
  42bd4b:	ja     0x42bd0d
  42bd4d:	add    ebx,DWORD PTR [esi+0x4f2b1b45]
  42bd53:	dec    ecx
  42bd54:	sub    DWORD PTR [ebx+0x71],ebp
  42bd57:	sti    
  42bd58:	pop    esi
  42bd59:	out    dx,al
  42bd5a:	iret   
  42bd5b:	jmp    0x44afe977
  42bd60:	cmp    DWORD PTR [eax],edi
  42bd62:	mov    edi,edx
  42bd64:	adc    BYTE PTR [eax+0x7584397d],0xe6
  42bd6b:	sbb    BYTE PTR [esi],dl
  42bd6d:	mov    ecx,0xfad6173a
  42bd72:	jns    0x42bd61
  42bd74:	and    al,0x7c
  42bd76:	and    DWORD PTR [ebx+eax*1],esp
  42bd79:	dec    edx
  42bd7a:	mov    dh,0xe1
  42bd7c:	and    al,0xb6
  42bd7e:	test   eax,0x1fbf607e
  42bd83:	cdq    
  42bd84:	clc    
  42bd85:	imul   BYTE PTR [esi]
  42bd87:	dec    esi
  42bd88:	inc    ebp
  42bd89:	add    DWORD PTR [edi-0x73da8933],edx
  42bd8f:	mov    ds:0x6e11fbbe,eax
  42bd94:	in     eax,0x49
  42bd96:	lods   eax,DWORD PTR ds:[esi]
  42bd97:	pop    ecx
  42bd98:	jmp    0x7c2e:0x1317958c
  42bd9f:	dec    ecx
  42bda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bda1:	lea    esp,[ecx+0xa]
  42bda4:	sti    
  42bda5:	fisub  DWORD PTR [edi]
  42bda7:	in     al,0xac
  42bda9:	push   eax
  42bdaa:	imul   edx,DWORD PTR [esi+ebx*1-0xc2a0cc5],0xe17e42a7
  42bdb5:	clc    
  42bdb6:	push   cs
  42bdb7:	mov    eax,ss:0x31870f98
  42bdbd:	xor    eax,0xae7b21b2
  42bdc2:	jns    0x42bd8a
  42bdc4:	outs   dx,BYTE PTR ds:[esi]
  42bdc5:	scas   al,BYTE PTR es:[edi]
  42bdc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bdc7:	dec    ebp
  42bdc8:	sub    esp,edx
  42bdca:	xchg   esi,eax
  42bdcb:	jnp    0x42be23
  42bdcd:	stos   DWORD PTR es:[edi],eax
  42bdce:	adc    bl,BYTE PTR [edi-0x6c]
  42bdd1:	in     eax,dx
  42bdd2:	ret    
  42bdd3:	ja     0x42be17
  42bdd5:	dec    ebp
  42bdd6:	add    BYTE PTR [edx],dh
  42bdd8:	fisub  WORD PTR [edx+0x655bfa9c]
  42bdde:	das    
  42bddf:	int    0x32
  42bde1:	neg    bh
  42bde3:	ins    DWORD PTR es:[edi],dx
  42bde4:	in     eax,dx
  42bde5:	inc    ebp
  42bde6:	lods   al,BYTE PTR ds:[esi]
  42bde7:	rcr    BYTE PTR [edi*1-0x5f23a9e2],cl
  42bdee:	shr    DWORD PTR [ecx-0x4ac2dffc],1
  42bdf4:	jge    0x42bdac
  42bdf6:	adc    BYTE PTR [ecx-0x26],0x66
  42bdfa:	dec    ecx
  42bdfb:	daa    
  42bdfc:	xor    DWORD PTR [ecx],0xffffffe9
  42bdff:	pop    esi
  42be00:	add    al,0x56
  42be02:	iret   
  42be03:	jmp    0xa9b0:0x398a1db8
  42be0a:	or     DWORD PTR [edx-0x40cd235a],ebx
  42be10:	addr16 dec ecx
  42be12:	cmp    al,0xb9
  42be14:	mov    esp,0x9d5e14ac
  42be19:	xchg   ecx,eax
  42be1a:	scas   al,BYTE PTR es:[edi]
  42be1b:	inc    esi
  42be1c:	mov    cl,0x4d
  42be1e:	adc    al,0x6c
  42be20:	(bad)  
  42be21:	cmc    
  42be22:	sub    ecx,DWORD PTR [esp+edi*4-0x7e8e2ce]
  42be29:	push   ds
  42be2a:	stos   BYTE PTR es:[edi],al
  42be2b:	hlt    
  42be2c:	ins    BYTE PTR es:[edi],dx
  42be2d:	and    DWORD PTR [ecx+0x2e],ebp
  42be30:	jmp    0x42be4f
  42be32:	clc    
  42be33:	mov    DWORD PTR [ecx],edi
  42be35:	inc    edi
  42be36:	dec    esi
  42be37:	ret    
  42be38:	lods   al,BYTE PTR ds:[esi]
  42be39:	(bad)  
  42be3a:	jle    0x42bdeb
  42be3c:	out    0xe9,al
  42be3e:	jle    0x42be6c
  42be40:	sbb    al,0x76
  42be42:	push   0x38
  42be44:	mov    WORD PTR [edi+0x16],es
  42be47:	sub    BYTE PTR [eax+eiz*4-0x37],al
  42be4b:	lahf   
  42be4c:	jecxz  0x42be5b
  42be4e:	xor    BYTE PTR fs:[edx-0x52],0xcc
  42be53:	inc    ebx
  42be54:	and    eax,0x963d62c2
  42be59:	mov    edi,0xf50680d4
  42be5e:	aam    0x56
  42be60:	pop    esi
  42be61:	cmp    eax,DWORD PTR [edi-0x3c]
  42be64:	shl    DWORD PTR [esi+0x4b],0x72
  42be68:	inc    esp
  42be69:	leave  
  42be6a:	push   edx
  42be6b:	add    eax,0x45eb8c87
  42be70:	or     DWORD PTR [edx+0x6b],ecx
  42be73:	outs   dx,BYTE PTR ds:[esi]
  42be74:	out    dx,eax
  42be75:	add    bh,0x62
  42be78:	pop    ebp
  42be79:	cmp    bh,bl
  42be7b:	ja     0x42be2d
  42be7d:	ja     0x42be8e
  42be7f:	repnz out 0x5e,eax
  42be82:	scas   al,BYTE PTR es:[edi]
  42be83:	dec    esp
  42be84:	or     esi,DWORD PTR [ebx+eax*8-0x16]
  42be88:	sub    BYTE PTR [eax+0x18],bl
  42be8b:	mov    ch,0x75
  42be8d:	mov    al,0xa0
  42be8f:	fdivr  QWORD PTR [ebx]
  42be91:	pop    ecx
  42be92:	sbb    al,0x4f
  42be94:	sahf   
  42be95:	inc    esi
  42be96:	xlat   BYTE PTR ds:[ebx]
  42be97:	mov    esp,0xedac99a
  42be9c:	inc    edx
  42be9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be9e:	aaa    
  42be9f:	js     0x42be42
  42bea1:	(bad)  [edi-0x76929462]
  42bea7:	stos   BYTE PTR es:[edi],al
  42bea8:	lods   al,BYTE PTR ds:[esi]
  42bea9:	rcr    BYTE PTR [esi],1
  42beab:	jns    0x42be81
  42bead:	fs add bh,dl
  42beb0:	aam    0x56
  42beb2:	push   0xffffffb5
  42beb4:	push   esi
  42beb5:	inc    ebp
  42beb6:	mov    ecx,DWORD PTR [ebp-0x65]
  42beb9:	fnstsw WORD PTR [ecx-0xe8893d1]
  42bebf:	imul   ebx,ebx,0x25
  42bec2:	inc    eax
  42bec3:	inc    eax
  42bec4:	fst    DWORD PTR [ebx]
  42bec6:	daa    
  42bec7:	sub    dh,BYTE PTR [eax-0x5e]
  42beca:	cmp    eax,0xbee23a86
  42becf:	std    
  42bed0:	call   0xdf88726c
  42bed5:	lea    edx,[edi+0x6c]
  42bed8:	cdq    
  42bed9:	inc    ebp
  42beda:	xchg   ecx,eax
  42bedb:	fld    st(4)
  42bedd:	sbb    DWORD PTR [ecx+ebp*2+0x5f],esi
  42bee1:	xor    edi,DWORD PTR [edx-0x17]
  42bee4:	dec    eax
  42bee5:	push   ebx
  42bee6:	out    dx,al
  42bee7:	lods   eax,DWORD PTR ds:[esi]
  42bee8:	mov    gs,eax
  42beea:	mov    esp,0x6a94ed00
  42beef:	sub    al,0x44
  42bef1:	mov    edi,0xc4e9786b
  42bef6:	mov    cs,WORD PTR [esi]
  42bef8:	mov    bh,0xe3
  42befa:	sbb    BYTE PTR [ebp+0x535efc80],ch
  42bf00:	and    esp,DWORD PTR [ecx-0x63]
  42bf03:	dec    esp
  42bf04:	jmp    FWORD PTR [ecx-0x77]
  42bf07:	pop    ds
  42bf08:	mov    ecx,0x9550ab47
  42bf0d:	ds pop edi
  42bf0f:	add    edx,ecx
  42bf11:	sahf   
  42bf12:	fstp   TBYTE PTR [edi+esi*8]
  42bf15:	jne    0x42bed9
  42bf17:	ret    0x9f28
  42bf1a:	xor    al,0x14
  42bf1c:	sub    BYTE PTR [edx-0x2],0x76
  42bf20:	inc    eax
  42bf21:	push   edi
  42bf22:	mov    cs:0xe0d50f2c,eax
  42bf28:	outs   dx,BYTE PTR ds:[esi]
  42bf29:	xchg   BYTE PTR [ecx+0xd],dh
  42bf2c:	in     al,0x1a
  42bf2e:	cld    
  42bf2f:	and    dh,BYTE PTR [ebx]
  42bf31:	xor    bh,BYTE PTR [edx+0x24]
  42bf34:	retf   0x9a0b
  42bf37:	arpl   ax,si
  42bf39:	add    al,0x31
  42bf3b:	fs or  bl,ah
  42bf3e:	mov    bl,0xa8
  42bf40:	lods   eax,DWORD PTR ds:[esi]
  42bf41:	jp     0x42bf19
  42bf43:	jns    0x42bf01
  42bf45:	xor    al,BYTE PTR [ebp+0x67790e94]
  42bf4b:	addr16 jno 0x42bf07
  42bf4e:	shr    BYTE PTR [ebx],1
  42bf50:	jae    0x42bf82
  42bf52:	fnstcw WORD PTR [ebp+0x3a03624c]
  42bf58:	ss lock cmc 
  42bf5b:	pop    ss
  42bf5c:	push   cs
  42bf5d:	jp     0x42bfc3
  42bf5f:	popa   
  42bf60:	and    al,0x5f
  42bf62:	hlt    
  42bf63:	retf   
  42bf64:	inc    eax
  42bf65:	fst    QWORD PTR [eax+0x40]
  42bf68:	mov    dl,0x18
  42bf6a:	fcmovnu st,st(3)
  42bf6c:	jle    0x42bfe4
  42bf6e:	lea    esp,[edi-0x14b3b243]
  42bf74:	les    ebx,FWORD PTR [edi+0x57]
  42bf77:	js     0xe7a70af0
  42bf7d:	outs   dx,BYTE PTR ds:[esi]
  42bf7e:	pop    ds
  42bf7f:	push   edx
  42bf80:	cmp    dh,0x5f
  42bf83:	and    al,0xda
  42bf85:	cld    
  42bf86:	inc    esp
  42bf87:	ja     0x42c003
  42bf89:	add    al,0xe7
  42bf8b:	xchg   ebx,eax
  42bf8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf8d:	push   ss
  42bf8e:	cld    
  42bf8f:	or     al,0x2f
  42bf91:	push   0xb2468a42
  42bf96:	into   
  42bf97:	cdq    
  42bf98:	mov    edi,0x7a5cfa8b
  42bf9d:	sar    BYTE PTR [edx],1
  42bf9f:	pop    edi
  42bfa0:	sar    BYTE PTR [esi-0x69],cl
  42bfa3:	sar    DWORD PTR [esi],0xcf
  42bfa6:	mov    ecx,0xd5d0b004
  42bfab:	(bad)  
  42bfad:	les    edx,FWORD PTR [ebx]
  42bfaf:	fidiv  DWORD PTR [edi-0x43]
  42bfb2:	ss xchg edx,eax
  42bfb4:	or     eax,0x64e1269e
  42bfb9:	add    BYTE PTR [ecx],dl
  42bfbb:	xchg   ebp,eax
  42bfbc:	push   es
  42bfbd:	xchg   ebp,eax
  42bfbe:	push   edi
  42bfbf:	jmp    0x42c028
  42bfc1:	fcomp  DWORD PTR [ebp-0x4374c826]
  42bfc7:	pop    ds
  42bfc8:	push   esp
  42bfc9:	add    al,0xa4
  42bfcb:	fxch   st(1)
  42bfcd:	inc    edi
  42bfce:	fld    TBYTE PTR [ecx-0x75]
  42bfd1:	cld    
  42bfd2:	das    
  42bfd3:	push   0xffffffb8
  42bfd5:	ret    
  42bfd6:	mov    bl,0x45
  42bfd8:	sar    dh,cl
  42bfda:	mov    eax,ds:0xf58c66fc
  42bfdf:	out    0x73,al
  42bfe1:	pop    eax
  42bfe2:	jle    0x42c05c
  42bfe4:	div    BYTE PTR [edi-0x6c]
  42bfe7:	popa   
  42bfe8:	mov    bl,0xc1
  42bfea:	(bad)  
  42bfeb:	nop
  42bfec:	fisubr WORD PTR cs:[esi-0x715ceb67]
  42bff3:	js     0x42c030
  42bff5:	fiadd  WORD PTR [edi-0x26e152c5]
  42bffb:	arpl   WORD PTR [ebp-0x64],bp
  42bffe:	push   edi
  42bfff:	jne    0x42c07b
  42c001:	pusha  
  42c002:	popf   
  42c003:	dec    ebx
  42c004:	sti    
  42c005:	fnstenv [ebx]
  42c007:	or     ch,cl
  42c009:	jne    0x42c01b
  42c00b:	dec    ebp
  42c00c:	xor    ch,BYTE PTR [edx-0x36]
  42c00f:	push   0xffffffc0
  42c011:	inc    ebx
  42c012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c013:	dec    eax
  42c014:	push   ss
  42c015:	jle    0x42c039
  42c017:	(bad)  
  42c018:	inc    eax
  42c01a:	push   ebp
  42c01b:	pop    ebx
  42c01c:	dec    ecx
  42c01d:	pushf  
  42c01e:	data16 cld 
  42c020:	adc    BYTE PTR [edi],al
  42c022:	sub    BYTE PTR [ecx-0x250c713d],dl
  42c028:	inc    ebp
  42c029:	inc    ecx
  42c02a:	jnp    0x42bfb6
  42c02c:	loopne 0x42bfe0
  42c02e:	mov    al,0xcc
  42c030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c031:	and    al,0x5d
  42c033:	lods   eax,DWORD PTR ds:[esi]
  42c034:	js     0x42bfd6
  42c036:	not    BYTE PTR [ebp+0x43]
  42c039:	lods   al,BYTE PTR ds:[esi]
  42c03a:	enter  0x5d10,0xef
  42c03e:	arpl   cx,bp
  42c040:	cwde   
  42c041:	test   BYTE PTR ds:0xbfd99b8,bh
  42c047:	sub    eax,0x91915901
  42c04c:	shl    DWORD PTR [esi-0x2e9e301d],0x83
  42c053:	pop    edx
  42c054:	aam    0xb3
  42c056:	cld    
  42c057:	adc    al,0x5b
  42c059:	xor    eax,0x7c672632
  42c05e:	mov    al,ds:0xbb25e6c9
  42c063:	fsub   st,st(5)
  42c065:	push   ebp
  42c066:	sbb    DWORD PTR [ecx],ebx
  42c068:	push   edx
  42c069:	jbe    0x42c08c
  42c06b:	lods   al,BYTE PTR ds:[esi]
  42c06c:	add    si,bp
  42c06f:	cmp    al,0xdb
  42c071:	dec    esi
  42c072:	dec    ebx
  42c073:	jg     0x42c0ec
  42c075:	xchg   BYTE PTR [ecx-0x6b],ah
  42c078:	push   esp
  42c079:	mov    ds:0xe686bc64,al
  42c07e:	cld    
  42c07f:	and    al,0x1e
  42c081:	sar    BYTE PTR [eax],1
  42c083:	loope  0x42c038
  42c085:	inc    BYTE PTR [eax-0x425d0e4]
  42c08b:	dec    ebp
  42c08c:	push   ebx
  42c08d:	(bad)  
  42c08e:	mov    eax,0xcb6672ee
  42c093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c094:	and    esp,edi
  42c096:	loope  0x42c0f2
  42c098:	test   cl,0x35
  42c09b:	and    DWORD PTR [eax],ebp
  42c09d:	sbb    DWORD PTR [ebp+0x77],eax
  42c0a0:	push   eax
  42c0a1:	ror    DWORD PTR [edx+0x53],1
  42c0a4:	addr16 push 0xbef74bd1
  42c0aa:	in     al,0xdf
  42c0ac:	call   ecx
  42c0ae:	hlt    
  42c0af:	jnp    0x42c0c2
  42c0b1:	or     BYTE PTR [ebp-0x42e4f482],ch
  42c0b7:	sbb    al,0x39
  42c0b9:	es xchg esi,eax
  42c0bb:	adc    BYTE PTR [edx],ah
  42c0bd:	cwde   
  42c0be:	mul    DWORD PTR [edi-0x31061a0b]
  42c0c4:	jl     0x42c04a
  42c0c6:	loopne 0x42c04d
  42c0c8:	push   edx
  42c0c9:	inc    edi
  42c0ca:	inc    ebx
  42c0cb:	push   ecx
  42c0cc:	mov    edx,0x2375242f
  42c0d1:	fimul  DWORD PTR [esi+0xfb91a5e]
  42c0d7:	outs   dx,DWORD PTR ss:[esi]
  42c0d9:	xchg   ebx,eax
  42c0da:	pop    ds
  42c0db:	push   esp
  42c0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0dd:	aas    
  42c0de:	push   DWORD PTR [edi]
  42c0e0:	das    
  42c0e1:	rcl    BYTE PTR [edi],0x74
  42c0e4:	cli    
  42c0e5:	xchg   esp,ecx
  42c0e7:	sbb    eax,0x3b4850c4
  42c0ec:	cmp    eax,0x93c39bee
  42c0f1:	dec    ebp
  42c0f2:	mov    ecx,0x296c831b
  42c0f7:	ss adc eax,0x7a67cae
  42c0fd:	xchg   esp,eax
  42c0fe:	loopne 0x42c112
  42c100:	and    esi,esp
  42c102:	add    edi,esp
  42c104:	mov    ds:0x86a5cda8,al
  42c109:	add    DWORD PTR [ebp+0xeb57414],0xb967cf83
  42c113:	fdiv   st,st(7)
  42c115:	pop    ss
  42c116:	cdq    
  42c117:	stc    
  42c118:	icebp  
  42c119:	push   0xa13d7583
  42c11e:	shl    DWORD PTR [eax+eiz*1+0x1bc1df57],0x4a
  42c126:	fs je  0x42c0d2
  42c129:	bound  eax,QWORD PTR [ecx+0x1f86f98f]
  42c12f:	ss sahf 
  42c131:	ins    BYTE PTR es:[edi],dx
  42c132:	mov    bh,0x6e
  42c134:	jl     0x42c0ee
  42c136:	arpl   WORD PTR [edx+0x75],dx
  42c139:	out    0xee,eax
  42c13b:	lods   eax,DWORD PTR ds:[esi]
  42c13c:	cmp    ebx,DWORD PTR [edx-0x5f9270c2]
  42c142:	(bad)  
  42c143:	adc    DWORD PTR [edx-0x5aaaa240],ebp
  42c149:	cs adc al,0x60
  42c14c:	iret   
  42c14d:	pop    ss
  42c14e:	mov    ah,0xc5
  42c150:	iret   
  42c151:	stos   BYTE PTR es:[edi],al
  42c152:	stos   DWORD PTR es:[edi],eax
  42c153:	outs   dx,DWORD PTR ds:[esi]
  42c154:	pop    ds
  42c155:	popf   
  42c156:	aad    0x38
  42c158:	pop    esi
  42c159:	push   esp
  42c15a:	inc    edx
  42c15b:	xchg   esi,eax
  42c15c:	repnz mov BYTE PTR [esi-0x18],0x7b
  42c161:	enter  0xae30,0xc6
  42c165:	xor    BYTE PTR gs:0xb498fcee,cl
  42c16c:	(bad)  
  42c16d:	fs and eax,0xe5b3684d
  42c173:	mov    ah,0x63
  42c175:	xchg   BYTE PTR [ecx],cl
  42c177:	dec    edi
  42c178:	mov    ebp,0x802ca6a9
  42c17d:	jecxz  0x42c131
  42c17f:	(bad)  
  42c180:	out    dx,al
  42c181:	or     al,0x1
  42c183:	or     DWORD PTR [esi+0x4f],ecx
  42c186:	es js  0x42c1e6
  42c189:	repz in eax,dx
  42c18b:	rcr    BYTE PTR [ebx],1
  42c18d:	jmp    0x37e2:0xfadc5b16
  42c194:	inc    esp
  42c195:	add    ebx,DWORD PTR [edx]
  42c197:	adc    DWORD PTR [ecx+0x9],0x1f3fbf91
  42c19e:	pop    edx
  42c19f:	inc    eax
  42c1a0:	leave  
  42c1a1:	sbb    esi,DWORD PTR [esi]
  42c1a3:	sbb    esi,ecx
  42c1a5:	mov    esi,0x10f4e67
  42c1aa:	mov    DWORD PTR [esi-0x6b],ecx
  42c1ad:	out    dx,eax
  42c1ae:	add    al,0x16
  42c1b0:	xchg   bl,dl
  42c1b2:	or     BYTE PTR [eax],al
  42c1b4:	adc    BYTE PTR [edi+eax*4-0x544a8610],0xeb
  42c1bc:	fs add al,0xe2
  42c1bf:	lock sbb al,0x5
  42c1c2:	add    edi,ebx
  42c1c4:	xor    BYTE PTR [eax+0x22],ah
  42c1c7:	lea    eax,[esi+ebp*1]
  42c1ca:	leave  
  42c1cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1cc:	cli    
  42c1cd:	adc    eax,0xf744c919
  42c1d2:	add    ch,BYTE PTR ds:0xc58a1b5f
  42c1d8:	scas   ax,WORD PTR es:[edi]
  42c1da:	fdiv   DWORD PTR [esi]
  42c1dc:	clc    
  42c1dd:	lods   eax,DWORD PTR es:[esi]
  42c1df:	lea    eax,[edi+0x23]
  42c1e2:	mov    ss,WORD PTR gs:[esp+ecx*2]
  42c1e6:	push   ecx
  42c1e7:	test   al,0xa8
  42c1e9:	fcmovb st,st(3)
  42c1eb:	into   
  42c1ec:	mov    al,BYTE PTR [edx+eiz*1-0x54]
  42c1f0:	ins    DWORD PTR es:[edi],dx
  42c1f1:	and    esp,DWORD PTR [edi-0x76]
  42c1f4:	lods   eax,DWORD PTR ds:[esi]
  42c1f5:	dec    ebp
  42c1f6:	ss xor eax,0x501fda8a
  42c1fc:	add    bh,BYTE PTR [edi+0x6777ac45]
  42c202:	pop    es
  42c203:	mov    ds:0x4b4ab150,eax
  42c208:	sub    al,0x80
  42c20a:	inc    esp
  42c20b:	lods   eax,DWORD PTR ds:[esi]
  42c20c:	mov    esi,0x29189dcb
  42c211:	repz push es
  42c213:	pop    ecx
  42c214:	xchg   ebp,eax
  42c215:	cmp    bh,dh
  42c217:	xchg   edx,eax
  42c218:	or     al,0xc4
  42c21a:	push   edx
  42c21b:	mov    edx,0xe4b8e958
  42c220:	in     eax,dx
  42c221:	dec    eax
  42c222:	nop
  42c223:	in     eax,0xe9
  42c225:	(bad)  
  42c226:	jmp    FWORD PTR [ecx-0x6dc89b9d]
  42c22c:	call   0x885c35ad
  42c231:	nop
  42c232:	mov    ebp,0xff5dad
  42c237:	lock xchg ecx,eax
  42c239:	cs sti 
  42c23b:	or     DWORD PTR [eax+0x42b3f8bc],ebx
  42c241:	out    0xc5,eax
  42c243:	shl    DWORD PTR [eax-0x73],1
  42c246:	rcr    BYTE PTR [ebx-0x4b],cl
  42c249:	cmp    al,0x74
  42c24b:	iret   
  42c24c:	mov    bl,0x4d
  42c24e:	xchg   edi,eax
  42c24f:	xchg   edi,eax
  42c250:	data16 jb 0x42c1f7
  42c253:	out    0xdf,al
  42c255:	dec    eax
  42c256:	dec    esp
  42c257:	or     DWORD PTR [edi],edi
  42c259:	dec    ebp
  42c25a:	test   BYTE PTR [esi+eiz*4+0x48],dh
  42c25e:	stos   DWORD PTR es:[edi],eax
  42c25f:	fstp   TBYTE PTR [ecx+0x744a7659]
  42c265:	and    eax,0xad10374c
  42c26a:	in     eax,dx
  42c26b:	cmp    ch,al
  42c26d:	sub    al,0x1a
  42c26f:	mov    ch,0x89
  42c271:	or     eax,DWORD PTR [ebx-0x3d4dcefd]
  42c277:	daa    
  42c278:	xchg   BYTE PTR [edx+0x6],al
  42c27b:	mov    ebx,0xb18311bc
  42c280:	add    al,bh
  42c282:	inc    ebx
  42c283:	loop   0x42c303
  42c285:	mov    ebx,0x870469bd
  42c28a:	mov    edi,0xc2a0e8f8
  42c28f:	jmp    0x43e1:0x9cf093ac
  42c296:	into   
  42c297:	add    al,0x36
  42c299:	and    BYTE PTR [ebp+0x774efa90],dl
  42c29f:	psubusw mm0,QWORD PTR [ebx-0xe665ec6]
  42c2a6:	xchg   BYTE PTR [eax],ah
  42c2a8:	cmc    
  42c2a9:	jmp    0xae82:0xecaf8e69
  42c2b0:	xlat   BYTE PTR ds:[ebx]
  42c2b1:	pushf  
  42c2b2:	or     BYTE PTR [eax],al
  42c2b4:	in     eax,0x82
  42c2b6:	ja     0x42c26c
  42c2b8:	scas   al,BYTE PTR es:[edi]
  42c2b9:	xor    eax,0xb9e7c676
  42c2be:	push   0xffffff8a
  42c2c0:	fisubr DWORD PTR [esi]
  42c2c2:	xchg   ebp,eax
  42c2c3:	into   
  42c2c4:	pop    edx
  42c2c5:	aam    0x30
  42c2c7:	and    ch,BYTE PTR [edi]
  42c2c9:	jmp    0x310b9111
  42c2ce:	(bad)  
  42c2cf:	je     0x42c2e9
  42c2d1:	dec    ecx
  42c2d2:	fs pop edi
  42c2d4:	retf   0xdd2b
  42c2d7:	das    
  42c2d8:	cmc    
  42c2d9:	pop    ebx
  42c2da:	rcl    BYTE PTR [edx-0x31e47917],1
  42c2e0:	scas   al,BYTE PTR es:[edi]
  42c2e1:	pop    eax
  42c2e2:	(bad)  
  42c2e3:	aam    0x6e
  42c2e5:	mov    edx,0x27f9e8ed
  42c2ea:	retf   0xb9e0
  42c2ed:	sub    eax,DWORD PTR gs:[ebp+0xc]
  42c2f1:	jbe    0x42c280
  42c2f3:	ja     0x42c317
  42c2f5:	or     BYTE PTR [edi+0x22],dl
  42c2f8:	rol    BYTE PTR [eax-0x60],cl
  42c2fb:	jmp    FWORD PTR [ebp+edi*8+0x66]
  42c2ff:	shl    BYTE PTR [ebx-0x9],0xa
  42c303:	(bad)  
  42c305:	mov    ds:0xe2583c7e,al
  42c30a:	jge    0x42c37a
  42c30c:	xchg   ebp,eax
  42c30d:	dec    edi
  42c30e:	retf   
  42c30f:	or     BYTE PTR [ecx+ebp*4-0x13],dl
  42c313:	aam    0x18
  42c315:	push   0xffffffe7
  42c317:	sub    dl,BYTE PTR [edx-0x21]
  42c31a:	sbb    al,ah
  42c31c:	mov    esp,0xaad70678
  42c321:	or     al,0xc9
  42c323:	xor    al,0xc9
  42c325:	aaa    
  42c326:	pop    eax
  42c327:	fwait
  42c328:	imul   eax,DWORD PTR [edx],0xa
  42c32b:	mov    ds:0x709d9b7a,eax
  42c330:	inc    edi
  42c331:	je     0x42c347
  42c333:	lahf   
  42c334:	test   eax,0x4ac19aba
  42c339:	mov    edi,0xcbd34329
  42c33e:	mov    dl,0x12
  42c340:	dec    BYTE PTR [ecx-0x3c38cfe8]
  42c346:	stc    
  42c347:	pop    esi
  42c348:	scas   al,BYTE PTR es:[edi]
  42c349:	outs   dx,DWORD PTR ds:[esi]
  42c34a:	pusha  
  42c34b:	mov    bl,0x7
  42c34d:	bound  edi,QWORD PTR [edx+0x79]
  42c350:	mov    BYTE PTR [ebp+0x18bc63ff],bl
  42c356:	stos   BYTE PTR es:[edi],al
  42c357:	bound  ecx,QWORD PTR [esi*4+0xc03f033]
  42c35e:	lea    edx,[ebx-0x2d875155]
  42c364:	ret    0xb12f
  42c367:	jmp    0x5e4659d1
  42c36c:	arpl   ax,dx
  42c36e:	cmp    BYTE PTR [esi-0x5555750],0xc7
  42c375:	mov    esi,0xd77db25e
  42c37a:	fbstp  TBYTE PTR [edx+edi*1]
  42c37d:	push   eax
  42c37e:	(bad)  
  42c37f:	call   0x423cdfce
  42c384:	fld    TBYTE PTR [ecx+eiz*8+0x4b]
  42c388:	std    
  42c389:	arpl   dx,ax
  42c38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c38c:	jne    0x42c331
  42c38e:	das    
  42c38f:	xor    cl,dl
  42c391:	jno    0x42c335
  42c393:	stos   DWORD PTR es:[edi],eax
  42c394:	lods   eax,DWORD PTR ds:[esi]
  42c395:	pop    ecx
  42c396:	stc    
  42c397:	(bad)  
  42c398:	mov    bl,0xad
  42c39a:	xor    bh,BYTE PTR [ecx]
  42c39c:	jns    0x42c34c
  42c39e:	clc    
  42c39f:	push   0xfffffff4
  42c3a1:	xchg   esp,eax
  42c3a2:	outs   dx,DWORD PTR ds:[esi]
  42c3a3:	xor    eax,0x3d550696
  42c3a8:	and    DWORD PTR [edi],ecx
  42c3aa:	jns    0x2be0aeab
  42c3b0:	sar    BYTE PTR [eax+eiz*2],0x6
  42c3b4:	lods   al,BYTE PTR ds:[esi]
  42c3b5:	xchg   BYTE PTR [esi+esi*2],dl
  42c3b8:	mov    esp,eax
  42c3ba:	in     eax,0x8f
  42c3bc:	(bad)  
  42c3be:	push   ebx
  42c3bf:	mov    ch,0x3e
  42c3c1:	jb     0x42c3b0
  42c3c3:	cmp    bh,ah
  42c3c5:	test   DWORD PTR [ecx],0xc0cbfea6
  42c3cb:	sti    
  42c3cc:	fmul   DWORD PTR [edx]
  42c3ce:	(bad)
  42c3d1:	popa   
  42c3d2:	in     al,dx
  42c3d3:	adc    al,0xc8
  42c3d5:	pop    ecx
  42c3d6:	mov    ds:0x86a7a745,al
  42c3db:	adc    eax,0x3f26414d
  42c3e0:	inc    ecx
  42c3e1:	(bad)  
  42c3e2:	daa    
  42c3e3:	adc    eax,0x9cc3e041
  42c3e8:	dec    ecx
  42c3e9:	btc    DWORD PTR [edi+0x7],0xd3
  42c3ee:	push   ebx
  42c3ef:	lds    ebp,FWORD PTR [eax]
  42c3f1:	sbb    edx,DWORD PTR [edx]
  42c3f3:	loopne 0x42c410
  42c3f5:	ins    BYTE PTR es:[edi],dx
  42c3f6:	cli    
  42c3f7:	or     dl,BYTE PTR [eax+ebp*2-0x1405561]
  42c3fe:	mov    cl,0x15
  42c400:	and    bh,BYTE PTR [eax]
  42c402:	mov    ch,0xa4
  42c404:	lahf   
  42c405:	fsubr  DWORD PTR [eax+0x63c2d0d9]
  42c40b:	(bad)  
  42c40c:	adc    dh,BYTE PTR [esi-0x5d627132]
  42c412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c413:	mov    ch,0x1f
  42c415:	add    edx,DWORD PTR [edx-0x52]
  42c418:	clc    
  42c419:	jnp    0x42c48d
  42c41b:	jl     0x42c442
  42c41d:	jge    0x42c447
  42c41f:	pop    ecx
  42c420:	pop    ds
  42c421:	jp     0x42c3fc
  42c423:	ror    DWORD PTR [edi-0x4b],cl
  42c426:	jne    0x42c3b0
  42c428:	and    al,0x82
  42c42a:	sub    BYTE PTR [ebp+0x77],bh
  42c42d:	push   0xffffffd0
  42c42f:	aam    0xd8
  42c431:	jae    0x42c48d
  42c433:	leave  
  42c434:	inc    esp
  42c435:	inc    ebx
  42c436:	(bad)  
  42c437:	ficomp DWORD PTR [ebx]
  42c439:	add    al,0xaf
  42c43b:	jmp    0x6bd:0x7040c326
  42c442:	fimul  WORD PTR [edx]
  42c444:	scas   al,BYTE PTR es:[edi]
  42c445:	push   edx
  42c446:	in     al,dx
  42c447:	and    dl,BYTE PTR [esi-0x66]
  42c44a:	mov    al,ds:0xc55b92e
  42c44f:	xor    al,dl
  42c451:	lods   eax,DWORD PTR ds:[esi]
  42c452:	sub    BYTE PTR [ecx+eax*1-0x7],cl
  42c456:	and    DWORD PTR [edx+edx*4-0xec178ae],ebp
  42c45d:	call   0xd41d4190
  42c462:	outs   dx,BYTE PTR ds:[esi]
  42c463:	sbb    al,0x2b
  42c465:	repnz fmul DWORD PTR [edi+eiz*2-0x28309ffe]
  42c46d:	(bad)  
  42c46e:	push   ds
  42c46f:	fs cwde 
  42c471:	js     0x42c44c
  42c473:	test   DWORD PTR [ebx+0x5a],esp
  42c476:	jle    0x42c41e
  42c478:	(bad)  
  42c479:	jns    0x42c466
  42c47b:	cmp    ecx,DWORD PTR [edi+0x602bf597]
  42c481:	cmp    al,0x6e
  42c483:	or     al,0x48
  42c485:	test   DWORD PTR cs:[edi-0xf],edi
  42c489:	jno    0x42c45c
  42c48b:	xchg   esi,eax
  42c48c:	and    bl,al
  42c48e:	and    BYTE PTR [ebp+0x5dd51264],cl
  42c494:	nop
  42c495:	mov    al,0x4c
  42c497:	call   0x3b8a:0x958bf469
  42c49e:	xlat   BYTE PTR ds:[ebx]
  42c49f:	cdq    
  42c4a0:	and    BYTE PTR [ecx+0x30],bh
  42c4a3:	jns    0x42c4a3
  42c4a5:	pop    eax
  42c4a6:	xor    ch,cl
  42c4a8:	sub    DWORD PTR [edi],0xffffffb3
  42c4ab:	jmp    0x42c4a8
  42c4ad:	add    BYTE PTR [esi-0x3aa66558],bl
  42c4b3:	enter  0x6ffe,0x57
  42c4b7:	jg     0x42c448
  42c4b9:	jp     0x42c519
  42c4bb:	test   al,0x62
  42c4bd:	stc    
  42c4be:	push   ecx
  42c4bf:	mov    dl,0x3
  42c4c1:	push   es
  42c4c2:	popa   
  42c4c3:	add    BYTE PTR [ecx+eax*2],al
  42c4c6:	cmp    al,0xe8
  42c4c8:	xor    al,bl
  42c4ca:	adc    esp,DWORD PTR [edx+0x3619e7b8]
  42c4d0:	gs dec esi
  42c4d2:	aaa    
  42c4d3:	out    0xd2,eax
  42c4d5:	and    eax,0x8693c51b
  42c4da:	add    eax,eax
  42c4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c4dd:	dec    esp
  42c4de:	stos   BYTE PTR es:[edi],al
  42c4df:	add    eax,0x57ec00f3
  42c4e5:	push   esp
  42c4e6:	pop    DWORD PTR [esi-0x36]
  42c4e9:	mov    esp,0x4d373f9b
  42c4ee:	or     edx,ecx
  42c4f0:	cmp    ecx,ebp
  42c4f2:	es bnd ss js 0x42c553
  42c4f7:	push   esi
  42c4f8:	(bad)  
  42c4f9:	cdq    
  42c4fa:	(bad)  
  42c4fb:	sbb    eax,0x3222a759
  42c500:	(bad)  
  42c501:	out    dx,eax
  42c502:	pop    ebx
  42c503:	mov    edi,DWORD PTR ds:0x6136c6c3
  42c509:	(bad)  [ebx-0x6fc6ed16]
  42c50f:	add    dl,ch
  42c511:	cld    
  42c512:	add    esi,DWORD PTR [edx+0x40b2206e]
  42c518:	leave  
  42c519:	fnsave [ebx+0x6d]
  42c51c:	loopne 0x42c51e
  42c51e:	pop    ebx
  42c51f:	jne    0x42c4cb
  42c521:	mov    dl,0xa
  42c523:	mov    bl,0x22
  42c526:	or     esi,DWORD PTR [edx-0x5]
  42c529:	jbe    0x42c568
  42c52b:	adc    al,0x41
  42c52d:	pop    ds
  42c52e:	mov    ?,WORD PTR [esi+edx*4]
  42c531:	mov    WORD PTR [edx-0x31552029],cs
  42c537:	rcr    BYTE PTR [eax-0x56],1
  42c53a:	mov    ecx,DWORD PTR [eax-0x54]
  42c53d:	cmp    ah,BYTE PTR [edx+0x7a9f0a95]
  42c543:	or     eax,0xc79d0b46
  42c548:	aaa    
  42c549:	sbb    esp,DWORD PTR [ebp-0x2c]
  42c54c:	hlt    
  42c54d:	mov    bh,0x90
  42c54f:	jno    0x42c5c4
  42c551:	jmp    0x63012685
  42c556:	je     0x42c50b
  42c558:	inc    eax
  42c559:	and    dl,ah
  42c55b:	inc    esp
  42c55c:	shr    DWORD PTR [edx],1
  42c55e:	mov    ds:0xb96b9d98,eax
  42c563:	pop    edi
  42c564:	push   ss
  42c565:	je     0x42c5d7
  42c567:	ror    DWORD PTR [esi+0x20],0xeb
  42c56b:	push   eax
  42c56c:	shr    cl,1
  42c56e:	xchg   BYTE PTR [edi-0x6f2b53a1],al
  42c574:	daa    
  42c575:	mov    edi,cr5
  42c578:	mov    ebx,0x55f8f515
  42c57d:	mov    ah,0xea
  42c57f:	stos   BYTE PTR es:[edi],al
  42c580:	scas   eax,DWORD PTR es:[edi]
  42c581:	clc    
  42c582:	or     DWORD PTR [edi-0x69ab68d3],ebp
  42c588:	and    BYTE PTR [ebx+0x45236287],bh
  42c58e:	push   cs
  42c58f:	daa    
  42c590:	test   al,0xfd
  42c592:	push   ebx
  42c593:	and    al,0x53
  42c595:	rcl    DWORD PTR [ebx+esi*4],cl
  42c598:	ret    
  42c599:	test   DWORD PTR [edx+0x61b159cc],esi
  42c59f:	imul   esi,DWORD PTR [eax+0x5aa55dd2],0xffffffec
  42c5a6:	inc    esp
  42c5a7:	push   eax
  42c5a8:	push   esp
  42c5a9:	xor    al,0x61
  42c5ab:	rol    DWORD PTR [eax-0x44],cl
  42c5ae:	xchg   esp,eax
  42c5af:	cli    
  42c5b0:	scas   eax,DWORD PTR es:[edi]
  42c5b1:	ja     0x42c5c3
  42c5b3:	sub    DWORD PTR [eax],ecx
  42c5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5b6:	out    0xc,al
  42c5b8:	add    eax,0xf06ab1ac
  42c5bd:	fisttp QWORD PTR [edi+0x748db183]
  42c5c3:	push   ebx
  42c5c4:	lock repnz and esp,DWORD PTR [esi+0x2de60931]
  42c5cc:	frstor [ebp+ecx*2-0x31b8eb8b]
  42c5d3:	(bad)  
  42c5d5:	jb     0x42c56e
  42c5d7:	gs iret 
  42c5d9:	xchg   ebp,eax
  42c5da:	bound  eax,QWORD PTR [eax-0x5e]
  42c5dd:	xor    dh,BYTE PTR [esi+0x3448545d]
  42c5e3:	and    BYTE PTR [edi+0x1a],al
  42c5e6:	std    
  42c5e7:	clc    
  42c5e8:	out    0xa9,al
  42c5ea:	fwait
  42c5eb:	jle    0x42c623
  42c5ed:	nop
  42c5ee:	ins    DWORD PTR es:[edi],dx
  42c5ef:	cld    
  42c5f0:	add    al,0x2c
  42c5f2:	and    DWORD PTR [edi],0xffffff99
  42c5f5:	stc    
  42c5f6:	sbb    esi,esp
  42c5f8:	xor    DWORD PTR [ecx],0x6d
  42c5fb:	test   BYTE PTR [ebx-0xf6772c4],bh
  42c601:	int    0x7f
  42c603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c604:	popf   
  42c605:	stos   BYTE PTR es:[edi],al
  42c606:	xor    bl,BYTE PTR [esi]
  42c608:	mov    bh,ah
  42c60a:	cwde   
  42c60b:	std    
  42c60c:	std    
  42c60d:	mov    cs,WORD PTR [esi-0x5ac5752c]
  42c613:	xor    DWORD PTR [ebp+0x57af68c9],ecx
  42c619:	sub    al,0x27
  42c61b:	add    bh,BYTE PTR [edx-0x73]
  42c61e:	je     0x42c5db
  42c620:	push   0xffffff8b
  42c622:	rcr    BYTE PTR [esi+0x2a],0x4e
  42c626:	(bad)
  42c629:	sbb    eax,0xfa9a80b6
  42c62e:	or     BYTE PTR ds:0x3c7141a3,dh
  42c634:	inc    edi
  42c635:	lds    ecx,FWORD PTR [esi+0x3b]
  42c638:	leave  
  42c639:	sub    esp,DWORD PTR [esi+0x165c9b21]
  42c63f:	adc    BYTE PTR [edx+0x4602e07f],ah
  42c645:	or     ecx,DWORD PTR [edi+0x5f]
  42c648:	out    dx,al
  42c649:	cmp    eax,0x15ffbe7c
  42c64e:	mov    eax,ds:0x61ba88d
  42c653:	mov    WORD PTR [ebp+edx*1+0x64],?
  42c657:	int3   
  42c658:	sbb    al,0xe
  42c65a:	lods   al,BYTE PTR ds:[esi]
  42c65b:	jmp    0xee84f177
  42c660:	sar    BYTE PTR [eax+edx*4+0x7a5d479e],0xe
  42c668:	(bad)  
  42c669:	sub    BYTE PTR [edx+0x1d5d0355],ch
  42c66f:	and    dl,BYTE PTR [ebp-0x63]
  42c672:	dec    ecx
  42c673:	adc    cl,BYTE PTR [ecx]
  42c675:	inc    ebp
  42c676:	xor    DWORD PTR [edx+0x5d694988],ebx
  42c67c:	xchg   ebx,eax
  42c67d:	push   esp
  42c67e:	sbb    ecx,DWORD PTR [ebx+0x5cf737a9]
  42c684:	rcr    DWORD PTR [edi],cl
  42c686:	xor    DWORD PTR [ebx-0x732cb74a],ebp
  42c68c:	lods   eax,DWORD PTR ds:[esi]
  42c68d:	push   0x3d1ae897
  42c692:	out    dx,eax
  42c693:	sub    DWORD PTR [ebp-0x3c89db72],ecx
  42c699:	(bad)  [ebx]
  42c69b:	ss int 0x96
  42c69e:	cmp    DWORD PTR [esi+ecx*2],esp
  42c6a1:	pop    esp
  42c6a2:	ins    BYTE PTR es:[edi],dx
  42c6a3:	mov    bl,0x86
  42c6a5:	xchg   al,dh
  42c6a7:	pop    ebp
  42c6a8:	cmp    BYTE PTR [edx+0xd7b6724],ch
  42c6ae:	pushf  
  42c6af:	cmp    dl,ah
  42c6b1:	cmp    DWORD PTR [ebx],ebx
  42c6b3:	adc    ebp,DWORD PTR [edx-0x26]
  42c6b6:	xor    BYTE PTR [edi+0x7b34e670],dh
  42c6bc:	cmp    DWORD PTR [ecx],ebx
  42c6be:	mov    edi,0x40995fa6
  42c6c3:	std    
  42c6c4:	inc    DWORD PTR ds:0xdf7bcbb0
  42c6ca:	push   ebx
  42c6cb:	and    esi,DWORD PTR es:[edx+eax*1]
  42c6cf:	sbb    DWORD PTR [edx],ecx
  42c6d1:	xchg   esp,eax
  42c6d2:	mov    ecx,0xcea23cc5
  42c6d7:	jp     0x42c6ba
  42c6d9:	fist   WORD PTR [esi+0x1a44ac9b]
  42c6df:	sub    DWORD PTR [edi+ebp*1-0x254be89e],0x2a
  42c6e7:	hlt    
  42c6e8:	sbb    dh,al
  42c6ea:	or     BYTE PTR [edi],ch
  42c6ec:	inc    eax
  42c6ed:	xchg   BYTE PTR [ecx+edx*4+0x76],ch
  42c6f1:	add    BYTE PTR [edx-0x3a],bh
  42c6f4:	or     al,BYTE PTR [edx-0x1]
  42c6f7:	das    
  42c6f8:	ins    BYTE PTR es:[edi],dx
  42c6f9:	sub    al,0x32
  42c6fb:	jge    0x42c6cb
  42c6fd:	fiadd  WORD PTR [edx]
  42c6ff:	xchg   ecx,eax
  42c700:	sti    
  42c701:	cmp    eax,DWORD PTR [ecx]
  42c703:	push   0x3eb821ad
  42c708:	adc    BYTE PTR [edi+0x8281334],al
  42c70e:	je     0x42c6c2
  42c710:	inc    esp
  42c711:	(bad)  
  42c712:	push   cs
  42c713:	not    DWORD PTR [esi+0x64]
  42c716:	xchg   esi,eax
  42c717:	mov    ah,0xa9
  42c719:	add    esi,DWORD PTR [eax+0x338e3578]
  42c71f:	or     bh,BYTE PTR ds:0x860c21af
  42c725:	enter  0xd440,0x40
  42c729:	mov    ecx,0x3c329d8d
  42c72e:	out    0x4d,al
  42c730:	inc    ebx
  42c731:	dec    esi
  42c732:	pop    ss
  42c733:	adc    DWORD PTR [esi],ebp
  42c735:	pop    esp
  42c736:	pop    esi
  42c737:	cmp    ebp,DWORD PTR [edx-0x77d0ec72]
  42c73d:	cmp    al,0x74
  42c73f:	pop    ebx
  42c740:	lea    esi,[esp+ecx*1+0x2eba70c1]
  42c747:	add    eax,0xf47a492f
  42c74c:	into   
  42c74d:	cmp    ah,0xd1
  42c750:	adc    al,0x90
  42c752:	sub    dh,bl
  42c754:	ja     0x42c6f2
  42c756:	js     0x42c787
  42c758:	mov    DWORD PTR [ebx+0x5b],0xaec70ce7
  42c75f:	repnz pop edi
  42c761:	inc    edi
  42c762:	std    
  42c763:	sbb    ch,BYTE PTR [ebp+0x68]
  42c766:	ja     0x42c705
  42c768:	scas   al,BYTE PTR es:[edi]
  42c769:	test   BYTE PTR [ebx],cl
  42c76b:	scas   eax,DWORD PTR es:[edi]
  42c76c:	mov    DWORD PTR [edx+0x462f8f74],ebp
  42c772:	cmp    al,0x19
  42c774:	adc    esi,DWORD PTR [edx+eax*2+0x60]
  42c778:	and    BYTE PTR [esi],bl
  42c77a:	fiadd  WORD PTR [ebx-0x60]
  42c77d:	adc    ecx,esi
  42c77f:	mov    esp,0x4f556788
  42c784:	mov    cl,0xfc
  42c786:	dec    esp
  42c787:	xlat   BYTE PTR ds:[ebx]
  42c788:	out    dx,eax
  42c789:	mov    eax,0x2da8105e
  42c78e:	cmp    cl,BYTE PTR [edx*4+0x5763f243]
  42c795:	mov    bh,0xa1
  42c797:	loopne 0x42c72a
  42c799:	and    al,0x73
  42c79b:	pop    ds
  42c79c:	in     eax,dx
  42c79d:	adc    ebx,DWORD PTR [edi]
  42c79f:	sbb    ecx,ebp
  42c7a1:	xchg   ebx,eax
  42c7a2:	scas   al,BYTE PTR es:[edi]
  42c7a3:	ja     0x42c817
  42c7a5:	imul   ebx,DWORD PTR [esi-0x20],0xc65cb992
  42c7ac:	jne    0x42c802
  42c7ae:	cmp    BYTE PTR [ebx],0x7b
  42c7b1:	mov    ebx,0x8fe3952c
  42c7b6:	add    ch,cl
  42c7b8:	xlat   BYTE PTR ds:[ebx]
  42c7b9:	mov    bh,0x8d
  42c7bb:	and    dl,cl
  42c7bd:	lock mov ebx,0x69ef239f
  42c7c3:	mov    eax,0x519479cf
  42c7c8:	inc    ecx
  42c7c9:	cmp    BYTE PTR [edx],ah
  42c7cb:	leave  
  42c7cc:	jns    0x42c762
  42c7ce:	fwait
  42c7cf:	xchg   edi,eax
  42c7d0:	fucomip st,st(6)
  42c7d2:	sbb    BYTE PTR [ebp-0x80],0x3d
  42c7d6:	imul   esi
  42c7d8:	jno    0x42c766
  42c7da:	aam    0x4e
  42c7dc:	retf   
  42c7dd:	sbb    bh,BYTE PTR [esi-0x50045475]
  42c7e3:	xchg   ebp,eax
  42c7e4:	sub    ecx,DWORD PTR [ecx]
  42c7e6:	mov    al,ds:0x7f296600
  42c7eb:	stc    
  42c7ec:	aad    0x0
  42c7ee:	js     0x42c834
  42c7f0:	(bad)  
  42c7f1:	repz mov esp,0xfec9bd5b
  42c7f7:	fcomp  QWORD PTR [edi+eiz*1]
  42c7fa:	(bad)  
  42c7fb:	out    0x57,eax
  42c7fd:	pop    esi
  42c7fe:	jp     0x42c84c
  42c800:	in     al,dx
  42c801:	jnp    0x42c817
  42c803:	dec    esp
  42c804:	(bad)  
  42c806:	add    eax,DWORD PTR [ebx-0x51]
  42c809:	repnz not BYTE PTR cs:[ebx-0x1ce33a93]
  42c811:	rdpmc  
  42c813:	jbe    0x42c80c
  42c815:	neg    BYTE PTR [edi]
  42c817:	jb     0x42c851
  42c819:	dec    ecx
  42c81a:	sub    BYTE PTR [esi+0x3bd86d6d],bh
  42c820:	add    al,0xdb
  42c822:	aas    
  42c823:	mov    cl,0x64
  42c825:	outs   dx,DWORD PTR ds:[esi]
  42c826:	sub    DWORD PTR [edx+0x1b],esi
  42c829:	cs mov al,0xc3
  42c82c:	pop    ecx
  42c82d:	cmp    edi,DWORD PTR [esi-0x7a]
  42c830:	mov    dl,0x52
  42c832:	sub    ah,dh
  42c834:	pop    esi
  42c835:	mov    al,ds:0x2ab1e0c3
  42c83a:	rcl    DWORD PTR [ebp-0x1d1318bd],0x28
  42c841:	jge    0x42c8b8
  42c843:	test   BYTE PTR [eax-0x5f8a0eb9],ah
  42c849:	ds dec esi
  42c84b:	sbb    bh,bl
  42c84d:	and    ebp,DWORD PTR [ebp-0x2dd8bb2d]
  42c853:	nop
  42c854:	pop    ecx
  42c855:	adc    ah,BYTE PTR [esi]
  42c857:	and    eax,ebp
  42c859:	mov    al,0x5d
  42c85b:	and    ebx,ecx
  42c85d:	jmp    0x62191b3
  42c862:	adc    edi,DWORD PTR [edi]
  42c864:	or     ebp,DWORD PTR [edx+0x61]
  42c867:	add    eax,0x4018db7e
  42c86c:	push   ebp
  42c86d:	cdq    
  42c86e:	addr16 out 0x29,al
  42c871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c872:	cld    
  42c873:	or     al,0xe6
  42c875:	hlt    
  42c876:	jnp    0x42c8ae
  42c878:	xor    eax,0x12
  42c87b:	outs   dx,BYTE PTR ds:[esi]
  42c87c:	and    bh,cl
  42c87e:	(bad)  
  42c87f:	fidivr DWORD PTR [edx]
  42c881:	imul   eax,DWORD PTR [edi+ebp*8+0xe77273c],0xabb2928a
  42c88c:	(bad)  
  42c88d:	in     eax,0x70
  42c88f:	push   0xffffff84
  42c891:	add    ch,bh
  42c893:	lock mov ch,0x8b
  42c896:	ins    BYTE PTR es:[edi],dx
  42c897:	loope  0x42c87e
  42c899:	pop    ss
  42c89a:	scas   eax,DWORD PTR es:[edi]
  42c89b:	mov    edx,0xc4cc1f8c
  42c8a0:	cmp    al,0xcd
  42c8a2:	dec    edi
  42c8a3:	jge    0x42c8b5
  42c8a5:	lock (bad) 
  42c8a7:	fsub   QWORD PTR [ecx+0x301a1ff3]
  42c8ad:	cld    
  42c8ae:	(bad)  
  42c8b0:	imul   ebx,DWORD PTR [ebp-0x55f1ca9d],0xffffffa3
  42c8b7:	rol    DWORD PTR [ebx-0x9],0xd7
  42c8bb:	retfw  0x570f
  42c8bf:	out    0xb1,al
  42c8c1:	(bad)  
  42c8c2:	and    DWORD PTR [ecx],edi
  42c8c4:	int    0x93
  42c8c6:	mov    ds:0x2c6b888b,eax
  42c8cb:	imul   edi,DWORD PTR ds:0xac2fe4a5,0xaf1e92c8
  42c8d5:	cwde   
  42c8d6:	adc    al,0xec
  42c8d8:	sub    ebx,DWORD PTR [ecx]
  42c8da:	jg     0x42c8ea
  42c8dc:	(bad)  [ebx+edx*1+0x739480e5]
  42c8e3:	pop    es
  42c8e4:	or     DWORD PTR [ecx+0x3b7fc499],0x6089680
  42c8ee:	push   cs
  42c8ef:	loope  0x42c8ba
  42c8f1:	sar    DWORD PTR [esi-0x7f],0xc2
  42c8f5:	das    
  42c8f6:	cmp    DWORD PTR [esi-0x37],ecx
  42c8f9:	popf   
  42c8fa:	(bad)  
  42c8fb:	fisttp WORD PTR [ebx]
  42c8fd:	popa   
  42c8fe:	mov    edi,ds
  42c900:	dec    ebx
  42c901:	xchg   esp,eax
  42c902:	mov    dl,0xcd
  42c904:	jge    0x42c894
  42c906:	and    DWORD PTR [ecx+0x77d40460],ecx
  42c90c:	lods   al,BYTE PTR ds:[esi]
  42c90d:	mov    dl,0xe8
  42c90f:	popf   
  42c910:	shr    DWORD PTR [ebx+0x6b116828],cl
  42c916:	imul   eax,DWORD PTR [edx-0x1e1382a],0xffffffe3
  42c91d:	sub    al,0x28
  42c91f:	das    
  42c920:	mov    bh,0xd0
  42c922:	xchg   ebp,eax
  42c923:	push   0x43
  42c925:	mov    al,bh
  42c927:	and    BYTE PTR [eax-0x4709cac0],bh
  42c92d:	lods   al,BYTE PTR ds:[esi]
  42c92e:	pusha  
  42c92f:	sub    DWORD PTR [edx+0x7c],edx
  42c932:	mov    dh,0x36
  42c934:	push   ds
  42c935:	mov    dl,0x61
  42c937:	test   BYTE PTR [ebp+esi*4-0x76],0xfe
  42c93c:	loope  0x42c8fb
  42c93e:	pop    ss
  42c93f:	stos   BYTE PTR es:[edi],al
  42c940:	push   esp
  42c941:	mov    bl,0xf9
  42c943:	jo     0x42c93c
  42c945:	call   DWORD PTR [ecx-0x63]
  42c948:	and    ch,BYTE PTR [esi+0x762aed8f]
  42c94e:	lock int3 
  42c950:	daa    
  42c951:	sub    BYTE PTR [ebp-0x4b3e5377],bh
  42c957:	dec    esi
  42c958:	pushf  
  42c959:	lods   eax,DWORD PTR ds:[esi]
  42c95a:	call   0xbaaeb113
  42c95f:	xchg   esi,eax
  42c960:	in     eax,dx
  42c961:	aam    0x1d
  42c963:	jne    0x42c90f
  42c965:	xor    al,0xba
  42c967:	mov    WORD PTR [ecx],es
  42c969:	jle    0x42c99c
  42c96b:	ror    BYTE PTR [ebx-0x6ca1bbfb],1
  42c971:	retf   0x5d01
  42c974:	je     0x42c904
  42c976:	mov    ch,0x56
  42c978:	inc    edi
  42c979:	js     0x42c9b5
  42c97b:	(bad)  
  42c97d:	or     DWORD PTR [esi+0x1547c2b],esi
  42c983:	jmp    0x98818bf0
  42c988:	mov    edx,ebp
  42c98a:	mov    bl,0x37
  42c98c:	and    dl,BYTE PTR [ebp-0xb]
  42c98f:	pushf  
  42c990:	ss dec edi
  42c992:	mov    ds:0xf799ccc8,al
  42c997:	jl     0x42c966
  42c999:	jp     0x42c9a9
  42c99b:	adc    eax,0xb4d9711d
  42c9a0:	std    
  42c9a1:	js     0x42ca1e
  42c9a3:	sbb    ah,al
  42c9a5:	adc    esi,DWORD PTR [ebp+ebx*1+0x11ab89af]
  42c9ac:	cmp    ah,bl
  42c9ae:	ja     0x42c955
  42c9b0:	retf   
  42c9b1:	adc    DWORD PTR [edx],0x35ed11d8
  42c9b7:	jns    0x42ca0f
  42c9b9:	ja     0x42ca36
  42c9bb:	and    bl,BYTE PTR [eax-0xc]
  42c9be:	mov    ebp,0x55f7e74f
  42c9c3:	js     0x42ca22
  42c9c5:	repnz not DWORD PTR [eax]
  42c9c8:	xlat   BYTE PTR ds:[ebx]
  42c9c9:	mov    WORD PTR [ecx-0xc0fbcc3],fs
  42c9cf:	ret    
  42c9d0:	mov    ds:0xb92c6678,eax
  42c9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9d6:	or     BYTE PTR [esi-0xd],cl
  42c9d9:	aaa    
  42c9da:	xchg   BYTE PTR fs:[esi],ah
  42c9dd:	es mov ah,0x3d
  42c9e0:	lea    edi,[eax]
  42c9e2:	call   DWORD PTR [edi]
  42c9e4:	xchg   esp,eax
  42c9e5:	adc    eax,0xc70b6b0d
  42c9ea:	jmp    0x7a1d50b2
  42c9ef:	mov    ecx,eax
  42c9f1:	mov    ebx,0xf97e05a6
  42c9f6:	mov    bh,0xa5
  42c9f8:	fnsave [eax+0x8cb38fe]
  42c9fe:	add    ebx,DWORD PTR [edx-0x47]
  42ca01:	jecxz  0x42c9ca
  42ca03:	test   BYTE PTR [eax+0x67aa144f],bl
  42ca09:	fmul   st,st(4)
  42ca0b:	mov    bl,0xf6
  42ca0d:	xlat   BYTE PTR ds:[ebx]
  42ca0e:	scas   eax,DWORD PTR es:[edi]
  42ca0f:	je     0x42c9c2
  42ca11:	loopne 0x42c9b5
  42ca13:	int    0x89
  42ca15:	(bad)  
  42ca16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca17:	add    cl,BYTE PTR [ebx+edi*2+0x35769aca]
  42ca1e:	adc    ebp,DWORD PTR [ecx+ebp*8+0x16]
  42ca22:	fisub  WORD PTR [esi+eax*1-0x7]
  42ca26:	sbb    edi,0xffffffb7
  42ca29:	adc    eax,0x6a35a98f
  42ca2e:	push   ebp
  42ca2f:	out    0x3f,al
  42ca31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca32:	push   ss
  42ca33:	lea    esi,[esi-0x4ad75607]
  42ca39:	out    0x6a,eax
  42ca3b:	cdq    
  42ca3c:	jmp    0x5260:0xcddeb1b4
  42ca43:	iret   
  42ca44:	sub    al,0x9
  42ca46:	xor    bl,ah
  42ca48:	mov    DWORD PTR [ebx+esi*1-0x1cd51796],ecx
  42ca4f:	sub    al,0xa0
  42ca51:	rcr    BYTE PTR [eax-0x5f],1
  42ca54:	sbb    al,0xaa
  42ca56:	jbe    0x42cab6
  42ca58:	cld    
  42ca59:	cmp    DWORD PTR ds:[eax-0x3c],0x53b34a5
  42ca61:	hlt    
  42ca62:	loopne 0x42c9f4
  42ca64:	adc    bh,BYTE PTR [ecx]
  42ca66:	push   ss
  42ca67:	xlat   BYTE PTR ds:[ebx]
  42ca68:	retf   0xd0b5
  42ca6b:	into   
  42ca6c:	out    0xec,eax
  42ca6e:	jae    0x42ca3d
  42ca70:	cmp    al,0xfe
  42ca72:	xchg   BYTE PTR [ecx],ch
  42ca74:	and    eax,DWORD PTR [ebx]
  42ca76:	cmp    BYTE PTR [edx],0xe9
  42ca79:	dec    eax
  42ca7a:	aad    0x2f
  42ca7c:	ss dec ebp
  42ca7e:	sub    eax,0x81f4fe12
  42ca83:	mov    ch,0x3b
  42ca85:	add    ebx,edx
  42ca87:	mov    esi,0xc9393feb
  42ca8c:	push   ecx
  42ca8d:	(bad)  
  42ca8e:	jb     0x42cb08
  42ca90:	sub    al,0xa4
  42ca92:	enter  0x1768,0x47
  42ca96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca97:	xor    al,0x93
  42ca99:	ins    DWORD PTR es:[edi],dx
  42ca9a:	sbb    BYTE PTR [edi],0x83
  42ca9d:	xchg   esp,eax
  42ca9e:	fwait
  42ca9f:	cwde   
  42caa0:	int    0x20
  42caa2:	cmp    eax,0x5f473161
  42caa7:	mov    edi,0x3dd8db09
  42caac:	adc    BYTE PTR [esi+0x3b],ch
  42caaf:	das    
  42cab0:	mov    eax,0x77c70f79
  42cab5:	bound  edi,QWORD PTR [ecx-0x11]
  42cab8:	dec    ecx
  42cab9:	mov    ds:0xf5a3a3c2,al
  42cabe:	retf   
  42cabf:	(bad)  [eax]
  42cac1:	jae    0x42cade
  42cac3:	pop    ebx
  42cac4:	inc    ebp
  42cac5:	add    al,0xcf
  42cac7:	scas   al,BYTE PTR es:[edi]
  42cac8:	in     al,dx
  42cac9:	jns    0x42cb3e
  42cacb:	call   0x7a22:0xca412366
  42cad2:	xor    eax,0xfa7673e2
  42cad7:	ds retf 
  42cad9:	fcomip st,st(7)
  42cadb:	lds    ebp,FWORD PTR [edi-0x7758a1ce]
  42cae1:	sub    ah,bh
  42cae3:	fidiv  WORD PTR [edx+0x10228884]
  42cae9:	xchg   esi,eax
  42caea:	mov    ebp,0xd4ad2d84
  42caef:	mov    ah,0xc2
  42caf1:	xchg   ebp,eax
  42caf2:	sub    DWORD PTR [ebp-0x3057ac2f],ebx
  42caf8:	pusha  
  42caf9:	or     esp,DWORD PTR [ecx+0x8da42a7]
  42caff:	push   0x9961c9f0
  42cb04:	sub    BYTE PTR [edi+0x33],0x46
  42cb08:	imul   esp,DWORD PTR [esi],0x5b197970
  42cb0e:	inc    edi
  42cb0f:	jo     0x42cab2
  42cb11:	dec    ecx
  42cb12:	push   esp
  42cb13:	loopne 0x42cad7
  42cb15:	inc    BYTE PTR [edi]
  42cb17:	mov    cl,0x97
  42cb19:	xchg   edi,eax
  42cb1a:	ins    BYTE PTR es:[edi],dx
  42cb1b:	inc    eax
  42cb1c:	mov    ah,0x1a
  42cb1e:	shr    DWORD PTR [ecx-0x2a60b410],1
  42cb24:	imul   esi,DWORD PTR [eax+0x9],0x86cb1ce1
  42cb2b:	(bad)  
  42cb2c:	mov    eax,ds:0x7bd3fc28
  42cb31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb32:	dec    edi
  42cb33:	aaa    
  42cb34:	mov    WORD PTR [edi-0x5e],fs
  42cb37:	sub    DWORD PTR [ecx+0x4550732f],ebp
  42cb3d:	ins    DWORD PTR es:[edi],dx
  42cb3e:	inc    ebp
  42cb3f:	cmp    dh,dl
  42cb41:	into   
  42cb42:	sub    BYTE PTR [esi-0x45],cl
  42cb45:	pop    esi
  42cb46:	ror    BYTE PTR [ebp+0x7b600ff4],0x93
  42cb4d:	sti    
  42cb4e:	dec    BYTE PTR [ecx+0x68cc06e8]
  42cb54:	(bad)
  42cb57:	jns    0x42cb1a
  42cb59:	xchg   ebp,eax
  42cb5a:	in     al,dx
  42cb5b:	adc    bh,BYTE PTR [eax+0x72c0c58f]
  42cb61:	cmp    al,0x9e
  42cb63:	fstp   TBYTE PTR [eax-0x5a7c6f25]
  42cb69:	out    dx,eax
  42cb6a:	sub    ecx,DWORD PTR [eax+0x45]
  42cb6d:	mov    cl,0x62
  42cb6f:	mov    edi,0x1d8d3f78
  42cb74:	int3   
  42cb75:	xchg   BYTE PTR [eax],bl
  42cb77:	lods   al,BYTE PTR ds:[esi]
  42cb78:	mov    eax,ds:0x9c9111a0
  42cb7d:	out    dx,al
  42cb7e:	push   edi
  42cb7f:	rol    BYTE PTR ds:0xb925ca32,cl
  42cb85:	sbb    al,0xf9
  42cb87:	sub    DWORD PTR [ebx-0x22],edi
  42cb8a:	(bad)  
  42cb8b:	call   0xf401c276
  42cb90:	lds    edi,FWORD PTR [edx+0x1135c55b]
  42cb96:	in     eax,dx
  42cb97:	ret    0x9015
  42cb9a:	xor    BYTE PTR [eax+eax*4+0x61bdb366],0x39
  42cba2:	stos   DWORD PTR es:[edi],eax
  42cba3:	jnp    0x42cbd1
  42cba5:	sti    
  42cba6:	mov    cl,0x85
  42cba8:	popa   
  42cba9:	cmc    
  42cbaa:	(bad)  
  42cbab:	jbe    0x42cb6a
  42cbad:	mov    al,0x8
  42cbaf:	pop    esp
  42cbb0:	cmp    edi,DWORD PTR [edi-0x1f889778]
  42cbb6:	in     al,0x8
  42cbb8:	adc    ch,ch
  42cbba:	aas    
  42cbbb:	(bad)  
  42cbbc:	pop    ss
  42cbbd:	or     BYTE PTR [edx],0xcf
  42cbc0:	sub    DWORD PTR [esi],0xffeec16d
  42cbc6:	add    eax,0x8655345e
  42cbcb:	loope  0x42cb69
  42cbcd:	arpl   WORD PTR [edi+0x161ff465],di
  42cbd3:	imul   DWORD PTR [edi]
  42cbd5:	push   edx
  42cbd6:	mov    dl,0x45
  42cbd8:	cmp    BYTE PTR [esi+0x79],0xa1
  42cbdc:	ins    DWORD PTR es:[edi],dx
  42cbdd:	fwait
  42cbde:	sahf   
  42cbdf:	pop    eax
  42cbe0:	sub    bh,0x2f
  42cbe3:	or     al,0xd9
  42cbe5:	or     al,0x96
  42cbe7:	mov    ds:0xe5043920,eax
  42cbec:	cmp    DWORD PTR es:[edi-0xd],esp
  42cbf0:	out    dx,al
  42cbf1:	in     eax,dx
  42cbf2:	xchg   DWORD PTR [esi+0x4e],eax
  42cbf5:	ucomiss xmm3,xmm5
  42cbf8:	or     edx,DWORD PTR [ebp+0x6b24d48]
  42cbfe:	xchg   ebx,eax
  42cbff:	aam    0xf0
  42cc01:	xchg   ecx,eax
  42cc02:	xchg   edx,eax
  42cc03:	in     eax,0x53
  42cc05:	retf   
  42cc06:	retf   0x55ee
  42cc09:	jno    0x42cc44
  42cc0b:	sbb    eax,0xc4233b84
  42cc10:	mov    cl,0x5a
  42cc12:	(bad)  
  42cc13:	in     al,0x59
  42cc15:	mov    ebp,0x71ea75a3
  42cc1a:	or     eax,0xb7de718e
  42cc1f:	add    BYTE PTR [ecx+0x27870c],0xf0
  42cc26:	cmp    BYTE PTR [edx],cl
  42cc28:	add    eax,0x2954d862
  42cc2d:	mov    ds:0x5712b54f,al
  42cc32:	inc    ebx
  42cc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc34:	stos   BYTE PTR es:[edi],al
  42cc35:	and    bl,BYTE PTR [ecx]
  42cc37:	jno    0x42cbd8
  42cc39:	bound  edx,QWORD PTR [esp+ebp*2]
  42cc3c:	or     al,0x88
  42cc3e:	sbb    esp,DWORD PTR [edx+ecx*8]
  42cc41:	inc    ebx
  42cc42:	push   ebx
  42cc43:	jl     0x42ccaa
  42cc45:	add    edx,DWORD PTR [ecx+0x37]
  42cc48:	or     al,bl
  42cc4a:	int    0xa
  42cc4c:	imul   edi,DWORD PTR [ebp-0x53],0x9743fa86
  42cc53:	push   ss
  42cc54:	out    dx,al
  42cc55:	inc    esp
  42cc56:	jo     0x42cc2f
  42cc58:	push   ebx
  42cc59:	dec    edx
  42cc5a:	int3   
  42cc5b:	push   0xc462806d
  42cc60:	in     eax,dx
  42cc61:	aam    0x97
  42cc63:	pushf  
  42cc64:	jne    0x42cc2b
  42cc66:	call   0x30a9:0xbca2be1c
  42cc6d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42cc6f:	je     0x42cc83
  42cc71:	push   esp
  42cc72:	ret    0x704c
  42cc75:	dec    edx
  42cc76:	mov    bh,0x16
  42cc78:	inc    DWORD PTR [edi-0x188724dc]
  42cc7e:	push   esp
  42cc7f:	push   esp
  42cc80:	sub    ah,BYTE PTR [edx+0x1d]
  42cc83:	lods   eax,DWORD PTR ds:[esi]
  42cc84:	loop   0x42cd04
  42cc86:	repnz loopne 0x42ccb7
  42cc89:	sub    bh,BYTE PTR [edi+0x65]
  42cc8c:	jp     0x42cc3a
  42cc8e:	mov    edi,ebp
  42cc90:	sub    al,0xa0
  42cc92:	jno    0x42cc2a
  42cc94:	and    dl,BYTE PTR [esi]
  42cc96:	test   DWORD PTR [edx],eax
  42cc98:	ficomp DWORD PTR [edx+0x5c]
  42cc9b:	pop    ebx
  42cc9c:	xor    BYTE PTR [edi],dh
  42cc9e:	pop    es
  42cc9f:	jge    0x42ccc3
  42cca1:	push   0xa
  42cca3:	in     al,dx
  42cca4:	mov    esi,ebp
  42cca6:	adc    al,0x6
  42cca8:	iret   
  42cca9:	push   es
  42ccaa:	or     al,0x31
  42ccac:	sbb    ch,BYTE PTR [ebp+esi*8+0xccf6b37]
  42ccb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccb4:	jo     0x42ccc1
  42ccb6:	mov    edx,0x8d725590
  42ccbb:	out    0x7d,eax
  42ccbd:	fcmovnu st,st(5)
  42ccbf:	push   0xffffffd0
  42ccc1:	xchg   BYTE PTR [edi+0x4754b46],ch
  42ccc7:	cmp    edx,DWORD PTR [ebx]
  42ccc9:	data16 rcr BYTE PTR [ecx+0x3],cl
  42cccd:	pop    ds
  42ccce:	mov    bl,0xb7
  42ccd0:	push   cs
  42ccd1:	cmp    BYTE PTR [ebp+0x4802fd21],al
  42ccd7:	mov    ecx,0x14abf04c
  42ccdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccdd:	mov    ch,0xf9
  42ccdf:	add    DWORD PTR [ebx+0x27],0x228c23fb
  42cce6:	xor    DWORD PTR [ecx+edx*8+0x338e2c30],edx
  42cced:	push   esp
  42ccee:	cmp    BYTE PTR [esi-0x1a],dl
  42ccf1:	mov    ebx,0x1a80f727
  42ccf6:	aad    0x28
  42ccf8:	imul   edx,DWORD PTR [ebx+edx*4],0x61
  42ccfc:	pop    ebp
  42ccfd:	pop    es
  42ccfe:	mov    BYTE PTR [esi-0x396d1a80],ah
  42cd04:	leave  
  42cd05:	pop    edx
  42cd06:	xchg   BYTE PTR [ebp-0x7b62d507],al
  42cd0c:	sub    cl,dl
  42cd0e:	icebp  
  42cd0f:	pop    esi
  42cd10:	sti    
  42cd11:	mov    ebx,0xe9880042
  42cd16:	push   esi
  42cd17:	xor    eax,0x83a582f8
  42cd1c:	jmp    0x5a8baccb
  42cd21:	adc    DWORD PTR [ecx-0x5a],0xffffffff
  42cd25:	aas    
  42cd26:	mov    esi,0xd4f2f827
  42cd2b:	fidivr WORD PTR [edi-0x473a6ad7]
  42cd31:	jg     0x42cd39
  42cd33:	mov    ah,0xc8
  42cd35:	sbb    edi,esi
  42cd37:	xor    BYTE PTR [ebx+0xe],bh
  42cd3a:	stos   BYTE PTR es:[edi],al
  42cd3b:	ins    DWORD PTR es:[edi],dx
  42cd3c:	fimul  WORD PTR [esi+edx*1+0x61]
  42cd40:	hlt    
  42cd41:	adc    DWORD PTR [edi],0x6a5a2b01
  42cd47:	out    dx,al
  42cd48:	test   DWORD PTR [bp-0x4cfd],esi
  42cd4d:	js     0x42cdb7
  42cd4f:	mov    dl,0xf
  42cd51:	jns    0x42cdcd
  42cd53:	mov    DWORD PTR [edi+0xe8063cc],0xac3626c3
  42cd5d:	test   eax,0x2ce99277
  42cd62:	jmp    0xbc86:0x6663808
  42cd69:	pop    es
  42cd6a:	mov    ds:0x714de091,al
  42cd6f:	inc    esp
  42cd70:	or     ebp,esi
  42cd72:	and    bh,ah
  42cd74:	mov    dh,0x3b
  42cd76:	gs scas al,BYTE PTR es:[edi]
  42cd78:	retf   0x3e84
  42cd7b:	dec    edx
  42cd7c:	rcr    DWORD PTR [esi],cl
  42cd7e:	push   cs
  42cd7f:	in     al,0xec
  42cd81:	cmp    ebx,DWORD PTR [edx+0x22]
  42cd84:	or     BYTE PTR [eax+0x64f3c327],bh
  42cd8a:	jae    0x42cd7e
  42cd8c:	xchg   ebp,eax
  42cd8d:	rol    DWORD PTR [eax+esi*4],0xc
  42cd91:	mov    al,ds:0xda6a422a
  42cd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd97:	inc    ecx
  42cd98:	jbe    0x42cd1a
  42cd9a:	xchg   ebx,eax
  42cd9b:	push   ss
  42cd9c:	xor    DWORD PTR [eax+eiz*1+0x7dc17bcd],esp
  42cda3:	push   es
  42cda4:	lods   eax,DWORD PTR ds:[esi]
  42cda5:	sar    DWORD PTR [eax+0x55],cl
  42cda8:	xchg   edi,eax
  42cda9:	enter  0x601c,0xb8
  42cdad:	jp     0x42cdba
  42cdaf:	xlat   BYTE PTR ds:[ebx]
  42cdb0:	xor    eax,0x47291dad
  42cdb5:	fcmovnbe st,st(5)
  42cdb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdb8:	and    al,0x19
  42cdba:	sbb    BYTE PTR [ebx+ecx*4+0x5f],dh
  42cdbe:	mov    esi,0xa6300794
  42cdc3:	repz test al,0xc2
  42cdc6:	adc    dh,bl
  42cdc8:	inc    edx
  42cdc9:	xor    al,bl
  42cdcb:	sahf   
  42cdcc:	(bad)  
  42cdcd:	cld    
  42cdce:	jae    0x42cdb4
  42cdd0:	push   ebp
  42cdd1:	mov    al,0xba
  42cdd3:	loop   0x42cd9a
  42cdd5:	xchg   ecx,eax
  42cdd6:	add    esi,DWORD PTR [eax]
  42cdd8:	in     al,dx
  42cdd9:	div    DWORD PTR [esi-0x34]
  42cddc:	fadd   DWORD PTR [esp+eax*2+0xd]
  42cde0:	mov    eax,0x2e0733d2
  42cde5:	aas    
  42cde6:	sub    eax,0xb6d6061f
  42cdeb:	dec    ebx
  42cdec:	bound  esp,QWORD PTR [ecx]
  42cdee:	cmp    DWORD PTR [edx+0x3],eax
  42cdf1:	sbb    bh,bh
  42cdf3:	aam    0xda
  42cdf5:	dec    ebp
  42cdf6:	clc    
  42cdf7:	imul   edi,DWORD PTR [edx],0x81161828
  42cdfd:	jb     0x42ce2b
  42cdff:	pop    eax
  42ce00:	push   ds
  42ce01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce02:	vminpd ymm6,ymm1,ymm0
  42ce06:	mov    eax,ds:0x9d1d69c3
  42ce0b:	sbb    ch,0xe8
  42ce0e:	or     BYTE PTR [ebx-0x1b],bl
  42ce11:	data16 aaa 
  42ce13:	addr16 pop esi
  42ce15:	jge    0x42cde8
  42ce17:	out    dx,eax
  42ce18:	fist   WORD PTR [ecx+0xf]
  42ce1b:	inc    esp
  42ce1c:	jne    0x42ce25
  42ce1e:	or     al,0xd1
  42ce20:	mov    ds:0x7c201d0f,al
  42ce25:	add    al,0x9c
  42ce27:	loopne 0x42ce37
  42ce29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce2a:	jmp    0x259b:0xc0dec845
  42ce31:	and    dl,BYTE PTR [edi+0x7e45a6d2]
  42ce37:	inc    ebx
  42ce38:	(bad)  
  42ce39:	aas    
  42ce3a:	mov    bl,BYTE PTR cs:[edi-0x780c9ed4]
  42ce41:	cld    
  42ce42:	mov    ah,0x2
  42ce44:	inc    ebx
  42ce45:	push   edx
  42ce46:	or     BYTE PTR [eax+0x23],ch
  42ce49:	cmp    esp,DWORD PTR [ebx]
  42ce4b:	adc    bh,BYTE PTR [ecx-0x7f82b3a8]
  42ce51:	(bad)  
  42ce52:	jl     0x42ce7e
  42ce54:	dec    edx
  42ce55:	shl    BYTE PTR [edi],0x69
  42ce58:	(bad)  
  42ce5a:	ins    DWORD PTR es:[edi],dx
  42ce5b:	(bad)  
  42ce5c:	pop    esi
  42ce5d:	or     cl,ch
  42ce5f:	ss in  eax,dx
  42ce61:	add    dh,BYTE PTR [ebp-0x3f067e86]
  42ce67:	in     al,dx
  42ce68:	sbb    eax,0x99f353f9
  42ce6d:	push   ebp
  42ce6e:	fisub  WORD PTR [eax]
  42ce70:	loope  0x42ce39
  42ce72:	xchg   ecx,eax
  42ce73:	push   esp
  42ce74:	xor    BYTE PTR [ebp+0x36b210b9],al
  42ce7a:	bound  esp,QWORD PTR [eax]
  42ce7c:	addr16 jg 0x42ce0a
  42ce7f:	es (bad) 
  42ce81:	stc    
  42ce82:	rol    esp,0xb2
  42ce85:	cmp    edx,edx
  42ce87:	lahf   
  42ce88:	loope  0x42ce53
  42ce8a:	xchg   esi,eax
  42ce8b:	mov    dh,0x1b
  42ce8d:	mov    al,ds:0xeab7c589
  42ce92:	push   ds
  42ce93:	ret    
  42ce94:	lahf   
  42ce95:	daa    
  42ce96:	xchg   esp,eax
  42ce97:	cmc    
  42ce98:	dec    ebp
  42ce99:	inc    ebp
  42ce9a:	adc    DWORD PTR [edi],0x97ebbc75
  42cea0:	xchg   ebx,eax
  42cea1:	pop    es
  42cea2:	inc    esp
  42cea3:	es sbb al,0x69
  42cea6:	cdq    
  42cea7:	daa    
  42cea8:	xchg   ecx,eax
  42cea9:	les    ebp,FWORD PTR [esi]
  42ceab:	cmp    edx,DWORD PTR [eax+ebx*2+0x65847e53]
  42ceb2:	pop    edi
  42ceb3:	dec    esp
  42ceb4:	outs   dx,DWORD PTR ds:[esi]
  42ceb5:	cs test eax,0xa93df055
  42cebb:	sub    BYTE PTR [ecx+0xe],ch
  42cebe:	in     eax,dx
  42cebf:	mov    dh,0xd1
  42cec1:	push   edi
  42cec2:	adc    al,0x69
  42cec4:	ror    BYTE PTR [edx+0x48],cl
  42cec7:	push   es
  42cec8:	xor    ebx,ebx
  42ceca:	lods   eax,DWORD PTR ds:[esi]
  42cecb:	pop    ebp
  42cecc:	call   0x12b3:0xf812fc3f
  42ced3:	sbb    BYTE PTR [ebp+0x744184f1],dl
  42ced9:	(bad)  
  42cedb:	popf   
  42cedc:	or     DWORD PTR [esi+0xb],0x19cd6fcc
  42cee3:	lea    esp,[ebp+eax*4-0x50589fd8]
  42ceea:	dec    esi
  42ceeb:	fwait
  42ceec:	lea    ebp,[edx]
  42ceee:	stos   BYTE PTR es:[edi],al
  42ceef:	out    0xa2,eax
  42cef1:	push   esp
  42cef2:	mov    gs,WORD PTR [eax]
  42cef4:	cs leave 
  42cef6:	push   ebx
  42cef7:	cmc    
  42cef8:	dec    esp
  42cef9:	inc    edx
  42cefa:	mov    bh,0xc8
  42cefc:	or     esi,DWORD PTR [ecx+0x4eeb1085]
  42cf02:	push   edi
  42cf03:	mov    edx,0x4dd5e7c5
  42cf08:	xor    BYTE PTR [ecx+0x46af57a3],bh
  42cf0e:	xchg   DWORD PTR [edx+0x61b19774],ecx
  42cf14:	je     0x42cef4
  42cf16:	mov    esp,0x50ef42e7
  42cf1b:	ja     0x42cedc
  42cf1d:	adc    al,0x81
  42cf1f:	(bad)  
  42cf20:	stc    
  42cf21:	cmp    eax,0x55e9a938
  42cf26:	out    dx,al
  42cf27:	push   eax
  42cf28:	lods   eax,DWORD PTR ds:[esi]
  42cf29:	xchg   BYTE PTR [ecx+0x21],al
  42cf2c:	adc    ebp,edx
  42cf2e:	sub    edx,ecx
  42cf30:	sub    bl,BYTE PTR [eax+esi*8+0x45]
  42cf34:	ror    BYTE PTR [eax-0x74d33bd3],cl
  42cf3a:	jae    0x42cfa3
  42cf3c:	sub    BYTE PTR [ecx+eax*1+0x78],ch
  42cf40:	cmp    ecx,esp
  42cf42:	shl    BYTE PTR [esi],cl
  42cf44:	mov    BYTE PTR [edx],al
  42cf46:	cmp    al,0x8
  42cf48:	lock lds edi,FWORD PTR [ebx+0x494fd517]
  42cf4f:	mov    esi,0x2a214015
  42cf54:	jmp    DWORD PTR [edx-0x26]
  42cf57:	add    al,0xf3
  42cf59:	pop    esp
  42cf5a:	mov    cl,0x4a
  42cf5c:	and    BYTE PTR ss:[edi-0x6f],0xbb
  42cf61:	or     ebx,0x30
  42cf64:	(bad)  ds:0x2349cb94
  42cf6a:	scas   al,BYTE PTR es:[edi]
  42cf6b:	jbe    0x42cf53
  42cf6d:	mov    esp,0xca3612ae
  42cf72:	mov    ebp,0xda24a4f1
  42cf77:	(bad)  
  42cf78:	popa   
  42cf79:	jmp    0x42cf0b
  42cf7b:	xor    eax,0x2a255321
  42cf80:	push   ds
  42cf81:	push   edi
  42cf82:	mov    ds:0x547549d6,eax
  42cf87:	or     dl,BYTE PTR [ebp+0x61]
  42cf8a:	ror    esp,cl
  42cf8c:	ja     0x42cf87
  42cf8e:	lock cmovl edx,DWORD PTR [esi]
  42cf92:	xchg   edx,eax
  42cf93:	out    0xc5,eax
  42cf95:	dec    ecx
  42cf96:	dec    eax
  42cf97:	fsub   DWORD PTR [esi+0xd]
  42cf9a:	(bad)  
  42cf9b:	ja     0x42cf97
  42cf9d:	and    bh,BYTE PTR [esi]
  42cf9f:	or     ebx,DWORD PTR [esi+ebp*4-0x4509f504]
  42cfa6:	push   esp
  42cfa7:	lahf   
  42cfa8:	xor    eax,0x9f83f4d7
  42cfad:	add    ah,BYTE PTR [esi+0x2ab7dc01]
  42cfb3:	xchg   edx,eax
  42cfb4:	test   al,0xbd
  42cfb6:	sub    eax,0xfed73611
  42cfbb:	in     eax,dx
  42cfbc:	jecxz  0x42cfec
  42cfbe:	inc    esi
  42cfbf:	in     al,0x2b
  42cfc1:	mov    edx,0xcf617eb0
  42cfc6:	jb     0x42cfac
  42cfc8:	mov    dl,BYTE PTR [edi-0x21]
  42cfcb:	jb     0x42cfb4
  42cfcd:	xchg   eax,ecx
  42cfcf:	loopne 0x42d030
  42cfd1:	cmp    eax,0x8697c11b
  42cfd6:	mov    DWORD PTR [ecx+0x4e3f8eb9],ecx
  42cfdc:	es retf 
  42cfde:	lods   al,BYTE PTR ds:[esi]
  42cfdf:	mov    edi,0xdfbd9f84
  42cfe4:	add    edi,DWORD PTR [ebx+0x52fde714]
  42cfea:	jl     0x42d062
  42cfec:	and    DWORD PTR [edi-0x6f],ecx
  42cfef:	push   0xfadd7034
  42cff4:	ret    0x1272
  42cff7:	pop    es
  42cff8:	shr    BYTE PTR [ebx-0x72],0x25
  42cffc:	vmread DWORD PTR [edi+eax*1],edx
  42d000:	jecxz  0x42cfdf
  42d002:	mov    ebp,0xfbe27ce5
  42d007:	xchg   ch,cl
  42d009:	cmc    
  42d00a:	int    0x2a
  42d00c:	std    
  42d00d:	in     eax,0x69
  42d00f:	adc    esi,edi
  42d011:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d013:	shr    DWORD PTR [eax],1
  42d015:	add    dh,dh
  42d017:	and    dl,ah
  42d019:	sub    al,0x6c
  42d01b:	jmp    0x42d001
  42d01d:	jnp    0x42d08d
  42d01f:	addr16 sar esp,0x14
  42d023:	test   DWORD PTR [ebp-0x71],eax
  42d026:	idiv   DWORD PTR [edi+0x2289959e]
  42d02c:	cs and eax,0x8e971290
  42d032:	push   ss
  42d033:	or     DWORD PTR [ecx-0x20964768],0xc30d51f5
  42d03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d03e:	ins    DWORD PTR es:[edi],dx
  42d03f:	popa   
  42d040:	pop    ecx
  42d041:	sbb    BYTE PTR [eax+0x2e],al
  42d044:	push   edi
  42d045:	jns    0x42cff1
  42d047:	add    esi,ebx
  42d049:	arpl   WORD PTR [edx+ebp*2+0x52],dx
  42d04d:	push   esp
  42d04e:	lahf   
  42d04f:	inc    edx
  42d050:	cmp    DWORD PTR [edx],eax
  42d052:	loope  0x42d0c1
  42d054:	push   ss
  42d055:	push   ebp
  42d056:	mov    bl,0xed
  42d058:	adc    edx,DWORD PTR [edi+0x7352eef9]
  42d05e:	int3   
  42d05f:	imul   ecx,DWORD PTR [edi],0xffffffea
  42d062:	dec    esp
  42d063:	fld    DWORD PTR [eax+0x4d]
  42d066:	mov    al,ds:0xcb0fab6b
  42d06b:	dec    ebx
  42d06c:	mov    bh,0x2b
  42d06e:	mov    ch,0x9
  42d070:	popf   
  42d071:	fisub  WORD PTR [eax]
  42d073:	or     BYTE PTR [edi+0x2986fb59],0xc2
  42d07a:	ficom  DWORD PTR [ebx]
  42d07c:	test   DWORD PTR [edi-0x58a4b1cc],ecx
  42d082:	fs popa 
  42d084:	test   DWORD PTR [bx+0x68],esi
  42d088:	mov    eax,0xc2d79cf2
  42d08d:	repnz std 
  42d08f:	inc    ebp
  42d090:	cmp    DWORD PTR [ecx-0x76],ebx
  42d093:	sbb    eax,0x47ce9a7d
  42d098:	add    DWORD PTR [ebp+0x55339b98],0x4f
  42d09f:	fnsetpm(287 only) 
  42d0a1:	dec    edx
  42d0a2:	test   al,0x7f
  42d0a4:	jle    0x42d05e
  42d0a6:	push   esi
  42d0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0a8:	pop    ss
  42d0a9:	inc    esp
  42d0aa:	sbb    DWORD PTR [ebp-0x15119622],esp
  42d0b0:	or     eax,0x9846fc46
  42d0b5:	sbb    al,cl
  42d0b7:	inc    ebx
  42d0b8:	sbb    BYTE PTR [edx],al
  42d0ba:	ins    DWORD PTR es:[edi],dx
  42d0bb:	or     DWORD PTR [ecx-0x3c],esi
  42d0be:	add    al,0xf4
  42d0c0:	pop    ecx
  42d0c1:	out    dx,al
  42d0c2:	and    dh,bh
  42d0c4:	cmp    ah,BYTE PTR [ecx]
  42d0c6:	test   al,dl
  42d0c8:	xor    esp,DWORD PTR [ecx-0x6d]
  42d0cb:	xchg   edx,eax
  42d0cc:	and    esi,edx
  42d0ce:	pop    ecx
  42d0cf:	dec    esi
  42d0d0:	pop    ebp
  42d0d1:	arpl   WORD PTR [edi-0x3fd57e00],si
  42d0d7:	sub    cl,ah
  42d0d9:	imul   BYTE PTR [esi+0x7d]
  42d0dc:	mov    ecx,0x5322bbf
  42d0e1:	rol    BYTE PTR [eax-0x43287482],0x18
  42d0e8:	push   eax
  42d0e9:	sub    al,0x92
  42d0eb:	or     eax,0x79f3332
  42d0f0:	sub    eax,0x784d74b2
  42d0f5:	aad    0xd9
  42d0f7:	xchg   BYTE PTR [edx-0x4e],al
  42d0fa:	(bad)  
  42d0fb:	pop    ebp
  42d0fc:	sbb    BYTE PTR [ebp-0x44a6d8b6],al
  42d102:	(bad)  
  42d103:	sar    esp,cl
  42d105:	pop    edx
  42d106:	cmp    eax,DWORD PTR [esi]
  42d108:	or     edx,DWORD PTR [esi+0x772810ee]
  42d10e:	in     eax,0x39
  42d110:	adc    eax,ecx
  42d112:	sbb    BYTE PTR [edx-0x419f0e66],0x82
  42d119:	fucomip st,st(6)
  42d11b:	xchg   esp,eax
  42d11c:	out    dx,eax
  42d11d:	popa   
  42d11e:	clc    
  42d11f:	cmp    eax,DWORD PTR [edi+0x7b0b4995]
  42d125:	dec    esp
  42d126:	xor    eax,0xb3995d99
  42d12b:	push   eax
  42d12c:	and    al,0x31
  42d12e:	push   ds
  42d12f:	fstp   QWORD PTR [ebx+0x476e071]
  42d135:	into   
  42d136:	sbb    DWORD PTR [edx+edx*4],edx
  42d139:	int    0x68
  42d13b:	mov    al,ds:0x8b135e7a
  42d140:	push   es
  42d141:	sbb    esp,esi
  42d143:	in     al,dx
  42d144:	adc    BYTE PTR [edx+0x51],0x64
  42d148:	mov    edx,0xf04c367e
  42d14d:	add    dl,BYTE PTR [edi+0x10193696]
  42d153:	outs   dx,DWORD PTR ds:[esi]
  42d154:	cmp    DWORD PTR [esi+eiz*2+0x1197e038],esi
  42d15b:	mov    WORD PTR [ecx+0x21b3e790],ds
  42d161:	pop    es
  42d162:	cmc    
  42d163:	fst    DWORD PTR [eax+eiz*1]
  42d166:	adc    ecx,0xe4e11239
  42d16c:	retf   0x1e18
  42d16f:	(bad)  
  42d170:	cmp    cl,BYTE PTR [ecx]
  42d172:	in     eax,dx
  42d173:	ss dec edi
  42d175:	jmp    0x88b4:0x7ac37062
  42d17c:	jb     0x42d102
  42d17e:	ins    BYTE PTR es:[edi],dx
  42d17f:	mov    cl,0xdc
  42d181:	push   ebp
  42d182:	outs   dx,DWORD PTR ds:[esi]
  42d183:	pop    ebp
  42d184:	fimul  DWORD PTR [ecx+0x53693c6]
  42d18a:	shr    DWORD PTR [edx+0x751139ab],cl
  42d190:	mov    ds:0x5a3a11c6,eax
  42d195:	clc    
  42d196:	je     0x42d152
  42d198:	leave  
  42d199:	into   
  42d19a:	test   al,0x62
  42d19c:	jmp    0x96e25dfa
  42d1a1:	add    edx,DWORD PTR [edx]
  42d1a3:	fdiv   QWORD PTR [ecx+0x26]
  42d1a6:	adc    eax,edx
  42d1a8:	pop    edi
  42d1a9:	dec    edx
  42d1aa:	cli    
  42d1ab:	(bad)  
  42d1ac:	cmp    eax,esp
  42d1ae:	dec    edx
  42d1af:	lds    esp,FWORD PTR [edi+0x4ac15efa]
  42d1b5:	xor    BYTE PTR [ebx],dl
  42d1b7:	mov    DWORD PTR [eax-0x60],esi
  42d1ba:	pop    ds
  42d1bb:	lods   eax,DWORD PTR ds:[esi]
  42d1bc:	test   eax,0x372456f1
  42d1c1:	fs jmp 0x2ed9:0x61e32091
  42d1c9:	mov    bl,0xc3
  42d1cb:	ja     0x42d1b1
  42d1cd:	mov    ebp,0x2a41e111
  42d1d2:	int3   
  42d1d3:	pop    eax
  42d1d4:	inc    ebp
  42d1d5:	lea    ebx,[esi-0x1933e428]
  42d1db:	mov    ebp,0x26c06de9
  42d1e0:	pop    edi
  42d1e1:	cmp    cl,BYTE PTR [ebx]
  42d1e3:	and    al,0x55
  42d1e5:	jmp    0x2e538480
  42d1ea:	stos   DWORD PTR es:[edi],eax
  42d1eb:	scas   al,BYTE PTR es:[edi]
  42d1ec:	fcom   QWORD PTR [ebp+ecx*8-0x7e508ef3]
  42d1f3:	pop    ebp
  42d1f4:	mov    ebx,0x2d1a65f
  42d1f9:	in     al,dx
  42d1fa:	add    cl,BYTE PTR [eax+0xaa87fe2]
  42d200:	inc    esp
  42d201:	loope  0x42d1e2
  42d203:	xchg   ebp,eax
  42d204:	lods   al,BYTE PTR ds:[esi]
  42d205:	or     al,0xd9
  42d207:	in     al,dx
  42d208:	fisttp WORD PTR [eax+eax*4]
  42d20b:	cmp    esi,DWORD PTR [ebx-0x7b30daa5]
  42d211:	mov    ah,0xca
  42d213:	add    ah,cl
  42d215:	outs   dx,BYTE PTR ds:[esi]
  42d216:	(bad)  
  42d217:	pusha  
  42d218:	shl    BYTE PTR [edx],1
  42d21a:	mov    eax,ds:0x1483d021
  42d21f:	jb     0x42d296
  42d221:	fsubr  DWORD PTR [edi+0x4b473722]
  42d227:	call   0x9dce:0xeaad38ff
  42d22e:	dec    eax
  42d22f:	dec    esi
  42d230:	dec    ecx
  42d231:	sub    DWORD PTR [esi+ebx*2+0x66a50191],eax
  42d238:	inc    esp
  42d239:	cli    
  42d23a:	shl    ecx,cl
  42d23c:	(bad)  
  42d23d:	hlt    
  42d23e:	pop    es
  42d23f:	jle    0x42d228
  42d241:	xor    al,0x78
  42d243:	retf   
  42d244:	jnp    0x42d242
  42d246:	pop    ss
  42d247:	ins    DWORD PTR es:[edi],dx
  42d248:	or     DWORD PTR [ecx],ebx
  42d24a:	push   cs
  42d24b:	dec    edi
  42d24c:	gs xor al,0xd5
  42d24f:	or     DWORD PTR [eax+ebx*2],ebx
  42d252:	ins    BYTE PTR es:[edi],dx
  42d253:	dec    edi
  42d254:	mov    ebp,ecx
  42d256:	int3   
  42d257:	xchg   BYTE PTR [esi-0x63e69727],dh
  42d25d:	jmp    0x8fbb9a51
  42d262:	aaa    
  42d263:	imul   ebp,DWORD PTR [eax+0x54f7c6a7],0xd
  42d26a:	and    cl,BYTE PTR [ebp-0x6f8234ed]
  42d270:	or     esi,ebp
  42d272:	xchg   esi,eax
  42d273:	aaa    
  42d274:	jae    0x42d2c9
  42d276:	pop    es
  42d277:	std    
  42d278:	sti    
  42d279:	(bad)  
  42d27a:	or     edi,eax
  42d27c:	inc    ecx
  42d27d:	dec    esp
  42d27e:	sbb    eax,0x447ef814
  42d283:	out    dx,al
  42d284:	inc    eax
  42d285:	imul   edi,DWORD PTR [edi-0x5b822db4],0x4d6a0809
  42d28f:	mov    BYTE PTR [eax+0x41f646e7],al
  42d295:	aas    
  42d296:	in     eax,0x40
  42d298:	or     bl,BYTE PTR [edi]
  42d29a:	sbb    ebp,DWORD PTR [ebx+0x427fdcd8]
  42d2a0:	jae    0x42d2af
  42d2a2:	push   0x26
  42d2a4:	int    0xcb
  42d2a6:	or     DWORD PTR [ebx+0x29f8811d],0xa8b83bcb
  42d2b0:	retf   
  42d2b1:	adc    eax,0x880a6842
  42d2b6:	rcr    eax,0xf6
  42d2b9:	mov    dh,0x3c
  42d2bb:	pop    ds
  42d2bc:	pop    eax
  42d2bd:	mov    bl,0xad
  42d2bf:	cwde   
  42d2c0:	mov    ebx,DWORD PTR [eax+eax*4-0xd]
  42d2c4:	sbb    al,0xd3
  42d2c6:	push   eax
  42d2c7:	or     BYTE PTR [edx-0x19e8412a],dh
  42d2cd:	scas   al,BYTE PTR es:[edi]
  42d2ce:	sahf   
  42d2cf:	mov    ah,0x92
  42d2d1:	mov    esp,0xca2ea414
  42d2d6:	jb     0x42d2f4
  42d2d8:	xchg   edx,eax
  42d2d9:	je     0x42d2d2
  42d2db:	xchg   ebx,eax
  42d2dc:	in     al,dx
  42d2dd:	push   0x9fe1bc57
  42d2e2:	inc    ebp
  42d2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2e4:	call   0x4ee09505
  42d2e9:	mov    DWORD PTR ds:0x7e63f781,esi
  42d2ef:	in     eax,dx
  42d2f0:	adc    BYTE PTR [eax],bl
  42d2f2:	adc    eax,0xa673d3df
  42d2f7:	scas   eax,DWORD PTR es:[edi]
  42d2f8:	ror    DWORD PTR [ebx],0x5a
  42d2fb:	int    0x9
  42d2fd:	aas    
  42d2fe:	je     0x42d2b2
  42d300:	imul   DWORD PTR [esi+0x4d229940]
  42d306:	into   
  42d307:	xchg   esi,eax
  42d308:	sti    
  42d309:	mov    esi,0xf418fd91
  42d30e:	inc    edx
  42d30f:	add    eax,0xafa06180
  42d314:	mov    eax,ds:0xb8645ee1
  42d319:	mul    esp
  42d31b:	lods   al,BYTE PTR ds:[esi]
  42d31c:	mov    eax,ds:0x79d90b74
  42d321:	in     al,dx
  42d322:	cmp    ch,bl
  42d324:	daa    
  42d325:	aas    
  42d326:	call   0x7914:0x81d993ce
  42d32d:	mov    dh,0x60
  42d32f:	xchg   ebp,eax
  42d330:	jl     0x42d3ac
  42d332:	pop    ecx
  42d333:	es cmp al,0x98
  42d336:	or     eax,0x8f45fb95
  42d33b:	xchg   esi,eax
  42d33c:	std    
  42d33d:	lock cs mov bh,0xd6
  42d341:	ins    DWORD PTR es:[edi],dx
  42d342:	and    BYTE PTR fs:[esi+0x5d4f1750],al
  42d349:	repnz retf 0x1303
  42d34d:	xor    DWORD PTR [ebx+0x14070a0],0x515045c
  42d357:	ins    DWORD PTR es:[edi],dx
  42d358:	cwde   
  42d359:	jnp    0x42d3bc
  42d35b:	test   al,0xe8
  42d35d:	xor    bl,BYTE PTR [ebp+0x38]
  42d360:	in     eax,dx
  42d361:	inc    esp
  42d362:	enter  0x613e,0x39
  42d366:	push   ss
  42d367:	add    eax,0x59e3239a
  42d36c:	cmp    DWORD PTR [esi-0x14864f6a],ebp
  42d372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d373:	jno    0x42d380
  42d375:	div    DWORD PTR [edi]
  42d377:	cmp    ecx,DWORD PTR [ecx+eiz*2]
  42d37a:	adc    DWORD PTR [ebx-0x3c],0xffffffba
  42d37e:	fadd   st(3),st
  42d380:	inc    ebp
  42d381:	cwde   
  42d382:	xor    dl,BYTE PTR [ecx]
  42d384:	sahf   
  42d385:	push   es
  42d386:	adc    DWORD PTR [ebx+0x272a8794],edx
  42d38c:	lock adc BYTE PTR [edx],dh
  42d38f:	and    ecx,ebp
  42d391:	je     0x42d395
  42d393:	div    DWORD PTR [eax]
  42d395:	sub    eax,edi
  42d397:	add    dh,cl
  42d399:	xchg   esi,eax
  42d39a:	outs   dx,DWORD PTR ds:[esi]
  42d39b:	jecxz  0x42d3de
  42d39d:	stos   DWORD PTR es:[edi],eax
  42d39e:	push   edx
  42d39f:	outs   dx,DWORD PTR ds:[esi]
  42d3a0:	or     DWORD PTR [ebx],ecx
  42d3a2:	pusha  
  42d3a3:	fdivr  DWORD PTR [esi]
  42d3a5:	int    0xf
  42d3a7:	and    al,0x96
  42d3a9:	mov    ch,0xe4
  42d3ab:	xor    DWORD PTR [edx+0x7adc0b7d],esp
  42d3b1:	lea    esi,[edx-0x2d]
  42d3b4:	ds inc edi
  42d3b6:	mov    DWORD PTR [eax-0x3f5a602a],edx
  42d3bc:	cmc    
  42d3bd:	mov    ebp,0x1dc681c3
  42d3c2:	add    edx,ecx
  42d3c4:	jno    0x42d3af
  42d3c6:	pop    ebp
  42d3c7:	add    al,0x71
  42d3c9:	pop    esp
  42d3ca:	das    
  42d3cb:	fdivr  DWORD PTR [ebx]
  42d3cd:	lahf   
  42d3ce:	adc    eax,ebp
  42d3d0:	cld    
  42d3d1:	test   al,0x84
  42d3d3:	push   esi
  42d3d4:	sbb    ebp,DWORD PTR [edi-0x3260456b]
  42d3da:	or     BYTE PTR [eax],cl
  42d3dc:	sub    al,0x9a
  42d3de:	ret    
  42d3df:	pop    esp
  42d3e0:	jo     0x42d3e6
  42d3e2:	shl    BYTE PTR [ecx],0x11
  42d3e5:	pusha  
  42d3e6:	mov    ch,0x8e
  42d3e8:	add    al,0x61
  42d3ea:	jnp    0x42d45a
  42d3ec:	and    DWORD PTR [ebp+0x1],ecx
  42d3ef:	push   edi
  42d3f0:	rcl    DWORD PTR [ebx+0xc],0xd1
  42d3f4:	push   eax
  42d3f5:	cdq    
  42d3f6:	out    dx,eax
  42d3f7:	les    esi,FWORD PTR [edx]
  42d3f9:	push   es
  42d3fa:	xor    eax,DWORD PTR [eax]
  42d3fc:	push   cs
  42d3fd:	retf   
  42d3fe:	mov    fs,WORD PTR [edx-0x67]
  42d401:	rcr    DWORD PTR [eax+eiz*8-0x3745b88a],1
  42d408:	sub    bh,BYTE PTR [eax+0x64f69681]
  42d40e:	pop    es
  42d40f:	psrad  mm3,QWORD PTR [esi]
  42d412:	mov    ecx,0x4ecb3cc3
  42d417:	sbb    eax,0xa0c9d2d3
  42d41c:	inc    ebp
  42d41d:	mov    DWORD PTR [ebp-0x63afa3ef],ecx
  42d423:	pusha  
  42d424:	push   ds
  42d425:	mov    edi,0xa6eb7327
  42d42a:	inc    edx
  42d42b:	in     eax,dx
  42d42c:	loop   0x42d481
  42d42e:	(bad)  
  42d42f:	fnstcw WORD PTR [eax]
  42d431:	xor    dl,BYTE PTR ss:[ebp+0x303e8780]
  42d438:	sub    DWORD PTR [esi-0x792bda8],ecx
  42d43e:	jo     0x42d48d
  42d440:	aad    0xb6
  42d442:	sub    al,0x6
  42d444:	js     0x42d483
  42d446:	imul   esp,DWORD PTR [eax+ecx*4-0x40a22a3],0xef2e0060
  42d451:	inc    ebp
  42d452:	lahf   
  42d453:	shr    DWORD PTR [edi+eiz*1+0x7f],cl
  42d457:	loopne 0x42d497
  42d459:	retf   0x9dfa
  42d45c:	push   eax
  42d45d:	nop
  42d45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d45f:	xchg   edx,eax
  42d460:	or     DWORD PTR [ecx],edi
  42d462:	mov    ebx,0x4cc96b7d
  42d467:	repnz mov ?,WORD PTR [edx+0x48]
  42d46b:	mov    WORD PTR [ecx-0x33],fs
  42d46e:	mov    bh,0x66
  42d470:	jns    0x42d44d
  42d472:	adc    edx,DWORD PTR [esi+eax*1+0x57af75f3]
  42d479:	repnz mov ebx,0xdc85620b
  42d47f:	aaa    
  42d480:	loop   0x42d428
  42d482:	repnz cli 
  42d484:	std    
  42d485:	lea    esp,[edx+0x70]
  42d488:	enter  0x7316,0x7a
  42d48c:	inc    esp
  42d48d:	add    dl,BYTE PTR [eax-0x45a515dd]
  42d493:	hlt    
  42d494:	iretw  
  42d496:	mov    bh,0x17
  42d498:	fst    DWORD PTR [esi+0x67]
  42d49b:	retf   0xdfa
  42d49e:	fimul  WORD PTR [edx-0x7a]
  42d4a1:	loop   0x42d50f
  42d4a3:	xchg   ebx,eax
  42d4a4:	mov    al,BYTE PTR [esi-0x76bc71db]
  42d4aa:	in     eax,dx
  42d4ab:	stos   DWORD PTR es:[edi],eax
  42d4ac:	hlt    
  42d4ad:	and    bl,al
  42d4af:	call   0x3f2:0xd747a86b
  42d4b6:	js     0x42d47a
  42d4b8:	jmp    0x2933:0x53b70404
  42d4bf:	push   edx
  42d4c0:	mov    ebp,0x2c5332f8
  42d4c5:	mov    al,0x2c
  42d4c7:	dec    esi
  42d4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4c9:	mov    bh,bh
  42d4cb:	test   BYTE PTR [ebp+eax*2-0x40],bh
  42d4cf:	pop    ds
  42d4d0:	ins    BYTE PTR es:[edi],dx
  42d4d1:	loop   0x42d471
  42d4d3:	mov    edx,0xda1a2571
  42d4d8:	das    
  42d4d9:	aad    0xb1
  42d4db:	xlat   BYTE PTR ds:[ebx]
  42d4dc:	(bad)  
  42d4dd:	loopne 0x42d4ec
  42d4df:	xor    al,0x4c
  42d4e1:	cs push edi
  42d4e3:	stc    
  42d4e4:	xor    al,0x9
  42d4e6:	shr    BYTE PTR [esp+eax*4],cl
  42d4e9:	xchg   edx,eax
  42d4ea:	and    al,0x90
  42d4ec:	xchg   BYTE PTR [edi+0x756090dc],ah
  42d4f2:	pop    esi
  42d4f3:	(bad)  
  42d4f4:	adc    al,0xa3
  42d4f6:	ja     0x42d552
  42d4f8:	adc    eax,0x8e0837e1
  42d4fd:	jmp    0x1ae7:0x80ea1edd
  42d504:	loopne 0x42d54a
  42d506:	xchg   edi,eax
  42d507:	push   ds
  42d508:	mov    DWORD PTR [ecx],esp
  42d50a:	xchg   esi,eax
  42d50b:	mov    al,ds:0xb4d6ab6d
  42d510:	sub    BYTE PTR [esi-0x16],ah
  42d513:	push   ebx
  42d514:	or     al,BYTE PTR [edi]
  42d516:	mov    eax,0x4835e2e2
  42d51b:	and    BYTE PTR [ebx+0x70],dl
  42d51e:	sub    BYTE PTR [ecx+0x684feeaf],dh
  42d524:	and    ch,BYTE PTR [esi-0x58]
  42d527:	add    DWORD PTR [ebp+0xcc2cd67],0xffffffe8
  42d52e:	xchg   BYTE PTR [ebx+0xe614a29],ah
  42d534:	test   edi,0x2db99e83
  42d53a:	mov    es,WORD PTR [ecx+ebp*1+0x15ec1971]
  42d541:	cmp    DWORD PTR [eax+0x6af8e5bd],edi
  42d547:	cmp    dh,BYTE PTR [eax-0x147211]
  42d54d:	sub    ebx,DWORD PTR [edi-0x767746fe]
  42d553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d554:	jle    0x42d595
  42d556:	or     al,0xdd
  42d558:	mov    ?,WORD PTR [esi+0x434bec67]
  42d55e:	xchg   ebx,eax
  42d55f:	xlat   BYTE PTR ds:[ebx]
  42d560:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d562:	pcmpeqb mm1,QWORD PTR [esi+0x4a]
  42d566:	test   al,0x98
  42d568:	ds in  eax,0x44
  42d56b:	dec    ecx
  42d56c:	adc    al,0x53
  42d56e:	and    BYTE PTR [ebx],bh
  42d570:	neg    esp
  42d572:	mov    dl,0x9b
  42d574:	enter  0x9158,0x51
  42d578:	jp     0x42d58b
  42d57a:	fldenv [ecx-0x78]
  42d57d:	clc    
  42d57e:	into   
  42d57f:	inc    ebp
  42d580:	daa    
  42d581:	fidiv  DWORD PTR [ebx-0x51]
  42d584:	xchg   edx,eax
  42d585:	test   eax,0x2c8789e3
  42d58a:	xlat   BYTE PTR ds:[ebx]
  42d58b:	cs es xor al,0x11
  42d58f:	addr16 popa 
  42d591:	add    eax,0x283c27a4
  42d596:	mov    ?,WORD PTR [esp+edx*1+0x167685d1]
  42d59d:	xchg   ebx,eax
  42d59e:	fsub   st,st(6)
  42d5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5a1:	jmp    0x79b0ff29
  42d5a6:	mov    cl,0x0
  42d5a8:	pop    ebx
  42d5a9:	je     0x42d619
  42d5ab:	xor    eax,0x968ca305
  42d5b0:	ret    
  42d5b1:	xchg   ecx,eax
  42d5b2:	jle    0x42d5dc
  42d5b4:	adc    DWORD PTR [ebx],ecx
  42d5b6:	add    dl,bh
  42d5b8:	out    0x43,al
  42d5ba:	aas    
  42d5bb:	call   0x1e48:0x97f36bf4
  42d5c2:	adc    eax,0xc78251d
  42d5c7:	fadd   DWORD PTR [ebp+esi*4-0x758a056e]
  42d5ce:	mov    al,ds:0xfa68fc69
  42d5d3:	cli    
  42d5d4:	scas   eax,DWORD PTR es:[edi]
  42d5d5:	sub    esp,DWORD PTR [esi-0x46cc0053]
  42d5db:	dec    ebx
  42d5dc:	pop    eax
  42d5dd:	and    esp,esp
  42d5df:	popf   
  42d5e0:	pop    esp
  42d5e1:	(bad)  
  42d5e2:	clc    
  42d5e3:	loope  0x42d642
  42d5e5:	pop    eax
  42d5e6:	leave  
  42d5e7:	les    ecx,FWORD PTR ds:0xbfe4d680
  42d5ed:	dec    esi
  42d5ee:	cmc    
  42d5ef:	test   BYTE PTR [edi],0x59
  42d5f2:	xchg   ch,bh
  42d5f4:	sti    
  42d5f5:	sbb    al,0x76
  42d5f7:	sbb    al,0x28
  42d5f9:	mov    dl,0x50
  42d5fb:	push   esi
  42d5fc:	js     0x42d5f0
  42d5fe:	shl    ah,cl
  42d600:	shl    DWORD PTR [ecx+0x30],1
  42d603:	call   0xde8aa289
  42d608:	jb     0x42d675
  42d60a:	ins    BYTE PTR es:[edi],dx
  42d60b:	xor    DWORD PTR [ecx],ecx
  42d60d:	call   0x8bf83300
  42d612:	push   eax
  42d613:	inc    edx
  42d614:	jns    0x42d5c0
  42d616:	(bad)  
  42d617:	out    dx,eax
  42d618:	inc    edi
  42d619:	sbb    DWORD PTR [esi+0x15082ec4],ebp
  42d61f:	mov    al,ds:0x2f2207dd
  42d624:	sub    bl,BYTE PTR ds:0x287cf222
  42d62a:	loop   0x42d681
  42d62c:	mov    edx,0x599f319f
  42d631:	iret   
  42d632:	data16 mov ch,0xec
  42d635:	jno    0x42d5e9
  42d637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d638:	sti    
  42d639:	or     dl,BYTE PTR [edi]
  42d63b:	xchg   ebp,eax
  42d63c:	cmp    BYTE PTR [ecx],dl
  42d63e:	add    bl,BYTE PTR [esp+esi*2-0x3e]
  42d642:	xchg   esi,eax
  42d643:	push   cs
  42d644:	sub    BYTE PTR [esi-0x50182002],ch
  42d64a:	jno    0x42d620
  42d64c:	cs (bad) 
  42d64e:	jmp    0x42d65a
  42d650:	mov    al,ds:0x77c9b121
  42d655:	(bad)  
  42d656:	jle    0x42d6cf
  42d658:	outs   dx,BYTE PTR ds:[esi]
  42d659:	aam    0xde
  42d65b:	mov    ecx,0xd9ffdd20
  42d660:	mov    esp,0xfdd2a1d3
  42d665:	call   0x4ba810d7
  42d66a:	pop    eax
  42d66b:	stc    
  42d66c:	jno    0x42d697
  42d66e:	aam    0x7a
  42d670:	push   ss
  42d671:	sbb    al,BYTE PTR [edi]
  42d673:	int    0xca
  42d675:	adc    DWORD PTR [edi+0xd341be8],0xffffff8d
  42d67c:	and    BYTE PTR [ebx-0x2c],al
  42d67f:	data16 jo 0x42d6f6
  42d682:	xor    eax,0x33257a0b
  42d687:	and    al,BYTE PTR [ebp-0x624a3513]
  42d68d:	push   esp
  42d68e:	jge    0x42d685
  42d690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d691:	shl    BYTE PTR [eax-0x71],cl
  42d694:	arpl   WORD PTR [eax],di
  42d696:	je     0x42d655
  42d698:	popf   
  42d699:	das    
  42d69a:	fcmove st,st(7)
  42d69c:	inc    ecx
  42d69d:	mov    ds:0x5936b054,eax
  42d6a2:	loope  0x42d71d
  42d6a4:	jns    0x42d6d5
  42d6a6:	nop
  42d6a7:	dec    esp
  42d6a8:	and    eax,0xcc2e5a8f
  42d6ad:	idiv   BYTE PTR [edx-0x4fab5c51]
  42d6b3:	mov    DWORD PTR [ecx+0x18b879f7],ecx
  42d6b9:	in     eax,dx
  42d6ba:	xor    BYTE PTR [edx],0x27
  42d6bd:	jbe    0x42d67e
  42d6bf:	lods   eax,DWORD PTR ds:[esi]
  42d6c0:	pop    esp
  42d6c1:	ret    0xb2ce
  42d6c4:	into   
  42d6c5:	pop    ss
  42d6c6:	mov    esp,0xd14923e0
  42d6cb:	add    ecx,ebp
  42d6cd:	sub    al,0x95
  42d6cf:	nop
  42d6d0:	mov    esp,0xd6e0675f
  42d6d5:	or     eax,0x7501a868
  42d6da:	add    al,0x1a
  42d6dc:	dec    edi
  42d6dd:	add    DWORD PTR [edi+0x2f],eax
  42d6e0:	mov    ds:0x5a118791,eax
  42d6e5:	push   0xffffffc4
  42d6e7:	inc    edx
  42d6e8:	add    al,BYTE PTR [ecx+0x179fdf49]
  42d6ee:	daa    
  42d6ef:	dec    esp
  42d6f0:	imul   esp,DWORD PTR [ebp+0x79],0x2afc85f0
  42d6f7:	js     0x42d744
  42d6f9:	push   cs
  42d6fa:	es sbb cl,ch
  42d6fd:	ret    0x89e8
  42d700:	xchg   esi,eax
  42d701:	cdq    
  42d702:	je     0x42d74f
  42d704:	ds sti 
  42d706:	jmp    0xb8c8:0x9ff7d11a
  42d70d:	test   al,0xd1
  42d70f:	or     dh,BYTE PTR [esi-0x10187558]
  42d715:	push   ebx
  42d716:	add    dl,dh
  42d718:	fbld   TBYTE PTR [eax+0x30]
  42d71b:	popf   
  42d71c:	add    al,0xe1
  42d71e:	lds    esp,FWORD PTR [ecx-0x63]
  42d721:	sbb    eax,0xa736cc06
  42d726:	cdq    
  42d727:	push   esi
  42d728:	adc    eax,0x15f473e7
  42d72d:	adc    DWORD PTR [eax],0xfffffff1
  42d730:	ror    DWORD PTR [eax-0x7c53069],0x3e
  42d737:	push   esi
  42d738:	out    0xfb,eax
  42d73a:	dec    esp
  42d73b:	dec    edx
  42d73c:	jmp    0x42d6f2
  42d73e:	add    dl,BYTE PTR [eax]
  42d740:	cmp    eax,0xb6e334ab
  42d745:	xchg   esi,eax
  42d746:	scas   eax,DWORD PTR es:[edi]
  42d747:	mov    eax,ds:0x494b5bca
  42d74c:	push   ebp
  42d74d:	push   0x3e6c3502
  42d752:	jno    0x42d6f3
  42d754:	pop    ss
  42d755:	out    dx,al
  42d756:	mov    ecx,0x750a5231
  42d75b:	push   esp
  42d75c:	es jb  0x42d790
  42d75f:	pop    ebx
  42d760:	xchg   esp,eax
  42d761:	out    0x44,al
  42d763:	adc    DWORD PTR [ebx+0x43],eax
  42d766:	mov    al,0xfd
  42d768:	repz sti 
  42d76a:	mov    dl,0xda
  42d76c:	sbb    bl,BYTE PTR [edi-0x40]
  42d76f:	inc    esp
  42d770:	xor    BYTE PTR [edx+0x4fdc3d40],cl
  42d776:	gs jmp 0x42d7a3
  42d779:	test   bh,ch
  42d77b:	in     al,0x8e
  42d77d:	cmp    bh,ch
  42d77f:	pop    esp
  42d780:	sub    ecx,DWORD PTR [ebx-0x11]
  42d783:	jns    0x42d7fd
  42d785:	cmc    
  42d786:	jae    0x42d72c
  42d788:	inc    ebx
  42d789:	push   0xffffffcc
  42d78b:	cmp    esp,DWORD PTR [edx+0xb150998]
  42d791:	lods   al,BYTE PTR ds:[esi]
  42d792:	daa    
  42d793:	stc    
  42d794:	push   esi
  42d795:	pusha  
  42d796:	dec    edx
  42d797:	jge    0x42d7db
  42d799:	arpl   WORD PTR [ecx+edi*2],cx
  42d79c:	fxch   st(6)
  42d79e:	fnstenv [ebx]
  42d7a0:	aam    0xd3
  42d7a2:	cli    
  42d7a3:	push   ebx
  42d7a4:	out    dx,eax
  42d7a5:	cli    
  42d7a6:	cmp    BYTE PTR [edx-0x1cbc7466],0x47
  42d7ad:	add    esp,DWORD PTR [eax]
  42d7af:	mov    ds:0xdec3f290,eax
  42d7b4:	jo     0x42d74b
  42d7b6:	mov    al,0x53
  42d7b8:	lea    eax,[esi+0x79]
  42d7bb:	pusha  
  42d7bc:	inc    edx
  42d7bd:	sbb    cl,ch
  42d7bf:	inc    DWORD PTR [ebx]
  42d7c1:	xor    edi,esi
  42d7c3:	and    DWORD PTR [ecx+0x6c],ebx
  42d7c6:	jp     0x42d815
  42d7c8:	mov    bh,0x57
  42d7ca:	cmp    BYTE PTR [eax-0x28],bh
  42d7cd:	imul   ebp,DWORD PTR [edi+0x3e280ec4],0x5ddfba3b
  42d7d7:	les    eax,FWORD PTR [edi]
  42d7d9:	repz mov al,ds:0xd68b78af
  42d7df:	sahf   
  42d7e0:	mov    eax,ds:0x771ff966
  42d7e5:	lahf   
  42d7e6:	cmp    BYTE PTR [eax],bh
  42d7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7e9:	aaa    
  42d7ea:	enter  0x2a48,0xfe
  42d7ee:	test   eax,0xd203a4ed
  42d7f3:	ffreep st(0)
  42d7f5:	push   0x26
  42d7f7:	cli    
  42d7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7f9:	add    BYTE PTR [edx+0x37],dh
  42d7fc:	pop    ebp
  42d7fd:	mov    dl,BYTE PTR [eax+edx*8+0x8]
  42d801:	cwde   
  42d802:	dec    ebx
  42d803:	and    eax,0x3647af
  42d808:	dec    ecx
  42d809:	pop    esp
  42d80a:	jle    0x42d815
  42d80c:	cmc    
  42d80d:	mov    edx,ds
  42d80f:	push   ecx
  42d810:	adc    al,0x65
  42d812:	and    edx,esp
  42d814:	jg     0x42d7bd
  42d816:	dec    esi
  42d817:	shl    DWORD PTR [edi-0x5d9e4696],cl
  42d81d:	jl     0x42d7b8
  42d81f:	outs   dx,BYTE PTR ds:[si]
  42d821:	mov    dl,0x5f
  42d823:	jle    0x42d86d
  42d825:	adc    BYTE PTR [eax+esi*4],al
  42d828:	push   eax
  42d829:	add    cl,BYTE PTR [ebp-0x6a]
  42d82c:	out    dx,eax
  42d82d:	cmp    esp,DWORD PTR [edx-0x47efe387]
  42d833:	mov    ebp,DWORD PTR [edi+eiz*4-0x6a]
  42d837:	retf   
  42d838:	cmp    edx,DWORD PTR [ebx+0x58778d4d]
  42d83e:	outs   dx,BYTE PTR ds:[esi]
  42d83f:	mov    ch,0x9e
  42d841:	bound  ecx,QWORD PTR [eax]
  42d843:	xchg   ebx,eax
  42d844:	xor    ah,dl
  42d846:	cli    
  42d847:	adc    ebp,DWORD PTR [eax]
  42d849:	dec    BYTE PTR [ebp-0x66cf9772]
  42d84f:	push   ecx
  42d850:	push   esp
  42d851:	ss bnd jb 0x42d87e
  42d855:	mov    al,ds:0xbf3ca4f3
  42d85a:	neg    DWORD PTR [edx-0x4b530fc7]
  42d860:	inc    edi
  42d861:	xor    BYTE PTR [ebx-0xc],cl
  42d864:	aas    
  42d865:	jmp    0x72855b26
  42d86a:	ret    
  42d86b:	or     dl,dl
  42d86d:	test   DWORD PTR [edx-0x53],ecx
  42d870:	popa   
  42d871:	jmp    0xd768:0x19f66049
  42d878:	jo     0x42d8aa
  42d87a:	xor    edx,DWORD PTR [edi]
  42d87c:	ins    BYTE PTR es:[edi],dx
  42d87d:	rol    cl,0xf8
  42d880:	repz or BYTE PTR [ecx-0x2f4d1477],ch
  42d887:	inc    eax
  42d888:	bnd jl 0x42d81c
  42d88b:	inc    edx
  42d88c:	cmp    ebx,DWORD PTR [ecx]
  42d88e:	scas   al,BYTE PTR es:[edi]
  42d88f:	loop   0x42d87d
  42d891:	sbb    al,0x2e
  42d893:	repnz or al,0xaa
  42d896:	aas    
  42d897:	in     al,0x41
  42d899:	ins    DWORD PTR es:[edi],dx
  42d89a:	popf   
  42d89b:	enter  0x6a28,0x10
  42d89f:	fs (bad) 
  42d8a1:	(bad)  
  42d8a2:	in     al,dx
  42d8a3:	into   
  42d8a4:	dec    ecx
  42d8a5:	mov    bl,ah
  42d8a7:	mov    ch,0xde
  42d8a9:	cwde   
  42d8aa:	dec    eax
  42d8ab:	pop    ebx
  42d8ac:	lods   al,BYTE PTR ds:[esi]
  42d8ad:	(bad)  
  42d8ae:	xchg   esi,eax
  42d8af:	xor    edx,DWORD PTR [ebp-0x50c6c99e]
  42d8b5:	pop    ecx
  42d8b6:	sub    ah,BYTE PTR [ebp-0x1f]
  42d8b9:	out    dx,al
  42d8ba:	pop    ebx
  42d8bb:	mov    ebx,0x8980720a
  42d8c0:	bound  edx,QWORD PTR [ebp+eax*1+0x50d3dea2]
  42d8c7:	imul   esi,DWORD PTR [ecx+0x38478895],0xe498473d
  42d8d1:	dec    ecx
  42d8d2:	scas   eax,DWORD PTR es:[edi]
  42d8d3:	and    BYTE PTR [edx+0x25],ah
  42d8d6:	enter  0xc21d,0x72
  42d8da:	pop    ss
  42d8db:	xor    bl,bl
  42d8dd:	aam    0x2d
  42d8df:	mov    eax,0x603afcfe
  42d8e4:	cdq    
  42d8e5:	jmp    0x42d8d3
  42d8e7:	mov    esp,0xd5e0b851
  42d8ec:	xchg   DWORD PTR [ecx+0x55],esi
  42d8ef:	(bad)  
  42d8f0:	xchg   edx,eax
  42d8f1:	jg     0x42d928
  42d8f3:	push   edi
  42d8f4:	xchg   esi,eax
  42d8f5:	xor    BYTE PTR [ebp+0x68],al
  42d8f8:	xchg   BYTE PTR [esi-0x3235e2b],ah
  42d8fe:	pop    ds
  42d8ff:	cmp    al,0xc1
  42d901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d902:	retfw  0xcbf
  42d906:	xor    eax,0x32a81a66
  42d90b:	fadd   DWORD PTR [ecx+eiz*8+0x2a5918b8]
  42d912:	cmp    DWORD PTR [ebx+0x422a4386],ebx
  42d918:	in     al,dx
  42d919:	arpl   WORD PTR [edi+eax*1+0x6a],dx
  42d91d:	adc    BYTE PTR [ecx+0x4a],ah
  42d920:	add    bl,al
  42d922:	jnp    0x42d937
  42d924:	xchg   esi,esp
  42d926:	mov    bl,0x4d
  42d928:	scas   al,BYTE PTR es:[edi]
  42d929:	call   0xa0379abb
  42d92e:	cmp    eax,DWORD PTR [eax+0x4a]
  42d931:	dec    eax
  42d932:	add    ch,BYTE PTR [eax+edi*8+0x6ce7f3e1]
  42d939:	test   al,0xa4
  42d93b:	or     dl,BYTE PTR [edi-0x2d51edcd]
  42d941:	outs   dx,BYTE PTR ds:[esi]
  42d942:	inc    ecx
  42d943:	mov    ah,0x49
  42d945:	or     BYTE PTR [ebp-0x62],dl
  42d948:	out    dx,al
  42d949:	sub    BYTE PTR [edi+0x62],al
  42d94c:	dec    esi
  42d94d:	and    BYTE PTR ds:0x269b68a0,bh
  42d953:	push   esi
  42d954:	pop    ebx
  42d955:	clc    
  42d956:	or     DWORD PTR [edi+eiz*1+0x15],ebx
  42d95a:	inc    ebx
  42d95b:	fs fcmovnb st,st(7)
  42d95e:	add    esp,ebx
  42d960:	pop    esp
  42d961:	scas   al,BYTE PTR es:[edi]
  42d962:	jmp    0x42d91d
  42d964:	stos   BYTE PTR es:[edi],al
  42d965:	sahf   
  42d966:	retf   
  42d967:	jge    0x42d93c
  42d969:	dec    esp
  42d96a:	test   eax,0xacc9b457
  42d96f:	xchg   BYTE PTR [edx+0x38],dl
  42d972:	iret   
  42d973:	push   cs
  42d974:	(bad)  
  42d975:	fdiv   DWORD PTR [ebx+0x79365543]
  42d97b:	push   cs
  42d97c:	xor    esp,DWORD PTR [edx-0x167133de]
  42d982:	dec    ebx
  42d983:	in     al,dx
  42d984:	jnp    0x42d945
  42d986:	and    BYTE PTR [ebx+0x70],cl
  42d989:	pop    esp
  42d98a:	lods   eax,DWORD PTR ds:[esi]
  42d98b:	cs loope 0x42d9ef
  42d98e:	test   al,0x60
  42d990:	pop    ss
  42d991:	ret    0x531a
  42d994:	lods   eax,DWORD PTR ds:[esi]
  42d995:	push   0xc237e2c8
  42d99a:	xchg   edx,eax
  42d99b:	lds    edx,FWORD PTR [edi+0x48127]
  42d9a1:	or     dh,BYTE PTR [edx-0x2d]
  42d9a4:	rcl    BYTE PTR [eax+0x56],0xb9
  42d9a8:	xchg   ebp,eax
  42d9a9:	pop    ebp
  42d9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9ab:	inc    ebp
  42d9ac:	aaa    
  42d9ad:	xor    eax,0x48f5325b
  42d9b2:	loop   0x42d952
  42d9b4:	cmc    
  42d9b5:	adc    eax,0x5fad7c58
  42d9ba:	(bad)  
  42d9bb:	sbb    ch,BYTE PTR [edi]
  42d9bd:	or     al,0xdd
  42d9bf:	addr16 dec edx
  42d9c1:	lods   eax,DWORD PTR ds:[esi]
  42d9c2:	call   0xcb37d867
  42d9c7:	jp     0x42da3c
  42d9c9:	out    dx,eax
  42d9ca:	retf   0xe9a8
  42d9cd:	test   al,bh
  42d9cf:	add    ebp,eax
  42d9d1:	pop    eax
  42d9d2:	push   ds
  42d9d3:	xlat   BYTE PTR ds:[ebx]
  42d9d4:	lds    edi,FWORD PTR [edx-0x1fe24d4]
  42d9da:	aam    0x7d
  42d9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9dd:	sub    dl,0x4d
  42d9e0:	push   cs
  42d9e1:	pusha  
  42d9e2:	imul   esp,ebx,0xffffff80
  42d9e5:	xchg   edx,eax
  42d9e6:	fistp  QWORD PTR [ecx-0x39972131]
  42d9ec:	je     0x42da54
  42d9ee:	fsubp  st(1),st
  42d9f0:	cmp    BYTE PTR ds:0x6d4d228e,bl
  42d9f6:	push   ds
  42d9f7:	xor    al,0x58
  42d9f9:	scas   eax,DWORD PTR es:[edi]
  42d9fa:	sahf   
  42d9fb:	xor    BYTE PTR [esi+0x4f58e4da],dh
  42da01:	scas   eax,DWORD PTR es:[edi]
  42da02:	or     esp,DWORD PTR [esi]
  42da04:	das    
  42da05:	lock fwait
  42da07:	mov    ebp,0x832267b7
  42da0c:	repz dec edi
  42da0e:	pop    edx
  42da0f:	das    
  42da10:	mov    ah,al
  42da12:	arpl   si,bp
  42da14:	and    al,0x84
  42da16:	push   ebx
  42da17:	inc    DWORD PTR [eax-0x3db2ff13]
  42da1d:	dec    ebp
  42da1e:	ds jge 0x42da0a
  42da21:	pop    edx
  42da22:	sbb    esp,esi
  42da24:	or     al,BYTE PTR [eax]
  42da26:	push   ebp
  42da27:	jb     0x42d9e3
  42da29:	jne    0x42d9c9
  42da2b:	iret   
  42da2c:	xchg   edx,eax
  42da2d:	adc    eax,0xb651cdd9
  42da32:	jmp    0x42daa7
  42da34:	bound  ebp,QWORD PTR [edx]
  42da36:	pop    edi
  42da37:	stc    
  42da38:	enter  0x8ba9,0x4a
  42da3c:	push   0x7c2ea9e0
  42da41:	push   0xfffffff2
  42da43:	div    DWORD PTR [esi+0x24]
  42da46:	iret   
  42da47:	sbb    bh,BYTE PTR [ecx-0xf3c1f0]
  42da4d:	inc    esp
  42da4e:	jle    0x42da4d
  42da50:	add    ebp,ebp
  42da52:	dec    ebp
  42da53:	adc    BYTE PTR [eax-0x1d],al
  42da56:	stos   BYTE PTR es:[edi],al
  42da57:	xor    DWORD PTR [ebx+0x234d3161],0xae83df98
  42da61:	dec    esp
  42da62:	pop    es
  42da63:	mov    ds:0x23141550,eax
  42da68:	div    edx
  42da6a:	imul   esp,DWORD PTR [ebx+0x65ea16d],0x25
  42da71:	mov    ds:0x59cac2ec,al
  42da76:	cmc    
  42da77:	sbb    dh,ah
  42da79:	call   0x34d4d7b9
  42da7e:	sub    eax,0x84631736
  42da83:	(bad)  
  42da85:	xor    bl,0xc3
  42da88:	mov    DWORD PTR [esi],0xe7e6764a
  42da8e:	or     DWORD PTR [edx-0x69b15136],edx
  42da94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da95:	(bad)  
  42da96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da97:	xchg   edx,eax
  42da98:	aad    0xfb
  42da9a:	mov    ah,0x92
  42da9c:	jbe    0x42da64
  42da9e:	(bad)  
  42da9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42daa0:	mov    eax,0x5004bddd
  42daa5:	inc    esp
  42daa6:	(bad)  
  42daa7:	iret   
  42daa8:	sub    DWORD PTR [eax],0x3
  42daab:	fs dec ecx
  42daad:	in     al,dx
  42daae:	or     BYTE PTR [ebx+0x71da146c],bl
  42dab4:	shr    esp,cl
  42dab6:	sub    al,0xfd
  42dab8:	js     0x42dae0
  42daba:	ficom  DWORD PTR [ebx]
  42dabc:	add    esp,edi
  42dabe:	neg    DWORD PTR [ecx]
  42dac0:	add    esp,DWORD PTR [ecx-0x72]
  42dac3:	xchg   esi,eax
  42dac4:	push   ecx
  42dac5:	ds jmp 0x42db29
  42dac8:	repz xchg edi,eax
  42daca:	cmp    cl,BYTE PTR [ebp+0x5e]
  42dacd:	or     al,0x61
  42dacf:	sub    dl,BYTE PTR [eax-0x6153eee1]
  42dad5:	pusha  
  42dad6:	inc    edi
  42dad7:	jo     0x42da86
  42dad9:	cmp    BYTE PTR [edx],ch
  42dadb:	adc    BYTE PTR [ebx+0x6c842f55],al
  42dae1:	popa   
  42dae2:	jg     0x42db4f
  42dae4:	inc    ebx
  42dae5:	leave  
  42dae6:	xchg   ecx,eax
  42dae7:	fidiv  WORD PTR [edi]
  42dae9:	mov    edx,0xe1995426
  42daee:	adc    ecx,DWORD PTR [ebp+esi*8-0x1c]
  42daf2:	xchg   ebx,eax
  42daf3:	sbb    al,0x84
  42daf5:	push   ebx
  42daf6:	xchg   edi,eax
  42daf7:	inc    ebp
  42daf8:	cli    
  42daf9:	lock aaa 
  42dafb:	lock jle 0x42db22
  42dafe:	add    dh,ah
  42db00:	scas   al,BYTE PTR es:[edi]
  42db01:	adc    edx,DWORD PTR [edx+eiz*1]
  42db04:	push   esp
  42db05:	jg     0x42daa5
  42db07:	in     al,0xce
  42db09:	push   es
  42db0a:	pop    edx
  42db0b:	inc    esp
  42db0c:	pop    ds
  42db0d:	div    BYTE PTR [eax]
  42db0f:	imul   edx,DWORD PTR [ebp+0x37],0xffffffb0
  42db13:	pop    eax
  42db14:	xchg   esi,eax
  42db15:	sets   BYTE PTR [ebx+0x795707a9]
  42db1c:	sbb    DWORD PTR [ebx-0x1f921eb8],ebx
  42db22:	ja     0x42db07
  42db24:	lea    ebp,[edi-0x32f2d117]
  42db2a:	in     al,dx
  42db2b:	(bad)  
  42db2c:	jmp    0x4a15:0x47dc98c
  42db33:	push   ebp
  42db34:	xor    al,0x32
  42db36:	mov    ebx,ecx
  42db38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db39:	(bad)  
  42db3a:	fmul   DWORD PTR [edx+0x71]
  42db3d:	adc    BYTE PTR ds:0xd41075d4,0xc4
  42db44:	std    
  42db45:	out    0xf0,eax
  42db47:	xchg   ebp,eax
  42db48:	dec    ebx
  42db49:	jns    0x42dbaa
  42db4b:	dec    edi
  42db4c:	rcl    BYTE PTR [edi+0x6],0x1a
  42db50:	cmp    al,0x75
  42db52:	div    DWORD PTR [esi-0x27c6a77d]
  42db58:	js     0x42dbcf
  42db5a:	mov    WORD PTR [ecx-0x480b9d31],ss
  42db60:	xchg   esi,eax
  42db61:	aaa    
  42db62:	test   BYTE PTR [esi],0x82
  42db65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db66:	jne    0x42dbe6
  42db68:	inc    ebx
  42db69:	dec    ebx
  42db6a:	adc    esp,DWORD PTR [ebp+0x2d86b67b]
  42db70:	pop    esi
  42db71:	pop    es
  42db72:	adc    al,0xbf
  42db74:	retf   0xd194
  42db77:	xchg   ebp,eax
  42db78:	pop    ss
  42db79:	push   edi
  42db7a:	push   edi
  42db7b:	jae    0x42db96
  42db7d:	xchg   ebx,eax
  42db7e:	inc    BYTE PTR [edx+eax*4+0x12]
  42db82:	ror    DWORD PTR [esi-0x25a01217],1
  42db88:	push   0x928bba4d
  42db8d:	xchg   edi,eax
  42db8e:	pop    DWORD PTR es:0xf847b1c0
  42db95:	mov    ebx,0x2b7e55a5
  42db9a:	popa   
  42db9b:	call   0x70b1:0xaf65d31c
  42dba2:	mov    al,0x77
  42dba4:	and    ch,BYTE PTR [ebx-0x21]
  42dba7:	xor    dh,BYTE PTR [ebx+0x7d111303]
  42dbad:	sub    BYTE PTR [eax],ah
  42dbaf:	mov    dl,0xe4
  42dbb1:	test   ebp,0x6fac4bd1
  42dbb7:	popa   
  42dbb8:	aam    0x7d
  42dbba:	clc    
  42dbbb:	inc    ebp
  42dbbc:	or     DWORD PTR [eax+0x49fdcc48],ebp
  42dbc2:	mov    eax,ds:0x1c476940
  42dbc7:	and    edx,ecx
  42dbc9:	pushf  
  42dbca:	sub    DWORD PTR [eax+0x5ea6d70d],ecx
  42dbd0:	enter  0xae15,0x33
  42dbd4:	ja     0x42dc33
  42dbd6:	fdivr  QWORD PTR [edx-0xbef2ec4]
  42dbdc:	and    edx,DWORD PTR [edx]
  42dbde:	sbb    DWORD PTR [eax],0xb9d5da7b
  42dbe4:	cld    
  42dbe5:	xlat   BYTE PTR ds:[ebx]
  42dbe6:	dec    eax
  42dbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbe8:	aam    0x7b
  42dbea:	xlat   BYTE PTR ds:[ebx]
  42dbeb:	maxps  xmm4,XMMWORD PTR [esi+0x5c]
  42dbef:	int    0xa7
  42dbf1:	pop    ebp
  42dbf2:	clc    
  42dbf3:	addr16 jae 0x42dbdd
  42dbf6:	retf   0x307a
  42dbf9:	(bad)  
  42dbfa:	ror    BYTE PTR [edi+eax*4+0x34e6e949],1
  42dc01:	lds    edx,FWORD PTR [esi-0x27]
  42dc04:	pop    esi
  42dc05:	in     eax,0x47
  42dc07:	jb     0x42dc18
  42dc09:	pop    edx
  42dc0a:	push   ecx
  42dc0b:	or     DWORD PTR [ebx+eiz*2-0x8a6cae9],esi
  42dc12:	sti    
  42dc13:	adc    eax,0x41c83075
  42dc18:	fstp   st(7)
  42dc1a:	or     bh,BYTE PTR [ebx+eax*8-0x56009b7d]
  42dc21:	test   DWORD PTR [edi],eax
  42dc23:	dec    ebp
  42dc24:	xlat   BYTE PTR ds:[ebx]
  42dc25:	push   ds
  42dc26:	mov    ah,0x61
  42dc28:	imul   edx,DWORD PTR [ecx-0x39],0xfffffff3
  42dc2c:	mov    bl,0x10
  42dc2e:	in     al,dx
  42dc2f:	fbld   TBYTE PTR [edx-0x46fe49b0]
  42dc35:	xor    ebx,DWORD PTR [eax+0x2bed6577]
  42dc3b:	shl    DWORD PTR [eax],cl
  42dc3d:	mov    ah,0x5c
  42dc3f:	xor    al,0xb3
  42dc41:	retf   
  42dc42:	xchg   edi,eax
  42dc43:	rcr    dl,1
  42dc45:	mov    esp,0x34e850e2
  42dc4a:	rcl    esi,cl
  42dc4c:	push   ebp
  42dc4d:	add    eax,0xf65ea382
  42dc52:	xor    eax,0x90a88aaf
  42dc57:	stc    
  42dc58:	dec    ebx
  42dc59:	and    ebx,DWORD PTR [ecx+0x4a]
  42dc5c:	mov    cl,0xd2
  42dc5e:	and    BYTE PTR [esi+0x1b76c65a],0xe8
  42dc65:	fmul   QWORD PTR [edi-0x2444b199]
  42dc6b:	out    0x96,eax
  42dc6d:	das    
  42dc6e:	push   es
  42dc6f:	pop    ss
  42dc70:	std    
  42dc71:	pop    es
  42dc72:	sbb    ebp,DWORD PTR [ecx]
  42dc74:	(bad)  
  42dc75:	repnz stc 
  42dc77:	cmp    BYTE PTR [edi-0x3],cl
  42dc7a:	xlat   BYTE PTR ds:[ebx]
  42dc7b:	rcr    DWORD PTR [esi+0x76],1
  42dc7e:	inc    esi
  42dc7f:	lds    ecx,FWORD PTR ds:0x519fd3c3
  42dc85:	cmp    DWORD PTR [edi+esi*4-0x2a3048c9],ecx
  42dc8c:	and    edi,DWORD PTR [esi+0x466e4f5f]
  42dc92:	xor    eax,0xa24f832f
  42dc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc98:	sub    eax,0x955a7423
  42dc9d:	pop    ss
  42dc9e:	inc    eax
  42dc9f:	sub    DWORD PTR [esi+0x62e788f2],esp
  42dca5:	cdq    
  42dca6:	sbb    eax,0x19b63941
  42dcab:	call   0x9b3a82a0
  42dcb0:	fistp  WORD PTR [edi]
  42dcb2:	xchg   ecx,eax
  42dcb3:	fist   DWORD PTR [esi+ecx*8]
  42dcb6:	mov    BYTE PTR [ecx+0x6e],cl
  42dcb9:	into   
  42dcba:	sar    BYTE PTR [bx+di],0x42
  42dcbe:	xchg   ecx,eax
  42dcbf:	ss aam 0x9c
  42dcc2:	adc    BYTE PTR [eax-0x2a7b3fdb],dh
  42dcc8:	jmp    0xff64c490
  42dccd:	jb     0x42dc52
  42dccf:	mov    eax,0xfcf66cf1
  42dcd4:	lahf   
  42dcd5:	or     eax,0xe703487a
  42dcda:	mov    bh,0x64
  42dcdc:	add    ebp,DWORD PTR [ebp+0x50f1809f]
  42dce2:	jbe    0x42dc95
  42dce4:	pop    ecx
  42dce5:	sbb    al,0x9a
  42dce7:	iret   
  42dce8:	out    0xe6,eax
  42dcea:	xchg   ecx,eax
  42dceb:	xchg   edx,eax
  42dcec:	cmp    DWORD PTR [eax+eax*1-0x74],edx
  42dcf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dcf1:	jo     0x42dc92
  42dcf3:	mov    al,0x56
  42dcf5:	add    BYTE PTR fs:[esi-0x65792421],0xc
  42dcfd:	pop    ebx
  42dcfe:	or     eax,0x6383a875
  42dd03:	les    ecx,FWORD PTR [edx]
  42dd05:	in     eax,dx
  42dd06:	sub    BYTE PTR [ecx+0x2],al
  42dd09:	(bad)  
  42dd0a:	jns    0x42dcaa
  42dd0c:	mov    esp,0xb77cf67e
  42dd11:	jmp    0x77fbc9e9
  42dd16:	iret   
  42dd17:	mov    eax,0x748902ed
  42dd1c:	inc    ebp
  42dd1d:	sbb    BYTE PTR [edx+0x1d],dl
  42dd20:	cmc    
  42dd21:	cdq    
  42dd22:	pop    ebx
  42dd23:	push   cs
  42dd24:	jne    0x42dd5f
  42dd26:	popa   
  42dd27:	dec    edi
  42dd28:	sbb    al,0x6c
  42dd2a:	add    dl,al
  42dd2c:	ins    BYTE PTR es:[edi],dx
  42dd2d:	push   es
  42dd2e:	shl    BYTE PTR [edi-0xff5df09],1
  42dd34:	cmp    al,0x60
  42dd36:	sbb    eax,0xc16ab8bf
  42dd3b:	mov    WORD PTR ds:0x5920d708,cs
  42dd41:	test   esi,0xc1d38b08
  42dd47:	cmp    al,0xa0
  42dd49:	test   eax,0x284f7b5f
  42dd4e:	ss mov ah,0x8
  42dd51:	enter  0xfc21,0x33
  42dd55:	pop    edx
  42dd56:	and    al,BYTE PTR [esp+ebp*4-0x5]
  42dd5a:	ret    0xb269
  42dd5d:	fadd   DWORD PTR [edi-0x3a]
  42dd60:	mov    ch,0x3d
  42dd62:	data16 xor al,0xc5
  42dd65:	bound  esp,QWORD PTR [ebp+esi*4+0x388ac84d]
  42dd6c:	add    eax,0x2ab6282b
  42dd71:	inc    edx
  42dd72:	sub    dh,BYTE PTR [ebp-0x57]
  42dd75:	rcl    BYTE PTR [esi+0x5f],1
  42dd78:	dec    edx
  42dd79:	add    eax,0x7d092b1f
  42dd7e:	add    eax,0x486f5e33
  42dd83:	cmp    BYTE PTR [esi-0x2b],cl
  42dd86:	popa   
  42dd87:	jmp    0x350231f1
  42dd8c:	out    0x89,eax
  42dd8e:	mov    edx,0xdf26320c
  42dd93:	add    al,0x7
  42dd95:	xchg   edi,eax
  42dd96:	fcomp  DWORD PTR [ecx]
  42dd98:	sbb    BYTE PTR [edx-0x30],cl
  42dd9b:	mov    dl,0x2d
  42dd9d:	loope  0x42ddf3
  42dd9f:	inc    ebx
  42dda0:	sub    BYTE PTR [eax],bl
  42dda2:	out    0xb8,al
  42dda4:	jp     0x42ddd6
  42dda6:	retf   
  42dda7:	pop    edi
  42dda8:	sbb    DWORD PTR [ecx+0x78],esp
  42ddab:	stos   DWORD PTR es:[edi],eax
  42ddac:	lahf   
  42ddad:	or     dh,ch
  42ddaf:	pop    es
  42ddb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddb1:	daa    
  42ddb2:	sbb    eax,0x36b52388
  42ddb7:	sub    esi,DWORD PTR [edx-0x2d]
  42ddba:	sar    BYTE PTR [ecx],1
  42ddbc:	pop    es
  42ddbd:	adc    ebp,edi
  42ddbf:	popf   
  42ddc0:	dec    ecx
  42ddc1:	dec    esi
  42ddc2:	out    0xd8,eax
  42ddc4:	or     eax,0xb1c7d71a
  42ddc9:	in     eax,0x9e
  42ddcb:	scas   al,BYTE PTR es:[edi]
  42ddcc:	mov    edx,DWORD PTR [edx]
  42ddce:	fimul  WORD PTR [ebx+0x62]
  42ddd1:	dec    eax
  42ddd2:	addr16 test al,0xe3
  42ddd5:	(bad)  
  42ddd7:	loop   0x42de04
  42ddd9:	outs   dx,DWORD PTR ds:[esi]
  42ddda:	mov    bl,0x43
  42dddc:	iret   
  42dddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddde:	xchg   ebp,eax
  42dddf:	nop
  42dde0:	and    eax,0xbb7ff0c2
  42dde5:	test   BYTE PTR [ebx+eax*2-0x66274cbc],dh
  42ddec:	mov    edi,0x63d79990
  42ddf1:	aas    
  42ddf2:	jle    0x42dda8
  42ddf4:	xchg   ecx,eax
  42ddf5:	adc    al,0x59
  42ddf7:	das    
  42ddf8:	shr    DWORD PTR [edx-0x4c111a9a],0xfa
  42ddff:	das    
  42de00:	sbb    DWORD PTR [edx-0x5d71388],ebp
  42de06:	test   DWORD PTR [esi],eax
  42de08:	(bad)  
  42de09:	out    0x57,al
  42de0b:	jmp    0x7065:0xc9f71be7
  42de12:	ss test eax,0x4a78e04e
  42de18:	arpl   WORD PTR [edi-0x219c7157],bx
  42de1e:	out    0x53,eax
  42de20:	ret    
  42de21:	pop    edi
  42de22:	mov    bl,0xfb
  42de24:	cli    
  42de25:	repnz or ah,ah
  42de28:	dec    DWORD PTR [eax+esi*2-0x2c682151]
  42de2f:	push   cs
  42de30:	iret   
  42de31:	jge    0x42ddb9
  42de33:	aaa    
  42de34:	div    DWORD PTR [edx-0x3]
  42de37:	(bad)  
  42de38:	cmp    dh,cl
  42de3a:	cmc    
  42de3b:	ret    0x87de
  42de3e:	call   0x553e2197
  42de43:	push   eax
  42de44:	push   edx
  42de45:	cmp    ebp,DWORD PTR ds:0xc26867e8
  42de4b:	adc    DWORD PTR [eax-0x6bafa49d],esi
  42de51:	xchg   edx,eax
  42de52:	xchg   esp,eax
  42de53:	fst    DWORD PTR [edi-0x54815abf]
  42de59:	mov    eax,0xeed93879
  42de5e:	call   0x4592:0x7fcc7347
  42de65:	or     dl,dh
  42de67:	mov    ah,0x29
  42de69:	mov    bl,bl
  42de6b:	mov    WORD PTR [ebx+0x64a15f19],?
  42de71:	push   cs
  42de72:	sub    ebx,DWORD PTR [eax-0x36]
  42de75:	xor    al,0x40
  42de77:	fdiv   QWORD PTR [ebp-0x40ec9195]
  42de7d:	adc    dh,BYTE PTR [edx]
  42de7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de80:	int3   
  42de81:	jmp    0x42de56
  42de83:	adc    eax,0xa307b835
  42de88:	ss jo  0x42de3a
  42de8b:	js     0x42de58
  42de8d:	out    dx,al
  42de8e:	mov    ebp,0xdeffb1fd
  42de93:	pushf  
  42de94:	inc    esi
  42de95:	add    dl,BYTE PTR [ebx-0x376891d8]
  42de9b:	xchg   ebx,eax
  42de9c:	add    eax,eax
  42de9e:	sub    al,0x7
  42dea0:	add    eax,0x9900a7a9
  42dea5:	ins    BYTE PTR es:[edi],dx
  42dea6:	inc    esp
  42dea7:	in     eax,dx
  42dea8:	aaa    
  42dea9:	pop    ebp
  42deaa:	fs inc ebx
  42deac:	jge    0x42df17
  42deae:	out    dx,al
  42deaf:	xor    eax,0x226f7888
  42deb4:	push   cs
  42deb5:	repz icebp 
  42deb7:	sub    ebx,ecx
  42deb9:	mov    al,ds:0xd79d340e
  42debe:	loopne 0x42ded5
  42dec0:	and    BYTE PTR [ebp+esi*2+0x57b8559a],bh
  42dec7:	inc    edx
  42dec8:	scas   eax,DWORD PTR es:[edi]
  42dec9:	data16 jnp 0x42ded2
  42decc:	pop    eax
  42decd:	pop    es
  42dece:	ins    BYTE PTR es:[edi],dx
  42decf:	(bad)  
  42ded1:	ins    BYTE PTR es:[edi],dx
  42ded2:	mov    bh,ch
  42ded4:	fmul   QWORD PTR [ebp+0x4040d39e]
  42deda:	xlat   BYTE PTR ds:[ebx]
  42dedb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dedc:	test   ah,dl
  42dede:	mov    bh,0x80
  42dee0:	dec    ecx
  42dee1:	jnp    0x42de8b
  42dee3:	jnp    0x42df41
  42dee5:	inc    ecx
  42dee6:	mov    dl,0xa6
  42dee8:	pop    ss
  42dee9:	push   cs
  42deea:	sbb    ebx,edi
  42deec:	movhps QWORD PTR [edx-0x3ea7fbff],xmm2
  42def3:	jl     0x42de93
  42def5:	adc    BYTE PTR [ebp+0x1ce9df12],bh
  42defb:	pop    edx
  42defc:	jae    0x42df19
  42defe:	mov    ah,0xc8
  42df00:	lds    ecx,FWORD PTR [eax+edi*4+0xb]
  42df04:	imul   ebp,DWORD PTR [ebp-0x18],0xffffffcf
  42df08:	add    BYTE PTR [edi+eiz*1],bh
  42df0b:	iret   
  42df0c:	xchg   ebp,eax
  42df0d:	inc    ecx
  42df0e:	mov    ds:0xbff0d03f,eax
  42df13:	test   eax,0xf5c67494
  42df18:	dec    edi
  42df19:	dec    ebp
  42df1a:	outs   dx,DWORD PTR ds:[esi]
  42df1b:	outs   dx,BYTE PTR ds:[esi]
  42df1c:	or     dl,BYTE PTR [ecx+0x7f00ba5b]
  42df22:	or     esi,DWORD PTR ds:0x13661e84
  42df28:	repnz aad 0x25
  42df2b:	push   edx
  42df2c:	mov    dl,0x3e
  42df2e:	inc    ebx
  42df2f:	dec    edi
  42df30:	sub    ebp,DWORD PTR [ecx-0x5e]
  42df33:	dec    esp
  42df34:	addr16 pop edx
  42df36:	xchg   edx,eax
  42df37:	popa   
  42df38:	mov    eax,0x8feca1
  42df3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df3e:	xchg   ebp,eax
  42df3f:	mov    DWORD PTR [ebp-0x4b78f5d4],0x48d19f02
  42df49:	mov    edx,0x2b9d11b4
  42df4e:	shl    BYTE PTR [edx+0x61b04e5e],cl
  42df54:	out    0xb5,eax
  42df56:	xlat   BYTE PTR ds:[ebx]
  42df57:	lods   al,BYTE PTR ds:[esi]
  42df58:	iret   
  42df59:	sub    al,BYTE PTR [ebx-0x1803e600]
  42df5f:	addr16 or eax,0xa7fff296
  42df65:	xor    DWORD PTR [ebx+0x1f5b34d4],esi
  42df6b:	cli    
  42df6c:	scas   al,BYTE PTR es:[edi]
  42df6d:	mov    ch,0x9e
  42df6f:	ja     0x42df36
  42df71:	mov    bl,0xae
  42df73:	xor    al,0x33
  42df75:	imul   ebx,esi,0x42188cc4
  42df7b:	add    dl,BYTE PTR [edi]
  42df7d:	xor    cl,BYTE PTR [ebx+ebp*2]
  42df80:	cmp    eax,0x2974eb58
  42df85:	pop    es
  42df86:	scas   al,BYTE PTR es:[edi]
  42df87:	clc    
  42df88:	sub    ecx,DWORD PTR [edi-0x55]
  42df8b:	lds    edx,FWORD PTR [ebx-0x4d28c306]
  42df91:	push   esp
  42df92:	pop    ebp
  42df93:	call   0x9f7bc03a
  42df98:	jnp    0x42df39
  42df9a:	push   ebx
  42df9b:	jb     0x42e01a
  42df9d:	add    DWORD PTR [edx-0x1e],ebp
  42dfa0:	call   0x557f2d10
  42dfa5:	pcmpeqb mm6,QWORD PTR [ecx+0x70a7736]
  42dfac:	mov    dh,0x9a
  42dfae:	mov    dl,0x6d
  42dfb0:	daa    
  42dfb1:	mov    ds:0xf4109112,al
  42dfb6:	jns    0x42df3c
  42dfb8:	pop    ecx
  42dfb9:	dec    esi
  42dfba:	jmp    0xa31b:0x8641877a
  42dfc1:	jmp    0x42dfe9
  42dfc3:	inc    ebx
  42dfc4:	mov    al,ds:0x7471a4ec
  42dfc9:	stos   BYTE PTR es:[edi],al
  42dfca:	je     0x42e048
  42dfcc:	test   BYTE PTR [edx-0x79f405d6],ch
  42dfd2:	xor    DWORD PTR [edx+eiz*2-0x51],ebx
  42dfd6:	les    eax,FWORD PTR [ecx+0x17d3ee5f]
  42dfdc:	in     al,0xe
  42dfde:	pop    ebp
  42dfdf:	lock jae 0x42dfc4
  42dfe2:	xchg   BYTE PTR [eax-0x57],al
  42dfe5:	pop    ss
  42dfe6:	fs out 0x54,al
  42dfe9:	scas   eax,DWORD PTR es:[edi]
  42dfea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfeb:	mov    DWORD PTR [edx+0x5e],ebp
  42dfee:	add    eax,0x2ad79253
  42dff3:	aaa    
  42dff4:	in     eax,0x20
  42dff6:	mov    ah,0x6e
  42dff8:	std    
  42dff9:	jl     0x42dfae
  42dffb:	pop    esi
  42dffc:	inc    ebx
  42dffd:	fld    QWORD PTR [eax]
  42dfff:	(bad)  
  42e000:	fisubr WORD PTR ds:0xd6b5700e
  42e006:	inc    ebx
  42e007:	cmp    BYTE PTR [ecx],ah
  42e009:	loop   0x42e060
  42e00b:	repz lea ebx,[ecx]
  42e00e:	pop    esp
  42e00f:	les    eax,FWORD PTR [esi+0x7e]
  42e012:	lods   eax,DWORD PTR ds:[esi]
  42e013:	loop   0x42e00c
  42e015:	xchg   edx,eax
  42e016:	nop
  42e017:	arpl   WORD PTR [edi-0x56],di
  42e01a:	and    al,0x3c
  42e01c:	add    bl,0x2a
  42e01f:	test   bh,dh
  42e021:	in     al,0xfc
  42e023:	repnz cmc 
  42e025:	sar    esi,cl
  42e027:	and    edx,DWORD PTR [ebp-0x1fd9b0d2]
  42e02d:	stos   DWORD PTR es:[edi],eax
  42e02e:	adc    ah,BYTE PTR [ebx]
  42e030:	dec    ebp
  42e031:	xchg   esp,eax
  42e032:	or     dh,dl
  42e034:	cmc    
  42e035:	xor    BYTE PTR [edi-0x7e],0xaa
  42e039:	cmp    eax,0x4394d82a
  42e03e:	pop    edx
  42e03f:	out    0x8b,eax
  42e041:	jecxz  0x42dfea
  42e043:	adc    ah,bl
  42e045:	push   ebx
  42e046:	mov    esp,DWORD PTR [edx]
  42e048:	leave  
  42e049:	daa    
  42e04a:	pop    esp
  42e04b:	xchg   ecx,eax
  42e04c:	lods   al,BYTE PTR ds:[esi]
  42e04d:	push   ebx
  42e04e:	inc    ebx
  42e04f:	dec    ebx
  42e050:	ja     0x42e064
  42e052:	repz test eax,0x25ad069c
  42e058:	inc    ecx
  42e059:	mov    eax,0x6c808e16
  42e05e:	jle    0x42e046
  42e060:	(bad)  
  42e061:	retf   
  42e062:	call   0xe20f:0xc5baa708
  42e069:	push   es
  42e06a:	dec    edx
  42e06b:	mov    al,ds:0x79f3104d
  42e070:	xor    eax,0x3b753ae2
  42e075:	mov    DWORD PTR [edx],edx
  42e077:	mov    eax,DWORD PTR [eax-0x60e1003a]
  42e07d:	mov    ds:0x13408f5a,al
  42e082:	mov    cl,0xf6
  42e084:	cli    
  42e085:	adc    eax,0x199d9d98
  42e08a:	xchg   ecx,eax
  42e08b:	mov    dl,0x4a
  42e08d:	dec    ecx
  42e08e:	pop    ecx
  42e08f:	jne    0x42e028
  42e091:	cmp    BYTE PTR [edx+ecx*4+0x7e],bl
  42e095:	sbb    DWORD PTR [ebx+edi*2-0x702eb22a],eax
  42e09c:	call   0x9b19b3de
  42e0a1:	or     eax,0x4faa365e
  42e0a6:	icebp  
  42e0a7:	inc    ecx
  42e0a8:	and    cl,BYTE PTR [esi-0x5b7e3786]
  42e0ae:	dec    edx
  42e0af:	hlt    
  42e0b0:	test   eax,0xc71f4455
  42e0b5:	fsubr  QWORD PTR [eax-0x6af5b106]
  42e0bb:	sti    
  42e0bc:	pop    eax
  42e0bd:	imul   DWORD PTR [esi+ebx*2-0x7a]
  42e0c1:	int3   
  42e0c2:	mov    DWORD PTR [ebp+0x60],edx
  42e0c5:	pop    ds
  42e0c6:	push   0x4
  42e0c8:	mov    cl,0x49
  42e0ca:	push   es
  42e0cb:	xchg   edx,eax
  42e0cc:	jo     0x42e0cc
  42e0ce:	mov    ch,0xd8
  42e0d0:	ins    BYTE PTR es:[edi],dx
  42e0d1:	mov    bh,0x99
  42e0d3:	mov    ecx,0x8e0e49bf
  42e0d8:	leave  
  42e0d9:	imul   ebp,esp,0xc8556bbf
  42e0df:	lds    edi,FWORD PTR [eax-0x4f9776db]
  42e0e5:	jae    0x42e136
  42e0e7:	stos   DWORD PTR es:[edi],eax
  42e0e8:	repz scas al,BYTE PTR es:[edi]
  42e0ea:	or     ebx,DWORD PTR [esi-0x782267a8]
  42e0f0:	scas   eax,DWORD PTR es:[edi]
  42e0f1:	cmc    
  42e0f2:	daa    
  42e0f3:	adc    BYTE PTR [ebx-0x33],cl
  42e0f6:	dec    ecx
  42e0f7:	lods   eax,DWORD PTR ds:[esi]
  42e0f8:	call   DWORD PTR [eax]
  42e0fa:	mov    esp,0x6686c535
  42e0ff:	repnz stos DWORD PTR es:[edi],eax
  42e101:	loope  0x42e0fd
  42e103:	or     DWORD PTR [eax+0x1cbb7eb2],ebx
  42e109:	push   esp
  42e10a:	mov    eax,DWORD PTR [ebx-0x46]
  42e10d:	sti    
  42e10e:	sub    ch,BYTE PTR [ebx]
  42e110:	std    
  42e111:	nop
  42e112:	cwde   
  42e113:	xchg   BYTE PTR [ebp-0x30],cl
  42e116:	ss out 0x92,eax
  42e119:	mov    eax,0x2c8fff28
  42e11e:	pop    ebx
  42e11f:	jmp    0x34b1:0xc58b48c8
  42e126:	sar    DWORD PTR [esi],0x16
  42e129:	cli    
  42e12a:	pop    ebp
  42e12b:	(bad)  
  42e12c:	(bad)  [edx]
  42e12e:	cmc    
  42e12f:	xlat   BYTE PTR ds:[ebx]
  42e130:	inc    ebx
  42e131:	jp     0x42e151
  42e133:	fistp  WORD PTR [esi]
  42e135:	ret    0x7b05
  42e138:	pop    esp
  42e139:	sahf   
  42e13a:	imul   DWORD PTR [ecx+ebx*2]
  42e13d:	sub    ebx,edx
  42e13f:	dec    DWORD PTR fs:[ebp-0x10]
  42e143:	(bad)  
  42e144:	loop   0x42e194
  42e146:	and    eax,0x158e6af5
  42e14b:	pop    esp
  42e14c:	ss (bad) 
  42e14e:	pushf  
  42e14f:	and    edx,DWORD PTR [eax-0x9]
  42e152:	int3   
  42e153:	imul   edi,DWORD PTR [esi+esi*2+0x50],0x1f
  42e158:	ins    BYTE PTR es:[edi],dx
  42e159:	push   ebp
  42e15a:	dec    esi
  42e15b:	mov    WORD PTR [edx+0x129b867d],ss
  42e161:	pusha  
  42e162:	fld    TBYTE PTR [ebp+0x4b]
  42e165:	pop    ecx
  42e166:	je     0x42e1bd
  42e168:	pusha  
  42e169:	rol    ecx,1
  42e16b:	mov    bh,0x87
  42e16d:	mov    edi,0x3e185f78
  42e172:	shr    BYTE PTR [ebx-0x4b],1
  42e175:	mov    ?,WORD PTR [ebx-0x43]
  42e178:	fs add eax,0x345bb3e0
  42e17e:	hlt    
  42e17f:	out    0xdd,eax
  42e181:	inc    esi
  42e182:	fwait
  42e183:	mov    edi,0xab5957f3
  42e188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e189:	(bad)  
  42e18a:	cdq    
  42e18b:	push   ss
  42e18c:	stos   BYTE PTR es:[edi],al
  42e18d:	jmp    0x42e123
  42e18f:	pop    esp
  42e190:	stos   BYTE PTR es:[edi],al
  42e191:	cmp    ebp,DWORD PTR [edx]
  42e193:	pop    eax
  42e194:	sub    DWORD PTR [eax+0x444573b],edi
  42e19a:	pop    edi
  42e19b:	clc    
  42e19c:	icebp  
  42e19d:	mov    edx,0x256162ca
  42e1a2:	mov    dl,0x8d
  42e1a4:	inc    esi
  42e1a5:	inc    esi
  42e1a6:	jmp    0x6a27:0x7114f3a3
  42e1ad:	inc    edx
  42e1ae:	pop    ds
  42e1af:	push   DWORD PTR [ebx+0x13]
  42e1b2:	ja     0x42e231
  42e1b4:	sbb    ch,dh
  42e1b6:	inc    ebx
  42e1b7:	xchg   edx,eax
  42e1b8:	push   ebp
  42e1b9:	push   edx
  42e1ba:	mov    ch,0x91
  42e1bc:	fwait
  42e1bd:	stc    
  42e1be:	or     bh,ch
  42e1c0:	fwait
  42e1c1:	push   ds
  42e1c2:	lds    ecx,FWORD PTR [edx+0x1e]
  42e1c5:	add    eax,0x7b2342e5
  42e1ca:	leave  
  42e1cb:	add    BYTE PTR [esi],cl
  42e1cd:	cli    
  42e1ce:	xchg   ecx,eax
  42e1cf:	and    BYTE PTR [ebx+0x4361fe02],cl
  42e1d5:	dec    ebp
  42e1d6:	mov    bl,0x57
  42e1d8:	cmp    eax,0x390a65cc
  42e1dd:	fyl2xp1 
  42e1df:	mov    ebp,0x6c89b9c5
  42e1e4:	xchg   BYTE PTR [edx],bh
  42e1e6:	push   edi
  42e1e7:	mov    esp,DWORD PTR [edi+eax*1-0x7511a4d2]
  42e1ee:	sbb    dl,BYTE PTR [eax-0x7a]
  42e1f1:	push   DWORD PTR cs:[eax+0x3b]
  42e1f5:	sbb    ecx,DWORD PTR [ebx+eax*2-0x5d]
  42e1f9:	add    eax,0x63312e05
  42e1fe:	mov    al,0x74
  42e200:	dec    edi
  42e201:	mov    BYTE PTR [ebx-0x62],bh
  42e204:	cmp    ebp,DWORD PTR [edi]
  42e206:	fstp   DWORD PTR [ecx+0x56236ad3]
  42e20c:	mov    ds:0x8691e1b4,al
  42e211:	xchg   ebx,eax
  42e212:	stc    
  42e213:	pop    edx
  42e214:	adc    BYTE PTR [ebp-0x53a333ce],dl
  42e21a:	mov    ebx,0xd5795ad0
  42e21f:	retf   0xd960
  42e222:	lods   al,BYTE PTR ds:[esi]
  42e223:	push   esi
  42e224:	mov    ebx,0xc18684b1
  42e229:	jnp    0x42e1f6
  42e22b:	in     al,0xd9
  42e22d:	mov    ebx,0x1c0c3a35
  42e232:	xlat   BYTE PTR ds:[ebx]
  42e233:	scas   eax,DWORD PTR es:[edi]
  42e234:	xchg   edi,eax
  42e235:	shl    BYTE PTR [edi],0x7a
  42e238:	mov    bl,BYTE PTR [ebx-0x7b]
  42e23b:	cmp    eax,0xf53217c1
  42e240:	or     edi,DWORD PTR [edx-0x6df6b4c3]
  42e246:	ret    
  42e247:	out    0xc9,eax
  42e249:	into   
  42e24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e24b:	lea    ebp,[ebp+0x5fdbc4e]
  42e251:	sub    BYTE PTR [ebp+0x6ae5eb92],cl
  42e257:	fwait
  42e258:	mov    bh,0x96
  42e25a:	push   ebx
  42e25b:	ds icebp 
  42e25d:	inc    esp
  42e25e:	(bad)  
  42e25f:	mov    eax,0x66a1cd2c
  42e264:	leave  
  42e265:	xchg   edx,esp
  42e267:	jns    0x42e1fe
  42e269:	ret    0x88b
  42e26c:	adc    edx,DWORD PTR [edi]
  42e26e:	mov    ebx,ecx
  42e270:	(bad)  
  42e271:	fwait
  42e272:	out    0x9d,eax
  42e274:	xchg   edx,eax
  42e275:	cwde   
  42e276:	(bad)  
  42e277:	idiv   DWORD PTR [edi-0x60471acd]
  42e27d:	xchg   ebx,eax
  42e27e:	sar    BYTE PTR [esi-0x36d0622d],1
  42e284:	dec    edi
  42e285:	ret    
  42e286:	pop    ebx
  42e287:	icebp  
  42e288:	jmp    0x814977be
  42e28d:	rcr    BYTE PTR [ebp-0x7b],cl
  42e290:	sub    DWORD PTR [esi-0x69009cf6],esi
  42e296:	jecxz  0x42e30f
  42e298:	inc    ebp
  42e299:	jae    0x42e270
  42e29b:	mov    ebx,0x5ec828f9
  42e2a0:	fistp  QWORD PTR [eax]
  42e2a2:	push   edi
  42e2a3:	pop    esi
  42e2a4:	and    al,0xd4
  42e2a6:	je     0x42e24b
  42e2a8:	and    esp,DWORD PTR [eax]
  42e2aa:	jge    0x42e304
  42e2ac:	mov    esp,0x2efa3324
  42e2b1:	inc    edx
  42e2b2:	aaa    
  42e2b3:	test   al,0xa
  42e2b5:	mov    al,dl
  42e2b7:	stos   DWORD PTR es:[edi],eax
  42e2b8:	xchg   esi,eax
  42e2b9:	or     al,0xe4
  42e2bb:	mov    cl,0x57
  42e2bd:	xor    al,0xa4
  42e2bf:	out    dx,eax
  42e2c0:	and    eax,0xeab1365a
  42e2c5:	xchg   esi,eax
  42e2c6:	adc    dl,BYTE PTR [ebp-0x4e882ee7]
  42e2cc:	dec    esi
  42e2cd:	ja     0x42e32a
  42e2cf:	lock mov bh,BYTE PTR [esi+0x1bcd0b76]
  42e2d6:	xchg   DWORD PTR [ecx-0xb12bb69],ecx
  42e2dc:	pop    edx
  42e2dd:	pop    ebp
  42e2de:	mov    ebx,0xe532453b
  42e2e3:	lods   eax,DWORD PTR ds:[esi]
  42e2e4:	fnstenv [esi+0x5048d61d]
  42e2ea:	pop    edx
  42e2eb:	mov    ds:0x2e468d39,eax
  42e2f0:	pop    edx
  42e2f1:	mov    esp,cs
  42e2f3:	stc    
  42e2f4:	and    cl,bh
  42e2f6:	jo     0x42e2d5
  42e2f8:	adc    DWORD PTR [edi],edi
  42e2fa:	arpl   si,di
  42e2fc:	loop   0x42e2c8
  42e2fe:	js     0x42e365
  42e300:	test   eax,0x6ea317e4
  42e305:	stos   DWORD PTR es:[edi],eax
  42e306:	jl     0x42e2ea
  42e308:	and    al,0xff
  42e30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e30b:	mov    al,0x4d
  42e30d:	jmp    0xd8fc:0x51319ded
  42e314:	jle    0x42e319
  42e316:	test   al,0x5c
  42e318:	out    0x27,eax
  42e31a:	adc    DWORD PTR [edx+ebp*4+0x48],ebx
  42e31e:	test   eax,0x2b583ba6
  42e323:	mov    ds:0xceb81e54,eax
  42e328:	or     eax,0x5801dbb8
  42e32d:	fs aas 
  42e32f:	xchg   edi,eax
  42e330:	pop    es
  42e331:	idiv   DWORD PTR [edx+0x36]
  42e334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e335:	adc    eax,0xbf31a2f1
  42e33a:	repz xchg edi,eax
  42e33c:	stc    
  42e33d:	sahf   
  42e33e:	cmp    al,BYTE PTR [ecx-0x5a0ffd17]
  42e344:	loope  0x42e3a3
  42e346:	shr    esi,0x8b
  42e349:	scas   al,BYTE PTR es:[edi]
  42e34a:	shl    DWORD PTR [edx-0x1],1
  42e34d:	cs and ecx,DWORD PTR cs:[esi+0x9610a29]
  42e355:	(bad)  
  42e356:	mov    ah,0x3d
  42e358:	sahf   
  42e359:	les    ebx,FWORD PTR [eax]
  42e35b:	sahf   
  42e35c:	cmp    al,0xaf
  42e35e:	lock test DWORD PTR [ecx-0x268980ff],0xfecdfa85
  42e369:	pop    ecx
  42e36a:	into   
  42e36b:	push   ebp
  42e36c:	cwde   
  42e36d:	sti    
  42e36e:	mov    ebx,DWORD PTR fs:[ecx+0x2e]
  42e372:	rcr    ecx,0x7
  42e375:	iret   
  42e376:	pop    ecx
  42e377:	enter  0x43c1,0x30
  42e37b:	or     DWORD PTR [edx],ebp
  42e37d:	mov    ebx,0xb6e854d8
  42e382:	dec    ecx
  42e383:	or     ebp,DWORD PTR [ebp-0x4f]
  42e386:	es pop ebx
  42e388:	out    dx,eax
  42e389:	fcmovb st,st(4)
  42e38b:	add    eax,0x24cec6a7
  42e390:	rcl    BYTE PTR [ecx+0x29],1
  42e393:	mov    dh,0xff
  42e395:	xor    BYTE PTR [ebp-0x41],bh
  42e398:	jmp    0x6a96:0x8e02693c
  42e39f:	stos   DWORD PTR es:[edi],eax
  42e3a0:	jmp    0xd490:0x523af828
  42e3a7:	sar    DWORD PTR [esp+esi*4],cl
  42e3aa:	or     eax,0xcb78e8f4
  42e3af:	mov    bl,0x90
  42e3b1:	adc    eax,0x46ac9148
  42e3b6:	inc    esp
  42e3b7:	sub    ebp,edi
  42e3b9:	adc    BYTE PTR [edi-0x5d],al
  42e3bc:	jge    0x42e3b8
  42e3be:	retf   0xb3a4
  42e3c1:	outs   dx,BYTE PTR ds:[esi]
  42e3c2:	pop    es
  42e3c3:	inc    edi
  42e3c4:	jle    0x42e359
  42e3c6:	jmp    0xf55311d7
  42e3cb:	stos   DWORD PTR es:[edi],eax
  42e3cc:	stos   BYTE PTR es:[edi],al
  42e3cd:	mov    ecx,0xff568c80
  42e3d2:	pop    ds
  42e3d3:	dec    sp
  42e3d5:	cmp    BYTE PTR [edx],0x92
  42e3d8:	inc    edx
  42e3d9:	cs cmc 
  42e3db:	pop    ebx
  42e3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3dd:	xlat   BYTE PTR ds:[ebx]
  42e3de:	rcl    DWORD PTR [edi],0x2b
  42e3e1:	mov    ecx,0xdf7bfdec
  42e3e6:	ret    
  42e3e7:	lods   al,BYTE PTR ds:[esi]
  42e3e8:	cmc    
  42e3e9:	and    eax,0x36303521
  42e3ee:	add    edi,0xffffffa4
  42e3f1:	add    al,0xbb
  42e3f3:	clc    
  42e3f4:	jbe    0x42e448
  42e3f6:	icebp  
  42e3f7:	jle    0x42e40e
  42e3f9:	and    BYTE PTR [edi],dh
  42e3fb:	dec    edi
  42e3fc:	mov    ecx,0xeaf18b6
  42e401:	ror    BYTE PTR [ebx],cl
  42e403:	dec    edx
  42e404:	(bad)  
  42e405:	call   0xbe98d0c4
  42e40a:	ins    BYTE PTR es:[edi],dx
  42e40b:	lods   al,BYTE PTR ds:[esi]
  42e40c:	clc    
  42e40d:	or     al,0xa4
  42e40f:	sbb    BYTE PTR [edx-0x49],dh
  42e412:	push   0xffffffe7
  42e414:	jo     0x42e3b1
  42e416:	or     eax,0xdb5b86e
  42e41b:	sub    cl,0xc5
  42e41e:	fstp   TBYTE PTR [edx*1+0x658f2adb]
  42e425:	in     eax,0x7f
  42e427:	inc    ebp
  42e428:	out    dx,al
  42e429:	ret    0x1965
  42e42c:	sar    DWORD PTR [eax-0x2f],0xe
  42e430:	not    ebp
  42e432:	mov    ah,0xdd
  42e434:	frstor [eax+0x6a]
  42e437:	pop    ss
  42e438:	mov    edx,DWORD PTR ds:[eax+0x25480123]
  42e43f:	and    DWORD PTR [ebx-0x17],ebp
  42e442:	adc    al,0x75
  42e444:	add    ch,BYTE PTR ds:0x3437b6ac
  42e44a:	dec    ebp
  42e44b:	adc    BYTE PTR [edx],0x83
  42e44e:	mul    DWORD PTR [ebp+0x49]
  42e451:	pop    edx
  42e452:	xor    bh,BYTE PTR ds:0x72bbe4b5
  42e458:	retf   0xec6a
  42e45b:	ss jge 0x42e4ce
  42e45e:	cmp    edx,edi
  42e460:	rol    DWORD PTR [ebx-0x43],1
  42e463:	mov    esp,0xdca7e658
  42e468:	stos   BYTE PTR es:[edi],al
  42e469:	xchg   edi,eax
  42e46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e46b:	lahf   
  42e46c:	imul   ecx,DWORD PTR [edx],0x33dac018
  42e472:	mov    ch,BYTE PTR [eax+edx*1-0x49]
  42e476:	cwde   
  42e477:	jecxz  0x42e442
  42e479:	mov    ch,0x43
  42e47b:	ss adc dh,al
  42e47e:	mov    dh,0xf6
  42e480:	jmp    0xdcb011e5
  42e485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e486:	je     0x42e473
  42e488:	aaa    
  42e489:	pop    ebp
  42e48a:	out    dx,eax
  42e48b:	stc    
  42e48c:	pcmpeqb mm2,QWORD PTR [edx+0x4ff1fcb0]
  42e493:	clc    
  42e494:	pop    ds
  42e495:	push   ebp
  42e496:	inc    si
  42e498:	sqrtps xmm1,xmm1
  42e49b:	sti    
  42e49c:	dec    eax
  42e49d:	jne    0x42e4ea
  42e49f:	scas   eax,DWORD PTR es:[edi]
  42e4a0:	or     eax,0xe5ff3428
  42e4a5:	inc    edx
  42e4a6:	retf   
  42e4a7:	and    al,0x94
  42e4a9:	adc    BYTE PTR [eax+0x5f981fff],bl
  42e4af:	cmp    esi,ebx
  42e4b1:	cli    
  42e4b2:	adc    eax,0x42350266
  42e4b7:	in     al,dx
  42e4b8:	push   esi
  42e4b9:	(bad)  
  42e4ba:	repz or esp,DWORD PTR [ebp-0x4a]
  42e4be:	iret   
  42e4bf:	sbb    al,0xe9
  42e4c1:	xchg   ebp,eax
  42e4c2:	push   esi
  42e4c3:	mov    dl,0x8
  42e4c5:	cdq    
  42e4c6:	pop    ecx
  42e4c7:	mov    cl,0x3d
  42e4c9:	adc    ecx,DWORD PTR [edx]
  42e4cb:	cmc    
  42e4cc:	sbb    al,0x9c
  42e4ce:	test   al,0x79
  42e4d0:	daa    
  42e4d1:	jl     0x42e513
  42e4d3:	mov    edx,0xcc2ddca6
  42e4d8:	fisubr WORD PTR [edx+0x83c7606]
  42e4de:	mov    ebx,0xe503d8ba
  42e4e3:	xchg   eax,ebx
  42e4e5:	jne    0x42e4e3
  42e4e7:	call   0xac159dfe
  42e4ec:	test   eax,0x27e6ea65
  42e4f1:	scas   al,BYTE PTR es:[edi]
  42e4f2:	fwait
  42e4f3:	stc    
  42e4f4:	and    al,BYTE PTR [eax-0x422d23d6]
  42e4fa:	sti    
  42e4fb:	jg     0x42e51d
  42e4fd:	mov    WORD PTR [esi+0x18],fs
  42e500:	shr    BYTE PTR ds:0x4a5c74b1,0x5b
  42e507:	imul   ebx,DWORD PTR [ebx-0xc006fea],0x35
  42e50e:	fdivr  st(3),st
  42e510:	mov    eax,ds:0xe6cd77e3
  42e515:	xor    BYTE PTR [esi-0x73],ah
  42e518:	lods   al,BYTE PTR ds:[esi]
  42e519:	xchg   ebp,eax
  42e51a:	cmp    dh,al
  42e51c:	inc    ecx
  42e51d:	in     al,dx
  42e51e:	push   es
  42e51f:	mov    eax,ds:0xcacc363c
  42e524:	icebp  
  42e525:	fild   QWORD PTR [edi-0x68]
  42e528:	adc    eax,0x243bfa2d
  42e52d:	cmp    eax,0x562af7d6
  42e532:	mov    WORD PTR [edx-0x4d],fs
  42e535:	mov    esi,DWORD PTR [ecx+0x53e14605]
  42e53b:	mov    bh,0xd0
  42e53d:	jbe    0x42e51a
  42e53f:	fldenv [edi+0x49]
  42e542:	in     eax,0x7b
  42e544:	(bad)  
  42e545:	cmp    dh,BYTE PTR [ebx+esi*4]
  42e548:	cmp    DWORD PTR [eax+eax*1],esi
  42e54b:	add    al,0xcf
  42e54d:	lods   eax,DWORD PTR ds:[esi]
  42e54e:	lock or ecx,DWORD PTR [edx-0xe012275]
  42e555:	inc    ebx
  42e556:	jns    0x42e530
  42e558:	or     esp,0xffffffab
  42e55b:	inc    edx
  42e55c:	add    bl,BYTE PTR [ecx+0x2]
  42e55f:	popa   
  42e560:	mov    bh,0x39
  42e562:	stc    
  42e563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e564:	adc    ah,bl
  42e566:	cli    
  42e567:	jl     0x42e545
  42e569:	sub    eax,0xee282ef0
  42e56e:	in     eax,dx
  42e56f:	dec    ebx
  42e570:	cmp    esi,DWORD PTR [ebx-0x12f70037]
  42e576:	nop
  42e577:	fcmove st,st(7)
  42e579:	arpl   WORD PTR [eax+eiz*8+0xaff067c],dx
  42e580:	addr16 dec eax
  42e582:	loope  0x42e587
  42e584:	sbb    al,0xe7
  42e586:	jg     0x42e5c1
  42e588:	inc    ebx
  42e589:	je     0x42e5b3
  42e58b:	xor    BYTE PTR [esi+eax*4+0x40],ch
  42e58f:	sbb    al,0xa1
  42e591:	aaa    
  42e592:	shl    BYTE PTR [esi],cl
  42e594:	xchg   ebp,eax
  42e595:	pop    DWORD PTR [edi-0x3e]
  42e598:	inc    ebp
  42e599:	(bad)  
  42e59a:	test   al,0xdb
  42e59c:	xchg   DWORD PTR [edi],ebx
  42e59e:	mov    ds:0x2c14c84d,al
  42e5a3:	jmp    0x2d66:0xa505f4b3
  42e5aa:	(bad)  [edx-0x5cb4ad85]
  42e5b0:	adc    BYTE PTR [esi+edi*1-0x7116a3d],dh
  42e5b7:	outs   dx,DWORD PTR ds:[esi]
  42e5b8:	jne    0x42e54a
  42e5ba:	sbb    BYTE PTR [esi+ebp*2-0x6ba33356],dl
  42e5c1:	mov    ebx,0x5675f4b4
  42e5c6:	stos   DWORD PTR es:[edi],eax
  42e5c7:	pop    ecx
  42e5c8:	test   eax,0xeb1935be
  42e5cd:	or     al,0xfb
  42e5cf:	sub    edx,DWORD PTR cs:[eax-0x41]
  42e5d3:	push   ebp
  42e5d4:	(bad)  
  42e5d5:	pushw  0xc86f
  42e5d9:	or     edx,DWORD PTR [ebp-0x12edaaa4]
  42e5df:	loop   0x42e568
  42e5e1:	fwait
  42e5e2:	sbb    DWORD PTR [edi+0x5a49b3b8],0x4997154a
  42e5ec:	dec    eax
  42e5ed:	adc    eax,0x9dcaa6cc
  42e5f2:	and    BYTE PTR [ebx],al
  42e5f4:	std    
  42e5f5:	(bad)  
  42e5f7:	adc    edx,esi
  42e5f9:	popa   
  42e5fa:	and    ebx,DWORD PTR [esi+0x3a]
  42e5fd:	cmp    BYTE PTR [eax+0x10],ch
  42e600:	(bad)  
  42e601:	std    
  42e602:	mov    ds:0x40b51456,al
  42e607:	rcl    ebp,cl
  42e609:	popa   
  42e60a:	in     al,0x20
  42e60c:	push   0xffffffc7
  42e60e:	mov    esi,0x4e87b481
  42e613:	mov    ebp,0x7b54ad4e
  42e618:	add    eax,0xd158f880
  42e61d:	bswap  ecx
  42e61f:	and    al,0xc0
  42e621:	div    esi
  42e623:	pop    edx
  42e624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e625:	push   ecx
  42e626:	vpaddw xmm2,xmm2,xmm6
  42e62a:	sbb    eax,0x3907480d
  42e62f:	mov    bl,ch
  42e631:	jns    0x42e6aa
  42e633:	cs inc edi
  42e635:	mov    gs,esp
  42e637:	cmp    eax,0x406ef384
  42e63c:	cld    
  42e63d:	cmp    eax,ecx
  42e63f:	push   ebp
  42e640:	mov    esp,0x64e0629d
  42e645:	(bad)  
  42e646:	repz in al,0x97
  42e649:	sub    al,0xf9
  42e64b:	in     eax,0x5b
  42e64d:	into   
  42e64e:	and    al,0xac
  42e650:	out    0x30,al
  42e652:	popa   
  42e653:	pop    eax
  42e654:	(bad)  
  42e656:	push   ebx
  42e657:	lahf   
  42e658:	push   esi
  42e659:	out    dx,eax
  42e65a:	cmp    DWORD PTR [esi],eax
  42e65c:	jo     0x42e69d
  42e65e:	xchg   edi,eax
  42e65f:	int    0xcd
  42e661:	int    0x6c
  42e663:	sub    ebx,DWORD PTR [esi+0x34]
  42e666:	dec    edi
  42e667:	inc    esp
  42e668:	cmc    
  42e669:	xchg   BYTE PTR [ebx+0x18b9e18],dh
  42e66f:	lea    esp,[ecx+0x569f41ab]
  42e675:	mov    edi,0x1b069a22
  42e67a:	and    BYTE PTR [edx-0x19db5230],al
  42e680:	mov    bl,0x93
  42e682:	dec    ebp
  42e683:	daa    
  42e684:	scas   al,BYTE PTR es:[edi]
  42e685:	icebp  
  42e686:	cmp    al,0x34
  42e688:	cmp    ah,BYTE PTR cs:[ebx-0x2f1acf68]
  42e68f:	retf   0xe919
  42e692:	add    eax,0xa8928fb5
  42e697:	icebp  
  42e698:	lods   al,BYTE PTR ds:[esi]
  42e699:	mov    ebp,0x565f5e5d
  42e69e:	test   ebp,esp
  42e6a0:	adc    eax,DWORD PTR [ebp+0x60]
  42e6a3:	cmp    bh,ah
  42e6a5:	pop    ebx
  42e6a6:	mov    ecx,DWORD PTR [edx+0x73]
  42e6a9:	xor    dl,dl
  42e6ab:	int3   
  42e6ac:	ins    BYTE PTR es:[edi],dx
  42e6ad:	dec    ecx
  42e6ae:	in     eax,dx
  42e6af:	xor    ecx,ebx
  42e6b1:	repz jo 0x42e662
  42e6b4:	jae    0x42e689
  42e6b6:	pop    esi
  42e6b7:	scas   eax,DWORD PTR es:[edi]
  42e6b8:	retf   
  42e6b9:	sub    eax,0x6fe9d657
  42e6be:	pop    ebx
  42e6bf:	adc    eax,0xffa27193
  42e6c4:	stc    
  42e6c5:	cmc    
  42e6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6c7:	pop    ebx
  42e6c8:	inc    edx
  42e6c9:	adc    BYTE PTR [esi-0x2a83a60c],bl
  42e6cf:	ja     0x42e6f1
  42e6d1:	out    dx,al
  42e6d2:	dec    esi
  42e6d3:	xor    ebp,DWORD PTR [ecx]
  42e6d5:	jmp    0xb19:0xb8373255
  42e6dc:	cmp    al,0x4e
  42e6de:	xchg   esi,eax
  42e6df:	imul   eax,DWORD PTR [edx],0xffffffd2
  42e6e2:	call   0xa42c77f
  42e6e7:	shl    DWORD PTR [ebp+esi*1-0x67b1452c],0xba
  42e6ef:	xchg   esp,eax
  42e6f0:	mov    ds:0xa57116fc,al
  42e6f5:	dec    esi
  42e6f6:	aaa    
  42e6f7:	jne    0x42e6a9
  42e6f9:	cmc    
  42e6fa:	mov    ah,0xef
  42e6fc:	mov    ah,0xfb
  42e6fe:	lock xor BYTE PTR ds:0xdfb57e60,dh
  42e705:	mov    bp,0x4b70
  42e709:	jne    0x42e6f1
  42e70b:	adc    eax,0xb2e899b8
  42e710:	dec    esi
  42e711:	xchg   ebp,eax
  42e712:	inc    esp
  42e713:	or     BYTE PTR ds:0xb06ae285,0xef
  42e71a:	stos   DWORD PTR es:[edi],eax
  42e71b:	cmp    ebp,DWORD PTR [eax-0x4fbe2b1d]
  42e721:	outs   dx,DWORD PTR ds:[esi]
  42e722:	test   al,0x5d
  42e724:	sahf   
  42e725:	sbb    BYTE PTR [edi],0x1b
  42e728:	add    bh,dl
  42e72a:	xchg   esp,eax
  42e72b:	out    dx,al
  42e72c:	loop   0x42e784
  42e72e:	sub    al,0xb2
  42e730:	jbe    0x42e6d0
  42e732:	lahf   
  42e733:	pusha  
  42e734:	cdq    
  42e735:	sub    BYTE PTR [esi],ch
  42e737:	inc    ebx
  42e738:	xlat   BYTE PTR ds:[ebx]
  42e739:	daa    
  42e73a:	jmp    0xfa5c:0xe0d393c9
  42e741:	add    al,0x73
  42e743:	mov    edi,0xeaeda2f6
  42e748:	sub    al,0x4d
  42e74a:	xor    al,0x5e
  42e74c:	inc    ebp
  42e74d:	or     DWORD PTR [edi+0xbcb699c],esi
  42e753:	call   0xc39b:0x84a4c728
  42e75a:	mov    WORD PTR [ecx],cx
  42e75d:	out    dx,eax
  42e75e:	test   al,0x24
  42e760:	inc    esi
  42e761:	xor    eax,0x68f8d883
  42e766:	sti    
  42e767:	and    DWORD PTR [ebx],0xffffff8d
  42e76a:	push   ss
  42e76b:	ds dec eax
  42e76d:	lods   al,BYTE PTR ds:[esi]
  42e76e:	add    eax,0x5861bd36
  42e773:	imul   BYTE PTR [ecx+eax*8+0x4a3a72fc]
  42e77a:	stos   BYTE PTR es:[edi],al
  42e77b:	dec    edx
  42e77c:	sub    DWORD PTR [eax],esp
  42e77e:	cmp    DWORD PTR [ebx+ecx*4+0x1b2b90f3],ebp
  42e785:	stc    
  42e786:	or     ecx,DWORD PTR [esi-0xfb37aab]
  42e78c:	jo     0x42e71c
  42e78e:	sbb    al,0x31
  42e790:	imul   edx,ebx,0x24
  42e793:	adc    eax,esp
  42e795:	lahf   
  42e796:	inc    ebp
  42e797:	mov    BYTE PTR [esi-0x1e],ch
  42e79a:	add    DWORD PTR [ebx+0x5a],eax
  42e79d:	(bad)  
  42e79e:	sar    DWORD PTR [ebx],1
  42e7a0:	mov    bh,0x43
  42e7a2:	ja     0x42e81b
  42e7a4:	pop    ebx
  42e7a5:	mov    esp,ecx
  42e7a7:	jge    0x42e80a
  42e7a9:	cmp    eax,0x4257fcb1
  42e7ae:	(bad)  
  42e7af:	jo     0x42e76a
  42e7b1:	push   esp
  42e7b2:	cld    
  42e7b3:	out    0x5c,eax
  42e7b5:	minps  xmm0,xmm1
  42e7b8:	bound  esp,QWORD PTR [ecx]
  42e7ba:	test   BYTE PTR ds:0xe5fc1b7,ch
  42e7c0:	ins    BYTE PTR es:[edi],dx
  42e7c1:	xchg   BYTE PTR [ecx+ebp*1-0x35],dh
  42e7c5:	mov    esp,0x66a57bfe
  42e7ca:	mov    eax,ds:0xdaf13ff3
  42e7cf:	pop    esi
  42e7d0:	imul   ebx,DWORD PTR [ebx+0x230cc3b2],0xee90725d
  42e7da:	cmp    DWORD PTR [esi],edi
  42e7dc:	and    eax,0x4470b534
  42e7e1:	xor    eax,0xc6c72681
  42e7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7e7:	mov    es,WORD PTR [eax]
  42e7e9:	in     al,dx
  42e7ea:	dec    ebp
  42e7eb:	(bad)  [esi+0x31725718]
  42e7f1:	repz xchg ebp,eax
  42e7f3:	mov    esp,0x6cd60a92
  42e7f8:	sub    BYTE PTR ss:[ebx+ecx*2+0x6b34679d],ch
  42e800:	js     0x42e80f
  42e802:	sti    
  42e803:	and    eax,0xf54e4932
  42e808:	dec    ebp
  42e809:	and    BYTE PTR [ecx],bl
  42e80b:	jle    0x42e7c7
  42e80d:	rol    BYTE PTR [eax],1
  42e80f:	or     al,0x99
  42e811:	fst    QWORD PTR [ebp+ebx*2-0x5a0360c8]
  42e818:	lds    edx,FWORD PTR [edx]
  42e81a:	jg     0x42e891
  42e81c:	adc    BYTE PTR [eax+0xe],cl
  42e81f:	stos   BYTE PTR es:[edi],al
  42e820:	sbb    al,0x50
  42e822:	es test eax,0x67941609
  42e828:	jno    0x42e7dc
  42e82a:	xor    al,0x35
  42e82c:	or     DWORD PTR [eax+0x52d0469e],0x5988c851
  42e836:	pop    ecx
  42e837:	stc    
  42e838:	pop    esi
  42e839:	push   0xd070fa63
  42e83e:	adc    eax,0xdd631e54
  42e843:	or     eax,0x15add507
  42e848:	jecxz  0x42e899
  42e84a:	cmp    DWORD PTR [esi-0x198c53d4],ebx
  42e850:	push   ss
  42e851:	call   0x96853fd0
  42e856:	cmp    al,0xf8
  42e858:	das    
  42e859:	sub    al,0xfe
  42e85b:	mov    ebx,0x655a051a
  42e860:	out    dx,al
  42e861:	hlt    
  42e862:	push   esi
  42e863:	aad    0x71
  42e865:	mov    bh,0xcb
  42e867:	mov    DWORD PTR [ecx-0x119439d5],edi
  42e86d:	ins    DWORD PTR es:[edi],dx
  42e86e:	adc    edi,DWORD PTR [edx]
  42e870:	cmp    eax,0xb86407ce
  42e875:	jae    0x42e862
  42e877:	sub    bh,BYTE PTR [esi+0x9c4033]
  42e87d:	test   bl,ch
  42e87f:	cwde   
  42e880:	and    ebx,ebx
  42e882:	into   
  42e883:	mov    dl,0x38
  42e885:	lock mov WORD PTR [ecx],gs
  42e888:	sbb    DWORD PTR [esp+eax*8-0x2591cb44],eax
  42e88f:	stos   DWORD PTR es:[edi],eax
  42e890:	add    bh,BYTE PTR [eax+0x38cbb85e]
  42e896:	popa   
  42e897:	fdivr  DWORD PTR [ebp+0x32]
  42e89a:	mov    ah,0x7d
  42e89c:	jl     0x42e874
  42e89e:	inc    esp
  42e89f:	lahf   
  42e8a0:	shr    BYTE PTR [ebp+0x2a],1
  42e8a3:	into   
  42e8a4:	push   esi
  42e8a5:	lea    ebx,[edx+ebp*8+0x1ac40cef]
  42e8ac:	fsubp  st(2),st
  42e8ae:	outs   dx,BYTE PTR ds:[esi]
  42e8af:	(bad)  
  42e8b0:	dec    eax
  42e8b1:	inc    ebp
  42e8b2:	inc    BYTE PTR [ebp+0x3a]
  42e8b5:	pop    esi
  42e8b6:	pop    esp
  42e8b7:	cmp    al,0xb5
  42e8b9:	jl     0x42e8c6
  42e8bb:	push   ss
  42e8bc:	repnz and eax,0xc6bc68f6
  42e8c2:	shr    eax,cl
  42e8c4:	or     al,0xcb
  42e8c6:	jg     0x42e90b
  42e8c8:	sbb    esp,DWORD PTR [ebx]
  42e8ca:	mov    ?,WORD PTR [edi]
  42e8cc:	aaa    
  42e8cd:	mov    bl,0x73
  42e8cf:	lea    edi,[ebx+eax*1+0x7d]
  42e8d3:	(bad)  
  42e8d4:	in     eax,0xa5
  42e8d6:	in     eax,0xd6
  42e8d8:	imul   edi,DWORD PTR [esi-0x2d],0x28
  42e8dc:	neg    esp
  42e8de:	fsub   st,st(6)
  42e8e0:	cmp    eax,0x608b8dc5
  42e8e5:	iret   
  42e8e6:	jbe    0x42e95a
  42e8e8:	out    dx,eax
  42e8e9:	cmp    bh,BYTE PTR [edx+0x4f2e60f]
  42e8ef:	mov    ch,0xf0
  42e8f1:	cmp    DWORD PTR [ebx-0x6b],esp
  42e8f4:	nop
  42e8f5:	outs   dx,DWORD PTR ds:[esi]
  42e8f6:	mov    ds:0xe49b84b,eax
  42e8fb:	lds    edi,FWORD PTR [edi-0x68]
  42e8fe:	mov    bl,0x1b
  42e900:	inc    ebx
  42e901:	das    
  42e902:	or     DWORD PTR [edx+0x28c60b89],ebp
  42e908:	lea    ebx,[ebx-0x9]
  42e90b:	inc    eax
  42e90c:	loope  0x42e89e
  42e90e:	add    al,0xd
  42e910:	jno    0x42e924
  42e912:	retf   
  42e913:	jmp    0x42e963
  42e915:	sar    DWORD PTR [ecx-0x5a],0xc
  42e919:	lea    esp,[edx-0x20]
  42e91c:	adc    edi,ebp
  42e91e:	lahf   
  42e91f:	scas   eax,DWORD PTR es:[edi]
  42e920:	bsf    ebp,DWORD PTR ds:0xf7af591c
  42e927:	mov    ah,0xf2
  42e929:	leave  
  42e92a:	mov    dh,0x22
  42e92c:	in     al,0xcc
  42e92e:	or     dl,BYTE PTR ds:0x8b6a5299
  42e934:	addr16 push ebx
  42e936:	push   cs
  42e937:	into   
  42e938:	call   0xd11c:0x34be6c92
  42e93f:	ficomp DWORD PTR [edi-0x6e]
  42e942:	sbb    BYTE PTR [eax-0x4a],bl
  42e945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e946:	test   al,0x3b
  42e948:	inc    ecx
  42e949:	mov    edi,DWORD PTR [ebx]
  42e94b:	mov    ebx,0xf7a16efa
  42e950:	mov    bh,BYTE PTR [ecx]
  42e952:	jno    0x42e8f7
  42e954:	mov    ah,0x35
  42e956:	and    al,0x7b
  42e958:	add    dh,dl
  42e95a:	mov    ecx,0x174dc357
  42e95f:	test   BYTE PTR [ecx-0x9e2931c],dh
  42e965:	cmp    eax,0xc06ece9
  42e96a:	cwde   
  42e96b:	push   ecx
  42e96c:	push   ss
  42e96d:	mov    ecx,0xfe8c55cc
  42e972:	aas    
  42e973:	cli    
  42e974:	inc    edx
  42e975:	jecxz  0x42e992
  42e977:	daa    
  42e978:	cwde   
  42e979:	cmp    edi,eax
  42e97b:	in     al,0xc8
  42e97d:	lar    esp,WORD PTR [eax+0x4356e668]
  42e984:	jmp    0x9136:0x9fcf95e9
  42e98b:	retf   0x1df0
  42e98e:	sub    eax,0x250dcdc8
  42e993:	jne    0x42e9ac
  42e995:	inc    edx
  42e996:	iret   
  42e997:	arpl   WORD PTR [esi+0x43c00f4b],si
  42e99d:	mov    eax,0x18ca4bef
  42e9a2:	push   edi
  42e9a3:	fwait
  42e9a4:	into   
  42e9a5:	add    edi,DWORD PTR [ebx+0x3a]
  42e9a8:	jne    0x42e993
  42e9aa:	das    
  42e9ab:	xor    bl,BYTE PTR [eax+0x1624f12]
  42e9b1:	and    DWORD PTR [edi-0x4f8c4fe4],esp
  42e9b7:	jmp    0x42e9d2
  42e9b9:	(bad)  
  42e9ba:	(bad)  
  42e9bb:	xchg   esi,eax
  42e9bc:	out    0x38,al
  42e9be:	mov    edx,0x8b721a55
  42e9c3:	das    
  42e9c4:	mov    esi,0x799f8afd
  42e9c9:	mov    ch,BYTE PTR [ebp+0x3de96fb8]
  42e9cf:	jb     0x42ea3f
  42e9d1:	enter  0xcaa9,0x9
  42e9d5:	leave  
  42e9d6:	ja     0x42e9c6
  42e9d8:	(bad)  [eax+0x46]
  42e9db:	mov    DWORD PTR [ebp+ebx*1+0x2],edi
  42e9df:	mov    bl,0x41
  42e9e1:	arpl   WORD PTR [eax],dx
  42e9e3:	fisttp QWORD PTR [ecx]
  42e9e5:	pushf  
  42e9e6:	sbb    eax,0xf776084a
  42e9eb:	or     esp,ebp
  42e9ed:	mov    dh,0x59
  42e9ef:	jmp    0x42e9c1
  42e9f1:	fcmovbe st,st(1)
  42e9f3:	jmp    0x42ea1b
  42e9f5:	or     DWORD PTR [edx+0x30],edx
  42e9f8:	lahf   
  42e9f9:	es popf 
  42e9fb:	xchg   esi,eax
  42e9fc:	push   eax
  42e9fd:	sbb    al,0x47
  42e9ff:	(bad)  
  42ea03:	mov    ah,0xa2
  42ea05:	inc    ebp
  42ea06:	shr    BYTE PTR [edx-0x59],0xfc
  42ea0a:	cmp    al,0x83
  42ea0d:	jge    0x42ea20
  42ea0f:	fcmovnu st,st(4)
  42ea11:	pop    esi
  42ea12:	jns    0x42ea43
  42ea14:	stos   BYTE PTR es:[edi],al
  42ea15:	lock fild WORD PTR [ebp+0x1af9abd5]
  42ea1c:	dec    eax
  42ea1d:	ins    BYTE PTR es:[edi],dx
  42ea1e:	adc    eax,0xd148bf63
  42ea23:	cld    
  42ea24:	iret   
  42ea25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea26:	repz and al,0x6e
  42ea29:	cmc    
  42ea2a:	ins    BYTE PTR es:[edi],dx
  42ea2b:	icebp  
  42ea2c:	aam    0xc3
  42ea2e:	dec    esi
  42ea2f:	in     al,0xcc
  42ea31:	jmp    0xbcb8edf1
  42ea36:	test   eax,0x22772c80
  42ea3b:	imul   eax
  42ea3d:	ss adc al,cl
  42ea40:	jae    0x42e9fa
  42ea42:	repz mov WORD PTR [edx-0x4b8dc4a9],es
  42ea49:	xchg   ebp,eax
  42ea4a:	push   ss
  42ea4b:	mov    eax,ds:0x4079d2e4
  42ea50:	and    ebx,ebp
  42ea52:	adc    DWORD PTR [edx+0x1e],esp
  42ea55:	sub    ah,BYTE PTR [ecx+0xa]
  42ea58:	adc    eax,0xc9ff4bac
  42ea5d:	pop    ds
  42ea5e:	pushf  
  42ea5f:	aas    
  42ea60:	mov    ah,ah
  42ea62:	div    BYTE PTR [eax]
  42ea64:	cli    
  42ea65:	add    al,0x63
  42ea67:	popf   
  42ea68:	retf   0x9bdd
  42ea6b:	and    BYTE PTR fs:[ecx],dl
  42ea6e:	sub    BYTE PTR [ebx+edx*2+0x16],bl
  42ea72:	xor    cl,ch
  42ea74:	and    edx,esi
  42ea76:	ss jns 0x42eab4
  42ea79:	stos   DWORD PTR es:[edi],eax
  42ea7a:	aaa    
  42ea7b:	cmp    DWORD PTR [edx+0x75],ecx
  42ea7e:	ss enter 0x4069,0xf9
  42ea83:	sub    DWORD PTR [ecx-0x4d04b18f],ecx
  42ea89:	ja     0x42ea2d
  42ea8b:	ds add ecx,edx
  42ea8e:	test   eax,0x1e762d6b
  42ea93:	out    0xc4,eax
  42ea95:	pop    esp
  42ea96:	test   cl,dh
  42ea98:	(bad)  
  42ea99:	sbb    edx,DWORD PTR [eax]
  42ea9b:	and    edi,DWORD PTR [eax+0x3950e0db]
  42eaa1:	pop    es
  42eaa2:	popf   
  42eaa3:	sub    DWORD PTR [ecx+0x11],esp
  42eaa6:	jae    0x42ea9a
  42eaa8:	cli    
  42eaa9:	lea    ebp,[edx]
  42eaab:	xchg   ecx,eax
  42eaac:	dec    ecx
  42eaad:	lea    esi,[ebx-0x5d5ee99e]
  42eab3:	js     0x42ea5a
  42eab5:	lea    esp,[edx]
  42eab7:	cmp    DWORD PTR [esp+ecx*8-0x3c],0x3f
  42eabc:	stos   BYTE PTR es:[edi],al
  42eabd:	lods   al,BYTE PTR ds:[esi]
  42eabe:	mov    ebp,0xd5f53fdf
  42eac3:	loopne 0x42eae2
  42eac5:	mov    esi,DWORD PTR [ebp+0x61a500f3]
  42eacb:	adc    al,0x2
  42eacd:	mov    eax,0x5200801e
  42ead2:	pop    eax
  42ead3:	daa    
  42ead4:	mov    al,0xfd
  42ead6:	sti    
  42ead7:	add    al,BYTE PTR [ecx+0x3f66a056]
  42eadd:	xor    edx,esi
  42eadf:	inc    esp
  42eae0:	adc    ebx,DWORD PTR [ebx-0x5a]
  42eae3:	jp     0x42eb5e
  42eae5:	into   
  42eae6:	test   BYTE PTR [bx+si+0x655e],bl
  42eaeb:	cmp    edi,DWORD PTR [eax]
  42eaed:	cmp    ah,cl
  42eaef:	std    
  42eaf0:	cmc    
  42eaf1:	or     dh,0xa7
  42eaf4:	out    0x5b,al
  42eaf6:	add    al,0x60
  42eaf8:	jmp    0x7c27:0xbd67e52b
  42eaff:	sbb    eax,0x3483df44
  42eb04:	in     eax,0x9e
  42eb06:	repnz aaa 
  42eb08:	bound  edi,QWORD PTR [ebp-0x32]
  42eb0b:	repz adc eax,0xf2d4c39e
  42eb11:	shl    dl,cl
  42eb13:	pop    ss
  42eb14:	cmp    eax,0x4f5baf0a
  42eb19:	mov    ch,0x7b
  42eb1b:	lea    edi,[ebx+0x20]
  42eb1e:	xor    esi,DWORD PTR [ebx-0x6f8e1829]
  42eb24:	and    BYTE PTR [ebx],ah
  42eb26:	imul   ecx,DWORD PTR [ebx+ecx*2],0xde4dd963
  42eb2d:	outs   dx,DWORD PTR ds:[esi]
  42eb2e:	ret    
  42eb2f:	add    al,cl
  42eb31:	repz mul DWORD PTR [edi-0xbf34630]
  42eb38:	fiadd  WORD PTR [esi-0x34]
  42eb3b:	loope  0x42eaf1
  42eb3d:	mov    ebx,0x34727035
  42eb42:	inc    esp
  42eb43:	cwde   
  42eb44:	mov    bh,0xe3
  42eb46:	retf   0x9655
  42eb49:	or     edx,DWORD PTR [ebp-0x3d]
  42eb4c:	scas   eax,DWORD PTR es:[edi]
  42eb4d:	js     0x42eaff
  42eb4f:	mov    ds:0xdc467a94,eax
  42eb54:	mov    edi,0x5398acb2
  42eb59:	pop    es
  42eb5a:	cli    
  42eb5b:	outs   dx,DWORD PTR ds:[esi]
  42eb5c:	test   al,0xf0
  42eb5e:	rcr    BYTE PTR [ebp-0x2a6d44a5],cl
  42eb64:	or     al,0x7c
  42eb66:	mov    dl,0x5b
  42eb68:	mov    ch,0x3e
  42eb6a:	adc    ebp,ecx
  42eb6c:	bound  edx,QWORD PTR [edi]
  42eb6e:	xor    ebp,DWORD PTR [edi]
  42eb70:	pop    ecx
  42eb71:	es (bad) 
  42eb73:	adc    DWORD PTR [eax+ebp*4],ecx
  42eb76:	fnstcw WORD PTR [eax]
  42eb78:	sar    eax,1
  42eb7a:	push   esp
  42eb7b:	and    cl,dl
  42eb7d:	xor    cl,ah
  42eb7f:	jp     0x42ebfb
  42eb81:	stos   BYTE PTR es:[edi],al
  42eb82:	daa    
  42eb83:	mov    DWORD PTR [edi-0x6bddbfe4],ebx
  42eb89:	hlt    
  42eb8a:	mov    DWORD PTR [ebp-0x66],edi
  42eb8d:	test   al,0x74
  42eb8f:	jae    0x42ebcc
  42eb91:	mov    ebp,fs
  42eb93:	scas   eax,DWORD PTR es:[edi]
  42eb94:	dec    esp
  42eb95:	xchg   ebx,eax
  42eb96:	mov    esi,0x914bccd2
  42eb9b:	sub    dh,al
  42eb9d:	fnsave [eax-0x59]
  42eba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eba1:	sub    BYTE PTR [ebx+0x4b],dl
  42eba4:	jno    0x42eb82
  42eba6:	cmp    dl,BYTE PTR [ebx+0x3bc73fc3]
  42ebac:	inc    ecx
  42ebad:	sub    eax,0xd2d48ce4
  42ebb2:	mov    ecx,0x147364e3
  42ebb7:	mov    edx,0xeddc8fe7
  42ebbc:	rcl    BYTE PTR [eax],1
  42ebbe:	sbb    al,0x8d
  42ebc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebc1:	or     dh,bl
  42ebc3:	add    esp,0x9
  42ebc6:	clc    
  42ebc7:	jne    0x42ebcf
  42ebc9:	fcmovbe st,st(5)
  42ebcb:	fxtract 
  42ebcd:	inc    eax
  42ebce:	inc    edi
  42ebcf:	or     esp,DWORD PTR [edx]
  42ebd1:	cmp    bl,bl
  42ebd3:	idiv   DWORD PTR [edx-0x65dfeae9]
  42ebd9:	gs push edx
  42ebdb:	jne    0x42ebf8
  42ebdd:	pop    ss
  42ebde:	imul   ebp,DWORD PTR [eax-0x3f],0xf211eedf
  42ebe5:	inc    ebp
  42ebe6:	repnz inc edx
  42ebe8:	jecxz  0x42ebd8
  42ebea:	out    dx,al
  42ebeb:	(bad)  
  42ebec:	cli    
  42ebed:	repz ja 0x42ec58
  42ebf0:	into   
  42ebf1:	daa    
  42ebf2:	loope  0x42ec6d
  42ebf4:	xchg   esi,eax
  42ebf5:	mov    edx,0x3ec2b8f6
  42ebfa:	jg     0x42ec1e
  42ebfc:	(bad)  
  42ebfd:	push   ebx
  42ebfe:	jnp    0x42eb88
  42ec00:	sbb    al,0x32
  42ec02:	call   0x3171:0xb4aadf2d
  42ec09:	pop    es
  42ec0a:	test   BYTE PTR [esi-0x602707c8],ah
  42ec10:	outs   dx,DWORD PTR ds:[esi]
  42ec11:	mov    ah,BYTE PTR [eax+0x38ce7f73]
  42ec17:	rcr    DWORD PTR [edi+eax*8+0x28],1
  42ec1b:	jne    0x42ec88
  42ec1d:	pop    edx
  42ec1e:	setb   BYTE PTR [eax+0x7043dea2]
  42ec25:	or     DWORD PTR [edx-0x8],edi
  42ec28:	xchg   ebp,eax
  42ec29:	rcr    eax,cl
  42ec2b:	test   DWORD PTR [edx-0x14bfcc56],ecx
  42ec31:	mov    ecx,0x76c5b7a8
  42ec36:	inc    esi
  42ec37:	inc    edx
  42ec38:	mov    ebx,0xab440445
  42ec3d:	pop    ebp
  42ec3e:	adc    BYTE PTR [ebx+0x71],bh
  42ec41:	or     al,0xba
  42ec43:	and    DWORD PTR [edi+0x1bc2ec7c],ebx
  42ec49:	dec    esi
  42ec4a:	push   ebx
  42ec4b:	pop    ecx
  42ec4c:	mov    edx,0x256ca056
  42ec51:	and    bl,0xfc
  42ec54:	adc    DWORD PTR ds:0x7e214f42,ebp
  42ec5a:	cwde   
  42ec5b:	and    esp,DWORD PTR [eax]
  42ec5d:	rdmsr  
  42ec5f:	dec    eax
  42ec60:	jne    0x42ec1a
  42ec62:	lock clc 
  42ec64:	fnsave [ecx+0x1fa921cb]
  42ec6a:	sbb    al,0xff
  42ec6c:	outs   dx,DWORD PTR ds:[esi]
  42ec6d:	in     al,0x6e
  42ec6f:	mov    al,0xf1
  42ec71:	test   DWORD PTR [esi+ebp*1],0x5eca3bca
  42ec78:	aam    0x90
  42ec7a:	or     esp,ebx
  42ec7c:	sti    
  42ec7d:	daa    
  42ec7e:	add    dh,0xd4
  42ec81:	fldenv [ebp+0x6aed0c98]
  42ec87:	clc    
  42ec88:	rcr    BYTE PTR [eax],0x52
  42ec8b:	xchg   esp,eax
  42ec8c:	jo     0x42ec67
  42ec8e:	test   BYTE PTR [ecx+0x62],dh
  42ec91:	rcr    BYTE PTR [ebp-0x3],0xbf
  42ec95:	push   ecx
  42ec96:	scas   al,BYTE PTR es:[edi]
  42ec97:	fnsave [ecx+0x54]
  42ec9a:	jae    0x42ed14
  42ec9c:	lds    esi,FWORD PTR [ebx+0x2d]
  42ec9f:	sahf   
  42eca0:	xor    DWORD PTR [esi],esi
  42eca2:	popa   
  42eca3:	lahf   
  42eca4:	sbb    eax,DWORD PTR [ebp-0x51f79075]
  42ecaa:	dec    ebp
  42ecab:	add    eax,DWORD PTR [esi]
  42ecad:	lahf   
  42ecae:	ret    
  42ecaf:	cmova  esi,DWORD PTR cs:[esi]
  42ecb3:	xlat   BYTE PTR ds:[ebx]
  42ecb4:	push   eax
  42ecb5:	jecxz  0x42ec4b
  42ecb7:	pop    ecx
  42ecb8:	enter  0x1e96,0xaa
  42ecbc:	mov    ds:0x7b9b6c16,eax
  42ecc1:	test   DWORD PTR [ecx+0x62200d56],ebx
  42ecc7:	jmp    edx
  42ecc9:	lods   al,BYTE PTR ds:[esi]
  42ecca:	mov    bl,0xe1
  42eccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eccd:	push   ss
  42ecce:	cmp    eax,0xaa2aaf5a
  42ecd3:	in     eax,dx
  42ecd4:	fnstsw WORD PTR [ecx+eiz*2-0x4c]
  42ecd8:	popa   
  42ecd9:	retf   
  42ecda:	mov    ds:0x3f35c00c,eax
  42ecdf:	xor    esp,DWORD PTR [edx-0x4]
  42ece2:	xor    ch,BYTE PTR [edx]
  42ece4:	retf   
  42ece5:	call   DWORD PTR [ecx-0xf0b9c42]
  42eceb:	js     0x42ed25
  42eced:	jb     0x42ecbb
  42ecef:	push   ecx
  42ecf0:	pop    ecx
  42ecf1:	div    BYTE PTR [ebp+edi*1-0x6d]
  42ecf5:	and    bh,BYTE PTR [ebx-0x17f3326e]
  42ecfb:	mov    al,0xc3
  42ecfd:	in     al,dx
  42ecfe:	push   esp
  42ecff:	scas   al,BYTE PTR es:[edi]
  42ed00:	mov    dl,0x23
  42ed02:	aaa    
  42ed03:	pushf  
  42ed04:	stc    
  42ed05:	jbe    0x42eca7
  42ed07:	inc    esp
  42ed08:	adc    al,0x96
  42ed0b:	test   eax,0x3dffb22e
  42ed10:	lods   eax,DWORD PTR ds:[esi]
  42ed11:	sbb    BYTE PTR [edx-0x562d4c25],bl
  42ed17:	in     al,0xae
  42ed19:	sub    BYTE PTR [eax+0x5d25c427],bl
  42ed1f:	int    0x23
  42ed21:	cld    
  42ed22:	ds jns 0x42ed3e
  42ed25:	rcl    BYTE PTR [ecx+esi*2+0x7d],cl
  42ed29:	push   0x74
  42ed2b:	and    BYTE PTR [eax+0x78],0x77
  42ed2f:	pop    ss
  42ed30:	pushf  
  42ed31:	aas    
  42ed32:	add    BYTE PTR [esi+0x68d6db97],cl
  42ed38:	cmp    ch,BYTE PTR [ebx]
  42ed3a:	pusha  
  42ed3b:	ret    
  42ed3c:	push   0x57
  42ed3e:	pop    edx
  42ed3f:	fwait
  42ed40:	add    dl,bh
  42ed42:	(bad)  
  42ed44:	int    0xec
  42ed46:	out    dx,al
  42ed47:	cmp    al,al
  42ed49:	arpl   bx,sp
  42ed4b:	pop    ss
  42ed4c:	int    0x43
  42ed4e:	ds push eax
  42ed50:	jne    0x42ed54
  42ed52:	call   0xc77138a9
  42ed57:	(bad)  
  42ed58:	push   ebx
  42ed59:	mov    esi,DWORD PTR [ebp-0x5f]
  42ed5c:	sbb    BYTE PTR [ecx],0x3e
  42ed5f:	loopne 0x42ed6b
  42ed61:	out    0xf1,eax
  42ed63:	jnp    0x42ed2e
  42ed65:	fcom   QWORD PTR [eax-0x701d72ae]
  42ed6b:	inc    ebx
  42ed6c:	pop    ecx
  42ed6d:	pop    ss
  42ed6e:	stos   BYTE PTR es:[edi],al
  42ed6f:	test   ah,dl
  42ed71:	mov    ecx,0x9b0d5a18
  42ed76:	jge    0x42ed83
  42ed78:	sbb    ebp,esi
  42ed7a:	add    DWORD PTR [ebx],esi
  42ed7c:	outs   dx,BYTE PTR ds:[esi]
  42ed7d:	mov    ds:0x4bacbbcc,eax
  42ed82:	repnz shl DWORD PTR [ecx+0x422bd8a9],0xa7
  42ed8a:	push   ecx
  42ed8b:	popa   
  42ed8c:	or     ebp,DWORD PTR [ebx-0x257e89fa]
  42ed92:	add    al,0x77
  42ed94:	mov    ds:0x174ada3c,eax
  42ed99:	sbb    eax,0x80d89ce1
  42ed9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed9f:	outs   dx,DWORD PTR ds:[esi]
  42eda0:	adc    BYTE PTR [edx],ch
  42eda2:	dec    eax
  42eda3:	mov    ch,0x4f
  42eda5:	fistp  WORD PTR [edi-0x19d756bd]
  42edab:	in     eax,dx
  42edac:	inc    esp
  42edad:	lods   eax,DWORD PTR ds:[esi]
  42edae:	data16 scas al,BYTE PTR es:[edi]
  42edb0:	aad    0xc0
  42edb2:	data16 outs dx,BYTE PTR ds:[esi]
  42edb4:	push   ebx
  42edb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42edb6:	and    eax,0x4ac55587
  42edbb:	into   
  42edbc:	xor    DWORD PTR [edi+eiz*8+0x71274a05],ebp
  42edc3:	ds sub al,0xdd
  42edc6:	xchg   esi,eax
  42edc7:	mov    ch,0x2e
  42edc9:	stos   DWORD PTR es:[edi],eax
  42edca:	nop
  42edcb:	fnstsw WORD PTR [ecx+0x614f9393]
  42edd1:	cwde   
  42edd2:	jo     0x42ee41
  42edd4:	daa    
  42edd5:	in     eax,0xf9
  42edd7:	pop    ecx
  42edd8:	jb     0x42ed67
  42edda:	cwde   
  42eddb:	push   edi
  42eddc:	xchg   edi,eax
  42eddd:	push   eax
  42edde:	add    al,0xfe
  42ede0:	sbb    bl,BYTE PTR [ebx+0x53]
  42ede3:	push   es
  42ede4:	push   ds
  42ede5:	(bad)  
  42ede6:	popa   
  42ede7:	call   0xce02:0x68d29430
  42edee:	or     dl,BYTE PTR [eax+ecx*2-0x6e82da06]
  42edf5:	sub    BYTE PTR [esi+0x13dee977],bh
  42edfb:	into   
  42edfc:	mov    al,ds:0x6d17a267
  42ee01:	sbb    DWORD PTR [edx-0x65],esp
  42ee04:	jb     0x42ede9
  42ee06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee07:	out    0x9c,eax
  42ee09:	enter  0x3e03,0xee
  42ee0d:	iret   
  42ee0e:	mov    BYTE PTR [edi+0x73],al
  42ee11:	loopne 0x42ee56
  42ee13:	popa   
  42ee14:	gs gs sti 
  42ee17:	jno    0x42ee3d
  42ee19:	cmp    eax,0xd5c0ac71
  42ee1e:	test   BYTE PTR fs:[edx+0x259aa955],0xfb
  42ee26:	test   DWORD PTR [eax-0x451b9a25],ebp
  42ee2c:	pop    edi
  42ee2d:	test   eax,0xc4793d0
  42ee32:	jl     0x42ee35
  42ee34:	and    ah,al
  42ee36:	mov    es,WORD PTR [edx]
  42ee38:	mov    ebp,0xf7dd7316
  42ee3d:	lods   al,BYTE PTR ds:[esi]
  42ee3e:	fdivp  st(3),st
  42ee40:	inc    ebp
  42ee41:	sub    BYTE PTR [ecx],ah
  42ee43:	std    
  42ee44:	mov    ah,0x9f
  42ee46:	push   ds
  42ee47:	jle    0x42ee31
  42ee49:	sub    al,0x13
  42ee4b:	dec    ecx
  42ee4c:	popa   
  42ee4d:	mov    esp,0x398f0ef8
  42ee52:	mov    edi,0x262ebfe6
  42ee57:	js     0x42ee23
  42ee59:	dec    edi
  42ee5a:	add    esp,DWORD PTR [ebx-0x29fdfe47]
  42ee60:	in     al,dx
  42ee61:	pushf  
  42ee62:	and    ah,dl
  42ee64:	pop    ebp
  42ee65:	js     0x42eeae
  42ee67:	lahf   
  42ee68:	popa   
  42ee69:	lahf   
  42ee6a:	ins    BYTE PTR es:[edi],dx
  42ee6b:	iret   
  42ee6c:	fs push cs
  42ee6e:	add    ah,BYTE PTR [edi+0x22]
  42ee71:	jle    0x42ee72
  42ee73:	sub    eax,0x1e4245a1
  42ee78:	mul    BYTE PTR [ebx+0x47cc98be]
  42ee7e:	ja     0x42ee9b
  42ee80:	mov    ch,0x5e
  42ee82:	push   edx
  42ee83:	inc    edx
  42ee84:	mov    esp,0x7b47260
  42ee89:	mov    eax,0x7e3e64f
  42ee8e:	(bad)  
  42ee8f:	aad    0x69
  42ee91:	aaa    
  42ee92:	out    dx,al
  42ee93:	sbb    BYTE PTR [eax+ebp*1-0x28c4327c],bh
  42ee9a:	mov    ah,0x25
  42ee9c:	cmc    
  42ee9d:	or     edx,DWORD PTR [ebp-0x28]
  42eea0:	mov    BYTE PTR [eax-0x7c41a22],al
  42eea6:	cmp    BYTE PTR [ebp-0x41185189],ah
  42eeac:	repz js 0x42ee7c
  42eeaf:	cs push 0xfffffffc
  42eeb2:	mov    ecx,0x2e191150
  42eeb7:	stos   BYTE PTR es:[edi],al
  42eeb8:	mov    eax,0xb9c927ab
  42eebd:	hlt    
  42eebe:	xchg   ebx,eax
  42eebf:	mov    eax,ds:0x34b60595
  42eec4:	pop    esi
  42eec5:	jecxz  0x42ee7f
  42eec7:	imul   ebp,DWORD PTR ds:0xcd15d732,0xffffffd3
  42eece:	xchg   ecx,eax
  42eecf:	mov    esi,0xade9a2a5
  42eed4:	imul   BYTE PTR [ebx+ebx*8]
  42eed7:	jp     0x42ef55
  42eed9:	icebp  
  42eeda:	mov    edi,ebx
  42eedc:	in     al,dx
  42eedd:	cmp    al,0x59
  42eedf:	int3   
  42eee0:	jo     0x42eeff
  42eee2:	jo     0x42eead
  42eee4:	fldcw  WORD PTR [ebp-0x3f5c7d67]
  42eeea:	ss cli 
  42eeec:	test   edx,0xb5aa71fb
  42eef2:	ss push 0x225f8bb5
  42eef8:	(bad)  
  42eef9:	int    0x93
  42eefb:	and    BYTE PTR [edx-0xbe48917],bh
  42ef01:	cmp    dl,0x80
  42ef04:	dec    edx
  42ef05:	test   BYTE PTR [ebp-0xe],dl
  42ef08:	push   0x5a988ea8
  42ef0d:	sub    al,0x9d
  42ef0f:	inc    edi
  42ef10:	adc    dh,BYTE PTR ds:0xeefe60dc
  42ef16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef17:	jp     0x42eef6
  42ef19:	mov    DWORD PTR ds:0xb90a0785,esp
  42ef1f:	pop    ss
  42ef20:	mov    BYTE PTR [edi-0x15],cl
  42ef23:	scas   eax,DWORD PTR es:[edi]
  42ef24:	iret   
  42ef25:	dec    esp
  42ef26:	add    eax,0x5298769c
  42ef2b:	and    eax,DWORD PTR [eax]
  42ef2d:	daa    
  42ef2e:	fdiv   QWORD PTR [ecx+0x27]
  42ef31:	adc    ah,BYTE PTR [ebx+0x6b]
  42ef34:	mov    esi,0x743ffefa
  42ef39:	jge    0x42eed7
  42ef3b:	sub    DWORD PTR [esi-0x599f5cd5],ebx
  42ef41:	pop    es
  42ef42:	pop    edi
  42ef43:	jp     0x42eef8
  42ef45:	psubw  mm3,mm1
  42ef48:	xor    al,BYTE PTR [ecx+0x682958c1]
  42ef4e:	mov    al,ds:0xa1edfa3f
  42ef53:	test   eax,0xd5b5b180
  42ef58:	push   esp
  42ef59:	not    DWORD PTR [esi+0x70]
  42ef5c:	test   ah,cl
  42ef5e:	imul   esi,DWORD PTR [ebp-0x686dcfb9],0xd5e08794
  42ef68:	jle    0x42ef5c
  42ef6a:	push   es
  42ef6b:	cdq    
  42ef6c:	addr16 mov fs:0xbb85,al
  42ef71:	jp     0x42eef9
  42ef73:	(bad)  
  42ef74:	js     0x42ef4e
  42ef76:	cmp    edi,DWORD PTR [eax-0x3909fc21]
  42ef7c:	cli    
  42ef7d:	out    dx,al
  42ef7e:	call   DWORD PTR ds:0xe5dab327
  42ef84:	fdivr  DWORD PTR [edi]
  42ef86:	sub    al,0x16
  42ef88:	out    dx,eax
  42ef89:	mov    edi,0x9dc07e26
  42ef8e:	push   es
  42ef8f:	popa   
  42ef90:	daa    
  42ef91:	xor    al,0x25
  42ef93:	mov    dl,0x7f
  42ef95:	jmp    0xa1fd52b9
  42ef9a:	xchg   esi,eax
  42ef9b:	push   ds
  42ef9c:	mov    ebp,0x166070fa
  42efa1:	push   ecx
  42efa2:	adc    bl,bl
  42efa4:	xchg   ebp,eax
  42efa5:	fmul   DWORD PTR [ebp-0x6f]
  42efa8:	std    
  42efa9:	push   edi
  42efaa:	xchg   esp,eax
  42efab:	mul    ebp
  42efad:	loop   0x42efd6
  42efaf:	iret   
  42efb0:	popa   
  42efb1:	call   0xb1dc:0xa66ba07b
  42efb8:	push   ss
  42efb9:	add    al,0x9a
  42efbb:	(bad)  [ebp-0x53d24b5]
  42efc1:	jbe    0x42ef9e
  42efc3:	dec    ebp
  42efc4:	int    0xe0
  42efc6:	test   dl,bh
  42efc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efc9:	add    ch,bl
  42efcb:	lock (bad) 
  42efcd:	and    BYTE PTR [ecx+0xd31f13d],ah
  42efd3:	test   dh,0x96
  42efd6:	loope  0x42f002
  42efd8:	mov    dh,0xd8
  42efda:	loop   0x42ef60
  42efdc:	xchg   ebx,eax
  42efdd:	jecxz  0x42efc3
  42efdf:	xchg   DWORD PTR [si+0x3189],edx
  42efe4:	je     0x42f008
  42efe6:	outs   dx,DWORD PTR ds:[esi]
  42efe7:	popa   
  42efe8:	(bad)  
  42efe9:	pop    ss
  42efea:	mov    ebp,0xdfd16df0
  42efef:	loop   0x42f035
  42eff1:	sbb    dh,0x99
  42eff4:	push   esi
  42eff5:	lea    edi,[edi]
  42eff7:	push   ss
  42eff8:	mov    al,ds:0x3cc01151
  42effd:	sbb    eax,0x2c91e9b1
  42f002:	xchg   BYTE PTR [eax-0x7df65ad5],cl
  42f008:	imul   DWORD PTR [ecx-0x2a]
  42f00b:	imul   DWORD PTR [ebx+0x48]
  42f00e:	pop    ss
  42f00f:	dec    ebx
  42f010:	(bad)  
  42f011:	xchg   edx,eax
  42f012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f013:	imul   edi,ebp,0x3b
  42f016:	test   eax,0xf89f9785
  42f01b:	adc    dh,BYTE PTR ds:0x3dbbc103
  42f021:	paddw  mm3,QWORD PTR [eax+0x7e1b139]
  42f028:	js     0x42f02a
  42f02a:	cmp    DWORD PTR fs:[eax],esp
  42f02d:	(bad)  
  42f02e:	ds mov ebx,0xdd7fbde9
  42f034:	out    0x2a,eax
  42f036:	das    
  42f037:	xor    bl,BYTE PTR ds:0x26472e68
  42f03d:	sub    eax,0xe4c5a422
  42f042:	fdiv   QWORD PTR [ecx]
  42f044:	dec    esi
  42f045:	cmp    al,0xeb
  42f047:	in     al,0xee
  42f049:	clc    
  42f04a:	mov    esp,0x2180df70
  42f04f:	rcl    dl,1
  42f051:	add    eax,0xf6ddfc7e
  42f056:	mov    edx,0x4d8c704a
  42f05b:	sbb    bl,BYTE PTR [esi+ebp*1]
  42f05e:	call   FWORD PTR [esi+0x38]
  42f061:	imul   ebx,DWORD PTR [eax+0x31823274],0xffffffa6
  42f068:	rol    DWORD PTR [esi+0x2febef4c],cl
  42f06e:	sub    BYTE PTR [ebx],bl
  42f070:	mov    ds:0xac4c6be2,al
  42f075:	and    ebp,DWORD PTR [edx]
  42f077:	jae    0x42f0d6
  42f079:	or     al,0xd6
  42f07b:	sub    ch,bh
  42f07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f07e:	aas    
  42f07f:	sbb    DWORD PTR ds:0x36aea240,ecx
  42f085:	popf   
  42f086:	cmc    
  42f087:	cdq    
  42f088:	fcom   DWORD PTR [esi-0x3]
  42f08b:	mov    cl,0xc3
  42f08d:	lock pop eax
  42f08f:	jmp    0x42f0c4
  42f091:	inc    eax
  42f092:	aam    0xa1
  42f094:	jmp    DWORD PTR [esp+ecx*2+0x443877f1]
  42f09b:	bound  ebp,QWORD PTR [eax]
  42f09d:	int3   
  42f09e:	js     0x42f099
  42f0a0:	dec    ebp
  42f0a1:	stos   BYTE PTR es:[edi],al
  42f0a2:	or     eax,0xbfc2baa6
  42f0a7:	pop    eax
  42f0a8:	lds    edi,FWORD PTR [esi-0x2d]
  42f0ab:	or     ebx,DWORD PTR [edx+0x13]
  42f0ae:	repz test eax,0xfc51672f
  42f0b4:	fs test al,0x58
  42f0b7:	aaa    
  42f0b8:	fisubr WORD PTR [eax-0x5b]
  42f0bb:	ja     0x42f086
  42f0bd:	mul    bh
  42f0bf:	mov    esi,0x290d89bb
  42f0c4:	(bad)  [edx+0x59]
  42f0c7:	jle    0x42f11e
  42f0c9:	sbb    DWORD PTR [eax-0x134597a9],edi
  42f0cf:	leave  
  42f0d0:	pop    edi
  42f0d1:	lea    edi,[esi+ebx*1+0x1b]
  42f0d5:	xor    bh,BYTE PTR [esi+ebx*4-0x1b]
  42f0d9:	xor    DWORD PTR [ecx+0x14],eax
  42f0dc:	mov    esp,0x73462e88
  42f0e1:	popa   
  42f0e2:	in     eax,0x9b
  42f0e4:	inc    edi
  42f0e5:	xchg   ebx,eax
  42f0e6:	xchg   ebx,eax
  42f0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0e8:	stos   DWORD PTR es:[edi],eax
  42f0e9:	push   ecx
  42f0ea:	vmread DWORD PTR [eax+0xe2ee6c2],eax
  42f0f1:	mov    cl,0x84
  42f0f3:	sbb    ah,dl
  42f0f5:	fsubr  QWORD PTR [edi+0x2fb5649f]
  42f0fb:	push   cs
  42f0fc:	pop    esi
  42f0fd:	enter  0x67db,0x4
  42f101:	lahf   
  42f102:	ficom  WORD PTR [edi]
  42f104:	outs   dx,DWORD PTR ds:[esi]
  42f105:	fisub  WORD PTR cs:[ebx+edi*1+0x79651700]
  42f10d:	fstp   st(3)
  42f10f:	lds    esi,FWORD PTR [ecx+eiz*1-0x71]
  42f113:	mov    al,ds:0x3262d9dc
  42f118:	mov    WORD PTR [edi+0x2a2b3bf7],?
  42f11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f11f:	call   0xb8908adf
  42f124:	mov    ebp,0xe0838709
  42f129:	or     eax,DWORD PTR [edi+0x53]
  42f12c:	fs test al,0x1a
  42f12f:	mov    DWORD PTR [esi-0x7],esp
  42f132:	dec    ebx
  42f133:	leave  
  42f134:	aaa    
  42f135:	or     dl,BYTE PTR [esi]
  42f137:	xchg   esi,eax
  42f138:	in     eax,0xde
  42f13a:	pushf  
  42f13b:	repz fimul WORD PTR [ecx+ebx*1+0x59]
  42f140:	or     eax,0xe31c9f18
  42f145:	adc    eax,0xdb8ea0c2
  42f14a:	xchg   DWORD PTR cs:[edi],edx
  42f14d:	pop    ss
  42f14e:	or     BYTE PTR [edi-0x52812e52],cl
  42f154:	or     eax,0x2f1edd88
  42f159:	add    edi,esp
  42f15b:	dec    esi
  42f15c:	sub    cl,BYTE PTR [ebx]
  42f15e:	(bad)  
  42f15f:	out    0x73,eax
  42f161:	fwait
  42f162:	or     al,0xce
  42f164:	(bad)  
  42f165:	leave  
  42f166:	inc    esp
  42f167:	popa   
  42f168:	pop    ss
  42f169:	push   ebx
  42f16a:	ror    al,1
  42f16c:	shr    DWORD PTR [esi+0x53b6738b],1
  42f172:	iret   
  42f173:	pop    ebx
  42f174:	or     BYTE PTR [ecx],al
  42f176:	xchg   bl,bl
  42f178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f179:	sahf   
  42f17a:	xchg   BYTE PTR [edi-0x6841521f],al
  42f180:	rcl    DWORD PTR [edx],1
  42f182:	daa    
  42f183:	psraw  mm6,QWORD PTR [eax-0x63806e81]
  42f18a:	cmp    DWORD PTR [esi-0x6a],0x9b85ca8e
  42f191:	add    esp,DWORD PTR [ebp-0x75]
  42f194:	loop   0x42f13f
  42f196:	or     al,0x8f
  42f198:	inc    edx
  42f199:	mov    esi,0xf659a652
  42f19e:	pusha  
  42f19f:	push   ds
  42f1a0:	dec    eax
  42f1a1:	mov    ebp,0xc00c014b
  42f1a6:	lea    ebx,[ecx-0x70]
  42f1a9:	fimul  WORD PTR [ecx-0x65]
  42f1ac:	neg    DWORD PTR [edx]
  42f1ae:	push   cs
  42f1af:	sbb    esi,DWORD PTR [edi]
  42f1b1:	push   0x945d1260
  42f1b6:	dec    esp
  42f1b7:	mov    ecx,0xca5deacb
  42f1bc:	push   ebp
  42f1bd:	cmp    ebp,ebp
  42f1bf:	pop    es
  42f1c0:	mov    ebx,0xc8b8f04e
  42f1c5:	aam    0xb6
  42f1c7:	loope  0x42f1b1
  42f1c9:	xchg   si,ax
  42f1cb:	(bad)  
  42f1cc:	jmp    0x242:0xc2fafd54
  42f1d3:	xchg   edx,eax
  42f1d4:	cmp    BYTE PTR [ebx-0x7],0x47
  42f1d8:	mov    edx,0xec0d11c
  42f1dd:	(bad)  
  42f1de:	ror    eax,1
  42f1e0:	leave  
  42f1e1:	mov    ecx,0xe8d854da
  42f1e6:	imul   edi,DWORD PTR [edx-0x139fe25e],0xb3ad0b4a
  42f1f0:	stc    
  42f1f1:	inc    ecx
  42f1f2:	mov    ah,0x71
  42f1f4:	inc    ecx
  42f1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1f6:	(bad)  
  42f1f8:	btr    DWORD PTR [eax],esp
  42f1fb:	(bad)  
  42f1fc:	retf   0xf00f
  42f1ff:	xor    edx,0x2d
  42f202:	inc    ebx
  42f203:	sub    ebp,DWORD PTR [eax]
  42f205:	lds    ebx,FWORD PTR [ebx]
  42f207:	push   es
  42f208:	add    al,0xae
  42f20a:	xor    bh,BYTE PTR [eax+0x53]
  42f20d:	xchg   bh,ch
  42f20f:	dec    ecx
  42f210:	fwait
  42f211:	add    BYTE PTR [esi+0x77e674c3],bl
  42f217:	jo     0x42f24f
  42f219:	mov    bh,0xee
  42f21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f21c:	mov    eax,0x548b8a6
  42f221:	or     DWORD PTR [esi+0x2ff56690],ebp
  42f227:	(bad)
  42f22b:	inc    esi
  42f22c:	gs lahf 
  42f22e:	dec    esp
  42f22f:	imul   ebp,DWORD PTR [eax],0x79
  42f232:	mov    ch,0xe9
  42f234:	add    ebp,eax
  42f236:	js     0x42f1df
  42f238:	adc    al,0x17
  42f23a:	mov    ds:0x7943b2d5,al
  42f23f:	pop    edx
  42f240:	add    eax,0xa48d1963
  42f245:	aam    0x53
  42f247:	and    al,0x1f
  42f249:	das    
  42f24a:	fwait
  42f24b:	jg     0x42f1ff
  42f24d:	ficomp WORD PTR [edx]
  42f24f:	cs inc edx
  42f251:	add    ebp,edx
  42f253:	xor    ch,BYTE PTR [edx+0x68aad1a6]
  42f259:	in     al,dx
  42f25a:	mov    eax,ds:0xc371a32b
  42f25f:	inc    ecx
  42f260:	xor    cl,bl
  42f262:	mov    esi,0xfc575cfc
  42f267:	sub    ebx,DWORD PTR [eax]
  42f269:	cmp    DWORD PTR [ebp+0x42d50999],ecx
  42f26f:	jecxz  0x42f22e
  42f271:	nop
  42f272:	dec    edi
  42f273:	pusha  
  42f274:	mov    edi,0x54058718
  42f279:	popa   
  42f27a:	jmp    0x42f288
  42f27c:	cld    
  42f27d:	adc    ch,BYTE PTR [esi-0x71ab2c6a]
  42f283:	xor    ebp,DWORD PTR [ebp+0x33]
  42f286:	push   0xffffffb9
  42f288:	in     eax,dx
  42f289:	scas   eax,DWORD PTR es:[edi]
  42f28a:	push   ebp
  42f28b:	loop   0x42f2a5
  42f28d:	pop    di
  42f28f:	push   esi
  42f290:	sub    eax,0x555d3a38
  42f295:	pop    ds
  42f296:	jmp    0x42f23e
  42f298:	sbb    edi,ebp
  42f29a:	repnz adc al,0xac
  42f29d:	mov    esp,0x4105ceae
  42f2a2:	mov    esi,0xeecc132c
  42f2a7:	(bad)  
  42f2a8:	push   ss
  42f2a9:	push   esp
  42f2aa:	outs   dx,BYTE PTR ds:[esi]
  42f2ab:	mov    fs,edi
  42f2ad:	push   esi
  42f2ae:	jmp    0x6b675d82
  42f2b3:	jl     0x42f2aa
  42f2b5:	mov    WORD PTR [esi-0x59100ae9],?
  42f2bb:	mov    ecx,0xb8186556
  42f2c0:	adc    edx,DWORD PTR [esi-0x5558ff4d]
  42f2c6:	sub    eax,0x44c6e55e
  42f2cb:	xor    al,0x6b
  42f2cd:	add    DWORD PTR [ebp*8-0x3fd7f4],ecx
  42f2d4:	push   ecx
  42f2d5:	sub    eax,DWORD PTR [ebp+0x1a]
  42f2d8:	out    0x76,al
  42f2da:	pop    esi
  42f2db:	xchg   ebx,eax
  42f2dc:	push   si
  42f2de:	inc    edx
  42f2df:	mov    eax,edi
  42f2e1:	mov    ebp,0xafb4f8b1
  42f2e6:	or     eax,DWORD PTR [ebx+ecx*2-0x70]
  42f2ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2eb:	cwde   
  42f2ec:	cwde   
  42f2ed:	in     al,0x2c
  42f2ef:	les    esi,FWORD PTR [ecx+0x6f220c01]
  42f2f5:	mov    ch,0x4b
  42f2f7:	sub    al,ah
  42f2f9:	adc    eax,0x1483290c
  42f2fe:	(bad)  
  42f300:	and    ch,BYTE PTR [ecx]
  42f302:	fcmovnbe st,st(6)
  42f304:	sar    DWORD PTR [edi+0x6d],0xdc
  42f308:	xchg   ebx,eax
  42f309:	leave  
  42f30a:	in     eax,dx
  42f30b:	mov    ch,0x67
  42f30d:	jb     0x42f327
  42f30f:	inc    eax
  42f310:	fistp  DWORD PTR [edi]
  42f312:	es cmp ebp,esi
  42f315:	adc    al,0x74
  42f317:	outs   dx,BYTE PTR ds:[esi]
  42f318:	aaa    
  42f319:	adc    eax,0xb85c0d39
  42f31e:	jno    0x42f334
  42f320:	push   ebp
  42f321:	shr    DWORD PTR [eax+edx*2-0x1a],1
  42f325:	fmulp  st(0),st
  42f327:	sub    al,BYTE PTR [ebp-0x38e2053e]
  42f32d:	jge    0x42f2d9
  42f32f:	test   al,0x28
  42f331:	push   es
  42f332:	test   BYTE PTR [ebp+0x213b959a],dh
  42f338:	inc    esp
  42f339:	aas    
  42f33a:	sbb    dh,BYTE PTR [ebx+ebx*1-0x31]
  42f33e:	xchg   DWORD PTR [edi],esi
  42f340:	mov    eax,ds:0xaf7a4edd
  42f345:	fwait
  42f346:	test   eax,0x9f49bdb5
  42f34b:	out    dx,al
  42f34c:	mov    ah,0x35
  42f34e:	sbb    ecx,DWORD PTR [ebp+0x36]
  42f351:	mov    esi,edi
  42f353:	in     eax,0xb9
  42f355:	cmp    al,0xb7
  42f357:	pop    esi
  42f358:	(bad)  
  42f359:	in     al,0xa0
  42f35b:	gs pop edi
  42f35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f35e:	ret    
  42f35f:	or     BYTE PTR [ecx],ch
  42f361:	push   es
  42f362:	mov    esi,0x54832144
  42f367:	sahf   
  42f368:	fnstcw WORD PTR [ebx+0x7a]
  42f36b:	jecxz  0x42f30f
  42f36d:	sub    DWORD PTR [edx+eiz*1],0xffffff88
  42f371:	retf   0xfe36
  42f374:	(bad)  
  42f375:	mov    esp,0xcd12809f
  42f37a:	xchg   ebx,eax
  42f37b:	push   edi
  42f37c:	xor    DWORD PTR [ebx],esi
  42f37e:	cmp    eax,0x63253252
  42f383:	and    eax,0x74d7a536
  42f388:	ins    DWORD PTR es:[edi],dx
  42f389:	adc    eax,0x389eb072
  42f38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f38f:	loop   0x42f37f
  42f391:	mov    ds:0x8d4106d1,al
  42f396:	dec    ebx
  42f397:	call   0x731fcd45
  42f39c:	test   DWORD PTR [ebp+0x7a6f3abc],edi
  42f3a2:	stos   DWORD PTR es:[edi],eax
  42f3a3:	les    ebp,FWORD PTR [ebx]
  42f3a5:	mov    eax,ds:0xb2eaa556
  42f3aa:	add    eax,0x3a623f4
  42f3af:	cwde   
  42f3b0:	popa   
  42f3b1:	mov    DWORD PTR [edx-0x6ee413a2],edx
  42f3b7:	inc    ecx
  42f3b8:	jge    0x42f3b9
  42f3ba:	les    edx,FWORD PTR [ebx-0x4a]
  42f3bd:	adc    BYTE PTR [eax+0x7de0acfb],0x9a
  42f3c4:	std    
  42f3c5:	jg     0x42f3ff
  42f3c7:	and    edi,ebx
  42f3c9:	sti    
  42f3ca:	popw   es
  42f3cc:	ret    0xf34f
  42f3cf:	adc    DWORD PTR [eax+esi*4],eax
  42f3d2:	lods   al,BYTE PTR ds:[esi]
  42f3d3:	push   ss
  42f3d4:	ja     0x42f384
  42f3d6:	jno    0x42f3ef
  42f3d8:	inc    edx
  42f3d9:	(bad)  
  42f3da:	cmc    
  42f3db:	ja     0x42f3d0
  42f3dd:	dec    BYTE PTR [ebx]
  42f3df:	daa    
  42f3e0:	push   0x4c
  42f3e2:	add    al,0x2
  42f3e4:	sub    edi,DWORD PTR [esi-0x47]
  42f3e7:	outs   dx,DWORD PTR ds:[esi]
  42f3e8:	mov    WORD PTR [esp+ecx*8-0x14919baa],gs
  42f3ef:	dec    eax
  42f3f0:	jnp    0x42f443
  42f3f2:	fmul   DWORD PTR [ebx+0x4b9654f2]
  42f3f8:	or     eax,0xfc8ce34c
  42f3fd:	xor    DWORD PTR [edx-0x68e981e8],ebp
  42f403:	retf   
  42f404:	push   edi
  42f405:	and    eax,0xa60529ca
  42f40a:	cli    
  42f40b:	mov    ds:0xc5da453f,al
  42f410:	xor    ecx,0x62
  42f413:	leave  
  42f414:	sbb    bh,0x2c
  42f417:	aad    0xe8
  42f419:	jo     0x42f3b3
  42f41b:	push   eax
  42f41c:	pop    ss
  42f41d:	xor    esi,DWORD PTR [ebx+0x76]
  42f420:	pop    esp
  42f421:	shr    DWORD PTR [esi+0x1a1f877a],1
  42f427:	fisttp QWORD PTR [eax+edx*1]
  42f42a:	dec    esi
  42f42b:	int3   
  42f42c:	inc    edx
  42f42d:	test   al,0x16
  42f42f:	mov    edi,0xe9e162df
  42f434:	or     ecx,DWORD PTR [ebx+0x5667927e]
  42f43a:	mov    eax,0xdc02d11b
  42f43f:	or     DWORD PTR [esi],0x1fad70e0
  42f445:	ins    BYTE PTR es:[edi],dx
  42f446:	push   ecx
  42f447:	mov    ebx,esp
  42f449:	sbb    al,0x6d
  42f44b:	mov    dl,0xeb
  42f44d:	fwait
  42f44e:	xchg   ecx,eax
  42f44f:	je     0x42f451
  42f451:	mov    ebx,0xdd4e6b67
  42f456:	add    DWORD PTR [ebx-0x3b],0x6a
  42f45a:	outs   dx,DWORD PTR ds:[esi]
  42f45b:	inc    esp
  42f45c:	leave  
  42f45d:	jmp    0xfd677d6d
  42f462:	jecxz  0x42f431
  42f464:	leave  
  42f465:	mov    DWORD PTR [edx+0x27e6d851],edx
  42f46b:	push   esi
  42f46c:	iret   
  42f46d:	loopne 0x42f44c
  42f46f:	sub    DWORD PTR [eax-0x7461fc53],0x37
  42f476:	cli    
  42f477:	ins    BYTE PTR es:[edi],dx
  42f478:	mov    ds:0xcb16975d,eax
  42f47d:	ror    DWORD PTR [ebx+edi*4-0x20],cl
  42f481:	vorpd  xmm4,xmm6,xmm0
  42f485:	sub    al,BYTE PTR [edx]
  42f487:	pushf  
  42f488:	pop    esi
  42f489:	inc    esi
  42f48a:	cmp    ch,cl
  42f48c:	test   BYTE PTR [ecx+0x1ddfac82],0x8c
  42f493:	sub    esp,DWORD PTR [eax]
  42f495:	pop    esp
  42f496:	adc    BYTE PTR [ecx-0x6eda90a1],ch
  42f49c:	data16 jo 0x42f483
  42f49f:	xchg   esi,eax
  42f4a0:	inc    edx
  42f4a1:	mov    bl,0xee
  42f4a3:	or     eax,0x74506bf3
  42f4a8:	jg     0x42f438
  42f4aa:	sbb    DWORD PTR cs:[ebp-0x75],esp
  42f4ae:	in     al,0xf7
  42f4b0:	into   
  42f4b1:	(bad)  [edi-0x60417e87]
  42f4b7:	jb     0x42f4c9
  42f4b9:	jo     0x42f4bf
  42f4bb:	add    BYTE PTR [edx+edx*2],al
  42f4be:	cld    
  42f4bf:	or     ecx,edi
  42f4c1:	and    ecx,DWORD PTR [ebx-0x6c]
  42f4c4:	test   DWORD PTR [ebx],edi
  42f4c6:	aam    0x31
  42f4c8:	bound  edi,QWORD PTR [ecx-0x6605c739]
  42f4ce:	inc    esp
  42f4cf:	xor    ecx,DWORD PTR [esi+0x8]
  42f4d2:	(bad)  
  42f4d4:	(bad)  
  42f4d5:	xor    edx,DWORD PTR [edx+0x76814c69]
  42f4db:	outs   dx,DWORD PTR ds:[esi]
  42f4dc:	mov    bl,0x15
  42f4de:	xor    esp,DWORD PTR [edi+0x4a]
  42f4e1:	add    DWORD PTR [edx],edx
  42f4e3:	push   ebx
  42f4e4:	pop    ebx
  42f4e5:	hlt    
  42f4e6:	xchg   edi,eax
  42f4e7:	mov    eax,ds:0x32946946
  42f4ec:	xor    al,0x9d
  42f4ee:	jl     0x42f490
  42f4f0:	or     ebp,DWORD PTR [edx+0x1dd4fb30]
  42f4f6:	out    0xbc,al
  42f4f8:	inc    ebx
  42f4f9:	pop    esp
  42f4fa:	mov    cl,0x56
  42f4fc:	jo     0x42f498
  42f4fe:	(bad)  
  42f500:	(bad)  
  42f501:	in     al,dx
  42f502:	cdq    
  42f503:	add    bl,BYTE PTR [edi-0x12e56d30]
  42f509:	div    DWORD PTR [esi-0x1029ae9]
  42f50f:	leave  
  42f510:	imul   ecx,DWORD PTR [edx-0x1c1c9639],0x7ab96ef5
  42f51a:	mov    eax,ds:0x2dea80e7
  42f51f:	push   esi
  42f520:	and    DWORD PTR [ecx],ebp
  42f522:	xor    bh,dl
  42f524:	test   ecx,ebp
  42f526:	mov    ecx,DWORD PTR [edx+0x3c]
  42f529:	inc    bx
  42f52b:	(bad)  
  42f52c:	stos   BYTE PTR es:[edi],al
  42f52d:	mov    eax,ds:0xe4f8d960
  42f532:	ds test al,0xaf
  42f535:	shr    BYTE PTR [ebp-0x6945ff2],cl
  42f53b:	xchg   edi,eax
  42f53c:	aad    0x82
  42f53e:	and    esp,DWORD PTR [esi-0x49cbc97]
  42f544:	and    eax,0xbed7693
  42f549:	rcr    BYTE PTR [edi+0x256a0e6],cl
  42f54f:	inc    ebx
  42f550:	dec    edi
  42f551:	in     al,dx
  42f552:	aad    0xe9
  42f554:	cmp    al,0x2d
  42f556:	clc    
  42f557:	xchg   ebp,eax
  42f558:	mov    ebx,0xb7d19f07
  42f55d:	pop    eax
  42f55e:	jmp    0x2d75:0xda7b6ea9
  42f565:	dec    edi
  42f566:	sub    dh,BYTE PTR [ebp-0x9]
  42f569:	and    eax,0xd188eb6d
  42f56e:	and    DWORD PTR [ebp+0x54],ecx
  42f571:	xchg   edi,eax
  42f572:	mov    esp,0x8b95d39e
  42f577:	aad    0x96
  42f579:	addr16 cmp eax,0x8c319791
  42f57f:	popa   
  42f580:	popa   
  42f581:	jg     0x42f579
  42f583:	mov    BYTE PTR ds:0xa9be4e0e,bh
  42f589:	ror    DWORD PTR [ecx],cl
  42f58b:	call   0xcfad:0x633440c4
  42f592:	(bad)
  42f596:	mov    edx,DWORD PTR [edi+edx*1-0x491913af]
  42f59d:	rcr    BYTE PTR [ebx],cl
  42f59f:	hlt    
  42f5a0:	test   BYTE PTR [edx+eiz*4-0x63bcb2c8],ch
  42f5a7:	mov    BYTE PTR [edi],bl
  42f5a9:	fnstsw WORD PTR [edi+ebp*1]
  42f5ac:	mov    al,0x6b
  42f5ae:	inc    ebp
  42f5af:	(bad)  
  42f5b0:	fisub  DWORD PTR [ecx+0x166fed4b]
  42f5b6:	push   esi
  42f5b7:	rcl    BYTE PTR [ebp+0x323f4fa0],cl
  42f5bd:	scas   al,BYTE PTR es:[edi]
  42f5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5bf:	leave  
  42f5c0:	jnp    0x42f5d9
  42f5c2:	add    al,0x6
  42f5c4:	push   edi
  42f5c5:	add    esi,esp
  42f5c7:	lock scas al,BYTE PTR es:[edi]
  42f5c9:	lods   eax,DWORD PTR ds:[esi]
  42f5ca:	push   es
  42f5cb:	fwait
  42f5cc:	fwait
  42f5cd:	shl    DWORD PTR [ecx],1
  42f5cf:	int    0x1a
  42f5d1:	jns    0x42f621
  42f5d3:	cdq    
  42f5d4:	and    DWORD PTR [edx],ecx
  42f5d6:	icebp  
  42f5d7:	and    al,bh
  42f5d9:	add    esp,edx
  42f5db:	test   DWORD PTR [edi-0x1b660c0b],esi
  42f5e1:	fld    QWORD PTR [ecx]
  42f5e3:	stos   DWORD PTR es:[edi],eax
  42f5e4:	fisttp QWORD PTR [edx-0xf15f7fa]
  42f5ea:	sbb    al,0xd
  42f5ec:	push   ss
  42f5ed:	mov    ds:0xda0c232b,al
  42f5f2:	dec    edx
  42f5f3:	sub    eax,0x58a36798
  42f5f8:	pop    edx
  42f5f9:	inc    esp
  42f5fa:	sbb    al,0x4a
  42f5fc:	adc    BYTE PTR [edi-0x6b92be39],0x26
  42f603:	sbb    ecx,DWORD PTR [ebx-0x7964a24]
  42f609:	ret    0x3624
  42f60c:	mov    ah,0xdc
  42f60e:	test   BYTE PTR [ebp+0x2c],ah
  42f611:	lahf   
  42f612:	popf   
  42f613:	sbb    al,0x52
  42f615:	jecxz  0x42f5c2
  42f617:	fcmovne st,st(4)
  42f619:	mov    bh,dh
  42f61b:	test   al,0x3a
  42f61d:	(bad)  
  42f61e:	cmp    BYTE PTR [ecx-0x750e2de2],bh
  42f624:	repnz outs dx,DWORD PTR ds:[esi]
  42f626:	xor    esi,ebx
  42f628:	(bad)  
  42f629:	adc    BYTE PTR [ebp+0x4c],al
  42f62c:	xor    al,0xba
  42f62e:	inc    esi
  42f62f:	dec    esp
  42f630:	retf   0x3365
  42f633:	pop    ebx
  42f634:	iret   
  42f635:	lods   al,BYTE PTR ds:[esi]
  42f636:	xchg   ebp,eax
  42f637:	xchg   esi,eax
  42f638:	arpl   WORD PTR [ecx],cx
  42f63a:	pop    ds
  42f63b:	mov    al,ds:0xf037a3f0
  42f640:	test   al,0x70
  42f642:	xor    al,0x8c
  42f644:	ret    0x38a
  42f647:	lods   eax,DWORD PTR ds:[esi]
  42f648:	adc    ch,BYTE PTR [ebp-0x21]
  42f64b:	fld    QWORD PTR [esi-0x7ee0a9f2]
  42f651:	aam    0x6d
  42f653:	jmp    0x42f6c7
  42f655:	inc    esp
  42f656:	in     al,dx
  42f657:	cs out dx,al
  42f659:	and    BYTE PTR ds:0x33a75594,0x3c
  42f660:	test   eax,0xc8bb5c8e
  42f665:	jecxz  0x42f676
  42f667:	and    eax,0x537c3284
  42f66c:	jl     0x42f5ee
  42f66e:	pop    ss
  42f66f:	adc    BYTE PTR [ecx+0x7d],ah
  42f672:	bound  esp,QWORD PTR [ebx]
  42f674:	je     0x42f6bd
  42f676:	cmpxchg DWORD PTR [edi-0x3f],eax
  42f67a:	call   0xad9df607
  42f67f:	push   ecx
  42f680:	scas   eax,DWORD PTR es:[edi]
  42f681:	mov    bh,0x64
  42f683:	stos   DWORD PTR es:[edi],eax
  42f684:	imul   edx,ebx,0x74
  42f687:	dec    ecx
  42f688:	cmp    DWORD PTR [ebx-0x7043bdc6],ecx
  42f68e:	fidiv  DWORD PTR [eax+0x75269555]
  42f694:	imul   esp,DWORD PTR [esi-0x6414b737],0x9403f4a5
  42f69e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f69f:	cmp    DWORD PTR [edx-0x5beb49a9],0xffffff9e
  42f6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6a7:	std    
  42f6a8:	(bad)  
  42f6a9:	mov    ebx,0xe61cac84
  42f6ae:	rcr    DWORD PTR [ebx+0x5bcab29f],0xd4
  42f6b5:	adc    esp,DWORD PTR [ebx+edx*4]
  42f6b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6b9:	push   ss
  42f6ba:	bound  edi,QWORD PTR [ebx-0x69]
  42f6bd:	dec    edx
  42f6be:	fsub   QWORD PTR [edi]
  42f6c0:	and    BYTE PTR [edi],0xa1
  42f6c3:	sub    BYTE PTR [edx],dl
  42f6c5:	fcom   QWORD PTR [eax+edi*8+0x455baf35]
  42f6cc:	sbb    cl,bl
  42f6ce:	cmp    eax,0x539ebd15
  42f6d3:	(bad)  
  42f6d4:	ret    
  42f6d5:	mov    al,ds:0x360adde5
  42f6da:	push   eax
  42f6db:	push   0xffffffe7
  42f6dd:	data16 add dh,BYTE PTR [ecx]
  42f6e0:	jmp    0x97353a5c
  42f6e5:	lock mov bl,BYTE PTR [ebp-0x7cc3da6e]
  42f6ec:	pop    edx
  42f6ed:	sub    ebx,esp
  42f6ef:	clc    
  42f6f0:	or     eax,0x2cac7adc
  42f6f5:	xor    BYTE PTR [esi+0x53],dl
  42f6f8:	mov    dh,0xea
  42f6fa:	inc    ecx
  42f6fb:	add    edi,eax
  42f6fd:	cmp    DWORD PTR [esi+edx*4],esi
  42f700:	pop    esp
  42f701:	mov    ebx,0xd00a76cd
  42f706:	xlat   BYTE PTR ds:[ebx]
  42f707:	add    edi,eax
  42f709:	mov    edi,0x550a5723
  42f70e:	inc    esi
  42f70f:	jne    0x42f6da
  42f711:	in     eax,0xaf
  42f713:	sub    eax,0xd4d26792
  42f718:	and    BYTE PTR [edi-0x8],bl
  42f71b:	shl    BYTE PTR [esi-0x26dcbdc9],cl
  42f721:	inc    edx
  42f722:	inc    eax
  42f723:	sub    eax,0xf4c85841
  42f728:	xor    bh,BYTE PTR [edi-0x74]
  42f72b:	bound  edi,QWORD PTR ds:0x4f20cce6
  42f731:	or     esi,DWORD PTR [ebp+0x687010ed]
  42f737:	or     BYTE PTR [esi-0x97911c],bl
  42f73d:	push   ecx
  42f73e:	or     al,0x5c
  42f740:	xchg   esi,eax
  42f741:	mov    edi,0x155638a9
  42f746:	lds    eax,FWORD PTR [eax]
  42f748:	pusha  
  42f749:	add    al,0xa7
  42f74b:	loop   0x42f796
  42f74d:	push   ecx
  42f74e:	xchg   eax,esi
  42f750:	imul   esp,ebx,0xfffffffd
  42f753:	xchg   esi,eax
  42f754:	xor    BYTE PTR [edx],0x85
  42f757:	pop    ss
  42f758:	das    
  42f759:	sahf   
  42f75a:	mov    bh,0xad
  42f75c:	ret    0xb94c
  42f75f:	cld    
  42f760:	in     al,0x31
  42f762:	mov    edi,0x8d821d0a
  42f767:	sbb    al,0xba
  42f769:	jmp    DWORD PTR [edx+edi*4-0x49e8f52]
  42f770:	adc    al,0x60
  42f772:	rcr    BYTE PTR [ebp+0x4691ce25],cl
  42f778:	mov    BYTE PTR [ecx+0x66],bl
  42f77b:	add    DWORD PTR [ecx],ebx
  42f77d:	jae    0x42f735
  42f77f:	add    eax,0x10ae0e7c
  42f784:	scas   al,BYTE PTR es:[edi]
  42f785:	jecxz  0x42f73e
  42f787:	inc    ecx
  42f788:	mov    ch,0xdb
  42f78a:	cmp    dh,dh
  42f78c:	mov    bh,0xec
  42f78e:	hlt    
  42f78f:	or     eax,0x755482ec
  42f794:	dec    esp
  42f795:	shl    BYTE PTR [eax],1
  42f797:	lods   eax,DWORD PTR ds:[esi]
  42f798:	mov    al,ds:0xad94571d
  42f79d:	sub    al,0xf7
  42f79f:	test   DWORD PTR [ebx-0x4870a661],0xa7ee1d3b
  42f7a9:	sub    ecx,esp
  42f7ab:	arpl   sp,sp
  42f7ad:	pop    edi
  42f7ae:	adc    ch,BYTE PTR [eax-0x2f84476c]
  42f7b4:	mov    eax,ds:0x84cd7a46
  42f7b9:	adc    eax,0x3f4e254c
  42f7be:	loopne 0x42f7e7
  42f7c0:	or     al,0xea
  42f7c2:	minps  xmm7,XMMWORD PTR [ebp+0x3c]
  42f7c6:	in     eax,dx
  42f7c7:	retf   
  42f7c8:	push   ss
  42f7c9:	lds    ecx,FWORD PTR [edi+ebx*4]
  42f7cc:	int3   
  42f7cd:	cmp    BYTE PTR [eax],bl
  42f7cf:	or     al,0xcd
  42f7d1:	aaa    
  42f7d2:	inc    edi
  42f7d3:	mov    edx,0x3e67acb
  42f7d8:	sbb    al,0x34
  42f7da:	sub    al,0xc4
  42f7dc:	ss ret 
  42f7de:	cs dec esi
  42f7e0:	cdq    
  42f7e1:	in     eax,dx
  42f7e2:	adc    al,0xd5
  42f7e4:	sub    eax,edx
  42f7e6:	pop    ds
  42f7e7:	xchg   edx,eax
  42f7e8:	scas   eax,DWORD PTR es:[edi]
  42f7e9:	ret    
  42f7ea:	imul   esp,edi,0x2
  42f7ed:	xor    eax,0x45739d1b
  42f7f2:	mov    ah,0x48
  42f7f4:	xchg   ecx,eax
  42f7f5:	retf   0xb62f
  42f7f8:	stc    
  42f7f9:	cli    
  42f7fa:	sahf   
  42f7fb:	dec    edx
  42f7fc:	xlat   BYTE PTR ds:[ebx]
  42f7fd:	xchg   esp,eax
  42f7fe:	jmp    0xac8ed2b9
  42f803:	sbb    BYTE PTR [eax-0x1e],bl
  42f806:	xor    bl,BYTE PTR [edi+0x44bb6308]
  42f80c:	or     al,0x2b
  42f80e:	add    dl,BYTE PTR [ecx]
  42f810:	mov    dl,0xaf
  42f812:	fisubr DWORD PTR ds:[ecx+0x3c]
  42f816:	add    dl,0xb5
  42f819:	and    ecx,DWORD PTR [esi+0x53]
  42f81c:	mov    ?,WORD PTR [esi+ecx*8]
  42f81f:	sub    ebx,eax
  42f821:	js     0x42f845
  42f823:	sub    BYTE PTR [esi],dh
  42f825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f826:	or     edx,ecx
  42f828:	rcl    BYTE PTR [eax],0x8e
  42f82b:	out    dx,eax
  42f82c:	test   eax,0xa557219d
  42f831:	(bad)  
  42f832:	shl    BYTE PTR [edx+0x51],0x94
  42f836:	cmp    dl,BYTE PTR [esi]
  42f838:	lods   eax,DWORD PTR ds:[esi]
  42f839:	push   esi
  42f83a:	inc    esi
  42f83b:	in     eax,dx
  42f83c:	mov    eax,ds:0x6fafe41d
  42f841:	adc    eax,0x1021c03e
  42f846:	mov    ebx,0x57a2c027
  42f84b:	adc    eax,0xae8bc3d7
  42f850:	test   eax,0xb5ce7507
  42f855:	fbld   TBYTE PTR [esi-0x64e7782f]
  42f85b:	and    BYTE PTR [eax-0x7a256f3a],dl
  42f861:	adc    ebp,DWORD PTR [edx+0x67023842]
  42f867:	je     0x42f878
  42f869:	or     cl,BYTE PTR [ecx]
  42f86b:	fistp  DWORD PTR [ecx]
  42f86d:	mov    es,WORD PTR [esi-0x38ee6e1d]
  42f873:	imul   ebx,esi,0x540ca30a
  42f879:	bnd jmp 0x42f802
  42f87c:	mov    ch,BYTE PTR [edi+0x7f22d1b2]
  42f882:	jbe    0x42f8c9
  42f884:	xor    DWORD PTR [ecx-0x2e0249f6],esp
  42f88a:	nop
  42f88b:	scas   al,BYTE PTR es:[edi]
  42f88c:	mov    eax,ds:0x2dfa4e8b
  42f891:	mov    al,0x13
  42f893:	lds    eax,FWORD PTR [esi-0xc]
  42f896:	push   ebp
  42f897:	clc    
  42f898:	dec    eax
  42f899:	aas    
  42f89a:	pop    edi
  42f89b:	pop    esp
  42f89c:	test   BYTE PTR [eax],al
  42f89e:	xor    BYTE PTR [edx+0x66],dh
  42f8a1:	pop    ecx
  42f8a2:	loopne 0x42f831
  42f8a4:	jne    0x42f8c1
  42f8a6:	jle    0x42f856
  42f8a8:	stos   DWORD PTR es:[edi],eax
  42f8a9:	enter  0xdaff,0xc8
  42f8ad:	inc    esp
  42f8ae:	pop    ecx
  42f8af:	xor    al,0x39
  42f8b1:	std    
  42f8b2:	mov    BYTE PTR [ebp+0x25314399],ch
  42f8b8:	or     BYTE PTR [ebx-0x78],al
  42f8bb:	ins    BYTE PTR es:[edi],dx
  42f8bc:	test   al,0x2e
  42f8be:	ss ret 
  42f8c0:	(bad)  
  42f8c1:	imul   ebp,DWORD PTR [esi+0x37f6ee88],0x7b
  42f8c8:	fadd   st(4),st
  42f8ca:	inc    edx
  42f8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8cc:	or     al,BYTE PTR [eax]
  42f8ce:	lahf   
  42f8cf:	mov    edi,0x112e5469
  42f8d4:	inc    ebx
  42f8d5:	sub    al,0x6c
  42f8d7:	lds    ebp,FWORD PTR [ebp-0x27]
  42f8da:	mov    ah,0xd2
  42f8dc:	out    dx,al
  42f8dd:	push   ds
  42f8de:	test   DWORD PTR [edx],esi
  42f8e0:	xor    al,0x99
  42f8e2:	mov    ds:0x9772eec0,eax
  42f8e7:	fwait
  42f8e8:	adc    ch,bl
  42f8ea:	mov    ds:0xb9c38bbe,eax
  42f8ef:	(bad)  
  42f8f0:	mov    al,BYTE PTR [edi-0x6106472]
  42f8f6:	dec    ebp
  42f8f7:	inc    esi
  42f8f8:	arpl   WORD PTR [ebx+0x1b185a31],dx
  42f8fe:	xor    DWORD PTR [esi-0xf],edx
  42f901:	dec    ebp
  42f902:	xchg   esi,eax
  42f903:	mov    ecx,DWORD PTR [esi]
  42f905:	(bad)  
  42f906:	mov    dl,0x9c
  42f908:	or     esp,DWORD PTR ds:0x5e0d5304
  42f90e:	and    ebx,DWORD PTR [esi+0x4b1ac645]
  42f914:	add    DWORD PTR [ebp+0x469f1c48],ebx
  42f91a:	or     al,0xb7
  42f91c:	imul   ecx,DWORD PTR [ebp+0x64],0xce27b3b2
  42f923:	and    BYTE PTR ds:0x987e21d2,bh
  42f929:	iret   
  42f92a:	es cmp BYTE PTR fs:[edi+ecx*4-0x54],0x44
  42f931:	xor    DWORD PTR [edi-0x6c],0x4f42b8ed
  42f938:	aaa    
  42f939:	push   0xc272e789
  42f93e:	fdiv   st,st(5)
  42f940:	and    eax,0x5474275f
  42f945:	(bad)  
  42f946:	out    dx,eax
  42f947:	in     al,dx
  42f948:	xchg   ebx,eax
  42f949:	(bad)  
  42f94a:	popf   
  42f94b:	pmuludq mm7,QWORD PTR [esi]
  42f94e:	xchg   ecx,eax
  42f94f:	xchg   esi,eax
  42f950:	xor    al,BYTE PTR [ebp-0x329d8a56]
  42f956:	rol    DWORD PTR [esi],0x47
  42f959:	out    0x7d,eax
  42f95b:	xlat   BYTE PTR ds:[ebx]
  42f95c:	pop    ecx
  42f95d:	fs adc al,0x55
  42f960:	or     eax,0x967879ea
  42f965:	stos   DWORD PTR es:[edi],eax
  42f966:	xor    al,0xfc
  42f968:	xchg   esp,eax
  42f969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f96a:	mov    ebx,0x62075610
  42f96f:	xor    al,0x7c
  42f971:	fdiv   st,st(5)
  42f973:	sbb    edx,DWORD PTR [ebx]
  42f975:	pop    es
  42f976:	loope  0x42f9d2
  42f978:	mov    ecx,0xcb1e5a5f
  42f97d:	jae    0x42f945
  42f97f:	es jne 0x42f97e
  42f982:	xor    al,0x99
  42f984:	loopne 0x42f948
  42f986:	push   esi
  42f987:	aam    0x0
  42f989:	(bad)  
  42f98a:	test   eax,0xbe51bc87
  42f98f:	and    BYTE PTR es:[edx+0x12741f62],ch
  42f996:	out    dx,al
  42f997:	repnz push ds
  42f999:	add    al,0xef
  42f99b:	(bad)  
  42f99c:	adc    BYTE PTR [ebp+edi*2+0x57],al
  42f9a0:	pop    ecx
  42f9a1:	outs   dx,DWORD PTR ds:[esi]
  42f9a2:	jb     0x42f95e
  42f9a4:	cmp    edi,DWORD PTR [edi-0x78]
  42f9a7:	(bad)  
  42f9a8:	jmp    0x23b433ed
  42f9ad:	or     al,0xb0
  42f9af:	(bad)  
  42f9b0:	xor    DWORD PTR ds:0x2a74c02a,eax
  42f9b6:	xchg   ebx,eax
  42f9b7:	xchg   ebp,eax
  42f9b8:	loop   0x42f98b
  42f9ba:	xor    al,0x46
  42f9bc:	sub    eax,0x32c2aa83
  42f9c1:	(bad)  
  42f9c2:	and    DWORD PTR [esp+ebp*8],esi
  42f9c5:	push   esp
  42f9c6:	(bad)  
  42f9c7:	pop    edi
  42f9c8:	and    eax,0xbd030088
  42f9cd:	xor    DWORD PTR [edx+ebx*4+0x1f],ecx
  42f9d1:	mov    eax,0xa8c8ce1f
  42f9d6:	in     eax,0x71
  42f9d8:	push   edx
  42f9d9:	xor    al,0x40
  42f9db:	mov    ch,0x6a
  42f9dd:	ins    DWORD PTR es:[edi],dx
  42f9de:	jmp    0xe2594ce1
  42f9e3:	daa    
  42f9e4:	mov    esi,ebx
  42f9e6:	cli    
  42f9e7:	ja     0x42fa03
  42f9e9:	sar    BYTE PTR [edx+ebp*2-0x32],cl
  42f9ed:	mov    dl,ch
  42f9ef:	call   0x514d:0xd10143a1
  42f9f6:	daa    
  42f9f7:	lods   eax,DWORD PTR ds:[esi]
  42f9f8:	stos   DWORD PTR es:[edi],eax
  42f9f9:	fidiv  DWORD PTR [esi]
  42f9fb:	in     eax,dx
  42f9fc:	es enter 0x2404,0xdd
  42fa01:	pop    ecx
  42fa02:	ror    BYTE PTR [ebp+0x4d],0x7e
  42fa06:	xchg   DWORD PTR [eax+0x4c0a03a7],ebx
  42fa0c:	sub    DWORD PTR [edi+0x4e],ebx
  42fa0f:	mov    bh,0x68
  42fa11:	repnz xchg ebx,eax
  42fa13:	outs   dx,BYTE PTR ds:[esi]
  42fa14:	mov    esi,0xf8d492fb
  42fa19:	or     al,0x4e
  42fa1b:	and    DWORD PTR [eax-0x6fd11153],esp
  42fa21:	cdq    
  42fa22:	aam    0xaf
  42fa24:	jmp    0xe4d41cc3
  42fa29:	pop    edi
  42fa2a:	fisub  WORD PTR ds:0xa6e5afcd
  42fa30:	adc    DWORD PTR [edi],edx
  42fa32:	inc    esp
  42fa33:	mov    esi,0x3c46a6e5
  42fa38:	int3   
  42fa39:	mov    eax,0xc29c2919
  42fa3e:	js     0x42fa75
  42fa40:	loopne 0x42fa6f
  42fa42:	in     al,dx
  42fa43:	dec    edx
  42fa44:	jae    0x42faaa
  42fa46:	cmp    eax,0xb160222e
  42fa4b:	aas    
  42fa4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa4d:	ret    
  42fa4e:	adc    bh,BYTE PTR [ecx+0x2412ecb6]
  42fa54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa55:	sbb    ebp,DWORD PTR [edi+eiz*2+0x7901c8fe]
  42fa5c:	mov    WORD PTR [edi+eax*1],fs
  42fa5f:	mov    ah,0xf1
  42fa61:	lods   al,BYTE PTR ds:[esi]
  42fa62:	(bad)  
  42fa63:	aam    0x93
  42fa65:	neg    DWORD PTR [ebx]
  42fa67:	mov    ch,0x29
  42fa69:	ins    BYTE PTR es:[edi],dx
  42fa6a:	hlt    
  42fa6b:	push   cs
  42fa6c:	mov    BYTE PTR [ebp+0x62],dl
  42fa6f:	(bad)  
  42fa70:	loope  0x42fae4
  42fa72:	cli    
  42fa73:	pop    ebp
  42fa74:	or     bl,BYTE PTR [edx+ecx*1]
  42fa77:	popa   
  42fa78:	mov    eax,ds:0x3847f980
  42fa7d:	int    0xe1
  42fa7f:	dec    ecx
  42fa80:	in     al,dx
  42fa81:	cmp    eax,0x232393ec
  42fa86:	push   esp
  42fa87:	test   BYTE PTR [edi],al
  42fa89:	push   esp
  42fa8a:	loope  0x42fab6
  42fa8c:	jbe    0x42fa19
  42fa8e:	fyl2xp1 
  42fa90:	inc    ebx
  42fa91:	xor    BYTE PTR [ebp-0x64],dl
  42fa94:	inc    edx
  42fa95:	xchg   BYTE PTR [edx+0x253c01d7],dl
  42fa9b:	sub    ch,BYTE PTR [edi-0x5]
  42fa9e:	add    al,0x85
  42faa0:	jge    0x42fa2e
  42faa2:	adc    DWORD PTR [edx+0x70975f91],ebp
  42faa8:	and    al,0xd2
  42faaa:	int3   
  42faab:	imul   edi,ebp,0x6ed882bd
  42fab1:	pop    edi
  42fab2:	gs int 0x60
  42fab5:	cmp    al,0x4e
  42fab7:	or     esp,DWORD PTR [ebx+0x17]
  42faba:	push   esi
  42fabb:	lock push eax
  42fabd:	xor    edx,DWORD PTR ds:[edx+0x724a8762]
  42fac4:	and    al,0xd8
  42fac6:	packssdw mm4,mm7
  42fac9:	xor    DWORD PTR [edx],ebx
  42facb:	mov    bl,0x9a
  42facd:	scas   eax,DWORD PTR es:[edi]
  42face:	adc    BYTE PTR [edx-0x38539c52],dh
  42fad4:	shr    al,0x5
  42fad7:	fisub  DWORD PTR [eax]
  42fad9:	sbb    eax,0x28b29230
  42fade:	int    0x81
  42fae0:	add    eax,0x6e2ee1e1
  42fae5:	sub    BYTE PTR [esi+0x3e50189c],0xa7
  42faec:	jo     0x42fa86
  42faee:	mov    bl,0x3d
  42faf0:	mov    al,0xf3
  42faf2:	sbb    eax,0x7fb9b1e5
  42faf7:	mov    bh,0xa3
  42faf9:	or     cl,BYTE PTR [bx+0x16]
  42fafd:	cmp    ebp,DWORD PTR [esi+0x4f]
  42fb00:	jle    0x42fac4
  42fb02:	pop    ebx
  42fb03:	inc    ecx
  42fb04:	out    0x54,eax
  42fb06:	mov    ecx,0x45e88607
  42fb0b:	sub    eax,0xb394648e
  42fb10:	addr16 (bad) 
  42fb12:	dec    esi
  42fb13:	fs ins DWORD PTR es:[edi],dx
  42fb15:	aam    0xef
  42fb17:	popf   
  42fb18:	arpl   WORD PTR [ebx+0x9b7958b],cx
  42fb1e:	sub    edx,DWORD PTR [edx+0x354b30bf]
  42fb24:	clc    
  42fb25:	and    edx,DWORD PTR [ebp+0x69caf28f]
  42fb2b:	cmp    esi,esp
  42fb2d:	cmp    eax,0x90f1a87e
  42fb32:	adc    eax,0x856d4fd5
  42fb37:	or     eax,0x60f4dc67
  42fb3c:	imul   esi,DWORD PTR [edx-0x34],0xffffffaf
  42fb40:	add    bl,al
  42fb42:	push   ebp
  42fb43:	and    eax,0x4e92b6a3
  42fb48:	jge    0x42face
  42fb4a:	pushf  
  42fb4b:	dec    ebx
  42fb4c:	mov    ecx,0x4adc138f
  42fb51:	xor    DWORD PTR [ecx+0x60],edx
  42fb54:	xchg   ebx,eax
  42fb55:	paddd  mm2,QWORD PTR [esi]
  42fb58:	mov    ch,0xd2
  42fb5a:	fcom   DWORD PTR [esp+edi*4-0x781ebc3]
  42fb61:	arpl   WORD PTR ds:0x9d879c92,bp
  42fb67:	xchg   esi,eax
  42fb68:	adc    eax,0x85bef5ee
  42fb6d:	mov    ebp,0xe922ec76
  42fb72:	in     eax,0x17
  42fb74:	mov    cl,0x80
  42fb76:	cld    
  42fb77:	and    al,0xb8
  42fb79:	sub    DWORD PTR [ebp+0x4e],ebx
  42fb7c:	add    edx,DWORD PTR [edi]
  42fb7e:	int    0xee
  42fb80:	xor    al,0x9a
  42fb82:	mov    eax,0xc7ddf0b7
  42fb87:	mov    esi,ss
  42fb89:	or     BYTE PTR [esi],ah
  42fb8b:	jecxz  0x42fbff
  42fb8d:	push   ecx
  42fb8e:	shl    BYTE PTR [esi+0x2bf19188],0x36
  42fb95:	test   DWORD PTR [ebx-0x60fb74a9],esp
  42fb9b:	fcmovb st,st(0)
  42fb9d:	jns    0x42fbee
  42fb9f:	or     ebp,DWORD PTR ds:0x82a160cf
  42fba5:	jle    0x42fbf5
  42fba7:	pop    es
  42fba8:	cmp    ebx,DWORD PTR [ebx]
  42fbaa:	jno    0x42fc27
  42fbac:	and    DWORD PTR [ebx+eax*2],eax
  42fbaf:	and    esi,DWORD PTR [edx-0x67]
  42fbb2:	daa    
  42fbb3:	xchg   al,dl
  42fbb5:	es in  eax,0x3f
  42fbb8:	sub    BYTE PTR [ebp+ecx*4-0x2afeff90],ch
  42fbbf:	fild   QWORD PTR [ecx]
  42fbc1:	push   ss
  42fbc2:	iret   
  42fbc3:	sub    BYTE PTR [edx+0x5c],bh
  42fbc6:	jne    0x42fba8
  42fbc8:	and    DWORD PTR [ecx+ecx*4+0x51],0xffffffa1
  42fbcd:	ss inc edi
  42fbcf:	dec    eax
  42fbd0:	fs in  al,0xb8
  42fbd3:	or     al,0x4e
  42fbd5:	daa    
  42fbd6:	or     dh,BYTE PTR [ecx+0x7a2635]
  42fbdc:	add    bh,BYTE PTR [eax]
  42fbde:	(bad)  
  42fbdf:	pop    edi
  42fbe0:	or     al,0x9f
  42fbe2:	add    DWORD PTR [ebx-0x2e],ecx
  42fbe5:	cdq    
  42fbe6:	inc    ebp
  42fbe7:	xchg   DWORD PTR [edi+0x3ad8507a],ecx
  42fbed:	outs   dx,DWORD PTR ds:[esi]
  42fbee:	push   es
  42fbef:	leave  
  42fbf0:	dec    ecx
  42fbf1:	int3   
  42fbf2:	outs   dx,BYTE PTR ds:[esi]
  42fbf3:	mov    al,ds:0x9eb8e37c
  42fbf8:	shl    DWORD PTR [esi],cl
  42fbfa:	inc    esp
  42fbfb:	into   
  42fbfc:	push   ebx
  42fbfd:	add    edx,DWORD PTR [esi]
  42fbff:	pop    esi
  42fc00:	sub    dh,BYTE PTR [edx]
  42fc02:	push   ecx
  42fc03:	inc    eax
  42fc04:	les    eax,FWORD PTR [eax+0x60]
  42fc07:	and    al,0xa3
  42fc09:	push   ebx
  42fc0a:	push   eax
  42fc0b:	dec    esi
  42fc0c:	in     al,dx
  42fc0d:	ins    DWORD PTR es:[edi],dx
  42fc0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc0f:	xor    DWORD PTR ds:0xba9bb68,ecx
  42fc15:	sbb    DWORD PTR [ecx],0xffffffa9
  42fc18:	ret    0x7d7a
  42fc1b:	pop    ds
  42fc1c:	inc    ecx
  42fc1d:	mov    WORD PTR [edx-0x39],?
  42fc20:	ds mov dh,0x83
  42fc23:	jnp    0x42fc4d
  42fc25:	mov    edx,0x6b131274
  42fc2a:	rcl    DWORD PTR [eax+0x518b4c9b],1
  42fc30:	fadd   st(6),st
  42fc32:	ss add al,0x8d
  42fc35:	es inc eax
  42fc37:	pop    esp
  42fc38:	int3   
  42fc39:	(bad)  [eax]
  42fc3b:	(bad)  [eax-0x4c]
  42fc3e:	scas   eax,DWORD PTR es:[edi]
  42fc3f:	gs inc edi
  42fc41:	rol    ebp,cl
  42fc43:	in     al,dx
  42fc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc45:	mov    ah,0x98
  42fc47:	stos   DWORD PTR es:[edi],eax
  42fc48:	pop    ss
  42fc49:	xchg   ecx,eax
  42fc4a:	bound  ebx,QWORD PTR [ebx]
  42fc4c:	in     eax,0x79
  42fc4e:	fs in  eax,0x1d
  42fc51:	dec    ecx
  42fc52:	mov    ds:0x217e3bb,al
  42fc57:	or     ah,BYTE PTR [esp+ebx*4]
  42fc5a:	add    dl,cl
  42fc5c:	leave  
  42fc5d:	neg    DWORD PTR [ebp-0xbcdc9e2]
  42fc63:	mov    bl,0x22
  42fc65:	in     eax,dx
  42fc66:	repz pop es
  42fc68:	pop    edi
  42fc69:	sub    ah,BYTE PTR [esi-0x25]
  42fc6c:	dec    esi
  42fc6d:	repz cwde 
  42fc6f:	(bad)  
  42fc70:	pop    DWORD PTR [esi+0x2339f647]
  42fc76:	cmp    ebp,edi
  42fc78:	mov    ebp,0x688888da
  42fc7d:	ret    0xfdb4
  42fc80:	xchg   esi,ebx
  42fc82:	icebp  
  42fc83:	pop    edi
  42fc84:	jae    0x42fc68
  42fc86:	inc    ebp
  42fc87:	add    edi,esi
  42fc89:	icebp  
  42fc8a:	mov    ecx,0xccf0667c
  42fc8f:	outs   dx,BYTE PTR ds:[esi]
  42fc90:	pop    ebp
  42fc91:	test   al,0x3d
  42fc93:	mov    dl,0x91
  42fc95:	mov    esi,edx
  42fc97:	or     BYTE PTR [eax+0x188d17e8],ch
  42fc9d:	(bad)  
  42fc9f:	js     0x42fccc
  42fca1:	test   eax,0x5a42e57b
  42fca6:	pop    es
  42fca7:	(bad)  
  42fca8:	jg     0x42fc92
  42fcaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcab:	inc    edx
  42fcac:	jmp    0x8c9:0x37091a7
  42fcb3:	dec    esi
  42fcb4:	inc    eax
  42fcb5:	aaa    
  42fcb6:	pop    edx
  42fcb7:	or     eax,0xbce4d6d8
  42fcbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcbd:	push   ebx
  42fcbe:	je     0x42fcee
  42fcc0:	mov    ch,0x88
  42fcc2:	bound  ecx,QWORD PTR [edx-0x11514497]
  42fcc8:	sub    BYTE PTR [ecx],cl
  42fcca:	loopne 0x42fca8
  42fccc:	jnp    0x42fd28
  42fcce:	pop    ebx
  42fccf:	xchg   edi,eax
  42fcd0:	shr    BYTE PTR [eax+0x125a2050],0x65
  42fcd7:	cmp    DWORD PTR [ebx+0x79fed110],ebx
  42fcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcde:	xchg   esp,eax
  42fcdf:	add    BYTE PTR [edi+0x49],dl
  42fce2:	inc    edx
  42fce3:	push   0x8
  42fce5:	ss add al,0xf8
  42fce8:	sbb    BYTE PTR [edi+edx*2],0xb6
  42fcec:	ror    DWORD PTR ds:0xc2fec7aa,cl
  42fcf2:	ret    
  42fcf3:	rcr    BYTE PTR ds:0xcafc4a0f,0x53
  42fcfa:	and    BYTE PTR [ebx],bl
  42fcfc:	repnz aas 
  42fcfe:	add    al,0xf5
  42fd00:	add    DWORD PTR [ebx],esp
  42fd02:	adc    al,0xe0
  42fd04:	in     al,0xde
  42fd06:	test   BYTE PTR [ebp+0x13a1c690],ch
  42fd0c:	pop    ecx
  42fd0d:	je     0x42fd5f
  42fd0f:	loop   0x42fce2
  42fd11:	jo     0x42fd88
  42fd13:	(bad)  
  42fd14:	aas    
  42fd15:	icebp  
  42fd16:	dec    eax
  42fd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd18:	test   eax,0xc4c543d7
  42fd1d:	aad    0xb8
  42fd1f:	clts   
  42fd21:	loope  0x42fccf
  42fd23:	dec    ebx
  42fd24:	and    eax,0xb33aa6e8
  42fd29:	in     eax,dx
  42fd2a:	and    al,0xce
  42fd2c:	add    bl,dl
  42fd2e:	ret    
  42fd2f:	out    dx,eax
  42fd30:	outs   dx,BYTE PTR ds:[esi]
  42fd31:	cdq    
  42fd32:	and    al,0x5
  42fd34:	jecxz  0x42fd86
  42fd36:	icebp  
  42fd37:	(bad)  
  42fd38:	push   edx
  42fd39:	nop
  42fd3a:	sub    BYTE PTR [eax+0x6f],bl
  42fd3d:	jbe    0x42fd4b
  42fd3f:	fidiv  DWORD PTR [eax+0x3e515ecd]
  42fd45:	mov    ch,0x78
  42fd47:	jg     0x42fd63
  42fd49:	test   BYTE PTR [esi-0x1a9401c8],cl
  42fd4f:	sub    bl,0xc2
  42fd52:	stc    
  42fd53:	mov    edx,0xeec235bd
  42fd58:	and    ecx,DWORD PTR [ebx*2+0x1cff8ea3]
  42fd5f:	jae    0x42fdd6
  42fd61:	popf   
  42fd62:	pop    esp
  42fd63:	xchg   ebp,edx
  42fd65:	jns    0x42fd32
  42fd67:	add    al,BYTE PTR [ebp-0x75d9254f]
  42fd6d:	fisubr DWORD PTR [ecx-0x6a3adafa]
  42fd73:	scas   eax,DWORD PTR es:[edi]
  42fd74:	cmp    ecx,DWORD PTR [ebx+0x31cafc8e]
  42fd7a:	sub    DWORD PTR [esi],ebp
  42fd7c:	jecxz  0x42fdd1
  42fd7e:	push   ss
  42fd7f:	push   ds
  42fd80:	xor    al,0x23
  42fd82:	add    al,0x0
  42fd84:	mov    bh,0x9e
  42fd86:	js     0x42fd9f
  42fd88:	adc    eax,0x21c6ec2a
  42fd8d:	stos   BYTE PTR es:[edi],al
  42fd8e:	cmp    BYTE PTR [edi+0x13],dl
  42fd91:	fdivr  QWORD PTR [edi+0x56]
  42fd94:	rcl    BYTE PTR [esi-0x38],1
  42fd97:	jge    0x42fe18
  42fd99:	jne    0x42fd7d
  42fd9b:	mov    dl,0xa8
  42fd9d:	stos   DWORD PTR es:[edi],eax
  42fd9e:	sub    edi,DWORD PTR [ecx-0x38]
  42fda1:	pop    ebp
  42fda2:	in     al,0x36
  42fda4:	dec    ebp
  42fda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fda6:	xor    eax,DWORD PTR [eax+eiz*8-0x4]
  42fdaa:	lock ss mov dl,0xa7
  42fdae:	icebp  
  42fdaf:	adc    al,BYTE PTR [eax]
  42fdb1:	pusha  
  42fdb2:	rep stos BYTE PTR es:[edi],al
  42fdb4:	mov    dl,0xcc
  42fdb6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fdb8:	cmp    edx,0x6ba0f92a
  42fdbe:	and    DWORD PTR [ebx],ebp
  42fdc0:	dec    esi
  42fdc1:	scas   al,BYTE PTR es:[edi]
  42fdc2:	inc    ebp
  42fdc3:	not    BYTE PTR [eax-0x46]
  42fdc6:	mov    esp,0xbdb4bae4
  42fdcb:	fnstsw WORD PTR [edi+edi*4]
  42fdce:	(bad)  
  42fdcf:	adc    ah,BYTE PTR [ecx-0x29]
  42fdd2:	sti    
  42fdd3:	inc    DWORD PTR [eax]
  42fdd5:	cmp    eax,0x2fd11eb3
  42fdda:	cld    
  42fddb:	add    BYTE PTR [ecx],bl
  42fddd:	call   0xf1863144
  42fde2:	pop    ebx
  42fde3:	sbb    bl,bh
  42fde5:	les    eax,FWORD PTR [ecx+0x4b]
  42fde8:	(bad)  
  42fde9:	fistp  QWORD PTR [ecx+0x6a]
  42fdec:	inc    edx
  42fded:	dec    edx
  42fdee:	or     edi,DWORD PTR [ecx-0x1b]
  42fdf1:	mov    ds:0xd30de301,eax
  42fdf6:	iret   
  42fdf7:	pop    ss
  42fdf8:	push   cs
  42fdf9:	fisubr WORD PTR ds:0x616b5e1c
  42fdff:	pusha  
  42fe00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe01:	ds push edi
  42fe03:	jb     0x42fdeb
  42fe05:	pop    ss
  42fe06:	scas   eax,DWORD PTR es:[edi]
  42fe07:	out    0x62,al
  42fe09:	fistp  QWORD PTR [eax-0x474a45fd]
  42fe0f:	push   es
  42fe10:	ins    BYTE PTR es:[edi],dx
  42fe11:	dec    esp
  42fe12:	inc    ebx
  42fe13:	pop    edx
  42fe14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe15:	stos   BYTE PTR es:[edi],al
  42fe16:	enter  0x3080,0x7d
  42fe1a:	xor    al,BYTE PTR [eax-0x7b90a47f]
  42fe20:	mov    bl,0xcd
  42fe22:	inc    edx
  42fe23:	sbb    al,0xc0
  42fe25:	mov    eax,ds:0x6ca61152
  42fe2a:	ret    0x2f46
  42fe2d:	popf   
  42fe2e:	nop
  42fe2f:	add    esp,DWORD PTR [edi-0x517fee31]
  42fe35:	sbb    BYTE PTR [esi+0x2ab6b4c1],bh
  42fe3b:	ja     0x42fea5
  42fe3d:	retf   0xef4
  42fe40:	cld    
  42fe41:	add    edx,DWORD PTR [ecx+0x677e9c91]
  42fe47:	out    0x55,al
  42fe49:	push   esi
  42fe4a:	loope  0x42fddb
  42fe4c:	scas   al,BYTE PTR es:[edi]
  42fe4d:	(bad)  
  42fe4f:	mov    DWORD PTR [ebp-0x4d],edi
  42fe52:	add    ch,dl
  42fe54:	pusha  
  42fe55:	xlat   BYTE PTR ds:[ebx]
  42fe56:	pop    ebp
  42fe57:	ins    BYTE PTR es:[edi],dx
  42fe58:	add    ecx,DWORD PTR [edi+ebp*4-0x43]
  42fe5c:	mov    ebp,0xb10f300f
  42fe61:	imul   eax,esp,0xffffffcd
  42fe64:	push   ss
  42fe65:	cmp    eax,0xf36cfe60
  42fe6a:	xor    ebx,esp
  42fe6c:	mov    al,ds:0x5cfb4153
  42fe71:	lock pop edi
  42fe73:	dec    DWORD PTR [ebp+0x58]
  42fe76:	mov    DWORD PTR [edi-0x43dc4e1b],esi
  42fe7c:	mov    ch,0x18
  42fe7e:	ins    DWORD PTR es:[edi],dx
  42fe7f:	idiv   BYTE PTR [esi-0x61]
  42fe82:	and    al,0x4d
  42fe84:	lods   eax,DWORD PTR ds:[esi]
  42fe85:	aad    0xa3
  42fe87:	retf   
  42fe88:	cdq    
  42fe89:	sti    
  42fe8a:	rol    dl,1
  42fe8c:	or     ch,BYTE PTR [edx-0x252bc20b]
  42fe92:	ss stos DWORD PTR es:[edi],eax
  42fe94:	sub    BYTE PTR [ecx+eiz*4],cl
  42fe97:	and    cl,ch
  42fe99:	mov    ds:0x99ec32ad,eax
  42fe9e:	aas    
  42fe9f:	mov    ebx,0xb4fb9199
  42fea4:	imul   ecx,DWORD PTR [ebp+0x49],0x17
  42fea8:	dec    ebx
  42fea9:	jo     0x42fe85
  42feab:	jns    0x42feef
  42fead:	lods   eax,DWORD PTR ds:[esi]
  42feae:	je     0x42fea3
  42feb0:	mov    ecx,0x1f5b294f
  42feb5:	fwait
  42feb6:	add    ch,BYTE PTR [ebx]
  42feb8:	pushf  
  42feb9:	push   ecx
  42feba:	add    ah,BYTE PTR [edx-0x46a0f012]
  42fec0:	imul   ebx,DWORD PTR [eax-0x48],0xffffffaf
  42fec4:	aaa    
  42fec5:	ja     0x42fec2
  42fec7:	jp     0x42fedc
  42fec9:	fdiv   DWORD PTR [ebx]
  42fecb:	jecxz  0x42ff3b
  42fecd:	lahf   
  42fece:	jno    0x42ff28
  42fed0:	dec    ecx
  42fed1:	loop   0x42fec4
  42fed3:	stos   BYTE PTR es:[edi],al
  42fed4:	ins    BYTE PTR es:[edi],dx
  42fed5:	lahf   
  42fed6:	sahf   
  42fed7:	inc    ecx
  42fed8:	mov    esp,0xda6f8a50
  42fedd:	js     0x42fee7
  42fedf:	outs   dx,BYTE PTR ds:[esi]
  42fee0:	mov    ds:0x8f8b6a69,al
  42fee5:	sbb    cl,bh
  42fee7:	adc    DWORD PTR [esi+0x4],edx
  42feea:	xchg   ebp,eax
  42feeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42feec:	and    DWORD PTR [ebp-0x1f82b7c3],edi
  42fef2:	addr16 loop 0x42fec5
  42fef5:	(bad)  
  42fef6:	fsub   QWORD PTR [eax+edx*4]
  42fef9:	sub    al,0x41
  42fefb:	add    bh,cl
  42fefd:	xchg   esi,ecx
  42feff:	xlat   BYTE PTR ds:[ebx]
  42ff00:	add    al,0xa1
  42ff02:	jbe    0x42fe8d
  42ff04:	xor    eax,0xadfeb381
  42ff09:	and    edx,DWORD PTR [edx]
  42ff0b:	push   ds
  42ff0c:	(bad)  
  42ff0d:	cmc    
  42ff0e:	inc    eax
  42ff0f:	inc    ebx
  42ff10:	or     eax,0x34837364
  42ff15:	add    DWORD PTR [edx],esi
  42ff17:	mov    BYTE PTR [ebp+0x43],0xb8
  42ff1b:	mov    ebp,0xa03443ac
  42ff20:	mov    dl,0x26
  42ff22:	lods   al,BYTE PTR ds:[esi]
  42ff24:	js     0x42ff46
  42ff26:	sbb    eax,0x15ea5da7
  42ff2b:	or     al,BYTE PTR ds:0x22dd88cc
  42ff31:	and    al,0x13
  42ff33:	dec    edx
  42ff34:	lahf   
  42ff35:	aam    0x81
  42ff37:	loopne 0x42ff47
  42ff39:	and    eax,0xcfacc7b5
  42ff3e:	xchg   esi,eax
  42ff3f:	pop    eax
  42ff40:	lds    edi,FWORD PTR [edi-0x4c59cd9a]
  42ff46:	fisubr DWORD PTR [edx]
  42ff48:	(bad)  
  42ff49:	jae    0x42fef1
  42ff4b:	push   esi
  42ff4c:	jnp    0x42ff2b
  42ff4e:	inc    edi
  42ff4f:	pop    ecx
  42ff50:	ret    
  42ff51:	into   
  42ff52:	not    BYTE PTR [ebp+0x668b24be]
  42ff58:	xchg   ecx,eax
  42ff59:	mov    edx,0xb38bfabf
  42ff5e:	inc    edx
  42ff5f:	sahf   
  42ff60:	mov    cl,0x6e
  42ff62:	push   ebx
  42ff63:	cs jno 0x42ffe5
  42ff66:	lods   eax,DWORD PTR ds:[esi]
  42ff67:	ins    BYTE PTR es:[edi],dx
  42ff68:	add    DWORD PTR [ebp+edx*1+0x1d],edx
  42ff6c:	cmp    DWORD PTR [edx-0x42cbec5e],ebp
  42ff72:	scas   eax,DWORD PTR es:[edi]
  42ff73:	inc    ecx
  42ff74:	sti    
  42ff75:	jge    0x42fefc
  42ff77:	call   0x6f7b0273
  42ff7c:	ss push es
  42ff7e:	enter  0x92e7,0xa0
  42ff82:	(bad)  
  42ff83:	in     eax,dx
  42ff84:	std    
  42ff85:	adc    edi,ecx
  42ff87:	and    eax,0xf5fe7deb
  42ff8c:	or     BYTE PTR [edx],bl
  42ff8e:	mov    ah,0xad
  42ff90:	retf   0xb077
  42ff93:	push   ebx
  42ff94:	and    BYTE PTR ds:0xc6898b16,al
  42ff9a:	jb     0x42ff73
  42ff9c:	stos   BYTE PTR es:[edi],al
  42ff9d:	cdq    
  42ff9e:	dec    esi
  42ff9f:	push   es
  42ffa0:	xchg   ebp,eax
  42ffa1:	inc    esi
  42ffa2:	imul   ecx,DWORD PTR [ebx],0x63
  42ffa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffa6:	popa   
  42ffa7:	dec    eax
  42ffa8:	cmp    DWORD PTR [ebp-0x42],ecx
  42ffab:	cli    
  42ffac:	inc    edi
  42ffad:	arpl   WORD PTR [esi+0x53b5e8d],si
  42ffb3:	lock cmp esi,edi
  42ffb6:	pop    es
  42ffb7:	lahf   
  42ffb8:	jbe    0x42ff45
  42ffba:	ins    BYTE PTR es:[edi],dx
  42ffbb:	mov    WORD PTR [edx],es
  42ffbd:	in     eax,0xbf
  42ffbf:	fst    QWORD PTR [ecx]
  42ffc1:	into   
  42ffc2:	das    
  42ffc3:	js     0x42ffb7
  42ffc5:	iret   
  42ffc6:	lock mov WORD PTR [edi],cs
  42ffc9:	sbb    al,0x8e
  42ffcb:	popa   
  42ffcc:	rcr    DWORD PTR [edi+0x30],0x36
  42ffd0:	imul   ecx,DWORD PTR [eax+esi*4],0x3ff35cb7
  42ffd7:	icebp  
  42ffd8:	imul   ebx,DWORD PTR [ecx],0xe7a9b8a3
  42ffde:	bound  ebx,QWORD PTR [ecx+esi*1]
  42ffe1:	sub    al,0xa
  42ffe3:	pushf  
  42ffe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffe5:	pop    ss
  42ffe6:	sti    
  42ffe7:	mov    ch,ah
  42ffe9:	sahf   
  42ffea:	js     0x42ffee
  42ffec:	pop    DWORD PTR [edi-0x55066ee6]
  42fff2:	iret   
  42fff3:	xchg   edi,eax
  42fff4:	push   esi
  42fff5:	sub    al,bl
  42fff7:	imul   DWORD PTR [eax+0x12]
  42fffa:	popa   
  42fffb:	xchg   ebx,eax
  42fffc:	xchg   esi,eax
  42fffd:	leave  
  42fffe:	mov    ecx,DWORD PTR [edi-0xca8f0b5]
  430004:	mov    ah,0xa6
  430006:	popf   
  430007:	add    ch,bl
  430009:	sub    ecx,DWORD PTR [esp+ebx*2]
  43000c:	test   DWORD PTR [esi+edi*4],esp
  43000f:	ins    DWORD PTR es:[edi],dx
  430010:	fdivr  QWORD PTR [ebp+eiz*2-0x5f4fd459]
  430017:	and    eax,0xba110123
  43001c:	push   0xffffffbb
  43001e:	mov    esp,0x92b6d77
  430023:	imul   edx,DWORD PTR [ecx+0x42],0xc5b66548
  43002a:	rcr    dh,cl
  43002c:	jo     0x43004a
  43002e:	stos   DWORD PTR es:[edi],eax
  43002f:	enter  0x791f,0x30
  430033:	push   esp
  430034:	fnstsw WORD PTR ss:[edi-0x2f]
  430038:	imul   ebp,DWORD PTR [eax+ebx*8],0x44
  43003c:	dec    edx
  43003d:	sub    al,0xc6
  43003f:	mov    ds:0xe60dc7ca,eax
  430044:	mov    dh,0xe6
  430047:	jno    0x42ffd4
  430049:	lahf   
  43004a:	ror    BYTE PTR [edi-0x60c507c5],0xd2
  430051:	stos   BYTE PTR es:[edi],al
  430052:	mov    eax,0xa734cb14
  430057:	aaa    
  430058:	mov    dh,BYTE PTR [ecx+esi*2+0x3ebab3a8]
  43005f:	or     ebp,DWORD PTR [esi]
  430061:	imul   ebp,DWORD PTR [esi+0x66],0xffffff98
  430065:	push   0xffffff96
  430067:	xor    DWORD PTR [edx],edx
  430069:	pop    ecx
  43006a:	pop    ds
  43006b:	lods   al,BYTE PTR ds:[esi]
  43006c:	push   es
  43006d:	sub    al,0xc1
  43006f:	inc    ecx
  430070:	mov    edx,0xd4863bd9
  430075:	push   0xfffffff6
  430077:	or     DWORD PTR [edi],eax
  430079:	outs   dx,DWORD PTR ds:[esi]
  43007a:	push   es
  43007b:	inc    ebp
  43007c:	sub    eax,0xd2a825f6
  430081:	mov    edi,0x3e2eb066
  430086:	dec    esi
  430087:	scas   al,BYTE PTR es:[edi]
  430088:	cs xor eax,0x98a5ac74
  43008e:	test   al,0x92
  430090:	push   ebx
  430091:	dec    ebp
  430092:	push   ss
  430093:	test   eax,0xdb55bdd0
  430098:	test   al,0xd0
  43009a:	arpl   WORD PTR [ebx],cx
  43009c:	dec    ecx
  43009d:	cmp    al,0xb5
  43009f:	sbb    al,0xcd
  4300a1:	fisttp QWORD PTR [ebp-0x2d]
  4300a4:	fwait
  4300a5:	shl    BYTE PTR [ecx],0x5c
  4300a8:	sbb    DWORD PTR [eax-0x62],edi
  4300ab:	push   es
  4300ac:	adc    bl,dh
  4300ae:	fidivr DWORD PTR [esi+edx*1]
  4300b1:	leave  
  4300b2:	sub    ebx,DWORD PTR [ebx-0x57]
  4300b5:	adc    esi,ecx
  4300b7:	pop    ebp
  4300b8:	scas   eax,DWORD PTR es:[edi]
  4300b9:	(bad)  
  4300ba:	js     0x430071
  4300bc:	inc    edi
  4300bd:	adc    BYTE PTR [edx+0x68c974c1],0xa
  4300c4:	pop    ecx
  4300c5:	or     DWORD PTR [ecx+0x512f4c91],edx
  4300cb:	sbb    BYTE PTR [ecx+0x24],dl
  4300ce:	mov    esp,0x19784306
  4300d3:	push   0xab916594
  4300d8:	mov    ebp,0x620acc0
  4300dd:	dec    esi
  4300de:	pop    ds
  4300df:	int    0xa3
  4300e1:	fidiv  WORD PTR es:[edx]
  4300e4:	stos   BYTE PTR es:[edi],al
  4300e5:	jne    0x4300e7
  4300e7:	xor    eax,0xc79d4df1
  4300ec:	loop   0x430168
  4300ee:	push   edi
  4300ef:	mov    DWORD PTR [edx],eax
  4300f1:	nop
  4300f2:	xor    eax,0x6c3f459a
  4300f7:	test   al,0x18
  4300f9:	dec    edx
  4300fa:	cmp    eax,0x132f1aa4
  4300ff:	scas   al,BYTE PTR es:[edi]
  430100:	cwde   
  430101:	add    edx,ebp
  430103:	adc    eax,0xe3f7fd39
  430108:	arpl   WORD PTR [ebx],bx
  43010a:	icebp  
  43010b:	push   ecx
  43010c:	xchg   esi,eax
  43010d:	pop    edx
  43010e:	div    DWORD PTR [ebp+0x71]
  430111:	test   al,0x65
  430113:	fcom   DWORD PTR [eax-0x70]
  430116:	push   eax
  430117:	(bad)  
  430118:	fcomi  st,st(3)
  43011a:	popa   
  43011b:	cmp    ebx,DWORD PTR [eax-0x7a]
  43011e:	mov    bh,0xdb
  430120:	cmp    BYTE PTR [ebp+0x13],ah
  430123:	icebp  
  430124:	dec    ecx
  430125:	jo     0x43013d
  430127:	add    DWORD PTR [ebx+0x67aafe7f],ebx
  43012d:	inc    ebp
  43012e:	cmc    
  43012f:	inc    eax
  430130:	sbb    eax,DWORD PTR ds:0xa181c2e5
  430136:	dec    edx
  430137:	or     ah,ch
  430139:	adc    bl,cl
  43013b:	add    DWORD PTR [edi+ecx*2],esp
  43013e:	jl     0x430199
  430140:	retf   
  430141:	push   cs
  430142:	push   0x9224d630
  430147:	mov    cl,0x4c
  430149:	test   al,0x3b
  43014b:	mov    es,WORD PTR ds:0xa471ed84
  430151:	push   ebx
  430152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430153:	jne    0x4301c8
  430155:	idiv   BYTE PTR [ebp+esi*4+0x45970ffe]
  43015c:	dec    eax
  43015d:	repz cmp eax,0x6b509396
  430163:	xchg   DWORD PTR [eax+0x1b811798],edx
  430169:	adc    DWORD PTR [eax+0x5161d489],ebx
  43016f:	adc    ch,BYTE PTR [eax-0x64d7c88d]
  430175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430176:	mov    ecx,0xd4f0a07c
  43017b:	jge    0x43016d
  43017d:	cmp    BYTE PTR [ecx-0x5f],0x91
  430181:	daa    
  430182:	sub    DWORD PTR [eax-0x1c],ebp
  430185:	popa   
  430186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430187:	in     eax,0x50
  430189:	xor    eax,0xe62dc14a
  43018e:	dec    ebx
  43018f:	scas   eax,DWORD PTR es:[edi]
  430190:	mov    ebx,0x984cfa0a
  430195:	les    ecx,FWORD PTR [ecx-0x5e]
  430198:	inc    BYTE PTR [esi-0x2dcc4c3a]
  43019e:	mov    ebx,0xee51f888
  4301a3:	mov    bl,0x30
  4301a5:	jp     0x430219
  4301a7:	sbb    dh,cl
  4301a9:	push   ebp
  4301aa:	out    0xab,al
  4301ac:	jnp    0x430145
  4301ae:	push   esi
  4301af:	sub    eax,0xef37056
  4301b4:	(bad)  
  4301b5:	out    0xa1,eax
  4301b7:	mov    dh,0xdd
  4301b9:	push   ecx
  4301ba:	xchg   ebp,eax
  4301bb:	pop    edx
  4301bc:	lods   al,BYTE PTR ds:[esi]
  4301bd:	or     DWORD PTR [edi+0x47],0xffffffda
  4301c1:	push   edi
  4301c2:	jmp    0x88c46118
  4301c7:	pop    ds
  4301c8:	dec    ecx
  4301c9:	ret    
  4301ca:	mov    ecx,0x6f84b99f
  4301cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301d0:	mov    DWORD PTR [edx+0x6c],ebx
  4301d3:	(bad)  
  4301d4:	xor    ebp,edi
  4301d6:	add    BYTE PTR [esi+0x1f],dl
  4301d9:	rol    DWORD PTR [ecx-0x237dfb0c],1
  4301df:	repnz repz add eax,0x9a4d8150
  4301e6:	ret    
  4301e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301e8:	sar    DWORD PTR [ecx+0x66],0x24
  4301ec:	inc    ebx
  4301ed:	dec    ebp
  4301ee:	mov    edx,DWORD PTR [edi+0x316a545]
  4301f4:	xor    DWORD PTR [eax-0x5e88631c],ecx
  4301fa:	popa   
  4301fb:	cmp    al,al
  4301fd:	mov    dl,0x8b
  4301ff:	mov    esp,0xfa188d00
  430204:	push   cs
  430205:	xchg   BYTE PTR [ebp-0x36],bh
  430208:	(bad)  
  43020b:	xor    al,0x67
  43020d:	cmp    ah,BYTE PTR [ebx-0x5f7b3931]
  430213:	pop    ebx
  430214:	lods   eax,DWORD PTR ds:[esi]
  430215:	xor    dl,BYTE PTR ds:0x5199203e
  43021b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43021c:	sub    DWORD PTR [eax+edx*8],ebp
  43021f:	in     al,dx
  430220:	call   FWORD PTR [ebx+0x15712a63]
  430226:	popf   
  430227:	adc    BYTE PTR [eax+0x780da60c],0x74
  43022e:	lds    eax,FWORD PTR [eax-0x1fa46f29]
  430234:	dec    eax
  430235:	mov    esp,0xf7680198
  43023a:	dec    esp
  43023b:	push   eax
  43023c:	push   esi
  43023d:	pop    es
  43023e:	push   0x52
  430240:	xor    DWORD PTR [ecx-0x26f7f3c2],ecx
  430246:	icebp  
  430247:	shl    edi,cl
  430249:	mov    esi,0x230bd551
  43024e:	inc    ebx
  43024f:	aas    
  430250:	scas   eax,DWORD PTR es:[edi]
  430251:	aad    0x9c
  430253:	pop    eax
  430254:	or     bl,BYTE PTR [edi+0x4b33bf08]
  43025a:	(bad)  
  43025b:	adc    bh,BYTE PTR [ebx]
  43025d:	es mov edi,0x3ceba043
  430263:	mov    edi,0x11bfd2c2
  430268:	mov    edi,0xa8f4cc88
  43026d:	loope  0x4302c1
  43026f:	push   edx
  430270:	xchg   ebx,eax
  430271:	adc    DWORD PTR [edx],ebp
  430273:	imul   ebx,DWORD PTR [ebx+edi*8-0x144e56d8],0xa224c3de
  43027e:	sbb    dh,BYTE PTR [ecx-0x1b01f4a]
  430284:	push   edi
  430285:	sar    DWORD PTR [esi+0x7],1
  430288:	adc    bh,BYTE PTR [edi+ebx*8]
  43028b:	mov    ecx,edx
  43028d:	or     al,0x4
  43028f:	sub    ch,BYTE PTR [ebp+0x62bcf8f9]
  430295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430296:	dec    ebx
  430297:	loope  0x43024c
  430299:	rol    DWORD PTR [edx],1
  43029b:	jmp    0x430243
  43029d:	ins    DWORD PTR es:[edi],dx
  43029e:	pop    edx
  43029f:	out    0x35,eax
  4302a1:	mov    WORD PTR [eax-0x59],es
  4302a4:	mov    esp,0x8cf07e0
  4302a9:	int    0x56
  4302ab:	mov    bh,0x95
  4302ad:	fadd   QWORD PTR [eax]
  4302af:	sub    al,0x56
  4302b1:	(bad)  
  4302b2:	outs   dx,BYTE PTR ds:[esi]
  4302b3:	and    al,0x87
  4302b5:	sub    eax,0xb52f259c
  4302ba:	inc    eax
  4302bb:	lock jb 0x4302d0
  4302be:	into   
  4302bf:	xor    BYTE PTR [esp+eax*4],dh
  4302c2:	lahf   
  4302c3:	clc    
  4302c4:	lods   al,BYTE PTR ds:[esi]
  4302c5:	cwde   
  4302c6:	(bad)
  4302c9:	in     al,0x78
  4302cb:	clc    
  4302cc:	popa   
  4302cd:	ss xchg edx,eax
  4302cf:	jns    0x43028b
  4302d1:	xor    DWORD PTR [edi+0x6cb475ea],esi
  4302d7:	int    0x60
  4302d9:	nop
  4302da:	add    BYTE PTR [edi-0x65f55810],ah
  4302e0:	mov    bl,0x4b
  4302e2:	and    eax,0xdf469a15
  4302e7:	rcr    BYTE PTR [edx-0x37ea475d],0x76
  4302ee:	mov    eax,ds:0x909d4dcb
  4302f3:	jb     0x4302be
  4302f5:	ins    BYTE PTR es:[edi],dx
  4302f6:	test   edx,ebp
  4302f8:	test   BYTE PTR [esi-0x68],cl
  4302fb:	pop    es
  4302fc:	icebp  
  4302fd:	add    eax,0x88256b8f
  430302:	cdq    
  430303:	loopne 0x4302df
  430305:	rcr    DWORD PTR ds:0x38ea5714,1
  43030b:	repnz xchg ebp,eax
  43030d:	mov    esp,0x173dcf6b
  430312:	jmp    0x5732:0x63189480
  430319:	adc    eax,0xfd704d22
  43031e:	ins    DWORD PTR es:[edi],dx
  43031f:	dec    esp
  430320:	ret    0xdce6
  430323:	inc    ebp
  430324:	outs   dx,DWORD PTR ds:[esi]
  430325:	inc    ecx
  430326:	lds    esi,FWORD PTR [esi+0x47bb671a]
  43032c:	in     eax,dx
  43032d:	adc    cl,dh
  43032f:	jno    0x430386
  430331:	xor    ebp,DWORD PTR [ebx+0x60]
  430334:	pop    ss
  430335:	xor    BYTE PTR [edx+0x3b],0x56
  430339:	fbstp  TBYTE PTR [eax+0x4423dc1c]
  43033f:	or     DWORD PTR [esi],esp
  430341:	aad    0x1a
  430343:	pushf  
  430344:	mov    ebx,0xd0795695
  430349:	in     eax,dx
  43034a:	cmc    
  43034b:	dec    eax
  43034c:	jnp    0x430335
  43034e:	xchg   esi,eax
  43034f:	fst    st(2)
  430351:	jle    0x430370
  430353:	lea    eax,[ecx+0x453f4d2b]
  430359:	and    DWORD PTR [ecx-0x3d],ebp
  43035c:	push   edx
  43035d:	rcr    ah,cl
  43035f:	ins    DWORD PTR es:[edi],dx
  430360:	or     DWORD PTR [edx-0x452b53fa],ebx
  430366:	addr16 out dx,eax
  430368:	xlat   BYTE PTR ds:[ebx]
  430369:	cmp    al,0x22
  43036b:	pop    es
  43036c:	repz cld 
  43036e:	fimul  DWORD PTR [ebx+0x29]
  430371:	or     eax,0xa435bdbe
  430376:	lea    eax,[ebx-0x75]
  430379:	ficom  WORD PTR [esi]
  43037b:	jo     0x430360
  43037d:	mov    edi,0x69ea0b92
  430382:	ret    
  430383:	int3   
  430384:	cmp    al,bl
  430386:	push   ecx
  430387:	jno    0x4303ed
  430389:	sbb    edx,eax
  43038b:	pop    esi
  43038c:	inc    edx
  43038d:	test   DWORD PTR [ecx-0xa],edi
  430390:	inc    ecx
  430391:	loopne 0x43033d
  430393:	sub    dh,dl
  430395:	or     DWORD PTR [edx-0x47bbdc09],esp
  43039b:	fstp   DWORD PTR [ebp-0x4e]
  43039e:	mov    edi,0x68c7ecf3
  4303a3:	mov    bl,0x3a
  4303a5:	ja     0x43035e
  4303a7:	jmp    0xcabe:0xbb43506c
  4303ae:	sbb    dl,BYTE PTR [edi]
  4303b0:	dec    esp
  4303b1:	sbb    edx,DWORD PTR [ebp+0x57]
  4303b4:	out    dx,al
  4303b5:	inc    edi
  4303b6:	ret    
  4303b7:	mov    al,BYTE PTR [ebx+eiz*4+0x2cf0e2af]
  4303be:	shl    BYTE PTR [edi-0x1a],0x1
  4303c2:	dec    edi
  4303c3:	jo     0x430401
  4303c5:	repnz (bad) 
  4303c7:	cwde   
  4303c8:	ret    0xa195
  4303cb:	add    BYTE PTR [ebp-0x22],0xff
  4303cf:	xchg   edi,eax
  4303d0:	push   eax
  4303d1:	sti    
  4303d2:	jecxz  0x4303cb
  4303d4:	mov    ecx,0xbaf5d97a
  4303d9:	jge    0x430432
  4303db:	inc    ebp
  4303dc:	cwde   
  4303dd:	scas   eax,DWORD PTR es:[edi]
  4303de:	enter  0xbd07,0xcc
  4303e2:	add    ecx,DWORD PTR [esp+edi*8+0x6866da4f]
  4303e9:	xor    ebp,DWORD PTR [ebp-0x26239543]
  4303ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4303f0:	hlt    
  4303f1:	dec    ecx
  4303f2:	inc    ebx
  4303f3:	in     eax,0xa
  4303f5:	cmp    ecx,edx
  4303f7:	es cmp eax,0x5ac7d980
  4303fd:	add    eax,0xa0e69ab7
  430402:	push   0x64
  430404:	daa    
  430405:	and    dh,BYTE PTR [edi-0x7d8f66e5]
  43040b:	jo     0x43038f
  43040d:	mov    BYTE PTR [esi-0x518e567b],0x94
  430414:	inc    ecx
  430415:	add    eax,0xf8fca4e1
  43041a:	(bad)  
  43041b:	shr    DWORD PTR [ecx-0x36],cl
  43041e:	jmp    0xb79ab31b
  430423:	gs jns 0x430411
  430426:	mov    eax,ds:0x30cd8ee2
  43042b:	sub    al,0x4a
  43042d:	sbb    eax,0x863a9a56
  430432:	aas    
  430433:	pop    edx
  430434:	leave  
  430435:	dec    edx
  430436:	and    eax,0xaba8eccf
  43043b:	jle    0x4304b3
  43043d:	call   edx
  43043f:	jle    0x4303e2
  430441:	push   esi
  430442:	pop    ss
  430443:	rcl    DWORD PTR [esp+eiz*8-0x7a],0x3d
  430448:	ret    0x39a3
  43044b:	shl    DWORD PTR [esi+eax*8+0x65dd5e91],1
  430452:	pusha  
  430453:	push   esp
  430454:	ror    dl,cl
  430456:	inc    eax
  430457:	xor    DWORD PTR [ebx-0x5033c87b],0x50423190
  430461:	sbb    dh,0x77
  430464:	ret    
  430465:	mov    ds:0x2de3b3b9,al
  43046a:	sub    al,cl
  43046c:	test   DWORD PTR [esi+edx*4],esi
  43046f:	jae    0x43047d
  430471:	add    eax,0xafef0548
  430476:	jnp    0x430412
  430478:	dec    ebp
  430479:	push   esp
  43047a:	cwde   
  43047b:	mov    al,0x2
  43047d:	cmp    dl,BYTE PTR [eax+ebp*8+0x6584be8]
  430484:	bound  edx,QWORD PTR [edx-0x43]
  430487:	jno    0x4304c8
  430489:	sub    edx,DWORD PTR [esp+eiz*2+0x3f]
  43048d:	fstp   TBYTE PTR [ecx]
  43048f:	add    dh,BYTE PTR cs:[ebx]
  430492:	mov    edx,0x8e045a59
  430497:	cmp    cl,BYTE PTR [esi+0x1c313b8f]
  43049d:	jp     0x4304ea
  43049f:	scas   eax,DWORD PTR es:[edi]
  4304a0:	sbb    bh,BYTE PTR [edx-0x4f3e384c]
  4304a6:	ds adc eax,0x517fc628
  4304ac:	enter  0x70a8,0x1
  4304b0:	stos   DWORD PTR es:[edi],eax
  4304b1:	rcr    BYTE PTR [esi-0xa],cl
  4304b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4304b5:	mov    ebp,eax
  4304b7:	push   ss
  4304b8:	(bad)  
  4304b9:	ja     0x4304c6
  4304bb:	inc    ecx
  4304bc:	std    
  4304bd:	inc    esp
  4304be:	fwait
  4304bf:	sahf   
  4304c0:	dec    edx
  4304c1:	xchg   esp,eax
  4304c2:	pop    ss
  4304c3:	data16 (bad) [ebx-0x5b]
  4304c7:	lea    ebp,[eax-0x13e26407]
  4304cd:	(bad)  
  4304ce:	add    al,0x8d
  4304d0:	popa   
  4304d1:	test   DWORD PTR [ebx-0x52],edi
  4304d4:	imul   ebx
  4304d6:	dec    esi
  4304d7:	(bad)  
  4304d8:	imul   DWORD PTR [ebx+0x8]
  4304db:	jbe    0x430557
  4304dd:	mov    ds:0xd1879e7f,eax
  4304e2:	mov    ds:0x472ce7e9,al
  4304e7:	int    0x9b
  4304e9:	sub    edx,DWORD PTR [ecx+0x60e66f3f]
  4304ef:	or     esi,DWORD PTR [edi]
  4304f1:	mov    ch,0x7
  4304f3:	pop    esi
  4304f4:	push   0x6b
  4304f6:	mov    ss,ebx
  4304f8:	in     al,0x27
  4304fa:	xchg   ebp,eax
  4304fb:	sub    bh,ah
  4304fd:	mov    bl,0xd3
  4304ff:	and    ch,BYTE PTR ds:0x7fe4d201
  430505:	xor    eax,DWORD PTR [ebx]
  430507:	sbb    ebx,DWORD PTR [esi-0x43]
  43050a:	xchg   ecx,eax
  43050b:	imul   esp,DWORD PTR [edi-0x2],0xffffffb9
  43050f:	pop    ebx
  430510:	adc    eax,0xe8f2f23a
  430515:	and    eax,0xa864b7ec
  43051a:	outs   dx,BYTE PTR ss:[esi]
  43051c:	cmp    al,0xd6
  43051e:	jmp    0x430587
  430520:	fs push eax
  430522:	ja     0x43050a
  430524:	inc    BYTE PTR [ebx]
  430526:	push   es
  430527:	aaa    
  430528:	push   cs
  430529:	xchg   ebp,eax
  43052a:	inc    edi
  43052b:	sub    ebp,DWORD PTR [esi]
  43052d:	ds sbb eax,0x6df434d5
  430533:	dec    edx
  430534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430535:	mov    edx,0xf600a929
  43053a:	mov    ds:0x7679370a,al
  43053f:	or     BYTE PTR [ebx-0x5b],al
  430542:	inc    ecx
  430543:	mov    ds:0xe55a7768,eax
  430548:	imul   eax,DWORD PTR [edx-0x77],0xffffff94
  43054c:	stos   DWORD PTR es:[edi],eax
  43054d:	aas    
  43054e:	aaa    
  43054f:	adc    eax,0x6ec52b5c
  430554:	xor    al,0xbb
  430556:	stos   BYTE PTR es:[edi],al
  430557:	cwde   
  430558:	push   eax
  430559:	loope  0x4304e7
  43055b:	in     eax,dx
  43055c:	add    ebp,DWORD PTR [ebx-0x66]
  43055f:	dec    ecx
  430560:	adc    DWORD PTR [eax-0x1862dd0d],0xf7170e42
  43056a:	add    al,0x63
  43056c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43056d:	mov    esi,0xceea7cab
  430572:	inc    ebp
  430573:	retf   
  430574:	and    eax,DWORD PTR [edi-0x1ca5f553]
  43057a:	(bad)  
  43057b:	adc    esp,DWORD PTR [esi+0x66]
  43057e:	loopne 0x4305c0
  430580:	mov    edi,0xf74d926c
  430585:	lock jge 0x430522
  430588:	(bad)  
  430589:	sahf   
  43058a:	or     eax,0x84e398fa
  43058f:	out    0x72,eax
  430591:	les    esi,FWORD PTR [esp+eax*8]
  430594:	mov    bh,0x20
  430596:	outs   dx,BYTE PTR ds:[esi]
  430597:	jle    0x4305f0
  430599:	dec    edi
  43059a:	ins    BYTE PTR es:[edi],dx
  43059b:	daa    
  43059c:	outs   dx,DWORD PTR ds:[esi]
  43059d:	aad    0x65
  43059f:	sar    DWORD PTR [ebp-0x64],0x4b
  4305a3:	jnp    0x43059e
  4305a5:	lods   eax,DWORD PTR ds:[esi]
  4305a6:	out    dx,al
  4305a7:	out    0x16,al
  4305a9:	aaa    
  4305aa:	mov    al,0x5a
  4305ac:	and    ebx,ebx
  4305ae:	xor    esi,0x7f77937e
  4305b4:	sub    al,ah
  4305b6:	sahf   
  4305b7:	pop    ebp
  4305b8:	popf   
  4305b9:	fmul   QWORD PTR fs:[ebp+0x1f32ec38]
  4305c0:	arpl   si,si
  4305c2:	sbb    cl,dl
  4305c4:	pop    ss
  4305c5:	js     0x4305b9
  4305c7:	test   eax,0x947a10a4
  4305cc:	lea    ecx,[edi]
  4305ce:	inc    ecx
  4305cf:	fidivr WORD PTR [eax-0x65]
  4305d2:	mov    al,0x90
  4305d4:	std    
  4305d5:	test   DWORD PTR [edx-0x6a5e2f56],ebx
  4305db:	cmc    
  4305dc:	arpl   WORD PTR [edi],bx
  4305de:	inc    esi
  4305df:	and    BYTE PTR [ecx+0xc7d1db8],ah
  4305e5:	pop    edi
  4305e6:	add    DWORD PTR [ecx-0x6f],esp
  4305e9:	add    DWORD PTR [edx+0x5c8570d3],edx
  4305ef:	jns    0x4305b2
  4305f1:	fwait
  4305f2:	push   ss
  4305f3:	enter  0x80e6,0xda
  4305f7:	fwait
  4305f8:	mov    esi,DWORD PTR [eax-0x756d7e00]
  4305fe:	add    bl,BYTE PTR [edx+0x48]
  430601:	mov    dl,0x46
  430603:	push   cs
  430604:	repz lds ebp,FWORD PTR [eax+ebx*2+0x13]
  430609:	cmp    eax,0x39c484b1
  43060e:	jle    0x4305f9
  430610:	in     al,dx
  430611:	mov    DWORD PTR [edx-0x34495cbe],esp
  430617:	popa   
  430618:	push   ebx
  430619:	pop    esp
  43061a:	cld    
  43061b:	jmp    0x430627
  43061d:	sbb    DWORD PTR [ebp-0x14],ecx
  430620:	(bad)  
  430621:	jmp    0xcf6b:0xac66f926
  430628:	loop   0x4305da
  43062a:	rol    al,0x61
  43062d:	leave  
  43062e:	es xchg esi,eax
  430630:	addr16 adc edi,esi
  430633:	push   ds
  430634:	add    ch,BYTE PTR [edx-0x2e]
  430637:	xor    edi,esp
  430639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43063a:	punpcklwd mm6,DWORD PTR [eax]
  43063d:	xchg   ebp,eax
  43063e:	push   cs
  43063f:	enter  0xfed1,0xd6
  430643:	fidivr WORD PTR [edi]
  430645:	xchg   ebx,eax
  430646:	int    0xa2
  430648:	retf   
  430649:	mov    esi,DWORD PTR [edx+esi*4]
  43064c:	stc    
  43064d:	jae    0x430674
  43064f:	mov    cl,0xed
  430651:	pop    es
  430652:	retf   
  430653:	outs   dx,BYTE PTR ds:[esi]
  430654:	mov    fs,edx
  430656:	xor    ebx,DWORD PTR [ebp-0x5ddad157]
  43065c:	or     edi,DWORD PTR [ecx+0x13959016]
  430662:	mov    ecx,0x26df29e3
  430667:	add    BYTE PTR [ecx+0x2d],0x8a
  43066b:	in     eax,dx
  43066c:	shr    DWORD PTR [ebx+edx*8-0x3f4a05ca],cl
  430673:	and    BYTE PTR [edi+edx*2-0x3ec603af],ah
  43067a:	and    al,0x3a
  43067c:	(bad)
  430680:	ja     0x43065a
  430682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430683:	pop    esp
  430684:	push   cs
  430685:	push   esi
  430686:	leave  
  430687:	mov    ecx,0x8d8743db
  43068c:	push   es
  43068d:	inc    esi
  43068e:	mov    ds:0xbb667b23,eax
  430693:	inc    edx
  430694:	stc    
  430695:	sbb    al,0x11
  430697:	sbb    ebp,DWORD PTR [ecx+0x15]
  43069a:	mov    ecx,0xc0e5820d
  43069f:	mov    WORD PTR ds:0x75607700,es
  4306a5:	pop    es
  4306a6:	jno    0x4306e0
  4306a8:	jmp    0x4306cf
  4306aa:	sub    eax,0x4189cc15
  4306af:	fldcw  WORD PTR [eax]
  4306b1:	pop    edi
  4306b2:	mov    ebx,0xde34c2dc
  4306b7:	outs   dx,DWORD PTR ds:[esi]
  4306b8:	dec    ecx
  4306b9:	sbb    dh,cl
  4306bb:	loop   0x4306e1
  4306bd:	cld    
  4306be:	ins    DWORD PTR es:[edi],dx
  4306bf:	sbb    BYTE PTR [ecx-0x50],ah
  4306c2:	xchg   ebx,eax
  4306c3:	mov    edi,0x7c06d876
  4306c8:	pop    ebp
  4306c9:	jmp    0x8142:0x9e284075
  4306d0:	(bad)  
  4306d1:	(bad)  
  4306d2:	fldcw  WORD PTR [eax]
  4306d4:	and    eax,0xfe98000c
  4306d9:	sbb    BYTE PTR [esi+edi*2+0x49],bl
  4306dd:	jmp    0x430748
  4306df:	push   ecx
  4306e0:	test   al,0xcf
  4306e2:	mov    eax,0xe06c19bc
  4306e7:	add    BYTE PTR ds:0x61045960,ch
  4306ed:	or     dh,BYTE PTR [esi]
  4306ef:	xchg   ebx,eax
  4306f0:	pop    es
  4306f1:	inc    ebx
  4306f2:	adc    DWORD PTR [ebp+edx*2-0x2],0x7babe456
  4306fa:	ss xchg ebp,eax
  4306fc:	aam    0x99
  4306fe:	and    al,0x87
  430700:	ss jns 0x4306a9
  430703:	fstp   TBYTE PTR [ebx-0x1837bbfa]
  430709:	sbb    DWORD PTR [ebx-0x2c],ebx
  43070c:	sub    DWORD PTR [ecx+0x236a686e],eax
  430712:	cmp    BYTE PTR ds:0x7bcc80f4,bl
  430718:	jbe    0x43075c
  43071a:	dec    esi
  43071b:	mov    dl,BYTE PTR [edx]
  43071d:	dec    esi
  43071e:	test   BYTE PTR [edi-0x3b5b109a],al
  430724:	lea    esi,[edi-0x29111124]
  43072a:	test   BYTE PTR [eax+0x77ef39dd],0x63
  430731:	imul   esp,DWORD PTR [eax+0x73cfe85b],0x74
  430738:	push   ebx
  430739:	pop    ds
  43073a:	das    
  43073b:	mov    ebp,0x797c87d8
  430740:	imul   edi,DWORD PTR [ebp-0x56],0xffffffb9
  430744:	test   al,0x65
  430746:	dec    dh
  430748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430749:	inc    esp
  43074a:	(bad)  
  43074b:	rcr    BYTE PTR [eax],1
  43074d:	push   0xffffff97
  43074f:	mov    ds:0x5b4808d9,al
  430754:	sub    al,0x92
  430756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430757:	ret    
  430758:	dec    ebx
  430759:	or     dh,bl
  43075b:	or     eax,0x8b29822c
  430760:	mov    cl,0xe5
  430762:	xchg   ebx,eax
  430763:	push   eax
  430764:	ja     0x4306fe
  430766:	call   0x99705e29
  43076b:	ds pusha 
  43076d:	loop   0x4306f9
  43076f:	gs mov ch,0xd
  430772:	aaa    
  430773:	push   edi
  430774:	push   esi
  430775:	jne    0x43074b
  430777:	loopne 0x430756
  430779:	sbb    cl,BYTE PTR [ecx+esi*4-0x4c]
  43077d:	sahf   
  43077e:	cmc    
  43077f:	cs add ch,cl
  430782:	fmul   QWORD PTR [edx+0x69]
  430785:	cli    
  430786:	call   0x6a6ecfe8
  43078b:	mov    BYTE PTR [ecx+0x63],dh
  43078e:	or     al,0xd8
  430790:	mov    ch,0x5b
  430793:	(bad)  
  430794:	push   ds
  430795:	xchg   esi,eax
  430796:	icebp  
  430797:	sti    
  430798:	loopne 0x430792
  43079a:	mov    ebx,DWORD PTR [ecx+0x26]
  43079d:	rcl    DWORD PTR [edi-0xc],0x71
  4307a1:	jmp    FWORD PTR [edx+0x14]
  4307a4:	scas   al,BYTE PTR es:[edi]
  4307a5:	mov    edx,0x7f1acd1c
  4307aa:	mov    di,WORD PTR ds:0x6f04e921
  4307b1:	cmp    BYTE PTR [ebp-0x5885e2f3],0x6d
  4307b8:	push   cs
  4307b9:	jg     0x430825
  4307bb:	xor    BYTE PTR [eax-0x11],ch
  4307be:	icebp  
  4307bf:	mov    ds:0xfa00e56c,eax
  4307c4:	adc    bl,ah
  4307c6:	ins    BYTE PTR es:[edi],dx
  4307c7:	aas    
  4307c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307c9:	ins    DWORD PTR es:[edi],dx
  4307ca:	pop    ds
  4307cb:	div    DWORD PTR [ebx+ecx*2+0x6e]
  4307cf:	jge    0x430802
  4307d1:	mov    ah,BYTE PTR [ecx]
  4307d3:	sahf   
  4307d4:	fnstsw WORD PTR [ebx-0x48]
  4307d7:	(bad)  
  4307d8:	popf   
  4307d9:	loopne 0x43084a
  4307db:	popa   
  4307dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307dd:	sub    esi,ebx
  4307df:	sub    al,dl
  4307e1:	fwait
  4307e2:	add    BYTE PTR [edx-0x49f290ff],bh
  4307e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4307e9:	or     DWORD PTR [edx],edi
  4307eb:	xor    ah,dl
  4307ed:	lock mov cl,0x2e
  4307f0:	xchg   ebx,eax
  4307f1:	scas   al,BYTE PTR es:[edi]
  4307f2:	adc    esi,esi
  4307f4:	lea    ebp,ds:0x19dfe822
  4307fa:	cmp    BYTE PTR [edi-0xc],dl
  4307fd:	mov    WORD PTR [edi-0x7d],fs
  430800:	imul   esi,ecx,0x47
  430803:	clc    
  430804:	daa    
  430805:	outs   dx,DWORD PTR ds:[esi]
  430806:	mov    ds:0x7383e13a,al
  43080b:	or     eax,0xcd4dfef5
  430810:	inc    edx
  430811:	inc    edi
  430812:	ss in  al,0xf7
  430815:	ror    dh,0x7d
  430818:	xchg   DWORD PTR [esi+esi*8+0x27],edi
  43081c:	popa   
  43081d:	fcmovnb st,st(0)
  43081f:	sub    al,0x92
  430821:	jno    0x43082a
  430823:	inc    edx
  430824:	mov    al,ah
  430826:	cmp    edi,DWORD PTR [esi-0x52]
  430829:	dec    ebx
  43082a:	jns    0x430886
  43082c:	xchg   DWORD PTR [ecx+edx*1+0x3b],ebp
  430830:	and    ebp,ecx
  430832:	sub    dl,BYTE PTR [edi-0x7f]
  430835:	inc    edi
  430836:	inc    ebx
  430837:	mov    esi,0xd3f93dc4
  43083c:	repnz pusha 
  43083e:	or     eax,0x888b6fc5
  430843:	stos   BYTE PTR es:[edi],al
  430844:	or     al,0xd7
  430846:	mov    esp,0x6c132308
  43084b:	call   0x67f5:0x6d98b688
  430852:	out    dx,al
  430853:	dec    ecx
  430854:	mov    esi,esi
  430856:	push   es
  430857:	jne    0x430843
  430859:	pop    edi
  43085a:	sbb    DWORD PTR [ebx+0x79f70abc],0xaf05828a
  430864:	pop    eax
  430865:	loop   0x4308a3
  430867:	adc    eax,ecx
  430869:	aad    0x2b
  43086b:	jle    0x430837
  43086d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43086e:	pop    esp
  43086f:	pop    edx
  430870:	aaa    
  430871:	or     BYTE PTR [ebx],dl
  430873:	add    ebx,DWORD PTR [ecx]
  430875:	fiadd  DWORD PTR [esi-0x63]
  430878:	xor    edi,DWORD PTR [ebx-0x6c]
  43087b:	loopne 0x43080d
  43087d:	popf   
  43087e:	(bad)  
  43087f:	jmp    0x8e30:0xb22661e0
  430886:	(bad)  [eax+0x1b]
  430889:	arpl   WORD PTR [edx],di
  43088b:	imul   ebp,DWORD PTR [edi],0x1c
  43088e:	ins    BYTE PTR es:[edi],dx
  43088f:	dec    edx
  430890:	pop    edx
  430891:	add    BYTE PTR [edx+0x57],bh
  430894:	(bad)  
  430895:	popf   
  430896:	repnz xlat BYTE PTR ds:[ebx]
  430898:	cmp    BYTE PTR [eax-0x71],ch
  43089b:	fwait
  43089c:	into   
  43089d:	sbb    dh,BYTE PTR [esi+eiz*2+0x7d]
  4308a1:	xchg   esi,eax
  4308a2:	popf   
  4308a3:	sbb    bh,ch
  4308a5:	mov    fs,ecx
  4308a7:	mov    edx,DWORD PTR [eax-0x44]
  4308aa:	in     al,dx
  4308ab:	rcr    DWORD PTR [ebx+0x21],1
  4308ae:	xchg   esi,eax
  4308af:	sbb    BYTE PTR [eax],dh
  4308b1:	and    eax,0xc15c134c
  4308b6:	test   al,0xe8
  4308b8:	push   esp
  4308b9:	jge    0x430875
  4308bb:	mov    BYTE PTR [ecx],bh
  4308bd:	mov    cl,0x9a
  4308bf:	jge    0x430876
  4308c1:	bound  esi,QWORD PTR [ebx]
  4308c3:	mov    esi,0xf74126e0
  4308c8:	int3   
  4308c9:	(bad)  
  4308cb:	pop    ebx
  4308cc:	mov    WORD PTR [eax+0x40524e54],es
  4308d2:	cmp    edi,DWORD PTR [eax+eiz*4-0x5]
  4308d6:	jmp    0x58f8:0x82a9e4c5
  4308dd:	xchg   edx,eax
  4308de:	and    DWORD PTR [ebx+edi*8],edi
  4308e1:	lea    eax,[ebp-0x73]
  4308e4:	jecxz  0x4308ad
  4308e6:	cli    
  4308e7:	mov    ds:0xe8e233f,eax
  4308ec:	rcl    BYTE PTR [edi],1
  4308ee:	out    0xfb,al
  4308f0:	nop
  4308f1:	push   ds
  4308f2:	or     BYTE PTR [edi+0x3063f32a],al
  4308f8:	fidiv  DWORD PTR ds:[edx+0x19c93a26]
  4308ff:	and    al,al
  430901:	pop    ds
  430902:	ror    DWORD PTR [edx-0x50],0xf
  430906:	leave  
  430907:	icebp  
  430908:	mov    eax,0x92fe9e5
  43090d:	sub    ebx,esi
  43090f:	mov    ch,0xd4
  430911:	mov    esp,0x3058163
  430916:	mov    ecx,0x45abee23
  43091b:	int3   
  43091c:	mov    dl,0x8c
  43091e:	sti    
  43091f:	or     ah,cl
  430921:	xor    cl,BYTE PTR [edx-0x2d]
  430924:	dec    ecx
  430925:	ds dec esp
  430927:	push   0xffffffed
  430929:	jle    0x430958
  43092b:	fwait
  43092c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43092d:	pusha  
  43092e:	sbb    al,0x47
  430930:	(bad)  
  430931:	jo     0x4308f7
  430933:	mov    esp,0x82d5aca0
  430938:	clc    
  430939:	cld    
  43093a:	xchg   ebx,eax
  43093b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43093c:	add    eax,DWORD PTR [ecx-0x67]
  43093f:	mov    edi,ebp
  430941:	frstor [edi+0x31]
  430944:	xor    edi,DWORD PTR ds:0xd1405262
  43094a:	sub    dl,BYTE PTR [ebx+0x75]
  43094d:	out    dx,eax
  43094e:	(bad)  
  43094f:	pop    ebp
  430950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430951:	inc    edx
  430952:	mov    bh,0xf1
  430954:	imul   edi,DWORD PTR [eax-0x25d6187c],0x4e1fe230
  43095e:	jnp    0x430950
  430960:	xor    DWORD PTR [ebx+0x2528bd49],ebx
  430966:	shl    DWORD PTR [edx-0x5187249c],0x34
  43096d:	mov    bh,0x68
  43096f:	aad    0x61
  430971:	into   
  430972:	mov    al,ds:0x25003e3d
  430977:	xchg   esp,eax
  430978:	hlt    
  430979:	loop   0x430920
  43097b:	mov    edx,0xdca56260
  430980:	jmp    0xf60a:0x71a6a13a
  430987:	jae    0x4309f4
  430989:	cwde   
  43098a:	mov    ds:0x7ddfb01e,eax
  43098f:	add    esp,DWORD PTR [eax]
  430991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430992:	or     bh,BYTE PTR [eax+0x62]
  430995:	push   ebp
  430996:	mov    cs,ebx
  430998:	xchg   ecx,esi
  43099a:	dec    edi
  43099b:	xchg   esp,eax
  43099c:	cmp    dl,dl
  43099e:	sub    DWORD PTR [ebp-0x1c],esp
  4309a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4309a2:	xchg   edx,eax
  4309a3:	mov    WORD PTR [ebx],gs
  4309a5:	je     0x430a05
  4309a7:	adc    al,BYTE PTR [edx+edi*1]
  4309aa:	ins    BYTE PTR es:[edi],dx
  4309ab:	call   FWORD PTR [eax]
  4309ad:	xor    dh,BYTE PTR [edi]
  4309af:	iret   
  4309b0:	push   cs
  4309b1:	push   ds
  4309b2:	mov    esi,0xf53598e2
  4309b7:	loope  0x4309d1
  4309b9:	retf   0x209a
  4309bc:	xchg   edi,eax
  4309bd:	or     esi,ebp
  4309bf:	imul   edi,esp,0x66
  4309c2:	ins    DWORD PTR es:[edi],dx
  4309c3:	rcl    DWORD PTR [ecx-0x5f],cl
  4309c6:	xor    al,0xce
  4309c8:	push   edi
  4309c9:	sub    BYTE PTR [esi-0x66],0xf9
  4309cd:	mov    eax,gs
  4309cf:	loope  0x430955
  4309d1:	jmp    0x7129ed5f
  4309d6:	xchg   ch,al
  4309d8:	retf   0x184e
  4309db:	sub    eax,0x2340eab5
  4309e0:	sub    BYTE PTR [edx],cl
  4309e2:	pushf  
  4309e3:	cmp    BYTE PTR [esi],al
  4309e5:	and    ch,BYTE PTR [esp+edx*4-0x26]
  4309e9:	sub    edi,ebx
  4309eb:	jle    0x430a61
  4309ed:	fsubr  DWORD PTR [eax-0x68]
  4309f0:	sub    al,0x16
  4309f2:	xchg   ebx,eax
  4309f3:	test   eax,0x2c054fb2
  4309f8:	and    ebp,edx
  4309fa:	(bad)  
  4309fb:	adc    eax,DWORD PTR [esi-0x57685b2c]
  430a01:	loop   0x430a26
  430a03:	xor    eax,0xc3adb76e
  430a08:	lods   al,BYTE PTR ds:[esi]
  430a09:	pop    es
  430a0a:	test   dh,dl
  430a0c:	data16 (bad) 
  430a0e:	jg     0x4309af
  430a10:	ficom  WORD PTR [edi+0x73]
  430a13:	cli    
  430a14:	inc    edi
  430a15:	retf   0xf917
  430a18:	scas   eax,DWORD PTR es:[edi]
  430a19:	mov    cs,WORD PTR [esi+0x2b]
  430a1c:	shl    BYTE PTR [ebp-0x1c],cl
  430a1f:	(bad)  
  430a20:	push   ss
  430a21:	cmp    DWORD PTR [edx+0x16],ecx
  430a24:	pop    ecx
  430a25:	jne    0x4309ba
  430a27:	jmp    0xe9754f6
  430a2c:	shl    BYTE PTR [ebp+ebp*4-0x5f],0x7b
  430a31:	or     cl,BYTE PTR [esi+0x27d45b0e]
  430a37:	or     BYTE PTR [edi],ah
  430a39:	jp     0x430a4f
  430a3b:	xchg   ebx,eax
  430a3c:	mov    esp,0x3d9cd131
  430a41:	jmp    0x430a64
  430a43:	sub    bl,BYTE PTR gs:[ecx]
  430a46:	xchg   edx,eax
  430a47:	inc    ebp
  430a48:	fcom   DWORD PTR [ecx-0x35]
  430a4b:	xor    BYTE PTR [esi],al
  430a4d:	xor    cl,BYTE PTR [eax]
  430a4f:	test   bh,bh
  430a51:	retf   0x3a54
  430a54:	aad    0x5
  430a56:	dec    esi
  430a57:	adc    DWORD PTR [ebx+0x52c825c6],edi
  430a5d:	hlt    
  430a5e:	ins    DWORD PTR es:[edi],dx
  430a5f:	mov    ds:0xd1b51b5b,al
  430a64:	inc    ebp
  430a65:	add    al,0xa3
  430a67:	je     0x430a74
  430a69:	scas   al,BYTE PTR es:[edi]
  430a6a:	popf   
  430a6b:	fnstcw WORD PTR [ebx+ecx*1]
  430a6e:	lahf   
  430a6f:	dec    eax
  430a70:	fwait
  430a71:	jo     0x430aab
  430a73:	das    
  430a74:	aas    
  430a75:	inc    eax
  430a76:	push   esp
  430a77:	push   esp
  430a78:	push   0x259678ab
  430a7d:	cmc    
  430a7e:	shl    DWORD PTR [esi+0x4d13707],1
  430a84:	sti    
  430a85:	fwait
  430a86:	xor    eax,0x36bbe67e
  430a8b:	adc    dh,0x31
  430a8e:	push   eax
  430a8f:	fnstenv [eax]
  430a91:	fdivr  DWORD PTR [edi]
  430a93:	out    dx,al
  430a94:	mov    esi,0x3c83d1b9
  430a99:	and    DWORD PTR [edx+0x70c17c0e],eax
  430a9f:	pop    ds
  430aa0:	jg     0x430a2b
  430aa2:	sbb    eax,0xc655d240
  430aa7:	push   ebx
  430aa8:	test   eax,0x3ae00058
  430aad:	call   0xbee6398b
  430ab2:	push   ss
  430ab3:	jp     0x430a78
  430ab5:	out    dx,al
  430ab6:	fisubr DWORD PTR [eax]
  430ab8:	les    ebx,FWORD PTR [ecx+edi*1]
  430abb:	dec    ebx
  430abc:	xchg   ebx,eax
  430abd:	retf   0x6577
  430ac0:	int3   
  430ac1:	cmp    BYTE PTR [ebx],cl
  430ac3:	test   esp,ecx
  430ac5:	push   ss
  430ac6:	mov    ecx,0x910573b5
  430acb:	sub    al,0xf1
  430acd:	xchg   ebp,eax
  430ace:	hlt    
  430acf:	or     edx,DWORD PTR [edi+ebp*8-0x5d93eee2]
  430ad6:	pop    esp
  430ad7:	scas   al,BYTE PTR es:[edi]
  430ad8:	fldenv [edi+0x7]
  430adb:	retf   0x856
  430ade:	push   ecx
  430adf:	enter  0x394c,0xe2
  430ae3:	lods   al,BYTE PTR ds:[esi]
  430ae4:	push   ds
  430ae5:	add    al,0x19
  430ae7:	fld    QWORD PTR [edi]
  430ae9:	mov    ebp,DWORD PTR [edi+edx*2]
  430aec:	cmp    DWORD PTR [ecx+0x4899c454],ebx
  430af2:	test   BYTE PTR [edi+0x675bdde7],cl
  430af8:	std    
  430af9:	jp     0x430abe
  430afb:	mov    edx,0x92b67e9c
  430b00:	fsubr  QWORD PTR [ebx+eax*2+0x26]
  430b04:	retf   
  430b05:	add    bl,ah
  430b07:	test   al,0x98
  430b09:	leave  
  430b0a:	loopne 0x430b54
  430b0c:	cwde   
  430b0d:	jno    0x430acb
  430b0f:	adc    bh,BYTE PTR [eax]
  430b11:	mov    BYTE PTR [edx-0x4b],cl
  430b14:	ret    
  430b15:	ret    
  430b16:	sbb    al,BYTE PTR [esi-0x50]
  430b19:	(bad)  
  430b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b1b:	push   0x49e92898
  430b20:	aaa    
  430b21:	rcl    edx,cl
  430b23:	add    ecx,DWORD PTR [edi]
  430b25:	adc    al,0xf7
  430b27:	add    DWORD PTR [esp+ebp*8],ecx
  430b2a:	stos   BYTE PTR es:[edi],al
  430b2b:	(bad)  
  430b2c:	dec    edi
  430b2d:	(bad)  [ebx+ebp*2]
  430b30:	popf   
  430b31:	out    0x24,al
  430b33:	(bad)  
  430b34:	and    eax,0x215c8c12
  430b39:	mov    ds:0x1de3b219,al
  430b3e:	ss pop edi
  430b40:	(bad)  
  430b41:	fisttp QWORD PTR [edx-0x65]
  430b44:	and    BYTE PTR [ebx+eax*4-0x3f9e7733],cl
  430b4b:	mov    ds:0x6a00822f,eax
  430b50:	lods   eax,DWORD PTR ds:[esi]
  430b51:	jmp    0x2cd4:0x59ffd1f5
  430b58:	(bad)  
  430b59:	cmp    al,bl
  430b5b:	mov    ds:0x82f5ddc1,al
  430b60:	test   DWORD PTR [edi-0x2e],ebp
  430b63:	and    DWORD PTR [edx-0x43],edx
  430b66:	jns    0x430bd5
  430b68:	jmp    0x101d471b
  430b6d:	int    0x97
  430b6f:	into   
  430b70:	fwait
  430b71:	daa    
  430b72:	rol    DWORD PTR [ebx+0x3f],cl
  430b75:	and    al,0x28
  430b77:	mov    cl,0xf3
  430b79:	jecxz  0x430b34
  430b7b:	xlat   BYTE PTR ds:[ebx]
  430b7c:	mul    BYTE PTR [ecx-0x7482daab]
  430b82:	xor    dh,dh
  430b84:	cmp    esp,DWORD PTR [esi]
  430b86:	outs   dx,DWORD PTR ds:[esi]
  430b87:	out    0x9e,eax
  430b89:	jb     0x430c06
  430b8b:	stc    
  430b8c:	out    dx,al
  430b8d:	xor    DWORD PTR [ecx-0xc],edi
  430b90:	dec    ebp
  430b91:	pop    edi
  430b92:	fnstsw WORD PTR [esi]
  430b94:	sub    BYTE PTR [edx],cl
  430b96:	rcr    DWORD PTR [ecx-0x6f],cl
  430b99:	sbb    bh,dh
  430b9b:	xchg   ecx,eax
  430b9c:	or     edx,ebp
  430b9e:	stos   DWORD PTR es:[edi],eax
  430b9f:	mov    al,0x23
  430ba1:	loope  0x430b2f
  430ba3:	into   
  430ba4:	repz out dx,al
  430ba6:	sbb    al,0x78
  430ba8:	sbb    BYTE PTR [ecx-0x2a],dh
  430bab:	out    dx,eax
  430bac:	or     DWORD PTR [esp+ecx*2+0x38],ebx
  430bb0:	imul   ebp,DWORD PTR [eax+0x7f32f61c],0xb31797e7
  430bba:	jge    0x430b3c
  430bbc:	sbb    dh,al
  430bbe:	xor    ch,BYTE PTR [esi-0x37]
  430bc1:	cmp    DWORD PTR [edi+0x5441d6ce],eax
  430bc7:	cs out 0x5e,eax
  430bca:	push   es
  430bcb:	dec    ecx
  430bcc:	das    
  430bcd:	push   0x46
  430bcf:	(bad)  [edi+0x3d]
  430bd2:	lods   al,BYTE PTR ds:[esi]
  430bd3:	adc    DWORD PTR [esi+0x1ecf10aa],0x4b534a2f
  430bdd:	mov    edx,0x1ac4d9d0
  430be2:	lods   al,BYTE PTR ds:[esi]
  430be3:	iret   
  430be4:	(bad)  
  430be5:	aam    0xf6
  430be7:	add    al,0x70
  430be9:	cmc    
  430bea:	and    eax,0xea8c0262
  430bef:	in     eax,0x76
  430bf1:	xor    eax,DWORD PTR [ebp+0x4344e0cd]
  430bf7:	add    al,0x24
  430bf9:	jmp    0x8ea41f19
  430bfe:	pop    ds
  430bff:	sbb    al,0xd6
  430c01:	std    
  430c02:	push   0xffffffe5
  430c04:	pop    edx
  430c05:	dec    edx
  430c06:	in     eax,0xbb
  430c08:	js     0x430c59
  430c0a:	jmp    0x430c03
  430c0c:	idiv   ah
  430c0e:	lahf   
  430c0f:	xchg   edx,eax
  430c10:	push   eax
  430c11:	sub    eax,0xefd1c24e
  430c16:	cmp    ebp,esi
  430c18:	cmc    
  430c19:	fsubr  QWORD PTR [edi+0x2b]
  430c1c:	in     al,dx
  430c1d:	xchg   ebp,eax
  430c1e:	(bad)
  430c22:	ss add eax,0x5b771d52
  430c28:	(bad)  
  430c29:	fmul   QWORD PTR [edx-0x61]
  430c2c:	xchg   edx,eax
  430c2d:	call   0xc976b872
  430c32:	inc    edi
  430c33:	jbe    0x430c5a
  430c35:	push   ecx
  430c36:	rol    BYTE PTR gs:[edi+0x7d538397],0xf3
  430c3e:	lock push 0xffffffeb
  430c41:	rcr    esp,1
  430c43:	inc    ebx
  430c44:	clc    
  430c45:	push   ds
  430c46:	cmp    edx,DWORD PTR [eax-0x5e9f8f91]
  430c4c:	dec    ebp
  430c4d:	mov    al,0x97
  430c4f:	test   eax,0xe1cfd4ba
  430c54:	and    BYTE PTR [esi],bh
  430c56:	or     BYTE PTR [ebx+0x67a089b8],ah
  430c5c:	in     eax,0xb4
  430c5e:	dec    esi
  430c5f:	adc    BYTE PTR [ecx-0x67735595],bh
  430c65:	and    ebx,eax
  430c67:	popf   
  430c68:	add    dh,BYTE PTR [edi]
  430c6a:	fst    DWORD PTR [esi+ecx*8]
  430c6d:	dec    ebx
  430c6e:	rcr    DWORD PTR [esi-0x6dac0fe1],1
  430c74:	jae    0x430cee
  430c76:	pop    ecx
  430c77:	sbb    ebp,DWORD PTR [eax-0x3c]
  430c7a:	jp     0x430c6f
  430c7c:	inc    ebx
  430c7d:	mov    esp,0xae2b2809
  430c82:	add    ecx,esi
  430c84:	jg     0x430cc9
  430c86:	int    0x43
  430c88:	mul    BYTE PTR [eax]
  430c8a:	dec    esi
  430c8b:	jbe    0x430cee
  430c8d:	xor    DWORD PTR [eax-0x5e],ecx
  430c90:	je     0x430cfc
  430c92:	fmul   QWORD PTR [edi+esi*2+0x6a]
  430c96:	jecxz  0x430cff
  430c98:	fld    DWORD PTR [ebx]
  430c9a:	repz pusha 
  430c9c:	pop    ds
  430c9d:	pop    edx
  430c9e:	cmp    al,bl
  430ca0:	inc    ebx
  430ca1:	popa   
  430ca2:	ins    BYTE PTR es:[edi],dx
  430ca3:	xor    edx,DWORD PTR [ebp+0x65fcbc34]
  430ca9:	dec    eax
  430caa:	aam    0xbe
  430cac:	test   edx,esp
  430cae:	outs   dx,DWORD PTR ds:[esi]
  430caf:	dec    ebx
  430cb0:	ret    
  430cb1:	shl    dl,cl
  430cb3:	imul   esp,DWORD PTR [ecx],0x18822083
  430cb9:	ret    0x4a98
  430cbc:	int    0xc6
  430cbe:	nop
  430cbf:	fisubr DWORD PTR [ebp-0x5d]
  430cc2:	pop    ss
  430cc3:	adc    eax,DWORD PTR [edi+0xb]
  430cc6:	push   edx
  430cc7:	data16 int 0x25
  430cca:	into   
  430ccb:	inc    ebx
  430ccc:	adc    BYTE PTR ds:0x477d092b,bl
  430cd2:	or     DWORD PTR [esi],esp
  430cd4:	aaa    
  430cd5:	imul   ebp,DWORD PTR [edi],0x32
  430cd8:	repnz xchg esp,eax
  430cda:	aaa    
  430cdb:	mov    bl,0x6e
  430cdd:	ss dec ebp
  430cdf:	inc    esi
  430ce0:	pop    ds
  430ce1:	mov    ds:0x5e8ac1f2,eax
  430ce6:	lods   al,BYTE PTR ds:[esi]
  430ce7:	ss pop es
  430ce9:	xchg   esp,eax
  430cea:	push   0x4a3b288f
  430cef:	xchg   edx,eax
  430cf0:	mov    bh,0x3
  430cf2:	push   es
  430cf3:	icebp  
  430cf4:	ret    0x67cd
  430cf7:	adc    eax,0x2cf62ea4
  430cfc:	movq   mm6,mm1
  430cff:	mov    ebp,DWORD PTR [eax+0x5db608df]
  430d05:	call   0xc199:0xfd323037
  430d0c:	adc    BYTE PTR [ebx],dh
  430d0e:	shr    DWORD PTR [esi+0x2c0b7240],cl
  430d14:	cdq    
  430d15:	and    edi,ebp
  430d17:	cmp    ah,al
  430d19:	dec    edi
  430d1a:	mov    ah,0x73
  430d1c:	xor    bl,BYTE PTR [ebx-0x50c3a979]
  430d22:	push   es
  430d23:	hlt    
  430d24:	outs   dx,BYTE PTR ds:[esi]
  430d25:	les    ebp,FWORD PTR [ebp-0x41e32071]
  430d2b:	pop    ds
  430d2c:	mov    dl,0xd6
  430d2e:	dec    edi
  430d2f:	mov    BYTE PTR [ebx],al
  430d31:	(bad)  
  430d32:	jmp    0x98a51056
  430d37:	push   ebx
  430d38:	lock xchg esi,eax
  430d3a:	out    dx,eax
  430d3b:	sub    bh,BYTE PTR [ebp+0x11]
  430d3e:	outs   dx,BYTE PTR ds:[esi]
  430d3f:	cmp    al,0x7e
  430d41:	fst    st(2)
  430d43:	or     ch,cl
  430d45:	fdivrp st(2),st
  430d47:	inc    ebp
  430d48:	out    0xfb,eax
  430d4a:	dec    eax
  430d4b:	sbb    BYTE PTR [edx+0x443526c2],ah
  430d51:	inc    edi
  430d52:	xor    bh,BYTE PTR [ebp-0x9]
  430d55:	daa    
  430d56:	jne    0x430d29
  430d58:	dec    esi
  430d59:	sub    cl,BYTE PTR [edi-0x38]
  430d5c:	add    ah,0xa9
  430d5f:	aam    0x53
  430d61:	push   esi
  430d62:	or     al,0xbb
  430d64:	inc    edx
  430d65:	mov    eax,0x26ef5384
  430d6a:	push   ecx
  430d6b:	in     eax,dx
  430d6c:	sbb    dh,cl
  430d6e:	push   esp
  430d6f:	mov    cl,0x24
  430d71:	sti    
  430d72:	mov    ebx,?
  430d74:	sub    eax,DWORD PTR [ebp+0x67]
  430d77:	push   edi
  430d78:	div    DWORD PTR [ebx]
  430d7a:	gs push ss
  430d7c:	pusha  
  430d7d:	repnz nop
  430d7f:	cli    
  430d80:	xchg   ecx,eax
  430d81:	xor    al,0xef
  430d83:	aam    0xe
  430d85:	add    DWORD PTR [esi-0x2d],edi
  430d88:	repnz adc edx,DWORD PTR [ebp-0x6a]
  430d8c:	cmp    BYTE PTR [edi],dh
  430d8e:	js     0x430dad
  430d90:	sbb    ebp,DWORD PTR [ebp+0x36]
  430d93:	pop    esi
  430d94:	rcl    DWORD PTR [ebx-0x2ba6f812],1
  430d9a:	pop    esi
  430d9b:	aam    0x36
  430d9d:	mov    BYTE PTR [esi+edx*8],dh
  430da0:	enter  0xa949,0xf4
  430da4:	outs   dx,DWORD PTR ds:[esi]
  430da5:	push   ecx
  430da6:	or     DWORD PTR [eax],ecx
  430da8:	pop    ds
  430da9:	jecxz  0x430dd2
  430dab:	ins    DWORD PTR es:[edi],dx
  430dac:	pop    eax
  430dad:	sti    
  430dae:	fld    QWORD PTR ds:[ebx-0x45]
  430db2:	sbb    ecx,DWORD PTR [edx+0x16684611]
  430db8:	lods   al,BYTE PTR ds:[esi]
  430db9:	mov    bl,0x3a
  430dbb:	xor    al,0x96
  430dbd:	inc    edi
  430dbe:	dec    esp
  430dbf:	dec    ebx
  430dc0:	std    
  430dc1:	ds (bad) 
  430dc3:	retf   
  430dc4:	int    0x66
  430dc6:	ror    DWORD PTR [edx+0x5ce68e29],1
  430dcc:	in     al,0xfb
  430dce:	add    bl,BYTE PTR [ecx-0x3c1d97fb]
  430dd4:	out    dx,eax
  430dd5:	repnz ins BYTE PTR es:[edi],dx
  430dd7:	xlat   BYTE PTR ds:[ebx]
  430dd8:	retf   
  430dd9:	lods   al,BYTE PTR ds:[esi]
  430dda:	pop    esp
  430ddb:	stos   BYTE PTR es:[edi],al
  430ddc:	mov    bh,0x51
  430dde:	enter  0xb389,0x5e
  430de2:	and    ah,BYTE PTR [edi]
  430de4:	les    esp,FWORD PTR [ecx+0x33]
  430de7:	mov    ebp,0xc2bdeb0b
  430dec:	cli    
  430ded:	stc    
  430dee:	test   eax,0xecb4342d
  430df3:	push   esi
  430df4:	iret   
  430df5:	mov    dh,0x30
  430df7:	fcom   QWORD PTR [eax+0x61]
  430dfa:	js     0x430dfd
  430dfc:	add    edi,DWORD PTR [esi]
  430dfe:	ds xchg edx,edi
  430e01:	sub    bl,BYTE PTR [edx]
  430e03:	and    al,0xa3
  430e05:	lods   eax,DWORD PTR ds:[esi]
  430e06:	(bad)  [edi+ecx*2-0x19]
  430e0a:	cmp    ebp,DWORD PTR [ecx-0x54632c61]
  430e10:	into   
  430e11:	enter  0x8510,0xf0
  430e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e16:	and    ebp,DWORD PTR [ebp+edi*8-0x54]
  430e1a:	aas    
  430e1b:	push   edi
  430e1c:	pusha  
  430e1d:	pop    ecx
  430e1e:	push   es
  430e1f:	xchg   edi,eax
  430e20:	mov    edx,0x9c5a3b5d
  430e25:	addr16 in eax,0xb6
  430e28:	jo     0x430df4
  430e2a:	xlat   BYTE PTR ds:[ebx]
  430e2b:	leave  
  430e2c:	(bad)  
  430e2d:	ins    BYTE PTR es:[edi],dx
  430e2e:	and    eax,0xe58f9955
  430e33:	fisub  DWORD PTR [esi]
  430e35:	push   ss
  430e36:	dec    edi
  430e37:	mov    BYTE PTR [bp+di],ch
  430e3a:	push   ebx
  430e3b:	jnp    0x430e1b
  430e3d:	test   eax,0xfa4efb38
  430e42:	jp     0x430dcd
  430e44:	ret    0xfcf0
  430e47:	cmp    al,al
  430e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e4a:	xchg   edi,eax
  430e4b:	mov    al,0x50
  430e4d:	fstp   DWORD PTR [edi]
  430e4f:	mov    esp,0xb9dd4a58
  430e54:	fadd   st(5),st
  430e56:	imul   ebp,DWORD PTR [esi+0x299a18b0],0x68dbcd3e
  430e60:	push   esi
  430e61:	outs   dx,DWORD PTR gs:[esi]
  430e63:	inc    esi
  430e64:	mov    eax,0x575075d9
  430e69:	call   0x6ef67616
  430e6e:	mov    ds:0x7e8e4551,eax
  430e73:	and    BYTE PTR es:[eax+0x60],cl
  430e77:	cmc    
  430e78:	or     cl,BYTE PTR [ebx]
  430e7a:	push   ss
  430e7b:	push   ds
  430e7c:	xchg   DWORD PTR [esi-0x54],ecx
  430e7f:	sbb    bl,BYTE PTR [ebx-0x6e]
  430e82:	leave  
  430e83:	sub    eax,0x2864f254
  430e88:	sub    edi,DWORD PTR [eax-0x55]
  430e8b:	push   0x53
  430e8d:	out    0xbb,al
  430e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e90:	inc    ebp
  430e91:	repnz mov al,0x68
  430e94:	ins    DWORD PTR es:[edi],dx
  430e95:	sahf   
  430e96:	sbb    dl,BYTE PTR [ebp+0x7cb9d8db]
  430e9c:	das    
  430e9d:	mov    ecx,DWORD PTR [ebp-0x277e8de2]
  430ea3:	hlt    
  430ea4:	or     al,0x3e
  430ea6:	mov    edi,0x1bd442c2
  430eab:	sub    al,0xbf
  430ead:	ror    ah,1
  430eaf:	outs   dx,BYTE PTR ds:[esi]
  430eb0:	ret    0x9fcb
  430eb3:	xchg   esp,eax
  430eb4:	fwait
  430eb5:	add    bl,bl
  430eb7:	in     eax,0x20
  430eb9:	clc    
  430eba:	push   cs
  430ebb:	out    dx,eax
  430ebc:	aas    
  430ebd:	push   edi
  430ebe:	jge    0x430e98
  430ec0:	and    eax,0x462fa099
  430ec5:	pop    ds
  430ec6:	mov    ebp,0x735a85ce
  430ecb:	adc    bh,BYTE PTR fs:[bp+di-0x7507]
  430ed1:	dec    edi
  430ed2:	mov    ebp,0x34a1be7d
  430ed7:	loop   0x430f4d
  430ed9:	mov    dh,0x46
  430edb:	push   edx
  430edc:	sbb    al,0xee
  430ede:	and    esi,DWORD PTR [esi-0x4408fd83]
  430ee4:	sbb    edx,DWORD PTR [edx+0x2e7a8c58]
  430eea:	jo     0x430ed7
  430eec:	out    0x54,al
  430eee:	mov    edx,0x2d029519
  430ef3:	mov    eax,DWORD PTR [edx-0x2a]
  430ef6:	arpl   WORD PTR [ecx-0x373b6268],bx
  430efc:	ficomp DWORD PTR [ebx+eax*1]
  430eff:	xor    BYTE PTR [ebx+0x6c],dl
  430f02:	xor    esp,DWORD PTR [esi+0xb]
  430f05:	rcr    BYTE PTR [edi-0x1a310894],0x61
  430f0c:	mov    cl,ah
  430f0e:	mov    ebp,0xf2e48493
  430f13:	ins    BYTE PTR es:[edi],dx
  430f14:	arpl   WORD PTR [ecx],bx
  430f16:	inc    esi
  430f17:	idiv   BYTE PTR [esi]
  430f19:	push   es
  430f1a:	xchg   DWORD PTR [edx],ebp
  430f1c:	fs scas al,BYTE PTR es:[edi]
  430f1e:	mov    ?,WORD PTR [ebp+0x7f]
  430f21:	dec    eax
  430f22:	ror    BYTE PTR [edx+0x1539124],cl
  430f28:	rcl    BYTE PTR [ecx+0x5da89ccc],0x18
  430f2f:	pop    ebp
  430f30:	ja     0x430f55
  430f32:	stos   DWORD PTR es:[edi],eax
  430f33:	mov    edx,0xf36a6780
  430f38:	sub    al,0xad
  430f3a:	outs   dx,DWORD PTR ds:[esi]
  430f3b:	jnp    0x430f56
  430f3d:	xor    bl,BYTE PTR [esi+0x1a]
  430f40:	pop    edi
  430f41:	sub    BYTE PTR [edi+0x4f],dh
  430f44:	add    DWORD PTR [ebp-0x36],esi
  430f47:	lahf   
  430f48:	push   edi
  430f49:	dec    ebx
  430f4a:	ret    
  430f4b:	ins    DWORD PTR es:[edi],dx
  430f4c:	pop    ds
  430f4d:	xlat   BYTE PTR ds:[ebx]
  430f4e:	pop    eax
  430f4f:	retf   0xc1ac
  430f52:	sbb    eax,0x6e652bc3
  430f57:	add    cl,BYTE PTR [eax+eax*1-0x42]
  430f5b:	(bad)  
  430f5c:	adc    BYTE PTR [eax+0x291b7d1c],al
  430f62:	ja     0x430fe1
  430f64:	xchg   ebp,eax
  430f65:	cdq    
  430f66:	sbb    DWORD PTR fs:[esp+edi*8],ebp
  430f6a:	push   edx
  430f6b:	mov    esp,0x8d01e89d
  430f70:	dec    esi
  430f71:	ret    0x9444
  430f74:	or     eax,DWORD PTR [ebx]
  430f76:	test   dl,ch
  430f78:	popf   
  430f79:	mov    dh,0x71
  430f7b:	xchg   esi,eax
  430f7c:	push   ebx
  430f7d:	mov    cl,0xce
  430f7f:	jle    0x430fea
  430f81:	and    al,0x15
  430f83:	push   ecx
  430f84:	push   esp
  430f85:	ret    
  430f86:	push   edx
  430f87:	jmp    0xb886:0xa7fa1f2d
  430f8e:	test   DWORD PTR [eax+ecx*8+0x2a],esi
  430f92:	js     0x430fba
  430f94:	call   0xe6591d1b
  430f99:	inc    ebx
  430f9a:	xchg   esi,eax
  430f9b:	push   esp
  430f9c:	xor    DWORD PTR [edx],ebx
  430f9e:	aad    0x3f
  430fa0:	jle    0x430faf
  430fa2:	rol    BYTE PTR [ebx+0xb4f955d],1
  430fa8:	stos   BYTE PTR es:[edi],al
  430fa9:	mov    bl,0xe9
  430fab:	cli    
  430fac:	(bad)  
  430fad:	in     eax,dx
  430fae:	mov    ds:0x74c3ba36,eax
  430fb3:	loope  0x430ff7
  430fb5:	jecxz  0x430ffb
  430fb7:	xchg   DWORD PTR [eax+0xa],ebx
  430fba:	nop
  430fbb:	jo     0x43103c
  430fbd:	iret   
  430fbe:	jl     0x430f43
  430fc0:	jno    0x43101e
  430fc2:	xchg   ebx,eax
  430fc3:	pop    ss
  430fc4:	call   DWORD PTR [esi+ecx*1-0x37]
  430fc8:	xor    bh,dl
  430fca:	cld    
  430fcb:	imul   eax,DWORD PTR [eax],0x3
  430fce:	add    edi,DWORD PTR [edx]
  430fd0:	std    
  430fd1:	outs   dx,BYTE PTR ds:[esi]
  430fd2:	xor    eax,0x705f0aa4
  430fd7:	pop    edx
  430fd8:	(bad)  
  430fda:	pop    esi
  430fdb:	cmp    DWORD PTR [ebp+0x4277de47],edi
  430fe1:	cmc    
  430fe2:	fsubrp st(4),st
  430fe4:	add    DWORD PTR [edx],esp
  430fe6:	test   eax,0xc90de5e8
  430feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fec:	xchg   esi,eax
  430fed:	popa   
  430fee:	inc    ebp
  430fef:	int    0x43
  430ff1:	mov    ch,0x96
  430ff3:	jbe    0x431031
  430ff5:	add    esi,DWORD PTR [ebx]
  430ff7:	mov    esp,DWORD PTR [edx+0x20]
  430ffa:	jg     0x431019
  430ffc:	sbb    BYTE PTR [ebp-0x1a5fa382],ch
  431002:	ret    0xde07
  431005:	outs   dx,BYTE PTR ds:[esi]
  431006:	(bad)  
  431007:	mov    bh,0x45
  431009:	loop   0x431026
  43100b:	sub    al,0x3b
  43100d:	aam    0x36
  43100f:	or     DWORD PTR [ebx+0x34],0x46
  431013:	pop    ss
  431014:	aad    0x31
  431016:	add    ebx,edi
  431018:	mov    esp,0xa26444c
  43101d:	retf   
  43101e:	cmp    DWORD PTR [edx],eax
  431020:	(bad)  
  431021:	pop    ss
  431022:	or     ah,bh
  431024:	aad    0x7f
  431026:	xchg   ebx,eax
  431027:	(bad)  
  431028:	mov    al,ds:0xd8e6aebc
  43102d:	iret   
  43102e:	mov    ecx,0xe1687313
  431033:	pop    ss
  431034:	mov    ecx,DWORD PTR [esi+0x4ac2d7e8]
  43103a:	mov    al,0xc
  43103c:	add    cl,BYTE PTR gs:[ecx+0x74]
  431040:	xchg   edx,eax
  431041:	mov    ds:0xa93a986d,eax
  431046:	stos   DWORD PTR es:[edi],eax
  431047:	fst    DWORD PTR [esi+0x5421d947]
  43104d:	sub    bl,al
  43104f:	dec    edi
  431050:	shl    ebx,cl
  431052:	sub    al,0x10
  431054:	mov    BYTE PTR [ecx-0x3af2b294],bl
  43105a:	lods   al,BYTE PTR ds:[esi]
  43105b:	stos   DWORD PTR es:[edi],eax
  43105c:	jp     0x4310b9
  43105e:	inc    edi
  43105f:	mov    dl,0x78
  431061:	cmp    DWORD PTR [edx+0x54],esi
  431064:	mov    bh,cl
  431066:	or     dh,BYTE PTR [edi]
  431068:	ins    BYTE PTR es:[edi],dx
  431069:	cmp    DWORD PTR [ebp+0x6eed2f2c],0x22
  431070:	hlt    
  431071:	outs   dx,BYTE PTR ds:[esi]
  431072:	inc    esp
  431073:	jge    0x43108d
  431075:	in     eax,0xf6
  431077:	gs xor dh,0xac
  43107b:	test   eax,0xa24ef7f3
  431080:	jmp    DWORD PTR [edx+0x46]
  431083:	dec    eax
  431084:	aas    
  431085:	lods   al,BYTE PTR ds:[esi]
  431086:	dec    edx
  431087:	xchg   DWORD PTR [esi],ebx
  431089:	cmp    BYTE PTR [esi+0xedd8fa9],bh
  43108f:	retf   0x9ef9
  431092:	or     al,0xa1
  431094:	inc    eax
  431095:	(bad)  
  431096:	and    BYTE PTR [ebx+0x6da36c8f],bh
  43109c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43109d:	cdq    
  43109e:	cmp    bl,dl
  4310a0:	sbb    eax,0xe0d98a9
  4310a5:	pop    edx
  4310a6:	adc    eax,0x10a443dc
  4310ab:	mul    DWORD PTR [ebx+ebp*8+0x25bf869f]
  4310b2:	cwde   
  4310b3:	xchg   ebp,eax
  4310b4:	pop    ecx
  4310b5:	aam    0xa1
  4310b7:	fistp  QWORD PTR [edx+edx*8]
  4310ba:	enter  0xb8ba,0xce
  4310be:	inc    esi
  4310bf:	outs   dx,DWORD PTR ds:[esi]
  4310c0:	cmp    bl,bh
  4310c2:	fwait
  4310c3:	out    0x3b,al
  4310c5:	and    DWORD PTR ds:0x78c1acfd,esp
  4310cb:	sub    al,0x64
  4310cd:	data16 loope 0x4310c8
  4310d0:	das    
  4310d1:	and    ah,BYTE PTR [esi+esi*2]
  4310d4:	fstp   QWORD PTR [edi+0x1fa94e88]
  4310da:	cmp    ah,BYTE PTR [edx+0x78]
  4310dd:	jg     0x4310cc
  4310df:	sbb    BYTE PTR [ebp+0x3f15e712],bl
  4310e5:	and    DWORD PTR [edi-0x50],esp
  4310e8:	shl    BYTE PTR [edi],1
  4310ea:	dec    esi
  4310eb:	inc    ecx
  4310ec:	inc    esp
  4310ed:	fs sub al,0xdc
  4310f0:	inc    esi
  4310f1:	xchg   edi,eax
  4310f2:	mov    ecx,cs
  4310f4:	cmp    DWORD PTR [edi],edx
  4310f6:	cli    
  4310f7:	ss neg bh
  4310fa:	imul   BYTE PTR [edi-0x3a53f174]
  431100:	test   DWORD PTR [ebp-0x33],eax
  431103:	ins    DWORD PTR es:[edi],dx
  431104:	enter  0x3503,0x53
  431108:	lods   eax,DWORD PTR ds:[esi]
  431109:	aas    
  43110a:	xor    DWORD PTR [eax],esi
  43110c:	std    
  43110d:	sub    ah,BYTE PTR [edx+esi*4+0x66]
  431111:	pop    ebx
  431112:	(bad)  [ecx]
  431114:	ds inc esp
  431116:	les    ebx,FWORD PTR [esi-0x20936767]
  43111c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43111d:	or     al,ch
  43111f:	cwde   
  431120:	add    eax,0xd9120e66
  431125:	mov    edi,0xdb34c111
  43112a:	jnp    0x4310b1
  43112c:	cmp    eax,0x11b18bf
  431131:	inc    edx
  431132:	ins    BYTE PTR es:[edi],dx
  431133:	jns    0x431185
  431135:	(bad)  
  431136:	push   esi
  431137:	jno    0x431104
  431139:	cwde   
  43113a:	imul   esp,DWORD PTR [eax],0xfffffff0
  43113d:	shl    BYTE PTR [ebx-0x42df8543],1
  431143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431144:	cmp    eax,0x27657a0c
  431149:	mov    ss,eax
  43114b:	es ins BYTE PTR es:[edi],dx
  43114d:	leave  
  43114e:	cli    
  43114f:	mov    ds:0x5354490a,eax
  431154:	scas   eax,DWORD PTR es:[edi]
  431155:	popf   
  431156:	loopne 0x431168
  431158:	ss jnp 0x431159
  43115b:	mov    ebp,0x86bccf5d
  431160:	mov    al,ds:0xa3d53546
  431165:	lods   al,BYTE PTR ds:[esi]
  431166:	push   eax
  431167:	push   ds
  431168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431169:	lds    ecx,FWORD PTR [edi+0x40]
  43116c:	push   esp
  43116d:	imul   ecx,DWORD PTR [eax+0x1d1a9f25],0xfcece23c
  431177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431178:	cld    
  431179:	dec    ebp
  43117a:	and    esp,DWORD PTR [edi]
  43117c:	shl    edi,1
  43117e:	mov    esi,0x811f07bd
  431183:	pop    ebx
  431184:	dec    edx
  431185:	ins    DWORD PTR es:[edi],dx
  431186:	adc    BYTE PTR [esi+edi*4],ch
  431189:	inc    edx
  43118a:	and    dh,BYTE PTR [ebx-0x2a641123]
  431190:	mov    esi,0x8275fca5
  431195:	loop   0x4311d3
  431197:	add    ebx,DWORD PTR [esi+0x48]
  43119a:	loope  0x431149
  43119c:	jmp    0x43114f
  43119e:	je     0x4311f0
  4311a0:	popf   
  4311a1:	cdq    
  4311a2:	cmp    DWORD PTR [ebx+edx*2-0x85d5e3a],0x40
  4311aa:	sbb    ah,BYTE PTR [edx]
  4311ac:	xor    ebp,DWORD PTR [ebp-0x74]
  4311af:	add    DWORD PTR [edi+0x35],0x2d459b56
  4311b6:	adc    eax,0xe1af1c96
  4311bb:	xchg   ebp,eax
  4311bc:	mov    cl,0xea
  4311be:	push   ss
  4311bf:	loopne 0x431202
  4311c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311c2:	cmp    DWORD PTR [eax],ebp
  4311c4:	xor    al,0xed
  4311c6:	sbb    ch,BYTE PTR [edx]
  4311c8:	jg     0x4311fd
  4311ca:	(bad)  
  4311cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4311cc:	repnz add DWORD PTR [ecx-0x2fc7b815],0xde090888
  4311d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4311d8:	or     eax,0x4c4d24e6
  4311dd:	mov    ecx,0x7357f6bf
  4311e2:	inc    esp
  4311e3:	xor    DWORD PTR fs:[ebx+0x297be563],eax
  4311ea:	out    dx,eax
  4311eb:	add    DWORD PTR [ebx-0x4b],ebp
  4311ee:	mov    dl,0x76
  4311f0:	xor    DWORD PTR [edi-0x7f263464],ebp
  4311f6:	test   BYTE PTR ds:0xe4b010f5,cl
  4311fc:	push   eax
  4311fd:	push   edx
  4311fe:	sub    bh,BYTE PTR [edx]
  431200:	out    0x73,al
  431202:	dec    eax
  431203:	inc    esp
  431204:	sub    edi,DWORD PTR [ebx]
  431206:	add    ah,BYTE PTR [ebp+0x5b15cd83]
  43120c:	cli    
  43120d:	aam    0xc4
  43120f:	sbb    cl,al
  431211:	and    dh,BYTE PTR [esi+0x27eeaa62]
  431217:	mov    DWORD PTR [eax+0x1e],esp
  43121a:	sub    BYTE PTR [esi+esi*4+0x12882665],dh
  431221:	mov    eax,0xf63cf766
  431226:	mov    dl,0x28
  431228:	daa    
  431229:	mov    ecx,0x1a7a6add
  43122e:	fstp   QWORD PTR [ebp+esi*4-0x18]
  431232:	add    al,BYTE PTR [edx]
  431234:	retf   0x4392
  431237:	arpl   WORD PTR [esi-0x40520d71],ax
  43123d:	pop    eax
  43123e:	retf   0x83d4
  431241:	sar    BYTE PTR [ebp+0xf9c4b32],cl
  431247:	xchg   esp,eax
  431248:	das    
  431249:	mov    BYTE PTR [edx],cl
  43124b:	and    eax,0x1a58eb7
  431250:	stos   BYTE PTR es:[edi],al
  431251:	add    eax,0xe6ca41a2
  431256:	cmp    al,0xd8
  431258:	call   0x449bbffa
  43125d:	or     al,0x16
  43125f:	addr16 popa 
  431261:	adc    al,BYTE PTR [ebp+0x63]
  431264:	xor    al,BYTE PTR [eax+0x667e7ca6]
  43126a:	xchg   dx,ax
  43126c:	int3   
  43126d:	addr16 dec ebp
  43126f:	sbb    eax,0xe09b3117
  431274:	stos   DWORD PTR es:[edi],eax
  431275:	sbb    al,BYTE PTR [edx+0x6acb245f]
  43127b:	and    dl,BYTE PTR [edx]
  43127d:	in     al,0x71
  43127f:	test   bh,al
  431281:	inc    ebp
  431282:	ins    BYTE PTR es:[edi],dx
  431283:	jo     0x4312c6
  431285:	sub    eax,DWORD PTR [esi-0x6615cda4]
  43128b:	dec    ebx
  43128c:	xchg   ebx,eax
  43128d:	xlat   BYTE PTR ds:[ebx]
  43128e:	ins    BYTE PTR es:[edi],dx
  43128f:	xchg   esi,eax
  431290:	push   ss
  431291:	test   DWORD PTR [edx],edi
  431293:	inc    esi
  431294:	stos   DWORD PTR es:[edi],eax
  431295:	mov    bh,0x52
  431297:	in     al,0x2e
  431299:	inc    ecx
  43129a:	ja     0x431266
  43129c:	aaa    
  43129d:	call   0xc3843b55
  4312a2:	xlat   BYTE PTR ds:[ebx]
  4312a3:	cs mov ah,0xf
  4312a6:	sub    BYTE PTR [edi-0x304347d9],ah
  4312ac:	out    0x55,eax
  4312ae:	jl     0x431295
  4312b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4312b1:	mov    ebx,0x3010795b
  4312b6:	jge    0x431315
  4312b8:	outs   dx,WORD PTR ds:[esi]
  4312ba:	inc    edx
  4312bb:	(bad)  
  4312bc:	mul    BYTE PTR [ebx]
  4312be:	mov    esp,0x66279133
  4312c3:	pop    ss
  4312c4:	frstor [ebx+0x32]
  4312c7:	push   edx
  4312c8:	outs   dx,DWORD PTR ds:[esi]
  4312c9:	out    dx,al
  4312ca:	xor    DWORD PTR [ebx-0x78ec5b25],ebp
  4312d0:	aam    0x4d
  4312d2:	imul   esi,DWORD PTR [eax+0x2b32028e],0xffffffe4
  4312d9:	or     eax,0x3cd92678
  4312de:	jbe    0x431352
  4312e0:	fidivr WORD PTR [ecx]
  4312e2:	sub    BYTE PTR [eax],dh
  4312e4:	push   ecx
  4312e5:	add    cl,dh
  4312e7:	sahf   
  4312e8:	das    
  4312e9:	ret    0x861c
  4312ec:	xchg   esp,eax
  4312ed:	dec    ebx
  4312ee:	ret    0x8b47
  4312f1:	mov    dh,0xb5
  4312f3:	push   es
  4312f4:	cmp    eax,0x215091e7
  4312f9:	popf   
  4312fa:	or     al,0x55
  4312fc:	add    DWORD PTR ds:0x312e3fa4,esi
  431302:	push   esi
  431303:	xor    DWORD PTR [edi-0x11],eax
  431306:	mov    bl,0xc0
  431308:	shr    dl,cl
  43130a:	adc    BYTE PTR [ebx+edi*2+0x271e1870],ch
  431311:	jbe    0x431360
  431313:	push   esp
  431314:	pushf  
  431315:	sbb    bl,BYTE PTR [edi-0x28058b97]
  43131b:	into   
  43131c:	xchg   esi,eax
  43131d:	stos   BYTE PTR es:[edi],al
  43131e:	outs   dx,DWORD PTR ds:[esi]
  43131f:	cmp    dh,BYTE PTR [esi-0x1cd0e442]
  431325:	mov    dl,BYTE PTR [edi+esi*8+0x3]
  431329:	scas   al,BYTE PTR es:[edi]
  43132a:	cwde   
  43132b:	add    esp,DWORD PTR [esi+0x63801599]
  431331:	aas    
  431332:	lds    esi,FWORD PTR [esi]
  431334:	aam    0x31
  431336:	pop    esp
  431337:	dec    eax
  431338:	mov    edi,0xbfd3b454
  43133d:	fisttp QWORD PTR [esi-0x6d66918b]
  431343:	data16 (bad) 
  431345:	pop    ss
  431346:	xchg   eax,edx
  431348:	and    BYTE PTR [ebx],cl
  43134a:	loopne 0x431318
  43134c:	nop
  43134d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43134e:	cwde   
  43134f:	mov    al,BYTE PTR [ebp+0x357b6249]
  431355:	repz xor eax,0x8ebca4a6
  43135b:	sub    eax,0x3693e982
  431360:	in     eax,dx
  431361:	popf   
  431362:	xchg   ebp,eax
  431363:	setp   BYTE PTR [esi+0x6bf48105]
  43136a:	cld    
  43136b:	out    dx,al
  43136c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43136d:	aad    0x32
  43136f:	icebp  
  431370:	sbb    esp,DWORD PTR [edi+0x13]
  431373:	aad    0x73
  431375:	and    bl,BYTE PTR ds:0xd8d27056
  43137b:	mov    eax,0xf5772031
  431380:	es icebp 
  431382:	jns    0x431372
  431384:	xchg   ebp,eax
  431385:	pop    esp
  431386:	add    al,0x79
  431388:	outs   dx,DWORD PTR ds:[esi]
  431389:	bt     DWORD PTR [edi],0x59
  43138d:	ret    
  43138e:	ins    BYTE PTR es:[edi],dx
  43138f:	mov    edx,0x70872ee6
  431394:	stos   DWORD PTR es:[edi],eax
  431395:	adc    eax,0x21ce3e54
  43139a:	push   ebp
  43139b:	jl     0x4313bb
  43139d:	repz scas eax,DWORD PTR es:[edi]
  43139f:	not    DWORD PTR [edx+0x3b]
  4313a2:	mov    esp,0xe60ad989
  4313a7:	inc    eax
  4313a8:	xchg   esi,eax
  4313a9:	call   0x9086e8a1
  4313ae:	cmp    al,0xd3
  4313b0:	jne    0x43139f
  4313b2:	dec    eax
  4313b3:	push   ecx
  4313b4:	adc    DWORD PTR [ecx+ecx*4-0x5b617d81],0x67
  4313bc:	xchg   ecx,eax
  4313bd:	outs   dx,BYTE PTR ds:[esi]
  4313be:	add    dh,cl
  4313c0:	lds    ebp,FWORD PTR [esi+0x59]
  4313c3:	mov    al,ds:0x73d1b7be
  4313c8:	daa    
  4313c9:	bound  ebx,QWORD PTR [esi-0x3c955570]
  4313cf:	mov    ah,0x39
  4313d1:	push   0x6e080b
  4313d6:	loopne 0x43139d
  4313d8:	lds    ebp,FWORD PTR gs:[ecx]
  4313db:	sbb    al,0x34
  4313dd:	das    
  4313de:	dec    esi
  4313df:	and    al,0xa5
  4313e1:	pop    ds
  4313e2:	add    BYTE PTR [eax],0x26
  4313e5:	cwde   
  4313e6:	sub    edx,DWORD PTR fs:[edx-0x76]
  4313ea:	and    esp,DWORD PTR [edi+0xb]
  4313ed:	dec    esi
  4313ee:	rol    edi,0xf4
  4313f1:	xor    DWORD PTR [ecx+ebp*4+0x54],0xff3f3bb0
  4313f9:	hlt    
  4313fa:	xchg   ecx,eax
  4313fb:	jge    0x431429
  4313fd:	sbb    DWORD PTR [eax-0x293fcb8c],esi
  431403:	mov    edi,0xcf6424ea
  431408:	stos   DWORD PTR es:[edi],eax
  431409:	cld    
  43140a:	stos   DWORD PTR es:[edi],eax
  43140b:	mov    edx,0x746914e8
  431410:	xchg   BYTE PTR [eax-0x34],dl
  431413:	add    DWORD PTR [eax],0x266e2a5
  431419:	aas    
  43141a:	pop    ecx
  43141b:	pop    esp
  43141c:	test   eax,0x9f79d35b
  431421:	jo     0x4313bc
  431423:	call   0xe24e1c3e
  431428:	sbb    al,0xb0
  43142a:	xchg   esi,eax
  43142b:	bound  edx,QWORD PTR [edi]
  43142d:	dec    esp
  43142e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43142f:	in     eax,dx
  431430:	adc    al,0xdb
  431432:	cmp    ebp,esi
  431434:	inc    esp
  431435:	jae    0x431421
  431437:	push   ecx
  431438:	jns    0x431476
  43143a:	dec    esi
  43143b:	das    
  43143c:	(bad)  
  43143d:	push   ebp
  43143e:	sub    edi,DWORD PTR [eax]
  431440:	push   ebp
  431441:	sub    cl,cl
  431443:	test   al,0x5d
  431445:	pushf  
  431446:	inc    esp
  431447:	arpl   WORD PTR [esi+0x27169540],si
  43144d:	int3   
  43144e:	sbb    eax,0x1450e1f1
  431453:	pop    edx
  431454:	sub    ecx,ebp
  431456:	adc    eax,0x2923837b
  43145b:	int3   
  43145c:	mov    dl,BYTE PTR [edx+0x23]
  43145f:	or     eax,0x10113d24
  431464:	(bad)  
  431465:	xor    al,0x3e
  431467:	iret   
  431468:	xchg   ecx,eax
  431469:	jmp    0xfd11:0xe52e903a
  431470:	cwde   
  431471:	pushf  
  431472:	push   esi
  431473:	mov    ebp,0xd6d97b6c
  431478:	sbb    BYTE PTR [eax-0x7149331f],dh
  43147e:	cdq    
  43147f:	add    al,0x66
  431481:	hlt    
  431482:	fs xor ebx,eax
  431485:	icebp  
  431486:	cli    
  431487:	or     DWORD PTR [edi+0x51],edi
  43148a:	mov    fs,WORD PTR [eax]
  43148c:	repz mov ebp,DWORD PTR [esi]
  43148f:	call   0xed4f:0x90240562
  431496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431497:	push   ebx
  431498:	mov    dh,0xf9
  43149a:	retf   
  43149b:	jl     0x4314ea
  43149d:	aad    0x3c
  43149f:	pop    ecx
  4314a0:	mov    al,0x56
  4314a2:	outs   dx,DWORD PTR ds:[esi]
  4314a3:	enter  0xee5e,0xe
  4314a7:	jl     0x43146c
  4314a9:	xchg   edi,eax
  4314aa:	psrlw  mm3,QWORD PTR [esp+esi*8-0x5c]
  4314af:	and    BYTE PTR [eax+0x80c3dd9],ch
  4314b5:	and    eax,DWORD PTR [esi+edx*2+0x3677dfe6]
  4314bc:	retf   0x71dd
  4314bf:	pop    ss
  4314c0:	mov    ah,0xf1
  4314c2:	add    BYTE PTR [ebx-0x33],dl
  4314c5:	and    BYTE PTR [ebp+0x11],dl
  4314c8:	or     BYTE PTR [eax],bh
  4314ca:	or     al,0x32
  4314cc:	mov    BYTE PTR [ebx],al
  4314ce:	ror    BYTE PTR [edi],1
  4314d0:	jle    0x431528
  4314d2:	addr16 mov bh,ah
  4314d5:	retf   0x4d76
  4314d8:	xchg   edi,eax
  4314d9:	mov    al,ds:0xf38b905d
  4314de:	cmp    edi,DWORD PTR [edi+0x5173c524]
  4314e4:	jmp    0xf271:0xf6c1b0ce
  4314eb:	or     DWORD PTR [ecx-0x33],0x44
  4314ef:	clc    
  4314f0:	lahf   
  4314f1:	popa   
  4314f2:	sahf   
  4314f3:	in     al,0xde
  4314f5:	test   BYTE PTR [eax],bh
  4314f7:	sbb    ebx,DWORD PTR [eax-0x59]
  4314fa:	retf   0x9fe7
  4314fd:	arpl   WORD PTR [edi-0x4],si
  431500:	in     eax,0xc9
  431502:	es loop 0x43150d
  431505:	inc    ecx
  431506:	jnp    0x431507
  431508:	out    dx,al
  431509:	daa    
  43150a:	sub    al,0xe2
  43150c:	add    BYTE PTR [ebx+0x19],bl
  43150f:	pop    ebx
  431510:	adc    ecx,DWORD PTR [edx]
  431512:	pop    es
  431513:	fbld   TBYTE PTR [eax]
  431515:	cmp    esp,esp
  431517:	(bad)
  43151b:	aaa    
  43151c:	jns    0x431562
  43151e:	adc    cl,dh
  431520:	xor    al,0xf5
  431522:	mov    ah,0xc9
  431524:	arpl   cx,di
  431526:	and    BYTE PTR [eax+0x1e],bl
  431529:	jp     0x431538
  43152b:	xor    eax,0x858e3369
  431530:	cmc    
  431531:	shr    BYTE PTR [edi],1
  431533:	adc    al,0xa7
  431535:	add    esp,edi
  431537:	retf   
  431538:	ret    
  431539:	cs and esp,ebx
  43153c:	pushf  
  43153d:	ret    0x91c9
  431540:	ss addr16 mov dl,0x79
  431544:	test   BYTE PTR [edi+0x7df1954c],0x55
  43154b:	lods   eax,DWORD PTR ds:[esi]
  43154c:	jl     0x43158c
  43154e:	cmp    BYTE PTR [ebx+eax*4-0xae38bae],ah
  431555:	mov    al,ds:0x29bb8a6e
  43155a:	sbb    eax,DWORD PTR [ebx+0x4094568]
  431560:	das    
  431561:	mov    ecx,0xeed447a4
  431566:	adc    eax,0xfccb0fcc
  43156b:	sbb    eax,0x8d3a3ba1
  431570:	repnz (bad) 
  431572:	shl    ah,cl
  431574:	mov    ebp,0x810fce67
  431579:	xchg   edx,eax
  43157a:	mov    esi,0x1dd3601e
  43157f:	fsub   st(0),st
  431581:	fstp   st(3)
  431583:	mov    eax,0xb7682214
  431588:	lock cwde 
  43158a:	xor    edi,DWORD PTR [ebx]
  43158c:	jbe    0x431536
  43158e:	jo     0x431565
  431590:	xor    al,0xab
  431592:	xchg   esp,eax
  431593:	test   eax,0x46fb408c
  431598:	add    ebx,DWORD PTR [edi+0x5a]
  43159b:	xchg   ecx,eax
  43159c:	pop    edx
  43159d:	sti    
  43159e:	arpl   WORD PTR [esp+edi*8-0x1e],si
  4315a2:	mov    al,ds:0xd95328dd
  4315a7:	(bad)  
  4315a8:	pop    ebx
  4315a9:	(bad)  
  4315aa:	cld    
  4315ab:	mov    WORD PTR [ecx+0x14232b9d],fs
  4315b1:	jnp    0x43162b
  4315b3:	inc    edx
  4315b4:	jo     0x431541
  4315b6:	adc    DWORD PTR [edx+ecx*8-0x66],0xffffffc1
  4315bb:	sub    dl,BYTE PTR [ecx-0x5f]
  4315be:	add    eax,0x5ce3208a
  4315c3:	xor    DWORD PTR [esi+0x64],ebx
  4315c6:	mov    eax,ds:0x9fc44b85
  4315cb:	add    eax,0xb94bb795
  4315d0:	mov    edx,0x77f7945d
  4315d5:	mov    ebp,0xb1fdc0f0
  4315da:	and    dl,BYTE PTR [ecx]
  4315dc:	aad    0xfc
  4315de:	cmp    dh,BYTE PTR [eax+0x3a5bb411]
  4315e4:	cmc    
  4315e5:	bt     DWORD PTR [eax+0x753c0157],edx
  4315ec:	js     0x43163e
  4315ee:	je     0x43159e
  4315f0:	mov    cl,dh
  4315f2:	jb     0x431639
  4315f4:	mov    dh,0xa6
  4315f6:	imul   ebp,ecx,0x48
  4315f9:	in     eax,dx
  4315fa:	mov    dl,BYTE PTR [eax+0x6a]
  4315fd:	ffree  st(4)
  4315ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431600:	push   esp
  431601:	bswap  esp
  431603:	outs   dx,DWORD PTR ds:[esi]
  431604:	cmp    cl,BYTE PTR [ebx-0x44]
  431607:	sbb    eax,ebx
  431609:	cwde   
  43160a:	dec    edi
  43160b:	fwait
  43160c:	inc    ecx
  43160d:	inc    esp
  43160e:	dec    ebx
  43160f:	call   0xc1f3:0x85b90435
  431616:	call   0xfa6c2c2f
  43161b:	stos   DWORD PTR es:[edi],eax
  43161c:	sbb    esp,esi
  43161e:	stos   DWORD PTR es:[edi],eax
  43161f:	in     al,dx
  431620:	(bad)  
  431621:	frstor [ebp+0x14]
  431624:	pop    eax
  431625:	cmc    
  431626:	stc    
  431627:	or     DWORD PTR [edi+ebp*1],esi
  43162a:	jmp    0x523d2fd3
  43162f:	sbb    ecx,DWORD PTR [edx]
  431631:	jmp    0x4409:0xa6964a00
  431638:	scas   eax,DWORD PTR es:[edi]
  431639:	adc    BYTE PTR [edi-0x77d5c388],bh
  43163f:	mov    eax,0xd538f51f
  431644:	add    eax,0x43f49c77
  431649:	outs   dx,BYTE PTR ds:[esi]
  43164a:	stos   BYTE PTR es:[edi],al
  43164b:	mov    al,ds:0x3b31f4cb
  431650:	sbb    bh,cl
  431652:	pop    esi
  431653:	(bad)  
  431654:	retf   
  431655:	(bad)  
  431656:	out    0x22,eax
  431658:	jns    0x431646
  43165a:	mov    ebp,0x1f2c76c4
  43165f:	pop    esi
  431660:	mov    ch,0x59
  431662:	test   eax,0x50ec8d4e
  431667:	sub    al,BYTE PTR [eax]
  431669:	jno    0x4316ca
  43166b:	into   
  43166c:	es cdq 
  43166e:	push   esi
  43166f:	or     al,0x5f
  431671:	icebp  
  431672:	rol    DWORD PTR [ecx-0x7b],cl
  431675:	jg     0x43165f
  431677:	xchg   ecx,eax
  431678:	add    DWORD PTR [edi+ebx*8-0x2d],esi
  43167c:	sub    eax,0x25ffa3e9
  431681:	lods   al,BYTE PTR ds:[esi]
  431682:	test   ax,sp
  431685:	rcl    DWORD PTR [eax+esi*8-0x1fb5e27f],1
  43168c:	jno    0x43170b
  43168e:	and    BYTE PTR [ebx+0x59],dl
  431691:	icebp  
  431692:	das    
  431693:	mov    BYTE PTR [esi-0x19],ah
  431696:	and    bh,BYTE PTR [eax+0x3e]
  431699:	jb     0x4316cc
  43169b:	push   esi
  43169c:	adc    BYTE PTR [ebx],dl
  43169e:	(bad)  
  43169f:	mov    edi,0x9183383c
  4316a4:	inc    ebp
  4316a5:	into   
  4316a6:	push   ds
  4316a7:	xor    bh,al
  4316a9:	das    
  4316aa:	cld    
  4316ab:	sbb    edx,DWORD PTR [ebp-0x44]
  4316ae:	aad    0x17
  4316b0:	mov    esi,0xc5e770d3
  4316b5:	repz sub BYTE PTR gs:[edx],dh
  4316b9:	dec    esp
  4316ba:	dec    ecx
  4316bb:	jl     0x43173b
  4316bd:	sbb    al,0xac
  4316bf:	dec    ebp
  4316c0:	fimul  WORD PTR [ebx]
  4316c2:	outs   dx,BYTE PTR ds:[esi]
  4316c3:	in     eax,dx
  4316c4:	cmp    ah,dl
  4316c6:	inc    ecx
  4316c7:	pop    ebx
  4316c8:	push   cs
  4316c9:	mov    bl,0xff
  4316cb:	or     eax,0x7ab54e77
  4316d0:	cmp    bh,dh
  4316d2:	mov    DWORD PTR [ecx-0x6ca68172],eax
  4316d8:	pusha  
  4316d9:	enter  0xe00d,0x28
  4316dd:	nop
  4316de:	lods   eax,DWORD PTR ds:[esi]
  4316df:	fwait
  4316e0:	out    0xb8,al
  4316e2:	push   ds
  4316e3:	outs   dx,BYTE PTR ds:[esi]
  4316e4:	popf   
  4316e5:	dec    esi
  4316e6:	xor    al,0x2
  4316e8:	mov    ds:0xf523f155,eax
  4316ed:	int    0xe0
  4316ef:	in     eax,0x40
  4316f1:	popa   
  4316f2:	call   0x447e0409
  4316f7:	cmp    ah,BYTE PTR [ecx]
  4316f9:	inc    edi
  4316fa:	fs pop ds
  4316fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4316fd:	popa   
  4316fe:	dec    esi
  4316ff:	sub    BYTE PTR [edx],bh
  431701:	or     al,0x9a
  431703:	xchg   ecx,eax
  431704:	or     DWORD PTR [ecx],esp
  431706:	std    
  431707:	arpl   WORD PTR [ecx],di
  431709:	into   
  43170a:	jmp    0xce02:0x46b4c1a1
  431711:	push   0x15
  431713:	add    esi,ebp
  431715:	popf   
  431716:	push   ecx
  431717:	dec    ebx
  431718:	lock retf 0x5957
  43171c:	aad    0xf1
  43171e:	add    eax,0xd415786e
  431723:	outs   dx,BYTE PTR ds:[esi]
  431724:	sub    al,0xfc
  431726:	ret    
  431727:	xlat   BYTE PTR ds:[ebx]
  431728:	cwde   
  431729:	mov    ds:0xe2915612,eax
  43172e:	iret   
  43172f:	lahf   
  431730:	mov    bh,0xab
  431732:	xlat   BYTE PTR ds:[ebx]
  431733:	std    
  431734:	int    0xf0
  431736:	or     edi,DWORD PTR [esi+0x1a8172c0]
  43173c:	repz int3 
  43173e:	frstor [ebx-0x685687ee]
  431744:	mov    dh,BYTE PTR [esi+0x1a]
  431747:	aam    0x52
  431749:	mov    dh,0x73
  43174b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43174c:	fisub  WORD PTR ds:0xee035d2b
  431752:	test   al,0xa8
  431754:	dec    eax
  431755:	pop    ebx
  431756:	pop    ds
  431757:	pop    edi
  431758:	into   
  431759:	mov    bh,0x94
  43175b:	aas    
  43175c:	das    
  43175d:	loop   0x431736
  43175f:	xor    DWORD PTR [edi+0x460a3818],0x11
  431766:	sahf   
  431767:	jge    0x43179b
  431769:	xchg   edi,eax
  43176a:	sti    
  43176b:	xchg   esi,eax
  43176c:	icebp  
  43176d:	sti    
  43176e:	add    al,0xd0
  431770:	mov    DWORD PTR [ecx+0x57],0xb59e4be2
  431777:	popa   
  431778:	push   esp
  431779:	leave  
  43177a:	push   esi
  43177b:	sub    BYTE PTR [ecx+0x7],bl
  43177e:	fcmovbe st,st(3)
  431780:	ds in  al,0xa3
  431783:	cmp    al,0xfc
  431785:	hlt    
  431786:	jle    0x4317f4
  431788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431789:	mov    ebx,0xa93fee71
  43178e:	xchg   DWORD PTR [ebx-0x30],edi
  431791:	mov    DWORD PTR [edx+0x68],edx
  431794:	dec    edx
  431795:	add    bh,dh
  431797:	pop    esi
  431798:	and    BYTE PTR ss:[esi],ch
  43179b:	push   ebp
  43179c:	pop    esi
  43179d:	adc    bl,BYTE PTR [ecx+eiz*1]
  4317a0:	add    BYTE PTR [esp+ecx*2+0x7c],ah
  4317a4:	fsubr  DWORD PTR ds:0xdefef592
  4317aa:	mov    ?,WORD PTR [esp+ecx*2-0x49]
  4317ae:	or     dh,BYTE PTR [ebx-0x14b9fe1d]
  4317b4:	js     0x4317c3
  4317b6:	and    DWORD PTR [esi+0x4be3840e],edi
  4317bc:	scas   al,BYTE PTR es:[edi]
  4317bd:	jb     0x43176a
  4317bf:	push   ebx
  4317c0:	sub    edi,ebx
  4317c2:	cmc    
  4317c3:	and    esi,DWORD PTR [ebx+0x76]
  4317c6:	retf   
  4317c7:	add    eax,0x65a0d034
  4317cc:	ret    
  4317cd:	jbe    0x4317c2
  4317cf:	or     dl,al
  4317d1:	out    dx,al
  4317d2:	mov    edi,0xf48aa542
  4317d7:	xchg   esi,eax
  4317d8:	jmp    0x3ecb:0x5e2a7985
  4317df:	sub    eax,0xc31d8864
  4317e4:	xchg   BYTE PTR [esi+ecx*1],ah
  4317e7:	and    BYTE PTR [ecx+0x5b],bh
  4317ea:	mul    BYTE PTR [edx-0x12]
  4317ed:	jo     0x431842
  4317ef:	cmp    BYTE PTR [ecx+0x7f1f3c82],bl
  4317f5:	int    0x1b
  4317f7:	popa   
  4317f8:	std    
  4317f9:	xchg   ebx,eax
  4317fa:	stc    
  4317fb:	paddd  mm1,QWORD PTR [ebp+edi*1+0xfd5b24e]
  431803:	cwde   
  431804:	sbb    al,0x41
  431806:	inc    BYTE PTR [ecx]
  431808:	or     bl,BYTE PTR [ebx-0x28b19c99]
  43180e:	gs sti 
  431810:	shr    DWORD PTR [ecx+eax*4+0x309113db],0xb5
  431818:	jp     0x431811
  43181a:	cdq    
  43181b:	mov    bl,0x24
  43181d:	push   edi
  43181e:	ss push es
  431820:	push   edx
  431821:	lds    edi,FWORD PTR [edi+eiz*8-0x5e]
  431825:	pop    ds
  431826:	and    DWORD PTR [esi],esp
  431828:	out    0x3b,al
  43182a:	adc    BYTE PTR [ecx-0x803dfca],ah
  431830:	sahf   
  431831:	inc    esi
  431832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431833:	gs inc ebx
  431835:	push   es
  431836:	imul   esi,DWORD PTR [edx+ebx*1],0xd4b9746f
  43183d:	mov    esi,0x9abe31cb
  431842:	mov    ds:0x5d13c705,eax
  431847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431848:	sbb    al,0x1
  43184a:	lods   al,BYTE PTR ds:[esi]
  43184b:	retf   0x8367
  43184e:	sub    cl,0xb9
  431851:	pop    ebx
  431852:	lock push cs
  431854:	push   esi
  431855:	and    ah,cl
  431857:	ins    BYTE PTR es:[edi],dx
  431858:	in     al,dx
  431859:	xor    dl,ch
  43185b:	ror    BYTE PTR [edx],cl
  43185d:	sar    DWORD PTR [ecx+edi*2+0x31],cl
  431861:	or     DWORD PTR [esi-0x31],edi
  431864:	out    dx,eax
  431865:	stc    
  431866:	outs   dx,BYTE PTR ds:[esi]
  431867:	jno    0x4318e5
  431869:	fcmovb st,st(1)
  43186b:	mov    cl,0x64
  43186d:	inc    ebp
  43186e:	xor    esp,eax
  431870:	pop    esp
  431871:	aaa    
  431872:	aaa    
  431873:	xor    BYTE PTR [edi+0x12de1f7f],bh
  431879:	popa   
  43187a:	cld    
  43187b:	and    BYTE PTR [edx-0x58],dh
  43187e:	sub    al,0x16
  431880:	and    DWORD PTR [eax],ebx
  431882:	outs   dx,DWORD PTR ds:[esi]
  431883:	and    eax,esi
  431885:	pop    eax
  431886:	inc    eax
  431887:	jg     0x4318f0
  431889:	push   es
  43188a:	add    bl,BYTE PTR [edx+ebx*8+0x4d]
  43188e:	loopne 0x4318bb
  431890:	pop    ebp
  431891:	xchg   edi,eax
  431892:	push   ecx
  431893:	stos   DWORD PTR es:[edi],eax
  431894:	scas   eax,DWORD PTR es:[edi]
  431895:	xchg   esi,eax
  431896:	rcr    DWORD PTR [ebx+0x26882cd7],1
  43189c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43189d:	sbb    BYTE PTR [ecx],dh
  43189f:	sti    
  4318a0:	ret    0x8ae8
  4318a3:	mov    ch,0x38
  4318a5:	sub    eax,0xe0f60525
  4318aa:	mov    ebx,0x26c317c9
  4318af:	lahf   
  4318b0:	inc    ebx
  4318b1:	and    BYTE PTR [ebp+0x52491392],ah
  4318b7:	outs   dx,DWORD PTR ds:[esi]
  4318b8:	daa    
  4318b9:	std    
  4318ba:	retf   
  4318bb:	inc    esi
  4318bc:	jmp    0x5f37892d
  4318c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318c2:	adc    bl,al
  4318c4:	push   0x6b
  4318c6:	imul   ebp,DWORD PTR [esi],0x53
  4318c9:	or     al,0xc3
  4318cb:	mov    DWORD PTR [edx],ecx
  4318cd:	sbb    edx,DWORD PTR [ebp+0x41]
  4318d0:	stc    
  4318d1:	cdq    
  4318d2:	push   edx
  4318d3:	push   ss
  4318d4:	jb     0x431952
  4318d6:	(bad)  
  4318d7:	xchg   edx,eax
  4318d8:	adc    edi,ebx
  4318da:	lds    esi,FWORD PTR [edi-0x4a]
  4318dd:	pushf  
  4318de:	mov    DWORD PTR [ecx],esp
  4318e0:	sub    esi,DWORD PTR [ebp-0xa8cc20a]
  4318e6:	jl     0x4318be
  4318e8:	push   edi
  4318e9:	jne    0x4318d4
  4318eb:	and    BYTE PTR [edx],dl
  4318ed:	loopne 0x43187e
  4318ef:	jle    0x431944
  4318f1:	clc    
  4318f2:	push   es
  4318f3:	pop    esi
  4318f4:	jp     0x43193d
  4318f6:	in     al,dx
  4318f7:	xor    ch,BYTE PTR [ecx]
  4318f9:	cdq    
  4318fa:	gs enter 0xf480,0x9c
  4318ff:	rcl    BYTE PTR ds:0xf3d32d11,cl
  431905:	jno    0x4318df
  431907:	jl     0x4318ed
  431909:	sbb    DWORD PTR [edi],eax
  43190b:	js     0x4318b6
  43190d:	into   
  43190e:	addr16 and ebx,esi
  431911:	aas    
  431912:	inc    eax
  431913:	nop
  431914:	out    0x72,eax
  431916:	mov    ds:0xd1f46aa,eax
  43191b:	sub    ah,cl
  43191d:	inc    edx
  43191e:	push   cs
  43191f:	xchg   ebx,eax
  431920:	adc    bl,BYTE PTR [eax-0x1e5ba979]
  431926:	test   al,0x41
  431928:	into   
  431929:	add    DWORD PTR [ecx+0x3f2a874],eax
  43192f:	inc    ebx
  431930:	mov    al,0x81
  431932:	adc    si,si
  431935:	mov    esp,0x4b74afbe
  43193a:	push   edx
  43193b:	xlat   BYTE PTR ds:[ebx]
  43193c:	pop    ss
  43193d:	cmp    eax,0xb28f850c
  431942:	xor    eax,0x8b4c7392
  431947:	jp     0x43191f
  431949:	inc    esp
  43194a:	leave  
  43194b:	mov    ch,0xd9
  43194d:	es sub al,0x89
  431950:	in     al,dx
  431951:	dec    esi
  431952:	xlat   BYTE PTR ds:[ebx]
  431953:	cmp    DWORD PTR [edi+0x47],edx
  431956:	pop    ecx
  431957:	push   es
  431958:	or     BYTE PTR [edi-0x57fe8757],0x3a
  43195f:	jno    0x431939
  431961:	adc    DWORD PTR [edx+0x772d1184],esp
  431967:	(bad)  
  431968:	outs   dx,DWORD PTR ds:[esi]
  431969:	adc    edi,DWORD PTR [eax]
  43196b:	js     0x431954
  43196d:	sbb    eax,0xf06dd687
  431972:	push   ebp
  431973:	out    0x90,al
  431975:	inc    eax
  431976:	retf   
  431977:	jp     0x4319c9
  431979:	cdq    
  43197a:	sar    BYTE PTR [ebp-0x21],1
  43197d:	out    dx,al
  43197e:	ret    
  43197f:	cdq    
  431980:	inc    ecx
  431981:	ins    DWORD PTR es:[edi],dx
  431982:	fwait
  431983:	push   edi
  431984:	jp     0x43192a
  431986:	cmp    eax,0x22d29235
  43198b:	fidiv  WORD PTR [ecx+0x0]
  43198e:	fwait
  43198f:	dec    esi
  431990:	pushf  
  431991:	pushf  
  431992:	cwde   
  431993:	and    BYTE PTR [esi],dh
  431995:	jmp    0xe49f:0x5ad087b6
  43199c:	or     eax,0x9dc5989c
  4319a1:	jae    0x4319fd
  4319a3:	ret    0xeff4
  4319a6:	mov    ?,esi
  4319a8:	mov    DWORD PTR [edi+0x3b],edi
  4319ab:	imul   ebp,DWORD PTR [esi-0x61],0x35
  4319af:	std    
  4319b0:	mov    ah,0xc8
  4319b2:	add    BYTE PTR [ebx+0x65d60ce0],ch
  4319b8:	call   0xce06:0xfb701891
  4319bf:	je     0x43196c
  4319c1:	icebp  
  4319c2:	gs stos DWORD PTR es:[edi],eax
  4319c4:	inc    ebx
  4319c5:	shr    BYTE PTR [edi+0x12],0xc
  4319c9:	cli    
  4319ca:	xor    eax,0xb1ccb1eb
  4319cf:	arpl   bp,di
  4319d1:	sbb    ebx,DWORD PTR [ebx-0x26]
  4319d4:	fbstp  TBYTE PTR [edx+0x344c34c0]
  4319da:	dec    edx
  4319db:	inc    esi
  4319dc:	and    ebx,DWORD PTR [ecx]
  4319de:	dec    ebx
  4319df:	inc    ecx
  4319e0:	dec    eax
  4319e1:	dec    ebp
  4319e2:	mov    al,ds:0xab71c962
  4319e7:	daa    
  4319e8:	aaa    
  4319e9:	add    BYTE PTR [eax+eax*8+0x1e18f3f7],al
  4319f0:	popa   
  4319f1:	(bad)
  4319f4:	cmp    esi,DWORD PTR [edx-0x32]
  4319f7:	xchg   esp,eax
  4319f8:	pop    esi
  4319f9:	mov    al,ds:0x3daec142
  4319fe:	sbb    al,0xff
  431a00:	mov    ah,0xea
  431a02:	pop    esi
  431a03:	stos   DWORD PTR es:[edi],eax
  431a04:	lods   eax,DWORD PTR ds:[esi]
  431a05:	mov    eax,ds:0x569c1dec
  431a0a:	push   eax
  431a0b:	inc    ebx
  431a0c:	push   edi
  431a0d:	inc    ecx
  431a0e:	xchg   ebp,eax
  431a0f:	dec    esi
  431a10:	into   
  431a11:	(bad)  
  431a12:	in     eax,0xd
  431a14:	cwde   
  431a15:	jmp    0x431a12
  431a17:	jo     0x4319de
  431a19:	jle    0x431a8f
  431a1b:	(bad)
  431a1e:	mov    ds:0x170d746,al
  431a23:	fs lahf 
  431a25:	jnp    0x431a16
  431a27:	pop    eax
  431a28:	fld    TBYTE PTR [edi]
  431a2a:	outs   dx,DWORD PTR es:[esi]
  431a2c:	clc    
  431a2d:	ret    
  431a2e:	mov    DWORD PTR [esi],ebx
  431a30:	aad    0xa8
  431a32:	(bad)  [eax]
  431a34:	sbb    BYTE PTR [eax+0x2fa80e29],dh
  431a3a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  431a3c:	ror    DWORD PTR [edx-0x69b6511],1
  431a42:	xor    al,0xe0
  431a44:	in     al,dx
  431a45:	ror    ch,0xdb
  431a48:	call   0x62c410d0
  431a4d:	int    0xd9
  431a4f:	push   ds
  431a50:	pop    esi
  431a51:	mov    dh,0x9f
  431a53:	jno    0x431a12
  431a55:	pop    edx
  431a56:	mov    al,0x4c
  431a58:	(bad)  
  431a5a:	sub    ebp,DWORD PTR [edx+0x6f09fa4b]
  431a60:	inc    eax
  431a61:	add    al,0x10
  431a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a64:	int3   
  431a65:	sub    al,0x7f
  431a68:	int3   
  431a69:	les    edx,FWORD PTR [edi+ebx*4]
  431a6c:	aas    
  431a6d:	imul   ecx,DWORD PTR [eax-0x1],0xffffffc2
  431a71:	xchg   ebp,eax
  431a72:	sub    BYTE PTR [ecx],0xf0
  431a75:	je     0x431ab1
  431a77:	adc    BYTE PTR [edi-0x2d9a3ccf],dl
  431a7d:	int3   
  431a7e:	xor    ebx,DWORD PTR [esi-0xb]
  431a81:	popf   
  431a82:	clc    
  431a83:	adc    esi,edx
  431a85:	mov    al,0xc0
  431a87:	jne    0x431a7c
  431a89:	out    0x27,eax
  431a8b:	into   
  431a8c:	icebp  
  431a8d:	jnp    0x431a40
  431a8f:	je     0x431a84
  431a91:	mov    ds:0xd78edbc9,al
  431a96:	sub    al,0xc0
  431a98:	daa    
  431a99:	in     eax,0x17
  431a9b:	sub    eax,0x6acbceea
  431aa0:	outs   dx,BYTE PTR ds:[esi]
  431aa1:	js     0x431a90
  431aa3:	dec    esp
  431aa4:	fadd   DWORD PTR [eax+0x16a21115]
  431aaa:	sbb    al,0x2
  431aac:	outs   dx,DWORD PTR ds:[esi]
  431aad:	stc    
  431aae:	jp     0x431aec
  431ab0:	or     BYTE PTR [esi+0x70327e3e],ch
  431ab6:	xchg   edi,eax
  431ab7:	(bad)  
  431ab8:	ins    BYTE PTR es:[edi],dx
  431ab9:	sbb    DWORD PTR [edi],eax
  431abb:	and    esi,DWORD PTR [edi-0x33]
  431abe:	gs jecxz 0x431acf
  431ac1:	ficom  DWORD PTR [edx]
  431ac3:	out    dx,eax
  431ac4:	stos   DWORD PTR es:[edi],eax
  431ac5:	mov    es,WORD PTR [eax+0x522a6f2f]
  431acb:	or     al,0x8b
  431acd:	jl     0x431aaa
  431acf:	mov    bh,0x7b
  431ad1:	rcl    BYTE PTR [edi-0x7b84b763],1
  431ad7:	nop
  431ad8:	test   dh,0x82
  431adb:	into   
  431adc:	mov    ecx,0xad82eb03
  431ae1:	push   0xffffffd8
  431ae3:	in     eax,dx
  431ae4:	in     al,0xb1
  431ae6:	and    al,0x64
  431ae8:	outs   dx,BYTE PTR ds:[esi]
  431ae9:	push   esi
  431aea:	fistp  WORD PTR [ecx]
  431aec:	mov    esi,0x5501df34
  431af1:	fldenv [edi]
  431af3:	stos   DWORD PTR es:[edi],eax
  431af4:	cmp    al,bl
  431af6:	cdq    
  431af7:	pop    esi
  431af8:	inc    esi
  431af9:	sti    
  431afa:	sub    DWORD PTR [eax-0x5e],ecx
  431afd:	(bad)  
  431afe:	jge    0x431b1e
  431b00:	sar    cl,cl
  431b02:	in     al,0x55
  431b04:	loopne 0x431b6e
  431b06:	sub    ebx,ebp
  431b08:	ret    0x5b52
  431b0b:	dec    ebx
  431b0c:	icebp  
  431b0d:	push   0xa4b7b6ff
  431b12:	stos   DWORD PTR es:[edi],eax
  431b13:	jge    0x431b6a
  431b15:	xor    esi,edx
  431b17:	mov    ecx,0x3b1fc602
  431b1c:	retf   0x8e01
  431b1f:	dec    ebp
  431b20:	sub    esp,DWORD PTR [ebx-0x3c]
  431b23:	push   ss
  431b24:	dec    esp
  431b25:	addr16 mov dl,0xa9
  431b28:	mov    esi,0x99045055
  431b2d:	(bad)  
  431b2e:	(bad)
  431b31:	ins    BYTE PTR es:[edi],dx
  431b32:	mov    esi,0x2994bdb1
  431b37:	loop   0x431abf
  431b39:	cmp    al,0x70
  431b3b:	mov    ds:0xfa08b6d,eax
  431b40:	adc    al,0x89
  431b42:	int    0x57
  431b44:	iret   
  431b45:	scas   al,BYTE PTR es:[edi]
  431b46:	sbb    BYTE PTR [edx],ah
  431b48:	xchg   ecx,eax
  431b49:	aam    0x58
  431b4b:	dec    esp
  431b4c:	inc    ebx
  431b4d:	ins    DWORD PTR es:[edi],dx
  431b4e:	mov    ecx,0x722e4ee7
  431b53:	mov    edx,0xc0876106
  431b58:	retf   0x68dd
  431b5b:	sbb    al,0x6c
  431b5d:	fdivr  DWORD PTR [esi-0x25290f29]
  431b63:	jge    0x431b49
  431b65:	jp     0x431b1b
  431b67:	imul   esi,edi,0xdfa4a9e0
  431b6d:	jae    0x431b38
  431b6f:	fs jno 0x431b19
  431b72:	push   eax
  431b73:	mov    WORD PTR [edi],ds
  431b75:	ret    0x520c
  431b78:	into   
  431b79:	xor    ah,BYTE PTR [edx]
  431b7b:	jmp    0x431ba5
  431b7d:	jae    0x431b53
  431b7f:	outs   dx,DWORD PTR ds:[esi]
  431b80:	out    0x2,al
  431b82:	or     eax,0xa3e4c584
  431b87:	fisubr WORD PTR [ebx-0x4bfdc781]
  431b8d:	dec    ecx
  431b8e:	adc    eax,edi
  431b90:	pop    esp
  431b91:	fstp   DWORD PTR [edx+0x51b05fe8]
  431b97:	jnp    0x431b92
  431b99:	into   
  431b9a:	push   esi
  431b9b:	cmp    DWORD PTR [ebx],ebp
  431b9d:	inc    ebp
  431b9e:	mov    al,ds:0xb6ae2a43
  431ba3:	call   0x87ac:0x74919a70
  431baa:	sub    eax,0x15854ade
  431baf:	ds push 0xffffffbf
  431bb2:	(bad)  
  431bb3:	rol    DWORD PTR [eax],1
  431bb5:	jnp    0x431c21
  431bb7:	adc    eax,0x7c0a3127
  431bbc:	aam    0x65
  431bbe:	hlt    
  431bbf:	mov    gs,WORD PTR [edi+0x1e]
  431bc2:	push   0x3c786064
  431bc7:	cmp    eax,0x8bb822b2
  431bcc:	fstp   TBYTE PTR [esi-0x23]
  431bcf:	sub    esi,ebp
  431bd1:	sub    ch,BYTE PTR [eax]
  431bd3:	pop    edx
  431bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431bd5:	sub    ebx,edi
  431bd7:	arpl   WORD PTR [ecx+0x36],sp
  431bda:	add    eax,0x9b70f6de
  431bdf:	jmp    FWORD PTR [edx]
  431be1:	inc    eax
  431be2:	mov    BYTE PTR [edi-0x2b],ch
  431be5:	adc    eax,0x96159783
  431bea:	aad    0x7a
  431bec:	jle    0x431bf6
  431bee:	retf   0x8d53
  431bf1:	pop    ss
  431bf2:	pop    ss
  431bf3:	pop    ebx
  431bf4:	clc    
  431bf5:	fwait
  431bf6:	icebp  
  431bf7:	xchg   BYTE PTR ds:0xf25ec365,bl
  431bfd:	icebp  
  431bfe:	or     eax,DWORD PTR [esi-0x7a]
  431c01:	stos   DWORD PTR es:[edi],eax
  431c02:	xchg   DWORD PTR [ecx+0x63],esp
  431c05:	sub    ebx,ebx
  431c07:	pop    DWORD PTR cs:[eax]
  431c0a:	inc    edx
  431c0b:	leave  
  431c0c:	add    DWORD PTR [ebx],0x56
  431c0f:	jb     0x431bb0
  431c11:	cmp    eax,0xdec65326
  431c16:	xchg   cl,cl
  431c18:	dec    ecx
  431c19:	(bad)
  431c1c:	dec    esi
  431c1d:	outs   dx,BYTE PTR ds:[esi]
  431c1e:	lahf   
  431c1f:	scas   eax,DWORD PTR es:[edi]
  431c20:	cmc    
  431c21:	adc    al,0x2a
  431c23:	mov    esp,0xbcc0ce57
  431c28:	sbb    bh,cl
  431c2a:	and    al,BYTE PTR [edi]
  431c2c:	sbb    eax,0x12d95da0
  431c31:	pop    es
  431c32:	sti    
  431c33:	daa    
  431c34:	jnp    0x431bb7
  431c36:	jmp    0x431c3f
  431c38:	in     eax,dx
  431c39:	push   es
  431c3a:	xlat   BYTE PTR ds:[ebx]
  431c3b:	mov    DWORD PTR [ebp-0x38],ecx
  431c3e:	sbb    al,0x1f
  431c40:	jg     0x431c32
  431c42:	mov    edi,DWORD PTR ds:0xb38b5c69
  431c48:	xchg   edi,eax
  431c49:	dec    esp
  431c4a:	pop    esp
  431c4b:	repnz pusha 
  431c4d:	enter  0x57c,0xf
  431c51:	add    al,0x13
  431c53:	dec    eax
  431c54:	aas    
  431c55:	loop   0x431cc9
  431c57:	fsubr  DWORD PTR [esi]
  431c59:	cmp    eax,0xf486ccd6
  431c5e:	jne    0x431be1
  431c60:	ficomp WORD PTR [esi]
  431c62:	cmc    
  431c63:	fistp  QWORD PTR [esi-0x28]
  431c66:	(bad)  
  431c67:	cmp    eax,0xfd97b44f
  431c6c:	sub    al,0x2d
  431c6e:	sbb    eax,0x3b23d530
  431c73:	mov    ch,0xdc
  431c75:	out    dx,al
  431c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431c77:	inc    edi
  431c78:	call   0x781f310d
  431c7d:	sbb    edx,DWORD PTR [edi+eiz*2]
  431c80:	test   eax,0xe4345b6c
  431c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c86:	fdiv   QWORD PTR [edx+0x28]
  431c89:	scas   al,BYTE PTR es:[edi]
  431c8a:	pop    eax
  431c8b:	dec    ecx
  431c8c:	mov    ebp,0xb686064f
  431c91:	jmp    0x455738df
  431c96:	mov    ebp,0xe860e435
  431c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c9c:	inc    eax
  431c9d:	fst    QWORD PTR [ecx-0x55]
  431ca0:	xor    BYTE PTR [ecx-0x72],0x1
  431ca4:	fimul  WORD PTR [ecx+edx*8+0x9e51e87]
  431cab:	sub    eax,0x2449b6f9
  431cb0:	jle    0x431c65
  431cb2:	enter  0xbcdf,0xd8
  431cb6:	xchg   BYTE PTR [edi],dl
  431cb8:	add    BYTE PTR [ebx+edx*4-0x30c3b795],dl
  431cbf:	imul   edx,DWORD PTR [edi-0x6f],0xffffffa3
  431cc3:	mov    ds:0xbfdeae40,eax
  431cc8:	or     BYTE PTR [ecx-0x158bb39f],dl
  431cce:	sti    
  431ccf:	rcl    BYTE PTR ds:0x940ac27f,cl
  431cd5:	stos   DWORD PTR es:[edi],eax
  431cd6:	loop   0x431ca1
  431cd8:	sub    DWORD PTR [eax-0x5f],ebx
  431cdb:	push   esi
  431cdc:	mov    ds:0x5a6bfd52,al
  431ce1:	dec    eax
  431ce2:	inc    eax
  431ce3:	sbb    cl,0x38
  431ce6:	adc    cl,dl
  431ce8:	hlt    
  431ce9:	jge    0x431c7b
  431ceb:	aas    
  431cec:	not    DWORD PTR [edx-0x6a]
  431cef:	or     eax,0x82eaf632
  431cf4:	not    ch
  431cf6:	rol    edx,1
  431cf8:	fsubr  DWORD PTR [esi+0x3d]
  431cfb:	sub    BYTE PTR [eax+0x46],ah
  431cfe:	hlt    
  431cff:	shr    DWORD PTR [edx],cl
  431d01:	and    eax,DWORD PTR [eax-0x568cb754]
  431d07:	cld    
  431d08:	popa   
  431d09:	outs   dx,BYTE PTR ds:[esi]
  431d0a:	inc    ebx
  431d0b:	adc    BYTE PTR [esi],0xd7
  431d0e:	ret    0x1b1b
  431d11:	jl     0x431d0e
  431d13:	scas   eax,DWORD PTR es:[edi]
  431d14:	push   ebp
  431d15:	sti    
  431d16:	cmp    ch,dh
  431d18:	mov    al,0xd8
  431d1a:	(bad)  
  431d1c:	data16 adc BYTE PTR [edi-0x26cf230b],ch
  431d23:	mov    eax,0xfff280bc
  431d28:	cmp    al,0x8c
  431d2a:	js     0x431d72
  431d2c:	(bad)  [ebx-0x50]
  431d2f:	inc    edx
  431d30:	iret   
  431d31:	push   esi
  431d32:	imul   eax,esp,0xf1acff0a
  431d38:	loope  0x431d78
  431d3a:	mov    ch,BYTE PTR [esi]
  431d3c:	iret   
  431d3d:	sbb    BYTE PTR [eax-0x4e],al
  431d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d41:	cmp    DWORD PTR [esi],eax
  431d43:	cwde   
  431d44:	sub    BYTE PTR [ebp-0x475415a8],ch
  431d4a:	dec    ebx
  431d4b:	jmp    0xd7ed:0xd494edc4
  431d52:	cs push esi
  431d54:	push   0xdf69bfd7
  431d59:	xchg   esi,eax
  431d5a:	adc    eax,0x34decfb
  431d5f:	test   eax,0x1271e7bc
  431d64:	inc    edi
  431d65:	fisub  DWORD PTR [edx-0x27]
  431d68:	(bad)  
  431d69:	and    al,ch
  431d6b:	cmc    
  431d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d6d:	lods   al,BYTE PTR ds:[esi]
  431d6e:	add    BYTE PTR [ecx],bl
  431d70:	stos   DWORD PTR es:[edi],eax
  431d71:	aas    
  431d72:	loop   0x431cfb
  431d74:	xchg   esi,eax
  431d75:	or     al,0x2
  431d77:	push   ebp
  431d78:	jbe    0x431d31
  431d7a:	in     eax,dx
  431d7b:	pop    ds
  431d7c:	sub    BYTE PTR [edi-0x22e10b56],0xc1
  431d83:	xchg   esi,eax
  431d84:	in     al,0x9
  431d86:	push   ds
  431d87:	push   ecx
  431d88:	lock mov DWORD PTR [edx+eax*1-0x78],ebx
  431d8d:	xor    dl,BYTE PTR [edi-0x1094864a]
  431d93:	inc    edi
  431d94:	dec    esi
  431d95:	or     dh,BYTE PTR [ecx]
  431d97:	dec    edi
  431d98:	push   esi
  431d99:	jp     0x431d5c
  431d9b:	cs xchg esp,eax
  431d9d:	mov    eax,esp
  431d9f:	fimul  DWORD PTR [ebp+0xb]
  431da2:	xchg   BYTE PTR [ecx],al
  431da4:	dec    edx
  431da5:	fisub  DWORD PTR [esi+0x7a]
  431da8:	test   al,0xe7
  431daa:	out    dx,eax
  431dab:	stos   BYTE PTR es:[edi],al
  431dac:	call   0xf369:0x19e63c19
  431db3:	ficom  DWORD PTR [ebx]
  431db5:	jge    0x431dad
  431db7:	out    0x7,eax
  431db9:	jnp    0x431d70
  431dbb:	nop
  431dbc:	test   ebx,0xe0aa9153
  431dc2:	stos   DWORD PTR es:[edi],eax
  431dc3:	mov    eax,ds:0xbaec8971
  431dc8:	fistp  DWORD PTR [esi-0x5b]
  431dcb:	js     0x431e3e
  431dcd:	mov    esp,0x164b9fe9
  431dd2:	arpl   WORD PTR [esi],bp
  431dd4:	mov    bh,0x4c
  431dd6:	out    0x4b,al
  431dd8:	push   ss
  431dd9:	retf   
  431dda:	adc    dl,BYTE PTR [ebx]
  431ddc:	push   ebp
  431ddd:	xor    DWORD PTR ds:0x597bcdc8,eax
  431de3:	scas   eax,DWORD PTR es:[edi]
  431de4:	shl    DWORD PTR [ebx-0x47],0xb7
  431de8:	pop    ecx
  431de9:	pop    esp
  431dea:	mov    bh,0xab
  431dec:	scas   al,BYTE PTR es:[edi]
  431ded:	retf   0x49d
  431df0:	push   es
  431df1:	xchg   esp,eax
  431df2:	pop    edx
  431df3:	data16 loopne 0x431e67
  431df6:	mov    esp,0xf8270525
  431dfb:	and    BYTE PTR [esi],dl
  431dfd:	jb     0x431db5
  431dff:	mov    ds:0x972dd612,al
  431e04:	stc    
  431e05:	clc    
  431e06:	sub    al,0x6b
  431e08:	mov    ss,WORD PTR [edx-0x575662e]
  431e0e:	push   esp
  431e0f:	or     bh,BYTE PTR [edi+0x2f]
  431e12:	xor    al,0xa6
  431e14:	xor    bl,BYTE PTR [ecx-0x53e69034]
  431e1a:	add    ebp,DWORD PTR [ebx]
  431e1c:	sbb    BYTE PTR [ecx-0x3c52e481],ch
  431e22:	(bad)  
  431e23:	stc    
  431e24:	add    ebp,DWORD PTR [edx]
  431e26:	sbb    al,0xe
  431e28:	mov    BYTE PTR [edi-0x68],dh
  431e2b:	mov    bh,0xfc
  431e2d:	(bad)  
  431e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431e2f:	ret    
  431e30:	mov    ecx,es
  431e32:	push   es
  431e33:	push   edx
  431e34:	mov    al,0xb7
  431e36:	js     0x431db9
  431e38:	and    eax,0xa48ae3ef
  431e3d:	sub    al,0x7a
  431e3f:	push   es
  431e40:	jmp    FWORD PTR [ebx-0x74029c64]
  431e46:	mov    al,ds:0xfdc83abf
  431e4b:	les    esi,FWORD PTR [esp+edx*4+0x2a]
  431e4f:	mov    edi,ecx
  431e51:	dec    ebx
  431e52:	push   0x2b4e5fb1
  431e57:	clc    
  431e58:	add    eax,0x4d97b97e
  431e5d:	sbb    ah,BYTE PTR [edx]
  431e5f:	mov    al,BYTE PTR [esi+0x64]
  431e62:	iret   
  431e63:	or     bp,WORD PTR [ebx-0x1f05389]
  431e6a:	mov    ah,bl
  431e6c:	out    0x1a,eax
  431e6e:	mov    WORD PTR [esi+0x3279aa9b],ss
  431e74:	stos   BYTE PTR es:[edi],al
  431e75:	xchg   edx,eax
  431e76:	in     al,0x2e
  431e78:	repz dec esp
  431e7a:	call   0x2340:0xa362ca78
  431e81:	mov    edx,0xdb54a72e
  431e86:	pop    esi
  431e87:	or     al,0xc2
  431e89:	call   0x5213:0xb4416c49
  431e90:	xchg   BYTE PTR [ecx],dl
  431e92:	mov    ds:0x2b0d9b52,al
  431e97:	div    DWORD PTR [eax]
  431e99:	xor    eax,0xd7947913
  431e9e:	imul   eax,DWORD PTR [edi],0x5b
  431ea1:	inc    esp
  431ea2:	bound  edx,QWORD PTR [edx+ebx*1]
  431ea5:	push   esi
  431ea6:	xlat   BYTE PTR ds:[ebx]
  431ea7:	(bad)  
  431ea8:	(bad)  [ebx+0x8]
  431eab:	mov    esp,0xeb6cc948
  431eb0:	in     al,0xa
  431eb2:	xchg   esi,eax
  431eb3:	jnp    0x431f2d
  431eb5:	data16 mov ds:0xd2e3bb6b,al
  431ebc:	cli    
  431ebd:	(bad)
  431ec1:	(bad)  
  431ec2:	sbb    DWORD PTR [edi+ecx*1],esi
  431ec5:	sub    edx,DWORD PTR [ebp-0x791d9649]
  431ecb:	pop    edx
  431ecc:	xchg   edi,eax
  431ecd:	inc    eax
  431ece:	adc    esi,edx
  431ed0:	add    DWORD PTR [ebp+0xb],0xffffffa8
  431ed4:	cmp    dl,BYTE PTR [edi-0x1b0d6721]
  431eda:	rcl    DWORD PTR [eax],1
  431edc:	mov    esi,0x644b7961
  431ee1:	les    esp,FWORD PTR [edi]
  431ee3:	xchg   edi,eax
  431ee4:	xor    BYTE PTR [esi+0x6c],bh
  431ee7:	sti    
  431ee8:	outs   dx,BYTE PTR ds:[esi]
  431ee9:	pop    ebx
  431eea:	mov    DWORD PTR [edi*8+0x614f01f3],ebp
  431ef1:	fwait
  431ef2:	rol    DWORD PTR [esi+0x7f226797],0x65
  431ef9:	jmp    0x421f:0x569b3c27
  431f00:	and    eax,0x6579b16d
  431f05:	jmp    0x8b4a:0xc750d0ef
  431f0c:	aaa    
  431f0d:	clc    
  431f0e:	sub    ebx,DWORD PTR [esi+0x4b]
  431f11:	cs xchg esp,eax
  431f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f14:	int3   
  431f15:	popf   
  431f16:	jg     0x431f1b
  431f18:	cmp    eax,0xa2fb795c
  431f1d:	jg     0x431ea3
  431f1f:	cmp    ecx,DWORD PTR [edx]
  431f21:	(bad)  [esi-0x1c187071]
  431f27:	mov    esp,0x487ef8d8
  431f2c:	or     al,0x36
  431f2e:	pop    ds
  431f2f:	and    dl,BYTE PTR [eax+0x3b]
  431f32:	not    DWORD PTR [eax+0x4be7a4de]
  431f38:	retf   
  431f39:	sbb    BYTE PTR ds:0x57361a51,bl
  431f3f:	aas    
  431f40:	pop    esp
  431f41:	xor    esp,DWORD PTR [ebx+0x65a9cc09]
  431f47:	mov    ecx,0x7f60f4a1
  431f4c:	aas    
  431f4d:	mov    edx,0xffc01dd9
  431f52:	mov    ecx,0xcc753546
  431f57:	call   0x3a6a:0xbcd8f8f
  431f5e:	loope  0x431fb4
  431f60:	(bad)  
  431f61:	fistp  QWORD PTR [edi]
  431f63:	xlat   BYTE PTR ds:[ebx]
  431f64:	ret    0x9a7d
  431f67:	mov    ebp,DWORD PTR [eax-0x3785b25f]
  431f6d:	mov    ds:0xb057ca6b,al
  431f72:	sub    cl,bh
  431f74:	iret   
  431f75:	bnd je 0x431f8f
  431f78:	je     0x431ff1
  431f7a:	aas    
  431f7b:	aas    
  431f7c:	cli    
  431f7d:	ins    DWORD PTR es:[edi],dx
  431f7e:	in     al,0xe5
  431f80:	xchg   edx,eax
  431f81:	gs dec ebx
  431f83:	(bad)  
  431f84:	jmp    FWORD PTR [edx-0x2745ee5d]
  431f8a:	mov    cl,0xf4
  431f8c:	sbb    DWORD PTR [edi],esi
  431f8e:	ss aad 0xf9
  431f91:	and    DWORD PTR [ebx],esi
  431f93:	pop    eax
  431f94:	cli    
  431f95:	ret    0xd44b
  431f98:	inc    ebx
  431f99:	inc    ebp
  431f9a:	clc    
  431f9b:	test   DWORD PTR [ebx],edx
  431f9d:	xchg   DWORD PTR [edi+0x2b732bd1],esp
  431fa3:	data16 das 
  431fa5:	mov    ah,0xb4
  431fa8:	rol    DWORD PTR [ecx+0x6da5b493],cl
  431fae:	add    DWORD PTR [esi+edi*1-0x5a],edi
  431fb2:	cmp    edi,esp
  431fb4:	xor    al,0xe
  431fb6:	pop    ecx
  431fb7:	(bad)  
  431fb8:	sbb    cl,dh
  431fba:	pop    ebp
  431fbb:	std    
  431fbc:	out    0x2e,al
  431fbe:	mov    al,ds:0xd2507b4f
  431fc3:	inc    DWORD PTR gs:[ecx]
  431fc6:	pop    ds
  431fc7:	pop    esi
  431fc8:	retf   
  431fc9:	shld   DWORD PTR ds:0x28760706,esp,0x63
  431fd1:	dec    esi
  431fd2:	xchg   BYTE PTR [edi],cl
  431fd4:	adc    DWORD PTR [ebx+0x60],0x45cf51f4
  431fdb:	push   edi
  431fdc:	neg    DWORD PTR [eax+0x45e5ff6e]
  431fe2:	pusha  
  431fe3:	or     al,0x27
  431fe5:	add    edi,edx
  431fe7:	ins    BYTE PTR es:[edi],dx
  431fe8:	out    0xa4,eax
  431fea:	fld    QWORD PTR [esi+0x13]
  431fed:	mov    dh,0x21
  431fef:	adc    DWORD PTR [ebx-0xa],ebp
  431ff2:	and    ebx,esi
  431ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ff5:	mov    eax,ds:0x1cdbc05a
  431ffa:	pop    edi
  431ffb:	lods   eax,DWORD PTR ds:[esi]
  431ffc:	lods   eax,DWORD PTR ds:[esi]
  431ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431ffe:	jl     0x432005
  432000:	test   BYTE PTR [eax-0x76],ch
  432003:	pop    ds
  432004:	rcl    cl,0x49
  432007:	cmp    BYTE PTR [ebx+0x37ac6994],ch
  43200d:	hlt    
  43200e:	jnp    0x431faf
  432010:	jmp    0x432049
  432012:	ins    BYTE PTR es:[edi],dx
  432013:	cmp    eax,0x49ebb05e
  432018:	dec    ebp
  432019:	push   eax
  43201a:	dec    eax
  43201b:	lods   eax,DWORD PTR ds:[esi]
  43201c:	out    0x10,al
  43201e:	cmp    ah,BYTE PTR [ebp+0x56]
  432021:	cli    
  432022:	jnp    0x432084
  432024:	mov    edi,0x249adcab
  432029:	dec    edx
  43202a:	mov    ebx,DWORD PTR [esi+edx*1+0x5]
  43202e:	in     al,0xcd
  432030:	das    
  432031:	xchg   ebp,eax
  432032:	cmp    al,0x51
  432034:	nop
  432035:	push   ebx
  432036:	pushf  
  432037:	ins    BYTE PTR es:[edi],dx
  432038:	pop    edi
  432039:	fistp  QWORD PTR ds:0x56e22bf
  43203f:	retf   0x1e9
  432042:	xchg   ecx,eax
  432043:	jp     0x43205f
  432045:	xchg   ecx,eax
  432046:	adc    ah,BYTE PTR [edi+0x4bda9058]
  43204c:	popf   
  43204d:	add    BYTE PTR [eax+0x12],0xd4
  432051:	fld    TBYTE PTR [ebp-0x79]
  432054:	jb     0x43205f
  432056:	pop    ebx
  432057:	lea    ebp,[eax]
  432059:	mov    ah,0xb7
  43205b:	jg     0x431fdf
  43205d:	adc    eax,0x2e4a2b7b
  432062:	xor    bl,BYTE PTR [edx]
  432064:	ins    BYTE PTR es:[edi],dx
  432065:	cmp    eax,0x3737e404
  43206a:	int    0xd1
  43206c:	out    dx,al
  43206d:	jecxz  0x432045
  43206f:	mov    DWORD PTR [esi],edx
  432071:	add    ebp,DWORD PTR [ebp+0x28]
  432074:	shl    DWORD PTR [esi-0x23],1
  432077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432078:	mov    al,0x5d
  43207a:	imul   BYTE PTR [edx-0x2c]
  43207d:	pushf  
  43207e:	dec    ebp
  43207f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432080:	adc    eax,0x91bb7b18
  432085:	sahf   
  432086:	pop    ds
  432087:	ss mov edx,0x46f6262d
  43208d:	ja     0x432010
  43208f:	cmp    ah,dh
  432091:	push   edi
  432092:	dec    ecx
  432093:	daa    
  432094:	xor    BYTE PTR [edi],0x94
  432097:	mov    esp,0xc9072607
  43209c:	pop    es
  43209d:	push   ebp
  43209e:	cmp    al,0xd7
  4320a0:	sbb    al,0x89
  4320a2:	xor    DWORD PTR [eax],0x6d4efa1c
  4320a8:	sub    ebx,DWORD PTR [edi-0x4a]
  4320ab:	xchg   esi,eax
  4320ac:	lods   eax,DWORD PTR ds:[esi]
  4320ad:	xor    ebp,DWORD PTR [ebx+0x3e5b4f8f]
  4320b3:	jb     0x432070
  4320b5:	leave  
  4320b6:	aam    0xb7
  4320b8:	xor    dh,BYTE PTR [edx]
  4320ba:	push   ecx
  4320bb:	sbb    DWORD PTR [edx-0x2e644a3d],esi
  4320c1:	mov    esp,0x6b38a28c
  4320c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4320c7:	retf   0x7af3
  4320ca:	stos   DWORD PTR es:[edi],eax
  4320cb:	shl    BYTE PTR [ecx+eiz*2],cl
  4320ce:	mov    bh,0x2c
  4320d0:	cdq    
  4320d1:	in     eax,0x87
  4320d3:	mov    eax,ds:0x7e3a8f91
  4320d8:	mov    dh,BYTE PTR [ecx+0x5d7f74f4]
  4320de:	and    BYTE PTR [eax-0x5b],0x31
  4320e2:	dec    esi
  4320e3:	push   0x31
  4320e5:	dec    edx
  4320e6:	(bad)  
  4320e7:	call   0xadc2:0x3033daf0
  4320ee:	push   0xffffffd6
  4320f0:	dec    ebx
  4320f1:	pop    edi
  4320f2:	jp     0x432161
  4320f4:	pop    ebx
  4320f5:	cwde   
  4320f6:	jle    0x4320cd
  4320f8:	add    eax,0x481f8f0a
  4320fd:	mov    ah,0xb2
  4320ff:	repz cli 
  432101:	aam    0x4e
  432103:	fisubr DWORD PTR [ebx+eax*1+0x73]
  432107:	cs out 0x5,al
  43210a:	(bad)
  43210d:	dec    ebx
  43210e:	ss nop
  432110:	jge    0x432172
  432112:	pushf  
  432113:	adc    edi,DWORD PTR [ecx]
  432115:	shl    ch,1
  432117:	sub    al,0x3a
  432119:	cld    
  43211a:	dec    eax
  43211b:	(bad)  
  43211c:	dec    esi
  43211d:	inc    edi
  43211e:	out    dx,eax
  43211f:	out    dx,al
  432120:	xchg   ebx,eax
  432121:	mov    al,ds:0x63b3f444
  432126:	mov    ebp,0x13e2e9b8
  43212b:	fidivr DWORD PTR [ecx+0x31]
  43212e:	mov    eax,ds:0x8db62e6
  432133:	inc    ebx
  432134:	xlat   BYTE PTR ds:[ebx]
  432135:	adc    eax,0x8c17c2c3
  43213a:	inc    ecx
  43213b:	sub    cl,ch
  43213d:	inc    ecx
  43213e:	iret   
  43213f:	mov    al,0x19
  432141:	pop    esp
  432142:	sub    eax,0x3bcb84ee
  432147:	xor    DWORD PTR ds:0xb3ab594,eax
  43214d:	jmp    DWORD PTR [edx-0x11af5bf4]
  432153:	mov    bh,0xa1
  432155:	or     BYTE PTR [esi-0x50],bh
  432158:	lock push edx
  43215a:	mov    ds:0xe70836bb,eax
  43215f:	push   esp
  432160:	sar    BYTE PTR [ebx+0x1187d62b],1
  432166:	test   DWORD PTR [ecx+0x7c1816de],0xbe0208f4
  432170:	xchg   edx,eax
  432171:	push   cs
  432172:	mov    esp,0xe225d251
  432177:	test   al,0x7
  432179:	int3   
  43217a:	inc    edx
  43217b:	(bad)  
  43217c:	and    eax,0x3d5fed38
  432181:	adc    al,0x98
  432183:	sbb    bh,BYTE PTR [ebx+eax*2-0xae3b9dc]
  43218a:	mov    dl,0xce
  43218c:	pop    ss
  43218d:	pop    eax
  43218e:	nop
  43218f:	(bad)  
  432190:	in     al,0xf6
  432192:	sbb    BYTE PTR [di],dh
  432195:	cwde   
  432196:	ss ins DWORD PTR es:[edi],dx
  432198:	clc    
  432199:	std    
  43219a:	push   edx
  43219b:	cdq    
  43219c:	mov    edx,0x3bea339e
  4321a1:	mov    bl,0x90
  4321a3:	test   eax,0x151d38f1
  4321a8:	or     ah,dh
  4321aa:	shl    DWORD PTR [ecx],0x91
  4321ad:	sar    DWORD PTR [esi-0x5eb64d58],0xda
  4321b4:	sbb    al,0x3f
  4321b6:	arpl   WORD PTR [edx+0x7938d602],bx
  4321bc:	mov    cl,0xd0
  4321be:	cdq    
  4321bf:	fmul   DWORD PTR [ecx+0x37]
  4321c2:	sub    ebx,DWORD PTR [eax-0x23]
  4321c5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4321c7:	enter  0xc657,0x90
  4321cb:	add    BYTE PTR [ebx],dl
  4321cd:	xchg   DWORD PTR [esp+edx*2],edi
  4321d0:	push   ebp
  4321d1:	ja     0x4321f0
  4321d3:	pushf  
  4321d4:	aam    0xe3
  4321d6:	mov    esp,0x4bf32ec6
  4321db:	mov    eax,0xc9b27e09
  4321e0:	fs call 0xa6b0:0xcb50a964
  4321e8:	push   esi
  4321e9:	add    eax,0xc1404ecb
  4321ee:	xor    dl,dl
  4321f0:	push   ebp
  4321f1:	push   edx
  4321f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321f3:	and    BYTE PTR [ecx],0x10
  4321f6:	xor    eax,0x6a562074
  4321fb:	jno    0x43220a
  4321fd:	test   eax,0x44a73bac
  432202:	pavgw  mm6,mm3
  432205:	inc    eax
  432206:	sar    BYTE PTR [ebx+eax*1+0x5],0xd9
  43220b:	push   cs
  43220c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43220d:	test   al,0xef
  43220f:	jecxz  0x432252
  432211:	sub    DWORD PTR [ebp-0x34ebbb98],esi
  432217:	repz jmp 0x43223c
  43221a:	inc    esi
  43221b:	sbb    DWORD PTR [edi+0x3f],ecx
  43221e:	and    eax,0xa0399a01
  432223:	push   esi
  432224:	das    
  432225:	std    
  432226:	dec    BYTE PTR [edi]
  432228:	dec    eax
  432229:	add    eax,0xd440bc29
  43222e:	and    BYTE PTR [ecx],al
  432230:	stos   BYTE PTR es:[edi],al
  432231:	fidiv  DWORD PTR ds:0xa30a2d22
  432237:	mov    bl,0x70
  432239:	add    esp,DWORD PTR [edi-0x6c]
  43223c:	cmp    BYTE PTR [ebp+0x55544a3],0xb4
  432243:	(bad)  
  432244:	int    0x96
  432246:	adc    ch,ah
  432248:	mov    al,ds:0x3de32433
  43224d:	fadd   st,st(7)
  43224f:	hlt    
  432250:	sub    BYTE PTR [edi+0x5b8d0828],dh
  432256:	out    dx,al
  432257:	in     al,dx
  432258:	and    eax,0xcb74875e
  43225d:	or     DWORD PTR [esi-0x4c],esp
  432260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432261:	cmp    DWORD PTR [ecx-0x26ebeb1a],eax
  432267:	pop    eax
  432268:	add    ebp,edi
  43226a:	fist   WORD PTR [ebx]
  43226c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43226d:	ins    BYTE PTR es:[edi],dx
  43226e:	(bad)  
  43226f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432270:	mov    al,ds:0x4993eeba
  432275:	pop    eax
  432276:	lods   eax,DWORD PTR ds:[esi]
  432277:	jno    0x432204
  432279:	inc    DWORD PTR [eax+0x43]
  43227c:	arpl   bx,bp
  43227e:	push   edx
  43227f:	jp     0x4322b0
  432281:	repnz mov ebx,0x2e24ae52
  432287:	add    al,0xa6
  432289:	test   DWORD PTR [eax],esi
  43228b:	jae    0x43229f
  43228d:	daa    
  43228e:	adc    al,0xcf
  432290:	adc    cl,dh
  432292:	or     eax,0xc09dadf8
  432297:	add    eax,0x1def41cd
  43229c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43229d:	(bad)  
  43229e:	sub    dh,bh
  4322a0:	ret    0xbade
  4322a3:	mov    al,0xbf
  4322a5:	stos   BYTE PTR es:[edi],al
  4322a6:	cmp    DWORD PTR [eax-0x5ce9989d],edi
  4322ac:	push   ebx
  4322ad:	pop    sp
  4322af:	mov    ch,al
  4322b1:	xor    edi,esp
  4322b3:	inc    edx
  4322b4:	retf   0x9cd4
  4322b7:	bound  ecx,QWORD PTR [esi+0x59]
  4322ba:	mov    cl,0x89
  4322bc:	or     DWORD PTR [ebx+0x5b],ebp
  4322bf:	test   BYTE PTR [ecx+0x64],dh
  4322c2:	mov    WORD PTR [ebp-0x3d5d4700],es
  4322c8:	nop
  4322c9:	imul   ebp,DWORD PTR [ebx+eiz*4],0x57
  4322cd:	cli    
  4322ce:	call   0xf5579ce2
  4322d3:	(bad)  
  4322d4:	mov    bl,0x3b
  4322d6:	mov    ds:0xed0bbaf8,al
  4322db:	jae    0x4322df
  4322dd:	and    esi,DWORD PTR [ebx+0xd]
  4322e0:	jb     0x43229c
  4322e2:	retf   
  4322e3:	or     bl,bl
  4322e5:	sub    edx,eax
  4322e7:	xor    ch,BYTE PTR [ebx+0x8]
  4322ea:	cmp    BYTE PTR [esp+esi*8+0x191b19ec],dl
  4322f1:	int    0x2e
  4322f3:	pop    edx
  4322f4:	(bad)  
  4322f5:	(bad)  
  4322f6:	adc    esp,DWORD PTR [esi-0x784a4423]
  4322fc:	popf   
  4322fd:	leave  
  4322fe:	ret    
  4322ff:	cmp    al,0xd4
  432301:	mov    eax,ecx
  432303:	dec    ecx
  432304:	jae    0x432339
  432306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432307:	sub    al,0x84
  432309:	rcr    BYTE PTR [ecx],cl
  43230b:	and    dh,BYTE PTR [esi-0x6a4487b]
  432311:	pop    esp
  432312:	mov    al,ds:0x208c2252
  432317:	mov    al,ds:0x8e32b209
  43231c:	imul   ebx,DWORD PTR [eax-0x69],0x1002ddb8
  432323:	es mov edi,0x85eed561
  432329:	std    
  43232a:	adc    BYTE PTR [ebp+0x645d49bb],dh
  432330:	pusha  
  432331:	pusha  
  432332:	out    dx,eax
  432333:	ret    
  432334:	jl     0x4322e5
  432336:	jae    0x43238e
  432338:	mov    bh,0xfe
  43233a:	inc    ebp
  43233b:	cdq    
  43233c:	sbb    eax,0x6715012
  432341:	lock and bh,BYTE PTR fs:[ebp+0x3a1f67bd]
  432349:	fs leave 
  43234b:	ds aam 0x4
  43234e:	jl     0x432332
  432350:	push   ebp
  432351:	mov    bl,0x39
  432353:	push   cs
  432354:	(bad)  
  432355:	std    
  432356:	or     BYTE PTR [eax+0x793eaf5b],bl
  43235c:	pop    esp
  43235d:	fbld   TBYTE PTR [eax+0x2845f5bf]
  432363:	shl    DWORD PTR [ecx],1
  432365:	shl    BYTE PTR [ecx-0x34],cl
  432368:	mov    dl,0x38
  43236a:	push   0xd436c0f0
  43236f:	mov    al,ds:0x1bff195f
  432374:	imul   eax,DWORD PTR [edi],0x3ce0191a
  43237a:	ret    0x222e
  43237d:	add    DWORD PTR [esi+0x7d],ebp
  432380:	arpl   WORD PTR [ebx+0x758b93cf],sp
  432386:	(bad)  
  432387:	fs pop es
  432389:	jg     0x432405
  43238b:	push   ss
  43238c:	clc    
  43238d:	mov    cl,0xd9
  43238f:	pop    ss
  432390:	aam    0x1f
  432392:	push   edi
  432393:	jb     0x432414
  432395:	jmp    0x432360
  432397:	stos   BYTE PTR es:[edi],al
  432398:	push   es
  432399:	push   cs
  43239a:	mov    DWORD PTR [eax+0x3655b7aa],esi
  4323a0:	sub    eax,0xe55a0b6e
  4323a5:	mov    BYTE PTR [ecx+0x2d3dfcdd],al
  4323ab:	pop    eax
  4323ac:	pushf  
  4323ad:	lods   eax,DWORD PTR ss:[esi]
  4323af:	mov    esi,DWORD PTR [edx+0x608ed1ca]
  4323b5:	mov    ah,bh
  4323b7:	cmp    BYTE PTR [ebx-0x7f148b2b],bl
  4323bd:	pop    edx
  4323be:	mov    al,0x3c
  4323c0:	mov    dh,0x2f
  4323c2:	inc    eax
  4323c3:	cli    
  4323c4:	int    0xd1
  4323c6:	mov    esi,0x2150e82a
  4323cb:	mov    eax,DWORD PTR [esi-0x63]
  4323ce:	in     al,dx
  4323cf:	test   eax,0xdd1ff9ad
  4323d4:	pop    edi
  4323d5:	popf   
  4323d6:	xor    al,0xcb
  4323d8:	mov    bl,0xa5
  4323da:	jae    0x432441
  4323dc:	jne    0x43244d
  4323de:	xchg   edi,eax
  4323df:	in     eax,dx
  4323e0:	mov    bh,0xb5
  4323e2:	clc    
  4323e3:	mov    ds:0xf46856da,eax
  4323e8:	xor    DWORD PTR [ebx],0x23171d3f
  4323ee:	mov    ss,WORD PTR [esi]
  4323f0:	mov    esp,ds
  4323f2:	retf   
  4323f3:	and    al,0x24
  4323f5:	xchg   ecx,eax
  4323f6:	adc    BYTE PTR [edx+0x365c0b35],al
  4323fc:	fistp  DWORD PTR [esi-0x83c58b6]
  432402:	xchg   ebx,eax
  432403:	cld    
  432404:	mov    ds:0xc48dce75,al
  432409:	dec    edx
  43240a:	xchg   esp,eax
  43240b:	in     al,dx
  43240c:	ret    
  43240d:	rcr    BYTE PTR [ebp-0x6419f718],0xdd
  432414:	xor    BYTE PTR [ecx+0x12],dl
  432417:	and    eax,0x4cfba5a1
  43241c:	(bad)  
  43241e:	xchg   ebp,eax
  43241f:	jo     0x432407
  432421:	std    
  432422:	test   BYTE PTR ds:0xe109f2a,ah
  432428:	jle    0x432462
  43242a:	aaa    
  43242b:	cmp    esi,ecx
  43242d:	(bad)  
  43242e:	outs   dx,DWORD PTR ds:[esi]
  43242f:	ret    
  432430:	inc    ebp
  432431:	ret    
  432432:	adc    eax,0x67eff5d6
  432437:	xchg   ebp,eax
  432438:	jmp    0xd43b:0x736c8fcd
  43243f:	inc    ebx
  432440:	sub    DWORD PTR [ebx-0x356fd75d],esi
  432446:	out    dx,eax
  432447:	xor    DWORD PTR [esp+ecx*4],ebx
  43244a:	vpaddsb ymm5,ymm0,YMMWORD PTR [edi]
  43244e:	ins    BYTE PTR es:[edi],dx
  43244f:	dec    edx
  432450:	push   edx
  432452:	int3   
  432453:	and    eax,0xf0a34b1c
  432458:	icebp  
  432459:	aam    0xdc
  43245b:	cmp    eax,edx
  43245d:	in     eax,dx
  43245e:	adc    al,BYTE PTR [edx-0x40]
  432461:	outs   dx,BYTE PTR ds:[esi]
  432462:	out    dx,al
  432463:	pop    ds
  432464:	outs   dx,DWORD PTR ds:[esi]
  432465:	das    
  432466:	mov    esp,0xb28a87df
  43246b:	inc    ebx
  43246c:	call   0xdbc62642
  432471:	inc    BYTE PTR [edx-0x41bedcc5]
  432477:	std    
  432478:	mov    al,ds:0x8f30406d
  43247d:	mov    dh,0x23
  43247f:	jno    0x43248e
  432481:	jo     0x4324c8
  432483:	int3   
  432484:	addr16 pushf 
  432486:	xor    BYTE PTR [edx-0x4038b15a],0x5e
  43248d:	push   esp
  43248e:	dec    edx
  43248f:	aas    
  432490:	sbb    eax,DWORD PTR [ecx+0x5909981a]
  432496:	pop    ds
  432497:	mov    esp,0xc1d78e09
  43249c:	iret   
  43249d:	mov    ah,0x21
  43249f:	ror    DWORD PTR [ecx+0x79],cl
  4324a2:	out    dx,eax
  4324a3:	lds    esp,FWORD PTR [ecx-0x60]
  4324a6:	push   ebx
  4324a7:	icebp  
  4324a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4324a9:	or     ah,BYTE PTR [edx]
  4324ab:	pop    edx
  4324ac:	xor    BYTE PTR [edx-0x1ec3b984],cl
  4324b2:	int3   
  4324b3:	sub    cl,bh
  4324b5:	pop    ebx
  4324b6:	xchg   ebp,eax
  4324b7:	push   edi
  4324b8:	in     eax,0x2b
  4324ba:	sbb    eax,DWORD PTR [ecx-0x66daa75a]
  4324c0:	add    al,0x51
  4324c2:	xchg   DWORD PTR [edx],esi
  4324c4:	pop    edx
  4324c5:	stos   DWORD PTR es:[edi],eax
  4324c6:	daa    
  4324c7:	leave  
  4324c8:	or     BYTE PTR [esi+0x6a],dl
  4324cb:	inc    edx
  4324cc:	ins    BYTE PTR es:[edi],dx
  4324cd:	fnstenv [esi+0x3f]
  4324d0:	nop
  4324d1:	fist   WORD PTR [edx]
  4324d3:	xchg   DWORD PTR [ecx-0x2],ebx
  4324d6:	mov    al,0x4e
  4324d8:	fnsave [eax-0x73086092]
  4324de:	rcr    DWORD PTR ds:0xb43c9553,0xcf
  4324e5:	xor    BYTE PTR [ebx+eax*2],bl
  4324e8:	cmp    eax,0x29264488
  4324ed:	mov    ds:0x4de47456,al
  4324f2:	mov    bl,0xab
  4324f4:	xor    eax,0x531e5a1a
  4324f9:	xor    eax,0x28adb00b
  4324fe:	xor    eax,0xdd27f266
  432503:	test   ecx,esp
  432505:	push   edx
  432506:	and    al,0x86
  432508:	sbb    bl,BYTE PTR [edi+0x7a817b53]
  43250e:	es stc 
  432510:	leave  
  432511:	idiv   DWORD PTR [edi-0x6eb43509]
  432517:	jns    0x43257d
  432519:	mov    es,WORD PTR [esi-0x598ae68a]
  43251f:	add    eax,0xf7a4b336
  432524:	cs dec ecx
  432526:	cwde   
  432527:	sub    eax,0xa13c18e0
  43252c:	cli    
  43252d:	das    
  43252e:	mov    ebx,0x819c0dae
  432533:	mov    esp,0x58d4e6e0
  432538:	ret    
  432539:	jns    0x43253e
  43253b:	dec    ebx
  43253c:	inc    edi
  43253d:	pushf  
  43253e:	and    al,0x72
  432540:	push   ecx
  432541:	imul   esi,DWORD PTR ds:0x131aeb16,0x2d
  432548:	jmp    0x39c5bf94
  43254d:	cmp    eax,0x2d06421c
  432552:	push   edi
  432553:	into   
  432554:	push   es
  432555:	jecxz  0x432582
  432557:	(bad)  
  432558:	cmp    DWORD PTR [eax+0x5e],esp
  43255b:	arpl   WORD PTR [ebp-0x207eed73],ax
  432561:	and    al,0xb
  432563:	enter  0x4623,0x5
  432567:	sbb    BYTE PTR [ecx-0x72],dh
  43256a:	inc    esi
  43256b:	inc    ebp
  43256c:	mov    ah,0x6e
  43256e:	mov    ds:0x6b0a7f0f,eax
  432574:	xor    ebp,DWORD PTR [edi-0x7940947b]
  43257a:	push   ebp
  43257b:	dec    ebx
  43257c:	mov    cl,0x66
  43257e:	call   0xd9c032d1
  432583:	push   ss
  432584:	or     eax,0xcfc6e751
  432589:	mov    ch,al
  43258b:	fldenv [edx-0x22265072]
  432591:	(bad)  [ecx-0x7f94c998]
  432597:	stos   DWORD PTR es:[edi],eax
  432598:	imul   edi,DWORD PTR [eax],0xffffff9b
  43259b:	jg     0x4325e6
  43259d:	and    al,0xe5
  43259f:	and    DWORD PTR [eax-0x8],edx
  4325a2:	adc    bh,cl
  4325a4:	out    dx,al
  4325a5:	xor    al,0xcf
  4325a7:	xor    edx,DWORD PTR [edx-0x5353377b]
  4325ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4325ae:	fwait
  4325af:	repnz mov bl,0x1f
  4325b2:	test   dl,ah
  4325b4:	add    DWORD PTR [esi-0x9],esp
  4325b7:	mov    ds:0xc7a8ce68,al
  4325bc:	inc    ecx
  4325bd:	test   eax,0x194e544d
  4325c2:	retf   
  4325c3:	push   ebp
  4325c4:	cmp    ecx,DWORD PTR [eax]
  4325c6:	inc    ebp
  4325c7:	mov    edx,DWORD PTR [ebp-0x69]
  4325ca:	nop
  4325cb:	popa   
  4325cc:	fs push ebx
  4325ce:	jo     0x432569
  4325d0:	mov    edi,0x18f7d631
  4325d5:	cmp    bl,bh
  4325d7:	lock mov ecx,ss
  4325da:	mov    WORD PTR [ebp+eiz*4+0x4c3c89df],ds
  4325e1:	out    0x98,al
  4325e3:	ret    
  4325e4:	lods   eax,DWORD PTR ds:[esi]
  4325e5:	aaa    
  4325e6:	mov    cl,0x79
  4325e8:	dec    eax
  4325e9:	and    eax,0xbb5aef1
  4325ee:	mov    ds:0x9ad8683b,al
  4325f3:	cmp    cl,ah
  4325f5:	jg     0x4325c6
  4325f7:	mov    ecx,0xb910ca93
  4325fc:	cli    
  4325fd:	rcl    BYTE PTR [eax-0x6e78e0ca],1
  432603:	into   
  432604:	sub    esp,edx
  432606:	jle    0x43258f
  432608:	(bad)  
  432609:	adc    eax,0x7c3fcfd
  43260e:	jnp    0x4325ac
  432610:	pop    edx
  432611:	mov    dh,0xe0
  432613:	ror    DWORD PTR [esi+0xbe27995],0x75
  43261a:	aam    0xa0
  43261c:	xor    DWORD PTR ds:0x1e03100f,ebp
  432622:	adc    al,0xfd
  432624:	pop    ebp
  432625:	sub    BYTE PTR [esi],dh
  432627:	fistp  DWORD PTR [edi+0x4f537fa6]
  43262d:	dec    esp
  43262e:	and    DWORD PTR [ecx+0x24],esp
  432631:	addr16 xchg esi,eax
  432633:	cli    
  432634:	ret    0xf38b
  432637:	push   0xffffffb0
  432639:	or     BYTE PTR [esi-0x13],dl
  43263c:	adc    al,0x28
  43263e:	pop    ebp
  43263f:	jecxz  0x432682
  432641:	xor    bh,dl
  432643:	push   ecx
  432644:	out    0x80,al
  432646:	(bad)  
  432647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432648:	out    dx,eax
  432649:	(bad)  
  43264a:	out    dx,al
  43264b:	jnp    0x432628
  43264d:	std    
  43264e:	loop   0x432695
  432650:	dec    esp
  432651:	pop    ecx
  432652:	and    bl,BYTE PTR [esi+edi*4+0x40]
  432656:	sbb    DWORD PTR [ecx-0x301c04ac],ebx
  43265c:	test   eax,0x36397e98
  432661:	int3   
  432662:	jno    0x43269d
  432664:	pop    ebx
  432665:	pop    edi
  432666:	jno    0x43261d
  432668:	mov    al,0x50
  43266a:	jno    0x4326ac
  43266c:	fld    QWORD PTR [edi+0x61]
  43266f:	jb     0x432607
  432671:	scas   eax,DWORD PTR es:[edi]
  432672:	dec    edi
  432673:	clc    
  432674:	test   DWORD PTR [edi],0x6f8fa613
  43267a:	aad    0xca
  43267c:	push   ebp
  43267d:	loop   0x432641
  43267f:	pop    ds
  432680:	jp     0x43268e
  432682:	xor    al,0xb4
  432684:	or     al,BYTE PTR [ecx+0x3c]
  432687:	lahf   
  432688:	cmp    DWORD PTR [esi-0x80],esi
  43268b:	into   
  43268c:	out    dx,al
  43268d:	xchg   esp,eax
  43268e:	test   eax,0x749d73b3
  432693:	mov    ?,ecx
  432695:	nop
  432696:	jb     0x432630
  432698:	loope  0x43265f
  43269a:	js     0x432620
  43269c:	xchg   ebx,eax
  43269d:	nop
  43269e:	sbb    al,0x0
  4326a0:	in     al,dx
  4326a1:	mov    ecx,0x5aed97b8
  4326a6:	jg     0x4326a1
  4326a8:	lds    ebx,FWORD PTR [edx+0x69e51e06]
  4326ae:	es in  eax,0x63
  4326b1:	adc    ebx,esp
  4326b3:	mov    esp,0xf851661b
  4326b8:	fcomp  DWORD PTR [ecx]
  4326ba:	shl    DWORD PTR [ecx-0x134d227f],cl
  4326c0:	inc    eax
  4326c1:	popa   
  4326c2:	push   es
  4326c3:	mov    ah,bh
  4326c5:	dec    edi
  4326c6:	and    al,0xbb
  4326c8:	lea    ebp,[esi+edx*4]
  4326cb:	mov    ecx,0x4d060b6c
  4326d0:	ret    
  4326d1:	aam    0x9c
  4326d3:	aaa    
  4326d4:	adc    ecx,DWORD PTR [esi-0x44aeca17]
  4326da:	leave  
  4326db:	pop    esp
  4326dc:	jl     0x432664
  4326de:	(bad)  
  4326df:	int    0xca
  4326e1:	in     eax,dx
  4326e2:	dec    eax
  4326e3:	lock sbb BYTE PTR [edx+0x3aa4c896],ch
  4326ea:	ret    
  4326eb:	mov    ecx,0x9e48ae25
  4326f0:	dec    ecx
  4326f1:	pop    ecx
  4326f2:	cdq    
  4326f3:	dec    eax
  4326f4:	push   0xe4504c19
  4326f9:	mov    eax,0x1f289d74
  4326fe:	iret   
  4326ff:	xchg   DWORD PTR [esi+0x1fdd204d],esi
  432705:	fcomp  DWORD PTR [esi]
  432707:	jg     0x432788
  432709:	popa   
  43270a:	cmp    edi,0x7b
  43270d:	pop    ebx
  43270e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43270f:	stos   DWORD PTR es:[edi],eax
  432710:	mov    gs,WORD PTR [edx-0x7ea45830]
  432716:	xchg   edx,eax
  432717:	add    dl,BYTE PTR [edi]
  432719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43271a:	dec    esi
  43271b:	pushf  
  43271c:	mov    cl,BYTE PTR [ecx]
  43271e:	retf   
  43271f:	sbb    eax,0x9fc72caa
  432724:	jl     0x4326b8
  432726:	mov    cl,0x38
  432728:	retf   
  432729:	adc    esp,esp
  43272b:	xor    al,0x5f
  43272d:	sar    BYTE PTR [ecx-0x549f1a61],1
  432733:	ret    0x9406
  432736:	xchg   esp,eax
  432737:	retf   
  432738:	cld    
  432739:	mov    ds:0xd15d6181,al
  43273e:	pushf  
  43273f:	jmp    0xb58e:0xeb3c9cc5
  432746:	adc    bh,BYTE PTR [edx]
  432748:	adc    BYTE PTR [esi-0x6a80c4db],al
  43274e:	mov    WORD PTR [ecx-0x39],?
  432751:	mov    edi,0xd92d4cf1
  432756:	xor    al,0x9e
  432758:	or     dh,dl
  43275a:	stos   DWORD PTR es:[edi],eax
  43275b:	sbb    DWORD PTR [eax+0x21],0xffffffd3
  43275f:	mov    dh,BYTE PTR [edx+0x68]
  432762:	adc    eax,0x603896a3
  432767:	xor    bh,BYTE PTR ds:0x17f62757
  43276d:	and    al,0xc5
  43276f:	lahf   
  432770:	sub    eax,0x67f9d84d
  432775:	and    al,0x30
  432777:	push   edi
  432778:	in     eax,0xc3
  43277a:	pop    esi
  43277b:	mov    dl,0x86
  43277d:	mov    cl,0x34
  43277f:	lds    ebp,FWORD PTR [esi-0xcff4bf8]
  432785:	pop    ss
  432786:	xor    DWORD PTR [ebp+0xef3014f],0x5da240b7
  432790:	fiadd  DWORD PTR [edx]
  432792:	ins    BYTE PTR es:[edi],dx
  432793:	mul    BYTE PTR [edi+0x45]
  432796:	jecxz  0x432723
  432798:	dec    esi
  432799:	cmp    eax,0x716b9a50
  43279e:	add    BYTE PTR [edi],ah
  4327a0:	pop    esp
  4327a1:	cwde   
  4327a2:	and    al,0x94
  4327a4:	dec    eax
  4327a5:	xchg   edx,eax
  4327a6:	push   ecx
  4327a7:	or     ecx,DWORD PTR [edx-0xcfdf5ce]
  4327ad:	mov    esp,0x8abe31d6
  4327b2:	mov    ecx,0x1a3f295c
  4327b7:	leave  
  4327b8:	mov    ecx,0xae8871d5
  4327bd:	xor    eax,0x9045a6ba
  4327c2:	cmp    edx,DWORD PTR [eax-0x2f]
  4327c5:	ins    DWORD PTR es:[edi],dx
  4327c6:	sbb    BYTE PTR [ebx-0x2c36f589],bl
  4327cc:	mov    ds:0x979ff3a2,al
  4327d1:	test   BYTE PTR [esi+0x753542b2],ah
  4327d7:	pop    eax
  4327d8:	retf   
  4327d9:	je     0x432859
  4327db:	mov    cl,0xa8
  4327dd:	in     al,dx
  4327de:	jge    0x4327d9
  4327e0:	xor    al,0x44
  4327e2:	xchg   edi,eax
  4327e3:	call   0x53c2e6a
  4327e8:	mov    ds:0x39de2f18,eax
  4327ed:	pop    ss
  4327ee:	fbld   TBYTE PTR [ebp+0x1fe51bdb]
  4327f4:	dec    esi
  4327f5:	iret   
  4327f6:	dec    edx
  4327f7:	adc    al,0x12
  4327f9:	mov    WORD PTR [edx+0x5b],?
  4327fc:	push   esi
  4327fd:	cs leave 
  4327ff:	xor    BYTE PTR [edx+0x4f09ea2f],cl
  432805:	shl    BYTE PTR [ebx-0x16],1
  432808:	jno    0x432810
  43280a:	xor    edi,DWORD PTR [esi+0x23]
  43280d:	add    al,BYTE PTR [eax]
  43280f:	or     ah,BYTE PTR [edi]
  432811:	popf   
  432812:	outs   dx,DWORD PTR ds:[esi]
  432813:	mov    eax,ds:0x8277715a
  432818:	mov    esi,0xe9f279e7
  43281d:	pop    edi
  43281e:	shr    DWORD PTR [eax],0x64
  432821:	lock imul edx,DWORD PTR [ebp+eiz*4+0x8b65361],0x49c69f16
  43282d:	jl     0x43284f
  43282f:	push   0x68
  432831:	lea    eax,[edi-0x5c]
  432834:	stos   DWORD PTR es:[edi],eax
  432835:	leave  
  432836:	xchg   ebx,eax
  432837:	dec    ebx
  432838:	out    dx,al
  432839:	aam    0x87
  43283b:	jmp    0x432832
  43283d:	mov    dl,0x85
  43283f:	cld    
  432840:	xchg   edi,eax
  432841:	je     0x432870
  432843:	cwde   
  432844:	ret    0xac49
  432847:	loopne 0x4327d4
  432849:	add    al,0x53
  43284b:	or     BYTE PTR [eax+0x703c4dd6],ah
  432851:	scas   eax,DWORD PTR es:[edi]
  432852:	jle    0x432847
  432854:	mov    bl,0x6e
  432856:	mov    ah,0xb8
  432858:	and    al,0x54
  43285a:	cwde   
  43285b:	sbb    al,0xab
  43285d:	add    al,0xb6
  43285f:	popa   
  432860:	push   DWORD PTR [ebp+0x2c318d37]
  432866:	sub    bh,BYTE PTR [ebx+0x70]
  432869:	(bad)  
  43286a:	cdq    
  43286b:	in     eax,dx
  43286c:	lods   eax,DWORD PTR ds:[esi]
  43286d:	mov    ebx,0xa72477ce
  432872:	nop
  432873:	fld    st(3)
  432875:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  432877:	xchg   BYTE PTR [ebp-0x3f],dl
  43287a:	retf   0x1723
  43287d:	inc    edi
  43287e:	xor    eax,DWORD PTR [ebp+0x6ecd861f]
  432884:	mov    ds:0x9c5d3851,al
  432889:	and    DWORD PTR [edx],ebx
  43288b:	cmc    
  43288c:	lea    ecx,[edi]
  43288e:	pop    esp
  43288f:	out    dx,eax
  432890:	lea    ebx,[esi+0x3d]
  432893:	add    dl,bh
  432895:	or     ch,bh
  432897:	std    
  432898:	into   
  432899:	inc    esi
  43289a:	mov    ecx,0xfe57a988
  43289f:	ret    
  4328a0:	pop    ebx
  4328a1:	(bad)  
  4328a2:	repz dec ecx
  4328a4:	pop    ds
  4328a5:	iret   
  4328a6:	jmp    0x41f17b3a
  4328ab:	mov    esp,0xc08b6e56
  4328b0:	or     edx,DWORD PTR [eax-0x7a]
  4328b3:	ror    BYTE PTR [edx],cl
  4328b5:	in     eax,0x2f
  4328b7:	mov    ebx,eax
  4328b9:	sar    DWORD PTR [edx+0x1fdd8b72],1
  4328bf:	pop    ss
  4328c0:	xchg   edx,eax
  4328c1:	sub    dl,al
  4328c3:	mov    bl,0x5d
  4328c5:	push   0x3f2751a6
  4328ca:	add    bh,BYTE PTR [eax+0x32d0b962]
  4328d0:	mov    edi,0xcbfb6f06
  4328d5:	xchg   BYTE PTR [esi],ah
  4328d7:	cmp    al,0xaf
  4328d9:	xchg   ebp,eax
  4328da:	cld    
  4328db:	cmp    bl,BYTE PTR [ebp+0x4498da3e]
  4328e1:	lds    ebx,FWORD PTR [esp-0x7d43ab0c]
  4328e8:	jle    0x4328a2
  4328ea:	adc    BYTE PTR [edi+0x6da35430],0xdf
  4328f1:	sbb    bh,BYTE PTR [ebp+0x79cecd05]
  4328f7:	hlt    
  4328f8:	mov    ch,0x6
  4328fa:	push   ss
  4328fb:	es adc edi,edi
  4328fe:	add    BYTE PTR [eax-0x4d4627f9],bh
  432904:	mov    ah,0x99
  432906:	imul   ebp,DWORD PTR ds:0x6354c6f5,0xffffffc1
  43290d:	xor    cl,ch
  43290f:	pop    esi
  432910:	push   ebp
  432911:	push   ebp
  432912:	push   ds
  432913:	sbb    DWORD PTR [ecx+ecx*1],0x5b
  432917:	pusha  
  432918:	imul   edi,DWORD PTR [ecx],0x7
  43291b:	loop   0x4328b9
  43291d:	repz inc esp
  43291f:	imul   DWORD PTR [ecx+0x7f]
  432922:	aas    
  432923:	and    eax,0xc0a5f798
  432928:	or     BYTE PTR [ebx-0x4d],0x24
  43292c:	pop    ds
  43292d:	xchg   ecx,eax
  43292e:	ins    BYTE PTR es:[edi],dx
  43292f:	outs   dx,DWORD PTR ds:[esi]
  432930:	call   0x4ced00e3
  432935:	xor    DWORD PTR [edi+0x68f1c8a8],edi
  43293b:	dec    esi
  43293c:	jnp    0x4329b6
  43293e:	bound  eax,QWORD PTR [ebx*8-0x30dcb156]
  432945:	xchg   edx,eax
  432946:	push   edx
  432947:	ret    0xa15
  43294a:	cmp    ecx,DWORD PTR [edi-0x7cf3d3ea]
  432950:	ja     0x432906
  432952:	fwait
  432953:	stos   DWORD PTR es:[edi],eax
  432954:	and    BYTE PTR [ebx-0x57582b7e],dl
  43295a:	call   0x288001ee
  43295f:	repnz les ebx,FWORD PTR [ecx+edi*8-0xb]
  432964:	mov    dl,ah
  432966:	pop    eax
  432967:	stc    
  432968:	add    eax,0x368a5457
  43296d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43296e:	and    DWORD PTR [ebp+eiz*8-0x32178683],esp
  432975:	in     al,0xc9
  432977:	dec    esp
  432978:	dec    esp
  432979:	push   eax
  43297a:	push   eax
  43297b:	ja     0x432969
  43297d:	sbb    BYTE PTR [eax],dh
  43297f:	cld    
  432980:	fnstenv [ebx-0x4a393f67]
  432986:	add    DWORD PTR [edx+0x54c1e18e],ebp
  43298c:	push   ecx
  43298d:	sahf   
  43298e:	js     0x4329e8
  432990:	fwait
  432991:	pushf  
  432992:	mov    dh,0x1f
  432994:	ds xor al,0x59
  432997:	add    bh,BYTE PTR [edx+edi*2]
  43299a:	pop    edx
  43299b:	sbb    edi,DWORD PTR [edi+0x7a65237f]
  4329a1:	out    0x8d,eax
  4329a3:	pop    ebp
  4329a4:	aas    
  4329a5:	jne    0x4329a1
  4329a7:	and    DWORD PTR [eax-0x47],eax
  4329aa:	mov    ds:0x5d02fe13,al
  4329af:	aaa    
  4329b0:	jmp    0xaffdbdb2
  4329b5:	in     eax,dx
  4329b6:	stos   BYTE PTR es:[edi],al
  4329b7:	pop    ebp
  4329b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329b9:	mov    esp,0x79d9844b
  4329be:	sub    ebx,DWORD PTR [edx]
  4329c0:	jmp    0xb98:0x2ca37c54
  4329c7:	retf   0xa86a
  4329ca:	inc    esi
  4329cb:	lods   al,BYTE PTR ds:[esi]
  4329cc:	xlat   BYTE PTR ds:[ebx]
  4329cd:	jmp    0x432993
  4329cf:	lahf   
  4329d0:	cmp    al,0x5e
  4329d2:	outs   dx,DWORD PTR ds:[esi]
  4329d3:	pop    edx
  4329d4:	xlat   BYTE PTR ds:[ebx]
  4329d5:	call   0x955dfd74
  4329da:	cwde   
  4329db:	sub    bl,BYTE PTR [ecx+0x5dc597b0]
  4329e1:	pop    edx
  4329e2:	inc    ecx
  4329e3:	gs mov cl,0xfc
  4329e6:	inc    esp
  4329e7:	call   DWORD PTR [ecx]
  4329e9:	cld    
  4329ea:	(bad)  
  4329eb:	push   ebp
  4329ec:	mov    bh,0x8
  4329ee:	mov    cl,0x82
  4329f0:	push   ss
  4329f1:	repnz mov eax,ds:0x888e7629
  4329f7:	ins    DWORD PTR es:[edi],dx
  4329f8:	pop    ebp
  4329f9:	mov    al,0x47
  4329fb:	arpl   WORD PTR [ecx],di
  4329fd:	mov    dh,0x6f
  4329ff:	(bad)  
  432a01:	in     eax,dx
  432a02:	mov    DWORD PTR [ebx],ebx
  432a04:	xchg   ebp,eax
  432a05:	into   
  432a06:	dec    eax
  432a07:	inc    esp
  432a08:	cdq    
  432a09:	cmp    esi,DWORD PTR [ebx+0x79]
  432a0c:	mov    DWORD PTR [ebx],edi
  432a0e:	mov    DWORD PTR [edi],ebp
  432a10:	imul   esp,DWORD PTR [ebx],0xc29d9a22
  432a16:	jmp    0xa7b9:0xe1760fd2
  432a1d:	bound  ebp,QWORD PTR [esi+0x75]
  432a20:	add    edx,ecx
  432a22:	and    DWORD PTR [ecx],edi
  432a24:	cmp    edi,ebp
  432a26:	in     al,0x10
  432a28:	xor    ebp,edi
  432a2a:	and    dl,ch
  432a2c:	sahf   
  432a2d:	aaa    
  432a2e:	imul   al
  432a30:	cmp    BYTE PTR [eax],ch
  432a32:	lods   al,BYTE PTR ds:[esi]
  432a33:	jo     0x4329bf
  432a35:	jmp    0xc16341ff
  432a3a:	pop    esp
  432a3b:	pop    edx
  432a3c:	cmc    
  432a3d:	cld    
  432a3e:	aaa    
  432a3f:	icebp  
  432a40:	sub    eax,0xf0ca8bdc
  432a45:	leave  
  432a46:	push   ss
  432a47:	adc    esi,DWORD PTR [ebp-0xf]
  432a4a:	repz jbe 0x4329db
  432a4d:	mov    ds:0x542c01f3,eax
  432a52:	rcr    BYTE PTR [ebx],1
  432a54:	rcr    BYTE PTR [edx-0x32],0x5b
  432a58:	int    0x8d
  432a5a:	sub    cl,cl
  432a5c:	jge    0x432a63
  432a5e:	sub    BYTE PTR [edi],ch
  432a60:	shr    DWORD PTR [ecx+edi*8+0x655890d8],0xee
  432a68:	sahf   
  432a69:	push   esi
  432a6a:	test   DWORD PTR [eax+0x31a665a2],edi
  432a70:	jl     0x432ae5
  432a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432a73:	adc    cl,0xce
  432a76:	mov    ebp,0x87b162ed
  432a7b:	ds xchg ebx,eax
  432a7d:	lahf   
  432a7e:	adc    ecx,DWORD PTR [esi+0x55a3e11f]
  432a84:	enter  0x27d4,0x96
  432a88:	sahf   
  432a89:	hlt    
  432a8a:	ins    DWORD PTR es:[edi],dx
  432a8b:	aas    
  432a8c:	mov    al,ds:0xadd91b9a
  432a91:	and    dh,BYTE PTR [ecx]
  432a93:	pop    ss
  432a94:	mov    esi,edx
  432a96:	mov    ecx,0x54c65b49
  432a9b:	into   
  432a9c:	xchg   ecx,eax
  432a9d:	pop    edx
  432a9e:	sub    ebx,edi
  432aa0:	and    DWORD PTR [edi],0xffffff88
  432aa3:	sub    BYTE PTR [edi],ah
  432aa5:	mov    eax,ds:0x13b1ff4c
  432aaa:	sbb    al,0x6f
  432aac:	mov    ds:0xd678af7c,eax
  432ab1:	loope  0x432a35
  432ab3:	sub    ecx,DWORD PTR [ecx+0x666078f8]
  432ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432aba:	nop
  432abb:	sub    DWORD PTR [ecx],0xb49b6556
  432ac1:	call   0x54e3:0xca472f4f
  432ac8:	aaa    
  432ac9:	push   cs
  432aca:	sbb    al,0xf2
  432acc:	loopne 0x432aa0
  432ace:	sbb    BYTE PTR [ebp+esi*4-0x26],cl
  432ad2:	cwde   
  432ad3:	push   0x97d98b8f
  432ad8:	dec    esi
  432ad9:	xchg   ecx,eax
  432ada:	ret    
  432adb:	push   ds
  432adc:	call   0x89a3bc92
  432ae1:	sahf   
  432ae2:	inc    edi
  432ae3:	jg     0x432ade
  432ae5:	mov    esp,0x69bad703
  432aeb:	sub    eax,0xb43ee2ad
  432af0:	pop    ds
  432af1:	ja     0x432b1e
  432af3:	mov    eax,0x650cc6b1
  432af8:	loope  0x432b0a
  432afa:	shl    bh,1
  432afc:	push   cs
  432afd:	and    al,0x4f
  432aff:	pushf  
  432b00:	inc    ebp
  432b01:	scas   al,BYTE PTR es:[edi]
  432b02:	call   0x80ea3b9f
  432b07:	in     eax,0xc8
  432b09:	(bad)  
  432b0a:	sub    eax,0x4b71b740
  432b0f:	xor    dl,BYTE PTR [edi+0x1c]
  432b12:	jno    0x432ace
  432b14:	sub    BYTE PTR [eax],ch
  432b16:	pop    ebp
  432b17:	cdq    
  432b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b19:	mul    DWORD PTR ds:0x7c1fd4cb
  432b1f:	push   0xffffffcb
  432b21:	sbb    al,0x8
  432b23:	push   ebx
  432b24:	inc    esp
  432b25:	mov    cl,0x1c
  432b27:	pop    esi
  432b28:	in     al,dx
  432b29:	jl     0x432b69
  432b2b:	jbe    0x432abd
  432b2d:	(bad)  
  432b2e:	shl    BYTE PTR [edx+0x45],1
  432b31:	sub    al,0x16
  432b33:	push   ds
  432b34:	ficomp WORD PTR cs:0xfeb10603
  432b3b:	xor    ecx,DWORD PTR [edx+0x12d2a397]
  432b41:	push   ebx
  432b42:	mov    ds:0xc178466d,eax
  432b47:	loop   0x432b51
  432b49:	daa    
  432b4a:	sbb    eax,0x6873f161
  432b4f:	mov    ds:0x791a0756,al
  432b54:	mov    DWORD PTR [eax-0x698226c1],ebx
  432b5a:	mov    ecx,0x86925dcc
  432b5f:	push   ebp
  432b60:	in     eax,dx
  432b61:	in     al,dx
  432b62:	test   al,0xdb
  432b64:	stos   BYTE PTR es:[edi],al
  432b65:	iret   
  432b66:	pop    ebp
  432b67:	push   ebp
  432b68:	bound  ecx,QWORD PTR [ebx+edi*2-0x17]
  432b6c:	and    BYTE PTR [ebp+0x51f24dd0],ch
  432b72:	jmp    0xe223:0xc1657844
  432b79:	(bad)  
  432b7a:	mov    esi,0xea79f44d
  432b7f:	mov    gs,WORD PTR [ebx-0x6f]
  432b82:	test   DWORD PTR [ebp-0x76c27f28],ebx
  432b88:	jnp    0x432bb6
  432b8a:	repnz xor BYTE PTR [esi-0x3986ed89],dh
  432b91:	imul   BYTE PTR [edx+0x6b]
  432b94:	sahf   
  432b95:	pop    edx
  432b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b97:	ins    DWORD PTR es:[edi],dx
  432b98:	mov    al,0xa0
  432b9a:	dec    ebp
  432b9b:	loopne 0x432c0c
  432b9d:	pusha  
  432b9e:	dec    eax
  432b9f:	add    cl,ch
  432ba1:	mov    ch,0x86
  432ba3:	and    ebp,DWORD PTR [esi]
  432ba5:	mov    ecx,0xa0b6ab62
  432baa:	add    ecx,ebx
  432bac:	xchg   ebp,eax
  432bad:	popf   
  432bae:	mov    ah,0xab
  432bb0:	pop    eax
  432bb1:	sub    esi,DWORD PTR [eax*8+0x6f69fc3b]
  432bb8:	hlt    
  432bb9:	in     al,dx
  432bba:	out    dx,eax
  432bbb:	pop    eax
  432bbc:	jne    0x432c3b
  432bbe:	sbb    bh,BYTE PTR [edi-0x38]
  432bc1:	jmp    0x2dc8047
  432bc6:	mov    bl,0x40
  432bc8:	pop    ss
  432bc9:	xchg   ecx,eax
  432bca:	push   eax
  432bcb:	fwait
  432bcc:	mov    bl,0x22
  432bce:	outs   dx,DWORD PTR ds:[esi]
  432bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432bd0:	push   ss
  432bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432bd2:	iret   
  432bd3:	enter  0x1739,0x64
  432bd7:	mov    es:0xf7642303,al
  432bdd:	ins    BYTE PTR es:[edi],dx
  432bde:	enter  0xc17f,0xad
  432be2:	adc    al,0x8
  432be4:	fdiv   DWORD PTR [ecx]
  432be6:	jne    0x432bac
  432be8:	mov    ds:0x7725673f,eax
  432bed:	inc    ebx
  432bee:	fs das 
  432bf0:	sub    al,0x3b
  432bf2:	sub    BYTE PTR [eax-0x53],ah
  432bf5:	movzx  esp,ax
  432bf8:	jmp    0x432c6e
  432bfa:	(bad)  
  432bfb:	scas   al,BYTE PTR es:[edi]
  432bfc:	pop    eax
  432bfd:	ins    BYTE PTR es:[edi],dx
  432bfe:	loopne 0x432c27
  432c00:	mov    ecx,0x838d81cd
  432c05:	sub    ch,cl
  432c07:	inc    ecx
  432c08:	jns    0x432c1b
  432c0a:	xchg   esi,eax
  432c0b:	add    esp,DWORD PTR [ebp-0x473b6043]
  432c11:	jo     0x432be0
  432c13:	sti    
  432c14:	shr    DWORD PTR ds:0x354f800a,0xcd
  432c1b:	mov    ds:0x2518ee28,eax
  432c20:	in     eax,dx
  432c21:	sub    cl,cl
  432c23:	mov    esi,DWORD PTR [ecx-0x1ef750e4]
  432c29:	push   esp
  432c2a:	jp     0x432c2d
  432c2c:	jmp    0x432c8d
  432c2e:	dec    edi
  432c2f:	popf   
  432c30:	cmp    eax,0x613a72ce
  432c35:	push   esi
  432c36:	repz leave 
  432c38:	clc    
  432c39:	idiv   DWORD PTR [ebx+ebp*4]
  432c3c:	xor    eax,0x7258c10d
  432c41:	xchg   ebx,eax
  432c42:	mov    ebp,0x8490f083
  432c47:	pop    edx
  432c48:	pop    ebp
  432c49:	jge    0x432c59
  432c4b:	dec    esi
  432c4c:	sub    BYTE PTR [esi+0x5fd1129c],dh
  432c52:	mov    al,0x5f
  432c54:	sti    
  432c55:	xchg   ebp,eax
  432c56:	or     eax,ecx
  432c58:	pop    edi
  432c59:	retf   
  432c5a:	ss pop edi
  432c5c:	mov    edx,0xe913a00b
  432c61:	sub    al,0xfa
  432c63:	adc    edi,DWORD PTR fs:[eax+0x32ad70e9]
  432c6a:	mov    ch,0x11
  432c6c:	xchg   BYTE PTR [eax+ecx*1+0x6b],ah
  432c70:	dec    esi
  432c71:	(bad)  
  432c72:	jmp    0x5267:0xc10cdc5
  432c79:	jmp    0xee10:0x3934a308
  432c80:	adc    bl,bh
  432c82:	icebp  
  432c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c84:	xor    bl,cl
  432c86:	in     eax,0xa9
  432c88:	(bad)  
  432c89:	in     eax,0x3f
  432c8b:	bnd jne 0x432c91
  432c8e:	inc    esi
  432c8f:	leave  
  432c90:	cmp    dl,BYTE PTR [edi-0x4b]
  432c93:	sub    DWORD PTR [ebp-0x7d7475c3],eax
  432c99:	jns    0x432cf5
  432c9b:	cli    
  432c9c:	mov    esp,0xe004b9bd
  432ca1:	out    0x80,eax
  432ca3:	pop    edx
  432ca4:	cli    
  432ca5:	xor    BYTE PTR [ecx],dl
  432ca7:	sahf   
  432ca8:	lds    ecx,FWORD PTR [eax+0x1a]
  432cab:	dec    ebp
  432cac:	std    
  432cad:	jecxz  0x432ce5
  432caf:	dec    ebx
  432cb0:	nop
  432cb1:	daa    
  432cb2:	pop    edi
  432cb3:	inc    eax
  432cb4:	or     eax,0x35478048
  432cb9:	mov    esp,0x7d4e6d9e
  432cbe:	inc    edx
  432cbf:	ss in  al,dx
  432cc1:	fcomp  DWORD PTR [esi]
  432cc3:	cld    
  432cc4:	lahf   
  432cc5:	pop    ds
  432cc6:	bound  edx,QWORD PTR [edi+0x55a00432]
  432ccc:	cld    
  432ccd:	fnstenv [ebx+0x1050ef83]
  432cd3:	fs add eax,0xd5e14ade
  432cd9:	sbb    eax,0xd456df09
  432cde:	call   0x8643:0x2b6550a2
  432ce5:	pop    ds
  432ce6:	dec    edi
  432ce7:	xor    eax,0x358d5829
  432cec:	inc    esp
  432ced:	pusha  
  432cee:	sbb    BYTE PTR [eax+0x668073b0],0xe4
  432cf5:	cmp    esp,DWORD PTR es:[eax]
  432cf8:	jmp    0x26993915
  432cfd:	push   ss
  432cfe:	in     eax,0xeb
  432d00:	popf   
  432d01:	or     BYTE PTR [ebp+0x1a],al
  432d04:	adc    eax,0x822e4771
  432d09:	adc    BYTE PTR [edx+0x69],bl
  432d0c:	scas   al,BYTE PTR es:[edi]
  432d0d:	sar    BYTE PTR [esi+0x75],1
  432d10:	jg     0x432cd1
  432d12:	jg     0x432cc1
  432d14:	inc    esp
  432d15:	dec    edx
  432d16:	es ins DWORD PTR es:[edi],dx
  432d18:	pop    eax
  432d19:	(bad)  
  432d1a:	sub    DWORD PTR [ebx],esp
  432d1c:	call   DWORD PTR [eax-0x3]
  432d1f:	std    
  432d20:	pop    edi
  432d21:	mov    bl,0x73
  432d23:	inc    ebx
  432d24:	inc    eax
  432d25:	xor    al,0x37
  432d27:	xor    al,0x63
  432d29:	jle    0x432d1d
  432d2b:	in     al,0xd0
  432d2d:	into   
  432d2e:	mov    eax,ds:0x7108af90
  432d33:	jmp    0x432d3f
  432d35:	dec    ebx
  432d36:	inc    ecx
  432d37:	xor    dh,BYTE PTR fs:[ebp+0x38b05594]
  432d3e:	je     0x432d25
  432d40:	popa   
  432d41:	or     DWORD PTR [ebx+0x63],ecx
  432d44:	push   esp
  432d45:	cmp    BYTE PTR [eax+ecx*1],bl
  432d48:	(bad)  [ebp*4-0x45759b1]
  432d4f:	ss mov ch,0x18
  432d52:	popa   
  432d53:	sub    BYTE PTR [ecx-0x3f3d2f25],bh
  432d59:	or     BYTE PTR [ecx-0x967640f],ah
  432d5f:	add    al,0x8b
  432d61:	push   esi
  432d62:	ins    BYTE PTR es:[edi],dx
  432d63:	mov    bl,0xe3
  432d65:	xor    eax,0x3806b66d
  432d6a:	xchg   esp,eax
  432d6b:	pop    edi
  432d6c:	into   
  432d6d:	in     al,dx
  432d6e:	push   edi
  432d6f:	(bad)  
  432d70:	mov    eax,ds:0xf706183e
  432d75:	pop    ecx
  432d76:	ins    DWORD PTR es:[edi],dx
  432d77:	or     edi,DWORD PTR [eax]
  432d79:	(bad)  
  432d7a:	fs sti 
  432d7c:	xchg   esi,eax
  432d7d:	ja     0x432d92
  432d7f:	xchg   ebx,eax
  432d80:	jb     0x432da0
  432d82:	adc    al,0x93
  432d84:	sub    eax,0xa32ece5d
  432d89:	in     eax,dx
  432d8a:	mov    edi,0x6e788085
  432d8f:	outs   dx,BYTE PTR ds:[esi]
  432d90:	iret   
  432d91:	cdq    
  432d92:	in     al,0x93
  432d94:	call   0x8bd9:0x397e852d
  432d9b:	shl    DWORD PTR [ebx],0xd0
  432d9e:	or     edx,DWORD PTR ds:0x90885146
  432da4:	inc    esp
  432da5:	gs jmp 0xb44e:0xa93515
  432dad:	cli    
  432dae:	jecxz  0x432d9a
  432db0:	int3   
  432db1:	adc    dh,BYTE PTR [ecx+0x2e4c0887]
  432db7:	xchg   ebx,eax
  432db8:	lock (bad) 
  432dba:	sar    BYTE PTR [ebx-0x4f],0xde
  432dbe:	jmp    0x432e2c
  432dc0:	ficomp WORD PTR [ecx+0x4d0a512b]
  432dc6:	int3   
  432dc7:	in     al,dx
  432dc8:	pop    esi
  432dc9:	ds adc al,0xbf
  432dcc:	out    dx,al
  432dcd:	and    al,0xc0
  432dcf:	xor    BYTE PTR [ebx-0x12327cbd],dl
  432dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432dd6:	push   eax
  432dd7:	hlt    
  432dd8:	mov    ebp,0xc3d8542
  432ddd:	pminsw mm2,mm0
  432de0:	(bad)
  432de4:	out    0x92,al
  432de6:	cld    
  432de7:	into   
  432de8:	or     BYTE PTR [edi+0x398b4d30],bh
  432dee:	and    al,dh
  432df0:	pop    esi
  432df1:	xchg   edx,eax
  432df2:	sbb    edi,DWORD PTR [eax]
  432df4:	jbe    0x432dae
  432df6:	shl    ebx,0x53
  432df9:	jmp    0xb386:0xa8a7a6c0
  432e00:	mov    cl,0x16
  432e02:	mov    esi,0x2217224e
  432e07:	adc    eax,0xdf36d1f9
  432e0c:	xchg   edx,eax
  432e0d:	addr16 test al,0x0
  432e10:	mov    ebx,0x6381c99c
  432e15:	xchg   ebp,eax
  432e16:	imul   ecx,DWORD PTR [ebx],0x63c4a07f
  432e1c:	ret    0x583
  432e1f:	ror    DWORD PTR ds:0xfdc24eae,1
  432e25:	xor    eax,0xe16a353d
  432e2a:	test   al,0xfa
  432e2c:	or     cl,BYTE PTR [ebx+esi*2+0x17]
  432e30:	addr16 ret 0x7ac5
  432e34:	vmread DWORD PTR [edx+ebx*4],eax
  432e38:	adc    BYTE PTR [ecx],bh
  432e3a:	loope  0x432e4c
  432e3c:	cmp    dl,BYTE PTR [ecx-0x55]
  432e3f:	push   ss
  432e40:	out    dx,al
  432e41:	mov    eax,0x6a36e9d2
  432e46:	push   ecx
  432e47:	or     edx,DWORD PTR [ebx+0x6c]
  432e4a:	cmp    eax,0x3eb696a6
  432e4f:	out    dx,eax
  432e50:	jle    0x432e55
  432e52:	jns    0x432dd8
  432e54:	call   0x2bc1de5e
  432e59:	mov    dh,0xab
  432e5b:	mov    edi,0x8a764ca4
  432e60:	clc    
  432e61:	repnz lock mov ebx,0xb16c9b7
  432e68:	jbe    0x432e39
  432e6a:	(bad)
  432e6e:	mov    esp,0x84e3e896
  432e73:	mov    al,ds:0xa8ac4c37
  432e78:	push   edi
  432e79:	scas   eax,DWORD PTR es:[edi]
  432e7a:	pushf  
  432e7b:	sbb    edx,0x615ca744
  432e81:	cmp    ah,bh
  432e83:	add    bh,BYTE PTR [edi+0xdfdf1a]
  432e89:	jns    0x432ece
  432e8b:	iret   
  432e8c:	imul   esi,DWORD PTR ds:0x403dcef,0x19
  432e93:	jae    0x432e32
  432e95:	or     ch,BYTE PTR [esi+eax*2-0x3a72a8a8]
  432e9c:	lds    ebx,FWORD PTR [edx-0x70]
  432e9f:	inc    eax
  432ea0:	cmp    eax,0xa3d1d37b
  432ea5:	mov    ch,0xd5
  432ea7:	mov    bl,0x90
  432ea9:	jbe    0x432f12
  432eab:	iret   
  432eac:	test   eax,0x9164a067
  432eb1:	pop    ss
  432eb2:	cs pop edi
  432eb4:	or     ecx,esi
  432eb6:	(bad)  
  432eb7:	xchg   ebx,eax
  432eb8:	xor    DWORD PTR [edi],edx
  432eba:	sub    BYTE PTR [edx],al
  432ebc:	pop    esp
  432ebd:	in     eax,0x8d
  432ebf:	mov    cl,dl
  432ec1:	add    ch,cl
  432ec3:	adc    DWORD PTR [edi],edx
  432ec5:	iret   
  432ec6:	shl    DWORD PTR [ebp+0x6961e394],1
  432ecc:	mov    eax,ds:0x258e0998
  432ed1:	push   edx
  432ed2:	stos   BYTE PTR es:[edi],al
  432ed3:	cmp    esp,DWORD PTR [edx-0x59]
  432ed6:	dec    ebx
  432ed7:	pushf  
  432ed8:	dec    cl
  432eda:	pop    edx
  432edb:	das    
  432edc:	ins    DWORD PTR es:[edi],dx
  432edd:	pop    ebx
  432ede:	je     0x432ef6
  432ee0:	xchg   esp,eax
  432ee1:	dec    ebp
  432ee2:	mov    BYTE PTR [edi-0x2d],bl
  432ee5:	add    eax,0x306a564f
  432eea:	retf   
  432eeb:	pop    esp
  432eec:	les    ecx,FWORD PTR [edi-0x358ca15f]
  432ef2:	and    BYTE PTR [ecx*8+0x34a7dec2],0x1f
  432efa:	fs xchg edi,eax
  432efc:	setg   dh
  432eff:	sub    al,0x9c
  432f01:	pushf  
  432f02:	fsub   st(1),st
  432f04:	addr16 inc eax
  432f06:	sub    eax,0xef249aa7
  432f0b:	xor    bl,BYTE PTR [ebp+0xf]
  432f0e:	jg     0x432f31
  432f10:	(bad)  
  432f12:	pop    eax
  432f13:	(bad)  
  432f14:	pushf  
  432f15:	xchg   ebp,eax
  432f16:	mov    edx,0xdcf84e31
  432f1b:	cmp    ecx,DWORD PTR [esi-0xe010d42]
  432f21:	rcl    DWORD PTR [edi+0x6b],0x21
  432f25:	or     al,0xc5
  432f27:	addr16 push ds
  432f29:	lahf   
  432f2a:	mov    al,0x5
  432f2c:	mov    ebp,0x92a65f09
  432f31:	adc    al,0x1c
  432f33:	ficomp WORD PTR [ebp-0x7a2da670]
  432f39:	push   es
  432f3a:	adc    eax,0x8f9ab7c9
  432f3f:	jg     0x432fc0
  432f41:	(bad)  
  432f42:	das    
  432f43:	mov    edx,es
  432f45:	rcr    BYTE PTR [eax+0x23],1
  432f48:	das    
  432f49:	in     al,0x10
  432f4b:	inc    esp
  432f4c:	adc    eax,0x3b9a0f42
  432f51:	dec    DWORD PTR [ebp+0x23]
  432f54:	ror    BYTE PTR [edx-0x6b],cl
  432f57:	xchg   edi,eax
  432f58:	lahf   
  432f59:	push   ds
  432f5a:	push   es
  432f5b:	jl     0x432ef8
  432f5d:	inc    ebp
  432f5e:	outs   dx,BYTE PTR ds:[esi]
  432f5f:	jno    0x432f20
  432f61:	pop    ebp
  432f62:	xchg   ebx,eax
  432f63:	test   BYTE PTR [edx],0xde
  432f66:	pop    esp
  432f67:	lods   eax,DWORD PTR ds:[esi]
  432f68:	(bad)  
  432f69:	ss std 
  432f6b:	(bad)  
  432f6c:	(bad)  
  432f6d:	add    cl,BYTE PTR [eax]
  432f6f:	sbb    BYTE PTR [ebp+eax*8-0x40c1c110],bl
  432f76:	sti    
  432f77:	mov    edx,0xa1243ca6
  432f7c:	pop    edi
  432f7d:	inc    ecx
  432f7e:	push   es
  432f7f:	fdiv   DWORD PTR [ebx+0x67]
  432f82:	shl    DWORD PTR [ebx],cl
  432f84:	mov    edi,ecx
  432f86:	and    dl,0x72
  432f89:	std    
  432f8a:	cwde   
  432f8b:	mov    ah,0x45
  432f8d:	lds    ebp,FWORD PTR [edi]
  432f8f:	dec    esp
  432f90:	rcr    BYTE PTR [eax],1
  432f92:	xor    ch,BYTE PTR [edi+0x72]
  432f95:	int3   
  432f96:	es stc 
  432f98:	(bad)
  432f9c:	nop
  432f9d:	mov    esp,ss
  432f9f:	sar    DWORD PTR [esi],cl
  432fa1:	add    esi,DWORD PTR [edi+0x31]
  432fa4:	cmc    
  432fa5:	add    dl,BYTE PTR [ebx]
  432fa7:	(bad)  
  432fa8:	mov    eax,ds:0x3438c2a0
  432fad:	xchg   ecx,eax
  432fae:	push   ebx
  432faf:	mov    ecx,0x104708e8
  432fb4:	jl     0x432fe0
  432fb6:	fld    st(1)
  432fb8:	pop    eax
  432fb9:	loope  0x432f44
  432fbb:	jae    0x432fa9
  432fbd:	add    eax,0x512c51d0
  432fc2:	out    0xe6,al
  432fc4:	or     esi,ebx
  432fc6:	xor    cl,BYTE PTR [ebp-0x2b9cabaa]
  432fcc:	cmp    eax,0x962ec734
  432fd1:	push   ecx
  432fd2:	test   DWORD PTR [esi+0x6016b6df],ebx
  432fd8:	fcom   QWORD PTR [ecx-0xb]
  432fdb:	push   0x94cf7f30
  432fe0:	jg     0x43303b
  432fe2:	dec    esi
  432fe3:	or     edi,eax
  432fe5:	icebp  
  432fe6:	add    al,0xe6
  432fe8:	nop
  432fe9:	out    dx,al
  432fea:	xor    ch,BYTE PTR fs:[esi+ebx*1]
  432fee:	jl     0x433018
  432ff0:	aas    
  432ff1:	out    dx,al
  432ff2:	mov    al,ds:0x7d49e35
  432ff7:	mov    bh,0x38
  432ff9:	cmp    eax,0x20a5d2a
  432ffe:	push   ecx
  432fff:	xchg   ebx,eax
  433000:	xor    DWORD PTR [esi-0x10caa5a6],0xffffff95
  433007:	xor    eax,0x7699541e
  43300c:	jnp    0x432fe5
  43300e:	inc    esi
  43300f:	call   0x95bc:0xf650e3b2
  433016:	pushf  
  433017:	lahf   
  433018:	test   BYTE PTR [edi],0xbc
  43301b:	pop    eax
  43301c:	bound  ebx,QWORD PTR [esi+0x40]
  43301f:	fs cdq 
  433021:	sub    eax,0x4cfd25fd
  433026:	cld    
  433027:	rcl    eax,1
  433029:	mov    dh,0x2e
  43302b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43302c:	add    bl,BYTE PTR [eax+ecx*2-0x4b]
  433030:	push   esi
  433031:	add    eax,0xe280486a
  433036:	ins    DWORD PTR es:[edi],dx
  433037:	out    dx,eax
  433038:	dec    ebp
  433039:	vmovhps QWORD PTR [ebp+0x7d],xmm2
  43303e:	ret    0x18df
  433041:	jae    0x432fd8
  433043:	mov    al,0xc
  433045:	pop    ebp
  433046:	dec    ebx
  433047:	lods   al,BYTE PTR ds:[esi]
  433048:	fld    DWORD PTR ds:0xb726a515
  43304e:	mov    edi,0x70e572f3
  433053:	stos   DWORD PTR es:[edi],eax
  433054:	inc    esi
  433055:	adc    al,bh
  433057:	push   ebp
  433058:	push   edi
  433059:	and    BYTE PTR [esi],0x6f
  43305c:	add    edi,DWORD PTR [ecx+0x6a3a78aa]
  433062:	push   ss
  433063:	lods   eax,DWORD PTR ds:[esi]
  433064:	mov    dl,0x4d
  433066:	imul   eax,DWORD PTR [eax],0x49
  433069:	(bad)  
  43306a:	arpl   WORD PTR [ebx-0x5a1f4cc7],ax
  433070:	mov    ds:0x4e4c593c,eax
  433075:	popf   
  433076:	and    al,0xe2
  433078:	lahf   
  433079:	popa   
  43307a:	clc    
  43307b:	sahf   
  43307c:	cs in  al,0x34
  43307f:	ret    
  433080:	push   eax
  433081:	aad    0x97
  433083:	jno    0x43303b
  433085:	call   0xd454:0xa6db593c
  43308c:	shl    ebp,0xe4
  43308f:	arpl   WORD PTR [edi-0x22b7ea7e],sp
  433095:	dec    esi
  433096:	stc    
  433097:	mov    cl,0x68
  433099:	mov    edi,0x6c4bda0b
  43309e:	pop    ds
  43309f:	stc    
  4330a0:	sbb    cl,BYTE PTR [ecx]
  4330a2:	xlat   BYTE PTR ds:[ebx]
  4330a3:	xor    eax,DWORD PTR [esi]
  4330a5:	out    0x8,al
  4330a7:	push   0xffffff90
  4330a9:	pop    ebx
  4330aa:	ss addr16 lahf 
  4330ad:	leave  
  4330ae:	ins    BYTE PTR es:[edi],dx
  4330af:	ins    BYTE PTR es:[edi],dx
  4330b0:	pop    edx
  4330b1:	es jmp 0xce39921e
  4330b7:	arpl   bp,sp
  4330b9:	mov    bl,0xf4
  4330bb:	in     al,dx
  4330bc:	in     eax,dx
  4330bd:	mov    esi,0xd88a30f3
  4330c2:	(bad)  
  4330c3:	ja     0x43308f
  4330c5:	stos   DWORD PTR es:[edi],eax
  4330c6:	lods   eax,DWORD PTR ds:[esi]
  4330c7:	fld    TBYTE PTR [ecx]
  4330c9:	xchg   esi,eax
  4330ca:	xchg   ecx,eax
  4330cb:	mov    ch,0x73
  4330cd:	out    0x66,al
  4330cf:	pop    ecx
  4330d0:	adc    eax,0x60e5a4a9
  4330d5:	xchg   esi,eax
  4330d6:	xor    ebp,DWORD PTR [edi+ebx*8-0x425f6bb6]
  4330dd:	pop    esi
  4330de:	shl    esi,1
  4330e0:	jne    0x433062
  4330e2:	xchg   esp,eax
  4330e3:	fcomp  DWORD PTR [edx+0x5e]
  4330e6:	cmp    eax,edi
  4330e8:	adc    dh,bh
  4330ea:	aas    
  4330eb:	jp     0x433169
  4330ed:	jmp    0x4330aa
  4330ef:	loopne 0x4330aa
  4330f1:	ja     0x43308d
  4330f3:	mov    WORD PTR [ecx-0x1e],ss
  4330f6:	lock outs dx,WORD PTR ds:[esi]
  4330f9:	adc    BYTE PTR [ebp-0x54],bh
  4330fc:	aad    0x72
  4330fe:	inc    ebx
  4330ff:	in     eax,dx
  433100:	and    al,0xec
  433102:	call   0x26fc:0x16a1e2fa
  433109:	f2xm1  
  43310b:	and    al,0x40
  43310d:	xchg   esi,eax
  43310e:	mov    bl,0x36
  433110:	cmp    BYTE PTR [edx],ah
  433112:	push   ss
  433113:	sub    DWORD PTR [ebx+0x704806c0],ecx
  433119:	fs test al,0x30
  43311c:	das    
  43311d:	int3   
  43311e:	jmp    0xad32b08b
  433123:	icebp  
  433124:	int    0x7b
  433126:	cmp    eax,0x48c119fb
  43312b:	and    al,0x3c
  43312d:	pop    ds
  43312e:	jae    0x4330dc
  433130:	inc    esp
  433131:	pop    ss
  433132:	jge    0x433100
  433134:	push   esp
  433135:	and    DWORD PTR [edi-0x36551835],edi
  43313b:	xchg   cl,dl
  43313d:	ror    BYTE PTR [esp+eiz*8],0x76
  433141:	mov    al,ds:0xb53cae79
  433146:	and    BYTE PTR [edi],0xf5
  433149:	std    
  43314a:	(bad)  
  43314b:	xchg   edi,eax
  43314c:	shl    dl,cl
  43314e:	jb     0x433168
  433150:	into   
  433151:	enter  0xf16e,0xa
  433155:	dec    BYTE PTR [edx+0x2b]
  433158:	add    BYTE PTR [edx+0x50],0x61
  43315c:	fadd   st,st(1)
  43315e:	or     al,0x6
  433160:	bsr    esi,DWORD PTR [ebp-0x4bdd07d8]
  433167:	and    edi,ebx
  433169:	jbe    0x4330f2
  43316b:	hlt    
  43316c:	cmp    eax,0x3d1d0403
  433171:	mov    edi,0x54bd372d
  433176:	bound  edi,QWORD PTR [ecx]
  433178:	xchg   ebx,eax
  433179:	mov    BYTE PTR [eax+ebx*1],ah
  43317c:	push   ebp
  43317d:	stos   BYTE PTR es:[edi],al
  43317e:	mov    dl,0x99
  433180:	mov    esp,0x5062a5e
  433185:	pop    es
  433186:	pop    esp
  433187:	mov    dh,BYTE PTR [ebp-0x2944843a]
  43318d:	mov    edx,DWORD PTR [ebp-0x2c41c19b]
  433193:	outs   dx,DWORD PTR ds:[esi]
  433194:	test   al,0xeb
  433196:	xchg   ebp,eax
  433197:	inc    ecx
  433198:	sbb    DWORD PTR [ecx],ebx
  43319a:	cmp    ah,bl
  43319c:	sbb    eax,0x2f857f3a
  4331a1:	pop    edi
  4331a2:	shr    BYTE PTR [ecx],cl
  4331a4:	adc    bh,0x51
  4331a7:	jbe    0x433130
  4331a9:	fld    DWORD PTR [eax]
  4331ab:	mov    ecx,0x21655927
  4331b0:	inc    esp
  4331b1:	(bad)  
  4331b2:	mov    eax,0x18d26075
  4331b7:	rcr    DWORD PTR [esi],1
  4331b9:	mov    dl,0x10
  4331bb:	(bad)  
  4331bc:	aaa    
  4331bd:	je     0x4331df
  4331bf:	mov    esi,0x8b87c0f7
  4331c4:	adc    BYTE PTR ds:[ecx-0x4152e8de],al
  4331cb:	push   eax
  4331cc:	ss push 0xffffffe0
  4331cf:	mov    DWORD PTR [esi+0x15],0x835c30d0
  4331d6:	fsub   QWORD PTR [eax+ebx*1]
  4331d9:	dec    ecx
  4331da:	ret    0x8c43
  4331dd:	sub    dh,BYTE PTR [eax-0x87ea340]
  4331e3:	data16 lahf 
  4331e5:	es inc esp
  4331e7:	add    ah,BYTE PTR [eax-0x4d]
  4331ea:	ja     0x43322f
  4331ec:	mov    cl,BYTE PTR [edx+0x10]
  4331ef:	cwde   
  4331f0:	mov    WORD PTR [edi+0x1eae2b56],ss
  4331f6:	xchg   edi,eax
  4331f7:	or     esi,0xa10a9c39
  4331fd:	sub    esp,edi
  4331ff:	add    eax,0xa2a3ff38
  433204:	jno    0x43324b
  433206:	push   ss
  433207:	xchg   ebp,eax
  433208:	retf   
  433209:	icebp  
  43320a:	sbb    BYTE PTR [esi-0x12],dl
  43320d:	fadd   DWORD PTR [edx]
  43320f:	sbb    eax,0x1418061b
  433214:	sub    al,0x9e
  433216:	inc    esi
  433217:	push   ebx
  433218:	jbe    0x433203
  43321a:	ret    0xff97
  43321d:	sahf   
  43321e:	or     al,0xa8
  433220:	fnstsw WORD PTR cs:[ecx]
  433223:	jb     0x43325c
  433225:	sahf   
  433226:	jle    0x43323c
  433228:	and    BYTE PTR [esi],0x17
  43322b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43322c:	outs   dx,DWORD PTR ds:[esi]
  43322d:	addr16 add al,0xef
  433230:	sub    DWORD PTR [eax+0x3],edi
  433233:	push   ecx
  433234:	and    BYTE PTR [esi+0x2e],ah
  433237:	in     al,dx
  433238:	popf   
  433239:	lods   eax,DWORD PTR ds:[esi]
  43323a:	xor    DWORD PTR [edx+0xb],esi
  43323d:	mov    al,ds:0xb628079e
  433242:	int    0x96
  433244:	jecxz  0x4331d2
  433246:	push   edx
  433247:	ins    BYTE PTR es:[edi],dx
  433248:	das    
  433249:	and    edi,DWORD PTR [ebx]
  43324b:	daa    
  43324c:	js     0x433247
  43324e:	dec    ebp
  43324f:	and    BYTE PTR [ebx+0x64],cl
  433252:	outs   dx,BYTE PTR ds:[esi]
  433253:	shl    BYTE PTR [edx],cl
  433255:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  433257:	sbb    DWORD PTR [esp+ebp*2+0x59339dc2],0x67
  43325f:	(bad)  
  433260:	xor    al,0xdf
  433262:	xchg   ebx,eax
  433263:	das    
  433264:	and    ch,BYTE PTR [edx]
  433266:	inc    edi
  433267:	xchg   BYTE PTR [edi+0x4b],al
  43326a:	bound  eax,QWORD PTR [ebx-0x7d]
  43326d:	test   BYTE PTR [esp+eax*4+0x5b855c10],0x7e
  433275:	(bad)  
  433276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433277:	push   es
  433278:	xor    ecx,DWORD PTR [ebp+0x2]
  43327b:	fcomip st,st(0)
  43327d:	push   ebx
  43327e:	outs   dx,DWORD PTR ds:[esi]
  43327f:	leave  
  433280:	and    eax,0x80076d24
  433285:	xchg   edx,eax
  433286:	mov    ?,WORD PTR [edi]
  433288:	pop    edx
  433289:	jb     0x4332d1
  43328b:	lds    edx,FWORD PTR [eax+0x15e92e33]
  433291:	xor    al,0xd7
  433293:	add    eax,0xd6e57aed
  433298:	inc    esp
  433299:	push   edi
  43329a:	repz push edi
  43329c:	stc    
  43329d:	push   ebp
  43329e:	jo     0x433224
  4332a0:	iret   
  4332a1:	pushf  
  4332a2:	dec    ebp
  4332a3:	out    0xcb,eax
  4332a5:	nop
  4332a6:	jne    0x4332a8
  4332a8:	call   0x3d9769f3
  4332ad:	pop    ecx
  4332ae:	inc    ecx
  4332af:	test   BYTE PTR [ecx-0x79c0683c],dl
  4332b5:	sbb    bl,al
  4332b7:	or     dl,dh
  4332b9:	(bad)  
  4332ba:	gs mov eax,0x97c7effb
  4332c0:	cmp    eax,0xec88909c
  4332c5:	cdq    
  4332c6:	push   ds
  4332c7:	imul   eax,DWORD PTR [ebx+0x5370775b],0x23
  4332ce:	push   0xffffffed
  4332d0:	mov    dl,0x21
  4332d2:	in     eax,0xc2
  4332d4:	and    BYTE PTR [eax+0x6b3401bc],0xb6
  4332db:	ret    0xf66d
  4332de:	adc    dh,BYTE PTR [esi-0xc529ee8]
  4332e4:	and    eax,0xeabf7c79
  4332e9:	hlt    
  4332ea:	outs   dx,BYTE PTR ds:[esi]
  4332eb:	sbb    BYTE PTR [eax+eiz*1],bh
  4332ee:	mov    al,0x14
  4332f0:	sbb    eax,0xbb2c0e5
  4332f5:	xlat   BYTE PTR ds:[ebx]
  4332f6:	aaa    
  4332f7:	and    eax,DWORD PTR [edx]
  4332f9:	mov    ds:0xd213f589,al
  4332fe:	mov    edx,0xd0c152f2
  433303:	cmp    al,BYTE PTR [esi]
  433305:	fcomp  DWORD PTR ds:0xc49a8944
  43330b:	dec    eax
  43330c:	dec    esp
  43330d:	mov    eax,ds:0xc695dab4
  433312:	mov    dl,0x63
  433314:	icebp  
  433315:	pop    es
  433316:	mov    WORD PTR [di+0x3073],?
  43331b:	lods   eax,DWORD PTR ds:[esi]
  43331c:	rcl    ah,1
  43331e:	fdiv   DWORD PTR [ebx-0x62]
  433321:	daa    
  433322:	out    dx,eax
  433323:	mov    ah,0xf6
  433325:	xchg   edx,eax
  433326:	add    edx,DWORD PTR [ecx]
  433328:	push   ebp
  433329:	shl    DWORD PTR [ebx-0x6832cd51],0xb4
  433330:	jne    0x4333a9
  433332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433333:	test   BYTE PTR [ebp+0x31],ch
  433336:	xchg   DWORD PTR [esi+0x5],esp
  433339:	psubb  mm7,mm0
  43333c:	fistp  QWORD PTR [edi-0x6c4c2f18]
  433342:	shl    ah,1
  433344:	push   cs
  433345:	mov    ds:0x96f532e7,eax
  43334a:	nop
  43334b:	mov    cs:0x8a542d75,eax
  433351:	mov    esp,0xc86050a3
  433356:	sub    edi,ebx
  433358:	pop    ds
  433359:	not    DWORD PTR [ebp-0x547e7c0d]
  43335f:	lea    edx,[ebx]
  433361:	in     eax,dx
  433362:	sub    esp,DWORD PTR [esi+0x721908dd]
  433368:	push   edx
  433369:	test   al,0xa4
  43336b:	repnz int3 
  43336d:	mov    ecx,eax
  43336f:	mov    ebx,0x8e9d9fa3
  433374:	add    al,ah
  433376:	jl     0x43334f
  433378:	mov    al,ds:0xd79a0648
  43337d:	mov    ah,0xfb
  43337f:	sti    
  433380:	aas    
  433381:	fimul  WORD PTR [esp+ecx*4+0x38]
  433385:	push   esp
  433386:	mov    bh,0x0
  433388:	xchg   esi,eax
  433389:	xchg   esi,eax
  43338a:	out    dx,eax
  43338b:	test   al,0x10
  43338d:	add    esi,DWORD PTR ds:0xf65a8ec5
  433393:	mov    bh,0x36
  433395:	scas   eax,DWORD PTR es:[edi]
  433396:	pop    ebx
  433397:	pop    esp
  433398:	inc    ebx
  433399:	sar    BYTE PTR [esi-0x2ea56c00],cl
  43339f:	jge    0x4333c8
  4333a1:	mov    ebp,DWORD PTR [esi+0x3406f618]
  4333a7:	retf   
  4333a8:	sahf   
  4333a9:	ins    DWORD PTR es:[edi],dx
  4333aa:	mov    esi,DWORD PTR es:[ecx+edx*8]
  4333ae:	or     eax,DWORD PTR gs:[ecx]
  4333b1:	xchg   edi,eax
  4333b2:	xchg   esi,eax
  4333b3:	shr    BYTE PTR [edx+0x21],cl
  4333b6:	mov    ebx,0x80cf881d
  4333bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4333bc:	ret    0xc67b
  4333bf:	and    BYTE PTR [eax-0x6c],al
  4333c2:	(bad)  
  4333c3:	inc    ebx
  4333c4:	mov    bl,0xc9
  4333c6:	inc    ebp
  4333c7:	cmc    
  4333c8:	sti    
  4333c9:	push   esi
  4333ca:	cs cmp edx,esp
  4333cd:	nop
  4333ce:	je     0x433437
  4333d0:	cdq    
  4333d1:	jmp    0xec5302ef
  4333d6:	cmp    al,0x28
  4333d8:	sub    esi,DWORD PTR [edi-0x70]
  4333db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333dc:	jne    0x433387
  4333de:	jge    0x433428
  4333e0:	aas    
  4333e1:	ss jo  0x43343c
  4333e4:	inc    edi
  4333e5:	inc    BYTE PTR [edi+0x44104856]
  4333eb:	adc    eax,0x6173949a
  4333f0:	mov    ebp,?
  4333f2:	mov    esi,0xe3da9cee
  4333f7:	(bad)
  4333fa:	lock arpl di,dx
  4333fd:	inc    esp
  4333fe:	in     eax,dx
  4333ff:	adc    DWORD PTR [ecx+ebp*1-0x1c782242],edx
  433406:	ror    BYTE PTR [edx+0x3d1d2f42],1
  43340c:	pop    edi
  43340d:	jg     0x4333f4
  43340f:	lahf   
  433410:	xchg   DWORD PTR [edx+0x4c17d685],ebp
  433416:	cld    
  433417:	ficomp WORD PTR [ebp+ecx*1-0x29]
  43341b:	test   al,0x78
  43341d:	popa   
  43341e:	mov    bh,0x2c
  433420:	lods   eax,DWORD PTR ds:[esi]
  433421:	sub    bl,dl
  433423:	or     al,0x62
  433425:	push   ecx
  433426:	sbb    eax,0xef1f4bc
  43342b:	jl     0x4333eb
  43342d:	lods   eax,DWORD PTR ds:[esi]
  43342e:	lds    esp,FWORD PTR [edi+eiz*1]
  433431:	lahf   
  433432:	dec    esi
  433433:	add    al,0xa6
  433435:	xor    al,0xc7
  433437:	pop    edx
  433438:	cmp    eax,0xcc64374b
  43343d:	push   0x3f1c58c3
  433442:	stos   BYTE PTR es:[edi],al
  433443:	jge    0x43345d
  433445:	mov    cl,0xcd
  433447:	(bad)  
  433448:	sub    esi,eax
  43344a:	jnp    0x433407
  43344c:	out    dx,al
  43344d:	push   ebx
  43344e:	in     eax,0x1d
  433450:	pop    ss
  433451:	cwde   
  433452:	pop    edx
  433453:	call   0x7c82:0x12431ec
  43345a:	adc    BYTE PTR [ecx],dl
  43345c:	hlt    
  43345d:	cli    
  43345e:	fwait
  43345f:	pop    edi
  433460:	sbb    bh,BYTE PTR [esi+0x32a6d742]
  433466:	hlt    
  433467:	je     0x43343d
  433469:	mov    eax,ds:0x25295eb8
  43346e:	inc    edi
  43346f:	call   0x8d74:0xb7c06e53
  433476:	lods   eax,DWORD PTR ds:[esi]
  433477:	push   eax
  433478:	adc    DWORD PTR [ecx],edx
  43347a:	ror    BYTE PTR [ebp+0x1],0x70
  43347e:	jae    0x4334a3
  433480:	pop    es
  433481:	adc    DWORD PTR [ebx+0x28909de3],edi
  433487:	sub    eax,0x424eca72
  43348c:	cmp    al,0x6b
  43348e:	mov    esp,0x8466d903
  433493:	push   ds
  433494:	out    0x6b,eax
  433496:	add    eax,DWORD PTR [ebx]
  433498:	or     DWORD PTR [ebp-0x6e4d5e0],edi
  43349e:	jnp    0x4334a0
  4334a0:	clc    
  4334a1:	imul   ebx,DWORD PTR [ebx+0x10],0x56d2899d
  4334a8:	xchg   ecx,eax
  4334a9:	shr    DWORD PTR [ecx-0x1ff018a5],cl
  4334af:	jbe    0x433507
  4334b1:	jge    0x4334a9
  4334b3:	daa    
  4334b4:	popf   
  4334b5:	mul    DWORD PTR [edx-0x1a]
  4334b8:	imul   edx,DWORD PTR [ebx-0x329233bb],0xd0b26b7b
  4334c2:	sub    al,0x6a
  4334c4:	jmp    0x4334fe
  4334c6:	pop    edi
  4334c7:	inc    edi
  4334c8:	fucomi st,st(2)
  4334ca:	cmp    eax,0xa24acbb9
  4334cf:	xor    edx,DWORD PTR [ebp-0x7b]
  4334d2:	mov    ch,0xa1
  4334d4:	jmp    0x960b:0x19f739d2
  4334db:	aad    0xf9
  4334dd:	xchg   edx,eax
  4334de:	mov    al,0x5f
  4334e0:	mov    edx,0xaeb6e502
  4334e5:	imul   eax,DWORD PTR [eax-0x56],0x7b18eaa0
  4334ec:	add    dh,bh
  4334ee:	dec    edx
  4334ef:	imul   BYTE PTR [ecx+edi*1+0x0]
  4334f3:	sbb    eax,0xc3211354
  4334f8:	stc    
  4334f9:	stos   DWORD PTR es:[edi],eax
  4334fa:	les    esp,FWORD PTR [eax-0x73]
  4334fd:	lahf   
  4334fe:	scas   eax,DWORD PTR es:[edi]
  4334ff:	fs int3 
  433501:	xchg   ebp,eax
  433502:	pop    ds
  433503:	div    BYTE PTR [ebp-0x19]
  433506:	add    eax,0xafc76fe1
  43350b:	dec    ecx
  43350c:	fcom   QWORD PTR ss:[ecx]
  43350f:	and    eax,0xe5dfee17
  433514:	xchg   edx,eax
  433515:	mov    DWORD PTR [ebp+0x6286d5aa],edx
  43351b:	jo     0x4334fa
  43351d:	jmp    0x1cc22a1a
  433522:	call   0x5d6a:0x23f6f460
  433529:	fdiv   DWORD PTR [ebx+eax*1+0x296f9422]
  433530:	mov    dh,0x7b
  433532:	add    BYTE PTR [ebp+0x2189ff44],0xb2
  433539:	sub    edi,DWORD PTR [edx+edi*8+0x41]
  43353d:	pop    es
  43353e:	lea    eax,[edi-0x5adf04de]
  433544:	rol    DWORD PTR ds:0x800f33e9,1
  43354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43354b:	push   0x2b
  43354d:	mov    ecx,0xa0ccda7b
  433552:	mov    ah,0x34
  433554:	mov    dh,0xac
  433556:	gs sti 
  433558:	gs cmp al,0x89
  43355b:	cs pop edi
  43355d:	out    0x5e,eax
  43355f:	in     al,0x19
  433561:	aaa    
  433562:	jecxz  0x433538
  433564:	sti    
  433565:	outs   dx,DWORD PTR ds:[esi]
  433566:	inc    ecx
  433567:	and    BYTE PTR [eax+0x4],al
  43356a:	cwde   
  43356b:	cmp    ecx,DWORD PTR [edx+0x3b9949cd]
  433571:	adc    eax,0xac09804f
  433576:	or     eax,0xe4ae0002
  43357b:	clc    
  43357c:	cmp    ebp,DWORD PTR [esi+0x50]
  43357f:	xlat   BYTE PTR ds:[ebx]
  433580:	in     eax,0x3a
  433582:	sub    ah,ch
  433584:	mov    al,ds:0x9e0d2771
  433589:	xchg   ebx,eax
  43358a:	inc    edx
  43358b:	shr    DWORD PTR [eax-0x54],1
  43358e:	ss nop
  433590:	push   0x3f
  433592:	cmp    ch,al
  433594:	jl     0x43354d
  433596:	push   DWORD PTR [ebp+0x12f81a81]
  43359c:	sub    eax,0xf3062168
  4335a1:	int3   
  4335a2:	jbe    0x433530
  4335a4:	push   edx
  4335a5:	mov    eax,ds:0x85ab3000
  4335aa:	mov    ah,0x2e
  4335ac:	adc    eax,0x4f368ca8
  4335b1:	enter  0x9295,0xea
  4335b5:	in     al,dx
  4335b6:	sub    bl,bh
  4335b8:	aaa    
  4335b9:	into   
  4335ba:	shl    BYTE PTR [ecx-0x370f4615],cl
  4335c0:	pusha  
  4335c1:	cmp    ebx,DWORD PTR [esi+0x5a891770]
  4335c7:	adc    ch,bh
  4335c9:	shr    DWORD PTR [edx-0x612ca738],cl
  4335cf:	fcmovb st,st(6)
  4335d1:	aas    
  4335d2:	repnz aas 
  4335d4:	add    ch,bh
  4335d6:	mov    bh,0x6e
  4335d8:	sub    al,0x3e
  4335da:	scas   eax,DWORD PTR es:[edi]
  4335db:	pop    edi
  4335dc:	mov    al,0x71
  4335de:	jb     0x4335ef
  4335e0:	out    0xae,eax
  4335e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4335e3:	and    al,0xa0
  4335e5:	ficom  DWORD PTR [ecx+ebx*8+0x261604a]
  4335ec:	int    0x7a
  4335ee:	xor    al,0x62
  4335f0:	(bad)  
  4335f1:	mov    al,0xa3
  4335f3:	pusha  
  4335f4:	mov    bh,0x71
  4335f6:	(bad)  
  4335f7:	jg     0x4335f6
  4335f9:	test   DWORD PTR [ecx],ebp
  4335fb:	rol    BYTE PTR [eax+0x7fa52eab],cl
  433601:	and    DWORD PTR [ebx+0x2b],ebx
  433604:	fdivr  DWORD PTR [edi+eiz*4]
  433607:	sub    eax,0x3fcde279
  43360c:	mov    ebp,0x74742000
  433611:	cmp    DWORD PTR [eax],esi
  433613:	fld    TBYTE PTR [ebx+0x6f0d9400]
  433619:	sbb    bl,BYTE PTR [esi]
  43361b:	arpl   WORD PTR [eax+0x378a8222],sp
  433621:	test   DWORD PTR [esi-0x3f5ca1a8],ebp
  433627:	lea    eax,[eax]
  433629:	inc    edi
  43362a:	push   edi
  43362b:	mov    al,0xe9
  43362d:	push   es
  43362e:	cmp    dh,BYTE PTR [ecx+esi*2+0x54a549de]
  433635:	push   ds
  433636:	aam    0xb7
  433638:	das    
  433639:	inc    esi
  43363a:	cs xchg ebx,eax
  43363c:	out    dx,eax
  43363d:	xchg   ebx,eax
  43363e:	jg     0x4335df
  433640:	(bad)  
  433641:	imul   ebx,DWORD PTR [eax+0x5f5d1d40],0xd
  433648:	mov    dl,0xef
  43364a:	lods   al,BYTE PTR ds:[esi]
  43364b:	repz push ebx
  43364d:	sbb    al,0xc5
  43364f:	cli    
  433650:	push   ss
  433651:	lahf   
  433652:	push   edx
  433653:	scas   eax,DWORD PTR es:[edi]
  433654:	scas   al,BYTE PTR es:[edi]
  433655:	pop    eax
  433656:	iret   
  433657:	sub    BYTE PTR [ecx],ah
  433659:	test   al,0x9a
  43365b:	and    ch,dl
  43365d:	repnz mov dh,0xf2
  433660:	ss hlt 
  433662:	cdq    
  433663:	sub    BYTE PTR [eax+0x168c7420],dl
  433669:	js     0x4336bb
  43366b:	add    bh,cl
  43366d:	loopne 0x4336b6
  43366f:	stos   BYTE PTR es:[edi],al
  433670:	or     BYTE PTR fs:[edi-0x5e],0x91
  433675:	cmp    ecx,DWORD PTR [edi+esi*1+0x1b9bc5]
  43367c:	shl    ah,cl
  43367e:	into   
  43367f:	mov    gs,WORD PTR [edi-0x1c]
  433682:	push   esi
  433683:	pop    eax
  433684:	add    eax,0xf69c0059
  433689:	ret    
  43368a:	fmul   DWORD PTR [edi+0x16d3a572]
  433690:	int3   
  433691:	cmp    DWORD PTR [ecx+0x40],0xffffffc8
  433695:	call   0xc4a0cf6e
  43369a:	pop    bp
  43369c:	nop
  43369d:	cwde   
  43369e:	xor    eax,0x98b9aab6
  4336a3:	dec    eax
  4336a4:	popa   
  4336a5:	xchg   ecx,eax
  4336a6:	cmp    al,BYTE PTR gs:[eax]
  4336a9:	inc    esi
  4336aa:	iret   
  4336ab:	dec    eax
  4336ac:	bnd call 0xd0cad7ae
  4336b2:	imul   ecx,ebx,0x9ad3f8a3
  4336b8:	imul   edi,DWORD PTR [eax],0x45ddf2f5
  4336be:	aad    0xb5
  4336c0:	das    
  4336c1:	jle    0x4336b0
  4336c3:	mov    ecx,0x58cc1999
  4336c8:	fisubr WORD PTR [ebx-0x1]
  4336cb:	daa    
  4336cc:	dec    ecx
  4336ce:	push   ebp
  4336cf:	mov    cl,0xa7
  4336d1:	jbe    0x433724
  4336d3:	stos   DWORD PTR es:[edi],eax
  4336d4:	dec    edi
  4336d5:	push   esp
  4336d6:	leave  
  4336d7:	jne    0x4336d8
  4336d9:	adc    DWORD PTR [esp+ecx*8],ebp
  4336dc:	rcr    bl,1
  4336de:	jnp    0x4336c4
  4336e0:	pushf  
  4336e1:	push   ebx
  4336e2:	retf   0x4602
  4336e5:	push   esi
  4336e6:	xor    DWORD PTR [esp+esi*1-0x3b],edi
  4336ea:	mov    ecx,DWORD PTR [esi-0x1f]
  4336ed:	rcr    dh,1
  4336ef:	cs mov ebx,0x2e11a224
  4336f5:	hlt    
  4336f6:	mov    al,0x9c
  4336f8:	sub    al,0x37
  4336fa:	es jmp 0x4b5b:0x6bb9909b
  433702:	xor    DWORD PTR [esi],ecx
  433704:	adc    eax,0xacda6330
  433709:	dec    ecx
  43370a:	xchg   esp,eax
  43370b:	scas   eax,DWORD PTR es:[edi]
  43370c:	ret    0xf7b0
  43370f:	xor    esi,DWORD PTR [edx+0x13c01d8d]
  433715:	das    
  433716:	mov    ch,0x7a
  433718:	cmp    DWORD PTR [ebx-0x9],0xffffffb1
  43371c:	call   0x3f8ce54f
  433721:	push   0x14
  433723:	nop
  433724:	dec    ebp
  433725:	fmul   DWORD PTR [ebx-0x7]
  433728:	sub    dl,BYTE PTR [ecx-0x4e39994b]
  43372e:	test   al,0xf8
  433730:	int    0x6d
  433732:	mov    esp,0x507f4a4c
  433737:	sbb    BYTE PTR [eax],ah
  433739:	int    0xbd
  43373b:	fucom  st(7)
  43373d:	mov    al,0xa3
  43373f:	stc    
  433740:	xchg   esi,eax
  433741:	aas    
  433742:	fst    DWORD PTR [edx+eax*4-0x49]
  433746:	cmp    edx,0x85d5c0f2
  43374c:	ds (bad) 
  43374e:	cmp    DWORD PTR [edi],ebx
  433750:	js     0x433775
  433752:	(bad)  
  433754:	test   eax,0xa3f65b88
  433759:	mov    al,bh
  43375b:	adc    ebp,ebx
  43375d:	mov    eax,0xd4047e6c
  433762:	cmp    eax,0xd03c306d
  433767:	cs cdq 
  433769:	or     BYTE PTR [eax+0x2cbfd1a6],0x65
  433770:	mov    eax,0xfbe104a2
  433775:	pop    esp
  433776:	or     al,0x49
  433778:	out    dx,eax
  433779:	pop    ebx
  43377a:	(bad)  
  43377b:	pusha  
  43377c:	fsubr  st(6),st
  43377e:	pop    esi
  43377f:	mov    ebx,0xbd4e4bae
  433784:	sbb    ah,BYTE PTR [edi+0x5d]
  433787:	mov    ch,0x4
  433789:	mov    esp,0x83af1f4
  43378e:	lods   al,BYTE PTR ds:[esi]
  43378f:	jl     0x43372d
  433791:	cwde   
  433792:	scas   al,BYTE PTR es:[edi]
  433793:	lods   al,BYTE PTR ds:[esi]
  433794:	ins    DWORD PTR es:[edi],dx
  433795:	xlat   BYTE PTR ds:[ebx]
  433796:	pop    es
  433797:	add    bl,bl
  433799:	icebp  
  43379a:	xor    cl,bh
  43379c:	mov    esi,0x7f60f6a8
  4337a1:	hlt    
  4337a2:	mov    ds:0x13a0922f,eax
  4337a7:	sbb    ah,al
  4337a9:	sbb    edi,DWORD PTR [esp+edx*8]
  4337ac:	outs   dx,DWORD PTR ds:[esi]
  4337ad:	mov    bl,0x8b
  4337af:	scas   al,BYTE PTR es:[edi]
  4337b0:	rcl    BYTE PTR [ebx-0x7a40ac05],0xef
  4337b7:	aas    
  4337b8:	mov    eax,ds:0xd382e6a
  4337bd:	cmp    eax,0xd26a0a0e
  4337c2:	mov    ds:0xc270edcb,al
  4337c7:	xchg   DWORD PTR [ecx],esp
  4337c9:	(bad)  
  4337ca:	pop    eax
  4337cb:	bound  esi,QWORD PTR [edi+ebp*1+0x51a14544]
  4337d2:	add    al,0xce
  4337d4:	mov    WORD PTR ss:[edx],?
  4337d7:	out    0xde,al
  4337d9:	adc    BYTE PTR es:[edx-0x352440c2],0x3f
  4337e1:	pop    ds
  4337e2:	pop    esi
  4337e3:	es cwde 
  4337e5:	jge    0x433817
  4337e7:	scas   al,BYTE PTR es:[edi]
  4337e8:	nop
  4337e9:	xor    edx,DWORD PTR [edx-0x28]
  4337ec:	inc    ebx
  4337ed:	push   eax
  4337ee:	lds    ebx,FWORD PTR [esi-0x76]
  4337f1:	cmp    ch,BYTE PTR [esi+0x3]
  4337f4:	sub    bl,bl
  4337f6:	pop    esi
  4337f7:	dec    edx
  4337f8:	aas    
  4337f9:	lods   al,BYTE PTR ds:[esi]
  4337fa:	mov    esp,0xa4de9107
  4337ff:	xchg   BYTE PTR [edi+0x54ab52af],al
  433805:	pop    esp
  433806:	out    0x13,eax
  433808:	mov    al,0x3b
  43380a:	stos   DWORD PTR es:[edi],eax
  43380b:	pushf  
  43380c:	sahf   
  43380d:	push   edi
  43380e:	jno    0x433837
  433810:	dec    edi
  433811:	add    BYTE PTR [ebx+edi*4-0x6dfc567c],dl
  433818:	fst    st(3)
  43381a:	add    BYTE PTR [esi-0x2115cbcc],bh
  433820:	cmp    BYTE PTR [ebx+0x3c],0x7c
  433824:	cdq    
  433825:	(bad)  
  433826:	int3   
  433827:	cmp    bl,BYTE PTR [eax-0x4f2b4653]
  43382d:	jno    0x43380a
  43382f:	push   0x1a82a6f2
  433834:	xor    BYTE PTR [edx-0x45],ah
  433837:	sbb    dl,BYTE PTR ds:0xa8413dce
  43383d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43383e:	jg     0x433866
  433840:	cmp    DWORD PTR [eax+0x7d],ebx
  433843:	mov    al,ds:0x5e860043
  433848:	pop    edx
  433849:	mov    ah,0x7d
  43384b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43384c:	in     al,dx
  43384d:	mov    ebx,0x80ed4b79
  433852:	add    ebx,ebp
  433854:	out    0x5d,eax
  433856:	ret    
  433857:	ss or  eax,0xf1b8dcbb
  43385d:	sahf   
  43385e:	xchg   edx,eax
  43385f:	adc    eax,0x73c199ed
  433864:	add    ebp,DWORD PTR [ebx-0xb]
  433867:	and    ch,BYTE PTR [ecx]
  433869:	ret    
  43386a:	jg     0x43380d
  43386c:	inc    ecx
  43386d:	and    al,0x43
  43386f:	das    
  433870:	(bad)
  433874:	retf   0x6bbf
  433877:	jno    0x433890
  433879:	sar    DWORD PTR [ecx-0x6d],cl
  43387c:	enter  0xfef3,0xed
  433880:	push   edx
  433881:	adc    DWORD PTR [eax+0x3e],ecx
  433884:	mov    ah,0x67
  433886:	mov    esp,DWORD PTR [ebx]
  433888:	jo     0x43386b
  43388a:	adc    bl,al
  43388c:	push   edx
  43388d:	jne    0x4338cc
  43388f:	dec    ebx
  433890:	mov    bh,0x50
  433892:	call   0xa0ee:0x5ffa730
  433899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43389a:	ja     0x433820
  43389c:	sti    
  43389d:	jp     0x433853
  43389f:	xchg   esp,eax
  4338a0:	ins    BYTE PTR es:[edi],dx
  4338a1:	adc    DWORD PTR [esi+0x29],ecx
  4338a4:	ss dec eax
  4338a6:	shr    WORD PTR [eax+0x64],cl
  4338aa:	je     0x433865
  4338ac:	lahf   
  4338ad:	aaa    
  4338ae:	add    BYTE PTR [ebp+0x5d509c0d],al
  4338b4:	inc    eax
  4338b5:	push   ebp
  4338b6:	mov    bh,0xec
  4338b8:	mov    ebx,0xb28c7f58
  4338bd:	retf   
  4338be:	cld    
  4338bf:	inc    ecx
  4338c0:	daa    
  4338c1:	fld    DWORD PTR [edx]
  4338c3:	fidivr DWORD PTR [esi+0x15]
  4338c6:	fidiv  WORD PTR [ecx+0x73]
  4338c9:	dec    ecx
  4338ca:	cmp    al,0xb3
  4338cc:	mov    WORD PTR [ecx+0x4fda1f81],ds
  4338d2:	test   BYTE PTR [edi-0x45],cl
  4338d5:	sbb    BYTE PTR [ebx],0xd9
  4338d8:	xchg   DWORD PTR [ecx+esi*2],eax
  4338db:	imul   BYTE PTR [edi]
  4338dd:	pop    ecx
  4338de:	dec    esi
  4338df:	daa    
  4338e0:	push   cs
  4338e1:	inc    edx
  4338e2:	cld    
  4338e3:	mov    edx,0x7c3a05c1
  4338e8:	xor    al,bh
  4338ea:	pop    ecx
  4338eb:	(bad)  
  4338ec:	mov    cl,0x8a
  4338ee:	mov    al,ds:0xc52cfe38
  4338f3:	jmp    0x13c6:0x3a37ff5f
  4338fa:	pop    ss
  4338fb:	inc    edx
  4338fc:	pop    es
  4338fd:	mov    dl,BYTE PTR [ebx+edi*8+0x1e]
  433901:	stos   BYTE PTR es:[edi],al
  433902:	xchg   esi,eax
  433903:	sub    dl,al
  433905:	leave  
  433906:	cmp    cl,dh
  433908:	xor    al,bh
  43390a:	mov    ds:0xe620e98,eax
  43390f:	mov    ebp,0x8927e04b
  433914:	jne    0x433898
  433916:	and    al,bl
  433918:	or     BYTE PTR ds:0xe19eb77d,bh
  43391e:	sub    BYTE PTR [edx-0x1ca6efa1],bh
  433924:	and    al,0xe9
  433926:	pushf  
  433927:	sbb    eax,0x14f25eb7
  43392c:	mov    ds:0xfcda19a0,al
  433931:	dec    ebp
  433932:	(bad)  
  433933:	out    0xa4,al
  433935:	sub    bh,BYTE PTR [edi]
  433937:	rcr    DWORD PTR [edi-0x3e63a2a8],0x5
  43393e:	sub    BYTE PTR [eax+ecx*8+0x37],bh
  433942:	inc    edi
  433943:	cmc    
  433944:	aam    0x87
  433946:	inc    edi
  433947:	xchg   DWORD PTR [edi+0x787c36f3],ebx
  43394d:	or     eax,0x7c44e989
  433952:	aam    0xd8
  433954:	cmc    
  433955:	mov    DWORD PTR [esi],edi
  433957:	out    dx,al
  433958:	xor    ah,BYTE PTR [eax]
  43395a:	stc    
  43395b:	or     eax,0xeef83a4f
  433960:	sbb    ax,0x6dc5
  433964:	repnz adc eax,0x76eeb606
  43396a:	dec    edi
  43396b:	sbb    al,0x19
  43396d:	js     0x43392b
  43396f:	jmp    0x4339b1
  433971:	stos   BYTE PTR es:[edi],al
  433972:	fimul  WORD PTR [edx+0x51e6560f]
  433978:	sub    al,0xce
  43397a:	sahf   
  43397b:	inc    ebp
  43397c:	add    edx,DWORD PTR [ecx]
  43397e:	(bad)  
  433980:	inc    esi
  433981:	(bad)  
  433982:	addr16 repz loope 0x43396c
  433986:	mov    ds:0x820af26b,al
  43398b:	sub    eax,0xfcab7c8c
  433990:	mov    dl,0x47
  433992:	cmp    edi,ecx
  433994:	sahf   
  433995:	(bad)  
  433996:	mov    dh,0xe5
  433998:	(bad)  
  433999:	push   edi
  43399a:	jg     0x4339b3
  43399c:	lea    ecx,[edi+0x21]
  43399f:	sbb    bl,dl
  4339a1:	cmp    eax,0x4ed37f53
  4339a6:	in     al,dx
  4339a7:	pop    eax
  4339a8:	out    dx,al
  4339a9:	cmp    eax,0x2d5ffb9d
  4339ae:	jae    0x433940
  4339b0:	repnz or cl,bl
  4339b3:	push   es
  4339b4:	sahf   
  4339b5:	jne    0x4339a2
  4339b7:	or     ecx,edx
  4339b9:	and    dl,dl
  4339bb:	cmp    DWORD PTR [edi],ebx
  4339bd:	push   ds
  4339be:	imul   ecx,ebx,0xe70493a2
  4339c4:	(bad)  
  4339c5:	in     al,0xcf
  4339c7:	je     0x433a0b
  4339c9:	push   esi
  4339ca:	clc    
  4339cb:	or     DWORD PTR [ebx+0x5ff7af04],edi
  4339d1:	fisttp DWORD PTR [edi]
  4339d3:	rol    BYTE PTR [eax+0x26e4bb6e],0xbf
  4339da:	dec    eax
  4339db:	xchg   BYTE PTR [eax+edi*8+0x43],al
  4339df:	retf   0x1176
  4339e2:	int3   
  4339e3:	cmp    al,BYTE PTR [ebx+esi*4]
  4339e6:	and    al,0xee
  4339e8:	(bad)  
  4339e9:	and    BYTE PTR [ecx-0x2e],cl
  4339ec:	retf   0xd93c
  4339ef:	fst    QWORD PTR [ebp+0x34]
  4339f2:	(bad)  
  4339f3:	jmp    0x2fed:0x47a5ead0
  4339fa:	fs cvttps2pi mm2,xmm4
  4339fe:	in     eax,0xbc
  433a00:	mov    dl,0x14
  433a02:	sar    BYTE PTR [esi],0xdc
  433a05:	jle    0x433a55
  433a07:	inc    esp
  433a08:	sub    al,0x8b
  433a0a:	repz mov ch,0x54
  433a0d:	jl     0x4339a8
  433a0f:	xchg   dh,ah
  433a11:	dec    ebx
  433a12:	mov    edx,0xd54bf7a2
  433a17:	fs into 
  433a19:	xor    eax,0x9484dc0c
  433a1e:	stc    
  433a1f:	mov    ds:0x48ffa421,eax
  433a24:	pop    es
  433a25:	popa   
  433a26:	stos   DWORD PTR es:[edi],eax
  433a27:	mov    bl,0xa
  433a29:	jo     0x433a8e
  433a2b:	mov    ds:0xf02e73ba,eax
  433a30:	dec    ebx
  433a31:	icebp  
  433a32:	out    dx,eax
  433a33:	adc    bh,BYTE PTR [ecx]
  433a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a36:	or     dh,BYTE PTR [eax+ebp*8]
  433a39:	sub    DWORD PTR ds:0x7d84e6f2,eax
  433a3f:	xchg   edx,eax
  433a40:	fld    TBYTE PTR [edi+0x46]
  433a43:	push   cs
  433a44:	sub    bh,BYTE PTR [ebx]
  433a46:	inc    esp
  433a47:	dec    ecx
  433a48:	mov    eax,ds:0xd69da085
  433a4d:	or     eax,0x906b6ca0
  433a52:	aaa    
  433a53:	cmp    dl,BYTE PTR [edi]
  433a55:	xchg   esi,eax
  433a56:	lds    eax,FWORD PTR [ecx]
  433a58:	sub    al,0xaa
  433a5a:	inc    edi
  433a5b:	in     al,0x1d
  433a5d:	(bad)  
  433a5e:	jnp    0x433a0b
  433a60:	and    eax,0xe6248f01
  433a65:	cwde   
  433a66:	xchg   edi,eax
  433a67:	mov    BYTE PTR [ebx+0x78fa807],dh
  433a6d:	cmp    al,0xe3
  433a6f:	adc    BYTE PTR [eax-0x9],al
  433a72:	sub    BYTE PTR [edi],0x71
  433a75:	mov    eax,0xfd02fcd1
  433a7a:	push   eax
  433a7b:	out    0xac,al
  433a7d:	lods   eax,DWORD PTR ds:[esi]
  433a7e:	popa   
  433a7f:	mov    eax,0x3b858791
  433a84:	sub    al,0x24
  433a86:	jmp    0x433a2b
  433a88:	dec    ebx
  433a89:	inc    edx
  433a8a:	mov    eax,0x259eb65f
  433a8f:	dec    esi
  433a90:	test   BYTE PTR [edi+edi*1-0x3b],cl
  433a94:	out    dx,eax
  433a95:	add    eax,0x1bb48fc8
  433a9a:	lods   eax,DWORD PTR ds:[esi]
  433a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433a9c:	int3   
  433a9d:	push   cs
  433a9e:	pushf  
  433a9f:	rcl    DWORD PTR [ebp+0x32d57bef],1
  433aa5:	mov    ebp,0x1f777919
  433aaa:	pop    edi
  433aab:	xor    ah,0xc0
  433aae:	mov    dl,ch
  433ab0:	push   esp
  433ab1:	sub    bl,BYTE PTR [edi+0x4]
  433ab4:	dec    edi
  433ab5:	inc    ebx
  433ab6:	or     al,0xcb
  433ab8:	mov    WORD PTR [edx+eax*8+0x66720a66],ss
  433abf:	in     eax,dx
  433ac0:	mov    ebx,0xddbfbd57
  433ac5:	loop   0x433a73
  433ac7:	test   eax,0x2f282d5a
  433acc:	inc    ecx
  433acd:	aas    
  433ace:	pop    ecx
  433acf:	or     esi,DWORD PTR [ecx-0x5d]
  433ad2:	pop    ds
  433ad3:	sbb    BYTE PTR ds:0x222beaa5,bl
  433ad9:	mov    ds:0xee3d3833,eax
  433ade:	mov    ds:0x971f0149,eax
  433ae3:	dec    ecx
  433ae4:	test   BYTE PTR es:[esi+0x1dde6b01],dh
  433aeb:	retf   0x8f39
  433aee:	into   
  433aef:	stc    
  433af0:	ins    BYTE PTR es:[edi],dx
  433af1:	add    al,0x59
  433af3:	jmp    0xdc42f016
  433af8:	cwde   
  433af9:	xchg   esi,eax
  433afa:	inc    edx
  433afb:	jg     0x433b77
  433afd:	nop
  433afe:	(bad)  
  433aff:	cmp    edi,edx
  433b01:	add    esp,DWORD PTR [esi+0x38505c47]
  433b07:	push   0xaccbee13
  433b0c:	sub    al,0xa8
  433b0e:	fidivr WORD PTR gs:[ebx]
  433b11:	imul   ebx,DWORD PTR [ecx-0x60cc9f50],0xffffffef
  433b18:	sbb    BYTE PTR ds:0xaeba746b,ah
  433b1e:	ss es aad 0x71
  433b22:	dec    ecx
  433b23:	push   ebp
  433b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b25:	sar    BYTE PTR [eax+ebx*1-0x38],1
  433b29:	cmp    ebx,edx
  433b2b:	(bad)
  433b2e:	sbb    BYTE PTR [esi+0x38],ah
  433b31:	mov    cl,0x32
  433b33:	cmp    DWORD PTR [eax],0xafa9ede
  433b39:	jge    0x433bab
  433b3b:	cdq    
  433b3c:	cdq    
  433b3d:	fisub  WORD PTR ss:[ebp+0x30]
  433b41:	xor    edx,0xced3336f
  433b47:	int    0xf
  433b49:	sti    
  433b4a:	dec    ecx
  433b4b:	push   0xdb9bfa8
  433b50:	and    ecx,ecx
  433b52:	cmp    al,0x71
  433b54:	xlat   BYTE PTR ds:[ebx]
  433b55:	mov    al,ds:0x9cf04808
  433b5a:	mov    edx,0x775f0c8b
  433b5f:	pop    ecx
  433b60:	(bad)  
  433b62:	aad    0xd8
  433b64:	popf   
  433b65:	inc    edi
  433b66:	je     0x433b06
  433b68:	leave  
  433b69:	xlat   BYTE PTR ds:[ebx]
  433b6a:	bound  ecx,QWORD PTR [edi*4+0x7cc25566]
  433b71:	mov    cl,0xcf
  433b73:	lods   eax,DWORD PTR ds:[esi]
  433b74:	rep outs dx,BYTE PTR ds:[esi]
  433b76:	jae    0x433b50
  433b78:	adc    ah,BYTE PTR [ecx-0x6]
  433b7b:	(bad)  
  433b7d:	out    0x64,al
  433b7f:	popa   
  433b80:	mov    ebx,0x803e9bd
  433b85:	repnz mov ah,0x98
  433b88:	cmp    dl,BYTE PTR [ebp-0x5d]
  433b8b:	xchg   ebp,eax
  433b8c:	mov    ds:0xe7ec3f0c,al
  433b91:	fsubp  st(1),st
  433b93:	xchg   ebp,ebp
  433b95:	enter  0xa141,0x6d
  433b99:	mov    ch,BYTE PTR [esi+ecx*8]
  433b9c:	add    al,0x86
  433b9e:	lods   eax,DWORD PTR ds:[esi]
  433b9f:	out    dx,al
  433ba0:	mov    ecx,0x6d5995c4
  433ba5:	out    dx,eax
  433ba6:	adc    eax,0x15798248
  433bab:	push   ds
  433bac:	test   eax,0xdb578035
  433bb1:	inc    ecx
  433bb2:	or     BYTE PTR [esi+0x6f],dh
  433bb5:	pop    eax
  433bb6:	inc    edx
  433bb7:	sub    ah,BYTE PTR [ebx+0x16]
  433bba:	lahf   
  433bbb:	push   edi
  433bbc:	push   esp
  433bbd:	retf   
  433bbe:	scas   eax,DWORD PTR es:[edi]
  433bbf:	sub    edx,esi
  433bc1:	pushf  
  433bc2:	xlat   BYTE PTR es:[ebx]
  433bc4:	mov    WORD PTR [edi+edi*8],cs
  433bc7:	adc    al,0x25
  433bc9:	pushf  
  433bca:	shr    BYTE PTR [eax],1
  433bcc:	stc    
  433bcd:	(bad)  
  433bce:	fcmovne st,st(3)
  433bd0:	popf   
  433bd1:	xchg   edx,eax
  433bd2:	addr16 inc ebp
  433bd4:	sub    ebx,DWORD PTR [ecx-0x78]
  433bd7:	loopne 0x433b5e
  433bd9:	dec    ebx
  433bda:	fsubr  st(1),st
  433bdc:	push   es
  433bdd:	imul   esp,DWORD PTR [ecx],0x76
  433be0:	cmp    BYTE PTR [edi+esi*8],ah
  433be3:	sub    al,BYTE PTR [ecx]
  433be5:	stc    
  433be6:	fdivrp st(3),st
  433be8:	lahf   
  433be9:	sbb    cl,BYTE PTR [ebx-0x5590e4c6]
  433bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433bf0:	mov    DWORD PTR [esi],edx
  433bf2:	push   es
  433bf3:	loope  0x433c0d
  433bf5:	and    al,0x16
  433bf7:	arpl   WORD PTR [eiz*4-0x5b319e69],cx
  433bfe:	and    al,0xc7
  433c00:	xor    DWORD PTR [edx-0x35e2ab99],ebp
  433c06:	push   ds
  433c07:	jmp    0xd64a:0x372e9af0
  433c0e:	out    dx,eax
  433c0f:	and    dl,BYTE PTR [edi+ecx*1]
  433c12:	(bad)
  433c17:	stc    
  433c18:	out    0xae,al
  433c1a:	in     eax,0xa3
  433c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c1d:	adc    eax,DWORD PTR [edi-0x61]
  433c20:	push   ebp
  433c21:	stc    
  433c22:	popf   
  433c23:	push   ecx
  433c24:	xor    cl,BYTE PTR [ebx]
  433c26:	stc    
  433c27:	inc    edx
  433c29:	sub    edx,esp
  433c2b:	inc    edx
  433c2c:	test   BYTE PTR [eax+0x48],al
  433c2f:	xor    ch,BYTE PTR [edx]
  433c31:	sub    BYTE PTR [eax+ecx*4-0x4b],dl
  433c35:	aaa    
  433c36:	mov    ebp,0x607ae3d6
  433c3b:	cmp    ch,BYTE PTR [edx+0x2988aedd]
  433c41:	outs   dx,BYTE PTR ds:[esi]
  433c42:	test   DWORD PTR [edx-0x13df1b54],edx
  433c48:	jge    0x433c33
  433c4a:	cmp    ebp,ebx
  433c4c:	rcl    bh,0x6c
  433c4f:	xchg   esp,eax
  433c50:	test   BYTE PTR [ebx+0x5],bh
  433c53:	cmp    esp,edx
  433c55:	inc    esi
  433c56:	aaa    
  433c57:	cwde   
  433c58:	mov    ebx,cs
  433c5a:	inc    edx
  433c5b:	sbb    eax,ecx
  433c5d:	mov    esp,0xdc205505
  433c62:	imul   esi,DWORD PTR [ebx],0xfbae8f35
  433c68:	mov    BYTE PTR [ebp-0x1a78ee36],bl
  433c6e:	test   bl,0xa4
  433c71:	in     al,dx
  433c72:	add    eax,0x9177b67a
  433c77:	fxtract 
  433c79:	call   0x44da:0xc764b24
  433c80:	xchg   ebx,eax
  433c81:	dec    eax
  433c82:	outs   dx,BYTE PTR ds:[esi]
  433c83:	mov    ebp,0xc347c726
  433c88:	mov    esi,0xdcb8fbe9
  433c8d:	and    al,BYTE PTR [ecx+eax*4+0xf51f452]
  433c94:	stos   WORD PTR es:[edi],ax
  433c96:	call   0x2cb2:0x4259aa42
  433c9d:	stos   DWORD PTR es:[edi],eax
  433c9e:	sbb    dh,BYTE PTR [esi+eiz*1]
  433ca1:	mov    ebx,0x69a1e851
  433ca6:	mov    dh,0x29
  433ca8:	daa    
  433ca9:	sbb    al,0x19
  433cab:	lds    esp,FWORD PTR [eax+0x2a]
  433cae:	jo     0x433c40
  433cb0:	cdq    
  433cb1:	es aam 0x42
  433cb4:	push   cs
  433cb5:	aas    
  433cb6:	sbb    ebx,DWORD PTR ds:0x9214ca75
  433cbc:	mov    ch,al
  433cbe:	std    
  433cbf:	mov    ebx,0x7eee1d12
  433cc4:	pop    ebp
  433cc5:	mov    al,0x49
  433cc7:	ror    DWORD PTR [ebx-0x3e103bd2],1
  433ccd:	in     eax,dx
  433cce:	icebp  
  433ccf:	(bad)  
  433cd0:	sbb    eax,0xe0c82f50
  433cd5:	jo     0x433cea
  433cd7:	or     bh,BYTE PTR ds:0x7dc1773f
  433cdd:	fsub   QWORD PTR [ecx+0x6f1572d7]
  433ce3:	or     al,0x8
  433ce5:	sti    
  433ce6:	inc    ecx
  433ce7:	nop
  433ce8:	mov    ebp,0xc9185b77
  433ced:	jp     0x433c91
  433cef:	mov    edi,0xa58a5629
  433cf4:	mov    eax,ss
  433cf6:	dec    ebx
  433cf7:	jmp    0x872283a2
  433cfc:	inc    ebx
  433cfd:	pop    ebp
  433cfe:	lock jno 0x433cc7
  433d01:	mov    esp,0x66d8a662
  433d06:	adc    al,0xb7
  433d08:	adc    BYTE PTR [edi+esi*2],0x9a
  433d0c:	mov    al,0x9a
  433d0e:	and    al,0xf5
  433d10:	push   DWORD PTR [edi]
  433d12:	in     eax,dx
  433d13:	push   ss
  433d14:	mov    bl,0x1e
  433d16:	inc    esi
  433d17:	retf   
  433d18:	inc    ebp
  433d19:	adc    al,0xf4
  433d1b:	pushf  
  433d1c:	les    eax,FWORD PTR [esi-0x7ab7a65]
  433d22:	xchg   esi,eax
  433d23:	cmc    
  433d24:	xor    bh,ah
  433d26:	retf   0xb0ed
  433d29:	test   BYTE PTR [edx+0xa],cl
  433d2c:	add    al,0x4e
  433d2e:	ins    DWORD PTR es:[edi],dx
  433d2f:	xor    al,0xe9
  433d31:	imul   BYTE PTR [esi+0x2f]
  433d34:	xchg   esp,eax
  433d35:	or     BYTE PTR [esi],bh
  433d37:	sti    
  433d38:	(bad)  [edi+0x67bac478]
  433d3e:	xor    BYTE PTR [ecx+ebp*1-0x728f25ed],0xcc
  433d46:	dec    edx
  433d47:	sub    eax,0x29dee3ca
  433d4c:	aad    0x3c
  433d4e:	xchg   edx,eax
  433d4f:	xchg   edi,eax
  433d50:	cmp    bl,BYTE PTR [edi-0x36b32be0]
  433d56:	cmc    
  433d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433d58:	sahf   
  433d59:	int    0xd
  433d5b:	and    DWORD PTR [esi+0x257bb23],esp
  433d61:	sbb    ah,BYTE PTR [ebx-0x74f08a33]
  433d67:	neg    DWORD PTR [ecx]
  433d69:	xchg   ebx,eax
  433d6a:	mov    WORD PTR [edi],es
  433d6c:	xchg   BYTE PTR [ecx],bl
  433d6e:	push   0xffffff97
  433d70:	adc    esp,DWORD PTR [esp+eax*4+0x2a]
  433d74:	repz mov al,0x21
  433d77:	bound  edi,QWORD PTR [ecx-0x59]
  433d7a:	jecxz  0x433d27
  433d7c:	sbb    eax,0xa1128487
  433d81:	and    DWORD PTR [eax-0x52e3424c],ebx
  433d87:	in     eax,dx
  433d88:	push   ss
  433d89:	mov    cs,WORD PTR [eax+0x2190d81c]
  433d8f:	jl     0x433e0c
  433d91:	and    al,BYTE PTR [esp+eax*8]
  433d94:	or     BYTE PTR [ebx-0x42b4bb62],cl
  433d9a:	stos   BYTE PTR es:[edi],al
  433d9b:	and    bl,BYTE PTR [ebx]
  433d9d:	mov    bh,0xb0
  433d9f:	inc    esi
  433da0:	cmp    edi,0xfffffff6
  433da3:	ja     0x433d4f
  433da5:	inc    edx
  433da6:	call   DWORD PTR [edi+0x1a]
  433da9:	pop    ds
  433daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433dab:	cmc    
  433dac:	lahf   
  433dad:	cmc    
  433dae:	and    eax,0x1dd992d7
  433db3:	outs   dx,BYTE PTR fs:[esi]
  433db5:	cdq    
  433db6:	xor    ebp,DWORD PTR [edx-0x4242e2c2]
  433dbc:	mov    WORD PTR [eax+ebp*8],fs
  433dbf:	pushf  
  433dc0:	push   ss
  433dc1:	mov    al,BYTE PTR [eax]
  433dc3:	out    dx,al
  433dc4:	push   ebx
  433dc5:	enter  0xdfec,0xd5
  433dc9:	jae    0x433e3a
  433dcb:	vmread DWORD PTR [ecx+0x3c4e253f],ebp
  433dd2:	out    0x72,al
  433dd4:	mov    cl,BYTE PTR [esi+0x38777ef]
  433dda:	inc    dx
  433ddc:	jae    0x433dc2
  433dde:	sti    
  433ddf:	leave  
  433de0:	aad    0x4f
  433de2:	sub    cl,ch
  433de4:	retf   0x26b8
  433de7:	shld   ebx,ebx,0x72
  433deb:	cmp    eax,0xe9e1ddad
  433df0:	fs mov cl,al
  433df3:	stos   BYTE PTR es:[edi],al
  433df4:	mov    cl,0x25
  433df6:	pusha  
  433df7:	pop    es
  433df8:	xchg   BYTE PTR cs:[esi],ah
  433dfb:	xchg   esi,eax
  433dfc:	iret   
  433dfd:	rcr    BYTE PTR [ebx],0x1b
  433e00:	sbb    BYTE PTR [edi+ebp*8+0x1b9104c9],0x8
  433e08:	call   0xe817:0xa9c263b9
  433e0f:	test   DWORD PTR [ebp+0x6c8e95b5],0x11a7ce4f
  433e19:	(bad)  
  433e1a:	ror    BYTE PTR [esi],1
  433e1c:	xor    DWORD PTR [edi-0x22],eax
  433e1f:	aaa    
  433e20:	xchg   esp,eax
  433e21:	popf   
  433e22:	push   edi
  433e23:	jno    0x433dad
  433e25:	clc    
  433e26:	mov    dl,0xe0
  433e28:	in     al,0xd5
  433e2a:	dec    esp
  433e2b:	mov    esi,0x258e0ee9
  433e30:	mov    esi,0x43dc25d3
  433e35:	cmp    al,0x13
  433e37:	(bad)
  433e3a:	lds    ecx,FWORD PTR es:[ebp+0x742ed251]
  433e41:	mov    al,ds:0xa48b6edd
  433e46:	mov    bl,0x97
  433e48:	dec    eax
  433e49:	fbstp  TBYTE PTR [esi+0x2f2adeb2]
  433e4f:	mov    ebx,0x304aa003
  433e54:	add    DWORD PTR [ebx-0x42],ebx
  433e57:	xchg   ebp,eax
  433e58:	xchg   DWORD PTR [eax-0x1bcc6c58],esp
  433e5e:	mov    bh,0xfd
  433e60:	mov    al,0xbd
  433e62:	lods   al,BYTE PTR ds:[esi]
  433e63:	push   edx
  433e64:	inc    esp
  433e65:	adc    DWORD PTR [edi],0x81aef449
  433e6b:	(bad)  
  433e6d:	shl    DWORD PTR ds:0xdbaabb3c,0x9c
  433e74:	xchg   esi,eax
  433e75:	jge    0x433dfa
  433e77:	fistp  WORD PTR [esi+0x1e]
  433e7a:	sti    
  433e7b:	dec    edx
  433e7c:	mov    bl,0x7e
  433e7e:	push   cs
  433e7f:	enter  0x41c6,0x78
  433e83:	push   edx
  433e84:	icebp  
  433e85:	into   
  433e86:	inc    edi
  433e87:	into   
  433e88:	xchg   esi,eax
  433e89:	test   al,0x6a
  433e8b:	cli    
  433e8c:	add    bl,ch
  433e8e:	push   ebx
  433e8f:	adc    edi,DWORD PTR [ecx+0x54e4cab3]
  433e95:	test   eax,0x2a08ad48
  433e9a:	adc    dh,ah
  433e9c:	fcomi  st,st(0)
  433e9e:	jbe    0x433e40
  433ea0:	jo     0x433ec2
  433ea2:	jb     0x433eb7
  433ea4:	les    ecx,FWORD PTR [edx-0x3]
  433ea7:	cmp    cl,dl
  433ea9:	mov    ebp,0x792d61ba
  433eae:	ins    BYTE PTR es:[edi],dx
  433eaf:	push   cs
  433eb0:	push   esp
  433eb1:	and    dh,BYTE PTR [eax+0x1ddd695]
  433eb7:	sbb    eax,0x3ac714f2
  433ebc:	test   DWORD PTR [ebx+edi*2-0x28],0x91547b61
  433ec4:	push   eax
  433ec5:	mov    BYTE PTR ds:0x5be236d,dh
  433ecb:	(bad)  
  433ecd:	adc    bl,BYTE PTR [eax]
  433ecf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  433ed1:	sub    al,0x51
  433ed3:	push   edi
  433ed4:	mov    WORD PTR ds:0x25c98d90,?
  433eda:	test   al,0x35
  433edc:	fimul  DWORD PTR [edi]
  433ede:	mov    edx,0xd49913bc
  433ee3:	mov    ebp,0x67fdfa3a
  433ee8:	gs loopne 0x433f66
  433eeb:	scas   eax,DWORD PTR es:[edi]
  433eec:	ins    DWORD PTR es:[edi],dx
  433eed:	dec    edi
  433eee:	cmp    ebp,DWORD PTR [eax+0x3d1716fa]
  433ef4:	stos   DWORD PTR es:[edi],eax
  433ef5:	jo     0x433ebf
  433ef7:	daa    
  433ef8:	ficomp DWORD PTR [ebx+0xab54d2b]
  433efe:	adc    eax,0x64b58a0
  433f03:	xchg   ebx,eax
  433f04:	sub    al,BYTE PTR [ebp-0x14bf86a7]
  433f0a:	mov    dl,ch
  433f0c:	dec    ebp
  433f0d:	xor    al,0x66
  433f0f:	jb     0x433eb8
  433f11:	cmc    
  433f12:	jl     0x433eca
  433f14:	int    0x88
  433f16:	pop    edi
  433f17:	or     esi,ecx
  433f19:	or     cl,BYTE PTR [edx-0x23]
  433f1c:	mov    ds:0xfdfe209b,eax
  433f21:	jne    0x433f0f
  433f23:	mov    bh,0x57
  433f25:	dec    ebx
  433f26:	hlt    
  433f27:	jbe    0x433f31
  433f29:	and    BYTE PTR [edi],bh
  433f2b:	jo     0x433edc
  433f2d:	xor    al,0xf2
  433f2f:	loope  0x433f00
  433f31:	mov    edx,0x752c10d6
  433f36:	mov    edx,0xd4049d08
  433f3b:	popa   
  433f3c:	xor    al,bl
  433f3e:	xchg   esp,eax
  433f3f:	xchg   ebp,eax
  433f40:	stc    
  433f41:	pop    edi
  433f42:	fbld   TBYTE PTR [ebx+0x44]
  433f45:	in     al,0x62
  433f47:	sar    DWORD PTR [eax+0xbaaedfa],cl
  433f4d:	clc    
  433f4e:	xor    al,cl
  433f50:	in     eax,0xa1
  433f52:	dec    edi
  433f53:	lahf   
  433f54:	ficomp WORD PTR [edx+0x5a043a8f]
  433f5a:	call   0xbf4c43e4
  433f5f:	call   0xda0b6855
  433f64:	pushf  
  433f65:	mov    BYTE PTR [esi-0x2f989d7b],al
  433f6b:	in     eax,dx
  433f6c:	mov    al,0x4e
  433f6e:	(bad)  
  433f6f:	out    0xb1,eax
  433f71:	sbb    al,0xc6
  433f73:	xor    DWORD PTR [esi],esi
  433f75:	push   ecx
  433f76:	mov    dl,0xb7
  433f78:	into   
  433f79:	repnz int 0x1a
  433f7c:	(bad)  
  433f7d:	les    edi,FWORD PTR [edi+0x14008360]
  433f83:	mov    cs,edx
  433f85:	and    esp,DWORD PTR [ecx]
  433f87:	mov    ds,WORD PTR [esi-0x7b]
  433f8a:	jne    0x433f98
  433f8c:	sub    al,BYTE PTR [ebx]
  433f8e:	inc    ecx
  433f8f:	xor    DWORD PTR [ecx-0x75e50a9c],esp
  433f95:	in     al,dx
  433f96:	js     0x433f20
  433f98:	adc    dh,dh
  433f9a:	jne    0x433f46
  433f9c:	mov    al,0xf0
  433f9e:	xchg   ebp,eax
  433f9f:	and    DWORD PTR [edx+0x23],edx
  433fa2:	stc    
  433fa3:	imul   edi,eax,0x656ecede
  433fa9:	inc    eax
  433faa:	outs   dx,BYTE PTR ds:[esi]
  433fab:	cmc    
  433fac:	gs sahf 
  433fae:	xor    BYTE PTR [ebx],cl
  433fb0:	adc    al,al
  433fb2:	pusha  
  433fb3:	dec    ebx
  433fb4:	mov    eax,0x2d99924
  433fb9:	xor    ebx,DWORD PTR [ecx]
  433fbb:	fs (bad) 
  433fbd:	sbb    ah,dh
  433fbf:	leave  
  433fc0:	xor    dh,BYTE PTR [esi-0x14]
  433fc3:	les    ecx,FWORD PTR [ecx]
  433fc5:	aaa    
  433fc6:	aas    
  433fc7:	fcom   DWORD PTR [ebx-0x2c]
  433fca:	int3   
  433fcb:	xor    al,0x38
  433fcd:	mov    al,0xc3
  433fcf:	xchg   edi,eax
  433fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433fd1:	popf   
  433fd2:	xchg   ecx,eax
  433fd3:	mov    edx,0xde3244c6
  433fd8:	enter  0xcee3,0xeb
  433fdc:	test   eax,0xd5c803f
  433fe1:	pop    ebx
  433fe2:	mov    cl,0xb6
  433fe4:	mov    ds:0xa7a2244e,al
  433fe9:	repnz xor cl,BYTE PTR [edx+0x2b]
  433fed:	xchg   esp,eax
  433fee:	ins    DWORD PTR es:[edi],dx
  433fef:	cmp    bl,BYTE PTR [ecx-0x48]
  433ff2:	jb     0x434019
  433ff4:	cmp    DWORD PTR [ecx+0x2e],esi
  433ff7:	imul   DWORD PTR [edi+0x62234444]
  433ffd:	push   es
  433ffe:	mov    edx,0xb7c27b94
  434003:	sub    ecx,ebp
  434005:	xchg   ebp,eax
  434006:	(bad)  
  434008:	icebp  
  434009:	clc    
  43400a:	and    bh,bh
  43400c:	retf   0x8c63
  43400f:	adc    BYTE PTR [eax+0xcab3396],bl
  434015:	pop    ecx
  434016:	jmp    0x1e8c:0xc52211b4
  43401d:	adc    ebp,DWORD PTR [esi+eiz*4+0x1]
  434021:	ss inc ebp
  434023:	(bad)  
  434024:	shr    DWORD PTR [edx-0x45],1
  434027:	fs adc eax,0x5f0b4234
  43402d:	mov    bh,0x31
  43402f:	arpl   WORD PTR [esi-0x4b],dx
  434032:	cld    
  434033:	mov    eax,ds:0xa916e1a
  434038:	xor    eax,0xbd3f967c
  43403d:	dec    ebx
  43403e:	nop
  43403f:	sub    BYTE PTR [ebx],ch
  434041:	push   ss
  434042:	jmp    0x10c3:0xdcded2f7
  434049:	jmp    0x1ae6f2f4
  43404e:	pop    es
  43404f:	adc    al,0x5
  434051:	inc    ebx
  434052:	shl    esi,cl
  434054:	ret    
  434055:	mov    bl,0xab
  434057:	mov    ds:0x75c85176,eax
  43405c:	mov    dl,bh
  43405e:	xchg   DWORD PTR [edi-0x2e],edi
  434061:	loop   0x4340b7
  434063:	ja     0x434068
  434065:	gs retf 0x1e3
  434069:	sbb    esp,edi
  43406b:	cmp    BYTE PTR [eax+0x7f],0x41
  43406f:	mov    fs,edi
  434071:	stos   BYTE PTR es:[edi],al
  434072:	cmp    DWORD PTR [edx-0x5e],eax
  434075:	js     0x434003
  434077:	xchg   ebx,eax
  434078:	and    dl,BYTE PTR [ecx-0x2]
  43407b:	lods   al,BYTE PTR ds:[esi]
  43407c:	lods   al,BYTE PTR ds:[esi]
  43407d:	fild   QWORD PTR [edi+0x4022e13e]
  434083:	fwait
  434084:	test   BYTE PTR [edx-0x4b],ch
  434087:	into   
  434088:	pop    edx
  434089:	ret    
  43408a:	cld    
  43408b:	sbb    al,0x76
  43408d:	sub    esp,DWORD PTR [esi+eax*8-0x7c]
  434091:	sub    BYTE PTR [esi],0x3d
  434094:	mov    ch,0xd1
  434096:	daa    
  434097:	test   eax,eax
  434099:	and    DWORD PTR [ebp-0x5eba453b],ecx
  43409f:	shr    BYTE PTR [ecx-0x39aebe6e],cl
  4340a5:	div    edx
  4340a7:	call   DWORD PTR [esi-0x7c]
  4340aa:	xor    BYTE PTR ds:0x50bba13b,0x3e
  4340b1:	ret    
  4340b2:	ds dec eax
  4340b4:	out    dx,eax
  4340b5:	ficomp WORD PTR [ecx+0x22]
  4340b8:	jb     0x434051
  4340ba:	mov    ?,WORD PTR [ebx]
  4340bc:	pop    ss
  4340bd:	add    eax,0x1381069b
  4340c2:	jle    0x43407e
  4340c4:	repz pop eax
  4340c6:	aam    0x3f
  4340c8:	pop    esp
  4340c9:	shl    DWORD PTR [eax],1
  4340cb:	inc    esi
  4340cc:	xor    eax,DWORD PTR [eax+ebx*4]
  4340cf:	fiadd  WORD PTR [ecx]
  4340d1:	lea    eax,[ebp-0x25215a1d]
  4340d7:	not    BYTE PTR [edi]
  4340d9:	or     DWORD PTR [edi-0x1231a642],ecx
  4340df:	mov    ecx,0x86083af1
  4340e4:	data16 or bh,dl
  4340e7:	adc    BYTE PTR [eax-0x63c4806f],dl
  4340ed:	xchg   edx,eax
  4340ee:	les    esi,FWORD PTR [ebx]
  4340f0:	leave  
  4340f1:	pop    ss
  4340f2:	test   ch,dh
  4340f4:	lods   al,BYTE PTR ds:[esi]
  4340f5:	sub    ecx,DWORD PTR [esi-0x485e19f1]
  4340fb:	loop   0x43416c
  4340fd:	in     al,dx
  4340fe:	leave  
  4340ff:	xchg   edi,eax
  434100:	mov    DWORD PTR [edi],esi
  434102:	pop    ss
  434103:	adc    BYTE PTR [ebx+0x37a5aac9],dh
  434109:	(bad)  
  43410a:	dec    ecx
  43410b:	in     eax,dx
  43410c:	sar    DWORD PTR [edx],1
  43410e:	sahf   
  43410f:	mov    cl,0x73
  434111:	jbe    0x4340bc
  434113:	and    DWORD PTR [esi+0x35],ebp
  434116:	pop    ebx
  434117:	cmp    ch,al
  434119:	add    al,0x6a
  43411b:	repnz push ecx
  43411d:	jnp    0x4340a7
  43411f:	or     dh,BYTE PTR [ecx+ebp*1-0x7d3eff20]
  434126:	pop    edx
  434127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434128:	mov    cl,0x8f
  43412a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43412b:	rcr    DWORD PTR es:[eax],1
  43412e:	cld    
  43412f:	bound  ebp,QWORD PTR [ebp-0x57]
  434132:	cli    
  434133:	mov    ?,WORD PTR ds:0x70511df7
  434139:	fcmovu st,st(3)
  43413b:	xchg   edi,eax
  43413c:	xchg   ebx,eax
  43413d:	mov    eax,DWORD PTR [eax+0x5855cec]
  434143:	mov    ebp,0x162a234c
  434148:	xchg   esi,eax
  434149:	mov    BYTE PTR [edx+0x14],bh
  43414c:	push   cs
  43414d:	mov    BYTE PTR [ebp-0x614f7997],0xb7
  434154:	scas   eax,DWORD PTR es:[edi]
  434155:	jnp    0x434166
  434157:	push   eax
  434158:	test   BYTE PTR [eax+0x38],al
  43415b:	add    al,0xa6
  43415d:	push   eax
  43415e:	js     0x43410c
  434160:	and    al,0xb1
  434162:	xchg   ebx,eax
  434163:	shrd   ecx,ebp,0x23
  434167:	inc    edi
  434168:	aaa    
  434169:	mov    BYTE PTR [edx-0x6e561366],al
  43416f:	dec    edx
  434170:	(bad)  
  434171:	sar    bl,1
  434173:	cmp    DWORD PTR [edx],esi
  434175:	fcom   st(2)
  434177:	or     eax,0xba6727d3
  43417c:	jge    0x43412e
  43417e:	fimul  WORD PTR [ebx]
  434180:	jge    0x43418c
  434182:	push   edx
  434183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434184:	sub    esi,DWORD PTR [esi+0x7cd30153]
  43418a:	xchg   esi,eax
  43418b:	pop    eax
  43418c:	add    dh,BYTE PTR [ebx-0x12]
  43418f:	mov    esp,0x61ba76a6
  434194:	lahf   
  434195:	pushf  
  434196:	call   0x1724:0x259537da
  43419d:	dec    edx
  43419e:	mov    ch,0x6e
  4341a0:	nop
  4341a1:	xor    edx,DWORD PTR [edi+0x41e194eb]
  4341a7:	imul   eax,eax,0x35a62799
  4341ad:	std    
  4341ae:	jmp    0x2b0d:0x40e17b26
  4341b5:	xlat   BYTE PTR ds:[ebx]
  4341b6:	sbb    DWORD PTR ds:0xd6b0efe9,edx
  4341bc:	jbe    0x4341a9
  4341be:	stc    
  4341bf:	xchg   ebp,eax
  4341c0:	mov    edi,0x526f826d
  4341c5:	jo     0x4341b3
  4341c7:	mov    DWORD PTR [ecx-0x1dd75cb6],ecx
  4341cd:	inc    esp
  4341ce:	ret    0x667c
  4341d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341d2:	mov    bh,0x92
  4341d4:	inc    ecx
  4341d5:	repz add DWORD PTR [ebp+0x5e],eax
  4341d9:	adc    cl,ah
  4341db:	adc    eax,0xfc7d9e0a
  4341e0:	outs   dx,BYTE PTR ds:[esi]
  4341e1:	lods   eax,DWORD PTR ds:[esi]
  4341e2:	add    dh,BYTE PTR [eax-0x50]
  4341e5:	mov    esi,0xc8732a44
  4341ea:	pop    ds
  4341eb:	jmp    0xdbe0:0xdaebc16
  4341f2:	mov    ebx,0x437a1582
  4341f7:	jmp    0x434259
  4341f9:	pusha  
  4341fa:	lock and ah,ch
  4341fd:	mov    esi,0x7528a730
  434202:	data16 jb 0x4341bf
  434205:	mov    cl,BYTE PTR [ebx+0x694fd7d0]
  43420b:	sbb    eax,DWORD PTR [ebp-0x76]
  43420e:	cli    
  43420f:	imul   ebp,DWORD PTR [esi+0x2c5be0ef],0xffffffc0
  434216:	mov    cl,BYTE PTR [ebp+ebx*4+0x9]
  43421a:	(bad)  
  43421b:	dec    edi
  43421c:	inc    ebx
  43421d:	loop   0x4341c1
  43421f:	inc    eax
  434220:	imul   ecx,DWORD PTR [ecx+0x641873a8],0x5b
  434227:	sub    DWORD PTR [esi],esp
  434229:	bound  ebp,QWORD PTR [edi+0x34]
  43422c:	mov    ecx,0x32b92533
  434231:	dec    ecx
  434232:	fnsave [edi-0x34]
  434235:	imul   edx,DWORD PTR [ecx+0x3f58581c],0xe1c13154
  43423f:	retf   
  434240:	xor    BYTE PTR [edx+0x775eafc0],bl
  434246:	int3   
  434247:	in     eax,0xb6
  434249:	(bad)  
  43424a:	out    dx,al
  43424b:	dec    ebp
  43424c:	xchg   edx,eax
  43424d:	call   0xe6b7c173
  434252:	call   0x58751a61
  434257:	xor    eax,0x8a792dc9
  43425c:	pop    esi
  43425d:	xor    al,ch
  43425f:	xchg   DWORD PTR ds:[esi+0x674fc766],ebx
  434266:	nop
  434267:	(bad)
  43426a:	mov    esi,0x93941d9c
  43426f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434270:	pop    esi
  434271:	mov    ebp,0x7096a51f
  434276:	dec    edx
  434277:	cmp    BYTE PTR [edi],dl
  434279:	rol    ebp,1
  43427b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43427c:	cmp    DWORD PTR [eax-0x2a],esp
  43427f:	pop    esp
  434280:	or     al,0x54
  434282:	int3   
  434283:	sub    al,0xaa
  434285:	mov    esi,0x843b0ea9
  43428a:	jl     0x4342c8
  43428c:	mov    ds:0x9cdff31f,al
  434291:	cmp    DWORD PTR [esi+0x28],edx
  434294:	mov    eax,cs:0x86b28312
  43429a:	stos   DWORD PTR es:[edi],eax
  43429b:	iret   
  43429c:	imul   eax,DWORD PTR [edx-0x4f],0x31
  4342a0:	push   0xd914a795
  4342a5:	xchg   BYTE PTR [ebp-0x6f],dl
  4342a8:	xor    esi,ebp
  4342aa:	adc    BYTE PTR [esi],0x34
  4342ad:	in     eax,0xc
  4342af:	adc    BYTE PTR [ebx],dl
  4342b1:	lds    edi,FWORD PTR [ecx-0x3c1c0dc6]
  4342b7:	jne    0x434269
  4342b9:	and    eax,0x65d7a656
  4342be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4342bf:	loope  0x43427a
  4342c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4342c2:	sbb    dh,BYTE PTR [esi-0x70be2cc9]
  4342c8:	sahf   
  4342c9:	scas   eax,DWORD PTR es:[edi]
  4342ca:	mov    DWORD PTR [ecx-0x20],ebp
  4342cd:	daa    
  4342ce:	jge    0x4342d3
  4342d0:	or     edi,DWORD PTR [ebx]
  4342d2:	push   0xffffffa4
  4342d4:	mov    eax,ds:0x6d958255
  4342d9:	push   ss
  4342da:	icebp  
  4342db:	or     edi,DWORD PTR [ecx]
  4342dd:	or     ebp,DWORD PTR ds:0xc9c11331
  4342e3:	sbb    DWORD PTR [ecx+edi*4],esp
  4342e6:	and    al,0xb4
  4342e8:	lock into 
  4342ea:	sub    al,0xa4
  4342ec:	push   es
  4342ed:	stos   BYTE PTR es:[edi],al
  4342ee:	jmp    0x8bd50702
  4342f3:	shl    ebp,cl
  4342f5:	xor    ecx,DWORD PTR [edi+0x4f]
  4342f8:	dec    edx
  4342f9:	gs mov edi,0x5ca8f95
  4342ff:	lock loop 0x4342c3
  434302:	inc    eax
  434303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434304:	mov    bl,0xd2
  434306:	loope  0x43436f
  434308:	or     eax,0x546da3d9
  43430d:	xor    ebp,ebp
  43430f:	cmp    eax,ebp
  434311:	xor    eax,DWORD PTR [ecx-0x2b]
  434314:	pop    eax
  434315:	iret   
  434316:	and    eax,0xc4965957
  43431b:	shl    edi,0x69
  43431e:	xchg   bh,bl
  434320:	out    dx,al
  434321:	cs out 0x2a,eax
  434324:	sub    eax,0xdac9c5e0
  434329:	mov    al,BYTE PTR [eax]
  43432b:	retf   
  43432c:	pop    es
  43432d:	ret    
  43432e:	stos   BYTE PTR es:[edi],al
  43432f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434330:	xor    DWORD PTR [edi+0x6c8216a9],ebx
  434336:	imul   edi,DWORD PTR [esi-0x154fcb4e],0xb7d49fef
  434340:	dec    edx
  434341:	loop   0x434399
  434343:	shl    BYTE PTR [ecx-0x5f],1
  434346:	mov    edi,0xbd279ea3
  43434b:	push   0x3e20fe91
  434350:	jns    0x434311
  434352:	push   cs
  434353:	mov    cs,WORD PTR [ebx-0x5b]
  434356:	or     al,0x9
  434358:	push   cs
  434359:	push   eax
  43435a:	jae    0x434342
  43435c:	xlat   BYTE PTR ds:[ebx]
  43435d:	mov    ds,WORD PTR [esi+0xb]
  434360:	sbb    al,0xc9
  434362:	xchg   esi,eax
  434363:	retf   
  434364:	xor    BYTE PTR ds:0xfaa9e5d1,cl
  43436a:	pop    esi
  43436b:	dec    edi
  43436c:	rcr    DWORD PTR [eax],1
  43436e:	mov    ebp,0xad09e2d
  434373:	add    eax,0x75e575ed
  434378:	stc    
  434379:	(bad)  
  43437a:	cmp    eax,DWORD PTR [eax]
  43437c:	shl    DWORD PTR [edi],cl
  43437e:	scas   eax,DWORD PTR es:[edi]
  43437f:	or     eax,DWORD PTR [eax-0x45253633]
  434385:	xchg   ecx,eax
  434386:	mov    al,ds:0x4b132b13
  43438b:	xor    BYTE PTR [edi],0x3b
  43438e:	jp     0x4343ff
  434390:	ss mov esp,0xe3473e58
  434396:	jg     0x4343ae
  434398:	sub    DWORD PTR [edx-0x6b],edx
  43439b:	jne    0x4343bc
  43439d:	aam    0x76
  43439f:	mov    edx,0x17bb6a2a
  4343a4:	jmp    0x4343f8
  4343a6:	scas   al,BYTE PTR es:[edi]
  4343a7:	fldcw  WORD PTR [ecx-0x60962746]
  4343ad:	cmp    DWORD PTR [esp+ecx*4+0x41059c4c],esp
  4343b4:	mov    WORD PTR [ebx],?
  4343b6:	inc    edx
  4343b7:	push   ecx
  4343b8:	retf   
  4343b9:	inc    edx
  4343ba:	into   
  4343bb:	outs   dx,DWORD PTR ds:[esi]
  4343bc:	int3   
  4343bd:	dec    esp
  4343be:	addr16 sahf 
  4343c0:	or     ah,BYTE PTR [eax]
  4343c2:	push   edi
  4343c3:	add    esp,DWORD PTR [bx+di]
  4343c6:	add    DWORD PTR [esp+ebx*1-0x4545e54f],eax
  4343cd:	bswap  ecx
  4343cf:	mov    edi,0xdf38489b
  4343d4:	fadd   DWORD PTR [ecx-0x55]
  4343d7:	jo     0x434370
  4343d9:	and    DWORD PTR [ebx-0x68],edi
  4343dc:	inc    esp
  4343dd:	cdq    
  4343de:	or     ebx,DWORD PTR [eax+0x6c]
  4343e1:	in     al,0x98
  4343e3:	fcmovne st,st(3)
  4343e5:	ret    0x29a9
  4343e8:	or     ebx,DWORD PTR [edx+ebx*4]
  4343eb:	int    0x40
  4343ed:	sub    al,0x78
  4343ef:	mov    eax,ebx
  4343f1:	addr16 xchg esi,eax
  4343f3:	js     0x43438b
  4343f5:	add    DWORD PTR [ebx+0x7e182829],esp
  4343fb:	aam    0xaf
  4343fd:	hlt    
  4343fe:	addr16 sbb ch,dh
  434401:	xor    bh,BYTE PTR [eax-0x23]
  434404:	or     ecx,DWORD PTR [ecx]
  434406:	mov    WORD PTR [edx+edx*8-0x34],cs
  43440a:	cmp    eax,0xba4cc582
  43440f:	fmul   DWORD PTR [ecx+0x1]
  434412:	and    ch,cl
  434414:	icebp  
  434415:	jl     0x434472
  434417:	xchg   ebx,eax
  434418:	cmp    ecx,0xbd468cb4
  43441e:	dec    eax
  43441f:	push   eax
  434420:	retf   
  434421:	cmp    eax,0x4b2d6c20
  434426:	lods   al,BYTE PTR ds:[esi]
  434427:	cmp    ecx,0x6b
  43442a:	mov    edi,0x5b58ffb6
  43442f:	scas   eax,DWORD PTR es:[edi]
  434430:	mov    ch,0xc7
  434432:	dec    eax
  434433:	jo     0x434469
  434435:	(bad)  
  434436:	and    edx,ebx
  434438:	or     DWORD PTR [ebx+0x7a],eax
  43443b:	out    0xa0,eax
  43443d:	mov    dh,0xc9
  43443f:	enter  0x22dd,0xa4
  434443:	je     0x434441
  434445:	jp     0x434448
  434447:	xchg   ecx,eax
  434448:	pop    ebp
  434449:	push   eax
  43444a:	scas   eax,DWORD PTR es:[edi]
  43444b:	push   edx
  43444c:	sub    BYTE PTR [edi+eax*8+0x64f9d64],0xdf
  434454:	int3   
  434455:	les    ecx,FWORD PTR [esi+eiz*1]
  434458:	pop    eax
  434459:	dec    ebp
  43445a:	push   cs
  43445b:	xchg   ebx,eax
  43445c:	add    al,0xdd
  43445e:	push   cs
  43445f:	lea    eax,[edx+0x41]
  434462:	fidiv  WORD PTR [esi+0x2b1099bf]
  434468:	stos   BYTE PTR es:[edi],al
  434469:	push   0xffffffef
  43446b:	(bad)  
  43446c:	imul   edx,DWORD PTR [ecx],0xb28b30c0
  434472:	dec    ebp
  434473:	xor    BYTE PTR [eax],dh
  434475:	repz adc al,0x2c
  434478:	add    ah,BYTE PTR ds:0x6343d2f2
  43447e:	jmp    0x596:0x5cc73ee2
  434485:	stc    
  434486:	or     dl,BYTE PTR [ecx+0x5e9ef5ab]
  43448c:	sub    bl,BYTE PTR [ebx+0x5d]
  43448f:	pop    esi
  434490:	jp     0x4344a4
  434492:	daa    
  434493:	mov    bl,0xa7
  434495:	xchg   cl,dh
  434497:	mov    ch,0x1d
  434499:	std    
  43449a:	mov    esp,0xcc1fb172
  43449f:	sbb    BYTE PTR [edi-0x43],0x7a
  4344a3:	int3   
  4344a4:	push   eax
  4344a5:	sub    BYTE PTR [edx+0x7d],bl
  4344a8:	jne    0x4344b8
  4344aa:	imul   esi,DWORD PTR ds:[esi-0x18],0x35
  4344af:	jnp    0x434468
  4344b1:	xor    eax,ecx
  4344b3:	adc    eax,0x97dad5cb
  4344b8:	pop    edi
  4344b9:	popf   
  4344ba:	rcr    BYTE PTR [ecx],0x50
  4344bd:	pop    ecx
  4344be:	adc    DWORD PTR [ebp-0x4b],esp
  4344c1:	int    0x49
  4344c3:	jmp    0xc8a1:0x3f2c97f9
  4344ca:	mov    ebx,0xc6076d0f
  4344cf:	ds xchg edi,eax
  4344d1:	shr    BYTE PTR [ebx],0x7c
  4344d4:	push   eax
  4344d5:	rol    BYTE PTR [edi],0xb7
  4344d8:	loopne 0x43451a
  4344da:	cmp    BYTE PTR [eax],ch
  4344dc:	jne    0x434520
  4344de:	mov    esi,edx
  4344e0:	cmp    esi,DWORD PTR [edi+0x26]
  4344e3:	sub    eax,0xa917bf9d
  4344e8:	xchg   esp,eax
  4344e9:	mov    dh,0x2d
  4344eb:	push   ds
  4344ec:	add    al,0x7c
  4344ee:	push   esi
  4344ef:	add    BYTE PTR [eax-0x3e],dl
  4344f2:	sub    eax,0xd65c290a
  4344f7:	pushf  
  4344f8:	popf   
  4344f9:	loopne 0x4344d8
  4344fb:	clc    
  4344fc:	inc    eax
  4344fd:	inc    ebp
  4344fe:	jae    0x4344db
  434500:	int3   
  434501:	push   edi
  434502:	loope  0x43454c
  434504:	xchg   cx,ax
  434506:	js     0x4344e9
  434508:	pop    ebx
  434509:	(bad)  
  43450a:	jecxz  0x434508
  43450c:	cld    
  43450d:	push   edx
  43450e:	in     eax,0xf8
  434510:	out    dx,al
  434511:	icebp  
  434512:	push   es
  434513:	fsubr  DWORD PTR [esi+esi*1-0x473b57d5]
  43451a:	repz fist WORD PTR [ebx+0x43]
  43451f:	call   0x2b3eefcf
  434524:	or     edi,DWORD PTR [edi+0x60c36889]
  43452a:	out    dx,al
  43452b:	and    DWORD PTR [eax+0x4cd0a38a],0x28
  434532:	push   ss
  434533:	loope  0x4344e3
  434535:	xlat   BYTE PTR ds:[ebx]
  434536:	aam    0x4e
  434538:	mov    edx,0x636a214c
  43453d:	(bad)  
  43453e:	retf   0x2162
  434541:	push   edx
  434542:	icebp  
  434543:	inc    edi
  434544:	mov    al,dh
  434546:	add    DWORD PTR [ecx+0x43],eax
  434549:	push   esp
  43454a:	mov    es,WORD PTR es:[edx+esi*2-0x78]
  43454f:	ret    0xe464
  434552:	pop    esp
  434553:	call   0x4bca7f0d
  434558:	mov    ah,0xcb
  43455a:	and    eax,0xc9db97f0
  43455f:	mov    ch,0x54
  434561:	adc    cl,ch
  434563:	enter  0x1577,0x49
  434567:	mov    cl,0x8e
  434569:	jne    0x4344fb
  43456b:	fsubp  st(3),st
  43456d:	data16 daa 
  43456f:	xor    dl,ch
  434571:	xchg   esp,eax
  434572:	(bad)  
  434573:	xchg   esp,eax
  434574:	data16 jo 0x434548
  434577:	xchg   esi,eax
  434578:	mov    esp,0x15cd5975
  43457d:	mov    al,ds:0xfc22bb83
  434582:	pop    DWORD PTR [edx]
  434584:	adc    BYTE PTR [ecx+0x11],ch
  434587:	or     cl,BYTE PTR [esi+0x3c]
  43458a:	mov    WORD PTR [edx-0x3aaa3f6b],si
  434591:	xor    al,0xd0
  434593:	lds    ecx,FWORD PTR ds:0xd4fb47ee
  434599:	call   0xdafddb91
  43459e:	test   BYTE PTR [ebx+0x45c08439],bl
  4345a4:	lods   al,BYTE PTR ds:[esi]
  4345a5:	in     al,dx
  4345a6:	lods   eax,DWORD PTR ds:[esi]
  4345a7:	sub    bl,BYTE PTR [ebx+0x261328ec]
  4345ad:	jle    0x43455e
  4345af:	add    eax,0x498035a0
  4345b4:	loop   0x43458b
  4345b6:	mov    ebp,0x364610d3
  4345bb:	xchg   edi,eax
  4345bc:	pop    ecx
  4345bd:	push   cs
  4345be:	loop   0x434564
  4345c0:	inc    ebp
  4345c1:	lahf   
  4345c2:	xchg   ebx,eax
  4345c3:	cmp    al,0x7b
  4345c5:	stos   BYTE PTR es:[edi],al
  4345c6:	sub    al,0x9b
  4345c8:	push   esp
  4345c9:	xor    BYTE PTR [eax+0x75],cl
  4345cc:	lock mov al,ds:0xfa9cbb98
  4345d2:	or     ebp,DWORD PTR [ecx+0x6924271a]
  4345d8:	mov    bl,0xd6
  4345da:	cdq    
  4345db:	outs   dx,DWORD PTR ds:[esi]
  4345dc:	inc    ecx
  4345dd:	mov    BYTE PTR [esi-0x30],ah
  4345e0:	mov    gs,WORD PTR fs:[edi]
  4345e3:	pop    esp
  4345e4:	fs inc edx
  4345e6:	test   BYTE PTR [ecx],bl
  4345e8:	das    
  4345e9:	fwait
  4345ea:	sub    ah,BYTE PTR [ecx-0x1e27ff66]
  4345f0:	in     al,0x10
  4345f2:	mov    ecx,0xbf12f4bf
  4345f7:	sub    al,0xa6
  4345f9:	jae    0x434653
  4345fb:	push   edi
  4345fc:	xor    DWORD PTR [edx-0x4d],eax
  4345ff:	push   ebp
  434600:	ins    DWORD PTR es:[edi],dx
  434601:	call   0x47bd:0x1a84aaf4
  434608:	cmp    dl,cl
  43460a:	outs   dx,BYTE PTR ds:[esi]
  43460b:	inc    eax
  43460c:	popf   
  43460d:	call   0x6afd:0x88b0f6b6
  434614:	push   ecx
  434615:	cmp    DWORD PTR [ecx-0x22],ecx
  434618:	pop    ebx
  434619:	stos   BYTE PTR es:[edi],al
  43461a:	xchg   dh,cl
  43461c:	sbb    eax,0xfe65458b
  434621:	in     al,0x86
  434623:	inc    ebp
  434624:	push   eax
  434625:	mov    ebx,ds
  434627:	push   0x3e
  434629:	aas    
  43462a:	mov    ecx,0xb6f62db7
  43462f:	jp     0x4345be
  434631:	cmp    al,0xc2
  434633:	jp     0x434621
  434635:	add    ecx,DWORD PTR [ecx-0x3b9be8e0]
  43463b:	cmp    ah,dl
  43463d:	sbb    bh,ch
  43463f:	(bad)  [ebx-0x6fb00ebe]
  434645:	je     0x4346b7
  434647:	push   0xf5e4ce7
  43464c:	mov    edi,0x813b5fce
  434651:	xor    eax,0x356badc7
  434656:	lods   al,BYTE PTR ds:[esi]
  434657:	out    dx,al
  434658:	fisubr DWORD PTR [ebx+0x62e1106e]
  43465e:	xor    DWORD PTR [ecx+0x3b2f2267],ebp
  434664:	iret   
  434665:	or     al,0x2a
  434667:	(bad)  
  434668:	fdiv   QWORD PTR [edi]
  43466a:	imul   ecx,DWORD PTR [esi],0x8c816870
  434670:	mov    edx,0xaa23061d
  434675:	clc    
  434676:	in     al,dx
  434677:	dec    edx
  434678:	cli    
  434679:	fist   DWORD PTR [ecx+0x27ba3135]
  43467f:	(bad)  
  434680:	scas   al,BYTE PTR es:[edi]
  434681:	push   ss
  434682:	sub    bh,BYTE PTR [eax+edx*2]
  434685:	in     al,dx
  434686:	lods   al,BYTE PTR ds:[esi]
  434687:	xor    eax,0xc7d597ed
  43468c:	mov    ds:0x2cd79ed1,al
  434691:	lahf   
  434692:	jb     0x434688
  434694:	imul   eax,DWORD PTR [ebp+0x1a4d5b1d],0x38080dd9
  43469e:	imul   ebp
  4346a0:	mov    dh,0x7e
  4346a2:	or     BYTE PTR [ecx-0x1aaf5467],dl
  4346a8:	les    edx,FWORD PTR [eax]
  4346aa:	jmp    0xc78f8ee2
  4346af:	push   esi
  4346b0:	mov    DWORD PTR [edx-0x5fe1b8f5],ebp
  4346b6:	xchg   edx,esi
  4346b8:	and    BYTE PTR [ecx+0x6fa88fb0],dl
  4346be:	add    BYTE PTR [ebx+0xd],dh
  4346c1:	jo     0x434742
  4346c3:	mov    al,BYTE PTR [edx]
  4346c5:	test   BYTE PTR [esi-0x29],bh
  4346c8:	call   0x4287:0x2cd0631e
  4346cf:	xchg   ebx,eax
  4346d0:	cmp    BYTE PTR [esi],bl
  4346d2:	dec    esp
  4346d3:	out    dx,al
  4346d4:	mov    bl,0x68
  4346d6:	pop    ecx
  4346d7:	adc    DWORD PTR [ecx],0xe43bc038
  4346dd:	adc    BYTE PTR [edx-0x63],0xbd
  4346e1:	ror    BYTE PTR ds:0xbf738c5f,1
  4346e7:	push   edx
  4346e8:	and    BYTE PTR [eax+0x1a],bl
  4346eb:	pop    ds
  4346ec:	cmp    DWORD PTR [edx+0x3e],ebp
  4346ef:	and    eax,0xd3ff295f
  4346f4:	sub    edi,esp
  4346f6:	cmp    al,0x2d
  4346f8:	and    cl,BYTE PTR [edi]
  4346fa:	xchg   BYTE PTR [ebx],dl
  4346fc:	dec    esp
  4346fd:	sub    DWORD PTR [ebx-0x20],0xffffffbe
  434701:	fcomip st,st(2)
  434703:	add    ecx,DWORD PTR [eax-0x55]
  434706:	sub    ecx,DWORD PTR [ebp-0x62834c2]
  43470c:	(bad)  
  43470d:	push   ebp
  43470e:	loopne 0x4346b4
  434710:	mov    ah,0x95
  434712:	in     al,dx
  434713:	gs mov bl,0xd3
  434716:	(bad)  
  434718:	cmp    eax,0xbf777a05
  43471d:	fist   WORD PTR [ebx]
  43471f:	call   0xd94:0xa795c82e
  434726:	es sbb dl,ah
  434729:	jecxz  0x4346e4
  43472b:	dec    eax
  43472c:	fist   WORD PTR [ebp-0x5e]
  43472f:	fld    QWORD PTR [eiz*4-0x3d560cb0]
  434736:	push   ss
  434737:	into   
  434738:	cmp    DWORD PTR [eax-0x3f],eax
  43473b:	pop    ecx
  43473c:	add    eax,0x4d4fe42a
  434741:	test   eax,0xf9b75b57
  434746:	dec    edi
  434747:	(bad)  
  434748:	cs sbb eax,0xa45cffcc
  43474e:	ins    BYTE PTR es:[edi],dx
  43474f:	sbb    dl,BYTE PTR [ebp+0x6c]
  434752:	mov    bl,0x76
  434754:	loope  0x43477f
  434756:	retf   0xbcad
  434759:	out    dx,eax
  43475a:	cmp    esi,ecx
  43475c:	xor    DWORD PTR [edi-0x2e],ebp
  43475f:	cdq    
  434760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434761:	adc    eax,0xfd75ad69
  434766:	xor    al,0x79
  434768:	test   DWORD PTR [ebx],edi
  43476a:	pop    esi
  43476b:	sbb    al,0xb
  43476d:	popa   
  43476e:	test   al,0x84
  434770:	cwde   
  434771:	lock cdq 
  434773:	je     0x434718
  434775:	sub    BYTE PTR ds:0x8988091a,bh
  43477b:	bound  esi,QWORD PTR fs:0xc781b3d9
  434782:	mov    dh,0x6a
  434784:	inc    edx
  434785:	add    dl,BYTE PTR [ebx+edi*2-0x138c520a]
  43478c:	(bad)  
  43478d:	cmc    
  43478e:	test   BYTE PTR [ebx+0xc3f58c4],dl
  434794:	out    0x50,eax
  434796:	adc    ebp,DWORD PTR [esi+0x50]
  434799:	mov    edx,0x7dece900
  43479e:	(bad)  
  43479f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4347a0:	push   ebp
  4347a1:	cmp    eax,DWORD PTR fs:[edi+0x7f824307]
  4347a8:	fsubr  DWORD PTR [ecx-0x6f]
  4347ab:	push   esi
  4347ac:	stos   DWORD PTR es:[edi],eax
  4347ad:	or     edi,DWORD PTR [ebx]
  4347af:	rol    BYTE PTR [ecx],1
  4347b1:	push   eax
  4347b2:	nop
  4347b3:	fldcw  WORD PTR [eax-0x40fa2cd]
  4347b9:	xor    DWORD PTR [ebx],0xea242a17
  4347bf:	aaa    
  4347c0:	test   BYTE PTR [ebp-0x70],al
  4347c3:	dec    edx
  4347c4:	int3   
  4347c5:	push   ds
  4347c6:	lahf   
  4347c7:	sahf   
  4347c8:	mov    ecx,0x2cd54fb4
  4347cd:	jmp    0x9f25dbe0
  4347d2:	sub    DWORD PTR [eax-0x1a3c0b03],esp
  4347d8:	sbb    al,0xe
  4347da:	adc    bh,BYTE PTR [esi]
  4347dc:	mov    bh,0x98
  4347de:	loopne 0x43480a
  4347e0:	test   al,0x31
  4347e2:	push   0xffffff9f
  4347e4:	mov    ds:0x42bfb7f4,al
  4347e9:	and    BYTE PTR [eax],bl
  4347eb:	fidiv  WORD PTR [edx-0x6e2e05da]
  4347f1:	inc    ebx
  4347f2:	div    DWORD PTR [edi-0xe]
  4347f5:	cmp    al,0xa1
  4347f7:	cld    
  4347f8:	lahf   
  4347f9:	push   eax
  4347fa:	ret    0x8141
  4347fd:	(bad)  
  4347fe:	scas   al,BYTE PTR es:[edi]
  4347ff:	das    
  434800:	mov    edx,0xad33ec25
  434805:	das    
  434806:	xchg   edx,eax
  434807:	jl     0x43478e
  434809:	mov    BYTE PTR [edx-0x217cbd93],ch
  43480f:	sub    DWORD PTR [eax],ebx
  434811:	retf   0x721c
  434814:	sub    DWORD PTR [ecx+0x28d7e764],eax
  43481a:	mov    cl,0x42
  43481c:	or     esp,DWORD PTR [ebx+0x71a33f28]
  434822:	sub    DWORD PTR [edi-0x60],0xfffffff8
  434826:	cwde   
  434827:	call   0x489e:0xed8336d0
  43482e:	sub    eax,0xbedf892e
  434833:	sub    al,0x8c
  434835:	mov    cl,ah
  434837:	jno    0x43485f
  434839:	inc    edi
  43483a:	mov    ds:0x4767267a,eax
  43483f:	ins    DWORD PTR es:[edi],dx
  434840:	retf   0x312f
  434843:	push   esi
  434844:	xor    al,0xd6
  434846:	lahf   
  434847:	xchg   ebx,eax
  434848:	jle    0x434873
  43484a:	xor    BYTE PTR [eax+0x62b8301],al
  434850:	aam    0x96
  434852:	push   ss
  434853:	push   edx
  434854:	pop    ds
  434855:	es js  0x4348b7
  434858:	sbb    ecx,DWORD PTR [eax-0xf1c830f]
  43485e:	cmp    eax,0xfea71bbf
  434863:	retf   
  434864:	jle    0x4348cb
  434866:	mov    al,0x25
  434868:	xchg   ebx,eax
  434869:	cdq    
  43486a:	into   
  43486b:	dec    ecx
  43486c:	sub    DWORD PTR [ebx-0x74729e04],ebp
  434872:	ja     0x4348bd
  434874:	or     DWORD PTR [eax+0x6bfb2ead],eax
  43487a:	mov    ebp,0x2b69c35
  43487f:	clc    
  434880:	stc    
  434881:	adc    esi,DWORD PTR [edi]
  434883:	xchg   DWORD PTR [ebp+0x25356b5f],edx
  434889:	ror    al,cl
  43488b:	in     eax,0x85
  43488d:	mov    dl,0xe3
  43488f:	xchg   DWORD PTR [eax+edx*8-0x4c],eax
  434893:	inc    ebp
  434894:	loopne 0x434895
  434896:	and    DWORD PTR [edi-0x662b6154],esp
  43489c:	aas    
  43489d:	cwde   
  43489e:	and    dl,BYTE PTR [eax]
  4348a0:	dec    DWORD PTR [ebx-0x1b]
  4348a3:	loopne 0x434903
  4348a5:	sub    al,bl
  4348a7:	outs   dx,DWORD PTR ds:[esi]
  4348a8:	xor    eax,0x25564cfe
  4348ad:	test   esi,edi
  4348af:	btc    DWORD PTR [edi-0x1aa9b99],ebx
  4348b6:	outs   dx,DWORD PTR ds:[esi]
  4348b7:	jmp    0x9da1:0xb9c594b5
  4348be:	out    dx,eax
  4348bf:	mov    al,0x3e
  4348c1:	mov    cl,0xa3
  4348c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4348c4:	nop    DWORD PTR [ebp+edx*8+0x8]
  4348c9:	(bad)  
  4348ca:	stc    
  4348cb:	in     al,dx
  4348cc:	outs   dx,DWORD PTR ds:[esi]
  4348cd:	mov    edi,0xd98f986a
  4348d2:	jp     0x4348c4
  4348d4:	sbb    edx,0x823990a1
  4348da:	stc    
  4348db:	popa   
  4348dc:	pop    es
  4348dd:	add    eax,0x4c3b0c13
  4348e2:	push   edi
  4348e3:	dec    edi
  4348e4:	lock (bad) 
  4348e6:	or     DWORD PTR [edi+ecx*4],edx
  4348e9:	or     ecx,esi
  4348eb:	data16 mov dh,0xb5
  4348ee:	pop    esp
  4348ef:	int3   
  4348f0:	test   DWORD PTR [ecx-0x17208e86],0xb2065266
  4348fa:	jnp    0x434938
  4348fc:	push   edi
  4348fd:	popa   
  4348fe:	dec    ebx
  4348ff:	bound  edi,QWORD PTR [edi+0x60]
  434902:	jne    0x4348f9
  434904:	outs   dx,DWORD PTR ds:[esi]
  434905:	mov    bl,BYTE PTR [esi-0x1292d0ce]
  43490b:	jo     0x434910
  43490d:	popf   
  43490e:	jl     0x434891
  434910:	test   DWORD PTR [ecx-0x4],0x5ce625fe
  434917:	lds    eax,FWORD PTR [edi+0x774bd8bf]
  43491d:	mov    eax,ds:0xb136135d
  434922:	cwde   
  434923:	loopne 0x434903
  434925:	pop    es
  434926:	mov    ebx,0x3654644a
  43492b:	test   eax,0xa3b29ff
  434930:	and    ecx,esp
  434932:	repz das 
  434934:	dec    ecx
  434935:	mov    DWORD PTR [eax],ebx
  434937:	push   edx
  434938:	sub    esi,DWORD PTR [ecx+0x31f966a1]
  43493e:	sbb    BYTE PTR [ebx+0x67],0x31
  434942:	adc    eax,0x924385b2
  434947:	jns    0x43498b
  434949:	mov    edi,0xdfd02b5d
  43494e:	pop    esp
  43494f:	loopne 0x434927
  434951:	adc    eax,0x3fe85ef5
  434956:	pusha  
  434957:	push   ss
  434958:	test   DWORD PTR [ebp-0x1c],ebp
  43495b:	mov    eax,0x4b6c3f1
  434960:	sbb    ebp,edi
  434962:	push   edx
  434963:	fadd   DWORD PTR [edx+ecx*8-0x39da342f]
  43496a:	jmp    0x3aae278
  43496f:	mov    eax,0x4d451d27
  434974:	add    al,0x7b
  434976:	jmp    0xe186e3e3
  43497b:	out    0xdd,al
  43497d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43497e:	imul   ebx,DWORD PTR [ecx-0x26],0x17d947cc
  434985:	test   eax,0x5d8900d6
  43498a:	fcomp  DWORD PTR [esp+eiz*4]
  43498d:	xor    bh,BYTE PTR [esp+ebp*1]
  434990:	jl     0x434945
  434992:	in     eax,0x57
  434994:	mov    cl,BYTE PTR ds:0xa3af5002
  43499a:	scas   al,BYTE PTR es:[edi]
  43499b:	push   edx
  43499c:	push   eax
  43499d:	int    0x4
  43499f:	mov    bl,BYTE PTR [edi-0x16e83396]
  4349a5:	add    bl,BYTE PTR cs:[eax]
  4349a8:	hlt    
  4349a9:	xchg   ecx,eax
  4349aa:	sbb    eax,0xba1fdbed
  4349af:	out    dx,al
  4349b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4349b1:	aad    0x34
  4349b3:	adc    BYTE PTR [ecx+0x46],dl
  4349b6:	lods   eax,DWORD PTR ds:[esi]
  4349b7:	mov    eax,ds:0xe8e5b1b5
  4349bc:	imul   edi,ebp,0x58
  4349bf:	ret    
  4349c0:	mov    fs,WORD PTR [edx]
  4349c2:	xchg   BYTE PTR [ebx-0x1dae698c],ah
  4349c8:	jge    0x4349b8
  4349ca:	rcr    BYTE PTR [edi],1
  4349cc:	push   edx
  4349cd:	mov    DWORD PTR [eax],0xb46fb29f
  4349d3:	out    dx,al
  4349d4:	mov    ebp,0x4d2302ce
  4349d9:	sbb    BYTE PTR [eax+0x70a85a78],bh
  4349df:	and    cl,cl
  4349e1:	outs   dx,BYTE PTR ds:[esi]
  4349e2:	mov    gs,ecx
  4349e4:	fdiv   DWORD PTR [ebx+eax*8]
  4349e7:	adc    eax,0xa41f5285
  4349ec:	adc    al,0x8c
  4349ee:	push   0x583859dc
  4349f3:	(bad)  [edx+0x47]
  4349f6:	and    BYTE PTR [eax-0x4d88b021],0x6f
  4349fd:	mov    dh,0x56
  4349ff:	pusha  
  434a00:	aad    0xc5
  434a02:	les    ebx,FWORD PTR ss:[edi-0x65]
  434a06:	xchg   ebx,eax
  434a07:	dec    ebx
  434a08:	mov    ah,0xc9
  434a0a:	fistp  DWORD PTR [ebp+ecx*8-0x9]
  434a0e:	sub    DWORD PTR [edi+0x5b],ebx
  434a11:	inc    eax
  434a12:	sub    eax,0x7557072c
  434a17:	in     eax,dx
  434a18:	push   eax
  434a19:	or     DWORD PTR [edx+0x1],ebp
  434a1c:	mov    edx,0x4696d670
  434a21:	sub    DWORD PTR [ebp+0x2413c0f],ebp
  434a27:	push   0xb89c2806
  434a2c:	aam    0x1a
  434a2e:	ins    BYTE PTR es:[edi],dx
  434a2f:	(bad)  
  434a30:	mov    ebp,gs
  434a32:	(bad)  
  434a33:	imul   BYTE PTR [ebx-0x372c084f]
  434a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434a3a:	and    al,0x73
  434a3c:	push   0xf10d3266
  434a41:	js     0x434a4e
  434a43:	ret    0xb47
  434a46:	icebp  
  434a47:	lods   eax,DWORD PTR ds:[esi]
  434a48:	lods   al,BYTE PTR ds:[esi]
  434a49:	pop    esp
  434a4a:	dec    esp
  434a4b:	or     bh,BYTE PTR [ebx-0x4a]
  434a4e:	stos   BYTE PTR es:[edi],al
  434a4f:	clc    
  434a50:	scas   eax,DWORD PTR es:[edi]
  434a51:	repz les esp,FWORD PTR [edi-0x2b0933b1]
  434a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434a59:	aaa    
  434a5a:	aam    0x22
  434a5c:	lock mov dl,0xe1
  434a5f:	out    dx,eax
  434a60:	xchg   ecx,eax
  434a61:	js     0x434a08
  434a63:	leave  
  434a64:	lods   eax,DWORD PTR ds:[esi]
  434a65:	xor    bh,BYTE PTR [ecx]
  434a67:	inc    ebp
  434a68:	jb     0x434add
  434a6a:	xchg   BYTE PTR [edx+ebx*4+0x54893bc7],dh
  434a71:	jbe    0x434a7c
  434a73:	ret    0x7f2c
  434a76:	cmp    bl,BYTE PTR [ecx-0x1c]
  434a79:	adc    al,0xa8
  434a7b:	inc    ebx
  434a7c:	and    al,0x62
  434a7e:	jge    0x434a9d
  434a80:	mov    cl,0x3f
  434a82:	push   eax
  434a83:	call   0x4cbdc3e8
  434a88:	stc    
  434a89:	lods   al,BYTE PTR ds:[esi]
  434a8a:	sub    al,0xca
  434a8c:	sub    eax,0xb23504ea
  434a91:	imul   esi,edx,0x2f
  434a94:	mov    edi,0x837d2c2
  434a99:	shl    DWORD PTR [ebp+0xc974656],1
  434a9f:	fcom   QWORD PTR [edx-0x15c4454e]
  434aa5:	or     DWORD PTR [ebx+0x29],esp
  434aa8:	int    0xc0
  434aaa:	jae    0x434adb
  434aac:	xor    al,0xef
  434aae:	stos   BYTE PTR es:[edi],al
  434aaf:	cwde   
  434ab0:	inc    edi
  434ab1:	daa    
  434ab2:	popa   
  434ab3:	aam    0x58
  434ab5:	xchg   DWORD PTR [ecx+0x3d],ebp
  434ab8:	popf   
  434ab9:	or     eax,0xd5be7f90
  434abe:	sbb    ebx,ecx
  434ac0:	test   BYTE PTR [ebx+eiz*2-0x14],0xbc
  434ac5:	xchg   ecx,eax
  434ac6:	nop
  434ac7:	loop   0x434abb
  434ac9:	sbb    DWORD PTR [edi],0x15021256
  434acf:	jbe    0x434b25
  434ad1:	nop
  434ad2:	sbb    edi,DWORD PTR [ecx+0x5e7d318f]
  434ad8:	lods   al,BYTE PTR ds:[esi]
  434ad9:	aas    
  434ada:	push   ss
  434adb:	jnp    0x434a90
  434add:	mov    bh,BYTE PTR [ebx+0x6c]
  434ae0:	aaa    
  434ae1:	arpl   WORD PTR [ecx-0x6],cx
  434ae4:	xlat   BYTE PTR ds:[ebx]
  434ae5:	pop    ecx
  434ae6:	add    al,0x3b
  434ae8:	or     al,0x40
  434aea:	xchg   ebx,eax
  434aeb:	cmp    al,0xe1
  434aed:	inc    ebx
  434aee:	leave  
  434aef:	fild   WORD PTR [edi+0x3c6a49a1]
  434af5:	push   esi
  434af6:	aaa    
  434af7:	mov    eax,0xec1bde92
  434afc:	aaa    
  434afd:	stos   BYTE PTR es:[edi],al
  434afe:	aaa    
  434aff:	daa    
  434b00:	add    bh,BYTE PTR [edi+eax*2+0x1b5738b2]
  434b07:	xchg   DWORD PTR [ecx+0x79],esi
  434b0a:	cld    
  434b0b:	leave  
  434b0c:	pop    ss
  434b0d:	sar    DWORD PTR [edx-0x3e],0x24
  434b11:	xor    ch,cl
  434b13:	jecxz  0x434b3d
  434b15:	jle    0x434ac0
  434b17:	push   0x25
  434b19:	sbb    dl,BYTE PTR [eax]
  434b1b:	push   edx
  434b1c:	add    BYTE PTR [esp+esi*1-0x2462dea0],0x38
  434b24:	jmp    0xd643900d
  434b29:	inc    eax
  434b2a:	retf   0xf13
  434b2d:	xchg   edi,eax
  434b2e:	fsub   st,st(5)
  434b30:	pop    esi
  434b31:	jmp    0x958c:0x12032db6
  434b38:	push   eax
  434b39:	mov    esp,0xab2b6df
  434b3e:	or     BYTE PTR ds:0x39c3c798,ch
  434b44:	scas   al,BYTE PTR es:[edi]
  434b45:	call   0x239c:0x75b7d9fb
  434b4c:	pop    ebx
  434b4d:	cmp    eax,0xda0e2350
  434b52:	mov    ebp,fs
  434b54:	(bad)
  434b58:	push   edx
  434b59:	mov    dl,0x4d
  434b5b:	lahf   
  434b5c:	sbb    al,0x3a
  434b5e:	push   0x35738abb
  434b63:	popf   
  434b64:	cmp    BYTE PTR [edx+0x7de9900d],al
  434b6a:	jle    0x434baa
  434b6c:	cmp    eax,0x7f0eebeb
  434b71:	enter  0x2e4c,0x28
  434b75:	inc    ecx
  434b76:	mov    eax,ds:0x1e4b14ca
  434b7b:	or     al,0xc4
  434b7d:	and    ecx,esp
  434b7f:	mov    ebx,0x37ff254f
  434b84:	(bad)
  434b87:	mov    edi,esi
  434b89:	rol    edx,0x2a
  434b8c:	push   cs
  434b8d:	or     dh,BYTE PTR ds:0x41565bf1
  434b93:	add    ebx,DWORD PTR [esi+0x49956bfd]
  434b99:	nop
  434b9a:	xchg   BYTE PTR [esi+0x50983ba7],dh
  434ba0:	loope  0x434bfd
  434ba2:	xor    eax,DWORD PTR [ebx-0x7f]
  434ba5:	cli    
  434ba6:	xor    BYTE PTR [ecx-0x17],dl
  434ba9:	rcr    DWORD PTR [edi+edi*1-0x1e],cl
  434bad:	xor    ecx,DWORD PTR [edi+0x317a33b2]
  434bb3:	add    DWORD PTR [edi+0x7b],eax
  434bb6:	test   DWORD PTR [ecx+0x24],0xf1317efc
  434bbd:	scas   al,BYTE PTR es:[edi]
  434bbe:	add    BYTE PTR ds:0x1d0016ed,bl
  434bc4:	xlat   BYTE PTR ds:[ebx]
  434bc5:	dec    edi
  434bc6:	cdq    
  434bc7:	pop    eax
  434bc8:	inc    ebx
  434bc9:	js     0x434c2d
  434bcb:	dec    ecx
  434bcc:	stc    
  434bcd:	sub    eax,0x798cd988
  434bd2:	dec    edi
  434bd3:	or     al,0x1a
  434bd5:	ja     0x434bdb
  434bd7:	dec    eax
  434bd8:	in     eax,0xb6
  434bda:	loope  0x434bbd
  434bdc:	and    dl,ah
  434bde:	mov    edi,DWORD PTR [ebp-0x76]
  434be1:	or     BYTE PTR [edi-0xeee8bce],bl
  434be7:	lods   al,BYTE PTR ds:[esi]
  434be8:	jns    0x434c49
  434bea:	adc    DWORD PTR [ebx-0xd75e4e4],ecx
  434bf0:	sub    DWORD PTR [esi-0x3f7bbf21],edi
  434bf6:	cmp    eax,0x91f287a9
  434bfb:	(bad)  
  434bfc:	fmul   QWORD PTR [eax]
  434bfe:	inc    edi
  434bff:	jle    0x434bb1
  434c01:	mov    esi,0x5cc081ca
  434c06:	mov    ebx,0xfc012538
  434c0b:	outs   dx,DWORD PTR ds:[esi]
  434c0c:	rcl    edx,cl
  434c0e:	mov    ch,0xb0
  434c10:	and    BYTE PTR [esi],bl
  434c12:	pop    ds
  434c13:	mov    bl,0x7b
  434c15:	xlat   BYTE PTR ds:[ebx]
  434c16:	xchg   esi,eax
  434c17:	outs   dx,BYTE PTR ds:[esi]
  434c18:	loop   0x434c41
  434c1a:	and    esp,ebp
  434c1c:	and    DWORD PTR [edx],eax
  434c1e:	pop    es
  434c1f:	jbe    0x434c54
  434c21:	jno    0x434c1f
  434c23:	test   eax,0x56081c1e
  434c28:	xchg   ecx,eax
  434c29:	cmp    BYTE PTR [eax-0x63],bh
  434c2c:	loopne 0x434be8
  434c2e:	jmp    0x434bc3
  434c30:	xchg   edx,eax
  434c31:	in     al,dx
  434c32:	gs inc esp
  434c34:	add    eax,0xa19d27f6
  434c39:	mov    eax,0x6f20f792
  434c3e:	mov    dh,0x66
  434c40:	jne    0x434c43
  434c42:	popa   
  434c43:	out    dx,eax
  434c44:	xlat   BYTE PTR ds:[ebx]
  434c45:	int    0x81
  434c47:	ss jno 0x434ca9
  434c4a:	les    ebx,FWORD PTR [esi-0x9]
  434c4d:	xor    BYTE PTR [edi],dh
  434c4f:	sbb    DWORD PTR [eax+ebx*4-0x26],ebx
  434c53:	stos   DWORD PTR es:[edi],eax
  434c54:	add    al,0xe7
  434c56:	push   ebp
  434c57:	push   0xa23ca6f9
  434c5c:	popa   
  434c5d:	push   0xd7188323
  434c62:	(bad)  
  434c63:	(bad)  
  434c64:	mov    ecx,0x5ee19d27
  434c69:	mov    esi,db7
  434c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434c6d:	lahf   
  434c6e:	xchg   edx,eax
  434c6f:	sti    
  434c70:	and    BYTE PTR [ecx+0x408d8c21],ah
  434c76:	ret    
  434c77:	jge    0x434c02
  434c79:	inc    esp
  434c7a:	jno    0x434c39
  434c7c:	int    0xd6
  434c7e:	psubusb mm2,QWORD PTR [esp+edx*4+0x7e]
  434c83:	pop    ds
  434c84:	ss jae 0x434c65
  434c87:	out    0x62,al
  434c89:	cli    
  434c8a:	or     eax,0xcae57871
  434c8f:	jmp    0xa0334e51
  434c94:	jl     0x434c24
  434c96:	inc    ecx
  434c97:	call   0xc115ff9e
  434c9c:	push   eax
  434c9d:	mov    ?,esp
  434c9f:	push   ebp
  434ca0:	sbb    BYTE PTR [edi],dh
  434ca2:	out    dx,al
  434ca3:	fidivr WORD PTR [ebp+0x65]
  434ca6:	dec    eax
  434ca7:	inc    ebp
  434ca8:	pop    es
  434ca9:	test   al,0x61
  434cab:	push   esp
  434cac:	in     al,dx
  434cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434cae:	sahf   
  434caf:	and    BYTE PTR [edx],al
  434cb1:	mov    al,ds:0x2fa3e4f4
  434cb6:	xor    DWORD PTR [edx],0xd081b000
  434cbc:	mov    cl,0x86
  434cbe:	das    
  434cbf:	aad    0xc7
  434cc1:	nop
  434cc2:	sahf   
  434cc3:	cld    
  434cc4:	xchg   edi,eax
  434cc5:	dec    eax
  434cc6:	and    esp,DWORD PTR [esi-0x2d]
  434cc9:	aam    0x8f
  434ccb:	sbb    ebp,DWORD PTR [ebx+0x1b]
  434cce:	add    DWORD PTR [esp+edx*1-0x28],ebx
  434cd2:	jae    0x434d43
  434cd4:	ret    0xdeea
  434cd7:	out    0x3b,eax
  434cd9:	dec    ecx
  434cda:	ss clc 
  434cdc:	call   esp
  434cde:	push   edx
  434cdf:	sbb    al,0x0
  434ce1:	add    bl,BYTE PTR [ecx-0x60]
  434ce4:	xchg   ecx,eax
  434ce5:	xchg   ebp,eax
  434ce6:	mov    ebp,gs
  434ce8:	xor    dl,bh
  434cea:	outs   dx,BYTE PTR ds:[esi]
  434ceb:	xadd   bh,dl
  434cee:	xor    DWORD PTR [ebx-0x775a1556],eax
  434cf4:	sub    eax,0x3e669a5
  434cf9:	push   ds
  434cfa:	psubusb mm6,QWORD PTR ds:0xc517fa4c
  434d01:	mov    eax,ds:0x37de758a
  434d06:	out    dx,al
  434d07:	jnp    0x434c9a
  434d09:	cmp    dh,bl
  434d0b:	and    DWORD PTR [ebx+0x5d121b51],ecx
  434d11:	popa   
  434d12:	jle    0x434d43
  434d14:	xchg   esp,eax
  434d15:	ja     0x434cc1
  434d17:	xor    eax,0xed95861b
  434d1c:	cs mov dh,0x45
  434d1f:	neg    BYTE PTR [ebx]
  434d21:	loope  0x434d42
  434d23:	mov    esp,0x7bc583bb
  434d28:	sub    al,0xbe
  434d2a:	adc    eax,0x44c2ebb1
  434d2f:	add    bh,BYTE PTR [esi+0x2b]
  434d32:	mul    DWORD PTR [esi+eax*2+0xe]
  434d36:	push   esp
  434d37:	adc    edx,DWORD PTR [ebx-0x2f]
  434d3a:	pop    es
  434d3b:	mov    ds:0xb1df17b1,eax
  434d40:	inc    ecx
  434d41:	loopne 0x434cfc
  434d43:	pop    ss
  434d44:	retf   0xe164
  434d47:	repnz fwait
  434d49:	jmp    0x89f1595c
  434d4e:	cs inc edi
  434d50:	jl     0x434d2e
  434d52:	stos   DWORD PTR es:[edi],eax
  434d53:	add    BYTE PTR [edx+0x6b],ah
  434d56:	or     eax,0x87973062
  434d5b:	xor    al,0x96
  434d5d:	or     DWORD PTR [edx-0x64],esp
  434d60:	mov    fs:0xff52c63f,al
  434d66:	daa    
  434d67:	or     DWORD PTR [edi-0x74],edx
  434d6a:	imul   edx,DWORD PTR [ebx+0x43d29f7d],0xffffffcd
  434d71:	adc    DWORD PTR [eax+eax*2],edi
  434d74:	fistp  QWORD PTR [ebx+eax*8-0x7c]
  434d78:	leave  
  434d79:	sbb    DWORD PTR [ecx],esp
  434d7b:	leave  
  434d7c:	mov    esp,0xfad087f0
  434d81:	mov    al,0x25
  434d83:	add    ah,al
  434d85:	jmp    0xa662fdec
  434d8a:	push   esi
  434d8b:	test   BYTE PTR [esi-0x42579e85],0xaf
  434d92:	and    BYTE PTR [esi],bh
  434d94:	jb     0x434e02
  434d96:	xchg   DWORD PTR [ecx-0x647c87af],edx
  434d9c:	ja     0x434e18
  434d9e:	das    
  434d9f:	in     eax,dx
  434da0:	loope  0x434dfb
  434da2:	out    dx,al
  434da3:	ins    DWORD PTR es:[edi],dx
  434da4:	push   cs
  434da5:	fabs   
  434da7:	cwde   
  434da8:	or     BYTE PTR [esi-0x1d9dcada],dl
  434dae:	sub    dl,BYTE PTR [esi+0x4970bbb2]
  434db4:	iret   
  434db5:	and    BYTE PTR [ebx+0x6c],al
  434db8:	fist   WORD PTR [ebx]
  434dba:	xlat   BYTE PTR ds:[ebx]
  434dbb:	xchg   ebx,eax
  434dbc:	ret    0x470c
  434dbf:	fisttp WORD PTR [edi+0x379444a7]
  434dc5:	sub    al,0x7a
  434dc7:	fst    DWORD PTR [ecx]
  434dc9:	call   0xd520:0xcc15c24d
  434dd0:	cmp    DWORD PTR [edx],ebp
  434dd2:	xlat   BYTE PTR ds:[ebx]
  434dd3:	and    al,0x4f
  434dd5:	sub    DWORD PTR [edi+0x5e],ebx
  434dd8:	(bad)  
  434dd9:	cli    
  434dda:	out    dx,al
  434ddb:	mov    bh,0x14
  434ddd:	mov    ds:0x2df1f9be,eax
  434de2:	mov    ecx,0x9d922ac9
  434de7:	push   esp
  434de8:	hlt    
  434de9:	test   BYTE PTR [ebx-0xd],dl
  434dec:	repz (bad) 
  434dee:	pop    ebx
  434def:	push   ds
  434df0:	and    BYTE PTR es:[edi],ah
  434df3:	loope  0x434dc2
  434df5:	mov    eax,ds:0xe260c230
  434dfa:	(bad)  
  434dfb:	mov    eax,0x283c1e84
  434e00:	mov    ah,0xaa
  434e02:	sub    cl,BYTE PTR [edx+edi*1+0x71]
  434e06:	push   ds
  434e07:	sbb    al,0xb1
  434e09:	jmp    0x3ee389fc
  434e0e:	mov    bh,0x7e
  434e10:	xchg   edx,eax
  434e11:	jmp    0x434dd8
  434e13:	sbb    DWORD PTR [ebx],ebx
  434e15:	dec    ebx
  434e16:	jl     0x434dda
  434e18:	int    0x80
  434e1a:	retf   0x8f60
  434e1d:	fist   DWORD PTR [ebp-0x31]
  434e20:	mov    esp,ebp
  434e22:	xrelease mov BYTE PTR [ebp-0x3d],ah
  434e26:	outs   dx,BYTE PTR ds:[esi]
  434e27:	and    BYTE PTR [ebp+0x6],0xc6
  434e2b:	popa   
  434e2c:	jmp    FWORD PTR [esi-0x45]
  434e2f:	or     DWORD PTR [ecx+0x4b],ecx
  434e32:	or     eax,0xbe40eb4b
  434e37:	push   ebp
  434e38:	icebp  
  434e39:	mov    edi,0x52809e69
  434e3e:	(bad)  
  434e3f:	push   esi
  434e40:	mov    al,ds:0xe972f480
  434e45:	mov    esp,0xdc309619
  434e4a:	cmc    
  434e4b:	repz arpl WORD PTR [edx-0x2f],cx
  434e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e50:	repz push 0x48d4426
  434e56:	push   ebx
  434e57:	cdq    
  434e58:	pop    ss
  434e59:	cmp    dl,BYTE PTR [si+0x6c]
  434e5d:	pop    es
  434e5e:	rol    DWORD PTR [esi+0x7e],1
  434e61:	xor    cl,al
  434e63:	jae    0x434e20
  434e65:	je     0x434e32
  434e67:	dec    ebp
  434e68:	out    0xb0,al
  434e6a:	jmp    0x505ba0f8
  434e6f:	push   ss
  434e70:	mov    ecx,0xdb7f21fb
  434e75:	in     eax,0xf6
  434e77:	jno    0x434e3d
  434e79:	ins    BYTE PTR es:[edi],dx
  434e7a:	inc    esp
  434e7b:	mov    ds:0x62038d36,al
  434e80:	icebp  
  434e81:	fcmove st,st(0)
  434e83:	dec    edx
  434e84:	arpl   si,cx
  434e86:	fsubr  DWORD PTR [eax-0x3f27bf5a]
  434e8c:	pusha  
  434e8d:	int3   
  434e8e:	jp     0x434e5d
  434e90:	or     BYTE PTR [edx],bl
  434e92:	stos   DWORD PTR es:[edi],eax
  434e93:	cld    
  434e94:	and    cl,bh
  434e96:	in     eax,dx
  434e97:	sbb    BYTE PTR [edx],bh
  434e99:	out    dx,al
  434e9a:	adc    al,0x6d
  434e9c:	add    al,0xad
  434e9e:	xlat   BYTE PTR ds:[ebx]
  434e9f:	push   ss
  434ea0:	mov    esp,0xbd875b0a
  434ea5:	es jecxz 0x434e2e
  434ea8:	test   BYTE PTR [edi-0xa10ce6b],dh
  434eae:	aam    0x7d
  434eb0:	(bad)  
  434eb4:	push   ds
  434eb5:	pop    ebx
  434eb6:	push   edi
  434eb7:	jo     0x434ec7
  434eb9:	(bad)  
  434eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ebb:	into   
  434ebc:	push   ebx
  434ebd:	arpl   sp,cx
  434ebf:	cmp    ah,dl
  434ec1:	dec    edi
  434ec2:	or     DWORD PTR [ecx-0x4d635303],ebx
  434ec8:	mov    eax,0x4b4a5d73
  434ecd:	mov    dh,BYTE PTR [ebx+0x68]
  434ed0:	xor    BYTE PTR [esi],bh
  434ed2:	popa   
  434ed3:	xlat   BYTE PTR ds:[ebx]
  434ed4:	push   esp
  434ed5:	call   0x5742cd7f
  434eda:	xchg   ebp,eax
  434edb:	xchg   esi,eax
  434edc:	inc    ebp
  434edd:	inc    esp
  434ede:	addr16 add eax,0xc100e340
  434ee4:	dec    ebp
  434ee5:	pop    esi
  434ee6:	jbe    0x434e93
  434ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ee9:	stos   BYTE PTR es:[edi],al
  434eea:	stos   BYTE PTR es:[edi],al
  434eeb:	imul   edi,DWORD PTR fs:[edx],0x5b
  434eef:	inc    esi
  434ef0:	pop    edx
  434ef1:	pop    ds
  434ef2:	gs xchg ebp,eax
  434ef4:	mov    bl,0xcb
  434ef6:	cmp    ecx,esi
  434ef8:	pop    ss
  434ef9:	ja     0x434f26
  434efb:	jne    0x434eec
  434efd:	jmp    0x558c:0x2e790eab
  434f04:	mov    DWORD PTR [esp+ebp*8],ecx
  434f07:	dec    ecx
  434f08:	mov    dl,0x62
  434f0a:	dec    esi
  434f0b:	stos   DWORD PTR es:[edi],eax
  434f0c:	cmp    eax,0x23a6a6b1
  434f11:	add    bh,BYTE PTR [edi]
  434f13:	popw   es
  434f15:	sub    DWORD PTR ds:0xfa7f56cc,esp
  434f1b:	stos   DWORD PTR es:[edi],eax
  434f1c:	xor    BYTE PTR [eax],dl
  434f1e:	sbb    eax,0xed6df449
  434f23:	add    eax,0xba9e9000
  434f28:	mul    dh
  434f2a:	fs push ebp
  434f2c:	xchg   ebp,eax
  434f2d:	scas   al,BYTE PTR es:[edi]
  434f2e:	xor    ebp,esi
  434f30:	lods   eax,DWORD PTR ds:[esi]
  434f31:	mov    esi,DWORD PTR [edx+0x2f]
  434f34:	xchg   esp,eax
  434f35:	icebp  
  434f36:	adc    DWORD PTR [ebx+0x7b],esi
  434f39:	fbstp  TBYTE PTR [ebx+0x18953398]
  434f3f:	cmp    al,0xd7
  434f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434f42:	pop    ss
  434f43:	aaa    
  434f44:	repnz and eax,0x3851ed27
  434f4a:	push   edx
  434f4b:	es leave 
  434f4d:	enter  0xe404,0xf3
  434f51:	jb     0x434fb4
  434f53:	and    ecx,DWORD PTR [esi+0x3551a865]
  434f59:	mov    dh,0x68
  434f5b:	inc    esi
  434f5c:	jmp    0xb27:0xa750b902
  434f63:	add    DWORD PTR [edi+0x7a],ebx
  434f66:	add    ebp,DWORD PTR [esi-0x19]
  434f69:	push   eax
  434f6a:	shr    DWORD PTR [esi],0x4e
  434f6d:	xchg   ebx,eax
  434f6e:	push   edi
  434f6f:	mov    esi,0x2461fa1e
  434f74:	nop
  434f75:	and    al,0x1e
  434f77:	jnp    0x434fb8
  434f79:	cdq    
  434f7a:	dec    ebp
  434f7b:	xor    eax,0x66c8d169
  434f80:	mov    ecx,0x7a6f00f1
  434f85:	lds    esp,FWORD PTR [edi+0x64]
  434f88:	(bad)  
  434f89:	scas   eax,DWORD PTR es:[edi]
  434f8a:	and    DWORD PTR [edi-0x1b],eax
  434f8d:	lods   al,BYTE PTR fs:[esi]
  434f8f:	retf   0x4ecd
  434f92:	dec    ebp
  434f93:	lods   eax,DWORD PTR ds:[esi]
  434f94:	ja     0x434f76
  434f96:	aam    0x3d
  434f98:	neg    DWORD PTR [ebx+esi*2]
  434f9b:	outs   dx,DWORD PTR ds:[esi]
  434f9c:	lods   eax,DWORD PTR ds:[esi]
  434f9d:	push   ebx
  434f9e:	pushf  
  434f9f:	icebp  
  434fa0:	ds aam 0xbf
  434fa3:	mov    dl,0xd0
  434fa5:	das    
  434fa6:	jnp    0x435008
  434fa8:	(bad)  [bp+di]
  434fab:	(bad)  
  434fac:	sbb    eax,0xd2b463ad
  434fb1:	and    eax,0xd66656
  434fb6:	or     al,0x1f
  434fb8:	mov    bh,0x2a
  434fba:	mov    edi,0xea94fa16
  434fbf:	xor    al,0xcb
  434fc1:	and    BYTE PTR [eax+0x0],al
  434fc4:	in     al,0x20
  434fc6:	dec    eax
  434fc7:	push   esp
  434fc8:	in     eax,dx
  434fc9:	call   0x39cf6f24
  434fce:	pop    edi
  434fcf:	pop    ss
  434fd0:	lock mov bh,0x25
  434fd3:	and    al,0x19
  434fd5:	add    ch,al
  434fd7:	out    0xd6,al
  434fd9:	adc    eax,0x31f25ebe
  434fde:	rcr    edi,cl
  434fe0:	lods   al,BYTE PTR ds:[esi]
  434fe1:	adc    al,0xc8
  434fe3:	(bad)  
  434fe4:	mov    edi,0xf1060f2d
  434fe9:	outs   dx,DWORD PTR ds:[esi]
  434fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434feb:	dec    esi
  434fec:	mov    eax,0xdd72b633
  434ff1:	jecxz  0x434fa8
  434ff3:	sbb    eax,0x82a628fa
  434ff8:	dec    edi
  434ff9:	jmp    0x5df52270
  434ffe:	or     eax,0xe50bd6fd
  435003:	xor    DWORD PTR [edx-0x3f],esp
  435006:	xchg   ecx,eax
  435007:	in     al,dx
  435008:	setb   dh
  43500b:	enter  0x337d,0x2f
  43500f:	sub    BYTE PTR [esi],0xff
  435012:	jge    0x435069
  435014:	inc    ebp
  435015:	sbb    BYTE PTR [esi+0x75],ah
  435018:	push   ecx
  435019:	lea    esp,[esi+0x4d]
  43501c:	shr    BYTE PTR [edx],0x3f
  43501f:	mov    eax,DWORD PTR [esi]
  435021:	cs stc 
  435023:	mov    dh,0x7
  435025:	pusha  
  435026:	dec    eax
  435027:	mov    ebp,0x8b80e316
  43502c:	cwde   
  43502d:	xchg   ecx,eax
  43502e:	push   ecx
  43502f:	mov    al,bh
  435031:	xchg   esp,eax
  435032:	enter  0x5f33,0x0
  435036:	jg     0x434fc3
  435038:	mov    bh,0x99
  43503a:	pop    esp
  43503b:	cs int3 
  43503d:	cmp    al,0x93
  43503f:	mov    ds:0x5334e647,al
  435044:	adc    al,0x34
  435046:	out    0xc6,al
  435048:	pop    edx
  435049:	dec    esp
  43504a:	ja     0x434ffd
  43504c:	cmp    al,0x57
  43504e:	and    ah,BYTE PTR [esp+eiz*4+0x55]
  435052:	inc    ecx
  435053:	jno    0x434ffc
  435055:	sbb    dh,BYTE PTR [si+0xf]
  435059:	xchg   ecx,eax
  43505a:	inc    ebx
  43505b:	mov    dh,0x2c
  43505d:	stos   DWORD PTR es:[edi],eax
  43505e:	push   cs
  43505f:	mov    esp,0x8d265f8d
  435064:	pusha  
  435065:	dec    DWORD PTR [esi]
  435067:	out    dx,eax
  435068:	shl    DWORD PTR [esi],cl
  43506a:	inc    esi
  43506b:	sub    bh,BYTE PTR [edi+0x44f5e580]
  435071:	cli    
  435072:	xlat   BYTE PTR ds:[ebx]
  435073:	pop    edx
  435074:	dec    edi
  435075:	dec    ebp
  435076:	sub    DWORD PTR [edx+0x15],edi
  435079:	jge    0x435086
  43507b:	je     0x4350ec
  43507d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43507e:	cwde   
  43507f:	mov    esi,DWORD PTR [edi+ebx*8+0x2f]
  435083:	push   ecx
  435084:	fidivr WORD PTR [ebx]
  435086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435087:	fnstcw WORD PTR ds:0xd1454536
  43508d:	push   es
  43508e:	enter  0x4a9c,0xe9
  435092:	mov    eax,ds:0xc221f05c
  435097:	repnz es sbb eax,0x73c719ca
  43509e:	jmp    0x4350e8
  4350a0:	pop    eax
  4350a1:	push   ss
  4350a2:	mov    ds:0xafe96acc,eax
  4350a7:	sti    
  4350a8:	pop    ebx
  4350a9:	adc    al,0xc3
  4350ab:	mov    ds:0x4c579ad,al
  4350b0:	or     DWORD PTR [esi+0x67],ecx
  4350b3:	scas   al,BYTE PTR es:[edi]
  4350b4:	cmp    ah,cl
  4350b6:	and    eax,ebx
  4350b8:	addr16 jnp 0x4350b7
  4350bb:	mov    esi,DWORD PTR [ecx-0x1d]
  4350be:	sti    
  4350bf:	das    
  4350c0:	paddw  mm1,QWORD PTR [edx+eiz*4-0x2d]
  4350c5:	scas   al,BYTE PTR es:[edi]
  4350c6:	pushf  
  4350c7:	aas    
  4350c8:	add    ebp,eax
  4350ca:	scas   al,BYTE PTR es:[edi]
  4350cb:	push   es
  4350cc:	(bad)  
  4350cd:	jle    0x4350b2
  4350cf:	push   DWORD PTR [ecx+0x4b]
  4350d2:	lods   al,BYTE PTR ds:[esi]
  4350d3:	cmp    eax,0xbd130880
  4350d8:	(bad)  
  4350da:	xor    BYTE PTR [edi+0x409eb1d3],bh
  4350e0:	les    edx,FWORD PTR [esi+0x23635994]
  4350e6:	in     al,0x6a
  4350e8:	mov    ecx,0xe593a4a2
  4350ed:	jbe    0x435114
  4350ef:	sbb    bl,0xc8
  4350f2:	and    BYTE PTR [esi*1-0x31a0e2e8],dl
  4350f9:	mov    cl,0xe3
  4350fb:	jg     0x4350cb
  4350fd:	cmc    
  4350fe:	jp     0x435115
  435100:	rol    DWORD PTR [edx],0x5b
  435103:	push   ecx
  435104:	sbb    al,0x9
  435106:	shr    DWORD PTR [ebx],1
  435108:	stos   DWORD PTR es:[edi],eax
  435109:	xchg   ebx,eax
  43510a:	imul   edi,DWORD PTR ds:0xf09569e0,0x2b
  435111:	jmp    0x435099
  435113:	xor    eax,0x5538896b
  435118:	icebp  
  435119:	cmp    DWORD PTR [eax],ebp
  43511b:	icebp  
  43511c:	cmc    
  43511d:	jle    0x4350a7
  43511f:	(bad)  
  435120:	out    0xca,eax
  435122:	cmp    ebp,esp
  435124:	mov    ch,0x5a
  435126:	push   0xffffff9e
  435128:	hlt    
  435129:	push   ecx
  43512a:	icebp  
  43512b:	cmp    BYTE PTR [esi+0x3b],al
  43512e:	ror    BYTE PTR [edx],1
  435130:	mov    bh,BYTE PTR [esp+ecx*1]
  435133:	clc    
  435134:	or     al,0xbd
  435136:	push   ss
  435137:	out    0xa2,al
  435139:	mov    BYTE PTR [eax-0x59],ah
  43513c:	xchg   ecx,eax
  43513d:	sar    DWORD PTR [ecx-0x21],1
  435140:	cwde   
  435141:	and    esp,DWORD PTR [eax-0x3d]
  435144:	je     0x43513e
  435146:	mov    ebp,0x7caa76d0
  43514b:	rol    BYTE PTR [esi-0x145f9551],1
  435151:	sbb    bh,cl
  435153:	xchg   ecx,eax
  435154:	xor    al,0x7b
  435156:	adc    DWORD PTR [edx-0x33],ecx
  435159:	sbb    eax,DWORD PTR [edx]
  43515b:	fimul  WORD PTR [ebx]
  43515d:	iret   
  43515e:	sbb    BYTE PTR [ebp+0x2ea1ed1a],ah
  435164:	aam    0x3b
  435166:	push   0xac0b3f4d
  43516b:	imul   esi,DWORD PTR [ecx+0x7182c612],0x49
  435172:	jl     0x4351ef
  435174:	xor    DWORD PTR [edx+0x5e75063f],ebx
  43517a:	push   esi
  43517b:	mov    ebp,0xc7731157
  435180:	call   DWORD PTR [ecx-0x45]
  435183:	iret   
  435184:	arpl   dx,si
  435186:	mov    DWORD PTR [si],ecx
  435189:	jne    0x435123
  43518b:	fcomp  DWORD PTR ds:0x46c9bd9e
  435191:	cli    
  435192:	xor    DWORD PTR [eax+0xe08e4f5],0xbe36486b
  43519c:	fucompp 
  43519e:	mov    eax,0xc7158435
  4351a3:	xchg   ecx,eax
  4351a4:	gs cmc 
  4351a6:	dec    esp
  4351a7:	repz push 0x5c0e35b5
  4351ad:	or     esi,DWORD PTR [ecx-0x3291763e]
  4351b3:	sbb    eax,edx
  4351b5:	stc    
  4351b6:	loop   0x4351d7
  4351b8:	cwde   
  4351b9:	push   cs
  4351ba:	ja     0x4351bb
  4351bc:	mov    esp,0xba49ae2c
  4351c1:	pop    esp
  4351c2:	jmp    0x4351ef
  4351c4:	je     0x43518a
  4351c6:	jo     0x435226
  4351c8:	xor    eax,0xb27640a
  4351cd:	fs into 
  4351cf:	cwde   
  4351d0:	sbb    eax,DWORD PTR [ebx]
  4351d2:	or     ah,bl
  4351d4:	jmp    0x96c99ac2
  4351d9:	enter  0xb0f0,0xe4
  4351dd:	lea    ebp,[esi+ebx*1]
  4351e0:	loop   0x435260
  4351e2:	jbe    0x4351f0
  4351e4:	data16 sahf 
  4351e6:	test   DWORD PTR [eax+0x3b],ebx
  4351e9:	jae    0x43523d
  4351eb:	fdiv   QWORD PTR [esi]
  4351ed:	xchg   ebp,eax
  4351ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4351ef:	or     al,0x6c
  4351f1:	out    dx,al
  4351f2:	xor    al,BYTE PTR [edx+0x1dfe5308]
  4351f8:	outs   dx,DWORD PTR ds:[esi]
  4351f9:	inc    edi
  4351fa:	das    
  4351fb:	or     dl,dh
  4351fd:	lahf   
  4351fe:	iret   
  4351ff:	mov    DWORD PTR [ebx],esp
  435201:	jbe    0x435198
  435203:	sub    al,0xe0
  435205:	add    eax,esp
  435207:	sar    DWORD PTR [edx-0x3c],0x4d
  43520b:	pop    es
  43520c:	sahf   
  43520d:	aaa    
  43520e:	mov    ecx,0xd8ce4e84
  435213:	sub    DWORD PTR [eax],edi
  435215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435216:	sahf   
  435217:	mov    eax,ds:0xd8d29d2
  43521c:	pop    ss
  43521d:	jl     0x4351ef
  43521f:	hlt    
  435220:	sbb    BYTE PTR [edx+0x399d6f9],ch
  435226:	in     eax,dx
  435227:	jno    0x4351b0
  435229:	leave  
  43522a:	mov    edx,0x30af3ef6
  43522f:	lahf   
  435230:	fst    QWORD PTR [edi-0x18]
  435233:	xor    bh,BYTE PTR [edi-0x71492291]
  435239:	mov    bl,0x9
  43523b:	xchg   ebp,eax
  43523c:	mov    ds:0x35d4811,al
  435241:	imul   edi,DWORD PTR [ecx+0x701c136d],0xffffffbf
  435248:	xor    ah,dh
  43524a:	gs jns 0x43527a
  43524d:	jns    0x435273
  43524f:	fisttp QWORD PTR [eax-0x5a]
  435252:	cmp    DWORD PTR [edi],ebp
  435254:	sub    eax,0x5e3ceb50
  435259:	dec    edi
  43525a:	leave  
  43525b:	es out 0x82,al
  43525e:	pop    ebp
  43525f:	xchg   DWORD PTR [ecx-0x6743a821],ebp
  435265:	jge    0x4351fd
  435267:	add    eax,0xfffffff7
  43526a:	inc    eax
  43526b:	lock jg 0x435264
  43526e:	mov    al,0xaa
  435270:	pusha  
  435271:	cmp    dl,bl
  435273:	push   eax
  435274:	inc    esi
  435275:	test   al,0xd6
  435277:	rcl    DWORD PTR [esi+0x64],cl
  43527a:	imul   esi,edi,0x70
  43527d:	cld    
  43527e:	jbe    0x4352f2
  435280:	dec    ecx
  435281:	lods   eax,DWORD PTR ds:[esi]
  435282:	jno    0x435264
  435284:	dec    esi
  435285:	xor    al,0x5e
  435287:	shl    BYTE PTR [ecx-0x64],1
  43528a:	adc    edx,esp
  43528c:	xor    DWORD PTR [eax],0x227d6d7d
  435292:	adc    dh,BYTE PTR [edi]
  435294:	pop    esi
  435295:	jae    0x435271
  435297:	dec    bh
  435299:	pop    esi
  43529a:	push   0x23
  43529c:	pop    ebp
  43529d:	lods   al,BYTE PTR ds:[esi]
  43529e:	stc    
  43529f:	jnp    0x4352f1
  4352a1:	and    esi,DWORD PTR [ebx]
  4352a3:	addr16 cmp eax,0x97115f9e
  4352a9:	pop    ds
  4352aa:	aad    0x3d
  4352ac:	arpl   WORD PTR [eax+0x5e24e4fa],sp
  4352b2:	(bad)  
  4352b3:	fs and eax,0xb9e36ae
  4352b9:	push   ss
  4352ba:	add    al,0xf4
  4352bc:	cmp    BYTE PTR [ecx+0x587b6efa],dl
  4352c2:	or     al,0xe0
  4352c4:	pop    ebp
  4352c5:	pop    edi
  4352c6:	push   edx
  4352c7:	pop    es
  4352c8:	mov    cl,bh
  4352ca:	or     BYTE PTR ds:0x7e2a6b03,dl
  4352d0:	jne    0x4352d4
  4352d2:	fnsave [ecx+0x8]
  4352d5:	xchg   ecx,eax
  4352d6:	push   ecx
  4352d7:	dec    esi
  4352d8:	pop    ecx
  4352d9:	ss fcmovne st,st(6)
  4352dc:	pop    ebx
  4352dd:	jo     0x43528a
  4352df:	lea    esp,ds:0x4f7e88d2
  4352e5:	mov    ebx,0xc9f32768
  4352ea:	xor    cl,BYTE PTR [eax-0x7e]
  4352ed:	push   cs
  4352ee:	(bad)  
  4352ef:	xchg   ebx,eax
  4352f0:	adc    eax,DWORD PTR [ecx]
  4352f2:	sub    dh,BYTE PTR [eax+0x59]
  4352f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4352f6:	or     bl,BYTE PTR [edi]
  4352f8:	fdivr  QWORD PTR [edi]
  4352fa:	das    
  4352fb:	cmp    BYTE PTR [edi+edi*1-0x2c92bf03],cl
  435302:	mov    DWORD PTR [ebx+0x3e],esi
  435305:	cmp    ch,bl
  435307:	outs   dx,DWORD PTR ds:[esi]
  435308:	dec    ebx
  435309:	adc    al,0xd3
  43530b:	test   al,0x33
  43530d:	psadbw mm5,QWORD PTR [esi+edx*1]
  435311:	ins    BYTE PTR es:[edi],dx
  435312:	(bad)  
  435313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435314:	cmp    dl,ah
  435316:	popa   
  435317:	mov    ds:0xe9b1b8c5,al
  43531c:	out    dx,al
  43531d:	mov    edx,0xcbca7471
  435322:	outs   dx,BYTE PTR ds:[esi]
  435323:	ds adc eax,0xfb9187e4
  435329:	pop    ecx
  43532a:	mov    edx,0xe6016bfb
  43532f:	outs   dx,DWORD PTR ds:[esi]
  435330:	mov    ds:0x3041f778,al
  435335:	mov    al,dh
  435337:	es pop es
  435339:	push   ebp
  43533a:	lahf   
  43533b:	jmp    0xbe7d:0xe7d9b303
  435342:	into   
  435343:	cmp    ebp,0x41edbdde
  435349:	xor    dh,BYTE PTR [esi-0x2c1156fb]
  43534f:	mov    cl,0xbd
  435351:	(bad)  
  435353:	pop    edx
  435354:	xor    BYTE PTR [esi*8+0x1ba4bf2d],0xd2
  43535c:	xchg   edx,eax
  43535d:	push   ebx
  43535e:	adc    eax,0x99e89635
  435363:	cmp    ah,BYTE PTR [ebp+0x7b]
  435366:	dec    ebx
  435367:	mov    ecx,0x83e01f9c
  43536c:	mov    al,0x5
  43536e:	outs   dx,BYTE PTR ds:[esi]
  43536f:	int    0xe5
  435371:	or     eax,0x749c6af8
  435376:	push   ebp
  435377:	(bad)  
  435378:	clc    
  435379:	mov    BYTE PTR [ecx],cl
  43537b:	fild   QWORD PTR [ebp+ebp*2+0x564f638b]
  435382:	pop    edx
  435383:	call   0x5f29:0xd71da74
  43538a:	inc    dl
  43538c:	out    dx,eax
  43538d:	sbb    DWORD PTR [ebx],ebp
  43538f:	and    al,0x28
  435391:	addr16 cdq 
  435393:	arpl   WORD PTR [edx],si
  435395:	ficomp DWORD PTR [esp+eiz*4+0x74]
  435399:	add    DWORD PTR [ecx-0x5e991d0b],esp
  43539f:	clc    
  4353a0:	fimul  DWORD PTR [ebp+ebx*1+0x1f]
  4353a4:	and    DWORD PTR [ebx+0xe],esi
  4353a7:	stc    
  4353a8:	pusha  
  4353a9:	and    BYTE PTR [edi-0x2964481e],dl
  4353af:	sub    bh,BYTE PTR [esi+edx*4+0x5d]
  4353b3:	or     eax,0xff923d09
  4353b8:	ja     0x4353be
  4353ba:	or     BYTE PTR [eax+0x14cfd9cf],ch
  4353c0:	lds    di,DWORD PTR [esi+eax*8+0x36]
  4353c5:	lds    ebp,FWORD PTR [esi]
  4353c7:	xor    esp,DWORD PTR [edi]
  4353c9:	xchg   ebp,eax
  4353ca:	scas   al,BYTE PTR es:[edi]
  4353cb:	cmp    al,0x67
  4353cd:	mov    ds:0x1e632236,eax
  4353d2:	xchg   edi,eax
  4353d3:	ror    edi,0x17
  4353d6:	xor    BYTE PTR [ecx-0x2f],ah
  4353d9:	into   
  4353da:	popa   
  4353db:	inc    eax
  4353dc:	jo     0x4353b0
  4353de:	bound  eax,QWORD PTR ds:0x103aee49
  4353e4:	fld    QWORD PTR [ebp-0x11]
  4353e7:	repnz adc al,0xcb
  4353ea:	fld    TBYTE PTR [ebx+0x27e279bf]
  4353f0:	fdivr  DWORD PTR [ecx+ebx*8+0xe80be47]
  4353f7:	sub    BYTE PTR fs:[edi-0x4a8c646a],al
  4353fe:	aam    0x9b
  435400:	cmp    al,0xfc
  435402:	nop
  435403:	mov    WORD PTR [edx+esi*2],?
  435406:	je     0x43542e
  435408:	lahf   
  435409:	fbstp  TBYTE PTR [edi+edx*1+0x201f9640]
  435410:	jmp    0x4353ee
  435412:	es ss push ss
  435415:	xlat   BYTE PTR ds:[ebx]
  435416:	out    0xc9,al
  435418:	shl    BYTE PTR [edx+0x21],cl
  43541b:	dec    ecx
  43541c:	lea    esi,[eax]
  43541e:	int3   
  43541f:	mov    eax,0x4aa4704f
  435424:	ins    DWORD PTR es:[edi],dx
  435425:	adc    BYTE PTR [ecx-0x1a64658],dl
  43542b:	jno    0x435433
  43542d:	adc    bh,BYTE PTR [edi-0x1f]
  435430:	mov    bl,0xcb
  435432:	or     ebx,DWORD PTR [ecx+0x78]
  435435:	scas   al,BYTE PTR es:[edi]
  435436:	imul   ebp,DWORD PTR [eax],0x8e1f02c7
  43543c:	retf   
  43543d:	push   cs
  43543e:	or     eax,0x14dbff51
  435443:	pop    esi
  435444:	outs   dx,BYTE PTR ds:[esi]
  435445:	or     bl,ah
  435447:	cs dec ecx
  435449:	sahf   
  43544a:	jbe    0x435415
  43544c:	rcr    DWORD PTR [esi],0x3d
  43544f:	jmp    0xfb3ea99b
  435454:	xchg   ecx,eax
  435455:	sbb    al,0xe
  435457:	jg     0x435423
  435459:	imul   eax,DWORD PTR [edx],0x4948ee93
  43545f:	pop    es
  435460:	pop    esi
  435461:	retf   
  435462:	int3   
  435463:	and    BYTE PTR [edi+0x5e7c7728],ah
  435469:	jmp    0x4354d7
  43546b:	sub    esi,DWORD PTR ds:0x81c529f8
  435471:	loop   0x43542e
  435473:	rcl    BYTE PTR [esi+edx*8],1
  435476:	or     eax,0x5f5d4db3
  43547b:	shr    BYTE PTR [ebx-0x33db542c],1
  435481:	jnp    0x4354ba
  435483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435484:	rol    esi,0xd1
  435487:	test   DWORD PTR [ebx+eiz*2],ecx
  43548a:	xchg   ebx,eax
  43548b:	hlt    
  43548c:	inc    eax
  43548d:	jno    0x435429
  43548f:	or     esp,edi
  435491:	jp     0x435426
  435493:	aam    0x44
  435495:	mov    bl,0xdc
  435497:	test   BYTE PTR [esi-0x2b],0xe4
  43549b:	sbb    eax,0x45895512
  4354a0:	nop
  4354a1:	mov    eax,esp
  4354a3:	fs pop esi
  4354a5:	in     eax,0x99
  4354a7:	pusha  
  4354a8:	cmp    eax,0x45e29aa5
  4354ad:	pop    edx
  4354ae:	sbb    ch,BYTE PTR [ebx-0x58]
  4354b1:	and    bh,BYTE PTR [edx]
  4354b3:	lods   eax,DWORD PTR ds:[esi]
  4354b4:	inc    esi
  4354b5:	shl    BYTE PTR [ebp-0x7d],cl
  4354b8:	in     eax,0xbf
  4354ba:	xchg   ecx,eax
  4354bb:	hlt    
  4354bc:	jg     0x435457
  4354be:	xchg   ebp,eax
  4354bf:	add    ch,BYTE PTR [ebx-0x3b73096d]
  4354c5:	inc    esp
  4354c6:	mov    ecx,0xde088511
  4354cb:	pop    ss
  4354cc:	pop    ds
  4354cd:	cli    
  4354ce:	int3   
  4354cf:	or     BYTE PTR [ecx+ebp*1+0x30],dh
  4354d3:	mul    BYTE PTR [edi-0x3d3a2318]
  4354d9:	mov    dl,0x9c
  4354db:	xor    eax,0x3ce853ef
  4354e0:	sub    bl,al
  4354e2:	xchg   esp,eax
  4354e3:	mov    BYTE PTR [ebx-0xa],ch
  4354e6:	inc    ebp
  4354e7:	jb     0x4354f1
  4354e9:	xor    al,dl
  4354eb:	test   esp,esi
  4354ed:	lock popa 
  4354ef:	mov    eax,0xd6426314
  4354f4:	enter  0x1b5d,0x53
  4354f8:	scas   eax,DWORD PTR es:[edi]
  4354f9:	mov    esp,0xb078bc18
  4354fe:	and    BYTE PTR [ecx-0x7f917ab7],bl
  435504:	lods   al,BYTE PTR ds:[esi]
  435505:	cwde   
  435506:	pop    eax
  435507:	jb     0x4354a7
  435509:	shr    DWORD PTR [ebp+0x49986e54],1
  43550f:	lock and DWORD PTR [edi-0x10d1e8b0],0xda0435b8
  43551a:	mov    dh,0xb4
  43551c:	mov    dh,0x11
  43551e:	out    0xa9,al
  435520:	jecxz  0x43550e
  435522:	fild   DWORD PTR [ebx-0x65]
  435525:	jae    0x4354ab
  435527:	retf   0xd3ec
  43552a:	outs   dx,BYTE PTR ds:[esi]
  43552b:	call   0xc07a709f
  435530:	mov    ch,0x25
  435532:	in     al,dx
  435533:	sub    eax,0xad7ecdaa
  435538:	je     0x4354c2
  43553a:	sub    ebp,DWORD PTR [ebx]
  43553c:	jns    0x43553e
  43553e:	out    dx,al
  43553f:	and    al,0x6a
  435541:	out    0x9a,eax
  435543:	(bad)  
  435544:	xor    BYTE PTR [ecx],ch
  435546:	int3   
  435547:	xor    eax,0x5d317b19
  43554c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43554d:	and    DWORD PTR cs:0xad0426fb,0x70a9d05c
  435558:	in     eax,0x20
  43555a:	sbb    edx,DWORD PTR [eax-0x10]
  43555d:	xor    dl,dl
  43555f:	in     eax,dx
  435560:	pop    esp
  435561:	ins    BYTE PTR es:[edi],dx
  435562:	and    DWORD PTR [ecx],eax
  435564:	lock dec edi
  435566:	xor    BYTE PTR [edx],bl
  435568:	enterw 0x5533,0xf
  43556d:	mov    esi,0x91e6db6f
  435572:	and    al,0x5b
  435574:	mov    dh,0x8c
  435576:	cmp    BYTE PTR [edi-0x73],dl
  435579:	aam    0x73
  43557b:	xor    eax,0x6fe36c33
  435580:	sbb    eax,0xea5a0f22
  435585:	mov    edi,DWORD PTR [edx]
  435587:	dec    esp
  435588:	jl     0x4355a5
  43558a:	jp     0x4355e3
  43558c:	add    BYTE PTR [eax],al
  43558e:	jp     0x435596
  435590:	mov    cs,esp
  435592:	add    BYTE PTR [edx+0xbc23913],0xfc
  435599:	jmp    0x43552f
  43559b:	mov    bh,0x6f
  43559d:	adc    eax,0x24fa3ae9
  4355a2:	and    eax,DWORD PTR [edx]
  4355a4:	cwde   
  4355a5:	retf   
  4355a6:	jno    0x4355f6
  4355a8:	pop    ds
  4355a9:	dec    ebx
  4355aa:	test   cl,cl
  4355ac:	dec    edi
  4355ad:	push   edi
  4355ae:	stos   BYTE PTR es:[edi],al
  4355af:	xchg   ebx,eax
  4355b0:	push   ebx
  4355b1:	add    al,0xf2
  4355b3:	inc    eax
  4355b4:	jmp    0x4355f2
  4355b6:	fnstenv [ebp+edx*8+0x29340b12]
  4355bd:	jmp    0x4355d9
  4355bf:	inc    esp
  4355c0:	fbstp  TBYTE PTR [edx]
  4355c2:	ret    
  4355c3:	jns    0x4355a8
  4355c5:	inc    ebx
  4355c6:	add    eax,0x4c587dca
  4355cb:	push   ebx
  4355cc:	aam    0x90
  4355ce:	inc    esp
  4355cf:	and    BYTE PTR [ecx+ecx*1],0xc1
  4355d3:	(bad)  
  4355d4:	pushf  
  4355d5:	hlt    
  4355d6:	out    dx,al
  4355d7:	jl     0x435647
  4355d9:	pushf  
  4355da:	fstp   DWORD PTR [ecx+0x25]
  4355dd:	sub    al,0x66
  4355df:	and    bh,bl
  4355e1:	inc    edi
  4355e2:	sub    ah,al
  4355e4:	aaa    
  4355e5:	push   eax
  4355e6:	shr    DWORD PTR [edi+0x5480b013],1
  4355ec:	lea    edi,[edi-0x38]
  4355ef:	sub    ecx,DWORD PTR [esi+0x6fc78fa7]
  4355f5:	loope  0x435628
  4355f7:	pop    ebp
  4355f8:	adc    ah,ah
  4355fa:	js     0x4355bb
  4355fc:	jmp    0x4355c0
  4355fe:	loop   0x435640
  435600:	mov    bh,0x9b
  435602:	sub    ebx,DWORD PTR [esi+0x48]
  435605:	mov    ecx,DWORD PTR ds:0x966d1b23
  43560b:	xchg   BYTE PTR [ecx+0x12faca87],al
  435611:	add    dh,dl
  435613:	jo     0xf09349e7
  435619:	std    
  43561a:	(bad)  
  43561b:	adc    DWORD PTR [eax],edi
  43561d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43561e:	jmp    0x662b:0x8435fb0d
  435625:	xor    BYTE PTR cs:[esi+edi*8+0x53],dl
  43562a:	jo     0x435605
  43562c:	push   es
  43562d:	lahf   
  43562e:	shl    DWORD PTR [ecx-0x33fc5483],cl
  435634:	push   ecx
  435635:	popf   
  435636:	sti    
  435637:	push   edi
  435638:	push   esi
  435639:	mov    esp,0x36afdc2d
  43563e:	ror    DWORD PTR [eax+0x69],cl
  435641:	xor    ah,0xcc
  435644:	add    edx,DWORD PTR [esi-0x3]
  435647:	cld    
  435648:	cmp    al,BYTE PTR [ecx+eiz*1-0x75]
  43564c:	dec    esp
  43564d:	mov    edi,0x687cd429
  435652:	inc    esi
  435653:	add    esi,DWORD PTR [ecx-0x66]
  435656:	test   BYTE PTR [eax],cl
  435658:	cld    
  435659:	pavgb  mm5,QWORD PTR [ebx+0x78]
  43565d:	sbb    al,bh
  43565f:	add    BYTE PTR [esp+eax*1],dl
  435662:	repnz mov ch,0x93
  435665:	push   edi
  435666:	sti    
  435667:	(bad)  
  435669:	ins    BYTE PTR es:[edi],dx
  43566a:	sbb    DWORD PTR [esi-0x13],eax
  43566d:	adc    edx,DWORD PTR [esi+edx*2]
  435670:	and    ah,BYTE PTR [edi-0x7e4791b8]
  435676:	pop    ebp
  435677:	inc    esp
  435678:	adc    BYTE PTR [edi-0x21],bh
  43567b:	inc    edi
  43567c:	test   al,0x5
  43567e:	scas   al,BYTE PTR es:[edi]
  43567f:	dec    edi
  435680:	mov    cl,0x8f
  435682:	mov    BYTE PTR [edx+0x26365273],bh
  435688:	or     BYTE PTR [esi-0x3d],bh
  43568b:	xor    eax,0xa9bd0e11
  435690:	inc    edi
  435691:	xor    al,0xf
  435693:	jmp    0x435641
  435695:	jmp    0xf9c5:0x2e28f181
  43569c:	push   ds
  43569d:	dec    eax
  43569e:	gs loope 0x435680
  4356a1:	retf   0xa1e3
  4356a4:	mov    eax,0x92d39ada
  4356a9:	pop    esi
  4356aa:	pop    ss
  4356ab:	retf   0xcb74
  4356ae:	jno    0x43564a
  4356b0:	in     al,dx
  4356b1:	icebp  
  4356b2:	or     eax,0x4b02e09e
  4356b7:	and    DWORD PTR [esi-0xd],0x96765480
  4356be:	data16 lahf 
  4356c0:	mov    esi,0x60e1065b
  4356c5:	test   BYTE PTR [ecx],dl
  4356c7:	mul    BYTE PTR [ebp-0x62935be8]
  4356cd:	adc    edx,0xffffff92
  4356d0:	popf   
  4356d1:	mov    ecx,0x3c63bc72
  4356d6:	dec    esp
  4356d7:	cmp    DWORD PTR [eax],edx
  4356d9:	mov    ah,BYTE PTR [ebp+0x40]
  4356dc:	mov    ah,BYTE PTR [eax+0x52]
  4356df:	xchg   ecx,eax
  4356e0:	cwde   
  4356e1:	loopne 0x435669
  4356e3:	inc    ecx
  4356e4:	sbb    al,ah
  4356e6:	jns    0x4356f9
  4356e8:	enter  0xcf95,0xec
  4356ec:	fs xchg esi,eax
  4356ee:	loopne 0x4356d6
  4356f0:	scas   eax,DWORD PTR es:[edi]
  4356f1:	mov    cl,0xa2
  4356f3:	xor    BYTE PTR [eax-0x160fe2eb],dl
  4356f9:	cmp    ch,BYTE PTR [ecx]
  4356fb:	mov    edx,0xac79bf89
  435700:	(bad)  
  435702:	push   esp
  435703:	xor    DWORD PTR [ecx],ecx
  435705:	jns    0x4356bb
  435707:	jno    0x43570e
  435709:	lods   eax,DWORD PTR ds:[esi]
  43570a:	sub    al,0x28
  43570c:	imul   eax,DWORD PTR [eax+0x68b384c5],0x3e
  435713:	xor    DWORD PTR [edx],edx
  435715:	bound  ecx,QWORD PTR [ecx]
  435717:	sub    eax,DWORD PTR [edx+ebx*4]
  43571a:	dec    ebp
  43571b:	add    eax,0x6d82055a
  435720:	lea    edi,[esi]
  435722:	xchg   esp,eax
  435723:	sub    bx,0x20
  435727:	in     al,0x3
  435729:	scas   al,BYTE PTR es:[edi]
  43572a:	pusha  
  43572b:	in     eax,dx
  43572c:	push   ebx
  43572d:	ins    BYTE PTR es:[edi],dx
  43572e:	push   esp
  43572f:	rcl    DWORD PTR [edx+ebx*2+0x5219036],cl
  435736:	call   0x26ff62dd
  43573b:	test   al,0x3c
  43573d:	sbb    edi,ebp
  43573f:	neg    BYTE PTR [esi+0x3d]
  435742:	ss ins BYTE PTR es:[edi],dx
  435744:	add    ah,BYTE PTR [ebp-0x75c7e112]
  43574a:	stos   BYTE PTR es:[edi],al
  43574b:	mov    edi,0x66d164d2
  435750:	jbe    0x4356f6
  435752:	push   edi
  435753:	push   ecx
  435754:	sub    ebp,esi
  435756:	jnp    0x43579a
  435758:	inc    esp
  435759:	mov    edx,0x8592c716
  43575e:	mov    dh,0x27
  435760:	hlt    
  435761:	ret    
  435762:	lahf   
  435763:	data16 sahf 
  435765:	push   ecx
  435766:	jmp    0x5265494e
  43576b:	pop    es
  43576c:	mov    edx,0x4342f112
  435771:	sub    BYTE PTR [edx+esi*2],cl
  435774:	add    cl,BYTE PTR [ebx+0x33dc483]
  43577a:	xor    BYTE PTR [ecx+0x1779433b],bl
  435780:	push   0xf966437
  435785:	cmp    DWORD PTR [ebx],ebp
  435787:	pop    ebp
  435788:	or     bh,BYTE PTR [edx]
  43578a:	jo     0x43570d
  43578c:	enter  0xfbb4,0xf5
  435790:	xor    eax,0xdd999943
  435795:	adc    bl,BYTE PTR [edx-0x46]
  435798:	je     0x4357fb
  43579a:	test   BYTE PTR [edi+0x7d0b6c65],0x4c
  4357a1:	inc    BYTE PTR [ebp-0x7219d18e]
  4357a7:	(bad)  
  4357a8:	loope  0x43577f
  4357aa:	or     edi,esp
  4357ac:	frstor [esi]
  4357ae:	sub    edx,DWORD PTR [edx]
  4357b0:	test   DWORD PTR [edi-0x4d],ebx
  4357b3:	mov    bl,0x60
  4357b5:	outs   dx,DWORD PTR ds:[esi]
  4357b6:	mov    ecx,0xaf6e67e
  4357bb:	mov    bl,BYTE PTR [ebx+0xf4888f2]
  4357c1:	sub    DWORD PTR [edx+0x8aa537],ecx
  4357c7:	shl    BYTE PTR [edi-0x41f8eb7d],cl
  4357cd:	mov    eax,0xf607bfbf
  4357d2:	jno    0x43576e
  4357d4:	add    dl,BYTE PTR [ecx-0x4e]
  4357d7:	pop    esp
  4357d8:	and    dh,cl
  4357da:	inc    ecx
  4357db:	into   
  4357dc:	je     0x435762
  4357de:	dec    ecx
  4357df:	cmp    al,0x5f
  4357e1:	pop    ecx
  4357e2:	inc    edx
  4357e3:	dec    esi
  4357e4:	mov    bl,0x27
  4357e6:	adc    DWORD PTR [ebp+0x27],ebx
  4357e9:	mov    al,0x9c
  4357eb:	or     bh,BYTE PTR [esi+eax*4+0x2c]
  4357ef:	fsubr  st(0),st
  4357f1:	add    al,0x2e
  4357f3:	stos   DWORD PTR es:[edi],eax
  4357f4:	test   eax,0x39fb4947
  4357f9:	cmp    edi,esi
  4357fb:	dec    ecx
  4357fc:	fmul   DWORD PTR [edx+0x42bce032]
  435802:	in     eax,dx
  435803:	push   ecx
  435804:	call   FWORD PTR [ebx+0x32ede769]
  43580a:	lds    eax,FWORD PTR [ebp+0x63cfa966]
  435810:	cmp    edi,DWORD PTR [ecx]
  435812:	es push ds
  435814:	icebp  
  435815:	bound  eax,QWORD PTR [edi+0x73]
  435818:	mov    edi,0xec82a6ce
  43581d:	gs adc edi,ebx
  435820:	nop
  435821:	sti    
  435822:	add    al,0x2
  435824:	(bad)  
  435825:	out    dx,eax
  435826:	mov    bl,0x83
  435828:	nop
  435829:	lahf   
  43582a:	test   DWORD PTR [esi],edx
  43582c:	lods   al,BYTE PTR ds:[esi]
  43582d:	(bad)
  435830:	adc    dl,bh
  435832:	pusha  
  435833:	mov    ebp,0xbc796824
  435838:	outs   dx,DWORD PTR ds:[esi]
  435839:	mov    dh,0x2c
  43583b:	jmp    0x4358b2
  43583d:	mov    eax,ds:0xca84ed96
  435842:	mov    cl,0x1c
  435844:	jg     0x4357c6
  435846:	xchg   edx,eax
  435847:	test   eax,0x1ea7e905
  43584c:	cmc    
  43584d:	pop    ebx
  43584e:	xor    DWORD PTR [edi+0x8],esp
  435851:	mov    esi,0x2f6b011c
  435856:	fbld   TBYTE PTR [ecx]
  435858:	aas    
  435859:	pop    ebp
  43585a:	jmp    0x4357df
  43585c:	mov    esp,0xff29d3cd
  435861:	or     edx,DWORD PTR [ebx]
  435863:	mov    ch,BYTE PTR [esi+edx*1+0x7bd95abb]
  43586a:	retf   
  43586b:	and    ch,dh
  43586d:	call   0x70bca75e
  435872:	loope  0x435819
  435874:	enter  0xf365,0xc0
  435878:	push   eax
  435879:	call   0xe771:0xae1f7be4
  435880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435881:	cli    
  435882:	or     bl,BYTE PTR [edi+edx*1-0x3e]
  435886:	cwde   
  435887:	mov    ah,0xc
  435889:	push   ss
  43588a:	not    BYTE PTR [ecx-0x5b27fc1d]
  435890:	dec    esp
  435891:	aad    0xb2
  435893:	xor    bl,BYTE PTR [eax]
  435895:	leave  
  435896:	add    BYTE PTR [ecx+eiz*4-0x2f294555],bh
  43589d:	push   es
  43589e:	gs sbb al,0xea
  4358a1:	or     bl,cl
  4358a3:	add    esp,eax
  4358a5:	sub    DWORD PTR [edx+0x48],ebp
  4358a8:	adc    ch,ah
  4358aa:	mov    edi,0x36835afe
  4358af:	mov    ds:0xe6fdfae2,al
  4358b4:	sub    al,0xf0
  4358b6:	in     eax,dx
  4358b7:	data16 jle 0x435899
  4358ba:	jl     0x4358ad
  4358bc:	scas   eax,DWORD PTR es:[edi]
  4358bd:	icebp  
  4358be:	pushf  
  4358bf:	and    BYTE PTR ds:0x51928c3,bh
  4358c5:	mov    eax,0xa6446f3b
  4358ca:	jns    0x43592f
  4358cc:	add    eax,0xa625558c
  4358d1:	push   0xa2dfe888
  4358d6:	jbe    0x435946
  4358d8:	mov    dl,0x92
  4358da:	xor    al,0x92
  4358dc:	bound  eax,QWORD PTR [edi-0x7dd741a9]
  4358e2:	ss sbb eax,0x6e180d78
  4358e8:	hlt    
  4358e9:	aad    0x64
  4358eb:	adc    DWORD PTR [ebp+0x25],edx
  4358ee:	and    eax,0x167e7cf7
  4358f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4358f4:	nop
  4358f5:	jp     0x435937
  4358f7:	xor    ebx,0xffffff9e
  4358fa:	sar    dl,cl
  4358fc:	mov    WORD PTR [ebx+0x7d],?
  4358ff:	jns    0x435894
  435901:	inc    ebp
  435902:	mov    ds:0x4992a1f8,eax
  435907:	(bad)  
  435908:	or     al,0x20
  43590a:	cmp    al,0xbc
  43590c:	xchg   edi,eax
  43590d:	xchg   esp,eax
  43590e:	sbb    edx,DWORD PTR [ebx+edx*4+0x66b02834]
  435915:	or     BYTE PTR [esi+0x10],bh
  435918:	iret   
  435919:	fwait
  43591a:	scas   al,BYTE PTR es:[edi]
  43591b:	lods   al,BYTE PTR ds:[esi]
  43591c:	push   esi
  43591d:	push   edi
  43591e:	pop    ebp
  43591f:	jb     0x4358c5
  435921:	iret   
  435922:	es adc cl,cl
  435925:	mov    eax,0x571c9667
  43592a:	xor    edx,DWORD PTR [eax+0x41]
  43592d:	xor    edx,DWORD PTR [edi+0x41]
  435930:	scas   al,BYTE PTR es:[edi]
  435931:	out    dx,eax
  435932:	call   0x4ae7:0xf84ef9ce
  435939:	jb     0x435924
  43593b:	or     eax,0xe7583832
  435940:	mov    eax,0xfb16ad9f
  435945:	xchg   esi,eax
  435946:	mov    bh,0xad
  435948:	xchg   BYTE PTR [ecx-0x42],ch
  43594b:	cwde   
  43594c:	adc    ecx,DWORD PTR [esi-0x8]
  43594f:	into   
  435950:	scas   eax,DWORD PTR es:[edi]
  435951:	cmp    DWORD PTR [esi+0x75dcb49a],ecx
  435957:	mov    edi,0x47f36d8f
  43595c:	ins    BYTE PTR es:[edi],dx
  43595d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43595e:	or     cl,ch
  435960:	mov    al,0x81
  435962:	or     bl,BYTE PTR [esi+0x8ada9bf]
  435968:	pop    ds
  435969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43596a:	pop    esi
  43596b:	in     al,dx
  43596c:	jge    0x435994
  43596e:	into   
  43596f:	xor    BYTE PTR [ebx+esi*8],0x3a
  435973:	dec    BYTE PTR [esi-0x694dbe1f]
  435979:	sbb    DWORD PTR [esi-0x4f],eax
  43597c:	push   0xce16f3d5
  435981:	sub    al,0x9b
  435983:	xor    ch,0x5e
  435986:	(bad)  
  435988:	and    BYTE PTR [edi+0x53ede0],cl
  43598e:	sbb    eax,0x26330a66
  435993:	cdq    
  435994:	mov    bh,0x92
  435996:	mov    ecx,0xfde9f233
  43599b:	outs   dx,DWORD PTR ds:[esi]
  43599c:	or     al,0x7a
  43599e:	and    eax,esp
  4359a0:	aaa    
  4359a1:	mov    BYTE PTR [ebx],dh
  4359a3:	stos   DWORD PTR es:[edi],eax
  4359a4:	je     0x4359e9
  4359a6:	mov    esp,0x5d66e2cf
  4359ab:	inc    edi
  4359ac:	cmp    DWORD PTR [edi+eiz*2+0xdbaaf2a],esi
  4359b3:	mov    eax,0xd81183c
  4359b8:	aad    0x98
  4359ba:	mov    ecx,0x7336d845
  4359bf:	inc    eax
  4359c0:	xchg   esp,eax
  4359c1:	pusha  
  4359c2:	sbb    BYTE PTR ds:0x7ff5ce24,dh
  4359c8:	add    bl,BYTE PTR ds:0xac505134
  4359ce:	int3   
  4359cf:	cdq    
  4359d0:	in     eax,dx
  4359d1:	pop    esp
  4359d2:	lock push ss
  4359d4:	cmp    al,0x86
  4359d6:	dec    esp
  4359d7:	cmp    dh,al
  4359d9:	pop    edi
  4359da:	dec    edi
  4359db:	in     eax,dx
  4359dc:	adc    dh,ah
  4359de:	(bad)  
  4359df:	scas   eax,DWORD PTR es:[edi]
  4359e0:	pop    ds
  4359e1:	ret    
  4359e2:	push   ds
  4359e3:	mov    WORD PTR ds:0x98fb229b,cs
  4359e9:	push   ecx
  4359ea:	adc    bh,BYTE PTR [ebx-0x5c]
  4359ed:	idiv   DWORD PTR [eax+0x16]
  4359f0:	adc    edi,DWORD PTR [edx+0x4c]
  4359f3:	dec    ebp
  4359f4:	jmp    0x1ca4:0x2f3ae646
  4359fb:	cdq    
  4359fc:	rcr    BYTE PTR [ebx-0x5074f595],0xc3
  435a03:	jo     0x435a2f
  435a05:	dec    ecx
  435a06:	pop    edx
  435a07:	std    
  435a08:	xor    ah,ch
  435a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435a0b:	pop    ds
  435a0c:	sub    ebp,DWORD PTR [edx-0x6f]
  435a0f:	and    DWORD PTR [ecx+eax*4+0x3a],0x73
  435a14:	in     al,0xd9
  435a16:	retf   0xcac2
  435a19:	cdq    
  435a1a:	sub    ecx,DWORD PTR [edx]
  435a1c:	data16 mov gs,WORD PTR [edx+0x7d]
  435a20:	xchg   ebp,eax
  435a21:	dec    ecx
  435a22:	xchg   edi,eax
  435a23:	inc    eax
  435a24:	fsub   QWORD PTR [esi+0x10]
  435a27:	inc    eax
  435a28:	and    eax,0x3bb585c4
  435a2d:	push   es
  435a2e:	dec    ebx
  435a2f:	inc    edi
  435a30:	add    eax,0xd369e8cc
  435a35:	xchg   edi,eax
  435a36:	je     0x4359ba
  435a38:	mov    sp,WORD PTR [edi+0x66517e7]
  435a3f:	js     0x435a52
  435a41:	or     ebx,DWORD PTR ds:0x45c38304
  435a47:	push   ebx
  435a48:	pop    edx
  435a49:	hlt    
  435a4a:	ret    
  435a4b:	popf   
  435a4c:	jge    0x435ac0
  435a4e:	call   0x31d047da
  435a53:	push   es
  435a54:	adc    DWORD PTR [eax],edi
  435a56:	adc    eax,0x590c196c
  435a5b:	push   edi
  435a5c:	in     eax,0xf6
  435a5e:	lahf   
  435a5f:	(bad)  
  435a60:	mov    eax,ds:0x613e19d6
  435a65:	xchg   BYTE PTR ds:0x178d0d93,bl
  435a6b:	stos   BYTE PTR es:[edi],al
  435a6c:	push   esi
  435a6d:	mov    ebp,DWORD PTR ds:0x6c4e9ba4
  435a73:	mov    al,ds:0xe5eecfc6
  435a78:	pop    ebp
  435a79:	shr    ebp,cl
  435a7b:	scas   eax,DWORD PTR es:[edi]
  435a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a7d:	lods   eax,DWORD PTR ds:[esi]
  435a7e:	mov    ch,0xcd
  435a80:	inc    ebp
  435a81:	fisubr WORD PTR [ecx-0x6d]
  435a84:	and    edi,DWORD PTR [ebx-0x4e8da503]
  435a8a:	fs jbe 0x435ac2
  435a8d:	xor    esi,DWORD PTR [ebx+0x1b]
  435a90:	(bad)  
  435a91:	lock jmp 0x435a3c
  435a94:	in     eax,0xc6
  435a96:	and    BYTE PTR [ebp+0x15],cl
  435a99:	ret    0x9c69
  435a9c:	fisub  DWORD PTR [edi-0xc]
  435a9f:	push   edi
  435aa0:	dec    ebx
  435aa1:	pop    edx
  435aa2:	inc    edx
  435aa3:	inc    ebp
  435aa4:	cdq    
  435aa5:	cmc    
  435aa6:	push   cs
  435aa7:	lds    esi,FWORD PTR [esi+ebx*2-0x1d700271]
  435aae:	outs   dx,DWORD PTR ds:[esi]
  435aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435ab0:	adc    ecx,edx
  435ab2:	cmp    esi,DWORD PTR [ebx]
  435ab4:	in     eax,0x9a
  435ab6:	(bad)  
  435ab7:	add    eax,DWORD PTR [edx-0x21]
  435aba:	cdq    
  435abb:	mov    ds:0x175bee77,al
  435ac0:	iret   
  435ac1:	dec    edx
  435ac2:	stc    
  435ac3:	out    dx,al
  435ac4:	adc    eax,DWORD PTR [ecx+eax*1+0x72c30c87]
  435acb:	mov    edx,0x59d7f9ad
  435ad0:	jo     0x435b33
  435ad2:	pop    edi
  435ad3:	xor    edx,DWORD PTR [ebp-0x71]
  435ad6:	fild   QWORD PTR [ebx+edx*1]
  435ad9:	sub    ah,cl
  435adb:	stos   BYTE PTR es:[edi],al
  435adc:	inc    eax
  435add:	addr16 pop ebp
  435adf:	lock inc DWORD PTR [edi+esi*1-0x506a0b77]
  435ae7:	fadd   QWORD PTR [esp+edx*1-0x3079edbd]
  435aee:	fdiv   QWORD PTR [ebx+edx*4]
  435af1:	retf   
  435af2:	popf   
  435af3:	push   eax
  435af4:	cmp    DWORD PTR [edx+0x18],edi
  435af7:	jno    0x435af0
  435af9:	mov    eax,ds:0x8573f06d
  435afe:	es stc 
  435b00:	and    DWORD PTR [esi+0x518eb9ed],edi
  435b06:	imul   esi,ecx,0x57
  435b09:	mov    ah,0x52
  435b0b:	push   ecx
  435b0c:	rep outs dx,DWORD PTR ds:[esi]
  435b0e:	addr16 (bad) 
  435b10:	jge    0x435b4b
  435b12:	(bad)  
  435b13:	call   0x4438:0x9a0cfbbe
  435b1a:	retf   0xba03
  435b1d:	mov    al,ds:0x22a04836
  435b22:	dec    ebp
  435b23:	test   eax,0xee8111ea
  435b28:	loop   0x435abd
  435b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435b2b:	xor    eax,edi
  435b2d:	jns    0x435b6e
  435b2f:	push   esp
  435b30:	sub    edi,ecx
  435b32:	mov    edx,0x15e2c004
  435b37:	push   eax
  435b38:	and    al,0x9
  435b3a:	test   eax,0x49eb6a13
  435b3f:	ins    DWORD PTR es:[edi],dx
  435b40:	xor    BYTE PTR [edi],ah
  435b42:	inc    edx
  435b43:	mov    edi,0xde6af93e
  435b48:	inc    esi
  435b49:	or     bh,BYTE PTR [eax-0x4ee018]
  435b4f:	or     DWORD PTR [edx],edi
  435b51:	sbb    BYTE PTR [edx],ch
  435b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b54:	out    0x9e,eax
  435b56:	or     DWORD PTR [eax+0x35d97021],0x1d69807b
  435b60:	sti    
  435b61:	in     eax,0xbc
  435b63:	repz fisub WORD PTR [ebp+edi*1-0x756dd058]
  435b6b:	mov    esi,0xb2e40afe
  435b70:	dec    edx
  435b71:	ds cmc 
  435b73:	retf   0x4c16
  435b76:	mov    esp,0x7264a490
  435b7b:	js     0x435be6
  435b7d:	dec    ebx
  435b7e:	in     eax,dx
  435b7f:	daa    
  435b80:	jo     0x435b1b
  435b82:	fld    QWORD PTR [edi+esi*2-0x12]
  435b86:	cli    
  435b87:	push   cs
  435b88:	ins    BYTE PTR es:[edi],dx
  435b89:	enter  0xa49f,0xa0
  435b8d:	and    DWORD PTR [ebx-0x6cbc1e29],esp
  435b93:	cmp    DWORD PTR [ebx],edi
  435b95:	and    BYTE PTR [ecx+0x44170b3e],bl
  435b9b:	push   es
  435b9c:	into   
  435b9d:	mov    BYTE PTR [ebx-0x46],ah
  435ba0:	aaa    
  435ba1:	int    0x85
  435ba3:	outs   dx,BYTE PTR ds:[esi]
  435ba4:	add    eax,0xd86a155e
  435ba9:	es iret 
  435bab:	mov    ds:0x58a9835a,eax
  435bb0:	pop    ecx
  435bb1:	sub    DWORD PTR [ecx+0x1586cf94],ecx
  435bb7:	out    0x64,eax
  435bb9:	add    esp,DWORD PTR [edi-0x5ade54ea]
  435bbf:	cs call 0x7994:0xd2bcc49b
  435bc7:	fisub  WORD PTR [ebp+0x66b2f19a]
  435bcd:	xor    esi,esi
  435bcf:	pop    ebp
  435bd0:	test   al,0x1b
  435bd2:	xor    bh,ah
  435bd4:	aam    0xa0
  435bd6:	or     DWORD PTR [edx+0x35accaa4],esi
  435bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435bdd:	sbb    BYTE PTR [ebp+0x13c1cfa4],cl
  435be3:	jle    0x435c07
  435be5:	pop    edi
  435be6:	cmp    al,BYTE PTR [ebx-0x1cf01a6e]
  435bec:	mov    ch,0x8e
  435bee:	xor    BYTE PTR [eax+0x2fb72171],0xfe
  435bf5:	or     ch,BYTE PTR [ebx+0x6c6b49ce]
  435bfb:	out    0x48,eax
  435bfd:	sub    ebp,DWORD PTR [ebp+0x6328c826]
  435c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c04:	rol    eax,cl
  435c06:	ret    
  435c07:	cmc    
  435c08:	xor    DWORD PTR [ebx-0xb],edi
  435c0b:	and    BYTE PTR [edi-0x15],dh
  435c0e:	loop   0x435ba9
  435c10:	adc    eax,DWORD PTR [ecx+0x7417b36d]
  435c16:	sub    bh,BYTE PTR [ecx+ecx*2-0x5cb23671]
  435c1d:	xor    DWORD PTR [ebx+0xc],ecx
  435c20:	xchg   edi,eax
  435c21:	fistp  WORD PTR [esi-0x78]
  435c24:	jo     0x435c9f
  435c26:	pop    ss
  435c27:	dec    ebp
  435c28:	jecxz  0x435c03
  435c2a:	pusha  
  435c2b:	pop    es
  435c2c:	mov    ds:0x98d04f8f,al
  435c31:	mov    DWORD PTR [esi],esi
  435c33:	les    ebp,FWORD PTR [ebx]
  435c35:	cmp    eax,0x1df59cbf
  435c3a:	(bad)  
  435c3b:	mov    ch,0x4b
  435c3d:	clc    
  435c3e:	inc    ecx
  435c3f:	lods   al,BYTE PTR ds:[esi]
  435c40:	inc    esp
  435c41:	arpl   WORD PTR [ebp-0x25],di
  435c44:	xchg   edi,eax
  435c45:	(bad)  
  435c46:	aam    0xcf
  435c48:	and    BYTE PTR [eax-0x55bb53d4],ch
  435c4e:	jmp    0x8ec9f69c
  435c53:	push   ds
  435c54:	(bad)  [edi+0x3e]
  435c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c58:	mov    ds:0x4a723ba3,al
  435c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c5e:	test   BYTE PTR [eax],dh
  435c60:	outs   dx,DWORD PTR ds:[esi]
  435c61:	loop   0x435c74
  435c63:	xor    BYTE PTR [ebx+0x6e46565f],0x11
  435c6a:	mov    edx,0x729688cf
  435c6f:	adc    BYTE PTR [edx+0x6363fb05],0xd2
  435c76:	push   esi
  435c77:	jmp    0x435c42
  435c79:	pop    ecx
  435c7a:	adc    ebx,DWORD PTR [edx-0x4f]
  435c7d:	mov    dh,0xb9
  435c7f:	mov    ds:0xa808b2fe,eax
  435c84:	and    ebp,DWORD PTR [edx+0x6c]
  435c87:	lods   al,BYTE PTR ds:[esi]
  435c88:	stos   DWORD PTR es:[edi],eax
  435c89:	adc    DWORD PTR [edi+0x33e2d7d7],edi
  435c8f:	lea    esp,es:[ebp-0x4b0524da]
  435c96:	(bad)  
  435c97:	out    dx,eax
  435c98:	mov    WORD PTR [edi],gs
  435c9a:	sti    
  435c9b:	loopne 0x435c43
  435c9d:	mov    bl,dl
  435c9f:	pop    ss
  435ca0:	pushf  
  435ca1:	xchg   BYTE PTR [ecx+0x5f],cl
  435ca4:	mov    dh,BYTE PTR [ebx-0x44745f32]
  435caa:	test   DWORD PTR [edi-0x4e],edi
  435cad:	out    0xe2,al
  435caf:	jge    0x435c47
  435cb1:	add    DWORD PTR [edx+0x2b],edi
  435cb4:	sub    al,BYTE PTR [ecx-0x12]
  435cb7:	dec    BYTE PTR [edi+0x47]
  435cba:	jg     0x435c83
  435cbc:	mov    ah,0xbb
  435cbe:	rep outs dx,DWORD PTR ds:[esi]
  435cc0:	jmp    0x553f5e71
  435cc5:	in     al,dx
  435cc6:	fimul  DWORD PTR [edx+0x5bae19b]
  435ccc:	pop    eax
  435ccd:	jno    0x435cfa
  435ccf:	and    ecx,DWORD PTR [edx+eiz*2-0x79e69d96]
  435cd6:	fwait
  435cd7:	push   edi
  435cd8:	push   0x7c6079da
  435cdd:	jg     0x435c6a
  435cdf:	in     eax,dx
  435ce0:	pop    eax
  435ce1:	addr16 retf 0xb47
  435ce5:	stos   DWORD PTR es:[edi],eax
  435ce6:	cmp    edi,edi
  435ce8:	pusha  
  435ce9:	lea    edi,[ebx]
  435ceb:	mov    ecx,0x9908a375
  435cf0:	mov    WORD PTR [edx-0x4377782f],es
  435cf6:	xor    ah,BYTE PTR [ebp+0x89c316c]
  435cfc:	out    dx,eax
  435cfd:	mov    DWORD PTR [eax+edx*8-0x68],edi
  435d01:	popa   
  435d02:	xchg   ecx,eax
  435d03:	fld    DWORD PTR cs:[eax+0x77]
  435d07:	fisubr DWORD PTR [edx+edi*1+0x55]
  435d0b:	test   al,0x77
  435d0d:	and    al,BYTE PTR [edx-0x76]
  435d10:	ficomp WORD PTR ds:0xd05e42b4
  435d16:	push   0x22
  435d18:	mov    al,ds:0x39b6113f
  435d1d:	sar    DWORD PTR [esi],0x7c
  435d20:	add    eax,0x8bf77879
  435d25:	int    0x69
  435d27:	in     eax,0xab
  435d29:	jmp    0x6fa5:0x4d6a9d38
  435d30:	(bad)  
  435d31:	cdq    
  435d32:	mov    edi,0x5d22d0c0
  435d37:	cmp    edx,esi
  435d39:	cmp    BYTE PTR [edi],0x2f
  435d3c:	adc    edx,esp
  435d3e:	mov    bh,0x9d
  435d40:	jno    0x435cf1
  435d42:	and    BYTE PTR [edx+0x12],cl
  435d45:	xor    ebp,DWORD PTR [edx+0x4d]
  435d48:	cli    
  435d49:	(bad)  
  435d4a:	jno    0x435dc4
  435d4c:	cli    
  435d4d:	and    edx,DWORD PTR [esi-0x33]
  435d50:	sub    DWORD PTR [ebp+0x6c],0xffffffe1
  435d54:	adc    eax,0x7d598067
  435d59:	cdq    
  435d5a:	jmp    0x435d67
  435d5c:	in     al,dx
  435d5d:	dec    esi
  435d5e:	jo     0x435dd1
  435d60:	and    eax,0x33398fa
  435d65:	dec    esp
  435d66:	out    0x43,eax
  435d68:	lds    esp,FWORD PTR [eax+eiz*1-0x2f]
  435d6c:	test   DWORD PTR [esi-0x4962c929],esp
  435d72:	fwait
  435d73:	in     al,0x22
  435d75:	imul   DWORD PTR [ebp+ebp*8-0x1c11a314]
  435d7c:	mov    ch,0x52
  435d7e:	add    eax,0x8b1f1711
  435d83:	sahf   
  435d84:	(bad)  
  435d85:	pop    ebp
  435d86:	xor    BYTE PTR [edi],ah
  435d88:	sbb    DWORD PTR [edx-0x66],ebp
  435d8b:	jg     0x435d3b
  435d8d:	retf   0xb4e8
  435d90:	mov    ds:0xddf5c73b,al
  435d95:	mov    edi,DWORD PTR [esi+eax*4]
  435d98:	mov    ah,0x33
  435d9a:	pop    edx
  435d9b:	xor    al,0xbd
  435d9d:	stos   DWORD PTR es:[edi],eax
  435d9e:	sbb    al,0xcc
  435da0:	aam    0x87
  435da2:	pusha  
  435da3:	mov    al,0x14
  435da5:	lods   al,BYTE PTR cs:[esi]
  435da7:	addr16 enter 0xf656,0x5a
  435dac:	mov    ah,0xda
  435dae:	lahf   
  435daf:	mov    al,0xb5
  435db1:	sbb    BYTE PTR [ebp+0xc0cee81],0x94
  435db8:	mov    bh,0x7b
  435dba:	rol    ebx,cl
  435dbc:	bswap  edi
  435dbe:	xchg   esi,eax
  435dc0:	jge    0x435d88
  435dc2:	pop    edx
  435dc3:	mov    bl,0x8c
  435dc5:	push   edi
  435dc7:	and    eax,0xe5611b51
  435dcc:	pop    esi
  435dcd:	xchg   ebp,eax
  435dce:	inc    ebp
  435dcf:	lods   eax,DWORD PTR ds:[esi]
  435dd0:	or     ebx,DWORD PTR [edi]
  435dd2:	mov    ds:0x778c9d85,al
  435dd7:	sub    DWORD PTR [ebx],ebx
  435dd9:	jge    0x435d77
  435ddb:	mov    ds:0x86b299d4,eax
  435de0:	push   0x25d95c9b
  435de5:	sbb    ebx,DWORD PTR [ebx]
  435de7:	push   eax
  435de8:	loop   0x435e53
  435dea:	or     DWORD PTR [ecx],ebx
  435dec:	or     eax,DWORD PTR [ebx-0x2e]
  435def:	lods   al,BYTE PTR ds:[esi]
  435df0:	iret   
  435df1:	cmp    DWORD PTR [edi+esi*4+0x1e],edi
  435df5:	fadd   st,st(2)
  435df7:	packsswb mm5,QWORD PTR [esp+edx*4]
  435dfb:	adc    al,BYTE PTR [edi+ebx*1+0x77]
  435dff:	fs mov ecx,0xad65ee94
  435e05:	push   eax
  435e06:	adc    ah,BYTE PTR [esi+0x2c]
  435e09:	je     0x435da6
  435e0b:	sbb    dl,bl
  435e0d:	gs cdq 
  435e0f:	leave  
  435e10:	mov    dl,0xe1
  435e12:	cmp    DWORD PTR [ebx+0x361fc38d],ebx
  435e18:	xor    DWORD PTR [edi+ebx*1],esp
  435e1b:	and    al,0x27
  435e1d:	hlt    
  435e1e:	add    bl,ah
  435e20:	add    DWORD PTR [esp+ebx*4],eax
  435e23:	ret    
  435e24:	gs xor al,0xf5
  435e27:	pushf  
  435e28:	dec    BYTE PTR [edi]
  435e2a:	aaa    
  435e2b:	cmp    BYTE PTR [edi],dl
  435e2d:	jge    0x435dff
  435e2f:	xor    DWORD PTR [edx],0xffffff95
  435e32:	mov    al,0x1a
  435e34:	pop    edi
  435e35:	or     BYTE PTR [edi+0x11],0x4d
  435e39:	pop    ss
  435e3a:	mov    esi,0x5d34a878
  435e3f:	mov    bh,0x6c
  435e41:	sbb    al,0x2b
  435e43:	xchg   esp,eax
  435e44:	daa    
  435e45:	iret   
  435e46:	test   BYTE PTR [ebp+0x2136c77d],dh
  435e4c:	add    al,0xc7
  435e4e:	into   
  435e4f:	int3   
  435e50:	mov    fs,WORD PTR [ebp-0x44793893]
  435e56:	adc    ecx,edi
  435e58:	fistp  QWORD PTR [edx+esi*1]
  435e5b:	cmp    bl,dh
  435e5d:	or     al,0xbb
  435e5f:	ds push 0x6e
  435e62:	push   0xbecedd52
  435e67:	jmp    0x26521f78
  435e6c:	adc    bh,ah
  435e6e:	push   edx
  435e6f:	xor    al,0x69
  435e71:	adc    eax,0xaa66a1fe
  435e76:	fistp  WORD PTR [ebx+0xdcef107]
  435e7c:	add    ecx,DWORD PTR [edi-0x3e]
  435e7f:	inc    ecx
  435e80:	xor    al,0x7a
  435e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e83:	jecxz  0x435e30
  435e85:	mov    ds:0x1917a639,al
  435e8a:	mov    ds:0x2b2b04a9,al
  435e8f:	fsub   QWORD PTR [esi-0x44c9e280]
  435e95:	inc    ebp
  435e96:	inc    esp
  435e97:	lea    ebp,[edx-0x364738e]
  435e9d:	cwd    
  435e9f:	jg     0x435e9a
  435ea1:	pop    ebx
  435ea2:	hlt    
  435ea3:	xchg   esi,eax
  435ea4:	xor    BYTE PTR ds:0x59f3d1ca,ch
  435eaa:	stc    
  435eab:	adc    eax,0x681f9807
  435eb0:	jle    0x435ecd
  435eb2:	int3   
  435eb3:	cli    
  435eb4:	lahf   
  435eb5:	aad    0xf9
  435eb7:	cmp    ebp,ecx
  435eb9:	ins    DWORD PTR es:[edi],dx
  435eba:	out    0xcf,al
  435ebc:	(bad)
  435ec0:	call   0x6cdb:0xbc237472
  435ec7:	xchg   DWORD PTR [eax-0x16],ebp
  435eca:	jmp    0x435f2f
  435ecc:	imul   ebx,eax,0x7b
  435ecf:	push   ecx
  435ed0:	mov    eax,ds:0x73ccf351
  435ed5:	and    DWORD PTR [ecx],ecx
  435ed7:	mov    esp,0x215aae6b
  435edc:	test   BYTE PTR es:[edx-0x3b],ah
  435ee0:	dec    esp
  435ee1:	pop    edx
  435ee2:	pop    ebp
  435ee3:	iret   
  435ee4:	xor    eax,0xc9dd9e86
  435ee9:	ror    DWORD PTR [edi+0x56],1
  435eec:	cdq    
  435eed:	pop    ds
  435eee:	mov    edx,0xaa8d4322
  435ef3:	(bad)  
  435ef4:	(bad)  
  435ef6:	sbb    BYTE PTR [esi+0x561b31a9],bl
  435efc:	adc    dl,BYTE PTR [ebp+0x62b73e69]
  435f02:	pop    ds
  435f03:	mov    ah,0x5e
  435f05:	rcr    ecx,0xc2
  435f08:	mov    dl,0x6b
  435f0a:	test   BYTE PTR [edi+ecx*8],0xba
  435f0e:	call   0x83e1f3f3
  435f13:	cwde   
  435f14:	jns    0x435f89
  435f16:	xchg   ecx,eax
  435f17:	mov    eax,ds:0x31d45664
  435f1c:	int    0x55
  435f1e:	in     eax,0x93
  435f20:	xchg   ebx,eax
  435f21:	mov    cl,0xff
  435f23:	or     al,0x25
  435f25:	fisub  DWORD PTR [ebx+0x8027d3c]
  435f2b:	or     BYTE PTR [ebx],dh
  435f2d:	daa    
  435f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f2f:	sub    ebp,DWORD PTR [eax+0x1f]
  435f32:	jecxz  0x435eca
  435f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f35:	mov    bl,0xc3
  435f37:	loope  0x435f11
  435f39:	leave  
  435f3a:	push   0xffffffc3
  435f3c:	adc    DWORD PTR [eax],edi
  435f3e:	inc    ecx
  435f3f:	stos   DWORD PTR es:[edi],eax
  435f40:	pop    esp
  435f41:	adc    BYTE PTR [ecx],ah
  435f43:	jp     0x435ef5
  435f45:	sub    bh,ah
  435f47:	dec    esp
  435f48:	push   cs
  435f49:	adc    ebx,edi
  435f4b:	mov    bl,0xed
  435f4d:	popa   
  435f4e:	push   0x4d159fef
  435f53:	and    eax,DWORD PTR [edx-0x5eafeca2]
  435f59:	(bad)  
  435f5a:	xchg   ecx,eax
  435f5b:	xor    al,0xbb
  435f5d:	push   ds
  435f5e:	inc    edx
  435f5f:	rcl    BYTE PTR [ebx],1
  435f61:	or     eax,0x817f82ec
  435f66:	mov    ah,0xaa
  435f68:	xor    ah,BYTE PTR [eax+0x7b4d76e9]
  435f6e:	in     eax,0xe3
  435f70:	bound  ecx,QWORD PTR [eax]
  435f72:	push   edi
  435f73:	push   0x28e47f1c
  435f78:	sahf   
  435f79:	jmp    0x8e71:0x753b7303
  435f80:	jno    0x435fe4
  435f82:	sbb    bh,BYTE PTR [edi-0xfd33da6]
  435f88:	push   ds
  435f89:	das    
  435f8a:	mov    dh,0xd7
  435f8c:	xor    edi,DWORD PTR [ebp+esi*2-0x647371ab]
  435f93:	jle    0x435fe3
  435f95:	xor    eax,0xa78b582d
  435f9a:	sbb    al,0x7b
  435f9c:	jae    0x435fc1
  435f9e:	pop    edx
  435f9f:	adc    al,0xd2
  435fa1:	ret    0xa4cc
  435fa4:	imul   edi,ecx,0x5f647b18
  435faa:	dec    edx
  435fab:	data16 das 
  435fad:	stos   DWORD PTR es:[edi],eax
  435fae:	cli    
  435faf:	mov    ecx,edx
  435fb1:	retf   
  435fb2:	pop    esp
  435fb3:	add    DWORD PTR [ebx+ecx*1+0x6bb904e6],ebp
  435fba:	cmp    ecx,DWORD PTR [edi-0x778e8bed]
  435fc0:	push   esi
  435fc1:	lods   al,BYTE PTR ds:[esi]
  435fc2:	and    eax,DWORD PTR [ebp-0x60]
  435fc5:	pop    esp
  435fc6:	and    BYTE PTR [edi+0x2cf5588],bh
  435fcc:	mov    al,0x13
  435fce:	fisubr DWORD PTR [ebx]
  435fd0:	popa   
  435fd1:	pop    ecx
  435fd2:	push   0xcae1a2a2
  435fd7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435fd9:	das    
  435fda:	sbb    bl,BYTE PTR [esi-0x40]
  435fdd:	int    0xa4
  435fdf:	and    cl,dh
  435fe1:	jle    0x435f8f
  435fe3:	jle    0x436050
  435fe5:	push   0x44
  435fe7:	in     eax,dx
  435fe8:	push   0xd018ef5
  435fed:	sub    al,0xe5
  435fef:	jnp    0x436013
  435ff1:	neg    DWORD PTR [esi-0x7409fbd9]
  435ff7:	add    eax,0x19c8c62e
  435ffc:	(bad)  
  435ffd:	sub    eax,0x9e3306bd
  436002:	ja     0x435fe0
  436004:	repnz (bad) 
  436006:	(bad)  
  436008:	stos   DWORD PTR es:[edi],eax
  436009:	not    dl
  43600b:	add    edi,esp
  43600d:	into   
  43600e:	xlat   BYTE PTR ds:[ebx]
  43600f:	mov    ds:0x27ce2ad3,al
  436014:	cmp    BYTE PTR [ecx+ebp*4+0x33d322f5],0xc8
  43601c:	cmp    BYTE PTR [ebx+0x7963de70],dh
  436022:	neg    bl
  436024:	fcom   DWORD PTR [esi-0x6a]
  436027:	mov    bh,0x2e
  436029:	mov    al,ds:0xd6c7823a
  43602e:	fldenv [edi-0x3d2de4b9]
  436034:	xor    BYTE PTR [ebp-0x4391163],al
  43603a:	jae    0x436036
  43603c:	pop    ds
  43603d:	mov    dh,0x65
  43603f:	cs lahf 
  436041:	test   eax,0xafdb9b17
  436046:	mov    edi,DWORD PTR [ebx]
  436048:	mov    bl,0x56
  43604a:	lock jle 0x436007
  43604d:	into   
  43604e:	push   cs
  43604f:	aas    
  436050:	sbb    al,0xd5
  436052:	fucomip st,st(5)
  436054:	jne    0x4360a0
  436056:	pop    edi
  436057:	cwde   
  436058:	mov    DWORD PTR [ebx-0x6e],ecx
  43605b:	jg     0x436085
  43605d:	(bad)  
  43605e:	sub    edi,DWORD PTR [eax-0x7c]
  436061:	aaa    
  436062:	mov    edx,0x397b9694
  436067:	push   0x50
  436069:	retf   0x45f9
  43606c:	out    dx,eax
  43606d:	jb     0x436024
  43606f:	cmp    DWORD PTR [esi+0x3b522d52],ecx
  436075:	lock push 0x5f4f21de
  43607b:	cmp    DWORD PTR [ebp-0x2a],esp
  43607e:	xor    eax,0x4db91913
  436083:	fs xor bh,BYTE PTR gs:[ebp+0x42]
  436088:	loope  0x4360a3
  43608a:	outs   dx,BYTE PTR ds:[esi]
  43608b:	xchg   DWORD PTR [esi-0x44],esi
  43608e:	leave  
  43608f:	lds    esi,FWORD PTR [ebx+0x53516447]
  436095:	xchg   esi,eax
  436096:	je     0x436034
  436098:	sub    al,0xd6
  43609a:	fstp   TBYTE PTR [ebp-0x21]
  43609d:	test   DWORD PTR fs:[edi+0x28],ebp
  4360a1:	jne    0x43608b
  4360a3:	sbb    ah,BYTE PTR [eax]
  4360a5:	je     0x4360d0
  4360a7:	and    BYTE PTR [eax-0x6a],0x2
  4360ab:	xchg   edx,eax
  4360ac:	xor    al,0xf6
  4360ae:	jno    0x436030
  4360b0:	push   ebx
  4360b1:	cs aas 
  4360b3:	and    eax,0xa0d8bd0
  4360b8:	ss xor bh,dl
  4360bb:	dec    esp
  4360bc:	push   eax
  4360bd:	and    dl,bl
  4360bf:	add    eax,0x9e82fea5
  4360c4:	int    0x88
  4360c6:	push   es
  4360c7:	inc    esi
  4360c8:	xchg   BYTE PTR [ebx+0x7d],ch
  4360cb:	push   cs
  4360cc:	mov    WORD PTR [ecx+0x5d],es
  4360cf:	adc    DWORD PTR [ebx+0x5f],0xffffffdf
  4360d3:	dec    ecx
  4360d4:	cmp    BYTE PTR [edi+ebp*1-0x13],cl
  4360d8:	jnp    0x4360c4
  4360da:	stos   BYTE PTR es:[edi],al
  4360db:	dec    ecx
  4360dc:	jno    0x436066
  4360de:	jmp    0x4360df
  4360e0:	scas   eax,DWORD PTR es:[edi]
  4360e1:	lods   al,BYTE PTR ds:[esi]
  4360e2:	sahf   
  4360e3:	xor    al,0xa4
  4360e5:	pop    ebp
  4360e6:	lods   eax,DWORD PTR ds:[esi]
  4360e7:	xor    al,0x5d
  4360e9:	retf   0xe4af
  4360ec:	fistp  WORD PTR [edx+ebp*1-0x11]
  4360f0:	loopne 0x436126
  4360f2:	dec    eax
  4360f3:	cdq    
  4360f4:	pop    ebp
  4360f5:	sub    ah,bl
  4360f7:	adc    eax,0xdc667f51
  4360fc:	sub    BYTE PTR [esi-0x77],ch
  4360ff:	jle    0x43612f
  436101:	in     al,dx
  436102:	sub    al,0x3e
  436104:	xor    ah,BYTE PTR [edx+0x6c]
  436107:	out    0x61,eax
  436109:	mov    esp,0x8f28aa43
  43610e:	inc    eax
  43610f:	test   DWORD PTR [ebp+0x45],0x5809838d
  436116:	je     0x43612e
  436118:	aad    0xe7
  43611a:	pushf  
  43611b:	xchg   DWORD PTR [edi+0x5d63b504],edi
  436121:	(bad)  
  436122:	scas   eax,DWORD PTR es:[edi]
  436123:	retf   
  436124:	inc    ebp
  436125:	aad    0x3
  436127:	dec    ebx
  436128:	cli    
  436129:	out    dx,al
  43612a:	outs   dx,BYTE PTR ds:[esi]
  43612b:	stos   BYTE PTR es:[edi],al
  43612c:	mov    ds:0xe3152f1,eax
  436131:	ret    0x9735
  436134:	sar    BYTE PTR [esi+eiz*2-0x1b69fdc8],1
  43613b:	or     DWORD PTR [ebx-0x70],eax
  43613e:	pop    ds
  43613f:	xlat   BYTE PTR ds:[ebx]
  436140:	xor    DWORD PTR [ebx-0x4e],ebp
  436143:	mov    al,BYTE PTR [esi+eax*4]
  436146:	call   0x6817661e
  43614b:	and    DWORD PTR ds:0x474818f8,ebx
  436151:	outs   dx,BYTE PTR ds:[esi]
  436152:	mov    ah,0x91
  436154:	pushf  
  436155:	aam    0xf3
  436157:	push   ebp
  436158:	cmp    eax,0x40a8c778
  43615d:	mul    BYTE PTR ds:0xf7e5d358
  436163:	xchg   ebx,eax
  436164:	mov    al,0xef
  436166:	stos   BYTE PTR es:[edi],al
  436167:	adc    al,0xee
  436169:	jg     0x4361e6
  43616b:	push   esi
  43616c:	push   edx
  43616d:	adc    ch,dh
  43616f:	pop    edx
  436170:	pop    ds
  436171:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  436173:	retf   
  436174:	ds sub al,0xfb
  436177:	(bad)  [ebx+0x7a]
  43617a:	adc    DWORD PTR [edi+0x64],edx
  43617d:	push   ebx
  43617e:	data16 mov WORD PTR [edx+0x6d823d30],cs
  436185:	ins    BYTE PTR es:[edi],dx
  436186:	jo     0x43615b
  436188:	arpl   WORD PTR [edx+0x61],dx
  43618b:	dec    ebp
  43618c:	jae    0x436124
  43618e:	jmp    0xed729f1a
  436193:	add    cl,cl
  436195:	jns    0x436122
  436197:	clc    
  436198:	adc    BYTE PTR [esi+0x52],cl
  43619b:	cmp    DWORD PTR [esi+ebp*8-0x27013c50],0xffffffd9
  4361a3:	retf   0xdc08
  4361a6:	inc    ebx
  4361a7:	jns    0x4361f9
  4361a9:	repz cmp esi,ecx
  4361ac:	dec    esp
  4361ad:	mov    edi,ds
  4361af:	push   ds
  4361b0:	mov    al,ds:0x74fc51e2
  4361b5:	in     al,0xda
  4361b7:	jnp    0x4361d2
  4361b9:	lea    ecx,[ebx+0x484fffc9]
  4361bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4361c0:	in     eax,dx
  4361c1:	lea    edx,[ebx]
  4361c3:	pop    edx
  4361c4:	xchg   edx,esp
  4361c6:	xor    DWORD PTR [edx],0xffffffbb
  4361c9:	sub    eax,0x50c1dcbd
  4361ce:	aam    0xbb
  4361d0:	mov    ebx,0x1b96a36a
  4361d5:	pop    ebx
  4361d6:	stos   DWORD PTR es:[edi],eax
  4361d7:	jle    0x43617e
  4361d9:	adc    DWORD PTR [esi-0x296f4205],edi
  4361df:	xchg   esp,eax
  4361e0:	loope  0x4361d3
  4361e2:	fwait
  4361e3:	push   0xffffffe6
  4361e5:	push   ebp
  4361e6:	jnp    0x436215
  4361e8:	push   edx
  4361e9:	jp     0x4361cd
  4361eb:	std    
  4361ec:	mov    esp,0xe47ad02d
  4361f1:	mov    al,BYTE PTR [ecx-0x3e]
  4361f4:	repnz repnz rcl BYTE PTR [ebp+0x5c],cl
  4361f9:	aaa    
  4361fa:	xchg   ebx,eax
  4361fb:	arpl   WORD PTR [esi],si
  4361fd:	mov    dl,BYTE PTR [edx]
  4361ff:	lods   al,BYTE PTR ds:[esi]
  436200:	sub    eax,DWORD PTR [eax+0x29]
  436203:	xor    eax,0xdacc436a
  436208:	aad    0x7d
  43620a:	ret    0x2d75
  43620d:	adc    ebp,DWORD PTR [ecx+0x4d]
  436210:	mov    bh,0xac
  436212:	mov    ch,0x23
  436214:	prefetch BYTE PTR [edi-0x1bd25139]
  43621b:	mov    eax,ds:0x4eebdcf0
  436220:	xor    eax,0xb1e2a321
  436226:	out    dx,eax
  436227:	cli    
  436228:	add    eax,0x5679aba6
  43622d:	jecxz  0x43622d
  43622f:	adc    al,0x2c
  436231:	shr    ah,cl
  436233:	jo     0x43624d
  436235:	popf   
  436236:	dec    ebp
  436237:	pop    edi
  436238:	cmp    dh,BYTE PTR [esi]
  43623a:	not    cx
  43623d:	push   cs
  43623e:	xor    eax,0x5134e510
  436243:	test   DWORD PTR [esi+esi*8+0x590e7547],edx
  43624a:	les    edx,FWORD PTR [ebp-0x4d]
  43624d:	xor    eax,0x4ad64904
  436252:	fimul  WORD PTR [ebx]
  436254:	sti    
  436255:	cmp    al,0x43
  436257:	je     0x436288
  436259:	mov    ecx,0x785c924a
  43625e:	mov    cl,BYTE PTR [eax]
  436260:	xchg   esi,eax
  436261:	xchg   edx,eax
  436262:	sbb    al,0xa6
  436264:	nop
  436265:	xlat   BYTE PTR ds:[ebx]
  436266:	inc    eax
  436267:	jb     0x4362e1
  436269:	retf   0x181d
  43626c:	sub    eax,0x73feb105
  436271:	push   cs
  436272:	mov    WORD PTR [esp+edx*1-0x5e],fs
  436276:	or     eax,0xc603925f
  43627b:	sbb    dl,BYTE PTR [ecx]
  43627d:	aaa    
  43627e:	xor    eax,0x550feabd
  436283:	outs   dx,DWORD PTR ds:[esi]
  436284:	das    
  436285:	daa    
  436286:	sbb    DWORD PTR [edx],ecx
  436288:	scas   eax,DWORD PTR es:[edi]
  436289:	cld    
  43628a:	mov    ebx,0xad4f6d3c
  43628f:	stc    
  436290:	hlt    
  436291:	je     0x4362e6
  436293:	pop    es
  436294:	push   ebx
  436295:	out    0xe6,al
  436297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436298:	fcom   DWORD PTR [ebx]
  43629a:	sahf   
  43629b:	stc    
  43629c:	dec    esp
  43629d:	paddd  mm4,QWORD PTR [edx]
  4362a0:	sbb    BYTE PTR [ecx-0x71],0xde
  4362a4:	aad    0x50
  4362a6:	pop    esi
  4362a7:	fnstsw WORD PTR [edx-0x3ac6001c]
  4362ad:	mov    dh,BYTE PTR [esi+0x58b425c3]
  4362b3:	xor    ebx,DWORD PTR gs:[esi]
  4362b6:	pop    ss
  4362b7:	mov    ah,0xc
  4362b9:	push   ebp
  4362ba:	mov    ch,0x13
  4362bc:	ds das 
  4362be:	rol    DWORD PTR [ebx+0x661551c0],1
  4362c4:	mov    bl,0x11
  4362c6:	das    
  4362c7:	fwait
  4362c8:	pop    ss
  4362c9:	aaa    
  4362ca:	xchg   ebp,eax
  4362cb:	sbb    ebx,DWORD PTR [ecx+0x70a0708d]
  4362d1:	cmp    BYTE PTR [edx],cl
  4362d3:	mov    bh,0x8f
  4362d5:	mov    es,WORD PTR [edi-0xcb3e5cd]
  4362db:	adc    DWORD PTR [ebx-0x75],ebp
  4362de:	push   ds
  4362df:	and    esi,DWORD PTR [eax-0x6df3bba2]
  4362e5:	cdq    
  4362e6:	dec    ebx
  4362e7:	scas   al,BYTE PTR es:[edi]
  4362e8:	xor    eax,0xe5f027d2
  4362ed:	rcl    BYTE PTR [esi+ebx*2-0x44],cl
  4362f1:	scas   eax,DWORD PTR es:[edi]
  4362f2:	pop    esi
  4362f3:	call   0x9ec26d3f
  4362f8:	push   ebx
  4362f9:	jmp    0xaf91:0x53d9fa1d
  436300:	popa   
  436301:	mov    al,0x23
  436303:	test   eax,0xf586c4c9
  436308:	push   esi
  436309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43630a:	add    BYTE PTR [eax+ebp*2-0x336785ef],bl
  436311:	sub    edi,esi
  436313:	or     esi,DWORD PTR [eax+0x67]
  436316:	sti    
  436317:	mov    ch,0x9e
  436319:	out    dx,al
  43631a:	dec    ebx
  43631b:	lock push cs
  43631d:	push   eax
  43631e:	test   edi,0xedcde0ae
  436324:	pusha  
  436325:	or     DWORD PTR [eax],0xb073927f
  43632b:	loope  0x436318
  43632d:	jp     0x436322
  43632f:	push   edi
  436330:	test   BYTE PTR [eax],ch
  436332:	dec    edx
  436333:	inc    edx
  436334:	repnz stc 
  436336:	sub    eax,0xf0d6e26d
  43633b:	mov    al,ds:0x619ceac7
  436340:	out    0xe3,al
  436342:	stos   BYTE PTR es:[edi],al
  436343:	pop    esi
  436344:	dec    ecx
  436345:	push   cs
  436346:	std    
  436347:	inc    ebp
  436348:	rcr    ebx,0x36
  43634b:	jmp    0x4363c1
  43634d:	lods   eax,DWORD PTR ds:[esi]
  43634e:	ins    DWORD PTR es:[edi],dx
  43634f:	xchg   BYTE PTR [eax-0x1b],cl
  436352:	sahf   
  436353:	cmp    DWORD PTR [edx-0x5],esp
  436356:	or     esp,DWORD PTR [eax+edi*8+0x45]
  43635a:	and    esi,DWORD PTR [ebx]
  43635c:	jne    0x436332
  43635e:	adc    al,0x7b
  436360:	in     al,0x73
  436362:	pusha  
  436363:	push   ebp
  436364:	dec    edx
  436365:	adc    ah,dh
  436367:	stc    
  436368:	enter  0x9e36,0x42
  43636c:	sbb    ch,BYTE PTR [ecx]
  43636e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43636f:	imul   BYTE PTR [edx-0x1e13c668]
  436375:	sub    eax,0x8b62ea8
  43637a:	aad    0xc1
  43637c:	pop    ss
  43637d:	push   ecx
  43637e:	cmp    DWORD PTR [eax],0x22
  436381:	out    dx,al
  436382:	stos   DWORD PTR es:[edi],eax
  436383:	inc    ebp
  436384:	mov    dh,0x40
  436386:	ror    BYTE PTR [eax-0x22b8c71],1
  43638c:	pop    ebx
  43638d:	add    al,0x1f
  43638f:	push   edx
  436390:	aaa    
  436391:	repz test ecx,ebx
  436394:	and    al,0x12
  436396:	dec    edx
  436397:	ins    DWORD PTR es:[edi],dx
  436398:	lods   al,BYTE PTR ds:[esi]
  436399:	mov    edi,eax
  43639b:	sti    
  43639c:	test   BYTE PTR [ecx],dl
  43639e:	lods   eax,DWORD PTR ds:[esi]
  43639f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363a0:	mov    DWORD PTR cs:[edi-0x65],edx
  4363a4:	pop    edx
  4363a5:	pop    ss
  4363a6:	xchg   esi,eax
  4363a7:	sub    ebx,DWORD PTR [ecx+0x3a]
  4363aa:	jne    0x4363e3
  4363ac:	pop    edi
  4363ad:	xchg   BYTE PTR [esi-0x3],dh
  4363b0:	in     eax,0x83
  4363b2:	pop    ss
  4363b3:	adc    al,0x9a
  4363b5:	inc    esp
  4363b6:	sbb    ch,bh
  4363b8:	sbb    esp,DWORD PTR [eax+0x6cac23c8]
  4363be:	(bad)  
  4363c0:	enter  0x7f61,0x2f
  4363c4:	leave  
  4363c5:	add    al,0x90
  4363c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4363c8:	out    0x74,al
  4363ca:	pop    ss
  4363cb:	jge    0x43639c
  4363cd:	call   FWORD PTR [ebx]
  4363cf:	(bad)  
  4363d1:	jle    0x43643e
  4363d3:	fwait
  4363d4:	push   cs
  4363d5:	in     al,0xff
  4363d7:	xchg   ecx,eax
  4363d8:	cmp    DWORD PTR [esi+0x2c7a63b0],0x17bcd1e6
  4363e2:	imul   esi,esp,0x4e
  4363e5:	adc    eax,0xa4bac582
  4363ea:	js     0x43639c
  4363ec:	adc    eax,0x2595bba3
  4363f1:	push   ecx
  4363f2:	into   
  4363f3:	jp     0x436428
  4363f5:	aad    0x3c
  4363f7:	loopne 0x436419
  4363f9:	enter  0x2225,0xde
  4363fd:	jbe    0x436410
  4363ff:	cmp    ebx,DWORD PTR ds:0xa3f966e9
  436405:	lea    esp,[ecx+0x29]
  436408:	adc    DWORD PTR [ebp+0x0],edx
  43640b:	mov    esp,0x6a570a5e
  436410:	jmp    FWORD PTR [ebx+0x57e3d9dc]
  436416:	mov    ebp,0x76d09074
  43641b:	jns    0x43648c
  43641d:	iret   
  43641e:	xor    BYTE PTR [edi+0x5e],bl
  436421:	cmp    ecx,ecx
  436423:	fnstenv [esi]
  436425:	xor    al,0x90
  436427:	cmp    eax,0x8c3edd2d
  43642c:	pusha  
  43642d:	cmp    eax,0x563fb4bd
  436432:	rol    DWORD PTR [edx-0x17aa5eab],0x78
  436439:	sub    ecx,ecx
  43643b:	cld    
  43643c:	sub    eax,0xf8967ece
  436441:	out    dx,al
  436442:	mov    ch,0xea
  436444:	mov    ah,0xd8
  436446:	fmul   DWORD PTR ds:0x7485568d
  43644c:	test   ebp,edx
  43644e:	or     al,0xf7
  436450:	gs jbe 0x4364ce
  436453:	fld    QWORD PTR [edx-0x7e]
  436456:	pop    edx
  436457:	test   DWORD PTR [edi-0x5555b529],esp
  43645d:	repnz mov DWORD PTR [ebp-0x49],esp
  436461:	fwait
  436462:	mov    al,ds:0xcc8da166
  436467:	push   ebx
  436468:	in     al,dx
  436469:	push   ebx
  43646a:	(bad)  
  43646c:	shr    DWORD PTR [edx],0xc7
  43646f:	imul   esi,esp,0xffffffdb
  436472:	imul   BYTE PTR [esp+eax*4-0x511d8b43]
  436479:	mov    gs,WORD PTR ds:[eax+0x63]
  43647d:	loope  0x4364b8
  43647f:	scas   eax,DWORD PTR es:[edi]
  436480:	fwait
  436481:	cdq    
  436482:	hlt    
  436483:	aaa    
  436484:	por    mm5,QWORD PTR [edi]
  436487:	xor    BYTE PTR [ebp-0x12],al
  43648a:	push   cs
  43648b:	pop    esp
  43648c:	fwait
  43648d:	jge    0x4364ce
  43648f:	xchg   edx,eax
  436490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436491:	mov    ss,WORD PTR [edi]
  436493:	div    DWORD PTR [esi-0x3f]
  436496:	xchg   edx,eax
  436497:	mov    edi,0xe4f887ae
  43649c:	mov    bl,0x46
  43649e:	xchg   ebx,eax
  43649f:	bound  ebp,QWORD PTR [esi+0x0]
  4364a2:	xor    eax,0xaba3e0c3
  4364a7:	jmp    0x5c0826c0
  4364ac:	loopne 0x436516
  4364ae:	cs out dx,eax
  4364b0:	xchg   BYTE PTR [edi],ch
  4364b2:	fldenv [ebp+eiz*1-0xd]
  4364b6:	xchg   ebx,eax
  4364b7:	int    0x1e
  4364b9:	jne    0x4364f6
  4364bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4364bc:	pop    es
  4364bd:	xor    al,0xa1
  4364bf:	test   DWORD PTR [eax-0x341cbc36],ebx
  4364c5:	aad    0xc0
  4364c7:	outs   dx,BYTE PTR ds:[esi]
  4364c8:	neg    BYTE PTR [ecx+0x65d6a9d0]
  4364ce:	jmp    0x436547
  4364d0:	adc    BYTE PTR ds:0xdafd5ba0,dh
  4364d6:	aas    
  4364d7:	ja     0x43645d
  4364d9:	and    dh,BYTE PTR [ebp+0x20]
  4364dc:	jge    0x4364d3
  4364de:	lock mov ds:0x1c07458e,eax
  4364e4:	push   eax
  4364e5:	out    dx,al
  4364e6:	inc    edi
  4364e7:	call   0xf81dcae0
  4364ec:	sar    DWORD PTR [esp+ecx*8+0x6e63bc50],0x67
  4364f4:	mov    cl,0xf1
  4364f6:	pop    ds
  4364f7:	cld    
  4364f8:	rol    DWORD PTR [esi+0x1a89d0c7],1
  4364fe:	pop    ebp
  4364ff:	and    eax,DWORD PTR [edx]
  436501:	pop    esp
  436502:	(bad)  [eax-0x796446f9]
  436508:	mov    ecx,0x8b191a9f
  43650d:	add    al,0x81
  43650f:	je     0x43649d
  436511:	stos   DWORD PTR es:[edi],eax
  436512:	mov    ss,esi
  436514:	and    BYTE PTR [edx],al
  436516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436517:	test   BYTE PTR ds:0x606bfbf9,al
  43651d:	xchg   esp,edx
  43651f:	dec    edx
  436520:	dec    esp
  436521:	xor    BYTE PTR [ecx-0x7a],0xf
  436525:	cwde   
  436526:	lock cs xor eax,0xca16c78b
  43652d:	pop    eax
  43652e:	push   ds
  43652f:	shl    cl,cl
  436531:	out    dx,eax
  436532:	sub    BYTE PTR [edx-0x5e],ah
  436535:	(bad)  
  436536:	dec    DWORD PTR [esi]
  436538:	into   
  436539:	ds into 
  43653b:	add    edi,ebp
  43653d:	fimul  WORD PTR [edx+0x2c]
  436540:	popa   
  436541:	lds    esi,FWORD PTR [eax-0x53]
  436544:	daa    
  436545:	gs popa 
  436547:	push   esp
  436548:	sub    ebp,DWORD PTR [ecx-0x29]
  43654b:	push   esp
  43654c:	cwde   
  43654d:	push   ss
  43654e:	sbb    DWORD PTR [edx-0x4b],ecx
  436551:	or     dh,0x70
  436554:	fucomi st,st(3)
  436556:	fwait
  436557:	mov    eax,ds:0x98c1a624
  43655c:	fcomp  DWORD PTR ds:0xd0989cb1
  436562:	ror    bl,1
  436564:	and    eax,0x15f8a412
  436569:	jecxz  0x4365a5
  43656b:	pop    esp
  43656c:	std    
  43656d:	add    al,0xf3
  43656f:	sub    ch,al
  436571:	dec    eax
  436572:	(bad)  
  436574:	data16 mov ds:0xba58837d,al
  43657a:	sbb    eax,0xe81c1fd2
  43657f:	mov    edi,0x56689bbe
  436584:	aad    0x78
  436586:	jg     0x4365cb
  436588:	not    BYTE PTR ds:0x198a65ad
  43658e:	repz and BYTE PTR [edi+0x673afac2],ah
  436595:	ins    DWORD PTR es:[edi],dx
  436596:	jp     0x436602
  436598:	jae    0x436542
  43659a:	mov    bl,0xdc
  43659c:	inc    ecx
  43659d:	add    bh,BYTE PTR [edi+ecx*2+0x58765295]
  4365a4:	sbb    ecx,DWORD PTR [edi+0x52294266]
  4365aa:	arpl   bx,bx
  4365ac:	cmp    eax,0x573a58fe
  4365b1:	shr    BYTE PTR [esi+0x109d4665],0xa8
  4365b8:	jecxz  0x4365ee
  4365ba:	and    dl,ah
  4365bc:	cwde   
  4365bd:	aam    0x9d
  4365bf:	enter  0x7f3d,0xf9
  4365c3:	and    ecx,DWORD PTR [ebx]
  4365c5:	test   al,0x3d
  4365c7:	or     eax,0x53ff96ab
  4365cc:	jecxz  0x436637
  4365ce:	pop    ss
  4365cf:	or     eax,0x6ce35647
  4365d4:	xor    al,0xb5
  4365d6:	lock xor esi,ebx
  4365d9:	xor    eax,DWORD PTR [ecx]
  4365db:	ret    
  4365dc:	xor    al,0x5b
  4365de:	frstor [esi-0xb0858d]
  4365e4:	xor    al,0x93
  4365e6:	cmp    DWORD PTR [esi-0x6c45644],0xffffffc1
  4365ed:	push   ss
  4365ee:	sbb    al,0xa
  4365f0:	xchg   ecx,ebx
  4365f2:	js     0x4365fb
  4365f4:	jge    0x436660
  4365f6:	or     al,0x4e
  4365f8:	sbb    al,0xda
  4365fa:	xchg   DWORD PTR [ebx-0x6b782245],esi
  436600:	into   
  436601:	jle    0x4365b1
  436603:	pop    esi
  436604:	mov    gs,ebx
  436606:	out    dx,eax
  436607:	add    al,0xd4
  436609:	cwde   
  43660a:	pop    ebp
  43660b:	ds push 0xffffff8b
  43660e:	xchg   esp,eax
  43660f:	and    ax,0x75cc
  436613:	lock mov ds:0x75c8326e,eax
  436619:	enter  0x4b77,0xb3
  43661d:	pop    ecx
  43661e:	outs   dx,BYTE PTR ds:[esi]
  43661f:	adc    eax,0x8aa7a5b3
  436624:	neg    BYTE PTR [esi]
  436626:	or     al,0x57
  436628:	ror    BYTE PTR [esi-0x49936395],0xa
  43662f:	les    ecx,FWORD PTR [ecx]
  436631:	inc    esi
  436632:	sti    
  436633:	loop   0x436608
  436635:	cmp    eax,0xb1471d65
  43663a:	(bad)
  43663f:	sbb    eax,0x6f95fb3a
  436644:	das    
  436645:	sbb    BYTE PTR [ebx+0x34],bl
  436648:	jmp    0x4365f8
  43664a:	push   cs
  43664b:	scas   eax,DWORD PTR es:[edi]
  43664c:	repnz xlat BYTE PTR ds:[ebx]
  43664e:	xchg   ebp,eax
  43664f:	ror    DWORD PTR [eax+0x5de6e47a],cl
  436655:	push   ss
  436656:	in     eax,0x65
  436658:	int    0x10
  43665a:	(bad)  
  43665b:	jmp    0xb3fc:0x3ceb7d41
  436662:	retf   
  436663:	mov    ebx,0xd4e1feda
  436668:	imul   ebp,ebp,0x528cd18d
  43666e:	rcl    esp,0x22
  436671:	push   0x26
  436673:	jbe    0x436611
  436675:	test   BYTE PTR [eax-0x5d7f5731],bl
  43667b:	loop   0x436606
  43667d:	sbb    al,BYTE PTR [ecx+0x172101d8]
  436683:	dec    ebx
  436684:	pop    eax
  436685:	mul    dl
  436687:	pop    es
  436688:	dec    esp
  436689:	and    ch,BYTE PTR [eax-0x79f44f60]
  43668f:	call   0xf7c4:0x65fe8b7b
  436696:	add    ch,BYTE PTR [edx-0x1d]
  436699:	dec    ebp
  43669a:	inc    esp
  43669b:	cmc    
  43669c:	or     BYTE PTR [ebp+0x5d],al
  43669f:	aad    0xb1
  4366a1:	xlat   BYTE PTR ds:[ebx]
  4366a2:	inc    esi
  4366a3:	dec    eax
  4366a4:	daa    
  4366a5:	mov    dl,0x8a
  4366a7:	repz mov cl,0x56
  4366aa:	mov    ah,0xbf
  4366ac:	(bad)  
  4366ad:	bound  edi,QWORD PTR [ebp+0x7ae8b929]
  4366b3:	fidivr DWORD PTR [ebp+0x19]
  4366b6:	push   esi
  4366b7:	ins    DWORD PTR es:[edi],dx
  4366b8:	repz loop 0x4366b8
  4366bb:	jae    0x436739
  4366bd:	inc    ebp
  4366be:	mov    eax,edx
  4366c0:	xor    dl,0xbb
  4366c3:	mov    edi,0xe7fc29ac
  4366c8:	es pop esp
  4366ca:	mov    dl,0x22
  4366cc:	jmp    0x333e:0x248c322d
  4366d3:	mov    dh,0xa4
  4366d5:	add    al,0x54
  4366d7:	cmc    
  4366d8:	pop    ebx
  4366d9:	inc    edx
  4366da:	jne    0x43669a
  4366dc:	mov    ecx,0xf43a9266
  4366e1:	iret   
  4366e2:	adc    DWORD PTR [ebx],edx
  4366e4:	mov    edx,0xc92091b2
  4366e9:	mov    ds:0x7c74b8dc,al
  4366ee:	and    al,0xe8
  4366f0:	sti    
  4366f1:	dec    edx
  4366f2:	pop    esp
  4366f3:	out    dx,al
  4366f4:	xor    esp,DWORD PTR gs:[edi-0x65]
  4366f8:	lahf   
  4366f9:	lods   al,BYTE PTR ds:[esi]
  4366fa:	jns    0x4366c2
  4366fc:	cwde   
  4366fd:	dec    edx
  4366fe:	pop    ecx
  4366ff:	(bad)  
  436700:	push   esi
  436701:	inc    edx
  436702:	mov    ah,0x88
  436704:	adc    eax,0xb8249e87
  436709:	ds mov dh,0xb5
  43670c:	gs xor eax,0x1e98d5b9
  436712:	jnp    0x4366bc
  436714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436715:	mov    edi,0x9a4bf432
  43671a:	jo     0x43669c
  43671c:	xor    bh,BYTE PTR [esi+0xa4a180f]
  436722:	dec    edx
  436723:	int3   
  436724:	repnz shl DWORD PTR [esi+0x468e0ee6],cl
  43672b:	test   ecx,edx
  43672d:	adc    ecx,eax
  43672f:	or     BYTE PTR [ebp+0x8],dl
  436732:	pop    ebp
  436733:	jmp    0xd3b2:0x904b7e73
  43673a:	lock push ecx
  43673c:	dec    esi
  43673d:	dec    edx
  43673e:	or     eax,0x46e1f610
  436743:	dec    ebx
  436744:	mov    cl,0x94
  436746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436747:	ss dec ebx
  436749:	jmp    0x944c7e55
  43674e:	sub    BYTE PTR [ecx+0x7d],0xb6
  436752:	(bad)  [edx+edi*2]
  436755:	dec    edi
  436756:	(bad)  
  436758:	and    BYTE PTR [eax+0x4e],ah
  43675b:	pop    ecx
  43675c:	outs   dx,DWORD PTR ds:[esi]
  43675d:	pop    ds
  43675e:	push   esi
  43675f:	xor    DWORD PTR [ebx-0x2dfdc66c],esp
  436765:	sbb    eax,0x5609380b
  43676a:	and    eax,0xed1e1bd8
  43676f:	pop    edx
  436770:	and    ebp,ebp
  436772:	scas   eax,DWORD PTR es:[edi]
  436773:	in     al,0x7
  436775:	call   0x969c1458
  43677a:	nop
  43677b:	xor    edi,esp
  43677d:	jo     0x43675b
  43677f:	adc    eax,0x8e9600bc
  436784:	call   0x6458:0xd5fda150
  43678b:	jb     0x436786
  43678d:	lahf   
  43678e:	mov    ecx,tr0
  436791:	sub    eax,0x1753a1c
  436796:	adc    bh,cl
  436798:	sub    edx,ebp
  43679a:	rcr    DWORD PTR [ecx],cl
  43679c:	(bad)  
  43679d:	ins    BYTE PTR es:[edi],dx
  43679e:	sbb    DWORD PTR [edx],esp
  4367a0:	mov    edx,0x59182f75
  4367a5:	xchg   esi,eax
  4367a6:	js     0x4367f1
  4367a8:	outs   dx,DWORD PTR ds:[esi]
  4367a9:	dec    ebx
  4367aa:	inc    esp
  4367ab:	pop    ss
  4367ac:	cdq    
  4367ad:	data16 jmp 0x4367ac
  4367b0:	xor    al,0xb4
  4367b2:	adc    BYTE PTR [edi],dl
  4367b4:	jns    0x4367e3
  4367b6:	mov    al,ds:0x25ce08fd
  4367bb:	jmp    0x188d9e88
  4367c0:	mov    bh,BYTE PTR [eax]
  4367c2:	test   al,0x97
  4367c4:	mov    ch,0x84
  4367c6:	scas   al,BYTE PTR es:[edi]
  4367c7:	(bad)  
  4367c8:	xor    edx,edi
  4367ca:	imul   ecx,DWORD PTR [eax-0x6c],0x35
  4367ce:	add    al,0x3e
  4367d0:	xor    edi,0x8
  4367d3:	cmp    al,BYTE PTR [ecx+0x7b]
  4367d6:	and    al,0x49
  4367d8:	jp     0x4367de
  4367da:	and    al,bl
  4367dc:	enter  0x8b75,0x44
  4367e0:	aaa    
  4367e1:	retf   
  4367e2:	leave  
  4367e3:	imul   esi,DWORD PTR [ecx+0x7a],0xe9af5ff1
  4367ea:	add    bh,BYTE PTR [eax-0x33589e23]
  4367f0:	jp     0x436786
  4367f2:	jo     0x436815
  4367f4:	xchg   DWORD PTR [ecx-0xe],ebp
  4367f7:	out    0x2b,eax
  4367f9:	add    al,0x6a
  4367fb:	sbb    eax,0x42c62e1d
  436800:	sbb    DWORD PTR [esp+edx*1-0x3d],ecx
  436804:	loopne 0x4367f3
  436806:	adc    eax,0x42a34657
  43680b:	jbe    0x436867
  43680d:	pushf  
  43680e:	iret   
  43680f:	jae    0x436847
  436811:	pop    eax
  436812:	ja     0x4367e7
  436814:	mov    ah,BYTE PTR [eax-0x26]
  436817:	lock or bl,BYTE PTR [edx]
  43681a:	sub    cl,BYTE PTR [eax-0x5e]
  43681d:	adc    esi,DWORD PTR [ebp+0x4225cf2f]
  436823:	ins    BYTE PTR es:[edi],dx
  436824:	(bad)  
  436825:	cwde   
  436826:	in     al,0x53
  436828:	push   esp
  436829:	cmp    esi,DWORD PTR [ebx+eiz*4]
  43682c:	mov    ebp,0xcb994f16
  436831:	cli    
  436832:	outs   dx,BYTE PTR ds:[esi]
  436833:	mov    ebp,0xcd0096e9
  436838:	pop    esi
  436839:	jle    0x436894
  43683b:	addr16 inc edi
  43683d:	push   eax
  43683e:	mov    eax,ds:0xf7e4318a
  436843:	mov    ebx,0xb3643184
  436848:	in     al,dx
  436849:	out    0x77,eax
  43684b:	pop    ebp
  43684c:	cmp    BYTE PTR [eax+edx*2-0x66],dl
  436850:	shr    DWORD PTR [edi-0x45],1
  436853:	pop    eax
  436854:	jge    0x4368b9
  436856:	mov    ds:0x61a306c,eax
  43685b:	fistp  QWORD PTR [ebp-0x2669b656]
  436861:	inc    edx
  436862:	xchg   edi,eax
  436863:	or     al,0xd5
  436865:	adc    eax,0x779c8fd4
  43686a:	jns    0x436859
  43686c:	addr16 (bad) 
  43686e:	into   
  43686f:	sub    al,0x61
  436871:	add    BYTE PTR [edx+0x34],0x9
  436875:	jecxz  0x4367fb
  436877:	add    BYTE PTR [eax-0x62066c8c],cl
  43687d:	es inc esi
  43687f:	aas    
  436880:	test   cl,cl
  436882:	add    eax,0xde60e201
  436887:	jp     0x4368a3
  436889:	jmp    0x606d:0xf701ccf8
  436890:	jmp    0x56d14a43
  436895:	or     BYTE PTR [edi+0x4f],dl
  436898:	add    eax,0x8e96584a
  43689d:	and    DWORD PTR [edi+eax*2+0x7e5bacc7],edi
  4368a4:	jmp    0x30e586fe
  4368a9:	dec    esi
  4368aa:	jge    0x4368a0
  4368ac:	(bad)  
  4368ad:	dec    esp
  4368ae:	or     al,0x6
  4368b0:	dec    ecx
  4368b1:	test   DWORD PTR [ecx+0xf35a4dd],ebp
  4368b7:	inc    edi
  4368b8:	mov    ecx,0x5a215a3d
  4368bd:	cmp    eax,0xdfff4266
  4368c2:	dec    ebp
  4368c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4368c4:	mov    ebp,0xd25cc25f
  4368c9:	inc    edi
  4368ca:	ins    DWORD PTR es:[edi],dx
  4368cb:	stos   BYTE PTR es:[edi],al
  4368cc:	out    0x11,al
  4368ce:	cmp    DWORD PTR [ebx+0x7d0ada32],0xffffffef
  4368d5:	xor    ah,cl
  4368d7:	jae    0x436913
  4368d9:	sbb    eax,0xd65db5ff
  4368de:	jge    0x436917
  4368e0:	push   eax
  4368e1:	test   DWORD PTR [edx+0x1e],esi
  4368e4:	les    esp,FWORD PTR [edx+0x503dcfd9]
  4368ea:	aas    
  4368eb:	mov    eax,0x80fd4ff3
  4368f0:	sbb    eax,0x61552554
  4368f5:	jmp    0x9118:0x964759f7
  4368fc:	shl    edi,cl
  4368fe:	repnz add eax,DWORD PTR [esp+ebx*4]
  436902:	sbb    BYTE PTR [ebx+edx*2+0x34],ah
  436906:	jle    0x4368d8
  436908:	outs   dx,BYTE PTR ds:[esi]
  436909:	mov    ?,WORD PTR [eax+0x4e]
  43690c:	jge    0x436971
  43690e:	icebp  
  43690f:	pusha  
  436910:	inc    eax
  436911:	int    0xc5
  436913:	xor    DWORD PTR [edi+0x50],edi
  436916:	mov    eax,0xcca62f6
  43691b:	into   
  43691c:	mov    ds:0xe347b859,eax
  436921:	inc    esi
  436922:	sbb    DWORD PTR [ecx+ecx*1],edx
  436925:	mov    ch,0x3c
  436927:	and    eax,0x2bc7a66a
  43692c:	aaa    
  43692d:	imul   edx,DWORD PTR [ecx+0x59],0x6c4d1649
  436934:	es inc esp
  436936:	mov    al,0x0
  436938:	test   BYTE PTR [edi+0x63],ah
  43693b:	cmp    eax,0x1587c66d
  436940:	ss push ss
  436942:	mov    BYTE PTR [ecx],al
  436944:	int3   
  436945:	cdq    
  436946:	mov    ch,0x71
  436948:	aas    
  436949:	mov    bh,0x3a
  43694b:	in     eax,0x15
  43694d:	push   esp
  43694e:	inc    edi
  43694f:	sbb    cl,BYTE PTR [ebx+0x497d8ff4]
  436955:	xchg   edx,eax
  436956:	out    0xcd,al
  436958:	adc    ecx,DWORD PTR [edi+ecx*8+0x22d8a132]
  43695f:	or     DWORD PTR [edx-0x18],ebx
  436962:	and    al,0xae
  436964:	test   eax,0xdf997466
  436969:	mov    cl,0xc4
  43696b:	push   esp
  43696c:	dec    esp
  43696d:	les    esp,FWORD PTR [ebp-0x26c3e3a9]
  436973:	dec    eax
  436974:	mov    ds:0x4d7bc246,al
  436979:	jl     0x436943
  43697b:	pop    edx
  43697c:	pusha  
  43697d:	test   DWORD PTR [edi+0x216c26c7],eax
  436983:	jns    0x4369c8
  436985:	push   esp
  436986:	mov    al,0xdc
  436988:	and    al,0xea
  43698a:	daa    
  43698b:	loop   0x436990
  43698d:	pop    ebp
  43698e:	outs   dx,DWORD PTR ds:[esi]
  43698f:	test   eax,0xaa72efcc
  436994:	je     0x4369f6
  436996:	xlat   BYTE PTR ds:[ebx]
  436997:	test   BYTE PTR [ebp-0x71],dl
  43699a:	cmp    BYTE PTR ds:0x7b70a8b5,bh
  4369a0:	jnp    0x43697d
  4369a2:	adc    DWORD PTR ds:[esi+0x3594aaf5],edx
  4369a9:	pop    esi
  4369aa:	ss xchg edi,eax
  4369ac:	cmp    ch,bh
  4369ae:	mov    edx,0x9a08b0bc
  4369b3:	das    
  4369b4:	or     dh,BYTE PTR [esi-0x64]
  4369b7:	mov    ebp,0xcc5055b9
  4369bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4369bd:	(bad)  
  4369be:	add    BYTE PTR [eax],al
  4369c0:	jmp    0x727df259
  4369c5:	test   eax,0xe4f42906
  4369ca:	push   eax
  4369cb:	mov    ebp,0x7cb7d91e
  4369d0:	push   ebx
  4369d1:	mov    ebp,0x58a8d710
  4369d6:	loopne 0x436a10
  4369d8:	mov    ds:0xa55cc31a,al
  4369dd:	jge    0x4369fb
  4369df:	ins    BYTE PTR es:[edi],dx
  4369e0:	bound  esi,QWORD PTR [edi]
  4369e2:	(bad)  
  4369e3:	adc    BYTE PTR [esi-0x78e70fca],bh
  4369e9:	mov    ds:0x293785f6,eax
  4369ee:	das    
  4369ef:	inc    edi
  4369f0:	loope  0x43698d
  4369f2:	loop   0x4369a6
  4369f4:	mov    ah,0xfb
  4369f6:	add    BYTE PTR [edx],0x57
  4369f9:	jae    0x4369e8
  4369fb:	jno    0x4369d0
  4369fd:	imul   edx,esi,0x705323af
  436a03:	out    0x9a,eax
  436a05:	fcom   QWORD PTR [ebp+0x2b1bbc24]
  436a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a0c:	arpl   ax,si
  436a0e:	aad    0x7e
  436a10:	rcr    DWORD PTR [edx-0x46],cl
  436a13:	in     eax,dx
  436a14:	repz mov dl,0x7
  436a17:	arpl   bx,sp
  436a19:	xchg   ecx,eax
  436a1a:	lea    edx,[edx+ebx*1-0x70780290]
  436a21:	sti    
  436a22:	or     esp,ecx
  436a24:	mov    dh,0x28
  436a26:	aas    
  436a27:	mov    ecx,0x86efb267
  436a2c:	ret    0x937b
  436a2f:	cmp    edi,DWORD PTR [eax+ebp*4-0x4ab8562]
  436a36:	mov    dl,0x11
  436a38:	and    esp,DWORD PTR [edi]
  436a3a:	loop   0x436aa5
  436a3c:	cmp    ebx,ebp
  436a3e:	outs   dx,DWORD PTR ds:[esi]
  436a3f:	pop    edi
  436a40:	inc    ebp
  436a41:	rcr    DWORD PTR [ebx-0x33],0xe
  436a45:	icebp  
  436a46:	js     0x436aaf
  436a48:	je     0x436a8b
  436a4a:	addr16 pop eax
  436a4c:	xchg   ebx,eax
  436a4d:	mov    bl,0xcb
  436a4f:	mov    ebx,0x608c44f4
  436a54:	inc    esp
  436a55:	push   0xffffff81
  436a57:	jo     0x436a54
  436a59:	pop    edx
  436a5a:	pop    edi
  436a5b:	mov    BYTE PTR [ecx],bl
  436a5d:	fndisi(8087 only) 
  436a5f:	ins    BYTE PTR es:[edi],dx
  436a60:	in     eax,dx
  436a61:	pop    ebx
  436a62:	fcomp  QWORD PTR [edx-0x747cd6c3]
  436a68:	xor    BYTE PTR [ebp-0x68],dh
  436a6b:	lods   al,BYTE PTR ds:[esi]
  436a6c:	retf   0x6fe2
  436a6f:	push   es
  436a70:	xor    cl,BYTE PTR [edx-0x408a59b3]
  436a76:	jae    0x436a46
  436a78:	push   0x49b1c6d0
  436a7d:	and    al,BYTE PTR [edi+0x6c]
  436a80:	push   0xffffff8b
  436a82:	jl     0x436a29
  436a84:	stc    
  436a85:	push   ebp
  436a86:	out    dx,eax
  436a87:	add    ch,BYTE PTR [ebp+0xab2741]
  436a8d:	sbb    esi,ebx
  436a8f:	hlt    
  436a90:	rol    DWORD PTR ds:[edi+0x66],0xad
  436a95:	mov    ah,0x37
  436a97:	inc    ebx
  436a98:	(bad)  [esi]
  436a9a:	cmp    DWORD PTR [edx+edx*2+0x1a],esp
  436a9e:	dec    esi
  436a9f:	aad    0xd2
  436aa1:	sbb    al,BYTE PTR gs:[ebx]
  436aa4:	sub    esp,ebp
  436aa6:	push   esi
  436aa7:	xchg   esp,esi
  436aa9:	mov    al,0xcd
  436aab:	pop    esi
  436aac:	cdq    
  436aad:	jmp    0x436ae3
  436aaf:	jl     0x436b03
  436ab1:	aas    
  436ab2:	and    eax,0x514e09c3
  436ab7:	pushf  
  436ab8:	int    0x40
  436aba:	test   BYTE PTR [edx+edx*8+0x35e1394a],ch
  436ac1:	std    
  436ac2:	ds pop esp
  436ac4:	stc    
  436ac5:	pop    edi
  436ac6:	xchg   ebx,eax
  436ac7:	into   
  436ac8:	cmp    esi,DWORD PTR [eax-0x42]
  436acb:	jg     0x436aa1
  436acd:	rcl    BYTE PTR [eax-0x24],cl
  436ad0:	xor    cl,cl
  436ad2:	push   edx
  436ad3:	pop    edx
  436ad4:	sub    dh,BYTE PTR [bp+di+0x45c9]
  436ad9:	loopne 0x436b45
  436adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436adc:	dec    esp
  436add:	and    eax,0x193c1e6c
  436ae2:	les    eax,FWORD PTR [edx+0x4c767ed2]
  436ae8:	out    0x56,al
  436aea:	dec    eax
  436aeb:	xlat   BYTE PTR ds:[ebx]
  436aec:	retf   
  436aed:	jmp    0x2116:0xc01d1ba7
  436af4:	mov    ah,0x93
  436af6:	cmp    BYTE PTR [ecx+0x46],cl
  436af9:	test   al,0xc7
  436afb:	fwait
  436afc:	sbb    al,0xda
  436afe:	sahf   
  436aff:	cmp    cl,ch
  436b01:	popf   
  436b02:	out    dx,al
  436b03:	jnp    0x436b1e
  436b05:	fucomp st(1)
  436b07:	or     eax,0x63afc4c7
  436b0c:	mov    esp,0x5926f0ae
  436b11:	je     0x436b43
  436b13:	xor    DWORD PTR [edx+0x7ea0ce90],esi
  436b19:	xchg   BYTE PTR [ebx+eax*1-0x63fe5e65],cl
  436b20:	pop    edi
  436b21:	stos   DWORD PTR es:[edi],eax
  436b22:	sub    BYTE PTR [ebx+0x78e79c26],0x46
  436b29:	fwait
  436b2a:	jg     0x436b39
  436b2c:	out    dx,al
  436b2d:	fdiv   DWORD PTR [ebx-0x3f]
  436b30:	inc    esp
  436b31:	inc    ebp
  436b32:	dec    edx
  436b33:	dec    edi
  436b34:	stc    
  436b35:	mov    ah,0xbe
  436b37:	sub    dh,bl
  436b39:	push   es
  436b3a:	std    
  436b3b:	cmp    esp,DWORD PTR [ebx]
  436b3d:	aam    0xa0
  436b3f:	(bad)  
  436b40:	ffreep st(5)
  436b42:	enter  0xdacb,0xe0
  436b46:	daa    
  436b47:	test   al,0x60
  436b49:	dec    ebp
  436b4a:	jge    0x436af1
  436b4c:	mov    al,ds:0xd644043b
  436b51:	gs out dx,eax
  436b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b54:	jg     0x436bd4
  436b56:	xchg   edx,eax
  436b57:	out    dx,al
  436b58:	sbb    eax,0x3e9e2c03
  436b5d:	cmp    ch,dl
  436b5f:	or     eax,0x2b098d35
  436b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436b65:	test   al,0xb7
  436b67:	mov    eax,ds:0xe7799f54
  436b6c:	daa    
  436b6d:	add    al,0x67
  436b6f:	fwait
  436b70:	out    dx,eax
  436b71:	imul   edx,DWORD PTR [ecx-0x7],0x69
  436b75:	js     0x436bc3
  436b77:	dec    esp
  436b78:	pop    ebx
  436b79:	or     ebp,DWORD PTR [edi-0x5988352e]
  436b7f:	(bad)  
  436b80:	mov    WORD PTR [edx],?
  436b82:	lea    esp,[edx+0x12]
  436b85:	into   
  436b86:	stos   BYTE PTR es:[edi],al
  436b87:	mov    BYTE PTR [esp+ecx*4],dl
  436b8a:	sahf   
  436b8b:	dec    edx
  436b8c:	std    
  436b8d:	repz add DWORD PTR [ebp-0xb],0x7be9af19
  436b95:	inc    esi
  436b96:	out    dx,eax
  436b97:	jno    0x436b8a
  436b99:	lods   al,BYTE PTR ds:[esi]
  436b9a:	ja     0x436b26
  436b9c:	sub    dh,BYTE PTR [ebp-0x12bb0870]
  436ba2:	sar    al,1
  436ba4:	(bad)  
  436ba5:	test   al,0x53
  436ba7:	dec    esp
  436ba8:	ss xor al,0xf6
  436bab:	xchg   ebp,eax
  436bac:	mov    edx,0xaf71e15b
  436bb1:	xchg   esp,eax
  436bb2:	dec    esi
  436bb3:	ds sbb dh,0x1e
  436bb7:	add    esp,DWORD PTR ss:[edi-0x7b7131dd]
  436bbe:	aam    0x3c
  436bc0:	push   ss
  436bc1:	adc    ebx,DWORD PTR [eax+0x18]
  436bc4:	mov    eax,0x77e1b060
  436bc9:	das    
  436bca:	mov    eax,0x45eea08f
  436bcf:	fisttp WORD PTR [esi+0x79458353]
  436bd5:	and    al,0xf6
  436bd7:	loop   0x436bc3
  436bd9:	enter  0xfda2,0x39
  436bdd:	test   eax,0x74c3ae5d
  436be2:	dec    ecx
  436be3:	and    esi,edi
  436be5:	xor    dh,BYTE PTR [eax+0x736c5356]
  436beb:	adc    esi,DWORD PTR ds:0x2876a571
  436bf1:	mul    DWORD PTR [ecx-0x3eb6b881]
  436bf7:	jns    0x436c3c
  436bf9:	mov    cl,0xe2
  436bfb:	sub    ebx,DWORD PTR [edi+esi*2]
  436bfe:	mov    ecx,0x7c867c1a
  436c03:	repnz outs dx,BYTE PTR ds:[esi]
  436c05:	xchg   esi,eax
  436c06:	jbe    0x436c10
  436c08:	(bad)  
  436c09:	jg     0x436bbe
  436c0b:	mov    DWORD PTR [ecx],eax
  436c0d:	mov    ecx,DWORD PTR [edi+ebp*1-0x14e34cfc]
  436c14:	mov    al,BYTE PTR [ebx+0x53]
  436c17:	push   ss
  436c18:	pop    es
  436c19:	mov    bl,0x53
  436c1b:	stc    
  436c1c:	stos   DWORD PTR es:[edi],eax
  436c1d:	(bad)  
  436c1e:	scas   eax,DWORD PTR es:[edi]
  436c1f:	imul   esi,DWORD PTR [edx],0xffffffed
  436c22:	sub    bh,dh
  436c24:	mov    edx,0xfdf83641
  436c29:	imul   ebx,edx,0xa81d9ff8
  436c2f:	fiadd  DWORD PTR [eax+0x6a]
  436c32:	fisttp WORD PTR [esi+0x54]
  436c35:	mov    WORD PTR [ecx-0x3c],?
  436c38:	adc    ch,BYTE PTR [esp+edx*4+0x2]
  436c3c:	cwde   
  436c3d:	daa    
  436c3e:	mov    eax,0x17521f10
  436c43:	pop    eax
  436c44:	mov    ebp,0xbe1a1cfc
  436c49:	cli    
  436c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c4b:	push   ds
  436c4c:	call   0x129fd299
  436c51:	fistp  WORD PTR [ecx-0x2b]
  436c54:	dec    ecx
  436c55:	jne    0x436c49
  436c57:	jnp    0x436cbb
  436c59:	jb     0x436ccb
  436c5b:	and    al,0x71
  436c5d:	stc    
  436c5e:	pop    eax
  436c5f:	mov    DWORD PTR [eax+0x6f],edi
  436c62:	and    BYTE PTR [edi+0x32],ch
  436c65:	pop    ebx
  436c66:	ror    BYTE PTR [eax-0x7a],cl
  436c69:	and    ecx,eax
  436c6b:	es or  eax,0x7683911e
  436c71:	mov    bl,0x45
  436c73:	jle    0x436c5f
  436c75:	push   ebx
  436c76:	xlat   BYTE PTR ds:[ebx]
  436c77:	pop    ecx
  436c78:	push   cs
  436c79:	mov    eax,ds:0x3a31a262
  436c7e:	and    al,0x45
  436c80:	ds dec edi
  436c82:	jmp    0x436c46
  436c84:	sub    esp,DWORD PTR [eax+0x66]
  436c87:	pop    ecx
  436c88:	lahf   
  436c89:	pop    ss
  436c8a:	or     DWORD PTR [ecx-0x6],esp
  436c8d:	xor    al,0x1a
  436c8f:	fwait
  436c90:	or     eax,DWORD PTR [eax-0x491b462d]
  436c96:	stos   BYTE PTR es:[edi],al
  436c97:	repnz inc edx
  436c99:	xchg   ebx,eax
  436c9a:	call   FWORD PTR [edi]
  436c9c:	sub    dh,BYTE PTR [edi-0x10656e7f]
  436ca2:	call   0xb880:0x34f81e4a
  436ca9:	jmp    0x5db132c9
  436cae:	mov    esp,DWORD PTR [ecx+0x49]
  436cb1:	cli    
  436cb2:	scas   eax,DWORD PTR es:[edi]
  436cb3:	sbb    al,0xfe
  436cb5:	adc    cl,0x26
  436cb8:	or     esp,esp
  436cba:	adc    DWORD PTR [ecx+0x6],ebp
  436cbd:	inc    esp
  436cbe:	and    eax,0xd42f8c20
  436cc3:	cmp    edx,DWORD PTR [esi*1-0x9a2d8a1]
  436cca:	mov    ecx,0xf144a5ee
  436ccf:	call   FWORD PTR [edx]
  436cd1:	mov    ch,0x7b
  436cd3:	fimul  WORD PTR [esp+ecx*1]
  436cd6:	cmp    DWORD PTR [edx],eax
  436cd8:	jae    0x436ce6
  436cda:	enter  0x117f,0xbc
  436cde:	pop    esi
  436cdf:	jns    0x436d1d
  436ce1:	pop    ebp
  436ce2:	mov    ebp,0x24aacd93
  436ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ce8:	inc    ecx
  436ce9:	dec    ebp
  436cea:	(bad)  
  436ceb:	cmp    cl,BYTE PTR [ecx+0x42896298]
  436cf1:	es jge 0x436cab
  436cf4:	popf   
  436cf5:	add    DWORD PTR [ebp+0x49],esi
  436cf8:	daa    
  436cf9:	mov    WORD PTR [ebp-0x72],fs
  436cfc:	add    eax,0x4b84fcc6
  436d01:	mov    WORD PTR [edi-0xf],gs
  436d04:	cmp    DWORD PTR [esi+0x229f7105],edi
  436d0a:	xor    al,0xe8
  436d0c:	popa   
  436d0d:	dec    edi
  436d0e:	sub    DWORD PTR [esi*2-0x363a9702],ecx
  436d15:	into   
  436d16:	sub    BYTE PTR [ecx-0x7a4cbbb0],dl
  436d1c:	ins    DWORD PTR es:[edi],dx
  436d1d:	lahf   
  436d1e:	push   edx
  436d1f:	dec    ebp
  436d20:	test   cl,cl
  436d22:	mov    esi,0xbef2ec5
  436d27:	xor    DWORD PTR [ebx+0x63],esp
  436d2a:	je     0x436cbb
  436d2c:	popa   
  436d2d:	or     ebx,edi
  436d2f:	repnz xor ecx,esi
  436d32:	call   0xf3525ab7
  436d37:	xlat   BYTE PTR ds:[ebx]
  436d38:	jbe    0x436d9d
  436d3a:	hlt    
  436d3b:	inc    ebx
  436d3c:	nop
  436d3d:	dec    edi
  436d3e:	cld    
  436d3f:	adc    ch,dh
  436d41:	cdq    
  436d42:	jno    0x436d21
  436d44:	fdivp  st(2),st
  436d46:	xchg   esi,eax
  436d47:	or     bl,bh
  436d49:	adc    eax,0xba842f65
  436d4e:	sub    eax,0xed35d7cc
  436d53:	cmp    edi,DWORD PTR [ebx]
  436d55:	lods   eax,DWORD PTR ds:[esi]
  436d56:	lahf   
  436d57:	lahf   
  436d58:	stos   DWORD PTR es:[edi],eax
  436d59:	test   BYTE PTR [ecx],0xf8
  436d5c:	adc    dh,BYTE PTR [esi]
  436d5e:	ret    
  436d5f:	inc    edx
  436d60:	imul   edi,DWORD PTR [eax],0xfef4e7ea
  436d66:	mov    ebx,0x81a0f40c
  436d6b:	outs   dx,DWORD PTR ds:[esi]
  436d6c:	fld    QWORD PTR [ebx-0x6e]
  436d6f:	mov    eax,ds:0x5d032f49
  436d74:	dec    esp
  436d75:	jg     0x436d0b
  436d77:	call   0xd401080b
  436d7c:	push   ss
  436d7d:	fucomi st,st(6)
  436d7f:	addr16 (bad) 
  436d82:	xchg   ebp,eax
  436d83:	mov    esi,0x22b3580e
  436d88:	iret   
  436d89:	add    al,0x30
  436d8b:	mov    al,0x77
  436d8d:	fld    DWORD PTR ds:0xa14503e1
  436d93:	(bad)  
  436d95:	lea    edx,[esi]
  436d97:	pop    eax
  436d98:	xor    ch,bh
  436d9a:	dec    edi
  436d9b:	leave  
  436d9c:	push   esi
  436d9d:	mov    ch,0x66
  436d9f:	fimul  WORD PTR [ecx+0x7b]
  436da2:	test   eax,0xb9f9b8f1
  436da7:	push   DWORD PTR [esp+edi*1]
  436daa:	adc    edx,DWORD PTR [eax-0x29]
  436dad:	lea    esp,[edx+0x52]
  436db0:	stc    
  436db1:	xor    DWORD PTR [ecx-0x6e92f4b5],ecx
  436db7:	arpl   WORD PTR [ecx+eax*4-0x58c7e8b],sp
  436dbe:	test   al,0xb2
  436dc0:	mov    cl,0x2e
  436dc2:	adc    DWORD PTR ds:0x56d3d382,edx
  436dc9:	stos   BYTE PTR es:[edi],al
  436dca:	mov    ds:0x4d4bd35b,eax
  436dcf:	xlat   BYTE PTR ds:[ebx]
  436dd0:	sbb    BYTE PTR [ecx-0x5],al
  436dd3:	fimul  DWORD PTR [esi]
  436dd5:	cli    
  436dd6:	rol    BYTE PTR [ebp-0x521fe6d2],0xb9
  436ddd:	lods   al,BYTE PTR ds:[esi]
  436dde:	dec    esi
  436ddf:	pusha  
  436de0:	dec    edx
  436de1:	inc    esi
  436de2:	xchg   BYTE PTR [ebx+0x13f50baf],bh
  436de8:	mov    esi,0x9742812d
  436ded:	fst    DWORD PTR [ecx]
  436def:	push   es
  436df0:	jecxz  0x436e43
  436df2:	jg     0x436d9a
  436df4:	sbb    eax,0xc7aa8d74
  436df9:	or     bh,BYTE PTR [ebx]
  436dfb:	(bad)  [esi+0x6a60370c]
  436e01:	xor    bh,BYTE PTR [eax-0x4c]
  436e04:	xor    BYTE PTR ds:0xc330,bl
  436e09:	add    bh,BYTE PTR [ebx]
  436e0b:	adc    ah,BYTE PTR [ecx+eax*1]
  436e0e:	push   0x27
  436e10:	adc    al,0x43
  436e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436e13:	pop    ecx
  436e14:	push   eax
  436e15:	popf   
  436e16:	outs   dx,BYTE PTR ds:[esi]
  436e17:	(bad)  
  436e19:	mov    edx,0x1f87960a
  436e1e:	mul    BYTE PTR [esi-0x7e]
  436e21:	push   esi
  436e22:	fiadd  DWORD PTR [ebx]
  436e24:	scas   eax,DWORD PTR es:[edi]
  436e25:	adc    al,BYTE PTR [edx]
  436e27:	sub    al,bl
  436e29:	pop    esp
  436e2a:	sub    ch,al
  436e2c:	mov    ebx,0xe2c27f1c
  436e31:	pop    eax
  436e32:	shl    BYTE PTR [esi+0x70],cl
  436e35:	push   ebx
  436e36:	ror    edi,0xdc
  436e39:	xchg   DWORD PTR [ebp+0x56],ebx
  436e3c:	repnz dec edi
  436e3e:	cmp    DWORD PTR [edi],edx
  436e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436e41:	retf   
  436e42:	xchg   edx,eax
  436e43:	xchg   esi,eax
  436e44:	cmp    eax,0xa8a1d018
  436e49:	and    edi,DWORD PTR [edx-0x5b91e9f]
  436e4f:	push   eax
  436e50:	int    0x26
  436e52:	jle    0x436ec6
  436e54:	dec    eax
  436e55:	jbe    0x436e4d
  436e57:	jecxz  0x436deb
  436e59:	xor    DWORD PTR [edx-0x4a],ebp
  436e5c:	inc    edi
  436e5d:	ss cmp al,0x6f
  436e60:	adc    eax,0x130e43db
  436e65:	mov    bh,0x1d
  436e67:	fistp  WORD PTR [ebx+0x2c68dc92]
  436e6d:	jns    0x436ec0
  436e6f:	shl    DWORD PTR [edx+ebp*1+0x38d325d],0x9d
  436e77:	mov    al,0x55
  436e79:	lea    ecx,[edx]
  436e7b:	mov    ah,0xf1
  436e7d:	cmp    ecx,ecx
  436e7f:	mov    dh,0x13
  436e81:	shl    ebp,cl
  436e83:	repz cdq 
  436e85:	mov    ds,WORD PTR [ebx-0x4]
  436e88:	adc    eax,0x88c24914
  436e8d:	cmp    al,0xa5
  436e8f:	adc    DWORD PTR [esi+0x1edb5dcd],ecx
  436e95:	aas    
  436e96:	test   al,0xfd
  436e98:	fistp  WORD PTR [edx-0x39b36359]
  436e9e:	out    dx,eax
  436e9f:	dec    edi
  436ea0:	clc    
  436ea1:	addr16 fdiv st(3),st
  436ea4:	sub    bh,dl
  436ea6:	sbb    DWORD PTR [eax],ecx
  436ea8:	or     ebx,0x24eac543
  436eae:	scas   al,BYTE PTR es:[edi]
  436eaf:	mov    WORD PTR ds:0x87cdb54a,ds
  436eb5:	and    bl,dh
  436eb7:	les    eax,FWORD PTR [esi+0x5f]
  436eba:	mov    esi,0xded20736
  436ebf:	xchg   edx,eax
  436ec0:	call   0x496fe283
  436ec5:	or     edi,esi
  436ec7:	sub    al,0xd8
  436ec9:	fs pushf 
  436ecb:	mov    ds:0x519ab5a4,eax
  436ed0:	ret    0x63ea
  436ed3:	inc    ebp
  436ed4:	push   ss
  436ed5:	xor    DWORD PTR [edx+0x2921e1e8],esi
  436edb:	int    0x83
  436edd:	cmp    esp,DWORD PTR [eax+eiz*4+0x5e140eee]
  436ee4:	sahf   
  436ee5:	xchg   edi,eax
  436ee6:	lea    edx,[eax+edi*4]
  436ee9:	cmp    al,0xf2
  436eeb:	repz mov dl,0x5e
  436eee:	sbb    eax,0x7ab4bde2
  436ef3:	loop   0x436f18
  436ef5:	mov    ebx,0xb371f81d
  436efa:	mov    cl,0x9d
  436efc:	enter  0x417e,0x29
  436f00:	lods   al,BYTE PTR ds:[esi]
  436f01:	push   0xffffffbc
  436f03:	push   esi
  436f04:	fldenv [ecx+0x784e2ab5]
  436f0a:	out    dx,al
  436f0b:	lock fcomp DWORD PTR [eax-0x5b798c31]
  436f12:	popa   
  436f13:	sub    eax,0x8976edc5
  436f18:	xor    DWORD PTR [eax+ebx*8],ecx
  436f1b:	fcmovb st,st(6)
  436f1d:	(bad)  
  436f1e:	mov    ebx,0x47174791
  436f23:	fs mov ebx,0x82807263
  436f29:	lods   al,BYTE PTR ds:[esi]
  436f2a:	fmul   DWORD PTR [ecx]
  436f2c:	popa   
  436f2d:	int    0x27
  436f2f:	sbb    ebp,edx
  436f31:	test   BYTE PTR [ecx-0x2e711bc7],bl
  436f37:	mov    ch,0x85
  436f39:	push   ss
  436f3a:	ret    0x809d
  436f3d:	mov    edi,0x22600274
  436f42:	mov    al,ds:0x25e86944
  436f47:	pop    edx
  436f48:	fdivr  st,st(6)
  436f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436f4c:	jmp    0x436f81
  436f4e:	mov    edi,0xab1f6317
  436f53:	lds    esp,FWORD PTR [ebx-0x59d2ce4e]
  436f59:	imul   ebx,DWORD PTR [ebp*1-0x3bd4fb5],0x5c
  436f61:	cld    
  436f62:	pushf  
  436f63:	dec    ebp
  436f64:	adc    al,0x3f
  436f66:	hlt    
  436f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436f68:	jo     0x436f12
  436f6a:	into   
  436f6b:	sar    BYTE PTR [ebp+0x27],1
  436f6e:	aas    
  436f6f:	sar    BYTE PTR es:[ebx-0xf],1
  436f73:	cmp    al,0xb0
  436f75:	mov    DWORD PTR [ecx-0x52],edi
  436f78:	daa    
  436f79:	mov    dl,0xb9
  436f7b:	cs scas al,BYTE PTR es:[edi]
  436f7d:	cmp    cl,ah
  436f7f:	das    
  436f80:	cli    
  436f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436f82:	pop    DWORD PTR [edx]
  436f84:	mov    ebx,0x79cdf70a
  436f89:	dec    ecx
  436f8a:	ja     0x436f2b
  436f8c:	cmp    DWORD PTR [ebp-0x19],0x92a199f2
  436f93:	xchg   ebx,eax
  436f94:	cmp    DWORD PTR [edx+ebx*1+0x169a3ae8],ebp
  436f9b:	jecxz  0x436f22
  436f9d:	loopne 0x436fec
  436f9f:	cs test cl,bh
  436fa2:	popa   
  436fa3:	sub    eax,0x3cf7c42b
  436fa8:	dec    ebp
  436fa9:	test   al,0xe8
  436fab:	mov    es,WORD PTR [ebx+0x3897a3f9]
  436fb1:	sub    eax,0x1e52aabb
  436fb6:	mov    edi,0x990f6677
  436fbb:	pop    ebp
  436fbc:	call   FWORD PTR [ecx]
  436fbe:	adc    esi,DWORD PTR [ecx+ecx*1+0x505f7146]
  436fc5:	mov    ecx,0xe1bf6843
  436fca:	cmp    DWORD PTR [ecx+0x7957fde5],ebx
  436fd0:	cld    
  436fd1:	loop   0x437051
  436fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436fd4:	sub    BYTE PTR [ebx],ch
  436fd6:	jbe    0x436fa6
  436fd8:	sub    ch,BYTE PTR [ecx-0x6c9027a1]
  436fde:	cmp    BYTE PTR [edx+0x316678a4],al
  436fe4:	xor    esi,edx
  436fe6:	pushf  
  436fe7:	sub    bl,ah
  436fe9:	or     ebx,DWORD PTR [edx]
  436feb:	(bad)  [esi]
  436fed:	push   ecx
  436fee:	popf   
  436fef:	xor    eax,0xbb93b09b
  436ff4:	(bad)  
  436ff5:	scas   eax,DWORD PTR es:[edi]
  436ff6:	inc    edx
  436ff7:	test   eax,0xf5911427
  436ffc:	mov    al,ds:0x4309f359
  437001:	xlat   BYTE PTR ds:[ebx]
  437002:	lahf   
  437003:	(bad)  
  437004:	xchg   edx,eax
  437005:	xor    ah,BYTE PTR [ebp-0x3d]
  437008:	add    ebp,ebp
  43700a:	clc    
  43700b:	(bad)  
  43700c:	push   edi
  43700d:	(bad)  
  43700e:	lods   eax,DWORD PTR ds:[esi]
  43700f:	pusha  
  437010:	add    ah,BYTE PTR [edi]
  437012:	add    DWORD PTR [ecx-0x5d1e94c7],edx
  437018:	pop    edi
  437019:	aas    
  43701a:	repnz sar cl,1
  43701d:	int    0x28
  43701f:	adc    eax,0x96dfaa58
  437024:	ret    
  437025:	push   esp
  437026:	inc    edi
  437027:	int3   
  437028:	push   edi
  437029:	pop    es
  43702a:	clc    
  43702b:	and    al,0xfa
  43702d:	cmc    
  43702e:	mov    cl,0x10
  437030:	mov    al,ds:0xd2a74572
  437035:	nop
  437036:	ins    DWORD PTR es:[edi],dx
  437037:	push   ecx
  437038:	int3   
  437039:	test   al,0x88
  43703b:	jg     0x437003
  43703d:	inc    eax
  43703e:	fwait
  43703f:	lahf   
  437040:	lods   eax,DWORD PTR ds:[esi]
  437041:	lahf   
  437042:	(bad)
  437045:	ins    BYTE PTR es:[edi],dx
  437046:	fdiv   QWORD PTR ds:0x31ec95f6
  43704c:	push   esi
  43704d:	push   ss
  43704e:	out    0x67,eax
  437050:	jmp    0x437019
  437052:	bound  ebx,QWORD PTR [ecx]
  437054:	dec    edi
  437055:	dec    ecx
  437056:	ficomp DWORD PTR [ebx-0x5c]
  437059:	call   0xea018c59
  43705e:	fstp   DWORD PTR [edx+ebx*1-0x7f]
  437062:	out    dx,al
  437063:	xor    edi,DWORD PTR [esi]
  437065:	xchg   esp,eax
  437066:	mov    bl,0x92
  437068:	sub    DWORD PTR [eax-0x24],0x6ad1adc5
  43706f:	jmp    0x43701c
  437071:	mov    eax,ds:0x5b9e8e8c
  437076:	mov    cl,0x57
  437078:	mov    ds:0xdfd3b8ef,al
  43707d:	fucom  st(3)
  43707f:	sbb    eax,0x3710eb60
  437084:	sbb    BYTE PTR [ebx+0x5f],dh
  437087:	and    al,0x5b
  437089:	imul   eax,DWORD PTR [ebx-0x51]
  43708d:	inc    ebp
  43708e:	or     edx,DWORD PTR [esi+0x72]
  437091:	xor    eax,0x3f2ca558
  437096:	(bad)  
  437097:	ins    DWORD PTR es:[edi],dx
  437098:	pop    edx
  437099:	push   eax
  43709a:	rol    ah,cl
  43709c:	cmp    ebp,ebp
  43709e:	xor    eax,0xb1716079
  4370a3:	idiv   BYTE PTR [edi-0x1a]
  4370a6:	loopne 0x43710e
  4370a8:	ins    BYTE PTR es:[edi],dx
  4370a9:	jle    0x43710a
  4370ab:	dec    esi
  4370ac:	push   ds
  4370ad:	in     eax,0x4c
  4370af:	sti    
  4370b0:	in     eax,dx
  4370b1:	add    BYTE PTR [ecx+0x2da77ae5],cl
  4370b7:	sub    edx,DWORD PTR [eax]
  4370b9:	jge    0x4370be
  4370bb:	jmp    0x43712e
  4370bd:	cmp    bl,BYTE PTR [ebx-0x13a0ec7d]
  4370c3:	or     ecx,esp
  4370c5:	and    al,0xc0
  4370c7:	jp     0x4370be
  4370c9:	rol    bh,1
  4370cb:	jge    0x437122
  4370cd:	sub    eax,DWORD PTR [ecx-0x74]
  4370d0:	adc    ebx,esi
  4370d2:	out    dx,al
  4370d3:	adc    al,0xdc
  4370d5:	mov    bl,0x6f
  4370d7:	js     0x437106
  4370d9:	pop    ds
  4370da:	loope  0x4370b9
  4370dc:	cdq    
  4370dd:	add    edi,ebp
  4370df:	imul   ebp,DWORD PTR [eax+0xa],0x8369c2ab
  4370e6:	fimul  DWORD PTR [eax]
  4370e8:	mov    BYTE PTR [eax],dl
  4370ea:	dec    edi
  4370eb:	adc    al,BYTE PTR [edx+eax*2+0x5326db96]
  4370f2:	test   eax,0x919d0b11
  4370f7:	mov    dl,0x8d
  4370f9:	jp     0x437165
  4370fb:	cmp    al,0xc2
  4370fd:	push   DWORD PTR ds:0xef58a828
  437103:	aam    0x51
  437105:	into   
  437106:	imul   ebp,esp,0x943cfbe9
  43710c:	fs xor eax,0x1c239d2
  437112:	inc    DWORD PTR [edx-0x7615b529]
  437118:	scas   eax,DWORD PTR es:[edi]
  437119:	gs dec esi
  43711b:	push   0xffffff92
  43711d:	aas    
  43711e:	retf   0x589e
  437121:	data16 xor BYTE PTR [esp+esi*2+0x7c],0x64
  437127:	rol    BYTE PTR [esi],cl
  437129:	ins    BYTE PTR es:[edi],dx
  43712a:	(bad)  
  43712b:	xchg   edx,eax
  43712c:	or     eax,0xe1ea33a5
  437131:	iret   
  437132:	xchg   ecx,eax
  437133:	repz xchg edi,eax
  437135:	les    edx,FWORD PTR [eax-0x13]
  437138:	call   0x6257:0xad6f79ff
  43713f:	cwde   
  437140:	es add al,0x18
  437143:	inc    esp
  437144:	pop    ecx
  437145:	jo     0x437123
  437147:	sbb    al,0xcd
  437149:	cmp    BYTE PTR [eax],bl
  43714b:	clc    
  43714c:	mov    dl,0x71
  43714e:	lods   al,BYTE PTR ds:[esi]
  43714f:	daa    
  437150:	cmp    eax,0xd099dbf9
  437155:	jp     0x4370e7
  437157:	jb     0x437166
  437159:	mov    esp,edx
  43715b:	jbe    0x4371d7
  43715d:	push   ecx
  43715e:	inc    esi
  43715f:	pop    ebp
  437160:	ret    
  437161:	push   ecx
  437162:	sar    esi,0xe9
  437165:	sbb    al,0x17
  437167:	fwait
  437168:	mov    WORD PTR [ecx],?
  43716a:	mov    al,0x15
  43716c:	je     0x4370f6
  43716e:	pop    esi
  43716f:	pop    ebx
  437170:	xor    ecx,DWORD PTR [ebx+0x54]
  437173:	or     al,BYTE PTR [eax-0x6c]
  437176:	lds    edx,FWORD PTR [esi]
  437178:	jmp    0x5cac:0x578f9aa6
  43717f:	pop    edi
  437180:	test   BYTE PTR [ebx+eiz*4-0x16],bl
  437184:	sub    al,0xc0
  437186:	scas   al,BYTE PTR es:[edi]
  437187:	pushf  
  437188:	sub    ecx,0xa7db5c0c
  43718e:	in     eax,dx
  43718f:	lds    eax,FWORD PTR [edx+ecx*2]
  437192:	inc    eax
  437193:	xor    al,0x72
  437195:	aas    
  437196:	cmp    bl,BYTE PTR [esi-0xb]
  437199:	shl    BYTE PTR [edi+0xa],0xb6
  43719d:	mov    ds:0x2dda4ff3,eax
  4371a2:	or     ch,BYTE PTR [eax+0x3c]
  4371a5:	push   cs
  4371a6:	mov    ah,0x69
  4371a8:	mov    edi,0x2324bf74
  4371ad:	mov    ds:0x46ab26d,eax
  4371b2:	sar    BYTE PTR [esi+eiz*2+0x35],1
  4371b6:	int3   
  4371b7:	fisubr WORD PTR [eax-0x70]
  4371ba:	jecxz  0x4371fd
  4371bc:	sbb    edi,DWORD PTR [ebp+0x35aa4f99]
  4371c2:	lea    esp,[eax+ebx*1-0x2a422019]
  4371c9:	iret   
  4371ca:	std    
  4371cb:	pop    es
  4371cc:	push   edx
  4371cd:	push   esi
  4371ce:	in     al,0x9f
  4371d0:	or     eax,0x79669adb
  4371d5:	xor    eax,0xf3f3844f
  4371da:	mov    cl,0xc0
  4371dc:	in     eax,0xf8
  4371de:	and    al,0x4e
  4371e0:	cli    
  4371e1:	sbb    al,0x37
  4371e3:	or     eax,0xf92e4fab
  4371e8:	fcmovnb st,st(4)
  4371eb:	push   ebx
  4371ec:	push   es
  4371ed:	or     BYTE PTR [ebp+0x78],0x41
  4371f1:	mov    dh,0xd4
  4371f3:	mov    bl,0x2f
  4371f5:	xor    BYTE PTR [eax-0x59ece4f7],ch
  4371fb:	push   0xd6df4e1d
  437200:	pop    es
  437201:	jl     0x43718d
  437203:	jne    0x437252
  437205:	stos   DWORD PTR es:[edi],eax
  437206:	jnp    0x4371f6
  437208:	dec    ebx
  437209:	mov    ebp,0x2b07d3c0
  43720e:	pop    ds
  43720f:	cmp    DWORD PTR ds:0xb18f251e,eax
  437215:	or     dh,al
  437217:	clc    
  437218:	mov    esp,0x62bfaf83
  43721d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43721e:	adc    ebx,0x6cae3985
  437224:	push   edx
  437225:	push   ebp
  437226:	cmp    eax,0xa69989b9
  43722b:	popa   
  43722c:	mov    ah,0x40
  43722e:	jmp    0xc3de:0x91cb4b8c
  437235:	ja     0x437253
  437237:	and    al,BYTE PTR [eax+0x2eca60e7]
  43723d:	add    esi,edi
  43723f:	jns    0x437205
  437241:	inc    esi
  437242:	int3   
  437243:	or     BYTE PTR [esi+0xd],al
  437246:	fwait
  437247:	jmp    0x437283
  437249:	test   eax,0x4cdf4301
  43724e:	mov    dl,0x9c
  437250:	mov    DWORD PTR [edi+0x2f],esp
  437253:	adc    al,0xf8
  437255:	stos   BYTE PTR es:[edi],al
  437256:	and    BYTE PTR [ebx],0x37
  437259:	sbb    edi,DWORD PTR [edx-0x589d7fd4]
  43725f:	xor    ch,BYTE PTR [edx]
  437261:	or     DWORD PTR [ecx-0x2d],esi
  437264:	xlat   BYTE PTR ds:[ebx]
  437265:	jbe    0x43722f
  437267:	or     DWORD PTR [esi+0x45],ebp
  43726a:	call   0xdf74:0x59a31901
  437271:	adc    BYTE PTR [ebp+edx*4+0x4b45e40c],dl
  437278:	aaa    
  437279:	mov    DWORD PTR [edx+0x41],eax
  43727c:	jl     0x4372a4
  43727e:	outs   dx,BYTE PTR ds:[esi]
  43727f:	xor    esi,DWORD PTR [ecx]
  437281:	mov    al,ds:0x7eb789e0
  437286:	je     0x43727e
  437288:	adc    DWORD PTR [edi-0x6834d548],edx
  43728e:	add    ebp,esi
  437290:	loopne 0x43728e
  437292:	push   edx
  437293:	pop    es
  437294:	adc    al,0x65
  437296:	pop    ecx
  437297:	pop    es
  437298:	add    eax,0xee174ec2
  43729d:	ret    
  43729e:	imul   edi,DWORD PTR [ecx],0x294d97e4
  4372a4:	xchg   BYTE PTR [eax+eiz*4+0x4d2d6f16],ah
  4372ab:	pop    ecx
  4372ac:	in     al,dx
  4372ad:	out    0x22,eax
  4372af:	pop    ebp
  4372b0:	neg    ch
  4372b2:	dec    edi
  4372b3:	or     bl,BYTE PTR [ecx]
  4372b5:	mov    dl,al
  4372b7:	dec    esi
  4372b8:	dec    esi
  4372b9:	jns    0x437326
  4372bb:	(bad)  [eax-0x550c4ac0]
  4372c1:	sub    dh,BYTE PTR [ebp+edi*2-0x38]
  4372c5:	das    
  4372c6:	cmp    DWORD PTR [ebp-0x2b1fb2ad],0x1d
  4372cd:	mov    ecx,0x6b85e52d
  4372d2:	fsubr  QWORD PTR [edi+eax*1+0x1d]
  4372d6:	js     0x437277
  4372d8:	inc    esi
  4372d9:	cmp    al,0x58
  4372db:	adc    DWORD PTR [esi-0x44],0x9b0facfc
  4372e2:	mov    ah,0x2d
  4372e4:	cld    
  4372e5:	mov    DWORD PTR [esi-0x19],eax
  4372e8:	and    edi,0x14
  4372eb:	adc    BYTE PTR [esi-0x56de0940],bl
  4372f1:	jnp    0x4372fc
  4372f3:	out    0x44,eax
  4372f5:	and    edx,DWORD PTR [eax+0x3be8f676]
  4372fb:	(bad)  
  4372fc:	outs   dx,BYTE PTR ds:[esi]
  4372fd:	xchg   al,cl
  4372ff:	cs jg  0x437283
  437302:	mov    cl,0x54
  437304:	loope  0x4372a0
  437306:	jne    0x437366
  437308:	mov    eax,ds:0xf6af1015
  43730d:	mov    dh,0x41
  43730f:	pusha  
  437310:	jle    0x437331
  437312:	xor    edi,DWORD PTR [ebx-0x8]
  437315:	popf   
  437316:	add    eax,ebp
  437318:	sub    BYTE PTR [esp-0xc],0xa6
  43731d:	mov    WORD PTR [ebp+0x63],ds
  437320:	cs clc 
  437322:	retf   
  437323:	and    dl,cl
  437325:	outs   dx,DWORD PTR ds:[esi]
  437326:	aam    0xab
  437328:	test   eax,0x23ecf881
  43732d:	pop    ebx
  43732e:	mov    bl,0x48
  437330:	dec    ebx
  437331:	sbb    eax,0x401b79fa
  437336:	dec    ebx
  437337:	daa    
  437338:	and    ch,al
  43733a:	inc    ebx
  43733b:	inc    esp
  43733c:	or     al,0x12
  43733e:	shl    BYTE PTR [esi+0x65],cl
  437341:	stc    
  437342:	in     al,dx
  437343:	imul   ebp,DWORD PTR [esi-0x49],0x83b0ae71
  43734a:	jle    0x437341
  43734c:	call   0x1ebd78fd
  437351:	mov    edi,DWORD PTR [ebx+0x7eeca541]
  437357:	icebp  
  437358:	or     eax,0x54f97eec
  43735d:	or     eax,0x14
  437360:	mov    al,0x2c
  437362:	fs dec ebx
  437364:	out    dx,al
  437365:	test   al,0xdb
  437367:	scas   eax,DWORD PTR es:[edi]
  437368:	jnp    0x4372fb
  43736a:	cli    
  43736b:	sbb    ecx,DWORD PTR [edi-0x31]
  43736e:	xchg   BYTE PTR [ebx-0x4a],ch
  437371:	jo     0x437393
  437373:	xor    eax,DWORD PTR [ebx*4+0x6cf4135d]
  43737a:	inc    edx
  43737b:	mov    al,ds:0x4cb2991f
  437380:	sub    dl,ch
  437382:	mov    bh,0x6c
  437384:	adc    ch,BYTE PTR [ebp-0x33]
  437387:	mov    ah,0x5a
  437389:	adc    BYTE PTR [edi+0x6],dh
  43738c:	jns    0x43733f
  43738e:	inc    edx
  43738f:	xor    edx,DWORD PTR [eax+0x65a56ec9]
  437395:	dec    esp
  437396:	pop    esp
  437397:	dec    edi
  437398:	add    edi,esp
  43739a:	mov    eax,ds:0xdec2e153
  43739f:	int    0xcc
  4373a1:	jnp    0x437375
  4373a3:	(bad)  
  4373a5:	sbb    eax,0xd1215490
  4373aa:	mov    al,0x60
  4373ac:	pop    ebp
  4373ad:	daa    
  4373ae:	mov    al,0x73
  4373b0:	rol    ecx,0xfd
  4373b3:	adc    eax,edi
  4373b5:	cmc    
  4373b6:	push   ebp
  4373b7:	call   0xb0f3:0xf4380041
  4373be:	push   cs
  4373bf:	es jne 0x437370
  4373c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4373c3:	and    DWORD PTR [ebx+0x3998323b],eax
  4373c9:	xchg   ecx,eax
  4373ca:	jb     0x437386
  4373cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4373cd:	sbb    BYTE PTR ds:0x806d7c12,dl
  4373d3:	mov    esp,0xde2166bc
  4373d8:	jnp    0x43740a
  4373da:	sub    al,0xc7
  4373dc:	and    DWORD PTR [eax],ebx
  4373de:	shr    DWORD PTR [ecx+0x5e6baab3],cl
  4373e4:	enter  0x4132,0xec
  4373e8:	mov    eax,0x4fad2bbe
  4373ed:	add    esp,DWORD PTR [ebx+ebx*4-0x77ae213d]
  4373f4:	and    al,0xdf
  4373f6:	shr    eax,cl
  4373f8:	popa   
  4373f9:	(bad)
  4373fc:	pop    ecx
  4373fd:	add    al,0x8
  4373ff:	pop    ebx
  437400:	push   esp
  437401:	xchg   edi,eax
  437402:	mov    dl,0x23
  437404:	pop    eax
  437405:	scas   al,BYTE PTR es:[edi]
  437406:	add    al,0x0
  437408:	pop    ebx
  437409:	sti    
  43740a:	and    bl,ch
  43740c:	jp     0x43746d
  43740e:	aad    0xe1
  437410:	cwde   
  437411:	jo     0x437406
  437413:	retf   
  437414:	push   cs
  437415:	adc    ah,bl
  437417:	mov    edi,0x5d6fd4b8
  43741c:	aaa    
  43741d:	pop    edi
  43741e:	imul   esi,DWORD PTR [ebp+0x1fe2e50a],0xc06796d3
  437428:	lds    ebx,FWORD PTR [ebx]
  43742a:	into   
  43742b:	mov    bh,0x6e
  43742d:	xchg   ebx,eax
  43742e:	iret   
  43742f:	pop    ebp
  437430:	js     0x43748e
  437432:	sbb    al,0x18
  437434:	in     eax,0xcd
  437436:	and    dh,BYTE PTR [edx+0x747375da]
  43743c:	mov    al,ds:0x4d033cd
  437441:	and    BYTE PTR [ecx+0x7f],dl
  437444:	mov    bl,0x1b
  437446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437447:	out    0x37,eax
  437449:	gs adc eax,0xa582475c
  43744f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437450:	jns    0x43744b
  437452:	iret   
  437453:	or     al,0x6a
  437455:	lock jae 0x4373de
  437458:	dec    edi
  437459:	icebp  
  43745a:	scas   eax,DWORD PTR es:[edi]
  43745b:	out    dx,al
  43745c:	mov    edi,0xc894a6c0
  437461:	adc    BYTE PTR [edx-0x11],cl
  437464:	and    al,0x5
  437466:	fldenv [edx-0x3b6b745a]
  43746c:	pop    edx
  43746d:	loopne 0x437402
  43746f:	pushf  
  437470:	xchg   ebp,eax
  437471:	fbld   TBYTE PTR [eax*8+0x53088ed5]
  437478:	loop   0x437425
  43747a:	test   ebx,0x310e27df
  437480:	data16 xor BYTE PTR [eax],bl
  437483:	lods   al,BYTE PTR ds:[esi]
  437484:	icebp  
  437485:	push   esi
  437486:	jo     0x4374ad
  437488:	adc    edi,DWORD PTR [eax-0x15]
  43748b:	inc    esi
  43748c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43748d:	pusha  
  43748e:	cdq    
  43748f:	in     al,dx
  437490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437491:	mov    edi,0xdcafe4c1
  437496:	(bad)  
  437497:	pop    ebp
  437498:	mov    esi,0xa915cfca
  43749d:	or     esi,ecx
  43749f:	pushf  
  4374a0:	shl    DWORD PTR [edx+0x29],0xbe
  4374a4:	dec    esp
  4374a5:	mov    eax,0x13e576d7
  4374aa:	int    0xe1
  4374ac:	addr16 push cs
  4374ae:	(bad)  
  4374b0:	ror    DWORD PTR [ebp+0x6a],0x24
  4374b4:	ror    DWORD PTR [ebx+0x3f],0xe1
  4374b8:	xor    esp,DWORD PTR [edi+0x4573ad75]
  4374be:	hlt    
  4374bf:	jp     0x43748a
  4374c1:	fs jp  0x437536
  4374c4:	mov    edi,0xb78cfcf5
  4374c9:	mov    esi,0x5e39622b
  4374ce:	push   ecx
  4374cf:	sbb    esi,DWORD PTR [ebp+0x588a7315]
  4374d5:	(bad)  
  4374d6:	adc    BYTE PTR [eax-0x18],al
  4374d9:	out    dx,al
  4374da:	jb     0x4374d0
  4374dc:	sub    dh,al
  4374de:	jbe    0x4374fb
  4374e0:	xchg   DWORD PTR [ebp+0xb537a2d],edx
  4374e6:	test   eax,0x566c5718
  4374eb:	call   0xd10d:0xf4de7f18
  4374f2:	mov    dh,0xbe
  4374f4:	mov    esp,eax
  4374f6:	mov    ds:0x9ab4291a,eax
  4374fb:	push   0xffffffd6
  4374fd:	xlat   BYTE PTR ds:[ebx]
  4374fe:	rol    cl,0x5d
  437501:	fucomp st(0)
  437503:	js     0x4374b8
  437505:	popf   
  437506:	push   ss
  437507:	retf   
  437508:	xchg   esp,eax
  437509:	push   0x46
  43750b:	mov    eax,ds:0xbc083f
  437510:	xchg   esi,eax
  437511:	jmp    0x43751d
  437513:	test   al,0x5f
  437515:	xchg   edi,eax
  437516:	lods   eax,DWORD PTR ds:[esi]
  437517:	outs   dx,DWORD PTR ds:[esi]
  437518:	cmp    DWORD PTR [esi],edi
  43751a:	jmp    0x13bf:0x338d42b2
  437521:	mov    BYTE PTR [ebp+0x122479e3],al
  437527:	into   
  437528:	mov    al,0xdd
  43752a:	and    DWORD PTR [eax],ebx
  43752c:	mov    al,ds:0xe37b22d6
  437531:	push   0xffffffcc
  437533:	das    
  437534:	enter  0x5991,0xc1
  437538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437539:	clc    
  43753a:	lahf   
  43753b:	xor    bh,ch
  43753d:	cmp    al,0x77
  43753f:	fimul  DWORD PTR [edi]
  437541:	repnz imul ebx,DWORD PTR [eax+ebx*1-0x4615eee5],0xe7bebf54
  43754d:	jnp    0x43752e
  43754f:	shl    BYTE PTR [ecx-0x598cb1dc],1
  437555:	sbb    esp,ebx
  437557:	lods   al,BYTE PTR ds:[esi]
  437558:	hlt    
  437559:	mov    WORD PTR [edx],ds
  43755b:	jns    0x4375b9
  43755d:	dec    esi
  43755e:	mov    bl,0xed
  437560:	mov    al,0xfb
  437562:	stos   BYTE PTR es:[edi],al
  437563:	call   0x5fb8:0x4712f4d
  43756a:	pop    edx
  43756b:	inc    esi
  43756c:	mov    esp,0x595526bc
  437571:	mov    esi,0x72377985
  437576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437577:	sbb    al,0xb5
  437579:	mov    dl,0x3e
  43757b:	pusha  
  43757c:	jg     0x4375a8
  43757e:	outs   dx,DWORD PTR ds:[esi]
  43757f:	sub    ch,BYTE PTR [ebp-0x77]
  437582:	(bad)  
  437585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437586:	retf   
  437587:	push   ss
  437588:	and    DWORD PTR [edx+0x72],edx
  43758b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43758c:	aaa    
  43758d:	or     esp,eax
  43758f:	sub    eax,0x3d3a88fa
  437594:	mov    eax,ds:0x4c324a53
  437599:	sbb    esi,DWORD PTR [edi]
  43759b:	fwait
  43759c:	mov    eax,0x8a07a5d2
  4375a1:	das    
  4375a2:	and    DWORD PTR [edx-0x6c],esi
  4375a5:	push   cs
  4375a6:	dec    edx
  4375a7:	pusha  
  4375a8:	ins    DWORD PTR es:[edi],dx
  4375a9:	ins    BYTE PTR es:[edi],dx
  4375aa:	out    dx,eax
  4375ab:	push   ss
  4375ac:	pop    es
  4375ad:	arpl   cx,di
  4375af:	js     0x437608
  4375b1:	cmp    ch,BYTE PTR ds:0x5b5a533d
  4375b7:	(bad)
  4375ba:	in     eax,dx
  4375bb:	sbb    al,0xcb
  4375bd:	push   0xba99a7d7
  4375c2:	ret    0xd662
  4375c5:	cwde   
  4375c6:	and    ecx,eax
  4375c8:	sub    al,0x8b
  4375ca:	sbb    DWORD PTR [edx+0x73],ecx
  4375cd:	fiadd  DWORD PTR [edi]
  4375cf:	pushf  
  4375d0:	mov    ch,BYTE PTR [eax+ecx*8]
  4375d3:	int    0xf9
  4375d5:	adc    BYTE PTR [ebp+0x4],bh
  4375d8:	sbb    BYTE PTR [edi-0x3e],al
  4375db:	nop
  4375dc:	mov    al,0x3f
  4375de:	mov    esi,0xe278c903
  4375e3:	pop    esp
  4375e4:	mov    ds:0x833d4a03,eax
  4375e9:	mov    BYTE PTR [eax],ah
  4375eb:	in     al,dx
  4375ec:	ret    0x620b
  4375ef:	pop    edx
  4375f0:	ficomp WORD PTR ds:0xd844b856
  4375f6:	cld    
  4375f7:	pop    ebp
  4375f8:	mov    ah,0xe8
  4375fa:	fild   DWORD PTR [ecx-0x69]
  4375fd:	xchg   esp,eax
  4375fe:	fcomi  st,st(2)
  437600:	sahf   
  437601:	mov    ebx,0x31572e0a
  437606:	mov    eax,ds:0x1fc9c673
  43760b:	ins    BYTE PTR es:[edi],dx
  43760c:	int    0x35
  43760e:	ret    
  43760f:	inc    ecx
  437610:	ret    0x6b97
  437613:	push   edx
  437614:	dec    esp
  437615:	cmp    bl,BYTE PTR [ecx]
  437617:	push   esp
  437618:	ret    0x5261
  43761b:	ins    BYTE PTR es:[edi],dx
  43761c:	pop    ds
  43761d:	ja     0x437659
  43761f:	test   BYTE PTR [ebx+ebp*4],0x9a
  437623:	outs   dx,BYTE PTR ds:[esi]
  437624:	call   0x2544cf9
  437629:	sar    BYTE PTR [esi+0x62],cl
  43762c:	imul   esp,DWORD PTR [ebx+0x42],0xffffff9b
  437630:	jp     0x43761d
  437632:	ficomp DWORD PTR [esi-0x44]
  437635:	and    dh,ch
  437637:	rcl    BYTE PTR ds:[eax+0x7d],1
  43763b:	cmp    esi,DWORD PTR [edx+0x35c04c88]
  437641:	pop    edx
  437642:	outs   dx,BYTE PTR ds:[esi]
  437643:	fisub  WORD PTR [ebp-0xd]
  437646:	xchg   edi,eax
  437647:	adc    bl,BYTE PTR [ecx-0x2f]
  43764a:	and    eax,0x430fd847
  43764f:	outs   dx,BYTE PTR ds:[esi]
  437650:	dec    esp
  437651:	mov    ds:0xc4c2bc8f,eax
  437656:	popa   
  437657:	inc    ecx
  437658:	rol    bl,cl
  43765a:	jb     0x437660
  43765c:	mov    eax,0x499dee70
  437661:	mov    ebp,0xaa0aa4ee
  437666:	cmp    eax,DWORD PTR [ebx+0x4e6d94d5]
  43766c:	repz int 0xf2
  43766f:	out    dx,eax
  437670:	adc    dh,BYTE PTR [esi-0x6a]
  437673:	ins    BYTE PTR es:[edi],dx
  437674:	and    BYTE PTR [edi-0xad8ddce],dl
  43767a:	adc    al,0x8
  43767c:	out    0x4d,al
  43767e:	cmp    dh,dh
  437680:	je     0x43769b
  437682:	and    DWORD PTR [esi+0x4c],esi
  437685:	stos   DWORD PTR es:[edi],eax
  437686:	fnstcw WORD PTR [ecx]
  437688:	ins    DWORD PTR es:[edi],dx
  437689:	push   esi
  43768a:	daa    
  43768b:	push   ds
  43768c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43768d:	rol    BYTE PTR [esp+esi*2-0x5f],cl
  437691:	mov    ch,0x70
  437693:	jo     0x43765d
  437695:	mov    eax,0xd0840332
  43769a:	adc    eax,0x3f94f5af
  43769f:	inc    eax
  4376a0:	call   0x3b79725
  4376a5:	addr16 pop ecx
  4376a7:	push   ebx
  4376a8:	addr16 test al,0x6c
  4376ab:	adc    eax,esp
  4376ad:	sbb    al,0xc3
  4376af:	aad    0x9b
  4376b1:	cld    
  4376b2:	(bad)  [ebp+0x23]
  4376b5:	xchg   ebx,eax
  4376b6:	aaa    
  4376b7:	cmp    ebp,DWORD PTR [edx+0x72]
  4376ba:	push   0xffffffce
  4376bc:	in     eax,0xb9
  4376be:	push   edx
  4376bf:	xor    al,0xa0
  4376c1:	or     cl,BYTE PTR [ebx-0x19]
  4376c4:	sbb    eax,0x66ffbc00
  4376c9:	test   eax,0xe99d5bc3
  4376ce:	xor    BYTE PTR [ebx-0x60],ch
  4376d1:	adc    ah,0x13
  4376d4:	cmp    eax,0xf694fe05
  4376d9:	jg     0x437708
  4376db:	add    ch,BYTE PTR [esi-0x2914de8]
  4376e1:	je     0x437704
  4376e3:	add    BYTE PTR [edi+0x33],al
  4376e6:	or     DWORD PTR [ebx],edi
  4376e8:	and    bl,al
  4376ea:	call   0x578b132d
  4376ef:	popa   
  4376f0:	repnz jmp 0xc65a:0xe10ac9ef
  4376f8:	and    al,0xb0
  4376fa:	mov    ecx,0xedc74fb9
  4376ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437700:	adc    ecx,DWORD PTR [ebx]
  437702:	mov    eax,0x72e61764
  437707:	mov    ch,0x70
  437709:	imul   BYTE PTR [edi-0x64187d25]
  43770f:	in     eax,0x4d
  437711:	or     ch,BYTE PTR [ecx]
  437713:	or     BYTE PTR [esi],al
  437715:	loopne 0x43773d
  437717:	imul   ebx,DWORD PTR [ecx+0xa],0x4332d19b
  43771e:	dec    esi
  43771f:	mov    al,ds:0xe2e53370
  437724:	mov    esi,0x3a64a559
  437729:	jb     0x4376bb
  43772b:	loopne 0x4376e7
  43772d:	jmp    0x84b1:0xad722cf4
  437734:	xchg   ebp,eax
  437735:	ins    DWORD PTR es:[edi],dx
  437736:	(bad)  
  437737:	(bad)  
  437738:	imul   eax,DWORD PTR [edx],0xffffffb6
  43773b:	jmp    0x2d26:0xdf551933
  437742:	ins    DWORD PTR es:[edi],dx
  437743:	dec    ebp
  437744:	xor    eax,0x4a80649a
  437749:	push   esp
  43774a:	pop    ds
  43774b:	dec    ecx
  43774c:	ss jbe 0x4377b9
  43774f:	(bad)  
  437750:	in     al,0x3c
  437752:	loopne 0x437785
  437754:	lods   al,BYTE PTR ds:[esi]
  437755:	mov    al,ds:0xacfe1149
  43775a:	arpl   WORD PTR [eax],cx
  43775c:	lods   eax,DWORD PTR ds:[esi]
  43775d:	jnp    0x437796
  43775f:	push   ecx
  437760:	pop    ss
  437761:	or     eax,0x5c5fd09d
  437766:	ins    BYTE PTR es:[edi],dx
  437767:	icebp  
  437768:	das    
  437769:	sbb    al,0xa
  43776b:	jmp    0x26bc:0xe28272c8
  437772:	cvttps2pi mm3,QWORD PTR [eax]
  437775:	imul   edx,DWORD PTR [ebx-0x88e7d0d],0xffffffa7
  43777c:	dec    ebx
  43777d:	mov    cl,BYTE PTR [edi]
  43777f:	shr    BYTE PTR [bp-0x4b],cl
  437783:	sub    eax,0xc8c8b85b
  437788:	xchg   esi,eax
  437789:	xlat   BYTE PTR ds:[ebx]
  43778a:	mov    bh,0xb9
  43778c:	retf   
  43778d:	or     eax,ecx
  43778f:	and    al,0xb7
  437791:	xor    cl,BYTE PTR [esi+0x71]
  437794:	dec    edi
  437795:	pop    ebx
  437796:	fst    QWORD PTR [eax-0x12b8128b]
  43779c:	mov    esi,DWORD PTR [ecx]
  43779e:	mov    WORD PTR [ebp+0x29f8520b],fs
  4377a4:	sub    al,BYTE PTR [ecx]
  4377a6:	jl     0x43773f
  4377a8:	push   edx
  4377a9:	push   edx
  4377aa:	dec    esp
  4377ab:	rol    BYTE PTR [edi-0x2637473d],cl
  4377b1:	add    al,0x91
  4377b3:	ret    
  4377b4:	mov    WORD PTR [edi+0x30becf61],?
  4377ba:	jnp    0x437754
  4377bc:	aad    0xe8
  4377be:	pop    eax
  4377bf:	popf   
  4377c0:	dec    esp
  4377c1:	inc    esi
  4377c2:	shr    ebp,1
  4377c4:	mov    al,ds:0x682da73f
  4377c9:	pop    esi
  4377ca:	(bad)  
  4377cb:	push   0x7be09c89
  4377d0:	mov    ecx,DWORD PTR [ecx+0x2]
  4377d3:	add    esi,edi
  4377d5:	loopne 0x437807
  4377d7:	mov    edx,0x1ad70d7b
  4377dc:	and    eax,0xa08415bf
  4377e1:	stc    
  4377e2:	retf   0xa20a
  4377e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4377e6:	or     al,0xb2
  4377e8:	pop    ds
  4377e9:	mov    al,0xd0
  4377eb:	in     al,dx
  4377ec:	call   0x74eaee06
  4377f1:	add    dh,BYTE PTR [ebp-0x4a]
  4377f4:	xchg   DWORD PTR [eax-0x76],edx
  4377f7:	mov    edi,0x5f7d18cf
  4377fc:	imul   ecx,DWORD PTR [esp+ebp*2],0x958d5c4e
  437803:	jno    0x43779d
  437805:	inc    ebx
  437806:	mov    esi,0x7eb9bf97
  43780b:	bound  edi,QWORD PTR [edi-0x5bd56fd4]
  437811:	mov    ebx,0xecfd7a4b
  437816:	scas   al,BYTE PTR es:[edi]
  437817:	addr16 or ebx,ebp
  43781a:	gs out 0xd0,eax
  43781d:	aad    0xcd
  43781f:	imul   eax,DWORD PTR [eax+0x1f8edbf],0xa32e6ded
  437829:	jns    0x43785f
  43782b:	cmp    edx,edi
  43782d:	inc    ebx
  43782e:	outs   dx,DWORD PTR ds:[esi]
  43782f:	stc    
  437830:	mov    ds:0xa6128ce,eax
  437835:	das    
  437836:	(bad)  
  437837:	mov    cl,0xdb
  437839:	inc    ebp
  43783a:	(bad)  
  43783b:	jmp    0x43781b
  43783d:	cs stos DWORD PTR es:[edi],eax
  43783f:	aas    
  437840:	lock push 0x4c
  437843:	fsub   st(5),st
  437845:	lods   al,BYTE PTR ds:[esi]
  437846:	outs   dx,DWORD PTR ds:[esi]
  437847:	leave  
  437848:	sub    DWORD PTR [edx-0x182da730],esi
  43784e:	mov    ecx,0x213d6874
  437853:	jns    0x437860
  437855:	cwde   
  437856:	xor    edi,esp
  437858:	test   al,0xfc
  43785a:	jo     0x4378b1
  43785c:	outs   dx,BYTE PTR ds:[esi]
  43785d:	icebp  
  43785e:	sar    BYTE PTR [edi-0x5e],0x83
  437862:	pop    edi
  437863:	test   al,0xca
  437865:	in     al,dx
  437866:	and    al,0x4
  437868:	loope  0x437852
  43786a:	ins    DWORD PTR es:[edi],dx
  43786b:	mov    dh,0x39
  43786d:	in     eax,0x7d
  43786f:	mov    eax,ds:0x525961cb
  437874:	sar    edi,1
  437876:	push   edi
  437877:	shl    DWORD PTR [eax],cl
  437879:	ror    BYTE PTR [esi],0xee
  43787c:	or     DWORD PTR [edx],edx
  43787e:	stos   DWORD PTR es:[edi],eax
  43787f:	aam    0xc3
  437881:	js     0x43786d
  437883:	cwde   
  437884:	popa   
  437885:	data16 loop 0x43784b
  437888:	or     al,0x4d
  43788a:	mov    edi,DWORD PTR [eax+0x6743225c]
  437890:	push   es
  437891:	pop    ds
  437892:	jae    0x43788b
  437894:	outs   dx,BYTE PTR ds:[esi]
  437895:	arpl   WORD PTR [ecx-0x46eed908],cx
  43789b:	push   ds
  43789c:	(bad)  
  43789d:	mov    WORD PTR ds:0xb20b958f,?
  4378a3:	add    DWORD PTR [edx],eax
  4378a5:	mul    BYTE PTR [eax+0x7ca3278a]
  4378ab:	jmp    0xba64:0x740efd28
  4378b2:	jmp    0x43787f
  4378b4:	cmp    ah,BYTE PTR [eax+0xf652f83]
  4378ba:	aam    0xe0
  4378bc:	pop    ds
  4378bd:	inc    edi
  4378be:	pop    eax
  4378bf:	cmp    dh,BYTE PTR [edi-0x35]
  4378c2:	inc    eax
  4378c3:	cmc    
  4378c4:	ficomp WORD PTR [ebp+0x46]
  4378c7:	inc    ebp
  4378c8:	stc    
  4378c9:	dec    ebx
  4378ca:	out    0x6b,eax
  4378cc:	inc    eax
  4378cd:	push   ebx
  4378ce:	xor    eax,0x4cf9400d
  4378d3:	pusha  
  4378d4:	xor    eax,0xf1993889
  4378d9:	cmp    cl,ch
  4378db:	jle    0x4378d2
  4378dd:	add    BYTE PTR [edx-0x1ff6ca7e],ch
  4378e3:	xchg   esi,eax
  4378e4:	mov    dh,0xb2
  4378e6:	ja     0x437953
  4378e8:	inc    eax
  4378e9:	test   edi,esi
  4378eb:	sbb    bh,BYTE PTR [edi+eiz*1]
  4378ee:	dec    edx
  4378ef:	cli    
  4378f0:	mov    bh,0x37
  4378f2:	mov    BYTE PTR [eax+0x41a1626f],al
  4378f8:	push   edx
  4378f9:	out    dx,eax
  4378fa:	ins    BYTE PTR es:[edi],dx
  4378fb:	dec    esi
  4378fc:	lahf   
  4378fd:	or     DWORD PTR [ecx-0x73bd728d],esp
  437903:	repnz neg ah
  437906:	xor    eax,0x5bf5d31a
  43790b:	out    0xfa,al
  43790d:	xchg   ecx,eax
  43790e:	mov    ds:0xa162ee59,al
  437913:	in     al,0x10
  437915:	repnz adc bh,BYTE PTR [ebp+0x57]
  437919:	cmp    DWORD PTR [eax],esi
  43791b:	adc    BYTE PTR cs:[esi],0x52
  43791f:	sbb    eax,0x42ad2d02
  437924:	outs   dx,DWORD PTR ds:[esi]
  437925:	ret    
  437926:	mov    BYTE PTR [ebp-0x4823ba59],dl
  43792c:	stos   BYTE PTR es:[edi],al
  43792d:	pop    esi
  43792e:	jmp    eax
  437930:	sub    al,0xa2
  437932:	dec    ebp
  437933:	mov    bh,0xc8
  437935:	mov    eax,ds:0xec38712c
  43793a:	or     al,0x85
  43793c:	pop    edx
  43793d:	and    eax,DWORD PTR [ebp+ebx*1+0x749e7729]
  437944:	(bad)  
  437945:	test   edx,ebx
  437947:	aaa    
  437948:	mov    dh,0x32
  43794a:	into   
  43794b:	retf   
  43794c:	add    bh,dl
  43794e:	cmp    DWORD PTR [edx],eax
  437950:	test   al,0x8a
  437952:	pop    eax
  437953:	mov    al,0xdc
  437955:	fwait
  437956:	or     ebp,0x72
  437959:	(bad)  
  43795b:	pushf  
  43795c:	mov    bh,0xc
  43795e:	sahf   
  43795f:	ror    DWORD PTR [esi+0x5b],1
  437962:	fst    QWORD PTR [esi]
  437964:	(bad)  
  437965:	cli    
  437966:	nop
  437967:	sub    edi,edi
  437969:	push   ebp
  43796a:	ss out dx,eax
  43796c:	or     BYTE PTR [edi+0x1],0xa6
  437970:	sub    DWORD PTR [ebx+ebx*2+0xdcee002],ebp
  437977:	dec    ebx
  437978:	(bad)  
  437979:	movsx  esp,BYTE PTR [esi-0x2abbe2cd]
  437980:	adc    al,0x32
  437982:	xor    DWORD PTR [esi+esi*8+0x8],0x16
  437987:	and    eax,0xb9889b1c
  43798c:	and    eax,0x5b1f11ad
  437991:	push   esi
  437992:	not    DWORD PTR [ebx-0x15]
  437995:	pop    esi
  437996:	mov    BYTE PTR [ebx-0x108349e4],dh
  43799c:	sbb    BYTE PTR [edx+0x3b],cl
  43799f:	add    esp,edi
  4379a1:	xchg   edx,eax
  4379a2:	inc    ebx
  4379a3:	loopne 0x4379c5
  4379a5:	sub    bh,ch
  4379a7:	jno    0x437a0f
  4379a9:	lahf   
  4379aa:	bound  edi,QWORD PTR [ecx-0xe]
  4379ad:	cmp    al,0x9e
  4379af:	in     al,dx
  4379b0:	dec    edx
  4379b1:	lds    ecx,FWORD PTR [edi]
  4379b3:	cmp    ah,BYTE PTR [esi+ebx*4-0x756799b7]
  4379ba:	icebp  
  4379bb:	xchg   edx,eax
  4379bc:	ds pop ss
  4379be:	loope  0x4379a8
  4379c0:	jmp    0x9a77:0x2a03205c
  4379c7:	inc    ebx
  4379c8:	sub    BYTE PTR [esp+eax*4-0x4622da78],ch
  4379cf:	ret    0xc35e
  4379d2:	and    ah,ch
  4379d4:	inc    ecx
  4379d5:	and    al,0x52
  4379d7:	inc    ecx
  4379d8:	inc    ebp
  4379d9:	pop    ebx
  4379da:	fsubrp st(1),st
  4379dc:	push   ds
  4379dd:	gs xor al,0xfa
  4379e0:	dec    edi
  4379e1:	xchg   esi,eax
  4379e2:	dec    edx
  4379e3:	scas   eax,DWORD PTR es:[edi]
  4379e4:	ins    BYTE PTR es:[edi],dx
  4379e5:	fwait
  4379e6:	mov    bl,bh
  4379e8:	lods   eax,DWORD PTR ds:[esi]
  4379e9:	sbb    dh,BYTE PTR [ecx+0x6c24adac]
  4379ef:	psubw  mm3,QWORD PTR [edi-0x63316004]
  4379f6:	outs   dx,BYTE PTR ds:[esi]
  4379f7:	jp     0x437a39
  4379f9:	cmp    eax,0x6e5ba159
  4379fe:	cmp    BYTE PTR [ecx+ecx*2],0x6e
  437a02:	jne    0x437a83
  437a04:	pop    ecx
  437a05:	sahf   
  437a06:	mov    eax,ds:0xcc58ff25
  437a0b:	jmp    0x4379ae
  437a0d:	cwde   
  437a0e:	(bad)  
  437a0f:	je     0x4379c1
  437a11:	xor    al,0x79
  437a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437a14:	inc    esp
  437a15:	adc    ebp,DWORD PTR [eax]
  437a17:	into   
  437a18:	mov    bh,0x53
  437a1a:	push   edx
  437a1b:	add    DWORD PTR fs:0x252dc6b4,edi
  437a22:	(bad)  [ebp+0x73c51b99]
  437a28:	jecxz  0x437a16
  437a2a:	mov    BYTE PTR [ecx],cl
  437a2c:	mov    ds:0x2bbc8d9b,al
  437a31:	(bad)  
  437a32:	pop    esi
  437a33:	cmovg  ecx,DWORD PTR [ebp+0x2a1c97f0]
  437a3a:	mov    BYTE PTR [ecx-0x2a662284],dl
  437a40:	xchg   ebp,eax
  437a41:	aam    0xa9
  437a43:	adc    eax,0x8d1958be
  437a48:	not    DWORD PTR [edx+0x82142c2]
  437a4e:	mov    ds:0x1971ef5d,eax
  437a53:	and    dl,BYTE PTR [ebx-0x25cd3580]
  437a59:	push   ds
  437a5a:	pop    ebp
  437a5b:	xchg   ebp,eax
  437a5c:	xor    BYTE PTR cs:[edi+0x2823fb46],cl
  437a63:	xlat   BYTE PTR ds:[ebx]
  437a64:	mov    al,ds:0xd2b7676b
  437a69:	jge    0x437a11
  437a6b:	shl    BYTE PTR [esi],0x99
  437a6e:	fiadd  WORD PTR [esi-0x10]
  437a71:	pop    es
  437a72:	cmp    al,0xe7
  437a74:	cmp    DWORD PTR [ebx+0x1fad94a9],esi
  437a7a:	call   0xee4c4234
  437a7f:	out    0x1,eax
  437a81:	lods   eax,DWORD PTR ds:[esi]
  437a82:	cmp    al,BYTE PTR [esi+eax*4+0x239da176]
  437a89:	or     al,0x7e
  437a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a8c:	ins    BYTE PTR es:[edi],dx
  437a8d:	sub    al,0x62
  437a8f:	mov    esp,0x10f12324
  437a94:	inc    edx
  437a95:	inc    ebx
  437a96:	mov    esp,0xe66a56c
  437a9b:	push   0x37374803
  437aa0:	mov    bh,0x47
  437aa2:	push   edx
  437aa3:	push   ss
  437aa4:	int    0x5c
  437aa6:	mov    ch,0xf6
  437aa8:	mov    gs,WORD PTR [eax-0x4db0cfa7]
  437aae:	mov    eax,0xba04e65
  437ab3:	into   
  437ab4:	shl    DWORD PTR [ebx+esi*4-0x31],cl
  437ab8:	mov    dl,0xd2
  437aba:	mov    edx,0x5b6299bc
  437abf:	mov    edx,0x1dfa422f
  437ac4:	fcom   DWORD PTR [edx]
  437ac6:	xchg   ebp,eax
  437ac7:	pop    es
  437ac8:	or     BYTE PTR [edi],dh
  437aca:	sub    ah,dl
  437acc:	aad    0x3e
  437ace:	sub    DWORD PTR [eax+0x46],0x1330af89
  437ad5:	jae    0x437af4
  437ad7:	or     BYTE PTR [ecx],bl
  437ad9:	test   eax,0x909e5933
  437ade:	addr16 cs add eax,0x715059bf
  437ae5:	pop    ecx
  437ae6:	cmp    BYTE PTR [ebx+eiz*4-0x33aab61e],cl
  437aed:	inc    ecx
  437aee:	jg     0x437ade
  437af0:	push   ebp
  437af1:	mov    ds:0x71203bf4,eax
  437af6:	rol    BYTE PTR [edx+0x79],cl
  437af9:	ins    BYTE PTR es:[edi],dx
  437afa:	(bad)  
  437afb:	mov    al,0x91
  437afd:	test   DWORD PTR [ebx-0x591bb7c1],eax
  437b03:	adc    DWORD PTR [ecx],ebp
  437b05:	xchg   BYTE PTR [eax],bh
  437b07:	xchg   BYTE PTR [ebx-0x51870366],dl
  437b0d:	xor    bl,BYTE PTR ds:0x4ebb9746
  437b13:	dec    eax
  437b14:	sbb    dh,BYTE PTR [ecx]
  437b16:	dec    esp
  437b17:	dec    esi
  437b18:	mov    edi,0x2ca2a631
  437b1d:	xor    bh,dl
  437b1f:	jmp    0x544201c6
  437b24:	leave  
  437b25:	pop    esi
  437b26:	dec    edi
  437b27:	cs or  eax,0xf9580560
  437b2d:	mov    ah,0x85
  437b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437b30:	mov    edi,0x7bcacf0b
  437b35:	lock jg 0x437b14
  437b38:	into   
  437b39:	popa   
  437b3a:	test   eax,0xe316cb2d
  437b3f:	btr    DWORD PTR [ebp-0x3f],0xcc
  437b44:	sar    DWORD PTR ds:0x8ac3cb92,0xe9
  437b4b:	shl    ecx,cl
  437b4d:	mov    al,ds:0x20f5ef3d
  437b52:	jae    0x437ae0
  437b54:	in     eax,dx
  437b55:	mov    edx,eax
  437b57:	sbb    BYTE PTR [esp+eiz*2+0xc718c8d],bl
  437b5e:	cld    
  437b5f:	jecxz  0x437b39
  437b61:	sub    eax,0x4e451fd0
  437b66:	bts    DWORD PTR [esi-0x3b],0xdd
  437b6b:	dec    edx
  437b6c:	sub    BYTE PTR [edi+edi*8],ch
  437b6f:	mov    bh,0x96
  437b71:	cld    
  437b72:	add    ah,dl
  437b74:	bound  ebp,QWORD PTR [ebx+0x55bba163]
  437b7a:	dec    ebx
  437b7b:	in     al,0xbe
  437b7d:	mov    edi,0xc6db26bf
  437b82:	imul   DWORD PTR [esi-0x38]
  437b85:	adc    bh,BYTE PTR [edi-0x79]
  437b88:	(bad)  
  437b89:	in     eax,dx
  437b8a:	sti    
  437b8b:	push   ebx
  437b8c:	push   ebx
  437b8d:	xor    ch,bh
  437b8f:	cmc    
  437b90:	jb     0x437b59
  437b92:	scas   al,BYTE PTR es:[edi]
  437b93:	and    eax,0xb46c4d1e
  437b98:	inc    esp
  437b99:	adc    BYTE PTR [ebx-0x63],dh
  437b9c:	cld    
  437b9d:	ret    
  437b9e:	lea    ecx,[esi]
  437ba0:	cwde   
  437ba1:	out    dx,eax
  437ba2:	iret   
  437ba3:	retf   
  437ba4:	push   0xfd265f78
  437ba9:	push   0xdee076fd
  437bae:	movups xmm3,XMMWORD PTR [eax]
  437bb1:	xchg   edx,eax
  437bb2:	lods   eax,DWORD PTR ds:[esi]
  437bb3:	cwde   
  437bb4:	inc    DWORD PTR [edx]
  437bb6:	pusha  
  437bb7:	adc    al,0xdc
  437bb9:	jmp    DWORD PTR [ebp+0x17919982]
  437bbf:	repnz rcl dh,1
  437bc2:	popf   
  437bc3:	jno    0x437b63
  437bc5:	test   eax,0xa3c159ac
  437bca:	out    0x11,eax
  437bcc:	out    0x84,al
  437bce:	pop    ds
  437bcf:	add    BYTE PTR [edi+0x2b],0xb
  437bd3:	or     ch,ch
  437bd5:	(bad)  
  437bd6:	test   al,0x65
  437bd8:	les    edi,FWORD PTR [ebx+0x36e1ecc9]
  437bde:	iret   
  437bdf:	pop    ecx
  437be0:	mov    edx,0x59e61c32
  437be5:	mov    ecx,0x61c39f63
  437bea:	sub    eax,0xfc17e3a4
  437bef:	pop    ds
  437bf0:	cmp    al,0x77
  437bf2:	xor    bl,BYTE PTR [esi+0x55]
  437bf5:	cs int 0xf8
  437bf8:	repnz and bh,dh
  437bfb:	lods   eax,DWORD PTR ds:[esi]
  437bfc:	xchg   DWORD PTR [ecx+edi*4],esi
  437bff:	jno    0x437bea
  437c01:	out    dx,eax
  437c02:	loop   0x437c32
  437c04:	rcl    DWORD PTR [edx],1
  437c06:	or     eax,DWORD PTR [ecx-0x18e43427]
  437c0c:	sbb    eax,0x48012e58
  437c11:	cli    
  437c12:	cli    
  437c13:	inc    esi
  437c14:	inc    esi
  437c15:	les    edx,FWORD PTR [ebp+0x1d]
  437c18:	call   FWORD PTR [edi]
  437c1a:	loope  0x437c92
  437c1c:	iret   
  437c1d:	push   esi
  437c1e:	int    0xce
  437c20:	mov    ebx,0x8eda59aa
  437c25:	mov    BYTE PTR [ebx+edx*8-0xd],ah
  437c29:	pop    esi
  437c2a:	sbb    ah,bh
  437c2c:	dec    esi
  437c2d:	xchg   edi,eax
  437c2e:	(bad)  
  437c2f:	arpl   WORD PTR [ebx],bp
  437c31:	mov    edx,0xeb27e731
  437c36:	cmp    ebp,DWORD PTR [ebx+0x6d]
  437c39:	ins    BYTE PTR es:[edi],dx
  437c3a:	fimul  WORD PTR [eax*4-0x7490b91]
  437c41:	das    
  437c42:	(bad)  
  437c44:	adc    al,0x27
  437c46:	mov    ah,BYTE PTR [esi+esi*8+0x142d77e5]
  437c4d:	je     0x437c3c
  437c4f:	fist   DWORD PTR [ebx-0x34bdef80]
  437c55:	stos   BYTE PTR es:[edi],al
  437c56:	mov    dl,0x3
  437c58:	das    
  437c59:	sti    
  437c5a:	in     eax,dx
  437c5b:	xchg   esi,eax
  437c5c:	sub    DWORD PTR [eax+ebx*2+0x4181eb69],0xa29953bc
  437c67:	sub    bh,cl
  437c69:	out    0x54,eax
  437c6b:	sar    ebp,0xd
  437c6e:	je     0x437cd6
  437c70:	mov    eax,ds:0x4887bfa2
  437c75:	ja     0x437c24
  437c77:	mov    ebp,0xd32dda1b
  437c7c:	call   0x52be:0x4452b6f4
  437c83:	into   
  437c84:	xor    BYTE PTR [ebx+0x4f99a3fb],dl
  437c8a:	push   0x53
  437c8c:	jl     0x437c83
  437c8e:	test   BYTE PTR [edi+ebp*8+0x5c],0x86
  437c93:	inc    ebp
  437c94:	push   es
  437c95:	pop    ds
  437c96:	push   0x6598c562
  437c9b:	add    BYTE PTR [edi],bh
  437c9d:	arpl   WORD PTR [eax+ecx*8+0x38d55ab1],di
  437ca4:	ror    ecx,1
  437ca6:	fmul   DWORD PTR [ecx]
  437ca8:	out    dx,al
  437ca9:	cdq    
  437caa:	rcl    eax,1
  437cac:	je     0x437cd9
  437cae:	and    al,0x96
  437cb0:	jnp    0x437cac
  437cb2:	xlat   BYTE PTR ds:[ebx]
  437cb3:	enter  0x47b3,0xf2
  437cb7:	(bad)  
  437cb8:	cli    
  437cb9:	mov    DWORD PTR [edx-0x76d0797d],esp
  437cbf:	retf   
  437cc0:	pminub mm0,mm1
  437cc3:	rcl    DWORD PTR [eax-0x16cb8e0e],0xde
  437cca:	hlt    
  437ccb:	imul   esp,DWORD PTR [ebx-0xaed0fe2],0xffffffac
  437cd2:	mov    al,0x4a
  437cd4:	jbe    0x437d4c
  437cd6:	imul   al
  437cd8:	loopne 0x437cc4
  437cda:	inc    ecx
  437cdb:	ins    DWORD PTR es:[edi],dx
  437cdc:	push   ecx
  437cdd:	sar    al,1
  437cdf:	sbb    al,0xb7
  437ce1:	pop    ebx
  437ce2:	repz pop edi
  437ce4:	call   0xb6d2:0xdaf629a6
  437ceb:	fidivr DWORD PTR [ebx+eiz*2-0x545ca58e]
  437cf2:	lea    ebp,[eax+0x5f]
  437cf5:	xor    bh,dl
  437cf7:	mov    ebp,0x15faf580
  437cfc:	or     BYTE PTR [ecx+0x48],dl
  437cff:	(bad)
  437d02:	lods   eax,DWORD PTR ds:[esi]
  437d03:	(bad)  
  437d04:	aam    0x88
  437d06:	out    0xa7,al
  437d08:	in     eax,0x16
  437d0a:	pop    edi
  437d0b:	mov    ebp,0xce5e282f
  437d10:	rcr    BYTE PTR [ebx],cl
  437d12:	pop    ebx
  437d13:	in     eax,dx
  437d14:	jmp    0x437d0d
  437d16:	mov    ah,0xc1
  437d18:	adc    BYTE PTR [ebx+0x2e1663a5],al
  437d1e:	cmp    esi,DWORD PTR [eax+0x63]
  437d21:	or     BYTE PTR [ecx],al
  437d23:	push   cs
  437d24:	pop    eax
  437d25:	cmp    BYTE PTR [ebx+0xdbeec4e],bh
  437d2b:	dec    eax
  437d2c:	mov    WORD PTR [ecx+ecx*2+0x1b454cc8],0x41df
  437d36:	jbe    0x437daa
  437d38:	add    esi,ebx
  437d3a:	jp     0x437db2
  437d3c:	ins    BYTE PTR es:[edi],dx
  437d3d:	jb     0x437d3f
  437d3f:	mov    eax,ds:0x8a177aeb
  437d44:	test   DWORD PTR [edx],edx
  437d46:	jmp    0xd7277f5b
  437d4b:	sub    dh,BYTE PTR [esi-0x23]
  437d4e:	cwde   
  437d4f:	jne    0x437d33
  437d51:	or     esi,DWORD PTR [ebp+0x2be8549b]
  437d57:	shl    BYTE PTR [ebp+0x13],0xe6
  437d5b:	sbb    eax,0x565a407a
  437d60:	mov    edx,0x9568a34d
  437d65:	fst    DWORD PTR [eax+0x9]
  437d68:	jge    0x437d6b
  437d6a:	icebp  
  437d6b:	arpl   WORD PTR [edi+0xd],bx
  437d6e:	sbb    BYTE PTR [edi],ah
  437d70:	xchg   ebp,eax
  437d71:	and    ebp,DWORD PTR [ecx-0x51e11052]
  437d77:	push   es
  437d78:	mov    bh,0xee
  437d7a:	dec    ebx
  437d7b:	sub    edx,DWORD PTR [ebp-0x52b8b91b]
  437d81:	out    dx,eax
  437d82:	jbe    0x437d95
  437d84:	mov    ebp,0xafd9b884
  437d89:	pop    ds
  437d8a:	test   al,0x38
  437d8c:	and    edi,edi
  437d8e:	pop    esi
  437d8f:	loope  0x437d9b
  437d91:	jge    0x437d26
  437d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d94:	scas   eax,DWORD PTR es:[edi]
  437d95:	ja     0x437dad
  437d97:	adc    bl,BYTE PTR [esi-0xd9aec8d]
  437d9d:	or     BYTE PTR ds:0x60656410,cl
  437da3:	sub    eax,0x441a4f42
  437da8:	bound  edx,QWORD PTR [ebx-0x57abc22b]
  437dae:	fild   QWORD PTR [edx+eiz*4-0x6d]
  437db2:	stc    
  437db3:	out    0x81,al
  437db5:	push   edi
  437db6:	jecxz  0x437db1
  437db8:	cld    
  437db9:	add    BYTE PTR [edx+0x76],0x28
  437dbd:	leave  
  437dbe:	jp     0x437d67
  437dc0:	pushf  
  437dc1:	pusha  
  437dc2:	cmp    al,0xcd
  437dc4:	mov    bl,0xe1
  437dc6:	xor    BYTE PTR [ebp+0x4e],dh
  437dc9:	sub    al,0x4a
  437dcb:	lods   eax,DWORD PTR ds:[esi]
  437dcc:	sub    eax,0xc590ff4c
  437dd1:	call   0xb8df:0xdbcc612d
  437dd8:	aas    
  437dd9:	(bad)  
  437dda:	fsubr  DWORD PTR [esi+0x1c]
  437ddd:	or     al,0xb7
  437ddf:	enter  0xf44f,0xbb
  437de3:	and    dl,cl
  437de5:	jae    0x437dc4
  437de7:	in     al,0xba
  437de9:	rcr    DWORD PTR [edx+edx*2],cl
  437dec:	lods   al,BYTE PTR ds:[esi]
  437ded:	(bad)  
  437dee:	in     eax,0x51
  437df0:	sbb    DWORD PTR [edi-0x7e],ebp
  437df3:	mov    ah,0xee
  437df5:	(bad)  
  437df6:	aas    
  437df7:	(bad)  
  437df9:	ds (bad) 
  437dfb:	and    BYTE PTR [edi+0x3f1172cd],0x6e
  437e02:	adc    eax,0x9f3c6cf1
  437e07:	rol    BYTE PTR [ebx-0x3a9e5aeb],1
  437e0d:	rcr    BYTE PTR [ebx+0x4f798a41],0xdd
  437e14:	cmp    al,0x61
  437e16:	mov    al,0x1e
  437e18:	add    eax,0xb4543e84
  437e1d:	repz scas eax,DWORD PTR es:[di]
  437e20:	sbb    esp,ecx
  437e22:	jno    0x437e48
  437e24:	(bad)  
  437e25:	push   ss
  437e26:	imul   ebp,ecx,0x817b1b9a
  437e2c:	push   edi
  437e2d:	(bad)  
  437e2e:	dec    ebx
  437e2f:	jmp    0x92ac0947
  437e34:	xor    dl,bl
  437e36:	mov    esp,0x96b83285
  437e3b:	dec    edi
  437e3c:	pop    ecx
  437e3d:	mov    esi,DWORD PTR [esi-0x6064d1a2]
  437e43:	xor    al,0x2d
  437e45:	test   BYTE PTR [esi],0xbf
  437e48:	pop    es
  437e49:	pop    es
  437e4a:	xchg   DWORD PTR [eax],edi
  437e4c:	pusha  
  437e4d:	cmp    eax,0x81b615c8
  437e53:	inc    edi
  437e54:	ins    DWORD PTR es:[edi],dx
  437e55:	clc    
  437e56:	mov    ebp,0x30fe4f10
  437e5b:	retf   0xbdf5
  437e5e:	pop    edi
  437e5f:	add    al,BYTE PTR [ebx+0xa]
  437e62:	inc    BYTE PTR [ebp-0x28]
  437e65:	mov    bl,0xe0
  437e67:	out    0x9e,al
  437e69:	push   ss
  437e6a:	ja     0x437e09
  437e6c:	push   esp
  437e6d:	in     eax,0xef
  437e6f:	not    DWORD PTR [esi-0x5e]
  437e72:	or     bh,BYTE PTR [edi-0x61993ab0]
  437e78:	jp     0x437e5f
  437e7a:	call   0xecd4c7b5
  437e7f:	neg    BYTE PTR [edx-0x69]
  437e82:	stos   BYTE PTR es:[edi],al
  437e83:	push   0x6fb3dd21
  437e88:	mov    ?,WORD PTR [ebp+esi*8-0x55]
  437e8c:	pop    ebx
  437e8d:	in     eax,dx
  437e8e:	enter  0xcaa5,0x12
  437e92:	and    edx,DWORD PTR [ebx-0x43b67338]
  437e98:	add    eax,0x7d33ebc6
  437e9d:	and    edx,DWORD PTR [edx+0x152407d8]
  437ea3:	cmp    edi,esp
  437ea5:	out    dx,al
  437ea6:	sbb    BYTE PTR [esp+edx*4],cl
  437ea9:	inc    eax
  437eaa:	int    0xa3
  437eac:	outs   dx,DWORD PTR ds:[esi]
  437ead:	loop   0x437f05
  437eaf:	lea    esp,[esi]
  437eb1:	int3   
  437eb2:	lock icebp 
  437eb4:	clc    
  437eb5:	pop    esp
  437eb6:	data16 mov cl,0xd4
  437eb9:	imul   edi,DWORD PTR [edx-0x51ce8342],0x2c
  437ec0:	(bad)  
  437ec1:	sbb    eax,0x2425b997
  437ec6:	outs   dx,BYTE PTR ds:[esi]
  437ec7:	mov    esp,0x266d137f
  437ecc:	fild   DWORD PTR [edi]
  437ece:	(bad)  
  437ecf:	outs   dx,DWORD PTR ds:[esi]
  437ed0:	cmp    esp,DWORD PTR [si+0x6e]
  437ed4:	and    bl,dh
  437ed6:	mov    edx,0xf27ae90a
  437edb:	call   FWORD PTR [edx+ebx*2]
  437ede:	push   esi
  437edf:	outs   dx,BYTE PTR ds:[esi]
  437ee0:	(bad)  
  437ee1:	sbb    eax,0x99507af
  437ee6:	hlt    
  437ee7:	push   ds
  437ee8:	fild   WORD PTR [si]
  437eeb:	ret    
  437eec:	frstor [edx-0x2f7691b]
  437ef2:	mov    edx,0x7c63eb21
  437ef7:	pushf  
  437ef8:	scas   al,BYTE PTR es:[edi]
  437ef9:	push   eax
  437efa:	jnp    0x437f47
  437efc:	jno    0x437f51
  437efe:	jnp    0x437eb3
  437f00:	(bad)  
  437f02:	imul   esp,DWORD PTR [esp-0x4e],0x527afa7e
  437f0a:	jns    0x437ef1
  437f0c:	outs   dx,DWORD PTR ds:[esi]
  437f0d:	cwde   
  437f0e:	je     0x437f1a
  437f10:	(bad)  
  437f11:	(bad)  [ecx-0x4affc677]
  437f17:	jnp    0x437f03
  437f19:	in     eax,0x44
  437f1b:	sbb    DWORD PTR [ecx+ebp*4-0x7ad4f7a2],edx
  437f22:	pushf  
  437f23:	xchg   BYTE PTR [ebp+0x64b8fb18],bh
  437f29:	(bad)  [ebx-0x68d9a7d7]
  437f2f:	jb     0x437f42
  437f31:	pop    DWORD PTR [ebp+0x66]
  437f34:	jp     0x437f98
  437f36:	fidiv  WORD PTR [edi+0x4c3fc102]
  437f3c:	xlat   BYTE PTR ds:[ebx]
  437f3d:	cmp    ah,0x1c
  437f40:	or     ebx,DWORD PTR [ebp+0x7]
  437f43:	les    esi,FWORD PTR [esi-0x1e4fc032]
  437f49:	cmp    bl,al
  437f4b:	mov    esp,0x218096fd
  437f50:	cmp    esp,eax
  437f52:	out    0xd1,al
  437f54:	sub    ebx,DWORD PTR [ebx+0x65]
  437f57:	xchg   DWORD PTR [edi],ebp
  437f59:	jle    0x437f36
  437f5b:	pop    eax
  437f5c:	sbb    BYTE PTR [ecx],0xd4
  437f5f:	lahf   
  437f60:	lock adc dl,BYTE PTR [ebx]
  437f63:	clc    
  437f64:	xor    edi,ebx
  437f66:	push   eax
  437f67:	push   ecx
  437f68:	adc    BYTE PTR [esi],ah
  437f6a:	adc    eax,0x41aa415b
  437f6f:	dec    DWORD PTR [ebx]
  437f71:	sub    al,0x43
  437f73:	inc    ebx
  437f74:	mov    al,0x45
  437f76:	shl    BYTE PTR ds:0x39ccdc6c,0x8b
  437f7d:	out    dx,al
  437f7e:	inc    edi
  437f7f:	push   eax
  437f80:	push   es
  437f81:	and    DWORD PTR [edx-0x3efcf8cc],edi
  437f87:	dec    edi
  437f88:	mov    ?,WORD PTR [ebx+0x6f]
  437f8b:	stc    
  437f8c:	sbb    ecx,DWORD PTR [ecx-0x66]
  437f8f:	mov    ecx,0xedebfe76
  437f94:	xchg   DWORD PTR [ecx-0x41416834],esp
  437f9a:	xor    DWORD PTR [edx],ebp
  437f9c:	arpl   WORD PTR [esi],sp
  437f9e:	les    esp,FWORD PTR [eax]
  437fa0:	mov    dl,0xdd
  437fa2:	add    al,0x4b
  437fa4:	ja     0x437f88
  437fa6:	scas   eax,DWORD PTR es:[edi]
  437fa7:	or     bl,BYTE PTR ds:0x325fcc90
  437fad:	sbb    bh,BYTE PTR [ecx]
  437faf:	fstp   DWORD PTR [ecx]
  437fb1:	daa    
  437fb2:	fild   WORD PTR [ebp+ebx*4+0x58]
  437fb6:	(bad)  
  437fb7:	cli    
  437fb8:	xchg   ecx,eax
  437fb9:	push   ebx
  437fba:	dec    ebp
  437fbb:	addr16 xor al,0x37
  437fbe:	mov    cl,0xf5
  437fc0:	pop    esp
  437fc1:	pop    es
  437fc2:	jle    0x437f86
  437fc4:	inc    ebp
  437fc5:	repz jle 0x437f6e
  437fc8:	pop    DWORD PTR ds:0xa556485c
  437fce:	aas    
  437fcf:	jp     0x437ff0
  437fd1:	sar    ch,0x30
  437fd4:	jne    0x43800c
  437fd6:	jg     0x437f84
  437fd8:	sub    edx,DWORD PTR [edx-0x62d002d9]
  437fde:	fwait
  437fdf:	pushf  
  437fe0:	pop    ds
  437fe1:	xchg   ecx,eax
  437fe2:	les    esi,FWORD PTR [ecx+0xb7fb407]
  437fe8:	mov    ecx,0xa1b9224d
  437fed:	hlt    
  437fee:	xor    ebx,esp
  437ff0:	mov    dl,0x58
  437ff2:	lea    ebp,[ebx]
  437ff4:	nop
  437ff5:	imul   esi,DWORD PTR [eax+0x6e87ce04],0x920a385e
  437fff:	fisub  DWORD PTR [edi-0x421e469]
  438005:	stc    
  438006:	imul   esp,DWORD PTR ds:0xb59c0706,0xa6cddd74
  438010:	imul   edx,DWORD PTR [esi-0x7e],0x75d5ea47
  438017:	mov    bl,0x81
  438019:	dec    esp
  43801a:	(bad)  
  43801b:	call   0x4912c9d2
  438020:	mov    WORD PTR cs:[edi],es
  438023:	mov    ch,0xc9
  438025:	jmp    0x7ad96d33
  43802a:	rcl    ebx,0x22
  43802d:	mov    dl,0xba
  43802f:	pop    ds
  438030:	ret    0xfa2d
  438033:	mov    eax,0x2b860f06
  438038:	sub    ah,BYTE PTR [ecx-0x65acdfe1]
  43803e:	cmp    BYTE PTR [ecx-0x4f],0xbd
  438042:	push   0x1aed97ab
  438047:	cmp    eax,0x117addb8
  43804c:	jo     0x4380b5
  43804e:	cmp    BYTE PTR [edx+ecx*4+0x60],0xf4
  438053:	push   0xe
  438055:	mov    ch,0xf9
  438057:	hlt    
  438058:	aad    0xc8
  43805a:	dec    esp
  43805b:	call   0x66ad:0x64b843ac
  438062:	pop    ebp
  438063:	push   0xffffffad
  438065:	out    dx,eax
  438066:	and    cl,BYTE PTR [ecx]
  438068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438069:	int3   
  43806a:	add    BYTE PTR [esi],ch
  43806c:	add    esp,edx
  43806e:	dec    ecx
  43806f:	fmul   QWORD PTR [eax]
  438071:	(bad)  
  438072:	and    DWORD PTR [esp+eiz*2],ebx
  438075:	or     ch,BYTE PTR [edx-0x38]
  438078:	mov    ?,eax
  43807a:	aaa    
  43807b:	jns    0x438028
  43807d:	ds inc sp
  438080:	aam    0x2d
  438082:	int3   
  438083:	std    
  438084:	div    BYTE PTR [ebx+0x26]
  438087:	scas   al,BYTE PTR es:[edi]
  438088:	mov    cl,0x41
  43808a:	xor    al,0x16
  43808c:	xor    eax,0x27a72d6
  438091:	mov    ebp,0x3de534ac
  438096:	mov    al,ds:0x7b10f742
  43809b:	out    dx,eax
  43809c:	out    0x7,al
  43809e:	dec    esi
  43809f:	xchg   esi,eax
  4380a0:	pop    esp
  4380a1:	jo     0x43808c
  4380a3:	dec    esi
  4380a4:	mov    ebp,DWORD PTR [ecx+0x6c]
  4380a7:	dec    esi
  4380a8:	aad    0x3
  4380aa:	hlt    
  4380ab:	cmp    cl,BYTE PTR [ecx-0x65]
  4380ae:	mov    bh,0xcb
  4380b0:	or     eax,0x43a24cfe
  4380b5:	push   edi
  4380b6:	adc    DWORD PTR [edx-0x74],ebp
  4380b9:	mov    al,0x9d
  4380bb:	cmp    al,0x10
  4380bd:	mov    dl,0x6c
  4380bf:	jb     0x438095
  4380c1:	and    esi,DWORD PTR [ecx]
  4380c3:	popf   
  4380c4:	je     0x438073
  4380c6:	xchg   ebx,edx
  4380c8:	push   ebx
  4380c9:	add    BYTE PTR [ebx-0x15],dl
  4380cc:	retf   0x2db3
  4380cf:	jbe    0x438103
  4380d1:	mov    edi,0x6f044d32
  4380d6:	retf   
  4380d7:	dec    edi
  4380d8:	jg     0x438111
  4380da:	mov    bh,0x6
  4380dc:	mov    bl,0x9d
  4380de:	lds    esp,FWORD PTR [edx-0x1d]
  4380e1:	cmc    
  4380e2:	jnp    0x4380f1
  4380e4:	adc    dh,BYTE PTR [ebx+0x5f]
  4380e7:	stc    
  4380e8:	stos   DWORD PTR es:[edi],eax
  4380e9:	sbb    esp,DWORD PTR [edi]
  4380eb:	cmp    DWORD PTR [ebp+0x5d73d07c],esp
  4380f1:	dec    ebx
  4380f2:	push   cs
  4380f3:	ins    BYTE PTR es:[edi],dx
  4380f4:	loop   0x43810f
  4380f6:	dec    esi
  4380f7:	(bad)  
  4380f8:	jmp    0x4380db
  4380fa:	mov    DWORD PTR [eax-0x6a1e724e],esp
  438100:	or     DWORD PTR [edi],edi
  438102:	test   al,0xb4
  438104:	sub    DWORD PTR [edx],ebp
  438106:	xor    eax,0x73eaf359
  43810b:	enter  0xd40,0x91
  43810f:	adc    eax,0x56
  438112:	mov    bh,dl
  438114:	ret    
  438115:	xor    eax,0xbf98662e
  43811a:	pop    esi
  43811b:	iret   
  43811c:	pop    ebp
  43811d:	shl    BYTE PTR [esi-0x3cf18951],cl
  438123:	push   ds
  438124:	pop    esp
  438125:	sub    eax,0x66569567
  43812a:	push   ebx
  43812b:	mov    al,0xba
  43812d:	mov    edx,0xf652f229
  438132:	mov    ds:0x9b28e461,al
  438137:	in     al,0x74
  438139:	rcl    DWORD PTR [ebx-0x8943c14],cl
  43813f:	out    dx,eax
  438140:	jo     0x438140
  438142:	arpl   WORD PTR ds:0xff18624f,bp
  438148:	jp     0x438178
  43814a:	xchg   ebp,eax
  43814b:	sbb    DWORD PTR ds:0x84560d91,edi
  438151:	or     eax,DWORD PTR [ebp+0x58748716]
  438157:	arpl   WORD PTR [esi],di
  438159:	ds sar esi,cl
  43815c:	jle    0x4380f1
  43815e:	mov    al,0x2a
  438160:	jmp    0x4381ba
  438162:	ins    BYTE PTR es:[edi],dx
  438163:	test   al,0xd9
  438165:	mov    al,BYTE PTR [edi+0x19beaf4c]
  43816b:	test   eax,0xff0421de
  438170:	push   cs
  438171:	pop    edi
  438172:	xor    esi,0xffffffa9
  438175:	inc    ecx
  438176:	jo     0x438183
  438178:	cmp    edi,DWORD PTR [edx]
  43817a:	mov    edi,0xd2b100d2
  43817f:	data16 adc al,dl
  438182:	fadd   DWORD PTR [esi-0x755f5877]
  438188:	lods   eax,DWORD PTR ds:[esi]
  438189:	scas   al,BYTE PTR es:[edi]
  43818a:	xchg   edx,eax
  43818b:	shl    DWORD PTR [esi+eiz*8],cl
  43818e:	icebp  
  43818f:	or     al,0xdc
  438191:	mov    esi,0x29bae772
  438196:	xlat   BYTE PTR ds:[ebx]
  438197:	in     eax,0xd0
  438199:	(bad)  
  43819a:	aad    0x99
  43819c:	mov    ds:0x776e2791,eax
  4381a1:	mov    dh,0x8e
  4381a3:	popf   
  4381a4:	ret    0xbc3b
  4381a7:	jne    0x43821e
  4381a9:	cli    
  4381aa:	xchg   edx,eax
  4381ab:	inc    esp
  4381ac:	inc    esp
  4381ad:	xlat   BYTE PTR ds:[ebx]
  4381ae:	popa   
  4381af:	push   0x4c
  4381b1:	ficom  DWORD PTR ds:0xbb528432
  4381b7:	xor    al,0x2f
  4381b9:	or     eax,0x74f3040a
  4381be:	fsubr  DWORD PTR [edx+0x5a1053a5]
  4381c4:	pop    esi
  4381c5:	mov    ?,WORD PTR ds:0xfa7c7afa
  4381cb:	add    dl,BYTE PTR [ecx+0x69863e2c]
  4381d1:	pop    eax
  4381d2:	xor    al,0xbc
  4381d4:	and    al,0xee
  4381d6:	pop    ecx
  4381d7:	arpl   WORD PTR [di],si
  4381da:	nop
  4381db:	push   ebp
  4381dc:	out    dx,al
  4381dd:	push   ebx
  4381de:	fadd   DWORD PTR [edx+0x54]
  4381e1:	sbb    eax,0xe5e656e
  4381e6:	jmp    0x6c1f:0xf431655
  4381ed:	sub    BYTE PTR [edi],bl
  4381ef:	push   ss
  4381f0:	data16 cmp al,0xd0
  4381f3:	or     eax,0x447c7d76
  4381f8:	jecxz  0x438220
  4381fa:	pop    es
  4381fb:	out    0x74,eax
  4381fd:	in     al,0x36
  4381ff:	mov    al,0x32
  438201:	pop    edx
  438202:	dec    esi
  438203:	and    esp,ecx
  438205:	jb     0x438257
  438207:	(bad)  
  438209:	fisttp WORD PTR [edx]
  43820b:	mov    ebx,0x8e42e9b7
  438210:	(bad)  [ebp-0x674c4f38]
  438216:	inc    eax
  438217:	jle    0x43825d
  438219:	hlt    
  43821a:	sub    DWORD PTR ds:0xda9fab31,eax
  438220:	cdq    
  438221:	jmp    0x7807:0x3c48db7f
  438228:	jmp    0x438281
  43822a:	xchg   edi,eax
  43822b:	and    BYTE PTR [edi],bl
  43822d:	sar    BYTE PTR [edx],cl
  43822f:	mov    ebx,0x2e891b3e
  438234:	outs   dx,DWORD PTR ds:[esi]
  438235:	ins    BYTE PTR es:[edi],dx
  438236:	xor    esp,eax
  438238:	es push 0x6c
  43823b:	fcomp  DWORD PTR [edi-0x1]
  43823e:	test   al,0x1b
  438240:	pop    esi
  438241:	outs   dx,DWORD PTR ds:[esi]
  438242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438243:	cmp    ch,BYTE PTR [esp+ebx*2]
  438246:	sub    eax,DWORD PTR [esi]
  438248:	sub    al,0xab
  43824a:	ret    0xeeec
  43824d:	jg     0x43824b
  43824f:	xor    bh,BYTE PTR [ebp+0x58]
  438252:	scas   eax,DWORD PTR es:[edi]
  438253:	cmp    eax,0x459cd838
  438258:	inc    ebx
  438259:	fistp  WORD PTR [edi+0x6a]
  43825c:	out    0x14,al
  43825e:	(bad)  
  43825f:	popa   
  438260:	xchg   ebx,eax
  438261:	mov    ecx,0x394479b5
  438266:	ficomp WORD PTR ds:0x90adfd03
  43826c:	and    esi,esi
  43826e:	xor    al,BYTE PTR [ecx]
  438270:	fdiv   DWORD PTR [esi+0x504bfb66]
  438276:	fwait
  438277:	ja     0x438253
  438279:	jmp    0x89bea069
  43827e:	mov    edx,0xc0659c42
  438283:	mov    dh,0x7c
  438285:	outs   dx,DWORD PTR ds:[esi]
  438286:	or     bh,bh
  438288:	imul   edx,DWORD PTR ds:[ecx+0x7e],0xffffff9e
  43828d:	icebp  
  43828e:	and    eax,0x562bbce3
  438293:	jns    0x438279
  438295:	pop    ecx
  438296:	je     0x43826a
  438298:	sub    al,0x67
  43829a:	sub    al,BYTE PTR [edx]
  43829c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43829d:	inc    edi
  43829e:	xlat   BYTE PTR ds:[ebx]
  43829f:	xor    al,bl
  4382a1:	arpl   WORD PTR [edi-0xe],bx
  4382a4:	loop   0x438287
  4382a6:	aaa    
  4382a7:	push   edi
  4382a8:	jmp    0xb78a:0x1887b069
  4382af:	shr    BYTE PTR [esi+0xb6aa1ed],0xcc
  4382b6:	test   BYTE PTR [edx-0x76],dh
  4382b9:	adc    al,0xd9
  4382bb:	add    DWORD PTR [eax-0x16d35292],ecx
  4382c1:	loope  0x4382f8
  4382c3:	js     0x438334
  4382c5:	cmp    BYTE PTR ds:0x9e52a3a9,al
  4382cb:	inc    esp
  4382cc:	add    eax,0xe829a781
  4382d1:	add    eax,0xf71e8702
  4382d6:	loopne 0x43832b
  4382d8:	pop    esp
  4382d9:	fstp   QWORD PTR [edi+0x7f6f2a5f]
  4382df:	iret   
  4382e0:	xor    eax,0x48328852
  4382e5:	xor    BYTE PTR [ebx],bl
  4382e7:	cdq    
  4382e8:	push   ecx
  4382e9:	stos   BYTE PTR es:[edi],al
  4382ea:	mov    bh,0x32
  4382ec:	mov    cs,WORD PTR ds:0x92bad3f0
  4382f2:	or     al,0x12
  4382f4:	push   ds
  4382f5:	xchg   ebx,eax
  4382f6:	push   ebp
  4382f7:	sub    eax,0x54eace2a
  4382fc:	leave  
  4382fd:	pop    es
  4382fe:	test   al,0xc8
  438300:	inc    ecx
  438301:	iret   
  438302:	push   0xffffff82
  438304:	mov    ecx,0x5e714b99
  438309:	adc    BYTE PTR [edi+eiz*2],0xef
  43830d:	sar    BYTE PTR [ebx+0x8],1
  438310:	jno    0x438368
  438312:	or     eax,0x2006aeb2
  438317:	cmp    ebp,esi
  438319:	or     eax,0xd0756127
  43831e:	call   0x3deb1d91
  438323:	mov    al,ds:0xfecad383
  438328:	add    dl,bh
  43832a:	mov    edx,0xacaa68f9
  43832f:	scas   eax,DWORD PTR es:[edi]
  438330:	cmp    BYTE PTR [ecx+ecx*8-0x15],0x45
  438335:	xor    al,0x7a
  438337:	mov    eax,0x8b7d043a
  43833c:	pop    ebx
  43833d:	icebp  
  43833e:	aaa    
  43833f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438340:	ror    ebp,0xec
  438343:	fs mov al,0x5f
  438346:	lods   eax,DWORD PTR ds:[esi]
  438347:	adc    bl,BYTE PTR [edx+0x36]
  43834a:	push   esp
  43834b:	mov    al,ds:0xac3579fc
  438350:	sbb    ah,al
  438352:	inc    edi
  438353:	sahf   
  438354:	out    dx,eax
  438355:	retf   0x6ff7
  438358:	inc    ecx
  438359:	test   DWORD PTR [edi-0x47],edi
  43835c:	pop    ebx
  43835d:	cmp    BYTE PTR [ebx-0xe],ch
  438360:	leave  
  438361:	push   ebp
  438362:	(bad)  
  438363:	ds pop edx
  438365:	mov    ds:0xa5b1860a,ax
  43836b:	or     eax,DWORD PTR [esi]
  43836d:	jmp    0xa534:0x54857540
  438374:	pop    edx
  438375:	repnz push ebx
  438377:	ds jo  0x438316
  43837a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43837b:	cmp    eax,0xf4624944
  438380:	shr    BYTE PTR [eax+0x8],cl
  438383:	inc    ebp
  438384:	lahf   
  438385:	sub    al,BYTE PTR [ebp-0x71f3d5cf]
  43838b:	fstp   QWORD PTR [eax-0x6a109c3c]
  438391:	leave  
  438392:	xor    ebx,DWORD PTR [esi-0x2e38afab]
  438398:	div    BYTE PTR [eax]
  43839a:	or     BYTE PTR [eax+edx*2],bl
  43839d:	mov    eax,ds:0x1206fad1
  4383a2:	fs cmp al,0x41
  4383a5:	jecxz  0x4383b3
  4383a7:	cmp    al,0x35
  4383a9:	sti    
  4383aa:	into   
  4383ab:	ins    BYTE PTR es:[edi],dx
  4383ac:	iret   
  4383ad:	sbb    cl,BYTE PTR [ebx-0x31]
  4383b0:	sahf   
  4383b1:	inc    ebx
  4383b2:	loope  0x4383d0
  4383b4:	mov    edx,0xa39e1589
  4383b9:	loope  0x4383a9
  4383bb:	xor    bh,BYTE PTR [esi-0x7f]
  4383be:	fistp  WORD PTR [edi-0x6f]
  4383c1:	xchg   BYTE PTR [eax],ch
  4383c3:	inc    ebp
  4383c4:	outs   dx,BYTE PTR ds:[esi]
  4383c5:	iret   
  4383c6:	loopne 0x438355
  4383c8:	pop    ebx
  4383c9:	and    al,BYTE PTR [esi]
  4383cb:	pop    esi
  4383cc:	jmp    0x438405
  4383ce:	sbb    BYTE PTR [esi-0x4d40eec],bl
  4383d4:	inc    ebx
  4383d5:	mov    cl,0xe5
  4383d7:	int3   
  4383d8:	mov    eax,ds:0x265088ec
  4383dd:	push   es
  4383de:	inc    eax
  4383df:	shl    DWORD PTR [ebx+ebx*2],cl
  4383e2:	int    0xcc
  4383e4:	outs   dx,DWORD PTR ds:[esi]
  4383e5:	fidivr WORD PTR [edx-0x12aea06e]
  4383eb:	xor    eax,0x779055ab
  4383f0:	repnz xor dh,BYTE PTR [ebx]
  4383f3:	sub    edi,DWORD PTR [ebp+0x27]
  4383f6:	jo     0x438411
  4383f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4383f9:	dec    ecx
  4383fa:	(bad)  
  4383fc:	sbb    bh,BYTE PTR [ecx]
  4383fe:	das    
  4383ff:	sub    eax,0x9771afc9
  438404:	ficom  WORD PTR [esi-0x65db6b6f]
  43840a:	mov    ds:0x3e29a1b5,eax
  43840f:	icebp  
  438410:	ja     0x4383da
  438412:	cmovge ebp,DWORD PTR [ebx]
  438415:	jo     0x438408
  438417:	and    eax,0x43ce9a3b
  43841c:	sbb    cl,dh
  43841e:	mov    WORD PTR ds:[edi],es
  438421:	cmc    
  438422:	inc    DWORD PTR [eax+0x4b1a770e]
  438428:	xor    BYTE PTR [eax+0x2c],ah
  43842b:	xchg   esi,eax
  43842c:	ret    0xbe8e
  43842f:	ret    
  438430:	jecxz  0x4383ca
  438432:	(bad)  
  438433:	xlat   BYTE PTR ds:[ebx]
  438434:	mov    DWORD PTR [esi+0x51aac616],ebp
  43843a:	inc    eax
  43843b:	sub    al,0x10
  43843d:	adc    DWORD PTR [ecx+0x6a],edi
  438440:	loop   0x438455
  438442:	inc    edi
  438443:	out    dx,eax
  438444:	push   ebx
  438445:	ret    0x32b1
  438448:	stos   BYTE PTR es:[edi],al
  438449:	mov    edi,DWORD PTR [esi]
  43844b:	leave  
  43844c:	xor    al,0xe0
  43844e:	push   edi
  43844f:	xchg   ebx,ebp
  438451:	or     eax,DWORD PTR [ecx+ebp*1-0x12]
  438455:	frstor [ebx+0x16]
  438458:	pop    es
  438459:	leave  
  43845a:	push   esi
  43845b:	add    al,BYTE PTR [ebx]
  43845d:	mov    dh,0xe5
  43845f:	cmc    
  438460:	add    BYTE PTR [edi-0x33f2192e],dl
  438466:	nop
  438467:	retf   0x7d0
  43846a:	sbb    edx,eax
  43846c:	imul   ch
  43846e:	inc    esp
  43846f:	cwde   
  438470:	mov    esi,DWORD PTR [ebp+0x168f06ea]
  438476:	addr16 jle 0x438484
  438479:	leave  
  43847a:	lods   al,BYTE PTR ds:[esi]
  43847b:	aas    
  43847c:	cli    
  43847d:	and    eax,edi
  43847f:	cmp    BYTE PTR [edx-0x69e1266],bl
  438485:	jae    0x43841e
  438487:	mov    edx,0xd8845941
  43848c:	inc    esp
  43848d:	sub    eax,0x516d4472
  438492:	sbb    al,0x71
  438494:	sti    
  438495:	sub    BYTE PTR [ecx-0x36],al
  438498:	lods   eax,DWORD PTR ds:[esi]
  438499:	(bad)
  43849c:	pop    esi
  43849d:	jle    0x438485
  43849f:	dec    ecx
  4384a0:	dec    edi
  4384a1:	aad    0xd6
  4384a3:	jb     0x43845a
  4384a5:	or     BYTE PTR [ebx+ebp*2],ch
  4384a8:	pop    eax
  4384a9:	iret   
  4384aa:	adc    eax,0x76d79819
  4384af:	test   eax,0x16f8db37
  4384b4:	jmp    0x65bb:0xfefa269f
  4384bb:	js     0x43843f
  4384bd:	pop    eax
  4384be:	xor    DWORD PTR [ebx+eax*4+0x2f],edi
  4384c2:	add    bl,BYTE PTR [edx]
  4384c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4384c5:	sbb    edi,edx
  4384c7:	push   ecx
  4384c8:	and    ah,BYTE PTR [esi+0x59]
  4384cb:	leave  
  4384cc:	fimul  DWORD PTR [esi-0x40365fbc]
  4384d2:	add    DWORD PTR [ebx],0xffffffb6
  4384d5:	sahf   
  4384d6:	push   0xffffff95
  4384d8:	xchg   edx,eax
  4384d9:	jne    0x438508
  4384db:	fcom   st(7)
  4384dd:	std    
  4384de:	pop    edx
  4384df:	je     0x438464
  4384e1:	push   ebp
  4384e2:	sub    DWORD PTR [edx-0x766a39a9],ebp
  4384e8:	jb     0x438496
  4384ea:	loope  0x438562
  4384ec:	pop    ds
  4384ed:	xor    al,0xbe
  4384ef:	adc    eax,0x14de109c
  4384f4:	retf   
  4384f5:	div    DWORD PTR [esi+0x17]
  4384f8:	dec    esi
  4384f9:	and    al,0x9d
  4384fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4384fc:	mov    edi,0x88adec99
  438501:	dec    ebp
  438502:	cs aad 0x0
  438505:	adc    al,0x84
  438507:	push   ebp
  438508:	dec    ebp
  438509:	sub    al,al
  43850b:	sub    BYTE PTR [ebx+0x3bbe3f99],al
  438511:	xchg   edi,eax
  438513:	rcl    DWORD PTR [esi-0x58],0x1d
  438517:	dec    edx
  438518:	jns    0x4384db
  43851a:	sar    BYTE PTR [esi+0x9af1ed1],0xc3
  438521:	sbb    bl,cl
  438523:	call   0x28655a25
  438528:	xchg   edi,eax
  438529:	add    DWORD PTR [edx+0x20],eax
  43852c:	xchg   ebp,eax
  43852d:	add    eax,0x67b55680
  438532:	ucomiss xmm6,DWORD PTR ds:0x65fd0f2c
  438539:	mov    esi,0x57e7ab9
  43853e:	outs   dx,BYTE PTR ds:[esi]
  43853f:	jecxz  0x438556
  438541:	push   0xf
  438543:	ins    BYTE PTR es:[edi],dx
  438544:	pop    es
  438545:	mov    eax,0xfa38b28c
  43854a:	and    DWORD PTR [eax-0x5d],edx
  43854d:	sub    dh,BYTE PTR [esi-0x6a]
  438550:	or     al,0xf1
  438552:	rcr    BYTE PTR [bp+si],1
  438555:	repz fst QWORD PTR [esi-0x7d]
  438559:	mov    cs,WORD PTR [edx+0x57]
  43855c:	push   ss
  43855d:	push   esi
  43855e:	and    dh,BYTE PTR [edx+0x2408f715]
  438564:	push   ds
  438565:	inc    ecx
  438566:	dec    ecx
  438567:	aad    0xc2
  438569:	test   al,0xd8
  43856b:	sub    al,0xef
  43856d:	jp     0x4385dd
  43856f:	push   ds
  438570:	inc    ebx
  438571:	je     0x43851b
  438573:	or     DWORD PTR [edi+0x1a757ccc],edi
  438579:	fmul   DWORD PTR [ebx+eiz*8+0x33dcec53]
  438580:	ficom  WORD PTR [edi]
  438583:	je     0x4385fe
  438585:	dec    ebx
  438586:	icebp  
  438587:	jecxz  0x4385f5
  438589:	lds    eax,FWORD PTR [edx-0x267659a6]
  43858f:	adc    dl,BYTE PTR [eax-0x2d]
  438592:	dec    bx
  438594:	in     al,dx
  438595:	lds    esp,FWORD PTR ds:0xd3adab3d
  43859b:	sahf   
  43859c:	dec    ecx
  43859d:	jnp    0x43857d
  43859f:	in     eax,dx
  4385a0:	stos   DWORD PTR es:[edi],eax
  4385a1:	loop   0x43855a
  4385a3:	(bad)  
  4385a5:	cmp    BYTE PTR [ebx],ch
  4385a7:	int3   
  4385a8:	sbb    DWORD PTR [esi+0x49],0xffffffd7
  4385ac:	fimul  DWORD PTR [ebx]
  4385ae:	sub    ch,bl
  4385b0:	xchg   ebx,eax
  4385b1:	mov    BYTE PTR [ebp-0x4],ch
  4385b4:	push   0x77b65ebe
  4385b9:	loop   0x4385a9
  4385bb:	mov    ebp,0x8407acac
  4385c0:	inc    DWORD PTR [edi-0x42]
  4385c3:	cmp    DWORD PTR [ebx+0x785edf34],edx
  4385c9:	aas    
  4385ca:	in     eax,0x4c
  4385cc:	or     al,0x1c
  4385ce:	jae    0x43863a
  4385d0:	int    0x4b
  4385d2:	add    ch,dh
  4385d4:	sbb    ebp,DWORD PTR [ebx+ebp*2]
  4385d7:	nop
  4385d8:	push   0xffffff8c
  4385da:	or     eax,DWORD PTR [ecx-0x73]
  4385dd:	jnp    0x4385d9
  4385df:	data16 fist DWORD PTR [edi+0x11]
  4385e3:	(bad)  
  4385e4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4385e6:	mov    fs,WORD PTR [ebp+0x10]
  4385e9:	stc    
  4385ea:	(bad)  
  4385eb:	mov    ebx,0x6ac005e4
  4385f0:	cmc    
  4385f1:	sub    DWORD PTR [ebp+0xb],esi
  4385f4:	xchg   esp,eax
  4385f5:	add    ebx,edi
  4385f7:	arpl   WORD PTR [eax+0x7c312535],bp
  4385fd:	les    edi,FWORD PTR ds:0xbc21e52b
  438603:	or     al,dl
  438605:	mov    edx,0xc23bf76
  43860a:	imul   ebp,DWORD PTR [ecx-0x105c8ec7],0xffffff85
  438611:	(bad)  
  438613:	mov    ds:0x1f520aea,al
  438618:	dec    eax
  438619:	out    0xf0,al
  43861b:	fs mov esp,esi
  43861e:	jl     0x438625
  438620:	xchg   edi,eax
  438621:	sub    edx,esi
  438623:	xor    DWORD PTR [ebx],ecx
  438625:	mov    ebx,DWORD PTR [ecx]
  438627:	outs   dx,DWORD PTR ds:[esi]
  438628:	sbb    bh,BYTE PTR [esi+0xf]
  43862b:	sub    bh,BYTE PTR [ecx+0x5d]
  43862e:	xchg   edi,eax
  43862f:	and    al,0xea
  438631:	out    0x15,eax
  438633:	icebp  
  438634:	call   0xa2d8a204
  438639:	aad    0xb6
  43863b:	fdiv   QWORD PTR [edx]
  43863d:	dec    ebp
  43863e:	push   esi
  43863f:	call   0xeb26:0x2a548d74
  438646:	jge    0x60f01998
  43864c:	mov    cl,0x3f
  43864e:	pusha  
  43864f:	fisttp DWORD PTR [ecx+0x57629c72]
  438655:	test   al,0x0
  438657:	mov    ah,0xb7
  438659:	ins    DWORD PTR es:[edi],dx
  43865a:	mov    al,ds:0x4e232af1
  43865f:	test   BYTE PTR [eax-0x4993e8cd],0x53
  438666:	mov    esp,0xc7828363
  43866b:	fst    DWORD PTR [ebp-0x36caf875]
  438671:	mov    al,ds:0xdd53fe6
  438676:	ret    
  438677:	jae    0x43869b
  438679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43867a:	mov    WORD PTR [esp+ebx*2],ds
  43867d:	or     eax,esi
  43867f:	aad    0xea
  438681:	xchg   edx,eax
  438682:	mov    esp,0x59441091
  438687:	or     ch,0xd
  43868a:	inc    esp
  43868b:	cwde   
  43868c:	test   eax,0x627e0dae
  438691:	aad    0x77
  438693:	dec    esi
  438694:	hlt    
  438695:	sub    BYTE PTR [ecx-0x38],cl
  438698:	das    
  438699:	addr16 out dx,eax
  43869b:	and    eax,0xc2d8c1ba
  4386a0:	lahf   
  4386a1:	add    bl,BYTE PTR [eax-0x57489e59]
  4386a7:	add    al,0x77
  4386a9:	jl     0x438631
  4386ab:	arpl   WORD PTR [edi-0x6e],cx
  4386ae:	mov    ds:0x31a0a876,eax
  4386b3:	hlt    
  4386b4:	pop    ecx
  4386b5:	mov    bl,0x94
  4386b7:	ins    DWORD PTR es:[edi],dx
  4386b8:	mov    ds,WORD PTR [esi-0x2]
  4386bb:	xchg   esp,eax
  4386bc:	pop    esp
  4386bd:	cmp    BYTE PTR [edx+0x2beb6744],ah
  4386c3:	push   ss
  4386c4:	adc    BYTE PTR [edx+0x41],bl
  4386c7:	mov    WORD PTR [ebp-0x17],?
  4386ca:	push   ss
  4386cb:	je     0x4386b1
  4386cd:	dec    eax
  4386ce:	xor    BYTE PTR [edi+0x1e0ee551],bh
  4386d4:	aam    0x64
  4386d6:	lods   eax,DWORD PTR ds:[esi]
  4386d7:	fcmovnb st,st(6)
  4386d9:	mov    cl,0x43
  4386db:	out    dx,eax
  4386dc:	jnp    0x43872b
  4386de:	rcl    BYTE PTR [edx+0x2d0036bb],1
  4386e4:	imul   eax,DWORD PTR [eax],0x13
  4386e7:	add    eax,0x21312c5d
  4386ec:	jle    0x438678
  4386ee:	or     al,0xab
  4386f0:	stc    
  4386f1:	pop    es
  4386f2:	add    al,0x43
  4386f4:	mov    eax,ds:0x89e7076c
  4386f9:	sub    al,0x90
  4386fb:	jo     0x438719
  4386fd:	pop    ss
  4386fe:	ret    
  4386ff:	fldcw  WORD PTR [esi-0x7952c3a3]
  438705:	mov    al,0x35
  438707:	adc    esp,DWORD PTR [eax-0xaf5d864]
  43870d:	psubw  mm0,QWORD PTR ds:0xfdc18a5a
  438714:	inc    ebx
  438715:	and    al,0x38
  438717:	retf   
  438718:	(bad)  
  438719:	jmp    0xa64d7506
  43871e:	adc    BYTE PTR [esi],bl
  438720:	cdq    
  438721:	sbb    eax,0x640c26d0
  438726:	div    BYTE PTR cs:[ebx]
  438729:	pop    edx
  43872a:	and    BYTE PTR [esi-0x66ebc1b1],ah
  438730:	ins    BYTE PTR es:[edi],dx
  438731:	add    al,0x47
  438733:	sbb    ebx,edi
  438735:	or     cl,bh
  438737:	pop    ebx
  438738:	mov    WORD PTR [ebx-0x1a],es
  43873b:	stos   DWORD PTR es:[edi],eax
  43873c:	or     eax,0x53dd5c76
  438741:	loopne 0x4386ef
  438743:	xor    eax,0x28d94062
  438748:	iret   
  438749:	daa    
  43874a:	mov    bl,0x76
  43874c:	inc    edi
  43874d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43874e:	inc    ecx
  43874f:	push   eax
  438750:	push   eax
  438751:	xchg   edx,eax
  438752:	sub    al,BYTE PTR [eax+0x27]
  438755:	fdiv   DWORD PTR [ecx]
  438757:	mov    ah,0x5b
  438759:	mov    ds,WORD PTR [edx+0x18]
  43875c:	stc    
  43875d:	aad    0xb0
  43875f:	retf   
  438760:	mov    al,ds:0x9ece112
  438765:	adc    BYTE PTR [eax],bh
  438767:	mov    eax,0x6dc5b61d
  43876c:	inc    ecx
  43876d:	fcom   DWORD PTR [esi+ebp*1+0x37]
  438771:	sub    eax,0x74225bea
  438776:	xor    al,BYTE PTR [ebx+0x28d6b6ae]
  43877c:	mov    WORD PTR [edi],es
  43877e:	(bad)  
  43877f:	fsubr  QWORD PTR [esi]
  438781:	cmp    edi,DWORD PTR ds:0xf0728413
  438787:	sub    BYTE PTR [eax-0x53],0xa6
  43878b:	aad    0x7d
  43878d:	jnp    0x438800
  43878f:	add    dh,0xce
  438792:	aaa    
  438793:	push   ecx
  438794:	in     eax,0xbb
  438796:	cmp    al,0x32
  438798:	sbb    BYTE PTR [edi],0x49
  43879b:	jo     0x438760
  43879d:	mov    al,0xe0
  43879f:	add    eax,0x1bdc76d9
  4387a4:	je     0x4387d0
  4387a6:	sti    
  4387a7:	mov    bh,0x97
  4387a9:	sbb    ch,BYTE PTR [eax+0x2a]
  4387ac:	push   ebp
  4387ad:	pop    ebx
  4387ae:	pusha  
  4387af:	sbb    bh,bh
  4387b1:	test   eax,0x6a1ee741
  4387b6:	fdiv   DWORD PTR [ecx+ebp*2-0x7742414e]
  4387bd:	arpl   WORD PTR [ebp+0x6939e608],bp
  4387c3:	aad    0xc
  4387c5:	push   edi
  4387c6:	call   0xc21ff691
  4387cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4387cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4387cd:	adc    al,0x48
  4387cf:	mov    al,ds:0x58d7595c
  4387d4:	ja     0x43877e
  4387d6:	hlt    
  4387d7:	push   edi
  4387d8:	mov    edx,edi
  4387da:	or     eax,0x1c42c2ca
  4387df:	gs pop esp
  4387e1:	and    DWORD PTR [edi+0x5f8b2ac6],ebp
  4387e7:	div    dl
  4387e9:	aad    0x5c
  4387eb:	inc    ecx
  4387ec:	dec    ebx
  4387ed:	enter  0xee77,0x7b
  4387f1:	inc    ebp
  4387f2:	(bad)  
  4387f3:	xor    ebx,esp
  4387f5:	pop    eax
  4387f6:	in     al,dx
  4387f7:	sbb    eax,0x9835aa05
  4387fc:	inc    ebp
  4387fd:	mov    dl,0x31
  4387ff:	and    cl,BYTE PTR [eax]
  438801:	aad    0x6e
  438803:	call   0x9d1f9b08
  438808:	stos   DWORD PTR es:[edi],eax
  438809:	push   edx
  43880a:	pop    edx
  43880b:	icebp  
  43880c:	imul   edx,eax,0x6f2ea33d
  438812:	ror    BYTE PTR [ecx+0x7a5edb66],1
  438818:	ret    
  438819:	jg     0x43881f
  43881b:	out    dx,al
  43881c:	outs   dx,DWORD PTR ds:[esi]
  43881d:	mov    ebx,0xd097acc2
  438822:	sbb    cl,BYTE PTR [esi]
  438824:	out    0x3f,al
  438826:	repnz xor esp,edi
  438829:	jne    0x438800
  43882b:	(bad)  
  43882c:	cmp    eax,0x6a6a5ddc
  438831:	lock bound eax,QWORD PTR [edi+0x4d]
  438835:	push   0xffffffc6
  438837:	add    bl,BYTE PTR [ebx-0x1b]
  43883a:	cmp    ax,0x4a7e
  43883e:	pop    edx
  43883f:	in     eax,0xd4
  438841:	push   esi
  438842:	xchg   ecx,eax
  438843:	loop   0x438811
  438845:	add    eax,0x5891c229
  43884a:	call   0xd06:0x49fcc355
  438851:	cld    
  438852:	and    esi,DWORD PTR [ebp+0x79410226]
  438858:	sbb    ecx,DWORD PTR [ecx]
  43885a:	adc    ecx,edi
  43885c:	mov    ah,bl
  43885e:	ja     0x43882a
  438860:	jg     0x4388bb
  438862:	adc    ch,BYTE PTR [edx+0x487a7350]
  438868:	je     0x438861
  43886a:	(bad)  
  43886c:	jp     0x43882d
  43886e:	add    bh,ah
  438870:	jle    0x43884b
  438872:	rcr    BYTE PTR [edx-0x6506e610],cl
  438878:	ins    DWORD PTR es:[edi],dx
  438879:	xchg   edi,eax
  43887a:	(bad)  
  43887b:	pop    ebx
  43887c:	mov    dh,0x79
  43887e:	xor    BYTE PTR [edx+ecx*8+0x44445877],dh
  438885:	cdq    
  438886:	sub    BYTE PTR [esp+eiz*8-0x6805c9e9],cl
  43888d:	adc    bh,BYTE PTR [ebx]
  43888f:	add    eax,0xe27df0b7
  438894:	push   eax
  438895:	call   0x3b41f133
  43889a:	or     ch,BYTE PTR [ecx]
  43889c:	leave  
  43889d:	mov    edx,0xcec1565d
  4388a2:	jnp    0x4388c9
  4388a4:	shr    BYTE PTR [esi+0x6bb6a00c],0x2f
  4388ab:	test   al,0xa1
  4388ad:	shl    DWORD PTR [ebx-0x1b],1
  4388b0:	in     al,dx
  4388b1:	ds imul ecx,esi,0x792c1e24
  4388b8:	jmp    0x4388ef
  4388ba:	fsubr  DWORD PTR [eax+0x34]
  4388bd:	aas    
  4388be:	nop
  4388bf:	out    dx,al
  4388c0:	xchg   edi,eax
  4388c1:	cld    
  4388c2:	stos   BYTE PTR es:[edi],al
  4388c3:	stos   BYTE PTR es:[edi],al
  4388c4:	mov    ebx,ss
  4388c6:	call   0x12af71d2
  4388cb:	pop    ebp
  4388cc:	xor    DWORD PTR [edx-0x35c62f02],0xffffffd8
  4388d3:	and    eax,0xc1bf42b9
  4388d8:	shl    DWORD PTR [esi+ebx*1],1
  4388db:	inc    esi
  4388dc:	inc    esp
  4388dd:	ja     0x4388b3
  4388df:	or     al,0x83
  4388e1:	scas   al,BYTE PTR es:[edi]
  4388e2:	cli    
  4388e3:	or     al,0xab
  4388e5:	mov    esp,0xc764d889
  4388ea:	call   0xadb19099
  4388ef:	cs retf 
  4388f1:	pop    ss
  4388f2:	adc    ebp,ebx
  4388f4:	pop    ebx
  4388f5:	mov    ah,0xfe
  4388f7:	dec    eax
  4388f8:	iret   
  4388f9:	scas   al,BYTE PTR es:[edi]
  4388fa:	xchg   ecx,eax
  4388fb:	cld    
  4388fc:	stos   DWORD PTR es:[edi],eax
  4388fd:	(bad)  
  4388ff:	push   esi
  438900:	mov    eax,ds:0x31c46be1
  438905:	and    dh,bl
  438907:	fild   DWORD PTR [ebx+0x6b1fba11]
  43890d:	sub    ebx,DWORD PTR [ebp-0x28]
  438910:	ficomp DWORD PTR [ebx]
  438912:	cmp    DWORD PTR [eax-0x112b2dbd],esp
  438918:	jg     0x438985
  43891a:	sbb    ebx,DWORD PTR [edi-0x37e488f8]
  438920:	pusha  
  438921:	mov    cl,0x7a
  438923:	mov    ecx,0x70f7c5c9
  438928:	and    bh,cl
  43892a:	jne    0x43897d
  43892c:	jl     0x438952
  43892e:	xor    DWORD PTR [edx+0x71],eax
  438931:	sub    al,0x82
  438933:	das    
  438934:	adc    al,0xb9
  438936:	inc    ecx
  438937:	xchg   esp,eax
  438938:	(bad)  
  438939:	sti    
  43893a:	sahf   
  43893b:	sbb    DWORD PTR [esi],edi
  43893d:	cmp    eax,0x6af63786
  438942:	test   DWORD PTR [ecx-0x7b2d7b94],0x2ae8032c
  43894c:	mov    bl,0xd0
  43894e:	test   al,0x7b
  438950:	cmp    esi,DWORD PTR [edx]
  438952:	mov    eax,0x72d2e34a
  438957:	(bad)  [esi]
  438959:	pop    es
  43895a:	add    eax,0xe562500b
  43895f:	or     ecx,DWORD PTR [ecx-0x1dbfa777]
  438965:	and    BYTE PTR [ebx+0x42176428],dh
  43896b:	ds sti 
  43896d:	ss test eax,0xdaa7b147
  438973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438974:	ffree  st(3)
  438976:	test   DWORD PTR [esi+0x26],0x246da3c5
  43897d:	outs   dx,DWORD PTR ds:[esi]
  43897e:	jmp    0xea0b:0x86ff6665
  438985:	push   eax
  438986:	dec    ebp
  438987:	push   ebx
  438988:	out    0xea,al
  43898a:	lds    edx,FWORD PTR [ebx]
  43898c:	ror    BYTE PTR [edi],1
  43898e:	xchg   ebx,eax
  43898f:	bound  eax,QWORD PTR [edi]
  438991:	xchg   esi,eax
  438992:	sar    BYTE PTR [edi+ebp*2],1
  438995:	retf   0xaaa1
  438998:	sar    DWORD PTR [ebx],0x73
  43899b:	mov    esi,0xd9a4ac5f
  4389a0:	add    edi,edx
  4389a2:	dec    edi
  4389a3:	std    
  4389a4:	jbe    0x4389fb
  4389a6:	mov    eax,esi
  4389a8:	mov    ds:0x11de943d,eax
  4389ad:	sar    dh,1
  4389af:	mov    bh,0x7
  4389b1:	or     eax,0x5d100b94
  4389b6:	loopne 0x4389a6
  4389b8:	inc    ebx
  4389b9:	push   edi
  4389ba:	jb     0x438982
  4389bc:	mov    dl,0xa
  4389be:	loop   0x4389cc
  4389c0:	test   BYTE PTR [ebp-0x7b],dl
  4389c3:	xchg   edx,eax
  4389c4:	(bad)
  4389c8:	shl    cl,0x14
  4389cb:	mov    bl,0x1c
  4389cd:	test   DWORD PTR [edi+0x79],ebp
  4389d0:	popa   
  4389d1:	std    
  4389d2:	push   0x28
  4389d4:	push   ebp
  4389d5:	pop    esi
  4389d6:	mov    BYTE PTR [ecx+0x7d26b168],ch
  4389dc:	add    DWORD PTR [esp+ebx*8+0x33],0x39abe6db
  4389e4:	ror    esi,1
  4389e6:	mov    BYTE PTR [edi+0x648ce263],al
  4389ec:	inc    esp
  4389ed:	and    eax,0xfff4bc06
  4389f2:	jge    0x438a39
  4389f4:	and    eax,DWORD PTR [ecx]
  4389f6:	retf   0x5028
  4389f9:	cli    
  4389fa:	in     eax,0x31
  4389fc:	jp     0x438a35
  4389fe:	xchg   esp,esi
  438a00:	mov    ah,0xff
  438a02:	jmp    0x4389c0
  438a04:	fimul  WORD PTR [esi+0x55f00437]
  438a0a:	dec    esp
  438a0b:	fcomp  QWORD PTR gs:[eax+0x430bb50a]
  438a12:	xchg   edi,eax
  438a13:	push   0x5d
  438a15:	ds icebp 
  438a17:	inc    edi
  438a18:	imul   esp,DWORD PTR [ebx+0x66c1b9e2],0x8395b7d6
  438a22:	inc    esp
  438a23:	stos   BYTE PTR es:[edi],al
  438a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438a25:	push   ss
  438a26:	xchg   DWORD PTR [ebp-0x3f],esp
  438a29:	push   ebp
  438a2a:	lods   eax,DWORD PTR ds:[esi]
  438a2b:	pop    ecx
  438a2c:	or     edx,DWORD PTR [eax+0x44]
  438a2f:	pop    eax
  438a30:	add    al,0x99
  438a32:	push   esp
  438a33:	pop    ecx
  438a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a35:	dec    eax
  438a36:	jne    0x4389fc
  438a38:	mov    esi,0x18a5fca4
  438a3d:	sub    ebp,ebx
  438a3f:	sub    al,0xf7
  438a41:	inc    edi
  438a42:	std    
  438a43:	adc    DWORD PTR [ebp+0x4b],0x970241fb
  438a4a:	xlat   BYTE PTR ds:[ebx]
  438a4b:	pop    es
  438a4c:	sub    dh,al
  438a4e:	dec    ecx
  438a4f:	jecxz  0x438a6b
  438a51:	iret   
  438a52:	or     ecx,DWORD PTR [edx+eiz*2-0x6b92094d]
  438a59:	adc    BYTE PTR [edi],cl
  438a5b:	jg     0x438a77
  438a5d:	call   0xc966:0x100f12a2
  438a64:	stos   BYTE PTR es:[edi],al
  438a65:	xor    bh,0x1e
  438a68:	or     al,BYTE PTR es:[ecx+0x629498df]
  438a6f:	hlt    
  438a70:	sub    BYTE PTR [esi+edx*8+0x51166558],ch
  438a77:	repz gs pop edi
  438a7a:	adc    al,BYTE PTR [ebx-0x2087fe39]
  438a80:	in     al,0x5f
  438a82:	leave  
  438a83:	ja     0x438afa
  438a85:	jg     0x438af2
  438a87:	and    DWORD PTR [edi+0x3db3d48d],0x50
  438a8e:	sub    al,ah
  438a90:	sub    dl,BYTE PTR [edi]
  438a92:	sub    eax,0x1a37be9b
  438a97:	leave  
  438a98:	jmp    0x66c0c866
  438a9d:	rdtsc  
  438a9f:	aas    
  438aa0:	lock cli 
  438aa2:	jnp    0x438a63
  438aa4:	xchg   esi,eax
  438aa5:	xor    ebp,ecx
  438aa7:	jns    0x438aad
  438aa9:	xchg   BYTE PTR [esi],al
  438aab:	mov    dh,0x3b
  438aad:	xlat   BYTE PTR ds:[ebx]
  438aae:	loop   0x438a3f
  438ab0:	or     edi,ebx
  438ab2:	xor    eax,0x3f5f1bc0
  438ab7:	enter  0x45c5,0x8a
  438abb:	mov    esp,0x82ad69ba
  438ac0:	leave  
  438ac1:	and    eax,0x3970d9a7
  438ac6:	mov    es,edx
  438ac8:	xor    DWORD PTR [edi-0x4b7784e6],ebp
  438ace:	cs push ss
  438ad0:	les    esp,FWORD PTR [esi+0x18]
  438ad3:	rcr    BYTE PTR [eax-0xc],cl
  438ad6:	ud0    eax,ebp
  438ad9:	xor    al,0xe
  438adb:	mov    cl,BYTE PTR [ecx-0x47f8a2da]
  438ae1:	sub    DWORD PTR [ecx+0x12],ebx
  438ae4:	jb     0x438b51
  438ae6:	pop    edi
  438ae7:	aad    0x80
  438ae9:	hlt    
  438aea:	int    0x6d
  438aec:	arpl   WORD PTR [esi+0x26],ax
  438aef:	dec    edx
  438af0:	push   eax
  438af1:	lahf   
  438af2:	mov    bl,0x71
  438af4:	and    esp,0x1047245f
  438afa:	stos   BYTE PTR es:[edi],al
  438afb:	or     eax,0x5e7b72ef
  438b00:	xor    BYTE PTR [ecx],ch
  438b02:	loopne 0x438b44
  438b04:	xchg   esi,eax
  438b05:	pop    ecx
  438b06:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  438b08:	out    dx,al
  438b09:	xchg   esp,eax
  438b0a:	fdiv   st(6),st
  438b0c:	cwde   
  438b0d:	mov    cl,0x45
  438b0f:	test   al,0x4e
  438b11:	mov    WORD PTR [ebp-0x43],ss
  438b14:	sub    BYTE PTR gs:[ecx+0x2d3d4537],bh
  438b1b:	sub    DWORD PTR [ebp-0x121089ab],0x493e0b02
  438b25:	inc    edi
  438b26:	mov    ebx,0x30b8e4cc
  438b2b:	jo     0x438b64
  438b2d:	scas   eax,DWORD PTR es:[edi]
  438b2e:	mov    esp,edi
  438b30:	adc    BYTE PTR [esp+ebx*2],al
  438b33:	push   esi
  438b34:	sbb    al,BYTE PTR [ebx-0x3f]
  438b37:	fs test al,0xf8
  438b3a:	dec    ebx
  438b3b:	adc    eax,0x3e30cec4
  438b40:	dec    edx
  438b41:	push   es
  438b42:	fild   DWORD PTR [ebx]
  438b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438b45:	mov    ebp,0xff7198f
  438b4a:	(bad)  
  438b4b:	sbb    BYTE PTR [edi+ecx*4+0x4abf3a2d],al
  438b52:	popa   
  438b53:	bound  edi,QWORD PTR [eax+0x60]
  438b56:	xlat   BYTE PTR ds:[ebx]
  438b57:	jnp    0x438bad
  438b59:	dec    edi
  438b5a:	mov    esi,DWORD PTR [edi]
  438b5c:	mov    al,0x5f
  438b5e:	and    eax,0xbbf72524
  438b63:	test   DWORD PTR [eax+0x2a],eax
  438b66:	push   edx
  438b67:	jl     0x438b74
  438b69:	in     eax,dx
  438b6a:	bound  esp,QWORD PTR [eax]
  438b6c:	ror    DWORD PTR ds:0x6fa4e2d,cl
  438b72:	iret   
  438b73:	mov    ds:0x2382890,al
  438b78:	cmp    ch,bl
  438b7a:	push   0x10dc033f
  438b7f:	loop   0x438be1
  438b81:	push   esp
  438b82:	sbb    dh,al
  438b84:	sbb    al,0xa3
  438b86:	retf   0x58b1
  438b89:	sub    eax,0x633c1697
  438b8e:	hlt    
  438b8f:	adc    BYTE PTR [esi+ebx*1-0x2f],bh
  438b93:	jecxz  0x438c01
  438b95:	dec    eax
  438b96:	push   ecx
  438b97:	stos   BYTE PTR es:[edi],al
  438b98:	cmc    
  438b99:	mov    eax,0x2c59cd10
  438b9e:	fisttp WORD PTR [ebx+0x880f839]
  438ba4:	ret    
  438ba5:	push   ds
  438ba6:	(bad)  
  438ba7:	sbb    DWORD PTR [eax+0x2adc8fa9],eax
  438bad:	add    BYTE PTR ds:0xed1684ea,bh
  438bb3:	sbb    al,BYTE PTR [ecx]
  438bb5:	fisttp DWORD PTR [ebx-0x1]
  438bb8:	icebp  
  438bb9:	in     eax,dx
  438bba:	lea    ecx,[esi+0x1]
  438bbd:	out    dx,eax
  438bbe:	cli    
  438bbf:	cmc    
  438bc0:	lock daa 
  438bc2:	pop    edx
  438bc3:	std    
  438bc4:	cmp    al,0x43
  438bc6:	xchg   ebx,eax
  438bc7:	bound  esp,QWORD PTR [ebx-0x62f36fae]
  438bcd:	iret   
  438bce:	adc    ecx,DWORD PTR [esi+0x4d9bdaab]
  438bd4:	lahf   
  438bd5:	pop    ss
  438bd6:	jmp    0x31a0:0x717fdce6
  438bdd:	fiadd  WORD PTR [edx-0x76]
  438be0:	lahf   
  438be1:	lahf   
  438be2:	ins    DWORD PTR es:[edi],dx
  438be3:	xor    cl,BYTE PTR [edx-0x27]
  438be6:	pop    ebx
  438be7:	out    0xea,eax
  438be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438bea:	push   edx
  438beb:	bound  ecx,QWORD PTR [ebx*4+0x3278e192]
  438bf2:	jnp    0x438c73
  438bf4:	sub    cl,BYTE PTR [ecx+eax*8]
  438bf7:	or     ch,ch
  438bf9:	(bad)  [edi-0x57738fe6]
  438bff:	xchg   ebp,eax
  438c00:	jg     0x438bc0
  438c02:	js     0x438c24
  438c04:	lods   al,BYTE PTR ds:[esi]
  438c05:	cld    
  438c06:	adc    ebx,0x74ea9190
  438c0c:	aam    0x35
  438c0e:	ss mov ch,0x5c
  438c11:	mov    esp,0x5254a640
  438c16:	cmp    eax,0xd7ef2431
  438c1b:	xor    DWORD PTR [ecx-0x3bafeda2],eax
  438c21:	icebp  
  438c22:	add    BYTE PTR [esi+0x68],0x73
  438c26:	cwde   
  438c27:	not    BYTE PTR [ecx-0x644477eb]
  438c2d:	jnp    0x438c47
  438c2f:	call   0xfb7a5733
  438c34:	dec    ebx
  438c35:	pushf  
  438c36:	xchg   ebp,eax
  438c37:	pushf  
  438c38:	test   ah,al
  438c3a:	jle    0x438c35
  438c3c:	and    al,0xf8
  438c3e:	pop    esi
  438c3f:	and    esi,edx
  438c41:	js     0x438c6f
  438c43:	push   ebx
  438c44:	pop    ebp
  438c45:	retf   0x2888
  438c48:	imul   ebp,DWORD PTR [esi+0x34],0xffffff92
  438c4c:	imul   esp,DWORD PTR [edx+0x4a],0xffffffbd
  438c50:	sub    dl,BYTE PTR [ebx+0x64]
  438c53:	popf   
  438c54:	loop   0x438c69
  438c56:	jmp    0xb1b55d47
  438c5b:	xor    bh,BYTE PTR [edi-0x32081cf4]
  438c61:	loope  0x438cb0
  438c63:	mov    bh,0x48
  438c65:	jno    0x438cd6
  438c67:	in     al,dx
  438c68:	mov    ebp,0xac7de497
  438c6d:	and    DWORD PTR [edi-0x40ab46cd],0xffffff89
  438c74:	cld    
  438c75:	cli    
  438c76:	xor    al,0xac
  438c78:	mov    ch,0x7d
  438c7a:	sbb    dh,BYTE PTR [esp+ecx*4]
  438c7d:	div    BYTE PTR [esp+eax*4-0x1d]
  438c81:	ror    ebx,0xa1
  438c84:	aas    
  438c85:	inc    ecx
  438c86:	adc    eax,0xdf8fe9e1
  438c8b:	add    DWORD PTR [ebp+0x77654860],ebx
  438c91:	xchg   DWORD PTR [ecx+0x12],ebp
  438c94:	(bad)  
  438c95:	sub    BYTE PTR [eax-0x63e54872],bh
  438c9b:	pop    ebx
  438c9c:	fistp  DWORD PTR [edi]
  438c9e:	add    al,0xe3
  438ca0:	push   edx
  438ca1:	out    0xf8,eax
  438ca3:	arpl   WORD PTR [esi+0x7fa0e190],dx
  438ca9:	repnz inc esp
  438cab:	cmp    BYTE PTR [esi-0x60fcf8bd],0x44
  438cb2:	imul   ecx,DWORD PTR [eax+eiz*1],0xf959b058
  438cb9:	xor    edi,DWORD PTR [edx-0x30]
  438cbc:	retf   0xe518
  438cbf:	jno    0x438c51
  438cc1:	aas    
  438cc2:	bound  esi,QWORD PTR [edx-0x79]
  438cc5:	and    DWORD PTR ds:0x38526f7a,ecx
  438ccb:	data16 outs dx,BYTE PTR ds:[esi]
  438ccd:	lock xor DWORD PTR [eax-0x2b],ebp
  438cd1:	pop    ds
  438cd2:	in     al,dx
  438cd3:	jns    0x438d19
  438cd5:	cmp    ebp,DWORD PTR [ecx-0xab9312b]
  438cdb:	into   
  438cdc:	xor    BYTE PTR [edx-0x55c04e94],0x12
  438ce3:	pop    ds
  438ce4:	add    DWORD PTR [eax+0x72afe2fa],esp
  438cea:	loop   0x438c9a
  438cec:	add    al,0x21
  438cee:	sbb    edi,DWORD PTR ds:0xa58bc137
  438cf4:	int3   
  438cf5:	push   0x33e8c837
  438cfa:	jne    0x438c90
  438cfc:	push   ebx
  438cfd:	lahf   
  438cfe:	pop    ebp
  438cff:	aas    
  438d00:	inc    esp
  438d01:	popf   
  438d02:	xor    cl,BYTE PTR [ebp+edi*1-0x3e]
  438d06:	in     eax,0xff
  438d08:	int3   
  438d09:	in     al,dx
  438d0a:	sahf   
  438d0b:	mov    DWORD PTR [edi+0x1e],eax
  438d0e:	jns    0x438cbc
  438d10:	lds    ebp,FWORD PTR [esi+0x696593a4]
  438d16:	(bad)  
  438d17:	rcr    DWORD PTR [edx],1
  438d19:	sbb    ebp,DWORD PTR [esi+0x1e4b0dd]
  438d1f:	sbb    eax,0x9171e402
  438d24:	xchg   BYTE PTR [edx-0x2a],ch
  438d27:	popf   
  438d28:	sti    
  438d29:	nop
  438d2a:	mov    al,ds:0xa5b247b7
  438d2f:	test   eax,0xd59fc267
  438d34:	add    bh,ah
  438d36:	push   edx
  438d37:	sbb    eax,0xfc53ce2b
  438d3c:	mov    al,0x9f
  438d3e:	mov    cl,0xb1
  438d40:	mov    al,0x18
  438d42:	cmp    esi,DWORD PTR [edx+eax*4+0x1c]
  438d46:	sar    DWORD PTR [ebx+0x52],cl
  438d49:	push   ss
  438d4a:	test   cl,ah
  438d4c:	inc    ebx
  438d4d:	push   edi
  438d4e:	in     al,dx
  438d4f:	dec    ebx
  438d50:	in     eax,dx
  438d51:	(bad)
  438d55:	xor    BYTE PTR [edx+ecx*1],al
  438d58:	pop    edx
  438d59:	outs   dx,BYTE PTR ds:[esi]
  438d5a:	pop    es
  438d5b:	addr16 pop ds
  438d5d:	xchg   edi,eax
  438d5e:	fmul   st,st(7)
  438d60:	adc    DWORD PTR [ebx],ebx
  438d62:	dec    esp
  438d63:	inc    ebx
  438d64:	test   al,0x73
  438d66:	(bad)  
  438d67:	jmp    0x438d05
  438d69:	call   0xef9db5b9
  438d6e:	jecxz  0x438dbf
  438d70:	fs push 0x32dd8a16
  438d76:	leave  
  438d77:	cwde   
  438d78:	call   0x9a59:0x13b40ddc
  438d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d80:	enter  0x36f6,0x97
  438d84:	sahf   
  438d85:	add    BYTE PTR [edi],cl
  438d87:	dec    ecx
  438d88:	ja     0x438d14
  438d8a:	jbe    0x438da4
  438d8c:	add    dh,bh
  438d8e:	je     0x438d25
  438d90:	adc    al,0xec
  438d92:	add    al,0xbc
  438d94:	xor    dl,BYTE PTR [edi]
  438d96:	not    DWORD PTR ds:0x5cbb1b91
  438d9c:	mov    ebp,0x41239721
  438da1:	mov    ebx,fs
  438da3:	cld    
  438da4:	jno    0x438d3c
  438da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438da7:	push   eax
  438da8:	aam    0xf1
  438daa:	fadd   QWORD PTR [ebx]
  438dac:	mov    esp,0x3095d99e
  438db1:	cmp    DWORD PTR [ebx+0x32],edi
  438db4:	outs   dx,BYTE PTR ds:[esi]
  438db5:	sbb    bl,dh
  438db7:	mov    bh,bl
  438db9:	(bad)  
  438dba:	jno    0x438d45
  438dbc:	(bad)  
  438dbd:	cs aad 0x36
  438dc0:	inc    esi
  438dc1:	leave  
  438dc2:	mov    cs,WORD PTR [ebx-0x26492508]
  438dc8:	ds mov ecx,0x32421f73
  438dce:	cmp    DWORD PTR [esi+0x49cac063],edi
  438dd4:	ss mov ebx,0x44f856c8
  438dda:	and    al,0x8
  438ddc:	and    DWORD PTR [eax-0x69],0xffffff9b
  438de0:	jle    0x438d9a
  438de2:	lds    ecx,FWORD PTR [ecx-0x53214981]
  438de8:	pop    edx
  438de9:	inc    ebp
  438dea:	sub    DWORD PTR [ebx+0xfdb412a],edx
  438df0:	xchg   edi,eax
  438df1:	pop    ecx
  438df2:	jmp    0x48af:0x3291a924
  438df9:	clc    
  438dfa:	fcom   QWORD PTR ds:0xaa530f37
  438e00:	int3   
  438e01:	adc    edx,edx
  438e03:	je     0x438d88
  438e05:	cmc    
  438e06:	mov    dl,0x6f
  438e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e09:	imul   edi,DWORD PTR [ecx-0x68efc1cb],0x2d07a6f7
  438e13:	sbb    eax,0x90e9eb34
  438e18:	or     eax,0x17643171
  438e1d:	mov    bl,0xe1
  438e1f:	popa   
  438e20:	shr    DWORD PTR [ebx-0x47e68d01],1
  438e26:	(bad)  
  438e28:	jmp    0x553e8c47
  438e2d:	icebp  
  438e2e:	mov    DWORD PTR [ebx-0x4a],esi
  438e31:	dec    esp
  438e32:	cmp    ah,BYTE PTR [ebx-0x74609499]
  438e38:	jmp    0x438e91
  438e3a:	mov    DWORD PTR [ecx-0x1d],edx
  438e3d:	out    0x3f,al
  438e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e40:	pusha  
  438e41:	ret    0xfd25
  438e44:	loopne 0x438e12
  438e46:	xchg   edx,eax
  438e47:	iret   
  438e48:	jb     0x438ddc
  438e4a:	icebp  
  438e4b:	icebp  
  438e4c:	xor    bl,bl
  438e4e:	xchg   BYTE PTR [edi-0x4f],cl
  438e51:	rcl    DWORD PTR [ebp-0x74f3f322],cl
  438e57:	add    DWORD PTR [eax+0x68],0x9b2a7928
  438e5e:	test   eax,0x5bb8191b
  438e63:	and    esp,ecx
  438e65:	dec    ebp
  438e66:	sub    eax,esi
  438e68:	xchg   ebp,eax
  438e69:	add    BYTE PTR [eax],bh
  438e6b:	mov    ds:0x1b634c15,eax
  438e70:	sub    DWORD PTR [ebx-0x1902ba98],ebx
  438e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e77:	shl    ch,0xdc
  438e7a:	or     eax,0x2444bbdb
  438e7f:	sbb    BYTE PTR [ebp+0x611e22b8],dh
  438e85:	fs adc al,0x59
  438e88:	sub    BYTE PTR [ecx-0x58],dl
  438e8b:	xor    DWORD PTR [edi+esi*4],edi
  438e8e:	sbb    esp,eax
  438e90:	inc    ecx
  438e91:	(bad)  
  438e93:	push   ebx
  438e94:	loop   0x438e63
  438e96:	fcom   DWORD PTR [edx+0x3e]
  438e99:	jbe    0x438e70
  438e9b:	cmp    ebp,0xffffffb4
  438e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e9f:	pop    ebp
  438ea0:	in     eax,dx
  438ea1:	into   
  438ea2:	mul    DWORD PTR [ebx-0x54363afe]
  438ea8:	ds push esi
  438eaa:	inc    edi
  438eab:	mov    ebx,0xec5ce127
  438eb0:	add    bl,BYTE PTR [edx-0x6e]
  438eb3:	pop    ss
  438eb4:	out    dx,al
  438eb5:	lods   eax,DWORD PTR ds:[esi]
  438eb6:	pop    ebx
  438eb7:	or     eax,0x2efc154
  438ebc:	scas   eax,DWORD PTR es:[edi]
  438ebd:	popf   
  438ebe:	imul   esp,ebp,0x7c
  438ec1:	jae    0x438ebf
  438ec3:	jl     0x438efe
  438ec5:	inc    ecx
  438ec6:	shr    dl,0x2c
  438ec9:	out    dx,al
  438eca:	fwait
  438ecb:	and    dl,ch
  438ecd:	fbstp  TBYTE PTR [edi+0x69]
  438ed0:	dec    ebx
  438ed1:	in     eax,dx
  438ed2:	cli    
  438ed3:	jno    0x438f09
  438ed5:	cli    
  438ed6:	adc    al,0x82
  438ed8:	cwde   
  438ed9:	mov    edi,0xfba70de4
  438ede:	push   es
  438edf:	imul   edx,DWORD PTR [eax+0x2b],0xe25aa520
  438ee6:	and    al,0x1d
  438ee8:	adc    eax,0x1c5cd900
  438eed:	cmp    al,BYTE PTR [ebx-0x31]
  438ef0:	pop    edx
  438ef1:	mov    bl,0x6
  438ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438ef4:	rsqrtps xmm7,xmm2
  438ef7:	enter  0x5024,0x9d
  438efb:	add    DWORD PTR gs:[esi-0xf38a62c],0xf2578e48
  438f06:	push   ebx
  438f07:	call   0xc0a6fc00
  438f0c:	sti    
  438f0d:	cdq    
  438f0e:	lahf   
  438f0f:	xchg   BYTE PTR [edx],ah
  438f11:	mov    ecx,0xe1417661
  438f16:	mov    esp,0x5137cc6c
  438f1b:	pop    es
  438f1c:	fisub  DWORD PTR [edi+0x0]
  438f1f:	inc    ebx
  438f20:	mov    al,ds:0x1bf51dd7
  438f25:	mov    cl,0xd4
  438f27:	push   ecx
  438f28:	mov    dl,0x57
  438f2a:	cwde   
  438f2b:	inc    ebp
  438f2c:	inc    ebp
  438f2d:	xchg   ebx,eax
  438f2e:	popa   
  438f2f:	pop    edx
  438f30:	retf   0x437b
  438f33:	mov    ecx,0xce63dc45
  438f38:	stc    
  438f39:	cmc    
  438f3a:	jmp    0x45bb9ba4
  438f3f:	push   eax
  438f40:	add    al,0x1b
  438f42:	adc    bl,dl
  438f44:	out    dx,al
  438f45:	sar    al,0x4d
  438f48:	inc    edx
  438f49:	xor    al,0x47
  438f4b:	sti    
  438f4c:	inc    esi
  438f4d:	push   ecx
  438f4e:	jl     0x438f00
  438f50:	mov    esi,0x45e0189c
  438f55:	sub    eax,0xee41f92e
  438f5a:	leave  
  438f5b:	out    0x6b,eax
  438f5d:	mov    edi,0x12821f48
  438f62:	test   eax,0x8790c0ae
  438f67:	imul   edi,DWORD PTR [esi],0x4198357b
  438f6d:	dec    edi
  438f6e:	test   eax,0xc14b8f40
  438f73:	adc    edx,edx
  438f75:	into   
  438f76:	adc    bh,bl
  438f78:	jmp    0xc2ab3567
  438f7d:	fimul  WORD PTR [eax+0x44]
  438f80:	pop    ecx
  438f81:	mov    dh,0x8a
  438f83:	xchg   edi,eax
  438f84:	test   BYTE PTR [edx-0x6],ch
  438f87:	push   esp
  438f88:	jmp    0x4cef:0xef70acd6
  438f8f:	popf   
  438f90:	retf   
  438f91:	fsub   st,st(7)
  438f93:	gs scas al,BYTE PTR es:[edi]
  438f95:	jmp    0x438f7e
  438f97:	mov    edi,0x39121bfc
  438f9c:	mov    DWORD PTR [ebx],edx
  438f9e:	xlat   BYTE PTR ds:[ebx]
  438f9f:	les    esi,FWORD PTR ds:0x6600565c
  438fa5:	ds ret 0x7b00
  438fa9:	ficom  WORD PTR ds:0x95cd8bc
  438faf:	jge    0x438fd8
  438fb1:	neg    DWORD PTR [eax]
  438fb3:	addr16 in eax,0x80
  438fb6:	cmp    ebp,DWORD PTR [esi-0x7a9f73e0]
  438fbc:	jb     0x438f82
  438fbe:	jmp    0xcea6:0xa4ce730f
  438fc5:	popf   
  438fc6:	js     0x438f80
  438fc8:	xor    eax,0xfa22dbcb
  438fcd:	xor    al,0x4d
  438fcf:	inc    eax
  438fd0:	push   ebx
  438fd1:	in     al,dx
  438fd2:	clc    
  438fd3:	or     eax,0x43ccf3a1
  438fd8:	aas    
  438fd9:	in     eax,0x80
  438fdb:	in     al,0xea
  438fdd:	mov    al,ds:0x3cd240be
  438fe2:	pop    eax
  438fe3:	ss push ds
  438fe5:	add    ebp,edx
  438fe7:	ret    0xa1a5
  438fea:	dec    esp
  438feb:	call   0x1e5f:0xa8025f53
  438ff2:	dec    edi
  438ff3:	xor    BYTE PTR [edx-0x11b316a6],dh
  438ff9:	pop    ss
  438ffa:	into   
  438ffb:	rcr    DWORD PTR [ecx-0x5],0xe2
  438fff:	dec    eax
  439000:	lods   eax,DWORD PTR ds:[esi]
  439001:	sub    DWORD PTR [edx-0x55b0df3d],0xb0da71d9
  43900b:	add    edi,esi
  43900d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43900e:	into   
  43900f:	gs jnp 0x438ff9
  439012:	adc    DWORD PTR [edi],edi
  439014:	add    eax,0x57fa2b64
  439019:	pusha  
  43901a:	fdiv   st,st(4)
  43901c:	push   0xac87fb64
  439021:	lea    ecx,gs:[esi+0x56]
  439025:	cdq    
  439026:	iret   
  439027:	and    ebx,ecx
  439029:	and    BYTE PTR [esi+0x4e],ah
  43902c:	jnp    0x4390a4
  43902e:	lahf   
  43902f:	ins    BYTE PTR es:[edi],dx
  439030:	lods   eax,DWORD PTR ds:[esi]
  439031:	loopne 0x438fdf
  439033:	call   0x5f44:0xe33f44cb
  43903a:	in     al,dx
  43903b:	pusha  
  43903c:	sub    BYTE PTR [edi+ebx*1-0x3cf348cb],dh
  439043:	mov    eax,ds:0x5a2bcf46
  439048:	in     eax,0xba
  43904a:	dec    ecx
  43904b:	repnz sbb bl,dh
  43904e:	fidiv  DWORD PTR [esi+0x45]
  439051:	cmp    DWORD PTR [esi],esi
  439053:	or     ebx,DWORD PTR [esi+eax*1-0x5bcf9231]
  43905a:	les    ecx,FWORD PTR [edi]
  43905c:	or     eax,0xf35fcfa7
  439061:	lahf   
  439062:	jae    0x439045
  439064:	iret   
  439065:	jmp    0x77d4:0x65429698
  43906c:	les    edx,FWORD PTR [ecx-0x1f19ec42]
  439072:	leave  
  439073:	cmc    
  439074:	dec    esp
  439075:	shr    esp,0xec
  439078:	lea    ecx,[ebx+0x24]
  43907b:	adc    edx,esp
  43907d:	aas    
  43907e:	sub    BYTE PTR ds:0xdeeca25a,cl
  439084:	mov    ah,0x74
  439086:	icebp  
  439087:	dec    edi
  439088:	add    BYTE PTR [ebp-0x30b65ef6],al
  43908e:	repz pop edi
  439090:	add    DWORD PTR [edx],edi
  439092:	into   
  439093:	xor    eax,0x6e5780e7
  439098:	push   ebx
  439099:	add    DWORD PTR [edi],edx
  43909b:	mov    ebp,0xb9719f71
  4390a0:	mov    esi,0x6b5f7ea0
  4390a5:	es nop
  4390a7:	cwde   
  4390a8:	fwait
  4390a9:	mov    ebx,0x1aeadcad
  4390ae:	dec    edi
  4390af:	mov    esi,DWORD PTR [ebx+esi*2]
  4390b2:	add    al,0x4b
  4390b4:	dec    esp
  4390b5:	add    BYTE PTR [ecx+0x7901ba28],al
  4390bb:	mov    ds:0x12d58081,eax
  4390c0:	jmp    0x5ea77058
  4390c5:	(bad)  
  4390c6:	mov    ebx,0x9435b9
  4390cb:	xchg   dl,bh
  4390cd:	jnp    0x4390e6
  4390cf:	jbe    0x4390de
  4390d1:	push   edx
  4390d2:	jne    0x4390ae
  4390d4:	in     eax,0x6b
  4390d6:	or     DWORD PTR [ebp+0x1f],edx
  4390d9:	push   ss
  4390da:	push   esi
  4390db:	xor    edx,edx
  4390dd:	mov    ch,0x62
  4390df:	das    
  4390e0:	js     0x43911d
  4390e2:	inc    ebp
  4390e3:	mov    ebx,ebx
  4390e5:	cli    
  4390e6:	test   DWORD PTR [eax+edi*1-0x7c],esp
  4390ea:	fwait
  4390eb:	test   BYTE PTR [esi+0x5],bh
  4390ee:	push   ebp
  4390ef:	data16 fcomp QWORD PTR [ebx+0x98523db]
  4390f6:	ficom  DWORD PTR [edx-0x20]
  4390f9:	mov    cl,0x5f
  4390fb:	les    eax,FWORD PTR [ecx]
  4390fd:	es add al,0xb2
  439100:	imul   esi,DWORD PTR [ebx],0xb7dc89f
  439106:	rcl    DWORD PTR [esi+0x3f30065d],1
  43910c:	jnp    0x4390bc
  43910e:	jg     0x4390d8
  439110:	pop    es
  439111:	xchg   DWORD PTR [esi+0xe],eax
  439114:	shl    al,1
  439116:	pop    ebp
  439117:	xor    BYTE PTR [edi],0xae
  43911a:	fmulp  st(2),st
  43911c:	dec    eax
  43911e:	or     ebp,edi
  439120:	mov    cl,0x30
  439122:	inc    ebx
  439123:	push   eax
  439124:	pop    edx
  439125:	mov    ecx,0x682bf48
  43912a:	test   al,0xb7
  43912c:	leave  
  43912d:	xor    eax,0xffffff9c
  439130:	adc    al,0x7d
  439132:	ins    BYTE PTR es:[edi],dx
  439133:	imul   edx,ebp,0xd4d12214
  439139:	jbe    0x439161
  43913b:	pop    esi
  43913c:	cld    
  43913d:	push   ds
  43913e:	mov    WORD PTR [ebx],ss
  439140:	popf   
  439141:	retf   0xb09b
  439144:	inc    ecx
  439145:	mov    WORD PTR [edi+0x143d6f8c],?
  43914b:	pop    ebx
  43914c:	loopne 0x4390ec
  43914e:	add    ebx,DWORD PTR [edi-0x34]
  439151:	dec    DWORD PTR [ecx+0x3ed6268]
  439157:	dec    ecx
  439158:	xlat   BYTE PTR ds:[ebx]
  439159:	xchg   edx,eax
  43915a:	stos   DWORD PTR es:[edi],eax
  43915b:	stos   DWORD PTR es:[edi],eax
  43915c:	repz les esi,FWORD PTR ds:0x2d690f91
  439163:	in     eax,0x79
  439165:	mov    ds:0xec8e305f,eax
  43916a:	pop    esp
  43916b:	cmc    
  43916c:	shr    BYTE PTR [edi],cl
  43916e:	fst    DWORD PTR [esi+ebp*1]
  439171:	mov    dl,BYTE PTR [edx+esi*4]
  439174:	mov    BYTE PTR [edi-0x58],al
  439177:	inc    ebx
  439178:	cmp    eax,0xbfa1248
  43917d:	stc    
  43917e:	ret    0xf20f
  439181:	sub    BYTE PTR [ebp-0x67acbc3b],0x83
  439188:	mov    dl,0xc9
  43918a:	push   esp
  43918b:	mov    edx,0xd879b1dd
  439190:	out    0xb4,eax
  439192:	push   ebp
  439193:	call   0x69fbbc62
  439198:	jl     0x43915f
  43919a:	fwait
  43919b:	adc    al,BYTE PTR [ebx+0x49c73111]
  4391a1:	imul   esp,DWORD PTR [esi],0xffffffff
  4391a4:	push   esi
  4391a5:	leave  
  4391a6:	mov    edi,0x20e553d
  4391ab:	daa    
  4391ac:	ins    DWORD PTR es:[edi],dx
  4391ad:	in     al,dx
  4391ae:	push   ss
  4391af:	jecxz  0x439228
  4391b1:	(bad)  
  4391b2:	pop    eax
  4391b3:	daa    
  4391b4:	jne    0x43922a
  4391b6:	and    BYTE PTR [edx+0x4d],dh
  4391b9:	or     al,0x8a
  4391bb:	push   0x3013ca6
  4391c0:	fmul   QWORD PTR [edx-0x4]
  4391c3:	push   0xfffffff6
  4391c5:	aam    0x9b
  4391c7:	(bad)
  4391ca:	cmp    eax,DWORD PTR ds:[ecx]
  4391cd:	ret    0x9d4a
  4391d0:	xor    edi,DWORD PTR [ebx+0x1d02ca52]
  4391d6:	jge    0x4391d7
  4391d8:	dec    ecx
  4391d9:	inc    esi
  4391da:	in     al,dx
  4391db:	and    DWORD PTR [ecx-0x63ac5492],edx
  4391e1:	xchg   edx,eax
  4391e2:	jmp    0xc7e4:0xf2814052
  4391e9:	aad    0x2b
  4391eb:	sbb    eax,0x554c007
  4391f0:	je     0x439180
  4391f2:	shl    DWORD PTR ds:0x8dcd1826,1
  4391f8:	jmp    0x622c:0x9d6f8e54
  4391ff:	pop    esi
  439200:	je     0x4391a1
  439202:	sub    dl,BYTE PTR [edx-0x1c53aaba]
  439208:	lods   al,BYTE PTR ds:[esi]
  439209:	inc    ecx
  43920a:	test   eax,0xb80a1b36
  43920f:	pushf  
  439210:	in     al,0xbb
  439212:	xchg   esp,eax
  439213:	pop    ecx
  439214:	mov    ecx,0xb5d6ee77
  439219:	jnp    0x4391bc
  43921b:	call   0x46fe:0xd9a0cd7c
  439222:	gs popf 
  439224:	push   es
  439225:	sub    dl,dl
  439227:	into   
  439228:	jmp    0xc06f572e
  43922d:	or     BYTE PTR [ebp+0x4d],ch
  439230:	jmp    0x23c86db8
  439235:	add    BYTE PTR [ecx-0xe527583],cl
  43923b:	or     al,0x32
  43923d:	cmp    al,0xef
  43923f:	mov    gs,ebp
  439241:	xchg   BYTE PTR [edi],cl
  439243:	cmp    al,0x36
  439245:	imul   ebx,DWORD PTR [eax-0x11],0xffffff90
  439249:	xchg   edx,eax
  43924a:	pusha  
  43924b:	and    al,0x1d
  43924d:	stos   BYTE PTR es:[edi],al
  43924e:	or     dl,BYTE PTR [esi]
  439250:	cwde   
  439251:	and    al,0xae
  439253:	jl     0x439237
  439255:	sbb    al,0x11
  439257:	js     0x4392d3
  439259:	cmp    al,0xb
  43925b:	outs   dx,BYTE PTR ds:[esi]
  43925c:	add    BYTE PTR [esi+0x23],al
  43925f:	fld    DWORD PTR ds:0x9aac5260
  439265:	loopne 0x4392c3
  439267:	arpl   cx,bp
  439269:	fisttp QWORD PTR [edi]
  43926b:	pop    ecx
  43926c:	mov    edx,0x449be225
  439271:	shl    DWORD PTR [esi],cl
  439273:	jp     0x4392a3
  439275:	cmp    ecx,DWORD PTR ds:0xff5428e3
  43927b:	jbe    0x439226
  43927d:	xor    DWORD PTR [edx+ebp*8+0x1bd30392],ecx
  439284:	pop    ebx
  439285:	scas   eax,DWORD PTR es:[edi]
  439286:	gs (bad) 
  439288:	jle    0x43929c
  43928a:	cmp    al,0x69
  43928c:	or     ecx,DWORD PTR [esi-0x49]
  43928f:	cdq    
  439290:	jg     0x43926a
  439292:	scas   al,BYTE PTR es:[edi]
  439293:	shl    DWORD PTR [ebx],cl
  439295:	aam    0xd5
  439297:	aad    0x3
  439299:	and    dh,BYTE PTR [edi]
  43929b:	mov    al,0xba
  43929d:	mov    esi,fs
  43929f:	mov    bl,0xcd
  4392a1:	lock push ebx
  4392a3:	dec    ebp
  4392a4:	out    dx,al
  4392a5:	cdq    
  4392a6:	jo     0x4392d1
  4392a8:	jnp    0x43922b
  4392aa:	push   esi
  4392ab:	inc    ecx
  4392ac:	and    al,0x21
  4392ae:	cmp    eax,0x4c5c5f76
  4392b3:	push   ds
  4392b4:	imul   eax,DWORD PTR [edi+0x3a],0x19ce24aa
  4392bb:	push   ecx
  4392bc:	iret   
  4392bd:	and    eax,0xb4e2c29d
  4392c2:	jo     0x4392f9
  4392c4:	aaa    
  4392c5:	add    eax,0xcbf340f3
  4392ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4392cb:	test   BYTE PTR [esi-0x13],dl
  4392ce:	in     al,0xee
  4392d0:	mov    DWORD PTR [ecx+eax*2],edx
  4392d3:	adc    dl,BYTE PTR [ebp-0x275256e6]
  4392d9:	push   edi
  4392da:	aad    0xf7
  4392dc:	sahf   
  4392dd:	in     al,0xb7
  4392df:	das    
  4392e0:	popf   
  4392e1:	jb     0x439267
  4392e3:	fisttp DWORD PTR fs:[ebx-0x49]
  4392e7:	mov    dl,0x5f
  4392e9:	ret    
  4392ea:	sbb    DWORD PTR [ecx],edx
  4392ec:	std    
  4392ed:	add    eax,0xc35083fd
  4392f2:	xchg   edx,eax
  4392f3:	mov    al,0x67
  4392f5:	push   es
  4392f6:	popa   
  4392f7:	push   edx
  4392f8:	aaa    
  4392f9:	dec    ebp
  4392fa:	fucomp st(1)
  4392fc:	mov    al,ds:0x95220a8f
  439301:	jo     0x4392fb
  439303:	mov    WORD PTR [ebp-0x5601cc59],?
  439309:	pmuludq mm3,QWORD PTR [ebx]
  43930c:	push   edx
  43930d:	adc    BYTE PTR [eax-0x3a],dl
  439310:	push   0xffffff8d
  439312:	in     al,0x44
  439314:	inc    ebx
  439315:	mov    ecx,0x1a28070d
  43931a:	xchg   ebx,eax
  43931b:	adc    DWORD PTR [ecx],ebx
  43931d:	mov    ecx,0x6e216d1c
  439322:	out    0x18,al
  439324:	mov    al,ds:0xd4c7bd89
  439329:	mov    bl,0x2
  43932b:	mov    ch,0xe7
  43932d:	sbb    eax,ebx
  43932f:	push   0xffffffa9
  439331:	jns    0x439353
  439333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439334:	mov    bh,0xf0
  439336:	jb     0x43930e
  439338:	imul   ebp,eax,0x0
  43933b:	mov    dh,0x0
  43933d:	arpl   WORD PTR [edx-0x26],bp
  439340:	mov    BYTE PTR [edx-0x17],dh
  439343:	ret    
  439344:	push   0x33
  439346:	cmp    ah,BYTE PTR [ecx+eiz*2+0x609f6647]
  43934d:	seta   BYTE PTR [esi]
  439350:	(bad)  
  439351:	nop
  439352:	outs   dx,BYTE PTR ds:[esi]
  439353:	dec    ebx
  439354:	pop    ebx
  439355:	push   esi
  439356:	sub    BYTE PTR [edi-0x79],bl
  439359:	or     esi,DWORD PTR [eax-0x71]
  43935c:	cs pause 
  43935f:	mov    ds:0xdad0f61c,al
  439364:	ds or  al,0x32
  439367:	adc    BYTE PTR [edi-0x2d],dh
  43936a:	inc    ecx
  43936b:	and    dh,BYTE PTR [eax+ebx*1+0xb]
  43936f:	leave  
  439370:	xchg   ebx,eax
  439371:	icebp  
  439372:	mov    cl,0x5b
  439374:	xchg   ebp,eax
  439375:	xor    ebx,DWORD PTR [edi+0x72]
  439378:	sbb    BYTE PTR [edx+0x35],0x4f
  43937c:	mov    ds:0xd1f59396,eax
  439381:	xchg   ecx,eax
  439382:	rcr    BYTE PTR [ebx],1
  439384:	scas   al,BYTE PTR es:[edi]
  439385:	ds or  eax,0x5eeed316
  43938b:	xor    al,0x15
  43938d:	int    0xd3
  43938f:	jmp    0x43931a
  439391:	mov    fs,edx
  439393:	int3   
  439394:	cmp    eax,0x89782c0
  439399:	sbb    eax,0x2efc0c25
  43939e:	pop    eax
  43939f:	push   cs
  4393a0:	popf   
  4393a1:	push   ebx
  4393a2:	retf   0xa0b7
  4393a5:	cdq    
  4393a6:	fisttp DWORD PTR [eax]
  4393a8:	sub    bl,dl
  4393aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4393ab:	sbb    esp,ecx
  4393ad:	clc    
  4393ae:	cli    
  4393af:	inc    ebp
  4393b0:	aad    0xa
  4393b2:	inc    esp
  4393b3:	arpl   WORD PTR [ebx-0x2df23d8c],sp
  4393b9:	or     eax,0xaaa0d9be
  4393be:	in     al,dx
  4393bf:	sub    al,0xb7
  4393c1:	jmp    0x43940f
  4393c3:	loop   0x43937c
  4393c5:	rcr    BYTE PTR [edi+0x32],cl
  4393c8:	fldcw  WORD PTR [ecx-0x7]
  4393cb:	mov    esi,0x2c609157
  4393d0:	fbld   TBYTE PTR [edi+0x4596cbc0]
  4393d6:	xchg   edi,eax
  4393d7:	js     0x43941e
  4393d9:	imul   ebx,eax,0xdf8cd6bb
  4393df:	imul   ebx,ecx,0xb9830eef
  4393e5:	jle    0x43944c
  4393e7:	push   0xffffffba
  4393e9:	fst    DWORD PTR [ebx-0x80]
  4393ec:	(bad)  
  4393ed:	loop   0x439375
  4393ef:	aam    0x45
  4393f1:	mov    eax,ebx
  4393f3:	sahf   
  4393f4:	ja     0x43944b
  4393f6:	pop    ebx
  4393f7:	fidiv  WORD PTR [ebp+0x14fa3c5b]
  4393fd:	sbb    bh,BYTE PTR [eax+0x2f]
  439400:	ins    BYTE PTR es:[edi],dx
  439401:	out    dx,eax
  439402:	or     eax,0x69233c89
  439407:	lea    ebp,ds:0x2c32cae2
  43940d:	xor    BYTE PTR [esi],al
  43940f:	repnz repz fwait
  439412:	and    BYTE PTR [esi+0x9],bl
  439415:	je     0x4393e0
  439417:	add    ch,al
  439419:	add    ah,BYTE PTR [esi-0x5ef8ed20]
  43941f:	xlat   BYTE PTR ds:[ebx]
  439420:	arpl   WORD PTR [edi-0x4f],si
  439423:	inc    esp
  439424:	(bad)  
  439426:	cs (bad) 
  439428:	in     eax,dx
  439429:	cs pop ecx
  43942b:	sub    esp,ebp
  43942d:	xchg   BYTE PTR [edi+eax*2],dh
  439430:	sub    DWORD PTR [eax+0x6d],eax
  439433:	and    al,0x5d
  439435:	mov    WORD PTR [ebx-0x3],fs
  439438:	mov    edi,0x4993a9a4
  43943d:	mov    edx,DWORD PTR [eax+0x47]
  439440:	mov    esp,0x4a34e4d5
  439445:	ins    DWORD PTR es:[edi],dx
  439446:	dec    eax
  439447:	sub    al,0x3b
  439449:	jmp    0xd9a9a3f6
  43944e:	pop    ebx
  43944f:	mov    esi,0x86250249
  439454:	in     al,dx
  439455:	or     cl,BYTE PTR [ecx]
  439457:	xchg   DWORD PTR [ebx+0x14],ebp
  43945a:	xor    BYTE PTR [edi+0x1c],ch
  43945d:	mov    eax,0x7fbfa5a9
  439462:	aas    
  439463:	cmp    DWORD PTR [esi],edx
  439465:	sbb    eax,0xed489816
  43946a:	ins    DWORD PTR es:[edi],dx
  43946b:	test   eax,0xcd472f6f
  439470:	mov    bl,0xbb
  439472:	xor    BYTE PTR [edx+eax*1+0x30],bl
  439476:	fist   DWORD PTR [ebx+0x1f]
  439479:	sub    BYTE PTR [ecx+0x52deea4c],ch
  43947f:	or     eax,DWORD PTR [ebp-0x5f516933]
  439485:	add    bh,al
  439487:	inc    esi
  439488:	and    DWORD PTR [edi-0x74a45fb8],ebp
  43948e:	add    eax,DWORD PTR [eax-0x26]
  439491:	ret    0xe1
  439494:	and    eax,0x531553dc
  439499:	push   ss
  43949a:	or     eax,0x424c4f96
  43949f:	das    
  4394a0:	inc    edi
  4394a1:	or     dh,BYTE PTR [edi]
  4394a3:	push   edi
  4394a4:	inc    ecx
  4394a5:	and    DWORD PTR [edi-0x576264fa],edi
  4394ab:	enter  0xb7b5,0xf8
  4394af:	sbb    ch,BYTE PTR [ecx]
  4394b1:	aaa    
  4394b2:	lahf   
  4394b3:	enter  0xdd06,0xce
  4394b7:	sti    
  4394b8:	and    eax,0x17581a25
  4394bd:	rcl    BYTE PTR [ecx+0xf],1
  4394c0:	test   eax,0x545e34c2
  4394c5:	stos   BYTE PTR es:[edi],al
  4394c6:	mov    dh,0xd4
  4394c8:	stc    
  4394c9:	mov    ebp,0x17a2df63
  4394ce:	jmp    0x43948e
  4394d0:	mov    ebp,0x92390cd2
  4394d5:	test   bl,ah
  4394d7:	jae    0x4394fc
  4394d9:	sbb    eax,0xc794f4a0
  4394de:	std    
  4394df:	jne    0x43949c
  4394e1:	neg    DWORD PTR [edi]
  4394e3:	jne    0x43949b
  4394e5:	lahf   
  4394e6:	sti    
  4394e7:	ret    0xe678
  4394ea:	or     BYTE PTR [edi],dl
  4394ec:	scas   eax,DWORD PTR es:[edi]
  4394ed:	mov    ds:0x2b9889ef,eax
  4394f2:	push   esp
  4394f3:	test   BYTE PTR [edx],ch
  4394f5:	out    0x47,al
  4394f7:	jl     0x439571
  4394f9:	outs   dx,DWORD PTR ds:[esi]
  4394fa:	es (bad) 
  4394fc:	cmp    eax,0xfdf9242a
  439501:	in     al,dx
  439502:	outs   dx,DWORD PTR ds:[esi]
  439503:	aas    
  439504:	mul    DWORD PTR [ebp+ebp*4+0x3f]
  439508:	fucomip st,st(2)
  43950a:	inc    edx
  43950b:	mul    BYTE PTR [ebx+esi*2]
  43950e:	mov    cl,BYTE PTR [ecx+0x128509e]
  439514:	push   edx
  439515:	fstp   st(6)
  439517:	les    ebp,FWORD PTR [esi+0xa710cc9]
  43951d:	mov    ah,0xed
  43951f:	pop    edx
  439520:	pop    ds
  439521:	xor    al,0x20
  439523:	enter  0x9283,0xed
  439527:	popf   
  439528:	out    dx,eax
  439529:	xlat   BYTE PTR ds:[ebx]
  43952a:	mov    ebp,0xf50b9f3f
  43952f:	in     eax,dx
  439530:	test   BYTE PTR [edx+0x2e],0xd0
  439534:	sub    BYTE PTR [edx+0x56],ch
  439537:	adc    DWORD PTR [eax+0x1c527f53],0xffffffa3
  43953e:	js     0x439582
  439540:	cwde   
  439541:	fisub  DWORD PTR [edx-0x7]
  439544:	push   0x41821b98
  439549:	sbb    dh,al
  43954b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43954c:	stc    
  43954d:	xor    al,0x97
  43954f:	adc    eax,0xf245e3f8
  439554:	fld    TBYTE PTR [ebx+eiz*8-0x56d0bd15]
  43955b:	in     eax,0xe9
  43955d:	jp     0x43953f
  43955f:	push   ebx
  439560:	push   ss
  439561:	enter  0xa29a,0xc
  439565:	lods   al,BYTE PTR ds:[esi]
  439566:	lods   eax,DWORD PTR ds:[esi]
  439567:	add    DWORD PTR [edx],ebx
  439569:	inc    edi
  43956a:	add    DWORD PTR [eiz*4-0x771bc997],0xe501eaf7
  439575:	push   esi
  439576:	add    cl,BYTE PTR [edi]
  439578:	dec    ecx
  439579:	cmp    edi,DWORD PTR [ebp+0x5a3a21c6]
  43957f:	repz ret 
  439581:	dec    edi
  439582:	leave  
  439583:	movntq QWORD PTR [ebx-0x2d],mm6
  439587:	sbb    eax,0x908aa7ed
  43958c:	test   eax,0xdf2419c2
  439591:	cmp    BYTE PTR [edx+0x26],bl
  439594:	dec    ebp
  439595:	xchg   ebx,eax
  439596:	jo     0x43959d
  439598:	cs mov edi,0x5923d5df
  43959e:	mul    BYTE PTR [edi]
  4395a0:	sbb    edx,ebp
  4395a2:	push   0x3e1dedc5
  4395a7:	push   ebp
  4395a8:	jmp    0x5ad6:0x9600c606
  4395af:	adc    BYTE PTR [eax-0x6bff080b],ch
  4395b5:	sub    al,0x70
  4395b7:	jnp    0x439555
  4395b9:	adc    dh,bh
  4395bb:	mov    WORD PTR [ebp+0x45b289dd],cs
  4395c1:	and    ebx,edi
  4395c3:	xchg   esp,ecx
  4395c5:	gs es or eax,0xcd666e8d
  4395cc:	pop    ss
  4395cd:	stos   DWORD PTR es:[edi],eax
  4395ce:	pop    es
  4395cf:	or     edi,ecx
  4395d1:	jb     0x4395dc
  4395d3:	sar    DWORD PTR [esi-0x54],1
  4395d6:	pop    ds
  4395d7:	inc    edx
  4395d8:	outs   dx,DWORD PTR ds:[esi]
  4395d9:	in     al,dx
  4395da:	loop   0x4395ee
  4395dc:	int3   
  4395dd:	stos   BYTE PTR es:[edi],al
  4395de:	call   DWORD PTR [ebp-0x40]
  4395e1:	pop    esi
  4395e2:	imul   edx,DWORD PTR [edi],0x65
  4395e5:	jle    0x439616
  4395e7:	pop    ebp
  4395e8:	jle    0x439602
  4395ea:	xchg   edx,eax
  4395eb:	aad    0x44
  4395ed:	dec    esi
  4395ee:	push   esi
  4395ef:	xchg   esp,eax
  4395f0:	loop   0x4395c7
  4395f2:	cs test eax,0x6feb19e
  4395f8:	xlat   BYTE PTR ds:[ebx]
  4395f9:	sahf   
  4395fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4395fb:	shl    BYTE PTR [edi-0x56],cl
  4395fe:	jb     0x439618
  439600:	cli    
  439601:	shr    DWORD PTR [edi-0x4440d0f0],0x1
  439608:	stos   BYTE PTR es:[edi],al
  439609:	dec    esp
  43960a:	jo     0x4395b6
  43960c:	or     eax,0x6d16858f
  439611:	cmp    BYTE PTR [edi+0x5285358],bh
  439617:	xchg   edi,eax
  439618:	mov    BYTE PTR [esi-0x7a8e95c5],dl
  43961e:	sbb    bh,BYTE PTR [edi+0xe960651]
  439624:	xchg   ecx,eax
  439625:	fistp  DWORD PTR [esi+0x33]
  439628:	ss iret 
  43962a:	sub    DWORD PTR [eax+edi*4],ebx
  43962d:	fld    TBYTE PTR [ebp-0x6]
  439630:	sbb    cl,BYTE PTR [eax]
  439632:	retf   
  439633:	mov    BYTE PTR [edi],al
  439635:	in     al,dx
  439636:	sbb    eax,0xfa036487
  43963b:	rol    DWORD PTR [edi+0x50e01304],cl
  439641:	cmp    DWORD PTR [edx+0x52],esp
  439644:	push   ecx
  439645:	jae    0x4395db
  439647:	ins    DWORD PTR es:[edi],dx
  439648:	jge    0x4395cb
  43964a:	xor    cl,BYTE PTR [ebx+0x25d11dc9]
  439650:	jecxz  0x4395dc
  439652:	imul   ebx,DWORD PTR [eax+0x3e],0x9cafe411
  439659:	(bad)  
  43965b:	mov    edi,0xd694f0db
  439660:	gs mov ch,0x46
  439663:	inc    ebp
  439664:	cmp    dl,BYTE PTR [ebx]
  439666:	(bad)  
  439667:	mov    edi,0xf1705713
  43966c:	jle    0x43963c
  43966e:	pop    eax
  43966f:	les    eax,FWORD PTR [ebx-0x605727e4]
  439675:	cmp    ebx,ecx
  439677:	pushf  
  439678:	adc    eax,0x3f522f9c
  43967d:	or     bh,BYTE PTR [ebx+0x4236f6ff]
  439683:	mov    bh,0xbc
  439685:	aas    
  439686:	mov    al,ds:0x1662519a
  43968b:	mov    DWORD PTR [ecx+0xd],esi
  43968e:	jmp    0x745e:0x1cd7d5bf
  439695:	arpl   WORD PTR ds:0x605f6098,si
  43969b:	retf   
  43969c:	inc    ebx
  43969d:	loop   0x43963c
  43969f:	or     ebp,DWORD PTR [edx]
  4396a1:	pop    ebx
  4396a2:	add    ebx,edi
  4396a4:	sbb    bl,dl
  4396a6:	mov    dl,0x49
  4396a8:	retf   
  4396a9:	and    esi,esi
  4396ab:	pop    eax
  4396ac:	push   ss
  4396ad:	pop    ds
  4396ae:	daa    
  4396af:	xchg   DWORD PTR [edi+ebx*4],eax
  4396b2:	inc    edi
  4396b3:	imul   ebp,DWORD PTR [edx+0xb],0x11
  4396b7:	cwde   
  4396b8:	dec    ebx
  4396b9:	jb     0x43966f
  4396bb:	sbb    BYTE PTR [eax+0x5f],bl
  4396be:	gs test edi,eax
  4396c1:	fadd   DWORD PTR [eax]
  4396c3:	jmp    0xe65a179a
  4396c8:	push   esi
  4396c9:	sub    edi,DWORD PTR [ecx+0xb]
  4396cc:	xchg   esp,eax
  4396cd:	add    eax,0x622148b8
  4396d2:	mov    BYTE PTR [ebx],bl
  4396d4:	out    0xe9,al
  4396d6:	xchg   BYTE PTR [ecx+edi*4+0x24],dh
  4396da:	mov    ds:0xfdec2fb4,al
  4396df:	dec    esi
  4396e0:	cmp    esp,ecx
  4396e2:	pop    ecx
  4396e3:	ins    BYTE PTR es:[edi],dx
  4396e4:	shl    al,0xdb
  4396e7:	or     ecx,eax
  4396e9:	push   ax
  4396eb:	outs   dx,BYTE PTR gs:[esi]
  4396ed:	mov    eax,0x4a98b9dd
  4396f2:	dec    ecx
  4396f4:	xchg   esi,eax
  4396f5:	lahf   
  4396f6:	lock mov bl,0xfb
  4396f9:	in     eax,0xdf
  4396fb:	sub    bl,BYTE PTR [ebx]
  4396fd:	fnsave [eax]
  4396ff:	lea    esi,[edi]
  439701:	adc    eax,0x278f1e20
  439706:	int3   
  439707:	dec    edx
  439708:	ss cwde 
  43970a:	push   edx
  43970b:	add    al,BYTE PTR [esi]
  43970d:	call   0x54a4c5e4
  439712:	(bad)  
  439713:	loope  0x43973b
  439715:	cdq    
  439716:	or     BYTE PTR [ebx],cl
  439718:	ret    0xe752
  43971b:	mov    ds:0x40499e54,al
  439720:	inc    eax
  439721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439722:	add    eax,0xe02be285
  439727:	lea    edi,[edx+0x3b]
  43972a:	aam    0x81
  43972c:	adc    DWORD PTR [eax+0xb6014e],esp
  439732:	jl     0x439771
  439734:	pop    esp
  439735:	mov    ebx,fs
  439737:	pop    edx
  439738:	xchg   ebx,eax
  439739:	push   esp
  43973a:	sbb    DWORD PTR [edi+0x2d9b4c20],ebp
  439740:	ja     0x439796
  439742:	lods   al,BYTE PTR ds:[esi]
  439743:	pop    edx
  439744:	es sahf 
  439746:	sbb    eax,0x1c6b299b
  43974b:	mov    edx,0xd16bcf02
  439750:	xchg   ecx,eax
  439751:	xor    BYTE PTR [esi],ah
  439753:	sbb    bh,BYTE PTR [edx]
  439755:	sar    DWORD PTR [bx+di+0x43],cl
  439759:	or     BYTE PTR [ecx-0x49],ch
  43975c:	pop    ebp
  43975d:	fwait
  43975e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43975f:	sbb    al,0xb6
  439761:	jb     0x43972c
  439763:	je     0x43979c
  439765:	jecxz  0x4397c7
  439767:	aaa    
  439768:	out    dx,al
  439769:	es scas al,BYTE PTR es:[edi]
  43976b:	mov    bh,0x5b
  43976d:	repz jp 0x439760
  439770:	inc    eax
  439771:	das    
  439772:	xchg   esi,eax
  439773:	mov    dh,BYTE PTR [ebp+0x4b7fd437]
  439779:	pop    ds
  43977a:	out    0xe9,eax
  43977c:	push   cs
  43977d:	ja     0x43976e
  43977f:	xchg   ebx,eax
  439780:	xchg   edx,eax
  439781:	dec    edx
  439782:	inc    esp
  439783:	mov    esp,0x878506cd
  439788:	sub    DWORD PTR [ecx],ecx
  43978a:	lods   al,BYTE PTR ds:[esi]
  43978b:	push   ss
  43978c:	call   0xb562263
  439791:	sbb    edi,ebp
  439793:	xchg   edi,eax
  439794:	xlat   BYTE PTR ds:[ebx]
  439795:	jo     0x4397fa
  439797:	mov    esi,0xb988996d
  43979c:	sub    edi,ecx
  43979e:	ss jmp 0xd53:0x1c4286e4
  4397a6:	into   
  4397a7:	test   al,0x4c
  4397a9:	xchg   esp,eax
  4397aa:	stos   DWORD PTR es:[edi],eax
  4397ab:	dec    ebx
  4397ac:	mov    ebx,0xff9cb287
  4397b1:	pushf  
  4397b2:	cmp    eax,0x731359aa
  4397b7:	dec    edi
  4397b8:	jo     0x439746
  4397ba:	xor    ebp,edi
  4397bc:	sbb    BYTE PTR [edi],0x91
  4397bf:	ins    DWORD PTR es:[edi],dx
  4397c0:	test   DWORD PTR [eax+0x45],ebx
  4397c3:	aaa    
  4397c4:	xchg   ecx,eax
  4397c5:	sti    
  4397c6:	stc    
  4397c7:	or     BYTE PTR fs:[edi+0x58],bh
  4397cb:	call   0xf8979ee0
  4397d0:	xchg   ebx,eax
  4397d1:	int    0x70
  4397d3:	pop    esi
  4397d4:	inc    esi
  4397d5:	test   eax,0x598e7459
  4397da:	ins    DWORD PTR es:[edi],dx
  4397db:	sahf   
  4397dc:	xor    BYTE PTR [esi-0x6938c44a],ah
  4397e2:	or     ebx,DWORD PTR es:[eax+ecx*8-0x18]
  4397e7:	into   
  4397e8:	push   es
  4397e9:	inc    ebp
  4397ea:	mov    ebx,0xbac3c610
  4397ef:	push   edi
  4397f0:	mov    edi,0x73a73d87
  4397f5:	aas    
  4397f6:	inc    edx
  4397f7:	popf   
  4397f8:	sbb    al,0xd6
  4397fa:	jns    0x43977f
  4397fc:	outs   dx,DWORD PTR ds:[esi]
  4397fd:	jne    0x439813
  4397ff:	nop
  439800:	scas   al,BYTE PTR es:[edi]
  439801:	pop    ds
  439802:	jb     0x439835
  439804:	cs es out dx,eax
  439807:	rcr    BYTE PTR [edi+0x25109304],1
  43980d:	rcl    BYTE PTR [edi-0x68],cl
  439810:	sub    eax,0xa16058b4
  439815:	sbb    al,0x89
  439817:	cmp    edx,DWORD PTR [edx]
  439819:	mov    esi,0x9190a614
  43981e:	out    dx,eax
  43981f:	popa   
  439820:	(bad)  
  439821:	pop    eax
  439822:	lods   eax,DWORD PTR ds:[esi]
  439823:	neg    BYTE PTR [edx+edi*2]
  439826:	cmp    ecx,esp
  439828:	dec    ecx
  439829:	pop    edx
  43982a:	out    dx,eax
  43982b:	mov    dl,0x92
  43982d:	jp     0x439822
  43982f:	inc    ebx
  439830:	sub    al,0x8e
  439832:	mov    cs,WORD PTR [edx+0x7a0b268c]
  439838:	(bad)  
  43983a:	loope  0x439831
  43983c:	lahf   
  43983d:	enter  0x2ef,0x23
  439841:	clc    
  439842:	js     0x4398bd
  439844:	dec    esi
  439845:	dec    esp
  439846:	out    dx,eax
  439847:	cld    
  439848:	lea    edi,ds:0x65016432
  43984e:	jmp    0xf88b0fcb
  439853:	add    DWORD PTR [eax-0x5d],0x49
  439857:	cmp    edx,DWORD PTR ds:0x46d5f0a2
  43985d:	push   edi
  43985e:	xor    dl,BYTE PTR [eax+ebp*4]
  439861:	(bad)  
  439862:	into   
  439863:	fsubr  QWORD PTR [eax]
  439865:	adc    al,0x45
  439867:	aaa    
  439868:	(bad)  
  439869:	aad    0x30
  43986b:	xor    eax,0x71a199fe
  439870:	dec    edx
  439871:	lods   al,BYTE PTR ds:[esi]
  439872:	les    ebx,FWORD PTR [ebp+0x31]
  439875:	cmp    eax,0x1dc11801
  43987a:	inc    esp
  43987b:	arpl   ax,bx
  43987d:	shr    bh,0x3
  439880:	or     al,0x94
  439882:	jbe    0x43985f
  439884:	push   ds
  439885:	mov    bh,0x1c
  439887:	push   eax
  439888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439889:	nop
  43988a:	mov    bl,0x9e
  43988c:	(bad)  
  43988d:	aaa    
  43988e:	in     al,0xb3
  439890:	push   edi
  439891:	cmp    al,0x47
  439893:	dec    ebx
  439894:	sahf   
  439895:	mov    ds:0x3eeeac0c,al
  43989a:	mov    ds:0xbb07fdba,al
  43989f:	ret    0x1875
  4398a2:	clc    
  4398a3:	sbb    BYTE PTR [eax+0x26701d37],cl
  4398a9:	cli    
  4398aa:	inc    ebx
  4398ab:	adc    al,0x1d
  4398ad:	mov    eax,ds:0xdad67a4a
  4398b2:	cmp    bh,ch
  4398b4:	popf   
  4398b5:	inc    ebp
  4398b6:	ret    0xf221
  4398b9:	std    
  4398ba:	or     eax,0x714d1ec7
  4398bf:	(bad)  
  4398c0:	xchg   BYTE PTR [edi+ebp*4-0x7d],dh
  4398c4:	(bad)  
  4398c5:	jmp    0xda3f:0xcca83e32
  4398cc:	dec    eax
  4398cd:	xor    ebx,DWORD PTR [ebx+0x5b30cbf0]
  4398d3:	dec    esp
  4398d4:	out    dx,al
  4398d5:	iret   
  4398d6:	mov    ch,0x40
  4398d8:	push   edx
  4398d9:	pop    ebp
  4398da:	sbb    eax,0xe48f560f
  4398df:	les    edx,FWORD PTR [edx-0x2f96bea1]
  4398e5:	stc    
  4398e6:	stc    
  4398e7:	xor    DWORD PTR ds:0x48f1da7,ebp
  4398ed:	xlat   BYTE PTR ds:[ebx]
  4398ee:	sbb    eax,0x64166e65
  4398f3:	push   ebx
  4398f4:	out    0xd9,eax
  4398f6:	enter  0x2c80,0xe5
  4398fa:	jne    0x439966
  4398fc:	mov    ebp,0x7b1fffff
  439901:	inc    eax
  439902:	jo     0x439912
  439904:	cmp    BYTE PTR [ecx],dh
  439906:	push   ebp
  439907:	js     0x43992e
  439909:	xchg   BYTE PTR [ecx],al
  43990b:	outs   dx,BYTE PTR ds:[esi]
  43990c:	fs (bad) 
  43990e:	jns    0x439908
  439910:	out    0x5d,eax
  439912:	jmp    0xc575:0xde625311
  439919:	mov    cl,BYTE PTR [edx+0x38]
  43991c:	rol    BYTE PTR [eax+0x496b7625],0xf3
  439923:	add    dl,bl
  439925:	pop    ecx
  439926:	dec    edi
  439927:	xor    dl,0x26
  43992a:	pop    ecx
  43992b:	pusha  
  43992c:	push   eax
  43992d:	jle    0x43998b
  43992f:	js     0x4398db
  439931:	lahf   
  439932:	lea    ebx,[edi+0x27a225a1]
  439938:	loop   0x439913
  43993a:	lds    edi,FWORD PTR [ecx+0x2aade834]
  439940:	or     al,0x51
  439942:	xchg   BYTE PTR [ebx],bh
  439944:	xor    DWORD PTR [edx],0x21aa0c9f
  43994a:	mov    esp,0x8cfd0ca5
  43994f:	ret    
  439950:	lea    esi,[esi]
  439952:	cmp    bl,BYTE PTR [ebx+0x166ce828]
  439958:	int    0x84
  43995a:	add    cl,BYTE PTR [edi-0x5d4ca1a5]
  439960:	shr    DWORD PTR [edx+0x51d9353d],1
  439966:	sahf   
  439967:	loope  0x4399a9
  439969:	xchg   DWORD PTR [edx-0x52],edi
  43996c:	mov    esp,0xcb8fa02e
  439971:	adc    esp,esi
  439973:	push   eax
  439974:	popa   
  439975:	ins    DWORD PTR es:[edi],dx
  439976:	and    al,0x25
  439978:	mov    al,BYTE PTR [edi+0x35]
  43997b:	pop    edx
  43997c:	xchg   BYTE PTR [ebx-0x75d17392],al
  439982:	cmp    DWORD PTR [ecx+0x412fdd5b],ecx
  439988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439989:	push   ebx
  43998a:	int3   
  43998b:	mov    bl,0x7
  43998e:	push   DWORD PTR [ebx+0x71]
  439991:	nop
  439992:	cdq    
  439993:	xchg   ebp,eax
  439994:	das    
  439995:	cld    
  439996:	retf   
  439997:	ins    BYTE PTR es:[edi],dx
  439998:	pop    ebx
  439999:	retf   0x996b
  43999c:	inc    esi
  43999d:	or     ebx,DWORD PTR [eax-0x5e]
  4399a0:	push   ecx
  4399a1:	sbb    eax,DWORD PTR [ebx-0x4988c56d]
  4399a7:	ss (bad) 
  4399a9:	push   edi
  4399aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4399ab:	mov    eax,DWORD PTR [esi-0x78832886]
  4399b1:	xchg   ebx,eax
  4399b2:	mov    bl,0x5d
  4399b4:	and    eax,ecx
  4399b6:	icebp  
  4399b7:	dec    BYTE PTR [edi+0x4a]
  4399ba:	pop    ecx
  4399bb:	mov    eax,ds:0x7bd4db02
  4399c0:	fiadd  WORD PTR [edi+0x69fdd224]
  4399c6:	mov    eax,ds:0x84c42ad1
  4399cb:	loop   0x439972
  4399cd:	pop    ebx
  4399ce:	mov    ds:0x6ab0ab12,eax
  4399d3:	addr16 pop ebp
  4399d5:	push   eax
  4399d6:	inc    ecx
  4399d7:	push   0x51fbdb7
  4399dc:	jnp    0x43997f
  4399de:	xchg   edi,eax
  4399df:	es push ebx
  4399e1:	pop    ds
  4399e2:	xlat   BYTE PTR ds:[ebx]
  4399e3:	loope  0x43996b
  4399e5:	xchg   esp,eax
  4399e6:	jnp    0x439a56
  4399e8:	scas   al,BYTE PTR es:[edi]
  4399e9:	outs   dx,DWORD PTR ds:[esi]
  4399ea:	or     al,0x99
  4399ec:	push   ds
  4399ed:	jnp    0x439976
  4399ef:	xchg   edx,eax
  4399f0:	rcl    DWORD PTR [esi+0xc],0x74
  4399f4:	sub    eax,0xf4aea84d
  4399f9:	cmp    cl,ch
  4399fb:	mov    eax,DWORD PTR [edi+0x6dec173b]
  439a01:	int3   
  439a02:	shl    BYTE PTR [edi],cl
  439a04:	ins    DWORD PTR es:[edi],dx
  439a05:	shl    al,1
  439a07:	xchg   esp,eax
  439a08:	inc    edx
  439a09:	sbb    eax,0x6e54bfba
  439a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a0f:	mov    bl,0x66
  439a11:	out    dx,eax
  439a12:	and    cl,bl
  439a14:	sub    BYTE PTR [ebx+0x28],dl
  439a17:	cmp    bh,dl
  439a19:	cwde   
  439a1a:	enter  0x4ffe,0x15
  439a1e:	jo     0x4399a4
  439a20:	imul   edi,DWORD PTR [edx-0x18a7bf10],0xffffffe0
  439a27:	test   eax,0x1e6a4a7b
  439a2c:	sahf   
  439a2d:	jb     0x439a74
  439a2f:	push   es
  439a30:	hlt    
  439a31:	popa   
  439a32:	jno    0x439a9c
  439a34:	mov    ch,al
  439a36:	(bad)  
  439a37:	sbb    ebx,DWORD PTR ds:0xf8521f3d
  439a3d:	in     al,0x61
  439a3f:	ss mov esp,0x5ea55de0
  439a45:	(bad)  
  439a46:	mov    esp,edi
  439a48:	push   ds
  439a49:	mov    dh,0x65
  439a4b:	in     eax,dx
  439a4c:	push   edx
  439a4d:	pop    ebx
  439a4e:	xor    al,0x1f
  439a50:	iret   
  439a51:	push   ebp
  439a52:	in     eax,dx
  439a53:	cmc    
  439a54:	push   cs
  439a55:	pusha  
  439a56:	frstor [edi-0x33]
  439a59:	push   0x1179b82c
  439a5e:	mov    DWORD PTR [ebx+0x3f],esp
  439a61:	mov    ds:0xd2e2d33f,eax
  439a66:	lock aam 0x40
  439a69:	call   DWORD PTR [ebp-0x54e74cca]
  439a6f:	clc    
  439a70:	mov    ecx,DWORD PTR [ecx+ebp*1+0x20c22c92]
  439a77:	cmc    
  439a78:	(bad)  
  439a79:	nop
  439a7a:	inc    di
  439a7c:	add    al,0x66
  439a7e:	and    ch,BYTE PTR [ecx-0x2f94d7d2]
  439a84:	out    dx,al
  439a85:	idiv   BYTE PTR [edx+ebp*4]
  439a88:	stos   BYTE PTR es:[edi],al
  439a89:	and    esp,DWORD PTR [ebx]
  439a8b:	and    DWORD PTR [edx+0x55],edi
  439a8e:	jns    0x439ada
  439a90:	pop    ecx
  439a91:	aam    0xc9
  439a93:	popa   
  439a94:	push   ss
  439a95:	and    al,0x77
  439a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439a98:	pop    ds
  439a99:	mov    ds:0x6a34879e,eax
  439a9e:	shl    BYTE PTR [ecx+edx*1-0x4324e666],1
  439aa5:	sub    BYTE PTR [eax],al
  439aa7:	cmp    ecx,edi
  439aa9:	in     al,0x58
  439aab:	fs sub eax,0xb2cad569
  439ab1:	ds ret 0xbc9e
  439ab5:	in     eax,dx
  439ab6:	gs rol ebp,cl
  439ab9:	cmp    dl,BYTE PTR [ebx-0x520ffa88]
  439abf:	ret    0x45bc
  439ac2:	shl    BYTE PTR [ecx-0x65],0xa6
  439ac6:	and    ah,ah
  439ac8:	mov    ebp,0x722c6eb5
  439acd:	ror    DWORD PTR [edi+0x609449e],1
  439ad3:	mov    ebx,0xe3051293
  439ad8:	mov    eax,0x3e6f414f
  439add:	or     ah,al
  439adf:	je     0x439aa1
  439ae1:	fcom   DWORD PTR [edx-0x6257da9]
  439ae7:	add    BYTE PTR [ebx],bh
  439ae9:	cdq    
  439aea:	push   ds
  439aeb:	xor    al,0x6a
  439aed:	push   edx
  439aee:	(bad)  
  439aef:	mov    ebx,0x6449b014
  439af4:	xchg   edi,eax
  439af5:	push   ebp
  439af6:	fs cmp esp,ebx
  439af9:	ret    0x670e
  439afc:	mov    al,0xc7
  439afe:	cmp    BYTE PTR [esi+0x69b8b85d],bl
  439b04:	sbb    al,0x46
  439b06:	adc    BYTE PTR [edi+eax*4],dh
  439b09:	inc    ebx
  439b0a:	jmp    0x6bb9495f
  439b0f:	es ins DWORD PTR es:[edi],dx
  439b11:	mov    al,ds:0x2a0e2fe5
  439b16:	sbb    eax,0x7b5d0619
  439b1b:	xchg   ebx,eax
  439b1c:	mov    eax,ss
  439b1e:	aaa    
  439b1f:	xchg   ebx,eax
  439b20:	les    ebp,FWORD PTR [eax-0x56]
  439b23:	xor    BYTE PTR [eax-0x3834fa0c],al
  439b29:	xchg   ebx,esp
  439b2b:	psrlw  mm2,QWORD PTR [eax]
  439b2e:	fsubr  DWORD PTR [ecx-0x1b]
  439b31:	sahf   
  439b32:	mov    ds,edx
  439b34:	ret    
  439b35:	es ja  0x439af1
  439b38:	jp     0x439b6d
  439b3a:	lods   al,BYTE PTR ds:[esi]
  439b3b:	lods   eax,DWORD PTR ds:[esi]
  439b3c:	mov    esi,0xe3521393
  439b41:	and    esp,DWORD PTR [eax-0x61]
  439b44:	add    cl,BYTE PTR [ecx]
  439b46:	xchg   ecx,eax
  439b47:	pusha  
  439b48:	add    DWORD PTR [esi-0x5f],ebp
  439b4b:	cmp    BYTE PTR [edi-0x6acaf482],dl
  439b51:	call   0x5eb8:0xaab2ac5f
  439b58:	ret    0x1cfb
  439b5b:	retf   
  439b5c:	arpl   WORD PTR [ecx],di
  439b5e:	and    eax,0x37829f2b
  439b63:	fdivp  st(0),st
  439b65:	loope  0x439b8b
  439b67:	out    0xef,eax
  439b69:	sub    eax,0xefea72da
  439b6e:	adc    BYTE PTR [edx+0x640977b8],ah
  439b74:	add    eax,0x56406598
  439b79:	inc    esp
  439b7a:	push   0xdc2a5727
  439b7f:	shl    edi,cl
  439b81:	add    al,0xa2
  439b83:	or     ebp,DWORD PTR [di+0xe54]
  439b88:	adc    BYTE PTR ds:0xac43d7f,cl
  439b8e:	and    DWORD PTR [ecx-0x38e9586d],0xfffffff2
  439b95:	jo     0x439b26
  439b97:	scas   al,BYTE PTR es:[edi]
  439b98:	test   al,cl
  439b9a:	dec    ebx
  439b9b:	(bad)  
  439b9c:	dec    edx
  439b9d:	mov    ebp,0x5d0ed20f
  439ba2:	pop    edx
  439ba3:	mov    cl,0xa1
  439ba5:	pushf  
  439ba6:	push   ebp
  439ba7:	mov    al,ds:0xa0532682
  439bac:	inc    eax
  439bad:	cwde   
  439bae:	js     0xd87e1a41
  439bb4:	loope  0x439b80
  439bb6:	mov    al,0x86
  439bb8:	shr    DWORD PTR [ebp+0x6bb3fba3],0xa8
  439bbf:	xchg   ebx,eax
  439bc0:	jmp    0xa3f1:0xa3f8313c
  439bc7:	xchg   edi,eax
  439bc8:	xchg   edi,eax
  439bc9:	inc    edx
  439bca:	loope  0x439c05
  439bcc:	les    ecx,FWORD PTR [ebx+0x6a]
  439bcf:	mov    edi,0xf61bedc1
  439bd4:	jg     0x439bd0
  439bd6:	or     DWORD PTR [ebp+0x2d],esi
  439bd9:	mov    ebp,ebp
  439bdb:	int    0xbd
  439bdd:	pop    edx
  439bde:	gs adc al,0x3a
  439be1:	out    dx,eax
  439be2:	xor    eax,0x2aca03ba
  439be7:	push   cs
  439be8:	(bad)  
  439be9:	adc    DWORD PTR ds:0xbd5e64f3,eax
  439bef:	mov    al,0x69
  439bf1:	or     eax,0x70e75b81
  439bf6:	dec    ebx
  439bf7:	imul   edi,edi,0x37
  439bfa:	call   0x4bfd21a8
  439bff:	test   eax,0xf53d92a5
  439c04:	xor    ch,bh
  439c06:	add    DWORD PTR [ebx+ebx*4+0x57],ebp
  439c0a:	loop   0x439c25
  439c0c:	mov    bh,0xe1
  439c0e:	pop    ds
  439c0f:	pop    ds
  439c10:	mov    dl,0x7d
  439c12:	mov    esp,0xb169ccd4
  439c17:	fnstcw WORD PTR [esi-0x7]
  439c1a:	shr    ah,0x7f
  439c1d:	(bad)  
  439c1e:	push   ebp
  439c1f:	mov    ecx,0x4cac7b55
  439c24:	push   0xfac4a91b
  439c29:	and    ebp,ebp
  439c2b:	aad    0xb4
  439c2d:	pop    ss
  439c2e:	inc    edx
  439c2f:	adc    DWORD PTR [ebx-0x46],edi
  439c32:	je     0x439ca1
  439c34:	imul   ecx,DWORD PTR [esi+edx*2],0x56
  439c38:	inc    ecx
  439c39:	mov    esi,0xd7b73b06
  439c3e:	fistp  QWORD PTR [edi+edi*2-0x7]
  439c42:	fdiv   DWORD PTR [eax-0x3]
  439c45:	jmp    0x439c0a
  439c47:	ja     0x439c93
  439c49:	mov    eax,ds:0x61f912b9
  439c4e:	xor    eax,0x6602ff3a
  439c53:	mov    dh,al
  439c55:	sbb    eax,0x1079ef3d
  439c5a:	mov    ds:0xecdbe267,al
  439c5f:	push   ebx
  439c60:	mov    BYTE PTR [ebx+0x50e74a2d],dl
  439c66:	mov    ebp,0x80c97cdd
  439c6b:	mov    bl,BYTE PTR [edx]
  439c6d:	dec    esp
  439c6e:	stc    
  439c6f:	fadd   QWORD PTR [ebp-0xa]
  439c72:	fsubr  DWORD PTR [esi]
  439c74:	outs   dx,BYTE PTR ds:[esi]
  439c75:	aam    0x3a
  439c77:	adc    BYTE PTR [eax+0x20],ch
  439c7a:	adc    DWORD PTR [edx],eax
  439c7c:	iret   
  439c7d:	fwait
  439c7e:	call   0xa8b02eeb
  439c83:	es pop esi
  439c85:	pop    ebp
  439c86:	ds jecxz 0x439cad
  439c89:	mov    ds:0x6ab3a37b,al
  439c8e:	mov    ch,0x61
  439c90:	and    edi,DWORD PTR [eax]
  439c92:	stos   BYTE PTR es:[edi],al
  439c93:	push   esp
  439c94:	stos   BYTE PTR es:[edi],al
  439c95:	out    dx,eax
  439c96:	popf   
  439c97:	mov    esi,0x6a10e071
  439c9c:	fwait
  439c9d:	jb     0x439c23
  439c9f:	out    dx,al
  439ca0:	(bad)  [eax]
  439ca2:	dec    DWORD PTR [edi+0x2d9f873e]
  439ca8:	call   0xcc43:0xd58c90d1
  439caf:	dec    ebx
  439cb0:	std    
  439cb1:	stos   DWORD PTR es:[edi],eax
  439cb2:	push   es
  439cb3:	ror    DWORD PTR [ebp+0x4e91ed40],1
  439cb9:	popf   
  439cba:	mov    ch,0x50
  439cbc:	sub    al,0x5a
  439cbe:	adc    BYTE PTR [edi+0x35],0x9b
  439cc2:	in     eax,dx
  439cc3:	or     DWORD PTR [ebx+0x5962511f],0xffffffcf
  439cca:	repz xchg edx,eax
  439ccc:	call   0xbe2d:0xcd5ed279
  439cd3:	inc    edi
  439cd4:	nop
  439cd5:	add    eax,0xaf2bb603
  439cda:	inc    ecx
  439cdb:	pop    es
  439cdc:	int    0x88
  439cde:	js     0x439c8f
  439ce0:	adc    edi,esp
  439ce2:	fucomi st,st(2)
  439ce4:	outs   dx,BYTE PTR ds:[esi]
  439ce5:	pop    ecx
  439ce6:	mov    eax,ds:0x6a3503d5
  439ceb:	pop    es
  439cec:	jns    0x439c71
  439cee:	pop    esp
  439cef:	test   ch,dl
  439cf1:	cld    
  439cf2:	mov    WORD PTR [edi-0x2c],?
  439cf5:	rcr    DWORD PTR [edi],0x55
  439cf8:	mov    edx,0xb33732b4
  439cfd:	mov    ds:0xe9f8732f,eax
  439d02:	das    
  439d03:	imul   ecx,DWORD PTR [edx+0x1e9bfe26],0xffffffa5
  439d0a:	mov    ds:0xdeebe028,eax
  439d0f:	inc    ecx
  439d10:	adc    eax,0xba504627
  439d15:	inc    esi
  439d16:	sbb    DWORD PTR [ebx+0x67],edx
  439d19:	mov    ds:0x3a85aa48,al
  439d1e:	rcr    DWORD PTR [edx],0xc8
  439d21:	jg     0x439ca3
  439d23:	sub    BYTE PTR [edx+ebx*2-0x3b],al
  439d27:	and    al,0x7e
  439d29:	dec    edi
  439d2a:	cmp    eax,0xff2dd5ab
  439d2f:	imul   ebp,DWORD PTR [ecx+0x1f],0xffffffd3
  439d33:	inc    ebp
  439d34:	ret    0xf905
  439d37:	rcr    dl,cl
  439d39:	repz loop 0x439d90
  439d3c:	iret   
  439d3d:	call   0x3ba0:0xad74333e
  439d44:	aas    
  439d45:	js     0x439d8a
  439d47:	sbb    BYTE PTR [edi],al
  439d49:	sbb    BYTE PTR [ebx+0x747db151],bh
  439d4f:	dec    ecx
  439d50:	sub    BYTE PTR ds:0x5e35173d,bl
  439d56:	in     eax,dx
  439d57:	sub    al,0xa4
  439d59:	pop    ds
  439d5a:	daa    
  439d5b:	sub    dl,bl
  439d5d:	mov    ds:0xe47f9c3c,eax
  439d62:	int    0xbb
  439d64:	retf   0xad0f
  439d67:	stc    
  439d68:	cs leave 
  439d6a:	ficom  DWORD PTR [ecx+0x52745837]
  439d70:	dec    ecx
  439d71:	jp     0x439d5e
  439d73:	fisubr WORD PTR [edi-0x2c]
  439d76:	iret   
  439d77:	fcmovu st,st(4)
  439d79:	add    BYTE PTR [ebx+0x5717facf],ch
  439d7f:	(bad)  
  439d80:	xor    eax,0x49d927fd
  439d85:	add    al,0xf0
  439d87:	mov    ebp,0xbd74c21c
  439d8c:	and    bl,dl
  439d8e:	int    0xfc
  439d90:	je     0x439df0
  439d92:	lods   al,BYTE PTR ds:[esi]
  439d93:	mov    edx,0x27fb8231
  439d98:	xchg   BYTE PTR [eax+0x7b0be6d3],dh
  439d9e:	add    al,0x7d
  439da0:	push   ss
  439da1:	test   BYTE PTR [ebx-0x2b9c8a94],bh
  439da7:	add    eax,0x76518c3c
  439dac:	mov    bh,ch
  439dae:	mov    esi,0xce10adad
  439db3:	nop
  439db4:	jg     0x439de2
  439db6:	neg    BYTE PTR [esp+esi*8+0x7d]
  439dba:	lods   eax,DWORD PTR ds:[esi]
  439dbb:	mov    dh,0xe3
  439dbd:	mov    fs,WORD PTR [eax]
  439dbf:	icebp  
  439dc0:	es into 
  439dc2:	mov    esi,0x3260d68c
  439dc7:	mov    bl,0xd9
  439dc9:	sahf   
  439dca:	cmc    
  439dcb:	mov    ecx,0x8482e213
  439dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439dd1:	cmp    al,0x34
  439dd3:	mov    eax,0xba24f10
  439dd8:	ins    DWORD PTR es:[edi],dx
  439dd9:	add    eax,0x7d539ee1
  439dde:	dec    edx
  439ddf:	or     ebx,esi
  439de1:	dec    esi
  439de2:	add    ah,cl
  439de4:	xchg   edx,eax
  439de5:	cmp    cl,dh
  439de7:	jnp    0x439e54
  439de9:	inc    esi
  439dea:	(bad)  
  439deb:	push   edi
  439dec:	pop    ss
  439ded:	sbb    DWORD PTR [ebx],esi
  439def:	or     al,0x76
  439df1:	jp     0x439d78
  439df3:	imul   esp,esp,0x677a6b3
  439df9:	jg     0x439e39
  439dfb:	loop   0x439e33
  439dfd:	push   es
  439dfe:	dec    esp
  439dff:	add    DWORD PTR [edx+esi*8],edx
  439e02:	xchg   DWORD PTR [esi],edx
  439e04:	fiadd  DWORD PTR [ecx-0x26]
  439e07:	popa   
  439e08:	fwait
  439e09:	ss or  al,0x7f
  439e0c:	mov    eax,ds:0x17e9ac9c
  439e11:	jmp    0x63b819df
  439e16:	in     eax,0xc7
  439e18:	test   al,0x68
  439e1a:	adc    BYTE PTR [edi+0x57],dh
  439e1d:	jae    0x439e53
  439e1f:	pop    ecx
  439e20:	jo     0x439e89
  439e22:	int3   
  439e23:	pop    ecx
  439e24:	xchg   edx,eax
  439e25:	(bad)  
  439e26:	nop
  439e27:	fcom   QWORD PTR [ecx-0x31]
  439e2a:	xor    al,BYTE PTR [edi]
  439e2c:	mov    ebx,0xabf8961
  439e31:	loop   0x439df9
  439e33:	pusha  
  439e34:	in     al,0xc1
  439e36:	pop    es
  439e37:	and    al,bl
  439e39:	xchg   edi,eax
  439e3a:	inc    edi
  439e3b:	leave  
  439e3c:	out    dx,al
  439e3d:	aad    0xd7
  439e3f:	dec    ebp
  439e40:	pop    edx
  439e41:	add    eax,0xdad66b5a
  439e46:	xor    eax,0xc44fd17d
  439e4b:	int    0xec
  439e4d:	fnstcw WORD PTR [esi]
  439e4f:	shl    BYTE PTR [ebp-0x39],cl
  439e52:	mov    ch,0x12
  439e54:	dec    edi
  439e55:	or     eax,0x6be627ae
  439e5a:	fidivr DWORD PTR [ecx+0x255e053b]
  439e60:	rol    edx,cl
  439e62:	lods   eax,DWORD PTR ds:[esi]
  439e63:	lock adc eax,0xdf6671c9
  439e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439e6a:	add    dh,dh
  439e6c:	imul   edi,DWORD PTR [esi+0x1e813b49],0xffffff99
  439e73:	sti    
  439e74:	jb     0x439eac
  439e76:	enterw 0xa1ff,0x7e
  439e7b:	(bad)  
  439e7c:	cld    
  439e7d:	jns    0x439e97
  439e7f:	outs   dx,BYTE PTR ds:[esi]
  439e80:	adc    ch,ah
  439e82:	sahf   
  439e83:	jp     0x439ec3
  439e85:	push   ebp
  439e86:	(bad)  
  439e87:	mov    ecx,DWORD PTR [esi+0x1d37a339]
  439e8d:	int3   
  439e8e:	sbb    ah,ch
  439e90:	xchg   BYTE PTR [edx],ah
  439e92:	scas   al,BYTE PTR es:[edi]
  439e93:	call   0xc330:0x1c20e84f
  439e9a:	lds    edi,FWORD PTR [eax+ecx*8-0x6cd34801]
  439ea1:	data16 and bl,bh
  439ea4:	lea    esi,gs:[esi]
  439ea7:	retf   
  439ea8:	jg     0x439e3d
  439eaa:	imul   edi,DWORD PTR ds:0x8372f026,0x13
  439eb1:	fnsave [ebp+ecx*8-0x59]
  439eb5:	scas   eax,DWORD PTR es:[edi]
  439eb6:	add    eax,0x2c6d35ad
  439ebb:	jl     0x439e4b
  439ebd:	ficomp WORD PTR [ebp+esi*2-0x60]
  439ec1:	arpl   si,si
  439ec3:	popf   
  439ec4:	cdq    
  439ec5:	cld    
  439ec6:	stc    
  439ec7:	xchg   edx,eax
  439ec8:	sbb    BYTE PTR [edi],dh
  439eca:	aaa    
  439ecb:	push   ds
  439ecc:	push   cs
  439ecd:	jb     0x439f3c
  439ecf:	mov    DWORD PTR [ebp+0x49],ebx
  439ed2:	popa   
  439ed3:	int3   
  439ed4:	jno    0x439ebf
  439ed6:	hlt    
  439ed7:	jmp    0x3534:0xaecf76f
  439ede:	stc    
  439edf:	and    esp,DWORD PTR [ecx-0x34]
  439ee2:	fcmovu st,st(3)
  439ee4:	popa   
  439ee5:	cmp    ecx,DWORD PTR [ecx]
  439ee7:	in     eax,0x99
  439ee9:	test   DWORD PTR [ecx+0x2c5fe473],esi
  439eef:	jecxz  0x439ef8
  439ef1:	out    dx,eax
  439ef2:	fisubr DWORD PTR [eax-0x1e]
  439ef5:	add    edi,DWORD PTR [eax+edx*1-0x23264677]
  439efc:	daa    
  439efd:	arpl   bx,si
  439eff:	in     eax,0x93
  439f01:	aad    0xdb
  439f03:	and    ecx,0xd477f6c8
  439f09:	inc    eax
  439f0a:	sahf   
  439f0b:	xchg   esi,eax
  439f0c:	or     edi,DWORD PTR [edx]
  439f0e:	jl     0x439f13
  439f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439f11:	xor    dl,ch
  439f13:	dec    ebx
  439f14:	loopne 0x439eb4
  439f16:	sbb    DWORD PTR [esi],edi
  439f18:	jnp    0x439ee4
  439f1a:	push   edx
  439f1b:	pminsw mm4,QWORD PTR [esi+0x1c9b4eb4]
  439f22:	jbe    0x439edf
  439f24:	pop    edx
  439f25:	and    ah,BYTE PTR [edx-0x50]
  439f28:	ss pop ds
  439f2a:	cmp    BYTE PTR [ebx+0x78],ah
  439f2d:	data16 (bad) 
  439f30:	dec    ebp
  439f31:	fcomip st,st(6)
  439f33:	adc    edx,ebx
  439f35:	sub    al,0x23
  439f37:	mov    ecx,0x1d259d3d
  439f3c:	outs   dx,BYTE PTR ds:[esi]
  439f3d:	pop    ebx
  439f3e:	rcl    ebx,0xce
  439f41:	popf   
  439f42:	repz int3 
  439f44:	or     esp,ecx
  439f46:	scas   eax,DWORD PTR es:[edi]
  439f47:	pop    edx
  439f48:	mov    ecx,0x20d78a3d
  439f4d:	js     0x439f3b
  439f4f:	adc    edi,DWORD PTR [esi+ecx*1]
  439f52:	dec    ebp
  439f53:	fidivr WORD PTR ds:0x55298be8
  439f59:	mov    bh,0x8f
  439f5b:	push   eax
  439f5c:	add    esi,edi
  439f5e:	and    al,0xcf
  439f60:	fcom   DWORD PTR [ecx]
  439f62:	mov    ?,WORD PTR [esp+ebp*2]
  439f65:	mov    eax,0xaf4d7a1f
  439f6a:	xor    al,0x56
  439f6c:	es add eax,ebp
  439f6f:	(bad)  
  439f70:	aam    0xf5
  439f72:	ret    
  439f73:	sbb    esi,DWORD PTR [edx+0x27bc9c1b]
  439f79:	rcr    DWORD PTR [ebp+0x7244ed6a],cl
  439f7f:	test   al,0xe7
  439f81:	ss into 
  439f83:	mov    al,0xfc
  439f85:	leave  
  439f86:	xchg   ebp,eax
  439f87:	(bad)  
  439f88:	dec    esi
  439f89:	jle    0x439f96
  439f8b:	mov    ds:0xf022a25d,eax
  439f90:	mov    WORD PTR [ebx],ds
  439f92:	test   eax,0xd1e5997
  439f97:	lods   al,BYTE PTR ds:[esi]
  439f98:	fldcw  WORD PTR [ecx-0x15]
  439f9b:	lea    ebx,[edi+eiz*8]
  439f9e:	or     edi,DWORD PTR [edi-0x3f5f68c]
  439fa4:	push   edx
  439fa5:	ret    0x3198
  439fa8:	xlat   BYTE PTR ds:[ebx]
  439fa9:	retf   
  439faa:	add    al,0x75
  439fac:	fdiv   DWORD PTR [eax+eax*2]
  439faf:	inc    ebp
  439fb0:	inc    esi
  439fb1:	js     0x43a019
  439fb3:	sub    BYTE PTR [ebp+eiz*4+0x6a],0xdd
  439fb8:	mov    ds:0x59d8694b,al
  439fbd:	ds cmp al,0x6a
  439fc0:	push   ebx
  439fc1:	mov    edx,0xc50ae743
  439fc6:	xchg   edx,eax
  439fc7:	cmp    esp,DWORD PTR [ebx+esi*8]
  439fca:	pusha  
  439fcb:	add    al,0x9f
  439fcd:	stos   BYTE PTR es:[edi],al
  439fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439fcf:	sub    BYTE PTR [edi+0x7098ffb5],dl
  439fd5:	cmp    ah,BYTE PTR [ebx]
  439fd7:	xor    al,0x23
  439fd9:	imul   ebx,DWORD PTR [eax-0x51],0xffffffba
  439fdd:	pop    edx
  439fde:	jae    0x439ff3
  439fe0:	push   ebx
  439fe1:	shl    BYTE PTR [ecx-0x1cf86b7b],1
  439fe7:	and    BYTE PTR [ecx+0xc],0xa5
  439feb:	inc    ebp
  439fec:	gs loopne 0x439fc5
  439fef:	fsub   QWORD PTR [edx-0x63]
  439ff2:	sub    ecx,DWORD PTR [edx+0x61]
  439ff5:	xchg   ebp,eax
  439ff6:	xor    bh,BYTE PTR [esi+0x347af726]
  439ffc:	mov    eax,ds:0x2dd40d18
  43a001:	push   esi
  43a002:	popf   
  43a003:	inc    eax
  43a004:	(bad)  
  43a005:	pop    esp
  43a006:	js     0x43a005
  43a008:	mov    eax,es:0x4ea5cd65
  43a00e:	add    al,0xf0
  43a010:	and    cl,BYTE PTR [edx]
  43a012:	jmp    0x7c7f:0x1c9b7173
  43a019:	stos   BYTE PTR es:[edi],al
  43a01a:	ss inc cx
  43a01d:	sub    ebx,DWORD PTR [ecx-0x35058b9f]
  43a023:	aas    
  43a024:	dec    ecx
  43a025:	sub    BYTE PTR [eax-0x42],0xd0
  43a029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a02a:	adc    DWORD PTR [edx-0x4c],ebp
  43a02d:	push   0x85dcd113
  43a032:	lahf   
  43a033:	mov    DWORD PTR [esi+0x52e9aae9],esi
  43a039:	or     bl,BYTE PTR [edi-0x39d35a91]
  43a03f:	mov    BYTE PTR [ebx-0x5b],bl
  43a042:	xor    eax,0x6081a850
  43a047:	jbe    0x439fd4
  43a049:	das    
  43a04a:	cwde   
  43a04b:	adc    eax,0x4dbfd198
  43a050:	jae    0x43a0d0
  43a052:	jmp    0xbe68b232
  43a057:	das    
  43a058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a059:	add    DWORD PTR [esi],ebp
  43a05b:	xchg   BYTE PTR [ecx+0x4c7d7205],dh
  43a061:	xor    BYTE PTR [ebp-0x7f],0xa0
  43a065:	jmp    0x8bb3:0x5b8685da
  43a06c:	mov    esi,0x830eee20
  43a071:	push   esi
  43a072:	addr16 mov bh,0x9d
  43a075:	pop    esi
  43a076:	and    al,BYTE PTR [esi-0x13bc0060]
  43a07c:	xor    esi,DWORD PTR [edi+0x2b]
  43a07f:	mov    edx,0x933dddf4
  43a084:	out    0x80,al
  43a086:	pop    ecx
  43a087:	push   ebx
  43a088:	clc    
  43a089:	sub    ecx,0x17
  43a08c:	push   0x73
  43a08e:	fld    QWORD PTR [edx-0x71be592c]
  43a094:	fs fstp st(0)
  43a097:	sbb    ah,0x14
  43a09a:	xchg   BYTE PTR ds:0xfc10a26,cl
  43a0a0:	sub    ebp,0x37a6e54a
  43a0a6:	(bad)  
  43a0a7:	mov    eax,ds:0x40bc27ee
  43a0ac:	(bad)  
  43a0ad:	sti    
  43a0ae:	sbb    al,0xae
  43a0b0:	imul   ecx,DWORD PTR [eax+0x3b4a986e],0x4e
  43a0b7:	es mov edi,0xb106b3f3
  43a0bd:	in     eax,0xbc
  43a0bf:	push   edx
  43a0c0:	cmp    al,0x63
  43a0c2:	lods   eax,DWORD PTR ds:[esi]
  43a0c3:	fsub   DWORD PTR [ebp-0x62]
  43a0c6:	hlt    
  43a0c7:	xchg   edi,eax
  43a0c8:	xor    eax,0xba9af246
  43a0cd:	sub    eax,esi
  43a0cf:	xor    eax,ecx
  43a0d1:	xor    BYTE PTR [esi-0x48],cl
  43a0d4:	jno    0x43a0e0
  43a0d6:	in     al,dx
  43a0d7:	inc    ecx
  43a0d8:	push   esi
  43a0d9:	fsubr  QWORD PTR [ebp+0x20]
  43a0dc:	add    al,0x9c
  43a0de:	xor    ecx,DWORD PTR [esi+0x47032102]
  43a0e4:	xchg   esi,eax
  43a0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a0e6:	mov    WORD PTR [ebx-0x4f],?
  43a0e9:	outs   dx,BYTE PTR ds:[esi]
  43a0ea:	mul    BYTE PTR [ecx-0x5c]
  43a0ed:	icebp  
  43a0ee:	jnp    0x43a151
  43a0f0:	xchg   esi,eax
  43a0f1:	inc    esi
  43a0f2:	xor    al,0xfc
  43a0f4:	lds    ebx,FWORD PTR [esi+0x13684b0a]
  43a0fa:	pusha  
  43a0fb:	sub    al,BYTE PTR [edx+0x42]
  43a0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a0ff:	por    mm6,mm2
  43a102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a103:	icebp  
  43a104:	shl    DWORD PTR [eax+0x418266e],0x73
  43a10b:	into   
  43a10c:	out    0x38,al
  43a10e:	and    eax,0x731292d2
  43a113:	stc    
  43a114:	jne    0x43a146
  43a116:	bound  ecx,QWORD PTR [edi+0x2c]
  43a119:	ret    0x4681
  43a11c:	mov    WORD PTR [esi+0x4de84398],ds
  43a122:	ret    0xa249
  43a125:	and    bl,BYTE PTR [edi]
  43a127:	es cmp eax,0xad9ef5cc
  43a12d:	sub    bh,BYTE PTR [esi-0x34]
  43a130:	xor    DWORD PTR [ecx-0x13125aec],ebx
  43a136:	jle    0x43a143
  43a138:	stc    
  43a139:	jne    0x43a17a
  43a13b:	push   DWORD PTR [esi+0x76ad1c78]
  43a141:	daa    
  43a142:	mov    ecx,0x55cd1d8
  43a147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a148:	and    BYTE PTR [ecx],0x4f
  43a14b:	out    dx,al
  43a14c:	adc    BYTE PTR [edi],bl
  43a14e:	mov    ebx,0xe304018e
  43a153:	xchg   edi,eax
  43a154:	push   ds
  43a155:	cs call 0xb2aeaf94
  43a15b:	imul   ebp,DWORD PTR [edx-0x50],0x72561184
  43a162:	cmp    ebx,ebx
  43a164:	mov    ds:0x2bbec7e7,al
  43a169:	sbb    dl,ch
  43a16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a16c:	add    cl,dh
  43a16e:	mov    WORD PTR [edx+0x41],ds
  43a171:	xlat   BYTE PTR ds:[ebx]
  43a172:	push   edx
  43a173:	outs   dx,BYTE PTR ds:[esi]
  43a174:	jnp    0x43a1bb
  43a176:	add    al,0x80
  43a178:	add    bh,BYTE PTR [edx-0xdfcb8ba]
  43a17e:	in     al,0x3d
  43a180:	outs   dx,DWORD PTR ds:[esi]
  43a181:	push   0xfffffffc
  43a183:	ret    0xe23d
  43a186:	retf   0x4f36
  43a189:	mov    edx,0x5cc4415a
  43a18e:	and    eax,0xffffffa3
  43a191:	jae    0x43a1a3
  43a193:	jo     0x43a173
  43a195:	fnstcw WORD PTR [edi-0x1c94aaac]
  43a19b:	xor    eax,0xa5158297
  43a1a0:	sti    
  43a1a1:	dec    esi
  43a1a2:	ins    DWORD PTR es:[edi],dx
  43a1a3:	ss stc 
  43a1a5:	pop    es
  43a1a6:	add    DWORD PTR [ebx+0x50],edx
  43a1a9:	cmp    DWORD PTR [ebx],0x73a00d31
  43a1af:	jge    0x43a213
  43a1b1:	mov    edx,0xc9457b1f
  43a1b6:	xor    al,BYTE PTR [edx-0x5]
  43a1b9:	xlat   BYTE PTR ds:[ebx]
  43a1ba:	adc    DWORD PTR [eax-0x23],ebx
  43a1bd:	mov    ch,0x75
  43a1bf:	mov    eax,0x494b1f14
  43a1c4:	adc    DWORD PTR [eax],0x72
  43a1c7:	imul   eax,edi,0x5ad8bd76
  43a1cd:	test   DWORD PTR [eax*2+0x487b2b50],edx
  43a1d4:	dec    ebx
  43a1d5:	mov    edx,0x4bc94e42
  43a1da:	sub    ebp,esi
  43a1dc:	dec    eax
  43a1dd:	xchg   esp,eax
  43a1de:	pop    ebx
  43a1df:	test   BYTE PTR [edi],dh
  43a1e1:	test   eax,eax
  43a1e3:	push   ss
  43a1e4:	and    eax,0xbddfcdfd
  43a1e9:	enter  0x43de,0x59
  43a1ed:	xchg   dh,cl
  43a1ef:	int3   
  43a1f0:	mov    DWORD PTR [ebx],eax
  43a1f2:	aas    
  43a1f3:	ja     0x43a18d
  43a1f5:	cdq    
  43a1f6:	pushf  
  43a1f7:	push   cs
  43a1f8:	add    al,0x0
  43a1fa:	xchg   edx,eax
  43a1fb:	xchg   ebx,eax
  43a1fc:	jle    0x43a213
  43a1fe:	(bad)
  43a201:	sub    dh,BYTE PTR [ecx+0x7]
  43a204:	(bad)  
  43a205:	outs   dx,BYTE PTR ds:[esi]
  43a206:	ret    0xb966
  43a209:	lods   al,BYTE PTR ds:[esi]
  43a20a:	push   ecx
  43a20b:	ds jmp 0x43a18f
  43a20e:	shl    ebp,0x86
  43a211:	mov    esi,0x2141ed3d
  43a216:	mov    ebp,0x69a50f87
  43a21b:	jae    0x43a1fa
  43a21d:	add    eax,0x2f416161
  43a222:	popf   
  43a223:	mov    ah,0x21
  43a225:	push   esi
  43a226:	xchg   DWORD PTR es:[ecx+0x457819c4],eax
  43a22d:	inc    ebx
  43a22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a22f:	dec    ecx
  43a230:	outs   dx,DWORD PTR ds:[esi]
  43a231:	push   0x47
  43a233:	xor    bh,ch
  43a235:	mov    esp,0x431adc75
  43a23a:	xor    DWORD PTR [ebx+eax*4+0x2eee4db0],edx
  43a241:	repz jecxz 0x43a2b9
  43a244:	add    ah,BYTE PTR [edx]
  43a246:	ret    
  43a247:	jge    0x43a221
  43a249:	adc    esi,DWORD PTR [edx-0x5c]
  43a24c:	mov    edx,DWORD PTR [esi+ebp*4+0x32]
  43a250:	dec    ebx
  43a251:	out    dx,eax
  43a252:	mov    edx,es
  43a254:	loopne 0x43a2b5
  43a256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a257:	call   0xe0d32c50
  43a25c:	push   0x6bd195ff
  43a261:	call   DWORD PTR [esi+0x7aa49acd]
  43a267:	repz shr dh,1
  43a26a:	(bad)
  43a26e:	push   eax
  43a26f:	jae    0x43a1f1
  43a271:	inc    ecx
  43a272:	mov    bl,0x82
  43a274:	cmp    eax,0xe222e0de
  43a279:	ins    DWORD PTR es:[edi],dx
  43a27a:	daa    
  43a27b:	fisub  DWORD PTR [ebx-0x21]
  43a27e:	pop    esp
  43a27f:	lods   al,BYTE PTR ds:[esi]
  43a280:	or     DWORD PTR [esp+eax*4+0x415e8420],0xffffffb6
  43a288:	cmp    ecx,DWORD PTR [ebx+0x17239835]
  43a28e:	scas   eax,DWORD PTR es:[edi]
  43a28f:	ja     0x43a302
  43a291:	ret    
  43a292:	lock aad 0xb3
  43a295:	in     eax,dx
  43a296:	mov    esi,0xb0dd8310
  43a29b:	push   edi
  43a29c:	adc    dh,BYTE PTR [ebx+0x2d9584ab]
  43a2a2:	cld    
  43a2a3:	test   al,0x80
  43a2a5:	out    dx,eax
  43a2a6:	dec    esp
  43a2a7:	mov    esi,eax
  43a2a9:	aad    0x8a
  43a2ab:	adc    al,0xd
  43a2ad:	hlt    
  43a2ae:	cmc    
  43a2af:	ret    0xd385
  43a2b2:	dec    ebx
  43a2b3:	jge    0x43a2e8
  43a2b5:	sbb    al,0x73
  43a2b7:	call   0x92efeadb
  43a2bc:	daa    
  43a2bd:	mov    cx,0xcfd8
  43a2c1:	sbb    eax,0xe51835c1
  43a2c6:	inc    esp
  43a2c7:	jns    0x43a263
  43a2c9:	(bad)  
  43a2ca:	sbb    eax,0x3b6f407d
  43a2cf:	xchg   esi,eax
  43a2d0:	push   ebx
  43a2d1:	inc    BYTE PTR [edx]
  43a2d3:	and    eax,0xad7e36aa
  43a2d8:	in     eax,dx
  43a2d9:	mov    WORD PTR [esp+ebp*8-0xac39735],?
  43a2e0:	mov    bl,0x36
  43a2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2e3:	(bad)  
  43a2e4:	adc    al,0xa9
  43a2e6:	out    0x8a,eax
  43a2e8:	or     bh,BYTE PTR ds:0xcf6b7b58
  43a2ee:	xchg   ebp,eax
  43a2ef:	add    al,0x79
  43a2f1:	jnp    0x43a369
  43a2f3:	xchg   esi,eax
  43a2f4:	fsub   QWORD PTR [edx-0x5dd28b0e]
  43a2fa:	add    al,0xb2
  43a2fc:	sahf   
  43a2fd:	xchg   edi,eax
  43a2fe:	inc    edi
  43a2ff:	test   BYTE PTR [ecx+0x4b],0xae
  43a303:	sar    DWORD PTR [esi-0x40],0x0
  43a307:	xchg   esp,eax
  43a308:	push   cs
  43a309:	mov    esp,0xc9de1d79
  43a30e:	aaa    
  43a30f:	in     eax,dx
  43a310:	loop   0x43a30f
  43a312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a313:	imul   edx,DWORD PTR [edx+0x13b260bd],0x18
  43a31a:	mov    esp,0x1e1fd87
  43a31f:	retf   
  43a320:	mov    ch,cl
  43a322:	call   0x4c134159
  43a327:	cmp    bh,BYTE PTR [ebp+0x71]
  43a32a:	mov    al,al
  43a32c:	mov    esi,0xdf8307fa
  43a331:	pop    es
  43a332:	sbb    al,0xe6
  43a334:	xor    DWORD PTR [ecx-0x3e19f593],ecx
  43a33a:	icebp  
  43a33b:	push   ebp
  43a33c:	out    0xc0,eax
  43a33e:	pop    esi
  43a33f:	cmp    cl,ah
  43a341:	nop
  43a342:	ror    ah,0xfc
  43a345:	lahf   
  43a346:	sbb    DWORD PTR [edi-0x5acc503d],0x6a
  43a34d:	cdq    
  43a34e:	test   al,0xfb
  43a350:	rcl    DWORD PTR [edx],cl
  43a352:	sub    eax,DWORD PTR [ecx+ebp*1-0x14]
  43a356:	aaa    
  43a357:	arpl   WORD PTR [edx],dx
  43a359:	xchg   esp,eax
  43a35a:	aam    0xd1
  43a35c:	adc    al,0x7d
  43a35e:	mov    eax,ds:0x4b45bc3e
  43a363:	outs   dx,BYTE PTR ds:[esi]
  43a364:	xor    bh,dl
  43a366:	add    DWORD PTR [ecx-0x5c462b4],edx
  43a36c:	add    BYTE PTR [eax-0x4e],dh
  43a36f:	addr16 cmp dh,dh
  43a372:	loop   0x43a313
  43a374:	lds    edx,FWORD PTR [edi-0x49fb5b9d]
  43a37a:	sti    
  43a37b:	jg     0x43a31d
  43a37d:	imul   ebp,DWORD PTR [ebx],0x43
  43a380:	inc    esi
  43a381:	sbb    eax,0xd1704b12
  43a386:	xor    esi,DWORD PTR [edi]
  43a388:	sbb    DWORD PTR [ebp+0x7f],0x87374aa2
  43a38f:	cmp    DWORD PTR [ebp+0x5a4ad5c2],ebx
  43a395:	popf   
  43a396:	adc    al,BYTE PTR [eax]
  43a398:	(bad)  
  43a399:	fld    TBYTE PTR [edi]
  43a39b:	mov    edx,0xb6e0bf60
  43a3a0:	in     eax,dx
  43a3a1:	push   esi
  43a3a2:	add    al,0x34
  43a3a4:	(bad)  
  43a3a5:	xchg   edi,eax
  43a3a6:	mov    bl,0x8e
  43a3a8:	repnz cli 
  43a3aa:	lds    ecx,FWORD PTR [edx]
  43a3ac:	or     al,BYTE PTR [ebx+0x68]
  43a3af:	xchg   edi,eax
  43a3b0:	ss push edi
  43a3b2:	add    BYTE PTR [ebx],ah
  43a3b4:	sar    DWORD PTR [esi+0x1c65d84f],cl
  43a3ba:	adc    esp,ebp
  43a3bc:	(bad)  
  43a3bd:	xchg   ebx,eax
  43a3be:	cmp    BYTE PTR ds:0x4ef5f727,0x44
  43a3c5:	(bad)  
  43a3c6:	dec    ebx
  43a3c7:	add    al,0x74
  43a3c9:	aad    0xb1
  43a3cb:	push   es
  43a3cc:	cmc    
  43a3cd:	or     eax,0x8565e6fa
  43a3d2:	jle    0x43a421
  43a3d4:	popf   
  43a3d5:	pusha  
  43a3d6:	mov    dh,0xd1
  43a3d8:	sbb    ebx,DWORD PTR [esi]
  43a3da:	repnz stos DWORD PTR es:[edi],eax
  43a3dc:	and    DWORD PTR [esi+0x5d],esp
  43a3df:	(bad)  
  43a3e0:	hlt    
  43a3e1:	xor    eax,0xb00349e1
  43a3e6:	and    al,0x82
  43a3e8:	mov    al,0x7b
  43a3ea:	sar    DWORD PTR [ecx-0x2d],0x3d
  43a3ee:	mov    ds:0xe20293d0,eax
  43a3f3:	ret    
  43a3f4:	inc    esp
  43a3f5:	enter  0xde87,0x68
  43a3f9:	mov    ah,0x9e
  43a3fb:	pop    ecx
  43a3fc:	and    esp,esi
  43a3fe:	xchg   ebp,eax
  43a3ff:	ds jg  0x43a430
  43a402:	aad    0xeb
  43a404:	mov    ds:0x7993c14d,eax
  43a409:	dec    esi
  43a40a:	dec    ebp
  43a40b:	neg    BYTE PTR [ecx-0xdede332]
  43a411:	sub    ebp,DWORD PTR [edx+0x71]
  43a414:	mov    BYTE PTR [edx+0xc],dl
  43a417:	ja     0x43a3a2
  43a419:	mov    ebp,0x5af86fcb
  43a41e:	cli    
  43a41f:	arpl   WORD PTR [ecx+0x35],sp
  43a422:	mov    esi,0xe07cf9c4
  43a427:	xchg   ebx,eax
  43a428:	pop    edi
  43a429:	jle    0x43a3f0
  43a42b:	and    eax,0xc6b5bfdf
  43a430:	test   eax,0xcf2c3964
  43a435:	mov    bh,0x69
  43a437:	fbld   TBYTE PTR [ecx+0x5]
  43a43a:	std    
  43a43b:	enter  0x357d,0x71
  43a43f:	out    0xa6,eax
  43a441:	and    ebp,DWORD PTR [ebx+0x4377a496]
  43a447:	(bad)  
  43a448:	dec    esp
  43a449:	fisttp DWORD PTR [eax+edx*8-0x280ebf61]
  43a450:	out    0x6f,al
  43a452:	sbb    eax,0xec495828
  43a457:	xchg   ecx,eax
  43a458:	sub    al,0x13
  43a45a:	dec    ch
  43a45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a45d:	push   ss
  43a45e:	clc    
  43a45f:	sbb    eax,0x5f06c41f
  43a464:	add    BYTE PTR cs:[ecx],dh
  43a467:	or     DWORD PTR [edi],ecx
  43a469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a46a:	mov    ds:0x61469e02,eax
  43a46f:	jl     0x43a4b1
  43a471:	ds aam 0x22
  43a474:	push   eax
  43a475:	cmp    cl,ch
  43a477:	mov    al,ds:0x5ce4cdba
  43a47c:	add    BYTE PTR fs:[eax-0x60],0xea
  43a481:	cmp    BYTE PTR [edi+0x7c6d2e47],dl
  43a487:	fsubr  DWORD PTR [ecx]
  43a489:	or     al,0x18
  43a48b:	sub    dh,BYTE PTR [esp+eax*2+0x1a]
  43a48f:	push   eax
  43a490:	(bad)  
  43a491:	loopne 0x43a453
  43a493:	or     ebx,DWORD PTR [ebx]
  43a495:	sbb    al,0xb4
  43a497:	pop    es
  43a498:	scas   al,BYTE PTR es:[edi]
  43a499:	mov    dh,0x1b
  43a49b:	rol    DWORD PTR [eax-0x64],1
  43a49e:	mov    ebp,DWORD PTR [edx+0x2890d5bd]
  43a4a4:	mov    esp,eax
  43a4a6:	stos   DWORD PTR es:[edi],eax
  43a4a7:	not    bl
  43a4a9:	lods   al,BYTE PTR ds:[esi]
  43a4aa:	xor    ebx,DWORD PTR ss:[ecx]
  43a4ad:	ror    BYTE PTR [edi+0x63],cl
  43a4b0:	gs retf 
  43a4b2:	mov    al,0xb2
  43a4b4:	out    dx,al
  43a4b5:	repz idiv esi
  43a4b8:	cwde   
  43a4b9:	loop   0x43a445
  43a4bb:	xor    bh,al
  43a4bd:	mov    ecx,0x2cffb4a6
  43a4c2:	mov    ebx,0x2275ce0a
  43a4c7:	adc    al,0x2a
  43a4c9:	ins    DWORD PTR es:[edi],dx
  43a4ca:	scas   eax,DWORD PTR es:[edi]
  43a4cb:	in     eax,0xea
  43a4cd:	pusha  
  43a4ce:	pop    esi
  43a4cf:	(bad)  
  43a4d0:	fiadd  DWORD PTR [ebx]
  43a4d2:	inc    eax
  43a4d3:	or     eax,0xe969fe16
  43a4d8:	repnz and BYTE PTR [ebx],dl
  43a4db:	enter  0x91f9,0xd1
  43a4df:	mov    edx,esi
  43a4e1:	sahf   
  43a4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a4e3:	mov    BYTE PTR [edi+0x21],bl
  43a4e6:	fwait
  43a4e7:	in     al,dx
  43a4e8:	lock push esp
  43a4ea:	in     eax,dx
  43a4eb:	js     0x43a56c
  43a4ed:	xor    al,0x20
  43a4ef:	push   edx
  43a4f0:	mov    eax,0xca03c60d
  43a4f5:	pop    ecx
  43a4f6:	lock fiadd DWORD PTR [ebx+0x69545ba1]
  43a4fd:	jno    0x43a573
  43a4ff:	dec    ecx
  43a500:	call   0xa9a9a26b
  43a505:	push   cs
  43a506:	out    dx,eax
  43a507:	out    dx,al
  43a508:	xor    esi,DWORD PTR [esi-0x1a]
  43a50b:	out    0xe4,eax
  43a50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a50e:	out    dx,al
  43a50f:	retf   0xb36
  43a512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a513:	xchg   edx,eax
  43a514:	xchg   esp,eax
  43a515:	push   0xa29c1580
  43a51a:	cdq    
  43a51b:	nop
  43a51c:	sub    esi,DWORD PTR [edx+0x12]
  43a51f:	adc    BYTE PTR [ebx],ah
  43a521:	or     DWORD PTR es:[edi-0x27],esi
  43a525:	shl    DWORD PTR [ebp+0x7df806e0],cl
  43a52b:	xchg   BYTE PTR [esi],al
  43a52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a52e:	loopne 0x43a505
  43a530:	mov    bl,0x19
  43a532:	jge    0x43a581
  43a534:	fmulp  st(0),st
  43a536:	xor    al,BYTE PTR [ecx-0x4f]
  43a539:	div    dl
  43a53b:	and    eax,0x4655c10c
  43a540:	(bad)  
  43a541:	idiv   BYTE PTR [edx+0xb9894f1]
  43a547:	sub    eax,0x6747be4d
  43a54c:	jo     0x43a4eb
  43a54e:	xor    ebx,DWORD PTR [edi+0x11]
  43a551:	ret    
  43a552:	pop    edx
  43a553:	xchg   ecx,eax
  43a554:	jle    0x43a4e9
  43a556:	imul   BYTE PTR ds:0x46065649
  43a55c:	outs   dx,DWORD PTR ds:[esi]
  43a55d:	mov    eax,ds:0x8b3ef923
  43a562:	sub    ebp,DWORD PTR [edx+0x7b071ffd]
  43a568:	push   0xffffffed
  43a56a:	sahf   
  43a56b:	or     al,0x71
  43a56d:	call   0x6bad:0xb34fff09
  43a574:	clc    
  43a575:	xchg   ebx,eax
  43a576:	mov    cl,0xb7
  43a578:	sbb    eax,0xa6a8a6b4
  43a57d:	out    0x5f,al
  43a57f:	xchg   ecx,eax
  43a580:	mov    bh,0x31
  43a582:	sbb    bh,BYTE PTR [ebx+eax*4]
  43a585:	ret    
  43a586:	jo     0x43a5c1
  43a588:	mov    ecx,0xfe81feff
  43a58d:	in     eax,0xe8
  43a58f:	jmp    0x43a537
  43a591:	xor    al,0xc6
  43a593:	(bad)  
  43a594:	dec    esi
  43a595:	fadd   DWORD PTR [ebx]
  43a597:	ins    DWORD PTR es:[edi],dx
  43a598:	icebp  
  43a599:	(bad)  
  43a59b:	call   0x13fe:0x40a703f2
  43a5a2:	clc    
  43a5a3:	stc    
  43a5a4:	jno    0x43a60c
  43a5a6:	fdiv   QWORD PTR [ebp-0x6c414f4b]
  43a5ac:	xchg   edi,eax
  43a5ad:	ss push ebx
  43a5af:	push   edx
  43a5b0:	add    DWORD PTR es:[eax-0x35],0xffffffac
  43a5b5:	sbb    DWORD PTR [esi],eax
  43a5b7:	mov    ebx,0xf1526a68
  43a5bc:	mov    dl,0x4a
  43a5be:	mov    ah,0xbe
  43a5c0:	mov    ds:0x1b3dd7d7,al
  43a5c5:	aad    0x92
  43a5c7:	pop    ss
  43a5c8:	imul   edi,ecx,0xcc4a4adb
  43a5ce:	sar    BYTE PTR [ecx],cl
  43a5d0:	xchg   ebp,eax
  43a5d1:	enter  0x79e3,0x67
  43a5d5:	iret   
  43a5d6:	in     eax,0x46
  43a5d8:	push   cs
  43a5d9:	mov    ebp,0x6daa8f4b
  43a5de:	mov    edx,0x779af63a
  43a5e3:	aad    0x33
  43a5e5:	cdq    
  43a5e6:	outs   dx,BYTE PTR ds:[esi]
  43a5e7:	dec    esi
  43a5e8:	push   eax
  43a5e9:	cmp    ebx,DWORD PTR [edx+0x33]
  43a5ec:	add    al,0x9f
  43a5ee:	push   ss
  43a5ef:	inc    edi
  43a5f0:	xchg   esp,eax
  43a5f1:	call   0xc0d4:0x3a6f7c03
  43a5f8:	repz lds ebp,FWORD PTR [ecx+eiz*4]
  43a5fc:	jo     0x43a5a3
  43a5fe:	inc    eax
  43a5ff:	leave  
  43a600:	mov    esp,0x341dc7
  43a605:	xchg   DWORD PTR [edx],edx
  43a607:	xchg   edx,edi
  43a609:	arpl   WORD PTR [edx-0x1],cx
  43a60c:	scas   eax,DWORD PTR es:[edi]
  43a60d:	(bad)  
  43a60e:	or     al,0x5f
  43a610:	imul   esi,DWORD PTR [ebx],0xa14a2529
  43a616:	pop    ebp
  43a617:	shl    BYTE PTR ds:0x97e208c8,cl
  43a61d:	fwait
  43a61e:	or     BYTE PTR [ebx+0x21],ch
  43a621:	mov    eax,0x3e600994
  43a626:	outs   dx,BYTE PTR ds:[esi]
  43a627:	dec    esi
  43a628:	das    
  43a629:	jns    0x1ce1d5fb
  43a62f:	arpl   WORD PTR [ebp-0x76675186],bx
  43a635:	dec    edx
  43a636:	dec    ecx
  43a637:	pop    edi
  43a638:	xor    al,0xd
  43a63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a63b:	mov    WORD PTR [ebp-0x7e],es
  43a63e:	das    
  43a63f:	cmp    cl,BYTE PTR [esi+0x3ad814f3]
  43a645:	in     eax,dx
  43a646:	daa    
  43a647:	ror    DWORD PTR [esi-0x1a7cf300],1
  43a64d:	fcmovnb st,st(6)
  43a64f:	gs pop esp
  43a651:	xchg   BYTE PTR [ebp-0x6a],ah
  43a654:	mov    bl,0xa4
  43a656:	clc    
  43a657:	mov    bh,0x76
  43a659:	dec    esp
  43a65a:	sub    eax,0x59da5569
  43a65f:	ins    DWORD PTR es:[edi],dx
  43a660:	loop   0x43a655
  43a662:	xchg   edi,eax
  43a663:	cmp    al,0xdc
  43a665:	rcl    BYTE PTR ds:0x35be95d6,0x83
  43a66c:	aaa    
  43a66d:	popa   
  43a66e:	dec    ebp
  43a66f:	xchg   esi,eax
  43a670:	jg     0x43a600
  43a672:	icebp  
  43a673:	cwde   
  43a674:	test   BYTE PTR [esi],ch
  43a676:	lods   al,BYTE PTR ds:[esi]
  43a677:	xor    ebp,DWORD PTR [ebx-0x67]
  43a67a:	rol    DWORD PTR [eax-0x6a],0xc3
  43a67e:	sbb    ebx,0x4a114517
  43a684:	in     eax,dx
  43a685:	repnz shl BYTE PTR [esi-0x19],cl
  43a689:	inc    edi
  43a68a:	xor    al,0x2a
  43a68c:	add    DWORD PTR [ecx],0x9a5752dd
  43a692:	mov    bl,al
  43a694:	pop    ds
  43a695:	inc    esi
  43a696:	fnstcw WORD PTR [ecx]
  43a698:	push   cs
  43a699:	inc    esi
  43a69a:	mov    al,ds:0x4534abb3
  43a69f:	or     edx,ecx
  43a6a1:	or     eax,0xe3ebba
  43a6a6:	scas   al,BYTE PTR es:[edi]
  43a6a7:	push   ecx
  43a6a8:	jl     0x43a6ed
  43a6aa:	clc    
  43a6ab:	stos   BYTE PTR es:[edi],al
  43a6ac:	fsub   DWORD PTR [eax+0x1b]
  43a6af:	inc    esp
  43a6b0:	push   edi
  43a6b1:	fimul  DWORD PTR [ebp-0x8829304]
  43a6b7:	dec    esi
  43a6b8:	or     ch,cl
  43a6ba:	jbe    0x43a6ae
  43a6bc:	dec    eax
  43a6bd:	stos   BYTE PTR es:[edi],al
  43a6be:	sub    eax,ebx
  43a6c0:	add    DWORD PTR [ecx+eiz*4],eax
  43a6c3:	mov    ebx,0x7460654f
  43a6c8:	sahf   
  43a6c9:	pop    ds
  43a6ca:	clc    
  43a6cb:	xchg   esp,eax
  43a6cc:	scas   eax,DWORD PTR es:[edi]
  43a6cd:	call   0x38990f33
  43a6d2:	push   ebx
  43a6d3:	xor    DWORD PTR [edx-0x25],0xffffff82
  43a6d7:	imul   edi,DWORD PTR [edi-0x1a1010b7],0xbc099eaa
  43a6e1:	je     0x43a672
  43a6e3:	addr16 cld 
  43a6e5:	fild   WORD PTR [ebp+0x21]
  43a6e8:	mov    ecx,0xcd085174
  43a6ed:	std    
  43a6ee:	and    DWORD PTR [ebx],edx
  43a6f0:	fdivr  QWORD PTR [ecx+0x15]
  43a6f3:	xchg   edx,eax
  43a6f4:	adc    al,0xaf
  43a6f6:	(bad)  
  43a6f7:	cmp    al,0x25
  43a6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a6fa:	lea    esi,[esi+0x57]
  43a6fd:	rol    DWORD PTR [ebx+0x768e453d],0xf1
  43a704:	pop    edi
  43a705:	(bad)  
  43a706:	or     ah,BYTE PTR [esi-0x4cb8c8af]
  43a70c:	retf   
  43a70d:	mov    al,ds:0xcfd58089
  43a712:	call   0x739fcfb2
  43a717:	int    0x9a
  43a719:	inc    esp
  43a71a:	mov    bh,0x17
  43a71c:	in     al,0xea
  43a71e:	out    0x61,al
  43a720:	loop   0x43a73a
  43a722:	sub    DWORD PTR [ebx-0x3a8dadc9],ebp
  43a728:	shr    DWORD PTR [ebx],0xd9
  43a72b:	push   edi
  43a72c:	and    edx,ebp
  43a72e:	push   ss
  43a72f:	cmp    DWORD PTR [ecx-0x56ed29d8],eax
  43a735:	pop    edi
  43a736:	bound  esi,QWORD PTR [eax]
  43a738:	imul   ebx,eax,0x36112e1b
  43a73e:	test   eax,0xf6cd522d
  43a743:	push   cx
  43a745:	push   cs
  43a746:	mov    DWORD PTR [ecx+0x3b],edx
  43a749:	adc    al,0x25
  43a74b:	adc    eax,0xb30969a
  43a750:	mov    edx,0x7bcf2e9e
  43a755:	fmul   DWORD PTR [ebp-0x5b28316b]
  43a75b:	xor    DWORD PTR [eax+0x4a],ecx
  43a75e:	mov    BYTE PTR [ebp-0x38],dl
  43a761:	mov    cl,0x51
  43a763:	dec    DWORD PTR [ecx*4-0x1cd205c5]
  43a76a:	(bad)  
  43a76b:	rcr    BYTE PTR [edi+0x7c],1
  43a76e:	jle    0x43a7cc
  43a770:	stos   DWORD PTR es:[edi],eax
  43a771:	loopne 0x43a758
  43a773:	pusha  
  43a774:	inc    ecx
  43a775:	ins    BYTE PTR es:[edi],dx
  43a776:	mov    ch,0x32
  43a778:	in     eax,0x3c
  43a77a:	mov    ebx,0xdeb311e4
  43a77f:	mov    esp,fs
  43a781:	(bad)  
  43a782:	call   0x2a3c9684
  43a787:	inc    ecx
  43a788:	mov    esp,edi
  43a78a:	int    0x8c
  43a78c:	mov    ch,0x2e
  43a78e:	mov    bl,0xf3
  43a790:	pop    ebx
  43a791:	push   ebx
  43a792:	xchg   ch,bl
  43a794:	jbe    0x43a7f3
  43a796:	pop    ss
  43a797:	sub    BYTE PTR [ebp-0xb],0x81
  43a79b:	pop    eax
  43a79c:	imul   esi,DWORD PTR [ebp-0x30a7c6fe],0xd
  43a7a3:	rol    BYTE PTR [eax+0x35ece29],0x7c
  43a7aa:	pop    ecx
  43a7ab:	stos   DWORD PTR es:[edi],eax
  43a7ac:	in     al,dx
  43a7ad:	test   DWORD PTR [ebx+0x2c],ebx
  43a7b0:	into   
  43a7b1:	jl     0x43a7f8
  43a7b3:	mov    ah,0x74
  43a7b5:	mov    ds:0xd1803d1f,eax
  43a7ba:	(bad)  
  43a7bb:	adc    esp,DWORD PTR [eax+0x15]
  43a7be:	scas   al,BYTE PTR es:[edi]
  43a7bf:	shl    BYTE PTR [ebx],0x52
  43a7c2:	xor    ecx,DWORD PTR [esi+0x1d]
  43a7c5:	push   esi
  43a7c6:	mov    eax,ds:0x1c610ad5
  43a7cb:	jle    0x43a7e7
  43a7cd:	bt     esi,0x10
  43a7d1:	(bad)
  43a7d4:	sbb    DWORD PTR [ebx-0x1b140c28],ecx
  43a7da:	jno    0x43a793
  43a7dc:	ss (bad) 
  43a7de:	test   eax,0xb0c56760
  43a7e3:	mul    DWORD PTR [ecx]
  43a7e5:	icebp  
  43a7e6:	push   ebx
  43a7e7:	cmp    eax,0xe9905b1c
  43a7ec:	je     0x43a7c5
  43a7ee:	in     al,dx
  43a7ef:	inc    eax
  43a7f0:	mul    DWORD PTR [edi+0x77]
  43a7f3:	cld    
  43a7f4:	stos   BYTE PTR es:[edi],al
  43a7f5:	jno    0x43a7cb
  43a7f7:	sbb    DWORD PTR [ebx-0x10],esi
  43a7fa:	xchg   esp,eax
  43a7fb:	test   al,0xc1
  43a7fd:	xchg   esi,eax
  43a7fe:	push   edi
  43a7ff:	jne    0x43a822
  43a801:	scas   al,BYTE PTR es:[edi]
  43a802:	test   bl,al
  43a804:	cli    
  43a805:	inc    ebp
  43a806:	dec    edx
  43a807:	pop    esp
  43a808:	jle    0x43a7fa
  43a80a:	mov    esp,0x7096b268
  43a80f:	xor    eax,0xb47adbbe
  43a814:	push   0x8a5b9f6d
  43a819:	push   ds
  43a81a:	test   al,0x39
  43a81c:	adc    DWORD PTR [edx+0x31],ecx
  43a81f:	loop   0x43a7e7
  43a821:	jge    0x43a833
  43a823:	mov    al,0x57
  43a825:	xchg   esi,eax
  43a826:	and    edx,0x40b6ea19
  43a82c:	ret    
  43a82d:	inc    esp
  43a82e:	mov    eax,ss:0x8179cbe
  43a834:	mov    cl,dl
  43a836:	push   esp
  43a837:	dec    esi
  43a838:	jecxz  0x43a7e5
  43a83a:	ss fdivrp st(4),st
  43a83d:	dec    edx
  43a83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a83f:	jae    0x43a8aa
  43a841:	jne    0x43a81e
  43a843:	xchg   ecx,eax
  43a844:	aas    
  43a845:	jae    0x43a7fe
  43a847:	dec    esi
  43a848:	inc    eax
  43a849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a84a:	inc    edx
  43a84b:	outs   dx,BYTE PTR ds:[esi]
  43a84c:	in     al,0x10
  43a84e:	and    al,0xca
  43a850:	js     0x43a827
  43a852:	mov    ds:0x12e8ecfc,al
  43a857:	jne    0x43a8c4
  43a859:	and    eax,0xd574dc52
  43a85e:	xor    ch,BYTE PTR [edx-0x25]
  43a861:	lahf   
  43a862:	cdq    
  43a863:	jmp    0x43a856
  43a865:	(bad)  
  43a866:	sub    BYTE PTR [edx-0x1100e366],al
  43a86c:	dec    edx
  43a86d:	retf   
  43a86e:	cmp    edi,DWORD PTR [eax]
  43a870:	mov    esi,0x46505821
  43a875:	jbe    0x43a892
  43a877:	popf   
  43a878:	push   0x655214b2
  43a87d:	xchg   ebx,eax
  43a87e:	cmp    DWORD PTR [ecx+0x4515053],esp
  43a884:	jne    0x43a84b
  43a886:	jle    0x43a8ec
  43a888:	lds    ecx,FWORD PTR [esi]
  43a88a:	inc    edx
  43a88b:	(bad)  
  43a88c:	jne    0x43a844
  43a88e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a88f:	cmp    BYTE PTR [eax],bh
  43a891:	dec    eax
  43a892:	adc    BYTE PTR [ecx-0x1afe1b36],bl
  43a898:	jmp    0xae4c:0x3c44cc28
  43a89f:	ss cmp al,0xc8
  43a8a2:	xor    DWORD PTR [ebx-0x5b],esi
  43a8a5:	mov    WORD PTR [eax-0x13],gs
  43a8a8:	cld    
  43a8a9:	ins    DWORD PTR es:[edi],dx
  43a8aa:	fstp   QWORD PTR [ebx-0x31d9eb03]
  43a8b0:	and    esp,DWORD PTR [edx-0x35]
  43a8b3:	test   al,0xf2
  43a8b5:	sbb    ebp,DWORD PTR [eax-0x61258c1f]
  43a8bb:	inc    ebx
  43a8bc:	out    dx,eax
  43a8bd:	rol    BYTE PTR [esi+0x814f663],0x45
  43a8c4:	fwait
  43a8c5:	outs   dx,BYTE PTR ds:[esi]
  43a8c6:	xchg   DWORD PTR [esi+0x2611b3ca],esp
  43a8cc:	ss inc ebx
  43a8ce:	bound  edx,QWORD PTR [ecx+ebx*2-0x329dccde]
  43a8d5:	jl     0x43a8b2
  43a8d7:	(bad)  
  43a8d8:	jb     0x43a945
  43a8da:	and    DWORD PTR [esi-0x6038bd45],eax
  43a8e0:	mul    DWORD PTR [ecx+0x139ed858]
  43a8e6:	cdq    
  43a8e7:	loope  0x43a87c
  43a8e9:	jmp    0x3478:0x64d68920
  43a8f0:	inc    eax
  43a8f1:	push   es
  43a8f2:	xor    dh,BYTE PTR [eax]
  43a8f4:	mov    BYTE PTR [edx+ebx*1],al
  43a8f7:	test   al,0x29
  43a8f9:	push   esp
  43a8fa:	push   0x40
  43a8fc:	adc    DWORD PTR [ebx],esi
  43a8fe:	jg     0x43a8c8
  43a900:	aaa    
  43a901:	out    dx,al
  43a902:	out    0x9e,al
  43a904:	adc    ah,ah
  43a906:	pop    eax
  43a907:	push   0xffffffae
  43a909:	shl    BYTE PTR [ecx-0x4e],0xcb
  43a90d:	in     eax,dx
  43a90e:	fst    QWORD PTR [ecx+0x4b2df784]
  43a914:	and    ebp,DWORD PTR [ebp-0x6]
  43a917:	sbb    BYTE PTR [edx],ah
  43a919:	sbb    DWORD PTR [esi],0xa52ad09d
  43a91f:	scas   al,BYTE PTR es:[edi]
  43a920:	in     al,dx
  43a921:	mov    edi,0x3d1297c2
  43a926:	xchg   ebp,eax
  43a927:	xchg   ebp,eax
  43a928:	mov    eax,ds:0x313943cb
  43a92d:	int    0xda
  43a92f:	or     ch,dh
  43a931:	repnz imul eax,DWORD PTR [edi+esi*2-0x7e],0x13
  43a937:	push   esp
  43a938:	xor    DWORD PTR [ebx+edx*2+0x4b01d77f],edx
  43a93f:	retf   0xf9c0
  43a942:	adc    BYTE PTR [eax+ebx*2+0x75],cl
  43a946:	(bad)  
  43a947:	cwde   
  43a948:	xchg   ebx,eax
  43a949:	shr    BYTE PTR [esi+eax*1+0x49],cl
  43a94d:	fistp  WORD PTR [edi]
  43a94f:	(bad)  [ecx+0xe3130]
  43a955:	sub    al,0x9e
  43a957:	iret   
  43a958:	leave  
  43a959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a95a:	mov    ah,0x68
  43a95c:	sbb    al,0xd5
  43a95e:	mov    bl,0x84
  43a960:	push   ds
  43a961:	and    eax,0x434321f8
  43a966:	jmp    0xcb4c:0x7d97663b
  43a96d:	shl    DWORD PTR [ebx+0x7add3554],1
  43a973:	sbb    DWORD PTR [esp+ecx*1-0xa],edi
  43a977:	addr16 pusha 
  43a979:	test   al,0xde
  43a97b:	das    
  43a97c:	sub    BYTE PTR [ebx],bh
  43a97e:	jb     0x43a9e2
  43a980:	and    al,0xef
  43a982:	fwait
  43a983:	lods   eax,DWORD PTR ds:[esi]
  43a984:	lds    edx,FWORD PTR [ecx+eax*8]
  43a987:	mov    cl,0xdd
  43a989:	mov    ebx,0xf53b8ca5
  43a98e:	adc    edi,esi
  43a990:	push   0x5ddc7239
  43a995:	pop    ebp
  43a996:	in     eax,0xfc
  43a998:	xchg   esi,eax
  43a999:	pop    ds
  43a99a:	inc    edi
  43a99b:	fsub   QWORD PTR [eax+0x3c4517f5]
  43a9a1:	sub    dh,BYTE PTR [eax-0x3e]
  43a9a4:	inc    ebx
  43a9a5:	mov    ebx,ecx
  43a9a7:	rcl    DWORD PTR [edx+0x66497482],1
  43a9ad:	ror    BYTE PTR [ecx],0x95
  43a9b0:	xor    DWORD PTR [esi+0x43],eax
  43a9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a9b4:	enter  0xa9b7,0x36
  43a9b8:	sar    BYTE PTR [edx],cl
  43a9ba:	out    dx,eax
  43a9bb:	and    ah,BYTE PTR [edi-0x37]
  43a9be:	push   eax
  43a9bf:	cmp    al,0x53
  43a9c1:	push   cs
  43a9c2:	fst    DWORD PTR cs:[edx]
  43a9c5:	pop    ds
  43a9c6:	(bad)  
  43a9c7:	pop    ds
  43a9c8:	dec    ebp
  43a9c9:	or     DWORD PTR [esi+eiz*1+0x401217a],ecx
  43a9d0:	push   edx
  43a9d1:	cwde   
  43a9d2:	pushf  
  43a9d3:	and    ch,cl
  43a9d5:	cs jns 0x43a9df
  43a9d8:	mov    ds:0xac756d25,al
  43a9dd:	and    BYTE PTR [esi],0xf2
  43a9e0:	stos   BYTE PTR es:[edi],al
  43a9e1:	es mov eax,0x6100993f
  43a9e7:	in     eax,0xc9
  43a9e9:	test   eax,0x9b77ddfa
  43a9ee:	sbb    ah,BYTE PTR [edx-0x6e]
  43a9f1:	ror    esp,cl
  43a9f3:	pop    ebx
  43a9f4:	mov    cl,0x8c
  43a9f6:	mov    BYTE PTR [ebp-0x1b83517e],bl
  43a9fc:	xor    DWORD PTR [ebx-0x4fdf57f7],ebp
  43aa02:	cmp    eax,0x75960be8
  43aa07:	movlps QWORD PTR [edi+0x43],xmm5
  43aa0b:	jge    0x43aa0c
  43aa0d:	cmp    DWORD PTR [ebx-0x2aefd452],esp
  43aa13:	gs add eax,0x2457e2c8
  43aa19:	fwait
  43aa1a:	add    al,0x56
  43aa1c:	sbb    eax,0xd2b6f172
  43aa21:	lods   al,BYTE PTR ds:[esi]
  43aa22:	stos   BYTE PTR es:[edi],al
  43aa23:	dec    ebx
  43aa24:	outs   dx,DWORD PTR ds:[esi]
  43aa25:	jg     0x43aa64
  43aa27:	pusha  
  43aa28:	mov    ds:0xfce2c1b5,eax
  43aa2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa2e:	mov    ch,0x74
  43aa30:	cmp    eax,0x131d57d4
  43aa35:	fwait
  43aa36:	popf   
  43aa37:	nop
  43aa38:	call   0x1a72802f
  43aa3d:	mov    ecx,0x6ff8114f
  43aa42:	hlt    
  43aa43:	mov    cl,0x3f
  43aa45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa46:	in     al,dx
  43aa47:	jne    0x43aaa5
  43aa49:	or     al,BYTE PTR [ebx]
  43aa4b:	outs   dx,BYTE PTR ds:[esi]
  43aa4c:	popa   
  43aa4d:	aad    0x90
  43aa4f:	data16 aaa 
  43aa51:	arpl   bp,ax
  43aa53:	test   esp,eax
  43aa55:	xor    DWORD PTR es:[ebx+0x41],ebx
  43aa59:	jecxz  0x43a9e9
  43aa5b:	aad    0x40
  43aa5d:	iret   
  43aa5e:	xor    BYTE PTR [edi+0x6d6eee79],0xb6
  43aa65:	inc    esi
  43aa66:	popf   
  43aa67:	das    
  43aa68:	fiadd  WORD PTR [eax-0x2f72d567]
  43aa6e:	in     eax,0xf6
  43aa70:	fisub  DWORD PTR [ebx-0x20]
  43aa73:	xchg   BYTE PTR [edx+0x7b],ah
  43aa76:	call   0xc940:0xdde3da2c
  43aa7d:	in     al,0xea
  43aa7f:	jp     0x43aa61
  43aa81:	dec    eax
  43aa82:	push   esi
  43aa83:	mov    bl,BYTE PTR [ebp-0x122b007]
  43aa89:	(bad)
  43aa8d:	ds (bad) 
  43aa8f:	cld    
  43aa90:	pop    ecx
  43aa91:	mov    edx,0x734265f5
  43aa96:	mov    eax,0xaa2a8df5
  43aa9b:	mov    ds:0xf18266a8,al
  43aaa0:	sbb    edx,DWORD PTR ds:[ebx+edi*8]
  43aaa4:	sub    eax,0xcbb162e1
  43aaa9:	iret   
  43aaaa:	aam    0xff
  43aaac:	pop    edi
  43aaad:	sar    DWORD PTR [ecx],0xd7
  43aab0:	(bad)
  43aab5:	sub    al,0x26
  43aab7:	aas    
  43aab8:	out    dx,eax
  43aab9:	pusha  
  43aaba:	jl     0x43aa8f
  43aabc:	sbb    ebx,DWORD PTR [esi-0x16e0847d]
  43aac2:	jae    0x43ab0b
  43aac4:	push   0xffffff92
  43aac6:	dec    ecx
  43aac7:	dec    ebx
  43aac9:	test   BYTE PTR [esi-0x5c9ebeae],dl
  43aacf:	imul   esp,DWORD PTR ss:[ebx-0x6b],0x4
  43aad4:	shl    eax,1
  43aad6:	fdivr  st,st(4)
  43aad8:	inc    eax
  43aad9:	test   DWORD PTR [esi+0x1d5b0b3e],0x9b2c21b9
  43aae3:	jp     0x43aaed
  43aae5:	xchg   ebp,eax
  43aae6:	push   ds
  43aae7:	pop    ss
  43aae8:	mov    cl,0xe2
  43aaea:	mov    ebx,0xe7da4a94
  43aaef:	ror    BYTE PTR [eax],cl
  43aaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aaf2:	jae    0x43aa8e
  43aaf4:	or     DWORD PTR [edx],esi
  43aaf6:	gs mov ch,0xea
  43aaf9:	sub    BYTE PTR [eax],dl
  43aafb:	and    al,0xb2
  43aafd:	mov    cl,0xf7
  43aaff:	gs retw 
  43ab02:	enter  0x5d50,0xc8
  43ab06:	sbb    BYTE PTR [eax-0x8],0x74
  43ab0a:	push   eax
  43ab0b:	nop
  43ab0c:	aas    
  43ab0d:	jne    0x43ab24
  43ab0f:	gs mov al,0x3
  43ab12:	test   eax,0x8d9306fa
  43ab17:	xchg   esi,eax
  43ab18:	sub    al,0x86
  43ab1a:	adc    ebp,edi
  43ab1c:	pop    esi
  43ab1d:	sbb    BYTE PTR [ecx+0x57b6c73d],0xcb
  43ab24:	iretw  
  43ab26:	xchg   ecx,eax
  43ab27:	add    eax,0xe8ee10e1
  43ab2c:	ins    BYTE PTR es:[edi],dx
  43ab2d:	in     eax,dx
  43ab2e:	jg     0x43aac7
  43ab30:	ss fwait
  43ab32:	pop    eax
  43ab33:	fisubr DWORD PTR [esi]
  43ab35:	add    ecx,ecx
  43ab37:	inc    esp
  43ab38:	or     bl,dh
  43ab3a:	push   eax
  43ab3b:	jle    0x43aaf0
  43ab3d:	adc    DWORD PTR [ecx],edx
  43ab3f:	test   BYTE PTR [esi-0x77],dh
  43ab42:	jmp    0x43ab8a
  43ab44:	stos   DWORD PTR es:[edi],eax
  43ab45:	js     0x43aaee
  43ab47:	fist   DWORD PTR [esp+eiz*8+0x7d1459aa]
  43ab4e:	outs   dx,BYTE PTR ds:[esi]
  43ab4f:	lods   eax,DWORD PTR fs:[esi]
  43ab51:	loop   0x43ab1e
  43ab53:	cmp    BYTE PTR [edi-0x14d2148a],bh
  43ab59:	sub    ecx,DWORD PTR [eax]
  43ab5b:	add    eax,0x6dd9959f
  43ab60:	pop    edi
  43ab61:	push   edi
  43ab62:	mov    ebp,0x27e7b528
  43ab67:	xchg   ecx,eax
  43ab68:	aaa    
  43ab69:	pop    ss
  43ab6a:	test   eax,0xf4e59416
  43ab6f:	jns    0x43abb2
  43ab71:	je     0x43ab13
  43ab73:	mov    eax,0xfacb699f
  43ab78:	adc    dl,BYTE PTR [ebp-0x18125b13]
  43ab7e:	jge    0x43ab4a
  43ab80:	xchg   esp,eax
  43ab81:	retf   
  43ab82:	int3   
  43ab83:	fsub   st(4),st
  43ab85:	outs   dx,BYTE PTR ds:[esi]
  43ab86:	scas   al,BYTE PTR es:[edi]
  43ab87:	pop    ds
  43ab88:	ret    0x8708
  43ab8b:	retf   
  43ab8c:	sti    
  43ab8d:	lock (bad) 
  43ab8f:	push   cs
  43ab90:	or     DWORD PTR [ecx+0x7d82f821],edx
  43ab96:	cwde   
  43ab97:	inc    esp
  43ab98:	xchg   ecx,eax
  43ab99:	aaa    
  43ab9a:	xchg   esp,eax
  43ab9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ab9c:	mov    ebx,0x80140e6c
  43aba1:	xor    esi,DWORD PTR [edi]
  43aba3:	sub    edi,esi
  43aba5:	not    BYTE PTR [edx+eax*1+0x56]
  43aba9:	jmp    0x43ab9b
  43abab:	jmp    0x1b245688
  43abb0:	aas    
  43abb1:	mov    eax,DWORD PTR [edi-0x14d19acb]
  43abb7:	jbe    0x43ac02
  43abb9:	cdq    
  43abba:	mov    esi,0x5fd4502c
  43abbf:	test   edx,0x7ba5c080
  43abc5:	js     0x43abeb
  43abc7:	push   eax
  43abc8:	jp     0x43aba5
  43abca:	mov    eax,ds:0x634b5610
  43abcf:	fist   WORD PTR [edx-0x50ae8618]
  43abd5:	mov    dl,0xc8
  43abd7:	xchg   cl,ah
  43abd9:	jns    0x43ab85
  43abdb:	mov    ecx,0x6e1d9eb1
  43abe0:	jb     0x43ab9e
  43abe2:	push   es
  43abe3:	push   ss
  43abe4:	addr16 xchg ebp,eax
  43abe6:	imul   ebx,esi,0x3a9412a
  43abec:	add    eax,0x23e8d53c
  43abf1:	je     0x43abbc
  43abf3:	jnp    0x43abdb
  43abf5:	arpl   WORD PTR [edx+esi*4],bp
  43abf8:	pop    edi
  43abf9:	add    esp,DWORD PTR [ebx]
  43abfb:	loope  0x43abe3
  43abfd:	jns    0x43ac4b
  43abff:	and    bl,ch
  43ac01:	xor    eax,0xcf4ca25a
  43ac06:	sub    BYTE PTR [edi],dh
  43ac08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac09:	and    DWORD PTR [ecx+ebp*4],ebx
  43ac0c:	push   0x3d
  43ac0e:	retf   0x26b5
  43ac11:	or     BYTE PTR [ecx],0xc0
  43ac14:	rcl    DWORD PTR [edx+0x6c],1
  43ac17:	fisub  WORD PTR [eax-0x7]
  43ac1a:	out    dx,al
  43ac1b:	outs   dx,DWORD PTR ds:[esi]
  43ac1c:	lock or eax,0xa09ab1d9
  43ac22:	jecxz  0x43abe5
  43ac24:	std    
  43ac25:	fs jb  0x43abfa
  43ac28:	push   ecx
  43ac29:	outs   dx,DWORD PTR ds:[esi]
  43ac2a:	xor    bl,BYTE PTR [ecx]
  43ac2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac2d:	or     eax,0x19a65cae
  43ac32:	repz ffreep st(1)
  43ac35:	sub    eax,0x776d74bc
  43ac3a:	jo     0x43ac12
  43ac3c:	js     0x43ac75
  43ac3e:	or     bh,BYTE PTR [ecx-0x17]
  43ac41:	dec    edi
  43ac42:	retf   0x34ca
  43ac45:	sbb    esp,DWORD PTR [edi-0x2c]
  43ac48:	retf   
  43ac49:	mov    al,0x5f
  43ac4b:	pop    eax
  43ac4c:	pusha  
  43ac4d:	inc    edi
  43ac4e:	outs   dx,DWORD PTR ds:[esi]
  43ac4f:	in     al,dx
  43ac50:	add    BYTE PTR [eax+0x17377a86],dh
  43ac56:	jbe    0x43ac69
  43ac58:	aas    
  43ac59:	xor    eax,0xc8cba791
  43ac5e:	fsub   DWORD PTR [ebx+0x48]
  43ac61:	rcr    DWORD PTR [ebx],1
  43ac63:	cwde   
  43ac64:	std    
  43ac65:	(bad)
  43ac68:	and    bl,BYTE PTR [edx-0x57]
  43ac6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ac6c:	xor    al,0x26
  43ac6e:	or     ah,BYTE PTR [ecx]
  43ac70:	outs   dx,DWORD PTR ds:[esi]
  43ac71:	sbb    BYTE PTR [ebp-0x45],dh
  43ac74:	push   ss
  43ac75:	leave  
  43ac76:	das    
  43ac77:	popf   
  43ac78:	jle    0x43ac62
  43ac7a:	pop    esi
  43ac7b:	inc    ebx
  43ac7c:	fnsave [esi-0x7c]
  43ac7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ac80:	dec    edi
  43ac81:	shr    DWORD PTR [ebp-0x38],cl
  43ac84:	clc    
  43ac85:	add    dl,ch
  43ac87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ac88:	adc    DWORD PTR [eax+0x5f],edi
  43ac8b:	inc    edx
  43ac8c:	fadd   st,st(5)
  43ac8e:	jo     0x43acef
  43ac90:	push   esp
  43ac91:	lods   eax,DWORD PTR ds:[esi]
  43ac92:	or     al,0xbd
  43ac94:	jbe    0x43ac73
  43ac96:	mov    al,ds:0x705ca69c
  43ac9b:	test   al,0x49
  43ac9d:	sbb    BYTE PTR [ecx+0x77],bh
  43aca0:	leave  
  43aca1:	in     eax,0xd0
  43aca3:	jo     0x43acb9
  43aca5:	fbld   TBYTE PTR es:[eax]
  43aca8:	jnp    0x43ac4d
  43acaa:	cmp    BYTE PTR [ecx+0x5bc42264],dl
  43acb0:	sub    eax,0xd181b44a
  43acb5:	std    
  43acb6:	inc    esp
  43acb7:	cmp    BYTE PTR [ebx],ah
  43acb9:	(bad)  
  43acba:	jp     0x43ac9c
  43acbc:	inc    ebp
  43acbd:	sub    eax,0xf5147677
  43acc2:	pop    esp
  43acc3:	int3   
  43acc4:	mov    edx,0xb349b048
  43acc9:	icebp  
  43acca:	sbb    al,BYTE PTR [ebx-0x45]
  43accd:	cmp    cl,BYTE PTR [ebx]
  43accf:	add    ch,dl
  43acd1:	mov    bl,0xb6
  43acd3:	push   esp
  43acd4:	sbb    cl,bl
  43acd6:	rcl    cl,1
  43acd8:	push   ecx
  43acd9:	dec    ebx
  43acda:	test   al,ah
  43acdc:	mov    bh,cl
  43acde:	mov    edx,DWORD PTR [eax+0x5b]
  43ace1:	cmp    eax,0xb91e9a2a
  43ace6:	pop    ss
  43ace7:	les    ecx,FWORD PTR [edi+ecx*4+0x6b214d37]
  43acee:	jb     0x43ad50
  43acf0:	mov    BYTE PTR [edx-0x2e4e4160],ch
  43acf6:	adc    eax,0x4d6b6880
  43acfb:	ret    0xdcec
  43acfe:	mov    eax,0x95d37332
  43ad03:	in     al,0xb2
  43ad05:	xchg   DWORD PTR [edi-0x1a],esi
  43ad08:	add    BYTE PTR [edi],bh
  43ad0a:	mov    al,0xfd
  43ad0c:	(bad)  
  43ad0d:	clc    
  43ad0e:	push   cs
  43ad0f:	jo     0x43ad29
  43ad11:	pop    esi
  43ad12:	out    dx,eax
  43ad13:	sbb    edx,DWORD PTR [esi-0x1e]
  43ad16:	jmp    0x82ad2e05
  43ad1b:	lock std 
  43ad1d:	retf   
  43ad1e:	sbb    eax,0xe789fdc0
  43ad23:	adc    DWORD PTR [ecx-0x16985497],ecx
  43ad29:	vmwrite ecx,DWORD PTR [edx]
  43ad2c:	inc    edi
  43ad2d:	ret    0x143e
  43ad30:	in     eax,0x5c
  43ad32:	adc    al,0x5a
  43ad34:	jns    0x43ad75
  43ad36:	test   DWORD PTR [esi+0x202831b1],0x82410524
  43ad40:	add    ch,bh
  43ad42:	dec    eax
  43ad43:	jne    0x43ad5a
  43ad45:	push   eax
  43ad46:	xchg   edi,eax
  43ad47:	imul   esp,DWORD PTR [ebp-0x4f],0x0
  43ad4b:	ja     0x43ad30
  43ad4d:	push   ss
  43ad4e:	(bad)  
  43ad4f:	dec    ecx
  43ad50:	stos   DWORD PTR es:[edi],eax
  43ad51:	jnp    0x43adbd
  43ad53:	outs   dx,DWORD PTR ds:[esi]
  43ad54:	sbb    al,0x47
  43ad56:	mov    dl,0x36
  43ad58:	ror    DWORD PTR [ebp+ecx*2+0x3513d1f5],cl
  43ad5f:	test   al,0xc3
  43ad61:	and    ecx,esi
  43ad63:	mov    eax,ds:0xa033a29
  43ad68:	pop    ebx
  43ad69:	mov    bl,bl
  43ad6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad6c:	xor    DWORD PTR [ebx-0x23943cec],esi
  43ad72:	sbb    bh,dh
  43ad74:	dec    eax
  43ad75:	add    al,0x63
  43ad77:	adc    BYTE PTR [ebx+0x7e77c0c3],bl
  43ad7d:	dec    eax
  43ad7e:	stc    
  43ad7f:	inc    ebp
  43ad80:	jbe    0x43adc4
  43ad82:	dec    edi
  43ad84:	(bad)  
  43ad85:	cmp    eax,0x1814218f
  43ad8a:	out    dx,eax
  43ad8b:	sahf   
  43ad8c:	cmp    ebx,DWORD PTR [eax+ecx*4+0x48]
  43ad90:	mov    bl,0x4a
  43ad92:	xchg   esi,eax
  43ad93:	data16 xor BYTE PTR [ebp+ecx*1+0x62ffd8b3],dl
  43ad9b:	adc    ch,al
  43ad9d:	lods   eax,DWORD PTR ds:[esi]
  43ad9e:	mov    ch,BYTE PTR [ecx+0x16296792]
  43ada4:	ficom  DWORD PTR [eax-0xde52f98]
  43adaa:	mov    BYTE PTR [edi-0x43],dh
  43adad:	test   al,0x78
  43adaf:	bound  esi,QWORD PTR cs:[ecx+0x347ddfce]
  43adb6:	in     al,0xab
  43adb8:	pop    edi
  43adb9:	cmc    
  43adba:	ret    0x190d
  43adbd:	das    
  43adbe:	pop    esi
  43adbf:	outs   dx,BYTE PTR ds:[esi]
  43adc0:	cmp    al,0x3d
  43adc2:	test   eax,0x6f5f21f8
  43adc7:	push   0xb5746ceb
  43adcc:	test   al,0xeb
  43adce:	je     0x43ae13
  43add0:	push   0x5c
  43add2:	test   al,0x7a
  43add4:	push   eax
  43add5:	je     0x43adf2
  43add7:	or     ecx,DWORD PTR [esi-0x16]
  43adda:	les    edx,FWORD PTR [ebx+0x5a]
  43addd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43adde:	bound  ebp,QWORD PTR [ebx-0x2ea7767]
  43ade4:	pushf  
  43ade5:	outs   dx,DWORD PTR ds:[esi]
  43ade6:	adc    edi,esp
  43ade8:	cs aad 0x72
  43adeb:	dec    edi
  43adec:	jo     0x43adb2
  43adee:	mov    ?,eax
  43adf0:	inc    eax
  43adf1:	sub    eax,0x4574f5c7
  43adf6:	pop    eax
  43adf7:	xor    BYTE PTR [eax],dh
  43adf9:	inc    esp
  43adfa:	push   esi
  43adfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43adfc:	pop    edi
  43adfd:	fcomp  QWORD PTR [esi-0xc416e8c]
  43ae03:	test   al,0xfb
  43ae05:	je     0x43adb1
  43ae07:	out    dx,al
  43ae08:	pop    edx
  43ae09:	jne    0x43adb5
  43ae0b:	ss (bad) 
  43ae0d:	hlt    
  43ae0e:	mov    ds,WORD PTR [ecx]
  43ae10:	js     0x43ae88
  43ae12:	pop    eax
  43ae13:	push   ebp
  43ae14:	xchg   ecx,eax
  43ae15:	test   DWORD PTR [ebx],edx
  43ae17:	(bad)  
  43ae18:	mov    dl,0x12
  43ae1a:	fidivr DWORD PTR ds:0xf739470c
  43ae20:	cmp    eax,0x92958a76
  43ae25:	push   0xffffffca
  43ae27:	mov    bl,0xe1
  43ae29:	cmp    al,0x4f
  43ae2c:	add    ebp,DWORD PTR [ecx]
  43ae2e:	mov    ch,0x1a
  43ae30:	(bad)  
  43ae31:	leave  
  43ae32:	add    esp,DWORD PTR [ebp+ecx*1-0x3a63213f]
  43ae39:	mov    ebp,0x1ed054b4
  43ae3e:	inc    edi
  43ae3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae40:	pop    edi
  43ae41:	arpl   WORD PTR [edi+ebp*1-0x9],cx
  43ae45:	inc    ecx
  43ae46:	add    BYTE PTR [ebx-0x55],0x4d
  43ae4a:	jne    0x43ade0
  43ae4c:	(bad)  
  43ae4e:	mov    ds:0x7b198d7f,eax
  43ae53:	jle    0x43ae3f
  43ae55:	cmp    DWORD PTR [edi+ecx*4+0x6b0e0f7e],0xffffff99
  43ae5d:	jle    0x43ae56
  43ae5f:	jg     0x43ae39
  43ae61:	push   esp
  43ae62:	sahf   
  43ae63:	ret    0x4eab
  43ae66:	inc    esi
  43ae67:	(bad)  
  43ae68:	mov    esi,0xd3d500d4
  43ae6d:	scas   al,BYTE PTR es:[edi]
  43ae6e:	jle    0x43aebd
  43ae70:	push   ds
  43ae71:	mov    al,0x81
  43ae73:	fidivr DWORD PTR [ebx-0x1cfcf1a9]
  43ae79:	sub    BYTE PTR [eax+0x579e07ce],cl
  43ae7f:	push   edx
  43ae80:	xchg   edi,eax
  43ae81:	and    edx,DWORD PTR [esi-0x16]
  43ae84:	jmp    0x27d1781
  43ae89:	cdq    
  43ae8a:	into   
  43ae8b:	imul   ebx,DWORD PTR [esi-0x5e],0xffffffa2
  43ae8f:	sub    dh,BYTE PTR [esi+0x79]
  43ae92:	cld    
  43ae93:	les    edi,FWORD PTR [eax+ebx*2-0x65]
  43ae97:	fwait
  43ae98:	cmp    BYTE PTR [ebp+0x509a1f5a],0x20
  43ae9f:	scas   eax,DWORD PTR es:[edi]
  43aea0:	popf   
  43aea1:	pop    esi
  43aea2:	psubsw mm1,QWORD PTR [edx]
  43aea5:	daa    
  43aea6:	pop    ds
  43aea7:	ds enter 0x2c4,0x9b
  43aeac:	dec    esp
  43aead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aeae:	fidivr WORD PTR [ecx+edx*2]
  43aeb1:	outs   dx,BYTE PTR ds:[esi]
  43aeb2:	lods   eax,DWORD PTR ds:[esi]
  43aeb3:	jg     0x43aede
  43aeb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aeb6:	xor    eax,DWORD PTR [ecx]
  43aeb8:	adc    eax,0x7bf15244
  43aebd:	rcr    BYTE PTR [ebp-0x49ac45],cl
  43aec3:	jp     0x43ae61
  43aec5:	mov    al,0xdb
  43aec7:	push   cs
  43aec8:	mov    dl,0x99
  43aeca:	lods   eax,DWORD PTR ds:[esi]
  43aecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43aecc:	leave  
  43aecd:	icebp  
  43aece:	jle    0x43aeba
  43aed0:	jo     0x43ae66
  43aed2:	shl    BYTE PTR [edx+0x15],0x82
  43aed6:	and    DWORD PTR [eax-0x3061fece],edx
  43aedc:	push   es
  43aedd:	mov    ch,0x2a
  43aedf:	fcomp  QWORD PTR [esi-0x3b]
  43aee2:	pushf  
  43aee3:	inc    eax
  43aee4:	sti    
  43aee5:	mov    dh,0xc3
  43aee7:	inc    esi
  43aee8:	pushf  
  43aee9:	adc    al,0x39
  43aeeb:	dec    ebp
  43aeec:	mov    ds:0xaf92777d,eax
  43aef1:	xchg   esp,eax
  43aef2:	pop    ss
  43aef3:	repnz (bad)
  43aef6:	jmp    0x7f70:0x55071843
  43aefd:	jle    0x43aefb
  43aeff:	cmp    bl,BYTE PTR [ebx]
  43af01:	xor    eax,0xbf9a7513
  43af06:	push   ebx
  43af07:	mov    edx,0xae754bdd
  43af0c:	and    al,0xd5
  43af0e:	out    dx,al
  43af0f:	add    BYTE PTR [ecx-0x11],bl
  43af12:	add    ah,BYTE PTR [edx-0x71]
  43af15:	push   ebx
  43af16:	(bad)  [esi-0x3]
  43af19:	pop    ds
  43af1a:	xchg   BYTE PTR [esi+esi*2],cl
  43af1d:	pop    esi
  43af1e:	push   ss
  43af1f:	jb     0x43aea2
  43af21:	mov    BYTE PTR [ecx],ch
  43af23:	add    BYTE PTR [ebx-0x444c74db],cl
  43af29:	mov    al,BYTE PTR [ecx+eax*8-0xbf50e8f]
  43af30:	in     al,dx
  43af31:	mov    dh,0xd8
  43af33:	dec    ebx
  43af34:	jno    0x43af85
  43af36:	fistp  DWORD PTR [esi+ebp*1+0x5ca04af9]
  43af3d:	dec    ebx
  43af3e:	ficom  WORD PTR [ebx+0x15106744]
  43af44:	dec    esi
  43af45:	pusha  
  43af46:	test   BYTE PTR ds:0xaec46df8,bh
  43af4c:	dec    ebx
  43af4d:	shl    edx,1
  43af4f:	xor    esi,DWORD PTR [eax-0x45d3aefc]
  43af55:	dec    eax
  43af56:	sbb    BYTE PTR [esi],dl
  43af58:	in     al,dx
  43af59:	ds and al,0x90
  43af5c:	jmp    0x5d00:0xcce983da
  43af63:	xor    DWORD PTR [esp+ebx*1+0x7c5e868a],ebx
  43af6a:	xor    BYTE PTR [edx+0x45],0x21
  43af6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43af6f:	out    dx,eax
  43af70:	cdq    
  43af71:	push   edi
  43af72:	hlt    
  43af73:	sub    edi,DWORD PTR [ecx]
  43af75:	rol    BYTE PTR [ebp-0x5e947705],cl
  43af7b:	push   cs
  43af7c:	stos   BYTE PTR es:[edi],al
  43af7d:	cs mov ebx,0x3488f552
  43af83:	jle    0x43afe3
  43af85:	inc    ebx
  43af86:	jnp    0x43af0e
  43af88:	test   BYTE PTR [ecx],0x12
  43af8b:	sub    eax,0xd99a749b
  43af90:	int3   
  43af91:	or     BYTE PTR [ebx-0x6],bl
  43af94:	in     al,0xf2
  43af96:	mov    esi,0xb2bbae21
  43af9b:	jge    0x43af92
  43af9d:	fwait
  43af9e:	push   ss
  43af9f:	cmc    
  43afa0:	shr    BYTE PTR [esi+0x71],0x18
  43afa4:	stos   BYTE PTR es:[edi],al
  43afa5:	or     DWORD PTR [ecx+0x7a],ecx
  43afa8:	bound  edi,QWORD PTR [edx-0x44]
  43afab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43afac:	not    eax
  43afae:	repz add ecx,esi
  43afb1:	(bad)  
  43afb2:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43afb4:	or     edi,edx
  43afb6:	push   ss
  43afb7:	in     al,0xe9
  43afb9:	push   eax
  43afba:	sub    eax,0xca652174
  43afbf:	add    eax,0xfb7e5b39
  43afc4:	inc    esp
  43afc5:	inc    esi
  43afc6:	out    dx,eax
  43afc7:	and    DWORD PTR [ebx],ecx
  43afc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43afca:	or     dh,BYTE PTR [ebx]
  43afcc:	fwait
  43afcd:	sbb    DWORD PTR [edi],esp
  43afcf:	das    
  43afd0:	ins    DWORD PTR es:[edi],dx
  43afd1:	rol    DWORD PTR [edi],cl
  43afd3:	addr16 dec edx
  43afd5:	iret   
  43afd6:	cmp    DWORD PTR [ebx+edi*4-0x4a],esi
  43afda:	mov    al,ds:0x37fedfcb
  43afdf:	aad    0xa8
  43afe1:	xchg   ebp,eax
  43afe2:	out    0xe2,eax
  43afe4:	daa    
  43afe5:	xchg   esp,eax
  43afe6:	sbb    DWORD PTR [ecx-0x6e0091fa],esp
  43afec:	xchg   ebp,eax
  43afed:	xchg   edi,eax
  43afee:	sar    DWORD PTR [edi-0x4f],cl
  43aff1:	sbb    DWORD PTR [esi-0x1e1bbf9d],0xffffffeb
  43aff8:	cmp    eax,DWORD PTR [ecx+esi*1+0x7]
  43affc:	outs   dx,DWORD PTR ds:[esi]
  43affd:	int3   
  43affe:	sbb    DWORD PTR [edx+0x3c],esp
  43b001:	imul   edx,DWORD PTR [edx],0xfffffffb
  43b004:	jnp    0x43b037
  43b006:	cmp    esp,DWORD PTR [edi-0x1b0bb182]
  43b00c:	push   es
  43b00d:	inc    eax
  43b00e:	aad    0x2a
  43b010:	aad    0xfd
  43b012:	rcr    DWORD PTR [edi],1
  43b014:	ret    
  43b015:	sbb    BYTE PTR [edx-0x2af47a66],0x97
  43b01c:	lds    eax,FWORD PTR [edx]
  43b01e:	ficom  DWORD PTR [ecx-0x11911f8f]
  43b024:	adc    dl,BYTE PTR [ebx+0x2a]
  43b027:	pop    ss
  43b028:	rcr    DWORD PTR [ecx+0x143fa6e2],0x35
  43b02f:	out    dx,eax
  43b030:	test   BYTE PTR [ebx-0x6eaec463],bl
  43b036:	inc    ebp
  43b037:	mov    esi,0x84dc3a18
  43b03c:	adc    dh,bl
  43b03e:	jb     0x43b077
  43b040:	sub    esp,esi
  43b042:	mov    esi,0xcad9cfe9
  43b047:	jp     0x43b0ab
  43b049:	lods   al,BYTE PTR ds:[esi]
  43b04a:	aad    0x6c
  43b04c:	push   edi
  43b04d:	inc    edx
  43b04e:	push   ss
  43b04f:	dec    esp
  43b050:	and    eax,0x7e23e234
  43b055:	gs xchg ebx,eax
  43b057:	(bad)  
  43b058:	dec    ecx
  43b059:	dec    edi
  43b05a:	jle    0x43b033
  43b05c:	scas   eax,DWORD PTR es:[edi]
  43b05d:	pushf  
  43b05e:	repz dec ecx
  43b060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b061:	and    eax,0xaaee5839
  43b066:	imul   eax,esp,0xa
  43b069:	jno    0x43b0cf
  43b06b:	dec    esp
  43b06c:	imul   edi,DWORD PTR [esi+0x6d],0x17
  43b070:	mov    cl,BYTE PTR [ebp+0x6d5ed5d7]
  43b076:	in     al,dx
  43b077:	cmp    BYTE PTR [ebx],0xcc
  43b07a:	ror    cl,0x97
  43b07d:	cld    
  43b07e:	dec    edi
  43b07f:	inc    ecx
  43b080:	push   esi
  43b081:	add    al,0xfe
  43b083:	call   0x2bb7792a
  43b088:	es sub al,0xe0
  43b08b:	outs   dx,DWORD PTR ds:[esi]
  43b08c:	push   es
  43b08d:	pop    ebx
  43b08e:	pop    edx
  43b08f:	push   ss
  43b090:	popf   
  43b091:	sti    
  43b092:	daa    
  43b093:	xor    BYTE PTR [eax],ch
  43b095:	mov    eax,0x5ffcd5d6
  43b09a:	ja     0x43b070
  43b09c:	jae    0x43b041
  43b09e:	inc    eax
  43b09f:	xlat   BYTE PTR ds:[ebx]
  43b0a0:	or     ch,ah
  43b0a2:	retf   0x64c8
  43b0a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0a6:	pop    esp
  43b0a7:	and    BYTE PTR [ebx],dl
  43b0a9:	push   es
  43b0aa:	adc    BYTE PTR [esi-0x51],bh
  43b0ad:	hlt    
  43b0ae:	dec    ecx
  43b0af:	sbb    edi,edx
  43b0b1:	es out 0xfd,al
  43b0b4:	mov    WORD PTR [ecx-0x17],gs
  43b0b7:	or     BYTE PTR [esp+ebp*4-0x36eb0dc0],dh
  43b0be:	sbb    DWORD PTR [esi-0x8],esp
  43b0c1:	mov    eax,ds:0xa0a0d3f4
  43b0c6:	call   0xd9f59c66
  43b0cb:	mov    al,0x1b
  43b0cd:	jg     0x43b08a
  43b0cf:	ja     0x43b0a3
  43b0d1:	mov    al,ds:0x60d5b9e9
  43b0d6:	test   BYTE PTR ds:0x2755f21e,dh
  43b0dc:	aaa    
  43b0dd:	das    
  43b0de:	call   DWORD PTR [ebp-0x33]
  43b0e1:	push   edx
  43b0e2:	xchg   DWORD PTR ds:0xc034703c,edx
  43b0e8:	dec    eax
  43b0e9:	xor    BYTE PTR [ebx+0x2f],bl
  43b0ec:	imul   ebx,DWORD PTR [eax+0x6aa2fdee],0x11ee64ea
  43b0f6:	ja     0x43b0b5
  43b0f8:	fadd   QWORD PTR [edx]
  43b0fa:	and    esi,ecx
  43b0fc:	mov    ebx,0xe6050c69
  43b101:	sub    BYTE PTR [ebp+0x27],bh
  43b104:	pop    es
  43b105:	in     al,0xe0
  43b107:	mov    ch,0xff
  43b109:	pop    ecx
  43b10a:	sub    eax,0x3a630e62
  43b10f:	loope  0x43b16a
  43b111:	or     BYTE PTR [ecx],ch
  43b113:	je     0x43b0a0
  43b115:	jo     0x43b0eb
  43b117:	and    eax,0x54f70243
  43b11c:	pop    es
  43b11d:	pop    ebx
  43b11e:	gs sub eax,0x9c634da2
  43b124:	xor    al,0x32
  43b126:	mov    eax,0xf8850746
  43b12b:	ins    BYTE PTR es:[edi],dx
  43b12c:	shl    bl,0x52
  43b12f:	stc    
  43b130:	cmp    cl,BYTE PTR [ebp+0x2e]
  43b133:	ret    
  43b134:	in     eax,0x25
  43b136:	mov    eax,ds:0x99c52107
  43b13b:	cwde   
  43b13c:	sub    DWORD PTR [edx-0x675f4d50],eax
  43b142:	fs push 0xc46bae67
  43b148:	in     al,dx
  43b149:	sahf   
  43b14a:	(bad)  
  43b14b:	shl    DWORD PTR ds:0xe38865ea,1
  43b151:	(bad)  
  43b152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b153:	sbb    BYTE PTR [edi-0x585cfb1e],bh
  43b159:	pop    ds
  43b15a:	lods   eax,DWORD PTR ds:[esi]
  43b15b:	dec    esi
  43b15c:	xchg   edi,eax
  43b15d:	xchg   esi,eax
  43b15e:	sbb    BYTE PTR [ebp+0x6fc49c17],0xa5
  43b165:	cmp    DWORD PTR ds:0xfbd26fd7,edx
  43b16b:	sbb    esp,0xffffffde
  43b16e:	ins    DWORD PTR es:[edi],dx
  43b16f:	std    
  43b170:	and    edx,DWORD PTR [eax]
  43b172:	daa    
  43b173:	mov    ch,0x37
  43b175:	xlat   BYTE PTR ds:[ebx]
  43b176:	jnp    0x43b174
  43b178:	bound  edi,QWORD PTR [ebx-0x67]
  43b17b:	pop    esi
  43b17c:	sub    bl,cl
  43b17e:	dec    eax
  43b17f:	xchg   edx,eax
  43b180:	mov    edi,esp
  43b182:	xchg   ecx,eax
  43b183:	inc    ebp
  43b184:	js     0x43b190
  43b186:	mov    ds,WORD PTR [ecx+0x4391c73b]
  43b18c:	xlat   BYTE PTR ds:[ebx]
  43b18d:	test   eax,0x326bcbf6
  43b192:	sbb    DWORD PTR [esi],ecx
  43b194:	mov    bl,0xcc
  43b196:	dec    eax
  43b197:	gs pushf 
  43b199:	push   ecx
  43b19a:	test   BYTE PTR [ecx-0x3d3dd281],bh
  43b1a0:	cmp    esp,esp
  43b1a2:	repnz imul edx,DWORD PTR [esi-0x67d67482],0xffffffef
  43b1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b1ab:	test   edi,0x628fdf31
  43b1b1:	loopne 0x43b163
  43b1b3:	and    eax,0x3c260721
  43b1b8:	inc    esp
  43b1b9:	sbb    al,0xec
  43b1bb:	sbb    DWORD PTR [edx+0x52],esp
  43b1be:	and    eax,DWORD PTR [esi+esi*4+0x26845120]
  43b1c5:	scas   eax,DWORD PTR es:[edi]
  43b1c6:	add    DWORD PTR [eax-0x6d],0xbcab856b
  43b1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b1ce:	mov    ecx,0xca598301
  43b1d3:	in     al,0x46
  43b1d5:	mov    ebp,0x2764ff54
  43b1da:	mov    ecx,0x96c7dfb5
  43b1df:	pop    esp
  43b1e0:	cs loop 0x43b213
  43b1e3:	add    DWORD PTR [edx],edi
  43b1e5:	nop
  43b1e6:	cmp    al,0x47
  43b1e8:	xor    DWORD PTR ds:0xf6aad024,esi
  43b1ee:	rol    BYTE PTR [ecx],1
  43b1f0:	(bad)  
  43b1f1:	out    dx,al
  43b1f2:	jmp    0x11d5:0x9d535e9b
  43b1f9:	stos   DWORD PTR es:[edi],eax
  43b1fa:	jge    0x43b1cf
  43b1fc:	fisubr WORD PTR [eax-0x1f]
  43b1ff:	mov    ch,0x22
  43b201:	aaa    
  43b202:	daa    
  43b203:	sbb    BYTE PTR [ecx],dh
  43b205:	dec    esi
  43b206:	pop    esp
  43b207:	pop    ds
  43b208:	sub    dh,al
  43b20a:	xchg   ebp,eax
  43b20b:	pop    edi
  43b20c:	pop    ebp
  43b20d:	popa   
  43b20e:	out    dx,al
  43b20f:	rcr    BYTE PTR [eax-0x7611a54b],0xd3
  43b216:	adc    BYTE PTR [ebx-0xc],ch
  43b219:	dec    ebp
  43b21a:	cmp    eax,0xc8b393d1
  43b21f:	and    al,0x8a
  43b221:	add    BYTE PTR [ebp-0x77],dh
  43b224:	adc    al,0x53
  43b226:	or     esp,ecx
  43b228:	and    eax,0x1102ddeb
  43b22d:	fidivr DWORD PTR [edx+0x47e880b6]
  43b233:	sub    al,0x1d
  43b235:	fadd   DWORD PTR [ecx+0x3a4d9918]
  43b23b:	cmp    BYTE PTR [edi+0x16],al
  43b23e:	mov    edx,0x7bb5be1a
  43b243:	stc    
  43b244:	aaa    
  43b245:	addr16 pop esi
  43b247:	mov    esp,0x31220746
  43b24c:	mov    ch,0x6e
  43b24e:	xchg   ebx,eax
  43b24f:	into   
  43b250:	hlt    
  43b251:	dec    ebp
  43b252:	adc    al,0x83
  43b254:	adc    edi,edi
  43b256:	add    bl,BYTE PTR [ecx-0x71]
  43b259:	or     ecx,DWORD PTR [edx]
  43b25b:	jmp    0x43b248
  43b25d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b25e:	add    BYTE PTR [eax+eiz*1],dh
  43b261:	sbb    ecx,edx
  43b263:	cmp    ebp,DWORD PTR [ecx+ebx*8+0x1ee7e263]
  43b26a:	js     0x43b2a5
  43b26c:	je     0x43b27b
  43b26e:	aas    
  43b26f:	les    esi,FWORD PTR ds:0x7d4381e3
  43b275:	and    DWORD PTR [esi+0xc86fcb6],ebx
  43b27b:	test   al,0xb3
  43b27d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b27e:	dec    edx
  43b27f:	sbb    DWORD PTR [edx],ebp
  43b281:	iret   
  43b282:	ret    
  43b283:	pop    esi
  43b284:	push   ebx
  43b285:	inc    edx
  43b286:	mov    al,ds:0x73584953
  43b28b:	les    ebx,FWORD PTR [ebp-0x430f13ba]
  43b291:	push   es
  43b292:	push   0xffffff9c
  43b294:	(bad)  
  43b295:	cmp    esp,ecx
  43b297:	gs hlt 
  43b299:	rol    DWORD PTR [ebx+ebp*4-0x792c8b9d],cl
  43b2a0:	push   0xffffff95
  43b2a2:	fdiv   st(7),st
  43b2a4:	xchg   edi,eax
  43b2a5:	addr16 inc eax
  43b2a7:	pop    ebp
  43b2a8:	je     0x43b293
  43b2aa:	fdiv   st(0),st
  43b2ac:	aam    0xff
  43b2ae:	in     eax,dx
  43b2af:	ret    0x84e3
  43b2b2:	push   ecx
  43b2b3:	es mov esp,0xcbbc18d2
  43b2b9:	lock lds esi,FWORD PTR [edx]
  43b2bc:	or     al,0x5f
  43b2be:	call   0x4c29e29b
  43b2c3:	xchg   DWORD PTR [ecx+0x42c26019],edx
  43b2c9:	stos   BYTE PTR es:[edi],al
  43b2ca:	cwde   
  43b2cb:	fisubr WORD PTR [ebx]
  43b2cd:	int3   
  43b2ce:	mov    ah,BYTE PTR [eax]
  43b2d0:	xor    eax,0xed3a813f
  43b2d5:	(bad)  
  43b2d6:	in     al,dx
  43b2d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b2d8:	pop    edi
  43b2d9:	jmp    0x43b262
  43b2db:	cmp    DWORD PTR [edi-0x5f51174a],eax
  43b2e1:	cdq    
  43b2e2:	gs push esp
  43b2e4:	mov    ah,0x32
  43b2e6:	jae    0x43b357
  43b2e8:	mov    esi,edi
  43b2ea:	enter  0xe03b,0xb4
  43b2ee:	mov    esp,DWORD PTR [ecx+0x7a]
  43b2f1:	fistp  WORD PTR [esi+0x6e]
  43b2f4:	lods   al,BYTE PTR ds:[esi]
  43b2f5:	fidiv  DWORD PTR [eax+ecx*4]
  43b2f8:	imul   eax,edx,0x80f05089
  43b2fe:	leave  
  43b2ff:	retf   0xb8a0
  43b302:	cwde   
  43b303:	jae    0x43b300
  43b305:	cld    
  43b306:	mov    esi,ecx
  43b308:	aas    
  43b309:	push   0x31
  43b30b:	pop    ss
  43b30c:	pop    ebx
  43b30d:	mov    DWORD PTR [eax+0x41],edi
  43b310:	fmul   DWORD PTR [esi+0x50a39858]
  43b316:	dec    ecx
  43b317:	jge    0x43b2a5
  43b319:	mov    bh,0x57
  43b31b:	push   cs
  43b31c:	and    esp,ebx
  43b31e:	sub    cl,dl
  43b320:	xchg   DWORD PTR [edi],esi
  43b322:	les    edx,FWORD PTR [ebp+eax*1-0x305554e]
  43b329:	jnp    0x43b3a0
  43b32b:	dec    edx
  43b32c:	inc    ebx
  43b32d:	fs inc ebx
  43b32f:	xor    DWORD PTR [esp+eax*8+0x27],esp
  43b333:	dec    edi
  43b334:	mov    ch,0xf4
  43b336:	sub    esi,DWORD PTR [edx-0x6b3618fe]
  43b33c:	mov    ebp,DWORD PTR [edx]
  43b33e:	xchg   edi,eax
  43b33f:	and    eax,0x22c2442
  43b344:	out    dx,al
  43b345:	ss xchg ebx,eax
  43b347:	push   ebp
  43b348:	gs cmp ebp,edi
  43b34b:	mov    edi,0x9d7e8f36
  43b350:	in     eax,0xfd
  43b352:	out    0x75,al
  43b354:	pop    esi
  43b355:	mov    BYTE PTR [esp+eax*1+0x48],0xc9
  43b35a:	out    dx,al
  43b35b:	es and eax,0xc00d8279
  43b361:	inc    ecx
  43b362:	or     al,0x7a
  43b364:	sbb    bh,BYTE PTR [esi-0x68]
  43b367:	(bad)  
  43b368:	maxps  xmm1,xmm1
  43b36b:	les    edi,FWORD PTR [ebx+0x7f73dbd2]
  43b371:	add    cl,cl
  43b373:	cmp    eax,0x11da7e62
  43b378:	loop   0x43b3c9
  43b37a:	sbb    DWORD PTR [esi],ecx
  43b37c:	in     eax,0x29
  43b37e:	xchg   edx,eax
  43b37f:	neg    DWORD PTR [esi-0x6]
  43b382:	push   esp
  43b383:	iret   
  43b384:	push   ds
  43b385:	and    DWORD PTR [esi+0x78],esp
  43b388:	push   esi
  43b389:	mov    dl,dl
  43b38b:	sbb    al,0x3f
  43b38d:	out    dx,eax
  43b38e:	mov    dl,0xd7
  43b390:	xlat   BYTE PTR ds:[ebx]
  43b391:	or     edi,DWORD PTR [ecx]
  43b393:	pop    esi
  43b394:	push   0xe
  43b396:	mov    ?,WORD PTR [esp+esi*4-0x1fdebfc]
  43b39d:	or     cl,bh
  43b39f:	pop    esi
  43b3a0:	push   eax
  43b3a1:	pusha  
  43b3a2:	pop    ds
  43b3a3:	lock jo 0x43b37f
  43b3a6:	pop    ebp
  43b3a7:	in     al,0x6c
  43b3a9:	push   ebp
  43b3aa:	(bad)  
  43b3ab:	fst    st(5)
  43b3ad:	or     BYTE PTR [ebx+0x2d],bh
  43b3b0:	jbe    0x43b426
  43b3b2:	cmp    BYTE PTR [ebp-0x587e9517],bl
  43b3b8:	shl    BYTE PTR [ecx-0x23],1
  43b3bb:	xor    DWORD PTR [edx],eax
  43b3bd:	clc    
  43b3be:	jg     0x43b417
  43b3c0:	add    al,0x52
  43b3c2:	inc    edi
  43b3c3:	pop    ebx
  43b3c4:	adc    eax,0x3f81a173
  43b3c9:	jns    0x43b3ae
  43b3cb:	pushf  
  43b3cc:	push   ebp
  43b3cd:	adc    al,BYTE PTR [edx-0x7a504483]
  43b3d3:	add    ecx,DWORD PTR [ebp+ecx*4+0x7ce653e9]
  43b3da:	push   esp
  43b3db:	call   0x25e18b62
  43b3e0:	outs   dx,BYTE PTR ds:[esi]
  43b3e1:	dec    ebx
  43b3e2:	fisttp DWORD PTR [edi]
  43b3e4:	jb     0x43b384
  43b3e6:	and    eax,0x449a7b94
  43b3eb:	dec    edx
  43b3ec:	cmc    
  43b3ed:	in     al,0x2a
  43b3ef:	xchg   ebx,eax
  43b3f0:	dec    ebx
  43b3f1:	shr    DWORD PTR [edx],1
  43b3f3:	stos   WORD PTR es:[edi],ax
  43b3f5:	xor    al,dh
  43b3f7:	jb     0x43b454
  43b3f9:	sub    eax,0x2f6101f1
  43b3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b3ff:	jmp    0x5c1c:0x882270f0
  43b406:	xchg   ebp,eax
  43b407:	mov    ss,WORD PTR [ebx+0x398aa581]
  43b40d:	shr    edi,0xdb
  43b410:	imul   esi,DWORD PTR [edi],0x2e85800c
  43b416:	mov    eax,0x6f2335a3
  43b41b:	inc    ebx
  43b41c:	and    BYTE PTR [ebx+0x5f],dl
  43b41f:	xor    DWORD PTR [ebp-0x5ff0b241],esp
  43b425:	mov    dh,0xee
  43b427:	mov    BYTE PTR [edi],cl
  43b429:	stos   DWORD PTR es:[edi],eax
  43b42a:	in     al,0x26
  43b42c:	(bad)  
  43b42d:	sbb    BYTE PTR [edi],cl
  43b42f:	sub    BYTE PTR [edi+0x69],cl
  43b432:	frstor [esi]
  43b434:	lods   eax,DWORD PTR ds:[esi]
  43b435:	cmp    bh,0x7f
  43b438:	aas    
  43b439:	push   ebp
  43b43a:	mov    eax,0x1488c3a4
  43b43f:	in     eax,0x25
  43b441:	bound  edx,QWORD PTR [ebx]
  43b443:	and    esp,esp
  43b445:	rol    DWORD PTR [edx-0x3],1
  43b448:	cwde   
  43b449:	cmp    DWORD PTR [edx+0x41],0xffffffc3
  43b44d:	and    BYTE PTR [ecx+0x42],ch
  43b450:	ja     0x43b401
  43b452:	hlt    
  43b453:	not    DWORD PTR [edx*4+0x77a0728b]
  43b45a:	xchg   edx,eax
  43b45b:	mov    al,0x17
  43b45d:	cli    
  43b45e:	cmp    BYTE PTR [ebx+0x7177e975],ch
  43b464:	and    BYTE PTR [edx+0x2f5262bb],dl
  43b46a:	outs   dx,BYTE PTR ds:[esi]
  43b46b:	sbb    BYTE PTR [edi-0x2e],ch
  43b46e:	sub    ah,bl
  43b470:	jb     0x43b412
  43b472:	pop    ebp
  43b473:	shr    DWORD PTR [ebx],cl
  43b475:	push   esp
  43b476:	jle    0x43b4a1
  43b478:	test   BYTE PTR [esi-0x325445ec],ch
  43b47e:	inc    ebx
  43b47f:	jae    0x43b4b8
  43b481:	loop   0x43b418
  43b483:	xchg   ecx,eax
  43b484:	mov    esp,0xd146062e
  43b489:	push   0xd6609109
  43b48e:	or     esi,ebp
  43b490:	out    0xd8,eax
  43b492:	pop    esp
  43b493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b494:	shl    BYTE PTR [eax+0x796abdcf],cl
  43b49a:	sub    DWORD PTR [ecx-0xba5ec96],0x13f3fad4
  43b4a4:	js     0x43b513
  43b4a6:	pop    ebx
  43b4a7:	ja     0x43b473
  43b4a9:	int3   
  43b4aa:	pop    esi
  43b4ab:	in     al,dx
  43b4ac:	inc    esi
  43b4ad:	pop    ebx
  43b4ae:	sub    esi,eax
  43b4b0:	add    bl,ah
  43b4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b4b3:	sub    DWORD PTR [edx+0x471bd77f],0x79
  43b4ba:	in     al,0x1
  43b4bc:	cmp    eax,0x172ae76b
  43b4c1:	mov    ds:0x10d49a5a,al
  43b4c6:	adc    eax,0xb87faaa5
  43b4cb:	pand   mm0,QWORD PTR cs:[ebx]
  43b4cf:	xor    al,0xb3
  43b4d1:	jg     0x43b478
  43b4d3:	jmp    0x3088:0x15b209c3
  43b4da:	loop   0x43b502
  43b4dc:	mov    ah,0x61
  43b4de:	lds    edi,FWORD PTR [edx-0x4e]
  43b4e1:	lahf   
  43b4e2:	call   0xef576359
  43b4e7:	ret    0x9d06
  43b4ea:	adc    BYTE PTR [ecx+0x2b],dl
  43b4ed:	scas   al,BYTE PTR es:[edi]
  43b4ee:	ret    
  43b4ef:	mov    dl,0x5
  43b4f1:	div    cl
  43b4f3:	jno    0x43b501
  43b4f5:	push   esp
  43b4f6:	lock mov ds:0x27aafd0f,al
  43b4fc:	sub    dl,bh
  43b4fe:	std    
  43b4ff:	outs   dx,BYTE PTR ds:[esi]
  43b500:	pop    ebx
  43b501:	add    eax,ecx
  43b503:	mov    al,ds:0xca37a23e
  43b508:	adc    edi,ecx
  43b50a:	in     eax,dx
  43b50b:	xchg   esi,eax
  43b50c:	mov    edx,0xefef3749
  43b511:	add    al,0xa
  43b513:	leave  
  43b514:	std    
  43b515:	jmp    0xd674:0x621eaf3
  43b51c:	cld    
  43b51d:	or     esp,DWORD PTR [esi-0x58]
  43b520:	mov    ebp,0xf2eafde0
  43b525:	ret    0x9c34
  43b528:	pop    ds
  43b529:	lock test eax,0xc7d7b647
  43b52f:	add    al,0x1d
  43b531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b532:	xor    DWORD PTR [esi-0x18d3217e],eax
  43b538:	mov    WORD PTR [ebx],?
  43b53a:	mov    ah,0x8e
  43b53c:	cmp    BYTE PTR [eax-0x2fde3c18],ch
  43b542:	pop    fs
  43b544:	fcmove st,st(5)
  43b546:	dec    ecx
  43b547:	jge    0x43b4f8
  43b549:	fsub   QWORD PTR [edx]
  43b54b:	stos   BYTE PTR es:[edi],al
  43b54c:	retf   0xedb3
  43b54f:	adc    BYTE PTR [ebx-0x35],0x1a
  43b553:	fdivr  QWORD PTR [ebp+0xc83bf96]
  43b559:	or     edx,DWORD PTR [eax]
  43b55b:	nop
  43b55c:	inc    edi
  43b55d:	xor    DWORD PTR [ebp-0x2e],ebx
  43b560:	loopne 0x43b59d
  43b562:	or     ecx,DWORD PTR [ecx]
  43b564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b565:	mov    ds:0x6aca7cc7,al
  43b56a:	lea    ecx,[edi+0x17c4703b]
  43b570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b571:	mov    ecx,DWORD PTR ds:0xa05d8bb9
  43b577:	outs   dx,BYTE PTR ds:[esi]
  43b578:	pop    esp
  43b579:	cmp    cl,ah
  43b57b:	pop    ebp
  43b57c:	dec    esp
  43b57d:	add    al,dh
  43b57f:	imul   edx,esi,0xffffffbd
  43b582:	daa    
  43b583:	imul   edi,DWORD PTR ss:[edi-0x494b65a3],0xffffff93
  43b58b:	mov    eax,0x38aaac89
  43b590:	cmc    
  43b591:	mov    al,BYTE PTR [edi]
  43b593:	xchg   dh,ch
  43b595:	cmp    ch,BYTE PTR [esi+0x15]
  43b598:	pop    edx
  43b599:	(bad)
  43b59e:	rol    DWORD PTR [esi+eax*2+0x497acfe7],1
  43b5a5:	mov    ecx,0x2ed05ff2
  43b5aa:	ss ins BYTE PTR es:[edi],dx
  43b5ac:	jl     0x43b613
  43b5ae:	ja     0x43b599
  43b5b0:	xor    bl,BYTE PTR [edx]
  43b5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b5b3:	outs   dx,BYTE PTR ds:[esi]
  43b5b4:	mov    bl,0x74
  43b5b6:	test   DWORD PTR [ecx+eax*4],eax
  43b5b9:	adc    bl,dl
  43b5bb:	jmp    0xe4908f3
  43b5c0:	pop    esi
  43b5c1:	mov    esi,0xabcb734a
  43b5c6:	xchg   edi,eax
  43b5c7:	gs std 
  43b5c9:	add    esi,DWORD PTR [ecx-0x37]
  43b5cc:	call   0xc1c0d719
  43b5d1:	and    DWORD PTR [ebx-0x62b828d3],esp
  43b5d7:	les    edi,FWORD PTR [ecx+0xdd9d42]
  43b5dd:	push   edx
  43b5de:	and    ah,dl
  43b5e0:	rcr    BYTE PTR [ebx],cl
  43b5e2:	mov    BYTE PTR [esi],ah
  43b5e4:	test   ah,bl
  43b5e6:	jge    0x43b5c2
  43b5e8:	pop    edi
  43b5e9:	jge    0x43b624
  43b5eb:	xchg   ebx,eax
  43b5ec:	sbb    al,0x29
  43b5ee:	(bad)  
  43b5f0:	mov    ebp,0xf38c2f80
  43b5f5:	stos   DWORD PTR es:[edi],eax
  43b5f6:	dec    ebp
  43b5f7:	pusha  
  43b5f8:	adc    BYTE PTR [ecx],ah
  43b5fa:	pop    ss
  43b5fb:	pop    es
  43b5fc:	mov    eax,0xe51c6336
  43b601:	scas   eax,DWORD PTR es:[edi]
  43b602:	std    
  43b603:	push   ebp
  43b604:	sbb    ecx,DWORD PTR [edx+0x65]
  43b607:	ins    DWORD PTR es:[edi],dx
  43b608:	pop    esp
  43b609:	xchg   edi,eax
  43b60a:	push   ecx
  43b60b:	pop    esp
  43b60c:	fdivr  st(3),st
  43b60e:	xchg   BYTE PTR [esi-0x42],ch
  43b611:	repz dec esi
  43b613:	lods   al,BYTE PTR ds:[esi]
  43b614:	jae    0x43b5b8
  43b616:	mov    BYTE PTR [ebx+0x7ffab400],bh
  43b61c:	mov    al,ds:0xc4e98834
  43b621:	jp     0x43b5ec
  43b623:	xor    eax,0x80f00f02
  43b628:	es lock pushf 
  43b62b:	vpaddd ymm0,ymm2,ymm4
  43b62f:	es data16 jbe 0x43b66d
  43b633:	mov    ebp,0xe24de808
  43b638:	xchg   ebx,eax
  43b639:	addr16 push esi
  43b63b:	fbstp  TBYTE PTR [edx]
  43b63d:	test   cl,0xb9
  43b640:	jmp    0x9b5b5eb7
  43b645:	mov    dl,0xf3
  43b647:	test   BYTE PTR [eax],bh
  43b649:	xchg   esi,eax
  43b64a:	sbb    ecx,DWORD PTR [ecx+0xa]
  43b64d:	mov    cl,0xf1
  43b64f:	sahf   
  43b650:	xchg   edi,eax
  43b651:	(bad)  
  43b652:	call   0x18be:0xd1f302b0
  43b659:	sub    DWORD PTR [edx-0x52],0x6f
  43b65d:	pop    ss
  43b65e:	mov    esp,0x5c5add4b
  43b663:	sub    ebp,eax
  43b665:	mov    dh,BYTE PTR [eax-0x70]
  43b668:	leave  
  43b669:	mov    dl,0xbd
  43b66b:	push   0x1d39d778
  43b670:	mov    ecx,0x580e9175
  43b675:	faddp  st(4),st
  43b677:	aad    0x3b
  43b679:	hlt    
  43b67a:	in     al,0xa1
  43b67c:	les    esp,FWORD PTR [edx+0x11]
  43b67f:	jae    0x43b656
  43b681:	dec    ebx
  43b682:	and    edi,DWORD PTR [ecx+edi*4]
  43b685:	sbb    eax,0x1818f2d3
  43b68a:	mov    ds:0x31c7a708,eax
  43b68f:	stc    
  43b690:	neg    BYTE PTR [edx-0x1c4e8629]
  43b696:	adc    DWORD PTR [ebx+0x772bb505],ecx
  43b69c:	cmp    eax,0x2e480ef
  43b6a1:	into   
  43b6a2:	repnz fldcw WORD PTR [edx+0x61266bcb]
  43b6a9:	lahf   
  43b6aa:	aas    
  43b6ab:	(bad)  
  43b6ad:	jmp    0xcc07:0x73b2e9ca
  43b6b4:	inc    edi
  43b6b5:	in     eax,dx
  43b6b6:	mov    ch,bl
  43b6b8:	fld    st(6)
  43b6ba:	and    bh,ah
  43b6bc:	mov    edx,0x15525a35
  43b6c1:	mov    ds,WORD PTR [eax]
  43b6c3:	jmp    0x43b6f7
  43b6c5:	and    al,0x6
  43b6c7:	ins    BYTE PTR es:[edi],dx
  43b6c8:	and    DWORD PTR [edx+0x45],esi
  43b6cb:	cmp    esp,0x72
  43b6ce:	ficom  WORD PTR ds:0x80c13012
  43b6d4:	div    BYTE PTR ds:0x2916e28f
  43b6da:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  43b6dc:	push   edi
  43b6dd:	jb     0x43b6dd
  43b6df:	add    edi,edi
  43b6e1:	dec    esi
  43b6e2:	or     eax,0x443705a5
  43b6e7:	ror    ah,1
  43b6e9:	sub    edi,DWORD PTR ds:[ebp+0x5fe0b66]
  43b6f0:	cmp    DWORD PTR [esi],edi
  43b6f2:	(bad)  
  43b6f4:	fiadd  WORD PTR [ecx]
  43b6f6:	test   eax,0x549fde07
  43b6fb:	jnp    0x43b730
  43b6fd:	mov    ecx,esp
  43b6ff:	call   0x3b224acf
  43b704:	loop   0x43b6ff
  43b706:	adc    ah,BYTE PTR ss:[eax+ebp*2]
  43b70a:	ins    BYTE PTR es:[edi],dx
  43b70b:	aas    
  43b70c:	retf   0x3311
  43b70f:	push   ss
  43b710:	sbb    DWORD PTR [ebx+0x4553316],edi
  43b716:	pop    esp
  43b717:	push   esp
  43b718:	lods   al,BYTE PTR ds:[esi]
  43b719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b71a:	xor    eax,0x1533b35
  43b71f:	jne    0x43b773
  43b721:	lea    esi,[edx]
  43b723:	pop    ds
  43b724:	mov    edx,0xc4be304a
  43b729:	stos   BYTE PTR es:[edi],al
  43b72a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b72b:	add    bl,BYTE PTR [edx+0x5a]
  43b72e:	or     bl,BYTE PTR [ebp-0xdd84a93]
  43b734:	pop    esp
  43b735:	ins    BYTE PTR es:[edi],dx
  43b736:	inc    esp
  43b737:	aad    0x63
  43b739:	lods   al,BYTE PTR ds:[esi]
  43b73a:	call   0x7bbd:0x27c7f683
  43b741:	jne    0x43b72b
  43b743:	pop    edx
  43b744:	dec    eax
  43b745:	push   es
  43b746:	and    BYTE PTR [edi+esi*4],al
  43b749:	add    eax,DWORD PTR [ebp-0x6044fe3a]
  43b74f:	mov    edi,0xe1564323
  43b754:	sahf   
  43b755:	or     eax,0x182eb89a
  43b75a:	sbb    al,0xc5
  43b75c:	xor    al,0x73
  43b75e:	nop
  43b75f:	popf   
  43b760:	lods   al,BYTE PTR ds:[esi]
  43b761:	(bad)  
  43b763:	or     BYTE PTR [esi-0x4811b103],ah
  43b769:	lock push edx
  43b76b:	cld    
  43b76c:	push   ebp
  43b76d:	jns    0x43b748
  43b76f:	gs mov ah,0x3a
  43b772:	xor    DWORD PTR [ebx],edi
  43b774:	and    eax,0x966b6225
  43b779:	pop    ebx
  43b77a:	pop    es
  43b77b:	or     bl,BYTE PTR [ebx]
  43b77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b77e:	push   0xfef9f526
  43b783:	push   esp
  43b784:	mov    bl,0x86
  43b786:	fwait
  43b787:	pusha  
  43b788:	leave  
  43b789:	daa    
  43b78a:	fsin   
  43b78c:	fidiv  WORD PTR [edx+0x4a9c6d10]
  43b792:	(bad)  
  43b793:	lock add DWORD PTR [eax-0x10],0x52
  43b798:	sub    eax,0xe213f247
  43b79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b79e:	mov    ecx,0x88563088
  43b7a3:	stos   DWORD PTR es:[edi],eax
  43b7a4:	stos   BYTE PTR es:[edi],al
  43b7a5:	push   es
  43b7a6:	jbe    0x43b7c1
  43b7a8:	xchg   edi,eax
  43b7a9:	jnp    0x43b79b
  43b7ab:	addr16 xchg esi,eax
  43b7ad:	daa    
  43b7ae:	adc    bh,BYTE PTR [edx]
  43b7b0:	inc    edx
  43b7b1:	jge    0x43b81e
  43b7b3:	jb     0x43b7bb
  43b7b5:	adc    al,dl
  43b7b7:	mov    eax,0xd513edff
  43b7bc:	adc    eax,0x2d13b55e
  43b7c1:	mov    dl,0x43
  43b7c3:	mov    al,ds:0xf6dfd8ea
  43b7c8:	pop    edi
  43b7c9:	xor    DWORD PTR [edi+0x68d964ea],ecx
  43b7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b7d0:	jb     0x43b7d4
  43b7d2:	add    al,0xf3
  43b7d4:	mov    ds:0xc50e2039,eax
  43b7d9:	pop    ss
  43b7da:	xor    DWORD PTR [ecx-0x72e938d1],ebp
  43b7e0:	jge    0x43b7dd
  43b7e2:	sub    eax,0xf93cfb83
  43b7e7:	es shl esi,cl
  43b7ea:	pushf  
  43b7eb:	aad    0x8d
  43b7ed:	add    al,bh
  43b7ef:	popa   
  43b7f0:	adc    al,0xf0
  43b7f2:	fstp   DWORD PTR ds:0x16ffaf54
  43b7f8:	popa   
  43b7f9:	iret   
  43b7fa:	xor    al,0x3e
  43b7fc:	repnz outs dx,BYTE PTR ds:[esi]
  43b7fe:	lods   al,BYTE PTR ds:[esi]
  43b7ff:	mov    al,0x99
  43b801:	sub    eax,0x9d757394
  43b806:	scas   al,BYTE PTR es:[edi]
  43b807:	out    0x31,al
  43b809:	(bad)  
  43b80a:	xchg   ebp,eax
  43b80b:	jmp    0x43b839
  43b80d:	inc    ebx
  43b80e:	jae    0x43b7cd
  43b810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b811:	rcr    esp,0x79
  43b814:	or     esp,DWORD PTR [ebx]
  43b816:	retf   0x4e8b
  43b819:	data16 fld DWORD PTR [ebx+0x65]
  43b81d:	cmp    ebx,ecx
  43b81f:	int    0x4d
  43b821:	xor    edi,DWORD PTR [ecx]
  43b823:	mov    ebx,0xb94a167d
  43b828:	das    
  43b829:	test   BYTE PTR [ebp-0x28],bh
  43b82c:	inc    ebp
  43b82d:	or     al,0xd
  43b82f:	lods   al,BYTE PTR ds:[esi]
  43b830:	rcr    ecx,0xf5
  43b833:	jp     0x43b8af
  43b835:	xchg   esi,eax
  43b836:	sub    eax,DWORD PTR [ecx+0x2e]
  43b839:	mov    ecx,0xa2ac1b1e
  43b83e:	test   BYTE PTR [esi+0x68],0x1b
  43b842:	data16 out dx,al
  43b844:	push   es
  43b845:	jne    0x43b855
  43b847:	jg     0x43b7cb
  43b849:	mov    ecx,0x26567912
  43b84e:	gs stos BYTE PTR es:[edi],al
  43b850:	fcom   DWORD PTR [edx+0x79]
  43b853:	jnp    0x43b896
  43b855:	mov    dl,cl
  43b857:	mov    esi,0xf8791538
  43b85c:	(bad)  
  43b85d:	mov    eax,ds:0xfbe20177
  43b862:	imul   esp,esi,0x430b35f
  43b868:	xchg   DWORD PTR [ecx+0x37],eax
  43b86b:	popa   
  43b86c:	ins    BYTE PTR es:[edi],dx
  43b86d:	out    dx,eax
  43b86e:	xor    al,0x64
  43b870:	sub    al,0x6
  43b872:	mov    fs,WORD PTR [ecx+0x2028c8f3]
  43b878:	jnp    0x43b8f3
  43b87a:	add    eax,0x8f9ba56c
  43b87f:	pop    edi
  43b880:	aaa    
  43b881:	sbb    ah,ch
  43b883:	leave  
  43b884:	sub    DWORD PTR [ecx-0x4],esp
  43b887:	jb     0x43b80a
  43b889:	out    dx,al
  43b88a:	adc    al,0xd7
  43b88c:	jecxz  0x43b814
  43b88e:	cmp    eax,0x7591aa66
  43b893:	xchg   edi,eax
  43b894:	dec    edx
  43b895:	mov    ah,0xfd
  43b897:	mov    ebp,0xfdc86b85
  43b89c:	jg     0x43b836
  43b89e:	out    0x5f,al
  43b8a0:	inc    esp
  43b8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b8a2:	xchg   ebp,eax
  43b8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b8a4:	xchg   ecx,eax
  43b8a5:	test   cl,dh
  43b8a7:	pop    sp
  43b8a9:	cld    
  43b8aa:	mov    ch,0x71
  43b8ac:	jmp    0xdde:0x16eb63dc
  43b8b3:	mov    bh,0x21
  43b8b5:	cs pop esp
  43b8b7:	ss leave 
  43b8b9:	push   es
  43b8ba:	pop    esi
  43b8bb:	adc    BYTE PTR [edx+0x3e],0xe
  43b8bf:	xor    eax,0x92641b1e
  43b8c4:	jno    0x43b86b
  43b8c6:	sbb    edi,DWORD PTR [ebx-0x426549d]
  43b8cc:	call   0xdffee078
  43b8d1:	inc    edi
  43b8d2:	mov    dl,0x78
  43b8d4:	(bad)  
  43b8d5:	clc    
  43b8d6:	int3   
  43b8d7:	inc    ebp
  43b8d8:	sub    DWORD PTR [edx+eiz*2+0x5254c2fc],edi
  43b8df:	inc    esp
  43b8e0:	les    edi,FWORD PTR fs:[ebx]
  43b8e3:	mov    eax,0x9c8a3864
  43b8e8:	push   0xc6c133ab
  43b8ed:	cdq    
  43b8ee:	sbb    al,0x64
  43b8f1:	imul   edx,ecx,0x7570bb8a
  43b8f7:	xor    bh,ch
  43b8f9:	inc    esp
  43b8fa:	xchg   ebp,eax
  43b8fb:	add    eax,0xcd73366a
  43b900:	rep ins DWORD PTR es:[edi],dx
  43b902:	ins    DWORD PTR es:[edi],dx
  43b903:	rcr    BYTE PTR [esi-0x55],cl
  43b906:	pop    ss
  43b907:	push   0x3a
  43b909:	push   esp
  43b90a:	mov    dl,0x48
  43b90c:	mov    bh,ch
  43b90e:	dec    esi
  43b90f:	(bad)  
  43b910:	icebp  
  43b911:	aad    0x7c
  43b913:	jl     0x43b8bc
  43b915:	cwde   
  43b916:	sub    ah,cl
  43b918:	jb     0x43b94b
  43b91a:	dec    ebp
  43b91b:	lea    ecx,[ebx+eax*4-0x27]
  43b91f:	fcmovbe st,st(4)
  43b921:	inc    eax
  43b922:	or     bh,bl
  43b924:	mov    eax,0xedce7cfc
  43b929:	pop    es
  43b92a:	test   eax,0xc25ed228
  43b92f:	mov    ds:0x31f10e5d,eax
  43b934:	add    bh,BYTE PTR [edi+0x271acdda]
  43b93a:	push   ds
  43b93b:	sbb    DWORD PTR [edx+0x6a2002d6],ebp
  43b941:	mov    al,BYTE PTR [ecx*2+0x6bea8a4b]
  43b948:	out    dx,al
  43b949:	pop    ds
  43b94a:	mov    ch,0x0
  43b94c:	bound  edi,QWORD PTR [ebx-0x29]
  43b94f:	fisubr DWORD PTR [ecx]
  43b951:	push   edi
  43b952:	cmp    eax,0x4d72276e
  43b957:	test   BYTE PTR [ecx+eiz*2+0x4a],bl
  43b95b:	mov    edi,0xb261d0a7
  43b960:	neg    bh
  43b962:	mov    al,0x8d
  43b964:	retf   
  43b965:	jbe    0x43b91f
  43b967:	cdq    
  43b968:	sar    BYTE PTR [edi],0x95
  43b96b:	aam    0xe7
  43b96d:	ror    BYTE PTR [ecx-0xe],0x5c
  43b971:	rcr    DWORD PTR [edx-0x13],1
  43b974:	pop    eax
  43b975:	and    esp,ecx
  43b977:	xor    DWORD PTR [ebx-0x3e6ca485],0x9cb48669
  43b981:	cwde   
  43b982:	jno    0x43b97f
  43b984:	add    eax,0xe871f0b8
  43b989:	pop    ss
  43b98a:	scas   eax,DWORD PTR es:[edi]
  43b98b:	je     0x43b9bd
  43b98d:	leave  
  43b98e:	call   FWORD PTR [edx-0x55]
  43b991:	xchg   esp,eax
  43b992:	push   ebp
  43b993:	ficomp DWORD PTR [eax-0x8885834]
  43b999:	int3   
  43b99a:	sbb    DWORD PTR [esp+ecx*2],0x2f
  43b99e:	or     al,0x12
  43b9a0:	stc    
  43b9a1:	popa   
  43b9a2:	mov    ecx,0x53f8d93a
  43b9a7:	cmp    BYTE PTR [ebx+ebx*8+0x7],dl
  43b9ab:	test   DWORD PTR [ecx],eax
  43b9ad:	jle    0x43b981
  43b9af:	int3   
  43b9b0:	lods   eax,DWORD PTR ds:[esi]
  43b9b1:	outs   dx,DWORD PTR ds:[esi]
  43b9b2:	nop
  43b9b3:	dec    ecx
  43b9b4:	jge    0x43b994
  43b9b6:	or     DWORD PTR [edi+0x768894b8],ebx
  43b9bc:	sti    
  43b9bd:	sahf   
  43b9be:	xchg   ebx,eax
  43b9bf:	ss (bad) 
  43b9c1:	pop    ds
  43b9c2:	iret   
  43b9c3:	pop    ds
  43b9c4:	ins    BYTE PTR es:[edi],dx
  43b9c5:	pop    ebx
  43b9c6:	imul   edx,eax,0x7
  43b9c9:	push   esp
  43b9ca:	psubq  mm7,mm4
  43b9cd:	pop    esi
  43b9ce:	jno    0x43b9c9
  43b9d0:	jno    0x43b9b9
  43b9d2:	jbe    0x43b9d0
  43b9d4:	mov    bl,0x76
  43b9d6:	jno    0x43b9f1
  43b9d8:	push   es
  43b9d9:	std    
  43b9da:	sbb    DWORD PTR [ebp+0xdf455c0],ecx
  43b9e0:	daa    
  43b9e1:	inc    esp
  43b9e2:	dec    eax
  43b9e3:	xchg   esp,eax
  43b9e4:	pop    edi
  43b9e5:	adc    eax,0xa125403
  43b9ea:	jmp    FWORD PTR [ebp+0x47]
  43b9ed:	ss sti 
  43b9ef:	fwait
  43b9f0:	xchg   ecx,eax
  43b9f1:	push   ebp
  43b9f2:	addr16 es ss in eax,dx
  43b9f6:	fiadd  DWORD PTR [esi+0x2a9ae7c5]
  43b9fc:	ret    
  43b9fd:	mov    esp,0x39234840
  43ba02:	pop    ss
  43ba03:	cmp    al,0x8f
  43ba05:	lods   eax,DWORD PTR ds:[esi]
  43ba06:	addr16 pop esi
  43ba08:	fadd   DWORD PTR [edx-0x78]
  43ba0b:	or     BYTE PTR [edx+0x22],0x93
  43ba0f:	mul    edi
  43ba11:	push   esp
  43ba12:	aas    
  43ba13:	ja     0x43ba53
  43ba15:	mov    eax,0xc9e78246
  43ba1a:	shl    BYTE PTR [ebx],1
  43ba1c:	mov    dh,0x19
  43ba1e:	push   0x6f90c61f
  43ba23:	sub    bh,BYTE PTR [ebp-0x2152889a]
  43ba29:	mov    ah,0x5
  43ba2b:	add    DWORD PTR [edi],ebp
  43ba2d:	mov    DWORD PTR [ebx],ebx
  43ba2f:	(bad)  
  43ba30:	out    0x32,al
  43ba32:	and    al,BYTE PTR [esi-0x24]
  43ba35:	adc    BYTE PTR [esi+0x44],ah
  43ba38:	push   edx
  43ba39:	pop    edx
  43ba3a:	mov    eax,0x87e856a1
  43ba3f:	inc    ebx
  43ba40:	pop    eax
  43ba41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba42:	push   esp
  43ba43:	test   al,0xa9
  43ba45:	pop    esi
  43ba46:	pop    esp
  43ba47:	leave  
  43ba48:	not    DWORD PTR [eax]
  43ba4a:	mov    bh,0xbe
  43ba4c:	push   edi
  43ba4d:	or     DWORD PTR [edx+0x4db14d30],ebp
  43ba53:	mov    ah,0x9b
  43ba55:	fist   DWORD PTR [ebx-0x48]
  43ba58:	shl    bh,cl
  43ba5a:	shr    BYTE PTR [edi+0x39],1
  43ba5d:	adc    eax,0xeeaa9670
  43ba62:	mov    eax,0x2662c028
  43ba67:	push   0xb39bb6fa
  43ba6c:	cli    
  43ba6d:	enter  0xeb4,0x7f
  43ba71:	cmp    al,BYTE PTR [esi]
  43ba73:	inc    edx
  43ba74:	out    dx,eax
  43ba75:	cld    
  43ba76:	mov    ch,0xdd
  43ba78:	xor    BYTE PTR [eax+0x33],bh
  43ba7b:	mov    ecx,0x7d09fe1
  43ba80:	aaa    
  43ba81:	push   0xd
  43ba83:	stos   BYTE PTR es:[edi],al
  43ba84:	mov    ebx,0xef89e0f1
  43ba89:	mov    edx,0xa1b786ad
  43ba8e:	pop    eax
  43ba8f:	add    al,0xde
  43ba91:	cs pop edx
  43ba93:	mov    ds:0xccd5e391,al
  43ba98:	fidiv  WORD PTR [edx-0x5d]
  43ba9b:	test   al,0x54
  43ba9d:	inc    ecx
  43ba9e:	add    eax,0x1bf1091b
  43baa3:	dec    ebx
  43baa4:	mov    dl,0x0
  43baa6:	xchg   DWORD PTR [edi+ebx*2],edi
  43baa9:	arpl   WORD PTR [eax-0x3e188ae4],bp
  43baaf:	outs   dx,DWORD PTR ds:[esi]
  43bab0:	shr    ebx,cl
  43bab2:	aad    0x7b
  43bab4:	jae    0x43babc
  43bab6:	inc    edx
  43bab7:	in     eax,0xc4
  43bab9:	push   edi
  43baba:	int3   
  43babb:	mov    esp,edi
  43babd:	and    eax,eax
  43babf:	vcvtsi2ss xmm4,xmm5,ebp
  43bac3:	xchg   ebp,eax
  43bac4:	imul   ebp,DWORD PTR [ecx+eax*4],0xa6be679d
  43bacb:	popf   
  43bacc:	mov    edi,0xec216216
  43bad1:	push   eax
  43bad2:	jno    0x43ba60
  43bad4:	push   es
  43bad5:	dec    ecx
  43bad6:	push   ss
  43bad7:	sbb    al,0x35
  43bad9:	jno    0x43ba9e
  43badb:	call   0x2124:0xb2243f4a
  43bae2:	dec    esp
  43bae3:	adc    ch,BYTE PTR [edi]
  43bae5:	iret   
  43bae6:	sbb    edi,edx
  43bae8:	addr16 mov ecx,0xa3cfeeb9
  43baee:	jmp    0x43baac
  43baf0:	xchg   ebx,edx
  43baf2:	and    DWORD PTR [esi],edi
  43baf4:	mov    ecx,0x9d8f5d1
  43baf9:	enter  0x1f11,0x0
  43bafd:	jne    0x43bb75
  43baff:	stos   DWORD PTR es:[edi],eax
  43bb00:	dec    ebx
  43bb01:	(bad)  
  43bb02:	and    al,0x76
  43bb04:	add    al,0x9e
  43bb06:	or     BYTE PTR [ebx],ch
  43bb08:	xchg   esi,eax
  43bb09:	shr    dl,cl
  43bb0b:	jle    0x43ba9f
  43bb0d:	xchg   ecx,eax
  43bb0e:	int3   
  43bb0f:	adc    edi,DWORD PTR [esi]
  43bb11:	mov    eax,DWORD PTR ds:0x992633f0
  43bb17:	fld    QWORD PTR [edx]
  43bb19:	imul   eax,esp,0xffffffc5
  43bb1c:	push   0xfbc02ee8
  43bb21:	mov    ebx,0x27eac1b9
  43bb26:	mov    edx,0xceae8e43
  43bb2b:	dec    esp
  43bb2c:	icebp  
  43bb2d:	repz mov edi,0x76472b0d
  43bb33:	mov    edx,0xf550ba3f
  43bb38:	sbb    edx,edi
  43bb3a:	mov    bh,0x70
  43bb3c:	jp     0x43bb68
  43bb3e:	inc    DWORD PTR [edi]
  43bb40:	inc    eax
  43bb41:	fwait
  43bb42:	test   eax,0x9958a1a5
  43bb47:	fild   DWORD PTR [edi-0x41]
  43bb4a:	loop   0x43bb69
  43bb4c:	leave  
  43bb4d:	add    DWORD PTR [esi+0x472e5458],0x53
  43bb54:	jg     0x43bba9
  43bb56:	mov    bl,0xb7
  43bb58:	repz leave 
  43bb5a:	clc    
  43bb5b:	lea    esi,ds:0xef1bb5ae
  43bb61:	push   edx
  43bb62:	cld    
  43bb63:	adc    ebx,esp
  43bb65:	xchg   esp,eax
  43bb66:	xor    eax,0xafb4d66c
  43bb6b:	pop    eax
  43bb6c:	mov    ebx,0x82b5b236
  43bb71:	mov    ebp,0x489fcfdd
  43bb76:	aaa    
  43bb77:	clc    
  43bb78:	aas    
  43bb79:	sbb    al,0xd5
  43bb7b:	jbe    0x43bb58
  43bb7d:	idiv   DWORD PTR [edx]
  43bb7f:	mov    esp,0x58fddcce
  43bb84:	cld    
  43bb85:	push   es
  43bb86:	icebp  
  43bb87:	cwde   
  43bb88:	sub    BYTE PTR [eax],0x2f
  43bb8b:	in     eax,dx
  43bb8c:	or     BYTE PTR [ecx+0x4678ebee],bh
  43bb92:	das    
  43bb93:	aaa    
  43bb94:	pusha  
  43bb95:	xchg   ecx,eax
  43bb96:	cwde   
  43bb97:	loop   0x43bb58
  43bb99:	mov    ch,0x33
  43bb9b:	mov    ebx,0x8d6e7ce0
  43bba0:	es push esp
  43bba2:	dec    esp
  43bba3:	xchg   esp,eax
  43bba4:	cli    
  43bba5:	pushf  
  43bba6:	retf   
  43bba7:	push   0x2a
  43bba9:	xor    al,0x28
  43bbab:	mov    eax,ds:0x483139ed
  43bbb0:	sbb    eax,0x35479c22
  43bbb5:	or     al,BYTE PTR [ecx-0x23336a4c]
  43bbbb:	lods   eax,DWORD PTR ds:[esi]
  43bbbc:	gs addr16 aam 0xa6
  43bbc0:	enter  0x5a9,0x3a
  43bbc4:	lods   eax,DWORD PTR ds:[esi]
  43bbc5:	jg     0x43bbdb
  43bbc7:	xor    al,0x9e
  43bbc9:	mov    bh,0x67
  43bbcb:	ss into 
  43bbcd:	jmp    0x43bb89
  43bbcf:	data16 lods al,BYTE PTR ds:[esi]
  43bbd1:	or     DWORD PTR [edi+0x2d],0xffffffcc
  43bbd5:	push   0xd4aa628e
  43bbda:	cmp    al,0x2a
  43bbdc:	cmp    ebp,DWORD PTR [ecx]
  43bbde:	hlt    
  43bbdf:	inc    edx
  43bbe0:	es stos DWORD PTR es:[edi],eax
  43bbe2:	pusha  
  43bbe3:	fwait
  43bbe4:	dec    ebx
  43bbe5:	pop    ss
  43bbe6:	(bad)  
  43bbe7:	cmp    eax,0x3bfbac86
  43bbec:	dec    ecx
  43bbed:	add    DWORD PTR [eax+ebx*2+0x21],edi
  43bbf1:	sbb    BYTE PTR [ecx+0x28],bl
  43bbf4:	jp     0x43bc75
  43bbf6:	inc    ebp
  43bbf7:	rcr    BYTE PTR [esi+0x73f7d470],0x48
  43bbfe:	gs jmp 0xede850c8
  43bc04:	iret   
  43bc05:	and    DWORD PTR [edi+0x20],ebp
  43bc08:	jge    0x43bc07
  43bc0a:	fsub   DWORD PTR [ecx-0xbebc93]
  43bc10:	add    DWORD PTR [edx+edi*1-0x4c],eax
  43bc14:	(bad)  
  43bc15:	and    cl,BYTE PTR [edx-0x13917162]
  43bc1b:	imul   esi,DWORD PTR ds:[ebx-0x63],0x5c
  43bc20:	xchg   esi,eax
  43bc21:	sub    BYTE PTR [edi],cl
  43bc23:	cmp    cl,BYTE PTR [eax+0x63494762]
  43bc29:	push   DWORD PTR [ecx+0x5e297b49]
  43bc2f:	dec    esp
  43bc30:	cs mov ah,0x22
  43bc33:	adc    bl,BYTE PTR [eax-0x630cd597]
  43bc39:	sub    dl,0x8
  43bc3c:	test   ebx,ebx
  43bc3e:	jns    0x43bc1c
  43bc40:	adc    DWORD PTR [ebp-0x4b],ecx
  43bc43:	mov    bh,0xa9
  43bc45:	pusha  
  43bc46:	xchg   edi,eax
  43bc47:	inc    esp
  43bc48:	cmp    ecx,esp
  43bc4a:	pop    ecx
  43bc4b:	or     ebp,DWORD PTR [esp+edx*2]
  43bc4e:	hlt    
  43bc4f:	xchg   edi,eax
  43bc50:	pop    eax
  43bc51:	ins    BYTE PTR es:[edi],dx
  43bc52:	or     al,0xea
  43bc54:	xchg   esp,eax
  43bc55:	mov    ds:0x4d3008d9,eax
  43bc5a:	sbb    eax,0x2ba05dbf
  43bc5f:	adc    DWORD PTR [ebp+0x44],ebp
  43bc62:	fsubr  st(0),st
  43bc64:	jns    0x43bc1b
  43bc66:	xchg   esp,eax
  43bc67:	test   al,0x5b
  43bc69:	sub    BYTE PTR [edx],dl
  43bc6b:	xchg   ebx,eax
  43bc6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bc6d:	cmp    eax,esp
  43bc6f:	ss push ebx
  43bc71:	outs   dx,DWORD PTR ds:[esi]
  43bc72:	mov    eax,ds:0x7f286e0f
  43bc77:	jae    0x43bc59
  43bc79:	or     eax,0xb88eeff7
  43bc7e:	repz pop ebp
  43bc80:	add    eax,0x29c8da10
  43bc85:	sub    ebp,edi
  43bc87:	cwde   
  43bc88:	daa    
  43bc89:	pop    eax
  43bc8a:	mov    dl,0x19
  43bc8c:	xor    eax,ecx
  43bc8e:	and    DWORD PTR [ecx-0x2facaca6],eax
  43bc94:	lods   al,BYTE PTR ds:[esi]
  43bc95:	jge    0x43bcfb
  43bc97:	in     al,0x9c
  43bc99:	(bad)  
  43bc9a:	and    DWORD PTR [eax-0x798eba31],esp
  43bca0:	outs   dx,BYTE PTR ds:[esi]
  43bca1:	in     al,0xeb
  43bca3:	xchg   ecx,eax
  43bca4:	fwait
  43bca5:	mov    dl,0xbc
  43bca7:	adc    cl,BYTE PTR [ebx]
  43bca9:	pop    edx
  43bcaa:	jno    0x43bc4d
  43bcac:	xlat   BYTE PTR ds:[ebx]
  43bcad:	sub    al,cl
  43bcaf:	mov    ah,0x29
  43bcb1:	lea    ebp,[ecx]
  43bcb3:	bound  esp,QWORD PTR [ecx+0x54]
  43bcb6:	inc    eax
  43bcb7:	(bad)  
  43bcb9:	imul   ecx,DWORD PTR [ebx],0xffffffd0
  43bcbc:	mov    dl,bh
  43bcbe:	push   ecx
  43bcbf:	pop    ebp
  43bcc0:	push   ss
  43bcc1:	popf   
  43bcc2:	fwait
  43bcc3:	out    0x26,eax
  43bcc5:	es icebp 
  43bcc7:	or     ebx,0x2c
  43bcca:	jl     0x43bcc3
  43bccc:	outs   dx,DWORD PTR ds:[esi]
  43bccd:	sbb    ah,BYTE PTR [ecx]
  43bccf:	inc    edi
  43bcd0:	sahf   
  43bcd1:	dec    edi
  43bcd2:	repnz sub BYTE PTR [esi+0x29],bl
  43bcd6:	cmp    al,0x62
  43bcd8:	dec    esi
  43bcd9:	ror    BYTE PTR cs:[edi+0x45],0xd8
  43bcde:	repnz mov ds:0xd3527d0a,al
  43bce4:	cmp    esi,edx
  43bce6:	mov    dl,BYTE PTR ds:0x136a255e
  43bcec:	imul   edi,DWORD PTR [edx+eax*1-0x4adaef7],0xffffffb7
  43bcf4:	test   eax,0xfc631df
  43bcf9:	mov    ah,0xb7
  43bcfb:	cld    
  43bcfc:	leave  
  43bcfd:	add    eax,0xeba3f763
  43bd02:	xchg   BYTE PTR [edx+0x75],ah
  43bd05:	xchg   dh,al
  43bd07:	cld    
  43bd08:	mov    ds:0x31225129,eax
  43bd0d:	je     0x43bcbd
  43bd0f:	in     eax,0x67
  43bd11:	cmp    al,0x91
  43bd13:	adc    dh,BYTE PTR [eax-0x43ce155]
  43bd19:	sbb    esp,edi
  43bd1b:	sub    eax,0x8f47510c
  43bd20:	dec    edx
  43bd21:	fcomp  QWORD PTR [esp+eiz*8-0x74a0e48e]
  43bd28:	or     eax,DWORD PTR [ecx+0x10]
  43bd2b:	inc    edx
  43bd2c:	iret   
  43bd2d:	mov    ecx,0xfe1fb27e
  43bd32:	pop    eax
  43bd33:	push   ebx
  43bd34:	test   al,0xb3
  43bd36:	jg     0x43bd34
  43bd38:	mov    al,0x13
  43bd3a:	inc    eax
  43bd3b:	mov    ah,0x64
  43bd3d:	addr16 mov dh,0x5f
  43bd40:	dec    esi
  43bd41:	jo     0x43bcdc
  43bd43:	int    0x7a
  43bd45:	xchg   esi,eax
  43bd46:	bnd jbe 0x43bd1c
  43bd49:	mov    esp,0x404abaaf
  43bd4e:	mov    dl,0x59
  43bd50:	test   BYTE PTR [esp+ebx*1+0x79a3a531],dh
  43bd57:	inc    ecx
  43bd58:	push   ecx
  43bd59:	rcl    edi,cl
  43bd5b:	or     DWORD PTR [ecx+0x1e32b2e],ebp
  43bd61:	int    0x76
  43bd63:	ja     0x43bcfd
  43bd65:	mov    ds:0x14a7199d,eax
  43bd6a:	cs add dl,cl
  43bd6d:	adc    esp,DWORD PTR [edx-0x3d]
  43bd70:	stos   DWORD PTR es:[edi],eax
  43bd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bd72:	call   0x262b2b6b
  43bd77:	xchg   edi,edi
  43bd79:	sahf   
  43bd7a:	sbb    BYTE PTR [esi],ah
  43bd7c:	and    al,al
  43bd7e:	xlat   BYTE PTR ds:[ebx]
  43bd7f:	cmp    edx,edi
  43bd81:	jecxz  0x43bdac
  43bd83:	mov    eax,0x8fd3a108
  43bd88:	xchg   ebx,eax
  43bd89:	jae    0x43bd80
  43bd8b:	sub    edx,DWORD PTR [eax-0x6594b832]
  43bd91:	pop    edi
  43bd92:	(bad)  
  43bd93:	push   0x48
  43bd95:	dec    esi
  43bd96:	ret    
  43bd97:	mov    bh,0x85
  43bd99:	push   ebx
  43bd9a:	jl     0x43be16
  43bd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bd9d:	add    DWORD PTR [ecx],ebx
  43bd9f:	mov    ecx,0x2ab3c5d
  43bda4:	cmp    BYTE PTR [ebp+0x4a202dbf],0x49
  43bdab:	add    al,0xf7
  43bdad:	mov    eax,ecx
  43bdaf:	mov    ebx,0xb7e6ec02
  43bdb4:	mov    eax,0xf09eaaba
  43bdb9:	jne    0x43bd82
  43bdbb:	or     eax,0x4aa04b37
  43bdc0:	push   ds
  43bdc1:	(bad)  
  43bdc2:	std    
  43bdc3:	xor    al,0x80
  43bdc5:	and    DWORD PTR [edi],ecx
  43bdc7:	mov    DWORD PTR [ecx],esp
  43bdc9:	jno    0x43be3f
  43bdcb:	sub    DWORD PTR [ebp-0x71cac5ba],esi
  43bdd1:	out    0xd2,eax
  43bdd3:	jne    0x43be14
  43bdd5:	shl    esi,1
  43bdd7:	lahf   
  43bdd8:	cmp    ah,BYTE PTR [edx]
  43bdda:	xlat   BYTE PTR ds:[ebx]
  43bddb:	hlt    
  43bddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bddd:	sbb    dl,BYTE PTR [ecx]
  43bddf:	call   0x9f45c7d8
  43bde4:	and    DWORD PTR [ebp-0x34],0xdfc351c9
  43bdeb:	ret    
  43bdec:	lods   eax,DWORD PTR ds:[esi]
  43bded:	sub    eax,0xb736debf
  43bdf2:	mov    BYTE PTR [ebx-0x4b719b8b],cl
  43bdf8:	add    al,0x40
  43bdfa:	sbb    cl,BYTE PTR [edx+0x1a]
  43bdfd:	bound  esp,QWORD PTR [ebx-0x24]
  43be00:	rcr    BYTE PTR [edx],0x3a
  43be03:	sbb    DWORD PTR [esi-0x193af525],edi
  43be09:	push   esi
  43be0a:	mov    al,ds:0x8e6775a2
  43be0f:	lahf   
  43be10:	clc    
  43be11:	mov    eax,0x96abd6f3
  43be16:	mov    ch,0x89
  43be18:	dec    ebx
  43be19:	xlat   BYTE PTR ds:[ebx]
  43be1a:	mov    eax,ds:0xf5d36576
  43be1f:	dec    ebx
  43be20:	and    ah,bh
  43be22:	jbe    0x43be84
  43be24:	mov    ch,0x85
  43be26:	hlt    
  43be27:	gs das 
  43be29:	jge    0x43be21
  43be2b:	xchg   ecx,eax
  43be2c:	add    BYTE PTR [eax-0x6cd5cdbd],dl
  43be32:	xchg   edx,esp
  43be34:	mov    esi,0xa09ff534
  43be39:	loop   0x43be31
  43be3b:	mov    eax,eax
  43be3d:	inc    ecx
  43be3e:	fsub   DWORD PTR [edx-0x255dc706]
  43be44:	mov    cs,WORD PTR [eax+ecx*4]
  43be47:	mov    ah,0x8b
  43be49:	stos   BYTE PTR es:[edi],al
  43be4a:	fadd   st(4),st
  43be4c:	lea    esp,[ebx-0x65]
  43be4f:	push   es
  43be50:	out    dx,eax
  43be51:	mov    edi,0xb560b3b9
  43be56:	cmp    eax,0x5925896b
  43be5b:	cmp    al,0x3a
  43be5d:	sbb    BYTE PTR [ebx-0x51],0x3d
  43be61:	gs mov ah,0x73
  43be64:	outs   dx,DWORD PTR ds:[esi]
  43be65:	sub    eax,0xf8c32807
  43be6a:	cmp    BYTE PTR [esi+0x51f38bd5],cl
  43be70:	lds    ecx,FWORD PTR [esi+0x42]
  43be73:	or     BYTE PTR [edx],bl
  43be75:	imul   ebp,DWORD PTR [esi-0x2f],0x2a
  43be79:	sub    esi,DWORD PTR [eax+0x64]
  43be7c:	xchg   edi,eax
  43be7d:	push   cs
  43be7e:	(bad)  
  43be7f:	shufps xmm3,XMMWORD PTR [edi-0x29],0x69
  43be84:	in     al,0x22
  43be86:	popf   
  43be87:	dec    ebp
  43be88:	adc    al,0xaf
  43be8a:	pop    ds
  43be8b:	mov    eax,ds:0xe3bf516a
  43be90:	mov    ds:0x440b23f4,al
  43be95:	call   0x2bbb:0xa59c49e1
  43be9c:	ficomp DWORD PTR [edx-0x9]
  43be9f:	stc    
  43bea0:	pop    edx
  43bea1:	popa   
  43bea2:	test   BYTE PTR [eax+0x57],dl
  43bea5:	sub    eax,0x6728ed3d
  43beaa:	push   edx
  43beab:	into   
  43beac:	xor    eax,0x10757ae6
  43beb1:	iret   
  43beb2:	jae    0x43be6a
  43beb4:	xchg   DWORD PTR [edx+0x7],esp
  43beb7:	push   esi
  43beb8:	lock stos BYTE PTR es:[edi],al
  43beba:	or     dh,BYTE PTR [ebp+0x2d]
  43bebd:	sbb    BYTE PTR [ebx+ecx*2-0x71c6c9b1],ah
  43bec4:	pop    ss
  43bec5:	es sub al,0x84
  43bec8:	(bad)  
  43bec9:	outs   dx,DWORD PTR ds:[esi]
  43beca:	imul   DWORD PTR [eax+ebx*8]
  43becd:	push   esp
  43bece:	or     BYTE PTR [ecx-0x2],bh
  43bed1:	(bad)  
  43bed3:	xchg   DWORD PTR [ebx+0x34ed14d2],edi
  43bed9:	mov    BYTE PTR [ecx-0x3e8d20b8],dh
  43bedf:	retf   0xb2e1
  43bee2:	fwait
  43bee3:	mov    DWORD PTR [edi+0x7466671],ecx
  43bee9:	stc    
  43beea:	add    al,0x18
  43beec:	in     al,0x11
  43beee:	push   0x5ea19c34
  43bef3:	or     dl,BYTE PTR [edi]
  43bef5:	or     BYTE PTR [edx],ah
  43bef7:	pop    esi
  43bef8:	mov    edx,esi
  43befa:	push   cs
  43befb:	test   DWORD PTR [eax+0x376f8aef],edx
  43bf01:	and    DWORD PTR [edi+0x11],edi
  43bf04:	mov    al,0x66
  43bf06:	(bad)  
  43bf07:	lahf   
  43bf08:	pop    ebx
  43bf09:	push   edi
  43bf0a:	jns    0x43bec4
  43bf0c:	std    
  43bf0d:	and    cl,cl
  43bf0f:	cmp    eax,0xd954d7bc
  43bf14:	sub    al,0x9a
  43bf16:	out    dx,al
  43bf17:	mov    al,0xba
  43bf19:	jno    0x43bf1e
  43bf1b:	pop    es
  43bf1c:	jmp    0x43bf5a
  43bf1e:	out    0x14,eax
  43bf20:	rcr    edx,cl
  43bf22:	xor    ch,dh
  43bf24:	adc    BYTE PTR [eax-0x151e63c6],0xdf
  43bf2b:	push   ebp
  43bf2c:	mov    ebx,0xcf835df0
  43bf31:	pop    edx
  43bf32:	mov    al,0x83
  43bf34:	stos   DWORD PTR es:[edi],eax
  43bf35:	(bad)  
  43bf36:	hlt    
  43bf37:	or     ecx,DWORD PTR [eax]
  43bf39:	adc    ebp,ebx
  43bf3b:	adc    BYTE PTR [esi-0xb5a299],cl
  43bf41:	adc    al,0xce
  43bf43:	dec    esi
  43bf44:	call   0x6707:0xd62158b9
  43bf4b:	jg     0x43bf73
  43bf4d:	std    
  43bf4e:	enter  0x136e,0x54
  43bf52:	int    0xca
  43bf54:	lea    esi,[esi-0x538db3c8]
  43bf5a:	and    dl,BYTE PTR [ebp-0xb]
  43bf5d:	and    dl,BYTE PTR [edi+0x4e]
  43bf60:	cmp    eax,0xf2954369
  43bf65:	jno    0x43bf3f
  43bf67:	adc    al,BYTE PTR [ecx]
  43bf69:	cmp    esi,DWORD PTR [edi+0xfc06d19]
  43bf6f:	in     eax,0xb5
  43bf71:	shl    BYTE PTR [eax+0x5998c0a5],0xd9
  43bf78:	mov    ds:0xfb2a5fcb,eax
  43bf7d:	test   eax,0x8cd84e0f
  43bf82:	jbe    0x43bfc2
  43bf84:	jmp    0x9f52:0xd833e58
  43bf8b:	and    al,0x22
  43bf8d:	inc    edx
  43bf8e:	lds    ebx,FWORD PTR [ebp+0x2565d4ce]
  43bf94:	dec    ecx
  43bf95:	push   0xffffff9a
  43bf97:	push   edi
  43bf98:	cmp    BYTE PTR [ecx],cl
  43bf9a:	loope  0x43c01a
  43bf9c:	ds and al,0x5f
  43bf9f:	sbb    DWORD PTR [ecx+esi*1],ebp
  43bfa2:	mov    al,ds:0x1288823c
  43bfa7:	jg     0x43bf5f
  43bfa9:	sub    DWORD PTR [eax-0x78],ecx
  43bfac:	mov    ds:0x965f8c23,al
  43bfb1:	stos   BYTE PTR es:[edi],al
  43bfb2:	xchg   ebx,eax
  43bfb3:	cmp    DWORD PTR [edx-0x7ff1175f],edx
  43bfb9:	push   eax
  43bfba:	adc    edi,DWORD PTR [eax+0x77]
  43bfbd:	out    dx,eax
  43bfbe:	std    
  43bfbf:	sbb    BYTE PTR [edx-0x68751703],0x73
  43bfc6:	out    0xb7,al
  43bfc8:	lods   al,BYTE PTR ds:[esi]
  43bfc9:	leave  
  43bfca:	sbb    al,0xe1
  43bfcc:	fisttp DWORD PTR [edx+0x7]
  43bfcf:	ror    BYTE PTR [esi],1
  43bfd1:	fidiv  DWORD PTR [ebp+0x26b26f52]
  43bfd7:	xchg   DWORD PTR [eax-0x6771b30a],ebx
  43bfdd:	bound  ebx,QWORD PTR [ebx]
  43bfdf:	imul   edx
  43bfe1:	in     al,dx
  43bfe2:	push   edi
  43bfe3:	and    ch,BYTE PTR [edi+0x4f]
  43bfe6:	sbb    BYTE PTR gs:[esp+ebx*1+0x20],bl
  43bfeb:	sub    BYTE PTR [edx],bl
  43bfed:	pusha  
  43bfee:	in     eax,dx
  43bfef:	push   ecx
  43bff0:	out    dx,al
  43bff1:	imul   edi,DWORD PTR [edx],0xffffffa2
  43bff4:	test   al,0x76
  43bff6:	xor    al,0xe2
  43bff8:	fs arpl ax,cx
  43bffb:	mov    al,0x2d
  43bffd:	inc    eax
  43bffe:	and    dh,0x78
  43c001:	push   ss
  43c002:	inc    eax
  43c003:	shl    DWORD PTR [edi],cl
  43c005:	(bad)  
  43c006:	ror    BYTE PTR [ebx+ecx*1],0x8c
  43c00a:	shr    DWORD PTR [ebx-0xd],0xf4
  43c00e:	fcmovnb st,st(7)
  43c010:	inc    ecx
  43c011:	cmp    BYTE PTR [ebx+0x50],bl
  43c014:	cmc    
  43c015:	std    
  43c016:	mov    edx,0x8988c317
  43c01b:	out    0x92,al
  43c01d:	mov    ch,BYTE PTR [edi+0xa22344f]
  43c023:	loop   0x43c037
  43c025:	repz and bh,BYTE PTR [eax-0x4]
  43c029:	les    esp,FWORD PTR [edi+0x36]
  43c02c:	mov    ch,0x16
  43c02e:	pop    ebp
  43c02f:	cmp    ah,bl
  43c031:	jne    0x43c00a
  43c033:	cmp    ch,BYTE PTR [ecx+esi*1]
  43c036:	retf   0xd41e
  43c039:	cmp    ah,BYTE PTR [ecx-0x1205af8a]
  43c03f:	test   DWORD PTR [ecx-0x42b958a8],0xed7fe47e
  43c049:	lods   al,BYTE PTR ds:[esi]
  43c04a:	adc    bl,BYTE PTR [edi]
  43c04c:	jb     0x43c0ba
  43c04e:	out    0x5c,eax
  43c050:	(bad)  
  43c051:	cld    
  43c052:	aas    
  43c053:	out    0xd6,eax
  43c055:	jl     0x43c0cc
  43c057:	jb     0x43c075
  43c059:	repnz aad 0x10
  43c05c:	idiv   BYTE PTR cs:[esi]
  43c05f:	push   0x6ef66692
  43c064:	or     BYTE PTR [edx],0xa2
  43c067:	sub    al,0x2
  43c069:	add    DWORD PTR [ebp-0x42731942],ecx
  43c06f:	cmp    DWORD PTR [ebx+0x48],edi
  43c072:	pushf  
  43c073:	lods   eax,DWORD PTR ds:[esi]
  43c074:	enter  0x80cb,0x4b
  43c078:	lds    esp,FWORD PTR [edx+0x1e]
  43c07b:	outs   dx,BYTE PTR ds:[esi]
  43c07c:	stos   DWORD PTR es:[edi],eax
  43c07d:	xchg   BYTE PTR es:[ecx],dl
  43c080:	popa   
  43c081:	cwde   
  43c082:	aas    
  43c083:	jnp    0x43c0df
  43c085:	js     0x43c076
  43c087:	mov    edx,0xfb4a36b9
  43c08c:	mov    al,ds:0x571479f7
  43c091:	jmp    0x65b3:0xe1dc424
  43c098:	stc    
  43c099:	dec    edi
  43c09a:	or     al,0x36
  43c09c:	adc    eax,0xa7eb1a13
  43c0a1:	push   edi
  43c0a2:	popf   
  43c0a3:	fist   DWORD PTR [ecx+esi*4-0x33cbc496]
  43c0aa:	dec    edx
  43c0ab:	repz jae 0x43c0c6
  43c0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c0af:	mov    edi,0x9ac87393
  43c0b4:	into   
  43c0b5:	cmp    al,0x8
  43c0b7:	aam    0x4f
  43c0b9:	cmp    esi,eax
  43c0bb:	xchg   esi,eax
  43c0bc:	xchg   ecx,eax
  43c0bd:	icebp  
  43c0be:	dec    esp
  43c0bf:	enter  0xd839,0x67
  43c0c3:	ins    DWORD PTR es:[edi],dx
  43c0c4:	dec    ebx
  43c0c5:	sub    DWORD PTR [eiz*1+0x75ab2628],ebp
  43c0cc:	mov    bl,0x30
  43c0ce:	jge    0x43c0db
  43c0d0:	stc    
  43c0d1:	mov    ebx,0x1866559b
  43c0d6:	cmp    DWORD PTR [edx],ecx
  43c0d8:	inc    eax
  43c0d9:	daa    
  43c0da:	imul   ebp,DWORD PTR [eax-0x65],0xffffffbd
  43c0de:	pop    ebx
  43c0df:	clc    
  43c0e0:	popf   
  43c0e1:	mov    ch,0x5a
  43c0e3:	rcr    dl,cl
  43c0e5:	cmp    al,0x4c
  43c0e7:	sub    BYTE PTR [ecx-0x6b],cl
  43c0ea:	aam    0xd3
  43c0ec:	mov    ch,0x38
  43c0ee:	add    al,0xbd
  43c0f0:	cmp    eax,0x52ab5530
  43c0f5:	xlat   BYTE PTR ds:[ebx]
  43c0f6:	xchg   ebx,eax
  43c0f7:	outs   dx,BYTE PTR fs:[esi]
  43c0f9:	call   FWORD PTR [edi+0x2c]
  43c0fc:	sbb    cl,BYTE PTR [esi-0x49feae]
  43c102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c103:	ins    BYTE PTR es:[edi],dx
  43c104:	cdq    
  43c105:	das    
  43c106:	adc    eax,0x1fb4641b
  43c10b:	pop    edx
  43c10c:	xor    DWORD PTR [ebx-0x4f],edi
  43c10f:	push   ecx
  43c110:	adc    dh,BYTE PTR [ecx+0x1eac86bb]
  43c116:	add    eax,0x20387790
  43c11b:	mov    ds:0x68a7200e,al
  43c120:	sub    eax,ecx
  43c122:	cmp    eax,0x56f0cd55
  43c127:	jb     0x43c0b9
  43c129:	imul   edi,DWORD PTR [ebx],0x5f84cc32
  43c12f:	mov    ah,0x64
  43c131:	jno    0x43c0d2
  43c133:	out    dx,eax
  43c134:	cwde   
  43c135:	fiadd  WORD PTR [ebx]
  43c137:	adc    ebp,DWORD PTR [ecx-0x105d662]
  43c13d:	out    0x62,eax
  43c13f:	mov    esi,0x1a3a8c7e
  43c144:	iret   
  43c145:	pop    es
  43c146:	sbb    eax,DWORD PTR [edx-0xc]
  43c149:	jb     0x43c18b
  43c14b:	gs dec esi
  43c14d:	lock ret 0xc7f4
  43c151:	xchg   DWORD PTR [esi+0x28],eax
  43c154:	idiv   DWORD PTR [edx]
  43c156:	add    edi,DWORD PTR [ebp-0x2c8d5f32]
  43c15c:	(bad)  
  43c15d:	pop    edx
  43c15e:	xor    al,0xaa
  43c160:	xchg   ebx,eax
  43c161:	sbb    ebp,DWORD PTR [ecx+0x7b017d75]
  43c167:	sahf   
  43c168:	lods   al,BYTE PTR ds:[esi]
  43c169:	rol    BYTE PTR [esi+eax*4],0xaa
  43c16d:	pop    ebx
  43c16e:	fmul   QWORD PTR [eax-0x35]
  43c171:	es adc eax,0x46d1478a
  43c177:	jp     0x43c19b
  43c179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c17a:	ficomp DWORD PTR [edi+0x1bd53d7e]
  43c180:	add    BYTE PTR [eax-0x78cbb3c0],ch
  43c186:	or     eax,0xfda768c3
  43c18b:	sbb    ecx,DWORD PTR ds:0xe4ba774d
  43c191:	jmp    DWORD PTR [edx]
  43c193:	fild   QWORD PTR [ebp-0x80]
  43c196:	ins    DWORD PTR es:[edi],dx
  43c197:	mov    al,0x5c
  43c199:	(bad)  
  43c19a:	jmp    0x43c1cc
  43c19c:	fwait
  43c19d:	cmp    DWORD PTR [ecx-0x9c3896a],0xffffffe1
  43c1a4:	loope  0x43c14f
  43c1a6:	cli    
  43c1a7:	push   edx
  43c1a8:	jbe    0x43c1a1
  43c1aa:	push   edi
  43c1ab:	bound  ebx,QWORD PTR ds:0x5d2876be
  43c1b1:	adc    DWORD PTR [edi+0x5cf3d4d7],edx
  43c1b7:	mov    DWORD PTR ds:0xe0103392,ebp
  43c1bd:	pushf  
  43c1be:	jg     0x43c203
  43c1c0:	lods   al,BYTE PTR ds:[esi]
  43c1c1:	xor    eax,0x4bb459dd
  43c1c6:	pop    edi
  43c1c7:	and    al,0xdf
  43c1c9:	enter  0xc2b4,0x39
  43c1cd:	sahf   
  43c1ce:	cdq    
  43c1cf:	xchg   esp,eax
  43c1d0:	mov    al,ds:0xe368232d
  43c1d5:	pop    ecx
  43c1d6:	fistp  DWORD PTR [ebx]
  43c1d8:	pop    esi
  43c1d9:	enter  0x67fa,0x4c
  43c1dd:	fsubp  st(3),st
  43c1df:	add    bh,BYTE PTR [ebx+0x6]
  43c1e2:	jmp    0xb418:0xe4a4ebc7
  43c1e9:	push   esi
  43c1ea:	scas   al,BYTE PTR es:[edi]
  43c1eb:	xor    edx,esi
  43c1ed:	adc    edi,esi
  43c1ef:	mov    eax,0x7bd1b8d4
  43c1f4:	pusha  
  43c1f5:	jns    0x43c1e0
  43c1f7:	mov    eax,0x87e3b4eb
  43c1fc:	and    esi,0xa603ddfb
  43c202:	int    0xf9
  43c204:	inc    eax
  43c205:	pop    ecx
  43c206:	inc    ebx
  43c207:	enter  0x9d86,0x44
  43c20b:	jmp    0xe2a7bd75
  43c210:	sbb    DWORD PTR [edi],0xfffffffd
  43c213:	addr16 clc 
  43c215:	mov    ds:0xcbf488c,al
  43c21a:	inc    ebp
  43c21b:	rol    DWORD PTR [ecx+edx*2],cl
  43c21e:	lahf   
  43c21f:	lahf   
  43c220:	xchg   BYTE PTR [edi-0x2e8f78e2],dh
  43c226:	faddp  st(0),st
  43c228:	jo     0x43c25b
  43c22a:	loope  0x43c272
  43c22c:	daa    
  43c22d:	push   esp
  43c22e:	loopne 0x43c2a9
  43c230:	pop    ds
  43c231:	sub    dl,0xd3
  43c234:	push   ebx
  43c235:	rcr    BYTE PTR [esp+ecx*1+0x19],cl
  43c239:	jmp    0xeb7c:0x8a262648
  43c240:	test   al,0x15
  43c242:	mov    eax,ds:0x87c95579
  43c247:	add    DWORD PTR [edx],eax
  43c249:	dec    ecx
  43c24a:	or     al,BYTE PTR [esi+ebp*2+0x44316a09]
  43c251:	xor    eax,0x6e137943
  43c256:	fdiv   QWORD PTR [ebp-0x7637e850]
  43c25c:	into   
  43c25d:	out    0x37,al
  43c25f:	and    eax,0x4f142288
  43c264:	mov    esp,0xf58f9734
  43c269:	imul   ebx,DWORD PTR [eax-0x6cd299],0xffffff84
  43c270:	dec    esp
  43c271:	retf   0xfb01
  43c274:	jae    0x43c25a
  43c276:	adc    BYTE PTR [eax],cl
  43c278:	add    BYTE PTR [ecx-0x634e6c42],0x80
  43c27f:	pop    ss
  43c280:	out    dx,al
  43c281:	mov    bl,BYTE PTR [edx]
  43c283:	mov    ebx,0x213fb219
  43c288:	mov    esi,0x231a087d
  43c28d:	sub    edi,edi
  43c28f:	icebp  
  43c290:	inc    edx
  43c291:	inc    ebp
  43c292:	stos   DWORD PTR es:[edi],eax
  43c293:	pop    ebx
  43c294:	stos   BYTE PTR es:[edi],al
  43c295:	jmp    0xdcccf492
  43c29a:	test   BYTE PTR [edi-0x606ff341],ch
  43c2a0:	lods   al,BYTE PTR ds:[esi]
  43c2a1:	in     al,0xef
  43c2a3:	shr    cl,cl
  43c2a5:	jns    0x43c2f4
  43c2a7:	sub    al,0xc9
  43c2a9:	js     0x43c233
  43c2ab:	repnz adc esi,DWORD PTR [edx+0x3e0c714b]
  43c2b2:	xchg   esi,eax
  43c2b3:	cmp    eax,0xac5d9aa7
  43c2b8:	(bad)
  43c2bb:	loope  0x43c2c0
  43c2bd:	out    0x69,eax
  43c2bf:	adc    bl,BYTE PTR [edx+0x47b68f97]
  43c2c5:	mov    ebx,0xd79ba1b5
  43c2ca:	iret   
  43c2cb:	in     eax,dx
  43c2cc:	or     al,ch
  43c2ce:	inc    esi
  43c2cf:	ds jmp 0xf35ba32
  43c2d5:	pop    eax
  43c2d6:	push   eax
  43c2d7:	mov    esi,0x993620b9
  43c2dc:	shl    BYTE PTR [esi+0x33],1
  43c2df:	and    eax,0x8a040578
  43c2e4:	sbb    DWORD PTR ds:0x8037ae2,0xebc9b81
  43c2ee:	xchg   BYTE PTR [esp+ebx*1-0x7d],cl
  43c2f2:	cvtps2pd xmm1,QWORD PTR [esi+0xa]
  43c2f6:	out    dx,eax
  43c2f7:	sub    edx,DWORD PTR [ebp+0x5a8d2006]
  43c2fd:	pop    ebp
  43c2fe:	rcr    DWORD PTR ss:[esi-0x2397f1d],1
  43c305:	imul   esi,DWORD PTR [edx+0x30ec2b79],0xd25b2ecd
  43c30f:	test   BYTE PTR [edx+0x4ef065f3],bl
  43c315:	popf   
  43c316:	pushf  
  43c317:	or     esp,ecx
  43c319:	jbe    0x43c2df
  43c31b:	adc    al,BYTE PTR [esi+0x64faf333]
  43c321:	(bad)  
  43c322:	adc    eax,0x302caa1a
  43c327:	mov    esi,0x778b518b
  43c32c:	rcl    DWORD PTR [ecx+edi*1],1
  43c32f:	push   ss
  43c330:	popa   
  43c331:	jp     0x43c2f2
  43c333:	test   BYTE PTR [edi-0x37],ah
  43c336:	mov    dl,0x2a
  43c338:	sub    ebp,esp
  43c33a:	mov    edx,0x3572069e
  43c33f:	mov    ss,WORD PTR [ecx+0x66]
  43c342:	jo     0x43c2cb
  43c344:	ja     0x43c2e3
  43c346:	cs js  0x43c393
  43c349:	dec    ebp
  43c34a:	sub    al,0x11
  43c34c:	in     al,dx
  43c34d:	push   ecx
  43c34e:	sub    esi,DWORD PTR ds:0x3877a84e
  43c354:	lods   al,BYTE PTR ds:[esi]
  43c355:	fcmovnbe st,st(0)
  43c357:	rcpps  xmm2,XMMWORD PTR [esi]
  43c35a:	mul    BYTE PTR [edx]
  43c35c:	xor    al,0xda
  43c35e:	pop    ecx
  43c35f:	jp     0x43c375
  43c361:	iret   
  43c362:	xchg   edi,eax
  43c363:	jne    0x43c37b
  43c365:	shl    BYTE PTR [ebp+0x43],cl
  43c368:	adc    esi,DWORD PTR [esi+0x66c99c88]
  43c36e:	mov    cl,0xca
  43c370:	ins    DWORD PTR es:[edi],dx
  43c371:	jmp    FWORD PTR [ecx+0x30e50d7b]
  43c377:	addr16 xchg esp,eax
  43c379:	push   es
  43c37a:	gs pop es
  43c37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c37d:	jo     0x43c359
  43c37f:	lea    ebx,[ebp+0xf]
  43c382:	ficom  WORD PTR [ebp+0x28]
  43c385:	repnz lahf 
  43c387:	inc    eax
  43c388:	adc    DWORD PTR [edx-0x4],ebx
  43c38b:	pop    esp
  43c38c:	jnp    0x43c395
  43c38e:	xchg   edi,eax
  43c38f:	loope  0x43c3cf
  43c391:	ja     0x43c31b
  43c393:	pop    ss
  43c394:	pop    esp
  43c395:	mov    ds:0xa0b91525,eax
  43c39a:	fld    QWORD PTR [ebx]
  43c39c:	leave  
  43c39d:	sub    ah,BYTE PTR [eax-0x49669d87]
  43c3a3:	cs test al,0xeb
  43c3a6:	std    
  43c3a7:	popa   
  43c3a8:	xor    DWORD PTR [ebx],esi
  43c3aa:	les    edx,FWORD PTR fs:[eax-0x6e9db7d4]
  43c3b1:	(bad)
  43c3b4:	aam    0x2c
  43c3b6:	js     0x43c419
  43c3b8:	fmul   QWORD PTR [ebp-0x1e]
  43c3bb:	add    al,0xf9
  43c3bd:	cli    
  43c3be:	and    edx,DWORD PTR [ecx]
  43c3c0:	sub    ebp,edi
  43c3c2:	shl    DWORD PTR [edx-0x360ba728],1
  43c3c8:	fwait
  43c3c9:	mov    ecx,0xbf55c51f
  43c3ce:	sub    bl,ch
  43c3d0:	jp     0x43c359
  43c3d2:	in     eax,dx
  43c3d3:	scas   eax,DWORD PTR es:[edi]
  43c3d4:	retf   
  43c3d5:	mov    ?,ecx
  43c3d7:	inc    ebx
  43c3d8:	mov    ecx,0xea9625ab
  43c3dd:	add    BYTE PTR [ebp+ecx*4-0x7586c19a],ah
  43c3e4:	pop    es
  43c3e5:	aam    0xd1
  43c3e7:	mov    BYTE PTR [edx],0x50
  43c3ea:	test   al,0xa2
  43c3ec:	je     0x43c440
  43c3ee:	xchg   ebp,eax
  43c3ef:	aaa    
  43c3f0:	sbb    BYTE PTR [ebx],dl
  43c3f2:	mov    dh,0x2d
  43c3f4:	shr    DWORD PTR ds:0x30b6ee36,0xf9
  43c3fb:	je     0x43c475
  43c3fd:	outs   dx,DWORD PTR ds:[esi]
  43c3fe:	jg     0x43c3df
  43c400:	jge    0x43c415
  43c402:	mov    eax,0x174c765d
  43c407:	loopne 0x43c406
  43c409:	or     cl,bh
  43c40b:	pushf  
  43c40c:	push   ebx
  43c40d:	push   es
  43c40e:	iret   
  43c40f:	push   ebp
  43c410:	xchg   ecx,eax
  43c411:	cmp    ah,BYTE PTR [ebx]
  43c413:	push   ecx
  43c414:	push   eax
  43c415:	mov    ch,BYTE PTR [edi-0x35]
  43c418:	and    BYTE PTR [ebx-0x4a],dh
  43c41b:	push   0xffffffda
  43c41d:	xchg   esi,eax
  43c41e:	loopne 0x43c47b
  43c420:	sub    eax,0xba494bba
  43c425:	pushf  
  43c426:	cdq    
  43c427:	cmp    DWORD PTR [eax+0x55],edi
  43c42a:	inc    esi
  43c42b:	out    dx,al
  43c42c:	dec    edx
  43c42d:	and    cl,BYTE PTR [eax]
  43c42f:	clc    
  43c430:	js     0x43c483
  43c432:	repnz aad 0x19
  43c435:	add    edx,DWORD PTR [esi+0x64]
  43c438:	pop    edx
  43c439:	(bad)  
  43c43a:	xchg   ecx,eax
  43c43b:	xor    al,0x94
  43c43d:	push   cs
  43c43e:	neg    dh
  43c440:	mov    eax,0xb6f8deb9
  43c445:	arpl   si,bx
  43c447:	imul   ebp,DWORD PTR [ecx-0x547e7962],0x70
  43c44e:	cmp    esi,edx
  43c450:	cmc    
  43c451:	dec    edx
  43c452:	push   edi
  43c453:	xor    dh,BYTE PTR [esi-0x7b001e3c]
  43c459:	outs   dx,BYTE PTR ds:[esi]
  43c45a:	nop
  43c45b:	jb     0x43c41f
  43c45d:	push   edi
  43c45e:	pop    ds
  43c45f:	(bad)  
  43c461:	xchg   esp,eax
  43c462:	jno    0x43c4d9
  43c464:	mov    dl,0x9b
  43c466:	adc    al,0xf4
  43c468:	outs   dx,BYTE PTR ds:[esi]
  43c469:	mov    edi,0xd5164aaa
  43c46e:	cmp    DWORD PTR [ecx-0x6d],ebx
  43c471:	lods   al,BYTE PTR ds:[esi]
  43c472:	inc    edi
  43c473:	fisub  DWORD PTR [edx-0x60]
  43c476:	push   edx
  43c477:	cdq    
  43c478:	leave  
  43c479:	out    dx,al
  43c47a:	aad    0xeb
  43c47c:	add    al,0xb4
  43c47e:	xor    eax,0x95f9b482
  43c483:	xor    dh,BYTE PTR [esi]
  43c485:	sbb    bh,BYTE PTR [ecx+0x755488f8]
  43c48b:	mov    al,BYTE PTR [edx]
  43c48d:	(bad)  
  43c48e:	ins    BYTE PTR es:[edi],dx
  43c48f:	fcom   DWORD PTR [edx]
  43c491:	inc    ebp
  43c492:	inc    ebx
  43c493:	adc    ebp,ecx
  43c495:	rol    BYTE PTR [eax+0x6f],1
  43c498:	sar    BYTE PTR [edx+edi*2-0x49],cl
  43c49c:	mov    edx,0xaa7e6712
  43c4a1:	and    eax,DWORD PTR [edi+0x7f]
  43c4a4:	jo     0x43c437
  43c4a6:	jg     0x43c4f8
  43c4a8:	mov    ch,0x61
  43c4aa:	shl    DWORD PTR [esi+0x39],cl
  43c4ad:	and    BYTE PTR [esi+0x73d83f02],0xb5
  43c4b4:	mov    bh,0x8f
  43c4b6:	adc    dh,0xe8
  43c4b9:	fmul   DWORD PTR [edx-0x62]
  43c4bc:	dec    eax
  43c4bd:	lock xchg ebx,eax
  43c4bf:	call   0xfb9d:0x944cfbe9
  43c4c6:	push   0x6a
  43c4c8:	sub    DWORD PTR [edx+eax*2+0x2fc82d54],ecx
  43c4cf:	xchg   edi,eax
  43c4d0:	dec    ebp
  43c4d1:	jns    0x43c513
  43c4d3:	imul   ebp,DWORD PTR [ecx],0x9fb7fb91
  43c4d9:	cmp    al,0xd4
  43c4db:	add    DWORD PTR [ebp-0x41af06cd],edi
  43c4e1:	jb     0x43c4ac
  43c4e3:	out    dx,al
  43c4e4:	test   DWORD PTR [ebx],ecx
  43c4e6:	cli    
  43c4e7:	arpl   WORD PTR [edi+0x1a],sp
  43c4ea:	gs loope 0x43c53b
  43c4ed:	aam    0xce
  43c4ef:	icebp  
  43c4f0:	push   0xbb860c9
  43c4f5:	xchg   ebx,eax
  43c4f6:	jge    0x43c4c9
  43c4f8:	mov    dh,0xa2
  43c4fa:	into   
  43c4fb:	adc    eax,0xc19cc5a4
  43c500:	pop    DWORD PTR [edx-0x7c]
  43c503:	sub    BYTE PTR [ecx],al
  43c505:	mov    DWORD PTR [edi-0x2b],eax
  43c508:	cld    
  43c509:	pop    esi
  43c50a:	pop    esi
  43c50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c50c:	clc    
  43c50d:	or     ch,BYTE PTR [edx+0x45]
  43c510:	add    BYTE PTR [edx-0x690ed5be],dh
  43c516:	xor    eax,ebx
  43c518:	inc    ecx
  43c519:	jmp    0x4e51:0x4432d4de
  43c520:	jge    0x43c4f0
  43c522:	jnp    0x43c59a
  43c524:	inc    DWORD PTR [esi-0xf5ff1f]
  43c52a:	call   0x56599486
  43c52f:	or     ecx,eax
  43c531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c532:	imul   edx,DWORD PTR [esi-0x51],0x23
  43c536:	mov    al,ds:0x6a522d9c
  43c53b:	mov    DWORD PTR [edi+0x61da514c],eax
  43c541:	pop    edi
  43c542:	repnz scas eax,DWORD PTR es:[edi]
  43c544:	cdq    
  43c545:	call   0x87cb3c43
  43c54a:	and    al,0x65
  43c54c:	sahf   
  43c54d:	jmp    0x43c4fe
  43c54f:	loope  0x43c553
  43c551:	nop
  43c552:	mov    ah,0xa9
  43c554:	fimul  DWORD PTR [edx+0x7]
  43c557:	sub    DWORD PTR [eax+0x4c],edi
  43c55a:	adc    cl,BYTE PTR cs:[ebp+0x71]
  43c55e:	sbb    BYTE PTR [ecx+0x59],dh
  43c561:	pusha  
  43c562:	jae    0x43c512
  43c564:	in     al,0x0
  43c566:	aad    0xd4
  43c568:	xchg   edi,eax
  43c569:	inc    ebp
  43c56a:	xchg   DWORD PTR ds:0x75ece386,esi
  43c570:	stc    
  43c571:	stos   DWORD PTR es:[edi],eax
  43c572:	int3   
  43c573:	fild   QWORD PTR [esp+edi*1+0xd]
  43c577:	pop    ecx
  43c578:	popf   
  43c579:	sahf   
  43c57a:	ja     0x43c5de
  43c57c:	xlat   BYTE PTR ds:[ebx]
  43c57d:	test   DWORD PTR [ebx+0x3b],0x4e3e8066
  43c584:	call   0x537c7c0a
  43c589:	outs   dx,BYTE PTR ds:[esi]
  43c58a:	cmp    eax,0xf4a5d27f
  43c58f:	push   esi
  43c590:	jge    0x43c60a
  43c592:	js     0x43c57c
  43c594:	lods   al,BYTE PTR ds:[esi]
  43c595:	mov    ch,0x30
  43c597:	adc    DWORD PTR [ebx+0x87e70f9],0x4b
  43c59e:	call   0x8dac4027
  43c5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c5a4:	jae    0x43c56c
  43c5a6:	add    al,bl
  43c5a8:	iret   
  43c5a9:	les    esp,FWORD PTR [edx+ebp*2]
  43c5ac:	mov    ecx,0xedc85ee3
  43c5b1:	ins    DWORD PTR es:[edi],dx
  43c5b2:	mov    dh,BYTE PTR [ecx+0x1692073c]
  43c5b8:	push   0xa45b1c89
  43c5bd:	mov    dl,0xda
  43c5bf:	cdq    
  43c5c0:	mov    esi,0xcd1f02ae
  43c5c5:	bound  edi,QWORD PTR [eax-0x48]
  43c5c8:	out    0xa,al
  43c5ca:	or     bl,BYTE PTR [ebp-0x18fb8bbc]
  43c5d0:	pop    eax
  43c5d1:	xor    BYTE PTR [edi-0x2d],ch
  43c5d4:	ss or  al,0x52
  43c5d7:	mov    al,0xf9
  43c5d9:	add    al,0x63
  43c5db:	pop    eax
  43c5dc:	lahf   
  43c5dd:	in     al,dx
  43c5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c5df:	repz mov ch,0x17
  43c5e2:	xor    DWORD PTR [eax-0x5f9e3ca4],0x6f018796
  43c5ec:	test   al,0xcd
  43c5ee:	pop    esp
  43c5ef:	jno    0x43c591
  43c5f1:	inc    ebp
  43c5f2:	mov    ebp,0x7c1d71ca
  43c5f7:	mov    esp,0xe633d6c1
  43c5fc:	adc    ah,BYTE PTR [esi-0x34]
  43c5ff:	std    
  43c600:	jo     0x43c666
  43c602:	shr    edx,cl
  43c604:	loopne 0x43c617
  43c606:	outs   dx,BYTE PTR ds:[esi]
  43c607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c608:	lahf   
  43c609:	outs   dx,DWORD PTR ds:[esi]
  43c60a:	cwde   
  43c60b:	stos   DWORD PTR es:[edi],eax
  43c60c:	push   DWORD PTR [ecx+0x73]
  43c60f:	xchg   esp,eax
  43c610:	in     al,dx
  43c611:	cld    
  43c612:	(bad)  
  43c613:	outs   dx,BYTE PTR ds:[esi]
  43c614:	sub    eax,DWORD PTR [eax]
  43c616:	and    dl,dh
  43c618:	mov    ebx,0x17315d30
  43c61d:	call   0x18b:0x162c8d1f
  43c624:	aad    0xac
  43c626:	gs stos DWORD PTR es:[edi],eax
  43c628:	test   BYTE PTR [ebx+0x3c],cl
  43c62b:	repnz test DWORD PTR [ebp+0x5746f0ba],eax
  43c632:	add    BYTE PTR [ebx-0x67],0xb2
  43c636:	dec    ebp
  43c637:	daa    
  43c638:	and    edx,DWORD PTR [edx-0x60]
  43c63b:	pop    esi
  43c63c:	test   al,0x99
  43c63e:	popa   
  43c63f:	lods   eax,DWORD PTR ds:[esi]
  43c640:	gs jbe 0x43c62a
  43c643:	jp     0x43c65c
  43c645:	jp     0x43c684
  43c647:	fistp  DWORD PTR [ebp*2+0x2dab2c1e]
  43c64e:	jnp    0x43c5fd
  43c650:	push   eax
  43c651:	aad    0x4d
  43c653:	dec    eax
  43c654:	mov    bl,0x2b
  43c656:	sar    DWORD PTR [ebx-0x74465fc3],cl
  43c65c:	inc    edi
  43c65d:	xchg   DWORD PTR [ebx-0x12],ebx
  43c660:	ins    DWORD PTR es:[edi],dx
  43c661:	sub    dl,BYTE PTR [edi+eax*4]
  43c664:	sub    edi,ecx
  43c666:	cld    
  43c667:	je     0x43c626
  43c669:	or     al,0x0
  43c66b:	xchg   edi,eax
  43c66c:	inc    eax
  43c66d:	stc    
  43c66e:	pop    esi
  43c66f:	icebp  
  43c670:	mov    al,0x45
  43c672:	hlt    
  43c673:	icebp  
  43c674:	bswap  ebx
  43c676:	in     eax,0xaf
  43c678:	ins    DWORD PTR es:[edi],dx
  43c679:	mov    esi,0xb810b9be
  43c67e:	mov    cl,0xda
  43c680:	jmp    0x93b13d10
  43c685:	dec    edi
  43c686:	cmc    
  43c687:	rcl    BYTE PTR [edx-0x4],cl
  43c68a:	imul   edx,DWORD PTR [ecx-0x6af8064e],0x73
  43c691:	xchg   ebp,eax
  43c692:	call   0xa297:0xfdf99ab4
  43c699:	test   eax,0x4bd68017
  43c69e:	mov    ecx,0x4c158d8f
  43c6a3:	xchg   esp,eax
  43c6a4:	fsubr  DWORD PTR [edi+0x4ca365f8]
  43c6aa:	jns    0x877b3469
  43c6b0:	inc    ebp
  43c6b1:	mov    ah,0x2c
  43c6b3:	iretw  
  43c6b5:	sub    DWORD PTR ss:[ecx+ebp*4-0x4b],edx
  43c6ba:	xchg   edi,ebp
  43c6bc:	ret    0xffd7
  43c6bf:	add    eax,0x23645c86
  43c6c4:	pop    ebx
  43c6c5:	mov    edi,cs
  43c6c7:	add    eax,0x77162cae
  43c6cc:	stos   DWORD PTR es:[edi],eax
  43c6cd:	sahf   
  43c6ce:	cmp    ch,BYTE PTR [eax-0x28]
  43c6d1:	xchg   ebp,eax
  43c6d2:	inc    edi
  43c6d3:	push   eax
  43c6d4:	mov    ebx,esi
  43c6d6:	jecxz  0x43c691
  43c6d8:	mov    al,ds:0x4c15bb18
  43c6dd:	jbe    0x43c73b
  43c6df:	test   BYTE PTR [eax],ah
  43c6e1:	xchg   ecx,eax
  43c6e2:	fidivr WORD PTR [ecx+0x14]
  43c6e5:	fxch   st(6)
  43c6e7:	inc    ebp
  43c6e8:	test   ch,ch
  43c6ea:	add    edi,DWORD PTR [eax]
  43c6ec:	dec    esp
  43c6ed:	int3   
  43c6ee:	add    DWORD PTR [ecx],esp
  43c6f0:	xor    eax,0x54bfabda
  43c6f5:	in     al,0x92
  43c6f7:	loope  0x43c6ec
  43c6f9:	loope  0x43c691
  43c6fb:	test   al,0xe4
  43c6fd:	mov    ebp,0x9316821f
  43c702:	cmp    al,0x2e
  43c704:	push   edx
  43c705:	and    al,0x5
  43c707:	out    dx,eax
  43c708:	or     DWORD PTR [ecx],esp
  43c70a:	dec    ecx
  43c70b:	mov    eax,ds:0x8dab448
  43c710:	xor    al,0x4f
  43c712:	jge    0x43c6c0
  43c714:	loope  0x43c736
  43c716:	push   ebp
  43c717:	jmp    FWORD PTR [eax]
  43c719:	ret    
  43c71a:	push   es
  43c71b:	loope  0x43c71e
  43c71d:	jle    0x43c79e
  43c71f:	jb     0x43c6c2
  43c721:	push   0x77
  43c723:	fs in  eax,0xf
  43c726:	inc    ebx
  43c727:	inc    esi
  43c728:	ja     0x43c6e0
  43c72a:	or     DWORD PTR [eax-0x22],ebx
  43c72d:	xchg   esp,eax
  43c72e:	mov    edi,0x72c8cae7
  43c733:	mov    eax,ds:0x1457baf6
  43c738:	(bad)  
  43c739:	mov    ebp,0xb868b861
  43c73e:	mov    ebp,0xc9269408
  43c743:	xchg   esp,eax
  43c744:	shl    DWORD PTR [edi],1
  43c746:	inc    BYTE PTR [eax]
  43c748:	scas   eax,DWORD PTR es:[edi]
  43c749:	add    DWORD PTR [ebp-0x69ff0327],eax
  43c74f:	jmp    0x43c78f
  43c751:	mov    WORD PTR [esi+0x1a],?
  43c754:	jns    0x43c76a
  43c756:	jae    0x43c785
  43c758:	fwait
  43c759:	sar    BYTE PTR [esi+0x456d995e],1
  43c75f:	mov    cl,0xf6
  43c761:	inc    esi
  43c762:	cmp    eax,0xbf20e208
  43c767:	xor    eax,0xc6c522b8
  43c76c:	xchg   BYTE PTR [edi],cl
  43c76e:	or     BYTE PTR [edi-0x40],0xf5
  43c772:	retf   0xe60a
  43c775:	xor    eax,DWORD PTR [esi+0x64]
  43c778:	pop    ebx
  43c779:	lahf   
  43c77a:	adc    eax,0x9c32a2c6
  43c77f:	xchg   esp,eax
  43c780:	cdq    
  43c781:	add    al,0x8
  43c783:	loopne 0x43c759
  43c785:	stos   BYTE PTR es:[edi],al
  43c786:	scas   eax,DWORD PTR es:[edi]
  43c787:	in     eax,0xe2
  43c789:	je     0x43c7e3
  43c78b:	test   al,0x74
  43c78d:	(bad)  
  43c78e:	fdiv   st,st(3)
  43c790:	xor    esi,esi
  43c792:	aas    
  43c793:	iret   
  43c794:	xchg   ebp,eax
  43c795:	mov    bl,0xfc
  43c797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c798:	mov    bl,0x7
  43c79a:	sub    al,0x6
  43c79c:	push   ebx
  43c79d:	stos   BYTE PTR es:[edi],al
  43c79e:	lods   al,BYTE PTR ds:[esi]
  43c79f:	into   
  43c7a0:	mov    ecx,0x6661b764
  43c7a5:	mov    cl,0x96
  43c7a7:	push   esi
  43c7a8:	xchg   cl,al
  43c7aa:	xor    bl,0xd4
  43c7ad:	mov    dh,0xa6
  43c7af:	in     eax,0x3c
  43c7b1:	jp     0x43c7df
  43c7b3:	push   0x4b
  43c7b5:	mov    al,ds:0xc80831b1
  43c7ba:	xor    eax,0x166632ee
  43c7bf:	call   0xbad62b1
  43c7c4:	jge    0x43c839
  43c7c6:	adc    ax,0xe0f6
  43c7ca:	cmp    al,0x1b
  43c7cc:	dec    ebp
  43c7cd:	dec    eax
  43c7ce:	dec    ebx
  43c7cf:	loopne 0x43c7bc
  43c7d1:	call   0xe88e0f4e
  43c7d6:	mov    dl,0x75
  43c7d8:	and    BYTE PTR [ebp+0x2e],dl
  43c7db:	test   DWORD PTR [eax+0x339d3dda],edi
  43c7e1:	jns    0x43c80c
  43c7e3:	dec    esp
  43c7e4:	cdq    
  43c7e5:	sub    dh,dl
  43c7e7:	mov    BYTE PTR [esi],bl
  43c7e9:	(bad)  
  43c7eb:	mov    edi,0x98959b17
  43c7f0:	inc    ecx
  43c7f1:	mov    eax,ds:0x50ca85bb
  43c7f6:	imul   ecx,DWORD PTR [ebx],0xffffffc1
  43c7f9:	sti    
  43c7fa:	cmp    BYTE PTR [ecx],cl
  43c7fc:	dec    esi
  43c7fd:	in     al,0x21
  43c7ff:	pmulhw mm7,QWORD PTR [ecx+esi*2-0x4f573036]
  43c807:	int    0x5
  43c809:	addr16 (bad) 
  43c80b:	sub    al,0xfb
  43c80d:	aas    
  43c80e:	cs mov al,0xf8
  43c811:	dec    ebx
  43c812:	xchg   esp,eax
  43c813:	int3   
  43c814:	loop   0x43c830
  43c816:	test   BYTE PTR [edi],bh
  43c818:	dec    esp
  43c819:	clc    
  43c81a:	mov    bh,0xe6
  43c81c:	inc    ebx
  43c81d:	push   ds
  43c81e:	loop   0x43c848
  43c820:	shl    cl,cl
  43c822:	stos   BYTE PTR es:[edi],al
  43c823:	ja     0x43c825
  43c825:	jo     0x43c805
  43c827:	fcomp  DWORD PTR fs:[ecx]
  43c82a:	xor    al,0x1
  43c82c:	mov    esp,ds
  43c82e:	es xor al,0x6f
  43c831:	add    BYTE PTR [edi+0x2c2e7e25],al
  43c837:	ret    0xd037
  43c83a:	ins    DWORD PTR es:[edi],dx
  43c83b:	stos   BYTE PTR es:[edi],al
  43c83c:	mov    edx,0xaccfd2de
  43c841:	dec    ebx
  43c842:	pop    eax
  43c843:	xchg   esp,eax
  43c844:	scas   eax,DWORD PTR es:[edi]
  43c845:	shl    DWORD PTR [eax],1
  43c847:	inc    eax
  43c848:	data16 mov bl,0x2a
  43c84b:	mov    edi,0x4394940a
  43c850:	push   ss
  43c851:	cdq    
  43c852:	jnp    0x43c7ef
  43c854:	sbb    DWORD PTR [ebp-0x25],esp
  43c857:	pop    esi
  43c858:	adc    eax,0x4698ea0f
  43c85d:	imul   esi,DWORD PTR [ecx+0x36e389ed],0xffffff89
  43c864:	sar    edi,1
  43c866:	mov    ds:0x3a4e312e,eax
  43c86b:	in     eax,0xb9
  43c86d:	cdq    
  43c86e:	aas    
  43c86f:	jle    0x43c822
  43c871:	adc    ebx,DWORD PTR [esi+0x1f8f4d03]
  43c877:	cmp    esi,DWORD PTR [edx+ebx*8+0x74]
  43c87b:	(bad)  
  43c87c:	sub    DWORD PTR [ecx],ecx
  43c87e:	sbb    al,BYTE PTR [esi-0x4037b998]
  43c884:	adc    al,0xe3
  43c886:	lods   eax,DWORD PTR ds:[esi]
  43c887:	push   esi
  43c888:	push   DWORD PTR [eax+0x2548760e]
  43c88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c88f:	int    0x7
  43c891:	mov    bh,0x1
  43c893:	out    dx,eax
  43c894:	std    
  43c895:	or     DWORD PTR [edi+0x78],eax
  43c898:	mov    ds:0xb50bdd81,al
  43c89d:	adc    BYTE PTR [ebx+0x7e4f542c],dl
  43c8a3:	ficomp WORD PTR [ebp-0x51]
  43c8a6:	repnz push ds
  43c8a8:	xchg   DWORD PTR [eax+0x1d],ebx
  43c8ab:	stos   DWORD PTR es:[edi],eax
  43c8ac:	ret    0x7fa
  43c8af:	hlt    
  43c8b0:	xchg   ebp,eax
  43c8b1:	inc    ecx
  43c8b2:	pop    eax
  43c8b3:	int3   
  43c8b4:	sub    eax,0xb8dc220c
  43c8b9:	add    DWORD PTR [ecx-0x5e8c3415],esp
  43c8bf:	repz dec ebp
  43c8c1:	xor    al,0x35
  43c8c3:	mov    DWORD PTR [edi+eiz*2],eax
  43c8c6:	loop   0x43c857
  43c8c8:	jecxz  0x43c8fb
  43c8ca:	test   BYTE PTR [edi-0x79],dh
  43c8cd:	jg     0x43c892
  43c8cf:	jnp    0x43c8d2
  43c8d1:	xor    al,0xde
  43c8d3:	xor    eax,0x5d6b75ef
  43c8d8:	(bad)  
  43c8d9:	popa   
  43c8da:	enter  0x5185,0x3c
  43c8de:	xlat   BYTE PTR ds:[ebx]
  43c8df:	and    al,0x42
  43c8e1:	in     eax,dx
  43c8e2:	jno    0x43c94f
  43c8e4:	inc    ebx
  43c8e5:	scas   al,BYTE PTR es:[edi]
  43c8e6:	iret   
  43c8e7:	pop    es
  43c8e8:	jg     0x43c88f
  43c8ea:	jnp    0x43c878
  43c8ec:	sbb    edi,ecx
  43c8ee:	pushf  
  43c8ef:	mov    dh,0xc9
  43c8f1:	cmc    
  43c8f2:	sub    DWORD PTR [ebx+edi*2+0x35],ebp
  43c8f6:	inc    eax
  43c8f7:	sbb    dh,bl
  43c8f9:	pop    esp
  43c8fa:	mov    ds:0xb3125570,al
  43c8ff:	aas    
  43c900:	pop    ds
  43c901:	sub    BYTE PTR [ebx],0xdc
  43c904:	or     al,0x7d
  43c906:	xchg   edi,eax
  43c907:	and    eax,DWORD PTR [ecx-0x3d]
  43c90a:	jg     0x43c94c
  43c90c:	mov    cl,0xf7
  43c90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c90f:	mov    dl,0x5c
  43c911:	test   al,0x8
  43c913:	ins    BYTE PTR es:[edi],dx
  43c914:	pop    edx
  43c915:	shr    BYTE PTR [ebx-0x47],1
  43c918:	and    eax,0x4a2db6a1
  43c91d:	mov    eax,0xd8d9f42e
  43c922:	ds nop
  43c924:	mov    ?,WORD PTR [ecx]
  43c926:	mov    DWORD PTR [edi-0x36aa9941],edi
  43c92c:	outs   dx,BYTE PTR ds:[esi]
  43c92d:	dec    edx
  43c92e:	sbb    cl,bl
  43c930:	gs mov dl,0xf
  43c933:	inc    ecx
  43c934:	ror    al,1
  43c936:	(bad)  
  43c937:	js     0x43c946
  43c939:	push   esp
  43c93a:	xor    eax,0x2bbabcc5
  43c93f:	loopne 0x43c8cb
  43c941:	add    edi,DWORD PTR ds:0x3e76ae3f
  43c947:	xor    DWORD PTR [edi],eax
  43c949:	adc    dh,bl
  43c94b:	cs imul esp,ecx,0xffffffc6
  43c94f:	dec    esp
  43c950:	fadd   DWORD PTR [eax+0xa]
  43c953:	scas   eax,DWORD PTR es:[edi]
  43c954:	push   0xe4830a89
  43c959:	cmp    bh,bh
  43c95b:	mov    gs,WORD PTR [esi+0x4]
  43c95e:	std    
  43c95f:	xchg   ecx,eax
  43c960:	rcr    dl,1
  43c962:	fsubr  QWORD PTR [esi+0x6e]
  43c965:	fld    TBYTE PTR [esi]
  43c967:	cmp    al,0xce
  43c969:	push   edx
  43c96a:	and    eax,0xc14e5f14
  43c96f:	sbb    ecx,DWORD PTR [edi+0x68]
  43c972:	push   eax
  43c973:	sub    ebx,DWORD PTR [ebp+0x1edbf6df]
  43c979:	pop    edx
  43c97a:	mov    al,ds:0x9a71d45c
  43c97f:	stos   DWORD PTR es:[edi],eax
  43c980:	jge    0x43c9b8
  43c982:	aam    0x3d
  43c984:	cmp    dl,ch
  43c986:	or     bl,BYTE PTR [edi+0x22]
  43c989:	adc    BYTE PTR [ebp-0x7],ah
  43c98c:	and    bl,BYTE PTR [edx+0x36619ba0]
  43c992:	daa    
  43c993:	sbb    edx,DWORD PTR [edx+0x4d7cde36]
  43c999:	sti    
  43c99a:	xchg   edx,eax
  43c99b:	push   esi
  43c99c:	les    edx,FWORD PTR [ebx+ebp*4-0x1]
  43c9a0:	xchg   ebx,eax
  43c9a1:	add    al,0x13
  43c9a3:	xchg   edx,eax
  43c9a4:	in     eax,dx
  43c9a5:	dec    edx
  43c9a6:	shl    BYTE PTR [ecx-0x68828254],0xe2
  43c9ad:	daa    
  43c9ae:	add    DWORD PTR [esi],edx
  43c9b0:	push   esi
  43c9b1:	xchg   edi,eax
  43c9b2:	push   edx
  43c9b3:	adc    edi,DWORD PTR [ecx-0x79811827]
  43c9b9:	pop    ecx
  43c9ba:	loope  0x43c9fe
  43c9bc:	and    cl,bh
  43c9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c9bf:	mov    ecx,0xe072429
  43c9c4:	fidivr DWORD PTR ds:0xa0048fed
  43c9ca:	addr16 out 0x8a,eax
  43c9cd:	in     al,dx
  43c9ce:	rcl    dl,0xfe
  43c9d1:	mov    dh,0xc5
  43c9d3:	lods   eax,DWORD PTR ds:[esi]
  43c9d4:	cs ins DWORD PTR es:[edi],dx
  43c9d6:	in     eax,dx
  43c9d7:	out    0xd7,al
  43c9d9:	push   0x8d0b9e5
  43c9de:	imul   esp,DWORD PTR [esi-0x90773f7],0xe0a56b46
  43c9e8:	mov    ebx,0xb14d6bf8
  43c9ed:	push   edi
  43c9ee:	lods   eax,DWORD PTR ds:[esi]
  43c9ef:	mov    ebx,0x2fa16d4b
  43c9f4:	dec    esp
  43c9f5:	jl     0x43ca68
  43c9f7:	push   0x19fb3ec
  43c9fc:	lods   al,BYTE PTR ds:[esi]
  43c9fd:	loope  0x43c9be
  43c9ff:	js     0x43c994
  43ca01:	mov    edx,0xc004d3aa
  43ca06:	retf   
  43ca07:	lahf   
  43ca08:	xor    eax,DWORD PTR [ebp-0x41]
  43ca0b:	jae    0x43ca7b
  43ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ca0e:	(bad)  
  43ca0f:	pop    ss
  43ca10:	mov    eax,0x1687af7b
  43ca15:	mov    ?,eax
  43ca17:	mov    DWORD PTR [ecx+0x1d],esi
  43ca1a:	dec    edx
  43ca1b:	push   edx
  43ca1c:	push   ebp
  43ca1d:	ret    0x9b75
  43ca20:	push   ebp
  43ca21:	int3   
  43ca22:	stos   BYTE PTR es:[edi],al
  43ca23:	repz mov dl,0x85
  43ca26:	mov    ebx,0xa9c330a2
  43ca2b:	out    dx,eax
  43ca2c:	into   
  43ca2d:	(bad)  
  43ca2e:	pop    ss
  43ca2f:	jnp    0x43ca47
  43ca31:	in     eax,0x25
  43ca33:	mov    DWORD PTR [ecx+esi*4-0xfc3e921],edi
  43ca3a:	(bad)  [esi]
  43ca3c:	xchg   BYTE PTR [si+0x2b72],ch
  43ca41:	push   esp
  43ca42:	jp     0x43ca3f
  43ca44:	shr    BYTE PTR [ebx+0x5d],cl
  43ca47:	xchg   ecx,eax
  43ca48:	mov    esi,0x6429e93b
  43ca4d:	js     0x43ca60
  43ca4f:	das    
  43ca50:	mov    ebp,0x87e0a79d
  43ca56:	into   
  43ca57:	cli    
  43ca58:	popf   
  43ca59:	push   esi
  43ca5a:	hlt    
  43ca5b:	xor    BYTE PTR [esi],ch
  43ca5d:	daa    
  43ca5e:	call   FWORD PTR [ecx]
  43ca60:	in     al,dx
  43ca61:	in     al,0xed
  43ca63:	jae    0x43ca5c
  43ca65:	inc    ebp
  43ca66:	lahf   
  43ca67:	sbb    eax,0x83b79565
  43ca6c:	stos   DWORD PTR es:[edi],eax
  43ca6d:	repz adc al,0x7e
  43ca70:	jecxz  0x43cadf
  43ca72:	xchg   esp,eax
  43ca73:	scas   al,BYTE PTR es:[edi]
  43ca74:	pop    edi
  43ca75:	je     0x43ca52
  43ca77:	or     DWORD PTR [ecx],ebp
  43ca79:	outs   dx,DWORD PTR ds:[esi]
  43ca7a:	jecxz  0x43ca09
  43ca7c:	rcr    dl,cl
  43ca7e:	in     al,dx
  43ca7f:	and    ecx,DWORD PTR [eax-0x45d91d38]
  43ca85:	sbb    eax,0xe16ae93d
  43ca8a:	mov    WORD PTR [eax-0x5a391716],?
  43ca90:	gs push 0xffffffbe
  43ca93:	arpl   sp,cx
  43ca95:	stos   BYTE PTR es:[edi],al
  43ca96:	cmp    dl,ah
  43ca98:	ficom  DWORD PTR [ebx+0x3ece6556]
  43ca9e:	popa   
  43ca9f:	sahf   
  43caa0:	das    
  43caa1:	icebp  
  43caa2:	rol    edi,1
  43caa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43caa5:	mov    esi,0xb113bafa
  43caaa:	and    ebp,eax
  43caac:	fbld   TBYTE PTR [eax]
  43caae:	jo     0x43caac
  43cab0:	test   bh,0xcf
  43cab3:	inc    edx
  43cab4:	mov    ah,0xb2
  43cab6:	pop    ss
  43cab7:	cwde   
  43cab8:	(bad)  
  43cab9:	retf   0x5cd1
  43cabc:	mov    esp,0xb604a1a2
  43cac1:	out    dx,al
  43cac2:	dec    ecx
  43cac3:	and    dl,cl
  43cac5:	les    edx,FWORD PTR [edi+0x1159ad5e]
  43cacb:	jns    0x43cb3e
  43cacd:	pop    esi
  43cace:	add    dl,dl
  43cad0:	xchg   ebx,eax
  43cad1:	int    0xf0
  43cad3:	xchg   esp,eax
  43cad4:	add    al,BYTE PTR [edx]
  43cad6:	or     ah,BYTE PTR [esi-0x11d75a4e]
  43cadc:	xor    dl,BYTE PTR [eax+0x54]
  43cadf:	push   ecx
  43cae0:	sbb    al,0x8a
  43cae2:	dec    eax
  43cae3:	inc    edi
  43cae4:	shl    ebp,cl
  43cae6:	(bad)  
  43cae7:	push   0x7b4f3341
  43caec:	pop    ecx
  43caed:	sbb    ecx,DWORD PTR [edx+0x4e1c3308]
  43caf3:	out    0x1b,eax
  43caf5:	and    DWORD PTR ds:0x7714fb19,0x50245fed
  43caff:	push   esp
  43cb00:	push   esp
  43cb01:	std    
  43cb02:	pushf  
  43cb03:	imul   DWORD PTR [ebx+0x61]
  43cb06:	enter  0xb28e,0xf4
  43cb0a:	mov    eax,DWORD PTR [ebx]
  43cb0c:	dec    ecx
  43cb0d:	pop    ecx
  43cb0e:	ret    
  43cb0f:	mov    BYTE PTR [ebp-0x3e],dh
  43cb12:	lea    edi,[ecx]
  43cb14:	(bad)
  43cb17:	mov    al,0xe5
  43cb19:	pop    eax
  43cb1a:	les    eax,FWORD PTR [ebx]
  43cb1c:	mov    eax,ds:0xd5451b36
  43cb21:	ins    BYTE PTR es:[edi],dx
  43cb22:	fcom   DWORD PTR [eax+0x29]
  43cb25:	call   0xbc9bd6be
  43cb2a:	mov    esp,0xc5211851
  43cb2f:	push   cs
  43cb30:	jl     0x43cb18
  43cb32:	test   esp,eax
  43cb34:	arpl   WORD PTR [ebp+0x7c],cx
  43cb37:	cmp    dh,BYTE PTR [ebx+esi*1-0x4d]
  43cb3b:	mov    ah,0xfe
  43cb3d:	stos   BYTE PTR es:[edi],al
  43cb3e:	and    ah,cl
  43cb40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cb41:	jmp    0x7be8:0x6b35eabc
  43cb48:	mov    cl,BYTE PTR [edx*2+0x7cf2a4ba]
  43cb4f:	or     al,0x8c
  43cb51:	loopne 0x43cb2e
  43cb53:	daa    
  43cb54:	fidivr DWORD PTR [esi+ebx*8-0x5]
  43cb58:	retf   0xa6e5
  43cb5b:	cmp    cl,al
  43cb5d:	sbb    BYTE PTR [esi+esi*8],0x9d
  43cb61:	sbb    eax,0xe7c4d1d7
  43cb66:	lahf   
  43cb67:	and    eax,0x86c8797f
  43cb6c:	pop    esi
  43cb6d:	adc    eax,0x14ae1dfa
  43cb72:	add    esi,DWORD PTR [edi]
  43cb74:	hlt    
  43cb75:	mov    eax,ds:0x6500beb0
  43cb7a:	scas   eax,DWORD PTR es:[edi]
  43cb7b:	sbb    BYTE PTR [eax+0x50625a65],al
  43cb81:	std    
  43cb82:	imul   ecx,DWORD PTR [ebp-0x3b5f919b],0x5618f90c
  43cb8c:	mov    esi,0x972b0a10
  43cb91:	jmp    0x43cb91
  43cb93:	or     dh,bl
  43cb95:	retf   0x8ca2
  43cb98:	mov    dh,ch
  43cb9a:	popf   
  43cb9b:	in     eax,dx
  43cb9c:	xor    ebp,ebp
  43cb9e:	ret    
  43cb9f:	fist   WORD PTR [eax+0x1723400a]
  43cba5:	or     ecx,DWORD PTR [edx+0x7a]
  43cba8:	add    eax,0xbf5157cb
  43cbad:	icebp  
  43cbae:	pushf  
  43cbaf:	into   
  43cbb0:	xchg   ecx,eax
  43cbb1:	mov    ch,0xd9
  43cbb3:	stos   DWORD PTR es:[edi],eax
  43cbb4:	adc    al,0x62
  43cbb6:	pop    esi
  43cbb7:	adc    dl,bh
  43cbb9:	mov    ecx,0xcdb8fc22
  43cbbe:	retf   
  43cbbf:	xlat   BYTE PTR ds:[ebx]
  43cbc0:	add    BYTE PTR [ebx],0x8e
  43cbc3:	inc    ebx
  43cbc4:	mov    bl,0x15
  43cbc6:	sbb    ebp,esp
  43cbc8:	ret    
  43cbc9:	addr16 push 0x71fec063
  43cbcf:	jae    0x43cc19
  43cbd1:	lods   eax,DWORD PTR ds:[esi]
  43cbd2:	inc    ecx
  43cbd3:	cmp    dl,BYTE PTR [esi]
  43cbd5:	call   0xf6cd:0x856f3e3
  43cbdc:	mov    ds:0x702ba992,eax
  43cbe1:	and    eax,esi
  43cbe3:	btr    DWORD PTR [ebx+eax*2+0x7a0d0b83],ebx
  43cbeb:	js     0x43cbda
  43cbed:	nop
  43cbee:	add    eax,0x56ed5858
  43cbf3:	sub    al,0x20
  43cbf5:	clc    
  43cbf6:	sbb    BYTE PTR [edi-0xc],bh
  43cbf9:	xor    edx,DWORD PTR [eax-0x1e]
  43cbfc:	fsubr  st(4),st
  43cbfe:	stos   DWORD PTR es:[edi],eax
  43cbff:	loope  0x43cbea
  43cc01:	mov    ch,0x87
  43cc03:	dec    ebx
  43cc04:	mov    ds:0xb7326736,eax
  43cc09:	or     eax,DWORD PTR [ebp-0x3665f307]
  43cc0f:	add    DWORD PTR [edi+0x51ad8145],0xffffffe8
  43cc16:	js     0x43cbc6
  43cc18:	outs   dx,BYTE PTR ds:[esi]
  43cc19:	fstp   TBYTE PTR [ecx-0x5904ab13]
  43cc1f:	and    eax,0x78890e5f
  43cc24:	daa    
  43cc25:	push   eax
  43cc26:	js     0x43cbdb
  43cc28:	fadd   DWORD PTR [edx]
  43cc2a:	push   ebp
  43cc2b:	push   cs
  43cc2c:	xchg   BYTE PTR [edi+0x88aea1],dh
  43cc32:	ss pop es
  43cc34:	sub    DWORD PTR [ecx+ecx*4-0x3e],esi
  43cc38:	test   al,0xc2
  43cc3a:	mov    esp,0xc39f6b8a
  43cc3f:	adc    eax,0x554ff2e4
  43cc44:	push   edx
  43cc45:	or     BYTE PTR [ebp-0x4e],ah
  43cc48:	or     eax,DWORD PTR [edi-0x5a39baf]
  43cc4e:	push   edx
  43cc4f:	and    BYTE PTR [ecx-0x73b8eb08],dh
  43cc55:	jle    0x43ccc9
  43cc57:	and    bl,BYTE PTR [edx+edx*2]
  43cc5a:	jmp    0xf3aab0cc
  43cc5f:	adc    bh,BYTE PTR [ebx+0x5a4ff5c2]
  43cc65:	inc    eax
  43cc66:	loopne 0x43ccc8
  43cc68:	jnp    0x43cc43
  43cc6a:	mov    ebx,0x83ad0f74
  43cc6f:	dec    eax
  43cc70:	mov    dh,0xb9
  43cc72:	retf   0xc697
  43cc75:	inc    esi
  43cc76:	dec    eax
  43cc77:	mov    esp,ebx
  43cc79:	sub    cl,dh
  43cc7b:	(bad)  
  43cc7c:	lods   al,BYTE PTR ds:[esi]
  43cc7d:	daa    
  43cc7e:	cli    
  43cc7f:	push   edi
  43cc80:	ret    0x5c47
  43cc83:	pusha  
  43cc84:	mov    ds:0x59214be6,eax
  43cc89:	dec    edi
  43cc8a:	xchg   ebx,eax
  43cc8b:	fdivr  st(1),st
  43cc8d:	jl     0x43ccf7
  43cc8f:	gs cmp al,0x70
  43cc92:	xchg   ecx,eax
  43cc93:	xor    eax,0xd6a8075
  43cc98:	adc    al,0xc
  43cc9a:	inc    edx
  43cc9b:	mov    WORD PTR [esi],fs
  43cc9d:	mov    al,ds:0xa5fe26d9
  43cca2:	sub    dh,BYTE PTR [edx]
  43cca4:	jns    0x43ccb1
  43cca6:	in     eax,0x26
  43cca8:	rol    BYTE PTR [ebx-0x2],0xc3
  43ccac:	adc    ebp,DWORD PTR es:[edx-0x7d468803]
  43ccb3:	in     al,dx
  43ccb4:	aad    0x1e
  43ccb6:	pop    ecx
  43ccb7:	cmp    dh,BYTE PTR [edx-0x4905fd57]
  43ccbd:	pop    esi
  43ccbe:	lods   eax,DWORD PTR ds:[esi]
  43ccbf:	adc    eax,0x3f93b01c
  43ccc4:	ss pop esp
  43ccc6:	popa   
  43ccc7:	xchg   BYTE PTR [esi+0x39489f10],dh
  43cccd:	les    ecx,FWORD PTR [esi]
  43cccf:	jns    0x43cce3
  43ccd1:	mov    DWORD PTR [edi],0x8e8b1c1
  43ccd7:	push   DWORD PTR [eax+0x2b18ed9f]
  43ccdd:	jne    0x43cd45
  43ccdf:	and    al,BYTE PTR [ecx]
  43cce1:	xlat   BYTE PTR ds:[ebx]
  43cce2:	jmp    0xae42:0x54598868
  43cce9:	std    
  43ccea:	stos   DWORD PTR es:[edi],eax
  43cceb:	mov    edi,DWORD PTR [esi+eax*4+0x70]
  43ccef:	cmp    bl,al
  43ccf1:	inc    esp
  43ccf2:	ret    0x2e0b
  43ccf5:	test   DWORD PTR [edx],esi
  43ccf7:	popf   
  43ccf8:	inc    ecx
  43ccf9:	mov    dh,BYTE PTR [esi+0x4876e2a9]
  43ccff:	xor    dh,ch
  43cd01:	rol    BYTE PTR ds:0xd3f96ae0,0x64
  43cd08:	out    0xcb,eax
  43cd0a:	dec    edx
  43cd0b:	add    DWORD PTR [ebx+edi*2],edx
  43cd0e:	into   
  43cd0f:	adc    eax,0xde43de72
  43cd14:	xchg   ebp,eax
  43cd15:	push   eax
  43cd16:	inc    edi
  43cd17:	or     al,0x10
  43cd19:	adc    al,0x20
  43cd1b:	daa    
  43cd1c:	jle    0x43cd95
  43cd1e:	mov    edx,ebx
  43cd20:	shr    ecx,cl
  43cd22:	hlt    
  43cd23:	cmc    
  43cd24:	sar    BYTE PTR [ecx+0x486580a8],0xfd
  43cd2b:	loop   0x43cd78
  43cd2d:	nop
  43cd2e:	xor    al,0x29
  43cd30:	lock jnp 0x43cd4c
  43cd33:	jl     0x43cd74
  43cd35:	scas   al,BYTE PTR es:[edi]
  43cd36:	add    bl,BYTE PTR [edi+0x15]
  43cd39:	imul   ebx,DWORD PTR ds:0x23036faa,0x17b92786
  43cd43:	adc    DWORD PTR [ecx+eax*1-0x7e],esp
  43cd47:	sbb    edi,DWORD PTR [edi+0x3e]
  43cd4a:	dec    edx
  43cd4b:	add    BYTE PTR [ecx+eax*8],cl
  43cd4e:	ficomp WORD PTR [ebx+0x3]
  43cd51:	mov    esi,0x50c4bd8f
  43cd56:	das    
  43cd57:	inc    ebx
  43cd58:	inc    ebp
  43cd59:	rcl    eax,1
  43cd5b:	jo     0x43cd2a
  43cd5d:	mov    bl,0x2e
  43cd5f:	lahf   
  43cd60:	mov    ah,0x4
  43cd62:	pusha  
  43cd63:	sub    ebx,ecx
  43cd65:	xor    dh,dl
  43cd67:	mov    edx,0x79b66ce
  43cd6c:	sbb    esp,ecx
  43cd6e:	(bad)  
  43cd6f:	xchg   ebp,eax
  43cd70:	inc    ebx
  43cd71:	call   0xb2153203
  43cd76:	sub    edx,eax
  43cd78:	jmp    0x70058b8d
  43cd7d:	inc    esp
  43cd7e:	lods   eax,DWORD PTR ds:[esi]
  43cd7f:	lods   al,BYTE PTR ds:[esi]
  43cd80:	xchg   esp,eax
  43cd81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cd82:	(bad)  
  43cd83:	xor    eax,DWORD PTR [eax]
  43cd85:	mov    ch,0xb4
  43cd87:	retf   0x50ff
  43cd8a:	inc    esi
  43cd8b:	popf   
  43cd8c:	jne    0x43cdb5
  43cd8e:	sbb    al,0x13
  43cd90:	enter  0x8e95,0x51
  43cd94:	repnz xor al,0xa8
  43cd97:	inc    ecx
  43cd98:	dec    eax
  43cd99:	pusha  
  43cd9a:	and    eax,0xfd88f5af
  43cd9f:	in     eax,0x89
  43cda1:	cdq    
  43cda2:	xor    BYTE PTR [ebx],0x60
  43cda5:	inc    eax
  43cda6:	mov    BYTE PTR [edx-0x5e],ch
  43cda9:	rcl    BYTE PTR [eax+0x52],0x94
  43cdad:	pop    ebx
  43cdae:	outs   dx,BYTE PTR ds:[esi]
  43cdaf:	ret    
  43cdb0:	push   esp
  43cdb1:	push   ss
  43cdb2:	xor    DWORD PTR [ebp+0x64bf1905],edx
  43cdb8:	jp     0x43cd4e
  43cdba:	fcomi  st,st(5)
  43cdbc:	xlat   BYTE PTR ds:[ebx]
  43cdbd:	out    dx,al
  43cdbe:	xchg   edi,eax
  43cdbf:	neg    DWORD PTR [ecx]
  43cdc1:	mov    ds:0x41ad8eb6,eax
  43cdc6:	jne    0x43cd4a
  43cdc8:	xchg   ebp,eax
  43cdc9:	or     bl,BYTE PTR [edi+0x73]
  43cdcc:	sbb    esp,DWORD PTR [ebp-0x72]
  43cdcf:	cmp    DWORD PTR [ecx-0x3a],eax
  43cdd2:	cmp    DWORD PTR [edx],eax
  43cdd4:	out    0xe3,al
  43cdd6:	mov    al,0x4c
  43cdd8:	addr16 cld 
  43cdda:	adc    BYTE PTR [eax+0x53abdb13],cl
  43cde0:	pop    ebp
  43cde1:	int    0x85
  43cde3:	xor    BYTE PTR [edx+esi*4-0xf5ca8de],cl
  43cdea:	mov    ds:0xc2f4d9aa,al
  43cdef:	inc    edi
  43cdf0:	add    eax,DWORD PTR [esi]
  43cdf2:	stc    
  43cdf3:	std    
  43cdf4:	call   0xfaf790c7
  43cdf9:	mov    ebx,0x4c7d148c
  43cdfe:	jle    0x43ce6c
  43ce00:	or     BYTE PTR [eax],ah
  43ce02:	xchg   ebp,eax
  43ce03:	or     esp,DWORD PTR ds:0xe76ec8ae
  43ce09:	loopne 0x43ce10
  43ce0b:	xchg   edx,eax
  43ce0c:	mov    edi,0x6f8207c5
  43ce11:	pop    edi
  43ce12:	jmp    0x43ce47
  43ce14:	pop    ds
  43ce15:	add    dh,BYTE PTR [eax]
  43ce17:	jo     0x43ce35
  43ce19:	adc    al,0x70
  43ce1b:	jecxz  0x43cdc1
  43ce1d:	or     DWORD PTR [ebx],esi
  43ce1f:	enter  0x4dc2,0x10
  43ce23:	pop    ss
  43ce24:	jg     0x43ce22
  43ce26:	or     DWORD PTR [edi-0x78],ebx
  43ce29:	imul   esp,DWORD PTR [ecx-0x6a0991fe],0xfffffff7
  43ce30:	xchg   edx,eax
  43ce31:	add    al,BYTE PTR [eax+0x0]
  43ce34:	inc    esi
  43ce35:	(bad)  
  43ce36:	sar    DWORD PTR [edx+0x72],cl
  43ce39:	sbb    BYTE PTR [ebx],ch
  43ce3b:	aas    
  43ce3c:	imul   edi,DWORD PTR [eax+0x57fa6712],0x4b69fb06
  43ce46:	cli    
  43ce47:	ret    0x292d
  43ce4a:	xor    BYTE PTR [ebx-0x340dbe03],dh
  43ce50:	jmp    0x4df9e25c
  43ce55:	add    eax,DWORD PTR [ebx]
  43ce57:	sub    al,0x27
  43ce59:	add    dl,BYTE PTR [esi+0x44]
  43ce5c:	push   ss
  43ce5d:	pop    ebp
  43ce5e:	test   BYTE PTR [ebp*8-0x1963a0ae],al
  43ce65:	cs xor al,0xa7
  43ce68:	mov    edi,0xb052723d
  43ce6d:	push   ebx
  43ce6e:	jb     0x43ceb8
  43ce70:	and    dh,BYTE PTR [edi+0x11]
  43ce73:	mov    BYTE PTR [esi],ah
  43ce75:	sti    
  43ce76:	mov    esp,0xba180ca6
  43ce7b:	jmp    0x43ce42
  43ce7d:	sub    edx,DWORD PTR [ebx-0x1c]
  43ce80:	inc    esi
  43ce81:	out    dx,eax
  43ce82:	cmp    al,0xd3
  43ce84:	and    al,0xba
  43ce86:	mov    dh,0xb9
  43ce88:	push   eax
  43ce89:	(bad)  
  43ce8a:	adc    al,0x12
  43ce8c:	enter  0x13f8,0x58
  43ce90:	shl    DWORD PTR fs:[ebx-0x35],1
  43ce94:	(bad)  
  43ce95:	jmp    0x43ce34
  43ce97:	sub    eax,0x342d6562
  43ce9c:	sbb    ch,BYTE PTR [ebp-0x3f]
  43ce9f:	outs   dx,DWORD PTR ds:[esi]
  43cea0:	pushf  
  43cea1:	pop    ebp
  43cea2:	shr    BYTE PTR [ebp+esi*1+0x531e3438],1
  43cea9:	jb     0x43cf07
  43ceab:	jno    0x43ceb1
  43cead:	(bad)  
  43ceae:	mov    ecx,0x5fa8fa4c
  43ceb3:	or     eax,0x7ba72799
  43ceb8:	lods   al,BYTE PTR ds:[esi]
  43ceb9:	cwde   
  43ceba:	push   DWORD PTR [esi]
  43cebc:	(bad)  
  43cebd:	jo     0x43cf15
  43cebf:	loope  0x43cedc
  43cec1:	jecxz  0x43ce49
  43cec3:	add    ah,ch
  43cec5:	inc    ebx
  43cec6:	mov    cl,0x30
  43cec8:	mov    bl,0x47
  43ceca:	xor    eax,0x9d484dcc
  43cecf:	jg     0x43cecd
  43ced1:	jmp    0x43ce5d
  43ced3:	cdq    
  43ced4:	cld    
  43ced5:	les    edi,FWORD PTR [ecx+edx*1-0x107a2e2c]
  43cedc:	mov    dh,BYTE PTR [ebx-0x45]
  43cedf:	idiv   dl
  43cee1:	sbb    eax,eax
  43cee3:	mov    edx,0xe40305cd
  43cee8:	pop    ebp
  43cee9:	sbb    al,0x27
  43ceeb:	xchg   ebp,eax
  43ceec:	mov    ch,0x3
  43ceee:	les    esi,FWORD PTR [edi+0x5b84710]
  43cef4:	fnstcw WORD PTR [ebx]
  43cef6:	inc    BYTE PTR [esi]
  43cef8:	cmp    eax,DWORD PTR [edi]
  43cefa:	mov    dh,0xcf
  43cefc:	xchg   esp,eax
  43cefd:	jns    0x43cec9
  43ceff:	retf   
  43cf00:	jge    0x43cf37
  43cf02:	hlt    
  43cf03:	enter  0x8046,0xd8
  43cf07:	in     al,0xe3
  43cf09:	inc    esi
  43cf0a:	not    ecx
  43cf0c:	popf   
  43cf0d:	jmp    FWORD PTR [ebx]
  43cf0f:	int    0x7c
  43cf11:	and    esi,DWORD PTR ss:[esi-0x5a]
  43cf15:	push   ebp
  43cf16:	std    
  43cf17:	jno    0x43cf23
  43cf19:	and    dh,ch
  43cf1b:	inc    ebx
  43cf1c:	mov    ebx,0x3b21372c
  43cf21:	mov    ah,0x65
  43cf23:	xchg   edx,eax
  43cf24:	cs xchg eax,esi
  43cf27:	test   eax,0xb56dc7dc
  43cf2c:	cmp    ch,dh
  43cf2e:	xchg   ecx,eax
  43cf2f:	std    
  43cf30:	cmp    dl,ch
  43cf32:	leave  
  43cf33:	int3   
  43cf34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cf35:	add    DWORD PTR [ecx],0xfffffffe
  43cf38:	cmc    
  43cf39:	push   ebp
  43cf3a:	rol    ebp,0xb6
  43cf3d:	leave  
  43cf3e:	and    DWORD PTR ds:0x49b7189,ebx
  43cf44:	jb     0x43cf6a
  43cf46:	fwait
  43cf47:	pop    ecx
  43cf48:	fs jbe 0x43cf02
  43cf4b:	into   
  43cf4c:	push   edx
  43cf4d:	mov    dl,0xa
  43cf4f:	nop
  43cf50:	push   esp
  43cf51:	mov    edi,0x50761725
  43cf56:	push   es
  43cf57:	and    al,0x3b
  43cf59:	mov    al,ds:0x2ac9cf23
  43cf5e:	jg     0x43ceec
  43cf60:	fadd   st(5),st
  43cf62:	inc    esi
  43cf63:	(bad)  
  43cf64:	retf   
  43cf65:	or     al,0x36
  43cf67:	loopne 0x43cfd3
  43cf69:	mov    ds:0x202726ed,al
  43cf6e:	inc    ecx
  43cf6f:	xor    ah,ch
  43cf71:	pusha  
  43cf72:	and    eax,0x1db8709d
  43cf77:	pop    es
  43cf78:	mov    eax,0xfb27ad4b
  43cf7d:	xor    al,BYTE PTR [edi-0x6d]
  43cf80:	inc    ecx
  43cf81:	ret    0x55c2
  43cf84:	jb     0x43cfff
  43cf86:	iret   
  43cf87:	ds ss ins DWORD PTR es:[edi],dx
  43cf8a:	idiv   DWORD PTR [edx-0x4d]
  43cf8d:	lods   eax,DWORD PTR ds:[esi]
  43cf8e:	ja     0x43cf15
  43cf90:	lahf   
  43cf91:	pop    ecx
  43cf92:	pop    ss
  43cf93:	inc    ecx
  43cf94:	cdq    
  43cf95:	repnz mov bl,0xc
  43cf98:	xor    eax,0x4184f67e
  43cf9d:	dec    ebx
  43cf9e:	dec    edi
  43cf9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cfa0:	nop
  43cfa1:	mov    cl,0xab
  43cfa3:	mov    ecx,0x5182c37c
  43cfa8:	in     eax,dx
  43cfa9:	pop    ds
  43cfaa:	je     0x43cfb6
  43cfac:	push   edx
  43cfad:	mov    bh,0x18
  43cfaf:	pop    ebx
  43cfb0:	stc    
  43cfb1:	test   DWORD PTR ds:[esi],esi
  43cfb4:	xchg   edi,eax
  43cfb5:	addr16 and eax,0xf8ea5a55
  43cfbb:	ret    0x77e3
  43cfbe:	test   eax,0x87f6d89d
  43cfc3:	repz test edi,ebp
  43cfc6:	mov    eax,DWORD PTR [esi+0x7f]
  43cfc9:	mov    ds:0x529d0695,al
  43cfce:	jb     0x43cf87
  43cfd0:	mov    edi,0xfcd6ecf9
  43cfd5:	sbb    BYTE PTR [eax+0x5df66536],dh
  43cfdb:	jp     0x43d007
  43cfdd:	clc    
  43cfde:	sbb    eax,0xc355104c
  43cfe3:	pop    esp
  43cfe4:	cwde   
  43cfe5:	repz jmp 0x43d058
  43cfe8:	cmp    ebp,eax
  43cfea:	out    0xa4,al
  43cfec:	in     al,0x9c
  43cfee:	inc    edx
  43cfef:	push   edx
  43cff0:	(bad)  
  43cff1:	xchg   BYTE PTR [ebx+0x4f8af470],ah
  43cff7:	push   ebx
  43cff8:	enter  0x4b0e,0x2d
  43cffc:	lods   eax,DWORD PTR ds:[esi]
  43cffd:	in     al,dx
  43cffe:	inc    ecx
  43cfff:	inc    esp
  43d000:	push   0xffffffe3
  43d002:	mov    ecx,0x68650afc
  43d007:	hlt    
  43d008:	pop    ebx
  43d009:	mov    esp,DWORD PTR [edi-0xbe439aa]
  43d00f:	(bad)  
  43d010:	sbb    al,0x1
  43d012:	adc    eax,0xe05f96bd
  43d017:	ins    DWORD PTR es:[edi],dx
  43d018:	mov    ebx,0x46c28244
  43d01d:	dec    eax
  43d01e:	es stc 
  43d020:	push   cs
  43d021:	stos   BYTE PTR es:[edi],al
  43d022:	out    dx,eax
  43d023:	pop    ebp
  43d024:	xchg   ebp,eax
  43d025:	push   eax
  43d026:	outs   dx,DWORD PTR cs:[esi]
  43d028:	fadd   DWORD PTR [ebx+0x30]
  43d02b:	dec    edi
  43d02c:	push   edx
  43d02d:	cmp    BYTE PTR [ebp-0x48],0x8a
  43d031:	cmp    al,0xb0
  43d033:	adc    ebp,DWORD PTR [esi]
  43d035:	cwde   
  43d036:	adc    al,0x28
  43d038:	jge    0x43d019
  43d03a:	retf   0x97
  43d03d:	dec    ebx
  43d03e:	stos   BYTE PTR es:[edi],al
  43d03f:	jno    0x43cfdb
  43d041:	mov    ebp,0xa04d765c
  43d046:	dec    esi
  43d047:	push   es
  43d048:	mov    ds:0x170c9a84,eax
  43d04d:	fadd   QWORD PTR [edi]
  43d04f:	mov    eax,ds:0x9a392984
  43d054:	sahf   
  43d055:	or     bh,dh
  43d057:	dec    ebp
  43d058:	or     eax,0xa7268299
  43d05d:	cmp    ch,bh
  43d05f:	loope  0x43d046
  43d061:	dec    edx
  43d062:	push   ds
  43d063:	sub    al,0xf7
  43d065:	ror    DWORD PTR [ebp-0x46e766e5],0x3b
  43d06c:	je     0x43d03e
  43d06e:	pop    ecx
  43d06f:	jge    0x43d08f
  43d071:	ret    0xd8ef
  43d074:	loopne 0x43d07c
  43d076:	(bad)  
  43d078:	cld    
  43d079:	inc    esp
  43d07a:	fld    TBYTE PTR [ebp+0x4b]
  43d07d:	(bad)  
  43d07e:	fs add eax,0x43f0cec2
  43d084:	cmp    eax,0x2ead8d00
  43d089:	xchg   ebx,eax
  43d08a:	inc    edi
  43d08b:	pop    ebx
  43d08c:	push   eax
  43d08d:	int3   
  43d08e:	nop
  43d08f:	or     ecx,DWORD PTR [ecx+ebp*1+0x791b0d06]
  43d096:	retf   0x4a1a
  43d099:	stc    
  43d09a:	jo     0x43d040
  43d09c:	ror    BYTE PTR [eax+0x4fcb124f],1
  43d0a2:	jl     0x43d038
  43d0a4:	lock xchg esi,eax
  43d0a6:	push   0x855ded4f
  43d0ab:	sar    BYTE PTR [eax-0x51a4fb53],0xca
  43d0b2:	sbb    DWORD PTR [edi+edx*4],ecx
  43d0b5:	(bad)  
  43d0b6:	mov    ebx,0xa05314ad
  43d0bb:	push   esi
  43d0bc:	jne    0x43d124
  43d0be:	leave  
  43d0bf:	mov    esi,0x1c0f4559
  43d0c4:	push   es
  43d0c5:	jbe    0x43d0e4
  43d0c7:	sub    eax,0x78edafb8
  43d0cc:	les    ecx,FWORD PTR [edi+0x63]
  43d0cf:	mov    ebx,0x27bdc432
  43d0d4:	mov    ah,0xb2
  43d0d6:	xor    BYTE PTR [esi-0x56b77371],al
  43d0dc:	cld    
  43d0dd:	sub    bh,bh
  43d0df:	addr16 adc esp,eax
  43d0e2:	adc    eax,0x77f689cc
  43d0e7:	mov    dl,0xd1
  43d0e9:	js     0x43d071
  43d0eb:	sub    al,0xf5
  43d0ed:	inc    edi
  43d0ee:	shl    BYTE PTR [ecx-0x30],0xe0
  43d0f2:	js     0x43d16c
  43d0f4:	inc    esp
  43d0f5:	mov    al,0x72
  43d0f7:	push   0x15
  43d0f9:	sub    al,0x5f
  43d0fb:	pop    ds
  43d0fc:	out    dx,eax
  43d0fd:	cld    
  43d0fe:	mov    esp,0xd24b463d
  43d103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d104:	and    BYTE PTR [eax+0x10],ch
  43d107:	call   0xa6ecbde3
  43d10c:	adc    DWORD PTR [ebx],esp
  43d10e:	popa   
  43d10f:	(bad)  
  43d110:	push   edx
  43d111:	loop   0x43d106
  43d113:	test   BYTE PTR [edx+0x5f],bl
  43d116:	imul   ebx,edi,0x2133c9e5
  43d11c:	mov    esp,0x68f7dfe2
  43d121:	cdq    
  43d122:	sbb    cl,BYTE PTR [ecx+0x64948d0c]
  43d128:	mov    al,ds:0x98761052
  43d12d:	sbb    ah,cl
  43d12f:	mov    ?,WORD PTR [edi+0x4b1af602]
  43d135:	es push es
  43d137:	js     0x43d139
  43d139:	cli    
  43d13a:	xor    ecx,DWORD PTR [eax-0x3b]
  43d13d:	inc    ebx
  43d13e:	nop
  43d13f:	jl     0x43d11a
  43d141:	jnp    0x43d154
  43d143:	push   ebp
  43d144:	in     eax,dx
  43d145:	shl    DWORD PTR ds:0x943be2f3,0x47
  43d14c:	xlat   BYTE PTR ds:[ebx]
  43d14d:	sahf   
  43d14e:	in     al,dx
  43d14f:	push   es
  43d150:	sub    al,0x3e
  43d152:	push   esp
  43d153:	jns    0x43d1bf
  43d155:	retf   0xce4d
  43d158:	push   eax
  43d159:	fcmovbe st,st(1)
  43d15b:	mov    esp,0x64b65260
  43d160:	push   esi
  43d161:	nop
  43d162:	mov    dl,BYTE PTR ds:0x700ce54f
  43d168:	stos   BYTE PTR es:[edi],al
  43d169:	mov    al,0xea
  43d16b:	jne    0x43d173
  43d16d:	dec    esi
  43d16e:	sbb    al,0x9b
  43d170:	iret   
  43d171:	xlat   BYTE PTR ds:[ebx]
  43d172:	jnp    0x43d1c2
  43d174:	xchg   edx,eax
  43d175:	sahf   
  43d176:	pop    ds
  43d177:	imul   esi,DWORD PTR [ebp-0x3ca8d430],0xffffffab
  43d17e:	fnstcw WORD PTR [esi-0x3]
  43d181:	dec    esp
  43d182:	pop    ebx
  43d183:	das    
  43d184:	test   BYTE PTR fs:[esi-0x2021dc92],0xf7
  43d18c:	push   0xfffffff4
  43d18e:	xor    eax,0x253d9e97
  43d193:	jg     0x43d1bc
  43d195:	jge    0x43d18d
  43d197:	cs push ebp
  43d199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d19a:	jmp    0x43d14c
  43d19c:	retf   0x5053
  43d19f:	retf   0x493
  43d1a2:	xchg   dh,cl
  43d1a4:	cs mov ecx,0x2fd33971
  43d1aa:	mov    DWORD PTR [edi+0x57ee229f],ecx
  43d1b0:	call   0xab68:0x3388ea59
  43d1b7:	xor    DWORD PTR ss:[ebx-0x68],esi
  43d1bb:	ins    DWORD PTR es:[edi],dx
  43d1bc:	ret    
  43d1bd:	and    eax,0xf3874f08
  43d1c2:	mov    ah,0xce
  43d1c4:	and    esi,DWORD PTR [eax]
  43d1c6:	fcomp  QWORD PTR [ecx+ecx*4-0x52]
  43d1ca:	inc    esp
  43d1cb:	fld    DWORD PTR [edi+0x4f]
  43d1ce:	lock imul edx,edi,0x3d7025fe
  43d1d5:	inc    edx
  43d1d6:	les    ebx,FWORD PTR [edi-0x59060b4a]
  43d1dc:	pop    ss
  43d1dd:	add    edi,edi
  43d1df:	pop    edi
  43d1e0:	scas   eax,DWORD PTR es:[edi]
  43d1e1:	sub    BYTE PTR [esi-0x52],ch
  43d1e4:	sbb    DWORD PTR [eax+0x38e5d98],esi
  43d1ea:	xchg   esp,ecx
  43d1ec:	test   BYTE PTR [ecx+0x4bdb0651],bl
  43d1f2:	test   al,0x15
  43d1f4:	retf   0xdc7
  43d1f7:	sbb    eax,0xf5d9472a
  43d1fc:	jecxz  0x43d1a8
  43d1fe:	dec    ebp
  43d1ff:	cmc    
  43d200:	mov    ds:0xacf91fbb,al
  43d205:	mov    eax,ds:0xacb5c913
  43d20a:	mov    ch,0x87
  43d20c:	mov    edi,0xe64ba14c
  43d211:	push   eax
  43d212:	xchg   ebp,eax
  43d213:	xchg   esp,eax
  43d214:	popa   
  43d215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d216:	and    esp,DWORD PTR [ebx+0x2b622abe]
  43d21c:	sbb    BYTE PTR [eax],al
  43d21e:	out    dx,eax
  43d21f:	retf   
  43d220:	outs   dx,DWORD PTR ds:[esi]
  43d221:	(bad)  
  43d222:	pop    ds
  43d223:	jbe    0x43d1fd
  43d225:	push   esp
  43d226:	jae    0x43d229
  43d228:	jge    0x43d1db
  43d22a:	mov    ebx,DWORD PTR [edi]
  43d22c:	jo     0x43d24a
  43d22e:	push   ebp
  43d22f:	not    DWORD PTR [edi+eiz*1+0x5421fee]
  43d236:	mov    ah,BYTE PTR [edx+0x3f]
  43d239:	cmp    esi,DWORD PTR [esi+0x7b1a1415]
  43d23f:	test   eax,0x529d0cd0
  43d244:	lods   al,BYTE PTR ds:[esi]
  43d245:	xchg   edi,eax
  43d246:	dec    esp
  43d247:	call   0x90a9c3ba
  43d24c:	(bad)  [ebx]
  43d24e:	inc    ebp
  43d24f:	(bad)  
  43d250:	fisubr DWORD PTR [eax]
  43d252:	daa    
  43d253:	pushf  
  43d254:	inc    edx
  43d255:	mov    dl,0xa2
  43d257:	or     al,0xeb
  43d259:	fdiv   DWORD PTR [ecx]
  43d25b:	loope  0x43d27f
  43d25d:	ss push 0xc428ac20
  43d263:	dec    esp
  43d264:	jo     0x43d22d
  43d266:	aam    0x42
  43d268:	sub    eax,0xba460486
  43d26d:	or     bl,BYTE PTR [esi]
  43d26f:	inc    ebp
  43d270:	rcr    cl,0x31
  43d273:	dec    esp
  43d274:	xlat   BYTE PTR ds:[ebx]
  43d275:	sub    eax,0xa3b1f39e
  43d27a:	int3   
  43d27b:	ds cmp ebp,esp
  43d27e:	int    0x80
  43d280:	ins    BYTE PTR es:[edi],dx
  43d281:	push   eax
  43d282:	sub    BYTE PTR [esi-0x46e71c4f],ch
  43d288:	lahf   
  43d289:	dec    esp
  43d28a:	xchg   ebp,eax
  43d28b:	gs pushf 
  43d28d:	stos   DWORD PTR es:[edi],eax
  43d28e:	lds    edi,FWORD PTR [eax+0x6c562a64]
  43d294:	sbb    al,0xbd
  43d296:	into   
  43d297:	jmp    0x8075:0xefbf7f8c
  43d29e:	int    0x54
  43d2a0:	int3   
  43d2a1:	or     edx,eax
  43d2a3:	je     0x43d265
  43d2a5:	inc    esi
  43d2a6:	or     esi,edx
  43d2a8:	jmp    0x4e3e:0x7ce01b9e
  43d2af:	jbe    0x43d316
  43d2b1:	pop    ebx
  43d2b2:	xchg   esp,eax
  43d2b3:	jg     0x43d2d6
  43d2b5:	or     BYTE PTR ds:0xbace41ff,ah
  43d2bb:	iret   
  43d2bc:	sub    DWORD PTR [edx-0x70],ecx
  43d2bf:	ret    
  43d2c0:	push   edi
  43d2c1:	out    0x93,al
  43d2c3:	dec    esp
  43d2c4:	out    dx,eax
  43d2c5:	sub    eax,0xa5d51e13
  43d2ca:	push   ebp
  43d2cb:	add    DWORD PTR [eax+0x7e],esi
  43d2ce:	cli    
  43d2cf:	loop   0x43d267
  43d2d1:	cdq    
  43d2d2:	push   eax
  43d2d3:	cwde   
  43d2d4:	fadd   st,st(0)
  43d2d6:	and    al,0x22
  43d2d8:	and    eax,0xc8dd1cf9
  43d2dd:	xor    DWORD PTR [ebp-0x32],0x11ecf896
  43d2e4:	add    ebp,ebp
  43d2e6:	retf   
  43d2e7:	sar    DWORD PTR [edx+0x56],0xff
  43d2eb:	shr    ch,0xaf
  43d2ee:	jmp    0x43d2c7
  43d2f0:	jnp    0x43d342
  43d2f2:	out    0x87,eax
  43d2f4:	int3   
  43d2f5:	adc    BYTE PTR [ebx-0x19],al
  43d2f8:	adc    DWORD PTR [esi+0x24],esi
  43d2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d2fc:	sar    bh,cl
  43d2fe:	mov    BYTE PTR [ebx+eax*2-0x303b6f7e],ah
  43d305:	aaa    
  43d306:	imul   edi,ebx,0xc2c5370e
  43d30c:	hlt    
  43d30d:	xchg   ebp,eax
  43d30e:	popf   
  43d30f:	ror    ebp,1
  43d311:	pushf  
  43d312:	aaa    
  43d313:	cmp    DWORD PTR [edi],eax
  43d315:	mov    DWORD PTR [ecx-0x60],ebp
  43d318:	bound  ebx,QWORD PTR [esi-0x2bb25273]
  43d31e:	gs fs out 0x83,eax
  43d322:	add    DWORD PTR [ecx+0x1c],0xf2f681e8
  43d329:	sub    al,0xef
  43d32b:	ja     0x43d396
  43d32d:	pop    ss
  43d32e:	cmp    eax,esi
  43d330:	adc    dh,dl
  43d332:	mov    WORD PTR [eax],ss
  43d334:	add    dh,ah
  43d336:	or     BYTE PTR [ebp+0x6f],dh
  43d339:	mov    dh,0xe4
  43d33b:	imul   ebp,DWORD PTR [esi+eax*4],0xb275a3a0
  43d342:	push   ds
  43d343:	jbe    0x43d393
  43d345:	inc    ecx
  43d346:	add    BYTE PTR [edx-0x1aefa7b9],al
  43d34c:	cld    
  43d34d:	dec    ecx
  43d34e:	pop    eax
  43d34f:	cdq    
  43d350:	fisttp QWORD PTR [eax-0x25]
  43d353:	ins    DWORD PTR es:[edi],dx
  43d354:	and    bl,ch
  43d356:	les    ebx,FWORD PTR [esi+0x68]
  43d359:	mov    al,ds:0xcaef44bc
  43d35e:	leave  
  43d35f:	outs   dx,BYTE PTR ds:[esi]
  43d360:	inc    eax
  43d361:	push   es
  43d362:	fs fs pusha 
  43d365:	jne    0x43d2fe
  43d367:	push   ebx
  43d368:	repnz fimul DWORD PTR [edi+ebp*2]
  43d36c:	push   esp
  43d36d:	inc    ebp
  43d36e:	mov    edi,0x44d3ca85
  43d373:	stos   BYTE PTR es:[edi],al
  43d374:	outs   dx,DWORD PTR ds:[esi]
  43d375:	lock sahf 
  43d377:	mov    DWORD PTR [edi-0x466f863d],esi
  43d37d:	xor    eax,0x948143f7
  43d382:	dec    edx
  43d383:	(bad)  
  43d384:	not    edx
  43d386:	cmc    
  43d387:	jmp    0x43d3cc
  43d389:	inc    ecx
  43d38a:	ror    BYTE PTR [ebx-0x6fc6d84c],cl
  43d390:	add    al,0xe1
  43d392:	jg     0x43d411
  43d394:	and    eax,0x739081f4
  43d399:	mov    dh,0xde
  43d39b:	inc    edx
  43d39c:	inc    edx
  43d39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d39e:	sub    edx,ebx
  43d3a0:	xchg   ecx,eax
  43d3a1:	(bad)  
  43d3a2:	jne    0x43d404
  43d3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d3a5:	dec    edx
  43d3a6:	cmp    bh,BYTE PTR [esi]
  43d3a8:	iret   
  43d3a9:	fnstenv [ebx]
  43d3ab:	mov    DWORD PTR ss:[ecx],esi
  43d3ae:	inc    edx
  43d3af:	cld    
  43d3b0:	jae    0x43d355
  43d3b2:	ror    dh,1
  43d3b4:	pusha  
  43d3b5:	add    edi,DWORD PTR [edx]
  43d3b7:	int    0x6b
  43d3b9:	dec    ebp
  43d3ba:	sahf   
  43d3bb:	mov    al,0x44
  43d3bd:	out    0xd6,al
  43d3bf:	jge    0x43d350
  43d3c1:	add    al,0x32
  43d3c3:	test   edi,0x77296e22
  43d3c9:	add    eax,0x9a957dae
  43d3ce:	jg     0x43d416
  43d3d0:	inc    ecx
  43d3d1:	jecxz  0x43d40d
  43d3d3:	je     0x43d3f0
  43d3d5:	push   ebp
  43d3d6:	popf   
  43d3d7:	and    al,0xb4
  43d3d9:	sub    BYTE PTR [eax+ebx*1-0x5d1ed7f5],al
  43d3e0:	adc    DWORD PTR ss:[esi-0x7da47d61],ecx
  43d3e7:	nop
  43d3e8:	add    al,0x30
  43d3ea:	add    al,BYTE PTR [edx+0x625f364]
  43d3f0:	cli    
  43d3f1:	xor    eax,0x9a130e92
  43d3f6:	and    eax,0x406d34b4
  43d3fb:	cmp    eax,0x3b0720b5
  43d400:	iret   
  43d401:	cmp    eax,0x56098e3f
  43d406:	sbb    cl,BYTE PTR [edi-0x63]
  43d409:	arpl   dx,di
  43d40b:	adc    BYTE PTR [edx],dl
  43d40d:	(bad)
  43d411:	call   0x82ef06b2
  43d416:	dec    edi
  43d417:	adc    dl,BYTE PTR [edx-0x13]
  43d41a:	jnp    0x43d420
  43d41c:	call   0xcf4d:0x387fc0e8
  43d423:	dec    eax
  43d424:	jecxz  0x43d46b
  43d426:	scas   eax,DWORD PTR es:[edi]
  43d427:	cli    
  43d428:	cmp    BYTE PTR [edx],bh
  43d42a:	scas   eax,DWORD PTR es:[edi]
  43d42b:	(bad)  
  43d42c:	mov    ebx,0x53c371af
  43d431:	mov    cl,0xf4
  43d433:	popa   
  43d434:	int3   
  43d435:	xchg   BYTE PTR ds:0x87877318,al
  43d43b:	inc    edi
  43d43c:	into   
  43d43d:	jne    0x43d3e3
  43d43f:	dec    eax
  43d440:	mov    ebp,0x7f0af4ed
  43d445:	fld    DWORD PTR [edx+0x505381ba]
  43d44b:	stc    
  43d44c:	xor    al,0x7e
  43d44e:	pop    ecx
  43d44f:	jle    0x43d4a5
  43d451:	xchg   ebx,eax
  43d452:	mov    bl,0x7f
  43d454:	inc    eax
  43d455:	rol    BYTE PTR [edi+0x2925b16e],0x5d
  43d45c:	arpl   WORD PTR [ecx+0x6e],bp
  43d45f:	add    dl,BYTE PTR [ebx+0x4aeb2081]
  43d465:	mov    BYTE PTR [edx+eax*2-0x3c],al
  43d469:	sbb    eax,0xba94f33
  43d46e:	mov    esi,0x2da7ba17
  43d473:	mov    ebp,DWORD PTR [ebx+edi*1+0x29fe78dd]
  43d47a:	push   ds
  43d47b:	out    0x69,al
  43d47d:	test   BYTE PTR [ebp-0x5f],al
  43d480:	xchg   edx,eax
  43d481:	clc    
  43d482:	or     BYTE PTR [ebx-0x1a],ah
  43d485:	xor    DWORD PTR [ebx],ebp
  43d487:	mov    dl,0x75
  43d489:	call   0xc5d42d6
  43d48e:	jl     0x43d4bb
  43d490:	in     eax,0x65
  43d492:	cmp    al,0x23
  43d494:	mov    esp,0x3dee6042
  43d499:	retf   0x864e
  43d49c:	dec    esi
  43d49d:	xchg   ecx,eax
  43d49e:	sahf   
  43d49f:	mov    al,0x7f
  43d4a1:	(bad)  
  43d4a2:	pop    ebx
  43d4a3:	shl    DWORD PTR [eax],cl
  43d4a5:	(bad)  
  43d4a6:	loopne 0x43d445
  43d4a8:	push   esi
  43d4a9:	scas   eax,DWORD PTR es:[edi]
  43d4aa:	aaa    
  43d4ab:	outs   dx,DWORD PTR ds:[esi]
  43d4ac:	test   al,al
  43d4ae:	adc    eax,0xe0e440eb
  43d4b3:	daa    
  43d4b4:	inc    edx
  43d4b5:	jle    0x43d484
  43d4b7:	pop    esi
  43d4b8:	imul   esi,DWORD PTR [ecx],0x3b
  43d4bb:	cmp    dl,dh
  43d4bd:	(bad)  
  43d4be:	sbb    al,0x75
  43d4c0:	pop    edx
  43d4c1:	in     al,dx
  43d4c2:	xor    eax,0x8b80f434
  43d4c7:	cmp    DWORD PTR [edi-0x3b18472b],ebx
  43d4cd:	or     al,0x45
  43d4cf:	pop    ecx
  43d4d0:	scas   eax,DWORD PTR es:[edi]
  43d4d1:	aad    0xbe
  43d4d3:	push   es
  43d4d4:	mov    ds:0xadc04e50,al
  43d4d9:	inc    edx
  43d4da:	xchg   ebp,eax
  43d4db:	aas    
  43d4dc:	xchg   ecx,eax
  43d4dd:	js     0x43d45f
  43d4df:	xchg   BYTE PTR [ecx+0x85d9a84],bl
  43d4e5:	sub    al,BYTE PTR [eax]
  43d4e7:	pop    esi
  43d4e8:	xlat   BYTE PTR ds:[ebx]
  43d4e9:	aas    
  43d4ea:	xchg   edx,eax
  43d4eb:	cmp    DWORD PTR [edi],esp
  43d4ed:	mov    dl,0xd3
  43d4ef:	mov    esi,?
  43d4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d4f2:	inc    esp
  43d4f3:	cmc    
  43d4f4:	pop    es
  43d4f5:	jl     0x43d4a7
  43d4f7:	cmp    dh,dh
  43d4f9:	sub    BYTE PTR [ecx+0x4bb5eec8],dh
  43d4ff:	adc    ebx,DWORD PTR [ecx]
  43d501:	inc    edi
  43d502:	or     al,0xce
  43d504:	lahf   
  43d505:	cli    
  43d506:	out    0xe8,eax
  43d508:	jnp    0x43d49a
  43d50a:	sub    DWORD PTR [eax],edi
  43d50c:	repz jge 0x43d583
  43d50f:	fiadd  DWORD PTR [edi+0x7555e3fa]
  43d515:	repz pop edi
  43d517:	xchg   BYTE PTR [edi+0x47],cl
  43d51a:	vmptrld QWORD PTR [ebx-0x5b0bea00]
  43d521:	stos   BYTE PTR es:[edi],al
  43d522:	jge    0x43d4ce
  43d524:	inc    esp
  43d525:	xchg   edi,eax
  43d526:	call   0x5437:0x8343991
  43d52d:	test   DWORD PTR [edi],ebx
  43d52f:	repnz dec BYTE PTR [edi]
  43d532:	mov    edi,0xa04dc1e3
  43d537:	pop    edx
  43d538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d539:	and    eax,0xfbb43b7f
  43d53e:	cmp    esp,ecx
  43d540:	repnz in al,dx
  43d542:	iret   
  43d543:	sbb    al,BYTE PTR [edi+0x22]
  43d546:	popf   
  43d547:	test   al,0xe3
  43d549:	dec    ebx
  43d54a:	in     al,dx
  43d54b:	pop    esp
  43d54c:	into   
  43d54d:	adc    al,0xfb
  43d54f:	add    dh,BYTE PTR [ebx+0x2e]
  43d552:	sub    eax,0x68986e9a
  43d557:	xor    ebp,DWORD PTR [esi]
  43d559:	stos   BYTE PTR es:[edi],al
  43d55a:	add    al,0x7f
  43d55c:	mov    BYTE PTR [eax+eax*8],bh
  43d55f:	xor    DWORD PTR [ebx+eax*4+0x8],edx
  43d563:	mov    esp,0x6008f28e
  43d568:	or     eax,DWORD PTR [esi]
  43d56a:	sbb    DWORD PTR [ebp+0xc],eax
  43d56d:	xchg   edx,eax
  43d56e:	cmp    al,0xcd
  43d570:	pop    ecx
  43d571:	mov    esi,0xb9759522
  43d576:	xchg   BYTE PTR [edx+0xb],bl
  43d579:	icebp  
  43d57a:	jecxz  0x43d566
  43d57c:	inc    esp
  43d57d:	push   0x9f6680fe
  43d582:	push   eax
  43d583:	stc    
  43d584:	hlt    
  43d585:	xchg   edx,eax
  43d586:	mov    cl,0x1
  43d588:	push   bp
  43d58a:	loop   0x43d591
  43d58c:	lods   eax,DWORD PTR ds:[esi]
  43d58d:	sbb    al,ah
  43d58f:	cmp    DWORD PTR [ecx],eax
  43d591:	fs inc esi
  43d593:	sbb    al,0x4e
  43d595:	int    0xbf
  43d597:	pop    ss
  43d598:	stos   DWORD PTR es:[edi],eax
  43d599:	sub    DWORD PTR [ebp-0x53],esi
  43d59c:	hlt    
  43d59d:	dec    ebp
  43d59e:	sub    esi,0xfef22a56
  43d5a4:	xchg   edx,eax
  43d5a5:	xor    eax,edx
  43d5a7:	fdiv   st(6),st
  43d5a9:	nop
  43d5aa:	mov    DWORD PTR [ecx],ebp
  43d5ac:	pop    ebx
  43d5ad:	push   ss
  43d5ae:	aam    0x9
  43d5b0:	lea    eax,[ecx+eiz*2-0x21]
  43d5b4:	xchg   ebp,eax
  43d5b5:	xchg   edi,eax
  43d5b6:	(bad)  
  43d5b7:	in     al,dx
  43d5b8:	pushf  
  43d5b9:	enter  0x22de,0xaf
  43d5bd:	xchg   ebp,eax
  43d5be:	push   esi
  43d5bf:	sbb    DWORD PTR [edi+eiz*8+0x64d77f6c],eax
  43d5c6:	and    al,BYTE PTR [ebx-0x17]
  43d5c9:	jno    0x43d56c
  43d5cb:	dec    esi
  43d5cc:	mov    eax,ds:0xe0919f88
  43d5d1:	adc    BYTE PTR [edx+0x6e],ch
  43d5d4:	add    bl,BYTE PTR [ebx+0x56a0c389]
  43d5da:	ret    0x277c
  43d5dd:	xchg   ecx,eax
  43d5de:	xchg   edi,eax
  43d5df:	lods   eax,DWORD PTR ds:[esi]
  43d5e0:	stos   BYTE PTR es:[edi],al
  43d5e1:	cmp    bh,0xb7
  43d5e4:	nop
  43d5e5:	or     edi,DWORD PTR [ebx]
  43d5e7:	scas   eax,DWORD PTR es:[edi]
  43d5e8:	mov    cl,ah
  43d5ea:	mov    al,0x89
  43d5ec:	xchg   esi,eax
  43d5ed:	loopne 0x43d5f4
  43d5ef:	popf   
  43d5f0:	xchg   edx,eax
  43d5f1:	or     edx,edi
  43d5f3:	aaa    
  43d5f4:	mov    esi,0x23c7406e
  43d5f9:	pop    esi
  43d5fa:	xlat   BYTE PTR ds:[ebx]
  43d5fb:	jno    0x43d5c3
  43d5fd:	adc    BYTE PTR [ecx+ebx*1-0x22],al
  43d601:	push   esi
  43d602:	cmc    
  43d603:	dec    ebx
  43d604:	pop    eax
  43d605:	push   esi
  43d606:	pminsw mm5,QWORD PTR [esi+0x412c2383]
  43d60d:	imul   edi,esi,0x7df71d4b
  43d613:	pop    esp
  43d614:	inc    eax
  43d615:	xchg   edi,eax
  43d616:	cmc    
  43d617:	mov    edi,0xbd6c308a
  43d61c:	xchg   esp,eax
  43d61d:	jle    0x43d5d3
  43d61f:	xchg   dl,ah
  43d621:	cwde   
  43d622:	aad    0xcd
  43d624:	push   esi
  43d625:	mov    BYTE PTR [eax],cl
  43d627:	sub    eax,DWORD PTR [esi+0x26]
  43d62a:	in     eax,0xce
  43d62c:	cwde   
  43d62d:	inc    esp
  43d62e:	push   ss
  43d62f:	jp     0x43d62a
  43d631:	cmp    eax,0x1dc0512b
  43d636:	sub    cl,BYTE PTR [eax+eiz*4+0x4]
  43d63a:	pavgw  mm6,QWORD PTR [eax-0x594e332e]
  43d641:	pop    ds
  43d642:	add    al,0xfb
  43d644:	and    al,0x64
  43d646:	pop    edi
  43d647:	jl     0x43d5d0
  43d649:	bound  ebp,QWORD PTR [edi+eax*1+0x1653c746]
  43d650:	adc    eax,0x3e7ed10b
  43d655:	push   ds
  43d656:	sub    ebx,ecx
  43d658:	in     eax,0xd1
  43d65a:	call   FWORD PTR [ecx-0x17]
  43d65d:	sbb    DWORD PTR [ecx+0x6b],0x328c235
  43d664:	cmp    al,0x8b
  43d666:	xor    esp,esp
  43d668:	ret    0xe730
  43d66b:	jle    0x43d6d5
  43d66d:	pop    ss
  43d66e:	xor    DWORD PTR [ebx+0x0],ebx
  43d671:	leave  
  43d672:	sbb    eax,0xa1de2bfa
  43d677:	outs   dx,BYTE PTR ds:[esi]
  43d678:	push   ss
  43d679:	loope  0x43d647
  43d67b:	jae    0x43d698
  43d67d:	push   ss
  43d67e:	js     0x43d61f
  43d680:	fcomp  QWORD PTR ds:0x27a267a3
  43d686:	sahf   
  43d687:	ss pop ebx
  43d689:	cmp    al,0xbd
  43d68b:	xor    eax,0xe3073941
  43d690:	dec    eax
  43d691:	fisttp QWORD PTR [edi-0x4d6165a8]
  43d697:	sub    DWORD PTR [ecx],esp
  43d699:	inc    eax
  43d69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d69b:	jge    0x43d6f6
  43d69d:	sti    
  43d69e:	cmp    ecx,DWORD PTR [ebx-0x4b340c36]
  43d6a4:	sbb    dl,ah
  43d6a6:	sbb    bh,al
  43d6a8:	lods   eax,DWORD PTR ds:[esi]
  43d6a9:	xchg   ebx,eax
  43d6aa:	ror    dl,0xda
  43d6ad:	sbb    BYTE PTR [edx-0x5],0xc6
  43d6b1:	mov    edi,DWORD PTR es:[ebx]
  43d6b4:	inc    ebp
  43d6b5:	push   ss
  43d6b6:	push   ebx
  43d6b7:	jae    0x43d63b
  43d6b9:	mov    bl,0x23
  43d6bb:	cmc    
  43d6bc:	or     DWORD PTR [edx],esp
  43d6be:	push   esi
  43d6bf:	cmp    ch,BYTE PTR [edx]
  43d6c1:	in     al,0xda
  43d6c3:	mov    edx,0x744aec95
  43d6c8:	add    al,dh
  43d6ca:	mov    DWORD PTR [esi],esi
  43d6cc:	out    dx,eax
  43d6cd:	inc    esp
  43d6ce:	and    eax,0x1791332
  43d6d3:	gs (bad) 
  43d6d5:	out    dx,al
  43d6d6:	push   edi
  43d6d7:	jl     0x43d718
  43d6d9:	xor    eax,DWORD PTR [esi*2+0xee989fc]
  43d6e0:	mov    edx,0xce36570d
  43d6e5:	dec    ecx
  43d6e6:	jp     0x43d761
  43d6e8:	test   al,0xc7
  43d6ea:	sbb    BYTE PTR [edx+0x40ee5c5e],bl
  43d6f0:	aad    0x86
  43d6f2:	inc    esi
  43d6f3:	mov    esi,0xd6ae681c
  43d6f8:	(bad)  
  43d6fa:	lock jo 0x43d6f1
  43d6fd:	push   edx
  43d6fe:	fs inc esi
  43d700:	mov    DWORD PTR [ebx],0x166531dc
  43d706:	sub    DWORD PTR [edi+edx*8+0x29],eax
  43d70a:	cli    
  43d70b:	ja     0x43d69f
  43d70d:	mov    ecx,0x78d43e0f
  43d712:	fidivr DWORD PTR [ebx+0x7c]
  43d715:	mov    ebp,0x984d77da
  43d71a:	je     0x43d76c
  43d71c:	cmp    DWORD PTR [edi+0x40],eax
  43d71f:	sbb    al,0xaf
  43d721:	pop    ds
  43d722:	int3   
  43d723:	xor    eax,esp
  43d725:	ficom  WORD PTR [ecx+0x16]
  43d728:	mov    WORD PTR [eax-0x79f42ee],?
  43d72e:	bound  edi,QWORD PTR [eax+ecx*1+0x5a48e114]
  43d735:	jnp    0x43d740
  43d737:	outs   dx,BYTE PTR ds:[esi]
  43d738:	or     ebx,0xffffffda
  43d73b:	rol    DWORD PTR [esi+0x58e7ce9f],0xe1
  43d742:	ja     0x43d755
  43d744:	stos   DWORD PTR es:[edi],eax
  43d745:	cmp    eax,0xfc14727a
  43d74a:	add    al,0xe0
  43d74c:	out    dx,al
  43d74d:	xchg   DWORD PTR [ebp+edi*1+0x12],esp
  43d751:	test   BYTE PTR [ebp-0x738ccefc],0xd6
  43d758:	inc    ebp
  43d759:	std    
  43d75a:	push   ds
  43d75b:	xor    BYTE PTR [ecx-0x6f9082b],0x1b
  43d762:	mov    ch,0xd
  43d764:	sub    BYTE PTR [edi+eiz*2-0x480b61c3],0xf9
  43d76c:	lds    edx,FWORD PTR [ecx]
  43d76e:	adc    al,0x28
  43d770:	mov    eax,ds:0xae70f8c6
  43d775:	adc    eax,DWORD PTR [edx]
  43d777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d778:	mov    dl,0x1
  43d77a:	fwait
  43d77b:	lods   al,BYTE PTR ds:[esi]
  43d77c:	cli    
  43d77d:	jle    0x43d7fa
  43d77f:	in     al,0x43
  43d781:	sub    al,0x3a
  43d783:	fst    DWORD PTR [edi+0x10a8eb23]
  43d789:	ret    
  43d78a:	mov    dh,dl
  43d78c:	repz adc BYTE PTR [esi+0x2c2a0bd6],cl
  43d793:	retf   
  43d794:	jecxz  0x43d774
  43d796:	popa   
  43d797:	clc    
  43d798:	(bad)  [edi+0x41]
  43d79b:	inc    edi
  43d79c:	mov    ebx,0x810e34ac
  43d7a1:	int    0x68
  43d7a3:	std    
  43d7a4:	dec    esi
  43d7a5:	enter  0x454b,0xbf
  43d7a9:	fst    DWORD PTR [edx-0xe]
  43d7ac:	jle    0x43d7c2
  43d7ae:	jp     0x43d7fc
  43d7b0:	fsubr  QWORD PTR [edi]
  43d7b2:	cmp    BYTE PTR [ebx-0x15],bh
  43d7b5:	mov    ebx,0xd33c4070
  43d7ba:	and    DWORD PTR [edx+0x3e],eax
  43d7bd:	sub    eax,0xa993f53f
  43d7c2:	push   eax
  43d7c3:	test   ah,dl
  43d7c5:	retf   
  43d7c6:	sub    al,BYTE PTR [edi]
  43d7c8:	je     0x43d7f2
  43d7ca:	adc    al,bh
  43d7cc:	psubq  mm1,QWORD PTR [esi+0x79]
  43d7d0:	sbb    BYTE PTR [edi+0x45163b35],0xd4
  43d7d7:	add    eax,0xbdc8f475
  43d7dc:	push   ebp
  43d7dd:	jmp    0x751d:0xd1e7a2da
  43d7e4:	jp     0x43d768
  43d7e6:	pop    ebp
  43d7e7:	outs   dx,BYTE PTR ds:[esi]
  43d7e8:	pop    edi
  43d7e9:	push   ecx
  43d7ea:	imul   eax,DWORD PTR [esi-0x5f138bb5],0x61
  43d7f1:	test   eax,0xa210455d
  43d7f6:	in     eax,0xd8
  43d7f8:	cmp    bh,al
  43d7fa:	mov    eax,ds:0x313a0d93
  43d7ff:	sbb    edx,0x4b5123ce
  43d805:	adc    DWORD PTR [eax],ebp
  43d807:	into   
  43d808:	loopne 0x43d862
  43d80a:	int3   
  43d80b:	pop    eax
  43d80c:	or     BYTE PTR [edi+ebx*8],0xa5
  43d810:	or     eax,0xfd3326ac
  43d815:	test   BYTE PTR [edi+0x76],bh
  43d818:	xchg   esp,eax
  43d81a:	fidiv  DWORD PTR [edx]
  43d81c:	xchg   DWORD PTR [ebx],edx
  43d81e:	sbb    ah,BYTE PTR [edx-0x3361794a]
  43d824:	cs pop esp
  43d826:	imul   ebp,DWORD PTR [esi+eiz*8],0x6aed375d
  43d82d:	fmul   DWORD PTR [ecx-0x3b]
  43d830:	inc    edx
  43d831:	adc    cl,BYTE PTR [edi-0x5bea9ab6]
  43d837:	in     al,0xb8
  43d839:	imul   ebx,DWORD PTR [ebx+0x236bd23d],0x915e6f92
  43d843:	aad    0x1e
  43d845:	sar    DWORD PTR ds:0x135ce479,cl
  43d84b:	mov    ch,0x63
  43d84d:	enter  0x12f1,0xcf
  43d851:	ret    0xff05
  43d854:	push   0x7d
  43d856:	adc    edx,edi
  43d858:	call   0xb1af:0x53c5e0c8
  43d85f:	jno    0x43d801
  43d861:	iret   
  43d862:	jp     0x43d892
  43d864:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  43d866:	jmp    0xde3f:0xe14e03da
  43d86d:	js     0x43d85e
  43d86f:	int    0xc4
  43d871:	sub    DWORD PTR [edi-0x2f],eax
  43d874:	iret   
  43d875:	and    al,0xc7
  43d877:	mov    cl,0x25
  43d879:	jno    0x43d8be
  43d87b:	stos   DWORD PTR es:[edi],eax
  43d87c:	add    eax,0xc4ae671a
  43d881:	gs mov ah,0x1c
  43d884:	add    BYTE PTR [ebx],ch
  43d886:	sbb    al,0x66
  43d888:	sar    ebp,cl
  43d88a:	stos   BYTE PTR es:[edi],al
  43d88b:	mov    ah,0x38
  43d88d:	repz les ebx,FWORD PTR [ecx+0x32405113]
  43d894:	cmp    ch,BYTE PTR [edi+0x19]
  43d897:	fwait
  43d898:	pusha  
  43d899:	xchg   ebx,eax
  43d89a:	(bad)  
  43d89b:	imul   edi,DWORD PTR [edi+ebp*4],0xb70bc22d
  43d8a2:	dec    ebp
  43d8a3:	fld    TBYTE PTR [edi-0x325d84ea]
  43d8a9:	mov    edx,0x53ba0303
  43d8ae:	pop    ebp
  43d8af:	lock enter 0x7174,0xff
  43d8b4:	js     0x43d8ab
  43d8b6:	cdq    
  43d8b7:	outs   dx,DWORD PTR ds:[esi]
  43d8b8:	mov    ch,0x57
  43d8ba:	mov    cl,0xae
  43d8bc:	call   0x163f:0xf55e133f
  43d8c3:	mov    ds:0x9c6f76bb,eax
  43d8c8:	cmp    eax,DWORD PTR [ebp+0x1c]
  43d8cb:	stos   BYTE PTR es:[edi],al
  43d8cc:	mov    al,ds:0x68746a70
  43d8d1:	cwde   
  43d8d2:	mov    ch,0x4f
  43d8d4:	gs dec ecx
  43d8d6:	lods   al,BYTE PTR ds:[esi]
  43d8d7:	add    DWORD PTR [ebx],edi
  43d8d9:	arpl   WORD PTR [eax],cx
  43d8db:	cmp    BYTE PTR [edi],0x28
  43d8de:	mov    bh,0xc3
  43d8e0:	shl    bl,1
  43d8e2:	sti    
  43d8e3:	aaa    
  43d8e4:	out    dx,eax
  43d8e5:	dec    ebp
  43d8e6:	pop    ss
  43d8e7:	dec    eax
  43d8e8:	pop    edx
  43d8e9:	jg     0x43d940
  43d8eb:	fadd   DWORD PTR [ecx+0x86d074e]
  43d8f1:	aas    
  43d8f2:	xchg   ebp,eax
  43d8f3:	dec    ebx
  43d8f4:	out    0xb4,al
  43d8f6:	fdivr  QWORD PTR [edx-0x9]
  43d8f9:	cmp    ch,cl
  43d8fb:	push   ds
  43d8fc:	rol    DWORD PTR [edi+0x58],1
  43d8ff:	cmc    
  43d900:	jg     0x43d90a
  43d902:	shr    DWORD PTR [ebp+ebx*1+0x53],cl
  43d906:	pop    esp
  43d907:	in     eax,dx
  43d908:	cmp    ah,BYTE PTR es:[edi+0x2c]
  43d90c:	in     eax,0xc6
  43d90e:	call   DWORD PTR [ebp-0x36]
  43d911:	fst    QWORD PTR [ebp+0x4fe648ca]
  43d917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d918:	push   esp
  43d919:	jb     0x43d8ab
  43d91b:	inc    ebx
  43d91c:	add    al,0xe2
  43d91e:	sbb    eax,0x9599c61
  43d923:	and    eax,0x62b4b86
  43d928:	js     0x43d954
  43d92a:	jb     0x43d92e
  43d92c:	bound  edi,QWORD PTR [ebp-0x7]
  43d92f:	jle    0x43d8b6
  43d931:	fcom   DWORD PTR [edi+0x3a]
  43d934:	aad    0x76
  43d936:	shr    edx,cl
  43d938:	push   eax
  43d939:	fsub   st,st(1)
  43d93b:	dec    ebp
  43d93c:	test   edi,esp
  43d93e:	fwait
  43d93f:	dec    esp
  43d940:	addr16 (bad) 
  43d942:	test   al,0x39
  43d944:	fnsave [edi-0x7a]
  43d947:	mov    bh,0x64
  43d949:	out    0x6f,al
  43d94b:	adc    DWORD PTR [ebp-0x60],ecx
  43d94e:	imul   edx,DWORD PTR [edx+eiz*8+0x498f8607],0x544381fe
  43d959:	js     0x43d998
  43d95b:	mov    al,0xe7
  43d95d:	push   0x3d
  43d95f:	scas   al,BYTE PTR es:[edi]
  43d960:	mov    dh,BYTE PTR [edi]
  43d962:	cli    
  43d963:	mov    edx,eax
  43d965:	fistp  QWORD PTR [ebx+0x159b4aae]
  43d96b:	pop    ds
  43d96c:	and    BYTE PTR [eax],0x9f
  43d96f:	inc    ebp
  43d970:	xor    cl,BYTE PTR [ecx-0x3f3a45c1]
  43d976:	rcl    BYTE PTR [ecx+edi*2-0x55d2127],0x7c
  43d97e:	enter  0x36a9,0x25
  43d982:	jle    0x43d9fe
  43d984:	stc    
  43d985:	pop    edi
  43d986:	or     al,0xfb
  43d988:	jmp    0xa0a8:0xbe1e306c
  43d98f:	in     al,0x90
  43d991:	scas   eax,DWORD PTR es:[edi]
  43d992:	cli    
  43d993:	shl    BYTE PTR [eax],cl
  43d995:	mov    esp,0xb15ec798
  43d99a:	les    eax,FWORD PTR [ebp+0x41]
  43d99d:	mov    gs,WORD PTR [eax-0x324841f8]
  43d9a3:	sbb    bh,BYTE PTR [edi]
  43d9a5:	adc    dl,BYTE PTR [edx]
  43d9a7:	inc    edi
  43d9a8:	inc    ebx
  43d9a9:	(bad)  
  43d9aa:	cmp    eax,0x267f3a27
  43d9af:	(bad)  [ebp-0x61]
  43d9b2:	inc    eax
  43d9b3:	pusha  
  43d9b4:	popa   
  43d9b5:	sub    ch,bh
  43d9b7:	hlt    
  43d9b8:	mov    ch,0x6c
  43d9ba:	add    DWORD PTR [ebx],ebx
  43d9bc:	bound  esp,QWORD PTR [ebx+0x7b]
  43d9bf:	je     0x43d998
  43d9c1:	lock mov dl,0xc8
  43d9c4:	pop    ecx
  43d9c5:	cwde   
  43d9c6:	jnp    0x43d963
  43d9c8:	xchg   BYTE PTR ds:0x90af7347,bl
  43d9ce:	xchg   DWORD PTR [edx+0x6],ecx
  43d9d1:	xchg   edi,eax
  43d9d2:	int    0x3e
  43d9d4:	ins    DWORD PTR es:[edi],dx
  43d9d5:	jle    0x43da13
  43d9d7:	mov    dl,ah
  43d9d9:	arpl   WORD PTR [ebp-0x35976d09],dx
  43d9df:	xchg   esp,eax
  43d9e0:	mov    ecx,0x3fc6c33
  43d9e5:	into   
  43d9e6:	das    
  43d9e7:	dec    ebp
  43d9e8:	inc    ebp
  43d9e9:	mov    eax,ds:0x229b5389
  43d9ee:	or     dl,BYTE PTR [edi+edx*8]
  43d9f1:	xchg   DWORD PTR [eax-0x2f],edi
  43d9f4:	in     eax,0x6
  43d9f6:	mov    al,ds:0xcb48ae13
  43d9fb:	call   0x50e3:0x5b9e660a
  43da02:	sub    BYTE PTR [edx-0x53],dh
  43da05:	outs   dx,BYTE PTR ds:[esi]
  43da06:	dec    edi
  43da07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da08:	jne    0x43da27
  43da0a:	pop    ebx
  43da0b:	adc    al,0xc8
  43da0d:	mov    bl,0xbb
  43da0f:	ja     0x43d99d
  43da11:	frstpm(287 only) 
  43da13:	jnp    0x43d9ee
  43da15:	sub    BYTE PTR [eax-0x511fe746],0x74
  43da1c:	into   
  43da1d:	iret   
  43da1e:	inc    eax
  43da1f:	imul   esi,DWORD PTR [edx],0xffffffde
  43da22:	sar    DWORD PTR [edx+0x44],1
  43da25:	shr    BYTE PTR [ebx+0x3e],cl
  43da28:	aaa    
  43da29:	mov    eax,ds:0xfc8a8db7
  43da2e:	into   
  43da2f:	mov    eax,?
  43da31:	(bad)  
  43da32:	cmp    bl,bl
  43da34:	inc    ecx
  43da35:	push   DWORD PTR [ecx-0x2cfbf663]
  43da3b:	in     eax,dx
  43da3c:	pop    esi
  43da3d:	mov    bh,0x9c
  43da3f:	sub    DWORD PTR [bx+0x7b56],ecx
  43da44:	popf   
  43da45:	inc    esi
  43da46:	mov    esi,0xe8fbf09f
  43da4b:	js     0x43d9e7
  43da4d:	mov    ebx,0x9f229ee4
  43da52:	sysenter 
  43da54:	or     DWORD PTR ds:0xc0f93828,0xffffffcf
  43da5b:	test   al,0x20
  43da5d:	fild   QWORD PTR [esi+0x64]
  43da60:	xchg   ebp,eax
  43da61:	ss push esi
  43da63:	pop    edx
  43da64:	or     ch,dl
  43da66:	in     eax,0xa9
  43da68:	add    DWORD PTR [ebp-0x3b],esp
  43da6b:	xor    al,0xe7
  43da6d:	mov    esp,0x787cf0c6
  43da72:	add    cl,BYTE PTR [eax]
  43da74:	fsin   
  43da76:	ret    
  43da77:	fsub   QWORD PTR [ebp-0x5e]
  43da7a:	pop    ss
  43da7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da7c:	or     cl,0x28
  43da7f:	leave  
  43da80:	(bad)  [eax+0x49959a3e]
  43da86:	sbb    al,0x9f
  43da88:	icebp  
  43da89:	sahf   
  43da8a:	jge    0x43daf2
  43da8c:	jns    0x43da99
  43da8e:	ins    DWORD PTR es:[edi],dx
  43da8f:	push   es
  43da90:	pop    ds
  43da91:	or     dh,BYTE PTR [esi+0x700d0549]
  43da97:	outs   dx,DWORD PTR ds:[esi]
  43da98:	and    al,0x3f
  43da9b:	rcr    DWORD PTR [esi-0x2abf2012],1
  43daa1:	data16 xor BYTE PTR [ecx+edi*1+0x3e43f9fd],al
  43daa9:	and    cl,BYTE PTR [ecx]
  43daab:	inc    esi
  43daac:	fwait
  43daad:	push   0xbf760839
  43dab2:	mov    DWORD PTR [edi],0x8609560b
  43dab8:	pop    edi
  43dab9:	xlat   BYTE PTR ds:[ebx]
  43daba:	test   dl,0x4c
  43dabd:	imul   esp,DWORD PTR [ecx],0xffffffe2
  43dac0:	ret    0xa79e
  43dac3:	outs   dx,DWORD PTR ds:[esi]
  43dac4:	mov    ds:0x34f04e3d,al
  43dac9:	cdq    
  43daca:	push   eax
  43dacb:	add    DWORD PTR [eax+0xe1b232c],0x27
  43dad2:	test   DWORD PTR [ebx+0x42585d8],ebx
  43dad8:	xchg   edx,eax
  43dad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dada:	rcr    ebx,1
  43dadc:	pushf  
  43dadd:	push   ebp
  43dade:	imul   ecx,DWORD PTR [eax+0x60],0xffffff9d
  43dae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dae3:	mov    DWORD PTR [edx+0x4e],ecx
  43dae6:	pushf  
  43dae7:	loop   0x43da8f
  43dae9:	clc    
  43daea:	pop    esi
  43daeb:	cmp    BYTE PTR [edx+0x64],bh
  43daee:	mov    edx,0xa6f626e8
  43daf3:	ds add al,0x72
  43daf6:	outs   dx,BYTE PTR ds:[esi]
  43daf7:	fst    DWORD PTR [edi+0x6c]
  43dafa:	or     al,0xf6
  43dafc:	fstp   TBYTE PTR [ecx-0x2d]
  43daff:	mov    dh,0x5e
  43db01:	addr16 je 0x43daa8
  43db04:	mov    dh,0xb
  43db06:	std    
  43db07:	mov    bh,bh
  43db09:	out    0x7b,eax
  43db0b:	add    bl,BYTE PTR [edi+0x37]
  43db0e:	mov    ecx,0x2ff81e54
  43db13:	jmp    0x9374:0x675d0fe7
  43db1a:	ins    DWORD PTR es:[edi],dx
  43db1b:	mov    ch,0xbc
  43db1d:	inc    edx
  43db1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db1f:	mov    eax,0x80ea46bb
  43db24:	ja     0x43daab
  43db26:	aas    
  43db27:	adc    bh,al
  43db29:	sbb    eax,0xc36e18be
  43db2e:	cmp    eax,ebp
  43db30:	mov    ebp,0x699e2917
  43db35:	or     bl,BYTE PTR [ebp-0x699635d2]
  43db3b:	sub    eax,0xb0cb98d6
  43db40:	lods   eax,DWORD PTR ds:[esi]
  43db41:	mov    dl,0x80
  43db43:	xor    dh,BYTE PTR [ecx+0x3e9a878c]
  43db49:	out    0x67,al
  43db4b:	cdq    
  43db4c:	(bad)  
  43db4d:	xchg   esi,eax
  43db4e:	call   edx
  43db50:	jae    0x43db88
  43db52:	inc    edx
  43db53:	or     BYTE PTR [edx],dh
  43db55:	sub    al,0x49
  43db57:	pop    edx
  43db58:	xchg   ebx,eax
  43db59:	cli    
  43db5a:	or     ebp,DWORD PTR [ecx+0x3955eda4]
  43db60:	(bad)  
  43db62:	pop    ecx
  43db63:	pop    eax
  43db64:	inc    edi
  43db65:	sub    BYTE PTR [edx+0x3455f351],0xe
  43db6c:	adc    BYTE PTR [ebx-0x30],ah
  43db6f:	jo     0x43db0b
  43db71:	fld    TBYTE PTR [edx-0x34]
  43db74:	fcmovnu st,st(6)
  43db76:	sbb    eax,0x6c7ba534
  43db7b:	jnp    0x43dbcc
  43db7d:	and    bh,BYTE PTR [esi]
  43db7f:	call   0x7d5e:0xc62cf5c6
  43db86:	cwde   
  43db87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43db88:	jl     0x43db6a
  43db8a:	mov    WORD PTR [ebx-0x13],cs
  43db8d:	and    eax,ebp
  43db8f:	iret   
  43db90:	scas   al,BYTE PTR es:[edi]
  43db91:	popa   
  43db92:	jg     0x43dbfa
  43db94:	add    al,0x2b
  43db96:	push   ecx
  43db97:	fs clc 
  43db99:	pop    edx
  43db9a:	pop    esp
  43db9b:	push   0x1a
  43db9d:	ret    0x712f
  43dba0:	retf   0x2c70
  43dba3:	fld    TBYTE PTR ds:0x6aa703db
  43dba9:	fucompp 
  43dbab:	repz cli 
  43dbad:	or     eax,0x2984c67c
  43dbb2:	adc    edi,DWORD PTR [esi]
  43dbb4:	adc    eax,0xd2f28c36
  43dbb9:	pop    ds
  43dbba:	in     eax,0x59
  43dbbc:	jge    0x43db75
  43dbbe:	stc    
  43dbbf:	mov    eax,0x1a18904
  43dbc4:	aaa    
  43dbc5:	popa   
  43dbc6:	ret    0xe67d
  43dbc9:	or     bh,al
  43dbcb:	or     eax,DWORD PTR [ebx]
  43dbcd:	adc    eax,0xc8849f62
  43dbd2:	test   dh,al
  43dbd4:	or     al,0xac
  43dbd6:	mov    cl,0x76
  43dbd8:	paddw  mm5,mm0
  43dbdb:	inc    eax
  43dbdc:	push   edx
  43dbdd:	mov    esp,0xebea84cf
  43dbe2:	leave  
  43dbe3:	dec    eax
  43dbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dbe5:	fmul   DWORD PTR es:[eax+0x1d]
  43dbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dbea:	jg     0x43dc45
  43dbec:	add    eax,0x87eee8fa
  43dbf1:	jg     0x43dbf6
  43dbf3:	xchg   BYTE PTR [ebx],dh
  43dbf5:	cs pushfw 
  43dbf8:	popf   
  43dbf9:	scas   eax,DWORD PTR es:[edi]
  43dbfa:	sar    BYTE PTR [ecx+esi*8-0x1a68f7b5],0x69
  43dc02:	adc    BYTE PTR [ecx+0x2617a847],ah
  43dc08:	stc    
  43dc09:	std    
  43dc0a:	rcr    DWORD PTR [eax+0x77],0xb1
  43dc0e:	rcl    edi,cl
  43dc10:	mov    dh,0xb2
  43dc12:	jle    0x43dbd3
  43dc14:	mov    cl,0xce
  43dc16:	pop    ds
  43dc17:	mov    al,0x8b
  43dc19:	ins    DWORD PTR es:[edi],dx
  43dc1a:	or     DWORD PTR [edx-0x3304c8aa],ebx
  43dc20:	pcmpgtb mm4,QWORD PTR [ecx]
  43dc23:	les    edi,FWORD PTR [ebp+0x59]
  43dc26:	call   0xe475:0x27a09120
  43dc2d:	jmp    0x9c2b:0x6fdadeed
  43dc34:	jmp    0xdcea:0xc938c302
  43dc3b:	cmp    dh,BYTE PTR [edi+0x28c3ab29]
  43dc41:	mov    WORD PTR [edi+eax*2+0x9ea6bc5],es
  43dc48:	pop    edx
  43dc49:	fisub  WORD PTR [eax+eax*1]
  43dc4c:	sub    al,0x46
  43dc4e:	jmp    DWORD PTR [ebx]
  43dc51:	cdq    
  43dc52:	mov    ecx,0xff85ab71
  43dc57:	stos   DWORD PTR es:[edi],eax
  43dc58:	adc    esi,esi
  43dc5a:	fild   QWORD PTR [edi]
  43dc5c:	sbb    eax,0x32103816
  43dc61:	mov    eax,ds:0xdb473512
  43dc66:	sub    ah,bh
  43dc68:	mov    esi,0x4fcfb045
  43dc6d:	js     0x43dc84
  43dc6f:	mov    DWORD PTR [eax-0x2e],esi
  43dc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dc73:	les    esi,FWORD PTR [eax]
  43dc75:	cmp    ecx,DWORD PTR [ebx+0x76]
  43dc78:	loope  0x43dc64
  43dc7a:	retf   
  43dc7b:	push   ebx
  43dc7c:	push   esp
  43dc7d:	cmp    al,0x33
  43dc7f:	mov    eax,gs
  43dc81:	and    DWORD PTR [eax-0x20],edi
  43dc84:	dec    edi
  43dc85:	jl     0x43dc2a
  43dc87:	je     0x43dc62
  43dc89:	jmp    0xdd127ca3
  43dc8e:	add    ebp,ecx
  43dc90:	pop    ecx
  43dc91:	jnp    0x43dc2a
  43dc93:	ret    0x2451
  43dc96:	pop    edi
  43dc97:	sub    al,0x1c
  43dc99:	sbb    eax,0x41d4454d
  43dc9e:	pop    ds
  43dc9f:	rcl    dl,0xd7
  43dca2:	sbb    BYTE PTR [esi+0x7d72ce3f],bl
  43dca8:	xor    ch,BYTE PTR ds:0x9bcad136
  43dcae:	inc    ebx
  43dcaf:	push   cs
  43dcb0:	mov    eax,0x10c92ea8
  43dcb5:	dec    esp
  43dcb6:	loopne 0x43dc83
  43dcb8:	cmp    DWORD PTR [ecx],eax
  43dcba:	mov    bh,0x16
  43dcbc:	jmp    0x9b98:0x477ec0cd
  43dcc3:	jmp    0x705e:0x51f88491
  43dcca:	add    ecx,DWORD PTR [ebp-0x62f2b6ea]
  43dcd0:	shr    ah,1
  43dcd2:	dec    esp
  43dcd3:	dec    ebx
  43dcd4:	(bad)  
  43dcd5:	adc    eax,0x48a4869f
  43dcda:	mov    WORD PTR [edx+0x2e],cs
  43dcdd:	aam    0x95
  43dcdf:	cmp    DWORD PTR [ebx-0x34],0x3a89bc8b
  43dce6:	jmp    0x43dd42
  43dce8:	imul   DWORD PTR [edx]
  43dcea:	mov    ds:0x4fd1c100,eax
  43dcef:	lea    esi,[ecx+0x4d]
  43dcf2:	out    dx,al
  43dcf3:	ins    DWORD PTR es:[edi],dx
  43dcf4:	ss pop ecx
  43dcf6:	loop   0x43dcf8
  43dcf8:	nop
  43dcf9:	cmp    ebp,DWORD PTR [ebp+ebp*4-0x55a3f441]
  43dd00:	dec    edx
  43dd01:	jge    0x43dd13
  43dd03:	(bad)  
  43dd04:	mov    dh,0xb7
  43dd06:	packssdw mm0,QWORD PTR [ecx]
  43dd09:	inc    DWORD PTR [ebx-0x5c]
  43dd0c:	ret    0x60a9
  43dd0f:	outs   dx,BYTE PTR ds:[esi]
  43dd10:	xor    al,0xfd
  43dd12:	xchg   ecx,eax
  43dd13:	icebp  
  43dd14:	push   ss
  43dd15:	jl     0x43dd2f
  43dd17:	pop    ds
  43dd18:	retf   0xdd87
  43dd1b:	nop    esi
  43dd1e:	daa    
  43dd1f:	sbb    DWORD PTR [ecx],esi
  43dd21:	xchg   DWORD PTR [ebp+0x3d],ecx
  43dd24:	jp     0x43dd6a
  43dd26:	sub    ebx,ebp
  43dd28:	pushf  
  43dd29:	add    BYTE PTR [esi+0x45ce699f],bl
  43dd2f:	(bad)  
  43dd31:	jl     0x43dda6
  43dd33:	inc    esi
  43dd34:	sbb    DWORD PTR [edx-0x2fa29feb],esp
  43dd3a:	mov    dh,0xbf
  43dd3c:	xor    al,0x81
  43dd3e:	sbb    DWORD PTR [eax+0x4],esp
  43dd41:	or     DWORD PTR [ebp-0x34],edx
  43dd44:	leave  
  43dd45:	xchg   ecx,eax
  43dd46:	sub    cl,cl
  43dd48:	or     eax,0x5ec78256
  43dd4d:	mov    dl,0x5f
  43dd4f:	popa   
  43dd50:	and    edx,DWORD PTR [edi-0x75]
  43dd53:	cmp    ah,BYTE PTR [ecx]
  43dd55:	rol    ebp,cl
  43dd57:	mov    bh,0xe4
  43dd59:	rcl    DWORD PTR [edx-0x324ca38e],cl
  43dd5f:	je     0x43dd5e
  43dd61:	or     ebp,eax
  43dd63:	fwait
  43dd64:	inc    ebx
  43dd65:	scas   al,BYTE PTR es:[edi]
  43dd66:	pushf  
  43dd67:	fnop   
  43dd69:	add    ah,BYTE PTR [ebx]
  43dd6b:	sbb    ax,0x2d0e
  43dd6f:	ret    
  43dd70:	cld    
  43dd71:	addr16 (bad) 
  43dd73:	lods   al,BYTE PTR ds:[esi]
  43dd74:	push   eax
  43dd75:	dec    ebp
  43dd76:	into   
  43dd77:	mov    BYTE PTR fs:[edi],bl
  43dd7a:	mov    edx,0x39418d73
  43dd7f:	das    
  43dd80:	pop    ecx
  43dd81:	or     bl,dl
  43dd83:	stc    
  43dd84:	aad    0xb5
  43dd86:	add    DWORD PTR [ecx+0x285864e],edx
  43dd8c:	mov    dl,0x48
  43dd8e:	mov    ch,0x59
  43dd90:	cmp    DWORD PTR [edx],esp
  43dd92:	adc    BYTE PTR [edx-0xdf8bb31],bh
  43dd98:	jae    0x43dd38
  43dd9a:	movntq (bad),mm7
  43dd9b:	out    0xf8,eax
  43dd9d:	pushf  
  43dd9e:	fnstcw WORD PTR [edx+eiz*1+0xd]
  43dda2:	mov    ecx,0xdf38279b
  43dda7:	and    edx,ebp
  43dda9:	mov    eax,ds:0xd08212ff
  43ddae:	dec    edx
  43ddaf:	test   DWORD PTR [edx-0x53],ecx
  43ddb2:	push   edx
  43ddb3:	stc    
  43ddb4:	ss cmp DWORD PTR gs:[ecx-0x62],eax
  43ddb9:	outs   dx,BYTE PTR ds:[esi]
  43ddba:	test   DWORD PTR [ebp-0x56],ebp
  43ddbd:	add    al,0xd
  43ddbf:	popa   
  43ddc0:	sar    dh,0x4f
  43ddc3:	into   
  43ddc4:	jmp    0x43de01
  43ddc6:	repz xchg ebp,eax
  43ddc8:	into   
  43ddc9:	dec    edx
  43ddca:	sub    al,0x15
  43ddcc:	dec    ebx
  43ddcd:	stos   DWORD PTR es:[edi],eax
  43ddce:	ds or  al,0x3b
  43ddd1:	sbb    DWORD PTR [ebp-0x30],ebx
  43ddd4:	lahf   
  43ddd5:	fmul   QWORD PTR [esi-0x1e]
  43ddd8:	xchg   ebx,eax
  43ddd9:	sbb    al,0x89
  43dddb:	and    esi,DWORD PTR [eax+0xe]
  43ddde:	jns    0x43dd92
  43dde0:	xchg   esp,eax
  43dde1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dde2:	mov    BYTE PTR [eax-0x2e],bl
  43dde5:	js     0x43de08
  43dde7:	or     edi,esi
  43dde9:	imul   edx,DWORD PTR ds:0x5ee0cf87,0x397f1022
  43ddf3:	jo     0x43dda8
  43ddf5:	js     0x43ddad
  43ddf7:	aam    0x71
  43ddf9:	push   ebp
  43ddfa:	sar    edx,1
  43ddfc:	loopne 0x43de57
  43ddfe:	test   DWORD PTR ds:0xafa62e11,edx
  43de04:	faddp  st(3),st
  43de06:	mov    ebp,0xd0ec2bcb
  43de0b:	(bad)  
  43de0c:	jmp    0x43dde2
  43de0e:	push   ebp
  43de0f:	jnp    0x43de4d
  43de11:	sub    al,0xb
  43de13:	fucomi st,st(1)
  43de15:	loopne 0x43de86
  43de17:	inc    edx
  43de18:	jmp    0x36ec2d4d
  43de1d:	jbe    0x43de9d
  43de1f:	jne    0x43de77
  43de21:	pop    es
  43de22:	in     eax,0x4a
  43de24:	pop    ebp
  43de25:	js     0x43de8f
  43de27:	pop    ecx
  43de28:	xchg   ebx,eax
  43de29:	dec    edx
  43de2a:	pop    es
  43de2b:	inc    esi
  43de2c:	dec    ebx
  43de2d:	xchg   ecx,ebx
  43de2f:	aaa    
  43de30:	js     0x43de06
  43de32:	jmp    0x8f499b0e
  43de37:	mov    ah,0x2
  43de39:	dec    ebp
  43de3a:	inc    esi
  43de3b:	add    eax,0xd171dc6b
  43de40:	xchg   ecx,eax
  43de41:	mov    ah,0xc1
  43de43:	fbstp  TBYTE PTR [esi+eiz*4-0x63a3a200]
  43de4a:	or     BYTE PTR [ebp+0x56],bl
  43de4d:	mov    ds:0xf368def9,al
  43de52:	call   0x573b:0xf9321297
  43de59:	jnp    0x43de52
  43de5b:	push   esi
  43de5c:	mov    ds:0xa62ceb4c,al
  43de61:	div    BYTE PTR [edx+ebx*1+0x51e73926]
  43de68:	dec    edi
  43de69:	outs   dx,DWORD PTR ds:[esi]
  43de6a:	loope  0x43de4e
  43de6c:	sbb    edi,DWORD PTR [ecx+ebp*2]
  43de6f:	mov    edi,0xb404076b
  43de74:	repnz push eax
  43de76:	stos   BYTE PTR es:[edi],al
  43de77:	mov    edx,0x6043aa4e
  43de7c:	mov    eax,0x463022e7
  43de81:	cmp    al,0x64
  43de83:	jecxz  0x43debc
  43de85:	dec    esp
  43de86:	imul   edi,DWORD PTR [ecx],0x8ad70067
  43de8c:	aas    
  43de8d:	repnz cmp BYTE PTR [edx+0x7dfc3fe9],dl
  43de94:	mov    BYTE PTR [bp+di+0x2aff],ch
  43de99:	inc    eax
  43de9a:	adc    edi,DWORD PTR [edx+edx*1-0x27]
  43de9e:	loope  0x43de9e
  43dea0:	vpcmpgtw ymm7,ymm4,ymm1
  43dea4:	cdq    
  43dea5:	sbb    cl,BYTE PTR [ecx-0x929bb37]
  43deab:	mov    esp,0xc9b99881
  43deb0:	clc    
  43deb1:	inc    edx
  43deb2:	in     eax,0x3c
  43deb4:	mov    esp,0x90a1edcb
  43deb9:	out    0xb0,eax
  43debb:	sbb    BYTE PTR [edx+ecx*1-0xe313448],al
  43dec2:	scas   al,BYTE PTR es:[edi]
  43dec3:	or     ebx,DWORD PTR [edi-0x3c562072]
  43dec9:	push   ds
  43deca:	sbb    al,0x81
  43decc:	inc    edx
  43decd:	(bad)  
  43dece:	fnstsw WORD PTR [edx]
  43ded0:	push   edi
  43ded1:	xchg   ebp,eax
  43ded2:	jnp    0x43df30
  43ded4:	push   edx
  43ded5:	test   al,0x54
  43ded7:	dec    edi
  43ded8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ded9:	aaa    
  43deda:	xor    DWORD PTR [esi],edi
  43dedc:	aad    0xab
  43dede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dedf:	ins    DWORD PTR es:[edi],dx
  43dee0:	pop    ds
  43dee1:	and    eax,0xe4bc35a
  43dee6:	push   es
  43dee7:	sti    
  43dee8:	daa    
  43dee9:	shl    DWORD PTR [edx],1
  43deeb:	push   0xf
  43deed:	imul   ebp,DWORD PTR [edx],0xffffffe7
  43def0:	ss push eax
  43def2:	fcom   QWORD PTR [ebp-0x5b]
  43def5:	mov    cl,0xbd
  43def7:	jmp    0x43dedf
  43def9:	inc    esp
  43defa:	mov    fs,WORD PTR [ebx]
  43defc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43defd:	call   0xce5dc24f
  43df02:	in     al,dx
  43df03:	and    eax,0x492efa27
  43df08:	xchg   ecx,eax
  43df09:	jbe    0x43deab
  43df0b:	mul    BYTE PTR [esi]
  43df0d:	adc    DWORD PTR [ebp+0x1],ebp
  43df10:	shr    edi,0xde
  43df13:	sbb    al,0x30
  43df15:	clc    
  43df16:	loopne 0x43dec3
  43df18:	and    DWORD PTR [edi+0x7bbfdf98],0xedcfa104
  43df22:	out    0x47,eax
  43df24:	test   BYTE PTR [edx+0x69],0x7b
  43df28:	dec    ebp
  43df29:	fsub   DWORD PTR [edi-0x72]
  43df2c:	fidivr DWORD PTR [eax-0x19]
  43df2f:	sbb    eax,DWORD PTR [ebp+0x30]
  43df32:	(bad)  
  43df33:	mov    ebp,0x8d474443
  43df38:	addr16 inc esi
  43df3a:	rcl    ah,1
  43df3c:	add    al,0xfb
  43df3e:	in     al,0x60
  43df40:	ret    0xc231
  43df43:	(bad)  
  43df44:	aaa    
  43df45:	mov    eax,ecx
  43df47:	mov    ah,0xa1
  43df49:	aad    0xe1
  43df4b:	dec    eax
  43df4c:	cli    
  43df4d:	(bad)  
  43df4e:	aad    0xbd
  43df50:	out    dx,eax
  43df51:	fist   DWORD PTR [esi+esi*4-0x41]
  43df55:	fisttp WORD PTR [eax]
  43df57:	fist   WORD PTR [ecx+0x37]
  43df5a:	xchg   ebx,eax
  43df5b:	and    esp,DWORD PTR [ebp-0x6a]
  43df5e:	inc    esi
  43df5f:	aas    
  43df60:	add    eax,0x93b80f77
  43df65:	fstp   DWORD PTR [edi]
  43df67:	inc    edx
  43df68:	scas   al,BYTE PTR es:[edi]
  43df69:	daa    
  43df6a:	call   0xa31c:0xd81bb78c
  43df71:	jmp    0x9c15356b
  43df76:	fdiv   QWORD PTR fs:[esp+ebp*1-0x4]
  43df7b:	mov    bl,bh
  43df7d:	scas   al,BYTE PTR es:[edi]
  43df7e:	cmp    DWORD PTR ds:0x11a9d7a2,esi
  43df85:	loope  0x43dfc1
  43df87:	jg     0x43df42
  43df89:	xor    esp,DWORD PTR [esp+esi*4]
  43df8c:	xchg   BYTE PTR [edi-0x2a4de77f],ah
  43df92:	aas    
  43df93:	retf   0x8b6
  43df96:	sbb    eax,0xb190d1c6
  43df9b:	add    DWORD PTR [eax+ecx*4],ebx
  43df9e:	sub    al,BYTE PTR fs:[edi+0x13834f61]
  43dfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dfa6:	nop
  43dfa7:	in     al,0xbf
  43dfa9:	jle    0x43df66
  43dfab:	loop   0x43dfb9
  43dfad:	inc    ebp
  43dfae:	fiadd  WORD PTR [ecx+eax*8+0x115683d2]
  43dfb5:	dec    ebx
  43dfb6:	push   edx
  43dfb7:	push   cs
  43dfb8:	iret   
  43dfb9:	mov    ecx,edx
  43dfbb:	sti    
  43dfbc:	addr16 pusha 
  43dfbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dfbf:	loope  0x43e018
  43dfc1:	jg     0x43e040
  43dfc3:	fcmovnb st,st(1)
  43dfc5:	arpl   dx,bp
  43dfc7:	data16 sbb bh,cl
  43dfca:	enter  0xd347,0x75
  43dfce:	into   
  43dfcf:	jae    0x43dff6
  43dfd1:	mov    bh,0x97
  43dfd3:	call   0x1f75:0x16d81b14
  43dfda:	lock out dx,eax
  43dfdc:	xchg   ebp,eax
  43dfdd:	mov    esp,0xfbd4ce89
  43dfe2:	ins    BYTE PTR es:[edi],dx
  43dfe3:	jns    0x43df7b
  43dfe5:	and    al,0xc6
  43dfe7:	call   0x142b:0x991164a9
  43dfee:	ins    DWORD PTR es:[edi],dx
  43dfef:	rol    DWORD PTR [ebp+0x54],1
  43dff2:	inc    eax
  43dff3:	pop    ebx
  43dff4:	pushf  
  43dff5:	cs sbb eax,0x36fb16f5
  43dffb:	out    0xd2,al
  43dffd:	outs   dx,DWORD PTR ds:[esi]
  43dffe:	test   eax,0xbfd1c5af
  43e003:	fistp  QWORD PTR [ecx+0x41]
  43e006:	inc    ebx
  43e007:	test   eax,0xf38cf3fe
  43e00c:	push   edx
  43e00d:	mov    ch,0x37
  43e00f:	push   eax
  43e010:	sbb    BYTE PTR [ebp+eax*8-0x7628046d],al
  43e017:	push   ebx
  43e018:	jmp    0x43e034
  43e01a:	rcr    DWORD PTR [edi-0x3a],0x86
  43e01e:	retf   0x69fa
  43e021:	call   0x7dd5:0x11d78219
  43e028:	rcl    BYTE PTR [ebp-0x6d],1
  43e02b:	add    edi,DWORD PTR [ebp-0x65cde6a3]
  43e031:	test   eax,0xb0a78657
  43e036:	frstor [edx]
  43e038:	xlat   BYTE PTR ds:[ebx]
  43e039:	push   0x6117043
  43e03e:	dec    ebp
  43e03f:	pushf  
  43e040:	shl    ebp,1
  43e042:	xlat   BYTE PTR ds:[ebx]
  43e043:	pop    ebp
  43e044:	lds    eax,FWORD PTR [eax]
  43e046:	adc    ch,ah
  43e048:	sbb    esi,DWORD PTR [eax-0x45912576]
  43e04e:	or     BYTE PTR [esi-0x9],al
  43e051:	fnstenv ds:0xc233
  43e056:	pop    ecx
  43e057:	lds    esi,FWORD PTR [eax-0x6076c132]
  43e05d:	dec    eax
  43e05e:	inc    esp
  43e05f:	push   esp
  43e060:	push   edx
  43e061:	xchg   esp,eax
  43e062:	cmp    DWORD PTR [ecx-0x1a],0xffffffc3
  43e066:	and    bl,cl
  43e068:	inc    edx
  43e069:	(bad)  
  43e06b:	mov    bl,0xfc
  43e06d:	inc    esp
  43e06e:	cmp    BYTE PTR [ebx+0x3bb2e01b],dh
  43e074:	adc    DWORD PTR [esi],ecx
  43e076:	ret    0x5a98
  43e079:	inc    edi
  43e07a:	dec    ebx
  43e07b:	rcr    DWORD PTR [edx+0x0],0x1e
  43e07f:	(bad)  
  43e080:	xor    DWORD PTR [esi],esp
  43e082:	sar    BYTE PTR [edi],0x1
  43e085:	ins    BYTE PTR es:[edi],dx
  43e086:	test   BYTE PTR [ebx-0x63ffff2d],al
  43e08c:	or     eax,0xd0a89976
  43e091:	les    ecx,FWORD PTR [esi]
  43e093:	jns    0x43e0fa
  43e095:	adc    al,0x65
  43e097:	adc    BYTE PTR [ecx+0xf],bl
  43e09a:	aad    0x7
  43e09c:	cld    
  43e09d:	inc    esi
  43e09e:	fiadd  DWORD PTR [edx+0x1d]
  43e0a1:	sbb    eax,0x2248673b
  43e0a6:	sub    BYTE PTR [eax-0x700f4ce4],dl
  43e0ac:	jae    0x43e106
  43e0ae:	hlt    
  43e0af:	xchg   edx,eax
  43e0b0:	(bad)  
  43e0b1:	jecxz  0x43e117
  43e0b3:	jmp    0x8028:0x252fe667
  43e0ba:	fnsave [edx-0x16e6ab75]
  43e0c0:	cmp    dh,BYTE PTR [ebx+0x655512b9]
  43e0c6:	rol    DWORD PTR [esi],cl
  43e0c8:	stc    
  43e0c9:	inc    ecx
  43e0ca:	rol    DWORD PTR [esi-0x4f],0x3e
  43e0ce:	dec    esp
  43e0cf:	sbb    al,0x95
  43e0d1:	mov    edx,0x18d2b22
  43e0d6:	ins    BYTE PTR es:[edi],dx
  43e0d7:	fucom  st(1)
  43e0d9:	les    esi,FWORD PTR [esi-0x28]
  43e0dc:	and    al,0x71
  43e0de:	test   eax,0x4b8ebdd8
  43e0e3:	pop    ss
  43e0e4:	js     0x43e0ac
  43e0e6:	jne    0x43e0ff
  43e0e8:	or     bp,WORD PTR [eax]
  43e0eb:	dec    ecx
  43e0ec:	push   esp
  43e0ed:	mov    bh,0xaa
  43e0ef:	pop    edx
  43e0f0:	fwait
  43e0f1:	cld    
  43e0f2:	or     DWORD PTR [edx],ebp
  43e0f4:	mov    dl,0x55
  43e0f6:	jmp    0x8cb9417c
  43e0fb:	rcl    DWORD PTR [eax+ebx*8+0x37],0xbb
  43e100:	jnp    0x43e0b9
  43e102:	dec    ebx
  43e103:	inc    esp
  43e104:	popa   
  43e105:	mov    BYTE PTR [eax],dh
  43e107:	out    dx,al
  43e108:	retf   0x8472
  43e10b:	out    dx,al
  43e10c:	test   BYTE PTR [esi-0x7213c7df],0xac
  43e113:	jno    0x43e15d
  43e115:	push   ebp
  43e116:	jmp    0x49160374
  43e11b:	arpl   WORD PTR [ecx+eax*4+0x6e],dx
  43e11f:	mov    dh,0xf
  43e121:	ror    DWORD PTR [edi+0x43],cl
  43e124:	es aas 
  43e126:	cmp    BYTE PTR [edx+eax*1-0xa23ff2a],dl
  43e12d:	scas   eax,DWORD PTR es:[edi]
  43e12e:	mov    BYTE PTR [ecx],0x7d
  43e131:	sti    
  43e132:	push   edi
  43e133:	es jg  0x43e0e0
  43e136:	aam    0x5c
  43e138:	xchg   esi,eax
  43e139:	fbstp  TBYTE PTR cs:[ebx+eax*4-0x48]
  43e13e:	dec    ebx
  43e13f:	xlat   BYTE PTR ds:[ebx]
  43e140:	dec    ebp
  43e141:	mov    eax,ds:0xb125bcd4
  43e146:	mov    ah,0x5
  43e148:	xchg   edx,eax
  43e149:	and    al,0x90
  43e14b:	and    al,0xc0
  43e14d:	jp     0x43e15f
  43e14f:	sbb    BYTE PTR [ecx+edi*2],0x46
  43e153:	push   0x2f
  43e155:	mov    esp,0xa5a7e77d
  43e15a:	icebp  
  43e15b:	enter  0x46f2,0x57
  43e15f:	repnz repz inc esp
  43e162:	cwde   
  43e163:	or     edx,edx
  43e165:	dec    eax
  43e166:	lahf   
  43e167:	loop   0x43e170
  43e169:	sar    DWORD PTR [edi+0x3d],cl
  43e16c:	pop    es
  43e16d:	shr    BYTE PTR [eax-0x48858c66],cl
  43e173:	ret    0xe277
  43e176:	adc    al,0x86
  43e178:	sub    al,0x53
  43e17a:	hlt    
  43e17b:	in     al,0xec
  43e17d:	jecxz  0x43e1d2
  43e17f:	push   ds
  43e180:	aas    
  43e181:	sbb    ax,0x8473
  43e185:	mov    edi,0x86d0cd73
  43e18a:	cwde   
  43e18b:	mov    ds:0x2c2db1b3,al
  43e190:	inc    ecx
  43e191:	stos   BYTE PTR es:[edi],al
  43e192:	adc    eax,0x6d793134
  43e197:	repnz scas eax,DWORD PTR es:[edi]
  43e199:	mov    eax,ds:0xdb6af18e
  43e19e:	mov    dh,0x31
  43e1a0:	(bad)  
  43e1a1:	cdq    
  43e1a2:	and    al,0xae
  43e1a4:	inc    edi
  43e1a5:	bound  ebx,QWORD PTR [edx-0x6c5c145f]
  43e1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e1ac:	cmp    cl,BYTE PTR [edx-0x267569e]
  43e1b2:	gs iret 
  43e1b4:	cmp    al,0x3
  43e1b6:	aaa    
  43e1b7:	add    al,0x19
  43e1b9:	cmp    BYTE PTR [esi-0x6a],ah
  43e1bc:	lahf   
  43e1bd:	iret   
  43e1be:	je     0x43e161
  43e1c0:	or     DWORD PTR [esi+edi*1],edx
  43e1c3:	clc    
  43e1c4:	ins    BYTE PTR es:[edi],dx
  43e1c5:	in     eax,dx
  43e1c6:	xor    ebx,DWORD PTR [ebx]
  43e1c8:	in     eax,0x74
  43e1ca:	push   edx
  43e1cb:	xor    DWORD PTR [ebx],ecx
  43e1cd:	fimul  WORD PTR [esp+esi*1]
  43e1d0:	test   al,0xfa
  43e1d2:	arpl   WORD PTR [ebx],ax
  43e1d4:	fsincos 
  43e1d6:	and    al,0xf2
  43e1d8:	js     0x43e16d
  43e1da:	imul   edi,DWORD PTR [edx+ebx*1],0x366ce75c
  43e1e1:	ror    cl,cl
  43e1e3:	fdivp  st(3),st
  43e1e5:	rcr    DWORD PTR [edi],cl
  43e1e7:	xchg   ebx,eax
  43e1e8:	mov    edx,0xfdec1be1
  43e1ed:	mov    WORD PTR [esi+0x36],cs
  43e1f0:	loop   0x43e190
  43e1f2:	adc    BYTE PTR [ecx+ebp*8+0x7],bl
  43e1f6:	sub    dl,BYTE PTR [ebp+ebx*2-0x6]
  43e1fa:	jb     0x43e27b
  43e1fc:	nop
  43e1fd:	or     eax,0x849a282f
  43e202:	adc    DWORD PTR [ecx],eax
  43e204:	adc    al,BYTE PTR [ebx-0x47c062c5]
  43e20a:	pop    ebp
  43e20b:	out    0x70,al
  43e20d:	xchg   esi,eax
  43e20e:	and    bh,ch
  43e210:	aad    0xe5
  43e212:	fist   WORD PTR [ebx]
  43e214:	data16 fist WORD PTR [eax+0xbb1261a]
  43e21b:	(bad)  
  43e21c:	mov    esi,0xf8848155
  43e221:	(bad)  
  43e222:	in     eax,dx
  43e223:	je     0x43e294
  43e225:	pop    edx
  43e226:	in     eax,0x63
  43e228:	mov    al,ds:0xdc2b13d3
  43e22d:	(bad)  
  43e22e:	and    dl,BYTE PTR [ecx]
  43e230:	repz pusha 
  43e232:	xchg   ebx,eax
  43e233:	inc    ebp
  43e234:	in     al,dx
  43e235:	adc    DWORD PTR [ebx+0x4e],0xffffffd6
  43e239:	sti    
  43e23a:	pushf  
  43e23b:	enter  0xd93e,0xa3
  43e23f:	pushf  
  43e240:	jmp    0xf9ef:0x65d17ef2
  43e247:	cmp    esp,DWORD PTR [ebp+0x738df104]
  43e24d:	sub    BYTE PTR [ebx+0x6bd0de98],ch
  43e253:	(bad)  
  43e254:	jp     0x43e29c
  43e256:	aaa    
  43e257:	int3   
  43e258:	leave  
  43e259:	sti    
  43e25a:	mov    ah,0xf
  43e25c:	xchg   DWORD PTR [edx-0x6b],ebp
  43e25f:	ficom  WORD PTR [esi-0x57]
  43e262:	cmc    
  43e263:	sub    eax,0xa049d31e
  43e268:	rcl    BYTE PTR [esi],1
  43e26a:	jmp    0xdc1ae985
  43e26f:	(bad)  
  43e270:	jns    0x43e222
  43e272:	and    dl,ch
  43e274:	mov    ah,0x1b
  43e276:	clc    
  43e277:	test   DWORD PTR [ebx-0x33],edi
  43e27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e27b:	das    
  43e27c:	mov    ds:0xb43bbead,eax
  43e281:	mov    ebx,0x14c49231
  43e286:	xor    eax,0x2ae5d048
  43e28b:	mov    eax,ds:0x91c8de1e
  43e290:	mov    ah,0xa3
  43e292:	pop    esp
  43e293:	lock addr16 cld 
  43e296:	push   ebp
  43e297:	stos   BYTE PTR es:[edi],al
  43e298:	xchg   esp,eax
  43e299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e29a:	xor    eax,0x427385c4
  43e29f:	ret    0xee43
  43e2a2:	int3   
  43e2a3:	hlt    
  43e2a4:	pop    ss
  43e2a5:	add    ch,BYTE PTR [esi]
  43e2a7:	push   eax
  43e2a8:	adc    BYTE PTR [ebx-0x3b74d461],al
  43e2ae:	icebp  
  43e2af:	js     0x43e2e2
  43e2b1:	mov    cl,0xf3
  43e2b3:	mov    dh,0xc2
  43e2b5:	push   es
  43e2b6:	outs   dx,BYTE PTR ds:[esi]
  43e2b7:	mov    esp,0x52eb2fc
  43e2bc:	js     0x43e2f1
  43e2be:	hlt    
  43e2bf:	syscall 
  43e2c1:	nop
  43e2c2:	sar    BYTE PTR [edi-0x52c57d7e],0x48
  43e2c9:	and    DWORD PTR [edi+0x5d],ebp
  43e2cc:	dec    edx
  43e2cd:	cmp    DWORD PTR ds:0x794806c0,0xfffffffb
  43e2d4:	ret    0x8001
  43e2d7:	adc    ebp,DWORD PTR [esi+0x4d]
  43e2da:	mov    al,ds:0xe82fbb92
  43e2df:	ins    DWORD PTR es:[edi],dx
  43e2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e2e1:	pushf  
  43e2e2:	outs   dx,BYTE PTR ds:[esi]
  43e2e3:	mov    dl,0xfe
  43e2e5:	sub    ebx,DWORD PTR [ecx-0x6d]
  43e2e8:	mov    bh,0x85
  43e2ea:	and    BYTE PTR [ebp-0x639b48c8],ah
  43e2f0:	cld    
  43e2f1:	push   0xa61a3733
  43e2f6:	int3   
  43e2f7:	mov    edi,0x91d6777
  43e2fc:	call   0x37416ff3
  43e301:	stc    
  43e302:	test   ch,0x5b
  43e305:	pushf  
  43e306:	ins    DWORD PTR es:[edi],dx
  43e307:	rcl    DWORD PTR [ebx],1
  43e309:	xchg   ebx,eax
  43e30a:	push   ebx
  43e30b:	shl    DWORD PTR [ebp-0x7a],0xbc
  43e30f:	push   cs
  43e310:	not    DWORD PTR [eax]
  43e312:	mov    ebp,DWORD PTR [ebp+0x13]
  43e315:	retf   
  43e316:	adc    ebp,edi
  43e318:	(bad)  
  43e31a:	(bad)  [eax+0x4912d266]
  43e320:	cmp    BYTE PTR [ecx-0x61],0x4d
  43e324:	das    
  43e325:	xchg   ebp,eax
  43e326:	scas   al,BYTE PTR es:[edi]
  43e327:	out    0x5b,eax
  43e329:	mov    al,ds:0x4c4ab849
  43e32e:	cmp    BYTE PTR [ebp*4+0x30b53260],dh
  43e335:	push   ebx
  43e336:	sbb    bh,cl
  43e338:	mov    ds:0xe832961c,al
  43e33d:	sub    ch,dh
  43e33f:	ins    BYTE PTR es:[edi],dx
  43e340:	push   cs
  43e341:	pop    ebp
  43e342:	adc    eax,0x63da7dd9
  43e347:	add    ecx,DWORD PTR [edi+0x1062336f]
  43e34d:	push   es
  43e34e:	shl    esi,1
  43e350:	push   edi
  43e351:	adc    DWORD PTR [eax+0x75],esp
  43e354:	(bad)  
  43e355:	and    edx,DWORD PTR [ebp+eiz*8+0x2178c92a]
  43e35c:	pushf  
  43e35d:	ret    0x1a40
  43e360:	ret    0x4548
  43e363:	cs repnz mov dl,0xfb
  43e367:	js     0x43e334
  43e369:	mov    bh,0xb6
  43e36b:	imul   ecx,DWORD PTR [edi+eax*2-0x5a6adbcf],0x9e028f7f
  43e376:	pop    esp
  43e377:	data16 lods al,BYTE PTR ds:[esi]
  43e379:	xchg   edi,eax
  43e37a:	push   edx
  43e37b:	arpl   di,bp
  43e37d:	push   ebp
  43e37e:	or     BYTE PTR [esi],ah
  43e380:	push   ss
  43e381:	lods   eax,DWORD PTR ds:[esi]
  43e382:	loopne 0x43e33d
  43e384:	or     dl,dh
  43e386:	adc    bl,ah
  43e388:	lock movq QWORD PTR [ebx],mm2
  43e38c:	mov    ss:0x9cf62c33,eax
  43e392:	je     0x43e3d0
  43e394:	cmp    dl,BYTE PTR [edi-0x65a5ee46]
  43e39a:	(bad)  
  43e39b:	cmp    DWORD PTR [ecx-0x7e],ecx
  43e39e:	fcom   DWORD PTR [edx]
  43e3a0:	push   ebp
  43e3a1:	imul   ebx,DWORD PTR [eax],0x6a61e693
  43e3a7:	xor    ah,BYTE PTR [edi]
  43e3a9:	pusha  
  43e3aa:	shl    ah,1
  43e3ac:	dec    edx
  43e3ad:	mov    edx,DWORD PTR [esi+0x52]
  43e3b0:	pop    eax
  43e3b1:	push   ebx
  43e3b2:	pushf  
  43e3b3:	and    al,0x57
  43e3b5:	daa    
  43e3b6:	shr    DWORD PTR [edi+0xe],0xd5
  43e3ba:	dec    edi
  43e3bb:	and    eax,0xc9730c71
  43e3c0:	push   0x62ba832d
  43e3c5:	fnstsw WORD PTR [ebp-0x2f99b4c]
  43e3cb:	or     eax,0x7bece05a
  43e3d0:	sub    eax,0x833afd6b
  43e3d5:	retf   
  43e3d6:	pcmpgtw mm7,QWORD PTR [edx]
  43e3d9:	je     0x43e40f
  43e3db:	lods   al,BYTE PTR ds:[esi]
  43e3dc:	aas    
  43e3dd:	inc    esi
  43e3de:	sahf   
  43e3df:	fisttp DWORD PTR [edx-0x640aac2b]
  43e3e5:	jmp    0xdefd:0xf717b5c5
  43e3ec:	adc    BYTE PTR [eax],cl
  43e3ee:	xlat   BYTE PTR ds:[ebx]
  43e3ef:	add    edi,edx
  43e3f1:	sub    ebx,DWORD PTR [esi-0x71]
  43e3f4:	loope  0x43e3a8
  43e3f6:	loopne 0x43e43a
  43e3f8:	pop    edx
  43e3f9:	cwde   
  43e3fa:	stos   BYTE PTR es:[edi],al
  43e3fb:	and    al,0xb2
  43e3fd:	pop    ebp
  43e3fe:	retf   
  43e3ff:	mov    bh,0x41
  43e401:	pusha  
  43e402:	test   BYTE PTR [ebx+0x23e48197],0xdd
  43e409:	dec    ebp
  43e40a:	adc    BYTE PTR [edx],bl
  43e40c:	inc    ecx
  43e40d:	xchg   edi,eax
  43e40e:	push   ds
  43e40f:	push   ebp
  43e410:	mov    ebx,0x3a0a54e3
  43e415:	push   0x81e61ed6
  43e41a:	and    eax,0x56b0063f
  43e41f:	repnz imul ebx,edx,0x78ffcb7b
  43e426:	jne    0x43e3c9
  43e428:	xor    dh,BYTE PTR [edx+0x149ce7d8]
  43e42e:	push   eax
  43e42f:	cld    
  43e430:	push   ds
  43e431:	repz sbb eax,0x54ce952b
  43e437:	sbb    eax,0xdfd441ff
  43e43c:	aas    
  43e43d:	dec    ebx
  43e43e:	fistp  QWORD PTR [ebx]
  43e440:	and    eax,0xa8ab2ca3
  43e445:	dec    edx
  43e446:	dec    ebp
  43e447:	adc    DWORD PTR [edi+0x5b],edx
  43e44a:	sub    al,0x86
  43e44c:	stc    
  43e44d:	js     0x43e407
  43e44f:	test   BYTE PTR [edi-0x29],cl
  43e452:	jle    0x43e433
  43e454:	add    edx,DWORD PTR [ebx+esi*8+0xeb48bd5]
  43e45b:	inc    esp
  43e45c:	cmp    bl,ch
  43e45e:	mov    ch,0xb
  43e460:	mov    ds:0xc5ee1cc1,al
  43e465:	sbb    edi,ebp
  43e467:	jae    0x43e409
  43e469:	and    ch,BYTE PTR [ebp-0x19]
  43e46c:	or     bh,BYTE PTR [edx-0xd450ac]
  43e472:	mov    edx,0xd455776c
  43e477:	ret    0xee82
  43e47a:	mov    ecx,0xc98ce62
  43e47f:	into   
  43e480:	je     0x43e4ce
  43e482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e483:	or     dl,BYTE PTR [eax+eax*1+0x6b]
  43e487:	jl     0x43e477
  43e489:	(bad)  
  43e48a:	sbb    dl,BYTE PTR [esi+0x76]
  43e48d:	push   eax
  43e48e:	push   cs
  43e48f:	mov    edi,0x8fb07b60
  43e494:	mov    esi,0xf766fbff
  43e499:	shl    BYTE PTR [edx-0x104b3bc],1
  43e49f:	ret    0xc5d6
  43e4a2:	xor    edx,ebp
  43e4a4:	iret   
  43e4a5:	sub    DWORD PTR [ebp-0x27b6938],edx
  43e4ab:	hlt    
  43e4ac:	or     BYTE PTR [esi-0x455ad43],al
  43e4b2:	pop    es
  43e4b3:	sbb    DWORD PTR [ebp+0x4912e40f],edi
  43e4b9:	ds dec eax
  43e4bb:	and    DWORD PTR [edi],ecx
  43e4bd:	xchg   ebx,eax
  43e4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e4bf:	fwait
  43e4c0:	mov    BYTE PTR [edi-0x7f55cc03],dl
  43e4c6:	fstp   DWORD PTR [edi+ebp*2]
  43e4c9:	jp     0x43e540
  43e4cb:	inc    edi
  43e4cc:	sar    DWORD PTR [eax-0x7e],0xa6
  43e4d0:	in     al,0x17
  43e4d2:	retf   
  43e4d3:	add    al,0x2a
  43e4d5:	imul   edi,DWORD PTR [ebx+0x10],0x727b15bc
  43e4dc:	cmp    BYTE PTR [edx+0x7f9a09e],0x3
  43e4e3:	cmp    BYTE PTR [ebp+0x43],bh
  43e4e6:	test   BYTE PTR [eax+0xb684a90],cl
  43e4ec:	or     ah,BYTE PTR [edx-0x8]
  43e4ef:	in     al,dx
  43e4f0:	test   BYTE PTR [esi-0x4f],0xd
  43e4f4:	int3   
  43e4f5:	or     DWORD PTR [esi+0x3f16c477],edi
  43e4fb:	mov    dl,0x7f
  43e4fd:	push   0xffffffce
  43e4ff:	call   0x4ae3cdab
  43e504:	addr16 out 0x4c,al
  43e507:	ss scas al,BYTE PTR es:[edi]
  43e509:	push   edx
  43e50a:	dec    ebx
  43e50b:	(bad)  
  43e50c:	cmp    ebx,DWORD PTR [edi+0x2a]
  43e50f:	jns    0x43e58d
  43e511:	pop    ebx
  43e512:	fstp   QWORD PTR [eax+0x4e6a2cbe]
  43e518:	sbb    dh,BYTE PTR [edx]
  43e51a:	scas   al,BYTE PTR es:[edi]
  43e51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e51c:	loopne 0x43e590
  43e51e:	sar    bh,cl
  43e520:	mov    dl,0x92
  43e522:	stc    
  43e523:	jmp    0x9cb:0x2445294a
  43e52a:	fs out 0xd8,eax
  43e52d:	das    
  43e52e:	add    BYTE PTR [si-0xa],0x3f
  43e533:	loop   0x43e540
  43e535:	sub    bh,0xfb
  43e538:	cmovbe eax,DWORD PTR [eax-0x50]
  43e53c:	dec    esi
  43e53d:	adc    cl,BYTE PTR ds:0x2b9f62c0
  43e543:	out    dx,al
  43e544:	mov    dl,0x5d
  43e546:	mov    dh,0x75
  43e548:	adc    dh,BYTE PTR [ebx+edi*4]
  43e54b:	pop    ebp
  43e54c:	mov    dl,0x81
  43e54e:	push   ebp
  43e54f:	cs adc bl,al
  43e552:	push   cs
  43e553:	sbb    esp,DWORD PTR ds:0x2ee2cffb
  43e559:	mov    al,ds:0xa3f02ebb
  43e55e:	cli    
  43e55f:	stos   BYTE PTR es:[edi],al
  43e560:	xchg   esi,eax
  43e561:	fimul  WORD PTR [ecx*1-0x6ff09039]
  43e568:	jecxz  0x43e5d6
  43e56a:	pslld  mm1,QWORD PTR [esi+0x2f]
  43e56e:	and    cl,0x9b
  43e571:	dec    ecx
  43e572:	and    edi,DWORD PTR [esi+0x2eea53a6]
  43e578:	or     DWORD PTR [eax+0xc4f035f],esi
  43e57e:	or     BYTE PTR [ebp+0x105dec66],0x87
  43e585:	jecxz  0x43e59d
  43e587:	test   DWORD PTR [ecx-0x7f278083],esi
  43e58d:	stos   DWORD PTR es:[edi],eax
  43e58e:	sbb    bl,BYTE PTR [ebp-0x50cd7b9b]
  43e594:	push   cs
  43e595:	int    0x81
  43e597:	dec    eax
  43e598:	dec    edx
  43e599:	ss xchg ebx,eax
  43e59b:	dec    ecx
  43e59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e59d:	ret    
  43e59e:	mov    ebx,0xf50fbbc3
  43e5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e5a4:	add    DWORD PTR [edx+0x51],edx
  43e5a7:	add    ch,BYTE PTR [edx-0x79cfc1ed]
  43e5ad:	cmp    eax,DWORD PTR [edx-0x78]
  43e5b0:	lods   eax,DWORD PTR ds:[esi]
  43e5b1:	shl    BYTE PTR [edx+ebx*8+0x1],1
  43e5b5:	push   0x56
  43e5b7:	ror    BYTE PTR [edi],0xe5
  43e5ba:	int3   
  43e5bb:	mov    BYTE PTR [ebx+0x4d913cf5],dh
  43e5c1:	jns    0x43e582
  43e5c3:	retf   
  43e5c4:	imul   edi,DWORD PTR [esi+0xe],0xffffffa8
  43e5c8:	sub    BYTE PTR [edx-0x6],ah
  43e5cb:	push   0x62f8fdb
  43e5d0:	cmp    esi,DWORD PTR [eax+0x5c7925ba]
  43e5d6:	in     eax,0x4b
  43e5d8:	or     edi,DWORD PTR [edi+0x75]
  43e5db:	out    0x15,eax
  43e5dd:	cmp    DWORD PTR [edi+0x4e766ed],ebx
  43e5e3:	jo     0x43e58a
  43e5e5:	xor    esi,DWORD PTR [edi]
  43e5e7:	jbe    0x43e59e
  43e5e9:	mov    al,0x30
  43e5eb:	(bad)  
  43e5ec:	xlat   BYTE PTR ds:[ebx]
  43e5ed:	add    cl,BYTE PTR [edx+0xff6b08a]
  43e5f3:	in     al,0x26
  43e5f5:	lea    esp,[eax-0xa]
  43e5f8:	xlat   BYTE PTR ds:[ebx]
  43e5f9:	jecxz  0x43e5ac
  43e5fb:	cwde   
  43e5fc:	jae    0x43e5e7
  43e5fe:	jne    0x43e586
  43e600:	cmp    eax,0x1de6fbe0
  43e605:	fcomp  st(1)
  43e607:	inc    edx
  43e608:	call   0xacf6:0x12e8e22b
  43e60f:	or     bl,BYTE PTR [ecx+esi*8-0x555dd5a]
  43e616:	mov    dh,0x6d
  43e618:	sub    BYTE PTR [esi-0x47],ch
  43e61b:	das    
  43e61c:	into   
  43e61d:	loop   0x43e63e
  43e61f:	arpl   WORD PTR [eax],bx
  43e621:	data16 stc 
  43e623:	cmp    ch,BYTE PTR [ebp-0x79]
  43e626:	sar    BYTE PTR [esp+eax*2],0x10
  43e62a:	sub    ebp,DWORD PTR [eax+ecx*1+0x1a]
  43e62e:	sbb    eax,0x976a5d43
  43e633:	xchg   DWORD PTR [ebx+0x3561c616],eax
  43e639:	retf   
  43e63a:	pop    ss
  43e63b:	ror    BYTE PTR [edx-0x3],1
  43e63e:	inc    esp
  43e63f:	xchg   DWORD PTR ds:0x10326842,eax
  43e645:	mov    es,WORD PTR [esi-0x87e3558]
  43e64b:	and    edi,ebx
  43e64d:	pop    edx
  43e64e:	arpl   WORD PTR [ebx+0x24],ax
  43e651:	retf   0xcf1c
  43e654:	daa    
  43e655:	inc    edi
  43e656:	repnz or dl,cl
  43e659:	retf   
  43e65a:	addr16 dec ebx
  43e65c:	rcr    DWORD PTR [esi+0x16ae0400],cl
  43e662:	sub    al,0xca
  43e664:	jno    0x43e5e9
  43e666:	jp     0x43e60d
  43e668:	iret   
  43e669:	adc    eax,0xec2b8e04
  43e66e:	inc    ebx
  43e66f:	adc    cl,0x7f
  43e672:	mov    esi,0x1e8e28f7
  43e677:	or     dh,ah
  43e679:	leave  
  43e67a:	iret   
  43e67b:	mov    BYTE PTR [ecx-0x2d],ch
  43e67e:	not    DWORD PTR [eax+0x60]
  43e681:	push   es
  43e682:	pop    ss
  43e683:	jl     0x43e700
  43e685:	jae    0x43e6a7
  43e687:	jnp    0x43e62c
  43e689:	fwait
  43e68a:	mov    ebx,0x90c02d6f
  43e68f:	pop    ebx
  43e690:	pushf  
  43e691:	outs   dx,BYTE PTR ds:[esi]
  43e692:	push   0x1a
  43e694:	add    bh,bl
  43e696:	mov    esp,0xfaf443d2
  43e69b:	and    cl,bh
  43e69d:	cwde   
  43e69e:	cmp    ecx,DWORD PTR [eax]
  43e6a0:	mov    ds:0x6c66c857,al
  43e6a5:	inc    edi
  43e6a6:	inc    eax
  43e6a7:	out    dx,eax
  43e6a8:	jb     0x43e660
  43e6aa:	outs   dx,BYTE PTR ds:[esi]
  43e6ab:	ds lock sub DWORD PTR es:[edx+ebx*2-0x2de41b13],ecx
  43e6b5:	pop    es
  43e6b6:	mov    edi,0x6ab92bc3
  43e6bb:	add    DWORD PTR [ecx+0x51],0xe07f7178
  43e6c2:	test   al,al
  43e6c4:	repz mov eax,ds:0xbb61c3e
  43e6ca:	mov    edx,0x3467ffef
  43e6cf:	call   0x1396:0xff6733b
  43e6d6:	sub    DWORD PTR [ecx],edi
  43e6d8:	sub    eax,0xaff1b46c
  43e6dd:	mov    ds:0xffd74445,eax
  43e6e2:	dec    ebp
  43e6e3:	pushf  
  43e6e4:	shl    edx,cl
  43e6e6:	sbb    BYTE PTR [eax+0x3712113a],bl
  43e6ec:	retf   
  43e6ed:	fadd   QWORD PTR [edx+0x16db18d8]
  43e6f3:	cmp    esp,0x614bc714
  43e6f9:	sub    ch,bh
  43e6fb:	and    eax,0x21ee9352
  43e700:	pusha  
  43e701:	clc    
  43e702:	xor    ebp,eax
  43e704:	sbb    esi,DWORD PTR [eax-0x14]
  43e707:	mov    ecx,0xdfdd1fb6
  43e70c:	fldenv [eax-0x75]
  43e70f:	dec    BYTE PTR [ebx+0x275dc238]
  43e715:	cld    
  43e716:	lock jbe 0x43e6f9
  43e719:	jo     0x43e787
  43e71b:	pop    esp
  43e71c:	lds    ecx,FWORD PTR ds:0x1f45f692
  43e722:	xor    BYTE PTR [ebp-0x54],bh
  43e725:	dec    edi
  43e726:	(bad)  
  43e727:	stc    
  43e728:	sbb    al,0x6f
  43e72a:	stc    
  43e72b:	and    esp,DWORD PTR [ebx+0x16]
  43e72e:	jmp    0x2bdc:0x4f8e8270
  43e735:	sub    al,0xe3
  43e737:	fs mov esi,0x286b551a
  43e73d:	sbb    al,0xc6
  43e73f:	push   0xc8135b49
  43e744:	fcmovne st,st(0)
  43e746:	scas   eax,DWORD PTR es:[edi]
  43e747:	mov    ds:0x1c459e2a,al
  43e74c:	or     al,0x59
  43e74e:	rol    BYTE PTR [ebp-0x63fd7ce6],0x67
  43e755:	and    edx,DWORD PTR [esi+0x1e]
  43e758:	inc    esi
  43e759:	test   esp,eax
  43e75b:	test   eax,0x46f31e2e
  43e760:	(bad)  
  43e761:	aad    0x86
  43e763:	push   cs
  43e764:	adc    esp,esi
  43e766:	cdq    
  43e767:	mul    DWORD PTR [ebp+0x3a]
  43e76a:	js     0x43e72e
  43e76c:	jo     0x43e75d
  43e76e:	jge    0x43e7da
  43e770:	outs   dx,BYTE PTR ds:[esi]
  43e771:	push   ss
  43e772:	retf   0x554d
  43e775:	sbb    DWORD PTR [edi+ecx*4-0x7f],ebx
  43e779:	cld    
  43e77a:	aam    0x27
  43e77c:	shl    DWORD PTR [edx],cl
  43e77e:	add    BYTE PTR [ebx+0x530f4736],ah
  43e784:	clc    
  43e785:	cmc    
  43e786:	ret    
  43e787:	inc    ebx
  43e788:	icebp  
  43e789:	scas   eax,DWORD PTR es:[edi]
  43e78a:	retf   0x763f
  43e78d:	(bad)  
  43e78e:	mov    ds:0x874595f6,eax
  43e793:	or     BYTE PTR [edi],bl
  43e795:	inc    edx
  43e796:	outs   dx,DWORD PTR ds:[esi]
  43e797:	mov    ds:0xee679c74,al
  43e79c:	arpl   WORD PTR [esi],sp
  43e79e:	pop    ebp
  43e79f:	pop    ebx
  43e7a0:	sti    
  43e7a1:	sub    al,0x33
  43e7a3:	xchg   esi,eax
  43e7a4:	jae    0x43e772
  43e7a6:	cs push ecx
  43e7a8:	mov    ebx,0x2adf146a
  43e7ad:	rol    al,0x43
  43e7b0:	push   ebp
  43e7b1:	loopne 0x43e82f
  43e7b3:	inc    ecx
  43e7b4:	sub    DWORD PTR [ecx+0x38176512],esp
  43e7ba:	lock dec eax
  43e7bc:	lahf   
  43e7bd:	in     al,0x48
  43e7bf:	sub    eax,0xf049c8cd
  43e7c4:	mov    al,ds:0x5f8945d
  43e7c9:	mov    al,BYTE PTR [esi+eax*8-0x3f7d1e94]
  43e7d0:	add    edi,DWORD PTR [eax-0x14]
  43e7d3:	xchg   edx,eax
  43e7d4:	xlat   BYTE PTR ds:[ebx]
  43e7d5:	pop    esi
  43e7d6:	test   esp,esi
  43e7d8:	mov    eax,0x5b303a44
  43e7dd:	popa   
  43e7de:	ds pop edx
  43e7e0:	add    edx,DWORD PTR [esi-0xd855a1b]
  43e7e6:	imul   esp,ebx,0x52
  43e7e9:	sub    eax,0xaa4c7414
  43e7ee:	cmp    al,0x67
  43e7f0:	pop    ds
  43e7f1:	cmp    bl,BYTE PTR [edx]
  43e7f3:	test   BYTE PTR [ebp+0x2a],cl
  43e7f6:	push   ebp
  43e7f7:	nop
  43e7f8:	sbb    BYTE PTR [edi],ch
  43e7fa:	pushf  
  43e7fb:	sub    bh,BYTE PTR [ebx+eax*4+0x60]
  43e7ff:	jecxz  0x43e863
  43e801:	xlat   BYTE PTR ds:[ebx]
  43e802:	or     al,0x8b
  43e804:	sahf   
  43e805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e806:	adc    al,0x6e
  43e808:	xchg   ecx,eax
  43e809:	cmp    esp,ebp
  43e80b:	mov    cl,0xd9
  43e80d:	(bad)  ds:0x48ae0907
  43e813:	aam    0xa9
  43e815:	out    0xdb,al
  43e817:	imul   esp,DWORD PTR [edx],0xb7de5efa
  43e81d:	test   DWORD PTR [edx-0x150ed306],edi
  43e823:	add    dl,BYTE PTR [ecx+0x1e7803c9]
  43e829:	sub    DWORD PTR [esi+0x1e],ecx
  43e82c:	outs   dx,DWORD PTR ds:[esi]
  43e82d:	inc    ecx
  43e82e:	jb     0x43e7e3
  43e830:	jnp    0x43e864
  43e832:	add    ecx,DWORD PTR [ebp+0x57]
  43e835:	out    dx,al
  43e836:	lahf   
  43e837:	les    edx,FWORD PTR [esi+ecx*1]
  43e83a:	dec    edx
  43e83b:	dec    ebp
  43e83c:	mov    ecx,0x8e0c5b2a
  43e841:	dec    DWORD PTR [edx+0x60]
  43e844:	sub    BYTE PTR [edi+0x2f135e19],bl
  43e84a:	mov    bl,0x5b
  43e84c:	enter  0x6add,0xb0
  43e850:	or     bl,BYTE PTR [eax+0x526e7e45]
  43e856:	dec    edi
  43e857:	out    dx,eax
  43e858:	sti    
  43e859:	add    al,0xb0
  43e85b:	jp     0x43e8a9
  43e85d:	pop    ecx
  43e85e:	sub    ebp,ecx
  43e860:	inc    edx
  43e861:	xor    bh,BYTE PTR [ebx-0x6e3e439a]
  43e867:	addr16 push 0xffffffd8
  43e86a:	sub    dl,BYTE PTR [esi+0x76464447]
  43e870:	push   ss
  43e871:	adc    DWORD PTR ds:0xe73bb1a8,edx
  43e877:	xchg   ebp,eax
  43e878:	retf   0x68ed
  43e87b:	mov    bl,0x7f
  43e87d:	ja     0x43e8d4
  43e87f:	lods   al,BYTE PTR ds:[esi]
  43e880:	mov    edx,0x6a4f3781
  43e885:	xor    eax,0xa42b59e2
  43e88a:	int3   
  43e88b:	lds    ebp,FWORD PTR [edi+eax*2-0x236b569d]
  43e892:	inc    esp
  43e893:	leave  
  43e894:	hlt    
  43e895:	in     eax,0x45
  43e897:	sub    edx,DWORD PTR [edx+0x254c444e]
  43e89d:	popa   
  43e89e:	cli    
  43e89f:	xor    cl,dl
  43e8a1:	ret    0x6ea5
  43e8a4:	clc    
  43e8a5:	jge    0x43e8f6
  43e8a7:	add    edx,eax
  43e8a9:	dec    BYTE PTR [ebp+0x4a6068f]
  43e8af:	jb     0x43e872
  43e8b1:	sti    
  43e8b2:	and    DWORD PTR [edi+0x53],0x3f6eb40f
  43e8b9:	out    dx,eax
  43e8ba:	mov    edx,0xf5f78399
  43e8bf:	dec    BYTE PTR [esi-0x37]
  43e8c2:	aaa    
  43e8c3:	mov    WORD PTR [edx],ds
  43e8c5:	and    eax,0xc2bf900b
  43e8ca:	mov    ds:0xb819edb8,eax
  43e8cf:	adc    edx,DWORD PTR [esp+edx*1+0x63c498bd]
  43e8d6:	adc    DWORD PTR [ecx-0x38b91ae8],esp
  43e8dc:	jae    0x43e8b2
  43e8de:	(bad)  
  43e8df:	sti    
  43e8e0:	jmp    0x43e8c3
  43e8e2:	push   es
  43e8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e8e4:	dec    ebp
  43e8e5:	adc    ecx,0x65
  43e8e8:	sbb    eax,0xd247fe8d
  43e8ed:	add    eax,0xcbd81b78
  43e8f2:	addr16 int 0xe7
  43e8f5:	inc    ebp
  43e8f6:	pop    ecx
  43e8f7:	jb     0x43e96e
  43e8f9:	arpl   dx,si
  43e8fb:	arpl   WORD PTR [edi+0x6d06cecb],si
  43e901:	aad    0x30
  43e903:	ficom  WORD PTR [ebx-0x6d]
  43e906:	outs   dx,BYTE PTR ds:[esi]
  43e907:	daa    
  43e908:	ret    0xf565
  43e90b:	enter  0x8f2,0x66
  43e90f:	cld    
  43e910:	push   edx
  43e911:	push   0xeba222b8
  43e916:	cld    
  43e917:	mov    esi,0xac1e99f
  43e91c:	in     al,dx
  43e91d:	add    BYTE PTR [edi],0xf0
  43e920:	loop   0x43e90f
  43e922:	das    
  43e923:	imul   edx,DWORD PTR [esp+eax*2-0x59],0x4a
  43e928:	test   al,0x5c
  43e92a:	gs iret 
  43e92c:	mov    ch,0xda
  43e92e:	pushf  
  43e92f:	fistp  WORD PTR [ebp-0x3c]
  43e932:	rsm    
  43e934:	xor    DWORD PTR [ecx],0xffffff94
  43e937:	xchg   edx,eax
  43e938:	add    BYTE PTR [ecx+eiz*8],dl
  43e93b:	mov    DWORD PTR [edx],0x91963bc3
  43e941:	std    
  43e942:	mov    dl,0xb9
  43e944:	pop    edx
  43e945:	out    dx,eax
  43e946:	pop    ds
  43e947:	ficomp DWORD PTR [edi]
  43e949:	pop    esp
  43e94a:	jmp    0x359d:0xf1aed253
  43e951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e952:	out    0x73,eax
  43e954:	ds jno 0x43e8fd
  43e957:	mov    ebp,0xd0dcd0b8
  43e95c:	mov    al,ds:0x300dcef8
  43e961:	jmp    0x8b20:0x3440
  43e967:	adc    ebp,DWORD PTR [ebx+esi*2]
  43e96a:	sti    
  43e96b:	movq   mm4,mm1
  43e96e:	mov    al,ds:0x549c3c68
  43e973:	jmp    0xbeb5:0xd93663e
  43e97a:	inc    ecx
  43e97b:	dec    esp
  43e97c:	les    ebx,FWORD PTR [eax]
  43e97e:	xor    DWORD PTR [esi-0x31f8c1d4],ecx
  43e984:	jl     0x43e92b
  43e986:	mov    cl,0xd2
  43e988:	lea    esp,[eax+ecx*2-0x4da11fcf]
  43e98f:	xor    BYTE PTR [edx+eax*4+0x49167ac6],ch
  43e996:	xor    BYTE PTR [ecx+0x19],0x5d
  43e99a:	xchg   esp,eax
  43e99b:	push   0x45490a1
  43e9a0:	dec    eax
  43e9a1:	and    bl,BYTE PTR [ecx]
  43e9a3:	push   0x2
  43e9a5:	push   ebp
  43e9a6:	sub    ah,ah
  43e9a8:	ret    0xfe0d
  43e9ab:	int3   
  43e9ac:	inc    eax
  43e9ad:	sbb    DWORD PTR [ebx+edi*1-0x48fe6487],ecx
  43e9b4:	fadd   st(4),st
  43e9b6:	rol    BYTE PTR [esi+0x55],1
  43e9b9:	dec    edi
  43e9ba:	in     al,0x64
  43e9bc:	lods   eax,DWORD PTR ds:[esi]
  43e9bd:	fs pop ds
  43e9bf:	jge    0x43ea07
  43e9c1:	sub    BYTE PTR [ecx+edx*4+0x78],dl
  43e9c5:	int3   
  43e9c6:	lahf   
  43e9c7:	cmp    BYTE PTR [edi-0x4e1b5ee9],0x10
  43e9ce:	jmp    0x3b47:0xec3df848
  43e9d5:	loopne 0x43ea53
  43e9d7:	mov    eax,0x284b81cf
  43e9dc:	(bad)  
  43e9dd:	aas    
  43e9de:	mov    DWORD PTR [ebp+0x4b],ecx
  43e9e1:	cdq    
  43e9e2:	jae    0x43e9e6
  43e9e4:	xchg   ecx,eax
  43e9e5:	ds push ebx
  43e9e7:	int    0xf8
  43e9e9:	push   ss
  43e9ea:	popa   
  43e9eb:	push   ss
  43e9ec:	add    DWORD PTR [ebx+0x1b],0x56
  43e9f0:	mov    al,0x0
  43e9f2:	imul   ebp,DWORD PTR [eax],0xd3d21f0e
  43e9f8:	outs   dx,BYTE PTR ds:[esi]
  43e9f9:	ins    DWORD PTR es:[edi],dx
  43e9fa:	ss js  0x43e999
  43e9fd:	ja     0x8ecc4ce2
  43ea03:	mov    ch,0x2d
  43ea05:	jns    0x43ea62
  43ea07:	jecxz  0x43e9ca
  43ea09:	mov    eax,0x49023526
  43ea0f:	(bad)  
  43ea10:	pop    edi
  43ea11:	sahf   
  43ea12:	dec    ebx
  43ea13:	in     al,0xcd
  43ea15:	xor    DWORD PTR [eax+0x35c03f1e],edi
  43ea1b:	and    ebx,ebx
  43ea1d:	out    dx,eax
  43ea1e:	scas   eax,DWORD PTR es:[edi]
  43ea1f:	ss lock cmp eax,edi
  43ea23:	pushf  
  43ea24:	mov    edx,DWORD PTR [ebx+0x49e2d617]
  43ea2a:	push   ebp
  43ea2b:	cmp    eax,ebp
  43ea2d:	ja     0x43ea31
  43ea2f:	mov    eax,ds:0xc34fbd03
  43ea34:	enter  0x32fa,0xe1
  43ea38:	test   DWORD PTR ds:0xbcf8dde1,esi
  43ea3e:	ja     0x2b82a417
  43ea44:	outs   dx,DWORD PTR ds:[esi]
  43ea45:	(bad)  
  43ea46:	int    0xc0
  43ea48:	jle    0x43ea6a
  43ea4a:	in     eax,dx
  43ea4b:	dec    edi
  43ea4c:	add    eax,0x87197a66
  43ea51:	jbe    0x43e9e7
  43ea53:	and    cl,cl
  43ea55:	ins    DWORD PTR es:[edi],dx
  43ea56:	(bad)  
  43ea57:	cdq    
  43ea58:	(bad)  
  43ea5a:	xor    al,0xd7
  43ea5c:	sbb    DWORD PTR [ebx],eax
  43ea5e:	mov    ecx,0xb681c26b
  43ea63:	mov    dh,0x7
  43ea65:	cmp    ebp,edi
  43ea67:	sub    BYTE PTR [ecx+0x52],al
  43ea6a:	adc    BYTE PTR [eax+0x4170451a],ah
  43ea70:	fstp   QWORD PTR [edx]
  43ea72:	sbb    al,0x7d
  43ea74:	mov    ds:0xa6063564,al
  43ea79:	rcl    ebx,1
  43ea7b:	rol    DWORD PTR [ebx+0x2],1
  43ea7e:	clc    
  43ea7f:	pop    edx
  43ea80:	div    ebx
  43ea82:	test   BYTE PTR [edx+0x5f1ad5c1],al
  43ea88:	into   
  43ea89:	mov    ds:0x6c51695a,al
  43ea8e:	stos   DWORD PTR es:[edi],eax
  43ea8f:	sbb    bh,BYTE PTR ds:0xaba4f45d
  43ea95:	push   es
  43ea96:	in     eax,0x9
  43ea98:	jmp    0x43ea9a
  43ea9a:	jmp    0x84d98cda
  43ea9f:	popa   
  43eaa0:	repz pop es
  43eaa2:	shr    DWORD PTR [edi],cl
  43eaa4:	pop    ecx
  43eaa5:	cmp    DWORD PTR [ebx],ecx
  43eaa7:	stos   DWORD PTR es:[edi],eax
  43eaa8:	and    BYTE PTR [eax+0x225b4a19],bl
  43eaae:	ret    
  43eaaf:	add    edx,DWORD PTR [esi]
  43eab1:	popf   
  43eab2:	rol    DWORD PTR [ebx+0x3b186536],1
  43eab8:	mov    al,0xe7
  43eaba:	inc    edx
  43eabb:	aaa    
  43eabc:	retf   
  43eabd:	push   esp
  43eabe:	add    dh,al
  43eac0:	or     BYTE PTR [ecx+0x12],dh
  43eac3:	mov    ds:0xf1776406,eax
  43eac8:	pop    edi
  43eac9:	test   al,0xf7
  43eacb:	pop    ss
  43eacc:	aad    0x7c
  43eace:	clc    
  43eacf:	xchg   DWORD PTR [esi-0x5b],edi
  43ead2:	mov    bl,0x34
  43ead4:	jb     0x43ea64
  43ead6:	jns    0x43eb23
  43ead8:	leave  
  43ead9:	xchg   esp,eax
  43eada:	pop    edi
  43eadb:	ins    BYTE PTR es:[edi],dx
  43eadc:	and    al,0x33
  43eade:	in     eax,dx
  43eadf:	push   edx
  43eae0:	fdivr  DWORD PTR [edx+ebx*8+0x10]
  43eae4:	outs   dx,DWORD PTR ds:[esi]
  43eae5:	xor    bh,BYTE PTR [ecx+0x3d01f28e]
  43eaeb:	leave  
  43eaec:	sti    
  43eaed:	pop    edx
  43eaee:	push   ecx
  43eaef:	dec    esi
  43eaf0:	in     eax,dx
  43eaf1:	je     0x43eb6e
  43eaf3:	addr16 iret 
  43eaf5:	outs   dx,BYTE PTR ds:[esi]
  43eaf7:	and    DWORD PTR [ecx+0x1b11e6c1],0x3b
  43eafe:	mov    ds:0x432e7fde,eax
  43eb03:	inc    edx
  43eb04:	dec    esp
  43eb05:	(bad)  
  43eb06:	jns    0x43ea8d
  43eb08:	pop    ebx
  43eb09:	in     eax,0x21
  43eb0b:	cmp    edx,DWORD PTR [edx]
  43eb0d:	add    ch,dl
  43eb0f:	dec    edx
  43eb10:	jb     0x43eabe
  43eb12:	lods   al,BYTE PTR ds:[esi]
  43eb13:	adc    ebx,esi
  43eb15:	loopne 0x43eac5
  43eb17:	sbb    dh,dh
  43eb19:	fcomp  DWORD PTR [ecx+0x53ae3d62]
  43eb1f:	aas    
  43eb20:	aas    
  43eb21:	mov    ds:0x14bbdc6a,al
  43eb26:	js     0x43eb19
  43eb28:	inc    esp
  43eb29:	jmp    0x43eb73
  43eb2b:	pop    edi
  43eb2c:	lahf   
  43eb2d:	cli    
  43eb2e:	xor    al,0xb8
  43eb30:	stos   BYTE PTR es:[edi],al
  43eb31:	into   
  43eb32:	sbb    al,0x68
  43eb34:	lods   al,BYTE PTR ds:[esi]
  43eb35:	popa   
  43eb36:	stos   DWORD PTR es:[edi],eax
  43eb37:	sbb    ecx,ebp
  43eb39:	lds    edx,FWORD PTR [eax]
  43eb3b:	jg     0x43eae1
  43eb3d:	add    DWORD PTR [edx-0x76],esi
  43eb40:	leave  
  43eb41:	lahf   
  43eb42:	or     al,0x83
  43eb44:	xchg   esi,eax
  43eb45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eb46:	leave  
  43eb47:	pop    ebp
  43eb48:	xchg   DWORD PTR [ecx+eiz*4-0x6d],esp
  43eb4c:	mov    edi,0x53eea00c
  43eb51:	addr16 inc eax
  43eb53:	aam    0xd9
  43eb55:	cdq    
  43eb56:	pop    esp
  43eb57:	pushf  
  43eb58:	sbb    DWORD PTR [ebp+0x1d3b93a8],eax
  43eb5e:	or     al,0x79
  43eb60:	mov    al,ds:0x9755c0cf
  43eb65:	loop   0x43eb50
  43eb67:	push   0x1744b167
  43eb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eb6d:	out    0x8d,eax
  43eb6f:	inc    esp
  43eb70:	xchg   edi,eax
  43eb71:	pop    ss
  43eb72:	loop   0x43ebd5
  43eb74:	xchg   DWORD PTR [eax-0x9dfe5cc],ebp
  43eb7a:	add    ebx,ebx
  43eb7c:	loope  0x43ebb1
  43eb7e:	pop    ss
  43eb7f:	xchg   ebp,edi
  43eb81:	mov    ds:0xb8461c1f,eax
  43eb86:	shr    BYTE PTR [esi-0x80],0x90
  43eb8a:	mov    eax,0xfa7c6771
  43eb8f:	test   al,0x8c
  43eb91:	mov    bh,0x5
  43eb93:	sub    al,0x69
  43eb95:	mov    DWORD PTR [edx+eiz*4],ecx
  43eb98:	repz jge 0x43ec18
  43eb9b:	mov    dh,0x4e
  43eb9d:	inc    ebx
  43eb9e:	leave  
  43eb9f:	jge    0x43ec1b
  43eba1:	cmp    dh,BYTE PTR [edx+0x26]
  43eba4:	rcl    DWORD PTR ds:0xd584a469,1
  43ebaa:	addr16 icebp 
  43ebac:	les    ebx,FWORD PTR [ebx+esi*1]
  43ebaf:	shr    BYTE PTR ds:0xb926a9c2,cl
  43ebb5:	lds    eax,FWORD PTR [ebx+esi*8+0x54]
  43ebb9:	jp     0x43eb98
  43ebbb:	mov    esp,DWORD PTR [esi+0x38]
  43ebbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ebbf:	jns    0x43ebe0
  43ebc1:	push   esi
  43ebc2:	jb     0x43ebb7
  43ebc4:	jns    0x43eb75
  43ebc6:	mov    esp,0x803faf11
  43ebcb:	fisttp DWORD PTR es:[ebx+edx*4-0x715cef4d]
  43ebd3:	ja     0x43eb91
  43ebd5:	xor    DWORD PTR [ebp+0x29],0xa4a6e154
  43ebdc:	mov    eax,0xd5cc6a16
  43ebe1:	add    al,0xdb
  43ebe3:	push   ss
  43ebe4:	push   ebp
  43ebe5:	icebp  
  43ebe6:	mov    bh,0xf8
  43ebe8:	ror    bl,1
  43ebea:	into   
  43ebeb:	ficom  WORD PTR ds:0xd81cf960
  43ebf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ebf2:	or     cl,0xe2
  43ebf5:	pusha  
  43ebf6:	pop    esi
  43ebf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ebf8:	dec    ebp
  43ebf9:	outs   dx,BYTE PTR ds:[esi]
  43ebfa:	and    ecx,DWORD PTR es:[edx-0x4a53864e]
  43ec01:	out    dx,eax
  43ec02:	mov    dl,BYTE PTR [ebx]
  43ec04:	mov    ds:0x9184b693,eax
  43ec09:	jne    0x43ebfd
  43ec0b:	cmp    DWORD PTR [eax-0x68c7a731],0xd30170e4
  43ec15:	mov    WORD PTR [ebx+0x2af8c49e],?
  43ec1b:	fisttp DWORD PTR [edi]
  43ec1d:	push   ds
  43ec1e:	xchg   DWORD PTR [eax+0x11],esp
  43ec21:	sub    esi,DWORD PTR [esi-0x722955fe]
  43ec27:	int3   
  43ec28:	cmp    DWORD PTR [ebx],ecx
  43ec2a:	jmp    0xd289:0x55586fec
  43ec31:	jae    0x43eca1
  43ec33:	loop   0x43ec00
  43ec35:	inc    esp
  43ec36:	call   edi
  43ec38:	pop    ecx
  43ec39:	jne    0x43ecac
  43ec3b:	jne    0x43ebed
  43ec3d:	pop    es
  43ec3e:	cmc    
  43ec3f:	and    BYTE PTR cs:[ecx+0xf],dh
  43ec43:	scas   al,BYTE PTR es:[edi]
  43ec44:	lahf   
  43ec45:	pop    ebx
  43ec46:	add    BYTE PTR [edi],bh
  43ec48:	mov    ?,WORD PTR [ebp-0x3bd2f319]
  43ec4e:	and    eax,0x6d99325e
  43ec53:	popf   
  43ec54:	outs   dx,BYTE PTR ds:[esi]
  43ec55:	fwait
  43ec56:	mov    bl,0x1d
  43ec58:	cli    
  43ec59:	or     eax,0x9ff6f13b
  43ec5e:	test   esi,0x64a64530
  43ec64:	sar    BYTE PTR [ecx+0x78],0x3
  43ec68:	pop    edi
  43ec69:	xor    BYTE PTR [ecx+0x5ac7c755],dh
  43ec6f:	sbb    eax,0xa741fc0a
  43ec74:	in     al,dx
  43ec75:	repnz mov esi,0x5dc2b8ad
  43ec7b:	sahf   
  43ec7c:	stos   DWORD PTR es:[edi],eax
  43ec7d:	mov    ebp,0xfaf252a
  43ec82:	mov    ds:0x43cd27fd,eax
  43ec87:	cs in  al,dx
  43ec89:	mov    ds:0xde2a8c2e,eax
  43ec8e:	push   ecx
  43ec8f:	shl    BYTE PTR [eax+eiz*2+0x5d],0x94
  43ec94:	sti    
  43ec95:	mov    al,0x4f
  43ec98:	jp     0x43ec9a
  43ec9a:	aaa    
  43ec9b:	scas   eax,DWORD PTR es:[edi]
  43ec9c:	push   esp
  43ec9d:	gs int3 
  43ec9f:	test   BYTE PTR [edi+0x462566f2],ah
  43eca5:	mov    al,ds:0xc9c97fe8
  43ecaa:	ja     0x43ecb7
  43ecac:	dec    ebp
  43ecad:	popa   
  43ecae:	aam    0x67
  43ecb0:	inc    esp
  43ecb1:	push   0x50
  43ecb3:	push   ecx
  43ecb4:	out    0xe1,eax
  43ecb6:	pop    ebp
  43ecb7:	sti    
  43ecb8:	pop    eax
  43ecb9:	sub    edi,DWORD PTR [eax+0x2a]
  43ecbc:	sub    BYTE PTR [ebx+0x72423979],0x8c
  43ecc3:	test   eax,0xeb4a4a4d
  43ecc8:	jno    0x43eced
  43ecca:	jns    0x43ed1d
  43eccc:	enter  0xe244,0x17
  43ecd0:	xor    al,0x6d
  43ecd2:	(bad)  
  43ecd4:	mov    al,0xc8
  43ecd6:	xchg   edx,eax
  43ecd7:	sti    
  43ecd8:	and    ecx,DWORD PTR [ebx+0x1d42241a]
  43ecde:	mov    BYTE PTR [edi+0x4e916ed6],al
  43ece4:	jb     0x43ed1c
  43ece6:	sbb    edx,DWORD PTR [ecx-0x39]
  43ece9:	sub    BYTE PTR [edi+0x32758308],al
  43ecef:	in     eax,0x1b
  43ecf1:	adc    BYTE PTR [ebp+esi*4+0x284cc9d2],0x72
  43ecf9:	pop    ss
  43ecfa:	idiv   DWORD PTR [edi]
  43ecfc:	mov    ecx,0xb2b81f3d
  43ed01:	cdq    
  43ed02:	pusha  
  43ed03:	cld    
  43ed04:	mov    esp,0xf8f4a65f
  43ed09:	adc    eax,0x1906c2e6
  43ed0e:	cmp    eax,0x4c7a668
  43ed13:	gs mov al,0x7c
  43ed16:	xor    edx,esp
  43ed18:	adc    DWORD PTR [eax+0x67dc57ec],edx
  43ed1e:	and    ch,BYTE PTR [eax-0x24]
  43ed21:	add    DWORD PTR [edx+0x32],edx
  43ed24:	loope  0x43ed61
  43ed26:	add    edi,DWORD PTR [ebx+0x1f]
  43ed29:	pop    esi
  43ed2a:	inc    edi
  43ed2b:	sti    
  43ed2c:	lahf   
  43ed2d:	out    0xea,eax
  43ed2f:	push   edx
  43ed30:	xchg   esi,eax
  43ed31:	aas    
  43ed32:	retf   0x85b8
  43ed35:	out    dx,eax
  43ed36:	mov    es,WORD PTR [esi+0x1c67e166]
  43ed3c:	jecxz  0x43ecfb
  43ed3e:	(bad)  
  43ed3f:	mov    ebx,0xaa9e171b
  43ed44:	jne    0x43ecc9
  43ed46:	in     eax,0x6c
  43ed48:	mov    DWORD PTR [eax+0x66],ebp
  43ed4b:	xchg   edi,eax
  43ed4c:	iret   
  43ed4d:	push   edx
  43ed4e:	mov    edx,0x328c1511
  43ed53:	sbb    cl,BYTE PTR [ecx-0x3f155ef2]
  43ed59:	xchg   ecx,eax
  43ed5a:	pop    ss
  43ed5b:	jmp    0x43ed72
  43ed5d:	push   cs
  43ed5e:	cld    
  43ed5f:	inc    esp
  43ed60:	ja     0x43edde
  43ed62:	hlt    
  43ed63:	dec    esp
  43ed64:	mov    edx,0x365886e8
  43ed69:	iret   
  43ed6a:	hlt    
  43ed6b:	mov    bh,0xfd
  43ed6d:	xor    DWORD PTR [edx+0x473c2333],edx
  43ed73:	mov    dl,0x83
  43ed75:	int3   
  43ed76:	sub    DWORD PTR [edx-0x17030962],ebp
  43ed7c:	sahf   
  43ed7d:	dec    esi
  43ed7e:	sub    eax,DWORD PTR [esi-0x5e]
  43ed81:	dec    esi
  43ed82:	cld    
  43ed83:	(bad)  
  43ed84:	repz das 
  43ed86:	add    dh,bl
  43ed88:	popf   
  43ed89:	xor    eax,0x4351d6ef
  43ed8e:	iret   
  43ed8f:	dec    ebx
  43ed90:	retf   0x7436
  43ed93:	push   cs
  43ed94:	mov    esp,0xa0e9760e
  43ed99:	es ja  0x43ede6
  43ed9c:	fsub   st,st(1)
  43ed9e:	jg     0x43edd6
  43eda0:	not    BYTE PTR [edi+ebx*1]
  43eda3:	sbb    al,0x39
  43eda5:	outs   dx,BYTE PTR ds:[esi]
  43eda6:	(bad)  
  43eda7:	or     DWORD PTR ss:[ebx-0x18],esp
  43edab:	jmp    0xe02688eb
  43edb0:	xchg   ebp,eax
  43edb1:	push   edi
  43edb2:	loopne 0x43edf1
  43edb4:	and    eax,0x3317f6fa
  43edb9:	add    dl,BYTE PTR [esi+0x5e]
  43edbc:	adc    dh,bl
  43edbe:	stos   BYTE PTR es:[edi],al
  43edbf:	enter  0x6f,0xd7
  43edc3:	sahf   
  43edc4:	(bad)  
  43edc5:	outs   dx,BYTE PTR ds:[esi]
  43edc6:	pop    es
  43edc7:	push   0x78
  43edc9:	retf   0xd593
  43edcc:	mov    ah,0x22
  43edce:	jge    0x43ed68
  43edd0:	(bad)  
  43edd1:	repnz (bad)
  43edd4:	mov    ss,edi
  43edd6:	pop    edi
  43edd7:	or     eax,0x11c9e583
  43eddc:	(bad)  [edx+0xccfd62b]
  43ede2:	mov    ds:0x1b065c,eax
  43ede7:	fldcw  WORD PTR [ecx]
  43ede9:	clc    
  43edea:	xor    eax,0xc001ff59
  43edef:	imul   edi,edx,0x1649af48
  43edf5:	xchg   dl,dh
  43edf7:	popa   
  43edf8:	sar    BYTE PTR [edi+0x3ea37b2a],0x8d
  43edff:	cmp    ch,BYTE PTR [esi]
  43ee01:	fcom   DWORD PTR [ecx]
  43ee03:	push   es
  43ee04:	mov    ds:0xbeb7abac,eax
  43ee09:	push   ebp
  43ee0a:	nop
  43ee0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee0c:	test   BYTE PTR [ebx+0xa9127bd],dl
  43ee12:	inc    edi
  43ee13:	mov    ebp,0xc2d2d25f
  43ee18:	fwait
  43ee19:	sub    BYTE PTR [esp+ecx*1-0x11],dh
  43ee1d:	xor    al,0xda
  43ee1f:	mov    ebx,0xe910064f
  43ee24:	gs daa 
  43ee26:	push   ebp
  43ee27:	mov    ?,eax
  43ee29:	inc    ecx
  43ee2a:	sub    DWORD PTR [ecx+0x7c],edx
  43ee2d:	adc    dh,dl
  43ee2f:	addr16 inc edi
  43ee31:	sub    al,0x4b
  43ee33:	lock mov edx,0x40262ee9
  43ee39:	(bad)  
  43ee3a:	outs   dx,BYTE PTR ds:[esi]
  43ee3b:	jmp    0x9f6788f0
  43ee40:	push   ss
  43ee41:	push   es
  43ee42:	fsub   DWORD PTR [ecx-0x60]
  43ee45:	mov    ebx,0xaf9f7f0e
  43ee4a:	mov    al,BYTE PTR [eax+0x372ff3b2]
  43ee50:	pop    edi
  43ee51:	out    dx,eax
  43ee52:	fdiv   st,st(6)
  43ee54:	es (bad) 
  43ee56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ee57:	pop    ebx
  43ee58:	adc    eax,0x81391dee
  43ee5d:	jnp    0x43edf2
  43ee5f:	pusha  
  43ee60:	arpl   WORD PTR [ebx],dx
  43ee62:	lods   eax,DWORD PTR ds:[esi]
  43ee63:	ret    0x6af0
  43ee66:	jp     0x43eead
  43ee68:	sub    dh,BYTE PTR [ecx+esi*8]
  43ee6b:	adc    ecx,DWORD PTR [eax+esi*1+0x29d813a2]
  43ee72:	add    eax,esp
  43ee74:	out    0xad,eax
  43ee76:	adc    eax,0xbf30ac2c
  43ee7b:	fisub  WORD PTR [ecx+0x7d]
  43ee7e:	jnp    0x43ee13
  43ee80:	les    eax,FWORD PTR [eax+ebp*1-0x52]
  43ee84:	add    eax,0x8d67e74c
  43ee89:	scas   eax,DWORD PTR es:[edi]
  43ee8a:	(bad)  
  43ee8c:	(bad)  
  43ee8d:	pop    ss
  43ee8e:	rcl    BYTE PTR [ebx],1
  43ee90:	or     BYTE PTR [eax-0x1d],bl
  43ee93:	mov    eax,0xfc74f3cb
  43ee98:	sub    esi,eax
  43ee9a:	add    BYTE PTR [eax],al
  43ee9c:	pxor   mm0,QWORD PTR [esi-0x2b]
  43eea0:	mov    bl,0xd6
  43eea2:	out    dx,eax
  43eea3:	add    BYTE PTR [edi+0x14],cl
  43eea6:	imul   eax,DWORD PTR [edx+0x2d],0xc66d52c1
  43eead:	int    0x34
  43eeaf:	jecxz  0x43eeb7
  43eeb1:	mov    BYTE PTR [ecx],ch
  43eeb3:	push   esp
  43eeb4:	fs in  al,0x94
  43eeb7:	mov    al,0xf
  43eeb9:	xchg   BYTE PTR [ecx-0x2ec1dbc2],bl
  43eebf:	or     DWORD PTR [eax],0x3bb10ecd
  43eec5:	shr    DWORD PTR [ecx-0x72],0x45
  43eec9:	daa    
  43eeca:	push   ecx
  43eecb:	cmp    dh,al
  43eecd:	test   DWORD PTR [edx-0x5eaf78e2],eax
  43eed3:	pusha  
  43eed4:	add    edx,DWORD PTR [ecx-0x22]
  43eed7:	out    dx,eax
  43eed8:	bound  esi,QWORD PTR [esi-0x72]
  43eedb:	and    esp,eax
  43eedd:	scas   eax,DWORD PTR es:[edi]
  43eede:	jmp    0xd265:0xfe055554
  43eee5:	jle    0x43eec9
  43eee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eee8:	xor    DWORD PTR [ebx+0x37],edx
  43eeeb:	cli    
  43eeec:	cmp    eax,0xfe7afbb5
  43eef1:	add    DWORD PTR [eax*4+0x23f63389],edi
  43eef8:	add    BYTE PTR [edi],dl
  43eefa:	ror    DWORD PTR [eax+0x13],cl
  43eefd:	addr16 sub al,0x20
  43ef00:	add    BYTE PTR [esi-0x15],cl
  43ef03:	pop    esp
  43ef04:	push   ebp
  43ef05:	add    al,0xf5
  43ef07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ef08:	retf   
  43ef09:	(bad)  
  43ef0a:	out    dx,eax
  43ef0b:	mov    edx,0x901bb047
  43ef10:	mov    ebp,0x5d6ed478
  43ef15:	adc    BYTE PTR [ebp-0x1271a4b9],dh
  43ef1b:	neg    BYTE PTR [esi]
  43ef1d:	shl    BYTE PTR [eax+0x79d04846],0x20
  43ef24:	imul   ecx,DWORD PTR [ebp-0x1da18ce8],0xdd3f4b5
  43ef2e:	push   eax
  43ef2f:	push   edi
  43ef30:	popa   
  43ef31:	jo     0x43ef09
  43ef33:	imul   esp,DWORD PTR [edx+edx*8],0xfc48acff
  43ef3a:	pop    esi
  43ef3b:	out    dx,eax
  43ef3c:	push   cs
  43ef3d:	jbe    0x43eee0
  43ef3f:	dec    ecx
  43ef40:	mov    ecx,0x3e93e6e
  43ef45:	or     DWORD PTR [ebp-0x20fef13],eax
  43ef4b:	jns    0x43ef42
  43ef4d:	inc    esi
  43ef4e:	les    ecx,FWORD PTR [ebp-0x1618dee6]
  43ef54:	(bad)  
  43ef55:	jmp    0x1aba3ae
  43ef5a:	cmc    
  43ef5b:	and    DWORD PTR [edi],esi
  43ef5d:	bound  ebp,QWORD PTR ss:[ebx+0x6b]
  43ef61:	cmp    DWORD PTR [esi+0x31],esp
  43ef64:	pop    esp
  43ef65:	mov    ds:0xcb3f39a,al
  43ef6a:	or     cl,BYTE PTR [ecx]
  43ef6c:	aas    
  43ef6d:	push   ecx
  43ef6e:	retf   0xcac
  43ef71:	xor    ah,BYTE PTR [esi+0x62d44279]
  43ef77:	popa   
  43ef78:	out    0xfc,al
  43ef7a:	mov    al,ds:0x7ac47df
  43ef7f:	shl    DWORD PTR [edi],0xdc
  43ef82:	mov    WORD PTR [ecx-0x4d09c3fd],fs
  43ef88:	mov    bl,BYTE PTR [edx-0x53]
  43ef8b:	and    BYTE PTR [edx],bl
  43ef8d:	ret    0xb7d5
  43ef90:	inc    ebx
  43ef91:	add    BYTE PTR [ecx+0x24],dh
  43ef94:	push   ebp
  43ef95:	lds    ebp,FWORD PTR ds:0x15d47327
  43ef9b:	sub    BYTE PTR [ebx-0xd027317],cl
  43efa1:	xor    ecx,DWORD PTR [ecx-0x507c49d0]
  43efa7:	fadd   DWORD PTR [edi]
  43efa9:	push   esi
  43efaa:	lods   al,BYTE PTR ds:[esi]
  43efab:	test   bh,ch
  43efad:	jbe    0x43ef33
  43efaf:	jae    0x43ef58
  43efb1:	jl     0x43ef38
  43efb3:	jecxz  0x43ef50
  43efb5:	pop    edx
  43efb6:	(bad)  
  43efb7:	je     0x43f033
  43efb9:	fidiv  DWORD PTR [edi]
  43efbb:	arpl   WORD PTR [esi],di
  43efbd:	dec    esi
  43efbe:	into   
  43efbf:	(bad)  [edx+0x3d726621]
  43efc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43efc6:	pop    ecx
  43efc7:	dec    ebx
  43efc8:	outs   dx,BYTE PTR ds:[esi]
  43efc9:	je     0x43f017
  43efcb:	fistp  WORD PTR [esi+eax*8-0xc]
  43efcf:	push   ebp
  43efd0:	push   ebp
  43efd1:	jp     0x43f01e
  43efd3:	or     eax,0x6c9e1f39
  43efd8:	imul   ebp,ebp,0xffffffbb
  43efdb:	dec    ebp
  43efdc:	and    al,0xa8
  43efde:	fdivr  QWORD PTR [eax+0x347268d8]
  43efe4:	mov    esp,0xe1155ee
  43efe9:	data16 fidiv WORD PTR [ecx]
  43efec:	mov    ecx,0x289ac544
  43eff1:	jne    0x43f05a
  43eff3:	xchg   ebp,eax
  43eff4:	mov    ebx,esp
  43eff6:	test   BYTE PTR ds:0xac297181,0xf2
  43effd:	dec    ebx
  43effe:	xchg   ecx,eax
  43efff:	pushf  
  43f000:	call   0x551aff44
  43f005:	enter  0x43fe,0x33
  43f009:	psrld  mm7,QWORD PTR [edx+0x55]
  43f00d:	(bad)  
  43f00f:	sub    al,0xf2
  43f011:	mov    edi,0x8a9d3e99
  43f016:	scas   eax,DWORD PTR es:[edi]
  43f017:	adc    BYTE PTR [edx-0x6df8a0c7],bl
  43f01d:	add    al,0xe0
  43f01f:	(bad)  
  43f020:	gs add al,0xcc
  43f023:	idiv   DWORD PTR [edx+ecx*2]
  43f026:	test   edx,ebp
  43f028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f029:	call   0x5a29:0x58678461
  43f030:	mov    ah,0x63
  43f032:	cli    
  43f033:	dec    edi
  43f034:	adc    al,0x49
  43f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f037:	mov    ah,0x5d
  43f039:	cwde   
  43f03a:	dec    ecx
  43f03b:	mov    ?,WORD PTR [edi]
  43f03d:	mov    eax,0x5be64465
  43f042:	fcom   DWORD PTR [eax]
  43f044:	and    dl,dl
  43f046:	into   
  43f047:	retf   0x9601
  43f04a:	sub    edi,ecx
  43f04c:	push   esi
  43f04d:	imul   esp,eax,0x52
  43f050:	and    ah,dl
  43f052:	loopne 0x43f027
  43f054:	in     al,0x2e
  43f056:	test   DWORD PTR [esi-0x409bfa2],ebx
  43f05c:	adc    dh,BYTE PTR [edx]
  43f05e:	stos   DWORD PTR es:[edi],eax
  43f05f:	push   edx
  43f060:	xor    BYTE PTR [eax],bl
  43f062:	js     0x43efed
  43f064:	push   ebx
  43f065:	arpl   WORD PTR [edx-0x62bd1cb2],sp
  43f06b:	jl     0x43f098
  43f06d:	mov    ah,0xe8
  43f06f:	cs dec eax
  43f071:	and    edi,DWORD PTR [ecx+0x444f5397]
  43f077:	repz fwait
  43f079:	xor    DWORD PTR [edi+0x62],edi
  43f07c:	mov    ah,0xee
  43f07e:	aam    0x68
  43f080:	fdiv   st(6),st
  43f082:	popf   
  43f083:	pop    edi
  43f084:	fisub  DWORD PTR [ebx-0x7c]
  43f087:	mov    ah,0x1e
  43f089:	retf   
  43f08a:	and    ebp,ebp
  43f08c:	mov    edx,0x1770476a
  43f091:	pusha  
  43f092:	repnz adc al,0xe0
  43f095:	mov    bh,0x6c
  43f097:	sti    
  43f098:	aas    
  43f099:	cmp    edx,DWORD PTR ds:0x3c698dca
  43f09f:	out    0xef,al
  43f0a1:	cmp    DWORD PTR [esi+edi*8],ebx
  43f0a4:	mov    ch,0x91
  43f0a6:	ret    0x284b
  43f0a9:	popf   
  43f0aa:	outs   dx,BYTE PTR ds:[esi]
  43f0ab:	cli    
  43f0ac:	bound  edx,QWORD PTR [eax-0x18]
  43f0af:	imul   esp,DWORD PTR [ecx+0x35863b96],0x7d93adec
  43f0b9:	mov    edi,0x84a75078
  43f0be:	cmp    al,0x18
  43f0c0:	dec    eax
  43f0c1:	cmp    DWORD PTR [edx],ecx
  43f0c3:	jmp    0x439e:0x6415134b
  43f0ca:	pop    ebx
  43f0cb:	mov    eax,ebp
  43f0cd:	mov    dl,0xe9
  43f0cf:	push   0xcae434e9
  43f0d4:	and    al,0x70
  43f0d6:	sub    eax,0x76104caa
  43f0db:	mov    dh,0x8
  43f0dd:	and    BYTE PTR [esi-0x61],dl
  43f0e0:	sysexit 
  43f0e2:	and    eax,0x473f055e
  43f0e7:	push   DWORD PTR [esi]
  43f0e9:	test   eax,0x9dc0dad3
  43f0ee:	fwait
  43f0ef:	lods   al,BYTE PTR ds:[esi]
  43f0f0:	inc    esi
  43f0f1:	inc    esi
  43f0f2:	mov    eax,ds:0x600af94f
  43f0f7:	stos   DWORD PTR es:[edi],eax
  43f0f8:	mov    BYTE PTR [eax+ecx*2-0x1e],bh
  43f0fc:	xchg   ch,al
  43f0fe:	icebp  
  43f0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f100:	mov    al,0xe4
  43f102:	arpl   WORD PTR [edx],cx
  43f104:	jl     0x43f0a5
  43f106:	dec    ecx
  43f107:	and    DWORD PTR [eax],ebx
  43f109:	ret    0xf17a
  43f10c:	sub    ebp,DWORD PTR [ebp+0x2c7fdc30]
  43f112:	retf   
  43f113:	adc    al,0xd
  43f115:	stos   DWORD PTR es:[edi],eax
  43f116:	push   eax
  43f117:	push   0x44094387
  43f11c:	or     al,0xad
  43f11e:	dec    esi
  43f11f:	jp     0x43f0e5
  43f121:	sbb    eax,0xa5872116
  43f126:	adc    al,0xd7
  43f128:	mov    dl,0xfa
  43f12a:	mov    DWORD PTR [ebx-0x53],esi
  43f12d:	or     esp,DWORD PTR [eax+edi*1+0x1c3dcd6d]
  43f134:	jecxz  0x43f195
  43f136:	sbb    DWORD PTR [ebp+0x66c5e8ae],0x11
  43f13d:	mul    BYTE PTR [ecx]
  43f13f:	push   esi
  43f140:	sbb    DWORD PTR [ecx-0x17c7fe1e],eax
  43f146:	adc    BYTE PTR [ecx],0xb9
  43f149:	pop    edx
  43f14a:	lea    edx,[edx+eiz*1-0x596c1453]
  43f151:	sti    
  43f152:	rcr    DWORD PTR [ecx-0x670b9a6d],0xff
  43f159:	pop    edi
  43f15a:	sbb    cl,cl
  43f15c:	fimul  DWORD PTR [eax+0x6c5585b]
  43f162:	dec    edx
  43f163:	xor    dl,BYTE PTR [edx+ecx*8-0x2f]
  43f167:	dec    eax
  43f168:	in     al,dx
  43f169:	add    al,0x7a
  43f16b:	pop    ds
  43f16c:	nop
  43f16d:	jmp    0x43f15c
  43f16f:	add    BYTE PTR [esi],dl
  43f171:	test   DWORD PTR [edi],esi
  43f173:	les    edx,FWORD PTR [ebx]
  43f175:	in     al,0x59
  43f177:	sbb    al,0x0
  43f179:	fimul  WORD PTR [ecx-0x323deeaf]
  43f17f:	xor    ebp,DWORD PTR [esi-0x31424969]
  43f185:	push   ecx
  43f186:	outs   dx,DWORD PTR ds:[esi]
  43f187:	mov    al,ds:0x7d3c71bf
  43f18c:	mov    ch,0x41
  43f18e:	inc    esi
  43f18f:	les    edi,FWORD PTR [ecx]
  43f191:	mov    al,ds:0xf1dee172
  43f196:	mov    al,ds:0xe3d6d782
  43f19b:	pop    esp
  43f19c:	(bad)  
  43f19d:	scas   eax,DWORD PTR es:[edi]
  43f19e:	or     cl,BYTE PTR [ebx+ecx*8+0x12]
  43f1a2:	cmp    bl,BYTE PTR [esi]
  43f1a4:	mov    ds:0x52896778,eax
  43f1a9:	es dec esp
  43f1ab:	inc    eax
  43f1ac:	sar    BYTE PTR [edi+edx*4],cl
  43f1af:	sub    BYTE PTR [esi+0x7ccc68ba],cl
  43f1b5:	mov    al,0xe0
  43f1b7:	push   esi
  43f1b8:	aam    0x1e
  43f1ba:	pop    ss
  43f1bb:	cmp    ebx,edx
  43f1bd:	fsub   QWORD PTR [edx]
  43f1bf:	dec    esp
  43f1c0:	adc    BYTE PTR [eax],0xb7
  43f1c3:	sar    DWORD PTR [eax-0x75],1
  43f1c6:	inc    edi
  43f1c7:	add    al,0xcc
  43f1c9:	retf   0x9b95
  43f1cc:	xor    DWORD PTR [edx+0x13130412],0xffffffbd
  43f1d3:	push   ds
  43f1d4:	sbb    ah,BYTE PTR [edi+0x2c8df2db]
  43f1da:	stc    
  43f1db:	pop    eax
  43f1dc:	xchg   edi,eax
  43f1dd:	sbb    al,0x3d
  43f1df:	adc    DWORD PTR [eax+0xe598e83],edx
  43f1e5:	ret    0x21d5
  43f1e8:	ds mov edi,0x80d59a13
  43f1ee:	cmp    ch,BYTE PTR [edi]
  43f1f0:	xor    dl,0x2f
  43f1f3:	or     dl,BYTE PTR [ebx]
  43f1f5:	fstp   TBYTE PTR [edx]
  43f1f7:	xor    BYTE PTR [ebp-0x34d8c26],0xa1
  43f1fe:	scas   eax,DWORD PTR es:[edi]
  43f1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f200:	fidivr DWORD PTR [edi-0x31]
  43f203:	mov    eax,ds:0x8f553955
  43f208:	lds    edi,FWORD PTR [ebx+0x2b4b73d0]
  43f20e:	mov    ebp,0x9750cb66
  43f213:	lahf   
  43f214:	dec    edi
  43f215:	adc    DWORD PTR [ebp+0x6e2de17c],edx
  43f21b:	cmc    
  43f21c:	adc    BYTE PTR [esi+0x46],al
  43f21f:	sub    ecx,DWORD PTR [esi]
  43f221:	test   al,0xf6
  43f223:	data16 aas 
  43f225:	imul   DWORD PTR [ebx-0x4b]
  43f228:	(bad)  
  43f229:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43f22b:	pop    edi
  43f22c:	hlt    
  43f22d:	adc    ah,BYTE PTR [edx-0x2d]
  43f230:	addr16 push ss
  43f232:	rcr    DWORD PTR [edi+0x16],0x9c
  43f236:	fcom   DWORD PTR ds:0xbcb4b025
  43f23c:	mov    ecx,0x8bc2e1ab
  43f241:	test   al,0x23
  43f243:	mov    al,ds:0x28c7ea3
  43f248:	rol    BYTE PTR [ecx-0x31c7b7e2],cl
  43f24e:	std    
  43f24f:	sbb    edi,esi
  43f251:	mov    eax,eax
  43f253:	cmp    al,BYTE PTR [edi-0x6fbc2991]
  43f259:	add    BYTE PTR [ebp-0x5d17a892],bh
  43f25f:	jb     0x43f20d
  43f261:	mov    cs,WORD PTR [ecx]
  43f263:	out    dx,eax
  43f264:	scas   eax,DWORD PTR es:[edi]
  43f265:	aam    0x13
  43f267:	fs pop es
  43f269:	dec    ecx
  43f26a:	std    
  43f26b:	out    0xab,al
  43f26d:	rcl    BYTE PTR [ebx],0x12
  43f270:	xlat   BYTE PTR ds:[ebx]
  43f271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f272:	xchg   ebp,eax
  43f273:	jmp    0x55c14f99
  43f278:	mov    WORD PTR [eax+0x4e],fs
  43f27b:	or     BYTE PTR [ebx],ch
  43f27d:	inc    esi
  43f27e:	adc    ebx,DWORD PTR [eax+ebx*1-0x4a4811c7]
  43f285:	pop    ss
  43f286:	bound  esp,QWORD PTR [ebx-0x4f]
  43f289:	jmp    0x43f2ac
  43f28b:	(bad)  
  43f28c:	jmp    0x37ccec96
  43f291:	in     eax,0xa8
  43f293:	push   esp
  43f294:	test   al,0x37
  43f296:	inc    eax
  43f297:	stc    
  43f298:	pop    ebx
  43f299:	mov    cl,BYTE PTR [edx-0x5caf8023]
  43f29f:	cld    
  43f2a0:	imul   edx,DWORD PTR [ebp+edx*1-0x13],0x42
  43f2a5:	pop    ss
  43f2a6:	dec    ecx
  43f2a7:	out    0x6f,al
  43f2a9:	addr16 fs pop edi
  43f2ac:	loope  0x43f315
  43f2ae:	retf   
  43f2af:	mov    ?,WORD PTR [eax]
  43f2b1:	pushf  
  43f2b2:	hlt    
  43f2b3:	jo     0x43f32c
  43f2b5:	sbb    al,0x10
  43f2b7:	xor    DWORD PTR [eax+0x718d72ec],ebp
  43f2bd:	jp     0x43f308
  43f2bf:	cmp    eax,0xa0f00443
  43f2c4:	rcl    dl,0x6a
  43f2c7:	dec    ebp
  43f2c8:	out    dx,eax
  43f2c9:	ret    0x8bab
  43f2cc:	in     al,dx
  43f2cd:	adc    eax,0xee324182
  43f2d2:	cld    
  43f2d3:	out    0x6e,al
  43f2d5:	jns    0x43f2c7
  43f2d7:	jne    0x43f25c
  43f2d9:	mov    esi,0x9edf85b3
  43f2de:	cwde   
  43f2df:	mov    bh,0x13
  43f2e1:	jge    0x43f31d
  43f2e3:	xor    eax,0x922975d
  43f2e8:	test   eax,0x1ecf4016
  43f2ed:	sub    dl,bh
  43f2ef:	fistp  DWORD PTR ds:0xd9008336
  43f2f5:	dec    ecx
  43f2f6:	pop    esp
  43f2f7:	test   DWORD PTR [esi],ebx
  43f2f9:	and    eax,edx
  43f2fb:	retf   0x18d3
  43f2fe:	data16 aas 
  43f300:	into   
  43f301:	cmc    
  43f302:	xor    esi,esp
  43f304:	inc    ecx
  43f305:	xchg   BYTE PTR [esi],bh
  43f307:	xchg   DWORD PTR [ebp-0x47],edx
  43f30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f30b:	(bad)  
  43f30d:	and    DWORD PTR [ebx],ecx
  43f30f:	push   ebp
  43f310:	scas   eax,DWORD PTR es:[edi]
  43f311:	push   ds
  43f312:	jmp    0x86cfc2f0
  43f317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f318:	arpl   WORD PTR [edx],ax
  43f31a:	call   0xd853:0x7e70dc1f
  43f321:	adc    ebx,ecx
  43f323:	(bad)  
  43f324:	sti    
  43f325:	cli    
  43f326:	and    al,0x52
  43f328:	pop    edi
  43f329:	daa    
  43f32a:	(bad)  
  43f32b:	in     eax,dx
  43f32c:	ret    
  43f32d:	inc    eax
  43f32e:	loop   0x43f334
  43f330:	mov    dl,0xe2
  43f332:	je     0x43f32c
  43f334:	dec    eax
  43f335:	out    0xc8,al
  43f337:	mov    ah,0x65
  43f339:	ret    
  43f33a:	push   ds
  43f33b:	pop    esp
  43f33c:	mov    eax,0xdaf34bf4
  43f341:	dec    ecx
  43f342:	xor    esi,DWORD PTR [ecx]
  43f344:	xchg   esi,eax
  43f345:	mov    dl,0x5b
  43f347:	push   eax
  43f348:	aaa    
  43f349:	sbb    eax,0xaeb2bcb1
  43f34e:	push   esi
  43f34f:	adc    BYTE PTR [edx],bh
  43f351:	add    al,0xa1
  43f353:	fbld   TBYTE PTR [ebx]
  43f355:	leave  
  43f356:	sub    esp,DWORD PTR [edi]
  43f358:	or     eax,0xffb197a1
  43f35d:	ds fdiv st,st(5)
  43f360:	push   ds
  43f361:	cmp    eax,0xdea14152
  43f366:	es xchg esi,eax
  43f368:	neg    BYTE PTR [eax]
  43f36a:	add    al,BYTE PTR [ebp+ebx*1+0x2b8b6c7a]
  43f371:	mov    BYTE PTR [ecx-0x49],bl
  43f374:	call   0xbd1bfc36
  43f379:	popf   
  43f37a:	mov    ebp,0xd46963ae
  43f37f:	enter  0x5f5,0xce
  43f383:	and    esp,edx
  43f385:	inc    ecx
  43f386:	jl     0x43f39f
  43f388:	jns    0x43f32c
  43f38a:	sbb    ebp,DWORD PTR [edx+0x13e10a05]
  43f390:	adc    edi,DWORD PTR [ebp-0x5b]
  43f393:	inc    esi
  43f394:	cmc    
  43f395:	sti    
  43f396:	arpl   WORD PTR [eax+0x1b1c602b],di
  43f39c:	and    esp,DWORD PTR [ecx]
  43f39e:	sbb    al,0x4a
  43f3a0:	pop    ecx
  43f3a1:	cmp    cl,BYTE PTR [esi+0x29]
  43f3a4:	jns    0x43f403
  43f3a6:	aad    0x35
  43f3a8:	pop    ds
  43f3a9:	push   edi
  43f3aa:	pop    ecx
  43f3ab:	sub    eax,0x411727f2
  43f3b0:	ja     0x43f392
  43f3b2:	jo     0x43f386
  43f3b4:	xor    BYTE PTR [edi+0x2099b2d3],dh
  43f3ba:	leave  
  43f3bb:	(bad)  
  43f3bc:	rcr    cl,1
  43f3be:	rcl    BYTE PTR [eax],0xe
  43f3c1:	bound  ecx,QWORD PTR [ebx]
  43f3c3:	jmp    0x56ed5dfd
  43f3c8:	stos   BYTE PTR es:[edi],al
  43f3c9:	jmp    0x10ca:0x69144ce
  43f3d0:	xlat   BYTE PTR ds:[ebx]
  43f3d1:	lock jmp 0x43f3d7
  43f3d4:	pop    edx
  43f3d5:	test   al,0x8a
  43f3d7:	mul    BYTE PTR [esi+0x5bd08081]
  43f3dd:	int    0xf0
  43f3df:	inc    eax
  43f3e0:	or     al,0xff
  43f3e2:	loopne 0x43f3f9
  43f3e4:	and    eax,0xc6b0d8e4
  43f3e9:	inc    ebx
  43f3ea:	push   0xffffffed
  43f3ec:	lock mov dh,0x1c
  43f3ef:	test   DWORD PTR [ecx],edi
  43f3f1:	leave  
  43f3f2:	push   0x59
  43f3f4:	jno    0x43f424
  43f3f6:	xchg   esp,eax
  43f3f7:	xchg   dx,ax
  43f3f9:	mov    edi,esi
  43f3fb:	jns    0x43f3e2
  43f3fd:	test   DWORD PTR [edi-0xfe87f5f],0xf7a3bf1c
  43f407:	dec    esp
  43f408:	xchg   ecx,eax
  43f409:	pop    es
  43f40a:	push   esp
  43f40b:	xor    eax,0xe506d0a
  43f410:	call   0xc2338d40
  43f415:	push   edi
  43f416:	and    eax,0x51a3b390
  43f41b:	dec    edi
  43f41c:	xchg   BYTE PTR [edi+0x11],dh
  43f41f:	and    ecx,DWORD PTR [edi-0x43b96991]
  43f425:	call   0x9e86a81a
  43f42a:	adc    eax,0x4fca6057
  43f42f:	(bad)  
  43f430:	pop    edx
  43f431:	int    0xf
  43f433:	clc    
  43f434:	jne    0x43f444
  43f436:	mov    esp,0xf1b00b2f
  43f43b:	or     al,BYTE PTR [edx]
  43f43d:	jmp    0xc35e8385
  43f442:	jnp    0x43f42b
  43f444:	stc    
  43f445:	sbb    ch,bh
  43f447:	ds jnp 0x43f40e
  43f44a:	mov    es,ecx
  43f44c:	sti    
  43f44d:	sub    BYTE PTR ds:0x1611a735,0x33
  43f454:	cmp    DWORD PTR [edx+eax*8-0x7d],ebp
  43f458:	ret    0xf9d8
  43f45b:	lock es add al,0xea
  43f45f:	push   ecx
  43f460:	push   0xfe8863d3
  43f465:	dec    ebp
  43f466:	mov    ch,0xd3
  43f468:	cmp    BYTE PTR [eax+eiz*1+0x427c9fa1],0xb1
  43f470:	or     eax,0x356aa69f
  43f475:	std    
  43f476:	sub    al,0x1a
  43f478:	pop    ecx
  43f479:	stos   BYTE PTR es:[edi],al
  43f47a:	push   edx
  43f47b:	stos   DWORD PTR es:[edi],eax
  43f47c:	sub    BYTE PTR [ecx+0x37595ffc],ch
  43f482:	jp     0x43f493
  43f484:	mov    dh,BYTE PTR [eax+0x55cb9b7d]
  43f48a:	xor    eax,0x7d405d61
  43f48f:	loopne 0x43f48b
  43f491:	enter  0x273d,0xe6
  43f495:	cmovp  ebp,DWORD PTR [edi-0x6f]
  43f499:	pop    ss
  43f49a:	lahf   
  43f49b:	push   edx
  43f49c:	lods   eax,DWORD PTR ds:[esi]
  43f49d:	outs   dx,DWORD PTR ds:[esi]
  43f49e:	jno    0x43f4f6
  43f4a0:	mov    al,0x1a
  43f4a2:	int3   
  43f4a3:	jmp    0x6acb:0xbefb0b0f
  43f4aa:	sub    DWORD PTR [ebp+0x229c7592],ebx
  43f4b0:	dec    ecx
  43f4b1:	out    0xe1,al
  43f4b3:	jp     0x43f494
  43f4b5:	in     eax,0x6d
  43f4b7:	mov    esi,DWORD PTR es:[ebx]
  43f4ba:	sub    al,0x67
  43f4bc:	pop    eax
  43f4bd:	or     eax,0x3901f8b7
  43f4c2:	and    eax,0x96a0ac06
  43f4c7:	dec    edx
  43f4c8:	xchg   BYTE PTR [ecx-0x124b9c12],al
  43f4ce:	bound  ecx,QWORD PTR [ecx-0x3f]
  43f4d1:	rcr    BYTE PTR [eax-0x6b089f81],cl
  43f4d7:	inc    edi
  43f4d8:	jae    0x43f4ff
  43f4da:	lahf   
  43f4db:	punpcklwd mm4,DWORD PTR [edi]
  43f4de:	sbb    eax,0x2df50449
  43f4e3:	fbstp  TBYTE PTR [eax+0x303845e]
  43f4e9:	pop    ebp
  43f4ea:	addr16 jle 0x43f477
  43f4ed:	mov    esp,0x960e6e2c
  43f4f2:	pop    ebx
  43f4f3:	xchg   ebp,eax
  43f4f4:	fptan  
  43f4f6:	lods   al,BYTE PTR ds:[esi]
  43f4f7:	cmp    al,0x2e
  43f4f9:	mov    eax,0x3761d895
  43f4fe:	mov    ch,0xc0
  43f500:	inc    ebx
  43f501:	shl    BYTE PTR [ebp-0x3b],cl
  43f504:	(bad)  
  43f505:	cmp    dl,bh
  43f507:	ja     0x43f49d
  43f509:	push   esi
  43f50a:	sahf   
  43f50b:	sbb    al,0x49
  43f50d:	jno    0x43f4e5
  43f50f:	call   FWORD PTR [edx-0x2b5f9b5c]
  43f515:	stos   BYTE PTR es:[edi],al
  43f516:	pop    eax
  43f517:	jmp    0xef92f5d9
  43f51c:	scas   eax,DWORD PTR es:[edi]
  43f51d:	mov    BYTE PTR [eax-0x5],0xda
  43f521:	inc    esp
  43f522:	pop    ebx
  43f523:	imul   eax,edx,0x6a
  43f526:	push   DWORD PTR [esi-0x23630e22]
  43f52c:	ret    
  43f52d:	rcl    DWORD PTR [ebx+0x11],1
  43f530:	sbb    al,0xcb
  43f532:	or     dh,BYTE PTR [ecx-0x573c256f]
  43f538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f539:	jns    0x43f55e
  43f53b:	pop    es
  43f53c:	lds    edi,FWORD PTR [esi+ebx*1-0x7e35c0d9]
  43f543:	call   FWORD PTR [ecx+0x1c]
  43f546:	sub    al,0x5
  43f548:	pusha  
  43f549:	in     eax,dx
  43f54a:	sub    ebx,DWORD PTR [ebx+0xf39b5e8]
  43f550:	popa   
  43f551:	xchg   esp,eax
  43f552:	not    BYTE PTR [edi]
  43f554:	cwde   
  43f555:	adc    eax,DWORD PTR [ebx+0x65]
  43f558:	je     0x43f500
  43f55a:	xchg   ebp,eax
  43f55b:	rcr    DWORD PTR ds:0x93f46fb0,cl
  43f561:	sti    
  43f562:	jl     0x43f563
  43f564:	repnz mov ds:0xb4a5d6a9,al
  43f56a:	lock loope 0x43f597
  43f56d:	xchg   edi,eax
  43f56e:	and    edi,DWORD PTR [eax-0xc]
  43f571:	out    dx,al
  43f572:	(bad)  
  43f573:	aas    
  43f574:	int    0xde
  43f576:	pop    ebp
  43f577:	mov    edx,0x839d779d
  43f57c:	imul   edx,DWORD PTR [edi],0x8ecf10f7
  43f582:	lock push edx
  43f584:	daa    
  43f585:	jmp    0x4bdc7d8e
  43f58a:	test   BYTE PTR [ebx],bl
  43f58c:	int    0x20
  43f58e:	ds inc ebp
  43f590:	je     0x43f592
  43f592:	test   al,0xf8
  43f594:	addr16 inc esi
  43f596:	xor    dh,BYTE PTR [ebp-0x2bf8e0fe]
  43f59c:	or     cl,BYTE PTR [ecx]
  43f59e:	aad    0xa1
  43f5a0:	xchg   ecx,eax
  43f5a1:	mov    ds:0x3d3475b2,al
  43f5a6:	adc    eax,0x80f8f6eb
  43f5ab:	sub    eax,0x8406438b
  43f5b0:	push   esi
  43f5b1:	call   0x441b235f
  43f5b6:	fwait
  43f5b7:	lea    ecx,ds:[edi]
  43f5ba:	and    eax,DWORD PTR [ecx]
  43f5bc:	jae    0x83d3ee18
  43f5c2:	test   eax,0x9d6d9400
  43f5c7:	sahf   
  43f5c8:	sbb    DWORD PTR [edi+0x78],edi
  43f5cb:	shl    edx,0xd4
  43f5ce:	jge    0x43f639
  43f5d0:	pop    ebx
  43f5d1:	xchg   BYTE PTR [eax-0x72253ebd],cl
  43f5d7:	popa   
  43f5d8:	ins    BYTE PTR es:[edi],dx
  43f5d9:	ds in  al,0x68
  43f5dc:	mov    edi,0x3270d2f
  43f5e1:	shr    DWORD PTR [edi-0x5f1f237d],cl
  43f5e7:	add    DWORD PTR [edx-0x3],0x888824d6
  43f5ee:	cmp    dh,BYTE PTR [edx]
  43f5f0:	(bad)  
  43f5f1:	gs in  al,dx
  43f5f3:	mov    eax,ds:0xd4103513
  43f5f8:	sub    al,0x96
  43f5fa:	sbb    ebp,DWORD PTR [ecx+eiz*1]
  43f5fd:	int3   
  43f5fe:	imul   BYTE PTR [edi-0xf]
  43f601:	cs inc edx
  43f603:	inc    ebp
  43f604:	sub    eax,0xc6d73b7b
  43f609:	ror    DWORD PTR [ecx],0xde
  43f60c:	sti    
  43f60d:	pushf  
  43f60e:	xchg   esp,eax
  43f60f:	mov    ecx,0xdc597725
  43f614:	outs   dx,DWORD PTR ds:[esi]
  43f615:	sbb    edi,DWORD PTR [esi+0x24]
  43f618:	arpl   WORD PTR [edx],cx
  43f61a:	jl     0x43f64b
  43f61c:	cmc    
  43f61d:	icebp  
  43f61e:	push   esi
  43f61f:	xchg   esi,eax
  43f620:	mov    ds:0x223cdb57,al
  43f625:	repnz iret 
  43f627:	rcr    BYTE PTR [eax+0x1ed8fac9],1
  43f62d:	or     DWORD PTR [ebx+0xb266269],esi
  43f633:	dec    esi
  43f634:	push   edx
  43f635:	push   ebx
  43f636:	jo     0x43f630
  43f638:	dec    edi
  43f639:	(bad)  
  43f63a:	xor    BYTE PTR [edx],al
  43f63c:	shl    ecx,1
  43f63e:	lea    edi,[esi-0x4]
  43f641:	mov    ebx,0x29416a3e
  43f646:	loop   0x43f658
  43f648:	dec    edx
  43f649:	(bad)  
  43f64a:	sbb    al,0x6f
  43f64c:	sar    DWORD PTR [edi+esi*2-0x47],0x7c
  43f651:	jp     0x43f643
  43f653:	jecxz  0x43f6c8
  43f655:	push   cs
  43f656:	(bad)  [esi]
  43f658:	aam    0x89
  43f65a:	popa   
  43f65b:	jp     0x43f64a
  43f65d:	out    0xc8,eax
  43f65f:	ret    0x540b
  43f662:	xchg   ecx,eax
  43f663:	mov    ah,0x5
  43f665:	pop    ds
  43f666:	in     al,0x9d
  43f668:	xchg   esp,eax
  43f669:	test   eax,0x1462b319
  43f66e:	pop    esi
  43f66f:	fild   QWORD PTR [esi]
  43f671:	das    
  43f672:	in     al,dx
  43f673:	ret    0xf512
  43f676:	out    dx,al
  43f677:	add    esp,ebx
  43f679:	mov    dl,0x81
  43f67b:	or     al,bh
  43f67d:	pop    edx
  43f67e:	or     eax,0x310a5116
  43f683:	outs   dx,BYTE PTR ds:[esi]
  43f684:	inc    ebp
  43f685:	adc    DWORD PTR [eax],edx
  43f687:	pop    edx
  43f688:	xor    DWORD PTR [esi+0x7062eda0],esp
  43f68e:	adc    BYTE PTR [eax+ebx*2+0x3ccad1da],ah
  43f695:	in     al,dx
  43f696:	in     al,0xb1
  43f698:	jg     0x43f6a5
  43f69a:	sbb    esp,DWORD PTR [esi-0x38]
  43f69d:	add    ecx,DWORD PTR [edi+0x7fc27d3b]
  43f6a3:	pop    esp
  43f6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f6a5:	jg     0x43f68b
  43f6a7:	data16 std 
  43f6a9:	int    0xe2
  43f6ab:	add    ah,BYTE PTR [ecx]
  43f6ad:	retf   
  43f6ae:	retf   
  43f6af:	test   BYTE PTR [edi+edi*2-0x1a],bl
  43f6b3:	xchg   edi,eax
  43f6b4:	mov    ebx,0xd31212d
  43f6b9:	(bad)  
  43f6bb:	mov    esi,0xde50055f
  43f6c0:	imul   ebx,DWORD PTR [eax-0x6a],0xf4bbc382
  43f6c7:	inc    edx
  43f6c8:	std    
  43f6c9:	lea    eax,[ebp+ecx*2+0x13]
  43f6cd:	mov    eax,0x2dcb9dd5
  43f6d2:	fistp  DWORD PTR [ecx-0x59]
  43f6d5:	adc    al,0x89
  43f6d7:	sub    eax,0x586eb908
  43f6dc:	mov    cl,0xc
  43f6de:	cwde   
  43f6df:	cli    
  43f6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f6e1:	stc    
  43f6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f6e3:	xchg   edx,eax
  43f6e4:	mov    ecx,0xa131043e
  43f6e9:	jmp    0xdb8e:0x8ad5373d
  43f6f0:	pop    ds
  43f6f1:	jbe    0x43f6f1
  43f6f3:	xor    DWORD PTR [ebx+0x620be986],ebx
  43f6f9:	jbe    0x43f711
  43f6fb:	sub    al,0x6a
  43f6fd:	xor    DWORD PTR [ebx],ecx
  43f6ff:	mov    dh,0xe1
  43f701:	js     0x43f744
  43f703:	sbb    eax,0x6e1020e0
  43f708:	jae    0x43f6b5
  43f70a:	push   ss
  43f70b:	jb     0x43f6ef
  43f70d:	int    0xdc
  43f70f:	out    0xfc,eax
  43f711:	jecxz  0x43f70e
  43f713:	dec    eax
  43f714:	aaa    
  43f715:	jge    0x43f6cf
  43f717:	sub    al,0x84
  43f719:	mov    dl,bh
  43f71b:	dec    esp
  43f71c:	xor    ecx,DWORD PTR [ebx+0x2b7b33bc]
  43f722:	adc    dh,bh
  43f724:	cld    
  43f725:	(bad)  
  43f726:	sub    eax,0x1bee6417
  43f72b:	jmp    0x43f729
  43f72d:	push   edi
  43f72e:	cld    
  43f72f:	(bad)  
  43f730:	push   0x11
  43f732:	fisub  WORD PTR [ecx]
  43f734:	sub    edx,esp
  43f736:	shl    bl,1
  43f738:	dec    edi
  43f739:	sub    DWORD PTR [edi],esp
  43f73b:	fwait
  43f73c:	and    BYTE PTR [edi],ch
  43f73e:	inc    edx
  43f73f:	sub    esi,eax
  43f741:	or     edi,DWORD PTR [eax-0x26]
  43f744:	push   edi
  43f745:	arpl   WORD PTR [ebx+0x4af9347b],bx
  43f74b:	jmp    0xaa5:0x6ee3f7a5
  43f752:	fistp  WORD PTR [eax]
  43f754:	xchg   ecx,eax
  43f755:	xor    DWORD PTR [eax-0x43],ecx
  43f758:	mov    ebx,0x1f360a7b
  43f75d:	pop    ss
  43f75e:	(bad)  
  43f75f:	mov    esp,0x9f196ba9
  43f764:	xchg   edx,eax
  43f765:	enter  0x750b,0x56
  43f769:	dec    ebx
  43f76b:	push   eax
  43f76c:	jl     0x43f7ba
  43f76e:	hlt    
  43f76f:	mov    ds,WORD PTR [esi+0x30b63416]
  43f775:	jg     0x43f703
  43f777:	cmp    edx,DWORD PTR [ecx-0x56]
  43f77a:	pop    ss
  43f77b:	pop    esp
  43f77c:	sti    
  43f77d:	in     eax,0xe0
  43f77f:	xor    BYTE PTR [edx-0x5c54e928],0xc9
  43f786:	sub    al,0x1a
  43f788:	arpl   bx,di
  43f78a:	aas    
  43f78b:	adc    ah,dh
  43f78d:	inc    esp
  43f78e:	push   ds
  43f78f:	mov    ebp,0x167d3b58
  43f794:	inc    edi
  43f795:	(bad)  
  43f796:	pop    esi
  43f797:	lods   eax,DWORD PTR ds:[esi]
  43f798:	xor    DWORD PTR [eax],0x8aabe1e0
  43f79e:	jg     0x43f761
  43f7a0:	pop    edx
  43f7a1:	push   es
  43f7a2:	xchg   ebp,eax
  43f7a3:	mov    dl,0xc8
  43f7a5:	pop    edi
  43f7a6:	sub    bl,dh
  43f7a8:	fadd   QWORD PTR [esi+0x7ea23bf1]
  43f7ae:	iret   
  43f7af:	adc    al,0x86
  43f7b1:	mov    ebx,esi
  43f7b3:	scas   eax,DWORD PTR es:[edi]
  43f7b4:	ss jp  0x43f7c1
  43f7b7:	les    edi,FWORD PTR [ecx+0x44]
  43f7ba:	aad    0xa2
  43f7bc:	stc    
  43f7bd:	outs   dx,DWORD PTR ds:[esi]
  43f7be:	or     al,BYTE PTR [ebx-0x39a251ce]
  43f7c4:	dec    ecx
  43f7c5:	cmp    al,BYTE PTR [edx-0x432b799c]
  43f7cb:	clc    
  43f7cc:	imul   edx,DWORD PTR [esi-0x39],0xffffff92
  43f7d0:	outs   dx,BYTE PTR ds:[esi]
  43f7d1:	cmp    ch,bh
  43f7d3:	stc    
  43f7d4:	pop    esp
  43f7d5:	pop    edi
  43f7d6:	div    DWORD PTR [edi-0x41]
  43f7d9:	xchg   ecx,eax
  43f7da:	push   0x3f
  43f7dc:	add    al,0xbc
  43f7de:	push   ecx
  43f7df:	adc    ah,bl
  43f7e1:	jp     0x43f764
  43f7e3:	dec    ecx
  43f7e4:	mov    BYTE PTR [ebx+0x46664c77],dh
  43f7ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f7eb:	or     ecx,DWORD PTR [edx-0x63]
  43f7ee:	mov    cl,0x2f
  43f7f0:	add    eax,DWORD PTR [ebx-0x120120b9]
  43f7f6:	sub    al,0x73
  43f7f8:	inc    ebp
  43f7f9:	mov    edi,0xaeb81d9c
  43f7fe:	adc    eax,0xef45a3a8
  43f803:	xor    al,0x86
  43f805:	push   esp
  43f806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f807:	cld    
  43f808:	icebp  
  43f809:	imul   ebp,eax,0xffffffa9
  43f80c:	icebp  
  43f80d:	xor    BYTE PTR [esi+edi*2+0x52],dh
  43f811:	bound  esp,QWORD PTR [ebx]
  43f813:	add    al,0xb4
  43f815:	or     cl,BYTE PTR [edi]
  43f817:	(bad)  
  43f818:	popf   
  43f819:	jne    0x43f867
  43f81b:	mov    ecx,DWORD PTR [ebx+0x5a]
  43f81e:	pop    ss
  43f81f:	push   ebp
  43f820:	out    0xeb,eax
  43f822:	in     al,dx
  43f823:	push   0x3aca20f4
  43f828:	add    ah,dl
  43f82a:	retf   
  43f82b:	xor    BYTE PTR ds:0x6c95dd1b,al
  43f831:	fisttp DWORD PTR [eax-0x77]
  43f834:	and    eax,0xf0a61915
  43f839:	and    eax,0xe16a5c3b
  43f83e:	mov    ebp,0x1523f848
  43f843:	cmp    al,BYTE PTR [edi+0x551431b5]
  43f849:	adc    BYTE PTR [eax-0x2d2141b4],cl
  43f84f:	cld    
  43f850:	shr    BYTE PTR ss:[edi],cl
  43f853:	call   0x26392d5
  43f858:	inc    ecx
  43f859:	cmp    al,0xb3
  43f85b:	loope  0x43f808
  43f85d:	jae    0xfe93dca2
  43f863:	ins    BYTE PTR es:[edi],dx
  43f864:	pop    eax
  43f865:	push   ebx
  43f866:	mov    eax,ds:0x362b21ab
  43f86b:	jnp    0x43f846
  43f86d:	pop    ecx
  43f86e:	mov    eax,ds:0x3674ef77
  43f873:	push   es
  43f874:	std    
  43f875:	pop    ebp
  43f876:	fild   DWORD PTR [edx]
  43f878:	jmp    0x578a453f
  43f87d:	clc    
  43f87e:	or     edx,DWORD PTR [ecx+0x60]
  43f881:	add    al,0xd5
  43f883:	rcl    DWORD PTR [esi+0x3],1
  43f886:	gs mov dh,0xbc
  43f889:	adc    ebx,edx
  43f88b:	imul   ecx,DWORD PTR [ebp+esi*2-0x4dd57bae],0xffffff98
  43f893:	push   ebp
  43f894:	or     eax,0x57a31c5e
  43f899:	jnp    0x43f81f
  43f89b:	mov    bh,0x44
  43f89d:	clc    
  43f89e:	push   ss
  43f89f:	cmp    ebx,eax
  43f8a1:	mov    dl,0x2e
  43f8a3:	sbb    eax,0xd6643648
  43f8a8:	pop    esi
  43f8a9:	push   0xf4e29276
  43f8ae:	cmp    eax,0x8a9c715f
  43f8b3:	fmul   DWORD PTR [ecx+0x1f839c46]
  43f8b9:	mov    ch,0x5c
  43f8bb:	dec    edx
  43f8bc:	push   ebx
  43f8bd:	(bad)  
  43f8be:	jecxz  0x43f87f
  43f8c0:	rcr    esi,cl
  43f8c2:	and    ax,0x8b26
  43f8c6:	add    eax,0xe1c4cd91
  43f8cb:	lahf   
  43f8cc:	push   edx
  43f8cd:	pop    edx
  43f8ce:	(bad)  
  43f8cf:	fidivr WORD PTR ds:0xb1c754cb
  43f8d5:	stos   DWORD PTR es:[edi],eax
  43f8d6:	retf   0x7166
  43f8d9:	push   cs
  43f8da:	cmc    
  43f8db:	cmp    eax,0x88a9e815
  43f8e0:	pop    edi
  43f8e1:	scas   eax,DWORD PTR es:[edi]
  43f8e2:	ret    
  43f8e3:	out    dx,eax
  43f8e4:	jg     0x43f928
  43f8e6:	sub    al,0xf7
  43f8e8:	in     al,0x9
  43f8ea:	ja     0x43f967
  43f8ec:	pop    edx
  43f8ed:	(bad)  
  43f8ee:	loop   0x43f90e
  43f8f0:	in     al,dx
  43f8f1:	cmp    ebp,DWORD PTR [ecx+0x730a1c42]
  43f8f7:	popf   
  43f8f8:	sbb    eax,0xfb7764af
  43f8fd:	fs mov cl,0x77
  43f900:	cmp    ch,bl
  43f902:	arpl   WORD PTR [ecx-0x3eeca5b1],sp
  43f908:	push   ebx
  43f909:	test   eax,0x379b62c1
  43f90e:	pusha  
  43f90f:	aad    0x89
  43f911:	push   ss
  43f912:	out    dx,al
  43f913:	and    eax,0xd17c40cd
  43f918:	push   ebp
  43f919:	add    dh,BYTE PTR [ecx+0x77979740]
  43f91f:	pop    eax
  43f920:	inc    ebx
  43f921:	jle    0x43f905
  43f923:	ins    BYTE PTR es:[edi],dx
  43f924:	xchg   esp,eax
  43f925:	call   0x2cc020db
  43f92a:	leave  
  43f92b:	or     ebx,DWORD PTR [edi+0x5d]
  43f92e:	fwait
  43f92f:	in     al,0x58
  43f931:	pop    edx
  43f932:	(bad)  
  43f933:	or     al,0xb0
  43f935:	jmp    0x2b15398a
  43f93a:	enter  0x6a8c,0xd6
  43f93e:	inc    edi
  43f93f:	sbb    ah,dl
  43f941:	aaa    
  43f942:	dec    esp
  43f943:	jp     0x43f908
  43f945:	xlat   BYTE PTR ds:[ebx]
  43f946:	js     0x43f99c
  43f948:	stos   DWORD PTR es:[edi],eax
  43f949:	xor    edi,edi
  43f94b:	pop    edi
  43f94c:	jl     0x43f945
  43f94e:	test   eax,edx
  43f950:	imul   ecx,DWORD PTR [eax+0x1b720896],0xfd806b99
  43f95a:	push   edx
  43f95b:	pop    ebp
  43f95c:	mov    dh,0xa9
  43f95e:	sbb    BYTE PTR [ecx],cl
  43f960:	adc    DWORD PTR [esi-0x8],eax
  43f963:	scas   al,BYTE PTR es:[edi]
  43f964:	icebp  
  43f965:	jns    0x43f980
  43f967:	lahf   
  43f968:	ds sub eax,0x262dfc85
  43f96e:	cmp    al,0x7c
  43f970:	and    ch,BYTE PTR [edx+0x5e]
  43f973:	lods   al,BYTE PTR ds:[esi]
  43f974:	stc    
  43f975:	scas   al,BYTE PTR es:[edi]
  43f976:	sub    dl,ah
  43f978:	mov    ah,0x40
  43f97a:	add    esp,DWORD PTR fs:[ecx-0x74]
  43f97e:	add    eax,0xbb3f9f1f
  43f983:	lahf   
  43f984:	dec    ebx
  43f985:	pusha  
  43f986:	mov    ecx,0x4fff42b
  43f98b:	cmc    
  43f98c:	add    al,0xde
  43f98e:	xor    BYTE PTR [esp+eax*2+0x1f72947f],0xd2
  43f996:	pop    eax
  43f997:	sub    eax,0xb9413c7b
  43f99c:	mov    gs,WORD PTR [eax]
  43f99e:	xor    cl,ah
  43f9a0:	jo     0x43f961
  43f9a2:	es mov dh,0xe7
  43f9a5:	dec    eax
  43f9a7:	sbb    ah,BYTE PTR [eax]
  43f9a9:	aaa    
  43f9aa:	mov    ah,0xfe
  43f9ac:	not    DWORD PTR [ebx]
  43f9ae:	dec    edx
  43f9af:	sar    ecx,1
  43f9b1:	and    eax,DWORD PTR [edx]
  43f9b3:	pop    ss
  43f9b4:	xor    dh,BYTE PTR [eax-0x45074e58]
  43f9ba:	cli    
  43f9bb:	push   edi
  43f9bc:	imul   edi,edi,0xffffff8d
  43f9bf:	rcr    ch,cl
  43f9c1:	jnp    0x43f9b4
  43f9c3:	test   BYTE PTR [ebp-0x309af288],dh
  43f9c9:	mov    bh,dl
  43f9cb:	mov    ebx,0x19c065f9
  43f9d0:	test   al,0xd1
  43f9d2:	stos   DWORD PTR es:[edi],eax
  43f9d3:	xor    esi,esi
  43f9d5:	dec    eax
  43f9d6:	(bad)  
  43f9d7:	push   edx
  43f9d8:	inc    esi
  43f9d9:	mov    ds:0xecafa10b,eax
  43f9de:	push   ds
  43f9df:	or     al,al
  43f9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f9e2:	pop    ebp
  43f9e3:	sub    DWORD PTR [eax-0xe7d033b],ebx
  43f9e9:	mov    al,ds:0xf1eb4371
  43f9ee:	jmp    FWORD PTR [ebx-0x710192f4]
  43f9f4:	inc    ecx
  43f9f5:	iret   
  43f9f6:	mov    cs,esi
  43f9f8:	neg    ecx
  43f9fa:	push   eax
  43f9fb:	mov    ds:0xb320fea6,al
  43fa00:	xchg   ecx,eax
  43fa01:	mov    al,BYTE PTR [eax]
  43fa03:	pop    ebp
  43fa04:	out    dx,eax
  43fa05:	stos   DWORD PTR es:[edi],eax
  43fa06:	or     eax,0xc72c06e8
  43fa0b:	and    esi,DWORD PTR [edx+0x4d]
  43fa0e:	mov    ecx,0x13ff026e
  43fa13:	dec    ebx
  43fa14:	retf   
  43fa15:	pop    edx
  43fa16:	mov    ecx,0xc01e3c7c
  43fa1b:	push   cs
  43fa1c:	sti    
  43fa1d:	idiv   BYTE PTR [esp+esi*8]
  43fa20:	fcomp  QWORD PTR [edx-0x71]
  43fa23:	ror    DWORD PTR [esi-0x2e],1
  43fa26:	push   cs
  43fa27:	lea    edi,[ebx]
  43fa29:	adc    DWORD PTR [edi+0xa728181],edx
  43fa2f:	fstp   QWORD PTR [edx-0x6]
  43fa32:	loopne 0x43fa8a
  43fa34:	push   esp
  43fa35:	ins    DWORD PTR es:[edi],dx
  43fa36:	aad    0xc5
  43fa38:	mov    BYTE PTR [ecx],0x85
  43fa3b:	jnp    0x43f9ed
  43fa3d:	ins    DWORD PTR es:[edi],dx
  43fa3e:	mov    ch,0x7
  43fa40:	popf   
  43fa41:	sti    
  43fa42:	imul   ebp,DWORD PTR [eax],0xffffffb7
  43fa45:	push   ebp
  43fa46:	adc    DWORD PTR [eax+0x54c89514],ecx
  43fa4c:	(bad)  
  43fa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fa4e:	cmp    dl,ah
  43fa50:	(bad)
  43fa55:	call   0x8aa41cdb
  43fa5a:	popa   
  43fa5b:	fsubr  DWORD PTR [ebp+0x26]
  43fa5e:	xlat   BYTE PTR ds:[ebx]
  43fa5f:	dec    ecx
  43fa60:	sbb    BYTE PTR [ebp+ebp*8+0x2a],0x39
  43fa65:	sub    eax,0x524adcde
  43fa6a:	pop    ebp
  43fa6b:	into   
  43fa6c:	push   ebx
  43fa6d:	pushf  
  43fa6e:	sub    BYTE PTR [ebp+edi*4-0x58],bl
  43fa72:	mov    al,0x5
  43fa74:	xchg   esp,eax
  43fa75:	aad    0x66
  43fa77:	in     eax,0xd3
  43fa79:	push   edi
  43fa7a:	dec    eax
  43fa7b:	and    eax,0x69da9d2f
  43fa80:	jecxz  0x43fa99
  43fa82:	dec    edi
  43fa83:	mov    BYTE PTR [edi+0xe],0x9a
  43fa87:	xchg   esi,eax
  43fa88:	mov    ah,dh
  43fa8a:	out    dx,al
  43fa8b:	dec    ecx
  43fa8c:	nop
  43fa8d:	sub    ch,BYTE PTR [eax-0x20a27681]
  43fa93:	call   0xa493:0xe61715d9
  43fa9a:	mov    eax,0x6c23298b
  43fa9f:	ja     0x43fa37
  43faa1:	mov    ebp,0xe4e687ff
  43faa6:	xchg   edi,eax
  43faa7:	enter  0x3fd5,0xc7
  43faab:	ficomp DWORD PTR [ebx-0x76]
  43faae:	add    al,0xe0
  43fab0:	mov    ah,0x8a
  43fab2:	hlt    
  43fab3:	mov    eax,0x6b6142cf
  43fab8:	iret   
  43fab9:	push   ecx
  43faba:	cmovae ebp,DWORD PTR [ecx]
  43fabd:	nop
  43fabe:	inc    ebx
  43fabf:	into   
  43fac0:	adc    cl,BYTE PTR [esi]
  43fac2:	or     edx,edx
  43fac4:	(bad)  
  43fac5:	repnz add ebp,esi
  43fac8:	sbb    cl,BYTE PTR [ecx-0x19]
  43facb:	lahf   
  43facc:	leave  
  43facd:	stc    
  43face:	sbb    DWORD PTR [eax+0x7],esp
  43fad1:	jnp    0x43fb04
  43fad3:	cld    
  43fad4:	ficomp DWORD PTR [ebp-0xd]
  43fad7:	mov    ebp,0x1716ddef
  43fadc:	and    BYTE PTR [ecx],ah
  43fade:	mov    WORD PTR [esi-0x655d3045],?
  43fae4:	hlt    
  43fae5:	mov    dl,0xed
  43fae7:	sub    ch,bh
  43fae9:	out    dx,eax
  43faea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43faeb:	addr16 mov ah,0x6f
  43faee:	data16 sar dh,cl
  43faf1:	sbb    eax,0xc64444ed
  43faf6:	(bad)  
  43faf7:	rcr    BYTE PTR [edi],cl
  43faf9:	jge    0x43fb64
  43fafb:	jmp    0xc421:0xd020e287
  43fb02:	(bad)  [ebx]
  43fb04:	mov    ebx,0xd1d13b90
  43fb09:	mov    ?,ecx
  43fb0b:	mov    DWORD PTR [edx],edx
  43fb0d:	cmp    ebp,edi
  43fb0f:	mov    edx,0x9b202094
  43fb14:	ret    
  43fb15:	loopne 0x43fb59
  43fb17:	call   0x6256:0x3a3066d1
  43fb1e:	imul   ebp,esi,0x5f
  43fb21:	add    BYTE PTR [edi+0x68e8c609],dl
  43fb27:	jl     0x43fb13
  43fb29:	call   0x5afb:0x61e46cc4
  43fb30:	xlat   BYTE PTR ds:[ebx]
  43fb31:	arpl   WORD PTR [esp+edx*2-0x73],ax
  43fb35:	imul   esp,DWORD PTR [ebx],0xf3fed90b
  43fb3b:	add    al,0xe3
  43fb3d:	fucomi st,st(6)
  43fb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fb40:	aam    0x7
  43fb42:	or     BYTE PTR [ebp+0x23334c51],0x7e
  43fb49:	aas    
  43fb4a:	popf   
  43fb4b:	add    ch,BYTE PTR [eax-0x6d]
  43fb4e:	and    al,0xf3
  43fb50:	inc    eax
  43fb51:	and    eax,0x64f5d613
  43fb56:	mov    dl,0xd
  43fb58:	mov    cl,0x86
  43fb5a:	inc    esi
  43fb5b:	add    ebx,esp
  43fb5d:	or     ebx,DWORD PTR [eax-0x5459bc7f]
  43fb63:	nop
  43fb64:	(bad)  
  43fb65:	mov    ebx,0x4edd4751
  43fb6a:	stos   DWORD PTR es:[edi],eax
  43fb6b:	ds loop 0x43fb05
  43fb6e:	mov    ebp,fs
  43fb70:	mov    al,ds:0x99456a48
  43fb75:	push   ebx
  43fb76:	retf   
  43fb77:	popa   
  43fb78:	mov    edi,0xd1ac6d2f
  43fb7d:	mov    ebp,0xa7f0525e
  43fb82:	dec    esi
  43fb83:	aad    0xdb
  43fb85:	adc    eax,0x949023e
  43fb8a:	ss pusha 
  43fb8c:	pop    ds
  43fb8d:	and    eax,0x41bd3b53
  43fb92:	sub    BYTE PTR [ecx+0x66],0x84
  43fb96:	(bad)
  43fb99:	cmp    DWORD PTR [edx-0x4a],0xfffffff4
  43fb9d:	lock pushf 
  43fb9f:	(bad)  
  43fba0:	cli    
  43fba1:	mov    edi,DWORD PTR [ebx]
  43fba3:	xchg   ebp,eax
  43fba4:	call   0x7f43:0x9b02f3c0
  43fbab:	ret    
  43fbac:	cmp    edi,DWORD PTR [edx-0x27367890]
  43fbb2:	(bad)  
  43fbb3:	stos   BYTE PTR es:[edi],al
  43fbb4:	xchg   ebp,eax
  43fbb5:	xchg   ebp,eax
  43fbb6:	push   eax
  43fbb7:	adc    DWORD PTR [esp+edi*1],ebx
  43fbba:	ss inc ebx
  43fbbc:	stos   BYTE PTR es:[edi],al
  43fbbd:	or     ch,ah
  43fbbf:	retf   
  43fbc0:	fsubr  DWORD PTR [edx-0x6e]
  43fbc3:	dec    esp
  43fbc4:	mov    ebx,0xb4e2d78b
  43fbc9:	clc    
  43fbca:	shr    BYTE PTR [edi-0x1f65d72d],1
  43fbd0:	dec    ecx
  43fbd1:	retf   
  43fbd2:	in     al,0x1a
  43fbd4:	push   edi
  43fbd5:	cmp    BYTE PTR [ebx-0x3e34d87e],0x96
  43fbdc:	outs   dx,BYTE PTR ds:[esi]
  43fbdd:	nop
  43fbde:	mov    eax,0x84f7470d
  43fbe3:	lods   eax,DWORD PTR ds:[esi]
  43fbe4:	inc    ecx
  43fbe5:	int    0x16
  43fbe7:	jns    0x43fbe3
  43fbe9:	js     0x43fc09
  43fbeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fbec:	(bad)  
  43fbed:	fistp  WORD PTR [esp+esi*2+0x14fd1d7c]
  43fbf4:	push   ds
  43fbf5:	outs   dx,BYTE PTR ds:[esi]
  43fbf6:	lods   al,BYTE PTR ds:[esi]
  43fbf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fbf8:	mov    ebp,0x34614ba4
  43fbfd:	xchg   BYTE PTR [eax+0x76],ah
  43fc00:	in     al,0x89
  43fc02:	neg    ch
  43fc04:	repz jnp 0x43fc7b
  43fc07:	fstp   QWORD PTR [eax-0x50824fb2]
  43fc0d:	cdq    
  43fc0e:	adc    ebx,DWORD PTR [esi]
  43fc10:	mov    cl,0x25
  43fc12:	leave  
  43fc13:	jmp    0x43fbfb
  43fc15:	les    edx,FWORD PTR [eax-0x63]
  43fc18:	pop    edx
  43fc19:	cmp    DWORD PTR [edx+ebp*2+0x46],ecx
  43fc1d:	test   eax,0x2c235ebc
  43fc22:	lock and DWORD PTR [ebp+0x60],ecx
  43fc26:	cld    
  43fc27:	jp     0x43fc5b
  43fc29:	mov    ebx,0xbf162c46
  43fc2e:	cmc    
  43fc2f:	jecxz  0x43fc08
  43fc31:	sub    BYTE PTR [eax],bl
  43fc33:	pushf  
  43fc34:	add    esi,DWORD PTR [ebp+0x57384488]
  43fc3a:	retf   0xe4a5
  43fc3d:	fnstsw WORD PTR [eax]
  43fc3f:	cmp    edi,DWORD PTR [ecx-0x50]
  43fc42:	or     dl,BYTE PTR [edx+0x49956730]
  43fc48:	pop    edx
  43fc49:	in     eax,dx
  43fc4a:	cmp    ah,BYTE PTR [esi+0x577d1528]
  43fc50:	mov    ah,0x91
  43fc52:	dec    ebx
  43fc53:	pop    esp
  43fc54:	mov    bl,0xd2
  43fc56:	mov    DWORD PTR [ecx+0x2c73237f],0x5abdcbcb
  43fc60:	mov    edx,0x78901583
  43fc65:	es mov esi,0xfaf445f6
  43fc6b:	and    al,0x77
  43fc6d:	lahf   
  43fc6e:	add    esp,DWORD PTR [esi+0x41]
  43fc71:	xor    DWORD PTR [ebx+0x9],ecx
  43fc74:	outs   dx,BYTE PTR ds:[esi]
  43fc75:	mov    edx,0xca1f3cc8
  43fc7a:	retf   0xc25c
  43fc7d:	ins    BYTE PTR es:[edi],dx
  43fc7e:	xchg   esp,eax
  43fc7f:	push   ds
  43fc80:	lds    ebx,FWORD PTR [edx+0x26]
  43fc83:	pop    ds
  43fc84:	ret    0x660f
  43fc87:	push   0xffffffab
  43fc89:	adc    al,0xdf
  43fc8b:	xchg   esi,eax
  43fc8c:	jp     0x43fcd3
  43fc8e:	ins    DWORD PTR es:[edi],dx
  43fc8f:	data16 js 0x43fcdf
  43fc92:	jmp    0x12c36e41
  43fc97:	outs   dx,BYTE PTR ds:[esi]
  43fc98:	gs xchg edi,eax
  43fc9a:	xor    ch,cl
  43fc9c:	sti    
  43fc9d:	add    al,0x68
  43fc9f:	addr16 cli 
  43fca1:	xor    eax,0xad662203
  43fca6:	ds xchg esp,eax
  43fca8:	js     0x43fcc7
  43fcaa:	xor    al,0xff
  43fcac:	shl    BYTE PTR [edx],0x21
  43fcaf:	inc    ebx
  43fcb0:	retf   
  43fcb1:	aad    0x2
  43fcb3:	inc    ebx
  43fcb4:	adc    bh,BYTE PTR [edx+0x255e7a0d]
  43fcba:	popf   
  43fcbb:	paddq  mm3,QWORD PTR [edi-0x70]
  43fcbf:	retf   
  43fcc0:	inc    edi
  43fcc1:	and    DWORD PTR [edx+0x17],ecx
  43fcc4:	push   0x45da25fa
  43fcc9:	add    ebp,DWORD PTR [ecx+eax*4]
  43fccc:	jnp    0x43fcd4
  43fcce:	mov    esi,0x9341bfe5
  43fcd3:	mov    ebx,0xd55652b8
  43fcd8:	dec    ebx
  43fcd9:	mov    BYTE PTR [eax+0x51e06781],cl
  43fcdf:	out    dx,al
  43fce0:	push   ecx
  43fce1:	pushf  
  43fce2:	pop    esp
  43fce3:	int    0xad
  43fce5:	loope  0x43fd11
  43fce7:	repz mov ch,0xd1
  43fcea:	mov    ds:0xc9a4901a,eax
  43fcef:	mov    eax,DWORD PTR [esi+0x1def3c2a]
  43fcf5:	lahf   
  43fcf6:	ja     0x43fd19
  43fcf8:	shl    ch,1
  43fcfa:	stos   DWORD PTR es:[edi],eax
  43fcfb:	cld    
  43fcfc:	imul   BYTE PTR [ebx]
  43fcfe:	jne    0x43fc97
  43fd00:	sub    esi,edx
  43fd02:	fwait
  43fd03:	xor    eax,0xb2c4871e
  43fd08:	test   BYTE PTR [ebp+0x16],bl
  43fd0b:	push   esi
  43fd0c:	cmp    esp,DWORD PTR [ebp+0x40]
  43fd0f:	outs   dx,DWORD PTR ds:[esi]
  43fd10:	cmc    
  43fd11:	outs   dx,BYTE PTR ds:[esi]
  43fd12:	bound  ecx,QWORD PTR [eax-0x4a4903a9]
  43fd18:	jno    0x43fd59
  43fd1a:	aas    
  43fd1b:	jmp    0x43fd96
  43fd1d:	fwait
  43fd1e:	iret   
  43fd1f:	cmp    eax,0xc688ed4d
  43fd24:	or     eax,DWORD PTR [ecx-0x247f28e]
  43fd2a:	mov    BYTE PTR [esi+0x56c5e4bb],ch
  43fd30:	push   cs
  43fd31:	pop    ebp
  43fd32:	add    bh,BYTE PTR [ecx-0x37]
  43fd35:	fcmove st,st(7)
  43fd37:	push   ebp
  43fd38:	push   ss
  43fd39:	or     BYTE PTR [ebx+edi*2+0x25],dh
  43fd3d:	cmp    cl,BYTE PTR es:[edx]
  43fd40:	mov    bl,0xa4
  43fd42:	and    DWORD PTR [edx-0xc],edi
  43fd45:	sub    eax,0x80ea97ee
  43fd4a:	int3   
  43fd4b:	imul   esp,ebp,0xffffffc0
  43fd4e:	(bad)  
  43fd4f:	das    
  43fd50:	mov    eax,ds:0x85c2f562
  43fd55:	ins    DWORD PTR es:[edi],dx
  43fd56:	jne    0x43fd54
  43fd58:	mov    dl,0x55
  43fd5a:	sbb    BYTE PTR [ebx],dh
  43fd5c:	push   ebx
  43fd5d:	(bad)  
  43fd5e:	jmp    0xe0c423c6
  43fd63:	lahf   
  43fd64:	out    0x1f,eax
  43fd66:	ret    0x498f
  43fd69:	dec    ebp
  43fd6a:	cli    
  43fd6b:	int    0x48
  43fd6d:	loopne 0x43fdbc
  43fd6f:	cmp    eax,0xaac67914
  43fd74:	popf   
  43fd75:	fdiv   st,st(1)
  43fd77:	popa   
  43fd78:	xor    edi,DWORD PTR [edx]
  43fd7a:	sti    
  43fd7b:	mov    esp,0x9e60940e
  43fd80:	jmp    0x7924b2a6
  43fd85:	pop    edi
  43fd86:	lds    ebx,FWORD PTR [ebp-0x7bd3ea5c]
  43fd8c:	pusha  
  43fd8d:	lods   al,BYTE PTR ds:[esi]
  43fd8e:	xlat   BYTE PTR ds:[ebx]
  43fd8f:	mov    ds:0x46268387,al
  43fd94:	mov    BYTE PTR [ebx-0x7511a42f],cl
  43fd9a:	cmp    BYTE PTR [ebp-0x2],0x29
  43fd9e:	mov    ebx,0xbd7e8ef6
  43fda3:	push   0xb89bf38e
  43fda8:	adc    al,BYTE PTR [ebx]
  43fdaa:	and    al,cl
  43fdac:	cmp    eax,0x70e29b10
  43fdb1:	or     BYTE PTR [ecx-0x6e6d8a39],cl
  43fdb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fdb8:	pop    es
  43fdb9:	popa   
  43fdba:	ds js  0x43fe0e
  43fdbd:	out    0x98,eax
  43fdbf:	mov    al,0xa0
  43fdc1:	fidiv  WORD PTR [ecx+0x105d0944]
  43fdc7:	loope  0x43fd4e
  43fdc9:	jl     0x43fdd1
  43fdcb:	mov    ebp,DWORD PTR [edx]
  43fdcd:	mov    bh,0xc
  43fdcf:	xchg   esi,eax
  43fdd0:	or     cl,BYTE PTR [ecx+eax*4+0x43]
  43fdd4:	adc    BYTE PTR [eax-0x1e88a5c5],bl
  43fdda:	es out 0x87,al
  43fddd:	mov    esp,0xd9bd0077
  43fde2:	xor    ebx,0x69688d72
  43fde8:	int    0x42
  43fdea:	jbe    0x43fdb5
  43fdec:	push   ss
  43fded:	daa    
  43fdee:	outs   dx,DWORD PTR ds:[esi]
  43fdef:	xor    al,0x98
  43fdf1:	cld    
  43fdf2:	mov    esp,0x5124c04e
  43fdf7:	pop    ebx
  43fdf8:	mov    ds:0x159b7ba2,al
  43fdfd:	call   0x583919c4
  43fe02:	xor    al,0x80
  43fe04:	rep stos BYTE PTR es:[edi],al
  43fe06:	add    esi,DWORD PTR [esi-0x253e32f0]
  43fe0c:	rcl    BYTE PTR [ecx],cl
  43fe0e:	jns    0x43fda6
  43fe10:	and    al,0xed
  43fe12:	mov    DWORD PTR [esi+0x1620cda1],edi
  43fe18:	inc    eax
  43fe19:	clc    
  43fe1a:	sub    BYTE PTR [ecx-0x4a532eac],ah
  43fe20:	push   edi
  43fe21:	mov    ah,0xbb
  43fe23:	es xchg ebp,eax
  43fe25:	int3   
  43fe26:	sti    
  43fe27:	push   ebp
  43fe28:	dec    edx
  43fe29:	pop    ebx
  43fe2a:	pop    ds
  43fe2b:	div    esp
  43fe2d:	inc    ebx
  43fe2e:	cmp    ebx,ecx
  43fe30:	fiadd  WORD PTR [ecx]
  43fe32:	data16 ds inc di
  43fe36:	(bad)  
  43fe37:	leave  
  43fe38:	push   esp
  43fe39:	daa    
  43fe3a:	ret    
  43fe3b:	and    BYTE PTR [edi-0x67],0xd2
  43fe3f:	xchg   ebx,eax
  43fe40:	sbb    al,0xa1
  43fe42:	jns    0x43fe61
  43fe44:	cld    
  43fe45:	and    BYTE PTR [eax],bl
  43fe47:	sbb    eax,0x47ef00f2
  43fe4c:	and    edx,DWORD PTR [esi-0x2363ce45]
  43fe52:	addr16 repnz pop ebp
  43fe55:	outs   dx,BYTE PTR ds:[esi]
  43fe56:	pop    es
  43fe57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe58:	inc    esp
  43fe59:	mov    edx,0x4213fb8b
  43fe5e:	dec    eax
  43fe5f:	push   ds
  43fe60:	retf   0xa533
  43fe63:	mov    ecx,0x95ff2e7d
  43fe68:	scas   al,BYTE PTR es:[edi]
  43fe69:	and    esi,DWORD PTR [ebx]
  43fe6b:	cmp    bh,BYTE PTR [edi]
  43fe6d:	fs (bad) 
  43fe6f:	pshufw mm3,QWORD PTR [esi+ebp*4+0x4635187c],0xcd
  43fe78:	xchg   edi,eax
  43fe79:	and    eax,0x3d541485
  43fe7e:	or     BYTE PTR [edx+0x60],0x15
  43fe82:	inc    ecx
  43fe83:	es dec edx
  43fe85:	js     0x43ff03
  43fe87:	or     al,BYTE PTR [bp+si+0x66]
  43fe8b:	push   0x4a5ff412
  43fe90:	out    0xb7,al
  43fe92:	dec    BYTE PTR [eax]
  43fe94:	leave  
  43fe95:	dec    esp
  43fe96:	push   es
  43fe97:	xchg   esi,eax
  43fe98:	popf   
  43fe99:	pop    ds
  43fe9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fe9b:	jnp    0x43fe53
  43fe9d:	(bad)
  43fea0:	inc    esi
  43fea1:	mov    edi,0xec44b78f
  43fea6:	mov    bh,BYTE PTR [edx+0x5b]
  43fea9:	sar    cl,1
  43feab:	jae    0x43fe9d
  43fead:	dec    esi
  43feae:	clc    
  43feaf:	lods   al,BYTE PTR ds:[esi]
  43feb0:	mov    ?,WORD PTR [esi-0x76e4a21]
  43feb6:	mov    edx,0x197d3e14
  43febb:	xor    al,0x31
  43febd:	fimul  DWORD PTR [ecx]
  43febf:	sub    eax,0x4c469768
  43fec4:	(bad)  
  43fec7:	sub    eax,0xcb2badf4
  43fecc:	push   0xffffff8a
  43fece:	cld    
  43fecf:	outs   dx,BYTE PTR ds:[esi]
  43fed0:	mov    ah,dh
  43fed2:	(bad)  
  43fed3:	retf   0xbe89
  43fed6:	cmp    ah,dh
  43fed8:	mov    ?,WORD PTR [edx-0x6f970825]
  43fede:	mov    bl,0x7c
  43fee0:	leave  
  43fee1:	fisubr WORD PTR [ebx]
  43fee3:	sbb    DWORD PTR [edi+0x7bf9eb35],0x51
  43feea:	sbb    bh,bh
  43feec:	mov    WORD PTR [ebx+0x54],ss
  43feef:	out    0x8c,eax
  43fef1:	mov    edi,esi
  43fef3:	retf   0x1552
  43fef6:	sbb    DWORD PTR [esi+0x6e],0x4101267b
  43fefd:	or     DWORD PTR [edx-0x1da15b3b],ebx
  43ff03:	or     DWORD PTR [eax],ebp
  43ff05:	and    DWORD PTR [edx-0xa],0x40
  43ff09:	and    bl,bh
  43ff0b:	(bad)  
  43ff0d:	jp     0x43fed5
  43ff0f:	mov    edx,0x76577209
  43ff14:	or     al,BYTE PTR [ebp+esi*4-0x69]
  43ff18:	je     0x43ff65
  43ff1a:	pop    es
  43ff1b:	std    
  43ff1c:	inc    esi
  43ff1d:	(bad)  
  43ff1e:	xchg   edx,eax
  43ff1f:	sub    BYTE PTR [ecx-0x141ffd74],0xcb
  43ff26:	mov    ds:0xce3c1423,al
  43ff2b:	icebp  
  43ff2c:	jecxz  0x43feb0
  43ff2e:	mov    edx,0xf7130678
  43ff33:	call   0x5687:0x19df7d65
  43ff3a:	pop    ecx
  43ff3b:	int3   
  43ff3c:	daa    
  43ff3d:	xor    DWORD PTR [ecx-0x54],edx
  43ff40:	push   0xec54dd71
  43ff45:	or     dl,BYTE PTR [esi-0x32]
  43ff48:	imul   edx,DWORD PTR [eax-0x26],0xffffff89
  43ff4c:	and    BYTE PTR [ecx],dl
  43ff4e:	xor    al,0xb0
  43ff50:	in     eax,dx
  43ff51:	jp     0x43ff09
  43ff53:	iret   
  43ff54:	(bad)  
  43ff55:	xor    bl,BYTE PTR [ecx]
  43ff57:	push   esp
  43ff58:	repnz icebp 
  43ff5a:	jnp    0x43ff1f
  43ff5c:	push   esi
  43ff5d:	xchg   edx,eax
  43ff5e:	xchg   esp,eax
  43ff5f:	das    
  43ff60:	mov    dh,0xbe
  43ff62:	jge    0x43fee4
  43ff64:	mov    dl,dh
  43ff66:	fistp  QWORD PTR [edi+0x37eb786]
  43ff6c:	js     0x43ff43
  43ff6e:	cdq    
  43ff6f:	cmp    DWORD PTR [ecx-0x1196de6a],ebp
  43ff75:	gs inc eax
  43ff77:	jmp    DWORD PTR [eax]
  43ff79:	pop    es
  43ff7a:	retf   0xca56
  43ff7d:	and    DWORD PTR [edx+0x53],ebx
  43ff80:	jnp    0x43ff0c
  43ff82:	data16 xor BYTE PTR [edx],ah
  43ff85:	mov    ebp,0x1ead7c80
  43ff8a:	ds pop ecx
  43ff8c:	or     BYTE PTR [edx],ah
  43ff8e:	nop
  43ff8f:	mov    bl,0x19
  43ff91:	push   ss
  43ff92:	mov    ss:0xe1b4e022,al
  43ff98:	push   es
  43ff99:	push   esi
  43ff9a:	mov    dl,0x90
  43ff9c:	jge    0x43ff6e
  43ff9e:	xchg   edi,eax
  43ff9f:	inc    esi
  43ffa0:	or     cl,ch
  43ffa2:	aam    0x25
  43ffa4:	xchg   ecx,eax
  43ffa5:	or     ecx,edx
  43ffa7:	push   ds
  43ffa8:	test   BYTE PTR [eax+0x335126b],ah
  43ffae:	out    0x52,eax
  43ffb0:	fmul   QWORD PTR [ebp+ebx*2-0x58]
  43ffb4:	out    dx,eax
  43ffb5:	fisub  WORD PTR [esi-0x2e]
  43ffb8:	aam    0x28
  43ffba:	cli    
  43ffbb:	loopne 0x44003a
  43ffbd:	jno    0x43ffae
  43ffbf:	mov    fs,WORD PTR [ebx+0x251fda25]
  43ffc5:	daa    
  43ffc6:	das    
  43ffc7:	mov    ?,WORD PTR [edi-0x74ec466f]
  43ffcd:	cmp    ebx,esi
  43ffcf:	mov    al,0x66
  43ffd1:	sti    
  43ffd2:	add    eax,0x39c6f341
  43ffd7:	int    0xea
  43ffd9:	cmp    eax,0xf13f98f
  43ffde:	mov    ch,BYTE PTR [edi+0x7e158439]
  43ffe4:	mov    esp,0x6f3e3fe
  43ffe9:	and    BYTE PTR [edi-0x78],ch
  43ffec:	jno    0x440041
  43ffee:	rol    BYTE PTR [edi+esi*2],cl
  43fff1:	jecxz  0x440016
  43fff3:	adc    eax,0xe8a4eebc
  43fff8:	test   al,0xb7
  43fffa:	mov    BYTE PTR [ebx-0x22],cl
  43fffd:	call   0xc73b:0x2d49ebca
  440004:	retf   
  440005:	cmc    
  440006:	inc    ecx
  440007:	outs   dx,DWORD PTR ds:[esi]
  440008:	stc    
  440009:	jp     0x440031
  44000b:	ds into 
  44000d:	jle    0x440048
  44000f:	mov    DWORD PTR [bp+si-0x3ac],0x289bd3dc
  440018:	sub    ebp,eax
  44001a:	stos   DWORD PTR es:[edi],eax
  44001b:	mov    esi,0x43ba0531
  440020:	mov    ds:0x318469fd,eax
  440025:	dec    esp
  440026:	cmp    ecx,edi
  440028:	pop    ss
  440029:	mov    es,WORD PTR [esi+0x43bb1186]
  44002f:	adc    BYTE PTR [ebp+0x48],cl
  440032:	lea    edx,[ecx+0x3824ec5b]
  440038:	fs aas 
  44003a:	mov    ch,0xf5
  44003c:	jne    0x440022
  44003e:	aad    0xa8
  440040:	lds    edx,FWORD PTR [ebp+0x6b]
  440043:	jmp    FWORD PTR [esi+0xd]
  440046:	sbb    DWORD PTR [bp+di+0x9],esi
  44004a:	sbb    BYTE PTR [esi],0xff
  44004d:	cdq    
  44004e:	push   cs
  44004f:	add    BYTE PTR [ebx],al
  440051:	out    0x2,eax
  440053:	test   al,0xab
  440055:	push   esp
  440056:	sub    edx,DWORD PTR [esp+ebp*2+0x1]
  44005a:	rcr    BYTE PTR [edi],0xc4
  44005d:	lods   eax,DWORD PTR ds:[esi]
  44005e:	out    0xb3,eax
  440060:	data16 jne 0x440053
  440063:	sti    
  440064:	js     0x440017
  440066:	dec    ebx
  440067:	push   DWORD PTR [edx+0x27]
  44006a:	or     DWORD PTR [ecx],edx
  44006c:	aas    
  44006d:	or     edx,DWORD PTR [ecx-0xb]
  440070:	dec    edi
  440071:	sbb    DWORD PTR ss:[edx],edx
  440074:	inc    ebp
  440075:	jmp    0x44006a
  440077:	pop    eax
  440078:	outs   dx,BYTE PTR ds:[esi]
  440079:	add    DWORD PTR [ecx-0x19],0x2fcc30d0
  440080:	jge    0x44006e
  440082:	cmc    
  440083:	pop    ecx
  440084:	imul   esp,DWORD PTR [ebp-0x63],0x68e6b996
  44008b:	aaa    
  44008c:	pop    ebp
  44008d:	sub    ebx,edi
  44008f:	jno    0x4400b0
  440091:	loop   0x440079
  440093:	or     al,0x44
  440095:	dec    edi
  440096:	pop    edx
  440097:	mov    ecx,0x99aee974
  44009c:	add    al,0x1b
  44009e:	popa   
  44009f:	retf   0xa8c0
  4400a2:	sti    
  4400a3:	and    esp,0xffffffef
  4400a6:	pop    ebp
  4400a7:	aaa    
  4400a8:	jmp    0x47ed29d8
  4400ad:	jmp    0x7cbe:0xb173963e
  4400b4:	ret    
  4400b5:	push   edx
  4400b6:	adc    dl,BYTE PTR [edx+0x7b47c325]
  4400bc:	xor    dh,BYTE PTR [eax-0x48395e01]
  4400c2:	test   al,0x9e
  4400c4:	adc    al,0x97
  4400c6:	add    ch,BYTE PTR [edx+esi*4+0xa]
  4400ca:	test   DWORD PTR [edi+0x67],ebx
  4400cd:	lods   al,BYTE PTR ds:[esi]
  4400ce:	dec    edi
  4400cf:	call   0x23176bb4
  4400d4:	xchg   ebx,eax
  4400d5:	iret   
  4400d6:	xchg   ecx,eax
  4400d7:	push   ecx
  4400d8:	mov    edx,0x3017ade4
  4400dd:	mov    ss,edx
  4400df:	inc    edi
  4400e0:	push   ebx
  4400e1:	push   ebx
  4400e2:	mov    ds:0xf3e87d09,eax
  4400e7:	and    al,0xa9
  4400e9:	cmp    ecx,esp
  4400eb:	jne    0x4400c7
  4400ed:	daa    
  4400ee:	add    al,0x70
  4400f0:	pop    ebx
  4400f1:	cdq    
  4400f2:	pop    edi
  4400f3:	cmp    ecx,edx
  4400f5:	jecxz  0x4400bd
  4400f7:	sbb    al,0xd6
  4400f9:	aam    0x74
  4400fb:	das    
  4400fc:	mov    eax,ds:0xa094732a
  440101:	lahf   
  440102:	sub    dh,bh
  440104:	imul   ebx,DWORD PTR [edi+0x5d20166c],0x11162e4a
  44010e:	mov    ebp,0x3bc6ef5b
  440113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440114:	or     al,0x36
  440116:	xor    DWORD PTR [ebx+0x2d4c05b5],esp
  44011c:	cmp    ch,BYTE PTR [eax-0x34]
  44011f:	repz xor al,0x65
  440122:	es pop ecx
  440124:	adc    al,0x7
  440126:	jg     0x4400e4
  440128:	cmc    
  440129:	mov    ebp,0x213e99bb
  44012e:	fbstp  TBYTE PTR [esi-0x42]
  440131:	push   esp
  440132:	cmp    BYTE PTR [eax],bh
  440134:	mov    dh,0xa5
  440136:	(bad)
  44013b:	out    dx,eax
  44013c:	(bad)  
  44013d:	fidiv  WORD PTR [eax+0x29]
  440140:	dec    edx
  440141:	bound  edi,QWORD PTR [ecx+0x47fc9565]
  440147:	dec    esp
  440148:	mov    esp,0x8ba7e5ad
  44014d:	sahf   
  44014e:	xchg   ebp,eax
  44014f:	xor    DWORD PTR [ebp-0x2a],eax
  440152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440153:	mov    dl,0x64
  440155:	and    al,0x7e
  440157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440158:	ret    
  440159:	(bad)  [ecx+0x46]
  44015c:	repz xchg ebx,eax
  44015e:	call   0x7736cab2
  440163:	push   ebx
  440164:	mov    ch,0x2
  440166:	sub    al,BYTE PTR cs:[ebx]
  440169:	xchg   edx,eax
  44016a:	xor    eax,0xe51b7fb
  44016f:	push   ebx
  440170:	or     ch,BYTE PTR [edx]
  440172:	adc    DWORD PTR [eax],edx
  440174:	add    al,0x55
  440176:	push   edx
  440177:	das    
  440178:	jecxz  0x4401b0
  44017a:	mov    ebx,0xe68d1a14
  44017f:	or     dh,BYTE PTR [eax-0x4e]
  440182:	aaa    
  440183:	adc    al,0xc8
  440185:	aam    0x9
  440187:	hlt    
  440188:	cmp    BYTE PTR [edx],ch
  44018a:	cmp    al,0x8a
  44018c:	es push ecx
  44018e:	repz std 
  440190:	jbe    0x4401ff
  440192:	xor    eax,0xc1ff110a
  440197:	xor    eax,edi
  440199:	xchg   esp,eax
  44019a:	ss aad 0x7b
  44019d:	push   edi
  44019e:	arpl   sp,bx
  4401a0:	push   cs
  4401a1:	ret    
  4401a2:	jle    0x4401b9
  4401a4:	fwait
  4401a5:	repnz pop es
  4401a7:	adc    al,0xf2
  4401a9:	adc    dh,BYTE PTR [esi-0x62]
  4401ac:	adc    eax,0x5a33cbc8
  4401b1:	daa    
  4401b2:	cs push ss
  4401b4:	arpl   WORD PTR [ecx-0x2c4b5804],bp
  4401ba:	data16 (bad) 
  4401bc:	out    dx,al
  4401bd:	xchg   edi,eax
  4401be:	xor    DWORD PTR [edx+0x6e],eax
  4401c1:	outs   dx,DWORD PTR ds:[esi]
  4401c2:	jp     0x440196
  4401c4:	xor    al,0x31
  4401c6:	mov    cl,0xae
  4401c8:	(bad)  [edx]
  4401ca:	sub    esi,ecx
  4401cc:	mov    al,0xcb
  4401ce:	mov    ecx,0xe64343dd
  4401d3:	jge    0x44023e
  4401d5:	push   edi
  4401d6:	inc    esp
  4401d7:	push   ss
  4401d8:	data16 (bad) 
  4401da:	scas   eax,DWORD PTR es:[edi]
  4401db:	jle    0x4401c3
  4401dd:	xchg   ecx,eax
  4401de:	gs (bad) 
  4401e0:	pop    ds
  4401e1:	dec    eax
  4401e2:	ret    
  4401e3:	loope  0x44022a
  4401e5:	into   
  4401e6:	adc    DWORD PTR [eax+edx*1+0x2b],ebp
  4401ea:	repnz jecxz 0x4401b9
  4401ed:	jmp    FWORD PTR [ecx-0x77e0f866]
  4401f3:	bound  edx,QWORD PTR [eax-0x7a]
  4401f6:	in     al,dx
  4401f7:	cmc    
  4401f8:	dec    esi
  4401f9:	ror    BYTE PTR ds:0x822bfd2c,cl
  4401ff:	cld    
  440200:	retf   0x1d30
  440203:	fld    TBYTE PTR [ebp+0x34]
  440206:	ret    
  440207:	jns    0x4401fc
  440209:	xor    DWORD PTR [esi+0x446aec2b],edx
  44020f:	cs adc edi,ebp
  440212:	push   ebp
  440213:	and    eax,0x20881d29
  440218:	icebp  
  440219:	je     0x440257
  44021b:	imul   ebx,edi,0x90018698
  440221:	hlt    
  440222:	clc    
  440223:	inc    esp
  440224:	inc    ebp
  440225:	fidivr WORD PTR [ecx+eax*4]
  440228:	loope  0x440230
  44022a:	call   0x541cff1a
  44022f:	mov    bl,dl
  440231:	mov    edi,ecx
  440233:	into   
  440234:	sbb    esp,esp
  440236:	imul   ecx,edi,0xdec64999
  44023c:	retf   0x7287
  44023f:	xchg   cl,al
  440241:	bound  ebx,QWORD PTR [edi+ebp*2+0x67]
  440245:	int    0x8b
  440247:	push   es
  440248:	push   edi
  440249:	das    
  44024a:	lods   al,BYTE PTR ds:[esi]
  44024b:	or     ch,BYTE PTR [esi+0x511ae98f]
  440251:	mov    ah,0xcf
  440253:	adc    ebx,DWORD PTR [edx+0x70]
  440256:	sahf   
  440257:	out    0x78,eax
  440259:	push   0xffffffa9
  44025b:	mov    eax,DWORD PTR [eax+esi*4-0x2]
  44025f:	jmp    0x44023a
  440261:	add    ebx,DWORD PTR [esi-0x3bc5621d]
  440267:	lods   al,BYTE PTR ds:[esi]
  440268:	adc    eax,0x5f1fbb31
  44026d:	jge    0x4402b1
  44026f:	or     eax,DWORD PTR [ecx-0x66]
  440272:	popa   
  440273:	cli    
  440274:	test   BYTE PTR [edx-0x20],0xca
  440278:	cmc    
  440279:	repz jmp 0x6635b87e
  44027f:	imul   eax,DWORD PTR [eax],0x29
  440282:	mov    ebx,0xe03389ed
  440287:	cmc    
  440288:	ins    BYTE PTR es:[edi],dx
  440289:	sti    
  44028a:	fld    QWORD PTR [ecx+0x0]
  44028d:	add    al,0xb9
  44028f:	pushf  
  440290:	jmp    DWORD PTR [edx+eiz*2-0x2c]
  440294:	sbb    eax,0xf1efb322
  440299:	shl    DWORD PTR [edx-0x11],1
  44029c:	xchg   BYTE PTR [ebp-0x571629c3],dh
  4402a2:	sub    al,0x5f
  4402a4:	mov    dl,0xdc
  4402a6:	pop    ebx
  4402a7:	mov    al,ds:0xc7f92a38
  4402ac:	push   esi
  4402ad:	inc    ebx
  4402ae:	or     BYTE PTR [ebx-0x153ce10c],0x15
  4402b5:	jp     0x4402b6
  4402b7:	sub    DWORD PTR [edi-0x2c0686f8],0xd43805cf
  4402c1:	(bad)  
  4402c2:	mov    fs,WORD PTR [edx-0x37001cbb]
  4402c8:	mov    bl,0x8c
  4402ca:	arpl   WORD PTR [edi-0x6a],ax
  4402cd:	mov    ds,WORD PTR [edi+0x5b]
  4402d0:	lahf   
  4402d1:	mov    esi,0xbd892a27
  4402d6:	cmp    dh,BYTE PTR [ebx]
  4402d8:	or     bh,dh
  4402da:	mov    al,ds:0xf0075693
  4402df:	arpl   WORD PTR [ecx+0x72],di
  4402e2:	xchg   esi,eax
  4402e3:	loopne 0x440273
  4402e5:	xor    esi,edi
  4402e7:	sbb    edx,esp
  4402e9:	ror    BYTE PTR [edi+0x3f],0x34
  4402ed:	dec    ebx
  4402ee:	mov    al,ds:0xf8ab8d7d
  4402f3:	sub    al,ch
  4402f5:	loop   0x44036e
  4402f7:	jge    0x44035f
  4402f9:	ss popa 
  4402fb:	cmc    
  4402fc:	inc    ch
  4402fe:	xchg   esp,eax
  4402ff:	sbb    eax,0x32900cb8
  440304:	jnp    0x44029f
  440306:	jns    0x440296
  440308:	aas    
  440309:	(bad)  
  44030a:	leave  
  44030b:	sbb    dh,BYTE PTR [edi]
  44030d:	dec    edi
  44030e:	push   eax
  44030f:	mov    esi,esi
  440311:	inc    eax
  440312:	cli    
  440313:	adc    eax,0xfbed3a0
  440318:	sub    dh,BYTE PTR [edi-0x3e]
  44031b:	add    dh,bh
  44031d:	and    al,0x4d
  44031f:	mov    ah,BYTE PTR [edx+edx*1]
  440322:	sti    
  440323:	test   al,0x7a
  440325:	xchg   edx,eax
  440326:	loop   0x440320
  440328:	jno    0x440382
  44032a:	gs adc eax,0xf2481e06
  440330:	fsincos 
  440332:	pop    esi
  440333:	jmp    0x600a:0xc88845c8
  44033a:	sub    DWORD PTR [eax+0x44a3063c],edx
  440340:	push   ebp
  440341:	sbb    DWORD PTR [eax+0x1b],ebx
  440344:	fwait
  440345:	in     eax,dx
  440346:	jp     0x4403b4
  440348:	sub    esp,ebx
  44034a:	pop    ebp
  44034b:	sub    al,0xf
  44034d:	pop    edi
  44034e:	in     eax,0xb2
  440350:	sbb    edi,DWORD PTR [ebx-0x6]
  440353:	or     al,0x59
  440355:	pop    edi
  440356:	mov    cl,0x37
  440358:	inc    ecx
  440359:	sbb    BYTE PTR [ebp-0x59db4ccc],ch
  44035f:	push   ds
  440360:	jg     0x440391
  440362:	sbb    eax,0x7bfdeacf
  440367:	add    DWORD PTR [ebx+esi*2-0x77e7500],edx
  44036e:	out    dx,eax
  44036f:	cmp    al,0x2b
  440371:	dec    edx
  440372:	cmp    bl,BYTE PTR [ecx-0x3c]
  440375:	mov    es,esi
  440377:	pop    esp
  440378:	dec    edi
  440379:	lods   al,BYTE PTR ds:[esi]
  44037a:	jo     0x4403eb
  44037c:	shl    DWORD PTR [esi+0x55],0x33
  440380:	call   0xef51:0x54cc360c
  440387:	mov    ds:0xb0f69723,eax
  44038c:	xchg   ecx,eax
  44038d:	dec    ebp
  44038e:	pop    edx
  44038f:	and    BYTE PTR [ecx+0x4d],bh
  440392:	or     eax,0xa75b46c0
  440397:	xchg   esi,eax
  440398:	jle    0x440346
  44039a:	add    dl,BYTE PTR [esp+edx*2+0x7764e8ea]
  4403a1:	mov    bh,0xd8
  4403a3:	es push ebx
  4403a5:	dec    edi
  4403a6:	loop   0x4403cf
  4403a8:	loop   0x440340
  4403aa:	das    
  4403ab:	test   eax,0x12a06af3
  4403b0:	aaa    
  4403b1:	gs xor eax,0xe15cd57d
  4403b7:	push   edi
  4403b8:	and    eax,0x82601772
  4403bd:	mov    dh,0xc7
  4403bf:	loop   0x44041a
  4403c1:	outs   dx,BYTE PTR ds:[esi]
  4403c2:	xchg   esp,eax
  4403c3:	pop    es
  4403c4:	out    dx,eax
  4403c5:	xor    edx,DWORD PTR [ecx+0x79]
  4403c8:	les    edx,FWORD PTR [ecx-0x7f8e3e79]
  4403ce:	dec    ecx
  4403cf:	lods   eax,DWORD PTR ds:[esi]
  4403d0:	cmp    al,0xb2
  4403d2:	lahf   
  4403d3:	and    eax,0x4e766a33
  4403d8:	inc    esi
  4403d9:	and    BYTE PTR [edi+0x14],dh
  4403dc:	push   edx
  4403dd:	mov    ?,WORD PTR [edi-0x2257d0a]
  4403e3:	fld    QWORD PTR [edx-0x15948fd4]
  4403e9:	cmp    ah,BYTE PTR [edx-0x55f7c309]
  4403ef:	lods   eax,DWORD PTR ds:[esi]
  4403f0:	loope  0x4403d8
  4403f2:	mov    bh,0xbe
  4403f4:	inc    edi
  4403f5:	push   edi
  4403f6:	leave  
  4403f7:	xor    ch,BYTE PTR [edi]
  4403f9:	addr16 call 0x574e6d2a
  4403ff:	pushf  
  440400:	inc    esp
  440401:	mov    cl,0xe4
  440403:	fisub  DWORD PTR [edi]
  440405:	xor    BYTE PTR [esi+esi*4+0x4024b52f],0xff
  44040d:	jge    0x440448
  44040f:	or     ecx,edi
  440411:	mov    al,ds:0xcc898373
  440416:	and    ecx,0x63
  440419:	inc    ebx
  44041a:	mov    ds:0xaa031a84,al
  44041f:	dec    edx
  440420:	outs   dx,DWORD PTR ds:[esi]
  440421:	retf   
  440422:	in     al,0x3c
  440424:	adc    eax,0x25670df5
  440429:	pop    ebx
  44042a:	jg     0x8ff361a5
  440430:	xchg   esp,eax
  440431:	or     DWORD PTR [edi],edx
  440433:	jns    0x44048a
  440435:	mov    es,WORD PTR [esi+eax*4-0x8918066]
  44043c:	mov    ch,0x15
  44043e:	aas    
  44043f:	push   es
  440440:	in     al,dx
  440441:	jecxz  0x4403f0
  440443:	imul   edx,ebp,0x23
  440446:	js     0x44043d
  440448:	jmp    0x4403e3
  44044a:	popf   
  44044b:	bnd jp 0x440445
  44044e:	shl    cl,1
  440450:	push   cs
  440451:	arpl   di,di
  440453:	imul   edi,DWORD PTR [ecx-0x2d],0x6b6f4839
  44045a:	stos   DWORD PTR es:[edi],eax
  44045b:	ins    DWORD PTR es:[edi],dx
  44045c:	aaa    
  44045d:	stos   BYTE PTR es:[edi],al
  44045e:	or     ah,ah
  440460:	mov    ah,bl
  440462:	mov    edi,0xf05b4b5b
  440467:	push   eax
  440468:	test   esi,0x4260eadd
  44046e:	outs   dx,DWORD PTR ds:[esi]
  44046f:	std    
  440470:	mov    bh,0xe
  440472:	jmp    0x85a96e54
  440477:	pop    esp
  440478:	imul   ebp,edi,0xe0312e5d
  44047e:	push   ss
  44047f:	mov    al,ds:0xa63bb75b
  440484:	pop    ebp
  440485:	sbb    BYTE PTR [edi+0x26c9bd54],0x86
  44048c:	nop
  44048d:	fidivr WORD PTR [edx+0x46a3d8ff]
  440493:	xor    eax,0x909b7e53
  440498:	xchg   edx,eax
  440499:	mov    edx,0x28fa4ce6
  44049e:	jne    0x4404eb
  4404a0:	cmp    BYTE PTR [ebx-0x60],0xc3
  4404a4:	popf   
  4404a5:	mov    ebx,0x64b09427
  4404aa:	mov    dl,0x7a
  4404ac:	nop
  4404ad:	or     eax,0x5d122720
  4404b2:	jo     0x440528
  4404b4:	sbb    ch,0xab
  4404b7:	adc    bl,BYTE PTR [ecx-0x15]
  4404ba:	pop    es
  4404bb:	call   0xf3bf:0x793d47b3
  4404c2:	popf   
  4404c3:	call   0x53f6:0xf651c4a5
  4404ca:	sbb    eax,0xce7be691
  4404cf:	pop    edx
  4404d0:	pop    ss
  4404d1:	scas   eax,DWORD PTR es:[edi]
  4404d2:	lea    ebx,[ebx+0x15]
  4404d5:	daa    
  4404d6:	add    al,BYTE PTR [ecx-0x7e0b7e4d]
  4404dc:	mov    ecx,0x786e750c
  4404e1:	cmp    al,0x2
  4404e3:	inc    edi
  4404e4:	adc    edi,esi
  4404e6:	mov    al,ds:0x676d14c2
  4404eb:	mov    bh,BYTE PTR [ecx-0x75]
  4404ee:	aam    0x4b
  4404f0:	lods   eax,DWORD PTR ds:[esi]
  4404f1:	adc    dl,BYTE PTR [ecx+0x1b]
  4404f4:	mov    ah,0xa7
  4404f6:	push   edx
  4404f7:	xchg   DWORD PTR [ebx-0x7840e6d8],eax
  4404fd:	sbb    eax,0x151e6aba
  440502:	push   cs
  440503:	sub    al,0xbb
  440505:	pushf  
  440506:	pop    ds
  440507:	lods   eax,DWORD PTR ds:[esi]
  440508:	sbb    BYTE PTR [edi],dl
  44050a:	xchg   ebp,eax
  44050b:	daa    
  44050c:	into   
  44050d:	call   DWORD PTR [ebx-0x38]
  440510:	add    BYTE PTR [eax],ch
  440512:	or     eax,0x6342863a
  440517:	in     al,dx
  440518:	fistp  QWORD PTR [ebp+0x25]
  44051b:	pushf  
  44051c:	jae    0x44052c
  44051e:	setns  BYTE PTR [ebx-0x1aa3fe54]
  440525:	or     al,0xa0
  440527:	jge    0x4404e1
  440529:	aam    0x1b
  44052b:	call   0xbecec418
  440530:	xchg   esp,eax
  440531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440532:	ret    
  440533:	cwde   
  440534:	stos   DWORD PTR es:[edi],eax
  440535:	iret   
  440536:	(bad)  
  440537:	pop    edi
  440538:	xchg   edi,eax
  440539:	ja     0x44052a
  44053b:	imul   eax,DWORD PTR ds:0x75dcb4bc,0x5923fa77
  440545:	dec    esp
  440546:	stos   DWORD PTR es:[edi],eax
  440547:	ret    
  440548:	pop    ds
  440549:	xchg   edx,eax
  44054a:	clc    
  44054b:	aam    0xb8
  44054d:	jecxz  0x4405c3
  44054f:	mov    ?,WORD PTR [ebx+0x7f]
  440552:	stc    
  440553:	inc    edx
  440554:	xchg   BYTE PTR [esi-0x43c0afbc],al
  44055a:	xchg   edx,eax
  44055b:	call   0x231c61c8
  440560:	popa   
  440561:	xchg   ebx,eax
  440562:	es xchg ecx,eax
  440564:	cs inc edx
  440566:	pop    es
  440567:	scas   al,BYTE PTR es:[edi]
  440568:	lock neg BYTE PTR [esi]
  44056b:	int    0xa
  44056d:	std    
  44056e:	dec    esi
  44056f:	das    
  440570:	push   esi
  440571:	jae    0x4405e6
  440573:	mov    ecx,0xb0092c6f
  440578:	jbe    0x440559
  44057a:	jb     0x4405af
  44057c:	add    cl,BYTE PTR [ebx]
  44057e:	lahf   
  44057f:	out    0x52,eax
  440581:	test   eax,0x36db0585
  440586:	outs   dx,DWORD PTR ds:[esi]
  440587:	ins    BYTE PTR es:[edi],dx
  440588:	push   ds
  440589:	scas   al,BYTE PTR es:[edi]
  44058a:	(bad)  
  44058b:	xor    eax,eax
  44058d:	and    DWORD PTR [edx-0x5b7adc9],ecx
  440593:	int    0x54
  440595:	mov    ebp,0xad769a3a
  44059a:	sub    BYTE PTR [ebp+0x1a6c2fc9],ah
  4405a0:	scas   al,BYTE PTR es:[edi]
  4405a1:	sbb    ch,ah
  4405a3:	jne    0x440562
  4405a5:	mov    ebx,0x8e870bbd
  4405aa:	enter  0xed3d,0x75
  4405ae:	jbe    0x4405e9
  4405b0:	aad    0xb6
  4405b2:	cmp    al,0xca
  4405b4:	jbe    0x440627
  4405b6:	jbe    0x440555
  4405b8:	gs stos BYTE PTR es:[edi],al
  4405ba:	fwait
  4405bb:	or     BYTE PTR [eax+0x4a],bl
  4405be:	test   al,0x7e
  4405c0:	sub    BYTE PTR [ecx],al
  4405c2:	adc    BYTE PTR [edi-0x7],dl
  4405c5:	jbe    0x440582
  4405c7:	push   ebp
  4405c8:	pop    esi
  4405c9:	fdivr  st(3),st
  4405cb:	icebp  
  4405cc:	jmp    0xdd5d:0x394285e3
  4405d3:	dec    ebp
  4405d4:	sub    DWORD PTR [ebx],ecx
  4405d6:	pop    eax
  4405d7:	pop    ebp
  4405d8:	js     0x440571
  4405da:	lods   eax,DWORD PTR ds:[esi]
  4405db:	mov    ss,ebx
  4405dd:	mov    ebx,0x6c8f8993
  4405e2:	cwde   
  4405e3:	ficomp DWORD PTR [eax]
  4405e5:	mov    WORD PTR [ebx+ebp*2-0x2d],cs
  4405e9:	pusha  
  4405ea:	or     al,al
  4405ec:	retf   
  4405ed:	pop    esi
  4405ee:	xchg   ecx,eax
  4405ef:	cs call 0xee78e8e6
  4405f5:	adc    BYTE PTR gs:[ebp-0x2b],ah
  4405f9:	mov    ecx,0xb966e74e
  4405fe:	adc    cl,bh
  440600:	xchg   BYTE PTR [ecx+0xf],dh
  440603:	in     eax,dx
  440604:	dec    edi
  440605:	imul   esi,DWORD PTR [ebp-0x18029e63],0x14
  44060c:	push   ecx
  44060d:	lds    ecx,FWORD PTR [eax]
  44060f:	and    eax,0x9a544db2
  440614:	sbb    DWORD PTR [esi],ecx
  440616:	add    ah,BYTE PTR [edi-0x4699b95b]
  44061c:	lahf   
  44061d:	scas   eax,DWORD PTR es:[edi]
  44061e:	leave  
  44061f:	fist   WORD PTR [edi]
  440621:	test   BYTE PTR [edx],ch
  440623:	or     al,cl
  440625:	adc    eax,0xfea90ad4
  44062a:	cmp    ecx,DWORD PTR [ebp+ebp*1-0x6f]
  44062e:	xchg   esi,eax
  44062f:	pop    eax
  440630:	dec    ebp
  440631:	mov    esp,ebp
  440633:	jge    0x4405eb
  440635:	lahf   
  440636:	retf   0x52
  440639:	mov    edx,0x383ef81b
  44063e:	pusha  
  44063f:	enter  0x2a2c,0xd6
  440643:	dec    eax
  440644:	aad    0xa8
  440646:	repnz nop
  440648:	mov    dh,0xcc
  44064a:	fmul   DWORD PTR [ebp-0x121aacc4]
  440650:	jo     0x440626
  440652:	in     al,dx
  440653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440654:	cli    
  440655:	in     eax,0xc8
  440657:	or     al,0xab
  440659:	rol    DWORD PTR [esi-0x16b5394],0x18
  440660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440661:	push   es
  440662:	xchg   DWORD PTR [ecx+0x610eb9f],ebx
  440668:	or     DWORD PTR [esi],edx
  44066a:	and    dh,ah
  44066c:	xor    BYTE PTR [eax+0x39cae547],0xc5
  440673:	scas   al,BYTE PTR es:[edi]
  440674:	test   al,0xca
  440676:	add    DWORD PTR [ecx],ebx
  440678:	jae    0x4406b5
  44067a:	xchg   BYTE PTR [eax-0x77],dh
  44067d:	rep outs dx,BYTE PTR ds:[esi]
  44067f:	cwde   
  440680:	nop
  440681:	pusha  
  440682:	call   DWORD PTR [ebp+eax*2-0x4b4a4abc]
  440689:	or     BYTE PTR [ebx-0x146d2acd],bh
  44068f:	adc    ah,BYTE PTR [ebx-0x2d7e1d28]
  440695:	mov    ecx,0x6835b909
  44069a:	sub    eax,0xe8ebbb91
  44069f:	jmp    0x16526bf0
  4406a4:	push   ebp
  4406a5:	sbb    DWORD PTR [eax-0x1edcb239],edi
  4406ab:	dec    ebx
  4406ac:	sar    edi,cl
  4406ae:	loop   0x44069d
  4406b0:	inc    ebp
  4406b1:	push   es
  4406b2:	push   0xec2a63c9
  4406b7:	ret    0x852e
  4406ba:	cdq    
  4406bb:	jmp    0x4406f4
  4406bd:	dec    ebx
  4406be:	pushf  
  4406bf:	ins    DWORD PTR es:[edi],dx
  4406c0:	in     eax,0x8a
  4406c2:	scas   eax,DWORD PTR es:[edi]
  4406c3:	cwde   
  4406c4:	inc    esi
  4406c5:	pop    esi
  4406c6:	fs repz push esi
  4406c9:	and    BYTE PTR [esi],0x32
  4406cc:	gs push 0x9130e2a6
  4406d2:	lods   al,BYTE PTR ds:[esi]
  4406d3:	add    cl,0x56
  4406d6:	mov    edi,0x5ae2ec0
  4406db:	cmp    al,0xe1
  4406dd:	add    eax,DWORD PTR [esi+ecx*1-0x1d]
  4406e1:	popa   
  4406e2:	mov    esi,esi
  4406e4:	cmp    DWORD PTR [ebp+0x6dfa7d76],edx
  4406ea:	ja     0x4406c1
  4406ec:	adc    BYTE PTR [ebx],al
  4406ee:	fcomi  st,st(5)
  4406f0:	xchg   esp,eax
  4406f1:	test   eax,0x86dfbb35
  4406f6:	rcr    esi,cl
  4406f8:	sub    DWORD PTR [ebp-0x5a],esi
  4406fb:	out    dx,al
  4406fc:	jnp    0x440716
  4406fe:	mov    cl,0x9b
  440700:	cwde   
  440701:	xor    eax,0x6408c33a
  440706:	xchg   edx,eax
  440707:	test   eax,0xe02a9148
  44070c:	(bad)  
  44070d:	jnp    0x4406f0
  44070f:	ret    0xdbd4
  440712:	int    0x72
  440714:	mov    bh,BYTE PTR [ebp-0x64]
  440717:	and    esi,0x47
  44071a:	gs push eax
  44071c:	mov    BYTE PTR [eax],dh
  44071e:	rol    BYTE PTR [edi-0x5b6a80ef],0x4c
  440725:	xchg   DWORD PTR [ecx],ebp
  440727:	push   es
  440728:	jbe    0x4406b5
  44072a:	ss loopne 0x440769
  44072d:	add    dh,BYTE PTR [esi-0x7042602]
  440733:	into   
  440734:	jno    0x440756
  440736:	sub    al,bh
  440738:	xlat   BYTE PTR ds:[ebx]
  440739:	call   0xeeeb:0x5496c67b
  440740:	push   eax
  440741:	gs dec eax
  440743:	add    al,BYTE PTR [edx]
  440745:	arpl   WORD PTR [edx+edi*2],ax
  440748:	mov    ?,WORD PTR [esi-0x357f2b05]
  44074e:	mov    edx,0x33890842
  440753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440754:	add    ah,BYTE PTR fs:[ebx-0x19]
  440758:	jns    0x4406ea
  44075a:	sti    
  44075b:	inc    edx
  44075c:	push   ebp
  44075d:	lock jl 0x4407bf
  440760:	push   0x8eed159c
  440765:	adc    DWORD PTR [eax+0x4d9bef55],eax
  44076b:	loopne 0x4407c5
  44076d:	in     al,dx
  44076e:	mov    bl,0x2c
  440770:	(bad)  
  440771:	inc    esi
  440772:	stos   DWORD PTR es:[edi],eax
  440773:	sbb    al,0xaf
  440775:	pop    esp
  440776:	xlat   BYTE PTR ds:[ebx]
  440777:	jecxz  0x44077c
  440779:	add    DWORD PTR [esi-0x7371441d],eax
  44077f:	push   edi
  440780:	imul   ecx,DWORD PTR [ebp+0x70],0x27c4253
  440787:	mov    dl,0x25
  440789:	aas    
  44078a:	jle    0x4407e0
  44078c:	retf   0x5608
  44078f:	sbb    dh,dl
  440791:	je     0x4407ba
  440793:	sti    
  440794:	pop    DWORD PTR [esi+0x14]
  440797:	repz jae 0x4407c2
  44079a:	lods   eax,DWORD PTR ds:[esi]
  44079b:	mov    cl,0x73
  44079d:	(bad)  
  44079e:	imul   edi,ebp,0x36851070
  4407a4:	rcl    bh,cl
  4407a6:	(bad)  
  4407a8:	push   eax
  4407a9:	inc    edi
  4407aa:	in     eax,0x2d
  4407ac:	mov    ds:0x6b23eeec,eax
  4407b1:	push   edi
  4407b2:	mov    esi,0x1a8000c2
  4407b7:	and    DWORD PTR [ebx+0x6a],edi
  4407ba:	inc    ebx
  4407bb:	sub    BYTE PTR [ecx],cl
  4407bd:	iret   
  4407be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4407bf:	sbb    esi,DWORD PTR [edi+edi*1+0x7e]
  4407c3:	pop    ebp
  4407c4:	scas   al,BYTE PTR es:[edi]
  4407c5:	mov    dh,0x8a
  4407c7:	lahf   
  4407c8:	adc    BYTE PTR [ebx],ch
  4407ca:	popa   
  4407cb:	repz in al,dx
  4407cd:	pop    edi
  4407ce:	repz ficomp DWORD PTR [edi+0x4e]
  4407d2:	cli    
  4407d3:	jle    0x4407b7
  4407d5:	or     al,0x9f
  4407d7:	ret    
  4407d8:	dec    eax
  4407d9:	mov    ebp,0x5a88eec3
  4407de:	jp     0x4407b5
  4407e0:	mov    edx,0x990f24cd
  4407e5:	loop   0x440799
  4407e7:	push   esp
  4407e8:	ror    BYTE PTR [ebx+0x170adb25],1
  4407ee:	ret    
  4407ef:	push   cs
  4407f0:	mov    edx,0xb38d2ded
  4407f5:	pop    edi
  4407f7:	test   edi,ebx
  4407f9:	retf   
  4407fa:	scas   eax,DWORD PTR es:[edi]
  4407fb:	arpl   WORD PTR [eax],sp
  4407fd:	push   esi
  4407fe:	popf   
  4407ff:	arpl   WORD PTR [edx+eax*8+0xc],cx
  440803:	out    0x4c,eax
  440805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440806:	pushf  
  440807:	sahf   
  440808:	jp     0x440885
  44080a:	fdiv   QWORD PTR [eax]
  44080c:	mov    ecx,0x265a8937
  440811:	fimul  DWORD PTR [ecx+0x77]
  440814:	xor    eax,0x97580202
  440819:	sub    al,0x40
  44081b:	inc    esi
  44081c:	cdq    
  44081d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44081e:	rol    cl,0x34
  440821:	pop    esi
  440822:	mov    esp,0x11412689
  440827:	scas   eax,DWORD PTR es:[edi]
  440828:	adc    al,0xf3
  44082a:	push   esp
  44082b:	fisttp WORD PTR gs:[edi]
  44082e:	cld    
  44082f:	je     0x44080f
  440831:	leave  
  440832:	add    DWORD PTR [ecx],esp
  440834:	push   eax
  440835:	out    0x9a,eax
  440837:	clc    
  440838:	pop    edi
  440839:	scas   al,BYTE PTR es:[edi]
  44083a:	pop    ebp
  44083b:	jb     0x440802
  44083d:	xor    al,0xbf
  44083f:	(bad)  
  440840:	xor    BYTE PTR [ebp-0x34],bl
  440843:	jmp    0x39e26500
  440848:	aas    
  440849:	rcr    edx,1
  44084b:	loop   0x440864
  44084d:	mov    esp,0x2abc24dc
  440852:	data16 aaa 
  440854:	cwde   
  440855:	ror    DWORD PTR [eax+edx*8-0x45053fb6],cl
  44085c:	pop    esi
  44085d:	push   edi
  44085e:	pop    esi
  44085f:	test   eax,0x1247076e
  440864:	adc    eax,0xf4b65e57
  440869:	jmp    0xe5ec:0x5be0917b
  440870:	inc    ebp
  440871:	sub    edx,0xe4431ae9
  440877:	mov    edx,0x169b0ae6
  44087c:	adc    bh,bl
  44087e:	pusha  
  44087f:	mov    edx,0xde5e2a37
  440884:	and    dh,BYTE PTR [esi-0x49]
  440887:	jbe    0x44086e
  440889:	inc    edx
  44088a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44088b:	xchg   edi,eax
  44088c:	cmc    
  44088d:	out    0x1c,eax
  44088f:	fdivr  st,st(5)
  440891:	push   ecx
  440892:	jp     0x4408f4
  440894:	xchg   esp,eax
  440895:	sub    al,0xdd
  440897:	int    0x3f
  440899:	test   BYTE PTR [ecx+0x45],cl
  44089c:	call   0x399d2434
  4408a1:	cmp    ebp,DWORD PTR [eax+edi*2]
  4408a4:	mov    bh,0xb4
  4408a6:	dec    esi
  4408a7:	dec    esi
  4408a8:	adc    BYTE PTR [edi-0x1f809e8e],ah
  4408ae:	or     BYTE PTR [eax+0x52913208],ch
  4408b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4408b5:	jbe    0x44088b
  4408b7:	shl    BYTE PTR [edi-0x10],1
  4408ba:	inc    esp
  4408bb:	mov    ah,0xcc
  4408bd:	popf   
  4408be:	add    dh,BYTE PTR [edx-0x33]
  4408c1:	sbb    ch,BYTE PTR [edx+esi*8]
  4408c4:	data16 cmp al,0xd6
  4408c7:	shl    ch,0x6
  4408ca:	pop    ds
  4408cb:	xor    dl,BYTE PTR [eax+0x73]
  4408ce:	das    
  4408cf:	fisubr DWORD PTR [edx+ebp*2-0x4d0f301b]
  4408d6:	push   es
  4408d7:	fidivr WORD PTR [edx-0x6c]
  4408da:	clc    
  4408db:	das    
  4408dc:	or     bh,BYTE PTR [eax+0x37b8846a]
  4408e2:	into   
  4408e3:	jne    0x440947
  4408e5:	push   ebx
  4408e6:	and    eax,0x88a52e42
  4408eb:	push   cs
  4408ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4408ed:	sub    DWORD PTR [edi+0x5a2e4b79],0x43
  4408f4:	xchg   DWORD PTR [ebp+0x2e],edi
  4408f7:	ret    
  4408f8:	cdq    
  4408f9:	xchg   esi,eax
  4408fa:	cmp    bl,BYTE PTR [edx-0xbe4e0e6]
  440900:	xor    ah,dl
  440902:	rcr    BYTE PTR [edx-0x1a],cl
  440905:	fimul  WORD PTR [eax+0x55aa2d7e]
  44090b:	push   eax
  44090c:	scas   al,BYTE PTR es:[edi]
  44090d:	xlat   BYTE PTR ds:[ebx]
  44090e:	inc    edi
  44090f:	ja     0x44093b
  440911:	inc    ebx
  440912:	or     bh,BYTE PTR ds:0x5793578a
  440918:	xchg   ecx,eax
  440919:	(bad)  [edi-0xa34f30a]
  44091f:	imul   BYTE PTR [ebp-0x675dee7f]
  440925:	ins    DWORD PTR es:[edi],dx
  440926:	dec    edi
  440927:	sbb    BYTE PTR [eax],0x1d
  44092a:	sahf   
  44092b:	mov    al,ds:0xff5a0127
  440930:	adc    DWORD PTR [ebx+0x45d439ec],edx
  440936:	mov    esp,0x3f47dfaa
  44093b:	in     al,0xc7
  44093d:	cmp    bh,BYTE PTR [edi+0x58d3c2ad]
  440943:	data16 cmp BYTE PTR [esi+0x48],ch
  440947:	sub    al,0x59
  440949:	adc    eax,0x7cf3b994
  44094e:	sbb    DWORD PTR [edx-0xf],0xffffffd3
  440952:	(bad)  
  440953:	mov    esi,0x1456cfd8
  440958:	or     DWORD PTR [ebx],ecx
  44095a:	lods   eax,DWORD PTR ds:[esi]
  44095b:	inc    ebp
  44095c:	add    BYTE PTR [esi+0x6],0x14
  440960:	and    al,0xf1
  440962:	xchg   ebp,eax
  440963:	push   edi
  440964:	test   al,0x50
  440966:	test   eax,0xe8e8923
  44096b:	ds loop 0x4408fe
  44096e:	sbb    ch,al
  440970:	add    DWORD PTR [ecx+eiz*8],0x2b
  440974:	lods   eax,DWORD PTR ds:[esi]
  440975:	sti    
  440976:	hlt    
  440977:	hlt    
  440978:	mov    esp,0x167c4176
  44097d:	out    0x52,eax
  44097f:	(bad)  
  440980:	sub    eax,0xc5b56636
  440985:	dec    esp
  440986:	add    ch,0xba
  440989:	push   cs
  44098a:	cmp    bl,BYTE PTR [edi+eiz*8-0x3c]
  44098e:	sbb    ebp,DWORD PTR [ecx+0x6708662]
  440994:	dec    edi
  440995:	neg    DWORD PTR [esi+ecx*1]
  440998:	sbb    dh,BYTE PTR [eax]
  44099a:	ds (bad) 
  44099c:	sub    eax,0xd9d687b0
  4409a1:	pushf  
  4409a2:	icebp  
  4409a3:	shl    BYTE PTR [eax-0x28904381],cl
  4409a9:	xor    eax,0x7bdfb832
  4409ae:	mov    bl,0x91
  4409b0:	les    edi,FWORD PTR [edx+0x45]
  4409b3:	and    al,0xf
  4409b5:	pop    esp
  4409b6:	or     dh,al
  4409b8:	rcr    DWORD PTR [esi],cl
  4409ba:	sub    eax,0xabb871f4
  4409bf:	mov    ecx,0x2865dcbc
  4409c4:	jg     0x440a0e
  4409c6:	repnz out 0x65,al
  4409c9:	stos   DWORD PTR es:[edi],eax
  4409ca:	sub    DWORD PTR [edi+0x6be621dd],ebp
  4409d0:	jmp    0xb2151eb6
  4409d5:	mov    dl,0x76
  4409d7:	xchg   esi,eax
  4409d8:	push   bp
  4409da:	adc    eax,0x8a1f32c2
  4409df:	loop   0x440a5b
  4409e1:	loope  0x4409a1
  4409e3:	fmul   QWORD PTR [eax-0x3d]
  4409e6:	ds test dl,0x87
  4409ea:	sub    ch,BYTE PTR [ebx-0x37]
  4409ed:	rcl    DWORD PTR [ebx-0x38101311],1
  4409f3:	mov    bl,0xaf
  4409f5:	pop    eax
  4409f6:	inc    edx
  4409f7:	sti    
  4409f8:	mov    eax,ds:0xde75744a
  4409fd:	iret   
  4409fe:	sub    al,0xe8
  440a00:	hlt    
  440a01:	mov    gs,edx
  440a03:	into   
  440a04:	popf   
  440a05:	xor    dh,BYTE PTR [edi]
  440a07:	xor    eax,edi
  440a09:	jecxz  0x4409e8
  440a0b:	lahf   
  440a0c:	not    BYTE PTR ds:0xbd2055a2
  440a12:	pop    ecx
  440a13:	pusha  
  440a14:	add    ah,BYTE PTR [ecx]
  440a16:	sub    dh,bl
  440a18:	imul   esi,DWORD PTR [edx-0x17355421],0xffffff9a
  440a1f:	xchg   BYTE PTR [ecx+0x53aa7b1b],ah
  440a25:	pop    edx
  440a26:	jae    0x440a99
  440a28:	push   ebp
  440a29:	inc    ebp
  440a2a:	inc    edi
  440a2b:	cwde   
  440a2c:	unpckhps xmm5,XMMWORD PTR [eax+0x5a]
  440a30:	push   ss
  440a31:	and    bl,BYTE PTR [eax-0x7a]
  440a34:	or     esp,DWORD PTR [esi-0x38]
  440a37:	lods   eax,DWORD PTR ds:[esi]
  440a38:	lock push ss
  440a3a:	inc    esi
  440a3b:	aaa    
  440a3c:	ss pop ebp
  440a3e:	and    bl,BYTE PTR [ebx]
  440a40:	and    al,0x9
  440a42:	and    DWORD PTR [edx],0xffffff89
  440a45:	mov    ecx,0xf567a690
  440a4a:	lock sqrtps xmm2,XMMWORD PTR [edi-0x78]
  440a4f:	cli    
  440a50:	cdq    
  440a51:	xor    BYTE PTR [edx-0x400b5ce7],bh
  440a57:	xor    eax,0x69d8e0e4
  440a5c:	mov    esi,0x75ae9a67
  440a61:	loop   0x440a65
  440a63:	pop    es
  440a64:	(bad)
  440a67:	cld    
  440a68:	in     eax,dx
  440a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a6a:	ins    BYTE PTR es:[edi],dx
  440a6b:	aam    0x6f
  440a6d:	bound  eax,QWORD PTR [edi-0x616b149]
  440a73:	icebp  
  440a74:	ja     0x440ad2
  440a76:	leave  
  440a77:	mov    ah,0x1d
  440a79:	(bad)  
  440a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a7b:	sbb    cl,ah
  440a7d:	adc    DWORD PTR [edi-0x2a81ab66],edi
  440a83:	jb     0x440aa1
  440a85:	inc    edi
  440a86:	cmc    
  440a87:	aad    0xf3
  440a89:	shld   DWORD PTR ds:0xb881d227,edx,cl
  440a90:	retf   0x3f06
  440a93:	outs   dx,DWORD PTR ds:[esi]
  440a94:	push   ebx
  440a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a96:	and    eax,0x330995cb
  440a9b:	hlt    
  440a9c:	xlat   BYTE PTR ds:[ebx]
  440a9d:	std    
  440a9e:	sbb    DWORD PTR [esi+0x1f],ecx
  440aa1:	mov    ecx,0xab47d313
  440aa6:	sbb    eax,0x5f76d3af
  440aab:	mov    bl,0xd4
  440aad:	or     al,0x21
  440aaf:	int    0xa8
  440ab1:	(bad)  
  440ab2:	and    eax,0x1514b63b
  440ab7:	adc    BYTE PTR [ebp-0x3],0xf9
  440abb:	jmp    0x86b8f419
  440ac0:	cmp    BYTE PTR ds:0x5f98680d,ch
  440ac6:	ss or  eax,0xef248d64
  440acc:	lods   eax,DWORD PTR ds:[esi]
  440acd:	add    BYTE PTR [ebx+edi*2-0x2229c2d5],ch
  440ad4:	sbb    DWORD PTR [eax],0x1f173d83
  440ada:	cld    
  440adb:	cwde   
  440adc:	arpl   WORD PTR [edx],bx
  440ade:	sub    al,0x3a
  440ae0:	xchg   ecx,eax
  440ae1:	imul   BYTE PTR [ebp+0x3]
  440ae4:	adc    cl,BYTE PTR [ebx-0x1c]
  440ae7:	mov    ebp,DWORD PTR [edx]
  440ae9:	or     DWORD PTR [eax+0x3dbf2425],esp
  440aef:	nop
  440af0:	dec    ecx
  440af1:	retf   
  440af2:	loop   0x440b13
  440af4:	ret    
  440af5:	push   esi
  440af6:	xchg   ebp,eax
  440af7:	xor    ebp,esi
  440af9:	lods   al,BYTE PTR ds:[esi]
  440afa:	jl     0x440b00
  440afc:	xor    ecx,DWORD PTR [ebx+0x4e]
  440aff:	ins    DWORD PTR es:[edi],dx
  440b00:	xor    BYTE PTR [esi],dl
  440b02:	add    bh,BYTE PTR [eax+0x7d]
  440b05:	rcr    BYTE PTR ds:0x4b88c83a,0x31
  440b0c:	aam    0xfa
  440b0e:	(bad)  
  440b0f:	lea    ecx,[edx]
  440b11:	icebp  
  440b12:	shl    edx,cl
  440b14:	(bad)  
  440b15:	push   ebx
  440b16:	dec    ecx
  440b17:	pop    ebx
  440b18:	jp     0x440b30
  440b1a:	arpl   WORD PTR [edi-0x72c2b9dc],di
  440b20:	inc    edi
  440b21:	bound  edi,QWORD PTR [eax]
  440b23:	mov    eax,DWORD PTR [ecx-0x74557a9b]
  440b29:	shr    BYTE PTR [edi],0x14
  440b2c:	scas   al,BYTE PTR es:[edi]
  440b2d:	adc    ah,ch
  440b2f:	fisubr WORD PTR [ebp+0x26e2dd]
  440b35:	xchg   esp,eax
  440b36:	ret    
  440b37:	(bad)  
  440b38:	in     al,dx
  440b39:	mov    esp,0xddaafea4
  440b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440b3f:	push   esi
  440b40:	jp     0x440b78
  440b42:	rcr    ebp,1
  440b44:	xor    al,BYTE PTR [edi-0x6185f0e7]
  440b4a:	popf   
  440b4b:	retf   0xa347
  440b4e:	cli    
  440b4f:	mov    dh,cl
  440b51:	mov    ds,WORD PTR [ebp-0x5ce6e59b]
  440b57:	jnp    0x440b77
  440b59:	stos   BYTE PTR es:[edi],al
  440b5a:	or     BYTE PTR [ecx],0x77
  440b5d:	mov    eax,0xe5c19a2a
  440b62:	icebp  
  440b63:	call   0xdbb25b64
  440b68:	in     eax,dx
  440b69:	mov    DWORD PTR [ebp+0x3a],ebx
  440b6c:	xchg   ebx,eax
  440b6d:	das    
  440b6e:	sbb    esi,DWORD PTR [esi+0x652a2750]
  440b74:	hlt    
  440b75:	add    bl,BYTE PTR [edx+0x71]
  440b78:	push   es
  440b79:	add    esi,ecx
  440b7b:	adc    ecx,DWORD PTR [ebp+0x18]
  440b7e:	sub    ebx,esi
  440b80:	fyl2xp1 
  440b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b83:	xor    BYTE PTR [eax-0x18eabfa2],bh
  440b89:	test   al,0xb4
  440b8b:	(bad)  
  440b8c:	lods   al,BYTE PTR ds:[esi]
  440b8d:	cwde   
  440b8e:	jae    0x440b35
  440b90:	je     0x440b65
  440b92:	stc    
  440b93:	mov    al,ds:0x49f80bca
  440b98:	push   edi
  440b99:	repz sub cl,dh
  440b9c:	test   BYTE PTR [ecx+0x3fd305c4],ah
  440ba2:	in     eax,0xd5
  440ba4:	sub    eax,0xbae54e9d
  440ba9:	jb     0x440b38
  440bab:	jmp    0xc5806f6c
  440bb0:	ins    DWORD PTR es:[edi],dx
  440bb1:	pop    ss
  440bb2:	mov    ah,dh
  440bb4:	retf   
  440bb5:	rcr    cl,cl
  440bb7:	out    dx,eax
  440bb8:	jbe    0x440b7c
  440bba:	(bad)  
  440bbb:	xchg   edx,eax
  440bbc:	or     ecx,DWORD PTR [ebp+0x53b85980]
  440bc2:	pushf  
  440bc3:	jmp    0xfd9276f4
  440bc8:	jne    0x440b52
  440bca:	fld    TBYTE PTR [ebp+0x67f6b8ad]
  440bd0:	push   ebp
  440bd1:	ret    0xa54c
  440bd4:	mov    ch,0x83
  440bd6:	lods   al,BYTE PTR ds:[esi]
  440bd7:	xchg   edx,eax
  440bd8:	pushf  
  440bd9:	mov    edi,0xdd3faea7
  440bde:	mov    bh,0xba
  440be0:	and    BYTE PTR [esi],0xa9
  440be3:	jp     0x440c55
  440be5:	repnz sbb eax,0xf9c7e420
  440beb:	xchg   BYTE PTR [ebx+edi*1+0x6],cl
  440bef:	mov    cl,0x85
  440bf1:	push   0x12eca110
  440bf6:	push   ebx
  440bf7:	(bad)  
  440bf8:	mov    cl,0xab
  440bfa:	jecxz  0x440bd6
  440bfc:	push   ebp
  440bfd:	inc    ebp
  440bfe:	push   0xfffffffd
  440c00:	out    0x1,al
  440c02:	xchg   esp,eax
  440c03:	int3   
  440c04:	dec    esi
  440c05:	ficom  WORD PTR [ebx+esi*1-0x7e]
  440c09:	pop    esi
  440c0a:	adc    DWORD PTR [edi-0x37c9107f],eax
  440c10:	test   eax,0x891c8db1
  440c15:	jnp    0x440c34
  440c17:	mov    BYTE PTR [edi+0x60b9f754],cl
  440c1d:	daa    
  440c1e:	retf   0x68fd
  440c21:	push   ecx
  440c22:	ret    0xf56c
  440c25:	dec    edx
  440c26:	mov    dl,0x75
  440c28:	jmp    0xf72b:0xb0f396fc
  440c2f:	mov    DWORD PTR [edi],esp
  440c31:	sbb    dh,BYTE PTR [edi-0x4b]
  440c34:	adc    DWORD PTR [edi],ebp
  440c36:	jae    0x440c5e
  440c38:	adc    eax,0x47746a19
  440c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440c3e:	lds    edx,FWORD PTR [esi-0x3566a4c0]
  440c44:	fist   DWORD PTR [ecx+0x50]
  440c47:	xor    al,0x38
  440c49:	xor    BYTE PTR [edx],al
  440c4b:	xor    eax,DWORD PTR [ebp-0x1e]
  440c4e:	sub    BYTE PTR [eax+0x6a45bcc0],0x5f
  440c55:	mov    esp,0x3e7d7e0c
  440c5a:	popf   
  440c5b:	mov    ah,0x99
  440c5d:	jp     0x440bf9
  440c5f:	into   
  440c60:	xchg   edx,eax
  440c61:	in     eax,0x42
  440c63:	inc    edi
  440c64:	daa    
  440c65:	rcl    ecx,0x16
  440c68:	ror    ch,0x6a
  440c6b:	xor    bh,bl
  440c6d:	xchg   esp,eax
  440c6e:	fstp   TBYTE PTR [ebp-0x2f3e4670]
  440c74:	int    0x82
  440c76:	enter  0xe5ed,0x66
  440c7a:	push   edx
  440c7b:	inc    ecx
  440c7c:	add    al,BYTE PTR [ebx-0x18943356]
  440c82:	and    ah,BYTE PTR [edx+esi*2-0x23cc657f]
  440c89:	bound  edi,QWORD PTR [ebp+eax*2-0x1a38fd86]
  440c90:	in     eax,0x8f
  440c92:	dec    edi
  440c93:	mov    ch,0xd2
  440c95:	pop    esp
  440c96:	repz pop ebp
  440c98:	mov    ds:0xadbb8ae7,eax
  440c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440c9e:	(bad)  
  440c9f:	div    esp
  440ca1:	push   edi
  440ca2:	mov    eax,ds:0x27db2c27
  440ca7:	dec    esi
  440ca8:	push   ds
  440ca9:	test   al,0xb4
  440cab:	mov    eax,ds:0x280e8271
  440cb0:	mov    edx,0xaf8de8df
  440cb5:	mov    edx,eax
  440cb7:	ins    DWORD PTR es:[edi],dx
  440cb8:	fst    DWORD PTR ds:0xdbdad4ee
  440cbe:	cmp    BYTE PTR [ecx+0x59],0xb8
  440cc2:	cli    
  440cc3:	mov    dl,0xec
  440cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440cc6:	sub    bh,BYTE PTR [esp+edx*1]
  440cc9:	pop    esp
  440cca:	adc    ch,cl
  440ccc:	xor    ebx,DWORD PTR [edi-0xbe417cd]
  440cd2:	add    ecx,edx
  440cd4:	mov    ss:0xaa10fb07,eax
  440cda:	(bad)  
  440cdb:	jle    0x440c83
  440cdd:	dec    edi
  440cde:	mov    bh,0x4c
  440ce0:	pushf  
  440ce1:	outs   dx,BYTE PTR ds:[esi]
  440ce2:	fs push ds
  440ce4:	cdq    
  440ce5:	imul   ebx,edx,0x4f939eb4
  440ceb:	jnp    0x440c77
  440ced:	fwait
  440cee:	mov    esi,0x81f92cfd
  440cf3:	add    edi,DWORD PTR [edx+0x145ef4d9]
  440cf9:	outs   dx,DWORD PTR ds:[esi]
  440cfa:	call   0x538f:0x798620c1
  440d01:	jmp    0xc9974a2a
  440d06:	scas   al,BYTE PTR es:[edi]
  440d07:	pop    ss
  440d08:	rcl    BYTE PTR [ebx],1
  440d0a:	add    eax,0xbe66085d
  440d0f:	add    al,0x24
  440d11:	and    ch,ah
  440d13:	xor    DWORD PTR [esi],edi
  440d15:	daa    
  440d16:	jbe    0x440d31
  440d18:	icebp  
  440d19:	shr    DWORD PTR [ebx+0x4f],cl
  440d1c:	mov    ah,BYTE PTR [ebx+0x65e4afcf]
  440d22:	(bad)  
  440d23:	cmp    eax,0x5ce3db36
  440d28:	scas   eax,DWORD PTR es:[edi]
  440d29:	dec    esi
  440d2a:	dec    edi
  440d2b:	push   es
  440d2c:	shl    BYTE PTR [ecx-0x42],1
  440d2f:	cli    
  440d30:	cdq    
  440d31:	mov    esi,0x9be16a70
  440d36:	repz xchg esp,eax
  440d38:	xchg   ebx,eax
  440d39:	std    
  440d3a:	add    al,0x58
  440d3c:	cs dec ebx
  440d3e:	dec    esi
  440d3f:	(bad)  
  440d40:	pop    eax
  440d41:	jl     0x440da8
  440d43:	adc    al,0x82
  440d45:	lahf   
  440d46:	shr    DWORD PTR [ecx],0x6d
  440d49:	das    
  440d4a:	(bad)  
  440d4b:	je     0x440d7a
  440d4d:	loope  0x440d96
  440d4f:	cmp    ecx,esp
  440d51:	jle    0x440d51
  440d53:	test   BYTE PTR [ebp+esi*4-0x6],dl
  440d57:	push   ds
  440d58:	sahf   
  440d59:	jl     0x440ce2
  440d5b:	xchg   BYTE PTR [eax+0x34],cl
  440d5e:	xchg   edx,eax
  440d5f:	inc    ebp
  440d60:	retf   0xa3
  440d63:	sub    bl,BYTE PTR [ebx+ecx*8-0x5]
  440d67:	shr    DWORD PTR [esi-0x17],1
  440d6a:	mov    ah,0x57
  440d6c:	adc    al,0x82
  440d6e:	test   BYTE PTR [esi-0x11],bl
  440d71:	in     al,dx
  440d72:	add    al,0x30
  440d74:	jge    0x440dd4
  440d76:	in     eax,dx
  440d77:	and    eax,0xae1cef31
  440d7c:	lods   al,BYTE PTR ds:[esi]
  440d7d:	jns    0x440d22
  440d7f:	add    bl,bh
  440d81:	adc    al,BYTE PTR [eax]
  440d83:	jge    0x440dae
  440d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440d86:	stc    
  440d87:	push   edi
  440d88:	cmp    dh,dh
  440d8a:	out    0xca,eax
  440d8c:	rcl    DWORD PTR [ecx-0x77],0x53
  440d90:	retf   
  440d91:	jecxz  0x440df2
  440d93:	pop    edi
  440d94:	pop    edi
  440d95:	mov    ds:0xd3f3b5a9,al
  440d9a:	push   ebp
  440d9b:	lock and eax,0xb32db6c
  440da1:	jno    0x440df3
  440da3:	cmp    al,0x93
  440da5:	xchg   DWORD PTR [ebx],ecx
  440da7:	mov    WORD PTR [esi-0x252ef2f2],ds
  440dad:	sbb    ebp,ecx
  440daf:	sbb    dl,BYTE PTR [edx-0x30]
  440db2:	hlt    
  440db3:	mov    WORD PTR [eax-0x5a],ss
  440db6:	retf   0xe488
  440db9:	stc    
  440dba:	push   0x0
  440dbc:	sub    esi,edx
  440dbe:	xor    eax,0xb6e40f9
  440dc3:	push   es
  440dc4:	or     BYTE PTR [edx+0x42],bl
  440dc7:	or     eax,0xdca1ed26
  440dcc:	fwait
  440dcd:	xor    eax,0xcc13b729
  440dd2:	loope  0x440d59
  440dd4:	pop    esp
  440dd5:	xchg   esi,eax
  440dd6:	scas   al,BYTE PTR es:[edi]
  440dd7:	xor    BYTE PTR [eax-0x34580828],bl
  440ddd:	icebp  
  440dde:	ins    DWORD PTR es:[edi],dx
  440ddf:	loopne 0x440e5e
  440de1:	out    dx,eax
  440de2:	frstor [ebp*2+0x6509e9d0]
  440de9:	ins    BYTE PTR es:[edi],dx
  440dea:	fdiv   QWORD PTR [eax]
  440dec:	jnp    0x440db8
  440dee:	cs ror bl,1
  440df1:	inc    DWORD PTR [ecx+0x21]
  440df4:	add    eax,DWORD PTR [ecx+0x23]
  440df7:	xlat   BYTE PTR ds:[ebx]
  440df8:	inc    ebp
  440df9:	shl    DWORD PTR [esi+0x11],1
  440dfc:	dec    esp
  440dfd:	push   eax
  440dfe:	inc    edx
  440dff:	shr    BYTE PTR [esp+esi*2+0x70291e73],0x7c
  440e07:	cmp    cl,BYTE PTR [ebp-0x44]
  440e0a:	push   edi
  440e0b:	faddp  st(2),st
  440e0d:	fxch   st(5)
  440e0f:	neg    eax
  440e11:	mov    al,0xd1
  440e13:	push   ebp
  440e14:	mov    esi,ebp
  440e16:	mov    ecx,0x3dc716a3
  440e1b:	or     bh,dl
  440e1d:	xor    BYTE PTR [edx+0x7acd6372],cl
  440e23:	dec    ecx
  440e24:	mov    ch,0xb7
  440e26:	push   ebp
  440e27:	push   ecx
  440e28:	sub    ebp,edi
  440e2a:	mov    ebx,0xf41c2b7d
  440e2f:	cmp    eax,0x2a0df934
  440e34:	or     eax,0x20fd0f8a
  440e39:	sti    
  440e3a:	repnz test BYTE PTR [ebx],bl
  440e3d:	outs   dx,BYTE PTR ds:[esi]
  440e3e:	(bad)  
  440e3f:	mov    edi,0xa94e6364
  440e44:	cli    
  440e45:	aam    0xc6
  440e47:	jne    0x440dcf
  440e49:	mov    ds:0x135f4373,eax
  440e4e:	pop    esp
  440e4f:	add    BYTE PTR [edx-0x2b1986da],bl
  440e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440e56:	js     0x440dfa
  440e58:	mov    dh,0x1c
  440e5a:	rcl    BYTE PTR [ecx+0x10aeb4a],0xa8
  440e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440e62:	ret    0xa25
  440e65:	in     eax,0xf4
  440e67:	nop
  440e68:	push   cs
  440e69:	xchg   ebx,eax
  440e6a:	pop    edi
  440e6b:	mov    esp,0x1907f55d
  440e70:	loopne 0x440e8d
  440e72:	jge    0x440ec6
  440e74:	and    BYTE PTR [edx],bl
  440e76:	imul   esi,eax,0xffffffc6
  440e79:	mov    edx,0x3ed34941
  440e7e:	lock test DWORD PTR fs:[esi],eax
  440e82:	jl     0x440e5d
  440e84:	xor    BYTE PTR [ebx-0x54],0xa9
  440e88:	sub    eax,0x4b6e795b
  440e8d:	jg     0x440ee1
  440e8f:	sub    DWORD PTR [ebx+0x6e8210a3],0xffffffc6
  440e96:	mov    edx,0x202dc04a
  440e9b:	aaa    
  440e9c:	pushf  
  440e9d:	sbb    ebx,ecx
  440e9f:	in     al,0x1c
  440ea1:	xchg   ebp,eax
  440ea2:	adc    BYTE PTR [eax-0x1bcac62c],0x47
  440ea9:	add    al,bl
  440eab:	aad    0x4c
  440ead:	and    DWORD PTR [esi],ecx
  440eaf:	jmp    0xf50542e4
  440eb4:	and    ch,BYTE PTR [ecx-0x2e377b25]
  440eba:	jl     0x440edc
  440ebc:	call   0x86956b5f
  440ec1:	adc    bh,bh
  440ec3:	cdq    
  440ec4:	out    0xc2,eax
  440ec6:	cs push eax
  440ec8:	push   esp
  440ec9:	(bad)  
  440eca:	xchg   DWORD PTR [edx-0x71],esp
  440ecd:	lock push es
  440ecf:	sub    edx,DWORD PTR [eax-0x73217b5f]
  440ed5:	sub    DWORD PTR [esi+edi*4],eax
  440ed8:	sub    ecx,0x27
  440edb:	lock std 
  440edd:	jns    0x440f12
  440edf:	ins    BYTE PTR es:[edi],dx
  440ee0:	fcmovnbe st,st(3)
  440ee2:	pop    ss
  440ee3:	push   esp
  440ee4:	clc    
  440ee5:	add    edi,DWORD PTR [eax]
  440ee7:	xor    DWORD PTR [edi],esp
  440ee9:	add    BYTE PTR [eax-0x49b135ff],ch
  440eef:	pop    ebx
  440ef0:	and    dl,bh
  440ef2:	xlat   BYTE PTR ds:[ebx]
  440ef3:	add    al,BYTE PTR [edx-0x4ca75327]
  440ef9:	fwait
  440efa:	dec    eax
  440efb:	jle    0x440eba
  440efd:	xor    BYTE PTR [ebx],dl
  440eff:	int    0xf2
  440f01:	repnz or BYTE PTR [ecx+0x46fff175],0xe5
  440f09:	dec    ebp
  440f0a:	sbb    eax,0x3bff0122
  440f0f:	lea    esp,[edi+0x44]
  440f12:	(bad)  
  440f13:	in     al,0x60
  440f15:	pop    esp
  440f16:	mov    BYTE PTR [ebx+0x9],cl
  440f19:	lods   eax,DWORD PTR ds:[esi]
  440f1a:	and    DWORD PTR [ecx],0x385c4087
  440f20:	les    eax,FWORD PTR [ebx+0x483f9a3f]
  440f26:	popa   
  440f27:	nop
  440f28:	mov    DWORD PTR [ebx+0x628672ce],ebx
  440f2e:	stos   BYTE PTR es:[edi],al
  440f2f:	test   eax,0x7ec13cf1
  440f34:	xchg   edx,eax
  440f35:	jno    0x440f87
  440f37:	mov    esi,0x5d568dc7
  440f3c:	sbb    dh,BYTE PTR [edx-0x21]
  440f3f:	cli    
  440f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440f41:	mov    edi,0xfdfd43e4
  440f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440f47:	push   ebp
  440f48:	jle    0x440faa
  440f4a:	fadd   QWORD PTR [esp+eax*2+0x18]
  440f4e:	or     DWORD PTR [eax],edx
  440f50:	call   0x6918bd94
  440f55:	mov    ch,0x46
  440f57:	sub    bh,dh
  440f59:	test   DWORD PTR [ecx],ebp
  440f5b:	mul    eax
  440f5d:	add    ch,BYTE PTR [edx+0x32]
  440f60:	xchg   ecx,eax
  440f61:	push   edi
  440f62:	sub    eax,0x5f35e6c2
  440f67:	mov    edx,0xa5f178d7
  440f6c:	pop    ebp
  440f6d:	pop    edi
  440f6e:	and    DWORD PTR [eax],0x74
  440f71:	jmp    DWORD PTR [ecx-0x2d]
  440f74:	mov    ebx,0x11d2add8
  440f79:	and    edx,DWORD PTR [ecx-0x3d362dff]
  440f7f:	iret   
  440f80:	jg     0x440fdd
  440f82:	shl    DWORD PTR [ebp-0x11],1
  440f85:	test   edx,ebp
  440f87:	daa    
  440f88:	jp     0x440fcc
  440f8a:	out    0x41,al
  440f8c:	pushf  
  440f8d:	or     eax,0x3fc8f596
  440f92:	inc    edx
  440f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440f94:	mov    ebp,0x2a1350c9
  440f99:	mov    esi,0xc77f3bac
  440f9e:	sbb    DWORD PTR [ebx-0x4c80a669],edi
  440fa4:	push   es
  440fa5:	dec    edx
  440fa6:	cmp    DWORD PTR [edx-0x78],0xffffffd6
  440faa:	jle    0x440f2f
  440fac:	js     0x440f4a
  440fae:	mov    eax,ds:0xc6487ba
  440fb3:	xchg   edi,eax
  440fb4:	mov    ecx,0xb5ff4a81
  440fb9:	xlat   BYTE PTR ds:[ebx]
  440fba:	out    dx,al
  440fbb:	or     al,0x4c
  440fbd:	sub    bh,bh
  440fbf:	aas    
  440fc0:	sub    eax,DWORD PTR [ecx-0x15821400]
  440fc6:	out    0xa1,al
  440fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440fc9:	pop    esi
  440fca:	fs daa 
  440fcc:	sub    ch,BYTE PTR [edi]
  440fce:	inc    edx
  440fcf:	fst    DWORD PTR [ebx+ebp*8]
  440fd2:	jle    0x441023
  440fd4:	stos   BYTE PTR es:[edi],al
  440fd5:	cwde   
  440fd6:	lds    ecx,FWORD PTR cs:[ecx-0x607402c5]
  440fdd:	int    0x86
  440fdf:	call   0xb4228c7b
  440fe4:	div    BYTE PTR [ecx-0x32]
  440fe7:	dec    ebp
  440fe8:	fadd   DWORD PTR [ecx-0x7e]
  440feb:	scas   eax,DWORD PTR es:[edi]
  440fec:	fisubr WORD PTR [ebx+0x53]
  440fef:	sub    dl,ah
  440ff1:	popa   
  440ff2:	inc    esp
  440ff3:	fsubr  QWORD PTR [edx+0x1a]
  440ff6:	jmp    0x440ffc
  440ff8:	test   BYTE PTR [esi-0x3be600d5],dl
  440ffe:	(bad)  
  440fff:	leave  
  441000:	(bad)  
  441001:	cmp    BYTE PTR [eax],bh
  441003:	sub    bh,BYTE PTR [edi+0x67]
  441006:	popf   
  441007:	jg     0x44100a
  441009:	mov    gs,WORD PTR [ecx-0x4b6de16b]
  44100f:	adc    eax,DWORD PTR ds:0x7ab5fadb
  441015:	mov    eax,ds:0x10f4f1c8
  44101a:	pop    edx
  44101b:	mov    bl,0x16
  44101d:	xor    BYTE PTR [esi+0x6f],dh
  441020:	pushf  
  441021:	mov    esp,0xb05beb28
  441026:	jle    0x441033
  441028:	retf   0xcf29
  44102b:	xor    ecx,DWORD PTR [esi-0x29]
  44102e:	ss add eax,0xe1795118
  441034:	ss cmp al,0xc5
  441037:	or     al,0x9d
  441039:	mov    WORD PTR [edx],es
  44103b:	cdq    
  44103c:	add    BYTE PTR ds:0xcf6d9c5b,ch
  441042:	cmp    eax,0x4cea940f
  441047:	shr    DWORD PTR [ebx+0x782a2fa1],cl
  44104d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44104e:	xchg   edx,eax
  44104f:	and    BYTE PTR [eax+0x6844ac7f],0x76
  441056:	mov    ds:0x2e3c7d4b,al
  44105b:	mov    esp,0x99ec344c
  441060:	xchg   ecx,eax
  441061:	lods   al,BYTE PTR ds:[esi]
  441062:	pop    esp
  441063:	push   eax
  441064:	adc    BYTE PTR [ecx],dh
  441066:	out    dx,eax
  441067:	mov    dh,0x27
  441069:	fstp   TBYTE PTR [ebp-0x21d92612]
  44106f:	fsubr  st(0),st
  441071:	push   eax
  441072:	or     bh,al
  441074:	xchg   BYTE PTR [edi-0x7b],dl
  441077:	mov    cs,esi
  441079:	mov    dh,0x6c
  44107b:	sub    ebx,DWORD PTR [ecx]
  44107d:	adc    ecx,DWORD PTR [edx+0x4f]
  441080:	add    al,0x2f
  441082:	in     eax,0x45
  441084:	inc    esi
  441085:	inc    ebx
  441086:	adc    DWORD PTR [ebx+0x31],esi
  441089:	push   0xa0205366
  44108e:	dec    esp
  44108f:	aas    
  441090:	test   DWORD PTR [edx],esi
  441092:	sti    
  441093:	adc    al,0xde
  441095:	xchg   ebx,esi
  441097:	jbe    0x441023
  441099:	pop    es
  44109a:	ja     0x44105d
  44109c:	out    0xe7,eax
  44109e:	adc    edx,DWORD PTR [edi+edx*8+0x12fe75a6]
  4410a5:	xor    DWORD PTR [ecx-0x3d],edi
  4410a8:	repz dec eax
  4410aa:	fldenv [ebp-0x57]
  4410ad:	jb     0x44110d
  4410af:	mov    esi,0xf0a1d58
  4410b4:	enter  0x9c77,0x40
  4410b8:	repnz lods al,BYTE PTR ds:[esi]
  4410ba:	mov    esp,0x6c600036
  4410bf:	adc    dh,BYTE PTR [edx]
  4410c1:	ins    DWORD PTR es:[edi],dx
  4410c2:	mov    ds,ecx
  4410c4:	or     edx,edx
  4410c6:	push   ebx
  4410c7:	(bad)  
  4410c8:	and    dl,BYTE PTR [eax-0x4c]
  4410cb:	(bad)  [ecx+0x2e]
  4410ce:	jl     0x441137
  4410d0:	call   0xe700:0x9ffcbc28
  4410d7:	xchg   ebp,eax
  4410d8:	daa    
  4410d9:	adc    ebx,DWORD PTR [edi-0x3d]
  4410dc:	mov    cl,0x77
  4410de:	push   eax
  4410df:	pushf  
  4410e0:	out    dx,eax
  4410e1:	push   ebx
  4410e2:	xchg   si,ax
  4410e4:	ins    BYTE PTR es:[edi],dx
  4410e5:	shl    BYTE PTR [esi+ebp*8],0xba
  4410e9:	cli    
  4410ea:	loope  0x441157
  4410ec:	mov    bh,0xda
  4410ee:	adc    ah,ah
  4410f0:	mov    al,0xb8
  4410f2:	push   esi
  4410f3:	popf   
  4410f4:	mov    al,fs:0x56874a50
  4410fa:	test   DWORD PTR gs:[eax+0x1a3c05a6],edi
  441101:	int3   
  441102:	xchg   edi,eax
  441103:	mov    ebp,fs
  441105:	imul   ebx,DWORD PTR [esi-0x75],0x1e
  441109:	daa    
  44110a:	fdiv   DWORD PTR es:[eax-0x79097857]
  441111:	jae    0x44111b
  441113:	or     cl,BYTE PTR [edx-0xf2ecc88]
  441119:	test   esi,esi
  44111b:	test   al,0x62
  44111d:	das    
  44111e:	rcr    DWORD PTR es:[edi],1
  441121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441122:	push   ecx
  441123:	inc    esi
  441124:	xchg   ecx,eax
  441125:	in     eax,0x13
  441127:	dec    ecx
  441128:	pop    esi
  441129:	pop    ss
  44112a:	adc    DWORD PTR [eax-0x51],eax
  44112d:	or     al,0x9b
  44112f:	xchg   DWORD PTR [ecx+eiz*8+0x21],edx
  441133:	inc    ebp
  441134:	mov    edx,0xe5d55afc
  441139:	xchg   edx,eax
  44113a:	out    0x2c,eax
  44113c:	adc    DWORD PTR [esi+0x4ee63d8c],eax
  441142:	push   ss
  441143:	push   ss
  441144:	dec    eax
  441145:	mov    dh,0x34
  441147:	sar    DWORD PTR [eax],cl
  441149:	sub    cl,BYTE PTR ds:0xe6ab8205
  44114f:	sar    DWORD PTR [esi-0x7c],0x3c
  441153:	iret   
  441154:	in     al,0xcf
  441156:	std    
  441157:	pop    eax
  441158:	xchg   ebx,eax
  441159:	jge    0x441151
  44115b:	popf   
  44115c:	add    eax,0x5fbb1943
  441161:	aaa    
  441162:	test   BYTE PTR [edx],bh
  441164:	mov    ch,BYTE PTR [ecx-0x7c]
  441167:	clc    
  441168:	add    eax,0x471b867e
  44116d:	jmp    0x44118b
  44116f:	xchg   DWORD PTR [edx+0x28],edx
  441172:	pop    esi
  441173:	xchg   edi,eax
  441174:	xchg   DWORD PTR [edx+eax*2+0x24b4f1f2],edi
  44117b:	dec    ebp
  44117c:	imul   edi,DWORD PTR [eax+0x4a],0x65
  441180:	ret    
  441181:	push   eax
  441182:	xor    al,0xb1
  441184:	(bad)  
  441185:	in     eax,dx
  441186:	shl    BYTE PTR [ecx],1
  441188:	loope  0x441179
  44118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44118b:	idiv   DWORD PTR [esi]
  44118d:	ja     0x44112c
  44118f:	out    0x55,al
  441191:	(bad)  
  441192:	cdq    
  441193:	fcom   st(5)
  441195:	and    DWORD PTR [esi-0x230dc86d],edx
  44119b:	pop    edi
  44119c:	pusha  
  44119d:	mov    ah,0x78
  44119f:	adc    al,0xb5
  4411a1:	fdivr  QWORD PTR [ebx+0x34c1be00]
  4411a7:	popa   
  4411a8:	ret    0xb766
  4411ab:	fstp   DWORD PTR [edx+0x5c777ba2]
  4411b1:	dec    ecx
  4411b2:	leave  
  4411b3:	pop    ebp
  4411b4:	std    
  4411b5:	popf   
  4411b6:	popa   
  4411b7:	jmp    0x9ad2:0xe1403394
  4411be:	sbb    BYTE PTR [ecx+0x8],0xe8
  4411c2:	in     al,dx
  4411c3:	sub    bl,BYTE PTR [esi+eax*8]
  4411c6:	std    
  4411c7:	mov    edx,0x627ceedf
  4411cd:	jb     0x441225
  4411cf:	(bad)  
  4411d0:	(bad)  
  4411d1:	arpl   WORD PTR [ebx-0x11],sp
  4411d4:	cli    
  4411d5:	cmp    al,0x15
  4411d7:	pusha  
  4411d8:	mov    ch,0xc2
  4411da:	push   ss
  4411db:	pop    ecx
  4411dc:	in     eax,0x4d
  4411de:	pop    ss
  4411df:	int3   
  4411e0:	(bad)
  4411e3:	jle    0x4411f1
  4411e5:	loop   0x4411aa
  4411e7:	jno    0x441221
  4411e9:	(bad)
  4411ec:	(bad)  
  4411ed:	stc    
  4411ee:	push   edx
  4411ef:	retf   
  4411f0:	sub    DWORD PTR [edx-0x62],ebp
  4411f3:	pop    ss
  4411f4:	jb     0x4411cb
  4411f6:	dec    esi
  4411f7:	sbb    BYTE PTR [ecx+esi*2-0x3888020],dh
  4411fe:	mov    ah,0x8f
  441200:	popf   
  441201:	sub    BYTE PTR [ebx+0x6be0d61],dh
  441207:	sub    ebx,ebx
  441209:	adc    eax,0xda9ae79c
  44120e:	mov    BYTE PTR [ecx-0x7f],dl
  441211:	mov    ebp,0xd7b2b4e3
  441216:	or     eax,0x317c725f
  44121b:	jge    0x4411fa
  44121d:	(bad)  ds:0x9fa2c670
  441223:	mov    esi,0x348a7296
  441228:	cmp    eax,0x81a0ce
  44122d:	pop    ebx
  44122e:	sti    
  44122f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441230:	add    eax,0xa50ff9c6
  441235:	ret    
  441236:	add    DWORD PTR [ebp+0x1a24a22a],ebx
  44123c:	fdivr  DWORD PTR [edi+0x55]
  44123f:	(bad)  
  441240:	ja     0x44124a
  441242:	pusha  
  441243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441244:	push   cs
  441245:	(bad)  
  441246:	fstp   TBYTE PTR [ebp-0x221a4763]
  44124c:	xchg   edx,eax
  44124d:	ins    DWORD PTR es:[edi],dx
  44124e:	test   BYTE PTR [ebx-0x11f81f10],dh
  441254:	nop
  441255:	push   cs
  441256:	xchg   ebp,eax
  441257:	das    
  441258:	sbb    eax,0x7a00cb4
  44125d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44125e:	mov    dh,0x6f
  441260:	nop    DWORD PTR [ebp-0x121a8fbd]
  441267:	mov    al,0x4c
  441269:	clc    
  44126a:	pusha  
  44126b:	cli    
  44126c:	ins    BYTE PTR es:[edi],dx
  44126d:	adc    eax,0x39d5bb3
  441272:	(bad)  
  441273:	xchg   edi,eax
  441274:	add    DWORD PTR [edi],esp
  441276:	pop    ecx
  441277:	cmp    BYTE PTR [ebx+ebp*2-0x13d41679],0xb5
  44127f:	nop
  441280:	mov    ds,ecx
  441282:	adc    DWORD PTR [edx],0x92e398de
  441288:	mov    ebx,?
  44128a:	cmp    ch,cl
  44128c:	sub    dl,ch
  44128e:	leave  
  44128f:	or     BYTE PTR [ebx+edx*4+0x7b],ah
  441293:	js     0x4412bc
  441295:	push   0x6c
  441297:	shl    BYTE PTR [edi-0x608cdaa4],0x23
  44129e:	adc    BYTE PTR [ecx],0xb2
  4412a1:	xor    esp,DWORD PTR [eax+ebp*1]
  4412a4:	sar    BYTE PTR [ecx-0x1bc2866a],1
  4412aa:	cmp    al,0xec
  4412ac:	pop    ss
  4412ad:	xchg   dh,cl
  4412af:	shl    BYTE PTR [ecx-0x21],1
  4412b2:	mov    WORD PTR [edx],ss
  4412b4:	nop
  4412b5:	mov    bl,0xd8
  4412b7:	jmp    0xb60c1e6f
  4412bc:	cmp    eax,0x766644b
  4412c1:	sbb    BYTE PTR fs:[edi+ebp*1+0x207cf732],0x16
  4412ca:	fadd   QWORD PTR [edx+0x6a]
  4412cd:	jae    0x4412bf
  4412cf:	xor    bl,ah
  4412d1:	call   0xd87c:0x9f45c79d
  4412d8:	xor    eax,0x7e4b614e
  4412dd:	push   ebx
  4412de:	inc    ecx
  4412df:	test   al,0x70
  4412e1:	inc    esp
  4412e2:	mov    bl,0xec
  4412e4:	inc    edx
  4412e5:	fwait
  4412e6:	sbb    eax,0xa2c4d89
  4412eb:	pop    ebx
  4412ec:	in     eax,0x62
  4412ee:	jmp    0x948:0x8a75294c
  4412f5:	jno    0x441297
  4412f7:	lods   al,BYTE PTR ds:[esi]
  4412f8:	stos   BYTE PTR es:[edi],al
  4412f9:	xlat   BYTE PTR ds:[ebx]
  4412fa:	mov    BYTE PTR [ecx],dh
  4412fc:	out    dx,eax
  4412fd:	mov    ecx,0x4de18b2d
  441302:	jae    0x441309
  441304:	shl    BYTE PTR [ecx-0x3c3d94bc],cl
  44130a:	mul    DWORD PTR ds:0x9feb50ff
  441310:	mov    edx,0xf4fef25a
  441315:	lock div BYTE PTR [edx-0x30]
  441319:	fwait
  44131a:	pop    ebp
  44131b:	adc    dh,0x4a
  44131e:	dec    eax
  44131f:	cld    
  441320:	retf   
  441321:	retf   
  441322:	loopne 0x441384
  441324:	push   ss
  441325:	push   ss
  441326:	int    0x70
  441328:	adc    BYTE PTR [edx-0xeb90524],cl
  44132e:	xchg   ebx,eax
  44132f:	adc    esp,DWORD PTR [esi+0x27]
  441332:	mov    ds:0xbf5ed8d1,al
  441337:	test   DWORD PTR [ebx],esp
  441339:	sub    DWORD PTR [ebx+0x58],ecx
  44133c:	std    
  44133d:	inc    eax
  44133e:	jmp    0x4412f3
  441340:	cmp    BYTE PTR [ebx+0x2],cl
  441343:	out    0xd,al
  441345:	out    dx,eax
  441346:	retf   0x256b
  441349:	pop    ebx
  44134a:	xor    DWORD PTR [edi+0xf694f1c],edi
  441350:	sbb    dl,BYTE PTR [edx-0x5]
  441353:	(bad)  
  441354:	std    
  441355:	pop    eax
  441356:	xor    eax,0x6dfb7ac
  44135b:	jg     0x44137e
  44135d:	(bad)  
  44135e:	add    edi,DWORD PTR [edi-0x6d]
  441361:	push   edi
  441362:	add    cl,BYTE PTR [ecx+0x0]
  441365:	retf   0x6b53
  441368:	push   ss
  441369:	out    0xe8,eax
  44136b:	aaa    
  44136c:	pusha  
  44136d:	es push ebx
  44136f:	add    eax,0x7ea4a0f8
  441374:	mov    eax,ds:0x2b888db2
  441379:	sbb    al,0xb2
  44137b:	and    eax,0x7b218662
  441380:	xor    eax,0xd578d429
  441385:	out    0x9a,eax
  441387:	mov    al,0x78
  441389:	neg    DWORD PTR [eax]
  44138b:	jge    0x441384
  44138d:	push   ds
  44138e:	shl    DWORD PTR [esi+0x31],0x91
  441392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441393:	rcr    DWORD PTR [edx],0xc
  441396:	mov    bh,0x19
  441398:	or     DWORD PTR [eax+0x64],ecx
  44139b:	dec    edi
  44139c:	in     eax,0xa4
  44139e:	outs   dx,BYTE PTR ds:[esi]
  44139f:	retf   
  4413a0:	out    0x65,eax
  4413a2:	cld    
  4413a3:	and    BYTE PTR [edx+0x5d],ah
  4413a6:	jne    0x4413c9
  4413a8:	sub    bl,BYTE PTR [esi]
  4413aa:	mov    esi,0x59de6b7b
  4413af:	imul   ecx,DWORD PTR ds:[edi-0x38f9b364],0x6821eecf
  4413ba:	pop    esp
  4413bb:	outs   dx,BYTE PTR ds:[esi]
  4413bc:	add    al,0xcd
  4413be:	daa    
  4413bf:	shr    DWORD PTR [edx+0x71],0x86
  4413c3:	icebp  
  4413c4:	xlat   BYTE PTR ds:[ebx]
  4413c6:	fwait
  4413c7:	daa    
  4413c8:	cmp    eax,DWORD PTR cs:[esi-0x2c]
  4413cc:	inc    ecx
  4413cd:	std    
  4413ce:	loopne 0x44140b
  4413d0:	sbb    edi,esp
  4413d2:	pmaddwd mm4,QWORD PTR [esp+edi*8+0x30]
  4413d7:	xor    edi,DWORD PTR [esi]
  4413d9:	(bad)
  4413dc:	(bad)  
  4413dd:	and    esp,esp
  4413df:	pop    es
  4413e0:	jg     0x44136a
  4413e2:	push   ebp
  4413e3:	int    0x5e
  4413e5:	lods   eax,DWORD PTR ds:[esi]
  4413e6:	test   BYTE PTR [edi],ah
  4413e8:	adc    ebx,DWORD PTR [ebx]
  4413ea:	inc    ebp
  4413eb:	jb     0x4413e1
  4413ed:	and    al,dl
  4413ef:	(bad)  
  4413f0:	fcomp  DWORD PTR [ecx-0x19e3528d]
  4413f6:	leave  
  4413f7:	popf   
  4413f8:	out    dx,eax
  4413f9:	scas   eax,DWORD PTR es:[edi]
  4413fa:	pop    esi
  4413fb:	(bad)  
  4413fc:	and    dl,BYTE PTR [ecx-0x62]
  4413ff:	mov    edx,0x5ab8de5f
  441404:	pop    ds
  441405:	mov    eax,0xb7b7ae16
  44140a:	xchg   BYTE PTR [ebx],dl
  44140c:	sbb    ch,BYTE PTR [edx-0x4d]
  44140f:	vmovhpd xmm2,xmm1,xmm1
  441413:	test   eax,0x9419ca6e
  441418:	xchg   edx,eax
  441419:	mov    bl,0xa0
  44141b:	inc    esi
  44141c:	and    eax,0x94c6e821
  441421:	shl    BYTE PTR [ebp-0x1a],1
  441424:	stc    
  441425:	mov    es,WORD PTR [esi+ecx*1-0x53]
  441429:	add    DWORD PTR [edx+0x6fdf58f0],ecx
  44142f:	stos   DWORD PTR es:[edi],eax
  441430:	rcl    DWORD PTR [ebx],1
  441432:	xchg   BYTE PTR [eax],dl
  441434:	test   al,0x13
  441436:	adc    DWORD PTR [edi+ebx*4+0x79],esi
  44143a:	cmp    al,0xe
  44143c:	add    BYTE PTR [edx],ah
  44143e:	sbb    DWORD PTR [edi],edi
  441440:	xchg   DWORD PTR [edx-0x44cde26f],ebx
  441446:	cli    
  441447:	cmp    eax,0x8dd4ff6
  44144c:	sbb    eax,0x24e510b4
  441451:	cwde   
  441452:	mov    BYTE PTR [edi],dh
  441454:	jns    0x441462
  441456:	mov    dh,0xbd
  441458:	lds    edx,FWORD PTR [eax+0x48392c66]
  44145e:	hlt    
  44145f:	fidivr DWORD PTR ds:[ebp-0x2f]
  441463:	add    ebx,DWORD PTR [esi]
  441465:	shr    BYTE PTR [esi-0x6d],cl
  441468:	loopne 0x441460
  44146a:	inc    ebx
  44146b:	outs   dx,DWORD PTR ds:[esi]
  44146c:	push   es
  44146d:	inc    esp
  44146e:	pop    DWORD PTR [esi+0x4143c6ee]
  441474:	sub    al,0xc6
  441476:	or     bh,BYTE PTR [eax]
  441478:	test   eax,0x1271a55
  44147d:	imul   DWORD PTR [ebx]
  44147f:	(bad)  
  441480:	pop    esi
  441481:	repnz fwait
  441483:	mov    bh,0x2
  441485:	adc    DWORD PTR [ecx-0x34cb292f],ecx
  44148b:	pushf  
  44148c:	xlat   BYTE PTR ss:[ebx]
  44148e:	lea    ebp,[ebx-0x47a584cb]
  441494:	ret    0xb798
  441497:	inc    eax
  441498:	shl    BYTE PTR [eax],1
  44149a:	xchg   esi,eax
  44149b:	lds    ebp,FWORD PTR [esi+0x53061a7e]
  4414a1:	stos   BYTE PTR es:[edi],al
  4414a2:	xchg   esp,eax
  4414a3:	add    DWORD PTR [edi+0x27eeb7b2],ebp
  4414a9:	mov    esp,0x12e35c6d
  4414ae:	jmp    0xdee7e257
  4414b3:	sahf   
  4414b4:	pop    ebx
  4414b5:	sar    BYTE PTR [ecx],cl
  4414b7:	fbld   TBYTE PTR [edx+0x16]
  4414ba:	mov    ebp,0x455effe7
  4414bf:	das    
  4414c0:	xchg   edx,eax
  4414c1:	fisub  DWORD PTR [edi]
  4414c3:	pop    esp
  4414c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4414c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4414c6:	sub    eax,0x54caa3b9
  4414cb:	sbb    esi,DWORD PTR [ecx-0x185968e4]
  4414d1:	jb     0x4414f8
  4414d3:	push   esi
  4414d4:	scas   eax,DWORD PTR es:[edi]
  4414d5:	add    bl,BYTE PTR [ecx-0x8]
  4414d8:	push   ss
  4414d9:	ins    BYTE PTR es:[edi],dx
  4414da:	adc    ah,BYTE PTR [ecx+ecx*8-0x31]
  4414de:	dec    esi
  4414df:	gs jecxz 0x4414a4
  4414e2:	adc    al,0xc4
  4414e4:	fwait
  4414e5:	sbb    eax,DWORD PTR [edx-0x1f]
  4414e8:	aam    0x4b
  4414ea:	pusha  
  4414eb:	gs or  al,0xe3
  4414ee:	pop    es
  4414ef:	int    0xb7
  4414f1:	xchg   ecx,eax
  4414f2:	sbb    BYTE PTR [esp-0x5f],ah
  4414f6:	es fs (bad) 
  4414f9:	scas   eax,DWORD PTR es:[edi]
  4414fa:	or     bh,bh
  4414fc:	retf   0xba5a
  4414ff:	ins    BYTE PTR es:[edi],dx
  441500:	jge    0x44156b
  441502:	ds cmc 
  441504:	aam    0x16
  441506:	repnz scas eax,DWORD PTR es:[edi]
  441508:	adc    cl,BYTE PTR [ebp+ebx*8-0x5]
  44150c:	retf   0x4ca4
  44150f:	jg     0x44154d
  441511:	or     edi,DWORD PTR [edx+0x17]
  441514:	in     eax,dx
  441515:	add    eax,0xaeffefe9
  44151a:	enter  0x4f7a,0x6c
  44151e:	mov    al,0x2e
  441520:	xor    BYTE PTR [eax],al
  441522:	pop    ebx
  441523:	test   cl,0x41
  441526:	lds    ecx,FWORD PTR [edx+0x754e0259]
  44152c:	inc    edi
  44152d:	test   eax,0x76d5b9c
  441532:	jmp    0x4414f5
  441534:	adc    BYTE PTR gs:[ebx+0x43a405ee],bl
  44153b:	outs   dx,DWORD PTR ds:[esi]
  44153c:	or     DWORD PTR [ebp+esi*4+0x5fad3378],edi
  441543:	inc    eax
  441544:	ins    DWORD PTR es:[edi],dx
  441545:	ja     0x44158a
  441547:	mov    esi,0xc72845c8
  44154c:	out    0x9a,al
  44154e:	fsubr  QWORD PTR [esi+0x2d]
  441551:	and    dl,dl
  441553:	or     DWORD PTR [edi],esp
  441555:	cmp    eax,0x10314f9a
  44155a:	pop    eax
  44155b:	or     BYTE PTR [bx+di-0x3ecc],bl
  441560:	sub    eax,0xeebd16bb
  441565:	scas   al,BYTE PTR es:[edi]
  441566:	jbe    0x44151d
  441568:	sub    BYTE PTR [edi-0x3e9891a],dh
  44156e:	outs   dx,DWORD PTR ds:[esi]
  44156f:	push   0xffffffbd
  441571:	test   dl,ch
  441573:	or     eax,0x61d349ef
  441578:	test   DWORD PTR [eax],0x8d14bfd6
  44157e:	push   ecx
  44157f:	out    dx,al
  441580:	data16 test dh,bl
  441583:	(bad)
  441586:	adc    ecx,esp
  441588:	fwait
  441589:	ret    0x92ab
  44158c:	sti    
  44158d:	rcl    DWORD PTR [edx+edx*4+0x1],0x2f
  441592:	dec    eax
  441593:	push   edi
  441594:	jne    0x4415a7
  441596:	and    BYTE PTR [ecx+0x4699bca0],dl
  44159c:	inc    BYTE PTR [ecx-0x25dd6eed]
  4415a2:	repz (bad) 
  4415a4:	out    dx,al
  4415a5:	push   eax
  4415a6:	lds    edx,FWORD PTR [eax+0x7]
  4415a9:	add    eax,0xe5a512a3
  4415ae:	add    BYTE PTR ds:0x92893203,bh
  4415b4:	mov    ds:0xe07d3e57,eax
  4415b9:	loop   0x44154f
  4415bb:	sbb    edi,ebx
  4415bd:	(bad)  
  4415be:	mul    BYTE PTR [edi]
  4415c0:	mov    esp,0xa21375ed
  4415c5:	lea    esi,[edx+0x6e13d1a1]
  4415cb:	sti    
  4415cc:	fstp   TBYTE PTR [edi]
  4415ce:	jne    0x441612
  4415d0:	mov    bl,0x2d
  4415d2:	addr16 es and esp,edi
  4415d6:	test   eax,0xacdf6c7
  4415db:	add    BYTE PTR [edx],dl
  4415dd:	dec    edi
  4415de:	push   0x18
  4415e0:	add    esi,DWORD PTR [eax-0x65]
  4415e3:	adc    eax,0x686fa771
  4415e8:	stos   BYTE PTR es:[edi],al
  4415e9:	sti    
  4415ea:	pushf  
  4415eb:	cdq    
  4415ec:	mov    ch,0xca
  4415ee:	and    BYTE PTR [edx-0x13dd926b],ch
  4415f4:	push   ebp
  4415f5:	repnz adc edx,ebx
  4415f8:	scas   eax,DWORD PTR es:[edi]
  4415f9:	int    0xd4
  4415fb:	aad    0x1d
  4415fd:	cli    
  4415fe:	mov    dh,0x13
  441600:	in     al,0x1e
  441602:	ret    
  441603:	cmp    DWORD PTR [edx-0x5c],ecx
  441606:	jp     0x44164e
  441608:	fimul  WORD PTR [ecx+0x21]
  44160b:	or     edx,DWORD PTR [edx]
  44160d:	mov    bl,0x87
  44160f:	cld    
  441610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441611:	inc    edx
  441612:	push   DWORD PTR [ecx-0x13]
  441615:	out    dx,eax
  441616:	pushf  
  441617:	cmp    esp,edi
  441619:	xor    al,0x7a
  44161b:	mov    al,ds:0x2ade296f
  441620:	out    dx,eax
  441621:	inc    ebp
  441622:	mov    eax,0x1636eed7
  441627:	mov    esi,0x1772af54
  44162c:	lods   eax,DWORD PTR ds:[esi]
  44162d:	mov    esp,ecx
  44162f:	ret    0x257c
  441632:	fisub  WORD PTR [esi-0x19b4c005]
  441638:	ds sbb eax,0x90f69dcc
  44163e:	adc    bh,BYTE PTR [ebp+0x2951c9c]
  441644:	pushf  
  441645:	dec    esp
  441646:	adc    al,BYTE PTR [eax]
  441648:	(bad)  
  441649:	mov    BYTE PTR [eax+ebx*2],cl
  44164c:	add    al,0x9a
  44164e:	js     0x44160b
  441650:	call   FWORD PTR [eax+edx*1-0x49]
  441654:	fdiv   DWORD PTR [ebp+0x60c87e9f]
  44165a:	sub    cl,BYTE PTR [edi+0x59545042]
  441660:	mov    cl,0x17
  441662:	out    dx,al
  441663:	xor    dl,BYTE PTR [edx+0x2f]
  441666:	mov    ebp,0x6c646a35
  44166b:	ficomp DWORD PTR gs:[edi+eax*4]
  44166f:	adc    bh,BYTE PTR [ebx-0x65]
  441672:	enter  0x4ac6,0x5a
  441676:	in     al,dx
  441677:	xor    edx,DWORD PTR [edx-0x2d0b02d8]
  44167d:	sbb    ebp,DWORD PTR [eax+0x6d]
  441680:	mov    ebx,0xd2581b7d
  441685:	pushf  
  441686:	jbe    0x4416bb
  441688:	sub    BYTE PTR [ebp-0xe],al
  44168b:	fnstcw WORD PTR [eax+ebx*2-0x2d]
  44168f:	mov    DWORD PTR [eax-0x1b],ecx
  441692:	scas   al,BYTE PTR es:[edi]
  441693:	ret    
  441694:	iret   
  441695:	jb     0x44162d
  441697:	sbb    DWORD PTR [ecx],esi
  441699:	dec    esi
  44169a:	ret    
  44169b:	(bad)  
  44169c:	and    BYTE PTR [eax+0x2641b0ed],dl
  4416a2:	sbb    al,0x5d
  4416a4:	enter  0xd10,0x54
  4416a8:	shr    BYTE PTR [ecx],cl
  4416aa:	and    BYTE PTR [edi+eiz*2+0x1500f649],ch
  4416b1:	(bad)  
  4416b2:	lea    edi,[ecx-0x263729f2]
  4416b8:	imul   eax,ebx,0x1f175e59
  4416be:	icebp  
  4416bf:	test   eax,0xafeb4412
  4416c4:	adc    ebx,DWORD PTR [esi]
  4416c6:	in     eax,0xba
  4416c8:	xor    bl,BYTE PTR [ebx+0x10]
  4416cb:	jo     0x4416e1
  4416cd:	in     eax,0x12
  4416cf:	inc    edx
  4416d0:	ficom  DWORD PTR [edx+0x2cd3fc32]
  4416d6:	retf   
  4416d7:	out    0xb3,eax
  4416d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4416da:	mov    esp,0x9ba02fa0
  4416df:	xchg   ebx,eax
  4416e0:	cmp    bl,BYTE PTR [eiz*1-0x3650deb7]
  4416e7:	ffree  st(0)
  4416e9:	and    eax,eax
  4416eb:	and    BYTE PTR [eax],ch
  4416ed:	cld    
  4416ee:	daa    
  4416ef:	cs dec ebx
  4416f1:	pop    ecx
  4416f2:	pop    esi
  4416f3:	outs   dx,DWORD PTR ds:[esi]
  4416f4:	in     al,0xfb
  4416f6:	pop    ecx
  4416f7:	mov    ah,0x28
  4416f9:	mov    eax,ds:0x74660146
  4416fe:	cmp    DWORD PTR [edi+edx*8],0xffffffc3
  441702:	add    eax,0x45c128c4
  441707:	xchg   BYTE PTR [eax+0x73],bl
  44170a:	int    0xe7
  44170c:	sahf   
  44170d:	sub    al,BYTE PTR [esp+edi*8+0x40f4b1d9]
  441714:	lods   al,BYTE PTR ds:[esi]
  441715:	jecxz  0x4416f3
  441717:	clc    
  441718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441719:	and    ecx,0x1fbe425b
  44171f:	(bad)  
  441720:	lods   eax,DWORD PTR ds:[esi]
  441721:	add    ch,BYTE PTR [ecx+0x5f]
  441724:	cdq    
  441725:	sbb    bl,BYTE PTR [edi+0x2ed1e6d3]
  44172b:	or     bh,BYTE PTR [ebp-0x4875d094]
  441731:	adc    ebp,DWORD PTR fs:[edi-0x60aa8263]
  441738:	dec    edx
  441739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44173a:	xchg   DWORD PTR [eax+ebx*8-0x4473d9d0],ebp
  441741:	ds call 0x24ad:0x83de574d
  441749:	nop
  44174a:	mov    dl,0x87
  44174c:	pop    ebp
  44174e:	bnd jb 0x4416f4
  441751:	cld    
  441752:	scas   al,BYTE PTR es:[edi]
  441753:	jge    0x44176b
  441755:	out    0x98,al
  441757:	test   ebx,eax
  441759:	dec    ebx
  44175a:	lahf   
  44175b:	test   al,0xae
  44175d:	pop    es
  44175e:	lods   eax,DWORD PTR ds:[esi]
  44175f:	jle    0x44171c
  441761:	test   al,al
  441763:	or     eax,0x2a0e2f43
  441768:	push   es
  441769:	aas    
  44176a:	dec    ecx
  44176b:	xor    al,0xf9
  44176d:	stc    
  44176e:	add    BYTE PTR [eax-0x35e18da6],bh
  441774:	retf   
  441775:	dec    esi
  441776:	test   eax,0x16c1287e
  44177b:	mov    esp,0x15834efe
  441780:	mov    ecx,0x190a500e
  441785:	shl    edi,0x80
  441788:	push   es
  441789:	rcl    BYTE PTR [edx+0x7d46bec9],1
  44178f:	idiv   DWORD PTR [ecx]
  441791:	in     al,dx
  441792:	cmp    DWORD PTR [ecx-0x25dbe2ef],esp
  441798:	sbb    DWORD PTR [esp+ecx*4+0x5205f3f9],esi
  44179f:	lds    edx,FWORD PTR [ecx]
  4417a1:	cmp    eax,0x1133bcee
  4417a6:	ss xchg esi,eax
  4417a8:	jmp    0x4b93:0x554bc577
  4417af:	in     eax,0x8f
  4417b1:	jmp    0x5dc0:0xad83c453
  4417b8:	fwait
  4417b9:	cmp    DWORD PTR [esi+0x2d8c946f],0xffffff81
  4417c0:	or     esp,DWORD PTR [edi+0x650b935e]
  4417c6:	call   esi
  4417c8:	das    
  4417c9:	out    dx,eax
  4417ca:	cmp    BYTE PTR [edi],ch
  4417cc:	inc    ebp
  4417cd:	push   cs
  4417ce:	cdq    
  4417cf:	sub    eax,DWORD PTR [esi-0x77]
  4417d2:	jmp    0xb824:0x37ffe7a
  4417d9:	jo     0x4417f2
  4417db:	cmp    eax,0x2197119b
  4417e0:	daa    
  4417e1:	jbe    0x441787
  4417e3:	cs xchg ebp,eax
  4417e5:	sbb    al,0x44
  4417e7:	jl     0x441867
  4417e9:	dec    edi
  4417ea:	outs   dx,BYTE PTR ds:[esi]
  4417eb:	xchg   ecx,eax
  4417ec:	mov    esi,0x47d56290
  4417f1:	push   ss
  4417f2:	mov    esp,0x554012f7
  4417f7:	stc    
  4417f8:	xor    bl,ah
  4417fa:	xchg   edx,eax
  4417fb:	ret    0x4d83
  4417fe:	stos   BYTE PTR es:[edi],al
  4417ff:	popa   
  441800:	mov    DWORD PTR [eax],eax
  441802:	scas   eax,DWORD PTR es:[edi]
  441803:	jecxz  0x44186d
  441805:	xchg   ecx,eax
  441806:	aam    0x19
  441808:	jmp    0x2946:0xe2befdce
  44180f:	call   0x2247e663
  441814:	int    0x45
  441816:	je     0x4417cd
  441818:	sub    al,0x32
  44181a:	push   0xfffffffe
  44181c:	inc    ebx
  44181d:	add    DWORD PTR [esi+0x4b],ecx
  441820:	test   al,0xcc
  441822:	test   BYTE PTR [esi+0x7],0xf6
  441826:	lods   eax,DWORD PTR ds:[esi]
  441827:	jmp    0x2b46e30f
  44182c:	sbb    BYTE PTR [edi],bh
  44182e:	nop
  44182f:	das    
  441830:	inc    edx
  441831:	and    al,0x9b
  441833:	into   
  441834:	fisub  DWORD PTR [esi+0x13]
  441837:	retf   0x45e5
  44183a:	ds test al,0x79
  44183d:	mov    ds:0xcac8d2,eax
  441842:	int3   
  441843:	jae    0x4418a9
  441845:	jmp    0x1aaa:0xe021ce69
  44184c:	pop    ss
  44184d:	or     esi,edx
  44184f:	cmp    DWORD PTR [edx-0x6d],edx
  441852:	push   esi
  441853:	sbb    al,BYTE PTR [edi]
  441855:	xor    DWORD PTR [ecx],0x8
  441858:	push   esp
  441859:	xor    al,0x4
  44185b:	enter  0xb4ad,0xec
  44185f:	ja     0x4418ca
  441861:	jnp    0x441864
  441863:	loop   0x441806
  441865:	dec    esi
  441866:	sahf   
  441867:	sar    ah,0x50
  44186a:	arpl   WORD PTR [eax+0x19],ax
  44186d:	and    eax,DWORD PTR [edi-0x11]
  441870:	mov    dh,0xb9
  441872:	dec    eax
  441873:	aaa    
  441874:	jle    0x441820
  441876:	mov    DWORD PTR [eax-0x5b],esi
  441879:	sbb    BYTE PTR [esi+0x6193faea],ah
  44187f:	xor    al,0x36
  441881:	out    0xc1,al
  441883:	and    eax,0x955f8f2b
  441888:	mov    DWORD PTR [edx-0x187c578f],ebp
  44188e:	jl     0x4418a5
  441890:	imul   ecx,DWORD PTR [ebx]
  441893:	pop    esp
  441894:	lahf   
  441895:	scas   eax,DWORD PTR es:[edi]
  441896:	xchg   ebx,eax
  441897:	and    eax,DWORD PTR [ecx+eiz*1+0x61444401]
  44189e:	or     eax,0x98e9c16c
  4418a3:	sub    al,0x24
  4418a5:	pop    es
  4418a6:	adc    edi,esp
  4418a8:	mov    dh,0xd2
  4418aa:	ins    BYTE PTR es:[edi],dx
  4418ab:	cmp    ebp,ebp
  4418ad:	mov    eax,0xe58f15c9
  4418b2:	clc    
  4418b3:	dec    ebx
  4418b4:	or     al,0x9a
  4418b6:	and    cl,BYTE PTR [edi]
  4418b8:	data16 mov ds:0x3e32728f,al
  4418be:	cdq    
  4418bf:	idiv   BYTE PTR [ecx+0x7]
  4418c2:	popf   
  4418c3:	xor    al,0x83
  4418c5:	cdq    
  4418c6:	pop    es
  4418c7:	adc    esi,DWORD PTR [edx-0x61]
  4418ca:	adc    DWORD PTR [ebp+edx*1-0x66],esi
  4418ce:	cmp    dl,ah
  4418d0:	cwde   
  4418d1:	cmp    bh,ch
  4418d3:	xor    ebp,edi
  4418d5:	les    ebp,FWORD PTR [ecx]
  4418d7:	fimul  DWORD PTR [edx+eiz*4-0x16]
  4418db:	adc    eax,0x42aa1622
  4418e0:	mov    ebp,0x4590efd9
  4418e5:	mov    ?,WORD PTR [eax-0x6a]
  4418e8:	xor    DWORD PTR [edx-0x45],0xffffffc0
  4418ec:	je     0x4418d8
  4418ee:	out    dx,al
  4418ef:	inc    ebp
  4418f0:	sbb    al,0x46
  4418f2:	dec    esi
  4418f3:	bound  ebx,QWORD PTR [ebx-0x7]
  4418f6:	jb     0x4418f4
  4418f8:	iret   
  4418f9:	rcl    ch,cl
  4418fb:	(bad)  
  4418fc:	out    dx,eax
  4418fd:	pushf  
  4418fe:	mov    bl,0x6c
  441900:	lods   eax,DWORD PTR ds:[esi]
  441901:	dec    eax
  441902:	js     0x4418cd
  441904:	dec    eax
  441906:	push   cs
  441907:	jl     0x441950
  441909:	sbb    BYTE PTR [edi+0x4f148e28],bl
  44190f:	sbb    ch,dl
  441911:	sub    DWORD PTR [ecx],edi
  441913:	sub    al,0x79
  441915:	(bad)  
  441916:	mov    ds:0xfee4ec3c,eax
  44191b:	call   0x821e37f6
  441920:	mov    dl,0x85
  441922:	jmp    0x5530a231
  441927:	push   ebx
  441928:	scas   al,BYTE PTR es:[edi]
  441929:	sahf   
  44192a:	and    eax,0xda4cb381
  44192f:	test   eax,0xf3e647f2
  441934:	mov    BYTE PTR [ebx+0x38],bh
  441937:	sar    DWORD PTR [ebx-0x32528d83],cl
  44193d:	call   0xf2eb0c1a
  441942:	push   edx
  441943:	ins    DWORD PTR es:[edi],dx
  441944:	xchg   ecx,eax
  441945:	fidivr WORD PTR [ebx+edi*2-0x1d]
  441949:	cmp    DWORD PTR [ebx-0x6e8428d5],eax
  44194f:	inc    edx
  441950:	push   0xbfccf44d
  441955:	test   eax,0xd74cf758
  44195a:	add    eax,0x774ad89a
  44195f:	fcomp  DWORD PTR [esi+esi*8-0x1]
  441963:	cld    
  441964:	in     eax,0xdd
  441966:	push   es
  441967:	add    DWORD PTR ds:0x2d1000d7,ebp
  44196d:	pusha  
  44196e:	stc    
  44196f:	mov    ecx,0x11fa7076
  441974:	and    eax,0x3b060aad
  441979:	cmp    al,0xd0
  44197b:	cmc    
  44197c:	and    cl,al
  44197e:	jns    0x441978
  441980:	fnsave [ecx+0x1b]
  441983:	test   eax,0x22def1bf
  441988:	bound  ecx,QWORD PTR [edi+ecx*4]
  44198b:	push   ss
  44198c:	(bad)  
  44198d:	popa   
  44198e:	int    0x64
  441990:	mov    bh,0x14
  441992:	sbb    al,0x84
  441994:	mov    ebx,0x912b5959
  441999:	xchg   ebp,eax
  44199a:	scas   eax,DWORD PTR es:[edi]
  44199b:	(bad)  
  44199c:	xchg   esi,eax
  44199d:	in     eax,0xdf
  44199f:	or     ecx,DWORD PTR [edi+0x75]
  4419a2:	sbb    DWORD PTR [ebp-0x20],edx
  4419a5:	xor    al,0x23
  4419a8:	in     al,0x44
  4419aa:	mov    al,dh
  4419ac:	jmp    0xb5f54e3e
  4419b1:	inc    edx
  4419b2:	in     al,dx
  4419b3:	test   al,0x49
  4419b5:	push   edi
  4419b6:	adc    al,0x49
  4419b8:	loopne 0x44195b
  4419ba:	out    0xb9,al
  4419bc:	jge    0x4419ef
  4419be:	aas    
  4419bf:	and    al,0xa9
  4419c1:	test   DWORD PTR [ebx],eax
  4419c3:	or     BYTE PTR cs:[edi],0x5b
  4419c7:	cwde   
  4419c8:	loope  0x4419f3
  4419ca:	xor    ecx,DWORD PTR [ebp+0x36]
  4419cd:	ins    DWORD PTR es:[edi],dx
  4419ce:	ins    BYTE PTR es:[edi],dx
  4419cf:	mov    ch,0xa5
  4419d1:	fwait
  4419d2:	xor    DWORD PTR [edx],0xffffffe1
  4419d5:	cmp    dl,BYTE PTR [ecx+0x57]
  4419d8:	retf   
  4419d9:	sbb    al,0x5b
  4419db:	sahf   
  4419dc:	jo     0x441a4e
  4419de:	es test eax,0x22e9dbe1
  4419e4:	pushf  
  4419e5:	mov    BYTE PTR ds:0xa1f68857,dl
  4419eb:	sbb    dh,dh
  4419ed:	mov    bh,0x92
  4419ef:	rol    bh,0x5d
  4419f2:	jle    0x441a6c
  4419f4:	(bad)  [ebx+0x22]
  4419f7:	addr16 adc esi,0x7bd13ac3
  4419fe:	push   edi
  4419ff:	rcl    DWORD PTR [edi],cl
  441a01:	test   al,0x17
  441a03:	nop
  441a04:	in     eax,0x4e
  441a06:	mov    esi,0xaba454be
  441a0b:	cmp    eax,0x13fbc019
  441a10:	push   edx
  441a11:	inc    ecx
  441a12:	lods   eax,DWORD PTR ds:[esi]
  441a13:	dec    ebp
  441a14:	mov    edx,esi
  441a16:	cmp    ebp,DWORD PTR [eax]
  441a18:	(bad)  
  441a1a:	scas   eax,DWORD PTR es:[edi]
  441a1b:	xchg   edi,eax
  441a1c:	(bad)  
  441a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a1f:	cmp    ebx,DWORD PTR [edi+0x65]
  441a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441a23:	loope  0x4419e6
  441a25:	sti    
  441a26:	adc    eax,DWORD PTR [edi+0x2d]
  441a29:	xlat   BYTE PTR ds:[ebx]
  441a2a:	mov    ebx,ebx
  441a2c:	jnp    0x441a09
  441a2e:	dec    eax
  441a2f:	xchg   esp,eax
  441a30:	add    eax,0xca100ede
  441a35:	mov    cl,0x5a
  441a37:	add    BYTE PTR [ecx+ebx*8-0x75bb5963],ch
  441a3e:	test   al,0xf4
  441a40:	and    eax,DWORD PTR [edi+0x7ffd90b3]
  441a46:	nop
  441a47:	(bad)  
  441a48:	test   eax,0x5149fa64
  441a4d:	(bad)  
  441a4e:	dec    ecx
  441a4f:	jb     0x441aa4
  441a51:	sar    bh,1
  441a53:	mov    BYTE PTR [edi],bl
  441a55:	into   
  441a56:	(bad)  
  441a57:	and    DWORD PTR [esi],ecx
  441a59:	mov    dl,0xa8
  441a5b:	jne    0x441a34
  441a5d:	sahf   
  441a5e:	inc    esi
  441a5f:	sub    BYTE PTR cs:[eax],ah
  441a62:	mov    ch,0xe5
  441a64:	repz mov WORD PTR [esi+0x6a02c94c],ss
  441a6b:	mov    ah,0x37
  441a6d:	add    DWORD PTR [esi],ecx
  441a6f:	pushf  
  441a70:	push   eax
  441a71:	push   0xf7800c8f
  441a76:	mov    esi,0xd4ab7fad
  441a7b:	push   eax
  441a7c:	dec    esi
  441a7d:	call   0xd5291c49
  441a82:	das    
  441a83:	aaa    
  441a84:	xchg   esi,eax
  441a85:	mov    dh,0xd0
  441a87:	dec    ebx
  441a88:	xchg   edx,eax
  441a89:	lods   al,BYTE PTR ds:[esi]
  441a8a:	inc    edx
  441a8b:	fdivr  st(2),st
  441a8d:	imul   esp,DWORD PTR [edi-0x5a],0xffffff87
  441a91:	sub    DWORD PTR [ebp-0x449f1835],0xffffffb5
  441a98:	pop    es
  441a99:	ins    DWORD PTR es:[edi],dx
  441a9a:	sbb    DWORD PTR [eax+edi*4-0x30],0x4a
  441a9f:	shl    DWORD PTR [esi],1
  441aa1:	mov    eax,ds:0x28c56f26
  441aa6:	inc    ebx
  441aa7:	sub    edx,edx
  441aa9:	addr16 jae 0x441ac5
  441aac:	stos   BYTE PTR es:[edi],al
  441aad:	jns    0x441a74
  441aaf:	adc    ah,BYTE PTR [ebx]
  441ab1:	lahf   
  441ab2:	inc    ebp
  441ab3:	popa   
  441ab4:	xor    esi,DWORD PTR [ebx]
  441ab6:	mov    eax,0x6685b4f7
  441abb:	dec    esp
  441abc:	lods   al,BYTE PTR ds:[esi]
  441abd:	and    ah,BYTE PTR [ecx]
  441abf:	jb     0x441a98
  441ac1:	pop    ebp
  441ac2:	or     al,0xb3
  441ac4:	(bad)  
  441ac5:	mov    edi,0x71f45a76
  441aca:	and    al,0xde
  441acc:	std    
  441acd:	sub    bl,BYTE PTR [ecx+ebp*4-0x20]
  441ad1:	pushf  
  441ad2:	jo     0x441a73
  441ad4:	arpl   WORD PTR [edi+ecx*8],di
  441ad7:	outs   dx,DWORD PTR ds:[esi]
  441ad8:	xchg   ebp,eax
  441ad9:	inc    ecx
  441ada:	jbe    0x441aee
  441adc:	outs   dx,DWORD PTR ds:[esi]
  441add:	dec    esp
  441ade:	jmp    0x441aa0
  441ae0:	aaa    
  441ae1:	jecxz  0x441a83
  441ae3:	ins    DWORD PTR es:[edi],dx
  441ae4:	cdq    
  441ae5:	pushf  
  441ae6:	push   ecx
  441ae7:	or     al,0x50
  441ae9:	(bad)  
  441aea:	xchg   ebx,eax
  441aeb:	(bad)  
  441aed:	inc    edx
  441aee:	pop    ebx
  441aef:	loope  0x441b3d
  441af1:	xor    ebx,DWORD PTR [ebp+0x57a2617c]
  441af7:	loopne 0x441aa3
  441af9:	ins    BYTE PTR es:[edi],dx
  441afa:	in     al,0x7c
  441afc:	repnz ins DWORD PTR es:[edi],dx
  441afe:	mov    al,0x34
  441b00:	stc    
  441b01:	inc    ecx
  441b02:	inc    ecx
  441b03:	test   eax,0x82c39c11
  441b08:	mov    al,0xbb
  441b0a:	dec    edi
  441b0b:	pop    ebp
  441b0c:	leave  
  441b0d:	mov    ecx,0x602617e4
  441b12:	out    dx,al
  441b13:	push   edi
  441b14:	pop    eax
  441b15:	aam    0x5e
  441b17:	jbe    0x441b30
  441b19:	mov    dh,BYTE PTR [ecx-0x51]
  441b1c:	aad    0x50
  441b1e:	dec    edi
  441b1f:	stos   BYTE PTR es:[edi],al
  441b20:	enter  0xa88e,0xf
  441b24:	ja     0x441b48
  441b26:	loope  0x441b67
  441b28:	cmp    DWORD PTR [edi-0x348ef055],ebx
  441b2e:	(bad)  
  441b30:	js     0x441ad4
  441b32:	adc    DWORD PTR [ebp+ebp*1+0x18e51ebe],esp
  441b39:	jp     0x441b38
  441b3b:	jle    0x441b57
  441b3d:	mov    al,0x84
  441b3f:	or     eax,0xff1c48af
  441b44:	jne    0x441b6e
  441b46:	or     eax,0x8faefee
  441b4b:	shr    BYTE PTR [edi+0x5a],cl
  441b4e:	add    BYTE PTR [esi+0x18db7ca],bh
  441b54:	jnp    0x441b2f
  441b56:	repnz fstp QWORD PTR [edi]
  441b59:	in     al,dx
  441b5a:	xor    BYTE PTR [esi],dh
  441b5c:	std    
  441b5d:	cmp    DWORD PTR [edi],esp
  441b5f:	rcr    BYTE PTR [eax-0x72],cl
  441b62:	adc    bh,BYTE PTR [edi-0x23bc2e4]
  441b68:	jo     0x441be1
  441b6a:	sbb    eax,0x54ed7425
  441b6f:	(bad)  
  441b70:	in     al,0xd3
  441b72:	pop    ds
  441b73:	call   0xf579:0x74a67533
  441b7a:	and    bl,dl
  441b7c:	and    dl,0xe0
  441b7f:	inc    eax
  441b80:	xchg   esi,eax
  441b81:	xor    al,dl
  441b83:	mov    al,al
  441b85:	cmp    ebx,0xb
  441b88:	inc    ecx
  441b89:	fsub   DWORD PTR [ecx-0x7f]
  441b8c:	inc    eax
  441b8d:	inc    edx
  441b8e:	push   ss
  441b8f:	lahf   
  441b90:	pop    ss
  441b91:	add    edi,ebx
  441b93:	cli    
  441b94:	push   ebx
  441b95:	jg     0x441bff
  441b97:	and    al,0xaa
  441b99:	ja     0x441bb6
  441b9b:	je     0x441bff
  441b9d:	adc    DWORD PTR [eax+0x19],0xffffffa7
  441ba1:	aad    0x88
  441ba3:	sar    DWORD PTR [eax-0x7dfb28c8],1
  441ba9:	mov    cs,WORD PTR [edx-0x72]
  441bac:	or     eax,0xc941e385
  441bb1:	jnp    0x441c11
  441bb3:	jbe    0x441c01
  441bb5:	sub    eax,DWORD PTR [eax+0xe3305c3]
  441bbb:	xchg   DWORD PTR [esi-0x1074123b],esp
  441bc1:	inc    esp
  441bc2:	push   0x88eb699b
  441bc7:	retf   
  441bc8:	or     BYTE PTR [esp+esi*1+0x2be6bbed],bl
  441bcf:	push   edi
  441bd0:	stos   BYTE PTR es:[edi],al
  441bd1:	clc    
  441bd2:	loop   0x441b8c
  441bd4:	(bad)
  441bd7:	push   cs
  441bd8:	mov    ch,0x36
  441bda:	jl     0x441bea
  441bdc:	icebp  
  441bdd:	add    bl,BYTE PTR [edi+0x4933a41f]
  441be3:	mov    bl,0xa
  441be5:	mov    ah,0x45
  441be7:	call   0x8eca:0x4b30a400
  441bee:	mov    ds:0x625eb2ac,al
  441bf3:	ins    DWORD PTR es:[edi],dx
  441bf4:	add    BYTE PTR [ebx+0x33dfa590],ch
  441bfa:	mov    eax,0xc230dfa7
  441bff:	mov    DWORD PTR [eax-0x80],edi
  441c02:	and    eax,0x1374bdb3
  441c07:	jns    0x441bd7
  441c09:	adc    eax,0xfaf47aae
  441c0e:	sar    DWORD PTR [edx],1
  441c10:	dec    ebp
  441c11:	dec    eax
  441c12:	and    eax,0xeee7ef92
  441c17:	mov    al,0xcd
  441c19:	mov    ch,BYTE PTR [ebx+0x48]
  441c1c:	add    DWORD PTR [eax+0x1dd25601],ebx
  441c22:	inc    edx
  441c23:	adc    eax,0xc090b577
  441c28:	js     0x441c4d
  441c2a:	cwde   
  441c2b:	mov    bl,BYTE PTR [ecx+0x5817dec3]
  441c31:	pop    esi
  441c32:	xor    DWORD PTR [bx+di-0x57bc],ebp
  441c37:	loope  0x441cb7
  441c39:	out    0xfa,al
  441c3b:	pop    ecx
  441c3c:	mov    dl,0xdd
  441c3e:	les    esi,FWORD PTR [edi]
  441c40:	push   ss
  441c41:	rcr    DWORD PTR [esi+0x64],cl
  441c44:	rcr    BYTE PTR [eax+0x4dfc0499],1
  441c4a:	int3   
  441c4b:	jmp    0x441c7d
  441c4d:	mov    al,0x56
  441c4f:	adc    eax,0xb650b53b
  441c54:	add    ebx,DWORD PTR [esi+0x7f5988db]
  441c5a:	push   ecx
  441c5b:	stos   BYTE PTR es:[edi],al
  441c5c:	clc    
  441c5d:	jae    0x441c97
  441c5f:	push   ecx
  441c60:	retf   
  441c61:	xchg   BYTE PTR [ebx+0x7583341e],bl
  441c67:	jnp    0x441c07
  441c69:	xor    ecx,DWORD PTR [ebx+ebx*8-0x74bb48ee]
  441c70:	sbb    al,bh
  441c72:	out    0xd8,eax
  441c74:	das    
  441c75:	push   ebx
  441c76:	adc    bl,BYTE PTR [esi-0x3a]
  441c79:	in     eax,dx
  441c7a:	pop    ds
  441c7b:	xor    al,0x79
  441c7d:	dec    edi
  441c7e:	dec    esi
  441c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c80:	(bad)  
  441c81:	(bad)  
  441c82:	lahf   
  441c83:	retf   0x4b62
  441c86:	outs   dx,BYTE PTR ds:[esi]
  441c87:	mov    ecx,0xcac0768b
  441c8c:	xchg   BYTE PTR [edi-0x4ba91492],ch
  441c92:	fsub   st(5),st
  441c94:	cld    
  441c95:	test   al,0x40
  441c97:	ret    0x971c
  441c9a:	jge    0x441cb5
  441c9c:	and    al,BYTE PTR [edi+0x6f]
  441c9f:	xor    DWORD PTR [ecx-0x1],ebx
  441ca2:	jmp    0x48f5:0x23a2f342
  441ca9:	mov    bh,0x68
  441cab:	push   ebp
  441cac:	inc    edi
  441cad:	mov    ecx,esp
  441caf:	nop
  441cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441cb1:	shr    ebx,0x19
  441cb4:	in     eax,0xe6
  441cb6:	mov    esi,0xa42a6293
  441cbb:	or     eax,0xd019fba6
  441cc0:	push   eax
  441cc1:	push   esi
  441cc2:	inc    esp
  441cc3:	les    esp,FWORD PTR [ecx]
  441cc5:	cld    
  441cc6:	sub    al,0xa4
  441cc8:	jmp    0xffdc6c5
  441ccd:	jns    0x441cd8
  441ccf:	sub    al,0x3c
  441cd1:	xchg   ebx,eax
  441cd2:	mov    al,ds:0xf1a2d280
  441cd7:	inc    esi
  441cd8:	je     0x441d1e
  441cda:	(bad)  
  441cdb:	fdiv   DWORD PTR [edx+ebx*1]
  441cde:	pop    ebp
  441cdf:	(bad)  
  441ce0:	mov    ds:0x55d3d255,eax
  441ce5:	dec    esi
  441ce6:	add    ebx,DWORD PTR [esi-0x54070937]
  441cec:	push   ebx
  441ced:	jae    0x441c84
  441cef:	mov    al,0xe4
  441cf1:	xchg   esi,eax
  441cf2:	out    0x35,al
  441cf4:	push   edx
  441cf5:	call   0x2612a2b0
  441cfa:	les    edx,FWORD PTR [esi+ecx*1]
  441cfd:	call   0x53f7a245
  441d02:	in     al,dx
  441d03:	xor    esi,DWORD PTR [eax]
  441d05:	push   ebx
  441d06:	mov    edx,ebp
  441d08:	std    
  441d09:	push   eax
  441d0a:	out    dx,al
  441d0b:	in     al,dx
  441d0c:	ss jne 0x441cc1
  441d0f:	pop    ds
  441d10:	push   ebp
  441d11:	cmp    al,0x13
  441d13:	mov    ebp,0x80105753
  441d18:	pop    edx
  441d19:	add    al,0xb8
  441d1b:	push   0xffffffb6
  441d1d:	(bad)  
  441d1e:	mov    al,0xcd
  441d20:	dec    ebx
  441d21:	scas   al,BYTE PTR es:[edi]
  441d22:	icebp  
  441d23:	adc    DWORD PTR [ecx],ebx
  441d25:	mov    esi,DWORD PTR [edi]
  441d27:	call   0xb0fb:0xf52b4334
  441d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441d2f:	and    dl,BYTE PTR [ebp*2+0x85441d2]
  441d36:	push   cs
  441d37:	lods   al,BYTE PTR ds:[esi]
  441d38:	sbb    al,0x2c
  441d3a:	mov    ebp,esi
  441d3c:	dec    esp
  441d3d:	cmp    DWORD PTR [eax+0x75],edi
  441d40:	mov    edi,0x5c721cc5
  441d45:	push   ebp
  441d46:	out    dx,al
  441d47:	call   0xa9b34ab1
  441d4c:	inc    ecx
  441d4d:	mov    esi,0x760153d3
  441d52:	or     al,0x2
  441d54:	jmp    0x38ce:0xcec2e3e0
  441d5b:	jnp    0x441ce7
  441d5d:	or     al,0x3b
  441d5f:	aam    0x16
  441d61:	jmp    0x76ac1e3
  441d66:	ins    DWORD PTR es:[edi],dx
  441d67:	arpl   ax,dx
  441d69:	in     eax,0x9f
  441d6b:	cmp    BYTE PTR [eax-0x72c376e6],ch
  441d71:	cmc    
  441d72:	and    BYTE PTR fs:[esi+edi*1],ah
  441d76:	dec    edi
  441d77:	aas    
  441d78:	inc    edx
  441d79:	aam    0xaa
  441d7b:	test   al,0x10
  441d7d:	ret    
  441d7e:	or     al,0xc9
  441d80:	mov    BYTE PTR [ebx],cl
  441d82:	mov    ebp,0x97377e7a
  441d87:	dec    ecx
  441d88:	inc    edi
  441d89:	fs dec esi
  441d8b:	clc    
  441d8c:	ins    BYTE PTR es:[edi],dx
  441d8d:	clc    
  441d8e:	in     al,dx
  441d8f:	lods   eax,DWORD PTR ds:[esi]
  441d90:	or     eax,0x5f56d030
  441d95:	mov    ch,0x7c
  441d97:	sbb    ch,BYTE PTR [edi-0x3f]
  441d9a:	int3   
  441d9b:	shl    BYTE PTR [eax],cl
  441d9d:	cmp    dh,BYTE PTR [ecx+edx*4+0x55]
  441da1:	fistp  DWORD PTR [edi]
  441da3:	push   ebx
  441da4:	add    BYTE PTR [edx-0x12],al
  441da7:	outs   dx,BYTE PTR ds:[esi]
  441da8:	fs inc eax
  441daa:	mov    ds:0xf90c232c,eax
  441daf:	cmp    DWORD PTR [edi+0x160676b4],ebp
  441db5:	mov    al,ds:0x25ab8558
  441dba:	(bad)  
  441dbc:	jmp    0x441d3e
  441dbe:	(bad)  
  441dbf:	sub    DWORD PTR [edx-0x198f261e],edi
  441dc5:	inc    edx
  441dc6:	pop    ebx
  441dc7:	jnp    0x441d5b
  441dc9:	aam    0x5
  441dcb:	(bad)  [esi+0xd]
  441dce:	mov    bh,0xe4
  441dd0:	clc    
  441dd1:	lahf   
  441dd2:	and    al,0x43
  441dd4:	xchg   ebp,eax
  441dd5:	or     esp,esp
  441dd7:	xchg   ebx,eax
  441dd8:	xchg   ebx,eax
  441dd9:	call   DWORD PTR [esi+0x13e9bcd3]
  441ddf:	push   ecx
  441de0:	pop    es
  441de1:	sub    BYTE PTR [eax+0x1b],ch
  441de4:	jb     0x441e10
  441de6:	lock add eax,0xa41d24d1
  441dec:	nop
  441ded:	mov    WORD PTR cs:[edi+0x56adbf56],es
  441df4:	enter  0xad9c,0x73
  441df8:	(bad)  
  441df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441dfa:	add    esi,esi
  441dfc:	fimul  DWORD PTR [eax+0x68ef5b10]
  441e02:	inc    esi
  441e03:	mov    ds:0x78d1fdb2,eax
  441e08:	pop    edx
  441e09:	fisub  WORD PTR [ebx]
  441e0b:	stos   BYTE PTR es:[edi],al
  441e0c:	je     0x441e14
  441e0e:	neg    BYTE PTR ds:0x645ce5de
  441e14:	fwait
  441e15:	xlat   BYTE PTR ds:[ebx]
  441e16:	sbb    al,0x7d
  441e18:	jp     0x441e3d
  441e1a:	xor    dl,BYTE PTR [ebx]
  441e1c:	retf   
  441e1d:	imul   edi,DWORD PTR [eax+0x240cf8c8],0xffffffb6
  441e24:	push   es
  441e25:	adc    ah,BYTE PTR [ebx+0x139dd87c]
  441e2b:	stos   BYTE PTR es:[edi],al
  441e2c:	xor    esi,DWORD PTR [ecx]
  441e2e:	fs nop
  441e30:	lods   al,BYTE PTR ds:[esi]
  441e31:	fcom   QWORD PTR [ebp+0x27]
  441e34:	sbb    ebp,DWORD PTR [esi+0x32]
  441e37:	cmp    ch,0x1b
  441e3a:	and    BYTE PTR [edx+ecx*4+0x25],al
  441e3e:	adc    dh,dl
  441e40:	in     al,0x3c
  441e42:	sub    bh,ah
  441e44:	lods   al,BYTE PTR ds:[esi]
  441e45:	add    eax,0x4fb82dbf
  441e4a:	cmp    eax,0xac1e4c3b
  441e4f:	add    esi,DWORD PTR [edi+0x366cf1d]
  441e55:	rcl    DWORD PTR [edi],0xa0
  441e58:	shl    DWORD PTR [edi-0x23],1
  441e5b:	fiadd  WORD PTR [eax+0x76]
  441e5e:	sbb    ch,BYTE PTR [edi-0x5d34e0c4]
  441e64:	fdivr  DWORD PTR [ecx+0x60a7b4b6]
  441e6a:	push   esi
  441e6b:	push   es
  441e6c:	adc    al,0xff
  441e6e:	mov    esp,ebx
  441e70:	jp     0x441ed8
  441e72:	sbb    al,0x73
  441e74:	outs   dx,DWORD PTR ds:[esi]
  441e75:	push   eax
  441e76:	fisub  DWORD PTR [edx+0x6164b422]
  441e7c:	pop    edx
  441e7d:	pop    edx
  441e7e:	scas   eax,DWORD PTR es:[edi]
  441e7f:	xlat   BYTE PTR ds:[ebx]
  441e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441e81:	and    DWORD PTR [edx+0x2b],edx
  441e84:	ror    BYTE PTR [edi-0xb89504d],cl
  441e8a:	adc    bl,BYTE PTR [edi+0x20]
  441e8d:	sahf   
  441e8e:	cwde   
  441e8f:	dec    esp
  441e90:	xchg   ebp,eax
  441e91:	adc    al,0x98
  441e93:	repnz sub eax,0xf6db2de
  441e99:	pop    edx
  441e9a:	sub    cl,BYTE PTR [ecx-0x26]
  441e9d:	stos   DWORD PTR es:[edi],eax
  441e9e:	inc    edi
  441e9f:	add    al,0xa0
  441ea1:	and    al,0x40
  441ea3:	not    dl
  441ea5:	stc    
  441ea6:	cwde   
  441ea7:	adc    al,0xc9
  441ea9:	mov    al,ds:0xff7e97c6
  441eae:	nop
  441eaf:	test   BYTE PTR [edx+0x79],dh
  441eb2:	popa   
  441eb3:	xlat   BYTE PTR ds:[ebx]
  441eb4:	sub    al,0x23
  441eb6:	loop   0x441f2d
  441eb8:	mov    edi,0xbbaccf58
  441ebd:	scas   eax,DWORD PTR es:[edi]
  441ebe:	jge    0x441e90
  441ec0:	(bad)  
  441ec1:	sub    eax,0xa4eb1396
  441ec6:	push   ebp
  441ec7:	mov    bl,0xa2
  441ec9:	jmp    0x67ef5190
  441ece:	or     eax,0xb7229732
  441ed3:	data16 jmp 0x441e65
  441ed6:	sbb    DWORD PTR ss:[ebx],0xffffff8c
  441eda:	cs add al,0xac
  441edd:	enter  0xa8fe,0xbc
  441ee1:	fwait
  441ee2:	pop    es
  441ee3:	push   esi
  441ee4:	xor    al,0x1b
  441ee6:	lock mov dl,BYTE PTR [eax]
  441ee9:	loop   0x441e77
  441eeb:	add    al,0x7f
  441eed:	xchg   BYTE PTR [edx-0x4b],ch
  441ef0:	sbb    esi,esi
  441ef2:	or     esi,DWORD PTR [edx]
  441ef4:	je     0x441f4e
  441ef6:	fcomp  st(1)
  441ef8:	retf   
  441ef9:	sti    
  441efa:	scas   al,BYTE PTR es:[edi]
  441efb:	adc    bh,BYTE PTR [ebp-0x26]
  441efe:	sbb    ah,BYTE PTR [ecx+edi*4-0x59bf3613]
  441f05:	(bad)  
  441f06:	jne    0x441e8d
  441f08:	cwde   
  441f09:	add    eax,edx
  441f0b:	xchg   edi,eax
  441f0c:	mov    BYTE PTR ds:0xc0640840,ah
  441f12:	mov    ds:0x26269aa5,al
  441f17:	or     ecx,ebp
  441f19:	pop    es
  441f1a:	mov    ecx,0xe1bed04f
  441f1f:	add    al,0x5
  441f21:	jp     0x441f3c
  441f23:	push   DWORD PTR [ebx]
  441f25:	sti    
  441f26:	icebp  
  441f27:	pop    eax
  441f28:	pop    edi
  441f29:	nop
  441f2a:	mov    ebp,0xdc6cee1a
  441f2f:	add    eax,0x134316bc
  441f34:	fs jge 0x441f02
  441f37:	daa    
  441f38:	in     eax,dx
  441f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f3a:	add    DWORD PTR [eax+0x3a7741c5],eax
  441f40:	push   ebp
  441f41:	mov    dh,0xe2
  441f43:	stos   DWORD PTR es:[edi],eax
  441f44:	fild   WORD PTR [ecx+0x15]
  441f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441f48:	(bad)  
  441f4a:	stos   DWORD PTR es:[edi],eax
  441f4b:	sbb    eax,0xc5e2faa
  441f50:	inc    ecx
  441f51:	call   DWORD PTR [edx-0x4ef7aed4]
  441f57:	or     ebp,edi
  441f59:	and    edi,ebx
  441f5b:	ds and al,0xf9
  441f5e:	mov    BYTE PTR [esi],0x64
  441f61:	jge    0x441f30
  441f63:	aad    0x7b
  441f65:	mov    ecx,DWORD PTR [edi+0x641c8216]
  441f6b:	jecxz  0x441f09
  441f6d:	push   0x68165704
  441f72:	sub    BYTE PTR [ecx],dh
  441f74:	dec    ebx
  441f75:	add    DWORD PTR [esi-0x7eb74557],ebx
  441f7b:	xor    eax,0x473a68bb
  441f80:	and    esi,edi
  441f82:	cld    
  441f83:	ins    DWORD PTR es:[edi],dx
  441f84:	rol    DWORD PTR [ebp-0x239ba51d],1
  441f8a:	fsub   st(1),st
  441f8c:	and    DWORD PTR [edi],edi
  441f8e:	int3   
  441f8f:	out    dx,al
  441f90:	dec    ecx
  441f91:	xor    eax,0x34392876
  441f96:	xchg   edx,eax
  441f97:	loop   0x441fe5
  441f99:	and    al,0xa0
  441f9b:	xchg   edi,eax
  441f9c:	mov    eax,ds:0x989c6a74
  441fa1:	and    al,0x5c
  441fa3:	icebp  
  441fa4:	or     BYTE PTR [ecx+0x141dbb70],cl
  441faa:	dec    edi
  441fab:	call   0xa96c:0x56c8f1d
  441fb2:	test   al,0xa
  441fb4:	or     ah,BYTE PTR [esi+ebx*4-0x5110992f]
  441fbb:	(bad)  
  441fbc:	hlt    
  441fbd:	fdivp  st(2),st
  441fbf:	mov    cl,0x62
  441fc1:	xor    BYTE PTR [ebx+eiz*8-0x5f],dl
  441fc5:	cld    
  441fc6:	jg     0x441f8e
  441fc8:	inc    ecx
  441fc9:	dec    esi
  441fca:	push   ecx
  441fcb:	cld    
  441fcc:	mov    bh,0x4c
  441fce:	sub    al,0x83
  441fd0:	jns    0x441f6a
  441fd2:	xchg   edi,eax
  441fd3:	mov    esi,0xf055b930
  441fd8:	pop    ss
  441fd9:	sub    ebx,DWORD PTR [ebx+0x39]
  441fdc:	push   edi
  441fdd:	hlt    
  441fde:	aad    0xd4
  441fe0:	lahf   
  441fe1:	mov    ecx,DWORD PTR es:[esi]
  441fe4:	or     ah,BYTE PTR [edx]
  441fe6:	loope  0x44202d
  441fe8:	dec    ecx
  441fe9:	(bad)  
  441fea:	xchg   edi,eax
  441feb:	clc    
  441fec:	xchg   DWORD PTR [eax+0x6c],ebx
  441fef:	adc    BYTE PTR [ebp+eiz*1-0x62],dh
  441ff3:	je     0x441fa6
  441ff5:	out    0x5a,al
  441ff7:	inc    ecx
  441ff8:	mov    DWORD PTR [edx+0x6f],ebp
  441ffb:	hlt    
  441ffc:	(bad)  
  441ffe:	add    dl,bl
  442000:	aad    0xf8
  442002:	sets   ch
  442005:	fwait
  442006:	sbb    bl,BYTE PTR [eax+0x1f]
  442009:	cld    
  44200a:	ss xchg esp,eax
  44200c:	xor    dl,BYTE PTR [edx+eax*2]
  44200f:	jo     0x441fd4
  442011:	cmc    
  442012:	mov    DWORD PTR [esi-0x66aac5e2],esi
  442018:	adc    DWORD PTR [ecx+0x20],ecx
  44201b:	popf   
  44201c:	fisttp QWORD PTR [edx+ecx*2]
  44201f:	add    eax,0xc20216a5
  442024:	sahf   
  442025:	stos   BYTE PTR es:[edi],al
  442026:	dec    esi
  442027:	mov    ds,ebp
  442029:	(bad)  
  44202a:	in     al,dx
  44202b:	jecxz  0x442051
  44202d:	(bad)  
  44202e:	fdivr  QWORD PTR [ecx+0x31]
  442031:	mul    dl
  442033:	dec    edx
  442034:	inc    ebp
  442035:	or     DWORD PTR [edx+0x3331a06d],eax
  44203b:	nop
  44203c:	pop    esi
  44203d:	mov    ebx,0xede5a43b
  442042:	jl     0x4420b5
  442044:	cmp    dh,BYTE PTR [ebp+eiz*1-0x1199842b]
  44204b:	dec    esp
  44204c:	mov    ds:0x7cbd76d9,eax
  442051:	mov    bh,0x75
  442053:	repnz arpl WORD PTR [edi+0x18],cx
  442057:	xchg   DWORD PTR ds:0x54e7f7e2,ebx
  44205d:	jae    0x441fe2
  44205f:	mov    al,ds:0xac0b65f0
  442064:	mov    dl,0x9
  442066:	and    eax,0x14a6779a
  44206b:	scas   al,BYTE PTR es:[edi]
  44206c:	mov    cl,0x4f
  44206e:	loop   0x442009
  442070:	stos   BYTE PTR es:[edi],al
  442071:	nop
  442072:	add    DWORD PTR cs:[ebp+0x59],edx
  442076:	add    eax,0xffffffd4
  442079:	fisub  WORD PTR [edx]
  44207b:	ja     0x44204c
  44207d:	push   ss
  44207e:	out    0x52,eax
  442080:	dec    edx
  442081:	call   0x63b40e5b
  442086:	xor    eax,0x5359fea0
  44208b:	fldl2e 
  44208d:	mov    ?,WORD PTR [edx+0x7613530d]
  442093:	scas   al,BYTE PTR es:[edi]
  442094:	lea    ecx,[esi-0x46]
  442097:	jb     0x4420c0
  442099:	jnp    0x442046
  44209b:	pop    eax
  44209c:	and    edx,DWORD PTR [esi+0x72]
  44209f:	mov    ah,al
  4420a1:	inc    esi
  4420a2:	mov    al,ds:0x30528ac0
  4420a7:	stos   BYTE PTR es:[edi],al
  4420a8:	cwde   
  4420a9:	out    0xc4,al
  4420ab:	mov    al,ds:0x4e0d2a5f
  4420b0:	inc    DWORD PTR [esi+0x6a]
  4420b3:	daa    
  4420b4:	sbb    al,0x15
  4420b6:	lock in al,0x68
  4420b9:	xchg   esp,eax
  4420ba:	inc    esp
  4420bb:	daa    
  4420bc:	xor    eax,0x78a6f450
  4420c1:	jno    0x442118
  4420c3:	pop    ecx
  4420c4:	jne    0x4420bc
  4420c6:	stc    
  4420c7:	out    0xcf,al
  4420c9:	ror    DWORD PTR ds:0x7b2280a5,1
  4420cf:	mov    gs,WORD PTR [edx+0x26]
  4420d2:	mov    esi,0x8b793c57
  4420d7:	xchg   ebp,eax
  4420d8:	das    
  4420d9:	lods   eax,DWORD PTR ds:[esi]
  4420da:	ret    
  4420db:	test   DWORD PTR [esi-0x589e03a0],0x5ceeaee9
  4420e5:	into   
  4420e6:	and    DWORD PTR [esi+0x794be55d],esi
  4420ec:	pop    eax
  4420ed:	xchg   ebp,eax
  4420ee:	sbb    al,0x76
  4420f0:	das    
  4420f1:	inc    eax
  4420f2:	cmp    eax,0xb64f8b37
  4420f7:	jb     0x442137
  4420f9:	dec    edi
  4420fa:	push   ecx
  4420fb:	add    dl,0x45
  4420fe:	adc    al,0x3e
  442100:	xor    BYTE PTR [ebx-0x69be5db1],bl
  442106:	or     DWORD PTR [eax+0x7f],edx
  442109:	retf   
  44210a:	mov    ds:0x79a45c0b,eax
  44210f:	dec    ecx
  442110:	dec    edx
  442111:	inc    edx
  442112:	mov    ebp,0x560200d2
  442117:	test   eax,0xd44a032
  44211c:	aam    0xeb
  44211e:	add    DWORD PTR [esi+0x29],edx
  442121:	push   eax
  442122:	pop    eax
  442123:	lea    ebp,ds:0x90ca160c
  442129:	push   ss
  44212a:	push   0xad587fa3
  44212f:	test   bh,bl
  442131:	clc    
  442132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442133:	cli    
  442134:	fstp   QWORD PTR [ecx-0x61]
  442137:	dec    edi
  442138:	add    al,0x79
  44213a:	inc    esp
  44213b:	mov    ebx,DWORD PTR [edx]
  44213d:	cmp    eax,0xba5849e6
  442142:	or     al,0xf4
  442144:	jno    0x442126
  442146:	repnz test eax,0x814f4a28
  44214c:	in     al,dx
  44214d:	pop    es
  44214e:	rep lods eax,DWORD PTR ds:[esi]
  442150:	je     0x442148
  442152:	inc    ebx
  442153:	push   es
  442154:	in     al,0xd9
  442156:	(bad)  [edx-0x24d0a236]
  44215c:	imul   eax,DWORD PTR [edi+ebx*1],0x974028e
  442163:	adc    dl,BYTE PTR [eax]
  442165:	fs xchg dh,bh
  442168:	out    0x29,eax
  44216a:	dec    ebp
  44216b:	call   0x4bc20646
  442170:	jb     0x4421e1
  442172:	xchg   ebx,eax
  442173:	fld    TBYTE PTR [edx+edi*4+0x6dadb4b4]
  44217a:	mov    al,0x24
  44217c:	mov    esp,ebp
  44217e:	mov    cl,0xc2
  442180:	mov    ss,eax
  442182:	push   ebx
  442183:	scas   eax,DWORD PTR es:[edi]
  442184:	jno    0x44219f
  442186:	xor    al,0xd5
  442188:	ins    DWORD PTR es:[edi],dx
  442189:	add    DWORD PTR [eax-0x1f],eax
  44218c:	sbb    eax,0xfacb03fb
  442191:	nop
  442192:	in     eax,dx
  442193:	and    BYTE PTR [ebx],bh
  442195:	pop    ss
  442196:	cli    
  442197:	ins    DWORD PTR es:[edi],dx
  442198:	in     al,0x53
  44219a:	(bad)  
  44219b:	stc    
  44219c:	add    edi,0x9194f592
  4421a2:	jns    0x4421e9
  4421a4:	dec    edx
  4421a5:	or     ebx,DWORD PTR [eax]
  4421a7:	or     ebp,DWORD PTR [ecx+eax*8+0x32]
  4421ab:	dec    edi
  4421ac:	das    
  4421ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4421ae:	in     eax,dx
  4421af:	adc    eax,0x3a199dce
  4421b4:	inc    eax
  4421b5:	xlat   BYTE PTR ds:[ebx]
  4421b6:	ffreep st(5)
  4421b8:	pop    esi
  4421b9:	sub    al,0x5f
  4421bb:	mov    ds:0xeb7b3c0c,al
  4421c0:	mov    ?,esp
  4421c2:	inc    edx
  4421c3:	sbb    ah,BYTE PTR [ecx]
  4421c5:	lahf   
  4421c6:	cli    
  4421c7:	sbb    esp,DWORD PTR [edx+eax*2-0x19]
  4421cb:	js     0x44215d
  4421cd:	arpl   dx,si
  4421cf:	add    dl,bl
  4421d1:	add    eax,0xc4bb7c62
  4421d6:	inc    ebp
  4421d7:	arpl   ax,bx
  4421d9:	add    eax,0x4f41f132
  4421de:	dec    ebp
  4421df:	inc    BYTE PTR [edi-0x747ccdd7]
  4421e5:	retf   
  4421e6:	shl    DWORD PTR ds:0x7f658b2a,0xc3
  4421ed:	and    eax,0x453b71e
  4421f2:	cmp    BYTE PTR [eax],bl
  4421f4:	xchg   ebp,eax
  4421f5:	mov    edx,0x2c89aac5
  4421fa:	loope  0x4421ad
  4421fc:	xor    al,0xe1
  4421fe:	xor    ecx,DWORD PTR ds:0x99d84a6a
  442204:	das    
  442205:	shr    DWORD PTR [ebp+0x23],1
  442208:	cmp    dh,al
  44220a:	jp     0x44220a
  44220c:	lock dec DWORD PTR [esi]
  44220f:	add    eax,0x8903bdf3
  442214:	loope  0x442231
  442216:	(bad)  
  442217:	pop    esp
  442218:	or     BYTE PTR [esi+0x59cdda52],0xc6
  44221f:	pop    edx
  442220:	sub    BYTE PTR [ecx+ebx*2-0x1e],0x45
  442225:	pusha  
  442226:	loope  0x4421cd
  442228:	or     eax,0x58ae7d8b
  44222d:	nop
  44222e:	bound  esi,QWORD PTR [edi]
  442230:	shr    DWORD PTR [edx-0x7094696],0xe9
  442237:	dec    ecx
  442238:	mov    ah,0xc9
  44223a:	aas    
  44223b:	inc    edi
  44223c:	imul   edi,DWORD PTR [ecx],0xffffffb7
  44223f:	jle    0x4422b4
  442241:	not    cl
  442243:	outs   dx,BYTE PTR ds:[esi]
  442244:	mov    esp,0x37968016
  442249:	aas    
  44224a:	test   al,0xb0
  44224c:	xor    DWORD PTR [ebp-0xb],ebp
  44224f:	inc    esi
  442250:	lods   al,BYTE PTR ds:[esi]
  442251:	mov    al,0xae
  442253:	adc    BYTE PTR [edi-0x15],bh
  442256:	cwde   
  442257:	addr16 arpl di,sp
  44225a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44225b:	(bad)  
  44225c:	stos   BYTE PTR es:[edi],al
  44225d:	and    eax,0xb5056032
  442262:	scas   al,BYTE PTR es:[edi]
  442263:	imul   ebp,DWORD PTR [edi-0x2e],0x35
  442267:	cdq    
  442268:	mov    esp,0x7454123b
  44226d:	xor    BYTE PTR [ebp+0x5e59b7aa],0xed
  442274:	rcr    BYTE PTR [edx+0x40],1
  442277:	imul   esp,DWORD PTR gs:[ebx-0x6f],0xffffffb1
  44227c:	xchg   edx,eax
  44227d:	lea    ecx,[edx-0x35c78a52]
  442283:	shr    DWORD PTR [ebp-0x6f852125],1
  442289:	cmp    eax,0xb5bd02f0
  44228e:	lods   eax,DWORD PTR es:[esi]
  442290:	gs stos BYTE PTR es:[edi],al
  442292:	in     al,dx
  442293:	pop    eax
  442294:	adc    BYTE PTR [edx+0x18],0xd9
  442298:	into   
  442299:	push   esp
  44229a:	dec    ecx
  44229b:	jno    0x442309
  44229d:	sbb    cl,BYTE PTR [ebx+0x2905b060]
  4422a3:	cmp    eax,0x488c97bb
  4422a8:	aaa    
  4422a9:	mov    ebp,0x296d9fb7
  4422ae:	sbb    edi,DWORD PTR [edx-0x7b]
  4422b1:	cmp    DWORD PTR [eax-0x17],edi
  4422b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4422b5:	iret   
  4422b6:	daa    
  4422b7:	les    ecx,FWORD PTR [ecx+0x4123244]
  4422bd:	sar    bl,1
  4422bf:	scas   al,BYTE PTR es:[edi]
  4422c0:	and    DWORD PTR [ecx+0x2c],esp
  4422c3:	(bad)  
  4422c4:	xlat   BYTE PTR ds:[ebx]
  4422c5:	sbb    ch,BYTE PTR [ebx+0x77]
  4422c8:	pop    eax
  4422c9:	push   0xffffff93
  4422cb:	pop    ecx
  4422cc:	cld    
  4422cd:	test   eax,0x4a38df6c
  4422d2:	sbb    al,0x8e
  4422d4:	retf   
  4422d5:	jmp    0x71fb:0x158dac1f
  4422dc:	ja     0x442318
  4422de:	and    esp,DWORD PTR [edx]
  4422e0:	out    dx,al
  4422e1:	nop
  4422e2:	fs dec esi
  4422e4:	mov    ?,WORD PTR [edx+0x510b7a4a]
  4422ea:	out    0x51,al
  4422ec:	mov    bl,ch
  4422ee:	(bad)  
  4422ef:	xchg   edi,eax
  4422f0:	dec    ecx
  4422f1:	arpl   cx,bx
  4422f3:	call   0xfb7d482c
  4422f8:	jne    0x4422be
  4422fa:	cmc    
  4422fb:	push   es
  4422fc:	js     0x4422ac
  4422fe:	mov    ebp,0xecb01e39
  442303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442304:	popa   
  442305:	jl     0x4422da
  442307:	inc    ecx
  442308:	mov    esi,0xe9c1e92
  44230d:	retf   0x599e
  442310:	pop    es
  442311:	inc    eax
  442312:	les    ebx,FWORD PTR [esi-0x7e]
  442315:	pop    eax
  442316:	add    esi,DWORD PTR [edi-0x43]
  442319:	in     eax,0x8e
  44231b:	adc    BYTE PTR [ebx+0x44],0xca
  44231f:	das    
  442320:	mov    ch,BYTE PTR [ebp+0x5f]
  442323:	xchg   esi,eax
  442324:	pusha  
  442325:	fiadd  WORD PTR [esi]
  442327:	or     BYTE PTR ds:0x943cd667,dl
  44232d:	ret    0xeb3e
  442330:	fld    st(0)
  442332:	inc    edi
  442333:	mov    eax,ds:0x4d632222
  442338:	les    ecx,FWORD PTR [eax]
  44233a:	popf   
  44233b:	lods   eax,DWORD PTR ds:[esi]
  44233c:	push   0xedbb800a
  442341:	repz cmp esi,DWORD PTR [eax]
  442344:	push   esi
  442345:	push   ecx
  442346:	cmp    al,0xc2
  442348:	pop    ss
  442349:	out    dx,al
  44234a:	cs (bad) 
  44234c:	sar    BYTE PTR [esi],cl
  44234e:	add    DWORD PTR [ebx-0x45dbc3de],esi
  442354:	mov    ds:0xc78ff038,al
  442359:	jmp    0xa9dca2d0
  44235e:	push   esi
  44235f:	jge    0x44233f
  442361:	xor    bl,dh
  442363:	add    BYTE PTR [ebx-0x4d],ch
  442366:	mov    edi,0x25bded7f
  44236b:	(bad)
  44236e:	cli    
  44236f:	dec    edi
  442370:	stos   BYTE PTR es:[edi],al
  442371:	push   cs
  442372:	(bad)  
  442373:	ins    DWORD PTR es:[edi],dx
  442374:	pushf  
  442375:	sahf   
  442376:	mov    eax,0xdb504a8
  44237b:	pop    ebx
  44237c:	jnp    0x442300
  44237e:	inc    esi
  44237f:	and    DWORD PTR [ebx+esi*1+0xe9cdf09],0x66
  442387:	mov    ebp,0xdf71607a
  44238c:	push   ebp
  44238d:	lods   al,BYTE PTR ds:[esi]
  44238e:	sbb    al,0x79
  442390:	hlt    
  442391:	out    dx,al
  442392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442393:	call   0x7dde4e5a
  442398:	jns    0x442363
  44239a:	push   esi
  44239b:	lock test al,0x11
  44239e:	or     BYTE PTR [ebx-0x54386103],bl
  4423a4:	es adc al,0xff
  4423a7:	fadd   QWORD PTR [esi-0x29]
  4423aa:	or     bh,al
  4423ac:	stc    
  4423ad:	jb     0x4423fa
  4423af:	jg     0x44242b
  4423b1:	inc    edx
  4423b2:	popf   
  4423b3:	lds    edx,FWORD PTR [edi]
  4423b5:	cdq    
  4423b6:	mov    esi,0xb7b81b6b
  4423bb:	mov    dl,0xb6
  4423bd:	je     0x4423fd
  4423bf:	(bad)  
  4423c0:	arpl   WORD PTR [ebx-0x1e3d8f65],dx
  4423c6:	lds    ebx,FWORD PTR [ebp-0x1d]
  4423c9:	xor    eax,0xf9930190
  4423ce:	ficom  WORD PTR [ebx]
  4423d0:	push   esp
  4423d1:	retf   0x1b76
  4423d4:	test   eax,0x286da267
  4423d9:	data16 adc al,0x72
  4423dc:	sbb    eax,0xc390174a
  4423e1:	fcom   st(0)
  4423e3:	lods   al,BYTE PTR ds:[esi]
  4423e4:	fistp  DWORD PTR [ecx]
  4423e6:	sbb    dl,dh
  4423e8:	stos   DWORD PTR es:[edi],eax
  4423e9:	sbb    al,0x35
  4423eb:	adc    BYTE PTR [edi+0x790896aa],bh
  4423f1:	outs   dx,BYTE PTR ds:[esi]
  4423f2:	cdq    
  4423f3:	in     eax,dx
  4423f4:	aam    0xd5
  4423f6:	sub    ah,BYTE PTR [edi]
  4423f8:	mov    ds:0x100212a3,eax
  4423fd:	loop   0x4423b9
  4423ff:	xor    BYTE PTR [ecx],dl
  442401:	stos   DWORD PTR es:[edi],eax
  442402:	sub    al,0x6b
  442404:	loopne 0x4423d8
  442406:	inc    ebp
  442407:	jge    0x442438
  442409:	add    al,0x7a
  44240b:	cmp    al,0x18
  44240d:	ret    0xcaaa
  442410:	shr    DWORD PTR [esi+0x1e5346fb],1
  442416:	scas   al,BYTE PTR es:[edi]
  442417:	xchg   ebx,eax
  442418:	mov    esp,DWORD PTR [ebx]
  44241a:	shr    BYTE PTR [edx],cl
  44241c:	jne    0x442401
  44241e:	dec    eax
  44241f:	sub    eax,0x8862d245
  442424:	gs lock (bad) 
  442427:	push   esp
  442428:	test   al,0x9d
  44242a:	adc    edi,DWORD PTR ds:0x2dfbe4c4
  442430:	rol    DWORD PTR [ecx],cl
  442432:	and    al,0x11
  442434:	inc    ebp
  442435:	in     eax,dx
  442436:	jmp    0xca7306e6
  44243b:	iret   
  44243c:	arpl   WORD PTR [edi],di
  44243e:	cli    
  44243f:	mov    bl,0xb0
  442441:	xchg   DWORD PTR [edi-0xc],eax
  442444:	mov    edi,0x243f796b
  442449:	mov    cl,0x75
  44244b:	mov    esp,0x42413683
  442450:	daa    
  442451:	push   esi
  442452:	sub    BYTE PTR [eax+edi*2+0x42],cl
  442456:	lock fnstenv [ebx+0x50]
  44245a:	ins    DWORD PTR es:[edi],dx
  44245b:	pusha  
  44245c:	mov    esi,0xc439f7bb
  442461:	xchg   esp,eax
  442462:	and    BYTE PTR [ecx-0x38],dl
  442465:	mov    cl,0x2c
  442467:	jo     0x44243a
  442469:	shr    ch,cl
  44246b:	fsub   QWORD PTR [eax]
  44246d:	sbb    cl,bl
  44246f:	jmp    0xda92:0x968408f4
  442476:	pop    esp
  442477:	add    eax,0x4b82d77
  44247c:	arpl   WORD PTR [ebx],cx
  44247e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44247f:	sbb    eax,0x6e655ae0
  442484:	neg    DWORD PTR [edx]
  442486:	out    0x6,al
  442488:	retf   
  442489:	adc    bl,BYTE PTR [ecx-0x32479936]
  44248f:	ins    BYTE PTR es:[edi],dx
  442490:	mov    esi,0x23eca3df
  442495:	pop    ds
  442496:	pop    edi
  442497:	outs   dx,DWORD PTR ds:[esi]
  442498:	push   ds
  442499:	pop    ebx
  44249a:	repnz popf 
  44249c:	dec    ebp
  44249d:	mov    ecx,edi
  44249f:	out    0x81,eax
  4424a1:	lds    eax,FWORD PTR [eax-0x835a870]
  4424a7:	xchg   esi,eax
  4424a8:	inc    esp
  4424a9:	stos   BYTE PTR es:[edi],al
  4424aa:	repnz pop esp
  4424ac:	in     al,dx
  4424ad:	cs aas 
  4424af:	mov    esp,0x41963adf
  4424b4:	xchg   esp,eax
  4424b5:	aas    
  4424b6:	mov    edx,0x42c96615
  4424bb:	bound  ebx,QWORD PTR [eax+0xb]
  4424be:	outs   dx,BYTE PTR ds:[esi]
  4424bf:	adc    ch,BYTE PTR [ebp-0xe]
  4424c2:	lgs    ecx,FWORD PTR [edx]
  4424c5:	fsub   DWORD PTR es:[edi-0x26213320]
  4424cc:	inc    ebx
  4424cd:	and    ebx,edx
  4424cf:	in     eax,0x9f
  4424d1:	mov    bl,BYTE PTR [eax]
  4424d3:	fisttp QWORD PTR [edx+0x73d94a4f]
  4424d9:	mov    esi,0x5ea52b98
  4424de:	cmp    BYTE PTR ds:0x624c1d2c,cl
  4424e4:	pop    edx
  4424e5:	hlt    
  4424e6:	or     al,0x2e
  4424e8:	imul   edi,DWORD PTR [eax-0x9cbf59f],0x77084358
  4424f2:	iret   
  4424f3:	mov    ebx,DWORD PTR [ebp-0x15]
  4424f6:	inc    edx
  4424f7:	or     bl,BYTE PTR [edx+esi*8+0x54]
  4424fb:	adc    dh,BYTE PTR [esi-0xfc79081]
  442501:	leave  
  442502:	pushf  
  442503:	aam    0x9e
  442505:	sti    
  442506:	jmp    0x4424d1
  442508:	daa    
  442509:	mov    al,0x9e
  44250b:	out    0x99,al
  44250d:	and    dl,BYTE PTR [ebx]
  44250f:	xchg   ebp,eax
  442510:	int    0xab
  442512:	pop    esi
  442513:	sub    BYTE PTR [ebx+0x62],cl
  442516:	loopne 0x442552
  442518:	mov    ebp,0x5e9cad07
  44251d:	mov    al,ds:0x8c12ce
  442522:	(bad)  
  442523:	push   ecx
  442524:	push   cs
  442525:	dec    eax
  442526:	scas   eax,DWORD PTR es:[edi]
  442527:	push   edx
  442528:	dec    esp
  442529:	pop    ecx
  44252a:	xchg   dh,ah
  44252c:	mov    al,ds:0xd4b4773e
  442531:	add    eax,0x2b392254
  442536:	test   BYTE PTR [edi+0x6b596d4c],ah
  44253c:	stc    
  44253d:	jno    0x4424f1
  44253f:	adc    ch,BYTE PTR ds:0xb85dfb29
  442545:	div    BYTE PTR [ebp-0x16]
  442548:	fwait
  442549:	(bad)  
  44254a:	fstp   DWORD PTR [ebx+ecx*1-0xb]
  44254e:	iret   
  44254f:	cld    
  442550:	imul   ecx,DWORD PTR [edx],0x68f2076b
  442556:	xor    al,0x57
  442558:	ret    0xfe77
  44255b:	jg     0x4425a2
  44255d:	popa   
  44255e:	dec    esp
  44255f:	add    al,0x7
  442561:	or     al,0xd7
  442563:	sbb    eax,0xd58fc88b
  442568:	(bad)  ds:0x68f4fd0a
  44256e:	or     al,0x6c
  442570:	mov    bh,ah
  442572:	shr    BYTE PTR [eax+esi*8],0x66
  442576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442577:	sub    ch,BYTE PTR [ebx]
  442579:	out    dx,eax
  44257a:	outs   dx,BYTE PTR ds:[esi]
  44257b:	or     eax,0x3b2cfaa5
  442580:	jge    0x442538
  442582:	dec    edi
  442583:	fstp   QWORD PTR [esi]
  442585:	clc    
  442586:	jnp    0x4425d8
  442588:	jbe    0x442548
  44258a:	out    dx,ax
  44258c:	bound  ebx,QWORD PTR [esi]
  44258e:	push   ss
  44258f:	add    al,0xc8
  442591:	cmp    BYTE PTR [ecx+0x34],dh
  442594:	neg    BYTE PTR [edi]
  442596:	retf   
  442597:	inc    edx
  442598:	lea    edi,[esi-0x4bb397d1]
  44259e:	lods   al,BYTE PTR ds:[esi]
  44259f:	out    dx,eax
  4425a0:	jle    0x442546
  4425a2:	mov    ah,0x36
  4425a4:	push   cs
  4425a5:	mov    ebp,DWORD PTR [esi-0x31]
  4425a8:	xor    dh,ah
  4425aa:	addr16 mov ebp,0x3b9d523b
  4425b0:	dec    esi
  4425b1:	retf   
  4425b2:	out    dx,eax
  4425b3:	out    dx,al
  4425b4:	pop    ds
  4425b5:	sub    DWORD PTR [ecx],ebp
  4425b7:	mov    ds,WORD PTR [eax-0x18050c2b]
  4425bd:	cmp    al,0xf5
  4425bf:	sbb    DWORD PTR [eax],0xec5455c4
  4425c5:	shl    BYTE PTR [ebx+0x42485359],cl
  4425cb:	loop   0x442643
  4425cd:	cwde   
  4425ce:	add    DWORD PTR [ebp+0x52],eax
  4425d1:	adc    ah,BYTE PTR [ebx+0x39]
  4425d4:	sub    esp,esp
  4425d6:	nop
  4425d7:	es add cl,ch
  4425da:	outs   dx,DWORD PTR ds:[esi]
  4425db:	adc    DWORD PTR [eax+eiz*2],0x2948ea71
  4425e2:	(bad)  
  4425e3:	mov    ch,0x8b
  4425e5:	idiv   ch
  4425e7:	outs   dx,DWORD PTR ds:[esi]
  4425e8:	mov    DWORD PTR [ebx-0x5d],edi
  4425eb:	(bad)  [eax+ebx*1]
  4425ee:	xor    BYTE PTR [ebx+0x32],al
  4425f1:	mov    cl,0xf1
  4425f3:	dec    esp
  4425f4:	into   
  4425f5:	js     0x44257e
  4425f7:	pusha  
  4425f8:	jae    0x442627
  4425fa:	int    0x7e
  4425fc:	fild   QWORD PTR [eax-0x6fa0e1e6]
  442602:	pushf  
  442603:	ins    BYTE PTR es:[edi],dx
  442604:	pop    es
  442605:	stos   BYTE PTR es:[edi],al
  442606:	fisttp QWORD PTR [esi]
  442608:	push   ds
  442609:	ins    BYTE PTR es:[edi],dx
  44260a:	int    0x62
  44260c:	lods   al,BYTE PTR ds:[esi]
  44260d:	ficomp WORD PTR [ebx+0x5a]
  442610:	cli    
  442611:	adc    ebp,DWORD PTR [esi-0x24]
  442614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442615:	mov    edx,0xccab39a7
  44261a:	or     ah,bh
  44261c:	popa   
  44261d:	dec    edx
  44261e:	xor    eax,0x77e47a35
  442623:	pop    ecx
  442624:	xchg   ebp,eax
  442625:	add    al,BYTE PTR [esp+edi*2+0x3fcdb028]
  44262c:	mov    dl,0x97
  44262e:	mov    ebx,0xddc15a44
  442633:	sub    BYTE PTR fs:[eax],ah
  442636:	mov    ecx,0xfb16f99c
  44263b:	jmp    0x36ad:0x3666b218
  442642:	rcr    edi,0x10
  442645:	sbb    ebx,edx
  442647:	add    esi,DWORD PTR [edx-0x463bda92]
  44264d:	(bad)  
  44264f:	lods   al,BYTE PTR ds:[esi]
  442650:	mov    ebx,0xe67c9ea7
  442655:	dec    edi
  442656:	fidiv  WORD PTR [ebx]
  442658:	cmp    al,ah
  44265a:	mov    DWORD PTR [ebx],ebp
  44265c:	mov    DWORD PTR [esi-0x2eac3401],edi
  442662:	add    BYTE PTR ds:0x12526eb0,bh
  442668:	lahf   
  442669:	mov    ah,0x8f
  44266b:	ja     0x4425ff
  44266d:	cdq    
  44266e:	sti    
  44266f:	mov    BYTE PTR [edx],ch
  442671:	mov    ds:0xc59ce9c7,al
  442676:	adc    eax,0x69966eac
  44267b:	test   BYTE PTR [esi+0x4e],0xea
  44267f:	mov    ss,WORD PTR [ebp-0x4]
  442682:	push   eax
  442683:	repnz xor ch,BYTE PTR [ecx-0x3b70323]
  44268a:	ret    
  44268b:	ret    
  44268c:	enter  0xa45c,0x4
  442690:	jle    0x44267a
  442692:	sbb    edi,DWORD PTR [eax+0x6c]
  442695:	(bad)  [ebp+0x73bde103]
  44269b:	aas    
  44269c:	(bad)  
  44269d:	pop    eax
  44269e:	sar    BYTE PTR [ebp+0xd5f838d],1
  4426a4:	push   cs
  4426a5:	mov    dl,0xb
  4426a7:	xor    al,0x15
  4426a9:	call   0xd158:0x49fb2123
  4426b0:	fldcw  WORD PTR [esi]
  4426b2:	sbb    ch,cl
  4426b4:	ror    BYTE PTR [esi+0x5c],1
  4426b7:	and    eax,0x45f14129
  4426bc:	retf   0xc201
  4426bf:	push   edi
  4426c0:	sbb    esp,DWORD PTR [eax-0x69]
  4426c3:	shl    DWORD PTR [ebx+0x614aefc7],0x61
  4426ca:	dec    ebx
  4426cb:	aad    0xe9
  4426cd:	mov    ebx,0x23d2a056
  4426d2:	mov    ecx,0xad3c1c4c
  4426d7:	cmc    
  4426d8:	xor    DWORD PTR [edx],ebx
  4426da:	int    0x10
  4426dc:	pushf  
  4426dd:	aam    0x6d
  4426df:	fistp  DWORD PTR [ecx+edi*2-0x460ee7a5]
  4426e6:	mov    al,0x1
  4426e8:	sub    ebx,DWORD PTR [ebp-0x781397e1]
  4426ee:	retf   
  4426ef:	enter  0xcb90,0x29
  4426f3:	jbe    0x442749
  4426f5:	sar    BYTE PTR [ebx+0x6],1
  4426f8:	push   ss
  4426f9:	mov    ah,0xff
  4426fb:	sar    DWORD PTR [ecx-0x3be74b02],1
  442701:	das    
  442702:	inc    ebp
  442703:	inc    ecx
  442704:	pop    esp
  442705:	pop    eax
  442706:	fstp   DWORD PTR [ecx+edi*1+0x20c6d1b4]
  44270d:	(bad)  
  44270e:	ja     0x442713
  442710:	jnp    0x44273b
  442712:	jbe    0x4426d0
  442714:	mov    ds:0x3e74f8f2,al
  442719:	adc    al,0x95
  44271b:	les    ebx,FWORD PTR ds:0xa38b002d
  442721:	push   ss
  442722:	stos   DWORD PTR es:[edi],eax
  442723:	pop    esp
  442724:	adc    DWORD PTR ds:0x6cd39196,ecx
  44272a:	icebp  
  44272b:	pop    esp
  44272c:	mov    ds:0x233a365a,al
  442731:	xchg   esp,eax
  442732:	fimul  WORD PTR [ecx-0x5beb2730]
  442738:	mov    dl,0x7a
  44273a:	clc    
  44273b:	in     eax,dx
  44273c:	cmp    BYTE PTR [ebx-0xd5132af],ah
  442742:	push   ss
  442743:	push   DWORD PTR cs:0xb518db8e
  44274a:	xor    DWORD PTR [ebx-0x3f],esi
  44274d:	(bad)  
  44274e:	rcl    BYTE PTR [ecx],cl
  442750:	iret   
  442751:	pop    edx
  442752:	add    esp,esi
  442754:	sbb    DWORD PTR [eax+0x7ce6da4c],ebp
  44275a:	adc    eax,0xe082bdab
  44275f:	mov    DWORD PTR [ebx],ebx
  442761:	out    0x44,eax
  442763:	cli    
  442764:	test   BYTE PTR [ebp-0x719a51be],ah
  44276a:	inc    edx
  44276b:	ins    DWORD PTR es:[edi],dx
  44276c:	push   esi
  44276d:	popa   
  44276e:	in     eax,dx
  44276f:	lock outs dx,DWORD PTR ds:[esi]
  442771:	jp     0x442742
  442773:	xor    DWORD PTR [ebp-0x24b3122f],esi
  442779:	jl     0x442727
  44277b:	pop    es
  44277c:	jnp    0x442755
  44277e:	shl    DWORD PTR ds:0x317d405,0x2b
  442785:	xchg   esi,eax
  442786:	out    dx,al
  442787:	sub    eax,0xa03b3db4
  44278c:	es test eax,0xb2402771
  442792:	int3   
  442793:	mov    eax,ds:0x3f1baddd
  442798:	sub    BYTE PTR [ebp-0x5e],cl
  44279b:	imul   ecx,DWORD PTR [eax+0x78af84b1],0x6fbc0ff9
  4427a5:	dec    eax
  4427a6:	cli    
  4427a7:	or     BYTE PTR [ecx],ch
  4427a9:	fwait
  4427aa:	repnz and edx,DWORD PTR [eax-0x37]
  4427ae:	imul   esi,esp,0x3b
  4427b1:	mov    dl,0x6b
  4427b3:	xor    eax,edi
  4427b5:	mov    eax,0x7d81b908
  4427ba:	ret    0x93aa
  4427bd:	cwde   
  4427be:	adc    DWORD PTR [esi-0x63],eax
  4427c1:	pop    esp
  4427c2:	icebp  
  4427c3:	pop    esi
  4427c4:	mov    bl,0x29
  4427c6:	push   edx
  4427c7:	das    
  4427c8:	sub    al,0x9f
  4427ca:	jne    0x442800
  4427cc:	cwde   
  4427cd:	inc    ecx
  4427ce:	fwait
  4427cf:	sub    BYTE PTR [eax+0x26ecd1b7],0x30
  4427d6:	cli    
  4427d7:	int    0x73
  4427d9:	cmp    edx,DWORD PTR [edi-0x7a]
  4427dc:	adc    eax,0x83097ba1
  4427e1:	adc    dl,cl
  4427e3:	dec    ecx
  4427e4:	xchg   edx,eax
  4427e5:	jae    0x442775
  4427e7:	daa    
  4427e8:	pop    edx
  4427e9:	shl    DWORD PTR [edi+0x72a3021f],0x99
  4427f0:	xchg   ebx,eax
  4427f1:	dec    ecx
  4427f2:	sub    edx,ecx
  4427f4:	xchg   edi,eax
  4427f5:	ss jmp 0x445d:0x1d7b678c
  4427fd:	push   es
  4427fe:	(bad)  
  4427ff:	test   eax,0xa46416dd
  442804:	scas   al,BYTE PTR es:[edi]
  442805:	push   ecx
  442806:	mov    ebp,0xf96d9c79
  44280b:	push   ebp
  44280c:	retf   
  44280d:	xchg   edx,eax
  44280e:	xor    BYTE PTR [esi-0x7e0c5f49],0xe2
  442815:	into   
  442816:	sub    esi,ecx
  442818:	jmp    0x442829
  44281a:	pop    ecx
  44281b:	jmp    DWORD PTR [ecx+ecx*4+0x70add681]
  442822:	(bad)  
  442823:	cmp    eax,0x6df0679a
  442828:	jmp    0x9c29:0xeb714816
  44282f:	shl    al,0x30
  442832:	xchg   esp,eax
  442833:	push   cs
  442834:	test   eax,0xe6f2ae7e
  442839:	mov    ch,ch
  44283b:	inc    edx
  44283c:	and    bh,dh
  44283e:	pop    ebp
  44283f:	push   edi
  442840:	aad    0x13
  442842:	(bad)  
  442843:	cld    
  442844:	sub    cl,0x58
  442847:	into   
  442848:	mov    BYTE PTR [eax],dl
  44284a:	xchg   ebp,eax
  44284b:	pop    edx
  44284c:	jle    0x442819
  44284e:	out    0x4e,eax
  442850:	push   cs
  442851:	jnp    0x442837
  442853:	pop    esp
  442854:	mov    edi,0x1d64ad3c
  442859:	pop    ss
  44285a:	mov    dl,0xa4
  44285c:	in     al,0xf8
  44285e:	call   0xa936831d
  442863:	adc    BYTE PTR [esi+0x15],bl
  442866:	xchg   ecx,eax
  442867:	sti    
  442868:	and    ecx,esp
  44286a:	inc    edx
  44286b:	fnsave [esi]
  44286d:	cmp    eax,0xc7af32a
  442872:	sub    BYTE PTR [eax+0x4c],bl
  442875:	push   edx
  442876:	stos   DWORD PTR es:[edi],eax
  442877:	adc    edx,esp
  442879:	jp     0x4428ef
  44287b:	das    
  44287c:	outs   dx,BYTE PTR ds:[esi]
  44287d:	inc    DWORD PTR [ebp+0xc]
  442880:	in     eax,0xb5
  442882:	dec    esp
  442883:	jmp    0x442871
  442885:	xchg   ecx,eax
  442886:	shl    DWORD PTR [edi],1
  442888:	mov    dl,0x63
  44288a:	pop    ebx
  44288b:	sbb    BYTE PTR [edx-0x4d04f8bf],bh
  442891:	data16 add cl,BYTE PTR [ecx]
  442894:	or     al,0xcd
  442896:	loope  0x4428c2
  442898:	or     BYTE PTR [esi],bl
  44289a:	pop    ds
  44289b:	push   esp
  44289c:	jl     0x442842
  44289e:	jmp    0x5229:0x8b04b35a
  4428a5:	cmp    DWORD PTR [edx],esi
  4428a7:	(bad)  
  4428a8:	mov    edi,0xb809951f
  4428ad:	cmp    BYTE PTR [ebp+0x32],al
  4428b0:	out    0xfe,eax
  4428b2:	jbe    0x44291a
  4428b4:	xchg   esp,eax
  4428b5:	call   0xf641:0x13da10c0
  4428bc:	aaa    
  4428bd:	sets   BYTE PTR [edx-0x7ec7b578]
  4428c4:	int3   
  4428c5:	ffree  st(6)
  4428c7:	(bad)  [edx-0x48]
  4428ca:	xor    eax,DWORD PTR [esp+edx*2]
  4428cd:	sbb    BYTE PTR [esi+0x765b0967],ch
  4428d3:	lahf   
  4428d4:	xor    dl,ah
  4428d6:	jge    0x442931
  4428d8:	not    DWORD PTR [ecx]
  4428da:	ror    cl,0x65
  4428dd:	mov    dh,0x13
  4428df:	cwde   
  4428e0:	mov    edx,0xeac9482b
  4428e5:	and    BYTE PTR [ebp-0x410556a8],0x62
  4428ec:	lods   al,BYTE PTR ds:[esi]
  4428ed:	inc    edx
  4428ee:	pop    ebx
  4428ef:	dec    esp
  4428f0:	jle    0x4428a9
  4428f2:	fucom  st(1)
  4428f4:	int    0x12
  4428f6:	(bad)  
  4428f7:	out    dx,al
  4428f8:	jp     0x44292b
  4428fa:	sbb    BYTE PTR ds:0xa95ee8da,bh
  442900:	pop    ss
  442901:	aaa    
  442902:	data16 fbstp TBYTE PTR [esi-0x72]
  442906:	xor    al,0x13
  442908:	dec    eax
  442909:	retf   0x54b4
  44290c:	pop    esi
  44290d:	pop    esi
  44290e:	or     BYTE PTR [eax-0x76],dh
  442911:	pop    es
  442912:	sbb    BYTE PTR [edx+0x63],0xb4
  442916:	inc    eax
  442917:	mov    ebp,0x5f7e978b
  44291c:	adc    cl,dh
  44291e:	das    
  44291f:	push   es
  442920:	mov    bl,0xfb
  442922:	push   ebp
  442923:	xor    DWORD PTR es:[ecx-0x2cc2e038],esp
  44292a:	call   0x2be7de30
  44292f:	arpl   dx,dx
  442931:	push   ebx
  442932:	cwd    
  442934:	inc    esi
  442935:	or     DWORD PTR [edi],ebp
  442937:	out    0x30,eax
  442939:	dec    esi
  44293a:	clc    
  44293b:	ret    
  44293c:	add    BYTE PTR [eax+0x54],ah
  44293f:	leave  
  442940:	xchg   edi,eax
  442941:	sbb    eax,0x7ee8116d
  442946:	adc    ch,BYTE PTR es:[ebx+ebp*2+0x2cff8373]
  44294e:	test   ebx,edx
  442950:	mov    al,ds:0x64742cf3
  442955:	loopne 0x442953
  442957:	arpl   WORD PTR [ebx-0x721c2d0d],sp
  44295d:	jnp    0x4429cf
  44295f:	mov    ds:0x15c85b69,al
  442964:	xlat   BYTE PTR ds:[ebx]
  442965:	call   0xa78e:0xe3363280
  44296c:	cld    
  44296d:	pop    eax
  44296e:	ficom  WORD PTR [ebx]
  442970:	cli    
  442971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442972:	mov    cl,0xa9
  442974:	jp     0x4429a1
  442976:	xchg   ecx,eax
  442977:	mov    eax,0x96d66d44
  44297c:	call   0x26199137
  442981:	dec    edx
  442982:	pushf  
  442983:	scas   al,BYTE PTR es:[edi]
  442984:	mov    cl,0x91
  442986:	test   DWORD PTR [ebp+0x5a],edx
  442989:	pop    ds
  44298a:	sub    ecx,edx
  44298c:	(bad)  
  44298d:	mov    BYTE PTR [ebx],ah
  44298f:	pop    ss
  442990:	pop    ds
  442991:	mov    BYTE PTR [ecx],al
  442993:	pusha  
  442994:	and    eax,0x1f5a1caf
  442999:	push   edx
  44299a:	mov    ch,0xa4
  44299c:	int    0x9e
  44299e:	fnstenv [ecx]
  4429a0:	adc    al,0x65
  4429a2:	jmp    0x619d:0xd84a2b03
  4429a9:	popf   
  4429aa:	jmp    0x7eab:0x2cc94e7c
  4429b1:	out    0xe0,eax
  4429b3:	call   0x6db27ae7
  4429b8:	clc    
  4429b9:	sbb    BYTE PTR [edi],cl
  4429bb:	mov    bl,0xbf
  4429bd:	mov    al,dh
  4429bf:	pop    ds
  4429c0:	pop    edx
  4429c1:	sbb    BYTE PTR [ecx-0x3f],0xfa
  4429c5:	or     eax,0xf518362d
  4429ca:	jle    0x4429bf
  4429cc:	push   es
  4429cd:	dec    ebp
  4429ce:	cwde   
  4429cf:	leave  
  4429d0:	adc    cl,cl
  4429d2:	shl    DWORD PTR [ebp-0x5],1
  4429d5:	jmp    0x44299a
  4429d7:	ja     0x4429f8
  4429d9:	mov    eax,ds:0x74c2b38f
  4429de:	xchg   esp,eax
  4429df:	adc    eax,0xbc5fbe98
  4429e4:	lahf   
  4429e5:	or     al,0xf5
  4429e7:	js     0x442975
  4429e9:	cmp    ebx,esi
  4429eb:	call   0xd133:0xfd614c3
  4429f2:	push   ds
  4429f3:	and    DWORD PTR [ebx+0x5bdd7568],0x751edefd
  4429fd:	push   esp
  4429fe:	repz xor bl,BYTE PTR [ebx+0x1f99e0ff]
  442a05:	rcl    BYTE PTR [ebp+ebp*4+0x723fbe61],cl
  442a0c:	rol    BYTE PTR [eax-0x49],1
  442a0f:	pop    esi
  442a10:	js     0x442a41
  442a12:	pop    es
  442a13:	add    eax,0xb1cf15ca
  442a18:	outs   dx,DWORD PTR ds:[esi]
  442a19:	mov    cl,0xab
  442a1b:	retf   
  442a1c:	loope  0x4429ca
  442a1e:	xor    esi,DWORD PTR [bp+di]
  442a21:	jle    0x4429b7
  442a23:	daa    
  442a24:	pop    esp
  442a25:	hlt    
  442a26:	enter  0xe422,0x5c
  442a2a:	or     edx,DWORD PTR [edi-0x56241d61]
  442a30:	mov    al,ds:0xb03df59d
  442a35:	scas   eax,DWORD PTR es:[edi]
  442a36:	nop
  442a37:	dec    ecx
  442a38:	es mov dl,0x48
  442a3b:	fisub  WORD PTR [esi]
  442a3d:	outs   dx,BYTE PTR ds:[esi]
  442a3e:	mov    edi,ds
  442a40:	ja     0x442a30
  442a42:	xchg   edx,eax
  442a43:	adc    eax,0xd51f33c9
  442a48:	bound  ecx,QWORD PTR [eax+ecx*4-0x7c2175d3]
  442a4f:	sbb    DWORD PTR [edx+0xb42fd56],0xd0927725
  442a59:	aad    0x29
  442a5b:	mov    ds:0x16d1ffb,eax
  442a60:	and    al,0x83
  442a62:	inc    ebx
  442a63:	mov    DWORD PTR [ebp-0x49],ebx
  442a66:	test   al,0x4e
  442a68:	push   ds
  442a69:	xchg   BYTE PTR [ebp+0x6c7bda1a],cl
  442a6f:	push   edi
  442a70:	fdiv   QWORD PTR [esi]
  442a72:	fs or  DWORD PTR gs:[eax-0x2a],ebx
  442a77:	pop    ss
  442a78:	sbb    edi,DWORD PTR [ebx]
  442a7a:	js     0x442a44
  442a7c:	repz fisttp DWORD PTR [edx+ebx*4+0x7476d732]
  442a84:	cmp    ecx,DWORD PTR [eax+0x20]
  442a87:	xchg   edi,eax
  442a88:	sbb    eax,0xbac3a0e0
  442a8d:	(bad)  
  442a8e:	jbe    0x442ac7
  442a90:	push   eax
  442a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442a92:	cs or  al,0x89
  442a95:	repnz out 0xed,eax
  442a98:	jns    0x442ac2
  442a9a:	fisub  WORD PTR [ebp-0x1f]
  442a9d:	dec    ebx
  442a9e:	stos   BYTE PTR es:[edi],al
  442a9f:	repnz sahf 
  442aa1:	xor    BYTE PTR [ebx+0x9b3f926],0xf
  442aa8:	shl    BYTE PTR [edi],0x84
  442aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442aac:	xchg   ebx,eax
  442aad:	add    cl,BYTE PTR [ecx]
  442aaf:	mov    BYTE PTR [ebx+0x7c],cl
  442ab2:	and    BYTE PTR [esi+edx*4],bl
  442ab5:	cdq    
  442ab6:	(bad)  
  442ab7:	sti    
  442ab8:	nop
  442ab9:	out    0xc1,eax
  442abb:	mov    bl,0xaa
  442abd:	jl     0x442aaa
  442abf:	aas    
  442ac0:	sar    DWORD PTR [ebx-0x3db9c0ac],0xdc
  442ac7:	mov    es,WORD PTR [ebx]
  442ac9:	add    al,0x17
  442acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442acc:	cmc    
  442acd:	aas    
  442ace:	out    dx,eax
  442acf:	push   0x45
  442ad1:	inc    esp
  442ad2:	jmp    0x442b29
  442ad4:	ins    DWORD PTR es:[edi],dx
  442ad5:	xchg   esp,eax
  442ad6:	idiv   ebp
  442ad8:	cmp    eax,0x5dbe0708
  442add:	pop    esi
  442ade:	imul   ebp,DWORD PTR [eax],0xffffffd7
  442ae1:	test   al,0xd1
  442ae3:	pop    edi
  442ae4:	xor    ch,dh
  442ae6:	(bad)  
  442ae7:	sbb    eax,0x2ccde3f2
  442aec:	jno    0x442b06
  442aee:	inc    ebp
  442aef:	add    eax,0xb194c773
  442af4:	xor    esi,edx
  442af6:	push   edx
  442af7:	fstp   QWORD PTR [esi]
  442af9:	daa    
  442afa:	jmp    0xe4deb22
  442aff:	fcmovne st,st(7)
  442b01:	in     eax,0xaa
  442b03:	je     0x442b3e
  442b05:	ror    DWORD PTR [edx+0x1d],cl
  442b08:	cmp    BYTE PTR [esp+eax*4],cl
  442b0b:	jns    0x442abb
  442b0d:	stos   BYTE PTR es:[edi],al
  442b0e:	fwait
  442b0f:	mov    ah,0x3d
  442b11:	dec    edi
  442b12:	scas   al,BYTE PTR es:[edi]
  442b13:	cld    
  442b14:	es inc edi
  442b16:	ins    BYTE PTR es:[edi],dx
  442b17:	jge    0x442b62
  442b19:	mov    edi,0xc9a27dcd
  442b1e:	ds loopne 0x442b00
  442b21:	dec    edi
  442b22:	sub    dh,BYTE PTR [esi]
  442b24:	xchg   edi,eax
  442b25:	jae    0x442aba
  442b27:	fld    QWORD PTR [edi]
  442b29:	lods   eax,DWORD PTR ds:[esi]
  442b2a:	mov    fs,edx
  442b2c:	popa   
  442b2d:	bswap  esi
  442b2f:	push   ss
  442b30:	jmp    0xfcb6:0x4d4c75b1
  442b37:	mov    esp,0x829310df
  442b3c:	in     eax,0x24
  442b3e:	jg     0x442af2
  442b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442b41:	test   bh,0x7c
  442b44:	inc    ebx
  442b45:	jo     0x442b3e
  442b47:	sbb    DWORD PTR [edi],ebx
  442b49:	add    bl,BYTE PTR [esi]
  442b4b:	mov    al,ah
  442b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442b4e:	push   ss
  442b4f:	repnz push eax
  442b51:	jnp    0x442bcd
  442b53:	inc    ebp
  442b54:	jne    0x442b3a
  442b56:	and    BYTE PTR [eax],ch
  442b58:	adc    bl,cl
  442b5a:	dec    edx
  442b5b:	ins    BYTE PTR es:[edi],dx
  442b5c:	adc    BYTE PTR [ecx+0x17],al
  442b5f:	push   ecx
  442b60:	mov    dl,0x4b
  442b62:	outs   dx,BYTE PTR ds:[esi]
  442b63:	shl    DWORD PTR [ecx+0x64],1
  442b66:	mov    eax,ds:0xe717e12c
  442b6b:	xchg   ecx,eax
  442b6c:	sahf   
  442b6d:	pcmpgtb mm7,QWORD PTR [esi-0x10]
  442b71:	out    0xe0,eax
  442b73:	pusha  
  442b74:	sub    cl,ah
  442b76:	add    al,BYTE PTR [ecx+eiz*1-0x80]
  442b7a:	fs sub al,0xdc
  442b7d:	push   cs
  442b7e:	fdiv   QWORD PTR [esi+0xecd4eff]
  442b84:	inc    ebp
  442b85:	shr    BYTE PTR [ecx],1
  442b87:	pushf  
  442b88:	xor    BYTE PTR [esi],ch
  442b8a:	xchg   edx,eax
  442b8b:	mov    eax,0xd3644aac
  442b90:	pop    ss
  442b91:	dec    eax
  442b92:	ins    BYTE PTR es:[edi],dx
  442b93:	lahf   
  442b94:	and    BYTE PTR [esi+0x13],bh
  442b97:	mov    al,0x87
  442b99:	shl    BYTE PTR [eax-0x5235e3c],1
  442b9f:	jge    0x442c1c
  442ba1:	les    esp,FWORD PTR [eax+0x46]
  442ba4:	jl     0x442b70
  442ba6:	scas   al,BYTE PTR es:[edi]
  442ba7:	les    ecx,FWORD PTR [ebx+0x6001ef7d]
  442bad:	jne    0x442b77
  442baf:	adc    BYTE PTR [esi+ebx*8+0x4889d182],0x77
  442bb7:	xchg   esi,eax
  442bb8:	in     al,0xb9
  442bba:	push   cs
  442bbb:	pusha  
  442bbc:	enter  0x24de,0x34
  442bc0:	popa   
  442bc1:	dec    eax
  442bc2:	ins    BYTE PTR es:[edi],dx
  442bc3:	out    0x70,al
  442bc5:	pop    ds
  442bc6:	lods   al,BYTE PTR ds:[esi]
  442bc7:	mov    eax,ds:0x36910559
  442bcc:	les    ebp,FWORD PTR [esp+ebp*1-0xf89d32d]
  442bd3:	addr16 int 0xdb
  442bd6:	cld    
  442bd7:	mov    cl,0xc5
  442bd9:	fst    QWORD PTR [edx+ebx*8-0x30]
  442bdd:	out    0xcc,eax
  442bdf:	xor    eax,0x22eb5636
  442be4:	xor    eax,0x8573bf6f
  442be9:	(bad)  
  442bea:	loopne 0x442c1e
  442bec:	pushf  
  442bed:	jo     0x442c30
  442bef:	or     BYTE PTR [edi-0x22919c5b],0x5c
  442bf6:	in     eax,dx
  442bf7:	ret    0xaa86
  442bfa:	xor    al,0x86
  442bfc:	enter  0x696d,0xfc
  442c00:	sub    eax,DWORD PTR [ecx-0x2e]
  442c03:	div    edi
  442c05:	(bad)  
  442c06:	jno    0x442c45
  442c08:	push   0x30
  442c0a:	xor    eax,0x5cf2e0ea
  442c0f:	lds    esp,FWORD PTR [ebp+0x20895c5c]
  442c15:	mov    WORD PTR [esi],fs
  442c17:	mov    eax,0xda082fb
  442c1c:	xlat   BYTE PTR ds:[ebx]
  442c1d:	inc    eax
  442c1e:	inc    eax
  442c1f:	xchg   esp,eax
  442c20:	mov    ebx,0xb9f88419
  442c25:	lods   al,BYTE PTR ds:[esi]
  442c26:	aaa    
  442c27:	dec    ecx
  442c28:	ret    
  442c29:	push   esi
  442c2a:	fistp  QWORD PTR [ebx]
  442c2c:	out    0xe1,eax
  442c2e:	data16 (bad) 
  442c30:	dec    edx
  442c31:	(bad)  
  442c32:	sub    BYTE PTR ds:0x8c78af,0xe3
  442c39:	mov    BYTE PTR [ebx-0x3a],bl
  442c3c:	rcl    BYTE PTR [ebp-0x45],1
  442c3f:	cmp    eax,0x495988a6
  442c44:	push   ss
  442c45:	pop    edx
  442c46:	call   0xf2a43ec8
  442c4b:	ds mov ch,0x47
  442c4e:	or     eax,0x89e09332
  442c53:	ins    BYTE PTR es:[edi],dx
  442c54:	inc    eax
  442c55:	out    0x76,eax
  442c57:	pushf  
  442c58:	clc    
  442c59:	and    ecx,DWORD PTR [ebx+0x5]
  442c5c:	clc    
  442c5d:	mov    ch,0x7a
  442c5f:	and    eax,0x61fc8b31
  442c64:	repnz leave 
  442c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442c67:	data16 add cl,BYTE PTR [edx]
  442c6a:	cmp    eax,DWORD PTR [eax-0x71]
  442c6d:	retf   0xe32
  442c70:	loopne 0x442c4b
  442c72:	rol    BYTE PTR [ecx-0x68],1
  442c75:	xchg   ecx,eax
  442c76:	ins    BYTE PTR es:[edi],dx
  442c77:	xchg   ebp,eax
  442c78:	pop    ss
  442c79:	adc    bh,al
  442c7b:	cli    
  442c7c:	lds    esi,FWORD PTR [ebx+0x79b3722]
  442c82:	in     al,dx
  442c83:	push   ebx
  442c84:	jbe    0x442c25
  442c86:	inc    ebp
  442c87:	mov    bh,0x86
  442c89:	(bad)  
  442c8a:	into   
  442c8b:	test   dl,0xfc
  442c8e:	mov    eax,0x2a087a54
  442c93:	scas   eax,DWORD PTR es:[edi]
  442c94:	pop    edi
  442c95:	aaa    
  442c96:	ss mov eax,0x5b8de1eb
  442c9c:	in     al,0x3c
  442c9e:	jg     0x442cc1
  442ca0:	add    esi,DWORD PTR [edi+esi*4-0x2d8f35a]
  442ca7:	xchg   ecx,eax
  442ca8:	or     DWORD PTR [eax],edx
  442caa:	test   DWORD PTR [eax-0x6431b2cb],ecx
  442cb0:	jno    0x442c53
  442cb2:	jo     0x442cd3
  442cb4:	iret   
  442cb5:	lahf   
  442cb6:	cmp    BYTE PTR [esi+0x5f],0x27
  442cba:	retf   0xf718
  442cbd:	out    dx,al
  442cbe:	sbb    BYTE PTR [edi],ah
  442cc0:	loopne 0x442ced
  442cc2:	add    DWORD PTR [edi],edx
  442cc4:	add    al,0x28
  442cc6:	jne    0x442ce8
  442cc8:	outs   dx,DWORD PTR ds:[esi]
  442cc9:	jp     0x442d42
  442ccb:	ja     0x442d1d
  442ccd:	xor    ebx,esp
  442ccf:	mov    esi,0x7ddd37bb
  442cd4:	mov    edi,0xe783ebd0
  442cd9:	mov    WORD PTR [eax],gs
  442cdb:	push   ebp
  442cdc:	mov    ah,0xf1
  442cde:	inc    ebp
  442cdf:	pop    eax
  442ce0:	or     eax,0xe23ffc0d
  442ce5:	mov    al,0x1c
  442ce7:	imul   BYTE PTR [edx-0x12]
  442cea:	(bad)  
  442ceb:	scas   al,BYTE PTR es:[edi]
  442cec:	mov    ebp,0x685180ba
  442cf1:	frstor [esi+eiz*8-0x7de9a2cb]
  442cf8:	adc    ebx,DWORD PTR [edi-0x61]
  442cfb:	out    dx,al
  442cfc:	cmp    ebx,DWORD PTR [edi+0x32c4293]
  442d02:	(bad)  
  442d03:	sub    eax,0x431fea0e
  442d08:	leave  
  442d09:	add    bl,BYTE PTR [esi-0x66]
  442d0c:	outs   dx,DWORD PTR ds:[esi]
  442d0d:	add    esi,esi
  442d0f:	retf   0xb606
  442d12:	and    eax,DWORD PTR [eax]
  442d14:	pushf  
  442d15:	(bad)  
  442d17:	sub    bl,BYTE PTR [esi]
  442d19:	imul   esi,DWORD PTR [edx+0x58],0x6a
  442d1d:	jmp    0x3582:0x1c226588
  442d24:	sub    al,0xbd
  442d26:	xchg   esi,eax
  442d27:	mov    eax,0x80d5fccd
  442d2c:	mov    al,ds:0x159e9d70
  442d31:	push   edx
  442d32:	mov    dh,bl
  442d34:	(bad)  
  442d36:	sbb    al,0xff
  442d38:	aam    0xd1
  442d3a:	dec    esi
  442d3b:	sub    BYTE PTR [eax+0x3],bh
  442d3e:	cmc    
  442d3f:	dec    DWORD PTR [edi-0x44]
  442d42:	rol    DWORD PTR [ecx],1
  442d44:	jbe    0x442d74
  442d46:	dec    ecx
  442d47:	lock in al,0xb2
  442d4a:	clc    
  442d4b:	cmp    al,0xc0
  442d4d:	jmp    0x8851daee
  442d52:	mov    ecx,0xd6bc5864
  442d57:	jo     0x442d5b
  442d59:	push   0x32
  442d5b:	adc    BYTE PTR [ecx-0x10],ah
  442d5e:	rcl    DWORD PTR [eax+0x50e55bf2],cl
  442d64:	xor    eax,0xe80e9fab
  442d69:	cld    
  442d6a:	daa    
  442d6b:	cmp    al,0x3a
  442d6d:	ret    0x39eb
  442d70:	arpl   WORD PTR [edi],di
  442d72:	pop    ebp
  442d73:	icebp  
  442d74:	mov    ecx,0x83659fc3
  442d79:	push   edx
  442d7a:	sub    eax,0x1c9fdd18
  442d7f:	dec    BYTE PTR [eax+0xf1aee70]
  442d85:	mov    BYTE PTR [ecx+0x704b8c39],cl
  442d8b:	inc    ebx
  442d8c:	lea    esp,[ecx+ecx*1+0x69]
  442d90:	mov    bl,0xfb
  442d92:	ins    BYTE PTR es:[edi],dx
  442d93:	push   edx
  442d94:	sub    DWORD PTR [ecx],esi
  442d96:	stos   DWORD PTR es:[edi],eax
  442d97:	aad    0x38
  442d99:	repnz out dx,al
  442d9b:	clc    
  442d9c:	adc    al,0xe4
  442d9e:	out    dx,eax
  442d9f:	sbb    BYTE PTR [esi],bl
  442da1:	mov    bh,BYTE PTR [eax+0xe]
  442da4:	cld    
  442da5:	pop    ds
  442da6:	pop    ebp
  442da7:	pop    ss
  442da8:	(bad)  
  442da9:	aad    0x4d
  442dab:	and    DWORD PTR [ecx],0xf16334aa
  442db1:	jge    0x442da9
  442db3:	jg     0x442d6c
  442db5:	add    edi,edx
  442db7:	cli    
  442db8:	sbb    dl,BYTE PTR [esp]
  442dbb:	pop    ebx
  442dbc:	lea    eax,[ebx-0x37]
  442dbf:	rep stos DWORD PTR es:[edi],eax
  442dc1:	and    ah,BYTE PTR [eax+edx*8]
  442dc4:	icebp  
  442dc5:	out    dx,eax
  442dc6:	xor    eax,0x7c60797b
  442dcb:	lods   al,BYTE PTR ds:[esi]
  442dcc:	ja     0x442d58
  442dce:	popa   
  442dcf:	jmp    0x442def
  442dd1:	mov    BYTE PTR [edx-0x73],cl
  442dd4:	pop    ds
  442dd5:	push   eax
  442dd6:	add    BYTE PTR [edi-0x423e4919],0x92
  442ddd:	call   0x230b:0x7bbc15ed
  442de4:	jle    0x442e00
  442de6:	ret    0xebc1
  442de9:	je     0x442d9c
  442deb:	int3   
  442dec:	mov    dl,0x4a
  442dee:	int3   
  442def:	mov    esi,0x2fcd162e
  442df4:	jb     0x442e4f
  442df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442df7:	mov    al,0x43
  442df9:	jno    0x442e2d
  442dfb:	mov    ecx,0x4c834abd
  442e00:	pop    es
  442e01:	add    ebx,DWORD PTR [ebx]
  442e03:	inc    ecx
  442e04:	push   ss
  442e05:	or     bl,BYTE PTR [ebx+eiz*1+0x29]
  442e09:	pop    es
  442e0a:	loope  0x442d95
  442e0c:	int    0x9
  442e0e:	ja     0x442e77
  442e10:	pusha  
  442e11:	sub    eax,0xd646fa63
  442e16:	fild   WORD PTR [edi]
  442e18:	mov    cl,0x12
  442e1a:	push   edi
  442e1b:	sub    al,dl
  442e1d:	daa    
  442e1e:	adc    esi,DWORD PTR [ecx+0x78]
  442e21:	out    dx,eax
  442e22:	cs adc eax,0x3415259a
  442e28:	mov    dh,0xd8
  442e2a:	xchg   esp,eax
  442e2b:	je     0x442de4
  442e2d:	sbb    al,0x3e
  442e2f:	enter  0x7d61,0xde
  442e33:	ja     0x442e8c
  442e35:	cmp    eax,0x7cb0ab3f
  442e3a:	xchg   ecx,eax
  442e3b:	xchg   edx,eax
  442e3c:	aad    0x97
  442e3e:	xor    DWORD PTR [esi+eax*8],esp
  442e41:	fstp   TBYTE PTR [edx+esi*1+0x56efbf20]
  442e48:	clc    
  442e49:	aaa    
  442e4a:	push   edi
  442e4b:	sub    BYTE PTR [ecx],dl
  442e4d:	loope  0x442de1
  442e4f:	or     dh,dl
  442e51:	xor    bl,cl
  442e53:	lods   eax,DWORD PTR ds:[esi]
  442e54:	test   DWORD PTR [esi+ebp*1+0x7e],esp
  442e58:	add    eax,0xba3c44b5
  442e5d:	adc    dh,BYTE PTR [esi]
  442e5f:	xor    BYTE PTR [edx+0x35a25],al
  442e65:	xor    BYTE PTR [edx+ebx*2-0x1c],cl
  442e69:	inc    esi
  442e6a:	pop    eax
  442e6b:	push   es
  442e6c:	aaa    
  442e6d:	mov    al,0xab
  442e6f:	jno    0x442ea5
  442e71:	scas   al,BYTE PTR es:[edi]
  442e72:	leave  
  442e73:	mov    bl,0x6c
  442e75:	call   0x65ac8868
  442e7a:	jg     0x442e21
  442e7c:	jnp    0x442ed5
  442e7e:	sbb    DWORD PTR [esi+ecx*8],edi
  442e81:	xor    DWORD PTR [ebp-0x43afb7ef],0xdf1af6c7
  442e8b:	icebp  
  442e8c:	popa   
  442e8d:	(bad)  [eax-0x30]
  442e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442e91:	sub    al,0xa2
  442e93:	sbb    edx,eax
  442e95:	and    DWORD PTR [ebx],eax
  442e97:	add    al,0xff
  442e99:	repz scas al,BYTE PTR es:[edi]
  442e9b:	sti    
  442e9c:	cmp    BYTE PTR cs:[edi-0x7],bh
  442ea0:	loop   0x442eb5
  442ea2:	nop
  442ea3:	ror    ch,cl
  442ea5:	cmp    cl,BYTE PTR [ebx]
  442ea7:	jbe    0x442efe
  442ea9:	inc    edi
  442eaa:	xchg   ecx,eax
  442eab:	xchg   esi,eax
  442eac:	xchg   dh,al
  442eae:	iret   
  442eaf:	cmc    
  442eb0:	add    BYTE PTR [ecx],bl
  442eb2:	xchg   ebx,eax
  442eb3:	jno    0x442f08
  442eb5:	dec    edx
  442eb6:	xlat   BYTE PTR ds:[ebx]
  442eb7:	out    dx,eax
  442eb8:	adc    eax,0x4189a246
  442ebd:	jne    0x442f28
  442ebf:	xor    eax,0x7c54cd5c
  442ec4:	xor    dh,BYTE PTR [ebx]
  442ec6:	xchg   edx,eax
  442ec7:	daa    
  442ec8:	idiv   DWORD PTR [edx+0x2292fd1b]
  442ece:	mov    al,ds:0x3599a1c2
  442ed3:	sub    dl,BYTE PTR [edi-0xb]
  442ed6:	inc    ebp
  442ed7:	call   0x3752:0x3c6a9dcf
  442ede:	imul   ecx,DWORD PTR [ebp-0x6],0x1b
  442ee2:	or     eax,0xae2f193b
  442ee7:	sub    DWORD PTR [ebx],edx
  442ee9:	xor    DWORD PTR [edi-0x30],eax
  442eec:	xchg   bl,bh
  442eee:	jo     0x442f01
  442ef0:	adc    eax,0x32fbf861
  442ef5:	retf   
  442ef6:	jge    0x442eb9
  442ef8:	xlat   BYTE PTR ds:[ebx]
  442ef9:	mov    al,ds:0x1a5b281c
  442efe:	fcom   st(0)
  442f00:	and    eax,0x28726d27
  442f05:	cld    
  442f06:	xchg   esi,eax
  442f07:	cmp    eax,0xdd7940b9
  442f0c:	mov    ebp,0xac81288
  442f11:	aam    0x90
  442f13:	ror    BYTE PTR [eax+0x17],cl
  442f16:	sti    
  442f17:	adc    DWORD PTR [esi],esi
  442f19:	sbb    eax,0xc897d9a9
  442f1e:	cmp    ch,BYTE PTR [ecx-0x799dc0f1]
  442f24:	test   eax,0x57f84453
  442f29:	outs   dx,BYTE PTR ds:[esi]
  442f2a:	jmp    0x442f3d
  442f2c:	add    BYTE PTR ds:0xa204c2a6,ah
  442f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442f33:	shl    BYTE PTR [esi-0x32fd699c],0xc3
  442f3a:	hlt    
  442f3b:	sbb    al,0xb7
  442f3d:	es or  cl,bl
  442f40:	adc    dl,0x95
  442f43:	lds    esi,FWORD PTR [bx+di-0x46]
  442f47:	or     esi,DWORD PTR [ecx-0x25]
  442f4a:	fcmovnb st,st(3)
  442f4c:	sbb    al,0xab
  442f4e:	jge    0x442f8d
  442f50:	int    0xf6
  442f52:	add    DWORD PTR [esi+0x779dd0d2],esi
  442f58:	shl    BYTE PTR [ebp+edi*8-0x11],cl
  442f5c:	jge    0x442fa7
  442f5e:	outs   dx,BYTE PTR ds:[esi]
  442f5f:	cmp    eax,DWORD PTR ss:[eax-0x68]
  442f63:	xor    eax,0xd4bc80a3
  442f68:	dec    ebx
  442f69:	(bad)  
  442f6a:	nop
  442f6b:	fwait
  442f6c:	out    0xdb,al
  442f6e:	aas    
  442f6f:	ja     0x442f12
  442f71:	mov    edi,0x80b6962f
  442f76:	mov    eax,ds:0x4eb36458
  442f7b:	in     al,dx
  442f7c:	or     eax,0x3542dcfa
  442f81:	sahf   
  442f82:	and    al,0xc3
  442f84:	and    al,0x59
  442f86:	lods   eax,DWORD PTR ds:[esi]
  442f87:	mov    ch,0xaa
  442f89:	mov    bl,0xe
  442f8b:	aam    0xfb
  442f8d:	repnz clc 
  442f8f:	add    bh,dl
  442f91:	dec    BYTE PTR [edi-0x75649671]
  442f97:	ret    
  442f98:	mov    edx,0x104310cd
  442f9d:	lock imul edi,DWORD PTR [ebx+0x19],0x7b3d0edc
  442fa5:	fs loopne 0x442f9e
  442fa8:	(bad)  
  442fa9:	cld    
  442faa:	push   eax
  442fab:	(bad)  
  442fac:	popa   
  442fad:	(bad)  
  442fae:	fdivrp st(1),st
  442fb0:	add    DWORD PTR [ecx+0x1fea3dc3],eax
  442fb6:	retf   0xb1dd
  442fb9:	dec    ebx
  442fba:	sub    DWORD PTR [edi],ebp
  442fbc:	jo     0x44300d
  442fbe:	retf   0xae31
  442fc1:	mov    ebx,0x55c03e2b
  442fc6:	mov    eax,ds:0x5f4f4f19
  442fcb:	nop
  442fcc:	xor    al,0xec
  442fce:	test   BYTE PTR [ecx-0x28],bh
  442fd1:	xchg   DWORD PTR [ebp-0x2d],ebx
  442fd4:	jne    0x442ffd
  442fd6:	jne    0x442fd0
  442fd8:	sub    BYTE PTR [edx+0x7b4fd200],0x9a
  442fdf:	sbb    eax,DWORD PTR [edi+0x13]
  442fe2:	fcmovnb st,st(5)
  442fe4:	push   esi
  442fe5:	adc    BYTE PTR [ecx-0x43],dh
  442fe8:	dec    esi
  442fe9:	and    ebp,DWORD PTR ds:0xde8ec4a1
  442fef:	xchg   esi,eax
  442ff0:	mov    ebp,0x642111cc
  442ff5:	or     eax,0x618e0077
  442ffa:	sar    BYTE PTR [esi+edi*1-0x4b],cl
  442ffe:	jmp    0xb24d64c6
  443003:	scas   al,BYTE PTR es:[edi]
  443004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443005:	idiv   DWORD PTR ds:0xc6f91d70
  44300b:	cmp    BYTE PTR [eax-0x46261e78],bl
  443011:	sbb    DWORD PTR [ebx],esp
  443013:	cmp    al,BYTE PTR ds:0x8a88f827
  443019:	add    ebx,DWORD PTR ds:[esi-0x70]
  44301d:	or     dl,ch
  44301f:	loopne 0x443036
  443021:	aad    0xcf
  443023:	adc    ch,BYTE PTR [edi-0x321e5a30]
  443029:	ins    DWORD PTR es:[edi],dx
  44302a:	inc    eax
  44302b:	pop    es
  44302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44302d:	call   DWORD PTR [ebx+0x64851d9b]
  443033:	cs call 0xd21b0c93
  443039:	xlat   BYTE PTR ds:[ebx]
  44303a:	es js  0x44309e
  44303d:	add    al,0x0
  44303f:	mov    ch,0x8a
  443041:	and    eax,0x89e5aa25
  443046:	xchg   esp,eax
  443047:	stc    
  443048:	arpl   WORD PTR [eax],dx
  44304a:	lahf   
  44304b:	scas   eax,DWORD PTR es:[edi]
  44304c:	mov    dl,0x62
  44304e:	mov    bh,0xa0
  443050:	lea    eax,[edi+ecx*4-0x270080e8]
  443057:	in     eax,dx
  443058:	in     al,dx
  443059:	fwait
  44305a:	loope  0x44306f
  44305c:	cld    
  44305d:	adc    edi,DWORD PTR ds:0x8e377855
  443063:	mov    esi,0x1ba1f7f2
  443068:	mov    eax,0xd99f2d46
  44306d:	stc    
  44306e:	jle    0x443037
  443070:	hlt    
  443071:	or     ebp,DWORD PTR [ebx+0x6e445704]
  443077:	cmp    eax,DWORD PTR [ecx]
  443079:	add    ah,BYTE PTR [eax-0x1c]
  44307c:	jp     0x4430fc
  44307e:	lods   eax,DWORD PTR ds:[esi]
  44307f:	stos   BYTE PTR es:[edi],al
  443080:	mov    ?,WORD PTR [esi-0x67c6fe58]
  443086:	hlt    
  443087:	or     al,0x76
  443089:	mov    esp,ebp
  44308b:	mov    dh,bh
  44308d:	push   ss
  44308e:	pop    eax
  44308f:	push   ds
  443090:	jns    0x44301c
  443092:	out    dx,al
  443093:	hlt    
  443094:	add    edi,ebp
  443096:	aas    
  443097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443098:	ror    BYTE PTR [ebp+0x582b6f80],1
  44309e:	inc    ebp
  44309f:	xchg   edi,eax
  4430a0:	adc    ecx,eax
  4430a2:	loope  0x443090
  4430a4:	mov    BYTE PTR [eax],bh
  4430a6:	out    0x5b,eax
  4430a8:	shr    DWORD PTR [ebx+0x5b04f20d],1
  4430ae:	(bad)  
  4430af:	cli    
  4430b0:	lea    edx,[esp+ebx*8]
  4430b3:	rol    bh,cl
  4430b5:	pop    ebx
  4430b6:	xor    al,0x12
  4430b8:	ret    
  4430b9:	enter  0x2bc1,0x25
  4430bd:	addr16 pop edi
  4430bf:	cdq    
  4430c0:	cmp    eax,ebp
  4430c2:	jbe    0x443124
  4430c4:	inc    ebx
  4430c5:	mov    DWORD PTR [esi],esp
  4430c7:	mov    al,0xfb
  4430c9:	clc    
  4430ca:	test   ebx,ecx
  4430cc:	push   esp
  4430cd:	cmp    bh,dl
  4430cf:	adc    bh,BYTE PTR [ebx-0x12]
  4430d2:	cld    
  4430d3:	nop
  4430d4:	int3   
  4430d5:	xrelease mov DWORD PTR [edi+0x0],eax
  4430d9:	and    eax,0x22ff6271
  4430de:	or     ecx,esi
  4430e0:	cmp    DWORD PTR [eax],edi
  4430e2:	mov    edx,eax
  4430e4:	lea    eax,[edx]
  4430e6:	add    BYTE PTR [eax-0x2a],ch
  4430e9:	repz mov fs,WORD PTR [edx+0x5c1420ba]
  4430f0:	push   es
  4430f1:	add    BYTE PTR [edx],ch
  4430f3:	mov    esp,0x7317284d
  4430f8:	into   
  4430f9:	mov    dl,0x3e
  4430fb:	add    esi,DWORD PTR [ecx+ecx*8-0x48312ee3]
  443102:	cmp    esi,DWORD PTR [ebx-0x292b19d4]
  443108:	and    DWORD PTR [ebx-0x40],ecx
  44310b:	les    esp,FWORD PTR [ebx+0x16]
  44310e:	add    eax,0xf31d0056
  443113:	push   DWORD PTR [edi-0x25]
  443116:	pop    ebx
  443117:	ins    BYTE PTR es:[edi],dx
  443118:	jmp    0x4430eb
  44311a:	mov    bh,ah
  44311c:	or     al,0x6
  44311e:	mov    bl,0x2e
  443120:	fdiv   DWORD PTR [eax+0x6b]
  443123:	cmp    dl,cl
  443125:	inc    edi
  443126:	xor    BYTE PTR ds:0xe0ff40d4,ch
  44312c:	mov    BYTE PTR [ebx-0x7e013994],ah
  443132:	retf   0xcff4
  443135:	add    edi,DWORD PTR [esi+0xd]
  443138:	leave  
  443139:	mov    al,ds:0xce91ab40
  44313e:	mov    ebx,0xfed0d9ca
  443143:	cmp    eax,0xbfcd1fb
  443148:	or     al,0xea
  44314a:	mov    edi,0xd74e41a
  44314f:	xchg   dh,bl
  443151:	mov    ds:0xe0f32945,eax
  443156:	mov    ch,0xbd
  443158:	fstp   DWORD PTR [ebx+eax*2-0x5247c022]
  44315f:	adc    DWORD PTR [edx],ebx
  443161:	out    dx,al
  443162:	add    ebx,DWORD PTR [edx+ecx*1]
  443165:	ror    ebp,0x2
  443168:	cmp    al,BYTE PTR [eax+esi*1-0x39f9871c]
  44316f:	push   edx
  443170:	fild   WORD PTR [eax-0x5736ecea]
  443176:	and    esi,DWORD PTR [edx+0x4c]
  443179:	sub    ah,BYTE PTR [ebp+0x6e3f0f04]
  44317f:	sub    bh,BYTE PTR [edi+0x15cb7fe0]
  443185:	inc    edx
  443186:	fwait
  443187:	pusha  
  443188:	call   0x1c75:0xba80341
  44318f:	mov    bh,0x5c
  443191:	int    0xc8
  443193:	mov    al,0x9e
  443195:	push   ss
  443196:	pop    ss
  443197:	lock mov ds:0xad85b01c,eax
  44319d:	lock aad 0x99
  4431a0:	jnp    0x4431c3
  4431a2:	sbb    ebx,DWORD PTR [ebx+0x5]
  4431a5:	js     0x443175
  4431a7:	ins    DWORD PTR es:[edi],dx
  4431a8:	push   ecx
  4431a9:	repz and dh,BYTE PTR [edx+0x6ba73ef4]
  4431b0:	push   cs
  4431b1:	cwde   
  4431b2:	mov    dh,BYTE PTR [edi-0x8]
  4431b5:	push   es
  4431b6:	pop    ebp
  4431b7:	mov    bl,0x2e
  4431b9:	dec    esi
  4431ba:	fadd   QWORD PTR [edx]
  4431bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4431bd:	jno    0x4431dd
  4431bf:	inc    ecx
  4431c0:	stc    
  4431c1:	jp     0x443233
  4431c3:	imul   edx,edx,0x9cbf340c
  4431c9:	mov    esp,0x3f669777
  4431ce:	call   0x44b2:0x509f1bfd
  4431d5:	inc    esp
  4431d6:	mov    BYTE PTR [esi-0xe],0xf
  4431da:	fistp  WORD PTR [ecx]
  4431dc:	pop    ebx
  4431dd:	add    bh,dh
  4431df:	mov    al,0x2f
  4431e1:	cmp    eax,0xc8002194
  4431e6:	sub    bl,BYTE PTR [ecx+0x1206ee09]
  4431ec:	sub    al,0x44
  4431ee:	test   DWORD PTR [esi+0x64c7d32a],0x23c1d51a
  4431f8:	sub    eax,0x92b735e
  4431fd:	add    DWORD PTR ds:0xe2f6f91e,0x5
  443204:	adc    bh,BYTE PTR [ecx]
  443206:	inc    edx
  443207:	sbb    DWORD PTR [ebx+eax*4-0xb6e276c],esi
  44320e:	and    dh,ah
  443210:	stos   DWORD PTR es:[edi],eax
  443211:	scas   eax,DWORD PTR es:[edi]
  443212:	in     eax,0x1b
  443214:	cmp    bl,BYTE PTR [eax+0x750f1eb]
  44321a:	fnstcw WORD PTR [edx]
  44321c:	ficom  WORD PTR [ebp+0x3586a262]
  443222:	dec    ebp
  443223:	gs rol ah,1
  443226:	lods   eax,DWORD PTR ds:[esi]
  443227:	pusha  
  443228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443229:	sar    BYTE PTR [ebp-0x7e],cl
  44322c:	and    BYTE PTR [edx+0x3a8e2f08],0x4
  443233:	fidiv  DWORD PTR [ebp-0x6d]
  443236:	lock pop ds
  443238:	packsswb mm7,QWORD PTR [edx+0x2b]
  44323c:	sbb    bh,ch
  44323e:	push   eax
  44323f:	dec    edi
  443240:	xchg   dh,dh
  443242:	ffree  st(3)
  443244:	jge    0x443237
  443246:	gs out dx,eax
  443248:	call   0x4911d0b4
  44324d:	pop    esp
  44324e:	sub    DWORD PTR [eax+0x6959e9f2],0xb40a6d0a
  443258:	test   al,0xd6
  44325a:	fisubr WORD PTR [edx+ebp*2-0x56]
  44325e:	cmp    eax,0x52682a31
  443263:	dec    esi
  443264:	mov    al,ds:0xc112fcd1
  443269:	loope  0x4431ef
  44326b:	out    dx,eax
  44326c:	cld    
  44326d:	dec    ecx
  44326e:	inc    DWORD PTR [ebx]
  443270:	hlt    
  443271:	ror    DWORD PTR [edx+0x21ebd35],cl
  443277:	pop    esp
  443278:	add    DWORD PTR [eax+ecx*1+0x31c6cd14],esi
  44327f:	dec    esi
  443281:	jo     0x44321e
  443283:	add    dh,BYTE PTR [ebp-0x29]
  443286:	sbb    DWORD PTR [esi+0x5d06f2f3],ecx
  44328c:	xchg   ebx,eax
  44328d:	jno    0x4432c4
  44328f:	push   ss
  443290:	int3   
  443291:	xchg   esp,eax
  443292:	sbb    DWORD PTR [ecx+edx*1],eax
  443295:	xchg   edx,eax
  443296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443297:	mov    ebx,0xcd22b70f
  44329c:	ret    0xc06b
  44329f:	xchg   edx,eax
  4432a0:	jl     0x4432e5
  4432a2:	ins    DWORD PTR es:[edi],dx
  4432a3:	xchg   edi,eax
  4432a4:	inc    ecx
  4432a5:	jo     0x44328f
  4432a7:	mov    dl,0x8b
  4432a9:	pop    ebx
  4432aa:	adc    al,0x43
  4432ac:	(bad)  
  4432ad:	xchg   edx,eax
  4432ae:	sbb    bl,dh
  4432b0:	jo     0x44328e
  4432b2:	int    0xd2
  4432b4:	push   0xc821ff17
  4432b9:	daa    
  4432ba:	sub    cl,BYTE PTR [ebx]
  4432bc:	inc    edi
  4432bd:	lods   al,BYTE PTR ds:[esi]
  4432be:	xchg   ebx,eax
  4432bf:	nop
  4432c0:	jbe    0x443247
  4432c2:	mov    esi,0x93fbb600
  4432c7:	std    
  4432c8:	push   ecx
  4432c9:	out    dx,al
  4432ca:	test   dl,dl
  4432cc:	mov    edx,0x11ddddfe
  4432d1:	aam    0xf8
  4432d3:	fcom   DWORD PTR fs:[edx+0x635adc86]
  4432da:	outs   dx,DWORD PTR ds:[esi]
  4432db:	jne    0x44334e
  4432dd:	and    BYTE PTR [edi+0x2395fcf7],al
  4432e3:	xor    al,0x55
  4432e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4432e6:	push   eax
  4432e7:	push   eax
  4432e8:	sub    ah,BYTE PTR [ebx]
  4432ea:	jbe    0x443298
  4432ec:	lea    edx,[eax+0x66]
  4432ef:	daa    
  4432f0:	jmp    0x4432e9
  4432f2:	mov    dh,0x57
  4432f4:	mov    ebx,gs
  4432f6:	mov    BYTE PTR [ecx],al
  4432f8:	stos   DWORD PTR es:[edi],eax
  4432f9:	cmc    
  4432fa:	push   esi
  4432fb:	pop    edi
  4432fc:	(bad)  
  4432fd:	mov    esp,0xb1f8d65b
  443302:	pop    eax
  443303:	or     esp,0xc41fa1f4
  443309:	add    al,0x75
  44330b:	aam    0xbb
  44330d:	mov    bl,BYTE PTR [ebx+esi*4]
  443310:	jmp    0x5f8e7f84
  443315:	mov    bl,0x15
  443317:	add    BYTE PTR [ebp-0x6e],al
  44331a:	fidivr DWORD PTR [eax]
  44331c:	push   ebp
  44331d:	aaa    
  44331e:	mov    ch,0xa6
  443320:	adc    ecx,edx
  443322:	and    al,0x15
  443324:	sbb    esi,DWORD PTR [ebx-0x35354b96]
  44332a:	push   0x2eac390d
  44332f:	test   BYTE PTR [ebx+0x47332cec],al
  443335:	jo     0x4432d3
  443337:	stc    
  443338:	fld    QWORD PTR [edi]
  44333a:	(bad)  
  44333b:	push   0xffffff96
  44333d:	add    BYTE PTR [ecx],0xed
  443340:	add    dl,ah
  443342:	clc    
  443343:	mov    ah,0xd
  443345:	dec    ebp
  443346:	lahf   
  443347:	pusha  
  443348:	mov    eax,ds:0x8766f3e5
  44334d:	sbb    dl,cl
  44334f:	pusha  
  443350:	popf   
  443351:	push   ds
  443352:	vpinsrw xmm7,xmm2,ebp,0x22
  443357:	xchg   edi,eax
  443358:	dec    esp
  443359:	sbb    eax,0xb8c15e38
  44335e:	ja     0x44334e
  443360:	cs in  al,dx
  443362:	rol    BYTE PTR [ecx],0xee
  443365:	not    BYTE PTR [ebx+0x35]
  443368:	push   edx
  443369:	arpl   WORD PTR [edi-0x41],sp
  44336c:	add    eax,0x25826787
  443371:	mov    ds,WORD PTR [eax-0x61454d1b]
  443377:	(bad)  
  443378:	out    dx,al
  443379:	pop    ss
  44337a:	test   DWORD PTR [ebx-0x58a4cfb4],edi
  443380:	idiv   al
  443382:	(bad)  
  443383:	push   esi
  443384:	jl     0x4433a6
  443386:	xor    ebp,DWORD PTR [eax+edx*2-0x1696fffe]
  44338d:	out    0x35,al
  44338f:	jg     0x443321
  443391:	jnp    0x443341
  443393:	inc    ebx
  443394:	push   edi
  443395:	iret   
  443396:	add    DWORD PTR [ebx+edi*2],esi
  443399:	mov    al,ds:0xbc046a0f
  44339e:	jb     0x443372
  4433a0:	cmp    esi,DWORD PTR ds:[edi+0x20]
  4433a4:	mov    ?,ebx
  4433a6:	xchg   ecx,eax
  4433a7:	jae    0x443333
  4433a9:	mov    esp,0x5a94150f
  4433ae:	push   edi
  4433af:	in     eax,0x6a
  4433b1:	mov    ecx,edi
  4433b3:	cwde   
  4433b4:	push   0xd86febe7
  4433b9:	stos   DWORD PTR es:[edi],eax
  4433ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4433bb:	adc    DWORD PTR [ebx+0x50],eax
  4433be:	adc    cl,dh
  4433c0:	jne    0x443364
  4433c2:	ds push edi
  4433c4:	daa    
  4433c5:	inc    edi
  4433c6:	mov    edi,0x9d790f0f
  4433cb:	pop    ebx
  4433cc:	push   cs
  4433cd:	scas   eax,DWORD PTR es:[edi]
  4433ce:	mov    dh,0xd2
  4433d0:	loopne 0x4433d4
  4433d2:	mov    eax,ds:0x289f5fc4
  4433d7:	ror    DWORD PTR [edx-0x5dc635aa],cl
  4433dd:	mov    esi,0xf9ae9dc6
  4433e2:	jle    0x4433f4
  4433e4:	sbb    bl,BYTE PTR [esi+0x47]
  4433e7:	ins    DWORD PTR es:[edi],dx
  4433e8:	lea    ebp,cs:[eax]
  4433eb:	mov    edx,gs
  4433ed:	fmul   st,st(2)
  4433ef:	scas   al,BYTE PTR es:[edi]
  4433f0:	fcomp  DWORD PTR [eax+0x58]
  4433f3:	lahf   
  4433f4:	mov    ebx,0x3f41601
  4433f9:	fidivr WORD PTR [esi*2-0x5d5d5be7]
  443400:	xchg   DWORD PTR [esi-0x3b],ecx
  443403:	mov    dl,0xdc
  443405:	(bad)
  443408:	add    eax,0xe6b8f22a
  44340d:	push   cs
  44340e:	cmp    ebx,DWORD PTR [edi+0x11375e48]
  443414:	mov    esp,0x30f427f6
  443419:	jle    0x443401
  44341b:	cwde   
  44341c:	stc    
  44341d:	inc    esp
  44341e:	cmp    eax,DWORD PTR [esi]
  443420:	mov    ch,0xa1
  443422:	pop    es
  443423:	dec    esi
  443424:	ror    DWORD PTR [ecx+0x3b7e5e56],0x91
  44342b:	pushf  
  44342c:	sbb    eax,0x6e61e87e
  443431:	jne    0x4433d1
  443433:	inc    ecx
  443434:	(bad)  
  443435:	leave  
  443436:	cli    
  443437:	lock mov ds:0x6a32d1ca,eax
  44343d:	popf   
  44343e:	inc    ebp
  44343f:	mov    ah,0xd3
  443441:	dec    esp
  443442:	not    DWORD PTR [eax]
  443444:	push   esi
  443445:	adc    eax,DWORD PTR [edi+edi*8]
  443448:	add    BYTE PTR [esi+0x28],al
  44344b:	icebp  
  44344c:	dec    esi
  44344d:	mov    WORD PTR [edx+edi*2+0x7722c6ce],?
  443454:	sub    cl,BYTE PTR [ebx+0x6b99d2fa]
  44345a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44345b:	cmp    BYTE PTR [ecx],bh
  44345d:	pop    esi
  44345e:	cmp    ah,dh
  443460:	add    ebp,eax
  443462:	inc    esp
  443463:	mov    esi,0xe069c135
  443468:	fucomi st,st(0)
  44346a:	sbb    edi,ecx
  44346c:	cmp    eax,DWORD PTR [edi]
  44346e:	inc    ebx
  44346f:	rcl    BYTE PTR [eax],0xc2
  443472:	adc    DWORD PTR [ecx+0x7c],ebx
  443475:	fldenv [ebp+ecx*4-0x1755c7b3]
  44347c:	hlt    
  44347d:	jbe    0x44344d
  44347f:	dec    esi
  443480:	or     al,0x76
  443482:	push   ebp
  443483:	mov    ebx,0xfce0209
  443488:	loop   0x443425
  44348a:	jnp    0x443481
  44348c:	adc    dl,ch
  44348e:	jl     0x44343a
  443490:	icebp  
  443491:	and    al,BYTE PTR [edi-0x47]
  443494:	xor    al,0x98
  443496:	ror    BYTE PTR [edi-0x226f2dcc],cl
  44349c:	mov    al,ds:0x34d4f220
  4434a1:	mov    ebp,0xca25cf11
  4434a6:	stc    
  4434a7:	dec    edx
  4434a8:	sbb    eax,0x8d47d013
  4434ad:	dec    esi
  4434ae:	aaa    
  4434af:	adc    dh,BYTE PTR [esi]
  4434b1:	push   cs
  4434b2:	jl     0x4434ab
  4434b4:	add    DWORD PTR [ebx+ebp*1+0x2b327b1f],edx
  4434bb:	popa   
  4434bc:	loope  0x44343f
  4434be:	mov    al,0xe7
  4434c0:	lea    ecx,[ebp+0x64]
  4434c3:	pop    ebp
  4434c4:	ins    BYTE PTR es:[edi],dx
  4434c5:	das    
  4434c6:	dec    esp
  4434c7:	jle    0x4434c4
  4434c9:	push   ebx
  4434ca:	cmp    al,0x1e
  4434cc:	inc    ecx
  4434cd:	loop   0x4434f0
  4434cf:	jmp    0x5bd8:0x45dcf6e3
  4434d6:	sub    bl,BYTE PTR [ebp-0xa]
  4434d9:	pusha  
  4434da:	fld    TBYTE PTR [ebp+0x1267387]
  4434e0:	or     esp,DWORD PTR [esi-0x2103f8ee]
  4434e6:	mov    esp,0x92554191
  4434eb:	cld    
  4434ec:	xor    eax,0x3e804f3d
  4434f1:	div    BYTE PTR [edi-0x12e0e3]
  4434f7:	xchg   edi,eax
  4434f8:	jmp    0x4434e7
  4434fa:	push   ebp
  4434fb:	mov    ecx,0xfe477105
  443500:	out    dx,eax
  443501:	adc    DWORD PTR [ebp-0x62],edx
  443504:	not    al
  443506:	sbb    al,0xe5
  443508:	xor    DWORD PTR [edi+edi*2+0x31],ebx
  44350c:	nop
  44350d:	pop    edi
  44350e:	mov    edi,0x451d3276
  443513:	add    DWORD PTR [ecx-0x46],0xffffffc9
  443517:	int    0x3e
  443519:	pop    es
  44351a:	adc    eax,0x7972f73e
  44351f:	shl    DWORD PTR [ebx+0x1777cf6f],cl
  443525:	pop    ecx
  443526:	push   esp
  443527:	cmp    al,0x74
  443529:	push   0x5b
  44352b:	sub    al,0xb1
  44352d:	setae  BYTE PTR [ebp+0x150e65b8]
  443534:	jmp    0x4434df
  443536:	int    0xd2
  443538:	or     eax,0x1bc3cc50
  44353d:	punpckhwd mm1,QWORD PTR [eax+ebp*8-0x396bca45]
  443545:	addr16 hlt 
  443547:	adc    dh,al
  443549:	dec    ebx
  44354a:	aam    0x42
  44354c:	rcr    edx,0xd0
  44354f:	test   al,0x5e
  443551:	sub    BYTE PTR ds:0x24b4284d,ch
  443557:	xchg   ebx,eax
  443558:	fisttp DWORD PTR [ebx]
  44355a:	pop    ds
  44355b:	or     eax,0xd7969bb
  443560:	lods   eax,DWORD PTR ds:[esi]
  443561:	(bad)  
  443562:	ds mov eax,0x1edeab9b
  443568:	scas   eax,DWORD PTR es:[edi]
  443569:	out    dx,eax
  44356a:	stc    
  44356b:	jno    0x443572
  44356d:	cmp    BYTE PTR [edx],0xff
  443570:	dec    esi
  443571:	mov    esp,0x7b718adf
  443576:	or     BYTE PTR [edi+0xf],ch
  443579:	adc    al,0xe5
  44357b:	cli    
  44357c:	xlat   BYTE PTR ds:[ebx]
  44357d:	pop    ebx
  44357e:	adc    BYTE PTR [ecx-0x122f29e],al
  443584:	aaa    
  443585:	mov    eax,ds:0x87557fe1
  44358a:	aad    0x29
  44358c:	ret    
  44358d:	xchg   BYTE PTR [edi],ch
  44358f:	jmp    0x4435ee
  443591:	(bad)  
  443592:	cdq    
  443593:	cmp    BYTE PTR [ecx],dl
  443595:	fsub   st,st(2)
  443597:	in     eax,0x1
  443599:	scas   al,BYTE PTR es:[edi]
  44359a:	loop   0x4435a5
  44359c:	mov    ds:0xf565f51f,eax
  4435a1:	push   0xd9ef7d43
  4435a6:	and    al,0x6b
  4435a8:	out    0x5a,al
  4435aa:	add    ebp,DWORD PTR [ecx-0x5b59042f]
  4435b0:	cwde   
  4435b1:	mov    dh,0xc3
  4435b3:	sub    DWORD PTR [edx],eax
  4435b5:	int    0x89
  4435b7:	inc    ecx
  4435b8:	or     bl,ch
  4435ba:	aaa    
  4435bb:	and    eax,0x554e7d49
  4435c0:	mul    BYTE PTR [ecx-0x797710fd]
  4435c6:	shr    BYTE PTR [esi],cl
  4435c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4435c9:	pop    es
  4435ca:	mov    WORD PTR [edx+0x50],?
  4435cd:	clc    
  4435ce:	mov    edx,0xc7b52a2c
  4435d3:	fadd   QWORD PTR [ebx]
  4435d5:	popa   
  4435d6:	mov    dl,0xed
  4435d8:	dec    edx
  4435d9:	and    al,0x4b
  4435db:	adc    BYTE PTR [ebx+0x349fdb00],bh
  4435e1:	pusha  
  4435e2:	push   esp
  4435e3:	jmp    0x7105:0x3193efbf
  4435ea:	dec    ebp
  4435eb:	int3   
  4435ec:	test   bl,al
  4435ee:	loopne 0x44357c
  4435f0:	cld    
  4435f1:	jle    0x443656
  4435f3:	jcxz   0x4435f4
  4435f6:	es sub al,0x6f
  4435f9:	(bad)  
  4435fa:	outs   dx,DWORD PTR ds:[esi]
  4435fb:	push   ds
  4435fc:	pop    ebx
  4435fd:	xor    bl,BYTE PTR [ebx]
  4435ff:	out    0x58,eax
  443601:	mov    dl,0x1
  443603:	mov    ss,WORD PTR [edi-0x406d0e8a]
  443609:	inc    edi
  44360a:	mov    bh,0xba
  44360c:	jp     0x44361e
  44360e:	add    bl,dh
  443610:	adc    eax,0x73ee58b5
  443615:	push   ecx
  443616:	xor    eax,0x87e702d0
  44361b:	xor    BYTE PTR [bx+di],ch
  44361e:	pop    ds
  44361f:	inc    eax
  443620:	inc    edi
  443621:	xor    esp,DWORD PTR [eax-0x31]
  443624:	push   ecx
  443625:	repnz and bh,BYTE PTR ds:0x7889a2c9
  44362c:	(bad)  
  44362d:	jb     0x4435b7
  44362f:	cld    
  443630:	sbb    eax,ebp
  443632:	push   esi
  443633:	jl     0x443682
  443635:	sub    bh,bl
  443637:	test   al,0x79
  443639:	ins    DWORD PTR es:[edi],dx
  44363a:	xor    DWORD PTR [eax+0x11],edx
  44363d:	jecxz  0x4435da
  44363f:	or     edi,eax
  443641:	inc    edx
  443642:	push   0x2bc8e6a9
  443647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443648:	mov    bh,0x26
  44364a:	xor    eax,0xeb577643
  44364f:	ret    
  443650:	xor    BYTE PTR [ebx+0x4fa5da00],bl
  443656:	pop    es
  443657:	leave  
  443658:	mov    eax,ds:0x55d7c623
  44365d:	xchg   BYTE PTR [ebp+0x1a],ch
  443660:	call   0x3451575f
  443665:	sub    ecx,DWORD PTR [edi+0x24]
  443668:	scas   al,BYTE PTR es:[edi]
  443669:	ret    
  44366a:	retf   0x7032
  44366d:	loope  0x443626
  44366f:	cdq    
  443670:	adc    al,0x16
  443672:	(bad)  
  443673:	loopne 0x443684
  443675:	inc    edi
  443676:	or     DWORD PTR [ebp-0x7150a22],esi
  44367c:	mov    es,eax
  44367e:	pop    esi
  44367f:	icebp  
  443680:	sub    esi,edx
  443682:	mov    cl,0xd0
  443684:	es jecxz 0x4436bf
  443687:	sub    DWORD PTR [edx-0x39284bbd],0x51
  44368e:	je     0x443614
  443690:	fld    DWORD PTR [ebx+ebx*8-0x612d1278]
  443697:	enter  0xa981,0xd7
  44369b:	out    dx,al
  44369c:	int    0x71
  44369e:	aad    0xab
  4436a0:	loop   0x44367e
  4436a2:	push   ds
  4436a3:	jmp    0x4436f3
  4436a5:	out    0xd3,al
  4436a7:	out    dx,al
  4436a8:	pop    ecx
  4436a9:	popa   
  4436aa:	int    0x71
  4436ac:	scas   al,BYTE PTR es:[edi]
  4436ad:	and    DWORD PTR [ebx+eax*8-0x7],edx
  4436b1:	push   ds
  4436b2:	xchg   edi,eax
  4436b3:	mov    eax,?
  4436b5:	mov    bl,0x2b
  4436b7:	sub    ecx,DWORD PTR [eax+0x5615e73f]
  4436bd:	mov    eax,ds:0x7902643a
  4436c2:	or     eax,esi
  4436c4:	fisub  WORD PTR [edx+0x5669d885]
  4436ca:	shl    BYTE PTR [edi],1
  4436cc:	push   esp
  4436cd:	leave  
  4436ce:	or     cl,dh
  4436d0:	jnp    0x443743
  4436d2:	cmp    edi,DWORD PTR [ecx+0x52]
  4436d5:	cmc    
  4436d6:	xor    eax,0x8200329f
  4436db:	test   DWORD PTR [edx+0x606afc7d],ebx
  4436e1:	je     0x4436cd
  4436e3:	mov    ebx,0x4a6d1eb7
  4436e8:	jmp    0x3a07:0xe9c96735
  4436ef:	mov    esp,0xd0efd235
  4436f4:	js     0x443747
  4436f6:	add    dl,BYTE PTR ds:0x62857777
  4436fc:	in     eax,dx
  4436fd:	in     al,0xc9
  4436ff:	test   al,0xf4
  443701:	inc    edi
  443702:	push   0x14c4327c
  443707:	cmp    DWORD PTR [ebp-0x59],esi
  44370a:	jg     0x4436c6
  44370c:	add    DWORD PTR [edi+0x1e6130da],ebx
  443712:	out    dx,al
  443713:	push   ss
  443714:	adc    cl,BYTE PTR [ebx-0x21bf8e1c]
  44371a:	loopne 0x4436b1
  44371c:	adc    eax,0xaf2547dd
  443721:	push   esi
  443722:	lods   al,BYTE PTR ds:[esi]
  443723:	jg     0x443712
  443725:	popa   
  443726:	xchg   DWORD PTR [ecx+0x5752eb2b],ecx
  44372c:	inc    BYTE PTR [ebx+eax*8-0x61]
  443730:	cmp    al,0x88
  443732:	fs pop ebx
  443734:	jg     0x4436ec
  443736:	and    bh,BYTE PTR [ebp-0x51]
  443739:	ds jns 0x44374b
  44373c:	loopne 0x443790
  44373e:	pop    ss
  44373f:	stos   BYTE PTR es:[edi],al
  443740:	jmp    DWORD PTR [edx]
  443742:	pop    esp
  443743:	ss cs shl dl,cl
  443747:	sti    
  443748:	jb     0x443737
  44374a:	and    dh,ch
  44374c:	rcl    DWORD PTR [ebp-0x6890cdae],cl
  443752:	pushf  
  443753:	(bad)  
  443754:	push   ecx
  443755:	nop
  443756:	popf   
  443757:	test   DWORD PTR [edi-0x26],esp
  44375a:	(bad)  
  44375b:	xchg   ebp,eax
  44375c:	push   ebx
  44375d:	shl    cl,0x84
  443760:	out    0xe6,al
  443762:	ret    0xa21d
  443765:	push   0xecd64843
  44376a:	(bad)  
  44376c:	xor    eax,0x42041c50
  443771:	fwait
  443772:	mov    ds:0x3192818f,eax
  443777:	das    
  443778:	mov    esi,0x94b0ef2
  44377d:	jl     0x44378c
  44377f:	test   eax,0x6780bbb2
  443784:	or     BYTE PTR [ecx],dh
  443786:	xor    al,0x3c
  443788:	and    DWORD PTR [ecx+0x91afd48],0xd6794f72
  443792:	call   0xd11a4c25
  443797:	pop    ds
  443798:	push   esp
  443799:	retf   
  44379a:	les    esp,FWORD PTR [edi]
  44379c:	adc    al,0x93
  44379e:	repz or DWORD PTR [ecx+0x2d848148],esp
  4437a5:	jmp    0xe4eb3746
  4437aa:	retf   
  4437ab:	mov    ch,0xf7
  4437ad:	push   ss
  4437ae:	mov    edi,0x8cd61558
  4437b3:	enter  0x2530,0x26
  4437b7:	adc    BYTE PTR [ecx-0x6c],0xd4
  4437bb:	mov    bl,0x91
  4437bd:	or     al,0x8b
  4437bf:	in     eax,0xee
  4437c1:	inc    ebp
  4437c2:	retf   
  4437c3:	mov    ah,0xf6
  4437c5:	sub    dl,0x74
  4437c8:	jp     0x443841
  4437ca:	sbb    al,0xa0
  4437cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4437cd:	xchg   edi,eax
  4437ce:	mov    fs,WORD PTR [edx-0x1c]
  4437d1:	ror    DWORD PTR [edx-0x1c617d78],cl
  4437d7:	fistp  QWORD PTR [ebx]
  4437d9:	out    0x94,al
  4437db:	enter  0xadcb,0xa3
  4437df:	mov    edx,0xac2557fe
  4437e4:	shl    ah,0x9a
  4437e7:	sbb    ebx,DWORD PTR [eax-0x7d0c7853]
  4437ed:	lock cmp cl,BYTE PTR [edx+0x61e29899]
  4437f4:	push   cs
  4437f5:	stos   BYTE PTR es:[edi],al
  4437f6:	push   edi
  4437f7:	inc    esi
  4437f8:	pop    edx
  4437f9:	pop    edx
  4437fa:	int    0xd3
  4437fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4437fd:	push   edx
  4437fe:	or     al,0x76
  443800:	xchg   ebp,eax
  443801:	jns    0x443853
  443803:	xlat   BYTE PTR ds:[ebx]
  443804:	test   eax,0x2bfd4c02
  443809:	sbb    BYTE PTR [edx+0x4d5ea372],dh
  44380f:	ficom  DWORD PTR [esp+eax*4+0x40f507be]
  443816:	fwait
  443817:	call   0x7b75e83d
  44381c:	push   ebx
  44381d:	lahf   
  44381e:	push   ebp
  44381f:	loope  0x443816
  443821:	jg     0x443839
  443823:	xlat   BYTE PTR ds:[ebx]
  443824:	imul   edi,ebx,0x12
  443827:	mov    eax,ds:0x6c7337c0
  44382c:	in     eax,0xc7
  44382e:	jp     0x443823
  443830:	sub    al,0x24
  443832:	repnz push esp
  443834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443835:	je     0x44386e
  443837:	ja     0x4437f0
  443839:	jb     0x443872
  44383b:	into   
  44383c:	test   BYTE PTR [esi-0x5a4a8d91],dh
  443842:	ret    0x2cc0
  443845:	test   al,0xca
  443847:	mov    cl,0xb3
  443849:	imul   ecx,DWORD PTR [ebx+0x59],0x4d
  44384d:	pop    es
  44384e:	sti    
  44384f:	mov    ecx,0xcb734c4b
  443854:	pop    ebp
  443855:	jmp    0x44389a
  443857:	xchg   BYTE PTR [esi-0x55504d53],ah
  44385d:	push   0x44
  44385f:	(bad)  
  443860:	jae    0x44380e
  443862:	mov    ebp,0xc2eb3769
  443867:	jp     0x443867
  443869:	push   esp
  44386a:	jg     0x44384d
  44386c:	sub    DWORD PTR [edx+0x301357ec],ecx
  443872:	adc    dl,bl
  443874:	fsub   QWORD PTR [eax-0x50421811]
  44387a:	imul   ebx,DWORD PTR [edx+0x27],0xffffff82
  44387e:	dec    eax
  44387f:	add    esi,esp
  443881:	mov    ds:0x6213b465,al
  443886:	fisttp WORD PTR [ebx+0x43]
  443889:	das    
  44388a:	sbb    DWORD PTR [edx],0xffffffb2
  44388d:	arpl   WORD PTR [edi],cx
  44388f:	data16 aas 
  443891:	and    eax,0x2fbf228f
  443896:	sahf   
  443897:	ret    0x4b55
  44389a:	or     ah,0x2f
  44389d:	lahf   
  44389e:	outs   dx,DWORD PTR ds:[esi]
  44389f:	outs   dx,DWORD PTR ds:[esi]
  4438a0:	push   cs
  4438a1:	cmp    eax,0x56c88b57
  4438a6:	and    dh,0x5
  4438a9:	or     edi,esp
  4438ab:	cmp    BYTE PTR [ebx-0xc],dh
  4438ae:	test   DWORD PTR [esi+0x7b],0x2d8b0f0f
  4438b5:	xchg   BYTE PTR [eax],al
  4438b7:	jecxz  0x443845
  4438b9:	pop    ebp
  4438ba:	test   al,0xd7
  4438bc:	sbb    al,BYTE PTR [ebx-0x4d]
  4438bf:	inc    esp
  4438c0:	neg    DWORD PTR [esi-0x76938f21]
  4438c6:	mov    BYTE PTR [ebp-0x2d],0x47
  4438ca:	mov    ds:0x22902e71,eax
  4438cf:	(bad)  
  4438d0:	jnp    0x443896
  4438d2:	xchg   BYTE PTR [edi-0x5d],bl
  4438d5:	push   esp
  4438d6:	int    0x93
  4438d8:	xchg   edi,eax
  4438d9:	jb     0x44389a
  4438db:	mov    al,ah
  4438dd:	jnp    0x44392d
  4438df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4438e0:	mov    ds:0x37469ac7,al
  4438e5:	add    eax,0xa63ab7e8
  4438ea:	adc    eax,0xb56a287d
  4438ef:	sbb    edx,DWORD PTR [esi]
  4438f1:	sbb    eax,0x68a7d52
  4438f6:	inc    eax
  4438f7:	popa   
  4438f8:	mov    ecx,0x36574b1a
  4438fd:	call   0x49859f01
  443902:	push   edi
  443903:	sbb    DWORD PTR [edi-0x19093cf4],eax
  443909:	scas   eax,DWORD PTR es:[edi]
  44390a:	repnz ds add eax,0xaa4e6b5b
  443911:	and    DWORD PTR [esi+0x5c],esi
  443914:	test   al,0xc5
  443916:	and    esi,DWORD PTR [eax-0x56d1f99f]
  44391c:	std    
  44391d:	adc    edx,0x57ba7072
  443923:	rcl    BYTE PTR [edx-0x80],0xeb
  443927:	mov    cs:0x135a7d5c,eax
  44392d:	mov    dl,0xd7
  44392f:	in     eax,dx
  443930:	xor    ch,ah
  443932:	outs   dx,DWORD PTR ds:[esi]
  443933:	out    dx,eax
  443934:	jmp    0xe6fdd7ca
  443939:	stos   BYTE PTR es:[edi],al
  44393a:	wrmsr  
  44393c:	mov    WORD PTR [eax+0x78],es
  44393f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443940:	adc    esp,DWORD PTR [ebx-0x21]
  443943:	loop   0x44391d
  443945:	add    eax,0xc400144b
  44394a:	cmp    eax,0xbf436e0b
  44394f:	mov    esp,0x93a1954e
  443954:	popf   
  443955:	(bad)  
  443956:	add    edi,edx
  443958:	je     0x44397d
  44395a:	in     al,dx
  44395b:	arpl   WORD PTR [esi],bp
  44395d:	ja     0x4439ac
  44395f:	jmp    0x366c:0xee365a70
  443966:	mov    ds:0x9f7e2eea,eax
  44396b:	repz mov ecx,0xac8d9125
  443971:	jae    0x44399b
  443973:	add    BYTE PTR [edi-0x6c],0xdc
  443977:	mov    ds:0x69840e50,al
  44397c:	jo     0x443924
  44397e:	or     BYTE PTR [ebx+0x75b7eda1],0x81
  443985:	jl     0x443969
  443987:	sub    dh,bl
  443989:	mov    al,ds:0x9f929ac4
  44398e:	sbb    esp,DWORD PTR [ecx]
  443990:	adc    eax,0xcfa85dbe
  443995:	xchg   cl,bl
  443997:	inc    DWORD PTR [esi+ecx*1-0x48ea1468]
  44399e:	ret    0x370d
  4439a1:	mov    dl,0x1
  4439a3:	mov    dl,0x61
  4439a5:	call   0x39a7:0x671ecb22
  4439ac:	das    
  4439ad:	out    0x65,al
  4439af:	push   ss
  4439b0:	xor    al,0x37
  4439b2:	fmul   QWORD PTR [ebp-0x7b451533]
  4439b8:	xchg   ecx,eax
  4439b9:	jb     0x443a32
  4439bb:	cmp    eax,0x849752d1
  4439c0:	jbe    0x4439e3
  4439c2:	ret    0x1853
  4439c5:	pop    ebx
  4439c6:	je     0x4439a7
  4439c8:	stos   DWORD PTR es:[edi],eax
  4439c9:	mov    eax,DWORD PTR [edx-0x23283219]
  4439cf:	sbb    dl,dh
  4439d1:	inc    ecx
  4439d2:	fwait
  4439d3:	xchg   edx,eax
  4439d4:	test   BYTE PTR [esi+eiz*8-0x33],dl
  4439d8:	les    eax,FWORD PTR [edi+eax*8]
  4439db:	stos   DWORD PTR es:[edi],eax
  4439dc:	add    BYTE PTR [esi],bh
  4439de:	lock in eax,0x81
  4439e1:	or     esi,edi
  4439e3:	push   edx
  4439e4:	dec    ebp
  4439e5:	out    dx,al
  4439e6:	and    edi,ebp
  4439e8:	add    al,0x9d
  4439ea:	popf   
  4439eb:	jne    0x443a5a
  4439ed:	test   esi,0xd48d1a21
  4439f3:	out    0xbf,al
  4439f5:	xor    edx,edi
  4439f7:	xor    dl,0x1c
  4439fa:	retf   0x5519
  4439fd:	cmp    al,0x2a
  4439ff:	sub    ecx,DWORD PTR [ebx-0x7c217b4c]
  443a05:	lods   eax,DWORD PTR ds:[esi]
  443a06:	popf   
  443a07:	pop    ecx
  443a08:	add    bl,BYTE PTR [ecx-0x750cd4df]
  443a0e:	cli    
  443a0f:	sbb    BYTE PTR [ecx-0x75051412],cl
  443a15:	fidiv  WORD PTR [ebx]
  443a17:	push   esi
  443a18:	cli    
  443a19:	shl    ebx,1
  443a1b:	push   eax
  443a1c:	(bad)  
  443a1d:	cld    
  443a1e:	je     0x443a6e
  443a20:	fild   QWORD PTR [ebp+0x7c1bf4b3]
  443a26:	retf   0xba37
  443a29:	dec    edx
  443a2a:	mov    ds:0x6308b281,al
  443a2f:	adc    ch,cl
  443a31:	add    al,0x93
  443a33:	sbb    DWORD PTR [eax],eax
  443a35:	test   ebx,esp
  443a37:	(bad)  
  443a39:	dec    esp
  443a3a:	int    0x9b
  443a3c:	test   ch,al
  443a3e:	cli    
  443a3f:	test   DWORD PTR [eax-0x2f58cbd8],edi
  443a45:	(bad)  
  443a46:	adc    eax,0xe2d765ce
  443a4b:	lahf   
  443a4c:	mov    al,0xaf
  443a4e:	div    DWORD PTR [edx]
  443a50:	mov    eax,ds:0x4b137344
  443a55:	js     0x443a44
  443a57:	repnz mov BYTE PTR [esi+0x65],dh
  443a5b:	bound  edi,QWORD PTR [edi]
  443a5d:	mov    ecx,0x3dc384a
  443a62:	jmp    0x761853ae
  443a67:	or     al,0x5
  443a69:	(bad)  
  443a6a:	bound  edx,QWORD PTR [esi+ebp*1]
  443a6d:	adc    bl,dh
  443a6f:	call   FWORD PTR [ecx+0x1d178562]
  443a75:	mov    WORD PTR ds:0x9b1e7e5f,ss
  443a7b:	mov    BYTE PTR ss:[ebp+esi*1-0x6e2b96ac],bh
  443a83:	aas    
  443a84:	pusha  
  443a85:	imul   BYTE PTR [esi-0xdd924b5]
  443a8b:	rcr    DWORD PTR [edi+edi*2],0xc1
  443a8f:	jl     0x443a2e
  443a91:	data16 (bad) 
  443a93:	or     edx,DWORD PTR [edx+0x6804fd1c]
  443a99:	push   ecx
  443a9a:	test   eax,0xaa7cd675
  443a9f:	add    al,0x60
  443aa1:	jge    0x443a25
  443aa3:	jecxz  0x443af8
  443aa5:	aad    0x95
  443aa7:	xor    al,BYTE PTR [esi-0x4b7a69e4]
  443aad:	inc    ebx
  443aae:	(bad)  
  443aaf:	push   esp
  443ab0:	addr16 std 
  443ab2:	retf   0xec76
  443ab5:	add    DWORD PTR [ebx+0x18],edx
  443ab8:	xor    eax,0x81431897
  443abd:	add    DWORD PTR ds:0xf199067e,eax
  443ac3:	jbe    0x443aef
  443ac5:	jne    0x443a83
  443ac7:	ja     0x443a5f
  443ac9:	push   esp
  443aca:	cmp    ah,bh
  443acc:	jnp    0x443ad6
  443ace:	xor    BYTE PTR [esi-0x3d],dh
  443ad1:	xchg   ebp,eax
  443ad2:	jmp    0x710420a2
  443ad7:	retf   
  443ad8:	mov    ds:0xfe1654d8,al
  443add:	sbb    al,0xa5
  443adf:	fdivrp st(1),st
  443ae1:	xor    ch,BYTE PTR fs:[ecx+0x171e909]
  443ae8:	add    edi,DWORD PTR [ecx+0x54]
  443aeb:	ret    0xed2b
  443aee:	das    
  443aef:	(bad)  [eax+0x32]
  443af2:	addr16 lahf 
  443af4:	xchg   esi,eax
  443af5:	sub    edi,DWORD PTR [edx]
  443af7:	imul   edx,DWORD PTR [ebx+0x3b],0xacf1f827
  443afe:	daa    
  443aff:	push   cs
  443b00:	inc    esp
  443b01:	leave  
  443b02:	cwde   
  443b03:	xor    edx,ebx
  443b05:	icebp  
  443b06:	(bad)  [eax-0x344f01ba]
  443b0c:	fs (bad) 
  443b0e:	push   ebp
  443b0f:	push   ecx
  443b10:	sub    esi,ebp
  443b12:	pop    ebp
  443b13:	mov    bl,0x53
  443b15:	pop    edx
  443b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443b17:	addr16 loope 0x443b29
  443b1a:	push   edi
  443b1b:	or     cl,0xe4
  443b1e:	fisttp WORD PTR [esi*8-0xf5b6a25]
  443b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b26:	hlt    
  443b27:	push   es
  443b28:	sbb    esi,DWORD PTR [edx-0x1af736de]
  443b2e:	fidivr DWORD PTR [ebx-0x4d]
  443b31:	sub    DWORD PTR [esp+esi*4+0x56921ad8],edx
  443b38:	push   ds
  443b39:	stos   DWORD PTR es:[edi],eax
  443b3a:	and    eax,0xdd2e45ea
  443b3f:	(bad)  
  443b40:	mov    BYTE PTR [edx-0x8c24aec],al
  443b46:	rcl    BYTE PTR [edx+0x3a],1
  443b49:	into   
  443b4a:	leave  
  443b4b:	and    esi,DWORD PTR [eax-0x72]
  443b4e:	pop    DWORD PTR [ebx+0x7841dfbc]
  443b54:	xchg   DWORD PTR [eax],ebp
  443b56:	mov    ah,ah
  443b58:	jge    0x443b75
  443b5a:	mov    dh,0x87
  443b5c:	mov    al,0x1e
  443b5e:	call   0x107545b
  443b63:	add    bl,BYTE PTR [esi-0x4c609564]
  443b69:	ret    
  443b6a:	data16 jne 0x443b5b
  443b6d:	(bad)  
  443b6e:	jp     0x443ba9
  443b70:	push   ecx
  443b71:	pop    ds
  443b72:	(bad)  
  443b73:	imul   ebp,DWORD PTR [eax+0x7e],0xa3b3ceee
  443b7a:	inc    edi
  443b7b:	cdq    
  443b7c:	adc    ah,BYTE PTR [eax-0x44758921]
  443b82:	sub    bl,0xe6
  443b85:	push   ecx
  443b86:	int    0x4e
  443b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b89:	hlt    
  443b8a:	aam    0xfe
  443b8c:	sti    
  443b8d:	mov    dl,0xbc
  443b8f:	ss gs out 0xff,al
  443b93:	sar    DWORD PTR [edx+0xe],0x95
  443b97:	add    BYTE PTR [eax+esi*4+0x25c5b6a0],bl
  443b9e:	sub    BYTE PTR [edi+0xf],0x8f
  443ba2:	jae    0x443b3d
  443ba4:	push   ecx
  443ba5:	sbb    al,0x5a
  443ba7:	(bad)  
  443ba8:	jl     0x443bec
  443baa:	pop    edi
  443bab:	jle    0x443b9c
  443bad:	ja     0x443b77
  443baf:	pop    esp
  443bb0:	cmp    DWORD PTR [ecx-0x5f],esp
  443bb3:	mov    esi,0x5ad89c72
  443bb8:	sub    eax,0xa7aead16
  443bbd:	add    al,0x91
  443bbf:	adc    eax,0xc85577c7
  443bc4:	xor    DWORD PTR [eax],ebp
  443bc6:	leave  
  443bc7:	(bad)  
  443bc8:	packuswb mm2,QWORD PTR ds:0x9b3018db
  443bcf:	(bad)  
  443bd0:	stos   BYTE PTR es:[edi],al
  443bd1:	iret   
  443bd2:	inc    eax
  443bd3:	stc    
  443bd4:	adc    BYTE PTR [ebx-0x7e6415e2],0x0
  443bdb:	lock fist DWORD PTR [eax+0x1f09be4e]
  443be2:	aas    
  443be3:	jnp    0x443c12
  443be5:	or     DWORD PTR [edi],0x2e
  443be8:	sub    al,0x2e
  443bea:	dec    ebx
  443beb:	ror    DWORD PTR [esi],1
  443bed:	fisub  DWORD PTR [eax+0x4a]
  443bf0:	or     esp,DWORD PTR [ebp-0x18]
  443bf3:	pop    esp
  443bf4:	cdq    
  443bf5:	repnz cmc 
  443bf7:	scas   al,BYTE PTR es:[edi]
  443bf8:	popf   
  443bf9:	ds call 0x3cca:0x7c886874
  443c01:	xor    esi,esp
  443c03:	gs xchg esp,eax
  443c05:	fisub  DWORD PTR [eax]
  443c07:	mov    bh,0x97
  443c09:	pop    esi
  443c0a:	or     ebx,esp
  443c0c:	push   edi
  443c0d:	jo     0x443bba
  443c0f:	(bad)  
  443c13:	sub    esp,esi
  443c15:	push   ebp
  443c16:	aam    0x85
  443c18:	cmc    
  443c19:	icebp  
  443c1a:	pop    ecx
  443c1b:	int    0xde
  443c1d:	addr16 fcmovnbe st,st(4)
  443c20:	clc    
  443c21:	repnz inc ebx
  443c23:	lods   al,BYTE PTR ds:[esi]
  443c24:	in     eax,dx
  443c25:	and    dh,BYTE PTR [ecx]
  443c27:	out    0xf7,al
  443c29:	cdq    
  443c2a:	stc    
  443c2b:	sub    BYTE PTR [eax],bl
  443c2d:	mov    ebx,ecx
  443c2f:	ror    ebp,cl
  443c31:	mov    ebx,0x6dfccc0e
  443c36:	fs out 0x1e,al
  443c39:	lods   eax,DWORD PTR ds:[esi]
  443c3a:	iret   
  443c3b:	test   DWORD PTR [edi-0x74],0x833aed15
  443c42:	and    eax,0xfd721d36
  443c47:	(bad)  
  443c48:	std    
  443c49:	icebp  
  443c4a:	push   esi
  443c4b:	fcmovbe st,st(3)
  443c4d:	(bad)  
  443c4f:	cli    
  443c50:	int    0x74
  443c52:	les    ecx,FWORD PTR [eax+0x0]
  443c55:	pop    ebx
  443c56:	out    0x42,al
  443c58:	dec    ebx
  443c59:	or     edi,DWORD PTR [esi+0x67fd1517]
  443c5f:	sub    BYTE PTR [edx-0x56],cl
  443c62:	or     al,0x56
  443c64:	imul   ebp,DWORD PTR ds:0xdbff9dbd,0xffffffd9
  443c6b:	adc    DWORD PTR [edx+0x37],0xffffffe8
  443c6f:	adc    al,0xd2
  443c71:	cmpxchg BYTE PTR [ebx],ah
  443c74:	xor    DWORD PTR [eax],0xffffffbe
  443c77:	out    dx,eax
  443c78:	pop    ecx
  443c79:	add    BYTE PTR [eax-0x191a6824],al
  443c7f:	aas    
  443c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443c81:	mov    ebx,ecx
  443c83:	test   eax,0x2ec6510
  443c88:	loopne 0x443cc9
  443c8a:	pop    ecx
  443c8b:	repnz imul esi,DWORD PTR [eax],0x2ffc6813
  443c92:	into   
  443c93:	mov    esp,DWORD PTR [edx-0x6f]
  443c96:	jmp    0x443c8f
  443c98:	or     eax,0x2d7360ce
  443c9d:	pop    ebp
  443c9e:	push   ebp
  443c9f:	pusha  
  443ca0:	inc    edi
  443ca1:	mov    ecx,0x8ffdaa56
  443ca6:	push   edx
  443ca7:	inc    esi
  443ca8:	imul   edx,DWORD PTR [ecx],0x69029c97
  443cae:	(bad)  
  443caf:	mov    esi,0xf640b13b
  443cb4:	jo     0x443cfc
  443cb6:	add    edi,DWORD PTR [ecx]
  443cb8:	fisub  DWORD PTR ds:0x7e8e
  443cbd:	push   esp
  443cbe:	js     0x443ca9
  443cc0:	jge    0x443cba
  443cc2:	mov    gs,WORD PTR [ebp-0x7e]
  443cc5:	hlt    
  443cc6:	jmp    0xeea3cfd9
  443ccb:	push   ebx
  443ccc:	cmp    edx,0x57
  443ccf:	mov    eax,0x9b1424c4
  443cd4:	cmp    ebx,ecx
  443cd6:	xchg   esp,eax
  443cd7:	mov    bh,0x53
  443cd9:	adc    eax,0x4b4b2e0f
  443cde:	mov    ecx,0x5c866674
  443ce3:	xor    al,BYTE PTR [ecx]
  443ce5:	int3   
  443ce6:	inc    edi
  443ce7:	cmc    
  443ce8:	mov    ecx,0x8039f932
  443ced:	lods   al,BYTE PTR ds:[esi]
  443cee:	xlat   BYTE PTR ds:[ebx]
  443cef:	fldcw  WORD PTR cs:[ecx-0x4a]
  443cf3:	push   ecx
  443cf4:	xchg   esp,eax
  443cf5:	fsubr  st(5),st
  443cf7:	xor    al,BYTE PTR [esi+esi*1-0x1e]
  443cfb:	mov    esi,0xaaf02a4a
  443d00:	cdq    
  443d01:	in     al,0x8e
  443d03:	pop    ds
  443d04:	int3   
  443d05:	xor    al,0xc7
  443d07:	inc    edx
  443d08:	mov    ecx,0x9317ce60
  443d0d:	fcom   QWORD PTR [edx+eiz*4]
  443d10:	or     al,0x20
  443d12:	rcr    esi,cl
  443d14:	and    al,0x8b
  443d16:	jne    0x443cb4
  443d18:	sub    ebp,DWORD PTR [ebp+0x5c]
  443d1b:	mov    ebx,0xbfeeeae3
  443d20:	add    al,0x3d
  443d22:	inc    ebx
  443d23:	dec    ebx
  443d24:	pop    es
  443d25:	xchg   esp,eax
  443d26:	mov    ebx,0xc24919a9
  443d2b:	out    0x12,eax
  443d2d:	leave  
  443d2e:	mov    esi,0x9d7f949b
  443d33:	in     al,0xff
  443d35:	and    ebp,DWORD PTR ds:0x4ca638eb
  443d3b:	push   ebp
  443d3c:	neg    BYTE PTR [ebx+ecx*8]
  443d3f:	mov    ebx,0xd3b5df2a
  443d44:	leave  
  443d45:	inc    edx
  443d46:	inc    edx
  443d47:	mov    ds:0x6b042c42,al
  443d4c:	stos   DWORD PTR es:[edi],eax
  443d4d:	ds mov edi,0xf90f9ef9
  443d53:	addr16 inc ecx
  443d55:	int3   
  443d56:	not    DWORD PTR [esi+0x4f]
  443d59:	fistp  WORD PTR [eax]
  443d5b:	push   ds
  443d5c:	xchg   edx,eax
  443d5d:	or     esp,DWORD PTR cs:0xe2d5abaa
  443d64:	into   
  443d65:	shl    esi,1
  443d67:	clc    
  443d68:	jl     0x443d38
  443d6a:	aas    
  443d6b:	aaa    
  443d6c:	xor    eax,0x584cf460
  443d71:	push   ebp
  443d72:	sub    eax,0xe3c039f2
  443d77:	add    al,0x5
  443d79:	push   cs
  443d7a:	jne    0x443d3d
  443d7c:	(bad)  
  443d7d:	sbb    eax,0x8e39c4d8
  443d82:	inc    ebp
  443d83:	inc    edi
  443d84:	inc    ebp
  443d85:	les    ebp,FWORD PTR [edi+0x5528bca6]
  443d8b:	cmp    al,0x61
  443d8d:	out    dx,al
  443d8e:	das    
  443d8f:	addr16 out dx,al
  443d91:	cmp    dh,cl
  443d93:	jp     0x443d25
  443d95:	push   es
  443d96:	imul   eax,DWORD PTR [ebp-0x4a],0x6275c1d1
  443d9d:	and    ebp,eax
  443d9f:	mov    BYTE PTR [eax+0x33f13236],dh
  443da5:	cld    
  443da6:	push   cs
  443da7:	out    0x4a,al
  443da9:	iret   
  443daa:	(bad)  
  443dab:	out    0x13,eax
  443dad:	cmp    dh,BYTE PTR [ecx-0x2e81f566]
  443db3:	popa   
  443db4:	lea    esi,[esi]
  443db6:	mov    BYTE PTR [ebp-0x4],bh
  443db9:	fdivr  QWORD PTR [ebp-0x3274ca08]
  443dbf:	stos   BYTE PTR es:[edi],al
  443dc0:	loope  0x443e3c
  443dc2:	jns    0x443dbe
  443dc4:	dec    edi
  443dc5:	jne    0x443d5b
  443dc7:	push   ebp
  443dc8:	mov    ds:0x4f82a2b6,eax
  443dcd:	(bad)  
  443dce:	push   ebx
  443dcf:	inc    ebx
  443dd0:	add    BYTE PTR [esi+0x1120345f],bh
  443dd6:	ret    
  443dd7:	in     eax,0x1e
  443dd9:	test   DWORD PTR [ecx-0x55],ebx
  443ddc:	fdiv   QWORD PTR [eax+0x3c]
  443ddf:	retf   0xde27
  443de2:	inc    esi
  443de3:	jmp    0x38b8c2fb
  443de8:	aaa    
  443de9:	cmp    esi,DWORD PTR [edi+0x50b0cd7b]
  443def:	mov    ah,0x49
  443df1:	mov    ch,cl
  443df3:	(bad)  
  443df4:	jle    0x443dad
  443df6:	jnp    0x443e58
  443df8:	arpl   WORD PTR ds:0xe54b9177,dx
  443dfe:	ficomp DWORD PTR ds:0x74bfd214
  443e04:	push   esp
  443e05:	or     eax,0x8fddad2e
  443e0a:	jg     0x443dde
  443e0c:	pop    edx
  443e0d:	cmp    dh,bh
  443e0f:	mov    ebp,0x5801dd05
  443e14:	cmp    esp,DWORD PTR ds:0x3ac0b0f8
  443e1a:	int3   
  443e1b:	stos   BYTE PTR es:[edi],al
  443e1c:	(bad)  
  443e1e:	mov    edi,0x661c2e74
  443e23:	outs   dx,BYTE PTR ds:[esi]
  443e24:	pop    edi
  443e25:	jmp    0x88171b29
  443e2a:	das    
  443e2b:	mov    ebx,0x78067ce0
  443e30:	stos   BYTE PTR es:[edi],al
  443e31:	xchg   BYTE PTR [edx-0x12d5e8b2],ah
  443e37:	push   cs
  443e38:	push   es
  443e39:	adc    BYTE PTR [esi+0x1906dd06],ah
  443e3f:	jae    0x443e61
  443e41:	icebp  
  443e42:	xchg   esp,eax
  443e43:	pop    edi
  443e44:	icebp  
  443e45:	fadd   QWORD PTR [edi-0x2583c924]
  443e4b:	ja     0x443e51
  443e4d:	xchg   ecx,eax
  443e4e:	inc    eax
  443e4f:	pop    es
  443e50:	mov    eax,ds:0xf46ae6f3
  443e55:	stos   DWORD PTR es:[edi],eax
  443e56:	push   edi
  443e57:	std    
  443e58:	fisubr WORD PTR [edx+0x471767e]
  443e5e:	aaa    
  443e5f:	push   cs
  443e60:	addr16 cmp eax,0xe13266fb
  443e66:	mov    eax,ds:0x97d28674
  443e6b:	out    dx,al
  443e6c:	sub    BYTE PTR [edi-0x74],ah
  443e6f:	repnz sbb al,0x13
  443e72:	mov    es,WORD PTR [edx]
  443e74:	mov    dl,bl
  443e76:	inc    ebx
  443e77:	je     0x443e94
  443e79:	mov    bl,0x8
  443e7b:	xchg   ebx,eax
  443e7c:	dec    edi
  443e7d:	mov    al,ds:0xba69968
  443e82:	jp     0x443e7b
  443e84:	lock es push esp
  443e87:	jo     0x443ee5
  443e89:	dec    esp
  443e8a:	and    BYTE PTR [ebp+0x21],cl
  443e8d:	test   eax,0xf89cffa1
  443e92:	inc    BYTE PTR ds:[edi]
  443e95:	push   edi
  443e96:	mov    ds:0xc568e356,eax
  443e9b:	adc    eax,0x9bf7e37f
  443ea0:	add    DWORD PTR [ecx],eax
  443ea2:	mov    eax,ds:0xaa052b79
  443ea7:	add    DWORD PTR [esi+0x10],0xa25c137b
  443eae:	(bad)  
  443eaf:	lods   al,BYTE PTR ss:[esi]
  443eb1:	js     0x443eb6
  443eb3:	or     al,0x11
  443eb5:	fdiv   QWORD PTR [ebx-0x67e5c780]
  443ebb:	jb     0x443eaf
  443ebd:	sub    al,BYTE PTR [ebp-0x38c7674a]
  443ec3:	add    BYTE PTR [edx+esi*4-0x672258df],cl
  443eca:	sbb    al,0x80
  443ecc:	xor    al,0xdc
  443ece:	pop    ss
  443ecf:	in     eax,0xcf
  443ed1:	push   cs
  443ed2:	cmp    cl,BYTE PTR [ecx+esi*4-0x31]
  443ed6:	inc    edi
  443ed7:	sub    al,0x1b
  443ed9:	jge    0x443f5a
  443edb:	aaa    
  443edc:	jmp    0xc23f:0xac0aa1d0
  443ee3:	shl    DWORD PTR [ebx-0x2a],0x1f
  443ee7:	pop    ebp
  443ee8:	fwait
  443ee9:	mov    dh,0xaa
  443eeb:	enter  0xc350,0xaa
  443eef:	push   cs
  443ef0:	inc    eax
  443ef1:	push   ebx
  443ef2:	add    DWORD PTR [ecx+0x25],edx
  443ef5:	xor    ebx,DWORD PTR [edx-0x4c8c50af]
  443efb:	xchg   ebp,eax
  443efc:	adc    esi,DWORD PTR [esi]
  443efe:	sbb    bh,dh
  443f00:	cmp    BYTE PTR [eax+0x38c89c76],ah
  443f06:	je     0x443f3b
  443f08:	dec    edx
  443f09:	cdq    
  443f0a:	jecxz  0x443ee8
  443f0c:	lahf   
  443f0d:	inc    esi
  443f0e:	and    cl,BYTE PTR [ebx+edi*4+0x7f]
  443f12:	enter  0xc42,0xd2
  443f16:	sbb    BYTE PTR [eax+0x17],cl
  443f19:	mov    DWORD PTR [eax+0x1a25176d],esi
  443f1f:	fsubr  DWORD PTR [ebx]
  443f21:	jle    0x443f73
  443f23:	jns    0x443f5b
  443f25:	dec    ebp
  443f26:	adc    eax,0x3e8ff690
  443f2b:	daa    
  443f2c:	inc    edi
  443f2d:	push   ss
  443f2e:	mov    DWORD PTR [esi],ecx
  443f30:	push   esi
  443f31:	push   ecx
  443f32:	xlat   BYTE PTR ds:[ebx]
  443f33:	sub    BYTE PTR [ebp+0x77ccf15a],cl
  443f39:	mov    esp,DWORD PTR ds:0x8418133
  443f3f:	or     BYTE PTR [ebx],0x3c
  443f42:	outs   dx,DWORD PTR ds:[esi]
  443f43:	dec    ebp
  443f44:	shl    BYTE PTR [edi+0x65081c4e],1
  443f4a:	(bad)  
  443f4b:	xchg   esi,eax
  443f4c:	je     0x443ed3
  443f4e:	inc    esp
  443f4f:	or     esp,eax
  443f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443f52:	ss out 0xdf,eax
  443f55:	mov    cl,0x5f
  443f57:	xlat   BYTE PTR ds:[ebx]
  443f58:	in     eax,0x7b
  443f5a:	xchg   edx,eax
  443f5b:	and    al,0x23
  443f5d:	cs add al,0x35
  443f60:	push   0xffffffe4
  443f62:	mov    esi,DWORD PTR [edx]
  443f64:	jg     0x443fe0
  443f66:	jmp    0xa33c:0x45d0c611
  443f6d:	dec    esi
  443f6e:	adc    eax,0x94433ad1
  443f73:	fst    DWORD PTR [ecx-0x13]
  443f76:	xor    BYTE PTR [ecx-0x8f1d5b3],ah
  443f7c:	adc    eax,0x5752e5aa
  443f81:	xor    BYTE PTR [edx+0x52],ch
  443f84:	adc    BYTE PTR [edx-0x30defea1],bl
  443f8a:	in     eax,dx
  443f8b:	retf   0x3e8
  443f8e:	hlt    
  443f8f:	in     eax,dx
  443f90:	and    eax,0xc2a9882f
  443f95:	mov    edi,?
  443f97:	in     eax,dx
  443f98:	outs   dx,DWORD PTR ds:[esi]
  443f99:	dec    edi
  443f9a:	int    0xe2
  443f9c:	into   
  443f9d:	mov    esi,0xc4b0a053
  443fa2:	shr    DWORD PTR [ecx-0x61],0xb0
  443fa6:	adc    al,0xb9
  443fa8:	mov    esp,0x15bb88a8
  443fad:	mov    edi,0x7e154092
  443fb2:	xchg   al,al
  443fb4:	in     eax,0x8
  443fb6:	in     al,dx
  443fb7:	inc    eax
  443fb8:	xchg   ecx,eax
  443fb9:	add    dh,BYTE PTR [ebx]
  443fbb:	stos   DWORD PTR es:[edi],eax
  443fbc:	jmp    0xbbda1c83
  443fc1:	push   ds
  443fc2:	dec    esi
  443fc3:	cmp    esi,eax
  443fc5:	inc    esi
  443fc6:	pushf  
  443fc7:	jp     0x443faa
  443fc9:	jge    0x443fc6
  443fcb:	mov    ds:0x9afd090c,eax
  443fd0:	rcr    BYTE PTR [eax+0x53f78ec8],1
  443fd6:	fstp   TBYTE PTR [edi]
  443fd8:	or     eax,0xa107e593
  443fdd:	push   esp
  443fde:	icebp  
  443fdf:	pop    esi
  443fe0:	or     edx,esi
  443fe2:	jbe    0x443fa3
  443fe4:	daa    
  443fe5:	call   0xacbb2b52
  443fea:	sar    BYTE PTR [ecx+0x5f],1
  443fed:	adc    cl,BYTE PTR [esp+eiz*2-0x1e76bc89]
  443ff4:	sub    DWORD PTR [esi-0x16],edx
  443ff7:	mov    edx,0x9ae35336
  443ffc:	jnp    0x44404a
  443ffe:	sub    al,al
  444000:	jge    0x444078
  444002:	jmp    0x91326530
  444007:	mov    dh,0x32
  444009:	xor    BYTE PTR [eax+0x17],cl
  44400c:	cmp    BYTE PTR [ebx-0x46],cl
  44400f:	xchg   ecx,eax
  444010:	xor    BYTE PTR [ebp-0x55e26430],al
  444016:	push   edi
  444017:	test   al,0x23
  444019:	push   edx
  44401a:	int    0xba
  44401c:	ins    DWORD PTR es:[edi],dx
  44401d:	push   cs
  44401e:	push   ebx
  44401f:	mov    ds:0x48e6c40f,al
  444024:	jns    0x444053
  444026:	ins    BYTE PTR es:[edi],dx
  444027:	aam    0xa7
  444029:	pop    esi
  44402a:	mov    dl,0xc4
  44402c:	push   ebp
  44402d:	adc    dh,BYTE PTR [eax-0x43a1953e]
  444033:	mov    cs,WORD PTR [ebp-0x22f97139]
  444039:	sbb    al,0xa3
  44403b:	or     al,0xa7
  44403d:	icebp  
  44403e:	push   eax
  44403f:	mov    esp,0x1ef9f9e3
  444044:	xchg   BYTE PTR ds:0x94c0912f,dl
  44404a:	xchg   esi,eax
  44404b:	add    dl,BYTE PTR [ecx+0x4d8add4b]
  444051:	add    al,0xdb
  444053:	pop    edi
  444054:	lock aam 0xb1
  444057:	cmp    ecx,DWORD PTR [ebp+0x5b]
  44405a:	push   edi
  44405b:	lods   al,BYTE PTR ds:[esi]
  44405c:	lahf   
  44405d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44405e:	fnstenv [edi]
  444060:	lea    edi,[ebx+0xd012af5]
  444066:	gs mov eax,ecx
  444069:	mov    ecx,0x242dd4ee
  44406e:	push   edx
  44406f:	outs   dx,DWORD PTR ds:[esi]
  444070:	mov    eax,eax
  444072:	call   0x1a5d:0xcc80d821
  444079:	imul   ecx,DWORD PTR [eax+0x43a084ba],0xc7dde2e1
  444083:	arpl   WORD PTR [edx-0x2e768281],ax
  444089:	xor    al,BYTE PTR [esi-0x19aadccb]
  44408f:	cli    
  444090:	out    0x71,al
  444092:	push   edi
  444093:	fild   WORD PTR [edx]
  444095:	push   ecx
  444096:	addr16 cld 
  444098:	sbb    bh,bl
  44409a:	call   0x4d7f:0x954fe691
  4440a1:	adc    al,0x50
  4440a3:	lods   eax,DWORD PTR ds:[esi]
  4440a4:	cmp    eax,0xeeda0f79
  4440a9:	out    dx,al
  4440aa:	ret    0x1dfc
  4440ad:	jge    0x4440eb
  4440af:	int    0x79
  4440b1:	xchg   ebx,eax
  4440b2:	nop
  4440b3:	and    BYTE PTR ds:0xc62ec2ea,al
  4440b9:	js     0x9932a119
  4440bf:	int3   
  4440c0:	(bad)  
  4440c1:	popa   
  4440c2:	ficomp WORD PTR [edx+esi*1-0x3c]
  4440c6:	push   ss
  4440c7:	mov    bh,0x5d
  4440ca:	dec    edi
  4440cb:	pop    ss
  4440cc:	sub    ch,bl
  4440ce:	push   ebx
  4440cf:	mov    edi,0xd41bd678
  4440d4:	or     DWORD PTR [ecx+edx*4-0x5f],ecx
  4440d8:	pop    ebx
  4440d9:	push   0xffffff8b
  4440db:	retf   0xb622
  4440de:	mov    edi,DWORD PTR [ecx+ebp*2-0x5259e346]
  4440e5:	das    
  4440e6:	adc    esp,DWORD PTR [esi]
  4440e8:	xchg   esi,eax
  4440e9:	and    al,0xd3
  4440eb:	sbb    al,0xfd
  4440ee:	adc    DWORD PTR ds:0xc6a8e6b2,0xffffffe5
  4440f5:	or     eax,0x2eac8f11
  4440fa:	js     0x444145
  4440fc:	dec    esp
  4440fd:	call   0x525b:0xa0baa302
  444104:	add    al,0x4c
  444106:	ret    0x75bc
  444109:	je     0x444135
  44410b:	ds xor al,0x15
  44410e:	fsub   QWORD PTR [esi+ecx*1-0x41]
  444112:	fsubr  st(3),st
  444114:	mov    ds:0x918aeecb,eax
  444119:	xchg   esi,eax
  44411a:	ins    BYTE PTR es:[edi],dx
  44411b:	(bad)  
  44411c:	inc    BYTE PTR [esi+0x59]
  44411f:	(bad)  
  444120:	cld    
  444121:	fsubrp st(4),st
  444123:	adc    edi,esi
  444125:	call   0x9aec:0x7a7fbff3
  44412c:	dec    edi
  44412d:	out    0x9a,al
  44412f:	push   cs
  444130:	ja     0x4441b0
  444132:	mov    ebx,0x7f10a4cd
  444137:	rcr    BYTE PTR [eax+0x689e5c31],0xd1
  44413e:	fsubr  DWORD PTR [edx+0x1a37ab3a]
  444144:	test   DWORD PTR ds:0xfa77662a,edi
  44414a:	pop    es
  44414b:	sbb    eax,0x918e6181
  444150:	mov    cl,BYTE PTR [ecx]
  444152:	fld    TBYTE PTR [ecx+0x35]
  444155:	dec    eax
  444156:	out    0x12,eax
  444158:	inc    ebp
  444159:	mov    esp,0x3b4d7257
  44415e:	or     al,0xa9
  444160:	retf   0x7979
  444163:	inc    edi
  444164:	pop    es
  444165:	pop    ecx
  444166:	sub    eax,esi
  444168:	xlat   BYTE PTR ds:[ebx]
  444169:	mul    BYTE PTR [edi+0x68deec69]
  44416f:	adc    ebp,esi
  444171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444172:	(bad)  
  444173:	jl     0x44413d
  444175:	int    0xc2
  444177:	dec    ecx
  444178:	jl     0x4441d4
  44417a:	fwait
  44417b:	sbb    ecx,ecx
  44417d:	sub    dh,BYTE PTR [edi-0x4ed4eef7]
  444183:	je     0x4441ac
  444185:	add    al,0x38
  444187:	pop    eax
  444188:	lds    edi,FWORD PTR [edx+0x2623d30e]
  44418e:	cmpps  xmm5,XMMWORD PTR [ecx],0xac
  444192:	imul   ebx,DWORD PTR ds:0x629fdecc,0xb3281a46
  44419c:	xor    ah,BYTE PTR [eax]
  44419e:	push   eax
  44419f:	adc    BYTE PTR [esi-0x76],ah
  4441a2:	jp     0x4441ff
  4441a4:	icebp  
  4441a5:	jg     0x444201
  4441a7:	das    
  4441a8:	dec    ebx
  4441a9:	add    BYTE PTR [eax-0x6a97af5c],dh
  4441af:	int    0xdf
  4441b1:	(bad)  
  4441b2:	jno    0x4441ce
  4441b4:	pop    ebp
  4441b5:	jmp    0x4441ff
  4441b7:	inc    edx
  4441b8:	push   ebx
  4441b9:	push   edi
  4441ba:	loopne 0x44421c
  4441bc:	sahf   
  4441bd:	cmc    
  4441be:	stc    
  4441bf:	call   edx
  4441c1:	jno    0x4441c4
  4441c3:	dec    DWORD PTR [edi]
  4441c5:	loope  0x4441d4
  4441c7:	loopne 0x4441a2
  4441c9:	adc    cl,ah
  4441cb:	xchg   ebp,eax
  4441cc:	fs jnp 0x44421c
  4441cf:	mov    edi,0x559ecdc0
  4441d4:	scas   al,BYTE PTR es:[edi]
  4441d5:	shr    DWORD PTR [ebp+0x3d],cl
  4441d8:	shr    esp,cl
  4441da:	into   
  4441db:	cmp    al,0xcb
  4441dd:	popa   
  4441de:	cmp    eax,0xc5de8f64
  4441e3:	or     eax,0x773317ef
  4441e8:	lock cmp DWORD PTR [eax],eax
  4441eb:	(bad)  
  4441ec:	adc    ebx,ecx
  4441ee:	dec    esp
  4441ef:	sbb    ecx,eax
  4441f1:	sbb    al,0xb2
  4441f3:	and    esp,DWORD PTR [ecx]
  4441f5:	sbb    eax,0x204bb1a3
  4441fa:	sahf   
  4441fb:	out    0xb8,al
  4441fd:	jbe    0x444245
  4441ff:	(bad)  
  444200:	rcl    BYTE PTR es:0xfdc67625,cl
  444207:	cmc    
  444208:	pop    es
  444209:	bound  eax,QWORD PTR gs:[eax+edi*8-0x6e5dda37]
  444211:	mov    eax,0x658ded87
  444216:	sbb    eax,0x4a52f0c4
  44421b:	or     BYTE PTR [esi+0x11],ah
  44421e:	pusha  
  44421f:	mov    bh,0x20
  444221:	lods   eax,DWORD PTR ds:[esi]
  444222:	push   edx
  444223:	pop    edi
  444224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444225:	ret    
  444226:	or     esi,DWORD PTR [ebp+0x28163b79]
  44422c:	pop    ebx
  44422d:	out    dx,al
  44422e:	cwde   
  44422f:	adc    ch,dl
  444231:	inc    eax
  444232:	xchg   edx,eax
  444233:	loop   0x4442a6
  444235:	ja     0x4442b2
  444237:	xor    ch,cl
  444239:	ss ret 0x220
  44423d:	jp     0x44421c
  44423f:	sub    ch,BYTE PTR ds:[edx-0x7c]
  444243:	out    0x67,al
  444245:	(bad)  
  444246:	mov    al,ds:0x1ed4b1ba
  44424b:	ret    
  44424c:	les    esp,FWORD PTR [ebp+0x32]
  44424f:	sbb    ah,BYTE PTR [edi-0x22]
  444252:	ror    BYTE PTR ds:0xfed991cf,1
  444258:	push   ebx
  444259:	(bad)  
  44425a:	push   eax
  44425b:	lods   eax,DWORD PTR ds:[esi]
  44425c:	int    0x64
  44425e:	push   esi
  44425f:	mov    ecx,0xbb27d2a8
  444264:	test   BYTE PTR [edx+0x74],bl
  444267:	fimul  DWORD PTR [esi+0x77616dfc]
  44426d:	dec    ecx
  44426e:	mov    ds:0x412d069,al
  444273:	and    BYTE PTR [edx+0x27f59463],dl
  444279:	pop    edi
  44427a:	out    dx,al
  44427b:	daa    
  44427c:	xchg   ebp,eax
  44427d:	lock loope 0x44425b
  444280:	shl    BYTE PTR [esi+0x36],cl
  444283:	lea    ebx,[eax+0x512b4616]
  444289:	sahf   
  44428a:	aaa    
  44428b:	adc    DWORD PTR [ebp-0x38fc01ae],edx
  444291:	test   ebx,edi
  444293:	push   ss
  444294:	cmp    al,0x6e
  444296:	or     al,0x25
  444298:	mov    ds:0xfa1a4cb0,eax
  44429d:	pop    es
  44429e:	mov    ebx,0xd032ba82
  4442a3:	xchg   ebp,eax
  4442a4:	and    dl,0x38
  4442a7:	xor    BYTE PTR ds:0xe106c40b,cl
  4442ad:	ds mov eax,0x2fb5029b
  4442b3:	jb     0x444260
  4442b5:	stos   DWORD PTR es:[edi],eax
  4442b6:	mov    esi,DWORD PTR [ebx-0x778cc7d4]
  4442bc:	jns    0x44426e
  4442be:	adc    dh,BYTE PTR [ebx-0x58]
  4442c1:	inc    ecx
  4442c2:	sbb    ah,BYTE PTR [ebp-0x61]
  4442c5:	dec    DWORD PTR [edi-0x53]
  4442c8:	pushf  
  4442c9:	icebp  
  4442ca:	add    ebx,DWORD PTR [ecx+edi*1+0x22]
  4442ce:	inc    esi
  4442cf:	mov    al,0x38
  4442d1:	sbb    DWORD PTR [ebx],0x2429fbcc
  4442d7:	add    ch,BYTE PTR [eax-0xeae2428]
  4442dd:	xchg   esi,eax
  4442de:	lahf   
  4442df:	neg    BYTE PTR ds:0x715d609b
  4442e5:	cmp    DWORD PTR [edi],edx
  4442e7:	cmp    al,0xb0
  4442e9:	mov    al,ds:0xa7c165a
  4442ee:	(bad)  
  4442ef:	mov    ecx,0x4991caa3
  4442f4:	sar    BYTE PTR [ecx+eax*1],cl
  4442f7:	pusha  
  4442f8:	cmp    ecx,eax
  4442fa:	and    ebx,DWORD PTR [edx+0x3c]
  4442fd:	in     eax,dx
  4442fe:	fisub  WORD PTR [ebx+0x5906944e]
  444304:	jle    0x4442dc
  444306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444307:	sbb    ah,BYTE PTR [ecx+ecx*2+0x4edebe98]
  44430e:	push   esp
  44430f:	push   cs
  444310:	(bad)  
  444311:	push   ebp
  444312:	push   eax
  444313:	addr16 inc ebp
  444315:	nop
  444316:	sbb    dh,cl
  444318:	inc    esi
  444319:	neg    BYTE PTR [edx]
  44431b:	cmp    eax,0x2ba387da
  444320:	dec    esi
  444321:	push   ds
  444322:	in     eax,0x6
  444324:	out    0x84,eax
  444326:	cmp    al,0x34
  444328:	ret    0x949a
  44432b:	inc    esp
  44432c:	outs   dx,BYTE PTR ds:[esi]
  44432d:	cmp    ah,BYTE PTR [ecx+eiz*1]
  444330:	mov    ds,WORD PTR [eax+0x957124d]
  444336:	(bad)  
  444337:	pop    eax
  444338:	push   es
  444339:	imul   esp,DWORD PTR [ebp+ebp*1-0x8b78ccf],0x3c
  444341:	imul   ebx,DWORD PTR [ebp+eiz*2-0x41a0046a],0xfbd0a5a6
  44434c:	bnd call 0x4903ad68
  444352:	fs clc 
  444354:	add    DWORD PTR [ecx],0x23
  444357:	aaa    
  444358:	add    BYTE PTR [edx+0x4e7185b4],dh
  44435e:	add    eax,0xda0883bc
  444363:	popf   
  444364:	mul    DWORD PTR [eax+0x297b9ba9]
  44436a:	nop
  44436b:	xchg   sp,ax
  44436d:	mov    bl,ah
  44436f:	arpl   di,bx
  444371:	dec    ecx
  444372:	(bad)  
  444373:	mov    dl,0x1a
  444375:	cwde   
  444376:	in     al,dx
  444377:	xor    ebx,DWORD PTR [edi]
  444379:	fwait
  44437a:	push   eax
  44437b:	cmc    
  44437c:	xor    dl,bl
  44437e:	mov    ch,0x7c
  444380:	mov    edi,0x732c7a92
  444385:	pop    ds
  444386:	or     BYTE PTR [edx+edi*4],al
  444389:	out    0x7c,al
  44438b:	push   cs
  44438c:	or     esi,eax
  44438e:	push   esp
  44438f:	ret    
  444390:	bndstx [edx+0x73],(bad)
  444394:	and    edi,edx
  444396:	ucomiss xmm2,DWORD PTR [ebx]
  444399:	ins    BYTE PTR es:[edi],dx
  44439a:	das    
  44439b:	and    ebx,eax
  44439d:	jo     0x44441b
  44439f:	imul   eax,DWORD PTR [ebp+0x67],0x43
  4443a3:	inc    ecx
  4443a4:	adc    ch,ch
  4443a6:	outs   dx,DWORD PTR ds:[esi]
  4443a7:	xor    DWORD PTR [ebx+0x4],edx
  4443aa:	enter  0xa628,0x4a
  4443ae:	adc    dl,0x18
  4443b1:	(bad)  
  4443b2:	lods   al,BYTE PTR ds:[esi]
  4443b3:	jnp    0x4443cf
  4443b5:	add    ecx,DWORD PTR [esi]
  4443b7:	addr16 jae 0x4443ac
  4443ba:	jge    0x444367
  4443bc:	dec    esi
  4443bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4443be:	xchg   ebx,eax
  4443bf:	or     esp,DWORD PTR [eax]
  4443c1:	jp     0x4443eb
  4443c3:	dec    esp
  4443c4:	push   cs
  4443c5:	jno    0x4443b7
  4443c7:	loopne 0x4443b3
  4443c9:	push   esp
  4443ca:	adc    BYTE PTR [esi-0x3b],ch
  4443cd:	ds aas 
  4443cf:	nop
  4443d0:	add    al,0x50
  4443d2:	test   al,0xf3
  4443d4:	scas   al,BYTE PTR es:[edi]
  4443d5:	ja     0x444377
  4443d7:	or     ebx,DWORD PTR [edx+esi*4+0x25]
  4443db:	out    0xd6,al
  4443dd:	into   
  4443de:	outs   dx,BYTE PTR ds:[esi]
  4443df:	mov    esi,0x8caaaa6f
  4443e4:	cmp    esi,DWORD PTR [ebx-0x6c]
  4443e7:	dec    ecx
  4443e8:	cmp    esp,0xa6a62c4e
  4443ee:	mov    esi,0xc382629c
  4443f3:	adc    BYTE PTR [esi],ah
  4443f5:	in     eax,dx
  4443f6:	js     0x444437
  4443f8:	jp     0x444452
  4443fa:	addr16 push esp
  4443fc:	retf   
  4443fd:	or     edx,DWORD PTR [ecx-0x138396b]
  444403:	shr    BYTE PTR [esi+edx*4],1
  444406:	dec    edi
  444407:	rcl    BYTE PTR [ebp+0x31531324],1
  44440d:	dec    esp
  44440e:	adc    al,0x59
  444410:	out    dx,eax
  444411:	mov    ch,0xfc
  444413:	fxch   st(7)
  444415:	outs   dx,BYTE PTR ds:[esi]
  444416:	out    dx,eax
  444417:	dec    esp
  444418:	xor    DWORD PTR [ebp+ebx*4+0xdf4f4ff],ebp
  44441f:	dec    ecx
  444420:	mov    ecx,DWORD PTR [esi]
  444422:	push   es
  444423:	xchg   DWORD PTR [esi-0x4d30b191],esp
  444429:	std    
  44442a:	jp     0x444494
  44442c:	das    
  44442d:	xor    eax,0xaa9d2d38
  444432:	sbb    ecx,DWORD PTR [esi]
  444434:	jge    0x444426
  444436:	shl    BYTE PTR [ebp-0x66de76e7],0x23
  44443d:	mov    al,ds:0x90f82505
  444442:	(bad)  
  444443:	icebp  
  444444:	mov    es,WORD PTR [edi-0x6f7ea5f5]
  44444a:	jae    0x4443cd
  44444c:	sti    
  44444d:	or     edi,DWORD PTR [ecx+edx*4+0x37]
  444451:	aam    0xa2
  444453:	mov    dh,0x4
  444455:	int3   
  444456:	shl    BYTE PTR [edx+0x23],0x94
  44445a:	jmp    0xd713697b
  44445f:	jb     0x444467
  444461:	sbb    DWORD PTR [edx+0x4c09a886],edx
  444467:	aad    0x14
  444469:	mov    ss,WORD PTR [ebx]
  44446b:	int3   
  44446c:	sbb    DWORD PTR [ebp-0x694d89e9],ebx
  444472:	xor    eax,0x3af6e46d
  444477:	repnz bound ebp,QWORD PTR [edx+0x24986e02]
  44447e:	jg     0x4444f5
  444480:	inc    ebp
  444481:	pop    ds
  444482:	retf   
  444483:	(bad)  
  444485:	or     edi,DWORD PTR ds:0x224c9e34
  44448b:	jne    0x4444a9
  44448d:	and    al,0xcb
  44448f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444490:	push   ds
  444491:	xor    al,0x27
  444493:	cmp    DWORD PTR [edx+0x15],ebp
  444496:	daa    
  444497:	(bad)  
  444498:	in     al,0xd
  44449a:	mov    esp,0x3d4dc74b
  44449f:	pop    es
  4444a0:	les    ebp,FWORD PTR [ecx-0x469ab89]
  4444a6:	pop    esi
  4444a7:	push   cs
  4444a8:	mov    dh,BYTE PTR [esi+ebx*8-0x66]
  4444ac:	repnz mov esi,0xd7f5a6e7
  4444b2:	jge    0x444450
  4444b4:	jp     0x444497
  4444b6:	(bad)  
  4444b7:	repnz leave 
  4444b9:	xor    al,0x1e
  4444bb:	dec    edi
  4444bc:	clc    
  4444bd:	rcl    edx,1
  4444bf:	(bad)  
  4444c0:	pop    edx
  4444c1:	pop    esi
  4444c2:	fcom   QWORD PTR [esi+edi*2-0x1a]
  4444c6:	jmp    0x4444d1
  4444c8:	ins    DWORD PTR es:[edi],dx
  4444c9:	jl     0x444541
  4444cb:	int3   
  4444cc:	xchg   ebx,eax
  4444cd:	ins    BYTE PTR es:[edi],dx
  4444ce:	xchg   esp,eax
  4444cf:	mov    dl,BYTE PTR [ecx+0x7c9c7027]
  4444d5:	ret    0x1da0
  4444d8:	adc    DWORD PTR [eax+esi*4+0x2],edi
  4444dc:	shr    DWORD PTR ds:0xa053bb3d,0x1e
  4444e3:	push   ebx
  4444e4:	jge    0x44452c
  4444e6:	jl     0x44447b
  4444e8:	xchg   bh,dl
  4444ea:	or     bl,ah
  4444ec:	dec    edi
  4444ed:	add    esi,DWORD PTR [edx+0x76]
  4444f0:	dec    edi
  4444f1:	sbb    BYTE PTR [esi],dl
  4444f3:	xchg   esp,eax
  4444f4:	clc    
  4444f5:	sbb    DWORD PTR [eax+ecx*4-0x48548010],0xffffff95
  4444fd:	neg    BYTE PTR [ebx+0x31f4380a]
  444503:	lock xor BYTE PTR [edi-0x37],al
  444507:	nop
  444508:	pop    es
  444509:	mov    al,ds:0x670ef309
  44450e:	mov    ebx,0x881f0151
  444513:	out    dx,al
  444514:	aaa    
  444515:	shr    BYTE PTR [ecx],cl
  444517:	popa   
  444518:	push   eax
  444519:	or     ch,0xfd
  44451c:	pop    esi
  44451d:	call   0xbb31:0xb7faf150
  444524:	cli    
  444525:	loopne 0x44459c
  444527:	mov    edx,0xcff5fc7b
  44452c:	cmp    edi,eax
  44452e:	dec    ebx
  44452f:	ins    BYTE PTR es:[edi],dx
  444530:	push   ecx
  444531:	rcl    DWORD PTR [ebp+0x4e29341e],0xf6
  444538:	iret   
  444539:	div    BYTE PTR [ebx+edx*1+0x14173252]
  444540:	cmp    eax,0x37b115ea
  444545:	int3   
  444546:	add    ch,BYTE PTR ds:0xfd950a3b
  44454c:	xchg   esi,eax
  44454d:	sbb    eax,0x513c4292
  444552:	sti    
  444553:	enter  0x78b7,0x9a
  444557:	push   ds
  444558:	in     al,dx
  444559:	xchg   esi,eax
  44455a:	jb     0x444504
  44455c:	scas   eax,DWORD PTR es:[edi]
  44455d:	xor    al,0xf2
  44455f:	sahf   
  444560:	adc    esp,DWORD PTR [ecx+0x316d7bb2]
  444566:	ficom  DWORD PTR ds:0x812d07cf
  44456c:	rol    BYTE PTR [ecx+0x38062289],cl
  444572:	push   ebx
  444573:	fdiv   QWORD PTR [eax]
  444575:	push   cs
  444576:	inc    edx
  444577:	add    al,BYTE PTR [ebx]
  444579:	jg     0x444599
  44457b:	jge    0x444539
  44457d:	xchg   edx,eax
  44457e:	fiadd  WORD PTR [ebx]
  444580:	xchg   edi,eax
  444581:	jp     0x44454c
  444583:	hlt    
  444584:	mov    eax,DWORD PTR [edx+0x2e]
  444587:	sbb    dl,BYTE PTR [edi+0x1e]
  44458a:	dec    eax
  44458b:	sbb    esp,DWORD PTR ds:0x886bb27f
  444591:	int    0xe7
  444593:	sub    DWORD PTR [edi-0x5ee73836],0x8
  44459a:	push   esi
  44459b:	inc    eax
  44459d:	dec    edi
  44459e:	and    esp,eax
  4445a0:	cmp    BYTE PTR [ecx],0x9e
  4445a3:	jbe    0x4445d7
  4445a5:	and    ah,BYTE PTR [eax-0x5917f68f]
  4445ab:	pop    ss
  4445ac:	test   al,0x4e
  4445ae:	pop    edx
  4445af:	inc    DWORD PTR [esi+0x74]
  4445b2:	mov    esi,0xd4b6127a
  4445b7:	cld    
  4445b8:	lods   al,BYTE PTR ds:[esi]
  4445b9:	mov    bl,0xaa
  4445bb:	add    esi,DWORD PTR [ecx]
  4445bd:	xchg   ebx,eax
  4445be:	test   BYTE PTR [esi+0x72f72164],dh
  4445c4:	(bad)  
  4445c6:	ss pop esp
  4445c8:	cmp    dh,BYTE PTR [esi]
  4445ca:	ja     0x44454c
  4445cc:	addr16 xchg esi,eax
  4445ce:	inc    edx
  4445cf:	idiv   BYTE PTR [edi-0x7cd914e4]
  4445d5:	jecxz  0x444599
  4445d7:	icebp  
  4445d8:	pop    edi
  4445d9:	(bad)  
  4445da:	jl     0x44462f
  4445dc:	int3   
  4445dd:	mov    di,0xcbaa
  4445e1:	fucomi st,st(1)
  4445e3:	dec    esi
  4445e4:	mov    cl,0x28
  4445e6:	dec    ebp
  4445e7:	xor    BYTE PTR [ecx+ebx*1],cl
  4445ea:	push   esp
  4445eb:	sub    bh,BYTE PTR [esi+eiz*8+0x78]
  4445ef:	xor    esp,ecx
  4445f1:	xor    al,0xf4
  4445f3:	rcl    BYTE PTR [ebx+0x44e16875],cl
  4445f9:	mov    DWORD PTR [ebp-0x6d],esi
  4445fc:	dec    esi
  4445fd:	mov    ecx,0x25358a9c
  444602:	hlt    
  444603:	or     al,0x72
  444605:	sbb    eax,0xdccafb68
  44460a:	inc    eax
  44460b:	jp     0x444600
  44460d:	test   al,0x8e
  44460f:	adc    eax,0xff432431
  444614:	mov    bh,BYTE PTR ds:0x9b4fd0ae
  44461a:	adc    al,0x69
  44461c:	cdq    
  44461d:	fst    DWORD PTR [ebx]
  44461f:	push   eax
  444620:	loopne 0x4445de
  444622:	mov    eax,ds:0x964a654f
  444627:	neg    dh
  444629:	sub    esp,DWORD PTR [eax]
  44462b:	jo     0x444615
  44462d:	cmp    ebp,DWORD PTR [ebp+0x4e8b1612]
  444633:	xor    eax,0x62157aeb
  444638:	clc    
  444639:	dec    esi
  44463a:	xor    ch,BYTE PTR [ecx-0x55]
  44463d:	push   ss
  44463e:	push   ecx
  44463f:	xchg   esi,eax
  444640:	jns    0x44461d
  444642:	inc    eax
  444643:	jg     0x444675
  444645:	jne    0x4445de
  444647:	ret    
  444648:	popa   
  444649:	test   dh,0x47
  44464c:	cmp    al,0x72
  44464e:	test   al,0xa3
  444650:	xchg   DWORD PTR [eax*2+0x1eb5fa31],ecx
  444657:	mov    esp,0x699be20a
  44465c:	mov    bl,0xdf
  44465e:	std    
  44465f:	mov    DWORD PTR [esi-0x1ccc3d96],ebx
  444665:	outs   dx,BYTE PTR ds:[esi]
  444666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444667:	cmp    dh,BYTE PTR [ebx-0x248d1422]
  44466d:	mov    ch,bl
  44466f:	xchg   BYTE PTR [ebp-0x5f950fe9],cl
  444675:	jbe    0x44464a
  444677:	xor    BYTE PTR [edx-0x1],dh
  44467a:	fs sbb ah,dl
  44467d:	mov    eax,ds:0xb9195e91
  444682:	fs stos DWORD PTR es:[edi],eax
  444684:	addr16 clc 
  444686:	mov    dh,0x25
  444688:	mov    ebp,0xc1754844
  44468d:	inc    ebx
  44468e:	js     0x44470f
  444690:	(bad)  
  444691:	jmp    0x82fd:0x3866fb62
  444698:	imul   esi,DWORD PTR [esi-0x6b],0xffffffa0
  44469c:	xor    eax,0x60695f4b
  4446a1:	retf   
  4446a2:	mov    ebx,DWORD PTR [ebp+0x1f]
  4446a5:	dec    edx
  4446a6:	in     al,dx
  4446a7:	mov    al,0x87
  4446a9:	jbe    0x4446c5
  4446ab:	lea    eax,[edx-0x6]
  4446ae:	jno    0x4446f2
  4446b0:	mov    esi,0x9131151c
  4446b5:	push   edx
  4446b6:	mov    ecx,0x39371e42
  4446bb:	jle    0x4446d4
  4446bd:	aam    0xa5
  4446bf:	pusha  
  4446c0:	outs   dx,BYTE PTR ds:[esi]
  4446c1:	pop    esp
  4446c2:	inc    ebp
  4446c3:	xchg   ebp,eax
  4446c4:	xchg   DWORD PTR [eax+ecx*1+0x4dd71e05],eax
  4446cb:	in     eax,dx
  4446cc:	mov    ch,0x1e
  4446ce:	out    dx,al
  4446cf:	cdq    
  4446d0:	add    eax,DWORD PTR [eax]
  4446d2:	xchg   esi,eax
  4446d3:	mov    ch,0x59
  4446d5:	das    
  4446d6:	test   eax,0x72eb1bf2
  4446db:	mov    edx,0xe49fcf04
  4446e0:	pop    edx
  4446e1:	jg     0x444705
  4446e3:	pop    ebx
  4446e4:	jmp    0xe5d2:0x6a8007e0
  4446eb:	addr16 in al,0x6
  4446ee:	xor    ebx,eax
  4446f0:	sub    BYTE PTR [edx+ebx*1],bh
  4446f3:	ret    
  4446f4:	mov    edi,edi
  4446f6:	jg     0x444678
  4446f8:	xlat   BYTE PTR ds:[ebx]
  4446f9:	cli    
  4446fa:	pushf  
  4446fb:	xor    eax,0x47f93e64
  444700:	add    al,0xa
  444702:	jne    0x444753
  444704:	xor    BYTE PTR [eax],ch
  444706:	les    ecx,FWORD PTR [edx]
  444708:	loop   0x444763
  44470a:	pop    ebp
  44470b:	out    0x30,eax
  44470d:	sub    BYTE PTR [eax+0x635380b8],0x63
  444714:	ins    BYTE PTR es:[edi],dx
  444715:	in     al,0xf5
  444717:	sub    DWORD PTR [edi+0x4b],0x7807633d
  44471e:	push   ss
  44471f:	loop   0x444790
  444721:	dec    esp
  444722:	sbb    ch,BYTE PTR [ecx]
  444724:	xor    al,0x1d
  444726:	jp     0x44479e
  444728:	in     al,dx
  444729:	fsubp  st(1),st
  44472b:	push   ebp
  44472c:	jmp    0x9bb5:0x895b12a6
  444733:	jno    0x4446d8
  444735:	pop    es
  444736:	xchg   ebp,eax
  444737:	dec    eax
  444738:	test   edx,0x905c14f0
  44473e:	popa   
  44473f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444741:	mov    edx,0xd62a0eff
  444746:	push   esp
  444747:	iret   
  444748:	mov    bh,0x41
  44474a:	mov    ds:0x27e05519,al
  44474f:	adc    DWORD PTR [eax+0x25695acf],esi
  444755:	push   ds
  444756:	div    BYTE PTR [esi]
  444758:	push   ebp
  444759:	mov    ch,0x4b
  44475b:	push   es
  44475c:	pop    ecx
  44475d:	or     ebp,DWORD PTR [esp+ebp*1-0x5a]
  444761:	out    dx,al
  444762:	pop    es
  444763:	dec    eax
  444764:	mul    DWORD PTR [ebx+esi*8+0x6c]
  444768:	sbb    al,0x98
  44476a:	mov    eax,ds:0x51e4ee6e
  44476f:	retf   0x8125
  444772:	push   0xffffffb2
  444774:	and    al,0xa8
  444776:	jecxz  0x444714
  444778:	push   0x4a8590a9
  44477d:	fmul   st,st(0)
  44477f:	add    DWORD PTR [ecx+0x695a3d9f],edx
  444785:	sbb    BYTE PTR [edx+0x4f2d7d3f],cl
  44478b:	sub    BYTE PTR [ebp-0xd],al
  44478e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44478f:	fidivr DWORD PTR [ebx-0x15]
  444792:	and    edx,edx
  444794:	mov    esp,esi
  444796:	or     BYTE PTR [ebx+0x1746e348],bl
  44479c:	in     eax,0x99
  44479e:	retf   0x45e9
  4447a1:	and    al,0xa3
  4447a3:	call   0xd93ea287
  4447a8:	mov    dh,0xf5
  4447aa:	jae    0x444753
  4447ac:	out    0x36,al
  4447ae:	mov    edx,0xcaf0c0fb
  4447b3:	jb     0x4447ff
  4447b5:	mov    ebx,0x5c373cf
  4447ba:	pop    ebx
  4447bb:	popa   
  4447bc:	and    eax,0x2f587415
  4447c1:	jne    0x444805
  4447c3:	mov    ebp,esi
  4447c5:	push   esp
  4447c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4447c7:	ja     0x4447f7
  4447c9:	fcomp  DWORD PTR [edx]
  4447cb:	mov    ch,0xae
  4447cd:	lods   eax,DWORD PTR ds:[esi]
  4447ce:	or     BYTE PTR [ebx],bl
  4447d0:	rol    BYTE PTR [esi+ecx*4-0x7ce81f86],1
  4447d7:	mov    BYTE PTR [ecx+0x2a42e25],0x91
  4447de:	fistp  WORD PTR [edx+0x2a]
  4447e1:	add    DWORD PTR [ebx+0x52],edi
  4447e4:	xor    edi,esp
  4447e6:	push   eax
  4447e7:	jno    0x4447d5
  4447e9:	pop    eax
  4447ea:	sar    BYTE PTR [edx],0xa5
  4447ed:	inc    edi
  4447ee:	xchg   ebx,eax
  4447ef:	add    BYTE PTR [esi+0x11],0x39
  4447f3:	pop    eax
  4447f4:	in     al,dx
  4447f5:	push   es
  4447f6:	mov    ecx,0xa1be94c9
  4447fb:	daa    
  4447fc:	mov    edi,0x49075e15
  444801:	xchg   ebp,eax
  444802:	ficom  DWORD PTR [eax+edi*8+0x173836b5]
  444809:	or     eax,0x2e2e4d9
  44480e:	xchg   edi,eax
  44480f:	xchg   edi,eax
  444810:	cwde   
  444811:	mov    ebp,esp
  444813:	push   0xffffffb5
  444815:	repnz ror DWORD PTR [eax-0x3d],1
  444819:	mov    WORD PTR [edi-0x1610a3a6],cs
  44481f:	adc    al,0xba
  444821:	fnsave [eax+edi*2-0xf]
  444825:	cli    
  444826:	(bad)  
  444827:	mov    al,ds:0x8b540078
  44482c:	jno    0x4447c1
  44482e:	pop    esi
  44482f:	fbld   TBYTE PTR [eax]
  444831:	not    esi
  444833:	mov    edx,0x7aca7ee9
  444838:	clc    
  444839:	dec    DWORD PTR ds:0xd9ae2959
  44483f:	mov    DWORD PTR [esp+edi*4],ebp
  444842:	sar    BYTE PTR [edi-0xbccbf32],cl
  444848:	leave  
  444849:	mov    bh,0xc7
  44484b:	jle    0x444802
  44484d:	adc    bl,bh
  44484f:	lea    eax,[ebp-0x67]
  444852:	(bad)  
  444853:	js     0x44489f
  444855:	es jp  0x4448a5
  444858:	mov    edi,0x178444da
  44485d:	xchg   ebp,eax
  44485e:	int3   
  44485f:	out    dx,al
  444860:	cmp    al,0x83
  444862:	pop    ecx
  444863:	retf   0x4338
  444866:	scas   eax,DWORD PTR es:[edi]
  444867:	pop    edi
  444868:	repz add eax,0x45980740
  44486e:	mov    ds:0x2eb2d145,eax
  444873:	arpl   sp,bx
  444875:	jge    0x44481c
  444877:	imul   edi,DWORD PTR [edi+edi*2],0xfa1e779a
  44487e:	xchg   esi,eax
  44487f:	mov    cl,0x7f
  444881:	scas   eax,DWORD PTR es:[edi]
  444882:	loope  0x44484e
  444884:	outs   dx,DWORD PTR ds:[esi]
  444885:	xor    dh,BYTE PTR [ebp-0x62]
  444888:	lods   eax,DWORD PTR ds:[esi]
  444889:	mov    WORD PTR [ebx+0x6],ds
  44488c:	cmc    
  44488d:	inc    ebx
  44488e:	(bad)  
  444890:	dec    edx
  444891:	push   esi
  444892:	push   ds
  444893:	cmp    DWORD PTR [edi+0x82d2c72],edx
  444899:	shr    BYTE PTR [edi-0x62],0xc2
  44489d:	adc    edx,ecx
  44489f:	mov    bh,0x75
  4448a1:	enter  0x13f7,0x94
  4448a5:	or     edx,DWORD PTR [eax+edx*2-0x57]
  4448a9:	mov    bl,0x9f
  4448ab:	je     0x4448e8
  4448ad:	in     eax,0x5a
  4448af:	fild   WORD PTR [ecx]
  4448b1:	ficomp DWORD PTR [esi+0x33]
  4448b4:	shr    BYTE PTR [eax-0x71115d74],cl
  4448ba:	shl    DWORD PTR [ebx+ebx*2+0x23],1
  4448be:	test   eax,0x7d039bf5
  4448c3:	adc    al,0xa3
  4448c5:	xchg   edx,eax
  4448c6:	and    DWORD PTR [eax],edi
  4448c8:	test   BYTE PTR [edx-0x4f11fc33],ch
  4448ce:	pop    eax
  4448cf:	dec    ebp
  4448d0:	jl     0x444920
  4448d2:	mov    bl,0x73
  4448d4:	les    esp,FWORD PTR [edx]
  4448d6:	cmp    BYTE PTR ds:0xf4809e8b,al
  4448dc:	(bad)  
  4448dd:	jae    0x444865
  4448df:	std    
  4448e0:	sbb    cl,bl
  4448e2:	push   ds
  4448e3:	les    ebp,FWORD PTR [ebx]
  4448e5:	sahf   
  4448e6:	cmp    dl,BYTE PTR [eax-0x58]
  4448e9:	iret   
  4448ea:	mov    ds:0xbab8205c,al
  4448ef:	dec    ecx
  4448f0:	mov    ds:0x34b20045,al
  4448f5:	push   eax
  4448f6:	gs mov ah,0xd7
  4448f9:	push   ds
  4448fa:	jne    0x444970
  4448fc:	dec    esi
  4448fd:	pop    esp
  4448fe:	mov    esi,0x94847f8f
  444903:	push   ecx
  444904:	jmp    0xe868cce6
  444909:	cmp    DWORD PTR [eax-0x4a],esi
  44490c:	packssdw mm7,QWORD PTR [ebx]
  44490f:	lea    ecx,[ecx-0x50f46394]
  444915:	pop    ss
  444916:	das    
  444917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444918:	pop    ebx
  444919:	enter  0xca22,0xe7
  44491d:	imul   eax,DWORD PTR [ebx+0x30f7e650],0xffffffcf
  444924:	sbb    DWORD PTR [edi],esi
  444926:	push   eax
  444927:	xchg   esp,eax
  444928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444929:	imul   edx,DWORD PTR [edx+0x34],0x4
  44492d:	leave  
  44492e:	imul   ebx,DWORD PTR [ebp+0x52],0x18
  444932:	lea    ecx,[edi]
  444934:	out    0x5e,al
  444936:	jnp    0x444934
  444938:	imul   ecx,ecx,0x70
  44493b:	or     BYTE PTR [edx-0x4d137290],bl
  444941:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  444943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444944:	sub    edx,ebp
  444946:	adc    BYTE PTR [edx+0x6a],bl
  444949:	push   ecx
  44494a:	fwait
  44494b:	pop    edx
  44494c:	inc    esp
  44494d:	stos   DWORD PTR es:[edi],eax
  44494e:	jmp    0x4448e8
  444950:	add    edi,DWORD PTR [eax+0x26]
  444953:	sbb    eax,0x48fb6f4a
  444958:	jl     0x44492d
  44495a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44495b:	cmp    ebp,0x4dc408c0
  444961:	jg     0x44499e
  444963:	xor    BYTE PTR [ebp-0x69f38b6c],ch
  444969:	jmp    0x5b17bd3f
  44496e:	fmul   QWORD PTR [edx-0x17f81cb9]
  444974:	ins    DWORD PTR es:[edi],dx
  444975:	pop    edx
  444976:	pop    edi
  444977:	pop    ecx
  444978:	test   eax,0x87e60a41
  44497d:	fcom   DWORD PTR [esp+ecx*4+0x52]
  444981:	xchg   esp,eax
  444982:	xchg   ecx,edx
  444984:	lock mov bl,BYTE PTR [ecx+0x5700bc58]
  44498b:	retf   
  44498c:	pop    ecx
  44498d:	adc    DWORD PTR ds:0xa5b39b68,edx
  444993:	inc    eax
  444994:	js     0x444a09
  444996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444997:	in     al,dx
  444998:	inc    edi
  444999:	sti    
  44499a:	jnp    0x444992
  44499c:	cli    
  44499d:	mov    bl,0x65
  44499f:	mov    eax,ds:0x3ac0799d
  4449a4:	cmp    dl,BYTE PTR [eax]
  4449a6:	inc    ecx
  4449a7:	mov    ebp,0xdb0df542
  4449ac:	aaa    
  4449ad:	daa    
  4449ae:	xor    al,0xde
  4449b0:	aad    0x91
  4449b2:	sbb    BYTE PTR [edx+edx*4+0x763d82c9],ch
  4449b9:	sbb    DWORD PTR [ebp-0x47],edi
  4449bc:	sbb    al,0x21
  4449be:	cdq    
  4449bf:	jge    0x4449b6
  4449c1:	inc    esp
  4449c2:	mov    DWORD PTR [ebp-0x2b],ecx
  4449c5:	stos   BYTE PTR es:[edi],al
  4449c6:	enter  0xbede,0xae
  4449ca:	fidivr WORD PTR [esi-0x30]
  4449cd:	xchg   ebp,eax
  4449ce:	xchg   esp,eax
  4449cf:	(bad)  
  4449d0:	push   ebx
  4449d1:	xor    al,al
  4449d3:	inc    esi
  4449d4:	mov    ds:0x809ec061,al
  4449d9:	inc    ebx
  4449da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4449db:	and    BYTE PTR [edx],al
  4449dd:	test   ecx,esi
  4449df:	jecxz  0x4449b4
  4449e1:	mov    dh,0x4b
  4449e3:	lods   eax,DWORD PTR ds:[esi]
  4449e4:	test   eax,0xc9b4c18d
  4449e9:	mov    ebx,esp
  4449eb:	lods   al,BYTE PTR ds:[esi]
  4449ec:	push   esp
  4449ed:	std    
  4449ee:	sbb    ah,al
  4449f0:	aad    0x7e
  4449f2:	iret   
  4449f3:	iret   
  4449f4:	jb     0x444a6b
  4449f6:	pop    edi
  4449f7:	push   es
  4449f8:	cmp    cl,BYTE PTR [eax+eax*1-0x55]
  4449fc:	mov    ds:0xc04e115a,eax
  444a01:	outs   dx,BYTE PTR ds:[esi]
  444a02:	lds    ebx,FWORD PTR [edi+edi*2+0x55f51dc3]
  444a09:	outs   dx,BYTE PTR ds:[esi]
  444a0a:	call   0x873112e2
  444a0f:	addr16 test eax,0xb68ec01e
  444a15:	adc    ah,0x98
  444a18:	fcomi  st,st(6)
  444a1a:	jge    0x444a03
  444a1c:	pop    ebx
  444a1d:	dec    ebp
  444a1e:	cmp    ebx,esi
  444a20:	push   es
  444a21:	mov    ebp,0xa36faee0
  444a26:	push   eax
  444a27:	rol    BYTE PTR [edi],cl
  444a29:	je     0x444a28
  444a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444a2c:	shl    DWORD PTR [ecx+0x23],cl
  444a2f:	mov    WORD PTR [ebx],gs
  444a31:	sahf   
  444a32:	fcmovu st,st(4)
  444a34:	fdiv   QWORD PTR [edi]
  444a36:	lods   eax,DWORD PTR ds:[esi]
  444a37:	sub    ch,BYTE PTR [ebp-0x1b]
  444a3a:	ffreep st(3)
  444a3c:	mov    al,0x86
  444a3e:	dec    esp
  444a3f:	scas   eax,DWORD PTR es:[edi]
  444a40:	(bad)  
  444a41:	ins    BYTE PTR es:[edi],dx
  444a42:	pop    edx
  444a43:	imul   DWORD PTR ds:0x7fb7f5d9
  444a49:	pop    ss
  444a4a:	sahf   
  444a4b:	cmp    edi,0xffffffd1
  444a4e:	ins    DWORD PTR es:[edi],dx
  444a4f:	cmp    eax,0xbed82332
  444a54:	mov    al,ds:0x3b743523
  444a59:	mov    esp,0x1475a80a
  444a5e:	mov    al,0xd5
  444a60:	shr    dh,0xe6
  444a63:	push   esp
  444a64:	int    0x8b
  444a66:	xchg   esi,eax
  444a67:	(bad)
  444a6a:	and    ah,BYTE PTR [ebp+0x60]
  444a6d:	jno    0x4449f2
  444a6f:	dec    edi
  444a70:	push   ss
  444a71:	add    ah,BYTE PTR [esi-0x3b49ac16]
  444a77:	jbe    0x444af5
  444a79:	mov    ds:0xb47564dd,al
  444a7e:	lods   al,BYTE PTR ds:[esi]
  444a7f:	cmp    bh,ch
  444a81:	fucomi st,st(0)
  444a83:	nop
  444a84:	out    0x81,al
  444a86:	push   esp
  444a87:	pop    ecx
  444a88:	pop    edi
  444a89:	pop    ebp
  444a8a:	(bad)  
  444a8b:	jmp    0x444a41
  444a8d:	pop    ss
  444a8e:	xor    eax,0x98df29f
  444a93:	repz sbb ah,bh
  444a96:	xor    BYTE PTR [eax],dh
  444a98:	mov    esi,gs
  444a9a:	scas   al,BYTE PTR es:[edi]
  444a9b:	fnstenv [eax+0x17]
  444a9e:	call   0xfa57db9d
  444aa3:	xchg   ecx,eax
  444aa4:	jno    0x444ad7
  444aa6:	mov    eax,0x1d58b3df
  444aab:	mov    ds:0x706d0e95,eax
  444ab0:	xor    eax,0x5bc33f08
  444ab5:	jo     0x444ac0
  444ab7:	inc    esi
  444ab8:	add    eax,DWORD PTR [ebp+0x7a92441d]
  444abe:	int3   
  444abf:	bound  ecx,QWORD PTR [ecx]
  444ac1:	scas   eax,DWORD PTR es:[edi]
  444ac2:	daa    
  444ac3:	cmc    
  444ac4:	in     al,dx
  444ac5:	xchg   ebp,eax
  444ac6:	inc    eax
  444ac7:	pop    esi
  444ac8:	(bad)  
  444ac9:	mov    WORD PTR [eax+0x4f97f472],ss
  444acf:	outs   dx,BYTE PTR ds:[esi]
  444ad0:	sbb    DWORD PTR [eax],0x980015aa
  444ad6:	cmp    esi,DWORD PTR [edx-0x34]
  444ad9:	xchg   ecx,eax
  444ada:	pushf  
  444adb:	inc    esi
  444adc:	sbb    esp,esp
  444ade:	fst    DWORD PTR [ebx-0x38]
  444ae1:	xchg   esp,eax
  444ae2:	lds    ecx,FWORD PTR [ecx+0x4c]
  444ae5:	jle    0x444b4c
  444ae7:	mov    al,0xea
  444ae9:	sbb    al,0x5e
  444aeb:	lds    ebp,FWORD PTR [ecx+0x280474bd]
  444af1:	les    edi,FWORD PTR [edx+0x60]
  444af4:	add    BYTE PTR fs:[ebx+esi*1+0x42f44a4b],bh
  444afc:	cs jb  0x444b3f
  444aff:	adc    BYTE PTR [ebx-0xd],bh
  444b02:	loopne 0x444b29
  444b04:	cs loop 0x444b3d
  444b07:	jmp    0x384d:0x556393e9
  444b0e:	(bad)  
  444b0f:	test   BYTE PTR [esi],0x47
  444b12:	or     al,0x9c
  444b14:	adc    DWORD PTR [eax+0xaa556ab],0xffffffcb
  444b1b:	popa   
  444b1c:	mov    ds:0xf4001457,eax
  444b21:	fistp  WORD PTR [ebx+eax*1+0xbc3115c]
  444b28:	xchg   ebx,eax
  444b29:	ja     0x444b11
  444b2b:	or     BYTE PTR [ebx],0x39
  444b2e:	and    eax,0x6cce86f5
  444b33:	out    dx,al
  444b34:	rcr    BYTE PTR [edx-0x2f],cl
  444b37:	ret    
  444b38:	mov    ebp,0x8d315760
  444b3d:	push   esi
  444b3e:	retf   
  444b3f:	mov    DWORD PTR [edx-0x53],ecx
  444b42:	(bad)  
  444b43:	add    BYTE PTR [eax-0x4de1eee9],bh
  444b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444b4a:	jmp    0x6fb2c432
  444b4f:	xor    esp,DWORD PTR [edx-0x11a38a5d]
  444b55:	test   eax,0x46c08442
  444b5a:	in     al,0x6d
  444b5c:	push   ds
  444b5d:	push   ss
  444b5e:	and    eax,0x8ab360e4
  444b63:	retf   0x59ad
  444b66:	and    ebp,ebp
  444b68:	mov    al,ds:0xac92e60
  444b6d:	fcomip st,st(1)
  444b6f:	sub    BYTE PTR [ebx],ah
  444b71:	push   ebx
  444b72:	or     bh,BYTE PTR [ebp+edx*8+0x31]
  444b76:	add    eax,0x76ece85c
  444b7b:	loopne 0x444bc2
  444b7d:	adc    ebp,DWORD PTR [ecx+0xffd2698]
  444b83:	jl     0x444beb
  444b85:	xchg   DWORD PTR [edx-0x3e],edi
  444b88:	sub    edx,DWORD PTR [esi+0x22823579]
  444b8e:	bnd data16 je 0x444b53
  444b92:	lock xchg esp,eax
  444b94:	mov    cl,0xb5
  444b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444b97:	and    BYTE PTR [ecx+ecx*4-0x3a],al
  444b9b:	xor    DWORD PTR [edi+0x75],esi
  444b9e:	add    eax,DWORD PTR ds:0xbf8ccaa5
  444ba4:	and    eax,0x4c80c64d
  444ba9:	add    eax,0xd2aa424a
  444bae:	cmp    cl,BYTE PTR [eax-0x10]
  444bb1:	leave  
  444bb2:	test   al,ah
  444bb4:	ss jns 0x444c26
  444bb7:	out    dx,al
  444bb8:	and    dl,BYTE PTR [eax+0x69]
  444bbb:	pop    ebp
  444bbc:	rol    ebx,0x77
  444bbf:	sub    BYTE PTR [edx],dl
  444bc1:	dec    esp
  444bc2:	fld    st(2)
  444bc4:	scas   al,BYTE PTR es:[edi]
  444bc5:	lods   eax,DWORD PTR ds:[esi]
  444bc6:	(bad)  
  444bc7:	adc    bl,BYTE PTR [ebx-0x7e]
  444bca:	loopne 0x444bd9
  444bcc:	sub    eax,0x69b1c6fa
  444bd1:	fidiv  DWORD PTR [esi-0x3]
  444bd4:	fs mov ebp,edx
  444bd7:	or     bl,cl
  444bd9:	loopne 0x444bfc
  444bdb:	and    bh,BYTE PTR [edx+0x8]
  444bde:	cmc    
  444bdf:	mov    dh,0x53
  444be1:	jmp    0x444c50
  444be3:	iret   
  444be4:	into   
  444be5:	xchg   esi,eax
  444be6:	and    DWORD PTR [ebx+0x57],ebx
  444be9:	bound  esi,QWORD PTR [ebx]
  444beb:	or     eax,0x7448adec
  444bf0:	dec    eax
  444bf1:	int3   
  444bf2:	es mov bh,0x72
  444bf5:	ins    DWORD PTR es:[edi],dx
  444bf6:	cs in  eax,0x7f
  444bf9:	xor    bh,BYTE PTR [ecx-0x52]
  444bfc:	pop    ss
  444bfd:	and    ebp,DWORD PTR [eax]
  444bff:	or     al,dl
  444c01:	lock js 0x444bd1
  444c04:	inc    esp
  444c05:	sbb    DWORD PTR [ebp+0x66dec9e3],esp
  444c0b:	or     DWORD PTR [esi+edi*2-0x78dc0d7f],edi
  444c12:	inc    esp
  444c13:	xor    edx,ebx
  444c15:	int    0x84
  444c17:	out    0x81,eax
  444c19:	pop    esp
  444c1a:	stos   BYTE PTR es:[edi],al
  444c1b:	cmp    al,bh
  444c1d:	dec    edi
  444c1e:	cwde   
  444c1f:	shr    BYTE PTR [edi+0x76d40ec6],cl
  444c25:	out    dx,al
  444c26:	ror    BYTE PTR [ecx],0x1b
  444c29:	pop    edi
  444c2a:	fs sub dl,ch
  444c2d:	dec    eax
  444c2e:	inc    eax
  444c2f:	enter  0xb6fb,0xa7
  444c33:	adc    DWORD PTR [esi+0x57],0x16032230
  444c3a:	and    BYTE PTR [edx+0x66],ah
  444c3d:	sbb    al,0xd2
  444c3f:	in     al,dx
  444c40:	sub    ebx,DWORD PTR [esi]
  444c42:	loopne 0x444cb1
  444c44:	inc    edi
  444c45:	dec    edi
  444c46:	stos   DWORD PTR es:[edi],eax
  444c47:	nop
  444c48:	mov    BYTE PTR [eax+0x601ba0cf],bh
  444c4e:	loopne 0x444c8b
  444c50:	push   esi
  444c51:	jl     0x444c43
  444c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444c54:	or     bh,dh
  444c56:	cli    
  444c57:	out    dx,eax
  444c58:	enter  0x98e4,0x57
  444c5c:	pop    eax
  444c5d:	push   ecx
  444c5e:	stc    
  444c5f:	adc    bl,BYTE PTR [ebp-0x6fca50eb]
  444c65:	ret    
  444c66:	scas   eax,DWORD PTR es:[edi]
  444c67:	cmp    eax,0xbf0dc080
  444c6c:	retf   
  444c6d:	mov    BYTE PTR [eax],al
  444c6f:	jmp    0x444c88
  444c71:	adc    al,0x6f
  444c73:	ud0    edx,DWORD PTR [edx-0x24]
  444c77:	add    esp,DWORD PTR [edi+0x760d149b]
  444c7d:	in     al,0xf8
  444c7f:	mov    ch,0x55
  444c81:	retf   0x45b
  444c84:	or     ebp,ecx
  444c86:	shr    DWORD PTR [edx],cl
  444c88:	mov    ds,WORD PTR [eax-0x53]
  444c8b:	fld    QWORD PTR [ebx-0x7f376bf8]
  444c91:	sbb    BYTE PTR [ecx+0x284fd91b],0x32
  444c98:	adc    al,0x55
  444c9a:	popa   
  444c9b:	sar    BYTE PTR [ebp+0x6e406833],1
  444ca1:	cmp    eax,0x11f4480
  444ca6:	sub    ah,dl
  444ca8:	clc    
  444ca9:	or     DWORD PTR [eax+0x68],ebx
  444cac:	jns    0x444d1f
  444cae:	inc    edi
  444caf:	sub    esi,DWORD PTR [esi+eiz*2]
  444cb2:	mov    dh,0x2c
  444cb4:	idiv   DWORD PTR [ecx]
  444cb6:	dec    edi
  444cb7:	addr16 inc esi
  444cb9:	inc    ebp
  444cba:	aas    
  444cbb:	out    0xcf,al
  444cbd:	mov    esi,0xb5ce84aa
  444cc2:	add    ch,dh
  444cc4:	mov    esi,0x42a54a6e
  444cc9:	cs test esp,ebx
  444ccc:	mov    ah,al
  444cce:	inc    edx
  444ccf:	and    ah,BYTE PTR [ebx]
  444cd1:	mov    ds:0xe0fa5ba3,eax
  444cd6:	push   esp
  444cd7:	out    dx,eax
  444cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444cd9:	mov    cl,0x70
  444cdb:	sahf   
  444cdc:	loop   0x444d2f
  444cde:	mov    edx,0xcf1c553a
  444ce3:	test   BYTE PTR ds:0xbb3583d7,bl
  444ce9:	xlat   BYTE PTR ds:[ebx]
  444cea:	(bad)  
  444ceb:	inc    BYTE PTR [ecx+0x12a3514e]
  444cf1:	add    DWORD PTR [esi-0x214c0b8],ebp
  444cf7:	gs inc ecx
  444cf9:	outs   dx,DWORD PTR ds:[esi]
  444cfa:	hlt    
  444cfb:	inc    eax
  444cfc:	pop    ebx
  444cfd:	js     0x444ce3
  444cff:	retf   
  444d00:	jg     0x444d68
  444d02:	ret    0x8966
  444d05:	ret    
  444d06:	out    0x9,eax
  444d08:	sub    cl,BYTE PTR [ecx]
  444d0a:	ss int3 
  444d0c:	adc    bh,BYTE PTR [edi+ebx*4-0x38]
  444d10:	scas   eax,DWORD PTR es:[edi]
  444d11:	xor    BYTE PTR [esi+0x31edf06d],bh
  444d17:	sbb    dl,BYTE PTR [edx]
  444d19:	(bad)  
  444d1a:	fidiv  DWORD PTR [esi-0x18]
  444d1d:	push   esp
  444d1e:	push   edi
  444d1f:	jle    0x444d25
  444d21:	lods   eax,DWORD PTR ds:[esi]
  444d22:	mov    al,0xde
  444d24:	sysret 
  444d26:	hlt    
  444d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444d28:	pushf  
  444d29:	idiv   DWORD PTR [ebx+eiz*2+0x9a4d873]
  444d30:	fcom   QWORD PTR [esp+edx*8]
  444d33:	fs sub esi,ebp
  444d36:	adc    eax,0x8b8c45b7
  444d3b:	xlat   BYTE PTR ds:[ebx]
  444d3c:	inc    edx
  444d3d:	cmp    ecx,0xffffffec
  444d40:	sahf   
  444d41:	popa   
  444d42:	je     0x444d12
  444d44:	inc    ebp
  444d45:	lods   al,BYTE PTR ds:[esi]
  444d46:	cld    
  444d47:	cs inc ecx
  444d49:	aaa    
  444d4a:	loope  0x444d2a
  444d4c:	mov    ah,BYTE PTR [edi]
  444d4e:	mov    esp,eax
  444d50:	ja     0x444d0d
  444d52:	rcr    BYTE PTR [ebp+0x3f44b585],cl
  444d58:	inc    ebp
  444d59:	jl     0x444da8
  444d5b:	inc    ebp
  444d5c:	jnp    0x444d25
  444d5e:	dec    esi
  444d5f:	jl     0x444de0
  444d61:	test   al,0xf4
  444d63:	cli    
  444d64:	fiadd  DWORD PTR [edx-0x3e]
  444d67:	push   eax
  444d68:	xchg   DWORD PTR ds:0x55b2b50d,edx
  444d6e:	imul   DWORD PTR [edi]
  444d70:	pop    ebx
  444d71:	lahf   
  444d72:	xchg   esp,eax
  444d73:	xchg   edx,eax
  444d74:	rcl    ecx,1
  444d76:	lea    ebx,[edx+0x45]
  444d79:	shl    BYTE PTR [esi+0x2],cl
  444d7c:	pushf  
  444d7d:	pusha  
  444d7e:	sbb    DWORD PTR ds:0x1a22dad7,ecx
  444d84:	mov    DWORD PTR ds:0xd4a580b2,esi
  444d8a:	nop
  444d8b:	dec    ecx
  444d8c:	aam    0x4b
  444d8e:	fdivr  st,st(1)
  444d90:	imul   ebx,DWORD PTR [esp+ecx*4-0xf],0xff98e0a0
  444d98:	ins    BYTE PTR es:[edi],dx
  444d99:	xchg   BYTE PTR [eax+ecx*8],ch
  444d9c:	call   0xdeddcf2c
  444da1:	xchg   esi,eax
  444da2:	ret    0x8f48
  444da5:	push   ss
  444da6:	sub    BYTE PTR [ecx+0x1cdff669],ah
  444dac:	adc    eax,0x2a65801d
  444db1:	jle    0x444e14
  444db3:	pop    esp
  444db4:	aam    0x59
  444db6:	pop    ebx
  444db7:	jl     0x444d3a
  444db9:	push   0x3d8873e3
  444dbe:	jp     0x444e29
  444dc0:	jbe    0x444da5
  444dc2:	sub    DWORD PTR [edi],ebx
  444dc4:	test   eax,0xee84ac78
  444dc9:	retf   0x8b6f
  444dcc:	hlt    
  444dcd:	push   edi
  444dce:	dec    eax
  444dcf:	es jo  0x444d55
  444dd2:	jns    0x444e18
  444dd4:	icebp  
  444dd5:	pushf  
  444dd6:	out    dx,eax
  444dd7:	les    edx,FWORD PTR [ecx-0x4]
  444dda:	mov    bl,0xae
  444ddc:	lods   al,BYTE PTR ds:[esi]
  444ddd:	dec    ecx
  444dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444ddf:	cdq    
  444de0:	ins    BYTE PTR es:[edi],dx
  444de1:	repz mov es,esp
  444de4:	loopne 0x444e3a
  444de6:	test   eax,0x6f735ff1
  444deb:	(bad)  
  444dec:	neg    DWORD PTR [edi+0xf]
  444def:	daa    
  444df0:	mov    dl,0x75
  444df2:	aam    0x46
  444df4:	jnp    0x444e2a
  444df6:	mov    edi,0x84d416eb
  444dfb:	xlat   BYTE PTR ds:[ebx]
  444dfc:	sahf   
  444dfd:	ror    ah,cl
  444dff:	call   0xe3ada122
  444e04:	sbb    cl,cl
  444e06:	pop    edx
  444e07:	or     DWORD PTR [ecx+esi*8+0x4f],edi
  444e0b:	sub    DWORD PTR [eax-0x14],ebp
  444e0e:	push   0xfffffffd
  444e10:	stos   DWORD PTR es:[edi],eax
  444e11:	int    0xfe
  444e13:	popa   
  444e14:	mov    ds:0x8b912e5b,al
  444e19:	dec    edx
  444e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444e1b:	(bad)  
  444e1c:	test   eax,0x5ff5afee
  444e21:	imul   edi,edx,0xd4a9ce25
  444e27:	retf   0x5ffd
  444e2a:	xchg   ecx,eax
  444e2b:	inc    ebx
  444e2c:	add    ch,BYTE PTR [esi+0x34]
  444e2f:	jo     0x444eb0
  444e31:	shl    edx,1
  444e33:	out    0x89,eax
  444e35:	dec    ecx
  444e36:	mov    ecx,0x911f63dc
  444e3b:	daa    
  444e3c:	outs   dx,DWORD PTR ds:[esi]
  444e3d:	mov    bl,0x85
  444e3f:	jp     0x444e72
  444e41:	push   0xb9e0cf87
  444e46:	jbe    0x444e52
  444e48:	sub    DWORD PTR [eax+0x57201ea0],0xcb2d4fc2
  444e52:	rcr    DWORD PTR [edx-0x778e8d71],cl
  444e58:	clc    
  444e59:	nop
  444e5a:	or     al,0x95
  444e5c:	sub    al,0x12
  444e5e:	jns    0x444ebe
  444e60:	inc    esp
  444e61:	test   BYTE PTR [edi],bl
  444e63:	aad    0xc
  444e65:	jg     0x444e75
  444e67:	push   0x57d65889
  444e6c:	(bad)  
  444e6d:	mov    esi,0xb7baf0a3
  444e72:	inc    ecx
  444e73:	lods   al,BYTE PTR ds:[esi]
  444e74:	pop    ds
  444e75:	lods   eax,DWORD PTR ds:[esi]
  444e76:	jmp    0x7152:0x3db8cbf2
  444e7d:	test   eax,0x7dea3588
  444e82:	mov    al,0x61
  444e84:	mov    ecx,0xaa2a90c3
  444e89:	lds    edi,FWORD PTR [edi-0x55]
  444e8c:	sti    
  444e8d:	nop
  444e8e:	pop    es
  444e8f:	out    0xec,eax
  444e91:	(bad)  
  444e92:	out    dx,al
  444e93:	or     BYTE PTR [edx-0x3],ch
  444e96:	pop    ebx
  444e97:	aaa    
  444e98:	out    dx,eax
  444e99:	mov    ecx,0x18542f01
  444e9e:	jb     0x57995269
  444ea4:	push   ecx
  444ea5:	fs enter 0xc10f,0x46
  444eaa:	dec    DWORD PTR [ecx]
  444eac:	imul   edi,DWORD PTR [eax+0x5b],0x5a
  444eb0:	push   esp
  444eb1:	out    dx,eax
  444eb2:	lods   eax,DWORD PTR ds:[esi]
  444eb3:	jge    0x444e99
  444eb5:	pop    ds
  444eb6:	dec    ecx
  444eb7:	jae    0x444ef0
  444eb9:	(bad)  
  444eba:	loopne 0x444e7d
  444ebc:	xchg   esi,eax
  444ebd:	ror    BYTE PTR [ebx+0x66c48d61],cl
  444ec3:	push   0x164d07c7
  444ec8:	push   es
  444ec9:	fsub   QWORD PTR [edx]
  444ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444ecc:	xchg   ecx,eax
  444ecd:	mov    al,0xa8
  444ecf:	sub    ah,BYTE PTR [edi+0x4c]
  444ed2:	fcomip st,st(3)
  444ed4:	adc    al,0x5f
  444ed6:	jnp    0x444f38
  444ed8:	adc    eax,0xd4d60226
  444edd:	loope  0x444f37
  444edf:	aas    
  444ee0:	sbb    eax,0x8b15a3fe
  444ee5:	inc    ebp
  444ee6:	ror    ah,0x27
  444ee9:	sub    dl,0xfd
  444eec:	ja     0x444ec5
  444eee:	push   ebx
  444eef:	into   
  444ef0:	loop   0x444f20
  444ef2:	inc    ebp
  444ef3:	addr16 cli 
  444ef5:	adc    BYTE PTR [esi+0x3d2c2a8d],bl
  444efb:	add    al,0x45
  444efd:	mov    ds:0x809c618c,al
  444f02:	mov    edi,0x20e952a0
  444f07:	mov    eax,0x660a6bc0
  444f0c:	lea    edi,[ecx]
  444f0e:	mov    dh,0xb
  444f10:	or     WORD PTR [eax+0x11110141],bx
  444f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444f18:	pop    ebx
  444f19:	cdq    
  444f1a:	test   edi,ecx
  444f1c:	clc    
  444f1d:	adc    al,0x68
  444f1f:	sahf   
  444f20:	std    
  444f21:	pop    eax
  444f22:	fsub   DWORD PTR [ecx-0x5]
  444f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444f26:	sub    BYTE PTR [ebp-0x655d326c],al
  444f2c:	or     DWORD PTR [eax-0x4c],edi
  444f2f:	out    0x26,eax
  444f31:	mov    ecx,DWORD PTR [eax+eiz*1]
  444f34:	add    al,0x5b
  444f36:	cmc    
  444f37:	cmp    ah,dh
  444f39:	ror    BYTE PTR [eax+0x29],cl
  444f3c:	or     bh,bh
  444f3e:	push   eax
  444f3f:	mov    ch,0xb1
  444f41:	js     0x444fb2
  444f43:	loope  0x444f60
  444f45:	pop    es
  444f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444f47:	mov    al,0xdc
  444f49:	jo     0x444f59
  444f4b:	jb     0x444fad
  444f4d:	(bad)  
  444f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444f4f:	call   0x123f:0x65369410
  444f56:	cli    
  444f57:	rcr    BYTE PTR [edi-0x3744515c],1
  444f5d:	sbb    DWORD PTR [edx-0x14],0x5c
  444f61:	repz out dx,eax
  444f63:	mov    eax,0x69204e61
  444f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444f69:	mov    ch,bh
  444f6b:	dec    ebp
  444f6c:	mov    ah,0x36
  444f6e:	(bad)  [ecx+0x42da085f]
  444f74:	jmp    FWORD PTR [esi-0x5ef89976]
  444f7a:	push   edi
  444f7b:	pop    ebx
  444f7c:	mov    al,0xaa
  444f7e:	in     eax,dx
  444f7f:	leave  
  444f80:	pop    ecx
  444f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444f82:	lods   al,BYTE PTR ds:[esi]
  444f83:	sbb    DWORD PTR [edi+ecx*8-0x280b2575],edx
  444f8a:	lods   al,BYTE PTR ds:[esi]
  444f8b:	push   ebp
  444f8c:	xlat   BYTE PTR ds:[ebx]
  444f8d:	les    edi,FWORD PTR [edi+eax*8-0x2]
  444f91:	push   ss
  444f92:	addr16 hlt 
  444f94:	push   ss
  444f95:	out    dx,eax
  444f96:	cmp    DWORD PTR [ebp+0x28],0xffffffc2
  444f9a:	cwde   
  444f9b:	mov    dl,0x24
  444f9d:	adc    ecx,DWORD PTR [eax]
  444f9f:	imul   eax,DWORD PTR [ebx+0x35],0x532c5267
  444fa6:	mov    edi,0x68449c8f
  444fab:	mov    eax,ds:0x952281a8
  444fb0:	pop    ds
  444fb1:	das    
  444fb2:	stc    
  444fb3:	clc    
  444fb4:	jmp    FWORD PTR [ecx-0x40a82b93]
  444fba:	jp     0x444f9f
  444fbc:	mov    dh,0xff
  444fbe:	outs   dx,BYTE PTR ds:[esi]
  444fbf:	call   0xb1a:0xce8142f5
  444fc6:	(bad)  
  444fc7:	mov    ah,0xdd
  444fc9:	ret    
  444fca:	fwait
  444fcb:	cmc    
  444fcc:	jmp    0x934979ca
  444fd1:	leave  
  444fd2:	inc    edx
  444fd3:	dec    ebx
  444fd4:	ret    0x4dbc
  444fd7:	test   eax,0x6f955dd3
  444fdc:	jmp    0x445008
  444fde:	jecxz  0x445054
  444fe0:	enter  0x7e84,0x59
  444fe4:	sub    eax,0x342752dd
  444fe9:	daa    
  444fea:	push   eax
  444feb:	xchg   ebp,eax
  444fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444fed:	rcl    DWORD PTR [edx],cl
  444fef:	or     BYTE PTR [edx+0x64],dl
  444ff2:	psllq  mm2,QWORD PTR [ecx+ebp*1-0x7ad15342]
  444ffa:	push   esp
  444ffb:	add    al,BYTE PTR [esi+0x4ffee8a0]
  445001:	adc    eax,0xb8c6c3b3
  445006:	pop    edx
  445007:	lods   al,BYTE PTR ds:[esi]
  445008:	sub    esp,DWORD PTR [edi+esi*4]
  44500b:	mov    BYTE PTR ds:0x2d1f796c,dl
  445011:	stc    
  445012:	dec    ebx
  445013:	and    al,0xac
  445015:	jnp    0x445081
  445017:	mov    BYTE PTR [edx+0x41e2b56a],ah
  44501d:	aas    
  44501e:	int    0x9
  445020:	imul   ecx,DWORD PTR [edi],0xffffff8a
  445023:	jno    0x44507e
  445025:	(bad)  [ebx+0x3e]
  445028:	in     al,dx
  445029:	int    0xb6
  44502b:	addr16 out dx,al
  44502d:	imul   ebp,DWORD PTR [ebx],0x3cb7d3cf
  445033:	stos   DWORD PTR es:[edi],eax
  445034:	std    
  445035:	gs mov dl,0x77
  445038:	nop
  445039:	in     al,0x9b
  44503b:	mov    dh,0x2b
  44503d:	adc    ecx,DWORD PTR [ebx-0x4edf514d]
  445043:	add    al,BYTE PTR [esi]
  445045:	mov    esi,0x7e90a06d
  44504a:	and    bh,BYTE PTR es:[ebx]
  44504d:	(bad)  
  44504e:	sub    eax,0x185aa650
  445053:	mov    eax,ds:0x37f450e6
  445058:	sahf   
  445059:	push   ebp
  44505a:	int    0x18
  44505c:	dec    edx
  44505d:	and    al,cl
  44505f:	sub    esp,DWORD PTR [edx-0x3e]
  445062:	mov    edx,0xae9f85d6
  445067:	sbb    DWORD PTR [esi],0xedcc79cc
  44506d:	cmp    al,0x73
  44506f:	pslld  mm6,QWORD PTR [esi]
  445072:	jl     0x445013
  445074:	fsub   QWORD PTR [ecx-0xf]
  445077:	xor    bh,dh
  445079:	test   DWORD PTR [esi],0xa8cbf341
  44507f:	cs std 
  445081:	cmp    ecx,DWORD PTR [ecx-0x3de16342]
  445087:	jbe    0x445041
  445089:	pop    eax
  44508a:	or     DWORD PTR [ebp-0x26],0x6f
  44508e:	sahf   
  44508f:	push   eax
  445090:	or     ebx,DWORD PTR [edi-0x2db2bad6]
  445096:	jb     0x445085
  445098:	dec    eax
  445099:	fs adc al,0xe4
  44509c:	mov    eax,ds:0x1eee8cc5
  4450a1:	subps  xmm3,xmm2
  4450a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4450a5:	std    
  4450a6:	imul   esi
  4450a8:	repnz mov DWORD PTR [esi+0x58],eax
  4450ac:	int3   
  4450ad:	add    BYTE PTR [ecx+0x6f],ah
  4450b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4450b1:	add    al,0x30
  4450b3:	aas    
  4450b4:	call   0xc01e11ec
  4450b9:	out    0xff,eax
  4450bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4450bc:	std    
  4450bd:	xor    al,0xf6
  4450bf:	clc    
  4450c0:	ins    DWORD PTR es:[edi],dx
  4450c1:	cmc    
  4450c2:	mov    bh,0x2c
  4450c4:	add    al,dl
  4450c6:	repnz mov bl,0x86
  4450c9:	add    al,0xa8
  4450cb:	imul   eax,DWORD PTR [ebp+0x6a],0x56d69e20
  4450d2:	push   ds
  4450d3:	and    ebx,DWORD PTR [eax+edx*2-0x26e8428c]
  4450da:	(bad)  
  4450db:	or     ch,BYTE PTR [eax+0x5868c316]
  4450e1:	xor    al,0x5
  4450e3:	lds    edi,FWORD PTR [ecx+0x14]
  4450e6:	test   al,0x0
  4450e8:	in     eax,dx
  4450e9:	data16 fstp TBYTE PTR [edi]
  4450ec:	add    bh,BYTE PTR [eax]
  4450ee:	add    BYTE PTR [edi+0x7b251b20],0x39
  4450f5:	inc    esi
  4450f6:	sbb    BYTE PTR [ebx],dh
  4450f8:	and    bh,BYTE PTR [ebx+0x7c767d3]
  4450fe:	call   0xf5d06ee4
  445103:	adc    eax,DWORD PTR [eax]
  445105:	mov    ah,BYTE PTR [ecx]
  445107:	outs   dx,BYTE PTR ds:[esi]
  445108:	jp     0x445161
  44510a:	cmp    al,BYTE PTR [eax+0x1a]
  44510d:	push   ebx
  44510e:	xchg   edx,eax
  44510f:	test   DWORD PTR [edx+0x3a],edx
  445112:	in     al,0xc2
  445114:	inc    edi
  445115:	in     eax,0xb5
  445117:	dec    edi
  445118:	pusha  
  445119:	mov    ds:0x15d623a7,al
  44511e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44511f:	inc    ebp
  445120:	jg     0x4450d5
  445122:	push   ss
  445123:	sbb    bh,BYTE PTR [eax+0x6a7693ff]
  445129:	idiv   BYTE PTR [eax+eiz*2+0x24998365]
  445130:	aas    
  445131:	aas    
  445132:	jge    0x4450f4
  445134:	and    BYTE PTR [edx-0x3d2940be],0xc7
  44513b:	mov    eax,ds
  44513d:	push   esi
  44513e:	push   ds
  44513f:	xor    esi,ecx
  445141:	dec    edx
  445142:	jo     0x445117
  445144:	xchg   ebx,eax
  445145:	jb     0x4450e6
  445147:	mov    dl,0x69
  445149:	scas   al,BYTE PTR es:[edi]
  44514a:	(bad)  
  44514b:	adc    BYTE PTR [esi-0x35],bl
  44514e:	dec    ebx
  44514f:	sbb    eax,0x67de4376
  445154:	cwde   
  445155:	and    al,BYTE PTR [eax]
  445157:	out    dx,eax
  445158:	sti    
  445159:	popf   
  44515a:	cmp    eax,0xde017f36
  44515f:	xor    esi,DWORD PTR [ecx-0x4e]
  445162:	call   FWORD PTR [edx]
  445164:	add    BYTE PTR [eax-0x7a9ff05],al
  44516a:	mov    al,0x6a
  44516c:	or     esi,ecx
  44516e:	and    dl,ah
  445170:	and    bh,BYTE PTR [edx+0x66]
  445173:	mov    esp,0xfe21ca7d
  445178:	(bad)  
  445179:	jbe    0x9f7a8086
  44517f:	clc    
  445180:	xor    al,0xc0
  445182:	test   DWORD PTR [eax-0x24],ebp
  445185:	ja     0x44516b
  445187:	outs   dx,BYTE PTR ds:[esi]
  445188:	adc    ch,BYTE PTR [esi]
  44518a:	add    DWORD PTR [ebx],0x138944c6
  445190:	fs ins BYTE PTR es:[edi],dx
  445192:	jae    0x445170
  445194:	ficomp WORD PTR [edx]
  445196:	cmp    DWORD PTR [edx+0x30f3ce4],eax
  44519c:	add    edx,DWORD PTR [ecx-0x64]
  44519f:	int    0xb0
  4451a1:	or     edi,DWORD PTR [ecx+0x2cc0a615]
  4451a7:	rcr    DWORD PTR [edi+ebp*4+0x5a710cea],cl
  4451ae:	and    BYTE PTR [ebp+0x7a018ff5],0xa9
  4451b5:	in     eax,dx
  4451b6:	loopne 0x4451df
  4451b8:	je     0x4451ea
  4451ba:	sub    esp,ebp
  4451bc:	pop    ebp
  4451bd:	ss pop ebx
  4451bf:	mov    esp,0x5a4b0c3c
  4451c4:	hlt    
  4451c5:	ss jg  0x445187
  4451c8:	test   BYTE PTR [ecx-0x4b],cl
  4451cb:	pushf  
  4451cc:	arpl   WORD PTR [edx+0x13],bp
  4451cf:	adc    BYTE PTR [eax],ch
  4451d1:	das    
  4451d2:	add    eax,0xce5d0841
  4451d7:	mov    cl,BYTE PTR [ebp+eiz*4-0x324c3f06]
  4451de:	fdiv   QWORD PTR [esp+ebp*4+0x3c]
  4451e2:	mov    esi,0x24e62124
  4451e7:	in     eax,0xfd
  4451e9:	in     eax,dx
  4451ea:	sti    
  4451eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4451ec:	popa   
  4451ed:	fldcw  WORD PTR [edi+0x2eaa1490]
  4451f3:	jp     0x4451bb
  4451f5:	inc    esi
  4451f6:	dec    eax
  4451f7:	cmp    cl,ah
  4451f9:	sub    BYTE PTR [eax+0x56df10d],dl
  4451ff:	aaa    
  445200:	scas   eax,DWORD PTR es:[edi]
  445201:	mov    bh,BYTE PTR [ebx+0x68]
  445204:	jbe    0x44523e
  445206:	jmp    0x15d411d1
  44520b:	xchg   esi,eax
  44520c:	dec    ebp
  44520d:	jg     0x445229
  44520f:	xor    eax,0x100f5c4
  445214:	icebp  
  445215:	jmp    0x445210
  445217:	gs dec ebp
  445219:	ins    DWORD PTR es:[edi],dx
  44521a:	mov    esp,0x264a30ab
  44521f:	fbstp  TBYTE PTR [ebx+0x3e96a45c]
  445225:	push   cs
  445226:	pop    ds
  445227:	mov    edx,0x9ed7699
  44522c:	icebp  
  44522d:	push   eax
  44522e:	fcmovu st,st(3)
  445230:	enter  0x6656,0x4e
  445234:	or     al,0x3f
  445236:	sbb    ebx,DWORD PTR [ebp-0x656318f6]
  44523c:	shl    DWORD PTR ds:0x1effcfac,cl
  445242:	push   esi
  445243:	pop    edi
  445244:	inc    edx
  445245:	pop    edi
  445246:	jge    0x445224
  445248:	add    eax,0xbac4c62b
  44524d:	mov    al,ds:0xecdb40ad
  445252:	shr    bl,1
  445254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445255:	lods   al,BYTE PTR ds:[esi]
  445256:	inc    edi
  445257:	shl    BYTE PTR [edi],0x89
  44525a:	adc    edx,DWORD PTR [ecx+esi*8-0x19]
  44525e:	sbb    DWORD PTR [esi+0x7f80fb75],esp
  445264:	cwde   
  445265:	call   0xadc6f226
  44526a:	xor    eax,0xad924940
  44526f:	outs   dx,BYTE PTR ds:[esi]
  445270:	jo     0x445287
  445272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445273:	inc    esi
  445274:	pop    es
  445275:	xchg   BYTE PTR [esi+0x6f],dl
  445278:	push   edx
  445279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44527a:	fnstenv [ebx+0xc39ab4a]
  445280:	mov    cl,0x6c
  445282:	mov    DWORD PTR [esi-0x4c],ecx
  445285:	mov    esp,0x1066ef50
  44528a:	dec    ecx
  44528b:	and    BYTE PTR [ebp+0x77f80c24],al
  445291:	(bad)  ds:0x64b5d0b2
  445297:	sbb    BYTE PTR [ecx-0xaf2a26e],ch
  44529d:	into   
  44529e:	pop    ds
  44529f:	cmp    DWORD PTR [ebx],ebp
  4452a1:	nop
  4452a2:	inc    esp
  4452a3:	lahf   
  4452a4:	add    al,0x31
  4452a6:	inc    ebx
  4452a7:	jns    0x445304
  4452a9:	push   0xffffffd0
  4452ab:	mov    ah,0xaa
  4452ad:	fidiv  DWORD PTR [ebp+0x2b378eff]
  4452b3:	xchg   edi,eax
  4452b4:	sub    eax,edi
  4452b6:	cmp    al,0xa
  4452b8:	jns    0x4452fb
  4452ba:	cs loop 0x44529d
  4452bd:	hlt    
  4452be:	mov    ch,0x4a
  4452c0:	(bad)  
  4452c1:	into   
  4452c2:	jbe    0x4452a0
  4452c4:	pusha  
  4452c5:	xor    al,0x52
  4452c7:	std    
  4452c8:	jmp    0x9020de5d
  4452cd:	(bad)  
  4452ce:	repnz hlt 
  4452d0:	fs xchg ecx,eax
  4452d2:	arpl   WORD PTR [eax+0x20b3743c],cx
  4452d8:	les    ebx,FWORD PTR [ebp+0x16]
  4452db:	fcomp  DWORD PTR [edx]
  4452dd:	mov    ah,0x23
  4452df:	fdivp  st(3),st
  4452e1:	add    al,0xab
  4452e3:	jns    0x445286
  4452e5:	fild   DWORD PTR [edx+esi*2+0x5b83f64d]
  4452ec:	mov    ss,edi
  4452ee:	stc    
  4452ef:	xor    eax,0x6eb2c1bb
  4452f4:	sti    
  4452f5:	or     al,0xb9
  4452f7:	jb     0x44532e
  4452f9:	jno    0x445291
  4452fb:	ror    BYTE PTR [eax+0x2b],0xb3
  4452ff:	add    eax,0xbf1bccc2
  445304:	and    BYTE PTR [ebp+0x531a8dae],bl
  44530a:	jg     0x4452ee
  44530c:	enter  0x7266,0x60
  445310:	ret    0xabae
  445313:	mov    ebx,0x35976123
  445318:	jecxz  0x4452a0
  44531a:	pop    ebx
  44531b:	jno    0x4452ab
  44531d:	loopne 0x445318
  44531f:	pop    ebx
  445320:	stos   BYTE PTR es:[edi],al
  445321:	sti    
  445322:	jns    0x445339
  445324:	call   0xf9ac70cf
  445329:	mov    ebp,0xcb2deb5e
  44532e:	lea    esi,[esi+0x2e6838b6]
  445334:	mov    al,0x7d
  445336:	push   eax
  445337:	fdiv   QWORD PTR [esi+0x743b80cc]
  44533d:	dec    edx
  44533e:	push   ebx
  44533f:	retf   
  445340:	fisttp WORD PTR [esi+0x25de975e]
  445346:	xchg   esi,eax
  445347:	mov    eax,0xe740a294
  44534c:	lds    ebp,FWORD PTR [ecx]
  44534e:	mov    bh,0xdb
  445350:	lock dec esi
  445352:	out    dx,eax
  445353:	add    DWORD PTR [edx],esi
  445355:	cmc    
  445356:	retf   
  445357:	int    0x3b
  445359:	and    dh,BYTE PTR [edi]
  44535b:	in     eax,dx
  44535c:	repnz inc edx
  44535e:	push   0x43
  445360:	jo     0x445368
  445362:	xor    BYTE PTR [ecx+0x30ad67],dl
  445368:	xor    DWORD PTR [eax],ecx
  44536a:	ret    0xca59
  44536d:	push   0x79fd9a7f
  445372:	jno    0x445390
  445374:	xlat   BYTE PTR ds:[ebx]
  445375:	pop    ebp
  445376:	les    esi,FWORD PTR ds:0xac6482f4
  44537c:	mov    al,0x99
  44537e:	or     ecx,eax
  445380:	repnz (bad) 
  445382:	sbb    dl,ah
  445384:	dec    esi
  445385:	sbb    al,0x5b
  445387:	jmp    0xd022:0x1413f7ac
  44538e:	les    edx,FWORD PTR [esi]
  445390:	aas    
  445391:	mov    ecx,0x1739640d
  445396:	push   edi
  445397:	fcmovb st,st(4)
  445399:	or     edi,DWORD PTR ds:0xab6e87b4
  44539f:	rcl    DWORD PTR [esi-0x6832f7b7],cl
  4453a5:	sub    DWORD PTR [eax-0x18],ebp
  4453a8:	xor    ecx,edx
  4453aa:	gs pop edx
  4453ac:	test   al,0xc9
  4453ae:	dec    esi
  4453af:	mov    bh,BYTE PTR [bx+si+0x4bf8]
  4453b4:	sub    ecx,edx
  4453b6:	xchg   edx,eax
  4453b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4453b8:	cmp    bh,BYTE PTR [ecx+0x76]
  4453bb:	push   esi
  4453bc:	push   esp
  4453bd:	jnp    0x445421
  4453bf:	ret    
  4453c0:	mov    ebp,DWORD PTR [ecx+0x6b77f941]
  4453c6:	js     0x44536f
  4453c8:	sub    esi,DWORD PTR [edx+0x49]
  4453cb:	enter  0x6caf,0x7f
  4453cf:	xchg   edi,eax
  4453d0:	int    0xee
  4453d2:	loop   0x44535e
  4453d4:	scas   al,BYTE PTR es:[edi]
  4453d5:	pop    esp
  4453d6:	push   ds
  4453d7:	test   eax,0x45586e03
  4453dc:	(bad)
  4453df:	add    al,0x35
  4453e1:	iret   
  4453e2:	scas   eax,DWORD PTR es:[edi]
  4453e3:	imul   ebx,DWORD PTR [edi],0x7
  4453e6:	pop    edi
  4453e7:	push   ebp
  4453e8:	jae    0x44542b
  4453ea:	mov    ds:0x895b22f9,eax
  4453ef:	adc    BYTE PTR [edx-0x5d],dh
  4453f2:	add    DWORD PTR [ebx+eiz*8+0x7ff19c84],eax
  4453f9:	and    dh,ah
  4453fb:	dec    eax
  4453fc:	je     0x44542a
  4453fe:	mov    esp,0xe542eb99
  445403:	int    0x41
  445405:	jb     0x4453b0
  445407:	xchg   edi,eax
  445408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445409:	sub    DWORD PTR [ecx+0x7a],0xb98eb7eb
  445410:	jbe    0x445419
  445412:	dec    edx
  445413:	dec    esp
  445414:	ds xchg bh,cl
  445417:	in     eax,0x40
  445419:	(bad)  
  44541a:	jge    0x44542b
  44541c:	repz std 
  44541e:	hlt    
  44541f:	outs   dx,DWORD PTR ds:[esi]
  445420:	inc    ebx
  445421:	add    bp,WORD PTR [edi+0x28d3fb82]
  445428:	lahf   
  445429:	sbb    dl,BYTE PTR [ecx]
  44542b:	shr    DWORD PTR [ecx],0x2d
  44542e:	mov    bl,0x13
  445430:	push   cs
  445431:	jg     0x445407
  445433:	hlt    
  445434:	retf   
  445435:	cdq    
  445436:	inc    ecx
  445437:	mov    ch,0x5f
  445439:	(bad)  
  44543a:	(bad)  
  44543b:	into   
  44543c:	cmp    DWORD PTR [ebx+0x26],ebp
  44543f:	or     ah,BYTE PTR [eax+ecx*4+0x6e16e151]
  445446:	js     0x4454ab
  445448:	(bad)  
  445449:	out    dx,al
  44544a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44544b:	cwde   
  44544c:	stos   DWORD PTR es:[edi],eax
  44544d:	cld    
  44544e:	inc    esi
  44544f:	or     eax,DWORD PTR [ebp-0x15026864]
  445455:	ret    
  445456:	pop    eax
  445457:	test   eax,0xdcfacc41
  44545c:	add    bl,al
  44545e:	adc    edi,edi
  445460:	sub    eax,0xcd2fa7c
  445465:	loop   0x4453f5
  445467:	jg     0x4454db
  445469:	jl     0x44546c
  44546b:	cld    
  44546c:	mov    esp,0x9466f198
  445471:	or     eax,0x6ab6d102
  445476:	pop    edi
  445477:	add    bh,BYTE PTR [edi+0x25e841ee]
  44547d:	dec    edi
  44547e:	sub    eax,0x7dd152b5
  445483:	inc    edi
  445484:	lods   al,BYTE PTR ds:[esi]
  445485:	adc    esi,DWORD PTR [ebx-0x4c]
  445488:	loope  0x445473
  44548a:	pop    ebp
  44548b:	xchg   ebx,eax
  44548c:	add    eax,0x9fdac8d3
  445491:	imul   ebx,eax,0x3a33bd30
  445497:	push   edi
  445498:	push   ecx
  445499:	outs   dx,BYTE PTR ds:[esi]
  44549a:	sahf   
  44549b:	mov    dl,0x4f
  44549d:	cld    
  44549e:	cmp    DWORD PTR [ebx-0x4e3a5433],0x7
  4454a5:	push   edx
  4454a6:	adc    ebp,eax
  4454a8:	fdiv   DWORD PTR [edi]
  4454aa:	pop    ebp
  4454ab:	dec    esp
  4454ac:	les    ebx,FWORD PTR [edx+0x54be4f4b]
  4454b2:	xchg   esp,eax
  4454b3:	lods   al,BYTE PTR ds:[esi]
  4454b4:	xchg   ebp,eax
  4454b5:	icebp  
  4454b6:	jns    0x4454b6
  4454b8:	pop    ecx
  4454b9:	repnz cmp edx,esi
  4454bc:	xor    ah,BYTE PTR ds:0xeb65e2f4
  4454c2:	mov    eax,0x7743cf3c
  4454c7:	call   0xbd2c0cc8
  4454cc:	retf   
  4454cd:	add    DWORD PTR [ecx+0x16],ecx
  4454d0:	into   
  4454d1:	jg     0x4454c0
  4454d3:	sbb    eax,edx
  4454d5:	test   ebp,0xe4c07066
  4454db:	stos   DWORD PTR es:[edi],eax
  4454dc:	inc    ebx
  4454dd:	dec    edi
  4454de:	inc    eax
  4454df:	and    DWORD PTR [esi-0x3fd3a40d],0x43c0dcca
  4454e9:	addr16 pushf 
  4454eb:	dec    ebx
  4454ec:	or     DWORD PTR [edi],ebx
  4454ee:	lods   al,BYTE PTR ds:[esi]
  4454ef:	mov    esp,0x3b402f50
  4454f4:	ins    BYTE PTR es:[edi],dx
  4454f5:	push   ss
  4454f6:	and    al,BYTE PTR [ebp+0x63c8fb6f]
  4454fc:	cmp    DWORD PTR [edi+0x7479705d],ebp
  445502:	nop
  445503:	push   es
  445504:	jge    0x44550d
  445506:	sbb    ebp,esi
  445508:	push   edi
  445509:	addr16 mov ch,0x4
  44550c:	add    ebx,esp
  44550e:	mov    eax,cr4
  445511:	mov    edx,0x12695df0
  445516:	pop    ebp
  445517:	jle    0x445527
  445519:	or     al,0x7f
  44551b:	xchg   ecx,eax
  44551c:	rol    DWORD PTR [esi],1
  44551e:	inc    esi
  44551f:	nop
  445520:	or     al,0x91
  445522:	push   0x49
  445524:	xchg   edx,eax
  445525:	pop    esp
  445526:	push   0x32b339af
  44552b:	ins    BYTE PTR es:[edi],dx
  44552c:	mov    BYTE PTR [edi],bh
  44552e:	jp     0x4454c2
  445530:	(bad)  
  445531:	adc    eax,0x67670a6
  445536:	stos   BYTE PTR es:[edi],al
  445537:	ins    BYTE PTR es:[edi],dx
  445538:	cmp    eax,0xfe18747
  44553d:	mov    bh,0xb4
  44553f:	adc    al,BYTE PTR [esi+ecx*2-0x5b662b4f]
  445546:	push   es
  445547:	and    al,0x44
  445549:	bnd jmp DWORD PTR [edi+esi*2-0x2d]
  44554e:	or     BYTE PTR [esi+0x440234b4],dl
  445554:	cld    
  445555:	lock dec ebx
  445557:	jmp    0x2a8b:0xc133a780
  44555e:	sub    bh,cl
  445560:	add    al,0x54
  445562:	cmp    al,0x4
  445564:	scas   al,BYTE PTR es:[edi]
  445565:	pop    esp
  445566:	(bad)  [ebp-0x1]
  445569:	sar    DWORD PTR [esi],1
  44556b:	sbb    eax,0x3ad0da84
  445570:	into   
  445571:	xchg   DWORD PTR [esi],ecx
  445573:	imul   edi,DWORD PTR [ecx+0x4f],0xd2c57b9e
  44557a:	inc    esi
  44557b:	xchg   ebp,eax
  44557c:	mov    ecx,DWORD PTR [edi]
  44557e:	push   ebx
  44557f:	push   ebp
  445580:	dec    ebx
  445581:	cmp    dh,dl
  445583:	ret    
  445584:	iret   
  445585:	and    eax,0xc304779b
  44558a:	xchg   ebp,eax
  44558b:	or     bl,BYTE PTR ds:0x42bc1fa3
  445591:	and    cl,ch
  445593:	xor    al,0xf6
  445595:	imul   edi,DWORD PTR [esp+edi*4],0xffffff9c
  445599:	xchg   ecx,eax
  44559a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44559b:	push   eax
  44559c:	enter  0x39d7,0x58
  4455a0:	cdq    
  4455a1:	out    dx,eax
  4455a2:	call   0x1cfbc41b
  4455a7:	fstp   TBYTE PTR [ebp-0x7e]
  4455aa:	cli    
  4455ab:	(bad)
  4455b0:	mov    ah,0xb5
  4455b2:	mov    ah,0x15
  4455b4:	xchg   ebp,ebp
  4455b6:	jmp    0x4455b2
  4455b8:	scas   al,BYTE PTR es:[edi]
  4455b9:	aad    0x68
  4455bb:	mov    al,0x41
  4455bd:	xchg   edi,eax
  4455be:	out    dx,al
  4455bf:	into   
  4455c0:	rol    DWORD PTR fs:[ecx-0x4b501a7e],0xa3
  4455c8:	jae    0x445565
  4455ca:	(bad)  
  4455cb:	pop    esp
  4455cc:	ins    DWORD PTR es:[edi],dx
  4455cd:	iret   
  4455ce:	pushf  
  4455cf:	cmp    eax,0x6a30e03b
  4455d4:	xchg   ecx,eax
  4455d5:	pushf  
  4455d6:	lock push DWORD PTR [esi-0x26b8d6cb]
  4455dd:	sbb    dh,BYTE PTR [ebp-0xb]
  4455e0:	fist   DWORD PTR [ebx+0x4b]
  4455e3:	sub    DWORD PTR [ebx*8-0x6002b8e2],edi
  4455ea:	xchg   DWORD PTR [edi+0x77],ecx
  4455ed:	xchg   esp,eax
  4455ee:	test   ebp,esi
  4455f0:	pop    ds
  4455f1:	int    0x86
  4455f3:	jmp    0x6707:0x4692936b
  4455fa:	push   esi
  4455fb:	retf   
  4455fc:	cdq    
  4455fd:	lds    ecx,FWORD PTR [eax+ecx*2]
  445600:	sub    esp,DWORD PTR [eax]
  445602:	dec    eax
  445603:	sub    DWORD PTR [ecx],esi
  445605:	adc    al,0xdd
  445607:	and    BYTE PTR [eax+eiz*8+0x7e],ch
  44560b:	daa    
  44560c:	push   ebx
  44560d:	sub    BYTE PTR [edi+0x2973389d],dl
  445613:	(bad)  
  445614:	clc    
  445615:	push   di
  445617:	stos   BYTE PTR es:[edi],al
  445618:	push   ebx
  445619:	push   cs
  44561a:	gs into 
  44561c:	das    
  44561d:	(bad)  
  44561e:	pop    edx
  44561f:	adc    BYTE PTR [ecx+0x61],ch
  445622:	sbb    esi,DWORD PTR ds:[ebx+0x7d2b9cd7]
  445629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44562a:	dec    esp
  44562b:	lds    eax,FWORD PTR [ecx+0x39c5fe3d]
  445631:	lds    eax,FWORD PTR [esi]
  445633:	(bad)  
  445634:	sti    
  445635:	and    DWORD PTR [eax-0x11],eax
  445638:	xor    BYTE PTR [eax+0x45],0x45
  44563c:	ret    
  44563d:	int    0x2
  44563f:	push   cs
  445640:	mov    ah,0x70
  445642:	out    dx,eax
  445643:	fstp   TBYTE PTR [edi]
  445645:	adc    ecx,DWORD PTR [ebp+0x3]
  445648:	ror    bh,cl
  44564a:	pop    esp
  44564b:	sub    eax,0x3b6a7cc6
  445650:	xchg   edx,eax
  445651:	arpl   WORD PTR [ecx-0x21181309],ax
  445657:	pop    ebp
  445658:	cmc    
  445659:	or     ecx,DWORD PTR [esp+esi*2+0x2c419c7]
  445660:	cmp    bh,ah
  445662:	ret    0xe446
  445665:	jb     0x445660
  445667:	xchg   edi,eax
  445668:	xor    al,0xb5
  44566a:	inc    ecx
  44566b:	and    dl,BYTE PTR [ecx-0x5b44abb1]
  445671:	repnz sub ebp,esp
  445674:	lock add al,0x2a
  445677:	loopne 0x445648
  445679:	out    0xe4,eax
  44567b:	push   ebp
  44567c:	mov    bh,0x84
  44567e:	push   ss
  44567f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445680:	sub    esp,DWORD PTR [ebx+0x62]
  445683:	mov    cl,0x88
  445685:	retf   
  445686:	xor    eax,0x385eec05
  44568b:	adc    al,0x79
  44568d:	call   0x7102dfbb
  445692:	pop    ecx
  445693:	out    0xc6,al
  445695:	xchg   edi,eax
  445696:	call   0x9b40:0x26e4676b
  44569d:	(bad)
  4456a0:	sub    al,0xbb
  4456a2:	rol    DWORD PTR [esi+ebp*1-0x34],cl
  4456a6:	mov    DWORD PTR [ebp-0x117d4ef3],ebx
  4456ac:	xorps  xmm5,XMMWORD PTR [esi+0xa]
  4456b0:	mov    eax,DWORD PTR [ebx+0x1f]
  4456b3:	jbe    0x445712
  4456b5:	pushf  
  4456b6:	lods   eax,DWORD PTR ds:[esi]
  4456b7:	test   eax,0x57a85aa
  4456bc:	dec    eax
  4456bd:	sbb    eax,0xa50b735a
  4456c2:	(bad)  
  4456c3:	(bad)  
  4456c5:	jecxz  0x4456bf
  4456c7:	dec    DWORD PTR [ebp+0x26360578]
  4456cd:	and    al,0xaa
  4456cf:	in     eax,dx
  4456d0:	mov    ds:0x75cb51df,eax
  4456d5:	push   ebp
  4456d6:	mov    ah,0xcc
  4456d8:	les    esi,FWORD PTR [ecx-0x1]
  4456db:	shl    DWORD PTR [eax+0x63],1
  4456de:	nop
  4456df:	retf   
  4456e0:	dec    ebx
  4456e1:	sbb    esi,edi
  4456e3:	push   edi
  4456e4:	cmp    DWORD PTR [ecx],0x6a
  4456e7:	mov    ch,0x9e
  4456e9:	jno    0x4456ce
  4456eb:	sub    BYTE PTR [ecx+0x77],ch
  4456ee:	call   0x90a5:0xefe4a7fd
  4456f5:	cmp    al,BYTE PTR [eax]
  4456f7:	add    al,0x73
  4456f9:	stc    
  4456fa:	mov    BYTE PTR [eax-0x1a31e0db],dl
  445700:	scas   eax,DWORD PTR es:[edi]
  445701:	dec    ecx
  445702:	mov    ah,0xa1
  445704:	jnp    0x4456b5
  445706:	mov    ecx,DWORD PTR [eax+ebx*2]
  445709:	mov    ecx,0x49ad8e49
  44570e:	hlt    
  44570f:	ret    
  445710:	push   esi
  445711:	dec    edi
  445712:	mov    al,0x2e
  445714:	and    eax,0x7cc8acf4
  445719:	sub    al,0x58
  44571b:	push   edi
  44571c:	push   ebx
  44571d:	add    ecx,esi
  44571f:	push   es
  445720:	xor    al,0xc9
  445722:	cmc    
  445723:	clc    
  445724:	push   0x77
  445726:	fmul   QWORD PTR [ebp-0x1f]
  445729:	and    al,BYTE PTR [ebx]
  44572b:	out    0x6d,eax
  44572d:	leave  
  44572e:	outs   dx,DWORD PTR ds:[esi]
  44572f:	test   BYTE PTR [ebx+0x74],ah
  445732:	xor    DWORD PTR [ecx+ebx*1+0x6a],ebp
  445736:	pop    eax
  445737:	mov    WORD PTR [ecx],ds
  445739:	cmp    BYTE PTR ds:0x138afdd9,dh
  44573f:	xor    cl,BYTE PTR [esi+ecx*8]
  445742:	test   ch,cl
  445744:	add    eax,DWORD PTR [edi]
  445746:	int    0xa1
  445748:	popf   
  445749:	and    al,0xb9
  44574b:	cmc    
  44574c:	(bad)  
  44574d:	pop    esi
  44574e:	ret    
  44574f:	push   ebp
  445750:	std    
  445751:	and    eax,0x31f7c284
  445756:	idiv   esp
  445758:	mov    ch,0x0
  44575a:	add    eax,0x4cc03a4c
  44575f:	or     edx,DWORD PTR [ebp-0xfe11427]
  445765:	and    BYTE PTR [edx+0x664426a6],ah
  44576b:	ret    
  44576c:	mov    edx,0x901fffaf
  445771:	push   ds
  445772:	xchg   esp,eax
  445773:	xor    eax,0xb0e0c345
  445778:	pop    edi
  445779:	cmp    ebx,DWORD PTR [edx-0x1641561f]
  44577f:	or     eax,0x1809aa80
  445784:	and    BYTE PTR [ecx+0x40abc486],ch
  44578a:	test   DWORD PTR [edx],eax
  44578c:	adc    ecx,eax
  44578e:	dec    ecx
  44578f:	mov    edi,DWORD PTR [ebx-0x61]
  445792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445793:	(bad)
  445798:	and    eax,0xa6aeae1c
  44579d:	outs   dx,DWORD PTR ds:[esi]
  44579e:	test   DWORD PTR [esp+ebp*1],esp
  4457a1:	sub    al,0x2e
  4457a3:	jmp    DWORD PTR [edi-0x3737a61e]
  4457a9:	inc    edi
  4457aa:	jmp    0x283:0x84be7e71
  4457b1:	add    eax,DWORD PTR [eax]
  4457b3:	fld    QWORD PTR [ebp+0x22ef6f78]
  4457b9:	xchg   esi,eax
  4457ba:	fs pop ebp
  4457bc:	pop    ebx
  4457bd:	jbe    0x44581a
  4457bf:	dec    edi
  4457c0:	sbb    BYTE PTR [ecx-0x321d149c],cl
  4457c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4457c7:	in     al,dx
  4457c8:	test   DWORD PTR [ecx],0xa2f654fa
  4457ce:	scas   al,BYTE PTR es:[edi]
  4457cf:	in     eax,dx
  4457d0:	out    0x5f,eax
  4457d2:	and    DWORD PTR [ebp-0xe],ebx
  4457d5:	(bad)  
  4457d6:	cmp    eax,0x7d7e0c9e
  4457db:	out    0xf4,al
  4457dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4457de:	jp     0x4457db
  4457e0:	outs   dx,DWORD PTR ds:[esi]
  4457e1:	dec    esi
  4457e2:	sti    
  4457e3:	xchg   edx,eax
  4457e4:	pop    ebx
  4457e5:	retf   
  4457e6:	cwde   
  4457e7:	xchg   edx,eax
  4457e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4457e9:	and    eax,0x60300c51
  4457ee:	sti    
  4457ef:	bound  ecx,QWORD PTR [ebx-0x45a2e9ff]
  4457f5:	mov    ds:0x20c31e28,eax
  4457fa:	pop    esp
  4457fb:	mov    al,BYTE PTR [edx+0x33dd1998]
  445801:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  445803:	aaa    
  445804:	outs   dx,DWORD PTR ds:[esi]
  445805:	pop    es
  445806:	inc    edi
  445807:	mov    dh,0x1f
  445809:	les    edi,FWORD PTR [ebx]
  44580b:	ins    DWORD PTR es:[edi],dx
  44580c:	icebp  
  44580d:	push   eax
  44580e:	add    esi,edx
  445810:	sbb    BYTE PTR [ebp-0x25eed3c3],dl
  445816:	out    dx,eax
  445817:	cmp    DWORD PTR [eax],0x61a940b
  44581d:	test   al,0xb2
  44581f:	xchg   esi,eax
  445820:	repz push ecx
  445822:	pop    eax
  445823:	test   DWORD PTR [ecx+ecx*2],eax
  445826:	cmc    
  445827:	sub    ch,al
  445829:	cmp    al,0xad
  44582b:	popa   
  44582c:	sbb    al,0xe7
  44582e:	ret    0x581e
  445831:	aaa    
  445832:	stos   BYTE PTR es:[edi],al
  445833:	imul   esi,DWORD PTR [eax+0x78847158],0xf362c1db
  44583d:	jecxz  0x4457f8
  44583f:	add    BYTE PTR [eax],0xf5
  445842:	stos   BYTE PTR es:[edi],al
  445843:	ret    
  445844:	hlt    
  445845:	push   edi
  445846:	mov    ecx,0x1443a9c2
  44584b:	es adc edi,edi
  44584e:	jno    0x445890
  445850:	push   ecx
  445851:	or     DWORD PTR [ebx-0x5e],esp
  445854:	jecxz  0x44587e
  445856:	(bad)  
  445857:	ds xchg esi,eax
  445859:	jp     0x4457db
  44585b:	jnp    0x4458ce
  44585d:	lock jb 0x4457f3
  445860:	(bad)  
  445861:	clc    
  445862:	ror    esp,cl
  445864:	inc    esp
  445865:	xor    ecx,DWORD PTR [edi+0x76c9dada]
  44586b:	mov    eax,DWORD PTR [esi-0xc938c87]
  445871:	inc    ebp
  445872:	out    dx,al
  445873:	xchg   BYTE PTR [ecx],al
  445875:	ss popa 
  445877:	das    
  445878:	fist   WORD PTR [esi+0x4a]
  44587b:	std    
  44587c:	xchg   esi,eax
  44587d:	pusha  
  44587e:	inc    ebx
  44587f:	push   edi
  445880:	int    0x5
  445882:	inc    ecx
  445883:	std    
  445884:	ins    DWORD PTR es:[edi],dx
  445885:	repnz add DWORD PTR [ecx+0x5bd063d3],0x23
  44588d:	pop    ebx
  44588e:	fwait
  44588f:	lods   eax,DWORD PTR ds:[esi]
  445890:	mov    ds:0x112ea53,eax
  445895:	inc    edx
  445896:	dec    esi
  445897:	ds in  al,dx
  445899:	ins    DWORD PTR es:[edi],dx
  44589a:	cwde   
  44589b:	in     eax,0xe7
  44589d:	xlat   BYTE PTR ds:[ebx]
  44589e:	shl    di,0xbf
  4458a2:	dec    eax
  4458a3:	lods   al,BYTE PTR ds:[esi]
  4458a4:	call   DWORD PTR [ecx]
  4458a6:	imul   ebx,DWORD PTR [ecx+ecx*8-0x26],0xffffffb8
  4458ab:	enter  0x6bc6,0x22
  4458af:	jl     0x44587d
  4458b1:	mov    edx,0xaea8feea
  4458b6:	fisttp WORD PTR [ecx-0x68894837]
  4458bc:	mov    BYTE PTR [edx],al
  4458be:	jne    0x445864
  4458c0:	ins    DWORD PTR es:[edi],dx
  4458c1:	ss inc ebx
  4458c3:	cmp    ebp,DWORD PTR [ebx-0x2b]
  4458c6:	mov    al,0xbd
  4458c8:	outs   dx,DWORD PTR ds:[esi]
  4458c9:	test   DWORD PTR [ebx-0x20],ebp
  4458cc:	xchg   edi,eax
  4458cd:	(bad)  
  4458ce:	pop    ebx
  4458cf:	mov    eax,esi
  4458d1:	pop    ecx
  4458d2:	lods   al,BYTE PTR ds:[esi]
  4458d3:	push   0xfffffff8
  4458d5:	mov    ecx,0xf5535d78
  4458da:	sbb    eax,0xbcc4c424
  4458df:	call   0x6fbf:0xf633587
  4458e6:	push   ebx
  4458e7:	rcl    BYTE PTR [esi],cl
  4458e9:	lds    esp,FWORD PTR [eax-0xd]
  4458ec:	mov    ah,BYTE PTR [edi]
  4458ee:	pop    edx
  4458ef:	sbb    al,0x96
  4458f1:	jle    0x44593e
  4458f3:	imul   esp,DWORD PTR [ebx+0x619a84af],0x14
  4458fa:	adc    al,0xe9
  4458fc:	mov    edx,0xfc817863
  445901:	pop    ebx
  445902:	or     eax,0x1cc612c1
  445907:	inc    esi
  445908:	add    al,0xca
  44590a:	pop    ds
  44590b:	xor    ebx,DWORD PTR [ebx]
  44590d:	cmp    dl,dl
  44590f:	out    0xa6,al
  445911:	ret    
  445912:	ret    
  445913:	sub    bh,BYTE PTR fs:[esi]
  445916:	out    0x32,al
  445918:	icebp  
  445919:	push   ecx
  44591a:	(bad)  
  44591c:	dec    eax
  44591d:	call   0x17f49fbc
  445922:	xchg   ecx,eax
  445923:	ins    DWORD PTR es:[edi],dx
  445924:	imul   ebp,DWORD PTR [edi-0x48734d6e],0x879d2eb3
  44592e:	loopne 0x445905
  445930:	stc    
  445931:	out    dx,eax
  445932:	xor    bl,BYTE PTR [ecx-0x56f7076]
  445938:	(bad)  
  445939:	mov    ds:0xfd986012,al
  44593e:	and    eax,0xf47b7cbe
  445943:	mov    ds:0x80bd7201,eax
  445948:	mov    ebp,0x245e1f77
  44594d:	rep lods eax,DWORD PTR ds:[esi]
  44594f:	ret    
  445950:	daa    
  445951:	mov    dh,BYTE PTR [edi+0x1323f0d7]
  445957:	ins    DWORD PTR es:[edi],dx
  445958:	push   ebp
  445959:	fild   DWORD PTR [ebp-0x4e]
  44595c:	mov    es,edx
  44595e:	sahf   
  44595f:	inc    ecx
  445960:	push   eax
  445961:	popf   
  445962:	rcr    BYTE PTR [edx-0x58],1
  445965:	jno    0x4459bb
  445967:	adc    edi,DWORD PTR [ebp-0x30d18436]
  44596d:	cld    
  44596e:	fidivr WORD PTR [edx-0x1a9e3f08]
  445974:	push   cs
  445975:	iret   
  445976:	cmp    edi,edi
  445978:	cmp    eax,0xedd5ee37
  44597d:	push   ebx
  44597e:	mov    al,0x82
  445980:	fcomp  DWORD PTR [ecx-0x59c85964]
  445986:	xor    eax,0x34d1b954
  44598b:	(bad)  
  44598c:	mov    al,ds:0x46aac724
  445991:	test   eax,0xfe5c2a53
  445996:	sub    eax,0x5857135
  44599b:	je     0x4459fc
  44599d:	dec    edi
  44599e:	fist   DWORD PTR [ecx+0x16]
  4459a1:	jo     0x4459a4
  4459a3:	lahf   
  4459a4:	jno    0x4459e1
  4459a6:	and    al,0xb4
  4459a8:	mov    ecx,edx
  4459aa:	xchg   esp,eax
  4459ab:	mov    al,ds:0xfbb4eda5
  4459b0:	cmp    bl,BYTE PTR [ecx-0x16]
  4459b3:	outs   dx,DWORD PTR ds:[esi]
  4459b4:	pop    edx
  4459b5:	dec    esi
  4459b6:	sbb    BYTE PTR [edx],ah
  4459b8:	(bad)  
  4459b9:	xchg   edx,eax
  4459ba:	xor    al,0xb7
  4459bc:	neg    BYTE PTR [ecx-0x73]
  4459bf:	mov    ds:0xacf1c450,eax
  4459c4:	xchg   ebx,eax
  4459c5:	jge    0x4459ee
  4459c7:	or     BYTE PTR [ebx],dh
  4459c9:	pop    dx
  4459cb:	test   al,0xd1
  4459cd:	push   ss
  4459ce:	in     eax,0xf8
  4459d0:	push   edx
  4459d1:	dec    ebx
  4459d2:	je     0x4459d0
  4459d4:	cli    
  4459d5:	std    
  4459d6:	cmp    DWORD PTR [ecx],edx
  4459d8:	add    eax,ebx
  4459da:	mov    bh,0x3c
  4459dc:	loope  0x4459bf
  4459de:	test   ecx,esp
  4459e0:	add    dl,dh
  4459e2:	loop   0x4459cc
  4459e4:	adc    eax,0xbbd29836
  4459e9:	adc    BYTE PTR [edi+0x11de0119],ah
  4459ef:	call   0xa046:0xf59351df
  4459f6:	popa   
  4459f7:	mov    bl,BYTE PTR ds:0xe9d25daa
  4459fd:	xchg   ecx,eax
  4459fe:	sar    BYTE PTR [esi-0x1002c271],0x58
  445a05:	pop    ecx
  445a06:	stos   BYTE PTR es:[edi],al
  445a07:	adc    bh,cl
  445a09:	out    dx,al
  445a0a:	adc    DWORD PTR [esi],esi
  445a0c:	out    dx,al
  445a0d:	fidiv  WORD PTR [ecx-0x80]
  445a10:	shl    edi,0x16
  445a13:	inc    ecx
  445a14:	adc    bl,BYTE PTR [eax]
  445a16:	dec    ebx
  445a17:	dec    esp
  445a18:	loope  0x445a29
  445a1a:	jge    0x445a48
  445a1c:	adc    DWORD PTR [ecx+ecx*1-0x3c10f515],ecx
  445a23:	daa    
  445a24:	fwait
  445a25:	daa    
  445a26:	addr16 jl 0x445a2c
  445a29:	push   0xa1ccd9a2
  445a2e:	xchg   esp,eax
  445a2f:	enter  0x3781,0xb4
  445a33:	jbe    0x445a1b
  445a35:	push   eax
  445a36:	inc    esp
  445a37:	sti    
  445a38:	mov    al,0xd7
  445a3a:	dec    ecx
  445a3b:	push   0xffffff95
  445a3d:	(bad)  
  445a3e:	or     esi,DWORD PTR [edx+0xacd9b18]
  445a44:	dec    esp
  445a45:	das    
  445a46:	or     al,0x4f
  445a48:	ret    0x51bb
  445a4b:	ret    
  445a4c:	retf   
  445a4d:	icebp  
  445a4e:	adc    BYTE PTR [edx-0x45],dl
  445a51:	mov    edi,0x9fe2856a
  445a56:	shl    DWORD PTR [edx],1
  445a58:	sahf   
  445a59:	loopne 0x445a84
  445a5b:	jb     0x445a12
  445a5d:	push   esi
  445a5e:	add    bh,cl
  445a60:	or     bl,bh
  445a62:	xchg   DWORD PTR [edi+0x28e47d8c],esp
  445a68:	stos   DWORD PTR es:[edi],eax
  445a69:	mov    ecx,0x8893171d
  445a6e:	in     al,0xbe
  445a70:	xchg   esp,eax
  445a71:	mov    BYTE PTR [esi+0x38],bh
  445a74:	inc    ebx
  445a75:	jo     0x445a2f
  445a77:	cld    
  445a78:	test   al,0x1
  445a7a:	test   eax,0x9e5eaf8e
  445a7f:	or     BYTE PTR [ebp-0x1a],0xb
  445a83:	pop    ss
  445a84:	xor    ebp,DWORD PTR [bx-0x3b62]
  445a89:	cmp    dl,BYTE PTR [ecx-0x62]
  445a8c:	add    dl,0x8f
  445a8f:	bound  ebp,QWORD PTR [eax]
  445a91:	push   0x2d
  445a93:	sbb    BYTE PTR [edi-0x32],dl
  445a96:	test   DWORD PTR [esi+edx*8-0x50d30ea3],edx
  445a9d:	push   0xffffffc6
  445a9f:	jno    0x445aad
  445aa1:	inc    edx
  445aa2:	fiadd  WORD PTR [edx*8-0x5def69e9]
  445aa9:	imul   esi,ecx,0x5a
  445aac:	jne    0x445a68
  445aae:	and    ebp,DWORD PTR [ebp-0x6a192d1b]
  445ab4:	xor    DWORD PTR [esi+0x3c48cf5d],0xcb694dd1
  445abe:	pop    ebp
  445abf:	pop    edi
  445ac0:	scas   al,BYTE PTR es:[edi]
  445ac1:	or     eax,0xf6dc140f
  445ac6:	or     al,0x8c
  445ac8:	call   0x3eea4295
  445acd:	mov    bh,0x4b
  445acf:	sbb    eax,0x75dc5010
  445ad4:	in     al,dx
  445ad5:	pusha  
  445ad6:	(bad)
  445ada:	test   DWORD PTR [eax+eiz*8-0x10],ebp
  445ade:	aam    0x19
  445ae0:	cmp    ah,BYTE PTR [ebp-0x13]
  445ae3:	(bad)  
  445ae4:	pop    ds
  445ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445ae7:	test   BYTE PTR [ecx+eiz*2-0x47068bd5],al
  445aee:	or     ch,bh
  445af0:	pop    esi
  445af1:	mov    dl,BYTE PTR cs:[ebp-0x63021997]
  445af8:	jmp    FWORD PTR [esi]
  445afa:	jp     0x445b70
  445afc:	dec    ebx
  445afd:	and    DWORD PTR [ecx-0x12],edx
  445b00:	popf   
  445b01:	cmp    esi,DWORD PTR [edi]
  445b03:	inc    esp
  445b04:	xor    DWORD PTR [ecx+0x25],0x47
  445b08:	shl    DWORD PTR [eax-0x5560fafa],1
  445b0e:	jnp    0x445aa4
  445b10:	aas    
  445b11:	in     al,0xdc
  445b13:	int    0x68
  445b15:	add    DWORD PTR [ebx*1+0x19a032de],edi
  445b1c:	cld    
  445b1d:	pop    esp
  445b1e:	mov    ecx,0x2a1670ec
  445b23:	jle    0x445ae8
  445b25:	pop    edx
  445b26:	fwait
  445b27:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445b29:	push   es
  445b2a:	dec    ebx
  445b2b:	outs   dx,DWORD PTR ds:[esi]
  445b2c:	or     eax,0xd22ff4d2
  445b31:	sub    esi,esi
  445b33:	fsub   st,st(5)
  445b35:	dec    esi
  445b36:	push   esi
  445b37:	jbe    0x445ba4
  445b39:	clc    
  445b3a:	les    ebx,FWORD PTR [esp+ecx*4-0x36]
  445b3e:	xchg   edx,eax
  445b3f:	bound  eax,QWORD PTR [edx+0x56a6e185]
  445b45:	fdiv   QWORD PTR [edx-0x2a]
  445b48:	inc    edx
  445b49:	push   esi
  445b4a:	xlat   BYTE PTR ds:[ebx]
  445b4b:	enter  0x1d42,0xc8
  445b4f:	sahf   
  445b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445b51:	push   0x6de8a7b2
  445b56:	or     al,0xd8
  445b58:	add    DWORD PTR [esi],ebx
  445b5a:	or     BYTE PTR [ebp-0x4c8acdfc],ah
  445b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445b61:	lea    esp,[edi-0x3b1b1576]
  445b67:	imul   ecx,DWORD PTR [esi],0x27
  445b6a:	fbld   TBYTE PTR [eax+0x47973f7c]
  445b70:	push   ebp
  445b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445b72:	rcr    DWORD PTR [ebx-0x32],1
  445b75:	in     eax,0xb
  445b77:	lahf   
  445b78:	(bad)  
  445b79:	sbb    edi,DWORD PTR [esi+eax*2+0x65fc8ce2]
  445b80:	cld    
  445b81:	jg     0x445bf0
  445b83:	adc    DWORD PTR [ebp-0x17],esi
  445b86:	or     eax,0x6be269de
  445b8b:	mov    BYTE PTR [edi-0x1a],bl
  445b8e:	xchg   BYTE PTR [edx-0x4a4ad4d2],ch
  445b94:	(bad)  
  445b95:	(bad)  
  445b96:	mov    cl,0xe6
  445b98:	jnp    0x445bdd
  445b9a:	outs   dx,BYTE PTR ds:[esi]
  445b9b:	mov    edx,0x2036197c
  445ba0:	dec    ecx
  445ba1:	mov    ecx,0xf912af72
  445ba6:	fisub  WORD PTR ss:[edx+0x75f45bf7]
  445bad:	sub    BYTE PTR [edi],ah
  445baf:	cmp    eax,0x13447be2
  445bb4:	ins    BYTE PTR es:[edi],dx
  445bb5:	push   edx
  445bb6:	jae    0x445bfd
  445bb8:	hlt    
  445bb9:	bnd jmp 0x445b7e
  445bbc:	fwait
  445bbd:	test   al,0xe0
  445bbf:	into   
  445bc0:	ins    DWORD PTR es:[edi],dx
  445bc1:	out    0xd,al
  445bc3:	inc    dl
  445bc5:	add    ebx,ebx
  445bc7:	xchg   edi,eax
  445bc8:	in     al,0xf1
  445bca:	retf   
  445bcb:	mov    al,0x48
  445bcd:	gs mov dl,0x97
  445bd0:	pop    edx
  445bd1:	mov    BYTE PTR [edi*4+0x4144929d],cl
  445bd8:	inc    esi
  445bd9:	dec    edx
  445bda:	outs   dx,BYTE PTR ds:[esi]
  445bdb:	pop    eax
  445bdc:	dec    esp
  445bdd:	cmp    edx,DWORD PTR [ebx-0x7cb8405]
  445be3:	fnstenv [esi]
  445be5:	loop   0x445c64
  445be7:	sbb    al,0x85
  445be9:	fst    st(7)
  445beb:	je     0x445bbf
  445bed:	stos   BYTE PTR es:[edi],al
  445bee:	cdq    
  445bef:	mov    ebp,0xd11a781d
  445bf5:	test   BYTE PTR [eax-0xb66cd91],ah
  445bfb:	sahf   
  445bfc:	fisttp WORD PTR [esi+0x28]
  445bff:	jmp    0x445c69
  445c01:	or     BYTE PTR [ebp-0x7],al
  445c04:	cmc    
  445c05:	arpl   WORD PTR [esp+eiz*4],bp
  445c08:	das    
  445c09:	and    ebp,0x5e
  445c0c:	adc    cl,BYTE PTR [esi+ecx*1]
  445c0f:	enter  0x6df5,0xa7
  445c13:	mul    BYTE PTR [eax+eax*1-0x503e772d]
  445c1a:	and    DWORD PTR [edi-0x687220f2],edi
  445c20:	mov    dl,0x48
  445c22:	mov    dh,0x54
  445c24:	dec    edi
  445c25:	mov    ecx,0x4305243
  445c2a:	pop    edx
  445c2b:	popa   
  445c2c:	xchg   BYTE PTR [ebx+0x6],cl
  445c2f:	enter  0xfd33,0xbd
  445c33:	arpl   sp,dx
  445c35:	or     ecx,edi
  445c37:	jo     0x445c57
  445c39:	rol    BYTE PTR [ecx+0x320eff7],0xbf
  445c40:	push   ss
  445c41:	push   esi
  445c42:	les    edx,FWORD PTR [ecx+ebp*1]
  445c45:	mov    al,0x48
  445c47:	pop    es
  445c48:	fimul  WORD PTR [esi]
  445c4a:	lahf   
  445c4b:	push   ss
  445c4c:	and    eax,0xfee58107
  445c51:	dec    esp
  445c52:	push   es
  445c53:	xchg   ebx,eax
  445c54:	xchg   edx,eax
  445c55:	mov    ss,edi
  445c57:	js     0x445c6a
  445c59:	mov    BYTE PTR [ebp-0x55],al
  445c5c:	sbb    edx,DWORD PTR [ebx]
  445c5e:	into   
  445c5f:	cmc    
  445c60:	(bad)  
  445c61:	ds jl  0x445c8c
  445c64:	shl    DWORD PTR [ebp-0x104a12c4],0x25
  445c6b:	call   0xf002:0xd77c234f
  445c72:	aas    
  445c73:	pop    edx
  445c74:	popf   
  445c75:	out    0x1f,eax
  445c77:	inc    esi
  445c78:	popf   
  445c79:	lods   ax,WORD PTR ds:[esi]
  445c7b:	or     DWORD PTR [ebx],edx
  445c7d:	outs   dx,BYTE PTR ds:[esi]
  445c7e:	mov    edx,0x7c7e4ad1
  445c83:	sub    DWORD PTR [ecx],edx
  445c85:	out    0xfe,al
  445c87:	std    
  445c88:	cwde   
  445c89:	mov    dl,BYTE PTR [esi+ecx*8-0x408ffaa7]
  445c90:	jg     0x445c7b
  445c92:	inc    eax
  445c93:	adc    esi,edi
  445c95:	mov    ecx,db6
  445c98:	enter  0xfe61,0xae
  445c9c:	pop    ss
  445c9d:	imul   edx,DWORD PTR [eax-0x6a6310bf],0xffffff9d
  445ca4:	adc    eax,0x8d8fff9b
  445ca9:	js     0x445c86
  445cab:	inc    edi
  445cac:	rol    bl,1
  445cae:	(bad)  
  445caf:	jg     0x445d11
  445cb1:	pop    ebx
  445cb2:	jg     0x445cb5
  445cb4:	das    
  445cb5:	and    DWORD PTR [esp+edx*8+0x1759dab0],edi
  445cbc:	mov    al,0xcb
  445cbe:	pusha  
  445cbf:	mov    BYTE PTR [ecx+0x75],0x5f
  445cc3:	xor    DWORD PTR es:[ecx+0xc],ecx
  445cc7:	mov    eax,ds:0xd6030552
  445ccc:	loope  0x445cec
  445cce:	frstor [ebx]
  445cd0:	std    
  445cd1:	(bad)  
  445cd2:	dec    ecx
  445cd3:	add    al,0x37
  445cd5:	(bad)  
  445cd6:	xchg   ebp,eax
  445cd7:	push   edx
  445cd8:	push   esp
  445cd9:	gs cmc 
  445cdb:	xchg   esi,eax
  445cdc:	xchg   esi,eax
  445cdd:	out    dx,eax
  445cde:	ss loopne 0x445d00
  445ce1:	inc    ebx
  445ce2:	mov    al,ds:0x94cbf2b6
  445ce7:	dec    eax
  445ce8:	into   
  445ce9:	jmp    0xf0ca:0x9ec7a9e8
  445cf0:	jnp    0x445d23
  445cf2:	add    bl,BYTE PTR [edx+0x618936d5]
  445cf8:	push   cs
  445cf9:	mov    ebx,0xf7e85b8a
  445cfe:	xchg   BYTE PTR [edi],cl
  445d00:	rol    eax,cl
  445d02:	xchg   ebp,eax
  445d03:	pop    eax
  445d04:	test   al,0x1d
  445d06:	push   edi
  445d07:	dec    ebp
  445d08:	cs aas 
  445d0a:	or     ch,BYTE PTR [edi+0x31ae2ae8]
  445d10:	dec    edx
  445d11:	inc    ebx
  445d12:	(bad)  
  445d13:	lods   al,BYTE PTR ds:[esi]
  445d14:	xor    eax,0x36c66794
  445d19:	mov    eax,DWORD PTR [esi]
  445d1b:	shr    DWORD PTR [ecx],1
  445d1d:	in     al,dx
  445d1e:	or     bl,BYTE PTR [eax-0x36123af7]
  445d24:	jmp    0x25ea:0x3e0dd420
  445d2b:	(bad)  
  445d2c:	mov    esi,0x2b1c4b9
  445d31:	in     eax,dx
  445d32:	sub    dh,BYTE PTR [edi]
  445d34:	call   0x697d:0x7f4fc983
  445d3b:	shr    DWORD PTR [ecx-0x7f],0xb9
  445d3f:	retf   0x1409
  445d42:	mov    bh,0x9f
  445d44:	ins    BYTE PTR es:[edi],dx
  445d45:	push   0x4d
  445d47:	leave  
  445d48:	fcomp  st(1)
  445d4a:	and    edx,DWORD PTR [edi]
  445d4c:	xor    BYTE PTR [ebx-0x57],0x6e
  445d50:	mov    DWORD PTR [esi],edx
  445d52:	mov    dh,0xf1
  445d54:	das    
  445d55:	in     eax,dx
  445d56:	aad    0x6b
  445d58:	mov    dh,0x32
  445d5a:	ins    DWORD PTR es:[edi],dx
  445d5b:	data16 jb 0x445d46
  445d5e:	sbb    ax,WORD PTR [ecx+0x5]
  445d62:	jo     0x445cf6
  445d64:	add    BYTE PTR [edx+0x7fbaf5c9],dl
  445d6a:	adc    edx,0x61
  445d6d:	imul   ebx,DWORD PTR [ebx],0xb049d28c
  445d73:	add    eax,0x19842a08
  445d78:	bound  esp,QWORD PTR [ebp+eiz*8+0x20]
  445d7c:	mov    edx,0x64fead16
  445d81:	loopne 0x445d0d
  445d83:	and    BYTE PTR [eax+0x2f00660c],bh
  445d89:	mov    al,ds:0xbeb9f72c
  445d8e:	cwde   
  445d8f:	sub    al,0xbe
  445d91:	mov    dl,0x3b
  445d93:	cdq    
  445d94:	mov    edx,0xea73ef08
  445d99:	push   ecx
  445d9a:	or     ebx,DWORD PTR [ebx+0x7898e733]
  445da0:	push   ecx
  445da1:	cld    
  445da2:	mov    WORD PTR ds:0xcb5ea810,?
  445da8:	cmp    eax,0x276d525d
  445dad:	cs jmp 0xaef9:0x423d8c28
  445db5:	xor    al,0xe4
  445db7:	dec    edi
  445db8:	test   eax,0x1029ff4d
  445dbd:	setbe  dl
  445dc0:	stos   DWORD PTR es:[edi],eax
  445dc1:	in     eax,0xcd
  445dc3:	repz neg BYTE PTR [ebx-0x2b]
  445dc7:	mov    DWORD PTR [edx-0x5c],0x7f0c38dc
  445dce:	add    ch,BYTE PTR [ebp-0x4c]
  445dd1:	mov    esi,0x52ada925
  445dd6:	pushf  
  445dd7:	inc    edi
  445dd8:	mov    ah,0x1
  445dda:	das    
  445ddb:	jecxz  0x445df6
  445ddd:	xchg   BYTE PTR [edi],dl
  445ddf:	push   edx
  445de0:	and    eax,DWORD PTR [edx+ebx*8]
  445de3:	ja     0x445de4
  445de5:	sbb    eax,0xbca2a11
  445dea:	mov    edi,DWORD PTR [ebp+ebp*2+0x62]
  445dee:	push   esp
  445def:	xsavec [esi+0x21]
  445df3:	popf   
  445df4:	aas    
  445df5:	push   esp
  445df6:	mov    esp,0x11961be7
  445dfb:	pop    edx
  445dfc:	or     bl,BYTE PTR [eax-0x4c810c6d]
  445e02:	(bad)  
  445e03:	lock pop eax
  445e05:	cmp    dl,bh
  445e07:	xor    al,0x50
  445e09:	repnz push ecx
  445e0b:	outs   dx,BYTE PTR ds:[esi]
  445e0c:	inc    edx
  445e0d:	push   ds
  445e0e:	stos   DWORD PTR es:[edi],eax
  445e0f:	int3   
  445e10:	leave  
  445e11:	jp     0x445e65
  445e13:	mov    esi,0x2caa08aa
  445e18:	repnz xchg edi,eax
  445e1a:	es dec ecx
  445e1c:	mov    DWORD PTR [ecx],ecx
  445e1e:	add    BYTE PTR [ebp+esi*4-0x1d272285],ah
  445e25:	mov    BYTE PTR [ecx],dl
  445e27:	in     eax,0xcf
  445e29:	cmp    DWORD PTR [ecx+0x3bb53e83],ecx
  445e2f:	lahf   
  445e30:	fwait
  445e31:	loopne 0x445df6
  445e33:	mov    edx,DWORD PTR [ecx+0x56892a4b]
  445e39:	jae    0x445df5
  445e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445e3c:	adc    al,0xf4
  445e3e:	addr16 ffree st(4)
  445e41:	pop    ebx
  445e42:	in     eax,0xf8
  445e44:	and    edi,DWORD PTR [ebx+eax*1-0x2f]
  445e48:	popa   
  445e49:	sub    BYTE PTR [edi+edi*2+0x76],dh
  445e4d:	xor    al,0xd5
  445e4f:	jnp    0x445def
  445e51:	mov    ebp,ebp
  445e53:	dec    eax
  445e54:	mov    ecx,0xe94337d2
  445e59:	mov    esp,0x7c49a7ff
  445e5e:	push   ds
  445e5f:	lock imul bx,WORD PTR [edi+0x344788d],0x2aba
  445e69:	xor    eax,0x1fe82e3
  445e6e:	and    ebx,DWORD PTR [ebx+0x1c4b80f0]
  445e74:	arpl   WORD PTR [eax+esi*4-0xd],ax
  445e78:	mov    WORD PTR [eax-0x163297e],?
  445e7e:	or     DWORD PTR [edx-0x54],ebx
  445e81:	sahf   
  445e82:	cld    
  445e83:	push   0xffffffc7
  445e85:	fmul   DWORD PTR [ebx]
  445e87:	test   DWORD PTR [esp+ebx*4+0x18],ebp
  445e8b:	mov    ah,0x24
  445e8d:	rol    esp,cl
  445e8f:	xor    dh,BYTE PTR [ecx+0x29]
  445e92:	loopne 0x445ea1
  445e94:	jbe    0x445e23
  445e96:	jnp    0x445e60
  445e98:	mov    ds:0x8092e896,al
  445e9d:	(bad)  
  445e9e:	imul   edi,DWORD PTR [ebp+0x199bd3bf],0xd0bb8c50
  445ea8:	add    esi,DWORD PTR [ecx+0x179398a7]
  445eae:	xchg   esi,ecx
  445eb0:	inc    di
  445eb2:	outs   dx,DWORD PTR ds:[esi]
  445eb3:	xor    edx,DWORD PTR [ebx+0x2e914c15]
  445eb9:	jp     0x445e67
  445ebb:	dec    ecx
  445ebc:	pop    es
  445ebd:	imul   edi,DWORD PTR [ebx-0x5b],0xf9bb81
  445ec4:	xlat   BYTE PTR ds:[ebx]
  445ec5:	js     0x445ed3
  445ec7:	aam    0xc5
  445ec9:	sub    ebp,0xffffffe8
  445ecc:	je     0x445e65
  445ece:	fwait
  445ecf:	push   esi
  445ed0:	mov    cl,0x6d
  445ed2:	xchg   ecx,eax
  445ed4:	adc    eax,0xb1b439c8
  445ed9:	mov    bh,0xf3
  445edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445edc:	rcl    DWORD PTR [edi+0x14],0x0
  445ee0:	dec    eax
  445ee1:	and    eax,0xb94244e4
  445ee6:	pop    ebx
  445ee7:	mov    ecx,0xcaab9911
  445eec:	sbb    al,0x88
  445eee:	mov    dl,0xa6
  445ef0:	aas    
  445ef1:	adc    DWORD PTR [ebx],ebx
  445ef3:	or     ah,BYTE PTR [ecx+0x3994a0ee]
  445ef9:	neg    BYTE PTR [ecx]
  445efb:	mov    dh,bl
  445efd:	and    eax,DWORD PTR [ecx]
  445eff:	and    BYTE PTR ds:0x28ed114d,dl
  445f05:	push   eax
  445f06:	imul   ebp,esp,0x13c6cf9d
  445f0c:	jg     0x445ef4
  445f0e:	dec    esp
  445f0f:	popa   
  445f10:	jecxz  0x445ea9
  445f12:	push   esi
  445f13:	push   0x42
  445f15:	lods   al,BYTE PTR ds:[esi]
  445f16:	or     eax,0x642798e6
  445f1b:	(bad)  
  445f1c:	fiadd  WORD PTR [edi-0x3]
  445f1f:	scas   eax,DWORD PTR es:[edi]
  445f20:	das    
  445f21:	outs   dx,DWORD PTR ds:[esi]
  445f22:	add    DWORD PTR [edx+0x11b498f1],esi
  445f28:	ins    BYTE PTR es:[edi],dx
  445f29:	xchg   ecx,eax
  445f2a:	inc    edi
  445f2b:	scas   al,BYTE PTR es:[edi]
  445f2c:	mov    ch,0x58
  445f2e:	mov    bl,0x28
  445f30:	mov    eax,ds:0x2aee9dc7
  445f35:	push   ebx
  445f36:	aam    0x4c
  445f38:	pop    edi
  445f39:	outs   dx,DWORD PTR ds:[esi]
  445f3a:	mov    bl,0xd4
  445f3c:	sbb    edi,ebx
  445f3e:	add    DWORD PTR cs:[eax],ecx
  445f41:	push   ss
  445f42:	in     al,0xec
  445f44:	arpl   WORD PTR [ebx-0x2c046beb],cx
  445f4a:	out    0xc5,al
  445f4c:	adc    DWORD PTR [eax+0xe],esp
  445f4f:	pusha  
  445f50:	lahf   
  445f51:	mov    esp,0xea70f299
  445f56:	inc    bp
  445f58:	adc    BYTE PTR [ebx+0x25b8f363],cl
  445f5e:	scas   eax,DWORD PTR es:[edi]
  445f5f:	jo     0x445fa5
  445f61:	pop    edx
  445f62:	(bad)  
  445f63:	gs cwde 
  445f65:	scas   eax,DWORD PTR es:[edi]
  445f66:	repnz push esp
  445f68:	in     eax,0x6e
  445f6a:	jle    0x445f34
  445f6c:	retf   
  445f6d:	fimul  WORD PTR [edi+0x6b4b0f56]
  445f73:	call   0x6bcffad9
  445f78:	pop    ds
  445f79:	adc    cl,BYTE PTR ds:0xbbbf072
  445f7f:	fstp   DWORD PTR [edx-0x4d]
  445f82:	and    DWORD PTR [ebx-0x5193f5a6],ebp
  445f88:	call   0x9712:0x1ddf55fa
  445f8f:	jle    0x44600e
  445f91:	call   0x6cc2:0x7f2af355
  445f98:	add    BYTE PTR [edx-0x62],ch
  445f9b:	adc    DWORD PTR [ebx+0x103394ed],edx
  445fa1:	push   ebp
  445fa2:	sbb    al,0x9b
  445fa4:	hlt    
  445fa5:	or     dl,ch
  445fa7:	jl     0x445f9d
  445fa9:	xor    al,0xc6
  445fab:	jmp    0x445f52
  445fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445fae:	ins    BYTE PTR es:[edi],dx
  445faf:	cld    
  445fb0:	outs   dx,DWORD PTR ds:[esi]
  445fb1:	into   
  445fb2:	out    0xe8,eax
  445fb4:	sub    BYTE PTR [esi+0x3],0x6b
  445fb8:	push   esi
  445fb9:	in     al,dx
  445fba:	mov    al,ds:0x62d271e6
  445fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445fc0:	xchg   esi,esp
  445fc2:	push   ecx
  445fc3:	jne    0x44601d
  445fc5:	push   eax
  445fc6:	(bad)  
  445fc7:	hlt    
  445fc8:	pop    es
  445fc9:	rsqrtps xmm1,XMMWORD PTR [edx+0x39]
  445fcd:	cdq    
  445fce:	rcl    DWORD PTR [eax-0x13d00de8],cl
  445fd4:	pop    edi
  445fd5:	adc    al,0xd1
  445fd7:	arpl   bp,si
  445fd9:	and    bh,BYTE PTR [eax+0x78]
  445fdc:	or     ch,cl
  445fde:	jg     0x445f9f
  445fe0:	or     ebx,ebx
  445fe2:	mov    gs,esi
  445fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445fe5:	int3   
  445fe6:	fiadd  DWORD PTR ds:0xca2d79b1
  445fec:	outs   dx,BYTE PTR ds:[esi]
  445fed:	fmul   QWORD PTR [edi]
  445fef:	jbe    0x445ffc
  445ff1:	iret   
  445ff2:	xlat   BYTE PTR ds:[ebx]
  445ff3:	push   ecx
  445ff4:	sbb    BYTE PTR ds:0x62b1fe1a,dl
  445ffa:	inc    esi
  445ffb:	add    dl,ah
  445ffd:	inc    ebp
  445ffe:	repnz sbb eax,0xecae12e1
  446004:	sbb    al,0xe7
  446006:	mul    esp
  446008:	test   BYTE PTR [esi],ah
  44600a:	(bad)  
  44600b:	jb     0x445fb4
  44600d:	and    ah,0x3d
  446010:	dec    edi
  446011:	xchg   ebp,eax
  446012:	xchg   edx,eax
  446013:	jbe    0x446014
  446015:	call   0x86359ca0
  44601a:	mov    ch,0xd0
  44601c:	dec    ecx
  44601d:	adc    BYTE PTR [edi+0x14],al
  446020:	mov    ecx,ss
  446022:	fiadd  WORD PTR ds:0xd0e9374f
  446028:	lods   eax,DWORD PTR ds:[esi]
  446029:	or     eax,0x3c2d279d
  44602e:	cmp    ebp,esp
  446030:	mov    eax,0x839ffc54
  446035:	(bad)  
  446036:	pop    ecx
  446037:	loope  0x44603e
  446039:	iret   
  44603a:	xor    cl,BYTE PTR [esi]
  44603c:	es rol bh,0xc6
  446040:	and    eax,0x295c5f05
  446045:	stos   BYTE PTR es:[edi],al
  446046:	add    al,0x98
  446048:	cmp    DWORD PTR [ecx+0x8],esp
  44604b:	pop    ecx
  44604c:	push   esi
  44604d:	xor    DWORD PTR [ebx],esp
  44604f:	cmp    eax,0x75f53f0f
  446054:	sub    BYTE PTR [ecx+0x68],ah
  446057:	popf   
  446058:	inc    edx
  446059:	pop    edi
  44605a:	jno    0x445fe0
  44605c:	mov    ?,eax
  44605e:	(bad)  
  44605f:	push   ebx
  446060:	xor    al,0x93
  446062:	lods   eax,DWORD PTR ds:[esi]
  446063:	int    0xf
  446065:	mov    edx,0x2b19b7f8
  44606a:	jge    0x44603c
  44606c:	sub    BYTE PTR [ebx-0x6cf3884e],bl
  446072:	imul   ebx,DWORD PTR [ebx],0xffffffa1
  446075:	hlt    
  446076:	ficom  WORD PTR [ebp+0x277bbb31]
  44607c:	aam    0xf1
  44607e:	jne    0x446011
  446080:	mov    ebx,0xac79af5d
  446085:	ins    BYTE PTR es:[edi],dx
  446086:	push   esi
  446087:	aam    0xfc
  446089:	dec    esi
  44608a:	adc    BYTE PTR [esi],cl
  44608c:	pop    ebp
  44608d:	enter  0x7cde,0x27
  446091:	hlt    
  446092:	mov    ds:0xe72300e2,eax
  446097:	sbb    BYTE PTR [ebx],cl
  446099:	scas   al,BYTE PTR es:[edi]
  44609a:	cli    
  44609b:	out    dx,al
  44609c:	mov    ebp,0x6c311b52
  4460a1:	fs push ebp
  4460a3:	pusha  
  4460a4:	sbb    esi,DWORD PTR [ebx+0x68]
  4460a7:	jle    0x44604c
  4460a9:	dec    edx
  4460aa:	adc    eax,0x48c6a5f2
  4460af:	jge    0x44604c
  4460b1:	push   esi
  4460b2:	or     ebp,ebx
  4460b4:	xor    bl,bh
  4460b6:	mov    edi,0xf0e1bef
  4460bb:	shl    BYTE PTR [ebp+0x2a],cl
  4460be:	ror    BYTE PTR [edi-0x2cb67afa],cl
  4460c4:	das    
  4460c5:	push   ds
  4460c6:	fsubr  DWORD PTR [esi-0x6dac23c9]
  4460cc:	mov    edx,0xa7e4a494
  4460d1:	aaa    
  4460d2:	xchg   edi,eax
  4460d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4460d4:	aaa    
  4460d5:	aas    
  4460d6:	into   
  4460d7:	stos   BYTE PTR es:[edi],al
  4460d8:	xor    eax,0xfaf46557
  4460dd:	sbb    BYTE PTR [esi],ch
  4460df:	or     cl,ah
  4460e1:	mov    bh,0x83
  4460e3:	test   al,0x9c
  4460e5:	push   esp
  4460e6:	adc    eax,0x66bfa918
  4460eb:	xchg   edx,eax
  4460ec:	mov    ebx,0xac0fface
  4460f1:	mov    WORD PTR [edx-0x2353366c],fs
  4460f7:	jnp    0x4460f8
  4460f9:	scas   al,BYTE PTR es:[edi]
  4460fa:	xchg   edi,eax
  4460fb:	ss push ds
  4460fd:	and    eax,0x9f1ef3f3
  446102:	jmp    0x61b6:0x8c18c6d5
  446109:	mov    al,ds:0xe9d241f4
  44610e:	adc    eax,0x981d77ea
  446113:	xchg   ebp,eax
  446114:	cli    
  446115:	scas   eax,DWORD PTR es:[edi]
  446116:	mov    edi,edx
  446118:	pop    ds
  446119:	fsub   DWORD PTR ds:0x88a730e7
  44611f:	push   edx
  446120:	cmp    ah,bl
  446122:	add    BYTE PTR [ebp-0x27ed53c6],al
  446128:	or     DWORD PTR [eax],esp
  44612a:	add    DWORD PTR [ecx+0x51d17940],ebx
  446130:	xchg   edx,eax
  446131:	pop    ebp
  446132:	sbb    eax,0xe98f4f56
  446137:	cmp    al,0xe9
  446139:	out    dx,al
  44613a:	(bad)  
  44613b:	call   0xe888:0x8914def
  446142:	sub    edi,esi
  446144:	pop    esi
  446145:	xchg   esi,eax
  446146:	lods   eax,DWORD PTR ds:[esi]
  446147:	ins    DWORD PTR es:[edi],dx
  446148:	mov    bl,0xcd
  44614a:	jge    0x446120
  44614c:	xlat   BYTE PTR ds:[ebx]
  44614d:	adc    al,0x53
  44614f:	inc    ebx
  446151:	bound  esi,QWORD PTR [edi]
  446153:	ins    DWORD PTR es:[edi],dx
  446154:	sub    dl,0xd2
  446157:	test   BYTE PTR [esi-0x6f],ch
  44615a:	pop    ds
  44615b:	shr    DWORD PTR [eax+0x25],0x7e
  44615f:	in     al,0x60
  446161:	cli    
  446162:	cs lahf 
  446164:	pop    ecx
  446165:	mov    ch,0x60
  446167:	pop    ebp
  446168:	in     eax,0xc2
  44616a:	gs (bad) 
  44616d:	cmp    eax,0x29d6e02e
  446172:	inc    ebp
  446173:	aam    0x9e
  446175:	in     al,0xb6
  446177:	jb     0x4461cf
  446179:	ins    BYTE PTR es:[edi],dx
  44617a:	test   eax,0xbc7cc8d
  44617f:	adc    DWORD PTR [edi+0x15],ebp
  446182:	stc    
  446183:	pusha  
  446184:	sbb    WORD PTR [ecx-0x48],si
  446188:	dec    esp
  446189:	inc    edi
  44618a:	rol    DWORD PTR [eax+edi*2+0x3e],cl
  44618e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44618f:	mov    eax,ds:0xc5a9df61
  446194:	xor    al,0x1
  446196:	loop   0x44620b
  446198:	hlt    
  446199:	imul   esp,DWORD PTR [edx],0x46997c9c
  44619f:	push   DWORD PTR [ecx]
  4461a1:	shl    cl,cl
  4461a3:	mov    esi,ecx
  4461a5:	jnp    0x446217
  4461a7:	xor    BYTE PTR [esi+esi*1-0x4c53ebd7],bl
  4461ae:	pop    ecx
  4461af:	or     ebp,eax
  4461b1:	adc    edx,DWORD PTR [eax-0x6653e3a]
  4461b7:	mov    eax,0xae612fb1
  4461bc:	mov    al,0x6d
  4461be:	es out 0x97,al
  4461c1:	push   eax
  4461c2:	sbb    BYTE PTR [edx+ebx*8+0x559fa055],dl
  4461c9:	retf   
  4461ca:	xchg   edi,eax
  4461cb:	push   es
  4461cc:	jmp    0x6e310694
  4461d1:	xchg   ecx,eax
  4461d2:	scas   eax,DWORD PTR es:[edi]
  4461d3:	inc    esi
  4461d4:	test   al,0x5
  4461d6:	aas    
  4461d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4461d8:	stos   DWORD PTR es:[edi],eax
  4461d9:	rcl    BYTE PTR [edi-0x3432c027],cl
  4461df:	lahf   
  4461e0:	inc    edx
  4461e1:	xchg   ebp,eax
  4461e2:	jb     0x4461ef
  4461e4:	adc    DWORD PTR [ebx+0x4cc43b95],0x9c10829b
  4461ee:	imul   edi,ebp,0xffffffe6
  4461f1:	(bad)  
  4461f2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4461f4:	(bad)  
  4461f6:	and    bl,BYTE PTR [edx-0x15]
  4461f9:	scas   al,BYTE PTR es:[edi]
  4461fa:	adc    DWORD PTR [ecx+ebp*4-0x10],ebp
  4461fe:	fsub   QWORD PTR [esi]
  446200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446201:	shr    DWORD PTR [ebp-0x2aeb7e08],0xc9
  446208:	stc    
  446209:	push   cs
  44620a:	cmp    DWORD PTR [edi-0x2e081586],ebx
  446210:	inc    ebx
  446211:	jo     0x446196
  446213:	lds    ecx,FWORD PTR [ecx]
  446215:	shl    BYTE PTR [ebx-0x2f],0x8c
  446219:	xchg   edx,eax
  44621a:	jl     0x446272
  44621c:	popf   
  44621d:	jg     0x44623a
  44621f:	adc    eax,0xe0dc50fe
  446224:	inc    eax
  446225:	or     edi,ecx
  446227:	and    al,0xe8
  446229:	and    esi,DWORD PTR [edx+0x28]
  44622c:	sub    ebx,DWORD PTR [ebp+0x69]
  44622f:	cmp    ebp,edx
  446231:	fiadd  WORD PTR [edx]
  446233:	or     DWORD PTR [ecx+0x79882222],edx
  446239:	hlt    
  44623a:	or     DWORD PTR [eax],edi
  44623c:	in     al,0x4a
  44623e:	ja     0x446265
  446240:	mov    edx,eax
  446242:	add    eax,0xf9cdc50d
  446247:	mov    gs:0x81ee0e28,al
  44624d:	(bad)  
  44624e:	dec    BYTE PTR [ecx+0x23ca6ddd]
  446254:	gs jmp 0x446221
  446257:	xchg   esp,eax
  446258:	dec    esi
  446259:	jmp    0x26dc6686
  44625e:	cli    
  44625f:	xchg   DWORD PTR [ebp+0x46c5e970],esp
  446265:	test   al,0x1b
  446267:	push   ebp
  446268:	pop    es
  446269:	dec    edx
  44626a:	rol    BYTE PTR [edi],0x99
  44626d:	jmp    0xc49703c8
  446272:	jno    0x44620a
  446274:	push   eax
  446275:	cmp    DWORD PTR [ebp-0x33732350],ebx
  44627b:	inc    edx
  44627c:	sbb    al,0x74
  44627e:	xchg   esi,eax
  44627f:	push   0x3
  446281:	sbb    DWORD PTR [edi-0x483d2191],esi
  446287:	add    DWORD PTR [esi+0x60],0xaa3e602b
  44628e:	dec    esi
  44628f:	mov    ecx,0x94dd636d
  446294:	sbb    BYTE PTR [edx],dl
  446296:	sub    BYTE PTR [ebx+0x3b880b8a],ch
  44629c:	enter  0x57af,0xbe
  4462a0:	sub    al,0xa3
  4462a2:	dec    ecx
  4462a3:	mov    ch,dl
  4462a5:	xor    eax,0xefb7b37c
  4462aa:	mov    eax,0x857d07a1
  4462af:	(bad)  
  4462b0:	pop    ds
  4462b1:	aas    
  4462b2:	xlat   BYTE PTR ds:[ebx]
  4462b3:	push   eax
  4462b4:	in     al,0x9f
  4462b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4462b7:	leave  
  4462b8:	push   ebp
  4462b9:	ret    0xa129
  4462bc:	inc    esi
  4462bd:	or     al,0xbe
  4462bf:	fsubrp st(6),st
  4462c1:	sahf   
  4462c2:	and    DWORD PTR ds:0x98398662,eax
  4462c8:	or     BYTE PTR [eax],ch
  4462ca:	mov    ebx,0xf5ee8c6d
  4462cf:	(bad)  
  4462d1:	movups xmm6,xmm4
  4462d4:	inc    ebp
  4462d5:	mov    eax,es:0x5df47cf4
  4462db:	sbb    edi,DWORD PTR [esi-0x29]
  4462de:	dec    eax
  4462df:	ja     0x4462ab
  4462e1:	sub    ebp,edi
  4462e3:	pop    ecx
  4462e4:	in     al,0x3c
  4462e6:	dec    ebx
  4462e7:	(bad)  [edi]
  4462e9:	xchg   ebx,eax
  4462ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4462eb:	adc    bl,BYTE PTR [edi]
  4462ed:	jne    0x446355
  4462ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4462f0:	pop    esp
  4462f1:	mov    WORD PTR [ebx-0x13],ss
  4462f4:	fwait
  4462f5:	xchg   DWORD PTR [edx],ebx
  4462f7:	inc    ebp
  4462f8:	inc    esp
  4462f9:	jmp    0x5d3f0f5b
  4462fe:	mov    bh,BYTE PTR [ecx]
  446300:	les    eax,FWORD PTR [ebx+0x110c1193]
  446306:	jg     0x446310
  446308:	cmc    
  446309:	mov    eax,0xeba5f7c9
  44630e:	push   ecx
  44630f:	lds    ebx,FWORD PTR [edx-0x1db71143]
  446315:	mov    bh,0x9b
  446317:	test   DWORD PTR [edi+0x1a],edx
  44631a:	in     eax,0xa7
  44631c:	fist   WORD PTR [edi+0x74625f67]
  446322:	xchg   edi,eax
  446323:	into   
  446324:	out    dx,al
  446325:	and    edx,DWORD PTR [ebx]
  446327:	jnp    0x4463a2
  446329:	push   0x42eb41f7
  44632e:	cmp    al,0x3d
  446330:	push   es
  446331:	push   esi
  446332:	js     0x4462eb
  446334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446336:	jg     0x446330
  446338:	in     al,dx
  446339:	or     al,0xce
  44633b:	push   edi
  44633c:	pop    si
  44633e:	mov    ecx,0x831ea09c
  446343:	retf   0x6932
  446346:	push   0x84325f72
  44634b:	pop    eax
  44634c:	lods   eax,DWORD PTR ds:[esi]
  44634d:	scas   eax,DWORD PTR es:[edi]
  44634e:	jo     0x4462e6
  446350:	push   edx
  446351:	xchg   ebx,eax
  446352:	(bad)  
  446354:	aam    0xc8
  446356:	pop    edi
  446357:	nop
  446358:	cld    
  446359:	sbb    esp,DWORD PTR [ecx]
  44635b:	fisubr WORD PTR [edx]
  44635d:	loopne 0x4463b4
  44635f:	jp     0x446371
  446361:	push   cx
  446363:	jg     0x446317
  446365:	sti    
  446366:	jl     0x446315
  446368:	retf   
  446369:	lods   eax,DWORD PTR ds:[esi]
  44636a:	stos   DWORD PTR es:[edi],eax
  44636b:	jns    0x4463d3
  44636d:	push   ax
  44636f:	lds    ecx,FWORD PTR [ebx-0x27]
  446372:	loope  0x446377
  446374:	sub    esp,edi
  446376:	mov    al,0x9c
  446378:	scas   eax,DWORD PTR es:[edi]
  446379:	adc    ah,BYTE PTR [edx+esi*1]
  44637c:	sub    bl,BYTE PTR [esi-0x6c206a86]
  446382:	call   0x6114:0x4e66d5e1
  446389:	and    eax,0xff9ded4c
  44638e:	les    ebp,FWORD PTR [esi-0x53]
  446391:	mov    eax,0xacd2af07
  446396:	push   ebp
  446397:	push   0x22
  446399:	mov    bl,0xbb
  44639b:	or     esp,DWORD PTR [esi+0x18]
  44639e:	addr16 push cs
  4463a0:	and    ch,BYTE PTR [ebp+0x17394ae9]
  4463a6:	jnp    0x4463c1
  4463a8:	sub    ecx,DWORD PTR [esi]
  4463aa:	aam    0xc
  4463ac:	es cbw 
  4463af:	fnstsw WORD PTR [ecx+0x483de322]
  4463b5:	(bad)  
  4463b6:	and    esp,DWORD PTR [ebx-0xe]
  4463b9:	add    al,0xa7
  4463bb:	fidiv  WORD PTR [esi-0x48]
  4463be:	or     al,BYTE PTR [esi-0x19]
  4463c1:	push   cs
  4463c2:	sbb    DWORD PTR [ebx+0xff38cb0],ecx
  4463c8:	scas   eax,DWORD PTR es:[edi]
  4463c9:	push   ds
  4463ca:	retf   0x4969
  4463cd:	xchg   ebx,eax
  4463ce:	jg     0x4463dc
  4463d0:	shl    BYTE PTR [eax],0x79
  4463d3:	push   ds
  4463d4:	imul   esp,DWORD PTR [eax+eiz*2],0xffffff9a
  4463d8:	in     al,0xe2
  4463da:	jmp    0x4463f1
  4463dc:	loopne 0x4463c4
  4463de:	xchg   BYTE PTR [ecx-0x55],cl
  4463e1:	fld    DWORD PTR [ebp-0x55c8a029]
  4463e7:	dec    esp
  4463e8:	pop    esp
  4463e9:	xchg   edi,eax
  4463ea:	in     eax,0x69
  4463ec:	or     BYTE PTR [eax],bl
  4463ee:	jmp    0x3ce1:0xa15d7a5c
  4463f5:	mov    ss,ecx
  4463f7:	arpl   ax,sp
  4463f9:	out    dx,eax
  4463fa:	rol    BYTE PTR [ebx],0xc8
  4463fd:	and    al,0xa7
  4463ff:	sub    al,BYTE PTR [eax]
  446401:	sahf   
  446402:	in     eax,0x95
  446404:	div    ch
  446406:	(bad)  
  446407:	lods   eax,DWORD PTR ds:[esi]
  446408:	xor    cl,BYTE PTR [eax]
  44640a:	or     BYTE PTR [esi+eax*4],0x79
  44640e:	iret   
  44640f:	push   0xffffffdd
  446411:	jmp    0x51609db4
  446416:	push   ebx
  446417:	sub    edi,esp
  446419:	test   al,0x28
  44641b:	sahf   
  44641c:	sub    esp,DWORD PTR [esi]
  44641e:	xor    ecx,DWORD PTR [esp+ecx*4]
  446421:	pop    edx
  446422:	push   edi
  446423:	mov    al,ds:0x343b5ba3
  446428:	pop    ds
  446429:	inc    ecx
  44642a:	in     al,dx
  44642b:	in     al,dx
  44642c:	sbb    BYTE PTR [ebx-0x21129551],bh
  446432:	cmc    
  446433:	inc    edi
  446434:	and    al,0xaf
  446436:	inc    ebx
  446437:	xchg   esp,eax
  446438:	arpl   WORD PTR [edi+0x14220d1e],ax
  44643e:	xchg   edx,eax
  44643f:	pavgw  mm7,QWORD PTR [edx+ecx*1+0x60]
  446444:	pop    edi
  446445:	inc    esp
  446446:	repnz sti 
  446448:	mov    DWORD PTR [edi-0x4cf88c74],esp
  44644e:	pushf  
  44644f:	cld    
  446450:	popa   
  446451:	shl    DWORD PTR [ebx+esi*8-0x50],0x3f
  446456:	pop    edi
  446457:	cdq    
  446458:	adc    DWORD PTR [eax-0xed1fb24],0xfffffff5
  44645f:	mov    eax,ds:0x85a957d
  446464:	inc    esp
  446465:	aam    0x6c
  446467:	jl     0x446400
  446469:	mov    ebp,0xe370b557
  44646e:	xor    BYTE PTR [ebx-0x4c],dh
  446471:	push   es
  446472:	jmp    0x4464d3
  446474:	ins    BYTE PTR es:[edi],dx
  446475:	xchg   esi,eax
  446476:	std    
  446477:	sub    DWORD PTR ds:0xce835262,esp
  44647d:	mov    ebx,0x9e43cb69
  446482:	jmp    0x4464df
  446484:	cmp    DWORD PTR [ebx-0x48e581f8],edi
  44648a:	cmc    
  44648b:	push   esp
  44648c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44648d:	sbb    dl,BYTE PTR [ebp-0x1]
  446490:	into   
  446491:	jb     0x4464b9
  446493:	sbb    eax,0xa0d61a05
  446498:	leave  
  446499:	cmp    BYTE PTR [edx+0x353a4ad0],ah
  44649f:	cmp    ch,BYTE PTR [ebx-0x6b77fe]
  4464a5:	jmp    0x9cf8a60a
  4464aa:	sbb    DWORD PTR [edx],eax
  4464ac:	cmp    DWORD PTR [edx],edx
  4464ae:	(bad)  
  4464b0:	cmp    DWORD PTR [esi+ebx*8],edx
  4464b3:	aam    0xef
  4464b5:	sub    ebx,eax
  4464b7:	mov    esi,0xe17dd122
  4464bc:	es (bad) 
  4464be:	pop    esi
  4464bf:	mov    ds:0x634eb2c7,eax
  4464c4:	jp     0x44653c
  4464c6:	test   DWORD PTR [ebp-0xfb07025],ebx
  4464cc:	pandn  mm0,QWORD PTR cs:[ebx]
  4464d0:	scas   eax,DWORD PTR es:[edi]
  4464d1:	sub    ebp,ebp
  4464d3:	adc    BYTE PTR [eax],ch
  4464d5:	clc    
  4464d6:	out    dx,al
  4464d7:	mov    dl,BYTE PTR [esi+0x39e3ed63]
  4464dd:	jbe    0x446485
  4464df:	push   ss
  4464e0:	ror    DWORD PTR [esi+0x32bd42a6],0x84
  4464e7:	pop    esi
  4464e8:	retf   0x5156
  4464eb:	sbb    ebx,DWORD PTR [edx-0x579e9745]
  4464f1:	push   es
  4464f2:	xchg   edi,eax
  4464f3:	cmp    esp,ebp
  4464f5:	(bad)  
  4464f6:	repz cmp eax,0x995f9f52
  4464fc:	sbb    cl,BYTE PTR [esi+0x2]
  4464ff:	loopne 0x44655e
  446501:	xchg   esi,eax
  446502:	enter  0x73b,0xa6
  446506:	repnz add bl,dl
  446509:	call   0xac97:0x658f5a24
  446510:	sbb    ebp,eax
  446512:	cli    
  446513:	or     eax,ebp
  446515:	das    
  446516:	jmp    0x44653a
  446518:	push   esi
  446519:	loop   0x446550
  44651b:	add    edx,DWORD PTR [ebx]
  44651d:	test   al,0x54
  44651f:	sbb    DWORD PTR [ebp-0x32],ebx
  446522:	sub    DWORD PTR [ecx+ebx*4+0x6a],edx
  446526:	push   ecx
  446527:	sub    eax,0x5eb5444c
  44652c:	mov    ds:0x6598b540,al
  446531:	aad    0xa3
  446533:	ins    BYTE PTR es:[edi],dx
  446534:	inc    esi
  446535:	xchg   ebp,eax
  446536:	cmc    
  446537:	repnz mov ss,WORD PTR [ecx-0x3e158a66]
  44653e:	out    0x2e,al
  446540:	mov    esi,0x40737409
  446545:	retf   0xabb8
  446548:	stos   DWORD PTR es:[edi],eax
  446549:	mov    esi,0x36a1225d
  44654e:	add    bl,BYTE PTR [ebx+0xf00547d]
  446554:	mov    al,0xee
  446556:	sbb    BYTE PTR [ecx*4-0x20cba9f7],bl
  44655d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44655e:	je     0x446572
  446560:	jnp    0x44652c
  446562:	fdiv   QWORD PTR [edx]
  446564:	vmulsd xmm4,xmm4,QWORD PTR [ebp+0x7e]
  446569:	xor    BYTE PTR [ebx],0x8c
  44656c:	mov    ss,WORD PTR [ebx-0x49bee018]
  446572:	add    esi,DWORD PTR [edi-0x455c4f27]
  446578:	cmp    eax,0x950ae30e
  44657d:	sbb    eax,0xfe3fb0c5
  446582:	mov    esi,0x1cbd4322
  446587:	pop    ss
  446588:	xor    ebp,DWORD PTR [ebp-0x1]
  44658b:	mov    bl,0xf3
  44658e:	test   BYTE PTR [esi-0x49],dl
  446591:	mov    ebp,0x1c300856
  446596:	or     ebx,edi
  446598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446599:	push   ss
  44659a:	stos   BYTE PTR es:[edi],al
  44659b:	adc    al,0x4b
  44659d:	jne    0x446590
  44659f:	adc    BYTE PTR [esi-0x7415ebfa],0x77
  4465a6:	inc    esi
  4465a7:	jno    0x4465ca
  4465a9:	ror    eax,1
  4465ab:	in     eax,dx
  4465ac:	mov    ah,0x8e
  4465ae:	sbb    bl,al
  4465b0:	ja     0x44655f
  4465b2:	popa   
  4465b3:	test   eax,0xe6eecf4
  4465b8:	outs   dx,DWORD PTR ds:[esi]
  4465b9:	mov    ds:0xf7089cff,eax
  4465be:	xchg   edi,eax
  4465bf:	popa   
  4465c0:	mov    al,0x18
  4465c2:	sbb    BYTE PTR ds:0xe3c2acb6,cl
  4465c8:	rcr    DWORD PTR [edi+0x73],cl
  4465cb:	data16 sti 
  4465cd:	cmp    al,0x72
  4465cf:	inc    edx
  4465d0:	push   es
  4465d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4465d2:	pop    ecx
  4465d3:	xor    al,0x69
  4465d5:	jno    0x446614
  4465d7:	xchg   ebp,eax
  4465d8:	pushf  
  4465d9:	xor    eax,0xa5b4ce44
  4465de:	je     0x44662e
  4465e0:	mov    ch,0xee
  4465e2:	sahf   
  4465e3:	xchg   esi,eax
  4465e4:	pop    esi
  4465e5:	pop    es
  4465e6:	dec    eax
  4465e7:	adc    al,0x9e
  4465e9:	inc    ecx
  4465ea:	rcl    ecx,0x82
  4465ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4465ee:	cmp    al,0x68
  4465f0:	aaa    
  4465f1:	add    ch,cl
  4465f3:	dec    ecx
  4465f4:	push   0xffffff8b
  4465f6:	cmp    ebp,DWORD PTR [ebx]
  4465f8:	dec    edx
  4465f9:	mov    ds:0xde0afa2,eax
  4465fe:	push   ds
  4465ff:	inc    esp
  446600:	dec    ecx
  446601:	inc    ecx
  446602:	popa   
  446603:	not    DWORD PTR [ecx+ebp*2-0x22]
  446607:	push   0xffffffc8
  446609:	das    
  44660a:	lds    esi,FWORD PTR [ecx+edi*4-0x63be9b63]
  446611:	in     al,0xcb
  446613:	mov    eax,0xe137a63
  446618:	and    cl,0x4d
  44661b:	inc    ecx
  44661c:	add    bh,BYTE PTR [eax]
  44661e:	js     0x44660e
  446620:	ret    
  446621:	das    
  446622:	mov    ebx,esp
  446624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446625:	lds    di,DWORD PTR [ebx]
  446628:	or     bh,cl
  44662a:	int3   
  44662b:	push   0x93055cff
  446630:	sbb    DWORD PTR [esi-0x2a],ebx
  446633:	inc    ebp
  446634:	sti    
  446635:	dec    edx
  446636:	in     eax,dx
  446637:	shl    BYTE PTR [ebp+ebx*8+0x3b80d191],cl
  44663e:	adc    eax,0xe90d3d99
  446643:	xchg   ebx,eax
  446644:	pop    ds
  446645:	les    ecx,FWORD PTR [eax+0x1c]
  446648:	xchg   edi,eax
  446649:	or     al,0x11
  44664b:	sub    ah,BYTE PTR [eax-0x12a4b267]
  446651:	in     al,0x1c
  446653:	mov    ch,BYTE PTR [ebx-0x17]
  446656:	test   al,0xf2
  446658:	das    
  446659:	sbb    esp,DWORD PTR [ecx+eax*2-0x17a4e132]
  446660:	dec    ebx
  446661:	mov    dh,0xea
  446663:	adc    ecx,DWORD PTR [esi-0x38]
  446666:	jp     0x44668e
  446668:	call   FWORD PTR [edi+0x3f08f246]
  44666e:	cs in  al,dx
  446670:	cmc    
  446671:	inc    ebp
  446672:	out    dx,eax
  446673:	xchg   ecx,eax
  446674:	sbb    cl,dl
  446676:	maxps  xmm5,XMMWORD PTR [ecx]
  446679:	retf   0x42db
  44667c:	out    0xdc,al
  44667e:	pushf  
  44667f:	xchg   ecx,eax
  446680:	adc    al,0x9
  446682:	dec    edi
  446683:	dec    edx
  446684:	js     0x446705
  446686:	pushf  
  446687:	sub    edx,DWORD PTR ds:[ebp-0x2aa013ab]
  44668e:	shl    bh,1
  446690:	int3   
  446691:	loope  0x4466af
  446693:	xchg   edx,eax
  446694:	jns    0x44669d
  446696:	xchg   ecx,eax
  446697:	dec    esi
  446698:	retf   
  446699:	stos   BYTE PTR es:[edi],al
  44669a:	sub    BYTE PTR [eax-0x80],dh
  44669d:	in     al,dx
  44669e:	mov    ds:0x52a63dec,eax
  4466a3:	dec    eax
  4466a4:	push   cs
  4466a5:	add    bh,bl
  4466a7:	fstp   DWORD PTR [eax-0x1a]
  4466aa:	gs mov dl,0x24
  4466ad:	and    al,0xb8
  4466af:	jns    0x4466ae
  4466b1:	test   DWORD PTR [ebp-0x4d43b8a5],esi
  4466b7:	aas    
  4466b8:	add    al,0xfa
  4466ba:	lods   eax,DWORD PTR ds:[esi]
  4466bb:	push   ebp
  4466bc:	mov    BYTE PTR [ebx],0x89
  4466bf:	mov    bh,0x16
  4466c1:	sub    DWORD PTR [edi],esp
  4466c3:	outs   dx,BYTE PTR ds:[esi]
  4466c4:	mov    bh,0x26
  4466c6:	in     al,0x70
  4466c8:	lds    esp,FWORD PTR ds:0x3955900d
  4466ce:	cmp    bh,0x69
  4466d1:	pushf  
  4466d2:	pop    ecx
  4466d3:	sahf   
  4466d4:	add    eax,0x49f73746
  4466d9:	xor    DWORD PTR [esi-0x611c0b75],esp
  4466df:	std    
  4466e0:	jge    0x446707
  4466e2:	push   ds
  4466e3:	sbb    al,0xbd
  4466e5:	stc    
  4466e6:	mov    ebp,0x64294aab
  4466eb:	enter  0xd3bc,0x4a
  4466ef:	imul   ecx,DWORD PTR [ebx+ebx*2-0x51],0x61dae15d
  4466f7:	fwait
  4466f8:	nop
  4466f9:	inc    ebp
  4466fa:	inc    ebp
  4466fb:	inc    edx
  4466fc:	dec    eax
  4466fd:	daa    
  4466fe:	outs   dx,DWORD PTR ds:[esi]
  4466ff:	lds    edx,FWORD PTR [eax-0x40]
  446702:	addr16 jne 0x446692
  446705:	aas    
  446706:	pop    ds
  446707:	push   es
  446708:	pop    ecx
  446709:	xlat   BYTE PTR ds:[ebx]
  44670a:	daa    
  44670b:	cmp    bl,BYTE PTR [eax+0x3856810b]
  446711:	mov    bh,0x79
  446713:	jecxz  0x4466b5
  446715:	mov    cl,0xc0
  446717:	mov    dh,0xb8
  446719:	mov    WORD PTR [edi],cs
  44671b:	shr    esp,0x31
  44671e:	xchg   edi,eax
  44671f:	(bad)  
  446720:	dec    ebp
  446721:	push   eax
  446722:	and    bh,BYTE PTR [edx+edi*4+0x43159a53]
  446729:	dec    ecx
  44672a:	inc    ebp
  44672b:	pop    eax
  44672c:	mov    ah,0xb9
  44672e:	mov    dl,0xab
  446730:	xor    al,0xc4
  446732:	div    DWORD PTR [ebx+0x2f348580]
  446738:	dec    esi
  446739:	jno    0x446785
  44673b:	inc    esp
  44673c:	cli    
  44673d:	cmp    al,0xfe
  44673f:	push   ebx
  446740:	ins    BYTE PTR es:[edi],dx
  446741:	sbb    al,0x7e
  446743:	or     DWORD PTR [ebx+eax*2],ebx
  446746:	lea    ebp,[eax-0x7e]
  446749:	mov    esi,0x94883ff2
  44674e:	repnz rcr BYTE PTR [ebx],0x44
  446752:	mov    ebp,0x445223dd
  446757:	repz (bad) 
  446759:	int    0x45
  44675b:	das    
  44675c:	xor    esp,DWORD PTR [ebx-0x17b5dd34]
  446762:	mov    ecx,0x850d0c53
  446767:	leave  
  446768:	jo     0x4467db
  44676a:	sahf   
  44676b:	jg     0x4466f0
  44676d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44676e:	or     eax,0x323e5c0a
  446773:	lock jp 0x446736
  446776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446777:	ror    BYTE PTR [ecx+0x5654b662],cl
  44677d:	xchg   esp,eax
  44677e:	shl    DWORD PTR [ecx],1
  446780:	push   ebx
  446781:	loopne 0x446739
  446783:	xor    dh,BYTE PTR [ebx+0x3e]
  446786:	stos   BYTE PTR es:[edi],al
  446787:	xor    al,0xc4
  446789:	addr16 das 
  44678b:	mov    cl,0x90
  44678d:	loopne 0x446766
  44678f:	packssdw mm7,QWORD PTR [eax]
  446792:	sbb    eax,DWORD PTR [ebp+0x5814e958]
  446798:	cwde   
  446799:	lahf   
  44679a:	mov    bl,0xb2
  44679c:	xor    DWORD PTR [edx+0x9a42c72],ebx
  4467a2:	jle    0x4467ba
  4467a4:	sub    DWORD PTR [ebx+0x51],ebp
  4467a7:	cli    
  4467a8:	lds    ebx,FWORD PTR [ebp-0x5321d90f]
  4467ae:	dec    ebx
  4467af:	outs   dx,DWORD PTR ds:[esi]
  4467b0:	int3   
  4467b1:	mov    esi,0xe90e02cd
  4467b6:	mov    edx,0xd24f8387
  4467bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4467bc:	xchg   edi,eax
  4467bd:	dec    esp
  4467be:	jmp    0xc3b2:0xd2b2f3a1
  4467c5:	xchg   DWORD PTR [eax+0x4377157a],ebx
  4467cb:	(bad)  
  4467cc:	stos   DWORD PTR es:[edi],eax
  4467cd:	pop    es
  4467ce:	mov    ds:0x5276f9bb,al
  4467d3:	fstp   TBYTE PTR [ecx-0x5b]
  4467d6:	xor    al,0xa0
  4467d8:	test   DWORD PTR ds:0xc550fa5f,ebp
  4467de:	fild   WORD PTR ds:0x1c96564e
  4467e4:	rcr    BYTE PTR [ebx-0x74],1
  4467e7:	mov    esi,0xc5c43e9e
  4467ec:	out    dx,eax
  4467ed:	pushf  
  4467ee:	mov    ah,0x6b
  4467f0:	icebp  
  4467f1:	mov    eax,es:0x410ea644
  4467f7:	call   0xf201f5ac
  4467fc:	xchg   ebx,eax
  4467fd:	sub    al,0xd9
  4467ff:	cmpps  xmm6,XMMWORD PTR [ecx+0x24],0x8
  446804:	sub    BYTE PTR [eax-0x1dd6ea54],0x29
  44680b:	outs   dx,DWORD PTR ds:[esi]
  44680c:	sub    cl,BYTE PTR [edi+0x14deb62e]
  446812:	cmp    ebx,DWORD PTR [eax+eax*2]
  446815:	and    eax,DWORD PTR [ebx+0x7dd766b5]
  44681b:	mov    dh,0xf9
  44681d:	jo     0x446828
  44681f:	imul   ebx,DWORD PTR [edi-0x6e],0x84d5b7f3
  446826:	loope  0x446894
  446828:	sbb    esp,DWORD PTR [ebx+0x75fa87b3]
  44682e:	retf   
  44682f:	and    DWORD PTR [ebp-0x6c69fa29],edx
  446835:	daa    
  446836:	xor    bh,dh
  446838:	out    dx,eax
  446839:	mov    eax,ds:0x3c395ba4
  44683e:	lahf   
  44683f:	sbb    ah,dh
  446841:	mov    cl,BYTE PTR [edi+0x65c41385]
  446847:	mov    ds:0xb0bae0e5,al
  44684c:	sbb    BYTE PTR [eax],0x9a
  44684f:	stc    
  446850:	popf   
  446851:	cli    
  446852:	loopne 0x44681b
  446854:	(bad)  
  446855:	out    dx,al
  446856:	arpl   ax,bx
  446858:	inc    ebx
  446859:	pusha  
  44685a:	sub    ebp,DWORD PTR [eax+0x44e74f60]
  446860:	sbb    al,0x9b
  446862:	or     al,0xee
  446864:	adc    BYTE PTR [esi+esi*1+0x1],0x3e
  446869:	cli    
  44686a:	mov    ecx,0xde26ea36
  44686f:	sub    eax,DWORD PTR [ecx-0x5441b3e3]
  446875:	aas    
  446876:	mov    BYTE PTR [edx],al
  446878:	dec    ah
  44687a:	shl    BYTE PTR [ebp-0x67],0xa8
  44687e:	push   esp
  44687f:	out    dx,eax
  446880:	adc    cl,ah
  446882:	pop    es
  446883:	mul    eax
  446885:	ficomp WORD PTR [edi]
  446887:	ret    0xc7ca
  44688a:	inc    esp
  44688b:	push   0x5a
  44688d:	mov    esi,0xdc172179
  446892:	xor    BYTE PTR [edx+0x5c],dh
  446895:	and    eax,0xd61ae49d
  44689a:	aam    0x5
  44689c:	nop
  44689d:	cmp    BYTE PTR [ecx],dl
  44689f:	mov    ds:0x36836465,eax
  4468a4:	mov    ds:0x73b8a536,al
  4468a9:	retf   0xcb03
  4468ac:	dec    esi
  4468ad:	xor    ah,BYTE PTR [ebx-0x2f2bcb63]
  4468b3:	les    ebx,FWORD PTR [edx]
  4468b5:	in     al,dx
  4468b6:	out    dx,eax
  4468b7:	jp     0x446873
  4468b9:	jnp    0x4468ef
  4468bb:	cwde   
  4468bc:	push   edx
  4468bd:	(bad)  
  4468be:	loope  0x44693a
  4468c0:	ds dec ebx
  4468c2:	xchg   esi,eax
  4468c3:	inc    ebp
  4468c4:	fidiv  WORD PTR [edi*8+0x5fd7efc0]
  4468cb:	stos   BYTE PTR es:[edi],al
  4468cc:	sub    ebx,ecx
  4468ce:	scas   al,BYTE PTR es:[edi]
  4468cf:	outs   dx,DWORD PTR ds:[esi]
  4468d0:	scas   al,BYTE PTR es:[edi]
  4468d1:	push   0xd64cc0d0
  4468d6:	adc    BYTE PTR [edi-0x427d9a0],dl
  4468dc:	pop    edi
  4468dd:	pop    edi
  4468de:	mov    ch,BYTE PTR [edx]
  4468e0:	sub    ch,cl
  4468e2:	bound  edx,QWORD PTR [edi]
  4468e4:	and    eax,0xcac7db44
  4468e9:	fild   QWORD PTR [edx+0x63c0c87e]
  4468ef:	mov    ah,0x89
  4468f1:	cmp    edx,DWORD PTR [edx]
  4468f3:	push   ebp
  4468f4:	mov    eax,0x7f5d1fb1
  4468f9:	jo     0x446969
  4468fb:	cvtdq2ps xmm4,XMMWORD PTR [esi+esi*2]
  4468ff:	loop   0x446902
  446901:	adc    bl,BYTE PTR [esi+esi*4+0x39]
  446905:	adc    al,0x5f
  446907:	cmp    DWORD PTR [ecx+0x344a3714],0x1f
  44690e:	or     BYTE PTR [edx+0x5d9573d2],0xd9
  446915:	sbb    ebx,DWORD PTR [edi]
  446917:	enter  0x301c,0x77
  44691b:	loope  0x4468b2
  44691d:	(bad)  
  44691e:	out    0xec,al
  446920:	and    esp,DWORD PTR [eax+0x6e]
  446923:	mov    ecx,ss
  446925:	xchg   esi,eax
  446926:	or     DWORD PTR [ebx],ebp
  446928:	mov    ds:0xaa26f889,al
  44692d:	jnp    0x446997
  44692f:	cmp    BYTE PTR [edx-0x3be49e4a],ah
  446935:	into   
  446936:	psubd  mm4,QWORD PTR [eax]
  446939:	and    dl,BYTE PTR [edx]
  44693b:	push   ds
  44693c:	fdivr  DWORD PTR [esi+0x1cb2faea]
  446942:	jb     0x4468c4
  446944:	xlat   BYTE PTR ds:[ebx]
  446945:	sub    al,0x1a
  446947:	lahf   
  446948:	dec    edx
  446949:	and    BYTE PTR [edx+0x35551e54],bl
  44694f:	sbb    DWORD PTR [esi+edi*1],esi
  446952:	mov    edi,0x189b261e
  446957:	pop    ss
  446958:	adc    eax,0xafc219e1
  44695d:	arpl   si,bp
  44695f:	call   0x41055f17
  446964:	add    al,0x9f
  446966:	clc    
  446967:	mov    esp,0xb48cf0f6
  44696c:	out    dx,al
  44696d:	popf   
  44696e:	ficom  WORD PTR [edx+0x23]
  446971:	mov    dl,0xa5
  446973:	pop    es
  446974:	gs dec ecx
  446976:	lods   al,BYTE PTR ds:[esi]
  446977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446979:	es aaa 
  44697b:	lock mov al,ds:0xe0f5898c
  446981:	bound  esp,QWORD PTR [esi]
  446983:	pop    ds
  446984:	cmp    eax,0x25f14775
  446989:	lock int 0x43
  44698c:	inc    edi
  44698d:	test   DWORD PTR [ecx-0x6bae305],esi
  446993:	jno    0x44691e
  446995:	cdq    
  446996:	add    ch,BYTE PTR [ebx-0x1d]
  446999:	dec    ebx
  44699a:	lahf   
  44699b:	push   eax
  44699c:	pusha  
  44699d:	or     edi,DWORD PTR [ebp-0x2c8bd86f]
  4469a3:	pop    ecx
  4469a4:	or     eax,0xfa7badd0
  4469a9:	sti    
  4469aa:	cmp    al,BYTE PTR [ebx+0x3]
  4469ad:	test   BYTE PTR ds:0x3620a085,bl
  4469b3:	enter  0xc4fb,0xe2
  4469b7:	push   ebx
  4469b8:	pop    ebp
  4469b9:	fisttp DWORD PTR [ebx+0x3c]
  4469bc:	mov    al,0xc2
  4469be:	pop    edi
  4469bf:	pop    ebp
  4469c0:	ret    
  4469c1:	sub    ah,0x40
  4469c4:	loopne 0x446979
  4469c6:	or     edi,DWORD PTR ds:0xc63d564b
  4469cc:	ror    BYTE PTR [eax+0x68351d12],1
  4469d2:	mov    ah,0x76
  4469d4:	test   ecx,0x7c928a0f
  4469da:	fild   WORD PTR [edi+0xaa43cea]
  4469e0:	mov    esi,0x62cb3abc
  4469e5:	adc    edx,DWORD PTR [ecx-0x297699a0]
  4469eb:	daa    
  4469ec:	mov    esp,0x8b8d09b
  4469f1:	pop    edx
  4469f2:	ret    
  4469f3:	mov    eax,DWORD PTR [edi]
  4469f5:	and    al,0x90
  4469f7:	sbb    DWORD PTR [ebx-0x3f],0x9a6c44ad
  4469fe:	fidiv  WORD PTR [ecx+0x26]
  446a01:	cmp    DWORD PTR [eax+0xb7537be],ebx
  446a07:	and    eax,0xb60cf8d7
  446a0c:	rcr    ebp,0xb
  446a0f:	mov    ah,BYTE PTR [eax]
  446a11:	arpl   WORD PTR ds:[esi+0x6a],sp
  446a15:	out    dx,al
  446a16:	add    esi,ebp
  446a18:	add    esp,esp
  446a1a:	push   cs
  446a1b:	test   DWORD PTR es:[edi-0x68],ebp
  446a1f:	mov    al,ds:0xe88bf5eb
  446a24:	shl    DWORD PTR [edi*2+0x1b24b680],0x4d
  446a2c:	adc    esi,ecx
  446a2e:	jns    0x446a9e
  446a30:	out    0xbf,eax
  446a32:	xor    bl,bh
  446a34:	cdq    
  446a35:	or     BYTE PTR [ebp-0x6383acb3],al
  446a3b:	cmp    BYTE PTR [eax-0x5d],ah
  446a3e:	popf   
  446a3f:	xor    al,0x15
  446a41:	sub    eax,0x7202e11
  446a46:	or     bl,BYTE PTR [ebx]
  446a48:	mov    ebx,0xdbb82c1f
  446a4d:	rol    ebp,0xeb
  446a50:	mov    ch,0xfc
  446a52:	pop    DWORD PTR [eax-0x723d6941]
  446a58:	mov    edx,0xae758840
  446a5d:	ret    0x6f94
  446a60:	(bad)  
  446a61:	retf   0x778d
  446a64:	retf   0x3cd
  446a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446a68:	call   0xf721:0x5bc8cb8
  446a6f:	cmc    
  446a70:	cld    
  446a71:	jbe    0x446aec
  446a73:	test   al,ch
  446a75:	mov    ebp,0x885c4488
  446a7a:	jge    0x446a2a
  446a7c:	call   0xaf664fe
  446a81:	loopne 0x446a99
  446a83:	mov    ebp,0xf80da8a
  446a88:	add    DWORD PTR [esi-0x7aad21d6],esp
  446a8e:	adc    edi,DWORD PTR [ebx-0x62]
  446a91:	dec    edi
  446a92:	mov    ecx,0x360ac5d8
  446a97:	dec    eax
  446a98:	jle    0x446b15
  446a9a:	sbb    BYTE PTR [esi-0x7d6a7eeb],ch
  446aa0:	push   es
  446aa1:	sub    al,0x2e
  446aa3:	mov    al,ds:0x9670f642
  446aa8:	(bad)  
  446aa9:	cld    
  446aaa:	mov    bh,BYTE PTR [edx+0x4738ae85]
  446ab0:	inc    ecx
  446ab1:	sbb    BYTE PTR [edx+0x7f],bl
  446ab4:	sar    BYTE PTR [esi+0x2c],cl
  446ab7:	push   ebx
  446ab8:	adc    eax,0x5541be8c
  446abd:	push   ss
  446abe:	icebp  
  446abf:	ja     0x446a88
  446ac1:	push   edi
  446ac2:	sub    dh,BYTE PTR [edi+0x2b]
  446ac5:	ficomp WORD PTR [edi+0x2d]
  446ac8:	and    al,0xd1
  446aca:	(bad)  
  446acb:	xor    eax,0xecca0234
  446ad0:	adc    bl,cl
  446ad2:	mov    ds:0xbea1e38b,eax
  446ad7:	add    eax,0x253e124
  446adc:	test   eax,0x27f2bb11
  446ae1:	jae    0x446a80
  446ae3:	sub    BYTE PTR [ecx],ah
  446ae5:	mov    edi,0x78ec3e09
  446aea:	mov    ebx,ebx
  446aec:	inc    esp
  446aed:	rcl    BYTE PTR [ecx-0x430a3b38],0xd5
  446af4:	mov    BYTE PTR [ebp+0x57],al
  446af7:	sar    DWORD PTR ds:0x6b6d87f,0x9f
  446afe:	jno    0x446b65
  446b00:	data16 jb 0x446af9
  446b03:	sub    eax,0x2519f28c
  446b08:	test   DWORD PTR [ebx],0xc06509b8
  446b0e:	call   0xa0bfb86b
  446b13:	gs push edx
  446b15:	outs   dx,BYTE PTR ds:[esi]
  446b16:	or     eax,0x5203c4b6
  446b1b:	mov    ah,0xb9
  446b1d:	pushf  
  446b1e:	aad    0x12
  446b20:	mov    al,0xb3
  446b22:	scas   al,BYTE PTR es:[edi]
  446b23:	dec    esp
  446b24:	pop    esi
  446b25:	jle    0x446ad8
  446b27:	arpl   WORD PTR [eax],bp
  446b29:	push   ds
  446b2a:	jmp    0x7ca6:0xc91d76ec
  446b31:	push   ss
  446b32:	adc    edi,DWORD PTR [ebx]
  446b34:	add    BYTE PTR [ecx+0x2b],dh
  446b37:	jmp    0x446afe
  446b39:	or     eax,0xca231e69
  446b3e:	arpl   WORD PTR [ecx-0x1],cx
  446b41:	daa    
  446b42:	aam    0x6d
  446b44:	aaa    
  446b45:	xor    bh,dl
  446b47:	jmp    0x2743:0x7f67ee6f
  446b4e:	mov    ah,0x57
  446b50:	repnz pop eax
  446b52:	loope  0x446b0e
  446b54:	inc    esi
  446b55:	sbb    esp,ebp
  446b57:	inc    eax
  446b58:	jne    0x446b98
  446b5a:	mov    esi,0x839b3527
  446b5f:	(bad)  [esi]
  446b61:	pop    ss
  446b62:	sti    
  446b63:	pop    ebp
  446b64:	pop    ebp
  446b65:	and    DWORD PTR [esi+0x78f051c4],ecx
  446b6b:	bound  esp,QWORD PTR [edx]
  446b6d:	xor    al,0x26
  446b6f:	xchg   ebp,eax
  446b70:	sbb    edi,DWORD PTR [esi+esi*4]
  446b73:	out    dx,al
  446b74:	xor    ch,BYTE PTR [ecx-0x10]
  446b77:	jne    0x446b33
  446b79:	mov    ch,0x2a
  446b7b:	pop    ds
  446b7c:	push   eax
  446b7d:	ds test eax,0x3e042fb
  446b83:	mov    edi,0xc45a381e
  446b88:	sbb    BYTE PTR [edx-0x59e2e76e],al
  446b8e:	xlat   BYTE PTR ds:[ebx]
  446b8f:	daa    
  446b90:	data16 hlt 
  446b92:	add    DWORD PTR [esi],0x69
  446b95:	fimul  DWORD PTR [edx-0x2d]
  446b98:	xor    DWORD PTR [esi+0x41],eax
  446b9b:	fisubr WORD PTR [ebx]
  446b9d:	mov    edx,0x9c281fb2
  446ba2:	ja     0x446bb7
  446ba4:	cdq    
  446ba5:	or     ah,BYTE PTR [edx+0x50]
  446ba8:	mov    DWORD PTR [eax-0x77],ebp
  446bab:	cmp    ebp,DWORD PTR [esi-0x6d821a01]
  446bb1:	in     al,dx
  446bb2:	and    DWORD PTR [edx-0x55eab10e],edx
  446bb8:	mov    ch,0x96
  446bba:	cmp    ecx,esp
  446bbc:	cwde   
  446bbd:	pop    ecx
  446bbe:	fmul   st,st(1)
  446bc0:	or     BYTE PTR [ebx+0x263adf31],al
  446bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446bc7:	mov    ah,0xef
  446bc9:	add    eax,0x107ed862
  446bce:	nop
  446bcf:	jp     0x446baf
  446bd1:	add    eax,0x1444a1ee
  446bd6:	icebp  
  446bd7:	and    BYTE PTR ds:0x89cf7fb8,dh
  446bdd:	sbb    esi,DWORD PTR [eax-0x77]
  446be0:	sub    al,0x7a
  446be2:	sbb    al,0x82
  446be4:	(bad)  
  446be5:	bound  ecx,QWORD PTR [ecx-0x2b]
  446be8:	jecxz  0x446c50
  446bea:	sbb    DWORD PTR [ebx],edi
  446bec:	adc    eax,0x4327b661
  446bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446bf2:	ja     0x446c1f
  446bf4:	jg     0x446c53
  446bf6:	mov    cl,BYTE PTR [ebx+0x77]
  446bf9:	std    
  446bfa:	fs pop ss
  446bfc:	cdq    
  446bfd:	outs   dx,DWORD PTR ds:[esi]
  446bfe:	jae    0x446c21
  446c00:	xor    dh,BYTE PTR [ebx+ebx*1]
  446c03:	push   0x5907d08a
  446c08:	ins    DWORD PTR es:[edi],dx
  446c09:	outs   dx,BYTE PTR ds:[esi]
  446c0a:	arpl   WORD PTR [eax+0x35],sp
  446c0d:	cmp    dl,BYTE PTR [ebx+0x3a72c2fe]
  446c13:	pop    esi
  446c14:	jae    0x446c3b
  446c16:	je     0x446c3f
  446c18:	mov    dl,0x0
  446c1a:	xor    BYTE PTR [ebx],dl
  446c1c:	dec    edx
  446c1d:	fs in  eax,0x56
  446c20:	(bad)  
  446c21:	fild   QWORD PTR [ecx]
  446c23:	push   esp
  446c24:	inc    esi
  446c25:	jae    0x446bc2
  446c27:	stos   DWORD PTR es:[edi],eax
  446c28:	push   ds
  446c29:	mov    dh,0xd8
  446c2b:	xor    esp,esi
  446c2d:	jl     0x446c26
  446c2f:	mov    ?,WORD PTR [eax-0x59a49692]
  446c35:	imul   eax,DWORD PTR [edx+0x6c569fb6],0x9c9eb425
  446c3f:	stos   BYTE PTR es:[edi],al
  446c40:	out    0x78,eax
  446c42:	hlt    
  446c43:	pop    ss
  446c44:	xor    dl,BYTE PTR [esi]
  446c46:	daa    
  446c47:	iret   
  446c48:	mov    esi,0x8be37833
  446c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446c4e:	enter  0xe384,0xf5
  446c52:	enter  0x35e0,0x23
  446c56:	push   ecx
  446c57:	cmp    BYTE PTR [ecx+0xcd55fe7],bl
  446c5d:	ss pop es
  446c5f:	dec    ebp
  446c60:	jb     0x446ce1
  446c62:	std    
  446c63:	fld    TBYTE PTR [esi+0x53]
  446c66:	cli    
  446c67:	lods   eax,DWORD PTR ds:[esi]
  446c68:	shl    BYTE PTR [edx+0x24],cl
  446c6b:	and    esi,DWORD PTR [edx]
  446c6d:	js     0x446c84
  446c6f:	dec    ecx
  446c70:	fnsave [eax+0x2c]
  446c73:	popf   
  446c74:	fadd   st(5),st
  446c76:	clc    
  446c77:	jmp    0x3172:0x5476fdc0
  446c7e:	sbb    esi,ebp
  446c80:	cmp    DWORD PTR [eax],eax
  446c82:	cmp    dh,BYTE PTR [ebp-0x390b8815]
  446c88:	aam    0x97
  446c8a:	mov    bl,0x53
  446c8c:	adc    DWORD PTR [esi+0x1c8c2c6e],ecx
  446c92:	cmp    DWORD PTR [eax+eax*8],esp
  446c95:	pop    ebx
  446c96:	mov    ?,WORD PTR [eax]
  446c98:	retf   
  446c99:	sub    eax,0x6f8af394
  446c9e:	jp     0x446ce1
  446ca0:	cdq    
  446ca1:	jb     0x446c93
  446ca3:	imul   esi,DWORD PTR [edi-0x57718ce],0x69
  446caa:	push   ss
  446cab:	dec    esp
  446cac:	adc    bh,BYTE PTR [esi]
  446cae:	mov    esp,0x25fdf1a5
  446cb3:	jmp    0x9624826b
  446cb8:	mov    al,ds:0xc8ec43b4
  446cbd:	in     al,0x31
  446cbf:	add    al,0x87
  446cc1:	pop    ebp
  446cc2:	into   
  446cc3:	jae    0x446cf3
  446cc5:	loop   0x446d2c
  446cc7:	and    DWORD PTR [edi+0x53],ebp
  446cca:	pop    edi
  446ccb:	mul    DWORD PTR [eax+0x4b2e225c]
  446cd1:	mov    al,ds:0x8a3d2783
  446cd6:	loop   0x446caf
  446cd8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446cda:	jp     0x446d2e
  446cdc:	pushf  
  446cdd:	pop    edx
  446cde:	sar    DWORD PTR ds:0xb7c0f3e0,1
  446ce4:	cld    
  446ce5:	push   edx
  446ce6:	icebp  
  446ce7:	xor    ebx,edi
  446ce9:	push   ecx
  446cea:	pop    edi
  446ceb:	(bad)  
  446cec:	sbb    al,0xf3
  446cee:	dec    ebp
  446cef:	ror    DWORD PTR [edi-0x55],0xe6
  446cf3:	pop    edx
  446cf4:	dec    eax
  446cf5:	add    al,0x41
  446cf7:	sub    bl,BYTE PTR [ebx]
  446cf9:	adc    dh,BYTE PTR [esi+edi*4-0x4b]
  446cfd:	mov    WORD PTR ds:0x4b73f4f,?
  446d03:	pop    es
  446d04:	pop    DWORD PTR [eax+ebp*4-0x70f5710d]
  446d0b:	fisub  DWORD PTR [esi-0x67728043]
  446d11:	repnz aas 
  446d13:	mov    ah,0xb6
  446d15:	sub    DWORD PTR [ecx-0x74],ecx
  446d18:	xchg   esp,eax
  446d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446d1a:	jecxz  0x446ca2
  446d1c:	cdq    
  446d1d:	adc    bh,BYTE PTR [ecx]
  446d1f:	jg     0x446d06
  446d21:	xchg   ebx,eax
  446d22:	or     al,0xa7
  446d24:	cwde   
  446d25:	ror    bl,1
  446d27:	dec    eax
  446d28:	rol    dh,1
  446d2a:	sbb    DWORD PTR [ecx-0x17c0ec56],eax
  446d30:	ds data16 jbe 0x446cda
  446d34:	cmp    dh,BYTE PTR [eax-0x65]
  446d37:	jae    0x446d19
  446d39:	pop    ebx
  446d3a:	dec    esp
  446d3b:	in     eax,0x52
  446d3d:	repnz lods al,BYTE PTR ds:[esi]
  446d3f:	push   es
  446d40:	jbe    0x446cfa
  446d42:	xlat   BYTE PTR ds:[ebx]
  446d43:	pop    ss
  446d44:	mov    es,WORD PTR [edi+0x23]
  446d47:	sub    eax,DWORD PTR [edi]
  446d49:	je     0x446cf9
  446d4b:	xor    al,0xde
  446d4d:	in     al,dx
  446d4e:	sub    BYTE PTR [edi+0x6c],0x8f
  446d52:	inc    edx
  446d53:	xchg   dl,bh
  446d55:	fimul  WORD PTR [edi+0x59]
  446d58:	hlt    
  446d59:	or     edx,DWORD PTR fs:[esi-0x29976f3f]
  446d60:	dec    ecx
  446d61:	mov    WORD PTR [ecx-0x3e],?
  446d64:	xlat   BYTE PTR ds:[ebx]
  446d65:	and    eax,0xecf619b3
  446d6a:	stc    
  446d6b:	inc    ecx
  446d6c:	clc    
  446d6d:	pop    ecx
  446d6e:	aas    
  446d6f:	and    edi,DWORD PTR ds:0x6af5880b
  446d75:	pop    edi
  446d76:	mov    eax,0x64f0bc15
  446d7b:	retf   
  446d7c:	(bad)  
  446d7d:	mov    ds:0x340a508f,eax
  446d82:	sub    eax,0x37bcaba9
  446d87:	xchg   ebx,eax
  446d88:	lods   eax,DWORD PTR ds:[esi]
  446d89:	pop    ebx
  446d8a:	bound  ebp,QWORD PTR [eax+0x42]
  446d8d:	dec    esp
  446d8e:	mov    esp,0x6820591f
  446d93:	scas   eax,DWORD PTR es:[edi]
  446d94:	imul   ecx,DWORD PTR [esi+0x212bad03],0x778d4a00
  446d9e:	mov    ah,BYTE PTR [eax]
  446da0:	jge    0x446da3
  446da2:	pushf  
  446da3:	loop   0x446d86
  446da5:	imul   esp,DWORD PTR [edx+ecx*8+0x67],0xfffffff1
  446daa:	pop    es
  446dab:	out    0x2,eax
  446dad:	add    edi,DWORD PTR [eax]
  446daf:	or     al,0x3f
  446db1:	mov    bh,0xaf
  446db3:	daa    
  446db4:	dec    ecx
  446db5:	pop    es
  446db6:	fild   WORD PTR [ebp+0x610c6a50]
  446dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446dbd:	mov    BYTE PTR ds:0xae68622e,al
  446dc3:	adc    DWORD PTR [ecx+0x6e05691d],esi
  446dc9:	cmp    dh,BYTE PTR [esi-0x30]
  446dcc:	loop   0x446df0
  446dce:	push   ecx
  446dcf:	(bad)  
  446dd0:	pop    esp
  446dd1:	mov    dh,al
  446dd3:	xor    DWORD PTR [eax],edi
  446dd5:	dec    edi
  446dd6:	mov    eax,ds:0xa5939770
  446ddb:	jb     0x446e0a
  446ddd:	sub    ah,dh
  446ddf:	jbe    0x446e25
  446de1:	pop    ecx
  446de2:	loop   0x446e0c
  446de4:	rcl    DWORD PTR [ebx-0x5c],0x34
  446de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446de9:	scas   al,BYTE PTR es:[edi]
  446dea:	sub    DWORD PTR [esi+0x7abcf83d],0x6f
  446df1:	inc    ecx
  446df2:	add    eax,0xdaa9b7fc
  446df7:	(bad)  
  446df8:	xor    cl,bl
  446dfa:	pop    edx
  446dfb:	jne    0x446dc2
  446dfd:	or     edi,edx
  446dff:	add    eax,0x1ecbd107
  446e04:	sub    ebp,DWORD PTR [eax]
  446e06:	int    0x30
  446e08:	jno    0x446e64
  446e0a:	adc    al,0xe3
  446e0c:	addr16 jo 0x446dad
  446e0f:	xor    BYTE PTR [eax+0x5a],bh
  446e12:	repz jne 0x446e08
  446e15:	hlt    
  446e16:	mov    bl,0xdf
  446e18:	fwait
  446e19:	pop    esp
  446e1a:	or     bl,BYTE PTR [ebx-0x16]
  446e1d:	adc    eax,DWORD PTR [edx-0x5a430e00]
  446e23:	or     eax,0xa8c3c84b
  446e28:	and    DWORD PTR [ebp-0x7bb47e0f],edx
  446e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446e2f:	push   ds
  446e30:	push   cs
  446e31:	and    al,0xeb
  446e33:	and    eax,0x654b29ba
  446e38:	pop    ebx
  446e39:	rcr    BYTE PTR [ecx+0x493db8ff],1
  446e3f:	sbb    BYTE PTR [esi],ah
  446e41:	(bad)  
  446e42:	mov    bh,0x20
  446e44:	hlt    
  446e45:	and    BYTE PTR [edx-0xf0e8de6],bh
  446e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446e4c:	aaa    
  446e4d:	and    BYTE PTR [ebp-0xc0ade70],ch
  446e53:	adc    ebp,0xffffffb0
  446e56:	jo     0x446e7c
  446e58:	xor    DWORD PTR [ebp+0x74],esp
  446e5b:	(bad)  
  446e5c:	add    ebp,ebx
  446e5e:	dec    DWORD PTR [ebx-0x17]
  446e61:	mov    eax,ss
  446e63:	outs   dx,DWORD PTR ds:[esi]
  446e64:	out    0x8b,eax
  446e66:	jmp    0x527ca538
  446e6b:	popf   
  446e6c:	or     edx,DWORD PTR [edi+0x29635fde]
  446e72:	fwait
  446e73:	xchg   edi,eax
  446e74:	jmp    0xd89f:0xf48cae89
  446e7b:	je     0x446ebd
  446e7d:	mov    esp,0x7cff60cd
  446e82:	xor    al,0x63
  446e84:	in     eax,0x69
  446e86:	or     BYTE PTR [esi],dl
  446e88:	lea    edi,ds:0x5e3910f
  446e8e:	xchg   BYTE PTR [ebx-0x10f277a],bh
  446e94:	xchg   ebp,eax
  446e95:	jns    0x446ed4
  446e97:	jbe    0x446ec2
  446e99:	cmc    
  446e9a:	out    0xef,al
  446e9c:	mov    ds:0x9a5cac63,eax
  446ea1:	mov    ebp,DWORD PTR [eax+0x13]
  446ea4:	not    ch
  446ea6:	sub    ebp,DWORD PTR [ebx+0x6cfe2d33]
  446eac:	mov    al,0x21
  446eae:	or     bh,BYTE PTR [ecx]
  446eb0:	fist   DWORD PTR [ebp+ebx*4+0x5d10d067]
  446eb7:	sar    DWORD PTR [esp+esi*1+0x1373fa43],cl
  446ebe:	mov    bh,0xd8
  446ec1:	loop   0x446f18
  446ec3:	xor    al,0x64
  446ec5:	adc    al,0x3d
  446ec7:	jo     0x446e94
  446ec9:	jnp    0x446ed1
  446ecb:	loop   0x446e4f
  446ecd:	fisttp DWORD PTR [edi+0x38]
  446ed0:	call   0xb2667a69
  446ed5:	ins    BYTE PTR es:[edi],dx
  446ed6:	pop    esp
  446ed7:	or     cl,cl
  446ed9:	lds    ebp,FWORD PTR [ecx-0x27e3833]
  446edf:	jne    0x446ecc
  446ee1:	sbb    BYTE PTR ds:0x548f7a79,ah
  446ee7:	ret    0xf214
  446eea:	mov    esi,0x743b8098
  446eef:	dec    eax
  446ef0:	adc    DWORD PTR [eax+0x2fc27d36],edx
  446ef6:	mov    ecx,DWORD PTR [edx+0x1b]
  446ef9:	lock in al,0xfa
  446efc:	adc    dh,bh
  446efe:	stos   BYTE PTR es:[edi],al
  446eff:	outs   dx,DWORD PTR ds:[esi]
  446f00:	pop    ebp
  446f01:	xor    cl,bl
  446f03:	scas   al,BYTE PTR es:[edi]
  446f04:	jmp    0x446ee2
  446f06:	cmp    BYTE PTR [ecx+0x23ca68b0],ch
  446f0c:	or     eax,0xa65afd8a
  446f11:	gs jns 0x446f0a
  446f14:	ja     0x446f2f
  446f16:	int    0xf5
  446f18:	inc    edx
  446f19:	int    0x69
  446f1b:	aam    0xa7
  446f1d:	dec    esp
  446f1e:	jmp    edx
  446f20:	(bad)
  446f24:	loop   0x446f16
  446f26:	xor    BYTE PTR [esi],0xb0
  446f29:	xor    ah,dh
  446f2b:	cmp    eax,0x2e03af8c
  446f30:	jae    0x446f54
  446f32:	stos   BYTE PTR es:[edi],al
  446f33:	mov    ds:0xa91aca38,eax
  446f38:	jmp    0x5053:0x9201e0f2
  446f3f:	xor    BYTE PTR [ebp+0x27],ch
  446f42:	pusha  
  446f43:	mov    WORD PTR [edi+0x6d],es
  446f46:	adc    DWORD PTR [esi],0xc50a86e9
  446f4c:	test   eax,0x850213f7
  446f51:	fnstcw WORD PTR [ebx+0x4e8e7ea8]
  446f57:	xchg   esi,eax
  446f58:	or     dh,BYTE PTR [esi-0x511f253f]
  446f5e:	outs   dx,BYTE PTR ds:[esi]
  446f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446f60:	hlt    
  446f61:	jmp    0x1fcc:0x8a3b11d8
  446f68:	ja     0x446fdd
  446f6a:	daa    
  446f6b:	adc    cl,BYTE PTR [ecx-0x13]
  446f6e:	mov    al,0x3d
  446f70:	adc    DWORD PTR [edi],edi
  446f72:	dec    ebp
  446f73:	jne    0x446fcb
  446f75:	pusha  
  446f76:	rcr    esi,1
  446f78:	cmp    ecx,ebx
  446f7a:	popf   
  446f7b:	pop    esp
  446f7c:	imul   DWORD PTR [edx-0x18f6164f]
  446f82:	jb     0x446f06
  446f84:	jae    0x446f18
  446f86:	lods   al,BYTE PTR ds:[esi]
  446f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446f88:	jo     0x446f65
  446f8a:	mov    ecx,0xfa0670f7
  446f8f:	clc    
  446f90:	leave  
  446f91:	sub    eax,ebp
  446f93:	cli    
  446f94:	mov    esi,0x32e2dc84
  446f99:	or     DWORD PTR [edx-0x74],esp
  446f9c:	jp     0x446f8d
  446f9e:	jno    0x446fc8
  446fa0:	adc    ebx,DWORD PTR [eax+0x61e9d4e9]
  446fa6:	int3   
  446fa7:	inc    ebp
  446fa8:	and    DWORD PTR [esi],ecx
  446faa:	fucom  st(4)
  446fac:	mov    cl,0xbd
  446fae:	popa   
  446faf:	(bad)  
  446fb0:	into   
  446fb1:	fldenv ds:0x5e6c5502
  446fb7:	cwde   
  446fb8:	inc    esp
  446fb9:	mov    al,0x1f
  446fbb:	lahf   
  446fbc:	mov    ?,WORD PTR [edx+0x1663d37]
  446fc2:	call   0x5f4f:0xf1acbe04
  446fc9:	dec    edx
  446fca:	enter  0xa2c6,0x26
  446fce:	cmc    
  446fcf:	inc    ebp
  446fd0:	inc    esi
  446fd1:	pop    ebp
  446fd2:	nop
  446fd3:	int3   
  446fd4:	xlat   BYTE PTR ds:[ebx]
  446fd5:	retf   0xa3e6
  446fd8:	jno    0x44701b
  446fda:	jge    0x44701b
  446fdc:	push   0xf4f05bcb
  446fe1:	sub    ebp,esi
  446fe3:	cmc    
  446fe4:	aas    
  446fe5:	cmp    eax,0x1b269501
  446fea:	test   BYTE PTR [eax+0x7a23f503],dh
  446ff0:	adc    bl,BYTE PTR [eax-0x7d6991ac]
  446ff6:	es adc eax,0x1d417be5
  446ffc:	(bad)  
  446ffd:	push   ebp
  446ffe:	xchg   DWORD PTR [eax-0x1871268e],eax
  447004:	fisubr DWORD PTR [ecx-0x17]
  447007:	(bad)  
  447008:	push   cs
  447009:	icebp  
  44700a:	ret    
  44700b:	push   cs
  44700c:	loop   0x447067
  44700e:	sbb    eax,0x76b0e2eb
  447013:	nop
  447014:	sub    DWORD PTR [edi+edx*1+0x1e],edx
  447018:	ins    BYTE PTR es:[edi],dx
  447019:	js     0x44704c
  44701b:	add    al,0xba
  44701d:	xchg   ecx,eax
  44701e:	loope  0x447046
  447020:	into   
  447021:	mov    eax,0x459ef5d1
  447026:	arpl   WORD PTR [ebx+edi*2-0xf5eb8c0],sp
  44702d:	dec    edx
  44702e:	jns    0x44702c
  447030:	loope  0x446ff0
  447032:	fimul  WORD PTR [eax]
  447034:	mov    BYTE PTR [ebp+eax*1-0x41],ch
  447038:	test   al,0x93
  44703a:	fwait
  44703b:	out    dx,al
  44703c:	sar    DWORD PTR [edx+eax*8-0x5024e1b9],cl
  447043:	mov    dh,0x48
  447045:	push   cs
  447046:	je     0x447037
  447048:	dec    eax
  447049:	jo     0x447079
  44704b:	mov    ds:0xc77a2780,al
  447050:	sub    al,0x11
  447052:	repnz das 
  447054:	fisttp DWORD PTR [ebx+0x58]
  447057:	mov    ebp,0x870d1357
  44705c:	jae    0x4470b6
  44705e:	daa    
  44705f:	dec    ebp
  447060:	mov    esp,0xa8e0720f
  447065:	pop    esp
  447066:	aaa    
  447067:	ret    0x82f0
  44706a:	loope  0x447026
  44706c:	xchg   esp,eax
  44706d:	js     0x44708f
  44706f:	icebp  
  447070:	in     al,0x2f
  447072:	inc    ebp
  447073:	and    al,0x21
  447075:	popa   
  447076:	mov    bh,0x5
  447078:	addr16 into 
  44707a:	fwait
  44707b:	mov    esp,?
  44707d:	jge    0x4470e6
  44707f:	or     DWORD PTR [eax],esi
  447081:	fwait
  447082:	sub    eax,0x100e3c17
  447087:	mov    al,ds:0x5e97954a
  44708c:	or     ebx,esi
  44708e:	fcomp  QWORD PTR [edi]
  447090:	sahf   
  447091:	lock (bad) 
  447093:	fnstcw WORD PTR [edx]
  447095:	dec    ecx
  447096:	stc    
  447097:	sbb    WORD PTR [bp+si+0x1f],0xffce
  44709d:	ds xchg ecx,eax
  44709f:	xchg   BYTE PTR [esi+0xbf12d70],bh
  4470a5:	js     0x4470ad
  4470a7:	jmp    0x447110
  4470a9:	mov    DWORD PTR [ebp-0x13],ebx
  4470ac:	in     al,dx
  4470ad:	and    BYTE PTR ds:0x95cbe160,dh
  4470b3:	lods   eax,DWORD PTR ds:[esi]
  4470b4:	or     al,0xcc
  4470b6:	mov    ch,BYTE PTR [ebx-0x1e]
  4470b9:	or     eax,0x75889082
  4470be:	lock cmc 
  4470c0:	call   edi
  4470c2:	mov    dl,0x99
  4470c4:	(bad)  
  4470c5:	loope  0x44706c
  4470c7:	mov    al,ds:0x171a7148
  4470cc:	push   edi
  4470cd:	ror    BYTE PTR [esp+eax*8-0x527b41f5],1
  4470d4:	icebp  
  4470d5:	test   al,0x64
  4470d7:	push   ss
  4470d8:	dec    ebx
  4470d9:	into   
  4470da:	aam    0x7e
  4470dc:	popf   
  4470dd:	test   ah,al
  4470df:	cmp    eax,0x6ae3743e
  4470e4:	enter  0x7133,0x49
  4470e8:	rcl    DWORD PTR [edx-0x6648b865],1
  4470ee:	jp     0x447123
  4470f0:	fadd   QWORD PTR [eax+eax*4-0x58]
  4470f4:	mov    bh,0x42
  4470f6:	cmc    
  4470f7:	jns    0x4470ea
  4470f9:	xchg   ecx,eax
  4470fa:	(bad)  
  4470fb:	aam    0x9
  4470fd:	stos   BYTE PTR es:[edi],al
  4470fe:	adc    bh,ch
  447100:	imul   esp,DWORD PTR [edx],0x884c7f27
  447106:	mov    dl,bh
  447108:	dec    ecx
  447109:	scas   al,BYTE PTR es:[edi]
  44710a:	lea    edx,[ebx-0x77ac15b5]
  447110:	cdq    
  447111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447112:	outs   dx,BYTE PTR ds:[esi]
  447113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447114:	rcl    BYTE PTR [ebx+ecx*1],cl
  447117:	test   al,0x81
  447119:	and    eax,0x9e3569a
  44711e:	jg     0x44718b
  447120:	in     eax,0x77
  447122:	jl     0x4470ca
  447124:	in     al,dx
  447125:	xchg   DWORD PTR [ecx],ebx
  447127:	mov    ebx,0xa612583c
  44712c:	popf   
  44712d:	cmp    bh,dl
  44712f:	mov    eax,ds:0x3ffc5e34
  447134:	mov    bh,0x6e
  447136:	push   ebp
  447137:	icebp  
  447138:	lds    esp,FWORD PTR [edx-0x9]
  44713b:	lahf   
  44713c:	xchg   esi,eax
  44713d:	sar    ecx,0x29
  447140:	std    
  447141:	popf   
  447142:	inc    edi
  447143:	or     bl,BYTE PTR [ebx+0x40]
  447146:	dec    esp
  447147:	mov    eax,ds:0xf81786bf
  44714c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44714d:	clc    
  44714e:	lock inc ebx
  447150:	or     ah,0x83
  447153:	inc    ebp
  447154:	jg     0x44719c
  447156:	sbb    bh,BYTE PTR [edx+0x1cbe66b3]
  44715c:	jno    0x4471b9
  44715e:	sbb    al,0xe8
  447160:	pop    ebx
  447161:	fs daa 
  447163:	jge    0x44719f
  447165:	cmp    al,0xb9
  447167:	pop    edi
  447168:	ret    
  447169:	leave  
  44716a:	shr    BYTE PTR [edi+0x75],cl
  44716d:	loope  0x447189
  44716f:	repz aam 0x3a
  447172:	jbe    0x4470ff
  447174:	stos   BYTE PTR es:[edi],al
  447175:	enter  0x8c3,0x69
  447179:	adc    DWORD PTR [edi-0x719957c5],0xffffff83
  447180:	aad    0x2c
  447182:	rol    BYTE PTR [esi+0x5b1820a4],cl
  447188:	adc    eax,0xf0e4f3e0
  44718d:	cs repz xchg ebx,eax
  447190:	ror    DWORD PTR [ebx-0x48],1
  447193:	(bad)  
  447194:	loope  0x44712c
  447196:	cmp    cl,dh
  447198:	jnp    0x447214
  44719a:	enter  0x4229,0xf0
  44719e:	lea    esi,[eax]
  4471a0:	inc    edi
  4471a1:	cmc    
  4471a2:	jnp    0x4471b7
  4471a4:	mov    DWORD PTR [ebx],eax
  4471a6:	cmp    DWORD PTR [ebp-0x7e66dd89],0xffffff81
  4471ad:	xor    eax,0xeda9b0d9
  4471b2:	pop    edi
  4471b3:	jne    0x4471df
  4471b5:	dec    edi
  4471b6:	arpl   WORD PTR [eax+0x3dd6bdda],dx
  4471bc:	ss loop 0x4471db
  4471bf:	mov    cs,WORD PTR [edx-0x10]
  4471c2:	cmp    BYTE PTR [eax+0x1e],ah
  4471c5:	push   ecx
  4471c6:	mov    dl,0xdb
  4471c8:	fs xchg edx,eax
  4471ca:	cwde   
  4471cb:	mov    dh,0x67
  4471cd:	push   ss
  4471ce:	icebp  
  4471cf:	xor    BYTE PTR [edi+esi*1-0x42],cl
  4471d3:	mov    ds:0xf286ab28,eax
  4471d8:	cmp    eax,0x32848cc5
  4471dd:	ret    0x31d6
  4471e0:	jl     0x44722c
  4471e2:	jns    0x4471a5
  4471e4:	jo     0x447232
  4471e6:	fisttp WORD PTR [esi+0x22]
  4471e9:	fild   DWORD PTR [edi+0x63]
  4471ec:	cmp    BYTE PTR [edi+0x35a1a816],bh
  4471f2:	mov    DWORD PTR [eax],eax
  4471f4:	pusha  
  4471f5:	in     eax,dx
  4471f6:	mov    ds:0x5add6941,eax
  4471fb:	inc    eax
  4471fc:	push   ebp
  4471fd:	push   0x1d6bfea6
  447202:	xchg   esp,eax
  447203:	pop    ecx
  447204:	jmp    0x340:0x1436366
  44720b:	add    bh,ch
  44720d:	pop    ecx
  44720e:	aam    0x16
  447210:	js     0x4471a7
  447212:	ins    DWORD PTR es:[edi],dx
  447213:	stos   DWORD PTR es:[edi],eax
  447214:	xor    DWORD PTR [esi+esi*2+0x50],edx
  447218:	push   0x7f
  44721a:	loope  0x447217
  44721c:	mov    ds:0x8ef15670,al
  447221:	mov    edi,0xf9f06f4e
  447226:	jg     0x44720b
  447228:	leave  
  447229:	mov    dh,BYTE PTR [eax]
  44722b:	xchg   edi,eax
  44722c:	gs fcmove st,st(7)
  44722f:	(bad)  
  447230:	mov    ds:0x73d3b00a,al
  447235:	(bad)  
  447237:	pop    ss
  447238:	mov    WORD PTR [ecx-0x5],es
  44723b:	sbb    eax,0x8d65788f
  447240:	push   esi
  447241:	push   edi
  447242:	cmp    BYTE PTR [ebx],al
  447244:	sbb    WORD PTR [ebp+eiz*4-0x6d],si
  447249:	jge    0x4471dc
  44724b:	mov    esp,edi
  44724d:	add    eax,DWORD PTR [ebx]
  44724f:	lods   al,BYTE PTR ds:[esi]
  447250:	add    esi,ebp
  447252:	sbb    bh,ah
  447254:	push   esp
  447255:	add    bl,al
  447257:	scas   eax,DWORD PTR es:[edi]
  447258:	sub    BYTE PTR [ebp+0x15],bh
  44725b:	ins    BYTE PTR es:[edi],dx
  44725c:	lahf   
  44725d:	ret    
  44725e:	mov    BYTE PTR [ebp-0x5f],al
  447261:	ror    DWORD PTR [ebx+0x4d],0xb6
  447265:	das    
  447266:	mov    esi,0xeedfa9f9
  44726b:	add    al,0xba
  44726d:	or     dh,BYTE PTR [edi+0x79]
  447270:	lahf   
  447271:	test   al,0xf1
  447273:	mov    edi,0x8f7ad331
  447278:	dec    edi
  447279:	xor    BYTE PTR [eax+0x279c942],dl
  44727f:	jb     0x44720b
  447281:	sub    eax,0x74dc14ff
  447286:	cmp    al,0xc2
  447288:	jne    0x447231
  44728a:	xor    BYTE PTR [ecx],ch
  44728c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44728d:	in     al,0xad
  44728f:	sbb    BYTE PTR [ebx+ebp*4-0x6],0x71
  447294:	mov    cl,0x8
  447296:	xor    edi,DWORD PTR [ecx+0x60292b58]
  44729c:	div    cl
  44729e:	xchg   esp,eax
  44729f:	pop    es
  4472a0:	ja     0x447242
  4472a2:	mov    eax,ds:0x13446573
  4472a7:	mov    ds,WORD PTR [eax+0x426d1f33]
  4472ad:	rol    BYTE PTR [esi],0xf
  4472b0:	or     dh,BYTE PTR cs:[edx]
  4472b3:	adc    al,0x44
  4472b5:	hlt    
  4472b6:	dec    esi
  4472b7:	mov    bl,0x24
  4472b9:	inc    esp
  4472ba:	and    eax,DWORD PTR cs:[ebp+0x7c]
  4472be:	adc    dh,bl
  4472c0:	ss jmp 0xface:0xe2221aee
  4472c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4472c9:	sub    DWORD PTR [edi],0xb945b9f5
  4472cf:	fdiv   QWORD PTR [esi+0x64]
  4472d2:	daa    
  4472d3:	cmp    edx,eax
  4472d5:	jae    0x447310
  4472d7:	push   ebp
  4472d8:	fsubp  st(6),st
  4472da:	sbb    BYTE PTR ds:0x423edcf3,bl
  4472e0:	mov    ch,0x32
  4472e2:	add    al,0x70
  4472e4:	jae    0x44728b
  4472e6:	stos   BYTE PTR es:[edi],al
  4472e7:	dec    edi
  4472e8:	(bad)  
  4472e9:	lock inc eax
  4472eb:	retf   0xbafe
  4472ee:	xchg   ebx,eax
  4472ef:	loopne 0x44731c
  4472f1:	ds test eax,0xbb03dffe
  4472f7:	mov    eax,0x1a0e4eb2
  4472fc:	scas   eax,DWORD PTR es:[edi]
  4472fd:	adc    ch,ch
  4472ff:	jecxz  0x447346
  447301:	in     eax,0x97
  447303:	pop    ebx
  447304:	and    ah,dl
  447306:	or     BYTE PTR [ecx+0x76],bh
  447309:	inc    esi
  44730a:	dec    edi
  44730b:	(bad)
  44730e:	cmp    ch,al
  447310:	cmc    
  447311:	xchg   edx,eax
  447312:	mov    ch,0xe
  447314:	sbb    al,0x70
  447316:	xlat   BYTE PTR ds:[ebx]
  447317:	repz cmp edi,edx
  44731a:	pusha  
  44731b:	pop    edx
  44731c:	adc    al,0x50
  44731e:	pop    ecx
  44731f:	and    eax,0xb43c7777
  447324:	add    eax,0xbdb3c3bb
  447329:	sub    al,BYTE PTR [ecx-0x7d4f6787]
  44732f:	jmp    0x75abae62
  447334:	in     eax,dx
  447335:	inc    edx
  447336:	popf   
  447337:	cmp    eax,0x692938e5
  44733c:	mov    eax,ds:0x2401179b
  447341:	loop   0x44734b
  447343:	arpl   WORD PTR [eax],dx
  447345:	xchg   edx,ebp
  447347:	mov    ch,0x9e
  447349:	cmp    DWORD PTR [edi-0x7a],0x4
  44734d:	inc    esi
  44734e:	and    BYTE PTR [eax],ch
  447350:	sub    BYTE PTR [esi+ebx*4],0x24
  447354:	loop   0x4473aa
  447356:	mov    al,BYTE PTR [eax-0x7eade49c]
  44735c:	jb     0x4473a2
  44735e:	cmp    bl,BYTE PTR [ebx-0x2e72240a]
  447364:	mov    ds:0x88a579ef,eax
  447369:	and    al,0x63
  44736b:	sar    DWORD PTR [ebx+ebx*4-0x5],0x3d
  447370:	inc    eax
  447371:	xchg   ecx,eax
  447372:	int3   
  447373:	inc    esi
  447374:	jecxz  0x447318
  447376:	repz pop edx
  447378:	repz mov cl,0x1c
  44737b:	adc    ah,BYTE PTR [ebx-0x377f0874]
  447381:	dec    ebx
  447382:	dec    eax
  447383:	popa   
  447384:	pusha  
  447385:	pushf  
  447386:	ja     0x44730d
  447388:	xchg   ecx,eax
  447389:	xlat   BYTE PTR ds:[ebx]
  44738a:	aad    0x6a
  44738c:	fld    st(7)
  44738e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44738f:	icebp  
  447390:	dec    eax
  447391:	mov    esp,0x2ef912a2
  447396:	mov    ds:0x19655673,al
  44739b:	mov    ds:0x3221f6bc,al
  4473a0:	jns    0x4473cd
  4473a2:	fsub   st(5),st
  4473a4:	int3   
  4473a5:	les    ebp,FWORD PTR [eax+0x6c]
  4473a8:	and    esp,DWORD PTR [edi-0x23]
  4473ab:	mov    eax,ds:0x745e0c8b
  4473b0:	icebp  
  4473b1:	add    eax,0x3adeff7f
  4473b6:	scas   al,BYTE PTR es:[edi]
  4473b7:	cs enter 0x9b30,0x80
  4473bc:	sbb    esp,esp
  4473be:	mov    eax,DWORD PTR [edi]
  4473c0:	push   edx
  4473c1:	loop   0x44742d
  4473c3:	scas   al,BYTE PTR es:[edi]
  4473c4:	enter  0xe978,0xc0
  4473c8:	std    
  4473c9:	mov    ah,0xab
  4473cb:	jecxz  0x447354
  4473cd:	shl    BYTE PTR [ebx+ebx*4],1
  4473d0:	push   ecx
  4473d1:	pop    ds
  4473d2:	pop    ecx
  4473d3:	xchg   esp,eax
  4473d4:	xchg   edx,eax
  4473d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4473d6:	(bad)  
  4473d7:	scas   al,BYTE PTR es:[edi]
  4473d8:	mov    esi,0x8bfa0390
  4473dd:	push   ds
  4473de:	js     0x4473ee
  4473e0:	jmp    0xb641:0xb0ce47b8
  4473e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4473e8:	rol    BYTE PTR [ecx*2+0x2eba05f7],1
  4473ef:	(bad)  
  4473f1:	ret    
  4473f2:	call   0xc0c416f7
  4473f7:	in     eax,dx
  4473f8:	aas    
  4473f9:	(bad)  
  4473fa:	mov    bh,0xcd
  4473fc:	mov    al,bh
  4473fe:	rdtsc  
  447400:	cs adc al,0xe7
  447403:	out    dx,al
  447404:	push   0x9a7d850c
  447409:	ret    
  44740a:	jp     0x4473a6
  44740c:	sub    BYTE PTR [edx],ch
  44740e:	rcr    BYTE PTR [edx],cl
  447410:	rcl    DWORD PTR [ebp+0xdd8908a],0x2c
  447417:	lods   al,BYTE PTR ds:[esi]
  447418:	icebp  
  447419:	dec    edi
  44741a:	out    0x5b,al
  44741c:	cmc    
  44741d:	add    DWORD PTR [ebp+0x7e8e9afd],0x79
  447424:	in     al,0x2b
  447426:	scas   al,BYTE PTR es:[edi]
  447427:	jp     0x4473bd
  447429:	pushf  
  44742a:	mov    eax,0xf0e1ecf9
  44742f:	enter  0xc037,0x44
  447433:	bound  eax,QWORD PTR [ecx-0x503270ee]
  447439:	and    eax,0x21290fa1
  44743e:	push   esp
  44743f:	mov    bl,0x1a
  447441:	ret    0x11ed
  447444:	pop    ds
  447445:	cmc    
  447446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447447:	fst    QWORD PTR [esi+ebp*8]
  44744a:	add    bh,ah
  44744c:	mov    bh,0x51
  44744e:	(bad)  
  44744f:	mov    al,0x5a
  447451:	mov    ch,0x27
  447453:	lock repz ret 
  447456:	mov    edx,0xb573e897
  44745b:	cli    
  44745c:	push   ds
  44745d:	gs in  eax,0x7
  447460:	cmp    edi,DWORD PTR [edi+0x2501b1cf]
  447466:	xchg   ebp,eax
  447467:	mov    esi,0xfafb57ff
  44746c:	fimul  DWORD PTR [edi]
  44746e:	retf   
  44746f:	(bad)  
  447470:	push   esp
  447471:	sub    ecx,ebx
  447473:	js     0x447469
  447475:	daa    
  447476:	push   edi
  447477:	call   0x22db6ada
  44747c:	mov    esi,0x9be7ee2a
  447481:	sbb    bh,BYTE PTR [eax]
  447483:	and    al,0x82
  447485:	mov    esi,0xa2d6aa72
  44748a:	in     al,0xbc
  44748c:	inc    edx
  44748d:	pusha  
  44748e:	lock dec ebp
  447490:	inc    eax
  447491:	jle    0x44746f
  447493:	dec    ecx
  447494:	scas   al,BYTE PTR es:[edi]
  447495:	mov    ds:0xd8693541,al
  44749a:	enter  0x1bb8,0x82
  44749e:	ret    
  44749f:	rcl    BYTE PTR [edi],0xaf
  4474a2:	xchg   ebp,eax
  4474a3:	pop    eax
  4474a4:	inc    ebx
  4474a5:	adc    al,0x5d
  4474a7:	jecxz  0x4474c6
  4474a9:	call   0xc2ed3f4b
  4474ae:	in     al,dx
  4474af:	neg    DWORD PTR [eax+0x78628329]
  4474b5:	ror    DWORD PTR [ecx],0xc0
  4474b8:	add    ah,BYTE PTR [esi+0x2a]
  4474bb:	leave  
  4474bc:	mov    cl,0x18
  4474be:	jecxz  0x4474b2
  4474c0:	mov    ebx,0x4e72e901
  4474c5:	inc    ebx
  4474c6:	lds    edi,FWORD PTR [edi]
  4474c8:	sti    
  4474c9:	xchg   esi,eax
  4474ca:	fwait
  4474cb:	out    0x9e,al
  4474cd:	inc    edi
  4474ce:	sub    cl,BYTE PTR ds:0x10a97f18
  4474d4:	adc    edi,DWORD PTR [ebx]
  4474d6:	sub    BYTE PTR [edx+0x2ea73fc2],0xaf
  4474dd:	push   es
  4474de:	pop    eax
  4474df:	sub    BYTE PTR [ecx],dh
  4474e1:	push   es
  4474e2:	popa   
  4474e3:	mov    esp,esi
  4474e5:	jge    0x4474dd
  4474e7:	out    0x45,al
  4474e9:	fcompp 
  4474eb:	sahf   
  4474ec:	dec    ebp
  4474ed:	xchg   edi,eax
  4474ee:	iret   
  4474ef:	xchg   DWORD PTR [esi],ebx
  4474f1:	xor    ecx,DWORD PTR [ebx-0x4a]
  4474f4:	xchg   ecx,eax
  4474f5:	loope  0x44755f
  4474f7:	inc    ebx
  4474f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4474f9:	pop    ds
  4474fa:	loopne 0x447528
  4474fc:	popf   
  4474fd:	push   ecx
  4474fe:	xchg   BYTE PTR [edi+0x33c89c08],al
  447504:	push   cs
  447505:	js     0x447532
  447507:	loop   0x4474f6
  447509:	shl    DWORD PTR [edi+0x61],0x7b
  44750d:	inc    edi
  44750e:	ss xchg esp,eax
  447510:	shl    BYTE PTR [esi-0x2f],cl
  447513:	push   edi
  447514:	add    al,al
  447516:	ins    BYTE PTR es:[edi],dx
  447517:	pop    edx
  447518:	aam    0x0
  44751a:	(bad)  
  44751b:	xchg   edx,eax
  44751c:	xor    ah,BYTE PTR [eax]
  44751e:	xor    DWORD PTR [edi],eax
  447520:	sahf   
  447521:	test   ch,cl
  447523:	(bad)  
  447524:	sub    eax,0x150bb6e5
  447529:	cwde   
  44752a:	sbb    al,al
  44752c:	into   
  44752d:	popa   
  44752e:	call   0x9522:0xec0a034b
  447535:	jnp    0x447595
  447537:	and    BYTE PTR [ebx+eiz*1+0x3cb76cf1],cl
  44753e:	jp     0x44755e
  447540:	fiadd  WORD PTR [esp+edi*1-0xed8557c]
  447547:	or     al,0xb0
  447549:	js     0x447599
  44754b:	pop    es
  44754c:	daa    
  44754d:	lock in al,dx
  44754f:	mov    ecx,0x5082ec67
  447554:	push   ebp
  447555:	imul   ebp,DWORD PTR [ecx-0x6f50ac72],0xffffffa3
  44755c:	cmp    eax,0xb50b6bea
  447561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447562:	pusha  
  447563:	adc    esp,0xffffffa8
  447566:	cmp    cl,bh
  447568:	mov    esp,0xed8b2536
  44756d:	xlat   BYTE PTR ds:[ebx]
  44756e:	pusha  
  44756f:	lods   eax,DWORD PTR ds:[esi]
  447570:	sbb    al,bl
  447572:	or     eax,0xaa6fa5d9
  447577:	add    al,0x80
  447579:	repnz pop eax
  44757b:	fwait
  44757c:	out    0x83,eax
  44757e:	mov    dh,0x9f
  447580:	stos   BYTE PTR es:[edi],al
  447581:	stos   BYTE PTR es:[edi],al
  447582:	push   cs
  447583:	out    0xf3,eax
  447585:	loop   0x447577
  447587:	div    BYTE PTR [eax+0x35]
  44758a:	icebp  
  44758b:	cwde   
  44758c:	test   ch,bl
  44758e:	je     0x447553
  447590:	mov    ebp,0xcad8a798
  447595:	pop    esi
  447596:	pop    eax
  447597:	retf   
  447598:	sar    BYTE PTR [ebx+0x51],0xca
  44759c:	fwait
  44759d:	push   ebx
  44759e:	(bad)  
  44759f:	lahf   
  4475a0:	mov    al,0xd9
  4475a2:	test   DWORD PTR [edx],edx
  4475a4:	seta   BYTE PTR [edx-0x2bcb21cf]
  4475ab:	sub    DWORD PTR [eax],esi
  4475ad:	aaa    
  4475ae:	aad    0x29
  4475b0:	pop    ds
  4475b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4475b2:	cdq    
  4475b3:	fdivr  QWORD PTR [eax*8+0x653b19ef]
  4475ba:	sub    BYTE PTR [ebx+0x4c3cfe59],al
  4475c0:	fwait
  4475c1:	push   edi
  4475c2:	in     al,dx
  4475c3:	dec    edi
  4475c4:	test   eax,0x15396860
  4475c9:	push   0xffffff85
  4475cb:	ja     0x447569
  4475cd:	inc    ebp
  4475ce:	push   ebp
  4475cf:	jae    0x4475fb
  4475d1:	dec    esp
  4475d2:	lea    ecx,[esi]
  4475d4:	jg     0x44756f
  4475d6:	jmp    0x4475a0
  4475d8:	fild   WORD PTR [edi+0x38]
  4475db:	lods   al,BYTE PTR ds:[esi]
  4475dc:	sbb    bl,cl
  4475de:	pusha  
  4475df:	mov    cl,0xbc
  4475e1:	inc    ecx
  4475e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4475e3:	jb     0x447638
  4475e5:	mov    ebp,0x5cb12f16
  4475ea:	aaa    
  4475eb:	cmp    DWORD PTR [edx-0x47a46c4a],edi
  4475f1:	aaa    
  4475f2:	dec    eax
  4475f3:	(bad)  
  4475f4:	push   ebp
  4475f5:	pop    ebp
  4475f6:	cmp    DWORD PTR [edx],edx
  4475f8:	clc    
  4475f9:	cmp    DWORD PTR [eax+0x5c],0xffffff8c
  4475fd:	stos   DWORD PTR es:[edi],eax
  4475fe:	fild   DWORD PTR [edx]
  447600:	sbb    cl,BYTE PTR [eax+ecx*4]
  447603:	dec    edx
  447604:	frstor [ebx+0xa]
  447607:	and    eax,0xdbbe07d5
  44760c:	dec    esp
  44760d:	jge    0x44764a
  44760f:	in     al,dx
  447610:	cli    
  447611:	pop    ebp
  447612:	jmp    0x90a7:0xb2559cca
  447619:	pushf  
  44761a:	adc    ebx,DWORD PTR ds:0x6af54ca6
  447620:	push   edx
  447621:	mov    ebp,0x35b92c1a
  447626:	aad    0x8d
  447628:	in     al,0x21
  44762a:	and    BYTE PTR [esi-0x7],bl
  44762d:	dec    edi
  44762e:	std    
  44762f:	out    0xae,al
  447631:	or     eax,0x9f7d0b99
  447636:	stc    
  447637:	ins    DWORD PTR es:[edi],dx
  447638:	std    
  447639:	loopne 0x447611
  44763b:	or     BYTE PTR [ebx+0x20],dh
  44763e:	fdiv   st(6),st
  447640:	sub    DWORD PTR [eax],eax
  447642:	lods   al,BYTE PTR ds:[esi]
  447643:	mov    cl,0x25
  447645:	push   ss
  447646:	sbb    esi,ecx
  447648:	icebp  
  447649:	(bad)  
  44764a:	loop   0x44762f
  44764c:	clc    
  44764d:	icebp  
  44764e:	ror    DWORD PTR [edx-0x4b],cl
  447651:	push   edx
  447652:	pop    ebp
  447653:	push   ecx
  447654:	mov    dl,0x14
  447656:	nop
  447657:	das    
  447658:	pop    eax
  447659:	sbb    bl,BYTE PTR [ecx+0x1887fcaa]
  44765f:	add    BYTE PTR [eax+0x23],cl
  447662:	ds pop ebp
  447664:	retfw  
  447666:	(bad)  
  447667:	hlt    
  447668:	mov    esp,0xb6ef4294
  44766d:	out    0x49,eax
  44766f:	jae    0x44766e
  447671:	mul    dh
  447673:	xor    eax,0xa5bdcd17
  447678:	std    
  447679:	sub    eax,DWORD PTR ds:0xfd675017
  44767f:	shl    bh,cl
  447681:	inc    esp
  447682:	mov    edi,esp
  447684:	or     eax,0xb2149efb
  447689:	shl    BYTE PTR [ecx],cl
  44768b:	pop    edx
  44768c:	mov    esp,0xe149640f
  447691:	stc    
  447692:	xchg   DWORD PTR [ebx-0x54afa4e9],edi
  447698:	push   edx
  447699:	int3   
  44769a:	inc    esp
  44769b:	mov    ah,0x59
  44769d:	test   BYTE PTR [esi-0x7],cl
  4476a0:	dec    esp
  4476a1:	lahf   
  4476a2:	fidiv  DWORD PTR [eax-0x3fae8b7c]
  4476a8:	pop    es
  4476a9:	jbe    0x4476ec
  4476ab:	mov    bl,0x31
  4476ad:	lea    esi,[edi-0x39bb8bb8]
  4476b3:	gs jae 0x447692
  4476b6:	or     al,al
  4476b8:	xchg   edx,eax
  4476b9:	or     BYTE PTR [esi],ch
  4476bb:	fcmovbe st,st(7)
  4476bd:	xchg   edx,eax
  4476be:	sub    edx,DWORD PTR [edx-0x267bf2c]
  4476c4:	lds    edi,FWORD PTR [edi+0x3d919a16]
  4476ca:	sub    esp,esp
  4476cc:	rcl    BYTE PTR [ebx+esi*2],0xeb
  4476d0:	idiv   BYTE PTR [eax+0x6a0d9b70]
  4476d6:	and    BYTE PTR [edi-0x3fdbff1],dh
  4476dc:	push   eax
  4476dd:	fwait
  4476de:	mov    esp,0x931ed602
  4476e3:	adc    eax,0x9131cd62
  4476e8:	mov    eax,0x981701e6
  4476ed:	mov    eax,ds:0x56ad076
  4476f2:	stc    
  4476f3:	push   ebp
  4476f4:	add    ebp,eax
  4476f6:	push   ecx
  4476f7:	push   ds
  4476f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4476f9:	sbb    BYTE PTR [eax-0x75f103cc],dh
  4476ff:	cdq    
  447700:	push   es
  447701:	into   
  447702:	stos   DWORD PTR es:[edi],eax
  447703:	cmp    BYTE PTR [eax+0x2f],al
  447706:	push   edi
  447707:	shr    DWORD PTR [edx-0x57f13e55],1
  44770d:	dec    edx
  44770e:	push   esi
  44770f:	dec    esi
  447710:	mov    WORD PTR ds:0xa6f76629,gs
  447716:	imul   eax,DWORD PTR [ecx+0x65],0xfffffff0
  44771a:	sbb    al,0x3c
  44771c:	push   0xad3a76fa
  447721:	push   eax
  447722:	test   eax,esi
  447724:	push   es
  447725:	pop    esp
  447726:	ins    DWORD PTR es:[edi],dx
  447727:	out    0x31,eax
  447729:	inc    esp
  44772a:	aad    0x8a
  44772c:	arpl   cx,si
  44772e:	mov    dh,0xe0
  447730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447731:	mov    al,ds:0x29ce26b2
  447736:	rcr    DWORD PTR [edx+0x79a7826d],cl
  44773c:	push   edi
  44773d:	xchg   edi,eax
  44773e:	adc    BYTE PTR [edx+0x1a92412],dh
  447744:	rcr    BYTE PTR [ecx+ebp*1+0x764d09d2],1
  44774b:	iret   
  44774c:	aad    0xa2
  44774e:	pop    es
  44774f:	ds push edx
  447751:	cs (bad) 
  447753:	sti    
  447754:	scas   eax,DWORD PTR es:[edi]
  447755:	aad    0x23
  447757:	dec    esi
  447758:	inc    ebp
  447759:	jno    0x44770e
  44775b:	push   cs
  44775c:	jno    0x447727
  44775e:	rcr    DWORD PTR [edi-0x359eb1ee],cl
  447764:	xor    al,0x4c
  447766:	fwait
  447767:	pop    edi
  447768:	jp     0x447766
  44776a:	sub    edx,DWORD PTR [eax+0x68dbdd5]
  447770:	or     ch,BYTE PTR [di]
  447773:	clc    
  447774:	xor    ecx,DWORD PTR [ebp+0x14]
  447777:	mov    ebx,0x3c75a6a7
  44777c:	mov    ecx,0x8123b69b
  447781:	push   esi
  447782:	adc    dl,BYTE PTR [esi-0x17]
  447785:	jnp    0x4477bf
  447787:	stos   DWORD PTR es:[edi],eax
  447788:	test   eax,0x34540fdc
  44778d:	pusha  
  44778e:	rcr    ch,1
  447790:	cmc    
  447791:	ficomp WORD PTR [ecx-0x79]
  447794:	aas    
  447795:	mov    ds:0x7b9fc757,al
  44779a:	pushf  
  44779b:	and    eax,0x581ec339
  4477a0:	dec    edx
  4477a1:	data16 rol BYTE PTR [ebp+0x23],cl
  4477a5:	addr16 inc ecx
  4477a7:	out    0xbf,al
  4477a9:	imul   edi,DWORD PTR [ecx+0x34],0xffffffb4
  4477ad:	add    esi,0xaad94d05
  4477b3:	in     al,0x7c
  4477b5:	push   edx
  4477b6:	data16 daa 
  4477b8:	cs (bad) 
  4477ba:	jmp    0x26c8d6a4
  4477bf:	xor    eax,esp
  4477c1:	push   esp
  4477c3:	push   ds
  4477c4:	test   eax,0x51ad7def
  4477c9:	loope  0x4477d9
  4477cb:	inc    ebp
  4477cc:	rcr    BYTE PTR [ebx+0x1e],1
  4477cf:	mov    cl,0x4
  4477d1:	mov    ds:0x3b12395a,eax
  4477d6:	scas   al,BYTE PTR es:[edi]
  4477d7:	mov    cl,0xf4
  4477d9:	pop    esp
  4477da:	jmp    0x447846
  4477dc:	clc    
  4477dd:	in     al,dx
  4477de:	push   es
  4477df:	mov    BYTE PTR [esi-0x69712fc5],ah
  4477e5:	cli    
  4477e6:	ror    DWORD PTR [eax],cl
  4477e8:	test   DWORD PTR [ecx+ebp*4-0x3aeaf385],eax
  4477ef:	mov    esp,gs
  4477f1:	cmp    eax,0xcff31f67
  4477f6:	lock popa 
  4477f8:	ss push edi
  4477fa:	inc    esp
  4477fb:	and    ah,BYTE PTR ds:0x24ba93c
  447801:	push   esp
  447802:	and    BYTE PTR [edi-0x54b7c225],bl
  447808:	pop    ebp
  447809:	mov    DWORD PTR [ebx-0x3bd17890],esi
  44780f:	(bad)  
  447810:	lods   al,BYTE PTR ds:[esi]
  447811:	adc    dh,BYTE PTR [bx+di+0xc]
  447815:	jmp    DWORD PTR [ebx+eiz*8+0xe9f7065]
  44781c:	pop    ebx
  44781d:	push   cs
  44781e:	ss data16 jae 0x4477ba
  447822:	mov    esi,ebx
  447824:	sti    
  447825:	shl    BYTE PTR [ebx],0x19
  447828:	call   0xb345b18
  44782d:	jge    0x447854
  44782f:	mov    ah,0xb2
  447831:	add    DWORD PTR [edi+0x5c98f2ca],ebp
  447837:	pop    ebp
  447838:	dec    ebx
  447839:	add    al,0x9d
  44783b:	pop    es
  44783c:	xchg   BYTE PTR [esi+0x72],bl
  44783f:	fucompp 
  447841:	cwde   
  447842:	ss in  al,dx
  447844:	call   0xf9cbcab3
  447849:	dec    esp
  44784a:	fldcw  WORD PTR [esi-0x7cd589e9]
  447850:	and    al,0xcb
  447852:	lods   al,BYTE PTR ds:[esi]
  447853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447854:	jno    0x44784a
  447856:	inc    ebx
  447857:	and    bh,cl
  447859:	call   0x297df7aa
  44785e:	js     0xea04fe67
  447864:	fsubrp st(5),st
  447866:	shl    BYTE PTR [edx+edi*2],1
  447869:	jo     0x447844
  44786b:	(bad)  
  44786c:	hlt    
  44786d:	inc    edx
  44786e:	sub    al,0x76
  447870:	add    BYTE PTR [ecx-0x7e131ba9],ch
  447876:	ja     0x4478db
  447878:	jg     0x447807
  44787a:	out    dx,eax
  44787b:	and    ebx,DWORD PTR [edx]
  44787d:	aam    0xb2
  44787f:	sub    DWORD PTR [esi+0x74ed2612],ebx
  447885:	jb     0x447825
  447887:	clc    
  447888:	adc    DWORD PTR [edi-0xe],esi
  44788b:	adc    eax,0xe8cb5e54
  447890:	push   ss
  447891:	inc    BYTE PTR [esi+ecx*8]
  447894:	stos   BYTE PTR es:[edi],al
  447895:	(bad)  
  447896:	into   
  447897:	xchg   esp,eax
  447898:	repnz lods eax,DWORD PTR ds:[esi]
  44789a:	pushf  
  44789b:	lea    eax,[ecx+edx*2-0x4f8014fa]
  4478a2:	iret   
  4478a3:	js     0x447894
  4478a5:	xor    DWORD PTR [eax+0x6f],ebp
  4478a8:	xor    bl,cl
  4478aa:	aaa    
  4478ab:	fs das 
  4478ad:	(bad)
  4478b1:	jbe    0x44791c
  4478b3:	sub    BYTE PTR ds:0xc267db1a,ah
  4478b9:	inc    ecx
  4478ba:	and    dl,dl
  4478bc:	push   cs
  4478bd:	mov    ecx,0x30cf8673
  4478c2:	cmp    BYTE PTR [edi-0x7e6635fa],0x39
  4478c9:	pop    edx
  4478ca:	adc    al,0x2c
  4478cc:	clc    
  4478cd:	pop    ebx
  4478ce:	outs   dx,DWORD PTR ds:[esi]
  4478cf:	mov    dh,0x74
  4478d1:	xchg   esi,eax
  4478d2:	jecxz  0x44789d
  4478d4:	sub    BYTE PTR [eax+0x32],bh
  4478d7:	sub    DWORD PTR [ebp+0x559e43f8],eax
  4478dd:	dec    ecx
  4478de:	add    BYTE PTR [edx],dh
  4478e0:	sub    BYTE PTR [ebp+0x6b75a26c],bl
  4478e6:	jno    0x4478af
  4478e8:	fnstenv [edx+eax*1+0x4a]
  4478ec:	lods   al,BYTE PTR ds:[esi]
  4478ed:	mov    ch,al
  4478ef:	shl    BYTE PTR [edi],cl
  4478f1:	jnp    0x447949
  4478f3:	jo     0x4478da
  4478f5:	gs dec esi
  4478f7:	push   0xf
  4478f9:	retf   0x2698
  4478fc:	rcr    DWORD PTR [esp+eiz*8],cl
  4478ff:	push   ecx
  447900:	mov    edx,0x9eec9600
  447905:	add    BYTE PTR [edi+eiz*2],ah
  447908:	xchg   ecx,eax
  447909:	or     eax,0xd04764d4
  44790e:	outs   dx,BYTE PTR ds:[esi]
  44790f:	inc    esi
  447910:	mov    ds,WORD PTR [edx+0x6b1cd5a4]
  447916:	std    
  447917:	or     al,0x80
  447919:	sbb    ebp,0xea6f2e8a
  44791f:	retf   
  447920:	rcr    DWORD PTR [ecx+esi*8+0x35d2c19f],cl
  447927:	inc    eax
  447928:	pushf  
  447929:	xchg   BYTE PTR [ebp+0x68],bh
  44792c:	popa   
  44792d:	out    dx,eax
  44792e:	imul   ebx,DWORD PTR [edx-0x46],0xffffffca
  447932:	adc    eax,0xe525ce2f
  447937:	push   edx
  447938:	fdiv   st(1),st
  44793a:	sbb    eax,ebx
  44793c:	ret    0xbca0
  44793f:	mov    ch,0xfd
  447941:	jmp    0x47e6f2a9
  447946:	inc    esi
  447947:	(bad)
  44794a:	popf   
  44794b:	out    dx,eax
  44794c:	(bad)  
  44794d:	adc    eax,0x2bb164f5
  447952:	fcom   QWORD PTR [edx]
  447954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447955:	mov    DWORD PTR [ebx+0x2b],edi
  447958:	push   ebp
  447959:	sbb    ebp,DWORD PTR [esi+0x4fd63a6c]
  44795f:	and    ebx,edx
  447961:	cmp    edx,DWORD PTR [esi+eiz*1]
  447964:	sbb    eax,0x7121a1b8
  447969:	xor    DWORD PTR [edx+0x3d14773d],ecx
  44796f:	pop    ebp
  447970:	or     esp,DWORD PTR [ebp+0x77bd1989]
  447976:	sbb    eax,0x43033b8b
  44797b:	pop    edi
  44797c:	jl     0x4479cc
  44797e:	shr    DWORD PTR [edx],0xcd
  447981:	push   0xc
  447983:	enter  0x87db,0xf0
  447987:	aam    0x87
  447989:	loopne 0x4479d2
  44798b:	leave  
  44798c:	popa   
  44798d:	inc    eax
  44798e:	or     DWORD PTR [ebx+0x33882ce3],ecx
  447994:	mov    edi,ebp
  447996:	in     al,0xa0
  447998:	pop    esp
  447999:	xchg   ecx,eax
  44799a:	pop    esi
  44799b:	(bad)  
  44799d:	shl    BYTE PTR [edx-0x19d4e063],cl
  4479a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4479a4:	sub    al,0xe8
  4479a6:	out    0xf9,al
  4479a8:	mov    ebp,0x42f248f6
  4479ad:	ss mov esp,0xc9661c23
  4479b3:	jmp    0x4479cf
  4479b5:	je     0x447a23
  4479b7:	ret    
  4479b8:	aas    
  4479b9:	cmp    edi,edx
  4479bb:	add    eax,0xe989a110
  4479c0:	mov    ecx,0x733eb65c
  4479c5:	mov    esp,0xc90502f1
  4479ca:	fist   DWORD PTR [edx+eax*1]
  4479cd:	sub    DWORD PTR [ebx],edx
  4479cf:	imul   edx,DWORD PTR [edx],0x6fc84caf
  4479d5:	sub    ah,0xe
  4479d8:	mov    ch,0x52
  4479da:	inc    edi
  4479db:	ror    BYTE PTR [ecx],1
  4479dd:	scas   eax,DWORD PTR es:[edi]
  4479de:	shr    ebx,0x5d
  4479e1:	dec    DWORD PTR [ecx]
  4479e3:	leave  
  4479e4:	lock stos BYTE PTR es:[edi],al
  4479e6:	mov    al,ds:0xb24b37d8
  4479eb:	aas    
  4479ec:	popf   
  4479ed:	add    BYTE PTR ds:0x7cb9468a,cl
  4479f3:	adc    ebp,ebx
  4479f5:	xchg   esi,eax
  4479f6:	mov    edx,0xb78f3dd9
  4479fb:	mov    al,0x5
  4479fd:	int3   
  4479fe:	adc    al,0x5a
  447a00:	push   ss
  447a01:	push   ecx
  447a02:	loop   0x4479f9
  447a04:	adc    BYTE PTR [edi],al
  447a06:	into   
  447a07:	push   ecx
  447a08:	lahf   
  447a09:	sub    eax,0xf385dd15
  447a0e:	sar    DWORD PTR [esi+eax*8+0x102f473a],1
  447a15:	ja     0x447a70
  447a17:	dec    esi
  447a18:	out    0xab,eax
  447a1a:	scas   al,BYTE PTR es:[edi]
  447a1b:	in     al,0x2e
  447a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447a1e:	ja     0x447a87
  447a20:	inc    ebp
  447a21:	push   ss
  447a22:	adc    BYTE PTR [edi],al
  447a24:	(bad)  
  447a25:	out    dx,al
  447a26:	addr16 jle 0x4479e4
  447a29:	(bad)  
  447a2c:	data16 icebp 
  447a2e:	add    ebp,eax
  447a30:	mov    es,WORD PTR [ecx-0x5d]
  447a33:	jo     0x447ab2
  447a35:	add    cl,BYTE PTR [edi]
  447a37:	mov    dh,0xf5
  447a39:	jns    0x447aa0
  447a3b:	scas   eax,DWORD PTR es:[edi]
  447a3c:	int    0x37
  447a3e:	out    0x23,al
  447a40:	loop   0x447a76
  447a42:	icebp  
  447a43:	mov    bh,0xf
  447a45:	dec    ecx
  447a46:	add    eax,0x9c4d4b93
  447a4b:	cdq    
  447a4c:	push   edx
  447a4d:	loop   0x447aa0
  447a4f:	mov    esi,0xbfc25b70
  447a54:	mov    ah,0x88
  447a56:	jp     0x4479d8
  447a58:	xor    al,0xb8
  447a5a:	sub    BYTE PTR [ecx+0x19],al
  447a5d:	or     bh,bl
  447a5f:	sbb    cl,bl
  447a61:	into   
  447a62:	stc    
  447a63:	xchg   esi,eax
  447a64:	or     al,0xdf
  447a66:	pop    ss
  447a67:	bound  edx,QWORD PTR [edi+ebp*8-0x37964f1d]
  447a6e:	mov    dl,0xf9
  447a70:	stos   DWORD PTR es:[edi],eax
  447a71:	pop    edx
  447a72:	mov    BYTE PTR [eax-0x3b349a18],bh
  447a78:	js     0x447a94
  447a7a:	neg    BYTE PTR [edx-0x64]
  447a7d:	inc    esi
  447a7e:	js     0x447a25
  447a80:	fsubr  DWORD PTR [ebp-0x7a]
  447a83:	iret   
  447a84:	adc    bh,BYTE PTR [ebp+0x32d573a2]
  447a8a:	fidiv  DWORD PTR [eax+ebx*2+0x60]
  447a8e:	inc    ebx
  447a8f:	fbld   TBYTE PTR [eax]
  447a91:	mov    al,0x1
  447a93:	xchg   esp,eax
  447a94:	add    DWORD PTR [ebx-0x5315aa3b],ebp
  447a9a:	outs   dx,BYTE PTR ds:[esi]
  447a9b:	pushf  
  447a9c:	dec    edx
  447a9d:	ja     0x447a54
  447a9f:	mov    edi,0xba06318e
  447aa4:	sub    eax,0xc8030b73
  447aa9:	and    dh,BYTE PTR [eax-0x1c265be7]
  447aaf:	out    0x49,ax
  447ab2:	cmp    ecx,DWORD PTR ds:0x960fc68b
  447ab8:	or     al,0x5c
  447aba:	xchg   dh,bl
  447abc:	lods   al,BYTE PTR ds:[esi]
  447abd:	jge    0x447a9c
  447abf:	push   ds
  447ac0:	mov    esp,DWORD PTR [edx-0x28]
  447ac3:	es pop edi
  447ac5:	jns    0x447a57
  447ac7:	pop    ss
  447ac8:	sbb    ch,BYTE PTR [ebx+0x3131dbb]
  447ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447acf:	xchg   esp,eax
  447ad0:	cwde   
  447ad1:	mov    bl,0x84
  447ad3:	xor    BYTE PTR [ecx],dl
  447ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447ad6:	call   0xa2dea895
  447adb:	cmp    BYTE PTR [ebx+0x4f],al
  447ade:	push   edi
  447adf:	lds    edi,FWORD PTR [edx+ebx*8+0x3ef395e9]
  447ae6:	sub    eax,0x50580196
  447aeb:	push   edi
  447aec:	mov    ah,0x35
  447aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447aef:	into   
  447af0:	fisttp QWORD PTR [ebp-0x5407239b]
  447af6:	or     al,0x77
  447af8:	pushf  
  447af9:	out    0x2b,al
  447afb:	jg     0x447af8
  447afd:	dec    ebx
  447afe:	fisubr WORD PTR [ebp-0x2ed6d27c]
  447b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447b05:	cmp    al,0x5b
  447b07:	frstor [ebx-0x51]
  447b0a:	cmc    
  447b0b:	aad    0x4a
  447b0d:	mov    bl,0x8c
  447b0f:	jo     0x447b35
  447b11:	arpl   WORD PTR [ecx],bx
  447b13:	mov    bh,0xb6
  447b15:	pop    ecx
  447b16:	repnz (bad) 
  447b18:	push   0xe354ce0c
  447b1d:	adc    dh,BYTE PTR [edx-0x7e02da90]
  447b23:	jmp    0x447af3
  447b25:	sti    
  447b26:	sub    ecx,edi
  447b28:	pop    ebp
  447b29:	cwde   
  447b2a:	mov    ch,0x84
  447b2c:	pop    esp
  447b2d:	jecxz  0x447b44
  447b2f:	add    BYTE PTR [ebx-0x28],cl
  447b32:	xlat   BYTE PTR ds:[ebx]
  447b33:	lock das 
  447b35:	or     al,0x91
  447b37:	jbe    0x447ac7
  447b39:	ror    BYTE PTR [ebx],1
  447b3b:	sub    eax,0x51be9ef2
  447b40:	push   eax
  447b41:	ret    
  447b42:	stos   DWORD PTR es:[edi],eax
  447b43:	(bad)  
  447b45:	iret   
  447b46:	inc    edi
  447b47:	clc    
  447b48:	jbe    0x447b2c
  447b4a:	leave  
  447b4b:	push   eax
  447b4c:	je     0x447ad1
  447b4e:	fiadd  WORD PTR [ebp-0x7c]
  447b51:	faddp  st(3),st
  447b53:	outs   dx,DWORD PTR ds:[esi]
  447b54:	out    dx,al
  447b55:	mov    dl,0xbc
  447b57:	jae    0x447ba5
  447b59:	xchg   DWORD PTR [edi+0x5976a39e],edi
  447b5f:	test   BYTE PTR [ebx],dh
  447b61:	pop    es
  447b62:	loope  0x447b0a
  447b64:	fstp   TBYTE PTR [edi-0x2e]
  447b67:	js     0x447bc9
  447b69:	out    dx,eax
  447b6a:	sub    DWORD PTR [ecx+0x3b],ecx
  447b6d:	jb     0x447b1e
  447b6f:	push   ecx
  447b70:	fistp  QWORD PTR [esi+0x43baa446]
  447b76:	sbb    DWORD PTR [eax+0x7b],0xf8bb3fc3
  447b7d:	aaa    
  447b7e:	jbe    0x447b8e
  447b80:	cwde   
  447b81:	adc    BYTE PTR [ebx],bh
  447b83:	mov    bh,0xed
  447b85:	repz lea edx,[eax]
  447b88:	sbb    BYTE PTR [edx+ebx*1+0x62422591],bh
  447b8f:	sahf   
  447b90:	xor    al,0x8a
  447b92:	aad    0xae
  447b94:	inc    ebx
  447b95:	es (bad) 
  447b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447b98:	cli    
  447b99:	mov    cl,0x82
  447b9b:	or     edx,esi
  447b9d:	and    esi,DWORD PTR [eax+0x1d]
  447ba0:	pushf  
  447ba1:	push   ebp
  447ba2:	jecxz  0x447bf3
  447ba4:	imul   eax,edi,0x141e5b4a
  447baa:	outs   dx,DWORD PTR ds:[esi]
  447bab:	adc    DWORD PTR [eax+0x36],esi
  447bae:	mov    ebx,0x826efd55
  447bb3:	lahf   
  447bb4:	pop    ebp
  447bb5:	mov    DWORD PTR [edi+0x77],ecx
  447bb8:	inc    ebp
  447bb9:	mov    al,0xa4
  447bbb:	sub    ch,BYTE PTR [esi+0x171846f0]
  447bc1:	adc    DWORD PTR [edi],eax
  447bc3:	clc    
  447bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447bc5:	mov    esp,0x4ad0c4fa
  447bca:	mov    esp,0x1d6b0e7e
  447bcf:	pop    eax
  447bd0:	and    eax,0x192f0db8
  447bd5:	ss cwde 
  447bd7:	icebp  
  447bd8:	pop    ebp
  447bd9:	sbb    eax,edi
  447bdb:	les    cx,DWORD PTR [edx-0x37]
  447bdf:	xchg   cl,ch
  447be1:	mov    ?,WORD PTR [esi-0x3b11e6d0]
  447be7:	or     DWORD PTR [eax-0x573aa9c2],0xfffffffb
  447bee:	ds adc BYTE PTR es:[ecx+0x6c],ah
  447bf3:	push   esi
  447bf4:	neg    DWORD PTR ds:0x496f1494
  447bfa:	xor    bh,BYTE PTR [edx+0x3bcf04bb]
  447c00:	push   ss
  447c01:	or     eax,0x7399a0bb
  447c06:	xchg   esp,eax
  447c07:	xchg   esi,eax
  447c08:	test   al,0x96
  447c0a:	or     DWORD PTR [ecx+0x44c63ba9],0xbc8feb40
  447c14:	jmp    0xa13d619a
  447c19:	xchg   ebx,eax
  447c1a:	lods   al,BYTE PTR ds:[esi]
  447c1b:	adc    eax,0x6f5cba9f
  447c20:	fsub   DWORD PTR [ecx+esi*8+0x456db082]
  447c27:	out    0x3d,al
  447c29:	stos   DWORD PTR es:[edi],eax
  447c2a:	sub    ebp,DWORD PTR [ebx-0x37]
  447c2d:	or     bh,ch
  447c2f:	(bad)  [edx-0x611c12a2]
  447c35:	jl     0x447bee
  447c37:	sti    
  447c38:	das    
  447c39:	adc    DWORD PTR [edi-0x7b],edx
  447c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447c3d:	mov    bh,0xbd
  447c3f:	loope  0x447bd1
  447c41:	jmp    0x447c13
  447c43:	je     0x447c8a
  447c45:	xchg   ebp,eax
  447c46:	(bad)  
  447c47:	or     BYTE PTR [edx-0x62a79a38],bh
  447c4d:	push   ds
  447c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447c4f:	cmc    
  447c50:	mov    al,0x51
  447c52:	arpl   cx,si
  447c54:	ins    DWORD PTR es:[edi],dx
  447c55:	add    bh,0xc8
  447c58:	mov    ah,0xf
  447c5a:	or     ch,BYTE PTR [ecx-0x1687f2bd]
  447c60:	cs jo  0x447bf4
  447c63:	pop    edx
  447c64:	xchg   esp,eax
  447c65:	adc    eax,0xebc7f9fe
  447c6a:	fsubr  DWORD PTR [esi-0x1dde20db]
  447c70:	mov    ecx,0x7f585778
  447c75:	shl    DWORD PTR ss:[eax-0x1],1
  447c79:	scas   al,BYTE PTR es:[edi]
  447c7a:	mov    bl,0xc7
  447c7c:	(bad)  
  447c7d:	and    dl,dh
  447c7f:	mov    dh,0x91
  447c81:	(bad)  ds:0xd9d09833
  447c87:	icebp  
  447c88:	mov    ebx,0x7a42602c
  447c8d:	adc    dl,BYTE PTR [ebp-0x26]
  447c90:	mov    dh,0xbf
  447c92:	and    BYTE PTR [eax-0x5f7e82ed],cl
  447c98:	xor    eax,0x4c4aa498
  447c9d:	push   es
  447c9e:	xchg   esi,eax
  447c9f:	ins    DWORD PTR es:[edi],dx
  447ca0:	aas    
  447ca1:	xchg   ebp,eax
  447ca2:	je     0x447c47
  447ca4:	adc    dh,dh
  447ca6:	leave  
  447ca7:	mov    dh,0xc0
  447ca9:	push   0x69
  447cab:	sub    al,0x52
  447cad:	push   eax
  447cae:	or     cl,BYTE PTR [esi]
  447cb0:	sbb    eax,0x4a789a9d
  447cb5:	ss push es
  447cb7:	sub    bh,bh
  447cb9:	mov    ch,0x58
  447cbb:	push   ecx
  447cbc:	lock cwde 
  447cbe:	inc    esp
  447cbf:	adc    eax,DWORD PTR [ebx-0x36]
  447cc2:	pop    ds
  447cc3:	ds inc esi
  447cc5:	mov    esi,0xc969743d
  447cca:	scas   al,BYTE PTR es:[edi]
  447ccb:	out    0x84,al
  447ccd:	(bad)  
  447cce:	xor    ah,BYTE PTR [esi+0x19]
  447cd1:	sub    eax,DWORD PTR [ecx]
  447cd3:	jecxz  0x447c80
  447cd5:	ss lahf 
  447cd7:	adc    eax,0xc8d8d509
  447cdc:	mov    ds:0xcf9c03f6,al
  447ce1:	clc    
  447ce2:	adc    eax,0xdebe3bd0
  447ce7:	jecxz  0x447cbd
  447ce9:	(bad)  
  447cea:	and    DWORD PTR [eax-0x5a4200bc],esi
  447cf0:	add    al,0x43
  447cf2:	mov    DWORD PTR [edx],esi
  447cf4:	call   DWORD PTR [ebp+0x48]
  447cf7:	inc    ecx
  447cf8:	jmp    0xa2a4:0x631867a8
  447cff:	jecxz  0x447ccc
  447d01:	dec    edx
  447d02:	out    dx,al
  447d03:	jl     0x447cb2
  447d05:	pusha  
  447d06:	mov    ch,0xa
  447d08:	test   cl,cl
  447d0a:	pop    es
  447d0b:	addr16 out 0xd2,eax
  447d0e:	and    eax,edi
  447d10:	and    ah,BYTE PTR [edi+0x73b05b68]
  447d16:	dec    edx
  447d17:	mov    ebp,0x63f5927b
  447d1c:	test   al,0xf
  447d1e:	fild   WORD PTR [ebp-0x6f]
  447d21:	test   BYTE PTR [esi-0x4],0x25
  447d25:	jmp    0xa902:0x7df81327
  447d2c:	mov    ds:0x8fcd3bd4,eax
  447d31:	lods   al,BYTE PTR ds:[esi]
  447d32:	push   edi
  447d33:	enter  0x6e38,0x46
  447d37:	pop    ss
  447d38:	mov    edx,0x4f4e03dc
  447d3d:	push   0x3d
  447d3f:	or     al,0xa9
  447d41:	test   DWORD PTR [ecx+esi*8+0x64a50117],esp
  447d48:	wrmsr  
  447d4a:	pop    edx
  447d4b:	sbb    bh,dh
  447d4d:	fdiv   DWORD PTR [ecx-0x701ac4d4]
  447d53:	lea    esp,[ebx]
  447d55:	mov    eax,ds:0xf561e0ca
  447d5a:	sub    eax,0x395dea09
  447d5f:	sub    BYTE PTR [esi-0x21],cl
  447d62:	mov    ah,0x58
  447d64:	sbb    bh,BYTE PTR [edx+0x38]
  447d67:	pop    ss
  447d68:	aaa    
  447d69:	or     dh,dh
  447d6b:	je     0x447de0
  447d6d:	inc    edx
  447d6e:	outs   dx,DWORD PTR ds:[esi]
  447d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447d70:	in     eax,dx
  447d71:	test   eax,eax
  447d73:	xor    edi,DWORD PTR [esi]
  447d75:	fimul  WORD PTR [edi-0x62]
  447d78:	mov    al,0x89
  447d7a:	xchg   ecx,eax
  447d7b:	sub    esi,DWORD PTR [edx-0x39128d3d]
  447d81:	sub    eax,0xd62bdbf
  447d86:	ror    ch,1
  447d88:	cli    
  447d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447d8a:	pop    ss
  447d8b:	pop    esi
  447d8c:	pusha  
  447d8d:	mov    ss,WORD PTR [ebx+ebp*1]
  447d90:	sub    eax,ecx
  447d92:	pop    esi
  447d93:	adc    DWORD PTR [edx+0x33a9e297],ecx
  447d99:	cwde   
  447d9a:	aam    0xaa
  447d9c:	je     0x447dd0
  447d9e:	pop    esp
  447d9f:	push   ebp
  447da0:	mov    BYTE PTR [esi],dh
  447da2:	mov    edi,DWORD PTR [edx+ebp*1]
  447da5:	icebp  
  447da6:	mov    ebp,?
  447da8:	in     eax,0x3d
  447daa:	shl    BYTE PTR [ecx+eax*4],1
  447dad:	push   cs
  447dae:	(bad)  
  447daf:	gs (bad) 
  447db1:	clc    
  447db2:	sub    dh,BYTE PTR [eax+0x4e]
  447db5:	xchg   ebx,eax
  447db6:	jne    0x447d45
  447db8:	push   ecx
  447db9:	sub    eax,0x270da18e
  447dbe:	jl     0x447dec
  447dc0:	jno    0x447d95
  447dc2:	inc    esp
  447dc3:	dec    eax
  447dc4:	stos   DWORD PTR es:[edi],eax
  447dc5:	enter  0xbbad,0x1e
  447dc9:	xor    esi,eax
  447dcb:	lock jno 0x447d85
  447dce:	mov    esi,0x4308307c
  447dd3:	jle    0x447da1
  447dd5:	imul   edi,edx,0x9028c7a4
  447ddb:	pop    ss
  447ddc:	mov    cl,0xb0
  447dde:	mov    ?,WORD PTR [esi+0x4ae4552e]
  447de4:	int    0xd2
  447de6:	sub    eax,0x788a704b
  447deb:	(bad)  
  447dec:	sbb    eax,0xe2b65a78
  447df1:	adc    ch,cl
  447df3:	jb     0x447e61
  447df5:	jo     0x447d85
  447df7:	(bad)
  447dfb:	push   0x546b32f8
  447e00:	fiadd  WORD PTR [edi-0x663a24e]
  447e06:	out    0xa,eax
  447e08:	xchg   esp,eax
  447e09:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  447e0b:	scas   eax,DWORD PTR es:[edi]
  447e0c:	fdivp  st(5),st
  447e0e:	inc    ebx
  447e0f:	nop
  447e10:	leave  
  447e11:	inc    edx
  447e12:	nop
  447e13:	jge    0x447e3d
  447e15:	fnstsw WORD PTR ds:0xc2f32228
  447e1b:	push   eax
  447e1c:	xor    eax,0xa90fa318
  447e21:	std    
  447e22:	or     dh,bl
  447e24:	jae    0x447de6
  447e26:	jb     0x447e94
  447e28:	lods   eax,DWORD PTR ds:[esi]
  447e29:	jge    0x447ea4
  447e2b:	mov    bh,0x28
  447e2d:	in     al,dx
  447e2e:	repz lea ecx,[esi-0x4d]
  447e32:	and    al,0x8b
  447e34:	shl    DWORD PTR [ebp-0x4d5a819d],1
  447e3a:	add    eax,0x158d303a
  447e3f:	fs je  0x447e0a
  447e42:	jnp    0x447e0e
  447e44:	xor    esi,DWORD PTR [eax+0x6e]
  447e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447e48:	pop    edi
  447e49:	(bad)  
  447e4a:	div    dl
  447e4c:	add    eax,0xeaa7c640
  447e51:	sbb    DWORD PTR [ebp-0x70],ebp
  447e54:	push   edx
  447e55:	aam    0x78
  447e57:	fdivr  DWORD PTR ds:0x649c90cc
  447e5d:	movsx  edx,BYTE PTR [esi+esi*4+0x35656d7f]
  447e65:	hlt    
  447e66:	sahf   
  447e67:	add    eax,0x929466d2
  447e6c:	xchg   bh,bh
  447e6e:	rcl    BYTE PTR [eax-0x4f],1
  447e71:	push   esi
  447e72:	sub    eax,ebp
  447e74:	jmp    0xd7c9:0x9a536f90
  447e7b:	sbb    al,BYTE PTR [eax+edi*1-0x71fe5d95]
  447e82:	mov    ecx,0xd258931b
  447e87:	cmp    al,cl
  447e89:	and    eax,DWORD PTR [edx-0x718f2c2c]
  447e8f:	xor    DWORD PTR [ebx+0x2f],edx
  447e92:	stos   DWORD PTR es:[edi],eax
  447e93:	cld    
  447e94:	sub    ecx,0x6a
  447e97:	mov    ecx,0xf3ab5c5d
  447e9c:	fbld   TBYTE PTR [ecx-0x74]
  447e9f:	gs jbe 0x447e5a
  447ea2:	loop   0x447e7b
  447ea4:	fist   WORD PTR [ebx+ecx*2]
  447ea7:	pop    es
  447ea8:	in     al,dx
  447ea9:	jns    0x447e68
  447eab:	jmp    0xe7ad648b
  447eb0:	test   eax,0x32b2ca70
  447eb5:	pop    edi
  447eb6:	sub    bh,dh
  447eb8:	xchg   DWORD PTR [ecx+0x1491551f],edx
  447ebe:	int    0x9b
  447ec0:	jbe    0x447f26
  447ec2:	add    ch,bl
  447ec4:	dec    edi
  447ec5:	sbb    bl,al
  447ec7:	jg     0x447e61
  447ec9:	leave  
  447eca:	(bad)  
  447ecb:	cs xchg esp,eax
  447ecd:	cmp    cl,BYTE PTR [ecx-0x5b]
  447ed0:	push   ebp
  447ed1:	cdq    
  447ed2:	jmp    0x9833bbe0
  447ed7:	pop    edx
  447ed8:	xor    esp,ebp
  447eda:	in     al,dx
  447edb:	xchg   BYTE PTR [ecx-0x55],al
  447ede:	bound  ebx,QWORD PTR [eax+edx*4+0x48]
  447ee2:	(bad)  
  447ee3:	sub    al,0x52
  447ee5:	push   edx
  447ee6:	repz or dh,BYTE PTR [ebp-0x2655282d]
  447eed:	adc    al,0x65
  447eef:	(bad)  
  447ef1:	(bad)  
  447ef3:	add    bl,BYTE PTR [edi+0x5d2a299b]
  447ef9:	aaa    
  447efa:	push   edi
  447efb:	push   ds
  447efc:	mov    dl,0xec
  447efe:	dec    esp
  447eff:	rcl    dl,1
  447f01:	xchg   esi,eax
  447f02:	or     eax,0x2b7177c4
  447f07:	fldcw  WORD PTR [ebp-0x2b]
  447f0a:	ret    
  447f0b:	shl    dh,cl
  447f0d:	ins    BYTE PTR es:[edi],dx
  447f0e:	jmp    0x5cf5:0x2f8856b7
  447f15:	fisttp DWORD PTR [esp+eiz*2-0x4b5ebe2d]
  447f1c:	mov    dh,0x3b
  447f1e:	sbb    eax,0x54c2a85f
  447f23:	cmp    DWORD PTR [esi-0x5b67563c],0xffffffcb
  447f2a:	dec    eax
  447f2b:	out    0x22,al
  447f2d:	imul   edx,DWORD PTR [edi+0x64ab2fae],0x6e
  447f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447f35:	rol    bl,cl
  447f37:	inc    ebx
  447f38:	dec    edi
  447f39:	cdq    
  447f3a:	(bad)  
  447f3b:	out    0xb8,al
  447f3d:	ins    DWORD PTR es:[edi],dx
  447f3e:	adc    esp,DWORD PTR [ebx]
  447f40:	shl    BYTE PTR [edx+0x62],cl
  447f43:	lea    edi,[esi+0x183b6728]
  447f49:	frstor [ecx+0x46bbc3d7]
  447f4f:	or     ebx,ebx
  447f51:	push   ss
  447f52:	push   esi
  447f53:	dec    eax
  447f54:	pop    eax
  447f55:	inc    edi
  447f56:	out    0x16,al
  447f58:	ror    BYTE PTR [ebx-0x2028090f],0x24
  447f5f:	pop    esi
  447f60:	push   esp
  447f61:	pop    esi
  447f62:	ror    DWORD PTR [edx],1
  447f64:	mov    esi,0x5fa09a52
  447f69:	inc    ebx
  447f6a:	test   al,0x6c
  447f6c:	mov    ecx,0x1f8b254d
  447f71:	cmp    ah,0x3f
  447f74:	fwait
  447f75:	inc    ebp
  447f76:	stos   BYTE PTR es:[edi],al
  447f77:	pop    edi
  447f78:	pop    esi
  447f79:	and    bh,BYTE PTR [esi]
  447f7b:	repz or eax,0x9b162469
  447f81:	jg     0x447f07
  447f83:	es dec edi
  447f85:	pop    esi
  447f86:	xor    bl,ch
  447f88:	sbb    BYTE PTR [esi],dh
  447f8a:	test   dl,al
  447f8c:	sub    eax,0x35bfc127
  447f91:	mov    esp,0x4e2b5287
  447f96:	lods   eax,DWORD PTR ds:[esi]
  447f97:	mov    eax,0x7ab27ab4
  447f9c:	xchg   esi,ebp
  447f9e:	xlat   BYTE PTR ds:[ebx]
  447f9f:	pop    ebp
  447fa0:	add    eax,0x53aa7b7f
  447fa5:	inc    edx
  447fa6:	jge    0x447ff5
  447fa8:	out    dx,eax
  447fa9:	and    ch,BYTE PTR [ebx+0x34b955e3]
  447faf:	je     0x447fda
  447fb1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447fb3:	mov    ds:0xd58c4314,eax
  447fb8:	pop    ebp
  447fb9:	int    0x9f
  447fbb:	xchg   edi,eax
  447fbc:	fcompp 
  447fbe:	mov    BYTE PTR [ebp+0x790b6f7a],0xc2
  447fc5:	sub    BYTE PTR [edi+0x3fdc2ab1],ah
  447fcb:	fdivrp st(3),st
  447fcd:	shr    ch,cl
  447fcf:	adc    dh,BYTE PTR [eax-0x48]
  447fd2:	mov    DWORD PTR [edi+ecx*1],ebx
  447fd5:	jmp    0x447fa0
  447fd7:	ins    DWORD PTR es:[edi],dx
  447fd8:	pop    esi
  447fd9:	loop   0x448005
  447fdb:	add    ecx,DWORD PTR [esi+0x5d]
  447fde:	or     ebp,DWORD PTR [ebp-0x121df8e5]
  447fe4:	push   0xb64f7c33
  447fe9:	mov    ebx,0x84cb0bde
  447fee:	pop    ds
  447fef:	std    
  447ff0:	data16 mov al,ds:0x7958896
  447ff6:	dec    esp
  447ff7:	lds    ebp,FWORD PTR [ebx+0x35e5a553]
  447ffd:	sub    ch,al
  447fff:	(bad)  
  448000:	mov    cl,0x6f
  448002:	pop    edi
  448003:	xor    ebx,DWORD PTR [esp+0x62]
  448007:	adc    al,0xcd
  448009:	jp     0x44806e
  44800b:	mov    al,ds:0xe98f10b6
  448010:	ins    BYTE PTR es:[edi],dx
  448011:	mov    ss,WORD PTR [edi-0x4474712]
  448017:	mov    edi,0xfea2bff6
  44801c:	out    0x45,eax
  44801e:	ret    0x594a
  448021:	out    0x5a,eax
  448023:	mov    esp,0x517c41a
  448028:	sar    DWORD PTR [edx],0xec
  44802b:	out    0x4a,eax
  44802d:	mov    ecx,0x23512a7f
  448032:	mov    WORD PTR [eax+0x3b6beddf],cs
  448038:	sahf   
  448039:	cmp    bh,0x93
  44803c:	sub    DWORD PTR [esi-0xb],ecx
  44803f:	jg     0x448055
  448041:	sub    edx,DWORD PTR [edx-0x1311c47b]
  448047:	jnp    0x447fda
  448049:	add    BYTE PTR [eax-0x28],ch
  44804c:	retf   0x976c
  44804f:	xchg   edi,eax
  448050:	ins    DWORD PTR es:[edi],dx
  448051:	push   edi
  448052:	lock mov WORD PTR [esi],fs
  448055:	je     0x448082
  448057:	add    cl,BYTE PTR [edi-0x1dd2aed8]
  44805d:	push   edx
  44805e:	fcomp  DWORD PTR ds:0x7aed2956
  448064:	pop    ss
  448065:	mov    ecx,0x36ebaa44
  44806a:	or     esi,esp
  44806c:	mov    ds:0xd09b5902,al
  448071:	sub    DWORD PTR [ecx],eax
  448073:	fild   DWORD PTR [edi-0x60]
  448076:	out    dx,al
  448077:	xor    BYTE PTR [ebp+0x3],dl
  44807a:	test   BYTE PTR [ebp-0x58],bh
  44807d:	jecxz  0x44800c
  44807f:	mov    bl,0x1e
  448081:	and    edx,DWORD PTR [esi-0x35]
  448084:	fst    DWORD PTR [edx-0xdec5960]
  44808a:	jmp    0xf275:0xcce2a8f0
  448091:	and    BYTE PTR [ebp+0x5f],bl
  448094:	scas   eax,DWORD PTR es:[edi]
  448095:	into   
  448096:	xor    al,0xd0
  448098:	mov    esi,0x74d2c0e2
  44809d:	and    al,0x11
  44809f:	pop    ebx
  4480a0:	mov    esi,0x845ce2d5
  4480a5:	mov    esp,0xf8ba90b2
  4480aa:	nop
  4480ab:	dec    esi
  4480ac:	test   DWORD PTR [ecx],esi
  4480ae:	ffree  st(2)
  4480b0:	dec    esp
  4480b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4480b2:	push   esp
  4480b3:	ror    BYTE PTR ds:0xa5b8ca79,0x9
  4480ba:	jnp    0x448076
  4480bc:	push   edi
  4480bd:	rcl    BYTE PTR [ebp+0x32],0xa5
  4480c1:	ss xchg ebx,eax
  4480c3:	nop
  4480c4:	dec    ebp
  4480c5:	and    al,0xdb
  4480c7:	and    al,0x5d
  4480c9:	pop    ecx
  4480ca:	jbe    0x4480bc
  4480cc:	fmul   QWORD PTR [ebx+0x25]
  4480cf:	ins    BYTE PTR es:[edi],dx
  4480d0:	cmp    DWORD PTR [eax+0x42],ebp
  4480d3:	sub    eax,0x103dba92
  4480d8:	mov    WORD PTR [ebx+0xf93ee07],?
  4480de:	mov    esp,0x2f1863a5
  4480e3:	imul   edx,DWORD PTR [ecx+0x4b],0x30
  4480e7:	aas    
  4480e8:	stos   DWORD PTR es:[edi],eax
  4480e9:	push   0xa323cbae
  4480ee:	sbb    eax,DWORD PTR [ebp-0x2a]
  4480f1:	sbb    DWORD PTR [edi+ecx*4+0x4b],0xfe8c3473
  4480f9:	push   cs
  4480fa:	adc    ebp,DWORD PTR [eax+0x69]
  4480fd:	ror    BYTE PTR [ebp-0x72],0x2c
  448101:	mov    ds:0x4f1d7c17,eax
  448106:	pop    ss
  448107:	mov    BYTE PTR [ebx+0x76594c8],bh
  44810d:	fbstp  TBYTE PTR [edi]
  44810f:	sub    BYTE PTR [ebx+0x5d5e7d3c],cl
  448115:	repz inc ebx
  448117:	cmp    esp,DWORD PTR [esi-0x6f]
  44811a:	adc    BYTE PTR [edi-0x5a],0x47
  44811e:	push   ebx
  44811f:	mov    edi,0x98440ca7
  448124:	dec    eax
  448125:	cmp    cl,dl
  448127:	sahf   
  448128:	pop    ebx
  448129:	mov    ecx,ecx
  44812b:	scas   eax,DWORD PTR es:[edi]
  44812c:	scas   al,BYTE PTR es:[edi]
  44812d:	xchg   ebx,eax
  44812e:	stos   BYTE PTR es:[edi],al
  44812f:	aad    0x68
  448131:	mov    edi,0x8c140579
  448136:	aad    0xf6
  448138:	retf   0x709d
  44813b:	add    al,0x6d
  44813d:	mov    al,0x2f
  44813f:	fsub   QWORD PTR ds:0x18af4559
  448145:	jne    0x448132
  448147:	lahf   
  448148:	jg     0x448184
  44814a:	fsubr  st(7),st
  44814c:	mov    DWORD PTR [ebx+0x4],ecx
  44814f:	or     eax,0x5e5856dc
  448154:	cmp    DWORD PTR [edi-0x36],ebp
  448157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448158:	test   eax,0xbf138e47
  44815d:	hlt    
  44815e:	mov    ah,0xc9
  448160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448161:	adc    al,0x84
  448163:	jnp    0x44814a
  448165:	inc    edx
  448166:	loop   0x448158
  448168:	rcr    BYTE PTR [eax+0x5143c352],1
  44816e:	mov    ds:0xe48a7478,eax
  448173:	ror    BYTE PTR [edi+0x2789a82d],1
  448179:	sub    eax,0x865bd56d
  44817e:	scas   al,BYTE PTR es:[edi]
  44817f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448180:	mov    edi,ebp
  448182:	mov    edx,0x87230704
  448187:	lea    ecx,[ecx]
  448189:	mov    ebx,0x82bc88f2
  44818e:	pop    es
  44818f:	dec    edi
  448190:	ja     0x4481a2
  448192:	mov    dh,0x0
  448194:	call   0x2d59:0xdcc5d9d4
  44819b:	mov    esi,0xa37e6543
  4481a0:	or     al,0x9d
  4481a2:	inc    edx
  4481a3:	xchg   edi,eax
  4481a4:	push   ebx
  4481a5:	stos   DWORD PTR es:[edi],eax
  4481a6:	sar    BYTE PTR [ebx],cl
  4481a8:	stos   DWORD PTR es:[edi],eax
  4481a9:	jmp    0xad23:0x95198e1e
  4481b0:	jmp    0xbcbca689
  4481b5:	mov    cl,0xfc
  4481b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4481b8:	lods   ax,WORD PTR ds:[esi]
  4481ba:	xchg   esp,eax
  4481bb:	xor    eax,0x26344034
  4481c0:	sbb    al,0xa9
  4481c2:	test   eax,0x454022e2
  4481c7:	in     eax,0x59
  4481c9:	hlt    
  4481ca:	icebp  
  4481cb:	iret   
  4481cc:	sbb    eax,0x4e30acb
  4481d1:	stos   DWORD PTR es:[edi],eax
  4481d2:	push   0x42
  4481d4:	stos   BYTE PTR es:[edi],al
  4481d5:	mov    cl,0x14
  4481d7:	jge    0x44823a
  4481d9:	inc    ebx
  4481da:	sub    al,0xae
  4481dc:	retf   0x3a73
  4481df:	repnz imul eax,edi,0xbb98912a
  4481e6:	xor    bl,bl
  4481e8:	(bad)  
  4481e9:	jns    0x448177
  4481eb:	adc    bl,0x63
  4481ee:	sub    eax,0x5969b6ee
  4481f3:	push   edx
  4481f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4481f5:	jne    0x4481d0
  4481f7:	in     eax,0x73
  4481f9:	pop    edi
  4481fa:	repnz sbb eax,DWORD PTR [ebx+0x7c]
  4481fe:	or     al,0xba
  448200:	xlat   BYTE PTR ds:[ebx]
  448201:	inc    ecx
  448202:	sbb    al,0xde
  448204:	(bad)  
  448205:	push   ecx
  448206:	(bad)  
  448207:	add    eax,0x570dfa22
  44820c:	and    bl,dh
  44820e:	mov    ebp,eax
  448210:	shr    esi,1
  448212:	cmp    ebp,esp
  448214:	popf   
  448215:	idiv   DWORD PTR [ebp-0x5f643134]
  44821b:	jp     0x448271
  44821d:	repz mov bl,0xe6
  448220:	inc    edx
  448221:	inc    BYTE PTR [ebp+0x1d807e1b]
  448227:	in     al,dx
  448228:	mov    bh,0x28
  44822a:	mov    eax,ds:0xe9449f47
  44822f:	int    0x3a
  448231:	dec    ebp
  448232:	aam    0xc1
  448234:	sbb    DWORD PTR [edi+0xe1afb62],edx
  44823a:	dec    ebp
  44823b:	mov    ss,WORD PTR [ecx-0xf8a3271]
  448241:	dec    ebx
  448242:	xchg   DWORD PTR [ecx],edi
  448244:	dec    eax
  448245:	popf   
  448246:	cmp    al,0xe6
  448248:	jae    0x448273
  44824a:	sar    ah,1
  44824c:	or     BYTE PTR gs:[ecx+0x6a],bh
  448250:	mov    cl,0x6e
  448252:	loop   0x4482c1
  448254:	xor    BYTE PTR [esi+edi*2+0x2ea00f9d],ch
  44825b:	add    eax,0x405863a6
  448260:	std    
  448261:	pop    ebx
  448262:	ds jae 0x44820e
  448265:	xchg   esp,eax
  448266:	imul   ecx,ecx,0x19
  448269:	push   esp
  44826a:	out    0x88,al
  44826c:	imul   eax,DWORD PTR [eax],0xffffff96
  44826f:	jl     0x4481fb
  448271:	pop    esp
  448272:	hlt    
  448273:	lea    edi,[edi]
  448275:	xor    esi,ecx
  448277:	test   BYTE PTR [edi-0x109f1d70],ch
  44827d:	mov    esp,0x2340133
  448282:	adc    dl,BYTE PTR [ecx]
  448284:	dec    ecx
  448285:	gs mov edx,0x8c73dcf8
  44828b:	addr16 cmp ch,ch
  44828e:	aam    0xcc
  448290:	push   ecx
  448291:	and    al,0xc6
  448293:	push   es
  448294:	mov    edi,0xf65d3d5e
  448299:	inc    edi
  44829a:	out    0x62,al
  44829c:	jbe    0x4482a8
  44829e:	or     dl,BYTE PTR [edi-0x76]
  4482a1:	lea    ebp,[ebx]
  4482a3:	adc    dh,ch
  4482a5:	xor    BYTE PTR [ebp+0x4c],bl
  4482a8:	jne    0x4482e3
  4482aa:	add    DWORD PTR [ecx-0x7b],eax
  4482ad:	sub    ebp,eax
  4482af:	jnp    0x44824e
  4482b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4482b2:	and    al,0x11
  4482b4:	add    al,0x63
  4482b6:	out    dx,eax
  4482b7:	mov    al,ds:0x4c2276a8
  4482bc:	mov    eax,ds:0xa2c06fd1
  4482c1:	stos   BYTE PTR es:[edi],al
  4482c2:	sar    BYTE PTR ss:[ebp-0x7e],1
  4482c6:	inc    esp
  4482c7:	dec    edx
  4482c8:	mov    ecx,0x2bfe1eb9
  4482cd:	imul   ebp,DWORD PTR [ecx],0xeee99e8
  4482d3:	adc    DWORD PTR [eax-0x25fb09ed],ebx
  4482d9:	pusha  
  4482da:	test   eax,0x6fcaa8e3
  4482df:	sub    eax,0x9cbe8e05
  4482e4:	mov    BYTE PTR [ebx-0x7cb58594],ch
  4482ea:	test   DWORD PTR [edi],edx
  4482ec:	push   ebx
  4482ed:	idiv   BYTE PTR [esi+0x7f]
  4482f0:	out    dx,al
  4482f1:	cli    
  4482f2:	xor    al,0x49
  4482f4:	pop    edx
  4482f5:	inc    esi
  4482f6:	add    dl,BYTE PTR [edx-0x1e1e38ba]
  4482fc:	data16 fisubr WORD PTR [eax+eiz*8]
  448300:	push   esp
  448301:	xor    eax,0x7962fbb6
  448306:	push   ecx
  448307:	fstp   DWORD PTR [edx]
  448309:	std    
  44830a:	mov    ds:0x102c49be,al
  44830f:	or     al,0x9b
  448311:	cmp    edx,ebp
  448313:	xchg   esi,eax
  448314:	idiv   DWORD PTR [ebx-0xd47823e]
  44831a:	add    BYTE PTR [edi+0x78],0x34
  44831e:	sar    DWORD PTR [esi+0x2b],1
  448321:	out    dx,eax
  448322:	mov    BYTE PTR [ebx*8-0x29c593f9],ah
  448329:	and    cl,BYTE PTR [ebx-0x66bd7601]
  44832f:	leave  
  448330:	hlt    
  448331:	(bad)  
  448332:	das    
  448333:	shl    BYTE PTR [esp+esi*4+0xd],0x77
  448338:	add    al,BYTE PTR [esi-0x4391d0dc]
  44833e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44833f:	cwde   
  448340:	jle    0x448324
  448342:	cwde   
  448343:	jo     0x4483af
  448345:	cdq    
  448346:	dec    ecx
  448347:	int    0x80
  448349:	sbb    bl,0xfa
  44834c:	and    ebx,DWORD PTR [ebx+0x3c6e2fe6]
  448352:	js     0x448377
  448354:	xor    ch,BYTE PTR [edx]
  448356:	pop    esi
  448357:	aad    0x39
  448359:	ret    
  44835a:	mov    ds:0xbbed321b,al
  44835f:	xor    ah,dl
  448361:	test   eax,0x148550c8
  448366:	scas   eax,DWORD PTR es:[edi]
  448367:	pop    ebp
  448368:	in     eax,dx
  448369:	mov    ds:0x50795ab1,eax
  44836e:	fwait
  44836f:	rol    dh,cl
  448371:	mov    eax,ds:0x4a06e10
  448376:	xchg   ebx,eax
  448377:	retf   
  448378:	pop    ds
  448379:	cld    
  44837a:	test   BYTE PTR [esi+0x5be8eca7],0xf
  448381:	sbb    eax,0x20843f19
  448386:	mov    dh,0x4e
  448388:	xor    eax,0x824fd87b
  44838d:	aaa    
  44838e:	xor    DWORD PTR [ecx+0x12],edi
  448391:	addr16 int3 
  448393:	ins    DWORD PTR es:[edi],dx
  448394:	fcmovnbe st,st(3)
  448396:	(bad)  
  448397:	mov    eax,DWORD PTR [edi+0x6f775567]
  44839d:	pop    edx
  44839e:	xor    esp,DWORD PTR [eax]
  4483a0:	push   esp
  4483a1:	jecxz  0x44832e
  4483a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4483a4:	jne    0x448331
  4483a6:	xlat   BYTE PTR ds:[ebx]
  4483a7:	cli    
  4483a8:	cmp    DWORD PTR ds:0xf72437d5,0x251bf182
  4483b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4483b3:	mov    ah,0x56
  4483b5:	ficom  WORD PTR [esi-0x2c274941]
  4483bb:	xchg   ebx,eax
  4483bc:	mov    bl,0x2d
  4483be:	adc    DWORD PTR [esi],edx
  4483c0:	sbb    eax,0xecc7c140
  4483c5:	pop    edi
  4483c6:	fld    st(6)
  4483c8:	repz imul esp,eax,0xdf0ac3f3
  4483cf:	gs mov cl,0x6
  4483d2:	jbe    0x44840f
  4483d4:	push   ebp
  4483d5:	sahf   
  4483d6:	mov    ebp,0xdc927c38
  4483db:	jmp    0x4483dd
  4483dd:	std    
  4483de:	mov    bh,0x24
  4483e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4483e1:	jecxz  0x4483c4
  4483e3:	sub    DWORD PTR [ebx+ebp*2-0x7c],0x58
  4483e8:	int3   
  4483e9:	int3   
  4483ea:	mov    eax,ds:0x6c2ceeca
  4483ef:	sbb    edx,ebx
  4483f1:	mov    dh,bh
  4483f3:	aaa    
  4483f4:	jnp    0x4483c8
  4483f6:	adc    edx,DWORD PTR [ecx+0x70d8c1aa]
  4483fc:	sbb    DWORD PTR [edi],edi
  4483fe:	cmc    
  4483ff:	clc    
  448400:	pop    ebx
  448401:	mov    edi,0x41deb8a5
  448406:	push   ds
  448407:	jns    0x448430
  448409:	enter  0xdf24,0xf8
  44840d:	outs   dx,BYTE PTR ds:[esi]
  44840e:	push   bp
  448410:	jecxz  0x4483a4
  448412:	cmp    esp,edi
  448414:	mov    ebx,0xfcb02fb0
  448419:	aam    0x30
  44841b:	jae    0x448462
  44841d:	mov    esp,DWORD PTR [ecx-0x48]
  448420:	sub    ebp,DWORD PTR [ecx]
  448422:	or     dl,BYTE PTR [ecx+0x33eb8ef2]
  448428:	enter  0xb247,0x8f
  44842c:	push   ds
  44842d:	cmp    dh,BYTE PTR [ebx+0x1d]
  448430:	xchg   edi,eax
  448431:	ror    eax,cl
  448433:	pop    eax
  448434:	mov    eax,ds:0x1cd3b4d2
  448439:	xchg   BYTE PTR [edi-0x67],bl
  44843c:	sbb    al,0x84
  44843e:	int    0x38
  448440:	push   edx
  448441:	jb     0x448483
  448443:	mov    ebp,0x13a9988d
  448448:	mov    al,0x71
  44844a:	cld    
  44844b:	retf   0xe29f
  44844e:	ret    0x52e5
  448451:	ret    
  448452:	dec    edx
  448453:	pop    edx
  448454:	pop    ss
  448455:	adc    dl,ah
  448457:	in     eax,dx
  448458:	add    eax,0xc72560f
  44845d:	repz xor ecx,edi
  448460:	dec    esp
  448461:	mov    dh,0x60
  448463:	pop    ds
  448464:	jmp    0x71e6:0x42732184
  44846b:	cwde   
  44846c:	les    edi,FWORD PTR es:[ecx-0x39]
  448470:	mov    al,0xaf
  448472:	daa    
  448473:	adc    eax,0x48fc76d9
  448478:	mov    esp,esi
  44847a:	and    al,0x90
  44847c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44847d:	pop    ebp
  44847e:	xchg   ecx,eax
  44847f:	mov    ebx,0x627becd4
  448484:	ins    DWORD PTR es:[edi],dx
  448485:	push   0xf02cc42a
  44848a:	daa    
  44848b:	das    
  44848c:	sahf   
  44848d:	out    0xd4,eax
  44848f:	hlt    
  448490:	jne    0x4484f3
  448492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448493:	daa    
  448494:	cs inc edx
  448496:	lods   al,BYTE PTR ds:[esi]
  448497:	rol    cl,cl
  448499:	outs   dx,BYTE PTR ds:[esi]
  44849a:	xchg   ecx,eax
  44849b:	shl    DWORD PTR [edi-0x31],1
  44849e:	gs sahf 
  4484a0:	xchg   DWORD PTR [ebx+ebp*8],eax
  4484a3:	stos   DWORD PTR es:[edi],eax
  4484a4:	mov    ds:0xd5b4ced8,al
  4484a9:	sbb    BYTE PTR [ecx],ah
  4484ab:	mov    edi,DWORD PTR [esi+0x7d]
  4484ae:	dec    edx
  4484af:	scas   al,BYTE PTR es:[edi]
  4484b0:	enter  0xb712,0xce
  4484b4:	movq   QWORD PTR [eax+edi*1+0x7c],mm4
  4484b9:	scas   eax,DWORD PTR es:[edi]
  4484ba:	sub    al,0xf3
  4484bc:	sub    DWORD PTR [ebx+0x25],ecx
  4484bf:	pop    ds
  4484c0:	inc    edx
  4484c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4484c2:	pop    ebx
  4484c3:	retf   0x933c
  4484c6:	or     BYTE PTR [esi+esi*1-0x354b394d],bl
  4484cd:	jo     0x4484bb
  4484cf:	les    eax,FWORD PTR [edx-0x1c]
  4484d2:	into   
  4484d3:	mov    esi,0x656d1c1e
  4484d8:	lods   eax,DWORD PTR ds:[esi]
  4484d9:	sets   BYTE PTR [eax-0x7a]
  4484dd:	dec    edx
  4484de:	push   ecx
  4484df:	push   0x4b49da27
  4484e4:	sbb    bl,BYTE PTR [ebp-0x63]
  4484e7:	ss test dh,ah
  4484ea:	pushf  
  4484eb:	inc    ebp
  4484ec:	fisubr DWORD PTR [ebx+0x72]
  4484ef:	(bad)  
  4484f0:	cmp    dh,BYTE PTR [eax-0xb]
  4484f3:	jp     0x44856c
  4484f5:	ror    BYTE PTR [ebp-0x30],1
  4484f8:	lea    esi,[edi-0x4cb41bf2]
  4484fe:	rcr    BYTE PTR [edi+0x58],cl
  448501:	xor    al,0x1
  448503:	adc    eax,0xbccd0088
  448508:	dec    ecx
  448509:	add    ah,BYTE PTR [ecx]
  44850b:	into   
  44850c:	adc    al,0x99
  44850e:	je     0x44856d
  448510:	cmp    ch,dl
  448512:	loop   0x44853c
  448514:	add    dh,0x7b
  448517:	add    al,0xeb
  448519:	mov    cs,WORD PTR [edx]
  44851b:	and    eax,0x4d0de5ab
  448520:	push   es
  448521:	ss fldl2t 
  448524:	cmp    BYTE PTR [ecx+0x4d],ch
  448527:	mov    cl,0x27
  448529:	cmp    eax,0xd1ebaf16
  44852e:	sar    BYTE PTR ds:0xb21d2832,cl
  448534:	jbe    0x44851d
  448536:	in     eax,0x34
  448538:	(bad)  
  448539:	adc    DWORD PTR [edx],esi
  44853b:	pop    edi
  44853c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44853d:	pop    ss
  44853e:	hlt    
  44853f:	(bad)  
  448540:	bound  eax,QWORD PTR [esi+0x565e44b4]
  448546:	pop    es
  448547:	pop    esp
  448548:	sti    
  448549:	adc    ah,al
  44854b:	mov    cl,0x34
  44854d:	cld    
  44854e:	xor    eax,DWORD PTR [eax+ebp*1+0x7e003d4a]
  448555:	fs add eax,0xd3b7ec5c
  44855b:	ins    BYTE PTR es:[edi],dx
  44855c:	sub    DWORD PTR [esi+0x7cc133b7],0x844a6201
  448566:	cmp    bh,BYTE PTR [eax]
  448568:	int    0xfb
  44856a:	inc    esp
  44856b:	jns    0x448581
  44856d:	jp     0x4485ae
  44856f:	imul   edi,DWORD PTR [ebx],0x888ee8a6
  448575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448576:	jnp    0x448537
  448578:	mov    eax,0x2d5eee85
  44857d:	popa   
  44857e:	out    0x1a,al
  448580:	mov    esp,0xb64de9c7
  448585:	mov    ecx,0x64534a28
  44858a:	adc    esi,DWORD PTR [edx+eiz*4+0x19]
  44858e:	push   ecx
  44858f:	push   0xb8c8c847
  448594:	fistp  DWORD PTR [eax+eax*4-0x2e15fa72]
  44859b:	sub    BYTE PTR [ecx+0x12],bl
  44859e:	icebp  
  44859f:	lods   eax,DWORD PTR ds:[esi]
  4485a0:	or     BYTE PTR [esi-0x1d],ah
  4485a3:	add    eax,edi
  4485a5:	cli    
  4485a6:	dec    eax
  4485a7:	xchg   edx,eax
  4485a8:	daa    
  4485a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4485aa:	jecxz  0x448600
  4485ac:	cmp    ebp,ebp
  4485ae:	sub    al,0x54
  4485b0:	loop   0x4485be
  4485b2:	aaa    
  4485b3:	add    eax,0x7e121555
  4485b8:	fldcw  WORD PTR [esi]
  4485ba:	jbe    0x448567
  4485bc:	jb     0x4485a8
  4485be:	pop    edi
  4485bf:	xchg   BYTE PTR [ebx+0x5],dl
  4485c2:	aaa    
  4485c3:	int    0x75
  4485c5:	aas    
  4485c6:	or     ah,BYTE PTR [ebx]
  4485c8:	retf   
  4485c9:	pop    ss
  4485ca:	pop    edx
  4485cb:	ins    BYTE PTR es:[edi],dx
  4485cc:	pop    ebp
  4485cd:	out    dx,al
  4485ce:	in     al,dx
  4485cf:	scas   eax,DWORD PTR es:[edi]
  4485d0:	ret    
  4485d1:	sub    dl,dl
  4485d3:	xchg   ebp,eax
  4485d4:	pop    ebx
  4485d5:	hlt    
  4485d6:	repnz out dx,eax
  4485d8:	cmp    edx,0xffffffdb
  4485db:	ret    
  4485dc:	in     eax,0x41
  4485de:	mov    esp,0xf60ed517
  4485e3:	scas   al,BYTE PTR es:[edi]
  4485e4:	sar    BYTE PTR [ecx],cl
  4485e6:	mov    BYTE PTR [edx],0x81
  4485e9:	(bad)  
  4485ea:	call   0x2a3a28e3
  4485ef:	mov    ds:0xd9298f2a,al
  4485f4:	gs jg  0x4485d4
  4485f7:	and    edi,DWORD PTR [ebx]
  4485f9:	out    dx,eax
  4485fa:	(bad)  [edi+edx*4-0x4c53ec0d]
  448601:	test   BYTE PTR [eax-0x5e],ah
  448604:	dec    ebp
  448605:	lahf   
  448606:	adc    esp,DWORD PTR [edx-0x5f]
  448609:	(bad)  
  44860a:	jbe    0x448635
  44860c:	mov    ah,0xe
  44860e:	cmp    al,0x7e
  448610:	or     ebx,ebx
  448612:	push   ss
  448613:	jnp    0xf1614a96
  448619:	xchg   edi,eax
  44861a:	fsub   DWORD PTR [ebx-0x2b9166ab]
  448620:	std    
  448621:	dec    ecx
  448622:	sahf   
  448623:	sbb    al,0x6b
  448625:	mov    bh,0x94
  448627:	lods   al,BYTE PTR ds:[esi]
  448628:	out    dx,eax
  448629:	or     eax,0x3fdf6c10
  44862e:	test   eax,0x75e14e53
  448633:	lods   eax,DWORD PTR ds:[esi]
  448634:	in     eax,0xdd
  448636:	retf   0x73e0
  448639:	ds aaa 
  44863b:	sbb    eax,0x1dd63d88
  448640:	ins    BYTE PTR es:[edi],dx
  448641:	lods   al,BYTE PTR ds:[esi]
  448642:	sahf   
  448643:	iret   
  448644:	mov    cl,0x22
  448646:	into   
  448647:	jnp    0x448675
  448649:	mov    edi,0xd3313320
  44864e:	push   ebp
  44864f:	leave  
  448650:	aad    0x4e
  448652:	retf   
  448653:	ds mov eax,0xddfeb3e8
  448659:	(bad)  
  44865a:	push   esi
  44865b:	inc    eax
  44865c:	inc    esi
  44865d:	pop    edi
  44865e:	mov    edi,0x5213a54d
  448663:	fucom  st(3)
  448665:	cmp    ax,0xb63b
  448669:	and    DWORD PTR [esi+0x57],0xd
  44866d:	push   ebx
  44866e:	jo     0x4486a8
  448670:	icebp  
  448671:	jmp    0x7723:0x7684a8be
  448678:	push   0xd0f4e34e
  44867d:	or     al,0x3c
  44867f:	pop    DWORD PTR [ebp-0x3d2b8d56]
  448685:	inc    esi
  448686:	adc    edi,DWORD PTR [edx+0x6f]
  448689:	inc    ecx
  44868a:	xor    eax,edi
  44868c:	xchg   esp,eax
  44868d:	sub    BYTE PTR [edi],0x9e
  448690:	xsavec [edi+0xb6f80c7]
  448697:	std    
  448698:	pop    edx
  448699:	adc    DWORD PTR [edi],edi
  44869b:	in     al,0x12
  44869d:	in     eax,dx
  44869e:	sar    DWORD PTR [ebp+0x21],cl
  4486a1:	imul   edi,DWORD PTR [ebp+0x1da517d5],0x628eab9d
  4486ab:	test   BYTE PTR [edx-0x6c],cl
  4486ae:	push   ebx
  4486af:	sar    edx,0x4c
  4486b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4486b3:	(bad)
  4486b6:	sar    DWORD PTR [edi],0x29
  4486b9:	bnd jnp 0x448713
  4486bc:	gs mov dh,0x1c
  4486bf:	cmc    
  4486c0:	cmp    eax,esi
  4486c2:	xor    BYTE PTR [esi-0x711ecd5],cl
  4486c8:	mov    dl,BYTE PTR [esi+0x19e9c105]
  4486ce:	scas   eax,DWORD PTR es:[edi]
  4486cf:	pushf  
  4486d0:	arpl   WORD PTR [eax],si
  4486d2:	mov    ecx,ebp
  4486d4:	inc    esp
  4486d5:	sti    
  4486d6:	rcr    DWORD PTR [esi-0x26b2eb3d],0xf2
  4486dd:	and    ah,cl
  4486df:	mov    dh,0x61
  4486e1:	jne    0x448712
  4486e3:	xor    BYTE PTR [eax],ah
  4486e5:	jbe    0x448734
  4486e7:	pushf  
  4486e8:	adc    esp,DWORD PTR [esi-0x1b]
  4486eb:	jbe    0x448700
  4486ed:	js     0x4486a2
  4486ef:	xor    al,0x73
  4486f1:	sbb    ebp,DWORD PTR [edx-0x12]
  4486f4:	pop    es
  4486f5:	add    BYTE PTR [ebx+esi*1+0x19c700be],bl
  4486fc:	push   edx
  4486fd:	push   ecx
  4486fe:	push   eax
  4486ff:	sub    ah,BYTE PTR [edx+0x8abaaa8]
  448705:	sub    BYTE PTR [ebx-0x53],0x8e
  448709:	add    bl,BYTE PTR [ecx]
  44870b:	ret    0x632b
  44870e:	dec    esi
  44870f:	pop    ebx
  448710:	lods   al,BYTE PTR ss:[esi]
  448712:	lods   al,BYTE PTR ds:[esi]
  448713:	repz retf 
  448715:	pop    ds
  448716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448717:	ins    BYTE PTR es:[edi],dx
  448718:	cmp    edx,edi
  44871a:	jno    0x4486b3
  44871c:	dec    ecx
  44871d:	je     0x4486e4
  44871f:	jl     0x44874b
  448721:	adc    DWORD PTR [ecx],edi
  448723:	adc    esi,ebp
  448725:	pop    ecx
  448726:	mov    dh,0x8e
  448728:	mov    dh,0xf6
  44872a:	(bad)  
  44872b:	dec    esi
  44872c:	dec    ecx
  44872d:	shl    DWORD PTR [ebp+0x49da6fbe],1
  448733:	ins    DWORD PTR es:[edi],dx
  448734:	mov    eax,ds:0x9772d1e
  448739:	push   ds
  44873a:	out    0xdd,eax
  44873c:	cmp    eax,0x8cc1278
  448741:	mov    bh,0xc8
  448743:	outs   dx,BYTE PTR ds:[esi]
  448744:	arpl   WORD PTR [edi],ax
  448746:	js     0x448713
  448748:	adc    eax,0xce0cce14
  44874d:	hlt    
  44874e:	int    0x8e
  448750:	test   DWORD PTR [edx+0x72],0x903c41da
  448757:	mov    dl,0x80
  448759:	push   edi
  44875a:	stos   BYTE PTR es:[edi],al
  44875b:	jno    0x448731
  44875d:	retf   0x8b7c
  448760:	inc    ebp
  448761:	hlt    
  448762:	add    DWORD PTR [ebp+edi*1+0x62ed93bb],edi
  448769:	inc    ebx
  44876a:	popa   
  44876b:	cmp    BYTE PTR [esi-0x50],bl
  44876e:	push   eax
  44876f:	lods   al,BYTE PTR ds:[esi]
  448770:	cmp    al,BYTE PTR [ebx]
  448772:	add    ecx,DWORD PTR [ebx-0x64]
  448775:	jbe    0x448765
  448777:	imul   BYTE PTR [edi-0x1a8fb131]
  44877d:	gs scas eax,DWORD PTR es:[edi]
  44877f:	or     al,BYTE PTR [edi]
  448781:	inc    esi
  448782:	ja     0x448716
  448784:	xor    al,0x71
  448786:	xor    BYTE PTR [ecx+0xa],bl
  448789:	mov    ah,0x67
  44878b:	loope  0x44879f
  44878d:	push   ebx
  44878e:	dec    ecx
  44878f:	xor    al,0xf5
  448791:	sub    DWORD PTR cs:[ebp-0x1ecfcecd],edx
  448798:	dec    ebp
  448799:	test   ebx,ecx
  44879b:	mov    esp,0x13774569
  4487a0:	push   ds
  4487a1:	xchg   ebp,eax
  4487a2:	fs jmp 0xb8f9:0xc01c0336
  4487aa:	inc    eax
  4487ab:	repz push 0x9bb234fc
  4487b1:	cmp    eax,0xfb79c020
  4487b6:	test   BYTE PTR [ecx+0x5c],0x86
  4487ba:	cli    
  4487bb:	cmp    al,0xf7
  4487bd:	push   ebp
  4487be:	aas    
  4487bf:	xchg   ecx,eax
  4487c0:	push   esp
  4487c1:	dec    edx
  4487c2:	cwde   
  4487c3:	pop    es
  4487c4:	test   BYTE PTR [esi+0x6469e25],ch
  4487ca:	xlat   BYTE PTR ds:[ebx]
  4487cb:	jle    0x4487bf
  4487cd:	pop    ebx
  4487ce:	in     eax,0xa5
  4487d0:	push   edi
  4487d1:	inc    ebx
  4487d2:	jno    0x4487ed
  4487d4:	test   BYTE PTR [ebx+esi*2],dl
  4487d7:	xchg   cl,bh
  4487d9:	mov    eax,0xdf704c9c
  4487de:	add    ah,al
  4487e0:	int    0x73
  4487e2:	mov    al,ds:0x867c1ac5
  4487e7:	cmp    al,0xdc
  4487e9:	push   ecx
  4487ea:	and    eax,0xcd971a48
  4487ef:	jns    0x4487cc
  4487f1:	retf   
  4487f2:	nop
  4487f3:	or     al,cl
  4487f5:	mov    ch,0x3d
  4487f7:	jle    0x4487c8
  4487f9:	cmp    dl,al
  4487fb:	mov    bl,0x62
  4487fd:	push   edi
  4487fe:	dec    edx
  4487ff:	adc    al,0x30
  448801:	js     0x4487c3
  448803:	mov    eax,ecx
  448805:	mov    ebx,0xf34f7f0f
  44880a:	push   ss
  44880b:	ret    
  44880c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44880d:	dec    edi
  44880e:	gs imul esp,esi,0xaec620e7
  448815:	mov    BYTE PTR [esi],ch
  448817:	pushf  
  448818:	mov    cl,0xc6
  44881a:	xor    dh,ch
  44881c:	ds xchg esi,eax
  44881e:	cli    
  44881f:	(bad)  
  448820:	cli    
  448821:	mov    cl,0x54
  448823:	mov    dl,0xc7
  448825:	loopne 0x4488a0
  448827:	xchg   esp,eax
  448828:	adc    eax,0x535a678d
  44882d:	out    0xf5,eax
  44882f:	sbb    BYTE PTR [edi+0x59cb44e1],al
  448835:	cmp    DWORD PTR gs:[ebx],edi
  448838:	leave  
  448839:	into   
  44883a:	pop    esi
  44883b:	jno    0x4487d4
  44883d:	imul   edi,DWORD PTR ds:0xff69c2ef,0x65
  448844:	xchg   ebx,eax
  448845:	fld    DWORD PTR [ecx-0x7f]
  448848:	mov    ch,0x5d
  44884a:	call   0x8f23:0x410c851e
  448851:	xchg   esp,eax
  448852:	cmp    al,0x93
  448854:	sbb    esp,DWORD PTR [esp+eiz*4-0x50]
  448858:	jg     0x4488d6
  44885a:	retf   
  44885b:	cmc    
  44885c:	and    al,BYTE PTR [ecx]
  44885e:	cmp    eax,0xd990800c
  448863:	mov    ds:0xa1c81442,al
  448868:	call   0x8bb93a9d
  44886d:	scas   eax,DWORD PTR es:[edi]
  44886e:	jle    0x4488d3
  448870:	repz pop edi
  448872:	sub    DWORD PTR [edx],ebx
  448874:	cdq    
  448875:	daa    
  448876:	ror    DWORD PTR [edx],cl
  448878:	scas   al,BYTE PTR es:[edi]
  448879:	scas   al,BYTE PTR es:[edi]
  44887a:	inc    edi
  44887b:	pop    edi
  44887c:	fbstp  TBYTE PTR [esp+edx*8-0x4b]
  448880:	fadd   st(0),st
  448882:	add    ebp,DWORD PTR [esi]
  448884:	ins    DWORD PTR es:[edi],dx
  448885:	stos   DWORD PTR es:[edi],eax
  448886:	dec    eax
  448887:	xchg   ecx,eax
  448888:	inc    esp
  448889:	ins    BYTE PTR es:[edi],dx
  44888a:	and    bh,BYTE PTR [ecx-0x6ebe1807]
  448890:	pop    ecx
  448891:	ins    BYTE PTR es:[edi],dx
  448892:	or     BYTE PTR [edx],0xba
  448895:	add    eax,0x90ca0cd7
  44889a:	ins    DWORD PTR es:[edi],dx
  44889b:	inc    edi
  44889c:	loopne 0x448828
  44889e:	adc    eax,0xe8c2cd7c
  4488a3:	mov    esi,0xc3da5e39
  4488a8:	sar    DWORD PTR [eax],cl
  4488aa:	jno    0x448837
  4488ac:	add    eax,0xb8b47096
  4488b1:	addr16 xchg ebx,edi
  4488b4:	add    DWORD PTR [edx],ecx
  4488b6:	add    BYTE PTR [esi+edx*1+0x54],ch
  4488ba:	rcl    DWORD PTR [esi-0x2ba755bc],cl
  4488c0:	test   ch,bh
  4488c2:	ds pop esp
  4488c4:	fxch   st(1)
  4488c6:	xor    bh,bl
  4488c8:	cmp    bh,BYTE PTR [bx+di-0xa]
  4488cc:	stos   DWORD PTR es:[edi],eax
  4488cd:	inc    DWORD PTR [ebx-0x42]
  4488d0:	aaa    
  4488d1:	lds    eax,FWORD PTR [edi]
  4488d3:	retf   0xda80
  4488d6:	jecxz  0x4488c7
  4488d8:	ins    DWORD PTR es:[edi],dx
  4488d9:	and    BYTE PTR [ecx-0x74],0xeb
  4488dd:	xchg   BYTE PTR [edx],dh
  4488df:	inc    ecx
  4488e0:	fwait
  4488e1:	mov    dh,BYTE PTR [ecx-0x46f99f0e]
  4488e7:	xchg   edx,eax
  4488e8:	ins    BYTE PTR es:[edi],dx
  4488e9:	fld    DWORD PTR [edi]
  4488eb:	rcl    bl,0x28
  4488ee:	(bad)  
  4488ef:	in     eax,0xe2
  4488f1:	ror    edi,0x93
  4488f4:	pop    ecx
  4488f5:	sahf   
  4488f6:	cs inc ecx
  4488f8:	xchg   ebx,eax
  4488f9:	fld    QWORD PTR [edx]
  4488fb:	dec    ecx
  4488fc:	retf   0xd274
  4488ff:	cwde   
  448900:	enter  0x6feb,0xcd
  448904:	lods   eax,DWORD PTR ds:[esi]
  448905:	(bad)  [edx]
  448907:	idiv   ecx
  448909:	mov    dh,0x6f
  44890b:	and    BYTE PTR [eax+0x6d],ch
  44890e:	popa   
  44890f:	push   esi
  448910:	pop    ds
  448911:	mov    DWORD PTR [esi-0x8],esi
  448914:	(bad)  
  448915:	scas   eax,DWORD PTR es:[edi]
  448916:	int3   
  448917:	ror    DWORD PTR [eax],0xf
  44891a:	jg     0x448955
  44891c:	sbb    al,0x78
  44891e:	and    DWORD PTR ds:0x38b88fe8,ebp
  448924:	test   al,0x56
  448926:	in     al,0x40
  448928:	mov    ch,BYTE PTR [ecx+0x5b0019cf]
  44892e:	leave  
  44892f:	mov    edx,0x9d62ebf0
  448934:	cmp    al,0xec
  448936:	mov    edx,DWORD PTR [esi-0x7d]
  448939:	pop    edx
  44893a:	adc    edx,DWORD PTR [ebx-0x14]
  44893d:	and    ah,BYTE PTR [eax+0x26]
  448940:	xor    BYTE PTR [esp+ebx*4],dl
  448943:	dec    ebp
  448944:	mov    fs,WORD PTR ds:0x86fcb774
  44894a:	mov    ?,WORD PTR [esi-0x7450d71d]
  448950:	cmp    eax,0x3d6e57d7
  448955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448956:	push   ss
  448957:	jmp    0x4489c1
  448959:	repnz mov ecx,0xeea7d127
  44895f:	push   ebx
  448960:	mov    eax,ds:0xa45bcb9f
  448965:	ins    BYTE PTR es:[edi],dx
  448966:	mov    ch,dl
  448968:	icebp  
  448969:	push   ebp
  44896a:	ja     0x448925
  44896c:	mov    dl,0xfa
  44896e:	inc    eax
  44896f:	jo     0x4489be
  448971:	mov    ch,0xbe
  448973:	push   cs
  448974:	sar    dl,cl
  448976:	mov    esi,DWORD PTR [ecx-0x2fa22aca]
  44897c:	lods   eax,DWORD PTR ds:[esi]
  44897d:	fsub   st,st(2)
  44897f:	stos   DWORD PTR es:[edi],eax
  448980:	(bad)  
  448981:	fsub   DWORD PTR [esp+eax*8+0x42ffdf83]
  448988:	or     esi,ebp
  44898a:	pop    ss
  44898b:	adc    eax,0x976bb12c
  448990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448991:	push   ecx
  448992:	xor    eax,0xef1e6bbd
  448997:	dec    ebx
  448998:	xchg   ecx,eax
  448999:	xchg   edx,eax
  44899a:	popa   
  44899b:	ja     0x4489b7
  44899d:	pop    edi
  44899e:	fst    QWORD PTR [edi-0x37f361e4]
  4489a4:	out    dx,eax
  4489a5:	sub    bh,BYTE PTR [edi-0x6e3c662b]
  4489ab:	dec    ebp
  4489ac:	and    eax,0xfcbda1c
  4489b1:	jecxz  0x448942
  4489b3:	xchg   edi,eax
  4489b4:	shl    BYTE PTR [eax-0x2983ef15],1
  4489ba:	xchg   edi,esp
  4489bc:	rol    ebx,1
  4489be:	clc    
  4489bf:	push   ecx
  4489c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4489c1:	pop    ebx
  4489c2:	lahf   
  4489c3:	(bad)  
  4489c4:	ss push edi
  4489c6:	fs push esi
  4489c8:	sbb    edi,DWORD PTR [ecx+0x4c]
  4489cb:	mov    dh,0x96
  4489cd:	bound  eax,QWORD PTR [eax]
  4489cf:	js     0x448993
  4489d1:	(bad)  
  4489d2:	xor    DWORD PTR [esi],edi
  4489d4:	lods   al,BYTE PTR ds:[esi]
  4489d5:	push   esp
  4489d6:	add    ebp,DWORD PTR [ebx-0x709f3ff7]
  4489dc:	or     DWORD PTR [eax+0x4d8cb0c0],ebp
  4489e2:	(bad)  
  4489e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4489e4:	pop    ebx
  4489e5:	lods   eax,DWORD PTR ds:[esi]
  4489e6:	cli    
  4489e7:	and    ebp,DWORD PTR [eax]
  4489e9:	scas   eax,DWORD PTR es:[edi]
  4489ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4489eb:	mov    al,0xb
  4489ed:	dec    esi
  4489ee:	aas    
  4489ef:	aas    
  4489f0:	imul   ebp,DWORD PTR [ebx+0x14],0xfffffffb
  4489f4:	lahf   
  4489f5:	popf   
  4489f6:	aam    0x6e
  4489f8:	lds    esp,FWORD PTR [edx]
  4489fa:	dec    eax
  4489fb:	jns    0x448a50
  4489fd:	outs   dx,BYTE PTR ds:[esi]
  4489fe:	sub    BYTE PTR [edi-0x46],bh
  448a01:	sub    BYTE PTR [ebx+0x70],cl
  448a04:	js     0x448a84
  448a06:	fst    DWORD PTR [edx]
  448a08:	push   esp
  448a09:	sbb    DWORD PTR [ebp-0x496f1123],esi
  448a0f:	sub    BYTE PTR [esi+0x37],bh
  448a12:	and    BYTE PTR [ebx-0xa38e3a0],cl
  448a18:	imul   eax,DWORD PTR [edi],0x5e261081
  448a1e:	push   cs
  448a1f:	cmp    al,0x4a
  448a21:	xchg   ecx,eax
  448a22:	pop    edx
  448a23:	and    bh,BYTE PTR [esi+0x6a]
  448a26:	mov    eax,0x8db985ac
  448a2b:	xchg   ecx,eax
  448a2c:	or     DWORD PTR [ecx],0xffffffd7
  448a2f:	push   0x1b0d6c1f
  448a34:	pushf  
  448a35:	lods   al,BYTE PTR ds:[esi]
  448a36:	pop    ecx
  448a37:	pusha  
  448a38:	fwait
  448a39:	xor    ebx,DWORD PTR [ebp+ebp*2+0x55e8270e]
  448a40:	mov    eax,0x1c428961
  448a45:	sub    bh,BYTE PTR [eax+0x27164678]
  448a4b:	mov    ecx,DWORD PTR [eax+0x45]
  448a4e:	mov    al,0xb7
  448a50:	xchg   edx,eax
  448a51:	sub    esi,ebx
  448a53:	sub    BYTE PTR [ecx-0x4f],ah
  448a56:	mov    ch,0x78
  448a58:	fwait
  448a59:	pop    DWORD PTR [ebx-0x7787b53e]
  448a5f:	or     DWORD PTR [ebp+0xd],ebp
  448a62:	ins    BYTE PTR es:[edi],dx
  448a63:	test   DWORD PTR ds:0x5bdd5227,ecx
  448a69:	int    0xbe
  448a6b:	mov    eax,0x256441a6
  448a70:	addr16 retf 0xc77d
  448a74:	mov    bh,0xdb
  448a76:	mov    DWORD PTR ds:0x80a287e9,eax
  448a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448a7d:	cli    
  448a7e:	call   0x5509:0x88c05231
  448a85:	jmp    0x448a0d
  448a87:	ja     0x448a54
  448a89:	fimul  WORD PTR [edx]
  448a8b:	outs   dx,BYTE PTR ds:[esi]
  448a8c:	(bad)  
  448a8d:	lea    edi,[ecx+0x40907a69]
  448a93:	xchg   edi,eax
  448a94:	push   ebp
  448a95:	push   ecx
  448a96:	rcr    BYTE PTR [ebp+0x1],0x80
  448a9a:	adc    ebx,DWORD PTR [ebp-0xc5c1424]
  448aa0:	lds    edx,FWORD PTR ds:0x40ee5ce8
  448aa6:	push   cs
  448aa7:	push   edi
  448aa8:	sbb    al,0x9a
  448aaa:	pop    sp
  448aac:	push   ecx
  448aad:	sar    DWORD PTR [edi],1
  448aaf:	inc    edi
  448ab0:	lods   al,BYTE PTR ds:[esi]
  448ab1:	ds mov cl,0xef
  448ab4:	jg     0x448a6b
  448ab6:	mov    al,ds:0xc600d20
  448abb:	(bad)  
  448abc:	cld    
  448abd:	pop    edi
  448abe:	cmp    eax,0xef218e32
  448ac3:	push   esi
  448ac4:	jmp    0x448a5f
  448ac6:	int3   
  448ac7:	rcr    BYTE PTR [ecx-0xd],cl
  448aca:	cmp    dh,BYTE PTR [esi+eax*2]
  448acd:	sbb    dh,ah
  448acf:	leave  
  448ad0:	daa    
  448ad1:	push   esp
  448ad2:	lahf   
  448ad3:	daa    
  448ad4:	fimul  WORD PTR [eax-0x1de55b6]
  448ada:	cdq    
  448adb:	inc    esi
  448adc:	in     eax,0x0
  448ade:	icebp  
  448adf:	cmc    
  448ae0:	(bad)  
  448ae1:	mov    ebx,0x7d6041ab
  448ae6:	push   edi
  448ae7:	ss and BYTE PTR ss:[edi],0x47
  448aec:	mov    cl,0x41
  448aee:	outs   dx,DWORD PTR ds:[esi]
  448aef:	in     eax,0x59
  448af1:	mov    ch,0x84
  448af3:	mov    edx,0xf410198b
  448af8:	pop    ebp
  448af9:	ja     0x448ada
  448afb:	or     BYTE PTR [ebx-0x521610d9],0x2d
  448b02:	sub    al,0x1f
  448b04:	mov    eax,ds:0xe7e4567a
  448b09:	add    DWORD PTR [ecx],0x8
  448b0c:	pop    esi
  448b0d:	fst    DWORD PTR [edx+0x48]
  448b10:	(bad)  
  448b11:	or     eax,DWORD PTR [ecx]
  448b13:	mov    cl,0xbf
  448b15:	out    dx,eax
  448b16:	jbe    0x448ac8
  448b18:	inc    edi
  448b19:	and    DWORD PTR [edi-0x3e2fc9d9],esi
  448b1f:	scas   al,BYTE PTR es:[edi]
  448b20:	push   edi
  448b21:	inc    BYTE PTR [esi-0x14066d2e]
  448b27:	ror    ebp,0x6
  448b2a:	jg     0x448acc
  448b2c:	lods   al,BYTE PTR ds:[esi]
  448b2d:	xchg   DWORD PTR [edx],esp
  448b2f:	jno    0x448b9d
  448b31:	test   eax,0xf5bf0ac3
  448b36:	mov    esp,0x4c3f34e
  448b3b:	out    dx,al
  448b3c:	inc    ebx
  448b3d:	mov    dl,0xfd
  448b3f:	xlat   BYTE PTR gs:[ebx]
  448b41:	fld    DWORD PTR [ebx+0x3ba41148]
  448b47:	mov    al,ds:0xdb307b4c
  448b4c:	push   0x1215eb35
  448b51:	cmp    BYTE PTR [esi-0x43],0x64
  448b55:	add    bh,BYTE PTR [ebp-0x52b3f787]
  448b5b:	mov    eax,ds:0x5c7d1ecc
  448b60:	adc    dh,BYTE PTR [edi+eiz*2-0x1f1c3e41]
  448b67:	loope  0x448b0a
  448b69:	mov    ebx,0x59a3483a
  448b6e:	sbb    bh,dl
  448b70:	gs pop eax
  448b72:	sbb    bh,dh
  448b74:	idiv   bh
  448b76:	into   
  448b77:	fisubr DWORD PTR [edx-0x3f]
  448b7a:	mov    esp,0x3baabe70
  448b7f:	cmp    eax,0x15c5ef15
  448b84:	div    DWORD PTR [eax]
  448b86:	dec    esi
  448b87:	add    ch,dh
  448b89:	jge    0x448be0
  448b8b:	pop    edi
  448b8c:	leave  
  448b8d:	out    dx,eax
  448b8e:	sub    al,0x6a
  448b90:	popa   
  448b91:	cmp    bl,BYTE PTR [edi]
  448b93:	fs fwait
  448b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448b96:	mov    edi,0xc37919db
  448b9b:	mov    ds:0xd65c2cab,al
  448ba0:	push   ecx
  448ba1:	pop    edi
  448ba2:	jae    0x448b35
  448ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448ba5:	and    bl,dl
  448ba7:	outs   dx,BYTE PTR ds:[esi]
  448ba8:	sub    eax,0xe27bbe2e
  448bad:	sbb    DWORD PTR [ecx],eax
  448baf:	sbb    ecx,ecx
  448bb1:	push   edi
  448bb2:	les    edx,FWORD PTR [edi+0x1]
  448bb5:	mov    ebx,0x6bfa8d24
  448bba:	fimul  WORD PTR [ebx-0x793654de]
  448bc0:	mov    ecx,0xb8222012
  448bc5:	cmp    esi,DWORD PTR [ecx-0xc54448b]
  448bcb:	int    0x67
  448bcd:	push   ss
  448bce:	add    eax,0x1367ef4a
  448bd3:	lahf   
  448bd4:	ficomp DWORD PTR [ebp-0x5b7e905]
  448bda:	imul   DWORD PTR [ecx-0x10]
  448bdd:	imul   ebp,DWORD PTR [ebx],0xffffff83
  448be0:	add    dh,BYTE PTR [ecx+0x6716a787]
  448be6:	push   ds
  448be7:	sub    BYTE PTR [eax-0x6af1bf0b],cl
  448bed:	ret    
  448bee:	sbb    DWORD PTR [eax-0x18],0x173c92df
  448bf5:	lods   eax,DWORD PTR ds:[esi]
  448bf6:	iret   
  448bf7:	mov    ebx,DWORD PTR [edi+eiz*8-0x24]
  448bfb:	std    
  448bfc:	xchg   BYTE PTR [ebx],dh
  448bfe:	jne    0x448c2e
  448c00:	mov    al,ds:0x24af2582
  448c05:	adc    al,0xfc
  448c07:	fist   DWORD PTR [ebx-0x56]
  448c0a:	pop    edx
  448c0b:	or     cl,BYTE PTR [ebx]
  448c0d:	sub    ebx,DWORD PTR [ebx+0x3c7cf4e2]
  448c13:	ret    
  448c14:	clc    
  448c15:	sub    BYTE PTR [ecx+edi*1-0x48],ch
  448c19:	pop    es
  448c1a:	adc    DWORD PTR [ebp+0x1c4a7ed7],ebp
  448c20:	sahf   
  448c21:	mov    bh,0xb8
  448c23:	cmc    
  448c24:	inc    esi
  448c25:	ins    DWORD PTR es:[edi],dx
  448c26:	jp     0x448c56
  448c28:	retf   0x5fbb
  448c2b:	sub    al,0xc1
  448c2d:	mul    BYTE PTR [edi-0x53]
  448c30:	pop    ebx
  448c31:	dec    edx
  448c32:	shl    DWORD PTR [edi+0x2b],1
  448c35:	lock add DWORD PTR [ecx+edi*2+0x74],esp
  448c3a:	mov    dh,0x7a
  448c3c:	mov    eax,ds:0xf62730dd
  448c41:	dec    edi
  448c42:	stos   DWORD PTR es:[edi],eax
  448c43:	int    0x90
  448c45:	xor    BYTE PTR [eax+esi*8],cl
  448c48:	imul   edi,DWORD PTR [ebp-0x2102c602],0xfffffffa
  448c4f:	imul   ecx,DWORD PTR [esi-0x398e050],0x3d39cecf
  448c59:	sub    DWORD PTR [eax+0x2e6f0e4f],0x44
  448c60:	scas   eax,DWORD PTR es:[edi]
  448c61:	push   ebx
  448c62:	or     BYTE PTR [eax-0x1c6e32fd],ah
  448c68:	pop    es
  448c69:	or     esp,edx
  448c6b:	jle    0x448c06
  448c6d:	pop    esi
  448c6e:	mov    ecx,0x79c2f696
  448c73:	push   esi
  448c74:	mov    bl,0xa5
  448c76:	sub    DWORD PTR [ebx],esp
  448c78:	jmp    0x3efe8a16
  448c7d:	shl    BYTE PTR [esi],0xa6
  448c80:	inc    edi
  448c81:	fdivr  DWORD PTR [edi]
  448c83:	pusha  
  448c84:	mov    WORD PTR [edx],ss
  448c86:	out    dx,al
  448c87:	and    DWORD PTR [esi-0x1080bce6],ecx
  448c8d:	push   0x69f1f95a
  448c92:	hlt    
  448c93:	xchg   edi,eax
  448c94:	in     al,0xec
  448c96:	mov    esp,0x3ed13edf
  448c9b:	ucomiss xmm5,DWORD PTR [edx+0x5024459d]
  448ca2:	sbb    edi,eax
  448ca4:	daa    
  448ca5:	mov    bh,0xec
  448ca7:	pop    esp
  448ca8:	push   edi
  448ca9:	add    al,0x3b
  448cab:	test   DWORD PTR [ebx-0x42ce3825],0xe4681ae4
  448cb5:	push   edi
  448cb6:	push   ebp
  448cb7:	shl    DWORD PTR [ebp+0x664ee69e],cl
  448cbd:	push   ebx
  448cbe:	in     eax,0x46
  448cc0:	or     BYTE PTR [edx+edx*2-0x78],0xfd
  448cc5:	xchg   ebp,eax
  448cc6:	in     eax,dx
  448cc7:	cld    
  448cc8:	pop    edx
  448cc9:	cwde   
  448cca:	push   ebp
  448ccb:	repnz cwde 
  448ccd:	jle    0x448c6a
  448ccf:	dec    edi
  448cd0:	or     BYTE PTR [esi+ebp*8-0x23],dl
  448cd4:	and    DWORD PTR [esi],esp
  448cd6:	jae    0x448cf8
  448cd8:	jne    0x448c6b
  448cda:	outs   dx,DWORD PTR ds:[esi]
  448cdb:	sbb    DWORD PTR [ebx-0x6],0x69064748
  448ce2:	mov    bl,0xc8
  448ce4:	imul   BYTE PTR [ecx-0x4d]
  448ce7:	int3   
  448ce8:	xchg   esi,eax
  448ce9:	adc    ch,BYTE PTR fs:[ebp-0x58]
  448ced:	cli    
  448cee:	mov    BYTE PTR [edi-0x3],cl
  448cf1:	mov    DWORD PTR [edx],0x4cc9c99c
  448cf7:	jne    0x448d1f
  448cf9:	lds    edx,FWORD PTR [ebx-0x83cb327]
  448cff:	aad    0x26
  448d01:	sbb    edx,DWORD PTR [esi-0x25]
  448d04:	mov    ss,WORD PTR [ebp+0x5f]
  448d07:	push   0x6e
  448d09:	adc    edx,DWORD PTR [edx+eiz*1]
  448d0c:	sub    DWORD PTR [edi+0x7c],esp
  448d0f:	daa    
  448d10:	or     esi,DWORD PTR [eax]
  448d12:	xchg   edx,eax
  448d13:	je     0x448d05
  448d15:	jae    0x448ccb
  448d17:	data16 add BYTE PTR [esi+0x63],ah
  448d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448d1c:	push   eax
  448d1d:	lahf   
  448d1e:	test   ebp,edi
  448d20:	(bad)  
  448d21:	fcmove st,st(6)
  448d23:	jecxz  0x448d16
  448d25:	mov    BYTE PTR ds:0xe5bc014c,0x6d
  448d2c:	mov    eax,0xfd5a1632
  448d31:	mov    al,0x1f
  448d33:	xlat   BYTE PTR ds:[ebx]
  448d34:	shl    DWORD PTR [edi+0x6151f41f],1
  448d3a:	inc    edi
  448d3b:	fistp  DWORD PTR [ebp-0x2d9fa9ef]
  448d41:	pop    ecx
  448d42:	loop   0x448d2b
  448d44:	mov    edi,0x2053827c
  448d49:	xchg   DWORD PTR [esi-0x5a],ebp
  448d4c:	call   0x13fc383a
  448d51:	cmp    al,0xa9
  448d53:	and    BYTE PTR [eax+0x4c],dl
  448d56:	xchg   edi,eax
  448d57:	pop    ecx
  448d58:	push   0xd9d0661c
  448d5d:	cmp    BYTE PTR [ebx+0x6b],bh
  448d60:	popw   ss
  448d62:	(bad)  
  448d63:	out    dx,al
  448d64:	in     eax,dx
  448d65:	iret   
  448d66:	test   DWORD PTR [ecx],0xa8c06ee
  448d6c:	lods   al,BYTE PTR ds:[esi]
  448d6d:	cwde   
  448d6e:	(bad)  
  448d6f:	repz sub esi,DWORD PTR [ecx+0x29]
  448d73:	sbb    DWORD PTR [edi-0x2f],ebp
  448d76:	or     al,0xae
  448d78:	or     BYTE PTR ds:0xd263ffc3,bl
  448d7e:	jbe    0x448dae
  448d80:	sub    al,0xca
  448d82:	cwde   
  448d83:	xlat   BYTE PTR ds:[ebx]
  448d84:	mov    ?,WORD PTR [edx]
  448d86:	sub    edi,DWORD PTR [ebx-0x72]
  448d89:	pop    esi
  448d8a:	cmp    edx,DWORD PTR ds:0xcc3b6b1e
  448d90:	ja     0x448d56
  448d92:	iret   
  448d93:	in     al,0xb5
  448d95:	(bad)  
  448d97:	int3   
  448d98:	dec    DWORD PTR [edx+0x6f]
  448d9b:	sub    al,0x21
  448d9d:	sbb    BYTE PTR [edx-0x17cae614],dl
  448da3:	add    al,dh
  448da5:	clc    
  448da6:	xor    bl,BYTE PTR [edx+eax*4]
  448da9:	arpl   WORD PTR [ebx],cx
  448dab:	xlat   BYTE PTR ds:[ebx]
  448dac:	adc    ah,BYTE PTR [ecx]
  448dae:	sub    al,0xc9
  448db0:	mov    esp,0xad793b46
  448db5:	jns    0x448de9
  448db7:	les    ebp,FWORD PTR [ebx+0x1bb60ee1]
  448dbd:	(bad)  
  448dbe:	test   al,0xe4
  448dc0:	mov    dh,0x5c
  448dc2:	lea    ebx,[edx-0x1fd3e655]
  448dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448dc9:	and    al,0x4b
  448dcb:	xor    eax,0xa4a022eb
  448dd0:	xchg   ebx,eax
  448dd1:	retf   
  448dd2:	sbb    bh,ah
  448dd4:	cmp    dh,bl
  448dd6:	test   DWORD PTR ds:0xc48a656e,eax
  448ddc:	rcl    BYTE PTR [ecx+0x25],1
  448ddf:	xor    edi,ecx
  448de1:	enter  0x783a,0x18
  448de5:	jnp    0x448dde
  448de7:	outs   dx,DWORD PTR ds:[esi]
  448de8:	out    0x60,al
  448dea:	xchg   edi,eax
  448deb:	pop    ebp
  448dec:	hlt    
  448ded:	enter  0xbb32,0xae
  448df1:	popa   
  448df2:	rcl    DWORD PTR [esi-0x26674ffe],cl
  448df8:	xchg   edx,eax
  448df9:	and    esp,ebx
  448dfb:	sbb    DWORD PTR ds:0xa368a117,ecx
  448e01:	adc    ah,BYTE PTR [edi+0x2810e0ab]
  448e07:	imul   edx,DWORD PTR [ebx-0x18],0x69
  448e0b:	sub    eax,0x2be19420
  448e10:	stc    
  448e11:	push   es
  448e12:	add    cl,BYTE PTR [edi]
  448e14:	xchg   esi,eax
  448e15:	push   eax
  448e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448e17:	mov    edx,0x371251bd
  448e1c:	adc    BYTE PTR [ecx],dh
  448e1e:	or     eax,0x12458fc1
  448e23:	jmp    0x472c:0x7fc5c678
  448e2a:	in     al,dx
  448e2b:	call   0x314:0x776bbf71
  448e32:	outs   dx,DWORD PTR ds:[esi]
  448e33:	jecxz  0x448ea2
  448e35:	jg     0x448e44
  448e37:	or     eax,0xddac664f
  448e3c:	or     dh,dh
  448e3e:	popf   
  448e3f:	xor    BYTE PTR [ecx],0x14
  448e42:	(bad)  
  448e43:	push   esp
  448e44:	push   ebp
  448e45:	or     BYTE PTR [edi],al
  448e47:	sti    
  448e48:	and    eax,0xb1387578
  448e4d:	test   eax,0xd78f1e69
  448e52:	rcl    BYTE PTR [esi],1
  448e54:	or     ah,BYTE PTR [ecx+0x6ff91fb0]
  448e5a:	xor    DWORD PTR [esi+edx*2-0x2f],esp
  448e5e:	and    ebp,DWORD PTR [ebx]
  448e60:	es push edi
  448e62:	sbb    DWORD PTR [esi-0x58],edx
  448e65:	aas    
  448e66:	adc    eax,0x97e4b2f1
  448e6b:	jmp    0x448e54
  448e6d:	enter  0xf9e7,0x4c
  448e71:	ja     0x448ea7
  448e73:	xchg   ecx,eax
  448e74:	mov    eax,0x10957a73
  448e79:	add    ecx,DWORD PTR [edi]
  448e7b:	sub    al,0x26
  448e7d:	fnstsw WORD PTR [esi]
  448e7f:	mov    DWORD PTR [ecx],edi
  448e81:	sbb    esp,DWORD PTR [edi+0x6e7dadd7]
  448e87:	test   DWORD PTR [eax-0x60],0xfc659a53
  448e8e:	jbe    0x448e41
  448e90:	(bad)
  448e93:	sahf   
  448e94:	or     BYTE PTR [ebx+0xd],ah
  448e97:	and    ebp,DWORD PTR cs:[edx+0x61f08035]
  448e9e:	mov    ebp,0x532ff3e
  448ea3:	sar    BYTE PTR [eax+0x292ba2d4],cl
  448ea9:	xchg   esp,eax
  448eaa:	xor    eax,0xc47e20c7
  448eaf:	(bad)  
  448eb1:	xrelease xchg DWORD PTR [esi],ecx
  448eb4:	outs   dx,DWORD PTR ds:[esi]
  448eb5:	push   ds
  448eb6:	leave  
  448eb7:	xchg   ecx,eax
  448eb8:	outs   dx,DWORD PTR ds:[esi]
  448eb9:	retf   
  448eba:	jle    0x448f0c
  448ebc:	mov    ds,WORD PTR [edi+0x5174f33e]
  448ec2:	jb     0x448ed9
  448ec4:	sub    esp,edi
  448ec6:	sub    eax,0x25f3d266
  448ecb:	loope  0x448ec4
  448ecd:	sbb    eax,0x5d0eee9d
  448ed2:	add    esi,DWORD PTR [ebx+0x42]
  448ed5:	mov    WORD PTR [esi],?
  448ed7:	mov    esi,0xf91d9c0
  448edc:	fcmovnbe st,st(0)
  448ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448edf:	sbb    DWORD PTR [eax+0x441b1552],edi
  448ee5:	inc    ebx
  448ee6:	jns    0x448f09
  448ee8:	cmp    ecx,DWORD PTR [ebp-0xf]
  448eeb:	test   esi,esp
  448eed:	lahf   
  448eee:	cmp    al,0xe
  448ef0:	dec    DWORD PTR [ebx]
  448ef2:	data16 in al,0x87
  448ef5:	sahf   
  448ef6:	add    eax,0xcb5a3695
  448efb:	xchg   edx,eax
  448efc:	xchg   ebx,eax
  448efd:	xchg   esp,eax
  448efe:	imul   DWORD PTR [edi]
  448f00:	xlat   BYTE PTR ds:[ebx]
  448f01:	jmp    0x448ea8
  448f03:	test   al,0x3d
  448f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448f06:	xor    al,0x22
  448f08:	mov    eax,DWORD PTR [edi-0x41]
  448f0b:	adc    DWORD PTR [eax],ebp
  448f0d:	xor    BYTE PTR [ebp-0x54],al
  448f10:	mov    esi,0x85fe2de9
  448f15:	adc    dl,bh
  448f17:	sbb    BYTE PTR [edi-0x61],bh
  448f1a:	into   
  448f1b:	fst    DWORD PTR [ebx]
  448f1d:	mov    al,ds:0xfbb7669e
  448f22:	pop    esi
  448f23:	mov    al,0x1d
  448f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448f26:	pop    esi
  448f27:	shl    BYTE PTR [ebx],0x9d
  448f2a:	mov    ebp,DWORD PTR ds:0x11d7eaff
  448f30:	and    DWORD PTR [esi+0x1318f493],esp
  448f36:	mov    bh,0x87
  448f38:	adc    DWORD PTR [edi+0x2fafe553],edi
  448f3e:	ins    BYTE PTR es:[edi],dx
  448f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448f40:	call   0x6f324830
  448f45:	cld    
  448f46:	jns    0x448f80
  448f48:	inc    eax
  448f49:	cdq    
  448f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448f4b:	inc    ebx
  448f4c:	cdq    
  448f4d:	pop    ds
  448f4e:	pop    edx
  448f4f:	shl    BYTE PTR [edi-0x6e],cl
  448f52:	mov    cl,BYTE PTR [eax+edx*4+0x2c]
  448f56:	das    
  448f57:	test   eax,0xddc3b88b
  448f5c:	lock rol BYTE PTR [ebx-0x17],cl
  448f60:	pop    edx
  448f61:	push   ebx
  448f62:	in     al,0xb7
  448f64:	push   cs
  448f65:	cmp    eax,0xf9eff009
  448f6a:	(bad)  [eax+0x82cd5dc]
  448f70:	jb     0x448f22
  448f72:	(bad)  
  448f73:	cmp    al,0xf6
  448f75:	icebp  
  448f76:	sub    bl,0x93
  448f79:	xchg   ebx,eax
  448f7a:	ins    BYTE PTR es:[edi],dx
  448f7b:	xor    ebx,DWORD PTR [edi]
  448f7d:	xchg   ebp,eax
  448f7e:	neg    esi
  448f80:	pop    ss
  448f81:	cld    
  448f82:	js     0x448fa5
  448f84:	sbb    ch,dh
  448f86:	and    al,0xdb
  448f88:	mov    eax,0x1b374f97
  448f8d:	inc    eax
  448f8e:	jae    0x448fad
  448f90:	mov    edi,0x87d2e3da
  448f95:	xchg   ecx,eax
  448f96:	in     al,0x66
  448f98:	adc    al,0x8d
  448f9a:	sbb    ah,BYTE PTR [edi+0x13]
  448f9d:	jle    0x448fce
  448f9f:	and    ch,BYTE PTR [ebx+esi*2+0x6e]
  448fa3:	fistp  WORD PTR [ebx-0x1364da02]
  448fa9:	cmp    al,0x23
  448fab:	lahf   
  448fac:	fmul   QWORD PTR [ecx+0x36]
  448faf:	mov    bl,BYTE PTR [esi-0x336de62d]
  448fb5:	nop
  448fb6:	test   eax,0x24851da9
  448fbb:	(bad)  
  448fbd:	fild   WORD PTR [ebp+0x7f788924]
  448fc3:	icebp  
  448fc4:	xchg   ebx,eax
  448fc5:	in     al,dx
  448fc6:	ja     0x448fc2
  448fc8:	sbb    DWORD PTR [ebp-0x24dc026a],eax
  448fce:	in     al,0x2d
  448fd0:	std    
  448fd1:	mov    DWORD PTR [eax],ebx
  448fd3:	lods   eax,DWORD PTR ds:[esi]
  448fd4:	jne    0x448f80
  448fd6:	adc    ecx,DWORD PTR [edi-0x2e]
  448fd9:	bound  edi,QWORD PTR [edx]
  448fdb:	xchg   esp,eax
  448fdc:	mov    eax,0x65b90f14
  448fe1:	ret    
  448fe2:	std    
  448fe3:	mov    ebx,0x70912be1
  448fe8:	(bad)  
  448fe9:	call   0x74711356
  448fee:	jno    0x449049
  448ff0:	xor    DWORD PTR ds:0x251c4943,eax
  448ff6:	lods   al,BYTE PTR ds:[esi]
  448ff7:	jecxz  0x449038
  448ff9:	sti    
  448ffa:	mov    ds:0x931c846a,al
  448fff:	out    0x12,al
  449001:	dec    ebx
  449002:	dec    ebp
  449003:	push   es
  449004:	push   edx
  449005:	inc    edx
  449006:	pop    esp
  449007:	mov    cl,0xb1
  449009:	in     al,0x12
  44900b:	stos   BYTE PTR es:[edi],al
  44900c:	xchg   edi,eax
  44900d:	mov    edi,0xf08f350b
  449012:	(bad)  
  449014:	stc    
  449015:	in     al,0xc0
  449017:	mov    al,ds:0x65f80b80
  44901c:	lahf   
  44901d:	mov    ds:0x675c02df,al
  449022:	in     eax,dx
  449023:	cmp    BYTE PTR [ecx+0x56b771a1],0x22
  44902a:	out    0x64,al
  44902c:	jno    0x449026
  44902e:	xor    al,0x70
  449030:	mov    ah,BYTE PTR [esi+0x4f14eee6]
  449036:	xor    ebp,edi
  449038:	or     dh,BYTE PTR [eax-0x2c717fc1]
  44903e:	mov    ch,0x89
  449040:	out    0x63,al
  449042:	rol    BYTE PTR [edx+0x1b],cl
  449045:	cs mov dh,0xb
  449048:	jae    0x4490a8
  44904a:	scas   eax,DWORD PTR es:[edi]
  44904b:	je     0x449069
  44904d:	ss sub esp,edx
  449050:	ds jbe 0x449030
  449053:	ins    DWORD PTR es:[edi],dx
  449054:	dec    ebp
  449055:	call   0xf6d0ca35
  44905a:	iret   
  44905b:	mov    cl,0x7
  44905d:	fdiv   DWORD PTR [ebx]
  44905f:	stos   BYTE PTR es:[edi],al
  449060:	add    eax,0x12b07aaa
  449065:	adc    BYTE PTR [ecx+0x1],al
  449068:	sbb    eax,edi
  44906a:	adc    eax,0xba636b9
  44906f:	scas   al,BYTE PTR es:[edi]
  449070:	dec    ecx
  449071:	pcmpgtw mm7,QWORD PTR [edi-0x26]
  449075:	and    al,0x98
  449077:	pop    ebp
  449078:	sub    bh,BYTE PTR [ebx]
  44907a:	lods   eax,DWORD PTR ss:[esi]
  44907c:	sbb    eax,esp
  44907e:	shl    DWORD PTR [edx+0x13832b28],1
  449084:	pushf  
  449085:	out    0x9a,al
  449087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449088:	or     edi,DWORD PTR [edi+0x73b3e7a1]
  44908e:	jb     0x449077
  449090:	cmp    al,0xf4
  449092:	pop    esp
  449093:	ins    BYTE PTR es:[edi],dx
  449094:	dec    ebp
  449095:	int3   
  449096:	mov    esi,0x9ed9e4c1
  44909b:	jge    0x4490e8
  44909d:	(bad)  
  44909e:	dec    edx
  44909f:	adc    DWORD PTR [ebp+edx*8-0x51],edi
  4490a3:	inc    eax
  4490a4:	fwait
  4490a5:	jns    0x44906e
  4490a7:	rol    BYTE PTR [esi-0x2],1
  4490aa:	mov    WORD PTR [ebp-0x15],ss
  4490ad:	lds    esi,FWORD PTR [edi]
  4490af:	jo     0x44903f
  4490b1:	push   ebx
  4490b2:	sbb    al,0xee
  4490b4:	cmp    ch,BYTE PTR [esi+0x1805de58]
  4490ba:	sbb    ah,ch
  4490bc:	xchg   edi,eax
  4490bd:	inc    esi
  4490be:	add    BYTE PTR [esi],bl
  4490c0:	in     al,dx
  4490c1:	cmp    al,0x4e
  4490c3:	or     edi,eax
  4490c5:	ret    0x5aa6
  4490c8:	jns    0x4490db
  4490ca:	shl    ebx,cl
  4490cc:	test   BYTE PTR [ebx],0xa5
  4490cf:	sub    ebx,DWORD PTR [ecx+eiz*8]
  4490d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4490d3:	pushf  
  4490d4:	in     al,0xd3
  4490d6:	pop    ebp
  4490d7:	xor    DWORD PTR [ebx-0x1f],0xffffff8a
  4490db:	xchg   ebx,eax
  4490dc:	shr    BYTE PTR [edx+0x7c56c26],0xe8
  4490e3:	out    0xe8,al
  4490e5:	push   es
  4490e6:	add    BYTE PTR [ebx],0x25
  4490e9:	jb     0x44915e
  4490eb:	push   cs
  4490ec:	mov    edx,0xb28b1622
  4490f1:	repnz add eax,0x72e904db
  4490f7:	das    
  4490f8:	cld    
  4490f9:	icebp  
  4490fa:	pop    edi
  4490fb:	inc    ebp
  4490fc:	sahf   
  4490fd:	pop    ebx
  4490fe:	sbb    eax,ebx
  449100:	ret    
  449101:	fstp   TBYTE PTR [eax+0x3e]
  449104:	push   ebx
  449105:	lahf   
  449106:	push   ebp
  449107:	(bad)  
  449109:	call   0x3ef063ca
  44910e:	inc    edi
  44910f:	in     eax,0x7
  449111:	mov    eax,ds:0x9400db3b
  449116:	push   ebp
  449117:	mov    esp,0x346e27ec
  44911c:	cli    
  44911d:	push   ss
  44911e:	and    al,BYTE PTR [esi+0x38b41733]
  449124:	clc    
  449125:	and    al,0xf3
  449127:	lods   al,BYTE PTR ds:[esi]
  449128:	fsub   QWORD PTR [edi]
  44912a:	mov    ch,0xdc
  44912c:	push   eax
  44912d:	mov    esi,0x8a673a2d
  449132:	cdq    
  449133:	push   ss
  449134:	pop    ecx
  449135:	jge    0x449195
  449137:	jp     0x449142
  449139:	ja     0x4490c2
  44913b:	ins    BYTE PTR es:[edi],dx
  44913c:	inc    ecx
  44913d:	repz xchg esp,eax
  44913f:	xlat   BYTE PTR ds:[ebx]
  449140:	dec    edi
  449141:	mov    edx,0x505ac7a9
  449146:	pop    esi
  449147:	inc    edi
  449148:	test   BYTE PTR [ebx],bl
  44914a:	iret   
  44914b:	jle    0x4490e3
  44914d:	lds    edi,FWORD PTR [ecx-0x7b]
  449150:	xor    BYTE PTR [edx-0xe],cl
  449153:	gs jns 0x4491c9
  449156:	add    bh,0x83
  449159:	dec    ecx
  44915a:	sub    bh,BYTE PTR [edx+eiz*4-0x53521892]
  449161:	pop    edi
  449162:	mov    edx,0x77ff4b5
  449167:	sbb    al,0xba
  449169:	lock (bad) 
  44916b:	scas   eax,DWORD PTR es:[edi]
  44916c:	cmp    bl,0x6f
  44916f:	mov    ecx,0xe43dfbd9
  449174:	iret   
  449175:	jecxz  0x4491d9
  449177:	aam    0x48
  449179:	std    
  44917a:	jae    0x449133
  44917c:	xor    esi,DWORD PTR [esi-0x43]
  44917f:	add    esi,DWORD PTR [ecx+0x39]
  449182:	(bad)  
  449183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449184:	push   0x46
  449186:	mov    ds:0x4b0b9a08,al
  44918b:	and    bl,ah
  44918d:	fstp   DWORD PTR [esi+esi*1]
  449190:	je     0x44915b
  449192:	out    0x33,al
  449194:	mov    WORD PTR [eax-0x9a07317],es
  44919a:	sub    ebp,DWORD PTR [ecx+0x2b555ad8]
  4491a0:	out    0x6f,al
  4491a2:	xor    bl,cl
  4491a4:	bound  ebx,QWORD PTR ds:0x1b0ad652
  4491aa:	ficomp DWORD PTR [eax-0x13]
  4491ad:	jp     0x449135
  4491af:	mov    cs,WORD PTR [eax-0x387e14da]
  4491b5:	add    eax,0xe7e70523
  4491ba:	test   DWORD PTR [bp+si+0x3e4e],ecx
  4491bf:	std    
  4491c0:	mov    edi,0x97f6d3d6
  4491c5:	add    eax,0xe854c1f6
  4491ca:	aaa    
  4491cb:	lahf   
  4491cc:	xchg   ebp,eax
  4491cd:	lahf   
  4491ce:	rol    DWORD PTR [ecx+0x152f6008],0x6f
  4491d5:	lahf   
  4491d6:	jae    0x4491bc
  4491d8:	pop    ds
  4491d9:	aas    
  4491da:	xchg   ebx,eax
  4491db:	daa    
  4491dc:	mov    dh,0x7
  4491de:	jmp    0x404d:0x9eefa1cf
  4491e5:	add    ecx,DWORD PTR [ebx+0x1a1564f3]
  4491eb:	xchg   ecx,eax
  4491ec:	cwde   
  4491ed:	mov    ds:0xa72e4187,al
  4491f2:	adc    al,0xe2
  4491f4:	jl     0x449184
  4491f6:	(bad)  
  4491f7:	fucomip st,st(0)
  4491f9:	jae    0x449207
  4491fb:	aaa    
  4491fc:	pop    esp
  4491fd:	shr    esp,cl
  4491ff:	mov    edi,0xe03036dd
  449204:	cs retf 0x5211
  449208:	xchg   edx,eax
  449209:	cli    
  44920a:	jmp    0x4491d6
  44920c:	dec    eax
  44920d:	outs   dx,BYTE PTR ds:[esi]
  44920e:	and    ecx,DWORD PTR [esi-0x59]
  449211:	in     eax,dx
  449212:	push   es
  449213:	sbb    DWORD PTR [ebx],ebp
  449215:	js     0x44926e
  449217:	dec    ebp
  449218:	rcr    DWORD PTR [ebx],1
  44921a:	mov    edx,0x2cd7b0b7
  44921f:	sar    esp,1
  449221:	mov    ah,0x0
  449223:	jmp    0xffd93917
  449228:	pop    ecx
  449229:	jp     0x449227
  44922b:	adc    DWORD PTR [edx],ebx
  44922d:	jmp    0xa57bacbe
  449232:	push   0xa42e1a08
  449237:	jns    0x4491fc
  449239:	jno    0x44923e
  44923b:	push   esp
  44923c:	fsubr  QWORD PTR [esi-0x251f773a]
  449242:	pusha  
  449243:	pusha  
  449244:	push   esi
  449245:	lahf   
  449246:	loope  0x449272
  449248:	add    DWORD PTR [ebp+0x2a],eax
  44924b:	inc    eax
  44924c:	xchg   ebp,eax
  44924d:	mov    eax,DWORD PTR [ebx]
  44924f:	test   BYTE PTR [edx+0x639d45dd],cl
  449255:	fsubr  DWORD PTR [ebp+0x5eb00f1d]
  44925b:	jbe    0x449230
  44925d:	shr    BYTE PTR [esi-0x20],1
  449260:	cmp    DWORD PTR [eax],edi
  449262:	jmp    0x4d52:0xc0489719
  449269:	(bad)  
  44926a:	data16 adc bh,BYTE PTR [edx]
  44926d:	pop    esi
  44926e:	xlat   BYTE PTR ds:[bx]
  449270:	add    dl,ah
  449272:	dec    esi
  449273:	gs out 0x48,eax
  449276:	fucomi st,st(2)
  449278:	xor    ebx,DWORD PTR [edx-0x26309f65]
  44927e:	jns    0x44922d
  449280:	fld    TBYTE PTR [ecx-0x6c48a6fb]
  449286:	inc    ebp
  449287:	jp     0x44926e
  449289:	lds    eax,FWORD PTR [ebp-0x22]
  44928c:	fist   DWORD PTR [edi+ebp*4]
  44928f:	cli    
  449290:	push   ebx
  449291:	stos   BYTE PTR es:[edi],al
  449292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449293:	retf   
  449294:	add    bh,ch
  449296:	int    0x6f
  449298:	jo     0x4492f5
  44929a:	pop    ebp
  44929b:	lock fistp WORD PTR ds:0x44f10024
  4492a2:	lods   eax,DWORD PTR ds:[esi]
  4492a3:	push   edi
  4492a4:	call   0xab62:0xa787bb97
  4492ab:	out    dx,eax
  4492ac:	aaa    
  4492ad:	data16 in al,0x2a
  4492b0:	ds scas al,BYTE PTR es:[edi]
  4492b2:	and    bh,al
  4492b4:	sub    eax,0xaa56fe51
  4492b9:	inc    edi
  4492ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4492bb:	add    eax,0xf9089a68
  4492c0:	int3   
  4492c1:	add    eax,0x88d569de
  4492c6:	cmp    DWORD PTR [edx-0x41],edx
  4492c9:	js     0x449331
  4492cb:	and    ecx,DWORD PTR [ecx+0x24]
  4492ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4492cf:	xchg   ecx,eax
  4492d0:	add    ecx,esp
  4492d2:	adc    eax,0x1974a24b
  4492d7:	fiadd  DWORD PTR [edi]
  4492d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4492da:	sahf   
  4492db:	pop    es
  4492dc:	mov    edx,0x64d94d78
  4492e1:	nop
  4492e2:	out    dx,al
  4492e3:	nop
  4492e4:	(bad)  
  4492e5:	push   edi
  4492e6:	sbb    esp,DWORD PTR [edx+0x2b]
  4492e9:	std    
  4492ea:	in     al,dx
  4492eb:	mov    ebp,0xd15d48c0
  4492f0:	jecxz  0x4492b4
  4492f2:	mov    edx,0x2062de3f
  4492f7:	adc    al,0x45
  4492f9:	out    0xdf,al
  4492fb:	out    0x45,al
  4492fd:	jecxz  0x4492ce
  4492ff:	jp     0x4492a2
  449301:	repnz mov al,0xf3
  449304:	cld    
  449305:	push   ebp
  449306:	jecxz  0x4492c6
  449308:	cwde   
  449309:	pop    edi
  44930a:	jecxz  0x449341
  44930c:	pusha  
  44930d:	jmp    0x6c0d:0x7dccb777
  449314:	adc    BYTE PTR [esp+eiz*2+0x531a7a1a],ch
  44931b:	shl    dl,0x47
  44931e:	push   0x655983f4
  449323:	sub    BYTE PTR ds:[edi-0x5c],al
  449327:	enter  0xbf1,0x91
  44932b:	dec    esi
  44932c:	jbe    0x449398
  44932e:	inc    edx
  44932f:	leave  
  449330:	js     0x449382
  449332:	inc    eax
  449333:	mov    cl,0xcd
  449335:	sbb    BYTE PTR [ebp+0x4f69d4eb],dl
  44933b:	aas    
  44933c:	xchg   edi,eax
  44933d:	call   0xcb4548de
  449342:	xor    edx,DWORD PTR [ebp+0x2d4a25af]
  449348:	imul   esi,DWORD PTR [ebx+0x7e2ffa28],0xffffffb0
  44934f:	cs pusha 
  449351:	loope  0x4492e9
  449353:	jge    0x4492e6
  449355:	shl    BYTE PTR [ecx],cl
  449357:	(bad)  
  449358:	gs push edx
  44935a:	mov    bl,0xdf
  44935c:	xchg   ecx,eax
  44935d:	jbe    0x4493b4
  44935f:	add    DWORD PTR [ebx],ebp
  449361:	sub    eax,0xd270bcf4
  449366:	and    al,0xe7
  449368:	jnp    0x44931a
  44936a:	rcl    ch,0x8c
  44936d:	xchg   esi,eax
  44936e:	mov    ebp,0xdfc8e7dc
  449373:	iret   
  449374:	in     eax,dx
  449375:	pop    ecx
  449376:	cmp    eax,0x609bdc4a
  44937b:	clc    
  44937c:	out    dx,al
  44937d:	sbb    bl,BYTE PTR [ecx-0x5f1cb56d]
  449383:	in     eax,0x29
  449385:	and    BYTE PTR [ebx+0x46],ch
  449388:	(bad)  
  44938a:	inc    eax
  44938b:	inc    ebx
  44938c:	mov    edi,0x8dce6338
  449391:	pop    esi
  449392:	push   edx
  449393:	dec    ecx
  449394:	cld    
  449395:	push   ebx
  449396:	cmp    al,BYTE PTR [edi+0x6b10d50d]
  44939c:	jae    0x4493a1
  44939e:	mov    bl,0xf3
  4493a0:	fcom   st(3)
  4493a2:	dec    edx
  4493a3:	inc    ebp
  4493a4:	das    
  4493a5:	pop    edi
  4493a6:	jmp    0x4493bd
  4493a8:	not    ecx
  4493aa:	call   0x3164:0xee49e2cb
  4493b1:	(bad)  
  4493b2:	sahf   
  4493b3:	neg    BYTE PTR [edi+0x5b]
  4493b6:	jl     0x449395
  4493b8:	enter  0x8908,0x32
  4493bc:	call   0x8fe5e59b
  4493c1:	add    eax,0xf1d03da2
  4493c6:	repnz or BYTE PTR gs:[edi-0x7b8ee87a],dl
  4493ce:	ret    0x3601
  4493d1:	sbb    dh,dl
  4493d3:	cmp    eax,0x3067c856
  4493d8:	rcl    DWORD PTR ds:0xf2ad324,1
  4493de:	adc    al,0x50
  4493e0:	ds push ss
  4493e2:	test   BYTE PTR [ebx],0x21
  4493e5:	or     BYTE PTR [ebp+0x59c48b2],dl
  4493eb:	add    cl,BYTE PTR [esi-0x68f99565]
  4493f1:	jae    0x44942d
  4493f3:	add    al,0xd4
  4493f5:	retf   
  4493f6:	fild   DWORD PTR [ebp-0x70]
  4493f9:	mov    DWORD PTR [eax+0x51],esi
  4493fc:	jmp    0x4493f6
  4493fe:	sub    esi,esp
  449400:	adc    al,BYTE PTR [edx+0x7a43d8c5]
  449406:	pop    ebp
  449407:	(bad)  
  449408:	scas   al,BYTE PTR es:[edi]
  449409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44940a:	push   edx
  44940b:	int    0x89
  44940d:	pop    ds
  44940e:	cdq    
  44940f:	aad    0xcf
  449411:	lahf   
  449412:	push   0xa98f60e7
  449417:	xchg   ebx,eax
  449418:	pop    ds
  449419:	jl     0x4493b1
  44941b:	xchg   DWORD PTR [esi],ebp
  44941d:	pushf  
  44941e:	stos   DWORD PTR es:[edi],eax
  44941f:	inc    esp
  449420:	div    BYTE PTR [edi-0x9]
  449423:	push   esp
  449424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449425:	stc    
  449426:	retf   0xffa1
  449429:	mov    dl,0x9
  44942b:	cmp    BYTE PTR [ecx+esi*2],ch
  44942e:	xchg   BYTE PTR [esi+eax*4],dl
  449431:	add    al,0x6f
  449433:	outs   dx,DWORD PTR ds:[esi]
  449434:	push   0xf852423e
  449439:	jae    0x449407
  44943b:	fidivr DWORD PTR [edi-0x613c92a5]
  449441:	mov    WORD PTR [edi-0x5fc510a9],ds
  449447:	icebp  
  449448:	inc    esp
  449449:	sub    al,0xa1
  44944b:	call   0x376df9ad
  449450:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  449452:	cmp    ch,ch
  449454:	adc    DWORD PTR [esi-0x9],edx
  449457:	sbb    bl,ah
  449459:	aas    
  44945a:	adc    eax,0x94d45eaa
  44945f:	retf   
  449460:	loope  0x4493f9
  449462:	jae    0x4494dc
  449464:	or     al,0x31
  449466:	fsub   DWORD PTR [edx-0x32f5380]
  44946c:	not    DWORD PTR [ecx]
  44946e:	iret   
  44946f:	pusha  
  449470:	mov    al,0x93
  449472:	mov    eax,0xcf7bc85e
  449477:	inc    ebx
  449478:	mov    esp,0x3ab3f0f2
  44947d:	pop    esp
  44947e:	inc    ebx
  44947f:	ss jmp 0x4494a2
  449482:	jecxz  0x449454
  449484:	mov    ah,0x7f
  449486:	and    edx,esi
  449488:	push   ebp
  449489:	and    DWORD PTR [ebx-0x74],eax
  44948c:	adc    eax,0x18eae4cb
  449491:	or     ebx,DWORD PTR cs:[ecx]
  449494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449495:	dec    esi
  449496:	push   es
  449497:	inc    ebp
  449498:	add    bh,BYTE PTR [ebx-0x22]
  44949b:	add    BYTE PTR [edi],ch
  44949d:	loop   0x449503
  44949f:	mov    al,ds:0xc0f52679
  4494a4:	clc    
  4494a5:	or     eax,0x7c91c458
  4494aa:	or     DWORD PTR [ebx],ecx
  4494ac:	jle    0x449512
  4494ae:	sub    ebx,edi
  4494b0:	ja     0x449474
  4494b2:	hlt    
  4494b3:	aas    
  4494b4:	test   BYTE PTR [ebp-0xc],ah
  4494b7:	xchg   esp,eax
  4494b8:	dec    ebp
  4494b9:	jne    0x44943e
  4494bb:	inc    BYTE PTR [ebx-0x4c]
  4494be:	into   
  4494bf:	pop    eax
  4494c0:	add    bh,cl
  4494c2:	scas   eax,DWORD PTR es:[edi]
  4494c3:	dec    edx
  4494c4:	jbe    0x4494e9
  4494c6:	shr    BYTE PTR [esi-0x4240cc0c],0x1
  4494cd:	ins    BYTE PTR es:[edi],dx
  4494ce:	in     al,dx
  4494cf:	aas    
  4494d0:	fsubrp st(1),st
  4494d2:	jmp    0x44948d
  4494d4:	ret    
  4494d5:	iret   
  4494d6:	push   cs
  4494d7:	out    0x43,al
  4494d9:	ss int3 
  4494db:	shl    DWORD PTR [eax+0x2b],0x8
  4494df:	and    esp,ebp
  4494e1:	inc    ebx
  4494e2:	or     bh,bh
  4494e4:	sbb    BYTE PTR [eax-0x48],0xe6
  4494e8:	into   
  4494e9:	pusha  
  4494ea:	(bad)  
  4494eb:	iret   
  4494ec:	loope  0x4494fd
  4494ee:	add    ecx,DWORD PTR [eax+ebx*2-0x2c08cdde]
  4494f5:	jnp    0x449513
  4494f7:	cwde   
  4494f8:	daa    
  4494f9:	sahf   
  4494fa:	adc    BYTE PTR [edi-0xd],al
  4494fd:	mov    al,ds:0xc0325ab3
  449502:	test   al,0xac
  449504:	xor    bl,BYTE PTR [esi]
  449506:	mov    bh,BYTE PTR ds:0x8591db19
  44950c:	and    DWORD PTR [ebx-0x63],0x35
  449510:	jno    0x4494a0
  449512:	lods   eax,DWORD PTR ds:[esi]
  449513:	mov    BYTE PTR [ecx+edx*4],ah
  449516:	push   es
  449517:	lods   eax,DWORD PTR ds:[esi]
  449518:	mov    esp,0xa2c6c112
  44951d:	outs   dx,DWORD PTR ds:[esi]
  44951e:	hlt    
  44951f:	(bad)  
  449520:	pop    edi
  449521:	outs   dx,DWORD PTR ds:[esi]
  449522:	outs   dx,BYTE PTR ds:[esi]
  449523:	push   eax
  449524:	pop    esi
  449525:	sbb    eax,0x9f8ace4
  44952a:	in     al,0x8
  44952c:	add    DWORD PTR [ebx-0x36],esp
  44952f:	inc    esi
  449530:	mov    ds:0xf5cb494a,eax
  449535:	ror    DWORD PTR [ebx-0x7d],1
  449538:	pop    esp
  449539:	push   esi
  44953a:	hlt    
  44953b:	add    bh,0x6f
  44953e:	test   DWORD PTR [ebp-0x5e65da48],eax
  449544:	mov    edx,0xf23886a1
  449549:	mov    al,0xe0
  44954b:	inc    ebx
  44954c:	dec    edx
  44954d:	retf   
  44954e:	pop    esp
  44954f:	nop
  449550:	jl     0x4494fe
  449552:	ret    0x927f
  449555:	in     al,0x19
  449557:	pushf  
  449558:	jl     0x449520
  44955a:	jo     0x449599
  44955c:	sbb    eax,0xe6e1677f
  449561:	cmp    BYTE PTR [esi+0x1f0ae8ce],dl
  449567:	sbb    al,0x8d
  449569:	jl     0x44955e
  44956b:	enter  0x53a0,0x15
  44956f:	inc    ebx
  449570:	das    
  449571:	rcr    esp,cl
  449573:	pop    ebp
  449574:	stos   BYTE PTR es:[edi],al
  449575:	dec    edx
  449576:	mov    dh,BYTE PTR [eax+0x43]
  449579:	mov    cl,0x0
  44957b:	scas   al,BYTE PTR es:[edi]
  44957c:	mov    ebx,DWORD PTR [edi-0x3b6e43cd]
  449582:	jp     0x44953d
  449584:	dec    edi
  449585:	cmp    bl,bl
  449587:	push   ss
  449588:	jle    0x449561
  44958a:	inc    esi
  44958b:	lea    esi,[edx+0x4a]
  44958e:	(bad)  
  44958f:	shr    BYTE PTR [eax+0x41d3cd09],cl
  449595:	je     0x44954b
  449597:	bound  ebp,QWORD PTR [ebx+ebp*1-0x17b37c65]
  44959e:	lock cmp BYTE PTR [edx+0xe],al
  4495a2:	mov    eax,DWORD PTR [eax+0x55d0f6b6]
  4495a8:	out    0x77,al
  4495aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4495ab:	dec    edx
  4495ac:	lea    esp,[esi+esi*8+0x2fb34c38]
  4495b3:	into   
  4495b4:	hlt    
  4495b5:	dec    edi
  4495b6:	mov    ch,0xee
  4495b8:	mov    bl,0x1a
  4495ba:	jp     0x44958d
  4495bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4495bd:	mov    eax,0x3f022adc
  4495c2:	fist   WORD PTR ds:0xd578615c
  4495c8:	sub    dh,BYTE PTR ds:0x478132d1
  4495ce:	push   edi
  4495cf:	xchg   esi,eax
  4495d0:	rcl    BYTE PTR [esi-0x8a0b283],1
  4495d6:	pop    eax
  4495d7:	mov    eax,ds:0x2f5178cb
  4495dc:	or     bl,BYTE PTR [edi]
  4495de:	xor    BYTE PTR [ecx+edx*4+0x4f],al
  4495e2:	lods   al,BYTE PTR ds:[esi]
  4495e3:	sbb    BYTE PTR [esi],ah
  4495e5:	sub    BYTE PTR [esi+0x64b6c578],dh
  4495eb:	push   edx
  4495ec:	leave  
  4495ed:	out    dx,al
  4495ee:	pop    eax
  4495ef:	sbb    ch,BYTE PTR [eax-0x808570d]
  4495f5:	push   esi
  4495f6:	push   esp
  4495f7:	aas    
  4495f8:	popa   
  4495f9:	push   0x21
  4495fb:	les    edi,FWORD PTR [ebx]
  4495fd:	xor    bl,BYTE PTR [eax-0x22]
  449600:	in     eax,0x7e
  449602:	sbb    edx,DWORD PTR [ebp-0x423a5f7f]
  449608:	mov    edx,0x1c4603c6
  44960d:	add    dl,bl
  44960f:	sahf   
  449610:	jl     0x449636
  449612:	outs   dx,BYTE PTR ds:[esi]
  449613:	adc    BYTE PTR [edi+edi*8],0x55
  449617:	dec    esi
  449619:	(bad)  
  44961a:	adc    al,0x43
  44961c:	xor    BYTE PTR [eax-0x6457342a],ch
  449622:	(bad)  
  449623:	(bad)  
  449624:	les    eax,FWORD PTR ds:[edx]
  449627:	adc    DWORD PTR ds:0x38e3f0e7,esp
  44962d:	mov    bh,0xc9
  44962f:	mov    cs,WORD PTR [edi]
  449631:	pop    ds
  449632:	xchg   edx,eax
  449633:	push   esi
  449634:	fist   DWORD PTR [ebp-0x61]
  449637:	push   edx
  449638:	aam    0xc4
  44963a:	add    eax,DWORD PTR [esi+0x64f2c8a3]
  449640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449641:	jo     0x4495c3
  449643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449644:	mov    bh,0x86
  449646:	xor    bh,BYTE PTR [edi+0xebeafa7]
  44964c:	dec    esp
  44964d:	shl    DWORD PTR ds:0x36f9c7ec,1
  449653:	or     al,0xd7
  449655:	adc    al,0x1c
  449657:	jge    0x4496d1
  449659:	out    dx,al
  44965a:	rol    edi,0xb7
  44965d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44965e:	hlt    
  44965f:	dec    ecx
  449660:	rcr    esi,cl
  449662:	neg    BYTE PTR [esi-0x1]
  449665:	lea    ebx,[ecx+0x7a923924]
  44966b:	scas   eax,DWORD PTR es:[edi]
  44966c:	das    
  44966d:	push   esp
  44966e:	ret    0xd724
  449671:	nop
  449672:	jge    0x4496d3
  449674:	ds mov ecx,0x9a346063
  44967a:	ja     0x449617
  44967c:	cwde   
  44967d:	popf   
  44967e:	(bad)  
  44967f:	std    
  449680:	add    dh,BYTE PTR [esi+0x7b]
  449683:	pop    ss
  449684:	mov    eax,0x58e49e5e
  449689:	stc    
  44968a:	dec    esi
  44968b:	scas   al,BYTE PTR es:[edi]
  44968c:	push   ebx
  44968d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44968e:	(bad)  
  44968f:	jae    0x4496de
  449691:	(bad)  
  449692:	jno    0x449705
  449694:	xchg   ebx,eax
  449695:	aas    
  449696:	jg     0x4496cc
  449698:	jge    0x449651
  44969a:	dec    ebp
  44969b:	ins    DWORD PTR es:[edi],dx
  44969c:	(bad)  
  44969e:	mov    edi,0x60744b1a
  4496a3:	add    al,0x44
  4496a5:	fnstcw WORD PTR [ebp+0x77c49d21]
  4496ab:	sub    ebp,esp
  4496ad:	outs   dx,BYTE PTR ds:[esi]
  4496ae:	call   0x2c419d63
  4496b3:	xchg   esp,eax
  4496b4:	ror    BYTE PTR [eax-0x407acfc9],cl
  4496ba:	lock inc edi
  4496bc:	imul   ecx,DWORD PTR [esi+0x11fde0ef],0x7bf96123
  4496c6:	push   0x6c
  4496c8:	pop    edi
  4496c9:	mov    ch,0xeb
  4496cb:	and    al,BYTE PTR [ecx+0x1c8bf96d]
  4496d1:	pop    es
  4496d2:	jg     0x449720
  4496d4:	imul   ah
  4496d6:	push   cs
  4496d7:	mov    bl,0xef
  4496d9:	test   DWORD PTR [eax],ecx
  4496db:	jg     0x4496e2
  4496dd:	push   ds
  4496de:	dec    esi
  4496df:	data16 js 0x4496d1
  4496e2:	add    esi,DWORD PTR [esi-0x22b062b8]
  4496e8:	repnz pop ss
  4496ea:	pop    edx
  4496eb:	fs xchg esp,eax
  4496ed:	push   ebp
  4496ee:	stos   BYTE PTR es:[edi],al
  4496ef:	fcomp  DWORD PTR [ecx-0x125b8cfe]
  4496f5:	mov    bl,0x9f
  4496f7:	mov    ecx,0x45dca08e
  4496fc:	int3   
  4496fd:	add    BYTE PTR [eax],bh
  4496ff:	inc    ebx
  449700:	inc    esi
  449701:	ds call 0x70d3256d
  449707:	fs xchg ebx,eax
  449709:	lock imul dl
  44970c:	xchg   edx,eax
  44970d:	jmp    0xcbe1:0xa6a837a7
  449714:	cld    
  449715:	popa   
  449716:	lods   al,BYTE PTR ds:[esi]
  449717:	retf   0x536c
  44971a:	aas    
  44971b:	xchg   esp,eax
  44971c:	fstp   TBYTE PTR [edi+0x1aa9b872]
  449722:	pushf  
  449723:	into   
  449724:	aad    0x8b
  449726:	dec    ebp
  449727:	popf   
  449728:	cmc    
  449729:	and    eax,0x6e33c4a3
  44972e:	nop
  44972f:	mov    edx,0x85c367cd
  449734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449735:	mov    ?,WORD PTR [esi-0x64fe7689]
  44973b:	xchg   edi,eax
  44973c:	mov    eax,0x6095df4f
  449741:	in     eax,dx
  449742:	or     DWORD PTR [esi],esi
  449744:	jnp    0x4496df
  449746:	lods   eax,DWORD PTR ds:[esi]
  449747:	sbb    ebx,DWORD PTR [ebx]
  449749:	and    DWORD PTR [eax+0x7],0x6aa0c71f
  449750:	mov    bl,0x23
  449752:	daa    
  449753:	mov    DWORD PTR [ecx+0x58b81eb2],edi
  449759:	dec    edi
  44975a:	mov    ebp,0x200efcb
  44975f:	mov    ebx,0xc64ffec3
  449764:	sub    DWORD PTR [edx],edi
  449766:	cmp    DWORD PTR [esi+edi*1-0x449348],ebp
  44976d:	lock fdiv DWORD PTR [ebp+edi*1+0x7]
  449772:	(bad)  
  449774:	gs mov ebp,0xb0f22f0a
  44977a:	(bad)  
  44977b:	in     eax,dx
  44977c:	mov    dl,0x6c
  44977e:	cli    
  44977f:	and    eax,0x2fbcb1a6
  449784:	sbb    al,0x63
  449786:	fisubr WORD PTR [esi]
  449788:	mov    bl,0x4d
  44978a:	mul    ebp
  44978c:	sub    eax,0xb54b56b1
  449791:	mov    dl,0x51
  449793:	mov    eax,ds:0x73a5f3e6
  449798:	jg     0x4497c9
  44979a:	ror    BYTE PTR [eax-0x75],1
  44979d:	idiv   BYTE PTR [ecx]
  44979f:	jp     0x4497d6
  4497a1:	ins    DWORD PTR es:[edi],dx
  4497a2:	pop    edx
  4497a3:	rcr    BYTE PTR [ebx*1+0x22e6643a],cl
  4497aa:	imul   edi,DWORD PTR [ebp+0x49],0xffffffce
  4497ae:	mov    edx,0x68dc1b67
  4497b3:	mov    cl,0x19
  4497b5:	cmp    eax,0x2202250c
  4497ba:	pop    es
  4497bb:	rcr    DWORD PTR [ecx-0x108c90f2],1
  4497c1:	enter  0x1f1c,0x8c
  4497c5:	ret    
  4497c6:	(bad)  
  4497c7:	(bad)  
  4497c8:	mov    edx,0x7edbec86
  4497cd:	loopne 0x4497c9
  4497cf:	xchg   ebp,eax
  4497d0:	sbb    DWORD PTR [esi-0x901d1a1],edi
  4497d6:	jecxz  0x4497c8
  4497d8:	xchg   edx,eax
  4497d9:	pop    es
  4497da:	sti    
  4497db:	data16 jp 0x4497e1
  4497de:	sbb    esp,DWORD PTR [ebx]
  4497e0:	outs   dx,BYTE PTR ds:[esi]
  4497e1:	pusha  
  4497e2:	mov    cl,0x23
  4497e4:	inc    edi
  4497e5:	and    eax,0x6ec1d475
  4497ea:	mov    BYTE PTR [esi+0x2e],bh
  4497ed:	into   
  4497ee:	rcr    DWORD PTR [edi-0x37],1
  4497f1:	xor    al,0x92
  4497f3:	pop    ds
  4497f4:	xchg   dh,cl
  4497f6:	xor    ebx,eax
  4497f8:	lea    edi,[ecx-0x48dc98d8]
  4497fe:	xor    bl,ch
  449800:	in     al,dx
  449801:	ret    
  449802:	rcr    ebx,0x1b
  449805:	int    0xc7
  449807:	dec    edx
  449808:	shl    dh,1
  44980a:	mov    bl,0x45
  44980c:	(bad)  [ebx+0x692c479b]
  449812:	push   edx
  449813:	add    ebp,ebx
  449815:	fbstp  TBYTE PTR [edx]
  449817:	and    DWORD PTR [edi],ebp
  449819:	or     eax,0x44fb01a2
  44981e:	jge    0x4497be
  449820:	or     edi,ecx
  449822:	(bad)  
  449823:	retf   
  449824:	rcr    cl,1
  449826:	pop    ecx
  449827:	push   ebx
  449828:	out    dx,eax
  449829:	add    eax,0x8328ca0c
  44982e:	retf   
  44982f:	test   eax,0x3e6df785
  449834:	mov    esp,0x8c94a5a5
  449839:	mov    ah,0x20
  44983b:	out    0x26,al
  44983d:	mov    ebp,0xc75f0da
  449842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449843:	sub    BYTE PTR [eax-0x45],ch
  449846:	fstp   st(5)
  449848:	mov    bl,0x83
  44984a:	ret    0xb612
  44984d:	iret   
  44984e:	out    0xf8,al
  449850:	enter  0x37cf,0xe5
  449854:	ja     0x44984c
  449856:	push   0xdc96c9b
  44985b:	add    BYTE PTR [ebp-0x7],dh
  44985e:	inc    ebx
  44985f:	leave  
  449860:	test   BYTE PTR [edx+eiz*8-0x3cdb53fe],bl
  449867:	lods   al,BYTE PTR ds:[esi]
  449868:	xor    al,BYTE PTR [edi+0x75]
  44986b:	xchg   edx,eax
  44986c:	jnp    0x4497fb
  44986e:	(bad)  
  44986f:	shl    DWORD PTR [esi],1
  449871:	mov    esi,0x292e044d
  449876:	fistp  WORD PTR [ebp-0x50]
  449879:	jle    0x44985a
  44987b:	cld    
  44987c:	aad    0x67
  44987e:	sub    ecx,ebp
  449880:	push   0xc1f1cf79
  449885:	arpl   WORD PTR [eax+0x6],si
  449888:	push   0x4f
  44988a:	jmp    0x7f3c:0x88cc57bd
  449891:	bound  esi,QWORD PTR [edi-0x4dc1ad39]
  449897:	xor    al,0x3c
  449899:	test   al,0x9f
  44989b:	xor    eax,0xf16694c8
  4498a0:	call   0x518b:0xf885d5fb
  4498a7:	aam    0x61
  4498a9:	test   al,0x1
  4498ab:	fwait
  4498ac:	adc    al,0x7
  4498ae:	int    0x81
  4498b0:	xchg   esi,ebp
  4498b2:	xor    al,0x4c
  4498b4:	ja     0x4498a3
  4498b6:	and    al,0xaa
  4498b8:	mov    gs,WORD PTR [eax-0x585eb36b]
  4498be:	ds pop es
  4498c0:	jmp    0x249:0xff86b580
  4498c7:	push   es
  4498c8:	add    BYTE PTR [esi-0x78e2f1a4],ch
  4498ce:	scas   al,BYTE PTR es:[edi]
  4498cf:	ret    0x40a
  4498d2:	fld    QWORD PTR [ebx-0x29274800]
  4498d8:	dec    edx
  4498d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4498da:	aad    0xc2
  4498dc:	(bad)  
  4498dd:	jnp    0x44991b
  4498df:	sub    eax,0x67a75908
  4498e4:	dec    edi
  4498e5:	xchg   cl,al
  4498e7:	or     eax,0x97936510
  4498ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4498ed:	mov    edx,cs
  4498ef:	mov    ?,WORD PTR [edx+0x1109e666]
  4498f5:	ret    
  4498f6:	mov    ecx,0xeb289f75
  4498fb:	sbb    DWORD PTR [edx],edi
  4498fd:	mov    edx,0x4ea39d3a
  449902:	les    edi,FWORD PTR [esi+eax*1]
  449905:	xchg   ebx,eax
  449906:	add    ebx,DWORD PTR [edx-0x12ec83e0]
  44990c:	push   ss
  44990d:	xchg   esi,eax
  44990e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44990f:	(bad)  
  449911:	inc    edx
  449912:	mov    esi,0x84961f33
  449918:	sbb    di,WORD PTR [edx+0x795ff507]
  44991f:	mov    bh,0xbd
  449921:	dec    esi
  449922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449923:	fnstsw WORD PTR [edi+0x27]
  449926:	fsubr  DWORD PTR [eax]
  449928:	jl     0x449904
  44992a:	clc    
  44992b:	(bad)  
  44992c:	mov    cl,0x19
  44992e:	push   eax
  44992f:	or     DWORD PTR [eax+edx*4],esp
  449932:	and    ebp,esi
  449934:	xchg   ebx,eax
  449935:	push   edi
  449936:	ins    BYTE PTR es:[edi],dx
  449937:	das    
  449938:	jne    0x4498de
  44993a:	mov    bh,0x60
  44993c:	jmp    0x9ec605d0
  449941:	xchg   BYTE PTR [ebp+0x765f2812],cl
  449947:	test   DWORD PTR [eax-0x46df3cac],esi
  44994d:	push   ecx
  44994e:	push   esi
  44994f:	add    al,0xc0
  449951:	cmp    al,0x51
  449953:	add    DWORD PTR [ecx-0x76],esi
  449956:	loop   0x4499ce
  449958:	push   es
  449959:	sub    eax,0xe8549d01
  44995e:	push   ss
  44995f:	and    bl,BYTE PTR [eax+0x2e3f76be]
  449965:	dec    ebx
  449966:	mov    ebp,0x173e76aa
  44996b:	mov    es:0x2c3e42f8,eax
  449971:	push   esi
  449972:	in     al,dx
  449973:	imul   edi,DWORD PTR [edi+0x4c694f4],0x588b4d39
  44997d:	xchg   edi,eax
  44997e:	and    bh,ch
  449980:	xchg   esi,eax
  449981:	adc    edx,ebp
  449983:	fldenv [ebx+esi*1+0x60]
  449987:	addr16 xor al,0x78
  44998a:	ror    BYTE PTR ds:[eax],0xe6
  44998e:	arpl   cx,sp
  449990:	pop    ebp
  449991:	ret    0x97d6
  449994:	add    al,0x16
  449996:	pop    ss
  449997:	rcr    ecx,cl
  449999:	mov    ebp,eax
  44999b:	(bad)  
  44999c:	fidiv  WORD PTR ds:0xa924da9f
  4499a2:	fadd   DWORD PTR [ebx+0x38f06f13]
  4499a8:	and    bh,BYTE PTR gs:[esp+edi*2-0x6c174acb]
  4499b0:	cmp    DWORD PTR [ebx+0x7],ebx
  4499b3:	fstp   TBYTE PTR [ebp-0x7f0d56ad]
  4499b9:	adc    eax,0x42efdf44
  4499be:	xor    ebx,DWORD PTR [eax-0x5a]
  4499c1:	scas   eax,DWORD PTR es:[edi]
  4499c2:	add    BYTE PTR [ebp-0x2191cff1],al
  4499c8:	cmp    edx,DWORD PTR [eax+edi*4]
  4499cb:	imul   edx,ebp,0x191c8c17
  4499d1:	jnp    0x4499b5
  4499d3:	push   ds
  4499d4:	adc    ebx,DWORD PTR ds:0xc99a6f7e
  4499da:	and    DWORD PTR [eax-0x10],ebx
  4499dd:	sbb    al,0x35
  4499df:	fwait
  4499e0:	inc    ebp
  4499e1:	cwde   
  4499e2:	cmp    ebx,ebp
  4499e4:	jge    0x449996
  4499e6:	test   DWORD PTR [ebx+0x4e],esi
  4499e9:	inc    ebx
  4499ea:	(bad)  
  4499eb:	(bad)  
  4499ec:	dec    DWORD PTR [edx-0x3e]
  4499ef:	stos   DWORD PTR es:[edi],eax
  4499f0:	jle    0x449a04
  4499f2:	push   eax
  4499f3:	mov    ah,0x59
  4499f5:	sub    esi,DWORD PTR [eax-0x6b]
  4499f8:	adc    DWORD PTR [edi+0x10],ebx
  4499fb:	pop    esp
  4499fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4499fd:	cld    
  4499fe:	dec    ebx
  4499ff:	jmp    0x7b624b02
  449a04:	test   al,0x4a
  449a06:	mov    fs,edi
  449a08:	mov    ds:0xeb55cd95,eax
  449a0d:	and    ecx,DWORD PTR [ebx]
  449a0f:	sahf   
  449a10:	in     al,0x7c
  449a12:	mov    ecx,0x968e1cb6
  449a17:	xchg   bh,bh
  449a19:	xchg   esp,eax
  449a1a:	daa    
  449a1b:	les    ebx,FWORD PTR [edx]
  449a1d:	inc    eax
  449a1e:	jl     0x4499d1
  449a20:	and    al,0x28
  449a22:	jge    0x449a22
  449a24:	retf   0x2dba
  449a27:	sti    
  449a28:	dec    esp
  449a29:	jmp    0x449a9f
  449a2b:	cmp    al,0x93
  449a2d:	xchg   esi,eax
  449a2e:	jecxz  0x4499fe
  449a30:	inc    edx
  449a31:	rcr    BYTE PTR [eax+0x56],0x3e
  449a35:	mov    ebx,ebp
  449a37:	xchg   ecx,eax
  449a38:	enter  0xe3a0,0xac
  449a3c:	int3   
  449a3d:	fwait
  449a3e:	sahf   
  449a3f:	adc    dl,BYTE PTR [edi]
  449a41:	lds    eax,FWORD PTR ds:0x8ebdff6a
  449a47:	loop   0x449a02
  449a49:	jo     0x449a4b
  449a4b:	dec    esi
  449a4c:	in     eax,dx
  449a4d:	inc    ebp
  449a4e:	dec    ecx
  449a4f:	fs pop edi
  449a51:	scas   eax,DWORD PTR es:[edi]
  449a52:	jge    0x449a2c
  449a54:	inc    eax
  449a55:	xchg   edx,eax
  449a56:	and    DWORD PTR [ecx+0x69],ecx
  449a59:	ret    0x704c
  449a5c:	adc    al,0x35
  449a5e:	dec    ecx
  449a5f:	fmul   DWORD PTR [eax]
  449a61:	adc    al,0xd
  449a63:	test   BYTE PTR [ecx+0x75],cl
  449a66:	loop   0x4499f6
  449a68:	xchg   ecx,eax
  449a69:	out    dx,eax
  449a6a:	adc    ebp,DWORD PTR fs:[ebx]
  449a6d:	(bad)  
  449a6e:	lds    edx,FWORD PTR [eax+0xc]
  449a71:	cs ds push ds
  449a74:	inc    esi
  449a75:	das    
  449a76:	loope  0x449a39
  449a78:	cmp    al,0xae
  449a7a:	mul    edx
  449a7c:	(bad)  
  449a7d:	hlt    
  449a7e:	jge    0x449a4c
  449a80:	ja     0x449a1e
  449a82:	dec    eax
  449a83:	push   esp
  449a84:	jno    0x449aba
  449a86:	dec    esp
  449a87:	pop    esp
  449a88:	dec    edx
  449a89:	sub    edi,DWORD PTR [eax]
  449a8b:	add    cl,BYTE PTR [ebp+0x1426d2fa]
  449a91:	jo     0x449aaf
  449a93:	test   BYTE PTR [ebp+edi*1-0x7d],dl
  449a97:	lea    eax,[esi-0x51353267]
  449a9d:	cmp    al,0x2e
  449a9f:	mov    ch,BYTE PTR [edx+eiz*2+0x13]
  449aa3:	dec    ebx
  449aa4:	mov    dl,0xf5
  449aa6:	rol    BYTE PTR [esp+ebx*4-0x7d],cl
  449aaa:	ror    ah,1
  449aac:	ret    0x53d5
  449aaf:	sbb    DWORD PTR [eax+0x73ac6212],0xffffffdf
  449ab6:	adc    ebx,0xd1f9a410
  449abc:	push   0xf3eca0f
  449ac1:	outs   dx,BYTE PTR ds:[esi]
  449ac2:	or     ebx,ebx
  449ac4:	dec    edi
  449ac5:	rol    edi,0xd0
  449ac8:	in     al,dx
  449ac9:	dec    esp
  449aca:	xchg   dl,dl
  449acc:	or     BYTE PTR [ebx+0x275c1daa],ch
  449ad2:	scas   eax,DWORD PTR es:[edi]
  449ad3:	jne    0x449a6e
  449ad5:	jg     0x449ad3
  449ad7:	mov    ebp,DWORD PTR [esi-0x6fc437b6]
  449add:	retf   
  449ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449adf:	addr16 sti 
  449ae1:	scas   eax,DWORD PTR es:[edi]
  449ae2:	call   0xfe9fb7f
  449ae7:	add    BYTE PTR [edi-0x5a20a1e0],dh
  449aed:	and    DWORD PTR [ecx],ecx
  449aef:	inc    edi
  449af0:	popa   
  449af1:	repnz popa 
  449af3:	stc    
  449af4:	push   edi
  449af5:	das    
  449af6:	pop    es
  449af7:	jecxz  0x449a88
  449af9:	pop    ss
  449afa:	jns    0x449ac1
  449afc:	enter  0x5613,0x1f
  449b00:	lods   al,BYTE PTR ds:[esi]
  449b01:	fisubr WORD PTR [edi+0x5]
  449b04:	cs or  eax,0xbf3de9b9
  449b0a:	stos   DWORD PTR es:[edi],eax
  449b0b:	neg    BYTE PTR [ecx+0x6b28efff]
  449b11:	mov    ebx,0xff184c25
  449b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449b17:	call   0xd046:0x81074176
  449b1e:	or     ch,BYTE PTR [ebx-0x76c8a17e]
  449b24:	push   cs
  449b25:	mov    ebp,0xa77d44c3
  449b2a:	and    eax,0x74290b02
  449b2f:	fwait
  449b30:	or     DWORD PTR [edi],0xfffffffe
  449b33:	cmp    BYTE PTR [edx],bh
  449b35:	cmp    BYTE PTR [edx-0x4e5d906a],0x58
  449b3c:	jno    0x449ac8
  449b3e:	sub    al,0xc
  449b40:	scas   eax,DWORD PTR es:[edi]
  449b41:	mul    DWORD PTR [ecx-0x32]
  449b44:	popf   
  449b45:	mov    edi,0xab160ad1
  449b4a:	sbb    edx,eax
  449b4c:	test   eax,0x3dfc11fb
  449b51:	jbe    0x449baa
  449b53:	arpl   WORD PTR ss:[ebx-0x7],di
  449b57:	clc    
  449b58:	ret    0x768a
  449b5b:	test   eax,0x310fb99c
  449b60:	pop    ecx
  449b61:	fisttp QWORD PTR [eax]
  449b63:	fwait
  449b64:	mov    ds:0x171ebb0,eax
  449b69:	mov    al,0xaa
  449b6b:	jnp    0x449b44
  449b6d:	(bad)  
  449b6e:	dec    ebx
  449b6f:	pop    ebx
  449b70:	mov    ds:0x5706acc9,al
  449b75:	and    al,0x3e
  449b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b78:	mov    ebx,0x667710f8
  449b7d:	inc    ebx
  449b7e:	xchg   DWORD PTR [eax+0x2dbec3b6],esp
  449b84:	xchg   ebp,eax
  449b85:	push   0x4b80a8d8
  449b8a:	(bad)  
  449b8b:	pusha  
  449b8c:	or     ch,BYTE PTR [edi+0x5a]
  449b8f:	jle    0x449be7
  449b91:	push   cs
  449b92:	cld    
  449b93:	pop    eax
  449b94:	jae    0x449bb8
  449b96:	dec    edx
  449b97:	inc    esi
  449b98:	add    ah,bh
  449b9a:	cmp    eax,0xc4fc29c5
  449b9f:	jb     0x449b7e
  449ba1:	std    
  449ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449ba3:	sub    esp,DWORD PTR [edi]
  449ba5:	fnstcw WORD PTR [edx+edx*4]
  449ba8:	pop    esp
  449ba9:	pop    ebx
  449baa:	jb     0x449b81
  449bac:	cmp    eax,0x5e229863
  449bb1:	pop    es
  449bb2:	out    dx,al
  449bb3:	adc    BYTE PTR [ebp+ebx*1-0x39],bh
  449bb7:	mov    edx,0x67fed6f9
  449bbc:	fbstp  TBYTE PTR [ebx+0x3e39bdda]
  449bc2:	cmp    eax,0x5fda575f
  449bc7:	cmp    ecx,ebx
  449bc9:	or     edi,edx
  449bcb:	xor    eax,0x9034b2ce
  449bd0:	mov    ch,0xd9
  449bd2:	test   BYTE PTR [eax-0x5f461ea3],ch
  449bd8:	cld    
  449bd9:	dec    edi
  449bda:	mov    esp,0x7d73ea30
  449bdf:	(bad)  
  449be1:	out    0xfe,al
  449be3:	inc    edx
  449be4:	daa    
  449be5:	dec    edx
  449be6:	in     al,0xe1
  449be8:	lock cmp al,BYTE PTR [eax-0xe]
  449bec:	aad    0x8e
  449bee:	add    dl,BYTE PTR [esi+0x46]
  449bf1:	iret   
  449bf2:	scas   al,BYTE PTR es:[edi]
  449bf3:	dec    ebx
  449bf4:	sar    BYTE PTR [esi+ecx*2+0x8],0xd4
  449bf9:	push   edi
  449bfa:	pop    ss
  449bfb:	pop    ecx
  449bfc:	jmp    FWORD PTR [edx]
  449bfe:	inc    eax
  449bff:	in     eax,0x26
  449c01:	push   edi
  449c02:	inc    esi
  449c03:	fcmovnb st,st(5)
  449c05:	inc    edi
  449c06:	push   ebp
  449c07:	and    eax,0xc980d60e
  449c0c:	outs   dx,BYTE PTR ds:[esi]
  449c0d:	mov    dh,0xa6
  449c0f:	cmp    al,0x17
  449c11:	push   edx
  449c12:	popa   
  449c13:	jmp    0xfb7e8afa
  449c18:	add    cl,BYTE PTR [edx]
  449c1a:	mov    edi,DWORD PTR [edi+0x1]
  449c1d:	add    ebp,DWORD PTR [ebp+0x7ee7f577]
  449c23:	xor    eax,DWORD PTR [esi+eax*2+0xffc069a]
  449c2a:	lds    ebx,FWORD PTR [ebp+0x3ef16937]
  449c30:	aaa    
  449c31:	cld    
  449c32:	int    0x80
  449c34:	jl     0x449bed
  449c36:	mov    al,0xb8
  449c38:	dec    BYTE PTR [ebx-0x195f4a0b]
  449c3e:	retf   
  449c3f:	les    edi,FWORD PTR [eax+0x36002618]
  449c45:	pop    ecx
  449c46:	ins    BYTE PTR es:[edi],dx
  449c47:	stos   BYTE PTR es:[edi],al
  449c48:	leave  
  449c49:	loop   0x449cc3
  449c4b:	fnsave [esp+ebx*8-0x6ffab169]
  449c52:	mov    dl,0x1d
  449c54:	dec    edi
  449c55:	dec    ebp
  449c56:	inc    edi
  449c57:	test   eax,edx
  449c59:	cli    
  449c5a:	sbb    BYTE PTR [ebp+0x60],bh
  449c5d:	lods   eax,DWORD PTR ds:[esi]
  449c5e:	pusha  
  449c5f:	xchg   edi,eax
  449c60:	push   edx
  449c61:	es cli 
  449c63:	cmp    al,0xaa
  449c65:	ins    BYTE PTR es:[edi],dx
  449c66:	jo     0x449c0c
  449c68:	jl     0x449c3c
  449c6a:	loop   0x449c8c
  449c6c:	adc    BYTE PTR [ecx-0x4f],dh
  449c6f:	in     eax,dx
  449c70:	or     ebp,0x2d
  449c73:	ja     0x449c13
  449c75:	or     eax,0x856002f2
  449c7a:	xchg   ebx,eax
  449c7b:	mov    cl,ch
  449c7d:	push   esp
  449c7e:	inc    eax
  449c7f:	rcr    BYTE PTR [edx],0xce
  449c82:	fnstcw WORD PTR [eax+0x3a]
  449c85:	test   al,0xd6
  449c87:	scas   eax,DWORD PTR es:[edi]
  449c88:	mov    al,ds:0xe1ab3487
  449c8d:	mov    ebx,0x8855daf3
  449c92:	dec    edx
  449c93:	adc    BYTE PTR [esi-0x53],0x61
  449c97:	sar    BYTE PTR [ebx-0x37],1
  449c9a:	addr16 call 0xf1d1:0x928400a9
  449ca2:	cmp    al,BYTE PTR [ebp*8-0x79c888de]
  449ca9:	push   edi
  449caa:	sbb    eax,DWORD PTR [edx-0x1e]
  449cad:	jmp    0x1b3defde
  449cb2:	adc    BYTE PTR [esi],al
  449cb4:	and    eax,0xb90e1c22
  449cb9:	lods   al,BYTE PTR ds:[esi]
  449cba:	pop    esp
  449cbb:	aad    0x93
  449cbd:	or     al,0xbd
  449cbf:	sbb    al,0xec
  449cc1:	jne    0x449d34
  449cc3:	pop    ss
  449cc4:	iret   
  449cc5:	nop    DWORD PTR [ebp-0x3]
  449cc9:	adc    eax,0x267b50c3
  449cce:	in     eax,0x3c
  449cd0:	retf   
  449cd1:	iret   
  449cd2:	adc    bh,BYTE PTR [ebx]
  449cd4:	cld    
  449cd5:	sub    eax,ebp
  449cd7:	hlt    
  449cd8:	(bad)  
  449cd9:	mov    ecx,0x6c235248
  449cde:	xchg   ecx,eax
  449cdf:	in     eax,0x4c
  449ce1:	test   eax,0x8771b28
  449ce6:	sub    edx,esi
  449ce8:	jmp    0x449cf5
  449cea:	mov    ?,WORD PTR [esi-0x7aa40ed1]
  449cf0:	adc    eax,0x135d128e
  449cf5:	jmp    0x8ae9be51
  449cfa:	fist   DWORD PTR [edi+0x2c6b2e]
  449d00:	cdq    
  449d01:	dec    ebp
  449d02:	adc    eax,0x78f40c64
  449d07:	push   0x1f1f3fcb
  449d0c:	push   ecx
  449d0d:	xor    BYTE PTR [ebx-0x6c33f303],dl
  449d13:	sbb    ah,ch
  449d15:	sar    BYTE PTR [ebp-0x25],0x6f
  449d19:	xor    dh,BYTE PTR [eax-0x68]
  449d1c:	in     eax,0x21
  449d1e:	scas   al,BYTE PTR es:[edi]
  449d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449d20:	sbb    eax,0x9fefea6d
  449d25:	fwait
  449d26:	push   ebp
  449d27:	add    al,0x1b
  449d29:	stos   DWORD PTR es:[edi],eax
  449d2a:	ss ss xchg esi,eax
  449d2d:	jl     0x449cea
  449d2f:	push   edi
  449d30:	fwait
  449d31:	mov    al,0xc
  449d34:	retf   
  449d35:	dec    ebx
  449d36:	and    ecx,DWORD PTR [ebp-0x40fc4262]
  449d3c:	pop    esi
  449d3d:	stos   DWORD PTR es:[edi],eax
  449d3e:	hlt    
  449d3f:	pop    eax
  449d40:	and    edi,ecx
  449d42:	xor    eax,0x53f47059
  449d47:	add    ebp,DWORD PTR [edi+0x72]
  449d4a:	sub    cl,BYTE PTR [edx-0x7b]
  449d4d:	retf   
  449d4e:	pop    edi
  449d4f:	test   al,0xc6
  449d51:	lods   eax,DWORD PTR ds:[esi]
  449d52:	test   BYTE PTR [edi+0x2e],0x3b
  449d56:	inc    ebx
  449d57:	fstp   QWORD PTR [ecx+0x77]
  449d5a:	loop   0x449d66
  449d5c:	repnz push ebx
  449d5e:	or     eax,DWORD PTR [ebx*8+0x3f62c1ee]
  449d65:	int    0xb6
  449d67:	pop    ebx
  449d68:	xchg   ebx,eax
  449d69:	stos   DWORD PTR es:[edi],eax
  449d6a:	int3   
  449d6b:	sub    eax,0xed9fe9c4
  449d70:	out    0x15,al
  449d72:	nop
  449d73:	sbb    al,0xdb
  449d75:	jge    0x449d7a
  449d77:	add    edx,0x7f
  449d7a:	adc    al,0x8b
  449d7c:	pop    ebp
  449d7d:	in     al,0x46
  449d7f:	mov    dh,0x4c
  449d81:	push   ebp
  449d82:	stos   DWORD PTR es:[edi],eax
  449d83:	cmp    DWORD PTR [ecx-0x75],edi
  449d86:	rol    cl,1
  449d88:	push   0x5d
  449d8a:	or     eax,0x12b09885
  449d8f:	scas   al,BYTE PTR es:[edi]
  449d90:	fwait
  449d91:	in     eax,dx
  449d92:	add    ebp,0x1e89a7f3
  449d98:	popa   
  449d99:	xor    DWORD PTR [ebx+eiz*2-0x2e2f5452],edi
  449da0:	dec    esi
  449da1:	dec    eax
  449da2:	in     eax,0xe4
  449da4:	gs jecxz 0x449d84
  449da7:	xchg   BYTE PTR [ebp-0x761adf20],bl
  449dad:	or     al,0x9
  449daf:	push   ebp
  449db0:	cdq    
  449db1:	jae    0x449df5
  449db3:	or     DWORD PTR [esi+0x75],eax
  449db6:	mov    dl,0xfd
  449db8:	mov    ds:0xc1a46edd,eax
  449dbd:	and    al,0x98
  449dbf:	dec    edx
  449dc0:	mov    dh,0xb8
  449dc2:	addr16 push ebx
  449dc4:	pusha  
  449dc5:	ret    
  449dc6:	fild   WORD PTR [eax]
  449dc8:	loope  0x449e27
  449dca:	mov    eax,0xb4620044
  449dcf:	ins    BYTE PTR es:[edi],dx
  449dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449dd1:	dec    ebx
  449dd2:	xlat   BYTE PTR ds:[ebx]
  449dd3:	std    
  449dd4:	hlt    
  449dd5:	pop    ebx
  449dd6:	addr16 jne 0x449e1a
  449dd9:	jne    0x449e04
  449ddb:	mov    dl,0xe2
  449ddd:	int3   
  449dde:	mov    ecx,0x9477ec6b
  449de3:	ret    0xb627
  449de6:	sub    esi,DWORD PTR [esi-0x1f]
  449de9:	dec    esp
  449dea:	and    BYTE PTR [esi-0x44944404],ah
  449df0:	jne    0x449da0
  449df2:	mov    cs,WORD PTR [eax-0x3bafed26]
  449df8:	or     esp,DWORD PTR [ecx]
  449dfa:	pop    ss
  449dfb:	arpl   WORD PTR [edi],bx
  449dfd:	pushf  
  449dfe:	jo     0x449e27
  449e00:	loop   0x449dac
  449e02:	cmc    
  449e03:	sub    DWORD PTR [ebp+0x65d200c],ebp
  449e09:	rcr    bl,1
  449e0b:	pop    esi
  449e0c:	or     al,0xa6
  449e0e:	lds    esi,FWORD PTR ds:0x3b0fd212
  449e14:	pop    ds
  449e15:	fnstcw WORD PTR [eax+0x30bb55c7]
  449e1b:	or     ecx,eax
  449e1d:	ret    0xfaa6
  449e20:	xor    eax,0x97238e2b
  449e25:	test   eax,0x47db66c2
  449e2a:	or     dl,BYTE PTR [ebp-0x34]
  449e2d:	fist   DWORD PTR [ebx-0x67e2b6cc]
  449e33:	mov    dl,0x23
  449e35:	scas   al,BYTE PTR es:[edi]
  449e36:	mov    al,BYTE PTR [eax-0x57]
  449e39:	out    0x4b,eax
  449e3b:	stos   BYTE PTR es:[edi],al
  449e3c:	inc    eax
  449e3d:	(bad)  
  449e3f:	mov    al,0xce
  449e41:	hlt    
  449e42:	ds test ebx,edi
  449e45:	out    dx,al
  449e46:	and    BYTE PTR [ecx-0x4c],dh
  449e49:	stc    
  449e4a:	and    BYTE PTR [edx+0x3753ded8],bh
  449e50:	xor    ebx,ebx
  449e52:	xchg   ebp,eax
  449e53:	xor    al,0xcb
  449e55:	mov    eax,ds:0x29b77983
  449e5a:	popf   
  449e5b:	cld    
  449e5c:	xor    ch,BYTE PTR [esi-0x6c8e84f1]
  449e62:	pop    ebx
  449e63:	pusha  
  449e64:	pop    edi
  449e65:	adc    DWORD PTR [esi],eax
  449e67:	dec    eax
  449e68:	loop   0x449e64
  449e6a:	sub    eax,0x20b02883
  449e6f:	je     0x449e8a
  449e71:	or     al,0x49
  449e73:	sar    edx,1
  449e75:	pcmpeqb mm1,QWORD PTR [eax+0x7a]
  449e79:	arpl   bp,ax
  449e7b:	push   ds
  449e7c:	cmp    al,0x4a
  449e7e:	lea    ecx,[eax+0x16e926dd]
  449e84:	mov    ?,WORD PTR [ebp+0x7705b324]
  449e8a:	mov    esi,0xc0913406
  449e8f:	sub    DWORD PTR [esi],ebp
  449e91:	and    edi,DWORD PTR [esp+edx*8]
  449e94:	jae    0x449e6e
  449e96:	hlt    
  449e97:	fadd   DWORD PTR [esi-0xa48b10b]
  449e9d:	push   cs
  449e9e:	inc    edi
  449e9f:	push   cs
  449ea0:	push   ebx
  449ea1:	cmp    dl,0xf4
  449ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449ea5:	ja     0x449f0d
  449ea7:	in     al,0xc6
  449ea9:	stos   DWORD PTR es:[edi],eax
  449eaa:	push   ss
  449eab:	and    DWORD PTR [esi-0x100753f7],0xffffffa6
  449eb2:	adc    eax,0x8e874408
  449eb7:	retf   0xb5a
  449eba:	fdiv   st(6),st
  449ebc:	push   0x629d9a43
  449ec1:	daa    
  449ec2:	cmp    al,0xfc
  449ec4:	neg    esp
  449ec6:	add    ah,dh
  449ec8:	fsub   QWORD PTR [edi]
  449eca:	sar    DWORD PTR [ecx+0x625394c3],0xa0
  449ed1:	jnp    0x449ebe
  449ed3:	cmp    bh,BYTE PTR [edx-0x14]
  449ed6:	test   eax,0xfdb499d3
  449edb:	or     ecx,ebp
  449edd:	sbb    bl,BYTE PTR [esi+0x1f02f544]
  449ee3:	xor    BYTE PTR [ebx+0x29],bl
  449ee6:	mov    ebx,0x74966117
  449eeb:	cmc    
  449eec:	pusha  
  449eed:	jg     0x449eac
  449eef:	jbe    0x449f62
  449ef1:	or     BYTE PTR [ecx+0x3e7dc9d8],cl
  449ef7:	clc    
  449ef8:	and    ebp,ebp
  449efa:	js     0x449f29
  449efc:	mov    ebx,0x7cc6f9ba
  449f01:	int    0xad
  449f03:	xor    dl,dh
  449f05:	adc    edx,DWORD PTR [ebx+0x15ff0b92]
  449f0b:	jns    0x449ef7
  449f0d:	add    BYTE PTR [ecx-0x65],0x2c
  449f11:	jl     0x449f7f
  449f13:	adc    BYTE PTR [edx+0x2fcd1da2],dl
  449f19:	aad    0x99
  449f1b:	inc    eax
  449f1c:	push   edx
  449f1d:	sub    ch,BYTE PTR [edx]
  449f1f:	inc    ecx
  449f20:	add    ch,BYTE PTR [edx+0x57]
  449f23:	pop    esp
  449f24:	fs mov esp,0xf8e6d404
  449f2a:	xor    eax,0xf32856dd
  449f2f:	cpuid  
  449f31:	(bad)
  449f34:	lods   eax,DWORD PTR ds:[esi]
  449f35:	mov    ds,eax
  449f37:	dec    ebx
  449f38:	out    0xa9,al
  449f3a:	push   ds
  449f3b:	push   edi
  449f3c:	mov    ebp,0xb2fd55a0
  449f41:	test   al,0xcc
  449f43:	or     bl,BYTE PTR [eax+0x5f94ac84]
  449f49:	xor    al,0xa0
  449f4b:	dec    esp
  449f4c:	ins    DWORD PTR es:[edi],dx
  449f4d:	pusha  
  449f4e:	adc    ah,ah
  449f50:	lds    edi,FWORD PTR [edi+ebx*8+0x68]
  449f54:	ss mov edx,0x4344ee67
  449f5a:	sub    cl,BYTE PTR [ecx-0x99798a0]
  449f60:	mov    DWORD PTR ds:0x8acc0450,eax
  449f66:	add    BYTE PTR [ebx],ch
  449f68:	push   0x9df915ee
  449f6d:	loope  0x449f06
  449f6f:	or     cl,BYTE PTR [ebx]
  449f71:	icebp  
  449f72:	pushf  
  449f73:	mov    ebp,0x29ca5515
  449f78:	mov    ebp,0xa293deee
  449f7d:	fild   QWORD PTR [edx]
  449f7f:	nop
  449f80:	idiv   bl
  449f82:	push   ss
  449f83:	aad    0x5
  449f85:	dec    ecx
  449f86:	mov    ecx,eax
  449f88:	ja     0x449f9e
  449f8a:	(bad)  
  449f8b:	jecxz  0x449fa5
  449f8d:	or     cl,dl
  449f8f:	in     eax,0xcc
  449f91:	pop    esi
  449f92:	inc    ecx
  449f93:	jns    0x44a010
  449f95:	repz pop esp
  449f97:	jbe    0x449faf
  449f99:	outs   dx,BYTE PTR ds:[esi]
  449f9a:	add    DWORD PTR [esp+ecx*8+0x7a5c463b],0x163aadd
  449fa5:	fistp  QWORD PTR [esi+0x5d2daa11]
  449fab:	sbb    al,0xeb
  449fae:	imul   dx,WORD PTR [eax-0x46],0x3c
  449fb3:	push   ebx
  449fb4:	xchg   DWORD PTR [eax],eax
  449fb6:	mov    bh,0xb4
  449fb8:	add    al,0x8
  449fba:	jno    0x44a01f
  449fbc:	jmp    0x55de7e1c
  449fc1:	push   ebx
  449fc2:	les    edi,FWORD PTR [edx-0x8f33bfc]
  449fc8:	push   esp
  449fc9:	sub    DWORD PTR [edx-0x52],esi
  449fcc:	stc    
  449fcd:	xchg   ecx,eax
  449fce:	fcom   DWORD PTR [ebp-0x74b7049a]
  449fd4:	(bad)  
  449fd5:	and    ax,0x2e42
  449fd9:	arpl   WORD PTR [ecx],bp
  449fdb:	cli    
  449fdc:	xchg   bl,ah
  449fde:	js     0x449f7d
  449fe0:	jmp    0x1aeac6c5
  449fe5:	jno    0x449ffe
  449fe7:	fwait
  449fe8:	xchg   ebx,eax
  449fe9:	lods   al,BYTE PTR ds:[esi]
  449fea:	sbb    al,BYTE PTR [esi+0x5588167b]
  449ff0:	xor    BYTE PTR [ebp+0x7],dl
  449ff3:	sub    esp,DWORD PTR [ebx-0x45bccf55]
  449ff9:	aas    
  449ffa:	xchg   ebp,eax
  449ffb:	mov    ah,cl
  449ffd:	js     0x44a027
  449fff:	sub    DWORD PTR [ebp-0x1accf902],edi
  44a005:	xlat   BYTE PTR ds:[ebx]
  44a006:	pop    eax
  44a007:	les    ebp,FWORD PTR [eax]
  44a009:	adc    eax,DWORD PTR [eax+0x712716bb]
  44a00f:	std    
  44a010:	adc    DWORD PTR [eax+0x1916c63f],ecx
  44a016:	pusha  
  44a017:	in     al,0x30
  44a019:	and    eax,0x39c708d6
  44a01e:	mov    esi,0xccb34597
  44a023:	popf   
  44a024:	xchg   esp,eax
  44a025:	add    bl,cl
  44a027:	jg     0x449fc9
  44a029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a02a:	push   0xffffff9a
  44a02c:	pop    ecx
  44a02d:	xchg   edx,eax
  44a02e:	or     ebp,esp
  44a030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a031:	icebp  
  44a032:	adc    DWORD PTR [esi+0x158054ae],edx
  44a038:	adc    DWORD PTR [eax+0x49],ecx
  44a03b:	aas    
  44a03c:	cli    
  44a03d:	call   0x7bca9f7d
  44a042:	lea    esp,[ecx+esi*1-0x49]
  44a046:	mov    bh,0x74
  44a048:	sbb    eax,esi
  44a04a:	int3   
  44a04b:	cmp    ebx,eax
  44a04d:	mov    eax,ds:0x2d0d041c
  44a052:	test   DWORD PTR [edi+0x6e],0x3d6b8de0
  44a059:	add    DWORD PTR [ebp-0x50],ecx
  44a05c:	aas    
  44a05d:	lods   eax,DWORD PTR ds:[esi]
  44a05e:	aam    0x8c
  44a060:	jns    0x44a0b2
  44a062:	cmp    dl,BYTE PTR [eax]
  44a064:	lds    esi,FWORD PTR [eax+0x69]
  44a067:	aaa    
  44a068:	mov    cl,0x59
  44a06a:	pushf  
  44a06b:	adc    eax,0xa063202b
  44a070:	loop   0x44a09a
  44a072:	mov    ah,0x65
  44a074:	outs   dx,BYTE PTR ds:[esi]
  44a075:	(bad)  
  44a076:	pop    edi
  44a077:	cmp    dh,bl
  44a079:	(bad)  
  44a07c:	lock dec ebx
  44a07e:	jecxz  0x44a0cc
  44a080:	cli    
  44a081:	and    BYTE PTR [eax+esi*8],cl
  44a084:	lods   al,BYTE PTR ds:[esi]
  44a085:	in     al,0x56
  44a087:	push   0x4f
  44a089:	add    BYTE PTR [edx],dl
  44a08b:	fld    TBYTE PTR [edi]
  44a08d:	ja     0x44a0d7
  44a08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a090:	jne    0x44a0e2
  44a092:	mov    DWORD PTR [ecx+0x44da7aea],ebx
  44a098:	sbb    eax,0x8270db99
  44a09d:	jl     0x44a051
  44a09f:	aaa    
  44a0a0:	xor    BYTE PTR [esi+0x31],dl
  44a0a3:	ror    DWORD PTR [esp+esi*1+0x46],cl
  44a0a7:	push   DWORD PTR [ecx]
  44a0a9:	add    bl,BYTE PTR [ecx-0x500f77c]
  44a0af:	push   ss
  44a0b0:	or     al,0xcf
  44a0b2:	in     eax,dx
  44a0b3:	push   ebx
  44a0b4:	push   ss
  44a0b5:	xor    DWORD PTR ds:0x5c6b9145,esp
  44a0bb:	push   esi
  44a0bc:	xor    dh,ah
  44a0be:	in     eax,0xa8
  44a0c0:	loop   0x44a09a
  44a0c2:	push   esi
  44a0c3:	(bad)  
  44a0c4:	adc    DWORD PTR [ebx-0x6f925f7d],esi
  44a0ca:	cmp    ebp,eax
  44a0cc:	imul   esi,DWORD PTR [ecx],0x2b143977
  44a0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a0d3:	jns    0x44a0fe
  44a0d5:	mov    esp,0x7090f4d5
  44a0da:	push   0x67
  44a0dc:	or     ebp,DWORD PTR [ecx+eiz*4+0x60]
  44a0e0:	leave  
  44a0e1:	cmp    eax,0xe4bbba78
  44a0e6:	or     bh,BYTE PTR [edx]
  44a0e8:	arpl   WORD PTR [esi-0x39],dx
  44a0eb:	pop    esi
  44a0ec:	sbb    DWORD PTR [esi],ecx
  44a0ee:	cmp    BYTE PTR cs:[esp+edx*1-0x525f285e],0x16
  44a0f7:	js     0x44a123
  44a0f9:	mov    esp,0xf9ff14a2
  44a0fe:	bound  ebp,QWORD PTR [ebx+eax*4-0x62]
  44a102:	adc    eax,0x9990276f
  44a107:	dec    ebp
  44a108:	mov    gs,WORD PTR [ebx-0x2581e8dc]
  44a10e:	cli    
  44a10f:	adc    DWORD PTR [eax+0x3004cb08],edi
  44a115:	into   
  44a116:	adc    eax,0x9c3bdef0
  44a11b:	push   ss
  44a11c:	add    al,0x18
  44a11e:	mov    cl,ah
  44a120:	arpl   ax,di
  44a122:	or     edx,DWORD PTR [edx-0x40a5adf2]
  44a128:	sub    eax,0x12ab02ef
  44a12d:	pop    es
  44a12e:	cmp    DWORD PTR [edx-0x769ef5d],eax
  44a134:	ret    0xf2dd
  44a137:	sbb    BYTE PTR [ecx-0xb],dl
  44a13a:	rol    DWORD PTR [eax+ebp*4+0x2b],0x47
  44a13f:	cmp    DWORD PTR cs:[ecx-0x441338c],ebp
  44a146:	js     0x44a0cc
  44a148:	fwait
  44a149:	add    edi,esi
  44a14b:	cmp    al,0x47
  44a14d:	bound  eax,QWORD PTR [ebx+0x2a578a02]
  44a153:	adc    eax,0x852d2aaa
  44a158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a159:	jmp    0x8cbd:0x56c03b67
  44a160:	test   BYTE PTR [ebp-0x2e52b8af],ch
  44a166:	push   edx
  44a167:	pop    ebx
  44a168:	mov    ebx,0x3cb4aae9
  44a16d:	and    BYTE PTR [eax-0x26],ch
  44a170:	outs   dx,DWORD PTR ds:[esi]
  44a171:	jg     0x44a184
  44a173:	and    eax,0xb14de39f
  44a178:	sahf   
  44a179:	mov    edx,DWORD PTR [ebx+0x2b5d53a5]
  44a17f:	in     al,0xe8
  44a181:	jg     0x44a165
  44a183:	mov    WORD PTR [edi],fs
  44a185:	jb     0x44a1a4
  44a187:	(bad)  
  44a188:	jg     0x44a121
  44a18a:	mov    DWORD PTR [edi-0x3dc7e406],edx
  44a190:	xchg   DWORD PTR [edx+edi*8],ebp
  44a193:	jp     0x44a13d
  44a195:	jmp    0x44a138
  44a197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a198:	hlt    
  44a199:	les    ebx,FWORD PTR [ebx+0x53]
  44a19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a19d:	inc    esp
  44a19e:	inc    ebp
  44a19f:	in     eax,0x71
  44a1a1:	sub    al,0x7
  44a1a3:	fld    QWORD PTR [ecx+0x45ea1882]
  44a1a9:	data16 jo 0x44a1cf
  44a1ac:	outs   dx,BYTE PTR ds:[esi]
  44a1ad:	mov    al,ds:0x987d493e
  44a1b2:	mov    ebx,0x21beead9
  44a1b7:	test   BYTE PTR ds:[ecx+0x16],ch
  44a1bb:	add    BYTE PTR [esi+0x9decc17],bh
  44a1c1:	sbb    al,BYTE PTR ss:[ebp-0x6]
  44a1c5:	loope  0x44a22f
  44a1c7:	pop    ss
  44a1c8:	gs cmc 
  44a1ca:	jne    0x44a1ce
  44a1cc:	inc    edi
  44a1cd:	enter  0xc324,0x70
  44a1d1:	mov    BYTE PTR [eax+0xf88675b],bl
  44a1d7:	punpcklwd mm6,DWORD PTR [ecx+0x5c]
  44a1db:	(bad)  
  44a1dc:	jp     0x44a22f
  44a1de:	stos   BYTE PTR es:[edi],al
  44a1df:	and    ch,BYTE PTR [esi]
  44a1e1:	jnp    0x44a21c
  44a1e3:	mov    ecx,0xe719e84d
  44a1e8:	add    BYTE PTR [ebp-0x53],cl
  44a1eb:	gs icebp 
  44a1ed:	test   al,0xd9
  44a1ef:	ficom  WORD PTR ds:0xc2f00b07
  44a1f5:	out    0xbb,al
  44a1f7:	mov    esp,0xd88da146
  44a1fc:	mov    ebp,0xf864f30b
  44a201:	pop    ebx
  44a202:	cwde   
  44a203:	adc    al,0x7
  44a205:	jge    0x44a220
  44a207:	mov    eax,0x6b3709d2
  44a20c:	std    
  44a20d:	sbb    BYTE PTR [ebx],ah
  44a20f:	cmp    DWORD PTR [ebp-0xf],0xfffffffb
  44a213:	xor    BYTE PTR [edi+0x58],0x3e
  44a217:	pop    ss
  44a218:	mov    esp,0x68899a07
  44a21d:	inc    esi
  44a21e:	or     edx,DWORD PTR [ebx]
  44a220:	sub    BYTE PTR [eax-0x7],cl
  44a223:	mov    bh,0xb9
  44a225:	mov    al,0x69
  44a227:	jo     0x44a249
  44a229:	mov    ecx,0xfa599027
  44a22e:	jne    0x44a1c6
  44a230:	sbb    dl,ch
  44a232:	mov    ah,0xb1
  44a234:	rcl    DWORD PTR [ebx],0x2
  44a237:	es aad 0xd7
  44a23a:	sbb    al,0xa9
  44a23c:	mov    esi,0xa177e58c
  44a241:	and    DWORD PTR [eax-0x10fa8b4],esi
  44a247:	sub    edx,DWORD PTR [eax-0x66]
  44a24a:	inc    edx
  44a24b:	mov    ah,0xd7
  44a24d:	add    cl,ah
  44a24f:	sbb    cl,BYTE PTR [eax-0x37]
  44a252:	cli    
  44a253:	cmp    cl,bl
  44a255:	enter  0x955,0x2c
  44a259:	mov    ebx,0xbe23ce51
  44a25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a25f:	mov    al,ds:0x2b141759
  44a264:	lahf   
  44a265:	jge    0x44a2d7
  44a267:	inc    eax
  44a268:	pop    esp
  44a269:	outs   dx,BYTE PTR ds:[esi]
  44a26a:	ins    BYTE PTR es:[edi],dx
  44a26b:	sub    DWORD PTR [eax+0xf1c81a4],0xbb762e4e
  44a275:	xchg   BYTE PTR [edi-0x20],cl
  44a278:	mov    ah,0x1d
  44a27a:	dec    edx
  44a27b:	or     BYTE PTR [ebx],al
  44a27d:	popf   
  44a27e:	int3   
  44a27f:	xor    BYTE PTR [eax-0x5b0b1ea5],dh
  44a285:	sbb    al,0x63
  44a287:	dec    ecx
  44a288:	mov    bl,0xde
  44a28a:	rcr    cl,1
  44a28c:	sar    BYTE PTR [edi-0x52],1
  44a28f:	lods   eax,DWORD PTR ds:[esi]
  44a290:	jmp    0xa976bc61
  44a295:	xlat   BYTE PTR ds:[ebx]
  44a296:	pop    edi
  44a297:	std    
  44a298:	iret   
  44a299:	xor    al,0x7e
  44a29b:	daa    
  44a29c:	lods   eax,DWORD PTR ds:[esi]
  44a29d:	jae    0x44a2aa
  44a29f:	arpl   WORD PTR ds:0xb0736c5,cx
  44a2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a2a6:	cmp    eax,0x735a2941
  44a2ab:	ret    0xf7ad
  44a2ae:	push   ds
  44a2af:	push   0xe4983470
  44a2b4:	ror    DWORD PTR [ebx],0x86
  44a2b7:	fldcw  WORD PTR [ecx-0x309abe97]
  44a2bd:	mov    al,0x58
  44a2bf:	cmp    ch,BYTE PTR [edi+0x610d2495]
  44a2c5:	cmp    bl,BYTE PTR [eax+0x7749b0d]
  44a2cb:	xchg   edi,eax
  44a2cc:	push   es
  44a2cd:	in     al,0xb
  44a2cf:	inc    ebx
  44a2d0:	cwde   
  44a2d1:	sbb    al,0xc9
  44a2d3:	lods   al,BYTE PTR ds:[esi]
  44a2d4:	xor    DWORD PTR [ecx-0x7f221080],ebp
  44a2da:	jno    0x44a281
  44a2dc:	or     DWORD PTR [ecx],eax
  44a2de:	push   0x23b54c81
  44a2e3:	or     dh,BYTE PTR [ecx]
  44a2e5:	retf   0xad21
  44a2e8:	xor    eax,0x14664dc4
  44a2ed:	pop    ecx
  44a2ee:	enter  0x2a8f,0xb1
  44a2f2:	sbb    BYTE PTR [edi+0x35],bh
  44a2f5:	dec    ecx
  44a2f6:	push   ss
  44a2f7:	adc    BYTE PTR ds:[eax+0x34c182],ah
  44a2fe:	loopne 0x44a285
  44a300:	popf   
  44a301:	shr    BYTE PTR [eax-0x4b],cl
  44a304:	push   cs
  44a305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a306:	dec    eax
  44a307:	xor    dl,bh
  44a309:	inc    ebp
  44a30a:	outs   dx,DWORD PTR ds:[esi]
  44a30b:	pop    edx
  44a30c:	mov    esp,0x1ac14136
  44a311:	fimul  DWORD PTR [ebx+0x3e9aeaf8]
  44a317:	sub    BYTE PTR [ecx+0x2044eb9d],dl
  44a31d:	adc    edx,edi
  44a31f:	pop    ebp
  44a320:	stos   BYTE PTR es:[edi],al
  44a321:	xchg   BYTE PTR ds:0xb62273d4,al
  44a327:	adc    eax,0x6c0c0052
  44a32c:	push   edi
  44a32d:	cld    
  44a32e:	jb     0x44a34a
  44a330:	xchg   ebp,eax
  44a331:	jmp    0xef88bdc9
  44a336:	xchg   edi,eax
  44a337:	fcmovu st,st(5)
  44a339:	in     eax,0x36
  44a33b:	and    eax,0xd609847b
  44a340:	rcl    BYTE PTR [ecx-0x64],1
  44a343:	cdq    
  44a344:	push   0x4c4dc2ff
  44a349:	dec    ebx
  44a34a:	dec    ebp
  44a34b:	outs   dx,DWORD PTR ds:[esi]
  44a34c:	xchg   esi,eax
  44a34d:	in     al,dx
  44a34e:	and    eax,0x89f3b591
  44a353:	mov    dh,0xef
  44a355:	dec    edx
  44a356:	push   ebx
  44a357:	shl    al,0x3c
  44a35a:	mov    ebp,ebp
  44a35c:	mov    dh,0x2
  44a35e:	xchg   edx,eax
  44a35f:	inc    eax
  44a360:	fld    QWORD PTR [ebp+0x75]
  44a364:	dec    dh
  44a366:	xchg   DWORD PTR [edx],edi
  44a368:	mov    al,0x7f
  44a36a:	dec    edx
  44a36b:	lahf   
  44a36c:	out    dx,al
  44a36d:	jmp    0xb90b:0x7169cfe5
  44a374:	sbb    BYTE PTR [ecx],bl
  44a376:	and    esp,esp
  44a378:	pop    edi
  44a379:	xchg   edi,eax
  44a37a:	rol    DWORD PTR [edi-0x6f],0x5
  44a37e:	sub    BYTE PTR [edx],0x60
  44a381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a382:	fisub  DWORD PTR [edx]
  44a384:	inc    edi
  44a385:	xchg   BYTE PTR [edi],ch
  44a387:	push   edi
  44a388:	popa   
  44a389:	(bad)  
  44a38b:	adc    eax,0xaa70349b
  44a390:	ficom  WORD PTR [ebx+ecx*2+0x29000136]
  44a397:	loopne 0x44a38e
  44a399:	push   ecx
  44a39a:	adc    eax,0xe77e3874
  44a39f:	cdq    
  44a3a0:	mov    BYTE PTR ds:0x3a3894fc,dl
  44a3a6:	mov    ds:0xd22a3086,eax
  44a3ab:	jno    0x44a354
  44a3ad:	loop   0x44a391
  44a3af:	and    BYTE PTR [esi-0x20],dh
  44a3b2:	pop    ebp
  44a3b3:	shld   ecx,edi,cl
  44a3b6:	pop    ebp
  44a3b7:	mov    edx,0xf77af0ac
  44a3bc:	xor    BYTE PTR [ecx-0xed00eea],al
  44a3c2:	fimul  DWORD PTR [esi]
  44a3c4:	xor    ah,BYTE PTR [edi+0x5f0d34c2]
  44a3ca:	and    DWORD PTR [ebp+0x4a],edi
  44a3cd:	and    al,BYTE PTR [edi-0x7a27b690]
  44a3d3:	mov    ds:0x5cc4fa3,al
  44a3d8:	dec    ebp
  44a3d9:	or     edi,DWORD PTR [edx-0x47a1fce7]
  44a3df:	dec    esi
  44a3e0:	push   ecx
  44a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a3e2:	iret   
  44a3e3:	mov    ds:0x1016d089,eax
  44a3e8:	(bad)  
  44a3e9:	test   eax,0xb025e49d
  44a3ee:	xchg   esi,eax
  44a3ef:	push   0x3a
  44a3f1:	arpl   WORD PTR [eax],cx
  44a3f3:	dec    ebp
  44a3f4:	int3   
  44a3f5:	xchg   BYTE PTR [ebx],dh
  44a3f7:	into   
  44a3f8:	je     0x44a38e
  44a3fa:	sbb    dl,BYTE PTR [ebx+0x1a]
  44a3fd:	mov    esi,0x4711c432
  44a402:	or     al,0x89
  44a404:	xchg   edx,eax
  44a405:	aam    0xf1
  44a407:	clc    
  44a408:	pop    esp
  44a409:	ss or  al,0x38
  44a40c:	ds add eax,0x785fbaeb
  44a412:	lea    edx,[ecx+0x3afcdb43]
  44a418:	ss sub edx,edx
  44a41b:	mov    ah,0x62
  44a41d:	pop    esi
  44a41e:	sbb    DWORD PTR [ecx-0x45],esi
  44a421:	loope  0x44a3c9
  44a423:	mov    esp,0xb4dced81
  44a428:	call   0xbc6c:0xc8b19fad
  44a42f:	sbb    DWORD PTR [eax+ebx*4+0x2a],eax
  44a433:	add    BYTE PTR [ebp-0xad6958c],ch
  44a439:	ins    BYTE PTR es:[edi],dx
  44a43a:	push   ecx
  44a43b:	pop    ds
  44a43c:	sub    BYTE PTR [esi],cl
  44a43e:	jle    0x44a3f6
  44a440:	push   0xa01dd1bf
  44a445:	mov    ecx,0xfc80a647
  44a44a:	ss sahf 
  44a44c:	jp     0x44a459
  44a44e:	loope  0x44a3f4
  44a450:	out    dx,eax
  44a451:	fstp   QWORD PTR [edi+0x3]
  44a454:	add    al,BYTE PTR [edx+edi*8+0x5f409189]
  44a45b:	pop    edx
  44a45c:	outs   dx,DWORD PTR ds:[esi]
  44a45d:	test   DWORD PTR [edx],esi
  44a45f:	jno    0x44a41e
  44a461:	rcr    DWORD PTR [ecx+0x1ee17bd],0xc9
  44a468:	shl    DWORD PTR [edx-0x1b7329df],0x8
  44a46f:	je     0x44a46b
  44a471:	pop    esi
  44a472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a473:	cdq    
  44a474:	repz popa 
  44a476:	or     esi,ebp
  44a478:	popa   
  44a479:	fsubr  st,st(6)
  44a47b:	mov    bh,0x81
  44a47d:	mov    esp,edx
  44a47f:	xchg   edi,eax
  44a480:	inc    esp
  44a481:	fstp   st(3)
  44a483:	mov    eax,0xf7b82ab6
  44a488:	(bad)  
  44a489:	dec    ebx
  44a48a:	leave  
  44a48b:	adc    DWORD PTR [edx-0x1aa5f181],eax
  44a491:	cmc    
  44a492:	push   esp
  44a493:	ds sbb ah,cl
  44a496:	into   
  44a497:	iret   
  44a498:	xor    al,0x2c
  44a49a:	and    DWORD PTR [ebp+ebx*2+0x3737e6cb],edi
  44a4a1:	cmp    cl,BYTE PTR [edi+0x5d05c1bb]
  44a4a7:	inc    ebp
  44a4a8:	aaa    
  44a4a9:	out    dx,eax
  44a4aa:	mov    al,0x33
  44a4ac:	sti    
  44a4ad:	ss stos BYTE PTR es:[edi],al
  44a4af:	fdiv   QWORD PTR [esi]
  44a4b1:	in     al,dx
  44a4b2:	stos   BYTE PTR es:[edi],al
  44a4b3:	cmp    ebx,DWORD PTR [ebx-0x2d1339b5]
  44a4b9:	push   cs
  44a4ba:	mov    bh,BYTE PTR [edx-0x76]
  44a4bd:	dec    esp
  44a4be:	sti    
  44a4bf:	or     cl,BYTE PTR [ebx]
  44a4c1:	dec    esi
  44a4c2:	pop    edx
  44a4c3:	xchg   edi,eax
  44a4c4:	(bad)  
  44a4c5:	adc    BYTE PTR fs:[ebx+0xea4acab],0x2c
  44a4cd:	sub    eax,0x33ee3740
  44a4d2:	jb     0x44a52a
  44a4d4:	test   BYTE PTR [eax+0x67],0x58
  44a4d8:	sub    esp,DWORD PTR [ecx-0x5e]
  44a4db:	lock add al,0xd4
  44a4de:	mov    bl,0x54
  44a4e0:	stc    
  44a4e1:	or     ebp,DWORD PTR [edi]
  44a4e3:	loope  0x44a54a
  44a4e5:	mov    bl,0xfb
  44a4e7:	fwait
  44a4e8:	push   ebx
  44a4e9:	jo     0x44a48c
  44a4eb:	jecxz  0x44a4bf
  44a4ed:	and    DWORD PTR ds:0xb30cacad,ebx
  44a4f3:	fdivr  DWORD PTR [esi]
  44a4f5:	mov    ch,BYTE PTR [ecx]
  44a4f7:	out    dx,al
  44a4f8:	dec    edi
  44a4f9:	jge    0x44a50c
  44a4fb:	mov    edi,0x67dcabe2
  44a500:	jge    0x44a4f9
  44a502:	in     eax,0x3b
  44a504:	fcomp  DWORD PTR [eax+0x1e5ce496]
  44a50a:	into   
  44a50b:	mov    ebx,0xb7df1406
  44a510:	mov    ch,0x17
  44a512:	xchg   DWORD PTR [edi+0x2e5a21f4],esi
  44a518:	enter  0x1ae5,0x66
  44a51c:	loopne 0x44a4b1
  44a51e:	cmc    
  44a51f:	pusha  
  44a520:	(bad)  [edi+0x6a171ca5]
  44a526:	mov    edx,0x7641093c
  44a52b:	jl     0x44a4cb
  44a52d:	in     al,0x55
  44a52f:	push   ebp
  44a530:	adc    al,0xa7
  44a532:	xor    BYTE PTR [eax-0x2250e069],ah
  44a538:	adc    bl,0x89
  44a53b:	je     0x44a516
  44a53d:	test   DWORD PTR [edx+0x4a],esp
  44a540:	aaa    
  44a541:	push   ebp
  44a542:	mov    esp,DWORD PTR [eax]
  44a544:	pop    es
  44a545:	popf   
  44a546:	out    0x20,al
  44a548:	mov    dl,0x2c
  44a54a:	dec    esi
  44a54b:	and    ecx,eax
  44a54d:	inc    ebx
  44a54e:	popf   
  44a54f:	mov    DWORD PTR [ecx+0x26],eax
  44a552:	outs   dx,BYTE PTR ds:[esi]
  44a553:	repnz or eax,0x20c1243
  44a559:	icebp  
  44a55a:	sbb    BYTE PTR [edx-0x4e],ah
  44a55d:	or     al,0x8f
  44a55f:	push   ss
  44a560:	push   ecx
  44a561:	and    edi,edx
  44a563:	push   esp
  44a564:	add    eax,0x91362090
  44a569:	lods   eax,DWORD PTR ds:[esi]
  44a56a:	sbb    al,0xaf
  44a56c:	push   ss
  44a56d:	stc    
  44a56e:	sbb    BYTE PTR [ecx+0x1959bd27],ch
  44a574:	dec    esp
  44a575:	sahf   
  44a576:	cmp    DWORD PTR [eax+0x892c898],edi
  44a57c:	imul   edi,ebp,0x2a
  44a57f:	scas   al,BYTE PTR es:[edi]
  44a580:	mov    eax,ds:0x2af6dabb
  44a585:	adc    eax,0x1e1b4960
  44a58a:	mov    ebx,0xcdacf0dc
  44a58f:	popf   
  44a590:	mov    ?,WORD PTR [ebp+0x77]
  44a593:	push   ss
  44a594:	or     ah,BYTE PTR [edx-0x5196101f]
  44a59a:	aad    0x17
  44a59c:	push   0xc8085094
  44a5a1:	(bad)
  44a5a6:	(bad)  
  44a5a7:	aam    0x30
  44a5a9:	imul   BYTE PTR [edi]
  44a5ab:	sbb    eax,0xefa4fb5a
  44a5b0:	into   
  44a5b1:	imul   ebp,DWORD PTR [ecx+0x74],0x62
  44a5b5:	stos   BYTE PTR es:[edi],al
  44a5b6:	scas   eax,DWORD PTR es:[edi]
  44a5b7:	jl     0x44a5df
  44a5b9:	pop    edi
  44a5ba:	push   0x9622ebe0
  44a5bf:	fbstp  TBYTE PTR [edx-0x63354a43]
  44a5c5:	push   ds
  44a5c6:	aad    0x5a
  44a5c8:	mov    ebx,ebx
  44a5ca:	pop    esi
  44a5cb:	mov    al,BYTE PTR [esi+edi*1]
  44a5ce:	sbb    DWORD PTR [esi-0x7f],eax
  44a5d1:	cmp    BYTE PTR [ebx],cl
  44a5d3:	arpl   WORD PTR [esi+0x279fb223],bx
  44a5d9:	push   edi
  44a5da:	inc    esi
  44a5db:	lea    ebp,[edi-0x59]
  44a5de:	jne    0x44a634
  44a5e0:	or     al,0x8
  44a5e2:	adc    eax,0xc8818337
  44a5e7:	popf   
  44a5e8:	ja     0x44a646
  44a5ea:	add    ah,BYTE PTR [esi+esi*8+0x30]
  44a5ee:	lock ds test eax,0x7356e095
  44a5f5:	les    edx,FWORD PTR [ecx-0x33]
  44a5f8:	cmp    eax,0xbfea6d42
  44a5fd:	icebp  
  44a5fe:	or     bh,dh
  44a600:	push   edx
  44a601:	jecxz  0x44a5d4
  44a603:	fwait
  44a604:	mov    esi,0xe7d00931
  44a609:	add    BYTE PTR [ecx],bh
  44a60b:	jns    0x44a635
  44a60d:	or     edx,DWORD PTR [ebx]
  44a60f:	js     0x44a5f9
  44a611:	xchg   esi,eax
  44a612:	fcmovnu st,st(7)
  44a614:	push   ebp
  44a615:	jo     0x44a602
  44a617:	dec    edx
  44a618:	lods   eax,DWORD PTR ds:[esi]
  44a619:	clc    
  44a61a:	gs mov ecx,esp
  44a61d:	cmp    DWORD PTR [ebp-0x71],edi
  44a620:	test   eax,0xeef078a4
  44a625:	push   0x60
  44a627:	in     eax,dx
  44a628:	pop    edi
  44a629:	inc    esi
  44a62a:	enter  0x889a,0x14
  44a62e:	das    
  44a62f:	imul   si,WORD PTR [esi],0xf2d2
  44a634:	fs add al,ah
  44a637:	push   0xdb6eabac
  44a63c:	arpl   bx,bx
  44a63e:	dec    ebp
  44a63f:	retf   
  44a640:	test   edi,0x99419022
  44a646:	popa   
  44a647:	add    BYTE PTR ds:0xff59d44a,bh
  44a64d:	xchg   al,dl
  44a64f:	sbb    al,0x3c
  44a651:	pushf  
  44a652:	or     al,0x26
  44a654:	sahf   
  44a655:	pop    eax
  44a656:	pop    esi
  44a657:	fwait
  44a658:	hlt    
  44a659:	dec    edx
  44a65a:	ins    DWORD PTR es:[edi],dx
  44a65b:	lock in eax,0xb8
  44a65e:	fst    DWORD PTR [eax+0x68c87504]
  44a664:	mov    dl,0x14
  44a666:	cwde   
  44a667:	cmc    
  44a668:	cmp    ebp,DWORD PTR [edi-0x47]
  44a66b:	les    ebx,FWORD PTR [esi-0x68]
  44a66e:	(bad)  
  44a66f:	hlt    
  44a670:	in     eax,dx
  44a671:	dec    eax
  44a672:	sbb    edx,DWORD PTR [esi]
  44a674:	sar    DWORD PTR ds:[ebx-0x56],0x9d
  44a679:	inc    di
  44a67b:	lods   al,BYTE PTR ds:[esi]
  44a67c:	xchg   BYTE PTR [edx-0x73],cl
  44a67f:	(bad)  
  44a680:	xchg   ecx,eax
  44a681:	sbb    bh,BYTE PTR [eax+0x3e]
  44a684:	(bad)  
  44a685:	aaa    
  44a686:	int    0x47
  44a688:	mov    esp,0x4b862699
  44a68d:	lds    edx,FWORD PTR [edx]
  44a68f:	cmc    
  44a690:	pop    edx
  44a691:	or     DWORD PTR [ecx],0xee7b4fd
  44a697:	push   edi
  44a698:	jne    0x44a697
  44a69a:	mov    bh,0x6
  44a69c:	jp     0x44a705
  44a69e:	jge    0x44a6d4
  44a6a0:	mov    DWORD PTR [ebx],edi
  44a6a2:	sub    bl,bh
  44a6a4:	jge    0x44a675
  44a6a6:	or     DWORD PTR [ebp-0x31d9a181],eax
  44a6ac:	out    dx,al
  44a6ad:	inc    edi
  44a6ae:	enter  0xc320,0x4c
  44a6b2:	cs sahf 
  44a6b4:	adc    al,bh
  44a6b6:	hlt    
  44a6b7:	mov    edx,0x68a928a3
  44a6bc:	xchg   esi,eax
  44a6bd:	lods   eax,DWORD PTR ds:[esi]
  44a6be:	pusha  
  44a6bf:	iret   
  44a6c0:	xlat   BYTE PTR ds:[ebx]
  44a6c1:	jmp    0x992437a4
  44a6c6:	retf   
  44a6c7:	std    
  44a6c8:	push   ebx
  44a6c9:	repnz test DWORD PTR [edi],ebx
  44a6cc:	ds mov ebp,0x2f32d666
  44a6d2:	(bad)  
  44a6d3:	ins    BYTE PTR es:[edi],dx
  44a6d4:	push   esi
  44a6d5:	fwait
  44a6d6:	mov    edi,0x50fc272c
  44a6db:	push   ecx
  44a6dc:	sar    BYTE PTR [edx-0x73b9607c],0x40
  44a6e3:	scas   eax,DWORD PTR es:[edi]
  44a6e4:	sub    al,0x56
  44a6e6:	mov    bl,0x5c
  44a6e8:	xchg   ecx,eax
  44a6e9:	into   
  44a6ea:	int3   
  44a6eb:	inc    edx
  44a6ec:	sbb    bh,dh
  44a6ee:	and    BYTE PTR [edi+esi*2],ah
  44a6f1:	xchg   esp,eax
  44a6f2:	test   eax,0x66fff272
  44a6f7:	mov    bl,0xa1
  44a6f9:	mov    eax,ss
  44a6fb:	adc    eax,0x4d7355be
  44a700:	push   0xf1d2aa7c
  44a705:	outs   dx,DWORD PTR ds:[esi]
  44a706:	fsubr  DWORD PTR [edx+0x7bbb3cdc]
  44a70c:	dec    esi
  44a70d:	retf   0xbe9e
  44a710:	mov    WORD PTR ds:0xa379facc,?
  44a716:	pop    ecx
  44a717:	mov    ds:0xb618703b,eax
  44a71c:	std    
  44a71d:	and    DWORD PTR [esi],eax
  44a71f:	data16 cmc 
  44a721:	xor    BYTE PTR [ebp+0x46],dl
  44a724:	xchg   ebx,eax
  44a725:	push   ebx
  44a726:	jg     0x44a77e
  44a728:	or     edx,esp
  44a72a:	cwde   
  44a72b:	cmp    eax,0x387b2808
  44a730:	cmp    BYTE PTR es:[ebx],bl
  44a733:	setne  BYTE PTR [ebx-0x75]
  44a737:	mov    edi,0x388d5c23
  44a73c:	cmp    bl,0xe8
  44a73f:	mov    esi,0x8c9e1d0d
  44a744:	push   esp
  44a745:	and    edx,DWORD PTR [edx+0x5be2dc0b]
  44a74b:	nop
  44a74c:	sar    ecx,0x2
  44a74f:	pop    edi
  44a750:	hlt    
  44a751:	stc    
  44a752:	repz (bad) [ebx+0x5c]
  44a756:	repz fmul DWORD PTR [edx+0x62babe96]
  44a75d:	cdq    
  44a75e:	fwait
  44a75f:	shl    BYTE PTR [ecx],0xc1
  44a762:	aam    0xdf
  44a764:	cs mov bl,0xe
  44a767:	retf   0xe042
  44a76a:	test   eax,0x38fba034
  44a76f:	mov    ecx,ds
  44a771:	mov    ebx,DWORD PTR [ecx-0x157854d3]
  44a777:	adc    DWORD PTR [edx],esp
  44a779:	lea    ebx,[esi-0x47b89310]
  44a77f:	int3   
  44a780:	adc    BYTE PTR [ebp-0x74],bh
  44a783:	fstp   TBYTE PTR [edx]
  44a785:	xchg   esp,eax
  44a786:	mov    es,WORD PTR ds:0x37127473
  44a78c:	sbb    dh,dl
  44a78e:	add    esp,ecx
  44a790:	ins    BYTE PTR es:[edi],dx
  44a791:	dec    ecx
  44a792:	xchg   ebp,eax
  44a793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a794:	call   FWORD PTR [edx+0x59]
  44a797:	ret    
  44a798:	push   ebx
  44a799:	not    ah
  44a79b:	xor    DWORD PTR [eax],ecx
  44a79d:	xor    al,0xb0
  44a79f:	xor    BYTE PTR [esi],0xa5
  44a7a2:	cmc    
  44a7a3:	sbb    bh,bl
  44a7a5:	jbe    0x44a770
  44a7a7:	push   edi
  44a7a8:	mov    bh,0xc0
  44a7aa:	iret   
  44a7ab:	xor    al,0x1b
  44a7ad:	out    0xe8,al
  44a7af:	fist   WORD PTR [ecx-0xeb9292b]
  44a7b5:	dec    eax
  44a7b6:	jg     0x44a819
  44a7b8:	jge    0x44a805
  44a7ba:	or     eax,0x7ac93529
  44a7bf:	dec    edi
  44a7c0:	push   edx
  44a7c1:	fnstcw WORD PTR [edx+0xe74de77]
  44a7c7:	or     al,dl
  44a7c9:	pop    ebp
  44a7ca:	mov    eax,0x2189083e
  44a7cf:	cld    
  44a7d0:	stos   DWORD PTR es:[edi],eax
  44a7d1:	or     al,0x22
  44a7d3:	daa    
  44a7d4:	adc    ebp,edx
  44a7d6:	add    al,0x86
  44a7d8:	dec    esp
  44a7d9:	sub    al,0x1d
  44a7db:	inc    eax
  44a7dc:	popa   
  44a7dd:	adc    al,0x9b
  44a7df:	dec    eax
  44a7e0:	aaa    
  44a7e1:	dec    edx
  44a7e2:	mov    edx,0x7c66873e
  44a7e7:	test   BYTE PTR [edi-0x92cd5ca],ah
  44a7ed:	pop    edi
  44a7ee:	icebp  
  44a7ef:	in     eax,0x10
  44a7f1:	outs   dx,DWORD PTR ds:[esi]
  44a7f2:	or     al,0xbe
  44a7f4:	mov    eax,ds:0xe8264440
  44a7f9:	dec    eax
  44a7fa:	fcomp  QWORD PTR [ecx+0xb91da3f]
  44a800:	xor    DWORD PTR [ecx],edx
  44a802:	stos   DWORD PTR es:[edi],eax
  44a803:	(bad)  
  44a805:	jmp    0x886e:0xaacdd997
  44a80c:	and    BYTE PTR [edx],0x15
  44a80f:	enter  0xb82d,0x9b
  44a813:	pop    ecx
  44a814:	out    0x2,eax
  44a816:	mov    bh,0x3
  44a818:	jg     0x44a860
  44a81a:	test   eax,0xca43b8ef
  44a81f:	mov    cl,0x5b
  44a821:	popf   
  44a822:	push   es
  44a823:	ret    0xaa82
  44a826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a827:	das    
  44a828:	les    esp,FWORD PTR [eax+0x1bbfc1fb]
  44a82e:	cmp    DWORD PTR [edi-0x55],edi
  44a831:	dec    esi
  44a832:	mov    dl,0x31
  44a834:	jb     0x44a88c
  44a836:	dec    ebp
  44a837:	pop    esi
  44a839:	and    esp,DWORD PTR [ebp+edx*1+0x426abfb0]
  44a840:	leave  
  44a841:	fild   DWORD PTR [eax+esi*4+0x3a515713]
  44a848:	add    al,bh
  44a84a:	xchg   BYTE PTR [edx],cl
  44a84c:	xor    ecx,DWORD PTR [edi+ecx*2]
  44a84f:	mov    ds:0x179583cb,eax
  44a854:	ins    DWORD PTR es:[edi],dx
  44a855:	sbb    edi,DWORD PTR [ecx-0x62]
  44a858:	jae    0x44a84c
  44a85a:	mov    esp,0xde48ef1f
  44a85f:	sbb    BYTE PTR [ebx+eax*2+0x11d4a6],ah
  44a866:	fdivr  st,st(7)
  44a868:	jp     0x44a831
  44a86a:	es add bh,dh
  44a86d:	dec    eax
  44a86e:	inc    ebx
  44a86f:	les    ecx,FWORD PTR [esp+eax*4-0x6fd95d90]
  44a876:	push   ebp
  44a877:	(bad)  
  44a878:	add    bh,BYTE PTR [eax]
  44a87a:	mov    fs,WORD PTR [ebp+0x7]
  44a87d:	mov    eax,ds:0xe48bcba
  44a882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a883:	clc    
  44a884:	in     al,dx
  44a885:	ds retf 
  44a887:	ds push ecx
  44a889:	xchg   edi,eax
  44a88a:	xor    ah,BYTE PTR [edi]
  44a88c:	vshufps ymm1,ymm0,YMMWORD PTR [ebp+0x550486d1],0x8a
  44a895:	(bad)  [edx+0x5a]
  44a898:	jmp    0x97d4:0x59a9cba
  44a89f:	nop
  44a8a0:	out    dx,al
  44a8a1:	mov    edx,0x192d186b
  44a8a6:	(bad)  
  44a8a7:	mov    ds:0xf03c323f,eax
  44a8ac:	sbb    esi,DWORD PTR [ebx-0x5485031c]
  44a8b2:	xchg   ebp,edx
  44a8b4:	dec    esi
  44a8b5:	retf   
  44a8b6:	ss (bad) 
  44a8b8:	lea    ecx,[ecx-0x61]
  44a8bb:	ret    0x9d59
  44a8be:	aad    0xa1
  44a8c0:	dec    eax
  44a8c1:	cmp    eax,0xecace8b
  44a8c6:	fcom   QWORD PTR [ebx-0x1d2be595]
  44a8cc:	adc    bh,cl
  44a8ce:	popa   
  44a8cf:	pop    esp
  44a8d0:	(bad)  
  44a8d1:	jo     0x44a860
  44a8d3:	pusha  
  44a8d4:	mov    bh,0xf0
  44a8d6:	test   al,0x35
  44a8d8:	mov    edi,0x3bf14517
  44a8dd:	push   0x6c
  44a8df:	add    cl,ch
  44a8e1:	pop    ss
  44a8e2:	mov    ch,0xb5
  44a8e4:	xchg   esp,eax
  44a8e5:	ja     0x44a8ab
  44a8e7:	jle    0x44a902
  44a8e9:	adc    eax,0x921b7093
  44a8ee:	cmp    al,0x95
  44a8f0:	aam    0x31
  44a8f2:	jmp    0x44a967
  44a8f4:	dec    eax
  44a8f5:	test   al,0xe6
  44a8f7:	xchg   ebx,eax
  44a8f8:	loopne 0x44a93e
  44a8fa:	hlt    
  44a8fb:	xor    DWORD PTR [edi+0x9],ebx
  44a8fe:	jge    0x44a91f
  44a900:	or     eax,0x9ef7e73f
  44a905:	arpl   WORD PTR [ebp-0x5f],di
  44a908:	add    ebx,ecx
  44a90a:	outs   dx,DWORD PTR ds:[esi]
  44a90b:	dec    esp
  44a90c:	stos   DWORD PTR es:[edi],eax
  44a90d:	fcmovbe st,st(0)
  44a90f:	xlat   BYTE PTR ds:[ebx]
  44a910:	rcl    BYTE PTR [ebx+0xdaab31f],0x27
  44a917:	test   BYTE PTR [edx-0x507c73d4],0x11
  44a91e:	mov    ebx,0xb2cb8892
  44a923:	push   edx
  44a924:	icebp  
  44a925:	aas    
  44a926:	enter  0x74cc,0x48
  44a92a:	in     eax,0x3f
  44a92c:	retf   0x3fc
  44a92f:	ret    
  44a930:	jge    0x44a908
  44a932:	and    al,0x87
  44a934:	adc    dh,BYTE PTR [edx]
  44a936:	adc    ecx,DWORD PTR [edi+0x0]
  44a939:	sbb    DWORD PTR [esi+ebp*8],ecx
  44a93c:	(bad)  
  44a93e:	fnsave [ecx+0x5b]
  44a941:	popf   
  44a942:	sbb    edi,edi
  44a944:	sbb    BYTE PTR [ebx],bl
  44a946:	mov    al,ds:0x1991c55e
  44a94b:	(bad)  
  44a94c:	ins    DWORD PTR es:[edi],dx
  44a94d:	jnp    0x44a9b4
  44a94f:	mov    ah,0x2b
  44a951:	dec    ecx
  44a952:	adc    esi,DWORD PTR [ebx]
  44a954:	ja     0x44a8e2
  44a956:	stos   BYTE PTR es:[edi],al
  44a957:	mov    ds:0x1e0cd3a8,al
  44a95c:	(bad)  
  44a95d:	scas   eax,DWORD PTR es:[edi]
  44a95e:	push   ecx
  44a95f:	jo     0x44a92e
  44a961:	fist   WORD PTR [eax]
  44a963:	setle  BYTE PTR [esi]
  44a966:	and    BYTE PTR [eax-0x47],bl
  44a969:	push   0x18c0fc86
  44a96e:	mov    ah,0x64
  44a970:	arpl   sp,si
  44a972:	pop    ss
  44a973:	(bad)  
  44a974:	repz lds edx,FWORD PTR [eax]
  44a977:	lods   al,BYTE PTR ds:[esi]
  44a978:	push   es
  44a979:	mov    al,0x36
  44a97b:	fs out 0x37,al
  44a97e:	pop    eax
  44a97f:	iret   
  44a980:	mov    ecx,0xee116f77
  44a985:	rcr    esp,1
  44a987:	scas   eax,DWORD PTR es:[edi]
  44a988:	xor    eax,0x63e68077
  44a98d:	push   ebp
  44a98e:	rcl    BYTE PTR [ebx+edi*2],cl
  44a991:	mov    al,ds:0x7046eada
  44a996:	fwait
  44a997:	leave  
  44a998:	aam    0x8
  44a99a:	dec    ecx
  44a99b:	dec    ebp
  44a99c:	push   cs
  44a99d:	pop    edi
  44a99e:	imul   cl
  44a9a0:	daa    
  44a9a1:	(bad)  
  44a9a2:	nop
  44a9a3:	test   BYTE PTR [ebx],bh
  44a9a5:	pop    esi
  44a9a6:	and    al,0x1a
  44a9a8:	cli    
  44a9a9:	cmp    eax,0x9bd3e130
  44a9ae:	jmp    0x44a9cc
  44a9b0:	fstp   QWORD PTR [esp+eiz*8+0x52e2afbe]
  44a9b7:	fnsave [edx]
  44a9b9:	aas    
  44a9ba:	mov    dh,0xb6
  44a9bc:	call   0xcbb9:0x5780c344
  44a9c3:	adc    eax,esi
  44a9c5:	scas   eax,DWORD PTR es:[edi]
  44a9c6:	cmp    DWORD PTR [eax+esi*1-0x2a],0x430b376
  44a9ce:	push   cs
  44a9cf:	inc    eax
  44a9d0:	rcl    cl,1
  44a9d2:	and    al,0x18
  44a9d4:	adc    DWORD PTR ss:[edx+0x3c808bce],eax
  44a9db:	sti    
  44a9dc:	pushf  
  44a9dd:	cs inc edi
  44a9df:	cdq    
  44a9e0:	mov    ah,0x54
  44a9e2:	test   esp,eax
  44a9e4:	movq   mm3,mm0
  44a9e7:	mov    esp,0xe4717280
  44a9ec:	fiadd  WORD PTR [edi+0x1]
  44a9ef:	push   ds
  44a9f0:	add    eax,0x51a9158b
  44a9f5:	xor    BYTE PTR [ecx+0x7a],ch
  44a9f8:	adc    ecx,DWORD PTR [ebp+0x32]
  44a9fb:	add    al,0x64
  44a9fd:	pop    ebp
  44a9fe:	adc    eax,0xc199edd5
  44aa03:	or     bh,BYTE PTR [edx+0x39]
  44aa06:	call   0xff51:0xe9339317
  44aa0d:	adc    BYTE PTR ss:[ecx],cl
  44aa10:	sbb    al,0x8f
  44aa12:	int    0x7a
  44aa14:	mov    dh,0x12
  44aa16:	rcl    ebp,0x60
  44aa19:	sbb    edi,edx
  44aa1b:	into   
  44aa1c:	sub    esi,DWORD PTR [eax]
  44aa1e:	sbb    BYTE PTR [eax+0x50b574b0],cl
  44aa24:	dec    edx
  44aa25:	dec    esi
  44aa26:	add    bl,al
  44aa28:	add    al,0x1f
  44aa2a:	nop
  44aa2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aa2c:	cmp    al,0xbb
  44aa2e:	popf   
  44aa2f:	in     eax,dx
  44aa30:	mov    BYTE PTR [edi-0x1b],dl
  44aa33:	(bad)  
  44aa34:	inc    ecx
  44aa35:	scas   al,BYTE PTR es:[edi]
  44aa36:	push   ebp
  44aa37:	push   es
  44aa38:	push   ss
  44aa39:	cli    
  44aa3a:	mov    dh,0x66
  44aa3c:	mov    ebp,0x299c1db9
  44aa41:	push   0xccb0ad22
  44aa46:	cmp    eax,0x70707940
  44aa4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aa4c:	je     0x44aa2c
  44aa4e:	or     bl,BYTE PTR [ecx-0x46]
  44aa51:	shr    BYTE PTR [eax-0x11e681d9],0xfd
  44aa58:	jecxz  0x44a9dc
  44aa5a:	repnz dec eax
  44aa5c:	retf   0xb133
  44aa5f:	test   eax,0xf982f2d2
  44aa64:	ret    0x5df1
  44aa67:	test   eax,0x67c73d99
  44aa6c:	jbe    0x44aa36
  44aa6e:	sub    eax,0x9f7a98cb
  44aa73:	jmp    0x823f007b
  44aa78:	mov    dl,0x14
  44aa7a:	jae    0x44aa56
  44aa7c:	jl     0xc373f6c9
  44aa82:	push   es
  44aa83:	adc    BYTE PTR [esi+eax*1],al
  44aa86:	sbb    al,0x42
  44aa88:	ret    
  44aa89:	mov    cl,0xb3
  44aa8b:	in     eax,0x3
  44aa8d:	inc    esp
  44aa8e:	cdq    
  44aa8f:	sbb    al,0x3a
  44aa91:	mov    BYTE PTR [edx+0x3935fa03],al
  44aa97:	sbb    DWORD PTR [edi],ecx
  44aa99:	xor    al,0x2c
  44aa9b:	jb     0x44aaa0
  44aa9d:	and    al,0xe9
  44aa9f:	icebp  
  44aaa0:	fimul  WORD PTR [edi]
  44aaa2:	test   eax,0x8ac45150
  44aaa7:	data16 (bad) 
  44aaa9:	retf   
  44aaaa:	ficom  WORD PTR [esi]
  44aaac:	sub    eax,0x65ce7873
  44aab1:	fstp   QWORD PTR [esi+0x7f17c261]
  44aab7:	gs mov ecx,0xdea7f81f
  44aabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aabe:	adc    cl,BYTE PTR [esi+0x3]
  44aac1:	jge    0x44aaed
  44aac3:	adc    DWORD PTR [ebp+0xaf743da],0xffffffbf
  44aaca:	cmp    eax,0x59df816c
  44aacf:	(bad)  
  44aad0:	popa   
  44aad1:	push   esi
  44aad2:	adc    DWORD PTR [esi-0x13a6aec4],ebp
  44aad8:	mov    WORD PTR [ebp*1-0x2a94abc6],?
  44aadf:	mov    cl,0x76
  44aae1:	add    BYTE PTR [ebp+0x43e2da5],ch
  44aae7:	pop    esp
  44aae8:	int    0xc7
  44aaea:	push   ss
  44aaeb:	and    BYTE PTR gs:[edx],0x13
  44aaef:	aaa    
  44aaf0:	ja     0x44aaad
  44aaf2:	sbb    al,0x92
  44aaf4:	rcl    DWORD PTR [ebp+0x53d71f39],0x6f
  44aafb:	xor    eax,0x54a8e543
  44ab00:	aaa    
  44ab01:	xchg   esi,eax
  44ab02:	sub    al,0x4
  44ab04:	int3   
  44ab05:	fdiv   DWORD PTR [eax-0x5dd60c53]
  44ab0b:	outs   dx,BYTE PTR ds:[esi]
  44ab0c:	jnp    0x44ab30
  44ab0e:	sbb    BYTE PTR [edx+0x671ce0dd],dl
  44ab14:	arpl   WORD PTR [ebp-0x1d],di
  44ab17:	sbb    esi,DWORD PTR [edi+0x49]
  44ab1a:	stc    
  44ab1b:	sbb    al,0x5b
  44ab1d:	cli    
  44ab1e:	push   esp
  44ab1f:	xchg   edi,eax
  44ab20:	sub    BYTE PTR [ecx],ah
  44ab22:	out    dx,eax
  44ab23:	lock add eax,0x656e2f8f
  44ab29:	sbb    al,BYTE PTR [esp+eiz*2]
  44ab2c:	add    BYTE PTR [ebx-0x652a1f1b],ch
  44ab32:	sbb    cl,BYTE PTR [eax-0x9]
  44ab35:	or     ecx,DWORD PTR [edx]
  44ab37:	sub    dh,BYTE PTR [ebx+eax*4+0x6b278ed4]
  44ab3e:	aas    
  44ab3f:	add    BYTE PTR [edx],0x77
  44ab42:	cld    
  44ab43:	clc    
  44ab44:	(bad)  
  44ab45:	repnz mov dh,0x4a
  44ab48:	sub    DWORD PTR [eax-0x33],ebx
  44ab4b:	adc    ecx,DWORD PTR [ecx]
  44ab4d:	arpl   dx,dx
  44ab4f:	fs rcr ebx,1
  44ab52:	push   esi
  44ab53:	lock push edx
  44ab55:	stc    
  44ab56:	enter  0xd30e,0xb9
  44ab5a:	hlt    
  44ab5b:	xchg   ecx,eax
  44ab5c:	(bad)  [edx]
  44ab5e:	mov    ds:0x3eb521a0,eax
  44ab63:	cmp    BYTE PTR [edi],ah
  44ab65:	add    DWORD PTR [eax],edi
  44ab67:	inc    esp
  44ab68:	fadd   st,st(3)
  44ab6a:	jno    0x44ab5c
  44ab6c:	outs   dx,DWORD PTR ds:[esi]
  44ab6d:	mov    bh,0x6
  44ab6f:	push   0xffffffe3
  44ab71:	push   edi
  44ab72:	jmp    0x44ab9f
  44ab74:	jl     0x44ab5e
  44ab76:	call   0x2cc6:0xe73dfba0
  44ab7d:	sbb    eax,0xe3aed885
  44ab82:	xor    DWORD PTR [edi],0x67
  44ab85:	clc    
  44ab86:	dec    edx
  44ab87:	das    
  44ab88:	not    DWORD PTR [edi-0x37]
  44ab8b:	inc    ebp
  44ab8c:	or     dh,BYTE PTR [edi]
  44ab8e:	sahf   
  44ab8f:	dec    eax
  44ab90:	push   esp
  44ab91:	sub    al,0x39
  44ab93:	cmp    al,0xdf
  44ab95:	rol    DWORD PTR [ebx+0x27669c38],1
  44ab9b:	pop    edi
  44ab9c:	int    0xfe
  44ab9e:	lods   eax,DWORD PTR ds:[esi]
  44ab9f:	push   es
  44aba0:	xchg   esi,eax
  44aba1:	test   al,0xee
  44aba3:	fs mov ebp,0x254d0ff9
  44aba9:	or     al,0x20
  44abab:	xor    dh,dl
  44abad:	dec    DWORD PTR [edx+ebp*4-0x4d]
  44abb1:	cli    
  44abb2:	jmp    0xcf03:0x4958aa47
  44abb9:	cld    
  44abba:	push   ebp
  44abbb:	outs   dx,WORD PTR ds:[esi]
  44abbd:	cli    
  44abbe:	jp     0x44ab9d
  44abc0:	jmp    0xaec5:0xc4df6191
  44abc7:	cli    
  44abc8:	xchg   dh,al
  44abca:	jns    0x44ab57
  44abcc:	les    esp,FWORD PTR [edx+0xd]
  44abcf:	sbb    ebp,DWORD PTR [edi-0x20]
  44abd2:	retf   0x4ce
  44abd5:	loopne 0x44ac48
  44abd7:	das    
  44abd8:	aam    0x3c
  44abda:	bound  ebp,QWORD PTR [edx]
  44abdc:	cmp    dh,cl
  44abde:	pusha  
  44abdf:	and    al,0x96
  44abe1:	jo     0x44ac54
  44abe3:	sbb    esp,esp
  44abe5:	mov    esi,0x55b8f3b
  44abea:	dec    ecx
  44abeb:	cmp    al,0xcb
  44abed:	mov    bl,0x6d
  44abef:	push   ss
  44abf0:	outs   dx,BYTE PTR ds:[esi]
  44abf1:	sbb    eax,DWORD PTR [ebx+0x17e19234]
  44abf7:	mov    edi,0xe8fbffa1
  44abfc:	inc    ecx
  44abfd:	cmp    al,0x2f
  44abff:	call   DWORD PTR [ebx-0x16]
  44ac02:	sbb    BYTE PTR [eax+edx*2-0x41],ch
  44ac06:	lahf   
  44ac07:	dec    esi
  44ac08:	pop    edx
  44ac09:	pushf  
  44ac0a:	loope  0x44abfe
  44ac0c:	inc    edi
  44ac0d:	outs   dx,DWORD PTR ds:[esi]
  44ac0e:	mov    al,ds:0xf040d7d6
  44ac13:	or     BYTE PTR [esi-0x1ba3746e],bl
  44ac19:	ror    DWORD PTR [eax+0x7b],0x99
  44ac1d:	stos   BYTE PTR es:[edi],al
  44ac1e:	mov    al,0x82
  44ac20:	imul   ebx,DWORD PTR [edx],0xc7a2e76d
  44ac26:	mov    ds:0xb3681c08,al
  44ac2b:	jg     0x44ac82
  44ac2d:	push   0x3a
  44ac2f:	sar    BYTE PTR [edx+esi*2-0x537e9dc5],1
  44ac36:	shr    BYTE PTR [edx+0x29],0xab
  44ac3a:	daa    
  44ac3b:	cmp    dl,BYTE PTR [ebx+0x66]
  44ac3e:	stc    
  44ac3f:	and    edi,edx
  44ac41:	jmp    0x683ce1ff
  44ac46:	(bad)  
  44ac47:	mov    al,ds:0x5a2f6f2c
  44ac4c:	add    al,0x9a
  44ac4e:	pop    ebp
  44ac4f:	into   
  44ac50:	out    dx,al
  44ac51:	cli    
  44ac52:	jbe    0x44ac7d
  44ac54:	cmp    al,0xd0
  44ac56:	out    dx,al
  44ac57:	gs add ah,bh
  44ac5a:	cmp    BYTE PTR [esi],al
  44ac5c:	cli    
  44ac5d:	fadd   QWORD PTR [eax]
  44ac5f:	jp     0x44ac9c
  44ac61:	popa   
  44ac62:	leave  
  44ac63:	xchg   edi,eax
  44ac64:	ficomp DWORD PTR [edi-0xcc25e5a]
  44ac6a:	fbld   TBYTE PTR ss:[edx]
  44ac6d:	out    0xb8,eax
  44ac6f:	xchg   ax,ax
  44ac71:	cmp    eax,0x1afa8b79
  44ac76:	enter  0xe1fc,0x3b
  44ac7a:	push   ss
  44ac7b:	xor    edi,DWORD PTR [esi-0x43]
  44ac7e:	test   al,0x51
  44ac80:	pop    eax
  44ac81:	imul   eax,DWORD PTR [ebp-0x70],0xa84fb4f2
  44ac88:	adc    al,0x97
  44ac8a:	mov    DWORD PTR [edi],esi
  44ac8c:	int3   
  44ac8d:	push   esp
  44ac8e:	(bad)  
  44ac90:	mov    ds:0x90eeef95,al
  44ac95:	mov    eax,0x7afd7293
  44ac9a:	(bad)  
  44ac9b:	not    DWORD PTR [esi+0x6a]
  44ac9e:	movups xmm2,XMMWORD PTR [edx+0xe03922a]
  44aca5:	sub    bh,al
  44aca7:	inc    ebx
  44aca8:	jb     0x44ac92
  44acaa:	and    ah,BYTE PTR [esi-0x2c3b47dd]
  44acb0:	jae    0x44acfd
  44acb2:	sbb    DWORD PTR [eax],ecx
  44acb4:	push   esi
  44acb5:	mov    cl,0x78
  44acb7:	jmp    0x49be:0x23777691
  44acbe:	and    bh,cl
  44acc0:	cmp    ah,ch
  44acc2:	fdiv   DWORD PTR [esi+0xebc28db]
  44acc8:	pop    esi
  44acc9:	pop    esp
  44acca:	and    al,0xaa
  44accc:	xor    DWORD PTR [ebx],ecx
  44acce:	push   edx
  44accf:	inc    DWORD PTR [eax+0x30cbc752]
  44acd5:	out    0x69,eax
  44acd7:	jmp    0x44acfd
  44acd9:	push   bx
  44acdb:	stos   DWORD PTR es:[edi],eax
  44acdc:	xor    ah,BYTE PTR [edx-0x61]
  44acdf:	mov    ebp,0x8f994de0
  44ace4:	cmp    ecx,DWORD PTR [edi]
  44ace6:	sti    
  44ace7:	xor    esi,esi
  44ace9:	cs jle 0x44acda
  44acec:	mov    edi,0xbf41f519
  44acf1:	fs out dx,al
  44acf3:	icebp  
  44acf4:	push   ebx
  44acf5:	adc    eax,0xe3e7a49
  44acfa:	jbe    0x44ad19
  44acfc:	inc    edi
  44acfd:	cmp    eax,0xf496e79a
  44ad02:	sti    
  44ad03:	fcomp  DWORD PTR [edi]
  44ad05:	jp     0x44ad58
  44ad07:	lock sar BYTE PTR gs:[edi+0x6c],0x24
  44ad0d:	rcr    esi,0x92
  44ad10:	xor    BYTE PTR [edx+0x3],bh
  44ad13:	enter  0x5c57,0x18
  44ad17:	pop    edx
  44ad18:	cmp    BYTE PTR [esp+eax*1+0x56f4ea3f],bl
  44ad1f:	mov    ah,0x1b
  44ad21:	mov    cl,cl
  44ad23:	inc    esp
  44ad24:	mov    eax,DWORD PTR [ecx-0x5b]
  44ad27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ad28:	add    ah,BYTE PTR [esi+0x1d]
  44ad2b:	xor    ebx,edx
  44ad2d:	sub    BYTE PTR [ebp-0x1a841d7a],bl
  44ad33:	cs mov al,0x9a
  44ad36:	jecxz  0x44ad1b
  44ad38:	ret    
  44ad39:	repz pop ds
  44ad3b:	inc    esp
  44ad3c:	mov    ch,bh
  44ad3e:	adc    DWORD PTR [ebx],ebp
  44ad40:	and    ecx,DWORD PTR [esi+0x309c7fc9]
  44ad46:	xchg   ebp,eax
  44ad47:	jne    0x44ad79
  44ad49:	xor    eax,0x2e12980e
  44ad4e:	sbb    edx,DWORD PTR [eax+0x7188957e]
  44ad54:	repnz fs mov ebp,0xfd260fbb
  44ad5c:	repnz retf 
  44ad5e:	xchg   ebx,eax
  44ad5f:	inc    ebx
  44ad60:	cld    
  44ad61:	add    edi,esp
  44ad63:	xor    al,0x46
  44ad65:	fsub   DWORD PTR [edx]
  44ad67:	outs   dx,DWORD PTR ds:[esi]
  44ad68:	jnp    0x44ade3
  44ad6a:	cmp    ch,dh
  44ad6c:	xchg   edx,eax
  44ad6d:	or     DWORD PTR [eax],eax
  44ad6f:	in     al,dx
  44ad70:	cmp    DWORD PTR ds:0x655b1e79,0xf6fb59f2
  44ad7a:	cmp    edx,DWORD PTR [ecx+edi*2-0x779f4d41]
  44ad81:	adc    ch,ch
  44ad83:	jae    0x44ad3a
  44ad85:	pop    ss
  44ad86:	repz les edx,FWORD PTR [esi+ebp*2-0x6b]
  44ad8b:	rol    BYTE PTR [eax-0x68],cl
  44ad8e:	cld    
  44ad8f:	pop    ecx
  44ad90:	sub    eax,0x3c18fa93
  44ad95:	mov    bl,0x80
  44ad97:	push   esp
  44ad98:	xor    al,0x53
  44ad9a:	ror    ebx,1
  44ad9c:	sub    eax,0xe7468d2a
  44ada1:	jne    0x44ad79
  44ada3:	in     eax,dx
  44ada4:	jns    0x44adc5
  44ada6:	js     0x44ad4e
  44ada8:	push   edi
  44ada9:	pop    edx
  44adaa:	mov    ds:0x66f354c6,al
  44adaf:	pop    ebp
  44adb0:	sub    BYTE PTR [edi],dh
  44adb2:	mov    edi,DWORD PTR [esi]
  44adb4:	js     0x44ad3f
  44adb6:	dec    edx
  44adb7:	push   edx
  44adb8:	ret    
  44adb9:	lds    ecx,FWORD PTR [eax]
  44adbb:	mov    ch,0xc7
  44adbd:	out    dx,eax
  44adbe:	hlt    
  44adbf:	fs (bad) 
  44adc2:	popa   
  44adc3:	pusha  
  44adc4:	mov    ah,0xf2
  44adc6:	ins    DWORD PTR es:[edi],dx
  44adc7:	or     eax,0x587d8c9d
  44adcc:	sbb    eax,0xa1181729
  44add1:	mov    edi,0xc0438e2a
  44add6:	push   ss
  44add7:	daa    
  44add8:	lds    edx,FWORD PTR [eax-0x21b66dac]
  44adde:	jmp    0xe4c2:0xa4f32344
  44ade5:	(bad)  
  44ade6:	add    bl,bh
  44ade8:	fstp   st(5)
  44adea:	mov    bl,0xc9
  44adec:	and    al,0x54
  44adee:	add    bh,BYTE PTR [edx+0x17]
  44adf1:	jbe    0x44ae2e
  44adf3:	push   0xffffffa9
  44adf5:	test   BYTE PTR [eax+esi*4+0x62],dl
  44adf9:	out    dx,eax
  44adfa:	dec    esi
  44adfb:	adc    DWORD PTR [edx-0x2bac1099],ebx
  44ae01:	sbb    edi,DWORD PTR [ebx+0x60]
  44ae04:	jmp    0x85749889
  44ae09:	inc    edi
  44ae0a:	push   ebp
  44ae0b:	sti    
  44ae0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae0d:	ror    DWORD PTR [esi+0x6f],1
  44ae10:	das    
  44ae11:	cmp    dh,BYTE PTR [edx-0x257e7af0]
  44ae17:	or     bh,BYTE PTR [eax+0xcbfd1c8]
  44ae1d:	daa    
  44ae1e:	mov    bl,0x70
  44ae20:	jecxz  0x44adf7
  44ae22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ae23:	mov    ch,dh
  44ae25:	push   cs
  44ae26:	repnz sbb DWORD PTR [edi+0x4f9a878e],0x68
  44ae2e:	out    0x5f,al
  44ae30:	dec    eax
  44ae31:	push   es
  44ae32:	in     eax,0x43
  44ae34:	and    ah,BYTE PTR [edx+0x37b1791e]
  44ae3a:	fst    QWORD PTR [esi]
  44ae3c:	add    dl,BYTE PTR [ebp-0x1478add7]
  44ae42:	sbb    ah,dh
  44ae44:	neg    ebx
  44ae46:	cmp    ebx,DWORD PTR [edx]
  44ae48:	test   bh,ah
  44ae4a:	sbb    edi,DWORD PTR [ecx+0x544251aa]
  44ae50:	adc    eax,0xfd0ac70e
  44ae55:	add    DWORD PTR [eax+edx*2+0x39],edx
  44ae59:	mov    edi,0x50287f47
  44ae5e:	adc    ecx,edx
  44ae60:	rol    BYTE PTR [esi],0x96
  44ae63:	sub    edi,DWORD PTR [edx+0x7b]
  44ae66:	xchg   ecx,eax
  44ae67:	push   eax
  44ae68:	dec    ebx
  44ae69:	inc    edx
  44ae6a:	or     DWORD PTR [edi-0xb65adbb],ebx
  44ae70:	jle    0x44ae18
  44ae72:	push   ebx
  44ae73:	dec    edi
  44ae74:	fwait
  44ae75:	inc    eax
  44ae76:	pop    ebx
  44ae77:	dec    ebx
  44ae78:	and    eax,0x1bc54d5
  44ae7d:	jmp    0x7b21:0x907ab42
  44ae84:	xchg   DWORD PTR [edx-0x23],ebp
  44ae87:	fadd   QWORD PTR [edi-0x62ab1f14]
  44ae8d:	aam    0x4a
  44ae8f:	in     al,dx
  44ae90:	iret   
  44ae91:	push   0x6b
  44ae93:	pop    ecx
  44ae94:	out    dx,eax
  44ae95:	mov    eax,ds:0x109671b5
  44ae9a:	daa    
  44ae9b:	mov    al,ds:0xebfad8e
  44aea0:	jns    0x44ae40
  44aea2:	retf   0x3105
  44aea5:	ror    DWORD PTR [eax-0x296f9a15],1
  44aeab:	mov    ebx,0x85fa2964
  44aeb0:	cmc    
  44aeb1:	xchg   ebx,eax
  44aeb2:	inc    eax
  44aeb3:	icebp  
  44aeb4:	xchg   ecx,eax
  44aeb5:	dec    esi
  44aeb6:	int3   
  44aeb7:	pop    edi
  44aeb8:	cmp    eax,0x34e788f1
  44aebd:	jge    0x44aefe
  44aebf:	sbb    BYTE PTR [ecx+0x873e25b],ah
  44aec5:	in     al,0x56
  44aec7:	mov    bh,0x15
  44aec9:	cmp    eax,0x202a04fe
  44aece:	dec    esi
  44aecf:	lods   al,BYTE PTR ds:[esi]
  44aed0:	lock mov al,ds:0x6fdd12c0
  44aed6:	inc    edx
  44aed7:	aaa    
  44aed8:	pop    esp
  44aed9:	loop   0x44ae98
  44aedb:	xchg   esp,eax
  44aedc:	out    dx,eax
  44aedd:	cmp    al,0xd6
  44aedf:	into   
  44aee0:	adc    eax,0xc7e89084
  44aee5:	inc    ebp
  44aee6:	das    
  44aee7:	sub    BYTE PTR [ebp+0x7a],dl
  44aeea:	sbb    edi,DWORD PTR [ecx-0x11]
  44aeed:	sar    BYTE PTR [edi],1
  44aeef:	loopne 0x44aedf
  44aef1:	mov    ecx,edx
  44aef3:	inc    ebp
  44aef4:	(bad)  
  44aef5:	jl     0x44af59
  44aef7:	xchg   edi,eax
  44aef8:	mov    bl,0x9b
  44aefa:	ja     0x44aee0
  44aefc:	lock dec ecx
  44aefe:	add    BYTE PTR [edx+0x5d],bh
  44af01:	fnstenv [ebx]
  44af03:	mov    ebp,0xe84d08ba
  44af08:	xor    eax,0x17fe17a4
  44af0d:	jmp    0x44aea7
  44af0f:	and    ebp,DWORD PTR [eax]
  44af11:	sub    esp,DWORD PTR [edx+eax*8+0x65c91424]
  44af18:	enter  0xfca5,0xe7
  44af1c:	jl     0x44af21
  44af1e:	cld    
  44af1f:	xchg   esi,eax
  44af20:	xchg   BYTE PTR [ebx],bl
  44af22:	or     al,0xb8
  44af24:	aam    0x22
  44af26:	sbb    DWORD PTR [ebx],edx
  44af28:	test   al,0x84
  44af2a:	gs ja  0x44af56
  44af2d:	call   0xdb23:0xc3d35e97
  44af34:	call   0x21cfef83
  44af39:	sbb    DWORD PTR [edx+0x69145373],0x6d113be3
  44af43:	or     al,0x80
  44af45:	shr    BYTE PTR [eax+0x1184aa20],1
  44af4b:	enter  0x5e59,0xb6
  44af4f:	lock cmp DWORD PTR [edx-0x54728573],eax
  44af56:	xor    esi,eax
  44af58:	mov    ah,0x4a
  44af5a:	clc    
  44af5b:	pop    edx
  44af5c:	push   edi
  44af5d:	push   edi
  44af5e:	pop    ecx
  44af5f:	inc    ebp
  44af60:	add    eax,edx
  44af62:	xor    BYTE PTR [edx-0x75e2d47f],ah
  44af68:	cmp    ecx,edi
  44af6a:	cmp    eax,0x4921627
  44af6f:	xchg   ecx,eax
  44af70:	mov    al,0xd3
  44af72:	push   ebp
  44af73:	(bad)  
  44af74:	jne    0x44af1d
  44af76:	jmp    0x44af13
  44af78:	add    DWORD PTR [edx+0x5d765da6],0x34
  44af7f:	rcl    DWORD PTR [ebp-0x71],0xa3
  44af83:	hlt    
  44af84:	mov    ax,0xabe2
  44af88:	mov    dl,0xd
  44af8a:	xchg   BYTE PTR [eax+0x5a4ebff9],ch
  44af90:	mov    cl,0x2d
  44af92:	jns    0x44afb3
  44af94:	pop    ss
  44af95:	dec    edx
  44af96:	pop    ds
  44af97:	mov    eax,ds:0x8b57437c
  44af9c:	jns    0x44af9c
  44af9e:	ret    
  44af9f:	scas   al,BYTE PTR es:[edi]
  44afa0:	mov    edi,0x8b789b24
  44afa5:	pushaw 
  44afa7:	adc    ebx,DWORD PTR [edi]
  44afa9:	outs   dx,DWORD PTR ds:[esi]
  44afaa:	push   cs
  44afab:	icebp  
  44afac:	test   DWORD PTR [edx-0x1f4bad85],esp
  44afb2:	dec    edi
  44afb3:	ins    DWORD PTR es:[edi],dx
  44afb4:	(bad)  
  44afb5:	push   cs
  44afb6:	adc    eax,0x14503ddf
  44afbb:	jge    0x44afcb
  44afbd:	test   al,0x7f
  44afbf:	dec    esp
  44afc0:	les    ebx,FWORD PTR [edx-0x5de7045]
  44afc6:	int    0xe3
  44afc8:	xor    bh,BYTE PTR [edx]
  44afca:	sbb    dh,BYTE PTR [eax-0x27]
  44afcd:	inc    esi
  44afce:	retf   
  44afcf:	ins    BYTE PTR es:[edi],dx
  44afd0:	call   0xfcee:0x2cd5dff2
  44afd7:	mov    gs,WORD PTR [edx-0x28a4c9f9]
  44afdd:	cmp    dl,cl
  44afdf:	cmp    cl,0x17
  44afe2:	xor    al,0xfe
  44afe4:	mov    WORD PTR [ebp+ebx*2-0x149e66c8],?
  44afeb:	jg     0x44b03d
  44afed:	stc    
  44afee:	add    ah,BYTE PTR [ecx-0x66452a00]
  44aff4:	pushf  
  44aff5:	inc    edx
  44aff6:	fdivr  st(6),st
  44aff8:	pop    ecx
  44aff9:	cli    
  44affa:	push   ds
  44affb:	pop    esi
  44affc:	mov    ebp,0x3140e275
  44b001:	enter  0xa90e,0x81
  44b005:	cdq    
  44b006:	xchg   ecx,eax
  44b007:	daa    
  44b008:	neg    BYTE PTR ds:0x69e565ec
  44b00e:	or     DWORD PTR [edi-0x31],esp
  44b011:	in     eax,0x9a
  44b013:	fcom   DWORD PTR [ecx+ebx*1-0x5f]
  44b017:	jle    0x44b02c
  44b019:	fnstenv [edi]
  44b01b:	dec    edx
  44b01c:	mov    ebx,0xec0f2988
  44b021:	push   edx
  44b022:	lds    edx,FWORD PTR [edx]
  44b024:	xor    ah,BYTE PTR [eax+edx*8]
  44b027:	rcr    DWORD PTR [ebx],1
  44b029:	push   ecx
  44b02b:	fimul  DWORD PTR [ebx+0x465233c3]
  44b031:	push   ebx
  44b032:	pusha  
  44b033:	arpl   WORD PTR [eax+0x3f],bp
  44b036:	outs   dx,BYTE PTR ds:[esi]
  44b037:	xlat   BYTE PTR ds:[ebx]
  44b038:	pop    eax
  44b039:	fsubr  DWORD PTR [ecx+0x1e1d84eb]
  44b03f:	jns    0x44b0a8
  44b041:	loop   0x44b05d
  44b043:	push   cs
  44b044:	(bad)  
  44b045:	sti    
  44b046:	xchg   ebx,eax
  44b047:	push   edi
  44b048:	les    ebx,FWORD PTR [eax]
  44b04a:	arpl   WORD PTR [edi],sp
  44b04c:	cmp    al,0xc8
  44b04e:	rcr    DWORD PTR [ecx-0x2a],cl
  44b051:	ins    DWORD PTR es:[edi],dx
  44b052:	sub    edx,DWORD PTR [eax+0x78]
  44b055:	cs push ss
  44b057:	inc    DWORD PTR [ebp-0x7986b4a5]
  44b05d:	pusha  
  44b05e:	jns    0x44b0aa
  44b060:	mov    dl,0x9e
  44b062:	dec    esi
  44b063:	inc    edx
  44b064:	or     eax,DWORD PTR [eax+0x2400a50b]
  44b06a:	je     0x44b096
  44b06c:	cmp    al,0x9a
  44b06e:	mov    dl,0x1c
  44b070:	xchg   ebx,eax
  44b071:	xor    BYTE PTR [eax+esi*8+0x79cfeb41],bl
  44b078:	pop    edi
  44b079:	je     0xe91584d6
  44b07f:	shr    dl,0x29
  44b082:	cmp    BYTE PTR [ebx+0x6f],ch
  44b085:	sub    dl,BYTE PTR [edi+edx*4]
  44b088:	(bad)  
  44b089:	imul   DWORD PTR [edx-0x2d]
  44b08c:	mov    eax,0xaa36bee1
  44b091:	(bad)  
  44b092:	addr16 sbb al,bl
  44b095:	inc    edi
  44b096:	pop    ebx
  44b097:	repz or BYTE PTR [esi+edx*2-0x7801ecd4],ch
  44b09f:	loop   0x44b111
  44b0a1:	xchg   esp,eax
  44b0a2:	xor    DWORD PTR [esi+eax*8-0x59],0x5d
  44b0a7:	xchg   DWORD PTR [eax],esp
  44b0a9:	mov    WORD PTR [eax-0x44c7e7a5],?
  44b0af:	mov    bh,0x56
  44b0b1:	push   0xffffffc5
  44b0b3:	dec    edx
  44b0b4:	push   DWORD PTR [edx+0x36]
  44b0b7:	add    dl,BYTE PTR [edi-0x2a]
  44b0ba:	iret   
  44b0bb:	pop    ds
  44b0bc:	cmp    DWORD PTR [ebx],ecx
  44b0be:	or     DWORD PTR [ecx+0x31817ed8],ecx
  44b0c4:	popf   
  44b0c5:	jmp    0x62b0:0x928697aa
  44b0cc:	jmp    0x44b105
  44b0ce:	sub    DWORD PTR [esi],ecx
  44b0d0:	and    al,0x58
  44b0d2:	inc    esi
  44b0d3:	mov    al,0x64
  44b0d5:	xchg   ecx,eax
  44b0d6:	cmp    eax,0x3f7ffed2
  44b0db:	(bad)  
  44b0dc:	cmp    dl,cl
  44b0de:	xchg   DWORD PTR [ebx-0x527e89c7],edx
  44b0e4:	pop    es
  44b0e5:	add    BYTE PTR ds:0x85e8fcb2,bl
  44b0eb:	in     eax,dx
  44b0ec:	mov    esi,0xa3d44633
  44b0f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b0f2:	adc    eax,0xaf1f9520
  44b0f7:	xlat   BYTE PTR ds:[ebx]
  44b0f8:	push   cs
  44b0f9:	mov    WORD PTR [edi+edi*1+0x68e24fff],fs
  44b100:	pop    ecx
  44b101:	and    bl,0x54
  44b104:	pop    edx
  44b105:	add    bh,BYTE PTR [edi-0x4090a93d]
  44b10b:	sub    esi,DWORD PTR [ebp-0x7e]
  44b10e:	mov    BYTE PTR [edi],bh
  44b110:	or     eax,0xed0ae767
  44b115:	(bad)  
  44b116:	jmp    0x44b117
  44b118:	fdivr  DWORD PTR [ebp-0x27c5bf00]
  44b11e:	mov    ecx,0x72fff774
  44b123:	jle    0x44b0b9
  44b125:	mov    al,ds:0xeb63164a
  44b12a:	stos   BYTE PTR es:[edi],al
  44b12b:	loop   0x44b156
  44b12d:	adc    ecx,DWORD PTR [ebx+0x1a0901cc]
  44b133:	repnz xor al,0x22
  44b136:	or     BYTE PTR [esp+ebx*2+0x6d],ah
  44b13a:	imul   DWORD PTR [ecx+edi*1]
  44b13d:	clc    
  44b13e:	loop   0x44b1a0
  44b140:	and    BYTE PTR ds:0x11f66c5,bl
  44b146:	call   0xe462:0xadda546d
  44b14d:	jge    0x44b15d
  44b14f:	add    dh,bh
  44b151:	dec    esi
  44b152:	push   cs
  44b153:	es dec edi
  44b155:	cld    
  44b156:	or     DWORD PTR [esi+0x155449af],ebp
  44b15c:	mov    cl,0x61
  44b15e:	push   es
  44b15f:	adc    al,0x81
  44b161:	psubusw mm5,QWORD PTR [eax]
  44b164:	rol    cl,0x48
  44b167:	sub    eax,0xa32fba15
  44b16c:	in     eax,dx
  44b16d:	ror    ah,1
  44b16f:	(bad)  
  44b170:	in     al,dx
  44b171:	enter  0x8694,0x58
  44b175:	pop    ss
  44b176:	pusha  
  44b177:	adc    eax,0x3aad126d
  44b17c:	(bad)  
  44b17d:	in     al,dx
  44b17e:	retf   0x42a4
  44b181:	pop    edx
  44b182:	test   DWORD PTR [esp+eiz*4-0x5],edi
  44b186:	cld    
  44b187:	xchg   edi,eax
  44b188:	ror    DWORD PTR [ebp-0x184f5572],1
  44b18e:	mov    ebx,0x19b7d747
  44b193:	mul    ecx
  44b195:	xchg   esi,eax
  44b196:	mov    ?,WORD PTR [ebx]
  44b198:	int3   
  44b199:	cdq    
  44b19a:	pop    esp
  44b19b:	cdq    
  44b19c:	popf   
  44b19d:	fnstsw WORD PTR [eax]
  44b19f:	test   eax,0xd2a19ed1
  44b1a4:	mov    bl,0x71
  44b1a6:	adc    ecx,DWORD PTR [ecx]
  44b1a8:	ds jne 0x44b1ff
  44b1ab:	or     DWORD PTR [edx],esi
  44b1ad:	icebp  
  44b1ae:	inc    ebx
  44b1af:	xchg   BYTE PTR [edi-0x3e299ad6],al
  44b1b5:	inc    ecx
  44b1b6:	aaa    
  44b1b7:	fild   DWORD PTR [eax+eiz*8-0x7a]
  44b1bb:	fld    QWORD PTR [ecx+0x556e276d]
  44b1c1:	ret    
  44b1c2:	pop    esp
  44b1c3:	aas    
  44b1c4:	xor    BYTE PTR [eax-0xdc38f55],ah
  44b1ca:	scas   eax,DWORD PTR es:[edi]
  44b1cb:	jns    0x44b196
  44b1cd:	mov    al,ds:0x4e5fc633
  44b1d2:	inc    ebp
  44b1d3:	mov    al,0x30
  44b1d5:	xchg   ecx,eax
  44b1d6:	sbb    al,0x18
  44b1d8:	mov    bh,0xbb
  44b1da:	jbe    0x44b259
  44b1dc:	lods   eax,DWORD PTR ds:[esi]
  44b1dd:	ret    0x3acf
  44b1e0:	repz pop es
  44b1e2:	cmc    
  44b1e3:	ss clts 
  44b1e6:	fdivr  DWORD PTR [edx+0x4d]
  44b1e9:	sub    al,0xad
  44b1eb:	out    dx,al
  44b1ec:	ja     0x44b234
  44b1ee:	out    0x31,al
  44b1f0:	sahf   
  44b1f1:	adc    al,BYTE PTR [edx]
  44b1f3:	mov    ds:0x934ef890,eax
  44b1f8:	inc    esi
  44b1f9:	push   esi
  44b1fa:	mov    al,ds:0x7dd0e8ee
  44b1ff:	xchg   esp,eax
  44b200:	adc    ecx,DWORD PTR [ebx]
  44b202:	adc    BYTE PTR [edi-0x1],bl
  44b205:	loop   0x44b1d0
  44b207:	outs   dx,DWORD PTR ds:[esi]
  44b208:	mov    eax,0xf4964281
  44b20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b20e:	xor    ch,BYTE PTR [ecx]
  44b210:	stos   BYTE PTR es:[edi],al
  44b211:	clc    
  44b212:	(bad)  
  44b213:	ins    BYTE PTR es:[edi],dx
  44b214:	jmp    0x9bda:0x7a7667e8
  44b21b:	jecxz  0x44b21a
  44b21d:	mov    ecx,0x6a9e18cc
  44b222:	(bad)  
  44b223:	out    0xef,al
  44b225:	ror    DWORD PTR [edx+ebp*2],0x87
  44b229:	shr    DWORD PTR [edi-0x75],cl
  44b22c:	pusha  
  44b22d:	call   0x6383:0xa8a69706
  44b234:	mov    esi,0x140ec0eb
  44b239:	out    dx,eax
  44b23a:	cmc    
  44b23b:	test   eax,0xcc6beca1
  44b240:	(bad)  
  44b241:	call   0x9a4f:0xacbf7a0
  44b248:	loopne 0x44b27f
  44b24a:	cmp    eax,0x245bd3d
  44b24f:	repnz mov eax,0xb2f91f14
  44b255:	in     eax,dx
  44b256:	dec    edx
  44b257:	mov    ah,0x60
  44b259:	mov    cl,0x49
  44b25b:	sbb    ebp,0xffffffa0
  44b25e:	into   
  44b25f:	mov    bh,al
  44b261:	ret    0x8612
  44b264:	jmp    0x44b2e2
  44b266:	mov    eax,ds:0x53ea7c49
  44b26b:	pop    esp
  44b26c:	neg    dh
  44b26e:	sub    esi,ebx
  44b270:	retf   
  44b271:	adc    esp,edi
  44b273:	mov    al,0xe9
  44b275:	cld    
  44b276:	xlat   BYTE PTR ds:[ebx]
  44b277:	pop    esp
  44b278:	(bad)  
  44b279:	fs aam 0x33
  44b27c:	stos   DWORD PTR es:[edi],eax
  44b27d:	loop   0x44b2d9
  44b27f:	dec    esi
  44b280:	scas   al,BYTE PTR es:[edi]
  44b281:	imul   ecx,DWORD PTR [edi],0x1
  44b284:	add    BYTE PTR [eax+0xe],dl
  44b287:	and    DWORD PTR [eax+ecx*1],edx
  44b28a:	jae    0x44b2b7
  44b28c:	cmp    eax,0x55ee7256
  44b291:	mov    WORD PTR [esi+0x39],?
  44b294:	adc    edx,0x106e7ccd
  44b29a:	push   0x7c
  44b29c:	mov    edx,0x505079ff
  44b2a1:	mov    ebx,0x226d946e
  44b2a6:	push   eax
  44b2a7:	aam    0x60
  44b2a9:	inc    ebp
  44b2aa:	mov    al,ds:0x6df3aeb6
  44b2af:	int3   
  44b2b0:	pop    esi
  44b2b1:	mov    ah,dh
  44b2b3:	xchg   esp,eax
  44b2b4:	cld    
  44b2b5:	leave  
  44b2b6:	dec    ecx
  44b2b7:	push   ss
  44b2b8:	cld    
  44b2b9:	les    eax,FWORD PTR [esi+0x45]
  44b2bc:	add    eax,0x37b73b9e
  44b2c1:	jnp    0x44b256
  44b2c3:	in     eax,dx
  44b2c4:	inc    ecx
  44b2c5:	jno    0x44b30b
  44b2c7:	loopne 0x44b252
  44b2c9:	mov    WORD PTR [eax-0x573ee7b2],es
  44b2cf:	stos   BYTE PTR es:[edi],al
  44b2d0:	push   eax
  44b2d1:	adc    al,0xe2
  44b2d3:	imul   ecx,eax,0x359cfd95
  44b2d9:	inc    edx
  44b2da:	(bad)  
  44b2dc:	inc    esp
  44b2dd:	adc    eax,0xf4450a52
  44b2e2:	cmc    
  44b2e3:	bound  ebp,QWORD PTR [edx]
  44b2e5:	sub    bh,BYTE PTR [ebx-0x40]
  44b2e8:	repz mov ?,eax
  44b2eb:	es popf 
  44b2ed:	fs jo  0x44b337
  44b2f0:	in     ax,0x11
  44b2f3:	jle    0x44b31f
  44b2f5:	ret    0x6fc1
  44b2f8:	(bad)  [ecx-0x2f3a77e7]
  44b2fe:	jnp    0x44b359
  44b300:	(bad)  
  44b301:	gs popa 
  44b303:	adc    eax,edi
  44b305:	xchg   esp,eax
  44b306:	pop    ebx
  44b307:	pop    ss
  44b308:	mov    DWORD PTR [ebp+edi*1-0x3a619a2a],edi
  44b30f:	pop    ds
  44b310:	or     cl,BYTE PTR [ebp+0x2a5de5e9]
  44b316:	push   edx
  44b317:	pop    ss
  44b318:	cmp    BYTE PTR [ebp+esi*8+0x3e90fa52],dh
  44b31f:	inc    ebx
  44b320:	scas   al,BYTE PTR es:[edi]
  44b321:	pop    ds
  44b322:	fcomip st,st(7)
  44b324:	jle    0x44b31c
  44b326:	rcr    BYTE PTR ds:0xbc4a81fd,cl
  44b32c:	rol    bh,cl
  44b32e:	sub    eax,0x17a513e8
  44b333:	pop    esi
  44b334:	cmp    ebx,eax
  44b336:	or     ch,bl
  44b338:	jne    0x44b3a2
  44b33a:	idiv   ebp
  44b33c:	ret    
  44b33d:	sub    ebp,eax
  44b33f:	or     DWORD PTR [edx],esp
  44b341:	std    
  44b342:	mov    cl,0xeb
  44b344:	push   esp
  44b345:	stc    
  44b346:	xchg   ebx,eax
  44b347:	fistp  WORD PTR [eax+ebx*1-0x26]
  44b34b:	cdq    
  44b34c:	push   esp
  44b34d:	push   esp
  44b34e:	ds jl  0x44b2f3
  44b351:	fstp   st(3)
  44b353:	in     al,dx
  44b354:	sbb    bl,BYTE PTR [ebx-0x3709b9b2]
  44b35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b35b:	test   BYTE PTR ds:0x9c5c8e52,ch
  44b361:	cmp    eax,0xf533008c
  44b366:	bound  eax,QWORD PTR ds:0xcacfbb8c
  44b36c:	sahf   
  44b36d:	dec    ecx
  44b36e:	cld    
  44b36f:	jecxz  0x44b336
  44b371:	in     al,0xa4
  44b373:	adc    bl,BYTE PTR [ecx-0x6dfcfd01]
  44b379:	lds    ebp,FWORD PTR [ecx+ebp*8]
  44b37c:	xchg   ebp,eax
  44b37d:	dec    ebp
  44b37e:	lods   al,BYTE PTR ds:[esi]
  44b37f:	xchg   edx,eax
  44b380:	call   0x6cd5ab76
  44b385:	mov    ds:0x1e437771,eax
  44b38a:	jno    0x44b3a8
  44b38c:	pop    edi
  44b38d:	rol    BYTE PTR [ebp+0x34],1
  44b390:	dec    ecx
  44b391:	adc    al,0x76
  44b393:	xor    DWORD PTR [edi+0x5c6ff1c4],ecx
  44b399:	jb     0x44b415
  44b39b:	mov    cl,BYTE PTR [edi]
  44b39d:	int3   
  44b39e:	and    al,0xa1
  44b3a0:	add    eax,edi
  44b3a2:	fnstsw WORD PTR [edx-0x4d9e1665]
  44b3a8:	xor    eax,0xa23a43c2
  44b3ad:	les    edx,FWORD PTR [eax]
  44b3af:	adc    BYTE PTR [esi+eax*4+0x75b29ea0],0xeb
  44b3b7:	push   cs
  44b3b8:	or     DWORD PTR [ebx],0x75
  44b3bb:	cmp    BYTE PTR [ecx+ebx*2+0x6ccc2f5c],dh
  44b3c2:	int3   
  44b3c3:	xor    ecx,DWORD PTR [esi-0x5116cc91]
  44b3c9:	pusha  
  44b3ca:	sub    DWORD PTR [esi+ebx*2],esi
  44b3cd:	test   BYTE PTR [esi],ch
  44b3cf:	ins    DWORD PTR es:[edi],dx
  44b3d0:	imul   ebp,DWORD PTR [eax+edi*2+0x2],0x45438231
  44b3d8:	pop    ebp
  44b3d9:	mov    bx,0x2933
  44b3dd:	push   ds
  44b3de:	sub    bh,BYTE PTR ds:0x9fcee40
  44b3e4:	(bad)
  44b3e8:	popa   
  44b3e9:	push   0xffffffce
  44b3eb:	sub    BYTE PTR [ecx+0x2d],cl
  44b3ee:	hlt    
  44b3ef:	pusha  
  44b3f0:	inc    ebp
  44b3f1:	dec    ebx
  44b3f2:	test   al,0xd9
  44b3f4:	out    0x71,eax
  44b3f6:	adc    ch,BYTE PTR [eax+ebp*2]
  44b3f9:	mov    ah,0xdd
  44b3fb:	push   es
  44b3fc:	push   0x33
  44b3fe:	push   esp
  44b3ff:	cs stos DWORD PTR es:[edi],eax
  44b401:	jo     0x44b3fb
  44b403:	pusha  
  44b404:	mov    ecx,0x573fcb9a
  44b409:	(bad)  [eax+0x79309f6a]
  44b40f:	stos   DWORD PTR es:[edi],eax
  44b410:	in     al,0x2e
  44b412:	(bad)  
  44b413:	mov    WORD PTR [esi],?
  44b415:	in     al,dx
  44b416:	dec    eax
  44b417:	sbb    bl,BYTE PTR [ecx]
  44b419:	pop    edx
  44b41a:	xor    cl,ah
  44b41c:	popa   
  44b41d:	sub    BYTE PTR [esi-0x5f],cl
  44b420:	in     eax,dx
  44b421:	jb     0x44b3e8
  44b423:	push   eax
  44b424:	pop    eax
  44b425:	mov    edi,0x47190459
  44b42a:	mov    edi,0x66386c57
  44b42f:	fnstenv [eax+edx*2+0x32ae3cda]
  44b436:	adc    DWORD PTR [ecx+esi*8-0x4ee86115],edi
  44b43d:	out    dx,eax
  44b43e:	lods   al,BYTE PTR ss:[esi]
  44b440:	dec    DWORD PTR [edx-0x15]
  44b443:	xor    al,0xa3
  44b445:	ds push ecx
  44b447:	jge    0x44b412
  44b449:	fsubr  DWORD PTR [esp+ecx*1+0x5e]
  44b44d:	mov    edx,0x6c21f183
  44b452:	dec    eax
  44b453:	adc    BYTE PTR [ebx-0x10],al
  44b456:	pop    es
  44b457:	jbe    0x44b3e0
  44b459:	retf   0xb62d
  44b45c:	xchg   esi,eax
  44b45d:	es je  0x44b43d
  44b460:	xchg   esp,eax
  44b461:	(bad)  
  44b463:	inc    edi
  44b464:	lds    esp,FWORD PTR [edi-0x454fea01]
  44b46a:	mov    ch,0xc1
  44b46c:	mov    esi,0xb10d4b91
  44b471:	mov    dl,0x38
  44b473:	mov    esp,0x3813ef0a
  44b478:	jb     0x44b3ff
  44b47a:	xor    ah,BYTE PTR [ecx-0x69]
  44b47d:	push   ecx
  44b47e:	inc    ebp
  44b47f:	ss out dx,eax
  44b481:	mov    ebp,0xc9729a80
  44b486:	rol    dl,cl
  44b488:	dec    esp
  44b489:	xor    esp,edi
  44b48b:	rcr    BYTE PTR [edi+0x36],cl
  44b48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b48f:	mov    esp,0xcf1cb2ca
  44b494:	fldenv [esi]
  44b496:	cmp    eax,0x6a91d312
  44b49b:	repnz imul edx,DWORD PTR [eax],0xffffffac
  44b49f:	pop    eax
  44b4a0:	push   0xffffff9b
  44b4a2:	or     ecx,DWORD PTR [ebp-0x1e568371]
  44b4a8:	mov    ds:0x5800f2c6,eax
  44b4ad:	out    0x3e,eax
  44b4af:	rcl    DWORD PTR cs:[edi-0x61fca35c],0x5c
  44b4b7:	addr16 aaa 
  44b4b9:	mov    esi,0xcd8ea4bf
  44b4be:	les    ecx,FWORD PTR [eax-0x6131b5bb]
  44b4c4:	std    
  44b4c5:	or     ah,ch
  44b4c7:	adc    eax,DWORD PTR [ebx+0x3bfd71d2]
  44b4cd:	dec    BYTE PTR [ecx+0x7d382dd1]
  44b4d3:	lods   al,BYTE PTR ds:[esi]
  44b4d4:	call   0x9b43f64e
  44b4d9:	dec    esp
  44b4da:	repnz add al,0x3
  44b4dd:	sti    
  44b4de:	mov    ah,0x91
  44b4e0:	mov    cl,BYTE PTR [edx+0x58]
  44b4e3:	fistp  WORD PTR ds:0xaffaf5c3
  44b4e9:	shl    DWORD PTR [eax-0x122e0ef5],1
  44b4ef:	ret    0x1556
  44b4f2:	sar    DWORD PTR [ecx+0x4249e9f5],1
  44b4f8:	jmp    0x9b082985
  44b4fd:	push   cs
  44b4fe:	xlat   BYTE PTR ds:[ebx]
  44b4ff:	imul   ebp,DWORD PTR [ebx-0x11],0xfffffffa
  44b503:	bound  edi,QWORD PTR [edi+0x24b361b]
  44b509:	mov    ds:0xaa17b4ef,eax
  44b50e:	shl    BYTE PTR [edx+0x426b0957],1
  44b514:	mov    ebp,esi
  44b516:	aad    0x43
  44b518:	imul   esp,edi,0xffffffb1
  44b51b:	or     ecx,DWORD PTR [edx+0x53]
  44b51e:	xchg   edi,eax
  44b51f:	(bad)  
  44b521:	arpl   WORD PTR [eax+0x63],ax
  44b524:	cmc    
  44b525:	addr16 addr16 push ss
  44b528:	inc    ebp
  44b529:	jp     0x44b563
  44b52b:	mov    ds:0xc16a8eb7,al
  44b530:	aam    0xa2
  44b532:	mov    ah,0x5
  44b534:	mov    eax,ds:0x65df0c66
  44b539:	push   edx
  44b53a:	mov    eax,ds:0x838745a1
  44b53f:	iret   
  44b540:	js     0x44b566
  44b542:	pxor   mm1,QWORD PTR [ecx+0x56]
  44b546:	mov    ds,WORD PTR [ebp+0x3d6132b6]
  44b54c:	je     0x44b566
  44b54e:	outs   dx,BYTE PTR ds:[esi]
  44b54f:	fimul  WORD PTR [ecx+0x45]
  44b552:	adc    BYTE PTR [edi+edx*2-0x53c2ffbb],ch
  44b559:	jno    0x44b592
  44b55b:	cmp    bl,BYTE PTR [edx+ebx*1+0x33]
  44b55f:	mov    BYTE PTR [edi+0x4a8672c1],bh
  44b565:	push   0xffffffef
  44b567:	cdq    
  44b568:	idiv   DWORD PTR [esi+0x59]
  44b56b:	out    dx,al
  44b56c:	fwait
  44b56d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b56e:	ror    BYTE PTR ds:0x56374ec,0xd5
  44b575:	icebp  
  44b576:	jecxz  0x44b52d
  44b578:	outs   dx,DWORD PTR es:[esi]
  44b57a:	adc    esi,DWORD PTR [esi]
  44b57c:	mov    dh,BYTE PTR [edi+0x15]
  44b57f:	stos   DWORD PTR es:[edi],eax
  44b580:	enter  0xe613,0x6e
  44b584:	loop   0x44b58d
  44b586:	adc    DWORD PTR [esi-0x2a4614af],eax
  44b58c:	loopne 0x44b56a
  44b58e:	aas    
  44b58f:	push   esi
  44b590:	and    dh,cl
  44b592:	mov    esp,0x2219d3c7
  44b597:	add    eax,0xacc0d676
  44b59c:	out    dx,eax
  44b59d:	cwde   
  44b59e:	pop    edx
  44b59f:	loope  0x44b5c0
  44b5a1:	add    al,0xf8
  44b5a3:	hlt    
  44b5a4:	pop    ecx
  44b5a5:	xchg   esi,eax
  44b5a6:	rol    DWORD PTR [ecx+0xe],0x1e
  44b5aa:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  44b5ac:	mov    ch,0xd6
  44b5ae:	xor    BYTE PTR [edi-0x3e],ah
  44b5b1:	jnp    0x44b62d
  44b5b3:	test   BYTE PTR [edi+0x52af9981],al
  44b5b9:	pop    ecx
  44b5ba:	popw   ds
  44b5bc:	xor    al,0x37
  44b5be:	mov    al,0x12
  44b5c0:	rcl    BYTE PTR [ecx+0x3ef4ef21],0xea
  44b5c7:	inc    eax
  44b5c8:	retf   
  44b5c9:	dec    ebx
  44b5ca:	xchg   ecx,eax
  44b5cb:	call   0x6d19:0x59b96d0
  44b5d2:	add    eax,0xc854a7e0
  44b5d7:	sub    DWORD PTR [esp+eiz*2-0x6f899ea],edx
  44b5de:	rol    BYTE PTR [eax+0x6a184274],0xa6
  44b5e5:	adc    eax,0xe83508f1
  44b5ea:	mov    cl,0x48
  44b5ec:	mov    edx,edx
  44b5ee:	xor    eax,0x5919daf
  44b5f3:	jg     0x44b577
  44b5f5:	push   ss
  44b5f6:	nop
  44b5f7:	sahf   
  44b5f8:	sahf   
  44b5f9:	fmul   DWORD PTR [eax-0x78]
  44b5fc:	add    DWORD PTR [ebp+0x56],ecx
  44b5ff:	int    0x20
  44b601:	or     bl,BYTE PTR [ecx+edx*2]
  44b604:	push   es
  44b605:	and    DWORD PTR [esi-0x2f],esi
  44b608:	test   bh,bh
  44b60a:	fcmovnb st,st(1)
  44b60c:	inc    esp
  44b60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b60e:	loopne 0x44b676
  44b610:	mov    dh,0x9b
  44b612:	cmp    eax,0xcaf66d0e
  44b617:	inc    esi
  44b618:	mov    ch,dh
  44b61a:	mov    bh,0xfc
  44b61c:	pop    DWORD PTR [edi+0x36]
  44b61f:	in     eax,0xaa
  44b621:	mov    bh,BYTE PTR [ecx-0x4ba68507]
  44b627:	adc    bl,BYTE PTR [esp+ebp*1]
  44b62a:	in     eax,dx
  44b62b:	popf   
  44b62c:	scas   al,BYTE PTR es:[edi]
  44b62d:	shr    BYTE PTR [edx-0x15],0x45
  44b631:	sub    DWORD PTR [ecx],ecx
  44b633:	adc    al,0x32
  44b635:	aad    0x5f
  44b637:	cs push esp
  44b639:	sbb    al,0xe3
  44b63b:	push   edx
  44b63c:	add    al,0xcb
  44b63e:	xchg   ebp,eax
  44b63f:	shl    DWORD PTR [esi-0x730c32ab],1
  44b645:	push   ecx
  44b646:	ja     0x44b688
  44b648:	xchg   ebx,eax
  44b649:	mov    al,ds:0xa64a32bf
  44b64e:	fcom   DWORD PTR [ecx+0x7a653b3c]
  44b654:	lock cmc 
  44b656:	or     DWORD PTR [edi+0x2b],eax
  44b659:	jg     0x44b609
  44b65b:	jp     0x44b5dd
  44b65d:	arpl   WORD PTR [edx-0x7b0971b],bx
  44b663:	aaa    
  44b664:	leave  
  44b665:	arpl   WORD PTR [ecx],si
  44b667:	adc    esp,eax
  44b669:	add    dl,BYTE PTR [esi+0x32]
  44b66c:	sub    BYTE PTR [edi+0x77d84fd0],bl
  44b672:	jbe    0x44b687
  44b674:	test   al,0x54
  44b676:	mov    WORD PTR [esi],?
  44b678:	jns    0x44b6d3
  44b67a:	bound  edi,QWORD PTR [ebx]
  44b67c:	adc    DWORD PTR [edi+0x38a1b057],0x6bc29df4
  44b686:	mov    eax,0x97d0b476
  44b68b:	enter  0x3200,0xf2
  44b68f:	mov    ebp,0x250a3ba
  44b694:	dec    esi
  44b695:	icebp  
  44b696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b697:	out    0xad,al
  44b699:	popf   
  44b69a:	pop    esi
  44b69b:	xchg   DWORD PTR [eax],edx
  44b69d:	xlat   BYTE PTR ds:[ebx]
  44b69e:	adc    ecx,DWORD PTR [ecx+0x630db176]
  44b6a4:	bound  ebx,QWORD PTR [ebx+0x7ec0cf91]
  44b6aa:	(bad)  
  44b6ac:	in     al,0xd4
  44b6ae:	enter  0x8e7e,0x40
  44b6b2:	ja     0x44b64e
  44b6b4:	retf   0xb88b
  44b6b7:	cmc    
  44b6b8:	out    dx,al
  44b6b9:	jo     0x44b71e
  44b6bb:	scas   al,BYTE PTR es:[edi]
  44b6bc:	outs   dx,BYTE PTR ds:[esi]
  44b6bd:	push   ss
  44b6be:	mov    al,0xdc
  44b6c0:	push   0x2aed9fd7
  44b6c5:	aaa    
  44b6c6:	xchg   esi,eax
  44b6c7:	popa   
  44b6c8:	popf   
  44b6c9:	lods   eax,DWORD PTR ds:[esi]
  44b6ca:	mov    DWORD PTR [ebp-0x4f],ecx
  44b6cd:	fiadd  WORD PTR [edi+0x1e041fa2]
  44b6d3:	out    0xd7,al
  44b6d5:	or     al,0x15
  44b6d7:	popf   
  44b6d8:	popf   
  44b6d9:	jmp    0xa06894ca
  44b6de:	sbb    dh,BYTE PTR [ecx]
  44b6e0:	push   esi
  44b6e1:	or     BYTE PTR [ebx+0x2d],dh
  44b6e4:	mov    bl,0x50
  44b6e6:	push   ebx
  44b6e7:	jmp    0xbcbc:0xdee0e435
  44b6ee:	in     al,0x2
  44b6f0:	popf   
  44b6f1:	fbstp  TBYTE PTR [edx+0x6c]
  44b6f4:	pop    ss
  44b6f5:	nop
  44b6f6:	sub    DWORD PTR [ecx+0x36],0x1d
  44b6fa:	mov    al,0x4c
  44b6fc:	xchg   edi,eax
  44b6fd:	adc    ebx,DWORD PTR [ecx-0x29]
  44b700:	pop    edi
  44b701:	mov    al,0x8e
  44b703:	call   0x80a38376
  44b708:	call   0x4278:0x4ed5741d
  44b70f:	pop    edx
  44b710:	fdivr  DWORD PTR [edi+0x78]
  44b713:	rcl    BYTE PTR [eax+0x52],1
  44b716:	sub    DWORD PTR [esi-0x12],0xfffffff9
  44b71a:	inc    esi
  44b71c:	pop    ecx
  44b71d:	dec    eax
  44b71e:	cmp    DWORD PTR [esi-0x39],edi
  44b721:	jg     0x44b719
  44b723:	inc    esi
  44b724:	daa    
  44b725:	adc    dl,BYTE PTR [edx-0x6d]
  44b728:	push   edx
  44b729:	das    
  44b72a:	inc    ecx
  44b72b:	mov    bh,BYTE PTR [esi-0x50]
  44b72e:	xchg   edx,eax
  44b72f:	pop    ecx
  44b730:	pop    ebp
  44b731:	(bad)  
  44b732:	fcmovnbe st,st(4)
  44b734:	mov    fs:0xf23c36ec,al
  44b73a:	mov    ecx,0xdb5c37ce
  44b73f:	nop
  44b740:	xor    ecx,DWORD PTR [esi+0x5c]
  44b743:	addr16 dec eax
  44b745:	push   ebp
  44b746:	dec    ecx
  44b747:	cmc    
  44b748:	clc    
  44b749:	fbstp  TBYTE PTR [eax+0x53973d3b]
  44b74f:	out    0x4b,al
  44b751:	(bad)  
  44b752:	stos   BYTE PTR es:[edi],al
  44b753:	and    eax,DWORD PTR [ebx+0x5f24d44d]
  44b759:	sti    
  44b75a:	and    ch,cl
  44b75c:	imul   esp,ebx,0xfeed84c9
  44b762:	out    dx,al
  44b763:	call   0xab35f07b
  44b768:	push   ss
  44b769:	sar    DWORD PTR [eax+0x5e],1
  44b76c:	cmp    ebp,DWORD PTR [eax-0x3e]
  44b76f:	and    dh,BYTE PTR [eax+ecx*4+0x7a166163]
  44b776:	xchg   edx,eax
  44b777:	or     DWORD PTR [esi+0x66],esp
  44b77a:	pop    ebp
  44b77b:	add    DWORD PTR [edi+0x6d],0xfffffffc
  44b77f:	dec    ecx
  44b780:	add    dh,BYTE PTR [ecx+0x198cd07e]
  44b786:	popf   
  44b787:	imul   ebp,DWORD PTR [edx],0xc08d60d4
  44b78d:	mov    BYTE PTR [edi+0x23],dh
  44b790:	outs   dx,BYTE PTR ds:[esi]
  44b791:	pop    ss
  44b792:	ror    DWORD PTR [esi],1
  44b794:	icebp  
  44b795:	push   esp
  44b796:	(bad)  
  44b798:	inc    ebx
  44b799:	push   cs
  44b79a:	add    esp,ecx
  44b79c:	pop    ss
  44b79d:	push   esp
  44b79e:	mov    edx,0x526fea15
  44b7a3:	(bad)  
  44b7a4:	cwde   
  44b7a5:	inc    ecx
  44b7a6:	xor    DWORD PTR [ecx+0x405c587e],0x2
  44b7ad:	xor    DWORD PTR [ebp-0x63],eax
  44b7b0:	jbe    0x44b768
  44b7b2:	imul   edx,esi,0xffffffa0
  44b7b5:	sbb    ch,BYTE PTR [eax-0x6f]
  44b7b8:	inc    ebp
  44b7b9:	pop    esp
  44b7ba:	mov    edi,0xdb35fd82
  44b7bf:	popa   
  44b7c0:	inc    edx
  44b7c1:	mov    ch,0xd3
  44b7c3:	add    al,0x9d
  44b7c5:	xor    DWORD PTR [esi-0x70],0x9fe047b
  44b7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b7cd:	mov    ebx,0x2ffc680d
  44b7d2:	in     al,0x6e
  44b7d4:	mov    bh,BYTE PTR [ebx]
  44b7d6:	sub    al,0xe5
  44b7d8:	fdivp  st(2),st
  44b7da:	mov    edi,0xe77e9513
  44b7df:	pop    esp
  44b7e0:	pop    esp
  44b7e1:	jg     0x44b7f5
  44b7e3:	iret   
  44b7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b7e5:	outs   dx,BYTE PTR fs:[esi]
  44b7e7:	jle    0x44b7c5
  44b7e9:	jo     0x44b78d
  44b7eb:	xor    esp,DWORD PTR [ebx]
  44b7ed:	jl     0x44b77e
  44b7ef:	mov    ch,0x2
  44b7f1:	mov    dh,0x33
  44b7f3:	and    BYTE PTR [esi+ebp*1-0x26],bh
  44b7f7:	jns    0x44b7c0
  44b7f9:	mov    al,0xf8
  44b7fb:	(bad)  
  44b7fc:	enter  0x3f1b,0x2c
  44b800:	jg     0x44b7a9
  44b802:	out    dx,al
  44b803:	leave  
  44b804:	push   ebx
  44b805:	stos   BYTE PTR es:[edi],al
  44b806:	pop    eax
  44b807:	fs push eax
  44b809:	outs   dx,BYTE PTR ds:[esi]
  44b80a:	mov    ebx,0x2877c023
  44b80f:	xchg   ebx,eax
  44b810:	mov    dh,0xb5
  44b812:	(bad)  
  44b813:	sbb    BYTE PTR [esi],bl
  44b815:	dec    edi
  44b816:	mov    ds:0x34322284,eax
  44b81b:	push   cs
  44b81c:	ds repz mov ebx,0xd0f4a52f
  44b823:	sub    BYTE PTR [edx-0x6f],ch
  44b826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b827:	popa   
  44b828:	xor    eax,0xf11072c7
  44b82d:	data16 fs add al,cl
  44b831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b832:	mov    al,ds:0x659ac259
  44b837:	xor    dh,bl
  44b839:	call   0x66a491fd
  44b83e:	sub    dh,ch
  44b840:	mov    ecx,0x206ae327
  44b845:	in     al,dx
  44b846:	lods   al,BYTE PTR ds:[esi]
  44b847:	pop    eax
  44b848:	inc    ebp
  44b849:	nop    DWORD PTR [esi]
  44b84c:	cmp    esi,0xffffffdc
  44b84f:	or     BYTE PTR [ebx],ch
  44b851:	out    dx,eax
  44b852:	call   0xfba0:0x527178f6
  44b859:	xchg   esp,eax
  44b85a:	xchg   ebx,eax
  44b85b:	in     eax,0x35
  44b85d:	inc    edx
  44b85e:	das    
  44b85f:	mov    bl,0x13
  44b861:	pop    edx
  44b862:	test   al,0x60
  44b864:	je     0x44b8e1
  44b866:	push   es
  44b867:	sbb    al,0x89
  44b869:	in     al,0x6e
  44b86b:	mov    ds:0x2425e2f7,al
  44b870:	or     al,0x19
  44b872:	sbb    al,0xd7
  44b874:	xchg   esi,eax
  44b875:	idiv   dl
  44b877:	mov    esi,0x17b206b
  44b87c:	mov    ebx,0x618b10c5
  44b881:	es scas eax,DWORD PTR es:[edi]
  44b883:	dec    ecx
  44b884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b885:	pushf  
  44b886:	cwde   
  44b887:	(bad)  
  44b888:	js     0x44b887
  44b88a:	xchg   edi,eax
  44b88b:	mul    DWORD PTR [eax+0x3f]
  44b88e:	out    0x1,eax
  44b890:	js     0x44b8e8
  44b892:	mov    ah,0xad
  44b894:	daa    
  44b895:	mov    al,0x2f
  44b897:	cwde   
  44b898:	sbb    dh,dl
  44b89a:	std    
  44b89b:	sbb    ebp,DWORD PTR [edi]
  44b89d:	aas    
  44b89e:	rol    DWORD PTR ds:0xd7e1ee52,cl
  44b8a4:	lock mov esi,0xf3ad7c1e
  44b8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b8ab:	sbb    al,0xbc
  44b8ad:	sar    DWORD PTR [ebp+0x34accd84],1
  44b8b3:	or     eax,0x29166a0f
  44b8b8:	fadd   st(4),st
  44b8ba:	retf   
  44b8bb:	or     BYTE PTR [edx+0x75],ch
  44b8be:	jns    0x44b915
  44b8c0:	and    esp,0x26
  44b8c3:	ret    
  44b8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b8c5:	sub    bh,BYTE PTR [ebx+0x1]
  44b8c8:	xor    bl,BYTE PTR [edx]
  44b8ca:	dec    esi
  44b8cb:	ss push ss
  44b8cd:	jnp    0x44b901
  44b8cf:	or     eax,0x8f4ee127
  44b8d4:	stos   DWORD PTR es:[edi],eax
  44b8d5:	lea    edx,[edx+0x1c77d97e]
  44b8db:	pop    esp
  44b8dc:	add    ah,ch
  44b8de:	adc    cl,BYTE PTR [ecx-0x3626f50d]
  44b8e4:	mov    ds:0x90f89dab,eax
  44b8e9:	test   al,0x62
  44b8eb:	inc    edi
  44b8ec:	sub    eax,0xc08af8fa
  44b8f1:	loopne 0x44b95c
  44b8f3:	pushf  
  44b8f4:	xor    ebp,0x310d80af
  44b8fa:	or     WORD PTR [ecx+0x39],sp
  44b8fe:	jb     0x44b932
  44b900:	les    esi,FWORD PTR [ebp+0xad4ca58]
  44b906:	pop    esi
  44b907:	cmp    al,0xb
  44b909:	mov    ecx,0xc6f61787
  44b90e:	leave  
  44b90f:	lahf   
  44b910:	push   edi
  44b911:	push   ecx
  44b912:	fld    QWORD PTR [esi]
  44b914:	pop    ss
  44b915:	sub    BYTE PTR [ebx],0xb0
  44b918:	jo     0x44b8d2
  44b91a:	mov    edi,0x8abb52f4
  44b91f:	(bad)  
  44b921:	sar    BYTE PTR [ecx-0x436f4f94],cl
  44b927:	cmp    ch,BYTE PTR [ebx+0x161c0979]
  44b92d:	aad    0x25
  44b92f:	rol    BYTE PTR [ecx-0x63],cl
  44b932:	pop    ebp
  44b933:	mov    eax,0x6edf039f
  44b938:	sbb    cl,cl
  44b93a:	test   DWORD PTR [eax-0x77],edx
  44b93d:	ficom  DWORD PTR [edx-0x5d]
  44b940:	jge    0x44b8c9
  44b942:	enter  0x5e91,0xb0
  44b946:	jg     0x44b95f
  44b948:	push   ebp
  44b949:	adc    eax,DWORD PTR [esi+eiz*4]
  44b94c:	mov    edi,?
  44b94e:	cwde   
  44b94f:	aam    0x25
  44b951:	js     0x44b9b0
  44b953:	jb     0x44b9b7
  44b955:	in     al,dx
  44b956:	lods   al,BYTE PTR ds:[esi]
  44b957:	jb     0x44b96c
  44b959:	popa   
  44b95a:	xor    eax,0xf2c7c0bd
  44b95f:	stos   BYTE PTR es:[edi],al
  44b960:	mov    al,0x18
  44b962:	mov    ch,0xc3
  44b964:	sbb    al,0x0
  44b966:	pop    ebp
  44b967:	jns    0x44b924
  44b969:	fcomp  DWORD PTR [esi]
  44b96b:	add    ebp,DWORD PTR [ecx+ebp*4-0x61d0c026]
  44b972:	retf   
  44b973:	push   es
  44b974:	pushf  
  44b975:	jge    0x44b93e
  44b977:	pop    ds
  44b978:	dec    esp
  44b979:	mov    ecx,0xa04d82cf
  44b97e:	push   ecx
  44b97f:	lods   al,BYTE PTR ds:[esi]
  44b980:	data16 mov cl,dh
  44b983:	mov    WORD PTR [edx],ss
  44b985:	cmp    esp,DWORD PTR [esi-0xd697df2]
  44b98b:	pop    esp
  44b98c:	repnz xchg ebp,eax
  44b98e:	enter  0x8811,0xa5
  44b992:	mov    ds:0x3882bfb8,eax
  44b997:	idiv   ebp
  44b999:	iret   
  44b99a:	jo     0x44ba0c
  44b99c:	pop    esi
  44b99d:	sar    DWORD PTR [edi+0x3f],cl
  44b9a0:	pop    ds
  44b9a1:	mov    eax,0x2936c684
  44b9a6:	mov    ?,WORD PTR [ecx+0xf]
  44b9a9:	fmul   QWORD PTR [eax]
  44b9ab:	jne    0x44b940
  44b9ad:	and    ecx,DWORD PTR [ecx]
  44b9af:	arpl   WORD PTR ds:0x388eacc9,sp
  44b9b5:	jg     0x44b982
  44b9b7:	into   
  44b9b8:	sbb    ah,BYTE PTR [esi]
  44b9ba:	add    ah,bh
  44b9bc:	pop    edi
  44b9bd:	in     al,dx
  44b9be:	push   ds
  44b9bf:	iret   
  44b9c0:	push   0x914733fc
  44b9c5:	jmp    0x44ba03
  44b9c7:	ins    DWORD PTR es:[edi],dx
  44b9c8:	shl    BYTE PTR [ebx-0x4bced044],0x99
  44b9cf:	cmp    DWORD PTR [ebp+0x3a],ecx
  44b9d2:	cdq    
  44b9d3:	xchg   edx,eax
  44b9d4:	and    DWORD PTR [eax+ebp*2+0x6a],ebp
  44b9d8:	imul   edi,DWORD PTR [ecx],0x45
  44b9db:	test   BYTE PTR [ebx+0x4f11aaf6],al
  44b9e1:	iret   
  44b9e2:	sahf   
  44b9e3:	push   ebp
  44b9e4:	add    BYTE PTR [ebp-0x28],ah
  44b9e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b9e8:	sub    BYTE PTR [edi+0x4],dl
  44b9eb:	jmp    0xe6a921c8
  44b9f0:	or     DWORD PTR [esi+0x7c],ebx
  44b9f3:	xchg   ebx,eax
  44b9f4:	iret   
  44b9f5:	sbb    DWORD PTR [eax],ecx
  44b9f7:	and    cl,BYTE PTR [edx+0x24]
  44b9fa:	jg     0x44ba62
  44b9fc:	mov    edi,0x6fff5954
  44ba01:	mov    ds:0x1a86ee7a,eax
  44ba06:	in     eax,dx
  44ba07:	jmp    0xa6bb:0x6794dc9c
  44ba0e:	and    al,0x42
  44ba10:	retf   0x9fa9
  44ba13:	pop    es
  44ba14:	sbb    ebp,ecx
  44ba16:	enter  0xc0e6,0x36
  44ba1a:	pop    ss
  44ba1b:	cmp    eax,0x67d2047d
  44ba20:	jne    0x44b9a7
  44ba22:	int    0xa6
  44ba24:	or     eax,0x61138b64
  44ba29:	mov    bl,0xdf
  44ba2b:	pop    es
  44ba2c:	and    BYTE PTR [edi+0x7850c292],0xc2
  44ba33:	pop    esp
  44ba34:	mov    ss,WORD PTR [edi-0x3a0e4932]
  44ba3a:	or     DWORD PTR [esi+ecx*2],0x12
  44ba3e:	das    
  44ba3f:	pop    ecx
  44ba40:	jbe    0x44ba6d
  44ba42:	pop    eax
  44ba43:	mov    fs,WORD PTR [esi]
  44ba45:	cmp    eax,0x2b16797b
  44ba4a:	popa   
  44ba4b:	pop    ecx
  44ba4c:	cmp    al,0xab
  44ba4e:	jp     0x44ba41
  44ba50:	hlt    
  44ba51:	fcomp  DWORD PTR [eax+0x7a59eda]
  44ba57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba58:	or     dl,BYTE PTR [eax]
  44ba5a:	and    eax,0x322b2719
  44ba5f:	fidiv  WORD PTR [ecx-0x15f45bd4]
  44ba65:	jbe    0x44b9f4
  44ba67:	pushf  
  44ba68:	retf   0xcd11
  44ba6b:	arpl   WORD PTR [eax+0x10aa22be],ax
  44ba71:	xchg   BYTE PTR fs:[ebp+0x46],ah
  44ba75:	test   DWORD PTR [eax],eax
  44ba77:	pop    ebp
  44ba78:	xchg   ecx,eax
  44ba79:	pop    ss
  44ba7a:	lock leave 
  44ba7c:	leave  
  44ba7d:	mov    ebp,0x8e5f5b16
  44ba82:	mov    esi,0x3328a7aa
  44ba87:	inc    esp
  44ba88:	xor    BYTE PTR [esi+ebp*4+0x5b311b2c],bl
  44ba8f:	push   esi
  44ba90:	aad    0xc6
  44ba92:	test   eax,0x599953f9
  44ba97:	pop    ds
  44ba98:	mov    ch,0x0
  44ba9a:	iret   
  44ba9b:	xor    eax,0x13c27ab9
  44baa0:	cld    
  44baa1:	xchg   ebp,eax
  44baa2:	aaa    
  44baa3:	les    eax,FWORD PTR [ecx+0x7d4a0e8a]
  44baa9:	out    0x48,eax
  44baab:	jb     0x44ba93
  44baad:	push   cs
  44baae:	ins    BYTE PTR es:[edi],dx
  44baaf:	push   0x4f
  44bab1:	aam    0x82
  44bab3:	stc    
  44bab4:	(bad)  
  44bab5:	pop    eax
  44bab6:	dec    ecx
  44bab7:	popa   
  44bab8:	push   esp
  44bab9:	push   eax
  44baba:	lea    edx,[ebp+0x45]
  44babd:	mov    bl,0x8a
  44babf:	mov    DWORD PTR [edi+0x7d690338],ebx
  44bac5:	les    ebp,FWORD PTR [ebx]
  44bac7:	sub    DWORD PTR [ebx+0x2aa95c65],ecx
  44bacd:	out    0x99,al
  44bacf:	sub    ah,BYTE PTR [ebx]
  44bad1:	dec    edi
  44bad2:	or     BYTE PTR [ebp+0x6f],0x19
  44bad6:	jmp    0x44badd
  44bad8:	cs leave 
  44bada:	xlat   BYTE PTR ds:[ebx]
  44badb:	jmp    0xbf31:0xa9c7de91
  44bae2:	in     al,0x7d
  44bae4:	push   0x266b8ef2
  44bae9:	mov    edi,0xba371d3d
  44baee:	dec    esp
  44baef:	ins    BYTE PTR es:[edi],dx
  44baf0:	psllq  mm2,QWORD PTR [eax+0x625ae84a]
  44baf7:	shr    BYTE PTR [edi+0x60d94a41],cl
  44bafd:	scas   eax,DWORD PTR es:[edi]
  44bafe:	inc    eax
  44baff:	in     eax,0xd0
  44bb01:	sbb    BYTE PTR [ebp-0x5e],al
  44bb04:	xor    BYTE PTR [eax-0x331f92fe],al
  44bb0a:	dec    edx
  44bb0b:	ja     0x44babe
  44bb0d:	es imul esi,edi,0x6c
  44bb11:	mov    ebp,0xb83919bc
  44bb16:	mov    eax,0xe6f89b8f
  44bb1b:	into   
  44bb1c:	mov    ebx,0xa0d5fe2f
  44bb21:	and    edx,ecx
  44bb23:	add    al,0xe8
  44bb25:	shr    DWORD PTR ds:0x4ad2c4f8,cl
  44bb2b:	mov    eax,ds:0xc487b9ab
  44bb30:	mov    ecx,0xcf804577
  44bb35:	jecxz  0x44bb5b
  44bb37:	enter  0x862b,0xe0
  44bb3b:	jo     0x44bb47
  44bb3d:	xchg   ebp,eax
  44bb3e:	jb     0x44bb3c
  44bb40:	lds    eax,FWORD PTR [ecx+0x484a35b6]
  44bb46:	ficom  DWORD PTR [edi]
  44bb48:	push   ecx
  44bb49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bb4a:	je     0x44bb9c
  44bb4c:	dec    edi
  44bb4d:	rol    DWORD PTR [eax],cl
  44bb4f:	ret    
  44bb50:	mov    edi,0x3fb067f3
  44bb55:	xor    ebp,edx
  44bb57:	stc    
  44bb58:	mov    BYTE PTR [ecx-0x63987af],ch
  44bb5e:	add    edx,ebx
  44bb60:	mov    al,ds:0x3452d11c
  44bb65:	inc    edx
  44bb66:	mov    esi,0xb91906d0
  44bb6b:	jg     0x44bbcd
  44bb6d:	in     eax,dx
  44bb6e:	push   ecx
  44bb6f:	adc    ch,BYTE PTR [ebp-0x5356a870]
  44bb75:	in     al,dx
  44bb76:	cld    
  44bb77:	pop    ds
  44bb78:	pop    edi
  44bb79:	or     ah,BYTE PTR [bp-0x6044]
  44bb7e:	int    0x8f
  44bb80:	out    dx,al
  44bb81:	outs   dx,BYTE PTR ds:[esi]
  44bb82:	jle    0x44bbbe
  44bb84:	sbb    DWORD PTR [edi+esi*1-0x42],ebp
  44bb88:	mov    cl,0xb
  44bb8a:	stos   BYTE PTR es:[edi],al
  44bb8b:	and    DWORD PTR [ecx],esi
  44bb8d:	fldcw  WORD PTR [ecx-0x3ddff215]
  44bb93:	jl     0x44bbcf
  44bb95:	xor    eax,DWORD PTR [edx+0x329e4d49]
  44bb9b:	jge    0x44bb68
  44bb9d:	sub    DWORD PTR [ebp+0x417fb8da],0x317b2787
  44bba7:	dec    esi
  44bba8:	mov    ch,0xdb
  44bbaa:	pushf  
  44bbab:	shl    DWORD PTR [ebx-0x36],cl
  44bbae:	or     eax,0x7930334a
  44bbb3:	mov    al,ds:0xbf7ff71e
  44bbb8:	pop    ebx
  44bbb9:	retf   
  44bbba:	mov    al,ds:0x254388b6
  44bbbf:	out    dx,al
  44bbc0:	push   ds
  44bbc1:	repnz mov ch,0xa0
  44bbc4:	inc    edx
  44bbc5:	push   ebp
  44bbc6:	in     eax,0x52
  44bbc8:	fisttp WORD PTR [ebp-0x2e3b1cae]
  44bbce:	mov    bl,0x37
  44bbd0:	add    al,0xca
  44bbd2:	add    DWORD PTR [edi+0x7d272307],esp
  44bbd8:	mov    dl,0x51
  44bbda:	bound  edx,QWORD PTR [edi+0x67]
  44bbdd:	push   0x89d085ad
  44bbe2:	leave  
  44bbe3:	jp     0x44bc10
  44bbe5:	adc    DWORD PTR [esp+ebx*2],esi
  44bbe8:	jge    0x44bbfd
  44bbea:	pop    ecx
  44bbeb:	xor    al,dl
  44bbed:	aam    0x4
  44bbef:	xor    al,0xe7
  44bbf1:	mov    ebx,DWORD PTR [esi-0x60c3b67a]
  44bbf7:	leave  
  44bbf8:	push   ebx
  44bbf9:	mov    WORD PTR fs:[eax-0x47dace32],?
  44bc00:	jmp    0x21fb:0xd76667e2
  44bc07:	in     eax,0x1f
  44bc09:	daa    
  44bc0a:	push   ecx
  44bc0b:	mov    esp,DWORD PTR [esi+ebx*8]
  44bc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bc0f:	repz fstp st(7)
  44bc12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bc13:	inc    ecx
  44bc14:	dec    ebp
  44bc15:	sub    eax,0xa108f6c8
  44bc1a:	mov    ds:0xb5e263f3,al
  44bc1f:	ds mov dh,0x8f
  44bc22:	inc    edi
  44bc23:	ret    0xd891
  44bc26:	adc    BYTE PTR [ebp+edx*4+0x57],al
  44bc2a:	hlt    
  44bc2b:	lods   al,BYTE PTR ds:[esi]
  44bc2c:	jg     0x44bc84
  44bc2e:	cmp    bh,BYTE PTR ds:0x571951e4
  44bc34:	jp     0x44bc4a
  44bc36:	and    eax,0xc649f503
  44bc3b:	push   0x6540772a
  44bc40:	fidivr WORD PTR [edx]
  44bc42:	push   0xd178901f
  44bc47:	sub    eax,0x927034b
  44bc4c:	adc    ebx,eax
  44bc4e:	clc    
  44bc4f:	adc    eax,0xa44d7e64
  44bc54:	mov    eax,0xfc302b5e
  44bc59:	mov    esp,0x121c3f5c
  44bc5e:	std    
  44bc5f:	gs add al,0x19
  44bc62:	or     DWORD PTR [eax+ebp*2+0x1772c2fa],ecx
  44bc69:	push   0x57
  44bc6b:	xor    dl,BYTE PTR [ebp+0x73adb0ef]
  44bc71:	shl    DWORD PTR [ecx+ebp*4+0x3631aa60],cl
  44bc78:	cdq    
  44bc79:	mov    edi,0x470e53b8
  44bc7e:	mov    al,ds:0x5197d3b2
  44bc83:	ins    DWORD PTR es:[edi],dx
  44bc84:	adc    DWORD PTR [eax+0x37cce74b],0x4f7cc05a
  44bc8e:	loop   0x44bc9f
  44bc90:	in     al,dx
  44bc91:	sbb    eax,0x1202f2bf
  44bc96:	and    edx,DWORD PTR [edx+0x5]
  44bc99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bc9a:	shr    DWORD PTR [ebx-0x553a96],0xfe
  44bca1:	xor    DWORD PTR [edx+edx*8-0x61f1cde2],ebx
  44bca8:	mov    bh,0x6f
  44bcaa:	test   al,0xba
  44bcac:	and    DWORD PTR [eax],ecx
  44bcae:	stc    
  44bcaf:	mov    ecx,0x2fd7fd6d
  44bcb4:	sub    ah,BYTE PTR [ecx-0x68]
  44bcb7:	jb     0x44bca3
  44bcb9:	xchg   ebx,eax
  44bcba:	mov    ch,0x29
  44bcbc:	and    edi,ebx
  44bcbe:	dec    esp
  44bcbf:	sahf   
  44bcc0:	ss sbb eax,0xa96c051d
  44bcc6:	adc    BYTE PTR [eax-0x5f40f514],ch
  44bccc:	lock fimul DWORD PTR [ebx]
  44bccf:	ret    
  44bcd0:	add    BYTE PTR [ecx+ecx*1+0x7f],ch
  44bcd4:	sub    ah,bl
  44bcd6:	inc    ebx
  44bcd7:	(bad)  
  44bcd8:	fs dec eax
  44bcda:	cmc    
  44bcdb:	retf   0x92f3
  44bcde:	adc    bh,bh
  44bce0:	xor    al,0x89
  44bce2:	es jl  0x44bd10
  44bce5:	daa    
  44bce6:	or     al,0x89
  44bce8:	jnp    0x44bd5f
  44bcea:	jle    0x44bce5
  44bcec:	mov    ebp,0xaff0e8c0
  44bcf1:	es jnp 0x44bcb3
  44bcf4:	scas   al,BYTE PTR es:[edi]
  44bcf5:	loope  0x44bc85
  44bcf7:	ds pop ebp
  44bcf9:	(bad)  [esi+0x1b04f232]
  44bcff:	lahf   
  44bd00:	mov    edx,0x3c63a7fe
  44bd05:	ret    
  44bd06:	test   al,0xd6
  44bd08:	push   edi
  44bd09:	hlt    
  44bd0a:	or     BYTE PTR [eax],bh
  44bd0c:	mov    bl,0x4d
  44bd0e:	pop    edi
  44bd0f:	push   0xffffff87
  44bd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bd12:	push   ds
  44bd13:	mov    edi,DWORD PTR [ecx+edi*1]
  44bd16:	(bad)
  44bd1a:	pop    ecx
  44bd1b:	xchg   ecx,eax
  44bd1c:	and    dh,ah
  44bd1e:	fdiv   QWORD PTR [edi+0x24e81574]
  44bd24:	jmp    0x44bd05
  44bd26:	ins    DWORD PTR es:[di],dx
  44bd28:	mov    ah,0xbb
  44bd2a:	mov    ah,ch
  44bd2c:	lods   al,BYTE PTR ss:[esi]
  44bd2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bd2f:	jge    0x44bd6b
  44bd31:	je     0x44bd4a
  44bd33:	and    ebp,DWORD PTR [edi]
  44bd35:	rcr    DWORD PTR [eax+0x206831b4],0xa0
  44bd3c:	xchg   edi,eax
  44bd3d:	fisub  WORD PTR [ecx-0x231a1556]
  44bd43:	push   0x555899fc
  44bd48:	stos   DWORD PTR es:[edi],eax
  44bd49:	mov    DWORD PTR [edi-0x2a0b0470],ebp
  44bd4f:	and    bl,BYTE PTR [edx-0x79]
  44bd52:	sub    eax,0x52a082fe
  44bd57:	arpl   WORD PTR [ecx],ax
  44bd59:	push   ebx
  44bd5a:	outs   dx,BYTE PTR ds:[esi]
  44bd5b:	or     BYTE PTR [eax*4+0x14fb81d2],dl
  44bd62:	data16 jne 0x44bd47
  44bd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bd66:	mov    ebp,0xe403d869
  44bd6b:	pop    esp
  44bd6c:	push   cs
  44bd6d:	cdq    
  44bd6e:	mov    WORD PTR [ebx+0x9],es
  44bd71:	fcmovu st,st(0)
  44bd73:	mov    dl,0x3b
  44bd75:	mov    ecx,DWORD PTR [ecx-0x62]
  44bd78:	push   esp
  44bd79:	lock adc eax,0xfd8e506a
  44bd7f:	cmp    ebx,esp
  44bd81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bd82:	(bad)  
  44bd83:	gs xor al,0x1b
  44bd86:	inc    ecx
  44bd87:	sub    ah,dl
  44bd89:	and    esi,edx
  44bd8b:	das    
  44bd8c:	std    
  44bd8d:	and    cl,BYTE PTR [ebp-0x3488eccb]
  44bd93:	inc    ebp
  44bd94:	outs   dx,DWORD PTR ds:[esi]
  44bd95:	loop   0x44bdb8
  44bd97:	xchg   ebx,eax
  44bd98:	or     DWORD PTR [eax+0x2a479493],0x5c8d1bdd
  44bda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bda3:	mov    eax,ds:0xdb9468a3
  44bda8:	int    0x8d
  44bdaa:	xor    eax,0x78c8d089
  44bdaf:	retf   0x39a1
  44bdb2:	dec    edx
  44bdb3:	rol    edi,1
  44bdb5:	ret    
  44bdb6:	push   edi
  44bdb7:	ret    0xecd4
  44bdba:	xchg   esi,eax
  44bdbb:	test   dl,al
  44bdbd:	jmp    0xa291:0xb551302d
  44bdc4:	jno    0x44bd92
  44bdc6:	mov    cl,0xdf
  44bdc8:	cmp    ebx,eax
  44bdca:	mov    ch,0xd2
  44bdcc:	scas   al,BYTE PTR es:[edi]
  44bdcd:	inc    esi
  44bdce:	mov    dh,0x31
  44bdd0:	mov    al,BYTE PTR [eax-0x6e184e34]
  44bdd6:	jo     0x44bd90
  44bdd8:	or     al,0x65
  44bdda:	in     eax,dx
  44bddb:	ss mov eax,0xa01ed1dd
  44bde1:	push   0x7c
  44bde3:	dec    ebp
  44bde4:	mov    ebx,0x55e40ec5
  44bde9:	cmp    edi,DWORD PTR [ebp+0x8]
  44bdec:	(bad)  
  44bded:	xor    ah,ch
  44bdef:	cmp    bh,BYTE PTR [ebp+0x43]
  44bdf2:	cdq    
  44bdf3:	stc    
  44bdf4:	jle    0x44be2d
  44bdf6:	loopne 0x44bdec
  44bdf8:	pop    edi
  44bdf9:	pop    eax
  44bdfa:	inc    ebx
  44bdfb:	pop    edi
  44bdfc:	lahf   
  44bdfd:	lods   eax,DWORD PTR ds:[esi]
  44bdfe:	mov    al,ds:0x9c4cfab
  44be03:	pop    eax
  44be04:	iret   
  44be05:	and    eax,0x1d5c336c
  44be0a:	xchg   DWORD PTR [eax+ebx*8],esp
  44be0d:	jno    0x44be81
  44be0f:	es dec ebx
  44be11:	in     al,0xd4
  44be13:	xchg   edi,eax
  44be14:	adc    DWORD PTR [ebx],ebx
  44be16:	pop    ds
  44be17:	xor    bl,BYTE PTR [ecx+ebp*1]
  44be1a:	popa   
  44be1b:	mov    ebp,0x1757bc4
  44be20:	inc    eax
  44be21:	sub    dl,0x9
  44be24:	and    al,0x9a
  44be26:	(bad)  
  44be27:	push   ebx
  44be28:	push   edx
  44be29:	jmp    0xa1ad4be4
  44be2e:	call   0x6fa4:0x94ebd6e
  44be35:	test   ah,bl
  44be37:	mov    ch,0xd8
  44be39:	nop
  44be3a:	jle    0x44be8a
  44be3c:	je     0x44be33
  44be3e:	adc    BYTE PTR [esi],bl
  44be40:	jmp    0x44be27
  44be42:	test   eax,0x9efe6a75
  44be47:	jecxz  0x44be20
  44be49:	xchg   BYTE PTR [edx-0x215188f9],dl
  44be4f:	stc    
  44be50:	and    edx,edx
  44be52:	dec    ebp
  44be53:	push   es
  44be54:	scas   al,BYTE PTR es:[edi]
  44be55:	ins    DWORD PTR es:[edi],dx
  44be56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44be57:	inc    ebp
  44be58:	mov    al,0x1c
  44be5a:	popf   
  44be5b:	mov    ecx,0xe6c10405
  44be60:	jge    0x44be14
  44be62:	add    eax,0x1450cf40
  44be67:	lock pop ebp
  44be69:	ss test ebx,edi
  44be6c:	cmp    eax,0xaad5d5a5
  44be71:	xchg   ecx,eax
  44be72:	mov    cl,0x1d
  44be74:	test   al,0x22
  44be76:	test   DWORD PTR [ecx-0x31d402cd],0x3bbcc4a9
  44be80:	jmp    0xddfc:0x513a0bd5
  44be87:	xor    esp,edi
  44be89:	or     BYTE PTR [eax],bh
  44be8b:	test   ebx,0xd51c13aa
  44be91:	cs xchg ebx,eax
  44be93:	inc    esi
  44be94:	ss push 0xffffffb6
  44be97:	cmp    ch,BYTE PTR [edx]
  44be99:	inc    esi
  44be9a:	xchg   ecx,eax
  44be9b:	mov    BYTE PTR [edi+edi*4+0x27],cl
  44be9f:	mov    bl,0x7e
  44bea1:	inc    edx
  44bea2:	(bad)  
  44bea3:	or     DWORD PTR [ebx],esi
  44bea5:	call   0x773ccdee
  44beaa:	in     eax,dx
  44beab:	sub    ebp,DWORD PTR [ecx+ebp*1+0x33]
  44beaf:	push   ds
  44beb0:	or     ebp,eax
  44beb2:	dec    ebp
  44beb3:	test   BYTE PTR [eax+0x25],bl
  44beb6:	xchg   esi,eax
  44beb7:	test   DWORD PTR [edi-0x418e68d5],edx
  44bebd:	jp     0x44befb
  44bebf:	in     eax,dx
  44bec0:	add    DWORD PTR [ecx],esi
  44bec2:	rcr    cl,cl
  44bec4:	dec    edx
  44bec5:	adc    bl,BYTE PTR [edi-0x5b0b7216]
  44becb:	and    BYTE PTR [esi],dh
  44becd:	les    ebp,FWORD PTR ds:0xe7bb11b3
  44bed3:	and    bh,BYTE PTR [ebx+eax*8-0x7a75360]
  44beda:	mov    ah,0xef
  44bedc:	scas   al,BYTE PTR es:[edi]
  44bedd:	mov    ds:0xc37fdfaf,al
  44bee2:	pop    es
  44bee3:	stos   BYTE PTR es:[edi],al
  44bee4:	(bad)  
  44bee6:	shr    al,cl
  44bee8:	jmp    0xb258:0x7adfae9e
  44beef:	xor    al,BYTE PTR [ebx-0x49]
  44bef2:	mov    eax,0x12173a86
  44bef7:	leave  
  44bef8:	inc    esi
  44bef9:	mov    cl,0xb
  44befb:	sub    BYTE PTR [edx],bl
  44befd:	repz adc edi,DWORD PTR [esi-0x3d754807]
  44bf04:	test   al,0xf3
  44bf06:	ficomp WORD PTR [ebp-0x60]
  44bf09:	push   ds
  44bf0a:	jae    0x44bf75
  44bf0c:	out    dx,al
  44bf0d:	mov    al,ds:0x75375fe9
  44bf12:	out    dx,al
  44bf13:	or     bh,BYTE PTR [esi-0x2ac3a3b2]
  44bf19:	xchg   ecx,ebx
  44bf1b:	xchg   DWORD PTR [eax+eiz*8],ebx
  44bf1e:	dec    eax
  44bf1f:	sbb    ecx,DWORD PTR es:[edi-0x4d]
  44bf23:	shl    BYTE PTR [eax],1
  44bf25:	test   BYTE PTR [ecx+0x32ccd088],ch
  44bf2b:	repz sub eax,0x87dfdb2c
  44bf31:	in     eax,0x96
  44bf33:	loopne 0x44bf68
  44bf35:	dec    edx
  44bf36:	out    dx,eax
  44bf37:	shl    bl,0x72
  44bf3a:	pop    esp
  44bf3b:	mov    ebp,0xf3349c52
  44bf40:	and    BYTE PTR [esi+ebp*4],bh
  44bf43:	ins    DWORD PTR es:[edi],dx
  44bf44:	in     al,0x2a
  44bf46:	mov    dl,0x97
  44bf48:	pop    es
  44bf49:	sti    
  44bf4a:	xlat   BYTE PTR ds:[ebx]
  44bf4b:	aas    
  44bf4c:	das    
  44bf4d:	cli    
  44bf4e:	shl    ah,0xa
  44bf51:	mov    dh,0xfb
  44bf53:	cmp    BYTE PTR [ebx+ebp*8+0x22eda25f],ah
  44bf5a:	cmp    eax,0xe3d964b5
  44bf5f:	inc    esp
  44bf60:	pop    ds
  44bf61:	lods   eax,DWORD PTR ds:[esi]
  44bf62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bf63:	jbe    0x44bfab
  44bf65:	hlt    
  44bf66:	ret    0xce32
  44bf69:	fs jge 0x44bf4d
  44bf6c:	xchg   edi,eax
  44bf6d:	jmp    0x44bf13
  44bf6f:	mov    ecx,0xbdf000b2
  44bf74:	sar    BYTE PTR [edx-0x4],cl
  44bf77:	pop    eax
  44bf78:	pop    ecx
  44bf79:	addr16 mov bh,0x40
  44bf7c:	in     al,0x6b
  44bf7e:	or     esi,eax
  44bf80:	(bad)  
  44bf81:	fwait
  44bf82:	stc    
  44bf83:	jp     0x44bfeb
  44bf85:	inc    ebx
  44bf86:	adc    ebp,DWORD PTR [edi-0x57]
  44bf89:	xor    eax,0xe28c8f93
  44bf8e:	mov    BYTE PTR [edx+0x2f94e332],ah
  44bf94:	and    DWORD PTR [ebx+0x4b42b882],eax
  44bf9a:	(bad)  [edi+0x3d518708]
  44bfa0:	pop    edx
  44bfa1:	jge    0x44bfbd
  44bfa3:	jo     0x44c011
  44bfa5:	dec    ebp
  44bfa6:	addr16 and esi,ebp
  44bfa9:	fwait
  44bfaa:	(bad)  
  44bfab:	or     al,0xea
  44bfad:	adc    bl,ah
  44bfaf:	imul   esp,DWORD PTR [edi+0x19],0xffffff8d
  44bfb3:	aad    0x4d
  44bfb5:	int    0x25
  44bfb7:	and    BYTE PTR [eax],0x4d
  44bfba:	cmp    ah,0x8b
  44bfbd:	sti    
  44bfbe:	inc    ecx
  44bfbf:	jmp    0x66e378b0
  44bfc4:	jae    0x44bf7a
  44bfc6:	clc    
  44bfc7:	jl     0x44bf69
  44bfc9:	jle    0x44c014
  44bfcb:	shl    dh,1
  44bfcd:	push   ds
  44bfce:	mov    ch,0x6
  44bfd0:	retf   
  44bfd1:	js     0x44bf80
  44bfd3:	sbb    bl,cl
  44bfd5:	sub    DWORD PTR [ecx],eax
  44bfd7:	in     al,dx
  44bfd8:	jbe    0x44c047
  44bfda:	enter  0x39c7,0xb1
  44bfde:	jmp    0x31c1bbb2
  44bfe3:	pop    edx
  44bfe4:	mov    ch,0xa8
  44bfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bfe7:	mov    ecx,0x39e28c7c
  44bfec:	js     0x44bfd0
  44bfee:	mov    ch,dl
  44bff0:	test   al,0x74
  44bff2:	je     0x44bf7e
  44bff4:	jle    0x44c01f
  44bff6:	sub    esi,esi
  44bff8:	sbb    al,ah
  44bffa:	jp     0x44bf9f
  44bffc:	test   eax,0xa4262e86
  44c001:	data16 sub BYTE PTR [ebx],cl
  44c004:	jmp    0x44bf93
  44c006:	jl     0x44bfd7
  44c008:	std    
  44c009:	mov    eax,ds:0xc1000025
  44c00e:	mov    al,ds:0x34a6f94b
  44c013:	add    BYTE PTR ds:0xef52d642,ch
  44c019:	stos   DWORD PTR es:[edi],eax
  44c01a:	cli    
  44c01b:	dec    esp
  44c01c:	adc    DWORD PTR [ecx+0x3af6a50b],esp
  44c022:	sbb    ebx,esi
  44c024:	push   esp
  44c025:	mov    edx,0x54f294cc
  44c02a:	pusha  
  44c02b:	jmp    0x3132:0xf3723a11
  44c032:	lea    edi,[esi-0x417dda17]
  44c038:	xchg   edx,eax
  44c039:	jge    0x44c01e
  44c03b:	and    edx,DWORD PTR [ebx]
  44c03d:	inc    edx
  44c03e:	gs test ebx,eax
  44c041:	arpl   WORD PTR [esi],si
  44c043:	ins    BYTE PTR es:[edi],dx
  44c044:	inc    eax
  44c045:	mov    al,ds:0x905a9418
  44c04a:	jnp    0x44c047
  44c04c:	mov    BYTE PTR [eax+0x26],cl
  44c04f:	sub    esp,DWORD PTR [eax]
  44c051:	cli    
  44c052:	and    eax,0xe17d2deb
  44c057:	dec    esp
  44c058:	sbb    al,0x4
  44c05a:	test   DWORD PTR [edi+0x29],0xc1414a26
  44c061:	(bad)  
  44c062:	loop   0x44c03e
  44c064:	pop    ss
  44c065:	add    DWORD PTR [ebx-0x7009f7c7],ebx
  44c06b:	stc    
  44c06c:	stos   DWORD PTR es:[edi],eax
  44c06d:	cli    
  44c06e:	clc    
  44c06f:	add    bh,ah
  44c071:	scas   eax,DWORD PTR es:[edi]
  44c072:	sti    
  44c073:	retf   
  44c074:	pop    ebp
  44c075:	sub    eax,0xcb840d98
  44c07a:	test   al,0x26
  44c07c:	(bad)  
  44c07d:	fmul   DWORD PTR [ebx]
  44c07f:	cmovno edx,DWORD PTR [ebx-0x40]
  44c083:	into   
  44c084:	jo     0x44c0f4
  44c086:	int3   
  44c087:	dec    eax
  44c088:	pop    edx
  44c089:	xor    esi,DWORD PTR [eax-0x482b8a2b]
  44c08f:	fld    QWORD PTR [ebx-0x44a1fb71]
  44c095:	ins    BYTE PTR es:[edi],dx
  44c096:	xchg   esp,eax
  44c097:	pop    esp
  44c098:	adc    dh,cl
  44c09a:	inc    edi
  44c09b:	jbe    0x44c02f
  44c09d:	scas   eax,DWORD PTR es:[edi]
  44c09e:	ror    DWORD PTR [esi-0x432adc6a],0xc7
  44c0a5:	add    al,0x94
  44c0a7:	or     ebp,DWORD PTR [edx+edi*8-0x379ab355]
  44c0ae:	aad    0x55
  44c0b0:	fwait
  44c0b1:	xchg   edx,esp
  44c0b3:	sbb    bl,BYTE PTR ds:0xca301152
  44c0b9:	mov    al,0xc0
  44c0bb:	ret    0xe04e
  44c0be:	xor    al,0x7f
  44c0c0:	pop    edi
  44c0c1:	adc    eax,0xb12db1f
  44c0c6:	test   eax,0x27437fde
  44c0cb:	repnz mov cl,BYTE PTR [esi-0x72cc802d]
  44c0d2:	xor    ah,BYTE PTR [ebx]
  44c0d4:	mov    DWORD PTR [ecx-0x54],eax
  44c0d7:	lods   eax,DWORD PTR ds:[esi]
  44c0d8:	mov    DWORD PTR [edx],ebx
  44c0da:	dec    eax
  44c0db:	(bad)  
  44c0dc:	call   0x177a3fb6
  44c0e1:	pop    ebx
  44c0e2:	push   0xf1c2c61a
  44c0e7:	sub    eax,0x5e5e6af0
  44c0ec:	xor    bl,BYTE PTR [bx+si-0x5c]
  44c0f0:	loop   0x44c0d0
  44c0f2:	dec    edx
  44c0f3:	loop   0x44c149
  44c0f5:	mov    BYTE PTR [eax+0x59b46874],dh
  44c0fb:	or     al,0x8f
  44c0fd:	fwait
  44c0fe:	mov    edi,0xe0ff62f2
  44c103:	lds    esp,FWORD PTR [edi]
  44c105:	mov    esi,cs
  44c107:	mov    edi,0x1e061b3b
  44c10c:	or     cl,bl
  44c10e:	mov    WORD PTR [edi],cs
  44c110:	retf   0xa0e3
  44c113:	(bad)  
  44c114:	popf   
  44c115:	mov    edi,0x6cf406ab
  44c11a:	push   ecx
  44c11b:	mov    ?,WORD PTR [ecx+0x71222a0a]
  44c121:	add    BYTE PTR [ebp+0x38],0x81
  44c125:	dec    ebx
  44c126:	cmp    BYTE PTR [edi+eiz*2-0x29bc78fe],0xb3
  44c12e:	dec    edx
  44c12f:	push   esi
  44c130:	add    bl,BYTE PTR [ebp-0x62]
  44c133:	push   edx
  44c134:	setl   BYTE PTR [esi+0x758a8171]
  44c13b:	sub    bh,0xdd
  44c13e:	out    dx,al
  44c13f:	iret   
  44c140:	mov    esp,0x4a61a504
  44c145:	sub    dh,bh
  44c147:	inc    DWORD PTR [ebx-0x441869eb]
  44c14d:	outs   dx,BYTE PTR ds:[esi]
  44c14e:	mov    edi,0x13518dd3
  44c153:	cmp    ah,0x1d
  44c156:	pop    ebx
  44c157:	push   esp
  44c158:	adc    al,0x71
  44c15a:	scas   al,BYTE PTR es:[edi]
  44c15b:	push   cs
  44c15c:	xor    eax,0xebd0a435
  44c161:	in     al,0x72
  44c163:	in     al,dx
  44c164:	and    BYTE PTR [esi-0x67],0x25
  44c168:	mov    ebx,0x31f154e8
  44c16d:	xchg   edi,eax
  44c16e:	pop    ebp
  44c16f:	outs   dx,BYTE PTR ds:[esi]
  44c170:	iret   
  44c171:	lahf   
  44c172:	sti    
  44c173:	mov    WORD PTR [eax],ss
  44c175:	fisttp DWORD PTR [edi]
  44c177:	inc    esi
  44c178:	mov    al,ds:0x574fe4a2
  44c17d:	nop
  44c17e:	(bad)  
  44c17f:	mov    ch,0x43
  44c181:	test   DWORD PTR [edx-0x556e40f9],esp
  44c187:	aad    0xaf
  44c189:	or     al,0x25
  44c18b:	add    ch,BYTE PTR [edi+0x30]
  44c18e:	push   ds
  44c18f:	aam    0x3f
  44c191:	sahf   
  44c192:	jle    0x44c16a
  44c194:	aas    
  44c195:	jno    0x44c14a
  44c197:	cmp    DWORD PTR ds:0x6004e1e7,esi
  44c19d:	xchg   ebp,eax
  44c19e:	test   al,0x53
  44c1a0:	inc    ebx
  44c1a1:	pop    ebx
  44c1a2:	pop    edx
  44c1a3:	pop    es
  44c1a4:	cdq    
  44c1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c1a6:	rcl    DWORD PTR [ebp+0x1e],1
  44c1a9:	xchg   BYTE PTR [edi],bl
  44c1ab:	out    0xbb,al
  44c1ad:	out    0x1f,al
  44c1af:	dec    ebx
  44c1b0:	mov    esp,0xa541454a
  44c1b5:	leave  
  44c1b6:	jp     0x44c176
  44c1b8:	inc    esp
  44c1b9:	in     eax,0x48
  44c1bb:	neg    eax
  44c1bd:	push   edi
  44c1be:	gs out dx,al
  44c1c0:	out    dx,eax
  44c1c1:	call   0x9089:0xe7218c29
  44c1c8:	ret    
  44c1c9:	xchg   DWORD PTR [edx-0x3b21ffc3],esi
  44c1cf:	adc    ecx,DWORD PTR [ebx+0x18f3d942]
  44c1d5:	ret    
  44c1d6:	add    edx,DWORD PTR [eax]
  44c1d8:	pop    ds
  44c1d9:	in     eax,0x1e
  44c1db:	adc    eax,0x56177d56
  44c1e0:	fisub  DWORD PTR [eax]
  44c1e2:	adc    BYTE PTR [esi+eax*4],dh
  44c1e5:	push   esp
  44c1e6:	mov    bl,0xa6
  44c1e8:	jmp    0x2b72:0x5dfebb5d
  44c1ef:	(bad)  
  44c1f0:	fadd   QWORD PTR [eax+edx*4-0x15]
  44c1f4:	dec    ecx
  44c1f5:	loope  0x44c1f7
  44c1f7:	push   edi
  44c1f8:	addr16 loopne 0x44c21c
  44c1fb:	mov    al,ds:0x73cb9f58
  44c200:	mov    DWORD PTR [esp+eiz*8-0x4a],edi
  44c204:	pop    esp
  44c205:	xchg   ebp,eax
  44c206:	ficomp DWORD PTR [edx+ecx*8]
  44c209:	ins    DWORD PTR es:[edi],dx
  44c20a:	jb     0x44c26b
  44c20c:	shl    BYTE PTR [ecx-0x1a],0xd2
  44c210:	stc    
  44c211:	mov    ebp,0x3dff4b72
  44c216:	pop    esi
  44c217:	push   cs
  44c218:	das    
  44c219:	fimul  DWORD PTR [ecx]
  44c21b:	aam    0xa
  44c21d:	xor    al,0xce
  44c21f:	adc    DWORD PTR [edi+ecx*2-0x23],0x77
  44c224:	sbb    al,0xec
  44c226:	cmp    DWORD PTR [edx+0x7984f62f],eax
  44c22c:	dec    ecx
  44c22d:	xchg   esi,eax
  44c22e:	rol    cl,cl
  44c230:	sbb    al,0x3a
  44c232:	test   BYTE PTR [edi+eax*2-0x6deabf41],ch
  44c239:	int    0x74
  44c23b:	xor    dl,bl
  44c23d:	cmp    esi,DWORD PTR [ecx+ecx*4+0x74]
  44c241:	push   eax
  44c242:	iret   
  44c243:	outs   dx,BYTE PTR ds:[esi]
  44c244:	mov    ds:0xbe2cfa41,eax
  44c249:	outs   dx,DWORD PTR ds:[esi]
  44c24a:	dec    edi
  44c24b:	pusha  
  44c24c:	stc    
  44c24d:	cmp    edx,esi
  44c24f:	nop
  44c250:	fimul  WORD PTR [ebx-0x771e09b0]
  44c256:	mov    ds:0x4c310d98,eax
  44c25b:	int3   
  44c25c:	mov    cl,0x53
  44c25e:	jnp    0x44c27c
  44c260:	xchg   esp,eax
  44c261:	loopne 0x44c2a0
  44c263:	je     0x44c250
  44c265:	fild   WORD PTR [esi-0x49]
  44c268:	jmp    0xf685:0x2c0388f3
  44c26f:	xchg   esi,eax
  44c270:	addr16 adc esp,0xffffff8b
  44c274:	jae    0x44c27f
  44c276:	cmp    cl,ch
  44c278:	lods   al,BYTE PTR ds:[esi]
  44c279:	mov    eax,ds:0x2f1b7d27
  44c27e:	sbb    edi,0xc161f211
  44c284:	cmp    al,0x6c
  44c286:	sbb    esp,DWORD PTR [ebx+0x28]
  44c289:	cmp    al,0x71
  44c28b:	fucomi st,st(7)
  44c28d:	adc    edx,DWORD PTR [eax-0x26]
  44c290:	or     DWORD PTR [ebp-0x38],eax
  44c293:	ins    BYTE PTR es:[edi],dx
  44c294:	inc    eax
  44c295:	rcl    BYTE PTR [ebp-0x4f098f2d],cl
  44c29b:	jo     0x44c265
  44c29d:	jmp    0x44c292
  44c29f:	(bad)
  44c2a3:	ficomp DWORD PTR [edx+0x77]
  44c2a6:	in     eax,0xcc
  44c2a8:	ret    0xf307
  44c2ab:	adc    ebx,0xdba03297
  44c2b1:	xor    eax,0xb97d02de
  44c2b6:	pusha  
  44c2b7:	and    DWORD PTR [edi-0x34],ecx
  44c2ba:	sbb    DWORD PTR [eax],ebx
  44c2bc:	sub    BYTE PTR [edx+0x2a],cl
  44c2bf:	jb     0x44c33e
  44c2c1:	dec    edi
  44c2c2:	xor    DWORD PTR [ebx+0x65c5fa5a],edi
  44c2c8:	adc    ebp,DWORD PTR [esi+ebx*8-0xb6977e7]
  44c2cf:	int3   
  44c2d0:	jmp    0x44c331
  44c2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c2d3:	mov    WORD PTR [esi],?
  44c2d5:	js     0x44c34c
  44c2d7:	call   0xb839:0x60d48e4e
  44c2de:	out    dx,eax
  44c2df:	loope  0x44c2f4
  44c2e1:	jge    0x44c306
  44c2e3:	imul   ebx,DWORD PTR [eax],0xb5a4329f
  44c2e9:	cmp    eax,0x300cd79f
  44c2ee:	xchg   ecx,eax
  44c2ef:	popf   
  44c2f0:	cdq    
  44c2f1:	mov    ah,0xa5
  44c2f3:	jge    0x44c278
  44c2f5:	add    BYTE PTR [ecx-0x1],cl
  44c2f8:	xchg   ecx,eax
  44c2f9:	mov    esp,0xa635bfc1
  44c2fe:	and    edx,ebx
  44c300:	mov    al,0x7e
  44c302:	mov    bl,0x89
  44c304:	arpl   WORD PTR [edi+0x32c29a58],si
  44c30a:	into   
  44c30b:	jne    0x44c30b
  44c30d:	scas   al,BYTE PTR es:[edi]
  44c30e:	test   eax,0xf9c2e2e2
  44c313:	ins    DWORD PTR es:[edi],dx
  44c314:	stc    
  44c315:	inc    eax
  44c316:	sar    BYTE PTR [edi+ebp*1],0x97
  44c31a:	scas   eax,DWORD PTR es:[edi]
  44c31b:	lods   eax,DWORD PTR ds:[esi]
  44c31c:	mov    ebp,0xa747962a
  44c321:	cmp    al,0x1f
  44c323:	inc    esp
  44c324:	jmp    0x44c31f
  44c326:	test   BYTE PTR [edi+0x6f],bl
  44c329:	and    DWORD PTR [ebx-0x42326a47],0x4a2e1ab
  44c333:	lahf   
  44c334:	adc    edx,DWORD PTR [ecx+0x13]
  44c337:	mov    ebx,0xc45e994e
  44c33c:	dec    eax
  44c33d:	push   ebp
  44c33e:	mov    al,ds:0xd4a3b869
  44c343:	and    edi,DWORD PTR [eax+0x180651be]
  44c349:	cmp    esi,eax
  44c34b:	mov    ebp,0xbdbb1d65
  44c350:	fwait
  44c351:	or     ch,BYTE PTR [eax]
  44c353:	scas   al,BYTE PTR es:[edi]
  44c354:	mov    al,0x3c
  44c356:	icebp  
  44c357:	lock ret 0xd24e
  44c35b:	lock inc edx
  44c35d:	scas   eax,DWORD PTR es:[edi]
  44c35e:	inc    edi
  44c35f:	fwait
  44c360:	jmp    0x8dafd318
  44c365:	or     ecx,DWORD PTR [ebp-0x2ea8e35b]
  44c36b:	shl    BYTE PTR [ebx+0x33082823],cl
  44c371:	bound  eax,QWORD PTR [ecx-0x79f561ae]
  44c377:	cmp    eax,0x4a8c362a
  44c37c:	dec    edi
  44c37d:	pop    ecx
  44c37e:	cmp    eax,0x620ac6a9
  44c383:	lea    esi,[esi]
  44c385:	adc    eax,0x45592523
  44c38a:	push   es
  44c38b:	cs cs aaa 
  44c38e:	xchg   esp,eax
  44c38f:	adc    ch,0xaa
  44c392:	retf   0xe9a1
  44c395:	mov    esp,ds
  44c397:	push   ss
  44c398:	push   ss
  44c399:	pop    ss
  44c39a:	push   eax
  44c39b:	inc    eax
  44c39c:	xor    dh,al
  44c39e:	into   
  44c39f:	jge    0x44c419
  44c3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c3a3:	or     BYTE PTR [esi+ebx*1+0xf51249e],cl
  44c3aa:	popf   
  44c3ab:	lea    esi,[eax+edi*8+0x18fc166]
  44c3b2:	xchg   esp,eax
  44c3b3:	mov    ecx,0x1335429
  44c3b8:	jmp    0x3380cc19
  44c3bd:	adc    DWORD PTR [edx+0xbbb9922],ebx
  44c3c3:	nop
  44c3c4:	imul   edi,DWORD PTR [edi+0x56],0xf1fbab4b
  44c3cb:	ror    BYTE PTR [edx+0x3f64e557],1
  44c3d1:	xor    eax,DWORD PTR [eax+ebp*8]
  44c3d4:	hlt    
  44c3d5:	outs   dx,DWORD PTR ds:[esi]
  44c3d6:	and    DWORD PTR [edi+0xf],edx
  44c3d9:	inc    edx
  44c3da:	addr16 mov al,ds:0x5dca
  44c3de:	or     esp,DWORD PTR [ecx-0x62]
  44c3e1:	pop    ecx
  44c3e2:	inc    edx
  44c3e3:	add    al,0xcd
  44c3e5:	pmaddwd mm7,QWORD PTR [esi+eiz*2-0x78]
  44c3ea:	cmp    dh,al
  44c3ec:	repnz fst DWORD PTR [esi-0xa]
  44c3f0:	jge    0x44c391
  44c3f2:	dec    edi
  44c3f3:	xchg   esp,eax
  44c3f4:	lods   eax,DWORD PTR ds:[esi]
  44c3f5:	std    
  44c3f6:	pop    esp
  44c3f7:	cmp    al,0xa6
  44c3f9:	jo     0x44c3d1
  44c3fb:	pop    edx
  44c3fc:	push   ds
  44c3fd:	inc    edx
  44c3fe:	pop    esi
  44c3ff:	inc    ebx
  44c400:	hlt    
  44c401:	jp     0x44c456
  44c403:	in     al,dx
  44c404:	add    eax,0x83895941
  44c409:	int3   
  44c40a:	mov    bl,0x58
  44c40c:	(bad)  
  44c40d:	int3   
  44c40e:	sbb    dl,cl
  44c410:	lahf   
  44c411:	cmp    BYTE PTR [esi+ebx*2+0x388e99b3],ch
  44c418:	push   ebx
  44c419:	mov    bh,BYTE PTR [ecx+ebp*4+0x70]
  44c41d:	loop   0x44c403
  44c41f:	stc    
  44c420:	mov    cl,0x39
  44c422:	xchg   ecx,eax
  44c423:	pop    eax
  44c424:	sub    cl,BYTE PTR [esi+0x0]
  44c427:	shl    DWORD PTR [eax-0x7375f58d],cl
  44c42d:	sub    edi,DWORD PTR [ebp-0x5da2fa7]
  44c433:	aas    
  44c434:	loop   0x44c3ef
  44c436:	fwait
  44c437:	and    ah,dh
  44c439:	sbb    ah,dl
  44c43b:	imul   ebx,DWORD PTR [ecx-0x61],0x515d1152
  44c442:	adc    al,0x7b
  44c444:	pop    ebx
  44c445:	jmp    0xef957173
  44c44a:	adc    eax,0x233b3d38
  44c44f:	xchg   esp,eax
  44c450:	(bad)  
  44c451:	and    DWORD PTR [esi],eax
  44c453:	xchg   ebp,eax
  44c454:	in     al,0x87
  44c456:	repnz adc bl,BYTE PTR [eax-0x6d]
  44c45a:	jo     0x44c497
  44c45c:	mov    edx,0xb0727727
  44c461:	inc    ebx
  44c462:	loope  0x44c40b
  44c464:	gs into 
  44c466:	and    ebp,DWORD PTR [edx]
  44c468:	aam    0x1a
  44c46a:	sub    DWORD PTR [edi],0x721f46e3
  44c470:	test   DWORD PTR [esi-0x2e],eax
  44c473:	in     eax,0xbe
  44c475:	popa   
  44c476:	out    0xd6,eax
  44c478:	pop    eax
  44c479:	cmp    ecx,ebx
  44c47b:	cmp    bl,BYTE PTR [esi+0x3f]
  44c47e:	cs xchg ecx,eax
  44c480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c481:	sbb    bl,bl
  44c483:	ins    BYTE PTR es:[edi],dx
  44c484:	(bad)  
  44c485:	out    dx,eax
  44c486:	adc    esi,DWORD PTR [eax+0x21101d61]
  44c48c:	sbb    BYTE PTR [ecx],ch
  44c48e:	test   DWORD PTR [ecx+ebx*4-0x6b],ebx
  44c492:	xchg   DWORD PTR [eax],edi
  44c494:	adc    al,0x88
  44c496:	div    DWORD PTR [ebx-0x68]
  44c499:	jns    0x44c50b
  44c49b:	xchg   esi,eax
  44c49c:	jecxz  0x44c500
  44c49e:	mov    esp,0x5d364f5f
  44c4a3:	jp     0x44c50a
  44c4a5:	loop   0x44c445
  44c4a7:	arpl   WORD PTR [eax],dx
  44c4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c4aa:	fld    TBYTE PTR [esi]
  44c4ac:	rcl    BYTE PTR [eax+0x56b77f2e],cl
  44c4b2:	(bad)  
  44c4b3:	cmp    esi,DWORD PTR [esi+0x54]
  44c4b6:	(bad)  
  44c4ba:	pop    edx
  44c4bb:	xor    DWORD PTR [ecx+0x199c30ef],eax
  44c4c1:	adc    DWORD PTR [edx],0x51
  44c4c4:	jmp    0x3250cc9c
  44c4c9:	popf   
  44c4ca:	cmp    ebx,ebx
  44c4cc:	ds ret 
  44c4ce:	iret   
  44c4cf:	mov    ebp,0x16d103b
  44c4d4:	into   
  44c4d5:	pop    es
  44c4d6:	cli    
  44c4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c4d8:	xlat   BYTE PTR ds:[ebx]
  44c4d9:	xchg   esp,eax
  44c4da:	hlt    
  44c4db:	mov    cl,0x3c
  44c4dd:	int3   
  44c4de:	test   eax,0xc8977af3
  44c4e3:	stos   DWORD PTR es:[edi],eax
  44c4e4:	lods   al,BYTE PTR ds:[si]
  44c4e6:	xchg   ebp,eax
  44c4e7:	inc    eax
  44c4e8:	sbb    eax,0xf478f97
  44c4ed:	mov    cl,0x51
  44c4ef:	sub    edx,edx
  44c4f1:	cwde   
  44c4f2:	xchg   ebx,eax
  44c4f3:	mov    edx,0x8cda1e47
  44c4f8:	seto   bl
  44c4fb:	or     al,0x40
  44c4fd:	jae    0x44c4bf
  44c4ff:	adc    ebx,ecx
  44c501:	repz cmp edi,DWORD PTR [edx]
  44c504:	test   eax,0x4b2b403
  44c509:	repnz xchg ch,bh
  44c50c:	aad    0xd7
  44c50e:	push   es
  44c50f:	cli    
  44c510:	ins    BYTE PTR es:[edi],dx
  44c511:	daa    
  44c512:	pusha  
  44c513:	out    dx,eax
  44c514:	icebp  
  44c515:	dec    ecx
  44c516:	leave  
  44c517:	out    dx,eax
  44c518:	jns    0x44c4d5
  44c51a:	or     BYTE PTR [ebx],al
  44c51c:	pop    ebp
  44c51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c51e:	je     0x44c4dc
  44c520:	or     BYTE PTR [edx+0x62],cl
  44c523:	cmc    
  44c524:	shr    eax,1
  44c526:	dec    ebx
  44c527:	mov    ebx,0x72a6cd9
  44c52c:	daa    
  44c52d:	inc    ebx
  44c52e:	mov    WORD PTR [edx-0x53],?
  44c531:	gs mov cl,0xd9
  44c534:	das    
  44c535:	cwde   
  44c536:	cmp    DWORD PTR [edi-0x448c889a],esi
  44c53c:	ret    0xfd77
  44c53f:	mov    dh,0x3c
  44c541:	jl     0x44c4e2
  44c543:	mov    ecx,0x320c96ff
  44c548:	pop    edx
  44c549:	or     al,0x51
  44c54b:	or     al,0x85
  44c54d:	inc    edx
  44c54e:	jno    0x44c5b2
  44c550:	cmp    ebx,DWORD PTR [edi+eax*1+0x63]
  44c554:	add    eax,0xacbef727
  44c559:	dec    ebx
  44c55a:	stos   BYTE PTR es:[edi],al
  44c55b:	and    BYTE PTR [ebp+ecx*4-0x2fc674b5],al
  44c562:	jp     0x44c4ef
  44c564:	and    dh,BYTE PTR [ecx-0x67]
  44c567:	add    dl,BYTE PTR [ebx]
  44c569:	inc    eax
  44c56a:	xor    eax,0x9b6a66fb
  44c56f:	call   0x157332a
  44c574:	mov    al,0x6f
  44c576:	int3   
  44c577:	or     DWORD PTR [edx],ebx
  44c579:	sbb    eax,0xffafe557
  44c57e:	je     0x44c5ba
  44c580:	leave  
  44c581:	js     0x44c583
  44c583:	cli    
  44c584:	outs   dx,BYTE PTR ds:[esi]
  44c585:	aad    0x63
  44c587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c588:	cli    
  44c589:	dec    ebp
  44c58a:	mov    ch,0xa0
  44c58c:	push   esi
  44c58d:	popa   
  44c58e:	lods   al,BYTE PTR ds:[esi]
  44c58f:	stc    
  44c590:	fld    TBYTE PTR [ebx]
  44c592:	jp     0x44c52e
  44c594:	cmp    BYTE PTR [ecx+ebx*4+0x6b9a6a65],al
  44c59b:	neg    ebp
  44c59d:	das    
  44c59e:	inc    esi
  44c59f:	add    al,0xf4
  44c5a1:	xor    al,0xb8
  44c5a3:	bound  edi,QWORD PTR [ecx-0x52e02591]
  44c5a9:	call   0x44ae12b5
  44c5ae:	jge    0x44c56f
  44c5b0:	adc    cl,BYTE PTR [ebx+eax*8]
  44c5b3:	jl     0x44c61f
  44c5b5:	ja     0x44c5ef
  44c5b7:	push   edi
  44c5b8:	imul   ebx,ebp,0x564791c4
  44c5be:	test   DWORD PTR [eax],esi
  44c5c0:	in     al,0xc7
  44c5c2:	dec    ebx
  44c5c3:	push   edx
  44c5c4:	test   DWORD PTR [eax-0x3d],ecx
  44c5c7:	mov    esp,0x321e94e
  44c5cc:	sar    BYTE PTR [ebp-0x31],0x12
  44c5d0:	adc    cl,dl
  44c5d2:	mov    DWORD PTR es:[ecx-0x7aac0477],ebx
  44c5d9:	mov    al,ds:0x7e5e0dbb
  44c5de:	(bad)  
  44c5df:	pop    ss
  44c5e0:	dec    esp
  44c5e1:	mov    bl,0x16
  44c5e3:	mov    dl,0x99
  44c5e5:	mov    ebx,0x83660e69
  44c5ea:	(bad)  
  44c5eb:	cli    
  44c5ec:	cmp    ebp,ebx
  44c5ee:	and    al,BYTE PTR [esi-0x28]
  44c5f1:	frstor [esi]
  44c5f3:	les    ecx,FWORD PTR ds:0x4c67b652
  44c5f9:	jne    0x44c63c
  44c5fb:	shl    edi,0x8c
  44c5fe:	sbb    eax,0xbddba022
  44c603:	mov    ebp,0xbc98d457
  44c608:	sub    BYTE PTR [esi-0x15],bl
  44c60b:	mov    ch,0xf
  44c60d:	push   esi
  44c60e:	fmul   DWORD PTR [esi+eax*1+0x343f8d5d]
  44c615:	add    al,cl
  44c617:	mov    ah,0x8b
  44c619:	popa   
  44c61a:	fmul   QWORD PTR [ecx]
  44c61c:	dec    esi
  44c61d:	loopne 0x44c612
  44c61f:	in     eax,dx
  44c620:	lods   eax,DWORD PTR ds:[esi]
  44c621:	mov    ds:0xfb14a7d3,al
  44c626:	mov    ebp,esp
  44c628:	cli    
  44c629:	(bad)  
  44c62a:	ins    DWORD PTR es:[edi],dx
  44c62b:	jae    0x44c624
  44c62d:	pop    ecx
  44c62e:	jmp    0x45e0:0xca8cd0e7
  44c635:	mov    BYTE PTR [ebp-0x1ab9e2c1],0xad
  44c63c:	push   esi
  44c63d:	mov    bl,0xa
  44c63f:	or     DWORD PTR [eax+0x40c6dcec],edi
  44c645:	mov    eax,ds:0x1e8cfbee
  44c64a:	repz xchg ecx,eax
  44c64c:	repz jnp 0x44c603
  44c64f:	hlt    
  44c650:	popa   
  44c651:	mov    ebp,0x491a3d2c
  44c656:	imul   ecx,DWORD PTR [ebx+eax*4-0x63b99cf4],0x4f
  44c65e:	sbb    ecx,DWORD PTR [ecx-0x2b9a68b8]
  44c664:	dec    esp
  44c665:	test   eax,0x1bec9e4a
  44c66a:	sti    
  44c66b:	jmp    0xa00148f2
  44c670:	sub    ch,BYTE PTR [ecx+0x26e2b8b1]
  44c676:	sbb    al,0x94
  44c678:	sbb    al,0xd4
  44c67a:	cwde   
  44c67b:	dec    ebx
  44c67c:	daa    
  44c67d:	cmp    BYTE PTR [edi+0x18],bh
  44c680:	fsub   DWORD PTR [esi*4-0x23917276]
  44c687:	xlat   BYTE PTR ds:[ebx]
  44c688:	cmp    DWORD PTR [esi-0x79],esp
  44c68b:	jae    0x44c6e4
  44c68d:	mov    ds:0x576bbc0d,eax
  44c692:	jno    0x44c651
  44c694:	adc    al,0x63
  44c696:	icebp  
  44c697:	aaa    
  44c698:	xlat   BYTE PTR ds:[ebx]
  44c699:	iret   
  44c69a:	mov    al,ds:0xceea2403
  44c69f:	inc    ebx
  44c6a0:	xchg   ecx,eax
  44c6a1:	in     al,0x7d
  44c6a3:	fiadd  DWORD PTR [edx+0x27]
  44c6a6:	in     eax,dx
  44c6a7:	dec    eax
  44c6a8:	hlt    
  44c6a9:	out    dx,eax
  44c6aa:	and    al,ch
  44c6ac:	pop    edi
  44c6ad:	loop   0x44c693
  44c6af:	sub    eax,esp
  44c6b1:	cmc    
  44c6b2:	scas   al,BYTE PTR es:[edi]
  44c6b3:	pop    es
  44c6b4:	push   ss
  44c6b5:	ss (bad) 
  44c6b7:	ins    BYTE PTR es:[edi],dx
  44c6b8:	sub    BYTE PTR [esi],dh
  44c6ba:	faddp  st(3),st
  44c6bc:	push   ss
  44c6bd:	mov    ecx,0x5d2f081f
  44c6c2:	add    BYTE PTR [ecx-0x3b],0x1e
  44c6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c6c7:	mov    eax,DWORD PTR [eax]
  44c6c9:	sub    BYTE PTR [edi-0x7],dl
  44c6cc:	loopne 0x44c6e5
  44c6ce:	in     al,dx
  44c6cf:	cld    
  44c6d0:	jmp    0xdfc9:0x9082b637
  44c6d7:	hlt    
  44c6d8:	pushf  
  44c6d9:	and    ebp,DWORD PTR [eax+0x655129ac]
  44c6df:	xchg   DWORD PTR fs:[ecx-0x76],ebp
  44c6e3:	sub    eax,0x256833f7
  44c6e8:	mov    ah,0xab
  44c6ea:	ficomp DWORD PTR [ebx+edx*2]
  44c6ed:	das    
  44c6ee:	shl    DWORD PTR [eax+eax*2],cl
  44c6f1:	and    BYTE PTR [ebp-0x5964fa46],dh
  44c6f7:	cmp    eax,0x72e76000
  44c6fc:	push   0x2a
  44c6fe:	fbld   TBYTE PTR gs:[esp+ebx*1+0xa]
  44c703:	mov    esi,0x812d107f
  44c708:	jno    0x44c693
  44c70a:	jmp    0x4249:0xf1ab2235
  44c711:	inc    esi
  44c712:	mov    WORD PTR [edi-0x2],gs
  44c715:	ss fmulp st(6),st
  44c718:	in     al,0xff
  44c71a:	sub    BYTE PTR [esi],bh
  44c71c:	mov    ch,0x5c
  44c71e:	aas    
  44c71f:	cwde   
  44c720:	repz dec esi
  44c722:	(bad)  
  44c723:	mov    ch,0xef
  44c725:	rcl    BYTE PTR [esi+0x47],1
  44c728:	jns    0x44c730
  44c72a:	scas   al,BYTE PTR es:[edi]
  44c72b:	test   BYTE PTR [ebx],bh
  44c72d:	in     eax,dx
  44c72e:	lea    edx,ds:0x31bace1c
  44c734:	cmp    esi,DWORD PTR [edi+0x6bb2bbdc]
  44c73a:	sbb    bl,BYTE PTR [edx+0x62]
  44c73d:	mov    dh,0x96
  44c73f:	push   cs
  44c740:	sub    al,0x79
  44c742:	mov    ch,0xf
  44c744:	(bad)  
  44c745:	jns    0x44c6ff
  44c747:	or     ecx,DWORD PTR [edx-0x36]
  44c74a:	dec    ebx
  44c74b:	push   ecx
  44c74c:	jle    0x44c735
  44c74e:	dec    ebp
  44c74f:	xor    eax,0xd9a6e2c6
  44c754:	(bad)  
  44c755:	cdq    
  44c756:	add    eax,0x6b0eb720
  44c75b:	jg     0x44c71b
  44c75d:	retf   
  44c75e:	cmp    bh,dh
  44c760:	add    DWORD PTR [ebx-0x782ce238],eax
  44c766:	cmc    
  44c767:	and    DWORD PTR [edi+0x540eb430],0xc2b7d714
  44c771:	mov    ah,0x20
  44c773:	popa   
  44c774:	fwait
  44c775:	pop    edi
  44c776:	loop   0x44c703
  44c778:	push   esi
  44c779:	cmc    
  44c77a:	jb     0x44c7a2
  44c77c:	jae    0x44c7ee
  44c77e:	outs   dx,BYTE PTR ds:[esi]
  44c77f:	sub    ebp,DWORD PTR ss:[ecx+0x71b9f721]
  44c786:	nop
  44c787:	sahf   
  44c788:	popa   
  44c789:	in     eax,dx
  44c78a:	or     al,0x94
  44c78c:	shr    BYTE PTR [edx-0x36631a0d],cl
  44c792:	push   ecx
  44c793:	cmp    eax,0x170141a1
  44c798:	rcr    BYTE PTR [ebx-0x55],1
  44c79b:	scas   eax,DWORD PTR es:[edi]
  44c79c:	test   BYTE PTR [ebx-0x35cebefe],al
  44c7a2:	cmp    bh,BYTE PTR [eax]
  44c7a4:	out    dx,al
  44c7a5:	arpl   WORD PTR [edi-0x4ba91701],si
  44c7ab:	dec    esp
  44c7ac:	mov    WORD PTR [esi-0x77],?
  44c7af:	fnsave ds:0x5f8aea3e
  44c7b5:	cdq    
  44c7b6:	xchg   BYTE PTR [esi+0x5c5bf93c],dl
  44c7bc:	das    
  44c7bd:	out    dx,eax
  44c7be:	out    0x6c,al
  44c7c0:	lods   al,BYTE PTR ds:[esi]
  44c7c1:	ja     0x44c7c0
  44c7c3:	loopne 0x44c7bb
  44c7c5:	lods   al,BYTE PTR ds:[esi]
  44c7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c7c7:	out    dx,eax
  44c7c8:	xor    ch,bl
  44c7ca:	mov    bl,0x58
  44c7cc:	jb     0x44c7b8
  44c7ce:	pop    edx
  44c7cf:	pusha  
  44c7d0:	imul   eax,DWORD PTR [edi],0xffffffc7
  44c7d3:	jnp    0x44c75c
  44c7d5:	mov    ecx,0x181d2a31
  44c7da:	retf   0xd02
  44c7dd:	push   ebx
  44c7de:	neg    BYTE PTR [ecx-0xeeaafa5]
  44c7e4:	std    
  44c7e5:	mov    WORD PTR [eax],cs
  44c7e7:	mov    ds:0xa7e8235d,eax
  44c7ec:	inc    ebx
  44c7ed:	retf   0x21a2
  44c7f0:	xchg   esp,eax
  44c7f1:	pop    ebx
  44c7f2:	sbb    ch,BYTE PTR [edx]
  44c7f4:	dec    edi
  44c7f5:	aam    0xdc
  44c7f7:	or     al,0x38
  44c7f9:	ins    DWORD PTR es:[edi],dx
  44c7fa:	inc    ecx
  44c7fb:	push   eax
  44c7fc:	inc    ebp
  44c7fd:	out    dx,eax
  44c7fe:	xchg   DWORD PTR [eax],esp
  44c800:	add    ecx,esi
  44c802:	xor    esp,esp
  44c804:	xchg   ebx,eax
  44c805:	out    dx,al
  44c806:	jns    0x44c869
  44c808:	fst    DWORD PTR [ecx]
  44c80a:	dec    esi
  44c80b:	pop    esp
  44c80c:	ficomp DWORD PTR ds:[edx+0x3a]
  44c810:	stos   BYTE PTR es:[edi],al
  44c811:	jmp    0xb69:0xee8cf0dd
  44c818:	mov    eax,0x81a2701e
  44c81d:	scas   eax,DWORD PTR es:[edi]
  44c81e:	jns    0x44c89c
  44c820:	shl    bl,1
  44c822:	cwde   
  44c823:	mov    es,WORD PTR [edx]
  44c825:	scas   eax,DWORD PTR es:[edi]
  44c826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c827:	mov    ebp,DWORD PTR [edi+ebp*4]
  44c82a:	adc    ebx,DWORD PTR ds:0x56981e9
  44c830:	jmp    0xdb3b32eb
  44c835:	mov    bl,0x25
  44c837:	cdq    
  44c838:	lock fld QWORD PTR [esi-0x29]
  44c83c:	pop    ebx
  44c83d:	add    bh,BYTE PTR [esi]
  44c83f:	test   al,0x3e
  44c841:	pop    esi
  44c842:	add    DWORD PTR [ecx-0x3d],edx
  44c845:	es stc 
  44c847:	icebp  
  44c848:	sub    bl,BYTE PTR [edx]
  44c84a:	clc    
  44c84b:	jb     0x44c7e8
  44c84d:	xchg   edx,eax
  44c84e:	ret    0x527
  44c851:	arpl   WORD PTR [esi],ax
  44c853:	push   ebp
  44c854:	jbe    0x44c8b2
  44c856:	(bad)  
  44c857:	xor    BYTE PTR [esi-0x18abcb5b],ch
  44c85d:	sbb    BYTE PTR [ebx+0x19895c0e],dh
  44c863:	jg     0x44c86b
  44c865:	adc    eax,0x74050ec1
  44c86a:	add    al,0x25
  44c86c:	leave  
  44c86d:	and    eax,0x4ac55566
  44c872:	hlt    
  44c873:	call   eax
  44c875:	xor    DWORD PTR [edx],esi
  44c877:	push   0xffffffcd
  44c879:	add    al,0xa6
  44c87b:	sub    eax,0x6f9bd7ca
  44c880:	jl     0x44c8fa
  44c882:	call   0x29ad82e4
  44c887:	fisttp DWORD PTR [ecx]
  44c889:	push   cs
  44c88a:	out    0xa6,eax
  44c88c:	shl    DWORD PTR [ebp-0x1d],1
  44c88f:	fimul  DWORD PTR [ecx+0x8]
  44c892:	pushf  
  44c893:	stc    
  44c894:	mov    esp,0x202aa418
  44c899:	fdiv   st,st(7)
  44c89b:	xchg   ebx,eax
  44c89c:	pop    esi
  44c89d:	push   esp
  44c89e:	pushf  
  44c89f:	xor    al,0x7b
  44c8a1:	sti    
  44c8a2:	or     cl,bh
  44c8a4:	es out dx,al
  44c8a6:	and    DWORD PTR [edx],ebx
  44c8a8:	sbb    ah,al
  44c8aa:	cmp    DWORD PTR ds:0x86ebeabf,0xb
  44c8b1:	fyl2xp1 
  44c8b3:	pop    eax
  44c8b4:	jle    0x44c8a4
  44c8b6:	dec    ecx
  44c8b7:	adc    esi,DWORD PTR ds:0x39a2e674
  44c8bd:	retf   0xa221
  44c8c0:	cmp    dh,ch
  44c8c2:	iret   
  44c8c3:	cmp    eax,0x593bf7b8
  44c8c8:	into   
  44c8c9:	add    esp,esp
  44c8cb:	jns    0x44c8ab
  44c8cd:	adc    eax,0x83df1b3b
  44c8d2:	adc    al,0x37
  44c8d4:	pop    esp
  44c8d5:	call   0xec8f:0xece9516a
  44c8dc:	adc    ebp,edx
  44c8de:	jno    0x44c8ef
  44c8e0:	fwait
  44c8e1:	(bad)  
  44c8e2:	bound  ebx,QWORD PTR [esi+0x47260507]
  44c8e8:	sub    bh,BYTE PTR [edx+ebp*2-0x2410f62d]
  44c8ef:	into   
  44c8f0:	or     esi,DWORD PTR [ecx]
  44c8f2:	call   0x1c0a2bb1
  44c8f7:	(bad)  
  44c8f9:	jne    0x44c952
  44c8fb:	xchg   BYTE PTR [eax-0x523f29f5],dh
  44c901:	mov    WORD PTR [ebp+0x4362be3f],ss
  44c907:	loop   0x44c954
  44c909:	(bad)  
  44c90a:	xor    al,BYTE PTR [edx+0x7a]
  44c90d:	out    dx,eax
  44c90e:	pop    edx
  44c90f:	in     eax,0x8b
  44c911:	stos   BYTE PTR es:[edi],al
  44c912:	pop    esp
  44c913:	dec    esi
  44c914:	mov    bh,0x84
  44c916:	pop    esi
  44c917:	int    0x2f
  44c919:	jp     0x44c904
  44c91b:	add    DWORD PTR [ebp+0x74],ebp
  44c91e:	jecxz  0x44c96d
  44c920:	imul   ebx,DWORD PTR [eax+0x33ab9265],0x9090fa6e
  44c92a:	ror    BYTE PTR [edx+0x8],cl
  44c92d:	pushf  
  44c92e:	and    ebp,DWORD PTR [edx+0x32]
  44c931:	xor    BYTE PTR [ecx],bl
  44c933:	sahf   
  44c934:	and    ebp,DWORD PTR [ecx]
  44c936:	pop    eax
  44c937:	inc    esi
  44c938:	jmp    0x44c99c
  44c93a:	mov    dl,0x16
  44c93c:	(bad)  
  44c93e:	xchg   edx,eax
  44c93f:	mov    edi,0x6863f2e6
  44c944:	fcmovne st,st(3)
  44c946:	pop    ds
  44c947:	xchg   ecx,eax
  44c948:	adc    eax,0xa3ba733
  44c94d:	push   cs
  44c94e:	addr16 jp 0x44c918
  44c951:	or     eax,0x8e943be8
  44c956:	jae    0x44c9bc
  44c958:	in     al,0x3f
  44c95a:	(bad)  
  44c95c:	jmp    0x1aeef84f
  44c961:	fnstsw WORD PTR ds:0xb84ccbed
  44c967:	xor    al,0x2e
  44c969:	icebp  
  44c96a:	xchg   ecx,eax
  44c96b:	push   edi
  44c96c:	(bad)  
  44c96d:	cld    
  44c96e:	idiv   BYTE PTR [ebp-0x6420db9]
  44c974:	inc    eax
  44c975:	or     al,0xa3
  44c977:	cmp    DWORD PTR [edi-0x6f2f6b44],ecx
  44c97d:	pop    es
  44c97e:	inc    ebx
  44c97f:	sbb    ah,BYTE PTR [eax*1+0xd3c73e6]
  44c986:	sbb    edx,DWORD PTR [edx]
  44c988:	stos   DWORD PTR es:[edi],eax
  44c989:	in     eax,dx
  44c98a:	clc    
  44c98b:	adc    eax,0xae1b6657
  44c990:	pop    ebx
  44c991:	and    edx,ebp
  44c993:	dec    esp
  44c994:	ret    0x7a8
  44c997:	mov    esi,0x56ae5218
  44c99c:	in     eax,dx
  44c99d:	cmp    DWORD PTR [edi],esp
  44c99f:	and    edx,DWORD PTR [ebx+0x58d2a901]
  44c9a5:	cs ds stos BYTE PTR es:[edi],al
  44c9a8:	test   al,0x84
  44c9aa:	xor    al,0x88
  44c9ac:	imul   ebx,ecx,0xea92d0c8
  44c9b2:	xlat   BYTE PTR ds:[ebx]
  44c9b3:	imul   edi,ebp,0xa13209f9
  44c9b9:	sbb    eax,DWORD PTR [bp+di-0x3a]
  44c9bd:	cmp    al,0xfe
  44c9bf:	bound  eax,QWORD PTR [ebx-0x3a]
  44c9c2:	fwait
  44c9c3:	pop    edi
  44c9c4:	mov    ebp,0xf0eb2ddf
  44c9c9:	jae    0x44c975
  44c9cb:	or     esp,esp
  44c9cd:	cwde   
  44c9ce:	push   ebp
  44c9cf:	or     al,0xa2
  44c9d1:	push   ss
  44c9d2:	aaa    
  44c9d3:	lock fs push edi
  44c9d6:	leave  
  44c9d7:	je     0x44c98a
  44c9d9:	aaa    
  44c9da:	dec    ebp
  44c9db:	jmp    0x44ca42
  44c9dd:	xchg   edx,eax
  44c9de:	ret    0x81fd
  44c9e1:	mov    dl,0x84
  44c9e3:	sbb    esi,DWORD PTR [edx-0x49]
  44c9e6:	popf   
  44c9e7:	cld    
  44c9e8:	scas   al,BYTE PTR es:[edi]
  44c9e9:	adc    BYTE PTR [edx+0x36],bl
  44c9ec:	push   esi
  44c9ed:	mov    ah,cl
  44c9ef:	aam    0x13
  44c9f1:	xor    ecx,DWORD PTR [ecx+eax*1-0x36f1b8da]
  44c9f8:	or     eax,0x1675ae97
  44c9fd:	pop    edx
  44c9fe:	dec    BYTE PTR ds:0x8c489f89
  44ca04:	les    ebx,FWORD PTR [esi-0x50]
  44ca07:	dec    ecx
  44ca08:	cmp    esp,DWORD PTR [ecx]
  44ca0a:	test   al,0xfb
  44ca0c:	imul   ecx,esp,0xffffffb2
  44ca0f:	mov    ds:0xde6e1bb5,eax
  44ca14:	(bad)  
  44ca15:	and    al,0x1b
  44ca17:	mov    ecx,0x8f37f263
  44ca1c:	stc    
  44ca1d:	fdiv   st(6),st
  44ca1f:	(bad)  
  44ca20:	pop    ss
  44ca21:	clc    
  44ca22:	ficom  WORD PTR [ebx]
  44ca24:	xchg   edx,eax
  44ca25:	scas   eax,DWORD PTR es:[edi]
  44ca26:	aas    
  44ca27:	xchg   esp,eax
  44ca28:	imul   edx,esi,0x180c6753
  44ca2e:	fistp  QWORD PTR ds:0xc5f46cea
  44ca34:	lahf   
  44ca35:	arpl   bp,dx
  44ca37:	sbb    BYTE PTR [esi],bl
  44ca39:	jecxz  0x44caa4
  44ca3b:	sub    al,0x19
  44ca3d:	popf   
  44ca3e:	sbb    DWORD PTR [esi+0x37],edx
  44ca41:	mov    ds:0xc05b50bb,al
  44ca46:	test   DWORD PTR [esi+eax*1+0xb],0x828eea44
  44ca4e:	push   ds
  44ca4f:	mov    WORD PTR [ebx+0x3a096e2e],cs
  44ca55:	retf   
  44ca56:	xor    dl,BYTE PTR [eax+0x4561b7e0]
  44ca5c:	je     0x44cab0
  44ca5e:	mov    bh,0xb9
  44ca60:	mov    eax,0x3a3b7978
  44ca65:	inc    ecx
  44ca66:	mov    esi,DWORD PTR [edx+0x24]
  44ca69:	ficom  DWORD PTR [esi+0x64]
  44ca6c:	ret    
  44ca6d:	jbe    0x44ca68
  44ca6f:	mov    eax,0xc604263b
  44ca74:	mov    al,0x87
  44ca76:	jnp    0x44cac5
  44ca78:	xor    DWORD PTR [esi],esp
  44ca7a:	pop    es
  44ca7b:	aas    
  44ca7c:	add    BYTE PTR [ecx+0x3680a18b],al
  44ca82:	shr    BYTE PTR [edx-0x3af1b13],cl
  44ca88:	fistp  WORD PTR [eax]
  44ca8a:	call   0xd685:0xb07eacd6
  44ca91:	xor    DWORD PTR ds:0x57315021,0xbf214a4c
  44ca9b:	inc    esp
  44ca9c:	xchg   ebx,eax
  44ca9d:	push   ebp
  44ca9e:	mov    ebp,0x567cd1c
  44caa3:	into   
  44caa4:	xchg   ebx,ebx
  44caa6:	loopne 0x44ca4a
  44caa8:	xchg   BYTE PTR [ebx+edi*4],bl
  44caab:	mov    ecx,0x754d1100
  44cab0:	out    0xf2,eax
  44cab2:	dec    DWORD PTR [ebx-0x30]
  44cab5:	sub    al,0x89
  44cab7:	sub    al,BYTE PTR [esp+ebx*4-0xc]
  44cabb:	xchg   ecx,eax
  44cabc:	(bad)  
  44cabd:	push   edi
  44cabe:	test   BYTE PTR [edx],dl
  44cac0:	mov    edx,DWORD PTR [edi+0x1e]
  44cac3:	mov    ch,0x65
  44cac5:	fmul   DWORD PTR [ebp-0x6c18b964]
  44cacb:	into   
  44cacc:	in     al,dx
  44cacd:	(bad)
  44cad0:	mov    eax,0xbea5b1c8
  44cad5:	push   ss
  44cad6:	js     0x44cb1f
  44cad8:	mov    dl,0xfd
  44cada:	fdivr  DWORD PTR [edi]
  44cadc:	jb     0x44cacd
  44cade:	xor    DWORD PTR [ecx-0x766add45],0x9f447514
  44cae8:	sub    al,0x8e
  44caea:	jl     0x44cb0d
  44caec:	jle    0x44cac6
  44caee:	fldcw  WORD PTR [edi]
  44caf0:	lahf   
  44caf1:	mov    cl,0x3b
  44caf3:	cmp    bl,ch
  44caf5:	pop    ss
  44caf6:	shl    dl,cl
  44caf8:	pop    eax
  44caf9:	out    dx,eax
  44cafa:	imul   esp,DWORD PTR [edi],0x56
  44cafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cafe:	scas   eax,DWORD PTR es:[edi]
  44caff:	inc    esi
  44cb00:	sbb    edi,esi
  44cb02:	dec    ebx
  44cb03:	imul   ecx,DWORD PTR [esi+0x46d6ba48],0xffffffd7
  44cb0a:	push   ds
  44cb0b:	enter  0x9be0,0x7b
  44cb0f:	push   0x133dd65b
  44cb14:	jbe    0x44cb91
  44cb16:	jae    0x44cb0f
  44cb18:	in     eax,dx
  44cb19:	aam    0xea
  44cb1b:	mov    cl,bh
  44cb1d:	jns    0x44cb60
  44cb1f:	shl    BYTE PTR [ecx-0xf753f69],0xc7
  44cb26:	jno    0x44cb60
  44cb28:	lods   al,BYTE PTR ds:[esi]
  44cb29:	adc    eax,0x5e4de757
  44cb2e:	mov    eax,ds:0x890301bd
  44cb33:	ins    BYTE PTR es:[edi],dx
  44cb34:	jp     0x44cba7
  44cb36:	push   ebp
  44cb37:	test   BYTE PTR [ecx],0x76
  44cb3a:	pop    esp
  44cb3b:	or     bl,BYTE PTR [esi-0x23]
  44cb3e:	xor    cl,BYTE PTR [eax]
  44cb40:	add    dh,BYTE PTR [esi-0x31abd84]
  44cb46:	sub    al,0x94
  44cb48:	sbb    al,0x80
  44cb4a:	adc    eax,0xf3782d71
  44cb4f:	outs   dx,DWORD PTR ds:[esi]
  44cb50:	das    
  44cb51:	cmp    bl,bh
  44cb53:	in     eax,0xf5
  44cb55:	push   ds
  44cb56:	(bad)  
  44cb58:	stos   DWORD PTR es:[edi],eax
  44cb59:	jae    0x44cbab
  44cb5b:	leave  
  44cb5c:	adc    DWORD PTR [ebp+0x76253eb1],esi
  44cb62:	adc    esp,DWORD PTR [edi-0x4]
  44cb65:	dec    esi
  44cb66:	or     ah,BYTE PTR [ebp-0x26]
  44cb69:	jecxz  0x44cbb2
  44cb6b:	pop    eax
  44cb6c:	outs   dx,BYTE PTR ds:[esi]
  44cb6d:	call   0x9915b23a
  44cb72:	fwait
  44cb73:	mov    db3,eax
  44cb76:	mov    ah,0x6a
  44cb78:	call   0x34c5c7bc
  44cb7d:	adc    DWORD PTR [edi+0x312c50ab],0xffffffcf
  44cb84:	(bad)  
  44cb85:	(bad)  
  44cb86:	mov    dh,0x37
  44cb88:	dec    esp
  44cb89:	lds    eax,FWORD PTR [esi-0x45d93ae7]
  44cb8f:	mov    ch,0x12
  44cb91:	(bad)  
  44cb92:	fld    DWORD PTR [edi-0x70]
  44cb95:	jb     0x44cbb9
  44cb97:	inc    eax
  44cb98:	xor    al,0x3b
  44cb9a:	xchg   edx,eax
  44cb9b:	call   0x86d4:0x3de945ee
  44cba2:	push   esi
  44cba3:	cmp    bl,ch
  44cba5:	mov    al,ds:0x7e7b27f
  44cbaa:	fiadd  WORD PTR [ecx-0x10]
  44cbad:	or     al,0x75
  44cbaf:	fsubr  DWORD PTR [edx-0x65]
  44cbb2:	xchg   esi,eax
  44cbb3:	(bad)  
  44cbb4:	jo     0x44cc2c
  44cbb6:	inc    edx
  44cbb7:	inc    ebx
  44cbb8:	fst    QWORD PTR [edx+0x53]
  44cbbb:	mov    ebx,0x6725c95c
  44cbc0:	jbe    0x44cc15
  44cbc2:	mov    cl,BYTE PTR [ebp-0x4d]
  44cbc5:	inc    eax
  44cbc6:	inc    eax
  44cbc7:	repnz add BYTE PTR [ebp-0x58e57411],dl
  44cbce:	mov    ah,0x1
  44cbd0:	or     ebp,esi
  44cbd2:	repz mov al,0x8a
  44cbd5:	mov    ecx,0xd7730226
  44cbda:	jnp    0x44cc53
  44cbdc:	and    bl,BYTE PTR [ebp+ecx*4+0xb43f136]
  44cbe3:	call   0x9e84:0x13638714
  44cbea:	push   ebx
  44cbec:	(bad)  
  44cbed:	or     cl,BYTE PTR [ebp-0x5d]
  44cbf0:	sbb    eax,0x27c01ec7
  44cbf5:	jno    0x44cc19
  44cbf7:	mov    WORD PTR [ebx+0x19],?
  44cbfa:	pop    esp
  44cbfb:	pop    ecx
  44cbfc:	retf   0x3eb8
  44cbff:	adc    al,0xc3
  44cc01:	outs   dx,DWORD PTR ds:[esi]
  44cc02:	or     esi,DWORD PTR [edi]
  44cc04:	push   0x4d
  44cc06:	daa    
  44cc07:	rcr    DWORD PTR [eax-0x7dad3155],1
  44cc0d:	cmp    al,0xb1
  44cc0f:	mov    eax,0x4e938e69
  44cc14:	mov    ch,0x81
  44cc16:	loop   0x44cbdb
  44cc18:	scas   al,BYTE PTR es:[edi]
  44cc19:	out    0xdf,al
  44cc1b:	test   eax,0x2039abac
  44cc20:	and    DWORD PTR [esi],edi
  44cc22:	aas    
  44cc23:	mov    esi,DWORD PTR [esp+esi*1+0x41]
  44cc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cc28:	in     eax,0xed
  44cc2a:	mov    bh,0xdf
  44cc2c:	sub    ebp,DWORD PTR [ebx]
  44cc2e:	or     ebx,DWORD PTR [ebx+0x53]
  44cc31:	(bad)  
  44cc32:	jmp    0xf3ddfb6a
  44cc37:	sbb    BYTE PTR [eax],dl
  44cc39:	icebp  
  44cc3a:	mov    bh,bl
  44cc3c:	pop    ecx
  44cc3d:	jae    0x44cc5d
  44cc3f:	adc    DWORD PTR [ecx+edx*2-0x45],esp
  44cc43:	cdq    
  44cc44:	into   
  44cc45:	pop    edx
  44cc46:	int    0x7
  44cc48:	jae    0x44cc06
  44cc4a:	xchg   ebx,eax
  44cc4b:	jno    0x44cc77
  44cc4d:	mov    bh,0xaf
  44cc4f:	jae    0x44cc99
  44cc51:	push   ds
  44cc52:	add    bl,BYTE PTR ds:[ebx]
  44cc55:	mov    cl,0x8b
  44cc57:	add    BYTE PTR [ebx+0x39],dl
  44cc5a:	fdiv   DWORD PTR [edx]
  44cc5c:	push   esi
  44cc5d:	lock sub al,0xf
  44cc60:	inc    ebx
  44cc61:	test   al,0x75
  44cc63:	or     DWORD PTR [ebp-0x32c99c3],esp
  44cc69:	int    0x84
  44cc6b:	mov    ds:0x5f7d92b9,eax
  44cc70:	popf   
  44cc71:	mov    ds:0xadc1d11d,al
  44cc76:	or     dl,bh
  44cc78:	and    ecx,DWORD PTR ds:0x4a1ed313
  44cc7e:	stos   BYTE PTR es:[edi],al
  44cc7f:	pop    edi
  44cc80:	sbb    esi,DWORD PTR ds:0x70b03d65
  44cc86:	int    0x13
  44cc88:	push   es
  44cc89:	cdq    
  44cc8a:	rdmsr  
  44cc8c:	mov    ebp,DWORD PTR [ebp+edx*4+0x7f10f60a]
  44cc93:	mov    ah,0x2e
  44cc95:	xor    DWORD PTR [ebx],esp
  44cc97:	sbb    DWORD PTR [edx],esi
  44cc99:	aad    0x26
  44cc9b:	popf   
  44cc9c:	add    ecx,DWORD PTR [ebx+0x5a]
  44cc9f:	push   eax
  44cca0:	xchg   esp,eax
  44cca1:	mov    bl,0x24
  44cca3:	retf   
  44cca4:	xchg   esp,eax
  44cca5:	out    0xb1,al
  44cca7:	sbb    eax,0x7203dbde
  44ccac:	dec    ebx
  44ccad:	adc    dl,ah
  44ccaf:	jmp    0x44cc42
  44ccb1:	jl     0x44cc89
  44ccb3:	mov    esp,0xecda6a58
  44ccb8:	dec    ebp
  44ccb9:	adc    BYTE PTR ds:0x5f323dc0,cl
  44ccbf:	ret    
  44ccc0:	adc    al,0xbf
  44ccc2:	push   esi
  44ccc3:	jbe    0x44cd2e
  44ccc5:	jb     0x44cc67
  44ccc7:	loope  0x44ccc6
  44ccc9:	sub    al,0x78
  44cccb:	add    eax,0x78d6d07
  44ccd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ccd1:	add    DWORD PTR [ebp+eax*8-0x66c387f1],0xb3deb18c
  44ccdc:	(bad)  [esp+edi*4-0x3d]
  44cce0:	ds inc eax
  44cce2:	push   eax
  44cce3:	inc    ecx
  44cce4:	loope  0x44cd49
  44cce6:	jl     0x44cd66
  44cce8:	adc    al,0x6d
  44ccea:	xchg   ecx,eax
  44cceb:	test   DWORD PTR [ebp-0x4fcf195b],ebx
  44ccf1:	mov    cl,0xb
  44ccf3:	mov    WORD PTR [edx+ecx*1],?
  44ccf6:	xchg   edi,eax
  44ccf7:	sar    DWORD PTR [esi+0x58],0x32
  44ccfb:	and    eax,0x355f6b0e
  44cd00:	outs   dx,BYTE PTR ds:[esi]
  44cd01:	dec    esp
  44cd02:	dec    ebx
  44cd03:	sub    esp,edx
  44cd05:	in     eax,0xdc
  44cd07:	scas   eax,DWORD PTR es:[edi]
  44cd08:	xor    BYTE PTR [eax-0x4c16fd1],0x35
  44cd0f:	dec    ebx
  44cd10:	mov    ds:0x2dd9ce91,al
  44cd15:	or     DWORD PTR [ecx-0x5538c5a8],ebp
  44cd1b:	cmp    al,0x73
  44cd1d:	fmul   DWORD PTR [eax+eiz*4]
  44cd20:	les    ecx,FWORD PTR [ebp+0x33]
  44cd23:	(bad)  
  44cd24:	cld    
  44cd25:	(bad)  
  44cd27:	call   0x1b31e47e
  44cd2c:	and    esi,DWORD PTR [edi+0x4a]
  44cd2f:	push   ebp
  44cd30:	cmp    ch,BYTE PTR [edi]
  44cd32:	mov    eax,ds:0x3312a92f
  44cd37:	sub    BYTE PTR [edx+0x5e],dl
  44cd3a:	jne    0x44cd79
  44cd3c:	pop    ebp
  44cd3d:	aaa    
  44cd3e:	cmc    
  44cd3f:	xor    esp,esi
  44cd41:	aas    
  44cd42:	jmp    0x44cda6
  44cd44:	mov    BYTE PTR [ebx+esi*4-0xdb8b617],dl
  44cd4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cd4c:	(bad)  
  44cd4d:	loopne 0x44cd33
  44cd4f:	sub    al,0x36
  44cd51:	jle    0x44cd8f
  44cd53:	and    dl,ch
  44cd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cd56:	pusha  
  44cd57:	and    bh,BYTE PTR [esi]
  44cd59:	pop    edi
  44cd5a:	add    BYTE PTR [edi+eiz*1+0x56],cl
  44cd5e:	inc    ecx
  44cd5f:	pop    edi
  44cd60:	sbb    al,0xcd
  44cd62:	dec    ebp
  44cd63:	outs   dx,DWORD PTR ds:[esi]
  44cd64:	dec    esi
  44cd65:	ficom  WORD PTR [eax]
  44cd67:	xor    dh,al
  44cd69:	pop    ebx
  44cd6a:	xor    BYTE PTR [ebx+ebp*4-0x7b],0xd8
  44cd6f:	iret   
  44cd70:	(bad)  
  44cd71:	adc    bh,ch
  44cd73:	push   eax
  44cd74:	nop
  44cd75:	and    DWORD PTR [ecx+0x62b587b5],0xb95ba379
  44cd7f:	ins    DWORD PTR es:[edi],dx
  44cd80:	imul   esi,DWORD PTR [edx+0x2f6b423b],0xffffffd1
  44cd87:	iret   
  44cd88:	fcom   QWORD PTR [ebx+0xb]
  44cd8b:	mov    ds:0x2308d6df,al
  44cd90:	call   0x49ae638
  44cd95:	shl    BYTE PTR [ebx-0x30254da1],0x46
  44cd9c:	(bad)  
  44cd9d:	out    dx,eax
  44cd9e:	loopne 0x44cd91
  44cda0:	idiv   BYTE PTR ds:[eax]
  44cda3:	adc    al,0x51
  44cda5:	pop    es
  44cda6:	push   ecx
  44cda7:	cmp    ecx,ebx
  44cda9:	jne    0x44cd53
  44cdab:	test   BYTE PTR [eax],dl
  44cdad:	pop    ds
  44cdae:	mov    DWORD PTR [eax+0x1028340],ecx
  44cdb4:	mov    edx,DWORD PTR [ebx+0x6c]
  44cdb7:	push   esp
  44cdb8:	cmp    DWORD PTR [edx+0x38],0x3b
  44cdbc:	xchg   edi,eax
  44cdbd:	xor    al,BYTE PTR [eax+0x4f0876e8]
  44cdc3:	call   0xfc71:0xee1387db
  44cdca:	push   ds
  44cdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cdcc:	mov    dh,0x61
  44cdce:	pop    ebp
  44cdcf:	adc    ch,BYTE PTR [eax+0x2d3b97fe]
  44cdd5:	jge    0x44cd8d
  44cdd7:	or     ebp,ecx
  44cdd9:	pop    ss
  44cdda:	inc    ebx
  44cddb:	mov    ah,0xa8
  44cddd:	gs out 0x2b,eax
  44cde0:	jp     0x44cd72
  44cde2:	arpl   WORD PTR [ecx+0x3d12f828],ax
  44cde8:	xchg   BYTE PTR [ebx-0x3d611221],bh
  44cdee:	rol    DWORD PTR [edi-0x2b],1
  44cdf1:	scas   eax,DWORD PTR es:[edi]
  44cdf2:	jnp    0x44ce2d
  44cdf4:	sbb    cl,BYTE PTR [esi-0x7a]
  44cdf7:	(bad)  
  44cdf8:	jo     0x44cdb9
  44cdfa:	js     0x44cd98
  44cdfc:	jbe    0x44cdfd
  44cdfe:	and    al,0x9a
  44ce00:	inc    edi
  44ce01:	or     al,0x85
  44ce03:	das    
  44ce04:	mov    al,ds:0x93779fec
  44ce09:	xchg   ecx,eax
  44ce0a:	push   0xffffff92
  44ce0c:	test   al,0x25
  44ce0e:	pushf  
  44ce0f:	shl    BYTE PTR [eax-0x50426f4e],1
  44ce15:	mov    esp,0x805eb799
  44ce1a:	dec    esp
  44ce1b:	outs   dx,DWORD PTR ds:[esi]
  44ce1c:	call   0xb6067724
  44ce21:	ror    BYTE PTR [ecx],0x18
  44ce24:	mov    bh,0xa6
  44ce26:	fcomp  QWORD PTR [edi+0x70cc14c4]
  44ce2c:	xchg   esi,eax
  44ce2d:	call   0xd499:0xec0e8a04
  44ce34:	mov    dh,0x5b
  44ce36:	aad    0xaa
  44ce38:	adc    eax,0xfbf3215a
  44ce3d:	jns    0x44cea4
  44ce3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ce40:	lock cmp eax,0x1f8d90c4
  44ce46:	icebp  
  44ce47:	fstp   DWORD PTR [ecx-0x15]
  44ce4a:	pop    ss
  44ce4b:	pop    es
  44ce4c:	mov    cl,0x74
  44ce4e:	ret    
  44ce4f:	dec    edi
  44ce50:	jo     0x44ce82
  44ce52:	(bad)  
  44ce53:	push   ebx
  44ce54:	sub    al,0x33
  44ce56:	fimul  WORD PTR ds:0x36791f88
  44ce5c:	icebp  
  44ce5d:	jge    0x44ce98
  44ce5f:	outs   dx,BYTE PTR ds:[esi]
  44ce60:	add    eax,0xfe080c59
  44ce65:	sub    al,0x87
  44ce67:	rcr    DWORD PTR [eax+0x6ff345cd],0xee
  44ce6e:	push   es
  44ce6f:	stos   BYTE PTR es:[edi],al
  44ce70:	in     al,dx
  44ce71:	fsubr  DWORD PTR [esi+0x19]
  44ce74:	loopne 0x44ce6e
  44ce76:	jbe    0x44ce63
  44ce78:	clc    
  44ce79:	gs call 0xce05:0xd9a1cb7d
  44ce81:	dec    ebp
  44ce82:	add    ch,BYTE PTR [ebx+0x114bc1f7]
  44ce88:	dec    esp
  44ce89:	rcr    DWORD PTR [edi+0x39],cl
  44ce8c:	xor    edx,DWORD PTR [ecx]
  44ce8e:	lods   eax,DWORD PTR ds:[esi]
  44ce8f:	push   esp
  44ce90:	js     0x44cf0a
  44ce92:	hlt    
  44ce93:	mul    DWORD PTR [edx+0x11]
  44ce96:	iret   
  44ce97:	test   BYTE PTR [edi-0x11],ch
  44ce9a:	add    eax,0x3481ef7b
  44ce9f:	pop    edi
  44cea0:	dec    esi
  44cea1:	add    dl,BYTE PTR [edx]
  44cea3:	inc    esi
  44cea4:	jmp    0x6d2e3671
  44cea9:	cmp    al,0x72
  44ceab:	std    
  44ceac:	mov    ds:0xbe15af9c,al
  44ceb1:	sbb    al,0xf2
  44ceb3:	cmp    ah,BYTE PTR [ebx+eax*4-0x5819f3a0]
  44ceba:	lock sub DWORD PTR [esi+0x78],ebx
  44cebe:	mov    ?,esp
  44cec0:	pop    ds
  44cec1:	iret   
  44cec2:	mov    dl,0x62
  44cec4:	adc    bh,ah
  44cec6:	daa    
  44cec7:	ds mov dl,0x9f
  44ceca:	inc    esp
  44cecb:	sub    DWORD PTR [ecx+0x3f307008],edx
  44ced1:	addr16 arpl cx,sp
  44ced4:	fwait
  44ced5:	(bad)  
  44ced6:	retf   
  44ced7:	cwde   
  44ced8:	imul   BYTE PTR [edi+0x4c61448e]
  44cede:	outs   dx,BYTE PTR ds:[esi]
  44cedf:	or     BYTE PTR [ebp-0x2c],bl
  44cee2:	mov    edi,0x46ea42ef
  44cee7:	jno    0x44cea9
  44cee9:	xchg   ecx,eax
  44ceea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ceeb:	sti    
  44ceec:	mov    dh,0x26
  44ceee:	mov    dh,0x5f
  44cef0:	mov    al,0x7
  44cef2:	mov    eax,0xf64632e5
  44cef7:	mov    ecx,0x46b4f630
  44cefc:	and    cl,BYTE PTR [ebp+0x2e]
  44ceff:	push   ds
  44cf00:	pop    eax
  44cf01:	lods   al,BYTE PTR ds:[esi]
  44cf02:	pop    ds
  44cf03:	out    0x4a,al
  44cf05:	cli    
  44cf06:	cmp    bl,BYTE PTR [ebp+0x2c]
  44cf09:	test   BYTE PTR [ecx+0x740b0296],bh
  44cf0f:	mov    ah,0x1b
  44cf11:	pop    eax
  44cf12:	or     al,0xe1
  44cf14:	jb     0x44ce99
  44cf16:	or     bl,BYTE PTR [ecx]
  44cf18:	push   ebp
  44cf19:	push   0xfffffffa
  44cf1b:	sar    dh,0xb6
  44cf1e:	xchg   ebp,eax
  44cf1f:	xor    BYTE PTR [esp+edi*8-0x6704e3fa],dl
  44cf26:	push   edx
  44cf27:	daa    
  44cf28:	push   ss
  44cf29:	mov    bh,0x71
  44cf2b:	xchg   BYTE PTR [edi+0x13],al
  44cf2e:	or     al,0x37
  44cf30:	sbb    esi,DWORD PTR [edx-0x18]
  44cf33:	(bad)  
  44cf34:	aam    0x96
  44cf36:	mov    ah,0x10
  44cf38:	cmp    cl,0xd9
  44cf3b:	out    0xee,eax
  44cf3d:	test   eax,0x62763363
  44cf42:	adc    edi,DWORD PTR [ebx+0x65]
  44cf45:	mov    cl,0xd1
  44cf47:	dec    edx
  44cf48:	sub    DWORD PTR [ecx],0x2b
  44cf4b:	in     al,dx
  44cf4c:	and    DWORD PTR [ecx+0x3a244746],ebp
  44cf52:	mov    dl,0x60
  44cf54:	sti    
  44cf55:	push   0xf0a8782d
  44cf5a:	pushf  
  44cf5b:	cmp    eax,0x5cce64cb
  44cf60:	xchg   ah,al
  44cf62:	add    BYTE PTR [bp-0x29],dh
  44cf66:	dec    edi
  44cf67:	mov    ds:0xedeb4ef6,eax
  44cf6c:	xchg   ebp,eax
  44cf6d:	jge    0x44cf10
  44cf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cf70:	cmp    al,0x21
  44cf72:	sahf   
  44cf73:	fwait
  44cf74:	scas   eax,DWORD PTR es:[edi]
  44cf75:	push   0xffffffcd
  44cf77:	sbb    ebx,esi
  44cf79:	lods   eax,DWORD PTR ds:[esi]
  44cf7a:	or     eax,esp
  44cf7c:	les    ebx,FWORD PTR [ebx+0x57e9a912]
  44cf82:	inc    ebp
  44cf83:	push   eax
  44cf84:	add    esi,DWORD PTR [esi+eax*2+0x4b77525b]
  44cf8b:	leave  
  44cf8c:	jae    0x44cf73
  44cf8e:	enter  0xe2a2,0x50
  44cf92:	(bad)  
  44cf93:	aam    0xdb
  44cf95:	lock ss xchg edx,eax
  44cf98:	cmp    BYTE PTR [esi-0x48b65994],dl
  44cf9e:	mov    edi,0xf370984b
  44cfa3:	xchg   ebx,eax
  44cfa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cfa5:	call   0x953ffed0
  44cfaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cfab:	jl     0x44cfe0
  44cfad:	adc    al,BYTE PTR [eax]
  44cfaf:	adc    BYTE PTR [ebp+0x39746e18],al
  44cfb5:	das    
  44cfb6:	mov    cl,0x4f
  44cfb8:	test   DWORD PTR [ecx+0x35bc87aa],0x56f350ac
  44cfc2:	jecxz  0x44cf6b
  44cfc4:	xor    esp,DWORD PTR [ebx]
  44cfc6:	xchg   esi,eax
  44cfc7:	sti    
  44cfc8:	aaa    
  44cfc9:	push   edx
  44cfca:	adc    DWORD PTR [ebx+edx*4],eax
  44cfcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cfce:	mov    bl,0x13
  44cfd0:	shl    BYTE PTR [ebp+eax*8-0x71fe0195],cl
  44cfd7:	xlat   BYTE PTR ds:[ebx]
  44cfd8:	rol    DWORD PTR [ebx+eax*1-0x3d8ec604],1
  44cfdf:	out    dx,al
  44cfe0:	jmp    0x44cfc5
  44cfe2:	shl    edi,cl
  44cfe4:	std    
  44cfe5:	mov    edi,0x87c20101
  44cfea:	or     DWORD PTR [ecx],esp
  44cfec:	mov    ah,0x97
  44cfee:	push   esp
  44cfef:	out    0xa9,eax
  44cff1:	push   0x9e9c247c
  44cff6:	sub    al,0xe1
  44cff8:	jmp    0x13843c39
  44cffd:	stos   DWORD PTR es:[edi],eax
  44cffe:	inc    esi
  44cfff:	cmp    BYTE PTR [esi+0x2643332],dh
  44d005:	mov    cl,0xee
  44d007:	xlat   BYTE PTR ds:[ebx]
  44d008:	shl    DWORD PTR [ecx+ebx*8+0x5c],0xf4
  44d00d:	mov    dh,0x29
  44d00f:	xchg   ebx,eax
  44d010:	cmp    BYTE PTR [ebx+0x1a5b1af5],dh
  44d016:	popa   
  44d017:	ret    0xaea3
  44d01a:	repz sub ecx,DWORD PTR [edx]
  44d01d:	sub    BYTE PTR [ebp+0x44],0xe0
  44d021:	retf   0xc244
  44d024:	loope  0x44d024
  44d026:	sub    BYTE PTR [ebp+0x5e],0xc5
  44d02a:	aaa    
  44d02b:	dec    ebp
  44d02c:	repnz mov es,ebp
  44d02f:	lods   eax,DWORD PTR ds:[esi]
  44d030:	jne    0x44d09f
  44d032:	sub    BYTE PTR [ecx],bh
  44d034:	fs dec ecx
  44d036:	stos   DWORD PTR es:[edi],eax
  44d037:	loop   0x44cffe
  44d039:	pop    ebx
  44d03a:	ins    BYTE PTR es:[edi],dx
  44d03b:	adc    eax,0xb9f31b6d
  44d040:	mov    al,BYTE PTR [edi]
  44d042:	cmp    DWORD PTR [edi+edi*1],eax
  44d045:	pusha  
  44d046:	loop   0x44cfeb
  44d048:	(bad)  
  44d04a:	mov    edx,0x2d264c3a
  44d04f:	lods   al,BYTE PTR ds:[esi]
  44d050:	add    esp,eax
  44d052:	es sub eax,0x345704bb
  44d058:	call   0xcccd68ce
  44d05d:	or     esp,DWORD PTR [edi-0x2121b7f8]
  44d063:	arpl   WORD PTR [ecx+0xa],bp
  44d066:	dec    esi
  44d067:	aam    0xb2
  44d069:	mov    al,0x35
  44d06b:	pop    ecx
  44d06c:	paddb  mm6,QWORD PTR [edi]
  44d06f:	xor    edi,ecx
  44d071:	sahf   
  44d072:	add    edi,esi
  44d074:	call   0x938ad26d
  44d079:	loopne 0x44d0cb
  44d07b:	cmp    al,0xb0
  44d07d:	ins    BYTE PTR es:[edi],dx
  44d07e:	pop    ebx
  44d07f:	ds jmp 0x44d04a
  44d082:	lock test BYTE PTR [edi-0x68],ch
  44d086:	in     eax,dx
  44d087:	fs (bad) 
  44d089:	pop    ss
  44d08a:	cmp    BYTE PTR [eax],cl
  44d08c:	pop    edx
  44d08d:	xchg   ecx,eax
  44d08e:	ins    BYTE PTR es:[edi],dx
  44d08f:	push   edi
  44d090:	and    ch,bl
  44d092:	push   es
  44d093:	add    eax,0xd2f82fa2
  44d098:	retf   
  44d099:	das    
  44d09a:	retf   0x4de2
  44d09d:	push   ebx
  44d09e:	mov    bh,0x7b
  44d0a0:	add    eax,0xb0de6277
  44d0a5:	jae    0x44d0cd
  44d0a7:	and    DWORD PTR [esi-0x1c],ebp
  44d0aa:	jmp    0x38fb:0x67f5713
  44d0b1:	int    0x5d
  44d0b3:	fist   WORD PTR [ebx]
  44d0b5:	fstp   st(4)
  44d0b7:	xor    esp,DWORD PTR [ebp-0x1ea18fdd]
  44d0bd:	lds    esi,FWORD PTR [ecx-0x5e2876a5]
  44d0c3:	xchg   DWORD PTR [esi-0x7daf94bd],esp
  44d0c9:	mov    ds:0x79b644dc,al
  44d0ce:	xchg   ecx,eax
  44d0cf:	mov    bl,0xa3
  44d0d1:	les    esp,FWORD PTR [esi]
  44d0d3:	in     eax,0x7
  44d0d5:	mov    esi,0x40a6f8aa
  44d0da:	ret    0x966d
  44d0dd:	inc    edi
  44d0de:	push   ss
  44d0df:	(bad)  
  44d0e1:	aas    
  44d0e2:	add    al,0x92
  44d0e4:	and    al,BYTE PTR [esi-0x51]
  44d0e7:	push   ebp
  44d0e8:	pop    edi
  44d0e9:	jno    0x44d0a2
  44d0eb:	mov    ch,0xd6
  44d0ed:	add    eax,0xfbb97026
  44d0f2:	stc    
  44d0f3:	fisttp DWORD PTR [ecx-0x68]
  44d0f6:	iret   
  44d0f7:	xlat   BYTE PTR ds:[ebx]
  44d0f8:	pop    ds
  44d0f9:	add    ebx,DWORD PTR [edi+0x38]
  44d0fc:	add    edx,esp
  44d0fe:	sbb    ecx,DWORD PTR fs:[edi]
  44d101:	inc    esi
  44d102:	aaa    
  44d103:	nop
  44d104:	cmp    edi,DWORD PTR cs:[edx+0x18]
  44d108:	vmread DWORD PTR [edi+eax*4+0x1d5f5665],esi
  44d110:	inc    ebp
  44d111:	dec    ecx
  44d112:	xchg   ecx,eax
  44d113:	jno    0x44d116
  44d115:	inc    esp
  44d116:	jbe    0x44d165
  44d118:	mov    eax,ds:0x1936c224
  44d11d:	push   esi
  44d11e:	xchg   edi,eax
  44d11f:	jb     0x44d1a0
  44d121:	in     eax,dx
  44d122:	clc    
  44d123:	mov    DWORD PTR [edx-0x70983726],ebp
  44d129:	jmp    0x9380:0x2775bc4
  44d130:	cmp    esp,DWORD PTR [eax*8+0x3571aa31]
  44d137:	stc    
  44d138:	mov    edi,0xb53eeea9
  44d13d:	call   0xa2068268
  44d142:	jg     0x44d0e3
  44d144:	rol    DWORD PTR [ebx],cl
  44d146:	inc    ebp
  44d147:	js     0x44d170
  44d149:	xchg   ecx,eax
  44d14a:	adc    DWORD PTR [edi-0x7b],ebx
  44d14d:	sub    dl,BYTE PTR es:[esi-0x15]
  44d151:	mov    ebp,DWORD PTR [ecx]
  44d153:	cmp    ecx,DWORD PTR [ecx]
  44d155:	pop    esp
  44d156:	out    dx,al
  44d157:	test   BYTE PTR [ebp+0x14],al
  44d15a:	xor    bl,BYTE PTR ss:[edx+eiz*4-0x56446ddc]
  44d162:	xlat   BYTE PTR ds:[ebx]
  44d163:	(bad)  
  44d164:	cmc    
  44d165:	cmp    BYTE PTR [ecx+ebx*1+0x10fc3f49],dl
  44d16c:	das    
  44d16d:	sub    edi,eax
  44d16f:	cmp    BYTE PTR [edx],dl
  44d171:	jg     0x44d175
  44d173:	jb     0x44d18a
  44d175:	int3   
  44d176:	inc    esp
  44d177:	out    0x4f,eax
  44d179:	sar    ecx,1
  44d17b:	mov    ds,WORD PTR es:[ebp+0x65]
  44d17f:	mov    esi,0xafcf62b1
  44d184:	xchg   esi,eax
  44d185:	ud2    
  44d187:	cmp    BYTE PTR [ecx-0x49],ch
  44d18a:	jno    0x44d176
  44d18c:	fisub  DWORD PTR [edi]
  44d18e:	mov    esp,0xb4d10e2b
  44d193:	dec    ebp
  44d194:	(bad)  
  44d195:	aad    0x79
  44d197:	call   0xa55a2826
  44d19c:	jp     0x44d1a2
  44d19e:	cld    
  44d19f:	adc    eax,0xfbdd8c02
  44d1a4:	xchg   DWORD PTR [edi+0x3e],ecx
  44d1a7:	js     0x44d17a
  44d1a9:	inc    edx
  44d1aa:	or     DWORD PTR [edi-0x12],eax
  44d1ad:	mov    edx,0x7281e809
  44d1b2:	fisub  WORD PTR [esi]
  44d1b4:	fldcw  WORD PTR [edi]
  44d1b6:	dec    ebx
  44d1b8:	jp     0x44d185
  44d1ba:	dec    ebx
  44d1bb:	sub    cl,BYTE PTR [edx-0x65e30056]
  44d1c1:	sub    DWORD PTR [edx+0x38],ecx
  44d1c4:	add    ebp,DWORD PTR [edx+0x38]
  44d1c7:	adc    dh,BYTE PTR [ecx]
  44d1c9:	sub    eax,DWORD PTR [ebp-0x661d6c66]
  44d1cf:	adc    DWORD PTR [esi],0x35
  44d1d2:	xor    ebx,DWORD PTR [ebp+0x77]
  44d1d5:	stc    
  44d1d6:	pop    ss
  44d1d7:	inc    ecx
  44d1d8:	adc    eax,0xa6fe7120
  44d1dd:	or     dh,BYTE PTR [eax]
  44d1df:	fdiv   QWORD PTR [esi+0x541d4628]
  44d1e5:	and    ecx,DWORD PTR [ecx-0x6c]
  44d1e8:	call   0x460b3364
  44d1ed:	cli    
  44d1ee:	mov    al,0xff
  44d1f0:	mov    cl,0xba
  44d1f2:	std    
  44d1f3:	sbb    dh,bl
  44d1f5:	push   0x9a4536a6
  44d1fa:	loope  0x44d26a
  44d1fc:	sar    cl,0x69
  44d1ff:	inc    ecx
  44d200:	in     al,dx
  44d201:	leave  
  44d202:	sub    ch,dh
  44d204:	fstp   DWORD PTR [edi+ebp*8+0x4a]
  44d208:	add    BYTE PTR [ebp+0x9af253c],al
  44d20e:	sar    DWORD PTR [ebp+esi*2-0x12314647],0xe4
  44d216:	ds popa 
  44d218:	std    
  44d219:	lods   al,BYTE PTR ds:[esi]
  44d21a:	call   0xeae472fc
  44d21f:	call   0x4783:0xfaa261c
  44d226:	or     dh,bl
  44d228:	jnp    0x44d256
  44d22a:	ret    
  44d22b:	and    eax,0x2e78c525
  44d230:	sbb    BYTE PTR [ecx-0x36],ah
  44d233:	adc    eax,0xd5350152
  44d238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d239:	les    edi,FWORD PTR [ebx+0x34]
  44d23c:	ror    BYTE PTR [ebx+0x80bf14a],0x49
  44d243:	iret   
  44d244:	cmp    BYTE PTR [edx-0x56249fe3],ch
  44d24a:	addr16 popa 
  44d24c:	movntps XMMWORD PTR [ecx+0x26],xmm1
  44d250:	sar    DWORD PTR [ebx+eiz*8+0x72c34976],0xf4
  44d258:	ret    
  44d259:	enter  0x3bdc,0x36
  44d25d:	mov    bl,0x6a
  44d25f:	mov    ch,0x9f
  44d261:	or     al,0x8b
  44d263:	out    dx,al
  44d264:	mov    ds:0xc73ea71d,al
  44d269:	mov    ebp,0x77a3c6d0
  44d26e:	xchg   esp,esi
  44d270:	mov    al,0x21
  44d272:	jb     0x44d24a
  44d274:	xlat   BYTE PTR ds:[ebx]
  44d275:	stos   BYTE PTR es:[edi],al
  44d276:	mov    ah,0x5
  44d278:	inc    bh
  44d27a:	xlat   BYTE PTR ds:[ebx]
  44d27b:	retf   0x9ce3
  44d27e:	sub    DWORD PTR [edi+edx*2-0x225aabed],ebx
  44d285:	in     al,dx
  44d286:	in     eax,0x34
  44d288:	cmp    bl,ch
  44d28a:	fstp   st(0)
  44d28c:	xchg   esp,esp
  44d28e:	push   ebx
  44d28f:	pop    edx
  44d290:	mov    eax,0xea55539c
  44d295:	mov    esp,0xe2818b5f
  44d29a:	test   BYTE PTR [edx-0x55],dl
  44d29d:	sbb    ax,0xa249
  44d2a1:	or     BYTE PTR [esi+0x46],bl
  44d2a4:	jp     0x44d312
  44d2a6:	jl     0x44d268
  44d2a8:	ror    BYTE PTR [eax],1
  44d2aa:	pop    eax
  44d2ab:	test   al,0x77
  44d2ad:	mov    eax,ds:0xe07b70b
  44d2b2:	div    ah
  44d2b4:	aam    0x48
  44d2b6:	push   cs
  44d2b7:	lds    esp,FWORD PTR [edi-0x3e0b8fe]
  44d2bd:	or     BYTE PTR [ebx+0x29],ch
  44d2c0:	xor    ebp,edi
  44d2c2:	push   cs
  44d2c3:	push   esp
  44d2c4:	and    esi,DWORD PTR [eax+0xe8d860c]
  44d2ca:	ret    0x4223
  44d2cd:	dec    ebp
  44d2ce:	inc    ebp
  44d2cf:	cmp    eax,DWORD PTR [edx+0x7f]
  44d2d2:	cmp    eax,0x1eddc8d7
  44d2d7:	mov    esp,0xe58dd1cd
  44d2dc:	dec    ebp
  44d2dd:	(bad)  
  44d2df:	rcl    dh,1
  44d2e1:	lods   al,BYTE PTR ds:[esi]
  44d2e2:	cli    
  44d2e3:	in     eax,0xd5
  44d2e5:	mov    cl,BYTE PTR [ebx+0x18508bb3]
  44d2eb:	(bad)  [edx]
  44d2ed:	push   es
  44d2ee:	das    
  44d2ef:	(bad)  
  44d2f0:	ins    BYTE PTR es:[edi],dx
  44d2f1:	dec    edx
  44d2f2:	xlat   BYTE PTR ds:[ebx]
  44d2f3:	mov    al,0xd8
  44d2f5:	jae    0x44d2d1
  44d2f7:	xor    eax,0xaf828ffe
  44d2fd:	shl    DWORD PTR [edx],cl
  44d2ff:	xor    al,0xae
  44d301:	sub    esi,ebx
  44d303:	pop    es
  44d304:	mov    dl,0x16
  44d306:	and    esp,DWORD PTR [ecx+0x7b]
  44d309:	pop    es
  44d30a:	test   eax,0xa69ea117
  44d30f:	cmp    edx,edx
  44d311:	cmp    DWORD PTR [eax-0x236b719b],ebx
  44d317:	ret    0x4f7d
  44d31a:	out    dx,eax
  44d31b:	push   ebp
  44d31c:	mov    ch,0x4a
  44d31e:	xor    BYTE PTR [esi+0x50],bl
  44d321:	pop    ss
  44d322:	retf   0x39ed
  44d325:	xchg   ecx,eax
  44d326:	xor    BYTE PTR [eax+0x60],ah
  44d329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d32a:	loope  0x44d2bd
  44d32c:	adc    ebp,esi
  44d32e:	pop    ebx
  44d32f:	mov    edi,0xb893e460
  44d334:	cmp    bh,BYTE PTR [eax]
  44d336:	cdq    
  44d337:	cmp    DWORD PTR [eax],ebp
  44d339:	sbb    ch,BYTE PTR [edx]
  44d33b:	jmp    0xffc0f8c
  44d340:	rcr    esp,cl
  44d342:	and    eax,0xa6cec7b9
  44d347:	mov    ah,BYTE PTR [edx]
  44d349:	in     eax,dx
  44d34a:	add    eax,0xc6e31314
  44d34f:	dec    ecx
  44d350:	dec    eax
  44d351:	jb     0x44d3ca
  44d353:	call   0xcd535883
  44d358:	pop    esi
  44d359:	mov    WORD PTR [edx+0x261d466c],gs
  44d35f:	js     0x44d302
  44d361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d362:	js     0x44d30e
  44d364:	imul   edi,DWORD PTR ds:0xfeee6f2f,0xf71d6079
  44d36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d36f:	fmul   QWORD PTR [ebx-0xf]
  44d372:	pop    ecx
  44d373:	fxch   st(6)
  44d375:	jmp    0x44d370
  44d377:	cs popa 
  44d379:	sub    ecx,DWORD PTR [ebx]
  44d37b:	int3   
  44d37c:	jl     0x44d3cd
  44d37e:	pop    ecx
  44d37f:	sub    eax,0xf66d64a3
  44d384:	aas    
  44d385:	aas    
  44d386:	loopne 0x44d3c2
  44d388:	jo     0x44d390
  44d38a:	pop    ebx
  44d38b:	xchg   DWORD PTR [esi+0x45e76887],ebp
  44d391:	inc    ebp
  44d392:	jae    0x44d337
  44d394:	jge    0x44d31d
  44d396:	dec    DWORD PTR [ebx-0x58]
  44d399:	ss nop
  44d39b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  44d39d:	inc    edx
  44d39e:	sahf   
  44d39f:	xchg   ebp,eax
  44d3a0:	xchg   DWORD PTR [eax-0x1d67f5a6],eax
  44d3a6:	or     eax,eax
  44d3a8:	jmp    0x44d3ee
  44d3aa:	inc    ebx
  44d3ab:	sbb    edi,ebp
  44d3ad:	mov    bh,0xad
  44d3af:	push   ebp
  44d3b0:	hlt    
  44d3b1:	clc    
  44d3b2:	push   ss
  44d3b3:	push   0xb69cee93
  44d3b8:	ror    DWORD PTR [eax],cl
  44d3ba:	fs daa 
  44d3bc:	mov    ds:0xc0e5c307,al
  44d3c1:	mov    bl,0xce
  44d3c3:	sbb    ecx,DWORD PTR [ecx]
  44d3c5:	aam    0xcb
  44d3c7:	loope  0x44d43e
  44d3c9:	xor    bh,BYTE PTR [ecx+ebp*1]
  44d3cc:	mov    ah,0x63
  44d3ce:	(bad)  
  44d3cf:	div    BYTE PTR [edi+0x240cdab1]
  44d3d5:	ds push esi
  44d3d7:	mov    ebp,0xc65d9957
  44d3dc:	in     al,dx
  44d3dd:	ins    BYTE PTR es:[di],dx
  44d3df:	hlt    
  44d3e0:	adc    DWORD PTR [ebx+0x74],edx
  44d3e3:	out    0x83,eax
  44d3e5:	mov    edx,0xead21c71
  44d3ea:	test   eax,0x61fe1663
  44d3ef:	xchg   edx,eax
  44d3f0:	jnp    0x44d3c7
  44d3f2:	pop    esi
  44d3f3:	outs   dx,BYTE PTR ds:[esi]
  44d3f4:	aam    0x7d
  44d3f6:	call   0x3802:0x73177ee5
  44d3fd:	pop    es
  44d3fe:	add    DWORD PTR [eax+0x2cd3b51],edx
  44d404:	fmul   st,st(6)
  44d406:	addr16 ret 0xc61d
  44d40a:	cmp    al,0x51
  44d40c:	and    eax,0x89ad43aa
  44d411:	mov    ch,0x1c
  44d413:	jbe    0x44d3ec
  44d415:	adc    BYTE PTR [edi+0x34],bl
  44d418:	inc    ebx
  44d419:	(bad)  
  44d41b:	pop    ebp
  44d41c:	add    edi,DWORD PTR [ecx]
  44d41e:	dec    edx
  44d41f:	xchg   DWORD PTR [ecx-0xf],edx
  44d422:	dec    ebp
  44d423:	dec    edi
  44d424:	xchg   edx,eax
  44d425:	cmp    al,0xbe
  44d427:	rol    DWORD PTR [ebx-0x33434d72],cl
  44d42d:	stos   DWORD PTR es:[edi],eax
  44d42e:	(bad)  
  44d430:	div    DWORD PTR [eax+0x5a23ab5a]
  44d436:	pushf  
  44d437:	cmp    edx,esp
  44d439:	pop    eax
  44d43a:	and    BYTE PTR [ecx-0x2207fa63],0xc8
  44d441:	scas   eax,DWORD PTR es:[edi]
  44d442:	(bad)  
  44d443:	mov    ss,WORD PTR [ecx+0x485b268b]
  44d449:	mov    bh,0xad
  44d44b:	xchg   ecx,eax
  44d44c:	sub    edi,DWORD PTR [edi-0x1e]
  44d44f:	js     0x44d46d
  44d451:	add    al,0xa0
  44d453:	fs cmp dl,al
  44d456:	ss jb  0x44d3dc
  44d459:	jmp    0x44d42e
  44d45b:	sbb    esi,DWORD PTR ds:0x32a74969
  44d461:	sar    ah,0x27
  44d464:	add    ebp,DWORD PTR [ecx]
  44d466:	sub    dl,bh
  44d468:	jp     0x44d482
  44d46a:	dec    eax
  44d46b:	pop    edx
  44d46c:	push   ss
  44d46d:	mov    edi,0x33e6fe43
  44d472:	jmp    0xa6e5c691
  44d477:	push   0xffffff93
  44d479:	xchg   ebx,eax
  44d47a:	add    dl,BYTE PTR [esi-0x459fe6b3]
  44d480:	add    eax,0x2eb51055
  44d485:	out    dx,al
  44d486:	cld    
  44d487:	je     0x44d493
  44d489:	mov    ebx,0xdcd5fc0b
  44d48e:	mov    ebp,ebp
  44d490:	test   eax,0xa7fb87c5
  44d495:	push   0x1
  44d497:	xchg   ebp,eax
  44d498:	inc    DWORD PTR [edx+eiz*2]
  44d49b:	jbe    0x44d42e
  44d49d:	sbb    esp,esi
  44d49f:	and    al,dl
  44d4a1:	sbb    eax,edx
  44d4a3:	(bad)  
  44d4a4:	mov    edi,0x300af87f
  44d4a9:	xchg   ebp,eax
  44d4aa:	dec    ebp
  44d4ab:	dec    esp
  44d4ac:	mov    ds:0x97c86359,eax
  44d4b1:	mov    ecx,0x3216b98a
  44d4b6:	and    DWORD PTR [eax],ebx
  44d4b8:	inc    edx
  44d4b9:	xor    ebx,DWORD PTR [ebx]
  44d4bb:	leave  
  44d4bc:	stos   BYTE PTR es:[edi],al
  44d4bd:	adc    al,0x3c
  44d4bf:	rcl    DWORD PTR [eax-0x4e4367b1],cl
  44d4c5:	das    
  44d4c6:	or     DWORD PTR [edx-0x4b],edx
  44d4c9:	lds    edx,FWORD PTR ds:0x34f4109b
  44d4cf:	cwde   
  44d4d0:	mov    al,ds:0x5d4cf25e
  44d4d5:	sub    BYTE PTR ds:[ebx+0x7cb494ca],0x5
  44d4dd:	bound  ecx,QWORD PTR [edx+0x23affc37]
  44d4e3:	arpl   WORD PTR [ebx],bp
  44d4e5:	mov    ecx,0xbe49
  44d4ea:	add    BYTE PTR [eax],al
  44d4ec:	add    BYTE PTR [eax],al
  44d4ee:	add    BYTE PTR [eax],al
  44d4f0:	pusha  
  44d4f1:	mov    esi,0x42a000
  44d4f6:	lea    edi,[esi-0x29000]
  44d4fc:	push   edi
  44d4fd:	mov    ebp,esp
  44d4ff:	lea    ebx,[esp-0x3e80]
  44d506:	xor    eax,eax
  44d508:	push   eax
  44d509:	cmp    esp,ebx
  44d50b:	jne    0x44d508
  44d50d:	inc    esi
  44d50e:	inc    esi
  44d50f:	push   ebx
  44d510:	push   0x4b485
  44d515:	push   edi
  44d516:	add    ebx,0x4
  44d519:	push   ebx
  44d51a:	push   0x234e6
  44d51f:	push   esi
  44d520:	add    ebx,0x4
  44d523:	push   ebx
  44d524:	push   eax
  44d525:	mov    DWORD PTR [ebx],0x20003
  44d52b:	nop
  44d52c:	nop
  44d52d:	nop
  44d52e:	nop
  44d52f:	nop
  44d530:	push   ebp
  44d531:	push   edi
  44d532:	push   esi
  44d533:	push   ebx
  44d534:	sub    esp,0x7c
  44d537:	mov    edx,DWORD PTR [esp+0x90]
  44d53e:	mov    DWORD PTR [esp+0x74],0x0
  44d546:	mov    BYTE PTR [esp+0x73],0x0
  44d54b:	mov    ebp,DWORD PTR [esp+0x9c]
  44d552:	lea    eax,[edx+0x4]
  44d555:	mov    DWORD PTR [esp+0x78],eax
  44d559:	mov    eax,0x1
  44d55e:	movzx  ecx,BYTE PTR [edx+0x2]
  44d562:	mov    ebx,eax
  44d564:	shl    ebx,cl
  44d566:	mov    ecx,ebx
  44d568:	dec    ecx
  44d569:	mov    DWORD PTR [esp+0x6c],ecx
  44d56d:	movzx  ecx,BYTE PTR [edx+0x1]
  44d571:	shl    eax,cl
  44d573:	dec    eax
  44d574:	mov    DWORD PTR [esp+0x68],eax
  44d578:	mov    eax,DWORD PTR [esp+0xa8]
  44d57f:	movzx  esi,BYTE PTR [edx]
  44d582:	mov    DWORD PTR [ebp+0x0],0x0
  44d589:	mov    DWORD PTR [esp+0x60],0x0
  44d591:	mov    DWORD PTR [eax],0x0
  44d597:	mov    eax,0x300
  44d59c:	mov    DWORD PTR [esp+0x64],esi
  44d5a0:	mov    DWORD PTR [esp+0x5c],0x1
  44d5a8:	mov    DWORD PTR [esp+0x58],0x1
  44d5b0:	mov    DWORD PTR [esp+0x54],0x1
  44d5b8:	mov    DWORD PTR [esp+0x50],0x1
  44d5c0:	movzx  ecx,BYTE PTR [edx+0x1]
  44d5c4:	add    ecx,esi
  44d5c6:	shl    eax,cl
  44d5c8:	lea    ecx,[eax+0x736]
  44d5ce:	cmp    DWORD PTR [esp+0x74],ecx
  44d5d2:	jae    0x44d5e2
  44d5d4:	mov    eax,DWORD PTR [esp+0x78]
  44d5d8:	mov    WORD PTR [eax],0x400
  44d5dd:	add    eax,0x2
  44d5e0:	loop   0x44d5d8
  44d5e2:	mov    ebx,DWORD PTR [esp+0x94]
  44d5e9:	xor    edi,edi
  44d5eb:	or     DWORD PTR [esp+0x48],0xffffffff
  44d5f3:	mov    edx,ebx
  44d5f5:	add    edx,DWORD PTR [esp+0x98]
  44d5fc:	mov    DWORD PTR [esp+0x4c],edx
  44d600:	xor    edx,edx
  44d602:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d606:	je     0x44df88
  44d60c:	movzx  eax,BYTE PTR [ebx]
  44d60f:	shl    edi,0x8
  44d612:	inc    edx
  44d613:	inc    ebx
  44d614:	or     edi,eax
  44d616:	cmp    edx,0x4
  44d619:	jle    0x44d602
  44d61b:	mov    ecx,DWORD PTR [esp+0xa4]
  44d622:	cmp    DWORD PTR [esp+0x74],ecx
  44d626:	jae    0x44df90
  44d62c:	mov    esi,DWORD PTR [esp+0x74]
  44d630:	and    esi,DWORD PTR [esp+0x6c]
  44d634:	mov    eax,DWORD PTR [esp+0x60]
  44d638:	mov    edx,DWORD PTR [esp+0x78]
  44d63c:	shl    eax,0x4
  44d63f:	mov    DWORD PTR [esp+0x44],esi
  44d643:	add    eax,esi
  44d645:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d64d:	lea    ebp,[edx+eax*2]
  44d650:	ja     0x44d66a
  44d652:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d656:	je     0x44df88
  44d65c:	shl    DWORD PTR [esp+0x48],0x8
  44d661:	movzx  eax,BYTE PTR [ebx]
  44d664:	shl    edi,0x8
  44d667:	inc    ebx
  44d668:	or     edi,eax
  44d66a:	mov    eax,DWORD PTR [esp+0x48]
  44d66e:	mov    dx,WORD PTR [ebp+0x0]
  44d672:	shr    eax,0xb
  44d675:	movzx  ecx,dx
  44d678:	imul   eax,ecx
  44d67b:	cmp    edi,eax
  44d67d:	jae    0x44d860
  44d683:	mov    DWORD PTR [esp+0x48],eax
  44d687:	mov    eax,0x800
  44d68c:	sub    eax,ecx
  44d68e:	mov    cl,BYTE PTR [esp+0x64]
  44d692:	sar    eax,0x5
  44d695:	mov    esi,0x1
  44d69a:	lea    eax,[edx+eax*1]
  44d69d:	movzx  edx,BYTE PTR [esp+0x73]
  44d6a2:	mov    WORD PTR [ebp+0x0],ax
  44d6a6:	mov    eax,DWORD PTR [esp+0x74]
  44d6aa:	and    eax,DWORD PTR [esp+0x68]
  44d6ae:	mov    ebp,DWORD PTR [esp+0x78]
  44d6b2:	shl    eax,cl
  44d6b4:	mov    ecx,0x8
  44d6b9:	sub    ecx,DWORD PTR [esp+0x64]
  44d6bd:	sar    edx,cl
  44d6bf:	add    eax,edx
  44d6c1:	imul   eax,eax,0x600
  44d6c7:	cmp    DWORD PTR [esp+0x60],0x6
  44d6cc:	lea    eax,[ebp+eax*1+0xe6c]
  44d6d3:	mov    DWORD PTR [esp+0x14],eax
  44d6d7:	jle    0x44d7a7
  44d6dd:	mov    eax,DWORD PTR [esp+0x74]
  44d6e1:	sub    eax,DWORD PTR [esp+0x5c]
  44d6e5:	mov    edx,DWORD PTR [esp+0xa0]
  44d6ec:	movzx  eax,BYTE PTR [edx+eax*1]
  44d6f0:	mov    DWORD PTR [esp+0x40],eax
  44d6f4:	shl    DWORD PTR [esp+0x40],1
  44d6f8:	mov    ecx,DWORD PTR [esp+0x40]
  44d6fc:	lea    edx,[esi+esi*1]
  44d6ff:	mov    ebp,DWORD PTR [esp+0x14]
  44d703:	and    ecx,0x100
  44d709:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d711:	lea    eax,[ebp+ecx*2+0x0]
  44d715:	mov    DWORD PTR [esp+0x3c],ecx
  44d719:	lea    ebp,[eax+edx*1]
  44d71c:	ja     0x44d736
  44d71e:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d722:	je     0x44df88
  44d728:	shl    DWORD PTR [esp+0x48],0x8
  44d72d:	movzx  eax,BYTE PTR [ebx]
  44d730:	shl    edi,0x8
  44d733:	inc    ebx
  44d734:	or     edi,eax
  44d736:	mov    eax,DWORD PTR [esp+0x48]
  44d73a:	mov    cx,WORD PTR [ebp+0x200]
  44d741:	shr    eax,0xb
  44d744:	movzx  esi,cx
  44d747:	imul   eax,esi
  44d74a:	cmp    edi,eax
  44d74c:	jae    0x44d771
  44d74e:	mov    DWORD PTR [esp+0x48],eax
  44d752:	mov    eax,0x800
  44d757:	sub    eax,esi
  44d759:	mov    esi,edx
  44d75b:	sar    eax,0x5
  44d75e:	cmp    DWORD PTR [esp+0x3c],0x0
  44d763:	lea    eax,[ecx+eax*1]
  44d766:	mov    WORD PTR [ebp+0x200],ax
  44d76d:	je     0x44d791
  44d76f:	jmp    0x44d79f
  44d771:	sub    DWORD PTR [esp+0x48],eax
  44d775:	sub    edi,eax
  44d777:	mov    eax,ecx
  44d779:	lea    esi,[edx+0x1]
  44d77c:	shr    ax,0x5
  44d780:	sub    cx,ax
  44d783:	cmp    DWORD PTR [esp+0x3c],0x0
  44d788:	mov    WORD PTR [ebp+0x200],cx
  44d78f:	je     0x44d79f
  44d791:	cmp    esi,0xff
  44d797:	jle    0x44d6f4
  44d79d:	jmp    0x44d818
  44d79f:	cmp    esi,0xff
  44d7a5:	jg     0x44d818
  44d7a7:	lea    edx,[esi+esi*1]
  44d7aa:	mov    ebp,DWORD PTR [esp+0x14]
  44d7ae:	add    ebp,edx
  44d7b0:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d7b8:	ja     0x44d7d2
  44d7ba:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d7be:	je     0x44df88
  44d7c4:	shl    DWORD PTR [esp+0x48],0x8
  44d7c9:	movzx  eax,BYTE PTR [ebx]
  44d7cc:	shl    edi,0x8
  44d7cf:	inc    ebx
  44d7d0:	or     edi,eax
  44d7d2:	mov    eax,DWORD PTR [esp+0x48]
  44d7d6:	mov    cx,WORD PTR [ebp+0x0]
  44d7da:	shr    eax,0xb
  44d7dd:	movzx  esi,cx
  44d7e0:	imul   eax,esi
  44d7e3:	cmp    edi,eax
  44d7e5:	jae    0x44d800
  44d7e7:	mov    DWORD PTR [esp+0x48],eax
  44d7eb:	mov    eax,0x800
  44d7f0:	sub    eax,esi
  44d7f2:	mov    esi,edx
  44d7f4:	sar    eax,0x5
  44d7f7:	lea    eax,[ecx+eax*1]
  44d7fa:	mov    WORD PTR [ebp+0x0],ax
  44d7fe:	jmp    0x44d79f
  44d800:	sub    DWORD PTR [esp+0x48],eax
  44d804:	sub    edi,eax
  44d806:	mov    eax,ecx
  44d808:	lea    esi,[edx+0x1]
  44d80b:	shr    ax,0x5
  44d80f:	sub    cx,ax
  44d812:	mov    WORD PTR [ebp+0x0],cx
  44d816:	jmp    0x44d79f
  44d818:	mov    edx,DWORD PTR [esp+0x74]
  44d81c:	mov    eax,esi
  44d81e:	mov    ecx,DWORD PTR [esp+0xa0]
  44d825:	mov    BYTE PTR [esp+0x73],al
  44d829:	mov    BYTE PTR [edx+ecx*1],al
  44d82c:	inc    edx
  44d82d:	cmp    DWORD PTR [esp+0x60],0x3
  44d832:	mov    DWORD PTR [esp+0x74],edx
  44d836:	jg     0x44d845
  44d838:	mov    DWORD PTR [esp+0x60],0x0
  44d840:	jmp    0x44df60
  44d845:	cmp    DWORD PTR [esp+0x60],0x9
  44d84a:	jg     0x44d856
  44d84c:	sub    DWORD PTR [esp+0x60],0x3
  44d851:	jmp    0x44df60
  44d856:	sub    DWORD PTR [esp+0x60],0x6
  44d85b:	jmp    0x44df60
  44d860:	mov    ecx,DWORD PTR [esp+0x48]
  44d864:	sub    edi,eax
  44d866:	mov    esi,DWORD PTR [esp+0x60]
  44d86a:	sub    ecx,eax
  44d86c:	mov    eax,edx
  44d86e:	shr    ax,0x5
  44d872:	sub    dx,ax
  44d875:	cmp    ecx,0xffffff
  44d87b:	mov    WORD PTR [ebp+0x0],dx
  44d87f:	mov    ebp,DWORD PTR [esp+0x78]
  44d883:	lea    esi,[ebp+esi*2+0x0]
  44d887:	mov    DWORD PTR [esp+0x38],esi
  44d88b:	ja     0x44d8a3
  44d88d:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d891:	je     0x44df88
  44d897:	movzx  eax,BYTE PTR [ebx]
  44d89a:	shl    edi,0x8
  44d89d:	shl    ecx,0x8
  44d8a0:	inc    ebx
  44d8a1:	or     edi,eax
  44d8a3:	mov    ebp,DWORD PTR [esp+0x38]
  44d8a7:	mov    eax,ecx
  44d8a9:	shr    eax,0xb
  44d8ac:	mov    dx,WORD PTR [ebp+0x180]
  44d8b3:	movzx  ebp,dx
  44d8b6:	imul   eax,ebp
  44d8b9:	cmp    edi,eax
  44d8bb:	jae    0x44d90f
  44d8bd:	mov    esi,eax
  44d8bf:	mov    eax,0x800
  44d8c4:	sub    eax,ebp
  44d8c6:	mov    ebp,DWORD PTR [esp+0x58]
  44d8ca:	sar    eax,0x5
  44d8cd:	mov    ecx,DWORD PTR [esp+0x54]
  44d8d1:	lea    eax,[edx+eax*1]
  44d8d4:	mov    edx,DWORD PTR [esp+0x38]
  44d8d8:	mov    DWORD PTR [esp+0x50],ecx
  44d8dc:	mov    ecx,DWORD PTR [esp+0x78]
  44d8e0:	mov    WORD PTR [edx+0x180],ax
  44d8e7:	mov    eax,DWORD PTR [esp+0x5c]
  44d8eb:	mov    DWORD PTR [esp+0x54],ebp
  44d8ef:	mov    DWORD PTR [esp+0x58],eax
  44d8f3:	xor    eax,eax
  44d8f5:	cmp    DWORD PTR [esp+0x60],0x6
  44d8fa:	setg   al
  44d8fd:	add    ecx,0x664
  44d903:	lea    eax,[eax+eax*2]
  44d906:	mov    DWORD PTR [esp+0x60],eax
  44d90a:	jmp    0x44db83
  44d90f:	mov    esi,ecx
  44d911:	sub    edi,eax
  44d913:	sub    esi,eax
  44d915:	mov    eax,edx
  44d917:	shr    ax,0x5
  44d91b:	mov    ecx,DWORD PTR [esp+0x38]
  44d91f:	sub    dx,ax
  44d922:	cmp    esi,0xffffff
  44d928:	mov    WORD PTR [ecx+0x180],dx
  44d92f:	ja     0x44d947
  44d931:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d935:	je     0x44df88
  44d93b:	movzx  eax,BYTE PTR [ebx]
  44d93e:	shl    edi,0x8
  44d941:	shl    esi,0x8
  44d944:	inc    ebx
  44d945:	or     edi,eax
  44d947:	mov    ebp,DWORD PTR [esp+0x38]
  44d94b:	mov    edx,esi
  44d94d:	shr    edx,0xb
  44d950:	mov    cx,WORD PTR [ebp+0x198]
  44d957:	movzx  eax,cx
  44d95a:	imul   edx,eax
  44d95d:	cmp    edi,edx
  44d95f:	jae    0x44da48
  44d965:	mov    ebp,0x800
  44d96a:	mov    esi,edx
  44d96c:	sub    ebp,eax
  44d96e:	mov    DWORD PTR [esp+0x34],0x800
  44d976:	mov    eax,ebp
  44d978:	sar    eax,0x5
  44d97b:	lea    eax,[ecx+eax*1]
  44d97e:	mov    ecx,DWORD PTR [esp+0x38]
  44d982:	mov    WORD PTR [ecx+0x198],ax
  44d989:	mov    eax,DWORD PTR [esp+0x60]
  44d98d:	mov    ecx,DWORD PTR [esp+0x44]
  44d991:	shl    eax,0x5
  44d994:	add    eax,DWORD PTR [esp+0x78]
  44d998:	cmp    edx,0xffffff
  44d99e:	lea    ebp,[eax+ecx*2]
  44d9a1:	ja     0x44d9b9
  44d9a3:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d9a7:	je     0x44df88
  44d9ad:	movzx  eax,BYTE PTR [ebx]
  44d9b0:	shl    edi,0x8
  44d9b3:	shl    esi,0x8
  44d9b6:	inc    ebx
  44d9b7:	or     edi,eax
  44d9b9:	mov    dx,WORD PTR [ebp+0x1e0]
  44d9c0:	mov    eax,esi
  44d9c2:	shr    eax,0xb
  44d9c5:	movzx  ecx,dx
  44d9c8:	imul   eax,ecx
  44d9cb:	cmp    edi,eax
  44d9cd:	jae    0x44da2f
  44d9cf:	sub    DWORD PTR [esp+0x34],ecx
  44d9d3:	sar    DWORD PTR [esp+0x34],0x5
  44d9d8:	mov    esi,DWORD PTR [esp+0x34]
  44d9dc:	mov    DWORD PTR [esp+0x48],eax
  44d9e0:	cmp    DWORD PTR [esp+0x74],0x0
  44d9e5:	lea    eax,[edx+esi*1]
  44d9e8:	mov    WORD PTR [ebp+0x1e0],ax
  44d9ef:	je     0x44df88
  44d9f5:	xor    eax,eax
  44d9f7:	cmp    DWORD PTR [esp+0x60],0x6
  44d9fc:	mov    ebp,DWORD PTR [esp+0xa0]
  44da03:	mov    edx,DWORD PTR [esp+0x74]
  44da07:	setg   al
  44da0a:	lea    eax,[eax+eax*1+0x9]
  44da0e:	mov    DWORD PTR [esp+0x60],eax
  44da12:	mov    eax,DWORD PTR [esp+0x74]
  44da16:	sub    eax,DWORD PTR [esp+0x5c]
  44da1a:	mov    al,BYTE PTR [ebp+eax*1+0x0]
  44da1e:	mov    BYTE PTR [esp+0x73],al
  44da22:	mov    BYTE PTR [edx+ebp*1],al
  44da25:	inc    edx
  44da26:	mov    DWORD PTR [esp+0x74],edx
  44da2a:	jmp    0x44df60
  44da2f:	sub    esi,eax
  44da31:	sub    edi,eax
  44da33:	mov    eax,edx
  44da35:	shr    ax,0x5
  44da39:	sub    dx,ax
  44da3c:	mov    WORD PTR [ebp+0x1e0],dx
  44da43:	jmp    0x44db67
  44da48:	mov    eax,ecx
  44da4a:	sub    esi,edx
  44da4c:	shr    ax,0x5
  44da50:	mov    ebp,DWORD PTR [esp+0x38]
  44da54:	sub    cx,ax
  44da57:	sub    edi,edx
  44da59:	cmp    esi,0xffffff
  44da5f:	mov    WORD PTR [ebp+0x198],cx
  44da66:	ja     0x44da7e
  44da68:	cmp    ebx,DWORD PTR [esp+0x4c]
  44da6c:	je     0x44df88
  44da72:	movzx  eax,BYTE PTR [ebx]
  44da75:	shl    edi,0x8
  44da78:	shl    esi,0x8
  44da7b:	inc    ebx
  44da7c:	or     edi,eax
  44da7e:	mov    ecx,DWORD PTR [esp+0x38]
  44da82:	mov    eax,esi
  44da84:	shr    eax,0xb
  44da87:	mov    dx,WORD PTR [ecx+0x1b0]
  44da8e:	movzx  ecx,dx
  44da91:	imul   eax,ecx
  44da94:	cmp    edi,eax
  44da96:	jae    0x44dabb
  44da98:	mov    esi,eax
  44da9a:	mov    eax,0x800
  44da9f:	sub    eax,ecx
  44daa1:	mov    ebp,DWORD PTR [esp+0x38]
  44daa5:	sar    eax,0x5
  44daa8:	lea    eax,[edx+eax*1]
  44daab:	mov    WORD PTR [ebp+0x1b0],ax
  44dab2:	mov    eax,DWORD PTR [esp+0x58]
  44dab6:	jmp    0x44db5b
  44dabb:	mov    ecx,esi
  44dabd:	sub    edi,eax
  44dabf:	sub    ecx,eax
  44dac1:	mov    eax,edx
  44dac3:	shr    ax,0x5
  44dac7:	sub    dx,ax
  44daca:	mov    eax,DWORD PTR [esp+0x38]
  44dace:	cmp    ecx,0xffffff
  44dad4:	mov    WORD PTR [eax+0x1b0],dx
  44dadb:	ja     0x44daf3
  44dadd:	cmp    ebx,DWORD PTR [esp+0x4c]
  44dae1:	je     0x44df88
  44dae7:	movzx  eax,BYTE PTR [ebx]
  44daea:	shl    edi,0x8
  44daed:	shl    ecx,0x8
  44daf0:	inc    ebx
  44daf1:	or     edi,eax
  44daf3:	mov    esi,DWORD PTR [esp+0x38]
  44daf7:	mov    eax,ecx
  44daf9:	shr    eax,0xb
  44dafc:	mov    dx,WORD PTR [esi+0x1c8]
  44db03:	movzx  ebp,dx
  44db06:	imul   eax,ebp
  44db09:	cmp    edi,eax
  44db0b:	jae    0x44db2d
  44db0d:	mov    esi,eax
  44db0f:	mov    eax,0x800
  44db14:	sub    eax,ebp
  44db16:	mov    ebp,DWORD PTR [esp+0x38]
  44db1a:	sar    eax,0x5
  44db1d:	lea    eax,[edx+eax*1]
  44db20:	mov    WORD PTR [ebp+0x1c8],ax
  44db27:	mov    eax,DWORD PTR [esp+0x54]
  44db2b:	jmp    0x44db53
  44db2d:	mov    esi,ecx
  44db2f:	sub    edi,eax
  44db31:	sub    esi,eax
  44db33:	mov    eax,edx
  44db35:	shr    ax,0x5
  44db39:	sub    dx,ax
  44db3c:	mov    eax,DWORD PTR [esp+0x38]
  44db40:	mov    WORD PTR [eax+0x1c8],dx
  44db47:	mov    edx,DWORD PTR [esp+0x54]
  44db4b:	mov    eax,DWORD PTR [esp+0x50]
  44db4f:	mov    DWORD PTR [esp+0x50],edx
  44db53:	mov    ecx,DWORD PTR [esp+0x58]
  44db57:	mov    DWORD PTR [esp+0x54],ecx
  44db5b:	mov    ebp,DWORD PTR [esp+0x5c]
  44db5f:	mov    DWORD PTR [esp+0x5c],eax
  44db63:	mov    DWORD PTR [esp+0x58],ebp
  44db67:	xor    eax,eax
  44db69:	cmp    DWORD PTR [esp+0x60],0x6
  44db6e:	setg   al
  44db71:	mov    ecx,DWORD PTR [esp+0x78]
  44db75:	add    ecx,0xa68
  44db7b:	lea    eax,[eax+eax*2+0x8]
  44db7f:	mov    DWORD PTR [esp+0x60],eax
  44db83:	cmp    esi,0xffffff
  44db89:	ja     0x44dba1
  44db8b:	cmp    ebx,DWORD PTR [esp+0x4c]
  44db8f:	je     0x44df88
  44db95:	movzx  eax,BYTE PTR [ebx]
  44db98:	shl    edi,0x8
  44db9b:	shl    esi,0x8
  44db9e:	inc    ebx
  44db9f:	or     edi,eax
  44dba1:	mov    dx,WORD PTR [ecx]
  44dba4:	mov    eax,esi
  44dba6:	shr    eax,0xb
  44dba9:	movzx  ebp,dx
  44dbac:	imul   eax,ebp
  44dbaf:	cmp    edi,eax
  44dbb1:	jae    0x44dbe2
  44dbb3:	mov    DWORD PTR [esp+0x48],eax
  44dbb7:	mov    eax,0x800
  44dbbc:	sub    eax,ebp
  44dbbe:	shl    DWORD PTR [esp+0x44],0x4
  44dbc3:	sar    eax,0x5
  44dbc6:	mov    DWORD PTR [esp+0x2c],0x0
  44dbce:	lea    eax,[edx+eax*1]
  44dbd1:	mov    WORD PTR [ecx],ax
  44dbd4:	mov    eax,DWORD PTR [esp+0x44]
  44dbd8:	lea    ecx,[ecx+eax*1+0x4]
  44dbdc:	mov    DWORD PTR [esp+0x10],ecx
  44dbe0:	jmp    0x44dc54
  44dbe2:	sub    esi,eax
  44dbe4:	sub    edi,eax
  44dbe6:	mov    eax,edx
  44dbe8:	shr    ax,0x5
  44dbec:	sub    dx,ax
  44dbef:	cmp    esi,0xffffff
  44dbf5:	mov    WORD PTR [ecx],dx
  44dbf8:	ja     0x44dc10
  44dbfa:	cmp    ebx,DWORD PTR [esp+0x4c]
  44dbfe:	je     0x44df88
  44dc04:	movzx  eax,BYTE PTR [ebx]
  44dc07:	shl    edi,0x8
  44dc0a:	shl    esi,0x8
  44dc0d:	inc    ebx
  44dc0e:	or     edi,eax
  44dc10:	mov    dx,WORD PTR [ecx+0x2]
  44dc14:	mov    eax,esi
  44dc16:	shr    eax,0xb
  44dc19:	movzx  ebp,dx
  44dc1c:	imul   eax,ebp
  44dc1f:	cmp    edi,eax
  44dc21:	jae    0x44dc5e
  44dc23:	mov    DWORD PTR [esp+0x48],eax
  44dc27:	mov    eax,0x800
  44dc2c:	sub    eax,ebp
  44dc2e:	shl    DWORD PTR [esp+0x44],0x4
  44dc33:	sar    eax,0x5
  44dc36:	mov    DWORD PTR [esp+0x2c],0x8
  44dc3e:	lea    eax,[edx+eax*1]
  44dc41:	mov    edx,DWORD PTR [esp+0x44]
  44dc45:	mov    WORD PTR [ecx+0x2],ax
  44dc49:	lea    ecx,[ecx+edx*1+0x104]
  44dc50:	mov    DWORD PTR [esp+0x10],ecx
  44dc54:	mov    DWORD PTR [esp+0x30],0x3
  44dc5c:	jmp    0x44dc8d
  44dc5e:	sub    esi,eax
  44dc60:	sub    edi,eax
  44dc62:	mov    eax,edx
  44dc64:	mov    DWORD PTR [esp+0x48],esi
  44dc68:	shr    ax,0x5
  44dc6c:	mov    DWORD PTR [esp+0x2c],0x10
  44dc74:	sub    dx,ax
  44dc77:	mov    DWORD PTR [esp+0x30],0x8
  44dc7f:	mov    WORD PTR [ecx+0x2],dx
  44dc83:	add    ecx,0x204
  44dc89:	mov    DWORD PTR [esp+0x10],ecx
  44dc8d:	mov    ecx,DWORD PTR [esp+0x30]
  44dc91:	mov    edx,0x1
  44dc96:	mov    DWORD PTR [esp+0x28],ecx
  44dc9a:	lea    ebp,[edx+edx*1]
  44dc9d:	mov    esi,DWORD PTR [esp+0x10]
  44dca1:	add    esi,ebp
  44dca3:	cmp    DWORD PTR [esp+0x48],0xffffff
  44dcab:	ja     0x44dcc5
  44dcad:	cmp    ebx,DWORD PTR [esp+0x4c]
  44dcb1:	je     0x44df88
  44dcb7:	shl    DWORD PTR [esp+0x48],0x8
  44dcbc:	movzx  eax,BYTE PTR [ebx]
  44dcbf:	shl    edi,0x8
  44dcc2:	inc    ebx
  44dcc3:	or     edi,eax
  44dcc5:	mov    eax,DWORD PTR [esp+0x48]
  44dcc9:	mov    dx,WORD PTR [esi]
  44dccc:	shr    eax,0xb
  44dccf:	movzx  ecx,dx
  44dcd2:	imul   eax,ecx
  44dcd5:	cmp    edi,eax
  44dcd7:	jae    0x44dcf1
  44dcd9:	mov    DWORD PTR [esp+0x48],eax
  44dcdd:	mov    eax,0x800
  44dce2:	sub    eax,ecx
  44dce4:	sar    eax,0x5
  44dce7:	lea    eax,[edx+eax*1]
  44dcea:	mov    edx,ebp
  44dcec:	mov    WORD PTR [esi],ax
  44dcef:	jmp    0x44dd06
  44dcf1:	sub    DWORD PTR [esp+0x48],eax
  44dcf5:	sub    edi,eax
  44dcf7:	mov    eax,edx
  44dcf9:	shr    ax,0x5
  44dcfd:	sub    dx,ax
  44dd00:	mov    WORD PTR [esi],dx
  44dd03:	lea    edx,[ebp+0x1]
  44dd06:	mov    esi,DWORD PTR [esp+0x28]
  44dd0a:	dec    esi
  44dd0b:	mov    DWORD PTR [esp+0x28],esi
  44dd0f:	jne    0x44dc9a
  44dd11:	mov    cl,BYTE PTR [esp+0x30]
  44dd15:	mov    eax,0x1
  44dd1a:	shl    eax,cl
  44dd1c:	sub    edx,eax
  44dd1e:	add    edx,DWORD PTR [esp+0x2c]
  44dd22:	cmp    DWORD PTR [esp+0x60],0x3
  44dd27:	mov    DWORD PTR [esp+0xc],edx
  44dd2b:	jg     0x44df18
  44dd31:	add    DWORD PTR [esp+0x60],0x7
  44dd36:	cmp    edx,0x3
  44dd39:	mov    eax,edx
  44dd3b:	jle    0x44dd42
  44dd3d:	mov    eax,0x3
  44dd42:	mov    esi,DWORD PTR [esp+0x78]
  44dd46:	shl    eax,0x7
  44dd49:	mov    DWORD PTR [esp+0x24],0x6
  44dd51:	lea    eax,[esi+eax*1+0x360]
  44dd58:	mov    DWORD PTR [esp+0x8],eax
  44dd5c:	nop
  44dd5d:	xor    eax,eax
  44dd5f:	inc    eax
  44dd60:	nop
  44dd61:	lea    ebp,[eax+eax*1]
  44dd64:	mov    esi,DWORD PTR [esp+0x8]
  44dd68:	add    esi,ebp
  44dd6a:	cmp    DWORD PTR [esp+0x48],0xffffff
  44dd72:	ja     0x44dd8c
  44dd74:	cmp    ebx,DWORD PTR [esp+0x4c]
  44dd78:	je     0x44df88
  44dd7e:	shl    DWORD PTR [esp+0x48],0x8
  44dd83:	movzx  eax,BYTE PTR [ebx]
  44dd86:	shl    edi,0x8
  44dd89:	inc    ebx
  44dd8a:	or     edi,eax
  44dd8c:	mov    eax,DWORD PTR [esp+0x48]
  44dd90:	mov    dx,WORD PTR [esi]
  44dd93:	shr    eax,0xb
  44dd96:	movzx  ecx,dx
  44dd99:	imul   eax,ecx
  44dd9c:	cmp    edi,eax
  44dd9e:	jae    0x44ddb8
  44dda0:	mov    DWORD PTR [esp+0x48],eax
  44dda4:	mov    eax,0x800
  44dda9:	sub    eax,ecx
  44ddab:	sar    eax,0x5
  44ddae:	lea    eax,[edx+eax*1]
  44ddb1:	mov    WORD PTR [esi],ax
  44ddb4:	mov    eax,ebp
  44ddb6:	jmp    0x44ddcd
  44ddb8:	sub    DWORD PTR [esp+0x48],eax
  44ddbc:	sub    edi,eax
  44ddbe:	mov    eax,edx
  44ddc0:	shr    ax,0x5
  44ddc4:	sub    dx,ax
  44ddc7:	lea    eax,[ebp+0x1]
  44ddca:	mov    WORD PTR [esi],dx
  44ddcd:	mov    ebp,DWORD PTR [esp+0x24]
  44ddd1:	dec    ebp
  44ddd2:	mov    DWORD PTR [esp+0x24],ebp
  44ddd6:	jne    0x44dd61
  44ddd8:	lea    edx,[eax-0x40]
  44dddb:	cmp    edx,0x3
  44ddde:	mov    DWORD PTR [esp],edx
  44dde1:	jle    0x44df0e
  44dde7:	mov    eax,edx
  44dde9:	mov    esi,edx
  44ddeb:	sar    eax,1
  44dded:	and    esi,0x1
  44ddf0:	lea    ecx,[eax-0x1]
  44ddf3:	or     esi,0x2
  44ddf6:	cmp    edx,0xd
  44ddf9:	mov    DWORD PTR [esp+0x20],ecx
  44ddfd:	jg     0x44de1b
  44ddff:	mov    ebp,DWORD PTR [esp+0x78]
  44de03:	shl    esi,cl
  44de05:	add    edx,edx
  44de07:	mov    DWORD PTR [esp],esi
  44de0a:	lea    eax,[ebp+esi*2+0x0]
  44de0e:	sub    eax,edx
  44de10:	add    eax,0x55e
  44de15:	mov    DWORD PTR [esp+0x4],eax
  44de19:	jmp    0x44de71
  44de1b:	lea    edx,[eax-0x5]
  44de1e:	cmp    DWORD PTR [esp+0x48],0xffffff
  44de26:	ja     0x44de40
  44de28:	cmp    ebx,DWORD PTR [esp+0x4c]
  44de2c:	je     0x44df88
  44de32:	shl    DWORD PTR [esp+0x48],0x8
  44de37:	movzx  eax,BYTE PTR [ebx]
  44de3a:	shl    edi,0x8
  44de3d:	inc    ebx
  44de3e:	or     edi,eax
  44de40:	shr    DWORD PTR [esp+0x48],1
  44de44:	add    esi,esi
  44de46:	cmp    edi,DWORD PTR [esp+0x48]
  44de4a:	jb     0x44de53
  44de4c:	sub    edi,DWORD PTR [esp+0x48]
  44de50:	or     esi,0x1
  44de53:	dec    edx
  44de54:	jne    0x44de1e
  44de56:	mov    eax,DWORD PTR [esp+0x78]
  44de5a:	shl    esi,0x4
  44de5d:	mov    DWORD PTR [esp],esi
  44de60:	add    eax,0x644
  44de65:	mov    DWORD PTR [esp+0x20],0x4
  44de6d:	mov    DWORD PTR [esp+0x4],eax
  44de71:	mov    DWORD PTR [esp+0x1c],0x1
  44de79:	mov    eax,0x1
  44de7e:	mov    ebp,DWORD PTR [esp+0x4]
  44de82:	add    eax,eax
  44de84:	mov    DWORD PTR [esp+0x18],eax
  44de88:	add    ebp,eax
  44de8a:	cmp    DWORD PTR [esp+0x48],0xffffff
  44de92:	ja     0x44deac
  44de94:	cmp    ebx,DWORD PTR [esp+0x4c]
  44de98:	je     0x44df88
  44de9e:	shl    DWORD PTR [esp+0x48],0x8
  44dea3:	movzx  eax,BYTE PTR [ebx]
  44dea6:	shl    edi,0x8
  44dea9:	inc    ebx
  44deaa:	or     edi,eax
  44deac:	mov    eax,DWORD PTR [esp+0x48]
  44deb0:	mov    dx,WORD PTR [ebp+0x0]
  44deb4:	shr    eax,0xb
  44deb7:	movzx  esi,dx
  44deba:	imul   eax,esi
  44debd:	cmp    edi,eax
  44debf:	jae    0x44dedc
  44dec1:	mov    DWORD PTR [esp+0x48],eax
  44dec5:	mov    eax,0x800
  44deca:	sub    eax,esi
  44decc:	sar    eax,0x5
  44decf:	lea    eax,[edx+eax*1]
  44ded2:	mov    WORD PTR [ebp+0x0],ax
  44ded6:	mov    eax,DWORD PTR [esp+0x18]
  44deda:	jmp    0x44defb
  44dedc:	sub    DWORD PTR [esp+0x48],eax
  44dee0:	sub    edi,eax
  44dee2:	mov    eax,edx
  44dee4:	shr    ax,0x5
  44dee8:	sub    dx,ax
  44deeb:	mov    eax,DWORD PTR [esp+0x18]
  44deef:	mov    WORD PTR [ebp+0x0],dx
  44def3:	mov    edx,DWORD PTR [esp+0x1c]
  44def7:	inc    eax
  44def8:	or     DWORD PTR [esp],edx
  44defb:	mov    ecx,DWORD PTR [esp+0x20]
  44deff:	shl    DWORD PTR [esp+0x1c],1
  44df03:	dec    ecx
  44df04:	mov    DWORD PTR [esp+0x20],ecx
  44df08:	jne    0x44de7e
  44df0e:	mov    esi,DWORD PTR [esp]
  44df11:	inc    esi
  44df12:	mov    DWORD PTR [esp+0x5c],esi
  44df16:	je     0x44df71
  44df18:	mov    ecx,DWORD PTR [esp+0xc]
  44df1c:	mov    ebp,DWORD PTR [esp+0x74]
  44df20:	add    ecx,0x2
  44df23:	cmp    DWORD PTR [esp+0x5c],ebp
  44df27:	ja     0x44df88
  44df29:	mov    eax,DWORD PTR [esp+0xa0]
  44df30:	mov    edx,ebp
  44df32:	sub    eax,DWORD PTR [esp+0x5c]
  44df36:	add    edx,DWORD PTR [esp+0xa0]
  44df3d:	lea    esi,[eax+ebp*1]
  44df40:	mov    al,BYTE PTR [esi]
  44df42:	inc    esi
  44df43:	mov    BYTE PTR [esp+0x73],al
  44df47:	mov    BYTE PTR [edx],al
  44df49:	inc    edx
  44df4a:	inc    DWORD PTR [esp+0x74]
  44df4e:	dec    ecx
  44df4f:	je     0x44df60
  44df51:	mov    ebp,DWORD PTR [esp+0xa4]
  44df58:	cmp    DWORD PTR [esp+0x74],ebp
  44df5c:	jb     0x44df40
  44df5e:	jmp    0x44df71
  44df60:	mov    eax,DWORD PTR [esp+0xa4]
  44df67:	cmp    DWORD PTR [esp+0x74],eax
  44df6b:	jb     0x44d62c
  44df71:	cmp    DWORD PTR [esp+0x48],0xffffff
  44df79:	ja     0x44df90
  44df7b:	cmp    ebx,DWORD PTR [esp+0x4c]
  44df7f:	mov    eax,0x1
  44df84:	je     0x44dfaf
  44df86:	jmp    0x44df8f
  44df88:	mov    eax,0x1
  44df8d:	jmp    0x44dfaf
  44df8f:	inc    ebx
  44df90:	sub    ebx,DWORD PTR [esp+0x94]
  44df97:	xor    eax,eax
  44df99:	mov    edx,DWORD PTR [esp+0x9c]
  44dfa0:	mov    ecx,DWORD PTR [esp+0x74]
  44dfa4:	mov    DWORD PTR [edx],ebx
  44dfa6:	mov    ebx,DWORD PTR [esp+0xa8]
  44dfad:	mov    DWORD PTR [ebx],ecx
  44dfaf:	add    esp,0x7c
  44dfb2:	pop    ebx
  44dfb3:	pop    esi
  44dfb4:	pop    edi
  44dfb5:	pop    ebp
  44dfb6:	add    esi,DWORD PTR [ebx-0x4]
  44dfb9:	add    edi,DWORD PTR [ebx-0x8]
  44dfbc:	xor    eax,eax
  44dfbe:	lea    ecx,[esp-0x100]
  44dfc5:	mov    esp,ebp
  44dfc7:	push   eax
  44dfc8:	cmp    esp,ecx
  44dfca:	jne    0x44dfc7
  44dfcc:	mov    esp,ebp
  44dfce:	xor    ecx,ecx
  44dfd0:	pop    esi
  44dfd1:	lea    edi,[esi+0x4b000]
  44dfd7:	mov    eax,DWORD PTR [edi]
  44dfd9:	or     eax,eax
  44dfdb:	je     0x44e019
  44dfdd:	mov    ebx,DWORD PTR [edi+0x4]
  44dfe0:	lea    eax,[eax+esi*1+0x4e384]
  44dfe7:	add    ebx,esi
  44dfe9:	push   eax
  44dfea:	add    edi,0x8
  44dfed:	call   DWORD PTR [esi+0x4e3d4]
  44dff3:	xchg   ebp,eax
  44dff4:	mov    al,BYTE PTR [edi]
  44dff6:	inc    edi
  44dff7:	or     al,al
  44dff9:	je     0x44dfd7
  44dffb:	mov    ecx,edi
  44dffd:	push   edi
  44dffe:	dec    eax
  44dfff:	repnz scas al,BYTE PTR es:[edi]
  44e001:	push   ebp
  44e002:	call   DWORD PTR [esi+0x4e3d8]
  44e008:	or     eax,eax
  44e00a:	je     0x44e013
  44e00c:	mov    DWORD PTR [ebx],eax
  44e00e:	add    ebx,0x4
  44e011:	jmp    0x44dff4
  44e013:	call   DWORD PTR [esi+0x4e3e8]
  44e019:	mov    ebp,DWORD PTR [esi+0x4e3dc]
  44e01f:	lea    edi,[esi-0x1000]
  44e025:	mov    ebx,0x1000
  44e02a:	push   eax
  44e02b:	push   esp
  44e02c:	push   0x4
  44e02e:	push   ebx
  44e02f:	push   edi
  44e030:	call   ebp
  44e032:	lea    eax,[edi+0x21f]
  44e038:	and    BYTE PTR [eax],0x7f
  44e03b:	nop
  44e03c:	nop
  44e03d:	nop
  44e03e:	nop
  44e03f:	pop    eax
  44e040:	push   eax
  44e041:	push   esp
  44e042:	push   eax
  44e043:	push   ebx
  44e044:	push   edi
  44e045:	call   ebp
  44e047:	pop    eax
  44e048:	popa   
  44e049:	lea    eax,[esp-0x80]
  44e04d:	push   0x0
  44e04f:	cmp    esp,eax
  44e051:	jne    0x44e04d
  44e053:	sub    esp,0xffffff80
  44e056:	jmp    0x420ff4
	...
